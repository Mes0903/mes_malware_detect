
253e15531e596b8c046c917ec05397f7686f8a6c5230bb1daf9f45b0c81bf98e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a733
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x4298a7
  401084:	mov    ecx,DWORD PTR ds:0x429ff3
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a73b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x42a003
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a73f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x429fff
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a743
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a747
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a74f
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a753
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a757
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0x985292fe
  40178d:	or     al,0x7f
  40178f:	add    DWORD PTR [ebx+0x5cef8383],0xffffff83
  401796:	sub    DWORD PTR [edx],0x2d
  401799:	and    al,0x3e
  40179b:	cmp    ah,BYTE PTR es:[eax]
  40179e:	sub    al,0x7a
  4017a0:	cmp    eax,0x76507776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x20],ebx
  40183b:	or     al,0x6e
  40183d:	leave  
  40183e:	mov    ch,0x62
  401840:	cld    
  401841:	js     0x40187c
  401843:	aaa    
  401844:	ret    0xada2
  401847:	pop    eax
  401848:	lahf   
  401849:	pop    esp
  40184a:	sbb    cl,BYTE PTR [ebp*4+0x17cb83c6]
  401851:	sbb    eax,0x4943a554
  401856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401857:	retf   
  401858:	xchg   ebx,eax
  401859:	mov    cl,0xf6
  40185b:	jo     0x401818
  40185d:	int    0xfc
  40185f:	and    DWORD PTR ds:0x5f30d803,edx
  401865:	test   eax,0xddc7dc5b
  40186a:	lea    ebp,[ecx]
  40186c:	idiv   esi
  40186e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40186f:	inc    esp
  401870:	pop    ebx
  401871:	test   eax,0xbdf6e0ad
  401876:	loopne 0x4018cc
  401878:	or     DWORD PTR [ebx+eax*2],ecx
  40187b:	jl     0x4017fd
  40187d:	gs inc ebp
  40187f:	and    DWORD PTR [eax],0xffffffad
  401882:	sub    esp,DWORD PTR [edx+0x34]
  401885:	mov    cs,WORD PTR [ebp-0x11]
  401888:	lods   eax,DWORD PTR ds:[esi]
  401889:	loop   0x401881
  40188b:	xchg   ecx,eax
  40188c:	sti    
  40188d:	sub    ch,BYTE PTR [ebx+0x222c2c9a]
  401893:	aam    0xb6
  401895:	push   cs
  401896:	scas   al,BYTE PTR es:[edi]
  401897:	fidiv  WORD PTR [edi-0x7]
  40189a:	inc    edi
  40189b:	inc    edi
  40189c:	inc    ebp
  40189d:	pop    esp
  40189e:	xor    al,dl
  4018a0:	call   0x6569:0x7d22ac9e
  4018a7:	or     ch,bl
  4018a9:	popa   
  4018aa:	imul   ebp,DWORD PTR ds:0x2ada0c9e,0x66
  4018b1:	outs   dx,BYTE PTR ds:[esi]
  4018b2:	rcl    edi,cl
  4018b4:	jg     0x40185c
  4018b6:	sbb    DWORD PTR [ebp+0x5df44bb],ebx
  4018bc:	ret    0x22e9
  4018bf:	xchg   edi,eax
  4018c0:	(bad)  [ebx]
  4018c2:	fisttp DWORD PTR [eax]
  4018c4:	cwde   
  4018c5:	sbb    ecx,DWORD PTR [edx]
  4018c7:	jmp    0xe6e25812
  4018cc:	inc    ecx
  4018cd:	addr16 popa 
  4018cf:	cmp    BYTE PTR [ebp+edx*1+0x79],bh
  4018d3:	dec    edx
  4018d4:	(bad)  
  4018d5:	push   ss
  4018d6:	int3   
  4018d7:	xchg   ecx,eax
  4018d8:	icebp  
  4018d9:	adc    BYTE PTR [edi-0x13],ah
  4018dc:	add    DWORD PTR [ebx],0xc897ac17
  4018e2:	inc    ebx
  4018e3:	pop    edi
  4018e4:	cmp    eax,0x67374255
  4018e9:	adc    eax,0x4d5ad9ae
  4018ee:	dec    eax
  4018ef:	mov    bh,bl
  4018f1:	rcr    bh,0x38
  4018f4:	mov    ah,0x1b
  4018f6:	hlt    
  4018f7:	pop    es
  4018f8:	cwde   
  4018f9:	ret    0xac3f
  4018fc:	xchg   ecx,eax
  4018fd:	mov    ds:0xb6e3eefb,al
  401902:	inc    esi
  401903:	dec    eax
  401904:	inc    ebp
  401905:	xlat   BYTE PTR gs:[ebx]
  401907:	mov    dh,0x75
  401909:	retf   
  40190a:	push   eax
  40190b:	iret   
  40190c:	jg     0x4018bc
  40190e:	xor    al,0xb7
  401910:	(bad)  
  401912:	outs   dx,BYTE PTR ds:[esi]
  401913:	nop
  401914:	shl    ebx,0x96
  401917:	cmp    ebp,DWORD PTR [ebx]
  401919:	pushf  
  40191a:	outs   dx,DWORD PTR ds:[esi]
  40191b:	pop    esp
  40191c:	inc    edi
  40191d:	add    eax,0x956be2d9
  401922:	adc    al,0xd6
  401924:	xor    DWORD PTR ds:0x76c607b1,0xffffff8d
  40192b:	xchg   edx,eax
  40192c:	sub    al,0xb5
  40192e:	sbb    ecx,DWORD PTR [esi+ebx*8]
  401931:	loopne 0x401966
  401933:	sub    eax,0x254b60cb
  401938:	enter  0x9a05,0x86
  40193c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40193d:	outs   dx,BYTE PTR ds:[esi]
  40193e:	inc    edx
  40193f:	mov    ah,BYTE PTR [esi+0x26bcb6ff]
  401945:	jle    0x40191b
  401947:	fcmovb st,st(7)
  401949:	inc    ecx
  40194a:	jge    0x401981
  40194c:	shl    ch,0xd
  40194f:	dec    edi
  401950:	shl    DWORD PTR [ebp-0x4f],0x87
  401954:	adc    eax,edx
  401956:	cmp    eax,0xcec794bb
  40195b:	test   ax,0x3498
  40195f:	ja     0x4018f7
  401961:	mov    ax,ds:0xa25fc65
  401967:	adc    al,0x7e
  401969:	xor    dh,dh
  40196b:	call   0xeb1e0451
  401970:	nop
  401971:	xchg   ch,bl
  401973:	and    BYTE PTR [edi-0x7c4daa50],ah
  401979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40197a:	test   esi,ebx
  40197c:	and    edi,DWORD PTR [ebx]
  40197e:	mov    ah,0x91
  401980:	cdq    
  401981:	and    bh,BYTE PTR [ebx-0x3]
  401984:	fucomi st,st(3)
  401986:	xchg   edi,eax
  401987:	ret    0xa222
  40198a:	xchg   esi,eax
  40198b:	(bad)  
  40198c:	fldcw  WORD PTR [esp+eiz*2-0x4b]
  401990:	jp     0x4019a0
  401992:	sub    BYTE PTR [ebx+0x4407b3ba],ch
  401998:	mov    ds:0x931de968,al
  40199d:	xlat   BYTE PTR ds:[ebx]
  40199e:	xchg   esi,eax
  40199f:	in     al,0x8f
  4019a1:	or     BYTE PTR [ecx],dl
  4019a3:	sti    
  4019a4:	jns    0x40193f
  4019a6:	ret    
  4019a7:	mov    edx,edx
  4019a9:	cmp    ch,BYTE PTR [eax]
  4019ab:	jg     0x4019e1
  4019ad:	daa    
  4019ae:	(bad)  
  4019af:	cmp    edx,DWORD PTR [ebx]
  4019b1:	mov    ch,0x94
  4019b3:	sub    eax,0xa1b39943
  4019b8:	adc    ah,ch
  4019ba:	mov    WORD PTR [ebx],cs
  4019bc:	xchg   edi,eax
  4019bd:	jmp    0x4019ef
  4019bf:	cmp    DWORD PTR [edx+eiz*8],0xffffffd3
  4019c3:	and    BYTE PTR [eax-0x62],cl
  4019c6:	adc    ebp,DWORD PTR [edx-0x2d]
  4019c9:	sbb    eax,0x3b2ab828
  4019ce:	cld    
  4019cf:	xlat   BYTE PTR ds:[ebx]
  4019d0:	pop    ds
  4019d1:	mov    esi,0x5f8d25b8
  4019d6:	add    ebx,DWORD PTR [ecx+eax*2-0x77bbd252]
  4019dd:	jae    0x4019cc
  4019df:	xlat   BYTE PTR ds:[ebx]
  4019e0:	or     DWORD PTR [edi-0x2757fc89],esi
  4019e6:	lock inc esi
  4019e8:	int3   
  4019e9:	sub    ecx,eax
  4019eb:	(bad)  
  4019ed:	push   ss
  4019ee:	ins    BYTE PTR es:[edi],dx
  4019ef:	adc    ecx,edx
  4019f1:	aas    
  4019f2:	rol    BYTE PTR [edx+ebx*2],cl
  4019f5:	(bad)  
  4019f6:	out    dx,eax
  4019f7:	sub    DWORD PTR ds:0x46e93ccc,ebp
  4019fd:	sub    bh,BYTE PTR [ebp-0x4c1ab110]
  401a03:	cmp    BYTE PTR ds:0x55af45bc,ah
  401a09:	dec    edi
  401a0a:	or     al,0x68
  401a0c:	ret    
  401a0d:	fstp   TBYTE PTR [eax]
  401a0f:	sbb    BYTE PTR [eax-0x1a],ch
  401a12:	add    DWORD PTR [ebx*4-0x1359e1fa],ecx
  401a19:	ins    DWORD PTR es:[edi],dx
  401a1a:	aad    0x9
  401a1c:	cmp    ebp,DWORD PTR [edx+0xe]
  401a1f:	mov    eax,0xfbc08d2f
  401a24:	dec    edi
  401a25:	mov    bl,0x5a
  401a27:	pop    ebp
  401a28:	and    BYTE PTR [eax],ch
  401a2a:	jae    0x401a9a
  401a2c:	mov    eax,0xae1cfd1
  401a31:	xchg   ebp,eax
  401a32:	scas   al,BYTE PTR es:[edi]
  401a33:	pop    ebp
  401a34:	and    DWORD PTR [edx],edx
  401a36:	jbe    0x401a1a
  401a38:	push   esi
  401a39:	aas    
  401a3a:	mov    eax,0x280dd48b
  401a3f:	icebp  
  401a40:	mov    DWORD PTR [edi+ecx*8],ebp
  401a43:	or     DWORD PTR [eax-0xd],ebx
  401a46:	push   ebp
  401a47:	jmp    0x401a6b
  401a49:	js     0x4019f5
  401a4b:	scas   al,BYTE PTR es:[edi]
  401a4c:	stos   BYTE PTR es:[edi],al
  401a4d:	sbb    DWORD PTR [esi],ecx
  401a4f:	mov    BYTE PTR [edx+0x1f19ca6c],ah
  401a55:	inc    edx
  401a56:	pop    eax
  401a57:	jmp    FWORD PTR cs:[ecx]
  401a5a:	in     al,0x86
  401a5c:	push   ecx
  401a5d:	mov    edi,0x229b908a
  401a62:	sar    al,cl
  401a64:	push   ss
  401a65:	add    eax,0x4e94c137
  401a6a:	mov    dh,dh
  401a6c:	lock cli 
  401a6e:	mov    dl,0x4e
  401a70:	iret   
  401a71:	sub    edi,DWORD PTR [edx+esi*2-0x1f]
  401a75:	mov    bl,0x37
  401a77:	pop    ebx
  401a78:	fisttp QWORD PTR [edx-0x58b70d54]
  401a7e:	js     0x401afa
  401a80:	jecxz  0x401a37
  401a82:	pop    eax
  401a83:	data16 sbb BYTE PTR [edx+ecx*4+0x23a991d0],dl
  401a8b:	cmp    DWORD PTR [esi+0x798f884],edx
  401a91:	ret    
  401a92:	loope  0x401aca
  401a94:	add    ah,BYTE PTR [ebx-0x2b]
  401a97:	ret    
  401a98:	iret   
  401a99:	mov    dh,0x58
  401a9b:	fisub  DWORD PTR [esp+ebp*4]
  401a9e:	inc    ecx
  401a9f:	int    0x74
  401aa1:	push   edi
  401aa2:	mov    dh,BYTE PTR [eax-0x4f]
  401aa5:	push   ds
  401aa6:	repz js 0x401ad6
  401aa9:	and    eax,0x21017362
  401aae:	push   esi
  401aaf:	call   0xae6e:0x90b37ff5
  401ab6:	jns    0x401aee
  401ab8:	fcom   DWORD PTR [ecx-0x18b13af8]
  401abe:	jl     0x401ae3
  401ac0:	stos   BYTE PTR es:[edi],al
  401ac1:	sub    BYTE PTR [eax-0x2d7a1f12],dh
  401ac7:	inc    edi
  401ac8:	xchg   edi,eax
  401ac9:	test   eax,0x273dab6a
  401ace:	xlat   BYTE PTR ds:[ebx]
  401acf:	jbe    0x401a7b
  401ad1:	xchg   ecx,eax
  401ad2:	addr16 mov ecx,0x4e08ce68
  401ad8:	(bad)  
  401ad9:	or     ebp,ebx
  401adb:	or     eax,0x18112e88
  401ae0:	add    ecx,DWORD PTR [edi+0x3c7154db]
  401ae6:	pop    ds
  401ae7:	les    ebp,FWORD PTR [edi-0xc]
  401aea:	enter  0xa98f,0xb8
  401aee:	xchg   esp,eax
  401aef:	add    eax,0x1f34a5e1
  401af4:	(bad)  
  401af5:	sub    DWORD PTR [ecx+0x59],esp
  401af8:	nop
  401af9:	ror    BYTE PTR [edx+0xffedf8b],1
  401aff:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  401b01:	jmp    0x401ac9
  401b03:	into   
  401b04:	loopne 0x401aee
  401b06:	iret   
  401b07:	jl     0x401b59
  401b09:	inc    esi
  401b0a:	out    dx,eax
  401b0b:	mov    edx,0x94d5ef97
  401b10:	push   cs
  401b11:	push   ss
  401b12:	bnd jae 0x401b2b
  401b15:	mov    ebp,DWORD PTR [eax+0x47]
  401b18:	leave  
  401b19:	sub    ecx,DWORD PTR [edi+0x23]
  401b1c:	sbb    BYTE PTR [ebx-0x56738513],cl
  401b22:	ds ss sti 
  401b25:	imul   esi,eax,0x98a5a136
  401b2b:	sub    eax,0x1e3a696b
  401b30:	sub    eax,0xeb1a1db6
  401b35:	inc    esp
  401b36:	xlat   BYTE PTR ds:[ebx]
  401b37:	cs and al,0xe2
  401b3a:	jmp    0x401b34
  401b3c:	loop   0x401ae0
  401b3e:	fadd   st(0),st
  401b40:	int    0xdb
  401b42:	and    BYTE PTR [edx-0x38a62068],bl
  401b48:	out    0x57,al
  401b4a:	scas   al,BYTE PTR es:[edi]
  401b4b:	pop    ds
  401b4c:	fs mul bh
  401b4f:	mov    bh,0xc5
  401b51:	shl    ch,cl
  401b53:	jecxz  0x401b62
  401b55:	inc    ebx
  401b56:	fidivr WORD PTR [esi+0x61428c92]
  401b5c:	mov    al,al
  401b5e:	jecxz  0x401b91
  401b60:	cmc    
  401b61:	hlt    
  401b62:	mov    DWORD PTR [esi-0x3f],ecx
  401b65:	pop    eax
  401b66:	and    eax,0x8b4c3a2d
  401b6b:	pop    esp
  401b6c:	or     DWORD PTR [ecx+0x7a6f1b24],ecx
  401b72:	call   0x27b7:0x7c8cd1d1
  401b79:	outs   dx,BYTE PTR ds:[esi]
  401b7a:	sub    dl,cl
  401b7c:	shl    DWORD PTR cs:[ecx],0xd1
  401b80:	mov    BYTE PTR [edi-0x12adaaf3],cl
  401b86:	sti    
  401b87:	pop    ebp
  401b88:	jg     0x401bec
  401b8a:	xchg   esp,eax
  401b8b:	lea    ecx,ds:0x6b10ce5
  401b91:	pop    edx
  401b92:	and    BYTE PTR [edi-0x6],ah
  401b95:	dec    ecx
  401b96:	pop    ebx
  401b97:	jo     0x401bf4
  401b99:	sahf   
  401b9a:	in     eax,0xe6
  401b9c:	ss cmp eax,0xc318c31a
  401ba2:	rol    BYTE PTR [ebp+0x79],cl
  401ba5:	mov    esp,0xb8fbb945
  401baa:	cdq    
  401bab:	mov    dl,0x3e
  401bad:	nop
  401bae:	ret    0x1a93
  401bb1:	das    
  401bb2:	xor    DWORD PTR [esi],0xffffffe7
  401bb5:	mov    ebp,0x49023f0
  401bba:	icebp  
  401bbb:	xchg   edx,eax
  401bbc:	scas   eax,DWORD PTR es:[edi]
  401bbd:	dec    esi
  401bbe:	mov    edi,0x8eb9e77a
  401bc3:	fistp  DWORD PTR [ebp-0x3b]
  401bc6:	cmp    DWORD PTR [ebp+0x78],ecx
  401bc9:	mov    dh,0x9c
  401bcb:	call   FWORD PTR [edi+0x64]
  401bce:	outs   dx,DWORD PTR ds:[esi]
  401bcf:	mov    WORD PTR [edi-0x7bb39a21],es
  401bd5:	cdq    
  401bd6:	fwait
  401bd7:	clc    
  401bd8:	add    al,0xf7
  401bda:	inc    esp
  401bdb:	jns    0x401be2
  401bdd:	popa   
  401bde:	mov    BYTE PTR [esi+0x46d88c71],0xe9
  401be5:	dec    esi
  401be6:	int3   
  401be7:	fcmovnu st,st(1)
  401be9:	inc    eax
  401bea:	cmp    eax,0xe727ef41
  401bef:	adc    eax,0xffffffe6
  401bf2:	mov    cl,0x33
  401bf4:	or     eax,0xccf0ccbd
  401bf9:	fcomp  QWORD PTR [eax]
  401bfb:	(bad)  [ecx]
  401bfd:	add    eax,edi
  401bff:	(bad)  
  401c00:	aad    0x16
  401c02:	fmul   st,st(3)
  401c04:	push   esi
  401c05:	outs   dx,BYTE PTR ds:[esi]
  401c06:	xchg   BYTE PTR [esi+0x7],dh
  401c09:	pop    ecx
  401c0a:	fadd   QWORD PTR [ebx+0x56]
  401c0d:	xchg   esp,eax
  401c0f:	mov    cl,0xbb
  401c11:	fsubr  st(7),st
  401c13:	out    dx,eax
  401c14:	in     eax,dx
  401c15:	mov    eax,ds:0x459791c
  401c1a:	pcmpeqw mm5,QWORD PTR [ebp+0x35]
  401c1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c1f:	push   cs
  401c20:	push   ebp
  401c21:	push   esp
  401c22:	aam    0xae
  401c24:	pop    esp
  401c25:	push   es
  401c26:	mov    ebp,0xf52ec67e
  401c2b:	mov    esi,0x52d3ddf4
  401c30:	outs   dx,DWORD PTR ds:[esi]
  401c31:	jmp    0x401be2
  401c33:	mov    cl,0x36
  401c35:	test   eax,0xacb1b8db
  401c3a:	pop    ds
  401c3b:	mov    dh,0xab
  401c3d:	jns    0x401ca8
  401c3f:	lock (bad) 
  401c41:	in     eax,dx
  401c42:	sbb    al,0xbe
  401c44:	add    DWORD PTR [ecx-0x40],edi
  401c47:	imul   ebx,eax,0xee1a978c
  401c4d:	jne    0x401bd0
  401c4f:	jecxz  0x401c3b
  401c51:	pop    esi
  401c52:	jno    0x401bd7
  401c54:	mov    fs,WORD PTR [edx+edx*8+0x5107645e]
  401c5b:	inc    esi
  401c5c:	push   esp
  401c5d:	sbb    al,0xd3
  401c5f:	call   0x20cb38ec
  401c64:	shl    BYTE PTR [eax+0x63],0xdd
  401c68:	mov    ebp,0x71316817
  401c6d:	sub    cl,BYTE PTR [ecx]
  401c6f:	in     eax,dx
  401c70:	popa   
  401c71:	push   esp
  401c72:	(bad)  
  401c73:	push   edx
  401c74:	dec    edi
  401c75:	sar    dh,cl
  401c77:	adc    DWORD PTR [ebp+0x60],edi
  401c7a:	mov    eax,ds:0x31ed7a7b
  401c7f:	stc    
  401c80:	cwde   
  401c81:	dec    ecx
  401c82:	adc    DWORD PTR [edx-0x79],edi
  401c85:	shl    BYTE PTR [edi],1
  401c87:	mov    cl,0x99
  401c89:	jp     0x401cd9
  401c8b:	icebp  
  401c8c:	and    ch,al
  401c8e:	sub    al,0xb0
  401c90:	lods   al,BYTE PTR ds:[esi]
  401c91:	pop    esi
  401c92:	pop    es
  401c93:	aad    0x5e
  401c95:	adc    DWORD PTR [edx+ebx*1],0xffffffe0
  401c99:	(bad)  
  401c9a:	push   ds
  401c9b:	cmc    
  401c9c:	mov    edi,0x22cf5a96
  401ca1:	dec    ecx
  401ca2:	and    al,0x2b
  401ca4:	shr    DWORD PTR ds:0x7ded9a76,1
  401caa:	pop    ds
  401cab:	add    esp,DWORD PTR [ebp+0x217c099e]
  401cb1:	ss mov es,ebx
  401cb4:	adc    ebx,ebp
  401cb6:	xor    bl,BYTE PTR [edi]
  401cb8:	jb     0x401d20
  401cba:	xchg   edi,eax
  401cbb:	jnp    0x401cc1
  401cbd:	xchg   esi,eax
  401cbe:	push   ebp
  401cbf:	bound  esi,QWORD PTR [ecx+0x3a]
  401cc2:	and    BYTE PTR [edi-0x34e5f3f3],0x8
  401cc9:	test   eax,0x8248823
  401cce:	das    
  401ccf:	push   esi
  401cd0:	std    
  401cd1:	jg     0x401c62
  401cd3:	mov    al,ds:0x996240b0
  401cd8:	out    dx,al
  401cd9:	mov    cs,ebp
  401cdb:	call   0x78263ef1
  401ce0:	and    esp,DWORD PTR [ebp-0x54d8c9bf]
  401ce6:	push   ecx
  401ce7:	icebp  
  401ce8:	(bad)  
  401ce9:	push   edi
  401cea:	lock ror BYTE PTR [edi-0x44c59fcb],cl
  401cf1:	(bad)  
  401cf2:	fstp   DWORD PTR [ecx]
  401cf4:	inc    ebp
  401cf5:	cdq    
  401cf6:	add    al,0xc6
  401cf8:	xor    BYTE PTR [edi-0x1c79bed2],dh
  401cfe:	pop    ecx
  401cff:	and    al,0x79
  401d01:	js     0x401cbd
  401d03:	pop    ecx
  401d04:	ret    0xf042
  401d07:	mov    al,0x17
  401d09:	jecxz  0x401c96
  401d0b:	mov    ebp,0x59df6f6c
  401d10:	xchg   bh,dl
  401d12:	aaa    
  401d13:	mov    ?,WORD PTR [ebx]
  401d15:	cwde   
  401d16:	mov    eax,ds:0x70b4ffde
  401d1b:	enter  0x7b4c,0xec
  401d1f:	nop
  401d20:	inc    esp
  401d21:	stc    
  401d22:	out    dx,eax
  401d23:	test   al,0xed
  401d25:	mov    ds,WORD PTR [edi+0x1f04930b]
  401d2b:	ds sti 
  401d2d:	pop    ebx
  401d2e:	les    ebx,FWORD PTR [edi]
  401d30:	sbb    eax,0x1abc0c93
  401d35:	out    0xb6,al
  401d37:	or     DWORD PTR [ecx],0xf36ef679
  401d3d:	dec    edi
  401d3e:	pop    esi
  401d3f:	jb     0x401cd8
  401d41:	or     DWORD PTR [ebp-0x39],0x32d7c4a0
  401d48:	out    0xb2,al
  401d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d4b:	hlt    
  401d4c:	call   0xc76d:0xba2e9622
  401d53:	out    dx,al
  401d54:	lahf   
  401d55:	pop    es
  401d56:	add    eax,0x454df437
  401d5b:	dec    esi
  401d5c:	adc    ah,BYTE PTR [ebp+0x1d]
  401d5f:	sub    al,0x1
  401d61:	cld    
  401d62:	pop    edi
  401d63:	das    
  401d64:	leave  
  401d65:	jb     0x401d18
  401d67:	mov    eax,0x78f64439
  401d6c:	jmp    FWORD PTR [esi]
  401d6e:	adc    DWORD PTR [eax+0x3d],eax
  401d71:	dec    edx
  401d72:	repnz push esi
  401d74:	push   es
  401d75:	pop    edx
  401d76:	push   edi
  401d77:	jge    0x401d3b
  401d79:	or     eax,0x5106d147
  401d7e:	mov    ?,ecx
  401d80:	icebp  
  401d81:	cli    
  401d82:	popf   
  401d83:	mov    al,0xd8
  401d85:	pop    ecx
  401d86:	pop    ebx
  401d87:	cmp    cl,BYTE PTR [esi]
  401d89:	call   0x8ba6:0xb4dd6a31
  401d90:	js     0x401db2
  401d92:	dec    esp
  401d93:	xor    cl,BYTE PTR [esi]
  401d95:	jne    0x401d8d
  401d97:	ds test eax,0x9b779658
  401d9d:	push   ebp
  401d9e:	sub    eax,0xbd4bae58
  401da3:	fisub  DWORD PTR [eax+eiz*8-0x71]
  401da7:	test   al,0xf6
  401da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401daa:	fidivr WORD PTR ds:0xe0ac9108
  401db0:	mov    eax,0xcaf64567
  401db5:	imul   ebx,DWORD PTR [edx+0x66815014],0x9
  401dbc:	pop    ds
  401dbd:	ins    DWORD PTR es:[edi],dx
  401dbe:	ss pop esi
  401dc0:	xor    eax,0xb3abab46
  401dc5:	sub    BYTE PTR ds:[ebx-0x1e4abb55],dh
  401dcc:	dec    ecx
  401dcd:	in     al,dx
  401dce:	cmp    eax,0xf2997c76
  401dd3:	jp     0x401d93
  401dd5:	push   ebp
  401dd6:	or     DWORD PTR [eax+0x29],0x491bf131
  401ddd:	lds    edx,FWORD PTR [esi+0x12]
  401de0:	ins    BYTE PTR es:[edi],dx
  401de1:	sbb    bl,BYTE PTR [ebp+0x6d]
  401de4:	imul   edi,DWORD PTR [eax+ebx*8+0x5b],0x58
  401de9:	aam    0xca
  401deb:	mov    ch,0x4d
  401ded:	es std 
  401def:	push   edx
  401df0:	shl    DWORD PTR [esi-0x2a],1
  401df3:	inc    ebx
  401df4:	mov    dh,BYTE PTR [eax]
  401df6:	into   
  401df7:	imul   esi,ebp,0x13c71851
  401dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dfe:	lahf   
  401dff:	sub    ebp,DWORD PTR [eax+0x3d]
  401e02:	xchg   ecx,eax
  401e03:	sub    BYTE PTR [ebx],0x2d
  401e06:	jno    0x401e29
  401e08:	dec    edi
  401e09:	pop    ds
  401e0a:	push   esi
  401e0b:	mov    cl,0xd2
  401e0d:	adc    eax,0xf510ff62
  401e12:	cmp    ebx,0x3e
  401e15:	(bad)  
  401e16:	dec    esi
  401e17:	xchg   DWORD PTR [eax],ebx
  401e19:	shl    DWORD PTR [ecx],1
  401e1b:	push   edi
  401e1c:	pop    edx
  401e1d:	adc    eax,0x54f18332
  401e22:	stc    
  401e23:	dec    edx
  401e24:	sub    al,0xbf
  401e26:	add    eax,0xa53fc5ca
  401e2b:	and    al,0x3d
  401e2d:	mov    ds:0x82c63c72,al
  401e32:	fistp  WORD PTR [esi-0x4e]
  401e35:	shl    ebp,cl
  401e37:	fxch   st(3)
  401e39:	fwait
  401e3a:	aam    0x29
  401e3c:	sub    al,0x81
  401e3e:	xchg   edi,eax
  401e3f:	xor    ch,BYTE PTR [ecx+0x737b8adb]
  401e45:	sub    ch,BYTE PTR [edi]
  401e47:	push   0x49
  401e49:	mov    esp,0xee20a44c
  401e4e:	mov    eax,ds:0xce32cddf
  401e53:	mov    eax,0x7f0b3b65
  401e58:	jae    0x401e3e
  401e5a:	mov    esp,0x99de47af
  401e5f:	sti    
  401e60:	retf   
  401e61:	push   ebp
  401e62:	lods   al,BYTE PTR ds:[esi]
  401e63:	jns    0x401ec3
  401e65:	jge    0x401e26
  401e67:	add    cl,ah
  401e69:	ret    0x28b9
  401e6c:	popa   
  401e6d:	pop    edx
  401e6e:	fdiv   QWORD PTR [eax-0x41d49fd1]
  401e74:	lods   al,BYTE PTR ds:[esi]
  401e75:	xlat   BYTE PTR ds:[ebx]
  401e76:	mov    dl,0xea
  401e78:	push   edx
  401e79:	fstp   QWORD PTR [edi+0x2b]
  401e7c:	and    BYTE PTR ds:0x850cce1d,al
  401e82:	icebp  
  401e83:	mov    dh,BYTE PTR [ecx+0x6be266cb]
  401e89:	or     eax,0xde79c235
  401e8e:	xchg   ecx,eax
  401e8f:	add    bh,cl
  401e91:	sub    eax,0x69fef1c1
  401e96:	xchg   ebp,eax
  401e97:	ret    0xbe9
  401e9a:	(bad)  
  401e9b:	stc    
  401e9c:	jmp    0x15dff903
  401ea1:	rol    esp,cl
  401ea3:	mov    ch,0x98
  401ea5:	mov    bl,0xe1
  401ea7:	ins    BYTE PTR es:[edi],dx
  401ea8:	cmp    DWORD PTR [esi],ecx
  401eaa:	arpl   WORD PTR [ecx],cx
  401eac:	loopne 0x401e8a
  401eae:	inc    esi
  401eaf:	xor    al,0xa6
  401eb1:	jnp    0x401f00
  401eb3:	test   eax,0xa7b39882
  401eb8:	mov    bl,0x63
  401eba:	pop    ss
  401ebb:	push   ebx
  401ebc:	cwde   
  401ebd:	sub    esp,eax
  401ebf:	loop   0x401e5a
  401ec1:	fdivr  DWORD PTR [eax-0x52dd09e2]
  401ec7:	lock adc ebx,DWORD PTR [edi+edi*1-0x3b]
  401ecc:	sub    BYTE PTR ds:0xf38e6586,ch
  401ed2:	xor    DWORD PTR [edx-0x7fef4d3b],esp
  401ed8:	imul   eax,DWORD PTR ds:[edi+0x6c],0x6ac299d0
  401ee0:	jb     0x401ed1
  401ee2:	or     al,0x80
  401ee4:	add    bl,bl
  401ee6:	inc    ebp
  401ee7:	lahf   
  401ee8:	sbb    ebx,esi
  401eea:	sub    eax,0x6ec4e1f3
  401eef:	fld    QWORD PTR gs:[eax]
  401ef2:	fstp   TBYTE PTR [ebp+0x77a1fb2e]
  401ef8:	test   DWORD PTR [ebx+0x680d21e0],0xadba623e
  401f02:	rcr    DWORD PTR [edi+0x11],0xe9
  401f06:	(bad)  
  401f07:	hlt    
  401f08:	(bad)  
  401f09:	in     eax,dx
  401f0a:	sbb    BYTE PTR [edi-0x61],bl
  401f0d:	xchg   ebx,eax
  401f0e:	das    
  401f0f:	into   
  401f10:	push   edx
  401f11:	sbb    dl,ch
  401f13:	mov    dl,0x1e
  401f15:	js     0x401ee8
  401f17:	jb     0x401f77
  401f19:	push   eax
  401f1a:	mov    ah,BYTE PTR [ebx]
  401f1c:	mov    bl,0xa4
  401f1e:	fwait
  401f1f:	push   0xb52abe46
  401f24:	xchg   BYTE PTR [eax-0x8e6d45d],bl
  401f2a:	jb     0x401ee4
  401f2c:	sub    eax,0x658f19f3
  401f31:	dec    esi
  401f32:	mov    BYTE PTR [esi],bh
  401f34:	cli    
  401f35:	frstor [edx+0x7a63cb23]
  401f3b:	mov    bl,0x19
  401f3d:	repnz inc ebx
  401f3f:	or     al,cl
  401f41:	es fwait
  401f43:	sbb    esi,DWORD PTR [ecx]
  401f45:	in     eax,dx
  401f46:	sbb    al,0xc9
  401f48:	mov    esi,0xf2861bc7
  401f4d:	sbb    DWORD PTR [eax],esi
  401f4f:	test   al,0x40
  401f51:	lea    eax,[ecx]
  401f53:	pop    edx
  401f54:	sub    eax,0xead3e38
  401f59:	cmp    dh,ah
  401f5b:	xor    eax,0x6248de0f
  401f60:	push   es
  401f61:	jbe    0x401f9b
  401f63:	ror    BYTE PTR [edi],0x68
  401f66:	test   al,0x44
  401f68:	dec    ebp
  401f69:	push   ebp
  401f6a:	or     ecx,DWORD PTR [ebp+0x70]
  401f6d:	or     DWORD PTR [eax+0x7b35bdec],ebx
  401f73:	sbb    al,0x96
  401f75:	mov    ds:0xd96c4890,eax
  401f7a:	jno    0x401f52
  401f7c:	out    dx,eax
  401f7d:	dec    esp
  401f7e:	jecxz  0x401f1e
  401f80:	mov    esi,0xbf876627
  401f85:	pop    ebp
  401f86:	shr    DWORD PTR [edi+0x4c],1
  401f89:	stc    
  401f8a:	les    ebp,FWORD PTR [ecx]
  401f8c:	xchg   esp,eax
  401f8d:	mov    bl,0x57
  401f8f:	ins    DWORD PTR es:[edi],dx
  401f90:	xor    cl,ch
  401f92:	inc    edx
  401f93:	fimul  DWORD PTR [ebx]
  401f95:	inc    eax
  401f96:	jno    0x401f78
  401f98:	sub    BYTE PTR [esi-0xc],ah
  401f9b:	add    BYTE PTR [eax-0x68],ah
  401f9e:	mov    eax,ds:0x6022b375
  401fa3:	and    eax,0x54739cf1
  401fa8:	outs   dx,BYTE PTR ds:[esi]
  401fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401faa:	sub    BYTE PTR [ebp-0x86ca12],cl
  401fb0:	push   esi
  401fb1:	data16 aad 0xa8
  401fb4:	test   DWORD PTR [ecx],esp
  401fb6:	adc    dh,BYTE PTR [ebp-0x46]
  401fb9:	imul   edi,DWORD PTR [ebp-0x545bae36],0xf1259c7d
  401fc3:	xchg   BYTE PTR [ecx],cl
  401fc5:	push   esi
  401fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fc7:	push   0x3f093692
  401fcc:	sbb    ch,BYTE PTR [ebp-0x6dca66c2]
  401fd2:	sbb    al,0xb9
  401fd4:	push   esi
  401fd5:	push   cs
  401fd6:	inc    edx
  401fd7:	push   esi
  401fd8:	adc    al,0x30
  401fda:	rol    DWORD PTR [eax+0x6640ff28],1
  401fe0:	adc    al,0xaa
  401fe2:	xor    cl,BYTE PTR [ecx]
  401fe4:	sbb    cl,BYTE PTR [ebp-0x72975691]
  401fea:	xchg   esp,eax
  401feb:	jg     0x401fef
  401fed:	sub    dl,BYTE PTR [ebx-0x39]
  401ff0:	cs popa 
  401ff2:	stos   DWORD PTR es:[edi],eax
  401ff3:	int    0xcb
  401ff5:	cmp    dh,0xab
  401ff8:	pop    eax
  401ff9:	dec    di
  401ffb:	outs   dx,DWORD PTR ds:[esi]
  401ffc:	and    BYTE PTR [esi+eax*2+0x77ab1eb],bl
  402003:	into   
  402004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402005:	add    DWORD PTR [edx+0x1e1efbcc],esi
  40200b:	or     DWORD PTR [ecx],0xa39b0650
  402011:	outs   dx,BYTE PTR ds:[esi]
  402012:	add    bh,bh
  402014:	inc    eax
  402015:	test   DWORD PTR [esi],0xf87188b
  40201b:	mov    cl,0x55
  40201d:	lods   eax,DWORD PTR ds:[esi]
  40201e:	push   esi
  40201f:	int3   
  402020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402021:	loope  0x402086
  402023:	and    DWORD PTR [ecx-0x56],ebx
  402026:	int3   
  402027:	jg     0x402096
  402029:	fadd   DWORD PTR [edi-0x36]
  40202c:	fistp  DWORD PTR [ebp+0x4200833]
  402032:	call   0x64cad288
  402037:	hlt    
  402038:	xor    DWORD PTR [ecx],esi
  40203a:	outs   dx,DWORD PTR ds:[esi]
  40203b:	repz inc eax
  40203d:	inc    ecx
  40203e:	retf   
  40203f:	mov    esp,0x71be0ce7
  402044:	in     al,dx
  402045:	retf   
  402046:	xor    DWORD PTR [edx+eax*4+0x36],ecx
  40204a:	mov    esp,0xe1a2dd78
  40204f:	xor    al,0x98
  402051:	push   es
  402052:	clc    
  402053:	cmp    edi,0x5b
  402056:	jae    0x402042
  402058:	xor    al,0x66
  40205a:	or     ch,BYTE PTR [ebx+0x19c5dfd6]
  402060:	sbb    edx,DWORD PTR [eax+0x2efb665]
  402066:	jg     0x4020d2
  402068:	push   edx
  402069:	add    ecx,edx
  40206b:	out    0xb3,al
  40206d:	dec    esp
  40206e:	leave  
  40206f:	add    eax,0x9f6dbaa2
  402074:	cli    
  402075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402076:	pop    ss
  402077:	jns    0x402052
  402079:	dec    esp
  40207a:	adc    eax,0x3bd9188a
  40207f:	test   al,bl
  402081:	inc    edx
  402082:	xchg   esi,eax
  402083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402085:	mov    ch,0x57
  402087:	mov    al,ds:0x20a15086
  40208c:	ja     0x402024
  40208e:	aaa    
  40208f:	pusha  
  402090:	retf   0x214b
  402093:	cld    
  402094:	pusha  
  402095:	loopne 0x402107
  402097:	je     0x402097
  402099:	(bad)  
  40209a:	je     0x4020a8
  40209c:	shr    esi,1
  40209e:	aam    0x36
  4020a0:	jns    0x4020be
  4020a2:	ja     0x40204e
  4020a4:	test   al,0xe1
  4020a6:	sbb    al,0xa8
  4020a8:	xor    ebx,ecx
  4020aa:	mov    ds:0x4f9347b1,eax
  4020af:	pop    eax
  4020b0:	repnz ins DWORD PTR es:[edi],dx
  4020b2:	test   DWORD PTR [edx-0x6d],eax
  4020b5:	push   edi
  4020b6:	ret    0x9f25
  4020b9:	test   al,0x61
  4020bb:	xchg   ebp,eax
  4020bc:	push   esp
  4020bd:	out    0xda,al
  4020bf:	push   ebx
  4020c0:	out    dx,al
  4020c1:	adc    cl,ch
  4020c3:	sub    ch,ah
  4020c5:	add    bh,ch
  4020c7:	cwde   
  4020c8:	mov    ebx,0xf11ad040
  4020cd:	pop    ecx
  4020ce:	mov    bl,0x72
  4020d0:	mov    eax,0x5e593ee7
  4020d5:	js     0x402060
  4020d7:	mov    dh,0x22
  4020d9:	jno    0x402154
  4020db:	jnp    0x4020c7
  4020dd:	add    DWORD PTR [edi-0x36ce273c],0x36
  4020e4:	cmp    eax,0x9108a33d
  4020e9:	jmp    0x402118
  4020eb:	fs jae 0x402113
  4020ee:	sub    dl,BYTE PTR [eax]
  4020f0:	mov    ebp,fs
  4020f2:	bound  eax,QWORD PTR [edi]
  4020f4:	xchg   edi,eax
  4020f5:	dec    edi
  4020f6:	inc    ebp
  4020f8:	cmp    al,0xe
  4020fa:	adc    edi,DWORD PTR [esi+0x6ecc5f48]
  402100:	ins    BYTE PTR es:[edi],dx
  402101:	ds or  al,0xf5
  402104:	scas   al,BYTE PTR es:[edi]
  402105:	jle    0x4020f4
  402107:	addr16 js 0x4020b1
  40210a:	shl    DWORD PTR [ebx+0x3ec492e4],1
  402110:	mov    esp,0x8f6fb0a2
  402115:	std    
  402116:	sbb    ch,al
  402118:	mov    edi,0xb9bae663
  40211d:	mov    dh,0x13
  40211f:	sub    edx,DWORD PTR [ebp-0x76]
  402122:	imul   ebx,DWORD PTR es:[esi-0x6ef6769],0xffffffec
  40212a:	pop    ebp
  40212b:	aaa    
  40212c:	dec    esp
  40212d:	fisub  WORD PTR [edx]
  40212f:	cmp    dh,al
  402131:	bound  edx,QWORD PTR [ebx-0x4c17518c]
  402137:	add    esi,ebp
  402139:	jbe    0x4021b2
  40213b:	(bad)
  40213e:	cmp    BYTE PTR [eax],cl
  402140:	inc    edx
  402141:	mov    bl,0x5e
  402143:	or     eax,0xc7acf911
  402148:	jecxz  0x4020f7
  40214a:	imul   esp,DWORD PTR [edx+eiz*4+0x1e],0xb4d0c3ec
  402152:	ret    
  402153:	fldcw  WORD PTR [ebp-0x66]
  402156:	bound  edi,QWORD PTR [edi+0x15]
  402159:	xor    ch,ah
  40215b:	lods   al,BYTE PTR ds:[esi]
  40215c:	pop    ebp
  40215d:	clc    
  40215e:	and    esi,DWORD PTR [edx]
  402160:	mov    edi,DWORD PTR ds:0x1d949294
  402166:	loope  0x4020ed
  402168:	retf   
  402169:	fimul  WORD PTR [ecx+0x1b]
  40216c:	jae    0x402110
  40216e:	pop    ebx
  40216f:	(bad)  
  402170:	icebp  
  402171:	xchg   ebx,eax
  402172:	jmp    0x9fc4:0x2e2e463a
  402179:	push   es
  40217a:	(bad)  
  40217b:	data16 cld 
  40217d:	lods   al,BYTE PTR ds:[esi]
  40217e:	enter  0x1fd3,0xc5
  402182:	or     eax,0x51e2d50e
  402187:	fsubrp st(7),st
  402189:	sahf   
  40218a:	sahf   
  40218b:	loopne 0x402188
  40218d:	xor    BYTE PTR [ecx+0x686348c4],dh
  402193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402194:	adc    BYTE PTR [edi-0x7f],bh
  402197:	add    BYTE PTR [esi+0x7],ch
  40219a:	cmc    
  40219b:	xor    esi,DWORD PTR [edi+ebp*1-0x49]
  40219f:	call   0x306c:0x6ee900e7
  4021a6:	jle    0x402171
  4021a8:	jnp    0x4021b0
  4021aa:	xchg   esp,eax
  4021ab:	xchg   edi,eax
  4021ac:	clc    
  4021ad:	scas   eax,DWORD PTR es:[edi]
  4021ae:	cmp    cl,0x61
  4021b1:	sbb    eax,0xf1625868
  4021b6:	sub    al,0x7d
  4021b8:	jecxz  0x4021fe
  4021ba:	jp     0x40223a
  4021bc:	ret    
  4021bd:	jl     0x402231
  4021bf:	inc    BYTE PTR [ebp+ebp*4-0x3]
  4021c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021c4:	dec    ebp
  4021c5:	aas    
  4021c6:	shl    ebx,0xd5
  4021c9:	sub    al,0x77
  4021cb:	test   DWORD PTR [ecx],0x24d88d01
  4021d1:	stos   DWORD PTR es:[edi],eax
  4021d2:	xor    al,0x18
  4021d4:	icebp  
  4021d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021d6:	jmp    0x40221b
  4021d8:	mov    ebx,0xdef183fe
  4021dd:	mov    DWORD PTR ds:0x1b0c2fe0,eax
  4021e3:	loope  0x4021a5
  4021e5:	in     al,0xbc
  4021e7:	push   esi
  4021e8:	xor    eax,0xc8ceb032
  4021ed:	add    DWORD PTR [esi+0xd],esi
  4021f0:	out    0xba,eax
  4021f2:	mul    bh
  4021f4:	push   0x53
  4021f6:	dec    edi
  4021f7:	jle    0x4021af
  4021f9:	lahf   
  4021fa:	lds    ebp,FWORD PTR [edx-0x77]
  4021fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021fe:	mov    ds:0xe0bacfa3,al
  402203:	rcr    BYTE PTR [edx-0x33],0xff
  402207:	outs   dx,BYTE PTR ds:[esi]
  402208:	ror    bl,1
  40220a:	xor    al,0x57
  40220c:	add    DWORD PTR [eax-0x170f31b2],0x18
  402213:	or     ebx,DWORD PTR [eax]
  402215:	xchg   esp,eax
  402216:	and    al,0xd4
  402218:	xlat   BYTE PTR ds:[ebx]
  402219:	xor    eax,DWORD PTR [edi+0x3bb5d764]
  40221f:	jb     0x402276
  402221:	xor    ecx,DWORD PTR [ecx+eax*8-0x37ed7]
  402228:	and    al,cl
  40222a:	mov    esi,esp
  40222c:	jge    0x40225b
  40222e:	sub    al,0x3d
  402230:	nop
  402231:	int    0xa6
  402233:	stos   DWORD PTR es:[edi],eax
  402234:	jns    0x40220d
  402236:	es loopne 0x4021eb
  402239:	enter  0x960e,0x1f
  40223d:	pcmpgtd mm2,QWORD PTR [ecx+0x52]
  402241:	push   es
  402242:	jno    0x4021e4
  402244:	clc    
  402245:	test   BYTE PTR [esp+ecx*4],bh
  402248:	or     eax,0xda01a09b
  40224d:	or     esp,edx
  40224f:	test   BYTE PTR [eax-0x59a66a10],bh
  402255:	aaa    
  402256:	sub    DWORD PTR [ecx+0x6aa22add],esi
  40225c:	pop    es
  40225d:	push   ds
  40225e:	add    dh,BYTE PTR [eax+0x10292d58]
  402264:	pop    DWORD PTR [eax-0x41388f8e]
  40226a:	out    dx,eax
  40226b:	xor    ch,BYTE PTR [esi]
  40226d:	not    BYTE PTR [edi+0x24]
  402270:	mov    ch,0x7f
  402272:	fwait
  402273:	stos   DWORD PTR es:[edi],eax
  402274:	gs mov bl,0x1e
  402277:	xlat   BYTE PTR ds:[ebx]
  402278:	ficomp WORD PTR [eax]
  40227a:	nop
  40227b:	add    eax,0xc4a542e4
  402280:	rcl    DWORD PTR [esi+0x3d],cl
  402283:	or     bh,BYTE PTR [edi-0x57]
  402286:	pop    ebp
  402287:	(bad)  
  402288:	cmc    
  402289:	jle    0x402246
  40228b:	icebp  
  40228c:	scas   al,BYTE PTR es:[edi]
  40228d:	mov    ebp,DWORD PTR [edi]
  40228f:	jmp    0x4350e87
  402294:	sub    DWORD PTR [eiz*4+0x1b372dab],edi
  40229b:	jae    0x402239
  40229d:	push   ss
  40229e:	das    
  40229f:	repnz and eax,0xd88066ca
  4022a5:	in     al,dx
  4022a6:	sub    cl,cl
  4022a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022a9:	mov    bh,0xf3
  4022ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022ac:	jnp    0x40227e
  4022ae:	fld    TBYTE PTR [edi-0x49682636]
  4022b4:	leave  
  4022b5:	ins    DWORD PTR es:[edi],dx
  4022b6:	test   eax,0xd975262d
  4022bb:	test   al,0x5d
  4022bd:	fist   WORD PTR [edi-0x45]
  4022c0:	xlat   BYTE PTR ds:[ebx]
  4022c1:	push   esp
  4022c2:	adc    BYTE PTR [ebx],0xc2
  4022c5:	inc    ebp
  4022c6:	mov    dl,al
  4022c8:	push   cs
  4022c9:	xchg   edx,eax
  4022ca:	xlat   BYTE PTR ds:[ebx]
  4022cb:	cld    
  4022cc:	sub    ebp,DWORD PTR [edx+ecx*2]
  4022cf:	clc    
  4022d0:	lock cmp dl,BYTE PTR [edx-0x125eea23]
  4022d7:	mov    eax,ds:0x55926725
  4022dc:	sbb    BYTE PTR [edi+0x4f],bl
  4022df:	imul   BYTE PTR [edi]
  4022e1:	sti    
  4022e2:	das    
  4022e3:	outs   dx,DWORD PTR ds:[esi]
  4022e4:	data16 jnp 0x40233a
  4022e7:	fcom   st(7)
  4022e9:	adc    al,0x4f
  4022eb:	dec    ebp
  4022ec:	jb     0x4022c5
  4022ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022ef:	jbe    0x40228a
  4022f1:	push   ecx
  4022f2:	xlat   BYTE PTR ds:[ebx]
  4022f3:	in     al,0x32
  4022f5:	fmul   DWORD PTR [esi]
  4022f7:	jo     0x40235d
  4022f9:	xchg   al,ah
  4022fb:	ins    DWORD PTR es:[edi],dx
  4022fc:	inc    eax
  4022fd:	mov    ebx,0xb048828f
  402302:	fild   QWORD PTR [ebp+0x61c9304f]
  402308:	cmp    ch,BYTE PTR [eax-0x39]
  40230b:	sbb    esp,DWORD PTR [ebp+ebx*4-0x32]
  40230f:	mov    gs,WORD PTR [edx+0x1a]
  402312:	xor    eax,0xac8db56f
  402317:	aam    0x27
  402319:	pop    ds
  40231a:	hlt    
  40231b:	push   ss
  40231c:	xchg   ebx,eax
  40231d:	loope  0x40239a
  40231f:	mov    al,ds:0xf4bf94c
  402324:	(bad)  [esp+eiz*8+0x65]
  402328:	jecxz  0x402305
  40232a:	sbb    bl,0xa1
  40232d:	mov    ebx,0xf649582b
  402332:	push   es
  402333:	add    al,0xed
  402335:	cdq    
  402336:	sub    edx,DWORD PTR [edi-0x26]
  402339:	mov    WORD PTR [ebx-0x7e],es
  40233c:	sub    BYTE PTR [esi+0x36106ede],dl
  402342:	jmp    FWORD PTR [ebp+ecx*8+0x390f0141]
  402349:	cs std 
  40234b:	mov    ch,0xf8
  40234d:	cmp    eax,0x31c310a0
  402352:	pop    ds
  402353:	pop    edx
  402354:	leave  
  402355:	jne    0x402341
  402357:	mov    ch,0x7e
  402359:	sbb    ah,BYTE PTR [eax]
  40235b:	dec    ecx
  40235c:	cmp    bh,BYTE PTR [ebx+edx*2]
  40235f:	push   edx
  402360:	dec    ebp
  402361:	popf   
  402362:	and    bh,BYTE PTR [ebp+0x350ff742]
  402368:	in     eax,dx
  402369:	scas   eax,DWORD PTR es:[edi]
  40236a:	aaa    
  40236b:	and    ebx,edx
  40236d:	mov    ch,0x6c
  40236f:	test   DWORD PTR [esi],ebx
  402371:	je     0x4023e6
  402373:	imul   edx,DWORD PTR [ebx],0x3
  402376:	mov    ds:0xd13609c3,eax
  40237b:	call   0xad87e18c
  402380:	enter  0x7ac3,0xdb
  402384:	iret   
  402385:	adc    eax,0x77c27e08
  40238a:	jbe    0x4023b9
  40238c:	ret    
  40238d:	and    cl,dl
  40238f:	push   0x79
  402391:	retf   0xa0af
  402394:	push   es
  402395:	push   cs
  402396:	dec    esi
  402397:	jnp    0x402389
  402399:	inc    edi
  40239a:	rsqrtps xmm6,XMMWORD PTR [ecx+0x29]
  40239e:	ds mov esp,0x34dea5e9
  4023a4:	(bad)  
  4023a5:	jno    0x402409
  4023a7:	dec    edx
  4023a8:	lds    esp,FWORD PTR [esi-0x19f2c65b]
  4023ae:	loop   0x4023d7
  4023b0:	push   edi
  4023b1:	aas    
  4023b2:	adc    esi,edx
  4023b4:	mov    edi,DWORD PTR [ebx]
  4023b6:	test   eax,0x5e5563e
  4023bb:	push   0x3a
  4023bd:	sbb    BYTE PTR [esi],bl
  4023bf:	sub    al,0x30
  4023c1:	ffree  st(7)
  4023c3:	hlt    
  4023c4:	and    cl,bh
  4023c6:	add    bl,BYTE PTR [ebx+0xc]
  4023c9:	aas    
  4023ca:	push   ebx
  4023cb:	not    DWORD PTR [ecx]
  4023cd:	dec    eax
  4023ce:	sbb    al,0x87
  4023d0:	test   DWORD PTR [edi-0x1],edi
  4023d3:	sbb    DWORD PTR [ecx-0x19],edi
  4023d6:	sbb    al,0x46
  4023d8:	aam    0x15
  4023da:	sub    ch,bh
  4023dc:	out    0x10,al
  4023de:	xor    al,0x7c
  4023e0:	sbb    ebp,esp
  4023e2:	shr    ebx,0x12
  4023e5:	cli    
  4023e6:	mov    esi,0x9107bff2
  4023eb:	out    dx,eax
  4023ec:	jns    0x4023a4
  4023ee:	cdq    
  4023ef:	scas   al,BYTE PTR es:[edi]
  4023f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023f1:	test   DWORD PTR [ebx],esi
  4023f3:	push   ds
  4023f4:	add    BYTE PTR [edi-0x57],0x32
  4023f8:	dec    edi
  4023f9:	(bad)  
  4023fa:	pop    ds
  4023fb:	adc    DWORD PTR [eax-0x62],esp
  4023fe:	rcl    DWORD PTR [eax-0x4b217ea2],0xda
  402405:	out    0xc5,eax
  402407:	int    0x23
  402409:	mov    ah,0xf6
  40240b:	lods   al,BYTE PTR ds:[esi]
  40240c:	mov    WORD PTR [ebx-0x38],?
  40240f:	xor    al,0x6c
  402411:	push   0x64135534
  402416:	cmp    eax,0x1a0481a6
  40241b:	push   0x56
  40241d:	mov    dh,0x32
  40241f:	adc    ebp,ecx
  402421:	dec    ebx
  402422:	call   0xb65b:0x43117e26
  402429:	mov    bl,0x61
  40242b:	call   0x12a75464
  402430:	add    ebp,0xffffffc6
  402433:	popf   
  402434:	hlt    
  402435:	add    ecx,DWORD PTR [edi+eiz*1-0x65]
  402439:	mov    esp,0xf7f884c4
  40243e:	das    
  40243f:	jns    0x40241e
  402441:	xchg   esp,eax
  402442:	xchg   ecx,eax
  402443:	fisttp WORD PTR [eax-0x51]
  402446:	out    0xe8,al
  402448:	add    al,0x58
  40244a:	data16 mov WORD PTR [edx-0x55],cs
  40244e:	leave  
  40244f:	sti    
  402450:	cdq    
  402451:	jge    0x402487
  402453:	jmp    0xb997:0xb4bc0511
  40245a:	cmp    ebp,DWORD PTR [edi]
  40245c:	mov    bl,0x1e
  40245e:	(bad)  
  402460:	jl     0x40242c
  402462:	dec    edx
  402463:	push   0xa00a450
  402468:	mov    WORD PTR [edx+0x3bfe3b38],es
  40246e:	mov    edx,esp
  402470:	inc    esp
  402471:	inc    ebx
  402472:	pop    esp
  402473:	(bad)  
  402474:	rcr    esp,cl
  402476:	jo     0x402485
  402478:	lock and al,0x51
  40247b:	cmp    al,0x5c
  40247e:	retf   
  40247f:	jmp    0xf05b:0xe086f1aa
  402486:	jecxz  0x402452
  402488:	int3   
  402489:	imul   ebx,DWORD PTR [edi+0x4d1f1ebc],0x49
  402490:	outs   dx,BYTE PTR ds:[esi]
  402491:	mov    al,0xfa
  402493:	sub    dl,bl
  402495:	jl     0x4024ce
  402497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402498:	imul   DWORD PTR [esi+0x44]
  40249b:	pop    ecx
  40249c:	aad    0xe1
  40249e:	mov    BYTE PTR [esi+eiz*2],dh
  4024a1:	out    dx,eax
  4024a2:	lods   eax,DWORD PTR ds:[esi]
  4024a3:	test   al,0xf4
  4024a5:	pop    eax
  4024a6:	lods   eax,DWORD PTR ds:[esi]
  4024a7:	idiv   DWORD PTR ds:0x29924a18
  4024ad:	bound  ebp,QWORD PTR [ecx-0x44]
  4024b0:	sbb    ch,BYTE PTR [esp+edx*2]
  4024b3:	jae    0x40245e
  4024b5:	jne    0x40250b
  4024b7:	push   edx
  4024b8:	stc    
  4024b9:	adc    ebx,DWORD PTR [ebx-0x45]
  4024bc:	arpl   WORD PTR [ebp-0x33],bx
  4024bf:	mov    al,0xfd
  4024c1:	xchg   dh,dl
  4024c3:	shl    BYTE PTR [eax],cl
  4024c5:	not    BYTE PTR [ebx+0x725ed15]
  4024cb:	add    BYTE PTR [edi+0x62b8d5c2],0xef
  4024d2:	(bad)  
  4024d3:	std    
  4024d4:	dec    BYTE PTR [edi+0x1d]
  4024d7:	sub    dl,BYTE PTR [ebp-0x14]
  4024da:	rcr    BYTE PTR [ebx+ebp*8],1
  4024dd:	ficom  WORD PTR ds:0xe406a6f2
  4024e3:	shl    DWORD PTR [esi+ecx*1+0x7be75001],cl
  4024ea:	(bad)  
  4024eb:	hlt    
  4024ec:	jo     0x4024f2
  4024ee:	shl    ecx,cl
  4024f0:	xlat   BYTE PTR ds:[ebx]
  4024f1:	cwde   
  4024f2:	push   0x13cd22fd
  4024f7:	xchg   esi,eax
  4024f8:	aad    0xdd
  4024fa:	mov    eax,ds:0xd8405cee
  4024ff:	mov    DWORD PTR [ebx-0x59],0xec56955e
  402506:	stos   DWORD PTR es:[edi],eax
  402507:	pop    esp
  402508:	clc    
  402509:	xchg   esi,eax
  40250a:	pop    edx
  40250b:	or     DWORD PTR [ebp-0x1f58b26],eax
  402511:	mov    ch,BYTE PTR [edx+0x10]
  402514:	and    ebx,DWORD PTR [esi]
  402516:	daa    
  402517:	cli    
  402518:	stos   DWORD PTR es:[edi],eax
  402519:	add    al,0x6e
  40251b:	gs mov ah,0x40
  40251e:	inc    esp
  40251f:	push   ebp
  402520:	pop    ebx
  402521:	push   eax
  402522:	fiadd  DWORD PTR [ecx]
  402524:	test   BYTE PTR [ecx],bh
  402526:	out    dx,eax
  402527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402528:	outs   dx,DWORD PTR ds:[esi]
  402529:	add    ebp,DWORD PTR [eax-0x1e]
  40252c:	sub    al,0x48
  40252e:	dec    edi
  40252f:	fimul  DWORD PTR ss:[edx]
  402532:	fst    st(7)
  402534:	pop    eax
  402535:	sahf   
  402536:	mul    BYTE PTR [esi]
  402538:	cmp    bl,dh
  40253a:	jns    0x40253e
  40253c:	scas   eax,DWORD PTR es:[edi]
  40253d:	push   ss
  40253e:	adc    edx,DWORD PTR [ebx+0x7]
  402541:	xor    ebx,DWORD PTR [ecx*4-0x15d06d54]
  402548:	mov    dh,0xcb
  40254a:	mov    ah,0xcd
  40254c:	pop    esi
  40254d:	aam    0x0
  40254f:	mov    cl,0xe9
  402551:	mov    esi,es
  402553:	mov    bh,0x26
  402555:	xchg   edi,eax
  402556:	leave  
  402557:	stos   DWORD PTR es:[edi],eax
  402558:	popf   
  402559:	nop
  40255a:	ins    BYTE PTR es:[edi],dx
  40255b:	dec    eax
  40255c:	jmp    0x9640:0xf6042ef2
  402563:	mov    bh,0x2f
  402565:	(bad)  
  402566:	int3   
  402567:	push   ds
  402568:	xchg   DWORD PTR [edi+esi*8],ebp
  40256b:	cwde   
  40256c:	stos   DWORD PTR es:[edi],eax
  40256d:	(bad)  
  40256e:	aaa    
  40256f:	aaa    
  402570:	(bad)  
  402571:	pop    esi
  402572:	cmp    al,0x4d
  402574:	stc    
  402575:	adc    BYTE PTR [esp+eiz*8-0x4d],dh
  402579:	adc    DWORD PTR [ebp+0x14e6dddc],0xd
  402580:	sbb    al,0x8e
  402582:	lock stos BYTE PTR es:[edi],al
  402584:	push   ebx
  402585:	jbe    0x402579
  402587:	sahf   
  402588:	mov    eax,ds:0x3eeeed6c
  40258d:	add    ebp,ebp
  40258f:	mov    edi,0x8f09c17d
  402594:	iret   
  402595:	add    BYTE PTR [eax-0x4d],0x5d
  402599:	pop    edi
  40259a:	adc    al,0x53
  40259c:	sub    edi,DWORD PTR [esp+ebx*2+0x3e70cc7f]
  4025a3:	adc    eax,0xbb7d5ce7
  4025a8:	jne    0x40261a
  4025aa:	sub    BYTE PTR [edi+ebx*1],dh
  4025ad:	call   0x9606:0x5a268320
  4025b4:	add    al,0x1c
  4025b6:	adc    eax,0xc00806f5
  4025bb:	xchg   ecx,eax
  4025bc:	mov    esp,0x56c64145
  4025c1:	or     ebp,0x1ddcc449
  4025c7:	mov    ah,0x78
  4025c9:	push   cs
  4025ca:	and    eax,0x66e26f04
  4025cf:	call   eax
  4025d1:	mov    DWORD PTR [edi+0x40],edi
  4025d4:	xor    eax,0xa9c69365
  4025d9:	adc    dl,al
  4025db:	xchg   si,ax
  4025dd:	jnp    0x402656
  4025df:	in     al,0xe5
  4025e1:	mov    ebx,0xb1c7a43
  4025e6:	mov    ah,0xe2
  4025e8:	mov    eax,DWORD PTR [esi+0x6a37557c]
  4025ee:	jbe    0x4025c2
  4025f0:	inc    ebp
  4025f1:	jecxz  0x402632
  4025f3:	rcr    BYTE PTR [ebx+0x66],cl
  4025f6:	xor    ebp,eax
  4025f8:	sbb    edx,0x45345f83
  4025fe:	jge    0x402596
  402600:	fnop   
  402602:	pop    edx
  402603:	mov    cl,BYTE PTR [ebp+0x7a253375]
  402609:	cdq    
  40260a:	ja     0x40263f
  40260c:	xor    edi,DWORD PTR [eax-0x71eabed9]
  402612:	outs   dx,DWORD PTR ds:[esi]
  402613:	repz scas al,BYTE PTR es:[edi]
  402615:	jbe    0x402661
  402617:	sub    edx,ebp
  402619:	mov    cl,ah
  40261b:	push   es
  40261c:	outs   dx,DWORD PTR ds:[esi]
  40261d:	imul   ebx,DWORD PTR [edi-0x1a],0x38
  402621:	xchg   BYTE PTR [esi-0x4d],cl
  402624:	(bad)  
  402625:	aam    0xee
  402627:	add    al,0x99
  402629:	dec    esi
  40262a:	xchg   ebp,eax
  40262b:	mov    ah,0xd
  40262d:	int3   
  40262e:	jo     0x40262c
  402630:	sub    eax,0xed874e1d
  402635:	dec    esi
  402636:	stos   BYTE PTR es:[edi],al
  402637:	sub    BYTE PTR [edx+ebx*1-0x6b],bh
  40263b:	and    al,0xf2
  40263d:	or     bh,cl
  40263f:	mov    ds:0x78f12730,al
  402644:	leave  
  402645:	pop    es
  402646:	dec    esp
  402647:	jp     0x40268c
  402649:	pop    ds
  40264a:	mov    ecx,DWORD PTR ds:0xcf0fd87c
  402650:	push   ss
  402651:	xor    al,0x8d
  402653:	(bad)  
  402655:	shl    BYTE PTR [ebp-0x5b],1
  402658:	dec    esp
  402659:	mov    ebp,DWORD PTR [esp+eax*4+0x6d]
  40265d:	mov    dl,0x85
  40265f:	ret    
  402660:	loop   0x402628
  402662:	lahf   
  402663:	sub    DWORD PTR [ecx+eax*2],eax
  402666:	ds ins BYTE PTR es:[edi],dx
  402668:	data16 or dl,dh
  40266b:	nop
  40266c:	mov    al,0x57
  40266e:	xor    DWORD PTR [edi+eax*1+0x17764046],0x62cba254
  402679:	pop    ss
  40267a:	xchg   edi,eax
  40267b:	aaa    
  40267c:	sbb    ecx,DWORD PTR [esi]
  40267e:	aaa    
  40267f:	cmp    ebx,esi
  402681:	stos   DWORD PTR es:[edi],eax
  402682:	test   BYTE PTR [ecx+0x2e],0x86
  402686:	fs call 0xb5f9:0x1bfa87bf
  40268e:	adc    al,0x6c
  402690:	stos   DWORD PTR es:[edi],eax
  402691:	out    dx,al
  402692:	add    DWORD PTR [edi-0x78],edx
  402695:	dec    DWORD PTR [esi-0x4b]
  402698:	fwait
  402699:	pop    ebp
  40269a:	or     al,BYTE PTR [ebx]
  40269c:	pop    eax
  40269d:	call   0x242b:0xeec2171d
  4026a4:	jle    0x4026fa
  4026a6:	ins    DWORD PTR es:[edi],dx
  4026a7:	jg     0x402711
  4026a9:	out    dx,eax
  4026aa:	inc    ebx
  4026ab:	add    eax,0xe2e270a1
  4026b0:	loopne 0x402721
  4026b2:	jae    0x402655
  4026b4:	add    cl,BYTE PTR [eax+edx*8-0x13]
  4026b8:	out    dx,eax
  4026b9:	pusha  
  4026ba:	inc    edi
  4026bb:	retf   0x43f6
  4026be:	rcr    al,cl
  4026c0:	xchg   ebx,eax
  4026c1:	in     eax,0xa2
  4026c3:	aas    
  4026c4:	jecxz  0x4026ad
  4026c6:	mov    ebp,0x2eca0c51
  4026cb:	mov    ds:0xc3c0fde,eax
  4026d0:	inc    eax
  4026d1:	push   ebx
  4026d2:	sbb    esi,eax
  4026d4:	outs   dx,BYTE PTR ds:[esi]
  4026d5:	cmp    dl,BYTE PTR [ebx+0x657069b4]
  4026db:	jmp    0x496ef8c1
  4026e0:	jmp    0x4026cd
  4026e2:	lea    ebp,[ebx-0xb01359b]
  4026e8:	sbb    al,0x51
  4026ea:	dec    esp
  4026eb:	inc    edi
  4026ec:	pop    ebp
  4026ed:	xor    al,0x95
  4026ef:	push   ecx
  4026f0:	and    DWORD PTR [ebp+0x4b6ecbca],edi
  4026f6:	call   DWORD PTR [ecx-0xf]
  4026f9:	dec    ebx
  4026fa:	stos   BYTE PTR es:[edi],al
  4026fb:	and    al,BYTE PTR [ebx+eiz*4+0x0]
  4026ff:	push   0xf76f98b
  402704:	and    DWORD PTR [eax-0x25690614],ebx
  40270a:	jns    0x4026e6
  40270c:	ror    cl,1
  40270e:	add    bl,BYTE PTR ds:0xdd89e757
  402714:	xchg   ebp,eax
  402715:	fucom  st(7)
  402717:	mov    eax,ds:0xd34b727f
  40271c:	add    BYTE PTR [esi-0x62],al
  40271f:	popa   
  402720:	or     eax,0xa4ecd71d
  402725:	frndint 
  402727:	xchg   esi,eax
  402728:	in     eax,dx
  402729:	adc    al,0x11
  40272b:	inc    ebx
  40272c:	loopne 0x402751
  40272e:	fwait
  40272f:	lea    esp,[eax+eiz*2]
  402732:	test   ecx,edi
  402734:	repnz rcr BYTE PTR [ebp+0xd33529e],0x47
  40273c:	cwde   
  40273d:	(bad)  
  40273e:	jb     0x402756
  402740:	loopne 0x40278e
  402742:	or     ch,BYTE PTR [esi+0x3466fc88]
  402748:	fmul   st(6),st
  40274a:	cld    
  40274b:	mov    al,0x64
  40274d:	adc    BYTE PTR [edx-0x7a],cl
  402750:	jle    0x402717
  402752:	add    BYTE PTR [eax],cl
  402754:	daa    
  402755:	inc    eax
  402756:	cmp    eax,0xc3e3a431
  40275b:	mov    dh,0x2c
  40275d:	adc    eax,0xb1e16912
  402762:	sub    al,0xf7
  402764:	(bad)  
  402765:	mov    dl,0x57
  402767:	push   ebp
  402768:	lahf   
  402769:	sbb    BYTE PTR [ebx+0x5c],ch
  40276c:	add    esi,ecx
  40276e:	inc    edx
  40276f:	push   ds
  402770:	pusha  
  402771:	dec    ecx
  402772:	push   edx
  402773:	jns    0x402725
  402775:	mov    bh,0xc0
  402777:	cs retfw 
  40277a:	jo     0x402724
  40277c:	fistp  WORD PTR [edi]
  40277e:	fldcw  WORD PTR [ebp-0x16305dbe]
  402784:	mov    eax,0x3db2aadd
  402789:	jp     0x402741
  40278b:	push   eax
  40278c:	fsubr  DWORD PTR [edi+esi*8-0x6f]
  402790:	stos   DWORD PTR es:[edi],eax
  402791:	push   edi
  402792:	inc    ecx
  402793:	adc    eax,0x62654955
  402798:	adc    esp,DWORD PTR [edx]
  40279a:	xor    DWORD PTR [ecx+edi*8-0x14],edi
  40279e:	xlat   BYTE PTR ds:[ebx]
  40279f:	mov    al,0xf5
  4027a1:	in     al,0xe7
  4027a3:	and    cl,BYTE PTR [ebx+0x22]
  4027a6:	imul   ecx,DWORD PTR [esp+edi*1+0x3],0xffffffd7
  4027ab:	loope  0x4027d3
  4027ad:	xchg   ecx,eax
  4027ae:	leave  
  4027af:	dec    eax
  4027b0:	lds    ebp,FWORD PTR [ebp+ecx*2-0x19]
  4027b4:	jmp    0x20b7:0xfd55a4a9
  4027bb:	mov    bl,0x59
  4027bd:	push   es
  4027be:	xor    BYTE PTR gs:[esi],bl
  4027c1:	loopne 0x40274d
  4027c3:	out    0xb6,al
  4027c5:	jno    0x4027b6
  4027c7:	cmp    eax,0x4c64d4bd
  4027cc:	fcomp  st(0)
  4027ce:	sahf   
  4027cf:	mov    ds:0x1381de8f,eax
  4027d4:	push   ebp
  4027d5:	adc    DWORD PTR [edi+0x62aa51bb],esi
  4027db:	mov    BYTE PTR [eax+edx*4+0x39],dh
  4027df:	mov    eax,ds:0x9921aea9
  4027e4:	and    DWORD PTR [eax-0x175bfdfd],0x62
  4027eb:	jl     0x402869
  4027ed:	rol    DWORD PTR [esi+0x58d2478b],0x26
  4027f4:	es stos BYTE PTR es:[edi],al
  4027f6:	mov    dl,0x6c
  4027f8:	std    
  4027f9:	cmp    eax,0xea1e0a84
  4027fe:	dec    ebp
  4027ff:	inc    edx
  402800:	or     DWORD PTR [esi+0x154dc190],ebp
  402806:	and    edi,esi
  402808:	into   
  402809:	aam    0xe9
  40280b:	add    eax,0xe50c209b
  402810:	jmp    0x69dc985e
  402815:	loop   0x4027f6
  402817:	call   0xd2a48067
  40281c:	pop    ss
  40281d:	je     0x40284d
  40281f:	xor    al,0xac
  402821:	pop    DWORD PTR [ecx]
  402823:	inc    ebp
  402824:	call   0xbd2c:0xb584a0e0
  40282b:	fdivp  st(2),st
  40282d:	test   eax,0x5cba0a82
  402832:	sub    DWORD PTR [edi-0x7ff703bc],ecx
  402838:	mov    dh,0xec
  40283a:	ficom  WORD PTR [esi+0x55]
  40283d:	mov    BYTE PTR [edi],dl
  40283f:	xor    ebp,DWORD PTR [edx]
  402841:	fwait
  402842:	sbb    BYTE PTR [ebp+0x62a06775],0x19
  402849:	ret    
  40284a:	jl     0x4028a8
  40284c:	repnz inc edi
  40284e:	and    eax,0xe34d4125
  402853:	jp     0x4028b7
  402855:	mov    ah,0xb5
  402857:	call   DWORD PTR [ebx-0x77db836b]
  40285d:	push   ecx
  40285e:	xor    al,0xde
  402860:	jmp    0x40f6abba
  402865:	add    esp,esi
  402867:	mov    ah,0x2f
  402869:	or     al,0x7
  40286b:	pop    esp
  40286c:	shl    esp,0xa7
  40286f:	fimul  WORD PTR [edi+0x58d7906]
  402875:	dec    esi
  402876:	add    ch,bh
  402878:	lds    edx,FWORD PTR [esi+0x6]
  40287b:	push   0x99fc6a17
  402880:	enter  0x83bf,0x77
  402884:	xor    al,0xdb
  402886:	lahf   
  402887:	xor    cl,bl
  402889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40288a:	push   ebp
  40288b:	dec    ebx
  40288c:	sub    BYTE PTR [edi],dl
  40288e:	(bad)
  402891:	sbb    BYTE PTR [eax-0x3a84dcb4],0x27
  402898:	je     0x40282d
  40289a:	inc    esp
  40289b:	fnstcw WORD PTR [esi]
  40289d:	lods   al,BYTE PTR ds:[esi]
  40289e:	pop    es
  40289f:	pop    DWORD PTR [edi-0x6a]
  4028a2:	or     eax,0x11f2f291
  4028a7:	fistp  QWORD PTR [ebx-0x4685606b]
  4028ad:	loop   0x402858
  4028af:	lahf   
  4028b0:	fwait
  4028b1:	or     dl,bl
  4028b3:	pushf  
  4028b4:	add    BYTE PTR [ebp-0x656ec1fd],ah
  4028ba:	mov    esp,0xa644c23c
  4028bf:	push   eax
  4028c0:	dec    ebx
  4028c1:	nop
  4028c2:	push   cs
  4028c3:	das    
  4028c4:	and    ch,al
  4028c6:	mov    edx,edx
  4028c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028c9:	jg     0x4028db
  4028cb:	jmp    0xb0ee:0xaaa9fdbf
  4028d2:	shl    DWORD PTR [edi-0x66e952bd],0x54
  4028d9:	push   eax
  4028da:	fisubr WORD PTR [edx]
  4028dc:	jl     0x40294d
  4028de:	lods   al,BYTE PTR ds:[esi]
  4028df:	enter  0x6498,0x8f
  4028e3:	lahf   
  4028e4:	push   edi
  4028e5:	fstp   QWORD PTR [edi]
  4028e7:	xchg   edi,eax
  4028e8:	mov    cl,0x57
  4028ea:	cwde   
  4028eb:	loope  0x4028f4
  4028ed:	jl     0x40291c
  4028ef:	add    DWORD PTR [eax],ebp
  4028f1:	sub    edx,eax
  4028f3:	cmp    eax,0x66463f14
  4028f8:	in     eax,dx
  4028f9:	xchg   edx,eax
  4028fa:	loopne 0x40292a
  4028fc:	pop    edx
  4028fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028fe:	sbb    DWORD PTR [eax-0x56129ac9],0x6bc9a2a8
  402908:	pop    ds
  402909:	mov    cl,0x7d
  40290b:	xor    al,ch
  40290d:	stos   BYTE PTR es:[edi],al
  40290e:	(bad)  
  40290f:	bound  esi,QWORD PTR [edx-0x27]
  402912:	ret    
  402913:	stc    
  402914:	inc    ebp
  402915:	and    ebp,ecx
  402917:	jno    0x402984
  402919:	jmp    DWORD PTR [eax]
  40291b:	or     bl,BYTE PTR [eax+0x154bd45e]
  402921:	cmp    BYTE PTR [eax+edx*1-0x36],dl
  402925:	sub    cl,BYTE PTR [ebp-0x3b]
  402928:	push   ecx
  402929:	jmp    0x633c:0xc6987962
  402930:	jbe    0x402967
  402932:	sub    BYTE PTR [edx+edi*2-0x586d6bac],bl
  402939:	adc    eax,DWORD PTR [esi+0x5061cbbd]
  40293f:	test   eax,0x139568f2
  402944:	retf   0x394a
  402947:	sahf   
  402948:	pop    esp
  402949:	push   ecx
  40294a:	mov    edi,0xae940b09
  40294f:	js     0x402988
  402951:	enter  0x19ed,0x82
  402955:	dec    edi
  402956:	in     eax,dx
  402957:	pop    ecx
  402958:	cmp    edx,DWORD PTR [ebp+0x2e1ba515]
  40295e:	jb     0x402912
  402960:	mov    al,ds:0xd8a2a080
  402965:	jmp    0x61ee:0xb10ae537
  40296c:	sar    BYTE PTR [ebp-0xc],1
  40296f:	cld    
  402970:	or     eax,0x4589f994
  402975:	in     eax,dx
  402976:	mov    dh,0x5d
  402978:	mov    ds:0x91de6d32,eax
  40297d:	cmp    al,0xd3
  40297f:	xchg   esi,eax
  402980:	cmp    DWORD PTR [esi+0x41],esi
  402983:	lods   al,BYTE PTR ds:[esi]
  402984:	ror    BYTE PTR [ebp-0x65603371],0x6f
  40298b:	and    DWORD PTR [eax+0xd8b278b],esp
  402991:	mov    dl,BYTE PTR [esi]
  402993:	(bad)  
  402994:	jmp    0x402966
  402996:	jns    0x402999
  402998:	inc    ebp
  402999:	(bad)  
  40299a:	cmc    
  40299b:	push   edx
  40299c:	mov    esp,eax
  40299e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40299f:	cdq    
  4029a0:	(bad)  
  4029a1:	arpl   WORD PTR [edx+0x7da331ef],cx
  4029a7:	pushf  
  4029a8:	cmp    BYTE PTR [eax+eax*2-0x1b],ch
  4029ac:	pop    ecx
  4029ad:	adc    bh,dl
  4029af:	dec    esp
  4029b0:	sub    eax,0x1a43d3d1
  4029b5:	aad    0xbe
  4029b7:	push   es
  4029b8:	xor    eax,0xb937962e
  4029bd:	test   DWORD PTR [eax-0x7bd9c569],edx
  4029c3:	lahf   
  4029c4:	cmp    DWORD PTR [ecx-0x61],0xffffffb1
  4029c8:	test   BYTE PTR [eax-0x59],cl
  4029cb:	in     eax,dx
  4029cc:	inc    esp
  4029cd:	repnz fadd QWORD PTR [eax+0x6d]
  4029d1:	stos   DWORD PTR es:[edi],eax
  4029d2:	mov    ?,WORD PTR [esp+edi*1]
  4029d5:	cli    
  4029d6:	call   0xe6f5:0xe049da91
  4029dd:	mov    edx,0xf50ec0c1
  4029e2:	out    0x82,al
  4029e4:	loope  0x40296a
  4029e6:	ret    0x7d1d
  4029e9:	call   FWORD PTR [ebp-0x62fc28b1]
  4029ef:	cmp    eax,0xcf1e7a69
  4029f4:	xchg   esi,eax
  4029f5:	dec    ecx
  4029f6:	dec    ebx
  4029f7:	imul   esp,DWORD PTR [ecx+0x1e3f0b5],0x5b
  4029fe:	push   0xffffffa8
  402a00:	stos   BYTE PTR es:[edi],al
  402a01:	xor    al,0xce
  402a03:	add    ah,BYTE PTR [ecx-0x2aeaf736]
  402a09:	nop
  402a0a:	and    BYTE PTR [ebx],dh
  402a0c:	retf   
  402a0d:	aam    0xe0
  402a0f:	ss adc al,0x27
  402a12:	cmp    BYTE PTR ss:[edx+0x1b],0x23
  402a17:	into   
  402a18:	js     0x402a88
  402a1a:	rcl    BYTE PTR [ecx-0x77],1
  402a1d:	jns    0x402a45
  402a1f:	xchg   BYTE PTR [esi],dl
  402a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a22:	fild   WORD PTR cs:[eax]
  402a25:	test   BYTE PTR [edi+0x2f],0x58
  402a29:	xor    edi,DWORD PTR [eax+0x3e286358]
  402a2f:	not    BYTE PTR [edx-0x3b]
  402a32:	loopne 0x4029df
  402a34:	mov    ebx,0xbf37374
  402a39:	dec    eax
  402a3a:	ret    0xf156
  402a3d:	neg    BYTE PTR [esi-0x5a66b539]
  402a43:	rcl    DWORD PTR [edi-0x37bf1f90],0x85
  402a4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a4b:	push   es
  402a4c:	ror    BYTE PTR [ecx+edi*8],cl
  402a4f:	clc    
  402a50:	cmp    BYTE PTR [ecx+0x4e],dl
  402a53:	xor    eax,0x59243ce6
  402a58:	fcomp  QWORD PTR [ebx]
  402a5a:	push   es
  402a5b:	pop    esi
  402a5c:	inc    ebx
  402a5d:	dec    ebp
  402a5e:	and    bh,bh
  402a60:	dec    esi
  402a61:	inc    edi
  402a62:	mov    ds:0xe2a02e6d,al
  402a67:	ds repnz into 
  402a6a:	push   ebx
  402a6b:	das    
  402a6c:	push   0xffffff9b
  402a6e:	jno    0x402ae4
  402a70:	pop    ebp
  402a71:	dec    edi
  402a72:	es xchg esp,eax
  402a74:	pusha  
  402a75:	fstp   TBYTE PTR [ebp-0x31]
  402a78:	mov    ah,0x74
  402a7a:	sbb    al,0xc7
  402a7c:	and    ecx,edi
  402a7e:	jae    0x402a09
  402a80:	lock mov edi,0xea7fbf98
  402a86:	push   ss
  402a87:	pop    ebx
  402a88:	inc    esi
  402a89:	icebp  
  402a8a:	fxch   st(0)
  402a8c:	sbb    al,0x49
  402a8e:	call   0xa51a:0x5b7d8957
  402a95:	sub    ecx,DWORD PTR [esi-0x53]
  402a98:	pop    ecx
  402a99:	aad    0x2a
  402a9b:	loop   0x402a5d
  402a9d:	mov    cl,0x23
  402a9f:	inc    edx
  402aa0:	pop    DWORD PTR [esi+0x5f]
  402aa3:	push   0x9ef3124d
  402aa8:	mov    al,ds:0x856b9695
  402aad:	(bad)  
  402aae:	ja     0x402b28
  402ab0:	stc    
  402ab1:	fidiv  WORD PTR [edi]
  402ab3:	pop    edx
  402ab4:	jge    0x402b0b
  402ab6:	sub    ebp,DWORD PTR [ebp-0x19]
  402ab9:	scas   al,BYTE PTR es:[edi]
  402aba:	dec    eax
  402abb:	jl     0x402ad5
  402abd:	adc    esi,DWORD PTR [edx+eiz*1+0x68]
  402ac1:	add    edx,0x41
  402ac4:	sbb    edx,DWORD PTR [eax+0x279fc9f3]
  402aca:	lea    esp,[ebx]
  402acc:	in     eax,dx
  402acd:	aas    
  402ace:	dec    ecx
  402acf:	or     esp,edi
  402ad1:	pop    esp
  402ad2:	sbb    dh,BYTE PTR [edi+0x8]
  402ad5:	or     eax,0xf4c5e5f
  402ada:	xchg   edx,eax
  402adb:	pop    ebx
  402adc:	in     eax,0x89
  402ade:	inc    ebx
  402adf:	aaa    
  402ae0:	mov    ebx,0x8198a641
  402ae5:	ins    DWORD PTR es:[edi],dx
  402ae6:	cmp    BYTE PTR [esi+0x4cfc831a],dl
  402aec:	jmp    DWORD PTR [edi+0x12a97ccc]
  402af2:	pusha  
  402af3:	xor    eax,0x25e343de
  402af8:	xchg   ebp,eax
  402af9:	sub    esp,ecx
  402afb:	out    dx,al
  402afc:	outs   dx,DWORD PTR ds:[esi]
  402afd:	add    ebp,0x1c
  402b00:	xchg   edi,eax
  402b01:	xchg   ebp,eax
  402b02:	push   edi
  402b03:	dec    eax
  402b04:	cmp    DWORD PTR [ecx-0x59112ec6],edi
  402b0a:	dec    edi
  402b0b:	adc    DWORD PTR [edi+0x5913e2b7],edi
  402b11:	jb     0x402ab3
  402b13:	sbb    BYTE PTR [ecx],al
  402b15:	pop    edi
  402b16:	fmul   DWORD PTR [ebx]
  402b18:	adc    DWORD PTR [ebp+ebp*8-0x7055e54a],ebp
  402b1f:	jnp    0x402b57
  402b21:	rol    BYTE PTR [edi-0x38],0x6d
  402b25:	jecxz  0x402b71
  402b27:	mov    al,ds:0x5253e91a
  402b2c:	mov    al,ds:0x46d30c7c
  402b31:	(bad)
  402b34:	mov    al,ds:0x1e9ec046
  402b39:	mov    cl,0xb5
  402b3b:	adc    bh,bh
  402b3d:	inc    edi
  402b3e:	ins    BYTE PTR es:[edi],dx
  402b3f:	enter  0xfc5,0xa
  402b43:	out    0x8c,eax
  402b45:	out    0x1b,al
  402b47:	sbb    edi,DWORD PTR [ebx-0x37]
  402b4a:	mov    ebx,0x974ab884
  402b4f:	into   
  402b50:	rcr    ebp,1
  402b52:	imul   edx
  402b54:	mov    DWORD PTR [esi-0x3687d45b],0x2df0e31d
  402b5e:	pop    esi
  402b5f:	call   0xc039705d
  402b64:	pop    esp
  402b65:	sub    al,dl
  402b67:	pop    esp
  402b68:	lock out dx,eax
  402b6a:	and    dl,al
  402b6c:	jp     0x402b3d
  402b6e:	mov    edi,0x148b475d
  402b73:	and    ecx,eax
  402b75:	dec    esp
  402b76:	xor    ebp,DWORD PTR [ecx+0x9291da0]
  402b7c:	bound  esp,QWORD PTR [eax+eax*2-0x6f]
  402b80:	add    BYTE PTR [ebx-0x13],dl
  402b83:	loopne 0x402b09
  402b85:	and    eax,0x65692ae4
  402b8a:	jo     0x402bf1
  402b8c:	in     al,0x5d
  402b8e:	fisttp QWORD PTR [ecx+0x61]
  402b91:	int    0x69
  402b93:	xchg   BYTE PTR [ebp+0x242afa99],dh
  402b99:	jo     0x402b2c
  402b9b:	xchg   DWORD PTR [ecx-0x29],ebx
  402b9e:	and    ebp,DWORD PTR [ecx-0x50]
  402ba1:	mov    bh,0xd9
  402ba3:	call   0x3a4e:0xe8f92b5e
  402baa:	fdiv   st(3),st
  402bac:	sub    DWORD PTR [edi+0x32],edx
  402baf:	mov    eax,0x5378c6c3
  402bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bb5:	add    eax,0x497553db
  402bba:	stos   DWORD PTR es:[edi],eax
  402bbb:	push   ds
  402bbc:	xchg   DWORD PTR [eax-0x70],edi
  402bbf:	sbb    BYTE PTR [edi+0x35],bl
  402bc2:	push   esi
  402bc3:	gs xchg esi,eax
  402bc5:	enter  0x81d0,0x52
  402bc9:	in     al,dx
  402bca:	push   ss
  402bcb:	pop    esp
  402bcc:	retf   
  402bcd:	push   0xffffff8c
  402bcf:	pop    edi
  402bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bd1:	cdq    
  402bd2:	scas   eax,DWORD PTR es:[edi]
  402bd3:	adc    ecx,edi
  402bd5:	inc    ebx
  402bd6:	inc    esp
  402bd7:	mov    eax,ds:0x67bd771a
  402bdc:	fiadd  DWORD PTR [eax]
  402bde:	jecxz  0x402beb
  402be0:	in     al,0x7c
  402be2:	dec    ebx
  402be3:	scas   eax,DWORD PTR es:[edi]
  402be4:	inc    esp
  402be5:	fistp  DWORD PTR [edx+edi*1]
  402be8:	out    0xcc,eax
  402bea:	xor    ah,bl
  402bec:	bound  eax,QWORD PTR [ebp+0x31d188d1]
  402bf2:	in     eax,dx
  402bf3:	cmp    edi,DWORD PTR [edx-0x58]
  402bf6:	shl    DWORD PTR [ecx],0xf2
  402bf9:	push   0x3d
  402bfb:	and    al,0x31
  402bfd:	jle    0x402c2d
  402bff:	xchg   ebp,eax
  402c00:	adc    esi,DWORD PTR [esi+0x60fcfb37]
  402c06:	mov    bl,al
  402c08:	les    esi,FWORD PTR [edx-0x1f]
  402c0b:	pop    eax
  402c0c:	pop    ebp
  402c0d:	fdivr  DWORD PTR [edx+0x574f718e]
  402c13:	cwde   
  402c14:	pop    esi
  402c15:	mov    bh,0xfa
  402c17:	cmp    BYTE PTR [edx+0xb],ch
  402c1a:	ret    
  402c1b:	add    al,0x13
  402c1d:	aas    
  402c1e:	pop    fs
  402c20:	xlat   BYTE PTR ds:[ebx]
  402c21:	pop    cx
  402c23:	cwde   
  402c24:	inc    edx
  402c25:	dec    esi
  402c26:	sbb    al,0xb2
  402c28:	std    
  402c29:	adc    al,0x20
  402c2b:	fwait
  402c2c:	mov    dl,0x50
  402c2e:	in     eax,0x5e
  402c30:	neg    dl
  402c32:	cdq    
  402c33:	dec    eax
  402c34:	repnz ficomp WORD PTR [edx+ebx*2-0x32]
  402c39:	and    BYTE PTR [edi+eax*1+0x2bd4b3c6],0x30
  402c41:	in     al,dx
  402c42:	pop    ebx
  402c43:	inc    ecx
  402c44:	test   al,0x89
  402c46:	cmp    esi,esi
  402c48:	cdq    
  402c49:	out    0xf2,eax
  402c4b:	jmp    0xab7edc29
  402c50:	lods   eax,DWORD PTR ds:[esi]
  402c51:	inc    edi
  402c52:	add    al,dl
  402c54:	inc    eax
  402c55:	cmc    
  402c56:	pop    es
  402c57:	mov    al,ss:0xb6a2203a
  402c5d:	or     al,0x60
  402c5f:	mov    edx,0xd441e5ce
  402c64:	jns    0x402c1d
  402c66:	mov    eax,0x34104394
  402c6b:	rol    BYTE PTR [edi],cl
  402c6d:	mov    ah,0x8a
  402c6f:	(bad)  
  402c70:	mov    esi,0x8cc1979c
  402c75:	sub    dh,BYTE PTR [esi]
  402c77:	imul   edi,DWORD PTR [ebx],0x852143d7
  402c7d:	xor    eax,0xa2ef4789
  402c82:	imul   eax,ecx,0xffffff9d
  402c85:	mov    edx,0xdac2983b
  402c8a:	enter  0x8d1b,0x1b
  402c8e:	(bad)  
  402c90:	cmp    eax,0x3f42e959
  402c95:	sub    esi,0xffffffef
  402c98:	inc    esi
  402c99:	pop    ebp
  402c9a:	xlat   BYTE PTR ds:[ebx]
  402c9b:	or     esi,esi
  402c9d:	add    eax,0xcaeb4bc8
  402ca2:	sub    eax,0x30916058
  402ca7:	or     cl,bh
  402ca9:	(bad)  
  402cab:	sbb    al,0xb9
  402cad:	sub    bl,ah
  402caf:	cwde   
  402cb0:	push   esp
  402cb1:	fwait
  402cb2:	ds enter 0x3503,0x97
  402cb7:	inc    edx
  402cb8:	mov    ebp,0x9e972987
  402cbd:	and    DWORD PTR [ebx*1+0x2b2e853],ebp
  402cc4:	fwait
  402cc5:	jmp    FWORD PTR [eax+esi*2+0x16551acd]
  402ccc:	xor    esi,DWORD PTR [edi-0x4b]
  402ccf:	mov    ebp,0x418b0eb2
  402cd4:	xor    BYTE PTR [eax-0x16677ab3],bl
  402cda:	and    ebx,DWORD PTR [ecx]
  402cdc:	mov    eax,ds:0xb2d52179
  402ce1:	(bad)  
  402ce2:	shl    DWORD PTR [ebx+0xd],cl
  402ce5:	push   ss
  402ce6:	daa    
  402ce7:	push   ss
  402ce8:	inc    ecx
  402ce9:	inc    ecx
  402cea:	sub    edi,DWORD PTR [edi+0x75541d79]
  402cf0:	enter  0x444d,0xb
  402cf4:	cmp    DWORD PTR [edi],ecx
  402cf6:	xchg   ecx,eax
  402cf7:	(bad)  
  402cf8:	retf   
  402cf9:	shl    DWORD PTR [esi-0x2a235ec9],cl
  402cff:	daa    
  402d00:	ds mov bl,0xce
  402d03:	sbb    edi,ecx
  402d05:	jmp    0x402c96
  402d07:	add    ecx,ebx
  402d09:	jb     0x402ce6
  402d0b:	dec    ebp
  402d0c:	clc    
  402d0d:	out    0x53,eax
  402d0f:	ret    0xa452
  402d12:	jle    0x402d44
  402d14:	into   
  402d15:	dec    ebp
  402d16:	or     DWORD PTR [edi],ebp
  402d18:	mov    ch,0xe9
  402d1a:	sbb    BYTE PTR [edi+ecx*2],bl
  402d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d1e:	pop    edx
  402d1f:	cdq    
  402d20:	xor    eax,0xaa69285a
  402d25:	adc    DWORD PTR [edx+eiz*1],esi
  402d28:	stc    
  402d29:	sub    DWORD PTR ds:0xe0449b03,0x4e420941
  402d33:	ror    DWORD PTR ds:0x83954bfb,1
  402d39:	inc    esi
  402d3a:	lods   eax,DWORD PTR ds:[esi]
  402d3b:	(bad)  
  402d3d:	mov    eax,ds:0x159a02c8
  402d42:	pop    esi
  402d43:	das    
  402d44:	into   
  402d45:	sub    al,ah
  402d47:	test   dh,cl
  402d49:	call   0x8819b9ff
  402d4e:	add    BYTE PTR [ecx-0x5b527623],ah
  402d54:	add    bl,BYTE PTR [eax+0x6d]
  402d57:	shl    DWORD PTR [ebp-0x3f],cl
  402d5a:	loopne 0x402d3c
  402d5c:	mov    ah,BYTE PTR [ecx-0x75e644f5]
  402d62:	dec    ebx
  402d63:	mov    ecx,0x700fa612
  402d68:	lea    ecx,[ebp-0x7e]
  402d6b:	mov    BYTE PTR [eax+ecx*1],ah
  402d6e:	sbb    al,0x1e
  402d70:	mov    DWORD PTR [edi],ecx
  402d72:	cli    
  402d73:	outs   dx,BYTE PTR ds:[esi]
  402d74:	push   esi
  402d75:	or     al,0xaf
  402d77:	popf   
  402d78:	or     dh,al
  402d7a:	pop    edi
  402d7b:	sbb    BYTE PTR [edx-0x5d82095d],ah
  402d81:	add    ecx,DWORD PTR [ecx+0x65]
  402d84:	inc    esp
  402d85:	outs   dx,DWORD PTR ds:[esi]
  402d86:	mov    ds:0xcc382b89,al
  402d8b:	loopne 0x402d89
  402d8d:	xchg   ebx,eax
  402d8e:	mov    ah,0xc5
  402d90:	scas   eax,DWORD PTR es:[edi]
  402d91:	leave  
  402d92:	xchg   DWORD PTR [ebx+0x5f],esi
  402d95:	pop    eax
  402d96:	dec    eax
  402d97:	dec    ebp
  402d98:	bound  ebp,QWORD PTR [edx]
  402d9a:	xor    edi,edi
  402d9c:	xchg   esi,eax
  402d9d:	je     0x402daa
  402d9f:	mov    esi,0xbffc1529
  402da4:	cmp    esi,DWORD PTR [ebp+0x48]
  402da7:	jns    0x402ddf
  402da9:	push   esp
  402daa:	cld    
  402dab:	xchg   edi,ecx
  402dad:	jo     0x402e27
  402daf:	mov    al,ds:0xf61006fd
  402db4:	jp     0x402e1d
  402db6:	jmp    0xe66fda89
  402dbb:	(bad)  
  402dbc:	jb     0x402d89
  402dbe:	mov    bl,0x39
  402dc0:	jbe    0x402ded
  402dc2:	lea    edi,[ebp+0x29919cb0]
  402dc8:	jno    0x402dd8
  402dca:	mov    BYTE PTR [esi+eax*8],cl
  402dcd:	jle    0x402dac
  402dcf:	ja     0x402e04
  402dd1:	xchg   ebx,eax
  402dd2:	popf   
  402dd3:	pop    ecx
  402dd4:	ret    0x75a2
  402dd7:	ror    DWORD PTR [eax+0x24d4c82e],cl
  402ddd:	test   BYTE PTR [edx-0xc],ch
  402de0:	ret    0xe46a
  402de3:	pop    ecx
  402de4:	xchg   ebp,eax
  402de5:	cmp    al,0x65
  402de7:	dec    esp
  402de8:	xsave  [eax*4+0x16ce298f]
  402df0:	sbb    DWORD PTR [esi],0x19b394b8
  402df6:	call   0xf10c8802
  402dfb:	imul   ecx,DWORD PTR [esi],0xffffff9b
  402dfe:	and    al,0xbe
  402e00:	jl     0x402d90
  402e02:	pop    esp
  402e03:	mov    al,0x93
  402e05:	push   0x3c05b060
  402e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e0b:	rcl    DWORD PTR [edi],cl
  402e0d:	aaa    
  402e0e:	cmp    ah,BYTE PTR [eax-0x323bb463]
  402e14:	mov    dh,BYTE PTR ss:[ecx+0x3f]
  402e18:	test   al,0x6b
  402e1a:	cmp    al,BYTE PTR [edi]
  402e1c:	jae    0x402e21
  402e1e:	push   edi
  402e1f:	add    eax,0xa428a832
  402e24:	cmp    al,0x23
  402e26:	jnp    0x402e60
  402e28:	and    DWORD PTR [eax+ebx*8+0x785b7fad],eax
  402e2f:	pop    ss
  402e30:	cs push ds
  402e32:	jbe    0x402e96
  402e34:	aad    0xf6
  402e36:	test   eax,0x85281438
  402e3b:	push   edi
  402e3c:	lock cwde 
  402e3e:	sub    BYTE PTR [ebx],ch
  402e40:	shr    edi,cl
  402e42:	iret   
  402e43:	xlat   BYTE PTR ds:[ebx]
  402e44:	xchg   ecx,eax
  402e45:	dec    edi
  402e46:	ja     0x402dd6
  402e48:	std    
  402e49:	adc    al,0x78
  402e4b:	and    DWORD PTR [edi],0x5f
  402e4e:	(bad)  
  402e4f:	cli    
  402e50:	fisttp DWORD PTR [edx+0x72413395]
  402e56:	xchg   ebp,eax
  402e57:	outs   dx,DWORD PTR ds:[esi]
  402e58:	pop    eax
  402e59:	sahf   
  402e5a:	push   edi
  402e5b:	dec    esp
  402e5c:	mov    ebp,0x4f1b8f19
  402e61:	stos   DWORD PTR es:[edi],eax
  402e62:	sub    al,0x50
  402e65:	mov    eax,0x8789cd33
  402e6a:	adc    eax,0xb2ad27e8
  402e6f:	mov    cl,0x56
  402e71:	push   ecx
  402e72:	push   0xffffffae
  402e74:	mov    al,ds:0xa8d922bd
  402e79:	cmp    ebp,DWORD PTR [edi+0x41]
  402e7c:	xchg   edx,eax
  402e7d:	fsub   st(1),st
  402e7f:	xchg   esp,eax
  402e80:	xchg   ebx,eax
  402e81:	push   cs
  402e82:	jl     0x402e42
  402e84:	out    dx,eax
  402e85:	adc    ecx,ebx
  402e87:	loope  0x402ea9
  402e89:	push   eax
  402e8a:	or     edi,DWORD PTR [esi-0x2479ecf3]
  402e90:	xchg   ebx,eax
  402e91:	jmp    0xbeb4720a
  402e96:	lods   al,BYTE PTR ds:[esi]
  402e97:	sahf   
  402e98:	jnp    0x402eea
  402e9a:	and    ah,BYTE PTR [ebp+0x6d]
  402e9d:	jmp    0x402e88
  402e9f:	jge    0x402e7a
  402ea1:	pusha  
  402ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ea3:	dec    ecx
  402ea4:	xchg   edx,eax
  402ea5:	fistp  QWORD PTR [ebx+ebx*1-0x2862e9bb]
  402eac:	sbb    al,0xbc
  402eae:	(bad)  
  402eaf:	lahf   
  402eb0:	arpl   WORD PTR [edx+0x2dd36c1c],di
  402eb6:	add    BYTE PTR [esp+edx*4-0x4287abd6],0xfa
  402ebe:	dec    edi
  402ebf:	adc    BYTE PTR [esi],bh
  402ec1:	push   0x20abb5fa
  402ec6:	imul   ebx,DWORD PTR [ebx],0x7b29b4d7
  402ecc:	arpl   ax,bx
  402ece:	sub    al,0x92
  402ed0:	pop    ebp
  402ed1:	inc    eax
  402ed2:	mov    ch,0x96
  402ed4:	cwde   
  402ed5:	out    0x33,al
  402ed7:	add    DWORD PTR [edi-0x3597096b],edi
  402edd:	or     al,0xd3
  402edf:	imul   eax,DWORD PTR [esp+edi*1],0xd381ba4e
  402ee6:	clc    
  402ee7:	icebp  
  402ee8:	mov    esp,0xc04e85ba
  402eed:	inc    esi
  402eee:	xchg   BYTE PTR [edi+0x5],ah
  402ef1:	xor    BYTE PTR [eax],0xf4
  402ef4:	mov    ds:0xa1507a8d,al
  402ef9:	dec    ecx
  402efa:	das    
  402efb:	in     eax,0x8b
  402efd:	inc    edx
  402efe:	scas   al,BYTE PTR es:[edi]
  402eff:	in     eax,dx
  402f00:	pop    esi
  402f01:	iret   
  402f02:	dec    edx
  402f03:	mul    BYTE PTR [edx+eiz*4]
  402f06:	mov    esp,0x653db4d4
  402f0b:	inc    esi
  402f0c:	sbb    ah,bl
  402f0e:	cmc    
  402f0f:	stos   DWORD PTR es:[edi],eax
  402f10:	xor    eax,0x5a1331ef
  402f15:	jae    0x402ec1
  402f17:	sar    DWORD PTR [ecx+0x308ed406],cl
  402f1d:	shl    DWORD PTR [ecx+0x30a098aa],cl
  402f23:	dec    ebx
  402f24:	cmp    eax,0xe0dc8b25
  402f29:	test   eax,0xf324abe2
  402f2e:	std    
  402f2f:	xor    dl,BYTE PTR [ebp+0x77]
  402f32:	fwait
  402f33:	je     0x402f49
  402f35:	out    0x63,eax
  402f37:	push   edi
  402f38:	jmp    0x402faa
  402f3a:	mov    edi,DWORD PTR [eax-0x3e]
  402f3d:	dec    esp
  402f3e:	in     eax,0x5b
  402f40:	xor    edi,DWORD PTR [edx+0x28]
  402f43:	jg     0x402ef6
  402f45:	fild   DWORD PTR [ebx-0x64112fa6]
  402f4b:	cmc    
  402f4c:	(bad)  
  402f4d:	mov    al,0xbb
  402f4f:	jmp    0x5c8d04e6
  402f54:	mov    eax,0x6fbdbf1d
  402f59:	mov    ecx,0x5f54871b
  402f5e:	mul    BYTE PTR [esi-0x2ff70f16]
  402f64:	add    esp,ebp
  402f66:	pop    ss
  402f67:	(bad)  
  402f68:	cmp    ah,BYTE PTR [ebx]
  402f6a:	loopne 0x402fd2
  402f6c:	cmc    
  402f6d:	cmp    ecx,DWORD PTR gs:[ebx]
  402f70:	ret    
  402f71:	mov    al,ds:0xf56b1664
  402f76:	cmp    edi,DWORD PTR [esi-0x33]
  402f79:	mov    bl,BYTE PTR [eax-0x22ab4ecc]
  402f7f:	jmp    FWORD PTR [edx+0xf]
  402f82:	sbb    al,0x4f
  402f84:	lahf   
  402f85:	test   eax,0x8043397e
  402f8a:	xor    al,0x75
  402f8c:	and    DWORD PTR [ecx-0x59],0xffffffb0
  402f90:	rcr    DWORD PTR [edx],0xd1
  402f93:	(bad)  
  402f95:	xor    BYTE PTR [ebx+0x3d],bh
  402f98:	inc    ebx
  402f99:	call   0x9bb12c58
  402f9e:	jae    0x402fb1
  402fa0:	inc    ecx
  402fa1:	fnstenv [edx]
  402fa3:	pop    ss
  402fa4:	xchg   esp,eax
  402fa5:	shl    esi,1
  402fa7:	int3   
  402fa8:	xchg   ebp,eax
  402fa9:	das    
  402faa:	pminsw mm4,QWORD PTR [eax-0x71b58c21]
  402fb1:	mov    esi,0x2fc7d5cc
  402fb6:	add    eax,esp
  402fb8:	(bad)  
  402fb9:	inc    esi
  402fba:	(bad)  
  402fbb:	cld    
  402fbc:	xchg   esp,eax
  402fbd:	jno    0x403029
  402fbf:	and    al,0xe5
  402fc1:	xor    esi,DWORD PTR [edi+0xa]
  402fc4:	pop    esp
  402fc5:	aas    
  402fc6:	pushf  
  402fc7:	adc    al,0x21
  402fc9:	jo     0x40300d
  402fcb:	pop    esi
  402fcc:	inc    esp
  402fcd:	add    ecx,DWORD PTR [eax-0x592bec7b]
  402fd3:	sbb    bl,BYTE PTR [ebx+ebp*2-0x35]
  402fd7:	dec    ebx
  402fd8:	xchg   esp,eax
  402fd9:	sbb    al,0x3b
  402fdb:	in     al,dx
  402fdc:	jne    0x402fa7
  402fde:	sti    
  402fdf:	inc    esi
  402fe0:	int    0xa9
  402fe2:	push   eax
  402fe3:	push   esi
  402fe4:	cli    
  402fe5:	pop    eax
  402fe6:	das    
  402fe7:	add    ecx,esi
  402fe9:	and    al,0x51
  402feb:	enter  0x6b24,0x4e
  402fef:	fwait
  402ff0:	into   
  402ff1:	ror    BYTE PTR [esi],0x27
  402ff4:	ins    DWORD PTR es:[edi],dx
  402ff5:	mov    al,ds:0x8bed8867
  402ffa:	sbb    al,0xc7
  402ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ffd:	inc    ecx
  402ffe:	mov    ds:0x3e0e1f97,eax
  403003:	(bad)  
  403004:	xor    eax,0x13479fd8
  403009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40300a:	out    0x36,al
  40300c:	inc    edi
  40300d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40300e:	pop    ecx
  40300f:	imul   esi,DWORD PTR [esi+0x78],0x4cadc904
  403016:	dec    ecx
  403017:	std    
  403018:	loopne 0x40300e
  40301a:	mov    ds:0xd7798a6c,al
  40301f:	add    edx,edi
  403021:	lock in al,0x93
  403024:	mov    DWORD PTR [eax+eiz*4+0x11b278d3],eax
  40302b:	cwde   
  40302c:	stos   BYTE PTR es:[edi],al
  40302d:	shl    BYTE PTR [ebx],1
  40302f:	sub    al,0xe8
  403031:	add    al,0x75
  403033:	add    edx,DWORD PTR [edx-0x13dba2cf]
  403039:	js     0x402fc9
  40303b:	aaa    
  40303c:	(bad)  
  40303d:	adc    dl,BYTE PTR [esi]
  40303f:	sbb    BYTE PTR ds:0x3bc11efc,ah
  403045:	push   eax
  403046:	or     al,BYTE PTR [eax-0x26]
  403049:	cli    
  40304a:	inc    ebp
  40304b:	cs push edx
  40304d:	scas   al,BYTE PTR es:[edi]
  40304e:	push   edx
  40304f:	push   ebx
  403050:	gs (bad) 
  403052:	fld    DWORD PTR [ebp+0x3e19d86f]
  403058:	push   ss
  403059:	jno    0x4030b5
  40305b:	std    
  40305c:	nop
  40305d:	imul   eax,DWORD PTR [edx+ebx*4],0xffffffb2
  403061:	xor    ebx,esp
  403063:	inc    ebp
  403064:	mov    BYTE PTR [ecx-0x33],ch
  403067:	xchg   esp,eax
  403068:	inc    ebx
  403069:	push   0xfffffff1
  40306b:	xchg   esp,eax
  40306c:	xor    al,0x44
  40306e:	and    edx,edx
  403070:	pop    ds
  403071:	loop   0x4030e3
  403073:	add    al,0x90
  403075:	xor    DWORD PTR [ecx-0x59],edx
  403078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403079:	mov    cl,BYTE PTR [edi+edx*2-0x2a]
  40307d:	fidivr DWORD PTR ds:0x1223d86
  403083:	adc    DWORD PTR [esi+edx*1-0xacd0620],edx
  40308a:	pop    edi
  40308b:	lods   eax,DWORD PTR ds:[esi]
  40308c:	adc    BYTE PTR [ebp+0x5f71de77],ah
  403092:	mov    eax,ds:0x3261ed0e
  403097:	mov    eax,ds:0xfec92f9f
  40309c:	data16 and al,BYTE PTR [di]
  4030a0:	(bad)  
  4030a2:	loop   0x403123
  4030a4:	lock test BYTE PTR [esi-0x23],ch
  4030a8:	into   
  4030a9:	cwde   
  4030aa:	mov    ah,0x42
  4030ac:	xchg   ecx,eax
  4030ad:	imul   esi,DWORD PTR [eax],0x9f8b1c81
  4030b3:	outs   dx,DWORD PTR ds:[esi]
  4030b4:	cmp    dh,BYTE PTR [ecx-0x79]
  4030b7:	mul    DWORD PTR [eax]
  4030b9:	jp     0x4030a0
  4030bb:	cs jle 0x4030d2
  4030be:	retf   0x4896
  4030c1:	cmp    dl,BYTE PTR [edi+0x2d]
  4030c4:	daa    
  4030c5:	lods   al,BYTE PTR ds:[esi]
  4030c6:	xchg   BYTE PTR [ebp+0x17],ah
  4030c9:	arpl   WORD PTR [edx-0x759dad15],cx
  4030cf:	jns    0x403118
  4030d1:	pop    ds
  4030d2:	and    BYTE PTR [edi],0x4a
  4030d5:	xchg   DWORD PTR [edx-0x2558463b],ebx
  4030db:	add    edi,DWORD PTR [esi-0x1c]
  4030de:	(bad)  
  4030df:	aad    0xd1
  4030e1:	(bad)  
  4030e2:	jae    0x403104
  4030e4:	xchg   edx,eax
  4030e5:	and    DWORD PTR [ecx-0x1e],edx
  4030e8:	jg     0x403086
  4030ea:	mov    ah,BYTE PTR [eax+0x67]
  4030ed:	push   0xe1cdb6a1
  4030f2:	scas   al,BYTE PTR es:[edi]
  4030f3:	add    BYTE PTR [edi+0x73c9d4d],0x6e
  4030fa:	xor    DWORD PTR [esi-0x346b11d6],edx
  403100:	push   esp
  403101:	xlat   BYTE PTR ds:[ebx]
  403102:	shl    BYTE PTR ds:0x3013d8b5,1
  403108:	sar    BYTE PTR [eax+0x76d0dc4b],1
  40310e:	jb     0x403100
  403110:	pop    ebp
  403111:	(bad)  
  403112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403113:	dec    esp
  403114:	enter  0x7812,0x64
  403118:	mov    esp,0x62ea1cc9
  40311d:	or     ch,cl
  40311f:	adc    ch,cl
  403121:	mov    eax,0x6516b2d5
  403126:	test   ch,dl
  403128:	sar    ah,1
  40312a:	sub    dl,cl
  40312c:	retf   0xb834
  40312f:	adc    dh,ch
  403131:	cmp    eax,0x18ffe38
  403136:	leave  
  403137:	ret    
  403138:	adc    eax,DWORD PTR [ebx+0x62]
  40313b:	cmp    ebx,ebp
  40313d:	es (bad) 
  40313f:	(bad)  
  403140:	xchg   esp,eax
  403141:	aad    0xf3
  403143:	je     0x4031ba
  403145:	mov    esp,0x143741aa
  40314a:	and    DWORD PTR [ebp-0x5b8df3d4],esi
  403150:	jne    0x403173
  403152:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403154:	adc    ecx,DWORD PTR [ecx]
  403156:	jmp    0x978f:0xbdecbcaf
  40315d:	add    dh,BYTE PTR [edx]
  40315f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403160:	pop    edi
  403161:	out    dx,eax
  403162:	pop    edx
  403163:	xor    eax,0xb3eea73f
  403168:	adc    dl,BYTE PTR [ecx-0x41]
  40316b:	aas    
  40316c:	dec    edi
  40316d:	mov    eax,DWORD PTR [edx+0x58346da4]
  403173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403174:	pusha  
  403175:	div    ebx
  403177:	out    0x69,eax
  403179:	xchg   ecx,eax
  40317a:	in     eax,dx
  40317b:	std    
  40317c:	mov    al,0x50
  40317e:	ss add eax,0x319c2f2c
  403184:	inc    esp
  403185:	xchg   edi,eax
  403186:	mov    esp,0xf185c4c9
  40318b:	(bad)  
  40318c:	outs   dx,BYTE PTR ds:[esi]
  40318d:	cmp    DWORD PTR [ecx],edx
  40318f:	inc    ebx
  403190:	push   ecx
  403191:	jge    0x403203
  403193:	(bad)  
  403194:	loope  0x4031cb
  403196:	add    eax,0xc8ff8004
  40319b:	(bad)  
  40319c:	and    edi,DWORD PTR [esi+0x10]
  40319f:	sub    bh,0xa0
  4031a2:	xchg   ecx,eax
  4031a4:	sub    eax,0xbd904cc
  4031a9:	dec    esp
  4031aa:	xor    ebx,eax
  4031ac:	xchg   edx,eax
  4031ad:	cmp    eax,DWORD PTR [esi+0x45a5baa5]
  4031b3:	lahf   
  4031b4:	out    0x51,al
  4031b6:	gs mov edx,0x774683f5
  4031bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031bd:	adc    DWORD PTR [eax],0x98aeae49
  4031c3:	enter  0x5e64,0xe3
  4031c7:	or     al,0x19
  4031c9:	mov    cl,0x1e
  4031cb:	cmp    eax,0xa5349011
  4031d0:	push   ebp
  4031d1:	jb     0x4031af
  4031d3:	mov    ds:0x121db1a5,al
  4031d8:	or     edi,edx
  4031da:	add    al,0x63
  4031dd:	xchg   edi,eax
  4031de:	xor    DWORD PTR [ecx],ebx
  4031e0:	nop
  4031e1:	(bad)  
  4031e2:	sti    
  4031e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031e4:	pop    ecx
  4031e5:	cwde   
  4031e6:	test   al,0x7c
  4031e9:	xchg   edx,eax
  4031ea:	es mov dh,0x8
  4031ed:	jno    0x403203
  4031ef:	lods   al,BYTE PTR ds:[esi]
  4031f0:	pop    ecx
  4031f1:	push   esi
  4031f2:	fcom   DWORD PTR [esi+0x119ba16f]
  4031f8:	mov    bl,0x3d
  4031fa:	sahf   
  4031fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031fc:	mov    esi,0x6ae0500b
  403201:	jb     0x403263
  403203:	pop    ebp
  403204:	(bad)  
  403205:	and    eax,0x37f50899
  40320a:	mov    WORD PTR [edi-0x67],gs
  40320d:	mul    BYTE PTR [eax+0x5b]
  403210:	mov    dh,0xd9
  403212:	dec    ebp
  403213:	xchg   BYTE PTR [ebp+0x16339c1f],bl
  403219:	popf   
  40321a:	addr16 inc edx
  40321c:	into   
  40321d:	ret    
  40321e:	lds    esi,FWORD PTR [eax-0x56]
  403221:	jo     0x4031f9
  403223:	scas   al,BYTE PTR es:[edi]
  403224:	pusha  
  403225:	mov    ?,WORD PTR [eax+0x7804e794]
  40322b:	lock or esi,DWORD PTR [ecx-0x303c33d8]
  403232:	dec    ebp
  403233:	and    DWORD PTR ds:0x84b02ea7,edx
  403239:	xor    eax,0xd8e522a
  40323e:	cmp    DWORD PTR [esi],ebx
  403240:	hlt    
  403241:	dec    ebx
  403242:	xchg   DWORD PTR [eax-0x4a],edi
  403245:	(bad)  
  403247:	cmp    BYTE PTR [eax-0xe025b44],ah
  40324d:	or     esp,DWORD PTR [eax+edi*1-0x699aabfb]
  403254:	stc    
  403255:	adc    dl,BYTE PTR [esp+ebx*8]
  403258:	and    eax,0x94ff9eec
  40325d:	dec    edi
  40325e:	addr16 hlt 
  403260:	jno    0x403264
  403262:	and    eax,0x88511b2e
  403267:	das    
  403268:	add    edx,esp
  40326a:	inc    ecx
  40326c:	pushf  
  40326d:	adc    al,0x40
  40326f:	lods   eax,DWORD PTR ds:[esi]
  403270:	shl    DWORD PTR fs:[edi-0x41],0xa3
  403275:	and    ecx,DWORD PTR [ecx-0x5e]
  403278:	int3   
  403279:	inc    ebp
  40327a:	(bad)  
  40327c:	lods   eax,DWORD PTR ds:[esi]
  40327d:	int    0x52
  40327f:	stc    
  403280:	in     eax,dx
  403281:	cmp    al,0x5f
  403283:	jno    0x403241
  403285:	xor    al,0xdc
  403287:	and    eax,0xa3c6bcde
  40328d:	popa   
  40328e:	outs   dx,DWORD PTR ds:[esi]
  40328f:	mov    cl,0x95
  403291:	aaa    
  403292:	fwait
  403293:	sub    al,0x65
  403295:	adc    BYTE PTR [ebp+0x5d2466a9],dh
  40329b:	fldenv [eax-0x2]
  40329e:	inc    edx
  40329f:	fstp   st(5)
  4032a1:	or     ebx,DWORD PTR [edx+0x76]
  4032a4:	icebp  
  4032a5:	(bad)  
  4032a6:	pop    esp
  4032a7:	adc    eax,0xe7441ca7
  4032ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032ad:	inc    edx
  4032ae:	cli    
  4032af:	and    edi,DWORD PTR [ebx]
  4032b1:	push   ecx
  4032b2:	and    eax,DWORD PTR [esi-0x25924842]
  4032b8:	jl     0x4032a7
  4032ba:	push   ebx
  4032bb:	fbstp  TBYTE PTR [eax+0x7610782]
  4032c1:	sahf   
  4032c2:	pop    edi
  4032c3:	imul   esi,DWORD PTR [ecx],0xffffffe8
  4032c6:	mov    bl,ah
  4032c8:	jne    0x40324c
  4032ca:	xlat   BYTE PTR ds:[ebx]
  4032cb:	sbb    DWORD PTR [esi],esi
  4032cd:	loopne 0x403310
  4032cf:	mov    bh,0x6a
  4032d1:	pop    esp
  4032d2:	in     eax,dx
  4032d3:	pop    esp
  4032d4:	cli    
  4032d5:	and    ebx,DWORD PTR [esi-0x62]
  4032d8:	inc    esp
  4032d9:	test   al,0xd5
  4032db:	push   ds
  4032dc:	pop    ebx
  4032dd:	or     al,0x8d
  4032df:	push   cs
  4032e0:	jae    0x40330d
  4032e2:	imul   ecx,DWORD PTR [ebx],0xffffff81
  4032e5:	inc    edx
  4032e6:	test   al,0xd9
  4032e8:	das    
  4032e9:	xor    ebx,DWORD PTR [esi-0x632bc875]
  4032ef:	fnsave [ebx+0x3d]
  4032f2:	or     eax,0x12ecfef7
  4032f7:	mov    ebp,cs
  4032f9:	pop    esp
  4032fa:	pop    DWORD PTR [edi+0x42858ff]
  403300:	lahf   
  403301:	xor    dh,ch
  403303:	mov    al,ds:0xa57e7f00
  403308:	sbb    eax,0xfb920034
  40330d:	adc    BYTE PTR [esi-0x3c48cd85],cl
  403313:	pushf  
  403314:	ret    0x16c0
  403317:	add    edi,DWORD PTR [edi-0x2541eec0]
  40331d:	xchg   esp,eax
  40331e:	arpl   WORD PTR [esi],bp
  403320:	sub    eax,0xc7f4f0dd
  403325:	adc    DWORD PTR [ebp-0x37],esp
  403328:	and    al,0x44
  40332a:	ins    DWORD PTR es:[edi],dx
  40332b:	fiadd  DWORD PTR [eax+0x5b]
  40332e:	jmp    0x1438:0xb10afb08
  403335:	fsub   st(6),st
  403337:	int    0x33
  403339:	cmp    DWORD PTR [edi+ebp*4],eax
  40333c:	pushf  
  40333d:	cmp    dh,BYTE PTR [ebp+0x4c62a9c9]
  403343:	and    DWORD PTR [ebx+0x5abc5acd],edx
  403349:	lahf   
  40334a:	shr    DWORD PTR es:[ebx],cl
  40334d:	or     DWORD PTR [edi+eax*1-0x216f43f2],ebx
  403354:	dec    ebp
  403355:	test   al,0x8f
  403357:	ret    
  403358:	pop    eax
  403359:	mov    BYTE PTR [bp+si+0x5066],al
  40335e:	scas   al,BYTE PTR es:[edi]
  40335f:	inc    eax
  403360:	mov    dh,0x2e
  403362:	into   
  403363:	push   ds
  403364:	psrld  mm1,0xee
  403368:	xchg   esi,eax
  403369:	and    DWORD PTR [ebx-0x6d],0xa01ffc35
  403370:	fwait
  403371:	jmp    0xfcfbf98b
  403376:	add    DWORD PTR [ebp-0x2d],0xffffffb0
  40337a:	inc    ecx
  40337b:	retf   
  40337c:	sahf   
  40337d:	xchg   esp,eax
  40337e:	scas   eax,DWORD PTR es:[edi]
  40337f:	loop   0x4033da
  403381:	or     al,BYTE PTR [edx+ebp*1]
  403384:	gs inc ebx
  403386:	pop    edx
  403387:	pop    eax
  403388:	cmp    bh,dl
  40338a:	push   esi
  40338b:	cld    
  40338c:	sti    
  40338d:	push   ebx
  40338e:	sub    edx,0x7a
  403391:	push   ebx
  403392:	cmp    al,0x97
  403394:	jbe    0x403354
  403396:	(bad)  
  403397:	int    0x63
  403399:	adc    eax,0xef669cae
  40339e:	or     ecx,esp
  4033a0:	imul   edi,DWORD PTR [edi],0xf1bdf21
  4033a6:	inc    edi
  4033a7:	xor    ecx,DWORD PTR [esi-0x3ea07978]
  4033ad:	sub    edi,DWORD PTR [esi-0x46]
  4033b0:	dec    ebp
  4033b1:	ror    DWORD PTR [ebx],cl
  4033b3:	(bad)  
  4033b4:	jmp    0xcc11c7b2
  4033b9:	xor    BYTE PTR [edx-0xd],dl
  4033bc:	add    BYTE PTR [eax],0xf2
  4033bf:	loopne 0x4033bc
  4033c1:	dec    edx
  4033c2:	sub    DWORD PTR [esi],ebp
  4033c4:	js     0x4033fa
  4033c6:	hlt    
  4033c7:	xchg   ebx,eax
  4033c8:	mov    bh,0x3f
  4033ca:	pop    ebp
  4033cb:	pop    ds
  4033cc:	sub    eax,0x9a2591f3
  4033d1:	sub    dl,cl
  4033d3:	mov    al,ds:0x2e70c7e0
  4033d8:	jmp    0x4033b7
  4033da:	je     0x4033bc
  4033dc:	mov    ebx,0xc2ed8c7d
  4033e1:	pop    edx
  4033e2:	lods   eax,DWORD PTR ds:[esi]
  4033e3:	or     bh,cl
  4033e5:	aas    
  4033e6:	icebp  
  4033e7:	mov    ?,WORD PTR [eax]
  4033e9:	push   cs
  4033ea:	sar    BYTE PTR [ecx],0xab
  4033ed:	icebp  
  4033ee:	fisttp QWORD PTR [edx+ebx*2-0x38025519]
  4033f5:	push   esi
  4033f6:	pop    edx
  4033f7:	ss and cl,dl
  4033fa:	imul   ebx,DWORD PTR [edx-0x5f],0xffffffbc
  4033fe:	loope  0x4033af
  403400:	mov    esi,0xe3baa958
  403405:	push   esi
  403406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403407:	iret   
  403408:	mov    eax,ds:0x767c9d15
  40340d:	rol    DWORD PTR [ebx+0x2fd529c9],0xe4
  403414:	pop    ss
  403415:	xchg   esp,eax
  403416:	mov    edx,0x4ea6ad50
  40341b:	and    DWORD PTR [edi],ecx
  40341d:	xchg   ebx,eax
  40341e:	in     al,dx
  40341f:	pop    ss
  403420:	rcr    BYTE PTR [eax],0x2c
  403423:	mov    eax,ds:0x5d25428
  403428:	mov    ecx,0xa30b4426
  40342d:	mov    edi,0xbd24344
  403432:	xor    BYTE PTR [edx-0x32],0x7a
  403436:	bound  esp,QWORD PTR [edx]
  403438:	xor    DWORD PTR [ebp+0x74302e97],ebx
  40343e:	inc    ebp
  40343f:	lea    esp,[esi+0x693d3885]
  403445:	sbb    ah,BYTE PTR [esi+0x3c674ec5]
  40344b:	adc    al,0x5a
  40344d:	push   ebx
  40344e:	out    dx,al
  40344f:	mov    cl,0x62
  403451:	inc    edx
  403452:	fwait
  403453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403454:	adc    BYTE PTR [edi-0x4119add6],dl
  40345a:	aad    0xea
  40345c:	fsubr  st(4),st
  40345e:	sub    al,0x3b
  403460:	mov    WORD PTR [eax],ds
  403462:	xlat   BYTE PTR ds:[ebx]
  403463:	xor    eax,0xc8fbdb47
  403468:	sub    dh,BYTE PTR [edi]
  40346a:	call   edi
  40346c:	stos   BYTE PTR es:[edi],al
  40346d:	pop    ss
  40346e:	int    0xfc
  403470:	xor    eax,DWORD PTR [ebx]
  403472:	fwait
  403473:	addr16 sub esp,esi
  403476:	and    bl,bl
  403478:	add    DWORD PTR [eax+0x5a53e737],esi
  40347e:	dec    ebp
  40347f:	add    ecx,0xffffffe6
  403482:	gs mov esp,0xc806c6b4
  403488:	leave  
  403489:	push   0xef1368e1
  40348e:	pop    esi
  40348f:	cli    
  403490:	nop
  403491:	xor    DWORD PTR [ecx+0x551a885a],edi
  403497:	ret    
  403498:	jo     0x403518
  40349a:	mov    edi,DWORD PTR [ecx-0x6b36cb82]
  4034a0:	scas   al,BYTE PTR es:[edi]
  4034a1:	aaa    
  4034a2:	adc    edi,edi
  4034a4:	xor    eax,edi
  4034a6:	pop    eax
  4034a7:	shl    esp,0xd
  4034aa:	push   esp
  4034ab:	jmp    ebp
  4034ad:	pusha  
  4034ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034af:	stos   BYTE PTR es:[edi],al
  4034b0:	jns    0x403526
  4034b2:	add    dl,BYTE PTR [esi-0x3d]
  4034b5:	adc    BYTE PTR [ecx],al
  4034b7:	inc    esi
  4034b8:	fs xchg edi,eax
  4034ba:	aaa    
  4034bb:	(bad)  [esi-0x2e]
  4034be:	inc    ebx
  4034bf:	xor    al,0xfe
  4034c1:	icebp  
  4034c2:	xchg   edi,eax
  4034c3:	or     DWORD PTR [ecx+0x77],esp
  4034c6:	pop    eax
  4034c7:	mov    ds:0xd6a9b025,al
  4034cc:	sti    
  4034cd:	xor    ah,ah
  4034cf:	mov    edx,eax
  4034d1:	outs   dx,BYTE PTR ds:[esi]
  4034d2:	sbb    eax,0x53664430
  4034d7:	cmp    ebx,edi
  4034d9:	fs sti 
  4034db:	sbb    ebp,DWORD PTR [eax]
  4034dd:	add    eax,0x11b9b751
  4034e2:	add    esp,edi
  4034e4:	gs loope 0x403527
  4034e7:	cli    
  4034e8:	jmp    0x44e9:0x8c58e14f
  4034ef:	mov    cl,0xdc
  4034f1:	or     dl,BYTE PTR [edx-0x35]
  4034f4:	aaa    
  4034f5:	sub    ebp,ecx
  4034f7:	or     eax,0x8bb30390
  4034fc:	xlat   BYTE PTR ds:[ebx]
  4034fd:	push   esp
  4034fe:	cdq    
  4034ff:	push   edx
  403500:	and    eax,0x12e7c114
  403505:	aaa    
  403506:	mov    ?,WORD PTR [esi+0x43c150ef]
  40350c:	fadd   QWORD PTR [esi-0x6ab17351]
  403512:	jne    0x4034dd
  403514:	ret    0x88e
  403517:	fld    QWORD PTR [eax+0x43]
  40351a:	and    al,0xdf
  40351c:	shr    BYTE PTR [ebp+0x7815e516],0x8d
  403523:	push   esi
  403524:	fdivrp st(5),st
  403526:	push   ecx
  403527:	cmp    al,0x64
  403529:	sub    al,0x94
  40352b:	sar    DWORD PTR [esp+edi*8+0x2],0x9f
  403530:	outs   dx,BYTE PTR ds:[esi]
  403531:	or     eax,0x28e3bb0c
  403536:	retf   
  403537:	jp     0x4034e2
  403539:	push   ebp
  40353a:	rcr    DWORD PTR [eax+0x61],0xf9
  40353e:	mov    dl,0xd9
  403540:	pop    esi
  403541:	add    ecx,DWORD PTR [esi]
  403543:	mov    ds:0x3f0c1e52,eax
  403548:	cmp    al,0x9f
  40354a:	in     al,dx
  40354b:	icebp  
  40354c:	leave  
  40354d:	xchg   edx,eax
  40354e:	jmp    0x403552
  403550:	std    
  403551:	bound  edi,QWORD PTR [ebx-0x74e3f0e6]
  403557:	push   edi
  403558:	clc    
  403559:	ins    DWORD PTR es:[edi],dx
  40355a:	sar    dh,1
  40355c:	add    edx,eax
  40355e:	inc    esi
  40355f:	add    BYTE PTR [esi+0x71],ah
  403562:	es or  al,0x83
  403565:	not    dl
  403567:	xchg   edx,eax
  403568:	sbb    bh,BYTE PTR [eax]
  40356a:	push   edx
  40356b:	xchg   esp,eax
  40356c:	and    BYTE PTR [edx+0x73],dl
  40356f:	cmc    
  403570:	int    0xe6
  403572:	pop    edi
  403573:	loop   0x403521
  403575:	and    eax,0x615b78cc
  40357a:	dec    ecx
  40357b:	push   ecx
  40357c:	adc    cl,BYTE PTR [eax-0x1c]
  40357f:	rcr    DWORD PTR [eax+0x66],1
  403582:	inc    ebx
  403583:	std    
  403584:	add    DWORD PTR [ebp-0x35],esp
  403587:	imul   ebp
  403589:	xor    ch,BYTE PTR [esi+ecx*1+0x785c8bc8]
  403590:	cmp    DWORD PTR [edx-0x5e],0xffffffb3
  403594:	(bad)  
  403595:	jno    0x403593
  403597:	data16 sahf 
  403599:	xchg   esp,eax
  40359a:	daa    
  40359b:	jl     0x4035f3
  40359d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40359e:	sti    
  40359f:	mov    BYTE PTR [ebx],dl
  4035a1:	mov    dl,0x80
  4035a3:	aas    
  4035a4:	jae    0x403549
  4035a6:	popa   
  4035a7:	(bad)  
  4035a8:	(bad)  
  4035a9:	f2xm1  
  4035ab:	call   0xdd77:0x43ac3227
  4035b2:	(bad)  
  4035b3:	in     al,0x86
  4035b5:	scas   eax,DWORD PTR es:[edi]
  4035b6:	jb     0x4035c6
  4035b8:	loop   0x4035e0
  4035ba:	mov    ebx,0xb9b3c570
  4035bf:	retf   0x269f
  4035c2:	jae    0x403546
  4035c4:	daa    
  4035c5:	xlat   BYTE PTR ds:[ebx]
  4035c6:	xor    BYTE PTR [edi+0x13e3bd9e],ch
  4035cc:	repnz or al,0x32
  4035cf:	jne    0x4035d4
  4035d1:	xchg   edx,eax
  4035d2:	ss xchg bl,ch
  4035d5:	inc    ecx
  4035d6:	retf   0x21ef
  4035d9:	shl    DWORD PTR [ebp+0x2891cec6],1
  4035df:	xchg   edx,eax
  4035e0:	retf   0x2d76
  4035e3:	mov    WORD PTR [ecx+0x7893b311],ds
  4035e9:	loopne 0x4035e5
  4035eb:	sub    BYTE PTR [edx],bh
  4035ed:	dec    edx
  4035ee:	mov    ah,0xd5
  4035f0:	xchg   ebp,eax
  4035f1:	jmp    0x9b883f20
  4035f6:	sub    DWORD PTR [eax-0x761a381d],ebx
  4035fc:	nop
  4035fd:	or     al,0x8
  4035ff:	(bad)  
  403600:	push   0xddc807a6
  403605:	jle    0x40362f
  403607:	ins    DWORD PTR es:[edi],dx
  403608:	aas    
  403609:	or     eax,DWORD PTR [esi-0x51]
  40360c:	in     al,dx
  40360d:	(bad)  
  40360e:	scas   al,BYTE PTR es:[edi]
  40360f:	push   edi
  403610:	push   esi
  403611:	retf   0xabdd
  403614:	ins    DWORD PTR es:[edi],dx
  403615:	in     al,dx
  403616:	loop   0x403643
  403618:	lods   al,BYTE PTR ds:[esi]
  403619:	push   ebp
  40361a:	mov    edx,esp
  40361c:	test   BYTE PTR [ebx],ch
  40361e:	ss push ebp
  403620:	(bad)  
  403621:	stc    
  403622:	dec    DWORD PTR [ebp-0x17]
  403625:	cmp    eax,0xafd74f6
  40362a:	and    DWORD PTR [edi],0xebc044c2
  403630:	sahf   
  403631:	cmp    eax,0x8fa6dfb
  403636:	outs   dx,BYTE PTR ds:[esi]
  403637:	xchg   edi,eax
  403638:	and    BYTE PTR [ebx+eiz*1],0xe1
  40363c:	psllq  mm7,QWORD PTR [ebp-0xc692a22]
  403643:	mov    dh,0x1b
  403645:	dec    esp
  403646:	addr16 dec edx
  403648:	xchg   esi,eax
  403649:	push   edi
  40364a:	sub    al,0xcf
  40364c:	hlt    
  40364d:	jno    0x4035d3
  40364f:	jae    0x4035e4
  403651:	mov    esp,DWORD PTR [eax]
  403653:	pop    esi
  403654:	pop    ds
  403655:	lahf   
  403656:	iret   
  403657:	das    
  403658:	outs   dx,DWORD PTR ds:[esi]
  403659:	and    dh,BYTE PTR [ecx+0x52081afd]
  40365f:	shr    DWORD PTR [ecx+ebx*8-0x465c4b00],cl
  403666:	popa   
  403667:	sbb    dl,BYTE PTR ds:0xfb301708
  40366d:	fwait
  40366e:	xor    DWORD PTR [ebx-0x6d],eax
  403671:	mov    ebx,0x5b0f154d
  403676:	cli    
  403677:	gs dec esp
  403679:	ret    
  40367a:	and    DWORD PTR [ebp-0x7765c2bc],esi
  403680:	es icebp 
  403682:	mov    ?,WORD PTR [edx]
  403684:	sub    ch,BYTE PTR [eax+0x16]
  403687:	xchg   ecx,eax
  403688:	jo     0x403627
  40368a:	sti    
  40368b:	xor    dh,cl
  40368d:	aas    
  40368e:	mov    dl,0xa5
  403690:	xor    edx,DWORD PTR [eax+0x6a1ef2be]
  403696:	xchg   ebx,eax
  403697:	mov    dl,BYTE PTR [esi-0x3baf14b3]
  40369d:	adc    al,0xf1
  40369f:	or     BYTE PTR [eax+ebp*2],cl
  4036a2:	das    
  4036a3:	repz push 0x44404873
  4036a9:	sub    dl,BYTE PTR [edx+0x404359e9]
  4036af:	out    0xf1,al
  4036b1:	lahf   
  4036b2:	in     eax,0x4a
  4036b4:	inc    ebx
  4036b5:	je     0x403710
  4036b7:	daa    
  4036b8:	cwde   
  4036b9:	pusha  
  4036ba:	fdiv   st,st(0)
  4036bc:	adc    BYTE PTR [esi*4-0x32e835c0],dh
  4036c3:	mov    ecx,0xa8c04498
  4036c8:	in     eax,dx
  4036c9:	in     eax,0x83
  4036cb:	add    BYTE PTR [ecx+0x6d],dl
  4036ce:	xchg   DWORD PTR [edx-0x27],ebx
  4036d1:	mov    ds:0xa5fed0,al
  4036d6:	xor    BYTE PTR [edx+ebp*8-0x74],bl
  4036da:	xchg   esp,eax
  4036db:	xchg   ecx,eax
  4036dc:	add    eax,0x691c5021
  4036e1:	jne    0x40371c
  4036e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036e4:	jo     0x40375a
  4036e6:	push   cs
  4036e7:	repnz or BYTE PTR [ebp-0x624bfeff],ah
  4036ee:	iret   
  4036ef:	add    al,0x6f
  4036f1:	xor    edi,DWORD PTR [edx-0x5b]
  4036f4:	pop    ebx
  4036f5:	scas   al,BYTE PTR es:[edi]
  4036f6:	outs   dx,BYTE PTR ds:[esi]
  4036f7:	jb     0x403719
  4036f9:	fdivr  DWORD PTR [ecx]
  4036fb:	mov    DWORD PTR [esp+ebp*4-0x57],eax
  4036ff:	xor    BYTE PTR [ebx-0x49],dl
  403702:	cli    
  403703:	sar    al,0x5f
  403706:	dec    eax
  403707:	dec    ecx
  403708:	mov    esp,0xcafc584e
  40370d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40370e:	sub    DWORD PTR [eax-0x702608d4],ecx
  403714:	bound  eax,QWORD PTR [edi-0x10a5012a]
  40371a:	mov    bh,0xfb
  40371c:	inc    esp
  40371d:	sub    DWORD PTR [ebp+0x5a],eax
  403720:	sbb    al,0x7
  403722:	fsubr  st,st(1)
  403724:	pop    esi
  403725:	jl     0x403768
  403727:	shr    DWORD PTR [eax+ebx*8-0x16],1
  40372b:	clc    
  40372c:	test   DWORD PTR [esi],0xa8bbdff
  403732:	cmp    DWORD PTR [edx-0x1b591b36],ebx
  403738:	clc    
  403739:	lahf   
  40373a:	neg    BYTE PTR [edx-0x29eefa21]
  403740:	pushf  
  403741:	in     eax,0x4b
  403743:	in     eax,dx
  403744:	jae    0x40378a
  403746:	rol    BYTE PTR [edi],0x9f
  403749:	cmp    eax,0xebb2f128
  40374e:	cli    
  40374f:	int3   
  403750:	push   0x6
  403752:	cmc    
  403753:	or     esp,DWORD PTR [edi+0x2c44df3f]
  403759:	(bad)  
  40375a:	in     al,dx
  40375b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40375c:	push   ebx
  40375d:	cmp    al,0xcc
  40375f:	bound  edi,QWORD PTR [eax+edi*1-0x1e]
  403763:	sub    eax,0xc7b67497
  403768:	jns    0x403729
  40376a:	ins    DWORD PTR es:[edi],dx
  40376b:	add    esi,edx
  40376d:	xor    al,0x1a
  40376f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403770:	xlat   BYTE PTR ds:[ebx]
  403771:	mul    BYTE PTR [ecx]
  403773:	scas   al,BYTE PTR es:[edi]
  403774:	aaa    
  403775:	mov    cl,0x7c
  403777:	mov    DWORD PTR [ecx],eax
  403779:	(bad)  
  40377a:	pop    ss
  40377b:	xchg   ebx,eax
  40377c:	call   0x2ccf:0x1e9b711
  403783:	je     0x40374d
  403785:	in     eax,dx
  403786:	out    0x49,eax
  403788:	push   edi
  403789:	(bad)  
  40378a:	sbb    bl,BYTE PTR [ebp+ebp*1+0x2556f111]
  403791:	xor    al,0xe0
  403793:	push   esi
  403794:	stc    
  403795:	adc    DWORD PTR [ecx],esi
  403797:	jge    0x403773
  403799:	push   0xffffffc1
  40379b:	mov    al,ds:0xec0ce7fa
  4037a0:	cdq    
  4037a1:	mov    DWORD PTR [ecx-0x15],eax
  4037a4:	out    dx,eax
  4037a5:	pop    edi
  4037a6:	aad    0x1e
  4037a8:	idiv   DWORD PTR [ebp+eax*2+0x5a]
  4037ac:	sbb    ch,dh
  4037ae:	call   0x87d5:0x108b5e31
  4037b5:	dec    ebp
  4037b6:	sbb    dl,BYTE PTR [ebx]
  4037b8:	xor    edi,DWORD PTR [ecx+0x22]
  4037bb:	sub    eax,0xa036e688
  4037c0:	sbb    al,0x8d
  4037c2:	(bad)  
  4037c3:	retf   
  4037c4:	cdq    
  4037c5:	sar    DWORD PTR [ebx-0x7d],1
  4037c8:	dec    ebx
  4037c9:	mov    BYTE PTR [edi-0x4d],cl
  4037cc:	fdivr  st(1),st
  4037ce:	test   bh,ch
  4037d0:	adc    eax,DWORD PTR [ecx+0x44252265]
  4037d6:	add    al,0x7f
  4037d8:	dec    edx
  4037d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037da:	icebp  
  4037db:	imul   ebp,DWORD PTR [esi],0x569bbed6
  4037e1:	sub    DWORD PTR ds:0xe5c1b45,ebx
  4037e7:	cmp    al,0xfe
  4037e9:	mov    dl,0xc2
  4037eb:	stos   DWORD PTR es:[edi],eax
  4037ec:	leave  
  4037ed:	push   edx
  4037ee:	cmp    ch,dh
  4037f0:	mov    al,al
  4037f2:	cld    
  4037f3:	pushf  
  4037f4:	cmp    al,0xa0
  4037f6:	retf   0x2d92
  4037f9:	inc    ecx
  4037fa:	pop    edi
  4037fb:	sbb    BYTE PTR [ecx+0x41],cl
  4037fe:	adc    al,0x38
  403800:	sbb    bl,BYTE PTR [ebx+0x64a1882c]
  403806:	inc    esp
  403807:	inc    edx
  403808:	push   ds
  403809:	mov    edi,0xb839c4b0
  40380e:	add    eax,0x298f96d6
  403813:	mov    edx,0x4409812c
  403818:	outs   dx,DWORD PTR ds:[esi]
  403819:	leave  
  40381a:	add    BYTE PTR [eax+0x4ea2ba28],dl
  403820:	xchg   esp,eax
  403821:	(bad)  
  403823:	test   eax,0x3dca98f2
  403828:	push   cs
  403829:	push   eax
  40382a:	cmp    dl,dh
  40382c:	out    dx,eax
  40382d:	test   BYTE PTR [edi+0x302bdf30],ch
  403833:	pusha  
  403834:	scas   al,BYTE PTR es:[edi]
  403835:	push   ebx
  403836:	sbb    al,0x54
  403838:	aad    0xd6
  40383a:	mov    esi,0x98626a82
  40383f:	scas   eax,DWORD PTR es:[edi]
  403840:	inc    edi
  403841:	sahf   
  403842:	fild   WORD PTR [esi]
  403844:	mov    ch,0x49
  403846:	in     al,0x23
  403848:	pop    eax
  403849:	aam    0x10
  40384b:	adc    al,0xc6
  40384d:	push   0x7e
  40384f:	push   ebp
  403850:	and    al,0x81
  403852:	push   cs
  403853:	scas   al,BYTE PTR es:[edi]
  403854:	mov    ecx,0x5acbc441
  403859:	sub    eax,0x97ffd20d
  40385e:	ins    BYTE PTR es:[edi],dx
  40385f:	jp     0x40383f
  403861:	aas    
  403862:	loope  0x403814
  403864:	lock add BYTE PTR [esi+edi*8-0x424375a0],bl
  40386c:	popa   
  40386d:	mov    ds:0xed9cfc04,al
  403872:	sbb    al,0xf5
  403874:	push   ecx
  403875:	test   BYTE PTR [ecx+0x3b],ah
  403878:	jnp    0x40386e
  40387a:	adc    BYTE PTR [edx],bl
  40387c:	sbb    al,0xd4
  40387e:	dec    ebp
  40387f:	push   ebx
  403880:	outs   dx,BYTE PTR cs:[esi]
  403882:	lock adc eax,0x633b1d4e
  403888:	xchg   BYTE PTR [ecx],al
  40388a:	leave  
  40388b:	and    cl,dl
  40388d:	dec    DWORD PTR ds:0xf11542c5
  403893:	xchg   DWORD PTR [esi+edi*1+0x2],ebp
  403897:	std    
  403898:	push   eax
  403899:	cmp    DWORD PTR ds:0xc7e66307,0x1cf7fe7
  4038a3:	out    0xdc,eax
  4038a5:	stos   BYTE PTR es:[edi],al
  4038a6:	outs   dx,BYTE PTR ds:[esi]
  4038a7:	in     eax,0x94
  4038a9:	shr    ebp,1
  4038ab:	(bad)  
  4038ac:	ins    BYTE PTR es:[edi],dx
  4038ad:	lods   al,BYTE PTR ds:[esi]
  4038ae:	fisttp WORD PTR [ebx]
  4038b0:	or     DWORD PTR [edi+0x10],ebp
  4038b3:	pop    edi
  4038b4:	push   ss
  4038b5:	cld    
  4038b6:	jne    0x4038fb
  4038b8:	pushf  
  4038b9:	push   es
  4038ba:	dec    ebp
  4038bb:	inc    ecx
  4038bc:	push   ebp
  4038bd:	bound  ecx,QWORD PTR [ebp+0x58]
  4038c0:	push   ecx
  4038c1:	pslld  mm6,QWORD PTR [esi-0x33b625eb]
  4038c8:	nop
  4038c9:	push   cs
  4038ca:	jle    0x403931
  4038cc:	cdq    
  4038cd:	cmp    eax,DWORD PTR [edx-0x6a78e24f]
  4038d3:	in     al,dx
  4038d4:	xor    edi,DWORD PTR [esi]
  4038d6:	mov    BYTE PTR [esi],bl
  4038d8:	cmp    cl,al
  4038da:	mov    ss,WORD PTR [edx]
  4038dc:	mov    dl,0x46
  4038de:	add    BYTE PTR [ebp-0x7f],dl
  4038e1:	ins    BYTE PTR es:[edi],dx
  4038e2:	cld    
  4038e3:	(bad)  
  4038e4:	xchg   ebp,eax
  4038e5:	int    0xbe
  4038e7:	sar    bh,1
  4038e9:	sub    DWORD PTR [esi+0x43],ebp
  4038ec:	adc    esp,DWORD PTR [esp+edx*8+0x42]
  4038f0:	mov    edi,0x5792133f
  4038f5:	into   
  4038f6:	fs ss fcmovb st,st(7)
  4038fa:	sbb    edi,ebp
  4038fc:	jecxz  0x4038c5
  4038fe:	(bad)  
  4038ff:	mov    esi,0x38d615ee
  403904:	ror    BYTE PTR [eax+eiz*8-0x54],cl
  403908:	add    eax,0x7cede71b
  40390d:	shl    DWORD PTR [ecx+edx*8+0x4b],0xba
  403912:	dec    esi
  403913:	dec    esi
  403914:	adc    ebx,DWORD PTR [edx]
  403916:	lock xchg BYTE PTR [ebp-0x691717ae],bh
  40391d:	push   0x14
  40391f:	fidivr DWORD PTR [eax-0x50]
  403922:	and    edx,DWORD PTR [edi-0x5c]
  403925:	jo     0x4038c7
  403927:	adc    DWORD PTR [ebp+0x76],ecx
  40392a:	leave  
  40392b:	sbb    DWORD PTR [ecx+0x76],edi
  40392e:	xor    ecx,ebx
  403930:	add    BYTE PTR ss:[eax-0x37],0x13
  403935:	ror    BYTE PTR [esi-0x3b],cl
  403938:	dec    esp
  403939:	push   ss
  40393a:	push   ecx
  40393b:	adc    ecx,ebp
  40393d:	xor    edx,ebp
  40393f:	jg     0x403956
  403941:	fs xchg ecx,eax
  403943:	dec    esi
  403944:	test   BYTE PTR [edx],ch
  403946:	out    0xe3,eax
  403948:	popa   
  403949:	mov    ecx,0x2b78bcb1
  40394e:	push   ebx
  40394f:	div    ecx
  403951:	mov    dl,BYTE PTR [edx+0x33]
  403954:	inc    eax
  403955:	add    DWORD PTR [ebx+ebx*1],0x74
  403959:	xchg   edx,eax
  40395a:	out    0xad,al
  40395c:	cmp    dh,dl
  40395e:	push   esp
  40395f:	fs sub eax,0x8a085929
  403965:	jecxz  0x403952
  403967:	lods   al,BYTE PTR ds:[esi]
  403968:	jge    0x403907
  40396a:	and    edx,DWORD PTR [eax]
  40396c:	ins    BYTE PTR es:[edi],dx
  40396d:	pop    ecx
  40396e:	in     eax,0xb5
  403970:	jae    0x403935
  403972:	les    edx,FWORD PTR [ebx+0x225af33d]
  403978:	mov    ds:0xb2676d5b,al
  40397d:	hlt    
  40397e:	mov    eax,ds:0x30b1942e
  403983:	pop    ebx
  403984:	pusha  
  403985:	push   esp
  403986:	add    BYTE PTR [eax],bh
  403988:	or     BYTE PTR [eax+esi*4],0xc0
  40398c:	sbb    cl,BYTE PTR [esi-0x7e3653ed]
  403992:	add    ebp,ebp
  403994:	sub    edi,DWORD PTR ds:0xcead69cf
  40399a:	mov    DWORD PTR [ebp+0x2c],edx
  40399d:	push   ds
  40399e:	push   cs
  40399f:	hlt    
  4039a0:	sub    al,0x54
  4039a2:	push   ds
  4039a3:	xchg   ecx,eax
  4039a4:	fsubr  DWORD PTR [ecx+esi*2]
  4039a7:	fsubr  st(5),st
  4039a9:	repz cmp DWORD PTR ds:0x88176043,edi
  4039b0:	add    BYTE PTR [ecx+0x406381c1],bl
  4039b6:	mov    eax,0xddd91feb
  4039bb:	cmp    esp,DWORD PTR ds:0x5a23fa04
  4039c1:	cld    
  4039c2:	lahf   
  4039c3:	and    al,0xed
  4039c5:	jb     0x403a3d
  4039c7:	cmp    al,0xe0
  4039c9:	inc    esi
  4039ca:	push   esi
  4039cb:	mov    bh,0x3d
  4039cd:	popf   
  4039ce:	(bad)  
  4039cf:	les    edi,FWORD PTR [ebx-0x40354646]
  4039d5:	dec    ebp
  4039d6:	stos   DWORD PTR es:[edi],eax
  4039d7:	pop    ebx
  4039d8:	inc    edi
  4039d9:	sub    BYTE PTR [ebp-0x2bf4955e],cl
  4039df:	sub    DWORD PTR [eax],ebp
  4039e1:	arpl   WORD PTR [ecx-0x3b],cx
  4039e4:	shl    DWORD PTR [ecx-0x29],0xa0
  4039e8:	stos   DWORD PTR es:[edi],eax
  4039e9:	in     eax,dx
  4039ea:	outs   dx,DWORD PTR ds:[esi]
  4039eb:	mov    ?,WORD PTR ss:[edx-0x72]
  4039ef:	xchg   edi,eax
  4039f0:	jnp    0x4039fe
  4039f2:	out    0x6b,eax
  4039f4:	stos   BYTE PTR es:[edi],al
  4039f5:	shl    BYTE PTR [ecx],1
  4039f7:	jge    0x403a58
  4039f9:	cs jmp 0xd6d50e0
  4039ff:	inc    esi
  403a00:	sub    eax,0x65712bda
  403a05:	pop    esi
  403a06:	(bad)  
  403a07:	inc    esp
  403a08:	enter  0xee3c,0xf
  403a0c:	xor    DWORD PTR [edx],eax
  403a0e:	sub    al,0x74
  403a10:	inc    edi
  403a11:	cmp    eax,0xe7b0a4d6
  403a16:	jmp    edx
  403a18:	sbb    dl,0x22
  403a1b:	fmul   DWORD PTR [ebp+ebp*1+0x2b]
  403a1f:	scas   eax,DWORD PTR es:[edi]
  403a20:	push   ebp
  403a21:	mov    al,0x8f
  403a23:	add    DWORD PTR [esi-0x4a],ecx
  403a26:	push   ds
  403a27:	loopne 0x4039dc
  403a29:	loopne 0x403a6e
  403a2b:	hlt    
  403a2c:	imul   ecx,ebp,0xffffff9b
  403a2f:	fs out dx,al
  403a31:	sub    esp,0xa26215d
  403a37:	mov    ds:0xd18fc8d6,al
  403a3c:	inc    DWORD PTR [edx+eax*8+0x2e]
  403a40:	jo     0x403a45
  403a42:	cmp    edi,DWORD PTR [ebx+0x20e6dba8]
  403a48:	mov    edi,0x5609270
  403a4d:	mov    ds:0xa0430c1a,eax
  403a52:	shl    ebx,1
  403a54:	pop    ebp
  403a55:	(bad)  
  403a56:	les    ebp,FWORD PTR [esp+ebp*8+0x294fd459]
  403a5d:	sub    BYTE PTR [ebx],dl
  403a5f:	mul    ch
  403a61:	pop    ecx
  403a62:	adc    al,0x6e
  403a64:	out    0xef,eax
  403a66:	dec    eax
  403a67:	les    esp,FWORD PTR [ecx-0x77ae88]
  403a6d:	outs   dx,DWORD PTR ds:[esi]
  403a6e:	test   al,0xea
  403a70:	les    edx,FWORD PTR [ecx+0x69fe5b11]
  403a76:	rol    DWORD PTR [ebx+0x32fc1488],cl
  403a7c:	xor    DWORD PTR [edi+0x15548e55],esi
  403a82:	sub    DWORD PTR [esi-0x3b],0x64b688e1
  403a89:	in     al,0xd
  403a8b:	scas   eax,DWORD PTR es:[edi]
  403a8c:	into   
  403a8d:	xor    eax,ecx
  403a8f:	pushf  
  403a90:	jnp    0x403aaf
  403a92:	imul   ebp,DWORD PTR [ebx],0xdb7ec447
  403a98:	xchg   ebx,eax
  403a99:	lods   al,BYTE PTR ds:[esi]
  403a9a:	dec    ebx
  403a9b:	dec    ecx
  403a9c:	std    
  403a9d:	add    BYTE PTR [esi+0x48],al
  403aa0:	retf   
  403aa1:	mov    ?,edx
  403aa3:	cmp    eax,0x9fe79d53
  403aa8:	inc    ebp
  403aa9:	enter  0x97cc,0x75
  403aad:	pop    eax
  403aae:	cwde   
  403aaf:	push   edx
  403ab0:	and    al,0x46
  403ab2:	adc    esi,esp
  403ab4:	fmul   QWORD PTR [esi+eax*8]
  403ab7:	(bad)  fs:[eax+ecx*1]
  403abb:	fsubr  DWORD PTR cs:[ebp+eax*2+0x71]
  403ac0:	test   BYTE PTR [edi-0x50],bh
  403ac3:	ins    BYTE PTR es:[edi],dx
  403ac4:	and    eax,0xdc86c129
  403ac9:	cld    
  403aca:	lock dec edx
  403acc:	adc    bl,dh
  403ace:	(bad)  
  403acf:	sub    al,0xd9
  403ad1:	pop    edi
  403ad2:	sar    DWORD PTR [esi],1
  403ad4:	jne    0x403ad9
  403ad6:	dec    eax
  403ad7:	jmp    0x7bf2:0x5262b71f
  403ade:	dec    eax
  403adf:	cmp    BYTE PTR [ecx+ebx*2],dh
  403ae2:	aaa    
  403ae3:	cmp    eax,0x7837dea
  403ae8:	fwait
  403ae9:	call   0x799e433e
  403aee:	mov    bh,0x3d
  403af0:	mov    cl,0x23
  403af2:	retf   0x77d9
  403af5:	mov    ebp,0x41e5e149
  403afa:	pusha  
  403afb:	loope  0x403b2e
  403afd:	xor    dh,BYTE PTR [edi+edx*2]
  403b00:	cmp    DWORD PTR [ecx+eiz*8+0xe7873d1],0xfcad7026
  403b0b:	rcr    BYTE PTR [edi],cl
  403b0d:	fimul  DWORD PTR [edx]
  403b0f:	sti    
  403b10:	fsub   DWORD PTR [ebx]
  403b12:	dec    eax
  403b13:	add    eax,0x11e3c944
  403b18:	div    BYTE PTR [ebx]
  403b1a:	jmp    0x403aab
  403b1c:	sahf   
  403b1d:	xor    esp,DWORD PTR [eax]
  403b1f:	in     al,0x5
  403b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b22:	int    0x84
  403b24:	jne    0x403b91
  403b26:	enter  0xdb1c,0x47
  403b2a:	sub    DWORD PTR [ebx],0x3bc633c7
  403b30:	ror    DWORD PTR [edi],0x85
  403b33:	push   esi
  403b34:	add    BYTE PTR [eax],al
  403b36:	add    BYTE PTR [ecx+0x18fdc9],al
  403b3c:	add    BYTE PTR [ebx+0x2581f845],cl
  403b42:	imul   edx,DWORD PTR [ecx+0x3a4c0042],0x0
  403b49:	add    BYTE PTR [ebx+0x1581f04d],cl
  403b4f:	imul   edx,DWORD PTR [ecx-0x6e0cffbe],0x42
  403b56:	add    BYTE PTR [ebx],dh
  403b58:	mov    BYTE PTR [ecx+0x4291d335],0x0
  403b5f:	not    DWORD PTR [ecx-0x31ccffbe]
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429c0f
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	fst    QWORD PTR [eax]
  403c9a:	xchg   ebp,eax
  403c9b:	addr16 dec ebp
  403c9d:	out    dx,eax
  403c9e:	pop    esp
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0x75
  403ca6:	cmp    al,0xac
  403ca8:	loopne 0x403cf2
  403caa:	test   cl,al
  403cac:	ss xchg esi,eax
  403cae:	xchg   esi,eax
  403caf:	fld    TBYTE PTR [ebp+0x32]
  403cb2:	push   es
  403cb3:	jp     0x403d1c
  403cb5:	dec    ebp
  403cb6:	add    eax,0xfedd6124
  403cbb:	(bad)  
  403cbc:	jl     0xb30719bd
  403cc2:	lahf   
  403cc3:	jb     0x403d18
  403cc5:	aam    0x8a
  403cc7:	retf   
  403cc8:	les    esp,FWORD PTR [ecx]
  403cca:	cwde   
  403ccb:	xor    bl,bl
  403ccd:	scas   al,BYTE PTR es:[edi]
  403cce:	enter  0x96a7,0x83
  403cd2:	add    BYTE PTR [ecx],al
  403cd4:	mov    bh,0xc7
  403cd6:	cli    
  403cd7:	fwait
  403cd8:	leave  
  403cd9:	mov    edx,esi
  403cdb:	sbb    eax,ebp
  403cdd:	es push 0x8e24c9bd
  403ce3:	scas   al,BYTE PTR es:[edi]
  403ce4:	(bad)  
  403ce5:	scas   al,BYTE PTR es:[edi]
  403ce6:	mov    edi,DWORD PTR [edi+0x37731999]
  403cec:	mov    ds:0xdddca3cc,al
  403cf1:	ficomp WORD PTR [edi]
  403cf3:	mov    eax,esp
  403cf5:	fs mov cs,ecx
  403cf8:	pop    edx
  403cf9:	dec    edi
  403cfa:	push   ss
  403cfb:	shl    ch,0xe
  403cfe:	arpl   ax,sp
  403d00:	adc    BYTE PTR [ecx],dh
  403d02:	mov    ch,0x80
  403d04:	pusha  
  403d05:	lock lahf 
  403d07:	js     0x403cdc
  403d09:	jge    0x403d3f
  403d0b:	lds    ebp,FWORD PTR [ebx+0x5a]
  403d0e:	mov    edi,0x3b8e7f1e
  403d13:	or     al,0x83
  403d15:	xchg   esi,eax
  403d16:	xchg   ecx,eax
  403d17:	and    al,0x2f
  403d19:	adc    esi,DWORD PTR [edi+0x4f]
  403d1c:	push   eax
  403d1d:	mov    ebp,0xc5142052
  403d22:	lods   eax,DWORD PTR ds:[esi]
  403d23:	fprem  
  403d25:	loopne 0x403ce6
  403d27:	dec    esi
  403d28:	mov    al,0xab
  403d2a:	lock stos BYTE PTR es:[edi],al
  403d2c:	ja     0x403d8f
  403d2e:	mov    edi,0x6006f292
  403d33:	stos   DWORD PTR es:[edi],eax
  403d34:	mov    edi,0xcaaba9fb
  403d39:	repnz adc eax,0xf63b668a
  403d3f:	cmp    BYTE PTR [eax+0x4941109d],bl
  403d45:	imul   edx,DWORD PTR [esi],0x23198310
  403d4b:	pop    ebp
  403d4c:	out    0x95,eax
  403d4e:	mov    ah,0x31
  403d50:	daa    
  403d51:	sbb    dh,BYTE PTR [edi-0x56b4e3cd]
  403d57:	mov    al,ds:0xa1d2c018
  403d5c:	adc    edi,ecx
  403d5e:	mov    ds:0xc9b87594,al
  403d63:	or     eax,0xa385403b
  403d68:	inc    eax
  403d69:	adc    DWORD PTR [edi-0x12af24d],esi
  403d6f:	mov    al,ds:0x6a5412d2
  403d74:	jne    0x403d7a
  403d76:	mov    bl,0x92
  403d78:	iret   
  403d79:	mov    ecx,0x87a058d2
  403d7e:	mov    ds:0x5cf0adba,al
  403d83:	and    eax,0xe7fd719
  403d88:	bound  ebx,QWORD PTR [eax+0x4d]
  403d8b:	push   0xffffffa5
  403d8d:	pop    edx
  403d8e:	mov    bh,0x4d
  403d90:	xor    DWORD PTR [eax-0x7a19065e],esp
  403d96:	iret   
  403d97:	mov    ebx,0xde91ca46
  403d9c:	pop    esi
  403d9d:	xchg   esp,eax
  403d9e:	pop    ebp
  403d9f:	xchg   ebp,eax
  403da0:	xchg   ecx,eax
  403da1:	repz cmc 
  403da3:	xlat   BYTE PTR ds:[ebx]
  403da4:	or     al,0xda
  403da6:	jmp    0x403d42
  403da8:	(bad)  
  403daa:	or     BYTE PTR [edi],dl
  403dac:	fsub   DWORD PTR [ecx]
  403dae:	adc    al,0x40
  403db0:	std    
  403db1:	sub    eax,ebp
  403db3:	cmp    dl,BYTE PTR [edx]
  403db5:	xchg   edi,eax
  403db6:	push   0x3d
  403db8:	jbe    0x403d4b
  403dba:	mov    ebp,0xebdfab7e
  403dbf:	out    0xd4,al
  403dc1:	push   ds
  403dc2:	call   0x88e8:0x61ac08c1
  403dc9:	lahf   
  403dca:	iret   
  403dcb:	fcomp  QWORD PTR ds:0x9bc4e0b3
  403dd1:	aam    0x14
  403dd3:	out    dx,eax
  403dd4:	in     eax,dx
  403dd5:	dec    esp
  403dd6:	mov    dl,bl
  403dd8:	aaa    
  403dd9:	mov    edi,0x40d57052
  403dde:	pop    esp
  403ddf:	jbe    0x403e12
  403de1:	loop   0x403dac
  403de3:	mov    ds,WORD PTR [ebx+0x1e9a2342]
  403de9:	mov    ecx,0x6eb54dab
  403dee:	pop    ebp
  403def:	cld    
  403df0:	inc    edx
  403df1:	mov    dl,0x7a
  403df3:	sbb    DWORD PTR [ebx-0x68],0xffffffd0
  403df7:	ret    
  403df8:	or     eax,0x48af2abc
  403dfd:	sub    al,0x4f
  403dff:	sbb    edx,ebp
  403e01:	in     al,0x75
  403e03:	(bad)  
  403e04:	imul   ebp,DWORD PTR [eax],0x91a8211d
  403e0a:	test   al,0x89
  403e0c:	rol    BYTE PTR [edi+0x4d519d0],cl
  403e12:	or     DWORD PTR [edi-0x63],0xffffffa2
  403e16:	(bad)
  403e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e1a:	dec    eax
  403e1b:	add    al,0x45
  403e1d:	loope  0x403e98
  403e1f:	cdq    
  403e20:	imul   ecx,DWORD PTR [esi+0x4f72cb7e],0x7f
  403e27:	lods   eax,DWORD PTR ds:[esi]
  403e28:	fisub  WORD PTR [ebx+0x37]
  403e2b:	sub    DWORD PTR ds:0xa48cae10,ebx
  403e31:	ret    0xef1c
  403e34:	cmp    al,0x90
  403e36:	mov    edi,0x67d88227
  403e3b:	mov    dh,0x41
  403e3d:	add    bl,BYTE PTR [eax]
  403e3f:	repz popf 
  403e41:	dec    eax
  403e42:	dec    DWORD PTR [ebx]
  403e44:	xchg   DWORD PTR [ebp-0x247acda5],esi
  403e4a:	inc    edx
  403e4b:	add    al,0xa8
  403e4d:	addr16 popf 
  403e4f:	jmp    0xc13307a9
  403e54:	pop    esp
  403e55:	xchg   BYTE PTR [esi],dl
  403e57:	pop    ss
  403e58:	adc    eax,edi
  403e5a:	add    DWORD PTR [ebx],ecx
  403e5c:	xlat   BYTE PTR ds:[ebx]
  403e5d:	add    BYTE PTR [ecx+0x77],0x65
  403e61:	mov    ds:0xd94bfd96,al
  403e66:	add    edx,DWORD PTR [esi-0x3]
  403e69:	retf   
  403e6a:	or     dl,cl
  403e6c:	mov    al,ds:0x1ba8fce5
  403e71:	cmp    esi,DWORD PTR [eax-0x7755f15f]
  403e77:	fsubr  DWORD PTR [ebp+0x2e]
  403e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e7b:	mov    esi,0x83586747
  403e80:	mov    BYTE PTR [edi-0x2103e13b],ah
  403e86:	add    BYTE PTR [esi],ah
  403e88:	or     al,0x9
  403e8a:	fucom  st(7)
  403e8c:	push   edx
  403e8d:	adc    bl,BYTE PTR [ecx+eiz*1+0x383660c1]
  403e94:	jg     0x403e1d
  403e96:	xchg   ebp,eax
  403e97:	xlat   BYTE PTR ds:[ebx]
  403e98:	jbe    0x403f02
  403e9a:	inc    ecx
  403e9b:	cld    
  403e9c:	jbe    0x403e32
  403e9e:	jns    0x403e75
  403ea0:	ficom  WORD PTR [eax+0x50]
  403ea3:	(bad)  
  403ea4:	mov    ecx,ebp
  403ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea7:	iret   
  403ea8:	mov    bl,0xdc
  403eaa:	cmp    esi,edi
  403eac:	push   edi
  403ead:	and    DWORD PTR [esp+eax*2-0x79e9949d],eax
  403eb4:	add    cl,BYTE PTR [esi-0x1d]
  403eb7:	dec    edx
  403eb8:	push   ds
  403eb9:	ss in  al,dx
  403ebb:	adc    DWORD PTR [esi],ebp
  403ebd:	pop    ds
  403ebe:	mov    al,0x10
  403ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ec1:	adc    dh,BYTE PTR [edx+0x4c70eed8]
  403ec7:	jae    0x403ea8
  403ec9:	test   BYTE PTR [ebx],al
  403ecb:	jge    0x403f34
  403ecd:	jo     0x403ef5
  403ecf:	dec    edx
  403ed0:	inc    ecx
  403ed1:	jbe    0x403f0c
  403ed3:	mov    edi,0xacedda96
  403ed8:	fisub  WORD PTR [edi+ebp*1+0x55d13fa9]
  403edf:	or     dh,BYTE PTR [esi-0x41e93844]
  403ee5:	or     dh,BYTE PTR [ecx-0x4b598307]
  403eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eec:	jbe    0x403f0a
  403eee:	and    al,0xbe
  403ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ef1:	sbb    eax,0xb94ad40b
  403ef6:	jno    0x403f34
  403ef8:	or     al,0x86
  403efa:	inc    ecx
  403efb:	add    BYTE PTR [edi],dh
  403efd:	add    bl,BYTE PTR [ecx]
  403eff:	jl     0x403f28
  403f01:	iretw  
  403f03:	and    ecx,0x7e7b76e1
  403f09:	inc    ebx
  403f0a:	repz jbe 0x403ed2
  403f0d:	fldcw  WORD PTR [edi-0x50]
  403f10:	mov    edx,0xe8e7b28b
  403f15:	loope  0x403f6b
  403f17:	jmp    0x427e:0xf706808a
  403f1e:	stc    
  403f1f:	jno    0x403f8d
  403f21:	push   ecx
  403f22:	and    bh,dl
  403f24:	push   esi
  403f25:	jmp    0xafaef767
  403f2a:	retf   
  403f2b:	in     eax,0x71
  403f2d:	lock stos DWORD PTR es:[edi],eax
  403f2f:	pusha  
  403f30:	sub    ecx,DWORD PTR [eax+0x7f9556ba]
  403f36:	push   0x5d
  403f38:	add    al,0x9b
  403f3a:	rcr    al,0xa1
  403f3d:	(bad)  
  403f3e:	and    BYTE PTR ds:0xe3c5135c,al
  403f44:	and    eax,DWORD PTR [ecx-0x573ce172]
  403f4a:	pop    eax
  403f4b:	or     bh,BYTE PTR es:[ecx]
  403f4e:	and    esp,ebx
  403f50:	stos   BYTE PTR es:[edi],al
  403f51:	cmp    eax,0xa9ef3340
  403f56:	fcomi  st,st(7)
  403f58:	push   esi
  403f59:	jns    0x403f7f
  403f5b:	popa   
  403f5c:	mov    esp,0x5f101901
  403f61:	les    edx,FWORD PTR [ebx+eax*4]
  403f64:	and    eax,0xf88f0a1d
  403f69:	ins    BYTE PTR es:[edi],dx
  403f6a:	pop    es
  403f6b:	and    ch,0xc6
  403f6e:	push   ecx
  403f6f:	pop    esp
  403f70:	jno    0x403efe
  403f72:	pop    ebx
  403f73:	in     al,0x32
  403f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f76:	cmp    DWORD PTR [esi-0x20],0xfd363dd2
  403f7d:	retf   
  403f7e:	xor    eax,0x658cb373
  403f83:	mov    ebx,ecx
  403f85:	(bad)  
  403f86:	jns    0x403f57
  403f88:	jmp    0x41a39c47
  403f8d:	and    al,0xd1
  403f8f:	das    
  403f90:	iret   
  403f91:	pop    ss
  403f92:	add    BYTE PTR [edi-0x1c760890],0xc1
  403f99:	rol    cl,cl
  403f9b:	jnp    0x40400b
  403f9d:	xor    al,0xc7
  403f9f:	and    esp,DWORD PTR [esi-0x17]
  403fa2:	ret    0xdc84
  403fa5:	or     esp,ebx
  403fa7:	xchg   ebx,eax
  403fa8:	into   
  403fa9:	and    al,0x9
  403fab:	scas   eax,DWORD PTR es:[edi]
  403fac:	mov    bl,0x8c
  403fae:	cs push ds
  403fb0:	push   cs
  403fb1:	inc    ebp
  403fb2:	pop    esp
  403fb3:	pop    ebp
  403fb4:	fadd   DWORD PTR [edx-0x1b]
  403fb7:	fsub   QWORD PTR [ebx-0x39]
  403fba:	mov    bh,0xdf
  403fbc:	mov    al,ds:0x78c6bf9
  403fc1:	mov    eax,ds:0x899bad5f
  403fc6:	xchg   edi,eax
  403fc7:	mov    cl,0xbf
  403fc9:	or     esi,DWORD PTR [esi+0x5051f5ff]
  403fcf:	iret   
  403fd0:	push   eax
  403fd1:	loopne 0x40404b
  403fd3:	(bad)  
  403fd4:	xchg   ecx,eax
  403fd5:	xchg   esp,eax
  403fd6:	xor    BYTE PTR [edx-0x27],dh
  403fd9:	add    bl,BYTE PTR [eax+ebx*2]
  403fdc:	mov    ah,0x54
  403fde:	cwde   
  403fdf:	adc    BYTE PTR [bx+si+0x3ccd],dl
  403fe4:	mov    cl,0x87
  403fe6:	dec    edi
  403fe7:	push   edi
  403fe8:	jns    0x403ff4
  403fea:	icebp  
  403feb:	int    0x1e
  403fed:	stos   DWORD PTR es:[edi],eax
  403fee:	adc    cl,BYTE PTR [ecx-0x36b42407]
  403ff4:	xchg   esi,eax
  403ff5:	mov    cl,BYTE PTR [ebp-0x67]
  403ff8:	test   al,dl
  403ffa:	lods   eax,DWORD PTR ds:[esi]
  403ffb:	je     0x403ffe
  403ffd:	dec    eax
  403ffe:	lea    eax,[eax-0x6d]
  404001:	aas    
  404002:	and    DWORD PTR [ebx-0x3d],0xefaa7fa1
  404009:	ret    0x300f
  40400c:	pop    ecx
  40400d:	mov    ah,0xb8
  40400f:	and    BYTE PTR [eax],bh
  404011:	pcmpeqb mm7,QWORD PTR [ebx-0x2d56d7a5]
  404018:	fdiv   QWORD PTR [edx]
  40401a:	sub    DWORD PTR [esi],esi
  40401c:	es in  al,dx
  40401e:	add    eax,ecx
  404020:	pop    esp
  404021:	popa   
  404022:	in     al,0xaa
  404024:	imul   edx,DWORD PTR [ebx-0xd3bc5d5],0x8ee87cc0
  40402e:	dec    ebp
  40402f:	mov    dh,0xf8
  404031:	jnp    0x40401c
  404033:	retf   
  404034:	mov    eax,ds:0xec2cfc5c
  404039:	imul   ebp,DWORD PTR [esi-0x28],0x2534b82b
  404040:	mov    bl,0xa2
  404042:	add    cl,ch
  404044:	mov    cl,0x4b
  404046:	push   ebx
  404047:	pop    eax
  404048:	pop    eax
  404049:	sbb    al,BYTE PTR [ebx+eiz*4-0x2fbe8206]
  404050:	mov    ah,0x7e
  404052:	push   0xfffffff6
  404054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404055:	xchg   ecx,eax
  404056:	addr16 pop esp
  404058:	mov    ds:0x8fe43318,eax
  40405d:	fiadd  DWORD PTR [ebp-0x7b5b6305]
  404063:	mov    ecx,ebp
  404065:	shr    DWORD PTR [eax+0x38],cl
  404068:	or     eax,edi
  40406a:	pop    edi
  40406b:	sub    esi,edi
  40406d:	daa    
  40406e:	mov    ds:0xbbec8b6a,al
  404073:	inc    bh
  404075:	cmp    esi,ebx
  404077:	pop    ebp
  404078:	(bad)  
  404079:	jp     0x403ffd
  40407b:	xor    eax,0x38510f92
  404080:	mov    al,0xc5
  404082:	xchg   esp,eax
  404083:	fbld   TBYTE PTR [ecx-0x7d]
  404086:	test   eax,0xbe95a11e
  40408b:	lahf   
  40408c:	mov    ah,0x97
  40408e:	enter  0xc618,0xc3
  404092:	mov    ah,0x21
  404094:	mov    eax,0xa7ecd4ae
  404099:	(bad)  
  40409a:	ds jmp 0x40408d
  40409d:	sub    ah,cl
  40409f:	or     DWORD PTR [ebx-0x51],eax
  4040a2:	mov    eax,ds:0xa25c8d90
  4040a7:	ja     0x404115
  4040a9:	inc    esp
  4040aa:	xchg   edx,eax
  4040ab:	in     al,dx
  4040ac:	add    al,0x9e
  4040ae:	push   esi
  4040af:	fstp   QWORD PTR ds:0xd0e59b39
  4040b5:	das    
  4040b6:	shl    DWORD PTR [edx-0x52],cl
  4040b9:	xor    ah,bh
  4040bb:	push   ds
  4040bc:	aas    
  4040bd:	enter  0x85ba,0xf
  4040c1:	cmovp  edi,DWORD PTR [ebx-0x16]
  4040c5:	pop    eax
  4040c6:	leave  
  4040c7:	or     DWORD PTR [edi-0x6f7bc1cf],0x916f33b5
  4040d1:	add    DWORD PTR [edi],0x66cc6fac
  4040d7:	aam    0xea
  4040d9:	rcl    dl,cl
  4040db:	int    0xdb
  4040dd:	lods   al,BYTE PTR ds:[esi]
  4040de:	loopne 0x4040c6
  4040e0:	or     eax,0x5854ebb0
  4040e5:	imul   DWORD PTR [ebp+0x1f]
  4040e8:	dec    esi
  4040e9:	dec    ebx
  4040ea:	sbb    BYTE PTR ss:[ebx-0x3031af0e],ch
  4040f1:	jae    0x4040f7
  4040f3:	in     al,0xd1
  4040f5:	inc    edi
  4040f6:	cmp    ch,BYTE PTR [esi-0x620c48cd]
  4040fc:	jb     0x4040b8
  4040fe:	sub    eax,0x8f00d9bf
  404103:	jae    0x404101
  404105:	cdq    
  404106:	mov    edx,0x50b6bc5b
  40410b:	push   0x62329022
  404110:	xchg   esi,eax
  404111:	mov    dh,0x79
  404113:	adc    DWORD PTR [esi-0x79b94f95],ecx
  404119:	push   ebx
  40411a:	stc    
  40411b:	xchg   ecx,eax
  40411c:	popa   
  40411d:	call   0x3dfe:0xdf634552
  404124:	mov    dh,bl
  404126:	xor    ecx,DWORD PTR [ecx-0x6e]
  404129:	test   eax,0xa6469428
  40412e:	ja     0x404130
  404130:	js     0x4040bb
  404132:	adc    esp,DWORD PTR [esi+ecx*2+0x7b3beb69]
  404139:	in     al,dx
  40413a:	idiv   DWORD PTR [ecx+0x50]
  40413d:	dec    ebx
  40413e:	test   al,0x18
  404140:	inc    edi
  404141:	cdq    
  404142:	cmp    ebp,ebx
  404144:	ds inc ebx
  404146:	addr16 push ecx
  404148:	and    BYTE PTR [edx],0xb
  40414b:	(bad)  
  40414c:	mov    cl,0xf8
  40414e:	outs   dx,BYTE PTR ds:[esi]
  40414f:	jge    0x404129
  404151:	mov    ebx,DWORD PTR [edx]
  404153:	mov    ds:0x50d7378c,al
  404158:	cwde   
  404159:	dec    esp
  40415a:	fwait
  40415b:	pop    es
  40415c:	mov    bl,0x7a
  40415e:	push   ebx
  40415f:	dec    eax
  404160:	dec    edi
  404161:	aas    
  404162:	repnz es cmp ebp,ebx
  404166:	and    DWORD PTR [ebx+0x1029a81e],esi
  40416c:	std    
  40416d:	stos   DWORD PTR es:[edi],eax
  40416e:	mov    ecx,0x2160fca6
  404173:	daa    
  404174:	cmc    
  404175:	jne    0x4041d4
  404177:	icebp  
  404178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404179:	mov    bl,0x90
  40417b:	in     al,dx
  40417c:	sub    BYTE PTR [ebx-0x3d],dl
  40417f:	push   esp
  404180:	repz test al,0x3f
  404183:	mov    bl,0x67
  404185:	lea    edx,[ebx-0x31392e19]
  40418b:	outs   dx,BYTE PTR ds:[esi]
  40418c:	push   ebp
  40418d:	cmp    cl,cl
  40418f:	sbb    BYTE PTR [edi],al
  404191:	adc    DWORD PTR [ecx],0x8f83ecc3
  404197:	stc    
  404198:	or     DWORD PTR [eax-0x6db0f0ce],0x1b82a468
  4041a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041a4:	ins    DWORD PTR es:[edi],dx
  4041a5:	and    bl,BYTE PTR [ecx]
  4041a7:	or     ebx,esp
  4041a9:	out    dx,al
  4041aa:	pop    ds
  4041ab:	sub    ecx,DWORD PTR cs:[ebx]
  4041ae:	pop    edi
  4041af:	into   
  4041b0:	cli    
  4041b1:	aaa    
  4041b2:	mov    esp,0xc925a7f1
  4041b7:	push   edi
  4041b8:	dec    edi
  4041b9:	push   DWORD PTR [edi]
  4041bb:	dec    esi
  4041bc:	(bad)  [edx+0x516e17c6]
  4041c2:	mov    ecx,DWORD PTR [ebx+0x1]
  4041c5:	mov    DWORD PTR [edx],edi
  4041c7:	push   edx
  4041c8:	sar    DWORD PTR [esi],cl
  4041ca:	or     eax,0xcd835743
  4041cf:	inc    edi
  4041d0:	cld    
  4041d1:	jge    0x4041dd
  4041d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041d4:	out    0x20,al
  4041d6:	repz not BYTE PTR [esi-0x7790075]
  4041dd:	mov    eax,DWORD PTR [ecx]
  4041df:	cmp    DWORD PTR [ebx+0x8cc1291],0xff4b99b8
  4041e9:	xchg   edx,eax
  4041ea:	cmc    
  4041eb:	pop    ds
  4041ec:	jge    0x4041b2
  4041ee:	pop    ebp
  4041ef:	(bad)  
  4041f1:	or     BYTE PTR [ecx],al
  4041f3:	pop    esi
  4041f4:	mov    bl,0x78
  4041f6:	sub    dh,cl
  4041f8:	and    esp,DWORD PTR [eax*1+0x58174557]
  4041ff:	fld    st(2)
  404201:	cld    
  404202:	or     dh,cl
  404204:	not    DWORD PTR [ebx+0x24]
  404207:	jae    0x4041d9
  404209:	out    0xcc,al
  40420b:	repz sbb DWORD PTR [eax+0x4767c47c],esi
  404212:	pop    ss
  404213:	in     al,0x24
  404215:	add    ch,BYTE PTR [ebx+eiz*8+0x3b]
  404219:	sub    edi,ebx
  40421b:	xchg   ebp,eax
  40421c:	fild   QWORD PTR [esi+0x7d]
  40421f:	mov    ah,0x7a
  404221:	js     0x40423c
  404223:	movd   mm4,DWORD PTR [esi]
  404226:	push   edi
  404227:	retf   
  404228:	or     BYTE PTR [esi+0x710f9207],0x50
  40422f:	enter  0xab87,0x8a
  404233:	aaa    
  404234:	add    DWORD PTR [ecx-0x70],edx
  404237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404238:	test   BYTE PTR [ebp-0x17],ah
  40423b:	imul   edx,DWORD PTR ds:0xb1eedf04,0x9159351c
  404245:	std    
  404246:	fild   QWORD PTR [edx+0xb5e4ef7]
  40424c:	cmp    DWORD PTR [ebp-0x729383d5],edx
  404252:	xchg   edx,eax
  404253:	cmp    eax,0xa77e79b0
  404258:	pop    ebp
  404259:	xchg   edi,eax
  40425a:	fld    TBYTE PTR [ecx+0x6c]
  40425d:	jne    0x404287
  40425f:	sub    ecx,DWORD PTR [eax+0x3b15cb36]
  404265:	int3   
  404266:	sub    BYTE PTR [edi+0x5116ac40],dh
  40426c:	pop    edx
  40426d:	loop   0x404210
  40426f:	xor    ecx,edi
  404271:	das    
  404272:	in     eax,0x65
  404274:	out    0xe2,eax
  404276:	push   edi
  404277:	bound  ecx,QWORD PTR ds:0xa50da642
  40427d:	xchg   esp,eax
  40427e:	push   cs
  40427f:	adc    BYTE PTR [edx-0x6a],al
  404282:	pop    ss
  404283:	clc    
  404284:	mov    ch,0x5e
  404286:	(bad)  
  404287:	pop    ebp
  404288:	pop    ecx
  404289:	xor    ch,dl
  40428b:	(bad)  
  40428c:	fstp   QWORD PTR [esi-0x479bf69e]
  404292:	mov    eax,ds:0x2b35c052
  404297:	mov    dl,0x6d
  404299:	nop
  40429a:	arpl   WORD PTR [edi+0x771e1b80],di
  4042a0:	fild   QWORD PTR [ecx+0x46e8497f]
  4042a6:	xor    dh,BYTE PTR [ebx]
  4042a8:	mov    WORD PTR [ebx-0x6bfef6ff],?
  4042ae:	and    DWORD PTR [edx+0x17bc805b],0xf1cd79bf
  4042b8:	jg     0x4042e0
  4042ba:	mov    ah,0x9f
  4042bc:	ret    
  4042bd:	retf   
  4042be:	xor    al,0xfd
  4042c0:	adc    dl,al
  4042c2:	mov    dl,cl
  4042c4:	add    DWORD PTR [esi],edx
  4042c6:	add    eax,0x5ebc1990
  4042cb:	(bad)  
  4042cc:	stc    
  4042cd:	arpl   WORD PTR [ebx-0x3c],bx
  4042d0:	sti    
  4042d1:	mov    edx,0x2a9e430c
  4042d6:	nop
  4042d7:	out    dx,al
  4042d8:	dec    edx
  4042d9:	push   0x207b853e
  4042de:	add    al,0x93
  4042e0:	inc    edi
  4042e1:	push   cs
  4042e2:	xchg   ecx,eax
  4042e3:	sub    eax,0xfe3a68fd
  4042e8:	dec    edi
  4042e9:	and    al,0xbf
  4042eb:	inc    eax
  4042ec:	out    0x33,eax
  4042ee:	add    DWORD PTR [esi-0x3738a8c8],0xea17df8f
  4042f8:	clc    
  4042f9:	stos   DWORD PTR es:[edi],eax
  4042fa:	jb     0x404338
  4042fc:	aam    0x9c
  4042fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042ff:	jbe    0x40432e
  404301:	jecxz  0x4042b1
  404303:	xor    BYTE PTR [edx+0x2af55b7a],0xa8
  40430a:	sub    eax,0xa5cc052d
  40430f:	xor    ch,cl
  404311:	nop
  404312:	cmp    eax,0x8e891079
  404317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404318:	pop    eax
  404319:	dec    ebx
  40431a:	test   DWORD PTR [edi-0x49],esi
  40431d:	pop    ds
  40431e:	out    0x36,eax
  404320:	in     al,0x54
  404322:	add    DWORD PTR [ebx],ebx
  404324:	mov    esi,0xe0ff9310
  404329:	loop   0x4042e2
  40432b:	mov    ebp,0xe3d0d6aa
  404330:	dec    esp
  404331:	and    BYTE PTR [ecx+0x97b5e56],0x1d
  404338:	ja     0x4042f6
  40433a:	loopne 0x4042d1
  40433c:	retf   
  40433d:	loop   0x4043b3
  40433f:	pop    eax
  404340:	stos   DWORD PTR es:[edi],eax
  404341:	xchg   edx,eax
  404342:	and    DWORD PTR gs:[esi-0x3],0xffffffa5
  404347:	in     eax,dx
  404348:	or     edx,DWORD PTR [ebx+0x7d7b5864]
  40434e:	sub    esp,DWORD PTR [ebp+0x37151305]
  404354:	inc    esp
  404355:	mov    ebx,0xd0c8a073
  40435a:	into   
  40435b:	dec    esp
  40435c:	(bad)  
  40435d:	jle    0x4043a2
  40435f:	add    bh,BYTE PTR [ebx]
  404361:	mov    bh,0xcf
  404363:	xchg   esi,eax
  404364:	or     al,0x32
  404366:	add    cl,BYTE PTR [ebx+esi*2]
  404369:	xchg   ebp,eax
  40436a:	std    
  40436b:	mov    eax,ds:0xc37ac07f
  404370:	mov    esp,0xeed0e7a0
  404375:	push   0x55
  404377:	pop    esp
  404378:	pop    ebp
  404379:	mov    edx,0xb79b5e54
  40437e:	mov    bh,0xbc
  404380:	fisubr WORD PTR [esi+0x1e]
  404383:	xor    al,0xe3
  404385:	icebp  
  404386:	add    eax,0xab8ff0f9
  40438b:	sub    BYTE PTR [ecx+0x35],dl
  40438e:	std    
  40438f:	jecxz  0x404402
  404391:	shl    DWORD PTR ds:0xa0bf51be,1
  404397:	stos   DWORD PTR es:[edi],eax
  404398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404399:	mov    ebp,0xb0256f7
  40439e:	jb     0x4043f1
  4043a0:	loop   0x4043e1
  4043a2:	and    BYTE PTR [eax],ah
  4043a4:	jbe    0x4043af
  4043a6:	dec    esp
  4043a7:	push   eax
  4043a8:	and    ebx,esp
  4043aa:	cmp    dl,BYTE PTR [edi-0x2d4a7d03]
  4043b0:	out    dx,al
  4043b1:	jns    0x404363
  4043b3:	imul   ebp,DWORD PTR [ebx-0x5ed9a0e4],0x4732a785
  4043bd:	dec    eax
  4043be:	aas    
  4043bf:	xchg   ebp,eax
  4043c0:	ror    ch,1
  4043c2:	inc    esp
  4043c3:	cld    
  4043c4:	scas   al,BYTE PTR es:[edi]
  4043c5:	out    0xd7,al
  4043c7:	push   edx
  4043c8:	loopne 0x404383
  4043ca:	push   ebx
  4043cb:	dec    esi
  4043cc:	or     eax,0x5337261e
  4043d1:	arpl   WORD PTR [eax-0x5f],ax
  4043d4:	les    esi,FWORD PTR [edi+0x2f]
  4043d7:	and    al,0x9a
  4043d9:	sub    dl,BYTE PTR [edx+0x27]
  4043dc:	call   0x2a60a63b
  4043e1:	cmp    ah,al
  4043e3:	and    bh,al
  4043e5:	sub    BYTE PTR [esi-0x79],ah
  4043e8:	addr16 cmp al,0xc
  4043eb:	sub    DWORD PTR [ebp+0x3a716d61],0xb7c7fb6f
  4043f5:	push   ss
  4043f6:	and    ah,BYTE PTR [esi-0x24]
  4043f9:	rol    cl,0xe0
  4043fc:	test   al,0x5
  4043fe:	adc    eax,0x9070f87c
  404403:	xchg   edi,eax
  404404:	lods   eax,DWORD PTR ds:[esi]
  404405:	jne    0x4043cf
  404407:	adc    eax,0x9dcd4ac9
  40440c:	dec    esp
  40440d:	jno    0x40440c
  40440f:	xor    DWORD PTR [edx+0x5b],esi
  404412:	xchg   ecx,eax
  404413:	pop    ds
  404414:	xchg   edi,eax
  404415:	rol    DWORD PTR [ecx],1
  404417:	shr    DWORD PTR [ebx+0x5e],1
  40441a:	sub    DWORD PTR [esi-0x12],ebp
  40441d:	leave  
  40441e:	bound  esi,QWORD PTR [ebp-0x11fedd86]
  404424:	add    bl,BYTE PTR [edi+0x4f0da4b1]
  40442a:	and    al,0x43
  40442c:	cmp    eax,0x1aad14e1
  404431:	sahf   
  404432:	scas   al,BYTE PTR es:[edi]
  404433:	repnz mov edi,0x99308386
  404439:	push   ss
  40443a:	neg    esi
  40443c:	out    dx,al
  40443d:	loop   0x40446d
  40443f:	stc    
  404440:	dec    edx
  404441:	scas   eax,DWORD PTR es:[edi]
  404442:	leave  
  404443:	jg     0x404423
  404445:	repnz popf 
  404447:	cmc    
  404448:	retf   0xb4e4
  40444b:	daa    
  40444c:	xlat   BYTE PTR ds:[ebx]
  40444d:	cld    
  40444e:	(bad)  
  40444f:	ss pop ebx
  404451:	(bad)  
  404452:	pop    esi
  404453:	add    al,0xeb
  404455:	jmp    0xdb1d:0x707ce0b6
  40445c:	loope  0x4043f1
  40445e:	js     0x40442f
  404460:	pop    ebp
  404461:	loopne 0x404465
  404463:	call   0x90dffcf4
  404468:	gs push esp
  40446a:	lods   eax,DWORD PTR ds:[esi]
  40446b:	ds ins DWORD PTR es:[edi],dx
  40446d:	fadd   QWORD PTR [edi+0x3fb85333]
  404473:	js     0x40442a
  404475:	jecxz  0x404468
  404477:	add    dl,dl
  404479:	mov    cl,0xde
  40447b:	mov    esp,DWORD PTR ss:[ecx+ebp*2+0x2d]
  404480:	repz or DWORD PTR [ebp+0x36b16014],eax
  404487:	and    eax,0xdc3db538
  40448c:	xor    eax,esi
  40448e:	jnp    0x404492
  404490:	pop    ds
  404491:	outs   dx,DWORD PTR ds:[esi]
  404492:	mov    ebp,0x6007070b
  404497:	push   cs
  404498:	sbb    BYTE PTR [ebx+0x1b],dh
  40449b:	test   eax,0x1f053a9e
  4044a0:	les    eax,FWORD PTR [edx-0xf]
  4044a3:	mov    cl,0x8d
  4044a5:	push   edi
  4044a6:	fisttp DWORD PTR [edi+ecx*8+0x113f5a73]
  4044ad:	popf   
  4044ae:	ja     0x404438
  4044b0:	push   ebx
  4044b1:	clc    
  4044b2:	inc    esp
  4044b3:	pop    ebx
  4044b4:	mov    dl,0x2e
  4044b6:	pop    ebx
  4044b7:	loopne 0x40451a
  4044b9:	(bad)  
  4044ba:	jmp    0x3be4a45e
  4044bf:	leave  
  4044c0:	aam    0xda
  4044c2:	cmp    bl,dl
  4044c4:	mov    ah,0x9
  4044c6:	mov    ds:0x3dc7d394,al
  4044cb:	ret    
  4044cc:	sti    
  4044cd:	pop    edi
  4044ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044cf:	scas   eax,DWORD PTR es:[edi]
  4044d0:	push   0xfffffff6
  4044d2:	jno    0x4044f1
  4044d4:	dec    esp
  4044d5:	add    eax,0x859f784d
  4044da:	mov    ds:0xb1927f2a,eax
  4044df:	iret   
  4044e0:	cmp    eax,0x32e3ad49
  4044e5:	push   cs
  4044e6:	inc    ecx
  4044e7:	nop
  4044e8:	out    dx,eax
  4044e9:	test   BYTE PTR [edi-0x46],cl
  4044ec:	adc    bh,BYTE PTR [edx+0x14]
  4044ef:	cmp    ecx,DWORD PTR [edx+0x59]
  4044f2:	inc    esi
  4044f3:	call   0x287a:0x163569ec
  4044fa:	lahf   
  4044fb:	rcr    BYTE PTR [edi+edx*2-0x4d],1
  4044ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404500:	pushf  
  404501:	clc    
  404502:	add    dh,BYTE PTR [edi-0x5ade7383]
  404508:	pop    edx
  404509:	push   ss
  40450a:	mov    esp,0x95b50209
  40450f:	popa   
  404510:	mov    bl,0xbf
  404512:	jns    0x404546
  404514:	shl    DWORD PTR [ebx],0xd4
  404517:	xor    edi,DWORD PTR [ebx-0x341f8c4f]
  40451d:	push   edx
  40451e:	inc    esp
  40451f:	popf   
  404520:	sub    eax,0x2b60b058
  404525:	dec    ebp
  404526:	jmp    0x6f90:0xf6e5ed5
  40452d:	xchg   esp,eax
  40452e:	std    
  40452f:	and    BYTE PTR [edx+0x12],cl
  404532:	cmp    BYTE PTR [edi-0x7f4808f8],cl
  404538:	mov    al,ds:0xb63cff33
  40453d:	push   ds
  40453e:	or     ecx,esp
  404540:	rol    DWORD PTR ds:0x80619932,0xce
  404547:	sub    dl,BYTE PTR [edi+0x75]
  40454a:	fld    DWORD PTR [edx+0x46fd7b3c]
  404550:	test   al,0xdd
  404552:	xchg   ebx,eax
  404553:	dec    eax
  404554:	shl    edx,cl
  404556:	inc    esp
  404557:	mov    cl,0x53
  404559:	xlat   BYTE PTR gs:[ebx]
  40455b:	or     bh,dh
  40455d:	cmp    ecx,esi
  40455f:	shr    BYTE PTR [ecx+esi*4],cl
  404562:	sub    eax,0x6b22c4f9
  404567:	xchg   dl,bl
  404569:	inc    edx
  40456a:	call   0x15b5:0xf9487664
  404571:	ins    BYTE PTR es:[edi],dx
  404572:	ret    
  404573:	outs   dx,DWORD PTR ds:[esi]
  404574:	retf   
  404575:	dec    esp
  404576:	mov    esi,0x9e6c4958
  40457b:	repnz sbb al,0x7d
  40457e:	(bad)  
  40457f:	clc    
  404580:	out    dx,eax
  404581:	add    DWORD PTR [eax],ebx
  404583:	and    DWORD PTR [ebx],esi
  404585:	pop    ss
  404586:	outs   dx,BYTE PTR ds:[esi]
  404587:	scas   eax,DWORD PTR es:[edi]
  404588:	mov    dl,0x84
  40458a:	sti    
  40458b:	push   ebp
  40458c:	mov    bl,0xdc
  40458e:	cmp    DWORD PTR [edx],edx
  404590:	xchg   dl,bh
  404592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404593:	sbb    bh,dh
  404595:	sbb    eax,0x309efdff
  40459a:	inc    edi
  40459b:	test   DWORD PTR [edx+0x5afe45d7],ebx
  4045a1:	arpl   WORD PTR [ebx-0x2a],si
  4045a4:	add    ebp,esp
  4045a6:	jmp    0xc5e6:0xb2a353e
  4045ad:	push   ds
  4045ae:	jmp    0x3be2:0x44f59af
  4045b5:	add    al,0xeb
  4045b7:	outs   dx,BYTE PTR ds:[esi]
  4045b8:	adc    eax,0xba6ecd3c
  4045bd:	pop    ebx
  4045be:	xchg   ecx,eax
  4045bf:	(bad)  
  4045c0:	mov    ds:0xb8a289d4,al
  4045c5:	inc    ebx
  4045c6:	lea    edi,[ebx+0x16]
  4045c9:	ins    BYTE PTR es:[edi],dx
  4045ca:	dec    edi
  4045cb:	arpl   WORD PTR [eax+0x591993dd],cx
  4045d1:	mov    dh,0x0
  4045d3:	lds    edi,FWORD PTR [eax]
  4045d5:	enter  0x43c8,0xe2
  4045d9:	retf   0x625d
  4045dc:	fld    DWORD PTR [esi+0x37]
  4045df:	stos   BYTE PTR es:[edi],al
  4045e0:	es pop ss
  4045e2:	push   0x23c06322
  4045e7:	fcom   DWORD PTR [esi]
  4045e9:	lea    eax,[ecx-0x7156a6ad]
  4045ef:	and    al,0x3b
  4045f1:	xchg   ecx,eax
  4045f2:	arpl   WORD PTR [ebx-0x6cbc129],sp
  4045f8:	dec    esi
  4045f9:	mov    ch,BYTE PTR [edi+0x2c]
  4045fc:	loopne 0x40459d
  4045fe:	jmp    0x4045ba
  404600:	jg     0x404643
  404602:	sar    BYTE PTR [ecx+0x5b],1
  404605:	(bad)  
  404606:	and    al,0x3b
  404608:	lods   eax,DWORD PTR ds:[esi]
  404609:	test   eax,ebp
  40460b:	adc    BYTE PTR [edi+0x48],bh
  40460e:	ret    
  40460f:	push   ds
  404610:	xchg   ebp,eax
  404611:	push   esi
  404612:	and    DWORD PTR [ecx-0x5e],ebx
  404615:	aad    0xe6
  404617:	neg    DWORD PTR [ebp-0xe]
  40461a:	mov    ebp,0x80e13a28
  40461f:	jecxz  0x4045c1
  404621:	adc    BYTE PTR [edi-0x66fa8d96],dh
  404627:	aam    0xf4
  404629:	adc    esp,esp
  40462b:	mov    ds:0xdb968a18,al
  404630:	pop    esi
  404631:	(bad)  
  404632:	sub    edi,DWORD PTR [esi-0x4c0e28f7]
  404638:	retf   
  404639:	and    DWORD PTR [ebx],ebp
  40463b:	push   0x41a127f5
  404640:	sbb    al,0xd5
  404642:	mov    bl,0x59
  404644:	inc    esi
  404645:	and    al,0xa4
  404647:	mov    ecx,0xb9c95ddf
  40464c:	push   es
  40464d:	xor    DWORD PTR [ebx+edi*4],edx
  404650:	dec    esp
  404651:	sub    esp,DWORD PTR ds:0xd59abd05
  404657:	xlat   BYTE PTR ds:[ebx]
  404658:	shr    DWORD PTR ds:0xf7638b12,1
  40465e:	mov    ebx,0xf0971e00
  404663:	outs   dx,BYTE PTR ds:[esi]
  404664:	mov    ebx,?
  404666:	cld    
  404667:	adc    eax,0xedeab2fb
  40466c:	popa   
  40466d:	shl    BYTE PTR [ebp+0x4ab5755],cl
  404673:	push   edi
  404674:	sbb    edi,DWORD PTR [edi-0x59]
  404677:	push   0x4
  404679:	(bad)  
  40467a:	mov    bl,0xa2
  40467c:	int3   
  40467d:	aaa    
  40467e:	aam    0x8
  404680:	sbb    al,0xb7
  404682:	adc    dh,BYTE PTR [eax-0x6be50b3f]
  404688:	pop    ecx
  404689:	cmp    DWORD PTR [ebp-0x21cfd635],0x2
  404690:	jge    0x4046a4
  404692:	dec    edx
  404693:	rcr    cl,cl
  404695:	test   DWORD PTR [edx-0x2b0141a2],eax
  40469b:	call   0xdcee:0x62c9af3e
  4046a2:	rol    ebx,cl
  4046a4:	js     0x4046e5
  4046a6:	and    eax,0x164ae1a3
  4046ab:	push   esp
  4046ac:	xor    eax,DWORD PTR [ecx]
  4046ae:	inc    esp
  4046af:	loope  0x404669
  4046b1:	inc    ebp
  4046b2:	ror    ah,1
  4046b4:	sbb    eax,0x8a378115
  4046b9:	jp     0x40472e
  4046bb:	fisubr DWORD PTR [edx]
  4046bd:	jno    0x404729
  4046bf:	cli    
  4046c0:	adc    al,0x9d
  4046c2:	scas   eax,DWORD PTR es:[edi]
  4046c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046c4:	mov    ebx,0xf304f8a4
  4046c9:	fisub  WORD PTR [ebp+esi*2+0x4ce367b0]
  4046d0:	icebp  
  4046d1:	test   eax,0xc01e7fc
  4046d6:	arpl   WORD PTR [edi],bp
  4046d8:	jg     0x40472f
  4046da:	ds and eax,0x9249ef7e
  4046e0:	or     edi,DWORD PTR [ebp+0x6d]
  4046e3:	outs   dx,DWORD PTR ds:[esi]
  4046e4:	jmp    DWORD PTR [esi+0x7db85037]
  4046ea:	icebp  
  4046eb:	pop    ebp
  4046ec:	xchg   esp,eax
  4046ed:	jnp    0x404741
  4046ef:	adc    DWORD PTR [edi],ecx
  4046f1:	retf   
  4046f2:	push   ecx
  4046f3:	and    bh,BYTE PTR [di-0xb13]
  4046f8:	inc    eax
  4046f9:	or     ebp,DWORD PTR [ecx-0x32]
  4046fc:	in     al,0xe3
  4046fe:	mov    al,ds:0x1f620e51
  404703:	mov    esi,ds
  404705:	cwde   
  404706:	int    0xba
  404708:	adc    cl,BYTE PTR [eax+esi*8-0x3b493fbf]
  40470f:	out    dx,al
  404710:	sbb    esi,DWORD PTR [edi-0x4b]
  404713:	sbb    eax,edi
  404715:	add    DWORD PTR [esi],ebp
  404717:	push   ss
  404718:	or     BYTE PTR [ebx+eiz*8],dh
  40471b:	inc    ebx
  40471c:	test   eax,0x5330ac79
  404721:	jnp    0x4046d9
  404723:	call   0x2640206d
  404728:	in     eax,0x2c
  40472a:	mov    ecx,0xb3aac2cd
  40472f:	nop
  404730:	mov    al,ds:0x370ef8b0
  404735:	push   esi
  404736:	xor    eax,0x62a85d21
  40473b:	jmp    0x4046ef
  40473d:	cmc    
  40473e:	out    dx,al
  40473f:	fcomp  QWORD PTR [edi]
  404741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404742:	push   dx
  404744:	cs mov bl,0x94
  404747:	adc    DWORD PTR [edi-0x1547bab6],edx
  40474d:	pop    es
  40474e:	mov    cl,0x7d
  404750:	fstp   TBYTE PTR [esi+0x73]
  404753:	ins    BYTE PTR es:[edi],dx
  404754:	pushf  
  404755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404756:	xchg   edi,eax
  404757:	jb     0x4047c4
  404759:	call   0xfbf0:0x79386ec6
  404760:	push   edi
  404761:	outs   dx,DWORD PTR ds:[esi]
  404762:	xchg   ebx,eax
  404763:	cmp    DWORD PTR [eax-0x79393627],ecx
  404769:	sahf   
  40476a:	mov    DWORD PTR [eax+edx*2],edx
  40476d:	adc    ah,ah
  40476f:	add    ah,al
  404771:	inc    ecx
  404772:	mov    al,ds:0x4ab9fcd0
  404777:	(bad)  
  404778:	pop    eax
  404779:	mov    edi,0xf6f9dc60
  40477e:	adc    DWORD PTR [ecx],ecx
  404780:	es stc 
  404782:	loope  0x40479c
  404784:	ds (bad) 
  404786:	pusha  
  404787:	jbe    0x4047f1
  404789:	es pop esi
  40478b:	jmp    0x4047d4
  40478d:	adc    eax,0xc082e48f
  404792:	ss out 0x54,al
  404795:	sub    al,BYTE PTR [ebx-0x4c]
  404798:	jns    0x404728
  40479a:	lahf   
  40479b:	mov    esi,0x755f9d0d
  4047a0:	or     DWORD PTR [edi+0x69d4d52b],ecx
  4047a6:	loopne 0x4047fa
  4047a8:	mov    eax,0x467f5e8c
  4047ad:	ror    DWORD PTR [edx-0x20],1
  4047b0:	cmp    bh,BYTE PTR [edi+0x51]
  4047b3:	dec    esp
  4047b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047b5:	sti    
  4047b6:	clc    
  4047b7:	pushf  
  4047b8:	not    BYTE PTR [edx+0x17]
  4047bb:	add    ah,BYTE PTR [edx+0x5a85de46]
  4047c1:	xchg   ecx,eax
  4047c2:	ret    0x6ff6
  4047c5:	mov    ah,0x55
  4047c7:	cwde   
  4047c8:	imul   BYTE PTR [ecx]
  4047ca:	sub    DWORD PTR [ebx],ebx
  4047cc:	push   cs
  4047cd:	pop    ebp
  4047ce:	adc    eax,0xd9c44165
  4047d3:	jmp    0x40476b
  4047d5:	clc    
  4047d6:	call   0xceb9a9b7
  4047db:	or     al,0x92
  4047dd:	addr16 sbb ch,dh
  4047e0:	fldpi  
  4047e2:	mov    ecx,0xca4f615a
  4047e7:	xchg   ecx,eax
  4047e8:	adc    DWORD PTR [esi+0x36f793d3],eax
  4047ee:	sbb    bl,BYTE PTR [edi+ecx*1-0x27]
  4047f2:	inc    edx
  4047f3:	data16 fild QWORD PTR [esi]
  4047f6:	xor    al,0x95
  4047f8:	push   ebx
  4047f9:	jae    0x40482a
  4047fb:	xchg   DWORD PTR [ecx-0x75],ebp
  4047fe:	jnp    0x40483f
  404800:	push   cs
  404801:	or     al,0x3d
  404803:	adc    BYTE PTR [eax+0x61107c71],dh
  404809:	mov    ecx,0xc58383e3
  40480e:	mov    DWORD PTR [eax],esp
  404810:	mov    ah,0x12
  404812:	mov    dh,0xb9
  404814:	or     ecx,edi
  404816:	push   ecx
  404817:	fprem  
  404819:	add    DWORD PTR [ebx+0x44611cdf],0xffffff83
  404820:	movq   mm6,QWORD PTR [ebx]
  404823:	data16 add al,0x9
  404826:	hlt    
  404827:	inc    esi
  404828:	mov    dl,BYTE PTR [esi+0x6d6865ec]
  40482e:	jbe    0x404895
  404830:	xchg   esi,eax
  404831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404832:	cmc    
  404833:	mov    WORD PTR [eax-0x387f13ee],ss
  404839:	std    
  40483a:	add    BYTE PTR [eax],0x78
  40483d:	cmc    
  40483e:	dec    ebp
  40483f:	pop    ebp
  404840:	test   DWORD PTR [ebp-0x7bf18300],esp
  404846:	sahf   
  404847:	dec    ebp
  404848:	and    BYTE PTR [esi],ah
  40484a:	ja     0x4048a0
  40484c:	inc    edi
  40484d:	sub    BYTE PTR [eax-0x7c],dl
  404850:	or     al,0x97
  404852:	xor    al,0x60
  404854:	cs aad 0x76
  404857:	fwait
  404858:	jg     0x40481d
  40485a:	test   eax,0xafa681a7
  40485f:	xor    edi,DWORD PTR [ebx+0x606452ec]
  404865:	jns    0x40487d
  404867:	push   esi
  404868:	sub    esp,DWORD PTR [ebx-0x6906f217]
  40486e:	pop    ds
  40486f:	sub    eax,0x733077bc
  404874:	(bad)  
  404876:	fs dec ebp
  404878:	inc    BYTE PTR [eax+0x6f]
  40487b:	pusha  
  40487c:	popa   
  40487d:	jmp    0xa214:0xfa10610f
  404884:	aad    0xee
  404886:	jle    0x4048b9
  404888:	mov    edx,0x32230955
  40488d:	(bad)  
  40488e:	jmp    0x3ce39945
  404893:	int    0xc7
  404895:	loop   0x404856
  404897:	iret   
  404898:	cmc    
  404899:	mov    cl,0xcf
  40489b:	jno    0x4048f0
  40489d:	jmp    0x6fd3:0x6c9738ff
  4048a4:	sub    esp,DWORD PTR [eax+0x31]
  4048a7:	mov    eax,0x1622b67d
  4048ac:	push   ebx
  4048ad:	ins    BYTE PTR es:[edi],dx
  4048ae:	mov    eax,ds:0x643d54bf
  4048b3:	in     al,dx
  4048b4:	mov    eax,0x6eb2b2ce
  4048b9:	in     al,0xf0
  4048bb:	rcl    DWORD PTR [esi],0xda
  4048be:	cmp    bl,ah
  4048c0:	sub    DWORD PTR [ebx],0x496d0861
  4048c6:	mov    bl,0xf1
  4048c8:	imul   ecx,DWORD PTR [esi+0x7a],0x13
  4048cc:	imul   eax,DWORD PTR [ecx+0xb06267c],0x40d28dd1
  4048d6:	xor    dh,BYTE PTR [ebx+ecx*8-0x17]
  4048da:	cwde   
  4048db:	(bad)  
  4048dc:	mov    ch,0x97
  4048de:	and    edi,DWORD PTR [ecx]
  4048e0:	add    BYTE PTR [edx-0x3196891e],cl
  4048e6:	iret   
  4048e7:	ds nop
  4048e9:	mov    edi,0x4fbc2c29
  4048ee:	or     ebp,edx
  4048f0:	je     0x4048b7
  4048f2:	sahf   
  4048f3:	jns    0x4048e2
  4048f5:	push   edx
  4048f6:	push   eax
  4048f7:	int3   
  4048f8:	in     eax,0x55
  4048fa:	sti    
  4048fb:	aas    
  4048fc:	and    ah,dl
  4048fe:	pop    ecx
  4048ff:	stos   BYTE PTR es:[edi],al
  404900:	mov    BYTE PTR [eax],bl
  404902:	add    bl,ch
  404904:	ins    BYTE PTR es:[edi],dx
  404905:	cmp    eax,0xf53876d6
  40490a:	adc    edx,DWORD PTR [eax+eiz*4+0x2]
  40490e:	mov    eax,ds:0x8ff4558c
  404913:	ret    
  404914:	int    0x62
  404916:	ja     0x4048fb
  404918:	push   cs
  404919:	xchg   esp,eax
  40491a:	test   DWORD PTR [ebp+0x3a],edx
  40491d:	sub    esi,DWORD PTR [esi-0x6a6a1c46]
  404923:	cld    
  404924:	sub    BYTE PTR [edx],bh
  404926:	xchg   edi,eax
  404927:	dec    ecx
  404928:	cmc    
  404929:	push   cs
  40492a:	add    eax,DWORD PTR [ebx+0xeff7d4d]
  404930:	and    BYTE PTR [ebx+0x66f099f],ah
  404936:	inc    ebx
  404937:	stos   DWORD PTR es:[edi],eax
  404938:	hlt    
  404939:	lods   eax,DWORD PTR ds:[esi]
  40493a:	mov    edx,ecx
  40493c:	lahf   
  40493d:	icebp  
  40493e:	cmc    
  40493f:	jnp    0x404956
  404941:	ret    
  404942:	mov    ch,0x1e
  404944:	cmp    ah,cl
  404946:	into   
  404947:	fcomp  DWORD PTR [esi-0x51]
  40494a:	jo     0x4049ab
  40494c:	fadd   QWORD PTR [eax-0x280673ea]
  404952:	sub    esp,DWORD PTR [edi]
  404954:	jae    0x4049cb
  404956:	cdq    
  404957:	mov    dl,0xac
  404959:	fstp   QWORD PTR [eax]
  40495b:	clc    
  40495c:	fdiv   DWORD PTR [edi+0x2d]
  40495f:	iret   
  404960:	pusha  
  404961:	cmc    
  404962:	sbb    eax,0x6a18042f
  404967:	sahf   
  404968:	(bad)  
  404969:	cdq    
  40496a:	ret    
  40496b:	cli    
  40496c:	adc    DWORD PTR ds:0xe46fea8e,edx
  404972:	fld    DWORD PTR ds:0xd0981aef
  404978:	fist   DWORD PTR [edx-0x1e]
  40497b:	rcl    edx,1
  40497d:	cmp    cl,BYTE PTR [edx+0x165b4b98]
  404983:	push   0xffffffcb
  404985:	pop    esp
  404986:	mov    ds:0x5b95452b,eax
  40498b:	or     al,0xff
  40498d:	sbb    al,0x83
  40498f:	inc    esi
  404990:	jg     0x404975
  404992:	aad    0x88
  404994:	push   cs
  404995:	fsubr  QWORD PTR [edx]
  404997:	aam    0x96
  404999:	lahf   
  40499a:	and    BYTE PTR [eax+0x37],dh
  40499d:	xor    esp,DWORD PTR [esi+0x3e23001a]
  4049a3:	stos   DWORD PTR es:[edi],eax
  4049a4:	fdiv   DWORD PTR [edx+edi*8+0x4171ad1d]
  4049ab:	jl     0x40498d
  4049ad:	in     eax,dx
  4049ae:	scas   al,BYTE PTR es:[edi]
  4049af:	repnz stc 
  4049b1:	cmc    
  4049b2:	add    eax,0x9c17bd99
  4049b7:	xchg   ebp,eax
  4049b8:	xchg   edx,eax
  4049b9:	jecxz  0x40497e
  4049bb:	rcr    esp,cl
  4049bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049be:	push   eax
  4049bf:	or     cl,BYTE PTR [edx+0x29]
  4049c2:	shr    BYTE PTR [ecx-0xc],1
  4049c5:	test   al,0xd7
  4049c7:	mov    bh,BYTE PTR [ecx-0x70968806]
  4049cd:	and    al,0xd6
  4049cf:	dec    esi
  4049d0:	pop    edi
  4049d1:	mov    al,0x74
  4049d3:	xchg   edx,eax
  4049d4:	jmp    0x40495f
  4049d6:	into   
  4049d7:	pop    edi
  4049d8:	es jl  0x4049d1
  4049db:	inc    ecx
  4049dc:	(bad)  
  4049dd:	jnp    0x404a22
  4049df:	fst    DWORD PTR [edx+0x7555fff6]
  4049e5:	add    al,BYTE PTR [ecx+ecx*8]
  4049e8:	clc    
  4049e9:	adc    bh,BYTE PTR [edi*8+0x70c0ee4]
  4049f0:	sub    ah,BYTE PTR [esi]
  4049f2:	mov    ch,0xd6
  4049f4:	data16 mov BYTE PTR [edx+0x9eb859c],ch
  4049fb:	dec    edx
  4049fc:	or     DWORD PTR [esi],esp
  4049fe:	bound  eax,QWORD PTR [edx]
  404a00:	or     ebx,edx
  404a02:	std    
  404a03:	popf   
  404a04:	dec    esp
  404a05:	fisub  WORD PTR [edi-0x6]
  404a08:	cmp    eax,0xb43616ee
  404a0d:	gs push eax
  404a0f:	xchg   ecx,eax
  404a10:	stc    
  404a11:	dec    edi
  404a12:	pop    ebp
  404a13:	fnstenv [bp+di]
  404a16:	dec    esi
  404a17:	(bad)
  404a1a:	retf   
  404a1b:	jnp    0x404a8e
  404a1d:	in     eax,0xa
  404a1f:	mov    dl,0x47
  404a21:	fstp   st(6)
  404a23:	idiv   BYTE PTR [edx]
  404a25:	xor    eax,0xfec6ac50
  404a2a:	and    DWORD PTR [edi-0x8bf1997],edx
  404a30:	xor    cl,BYTE PTR [ebp+eiz*2-0x6]
  404a34:	cmp    esp,esp
  404a36:	arpl   si,dx
  404a38:	push   ss
  404a39:	mov    edx,0x5d3aae3c
  404a3e:	mov    ecx,edx
  404a40:	and    ah,BYTE PTR [esp+eax*2]
  404a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a44:	push   ebp
  404a45:	jbe    0x4049d6
  404a47:	aam    0x15
  404a49:	dec    ebp
  404a4a:	cwde   
  404a4b:	mul    al
  404a4d:	xlat   BYTE PTR ds:[ebx]
  404a4e:	xchg   ecx,eax
  404a4f:	je     0x404ac3
  404a51:	dec    eax
  404a52:	add    BYTE PTR [ebp-0x3b],0x91
  404a56:	adc    BYTE PTR [edx-0x1a],al
  404a59:	and    DWORD PTR [ecx+0x59],esi
  404a5c:	mov    al,ds:0xd1c1a183
  404a61:	into   
  404a62:	dec    ebp
  404a63:	leave  
  404a64:	out    0x49,al
  404a66:	daa    
  404a67:	aad    0xef
  404a69:	mov    ecx,0xf5c22dc7
  404a6e:	repnz neg eax
  404a71:	shr    BYTE PTR [edx+esi*4-0x46],0x66
  404a76:	sub    al,0xf6
  404a78:	shr    BYTE PTR [ebx+0x2909acb4],cl
  404a7e:	jb     0x404a37
  404a80:	mov    DWORD PTR [ebx],ebp
  404a82:	inc    esi
  404a83:	in     al,dx
  404a84:	push   edi
  404a85:	ins    DWORD PTR es:[edi],dx
  404a86:	dec    esp
  404a87:	aas    
  404a88:	cdq    
  404a89:	stos   DWORD PTR es:[edi],eax
  404a8a:	xchg   ebx,eax
  404a8b:	push   eax
  404a8c:	pop    ecx
  404a8d:	cwde   
  404a8e:	ds add eax,0x96c94c21
  404a94:	mov    ch,BYTE PTR [edx+ebp*4+0x21]
  404a98:	imul   esi,ecx,0xd906cfd7
  404a9e:	pop    ds
  404a9f:	mov    esp,0x136af66a
  404aa4:	in     al,dx
  404aa5:	hlt    
  404aa6:	xor    bl,BYTE PTR [esi+0x73]
  404aa9:	jo     0x404aa6
  404aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aac:	jp     0x404a4c
  404aae:	mov    edx,0x77fa0953
  404ab3:	mov    bl,0x46
  404ab5:	popa   
  404ab6:	call   0x9618b5be
  404abb:	mov    al,ds:0xa37e36ec
  404ac0:	add    BYTE PTR [ebx-0x1865ab8c],cl
  404ac6:	mov    esi,0xb96a6604
  404acb:	dec    esp
  404acc:	jl     0x404b11
  404ace:	enter  0x4fc8,0x11
  404ad2:	push   ebp
  404ad3:	fbld   TBYTE PTR [eax-0x1612ee76]
  404ad9:	push   0x516f619f
  404ade:	xchg   ecx,eax
  404adf:	fs loope 0x404abf
  404ae2:	retf   0xc64b
  404ae5:	dec    ecx
  404ae6:	jg     0x404b4f
  404ae8:	dec    edi
  404ae9:	int3   
  404aea:	and    eax,0x33145a2f
  404aef:	push   ss
  404af0:	dec    ebp
  404af1:	jmp    0xd02f6523
  404af6:	jae    0x404ac9
  404af8:	sti    
  404af9:	aas    
  404afa:	mov    WORD PTR [esi+edi*1-0x7cd2c002],bx
  404b02:	push   ebp
  404b03:	inc    edi
  404b04:	xor    esp,DWORD PTR [ecx+0x3b]
  404b07:	push   edx
  404b08:	fstp   QWORD PTR [edi-0x3d]
  404b0b:	inc    esi
  404b0c:	fisubr WORD PTR [edx]
  404b0e:	(bad)  
  404b0f:	xor    esp,DWORD PTR [eax+edx*4+0x32f6552]
  404b16:	jns    0x404b41
  404b18:	push   es
  404b19:	inc    edx
  404b1a:	das    
  404b1b:	mov    esi,0xa3d7433b
  404b20:	mov    dh,0x93
  404b22:	and    BYTE PTR [esi+0x21],ah
  404b25:	xchg   DWORD PTR [ebx+edi*2],ebx
  404b28:	not    DWORD PTR [edi+0x4a]
  404b2b:	cmp    BYTE PTR [esi],ah
  404b2d:	pop    edx
  404b2e:	xchg   ebx,eax
  404b2f:	out    0xac,al
  404b31:	in     al,dx
  404b32:	dec    edi
  404b33:	sahf   
  404b34:	mov    BYTE PTR [ebx],0x1f
  404b37:	jb     0x404acc
  404b39:	dec    ebx
  404b3a:	mov    eax,0xf926b0f
  404b3f:	out    0x51,eax
  404b41:	xchg   DWORD PTR [ebp+0x316fd4bf],ebx
  404b47:	stc    
  404b48:	mov    ch,0x58
  404b4a:	outs   dx,BYTE PTR ds:[esi]
  404b4b:	jns    0x404b6f
  404b4d:	test   al,0xad
  404b4f:	jno    0x404b12
  404b51:	xchg   DWORD PTR [esi],ebp
  404b53:	or     al,0x3
  404b55:	xchg   si,ax
  404b57:	inc    esp
  404b58:	in     al,dx
  404b59:	fldcw  WORD PTR [edi+eiz*2-0x61]
  404b5d:	(bad)  [ebx+0x7a]
  404b60:	rcr    DWORD PTR [ebx+edi*1],0xac
  404b64:	push   es
  404b65:	xor    al,0x8c
  404b67:	pop    esp
  404b68:	nop
  404b69:	out    0xb,eax
  404b6b:	jl     0x404bd7
  404b6d:	sub    ch,BYTE PTR [ebx-0x2ac707d3]
  404b73:	xchg   esp,eax
  404b74:	aaa    
  404b75:	push   ebx
  404b76:	(bad)  
  404b77:	in     eax,0x9c
  404b79:	mov    DWORD PTR [esi+0xb],esp
  404b7c:	shl    BYTE PTR [ecx+0x5109b1ee],0xdf
  404b83:	jmp    0x7eeed4c8
  404b88:	call   0xe9e56968
  404b8d:	jb     0x404b83
  404b8f:	scas   eax,DWORD PTR es:[edi]
  404b90:	adc    DWORD PTR [esi+ebp*8+0x63],ebp
  404b94:	sahf   
  404b95:	xlat   BYTE PTR ds:[ebx]
  404b96:	push   ebp
  404b97:	lods   al,BYTE PTR ds:[esi]
  404b98:	mov    cl,0x25
  404b9a:	mov    ah,0x74
  404b9c:	(bad)  
  404b9d:	nop
  404b9e:	outs   dx,BYTE PTR ds:[esi]
  404b9f:	fild   DWORD PTR ds:0xf058c94c
  404ba5:	inc    DWORD PTR [esi+0x2be1a47c]
  404bab:	stos   DWORD PTR es:[edi],eax
  404bac:	inc    edx
  404bad:	outs   dx,BYTE PTR ds:[esi]
  404bae:	jmp    0x8391dfeb
  404bb3:	xchg   ebx,eax
  404bb4:	lods   eax,DWORD PTR ds:[esi]
  404bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bb6:	adc    eax,0x5a965588
  404bbb:	push   edi
  404bbc:	out    0x5d,eax
  404bbe:	popa   
  404bbf:	pushf  
  404bc0:	shl    al,cl
  404bc2:	xchg   esi,eax
  404bc3:	inc    esp
  404bc4:	inc    edx
  404bc5:	ficom  DWORD PTR [ebx+0x5e]
  404bc8:	loope  0x404b6f
  404bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bcb:	xchg   esp,eax
  404bcc:	and    eax,0x9de8e6c5
  404bd1:	fwait
  404bd2:	inc    edi
  404bd3:	mov    al,0xe9
  404bd5:	pop    edi
  404bd6:	or     ebx,DWORD PTR [edi-0x1f]
  404bd9:	ins    DWORD PTR es:[edi],dx
  404bda:	sbb    edx,DWORD PTR [eax+0x60c1adb9]
  404be0:	lock bound ebx,QWORD PTR [edx+0x4a21e145]
  404be7:	cwde   
  404be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404be9:	add    ebx,esi
  404beb:	dec    esp
  404bec:	shr    DWORD PTR [ebx+0x60],0xbf
  404bf0:	jne    0x404bde
  404bf2:	bound  esi,QWORD PTR [edx+eiz*4+0x62a5c825]
  404bf9:	fmul   QWORD PTR [edx*2-0x3f73b42]
  404c00:	push   edi
  404c01:	adc    ah,0x4e
  404c04:	call   0x5f91:0x5a8bd7ee
  404c0b:	call   FWORD PTR [ebx+edx*8-0x31]
  404c0f:	sahf   
  404c10:	or     DWORD PTR [eax+eax*1-0x15c8ef01],0x49
  404c18:	stc    
  404c19:	aad    0x84
  404c1b:	imul   ebp,eax,0xffffffd5
  404c1e:	cmp    al,0x87
  404c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c21:	push   ecx
  404c22:	fnstenv [eax+0x435f1565]
  404c28:	push   ds
  404c29:	push   edi
  404c2a:	ins    DWORD PTR es:[edi],dx
  404c2b:	dec    ecx
  404c2c:	and    al,0x9c
  404c2e:	stos   DWORD PTR es:[edi],eax
  404c2f:	lods   eax,DWORD PTR ds:[esi]
  404c30:	pop    eax
  404c31:	lods   al,BYTE PTR ds:[esi]
  404c32:	pop    esi
  404c33:	clc    
  404c34:	retf   
  404c35:	jl     0x404c25
  404c37:	pop    esp
  404c38:	pop    eax
  404c39:	shl    BYTE PTR ds:0x5708e979,1
  404c3f:	enter  0xa8dc,0x96
  404c43:	push   ecx
  404c44:	je     0x404bee
  404c46:	dec    esp
  404c47:	shl    dh,cl
  404c49:	adc    eax,0x20795fc
  404c4e:	iret   
  404c4f:	nop
  404c50:	xor    eax,0x8ad1c7d9
  404c55:	shl    cl,cl
  404c57:	clc    
  404c58:	lea    eax,ds:[ebp+0x2c]
  404c5c:	xchg   edx,eax
  404c5d:	lahf   
  404c5e:	jle    0x404c85
  404c60:	add    DWORD PTR [eax],edx
  404c62:	push   ss
  404c63:	arpl   WORD PTR [esi+0x41],bx
  404c66:	and    bh,BYTE PTR [edi-0x37]
  404c69:	stos   BYTE PTR es:[edi],al
  404c6a:	in     eax,dx
  404c6b:	out    0x7a,eax
  404c6d:	cmp    eax,0xadcc5f29
  404c72:	outs   dx,BYTE PTR ds:[esi]
  404c73:	jno    0x404c40
  404c75:	addr16 rcr esi,cl
  404c78:	shl    DWORD PTR [ebx+edi*8+0x5b181ab8],1
  404c7f:	dec    edx
  404c80:	mov    dh,BYTE PTR [ebx+0x725f21eb]
  404c86:	out    dx,eax
  404c87:	xor    BYTE PTR [ebx],cl
  404c89:	jl     0x404cb7
  404c8b:	dec    ecx
  404c8c:	push   ds
  404c8d:	fcomip st,st(1)
  404c8f:	cmc    
  404c90:	stos   DWORD PTR es:[edi],eax
  404c91:	jge    0x404c80
  404c93:	xchg   edi,eax
  404c94:	dec    ebx
  404c95:	test   DWORD PTR gs:[eax-0x72ce8bfd],esp
  404c9c:	setg   dl
  404c9f:	jmp    0x4812b7e9
  404ca4:	call   0x7ea4:0x31bbfc2a
  404cab:	add    ebx,DWORD PTR [eax+0x613c9e30]
  404cb1:	mov    ebp,0xce6b7008
  404cb6:	(bad)  
  404cb7:	xlat   BYTE PTR ds:[ebx]
  404cb8:	int    0x3d
  404cba:	mov    eax,ds:0x4bcbccd9
  404cbf:	aad    0x3
  404cc1:	fbstp  TBYTE PTR [esi]
  404cc3:	clc    
  404cc4:	jge    0x404cb3
  404cc6:	rcr    BYTE PTR [ecx],1
  404cc8:	leave  
  404cc9:	shr    DWORD PTR [eax],cl
  404ccb:	sbb    BYTE PTR [esi+0x4],dl
  404cce:	jnp    0x404cb6
  404cd0:	mov    DWORD PTR [ebx+0x44],ebx
  404cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cd4:	arpl   WORD PTR [ecx+0x67],cx
  404cd7:	mov    ebp,0x8fcacc39
  404cdc:	push   esi
  404cdd:	or     esp,ecx
  404cdf:	cld    
  404ce0:	cmp    al,0x1c
  404ce2:	jge    0x404cb6
  404ce4:	jl     0x404d28
  404ce6:	xor    al,0x21
  404ce8:	or     bl,BYTE PTR [edx]
  404cea:	sbb    al,0x63
  404cec:	clc    
  404ced:	jbe    0x404cf5
  404cef:	xchg   edx,eax
  404cf0:	sbb    BYTE PTR [ebx-0x1efaedfe],dl
  404cf6:	inc    ecx
  404cf7:	mov    al,0xac
  404cf9:	mov    edx,0xa9290d75
  404cfe:	(bad)  
  404cff:	out    dx,al
  404d00:	rcl    cl,cl
  404d02:	sahf   
  404d03:	jg     0x404d39
  404d05:	push   esi
  404d06:	rcl    DWORD PTR [edx-0x23ed49ec],1
  404d0c:	jl     0x404cf6
  404d0e:	jae    0x404ccb
  404d10:	add    al,0xa1
  404d12:	lods   eax,DWORD PTR ds:[esi]
  404d13:	retf   0x64f7
  404d16:	(bad)  
  404d17:	popf   
  404d18:	(bad)  [eax+0x4ba61d1f]
  404d1e:	inc    ecx
  404d1f:	(bad)  
  404d20:	mov    dh,0x79
  404d22:	add    DWORD PTR [edi],edi
  404d24:	in     al,0x6b
  404d26:	shr    DWORD PTR [ebp+0x122916ee],0xee
  404d2d:	ds call 0x80ec750e
  404d33:	shl    DWORD PTR [ebx+ebp*1],1
  404d36:	scas   eax,DWORD PTR es:[edi]
  404d37:	push   ebp
  404d38:	imul   esp,DWORD PTR [edi],0x5d85fa82
  404d3e:	xor    dl,cl
  404d40:	fld    TBYTE PTR [eax]
  404d42:	mov    WORD PTR [ebx],?
  404d44:	pop    ecx
  404d45:	inc    esi
  404d46:	inc    esp
  404d47:	call   0x5c7b:0xe56aba7a
  404d4e:	dec    ebp
  404d4f:	push   es
  404d50:	mov    gs,WORD PTR [eax-0x46]
  404d53:	sbb    al,0xc8
  404d55:	inc    esi
  404d56:	ja     0x404d56
  404d58:	jl     0x404d81
  404d5a:	dec    eax
  404d5b:	and    bh,BYTE PTR [ebp-0x31416a13]
  404d61:	popa   
  404d62:	ins    DWORD PTR es:[edi],dx
  404d63:	mov    DWORD PTR [ecx-0x3988042],esi
  404d69:	rol    BYTE PTR [eax+0x4],1
  404d6c:	adc    eax,0x10f9db8
  404d71:	add    BYTE PTR [esi+0x78a4b170],cl
  404d77:	xchg   ecx,eax
  404d78:	scas   eax,DWORD PTR es:[edi]
  404d79:	ins    BYTE PTR es:[edi],dx
  404d7a:	and    al,0xfa
  404d7c:	sbb    al,0x5c
  404d7e:	fwait
  404d7f:	sub    dh,BYTE PTR [edi+ecx*4+0x1eb120ba]
  404d86:	popf   
  404d87:	pop    es
  404d88:	mov    dl,BYTE PTR [edx-0x2d]
  404d8b:	inc    edx
  404d8c:	aaa    
  404d8d:	cmp    eax,0x54096895
  404d92:	inc    edx
  404d93:	ja     0x404e0d
  404d95:	inc    ebp
  404d96:	je     0x404d9f
  404d98:	mov    fs,WORD PTR [eax-0xb454c0b]
  404d9e:	popa   
  404d9f:	cmp    al,0xbe
  404da1:	jp     0x404d5e
  404da3:	pusha  
  404da4:	lods   eax,DWORD PTR ds:[esi]
  404da5:	push   ebx
  404da6:	mov    bl,0x38
  404da8:	neg    DWORD PTR [esi+eax*4]
  404dab:	push   edi
  404dac:	mov    al,0x5
  404dae:	je     0x404d5e
  404db0:	js     0x404dae
  404db2:	fcom   DWORD PTR [ecx]
  404db4:	xor    edx,DWORD PTR [edx+0x660ca3b5]
  404dba:	scas   eax,DWORD PTR es:[edi]
  404dbb:	inc    esp
  404dbc:	add    al,ah
  404dbe:	jl     0x404d49
  404dc0:	sbb    al,0xa9
  404dc2:	mov    dl,cl
  404dc4:	lds    edx,FWORD PTR [edi-0x508c0300]
  404dca:	daa    
  404dcb:	xor    edi,ebx
  404dcd:	test   BYTE PTR [eax],al
  404dcf:	and    eax,0x883cd0f6
  404dd4:	mov    edx,0x98264ce1
  404dd9:	jge    0x404e28
  404ddb:	jo     0x404e12
  404ddd:	mov    edx,ebx
  404ddf:	scas   eax,DWORD PTR es:[edi]
  404de0:	hlt    
  404de1:	cmp    BYTE PTR [edx],bh
  404de3:	xor    DWORD PTR [edi+0x4f],ecx
  404de6:	dec    ebp
  404de7:	hlt    
  404de8:	xchg   esi,eax
  404de9:	sbb    esp,DWORD PTR [esi+0x2b535dc9]
  404def:	int3   
  404df0:	es push 0x21
  404df3:	loope  0x404dec
  404df5:	call   0x9c68ec05
  404dfa:	dec    ebx
  404dfb:	mov    ecx,0x5bb5afac
  404e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e01:	es xchg ecx,eax
  404e03:	push   ds
  404e04:	shl    DWORD PTR [eax-0x2bd40b89],0xed
  404e0b:	or     al,0xab
  404e0d:	and    edi,ebp
  404e0f:	data16 js 0x404de1
  404e12:	pop    esp
  404e13:	push   esi
  404e14:	add    dl,BYTE PTR [esi]
  404e16:	nop
  404e17:	scas   al,BYTE PTR es:[edi]
  404e18:	pop    ebx
  404e19:	jecxz  0x404e82
  404e1b:	call   0x4ccf:0xab07e9b2
  404e22:	call   0xc24d7633
  404e27:	push   0xb14c8994
  404e2c:	cmp    esp,esp
  404e2e:	call   FWORD PTR ds:0x28284ee5
  404e34:	fistp  QWORD PTR [edi+0x3eaa7599]
  404e3a:	cdq    
  404e3b:	push   edi
  404e3c:	loop   0x404eb3
  404e3e:	add    ebx,ecx
  404e40:	outs   dx,DWORD PTR ds:[esi]
  404e41:	push   ebx
  404e42:	add    eax,0xc52c02a8
  404e47:	push   es
  404e48:	push   ebp
  404e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e4a:	or     esp,esi
  404e4c:	inc    esi
  404e4d:	dec    ecx
  404e4e:	add    dl,bh
  404e50:	mov    BYTE PTR [edx+0x627e1cd8],ch
  404e56:	cwde   
  404e57:	jmp    0x5799:0x6441d914
  404e5e:	add    eax,0xb0a74a3
  404e63:	sahf   
  404e64:	test   DWORD PTR [esi-0x19],0xcf2c250d
  404e6b:	outs   dx,DWORD PTR ds:[esi]
  404e6c:	and    ebx,DWORD PTR [edi-0x13]
  404e6f:	mov    esi,0x216b4895
  404e74:	faddp  st(3),st
  404e76:	fsubr  DWORD PTR [esi+0x4e2acf5c]
  404e7c:	(bad)  
  404e7d:	pop    ebp
  404e7e:	cld    
  404e7f:	pop    esi
  404e80:	psubsb mm1,QWORD PTR [edi-0x23]
  404e84:	imul   ebx,DWORD PTR [eax+0x7e],0xffffffcc
  404e88:	mov    ds:0x8c8bfb75,eax
  404e8d:	inc    esi
  404e8e:	push   0x3ba46588
  404e93:	mov    dh,0x15
  404e95:	(bad)  
  404e96:	jae    0x404e9f
  404e98:	or     al,0x9a
  404e9a:	test   al,0xa7
  404e9c:	fs push esp
  404e9e:	sub    BYTE PTR [esi+eax*2+0x5],0xe3
  404ea3:	ss idiv BYTE PTR fs:[eax]
  404ea7:	push   edi
  404ea9:	into   
  404eaa:	inc    ecx
  404eab:	adc    DWORD PTR [ebx],0x56
  404eae:	retf   
  404eaf:	sub    eax,0x12a9fb3c
  404eb4:	pop    ebx
  404eb5:	pop    ds
  404eb6:	addr16 aam 0x4c
  404eb9:	pop    edx
  404eba:	push   eax
  404ebb:	mov    edx,0x6c96f993
  404ec0:	outs   dx,DWORD PTR ds:[esi]
  404ec1:	out    dx,al
  404ec2:	ret    
  404ec3:	fld    QWORD PTR [ebx]
  404ec5:	call   0x612e:0xd349f1ab
  404ecc:	aas    
  404ecd:	lds    ecx,FWORD PTR [edx+0x43]
  404ed0:	cs inc eax
  404ed2:	pop    es
  404ed3:	sbb    DWORD PTR [esi+edx*4-0x242b526b],esi
  404eda:	xor    DWORD PTR [ebp-0x2c],edi
  404edd:	imul   DWORD PTR [edi]
  404edf:	out    0x2e,al
  404ee1:	sbb    DWORD PTR [ebx+edx*4+0x70],eax
  404ee5:	in     al,0xce
  404ee7:	pop    ds
  404ee8:	or     eax,DWORD PTR [ebp-0x7a]
  404eeb:	test   eax,0xe62f9c71
  404ef0:	sar    BYTE PTR [esi-0x65],0x64
  404ef4:	add    al,BYTE PTR [ebx+0x6a]
  404ef7:	inc    ecx
  404ef8:	adc    al,0xe2
  404efa:	test   al,0xac
  404efc:	(bad)  
  404efd:	stos   DWORD PTR es:[edi],eax
  404efe:	outs   dx,BYTE PTR ds:[esi]
  404eff:	inc    ebx
  404f00:	pminub mm1,QWORD PTR [eax-0x9]
  404f04:	js     0x404f5e
  404f06:	neg    ah
  404f08:	cmp    bl,BYTE PTR [ecx]
  404f0a:	jmp    0x50622c70
  404f0f:	xchg   ebx,eax
  404f10:	add    BYTE PTR [ebx-0x25],al
  404f13:	and    dh,dl
  404f15:	xor    BYTE PTR [esi],bh
  404f17:	fdiv   DWORD PTR [ebx+ecx*1+0x764d802f]
  404f1e:	shl    BYTE PTR [edi],0xef
  404f21:	cmp    al,0xb9
  404f23:	mov    ebp,0xcff16718
  404f28:	loop   0x404fa3
  404f2a:	jmp    0x2fdb9279
  404f2f:	inc    eax
  404f30:	(bad)  
  404f31:	cmp    DWORD PTR [edx-0x30],edi
  404f34:	mov    ecx,cs
  404f36:	fcmovnu st,st(0)
  404f38:	dec    ebx
  404f39:	dec    esi
  404f3a:	lods   eax,DWORD PTR ds:[esi]
  404f3b:	out    dx,eax
  404f3c:	js     0x404fb1
  404f3e:	sub    al,0x73
  404f40:	clc    
  404f41:	in     al,0x84
  404f43:	mov    dh,0x5a
  404f45:	aas    
  404f46:	arpl   di,di
  404f48:	pop    esp
  404f49:	pop    ebp
  404f4a:	xchg   esi,eax
  404f4b:	mov    al,0x55
  404f4d:	mov    dh,0x36
  404f4f:	sub    ah,BYTE PTR [ebx+edi*2]
  404f52:	mov    ds:0x735fa970,eax
  404f57:	leave  
  404f58:	fisttp DWORD PTR [edi-0x798f3069]
  404f5e:	fld    QWORD PTR [edi-0x6b]
  404f61:	or     eax,DWORD PTR ds:0x64806e60
  404f67:	mov    es,WORD PTR [ebp-0x4a]
  404f6a:	xchg   ebx,eax
  404f6b:	add    ah,BYTE PTR [edi]
  404f6d:	cmc    
  404f6e:	jnp    0x404fd5
  404f70:	int    0xb9
  404f72:	cmp    BYTE PTR [ecx-0x12910e7e],bh
  404f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f79:	push   edi
  404f7a:	xor    BYTE PTR [ebx],bl
  404f7c:	and    DWORD PTR [ecx],eax
  404f7e:	push   ebx
  404f7f:	js     0x404f9b
  404f81:	add    esp,ecx
  404f83:	sub    eax,0xb67fe2f
  404f88:	adc    DWORD PTR [eax-0x6a486011],edi
  404f8e:	jl     0x404f9a
  404f90:	adc    dl,BYTE PTR [eax-0x3c]
  404f93:	jb     0x404ffa
  404f95:	mov    ch,0x26
  404f97:	cwde   
  404f98:	repz inc esi
  404f9a:	arpl   WORD PTR [ebx],cx
  404f9c:	mov    ds:0x93909ea1,eax
  404fa1:	sbb    BYTE PTR [ebx+edx*4+0x515367ba],bl
  404fa8:	adc    ch,bl
  404faa:	mov    BYTE PTR [edi+0x70],al
  404fad:	xchg   BYTE PTR [edx-0x1d],ch
  404fb0:	add    bh,BYTE PTR [ecx+esi*8]
  404fb3:	mov    BYTE PTR [eax-0xed39273],ch
  404fb9:	mov    ebx,0xb1fcb5e2
  404fbe:	mov    dh,0x32
  404fc0:	sbb    al,cl
  404fc2:	shl    ecx,1
  404fc4:	cwde   
  404fc5:	pop    es
  404fc6:	inc    esi
  404fc7:	in     eax,0x77
  404fc9:	push   eax
  404fca:	stc    
  404fcb:	and    ebx,ebp
  404fcd:	inc    edx
  404fce:	int3   
  404fcf:	or     al,0x92
  404fd1:	popf   
  404fd2:	add    bl,cl
  404fd4:	nop
  404fd5:	je     0x404fa8
  404fd7:	and    ebx,DWORD PTR [ebx]
  404fd9:	ja     0x404f5b
  404fdb:	cli    
  404fdc:	(bad)  
  404fdd:	sub    dl,BYTE PTR [ebx+0x10]
  404fe0:	std    
  404fe1:	in     al,dx
  404fe2:	push   edi
  404fe3:	or     al,0x4c
  404fe5:	je     0x404fc2
  404fe7:	inc    ebp
  404fe8:	icebp  
  404fe9:	mov    BYTE PTR [ecx+0x43],cl
  404fec:	ins    BYTE PTR es:[edi],dx
  404fed:	das    
  404fee:	arpl   WORD PTR [esi],bp
  404ff0:	jp     0x404f9e
  404ff2:	out    dx,al
  404ff3:	jmp    0xb81ee81c
  404ff8:	mov    dl,0x15
  404ffa:	jno    0x404ff8
  404ffc:	lods   eax,DWORD PTR ds:[esi]
  404ffd:	(bad)  
  404ffe:	xor    DWORD PTR [eax+eax*8],esp
  405001:	xor    BYTE PTR [ecx+eiz*1+0xd1398dd],ah
  405008:	test   DWORD PTR ds:0xb485a544,ebx
  40500e:	lahf   
  40500f:	mov    eax,ds:0x16bce18a
  405014:	or     eax,ebx
  405016:	jno    0x404fea
  405018:	jne    0x405084
  40501a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40501b:	(bad)  
  40501c:	jecxz  0x404fe9
  40501e:	cwde   
  40501f:	jns    0x404fcf
  405021:	cmp    eax,0xbf613f8c
  405026:	pop    es
  405027:	push   esp
  405028:	iret   
  405029:	(bad)  
  40502a:	cld    
  40502b:	xor    al,0x4e
  40502d:	int3   
  40502e:	(bad)  
  40502f:	pop    ds
  405030:	fsub   st,st(0)
  405032:	mov    bl,BYTE PTR [edx-0x59]
  405035:	jp     0x4050ac
  405037:	push   ds
  405038:	adc    al,0xbd
  40503a:	pop    ecx
  40503b:	lock dec edx
  40503d:	iret   
  40503e:	ins    BYTE PTR es:[edi],dx
  40503f:	jae    0x405010
  405041:	sbb    al,0xf2
  405043:	adc    edi,DWORD PTR [ecx]
  405045:	dec    edi
  405046:	idiv   DWORD PTR [ebx+0x1e]
  405049:	sub    DWORD PTR [eax],edi
  40504b:	jo     0x40509c
  40504d:	push   ecx
  40504e:	push   ebx
  40504f:	in     eax,dx
  405050:	mov    esi,0x6ea7e372
  405055:	or     bh,cl
  405057:	jns    0x4050a3
  405059:	push   ebp
  40505a:	repnz sar DWORD PTR [ebx+0x587b57d0],1
  405061:	jecxz  0x405030
  405063:	add    dh,BYTE PTR [eax-0x1d]
  405066:	adc    ch,BYTE PTR ds:0x4d48641a
  40506c:	inc    ebp
  40506d:	dec    ebx
  40506e:	xchg   esi,eax
  40506f:	jo     0x40502b
  405071:	rcl    ah,0x9a
  405074:	jo     0x4050ba
  405076:	je     0x40508e
  405078:	mov    bh,0x6e
  40507a:	test   DWORD PTR ds:0xbd24e389,ecx
  405080:	loope  0x40501d
  405082:	jle    0x40508e
  405084:	and    BYTE PTR [ebx],al
  405086:	in     al,dx
  405087:	add    bh,al
  405089:	pop    DWORD PTR [ecx+0x7da36e11]
  40508f:	sub    BYTE PTR [ebx],cl
  405091:	jno    0x4050d3
  405093:	(bad)  
  405096:	adc    cl,BYTE PTR [edi-0x2184fcbe]
  40509c:	ins    DWORD PTR es:[edi],dx
  40509d:	sahf   
  40509e:	pop    edi
  40509f:	sti    
  4050a0:	sahf   
  4050a1:	pusha  
  4050a2:	in     eax,dx
  4050a3:	cmp    BYTE PTR [edi+0x38],cl
  4050a6:	add    ebp,DWORD PTR [ecx-0x59d0eb5e]
  4050ac:	jp     0x405120
  4050ae:	ins    DWORD PTR es:[edi],dx
  4050af:	sbb    ah,BYTE PTR [edi]
  4050b1:	cmp    esi,edx
  4050b3:	inc    esi
  4050b4:	fdiv   QWORD PTR [edi-0x6]
  4050b7:	cmp    bl,dl
  4050b9:	jge    0x4050f6
  4050bb:	cmp    al,0xd
  4050bd:	stos   DWORD PTR es:[edi],eax
  4050be:	sahf   
  4050bf:	push   0x50
  4050c1:	sbb    BYTE PTR [edi],ah
  4050c3:	das    
  4050c4:	pop    edi
  4050c5:	lea    ebp,[ebp+0x3]
  4050c8:	xchg   esp,eax
  4050c9:	jl     0x4050d6
  4050cb:	cmp    ebp,DWORD PTR [edx]
  4050cd:	ja     0x405138
  4050cf:	mov    ah,0xe3
  4050d1:	sbb    esp,esp
  4050d3:	mov    ah,0xf1
  4050d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050d6:	inc    ebp
  4050d7:	fwait
  4050d8:	pop    ebp
  4050d9:	(bad)  
  4050da:	out    dx,al
  4050db:	rol    BYTE PTR [ecx],1
  4050dd:	pushf  
  4050de:	inc    edi
  4050df:	mov    ebp,0x46ac75a1
  4050e4:	mov    ds,WORD PTR [esi-0x779c32f]
  4050ea:	xchg   BYTE PTR [esi+0x28ba28db],dh
  4050f0:	scas   eax,DWORD PTR es:[edi]
  4050f1:	out    dx,eax
  4050f2:	test   al,0x56
  4050f4:	sbb    edx,DWORD PTR [esi+0x411e9bd6]
  4050fa:	(bad)  
  4050fb:	pop    ss
  4050fc:	test   DWORD PTR [ebx],edx
  4050fe:	jge    0x405139
  405100:	or     al,0x11
  405102:	adc    BYTE PTR [ecx],ah
  405104:	(bad)  
  405105:	fld    DWORD PTR [esi]
  405107:	inc    eax
  405108:	jg     0x4050a4
  40510a:	push   ecx
  40510b:	jecxz  0x405171
  40510d:	test   eax,0x24837fb1
  405112:	mov    dh,0x1f
  405114:	call   0xfb40:0x1d095e5e
  40511b:	dec    esp
  40511c:	and    BYTE PTR ss:[ebx-0x1d],bl
  405120:	loopne 0x4050c1
  405122:	fistp  QWORD PTR [ecx+0x62637d1f]
  405128:	dec    ebx
  405129:	jbe    0x405145
  40512b:	iret   
  40512c:	inc    edi
  40512d:	xchg   edx,eax
  40512e:	mov    ebp,0x60e6fdd8
  405133:	aaa    
  405134:	arpl   WORD PTR [ebp+0x7c0f8272],sp
  40513a:	push   0x24
  40513c:	inc    edi
  40513d:	dec    ecx
  40513e:	mov    dl,0xa2
  405140:	jo     0x40512e
  405142:	add    cl,0x55
  405145:	fldenv [ebx-0x62cc7a4]
  40514b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40514d:	xor    ebx,DWORD PTR [ebx]
  40514f:	mov    ds:0x5fd6d05c,eax
  405154:	jb     0x4051b3
  405156:	fsub   QWORD PTR [ecx+0x61]
  405159:	jno    0x40510e
  40515b:	push   0x4ea8c300
  405160:	leave  
  405161:	out    0xb9,al
  405163:	test   DWORD PTR [esi+0x35],0xbe0fccf2
  40516a:	in     al,0x98
  40516c:	push   edx
  40516d:	jnp    0x4051bd
  40516f:	jo     0x40511d
  405171:	shl    ebp,1
  405173:	pop    ebx
  405174:	stos   DWORD PTR es:[edi],eax
  405175:	xor    esp,DWORD PTR [edx]
  405177:	mov    ch,0xf7
  405179:	inc    ecx
  40517a:	cmovle ebp,DWORD PTR [edx+0x5aa7b43d]
  405181:	je     0x405129
  405183:	sbb    al,0xcb
  405185:	push   eax
  405186:	test   DWORD PTR [eax],ebx
  405188:	cli    
  405189:	retf   0x1f08
  40518c:	jnp    0x40517f
  40518e:	pusha  
  40518f:	or     eax,0x49818288
  405194:	sbb    al,0x7b
  405196:	dec    esi
  405197:	aaa    
  405198:	jmp    FWORD PTR [ebp-0x1d18c62f]
  40519e:	retf   
  40519f:	inc    ebp
  4051a0:	push   esi
  4051a1:	sar    DWORD PTR [ebp+0x1],0x78
  4051a5:	in     eax,dx
  4051a6:	add    ecx,DWORD PTR [ecx+0x695d488f]
  4051ac:	vunpcklps xmm0,xmm3,XMMWORD PTR [ecx+eiz*2-0xc5b82c2]
  4051b5:	loope  0x4051dd
  4051b7:	xchg   edx,eax
  4051b8:	sahf   
  4051b9:	iret   
  4051ba:	mov    dh,BYTE PTR gs:[esi+0x6ec62727]
  4051c1:	fdiv   DWORD PTR ds:0xdba52040
  4051c7:	cmc    
  4051c8:	lahf   
  4051c9:	shl    DWORD PTR [ebp-0x5dddd289],cl
  4051cf:	imul   esp,DWORD PTR [esi+eax*4+0x63],0x1b
  4051d4:	shl    BYTE PTR [ebp+0x3a],0xce
  4051d8:	adc    BYTE PTR [eax],bl
  4051da:	pusha  
  4051db:	mov    esi,0xfd83fc87
  4051e0:	shl    DWORD PTR [eax+0xa90bf58],0x9b
  4051e7:	push   es
  4051e8:	cdq    
  4051e9:	jge    0x4051fa
  4051eb:	add    al,0x62
  4051ed:	and    eax,0x6e8691a5
  4051f2:	mov    ebp,0xfc6b05df
  4051f7:	dec    esi
  4051f8:	push   ss
  4051f9:	fwait
  4051fa:	shr    BYTE PTR [ecx],0x22
  4051fd:	(bad)  
  4051ff:	mov    bl,0x46
  405201:	jl     0x405192
  405203:	int3   
  405204:	ror    DWORD PTR [ebx-0x52],cl
  405207:	mov    ah,0x35
  405209:	loopne 0x4051a1
  40520b:	jmp    0xcb70:0x26f0cba0
  405212:	dec    eax
  405213:	leave  
  405214:	pop    edi
  405215:	jecxz  0x405272
  405217:	ret    
  405218:	mov    al,0xf
  40521a:	out    0xa,al
  40521c:	push   0x2f50034b
  405221:	scas   eax,DWORD PTR es:[edi]
  405222:	and    BYTE PTR [esi+0x7f],cl
  405225:	adc    dl,BYTE PTR [ecx-0x30]
  405228:	inc    ecx
  405229:	sbb    bh,bh
  40522b:	js     0x405257
  40522d:	nop
  40522e:	pop    ds
  40522f:	add    cl,BYTE PTR [ebx+0x6fe596db]
  405235:	test   eax,0x8963f469
  40523a:	xor    BYTE PTR [eax],al
  40523c:	retf   
  40523d:	out    0x32,al
  40523f:	inc    esi
  405240:	and    edi,DWORD PTR ds:0xacc4b472
  405246:	and    ebx,ebx
  405248:	out    dx,al
  405249:	inc    esi
  40524a:	mov    ds,WORD PTR [ebp+0x66659097]
  405250:	push   ebp
  405251:	stos   BYTE PTR es:[edi],al
  405252:	(bad)  [edx+esi*8-0x50]
  405256:	sbb    dh,BYTE PTR [edi+edx*1-0x4c]
  40525a:	aas    
  40525b:	push   ebp
  40525c:	adc    cl,bl
  40525e:	push   eax
  40525f:	mov    DWORD PTR [eax],0x8789fd4f
  405265:	push   ss
  405266:	scas   eax,DWORD PTR es:[edi]
  405267:	xchg   ecx,eax
  405268:	fwait
  405269:	pop    es
  40526a:	dec    edx
  40526b:	mov    al,0x74
  40526d:	add    BYTE PTR [ecx-0x15],ah
  405270:	mov    ah,0x1f
  405272:	mov    ebp,DWORD PTR [esi-0x605e6c41]
  405278:	lods   al,BYTE PTR ds:[esi]
  405279:	jecxz  0x405235
  40527b:	mov    ah,0xd2
  40527d:	fist   DWORD PTR ds:0x25898558
  405283:	test   al,0xe6
  405285:	lods   al,BYTE PTR ds:[esi]
  405286:	or     eax,ecx
  405288:	ins    BYTE PTR es:[edi],dx
  405289:	mov    ch,0x65
  40528b:	(bad)  
  40528c:	push   0xcdec18c0
  405291:	jmp    0xd995:0x6dd5b396
  405298:	add    eax,0xf87b385
  40529d:	test   BYTE PTR [ebx+0x751466d3],al
  4052a3:	add    edi,DWORD PTR ds:0x19438be8
  4052a9:	(bad)  
  4052aa:	jnp    0x405301
  4052ac:	bound  edi,QWORD PTR [esi-0x373d37e1]
  4052b2:	adc    cl,BYTE PTR [edx-0x7091a030]
  4052b8:	cmp    ebp,esp
  4052ba:	imul   ecx,DWORD PTR [esi+0x3bf0fdd4],0x12
  4052c1:	cmovb  edi,DWORD PTR [esi]
  4052c4:	jecxz  0x4052f8
  4052c6:	cwde   
  4052c7:	sub    BYTE PTR [eax-0x9],al
  4052ca:	inc    BYTE PTR fs:[edi-0x52]
  4052ce:	add    DWORD PTR [esi-0x2922175e],ecx
  4052d4:	mov    ecx,0xe677f8be
  4052da:	mov    ebx,0xebf5216f
  4052df:	shl    DWORD PTR ds:0x780a3f0e,cl
  4052e5:	test   eax,0x7d5abbe8
  4052ea:	pop    ebx
  4052eb:	jmp    ebx
  4052ed:	push   esi
  4052ee:	sbb    BYTE PTR [ecx],dh
  4052f0:	imul   edx,DWORD PTR [edx-0x35],0x31
  4052f4:	out    dx,eax
  4052f5:	jecxz  0x4052d4
  4052f7:	stos   DWORD PTR es:[edi],eax
  4052f8:	mov    dl,BYTE PTR ds:0x4c0fd84e
  4052fe:	cmp    BYTE PTR [ebx-0x47e7aee8],cl
  405304:	xchg   DWORD PTR [esi],ebp
  405306:	lea    edi,[ebp-0x661c0729]
  40530c:	adc    dl,dh
  40530e:	stc    
  40530f:	(bad)  [ebp+0x6e]
  405312:	push   0x25ef5be7
  405317:	sbb    ch,dh
  405319:	sub    eax,DWORD PTR [eax-0x63011964]
  40531f:	sub    DWORD PTR [ecx-0xfe675dd],ebx
  405325:	in     al,dx
  405326:	into   
  405327:	outs   dx,DWORD PTR ds:[esi]
  405328:	sbb    eax,0x75cadb1
  40532d:	lods   eax,DWORD PTR ds:[esi]
  40532e:	icebp  
  40532f:	fs repnz (bad) 
  405332:	push   0xf575b9b9
  405337:	inc    esp
  405338:	mov    al,0x93
  40533a:	inc    edi
  40533b:	inc    esi
  40533c:	push   0xca6938c8
  405341:	inc    ebx
  405342:	adc    DWORD PTR [ecx+esi*4],edi
  405345:	xor    bl,BYTE PTR [edi]
  405347:	rep ins DWORD PTR es:[edi],dx
  405349:	ja     0x4053af
  40534b:	pop    esp
  40534c:	lods   eax,DWORD PTR ds:[esi]
  40534d:	dec    edi
  40534e:	outs   dx,BYTE PTR fs:[esi]
  405350:	xor    dh,BYTE PTR [ebp+0x49ba5a30]
  405356:	rcr    edx,1
  405358:	jmp    0xbfeeefe6
  40535d:	mov    esi,0xfd234272
  405362:	fs loopne 0x40532d
  405365:	jecxz  0x4053e5
  405367:	mov    esi,0x934d87d
  40536c:	ds ins BYTE PTR es:[edi],dx
  40536e:	mov    ebx,0xf404d934
  405373:	sbb    eax,DWORD PTR [edx]
  405375:	ret    
  405376:	push   ebp
  405377:	lods   al,BYTE PTR ds:[esi]
  405378:	dec    esi
  405379:	int    0x1e
  40537b:	sub    DWORD PTR [ebx+0x43589236],eax
  405381:	dec    eax
  405382:	sbb    cl,BYTE PTR [edi+eiz*2-0x3472dbc1]
  405389:	pop    eax
  40538a:	pop    esi
  40538b:	call   0x67dc:0x10700859
  405392:	jecxz  0x405396
  405394:	shr    edi,0x77
  405397:	fwait
  405398:	and    BYTE PTR [ebx+0x21ad7f94],bh
  40539e:	mov    dl,0xdc
  4053a0:	or     eax,0xe9a6bd04
  4053a5:	mov    al,0x2d
  4053a7:	xchg   esp,eax
  4053a8:	xchg   DWORD PTR [esp+eiz*4-0x39],ebx
  4053ac:	mov    dh,cl
  4053ae:	mov    WORD PTR [esi+0x5c],ds
  4053b1:	and    bl,BYTE PTR [ecx-0x15]
  4053b4:	das    
  4053b5:	jnp    0x4053cf
  4053b7:	data16 into 
  4053b9:	mov    bh,BYTE PTR gs:[edi-0x46]
  4053bd:	and    DWORD PTR [eax+0x28e42d2c],ecx
  4053c3:	jmp    0xdf9ea8ab
  4053c8:	fwait
  4053c9:	test   DWORD PTR [eax+0x68894bc5],esi
  4053cf:	mov    es,WORD PTR [ecx]
  4053d1:	inc    ebp
  4053d2:	push   edi
  4053d3:	test   edx,0xc966cba3
  4053d9:	int3   
  4053da:	push   0xfffffff7
  4053dc:	xchg   edi,eax
  4053dd:	push   esp
  4053de:	int    0x15
  4053e0:	cmp    esp,DWORD PTR [edx+0x72]
  4053e3:	xor    BYTE PTR [ebp+esi*4+0x7c9d630e],0x22
  4053eb:	(bad)  
  4053ec:	sub    ebp,DWORD PTR es:0xcfd843f2
  4053f3:	jmp    0xbc2d:0xb91f1deb
  4053fa:	popf   
  4053fb:	sub    ebp,DWORD PTR [edx+edi*4+0x55bf25d]
  405402:	adc    al,bh
  405404:	mov    ecx,0xb83d75bc
  405409:	repz cmp DWORD PTR [ecx],ebx
  40540c:	xchg   esp,eax
  40540d:	into   
  40540e:	mov    ss,WORD PTR [edx+0x34506639]
  405414:	jge    0x405468
  405416:	cmp    al,0xf3
  405418:	in     eax,0x5a
  40541a:	pop    ss
  40541b:	add    esp,DWORD PTR [ebx+ecx*1-0x7bac1c9b]
  405422:	jbe    0x40540a
  405424:	retf   
  405425:	ret    
  405426:	push   edx
  405427:	aam    0x28
  405429:	outs   dx,BYTE PTR ds:[esi]
  40542a:	daa    
  40542b:	dec    ecx
  40542c:	inc    edi
  40542d:	cmp    dx,WORD PTR [ecx+edx*8+0x139a1f8e]
  405435:	mov    eax,0x837548c1
  40543a:	(bad)  
  40543b:	sti    
  40543c:	ss loope 0x4054ba
  40543f:	jb     0x4053f3
  405441:	mov    ds:0x44a849d6,eax
  405446:	cmp    BYTE PTR [edi+0x16],bh
  405449:	rol    ebp,0x40
  40544c:	mov    WORD PTR [esi+0x26edbf76],es
  405452:	push   0x9f3cc7f2
  405457:	imul   ecx,DWORD PTR [esi+0x1be70a95],0x74841ac6
  405461:	xchg   ecx,eax
  405462:	and    BYTE PTR [ebp-0x745b5765],0x90
  405469:	sub    edi,DWORD PTR [ebp-0x31f66edb]
  40546f:	xchg   ebp,eax
  405470:	and    DWORD PTR [edi],esp
  405472:	fdivr  DWORD PTR [eax]
  405474:	xor    ebx,DWORD PTR [edx-0x6325866a]
  40547a:	xrelease xchg DWORD PTR [ebp+0xaad8765],edx
  405481:	ins    BYTE PTR es:[edi],dx
  405482:	out    dx,al
  405483:	shl    ch,cl
  405485:	and    edx,DWORD PTR [edi]
  405487:	push   ecx
  405488:	xchg   ebx,eax
  405489:	add    bh,0x16
  40548c:	lods   al,BYTE PTR ds:[esi]
  40548d:	aaa    
  40548e:	push   ecx
  40548f:	xor    al,0xf4
  405491:	add    eax,0x46d2fe05
  405496:	pusha  
  405497:	mov    DWORD PTR [ebp+0xa],ebp
  40549a:	shr    DWORD PTR [edi],cl
  40549c:	ja     0x4054e1
  40549e:	mov    eax,ds:0xfd5e0753
  4054a3:	pushf  
  4054a4:	sbb    eax,0xaf6afd68
  4054a9:	push   edx
  4054aa:	mov    WORD PTR [ebx],ds
  4054ac:	sbb    ebx,eax
  4054ae:	pop    es
  4054af:	rcl    dl,cl
  4054b1:	xor    DWORD PTR [eax],eax
  4054b3:	jbe    0x40549a
  4054b5:	dec    edx
  4054b6:	push   esi
  4054b7:	test   al,0x13
  4054b9:	test   BYTE PTR [edx-0x7f],bh
  4054bc:	xchg   esp,eax
  4054bd:	xlat   BYTE PTR ds:[ebx]
  4054be:	sar    dh,1
  4054c0:	add    BYTE PTR [ecx+0x1f71ffeb],ch
  4054c6:	sbb    al,0xab
  4054c8:	fadd   QWORD PTR [edi-0x7374e465]
  4054ce:	mov    edi,0xe9a877b7
  4054d3:	out    dx,eax
  4054d4:	int    0x9
  4054d6:	and    eax,0xe2e37353
  4054db:	ffreep st(5)
  4054dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054de:	call   0x5ff0e5d5
  4054e3:	sub    edx,DWORD PTR [ecx-0x1a]
  4054e6:	fcomp  DWORD PTR [ebx+0x965cc50]
  4054ec:	sbb    eax,0x2aeb09dd
  4054f1:	loope  0x405565
  4054f3:	push   eax
  4054f4:	sbb    BYTE PTR [ecx+0xbe90263],ah
  4054fa:	sahf   
  4054fb:	arpl   cx,ax
  4054fd:	cmp    eax,0x2186a593
  405502:	jp     0x4054c4
  405504:	stos   BYTE PTR es:[edi],al
  405505:	sub    esi,ecx
  405507:	mov    ch,BYTE PTR [eax]
  405509:	xor    al,dh
  40550b:	stc    
  40550c:	dec    esi
  40550d:	jb     0x4054f0
  40550f:	dec    esi
  405510:	lods   al,BYTE PTR ds:[esi]
  405511:	mov    db1,eax
  405514:	(bad)  
  405515:	sbb    eax,DWORD PTR [ebx+0x78]
  405518:	(bad)  
  405519:	ins    DWORD PTR es:[edi],dx
  40551a:	scas   al,BYTE PTR es:[edi]
  40551b:	test   al,0x1
  40551d:	mov    eax,0x400f5529
  405522:	out    dx,eax
  405523:	outs   dx,BYTE PTR ds:[esi]
  405524:	cmp    edi,esi
  405526:	pop    ecx
  405527:	dec    ebp
  405528:	mov    ds:0x3c7e3f94,eax
  40552d:	pop    ecx
  40552e:	cli    
  40552f:	sar    BYTE PTR [edx],1
  405531:	mov    cl,0x6d
  405533:	nop
  405534:	xchg   BYTE PTR [ebx+0xce6eff7],dl
  40553a:	inc    ebp
  40553b:	inc    ecx
  40553c:	push   ds
  40553d:	fadd   QWORD PTR [edx]
  40553f:	pop    edi
  405540:	fstp   TBYTE PTR [ecx]
  405542:	jle    0x40554c
  405544:	ror    al,1
  405546:	adc    eax,0xc54d20fc
  40554b:	jle    0x4054fb
  40554d:	addr16 jb 0x40553b
  405550:	push   edx
  405551:	or     ebp,ebx
  405553:	int3   
  405554:	cs jo  0x405505
  405557:	adc    al,BYTE PTR ds:0xcc5c9664
  40555d:	hlt    
  40555e:	(bad)  
  40555f:	std    
  405560:	push   cs
  405561:	xchg   edx,eax
  405562:	retfw  0xa31f
  405566:	retf   
  405567:	repnz in al,dx
  405569:	xchg   edx,eax
  40556a:	adc    dl,bh
  40556c:	ins    DWORD PTR es:[edi],dx
  40556d:	pushf  
  40556e:	fmul   DWORD PTR [eax+0x36]
  405571:	fisttp DWORD PTR [ecx]
  405573:	jbe    0x40550e
  405575:	das    
  405576:	add    BYTE PTR [ebx+ebp*8-0x42],dl
  40557a:	cmp    BYTE PTR [esi+0x4fdafc04],dl
  405580:	push   esp
  405581:	sub    edx,DWORD PTR [ecx+eiz*2-0x460f387]
  405588:	xchg   ebp,eax
  405589:	addr16 hlt 
  40558b:	cmc    
  40558c:	xor    dh,dh
  40558e:	ins    BYTE PTR es:[edi],dx
  40558f:	pop    ss
  405590:	out    0xde,al
  405592:	addr16 mov bh,0x20
  405595:	push   0x45
  405597:	or     al,0xda
  405599:	sti    
  40559a:	fsubr  DWORD PTR [edi]
  40559c:	scas   eax,DWORD PTR es:[edi]
  40559d:	xor    DWORD PTR [ebx-0x4313a858],ecx
  4055a3:	std    
  4055a4:	pusha  
  4055a5:	int3   
  4055a6:	xchg   ecx,eax
  4055a7:	cmp    eax,0x7b3a475b
  4055ac:	push   ds
  4055ad:	pop    esi
  4055ae:	pushf  
  4055af:	sub    cl,BYTE PTR [edx]
  4055b1:	ret    0xd4a9
  4055b4:	jns    0x40555a
  4055b6:	inc    DWORD PTR [ecx]
  4055b8:	cmp    DWORD PTR [ecx+0x4],esi
  4055bb:	daa    
  4055bc:	sbb    DWORD PTR [ebx+esi*2-0x1468488f],0x923649c3
  4055c7:	cmp    BYTE PTR [edi+0x2c931f50],0x30
  4055ce:	js     0x40559e
  4055d0:	dec    eax
  4055d1:	or     DWORD PTR [ebx-0x69],0xd0145968
  4055d8:	mov    esp,DWORD PTR [edx-0x536a9b6a]
  4055de:	daa    
  4055df:	jmp    0x6be0:0xd4888efc
  4055e6:	sbb    eax,0xc57bdff7
  4055eb:	adc    al,0x6d
  4055ed:	daa    
  4055ee:	jne    0x405571
  4055f0:	stc    
  4055f1:	jmp    0x4055f5
  4055f3:	(bad)  
  4055f4:	fimul  DWORD PTR [esi]
  4055f6:	sub    eax,0xcd11c2bb
  4055fb:	add    BYTE PTR [ebx-0x7f7e2208],bh
  405601:	lods   eax,DWORD PTR ds:[esi]
  405602:	adc    al,0x9c
  405604:	test   eax,0xb11c4424
  405609:	push   ebp
  40560a:	(bad)  
  40560b:	xchg   esi,eax
  40560c:	div    DWORD PTR [esi]
  40560e:	pusha  
  40560f:	jge    0x40561a
  405611:	(bad)  
  405612:	popa   
  405613:	mov    al,0x5e
  405615:	mov    eax,ds:0xcb036e2e
  40561a:	xchg   edx,eax
  40561b:	ret    0xe8dc
  40561e:	mov    ah,0xb4
  405620:	add    eax,0x78fe2b8c
  405625:	fnstcw WORD PTR [edi-0x5048de76]
  40562b:	jle    0x4055ad
  40562d:	mov    dh,0x11
  40562f:	jne    0x405669
  405631:	or     al,0x91
  405633:	test   DWORD PTR [edx],esi
  405635:	mov    esi,DWORD PTR [ebx-0x1b]
  405638:	fnstcw WORD PTR [ebp-0x76024be1]
  40563e:	mov    ah,0xac
  405640:	leave  
  405641:	push   0xc4dea38b
  405646:	lea    ebx,[ebp-0x5c6f666]
  40564c:	push   ds
  40564d:	fcom   DWORD PTR [ebx-0x32]
  405650:	cli    
  405651:	mov    esi,0xf9bd61bc
  405656:	or     BYTE PTR [eax],0x6d
  405659:	call   0xb87d:0x6d622300
  405660:	sbb    al,0xb2
  405662:	test   BYTE PTR [esi+0x0],dl
  405665:	or     ebp,edi
  405667:	xor    cl,BYTE PTR [esi+0x7e6e468]
  40566d:	std    
  40566e:	stc    
  40566f:	fiadd  WORD PTR [esp+edx*2]
  405672:	aas    
  405673:	(bad)  
  405674:	(bad)  
  405675:	cdq    
  405676:	pushf  
  405677:	xor    DWORD PTR [ebx],0xcdb274d2
  40567d:	inc    esi
  40567e:	pop    ebx
  40567f:	aam    0x79
  405681:	retf   0x52f9
  405684:	sub    DWORD PTR [esi+0x6a9d93a5],ebp
  40568a:	jae    0x40562b
  40568c:	dec    esi
  40568d:	adc    bl,BYTE PTR [edx-0x5d951cb3]
  405693:	or     DWORD PTR [ecx],esi
  405695:	mov    ds:0xec643a19,al
  40569a:	xchg   DWORD PTR ds:0xe4b33f0c,edi
  4056a0:	hlt    
  4056a1:	bound  eax,QWORD PTR [eax]
  4056a3:	loope  0x405671
  4056a5:	add    ah,BYTE PTR [ecx+ebp*1+0x636efe40]
  4056ac:	(bad)  
  4056ad:	cmp    eax,0x3c7340f6
  4056b2:	std    
  4056b3:	push   ebx
  4056b4:	cwde   
  4056b5:	mov    ds:0xb83b535a,al
  4056ba:	fs push cs
  4056bc:	dec    edx
  4056bd:	jno    0x405678
  4056bf:	lods   eax,DWORD PTR ds:[esi]
  4056c0:	mov    ecx,0xcc3b71a8
  4056c5:	ret    0x81a9
  4056c8:	or     ah,BYTE PTR [edi+0x1b]
  4056cb:	mov    ecx,0xafe32625
  4056d0:	aam    0xe4
  4056d2:	idiv   BYTE PTR [edi+0x18]
  4056d5:	sbb    ah,dl
  4056d7:	cmp    eax,0x9f71fc1e
  4056dc:	loopne 0x405723
  4056de:	std    
  4056df:	jbe    0x4056b8
  4056e1:	mov    al,ds:0x3b822d25
  4056e6:	ret    
  4056e7:	fisubr WORD PTR [ebp+0x7b]
  4056ea:	inc    ebx
  4056eb:	and    al,0x85
  4056ed:	outs   dx,BYTE PTR ds:[esi]
  4056ee:	and    edi,DWORD PTR [esi]
  4056f0:	(bad)  
  4056f1:	sbb    DWORD PTR [ebp-0x59f42ad5],ecx
  4056f7:	ret    
  4056f8:	in     eax,0x60
  4056fa:	xor    BYTE PTR [bp+si],0xf2
  4056fe:	stc    
  4056ff:	push   esp
  405700:	lea    ecx,[ecx+0x156bb3f6]
  405706:	ffreep st(0)
  405708:	xchg   esp,eax
  405709:	sbb    ch,dh
  40570b:	sbb    DWORD PTR [edx+0x6d],0xffffff80
  40570f:	and    eax,DWORD PTR [ecx]
  405711:	mov    ecx,0x855608d4
  405716:	mov    ds:0x7b6044f5,eax
  40571b:	mov    edx,0x90adf2c3
  405720:	xor    eax,0x33398f9a
  405725:	sub    al,0xe9
  405727:	pop    ss
  405728:	out    dx,eax
  405729:	fist   WORD PTR [esi]
  40572b:	add    esi,DWORD PTR [ebp+0x78aa70fa]
  405731:	push   esp
  405732:	xor    edx,0x71bfadc8
  405738:	inc    ebx
  405739:	xchg   ecx,eax
  40573a:	data16 or al,0x9e
  40573d:	xor    ebx,edx
  40573f:	(bad)  
  405740:	jle    0x4056f8
  405742:	fcom   QWORD PTR [ebx]
  405744:	adc    edi,esp
  405746:	repz clc 
  405748:	sar    bh,cl
  40574a:	adc    al,0xfb
  40574c:	dec    eax
  40574d:	cmp    edi,DWORD PTR [esi-0x5a]
  405750:	push   ss
  405751:	mov    al,ds:0x2c5d67b5
  405756:	mov    eax,0xa023ad55
  40575b:	xchg   ecx,eax
  40575c:	into   
  40575d:	push   edx
  40575e:	dec    edx
  40575f:	push   0x385e20e7
  405764:	pusha  
  405765:	fild   WORD PTR [ebx+0x6f]
  405768:	test   DWORD PTR [eax+ebx*2-0x3e107e81],ecx
  40576f:	mov    dl,BYTE PTR [ebx+0x5b]
  405772:	sub    edi,DWORD PTR [ebx+0x178e86a7]
  405778:	mov    eax,ds:0x86dee723
  40577d:	add    edi,DWORD PTR [esi]
  40577f:	push   esp
  405780:	mov    WORD PTR ds:0x360c7d21,ss
  405786:	cmp    ah,BYTE PTR [edx]
  405788:	mov    ebx,0x1cf1c09b
  40578d:	imul   esp,DWORD PTR [esi-0x6c],0xffffff8e
  405791:	jl     0x405755
  405793:	shl    ebx,cl
  405795:	adc    bh,BYTE PTR [ecx-0x3f7e729c]
  40579b:	mov    edx,0xb747d759
  4057a0:	call   0x8715:0x9e3414f3
  4057a7:	sti    
  4057a8:	sub    al,0x16
  4057aa:	add    ah,BYTE PTR [ebx+0x5bcfe947]
  4057b0:	aam    0xf6
  4057b2:	aad    0xab
  4057b4:	inc    esp
  4057b5:	sbb    al,0x31
  4057b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057b8:	sbb    eax,0x92554e8d
  4057bd:	dec    esp
  4057be:	push   eax
  4057bf:	mov    gs,WORD PTR [eax]
  4057c1:	clc    
  4057c2:	cmp    eax,DWORD PTR [edx+ebp*8]
  4057c5:	jnp    0x40583b
  4057c7:	xchg   esp,ebp
  4057c9:	into   
  4057ca:	pop    es
  4057cb:	xlat   BYTE PTR ds:[ebx]
  4057cc:	sub    al,0xe5
  4057ce:	or     al,0x4c
  4057d0:	daa    
  4057d1:	mov    ecx,0x71a0dfd8
  4057d6:	xor    eax,0x5ebf6ebc
  4057db:	lahf   
  4057dc:	call   0x3c11:0x2be4bcd7
  4057e3:	into   
  4057e4:	leave  
  4057e5:	mov    eax,0xa6c5bd1c
  4057ea:	push   es
  4057eb:	popa   
  4057ec:	rcl    DWORD PTR [ebx+eax*8-0x10d94575],cl
  4057f3:	retf   
  4057f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057f5:	jge    0x4057a2
  4057f7:	jns    0x4057ec
  4057f9:	mov    bl,0x65
  4057fb:	xchg   DWORD PTR [eax],esp
  4057fd:	xchg   ebp,eax
  4057fe:	test   DWORD PTR [edi+edi*4-0x6d],0x24f49b12
  405806:	push   cs
  405807:	mov    ds:0x63b42277,al
  40580d:	mov    ah,BYTE PTR [edi-0x59]
  405810:	cmp    al,0xa3
  405812:	(bad)  
  405814:	fist   WORD PTR [ecx-0x31beda27]
  40581a:	imul   ecx,DWORD PTR [esi-0x6188f896],0xcc352669
  405824:	push   edx
  405825:	push   cs
  405826:	mov    ds:0x208740b,al
  40582b:	fisub  DWORD PTR [edx-0x60dbda2f]
  405831:	out    dx,eax
  405832:	or     edi,esp
  405834:	popa   
  405835:	xor    DWORD PTR [esi],esi
  405837:	retf   
  405838:	dec    ebx
  405839:	retf   0x86b5
  40583c:	popf   
  40583d:	ins    BYTE PTR es:[edi],dx
  40583e:	add    edx,DWORD PTR [ecx+0x5c]
  405841:	cmp    al,0xd1
  405843:	adc    DWORD PTR [edx-0x4e095a6],edx
  405849:	mov    dl,0x41
  40584b:	js     0x405804
  40584d:	add    eax,0x5e4a6b23
  405852:	mov    ds:0xe6c5fb28,al
  405857:	icebp  
  405858:	sbb    DWORD PTR [ecx+0x5df1d8da],ebx
  40585e:	mov    eax,ds:0x38e6b4fe
  405863:	push   ss
  405864:	cmc    
  405865:	test   eax,0x4acc3bd6
  40586a:	push   eax
  40586b:	add    esp,DWORD PTR gs:[eax]
  40586e:	and    bl,dh
  405870:	xchg   edi,eax
  405871:	sub    DWORD PTR [ebp+0x4d],esp
  405874:	aad    0xab
  405876:	ins    BYTE PTR es:[edi],dx
  405877:	fiadd  DWORD PTR [edi-0x7759470f]
  40587d:	jne    0x40586c
  40587f:	test   eax,0xac9335cb
  405884:	inc    ebp
  405885:	mov    WORD PTR [ecx-0x70],?
  405888:	push   es
  405889:	retf   
  40588a:	sbb    al,dh
  40588c:	push   eax
  40588d:	jge    0x405853
  40588f:	sbb    ebp,DWORD PTR [ecx+0xf04bc26]
  405895:	xchg   ecx,eax
  405896:	das    
  405897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405898:	stos   DWORD PTR es:[edi],eax
  405899:	sub    dh,BYTE PTR [ebx-0x23]
  40589c:	sub    cl,BYTE PTR [edx]
  40589e:	test   DWORD PTR [ecx+0x3c161bf7],ecx
  4058a4:	inc    eax
  4058a5:	mov    ss,WORD PTR [edx+ebp*4-0x2e5a611d]
  4058ac:	mov    ah,0x3b
  4058ae:	cld    
  4058af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058b0:	idiv   BYTE PTR ds:0xf12cbbd1
  4058b6:	(bad)  
  4058b7:	hlt    
  4058b8:	hlt    
  4058b9:	sub    edi,DWORD PTR [edi+ebx*4]
  4058bc:	enter  0xd4c1,0x16
  4058c0:	mov    ah,dl
  4058c2:	mov    edi,0x7e1aa54
  4058c7:	mov    bl,0xe8
  4058c9:	or     eax,0xca7546b4
  4058ce:	imul   edi,DWORD PTR [ecx],0x3cf542d1
  4058d4:	test   edx,ebx
  4058d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058d7:	jmp    FWORD PTR [esi+edi*2+0x1307a5cc]
  4058de:	inc    ebx
  4058df:	bound  ecx,QWORD PTR [edi]
  4058e1:	test   DWORD PTR [edi],esi
  4058e3:	and    BYTE PTR [edi],0x94
  4058e6:	into   
  4058e7:	mov    BYTE PTR [edi],bh
  4058e9:	mov    eax,0x70790831
  4058ee:	mov    ecx,0x7952a028
  4058f3:	retf   0x1a57
  4058f6:	mov    ds:0x6ba8e530,al
  4058fb:	add    ecx,esp
  4058fd:	cmc    
  4058fe:	mov    bl,0x8e
  405900:	mov    al,0xcf
  405902:	dec    esp
  405903:	ds inc eax
  405905:	or     DWORD PTR [ecx],esp
  405907:	ins    DWORD PTR es:[edi],dx
  405908:	aad    0xe8
  40590a:	sbb    eax,edi
  40590c:	int    0xe8
  40590e:	scas   al,BYTE PTR es:[edi]
  40590f:	add    al,0x77
  405911:	add    BYTE PTR [eax+0x5971cce0],al
  405917:	or     ah,bh
  405919:	lahf   
  40591a:	lds    ecx,FWORD PTR ds:0xfd1c7253
  405920:	sub    esp,ebx
  405922:	mov    esp,0x43ad2f38
  405927:	jbe    0x405997
  405929:	inc    esi
  40592a:	fcom   DWORD PTR ss:[ebx+0x2b374e02]
  405931:	cmp    al,0xd5
  405933:	sub    al,0xc9
  405935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405936:	sub    al,0x79
  405938:	stos   BYTE PTR es:[edi],al
  405939:	jo     0x405972
  40593b:	sbb    eax,0xd6773b0a
  405940:	ds pushf 
  405942:	cmp    esi,ecx
  405944:	adc    DWORD PTR [ecx],esi
  405946:	lds    eax,FWORD PTR [ebp+ecx*8-0x1c988dce]
  40594d:	sti    
  40594e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40594f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405950:	dec    ebx
  405951:	mov    dh,0x8e
  405953:	pop    esp
  405954:	xchg   edi,eax
  405956:	fdivr  QWORD PTR [edi]
  405958:	es loopne 0x4058ef
  40595b:	dec    esi
  40595c:	loop   0x405911
  40595e:	cmp    DWORD PTR [eax],esp
  405960:	inc    ebx
  405961:	retf   0x4695
  405964:	cs out dx,al
  405966:	mov    ?,edx
  405968:	and    DWORD PTR [ecx+0x566df556],0xffffff80
  40596f:	sub    BYTE PTR [eax+0x71],bl
  405972:	not    BYTE PTR [eax-0x2b16f181]
  405978:	mov    ah,0xa3
  40597a:	pop    eax
  40597b:	xchg   edi,eax
  40597c:	cwde   
  40597d:	lea    esp,[edi]
  40597f:	call   0x6ed537fb
  405984:	repnz (bad) 
  405986:	jb     0x4059d3
  405988:	xor    edx,DWORD PTR [edi-0x37]
  40598b:	(bad)  
  40598c:	and    edx,DWORD PTR [ebx]
  40598e:	test   al,0xae
  405990:	push   cs
  405991:	fnstsw WORD PTR [eax+0x5f6455a4]
  405997:	cmc    
  405998:	leave  
  405999:	add    dl,BYTE PTR [ebp+0x78]
  40599c:	ja     0x405925
  40599e:	xchg   ebp,eax
  40599f:	push   ds
  4059a0:	call   0x9114:0x685fad67
  4059a7:	mov    dl,0xe
  4059a9:	cmp    DWORD PTR [eax+0x4fe9c430],edi
  4059af:	outs   dx,BYTE PTR ds:[esi]
  4059b0:	shl    bh,0xd5
  4059b3:	ds add dh,ah
  4059b6:	push   0xa6beddca
  4059bb:	pop    edx
  4059bc:	aas    
  4059bd:	std    
  4059be:	cmp    DWORD PTR [edx-0x3a],edi
  4059c1:	fstp   st(4)
  4059c3:	push   0xbca60d34
  4059c8:	xchg   BYTE PTR [ecx],bh
  4059ca:	iret   
  4059cb:	jnp    0x4059e9
  4059cd:	cli    
  4059ce:	(bad)  
  4059cf:	(bad)  
  4059d0:	not    DWORD PTR [esi-0x5e92f817]
  4059d6:	sar    BYTE PTR [edi-0x702137],1
  4059dc:	scas   eax,DWORD PTR es:[edi]
  4059dd:	mov    dh,0x33
  4059df:	sub    al,0x77
  4059e1:	cmp    al,BYTE PTR [eax-0x18c02b3e]
  4059e7:	(bad)  
  4059e8:	aaa    
  4059e9:	mov    cl,0x68
  4059eb:	sbb    eax,0xf1739a61
  4059f0:	call   0x4078:0x8405b027
  4059f7:	sub    eax,DWORD PTR [ecx-0x5130acd7]
  4059fd:	ds ja  0x405a6f
  405a00:	les    ebp,FWORD PTR [eax-0x2fd4de83]
  405a06:	xor    ebp,DWORD PTR [eax]
  405a08:	cmc    
  405a09:	inc    ecx
  405a0a:	dec    esp
  405a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a0c:	pop    ss
  405a0d:	rol    DWORD PTR [ebx],0xb5
  405a10:	inc    esp
  405a11:	hlt    
  405a12:	inc    esi
  405a13:	jl     0x4059f3
  405a15:	aaa    
  405a16:	sub    ecx,DWORD PTR [ebp-0x2]
  405a19:	int3   
  405a1a:	xor    eax,0x26f8fff
  405a1f:	mov    ds:0xecc61956,al
  405a24:	pop    esp
  405a25:	inc    esp
  405a26:	mov    al,dl
  405a28:	gs cmp eax,0x5f6b8fe5
  405a2e:	mov    esp,0x3a47c1c1
  405a33:	dec    ecx
  405a34:	mov    ecx,0xf0e2d0f
  405a39:	xchg   ebp,eax
  405a3a:	(bad)  
  405a3c:	xchg   ebx,eax
  405a3d:	ins    DWORD PTR es:[edi],dx
  405a3e:	cmc    
  405a3f:	add    al,bl
  405a41:	xlat   BYTE PTR ds:[ebx]
  405a42:	jp     0x405aae
  405a44:	ds mov dh,0xbf
  405a47:	add    cl,cl
  405a49:	daa    
  405a4a:	(bad)  
  405a4b:	fsub   QWORD PTR [ebx]
  405a4d:	dec    ecx
  405a4e:	test   al,0x46
  405a50:	(bad)  
  405a51:	dec    eax
  405a52:	cmp    al,0x3b
  405a54:	mov    dh,al
  405a56:	cmp    bl,0xcb
  405a59:	xchg   ecx,eax
  405a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a5b:	inc    edx
  405a5c:	push   es
  405a5d:	dec    ebp
  405a5e:	mov    ecx,DWORD PTR [esi+0x2b]
  405a61:	test   eax,0x241ab574
  405a66:	lea    esi,[ebx]
  405a68:	mov    eax,0x69d2dd65
  405a6d:	shl    BYTE PTR [ebx-0x6a5f34bd],0x3a
  405a74:	arpl   bx,cx
  405a76:	mov    cl,0xc8
  405a78:	(bad)  
  405a79:	fcmovnb st,st(5)
  405a7b:	xor    DWORD PTR [eax-0x7e],esp
  405a7e:	pusha  
  405a7f:	and    dh,ch
  405a81:	shl    DWORD PTR [esi+0x4],0xc3
  405a85:	mov    cs,WORD PTR [edx+0x20]
  405a88:	jbe    0x405b06
  405a8a:	ret    
  405a8b:	push   0x81721556
  405a90:	mov    bl,0x8c
  405a92:	cli    
  405a93:	in     al,0xe7
  405a95:	cs push ds
  405a97:	js     0x405aee
  405a99:	push   ds
  405a9a:	inc    ecx
  405a9b:	imul   esp,DWORD PTR [ecx-0x31],0xe9b4baa8
  405aa2:	retf   
  405aa3:	scas   al,BYTE PTR es:[edi]
  405aa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aa5:	stc    
  405aa6:	sbb    al,cl
  405aa8:	sti    
  405aa9:	dec    ebp
  405aaa:	out    0x12,eax
  405aac:	push   0x9db8b4eb
  405ab1:	fmul   DWORD PTR [esi-0x80]
  405ab4:	in     al,dx
  405ab5:	in     al,0x4f
  405ab7:	adc    eax,0x86db244a
  405abc:	mov    bl,dh
  405abe:	mov    edx,0xe46a7090
  405ac3:	push   edx
  405ac4:	mul    DWORD PTR [edi]
  405ac6:	pop    ds
  405ac7:	mov    al,ds:0xb67686fd
  405acc:	aas    
  405acd:	xchg   esp,eax
  405ace:	rcl    BYTE PTR [esi],0x94
  405ad1:	int3   
  405ad2:	or     bh,bl
  405ad4:	xor    ebp,ebp
  405ad6:	outs   dx,DWORD PTR ds:[esi]
  405ad7:	out    0xd1,eax
  405ad9:	mov    bl,0x67
  405adb:	adc    BYTE PTR [ebp+0x45],dl
  405ade:	out    0x58,eax
  405ae0:	pop    edi
  405ae1:	lea    ecx,[ebx+0x399e3b52]
  405ae7:	and    ebx,DWORD PTR [ecx+0x6c287a67]
  405aed:	xor    al,0x2b
  405aef:	fld    TBYTE PTR [ecx]
  405af1:	cld    
  405af2:	xor    ebp,ebx
  405af4:	push   edx
  405af5:	sub    eax,0xb7fd158
  405afa:	jae    0x405b0e
  405afc:	xlat   BYTE PTR ds:[ebx]
  405afd:	scas   al,BYTE PTR es:[edi]
  405afe:	pop    ebp
  405b00:	test   al,0xdf
  405b02:	cmc    
  405b03:	and    ebp,DWORD PTR [ecx-0x2d530763]
  405b09:	pop    es
  405b0a:	not    edi
  405b0c:	outs   dx,DWORD PTR ds:[esi]
  405b0d:	pop    ebp
  405b0e:	enter  0x6e6c,0x4a
  405b12:	div    DWORD PTR [esi-0x462aeba5]
  405b18:	leave  
  405b19:	mov    bl,0xe7
  405b1b:	cmp    DWORD PTR [ecx-0xd],0x86791494
  405b22:	cli    
  405b23:	xchg   edx,eax
  405b24:	xchg   BYTE PTR [esp+eax*2],bh
  405b27:	or     DWORD PTR [edx+0x14e4da30],edx
  405b2d:	test   DWORD PTR [esi+esi*4-0x7b9c5190],ebx
  405b34:	sti    
  405b35:	cmp    DWORD PTR [edx],ebx
  405b37:	call   0x615d:0xf2ae5286
  405b3e:	lock ins DWORD PTR es:[edi],dx
  405b40:	push   ds
  405b41:	ins    DWORD PTR es:[edi],dx
  405b42:	and    dl,dh
  405b44:	psadbw mm7,QWORD PTR [esi+0x35e2f01f]
  405b4b:	mov    eax,ds:0x7540e9de
  405b50:	leave  
  405b51:	es (bad) 
  405b54:	sbb    dh,BYTE PTR [eax+0x26115610]
  405b5a:	(bad)  
  405b5b:	icebp  
  405b5c:	outs   dx,BYTE PTR ds:[esi]
  405b5d:	lea    esp,[edi]
  405b5f:	lods   al,BYTE PTR ds:[esi]
  405b60:	mov    ch,0x4c
  405b62:	outs   dx,DWORD PTR ds:[esi]
  405b63:	lods   eax,DWORD PTR ds:[esi]
  405b64:	fist   WORD PTR [esi]
  405b66:	mov    edi,eax
  405b68:	dec    BYTE PTR [esi-0x69]
  405b6b:	test   DWORD PTR [edx-0x7d636b6c],edx
  405b71:	adc    ch,BYTE PTR [edi-0x4cf15775]
  405b77:	inc    edi
  405b78:	sub    ecx,ebx
  405b7a:	lods   eax,DWORD PTR ds:[esi]
  405b7b:	push   esi
  405b7c:	fisub  WORD PTR [ecx+eiz*8+0x78feac01]
  405b83:	inc    ebp
  405b84:	cs and dh,cl
  405b87:	loopne 0x405b76
  405b89:	pop    edx
  405b8a:	std    
  405b8b:	xor    al,0x74
  405b8d:	icebp  
  405b8e:	or     al,0x1e
  405b90:	jne    0x405b4b
  405b92:	outs   dx,BYTE PTR ds:[esi]
  405b93:	mov    ebp,0x576e27e9
  405b98:	mov    eax,ds:0x31b2edd
  405b9d:	retf   0x3ac5
  405ba0:	std    
  405ba1:	call   0x15fb:0xbfc25c6e
  405ba8:	or     dh,BYTE PTR [esi+0x10]
  405bab:	adc    ebx,DWORD PTR [eax]
  405bad:	or     ecx,ecx
  405baf:	popa   
  405bb0:	add    DWORD PTR ds:0x48261bf7,esp
  405bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bb7:	(bad)  
  405bb8:	sub    eax,0x33ce4f8d
  405bbd:	sbb    eax,0xb7b19b25
  405bc2:	push   esp
  405bc3:	es loopne 0x405b4d
  405bc6:	data16 fcom DWORD PTR [edx+0x7a]
  405bca:	xchg   edi,eax
  405bcb:	shl    bh,1
  405bcd:	adc    al,0x3c
  405bcf:	aad    0xcb
  405bd1:	mov    ah,0x54
  405bd3:	cmp    BYTE PTR [edx],bh
  405bd5:	adc    BYTE PTR [edx-0x31de1383],al
  405bdb:	jmp    0x8979:0x7df46d32
  405be2:	cmp    al,0xa
  405be4:	int3   
  405be5:	and    ebp,eax
  405be7:	adc    BYTE PTR [edi],al
  405be9:	xchg   esi,eax
  405bea:	pop    ebp
  405beb:	and    ebp,edi
  405bed:	(bad)  
  405bee:	(bad)  
  405bef:	or     al,0xd
  405bf1:	push   ecx
  405bf2:	jmp    0xb568:0x79a038fa
  405bf9:	jae    0x405be5
  405bfb:	and    ch,BYTE PTR [ecx]
  405bfd:	ret    
  405bfe:	pushf  
  405bff:	push   es
  405c00:	test   al,0x2f
  405c02:	cli    
  405c03:	test   al,0xfe
  405c05:	mov    al,ds:0xcf8003e4
  405c0a:	mov    cl,0xc9
  405c0c:	(bad)  
  405c0d:	repz mov ds:0x6ed5ecc8,eax
  405c13:	ret    
  405c14:	stc    
  405c15:	sub    ebx,esp
  405c17:	mov    ecx,0x5b79d66a
  405c1c:	push   ebx
  405c1d:	shl    BYTE PTR [edi+eax*4],1
  405c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c21:	push   0xffffff87
  405c23:	(bad)  
  405c25:	or     al,0x6f
  405c27:	pusha  
  405c28:	or     al,0x58
  405c2a:	out    0x1d,al
  405c2c:	cmp    esp,DWORD PTR [edi+0x347b55d5]
  405c32:	out    0xb3,al
  405c34:	out    dx,eax
  405c35:	adc    eax,0x6329a56c
  405c3a:	xor    al,BYTE PTR [ebp+0x52d3d396]
  405c40:	mov    ds:0xbcd57ba8,al
  405c45:	cs xchg edx,eax
  405c47:	ret    
  405c48:	das    
  405c49:	scas   ax,WORD PTR es:[edi]
  405c4b:	out    0x5d,eax
  405c4d:	push   edx
  405c4e:	cli    
  405c4f:	(bad)  
  405c51:	adc    eax,DWORD PTR [ebx-0x69a89e8e]
  405c57:	inc    eax
  405c58:	pop    ebx
  405c59:	mov    bl,0x6b
  405c5b:	sti    
  405c5c:	fistp  WORD PTR [edi-0x35]
  405c5f:	ret    0x373b
  405c62:	and    al,0xec
  405c64:	icebp  
  405c65:	jb     0x405cc5
  405c67:	mov    eax,es
  405c69:	sbb    BYTE PTR [esi-0x1aeb4e37],cl
  405c6f:	retf   
  405c70:	(bad)  
  405c72:	in     al,0x5c
  405c74:	cmp    eax,0x8cc31484
  405c79:	mov    cl,0xd
  405c7b:	pop    edi
  405c7c:	jge    0x405ce2
  405c7e:	adc    bh,BYTE PTR [edx-0x145e28ef]
  405c84:	xchg   ebx,eax
  405c85:	das    
  405c86:	push   ebx
  405c87:	sub    edi,eax
  405c89:	xchg   ebp,eax
  405c8a:	rcl    DWORD PTR [ebx+0x1a],0x9d
  405c8e:	(bad)  
  405c8f:	cld    
  405c90:	push   esp
  405c91:	cs cli 
  405c93:	jge    0x405c17
  405c95:	imul   edx,DWORD PTR [ebx],0x22
  405c98:	lds    eax,FWORD PTR [eax+0x2b]
  405c9b:	into   
  405c9c:	test   DWORD PTR [edx-0x64],edi
  405c9f:	lods   eax,DWORD PTR ds:[esi]
  405ca0:	mov    ebp,0xb76c7d49
  405ca5:	jg     0x405c27
  405ca7:	push   ebp
  405ca8:	mov    ebx,edx
  405caa:	ins    BYTE PTR es:[edi],dx
  405cab:	mov    edi,0xa76d524d
  405cb0:	inc    ebx
  405cb1:	fidiv  WORD PTR ds:[esi+eiz*2+0x4f]
  405cb6:	jne    0x405c91
  405cb8:	loop   0x405cd6
  405cba:	call   0x116b:0xea5c3644
  405cc1:	and    edi,DWORD PTR [eax+0x7d]
  405cc4:	mov    al,0xa5
  405cc6:	sub    dh,BYTE PTR [edx]
  405cc8:	push   esp
  405cc9:	sar    bh,0xc5
  405ccc:	push   cs
  405ccd:	or     dh,BYTE PTR [ebx+0x4acf203b]
  405cd3:	sub    al,0x2e
  405cd5:	mov    edx,0xf4be53d1
  405cda:	sub    ah,dl
  405cdc:	and    DWORD PTR [ebp+0x546689e4],0x72232200
  405ce6:	daa    
  405ce7:	cmp    DWORD PTR [eax-0x29],esp
  405cea:	mov    al,0x76
  405cec:	jne    0x405cd3
  405cee:	dec    ebp
  405cef:	stos   BYTE PTR es:[edi],al
  405cf0:	(bad)  
  405cf1:	(bad)  
  405cf2:	je     0x405d3a
  405cf4:	or     cl,BYTE PTR [edx-0x46]
  405cf7:	enter  0x5667,0xa1
  405cfb:	adc    ch,BYTE PTR [ebx-0x7f0852c4]
  405d01:	popa   
  405d02:	js     0x405d49
  405d04:	cdq    
  405d05:	ror    BYTE PTR [edi],cl
  405d07:	mov    eax,0xe6aded88
  405d0c:	shr    BYTE PTR [eax-0x6b7f7a01],0xa1
  405d13:	ror    DWORD PTR [ecx+0x7f],1
  405d16:	leave  
  405d17:	rcr    BYTE PTR [esi-0x4f9a1dc8],1
  405d1d:	mov    edx,0x510cc658
  405d22:	int3   
  405d23:	fs sahf 
  405d25:	pop    edi
  405d26:	rcl    BYTE PTR [esi-0x4e9ef1b3],1
  405d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d2d:	mov    cs,WORD PTR [ebp-0x7e709783]
  405d33:	push   esi
  405d34:	pop    ss
  405d35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d36:	and    DWORD PTR [edx],0xffffffc8
  405d39:	mov    dl,BYTE PTR [edi]
  405d3b:	in     al,dx
  405d3c:	cli    
  405d3d:	jae    0x405d2a
  405d3f:	das    
  405d40:	js     0x405d5c
  405d42:	and    ecx,DWORD PTR [eax+0x14]
  405d45:	aad    0xaa
  405d47:	jbe    0x405ce7
  405d49:	bound  ecx,QWORD PTR [edx]
  405d4b:	push   esp
  405d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d4d:	(bad)  
  405d4e:	sar    DWORD PTR [ecx],cl
  405d50:	inc    esp
  405d51:	daa    
  405d52:	(bad)  
  405d56:	cs jp  0x405db7
  405d59:	imul   edx,DWORD PTR [ecx+0x42],0x9
  405d5d:	sub    eax,DWORD PTR [edx]
  405d5f:	lea    esi,[ecx-0x14]
  405d62:	pop    edi
  405d63:	mov    eax,0x20d46236
  405d68:	lock inc eax
  405d6a:	imul   eax,DWORD PTR [edx+0x18],0x3f
  405d6e:	sbb    dl,BYTE PTR [eax-0x6a]
  405d71:	push   ebp
  405d72:	fadd   QWORD PTR [eax+0x11]
  405d75:	push   DWORD PTR [esi+0x2a]
  405d78:	push   0x52cca78b
  405d7d:	cwde   
  405d7e:	mov    WORD PTR [ebp-0x33746d87],es
  405d84:	(bad)  
  405d85:	sbb    edi,ebx
  405d87:	xor    al,cl
  405d89:	ret    0x9b5
  405d8c:	sub    al,0xcc
  405d8e:	popa   
  405d8f:	rcr    BYTE PTR [eax+ecx*8],1
  405d92:	mov    DWORD PTR [esi],ecx
  405d94:	fsub   QWORD PTR [ecx]
  405d96:	sub    DWORD PTR [ecx-0x4f],ebx
  405d99:	mov    dh,BYTE PTR [esi-0x70ae54c2]
  405d9f:	jecxz  0x405dc4
  405da1:	jmp    0xa3560c46
  405da6:	jl     0x405dd8
  405da8:	push   esi
  405da9:	fwait
  405daa:	(bad)  
  405dab:	jl     0x405d8a
  405dad:	int3   
  405dae:	hlt    
  405daf:	mov    bl,0x56
  405db1:	add    bh,0x9d
  405db4:	cmc    
  405db5:	xor    DWORD PTR [ecx+0x459cefb2],edi
  405dbb:	je     0x405e32
  405dbd:	and    ecx,DWORD PTR [eax-0x62]
  405dc0:	retf   0xc9ec
  405dc3:	and    edx,DWORD PTR [edi]
  405dc5:	pop    ss
  405dc6:	add    BYTE PTR [edi+0x55],bl
  405dc9:	fild   QWORD PTR [esi-0x7c]
  405dcc:	test   DWORD PTR [ecx],0x1eae3252
  405dd2:	lock ss cli 
  405dd5:	jg     0x405d66
  405dd7:	pushf  
  405dd8:	adc    bh,BYTE PTR [ecx-0x1b2df8a2]
  405dde:	add    al,0xcc
  405de0:	fstp   DWORD PTR [eax-0x51]
  405de3:	mov    ebp,0x88e14bbc
  405de8:	scas   eax,DWORD PTR es:[edi]
  405de9:	mov    esi,0xadd0c2d9
  405dee:	jmp    0x9b6caf
  405df3:	repz out 0x3e,eax
  405df6:	gs adc eax,0x703ebc94
  405dfc:	jne    0x405e2e
  405dfe:	sbb    ch,BYTE PTR [ebx-0x40d3fcc5]
  405e04:	repnz adc eax,0x6755d022
  405e0a:	inc    eax
  405e0b:	cmp    edi,DWORD PTR [eax+0x36]
  405e0e:	xchg   ebp,eax
  405e0f:	stc    
  405e10:	jns    0x405db5
  405e12:	and    al,0xd6
  405e14:	mov    edx,0x4f81bcab
  405e19:	add    edx,esi
  405e1b:	xor    cl,al
  405e1d:	test   ecx,ebp
  405e1f:	or     DWORD PTR [esi-0xe465813],ebx
  405e25:	jnp    0x405e09
  405e27:	mov    eax,ds:0xbf309beb
  405e2c:	cdq    
  405e2d:	inc    eax
  405e2e:	mov    BYTE PTR [ecx-0x5aa35142],0x4d
  405e35:	fld    TBYTE PTR [ebx-0x3ebc6092]
  405e3b:	ret    
  405e3c:	clc    
  405e3d:	push   ebx
  405e3e:	mov    edx,0xa6122a79
  405e43:	mov    gs,WORD PTR [eax+ebx*2+0x5ac95c58]
  405e4a:	mov    dl,0xcb
  405e4c:	mov    cl,BYTE PTR [edx]
  405e4e:	stc    
  405e4f:	mov    dl,0x85
  405e51:	push   esp
  405e52:	(bad)  
  405e53:	retf   
  405e54:	mov    edx,0x98363e82
  405e59:	xor    al,0xf1
  405e5b:	dec    edx
  405e5c:	lods   eax,DWORD PTR ds:[esi]
  405e5d:	shl    DWORD PTR [edi+0x4b],1
  405e60:	inc    edi
  405e61:	and    BYTE PTR [eax-0x2b05e1ab],dh
  405e67:	neg    DWORD PTR [edi]
  405e69:	adc    DWORD PTR [eax+0x45],edi
  405e6c:	scas   eax,DWORD PTR es:[edi]
  405e6d:	stos   DWORD PTR es:[edi],eax
  405e6e:	push   es
  405e6f:	push   0xffffff8c
  405e71:	fsub   DWORD PTR [ecx-0x71]
  405e74:	std    
  405e75:	dec    edx
  405e76:	icebp  
  405e77:	xchg   esi,eax
  405e78:	mov    bl,0xe5
  405e7a:	push   ds
  405e7b:	jmp    0xd533:0x19fd82b2
  405e82:	xor    ebp,DWORD PTR [ebp+0x6683e809]
  405e88:	push   esp
  405e89:	in     al,dx
  405e8a:	sahf   
  405e8b:	push   ebx
  405e8c:	mov    bh,0x47
  405e8e:	call   0x55be:0xef09d5b5
  405e95:	and    BYTE PTR [eax],cl
  405e97:	popa   
  405e98:	pop    esi
  405e99:	aaa    
  405e9a:	or     cl,ch
  405e9c:	add    ah,BYTE PTR [edi+0x972575d]
  405ea2:	fucomip st,st(1)
  405ea4:	fild   DWORD PTR [ebp-0x1]
  405ea7:	mov    bl,0xe0
  405ea9:	int3   
  405eaa:	mov    ebp,0xd36ffb20
  405eaf:	into   
  405eb0:	pop    ebx
  405eb1:	add    DWORD PTR [esi-0x2dec6c0d],0xffffffd6
  405eb8:	cwde   
  405eb9:	call   0x34bf:0x49dd7e16
  405ec0:	les    esi,FWORD PTR [eax]
  405ec2:	adc    eax,0x627281cc
  405ec7:	adc    al,0xd7
  405ec9:	lods   eax,DWORD PTR ds:[esi]
  405eca:	aam    0x6b
  405ecc:	pop    esp
  405ecd:	pop    ds
  405ece:	hlt    
  405ecf:	add    bh,BYTE PTR [ecx]
  405ed1:	mov    eax,ds:0xe0a91343
  405ed6:	imul   ecx,DWORD PTR [eax],0xb6a0e856
  405edc:	push   ebp
  405edd:	push   edi
  405ede:	enter  0x5670,0x19
  405ee2:	jge    0x405edb
  405ee4:	dec    edi
  405ee5:	(bad)  
  405ee6:	cld    
  405ee7:	jmp    0x405ed8
  405ee9:	cmc    
  405eea:	xchg   ebx,eax
  405eeb:	in     eax,dx
  405eec:	aas    
  405eed:	aad    0x45
  405eef:	retf   
  405ef0:	push   edx
  405ef1:	push   esp
  405ef2:	pop    ebp
  405ef3:	jbe    0x405f43
  405ef5:	add    esi,DWORD PTR ss:[ebp-0xb]
  405ef9:	dec    esi
  405efa:	jno    0x405e9b
  405efc:	fdiv   st,st(6)
  405efe:	push   esp
  405eff:	rcl    DWORD PTR [esi],1
  405f01:	xor    DWORD PTR [esi],edx
  405f03:	push   edx
  405f04:	outs   dx,DWORD PTR ds:[esi]
  405f05:	scas   eax,DWORD PTR es:[edi]
  405f06:	sbb    dl,cl
  405f08:	adc    al,0x4e
  405f0a:	sbb    BYTE PTR [esi-0x4725cb8e],ch
  405f10:	xchg   eax,esp
  405f12:	clc    
  405f13:	jo     0x405f62
  405f15:	das    
  405f16:	jo     0x405f5d
  405f18:	adc    BYTE PTR [ebx],ch
  405f1a:	lods   eax,DWORD PTR ds:[esi]
  405f1b:	adc    edx,DWORD PTR fs:[ebp+0x68a6e206]
  405f22:	lock jg 0x405f7f
  405f25:	xchg   ebp,eax
  405f26:	out    0x16,eax
  405f28:	inc    ecx
  405f29:	loopne 0x405f77
  405f2b:	fwait
  405f2c:	jecxz  0x405faa
  405f2e:	push   edi
  405f2f:	cld    
  405f30:	shl    esi,0x86
  405f33:	cmp    eax,0xb2e7c438
  405f38:	(bad)  
  405f39:	xlat   BYTE PTR ds:[ebx]
  405f3a:	xchg   ebx,eax
  405f3b:	aaa    
  405f3c:	test   al,0x42
  405f3e:	pop    eax
  405f3f:	mov    esi,0x1ab21a7c
  405f44:	mov    BYTE PTR ds:0x4bc5a57c,bh
  405f4a:	and    eax,0xe1dccaab
  405f4f:	xchg   esp,eax
  405f50:	mov    al,0x13
  405f52:	enter  0x8967,0x85
  405f56:	ficom  WORD PTR [ecx-0x4c548b60]
  405f5c:	dec    esi
  405f5d:	inc    edi
  405f5e:	call   0xa6d2:0xe2569aa2
  405f65:	push   eax
  405f66:	leave  
  405f67:	xchg   edi,eax
  405f68:	pop    ss
  405f69:	div    BYTE PTR [eax-0x2ad41f78]
  405f6f:	push   esp
  405f70:	xor    DWORD PTR [esi+esi*4-0x5c],esp
  405f74:	adc    al,0xda
  405f76:	sbb    ah,BYTE PTR [ebx+0x26a42776]
  405f7c:	cmp    BYTE PTR [esi+0x70cfa7d3],dh
  405f82:	daa    
  405f83:	outs   dx,DWORD PTR ds:[esi]
  405f84:	retf   0xbe4a
  405f87:	inc    ebx
  405f88:	push   edx
  405f89:	or     eax,0xac77e973
  405f8e:	pop    ebp
  405f8f:	fcomip st,st(2)
  405f91:	mov    eax,ds:0xf24a649a
  405f96:	int3   
  405f97:	or     al,0xa1
  405f99:	shr    esp,0xca
  405f9c:	shl    DWORD PTR [edi+edx*4+0xf],cl
  405fa0:	fwait
  405fa1:	xchg   ebp,edx
  405fa3:	dec    ecx
  405fa4:	xor    BYTE PTR [esi+0x6e8d0a1e],dh
  405faa:	sub    al,0x2
  405fac:	(bad)  
  405fae:	xchg   ebx,eax
  405faf:	sbb    ch,BYTE PTR [ebp-0x2b]
  405fb2:	test   DWORD PTR [edi+0x13470b04],eax
  405fb8:	mov    ds,WORD PTR [ebp+0x15]
  405fbb:	jbe    0x406011
  405fbd:	shl    BYTE PTR [edx-0x387fe192],1
  405fc3:	popf   
  405fc4:	jo     0x40601a
  405fc6:	push   ecx
  405fc7:	cmc    
  405fc8:	cmc    
  405fc9:	fxch   st(3)
  405fcb:	idiv   DWORD PTR [edi]
  405fcd:	jnp    0x405f65
  405fcf:	sbb    cl,BYTE PTR [ecx]
  405fd1:	sub    BYTE PTR [esi],bh
  405fd3:	sbb    dh,BYTE PTR [edi+0x53f45122]
  405fd9:	sbb    BYTE PTR [ecx],cl
  405fdb:	stos   BYTE PTR es:[edi],al
  405fdc:	fwait
  405fdd:	lahf   
  405fde:	cmp    eax,0x31e375e2
  405fe3:	clc    
  405fe4:	jle    0x40602a
  405fe6:	call   0x14cf:0x6693c18e
  405fed:	mov    edi,0x3c472244
  405ff2:	mov    edx,0x2380cbca
  405ff7:	push   eax
  405ff8:	sbb    eax,DWORD PTR [ebx]
  405ffa:	or     cl,cl
  405ffc:	rcr    ecx,0x66
  405fff:	add    ebx,eax
  406001:	adc    al,BYTE PTR [edx+eax*8]
  406004:	jb     0x406040
  406006:	cmp    ch,BYTE PTR [edi-0x528f08ea]
  40600c:	pop    edx
  40600d:	xor    dh,bl
  40600f:	out    dx,al
  406010:	imul   esi,DWORD PTR [ebp+0x5d],0x3a7d79ee
  406017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406018:	mov    esp,0x73aa6a6b
  40601d:	jecxz  0x405ff5
  40601f:	and    BYTE PTR [edx],al
  406021:	gs dec ecx
  406023:	xor    DWORD PTR [edi+0x482c48a8],eax
  406029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40602a:	sti    
  40602b:	arpl   dx,si
  40602d:	xor    DWORD PTR [edi],0xffffffc9
  406030:	fnsave [esi+0x78]
  406033:	pop    ebx
  406034:	inc    ebp
  406035:	mov    WORD PTR [edx],cs
  406037:	and    al,0x90
  406039:	xor    eax,esi
  40603b:	add    eax,edi
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	pop    ds
  40615d:	push   esi
  40615e:	xchg   DWORD PTR [edi],edx
  406160:	pop    ebx
  406161:	cmp    BYTE PTR [ebx-0x7ca3107d],al
  406167:	and    DWORD PTR [ebx-0x78],0x78
  40616b:	enter  0xb8f6,0x15
  40616f:	das    
  406170:	push   edi
  406171:	xor    DWORD PTR ds:0x47cc6f05,eax
  406177:	jne    0x4061a4
  406179:	pushf  
  40617a:	and    eax,0x41f29d53
  40617f:	mov    bh,BYTE PTR [edi]
  406181:	adc    bl,BYTE PTR [esi]
  406183:	ja     0x4061bf
  406185:	(bad)  
  406187:	and    DWORD PTR [eax+0x6f160644],ecx
  40618d:	into   
  40618e:	xlat   BYTE PTR ds:[ebx]
  40618f:	cmp    edx,edi
  406191:	fldenv [esi]
  406193:	das    
  406194:	dec    ebx
  406195:	cmp    dl,0xe3
  406198:	rcl    dl,0x31
  40619b:	enter  0xa620,0xa6
  40619f:	mov    ds:0x912f323f,eax
  4061a4:	inc    ebx
  4061a5:	pushf  
  4061a6:	mov    ebp,0x113a6af6
  4061ab:	push   ss
  4061ac:	push   esp
  4061ad:	loopne 0x4061f9
  4061af:	pop    ebp
  4061b0:	mov    ds:0x4a52abaf,al
  4061b5:	mov    DWORD PTR [ecx],edx
  4061b7:	(bad)  
  4061b8:	xchg   ebx,eax
  4061b9:	mov    ch,al
  4061bb:	or     DWORD PTR [edi+edi*1],esi
  4061be:	push   es
  4061bf:	pop    DWORD PTR [eax+edi*1]
  4061c2:	sbb    eax,esi
  4061c4:	(bad)  
  4061c5:	fnstsw WORD PTR [esi]
  4061c7:	outs   dx,DWORD PTR ds:[esi]
  4061c8:	xor    BYTE PTR [eax-0x4354d180],ch
  4061ce:	shl    al,cl
  4061d0:	push   edi
  4061d1:	(bad)  
  4061d2:	bound  esi,QWORD PTR [esi+0x5]
  4061d5:	inc    ebx
  4061d6:	and    ch,BYTE PTR [ebp-0x24b3023a]
  4061dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061dd:	sbb    esp,DWORD PTR [ebp+0x31340719]
  4061e3:	xlat   BYTE PTR ds:[ebx]
  4061e4:	icebp  
  4061e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061e6:	cs pop eax
  4061e8:	arpl   WORD PTR [eax-0x4492dc9c],bx
  4061ee:	dec    esp
  4061ef:	jo     0x4061dd
  4061f1:	sbb    ah,dh
  4061f3:	in     al,0xd4
  4061f5:	or     eax,0xe02df0ce
  4061fa:	out    0x5b,eax
  4061fc:	in     eax,dx
  4061fd:	lock pop ebx
  4061ff:	add    DWORD PTR [ebx-0x62],edi
  406202:	stos   BYTE PTR es:[edi],al
  406203:	and    al,0xce
  406205:	enter  0x95d1,0xe6
  406209:	add    BYTE PTR [ebx],ah
  40620b:	sub    DWORD PTR [edx+0x40],ecx
  40620e:	repnz pop esi
  406211:	or     al,0xf0
  406213:	call   0x793bba81
  406218:	(bad)  
  406219:	dec    esi
  40621a:	mov    cl,0xe7
  40621c:	jno    0x4061dc
  40621e:	mov    fs,WORD PTR [esi+ebp*4+0x5eabdb4f]
  406225:	ss pop esp
  406227:	inc    ecx
  406228:	mov    al,ds:0xe64a21ee
  40622d:	mul    ebp
  40622f:	ficomp WORD PTR [eax]
  406231:	add    eax,esp
  406233:	cs out 0x88,ax
  406237:	inc    edx
  406238:	bound  esp,QWORD PTR [ebp+0x5]
  40623b:	test   BYTE PTR [eax-0x7c],ah
  40623e:	cmc    
  40623f:	mov    edi,0x83253945
  406244:	hlt    
  406245:	sub    ch,BYTE PTR [edi+0x3c094aee]
  40624b:	imul   ebx,DWORD PTR [eax],0xffffffd9
  40624e:	stos   BYTE PTR es:[edi],al
  40624f:	call   0xe5a01cf
  406254:	push   es
  406255:	cwde   
  406256:	ud1    edi,DWORD PTR [edx+0x60]
  40625a:	fcomp  st(5)
  40625c:	pop    esp
  40625d:	inc    ebx
  40625e:	xor    BYTE PTR [ebp-0x80],0xe
  406262:	cli    
  406263:	mov    dh,0xb2
  406265:	sar    BYTE PTR [edx],cl
  406267:	arpl   WORD PTR [edi+0xe],ax
  40626a:	fs and eax,0x4c43e2d9
  406270:	scas   eax,DWORD PTR es:[edi]
  406271:	mov    DWORD PTR ds:0x847e5685,ebp
  406277:	push   ds
  406278:	hlt    
  406279:	jge    0x4062bc
  40627b:	adc    edi,DWORD PTR [edx]
  40627d:	xchg   ebx,eax
  40627e:	clc    
  40627f:	mov    al,0xbf
  406281:	aad    0x1f
  406283:	mov    esp,0xcf70947d
  406288:	int    0x9b
  40628a:	out    dx,eax
  40628b:	(bad)
  40628e:	icebp  
  40628f:	lds    eax,FWORD PTR [edi]
  406291:	mov    ds:0xe753377d,eax
  406296:	ret    
  406297:	out    0xc7,al
  406299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40629a:	jno    0x40630c
  40629c:	mov    ds:0xbd61a5f8,al
  4062a1:	push   ss
  4062a2:	push   ecx
  4062a3:	sbb    BYTE PTR [ecx+edx*2+0x337d7876],dl
  4062aa:	pop    ds
  4062ab:	cwde   
  4062ac:	mov    ebp,esp
  4062ae:	push   es
  4062af:	fnsave ds:0x1340d880
  4062b5:	cmp    DWORD PTR [ebx],ebx
  4062b7:	inc    ebx
  4062b8:	cld    
  4062b9:	sar    dh,0xfe
  4062bc:	loopne 0x406290
  4062be:	cld    
  4062bf:	and    ecx,DWORD PTR [ebp+ebp*8+0x30a789dd]
  4062c6:	addr16 sub eax,0x2a9f2a54
  4062cc:	fidiv  WORD PTR [eax-0x12c09867]
  4062d2:	adc    DWORD PTR [edi+0x9],0xffffff80
  4062d6:	mov    ds:0x97efb3e0,eax
  4062db:	sub    eax,0x58d29a7d
  4062e0:	adc    eax,0x1654780d
  4062e5:	cmp    BYTE PTR [ebx-0x26c84d55],bh
  4062eb:	test   DWORD PTR [edx-0x24],0x515f83ca
  4062f2:	mov    ebx,0xce2cb0de
  4062f7:	add    ah,BYTE PTR [edi]
  4062f9:	scas   eax,DWORD PTR es:[edi]
  4062fa:	jp     0x4062b2
  4062fc:	rcl    eax,0x78
  4062ff:	les    edx,FWORD PTR [eax]
  406301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406302:	cmp    edi,edi
  406304:	pusha  
  406305:	jge    0x4062d5
  406307:	pop    ebx
  406308:	loope  0x4062dd
  40630a:	bound  ebx,QWORD PTR [ebp+0x16c8be6f]
  406310:	fs retf 0xbd2d
  406314:	test   BYTE PTR [esi-0x4503c819],al
  40631a:	jns    0x4062d4
  40631c:	lock out dx,al
  40631e:	xchg   ebx,eax
  40631f:	ja     0x406325
  406321:	not    ah
  406323:	or     eax,0x7e8e9f84
  406328:	imul   eax
  40632a:	xchg   edx,eax
  40632b:	cdq    
  40632c:	xlat   BYTE PTR ds:[ebx]
  40632d:	mov    al,ds:0xcf8a3268
  406332:	inc    esp
  406333:	in     eax,0xea
  406335:	fisubr WORD PTR [ecx]
  406337:	dec    ecx
  406338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406339:	jmp    0x48fe:0xb5486c4
  406340:	dec    ebp
  406341:	jnp    0x406303
  406343:	fwait
  406344:	cmp    al,0xa4
  406346:	jmp    0x5527e838
  40634b:	sar    BYTE PTR [esi],1
  40634d:	sub    dh,BYTE PTR [eax-0x3e]
  406350:	fidiv  WORD PTR [edi]
  406352:	xor    eax,0xbe1e3faf
  406357:	mov    WORD PTR [ebp+0x17],es
  40635a:	sbb    edi,DWORD PTR [esi]
  40635c:	adc    BYTE PTR [eax-0x44225119],0x4b
  406363:	xor    al,0xcc
  406365:	sbb    DWORD PTR [ebx],ebp
  406367:	pop    es
  406368:	sbb    DWORD PTR [edi-0x417af8e5],eax
  40636e:	adc    ebx,esp
  406370:	fisttp DWORD PTR [ecx]
  406372:	ja     0x40636f
  406374:	xor    ah,0xc6
  406377:	inc    edi
  406378:	push   ds
  406379:	gs loopne 0x40631e
  40637c:	pop    esp
  40637d:	scas   eax,DWORD PTR es:[edi]
  40637e:	ret    
  40637f:	push   edx
  406380:	leave  
  406381:	aam    0x3
  406383:	or     eax,0x752a5a40
  406388:	lea    ebx,[edi-0x13]
  40638b:	push   eax
  40638c:	jge    0x4063b4
  40638e:	fwait
  40638f:	imul   ebp,DWORD PTR [ecx],0x399fe8e9
  406395:	pop    es
  406396:	test   al,0xb5
  406398:	xchg   ebp,eax
  406399:	inc    BYTE PTR [eax+0x464dc5b]
  40639f:	mov    edx,0xa7e70cf1
  4063a4:	xchg   esp,eax
  4063a5:	push   eax
  4063a6:	es nop
  4063a8:	repz xor DWORD PTR [ebp+edx*8+0x14d9cd60],0xeeb45484
  4063b4:	push   esi
  4063b5:	adc    ebp,eax
  4063b7:	outs   dx,DWORD PTR ds:[esi]
  4063b8:	dec    eax
  4063b9:	addr16 push 0x3e
  4063bc:	jl     0x40643c
  4063be:	shl    BYTE PTR [edx],cl
  4063c0:	and    al,0x9f
  4063c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c3:	sub    edi,ecx
  4063c5:	pop    eax
  4063c6:	int3   
  4063c7:	xor    DWORD PTR [edi+esi*8-0x69cf8b2d],edi
  4063ce:	jmp    0x6dd45ba1
  4063d3:	popf   
  4063d4:	inc    edx
  4063d5:	sbb    DWORD PTR [edi+0x2f],esp
  4063d8:	pop    eax
  4063d9:	xor    edi,DWORD PTR [ecx]
  4063db:	push   esi
  4063dc:	out    dx,eax
  4063dd:	mov    al,0xb5
  4063df:	and    DWORD PTR [ebx-0x3d436e1e],esp
  4063e5:	adc    DWORD PTR gs:[eax],0xffffffe0
  4063e9:	out    0xc,al
  4063eb:	adc    eax,0xc19b2697
  4063f0:	in     al,dx
  4063f1:	fcmovnbe st,st(6)
  4063f3:	or     al,0xcb
  4063f5:	cli    
  4063f6:	lods   eax,DWORD PTR ds:[esi]
  4063f7:	or     al,0x98
  4063f9:	xor    edx,DWORD PTR [esp+eiz*4]
  4063fc:	pop    edi
  4063fd:	fmul   QWORD PTR [esp+eiz*4-0x58792a73]
  406404:	int    0x3e
  406406:	jne    0x406472
  406408:	aad    0xeb
  40640a:	aas    
  40640b:	sbb    bl,al
  40640d:	imul   ecx,edx,0xffffff9d
  406410:	adc    BYTE PTR [ebp+0x51],0x96
  406414:	ds adc eax,0x1023493c
  40641a:	retf   
  40641b:	pop    es
  40641c:	adc    eax,0x152106b9
  406421:	lods   al,BYTE PTR ds:[esi]
  406422:	cli    
  406423:	or     DWORD PTR [edx-0x7d1a0669],ebp
  406429:	mov    DWORD PTR [edi+ebp*1],ebp
  40642c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40642d:	xor    eax,0xf928f6f2
  406432:	out    0xef,eax
  406434:	fst    QWORD PTR [eax-0x62]
  406437:	add    eax,0xc65dbe84
  40643c:	jg     0x406434
  40643e:	jnp    0x40642b
  406440:	dec    esp
  406441:	add    dh,BYTE PTR [ecx-0x57eb8a3c]
  406447:	aam    0x70
  406449:	ret    
  40644a:	sub    DWORD PTR [edx],ebx
  40644c:	scas   al,BYTE PTR es:[edi]
  40644d:	or     ebp,edx
  40644f:	cmc    
  406450:	or     al,0x4c
  406452:	iret   
  406453:	jg     0x40646e
  406455:	xor    al,0x4
  406457:	es inc eax
  406459:	xchg   ebx,esp
  40645b:	div    DWORD PTR [edx+edi*4]
  40645e:	and    DWORD PTR [ebp-0x28],edx
  406461:	pop    ebx
  406462:	pop    edi
  406463:	add    DWORD PTR [edi+0x4eb7117],ebp
  406469:	lods   al,BYTE PTR ds:[esi]
  40646a:	shr    DWORD PTR [ebp-0x5c61b118],0x2a
  406471:	mov    edx,0xc09e614d
  406476:	pop    es
  406477:	stos   BYTE PTR es:[edi],al
  406478:	in     eax,dx
  406479:	fdiv   QWORD PTR [esp+ecx*4-0x69]
  40647d:	push   esp
  40647e:	cmp    cl,BYTE PTR [ecx]
  406480:	mov    al,0x8c
  406482:	mov    dh,0xdc
  406484:	es mov ebx,0x9f0d83f5
  40648a:	in     eax,dx
  40648b:	pop    ss
  40648c:	pop    ebx
  40648d:	xor    al,0x8c
  40648f:	sbb    al,0xf4
  406491:	inc    esi
  406492:	icebp  
  406493:	xchg   esp,eax
  406494:	add    ch,bl
  406496:	iret   
  406497:	ret    0x8f09
  40649a:	es cmc 
  40649c:	jb     0x406517
  40649e:	jb     0x4064a9
  4064a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064a1:	pusha  
  4064a2:	outs   dx,DWORD PTR ds:[esi]
  4064a3:	sbb    BYTE PTR [edi-0x31],bl
  4064a6:	push   eax
  4064a7:	jl     0x406511
  4064a9:	mov    ecx,0x5e738df7
  4064ae:	mov    dl,0x95
  4064b0:	inc    edi
  4064b1:	xor    al,0xdf
  4064b3:	mov    bl,0xed
  4064b5:	mov    eax,0x71832c35
  4064ba:	je     0x40645c
  4064bc:	das    
  4064bd:	push   cs
  4064be:	pop    ecx
  4064bf:	sub    BYTE PTR [edx-0x57],0x52
  4064c3:	ja     0x406534
  4064c5:	add    al,0x6e
  4064c7:	(bad)  
  4064c8:	or     DWORD PTR [ebx-0x7a],esp
  4064cb:	cmp    bl,BYTE PTR [eax+eiz*8]
  4064ce:	not    DWORD PTR [edi-0x44]
  4064d1:	mov    esp,0x8cba223b
  4064d6:	mov    ds:0x73a57628,al
  4064db:	out    0x8e,al
  4064dd:	ficomp DWORD PTR ds:0x4ff23b0
  4064e3:	pop    esi
  4064e4:	mov    dl,0x93
  4064e6:	xchg   ebx,eax
  4064e7:	jb     0x406538
  4064e9:	mov    bh,0x86
  4064eb:	add    ecx,DWORD PTR [ebx]
  4064ed:	fadd   DWORD PTR [edi+0x4e713033]
  4064f3:	stc    
  4064f4:	shr    BYTE PTR [ecx-0x4a],cl
  4064f7:	cmp    ah,BYTE PTR [ecx+0x7d]
  4064fa:	retf   0x8d5b
  4064fd:	mov    bl,0xec
  4064ff:	stos   BYTE PTR es:[edi],al
  406500:	mov    ebp,0x90cd6b1e
  406505:	and    al,0xe
  406507:	inc    eax
  406508:	jecxz  0x406561
  40650a:	xor    al,0x38
  40650c:	xor    DWORD PTR [ebx+0x439d035],0xffffffbd
  406513:	addr16 mov bl,0x22
  406516:	adc    eax,0x435f526f
  40651b:	mov    ebx,0xa85a2648
  406520:	mov    esi,DWORD PTR [edi+0x72]
  406523:	das    
  406524:	dec    esi
  406525:	jmp    0x4064d9
  406527:	fwait
  406528:	and    bl,BYTE PTR [edx+0x72145651]
  40652e:	and    bl,BYTE PTR [edx+0xf744725]
  406534:	mov    DWORD PTR [eax],esp
  406536:	jecxz  0x406552
  406538:	or     BYTE PTR [eax-0x10],ch
  40653b:	neg    DWORD PTR [edi-0x68de9102]
  406541:	dec    eax
  406542:	je     0x406571
  406544:	jbe    0x4064cf
  406546:	xlat   BYTE PTR ds:[ebx]
  406547:	or     ebx,esi
  406549:	mov    dl,0xe1
  40654b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40654c:	es mov eax,0x2845119e
  406552:	jbe    0x406524
  406554:	dec    ebx
  406555:	adc    DWORD PTR [eax+ebx*8+0x2fa249fc],ebp
  40655c:	addr16 int3 
  40655e:	xchg   esp,eax
  40655f:	sbb    ah,BYTE PTR [ecx-0x6a]
  406562:	push   0xe
  406564:	out    dx,eax
  406565:	stc    
  406566:	dec    eax
  406567:	out    dx,eax
  406568:	xor    dh,bl
  40656a:	not    BYTE PTR [edx-0x33b0020d]
  406570:	mov    dh,0xd7
  406572:	dec    edx
  406573:	xchg   esp,eax
  406574:	or     esp,edx
  406576:	fwait
  406577:	mov    eax,0x2451c849
  40657c:	iret   
  40657d:	and    ecx,DWORD PTR [edi+0x47]
  406580:	cmp    dl,BYTE PTR [esi+0x4a5f402b]
  406586:	xor    eax,0xb0be5709
  40658b:	mov    esi,0x2239bbdd
  406590:	stc    
  406591:	cmp    DWORD PTR [eax+0x4c],ecx
  406594:	sub    dh,dh
  406596:	fistp  WORD PTR ds:0x89242548
  40659c:	pop    esp
  40659d:	fidivr DWORD PTR ds:0xa1c547f3
  4065a3:	adc    eax,ecx
  4065a5:	ds mov eax,0x8a407d8b
  4065ab:	enter  0x5585,0x30
  4065af:	outs   dx,BYTE PTR ds:[esi]
  4065b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065b1:	mov    eax,ebp
  4065b3:	and    al,0x7a
  4065b5:	dec    ebx
  4065b6:	shl    DWORD PTR [ebx],1
  4065b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065b9:	jno    0x406584
  4065bb:	push   ds
  4065bc:	sbb    bl,al
  4065be:	mov    ds:0xf1f732db,al
  4065c3:	mov    dh,0xac
  4065c5:	sub    DWORD PTR [edx],0xffffff92
  4065c8:	outs   dx,DWORD PTR ds:[esi]
  4065c9:	inc    esi
  4065ca:	rcl    BYTE PTR [ebp+eax*1+0x417ee998],0x21
  4065d2:	mov    cl,0x2b
  4065d4:	inc    esp
  4065d5:	sub    eax,0xcd77b57c
  4065da:	sub    DWORD PTR [ebp+ebp*4+0x3],0xffffffd9
  4065df:	adc    ebx,DWORD PTR ds:[eax-0x204c7b67]
  4065e6:	ja     0x4065b6
  4065e8:	fild   QWORD PTR [eax+0x27a34947]
  4065ee:	xor    edx,DWORD PTR [eax-0x65a3cb00]
  4065f4:	addr16 pop esi
  4065f6:	mov    cl,0xe2
  4065f8:	lods   al,BYTE PTR ds:[esi]
  4065f9:	out    0x11,al
  4065fb:	mov    esp,0x9e6c2327
  406600:	sub    al,0x83
  406602:	aad    0x92
  406604:	or     al,0x5b
  406606:	jnp    0x4065f5
  406608:	jno    0x406621
  40660a:	sbb    BYTE PTR [ecx+0x1a],ah
  40660d:	pop    eax
  40660e:	mov    ds:0xb710f3a2,al
  406613:	mov    bh,0xad
  406615:	outs   dx,DWORD PTR ds:[esi]
  406616:	add    BYTE PTR [esi],0x9f
  406619:	in     al,0x58
  40661b:	inc    DWORD PTR [edi]
  40661d:	or     eax,0xc41f25f4
  406622:	sar    BYTE PTR [ebp-0x29],0x3
  406626:	sbb    ch,BYTE PTR [edx]
  406628:	dec    ebp
  406629:	fadd   DWORD PTR [eax+0x17]
  40662c:	or     dl,al
  40662e:	enter  0x691b,0x47
  406632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406633:	push   0x34
  406635:	ins    DWORD PTR es:[edi],dx
  406636:	mov    edi,0x714acbfb
  40663b:	cmp    al,0xff
  40663d:	aam    0xd3
  40663f:	pop    es
  406640:	scas   eax,DWORD PTR es:[edi]
  406641:	loopne 0x40662e
  406643:	jno    0x4065ce
  406645:	fs lahf 
  406647:	adc    al,0x3
  406649:	ret    0xd583
  40664c:	push   ecx
  40664d:	fisub  DWORD PTR [ecx]
  40664f:	cmc    
  406650:	gs aaa 
  406652:	mov    edx,esp
  406654:	test   dh,bh
  406656:	inc    ebx
  406657:	(bad)  
  406658:	call   DWORD PTR [ebp+0x7ed8f100]
  40665e:	sbb    edx,DWORD PTR [ebx+ecx*1]
  406661:	loope  0x406692
  406663:	mov    dl,0xc6
  406665:	dec    edi
  406666:	cmp    eax,0x6a906453
  40666b:	scas   al,BYTE PTR es:[edi]
  40666c:	mov    ch,0xb
  40666e:	jo     0x406680
  406670:	int3   
  406671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406672:	stos   BYTE PTR es:[edi],al
  406673:	outs   dx,DWORD PTR ds:[esi]
  406674:	rcl    BYTE PTR [ebp+0x69],0xfb
  406678:	pop    es
  406679:	xchg   ebp,eax
  40667a:	stc    
  40667b:	(bad)  
  40667c:	fidiv  DWORD PTR [ecx-0x34]
  40667f:	and    bh,BYTE PTR [edx+0x58a4031]
  406685:	mov    ah,0xc4
  406687:	inc    edx
  406688:	rcr    esi,cl
  40668a:	cmp    DWORD PTR [esi-0x7b871c4c],edx
  406690:	push   0xffffff95
  406692:	cs xchg ecx,eax
  406694:	pop    eax
  406695:	jb     0x406706
  406697:	loop   0x4066d2
  406699:	ins    BYTE PTR es:[edi],dx
  40669a:	retf   
  40669b:	pop    ds
  40669c:	ret    0x4040
  40669f:	add    esi,ecx
  4066a1:	rcl    DWORD PTR ds:0x90c0883c,cl
  4066a7:	xor    eax,0xd52e91f2
  4066ac:	int3   
  4066ad:	fs mov esi,0x54a8a111
  4066b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066b4:	mov    ss,WORD PTR [ebx]
  4066b6:	or     ebx,DWORD PTR [esi+0x70d00819]
  4066bc:	push   ss
  4066bd:	scas   al,BYTE PTR es:[edi]
  4066be:	mov    ebp,0x41422a00
  4066c3:	enter  0x9e1f,0xf6
  4066c7:	jo     0x406710
  4066c9:	push   ebp
  4066ca:	sub    al,BYTE PTR [edx-0x1e]
  4066cd:	adc    DWORD PTR [ebx+0x7],eax
  4066d0:	aaa    
  4066d1:	inc    ebp
  4066d2:	jp     0x4066c9
  4066d4:	jge    0x406746
  4066d6:	pop    ds
  4066d7:	push   ecx
  4066d8:	mov    cl,0x3
  4066da:	xchg   esp,eax
  4066db:	push   es
  4066dc:	loopne 0x406709
  4066de:	add    BYTE PTR [ecx+0x13ec58c0],dl
  4066e4:	int3   
  4066e5:	or     DWORD PTR [ebx],ebx
  4066e7:	dec    ebx
  4066e8:	jp     0x4066e9
  4066ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066eb:	out    dx,al
  4066ec:	iret   
  4066ed:	jo     0x406728
  4066ef:	mov    ch,0xb9
  4066f1:	mov    ds:0xa51ebfc7,al
  4066f6:	ds iret 
  4066f8:	aas    
  4066f9:	pop    eax
  4066fa:	jne    0x406748
  4066fc:	mov    gs,WORD PTR [edi]
  4066fe:	repz inc ebp
  406700:	retf   0xffe7
  406703:	mov    dl,0x7b
  406705:	add    ebx,DWORD PTR [edi-0x43]
  406708:	into   
  406709:	mov    dh,0xaf
  40670b:	iret   
  40670c:	packsswb mm0,QWORD PTR [ebx-0x48f275ac]
  406713:	jo     0x4066f1
  406715:	lea    edx,[edx]
  406717:	inc    edx
  406718:	sub    eax,0x714cb9d5
  40671d:	cmp    eax,0x1dd5cfe8
  406722:	push   cs
  406723:	imul   eax,DWORD PTR [eax+eiz*2+0xd],0x30a645d5
  40672b:	mov    esi,0xa051dfae
  406730:	div    BYTE PTR [edx]
  406732:	xor    ah,dh
  406734:	pop    ebx
  406735:	add    dl,BYTE PTR [ebx]
  406737:	pop    ds
  406738:	mov    edi,0x22abb3ae
  40673d:	fadd   QWORD PTR [ecx+0x40]
  406740:	fucomip st,st(5)
  406742:	cmp    eax,0xbe9e2f7e
  406747:	mul    BYTE PTR [ecx]
  406749:	sub    BYTE PTR [eax],ah
  40674b:	jecxz  0x40676b
  40674d:	int    0x94
  40674f:	pusha  
  406750:	std    
  406751:	xchg   edx,eax
  406752:	cmp    BYTE PTR [ebp-0x299e903d],ch
  406758:	mov    eax,ds:0x534953f7
  40675d:	or     DWORD PTR [ecx],0x6c9ec54f
  406763:	push   ss
  406764:	cmp    ah,cl
  406766:	xchg   edx,eax
  406767:	int    0x78
  406769:	dec    ecx
  40676a:	sub    eax,DWORD PTR [ebp+ecx*1+0x1fbb733b]
  406771:	mov    ds:0x13369ffd,eax
  406776:	xor    eax,0xcb09cadc
  40677b:	jnp    0x406719
  40677d:	mov    dh,0xa4
  40677f:	xchg   ebx,eax
  406780:	sbb    BYTE PTR [edx+ebx*4+0x291973c4],dl
  406787:	int3   
  406788:	sbb    esp,DWORD PTR [ebp-0x21]
  40678b:	les    ebp,FWORD PTR ds:0x79f9b4fe
  406791:	inc    esp
  406792:	dec    esp
  406793:	inc    esp
  406794:	xor    BYTE PTR [ebx+0x5a],bl
  406797:	inc    edi
  406798:	test   DWORD PTR [eax-0x69503e0e],ecx
  40679e:	sub    esp,DWORD PTR [ebx-0x7e23c9a0]
  4067a4:	test   esp,0x1854cb6a
  4067aa:	lds    edi,FWORD PTR [ebx+0xebcf42f]
  4067b0:	call   0x54c:0x81f09e75
  4067b7:	mov    al,ds:0xfd4b4846
  4067bc:	fldenv [esp+ebx*1]
  4067bf:	std    
  4067c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067c1:	into   
  4067c2:	jo     0x4067ea
  4067c4:	and    BYTE PTR [esi+0x6],bh
  4067c7:	push   ebx
  4067c8:	repz in eax,0x77
  4067cb:	mov    edi,0xfc489c45
  4067d0:	mov    al,ds:0x153fb7f4
  4067d5:	and    al,0xac
  4067d7:	cmp    eax,0x8a67ccb6
  4067dc:	and    eax,0x738bf2a
  4067e1:	dec    edx
  4067e2:	mov    ch,BYTE PTR [edi+0x97a2a5]
  4067e8:	or     DWORD PTR [esi],ebp
  4067ea:	or     BYTE PTR [ebx+0x707cd232],ah
  4067f0:	stc    
  4067f1:	das    
  4067f2:	test   BYTE PTR [edi],bl
  4067f4:	outs   dx,BYTE PTR ds:[esi]
  4067f5:	cli    
  4067f6:	mov    eax,0x6a2ecebc
  4067fb:	push   eax
  4067fc:	pop    eax
  4067fd:	mov    al,0xdc
  4067ff:	jnp    0x4067c7
  406801:	(bad)  
  406802:	int3   
  406803:	rcr    ch,cl
  406805:	loop   0x4067e5
  406807:	add    al,0x5c
  406809:	xchg   ebp,eax
  40680a:	mov    cl,0x3a
  40680c:	fwait
  40680d:	xor    DWORD PTR [ecx+0x743ee1aa],ebx
  406813:	mov    DWORD PTR [edi+0x6225c3ea],edx
  406819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40681a:	or     ebp,DWORD PTR [ebx-0x4e]
  40681d:	sar    esp,0x46
  406820:	add    BYTE PTR [esi-0x29ecff3],0x6e
  406827:	push   es
  406828:	xchg   ebx,eax
  406829:	inc    ebp
  40682a:	pop    ecx
  40682b:	je     0x406844
  40682d:	nop
  40682e:	sbb    BYTE PTR [edx-0x14],0xd
  406832:	dec    ecx
  406833:	dec    ebp
  406834:	out    0xbf,al
  406836:	dec    edx
  406837:	fistp  WORD PTR [eax+ebx*1-0x48]
  40683b:	jg     0x406847
  40683d:	lods   al,BYTE PTR ds:[esi]
  40683e:	push   ss
  40683f:	jle    0x4067f6
  406841:	sub    ebp,DWORD PTR [ecx-0x241b3921]
  406847:	sub    DWORD PTR [edx+0x11831dcf],edx
  40684d:	stos   BYTE PTR es:[edi],al
  40684e:	cmp    ecx,DWORD PTR [ecx+0x18f041e2]
  406854:	and    BYTE PTR [esi-0x29abf363],0x39
  40685b:	dec    esp
  40685c:	cmp    DWORD PTR [ebx+0x6f],ebp
  40685f:	jle    0x40685e
  406861:	sbb    al,0x31
  406863:	dec    ebx
  406865:	mov    al,0xe4
  406867:	mov    edi,0x8432cb0
  40686c:	pop    ss
  40686d:	xlat   BYTE PTR ds:[ebx]
  40686e:	pop    ebx
  40686f:	xchg   edi,eax
  406870:	nop
  406871:	xchg   ebp,eax
  406872:	jae    0x406824
  406874:	xchg   edi,eax
  406875:	fs pushf 
  406877:	push   esi
  406878:	outs   dx,DWORD PTR ds:[esi]
  406879:	loope  0x406898
  40687b:	xlat   BYTE PTR ds:[ebx]
  40687c:	test   BYTE PTR ds:[ecx],0xa8
  406880:	scas   eax,DWORD PTR es:[edi]
  406881:	lods   eax,DWORD PTR ds:[esi]
  406882:	ins    DWORD PTR es:[edi],dx
  406883:	push   edi
  406884:	pop    es
  406885:	sub    esi,DWORD PTR [edi]
  406887:	repz inc eax
  406889:	push   cs
  40688a:	ret    0x80b
  40688d:	(bad)  
  40688e:	(bad)  
  40688f:	adc    ch,BYTE PTR [edx+0x39e6fee9]
  406895:	retf   0x489f
  406898:	ss test eax,0x57d5733a
  40689e:	mov    esp,0xddb3bc5f
  4068a3:	cdq    
  4068a4:	pop    edi
  4068a5:	mov    ds:0xbe1e3c6,al
  4068aa:	inc    edx
  4068ab:	into   
  4068ac:	pop    ss
  4068ad:	mov    ch,0x1a
  4068af:	add    eax,0x781af528
  4068b4:	sbb    cl,BYTE PTR [edi-0x52adc4de]
  4068ba:	sbb    eax,DWORD PTR [ebx-0x3499ae79]
  4068c0:	jmp    0xa486ed54
  4068c5:	add    dh,BYTE PTR [eax-0x5e412c23]
  4068cb:	and    al,0x70
  4068cd:	add    al,0xdc
  4068cf:	popa   
  4068d0:	lods   eax,DWORD PTR ds:[esi]
  4068d1:	adc    BYTE PTR [edi+eiz*1+0x2a],ch
  4068d5:	sbb    esi,eax
  4068d7:	adc    edi,DWORD PTR [ecx]
  4068d9:	xor    BYTE PTR [ebx],ch
  4068db:	cwde   
  4068dc:	sub    al,0xc4
  4068de:	aas    
  4068df:	sti    
  4068e0:	xor    bl,dh
  4068e2:	inc    esp
  4068e3:	push   ebx
  4068e4:	aaa    
  4068e5:	repz inc eax
  4068e7:	popf   
  4068e8:	das    
  4068e9:	dec    ecx
  4068ea:	mov    WORD PTR [ebx-0x42],?
  4068ed:	imul   BYTE PTR ds:0x4a276ccc
  4068f3:	repz test BYTE PTR [edx+0x7de8820b],al
  4068fa:	sbb    cl,BYTE PTR [ebx]
  4068fc:	or     al,0xfd
  4068fe:	outs   dx,BYTE PTR ds:[esi]
  4068ff:	pop    edx
  406900:	sahf   
  406901:	ret    
  406902:	cmp    esi,edi
  406904:	rcr    al,1
  406906:	icebp  
  406907:	push   ecx
  406908:	repnz mov DWORD PTR [esi-0x1bfaa15c],esp
  40690f:	call   0xc8d3:0xb49db0e3
  406916:	dec    ecx
  406917:	pop    ebx
  406918:	jae    0x406966
  40691a:	adc    DWORD PTR [eax-0x32931a89],edi
  406920:	mov    esi,0x972d51de
  406925:	jp     0x4068c2
  406927:	adc    ecx,eax
  406929:	xchg   BYTE PTR [edx-0x6d],ch
  40692c:	aad    0xfe
  40692e:	inc    edi
  40692f:	(bad)  
  406930:	je     0x4068d4
  406932:	add    bh,ah
  406934:	(bad)  
  406936:	sub    eax,DWORD PTR [ecx-0x6a]
  406939:	mov    ds:0x807269db,al
  40693e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40693f:	sbb    eax,0x697060ff
  406944:	and    al,ch
  406946:	dec    ebx
  406947:	sbb    dl,cl
  406949:	mov    ds:0xdfd3a0dc,eax
  40694e:	mov    dh,0xb4
  406950:	mov    cl,0x69
  406952:	es mov esi,es
  406955:	sub    esi,DWORD PTR [ebx+0x78d06155]
  40695b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40695c:	pusha  
  40695d:	adc    BYTE PTR [ebx-0x5a922b1d],cl
  406963:	ror    esi,0xa9
  406966:	int3   
  406967:	(bad)  
  406968:	int    0x6a
  40696a:	ja     0x406947
  40696c:	adc    BYTE PTR [ebx+0x534346c8],dl
  406972:	mov    eax,ds:0xe2bc6f87
  406977:	and    eax,0x815f6a28
  40697c:	and    BYTE PTR ss:[ecx-0x6a],0x5
  406981:	mov    dh,0x31
  406983:	jne    0x4069c7
  406985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406986:	jg     0x4069ac
  406988:	je     0x40696b
  40698a:	add    dh,cl
  40698c:	sbb    eax,DWORD PTR [esi+0x8]
  40698f:	mov    bl,0xe8
  406991:	ror    BYTE PTR [ebx-0x2f8863c9],1
  406997:	rcl    BYTE PTR [ebx+0x40c16679],1
  40699d:	stc    
  40699e:	jl     0x4069f9
  4069a0:	ret    
  4069a1:	and    BYTE PTR [ebx+0x6e216fb3],ch
  4069a7:	rcr    BYTE PTR [ebp+0x2d],1
  4069aa:	cdq    
  4069ab:	mov    dh,0x9e
  4069ad:	xor    bl,BYTE PTR [edi+0x5c1a4c2d]
  4069b3:	push   0x94906cf8
  4069b8:	in     al,dx
  4069b9:	push   0x31b45330
  4069be:	es loopne 0x4069fd
  4069c1:	push   ss
  4069c2:	aas    
  4069c3:	pop    ss
  4069c4:	fwait
  4069c5:	or     BYTE PTR [edi],al
  4069c7:	sub    DWORD PTR [ecx+0x4],esi
  4069ca:	push   ss
  4069cb:	inc    ebx
  4069cc:	cmp    al,0xad
  4069ce:	mov    ds:0x459f06cf,al
  4069d3:	dec    ebx
  4069d4:	(bad)  
  4069d5:	test   eax,0x74c91de3
  4069da:	sub    DWORD PTR [esi-0x11aba736],esp
  4069e0:	adc    al,0x7c
  4069e2:	pop    esi
  4069e3:	fcmovne st,st(3)
  4069e5:	dec    ecx
  4069e6:	xchg   DWORD PTR [edx],esi
  4069e8:	add    DWORD PTR ds:0xf0cb47a7,ebx
  4069ee:	dec    ebx
  4069ef:	jb     0x406979
  4069f1:	loop   0x406a47
  4069f3:	dec    edi
  4069f4:	push   ebx
  4069f5:	mov    bh,0x2e
  4069f7:	pop    ds
  4069f8:	push   es
  4069f9:	fdivp  st(4),st
  4069fb:	(bad)  
  4069fc:	xchg   esi,eax
  4069fd:	inc    eax
  4069fe:	jbe    0x3beebfe8
  406a04:	fst    QWORD PTR gs:[esi]
  406a07:	fwait
  406a08:	push   ebx
  406a09:	pop    edi
  406a0a:	(bad)  
  406a0b:	int3   
  406a0c:	inc    esi
  406a0d:	sbb    ebp,DWORD PTR [ecx]
  406a0f:	mov    dl,BYTE PTR [esi]
  406a11:	cwde   
  406a12:	rcl    bl,1
  406a14:	cmp    bl,bl
  406a16:	mov    cl,0x45
  406a18:	clc    
  406a19:	sahf   
  406a1a:	mov    ds:0xa89ff76b,eax
  406a1f:	aas    
  406a20:	ins    DWORD PTR es:[edi],dx
  406a21:	dec    eax
  406a22:	cmc    
  406a23:	in     eax,dx
  406a24:	test   al,0x41
  406a26:	jb     0x406a71
  406a28:	scas   eax,DWORD PTR es:[edi]
  406a29:	int    0xa3
  406a2b:	jbe    0x406a93
  406a2d:	jb     0x4069af
  406a2f:	rcl    BYTE PTR [ecx-0x11e2e96e],0xdc
  406a36:	xchg   ecx,eax
  406a37:	mov    BYTE PTR [edi-0x33],bl
  406a3a:	jne    0x406a96
  406a3c:	(bad)  
  406a3d:	xor    ecx,DWORD PTR [ebx+ebx*8-0x2f]
  406a41:	fs mov bl,0x1c
  406a44:	xchg   ecx,eax
  406a45:	icebp  
  406a46:	inc    ebx
  406a47:	pusha  
  406a48:	cvttps2pi mm7,xmm0
  406a4b:	jne    0x4069e6
  406a4d:	xchg   ebp,eax
  406a4e:	pushf  
  406a4f:	pop    esp
  406a50:	adc    eax,0x6dab5d82
  406a55:	jns    0x4069e1
  406a57:	mul    bp
  406a5a:	test   al,0xba
  406a5c:	rcl    BYTE PTR [ecx+0x65],cl
  406a5f:	fisubr DWORD PTR [esi-0x17bcd086]
  406a65:	(bad)  
  406a66:	hlt    
  406a67:	mov    edx,0xc383839b
  406a6c:	sbb    BYTE PTR [edi-0x6b305d85],cl
  406a72:	out    dx,al
  406a73:	jne    0x406a17
  406a75:	icebp  
  406a76:	cmp    eax,0x602d4f81
  406a7b:	xchg   DWORD PTR [edi+eax*2-0xff98e7a],ebp
  406a82:	jae    0x406a40
  406a84:	and    al,al
  406a86:	xchg   ecx,eax
  406a87:	mov    esp,0x3c969bc0
  406a8c:	push   edx
  406a8d:	inc    esp
  406a8e:	int3   
  406a8f:	scas   al,BYTE PTR es:[edi]
  406a90:	cmp    eax,0x5ac50977
  406a95:	cs and eax,0x43ff62a9
  406a9b:	aam    0xbc
  406a9d:	mov    dh,0x3f
  406a9f:	outs   dx,BYTE PTR ds:[esi]
  406aa0:	xchg   ebx,eax
  406aa1:	imul   edi,DWORD PTR cs:[eax+ebx*2+0xf7088e5],0x3684b911
  406aad:	aas    
  406aae:	mov    ah,0x19
  406ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ab1:	or     ecx,esi
  406ab3:	shr    eax,0xb7
  406ab6:	fisttp WORD PTR [edi-0x74ed9ba7]
  406abc:	xchg   esp,eax
  406abd:	dec    ecx
  406abe:	bound  ecx,QWORD PTR [esi-0x7071e64]
  406ac4:	(bad)  
  406ac5:	push   esp
  406ac6:	(bad)  
  406ac8:	(bad)  
  406aca:	out    0x33,al
  406acc:	and    BYTE PTR [ebp-0x6f],al
  406acf:	push   eax
  406ad0:	out    dx,al
  406ad1:	or     eax,0x5de8aaf5
  406ad6:	push   ecx
  406ad7:	pop    ebp
  406ad8:	sar    DWORD PTR [esi+edi*2-0x331701d2],0xd3
  406ae0:	mov    bl,BYTE PTR [ecx-0x2da1359c]
  406ae6:	test   BYTE PTR [edx-0x24],al
  406ae9:	mov    bl,0xc9
  406aeb:	retf   
  406aec:	jns    0x406b23
  406aee:	(bad)  
  406aef:	push   ds
  406af0:	shl    BYTE PTR [edx-0x18],1
  406af3:	xchg   edi,ebx
  406af5:	data16 int 0x77
  406af8:	mov    edx,0xf5d88401
  406afd:	dec    ecx
  406afe:	in     eax,dx
  406aff:	mov    eax,0xd4444795
  406b04:	mov    ebx,0x718b4e10
  406b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b0a:	in     al,dx
  406b0b:	sahf   
  406b0c:	inc    esp
  406b0d:	inc    esp
  406b0e:	push   esp
  406b0f:	nop
  406b10:	jmp    0x2d1660d1
  406b15:	mov    eax,cs
  406b17:	xchg   BYTE PTR [ebp+0xa],bl
  406b1a:	pop    edi
  406b1b:	sub    BYTE PTR [eax+edx*4],bh
  406b1e:	sbb    dh,BYTE PTR [edi]
  406b20:	cs test al,0xc2
  406b23:	repnz push edi
  406b25:	sbb    al,BYTE PTR [edi-0x72057c1]
  406b2b:	and    esi,DWORD PTR [esi]
  406b2d:	mov    ds:0x167ea74f,eax
  406b32:	mov    dh,0xf1
  406b34:	icebp  
  406b35:	in     eax,0x15
  406b37:	in     eax,0xbf
  406b39:	dec    eax
  406b3a:	frstor [ecx]
  406b3c:	cwde   
  406b3d:	add    al,0x24
  406b3f:	xor    BYTE PTR [eax+0x61],ah
  406b42:	push   eax
  406b43:	iret   
  406b44:	es pop ebp
  406b46:	fcom   st(6)
  406b48:	dec    edx
  406b49:	ins    BYTE PTR es:[edi],dx
  406b4a:	push   ebp
  406b4b:	nop
  406b4c:	stc    
  406b4d:	(bad)  
  406b4e:	retf   0xadc0
  406b51:	sub    edx,eax
  406b53:	gs pop edi
  406b55:	fnstcw WORD PTR [ecx+0x6ff48fff]
  406b5b:	mov    bh,0x47
  406b5d:	stos   DWORD PTR es:[edi],eax
  406b5e:	mov    DWORD PTR [esi+edi*1+0x0],ecx
  406b62:	mov    WORD PTR [edi],?
  406b64:	adc    DWORD PTR [edi-0xe8c4169],0xd1fdd106
  406b6e:	stos   BYTE PTR es:[edi],al
  406b6f:	sub    al,0x9d
  406b71:	adc    esi,ebx
  406b73:	xor    esi,DWORD PTR [eax-0x55]
  406b76:	es sub eax,0xc61db31c
  406b7c:	xor    edi,DWORD PTR fs:[edi-0xd]
  406b80:	test   eax,0x85c762f9
  406b85:	xchg   esp,eax
  406b86:	ret    0x1174
  406b89:	enter  0x7e,0x8a
  406b8d:	je     0x406bcb
  406b8f:	pop    ecx
  406b90:	rol    edi,cl
  406b92:	hlt    
  406b93:	clc    
  406b94:	pop    ds
  406b95:	dec    ebx
  406b96:	add    al,BYTE PTR [ecx+0x435a0bb6]
  406b9c:	jle    0x406bcb
  406b9e:	fucomip st,st(4)
  406ba0:	in     eax,0x7a
  406ba2:	aad    0x1
  406ba4:	cli    
  406ba5:	pop    ebp
  406ba6:	adc    BYTE PTR [ebx-0x19033be0],al
  406bac:	gs inc ebp
  406bae:	inc    esp
  406baf:	pop    ecx
  406bb0:	jne    0x406ba8
  406bb2:	sub    al,0x24
  406bb4:	mov    al,ds:0x69297f55
  406bb9:	stc    
  406bba:	cmp    eax,0xa28344b1
  406bbf:	jg     0x406c28
  406bc1:	add    eax,0xbd0acfd8
  406bc6:	rcl    BYTE PTR [esi+0x2fdfe355],0xb7
  406bcd:	je     0x406c32
  406bcf:	outs   dx,DWORD PTR ds:[esi]
  406bd0:	fdivr  QWORD PTR [ebp-0x2c]
  406bd3:	jns    0x406b91
  406bd5:	jns    0x406b8b
  406bd7:	pushw  0xff85
  406bda:	xchg   ebp,eax
  406bdb:	fucomip st,st(3)
  406bdd:	cmp    DWORD PTR ds:0x919e21bb,ebp
  406be3:	lock lea edx,[edi]
  406be6:	cwde   
  406be7:	or     esi,DWORD PTR [ecx+0x4962b129]
  406bed:	imul   esp,DWORD PTR [ebp-0x3b],0xb37ebb47
  406bf4:	(bad)  
  406bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bf6:	out    0x3e,eax
  406bf8:	inc    ebp
  406bf9:	bound  ecx,QWORD PTR [ebp-0x79ca838f]
  406bff:	mov    edi,0x484e9b96
  406c04:	pusha  
  406c05:	lds    edx,FWORD PTR [ecx-0x40]
  406c08:	mov    DWORD PTR [esi+0x19],ebx
  406c0b:	dec    ecx
  406c0c:	repz cld 
  406c0e:	inc    edx
  406c0f:	jbe    0x406c78
  406c11:	lahf   
  406c12:	sahf   
  406c13:	adc    al,BYTE PTR [ebx-0x5acd6243]
  406c19:	lods   eax,DWORD PTR ds:[esi]
  406c1a:	leave  
  406c1b:	(bad)  
  406c1c:	shl    DWORD PTR [esi],1
  406c1e:	cdq    
  406c1f:	in     al,dx
  406c20:	xor    eax,0x4a12f38b
  406c25:	repnz sbb eax,ecx
  406c28:	not    DWORD PTR [ecx]
  406c2a:	pop    edi
  406c2b:	int3   
  406c2c:	add    al,0xfd
  406c2e:	loope  0x406bf0
  406c30:	cmc    
  406c31:	xchg   edx,eax
  406c32:	sub    eax,DWORD PTR [ebx-0x2fdfc317]
  406c38:	dec    esp
  406c39:	rcr    dl,cl
  406c3b:	jae    0x406bc9
  406c3d:	int3   
  406c3e:	pop    edi
  406c3f:	ins    BYTE PTR es:[edi],dx
  406c40:	sub    BYTE PTR [edx+0x1476718b],cl
  406c46:	pop    ds
  406c47:	mov    DWORD PTR [edi],edi
  406c49:	push   ecx
  406c4a:	repnz ds mov bl,cl
  406c4e:	les    edi,FWORD PTR [esi]
  406c50:	repz mov ecx,ds
  406c53:	pop    dx
  406c55:	sbb    esp,ebx
  406c57:	std    
  406c58:	add    DWORD PTR [ebx+0x72607880],ebx
  406c5e:	push   es
  406c5f:	call   0x630:0xb281e178
  406c66:	fbld   TBYTE PTR [eax]
  406c68:	xchg   esp,eax
  406c69:	mov    ah,BYTE PTR [ebp-0x6e01202b]
  406c6f:	scas   al,BYTE PTR es:[edi]
  406c70:	and    eax,0x96c0f5ce
  406c75:	shl    BYTE PTR [esi-0x5c],0x67
  406c79:	ins    BYTE PTR es:[edi],dx
  406c7a:	mov    cl,0x9c
  406c7c:	cmp    dh,0xd0
  406c7f:	stos   BYTE PTR es:[edi],al
  406c80:	and    BYTE PTR [edx-0x65],bl
  406c83:	jmp    0x406c70
  406c85:	(bad)  
  406c86:	xlat   BYTE PTR ds:[ebx]
  406c87:	or     DWORD PTR [eax-0x7a],0x119f89b5
  406c8e:	inc    ebx
  406c8f:	cs jmp 0xd0ea2dec
  406c95:	pop    ecx
  406c96:	scas   eax,DWORD PTR es:[edi]
  406c97:	and    eax,0x97156ea5
  406c9c:	pop    es
  406c9d:	jle    0x406c9c
  406c9f:	sbb    bh,BYTE PTR [ecx-0xd374206]
  406ca5:	js     0x406c3b
  406ca7:	dec    esi
  406ca8:	adc    DWORD PTR [edx],edi
  406caa:	adc    eax,0xbb1d59c1
  406caf:	push   ebp
  406cb0:	jmp    0x406d29
  406cb2:	(bad)  [esi+0x43]
  406cb5:	ins    DWORD PTR es:[edi],dx
  406cb6:	cmp    DWORD PTR [ebp-0x5af5d280],esp
  406cbc:	jne    0x406ca8
  406cbe:	call   0x65c7:0x40f22ab7
  406cc5:	bound  edi,QWORD PTR [eax]
  406cc7:	stc    
  406cc8:	push   ecx
  406cc9:	std    
  406cca:	cwde   
  406ccb:	mov    DWORD PTR [edi+0x7],esp
  406cce:	cmp    al,BYTE PTR [edx+edx*2]
  406cd1:	xchg   ecx,eax
  406cd2:	xor    dh,BYTE PTR [ecx+edi*2+0x62da59c7]
  406cd9:	sar    DWORD PTR [edi+0x51],0xa7
  406cdd:	leave  
  406cde:	in     eax,0xe5
  406ce0:	mov    al,ds:0x2b90414d
  406ce5:	cmp    al,0x3f
  406ce7:	in     eax,dx
  406ce8:	jns    0x406ce7
  406cea:	fcmovnbe st,st(6)
  406cec:	xor    DWORD PTR [eax-0x70],ecx
  406cef:	les    edi,FWORD PTR [eax+0x20]
  406cf2:	xchg   ebx,eax
  406cf3:	stos   DWORD PTR es:[edi],eax
  406cf4:	mov    bl,0x22
  406cf6:	push   ss
  406cf7:	out    dx,eax
  406cf8:	pusha  
  406cf9:	or     DWORD PTR [ecx+0x6b],ebp
  406cfc:	and    al,0x5e
  406cfe:	add    DWORD PTR [edi+edi*4],ebp
  406d01:	ret    0xb13d
  406d04:	cs push 0xfdc8ff17
  406d0a:	mov    esi,0xba0f194d
  406d0f:	xchg   ebx,eax
  406d10:	jno    0x406cec
  406d12:	loope  0x406d49
  406d14:	xor    BYTE PTR [edx-0x7c],dl
  406d17:	pop    esp
  406d18:	(bad)  [edi+0x75]
  406d1b:	popa   
  406d1c:	jg     0x406cda
  406d1e:	test   DWORD PTR [ecx],ecx
  406d20:	inc    ecx
  406d21:	mov    DWORD PTR [ebp+0x33fd3475],ebp
  406d27:	xor    bl,0xeb
  406d2a:	sti    
  406d2b:	push   es
  406d2c:	dec    ebp
  406d2d:	mov    ?,ecx
  406d2f:	retf   
  406d30:	mov    al,0x19
  406d32:	(bad)  
  406d34:	retf   
  406d35:	jae    0x406d3a
  406d37:	xor    esi,ecx
  406d39:	rcl    BYTE PTR [ebp+edx*2+0x24622916],0xfd
  406d41:	cli    
  406d42:	jnp    0x406d31
  406d44:	out    dx,eax
  406d45:	xor    al,0xfd
  406d47:	repz and al,0x3c
  406d4a:	sub    BYTE PTR [esi+0x7840a8d7],0x6b
  406d51:	fmulp  st(5),st
  406d53:	inc    edi
  406d54:	fs out dx,eax
  406d56:	fisubr DWORD PTR [ebx-0x73815a32]
  406d5c:	xchg   esi,eax
  406d5d:	out    0xd9,al
  406d5f:	scas   al,BYTE PTR es:[edi]
  406d60:	add    BYTE PTR [ecx-0x7f18b70b],bh
  406d66:	setp   BYTE PTR [edi-0x3c]
  406d6a:	ret    
  406d6b:	cmp    DWORD PTR [esi],edx
  406d6d:	inc    esp
  406d6e:	js     0x406dd4
  406d70:	dec    esi
  406d71:	push   ebp
  406d72:	pop    ds
  406d73:	outs   dx,BYTE PTR ds:[esi]
  406d74:	cmc    
  406d75:	repz mov edi,0x36e0154d
  406d7b:	enter  0xe6d8,0x87
  406d7f:	pop    es
  406d80:	aam    0x3
  406d82:	mov    eax,ds:0x265749ed
  406d87:	ins    BYTE PTR es:[edi],dx
  406d88:	icebp  
  406d89:	fisttp QWORD PTR [ebp+0x6b]
  406d8c:	pop    es
  406d8d:	leave  
  406d8e:	(bad)  
  406d8f:	and    bh,BYTE PTR [eax+ebp*2-0x3]
  406d93:	ficomp WORD PTR [ebx-0x3e5a1357]
  406d99:	daa    
  406d9a:	add    ebp,DWORD PTR [edi+0x7f]
  406d9d:	xlat   BYTE PTR ds:[ebx]
  406d9e:	and    al,0xa5
  406da0:	das    
  406da1:	xor    BYTE PTR [esi],bl
  406da3:	sub    BYTE PTR [eax],al
  406da5:	jle    0x406d92
  406da7:	mov    bl,0x32
  406da9:	ror    esi,cl
  406dab:	xor    eax,0xdd834c8f
  406db0:	xchg   esi,eax
  406db1:	fs dec ebp
  406db3:	das    
  406db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406db5:	repz sbb edi,ebp
  406db8:	imul   esi,DWORD PTR [ecx],0x38f3a56f
  406dbe:	(bad)  
  406dbf:	cld    
  406dc0:	mov    bl,0xae
  406dc2:	(bad)  
  406dc3:	or     BYTE PTR [ebp+0xd523bb7],bl
  406dc9:	mov    bh,0x3c
  406dcb:	jne    0x406dce
  406dcd:	pusha  
  406dce:	sbb    dh,dh
  406dd0:	and    ch,al
  406dd2:	sahf   
  406dd3:	fidivr DWORD PTR [edx-0x1a]
  406dd6:	sbb    BYTE PTR [eax],bl
  406dd8:	or     eax,0x32355b43
  406ddd:	and    al,0x39
  406ddf:	hlt    
  406de0:	shl    DWORD PTR [esp+edx*4-0x7a],1
  406de4:	fistp  QWORD PTR [edi+0x105c5c55]
  406dea:	cdq    
  406deb:	arpl   di,ax
  406ded:	adc    esi,ebp
  406def:	loope  0x406d84
  406df1:	popf   
  406df2:	jg     0x406e5e
  406df4:	scas   al,BYTE PTR es:[edi]
  406df5:	getsec 
  406df7:	ror    BYTE PTR [eax+0x4bea32a6],1
  406dfd:	leave  
  406dfe:	jmp    0xa67c:0xed7eca51
  406e05:	mov    ch,0xd5
  406e07:	xchg   edi,eax
  406e08:	inc    ebp
  406e09:	jns    0x406e40
  406e0b:	cmp    eax,0x8a8721ae
  406e10:	fdivr  DWORD PTR [ebx-0x20]
  406e13:	int3   
  406e14:	sub    DWORD PTR [esi],edx
  406e16:	cld    
  406e17:	(bad)  
  406e18:	jmp    0xdc8f:0x39fd60e0
  406e1f:	dec    ecx
  406e20:	ja     0x406e87
  406e22:	cs jmp 0x406dcd
  406e25:	push   ds
  406e26:	xchg   ebp,eax
  406e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e28:	nop
  406e29:	push   edx
  406e2a:	sbb    ah,BYTE PTR [edx]
  406e2c:	in     eax,dx
  406e2d:	call   0x24f0:0x9e583ed1
  406e34:	or     ebp,DWORD PTR [ebp+0x1b045c4d]
  406e3a:	(bad)  
  406e3b:	mov    edx,0x811e1133
  406e40:	cwde   
  406e41:	adc    DWORD PTR ds:0xc3b46b87,esi
  406e47:	aaa    
  406e48:	mov    ecx,edx
  406e4a:	push   edx
  406e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e4c:	sub    DWORD PTR [esi],edi
  406e4e:	mov    ch,0xd5
  406e50:	fs xchg edx,eax
  406e52:	es mov bl,0x32
  406e55:	jmp    0x406e61
  406e57:	rcl    BYTE PTR [edx-0x16],1
  406e5a:	es jge 0x406ed0
  406e5d:	xchg   esp,eax
  406e5e:	jp     0x406e7c
  406e60:	aad    0x5d
  406e62:	ds js  0x406df7
  406e65:	scas   eax,DWORD PTR es:[edi]
  406e66:	jmp    0x406ea9
  406e68:	add    esp,DWORD PTR [ecx-0x21473db7]
  406e6e:	enter  0x4b23,0xbd
  406e72:	jp     0x406e3d
  406e74:	inc    esp
  406e75:	and    al,0x71
  406e77:	stos   DWORD PTR es:[edi],eax
  406e78:	test   BYTE PTR [ebx+0x57],0x9c
  406e7c:	das    
  406e7d:	inc    ebx
  406e7e:	ret    0xf39a
  406e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e82:	cmc    
  406e83:	inc    ebp
  406e84:	cdq    
  406e85:	adc    eax,0x65cd15ac
  406e8a:	mov    bl,0x2f
  406e8c:	inc    ebp
  406e8d:	xor    cl,BYTE PTR [ebx+0x7a115f18]
  406e93:	ins    DWORD PTR es:[edi],dx
  406e94:	mov    eax,0xe19b354b
  406e99:	outs   dx,DWORD PTR ds:[esi]
  406e9a:	lahf   
  406e9b:	ret    0xb371
  406e9e:	inc    esi
  406e9f:	(bad)  
  406ea0:	(bad)  
  406ea1:	cmp    DWORD PTR [edi],esi
  406ea3:	xor    eax,0x599cbd2f
  406ea8:	xchg   esi,eax
  406ea9:	lods   al,BYTE PTR ds:[esi]
  406eaa:	dec    ax
  406eac:	cdq    
  406ead:	jne    0x406eed
  406eaf:	jl     0x406f0e
  406eb1:	xor    bh,BYTE PTR [ecx+0x19]
  406eb4:	(bad)  
  406eb5:	pop    ecx
  406eb6:	cmp    edi,edx
  406eb8:	pop    ecx
  406eb9:	mov    ebx,0x629b9c52
  406ebe:	adc    eax,0x81d7b161
  406ec3:	mov    ah,0x96
  406ec5:	jnp    0x406e89
  406ec7:	xchg   ebp,eax
  406ec8:	punpckhbw mm1,QWORD PTR [edi]
  406ecb:	rcr    esp,0xd1
  406ece:	sbb    esp,DWORD PTR es:[ecx]
  406ed1:	and    eax,0x2a67d24d
  406ed6:	lods   al,BYTE PTR ds:[esi]
  406ed7:	outs   dx,DWORD PTR ds:[esi]
  406ed8:	cld    
  406ed9:	aam    0x96
  406edb:	stos   BYTE PTR es:[edi],al
  406edc:	(bad)  
  406edd:	xlat   BYTE PTR ds:[ebx]
  406ede:	adc    eax,0x8e582b18
  406ee3:	jnp    0x406eed
  406ee5:	and    eax,0x963d68fd
  406eea:	cmc    
  406eeb:	xchg   ecx,eax
  406eec:	test   DWORD PTR [ebx],esp
  406eee:	loop   0x406ed2
  406ef0:	dec    ebp
  406ef1:	push   ds
  406ef2:	lods   eax,DWORD PTR ds:[esi]
  406ef3:	cmp    eax,0x438b58bd
  406ef8:	add    ebx,DWORD PTR [ebp-0x6efd894]
  406efe:	es and dh,al
  406f01:	pushf  
  406f02:	sub    eax,0x79628d3a
  406f07:	mov    ds:0xd1962e40,al
  406f0c:	dec    edx
  406f0d:	je     0x406e95
  406f0f:	adc    eax,0x56cc0e6f
  406f14:	ins    BYTE PTR es:[edi],dx
  406f15:	fidivr WORD PTR [edi-0x5c792307]
  406f1b:	xchg   ebp,eax
  406f1c:	retf   0x2ff4
  406f1f:	sar    eax,0xb
  406f22:	dec    ebp
  406f23:	xor    ecx,ecx
  406f25:	cmp    bl,BYTE PTR [esi]
  406f27:	adc    esi,DWORD PTR [esi-0x35]
  406f2a:	lock jl 0x406ec3
  406f2d:	xchg   ebx,eax
  406f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f2f:	and    al,0x48
  406f31:	inc    esi
  406f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f33:	push   ebx
  406f34:	iret   
  406f35:	dec    esi
  406f36:	add    al,0x27
  406f38:	ret    0xbbe2
  406f3b:	pop    ecx
  406f3c:	nop
  406f3d:	ficom  DWORD PTR [ebp+0x1]
  406f40:	pop    ebp
  406f41:	loopne 0x406fba
  406f43:	test   al,0xec
  406f45:	daa    
  406f46:	xlat   BYTE PTR ds:[ebx]
  406f47:	mov    edi,0xbcea3222
  406f4c:	out    dx,al
  406f4d:	jle    0x406f80
  406f4f:	mov    ebx,0x7f348765
  406f54:	aad    0x62
  406f56:	into   
  406f57:	aaa    
  406f58:	adc    esp,DWORD PTR [edi-0x63]
  406f5b:	adc    eax,0x408f194e
  406f60:	jmp    0x406f58
  406f62:	mov    bh,BYTE PTR [ebx-0x45cc295]
  406f68:	sub    ebx,DWORD PTR [eax-0x3b4c83ec]
  406f6e:	loope  0x406f62
  406f70:	push   eax
  406f71:	mul    BYTE PTR [edi+edi*2+0x77]
  406f75:	mov    cl,0x6d
  406f77:	push   ecx
  406f78:	es mov ah,0x5c
  406f7b:	in     al,dx
  406f7c:	loop   0x406fe9
  406f7e:	xor    ah,BYTE PTR [eax-0x15871e2c]
  406f84:	push   edi
  406f85:	rcl    BYTE PTR ds:0x4ac234ea,cl
  406f8b:	sub    eax,0x1c6a2592
  406f90:	adc    DWORD PTR [ebx+0x6f8fd6c7],0xbf9490f5
  406f9a:	lahf   
  406f9b:	ss popf 
  406f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f9e:	sar    dh,cl
  406fa0:	mul    DWORD PTR ds:0x6d4bdf44
  406fa6:	cmp    cl,bh
  406fa8:	or     dh,dh
  406faa:	daa    
  406fab:	ret    0x691f
  406fae:	xchg   ecx,eax
  406faf:	leave  
  406fb0:	cli    
  406fb1:	sub    eax,0xd16a3b22
  406fb6:	jb     0x406fb4
  406fb8:	into   
  406fb9:	mov    eax,ds:0x2ca5637f
  406fbe:	or     ebp,DWORD PTR [edx]
  406fc0:	mov    DWORD PTR [ebx],ebx
  406fc2:	jmp    0x4ff2eb3e
  406fc7:	mov    al,0x2a
  406fc9:	mov    bh,0x9e
  406fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fcc:	inc    ecx
  406fcd:	sub    DWORD PTR [edx+0x41],edx
  406fd0:	add    bl,BYTE PTR [ecx-0x73768910]
  406fd6:	pushf  
  406fd7:	int3   
  406fd8:	sub    DWORD PTR [eax-0x240ba1c],edi
  406fde:	adc    ch,cl
  406fe0:	jno    0x406f7d
  406fe2:	mov    ecx,0xb126bafe
  406fe7:	cmp    ch,ch
  406fe9:	imul   eax,DWORD PTR [esi+0x3e],0x5c7956bf
  406ff0:	popf   
  406ff1:	shl    BYTE PTR [ebx-0x62bcd6b6],0x44
  406ff8:	shl    BYTE PTR [ebp-0x59f793],1
  406ffe:	xlat   BYTE PTR ds:[ebx]
  406fff:	enter  0xf1c,0x47
  407003:	(bad)  
  407005:	neg    BYTE PTR [edx-0x173e7725]
  40700b:	sbb    esp,ecx
  40700d:	and    DWORD PTR [eax-0x3c5eca2c],esp
  407013:	inc    esi
  407014:	rcr    DWORD PTR [edx-0x32],cl
  407017:	clc    
  407018:	adc    al,0xad
  40701a:	pop    ds
  40701b:	cmp    eax,0x4f316664
  407020:	sub    DWORD PTR [edi-0x66bed7d0],ecx
  407026:	xlat   BYTE PTR ds:[ebx]
  407027:	ret    
  407028:	push   edx
  407029:	in     eax,0xb
  40702b:	jecxz  0x40707f
  40702d:	std    
  40702e:	cli    
  40702f:	retf   
  407030:	test   al,0x24
  407032:	cmp    esi,edi
  407034:	dec    edx
  407035:	das    
  407036:	or     DWORD PTR [ecx],0xe63d030
  40703c:	xlat   BYTE PTR ds:[ebx]
  40703d:	repnz popf 
  40703f:	out    0x9a,al
  407041:	jg     0x40709a
  407043:	rcl    esi,1
  407045:	sbb    ah,ah
  407047:	imul   ecx
  407049:	push   cs
  40704a:	les    ebx,FWORD PTR [ebp+0x1fcc5184]
  407050:	sub    edi,esi
  407052:	aas    
  407053:	xlat   BYTE PTR ds:[ebx]
  407054:	pop    edi
  407055:	mov    BYTE PTR [ebp+0x4e],0x18
  407059:	or     esi,DWORD PTR [ebx+ecx*8+0x480dcd86]
  407060:	sbb    DWORD PTR [ebp+0xa],edx
  407063:	lock pop ecx
  407065:	sti    
  407066:	outs   dx,DWORD PTR ds:[esi]
  407067:	mov    ds:0x470a71ca,al
  40706c:	jno    0x4070e1
  40706e:	dec    esp
  40706f:	int3   
  407070:	ret    
  407071:	sub    BYTE PTR [ebx-0x792af2f5],ch
  407077:	shr    DWORD PTR [edx+0x2f574785],0x22
  40707e:	add    al,0x4d
  407080:	adc    edx,DWORD PTR [ebp+0x646fc94e]
  407086:	add    eax,0xa8fa5101
  40708b:	and    al,0x78
  40708d:	sbb    eax,0x5191791f
  407092:	scas   al,BYTE PTR es:[edi]
  407093:	push   0xffffffe8
  407095:	icebp  
  407096:	add    ebp,DWORD PTR [ebx]
  407098:	mov    ds:0xf1eb4f3a,eax
  40709d:	icebp  
  40709e:	adc    al,0x4b
  4070a0:	fisubr DWORD PTR [eax]
  4070a2:	inc    eax
  4070a3:	adc    BYTE PTR [ecx-0x10f1b024],bh
  4070a9:	fstp   QWORD PTR [edi-0x4e]
  4070ac:	mov    dh,BYTE PTR [ebx+0x7bdafc38]
  4070b2:	add    al,0xbf
  4070b4:	mov    esp,0x20e25976
  4070b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070ba:	push   es
  4070bb:	and    bl,ah
  4070bd:	mov    dl,0xef
  4070bf:	aaa    
  4070c0:	sub    al,BYTE PTR [eax+0x48a3dbd3]
  4070c6:	test   DWORD PTR [ebp-0x6b],edi
  4070c9:	xor    BYTE PTR [esi],ah
  4070cb:	xor    bl,BYTE PTR [esp+eiz*2+0x42f5171b]
  4070d2:	xchg   esi,eax
  4070d3:	fdiv   DWORD PTR [ebp-0x747f1652]
  4070d9:	xor    eax,0x8a3872f2
  4070de:	mov    ah,0x97
  4070e0:	mov    esi,0x40a5e7ce
  4070e5:	ja     0x407151
  4070e7:	inc    ecx
  4070e8:	pop    ds
  4070e9:	add    bh,ah
  4070eb:	fidiv  DWORD PTR ds:0xe652aa19
  4070f1:	jge    0x407088
  4070f3:	out    0xfa,eax
  4070f5:	iret   
  4070f6:	sub    ch,BYTE PTR [edi-0x68]
  4070f9:	test   DWORD PTR [ebp-0x22],0xcd11edee
  407100:	es pop ds
  407102:	enter  0xf321,0xcd
  407106:	es icebp 
  407108:	les    ebp,FWORD PTR [edi+0x404de6bd]
  40710e:	push   es
  40710f:	icebp  
  407110:	cmp    al,0xe4
  407112:	and    DWORD PTR [eax-0x6e77b15f],edi
  407118:	outs   dx,DWORD PTR ds:[esi]
  407119:	fwait
  40711a:	ins    DWORD PTR es:[edi],dx
  40711b:	jmp    0x4f44:0x9457926d
  407122:	test   al,0xf3
  407124:	mov    ds,WORD PTR [edi]
  407126:	push   esi
  407127:	dec    edx
  407128:	and    al,0x5e
  40712a:	inc    edi
  40712b:	or     al,0xa3
  40712d:	or     al,0x33
  40712f:	cli    
  407130:	repz repz push esp
  407133:	mov    cl,0xa1
  407135:	mov    edi,0x48fc520e
  40713a:	jns    0x407181
  40713c:	push   0xcf64a259
  407141:	sub    eax,DWORD PTR ds:0x794425fd
  407147:	mov    bh,0xaa
  407149:	pop    ecx
  40714a:	or     DWORD PTR [ebx],esp
  40714c:	cmc    
  40714d:	push   edx
  40714e:	mov    ecx,0x3035f981
  407153:	xchg   ebp,eax
  407154:	or     DWORD PTR [ebx],0xea5b9585
  40715a:	and    cl,BYTE PTR [edi-0x62]
  40715d:	call   0x4876:0xc6940eb0
  407164:	cmp    eax,0x6ac67175
  407169:	sbb    ebp,edx
  40716b:	inc    eax
  40716c:	jo     0x4071b5
  40716e:	arpl   WORD PTR [edi+0x21],sp
  407171:	imul   edi,DWORD PTR [bx+di],0xbbc9281
  407178:	inc    esp
  407179:	shl    DWORD PTR [edx+0x30704b7d],0x5c
  407180:	test   DWORD PTR [ecx+0x71],ebp
  407183:	adc    eax,0x65aba02d
  407188:	in     eax,0x95
  40718a:	(bad)  
  40718d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40718e:	mov    BYTE PTR [esi+0x29],dl
  407191:	xor    BYTE PTR [esi-0x297b6e04],dh
  407197:	xrstor [edx]
  40719a:	push   es
  40719b:	jo     0x407210
  40719d:	inc    eax
  40719e:	nop
  40719f:	jnp    0x407208
  4071a1:	stos   BYTE PTR es:[edi],al
  4071a2:	inc    edx
  4071a3:	pusha  
  4071a4:	aam    0x36
  4071a6:	sub    BYTE PTR [esi+eax*2],0x4f
  4071aa:	fbld   TBYTE PTR [ebx-0x5b]
  4071ad:	pop    edi
  4071ae:	xor    eax,0x4e2b0269
  4071b3:	loop   0x4071a8
  4071b5:	sbb    al,0x28
  4071b7:	add    eax,0xbb9b1047
  4071bc:	ror    DWORD PTR [eax-0x70c79af8],0xb7
  4071c3:	test   DWORD PTR [esi+ebp*2-0x53],edi
  4071c7:	cmc    
  4071c8:	mov    edi,esp
  4071ca:	sub    eax,0xc2018772
  4071cf:	pop    ebp
  4071d0:	pop    esi
  4071d1:	sar    BYTE PTR [esi-0x64],1
  4071d4:	or     dh,BYTE PTR [ebx]
  4071d6:	aad    0x8
  4071d8:	cld    
  4071d9:	jl     0x4071f4
  4071db:	cdq    
  4071dc:	pop    eax
  4071dd:	jge    0x4071a1
  4071df:	push   ebx
  4071e0:	add    esi,esi
  4071e2:	mov    eax,0xdcc4cd5d
  4071e7:	jae    0x40722f
  4071e9:	mov    ds:0x8b4d9184,eax
  4071ee:	lahf   
  4071ef:	loop   0x4071d0
  4071f1:	mov    WORD PTR [ebx-0x1669c63],gs
  4071f7:	and    BYTE PTR [ebp+0x602583fc],0x63
  4071fe:	mov    BYTE PTR [edx],0xa0
  407201:	xchg   edi,eax
  407202:	lods   ax,WORD PTR ds:[esi]
  407204:	pop    ebp
  407205:	test   esp,0x3f190ece
  40720b:	pop    ebx
  40720c:	jbe    0x4071f3
  40720e:	lods   eax,DWORD PTR ds:[esi]
  40720f:	mov    dh,0x82
  407211:	pop    ds
  407212:	mov    DWORD PTR [edx-0x1851bdc8],esp
  407218:	jecxz  0x407274
  40721a:	pop    edx
  40721b:	stc    
  40721c:	bound  edx,QWORD PTR [edx]
  40721e:	fsubr  st,st(0)
  407220:	cmp    ebp,edi
  407222:	les    esi,FWORD PTR ds:0xab0bbfa8
  407228:	pusha  
  407229:	cmp    BYTE PTR [esi+0x58e051a7],ah
  40722f:	setns  BYTE PTR [ebx+0x4f]
  407233:	mov    eax,0x9699924f
  407238:	frstor [edx]
  40723a:	push   cs
  40723b:	mov    bl,0xbc
  40723d:	mov    ebp,0xf41709e1
  407242:	xchg   ecx,eax
  407243:	adc    al,0x3d
  407245:	push   ds
  407246:	xor    DWORD PTR [edx+ebx*2-0x39],edi
  40724a:	or     DWORD PTR [ebx+ecx*2+0x5f8a54cb],edx
  407251:	(bad)  
  407252:	adc    al,0xf4
  407254:	push   0x19
  407256:	sub    BYTE PTR [ebx-0x4184814d],0xe9
  40725d:	ffreep st(3)
  40725f:	dec    esi
  407260:	arpl   sp,bx
  407262:	pushf  
  407263:	inc    ebp
  407264:	sub    eax,0x78f40a09
  407269:	nop
  40726a:	shl    ebp,cl
  40726c:	fnstcw WORD PTR ds:0x4fb0144d
  407272:	(bad)  
  407273:	call   0xeb4e:0x7f2f7db6
  40727a:	inc    ebx
  40727b:	add    bl,ah
  40727d:	mov    BYTE PTR [esp+esi*4+0x5b0d30bd],dh
  407284:	jno    0x40726b
  407286:	(bad)  
  407288:	push   edi
  407289:	cmp    edi,edx
  40728b:	fs push edi
  40728d:	loop   0x407280
  40728f:	sub    eax,DWORD PTR [eax+ecx*4+0x3e62f76f]
  407296:	enter  0x274a,0x7c
  40729a:	rcr    BYTE PTR [edi-0x8e43985],1
  4072a0:	clc    
  4072a1:	ror    al,cl
  4072a3:	sub    esp,DWORD PTR [edi-0x71]
  4072a6:	cs or  eax,0x48e1273
  4072ac:	sub    dl,BYTE PTR [edx]
  4072ae:	inc    esp
  4072af:	(bad)  
  4072b1:	jecxz  0x4072bc
  4072b3:	ds hlt 
  4072b5:	mov    dh,0x3b
  4072b7:	add    al,0x5b
  4072b9:	xchg   edi,eax
  4072ba:	shl    DWORD PTR [edi+0x3d93a084],cl
  4072c0:	xlat   BYTE PTR ds:[ebx]
  4072c1:	xchg   DWORD PTR [ecx+0x10],ebx
  4072c4:	out    0x2d,al
  4072c6:	push   esp
  4072c7:	mov    edx,0xfb5ff38
  4072cc:	xchg   ebp,eax
  4072cd:	inc    DWORD PTR [ebp+0x368b862b]
  4072d3:	jnp    0x4072a2
  4072d5:	loop   0x407288
  4072d7:	mov    al,0x49
  4072d9:	popa   
  4072da:	pop    esp
  4072db:	and    edi,DWORD PTR [edi-0x1c]
  4072de:	cmp    DWORD PTR [edx],edi
  4072e0:	into   
  4072e1:	xchg   ebp,eax
  4072e2:	cli    
  4072e3:	push   ecx
  4072e4:	loopne 0x407326
  4072e6:	nop
  4072e7:	dec    edx
  4072e8:	loop   0x4072d5
  4072ea:	cli    
  4072eb:	sbb    eax,0xa161aa9b
  4072f0:	inc    ecx
  4072f1:	cmp    al,0x5d
  4072f3:	lods   eax,DWORD PTR ds:[esi]
  4072f4:	inc    esi
  4072f5:	mov    dh,0xa2
  4072f7:	rcl    ebx,0x2
  4072fa:	or     ch,ah
  4072fc:	loope  0x4072a8
  4072fe:	leave  
  4072ff:	inc    ebp
  407300:	in     al,0xd2
  407302:	je     0x407298
  407304:	xchg   DWORD PTR [eax-0x46446364],ebx
  40730a:	mov    dh,0xd7
  40730c:	addr16 (bad) 
  40730e:	cli    
  40730f:	sbb    ch,ch
  407311:	std    
  407312:	nop
  407313:	pop    edi
  407314:	xchg   edi,eax
  407315:	mov    esp,0x81aadd76
  40731a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40731b:	xor    edi,edx
  40731d:	jmp    0x4072ea
  40731f:	pop    esp
  407320:	and    eax,0xfecc454b
  407325:	dec    eax
  407326:	inc    eax
  407327:	lahf   
  407328:	iret   
  407329:	xchg   edi,eax
  40732a:	xor    ebx,DWORD PTR [eax+0x42f847f4]
  407330:	test   DWORD PTR [edx+0x43],eax
  407333:	leave  
  407334:	js     0x407386
  407336:	icebp  
  407337:	sbb    DWORD PTR [edx+0xc],0xffffffda
  40733b:	scas   al,BYTE PTR es:[edi]
  40733c:	lods   al,BYTE PTR ds:[esi]
  40733d:	retf   0x7dbd
  407340:	pushf  
  407341:	je     0x4072e5
  407343:	cmp    eax,0x96bbd3a6
  407348:	cmc    
  407349:	mov    ds:0x3b2fbca2,al
  40734e:	call   0x2374:0x5c3bda6
  407355:	rcl    ebx,0xd8
  407358:	xor    BYTE PTR [eax-0x54],al
  40735b:	std    
  40735c:	(bad)  
  40735d:	cmp    ch,BYTE PTR cs:0xe12f9e89
  407364:	dec    edi
  407365:	jb     0x40734e
  407367:	adc    BYTE PTR [ebp+eiz*4-0x3f0c1d5a],al
  40736e:	imul   ecx,DWORD PTR [edx+0x5c83b3f7],0x6f9fbe00
  407378:	cld    
  407379:	arpl   WORD PTR cs:[eax],bp
  40737c:	xor    ah,bl
  40737e:	(bad)  
  40737f:	retf   0x9d03
  407382:	dec    ebx
  407383:	test   dl,0x51
  407386:	std    
  407387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407388:	mov    eax,ds:0x1cda6447
  40738d:	addr16 jb 0x40740c
  407390:	pop    edi
  407391:	cmp    DWORD PTR [ecx-0x305a1bd],ebx
  407397:	xchg   ebp,eax
  407398:	cli    
  407399:	loopne 0x4073b6
  40739b:	cmp    eax,0xbde47ed0
  4073a0:	rol    DWORD PTR [eax],1
  4073a2:	or     eax,0x20354abd
  4073a7:	mov    WORD PTR fs:[eax+ebp*1+0x5ecbff6d],ss
  4073af:	nop
  4073b0:	sub    dl,BYTE PTR [esi-0x1fe8db7b]
  4073b6:	retf   
  4073b7:	xchg   ecx,eax
  4073b8:	xor    DWORD PTR [edx],edi
  4073ba:	mov    ds:0xaa424ee7,al
  4073bf:	add    eax,0xdf58ecf2
  4073c4:	mov    cl,BYTE PTR [esi-0xb4a5aea]
  4073ca:	cmc    
  4073cb:	repz jno 0x4073fa
  4073ce:	out    0x72,eax
  4073d0:	cmp    bh,BYTE PTR [ebp+0x2d57b925]
  4073d6:	dec    edi
  4073d7:	jns    0x407419
  4073d9:	(bad)  
  4073da:	push   esp
  4073db:	mov    BYTE PTR [edx],al
  4073dd:	jne    0x407368
  4073df:	mov    al,0x17
  4073e1:	mov    DWORD PTR [esi],edx
  4073e3:	mov    ch,0x7c
  4073e5:	fimul  DWORD PTR [ebx]
  4073e7:	sbb    ebp,DWORD PTR [eax-0x1a]
  4073ea:	dec    ecx
  4073eb:	hlt    
  4073ec:	lods   al,BYTE PTR ds:[esi]
  4073ed:	fcmovnu st,st(1)
  4073ef:	aas    
  4073f0:	inc    esp
  4073f1:	repnz into 
  4073f3:	out    dx,al
  4073f4:	js     0x407382
  4073f6:	xor    dh,bh
  4073f8:	loopne 0x40742b
  4073fa:	inc    BYTE PTR [edi]
  4073fc:	(bad)  
  4073fd:	leave  
  4073fe:	xor    BYTE PTR [edx],ch
  407400:	test   eax,0x5143e31b
  407405:	fild   QWORD PTR [eax-0x38b8a742]
  40740b:	xchg   ebp,eax
  40740c:	pushf  
  40740d:	lods   eax,DWORD PTR ds:[esi]
  40740e:	mov    ecx,ebp
  407410:	(bad)  
  407411:	call   0x32c4:0xf1ec59c6
  407418:	xchg   DWORD PTR [ecx],edx
  40741a:	jle    0x4073fa
  40741c:	daa    
  40741d:	jmp    0xe6a99710
  407422:	outs   dx,DWORD PTR gs:[esi]
  407424:	cmp    edi,DWORD PTR [ebp+0x14]
  407427:	ds ret 
  407429:	dec    edx
  40742a:	jb     0x4073b3
  40742c:	fsub   QWORD PTR [ebp+0x8]
  40742f:	stc    
  407430:	loope  0x4073ca
  407432:	or     ch,BYTE PTR [ebx+0x65]
  407435:	aaa    
  407436:	inc    esp
  407437:	std    
  407438:	inc    eax
  407439:	into   
  40743a:	hlt    
  40743b:	in     eax,0xeb
  40743d:	sbb    DWORD PTR [ebx-0x6cfa77ce],0xd29636f5
  407447:	lahf   
  407448:	inc    esp
  407449:	adc    esp,eax
  40744b:	xor    DWORD PTR [ebp-0x51fdbbc],esi
  407451:	dec    esi
  407452:	data16 das 
  407454:	shl    BYTE PTR [esi+esi*1-0x1f],cl
  407458:	test   BYTE PTR [ecx],dl
  40745a:	inc    edx
  40745b:	(bad)  
  40745c:	loop   0x407486
  40745e:	sbb    DWORD PTR [ecx],ebx
  407460:	pushf  
  407461:	and    esp,DWORD PTR [eax]
  407463:	fmul   QWORD PTR [esi+0x18]
  407466:	popa   
  407467:	inc    edi
  407468:	jns    0x407426
  40746a:	ret    0xa2ae
  40746d:	mov    DWORD PTR [ebx+0xbc87caf],ebp
  407473:	xor    eax,DWORD PTR [eax+0x23]
  407476:	popf   
  407477:	pop    ebp
  407478:	clc    
  407479:	pop    ebx
  40747a:	into   
  40747b:	xchg   edi,eax
  40747c:	sbb    eax,0x59a43d0e
  407481:	loop   0x40742a
  407483:	ret    
  407484:	(bad)  
  407485:	out    dx,eax
  407486:	fadd   DWORD PTR [eax]
  407488:	jg     0x4074f8
  40748a:	adc    eax,0xe14791e8
  40748f:	fld    DWORD PTR [eax+0x33]
  407492:	iret   
  407493:	inc    edi
  407494:	inc    edi
  407495:	lea    edi,[eax]
  407497:	inc    ebp
  407498:	cmp    ah,BYTE PTR [ebx+0x73995a1]
  40749e:	lods   eax,DWORD PTR ds:[esi]
  40749f:	cdq    
  4074a0:	dec    esi
  4074a1:	iret   
  4074a2:	dec    ebx
  4074a3:	push   esi
  4074a4:	jnp    0x407480
  4074a6:	ret    
  4074a7:	icebp  
  4074a8:	inc    edx
  4074a9:	inc    BYTE PTR [ecx]
  4074ab:	int3   
  4074ac:	pop    esp
  4074ad:	and    bl,bl
  4074af:	sub    DWORD PTR [ecx],ecx
  4074b1:	enter  0xf9ea,0xa1
  4074b5:	into   
  4074b6:	aad    0x12
  4074b8:	lock adc DWORD PTR [ebp+0x1d],eax
  4074bc:	(bad)  
  4074bd:	jg     0x40748b
  4074bf:	test   eax,0xff8c4694
  4074c4:	or     DWORD PTR [edx],esp
  4074c6:	or     DWORD PTR [ebx+0x7c2ed9f],0xffffffa3
  4074cd:	nop
  4074ce:	xor    eax,0x2e3958
  4074d3:	(bad)  
  4074d5:	dec    edi
  4074d6:	inc    esi
  4074d7:	dec    esp
  4074d8:	inc    esp
  4074d9:	adc    edx,ebp
  4074db:	inc    ebx
  4074dc:	or     cl,BYTE PTR [edi+edx*2-0x4d]
  4074e0:	cdq    
  4074e1:	inc    esp
  4074e2:	in     al,0xdc
  4074e4:	jmp    0xa87d:0x7a10f826
  4074eb:	outs   dx,BYTE PTR ds:[esi]
  4074ec:	(bad)  
  4074ed:	lock mov esi,0xe3db2f13
  4074f3:	(bad)  
  4074f4:	les    esi,FWORD PTR [edx+esi*2-0x67]
  4074f8:	mov    ch,0x48
  4074fa:	dec    esi
  4074fb:	int    0x1e
  4074fd:	mov    ds:0xf065ffba,eax
  407502:	cld    
  407503:	outs   dx,DWORD PTR ds:[esi]
  407504:	je     0x40755e
  407506:	or     BYTE PTR [eax-0x6905175e],cl
  40750c:	or     DWORD PTR es:[edi-0x6df259ca],edi
  407513:	jae    0x4074fb
  407515:	ins    BYTE PTR es:[edi],dx
  407516:	push   ds
  407517:	sub    ch,al
  407519:	out    dx,eax
  40751a:	cmp    BYTE PTR [ebp-0x3e26fe23],bh
  407520:	int3   
  407521:	lahf   
  407522:	fmul   st,st(7)
  407524:	xchg   ecx,eax
  407525:	add    BYTE PTR [edi-0x62],0x17
  407529:	jge    0x407507
  40752b:	pusha  
  40752c:	jle    0x4074bf
  40752e:	mov    ebp,0x500f26b4
  407533:	rcr    BYTE PTR [ecx-0x1a],cl
  407536:	dec    esp
  407537:	push   ds
  407538:	fsubr  DWORD PTR [edi+0x2b463f2c]
  40753e:	sahf   
  40753f:	pusha  
  407540:	and    BYTE PTR [edx-0x319be1d4],bh
  407546:	(bad)  
  407547:	lock cmp ecx,edx
  40754a:	adc    eax,0x3c7a34bc
  40754f:	sbb    eax,0x51c8f5e2
  407554:	xchg   dl,dh
  407556:	(bad)  
  407557:	push   es
  407558:	cmp    eax,0xe8628163
  40755d:	test   BYTE PTR [eax],bh
  40755f:	inc    edi
  407560:	shl    BYTE PTR es:0xb0614cf7,cl
  407567:	xchg   esp,eax
  407568:	jle    0x407548
  40756a:	ss inc eax
  40756c:	cli    
  40756d:	mov    ds:0x91600e7f,eax
  407572:	mov    BYTE PTR [ebx+0x69],cl
  407575:	das    
  407576:	stos   BYTE PTR es:[edi],al
  407577:	popf   
  407578:	pop    ss
  407579:	pop    ebp
  40757a:	es dec edi
  40757c:	mov    esp,0xfd0c3f28
  407581:	mov    edx,0x9a2f4f80
  407586:	stos   BYTE PTR es:[edi],al
  407587:	(bad)  
  407588:	sar    al,cl
  40758a:	xor    DWORD PTR [esi],ebx
  40758c:	sbb    ch,BYTE PTR [ecx+ecx*4]
  40758f:	mov    ebp,0xb860fa9
  407594:	sub    al,0xa6
  407596:	adc    DWORD PTR [edx],ebx
  407598:	outs   dx,BYTE PTR ds:[esi]
  407599:	pop    esp
  40759a:	jno    0x4075b3
  40759c:	and    DWORD PTR [ecx+0x10aaded9],ecx
  4075a2:	xchg   esp,eax
  4075a3:	cmp    BYTE PTR [ecx+eax*8],ch
  4075a6:	js     0x4075bb
  4075a8:	xor    DWORD PTR [edx+0x5f],ebx
  4075ab:	(bad)  
  4075ac:	adc    al,0xef
  4075ae:	cs scas al,BYTE PTR es:[edi]
  4075b0:	aas    
  4075b1:	(bad)  
  4075b2:	loop   0x4075e3
  4075b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075b5:	dec    esi
  4075b6:	and    al,0xda
  4075b8:	jg     0x407588
  4075ba:	popa   
  4075bb:	arpl   sp,cx
  4075bd:	adc    dh,BYTE PTR [edi-0x29]
  4075c0:	cmp    al,0xa5
  4075c2:	mov    cl,0xb5
  4075c4:	addr16 push edi
  4075c6:	outs   dx,DWORD PTR ds:[esi]
  4075c7:	jne    0x407637
  4075c9:	(bad)  
  4075ca:	lock sbb edx,ebp
  4075cd:	and    edx,DWORD PTR [ebx+0x58]
  4075d0:	xchg   DWORD PTR [ebp+0x674027f7],ebx
  4075d6:	xchg   eax,edx
  4075d8:	adc    BYTE PTR [edx-0x71],0x2
  4075dc:	dec    edi
  4075dd:	jp     0x407566
  4075df:	sub    BYTE PTR [esi],dh
  4075e1:	mov    WORD PTR [ebp+0x6],ss
  4075e4:	mov    DWORD PTR [esi+esi*1],ebp
  4075e7:	adc    esp,DWORD PTR [esi]
  4075e9:	(bad)  [edi+0x47]
  4075ec:	xchg   ebp,eax
  4075ed:	xor    ecx,DWORD PTR [eax+0x12]
  4075f0:	or     eax,0xe7e37a50
  4075f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075f6:	lods   eax,DWORD PTR ds:[esi]
  4075f7:	lahf   
  4075f8:	lahf   
  4075f9:	pusha  
  4075fa:	pop    esp
  4075fb:	mov    WORD PTR [eax-0x3b7e4723],?
  407601:	bound  esp,QWORD PTR [ebp+0x8e2ce58]
  407607:	repnz and BYTE PTR [ebx+eiz*1],0x56
  40760c:	fnstenv [eax-0x5f]
  40760f:	pushf  
  407610:	xchg   edx,eax
  407611:	push   ds
  407612:	mov    al,0xe8
  407614:	add    cl,dh
  407616:	test   BYTE PTR [edx-0x73],dh
  407619:	mov    BYTE PTR [esi+0x4534b603],al
  40761f:	xor    eax,0xfd0d7a2b
  407624:	mov    edi,0x8daff5d5
  407629:	mov    eax,ds:0x34d644a9
  40762e:	jno    0x4075b6
  407630:	pop    esp
  407631:	jecxz  0x407678
  407633:	in     al,dx
  407634:	xor    ch,BYTE PTR [ebx+0x45540ed6]
  40763a:	(bad)  
  40763b:	mov    eax,ds:0xeaad5805
  407640:	sti    
  407641:	scas   al,BYTE PTR es:[edi]
  407642:	cmp    dh,BYTE PTR [edi+edx*2-0x7fc12edc]
  407649:	gs pop edx
  40764b:	or     DWORD PTR [edi+0x5f74fd7a],eax
  407651:	mov    bl,0xdb
  407653:	xchg   esi,eax
  407654:	sbb    al,0x3b
  407656:	inc    eax
  407657:	retf   0xccea
  40765a:	pop    eax
  40765b:	icebp  
  40765c:	sbb    al,0x4b
  40765e:	xchg   edi,eax
  40765f:	jl     0x4076ab
  407661:	ds mov ebx,0xc75426ec
  407667:	mov    esi,0x2004753b
  40766c:	retf   0xf386
  40766f:	fpatan 
  407671:	loopne 0x4076d4
  407673:	loopne 0x4076d3
  407675:	dec    eax
  407676:	mov    dh,0x9
  407678:	xchg   edi,eax
  407679:	loopne 0x407602
  40767b:	push   ds
  40767c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40767d:	(bad)  
  40767e:	push   edi
  40767f:	and    eax,0x17b16a37
  407684:	inc    edx
  407685:	or     DWORD PTR [ecx-0xb98fb86],0xffffff89
  40768c:	sub    DWORD PTR [esi],esi
  40768e:	mov    ds:0x41d7fb63,eax
  407693:	cdq    
  407694:	and    ah,bh
  407696:	test   al,0x9f
  407698:	in     eax,dx
  407699:	mul    DWORD PTR [edx-0x76]
  40769c:	xchg   edi,eax
  40769d:	mov    al,0x9a
  40769f:	pop    ebp
  4076a0:	mov    dl,0xa4
  4076a2:	push   cs
  4076a3:	dec    eax
  4076a4:	mov    al,ds:0xba42a01b
  4076a9:	inc    edi
  4076aa:	push   edi
  4076ab:	es mov cl,0x4a
  4076ae:	imul   ebx,DWORD PTR [esi+0x1d],0x29
  4076b2:	xchg   ecx,eax
  4076b3:	jl     0x407697
  4076b5:	xchg   ebx,ebp
  4076b7:	stos   BYTE PTR es:[edi],al
  4076b8:	sub    DWORD PTR [edx+0x6faeaf01],eax
  4076be:	aas    
  4076bf:	sti    
  4076c0:	push   0x57c1db28
  4076c5:	mov    ebx,0x5573d48c
  4076ca:	pop    ss
  4076cb:	cmp    al,0x1f
  4076cd:	mov    edx,DWORD PTR [ecx+0x24]
  4076d0:	das    
  4076d1:	xor    eax,DWORD PTR [edi+0x1aa481c9]
  4076d7:	mov    al,ds:0xddac22eb
  4076dc:	sbb    eax,0x4b12a5a0
  4076e1:	push   edi
  4076e2:	repnz adc eax,DWORD PTR [esi+0x4889e2f0]
  4076e9:	push   ecx
  4076ea:	sub    esi,DWORD PTR [edx-0x69]
  4076ed:	push   ss
  4076ee:	out    0xd,al
  4076f0:	int3   
  4076f1:	xchg   esi,eax
  4076f2:	mov    bl,0x2e
  4076f4:	popf   
  4076f5:	sub    eax,0x75d72d99
  4076fa:	retf   0xabf1
  4076fd:	js     0x407693
  4076ff:	mov    WORD PTR [ebx-0x19a0eac8],?
  407705:	not    BYTE PTR [edx-0x1ba08085]
  40770b:	add    eax,0x6ed8a146
  407710:	pop    esi
  407711:	push   esp
  407712:	loop   0x407748
  407714:	pop    edi
  407715:	inc    esi
  407716:	add    ah,dl
  407718:	std    
  407719:	fnstcw WORD PTR [eax+0x72]
  40771c:	sub    eax,esi
  40771e:	repnz cs inc edi
  407721:	fild   DWORD PTR [ebp+0x7c8ab39b]
  407727:	test   al,0xc5
  407729:	out    dx,eax
  40772a:	add    eax,0x118eb23a
  40772f:	and    al,0x42
  407731:	add    al,BYTE PTR [edx+0x75]
  407734:	pop    ss
  407735:	cwde   
  407736:	(bad)  [esp+ebp*2-0x463a8bce]
  40773d:	cs push ds
  40773f:	cmp    al,0x65
  407741:	dec    ebp
  407742:	pop    eax
  407743:	xchg   ebp,eax
  407744:	data16 jbe 0x4076dd
  407747:	sbb    ebp,DWORD PTR [eax+ecx*8-0x63]
  40774b:	arpl   cx,bp
  40774d:	lods   eax,DWORD PTR ds:[esi]
  40774e:	hlt    
  40774f:	rol    BYTE PTR [edx*1+0x194affa3],0xe0
  407757:	(bad)  
  407758:	in     al,0x4f
  40775a:	ds mov ah,cl
  40775d:	jp     0x40772d
  40775f:	pop    ecx
  407760:	aaa    
  407761:	or     DWORD PTR [edx],0xffffff87
  407764:	int3   
  407765:	pop    eax
  407766:	push   edi
  407767:	jb     0x4077a7
  407769:	stos   BYTE PTR es:[edi],al
  40776a:	in     eax,0xca
  40776c:	push   ebp
  40776d:	test   BYTE PTR [edi-0x7b],ch
  407770:	test   eax,esp
  407772:	outs   dx,DWORD PTR ds:[esi]
  407773:	call   0xa8f3:0x86a445c
  40777a:	iret   
  40777b:	jb     0x407739
  40777d:	cld    
  40777e:	loope  0x407765
  407780:	sahf   
  407781:	test   al,0xf6
  407783:	mov    DWORD PTR [eax-0x36],edi
  407786:	iret   
  407787:	sub    ch,dh
  407789:	add    BYTE PTR [ecx],bl
  40778b:	and    ch,bl
  40778d:	dec    edi
  40778e:	jae    0x407767
  407790:	push   cs
  407791:	jl     0x40774a
  407793:	ret    0x57c9
  407796:	sub    DWORD PTR [esi-0x6d],esi
  407799:	aaa    
  40779a:	(bad)  
  40779b:	push   0x5a4174e1
  4077a0:	out    dx,al
  4077a1:	adc    ebx,DWORD PTR [esi+0x71]
  4077a4:	iret   
  4077a5:	xchg   esp,eax
  4077a6:	adc    al,0x7c
  4077a8:	or     al,0x88
  4077aa:	inc    edx
  4077ab:	inc    esp
  4077ac:	jmp    0xfe9ab09
  4077b1:	or     BYTE PTR [eax+0x3d],bh
  4077b4:	pop    edi
  4077b5:	jo     0x407801
  4077b7:	sub    al,BYTE PTR [edx-0x3d]
  4077ba:	sbb    cl,dh
  4077bc:	jns    0x4077ba
  4077be:	mov    dh,0x7d
  4077c0:	mov    al,ds:0x39089796
  4077c5:	jg     0x407830
  4077c7:	mov    ecx,gs
  4077c9:	pop    ecx
  4077ca:	scas   al,BYTE PTR es:[edi]
  4077cb:	mov    esp,DWORD PTR [ebx+0x7]
  4077ce:	out    dx,al
  4077cf:	(bad)  
  4077d0:	dec    eax
  4077d1:	std    
  4077d2:	jg     0x40784c
  4077d4:	cmc    
  4077d5:	int3   
  4077d6:	sub    al,0xd2
  4077d8:	mov    al,0xdf
  4077da:	ds js  0x407837
  4077dd:	bound  ebx,QWORD PTR [eax]
  4077df:	xor    BYTE PTR [edx],bl
  4077e1:	pop    ebx
  4077e2:	ins    DWORD PTR es:[edi],dx
  4077e3:	aas    
  4077e4:	dec    edi
  4077e5:	aaa    
  4077e6:	jecxz  0x40778f
  4077e8:	adc    edx,DWORD PTR [esi-0x62]
  4077eb:	ja     0x407780
  4077ed:	inc    edx
  4077ee:	jns    0x40778f
  4077f0:	(bad)  
  4077f1:	jmp    0x407819
  4077f3:	loop   0x4077aa
  4077f5:	fcomip st,st(6)
  4077f7:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077f9:	into   
  4077fa:	inc    edi
  4077fb:	push   esi
  4077fc:	xlat   BYTE PTR ds:[ebx]
  4077fd:	loope  0x407870
  4077ff:	add    esp,DWORD PTR [edx]
  407801:	push   es
  407802:	out    0x7,al
  407804:	cmp    BYTE PTR [esi+0x55],bh
  407807:	cdq    
  407808:	add    al,ch
  40780a:	pop    esi
  40780b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40780c:	jge    0x40780d
  40780e:	adc    bl,BYTE PTR [edi+0x1300019c]
  407814:	stos   BYTE PTR es:[edi],al
  407815:	jnp    0x407881
  407817:	fs xchg esp,eax
  407819:	cmp    bl,0x8c
  40781c:	jmp    0x6988:0xfae15032
  407823:	pop    eax
  407824:	lods   al,BYTE PTR ds:[esi]
  407825:	test   eax,0x10ea6525
  40782a:	jmp    0x5bdda220
  40782f:	(bad)  
  407831:	xchg   ebx,eax
  407832:	dec    ebp
  407833:	push   esi
  407834:	scas   al,BYTE PTR es:[edi]
  407835:	sbb    al,BYTE PTR [edx+edi*8+0x2775a645]
  40783c:	xor    DWORD PTR [edx+ecx*1+0x5d2b6b64],ebx
  407843:	ins    BYTE PTR es:[edi],dx
  407844:	dec    eax
  407845:	mov    BYTE PTR [edi],bl
  407847:	jo     0x4077fc
  407849:	retf   
  40784a:	fldenv ds:0x8e15da7d
  407850:	or     ecx,ebx
  407852:	sti    
  407853:	mov    bl,0x48
  407855:	pop    ebp
  407856:	cmp    BYTE PTR [eax+0x122858ee],cl
  40785c:	sub    eax,0x700e10fd
  407861:	adc    eax,0xd7e26914
  407866:	jle    0x4078dd
  407868:	adc    esi,DWORD PTR [eax+esi*4-0x6cbdc8f9]
  40786f:	retf   
  407870:	dec    edi
  407871:	add    cl,dl
  407873:	repnz pop ebp
  407875:	and    eax,0xf35fe946
  40787a:	cwde   
  40787b:	cdq    
  40787c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40787d:	push   ebp
  40787e:	xchg   edx,eax
  40787f:	fidivr DWORD PTR ds:0x97a8e923
  407885:	mov    ah,0x5b
  407887:	pop    edx
  407888:	pop    ds
  407889:	or     al,0x7c
  40788b:	sbb    ecx,DWORD PTR [edx-0x6d607003]
  407891:	jecxz  0x4078f6
  407893:	mov    di,sp
  407896:	jecxz  0x4078cb
  407898:	cmp    BYTE PTR [ebp-0x3c042ba6],cl
  40789e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40789f:	pop    ecx
  4078a0:	or     DWORD PTR [edi],edx
  4078a2:	mov    eax,ds:0x608f02a6
  4078a7:	or     eax,DWORD PTR [eax-0x5da15bb4]
  4078ad:	inc    ebp
  4078ae:	push   ebx
  4078af:	push   ecx
  4078b0:	jns    0x407851
  4078b2:	sbb    eax,0x7919b998
  4078b7:	pop    edx
  4078b8:	div    ah
  4078ba:	xchg   esi,eax
  4078bc:	adc    al,0xa3
  4078be:	enter  0x96b2,0x43
  4078c2:	mov    cl,0x3f
  4078c4:	adc    eax,0x6da55707
  4078c9:	sahf   
  4078ca:	fadd   DWORD PTR [ebx+edx*2-0x4c5f223a]
  4078d1:	mov    ebx,0x8e57dff7
  4078d6:	(bad)  
  4078d8:	push   edi
  4078d9:	dec    ebp
  4078da:	arpl   WORD PTR [esi],ax
  4078dc:	cmp    bl,BYTE PTR [edx]
  4078de:	cmp    DWORD PTR [edx],ecx
  4078e0:	mov    eax,0x8a358d6e
  4078e5:	or     ah,ah
  4078e7:	call   0x9925:0xefb7b417
  4078ee:	aam    0x49
  4078f0:	push   esi
  4078f1:	mov    edx,0x3cbaa4ba
  4078f6:	dec    edx
  4078f7:	shl    DWORD PTR [ebx+0x2fd62a76],0x7e
  4078fe:	mov    ds:0xa78265df,al
  407903:	daa    
  407904:	mov    esi,DWORD PTR cs:[eax]
  407907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407908:	sbb    al,0xda
  40790a:	lods   eax,DWORD PTR ds:[esi]
  40790b:	es addr16 inc esp
  40790e:	fs int 0xf8
  407911:	push   cs
  407912:	mov    BYTE PTR [ecx+0x7d6a6fcb],ah
  407918:	push   es
  407919:	data16 sahf 
  40791b:	test   eax,0xadcb075b
  407920:	fisttp QWORD PTR [ebx+0x36bbde9e]
  407926:	retf   0xa422
  407929:	jbe    0x40798e
  40792b:	xchg   edx,eax
  40792c:	and    al,0xa1
  40792e:	mov    esp,0xbc5f4fb0
  407933:	push   edi
  407934:	dec    ecx
  407935:	fmul   DWORD PTR [ebx+0x66]
  407938:	push   edx
  407939:	aad    0xc3
  40793b:	push   eax
  40793c:	jns    0x407976
  40793e:	aaa    
  40793f:	ins    BYTE PTR es:[edi],dx
  407940:	or     DWORD PTR [edi+0x1a],eax
  407943:	mov    WORD PTR [ebp-0x2baacd53],cs
  407949:	or     BYTE PTR [edi],ah
  40794b:	idiv   BYTE PTR [edi]
  40794d:	xor    al,0x27
  40794f:	and    ebx,DWORD PTR [ecx]
  407951:	sbb    al,0xc1
  407953:	cmc    
  407954:	fwait
  407955:	icebp  
  407956:	not    DWORD PTR ds:0x595eb1d7
  40795c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40795d:	and    DWORD PTR [edi+0x4c],esp
  407960:	shl    DWORD PTR [esi+edx*8-0x232bf2fa],0x95
  407968:	popa   
  407969:	aad    0xec
  40796b:	fcom   DWORD PTR [esi]
  40796d:	add    al,0x18
  40796f:	ret    
  407970:	add    ebp,DWORD PTR [edi-0x28]
  407973:	mov    ecx,DWORD PTR [esi+0x191e141]
  407979:	adc    al,0x6d
  40797b:	sahf   
  40797c:	adc    eax,0x253413bb
  407981:	xchg   edx,eax
  407982:	loop   0x407a03
  407984:	push   ebx
  407985:	(bad)  
  407986:	in     al,dx
  407987:	sub    BYTE PTR [esi+0x4abda14e],cl
  40798d:	rol    BYTE PTR [ebx-0x29],1
  407990:	popa   
  407991:	into   
  407992:	mov    ebp,0x97fd6022
  407997:	fwait
  407998:	mov    bh,0x31
  40799a:	out    0x24,al
  40799c:	lods   eax,DWORD PTR ds:[esi]
  40799d:	stos   DWORD PTR es:[edi],eax
  40799e:	sti    
  40799f:	stos   DWORD PTR es:[edi],eax
  4079a0:	aas    
  4079a1:	retf   0x73f6
  4079a4:	sbb    al,0xdf
  4079a6:	inc    eax
  4079a7:	inc    edx
  4079a8:	mov    esp,0x8019685a
  4079ad:	stos   DWORD PTR es:[edi],eax
  4079ae:	xor    ecx,DWORD PTR [edx+0x1ea9c219]
  4079b4:	loope  0x40797a
  4079b6:	in     al,dx
  4079b7:	fcom   DWORD PTR [eax-0x101a1e36]
  4079bd:	sbb    bh,BYTE PTR [ebx-0x69433ca4]
  4079c3:	xchg   esi,eax
  4079c4:	sbb    ecx,DWORD PTR [edi-0x22a084ef]
  4079ca:	out    dx,eax
  4079cb:	xor    al,0x21
  4079cd:	out    0x43,al
  4079cf:	adc    DWORD PTR [edi],esp
  4079d1:	pop    eax
  4079d2:	cmp    BYTE PTR [ecx],cl
  4079d4:	imul   BYTE PTR [esi+0x54]
  4079d7:	or     ecx,DWORD PTR [eax]
  4079d9:	xchg   edx,eax
  4079da:	in     al,0xf
  4079dc:	jp     0x4079e3
  4079de:	jmp    0xb8b7:0xa8abcbbc
  4079e5:	pop    esi
  4079e6:	jnp    0x4079d4
  4079e8:	push   ds
  4079e9:	adc    al,0x5f
  4079eb:	ss jp  0x407a09
  4079ee:	stos   DWORD PTR es:[edi],eax
  4079ef:	push   0xffffffa8
  4079f1:	gs inc edx
  4079f3:	jp     0x407a44
  4079f5:	call   0x2468:0x8eb41ef6
  4079fc:	fcomp  DWORD PTR [esi-0x15]
  4079ff:	stos   DWORD PTR es:[edi],eax
  407a00:	and    bl,BYTE PTR [ebx]
  407a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a03:	adc    ecx,DWORD PTR [edx]
  407a05:	hlt    
  407a06:	sahf   
  407a07:	add    al,0xaf
  407a09:	jmp    0x225:0xdd11e238
  407a10:	xchg   edx,eax
  407a11:	loope  0x407a3c
  407a13:	push   esi
  407a14:	sti    
  407a15:	aas    
  407a16:	sar    BYTE PTR [edi],1
  407a18:	jge    0x4079a7
  407a1a:	fnsave [esi+0x4d]
  407a1d:	(bad)  
  407a1e:	js     0x4079d6
  407a20:	call   0x4a23:0x56f63ad9
  407a27:	lock into 
  407a29:	xchg   esi,eax
  407a2a:	(bad)  
  407a2b:	pushf  
  407a2c:	jne    0x407a0b
  407a2e:	std    
  407a2f:	dec    esi
  407a30:	pop    ds
  407a31:	or     BYTE PTR [eax],al
  407a33:	push   edx
  407a34:	pop    edx
  407a35:	jmp    0x4079d3
  407a37:	lds    edi,FWORD PTR [esp+eiz*8+0x4c]
  407a3b:	mov    edi,0x86865cda
  407a40:	adc    eax,0x8ca7b2f2
  407a45:	aaa    
  407a46:	inc    edi
  407a47:	popa   
  407a48:	xchg   BYTE PTR [ebp+0x6c2f8d88],ch
  407a4e:	push   ebx
  407a4f:	inc    ebp
  407a50:	lock rol bh,0xa8
  407a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a55:	jbe    0x407a70
  407a57:	mov    eax,0x30af7875
  407a5c:	xchg   ebx,eax
  407a5d:	cmp    BYTE PTR [ebx+0x6e44eedf],bh
  407a63:	pop    esp
  407a64:	pop    ds
  407a65:	mov    al,0x87
  407a67:	out    0xb7,eax
  407a69:	xlat   BYTE PTR ds:[ebx]
  407a6a:	pop    esp
  407a6b:	shl    BYTE PTR [edi+esi*1-0x177a4bcb],cl
  407a72:	push   ds
  407a73:	jnp    0x407a87
  407a75:	ret    0x91e1
  407a78:	or     ebp,ebp
  407a7a:	sub    al,0xfd
  407a7c:	pop    es
  407a7d:	cmp    DWORD PTR [ebp+0x57],esi
  407a80:	and    bh,BYTE PTR [edi-0x7]
  407a83:	out    dx,al
  407a84:	add    eax,0x3489aca8
  407a89:	mov    bh,0xe
  407a8b:	cmp    ch,bh
  407a8d:	ja     0x407af6
  407a8f:	sti    
  407a90:	xor    ecx,DWORD PTR [ebx+edx*2-0x55]
  407a94:	mov    al,ds:0xa9c6a89a
  407a99:	sbb    eax,0xac7d65eb
  407a9e:	mov    bh,0x4b
  407aa0:	sbb    al,0x34
  407aa2:	push   0xcb6c0803
  407aa7:	adc    al,0x5e
  407aa9:	push   ds
  407aaa:	jns    0x407a44
  407aac:	inc    esi
  407aad:	adc    DWORD PTR [ebp-0x66],ebp
  407ab0:	daa    
  407ab1:	stos   BYTE PTR es:[edi],al
  407ab2:	jb     0x407a38
  407ab4:	pop    ebx
  407ab5:	mov    al,0x59
  407ab7:	jge    0x407ad5
  407ab9:	inc    ebx
  407aba:	mov    edx,0xcb25a104
  407abf:	jo     0x407ab3
  407ac1:	push   ecx
  407ac2:	js     0x407b3d
  407ac4:	adc    eax,0x2f5ba468
  407ac9:	cmp    ebx,0x2c
  407acc:	fsubr  DWORD PTR [edi+edx*2]
  407acf:	cld    
  407ad0:	add    BYTE PTR [esi-0x10bf9678],dh
  407ad6:	imul   ebx,esi,0x463e1fa5
  407adc:	enter  0x238a,0x24
  407ae0:	and    al,0x5e
  407ae2:	mov    cl,dh
  407ae4:	jb     0x407ab7
  407ae6:	push   ebp
  407ae7:	inc    ecx
  407ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ae9:	sbb    al,0xc7
  407aeb:	jb     0x407abd
  407aed:	sub    al,0x17
  407aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407af0:	int3   
  407af1:	cmc    
  407af2:	dec    ebx
  407af3:	les    ebp,FWORD PTR [edi]
  407af5:	pop    ebp
  407af6:	lock push eax
  407af8:	fwait
  407af9:	lods   eax,DWORD PTR ds:[esi]
  407afa:	mov    ds:0xb396831a,al
  407aff:	cmp    dl,BYTE PTR [ecx]
  407b01:	ss ins DWORD PTR es:[edi],dx
  407b03:	lods   eax,DWORD PTR ds:[esi]
  407b04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b05:	fistp  WORD PTR [ebx]
  407b07:	imul   edi,DWORD PTR [edx+0xe],0xffffffdd
  407b0b:	pop    eax
  407b0c:	or     ch,cl
  407b0e:	push   esi
  407b0f:	pop    eax
  407b10:	jae    0x407aa0
  407b12:	or     BYTE PTR ds:0xf3231b01,0x5
  407b19:	syscall 
  407b1b:	mov    bh,BYTE PTR [ebp+ebp*4+0x101dc8ac]
  407b22:	sbb    cl,ch
  407b24:	cmc    
  407b25:	add    al,BYTE PTR [ebp+0x2320a118]
  407b2b:	mov    eax,ds:0x52815894
  407b30:	lods   al,BYTE PTR ds:[esi]
  407b31:	mov    eax,0xb8e355f0
  407b36:	dec    ebx
  407b37:	push   ebx
  407b38:	cli    
  407b39:	jbe    0x407b5c
  407b3b:	pop    ss
  407b3c:	mov    eax,0x91dec368
  407b41:	cld    
  407b42:	mov    WORD PTR [edi-0xc],ds
  407b45:	xchg   ecx,eax
  407b46:	mov    dh,0x64
  407b48:	cdq    
  407b49:	mov    dl,0x10
  407b4b:	jb     0x407b58
  407b4d:	xchg   BYTE PTR [eax-0x3c7d6e5e],ch
  407b53:	mov    ebx,0x67619557
  407b58:	mov    al,ds:0x7c1b5342
  407b5d:	fmul   DWORD PTR [esi-0x41]
  407b60:	xchg   ecx,eax
  407b61:	mov    bh,dh
  407b63:	xor    al,0x67
  407b65:	nop
  407b66:	sbb    edx,DWORD PTR [edx+0x5f4bcddd]
  407b6c:	mov    WORD PTR [ebx],ds
  407b6e:	lods   al,BYTE PTR ds:[esi]
  407b6f:	scas   eax,DWORD PTR es:[edi]
  407b70:	stc    
  407b71:	popf   
  407b72:	cwde   
  407b73:	sub    al,0x14
  407b75:	mov    bl,0x87
  407b77:	jo     0x407b48
  407b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b7a:	cs data16 cld 
  407b7d:	dec    eax
  407b7e:	inc    bh
  407b80:	inc    eax
  407b81:	jge    0x407bfa
  407b83:	scas   eax,DWORD PTR es:[edi]
  407b84:	jne    0x66c35a9f
  407b8a:	xor    al,0x91
  407b8c:	dec    edi
  407b8d:	jmp    0xb2a9863a
  407b92:	xor    eax,0x4fb59794
  407b97:	pop    ebx
  407b98:	mov    ecx,0xe90822ed
  407b9d:	ret    0x8352
  407ba0:	add    eax,0xefc18b50
  407ba5:	push   cs
  407ba6:	std    
  407ba7:	lahf   
  407ba8:	(bad)  
  407ba9:	push   edx
  407baa:	aam    0x90
  407bac:	dec    ecx
  407bad:	and    ah,BYTE PTR [ecx]
  407baf:	test   eax,0x3d48ed93
  407bb4:	dec    ecx
  407bb5:	push   ecx
  407bb6:	sbb    BYTE PTR es:[eax],bh
  407bb9:	pop    edi
  407bba:	push   ebp
  407bbb:	mov    al,ds:0xf1d08041
  407bc0:	mov    ds,WORD PTR [ebx-0x4ecd3c4d]
  407bc6:	ret    0x5d4a
  407bc9:	std    
  407bca:	stc    
  407bcb:	mov    esi,0x4b1c6445
  407bd0:	xor    BYTE PTR [edi+0x24],ch
  407bd3:	loopne 0x407c33
  407bd5:	test   al,0x1e
  407bd7:	sub    DWORD PTR [ecx+0x62],edx
  407bda:	inc    ebx
  407bdb:	repz mov edi,0xb3bade17
  407be1:	mov    cs,WORD PTR [ecx+eiz*2-0x5e]
  407be5:	pop    esp
  407be6:	jns    0x407c03
  407be8:	ret    
  407be9:	test   al,0xe7
  407beb:	das    
  407bec:	fwait
  407bed:	mov    ch,0xd
  407bef:	jns    0x407b7e
  407bf1:	sbb    cl,BYTE PTR [eax-0x10]
  407bf4:	stc    
  407bf5:	mov    edi,0xefe23e6b
  407bfa:	push   es
  407bfb:	mov    ebp,0x33aab959
  407c00:	dec    ebx
  407c01:	dec    eax
  407c02:	xchg   ebp,eax
  407c03:	mov    ch,0x67
  407c05:	xchg   esp,eax
  407c06:	xchg   ebp,eax
  407c07:	imul   edi,DWORD PTR [ebx-0x5e16cb0d],0x8f484305
  407c11:	sub    edx,edi
  407c13:	lea    edx,[esi-0x67]
  407c16:	in     eax,0xc5
  407c18:	xor    esp,DWORD PTR ds:0x5a45b95c
  407c1e:	push   edx
  407c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c20:	push   edi
  407c21:	push   edi
  407c22:	dec    BYTE PTR [ecx-0x373a3364]
  407c28:	cmp    eax,0xa48bd105
  407c2d:	cmp    al,0x61
  407c2f:	nop
  407c30:	loop   0x407c41
  407c32:	leave  
  407c33:	data16 repnz out 0x2e,al
  407c37:	inc    esi
  407c38:	mov    al,ds:0x75d6781c
  407c3d:	jl     0x407cae
  407c3f:	and    ch,ch
  407c41:	sbb    ecx,DWORD PTR [eax-0x19]
  407c44:	int    0x61
  407c46:	aam    0x52
  407c48:	jb     0x407cb4
  407c4a:	ins    BYTE PTR es:[edi],dx
  407c4b:	mov    esi,0x37674aa1
  407c50:	dec    esp
  407c51:	fsub   DWORD PTR [ecx-0x23]
  407c54:	mov    bl,0x8a
  407c56:	mov    ds:0x8e8bb7ed,eax
  407c5b:	outs   dx,BYTE PTR ds:[esi]
  407c5c:	sbb    eax,0x16aab7ff
  407c61:	or     BYTE PTR [esi+0x2d9659d1],bh
  407c67:	jecxz  0x407c4e
  407c69:	jmp    0x8bb2:0x24b7c012
  407c70:	xchg   edi,eax
  407c71:	xor    DWORD PTR [ebx],0xffffffa8
  407c74:	daa    
  407c75:	fst    DWORD PTR [ecx-0x443fc6e3]
  407c7b:	stos   DWORD PTR es:[edi],eax
  407c7c:	inc    DWORD PTR [ebp-0x7f3b3660]
  407c82:	push   ds
  407c83:	mov    ebp,0x7fffc1b2
  407c88:	ins    BYTE PTR es:[edi],dx
  407c89:	pop    ebx
  407c8a:	pusha  
  407c8b:	mov    BYTE PTR [ecx-0x79],ah
  407c8e:	loope  0x407caa
  407c90:	test   al,al
  407c92:	mov    ds:0x377636ec,eax
  407c97:	jmp    0x407c66
  407c99:	aaa    
  407c9a:	nop
  407c9b:	mov    dl,0x2b
  407c9d:	adc    eax,0xb30424e4
  407ca2:	bound  esp,QWORD PTR [eax-0x60f27e72]
  407ca8:	mov    ch,BYTE PTR [ecx]
  407caa:	arpl   WORD PTR [edi+edx*1+0x38a68dc5],di
  407cb1:	or     BYTE PTR [edx],ah
  407cb3:	or     eax,0xc67d0615
  407cb8:	xor    eax,DWORD PTR [ebx]
  407cba:	adc    edi,esp
  407cbc:	jge    0x407d34
  407cbe:	sahf   
  407cbf:	aas    
  407cc0:	sub    BYTE PTR [edi+0x4d0d1ad],0x7
  407cc7:	out    dx,eax
  407cc8:	push   edx
  407cc9:	iret   
  407cca:	xchg   ebx,eax
  407ccb:	jle    0x407c5e
  407ccd:	cmp    ebx,ecx
  407ccf:	push   0xb987287
  407cd4:	sbb    al,0xda
  407cd6:	or     al,0x35
  407cd8:	sbb    BYTE PTR [edx+0x2],0x5e
  407cdc:	mov    cl,0x9a
  407cde:	mov    edi,0xf5fb685
  407ce3:	pop    edi
  407ce4:	enter  0xd083,0xf3
  407ce8:	pop    edx
  407ce9:	inc    esi
  407cea:	xor    dl,dl
  407cec:	push   edi
  407ced:	sub    ebx,DWORD PTR [edx-0x77e819a1]
  407cf3:	and    edx,DWORD PTR [eax]
  407cf5:	add    cl,ah
  407cf7:	aaa    
  407cf8:	push   ebx
  407cf9:	jecxz  0x407caa
  407cfb:	fcomp  st(3)
  407cfd:	popf   
  407cfe:	dec    ebp
  407cff:	jl     0x407c8a
  407d01:	ds int 0x69
  407d04:	scas   al,BYTE PTR es:[edi]
  407d05:	cmp    al,BYTE PTR [edx]
  407d07:	xchg   edi,eax
  407d08:	ins    BYTE PTR es:[edi],dx
  407d09:	in     eax,0x4e
  407d0b:	leave  
  407d0c:	inc    esp
  407d0d:	std    
  407d0e:	lds    ebx,FWORD PTR [esi-0xab67935]
  407d14:	xchg   BYTE PTR [edx+0x787149b6],bh
  407d1a:	dec    eax
  407d1b:	mov    ebx,0xa73daf77
  407d20:	inc    ecx
  407d21:	sub    ch,ch
  407d23:	(bad)  
  407d24:	adc    BYTE PTR [edx+0x1b2f20ee],ah
  407d2a:	(bad)  
  407d2b:	int3   
  407d2c:	rcr    BYTE PTR [eax+0x37f7f7d],1
  407d32:	sbb    edx,DWORD PTR [edx]
  407d34:	and    ch,dl
  407d36:	push   ss
  407d37:	mov    edx,esp
  407d39:	pop    esi
  407d3a:	imul   ebx,ebp,0x31cfc4cf
  407d40:	xchg   edx,eax
  407d41:	arpl   WORD PTR [esi],si
  407d43:	mov    al,ds:0x4574cc30
  407d48:	mov    ah,0x14
  407d4a:	aas    
  407d4b:	pop    esp
  407d4c:	ins    DWORD PTR es:[edi],dx
  407d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d4e:	mov    ecx,0x30b2cb26
  407d53:	dec    edx
  407d54:	iret   
  407d55:	push   ebp
  407d56:	lahf   
  407d57:	lods   al,BYTE PTR ds:[esi]
  407d58:	(bad)  
  407d59:	dec    esp
  407d5a:	xchg   edi,eax
  407d5b:	sub    DWORD PTR [eax+0x40],0x139a5674
  407d62:	or     BYTE PTR [edi],ch
  407d64:	xor    al,0x92
  407d66:	or     al,0xea
  407d68:	js     0x407de1
  407d6a:	push   edi
  407d6b:	jmp    0x407d1e
  407d6d:	sbb    al,0x72
  407d6f:	dec    esp
  407d70:	leave  
  407d71:	or     eax,0x522e0b7b
  407d76:	push   esi
  407d77:	wrmsr  
  407d79:	or     eax,0x21c7e355
  407d7e:	ret    
  407d7f:	dec    eax
  407d80:	and    cl,BYTE PTR [edi-0x7940e618]
  407d86:	or     edi,DWORD PTR ds:0x719995b0
  407d8c:	jp     0x407d5f
  407d8e:	into   
  407d8f:	retf   0x320d
  407d92:	test   al,0x90
  407d94:	cmp    eax,0x6026b3c5
  407d99:	or     al,0xfa
  407d9b:	dec    eax
  407d9c:	in     eax,0xea
  407d9e:	fsub   QWORD PTR [esi-0x2b]
  407da1:	push   edi
  407da2:	adc    ecx,ecx
  407da4:	lahf   
  407da5:	ja     0x407d5c
  407da7:	xor    BYTE PTR [ecx+0x1a],ah
  407daa:	fldcw  WORD PTR [esi+0x3580222d]
  407db0:	icebp  
  407db1:	pop    esp
  407db2:	call   0xcdac6b8f
  407db7:	inc    eax
  407db8:	out    0xb6,eax
  407dba:	imul   cl
  407dbc:	outs   dx,BYTE PTR ds:[esi]
  407dbd:	mov    ah,0x55
  407dbf:	daa    
  407dc0:	fisttp QWORD PTR [esi]
  407dc2:	push   ebx
  407dc3:	enter  0x1ddf,0x99
  407dc7:	in     al,0xdd
  407dc9:	mov    dh,BYTE PTR [ecx+0x15]
  407dcc:	pusha  
  407dcd:	cmp    al,0x43
  407dcf:	mov    eax,0x1ffda5d7
  407dd4:	lock leave 
  407dd6:	(bad)  
  407dd7:	or     ah,bh
  407dd9:	mov    edi,0xe34ef5b9
  407dde:	and    edx,ecx
  407de0:	popa   
  407de1:	test   eax,0x5a10c052
  407de6:	stc    
  407de7:	push   cs
  407de8:	pop    ds
  407de9:	jns    0x407d6b
  407deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dec:	jo     0x407da3
  407dee:	stos   DWORD PTR es:[edi],eax
  407def:	retf   
  407df0:	and    DWORD PTR [eax],0xcbc5b182
  407df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407df7:	push   0x49
  407df9:	xor    al,0x28
  407dfb:	rol    BYTE PTR [esi+0x23771849],cl
  407e01:	test   bh,0x41
  407e04:	and    DWORD PTR [ecx+ebp*2],eax
  407e07:	nop
  407e08:	(bad)  
  407e09:	clc    
  407e0a:	xchg   edx,eax
  407e0b:	(bad)  
  407e0c:	fcmovbe st,st(3)
  407e0e:	jg     0x407e69
  407e10:	or     ecx,eax
  407e12:	sub    eax,0x61d3462e
  407e17:	(bad)  [esp+ecx*2-0x327ec32d]
  407e1e:	sti    
  407e1f:	stc    
  407e20:	lods   eax,DWORD PTR ds:[esi]
  407e21:	inc    ecx
  407e22:	sbb    al,0xe7
  407e24:	or     dl,BYTE PTR [eax-0x114ed836]
  407e2a:	cdq    
  407e2b:	fwait
  407e2c:	sbb    esp,DWORD PTR [ecx-0x62b4d284]
  407e32:	paddb  mm0,QWORD PTR [ebp+edx*2-0x2b]
  407e37:	pop    edx
  407e38:	cmovbe ecx,DWORD PTR [eax-0x72]
  407e3c:	lock mov ebp,0x123ecaf0
  407e42:	jl     0x407ebc
  407e44:	mov    al,0x23
  407e46:	test   eax,0xc02abcba
  407e4b:	mov    edi,0x2dbef0aa
  407e50:	mov    ah,0x6
  407e52:	fsub   st,st(6)
  407e54:	cmc    
  407e55:	and    esi,DWORD PTR [ecx]
  407e57:	inc    esi
  407e58:	test   al,0x42
  407e5a:	sub    eax,0x425d7bee
  407e5f:	fiadd  DWORD PTR [esi-0x26]
  407e62:	iret   
  407e63:	lahf   
  407e64:	test   eax,0xd62a952
  407e69:	ret    0x9505
  407e6c:	xchg   ebx,eax
  407e6d:	mov    edx,0xac9d2bac
  407e72:	xchg   edx,eax
  407e73:	adc    al,0x3d
  407e75:	adc    esi,DWORD PTR [ecx+ebx*2]
  407e78:	retf   0xb9b
  407e7b:	(bad)  [esp+edx*2-0x2210a239]
  407e82:	cmp    al,0x54
  407e84:	xor    DWORD PTR [ecx+ecx*2],ebp
  407e87:	arpl   WORD PTR [edi+0x5d8b7a20],bp
  407e8d:	ret    0x4627
  407e90:	into   
  407e91:	mov    ah,0x7a
  407e93:	leave  
  407e94:	xchg   esp,eax
  407e95:	call   0xab8b:0x6be6fce
  407e9c:	and    DWORD PTR [ebx-0xb],edi
  407e9f:	mov    edi,0xf7571292
  407ea4:	loopne 0x407e80
  407ea6:	nop
  407ea7:	je     0x407ec4
  407ea9:	mov    ah,ch
  407eab:	or     BYTE PTR [edx-0x12],cl
  407eae:	xchg   ecx,eax
  407eaf:	push   ebx
  407eb0:	mov    edi,0x52205279
  407eb5:	pop    es
  407eb6:	fstp   TBYTE PTR [ebp-0x10]
  407eb9:	fdivr  st(5),st
  407ebb:	leave  
  407ebc:	out    dx,al
  407ebd:	xchg   edi,eax
  407ebe:	sbb    cl,BYTE PTR [ebp-0x5e]
  407ec1:	int    0xff
  407ec3:	xchg   edx,eax
  407ec4:	pop    ss
  407ec5:	push   ebx
  407ec6:	lock fld QWORD PTR [eax+ebp*1-0x7a]
  407ecb:	inc    esp
  407ecc:	call   0x3a5a:0x4493e8d6
  407ed3:	and    ecx,esp
  407ed5:	mov    dl,0x76
  407ed7:	cmp    eax,0x3834012
  407edc:	fwait
  407edd:	add    DWORD PTR cs:[ebx],eax
  407ee0:	icebp  
  407ee1:	(bad)  
  407ee2:	and    edi,DWORD PTR [esp+ebx*8]
  407ee5:	jne    0x407edd
  407ee7:	stos   BYTE PTR es:[edi],al
  407ee8:	sbb    BYTE PTR [edi+0x27],al
  407eeb:	xor    BYTE PTR [ecx+edx*8-0x1e],ch
  407eef:	rol    ch,1
  407ef1:	call   0xa99d215d
  407ef6:	repnz cli 
  407ef8:	adc    DWORD PTR [ebx],edx
  407efa:	sub    DWORD PTR [ebp-0x5c],0xda48729c
  407f01:	xchg   bh,bl
  407f03:	inc    ebx
  407f04:	jne    0x407e8b
  407f06:	movhps xmm1,QWORD PTR [esi+0x26]
  407f0a:	in     eax,dx
  407f0b:	int    0x2d
  407f0d:	int    0x2a
  407f0f:	fs dec esp
  407f11:	mov    al,ds:0xc8ef4376
  407f16:	stc    
  407f17:	mov    ah,0x39
  407f19:	jbe    0x407f2e
  407f1b:	cmp    bh,0x7a
  407f1e:	dec    ebp
  407f1f:	out    dx,eax
  407f20:	mov    ebp,0xbdaea666
  407f25:	loopne 0x407f8c
  407f27:	outs   dx,BYTE PTR ds:[esi]
  407f28:	and    BYTE PTR [ebp-0x13],ch
  407f2b:	cmp    DWORD PTR [edx+0x5d],edx
  407f2e:	inc    ebp
  407f2f:	or     al,0x9
  407f31:	mov    eax,ds:0xf84d8640
  407f36:	sub    ecx,DWORD PTR [edx+0x2540cee]
  407f3c:	daa    
  407f3d:	(bad)  
  407f3f:	ja     0x407f4a
  407f41:	dec    ebp
  407f42:	jno    0x407f64
  407f44:	mov    ss,edi
  407f46:	sub    BYTE PTR [esp+ebx*4],dl
  407f49:	mov    ah,bh
  407f4b:	sbb    cl,BYTE PTR [edi+0x57]
  407f4e:	ins    BYTE PTR es:[edi],dx
  407f4f:	xchg   esi,eax
  407f50:	ret    
  407f51:	cmp    BYTE PTR [edi-0x21],ch
  407f54:	aad    0x1b
  407f56:	xchg   ax,ax
  407f58:	dec    ecx
  407f59:	rol    DWORD PTR [edi-0x3a],cl
  407f5c:	imul   BYTE PTR [ebp-0x61d64aa8]
  407f62:	lods   eax,DWORD PTR ds:[esi]
  407f63:	push   es
  407f64:	push   esi
  407f65:	adc    esi,DWORD PTR [eax]
  407f67:	cld    
  407f68:	xlat   BYTE PTR ds:[ebx]
  407f69:	or     DWORD PTR [edi-0x547c9b87],esp
  407f6f:	xor    ebx,DWORD PTR [ebx]
  407f71:	jge    0x407ef6
  407f73:	fisubr DWORD PTR [ebx-0x24]
  407f76:	xor    ah,BYTE PTR [edi+0x28]
  407f79:	out    dx,al
  407f7a:	jecxz  0x407f65
  407f7c:	jl     0x407ff7
  407f7e:	stc    
  407f7f:	sub    DWORD PTR [esi+0x42b59a6c],edx
  407f85:	push   ebp
  407f86:	pop    esp
  407f87:	inc    edx
  407f88:	cmp    BYTE PTR [esi-0x24da8732],ah
  407f8e:	stos   DWORD PTR es:[edi],eax
  407f8f:	mov    eax,0x57094bac
  407f94:	pop    edx
  407f95:	lods   eax,DWORD PTR ds:[esi]
  407f96:	shl    edi,1
  407f98:	push   ebp
  407f99:	sub    BYTE PTR [eax+0x39fff920],0xad
  407fa0:	pop    ebx
  407fa1:	or     eax,0x976c8ebd
  407fa6:	push   ss
  407fa7:	jbe    0x408001
  407fa9:	xor    esi,DWORD PTR [edx]
  407fab:	sahf   
  407fac:	in     eax,0xdf
  407fae:	and    esp,esp
  407fb0:	push   cs
  407fb1:	inc    ecx
  407fb2:	mov    edx,0xc113e04a
  407fb7:	(bad)  
  407fb9:	into   
  407fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fbb:	shl    BYTE PTR ds:0xe29c676b,1
  407fc1:	outs   dx,BYTE PTR ds:[esi]
  407fc2:	sbb    al,0x9f
  407fc4:	jge    0x407fc4
  407fc6:	xchg   ebx,eax
  407fc7:	xchg   esp,eax
  407fc8:	int3   
  407fc9:	jno    0x407fac
  407fcb:	ds add al,0xd9
  407fce:	(bad)  
  407fcf:	not    BYTE PTR [ebp-0xf]
  407fd2:	and    DWORD PTR [edi-0x456dede4],eax
  407fd8:	nop
  407fd9:	pop    es
  407fda:	(bad)  [ecx]
  407fdc:	cdq    
  407fdd:	jne    0x407fc2
  407fdf:	and    ecx,edx
  407fe1:	mov    cs,WORD PTR [edx-0x1f1bdf8c]
  407fe7:	adc    bl,BYTE PTR [eax]
  407fe9:	xchg   esp,eax
  407fea:	push   ecx
  407feb:	mov    al,0xb4
  407fed:	mov    eax,ds:0x22eb367b
  407ff2:	mov    ds:0xf45e16d6,al
  407ff7:	lahf   
  407ff8:	cmc    
  407ff9:	stc    
  407ffa:	popf   
  407ffb:	or     dl,BYTE PTR [esi]
  407ffd:	(bad)  
  407ffe:	dec    DWORD PTR [ecx+0xe]
  408001:	scas   eax,DWORD PTR es:[edi]
  408002:	outs   dx,BYTE PTR ds:[esi]
  408003:	lds    ebp,FWORD PTR [edx+0xc0f3973]
  408009:	stos   DWORD PTR es:[edi],eax
  40800a:	add    eax,0x6bcad450
  40800f:	xor    al,0x5f
  408011:	int3   
  408012:	mov    bl,0x69
  408014:	mov    ch,0xe3
  408016:	jbe    0x40806b
  408018:	in     al,dx
  408019:	push   ecx
  40801a:	stos   DWORD PTR es:[edi],eax
  40801b:	ja     0x408066
  40801d:	sub    al,0xde
  40801f:	lock and BYTE PTR [edi+ebp*4-0x5a17bad7],bl
  408027:	aaa    
  408028:	fincstp 
  40802a:	enter  0x1232,0x98
  40802e:	(bad)  [eax-0x6cc8c150]
  408034:	mov    dh,0x1b
  408036:	xor    al,0x1c
  408038:	je     0x407fe8
  40803a:	mov    al,0x31
  40803c:	rcr    dh,cl
  40803e:	mov    ebx,0xef1ab0ed
  408043:	bnd ja 0x408003
  408046:	mov    ds,WORD PTR [edx]
  408048:	push   0x9e21489a
  40804d:	and    ah,BYTE PTR [ebx+eax*4]
  408050:	mov    eax,ds:0x402b3990
  408055:	call   0x5340d443
  40805a:	mov    cl,0xdb
  40805c:	and    edx,ebx
  40805e:	push   esi
  40805f:	pop    eax
  408060:	stos   DWORD PTR es:[edi],eax
  408061:	and    al,BYTE PTR [ebp-0x6c]
  408064:	lods   al,BYTE PTR ds:[esi]
  408065:	aaa    
  408066:	adc    bl,dh
  408068:	inc    edi
  408069:	xor    al,0x68
  40806b:	int3   
  40806c:	jbe    0x407ff8
  40806e:	jg     0x408013
  408070:	push   0x7d
  408072:	ss jmp 0x40801c
  408075:	repnz inc ebp
  408077:	adc    ch,BYTE PTR [edx+eax*2+0x5d2f67d]
  40807e:	ins    BYTE PTR es:[edi],dx
  40807f:	pop    ss
  408080:	int    0x81
  408082:	jmp    0x40804b
  408084:	mov    ebx,0x34fb1a2b
  408089:	add    DWORD PTR [edi],eax
  40808b:	shr    DWORD PTR [edi],0x12
  40808e:	outs   dx,DWORD PTR ds:[esi]
  40808f:	lea    edi,ds:0xedd4b7ae
  408095:	xchg   ebx,eax
  408096:	cmp    eax,0x9b27f895
  40809b:	sbb    DWORD PTR [ecx-0x232ca35f],0x6d
  4080a2:	adc    DWORD PTR [edi-0x13],ecx
  4080a5:	(bad)  
  4080a6:	outs   dx,BYTE PTR ds:[esi]
  4080a7:	sbb    al,0xfe
  4080a9:	(bad)  
  4080aa:	daa    
  4080ab:	aad    0x20
  4080ad:	out    dx,al
  4080ae:	gs sbb eax,0xc5cf323e
  4080b4:	aam    0x8a
  4080b6:	inc    edx
  4080b7:	jnp    0x4080bd
  4080b9:	in     eax,0x8a
  4080bb:	ins    DWORD PTR es:[edi],dx
  4080bc:	pop    ds
  4080bd:	ins    BYTE PTR es:[edi],dx
  4080be:	jecxz  0x4080d9
  4080c0:	mov    ebp,0x763c5e46
  4080c5:	test   BYTE PTR [ebx-0xf],dl
  4080c8:	or     esp,DWORD PTR [edx+0x57]
  4080cb:	sar    ebp,1
  4080cd:	xor    al,BYTE PTR ds:0x743bd369
  4080d3:	mov    edi,0x9c152ad1
  4080d8:	shl    DWORD PTR [eax+0x26],1
  4080db:	mov    ebx,0x9292c510
  4080e0:	xchg   edi,eax
  4080e1:	outs   dx,BYTE PTR ds:[esi]
  4080e2:	xchg   esi,eax
  4080e3:	mov    esp,0xb0c90d75
  4080e8:	jl     0x408148
  4080ea:	push   cs
  4080eb:	fs push ecx
  4080ed:	cwde   
  4080ee:	sbb    eax,0x8810114a
  4080f3:	(bad)  
  4080f4:	js     0x4080de
  4080f6:	and    DWORD PTR [edx],0xffffffb2
  4080f9:	hlt    
  4080fa:	pop    esi
  4080fb:	(bad)  
  4080fc:	mov    ecx,0xaba0b70f
  408101:	das    
  408102:	repz xchg ebx,eax
  408104:	ss jns 0x40816e
  408107:	stos   BYTE PTR es:[edi],al
  408108:	imul   eax,DWORD PTR [ebp+0x1c],0xa0d335fe
  40810f:	fldcw  WORD PTR [ebp-0x407b152f]
  408115:	(bad)  
  408117:	xor    BYTE PTR [edx-0x9ea0e92],0x58
  40811e:	arpl   di,bp
  408120:	lods   eax,DWORD PTR ds:[esi]
  408121:	(bad)  
  408122:	and    BYTE PTR [esi],ch
  408124:	xchg   esi,eax
  408125:	sub    ebx,DWORD PTR [edx]
  408127:	iret   
  408128:	xor    DWORD PTR [edx*1+0x665a6f84],0x48
  408130:	cmp    BYTE PTR [esi-0x12],dl
  408133:	loopne 0x40817c
  408135:	pop    edx
  408136:	mov    ds:0xe964bdcf,eax
  40813b:	pop    ecx
  40813c:	int    0x9
  40813e:	jge    0x4080cc
  408140:	loop   0x40819c
  408142:	sub    ebp,edx
  408144:	inc    esp
  408145:	std    
  408146:	ret    0xc76a
  408149:	push   0xb645d070
  40814e:	and    edi,DWORD PTR [ebx]
  408150:	sub    DWORD PTR [esi+0x24f91b90],edi
  408156:	std    
  408157:	dec    ebx
  408158:	outs   dx,DWORD PTR ds:[esi]
  408159:	push   es
  40815a:	das    
  40815b:	dec    eax
  40815c:	mov    ss,esi
  40815e:	fs pop esp
  408160:	mov    DWORD PTR [ebx+0x5fece1ca],ecx
  408166:	jge    0x40812e
  408168:	mov    ebx,0x6e68fbf0
  40816d:	xor    DWORD PTR [esi],esi
  40816f:	stos   DWORD PTR es:[edi],eax
  408170:	jmp    0x1320:0xf34f3124
  408177:	rcl    BYTE PTR [edi-0x69ee01f8],cl
  40817d:	and    eax,0xff121f6a
  408182:	hlt    
  408183:	sub    al,dh
  408185:	out    dx,al
  408186:	test   eax,0x4ff8cc67
  40818b:	outs   dx,DWORD PTR ds:[esi]
  40818c:	pop    ss
  40818d:	test   BYTE PTR [eax],bl
  40818f:	sbb    ah,BYTE PTR [edx-0x13635405]
  408195:	ret    
  408196:	xor    DWORD PTR [esi-0x30],ebx
  408199:	xchg   edi,eax
  40819a:	or     bl,ch
  40819c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40819d:	in     al,dx
  40819e:	inc    eax
  40819f:	hlt    
  4081a0:	stos   DWORD PTR es:[edi],eax
  4081a1:	pop    es
  4081a2:	mov    ds,WORD PTR [ebp-0x458080b]
  4081a8:	push   edi
  4081a9:	repz lock xchg ebp,eax
  4081ac:	(bad)  
  4081ad:	mov    dh,0x5a
  4081af:	int    0xf8
  4081b1:	push   edi
  4081b2:	push   es
  4081b3:	push   ds
  4081b4:	add    al,0x4c
  4081b6:	ror    BYTE PTR [esi],0x96
  4081b9:	and    esi,DWORD PTR ds:0xe30f5835
  4081bf:	pop    eax
  4081c0:	repz idiv bh
  4081c3:	int    0x29
  4081c5:	retf   
  4081c6:	push   0xc1ebe535
  4081cb:	mov    edi,0xc3efac99
  4081d0:	sbb    eax,0xb3e7c36c
  4081d5:	std    
  4081d6:	lods   al,BYTE PTR ds:[esi]
  4081d7:	jmp    0xd91c:0xd0e462d5
  4081de:	lock mov al,ds:0x4da571ef
  4081e4:	mov    ch,0xe5
  4081e6:	cmc    
  4081e7:	jns    0x4081f5
  4081e9:	(bad)  [ebx+0x7a]
  4081ec:	mov    WORD PTR [esi],?
  4081ee:	loop   0x4081dd
  4081f0:	gs icebp 
  4081f2:	inc    esi
  4081f3:	sbb    al,0xfa
  4081f5:	jmp    0x43a4:0xbf6025c9
  4081fc:	shl    DWORD PTR [eax+0x7808f861],1
  408202:	xor    dh,BYTE PTR [ebx-0x60]
  408205:	jnp    0x40820d
  408207:	inc    ebp
  408208:	fwait
  408209:	inc    ebp
  40820a:	dec    esp
  40820b:	not    BYTE PTR [edx-0x4b7d9e4b]
  408211:	ins    BYTE PTR es:[edi],dx
  408212:	dec    edi
  408213:	jnp    0x4081e5
  408215:	test   eax,0xc16707b3
  40821a:	xor    al,0x83
  40821c:	dec    eax
  40821d:	clc    
  40821e:	jb     0x40826c
  408220:	dec    edi
  408221:	int3   
  408222:	or     al,0xf0
  408224:	push   esi
  408225:	cwde   
  408226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408227:	jg     0x4081f6
  408229:	bswap  edi
  40822b:	xor    eax,0x2425c7e0
  408230:	jne    0x40828b
  408232:	xchg   edi,eax
  408233:	xchg   ebp,eax
  408234:	mov    cl,0x34
  408236:	mov    ebp,0xd01446fb
  40823b:	xchg   esp,eax
  40823c:	ret    0x6a12
  40823f:	jge    0x40822b
  408241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408242:	jno    0x4081e6
  408244:	into   
  408245:	ja     0x4081fc
  408247:	lods   al,BYTE PTR ds:[esi]
  408248:	adc    esi,ecx
  40824a:	xor    al,0xe2
  40824c:	in     eax,0x2a
  40824e:	push   ecx
  40824f:	add    eax,0x30ff8456
  408254:	pop    ebp
  408255:	stc    
  408256:	adc    DWORD PTR ds:0xd538cfdd,edi
  40825c:	stos   BYTE PTR es:[edi],al
  40825d:	xor    DWORD PTR [ebx],esp
  40825f:	cmp    eax,0xa620e7af
  408264:	mov    al,ds:0x5798dd49
  408269:	in     eax,dx
  40826a:	pop    edi
  40826b:	aaa    
  40826c:	sub    ah,cl
  40826e:	mov    ds:0x9d2e9e52,eax
  408273:	in     eax,dx
  408274:	mov    esp,0x79bb7549
  408279:	push   0xffffff91
  40827b:	mov    eax,ds:0xb3e4afe
  408280:	mov    edi,0x405c2340
  408285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408286:	sub    ebx,DWORD PTR [ebp+0x75bae43d]
  40828c:	mov    edi,0x9a300798
  408291:	xor    al,0x19
  408293:	pop    esp
  408294:	ror    BYTE PTR [esi+edx*2-0x7591cc20],0xe1
  40829c:	popa   
  40829d:	mov    dh,0x4d
  40829f:	pusha  
  4082a0:	jns    0x4082b7
  4082a2:	test   DWORD PTR [edx+0x704a886b],edx
  4082a8:	push   ebx
  4082a9:	std    
  4082aa:	mov    BYTE PTR [esi+edx*8-0x3],bl
  4082ae:	xchg   ch,al
  4082b0:	push   edx
  4082b1:	lahf   
  4082b2:	mov    WORD PTR [ebp+0x5b3e591b],gs
  4082b8:	cdq    
  4082b9:	retf   
  4082ba:	mov    bl,0x63
  4082bc:	adc    DWORD PTR [ecx-0x41],eax
  4082bf:	in     al,dx
  4082c0:	scas   eax,DWORD PTR es:[edi]
  4082c1:	xchg   esp,eax
  4082c2:	cmp    bl,BYTE PTR [ebx-0x38]
  4082c5:	adc    DWORD PTR [eax-0x5d],0x26713706
  4082cc:	out    dx,eax
  4082cd:	xchg   BYTE PTR [eax],bh
  4082cf:	push   esp
  4082d0:	add    ah,dl
  4082d2:	ins    BYTE PTR es:[edi],dx
  4082d3:	les    ebx,FWORD PTR [ebp+0x17]
  4082d6:	in     al,0xcd
  4082d8:	add    ebp,ebx
  4082da:	loopne 0x408269
  4082dc:	jmp    0x39be:0xbb59c934
  4082e3:	scas   eax,DWORD PTR es:[edi]
  4082e4:	ficomp WORD PTR [eax]
  4082e6:	inc    edx
  4082e7:	stos   DWORD PTR es:[edi],eax
  4082e8:	sub    ch,BYTE PTR [ecx]
  4082ea:	push   edi
  4082eb:	test   esp,0x66465b9f
  4082f1:	mov    edx,0x92aa6dd4
  4082f6:	xor    BYTE PTR [ecx],al
  4082f8:	inc    ecx
  4082f9:	lea    ebx,[ebp+0x5b60f09f]
  4082ff:	(bad)  
  408300:	test   al,0x6b
  408302:	jne    0x40837c
  408304:	sub    al,0xc5
  408306:	push   ds
  408307:	cmp    dh,BYTE PTR [ebp-0x72]
  40830a:	sbb    DWORD PTR [edi+0x7aefd46a],eax
  408310:	or     ch,BYTE PTR [edi+0x1bc5a40b]
  408316:	add    cl,BYTE PTR [ebx+0x5]
  408319:	pop    es
  40831a:	pop    ss
  40831b:	shr    DWORD PTR [eax],0x0
  40831e:	inc    ecx
  40831f:	jmp    0x4082b3
  408321:	push   edi
  408322:	ins    DWORD PTR es:[edi],dx
  408323:	adc    ch,dh
  408325:	xchg   esp,eax
  408326:	scas   eax,DWORD PTR es:[edi]
  408327:	sub    dh,BYTE PTR [esi]
  408329:	cmp    dh,BYTE PTR [edx-0x80]
  40832c:	dec    esp
  40832d:	loop   0x4082c8
  40832f:	dec    ecx
  408330:	repz or eax,0x3df2e262
  408336:	jmp    DWORD PTR [ebp-0x67bab247]
  40833c:	mov    dh,0x64
  40833e:	sbb    DWORD PTR [ebp-0x2d1d6236],edi
  408344:	int3   
  408345:	loope  0x4082e7
  408347:	inc    ecx
  408348:	rcl    BYTE PTR [ebp+edi*4-0x516a2423],1
  40834f:	lahf   
  408350:	mov    ?,WORD PTR [eax-0x20]
  408353:	dec    ecx
  408354:	(bad)  
  408356:	dec    edi
  408357:	lock leave 
  408359:	mov    cs,WORD PTR fs:[edi+0x37f1922a]
  408360:	sub    ecx,esp
  408362:	stos   BYTE PTR es:[edi],al
  408363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408364:	dec    eax
  408365:	xor    esp,DWORD PTR [ebp-0x4ba3db64]
  40836b:	outs   dx,BYTE PTR ds:[esi]
  40836c:	fsubr  DWORD PTR [ecx+0x59]
  40836f:	scas   al,BYTE PTR es:[edi]
  408370:	loopne 0x4083a3
  408372:	jg     0x4083ad
  408374:	test   al,0x90
  408376:	ins    DWORD PTR es:[edi],dx
  408377:	test   ebx,ecx
  408379:	stos   BYTE PTR es:[edi],al
  40837a:	ss mov ah,bh
  40837d:	pushf  
  40837e:	xlat   BYTE PTR ds:[ebx]
  40837f:	cli    
  408380:	lods   al,BYTE PTR ds:[esi]
  408381:	and    dh,BYTE PTR [ebx-0x17]
  408384:	retf   0x5191
  408387:	adc    bh,cl
  408389:	inc    ebp
  40838a:	xor    al,0x51
  40838c:	xlat   BYTE PTR ds:[ebx]
  40838d:	mov    ah,0xef
  40838f:	jo     0x4083e7
  408391:	lods   eax,DWORD PTR ds:[esi]
  408392:	inc    esp
  408393:	stc    
  408394:	cli    
  408395:	xchg   edx,eax
  408396:	and    ch,BYTE PTR [edx+0x1bd0290b]
  40839c:	and    edi,DWORD PTR [esi+0xc69b908]
  4083a2:	add    eax,0xaa68468c
  4083a7:	mov    bl,0xb
  4083a9:	mov    DWORD PTR [ecx],edx
  4083ab:	jnp    0x408386
  4083ad:	and    eax,0x346fcfa4
  4083b2:	das    
  4083b3:	fst    DWORD PTR ds:0x2bcaa3f8
  4083b9:	push   0x5cd3899b
  4083be:	and    edx,eax
  4083c0:	push   ds
  4083c1:	dec    ebx
  4083c2:	mov    edi,0x1ea0ee0f
  4083c7:	sti    
  4083c8:	je     0x408437
  4083ca:	or     eax,0x87f6fb9a
  4083cf:	sar    DWORD PTR [esi+0x4a],cl
  4083d2:	js     0x4083c7
  4083d4:	mov    esi,0x2be8aaca
  4083d9:	adc    BYTE PTR [edx],ch
  4083db:	js     0x40840d
  4083dd:	cld    
  4083de:	push   ebp
  4083df:	nop
  4083e0:	frstor [eax-0x53b6a316]
  4083e6:	test   eax,0x59d7030b
  4083eb:	not    esi
  4083ed:	xchg   ebp,eax
  4083ee:	adc    al,0x40
  4083f0:	xor    cl,bl
  4083f2:	ds inc edi
  4083f4:	ficomp DWORD PTR [ebx]
  4083f6:	ja     0x408410
  4083f8:	and    al,0x3b
  4083fa:	mov    eax,0xbfc2b824
  4083ff:	lds    ecx,FWORD PTR [ebp+0x4725e39d]
  408405:	and    BYTE PTR [edx],dh
  408407:	xlat   BYTE PTR ds:[ebx]
  408408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408409:	leave  
  40840a:	into   
  40840b:	mov    BYTE PTR [edi+0xa],ch
  40840e:	and    DWORD PTR [ebx+eax*8],ecx
  408411:	push   ds
  408412:	pushf  
  408413:	or     esp,DWORD PTR [ecx+ebp*4]
  408416:	shr    ch,1
  408418:	stc    
  408419:	icebp  
  40841a:	les    edi,FWORD PTR [edi+0x7ddc0c44]
  408420:	mov    BYTE PTR [edx-0x1d],dh
  408423:	push   0xf9a77f17
  408428:	retf   0xe89d
  40842b:	pop    ss
  40842c:	fld    TBYTE PTR [eax+ebx*2+0x464960ba]
  408433:	add    ax,0xd93f
  408437:	call   0xa7df:0x3e54e1c6
  40843e:	gs ins BYTE PTR es:[edi],dx
  408440:	popa   
  408441:	addr16 mov dh,0x8d
  408444:	std    
  408445:	jo     0x408465
  408447:	stos   BYTE PTR es:[edi],al
  408448:	rcr    eax,1
  40844a:	(bad)
  40844d:	imul   edx,DWORD PTR [eax-0x8f8f02b],0xde91aec4
  408457:	sub    al,0x16
  408459:	stos   DWORD PTR es:[edi],eax
  40845a:	das    
  40845b:	jnp    0x40841d
  40845d:	test   BYTE PTR [ecx+0x2a4ef329],bl
  408463:	ja     0x40848b
  408465:	xchg   edx,eax
  408466:	lods   eax,DWORD PTR ds:[esi]
  408467:	arpl   WORD PTR [ebp-0x7f],dx
  40846a:	icebp  
  40846b:	adc    al,0xfe
  40846d:	xchg   esi,eax
  40846e:	loope  0x40848d
  408470:	cdq    
  408471:	ficomp WORD PTR [eax+0x48]
  408474:	daa    
  408475:	add    al,BYTE PTR [ecx+0x3d]
  408478:	mov    ecx,edi
  40847a:	aaa    
  40847b:	jmp    DWORD PTR [ecx+eiz*2+0x1f]
  40847f:	pop    edi
  408480:	pop    edx
  408481:	lock xchg ecx,eax
  408483:	push   esi
  408484:	cmp    al,0xcd
  408486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408487:	sbb    eax,ebp
  408489:	cmp    al,0xfb
  40848b:	arpl   sp,di
  40848d:	pop    esp
  40848e:	dec    eax
  40848f:	adc    DWORD PTR [edx+0x4e],edi
  408492:	leave  
  408493:	cmp    al,0xe
  408495:	daa    
  408496:	jmp    0x706a:0xf9846863
  40849d:	pop    esi
  40849e:	fld    DWORD PTR [ebx+edi*8-0x13]
  4084a2:	inc    ebx
  4084a3:	adc    eax,0x12917c57
  4084a8:	in     al,dx
  4084a9:	mov    bh,0x20
  4084ab:	hlt    
  4084ac:	mov    bl,BYTE PTR [ebx+0x6f]
  4084af:	adc    BYTE PTR [ebp+0x4d3c3e05],cl
  4084b5:	ret    
  4084b6:	call   0xeb6f:0x6ac2a13d
  4084bd:	push   cs
  4084be:	ins    BYTE PTR es:[edi],dx
  4084bf:	and    BYTE PTR [ebp+0x70],al
  4084c2:	pop    ds
  4084c3:	ds pusha 
  4084c5:	inc    esp
  4084c6:	sub    ah,BYTE PTR [eax+0x2e]
  4084c9:	cmp    BYTE PTR [eax-0x22],0x92
  4084cd:	stc    
  4084ce:	push   eax
  4084cf:	shl    ecx,1
  4084d1:	out    0x4a,eax
  4084d3:	mov    ds:0x9d9127db,eax
  4084d8:	sbb    al,BYTE PTR ds:[eax-0x7589066e]
  4084df:	rol    BYTE PTR [eax+0xe82c48e],1
  4084e5:	cld    
  4084e6:	cmp    BYTE PTR [ebx-0x4f],dl
  4084e9:	mov    al,0x8c
  4084eb:	mov    BYTE PTR [ecx-0x40d378f6],ch
  4084f1:	loopne 0x408482
  4084f3:	sbb    bh,ch
  4084f5:	sbb    edi,DWORD PTR [ebp-0x12]
  4084f8:	cdq    
  4084f9:	aam    0x1
  4084fb:	xchg   ebp,eax
  4084fc:	mov    BYTE PTR [edx+ebx*1],al
  4084ff:	mov    eax,DWORD PTR [ebp-0x40]
  408502:	mov    edx,DWORD PTR [ebp-0x28]
  408505:	xor    eax,esi
  408507:	xor    edx,esi
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a75b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a75f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a763
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a76b
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a733
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   BYTE PTR [ebx],dl
  4089f8:	shr    DWORD PTR [ebx-0x70],1
  4089fb:	(bad)  
  4089fc:	adc    eax,0x5ce88383
  408a01:	add    DWORD PTR [ebx+0x282b47d7],0xb
  408a08:	pop    ds
  408a09:	push   ebp
  408a0a:	mov    DWORD PTR [eax+0x12264b2a],ebx
  408a10:	push   ebx
  408a11:	(bad)  
  408a12:	push   ss
  408a13:	mov    eax,0x779ddd38
  408a18:	mov    esi,ecx
  408a1a:	(bad)
  408a1e:	loop   0x4089c3
  408a20:	pop    ebp
  408a21:	sbb    BYTE PTR [edx-0x2c],cl
  408a24:	(bad)  [eax+edx*1]
  408a27:	sbb    dh,cl
  408a29:	jmp    0x6400:0x96feb63d
  408a30:	push   ebp
  408a31:	push   esi
  408a32:	inc    esi
  408a33:	lods   eax,DWORD PTR ds:[esi]
  408a34:	fnsave [esi-0x19887f0b]
  408a3a:	mov    dl,0xcb
  408a3c:	cmp    al,0x69
  408a3e:	pop    ss
  408a3f:	add    dl,BYTE PTR [eax+0x72fce976]
  408a45:	fs push eax
  408a47:	fbld   TBYTE PTR [ecx]
  408a49:	pusha  
  408a4a:	and    al,BYTE PTR [eax]
  408a4c:	cmp    BYTE PTR [ebp-0x71],0xfc
  408a50:	int    0x52
  408a52:	jbe    0x4089f1
  408a54:	mov    cl,0x72
  408a56:	shl    BYTE PTR [eax],1
  408a58:	(bad)  
  408a59:	scas   al,BYTE PTR es:[edi]
  408a5a:	out    0x56,al
  408a5c:	fcom   DWORD PTR [eax+edx*8+0x229e3c0d]
  408a63:	loop   0x408a9a
  408a65:	jle    0x408ad9
  408a67:	push   ebx
  408a68:	sbb    BYTE PTR [ecx+0x292eb094],0xe2
  408a6f:	jo     0x408a47
  408a71:	stos   BYTE PTR es:[edi],al
  408a72:	mov    ch,0xd5
  408a74:	loope  0x408a53
  408a76:	jb     0x408acf
  408a78:	lea    eax,ds:0x5d108313
  408a7e:	sbb    dl,bh
  408a80:	shl    DWORD PTR [ebp-0x1],0x67
  408a84:	in     al,dx
  408a85:	bound  edi,QWORD PTR [edx]
  408a87:	in     eax,dx
  408a88:	aaa    
  408a89:	mov    BYTE PTR ds:0x5748919e,0x14
  408a90:	pop    esp
  408a91:	outs   dx,DWORD PTR ds:[esi]
  408a92:	mov    WORD PTR [esi-0x205daefb],ds
  408a98:	add    DWORD PTR [ebx-0x65731d25],esp
  408a9e:	sbb    eax,0x2fee873c
  408aa3:	mov    eax,ds:0xc8023787
  408aa8:	arpl   WORD PTR [edx+0x36],di
  408aab:	stos   DWORD PTR es:[edi],eax
  408aac:	or     eax,0x9bdf19f9
  408ab1:	imul   ebx,DWORD PTR [edx],0x530141cf
  408ab7:	ficomp DWORD PTR [ebx-0x99c826b]
  408abd:	or     dl,bl
  408abf:	and    BYTE PTR [eax-0x58e3d874],bh
  408ac5:	mov    esi,0x9eb7f361
  408aca:	dec    esp
  408acb:	jecxz  0x408ac9
  408acd:	and    ch,ch
  408acf:	push   esp
  408ad0:	inc    eax
  408ad1:	ror    dl,0xb4
  408ad4:	ins    BYTE PTR es:[edi],dx
  408ad5:	push   ds
  408ad6:	dec    esp
  408ad7:	ror    esi,1
  408ad9:	jg     0x408ad9
  408adb:	xor    BYTE PTR [ebp-0x9],ah
  408ade:	fld    QWORD PTR [esp+edx*8-0x30924d2f]
  408ae5:	pop    esi
  408ae6:	dec    eax
  408ae7:	push   edx
  408ae8:	push   ebx
  408ae9:	cli    
  408aea:	add    DWORD PTR [edx+0x45],ebp
  408aed:	cmp    eax,0xee480b2b
  408af2:	push   esp
  408af3:	push   ebx
  408af4:	and    esi,DWORD PTR [esi+0x3e921523]
  408afa:	inc    esp
  408afb:	inc    edx
  408afc:	add    BYTE PTR [esi+edx*8],bl
  408aff:	mov    eax,DWORD PTR [ebx]
  408b01:	mov    ds,WORD PTR [edi+0x4a]
  408b04:	out    0xa1,eax
  408b06:	in     al,dx
  408b07:	jne    0x408b0e
  408b09:	or     ebx,DWORD PTR [edx-0x7559b02a]
  408b0f:	cli    
  408b10:	and    bh,BYTE PTR [ecx]
  408b12:	test   BYTE PTR [ebp+0x39],cl
  408b15:	test   BYTE PTR [ebx],dh
  408b17:	and    eax,0xd41c95a5
  408b1c:	inc    esp
  408b1d:	ins    DWORD PTR es:[edi],dx
  408b1e:	stc    
  408b1f:	dec    esp
  408b20:	retf   
  408b21:	popa   
  408b22:	jo     0x408b8b
  408b24:	into   
  408b25:	cmp    al,0x67
  408b27:	xchg   esi,eax
  408b28:	fsubr  DWORD PTR [ebx+0xc191705]
  408b2e:	add    eax,0x5882cfeb
  408b33:	add    dh,0x30
  408b36:	fistp  DWORD PTR [esi]
  408b38:	mov    ebx,0xf6011b0b
  408b3d:	mov    DWORD PTR [ecx-0x3013eb2e],ebp
  408b43:	adc    dh,BYTE PTR [edx+0x6a]
  408b46:	js     0x408b3f
  408b48:	or     edx,DWORD PTR [esi-0x12]
  408b4b:	inc    ebx
  408b4c:	sub    dl,BYTE PTR [esi+ebx*2]
  408b4f:	dec    edx
  408b50:	(bad)  
  408b51:	scas   al,BYTE PTR es:[edi]
  408b52:	pushf  
  408b53:	aaa    
  408b54:	je     0x408bba
  408b56:	xor    al,0x1f
  408b58:	test   eax,0x49c73f32
  408b5d:	call   0xe5948179
  408b62:	push   eax
  408b63:	mov    eax,ds:0x8a14ac8
  408b68:	in     eax,0xf1
  408b6a:	in     al,dx
  408b6b:	pop    esp
  408b6c:	xchg   edx,eax
  408b6d:	inc    edx
  408b6e:	adc    eax,0x64d57e60
  408b73:	inc    edx
  408b74:	std    
  408b75:	enter  0x35a,0x46
  408b79:	xchg   esp,eax
  408b7a:	sahf   
  408b7b:	mov    ds:0x65960c8f,al
  408b80:	std    
  408b81:	stc    
  408b82:	mov    ebp,DWORD PTR [ecx]
  408b84:	fs adc al,dl
  408b87:	sub    BYTE PTR [ebp+0x19],al
  408b8a:	xor    DWORD PTR [esi],esp
  408b8c:	mov    ch,0x14
  408b8e:	dec    edi
  408b8f:	pop    ss
  408b90:	cmp    bl,BYTE PTR [esi+0xd6ca803]
  408b96:	bound  esp,QWORD PTR [ebp+0x45]
  408b99:	addr16 loop 0x408c08
  408b9c:	stc    
  408b9d:	jns    0x408c09
  408b9f:	loop   0x408b6f
  408ba1:	sbb    bh,ch
  408ba3:	push   ecx
  408ba4:	dec    edi
  408ba5:	mov    edx,0x66cd1c13
  408baa:	mov    ecx,0x24548ba3
  408baf:	gs adc eax,0x783b6a6b
  408bb5:	dec    eax
  408bb6:	adc    eax,0x2093b7cf
  408bbb:	push   ss
  408bbc:	icebp  
  408bbd:	pushf  
  408bbe:	fs jnp 0x408bc7
  408bc1:	and    dl,dh
  408bc3:	and    esi,DWORD PTR [eax+0x67]
  408bc6:	ins    BYTE PTR es:[edi],dx
  408bc7:	neg    WORD PTR [edi+ecx*2-0x50df8ed7]
  408bcf:	out    dx,al
  408bd0:	imul   ebp,DWORD PTR [ebx],0x44069461
  408bd6:	xchg   ebp,eax
  408bd7:	mov    dl,0x77
  408bd9:	je     0x408c0e
  408bdb:	pusha  
  408bdc:	mov    eax,0x18db5357
  408be1:	rcl    BYTE PTR [ebx],1
  408be3:	sub    al,ah
  408be5:	push   0x3d
  408be7:	in     al,0x9d
  408be9:	inc    edx
  408bea:	sbb    al,0x48
  408bec:	cmp    eax,0xbfb06778
  408bf1:	jge    0x408c3f
  408bf3:	push   ebp
  408bf4:	outs   dx,BYTE PTR ds:[esi]
  408bf5:	push   es
  408bf6:	add    al,0x85
  408bf8:	mov    ecx,0x65b8283c
  408bfd:	ret    0x2314
  408c00:	in     al,0xdb
  408c02:	dec    esp
  408c03:	add    ebp,DWORD PTR [esp+esi*8-0x77531f0f]
  408c0a:	and    esp,DWORD PTR [ebx]
  408c0c:	ret    
  408c0d:	arpl   bp,bp
  408c0f:	in     al,0x98
  408c11:	ja     0x408c1e
  408c13:	div    BYTE PTR [edi]
  408c15:	mov    edi,0xa4954ceb
  408c1a:	leave  
  408c1b:	mov    edx,0x4aa73ad2
  408c20:	pop    ss
  408c21:	adc    esp,DWORD PTR [esi+0xc18b40f]
  408c27:	dec    esi
  408c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c29:	inc    edi
  408c2a:	stos   BYTE PTR es:[edi],al
  408c2b:	mov    esp,DWORD PTR [edx+esi*2]
  408c2e:	mov    DWORD PTR [ecx+eax*8+0x7ae2a933],ecx
  408c35:	mov    edi,0x8faba476
  408c3a:	mov    bh,0xfa
  408c3c:	test   al,al
  408c3e:	and    al,0x4c
  408c40:	sbb    ch,BYTE PTR [edx+0x5feece1d]
  408c46:	sub    eax,0xada4bdfb
  408c4b:	add    al,0x5a
  408c4d:	jp     0x408c29
  408c4f:	or     ebp,DWORD PTR [ebx]
  408c51:	cmp    esi,DWORD PTR [ebp-0x7531dbae]
  408c57:	gs xchg edx,eax
  408c59:	pop    eax
  408c5a:	ds aam 0x59
  408c5d:	and    dh,BYTE PTR [edi-0x154bbd22]
  408c63:	mov    edx,0x92d29e54
  408c68:	add    al,ah
  408c6a:	mov    ebx,0xdd20d913
  408c6f:	cmpxchg BYTE PTR [ecx+0x22cd850c],al
  408c76:	or     ebx,DWORD PTR [eax+0x536861ad]
  408c7c:	outs   dx,DWORD PTR ds:[esi]
  408c7d:	jg     0x408c7d
  408c7f:	push   edi
  408c80:	out    dx,al
  408c81:	adc    DWORD PTR [esi-0x59b548ef],edx
  408c87:	adc    DWORD PTR [edx],edi
  408c89:	sbb    eax,0xb36180e6
  408c8e:	in     al,0x3f
  408c90:	test   BYTE PTR ds:0x9b30a3d6,dh
  408c96:	scas   eax,DWORD PTR es:[edi]
  408c97:	test   al,0x1c
  408c99:	push   cs
  408c9a:	push   ds
  408c9b:	adc    al,0x8f
  408c9d:	sub    al,0x63
  408c9f:	loopne 0x408c4d
  408ca1:	and    esp,0x42ec2b8b
  408ca7:	sub    DWORD PTR [ebp-0x2f],edi
  408caa:	outs   dx,DWORD PTR ds:[esi]
  408cab:	adc    BYTE PTR es:[ebx+0x788489cb],dl
  408cb2:	add    eax,0xd7ef7729
  408cb7:	outs   dx,BYTE PTR ds:[esi]
  408cb8:	adc    BYTE PTR [esi+0x4d],ch
  408cbb:	ins    DWORD PTR es:[edi],dx
  408cbc:	lds    ebp,FWORD PTR ss:[ebx+0x326d4daa]
  408cc3:	mov    bl,0x54
  408cc5:	xchg   DWORD PTR ds:0x2d289790,ebp
  408ccb:	xor    bh,0xa1
  408cce:	jl     0x408d39
  408cd0:	jl     0x408d29
  408cd2:	xor    DWORD PTR [ebx+0x8],ecx
  408cd5:	push   cs
  408cd6:	mov    cl,0x74
  408cd8:	mov    ebx,0x5ed8daa5
  408cdd:	xor    DWORD PTR [ecx-0x7c],ebx
  408ce0:	popf   
  408ce1:	mov    DWORD PTR [edi+0x4b],0xd4b38586
  408ce8:	scas   al,BYTE PTR es:[edi]
  408ce9:	or     DWORD PTR [ecx-0x45d73825],edi
  408cef:	push   eax
  408cf0:	stos   DWORD PTR es:[edi],eax
  408cf1:	xchg   ebp,eax
  408cf2:	pop    DWORD PTR [eax+0x3b]
  408cf5:	ror    DWORD PTR [edi],cl
  408cf7:	aam    0x9e
  408cf9:	cdq    
  408cfa:	or     DWORD PTR ds:[ecx-0x42],esp
  408cfe:	jns    0x408cc1
  408d00:	inc    ebp
  408d01:	mov    ebp,ebp
  408d03:	mov    DWORD PTR [esi-0x3dea818],esi
  408d09:	dec    esp
  408d0a:	aam    0x11
  408d0c:	loopne 0x408d3a
  408d0e:	mov    eax,0x29c1032c
  408d13:	adc    DWORD PTR [edx],esp
  408d15:	xor    eax,0xa4e03959
  408d1a:	in     eax,dx
  408d1b:	sub    DWORD PTR ds:0xe5b8b233,0x4950ba57
  408d25:	xor    eax,0xe81c91aa
  408d2a:	sub    al,0x46
  408d2c:	xor    eax,edx
  408d2e:	or     bh,BYTE PTR [edi+0x61]
  408d31:	push   cs
  408d32:	shl    DWORD PTR [ebx+0xc],cl
  408d35:	data16 jb 0x408d52
  408d38:	mov    edi,0xdcd5669
  408d3d:	add    DWORD PTR [eax-0x3f],ebp
  408d40:	ins    DWORD PTR es:[di],dx
  408d42:	ins    BYTE PTR es:[edi],dx
  408d43:	imul   ebp,DWORD PTR [edx+0x1d],0x37
  408d47:	int    0x3a
  408d49:	dec    ecx
  408d4a:	mov    al,ds:0x3951c935
  408d4f:	sbb    ecx,DWORD PTR [eax+0x142c832d]
  408d55:	in     al,dx
  408d56:	aam    0x6
  408d58:	cld    
  408d59:	jne    0x408dd8
  408d5b:	ins    DWORD PTR es:[edi],dx
  408d5c:	or     al,0x61
  408d5e:	call   FWORD PTR [edi+0x3b457a08]
  408d64:	sbb    BYTE PTR [edx+0x23223092],al
  408d6a:	in     al,0x6a
  408d6c:	push   ebx
  408d6d:	mov    al,0x56
  408d6f:	inc    esp
  408d70:	pop    edx
  408d71:	scas   al,BYTE PTR es:[edi]
  408d72:	popf   
  408d73:	xor    BYTE PTR [ebx],0xb3
  408d76:	inc    edx
  408d77:	push   0xffffffc4
  408d79:	inc    ecx
  408d7a:	xchg   ebp,eax
  408d7b:	push   ebp
  408d7c:	int3   
  408d7d:	jb     0x408dd3
  408d7f:	scas   eax,DWORD PTR es:[edi]
  408d80:	push   esi
  408d81:	xor    esp,ebp
  408d83:	fcomp  DWORD PTR [edx-0x133760de]
  408d89:	shl    BYTE PTR [edi-0x1aa197b0],0xa
  408d90:	push   cs
  408d91:	pusha  
  408d92:	sub    eax,0x2e32359d
  408d97:	and    esp,DWORD PTR [eax-0x6f42162e]
  408d9d:	mov    BYTE PTR [ebp+0x5f783799],bh
  408da3:	popa   
  408da4:	add    cl,dl
  408da6:	in     al,dx
  408da7:	ret    
  408da8:	xchg   edi,eax
  408da9:	dec    esi
  408daa:	xor    DWORD PTR [ebx],ecx
  408dac:	test   eax,0x8d6357c5
  408db1:	pop    eax
  408db2:	mov    ecx,0x6ba395bb
  408db7:	sbb    bh,BYTE PTR [ecx+0x56]
  408dba:	fistp  WORD PTR [esi+0x3c30a6a3]
  408dc0:	scas   al,BYTE PTR es:[edi]
  408dc1:	mov    ds:0x93a54e36,eax
  408dc6:	cwde   
  408dc7:	jge    0x408d5d
  408dc9:	test   BYTE PTR [eax+0x6b],ah
  408dcc:	lods   al,BYTE PTR ds:[esi]
  408dcd:	test   ecx,0x579b2f60
  408dd3:	push   0x17132b58
  408dd8:	mov    dh,BYTE PTR [eax+0x10680cbf]
  408dde:	mov    bh,0x64
  408de0:	ja     0x408dca
  408de2:	ja     0x408e51
  408de4:	cwde   
  408de5:	test   DWORD PTR [esi],0x85f25218
  408deb:	push   cs
  408dec:	dec    esp
  408ded:	mov    esi,DWORD PTR ds:0x4ef240b3
  408df3:	cmp    al,0xb1
  408df5:	in     eax,0x2b
  408df7:	push   cs
  408df8:	adc    cl,BYTE PTR [ecx+0x729417f5]
  408dfe:	xor    eax,DWORD PTR [esi+0x58]
  408e01:	xchg   esp,eax
  408e02:	or     dl,ah
  408e04:	pop    esi
  408e05:	jle    0x408dff
  408e07:	xchg   BYTE PTR [ebx+0x6f],bl
  408e0a:	inc    esp
  408e0b:	adc    DWORD PTR [eax-0x1fc514d4],0xf4d01dca
  408e15:	aas    
  408e16:	add    BYTE PTR [esi+0x4c],ah
  408e19:	aaa    
  408e1a:	cli    
  408e1b:	imul   eax,edi,0xdabfcdc4
  408e21:	(bad)  
  408e22:	jmp    0x408e4f
  408e24:	idiv   BYTE PTR [esi+eax*2]
  408e27:	cld    
  408e28:	mov    eax,0xb7c3e1f7
  408e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e2e:	out    0x68,eax
  408e30:	loop   0x408e91
  408e32:	mov    eax,0x4c16a6c0
  408e37:	stos   DWORD PTR es:[edi],eax
  408e38:	sbb    edx,DWORD PTR [ebp+0x23bf6783]
  408e3e:	xchg   DWORD PTR [edx+edx*2+0x7e87e1e6],eax
  408e45:	cld    
  408e46:	or     ecx,eax
  408e48:	stos   BYTE PTR es:[edi],al
  408e49:	mov    bp,0xcefa
  408e4d:	dec    ebx
  408e4e:	mov    bh,0x37
  408e50:	mov    esp,edx
  408e52:	mov    cl,0xbc
  408e54:	loope  0x408e24
  408e56:	xor    ch,BYTE PTR [edi]
  408e58:	jl     0x408e0b
  408e5a:	das    
  408e5b:	mov    ch,0x5b
  408e5d:	adc    ah,BYTE PTR [esi+edi*2+0x38]
  408e61:	xor    dh,ch
  408e63:	mov    bl,0xc7
  408e65:	adc    DWORD PTR [ecx+ecx*8+0x2],edi
  408e69:	stc    
  408e6a:	add    al,0xf1
  408e6c:	mov    esp,0x8c67cbd6
  408e72:	add    DWORD PTR [ecx+0x5932019e],ebx
  408e78:	outs   dx,DWORD PTR ds:[esi]
  408e79:	xchg   edx,eax
  408e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e7b:	xchg   esi,eax
  408e7c:	sub    ch,al
  408e7e:	jnp    0x408e4f
  408e80:	out    0xf3,eax
  408e82:	mov    eax,0x3bad5c76
  408e87:	ins    DWORD PTR es:[edi],dx
  408e88:	loop   0x408ea6
  408e8a:	pop    ss
  408e8b:	mov    dh,0x58
  408e8d:	pop    ebp
  408e8e:	cs mov ebp,0x7f1f6e01
  408e94:	add    al,BYTE PTR [ebx]
  408e96:	out    0x5f,al
  408e98:	dec    ebx
  408e99:	aam    0x39
  408e9b:	jle    0x408e87
  408e9d:	jg     0x408f0f
  408e9f:	arpl   dx,ax
  408ea1:	gs inc edx
  408ea3:	and    BYTE PTR [edi+0x4fd6055d],0xe1
  408eaa:	push   cs
  408eab:	mov    eax,ds:0x6f7c5ab5
  408eb0:	aad    0x94
  408eb2:	xor    DWORD PTR [edx-0x1168e835],ecx
  408eb8:	and    al,0x56
  408eba:	cli    
  408ebb:	pop    ds
  408ebc:	fist   WORD PTR [ecx+edi*1-0x7f]
  408ec0:	sub    al,BYTE PTR [edi+edx*4+0x521044b9]
  408ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ec8:	and    al,0x6e
  408eca:	mov    ah,0x20
  408ecc:	dec    eax
  408ecd:	jl     0x408f1e
  408ecf:	and    edx,DWORD PTR [edi-0x18f37adb]
  408ed5:	cmp    BYTE PTR [ebp+0x2f7beac6],ch
  408edb:	pushf  
  408edc:	inc    edx
  408edd:	fidivr WORD PTR [edx-0x9]
  408ee0:	xchg   esp,eax
  408ee1:	fist   WORD PTR [eax]
  408ee3:	dec    ebp
  408ee4:	sub    al,BYTE PTR [edx+0xf]
  408ee7:	pop    ss
  408ee8:	nop
  408ee9:	push   esi
  408eea:	xor    bl,BYTE PTR [ebp-0x5edb6ec2]
  408ef0:	inc    esi
  408ef1:	loop   0x408f36
  408ef3:	jb     0x408f34
  408ef5:	mov    ebx,0x50026aeb
  408efa:	xchg   ebx,eax
  408efb:	leave  
  408efc:	dec    ebp
  408efd:	adc    eax,0xd11c503a
  408f02:	xor    al,ch
  408f04:	dec    edx
  408f05:	jle    0x408ee9
  408f07:	lods   eax,DWORD PTR ds:[esi]
  408f08:	adc    DWORD PTR [ebp+0x5e],ebp
  408f0b:	inc    edi
  408f0c:	cmp    al,bl
  408f0e:	adc    al,0xb5
  408f10:	(bad)  
  408f11:	mov    ebp,0x970a21ac
  408f16:	jno    0x408f34
  408f18:	mov    eax,ds:0x105dc1a9
  408f1d:	stos   DWORD PTR es:[edi],eax
  408f1e:	into   
  408f1f:	mov    ds:0xbd34ca86,eax
  408f24:	adc    al,0xbb
  408f26:	inc    ebp
  408f27:	inc    edx
  408f28:	add    BYTE PTR ds:0x65c8d92f,dh
  408f2e:	pop    ecx
  408f2f:	xor    ecx,0x839fb15e
  408f35:	inc    esp
  408f36:	iret   
  408f37:	repnz sbb esp,DWORD PTR [ecx]
  408f3a:	mov    al,0xe4
  408f3c:	inc    edx
  408f3d:	pop    edi
  408f3e:	jle    0x408f7a
  408f40:	jno    0x408f13
  408f42:	pop    ebx
  408f43:	jns    0x408f11
  408f45:	xchg   ecx,eax
  408f46:	push   edi
  408f47:	jnp    0x408fa2
  408f49:	mov    al,0x8
  408f4b:	bound  ecx,QWORD PTR [ebx]
  408f4d:	push   ebp
  408f4e:	(bad)  
  408f4f:	sub    eax,0x626de8a0
  408f54:	imul   eax,DWORD PTR [ebx],0xa6018330
  408f5a:	rcl    BYTE PTR [ecx],0x44
  408f5d:	inc    esp
  408f5e:	and    al,0x70
  408f60:	or     ebp,DWORD PTR [edx-0x16]
  408f63:	ins    DWORD PTR es:[edi],dx
  408f64:	sub    al,bl
  408f66:	popa   
  408f67:	aam    0xd8
  408f69:	push   cs
  408f6a:	dec    esp
  408f6b:	(bad)  
  408f6c:	int    0xf2
  408f6e:	les    esi,FWORD PTR [ecx+0x13]
  408f71:	call   0x2ea8:0x15f1a9e
  408f78:	test   al,0x89
  408f7a:	retf   
  408f7b:	iret   
  408f7c:	pop    esp
  408f7d:	or     ebx,ecx
  408f7f:	xchg   DWORD PTR [ebx-0x63],ebp
  408f82:	ret    0xa742
  408f85:	stos   BYTE PTR es:[edi],al
  408f86:	xlat   BYTE PTR ds:[ebx]
  408f87:	retf   0x6934
  408f8a:	je     0x408f68
  408f8c:	leave  
  408f8d:	lods   al,BYTE PTR ds:[esi]
  408f8e:	mov    eax,ds:0x1769c783
  408f93:	repnz cmp al,ah
  408f96:	jne    0x408fc7
  408f98:	aam    0x7d
  408f9a:	pushf  
  408f9b:	test   BYTE PTR [eax+ebx*1+0x5e],ah
  408f9f:	repnz stos DWORD PTR es:[edi],eax
  408fa1:	les    ebp,FWORD PTR [eax-0x54be2166]
  408fa7:	push   ebp
  408fa8:	pop    ds
  408fa9:	dec    ecx
  408faa:	mov    dh,0x2b
  408fac:	out    dx,al
  408fad:	arpl   bp,si
  408faf:	js     0x408fbf
  408fb1:	hlt    
  408fb2:	mov    al,ds:0xfde4c3bc
  408fb7:	arpl   WORD PTR [edx+eiz*8-0x47ffe469],sp
  408fbe:	shl    BYTE PTR [eax+0x7],0x5c
  408fc2:	data16 mov dl,0xe6
  408fc5:	push   0x979521fd
  408fca:	pop    es
  408fcb:	cmp    DWORD PTR [edx-0xa0d245],ebp
  408fd1:	jg     0x408f59
  408fd3:	sub    al,0xc0
  408fd5:	pop    ebx
  408fd6:	jo     0x409056
  408fd8:	push   ecx
  408fd9:	rol    DWORD PTR cs:[edx],0x6e
  408fdd:	jle    0x408f85
  408fdf:	fild   DWORD PTR [ebx+0xe]
  408fe2:	dec    ebp
  408fe3:	imul   ebx,DWORD PTR [ebx+edx*4],0x10
  408fe7:	idiv   DWORD PTR [edi]
  408fe9:	int    0xbb
  408feb:	fdivr  DWORD PTR [esi-0xc]
  408fee:	mov    bl,0x80
  408ff0:	xchg   ebp,eax
  408ff1:	fwait
  408ff2:	cld    
  408ff3:	iret   
  408ff4:	lds    eax,FWORD PTR [edx+0x254d0c17]
  408ffa:	and    BYTE PTR [ebx+0x5f0b87df],dl
  409000:	jl     0x409012
  409002:	mov    WORD PTR [ebp+0x12],?
  409005:	inc    DWORD PTR [edx+ecx*8+0x3f]
  409009:	add    eax,0x91376920
  40900e:	cmp    dl,cl
  409010:	(bad)
  409014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409015:	add    BYTE PTR [eax+ebp*4],ah
  409018:	(bad)
  40901b:	or     eax,0xed31869
  409020:	out    dx,al
  409021:	iret   
  409022:	sahf   
  409023:	push   ss
  409024:	xor    ebx,DWORD PTR [edi+0x77]
  409027:	out    dx,eax
  409028:	push   edx
  409029:	aam    0x5c
  40902b:	pop    ebx
  40902c:	aas    
  40902d:	(bad)  
  40902e:	push   ebp
  409030:	cld    
  409031:	leave  
  409032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409033:	int3   
  409034:	jmp    0x56914802
  409039:	mov    ebx,0x250c87d6
  40903e:	adc    DWORD PTR [edi+esi*4-0x5b0879b3],esp
  409045:	ror    DWORD PTR [edi+0x6faacf74],cl
  40904b:	iret   
  40904c:	loop   0x409026
  40904e:	in     al,0x28
  409050:	ja     0x40904f
  409052:	pop    esp
  409053:	(bad)  
  409054:	jg     0x409038
  409056:	push   0x7128c263
  40905b:	push   esi
  40905c:	dec    eax
  40905d:	stc    
  40905e:	mov    cl,0xf6
  409060:	pop    esi
  409061:	and    eax,0x4061317c
  409066:	or     ebp,DWORD PTR [edx-0x49]
  409069:	aaa    
  40906a:	adc    eax,DWORD PTR [ebx+edx*2-0x4c]
  40906e:	and    eax,0xa70f20c6
  409073:	loop   0x4090c7
  409075:	lea    ebp,[edi+0x41d539a1]
  40907b:	or     al,0x65
  40907d:	(bad)  
  40907e:	lods   al,BYTE PTR ds:[esi]
  40907f:	daa    
  409080:	ins    BYTE PTR es:[edi],dx
  409081:	(bad)  
  409082:	dec    esp
  409083:	loopne 0x4090b8
  409085:	ror    DWORD PTR [ecx],1
  409087:	pushf  
  409088:	mov    ds,esp
  40908a:	arpl   WORD PTR [ebp+0x690344fa],si
  409090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409091:	pop    edi
  409092:	mov    esp,0x354ec9a7
  409097:	push   ebx
  409098:	cmc    
  409099:	sar    BYTE PTR [eax-0xc],cl
  40909c:	jle    0x4090f4
  40909e:	mov    cl,0x8e
  4090a0:	retf   0x98f9
  4090a3:	pop    edi
  4090a4:	stc    
  4090a5:	out    0x99,eax
  4090a7:	pop    esi
  4090a8:	lea    eax,ss:[ebx+0x349cfeb5]
  4090af:	fbld   TBYTE PTR [esi+0x62]
  4090b2:	sub    edx,DWORD PTR [edi-0x1e]
  4090b5:	in     eax,0xc5
  4090b7:	iret   
  4090b8:	cdq    
  4090b9:	cli    
  4090ba:	xor    dl,BYTE PTR [eax-0x79c72309]
  4090c0:	mov    edi,0x3ba0a691
  4090c5:	lods   al,BYTE PTR ds:[esi]
  4090c6:	xor    DWORD PTR [edi],esi
  4090c8:	jbe    0x4090e9
  4090ca:	jecxz  0x40909c
  4090cc:	(bad)  
  4090cd:	xchg   ecx,eax
  4090ce:	ror    bl,0x33
  4090d1:	pop    ebx
  4090d2:	dec    ebp
  4090d3:	out    dx,al
  4090d4:	inc    esp
  4090d5:	fsubp  st(5),st
  4090d7:	dec    esp
  4090d8:	dec    ecx
  4090d9:	daa    
  4090da:	pop    esi
  4090db:	jns    0x40914e
  4090dd:	gs pop esi
  4090df:	push   0x780965d2
  4090e4:	int3   
  4090e5:	pop    ds
  4090e6:	scas   al,BYTE PTR es:[edi]
  4090e7:	cmp    bh,BYTE PTR [eax+0x50]
  4090ea:	ror    BYTE PTR [eax+0x45b3ef73],1
  4090f0:	mov    ecx,0x8fa864a3
  4090f5:	mov    ah,0x2c
  4090f7:	mov    ds:0xc57cc0e9,al
  4090fc:	push   ecx
  4090fd:	aaa    
  4090fe:	in     al,dx
  4090ff:	cdq    
  409100:	sub    al,0x5
  409102:	test   al,0x73
  409104:	xor    ch,BYTE PTR [edi]
  409106:	add    dl,dl
  409108:	outs   dx,DWORD PTR ds:[esi]
  409109:	lahf   
  40910a:	and    DWORD PTR ds:0x22464b55,edx
  409110:	mov    esi,0xe373cdfa
  409115:	aam    0xc2
  409117:	push   eax
  409118:	mov    ds:0xd62ef221,al
  40911d:	outs   dx,BYTE PTR ds:[esi]
  40911e:	sbb    BYTE PTR [eax-0x43197285],bh
  409124:	popa   
  409125:	outs   dx,DWORD PTR ds:[esi]
  409126:	scas   al,BYTE PTR es:[edi]
  409127:	dec    esi
  409128:	mov    ds:0xaf643989,al
  40912d:	and    eax,0xdaa3cf3d
  409132:	add    dh,BYTE PTR [eax+0x25e60a84]
  409138:	xrelease mov BYTE PTR [esi+edx*2],dl
  40913c:	lods   eax,DWORD PTR ds:[esi]
  40913d:	stos   DWORD PTR es:[edi],eax
  40913e:	mov    cl,0x3d
  409140:	hlt    
  409141:	xchg   ecx,eax
  409142:	addr16 dec ebx
  409144:	xchg   esp,eax
  409145:	mov    edi,cs
  409147:	int3   
  409148:	xchg   DWORD PTR [ecx+0x3ab7c3c3],edi
  40914e:	in     eax,0x9c
  409150:	pop    ecx
  409151:	inc    esp
  409152:	push   ss
  409153:	adc    eax,0x607c7733
  409158:	retf   0xcceb
  40915b:	psllq  mm6,QWORD PTR [eax]
  40915e:	popa   
  40915f:	ds retf 0x7809
  409163:	and    al,0x88
  409165:	add    esp,DWORD PTR [ecx+edx*8-0x18]
  409169:	or     DWORD PTR [ebp+0x44f1c702],edx
  40916f:	pop    eax
  409170:	in     eax,0x59
  409172:	test   eax,0xb9aa8237
  409177:	xor    BYTE PTR [edi+0x392d246e],al
  40917d:	jle    0x4091c8
  40917f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409180:	jmp    0x4091a7
  409182:	ret    
  409183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409184:	ret    0x2930
  409187:	clc    
  409188:	mov    WORD PTR [ebp-0x5c],?
  40918b:	aad    0x8a
  40918d:	(bad)  
  40918e:	xchg   ebx,eax
  40918f:	outs   dx,BYTE PTR ds:[esi]
  409190:	pop    ecx
  409191:	pop    ds
  409192:	adc    DWORD PTR [edx+0x7],ecx
  409195:	jnp    0x409172
  409197:	jnp    0x409186
  409199:	xor    al,0xda
  40919b:	and    ebx,esp
  40919d:	xchg   esi,eax
  40919e:	mov    esi,0x1dca809
  4091a3:	adc    bl,BYTE PTR [esi]
  4091a5:	or     BYTE PTR [edx+0x50cd3c73],0x31
  4091ac:	jmp    0xe463:0xc7ac15a2
  4091b3:	call   FWORD PTR [esi-0x30]
  4091b6:	or     bl,cl
  4091b8:	clc    
  4091b9:	fs jno 0x409231
  4091bc:	out    dx,al
  4091bd:	xchg   ecx,eax
  4091be:	xchg   ebp,eax
  4091bf:	mov    cx,0x58f4
  4091c3:	(bad)  
  4091c4:	and    eax,0xb0f45616
  4091c9:	(bad)  
  4091cb:	jo     0x4091b6
  4091cd:	dec    esp
  4091ce:	pop    DWORD PTR [eax]
  4091d0:	cwde   
  4091d1:	push   esp
  4091d2:	cmp    al,0x8c
  4091d4:	(bad)  
  4091d6:	fisubr WORD PTR [edx-0x32e4a0cd]
  4091dc:	sbb    BYTE PTR [ecx+0xe],ah
  4091df:	or     eax,0x7f33cd22
  4091e4:	mov    BYTE PTR [eax-0xb],ah
  4091e7:	das    
  4091e8:	sahf   
  4091e9:	pop    ebx
  4091ea:	jbe    0x409235
  4091ec:	push   esi
  4091ed:	in     al,0xc0
  4091ef:	retf   0x19c0
  4091f2:	mov    es,WORD PTR [ebx]
  4091f4:	xor    eax,0xaee5088b
  4091f9:	iret   
  4091fa:	and    edi,DWORD PTR [esi]
  4091fc:	xchg   ecx,eax
  4091fd:	xor    ch,bl
  4091ff:	dec    ecx
  409200:	mov    ds:0x6f2e96e8,al
  409205:	int    0x18
  409207:	outs   dx,BYTE PTR ds:[esi]
  409208:	inc    ebx
  409209:	inc    ecx
  40920a:	cwde   
  40920b:	jp     0x409212
  40920d:	push   esp
  40920e:	sub    esi,DWORD PTR [ebx]
  409210:	jge    0x40920a
  409212:	and    BYTE PTR [ebp+0x28],dl
  409215:	mov    DWORD PTR [edi],esi
  409217:	je     0x40919a
  409219:	retf   
  40921a:	jbe    0x4091e8
  40921c:	fcomp  DWORD PTR [ebx+0x4191784a]
  409222:	retf   0x9f9c
  409225:	mov    esi,0x7cbcead6
  40922a:	sub    ebx,DWORD PTR [ebp-0x25]
  40922d:	loopne 0x409295
  40922f:	mov    eax,0x28b208a4
  409234:	in     eax,dx
  409235:	dec    esp
  409236:	push   0xffffffcf
  409238:	test   edx,0x1e91baf0
  40923e:	loop   0x4092ad
  409240:	out    0x45,al
  409242:	jne    0x4091dd
  409244:	sahf   
  409245:	and    eax,0x54ba8378
  40924a:	ficomp WORD PTR [eax+eax*8]
  40924d:	in     al,dx
  40924e:	repnz leave 
  409250:	aad    0xc
  409252:	sar    DWORD PTR [edi-0xc798e15],0x17
  409259:	and    ebx,DWORD PTR [edx+ebx*4]
  40925c:	jle    0x4092cb
  40925e:	bnd jne 0x4091fb
  409261:	ror    BYTE PTR [edx-0x20],0xd3
  409265:	add    al,0xbb
  409267:	out    dx,al
  409268:	ds jb  0x409237
  40926b:	arpl   bx,si
  40926d:	(bad)  
  40926e:	xchg   esi,eax
  40926f:	hlt    
  409270:	dec    edx
  409271:	jae    0x4092df
  409273:	adc    eax,0xf4f2640f
  409278:	frstor [esi]
  40927a:	mov    eax,0xf70fa3a2
  40927f:	clc    
  409280:	call   0xf7d4e033
  409285:	lahf   
  409286:	(bad)  
  409288:	push   cs
  409289:	sub    eax,0xfffffff2
  40928c:	or     BYTE PTR [edi+0x44],0x66
  409290:	fwait
  409291:	sbb    DWORD PTR [eax],eax
  409293:	sbb    eax,0x4285dd2f
  409298:	xchg   ebp,eax
  409299:	dec    eax
  40929a:	outs   dx,DWORD PTR ds:[esi]
  40929b:	mov    WORD PTR [ebx],es
  40929d:	sub    edi,DWORD PTR [ecx+0x66]
  4092a0:	cmp    ebx,DWORD PTR [eax]
  4092a2:	cli    
  4092a3:	cmp    bh,BYTE PTR [ebp+edx*1+0x51]
  4092a7:	sub    al,0x78
  4092a9:	test   BYTE PTR [edi+edx*2],bh
  4092ac:	adc    ecx,DWORD PTR [edx+0x15]
  4092af:	cmp    DWORD PTR ds:0x2065ab6,esp
  4092b5:	popa   
  4092b6:	lock inc edi
  4092b8:	push   eax
  4092b9:	les    ebx,FWORD PTR [esi-0x50]
  4092bc:	xor    eax,0x1e9c2a58
  4092c1:	mov    esp,0x4a260a6f
  4092c6:	fst    DWORD PTR [esi]
  4092c8:	sub    esi,DWORD PTR [edi-0x57566fdf]
  4092ce:	mov    ah,0x3b
  4092d0:	sub    edi,edx
  4092d2:	mov    ds:0xef570aad,eax
  4092d7:	mov    dh,0x51
  4092d9:	shl    DWORD PTR [esi+eax*8],cl
  4092dc:	jle    0x409277
  4092de:	xor    eax,0xeb69484d
  4092e3:	adc    eax,0xeccd8173
  4092e8:	cli    
  4092e9:	sahf   
  4092ea:	or     ecx,DWORD PTR [ebx]
  4092ec:	sub    DWORD PTR [esi+0x2dc1986],edx
  4092f2:	xchg   esi,eax
  4092f3:	inc    edi
  4092f4:	jge    0x40934e
  4092f6:	jo     0x4092a9
  4092f8:	push   ds
  4092f9:	popf   
  4092fa:	(bad)  
  4092fb:	push   edx
  4092fc:	or     BYTE PTR [ebp+0x37],ah
  4092ff:	psubusw mm5,QWORD PTR [ebp+0x28]
  409303:	jp     0x4092b0
  409305:	in     eax,dx
  409306:	das    
  409307:	ds (bad) 
  409309:	sbb    DWORD PTR [esi-0x31],ebx
  40930c:	dec    edi
  40930d:	fistp  QWORD PTR [esi]
  40930f:	add    BYTE PTR [ebx+0x59],ah
  409312:	je     0x40933e
  409314:	jle    0x409364
  409316:	shl    BYTE PTR [ebp+ecx*8-0x398d066b],1
  40931d:	sub    bl,BYTE PTR fs:[ecx+0x39]
  409321:	pop    esi
  409322:	mov    ecx,0xc239f42a
  409327:	jp     0x4092bc
  409329:	fsub   QWORD PTR [edi-0x54]
  40932c:	pusha  
  40932d:	out    dx,al
  40932e:	xchg   BYTE PTR [ebp-0x3e],ch
  409331:	ret    
  409332:	add    ebp,DWORD PTR [ecx+0x7a]
  409335:	repnz inc eax
  409337:	jmp    0x409378
  409339:	cdq    
  40933a:	inc    edi
  40933b:	pushf  
  40933c:	push   es
  40933d:	stos   DWORD PTR es:[edi],eax
  40933e:	icebp  
  40933f:	mov    dl,bl
  409341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409342:	xchg   esp,eax
  409343:	out    0xe1,al
  409345:	dec    edx
  409346:	push   0xc8a0bbee
  40934b:	dec    ebp
  40934c:	mov    edx,0x5d99bfd3
  409351:	cmc    
  409352:	mov    ch,0x55
  409354:	lods   al,BYTE PTR ds:[esi]
  409355:	push   edx
  409356:	cmc    
  409357:	mov    ch,0x37
  409359:	(bad)  
  40935c:	mov    eax,0x29d77bbb
  409361:	frstor [edx+0x4e]
  409364:	add    edx,DWORD PTR [ecx+0x144824b2]
  40936a:	jae    0x4093ad
  40936c:	push   eax
  40936d:	daa    
  40936e:	jns    0x4093b8
  409370:	sbb    dh,BYTE PTR [eax+0x20]
  409373:	cs mov bh,0x73
  409376:	mov    bl,0x14
  409378:	mov    edi,0x5951b417
  40937d:	mov    dl,dh
  40937f:	out    dx,eax
  409380:	aaa    
  409381:	sti    
  409382:	int3   
  409383:	inc    ebx
  409384:	bound  esi,QWORD PTR [edx-0x4f]
  409387:	or     BYTE PTR [eax-0x15041161],dl
  40938d:	inc    ecx
  40938e:	stc    
  40938f:	arpl   WORD PTR [ebp-0x6fd70be5],bx
  409395:	jnp    0x4093ba
  409397:	mov    al,ds:0x7c341a28
  40939c:	sahf   
  40939d:	outs   dx,BYTE PTR ds:[esi]
  40939e:	sub    DWORD PTR [ecx-0xc],0x44504030
  4093a5:	xor    dh,dh
  4093a7:	imul   edi,DWORD PTR [ecx],0xce4b132c
  4093ad:	jl     0x409355
  4093af:	cmp    esi,ebx
  4093b1:	push   edx
  4093b2:	push   eax
  4093b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093b4:	push   ebp
  4093b5:	jmp    0x44ede3ec
  4093ba:	aad    0xd4
  4093bc:	daa    
  4093bd:	dec    ebx
  4093be:	mov    eax,ds:0x38b48e15
  4093c3:	aad    0xd4
  4093c5:	push   eax
  4093c6:	lock cmp esi,ebp
  4093c9:	sbb    BYTE PTR [esi],ah
  4093cb:	xlat   BYTE PTR ds:[ebx]
  4093cc:	mov    edx,eax
  4093ce:	out    0x28,eax
  4093d0:	cmp    esp,esp
  4093d2:	jle    0x409372
  4093d4:	ja     0x40939c
  4093d6:	add    al,0xbc
  4093d8:	push   ss
  4093d9:	ins    BYTE PTR es:[edi],dx
  4093da:	mov    DWORD PTR [eax+0xa],ecx
  4093dd:	out    0x8a,eax
  4093df:	aam    0x7c
  4093e1:	sti    
  4093e2:	shl    edx,cl
  4093e4:	mov    ebx,0xdd976f91
  4093e9:	sbb    ah,bl
  4093eb:	repz in al,0x5
  4093ee:	call   0xa9b4cef9
  4093f3:	xchg   ebx,eax
  4093f4:	fwait
  4093f5:	inc    esp
  4093f6:	xchg   edx,eax
  4093f7:	ja     0x4093a9
  4093f9:	add    al,bl
  4093fb:	stc    
  4093fc:	or     eax,0x9d826e6c
  409401:	jmp    FWORD PTR [ebp-0x6d]
  409404:	inc    ebp
  409405:	dec    edx
  409406:	(bad)  
  409408:	jg     0x4093ce
  40940a:	in     al,0x5
  40940c:	pop    ss
  40940d:	popf   
  40940e:	ret    
  40940f:	retf   0xed56
  409412:	dec    ebp
  409413:	xor    eax,0x6226bcc2
  409418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409419:	xor    cl,BYTE PTR [ecx+0x61]
  40941c:	ds dec eax
  40941e:	xor    edi,DWORD PTR [edx+ebp*2+0x2e]
  409422:	mov    ds:0x807b1dd5,eax
  409427:	mov    ch,0x93
  409429:	retf   0xe907
  40942c:	je     0x4093c0
  40942e:	call   0x7c94:0xc5653964
  409435:	xlat   BYTE PTR ds:[ebx]
  409436:	sbb    DWORD PTR [ecx-0x48],0x4e
  40943a:	int    0x69
  40943c:	inc    ecx
  40943d:	or     eax,0xa5546e0c
  409442:	(bad)  
  409443:	(bad)  
  409444:	mov    cs,WORD PTR [esi+0x2f]
  409447:	cli    
  409448:	inc    ebp
  409449:	and    ch,bl
  40944b:	cmp    DWORD PTR [edx+0x34],ebx
  40944e:	lds    eax,FWORD PTR es:[ebx-0xd]
  409452:	fmul   QWORD PTR [edi+esi*8-0x4]
  409456:	std    
  409457:	push   edi
  409458:	add    eax,0xf41f45fd
  40945d:	pop    edx
  40945e:	les    esi,FWORD PTR [esi]
  409460:	sub    eax,0xe6112868
  409465:	add    esi,esi
  409467:	rcl    DWORD PTR [ecx+0x6f51fc93],1
  40946d:	dec    ebp
  40946e:	pop    edx
  40946f:	push   ebp
  409470:	cmp    al,0x4d
  409472:	add    edi,DWORD PTR [esi]
  409474:	mov    ah,0x70
  409476:	add    al,0xca
  409478:	iret   
  409479:	jo     0x4094df
  40947b:	sub    eax,0xc4a3acbd
  409480:	mov    eax,0xc0ab2ed3
  409485:	jmp    FWORD PTR [ecx+0x370ce527]
  40948b:	xchg   esi,eax
  40948c:	mov    esi,0x52d15b51
  409491:	test   BYTE PTR [esp+eax*1-0x7f],ah
  409495:	imul   edx,edx,0xc1a8e7d0
  40949b:	ficomp WORD PTR [ecx+0x18]
  40949e:	pop    ebp
  40949f:	je     0x4094d4
  4094a1:	dec    ebx
  4094a2:	int    0x55
  4094a4:	dec    ebx
  4094a5:	in     al,0xe3
  4094a7:	cmp    esp,edx
  4094a9:	sbb    al,0x6a
  4094ab:	ffree  st(2)
  4094ad:	ja     0x4094cc
  4094af:	popf   
  4094b0:	sbb    BYTE PTR [ebx+0x6a],ah
  4094b3:	and    eax,0xc13d3570
  4094b8:	pop    ebx
  4094b9:	pop    ebp
  4094ba:	(bad)  
  4094bb:	hlt    
  4094bc:	mov    ah,0x19
  4094be:	cmp    ebx,0xffffffa3
  4094c1:	push   edx
  4094c2:	inc    ebx
  4094c3:	dec    ebp
  4094c4:	ffreep st(6)
  4094c6:	das    
  4094c7:	xchg   ecx,eax
  4094c8:	icebp  
  4094c9:	lds    esi,FWORD PTR [esi+0x1c]
  4094cc:	push   esi
  4094cd:	adc    bl,al
  4094cf:	adc    BYTE PTR [eax],0x1e
  4094d2:	mov    edx,0x8c4ea841
  4094d8:	jb     0x409540
  4094da:	inc    edx
  4094db:	popf   
  4094dc:	les    ebp,FWORD PTR es:[edi+0x7bf54bef]
  4094e3:	push   0xffffff87
  4094e5:	ss pop esp
  4094e7:	inc    edi
  4094e8:	xchg   ecx,eax
  4094e9:	cmp    eax,0x876da87a
  4094ee:	or     eax,0xd629d20c
  4094f3:	sbb    al,0x3d
  4094f6:	xor    BYTE PTR [eax+ebx*4+0x67a24ee2],dh
  4094fd:	aaa    
  4094fe:	jle    0x40949b
  409500:	sub    dl,BYTE PTR [edx]
  409502:	out    0x19,eax
  409504:	pop    edx
  409505:	ror    BYTE PTR [ebx+edi*1],0x17
  409509:	pop    esi
  40950a:	sbb    BYTE PTR [edi],dh
  40950c:	aas    
  40950d:	push   eax
  40950e:	sahf   
  40950f:	xor    BYTE PTR [esi+ebx*8],0x40
  409513:	push   0x2b664731
  409518:	add    ebp,DWORD PTR [esi]
  40951a:	push   edi
  40951b:	clc    
  40951c:	jno    0x4094ac
  40951e:	jl     0x409547
  409520:	and    eax,0x1e9fd7b6
  409525:	mov    ebx,0xae0a804b
  40952a:	(bad)  
  40952b:	sar    DWORD PTR [edi+0x63],cl
  40952e:	sub    ecx,esp
  409530:	jo     0x409577
  409532:	and    BYTE PTR [eax-0x36],bl
  409535:	cmp    bl,BYTE PTR [ecx-0x75]
  409538:	scas   eax,DWORD PTR es:[edi]
  409539:	outs   dx,DWORD PTR ds:[esi]
  40953a:	mov    ch,0x3
  40953c:	sbb    dh,bh
  40953e:	loope  0x40955b
  409540:	xchg   edx,eax
  409541:	mov    ebx,DWORD PTR [edx+0x0]
  409544:	hlt    
  409545:	mov    al,ds:0x6e279df8
  40954a:	test   edi,0x1c03482a
  409550:	aam    0x87
  409552:	aam    0xc9
  409554:	cmc    
  409555:	out    0x8e,eax
  409557:	mov    esp,0x8d8f6209
  40955c:	es inc eax
  40955e:	jne    0x409528
  409560:	jb     0x40954f
  409562:	xchg   esp,eax
  409563:	stos   DWORD PTR es:[edi],eax
  409564:	or     esi,DWORD PTR [ebp-0x65]
  409567:	cmc    
  409568:	adc    DWORD PTR [ebx+0x6c],edi
  40956b:	loope  0x4095e1
  40956d:	rol    DWORD PTR [edi+0x10],1
  409570:	sbb    cl,BYTE PTR [ebx+ebp*4-0x1f6cd26f]
  409577:	scas   al,BYTE PTR es:[edi]
  409578:	fisub  DWORD PTR [edx+0x2637bfea]
  40957e:	mov    ah,0x54
  409580:	cmc    
  409581:	inc    esi
  409582:	call   0xa644074e
  409587:	out    dx,eax
  409588:	cld    
  409589:	loope  0x40952c
  40958b:	mov    edx,0xce7c08a4
  409590:	rcr    BYTE PTR [ebp-0x38],1
  409593:	les    eax,FWORD PTR [ecx+eiz*4+0x48e89610]
  40959a:	scas   al,BYTE PTR es:[edi]
  40959b:	cmp    DWORD PTR [eax-0x23bd2d8a],edx
  4095a1:	jle    0x40958f
  4095a3:	jb     0x409590
  4095a5:	loope  0x40954b
  4095a7:	ds push es
  4095a9:	pushf  
  4095aa:	(bad)  
  4095ac:	enter  0xcb0e,0xa6
  4095b0:	(bad)  
  4095b1:	fld    DWORD PTR [eax+0x3f1910e2]
  4095b7:	iret   
  4095b8:	je     0x4095ac
  4095ba:	rcl    edi,cl
  4095bc:	mov    dl,0xb8
  4095be:	cmp    ebp,DWORD PTR [eax+esi*4]
  4095c1:	(bad)  
  4095c2:	rcr    BYTE PTR [eax+eax*1-0x42ad3237],1
  4095c9:	(bad)  
  4095ca:	std    
  4095cb:	or     al,0xdc
  4095cd:	jmp    0x75477f73
  4095d2:	mov    eax,0xcbb4e0c7
  4095d7:	inc    edi
  4095d8:	(bad)  
  4095d9:	pop    ds
  4095da:	ja     0x40956a
  4095dc:	aaa    
  4095dd:	sub    BYTE PTR [esi+0x72062c2b],ch
  4095e3:	dec    esp
  4095e4:	fcom   QWORD PTR [esi+0x75]
  4095e7:	sub    BYTE PTR [edx],0xaa
  4095ea:	out    0xb2,al
  4095ec:	mov    edx,0xca5b2aeb
  4095f1:	(bad)  
  4095f2:	fmul   QWORD PTR [edx]
  4095f4:	jp     0x40966a
  4095f6:	cs mov dl,0x88
  4095f9:	retf   0x5aad
  4095fc:	mov    ecx,0x68a74c6e
  409601:	das    
  409602:	mov    al,0x95
  409604:	jmp    0x9317:0xfce352f4
  40960b:	or     dl,BYTE PTR [esi+0x7e0c3360]
  409611:	jnp    0x409642
  409613:	fnstsw WORD PTR [edx]
  409615:	or     esi,esi
  409617:	out    0xa2,al
  409619:	fdiv   DWORD PTR [edx]
  40961b:	lods   eax,DWORD PTR ds:[esi]
  40961c:	enter  0x8c99,0xfa
  409620:	call   0xefe5a52
  409625:	pop    ebp
  409626:	mov    edx,0xd82c686f
  40962b:	jne    0x40966b
  40962d:	pop    ss
  40962e:	rol    cl,0xdd
  409631:	ret    0xc9c1
  409634:	sub    DWORD PTR ds:0xef12684e,0xe9603ace
  40963e:	call   0xbfa58cfd
  409643:	mov    al,ds:0x4d64fda4
  409648:	mov    bh,0x9b
  40964a:	add    esp,DWORD PTR [edi]
  40964c:	sub    DWORD PTR [ecx-0x34],0xd02847f7
  409653:	jp     0x4096bc
  409655:	out    0xc5,al
  409657:	idiv   DWORD PTR [ebp-0x5d]
  40965a:	adc    dl,0x84
  40965d:	pop    ecx
  40965e:	xchg   esp,eax
  40965f:	pop    esp
  409660:	jg     0x4095e4
  409662:	add    eax,0x1ed2f167
  409667:	sub    al,0x8b
  409669:	dec    ecx
  40966a:	fs call 0x3ac5:0xa3db568d
  409672:	pop    esi
  409673:	sbb    dh,BYTE PTR [edi+0xc]
  409676:	pop    ds
  409677:	sahf   
  409678:	add    eax,0xedd3fdf5
  40967d:	inc    esi
  40967e:	(bad)  
  40967f:	out    dx,al
  409680:	and    DWORD PTR [ecx-0x26f50f6f],ecx
  409686:	ja     0x409674
  409688:	sbb    DWORD PTR [edx],esi
  40968a:	jle    0x409695
  40968c:	dec    ecx
  40968d:	mov    eax,ds:0xcbd708de
  409692:	(bad)  
  409693:	xchg   ebx,eax
  409694:	push   ebp
  409695:	sbb    bh,BYTE PTR [eax]
  409697:	mov    edi,0x4f737d21
  40969c:	int3   
  40969d:	jo     0x4096a1
  40969f:	out    dx,eax
  4096a0:	push   ds
  4096a1:	retf   
  4096a2:	jp     0x40965b
  4096a4:	inc    esi
  4096a5:	lock mov ah,0xfc
  4096a8:	add    al,BYTE PTR [ebx]
  4096aa:	inc    ecx
  4096ab:	jne    0x409665
  4096ad:	cmp    ecx,DWORD PTR [eax+0x2d]
  4096b0:	pusha  
  4096b1:	dec    ecx
  4096b2:	aam    0x32
  4096b4:	ins    DWORD PTR es:[edi],dx
  4096b5:	jp     0x4096ee
  4096b7:	in     al,dx
  4096b8:	repnz xlat BYTE PTR ds:[ebx]
  4096ba:	pop    ss
  4096bb:	outs   dx,BYTE PTR ds:[esi]
  4096bc:	mov    cl,0x60
  4096be:	mov    ds:0x39bfc1ef,eax
  4096c3:	pop    ecx
  4096c4:	cmp    eax,eax
  4096c6:	sub    eax,0x1b965c54
  4096cb:	and    edx,DWORD PTR [ecx-0xf0f0f32]
  4096d1:	sbb    al,0x6d
  4096d3:	int    0x34
  4096d5:	and    eax,0x10ad3947
  4096da:	jl     0x409716
  4096dc:	(bad)  
  4096dd:	jmp    ebp
  4096df:	and    al,0x3d
  4096e1:	stos   DWORD PTR es:[edi],eax
  4096e2:	sub    BYTE PTR [edx-0x2d826073],ch
  4096e8:	jmp    0xf5de6711
  4096ed:	pop    edi
  4096ee:	xor    BYTE PTR [edx-0x79],0x16
  4096f2:	add    eax,0x69fb5cce
  4096f7:	jns    0x409739
  4096f9:	sub    eax,DWORD PTR [edx+edx*4+0x3b]
  4096fd:	cli    
  4096fe:	jae    0x40970c
  409700:	scas   al,BYTE PTR es:[edi]
  409701:	adc    dl,BYTE PTR [ecx]
  409703:	loope  0x409772
  409705:	mov    edx,DWORD PTR [esi-0x62]
  409708:	jnp    0x40975e
  40970a:	shl    DWORD PTR [edi+0x3af776a9],cl
  409710:	or     DWORD PTR [ecx],eax
  409712:	and    ecx,DWORD PTR [ebx+0x55ba2eb2]
  409718:	adc    eax,0xd4ef6e59
  40971d:	shr    DWORD PTR [ebp+0x59792141],1
  409723:	stos   BYTE PTR es:[edi],al
  409724:	push   esp
  409725:	shr    DWORD PTR [ebp-0x80d3206],0x2f
  40972c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40972d:	stos   DWORD PTR es:[edi],eax
  40972e:	jecxz  0x409758
  409730:	sub    eax,0x55a565f5
  409735:	mov    ds:0x2549f54e,eax
  40973a:	fdiv   st,st(2)
  40973c:	push   0x14feb1a2
  409741:	dec    ecx
  409742:	sub    BYTE PTR [eax+0x40],bh
  409745:	mov    ecx,0xf8a7e79d
  40974a:	arpl   WORD PTR [ebx],si
  40974c:	lods   al,BYTE PTR ds:[esi]
  40974d:	fiadd  WORD PTR [ebx-0xc]
  409750:	jae    0x40978c
  409752:	imul   eax,DWORD PTR [ebp-0x740b6e52],0x6492d2f1
  40975c:	gs int 0x3e
  40975f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409760:	inc    ebp
  409761:	pop    ecx
  409762:	cmp    BYTE PTR [edi+eax*4-0x28],ch
  409766:	cmp    al,0xa3
  409768:	mov    edi,0x92a16b9c
  40976d:	aas    
  40976e:	aaa    
  40976f:	jecxz  0x409772
  409771:	clc    
  409772:	daa    
  409773:	push   ss
  409774:	sahf   
  409775:	ja     0x40978c
  409777:	popa   
  409778:	aaa    
  409779:	sti    
  40977a:	xchg   edx,eax
  40977b:	ins    DWORD PTR es:[edi],dx
  40977c:	mov    al,0x1e
  40977e:	add    edi,DWORD PTR [ebx]
  409780:	lods   al,BYTE PTR ds:[esi]
  409781:	into   
  409782:	cld    
  409783:	clc    
  409784:	xor    BYTE PTR [ebp+0x3b5bbea4],dh
  40978a:	test   al,0xb6
  40978c:	jbe    0x409716
  40978e:	adc    esi,DWORD PTR [edx]
  409790:	aas    
  409791:	rcr    DWORD PTR [edx+0x25742489],cl
  409797:	enter  0x9bb0,0xa
  40979b:	sub    ebp,DWORD PTR [edx+0x7c]
  40979e:	push   cs
  40979f:	shl    BYTE PTR [esi+0x45],0xc8
  4097a3:	pop    esi
  4097a4:	jecxz  0x4097f8
  4097a6:	dec    ebp
  4097a7:	cmp    edx,ebx
  4097a9:	rcr    BYTE PTR ds:0x47aa983a,0x6
  4097b0:	and    DWORD PTR es:[edi+0x465159b8],edx
  4097b7:	lahf   
  4097b8:	inc    ebx
  4097b9:	push   0x53edd217
  4097be:	inc    ebp
  4097bf:	jmp    0x6f39:0xb7b44577
  4097c6:	daa    
  4097c7:	sbb    bl,BYTE PTR [esi]
  4097c9:	add    al,0xef
  4097cb:	push   ecx
  4097cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097cd:	retf   0x726
  4097d0:	int3   
  4097d1:	add    ch,BYTE PTR [esi+0x1b6bc0e3]
  4097d7:	push   cs
  4097d8:	shr    BYTE PTR [edx-0x343e45fe],1
  4097de:	jmp    0xc1764b60
  4097e3:	bound  edx,QWORD PTR [ecx+edi*8-0x58]
  4097e7:	xchg   edx,eax
  4097e8:	or     DWORD PTR ds:0xa829d6e7,ebp
  4097ee:	cld    
  4097ef:	sub    BYTE PTR [ecx-0x267116d2],cl
  4097f5:	(bad)  
  4097f6:	xor    DWORD PTR [ebx],edi
  4097f8:	add    al,BYTE PTR [ecx-0x6c6965a6]
  4097fe:	and    DWORD PTR [edi-0x1b],0xeb6b1e49
  409805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409806:	popa   
  409807:	add    eax,0x79b401d3
  40980c:	dec    edx
  40980d:	cmp    ah,bl
  40980f:	les    eax,FWORD PTR [eax]
  409811:	mov    fs,WORD PTR [edx-0x7d]
  409814:	mov    dl,0x57
  409816:	loop   0x4097d9
  409818:	and    ch,BYTE PTR [ecx+ecx*4-0x74c89028]
  40981f:	push   ecx
  409820:	loope  0x409868
  409822:	xor    eax,DWORD PTR [ebx+eiz*1+0x22b1a4ad]
  409829:	mov    esp,0x3797838e
  40982e:	nop
  40982f:	lods   eax,DWORD PTR ds:[esi]
  409830:	pop    ds
  409831:	pop    esp
  409832:	pop    ebx
  409833:	and    al,ch
  409835:	push   edx
  409836:	xlat   BYTE PTR ds:[ebx]
  409837:	push   cs
  409838:	clc    
  409839:	xchg   DWORD PTR [eax],eax
  40983b:	cli    
  40983c:	jmp    0xd19304d4
  409841:	pushf  
  409842:	int    0xed
  409844:	sub    al,0xe8
  409846:	mov    ds,esi
  409848:	in     al,dx
  409849:	cmp    al,0xaf
  40984b:	inc    eax
  40984c:	jg     0x40980b
  40984e:	push   eax
  40984f:	or     eax,0x1b8fab20
  409854:	ins    BYTE PTR es:[edi],dx
  409855:	pop    ss
  409856:	xchg   ecx,eax
  409857:	jge    0x409860
  409859:	out    dx,al
  40985a:	aaa    
  40985b:	retf   0x4cad
  40985e:	xor    bh,BYTE PTR [ebp+0x6efb1822]
  409864:	gs inc ebp
  409866:	loopne 0x409878
  409868:	cmp    ebp,edx
  40986a:	scas   al,BYTE PTR es:[edi]
  40986b:	out    dx,eax
  40986c:	dec    ecx
  40986d:	in     al,dx
  40986e:	jnp    0x4097f2
  409870:	rcl    ah,1
  409872:	push   edi
  409873:	mov    WORD PTR [esi],cs
  409875:	mov    WORD PTR [edx],?
  409877:	jno    0x4098c3
  409879:	aaa    
  40987a:	cli    
  40987b:	sbb    ebp,DWORD PTR [edx+0x73]
  40987e:	loope  0x40982f
  409880:	push   esp
  409881:	mov    ds:0x3b9ae536,eax
  409886:	adc    al,BYTE PTR [eax+0x37809695]
  40988c:	imul   edi,DWORD PTR [esi+0x78ebd529],0x7efee8ed
  409896:	and    eax,0xbaa69ef6
  40989b:	xchg   ebx,eax
  40989c:	adc    eax,0xd620c43a
  4098a1:	cdq    
  4098a2:	into   
  4098a3:	es push 0xffffffe7
  4098a6:	mov    cl,ch
  4098a8:	in     al,0xf
  4098aa:	faddp  st(1),st
  4098ac:	adc    al,0x58
  4098ae:	sub    eax,0xb59db585
  4098b3:	leave  
  4098b4:	ds stos DWORD PTR es:[edi],eax
  4098b6:	mov    ds:0xb2c93cb0,al
  4098bb:	rcl    DWORD PTR [esi],cl
  4098bd:	call   ebx
  4098bf:	mov    edi,0x7195ffd6
  4098c4:	jmp    0xd1f2:0xfe0259b4
  4098cb:	gs ret 0xe84d
  4098cf:	popa   
  4098d0:	jecxz  0x40986e
  4098d2:	sbb    DWORD PTR [eax],0x462fc917
  4098d8:	call   0xd1294e22
  4098dd:	rol    DWORD PTR [eax],1
  4098df:	sti    
  4098e0:	sbb    DWORD PTR [ebx+0x23805107],ebp
  4098e6:	xor    eax,0xc6f55661
  4098eb:	addr16 aad 0x8f
  4098ee:	jmp    DWORD PTR [ebx+0x288c3854]
  4098f4:	lods   eax,DWORD PTR ds:[esi]
  4098f5:	mov    bh,0x14
  4098f7:	push   edi
  4098f8:	push   edi
  4098f9:	bound  ecx,QWORD PTR [edi]
  4098fb:	add    DWORD PTR [edi],ecx
  4098fd:	sub    ch,ah
  4098ff:	out    0x44,al
  409901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409902:	mov    ds:0xfb0972ba,eax
  409907:	cmp    cl,BYTE PTR [ecx+eax*1+0x1c]
  40990b:	pop    es
  40990c:	add    DWORD PTR [esi-0x284185f1],ecx
  409912:	popf   
  409913:	fist   WORD PTR [esi-0x711d072b]
  409919:	pop    ss
  40991a:	mov    DWORD PTR [ecx+0x43],ebp
  40991d:	jmp    0x27c9:0x87027639
  409924:	shl    DWORD PTR [esi+0x40ac9a55],1
  40992a:	and    DWORD PTR [ebp+0x70],ebp
  40992d:	mov    ecx,0x71a159ce
  409932:	adc    BYTE PTR [ebx+0x3e],bh
  409935:	mov    al,ds:0xb2a89cdb
  40993a:	cmp    eax,DWORD PTR [ebp-0x32add359]
  409940:	clc    
  409941:	jmp    0x409997
  409943:	mov    ah,0x52
  409945:	xor    DWORD PTR [eax-0x32a63019],edx
  40994b:	jns    0x4099b0
  40994d:	shr    BYTE PTR [edx+0x7d],cl
  409950:	div    BYTE PTR [edx+0x3b]
  409953:	(bad)  [edx+ebp*4-0x4d816d5e]
  40995a:	jne    0x4099cb
  40995c:	cmp    al,BYTE PTR [ebp+0x1067ebcb]
  409962:	adc    eax,esp
  409964:	popf   
  409965:	cmp    DWORD PTR [ebp+0x5a12b920],esp
  40996b:	js     0x40999b
  40996d:	mov    dh,0xab
  40996f:	out    dx,eax
  409970:	xchg   BYTE PTR [ecx],bl
  409972:	sahf   
  409973:	adc    bh,bl
  409975:	ins    BYTE PTR es:[edi],dx
  409976:	retf   
  409977:	cmp    al,0xb3
  409979:	and    bh,BYTE PTR [ebp-0x44dda6e0]
  40997f:	add    eax,esi
  409981:	xchg   BYTE PTR ds:0xed3ecd68,bl
  409987:	in     eax,dx
  409988:	mov    ds:0x4fef3e41,eax
  40998d:	push   edx
  40998e:	les    edx,FWORD PTR [esi+eax*8]
  409991:	jbe    0x409913
  409993:	mov    al,0x25
  409995:	jmp    0x7e4b738b
  40999a:	jo     0x409981
  40999c:	inc    esi
  40999d:	mov    esi,0x3b9bac4a
  4099a2:	fist   WORD PTR [edx]
  4099a4:	repz mov edi,ebp
  4099a7:	cli    
  4099a8:	inc    esi
  4099a9:	aam    0x2d
  4099ab:	(bad)  
  4099ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099ad:	and    cl,dl
  4099af:	pop    edi
  4099b0:	inc    eax
  4099b1:	sbb    DWORD PTR [edi],esi
  4099b3:	xchg   ecx,eax
  4099b4:	(bad)  
  4099b5:	retf   0x65cd
  4099b8:	mov    bh,0xe9
  4099ba:	add    ecx,DWORD PTR [esi-0x3ee00e8d]
  4099c0:	cwde   
  4099c1:	sub    BYTE PTR [edi+0x2f],cl
  4099c4:	ret    
  4099c5:	dec    esp
  4099c6:	and    eax,0x87b8135f
  4099cb:	xchg   edi,eax
  4099cc:	jb     0x409957
  4099ce:	gs retf 0x2725
  4099d2:	or     BYTE PTR [ecx-0x31],ch
  4099d5:	or     BYTE PTR [ebp-0x5e593cbd],al
  4099db:	push   ecx
  4099dc:	xor    DWORD PTR [edi+ebx*8+0x2fc0026b],0xbf90547
  4099e7:	sub    DWORD PTR [eax+0x605e451e],0xffffffdb
  4099ee:	jbe    0x409a21
  4099f0:	and    edi,0x2e
  4099f3:	or     cx,cx
  4099f6:	mov    al,ds:0x2e8d928c
  4099fb:	mov    DWORD PTR ds:0x515ad63a,ebx
  409a01:	sub    ecx,DWORD PTR [ebp+0x6c]
  409a04:	and    esi,ebx
  409a06:	arpl   WORD PTR [edi-0xcdcd255],bx
  409a0c:	mov    ah,0xd6
  409a0e:	inc    edi
  409a0f:	inc    eax
  409a10:	(bad)  
  409a11:	in     al,dx
  409a12:	sbb    eax,0xb0a20242
  409a17:	ds ds repz icebp 
  409a1b:	lods   al,BYTE PTR ds:[esi]
  409a1c:	nop
  409a1d:	or     al,0xa9
  409a1f:	into   
  409a20:	dec    esi
  409a21:	out    dx,al
  409a22:	or     ebp,DWORD PTR [ebx-0xd]
  409a25:	in     al,0x2d
  409a27:	jp     0x409a55
  409a29:	fwait
  409a2a:	push   esi
  409a2b:	jecxz  0x4099c0
  409a2d:	sahf   
  409a2e:	sub    al,0x41
  409a30:	fdiv   DWORD PTR [esi+0x10]
  409a33:	mov    dl,0x82
  409a35:	add    DWORD PTR [ecx+0x13],ebp
  409a38:	cmp    al,0x17
  409a3a:	sar    BYTE PTR [ebp+0x7aa0b034],cl
  409a40:	pop    ebp
  409a41:	out    0x4b,eax
  409a43:	adc    ebp,DWORD PTR [edi]
  409a45:	ins    BYTE PTR es:[edi],dx
  409a46:	call   0x9dde:0xf841511d
  409a4d:	inc    ebp
  409a4e:	scas   al,BYTE PTR es:[edi]
  409a4f:	lods   eax,DWORD PTR ds:[esi]
  409a50:	jmp    DWORD PTR [eax+ebx*1+0x7e]
  409a54:	les    ebp,FWORD PTR [esi+0x79]
  409a57:	stos   DWORD PTR es:[edi],eax
  409a58:	test   BYTE PTR [eax],0xb8
  409a5b:	dec    esi
  409a5c:	pop    esp
  409a5d:	ja     0x409ad4
  409a5f:	mov    ecx,0xa4a57000
  409a64:	sbb    eax,0x43039eae
  409a69:	lock sar DWORD PTR [ecx+0x3351112c],0x42
  409a71:	pop    esp
  409a72:	into   
  409a73:	xor    esp,DWORD PTR [eax]
  409a75:	or     eax,0x53c7229d
  409a7a:	jae    0x409ac9
  409a7c:	xlat   BYTE PTR ds:[ebx]
  409a7d:	(bad)  
  409a7e:	mov    bl,0x1
  409a80:	test   BYTE PTR [edx+0x3c],ch
  409a83:	add    eax,0x4922656e
  409a88:	(bad)  
  409a89:	sbb    ch,BYTE PTR [edx]
  409a8b:	pop    ebp
  409a8c:	mov    ch,0x9
  409a8e:	push   es
  409a8f:	sbb    al,0xe6
  409a91:	aad    0xd7
  409a93:	dec    esp
  409a94:	pop    edx
  409a95:	jb     0x409a19
  409a97:	rol    BYTE PTR [eax-0x4beca36c],1
  409a9d:	stos   BYTE PTR es:[edi],al
  409a9e:	add    BYTE PTR [ecx],0x7e
  409aa1:	jl     0x409a67
  409aa3:	xor    BYTE PTR [ebp-0x629a56b8],dh
  409aa9:	call   0x7ea:0x89f7062e
  409ab0:	lahf   
  409ab1:	inc    eax
  409ab2:	sbb    ebp,DWORD PTR [edi+0x4b16d167]
  409ab8:	adc    eax,0x28737eb1
  409abd:	das    
  409abe:	dec    BYTE PTR [ebx]
  409ac0:	pop    ss
  409ac1:	pop    eax
  409ac2:	aam    0xae
  409ac4:	mov    ch,0x87
  409ac6:	adc    DWORD PTR [edi+0xbc2faf1],0x5c9db7bb
  409ad0:	jecxz  0x409a61
  409ad2:	pop    ebx
  409ad3:	test   dh,bl
  409ad5:	mov    ecx,0x93e1e6d5
  409ada:	xchg   ecx,eax
  409adb:	call   0xd25c:0x41164c7f
  409ae2:	popa   
  409ae3:	mov    esp,0x707b467a
  409ae8:	jg     0x409a96
  409aea:	or     ah,BYTE PTR [ebx+0x4]
  409aed:	mov    ebx,DWORD PTR [ecx+eiz*8+0x563f27bf]
  409af4:	pop    ebx
  409af5:	pop    esp
  409af6:	fwait
  409af7:	pusha  
  409af8:	cld    
  409af9:	dec    esp
  409afa:	ss push edi
  409afc:	push   edi
  409afd:	push   esi
  409afe:	dec    esp
  409aff:	dec    ebx
  409b00:	cmp    eax,0x30c06f7a
  409b05:	cwde   
  409b06:	into   
  409b07:	icebp  
  409b08:	(bad)  
  409b09:	mov    esp,ecx
  409b0b:	mov    al,0xed
  409b0d:	nop
  409b0e:	es pushf 
  409b10:	cmp    bh,BYTE PTR [edx+eiz*2-0x5d6c3672]
  409b17:	xor    al,0xea
  409b19:	dec    ebp
  409b1a:	(bad)  
  409b1b:	fsubrp st(7),st
  409b1d:	mov    esi,0xd7cb4ba1
  409b22:	(bad)  
  409b23:	xlat   BYTE PTR ds:[ebx]
  409b24:	push   ss
  409b25:	imul   ebp,DWORD PTR [eax+0x76969f48],0xa34c6ef3
  409b2f:	lock repnz inc edx
  409b32:	mov    esp,0x9a5b976e
  409b37:	inc    edi
  409b38:	add    eax,0xed008845
  409b3d:	jne    0x409aec
  409b3f:	xor    DWORD PTR [edi],esp
  409b41:	xor    DWORD PTR [ecx+0x44],edi
  409b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b45:	jae    0x409b91
  409b47:	daa    
  409b48:	div    DWORD PTR [ecx]
  409b4a:	jbe    0x409b89
  409b4c:	jbe    0x409bc2
  409b4e:	mov    DWORD PTR [esi],ecx
  409b50:	(bad)  
  409b51:	jbe    0x409b69
  409b53:	sahf   
  409b54:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  409b56:	mov    cl,0x3c
  409b58:	int    0xe3
  409b5a:	mov    dl,0x65
  409b5c:	loop   0x409b46
  409b5e:	mov    bl,BYTE PTR [ebx]
  409b60:	daa    
  409b61:	fist   WORD PTR [edx]
  409b63:	jae    0x409ba1
  409b65:	sti    
  409b66:	adc    esp,DWORD PTR [ecx+0x4f43437a]
  409b6c:	cwde   
  409b6d:	xchg   ah,ah
  409b6f:	mov    bh,0x80
  409b72:	cmovg  edi,DWORD PTR [edi-0x51]
  409b76:	es cld 
  409b78:	je     0x409be5
  409b7a:	and    al,BYTE PTR [esi+edi*4]
  409b7d:	inc    ebx
  409b7e:	sbb    ebp,ebx
  409b80:	inc    ebp
  409b81:	mov    bh,0x30
  409b83:	mov    bh,0xc4
  409b85:	out    0x99,eax
  409b87:	(bad)  
  409b88:	out    dx,al
  409b89:	sub    al,0x60
  409b8b:	xor    BYTE PTR [edx+0x6f47b653],bl
  409b91:	xchg   esi,eax
  409b92:	test   al,0xcd
  409b94:	mov    edi,0x9588732f
  409b99:	xor    al,0x92
  409b9b:	stos   BYTE PTR es:[edi],al
  409b9c:	je     0x409b20
  409b9e:	mov    dl,0xc2
  409ba0:	inc    ebx
  409ba1:	(bad)  
  409ba2:	jbe    0x409b30
  409ba4:	cmp    BYTE PTR [edi],al
  409ba6:	jmp    0x409c09
  409ba8:	pop    edi
  409ba9:	pop    edx
  409baa:	fucomp st(4)
  409bac:	jmp    0x409b8d
  409bae:	sub    bh,BYTE PTR [edi+0x1a96f89a]
  409bb4:	sbb    eax,0xe25c3f07
  409bb9:	xor    al,0xbd
  409bbb:	aad    0xe0
  409bbd:	jmp    0x972851a8
  409bc2:	dec    DWORD PTR [esi-0x2e89931c]
  409bc8:	fsubrp st(6),st
  409bca:	dec    edx
  409bcb:	pop    edi
  409bcc:	out    0xa3,al
  409bce:	jb     0x409c31
  409bd0:	add    cl,BYTE PTR [ebp+0x1d]
  409bd3:	inc    esi
  409bd4:	mov    esp,ebp
  409bd6:	mov    gs,WORD PTR [edx-0x40]
  409bd9:	ins    DWORD PTR es:[edi],dx
  409bda:	lds    eax,FWORD PTR [ebp+0x46e2719c]
  409be0:	cmp    al,0xb6
  409be2:	and    eax,0x3989e83c
  409be7:	and    al,0x22
  409be9:	jo     0x409b90
  409beb:	or     bh,BYTE PTR [edx+eax*1-0x7d30ab2a]
  409bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bf3:	ficom  DWORD PTR ds:0x3df2e6a3
  409bf9:	hlt    
  409bfa:	jmp    0x451bca09
  409bff:	ror    BYTE PTR [edi-0x53b9c04],0xcd
  409c06:	popa   
  409c07:	sbb    edi,DWORD PTR [edi+0x16]
  409c0a:	adc    dh,ah
  409c0c:	push   es
  409c0d:	les    edx,FWORD PTR [ebx]
  409c0f:	lea    eax,ds:0xaeffde1c
  409c15:	push   0x721e3198
  409c1a:	mov    esp,0x9829e1c8
  409c1f:	mov    BYTE PTR [edi],bh
  409c21:	add    al,0xf9
  409c23:	mov    bh,0x1f
  409c25:	or     edi,ebx
  409c27:	out    dx,eax
  409c28:	mov    cl,0x16
  409c2a:	mov    ds:0xc1fcafa9,eax
  409c2f:	(bad)  
  409c30:	cmp    ah,BYTE PTR [edx-0x2]
  409c33:	push   edx
  409c34:	gs sti 
  409c36:	mov    ss,WORD PTR [bp+di+0x76f0]
  409c3b:	fstp   QWORD PTR [esi-0x55]
  409c3e:	lahf   
  409c3f:	xchg   ebp,eax
  409c40:	mov    eax,ds:0xe06f4b1b
  409c45:	xchg   edx,eax
  409c46:	dec    esi
  409c47:	cwde   
  409c48:	adc    al,0x8
  409c4a:	(bad)  
  409c4b:	or     eax,0x2c005247
  409c50:	mov    cs,WORD PTR [eax-0x5502370c]
  409c56:	sub    BYTE PTR [edi+0x2b17cf18],0x31
  409c5d:	(bad)  
  409c5e:	sub    ch,ah
  409c60:	or     al,0x20
  409c62:	ins    DWORD PTR es:[edi],dx
  409c63:	sbb    dh,al
  409c65:	xlat   BYTE PTR ds:[ebx]
  409c66:	fstp   st(5)
  409c68:	mov    dl,0xbe
  409c6a:	jbe    0x409bec
  409c6c:	jp     0x409c20
  409c6e:	test   BYTE PTR [edi+esi*4-0x5929bf7f],bh
  409c75:	shl    eax,cl
  409c77:	mov    esp,0x3260e5b
  409c7c:	cmp    eax,0xc1414a25
  409c81:	and    eax,0xa2338c5c
  409c86:	xchg   ebx,eax
  409c87:	mov    ds:0xbffe923c,eax
  409c8c:	pop    ss
  409c8d:	loop   0x409c70
  409c8f:	popf   
  409c90:	mov    ds:0xeed1b034,eax
  409c95:	xor    eax,ecx
  409c97:	pusha  
  409c98:	pop    ds
  409c99:	je     0x409ce4
  409c9b:	pop    esi
  409c9c:	push   esi
  409c9d:	out    0xb5,eax
  409c9f:	leave  
  409ca0:	xor    BYTE PTR [esi+0xb],0x63
  409ca4:	add    BYTE PTR [edx+0xfb7296e],0x5
  409cab:	lods   eax,DWORD PTR ds:[esi]
  409cac:	lods   al,BYTE PTR ds:[esi]
  409cad:	sbb    BYTE PTR es:[esp+eiz*4+0x26568867],cl
  409cb5:	inc    edx
  409cb6:	adc    eax,esp
  409cb8:	jmp    0x2705:0xca308c41
  409cbf:	mov    dl,al
  409cc1:	ja     0x409d00
  409cc3:	ret    
  409cc4:	ficomp DWORD PTR [ecx]
  409cc6:	ds loop 0x409d3b
  409cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cca:	jge    0x409c7f
  409ccc:	in     al,dx
  409ccd:	mov    edx,0x4e18b701
  409cd2:	addr16 ret 
  409cd4:	push   cs
  409cd5:	(bad)  
  409cd6:	or     BYTE PTR [edi],0x0
  409cd9:	ins    BYTE PTR es:[edi],dx
  409cda:	iret   
  409cdb:	pop    ecx
  409cdc:	push   ebp
  409cdd:	ds cmp eax,0x398b24e1
  409ce3:	jp     0x409cb5
  409ce5:	adc    ebx,DWORD PTR [esi-0x47]
  409ce8:	push   0x23de11a3
  409ced:	xor    al,0x50
  409cef:	sub    ah,BYTE PTR [ecx-0x36]
  409cf2:	fdivr  st(3),st
  409cf4:	enter  0x613a,0x87
  409cf8:	call   0x98e1:0x59e45eba
  409cff:	mov    ah,0x12
  409d01:	test   al,al
  409d03:	imul   esi,DWORD PTR [eax+0x4220a35b],0x68af96ec
  409d0d:	cmp    eax,0x240479fd
  409d12:	jge    0x409cb3
  409d14:	cmp    DWORD PTR [edx-0x5e6a64b2],edi
  409d1a:	bound  esp,QWORD PTR [esi]
  409d1c:	pop    ebp
  409d1d:	cli    
  409d1e:	mov    ah,0x6a
  409d20:	push   ss
  409d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d22:	mov    ah,bh
  409d24:	ss ret 
  409d26:	mov    ds:0x4ab7c47d,eax
  409d2b:	xor    ch,BYTE PTR [esi-0x3c]
  409d2e:	and    BYTE PTR [ecx+0xc36bfef],0x59
  409d35:	rcr    BYTE PTR [ecx-0x4b],cl
  409d38:	dec    eax
  409d39:	in     al,0xe2
  409d3b:	and    bh,cl
  409d3d:	mov    ebp,DWORD PTR [edi]
  409d3f:	jg     0x409d9f
  409d41:	pop    ebx
  409d42:	mov    eax,DWORD PTR [edx-0x648db7d4]
  409d48:	push   edi
  409d49:	and    ebp,ecx
  409d4b:	inc    ecx
  409d4c:	scas   al,BYTE PTR es:[edi]
  409d4d:	dec    esi
  409d4e:	mov    ecx,0xbe95390d
  409d53:	dec    eax
  409d54:	aas    
  409d55:	xchg   esi,eax
  409d56:	xor    cl,al
  409d58:	cmp    BYTE PTR [ecx-0x76],bl
  409d5b:	and    al,0x45
  409d5d:	xchg   ebx,eax
  409d5e:	mov    bl,0xd2
  409d60:	sub    bl,BYTE PTR [ecx-0x6dc635d]
  409d66:	adc    eax,0x6cfde74c
  409d6b:	pop    ds
  409d6c:	mov    WORD PTR cs:[edi-0x1a],?
  409d70:	adc    ch,ah
  409d72:	fadd   st(5),st
  409d74:	jl     0x409d32
  409d76:	mov    bl,0x87
  409d78:	add    BYTE PTR [ebp-0x36],al
  409d7b:	jno    0x409d73
  409d7d:	push   edi
  409d7e:	xchg   esi,ebx
  409d80:	cwde   
  409d81:	add    al,0x15
  409d83:	ss dec ebp
  409d85:	aam    0x1a
  409d87:	lods   eax,DWORD PTR ds:[esi]
  409d88:	xor    DWORD PTR [ebx],edx
  409d8a:	loop   0x409da5
  409d8c:	add    DWORD PTR [ecx+ebp*8],esp
  409d8f:	test   ebp,edi
  409d91:	jp     0x409dc7
  409d93:	cmp    al,0x55
  409d95:	xchg   esp,eax
  409d96:	push   0x3c
  409d98:	mov    cs,eax
  409d9a:	adc    BYTE PTR [edi],dh
  409d9c:	mov    dh,0x14
  409d9e:	shr    DWORD PTR [ecx-0x67179ae0],1
  409da4:	push   esp
  409da5:	cmp    al,0x3b
  409da7:	call   0x1cd3af9d
  409dac:	pop    edi
  409dad:	push   0xfffffff3
  409daf:	test   DWORD PTR [esi+ebp*1],ecx
  409db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409db3:	mov    bh,0x9a
  409db5:	sub    bl,BYTE PTR [edi-0x1d]
  409db8:	jbe    0x409dcd
  409dba:	int    0xb3
  409dbc:	stos   BYTE PTR es:[edi],al
  409dbd:	cmp    al,0xc3
  409dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dc0:	fistp  WORD PTR [ebx-0x62]
  409dc3:	xchg   ebp,eax
  409dc4:	leave  
  409dc5:	inc    edx
  409dc6:	push   ecx
  409dc7:	ror    esi,cl
  409dc9:	pushf  
  409dca:	sbb    DWORD PTR [edi+0x1a],0xffffffdf
  409dce:	imul   ecx,DWORD PTR [eax+0x7b],0xffffff8e
  409dd2:	pop    edi
  409dd3:	or     al,0x6a
  409dd5:	dec    eax
  409dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dd7:	jb     0x409d77
  409dd9:	data16 jne 0x409df8
  409ddc:	and    BYTE PTR [edi-0x31],bl
  409ddf:	xor    al,0x75
  409de1:	add    al,0xa9
  409de3:	add    eax,0x7b7776da
  409de8:	ss mov ebx,0x2874e1ba
  409dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409def:	rcr    ch,0x55
  409df2:	mov    al,ds:0xb3d99943
  409df7:	mov    ecx,0xeea44e59
  409dfc:	(bad)  
  409dfd:	scas   al,BYTE PTR es:[edi]
  409dfe:	cmp    eax,0x89ceca71
  409e03:	pop    esi
  409e04:	fst    DWORD PTR [ebx]
  409e06:	cmp    al,0xc3
  409e08:	hlt    
  409e09:	(bad)  
  409e0a:	das    
  409e0b:	sbb    al,0x47
  409e0d:	or     ah,ah
  409e0f:	cmp    ebp,ebx
  409e11:	fadd   st(7),st
  409e13:	cdq    
  409e14:	sub    dh,dl
  409e16:	mov    dl,0x75
  409e18:	dec    esp
  409e19:	(bad)  
  409e1a:	aam    0x5f
  409e1c:	in     al,dx
  409e1d:	push   cs
  409e1e:	clc    
  409e1f:	loopne 0x409e17
  409e21:	cwde   
  409e22:	jle    0x409dc9
  409e24:	icebp  
  409e25:	shl    ecx,1
  409e27:	(bad)  
  409e28:	adc    ebx,DWORD PTR [ecx]
  409e2a:	lahf   
  409e2b:	mov    edx,0x62e0968a
  409e30:	(bad)  
  409e32:	or     DWORD PTR [ecx-0x35574920],ecx
  409e38:	lods   al,BYTE PTR ds:[esi]
  409e39:	imul   ecx,DWORD PTR [esi-0xf],0x79
  409e3d:	aaa    
  409e3e:	jb     0x409e2a
  409e40:	pop    DWORD PTR [ebx-0x3d0d463d]
  409e46:	mov    esp,DWORD PTR [esi+ecx*8-0x5]
  409e4a:	add    esi,edi
  409e4c:	mov    esi,0xd3e774ce
  409e51:	icebp  
  409e52:	call   0x4df77692
  409e57:	pop    ecx
  409e58:	stos   DWORD PTR es:[edi],eax
  409e59:	js     0x409e94
  409e5b:	call   0x1d0ee78b
  409e60:	jbe    0x409e7f
  409e62:	fs iret 
  409e64:	aam    0x40
  409e66:	push   eax
  409e67:	cmp    eax,0x7e28a649
  409e6c:	cmp    ah,BYTE PTR [ecx+0x3c8b5e7]
  409e72:	jae    0x409e17
  409e74:	cmc    
  409e75:	xchg   ecx,eax
  409e76:	setl   BYTE PTR [eax-0x1e50c24]
  409e7d:	loop   0x409ef1
  409e7f:	mov    ch,0xe0
  409e81:	add    DWORD PTR [esi+0x227df645],0x17
  409e88:	adc    edx,DWORD PTR [ecx-0x23]
  409e8b:	push   es
  409e8c:	mov    edi,0x8ed0cb7b
  409e91:	jns    0x409e76
  409e93:	lahf   
  409e94:	in     al,0xeb
  409e96:	cmc    
  409e97:	sub    DWORD PTR [esi-0x1f],edx
  409e9a:	dec    ecx
  409e9b:	mov    ecx,0xfd72aca4
  409ea0:	bound  esp,QWORD PTR [ecx-0x7d8b3b95]
  409ea6:	iret   
  409ea7:	call   0x229cbb1b
  409eac:	sub    bh,BYTE PTR [edx]
  409eae:	popf   
  409eaf:	sti    
  409eb0:	es ss cwde 
  409eb3:	add    eax,0x8286d291
  409eb8:	(bad)  
  409eb9:	fadd   DWORD PTR [eax-0x614a1066]
  409ebf:	loopne 0x409e70
  409ec1:	pop    es
  409ec2:	xchg   esp,eax
  409ec3:	cmc    
  409ec4:	xor    al,0x11
  409ec6:	(bad)  
  409ec7:	int    0xca
  409ec9:	in     al,0xf1
  409ecb:	and    DWORD PTR [ebx-0x35145c9a],esp
  409ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ed2:	repz inc ebp
  409ed4:	add    ebp,esp
  409ed6:	enter  0x305f,0x4f
  409eda:	sub    esp,esp
  409edc:	je     0x409f50
  409ede:	outs   dx,DWORD PTR ds:[esi]
  409edf:	pop    eax
  409ee0:	push   es
  409ee1:	mov    fs,WORD PTR [edx-0x3a]
  409ee4:	jle    0x409f39
  409ee6:	cmp    DWORD PTR ds:0x600a7d2b,0x55
  409eed:	adc    DWORD PTR [esi],edx
  409eef:	test   eax,0x1cf1a7f3
  409ef4:	aaa    
  409ef5:	int3   
  409ef6:	lods   al,BYTE PTR ds:[esi]
  409ef7:	bound  eax,QWORD PTR [edx-0xc]
  409efa:	inc    eax
  409efb:	jl     0x409e93
  409efd:	ror    BYTE PTR [ebx+esi*8-0xd],cl
  409f01:	jns    0x409ec4
  409f03:	xor    ah,BYTE PTR [edx]
  409f05:	idiv   ch
  409f07:	sbb    DWORD PTR [eax],0xfc1ff632
  409f0d:	xchg   BYTE PTR [esi-0x34],ch
  409f10:	cmp    bh,BYTE PTR [ecx+0xc]
  409f13:	sbb    al,0xe7
  409f15:	mov    ebp,0x4d35e3f
  409f1a:	mov    bh,0x45
  409f1c:	psubq  mm6,QWORD PTR [eax]
  409f1f:	jae    0x409f78
  409f21:	data16 jbe 0x409f77
  409f24:	iret   
  409f25:	jne    0x409f7e
  409f27:	aam    0xc6
  409f29:	and    al,0xbf
  409f2b:	ss lahf 
  409f2d:	sub    DWORD PTR [ebx-0x7d],0x40ec45d5
  409f34:	sbb    esp,DWORD PTR [esi-0x4da25b0a]
  409f3a:	fwait
  409f3b:	mov    bh,0xf
  409f3d:	bound  edi,QWORD PTR [eax+0x2d014c27]
  409f43:	and    BYTE PTR [ebx-0x3581c5e2],dh
  409f49:	mov    eax,edi
  409f4b:	rcr    esp,cl
  409f4d:	retf   
  409f4e:	inc    edi
  409f4f:	mov    ah,cl
  409f51:	adc    eax,0x1062d1a0
  409f56:	loop   0x409f89
  409f58:	sub    ch,ch
  409f5a:	cmc    
  409f5b:	dec    eax
  409f5c:	and    al,0xae
  409f5e:	call   0x433c7b1
  409f63:	dec    ebx
  409f64:	out    0x2a,eax
  409f66:	fcom   DWORD PTR [ebx+ecx*1-0x233d1cb3]
  409f6d:	push   ss
  409f6e:	or     ah,0xc6
  409f71:	out    dx,eax
  409f72:	test   DWORD PTR [esi+0x47593136],0xe8442840
  409f7c:	dec    ebx
  409f7d:	pop    ss
  409f7e:	push   ecx
  409f7f:	mov    BYTE PTR [ebx+0x4d1f7816],dh
  409f85:	pop    esi
  409f86:	popa   
  409f87:	fbld   TBYTE PTR [ebp-0x3affb09]
  409f8d:	push   esi
  409f8e:	mov    bl,dl
  409f90:	jo     0x40a00f
  409f92:	ja     0x409f9d
  409f94:	ins    BYTE PTR es:[edi],dx
  409f95:	pusha  
  409f96:	or     BYTE PTR [edi-0x61],0x36
  409f9a:	shl    DWORD PTR [ecx-0x6],0x9e
  409f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f9f:	cmp    DWORD PTR [edx+0x49],0x2e
  409fa3:	ss pop ebp
  409fa5:	sbb    al,BYTE PTR [eax-0x28]
  409fa8:	ret    
  409fa9:	or     ebp,DWORD PTR [eax]
  409fab:	sbb    BYTE PTR [ebx],al
  409fad:	jmp    0x42907988
  409fb2:	adc    dh,bh
  409fb4:	pop    esi
  409fb5:	sbb    eax,0xc27f2cb6
  409fba:	outs   dx,DWORD PTR ds:[esi]
  409fbb:	ds xor eax,eax
  409fbe:	call   0x59049995
  409fc3:	sbb    al,0x2
  409fc5:	cli    
  409fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fc7:	dec    esp
  409fc8:	out    0x25,al
  409fca:	addr16 mov edx,0xb3f0aa9e
  409fd0:	ret    0x7a13
  409fd3:	or     eax,esp
  409fd5:	out    0x19,al
  409fd7:	mov    eax,ds:0x1a725ead
  409fdc:	or     eax,0xc6b59c4b
  409fe1:	dec    bx
  409fe3:	mov    dl,0x9e
  409fe5:	xor    DWORD PTR [ecx],esi
  409fe7:	jmp    0xa366:0x164c63de
  409fee:	cdq    
  409fef:	aam    0x9f
  409ff1:	inc    ebx
  409ff2:	mov    cs,WORD PTR es:0xeb499af3
  409ff9:	data16 mov cl,0x2
  409ffc:	in     eax,dx
  409ffd:	mov    ecx,0xa20f85b6
  40a002:	mov    dl,0xc3
  40a004:	jb     0x3afbd656
  40a00a:	js     0x40a062
  40a00c:	inc    ecx
  40a00d:	shl    BYTE PTR [eax-0x47],0xd3
  40a011:	fwait
  40a012:	int3   
  40a013:	cdq    
  40a014:	or     dh,BYTE PTR [esi+0x127520e0]
  40a01a:	fcmovne st,st(0)
  40a01c:	je     0x40a006
  40a01e:	sar    BYTE PTR [ecx],1
  40a020:	test   DWORD PTR [ebx+ecx*1+0x5bd4568f],esi
  40a027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a028:	es mov bh,0xca
  40a02b:	mov    WORD PTR [edi+esi*8-0x39],gs
  40a02f:	je     0x40a053
  40a031:	into   
  40a032:	xchg   esp,eax
  40a033:	sbb    eax,0x4692d2df
  40a038:	push   eax
  40a039:	jg     0x40a09d
  40a03b:	scas   al,BYTE PTR es:[edi]
  40a03c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a03d:	sub    DWORD PTR [esi-0x9048705],esi
  40a043:	int    0x3e
  40a045:	mov    cs,WORD PTR [ebx+ecx*8-0x498d0171]
  40a04c:	jbe    0x40a018
  40a04e:	lods   eax,DWORD PTR ds:[esi]
  40a04f:	mov    WORD PTR [esi],gs
  40a051:	jnp    0x40a040
  40a053:	imul   esp,DWORD PTR [ecx],0x2
  40a056:	or     eax,0x2544b039
  40a05b:	adc    DWORD PTR [eax+ecx*1+0x35],edx
  40a05f:	xchg   ebp,eax
  40a060:	(bad)  
  40a061:	jl     0x409fed
  40a063:	ret    0xd561
  40a066:	and    al,0x1e
  40a068:	in     eax,0x6c
  40a06a:	ins    DWORD PTR es:[edi],dx
  40a06b:	inc    ebp
  40a06c:	sbb    DWORD PTR [edx],ebx
  40a06e:	fdiv   DWORD PTR [edx+0x6c23c82a]
  40a074:	xor    BYTE PTR [ebp*1+0x66ca751a],dl
  40a07b:	fdiv   DWORD PTR [esp+edx*8]
  40a07e:	int3   
  40a07f:	into   
  40a080:	inc    edx
  40a081:	not    DWORD PTR [edi]
  40a083:	dec    ecx
  40a084:	xor    BYTE PTR [esi*2-0xbc1cdb4],al
  40a08b:	outs   dx,BYTE PTR ds:[esi]
  40a08c:	aam    0xe7
  40a08e:	(bad)  
  40a08f:	hlt    
  40a090:	mov    esi,0x261501aa
  40a095:	loopne 0x40a074
  40a097:	jae    0x40a067
  40a099:	cmp    dl,dl
  40a09b:	out    dx,al
  40a09c:	adc    bh,BYTE PTR [edx-0x146fd956]
  40a0a2:	fwait
  40a0a3:	mov    al,BYTE PTR [esp+eiz*2]
  40a0a6:	cs repnz int 0xf
  40a0aa:	pusha  
  40a0ab:	lea    ebx,[edi]
  40a0ad:	leave  
  40a0ae:	mov    al,0xa5
  40a0b0:	and    esi,edi
  40a0b2:	ret    0x7432
  40a0b5:	dec    edx
  40a0b6:	jb     0x40a099
  40a0b8:	jg     0x40a116
  40a0ba:	add    esp,ecx
  40a0bc:	or     BYTE PTR [edx-0x346924d9],cl
  40a0c2:	push   ebp
  40a0c3:	add    al,0x51
  40a0c5:	cmp    eax,0xbc205521
  40a0ca:	push   ds
  40a0cb:	inc    ebp
  40a0cc:	jmp    0x9f7a:0x5f35bc71
  40a0d3:	inc    BYTE PTR [ebp+0x1ea009ef]
  40a0d9:	outs   dx,BYTE PTR ds:[esi]
  40a0da:	(bad)  
  40a0dc:	outs   dx,DWORD PTR ds:[esi]
  40a0dd:	push   eax
  40a0de:	jge    0x95a24fa9
  40a0e4:	icebp  
  40a0e5:	ds icebp 
  40a0e7:	call   0x2ff4a862
  40a0ec:	retf   
  40a0ed:	in     al,dx
  40a0ee:	gs push 0x39fdc120
  40a0f4:	sub    BYTE PTR [esi],dh
  40a0f6:	shl    DWORD PTR [edx+eax*1],0x40
  40a0fa:	push   ss
  40a0fb:	sbb    al,0x39
  40a0fd:	or     bh,BYTE PTR [edi+eax*2]
  40a100:	lods   eax,DWORD PTR ds:[esi]
  40a101:	fld    QWORD PTR [eax+edi*4]
  40a104:	div    BYTE PTR [ebp-0x15]
  40a107:	jge    0x40a0f2
  40a109:	xor    esi,DWORD PTR [edi+0x79]
  40a10c:	push   ebp
  40a10d:	in     eax,0x47
  40a10f:	mov    ah,0xd2
  40a111:	xchg   esp,eax
  40a112:	sahf   
  40a113:	and    DWORD PTR [ecx-0x19],ebp
  40a116:	fcom   QWORD PTR ss:0x347c8950
  40a11d:	test   esp,eax
  40a11f:	jne    0x40a0ec
  40a121:	mov    ecx,0xf2d9e267
  40a126:	inc    edi
  40a127:	pop    es
  40a128:	sub    eax,0x5fbd99e0
  40a12d:	mov    edi,fs
  40a12f:	jno    0x40a165
  40a131:	in     eax,dx
  40a132:	xchg   BYTE PTR [ebp-0x56],bl
  40a135:	dec    ebp
  40a136:	jle    0x40a150
  40a138:	xchg   esp,eax
  40a139:	(bad)  
  40a13a:	retf   
  40a13b:	push   es
  40a13c:	inc    esi
  40a13d:	pop    edx
  40a13e:	shl    al,cl
  40a140:	jmp    0x72ddf80b
  40a145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a146:	xor    eax,DWORD PTR [edx-0x72f4cbad]
  40a14c:	daa    
  40a14d:	push   edi
  40a14e:	outs   dx,BYTE PTR fs:[esi]
  40a150:	or     bh,dl
  40a152:	shr    DWORD PTR [ecx],1
  40a154:	dec    ebx
  40a155:	pop    ss
  40a156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a157:	jbe    0x40a1a9
  40a159:	mov    dl,0xd5
  40a15b:	dec    esi
  40a15c:	in     eax,0x62
  40a15e:	or     BYTE PTR [esi+esi*8],dl
  40a161:	pop    eax
  40a162:	fisubr DWORD PTR [ecx+0x3a]
  40a165:	adc    DWORD PTR [edx+0x320132c8],0x664021ca
  40a16f:	xchg   esp,eax
  40a170:	add    ebp,DWORD PTR [ebx-0x617aca8f]
  40a176:	pop    ecx
  40a177:	or     eax,DWORD PTR [esi]
  40a179:	mov    dh,0x2a
  40a17b:	and    DWORD PTR [ecx+0x49eb4141],ebp
  40a181:	loopne 0x40a157
  40a183:	push   cs
  40a184:	cmp    DWORD PTR [edi+0x4d],eax
  40a187:	in     eax,0x77
  40a189:	shl    DWORD PTR [edi-0x7d],0xbf
  40a18d:	jo     0x40a1fe
  40a18f:	cli    
  40a190:	sahf   
  40a191:	add    dl,0x26
  40a194:	iret   
  40a195:	std    
  40a196:	xchg   ebp,esp
  40a198:	cmp    ecx,DWORD PTR [esi-0x3c]
  40a19b:	rcl    BYTE PTR [eax+0x7b],1
  40a19e:	push   edx
  40a19f:	mov    al,BYTE PTR [esi-0x77f152ad]
  40a1a5:	push   ecx
  40a1a6:	or     ch,BYTE PTR ds:0x6dc6ea4e
  40a1ac:	cmc    
  40a1ad:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1af:	icebp  
  40a1b0:	mov    bh,BYTE PTR [ebp+ebp*2-0x41cc876a]
  40a1b7:	add    DWORD PTR [ecx],ecx
  40a1b9:	mov    edx,0xc0cf56eb
  40a1be:	or     DWORD PTR [ecx-0x69d08a99],ebx
  40a1c4:	jnp    0x40a1ca
  40a1c6:	dec    esp
  40a1c7:	inc    edx
  40a1c8:	js     0x40a1d0
  40a1ca:	jno    0x40a1d1
  40a1cc:	sar    DWORD PTR [ebp-0x66],cl
  40a1cf:	cmp    eax,esp
  40a1d1:	shr    DWORD PTR [ebx-0x80],1
  40a1d4:	lock jge 0x40a1ab
  40a1d7:	(bad)  
  40a1d8:	int3   
  40a1d9:	jle    0x40a19b
  40a1db:	sub    esi,0x1e
  40a1de:	in     eax,0x34
  40a1e0:	adc    al,0x30
  40a1e2:	aaa    
  40a1e3:	leave  
  40a1e4:	sub    al,0x8e
  40a1e6:	xor    DWORD PTR [ebx-0x79b86f61],ebx
  40a1ec:	arpl   WORD PTR [eax],ax
  40a1ee:	pop    edx
  40a1ef:	push   ebx
  40a1f0:	jp     0x40a20c
  40a1f2:	outs   dx,BYTE PTR ds:[esi]
  40a1f3:	in     eax,dx
  40a1f4:	lea    ebp,[ecx]
  40a1f6:	and    DWORD PTR [edx-0x76f04b7c],0x379f9cfd
  40a200:	sub    ch,BYTE PTR [esi+0x1f606f0]
  40a206:	sbb    al,0xc2
  40a208:	sub    ch,BYTE PTR [ebx+0x341d343b]
  40a20e:	sbb    BYTE PTR [esi],bl
  40a210:	adc    esp,edx
  40a212:	bound  ebp,QWORD PTR [edx+esi*4-0x4b21616a]
  40a219:	add    bl,BYTE PTR [ebp+0x1f]
  40a21c:	mov    eax,0x5e0e7386
  40a221:	bound  esp,QWORD PTR [ebx]
  40a223:	dec    esi
  40a224:	jne    0x40a1a6
  40a226:	dec    edx
  40a227:	push   0x79e64012
  40a22c:	jno    0x40a24d
  40a22e:	ror    DWORD PTR ds:0xa577bfb1,cl
  40a234:	xchg   ebx,eax
  40a235:	and    ah,BYTE PTR [edi]
  40a237:	shr    DWORD PTR [ebx+ebp*8-0x3bb8bb40],cl
  40a23e:	into   
  40a23f:	pop    ebx
  40a240:	loopne 0x40a2a1
  40a242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a243:	fsub   QWORD PTR [eax-0x7b9076a7]
  40a249:	retf   
  40a24a:	ss nop
  40a24c:	fistp  QWORD PTR [ebx-0x45]
  40a24f:	cdq    
  40a250:	out    dx,al
  40a251:	xchg   edx,eax
  40a252:	pop    es
  40a253:	sahf   
  40a254:	out    dx,al
  40a255:	mov    al,0x42
  40a257:	scas   al,BYTE PTR es:[edi]
  40a258:	push   ecx
  40a259:	test   al,0x9c
  40a25b:	xchg   edx,eax
  40a25c:	mov    esp,0x987f32a5
  40a261:	jmp    0xea04b41a
  40a266:	add    edx,DWORD PTR [edx-0x5a]
  40a269:	push   ebx
  40a26a:	mov    al,ds:0xe9a47e53
  40a26f:	push   es
  40a270:	sub    al,0x7c
  40a272:	jo     0x40a2db
  40a274:	cli    
  40a275:	adc    ebx,esi
  40a277:	adc    ah,ah
  40a279:	mov    ah,0x90
  40a27b:	fsubr  QWORD PTR [eax]
  40a27d:	xor    ecx,DWORD PTR [edi-0x1c]
  40a280:	les    esp,FWORD PTR [eax+0x7385133f]
  40a286:	xor    bh,BYTE PTR [edx]
  40a288:	cwde   
  40a289:	dec    esp
  40a28a:	push   es
  40a28b:	sbb    eax,0xac6a2664
  40a290:	addr16 das 
  40a292:	mov    cl,0x5d
  40a294:	jae    0x40a2e8
  40a296:	pop    edx
  40a297:	jge    0x40a311
  40a299:	cwde   
  40a29a:	mov    BYTE PTR [edx+edi*1],ch
  40a29d:	fild   WORD PTR [edi-0x5aaec946]
  40a2a3:	sbb    BYTE PTR ds:0x7a5a58e7,ah
  40a2a9:	lahf   
  40a2aa:	cmp    ch,0xf5
  40a2ad:	push   es
  40a2ae:	sbb    eax,0x518e25a5
  40a2b3:	pop    esi
  40a2b4:	shr    BYTE PTR [edx],1
  40a2b6:	adc    BYTE PTR [ebx-0x545c65a6],0xb9
  40a2bd:	dec    esi
  40a2be:	test   DWORD PTR [edi-0x7b],edx
  40a2c1:	test   al,0xa1
  40a2c3:	out    0xb0,al
  40a2c5:	adc    BYTE PTR [esi-0x31],ch
  40a2c8:	dec    ecx
  40a2c9:	xor    BYTE PTR [edi-0x72e72bd],cl
  40a2cf:	sbb    bl,BYTE PTR [edi]
  40a2d1:	xchg   ebp,eax
  40a2d2:	ds xchg ebx,eax
  40a2d4:	lods   al,BYTE PTR ds:[esi]
  40a2d5:	repz xchg esi,eax
  40a2d7:	lea    edi,[ebx+0x2d4c8762]
  40a2dd:	cmp    cl,BYTE PTR [eax+0x44cbd10f]
  40a2e3:	fsubr  QWORD PTR [ebp+0x1d]
  40a2e6:	push   es
  40a2e7:	pop    eax
  40a2e8:	imul   eax,DWORD PTR [ecx+0x60],0xffffffe7
  40a2ec:	mov    ds,WORD PTR [ebp-0x5e]
  40a2ef:	rol    BYTE PTR [eax],cl
  40a2f1:	add    ch,BYTE PTR [esi+0x7e]
  40a2f4:	lea    edx,[ecx-0x13]
  40a2f7:	jnp    0x40a2d8
  40a2f9:	jecxz  0x40a34e
  40a2fb:	dec    esi
  40a2fc:	stos   DWORD PTR es:[edi],eax
  40a2fd:	xchg   ch,dh
  40a2ff:	push   edx
  40a300:	mov    esp,DWORD PTR ds:0x1198a6db
  40a306:	mov    bh,0x86
  40a308:	out    dx,al
  40a309:	add    ah,al
  40a30b:	jmp    0xaf3135af
  40a310:	pop    edx
  40a311:	ret    0x6456
  40a314:	jno    0x40a384
  40a316:	or     al,0x69
  40a318:	(bad)  
  40a319:	(bad)  
  40a31a:	fidiv  WORD PTR [edx+0x79]
  40a31d:	adc    eax,0xd0e86940
  40a322:	inc    edx
  40a323:	inc    eax
  40a324:	cmp    BYTE PTR [ecx-0x2c],ah
  40a327:	sub    dh,BYTE PTR [edi+ebp*4-0x3c2d7fd1]
  40a32e:	or     BYTE PTR [eax-0x53],0x43
  40a332:	cmp    DWORD PTR [ebx],ebp
  40a334:	out    0xac,eax
  40a336:	scas   eax,DWORD PTR es:[edi]
  40a337:	inc    edx
  40a338:	jge    0x40a317
  40a33a:	cld    
  40a33b:	dec    BYTE PTR [eax]
  40a33d:	mov    esp,0x79823dbc
  40a342:	adc    DWORD PTR [eax-0x46188bdb],ebx
  40a348:	lahf   
  40a349:	sbb    ebx,DWORD PTR ds:0x3f241ee8
  40a34f:	inc    esp
  40a350:	xlat   BYTE PTR ds:[ebx]
  40a351:	sti    
  40a352:	xchg   esi,eax
  40a353:	mov    bl,0x31
  40a355:	push   esi
  40a356:	mov    edi,0xc400d1
  40a35b:	jmp    0xe80f:0x7d99d33c
  40a362:	nop
  40a363:	popa   
  40a364:	sub    eax,0xba9d02f2
  40a369:	test   BYTE PTR [edi],0x24
  40a36c:	ins    BYTE PTR es:[edi],dx
  40a36d:	test   eax,0x464714a1
  40a372:	mov    edx,0xf3d0fa4
  40a377:	vpmaskmovd YMMWORD PTR [edi+ecx*1-0x45],ymm6,ymm4
  40a37e:	in     eax,dx
  40a37f:	out    dx,eax
  40a380:	add    eax,0x5063244a
  40a385:	pop    ss
  40a386:	mov    eax,ds:0x740ef757
  40a38b:	je     0x40a396
  40a38d:	lds    edi,FWORD PTR [eax-0x7c]
  40a390:	retf   0xbfd0
  40a393:	mov    al,ds:0xd2217254
  40a398:	mov    edx,0xaf4651b0
  40a39d:	pop    ebx
  40a39e:	fnsave [ecx-0x2a55ac5c]
  40a3a4:	sbb    bh,BYTE PTR [ecx]
  40a3a6:	repnz aam 0xe2
  40a3a9:	pop    esi
  40a3aa:	repz dec esi
  40a3ac:	ret    
  40a3ad:	and    ah,BYTE PTR [ebp-0x76]
  40a3b0:	popa   
  40a3b1:	test   al,0x8c
  40a3b3:	xchg   ebx,esi
  40a3b5:	and    DWORD PTR [esi-0x7c],ebp
  40a3b8:	or     BYTE PTR [ebx],al
  40a3ba:	xchg   ecx,eax
  40a3bb:	xchg   ecx,eax
  40a3bc:	jle    0x40a3c3
  40a3be:	adc    DWORD PTR [ebx+0x30],0x3e
  40a3c2:	xor    esi,DWORD PTR [ecx]
  40a3c4:	lock lock xor BYTE PTR ss:[esi],al
  40a3c9:	jge    0x40a35f
  40a3cb:	xor    eax,0x1c47b934
  40a3d0:	xchg   esi,eax
  40a3d1:	lods   eax,DWORD PTR ds:[esi]
  40a3d2:	jl     0x40a39b
  40a3d4:	enter  0xb36,0xeb
  40a3d8:	mov    dh,0x1f
  40a3da:	inc    edx
  40a3db:	mov    ebx,0xeea196c7
  40a3e0:	shl    BYTE PTR [edx],1
  40a3e2:	retf   
  40a3e3:	mov    esi,0xec6d6656
  40a3e8:	adc    ch,BYTE PTR [ebx]
  40a3ea:	(bad)  
  40a3eb:	pop    edi
  40a3ec:	popf   
  40a3ed:	pop    esi
  40a3ee:	inc    eax
  40a3ef:	mov    ah,0x1e
  40a3f1:	enter  0x9388,0xef
  40a3f5:	repnz sub eax,0xcf153c62
  40a3fb:	ficomp WORD PTR ds:0xa64c79cc
  40a401:	cmp    al,0x64
  40a403:	mov    al,ds:0x34782989
  40a408:	das    
  40a409:	jmp    0x813f:0xd018cf39
  40a410:	imul   ecx,DWORD PTR [esi+ecx*2-0x754fee98],0x40456c5a
  40a41b:	adc    eax,0xd712acca
  40a420:	adc    DWORD PTR [esi-0x1ef89464],edx
  40a426:	lods   eax,DWORD PTR ds:[esi]
  40a427:	push   cs
  40a428:	xchg   BYTE PTR [edx],ch
  40a42a:	push   0xfffffff1
  40a42c:	or     BYTE PTR [edi],al
  40a42e:	mov    ebp,0x82d559f
  40a433:	and    bl,cl
  40a435:	mov    ecx,0xb5a1c3b5
  40a43a:	js     0x40a44e
  40a43c:	dec    eax
  40a43d:	scas   eax,DWORD PTR es:[edi]
  40a43e:	jg     0x40a454
  40a440:	jnp    0x40a3ff
  40a442:	xor    dh,BYTE PTR [eax+0x69]
  40a445:	repnz inc eax
  40a447:	pop    esi
  40a448:	fisubr DWORD PTR [ecx+0x133c0130]
  40a44e:	fistp  QWORD PTR [edi+0x673ebee1]
  40a454:	out    0xdc,eax
  40a456:	test   al,0x2a
  40a458:	fwait
  40a459:	add    BYTE PTR [edx],bl
  40a45b:	or     al,0x5a
  40a45d:	pop    ebp
  40a45e:	mov    fs,WORD PTR [edx-0x3b94b339]
  40a464:	and    BYTE PTR [eax+0x13389aab],dl
  40a46a:	sbb    al,0xc0
  40a46c:	sub    al,0x97
  40a46e:	xchg   ecx,eax
  40a46f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a470:	fwait
  40a471:	enter  0xa6a1,0xc1
  40a475:	mov    bh,0xa6
  40a477:	dec    edx
  40a478:	xchg   esp,eax
  40a479:	push   ds
  40a47a:	pop    edx
  40a47b:	jle    0x40a4ab
  40a47d:	mov    al,0x20
  40a47f:	test   ebx,0x781f2464
  40a485:	dec    esi
  40a486:	call   0x9b1d3f74
  40a48b:	test   al,0xb
  40a48d:	retf   0x37ee
  40a490:	cmp    DWORD PTR [ebx],esp
  40a492:	stos   DWORD PTR es:[edi],eax
  40a493:	enter  0xbf75,0xd4
  40a497:	daa    
  40a498:	nop
  40a499:	lahf   
  40a49a:	iret   
  40a49b:	cld    
  40a49c:	jge    0x40a4d0
  40a49e:	ds retf 0x5662
  40a4a2:	push   ecx
  40a4a3:	sub    DWORD PTR [eax+0x1f],ebx
  40a4a6:	int    0xef
  40a4a8:	and    BYTE PTR [edi-0x8d38c60],bl
  40a4ae:	fistp  DWORD PTR [ecx-0x519cfd31]
  40a4b4:	mov    eax,0xb2012e04
  40a4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4ba:	js     0x40a45c
  40a4bc:	push   eax
  40a4bd:	je     0x40a4b7
  40a4bf:	jmp    0x4190:0x6f292b1c
  40a4c6:	push   0xa
  40a4c8:	mov    ds:0x99255068,eax
  40a4cd:	test   al,0xe1
  40a4cf:	iret   
  40a4d0:	je     0x40a551
  40a4d2:	jne    0x40a52d
  40a4d4:	sub    ebp,ecx
  40a4d6:	xchg   ecx,eax
  40a4d7:	dec    ecx
  40a4d8:	inc    esp
  40a4d9:	sar    DWORD PTR [ecx+0x1c],cl
  40a4dc:	sub    al,0xc2
  40a4de:	jmp    0xba31aea0
  40a4e3:	dec    ecx
  40a4e4:	pop    ebp
  40a4e5:	pop    ecx
  40a4e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4e7:	rcl    DWORD PTR [edi],cl
  40a4e9:	sti    
  40a4ea:	in     al,0xd7
  40a4ec:	ds sub edi,esi
  40a4ef:	imul   ebp,DWORD PTR [ebx+0x65],0xffffffd0
  40a4f3:	sbb    al,0x1a
  40a4f5:	inc    esi
  40a4f6:	fimul  WORD PTR [ebp-0x2b]
  40a4f9:	aaa    
  40a4fa:	xchg   edi,eax
  40a4fb:	cmp    bl,BYTE PTR [esi*8+0x222e576f]
  40a502:	push   esp
  40a503:	lods   al,BYTE PTR ds:[esi]
  40a504:	js     0x40a4b9
  40a506:	push   ds
  40a507:	jo     0x40a52f
  40a509:	jo     0x40a581
  40a50b:	fs push ebx
  40a50d:	jo     0x40a55f
  40a50f:	push   eax
  40a510:	adc    bl,BYTE PTR [ebx+0x7cb19ee3]
  40a516:	popa   
  40a517:	and    al,dl
  40a519:	in     al,dx
  40a51a:	sub    al,0x9e
  40a51c:	mov    ch,0xeb
  40a51e:	push   ecx
  40a51f:	jl     0x40a559
  40a521:	push   0xa0889b8d
  40a526:	cmp    al,0x9b
  40a528:	ins    DWORD PTR es:[edi],dx
  40a529:	(bad)  
  40a52a:	mov    esp,0x8ef22d4e
  40a52f:	retf   0x42be
  40a532:	jno    0x40a503
  40a534:	mov    al,0x6e
  40a536:	scas   eax,DWORD PTR es:[edi]
  40a537:	pop    eax
  40a538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a539:	mov    ah,0x83
  40a53b:	mov    ds:0xf6132477,eax
  40a540:	add    eax,0x18596117
  40a545:	xchg   esp,eax
  40a546:	xor    edi,esi
  40a548:	test   ah,cl
  40a54a:	sub    eax,0x10a272cb
  40a54f:	inc    esp
  40a551:	and    ch,BYTE PTR [ebp+0x5a]
  40a554:	pop    ss
  40a555:	dec    ebp
  40a556:	or     ebx,DWORD PTR [esp+edx*2-0x17]
  40a55a:	ins    DWORD PTR es:[edi],dx
  40a55b:	(bad)  
  40a55c:	fld    DWORD PTR [ebp+0x4f]
  40a55f:	dec    eax
  40a560:	push   esp
  40a561:	ret    0x732e
  40a564:	or     dl,ah
  40a566:	cmp    al,0x5d
  40a568:	ds mov esi,0x340c33bc
  40a56e:	retf   0xad65
  40a571:	xor    DWORD PTR [ebx+0x5e],ebx
  40a574:	push   esp
  40a575:	inc    ebx
  40a576:	imul   ebp,DWORD PTR ss:[edx],0x56e13b15
  40a57d:	out    0xa5,eax
  40a57f:	jge    0x40a59c
  40a581:	or     bh,BYTE PTR [esi]
  40a583:	mov    edx,0x412dc963
  40a588:	inc    edi
  40a589:	aam    0x7e
  40a58b:	fnstsw WORD PTR [ecx+edx*1]
  40a58e:	(bad)  
  40a58f:	mov    ah,0xea
  40a591:	ror    DWORD PTR [edi-0x23],0x3f
  40a595:	mov    dl,0xae
  40a597:	cdq    
  40a598:	bound  ebp,QWORD PTR [esi+eiz*2+0x3b]
  40a59c:	xchg   ebp,eax
  40a59d:	dec    esi
  40a59e:	outs   dx,BYTE PTR ds:[esi]
  40a59f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5a0:	xchg   ebp,eax
  40a5a1:	test   BYTE PTR [ecx-0x6b],ah
  40a5a4:	enter  0xac9d,0x96
  40a5a8:	inc    esi
  40a5a9:	adc    DWORD PTR [edi-0x5ad0b97e],0xffffffc4
  40a5b0:	jge    0x40a55c
  40a5b2:	pop    edx
  40a5b3:	mov    al,0xce
  40a5b5:	xbegin 0x99a7367
  40a5bb:	adc    al,0xe7
  40a5bd:	hlt    
  40a5be:	mov    ch,0x5e
  40a5c0:	hlt    
  40a5c1:	and    al,0x98
  40a5c3:	iret   
  40a5c4:	retf   
  40a5c5:	add    al,0xa
  40a5c7:	add    eax,0x9afe3339
  40a5cc:	sbb    bl,BYTE PTR [edi+0x15]
  40a5cf:	mov    dh,al
  40a5d1:	mov    edx,0xea269980
  40a5d6:	into   
  40a5d7:	(bad)  
  40a5d8:	add    eax,0x42456a9
  40a5dd:	pop    ds
  40a5de:	cmc    
  40a5df:	outs   dx,BYTE PTR ds:[esi]
  40a5e0:	xor    BYTE PTR [ecx-0x51],ah
  40a5e3:	cld    
  40a5e4:	push   esp
  40a5e5:	nop
  40a5e6:	(bad)  
  40a5e7:	lods   al,BYTE PTR ds:[esi]
  40a5e8:	push   edi
  40a5e9:	inc    ebx
  40a5ea:	fnstsw WORD PTR [esi+0xf721193]
  40a5f0:	(bad)  
  40a5f2:	xchg   esp,eax
  40a5f3:	mov    bl,0xb5
  40a5f5:	inc    ecx
  40a5f6:	imul   edi,esi,0xffffffae
  40a5f9:	or     esi,ecx
  40a5fb:	pop    ecx
  40a5fc:	push   0xb604f85a
  40a601:	dec    edi
  40a602:	rol    DWORD PTR gs:[esi-0x23fe602a],0x8e
  40a60a:	jmp    0xf08a1e92
  40a60f:	adc    BYTE PTR [ebp+0x6e5578d2],ah
  40a615:	mov    ah,0x9d
  40a617:	inc    esi
  40a618:	aaa    
  40a619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a61a:	lods   eax,DWORD PTR ds:[esi]
  40a61b:	mov    WORD PTR [edx],?
  40a61d:	push   edx
  40a61e:	add    al,0x49
  40a620:	xor    BYTE PTR [ecx+0x75],0x42
  40a624:	repnz das 
  40a626:	(bad)  
  40a627:	cdq    
  40a628:	and    BYTE PTR [ecx+0x79],ah
  40a62b:	fsub   DWORD PTR [ebp+0x6dbe0449]
  40a631:	icebp  
  40a632:	or     edi,DWORD PTR [edi]
  40a634:	ss mov al,0x6e
  40a637:	retf   0x4c64
  40a63a:	push   0x68
  40a63c:	cmp    ecx,DWORD PTR [ecx+0x29]
  40a63f:	not    al
  40a641:	lods   al,BYTE PTR ds:[esi]
  40a642:	loop   0x40a66b
  40a644:	mov    esp,0x1d8dbca
  40a649:	xchg   esi,eax
  40a64a:	(bad)  
  40a64b:	sub    eax,0x29e66cd
  40a650:	loop   0x40a64e
  40a652:	js     0x40a630
  40a654:	sbb    al,0x4d
  40a656:	sti    
  40a657:	fldcw  WORD PTR [edi+0x18dc09bd]
  40a65e:	lods   al,BYTE PTR ds:[esi]
  40a65f:	xchg   esi,eax
  40a660:	das    
  40a661:	std    
  40a662:	jecxz  0x40a691
  40a664:	sbb    edx,DWORD PTR [ebp-0x5795835e]
  40a66a:	outs   dx,BYTE PTR ds:[esi]
  40a66b:	jb     0x40a611
  40a66d:	pop    esi
  40a66e:	jg     0x40a631
  40a670:	icebp  
  40a671:	push   eax
  40a672:	mov    al,0x8c
  40a674:	fwait
  40a675:	fwait
  40a676:	cli    
  40a677:	enter  0x71ad,0x1
  40a67b:	jmp    FWORD PTR [eax]
  40a67d:	test   DWORD PTR [ebp+eiz*4-0x6eb91be7],edi
  40a684:	sbb    ebx,0x2d
  40a687:	loop   0x40a6f1
  40a689:	jmp    0xab93:0x7e5af385
  40a690:	push   eax
  40a691:	fimul  WORD PTR [esi]
  40a693:	dec    esp
  40a694:	call   0x8572:0x287be15b
  40a69b:	mov    edx,edx
  40a69d:	in     eax,dx
  40a69e:	pusha  
  40a69f:	sbb    eax,0x5b1daa3a
  40a6a4:	cmp    bh,BYTE PTR [eax+eax*4-0x8]
  40a6a8:	mov    ebp,0x4ab65f4f
  40a6ad:	nop
  40a6ae:	and    eax,0x44535cdc
  40a6b3:	pop    esp
  40a6b4:	push   0x3
  40a6b6:	dec    ebp
  40a6b7:	sbb    BYTE PTR [edx+0x1cb998d5],dl
  40a6bd:	mov    bl,0xf0
  40a6bf:	pushf  
  40a6c0:	and    eax,0x11244de1
  40a6c5:	aam    0xd6
  40a6c7:	jno    0x40a716
  40a6c9:	mul    BYTE PTR [ebp+0x33]
  40a6cc:	aam    0x47
  40a6ce:	push   edx
  40a6cf:	ret    
  40a6d0:	lods   al,BYTE PTR ds:[esi]
  40a6d1:	push   cs
  40a6d2:	sbb    cl,ah
  40a6d4:	inc    ebx
  40a6d5:	es mov ecx,ebp
  40a6d8:	gs xor al,0x96
  40a6db:	ds inc edx
  40a6dd:	ror    DWORD PTR [edx],cl
  40a6df:	adc    BYTE PTR [esi],al
  40a6e1:	mov    WORD PTR [ebx-0x27],cs
  40a6e4:	sti    
  40a6e5:	popf   
  40a6e6:	push   esi
  40a6e7:	sbb    eax,0x9ebadeb7
  40a6ec:	test   al,0x67
  40a6ee:	scas   eax,DWORD PTR es:[edi]
  40a6ef:	mov    eax,ds:0xc631692e
  40a6f4:	mov    al,0x31
  40a6f6:	test   eax,edx
  40a6f8:	inc    ebp
  40a6f9:	repnz out dx,al
  40a6fb:	push   ebp
  40a6fc:	addr16 mov cl,0x5d
  40a6ff:	mov    ebx,0x95e50923
  40a704:	add    eax,0xb63fc1be
  40a709:	clc    
  40a70a:	ret    0x185b
  40a70d:	es pop edx
  40a70f:	retf   
  40a710:	call   0xaa8a:0xb0edcf67
  40a717:	outs   dx,BYTE PTR ds:[esi]
  40a718:	pushf  
  40a719:	aaa    
  40a71a:	xchg   edx,eax
  40a71b:	inc    ebp
  40a71c:	lods   al,BYTE PTR ds:[esi]
  40a71d:	lea    esi,[edx+0x50e59a6d]
  40a723:	(bad)  
  40a726:	lahf   
  40a727:	imul   ebx,DWORD PTR [eax+ebp*1],0xffffffd7
  40a72b:	sub    al,0x9e
  40a72d:	inc    eax
  40a72e:	dec    edx
  40a72f:	push   ds
  40a730:	and    ecx,DWORD PTR [ebp+0x5346d920]
  40a736:	mov    ah,0xd0
  40a738:	xchg   DWORD PTR [ecx],edi
  40a73a:	rcr    DWORD PTR [ebx],1
  40a73c:	aaa    
  40a73d:	sub    cl,BYTE PTR [esi+eiz*4-0x38a7a59a]
  40a744:	pushf  
  40a745:	fxch   st(4)
  40a747:	pop    esi
  40a748:	out    dx,al
  40a749:	mov    dl,0xff
  40a74b:	ds dec esp
  40a74d:	sbb    DWORD PTR [ebx],edi
  40a74f:	or     eax,0x3d359c19
  40a754:	jbe    0x40a6fb
  40a756:	and    BYTE PTR [ecx+edx*2+0x1ca775e1],0xe7
  40a75e:	mov    ds:0x4c36e196,al
  40a763:	jno    0x40a7cd
  40a765:	inc    DWORD PTR [esi-0x85f36c9]
  40a76b:	push   0xffffffb5
  40a76d:	xor    BYTE PTR [esi],dh
  40a76f:	in     al,0xb3
  40a771:	fmul   st,st(6)
  40a773:	pop    eax
  40a774:	add    al,0xb2
  40a776:	aas    
  40a777:	pusha  
  40a778:	pop    ebp
  40a779:	addr16 mov ebx,0x2422dbbb
  40a77f:	repnz mov ch,0xbf
  40a782:	jo     0x40a7cb
  40a784:	jb     0x40a7ef
  40a786:	xor    BYTE PTR [edx],dh
  40a788:	adc    DWORD PTR ds:0xbf7eeeed,esi
  40a78e:	jmp    0xd98f:0xf62c02db
  40a795:	inc    esp
  40a796:	jl     0x40a7ed
  40a798:	scas   eax,DWORD PTR es:[edi]
  40a799:	xchg   esp,eax
  40a79a:	dec    ecx
  40a79b:	push   cs
  40a79c:	mov    edx,DWORD PTR [ebp+0x6661d581]
  40a7a2:	cmp    edx,eax
  40a7a4:	mov    WORD PTR [ebx+0x11b8e320],fs
  40a7aa:	mov    ebp,0xe8c68584
  40a7af:	jo     0x40a750
  40a7b1:	les    eax,FWORD PTR [ecx+edi*4-0xb024dc8]
  40a7b8:	sbb    DWORD PTR [ecx+0x6d],esp
  40a7bb:	or     dh,dl
  40a7bd:	daa    
  40a7be:	inc    ebp
  40a7bf:	imul   esi,DWORD PTR [ecx-0x41a8cddf],0x245f4c71
  40a7c9:	repnz sub cl,BYTE PTR [ecx-0x70]
  40a7cd:	lock call 0x75c6:0xb74b430a
  40a7d5:	outs   dx,BYTE PTR ds:[esi]
  40a7d6:	pop    ds
  40a7d7:	dec    edi
  40a7d8:	mov    ds:0x6ed5f98c,eax
  40a7dd:	mov    al,ds:0x4745b208
  40a7e2:	shl    DWORD PTR [eax],0xf4
  40a7e5:	mov    eax,0xed8361d0
  40a7ea:	or     al,0x1a
  40a7ec:	mov    edx,0xbc979385
  40a7f1:	(bad)
  40a7f4:	mov    ds:0x2085301f,al
  40a7f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7fa:	and    al,0x42
  40a7fc:	mov    ah,0x92
  40a7fe:	mov    bh,0x71
  40a800:	mov    al,ds:0xff46a1b2
  40a805:	mov    bl,0xad
  40a807:	test   eax,0x3512e401
  40a80d:	(bad)  
  40a80f:	or     al,0xb0
  40a811:	scas   eax,DWORD PTR es:[edi]
  40a812:	sub    eax,DWORD PTR [ebx]
  40a814:	iret   
  40a815:	dec    esi
  40a816:	or     bh,BYTE PTR [ebx+eax*8+0x5d]
  40a81a:	call   0xf84e:0x16c083bb
  40a821:	push   cs
  40a822:	and    al,0xf5
  40a824:	push   ds
  40a825:	out    0xc8,eax
  40a827:	mov    dl,0xce
  40a829:	test   DWORD PTR [ebp+esi*4-0x430846c3],eax
  40a830:	nop
  40a831:	pop    ds
  40a832:	xor    al,0xef
  40a834:	out    0x2,eax
  40a836:	inc    ebx
  40a837:	and    ebx,eax
  40a839:	pop    ds
  40a83a:	stos   BYTE PTR es:[edi],al
  40a83b:	hlt    
  40a83c:	call   0xc95c:0xabe98e1d
  40a843:	jle    0x40a86d
  40a845:	in     al,dx
  40a846:	xchg   ebx,eax
  40a847:	jo     0x40a7dd
  40a849:	sub    DWORD PTR ds:0xad826cc0,esp
  40a84f:	push   es
  40a850:	xchg   BYTE PTR [esi+0x60],bh
  40a853:	push   esp
  40a854:	pop    edx
  40a855:	es inc eax
  40a857:	lds    ecx,FWORD PTR [ebp-0x25]
  40a85a:	(bad)  
  40a85b:	xchg   esi,eax
  40a85c:	call   0x896d:0x12eec684
  40a863:	les    edx,FWORD PTR [edi+0x45]
  40a866:	cmp    dh,BYTE PTR [eax]
  40a868:	xor    al,BYTE PTR [edx-0x44f09d2]
  40a86e:	jmp    0x40a8c0
  40a870:	shl    BYTE PTR [ecx-0x35da302b],cl
  40a876:	in     eax,dx
  40a877:	lock add eax,0x299ff63d
  40a87d:	xor    eax,DWORD PTR [ebp-0x608791cf]
  40a883:	push   ds
  40a884:	dec    edx
  40a885:	jg     0x40a846
  40a887:	in     al,0x5
  40a889:	sbb    DWORD PTR [ebp+esi*8-0x25],eax
  40a88d:	push   0xfdfd272a
  40a892:	pushf  
  40a893:	out    0xc6,al
  40a895:	in     eax,0x4d
  40a897:	push   es
  40a898:	mov    eax,0xf7cec66a
  40a89d:	adc    ebp,esi
  40a89f:	mov    ebp,0xc5021c5d
  40a8a4:	push   ebx
  40a8a5:	out    dx,al
  40a8a6:	repnz jmp 0x8e90:0xce20f911
  40a8ae:	mov    eax,ds:0xd5e37e80
  40a8b3:	ss jb  0x40a926
  40a8b6:	adc    BYTE PTR [ebp-0x323fda79],0xb8
  40a8bd:	aas    
  40a8be:	sbb    al,0x53
  40a8c0:	ret    0x94d2
  40a8c3:	sbb    al,0x7f
  40a8c5:	ins    BYTE PTR es:[edi],dx
  40a8c6:	jae    0x40a8b4
  40a8c8:	nop
  40a8c9:	fild   WORD PTR [edx+0x77d63f]
  40a8cf:	push   ss
  40a8d0:	pop    edx
  40a8d1:	pop    esi
  40a8d2:	xchg   DWORD PTR [ebp-0x3a],esp
  40a8d5:	sbb    esi,DWORD PTR [edx+ecx*8-0x4c]
  40a8d9:	jmp    0x271daa48
  40a8de:	pushaw 
  40a8e0:	cmp    DWORD PTR [ebx],edi
  40a8e2:	xor    ch,BYTE PTR [eax]
  40a8e4:	jns    0x40a934
  40a8e6:	outs   dx,DWORD PTR ds:[esi]
  40a8e7:	cmc    
  40a8e8:	add    al,0x43
  40a8ea:	arpl   WORD PTR [ebx+0x2a0c3c24],cx
  40a8f0:	in     al,dx
  40a8f1:	and    BYTE PTR [ecx+0x14],dh
  40a8f4:	les    ecx,FWORD PTR [eax]
  40a8f6:	stc    
  40a8f7:	shl    BYTE PTR [ebp+0xc],cl
  40a8fa:	cmp    al,bl
  40a8fc:	cli    
  40a8fd:	inc    edi
  40a8fe:	mov    ebx,0x5605eff3
  40a903:	es mov cl,0xd
  40a906:	mov    dh,BYTE PTR [ecx+0x49]
  40a909:	pop    ss
  40a90a:	lock and ch,al
  40a90d:	iret   
  40a90e:	sbb    BYTE PTR [esi],dh
  40a910:	jbe    0x40a990
  40a912:	inc    eax
  40a913:	push   ebx
  40a914:	test   BYTE PTR [esi-0x656085b0],dh
  40a91a:	(bad)  [esi+0x60]
  40a91d:	loope  0x40a8b3
  40a91f:	xor    DWORD PTR [ecx+0x32],edx
  40a922:	leave  
  40a923:	ss pop edi
  40a925:	xchg   ebp,eax
  40a926:	xchg   DWORD PTR [ecx+0x2df1ca5a],ebp
  40a92c:	jb     0x40a8b3
  40a92e:	mov    DWORD PTR [eax-0x7a],esp
  40a931:	shl    bh,cl
  40a933:	sbb    eax,0xc6e9310c
  40a938:	jnp    0x40a92f
  40a93a:	mov    DWORD PTR [edx+eiz*8-0x75],ecx
  40a93e:	jo     0x40a950
  40a940:	shl    DWORD PTR [edi],1
  40a942:	ins    BYTE PTR es:[edi],dx
  40a943:	pusha  
  40a944:	and    eax,0x4467b837
  40a949:	aad    0xbc
  40a94b:	xchg   DWORD PTR [esi+0x69f0f09c],esp
  40a951:	mov    bl,0x42
  40a953:	xchg   ecx,eax
  40a954:	push   edx
  40a955:	bound  ecx,QWORD PTR [ebx-0xf]
  40a958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a959:	(bad)  
  40a95a:	icebp  
  40a95b:	pop    esp
  40a95c:	pop    esi
  40a95d:	adc    BYTE PTR [edi],dl
  40a95f:	jle    0x40a976
  40a961:	call   DWORD PTR [eax]
  40a963:	and    eax,0x3ab9b046
  40a968:	mov    ah,0xf5
  40a96a:	outs   dx,BYTE PTR ds:[esi]
  40a96b:	mov    eax,ds:0xd48364da
  40a970:	jne    0x40a93e
  40a972:	stos   DWORD PTR es:[edi],eax
  40a973:	(bad)  
  40a974:	mov    ebp,0xe78fb683
  40a979:	fst    DWORD PTR [ebx+0x50]
  40a97c:	add    dl,BYTE PTR [edi]
  40a97e:	icebp  
  40a97f:	push   ds
  40a980:	(bad)  [edi-0x7d]
  40a983:	cmp    DWORD PTR [ebx+0x1e60a0f7],esi
  40a989:	rol    cl,1
  40a98b:	je     0x40a926
  40a98d:	fwait
  40a98e:	ins    BYTE PTR es:[edi],dx
  40a98f:	sub    edx,edx
  40a991:	xor    BYTE PTR [eax],ch
  40a993:	pop    ebp
  40a994:	jl     0x40a999
  40a996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a997:	jo     0x40a994
  40a999:	js     0x40a969
  40a99b:	inc    esi
  40a99c:	add    edx,DWORD PTR [edi+eiz*1]
  40a99f:	mov    dl,0xd7
  40a9a1:	xor    BYTE PTR [eax-0x5a005a3],cl
  40a9a7:	jne    0x40a9ec
  40a9a9:	out    0xb9,eax
  40a9ab:	xchg   DWORD PTR [eax],ecx
  40a9ad:	out    0x7,al
  40a9af:	das    
  40a9b0:	test   al,0x54
  40a9b2:	push   ebp
  40a9b3:	mov    ebx,0x6c928a9c
  40a9b8:	fldenv [ebx-0xe8db949]
  40a9be:	push   ebp
  40a9bf:	inc    esi
  40a9c0:	cli    
  40a9c1:	inc    eax
  40a9c2:	(bad)  
  40a9c3:	xchg   edx,eax
  40a9c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9c5:	cmc    
  40a9c6:	iret   
  40a9c7:	gs dec esp
  40a9c9:	xor    edx,edx
  40a9cb:	fadd   DWORD PTR [edx+0xe]
  40a9ce:	mov    ebx,DWORD PTR [edx]
  40a9d0:	nop
  40a9d1:	test   al,0x4a
  40a9d3:	rol    BYTE PTR [ebp-0x7e],1
  40a9d6:	out    0xcc,al
  40a9d8:	(bad)  
  40a9d9:	jmp    0xb3f466a0
  40a9de:	jno    0x40a9c3
  40a9e0:	sub    eax,0xc06681df
  40a9e5:	jo     0x40a9d5
  40a9e7:	(bad)  
  40a9e8:	cmp    eax,0xcd399365
  40a9ed:	mov    esi,DWORD PTR [edi+0x4cab943a]
  40a9f3:	retf   
  40a9f4:	dec    DWORD PTR ds:0xcf32016f
  40a9fa:	iret   
  40a9fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9fc:	xlat   BYTE PTR ds:[ebx]
  40a9fd:	leave  
  40a9fe:	mov    gs,WORD PTR [eax]
  40aa00:	or     DWORD PTR [edx-0x51],ebp
  40aa03:	jbe    0x40aa28
  40aa05:	cli    
  40aa06:	repz js 0x40a9f3
  40aa09:	adc    al,0x4a
  40aa0b:	imul   esi,DWORD PTR [ecx-0x675321c],0x6a679b10
  40aa15:	stc    
  40aa16:	mov    edx,0x7a42f980
  40aa1b:	(bad)
  40aa1f:	sbb    DWORD PTR [edx],0xffffff8a
  40aa22:	pop    esi
  40aa23:	jg     0x40a9e0
  40aa25:	icebp  
  40aa26:	jo     0x40a9f6
  40aa28:	lahf   
  40aa29:	addr16 inc esi
  40aa2b:	push   ds
  40aa2c:	push   0x2a
  40aa2e:	sti    
  40aa2f:	xor    al,BYTE PTR [ecx+0x81d5912]
  40aa35:	out    0x8f,al
  40aa37:	clc    
  40aa38:	addr16 inc esi
  40aa3a:	fimul  WORD PTR [ecx]
  40aa3c:	loop   0x40aab4
  40aa3e:	pop    esi
  40aa3f:	sti    
  40aa40:	xor    DWORD PTR [esi+0x1b544e6a],ecx
  40aa46:	iret   
  40aa47:	jmp    0x68fe:0x1c8243ec
  40aa4e:	fidiv  DWORD PTR [ebp-0x1016d203]
  40aa54:	xor    esi,DWORD PTR [eax+0x3d]
  40aa57:	adc    al,BYTE PTR [ebp+0x29733c92]
  40aa5d:	mov    ss,WORD PTR [ebx-0x650eeb76]
  40aa63:	push   cs
  40aa64:	xchg   esi,eax
  40aa65:	cli    
  40aa66:	pop    ds
  40aa67:	xor    al,0x5e
  40aa69:	cmp    BYTE PTR [eax+ecx*2-0x3c],dh
  40aa6d:	sub    esi,DWORD PTR [eax-0x71b014b9]
  40aa73:	inc    esp
  40aa74:	repz scas eax,DWORD PTR es:[edi]
  40aa76:	arpl   WORD PTR [edi+0x7],dx
  40aa79:	jno    0x40aaee
  40aa7b:	mov    ecx,0x2768e3d7
  40aa80:	add    al,dh
  40aa82:	cmp    BYTE PTR [esi],ah
  40aa84:	ret    0x67e0
  40aa87:	pushf  
  40aa88:	and    al,0x4a
  40aa8a:	mov    bh,0x3b
  40aa8c:	jmp    0x74a64c10
  40aa91:	aad    0xde
  40aa93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa94:	dec    edx
  40aa95:	and    bl,dh
  40aa97:	inc    ebp
  40aa98:	pop    eax
  40aa99:	add    BYTE PTR [ecx+0x28],ah
  40aa9c:	mov    ebp,0x3b7aa4de
  40aaa1:	and    al,0x4d
  40aaa3:	adc    DWORD PTR [ebx+0x2a9926fc],0x3db0b2f0
  40aaad:	xchg   esp,eax
  40aaae:	push   ecx
  40aaaf:	lea    edx,[ebx]
  40aab1:	xchg   ebp,eax
  40aab2:	pop    ecx
  40aab3:	sbb    DWORD PTR [ecx+0x64ff0a38],0x3c
  40aaba:	pushf  
  40aabb:	gs and eax,0x597331b9
  40aac1:	cdq    
  40aac2:	daa    
  40aac3:	jmp    esp
  40aac5:	pop    es
  40aac6:	lds    eax,FWORD PTR [edx-0x7f]
  40aac9:	jle    0x40aa96
  40aacb:	mov    ah,0x41
  40aacd:	mov    esp,0x87e6f46e
  40aad2:	mov    edi,0xcadb2370
  40aad7:	stc    
  40aad8:	test   al,0xf8
  40aada:	mov    ds:0xe7d747ee,al
  40aadf:	fs stos BYTE PTR es:[edi],al
  40aae1:	std    
  40aae2:	mov    ebx,0xeeb85cd8
  40aae7:	pop    esp
  40aae8:	out    dx,eax
  40aae9:	or     eax,0x825ee6d7
  40aaee:	pop    edx
  40aaef:	pop    ebx
  40aaf0:	sbb    al,0x8d
  40aaf2:	pop    ss
  40aaf3:	mov    al,0x32
  40aaf5:	jge    0x40aaa3
  40aaf7:	jns    0x40ab53
  40aaf9:	dec    ebp
  40aafa:	mov    ecx,0x3a48410e
  40aaff:	push   edx
  40ab00:	inc    esi
  40ab01:	xor    al,0x12
  40ab03:	sbb    al,0x61
  40ab05:	inc    edx
  40ab06:	addr16 and eax,0xed98d316
  40ab0c:	mov    ebp,DWORD PTR [esi]
  40ab0e:	mov    eax,0xd4606c6f
  40ab13:	jmp    0x40aafc
  40ab15:	and    BYTE PTR [edi+0x3c],dl
  40ab18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab19:	fldcw  WORD PTR [esi-0x77]
  40ab1c:	add    BYTE PTR [ebx-0x2fad2503],ah
  40ab22:	push   edi
  40ab23:	inc    esp
  40ab24:	mov    bl,0xad
  40ab26:	pop    sp
  40ab28:	push   esp
  40ab29:	jmp    0x9de2:0x96582c09
  40ab30:	cmp    ecx,0xe5f77eff
  40ab36:	leave  
  40ab37:	inc    esi
  40ab38:	sub    ebp,0x63e8af2c
  40ab3e:	mov    dl,0x27
  40ab40:	mov    bh,0xaa
  40ab42:	imul   edi,DWORD PTR [edi-0x612ec576],0x13
  40ab49:	sbb    al,0x5
  40ab4b:	push   ecx
  40ab4c:	into   
  40ab4d:	xchg   ebx,eax
  40ab4e:	popf   
  40ab4f:	pusha  
  40ab50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab52:	pop    ds
  40ab53:	(bad)  
  40ab54:	(bad)  
  40ab56:	xchg   edi,eax
  40ab57:	jp     0x40abc8
  40ab59:	push   cs
  40ab5a:	push   0xffffffa5
  40ab5c:	sar    BYTE PTR [ebp-0x38],0xab
  40ab60:	cli    
  40ab61:	hlt    
  40ab62:	xchg   esi,eax
  40ab63:	idiv   BYTE PTR [edi-0xd]
  40ab66:	retf   
  40ab67:	xchg   DWORD PTR [ecx],ebx
  40ab69:	mov    ch,BYTE PTR [ebp+0x2]
  40ab6c:	das    
  40ab6d:	aam    0xd1
  40ab6f:	ins    DWORD PTR es:[edi],dx
  40ab70:	xlat   BYTE PTR ds:[ebx]
  40ab71:	mov    dl,0xdb
  40ab73:	cmp    edi,DWORD PTR [eax]
  40ab75:	sbb    BYTE PTR [edi],dl
  40ab77:	xchg   edi,eax
  40ab78:	fiadd  WORD PTR [ecx-0x7d]
  40ab7b:	adc    al,0x16
  40ab7d:	int    0x47
  40ab7f:	cld    
  40ab80:	loop   0x40ab2d
  40ab82:	popf   
  40ab83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab84:	xor    eax,0xc9947105
  40ab89:	pop    ecx
  40ab8a:	pop    ecx
  40ab8b:	mov    ?,WORD PTR [ebx]
  40ab8d:	ins    BYTE PTR es:[edi],dx
  40ab8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab8f:	inc    ecx
  40ab90:	fcomp  QWORD PTR [esi]
  40ab92:	sub    BYTE PTR [ebx-0x78ba0df1],ah
  40ab98:	arpl   WORD PTR [esi],si
  40ab9a:	cli    
  40ab9b:	(bad)  
  40ab9c:	push   ds
  40ab9d:	mov    esp,0x6af50c74
  40aba2:	or     BYTE PTR [eax+ebp*2+0x7a],0xe2
  40aba7:	xchg   esp,eax
  40aba8:	fcmovne st,st(5)
  40abaa:	ss xor al,0xf3
  40abad:	mov    eax,0xbd944558
  40abb2:	xor    eax,0xde3d2083
  40abb7:	enter  0xadf6,0x85
  40abbb:	out    0x9b,eax
  40abbd:	in     al,0xd7
  40abbf:	jle    0x40abdb
  40abc1:	adc    BYTE PTR [eax],0x3b
  40abc4:	cdq    
  40abc5:	xor    eax,DWORD PTR [edi]
  40abc7:	ja     0x40ab93
  40abc9:	enter  0xb45b,0x2e
  40abcd:	sbb    ch,BYTE PTR [esi+0x5b]
  40abd0:	arpl   WORD PTR [ebp-0x77],si
  40abd3:	xchg   edi,eax
  40abd4:	pusha  
  40abd5:	push   ss
  40abd6:	mov    BYTE PTR [bx+di],dl
  40abd9:	pop    es
  40abda:	les    edx,FWORD PTR [ecx]
  40abdc:	in     eax,0xde
  40abde:	js     0x40ac08
  40abe0:	or     BYTE PTR [edx-0x1353626],al
  40abe6:	rcr    DWORD PTR ds:0x98ee3196,0x3e
  40abed:	sti    
  40abee:	int3   
  40abef:	shl    DWORD PTR [esi+0xdf1aebd],cl
  40abf5:	imul   DWORD PTR [eax-0x54]
  40abf8:	sbb    bh,dh
  40abfa:	jge    0x40abf4
  40abfc:	(bad)  
  40abfd:	cmc    
  40abfe:	icebp  
  40abff:	mov    ?,WORD PTR [ebx-0x67d765a8]
  40ac05:	int    0x1f
  40ac07:	add    BYTE PTR [edi+0x2d],ah
  40ac0a:	pop    ds
  40ac0b:	scas   al,BYTE PTR es:[edi]
  40ac0c:	cmp    BYTE PTR [ebp+0x5c014cad],dh
  40ac12:	cmp    esi,DWORD PTR [esi-0x1f160beb]
  40ac18:	inc    ecx
  40ac19:	adc    al,BYTE PTR [edi]
  40ac1b:	mov    edx,0xe0e743ae
  40ac20:	mov    BYTE PTR [edx],dl
  40ac22:	cmc    
  40ac23:	int3   
  40ac24:	jne    0x40ac20
  40ac26:	scas   al,BYTE PTR es:[edi]
  40ac27:	mov    ds:0x52c44848,al
  40ac2c:	loop   0x40ac36
  40ac2e:	leave  
  40ac2f:	pop    edx
  40ac30:	mov    ds:0xbf04e0e6,al
  40ac35:	xchg   edi,eax
  40ac36:	out    0x2c,al
  40ac38:	lods   al,BYTE PTR ds:[esi]
  40ac39:	mov    ss,WORD PTR [ebp+0x64519bd2]
  40ac3f:	xor    edi,DWORD PTR [edx+0x37]
  40ac42:	arpl   WORD PTR [ebp-0x7a52025e],sp
  40ac48:	push   ecx
  40ac49:	fisubr WORD PTR [ecx-0x72]
  40ac4c:	fild   DWORD PTR [ebx+0x3e]
  40ac4f:	xor    BYTE PTR ds:[edx],dh
  40ac52:	add    ah,BYTE PTR [eax+0x18e78c5]
  40ac58:	into   
  40ac59:	xchg   ebp,eax
  40ac5a:	push   0x3a
  40ac5c:	push   ds
  40ac5d:	xor    ebx,ebp
  40ac5f:	push   ebx
  40ac60:	popf   
  40ac61:	sbb    edi,DWORD PTR [eax]
  40ac63:	mov    ch,0xf3
  40ac65:	addr16 mov edi,0x9ec6df45
  40ac6b:	cmp    eax,0x757e8a12
  40ac70:	and    BYTE PTR [ebx+0x52],bl
  40ac73:	lods   eax,DWORD PTR ds:[esi]
  40ac74:	cwde   
  40ac75:	aas    
  40ac76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac77:	cmp    al,0xed
  40ac79:	int    0x6f
  40ac7b:	push   edi
  40ac7c:	sti    
  40ac7d:	xchg   ecx,eax
  40ac7e:	inc    ebp
  40ac7f:	sbb    eax,0x9a44ca9b
  40ac84:	push   ss
  40ac85:	xor    al,0xb4
  40ac87:	push   edi
  40ac88:	ret    0x5d66
  40ac8b:	jno    0x40ace0
  40ac8d:	jns    0x40ad0d
  40ac8f:	pop    ebp
  40ac90:	cmc    
  40ac91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac92:	sbb    bl,BYTE PTR [ecx+ebp*1+0x56]
  40ac96:	or     esp,DWORD PTR [esi+0x37d49450]
  40ac9c:	add    bh,BYTE PTR [ebx]
  40ac9e:	int3   
  40ac9f:	pop    edi
  40aca0:	inc    ebx
  40aca1:	ret    0x918f
  40aca4:	cmp    ah,bl
  40aca6:	retf   
  40aca7:	push   ecx
  40aca8:	test   DWORD PTR [esi],edx
  40acaa:	in     al,dx
  40acab:	cmp    BYTE PTR [edi-0x45f2a763],0x7c
  40acb2:	fiadd  DWORD PTR [ecx-0x17]
  40acb5:	inc    ebp
  40acb6:	jne    0x40ac74
  40acb8:	ror    BYTE PTR [esi+edx*2],cl
  40acbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acbc:	imul   ebx,DWORD PTR [eax],0xfffffff1
  40acbf:	mov    ds:0x9b9b901f,al
  40acc4:	out    0x6,eax
  40acc6:	inc    edi
  40acc7:	gs mov cl,0xbb
  40acca:	(bad)  
  40accc:	not    DWORD PTR [edi-0x4b]
  40accf:	and    eax,0x7f6fec23
  40acd4:	inc    esp
  40acd5:	inc    esi
  40acd6:	push   0x0
  40acd8:	arpl   bx,si
  40acda:	add    BYTE PTR [ebx+0x70],ah
  40acdd:	dec    eax
  40acde:	mov    WORD PTR [ebx+0x2d],es
  40ace1:	ror    ah,cl
  40ace3:	jo     0x40acd1
  40ace5:	(bad)  
  40ace7:	les    edi,FWORD PTR [ebx+0x76e74b22]
  40aced:	ret    0x8ce0
  40acf0:	jns    0x40ad43
  40acf2:	cmp    DWORD PTR [edi+0x10ce88ef],esi
  40acf8:	fiadd  DWORD PTR [ebx+0x7cd9a618]
  40acfe:	mov    ecx,0x3665a626
  40ad03:	ret    0x4ee
  40ad06:	add    esp,DWORD PTR [eax]
  40ad08:	jle    0x40ad12
  40ad0a:	dec    edx
  40ad0b:	ret    
  40ad0c:	mov    ebx,0x66fefbf5
  40ad11:	adc    al,0xb5
  40ad13:	and    al,0x13
  40ad15:	sub    eax,0xd1c87d8e
  40ad1a:	mov    dl,0x7d
  40ad1c:	addr16 jnp 0x40aca9
  40ad1f:	sti    
  40ad20:	lea    edi,[ecx-0x5d]
  40ad23:	stos   DWORD PTR es:[edi],eax
  40ad24:	out    dx,al
  40ad25:	mov    esp,0xf64dfe55
  40ad2a:	or     BYTE PTR [ecx-0x1116dd95],dl
  40ad30:	sub    DWORD PTR [edi],eax
  40ad32:	cmp    al,0x98
  40ad34:	lea    ebp,[esi-0x46]
  40ad37:	xor    DWORD PTR [ecx+ecx*1-0x65],edx
  40ad3b:	lods   eax,DWORD PTR ds:[esi]
  40ad3c:	fnstenv [ecx-0x7e]
  40ad3f:	xor    DWORD PTR [edx+0x7fc73b1],ecx
  40ad45:	into   
  40ad46:	mov    BYTE PTR ds:0xdbe4b6bd,cl
  40ad4c:	and    eax,0x10f2446f
  40ad51:	stos   BYTE PTR es:[edi],al
  40ad52:	push   esp
  40ad53:	(bad)  
  40ad54:	in     al,dx
  40ad55:	popa   
  40ad56:	stos   BYTE PTR es:[edi],al
  40ad57:	jnp    0x40acee
  40ad59:	in     eax,0xc6
  40ad5b:	imul   ebp,DWORD PTR [ecx],0x1f
  40ad5e:	ss sahf 
  40ad60:	xchg   esp,eax
  40ad61:	test   BYTE PTR [ecx+ebx*1-0x660e4556],dh
  40ad68:	push   edi
  40ad69:	imul   edi,DWORD PTR [eax],0x20
  40ad6c:	push   eax
  40ad6d:	sti    
  40ad6e:	xor    dl,BYTE PTR [ecx-0x4727b65c]
  40ad74:	stos   BYTE PTR es:[edi],al
  40ad75:	mov    esi,0x3e8a3211
  40ad7a:	sub    DWORD PTR [esi+0x30],ecx
  40ad7d:	mov    esp,0x19188739
  40ad82:	jb     0x40adc1
  40ad84:	je     0x40ad32
  40ad86:	rcl    DWORD PTR ds:0x5288f15a,0x7e
  40ad8d:	sbb    esi,DWORD PTR [ecx]
  40ad8f:	sub    BYTE PTR [edx+0x3bec431e],ah
  40ad95:	adc    eax,0xb7c99ce1
  40ad9a:	mov    eax,DWORD PTR [ebp-0x14]
  40ad9d:	movzx  ecx,WORD PTR ds:0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a73b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a73f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi+0x38a47e95]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0x55
  40aed6:	bnd jmp DWORD PTR ds:0xd7a80a46
  40aedd:	and    BYTE PTR [edx+0x530b789d],ah
  40aee3:	sub    esi,DWORD PTR [ebp-0x6]
  40aee6:	or     eax,0xc61125c8
  40aeeb:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40aeed:	mov    ebp,0xef944b34
  40aef2:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40aef4:	adc    eax,0x864864d3
  40aef9:	pushf  
  40aefa:	fwait
  40aefb:	dec    edi
  40aefc:	push   ecx
  40aefd:	addr16 mov cl,0xba
  40af00:	mov    ecx,0x817b1adc
  40af05:	inc    eax
  40af06:	pop    edi
  40af07:	out    dx,al
  40af08:	mov    ecx,0x2f03402e
  40af0d:	ja     0x40af20
  40af0f:	dec    eax
  40af10:	(bad)  
  40af11:	mov    edi,0x3d5aab9
  40af16:	push   cs
  40af17:	xor    cl,bh
  40af19:	adc    al,0x52
  40af1b:	into   
  40af1c:	xchg   edx,eax
  40af1d:	push   edi
  40af1e:	inc    eax
  40af1f:	hlt    
  40af20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af21:	jbe    0x40af69
  40af23:	and    edi,DWORD PTR [edx]
  40af25:	femms  
  40af27:	and    ah,BYTE PTR [edx]
  40af29:	push   ebp
  40af2a:	sahf   
  40af2b:	test   al,0x77
  40af2d:	sub    al,0x20
  40af2f:	test   BYTE PTR [edx+0x35369b45],bh
  40af35:	jg     0x40af9c
  40af37:	sbb    edi,ecx
  40af39:	pop    esp
  40af3a:	out    0x3c,al
  40af3c:	add    dl,BYTE PTR [ecx]
  40af3e:	xor    dl,BYTE PTR [ecx+esi*8+0x23]
  40af42:	ja     0x40aec5
  40af44:	imul   ebx,DWORD PTR [edi+0xdbdee9a],0x18a68075
  40af4e:	mov    WORD PTR [esi],cs
  40af50:	cwde   
  40af51:	cld    
  40af52:	mov    bl,0x7c
  40af54:	cmp    al,0xb0
  40af56:	dec    ebp
  40af57:	sbb    esp,DWORD PTR [edx+ebx*8-0xd0eb0e1]
  40af5e:	test   eax,0xbca5a1e6
  40af63:	out    dx,al
  40af64:	fimul  DWORD PTR [ebp-0x4d695820]
  40af6a:	popf   
  40af6b:	cmp    eax,0x2ce0206a
  40af70:	or     eax,0xa171919d
  40af75:	es mov dl,0xe8
  40af78:	or     edi,0xffffffae
  40af7b:	les    esp,FWORD PTR [ecx-0x25bab51]
  40af81:	jmp    0x40afbe
  40af83:	mov    esp,edx
  40af85:	add    ecx,ebp
  40af87:	fidivr DWORD PTR [ecx]
  40af89:	xchg   ebx,eax
  40af8a:	or     BYTE PTR ds:0x10a5789a,ch
  40af90:	mov    dh,BYTE PTR [ebp+eiz*1-0x6ff34035]
  40af97:	jnp    0x40afc0
  40af99:	idiv   ch
  40af9b:	retf   0x88f2
  40af9e:	sub    BYTE PTR [ebx],dh
  40afa0:	sub    ecx,esp
  40afa2:	and    BYTE PTR [esi],0x53
  40afa5:	outs   dx,BYTE PTR ds:[esi]
  40afa6:	dec    edx
  40afa7:	mov    BYTE PTR [edx-0x7],dh
  40afaa:	fadd   DWORD PTR [eax-0x7620f224]
  40afb0:	jecxz  0x40afb4
  40afb2:	hlt    
  40afb3:	out    0xce,al
  40afb5:	in     eax,dx
  40afb6:	pop    es
  40afb7:	addr16 rcr ecx,cl
  40afba:	sub    eax,0xa7833de2
  40afbf:	jbe    0x40aff3
  40afc1:	pop    es
  40afc2:	xchg   edi,eax
  40afc3:	mov    fs,WORD PTR [esi]
  40afc5:	(bad)  
  40afc6:	xor    al,0x2b
  40afc9:	and    ecx,DWORD PTR [edx-0x6a17308f]
  40afcf:	xor    esp,DWORD PTR [ebx-0x653107b2]
  40afd5:	jo     0x40b055
  40afd7:	mov    eax,0x4ebeb265
  40afdc:	pop    esi
  40afdd:	xor    eax,0xba7ff283
  40afe2:	cs (bad) 
  40afe4:	sub    ebx,ecx
  40afe6:	push   esi
  40afe7:	jbe    0x40af8f
  40afe9:	adc    al,0x77
  40afeb:	inc    ebx
  40afec:	cmp    al,0xd8
  40afee:	sub    ah,BYTE PTR [edx-0x51]
  40aff1:	xchg   esp,eax
  40aff2:	or     al,0x95
  40aff4:	out    dx,eax
  40aff5:	jnp    0x40b00c
  40aff7:	push   ebx
  40aff8:	repnz xor BYTE PTR ds:0x960d45b,dh
  40afff:	repnz and edx,edx
  40b002:	cmps   BYTE PTR gs:[si],BYTE PTR es:[di]
  40b005:	xchg   DWORD PTR [ebx],ecx
  40b007:	sbb    edi,DWORD PTR [esi+0x64]
  40b00a:	ret    
  40b00b:	push   ss
  40b00c:	cli    
  40b00d:	ja     0x40b018
  40b00f:	les    ebx,FWORD PTR [ecx+0x7a0b49ab]
  40b015:	jb     0x40afac
  40b017:	mov    ch,0xc3
  40b019:	sbb    ch,BYTE PTR ds:0x9911c0a
  40b01f:	xchg   ecx,eax
  40b020:	xor    al,0xc1
  40b022:	stos   DWORD PTR es:[edi],eax
  40b023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b024:	sub    DWORD PTR [edi+0x6697ebc4],0xf992edd4
  40b02e:	dec    eax
  40b02f:	or     al,0xf
  40b031:	cdq    
  40b032:	dec    edx
  40b033:	pusha  
  40b034:	jle    0x40afeb
  40b036:	out    dx,al
  40b037:	sbb    eax,0xc58086a2
  40b03c:	fild   DWORD PTR [edx+0x5a7bb73]
  40b042:	or     edx,DWORD PTR [esi]
  40b044:	leave  
  40b045:	in     al,dx
  40b046:	lea    edx,[ecx+0x1514df64]
  40b04c:	sub    dl,BYTE PTR [ecx+0x5]
  40b04f:	in     eax,0x6b
  40b051:	sbb    ah,0xf1
  40b054:	inc    ebp
  40b055:	lahf   
  40b056:	call   FWORD PTR [eax+edi*8]
  40b059:	xor    bl,BYTE PTR [ebp-0x171e7e8c]
  40b05f:	mov    ch,0x92
  40b061:	cs mov bh,0x89
  40b064:	pushf  
  40b065:	xor    bl,ch
  40b067:	pop    ebx
  40b068:	inc    ecx
  40b069:	mov    ch,0xe0
  40b06b:	sbb    eax,0xfc477835
  40b070:	daa    
  40b071:	in     al,0xc2
  40b073:	cdq    
  40b074:	xchg   ebp,eax
  40b075:	(bad)  
  40b076:	inc    BYTE PTR [ebx-0x62]
  40b079:	xor    ebp,DWORD PTR [ecx+edi*2]
  40b07c:	(bad)  
  40b07d:	or     bl,ah
  40b07f:	fdiv   QWORD PTR ds:0xff846aa2
  40b085:	dec    edx
  40b086:	mov    ecx,0xa6c68c66
  40b08b:	xor    BYTE PTR [edi-0x61],dl
  40b08e:	int3   
  40b08f:	shr    BYTE PTR [esi-0x43358d3d],cl
  40b095:	adc    eax,0x871cb7d9
  40b09a:	push   esi
  40b09b:	ja     0x40b0d5
  40b09d:	fcmovnbe st,st(4)
  40b09f:	mov    bl,0x46
  40b0a1:	adc    al,0x80
  40b0a3:	in     al,0x3f
  40b0a5:	push   edi
  40b0a6:	cwde   
  40b0a7:	repnz cmp cl,BYTE PTR [ebx+eax*1]
  40b0ab:	jg     0x40b04e
  40b0ad:	sub    ah,BYTE PTR [eax-0x41]
  40b0b0:	fst    DWORD PTR [esi+esi*4]
  40b0b3:	dec    esp
  40b0b4:	out    0x8,eax
  40b0b6:	adc    edi,edx
  40b0b8:	out    0xa3,al
  40b0ba:	shl    DWORD PTR [ebp-0x7117418b],1
  40b0c0:	jnp    0x40b0d8
  40b0c2:	adc    edi,edx
  40b0c4:	mov    WORD PTR [esi-0x35b31b40],?
  40b0ca:	mov    bh,0xf9
  40b0cc:	xor    edi,edi
  40b0ce:	das    
  40b0cf:	add    eax,0x6396ad0f
  40b0d4:	fs mov edx,0xc0994e15
  40b0da:	adc    BYTE PTR [esi-0x70ed2e78],dh
  40b0e0:	add    bl,bh
  40b0e2:	outs   dx,DWORD PTR ds:[esi]
  40b0e3:	xor    bl,BYTE PTR [ebx+0x14]
  40b0e6:	sub    eax,0xd5c60d6d
  40b0eb:	test   ch,bh
  40b0ed:	xchg   esp,eax
  40b0ee:	xchg   esp,eax
  40b0ef:	shr    DWORD PTR ds:0xd3c8601f,0x70
  40b0f6:	outs   dx,BYTE PTR ds:[esi]
  40b0f7:	shl    DWORD PTR [ebp+eiz*2+0x60],1
  40b0fb:	cli    
  40b0fc:	sub    edi,DWORD PTR [edx+ecx*4+0x2ec267f0]
  40b103:	mov    ch,0x87
  40b105:	and    al,0x8
  40b107:	cmc    
  40b108:	mov    ds:0x5d652df,eax
  40b10d:	ror    ecx,cl
  40b10f:	call   0xc2ce:0x79ac0a17
  40b116:	jl     0x40b0a6
  40b118:	int    0x4f
  40b11a:	jle    0x40b13c
  40b11c:	ror    DWORD PTR [edi-0x73385404],cl
  40b122:	in     al,0x52
  40b124:	xchg   edi,eax
  40b125:	jb     0x40b0b9
  40b127:	mov    dl,BYTE PTR [ecx]
  40b129:	xlat   BYTE PTR ds:[ebx]
  40b12a:	lea    edx,[edi]
  40b12c:	pop    esi
  40b12d:	je     0x40b155
  40b12f:	sahf   
  40b130:	push   ds
  40b131:	ja     0x40b157
  40b133:	mov    bl,0x26
  40b135:	mov    bh,0x5
  40b137:	(bad)  
  40b138:	xor    BYTE PTR [esi+eiz*1-0x48],cl
  40b13c:	ss xchg edx,eax
  40b13e:	test   DWORD PTR [esi],eax
  40b140:	imul   edi,DWORD PTR [esi+0x77cc6ad7],0xfffffffc
  40b147:	sbb    WORD PTR [edi+0x1c5a449d],sp
  40b14e:	and    BYTE PTR [ebx],dl
  40b150:	addr16 aas 
  40b152:	mov    ds:0x58a05174,al
  40b157:	add    esi,DWORD PTR [ebx+edi*1-0x2256361e]
  40b15e:	shl    BYTE PTR [eax+eiz*4-0x4],1
  40b162:	xchg   ebx,eax
  40b163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b164:	(bad)  
  40b165:	out    0x88,al
  40b167:	adc    ah,cl
  40b169:	sub    al,0x3a
  40b16b:	sbb    eax,0xd74d3056
  40b170:	scas   al,BYTE PTR es:[edi]
  40b171:	test   al,0x6f
  40b173:	in     al,dx
  40b174:	(bad)  
  40b175:	sti    
  40b176:	pop    ecx
  40b177:	lea    eax,[eax+0x5fd823fb]
  40b17d:	and    eax,0xcad3feb7
  40b182:	jnp    0x40b1de
  40b184:	pop    eax
  40b185:	inc    ebp
  40b186:	aam    0x60
  40b188:	popf   
  40b189:	inc    esi
  40b18a:	jne    0x40b14f
  40b18c:	xchg   DWORD PTR [ebp-0xa],edi
  40b18f:	sbb    cl,BYTE PTR [ecx-0x31]
  40b192:	xor    al,0xbe
  40b194:	shl    DWORD PTR [esi],0x46
  40b197:	cdq    
  40b198:	es retf 0xad7f
  40b19c:	mov    ch,0x62
  40b19e:	jp     0x40b1ec
  40b1a0:	sti    
  40b1a1:	lea    ecx,[ebx+ebx*2+0x273c3bc9]
  40b1a8:	ror    BYTE PTR [eax],1
  40b1aa:	fcom   QWORD PTR [edi+0x751ff3e6]
  40b1b0:	retf   
  40b1b1:	sub    al,0xd4
  40b1b3:	xchg   ebx,eax
  40b1b4:	jle    0x40b16d
  40b1b6:	push   0x92b48a9f
  40b1bb:	fucomp st(5)
  40b1bd:	sti    
  40b1be:	aam    0xc9
  40b1c0:	mov    edi,0x5cc9ac1a
  40b1c5:	js     0x40b192
  40b1c7:	ret    
  40b1c8:	dec    esp
  40b1c9:	xchg   edx,eax
  40b1ca:	sbb    al,0x38
  40b1cc:	cmp    al,0x4a
  40b1ce:	nop
  40b1cf:	dec    ebx
  40b1d0:	push   ecx
  40b1d1:	stos   DWORD PTR es:[edi],eax
  40b1d2:	and    eax,0x419f1215
  40b1d7:	bnd js 0x40b257
  40b1da:	call   0x897d:0x27ff7435
  40b1e1:	stos   DWORD PTR es:[edi],eax
  40b1e2:	push   esi
  40b1e3:	aas    
  40b1e4:	mov    ebp,?
  40b1e6:	dec    esp
  40b1e7:	inc    ecx
  40b1e8:	mov    ecx,0x2e8a0aec
  40b1ed:	jb     0x40b23a
  40b1ef:	hlt    
  40b1f0:	imul   esp,DWORD PTR [eax-0x4621832c],0xffffffa8
  40b1f7:	into   
  40b1f8:	retw   0xd239
  40b1fc:	dec    ecx
  40b1fd:	jne    0x40b27c
  40b1ff:	mov    ebp,0xe8c8c971
  40b204:	jb     0x40b1f5
  40b206:	and    DWORD PTR [ebx-0x7c],edx
  40b209:	imul   ecx,DWORD PTR [eax+edx*1-0x23bb3066],0xffffff90
  40b211:	test   BYTE PTR [ecx-0x4a],ch
  40b214:	sbb    al,0xbe
  40b216:	icebp  
  40b217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b218:	jge    0x40b1e9
  40b21a:	out    dx,al
  40b21b:	push   ebx
  40b21c:	pop    ds
  40b21d:	loope  0x40b28f
  40b21f:	sbb    ebx,DWORD PTR [edx-0x58]
  40b222:	arpl   WORD PTR [esi-0x71075670],dx
  40b228:	mov    ebx,0xe8cad446
  40b22d:	not    DWORD PTR [eax-0x1e]
  40b230:	dec    ebx
  40b231:	inc    ebp
  40b232:	std    
  40b233:	dec    ebp
  40b234:	fs pop edi
  40b236:	mov    al,0x43
  40b238:	(bad)  
  40b239:	lods   eax,DWORD PTR ds:[esi]
  40b23a:	jmp    0x22da:0x1d54
  40b240:	dec    ebp
  40b242:	imul   ecx,DWORD PTR [edx+0x4de76e0b],0x3272e324
  40b24c:	inc    esp
  40b24d:	push   ds
  40b24e:	iret   
  40b24f:	sub    eax,0xc5028c4a
  40b254:	mov    DWORD PTR [edx-0x345480ab],esp
  40b25a:	mov    WORD PTR [eax-0x6e],ss
  40b25d:	loope  0x40b26b
  40b25f:	popf   
  40b260:	xchg   esp,eax
  40b261:	dec    edx
  40b262:	idiv   BYTE PTR [eax+ebp*8]
  40b265:	or     edx,DWORD PTR [ebx]
  40b267:	cld    
  40b268:	cmp    cl,BYTE PTR ds:[ebx]
  40b26b:	mov    cl,0x17
  40b26d:	ja     0x40b2eb
  40b26f:	ins    BYTE PTR es:[edi],dx
  40b270:	jmp    DWORD PTR [edi-0x390eadf4]
  40b276:	ret    0xe477
  40b279:	aad    0x88
  40b27b:	lea    ebx,[eax+0x1e]
  40b27e:	xchg   BYTE PTR [eax],ah
  40b280:	aad    0x5
  40b282:	jmp    0x53fd7817
  40b287:	and    DWORD PTR [ebx+esi*2],0xffffffe7
  40b28b:	mov    dh,0x7
  40b28d:	sbb    ecx,DWORD PTR [edi]
  40b28f:	pop    ss
  40b290:	inc    BYTE PTR ds:0x49b39bcd
  40b296:	adc    eax,DWORD PTR [esi-0x3df11f04]
  40b29c:	mov    dl,0x1d
  40b29e:	lahf   
  40b29f:	outs   dx,DWORD PTR ds:[esi]
  40b2a0:	push   edi
  40b2a1:	jecxz  0x40b2c9
  40b2a3:	pop    esp
  40b2a4:	scas   eax,DWORD PTR es:[edi]
  40b2a5:	add    dh,BYTE PTR [ebx]
  40b2a7:	pop    edi
  40b2a8:	push   ds
  40b2a9:	scas   al,BYTE PTR es:[edi]
  40b2aa:	les    ebp,FWORD PTR [edx]
  40b2ac:	pushf  
  40b2ad:	pop    edx
  40b2ae:	xor    esi,DWORD PTR [ecx+ebx*8-0x7d]
  40b2b2:	sti    
  40b2b3:	out    0x9d,al
  40b2b5:	aas    
  40b2b6:	into   
  40b2b7:	fidivr DWORD PTR [eax+0x63f22e9e]
  40b2bd:	sahf   
  40b2be:	mov    eax,ds:0xfbea6055
  40b2c3:	jp     0x40b273
  40b2c5:	sbb    BYTE PTR [esi+0x33],dh
  40b2c8:	add    DWORD PTR [edx+esi*2-0x3a90271],ecx
  40b2cf:	xor    esi,eax
  40b2d1:	adc    esp,DWORD PTR [edi+0x7b]
  40b2d4:	(bad)  
  40b2d5:	ja     0x40b2d7
  40b2d7:	mov    BYTE PTR [ebx-0x3b17e55f],ah
  40b2dd:	push   es
  40b2de:	sub    al,al
  40b2e0:	xor    al,0x1d
  40b2e2:	or     ecx,ebp
  40b2e4:	ja     0x40b308
  40b2e6:	sbb    eax,0xdde6fe5e
  40b2eb:	add    eax,0x133e3d93
  40b2f0:	retf   
  40b2f1:	mov    esp,0xe72f8c7d
  40b2f6:	imul   BYTE PTR gs:[ecx+0x2c]
  40b2fa:	cmp    BYTE PTR [ebx+0x529b4e0c],ah
  40b300:	cmp    ecx,edx
  40b302:	ja     0x40b2e8
  40b304:	test   DWORD PTR [edx-0x3cfa3ba5],0x6d741265
  40b30e:	and    BYTE PTR [edi+0x117c1987],dl
  40b314:	cwde   
  40b315:	sbb    BYTE PTR [eax],ah
  40b317:	test   al,0x39
  40b319:	jp     0x40b304
  40b31b:	lea    esi,[ebp+0x46]
  40b31e:	xor    DWORD PTR [ebx],edx
  40b320:	retf   
  40b321:	adc    DWORD PTR [edi],esi
  40b323:	ret    
  40b324:	retf   0x8ce
  40b327:	repz add eax,0xc4402039
  40b32d:	pushf  
  40b32e:	sti    
  40b32f:	dec    esi
  40b330:	pusha  
  40b331:	xor    al,0x93
  40b333:	mov    ds:0xf75d4cd0,eax
  40b338:	add    al,0x79
  40b33a:	loopne 0x40b301
  40b33c:	push   es
  40b33d:	icebp  
  40b33e:	inc    edx
  40b33f:	(bad)  
  40b340:	sub    edi,DWORD PTR [edx]
  40b342:	das    
  40b343:	ins    DWORD PTR es:[edi],dx
  40b344:	inc    edx
  40b345:	xchg   esp,eax
  40b346:	lods   al,BYTE PTR ds:[esi]
  40b347:	pop    eax
  40b348:	cdq    
  40b349:	dec    esi
  40b34a:	sbb    al,0xf0
  40b34c:	xor    al,0xd2
  40b34e:	jmp    0x270f:0x41b11d3a
  40b355:	repnz addr16 test bh,al
  40b359:	test   eax,0x9795586
  40b35e:	sub    al,BYTE PTR [ebp-0x3]
  40b361:	stc    
  40b362:	loopne 0x40b30e
  40b364:	in     al,dx
  40b365:	(bad)  
  40b366:	dec    ebx
  40b367:	int3   
  40b368:	test   al,0xaf
  40b36a:	sbb    DWORD PTR [edx],0xffffff87
  40b36d:	jp     0x40b372
  40b36f:	pop    ecx
  40b370:	icebp  
  40b371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b372:	out    0x2a,eax
  40b374:	ins    BYTE PTR es:[edi],dx
  40b375:	mov    ebx,DWORD PTR [edx-0x7320d602]
  40b37b:	cmp    al,0xef
  40b37d:	repnz mov WORD PTR [ebp-0x8584b69],gs
  40b384:	lea    eax,[ebx+0x6321628b]
  40b38a:	cmc    
  40b38b:	lods   al,BYTE PTR ds:[esi]
  40b38c:	sahf   
  40b38d:	push   edx
  40b38e:	leave  
  40b38f:	je     0x40b32e
  40b391:	mov    dl,0xc1
  40b393:	repnz aam 0xc0
  40b396:	repnz imul esi,DWORD PTR [edi],0x2ea8161
  40b39d:	add    BYTE PTR [edx],dl
  40b39f:	cs mov edx,0x411c564b
  40b3a5:	shl    DWORD PTR [edi],1
  40b3a7:	pop    eax
  40b3a8:	scas   eax,DWORD PTR es:[edi]
  40b3a9:	xor    ecx,ebp
  40b3ab:	jecxz  0x40b345
  40b3ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3af:	inc    DWORD PTR [esi+0x21]
  40b3b2:	fs std 
  40b3b4:	xor    BYTE PTR [ecx+0x563c83ee],cl
  40b3ba:	and    edi,DWORD PTR [esi+0x608151eb]
  40b3c0:	mov    eax,0x68c1da68
  40b3c5:	xor    eax,0xaf9c1ee9
  40b3ca:	dec    ebx
  40b3cb:	sbb    BYTE PTR [ebp-0xa],ah
  40b3ce:	mov    ah,0x89
  40b3d0:	sbb    bh,BYTE PTR [ebx-0x46]
  40b3d3:	push   0x55
  40b3d5:	push   cs
  40b3d6:	jno    0x40b3ef
  40b3d8:	fist   WORD PTR ss:[edi]
  40b3db:	sub    DWORD PTR [esp+ebp*2+0x2d],ebx
  40b3df:	loopne 0x40b381
  40b3e1:	jle    0x40b3e9
  40b3e3:	(bad)  
  40b3e5:	sub    DWORD PTR [ecx+0x3bcceba7],0x74
  40b3ec:	lahf   
  40b3ed:	sub    DWORD PTR [ecx+0xabaa9e8],eax
  40b3f3:	add    cl,BYTE PTR [edx-0x1d]
  40b3f6:	shl    DWORD PTR [eax+0x46],1
  40b3f9:	adc    eax,0x33496eed
  40b3fe:	mov    dh,0xcd
  40b400:	and    ch,al
  40b402:	jmp    0x40b3fa
  40b404:	mov    gs,WORD PTR [eax]
  40b406:	add    BYTE PTR [eax-0x3d760f6f],dl
  40b40c:	inc    eax
  40b40d:	cmp    eax,0xf46e5f93
  40b412:	rol    DWORD PTR [esi-0x73],0xef
  40b416:	xchg   BYTE PTR [esi+0x4c],al
  40b419:	(bad)  
  40b41a:	div    DWORD PTR [ecx*4+0x77b9b896]
  40b421:	cwde   
  40b422:	mov    bh,0x94
  40b424:	retf   0x8a7e
  40b427:	repz repz sub al,0x8d
  40b42b:	popa   
  40b42c:	fsubr  DWORD PTR [ecx+eiz*1-0x62bd73e]
  40b433:	mov    ch,0x6e
  40b435:	pushf  
  40b436:	fistp  QWORD PTR [ebx-0x6c]
  40b439:	arpl   WORD PTR [ebx+eiz*2-0x642c733d],di
  40b440:	test   eax,0xe4227315
  40b445:	mov    ebp,0xccb7945d
  40b44a:	mov    fs,WORD PTR [eax+0xd]
  40b44d:	test   BYTE PTR [eax+0x11],0xaf
  40b451:	jecxz  0x40b402
  40b453:	push   es
  40b454:	xchg   edx,eax
  40b455:	imul   esp,edi,0x2b
  40b458:	ins    DWORD PTR es:[edi],dx
  40b459:	mov    ah,BYTE PTR gs:0x427172b3
  40b460:	jo     0x40b496
  40b462:	mov    bl,0x5c
  40b464:	pop    eax
  40b465:	fsin   
  40b467:	int3   
  40b468:	int    0xf1
  40b46a:	sar    ebp,0xe9
  40b46d:	dec    esp
  40b46e:	xchg   ebp,eax
  40b46f:	and    edi,eax
  40b471:	inc    ebp
  40b472:	and    BYTE PTR [ebx],dl
  40b474:	imul   ebp,eax,0x56f44ab1
  40b47a:	pop    ebx
  40b47b:	xor    bl,0x25
  40b47e:	push   edi
  40b47f:	dec    esp
  40b480:	sbb    BYTE PTR [edx+ecx*1+0x3b411478],0xab
  40b488:	pop    ds
  40b489:	adc    eax,DWORD PTR [esi-0xb8ce7e3]
  40b48f:	pop    ebp
  40b490:	or     eax,0x2277fa99
  40b495:	adc    al,0xce
  40b497:	rol    BYTE PTR gs:[ebx],cl
  40b49a:	add    DWORD PTR [esi-0x58e2b4a5],ecx
  40b4a0:	fbld   TBYTE PTR [edi+0x341071fe]
  40b4a6:	aad    0x6c
  40b4a8:	sbb    esp,DWORD PTR [ecx+0x683672d8]
  40b4ae:	sbb    dl,BYTE PTR [eax]
  40b4b0:	out    0xfa,eax
  40b4b2:	dec    esi
  40b4b3:	out    dx,eax
  40b4b4:	xchg   edi,eax
  40b4b5:	xlat   BYTE PTR ds:[ebx]
  40b4b6:	jns    0x40b4a9
  40b4b8:	nop
  40b4b9:	out    dx,al
  40b4ba:	sub    ebx,DWORD PTR [esi]
  40b4bc:	push   0xffffff85
  40b4be:	jbe    0x40b4ff
  40b4c0:	hlt    
  40b4c1:	or     dh,BYTE PTR [esi-0x627e0ee9]
  40b4c7:	mov    ?,WORD PTR [ecx-0x4e43fdc2]
  40b4cd:	int    0x63
  40b4cf:	mov    al,ds:0xa711abf2
  40b4d4:	sub    DWORD PTR ds:0x8f1e9a8e,0x7c
  40b4db:	cmp    BYTE PTR [eax],0x7e
  40b4de:	retf   
  40b4df:	mov    edi,0x7f867584
  40b4e4:	jbe    0x40b54f
  40b4e6:	adc    al,0x87
  40b4e8:	push   ecx
  40b4e9:	mov    ds:0x401230eb,al
  40b4ee:	ins    DWORD PTR es:[edi],dx
  40b4ef:	or     al,bl
  40b4f1:	cmp    bl,0x7d
  40b4f4:	ror    DWORD PTR [ebx-0x4ac489f0],1
  40b4fa:	push   0x6c898eff
  40b4ff:	mov    es,WORD PTR [edi+0x29b3e538]
  40b505:	lea    edx,[edi+0x4b]
  40b508:	ss add al,0x17
  40b50b:	or     ebx,DWORD PTR [ecx+0x53]
  40b50e:	add    al,0xcf
  40b510:	imul   ecx,ebp,0xffffffbb
  40b513:	jbe    0x40b4ee
  40b515:	ds jo  0x40b539
  40b518:	pop    ecx
  40b519:	loope  0x40b565
  40b51b:	xchg   esi,eax
  40b51c:	test   DWORD PTR [ebx+ecx*8+0x9817df],ecx
  40b523:	pop    edi
  40b524:	xor    bl,dh
  40b526:	xchg   esi,eax
  40b527:	dec    ebx
  40b528:	xchg   ecx,eax
  40b529:	mov    dl,0xa5
  40b52b:	inc    eax
  40b52c:	cmp    al,0xf5
  40b52e:	inc    eax
  40b52f:	jbe    0x40b4d8
  40b531:	or     eax,0x5c84b378
  40b536:	inc    ebp
  40b537:	or     DWORD PTR [ecx-0xa],edx
  40b53a:	(bad)  
  40b53c:	popa   
  40b53d:	ds sahf 
  40b53f:	arpl   WORD PTR [edx+ecx*8+0x39],sp
  40b543:	xchg   esp,eax
  40b544:	mov    edi,0xfc48d824
  40b549:	push   eax
  40b54a:	in     al,0xf6
  40b54c:	out    dx,al
  40b54d:	sub    DWORD PTR [esi+edi*1+0x17c0f0a2],esi
  40b554:	jbe    0x40b539
  40b556:	jbe    0x40b5b5
  40b558:	adc    al,0xe8
  40b55a:	sub    ch,BYTE PTR ds:0x644363f3
  40b560:	mov    ds,WORD PTR [esi+eax*2+0x52e3e9e1]
  40b567:	mov    esi,0xa4373a97
  40b56c:	sbb    ebx,DWORD PTR [ebp-0x1f]
  40b56f:	sub    ebp,esi
  40b571:	sti    
  40b572:	jb     0x40b569
  40b574:	es test al,0x8d
  40b577:	ret    0x566c
  40b57a:	xor    DWORD PTR [ebp+0x15],eax
  40b57d:	mov    ebx,0xa08ade05
  40b582:	jge    0x40b549
  40b584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b585:	inc    ecx
  40b586:	inc    esp
  40b587:	cmp    DWORD PTR [ecx-0x6e],0xcc6833fd
  40b58e:	xor    al,0x30
  40b590:	cs jle 0x40b597
  40b593:	fist   WORD PTR [ecx-0x353e69d5]
  40b599:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b59b:	inc    eax
  40b59c:	mov    ds:0x2f774db6,al
  40b5a1:	pop    edx
  40b5a2:	push   ebp
  40b5a3:	pop    es
  40b5a4:	jb     0x40b5fb
  40b5a6:	push   0x42766355
  40b5ab:	popf   
  40b5ac:	and    edi,ecx
  40b5ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5af:	cmp    bh,BYTE PTR [eax]
  40b5b1:	inc    esi
  40b5b2:	aam    0x92
  40b5b4:	cs dec esp
  40b5b6:	add    eax,0xc1844507
  40b5bb:	rol    BYTE PTR [edi],0x9b
  40b5be:	ins    BYTE PTR es:[edi],dx
  40b5bf:	sbb    DWORD PTR [ecx-0x339c7b31],esp
  40b5c5:	inc    edi
  40b5c7:	cld    
  40b5c8:	adc    eax,0x272ec7b7
  40b5cd:	sbb    eax,0x461bdb0f
  40b5d2:	cmp    eax,0x8508a929
  40b5d7:	xor    eax,0xefbac589
  40b5dc:	sbb    BYTE PTR [eax+0x3e],0xaa
  40b5e0:	out    dx,eax
  40b5e1:	lahf   
  40b5e2:	dec    ebp
  40b5e3:	sbb    BYTE PTR [edx-0x1],dh
  40b5e6:	ss pop eax
  40b5e8:	or     esp,0xf1288ca
  40b5ee:	sbb    bl,BYTE PTR [ebp-0x6b]
  40b5f1:	cmovg  esi,DWORD PTR [ebp+0x39710dd8]
  40b5f8:	dec    edi
  40b5f9:	imul   edi,DWORD PTR [edx+0x13],0xffffffef
  40b5fd:	inc    BYTE PTR ds:0xfc19f695
  40b603:	fsubr  st,st(0)
  40b605:	push   ebx
  40b606:	idiv   DWORD PTR [ebp-0x12]
  40b609:	les    edi,FWORD PTR [ecx-0x10ba3c1d]
  40b60f:	nop
  40b610:	stos   BYTE PTR es:[edi],al
  40b611:	mov    ebx,0x3a8f0d7a
  40b616:	stos   BYTE PTR es:[edi],al
  40b617:	add    BYTE PTR [ecx],bh
  40b619:	scas   al,BYTE PTR es:[edi]
  40b61a:	push   esi
  40b61b:	mov    ch,dh
  40b61d:	in     eax,0xe9
  40b61f:	push   cs
  40b620:	imul   ebp,DWORD PTR [esi+eiz*1],0xffffff83
  40b624:	jnp    0x40b652
  40b626:	test   edx,esi
  40b628:	xor    ah,BYTE PTR [edi]
  40b62a:	out    dx,al
  40b62b:	pop    ebx
  40b62c:	icebp  
  40b62d:	sbb    esp,ecx
  40b62f:	ror    BYTE PTR [edi-0xf7dd32c],cl
  40b635:	push   esp
  40b636:	retf   0xfa37
  40b639:	pop    esi
  40b63a:	sbb    al,0x25
  40b63c:	xchg   ebp,eax
  40b63d:	sbb    ebp,0xe3cf13bf
  40b643:	sbb    BYTE PTR [ebp-0x77],bl
  40b646:	sub    bh,dh
  40b648:	inc    ebp
  40b649:	pop    ebp
  40b64a:	sub    esi,DWORD PTR [edx-0x8]
  40b64d:	and    eax,DWORD PTR [edi-0x68172b9d]
  40b653:	mov    ebx,DWORD PTR [edx-0x8]
  40b656:	jl     0x40b68f
  40b658:	je     0x40b63c
  40b65a:	push   0x47755b94
  40b65f:	jmp    0x271eb8c7
  40b664:	adc    eax,0xf8a02d65
  40b669:	mov    cl,0x9c
  40b66b:	push   esi
  40b66c:	ja     0x40b68b
  40b66e:	push   0xffffffa8
  40b670:	out    0x56,al
  40b672:	pop    ss
  40b673:	jo     0x40b67a
  40b675:	adc    cl,ah
  40b677:	mov    esi,0xbec2102a
  40b67c:	lods   al,BYTE PTR ds:[esi]
  40b67d:	mov    esp,0xc7590d90
  40b682:	jns    0x40b688
  40b684:	or     BYTE PTR ds:0xe00624,0xa7
  40b68b:	add    ch,BYTE PTR [eax+edx*1-0x734099b0]
  40b692:	jmp    0x493198d3
  40b697:	jbe    0x40b6bb
  40b699:	adc    eax,0xffb9d17d
  40b69e:	inc    ebp
  40b69f:	dec    eax
  40b6a0:	scas   eax,DWORD PTR es:[edi]
  40b6a1:	jp     0x40b711
  40b6a3:	push   0x702548b
  40b6a8:	(bad)  
  40b6a9:	or     edx,DWORD PTR [edx]
  40b6ab:	std    
  40b6ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6ad:	mov    dh,BYTE PTR [ebp+esi*8+0x7620a0b6]
  40b6b4:	ror    BYTE PTR [ebx+0x37],0xd9
  40b6b8:	inc    ebp
  40b6b9:	fs dec ecx
  40b6bb:	jl     0x40b672
  40b6bd:	xchg   edi,eax
  40b6be:	inc    ebp
  40b6bf:	pop    ebx
  40b6c0:	cmp    BYTE PTR [edi-0x11881684],0x6
  40b6c7:	clc    
  40b6c8:	pop    eax
  40b6c9:	(bad)  
  40b6ca:	cli    
  40b6cb:	or     ch,BYTE PTR [ebx+0x562183d2]
  40b6d1:	jl     0x40b72f
  40b6d3:	js     0x40b65a
  40b6d5:	das    
  40b6d6:	pop    ds
  40b6d7:	mov    bh,0xfa
  40b6d9:	ret    0xc510
  40b6dc:	add    BYTE PTR [edx],bl
  40b6de:	push   edx
  40b6df:	adc    ebp,DWORD PTR [ebx+0x5a4d8b8f]
  40b6e5:	jle    0x40b748
  40b6e7:	shl    BYTE PTR [edx+0x22],cl
  40b6ea:	and    DWORD PTR [esi+eiz*2-0x6e818217],eax
  40b6f1:	mov    eax,0x600215ef
  40b6f6:	push   edx
  40b6f7:	pop    esp
  40b6f8:	sub    al,0x72
  40b6fa:	les    ecx,FWORD PTR [ecx-0x53e26f7c]
  40b700:	cmp    ebp,esi
  40b702:	sbb    DWORD PTR [edi+0x4f],edx
  40b705:	dec    edi
  40b706:	cmp    dh,BYTE PTR [esp+ecx*1+0x2f]
  40b70a:	or     al,0x1
  40b70c:	rcl    DWORD PTR [esi+0x66adac11],1
  40b712:	adc    eax,0x5d78edf9
  40b717:	mov    ch,0x2c
  40b719:	out    0x6c,eax
  40b71b:	or     BYTE PTR [ecx-0x498c465c],0x3
  40b722:	retf   0x7cec
  40b725:	cmp    eax,0x8811d104
  40b72a:	adc    eax,0x7bdc65b2
  40b72f:	push   ds
  40b730:	cmp    al,0xd0
  40b732:	push   ebx
  40b733:	scas   eax,DWORD PTR es:[edi]
  40b734:	sbb    DWORD PTR [edi],esp
  40b736:	inc    esp
  40b737:	lahf   
  40b738:	sbb    DWORD PTR [ecx-0x43],ebx
  40b73b:	mov    WORD PTR [ebp-0x34b1d20f],gs
  40b741:	leave  
  40b742:	aam    0x83
  40b744:	enter  0x8fb9,0x67
  40b748:	cld    
  40b749:	int3   
  40b74a:	pop    esp
  40b74b:	popf   
  40b74c:	ss sahf 
  40b74e:	popf   
  40b74f:	scas   eax,DWORD PTR es:[edi]
  40b750:	inc    esi
  40b751:	inc    esi
  40b752:	out    0x5f,al
  40b754:	repz xchg ebx,eax
  40b756:	icebp  
  40b757:	jge    0x40b78a
  40b759:	dec    ebp
  40b75a:	sub    al,0x50
  40b75c:	mov    eax,ds:0x92710d09
  40b761:	in     eax,0x34
  40b763:	mov    edx,eax
  40b765:	or     al,0x51
  40b767:	std    
  40b768:	leave  
  40b769:	call   0x11750025
  40b76e:	leave  
  40b76f:	add    DWORD PTR gs:[eax-0x7d833664],esp
  40b776:	xchg   ebp,eax
  40b777:	add    al,0xe4
  40b779:	jae    0x40b796
  40b77b:	icebp  
  40b77c:	loope  0x40b7a0
  40b77e:	push   0xffffffbc
  40b780:	test   BYTE PTR [ecx],0xf8
  40b783:	mov    ah,0x1e
  40b785:	ds mov bl,0x30
  40b788:	mov    eax,ds:0x72166bb1
  40b78d:	xchg   edx,eax
  40b78e:	cmp    BYTE PTR [ebp-0x24],dh
  40b791:	inc    edi
  40b792:	retf   
  40b793:	jo     0x40b716
  40b795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b796:	jecxz  0x40b7c8
  40b798:	jp     0x40b79c
  40b79a:	sub    BYTE PTR [edi-0x4d86c159],bl
  40b7a0:	nop
  40b7a1:	mov    edx,0xfd3021eb
  40b7a6:	adc    edi,0xffffffd4
  40b7a9:	or     ch,BYTE PTR [edx-0x70c4011]
  40b7af:	jecxz  0x40b830
  40b7b1:	xor    al,0xf1
  40b7b3:	and    DWORD PTR [ecx-0x1fd553d5],esp
  40b7b9:	push   0xbc145805
  40b7be:	push   0xfac2a63c
  40b7c3:	sti    
  40b7c4:	test   eax,0x8d5e3405
  40b7c9:	fcom   DWORD PTR [eax+0x5f]
  40b7cc:	push   cs
  40b7cd:	pop    ebx
  40b7ce:	inc    ebx
  40b7cf:	sub    eax,DWORD PTR es:[edx-0x1c]
  40b7d3:	push   ds
  40b7d4:	out    dx,eax
  40b7d5:	lds    eax,FWORD PTR [edx+0x76]
  40b7d8:	es sub al,0x4f
  40b7db:	out    0x79,al
  40b7dd:	in     al,dx
  40b7de:	jg     0x40b7c1
  40b7e0:	mov    ecx,0xe6475913
  40b7e5:	jmp    0x40b798
  40b7e7:	setae  BYTE PTR [edi+0x66]
  40b7eb:	(bad)  
  40b7ed:	fist   WORD PTR [esi+0x2e]
  40b7f0:	mov    bl,0x75
  40b7f2:	test   DWORD PTR [ecx+0x6b1f3983],edx
  40b7f8:	test   BYTE PTR [edi],0xd4
  40b7fb:	repz pop edi
  40b7fd:	les    esp,FWORD PTR [edx-0x76251843]
  40b803:	daa    
  40b804:	pushf  
  40b805:	(bad)  
  40b806:	fistp  QWORD PTR ds:[edx]
  40b809:	push   cs
  40b80a:	jnp    0x40b7dc
  40b80c:	int    0x51
  40b80e:	shl    BYTE PTR [eax+0x78179d06],1
  40b814:	mov    ebp,0xae33da02
  40b819:	cmp    eax,0x6e5253dc
  40b81e:	cmp    DWORD PTR [edi+0xc65dd1a],ebx
  40b824:	in     al,0x9f
  40b826:	push   cs
  40b827:	nop
  40b828:	sub    BYTE PTR [eax],0x2
  40b82b:	pusha  
  40b82c:	xor    al,bl
  40b82e:	dec    edx
  40b82f:	xor    edx,DWORD PTR ds:0xcba9ab65
  40b835:	jge    0x40b837
  40b837:	arpl   WORD PTR [eax+0xf],ax
  40b83a:	jp     0x40b7f9
  40b83c:	jae    0x40b800
  40b83e:	jp     0x40b867
  40b840:	pop    ss
  40b841:	mov    bl,0x8e
  40b843:	(bad)  
  40b844:	xor    DWORD PTR [edx-0x1fc2fd78],esi
  40b84a:	bnd jnp 0x40b830
  40b84d:	mov    dl,ch
  40b84f:	push   edx
  40b850:	and    eax,0x90b5b33b
  40b855:	add    edi,DWORD PTR [esi+0x384c143]
  40b85b:	xchg   ecx,eax
  40b85c:	mov    ebp,0xe58c86ff
  40b861:	xor    al,0x2f
  40b863:	and    DWORD PTR [ebx],0xfffffff7
  40b866:	sti    
  40b867:	mov    al,ds:0xb11be011
  40b86c:	psraw  mm2,mm6
  40b86f:	pop    esi
  40b870:	xlat   BYTE PTR ds:[ebx]
  40b871:	retf   0x9f93
  40b874:	test   al,0xd9
  40b876:	jge    0x40b83d
  40b878:	inc    esp
  40b879:	pop    esi
  40b87a:	inc    edx
  40b87b:	data16 cmc 
  40b87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b87e:	mov    edi,0xb4b22721
  40b883:	or     cl,BYTE PTR [ebp-0x4d]
  40b886:	lea    ecx,[esi-0x740b4849]
  40b88c:	loop   0x40b8e6
  40b88e:	push   sp
  40b890:	mov    edi,0x7055a298
  40b895:	jo     0x40b8ee
  40b897:	and    dl,ah
  40b899:	out    0x46,eax
  40b89b:	jp     0x40b895
  40b89d:	div    ch
  40b89f:	test   eax,0x34f6114c
  40b8a4:	dec    edi
  40b8a5:	cmc    
  40b8a6:	ss xchg ecx,eax
  40b8a8:	xchg   edx,eax
  40b8a9:	mov    ch,0x16
  40b8ab:	sar    BYTE PTR [ebx+0x1f97156f],1
  40b8b1:	repnz aaa 
  40b8b3:	mov    al,0x94
  40b8b5:	xchg   edx,eax
  40b8b6:	xor    al,BYTE PTR [ebx+0x1edd61fe]
  40b8bc:	test   eax,0x31cfe3b1
  40b8c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8c2:	lea    eax,[edi-0x621f7fde]
  40b8c8:	test   al,0xc4
  40b8ca:	loope  0x40b8f1
  40b8cc:	inc    edi
  40b8cd:	push   ebp
  40b8ce:	and    ch,BYTE PTR [ebx]
  40b8d0:	cmp    bl,al
  40b8d2:	(bad)  
  40b8d4:	push   ebp
  40b8d5:	push   ebp
  40b8d6:	out    dx,al
  40b8d7:	mov    cl,0xeb
  40b8d9:	div    DWORD PTR [ebx+0x65]
  40b8dc:	lods   al,BYTE PTR ds:[esi]
  40b8dd:	mov    esi,0x38950102
  40b8e2:	out    0xcb,eax
  40b8e4:	clc    
  40b8e5:	inc    eax
  40b8e6:	idiv   BYTE PTR [edx]
  40b8e8:	sub    eax,0xe18e48a3
  40b8ed:	add    BYTE PTR [esi-0x60],dh
  40b8f0:	push   ds
  40b8f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8f2:	int3   
  40b8f3:	inc    esp
  40b8f4:	push   ds
  40b8f5:	jle    0x40b8f1
  40b8f7:	push   esi
  40b8f8:	test   BYTE PTR [eax],al
  40b8fa:	aas    
  40b8fb:	pop    edx
  40b8fc:	stos   BYTE PTR es:[edi],al
  40b8fd:	ss or  eax,0x51dcef71
  40b903:	xchg   edx,eax
  40b904:	and    BYTE PTR [ebx],ah
  40b906:	ret    0x818
  40b909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b90a:	inc    ebp
  40b90b:	cmp    bh,BYTE PTR [ecx]
  40b90d:	iret   
  40b90e:	stos   BYTE PTR es:[edi],al
  40b90f:	sahf   
  40b910:	cmp    dh,BYTE PTR [esi+edx*2]
  40b913:	dec    ebp
  40b914:	enter  0x940b,0xbe
  40b918:	bound  esi,QWORD PTR [ecx]
  40b91a:	int3   
  40b91b:	neg    edx
  40b91d:	mov    edx,0x2c63a7a3
  40b922:	fild   QWORD PTR [ebx-0x6]
  40b925:	inc    ebp
  40b926:	xor    BYTE PTR [ecx],ch
  40b928:	mov    bl,0x48
  40b92a:	push   cs
  40b92b:	adc    BYTE PTR [eax-0x61],cl
  40b92e:	and    al,0x62
  40b930:	adc    DWORD PTR [esi+0x2ced4b7],0x40
  40b937:	ins    BYTE PTR es:[edi],dx
  40b938:	stos   BYTE PTR es:[edi],al
  40b939:	mov    al,0x3c
  40b93b:	mov    esp,DWORD PTR [eax]
  40b93d:	and    al,BYTE PTR [ebx-0x19]
  40b940:	jae    0x40b9ab
  40b942:	and    al,0xa3
  40b944:	fabs   
  40b946:	clc    
  40b947:	xchg   edx,eax
  40b948:	pop    ecx
  40b949:	inc    ebp
  40b94a:	popf   
  40b94b:	push   0x7a
  40b94d:	outs   dx,BYTE PTR ds:[esi]
  40b94e:	jg     0x40b9cd
  40b950:	mov    edx,0x70b0abcb
  40b955:	aad    0x96
  40b957:	sbb    dl,BYTE PTR [ebx-0x4d]
  40b95a:	loopne 0x40b9b9
  40b95c:	mul    DWORD PTR [eax-0x10b713cc]
  40b962:	fs ss push edx
  40b965:	lods   eax,DWORD PTR ds:[esi]
  40b966:	push   esp
  40b967:	mov    eax,ds:0x45f211f1
  40b96c:	fisub  WORD PTR [ebp-0x63]
  40b96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b970:	xor    ecx,DWORD PTR [edi+0x31]
  40b973:	push   edx
  40b974:	js     0x40b96c
  40b976:	mov    ds:0x1b67847b,eax
  40b97b:	mov    bl,BYTE PTR [ebx]
  40b97d:	rcr    esi,1
  40b97f:	dec    ebx
  40b980:	cmp    BYTE PTR [esi],dh
  40b982:	ins    BYTE PTR es:[edi],dx
  40b983:	loope  0x40b939
  40b985:	imul   esp,DWORD PTR [edx-0x14],0x37ee89f2
  40b98c:	and    bh,BYTE PTR [ecx]
  40b98e:	xchg   edi,eax
  40b98f:	push   ecx
  40b990:	mov    bl,0x7d
  40b992:	xlat   BYTE PTR ds:[ebx]
  40b993:	retf   
  40b994:	ret    
  40b995:	xchg   DWORD PTR [edi],esi
  40b997:	and    eax,0x1f0dc2e7
  40b99c:	rcr    DWORD PTR [edi+eax*2],0xa8
  40b9a0:	in     eax,dx
  40b9a1:	jmp    0x1821:0x3cc72e76
  40b9a8:	call   DWORD PTR [ebp+eiz*2+0x3d53b13]
  40b9af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9b0:	mov    ah,0xb1
  40b9b2:	cmp    eax,0x6bb97def
  40b9b7:	jge    0x40b9b8
  40b9b9:	out    0x6e,eax
  40b9bb:	sti    
  40b9bc:	xchg   esi,eax
  40b9bd:	jl     0x40ba0c
  40b9bf:	pslld  mm1,QWORD PTR [eax-0x7e63be8d]
  40b9c6:	jae    0x40b9fc
  40b9c8:	cld    
  40b9c9:	pop    ecx
  40b9ca:	rcl    ch,1
  40b9cc:	popf   
  40b9cd:	dec    ebx
  40b9ce:	push   ebp
  40b9cf:	out    dx,al
  40b9d0:	pop    es
  40b9d1:	sub    DWORD PTR [eax+0x0],0x664fb640
  40b9d8:	dec    BYTE PTR [ebx]
  40b9da:	sbb    eax,0xd454f1b8
  40b9df:	ins    BYTE PTR es:[edi],dx
  40b9e0:	(bad)  
  40b9e1:	or     eax,0x51f18462
  40b9e6:	add    ch,BYTE PTR [ebp+0x7d]
  40b9e9:	fst    st(7)
  40b9eb:	mov    ecx,eax
  40b9ed:	jb     0x40b9d4
  40b9ef:	in     al,dx
  40b9f0:	ror    DWORD PTR [ebx-0x8],cl
  40b9f3:	loop   0x40ba11
  40b9f5:	xor    ah,BYTE PTR [edx+0x34]
  40b9f8:	mov    DWORD PTR [edx],edi
  40b9fa:	lods   eax,DWORD PTR cs:[esi]
  40b9fc:	dec    esp
  40b9fd:	and    eax,0xda04f994
  40ba02:	mov    cl,0x88
  40ba04:	jmp    0xcd1a:0x630c9dcd
  40ba0b:	xchg   ebp,eax
  40ba0c:	pop    ecx
  40ba0d:	xor    ah,cl
  40ba0f:	test   DWORD PTR [ecx],ebx
  40ba11:	pusha  
  40ba12:	repz aam 0xa0
  40ba15:	adc    esp,0xffffff8d
  40ba18:	test   BYTE PTR [ecx*2+0x6fcfab4f],al
  40ba1f:	leave  
  40ba20:	arpl   WORD PTR [esi],ax
  40ba22:	pop    ds
  40ba23:	repz dec ecx
  40ba25:	sub    BYTE PTR [ebx-0x39f02b29],ch
  40ba2b:	adc    al,0x5a
  40ba2d:	shl    DWORD PTR [esi],1
  40ba2f:	mov    bl,0xd7
  40ba31:	int    0x76
  40ba33:	cdq    
  40ba34:	ret    
  40ba35:	dec    esp
  40ba36:	outs   dx,DWORD PTR es:[esi]
  40ba38:	or     dh,BYTE PTR [edi+edx*2]
  40ba3b:	xor    ecx,DWORD PTR [edx-0x32ff3d66]
  40ba41:	adc    BYTE PTR [esi+0x17b57c8e],0x19
  40ba48:	frstor [edx+0x6b]
  40ba4b:	fsub   DWORD PTR [edx+0x13]
  40ba4e:	fwait
  40ba4f:	inc    ebx
  40ba50:	xchg   esi,eax
  40ba51:	ja     0x40ba2b
  40ba53:	(bad)  
  40ba54:	test   DWORD PTR [eax],edi
  40ba56:	dec    edi
  40ba57:	lods   eax,DWORD PTR ds:[esi]
  40ba58:	call   0xbda2:0xe0aadd81
  40ba5f:	mov    BYTE PTR [ebx],ch
  40ba61:	jns    0x40baca
  40ba63:	xor    al,0x20
  40ba65:	pusha  
  40ba66:	idiv   BYTE PTR [edi]
  40ba68:	loopne 0x40b9f8
  40ba6a:	push   ebx
  40ba6b:	fst    QWORD PTR [ebp+0x2e3ae61d]
  40ba71:	push   eax
  40ba72:	jle    0x40ba7e
  40ba74:	or     edi,esi
  40ba76:	mov    esp,0xcb737289
  40ba7b:	fwait
  40ba7c:	or     BYTE PTR [ebp+0x5a5df124],0x21
  40ba83:	pop    esp
  40ba84:	push   ebp
  40ba85:	ins    BYTE PTR es:[edi],dx
  40ba86:	sahf   
  40ba87:	and    ebx,DWORD PTR [edx]
  40ba89:	sbb    BYTE PTR [ecx+edx*8-0x1e7afae],ch
  40ba90:	push   ebp
  40ba91:	std    
  40ba92:	lock cdq 
  40ba94:	push   ss
  40ba95:	jmp    0x938b:0x965f6a0
  40ba9c:	add    eax,0xdebea4f5
  40baa1:	or     BYTE PTR [esp+ecx*8+0x42],0x57
  40baa6:	cmp    al,0x64
  40baa8:	ret    0xb7bf
  40baab:	sbb    ebp,DWORD PTR [ebp+0x72]
  40baae:	pop    ebp
  40baaf:	add    BYTE PTR [edi+0x51],0xff
  40bab3:	adc    eax,0xb93cafd9
  40bab8:	pop    ds
  40bab9:	shl    BYTE PTR [esi+edx*2+0x67f6ea8c],1
  40bac0:	nop
  40bac1:	jge    0x40bb17
  40bac3:	and    BYTE PTR [ebx+0x6aa7f0],ch
  40bac9:	jbe    0x40bb18
  40bacb:	retf   
  40bacc:	ret    0x1004
  40bacf:	sbb    edi,DWORD PTR [edx+0x5b1314b2]
  40bad5:	in     eax,0xa5
  40bad7:	adc    BYTE PTR [edx-0x71d058fa],bl
  40badd:	int3   
  40bade:	xchg   ebp,eax
  40badf:	jmp    0x40bb4c
  40bae1:	sbb    edi,DWORD PTR [ecx-0x6d]
  40bae4:	mov    edx,DWORD PTR [edi-0x25]
  40bae7:	dec    edi
  40bae8:	sbb    esp,DWORD PTR [esi-0x4a6cd0aa]
  40baee:	and    bh,dl
  40baf0:	pop    edx
  40baf1:	mov    WORD PTR [ebx],es
  40baf3:	js     0x40bac2
  40baf5:	pop    edi
  40baf6:	mov    ds:0x8c69b86a,al
  40bafb:	ins    DWORD PTR es:[edi],dx
  40bafc:	inc    edi
  40bafd:	stos   DWORD PTR es:[edi],eax
  40bafe:	lock ins BYTE PTR es:[edi],dx
  40bb00:	cwde   
  40bb01:	mov    eax,ds:0x6c1ec6ab
  40bb06:	inc    ebp
  40bb07:	mov    bh,0x5e
  40bb09:	addr16 in eax,0x92
  40bb0c:	rol    DWORD PTR [esi-0x65],0x46
  40bb10:	xor    al,0x50
  40bb12:	lods   al,BYTE PTR ds:[esi]
  40bb13:	or     BYTE PTR [ebp+0x7cd802a4],bl
  40bb19:	sbb    eax,DWORD PTR [eax-0xf51fdf4]
  40bb1f:	cmp    eax,0x31c9367f
  40bb24:	add    al,0x3d
  40bb26:	mov    al,ds:0xb5cd6991
  40bb2b:	lahf   
  40bb2c:	lods   eax,DWORD PTR ds:[esi]
  40bb2d:	fsubr  DWORD PTR gs:[edi-0x51add70d]
  40bb34:	ins    BYTE PTR es:[edi],dx
  40bb35:	jge    0x40bb9b
  40bb37:	lea    eax,[eax-0x400ccf62]
  40bb3d:	enter  0xb588,0x87
  40bb41:	pop    edi
  40bb42:	dec    edx
  40bb43:	jnp    0x40bb25
  40bb45:	jge    0x40bb56
  40bb47:	out    0x89,eax
  40bb49:	bound  edi,QWORD PTR [esi+ebx*1+0xb3bee0e]
  40bb50:	mov    ah,0x4e
  40bb52:	sub    ebp,DWORD PTR [esi+0x3d]
  40bb55:	mov    eax,0x2692ff48
  40bb5a:	imul   esi,DWORD PTR [edi],0xffffffee
  40bb5d:	and    DWORD PTR [eax-0x35],0x90625818
  40bb64:	mov    ah,0x4c
  40bb66:	sub    al,0x51
  40bb68:	pop    es
  40bb69:	in     al,dx
  40bb6a:	push   edi
  40bb6b:	ret    0xed46
  40bb6e:	mov    cl,0x57
  40bb70:	dec    edx
  40bb71:	jg     0x40bbc2
  40bb73:	sar    dl,cl
  40bb75:	outs   dx,DWORD PTR ds:[esi]
  40bb76:	mov    cl,BYTE PTR [edi-0x35746649]
  40bb7c:	push   0x6f
  40bb7e:	fmul   QWORD PTR [esi+0x12fa9330]
  40bb84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb85:	xchg   ecx,ebp
  40bb87:	mov    dh,0x59
  40bb89:	xchg   ecx,eax
  40bb8a:	mov    ebx,?
  40bb8c:	retf   0x3acf
  40bb8f:	scas   al,BYTE PTR es:[edi]
  40bb90:	std    
  40bb91:	enter  0x3c05,0x2f
  40bb95:	repnz adc eax,0x4d52e3fe
  40bb9b:	retf   0x910e
  40bb9e:	ret    
  40bb9f:	lods   al,BYTE PTR ds:[esi]
  40bba0:	and    dh,ch
  40bba2:	pop    ds
  40bba3:	xor    al,0xde
  40bba5:	xchg   ebx,eax
  40bba6:	popf   
  40bba7:	pusha  
  40bba8:	xchg   DWORD PTR [edi+0x29],esi
  40bbab:	xlat   BYTE PTR ds:[ebx]
  40bbac:	dec    ebx
  40bbad:	pop    esp
  40bbae:	pop    es
  40bbaf:	rcl    BYTE PTR [eax],cl
  40bbb1:	or     edx,edi
  40bbb3:	push   edi
  40bbb4:	fidiv  WORD PTR [eax-0x18]
  40bbb7:	loope  0x40bbf2
  40bbb9:	xor    BYTE PTR [edi+0x25],ah
  40bbbc:	mov    cl,0x9b
  40bbbe:	pop    ds
  40bbbf:	scas   al,BYTE PTR es:[edi]
  40bbc0:	mov    ecx,es
  40bbc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbc3:	ss jno 0x40bc18
  40bbc6:	jo     0x40bbe5
  40bbc8:	shl    cl,0x48
  40bbcb:	fs stos BYTE PTR es:[edi],al
  40bbcd:	pop    es
  40bbce:	push   esp
  40bbcf:	imul   ebx,DWORD PTR [ecx+0x3a033c3a],0xc8af5421
  40bbd9:	in     al,dx
  40bbda:	fisttp WORD PTR [ebx+eax*4+0x3780e50b]
  40bbe1:	jle    0x40bbd7
  40bbe3:	outs   dx,DWORD PTR ds:[esi]
  40bbe4:	cwde   
  40bbe5:	dec    ecx
  40bbe6:	sub    eax,0xd1a66f92
  40bbeb:	test   al,0x6
  40bbed:	iret   
  40bbee:	pop    esp
  40bbef:	push   0x72a75145
  40bbf4:	mov    esi,0xad75e8d8
  40bbf9:	dec    ebp
  40bbfa:	popf   
  40bbfb:	mov    edx,0x1b8392e0
  40bc00:	dec    ecx
  40bc01:	rcr    BYTE PTR [ebx+0x4b],0x20
  40bc05:	pop    ss
  40bc06:	repnz add DWORD PTR [ebp+ebx*1-0x12],edi
  40bc0b:	or     al,0xe4
  40bc0d:	xor    DWORD PTR [edi+0x6e31653c],edx
  40bc13:	int    0x62
  40bc15:	mov    al,0x7
  40bc17:	push   ecx
  40bc18:	sbb    BYTE PTR [ebx],0xd7
  40bc1b:	mov    DWORD PTR [esi],0xa8c81847
  40bc21:	fdiv   QWORD PTR [edx-0x51dfc2f8]
  40bc27:	lahf   
  40bc28:	cmc    
  40bc29:	es xor al,0x2b
  40bc2c:	(bad)  
  40bc2d:	adc    al,0x9
  40bc2f:	lock lods eax,DWORD PTR ds:[esi]
  40bc31:	mov    ds:0xe92c06dc,eax
  40bc36:	test   BYTE PTR [edi+0x3a],ah
  40bc39:	fstp   st(5)
  40bc3b:	pop    eax
  40bc3c:	sub    BYTE PTR [edx],dl
  40bc3e:	ins    DWORD PTR es:[edi],dx
  40bc3f:	in     al,0xf2
  40bc41:	push   ecx
  40bc42:	xor    DWORD PTR [ebx],0x45
  40bc45:	lods   eax,DWORD PTR ds:[esi]
  40bc46:	adc    esp,edi
  40bc48:	ja     0x40bc37
  40bc4a:	jecxz  0x40bcc4
  40bc4c:	sub    edi,DWORD PTR [ebp-0x566734ed]
  40bc52:	dec    ebp
  40bc53:	fistp  DWORD PTR [edi+0x18]
  40bc56:	xor    DWORD PTR [edx+edi*1+0x58c6f95f],0x11
  40bc5e:	cdq    
  40bc5f:	out    0x30,al
  40bc61:	dec    ecx
  40bc62:	outs   dx,BYTE PTR ds:[esi]
  40bc63:	sub    esi,DWORD PTR [edx+0x3b6bbc0e]
  40bc69:	mov    DWORD PTR [ecx+0x42],ebx
  40bc6c:	aas    
  40bc6d:	test   BYTE PTR [edi],ah
  40bc6f:	daa    
  40bc70:	dec    ecx
  40bc71:	lods   eax,DWORD PTR ds:[esi]
  40bc72:	inc    ecx
  40bc73:	test   al,0x98
  40bc75:	pop    ebx
  40bc77:	push   0xffffffb7
  40bc79:	jmp    0x57b16c2e
  40bc7e:	pop    ss
  40bc7f:	es xchg esp,eax
  40bc81:	(bad)  
  40bc82:	out    dx,al
  40bc83:	push   0xd
  40bc85:	push   ds
  40bc86:	dec    ebx
  40bc87:	je     0x40bc3b
  40bc89:	loop   0x40bc1e
  40bc8b:	push   eax
  40bc8c:	out    0x4a,al
  40bc8e:	dec    eax
  40bc8f:	outs   dx,DWORD PTR ds:[esi]
  40bc90:	or     eax,0x35daf491
  40bc95:	sahf   
  40bc96:	jno    0x40bcec
  40bc98:	pop    ds
  40bc99:	jl     0x40bcf7
  40bc9b:	mov    ds:0x26c8ff53,al
  40bca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca1:	jp     0x40bc73
  40bca3:	mov    eax,ds:0xb8672624
  40bca8:	gs (bad) 
  40bcaa:	fnstcw WORD PTR [ecx-0x8]
  40bcad:	xchg   bh,al
  40bcaf:	or     al,0x56
  40bcb1:	inc    esi
  40bcb2:	pop    es
  40bcb3:	lds    esi,FWORD PTR [edi-0x78]
  40bcb6:	sbb    ch,dh
  40bcb8:	leave  
  40bcb9:	lea    ebx,[esi-0x7d]
  40bcbc:	cmc    
  40bcbd:	ins    BYTE PTR es:[edi],dx
  40bcbe:	jge    0x40bd24
  40bcc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcc1:	push   edi
  40bcc2:	mov    edx,0x68584aab
  40bcc7:	dec    ebp
  40bcc8:	stos   BYTE PTR es:[edi],al
  40bcc9:	comiss xmm3,DWORD PTR [ecx]
  40bccc:	and    BYTE PTR [eax],cl
  40bcce:	mov    eax,ds:0x35fd537f
  40bcd3:	mov    al,0xa0
  40bcd5:	int3   
  40bcd6:	xor    al,0xad
  40bcd8:	outs   dx,BYTE PTR ds:[esi]
  40bcd9:	jl     0x40bd01
  40bcdb:	(bad)
  40bcde:	dec    esi
  40bcdf:	mov    ah,0x4a
  40bce1:	or     ah,BYTE PTR [edx+0x53]
  40bce4:	push   ebp
  40bce5:	push   ds
  40bce6:	xchg   edi,eax
  40bce7:	dec    esp
  40bce8:	xchg   ecx,eax
  40bce9:	repnz dec ecx
  40bceb:	xchg   ebp,eax
  40bcec:	aaa    
  40bced:	and    esp,DWORD PTR [ebx-0x6f]
  40bcf0:	xchg   ebx,eax
  40bcf1:	jne    0x40bd25
  40bcf3:	into   
  40bcf4:	test   al,0xf0
  40bcf6:	cwde   
  40bcf7:	cmp    BYTE PTR [ecx-0x7f60171f],ah
  40bcfd:	sub    DWORD PTR [edx-0x35d1bf52],0x2034a6ae
  40bd07:	aad    0xe8
  40bd09:	xor    DWORD PTR [edi],0xafb276e7
  40bd0f:	cs jp  0x40bcc5
  40bd12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd13:	sbb    al,BYTE PTR ds:0x6ea22d21
  40bd19:	jmp    0x4057:0x2eb629cd
  40bd20:	add    al,0xe9
  40bd22:	xor    eax,0x50305cfa
  40bd27:	inc    ebx
  40bd28:	dec    esi
  40bd29:	jmp    FWORD PTR es:0x64b102d2
  40bd30:	test   eax,0xcb6efc6d
  40bd35:	cdq    
  40bd36:	ins    DWORD PTR es:[edi],dx
  40bd37:	mov    eax,0xed1bdb41
  40bd3c:	mov    dl,0x43
  40bd3e:	sbb    esp,DWORD PTR [edx]
  40bd40:	jae    0x40bcdb
  40bd42:	mov    ebx,0xcbe4dea8
  40bd47:	jmp    0xadae:0xd4512934
  40bd4e:	aaa    
  40bd4f:	in     al,0xe7
  40bd51:	lods   eax,DWORD PTR ds:[esi]
  40bd52:	adc    bh,cl
  40bd54:	outs   dx,DWORD PTR es:[esi]
  40bd56:	inc    edx
  40bd57:	inc    BYTE PTR [edi]
  40bd59:	adc    esp,edx
  40bd5b:	scas   eax,DWORD PTR es:[edi]
  40bd5c:	(bad)  
  40bd5d:	es jp  0x40bd03
  40bd60:	stc    
  40bd61:	push   ebp
  40bd62:	mov    ds:0x116f905e,eax
  40bd67:	popf   
  40bd68:	aam    0x35
  40bd6a:	or     DWORD PTR [esi+eiz*4],0x6d
  40bd6e:	stos   BYTE PTR es:[edi],al
  40bd6f:	rcl    BYTE PTR [ebp+0xed5a1c2],cl
  40bd75:	jmp    0x12fb31d4
  40bd7a:	cmp    dh,bh
  40bd7c:	lea    esp,[ecx-0x6dae9256]
  40bd82:	fldcw  WORD PTR ds:0xe2a4028f
  40bd88:	icebp  
  40bd89:	cwde   
  40bd8a:	test   DWORD PTR [ecx-0xf],ebx
  40bd8d:	ds scas eax,DWORD PTR es:[edi]
  40bd8f:	cmp    ebx,ebx
  40bd91:	mov    edx,0xac934e3e
  40bd96:	inc    esi
  40bd97:	ja     0x40bd1c
  40bd99:	mov    dl,BYTE PTR [edi+0x4f6f7b9e]
  40bd9f:	cdq    
  40bda0:	adc    DWORD PTR [edi],edi
  40bda2:	xor    eax,0x800362d1
  40bda7:	mov    al,BYTE PTR [edi]
  40bda9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdaa:	push   edx
  40bdab:	aad    0x5a
  40bdad:	ds fwait
  40bdaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdb0:	sub    edi,eax
  40bdb2:	mov    ebp,0xa955defb
  40bdb7:	xchg   edi,eax
  40bdb8:	or     eax,0x6dacde2d
  40bdbd:	dec    ecx
  40bdbe:	dec    ebx
  40bdbf:	bound  ebp,QWORD PTR [ebp-0x14e32643]
  40bdc5:	dec    edi
  40bdc6:	adc    edx,edi
  40bdc8:	sub    esp,eax
  40bdca:	push   esp
  40bdcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdcc:	stos   BYTE PTR es:[edi],al
  40bdcd:	mov    fs,WORD PTR [ecx]
  40bdcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdd0:	push   esi
  40bdd1:	arpl   sp,dx
  40bdd3:	mov    BYTE PTR [edi-0x57a2d7a8],ah
  40bdd9:	cmp    dl,ah
  40bddb:	das    
  40bddc:	retf   0xc4fe
  40bddf:	sbb    edx,edx
  40bde1:	popa   
  40bde2:	jae    0x40bdaa
  40bde4:	jecxz  0x40bd9d
  40bde6:	jbe    0x40be46
  40bde8:	daa    
  40bde9:	push   edx
  40bdea:	xchg   esp,eax
  40bdeb:	dec    edx
  40bdec:	int    0xae
  40bdee:	mov    edx,0xdb1843dd
  40bdf3:	pop    eax
  40bdf4:	call   0xf26a:0x9311ccbb
  40bdfb:	xchg   esp,eax
  40bdfc:	mov    es,esp
  40bdfe:	inc    ebp
  40bdff:	sub    al,0x89
  40be01:	loop   0x40be35
  40be03:	sti    
  40be04:	pusha  
  40be05:	pop    edx
  40be06:	lods   eax,DWORD PTR ds:[esi]
  40be07:	pop    eax
  40be08:	mov    ds:0x89cdc9f2,al
  40be0d:	mov    dh,0x29
  40be0f:	inc    ebp
  40be10:	nop
  40be11:	xchg   ebx,eax
  40be12:	imul   esi,DWORD PTR [eax+0x47a8a384],0xffffffb4
  40be19:	inc    edx
  40be1a:	rol    DWORD PTR [eax-0x64],1
  40be1d:	clc    
  40be1e:	popa   
  40be1f:	push   ecx
  40be20:	mov    eax,0xccde5911
  40be25:	fst    QWORD PTR [eax-0x6c]
  40be28:	loopne 0x40bdb6
  40be2a:	in     al,dx
  40be2b:	sbb    al,0x7f
  40be2d:	jge    0x40be01
  40be2f:	icebp  
  40be30:	mov    WORD PTR [ebx+0x0],gs
  40be33:	dec    ecx
  40be34:	(bad)  
  40be35:	(bad)  
  40be36:	(bad)  
  40be37:	jbe    0x40bde6
  40be39:	mov    esi,0xac818e15
  40be3e:	loop   0x40be3b
  40be40:	lods   eax,DWORD PTR ds:[esi]
  40be41:	rol    DWORD PTR [esi+0x512a21ea],1
  40be47:	xchg   edi,eax
  40be48:	scas   al,BYTE PTR es:[edi]
  40be49:	(bad)  
  40be4a:	mov    ds:0x8ad95ff5,al
  40be4f:	ins    DWORD PTR es:[edi],dx
  40be50:	ins    BYTE PTR es:[edi],dx
  40be51:	das    
  40be52:	or     DWORD PTR [ecx],ebp
  40be54:	ret    0xd502
  40be57:	inc    esi
  40be58:	sub    DWORD PTR [esi-0x28],esp
  40be5b:	ss scas eax,DWORD PTR es:[edi]
  40be5d:	cdq    
  40be5e:	cmp    bh,ch
  40be60:	add    ah,BYTE PTR ss:[esi-0x3b766ecd]
  40be67:	mov    dl,0xf1
  40be69:	pmulhuw mm5,QWORD PTR [edx-0x55]
  40be6d:	dec    esp
  40be6e:	fild   QWORD PTR [ebp+0x77]
  40be71:	pop    esi
  40be72:	sti    
  40be73:	inc    edx
  40be74:	(bad)  
  40be75:	mov    ds:0x5d3c26c3,al
  40be7a:	pop    ss
  40be7b:	sub    ah,cl
  40be7d:	and    al,0xdb
  40be7f:	fidiv  DWORD PTR [ecx+ebx*1]
  40be82:	data16 adc bl,BYTE PTR [esi-0x29]
  40be86:	sbb    al,0xff
  40be88:	aaa    
  40be89:	add    bh,BYTE PTR [ebx+0x4e]
  40be8c:	or     eax,0xbd376a30
  40be91:	dec    edi
  40be92:	lea    ebx,[ecx-0x3368c687]
  40be98:	push   edx
  40be99:	ds sbb al,0xd5
  40be9c:	add    BYTE PTR [ecx+esi*2-0x2b],dl
  40bea0:	sbb    esp,DWORD PTR [eax*2+0x2c49b4c7]
  40bea7:	adc    eax,0xcb75e9fd
  40beac:	test   DWORD PTR [edx-0x5a6471e3],0x7569174e
  40beb6:	dec    ebp
  40beb7:	call   0xd824:0x7c65191e
  40bebe:	adc    al,0x42
  40bec0:	test   eax,0x4b358fbe
  40bec5:	sbb    DWORD PTR [ecx],0x3a79432f
  40becb:	adc    al,0x38
  40becd:	in     eax,0xc9
  40becf:	test   DWORD PTR fs:[edx-0x4a5860fb],0xdf788028
  40beda:	shl    DWORD PTR [edx],cl
  40bedc:	cmp    al,BYTE PTR [esi]
  40bede:	fwait
  40bedf:	je     0x40bf02
  40bee1:	mov    esp,0x5eb22201
  40bee6:	inc    ecx
  40bee7:	xor    bh,BYTE PTR [ebx]
  40bee9:	sub    eax,0x33782003
  40beee:	loope  0x40bec0
  40bef0:	adc    eax,0x5a21e806
  40bef5:	cmp    eax,0x359f4221
  40befa:	inc    edx
  40befb:	mov    ds:0xa49bd35a,eax
  40bf00:	int3   
  40bf01:	(bad)
  40bf04:	retf   
  40bf05:	sub    DWORD PTR [edx+0x4e],edi
  40bf08:	rcr    BYTE PTR [edi],cl
  40bf0a:	call   ebx
  40bf0c:	ret    
  40bf0d:	inc    eax
  40bf0e:	cmp    eax,0x20dcf763
  40bf13:	iret   
  40bf14:	jle    0x40beb7
  40bf16:	mov    cl,dl
  40bf18:	inc    esi
  40bf19:	cmp    BYTE PTR [esi-0x33],al
  40bf1c:	enter  0xd7d1,0xe9
  40bf20:	leave  
  40bf21:	cmp    al,0x75
  40bf23:	aas    
  40bf24:	xchg   ecx,eax
  40bf25:	pusha  
  40bf26:	mov    esi,0x43776f13
  40bf2b:	dec    ecx
  40bf2c:	data16 jae 0x40bed7
  40bf2f:	push   ecx
  40bf30:	aas    
  40bf31:	add    al,0x5d
  40bf33:	sub    DWORD PTR [ebp-0x5a73024d],edi
  40bf39:	fmul   DWORD PTR [edi+0x779bac6e]
  40bf3f:	mov    bl,0xa5
  40bf41:	sbb    ebx,DWORD PTR [esi]
  40bf43:	push   0x1ac88337
  40bf48:	xchg   esi,eax
  40bf49:	nop
  40bf4a:	fnstcw WORD PTR [ecx]
  40bf4c:	mov    eax,0xa3c549de
  40bf51:	xlat   BYTE PTR ds:[ebx]
  40bf52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf53:	cli    
  40bf54:	ror    ebx,0x3d
  40bf57:	or     al,BYTE PTR [ebp-0x9d237c8]
  40bf5d:	(bad)  
  40bf5e:	out    dx,al
  40bf5f:	jbe    0x40bfc5
  40bf61:	push   0x62
  40bf63:	(bad)  
  40bf64:	ja     0x40bf5d
  40bf66:	es push 0x21403398
  40bf6c:	add    eax,0x47d2cf5a
  40bf71:	out    0x36,eax
  40bf73:	mov    WORD PTR [ebp+eiz*8-0x5093760c],?
  40bf7a:	scas   al,BYTE PTR es:[edi]
  40bf7b:	ret    
  40bf7c:	push   ebp
  40bf7d:	push   esi
  40bf7e:	xchg   esp,eax
  40bf7f:	loop   0x40bf2a
  40bf81:	fcomp  DWORD PTR [esi]
  40bf83:	add    DWORD PTR [ebp-0x203158a2],0xd5f94c5c
  40bf8d:	loopne 0x40bfd4
  40bf8f:	dec    edi
  40bf90:	lahf   
  40bf91:	(bad)  
  40bf92:	fstp   QWORD PTR [edi-0x2a4b2461]
  40bf98:	jmp    0x40bf52
  40bf9a:	pop    eax
  40bf9b:	jmp    0x40bfb6
  40bf9d:	and    dl,BYTE PTR [ebx+0x4d]
  40bfa0:	in     al,0x6b
  40bfa2:	arpl   WORD PTR [edx+0x3ff5535a],bp
  40bfa8:	shl    DWORD PTR [eax],0x69
  40bfab:	adc    eax,0xf2af89ee
  40bfb0:	xchg   ebx,eax
  40bfb1:	ja     0x40bf89
  40bfb3:	es pop es
  40bfb5:	aam    0x2d
  40bfb7:	sub    eax,0xe2f1efc
  40bfbc:	or     al,0x9b
  40bfbe:	mov    edi,0x2b974afc
  40bfc3:	shl    DWORD PTR [esi],cl
  40bfc5:	jmp    0xfb593620
  40bfca:	dec    ebp
  40bfcb:	sbb    al,BYTE PTR [ebx-0x57e81cd1]
  40bfd1:	push   ebp
  40bfd2:	stos   DWORD PTR es:[edi],eax
  40bfd3:	xchg   ebp,eax
  40bfd4:	data16 std 
  40bfd6:	mov    ebx,0x35d7b83c
  40bfdb:	or     eax,0x35cf9d49
  40bfe0:	dec    esi
  40bfe1:	rol    cl,0x1
  40bfe4:	clc    
  40bfe5:	lods   al,BYTE PTR ds:[esi]
  40bfe6:	and    edi,DWORD PTR [ebx+esi*1+0x37da9b2f]
  40bfed:	jmp    0x40c010
  40bfef:	and    al,0x5
  40bff1:	out    0x79,al
  40bff3:	mov    ds:0xe4b7ebde,eax
  40bff8:	cmc    
  40bff9:	pop    eax
  40bffa:	pop    esp
  40bffb:	fsubrp st(6),st
  40bffd:	int3   
  40bffe:	sub    al,0x7f
  40c000:	das    
  40c001:	imul   ebp,eax,0x44
  40c004:	(bad)  
  40c005:	push   0xe37a3d2f
  40c00a:	pop    esi
  40c00b:	fdiv   QWORD PTR [esi]
  40c00d:	or     BYTE PTR [ecx-0x3e],al
  40c010:	jae    0x40bfa9
  40c012:	ret    0x7832
  40c015:	in     al,0x9
  40c017:	es pop ebx
  40c019:	mov    dl,0xb5
  40c01b:	cmp    bl,BYTE PTR [edi+0x60]
  40c01e:	ret    
  40c01f:	loopne 0x40c09e
  40c021:	jmp    0x40bfee
  40c023:	jb     0x40c051
  40c025:	add    al,0x36
  40c027:	pop    es
  40c028:	add    al,0x75
  40c02a:	lea    esp,[ebp+0x70]
  40c02d:	rcl    ebx,cl
  40c02f:	cmp    DWORD PTR [edx-0x50b6ac90],esi
  40c035:	cmp    eax,0xe98ad61e
  40c03a:	js     0x40bfca
  40c03c:	push   0xebd6dd1a
  40c041:	js     0x40c04f
  40c043:	popf   
  40c044:	pop    ds
  40c045:	(bad)  
  40c046:	pop    ds
  40c047:	dec    ebx
  40c048:	idiv   al
  40c04a:	repnz cmp DWORD PTR [ecx+esi*8-0x55],ebp
  40c04f:	adc    ecx,esp
  40c051:	mov    bl,0xc2
  40c053:	scas   al,BYTE PTR es:[edi]
  40c054:	jle    0x40c0bc
  40c056:	inc    ebp
  40c057:	arpl   WORD PTR ds:0xaeee8b31,si
  40c05d:	enter  0xfb7b,0xe4
  40c061:	stos   BYTE PTR es:[edi],al
  40c062:	stos   BYTE PTR es:[edi],al
  40c063:	xor    DWORD PTR [ecx+0x4f4a8fc],ebp
  40c069:	xor    esi,DWORD PTR [ebp+0x4b]
  40c06c:	(bad)  
  40c06d:	retf   
  40c06e:	cs call 0xbbf4e9a
  40c074:	stc    
  40c075:	xchg   edx,eax
  40c076:	pop    eax
  40c077:	push   0x11f5dbc7
  40c07c:	push   ecx
  40c07d:	pop    ds
  40c07e:	callw  0x74ab
  40c082:	outs   dx,DWORD PTR ds:[esi]
  40c083:	or     dh,bh
  40c085:	cdq    
  40c086:	ins    DWORD PTR es:[edi],dx
  40c087:	mov    al,0xc8
  40c089:	or     eax,0x9ca7f816
  40c08e:	jne    0x40c068
  40c090:	add    al,0xaa
  40c092:	add    eax,0xf27323c5
  40c097:	lock mov WORD PTR [edx-0x64],cs
  40c09b:	pop    ebp
  40c09c:	popw   es
  40c09e:	repnz jmp 0xe6d0:0x7e9ef02c
  40c0a6:	jp     0x40c02e
  40c0a8:	push   cs
  40c0a9:	ret    
  40c0aa:	mov    ds:0x984539be,al
  40c0af:	xchg   edi,eax
  40c0b0:	fnstsw WORD PTR [edx+eax*4+0x4c]
  40c0b4:	cmp    bl,BYTE PTR [edx+0x7e5f1384]
  40c0ba:	addr16 fwait
  40c0bc:	int3   
  40c0bd:	mov    ebp,0xabb2e501
  40c0c2:	mov    ds:0x32011faa,eax
  40c0c7:	jbe    0x40c10a
  40c0c9:	mov    BYTE PTR cs:[ebx],0x2c
  40c0cd:	in     eax,dx
  40c0ce:	adc    al,0x84
  40c0d0:	mov    bh,0x85
  40c0d2:	lahf   
  40c0d3:	adc    dh,bl
  40c0d5:	out    dx,al
  40c0d6:	repnz fmul st,st(2)
  40c0d9:	jge    0x40c0ab
  40c0db:	add    eax,0xb5f98b47
  40c0e0:	push   ds
  40c0e1:	mov    eax,0xbccb5bfb
  40c0e6:	pop    edx
  40c0e7:	scas   al,BYTE PTR es:[edi]
  40c0e8:	dec    edx
  40c0e9:	push   edi
  40c0ea:	xchg   ebp,eax
  40c0eb:	loope  0x40c12c
  40c0ed:	push   0xcdb50967
  40c0f2:	fdiv   QWORD PTR [ecx+edi*1]
  40c0f5:	mov    esi,0xb3ee97d
  40c0fa:	adc    DWORD PTR [edx+0x38],ebp
  40c0fd:	jecxz  0x40c0d8
  40c0ff:	xor    eax,0xe36242d5
  40c104:	jb     0x40c131
  40c106:	sbb    eax,0x163c7b16
  40c10b:	jge    0x40c121
  40c10d:	adc    eax,ebx
  40c10f:	jge    0x40c130
  40c111:	pushf  
  40c112:	mov    DWORD PTR [edx-0x42a76d86],edx
  40c118:	lds    edi,FWORD PTR [ebp+0x70fafe1e]
  40c11e:	popa   
  40c11f:	inc    esp
  40c120:	pop    esi
  40c121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c122:	add    DWORD PTR [edi+0x55],ecx
  40c125:	xchg   esp,eax
  40c126:	xchg   DWORD PTR es:[esi],edi
  40c129:	xchg   ebp,eax
  40c12a:	scas   al,BYTE PTR es:[edi]
  40c12b:	fst    st(2)
  40c12d:	(bad)  
  40c12e:	sar    DWORD PTR [ebp+edx*1+0x637f473f],0xcb
  40c136:	and    dh,BYTE PTR [ecx+0x70]
  40c139:	sub    DWORD PTR [ebx-0x3f6bbf37],edi
  40c13f:	pop    ecx
  40c140:	addr16 in al,0x98
  40c143:	in     al,0x34
  40c145:	in     al,dx
  40c146:	idiv   DWORD PTR [esi]
  40c148:	loop   0x40c10a
  40c14a:	inc    esp
  40c14b:	loopne 0x40c116
  40c14d:	and    ecx,DWORD PTR ds:0xac1c6adf
  40c153:	jnp    0x40c12b
  40c155:	fdivr  st,st(0)
  40c157:	push   esi
  40c158:	inc    ebx
  40c159:	into   
  40c15a:	gs jmp 0xb498edff
  40c160:	push   ss
  40c161:	arpl   WORD PTR [edi-0x3f4d4aad],sp
  40c167:	push   0x740a45d
  40c16c:	inc    ebx
  40c16d:	icebp  
  40c16e:	clc    
  40c16f:	sub    cl,dh
  40c171:	fwait
  40c172:	iret   
  40c173:	mov    edi,0x3fb69dec
  40c178:	jge    0x40c12f
  40c17a:	aas    
  40c17b:	dec    edx
  40c17c:	cmc    
  40c17d:	jle    0x40c1b1
  40c17f:	clc    
  40c180:	or     ecx,DWORD PTR [ecx+esi*1+0x14]
  40c184:	lods   eax,DWORD PTR ds:[esi]
  40c185:	mov    dl,BYTE PTR [eax-0x20]
  40c188:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c18a:	imul   BYTE PTR [edx]
  40c18c:	imul   ebp,edi,0xffffff81
  40c18f:	sbb    esi,DWORD PTR [edi+0x2ffc1f67]
  40c195:	stos   BYTE PTR es:[edi],al
  40c196:	mov    ch,0x42
  40c198:	cmp    DWORD PTR [ecx+edx*2],ebp
  40c19b:	mov    ch,BYTE PTR [edx+0x7c336cad]
  40c1a1:	out    0xbb,al
  40c1a3:	fucomi st,st(0)
  40c1a5:	pusha  
  40c1a6:	(bad)  
  40c1a7:	push   esi
  40c1a8:	cmp    cl,al
  40c1aa:	cdq    
  40c1ab:	adc    eax,0x799df4ef
  40c1b0:	inc    edi
  40c1b1:	push   0xffffff82
  40c1b3:	mov    dh,0x6c
  40c1b5:	xor    ebp,ebp
  40c1b7:	sub    eax,0x834e6fe9
  40c1bc:	add    al,0x80
  40c1be:	and    edi,eax
  40c1c0:	ins    BYTE PTR es:[edi],dx
  40c1c1:	lods   eax,DWORD PTR ds:[esi]
  40c1c2:	and    DWORD PTR [ebx+0x2d],esp
  40c1c5:	mov    cl,0x67
  40c1c7:	test   al,0x68
  40c1c9:	pop    ebp
  40c1ca:	ficomp DWORD PTR ds:0x3599121a
  40c1d0:	scas   al,BYTE PTR es:[edi]
  40c1d1:	fbstp  TBYTE PTR [esi-0x44]
  40c1d4:	ror    DWORD PTR [ebp-0x74],cl
  40c1d7:	or     esp,DWORD PTR [ebx+0x2f]
  40c1da:	test   DWORD PTR [ebx],esp
  40c1dc:	or     ebp,edx
  40c1de:	mov    ebp,0x4c9b8333
  40c1e3:	pop    eax
  40c1e4:	pushf  
  40c1e5:	ret    
  40c1e6:	scas   eax,DWORD PTR es:[edi]
  40c1e7:	fwait
  40c1e8:	bound  ecx,QWORD PTR [edi]
  40c1ea:	inc    edx
  40c1eb:	pop    ss
  40c1ec:	sar    DWORD PTR [ebx+ebp*8-0x5c],cl
  40c1f0:	push   edx
  40c1f1:	je     0x40c1cb
  40c1f3:	push   esp
  40c1f4:	mov    ds:0x46703304,al
  40c1f9:	and    bl,BYTE PTR [ecx+edx*2-0x38]
  40c1fd:	sub    al,0x82
  40c1ff:	fist   WORD PTR [esp+edi*8-0x5dad882d]
  40c206:	cdq    
  40c207:	xchg   ebx,eax
  40c208:	fdiv   QWORD PTR [ecx-0x1b]
  40c20b:	jmp    0x40c235
  40c20d:	sbb    al,BYTE PTR [ebx-0x4f]
  40c210:	clc    
  40c211:	(bad)  
  40c212:	int    0x13
  40c214:	cmp    BYTE PTR [ecx-0x5a],0x26
  40c218:	test   eax,0x241fe63b
  40c21d:	mov    eax,0x92439144
  40c222:	or     eax,esi
  40c224:	lahf   
  40c225:	call   0x5f89:0x618f636c
  40c22c:	ja     0x40c21d
  40c22e:	inc    esi
  40c22f:	jo     0x40c286
  40c231:	inc    ebp
  40c232:	cmp    dh,cl
  40c234:	sbb    cl,BYTE PTR [ebx-0x5e]
  40c237:	xchg   ecx,eax
  40c238:	jae    0x40c242
  40c23a:	mov    ds:0x8068faf,eax
  40c23f:	xchg   edi,eax
  40c240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c241:	add    eax,0x4834dcf5
  40c246:	je     0x40c24b
  40c248:	jmp    0x1f3d:0x522110aa
  40c24f:	pop    esp
  40c250:	in     al,0x3d
  40c252:	addr16 adc bh,ch
  40c255:	(bad)  
  40c256:	mov    ebp,0xfe9ec789
  40c25b:	out    0x79,eax
  40c25d:	xchg   ebp,eax
  40c25e:	push   ebp
  40c25f:	pop    edi
  40c260:	inc    ebp
  40c261:	fdivr  DWORD PTR ds:0x6af8bb47
  40c267:	popf   
  40c268:	dec    ecx
  40c269:	mov    bh,0xa6
  40c26b:	lea    ecx,[ebp+0x4d]
  40c26e:	add    al,al
  40c270:	sbb    al,ch
  40c272:	adc    BYTE PTR [esi+edx*8-0x4c],dl
  40c276:	mov    cl,0x93
  40c278:	add    eax,0xb00b8c74
  40c27d:	mov    ?,ebx
  40c27f:	jecxz  0x40c264
  40c281:	mov    edi,0x27124f75
  40c286:	xchg   edx,esp
  40c288:	and    ebx,esi
  40c28a:	jbe    0x40c2b1
  40c28c:	adc    al,0x61
  40c28e:	xchg   ebp,eax
  40c28f:	jp     0x40c2e8
  40c291:	stc    
  40c292:	iret   
  40c293:	call   0x399de2f
  40c298:	sbb    edx,DWORD PTR [edi-0x52b00b93]
  40c29e:	pop    ebp
  40c29f:	dec    eax
  40c2a0:	repnz cli 
  40c2a2:	popf   
  40c2a3:	repz out 0xbe,al
  40c2a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2a7:	mov    esp,0x179b58ac
  40c2ac:	lods   al,BYTE PTR ds:[esi]
  40c2ad:	jmp    0x40c278
  40c2af:	clc    
  40c2b0:	test   DWORD PTR [eax-0x53],edi
  40c2b3:	jmp    0x2258:0x44f66ec5
  40c2ba:	dec    edx
  40c2bb:	jnp    0x40c2b7
  40c2bd:	jno    0x40c304
  40c2bf:	mov    WORD PTR [eax],es
  40c2c1:	sbb    eax,0xca9bab2a
  40c2c6:	rcr    DWORD PTR [ebp-0x51],0xa7
  40c2ca:	jg     0x40c270
  40c2cc:	fsubp  st(3),st
  40c2ce:	fadd   DWORD PTR [eax]
  40c2d0:	cmp    al,BYTE PTR [ebx+edi*2]
  40c2d3:	stos   BYTE PTR es:[edi],al
  40c2d4:	outs   dx,BYTE PTR ds:[esi]
  40c2d5:	cwde   
  40c2d6:	jnp    0x40c33c
  40c2d8:	lahf   
  40c2d9:	inc    edi
  40c2da:	xor    DWORD PTR [ebp+0x53],edi
  40c2dd:	lahf   
  40c2de:	std    
  40c2df:	sbb    eax,0xe99a49bf
  40c2e4:	in     eax,dx
  40c2e5:	loop   0x40c2a7
  40c2e7:	mov    ah,0x24
  40c2e9:	mov    esi,gs
  40c2eb:	fmul   QWORD PTR [ecx]
  40c2ed:	fldenv [ebp-0x12cdade9]
  40c2f3:	ins    DWORD PTR es:[edi],dx
  40c2f4:	fild   DWORD PTR [eax]
  40c2f6:	or     BYTE PTR [ebx+0x13],bh
  40c2f9:	fcom   QWORD PTR [eax-0x3a2844b7]
  40c2ff:	sbb    eax,0x56f16ffa
  40c304:	imul   bp,bp,0xc9b0
  40c309:	mov    DWORD PTR [ecx+edi*1],eax
  40c30c:	dec    edi
  40c30d:	enter  0xd209,0x68
  40c311:	aad    0x7c
  40c313:	inc    edi
  40c314:	pop    ebp
  40c315:	cdq    
  40c316:	inc    ecx
  40c317:	sub    al,0x8a
  40c319:	popa   
  40c31a:	test   eax,0x72de3f77
  40c31f:	fwait
  40c320:	push   ebx
  40c321:	pop    edx
  40c322:	cmp    BYTE PTR [eax+0xc4d4d2a],dl
  40c328:	push   ebx
  40c329:	das    
  40c32a:	bound  ebp,QWORD PTR [ebp-0x78]
  40c32d:	shl    BYTE PTR [esi-0x33a0c1a1],cl
  40c333:	scas   eax,DWORD PTR es:[edi]
  40c334:	dec    ebx
  40c335:	mov    bl,0x3f
  40c337:	xchg   edx,eax
  40c338:	adc    eax,0x201d9b79
  40c33d:	jl     0x40c364
  40c33f:	sbb    BYTE PTR [eax-0x34631ff7],bh
  40c345:	(bad)  
  40c346:	in     al,0xe6
  40c348:	cmp    dl,bl
  40c34a:	push   es
  40c34b:	hlt    
  40c34c:	(bad)  
  40c34d:	ficom  WORD PTR [ecx-0x61650309]
  40c353:	dec    esi
  40c354:	sub    ah,al
  40c356:	pop    edi
  40c357:	push   esi
  40c358:	xchg   edi,eax
  40c359:	cmp    al,0xbf
  40c35b:	pop    esi
  40c35c:	stc    
  40c35d:	icebp  
  40c35e:	sub    DWORD PTR [edi-0x5867ddca],ebx
  40c364:	dec    esp
  40c365:	jbe    0x40c3e3
  40c367:	pusha  
  40c368:	rcl    BYTE PTR [ecx+0x7c411533],1
  40c36e:	or     DWORD PTR [edx-0x3e38f8c7],0xda5fde89
  40c378:	push   cs
  40c379:	dec    ecx
  40c37a:	out    dx,eax
  40c37b:	xor    eax,0x59e896ea
  40c380:	loope  0x40c378
  40c382:	push   ebp
  40c383:	mov    BYTE PTR [eax+0x71],al
  40c386:	and    ecx,DWORD PTR [edi+0x68b108e]
  40c38c:	jl     0x40c311
  40c38e:	push   ebx
  40c38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c390:	cmp    eax,0xb7cacf3c
  40c395:	popa   
  40c396:	push   ss
  40c397:	xchg   esi,ebp
  40c399:	pop    edx
  40c39a:	xor    DWORD PTR [edx+ebp*8+0x30],eax
  40c39e:	or     al,0x4a
  40c3a0:	inc    ebx
  40c3a1:	and    dh,ah
  40c3a3:	sub    eax,0x5a1ba6e8
  40c3a8:	jno    0x40c37d
  40c3aa:	and    DWORD PTR [edx-0x69],ebx
  40c3ad:	imul   edi,DWORD PTR [ecx+0x6e],0x62
  40c3b1:	repz mov ecx,DWORD PTR [eax-0x2a25cf35]
  40c3b8:	dec    esi
  40c3b9:	clc    
  40c3ba:	dec    edx
  40c3bb:	nop
  40c3bc:	cmp    DWORD PTR [edx-0x24578c81],0x37
  40c3c3:	inc    esp
  40c3c4:	retf   
  40c3c5:	fcomp  DWORD PTR [edx+0x77af75c9]
  40c3cb:	dec    esp
  40c3cc:	adc    DWORD PTR ds:0xc8b69d9c,ebx
  40c3d2:	adc    dl,BYTE PTR [esi]
  40c3d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3d5:	mov    ebp,0xac788078
  40c3da:	sar    DWORD PTR [edx],cl
  40c3dc:	stc    
  40c3dd:	pop    ebp
  40c3de:	js     0x40c453
  40c3e0:	shr    BYTE PTR [edi],cl
  40c3e2:	adc    ah,BYTE PTR [esi-0xb]
  40c3e5:	xor    al,0xa0
  40c3e7:	js     0x40c40d
  40c3e9:	add    eax,0xcd93d5cb
  40c3ee:	loopne 0x40c39b
  40c3f0:	cmp    BYTE PTR [ecx+0xde55042],al
  40c3f6:	(bad)  [edx]
  40c3f8:	loope  0x40c406
  40c3fa:	cmp    dl,cl
  40c3fc:	mov    al,0x18
  40c3fe:	dec    esi
  40c3ff:	ja     0x40c39c
  40c401:	mov    fs,WORD PTR [eax+0x4a9c32f]
  40c407:	mov    eax,ds:0xeba8b610
  40c40c:	and    BYTE PTR [edi],bl
  40c40e:	inc    ebp
  40c40f:	sub    edi,DWORD PTR [edx+0x5e5ef02]
  40c415:	pop    ebp
  40c416:	cmp    dl,BYTE PTR [edi-0x6c]
  40c419:	adc    BYTE PTR [esi],bl
  40c41b:	add    al,0x98
  40c41d:	fcom   QWORD PTR cs:[edi-0x64]
  40c421:	popf   
  40c422:	cdq    
  40c423:	dec    bh
  40c425:	push   0xa5ce37bb
  40c42a:	ret    0x5d25
  40c42d:	xchg   edx,eax
  40c42e:	and    bl,BYTE PTR [edx-0x7a168844]
  40c434:	inc    ebx
  40c435:	scas   eax,DWORD PTR es:[edi]
  40c436:	in     eax,dx
  40c437:	repnz cmp dh,dh
  40c43a:	dec    edi
  40c43b:	mov    BYTE PTR [ebp-0x5a],dl
  40c43e:	xchg   esp,eax
  40c43f:	ja     0x40c420
  40c441:	jb     0x40c45a
  40c443:	or     DWORD PTR [esi+0x6],eax
  40c446:	imul   ebp,DWORD PTR [edx+esi*2-0x22922910],0xfa07a17
  40c451:	aas    
  40c452:	push   fs
  40c454:	mov    esp,0x40debf5b
  40c459:	add    eax,0xfca24b66
  40c45e:	mov    al,ds:0x41cb4338
  40c463:	add    ch,BYTE PTR [edx+0xb]
  40c466:	push   ebp
  40c467:	out    0x3f,al
  40c469:	imul   edi,DWORD PTR [ebx-0x62],0x780ae27c
  40c470:	in     al,0x17
  40c472:	inc    edi
  40c473:	xchg   ecx,eax
  40c474:	mov    edx,0x23992806
  40c479:	adc    ebp,DWORD PTR [ebx+0x12bddf1d]
  40c47f:	frstor [ebx+0x55a9d6d7]
  40c485:	int    0xbd
  40c487:	sub    eax,0xbf10c07d
  40c48c:	add    eax,DWORD PTR [ecx+eax*4+0x52a0d48a]
  40c493:	dec    BYTE PTR [eax+0x7e]
  40c496:	xchg   edi,eax
  40c497:	lds    edi,FWORD PTR [ebx+0x3f]
  40c49a:	sub    esp,edi
  40c49c:	loope  0x40c43f
  40c49e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c49f:	cmp    ebx,DWORD PTR [ebp-0x50]
  40c4a2:	mov    dl,0x38
  40c4a4:	push   esi
  40c4a5:	jp     0x40c450
  40c4a7:	sbb    cl,dh
  40c4a9:	aad    0x2e
  40c4ab:	and    cl,dl
  40c4ad:	out    0x72,eax
  40c4af:	sti    
  40c4b0:	aas    
  40c4b1:	iret   
  40c4b2:	mov    ecx,edi
  40c4b4:	xor    ah,cl
  40c4b6:	sbb    al,0x37
  40c4b8:	pop    ecx
  40c4b9:	in     eax,0xb6
  40c4bb:	xchg   esi,eax
  40c4bc:	xchg   ebp,eax
  40c4bd:	xchg   ebx,eax
  40c4be:	xchg   DWORD PTR [edx-0xd],edx
  40c4c1:	call   0x7566062b
  40c4c6:	jb     0x40c4ce
  40c4c8:	add    al,bh
  40c4ca:	ins    BYTE PTR es:[edi],dx
  40c4cb:	in     eax,0x68
  40c4cd:	jne    0x40c534
  40c4cf:	xchg   esp,eax
  40c4d0:	js     0x40c45a
  40c4d2:	icebp  
  40c4d3:	pusha  
  40c4d4:	cmp    esp,DWORD PTR [edi+esi*4-0x54]
  40c4d8:	stos   BYTE PTR es:[edi],al
  40c4d9:	outs   dx,DWORD PTR ds:[esi]
  40c4da:	jne    0x40c481
  40c4dc:	jp     0x40c49d
  40c4de:	xchg   edi,eax
  40c4df:	sub    DWORD PTR [eax-0x7b],0xc1a181be
  40c4e6:	push   ds
  40c4e7:	sub    BYTE PTR [ebx],ah
  40c4e9:	cwde   
  40c4ea:	leave  
  40c4eb:	pop    ss
  40c4ec:	mov    esi,0x90cc6462
  40c4f1:	popf   
  40c4f2:	mov    ds,WORD PTR [edx-0x47]
  40c4f5:	pop    edx
  40c4f6:	dec    ebp
  40c4f7:	pop    ebx
  40c4f8:	leave  
  40c4f9:	(bad)  
  40c4fa:	inc    esi
  40c4fb:	gs es xchg ecx,ecx
  40c4ff:	xchg   esp,eax
  40c500:	and    DWORD PTR ds:0x51021f1a,ebx
  40c506:	es ret 
  40c508:	jb     0x40c48f
  40c50a:	mov    ds,WORD PTR [ebx]
  40c50c:	jne    0x40c51c
  40c50e:	ins    BYTE PTR es:[edi],dx
  40c50f:	call   0x3755:0x3f2b95ae
  40c516:	shl    DWORD PTR [ebx],1
  40c518:	jecxz  0x40c4ef
  40c51a:	push   ebx
  40c51b:	and    BYTE PTR [esp+edx*1+0x45],bh
  40c51f:	es pop gs
  40c522:	(bad)  
  40c523:	sub    bl,BYTE PTR [ecx+0x2bb16e50]
  40c529:	push   cs
  40c52a:	mov    eax,ds:0xa1b76459
  40c52f:	outs   dx,BYTE PTR ds:[esi]
  40c530:	mov    ebp,0xc9ebd378
  40c535:	div    DWORD PTR [ebx]
  40c537:	jne    0x40c4c9
  40c539:	lods   al,BYTE PTR ds:[esi]
  40c53a:	xor    esp,esi
  40c53c:	jne    0x40c502
  40c53e:	jmp    0x40c4c3
  40c540:	outs   dx,BYTE PTR ds:[esi]
  40c541:	ds push esi
  40c543:	mov    bh,BYTE PTR [ecx]
  40c545:	inc    edi
  40c546:	cmp    DWORD PTR [esi],ebp
  40c548:	sub    dh,dh
  40c54a:	or     dl,dl
  40c54c:	push   es
  40c54d:	ja     0x40c4d6
  40c54f:	push   eax
  40c550:	or     esi,DWORD PTR [ecx+0x2df4e96c]
  40c556:	out    dx,al
  40c557:	retf   0xe608
  40c55a:	daa    
  40c55b:	xchg   edi,eax
  40c55c:	out    0xeb,eax
  40c55e:	pop    ebx
  40c55f:	jns    0x40c5de
  40c561:	or     BYTE PTR [ebp+0x73],dh
  40c564:	mov    bh,0x4b
  40c566:	rol    al,0x5e
  40c569:	sub    eax,0xbfae6b15
  40c56e:	(bad)  
  40c56f:	imul   edx,edi,0xffffffb5
  40c572:	test   al,0x89
  40c574:	push   ebx
  40c575:	jecxz  0x40c5bc
  40c577:	pop    ebx
  40c578:	jmp    0x63e0a6b7
  40c57d:	inc    edi
  40c57e:	add    DWORD PTR [edi+esi*2],edi
  40c581:	cmp    eax,0x9e68b222
  40c586:	stos   DWORD PTR es:[edi],eax
  40c587:	fnstcw WORD PTR [esi+0x60a269a3]
  40c58d:	mov    ecx,DWORD PTR [ebp-0x13]
  40c590:	mov    al,ds:0x72b1ebc5
  40c595:	(bad)  
  40c596:	clc    
  40c597:	inc    esp
  40c598:	popa   
  40c599:	cld    
  40c59a:	daa    
  40c59b:	or     al,0x5d
  40c59d:	or     eax,0x4ae45a9a
  40c5a2:	outs   dx,BYTE PTR ds:[esi]
  40c5a3:	retf   0x50d6
  40c5a6:	push   eax
  40c5a8:	sahf   
  40c5a9:	add    cl,BYTE PTR [ebx+0x68eedd75]
  40c5af:	adc    al,0x96
  40c5b1:	ins    DWORD PTR es:[edi],dx
  40c5b2:	cmp    DWORD PTR [edi-0x39],esi
  40c5b5:	cmp    bl,dh
  40c5b7:	(bad)  
  40c5b9:	test   eax,0x3531eeac
  40c5be:	xchg   edx,eax
  40c5bf:	test   al,0x89
  40c5c1:	rcl    BYTE PTR [esi+0x5b12994d],0xaf
  40c5c8:	sbb    eax,0xdf04b29a
  40c5cd:	repnz sbb DWORD PTR [eax+0x58],ecx
  40c5d1:	lods   al,BYTE PTR ds:[esi]
  40c5d2:	call   0x1201e2ed
  40c5d7:	lods   eax,DWORD PTR ds:[esi]
  40c5d8:	neg    BYTE PTR [ebx+0x46]
  40c5db:	loope  0x40c57d
  40c5dd:	pop    ecx
  40c5de:	hlt    
  40c5df:	jmp    0x4e68:0x9f20aa9e
  40c5e6:	sub    ch,BYTE PTR [edi-0x74]
  40c5e9:	jmp    0x40c572
  40c5eb:	in     eax,dx
  40c5ec:	xlat   BYTE PTR ds:[ebx]
  40c5ed:	mov    eax,ds:0x277ca6f5
  40c5f2:	out    0xee,al
  40c5f4:	cmp    al,0x47
  40c5f6:	jae    0x40c5ee
  40c5f8:	pop    ss
  40c5f9:	fnsave [edx+0x643127e8]
  40c5ff:	call   0x8341:0x6ec54935
  40c606:	pusha  
  40c607:	sbb    DWORD PTR [eax-0x3b5323f4],edx
  40c60d:	adc    ah,bl
  40c60f:	lea    edx,[esi]
  40c611:	js     0x40c601
  40c613:	jmp    0x869cf534
  40c618:	mov    ds:0xc5383767,eax
  40c61d:	add    al,BYTE PTR ds:0x744482e4
  40c623:	lahf   
  40c624:	mov    ds:0x77964432,al
  40c629:	push   esi
  40c62a:	not    BYTE PTR [edi+ecx*4-0x7a]
  40c62e:	das    
  40c62f:	in     al,dx
  40c630:	lock mov ch,0xaf
  40c633:	adc    cl,BYTE PTR [ecx-0x1]
  40c636:	xchg   edx,eax
  40c637:	std    
  40c638:	enter  0xe6e3,0x3e
  40c63c:	pop    ss
  40c63d:	hlt    
  40c63e:	xor    BYTE PTR [eax+ecx*4-0x69],ch
  40c642:	push   cs
  40c643:	adc    eax,DWORD PTR [edx]
  40c645:	popf   
  40c646:	shl    BYTE PTR [ebx],cl
  40c648:	inc    esp
  40c649:	push   ds
  40c64a:	sbb    al,BYTE PTR [edx+0x43]
  40c64d:	xchg   BYTE PTR [ebx+0x3baa7f40],ch
  40c653:	or     ch,BYTE PTR [edi]
  40c655:	mov    WORD PTR [ebp-0x7677c14b],ss
  40c65b:	popf   
  40c65c:	push   0x94e2f69f
  40c661:	adc    al,0xeb
  40c663:	fnstenv [eax+ebp*2]
  40c666:	fisttp DWORD PTR [ebx+0x67]
  40c669:	mov    ch,0x91
  40c66b:	inc    eax
  40c66c:	aam    0xc3
  40c66e:	int    0x7a
  40c670:	nop
  40c671:	ret    
  40c672:	popf   
  40c673:	int3   
  40c674:	jmp    0x40c6e8
  40c676:	xchg   DWORD PTR [edi],edi
  40c678:	repnz xchg esp,eax
  40c67a:	push   eax
  40c67b:	push   ss
  40c67c:	stc    
  40c67d:	cwde   
  40c67e:	mov    ebx,DWORD PTR [edx]
  40c680:	sbb    al,0xde
  40c682:	mov    edi,0x8d681f6c
  40c687:	aaa    
  40c688:	and    BYTE PTR ds:0x40036329,dl
  40c68e:	xor    DWORD PTR [eax],esi
  40c690:	inc    edx
  40c691:	cwde   
  40c692:	fimul  DWORD PTR [eax+0x3b7d7c58]
  40c698:	sbb    ebx,DWORD PTR [eax+0x1]
  40c69b:	gs adc ch,bl
  40c69e:	or     edi,esi
  40c6a0:	pop    ebp
  40c6a1:	inc    ebx
  40c6a2:	mov    bl,0xf
  40c6a4:	mov    ds:0x54e6e,eax
  40c6a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6ab:	ins    BYTE PTR es:[edi],dx
  40c6ac:	and    eax,0x3837281d
  40c6b1:	cli    
  40c6b2:	ja     0x40c723
  40c6b4:	fstp   QWORD PTR [eax+0x33]
  40c6b7:	cdq    
  40c6b8:	sbb    ecx,DWORD PTR [ecx-0xd]
  40c6bb:	shl    BYTE PTR [esi+0x7ee24620],cl
  40c6c1:	stos   BYTE PTR es:[edi],al
  40c6c2:	(bad)  
  40c6c3:	fstp   TBYTE PTR ds:0x58c3238a
  40c6c9:	pusha  
  40c6ca:	inc    esi
  40c6cb:	fstp   st(6)
  40c6cd:	fistp  QWORD PTR [ebp+0x47680f50]
  40c6d3:	les    esp,FWORD PTR [ecx+0x7dd52bf4]
  40c6d9:	adc    eax,0x11658c5c
  40c6de:	lods   al,BYTE PTR ds:[esi]
  40c6df:	jb     0x40c6b3
  40c6e1:	jp     0x40c66f
  40c6e3:	pop    edi
  40c6e4:	hlt    
  40c6e5:	ds daa 
  40c6e7:	cmc    
  40c6e8:	mov    bh,0xcd
  40c6ea:	clc    
  40c6eb:	adc    al,0x7f
  40c6ed:	inc    esp
  40c6ee:	mov    bl,0x9f
  40c6f0:	push   ss
  40c6f1:	ins    DWORD PTR es:[edi],dx
  40c6f2:	pop    ss
  40c6f3:	rcr    eax,cl
  40c6f5:	xchg   edi,eax
  40c6f6:	ja     0x40c708
  40c6f8:	xor    edx,esi
  40c6fa:	cli    
  40c6fb:	inc    ecx
  40c6fc:	std    
  40c6fd:	(bad)
  40c701:	out    0x57,eax
  40c703:	(bad)  [ebp*4+0x2c1e47c1]
  40c70a:	cld    
  40c70b:	call   FWORD PTR [ecx]
  40c70d:	xor    al,0x10
  40c70f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c710:	push   0xffffffe4
  40c712:	ret    
  40c713:	xor    BYTE PTR [ecx],cl
  40c715:	mov    ch,0x7
  40c717:	cmc    
  40c718:	mov    ebx,0xf546cf40
  40c71d:	stos   BYTE PTR es:[edi],al
  40c71e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c71f:	dec    edi
  40c720:	rcr    ah,cl
  40c722:	into   
  40c723:	jle    0x40c795
  40c725:	pop    ebx
  40c726:	cdq    
  40c727:	test   eax,0x1b6ea099
  40c72c:	or     DWORD PTR [eax-0x3c],edx
  40c72f:	push   0x65
  40c731:	sub    al,al
  40c733:	(bad)  
  40c734:	aaa    
  40c735:	inc    eax
  40c736:	mov    bh,0xc9
  40c738:	pop    esp
  40c739:	add    bl,BYTE PTR [eax-0x13]
  40c73c:	or     al,0xe2
  40c73e:	fistp  QWORD PTR [ebx-0x35ba8439]
  40c744:	je     0x40c74c
  40c746:	or     bh,BYTE PTR [eax*1-0x451d41cd]
  40c74d:	mov    ch,0x5a
  40c74f:	add    edi,eax
  40c751:	ficomp WORD PTR [edi-0x127aaa84]
  40c757:	in     eax,dx
  40c758:	ficomp WORD PTR [esp+edx*1]
  40c75b:	pop    ss
  40c75c:	jp     0x40c741
  40c75e:	mov    bh,0xc7
  40c760:	out    dx,eax
  40c761:	gs or  al,0x10
  40c764:	lock mov dl,0x7e
  40c767:	stos   BYTE PTR es:[edi],al
  40c768:	test   DWORD PTR [ebx+0x12],esi
  40c76b:	das    
  40c76c:	jge    0x40c790
  40c76e:	mov    cl,0x4
  40c770:	mov    DWORD PTR ds:0xcad4f354,edi
  40c776:	or     eax,0x276b9641
  40c77b:	dec    ecx
  40c77c:	aam    0xd1
  40c77e:	push   ebp
  40c77f:	iret   
  40c780:	daa    
  40c781:	repz mov dl,0x95
  40c784:	dec    esp
  40c785:	or     BYTE PTR [edi+0x2a9ea539],dh
  40c78b:	cs mov esp,0xb207e381
  40c791:	in     eax,0xd1
  40c793:	or     al,BYTE PTR [ebp+0x7e8f1175]
  40c799:	mov    cl,0x15
  40c79b:	ror    DWORD PTR [edi],0x2c
  40c79e:	xor    DWORD PTR [eax],0x8b6b22cb
  40c7a4:	iret   
  40c7a5:	mov    bl,0xbf
  40c7a7:	ds fwait
  40c7a9:	adc    dh,dl
  40c7ab:	mov    edi,0x68be7c7b
  40c7b1:	jbe    0x40c78f
  40c7b3:	cmp    eax,0x426eb9f1
  40c7b8:	mov    bl,0xc7
  40c7ba:	or     BYTE PTR [edi-0x27],cl
  40c7bd:	pop    edi
  40c7be:	xchg   DWORD PTR [ebx+0x637d59be],ebx
  40c7c4:	mov    ds,WORD PTR [ecx+0x55930f26]
  40c7ca:	push   ebx
  40c7cb:	mov    al,0x33
  40c7cd:	cmp    bh,ah
  40c7cf:	push   ecx
  40c7d0:	test   DWORD PTR [ecx+0x42],ebx
  40c7d3:	push   es
  40c7d4:	lahf   
  40c7d5:	dec    ebx
  40c7d6:	adc    DWORD PTR [edi-0x7e],0xd536dd0a
  40c7dd:	icebp  
  40c7de:	hlt    
  40c7df:	dec    edi
  40c7e0:	adc    ah,BYTE PTR [edi+0xb2bfa9d]
  40c7e6:	(bad)  
  40c7e7:	mov    ebp,0x720fdc80
  40c7ec:	cmp    eax,0x5efb359a
  40c7f1:	rcl    DWORD PTR [eax-0x28cae0d],0x3c
  40c7f8:	and    al,0xc
  40c7fa:	ins    DWORD PTR es:[edi],dx
  40c7fb:	cwde   
  40c7fc:	sbb    DWORD PTR [ebp-0x45],eax
  40c7ff:	test   BYTE PTR [ebp+0x2cd4c1b5],ah
  40c805:	xchg   ebp,eax
  40c806:	sub    eax,0xf4d0664c
  40c80b:	adc    eax,DWORD PTR [eax-0x1e04ff54]
  40c811:	fidivr DWORD PTR [ecx+0x4e]
  40c814:	jmp    0x40c861
  40c816:	leave  
  40c817:	inc    edx
  40c818:	xor    ecx,DWORD PTR [edx+0x47]
  40c81b:	retf   
  40c81c:	inc    edx
  40c81d:	cmp    al,0xa4
  40c81f:	pushf  
  40c820:	sub    edx,ebp
  40c822:	stos   DWORD PTR es:[edi],eax
  40c823:	shr    dh,0x51
  40c826:	test   DWORD PTR [ebx+0x9],ebp
  40c829:	popf   
  40c82a:	neg    DWORD PTR ss:0xeb87dcbe
  40c831:	sbb    bh,cl
  40c833:	mov    al,ds:0x812789de
  40c838:	iret   
  40c839:	inc    edi
  40c83a:	push   ebx
  40c83b:	push   es
  40c83c:	mov    edx,0xfe4d4291
  40c841:	or     eax,0x53bdabcb
  40c846:	stos   BYTE PTR es:[edi],al
  40c847:	inc    DWORD PTR [eax-0x378b1bba]
  40c84d:	dec    ebx
  40c84e:	sub    ecx,DWORD PTR [ebx-0x33d50920]
  40c854:	test   ebx,ecx
  40c856:	mov    ds:0x6566d097,eax
  40c85b:	fimul  WORD PTR [edi]
  40c85d:	imul   ebp,edi,0x69f620a5
  40c863:	mov    al,0xc2
  40c865:	mov    bh,0x1f
  40c867:	aad    0x62
  40c869:	xor    ch,BYTE PTR [esi+0x7fa0eb78]
  40c86f:	push   es
  40c870:	push   0xffffffd4
  40c872:	mov    edx,0x31d54b1f
  40c877:	adc    dh,BYTE PTR [ebx]
  40c879:	out    0x87,al
  40c87b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c87c:	stc    
  40c87d:	shl    BYTE PTR [edi+ebx*8],cl
  40c880:	push   es
  40c881:	xchg   edx,eax
  40c882:	les    ecx,FWORD PTR [esi]
  40c884:	arpl   WORD PTR [ebp+eiz*2+0x178e2b06],di
  40c88b:	push   0x8205e8fd
  40c890:	fsub   QWORD PTR [esi+0x2a669572]
  40c896:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c898:	mov    bp,0x50e6
  40c89c:	cmp    eax,0x9b5d0a47
  40c8a1:	test   al,dl
  40c8a3:	(bad)  
  40c8a4:	outs   dx,DWORD PTR ds:[esi]
  40c8a5:	outs   dx,BYTE PTR ds:[esi]
  40c8a6:	mov    DWORD PTR [esi-0x3c],esp
  40c8a9:	push   ebp
  40c8aa:	stos   BYTE PTR es:[edi],al
  40c8ab:	inc    esp
  40c8ac:	fdiv   QWORD PTR [edx+0x3b]
  40c8af:	xor    BYTE PTR [eax],bh
  40c8b1:	loope  0x40c905
  40c8b3:	xor    ah,BYTE PTR [eax+ecx*1+0x3c]
  40c8b7:	mov    al,ds:0xee0b83b9
  40c8bc:	push   es
  40c8bd:	pop    es
  40c8be:	mov    al,0xab
  40c8c0:	xchg   edi,eax
  40c8c1:	cs xchg ebp,eax
  40c8c3:	test   eax,0x90b86d6
  40c8c8:	adc    eax,0x4c1a6239
  40c8cd:	xchg   edi,eax
  40c8ce:	(bad)  
  40c8cf:	sub    ch,BYTE PTR [esi+ebp*1-0x59e5cd5b]
  40c8d6:	sbb    ebx,DWORD PTR [ebx-0x6a]
  40c8d9:	pop    esp
  40c8da:	gs xchg edi,eax
  40c8dc:	ret    0xe29e
  40c8df:	mov    cl,0x7c
  40c8e1:	fdiv   DWORD PTR [ecx]
  40c8e3:	sbb    BYTE PTR [edi],bh
  40c8e5:	cmp    BYTE PTR [edi],0x33
  40c8e8:	sub    ah,dh
  40c8ea:	sub    al,0xb2
  40c8ec:	dec    ecx
  40c8ed:	scas   eax,DWORD PTR es:[edi]
  40c8ee:	cmp    al,0x51
  40c8f0:	xchg   edx,eax
  40c8f1:	loopne 0x40c8d2
  40c8f3:	lea    edi,ds:[edx]
  40c8f6:	cs das 
  40c8f8:	dec    edx
  40c8f9:	nop
  40c8fa:	fstp   QWORD PTR [eax]
  40c8fc:	sub    al,0xda
  40c8fe:	btc    DWORD PTR ds:0x48292bc6,ecx
  40c905:	mov    WORD PTR [edx+eax*2-0x45],?
  40c909:	shl    dl,1
  40c90b:	scas   eax,DWORD PTR es:[edi]
  40c90c:	mov    eax,ds:0xc8460d48
  40c911:	inc    ebp
  40c912:	pop    ebx
  40c913:	or     al,0xe4
  40c915:	leave  
  40c916:	push   0xc8185946
  40c91b:	stc    
  40c91c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c91d:	stos   BYTE PTR es:[edi],al
  40c91e:	dec    ecx
  40c91f:	inc    esp
  40c920:	push   0xead084b6
  40c925:	sub    eax,0xc69fb78b
  40c92a:	jmp    0x353c:0x3a503f4
  40c931:	or     ebx,DWORD PTR [eax+edx*4-0x66]
  40c935:	dec    edx
  40c936:	and    DWORD PTR [edi-0x1bb50f4f],esi
  40c93c:	dec    ebx
  40c93d:	push   ebp
  40c93e:	cdq    
  40c93f:	xchg   ebp,eax
  40c940:	(bad)  [ecx]
  40c942:	sbb    ecx,DWORD PTR [edx+0x5b23cb15]
  40c948:	(bad)  
  40c949:	push   cs
  40c94a:	mov    esi,0xd6d68665
  40c94f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c950:	jmp    0x23f9:0x5c5fc719
  40c957:	or     DWORD PTR [edx],0x8c2e26b7
  40c95d:	(bad)  [ebp-0x65d84d93]
  40c963:	mov    ecx,0x4651d9b7
  40c968:	(bad)  
  40c969:	call   0xf9189dd
  40c96e:	mov    ds:0x1a31d8a0,eax
  40c973:	mov    dl,0xa6
  40c975:	pop    eax
  40c976:	dec    eax
  40c977:	aad    0xee
  40c979:	out    dx,eax
  40c97a:	push   0xceb82d95
  40c97f:	xor    eax,edi
  40c981:	stc    
  40c982:	jb     0x40c97d
  40c984:	jp     0x40c9c1
  40c986:	jne    0x40c9d4
  40c988:	nop
  40c989:	push   esp
  40c98a:	pop    eax
  40c98b:	hlt    
  40c98c:	enter  0xcc3,0xe1
  40c990:	ret    
  40c991:	(bad)  
  40c992:	push   cs
  40c993:	leave  
  40c994:	xchg   ebx,eax
  40c995:	sub    eax,0xdd4cc981
  40c99a:	jp     0x40c974
  40c99c:	lods   al,BYTE PTR ds:[esi]
  40c99d:	adc    eax,0xf3afc1bc
  40c9a2:	call   0x78fa5a1b
  40c9a7:	dec    edi
  40c9a8:	and    DWORD PTR [eax+0x26],eax
  40c9ab:	cmp    eax,0x9e11c72c
  40c9b0:	aaa    
  40c9b1:	int    0x8d
  40c9b3:	jmp    0x100bb494
  40c9b8:	hlt    
  40c9b9:	sbb    al,0xeb
  40c9bb:	mov    ds:0x24c02509,eax
  40c9c0:	push   ecx
  40c9c1:	mov    ebp,DWORD PTR [ecx+0x2830c9b9]
  40c9c7:	stos   DWORD PTR es:[edi],eax
  40c9c8:	scas   al,BYTE PTR es:[edi]
  40c9c9:	into   
  40c9ca:	cld    
  40c9cb:	xor    DWORD PTR [ebp+0x5c142945],eax
  40c9d1:	dec    esp
  40c9d2:	cs or  al,0xfb
  40c9d5:	ss cs (bad) 
  40c9d8:	iret   
  40c9d9:	xchg   edi,eax
  40c9da:	call   0x9ad34e3e
  40c9df:	in     eax,dx
  40c9e0:	push   ecx
  40c9e1:	ror    DWORD PTR [ebp-0x2b],1
  40c9e4:	add    ah,BYTE PTR [ebp-0x4881fc28]
  40c9ea:	into   
  40c9eb:	popa   
  40c9ec:	fist   DWORD PTR [edi+0x69]
  40c9ef:	lahf   
  40c9f0:	ror    BYTE PTR [esi-0x2fc46d54],1
  40c9f6:	or     ah,BYTE PTR [eax-0x8]
  40c9f9:	cmp    bl,ah
  40c9fb:	xor    BYTE PTR [edi],al
  40c9fd:	ins    BYTE PTR es:[edi],dx
  40c9fe:	jmp    0xf62f:0x1e5542ad
  40ca05:	mov    eax,0x3eb11f44
  40ca0a:	leave  
  40ca0b:	dec    ecx
  40ca0c:	scas   al,BYTE PTR es:[edi]
  40ca0d:	imul   ebx,DWORD PTR [ecx+edx*1-0x2717715a],0xffffff83
  40ca15:	mov    esi,0xbca51962
  40ca1a:	jg     0x40ca76
  40ca1c:	mov    eax,ds:0xe3e56ccc
  40ca21:	gs sbb ebx,edx
  40ca24:	scas   al,BYTE PTR es:[edi]
  40ca25:	fs pop edx
  40ca27:	scas   al,BYTE PTR es:[edi]
  40ca28:	sar    DWORD PTR [edi],1
  40ca2a:	pop    edx
  40ca2b:	pop    eax
  40ca2c:	rol    BYTE PTR ds:0x71f77c59,1
  40ca32:	or     al,0x21
  40ca34:	dec    ebx
  40ca35:	std    
  40ca36:	mov    esi,gs
  40ca38:	sbb    BYTE PTR [ebx],ah
  40ca3a:	push   ebx
  40ca3b:	jecxz  0x40ca5c
  40ca3d:	xchg   DWORD PTR [eax+0x4ee63d61],esi
  40ca43:	pop    eax
  40ca44:	outs   dx,DWORD PTR ds:[esi]
  40ca45:	xlat   BYTE PTR ds:[ebx]
  40ca46:	js     0x40ca92
  40ca48:	fwait
  40ca49:	das    
  40ca4a:	sub    al,0x1e
  40ca4c:	fbstp  TBYTE PTR [eax-0x73]
  40ca4f:	jp     0x40cac5
  40ca51:	pop    ecx
  40ca52:	(bad)  
  40ca53:	in     eax,dx
  40ca54:	lods   al,BYTE PTR ds:[esi]
  40ca55:	jmp    0x869a:0x91751f25
  40ca5c:	or     ch,dl
  40ca5e:	add    ebp,ebp
  40ca60:	push   esi
  40ca61:	and    al,0xf0
  40ca63:	nop
  40ca64:	clc    
  40ca65:	push   edx
  40ca66:	cmp    al,0x9
  40ca68:	fisub  WORD PTR [edi]
  40ca6a:	inc    esi
  40ca6b:	shr    BYTE PTR [edx+0x2bfdbfd5],0x23
  40ca72:	scas   eax,DWORD PTR es:[edi]
  40ca73:	push   ss
  40ca74:	dec    eax
  40ca75:	or     bl,dh
  40ca77:	outs   dx,BYTE PTR ds:[esi]
  40ca78:	jne    0x40ca13
  40ca7a:	out    0xbd,al
  40ca7c:	mov    dh,BYTE PTR [edx]
  40ca7e:	inc    edx
  40ca7f:	pop    ebp
  40ca80:	pop    ebp
  40ca81:	push   eax
  40ca82:	mov    eax,ds:0x626aa36b
  40ca87:	and    DWORD PTR [ecx],esp
  40ca89:	call   0xe57b:0x927a3941
  40ca90:	lahf   
  40ca91:	xchg   esi,eax
  40ca92:	loope  0x40caf1
  40ca94:	inc    esi
  40ca95:	cmp    eax,0x8ddf8bf4
  40ca9a:	pop    edx
  40ca9b:	xor    al,0xa
  40ca9d:	ret    0xbe4c
  40caa0:	jae    0x40ca36
  40caa2:	mov    ah,0x1f
  40caa4:	leave  
  40caa5:	jmp    0x17f1:0x21f63fcc
  40caac:	mov    eax,ds:0xaac5dc6f
  40cab1:	inc    ecx
  40cab2:	xor    ebx,esp
  40cab4:	das    
  40cab5:	loopne 0x40cb2b
  40cab7:	pop    ss
  40cab8:	cdq    
  40cab9:	mov    ecx,0x183099ad
  40cabe:	push   0x10
  40cac0:	add    DWORD PTR [edx+0x10],edx
  40cac3:	inc    ebp
  40cac4:	ins    BYTE PTR es:[edi],dx
  40cac5:	into   
  40cac6:	inc    edi
  40cac7:	lds    edi,FWORD PTR [edx]
  40cac9:	nop
  40caca:	loope  0x40cab4
  40cacc:	sbb    al,0x4e
  40cace:	ret    
  40cacf:	imul   edx,DWORD PTR [ebp+0x4fe8563a],0x3c
  40cad6:	test   BYTE PTR [edi+0x33],al
  40cad9:	adc    eax,0x6b7f7008
  40cade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cadf:	iret   
  40cae0:	aam    0x12
  40cae2:	jmp    0xb8cb:0x7624ca37
  40cae9:	mov    edi,0x91fa4506
  40caee:	push   esi
  40caef:	mov    DWORD PTR [edi],ecx
  40caf1:	and    dl,ch
  40caf3:	mov    al,ds:0xe74f6092
  40caf8:	sub    DWORD PTR [edx],edx
  40cafa:	(bad)  
  40cafb:	add    eax,0xccefd910
  40cb00:	aas    
  40cb01:	in     eax,dx
  40cb02:	lods   al,BYTE PTR ds:[esi]
  40cb03:	mov    WORD PTR [edi],gs
  40cb05:	xchg   ebp,eax
  40cb06:	fiadd  WORD PTR [esi]
  40cb08:	call   0x9f47:0xe4e815b4
  40cb0f:	sub    DWORD PTR [ebp+0x63],esp
  40cb12:	cmp    eax,0x3597184b
  40cb17:	jecxz  0x40cb71
  40cb19:	pop    ds
  40cb1a:	test   ch,al
  40cb1c:	and    al,0x39
  40cb1e:	test   eax,0x29c01eb5
  40cb23:	jns    0x40cab2
  40cb25:	lods   eax,DWORD PTR ds:[esi]
  40cb26:	jg     0x40cba2
  40cb28:	icebp  
  40cb29:	xchg   ebp,eax
  40cb2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb2b:	(bad)  
  40cb2c:	out    dx,eax
  40cb2d:	adc    esi,DWORD PTR ds:0x1359aa20
  40cb33:	shr    esp,1
  40cb35:	into   
  40cb36:	mov    ch,0x35
  40cb38:	push   es
  40cb39:	mov    eax,0xdb82c323
  40cb3e:	dec    si
  40cb40:	outs   dx,BYTE PTR ds:[esi]
  40cb41:	jo     0x40cacb
  40cb43:	es jg  0x40caef
  40cb46:	aaa    
  40cb47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb48:	retf   
  40cb49:	jns    0x40cb42
  40cb4b:	xor    DWORD PTR [ecx],0xffffffc7
  40cb4e:	cld    
  40cb4f:	inc    esp
  40cb50:	jno    0x40cbc2
  40cb52:	neg    bl
  40cb54:	inc    ebp
  40cb55:	mov    ds:0x84872267,eax
  40cb5a:	out    0x5d,eax
  40cb5c:	push   esi
  40cb5d:	mov    edx,0x8b3f38d3
  40cb62:	mov    ds:0x186498ff,eax
  40cb67:	fisub  DWORD PTR [edx-0x49]
  40cb6a:	mov    cs,WORD PTR [eax+edi*1]
  40cb6d:	(bad)  
  40cb6e:	fucom  st(6)
  40cb70:	(bad)  
  40cb71:	imul   ebp,DWORD PTR [esi+0x325c9df8],0x13
  40cb78:	sti    
  40cb79:	fcmovnb st,st(2)
  40cb7b:	sub    edx,DWORD PTR ds:0x45653c8a
  40cb81:	std    
  40cb82:	jmp    0xb139:0x6d6994db
  40cb89:	sub    DWORD PTR [ebx-0x48f114f7],eax
  40cb8f:	cwde   
  40cb90:	sub    dh,BYTE PTR [ebx+ebp*1+0x23]
  40cb94:	adc    BYTE PTR [edx+0xe],cl
  40cb97:	add    DWORD PTR [esi],esi
  40cb99:	push   ss
  40cb9a:	cmp    BYTE PTR [ebx+eiz*8-0x1a],cl
  40cb9e:	pop    ebp
  40cb9f:	div    DWORD PTR [ebp-0x70d92f80]
  40cba5:	jge    0x40cbff
  40cba7:	add    DWORD PTR [ebp-0x65],eax
  40cbaa:	std    
  40cbab:	je     0x40cbba
  40cbad:	mov    eax,ds:0x174abe75
  40cbb2:	mov    al,ds:0xa5351115
  40cbb7:	ret    0xd1b1
  40cbba:	sbb    bl,BYTE PTR [ebx]
  40cbbc:	push   es
  40cbbd:	(bad)  
  40cbbe:	pop    esi
  40cbbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbc0:	inc    edi
  40cbc1:	and    al,0x58
  40cbc3:	and    dl,BYTE PTR [esi+0x79]
  40cbc6:	cli    
  40cbc7:	pop    esi
  40cbc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbc9:	sbb    dh,BYTE PTR [edi+0x5e5d1ec2]
  40cbcf:	sti    
  40cbd0:	adc    cl,0x9f
  40cbd3:	sub    esi,DWORD PTR ds:0x9ff3251
  40cbd9:	jmp    0x40cbcf
  40cbdb:	push   cs
  40cbdc:	test   bl,bl
  40cbde:	das    
  40cbdf:	sahf   
  40cbe0:	in     al,0x7f
  40cbe2:	inc    esi
  40cbe3:	lock jle 0x40cbc3
  40cbe6:	cmp    eax,DWORD PTR [ecx+ebx*8+0x44]
  40cbea:	xor    ecx,eax
  40cbec:	shl    dl,0xd9
  40cbef:	aad    0xa2
  40cbf1:	or     eax,0x97b16cba
  40cbf6:	inc    esp
  40cbf7:	add    eax,0x3ad82436
  40cbfc:	or     BYTE PTR [eax],cl
  40cbfe:	mov    eax,ds:0x6467d0a9
  40cc03:	aaa    
  40cc04:	pop    es
  40cc05:	outs   dx,DWORD PTR ds:[esi]
  40cc06:	xchg   edi,eax
  40cc07:	dec    edi
  40cc08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc09:	scas   al,BYTE PTR es:[edi]
  40cc0a:	and    edi,esp
  40cc0c:	stc    
  40cc0d:	scas   al,BYTE PTR es:[edi]
  40cc0e:	sbb    dl,BYTE PTR [ebp+0x5c]
  40cc11:	xchg   ecx,eax
  40cc12:	ss loopne 0x40cc1f
  40cc15:	ret    
  40cc16:	test   BYTE PTR [ebp+edi*4-0x3e2f1d1f],0xc3
  40cc1e:	or     al,BYTE PTR [edx+0x58]
  40cc21:	sbb    cl,bh
  40cc23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc24:	xchg   ebp,eax
  40cc25:	test   DWORD PTR ds:0xe553113e,eax
  40cc2b:	test   al,0xe2
  40cc2d:	and    esp,eax
  40cc2f:	stc    
  40cc30:	hlt    
  40cc31:	jno    0x40cbf1
  40cc33:	fcmovb st,st(7)
  40cc35:	dec    esi
  40cc36:	cmp    ebx,DWORD PTR [edx+ebx*1+0x2ef4a506]
  40cc3d:	cmp    eax,0x72515de3
  40cc42:	bound  edx,QWORD PTR [ecx-0x2a3d3925]
  40cc48:	lahf   
  40cc49:	(bad)  
  40cc4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc4b:	stos   DWORD PTR es:[edi],eax
  40cc4c:	imul   ecx,DWORD PTR [edi-0x326f89c6],0xfcbc46af
  40cc56:	dec    eax
  40cc57:	push   ds
  40cc58:	jns    0x40cccb
  40cc5a:	ins    BYTE PTR es:[edi],dx
  40cc5b:	xor    dl,bl
  40cc5d:	adc    DWORD PTR [edx],0x8
  40cc60:	or     BYTE PTR [eax-0x5beb3cb5],ch
  40cc66:	pop    es
  40cc67:	loope  0x40cc7a
  40cc69:	push   eax
  40cc6a:	pop    edx
  40cc6b:	gs data16 sahf 
  40cc6e:	ret    0xef37
  40cc71:	mov    ebx,0x470928ab
  40cc76:	jg     0x40cc06
  40cc78:	dec    edx
  40cc79:	adc    DWORD PTR [edi],edx
  40cc7b:	repnz sbb al,0x18
  40cc7e:	outs   dx,BYTE PTR ds:[esi]
  40cc7f:	mov    gs,esp
  40cc81:	cwde   
  40cc82:	ss into 
  40cc84:	xlat   BYTE PTR ds:[ebx]
  40cc85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc86:	inc    edx
  40cc87:	jle    0x40ccc3
  40cc89:	jmp    0x3597:0xb53c6410
  40cc90:	aad    0x1a
  40cc92:	in     al,0x41
  40cc94:	fucomi st,st(3)
  40cc96:	fcomp  QWORD PTR [ebx+0x2137416c]
  40cc9c:	mov    ebp,0xf3274e7c
  40cca1:	call   0xcbaa:0xf3c87937
  40cca8:	or     DWORD PTR [ebx+0x52eaba63],eax
  40ccae:	push   ebp
  40ccaf:	xor    bl,BYTE PTR [ecx]
  40ccb1:	setle  BYTE PTR ds:0x6c21f2b2
  40ccb8:	aad    0x25
  40ccba:	scas   eax,DWORD PTR es:[edi]
  40ccbb:	lods   eax,DWORD PTR ds:[esi]
  40ccbc:	imul   esi,DWORD PTR [ecx],0xffffff80
  40ccbf:	mov    ?,WORD PTR [ebp-0x62]
  40ccc2:	std    
  40ccc3:	sbb    al,0x8f
  40ccc5:	xor    eax,0x3fe62329
  40ccca:	shr    BYTE PTR [ebp-0x73],1
  40cccd:	icebp  
  40ccce:	ficomp DWORD PTR [eax-0x657ada8c]
  40ccd4:	enter  0xb426,0xed
  40ccd8:	push   es
  40ccd9:	jmp    0x40cd2c
  40ccdb:	jb     0x40ccc2
  40ccdd:	push   edx
  40ccde:	sub    eax,0x81c1fe8
  40cce3:	jge    0x40cce5
  40cce5:	and    ah,BYTE PTR [esi]
  40cce7:	cmp    DWORD PTR [ebp-0x3a],esp
  40ccea:	add    dl,ch
  40ccec:	dec    esp
  40cced:	scas   eax,DWORD PTR es:[edi]
  40ccee:	cmc    
  40ccef:	mov    eax,0xc2498703
  40ccf4:	push   es
  40ccf5:	add    DWORD PTR [eax],ebp
  40ccf7:	xlat   BYTE PTR ds:[ebx]
  40ccf8:	dec    ebx
  40ccf9:	mov    ecx,0xedf3e61e
  40ccfe:	or     bl,BYTE PTR [ebp+0xa]
  40cd01:	pop    edi
  40cd02:	dec    esp
  40cd03:	aam    0x38
  40cd05:	mov    esp,0x3b1a95ba
  40cd0a:	adc    ch,BYTE PTR [edx]
  40cd0c:	nop
  40cd0d:	push   ecx
  40cd0e:	sbb    DWORD PTR [edi+0x13],ebx
  40cd11:	push   ebx
  40cd12:	int    0x26
  40cd14:	std    
  40cd15:	iret   
  40cd16:	scas   eax,DWORD PTR es:[edi]
  40cd17:	jns    0x40ccad
  40cd19:	mov    bh,0xd4
  40cd1b:	or     al,0xc5
  40cd1d:	loopne 0x40cd8a
  40cd1f:	fsub   QWORD PTR [ecx+0x3c574f7d]
  40cd25:	jle    0x40cd9e
  40cd27:	imul   ebx,DWORD PTR [esi],0xffffff9b
  40cd2a:	rcl    DWORD PTR [ebx+eax*2+0x4aefc4f2],1
  40cd31:	fnstsw WORD PTR [eax+0x70fd68df]
  40cd37:	inc    esp
  40cd38:	gs fcmovu st,st(5)
  40cd3b:	mov    ds:0xc637871e,eax
  40cd40:	add    edi,esp
  40cd42:	imul   edi,DWORD PTR [esi+ebp*8+0x755733bc],0xa99146e7
  40cd4d:	cmp    al,0xa0
  40cd4f:	xchg   ebp,eax
  40cd50:	sub    eax,esp
  40cd52:	push   ds
  40cd53:	or     eax,0xe759fa7e
  40cd58:	mov    ecx,0x2a041f76
  40cd5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd5e:	xor    cl,al
  40cd60:	add    ah,dl
  40cd62:	and    BYTE PTR [ebx+0x55],bl
  40cd65:	push   es
  40cd66:	jo     0x40cd75
  40cd68:	loope  0x40ccf9
  40cd6a:	ror    bh,cl
  40cd6c:	fcom   DWORD PTR [edx+0x3e]
  40cd6f:	jmp    0x96a:0x46d914f0
  40cd76:	outs   dx,DWORD PTR ds:[esi]
  40cd77:	pop    esi
  40cd78:	stc    
  40cd79:	cmp    BYTE PTR [eax],cl
  40cd7b:	stos   DWORD PTR es:[edi],eax
  40cd7c:	push   es
  40cd7d:	pop    eax
  40cd7e:	ficom  WORD PTR [bp+di+0x25]
  40cd82:	jp     0x40cd1d
  40cd84:	pop    ebx
  40cd85:	jl     0x40cdca
  40cd87:	jae    0x40cdc9
  40cd89:	bound  ecx,QWORD PTR [edx]
  40cd8b:	mov    eax,0xbe44e
  40cd90:	nop
  40cd91:	push   0xffffffeb
  40cd93:	loop   0x40cd69
  40cd95:	sub    edi,ebx
  40cd97:	pop    ebp
  40cd98:	jle    0x40cd32
  40cd9a:	pop    edi
  40cd9b:	sahf   
  40cd9c:	jecxz  0x40cd78
  40cd9e:	mov    dh,0xa8
  40cda0:	lock and eax,0xbc2bc6b9
  40cda6:	push   edx
  40cda7:	sbb    eax,0xcd85c808
  40cdac:	arpl   WORD PTR [esi+esi*1],ax
  40cdaf:	adc    ecx,DWORD PTR [edx-0x1c]
  40cdb2:	int3   
  40cdb3:	inc    ebx
  40cdb4:	pop    esi
  40cdb5:	add    al,0xc8
  40cdb7:	je     0x40cd4c
  40cdb9:	ret    
  40cdba:	fcomp  QWORD PTR [ebx-0x4c]
  40cdbd:	pusha  
  40cdbe:	out    0xdc,al
  40cdc0:	fsubr  QWORD PTR ds:0x27f5e309
  40cdc6:	jns    0x40cdb2
  40cdc8:	mov    WORD PTR [ebp-0xa],ss
  40cdcb:	jl     0x40ce11
  40cdcd:	pop    ss
  40cdce:	pop    ebp
  40cdcf:	in     eax,dx
  40cdd0:	push   ebp
  40cdd1:	pop    es
  40cdd2:	js     0x40cddb
  40cdd4:	add    eax,0x1507dcf8
  40cdd9:	push   edi
  40cdda:	mov    ds:0xf2312536,al
  40cddf:	inc    ecx
  40cde0:	add    edi,DWORD PTR [edi]
  40cde2:	test   DWORD PTR [esi],esi
  40cde4:	repz fnstenv ss:[ecx+eax*8]
  40cde9:	add    eax,0x5f865553
  40cdee:	xor    dh,BYTE PTR fs:[ebp+0x28fe5b0c]
  40cdf5:	adc    ch,BYTE PTR [ebx-0x80]
  40cdf8:	mov    eax,DWORD PTR [esi]
  40cdfa:	cmc    
  40cdfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdfc:	push   esp
  40cdfd:	cmp    BYTE PTR [esi+edx*8+0x2e],dh
  40ce01:	outs   dx,DWORD PTR ds:[esi]
  40ce02:	popf   
  40ce03:	dec    ebp
  40ce04:	sub    dh,BYTE PTR [edx+0x14f6224d]
  40ce0a:	imul   edx,edx,0xe9cf210c
  40ce10:	test   al,0x34
  40ce12:	loop   0x40ce89
  40ce14:	inc    esp
  40ce15:	ss sub al,0x16
  40ce18:	sub    eax,0x5fc180dc
  40ce1d:	fwait
  40ce1e:	xor    eax,0xfebc1219
  40ce23:	xchg   edx,eax
  40ce24:	jnp    0x40ce39
  40ce26:	sar    BYTE PTR [ecx],cl
  40ce28:	add    DWORD PTR [edi+0x898b190],eax
  40ce2e:	ja     0x40ce1e
  40ce30:	rcl    BYTE PTR [edi+eiz*8-0x76],1
  40ce34:	addr16 popa 
  40ce36:	lahf   
  40ce37:	or     DWORD PTR [edi+ecx*2-0x7a],eax
  40ce3b:	sub    al,BYTE PTR [edi-0x72e80f71]
  40ce41:	mov    WORD PTR [ebx+0x2588b084],?
  40ce47:	fsubrp st(4),st
  40ce49:	les    esp,FWORD PTR [eax-0x25ba1c67]
  40ce4f:	(bad)
  40ce53:	adc    eax,0x79e96075
  40ce58:	xchg   DWORD PTR [edi+ebp*8+0x394c0921],ebp
  40ce5f:	unpcklps xmm3,XMMWORD PTR ds:0x9dbc
  40ce65:	mov    dl,0x9b
  40ce67:	lahf   
  40ce68:	inc    eax
  40ce69:	aad    0x4d
  40ce6b:	mov    DWORD PTR [ebx],eax
  40ce6d:	dec    edi
  40ce6e:	and    al,0x5f
  40ce70:	repnz and al,0xdf
  40ce73:	repz mov edx,0xad368c92
  40ce79:	(bad)  
  40ce7a:	sbb    eax,0x73852599
  40ce7f:	data16 das 
  40ce81:	mov    al,0x97
  40ce83:	sbb    eax,0x798e851
  40ce88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce89:	sub    DWORD PTR [edi+0x1912a8a6],esp
  40ce8f:	cwde   
  40ce90:	sar    DWORD PTR [edi],cl
  40ce92:	jne    0x40ce2e
  40ce94:	iret   
  40ce95:	frstor [ebx+0x6e]
  40ce98:	call   0x3fdc289a
  40ce9d:	rcl    BYTE PTR [edx],1
  40ce9f:	xor    DWORD PTR [ebp-0x49],ecx
  40cea2:	push   ecx
  40cea3:	int    0xfb
  40cea5:	arpl   si,di
  40cea7:	lods   al,BYTE PTR ds:[esi]
  40cea8:	ins    BYTE PTR es:[edi],dx
  40cea9:	mov    DWORD PTR [ebp+edi*4-0x54],edi
  40cead:	jns    0x40ceb5
  40ceaf:	add    edx,edi
  40ceb1:	enter  0xd658,0x38
  40ceb5:	pop    esi
  40ceb6:	fwait
  40ceb7:	shl    DWORD PTR [ebx+0x306f8ab7],1
  40cebd:	sub    al,0x2e
  40cebf:	fisttp QWORD PTR [ebx-0x5e]
  40cec2:	stos   DWORD PTR es:[edi],eax
  40cec3:	call   DWORD PTR [esi+eiz*2-0x2c]
  40cec7:	add    ebx,ebx
  40cec9:	mov    cs,WORD PTR [ecx-0x71]
  40cecc:	add    dh,bl
  40cece:	mov    DWORD PTR [eax+0xbeccb69],0xe48a0b9d
  40ced8:	add    al,0xef
  40ceda:	add    edi,DWORD PTR [esi+eiz*2+0x37]
  40cede:	sub    DWORD PTR [ecx],ebx
  40cee0:	jae    0x40cf33
  40cee2:	cmp    al,0x24
  40cee4:	fsubr  QWORD PTR [esi+0x769b3fe7]
  40ceea:	pop    ebp
  40ceeb:	inc    esp
  40ceec:	jmp    0x3f57:0xc6465411
  40cef3:	aam    0x90
  40cef5:	jb     0x40ceb5
  40cef7:	pop    ss
  40cef8:	cs leave 
  40cefa:	shl    DWORD PTR [eax-0x3ff08fe1],1
  40cf00:	jge    0x40cf4e
  40cf02:	push   ebx
  40cf03:	mov    BYTE PTR [esi+0x7fd41387],cl
  40cf09:	adc    eax,0xf57b441
  40cf0e:	ror    BYTE PTR [eax-0x7d],cl
  40cf11:	cs ins BYTE PTR es:[edi],dx
  40cf13:	ror    BYTE PTR [ecx+0x54be11a8],1
  40cf19:	and    eax,0xf533e77b
  40cf1e:	out    dx,eax
  40cf1f:	mov    ds:0xa8c5c809,al
  40cf24:	shl    DWORD PTR [edx+ebp*8-0x17],0x1a
  40cf29:	(bad)  [eax+edx*4+0x26]
  40cf2d:	int    0x75
  40cf2f:	dec    BYTE PTR [eax+0x73]
  40cf32:	jecxz  0x40cfac
  40cf34:	push   edx
  40cf35:	fiadd  DWORD PTR [ebp+0x3a070058]
  40cf3b:	sar    DWORD PTR [ebp+0x4c],cl
  40cf3e:	stos   BYTE PTR es:[edi],al
  40cf3f:	xchg   ecx,ecx
  40cf41:	icebp  
  40cf42:	or     ecx,DWORD PTR [eax+0x70]
  40cf45:	retf   
  40cf46:	pusha  
  40cf47:	pop    ebp
  40cf48:	mov    ds,edx
  40cf4a:	fcom   DWORD PTR [edi-0xb]
  40cf4d:	jg     0x40cf2e
  40cf4f:	arpl   WORD PTR [bp+di+0xd31],ax
  40cf54:	in     eax,dx
  40cf55:	xor    al,0x2d
  40cf57:	and    al,0x50
  40cf59:	xchg   ebx,eax
  40cf5a:	lea    edi,[edx-0x1f]
  40cf5d:	bound  esp,QWORD PTR [edx]
  40cf5f:	xor    ecx,DWORD PTR [ecx-0x7d8b4fc]
  40cf65:	ins    BYTE PTR es:[di],dx
  40cf67:	adc    DWORD PTR [ecx],ebx
  40cf69:	aad    0x2f
  40cf6b:	cs push esi
  40cf6d:	fwait
  40cf6e:	push   ebp
  40cf6f:	or     cl,BYTE PTR [edx-0x23]
  40cf72:	lea    edx,[ecx-0x32]
  40cf75:	retf   
  40cf76:	in     al,dx
  40cf77:	xor    al,0x27
  40cf79:	ret    
  40cf7a:	or     eax,0x58fd0a6a
  40cf7f:	(bad)  
  40cf80:	retf   0x4844
  40cf83:	nop
  40cf84:	add    ebx,DWORD PTR [eax-0x4d]
  40cf87:	sub    al,0xdc
  40cf89:	inc    esp
  40cf8a:	sub    BYTE PTR [eax+0x7077ef51],ch
  40cf90:	inc    esp
  40cf91:	push   es
  40cf92:	leave  
  40cf93:	data16 mov ?,WORD PTR [edx]
  40cf96:	inc    esi
  40cf97:	popa   
  40cf98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf99:	retf   0x7b2d
  40cf9c:	add    eax,0x7e6142ef
  40cfa1:	sub    edx,edi
  40cfa3:	dec    ebp
  40cfa4:	and    ch,BYTE PTR [eax-0x51]
  40cfa7:	adc    DWORD PTR [edi+0x5da01fd3],edi
  40cfad:	daa    
  40cfae:	inc    esp
  40cfaf:	jl     0x40d011
  40cfb1:	mov    eax,DWORD PTR [ebx+0x5b5b0a0a]
  40cfb7:	adc    edx,ebx
  40cfb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfba:	idiv   BYTE PTR [eax+0x1d9f880f]
  40cfc0:	inc    edi
  40cfc1:	sbb    DWORD PTR [edi+0x10],esp
  40cfc4:	jle    0x40cf6e
  40cfc6:	icebp  
  40cfc7:	pop    ds
  40cfc8:	popa   
  40cfc9:	aam    0x9d
  40cfcb:	or     DWORD PTR [ebx+0x3d58df1e],ebp
  40cfd1:	in     eax,dx
  40cfd2:	fisub  WORD PTR [eax-0x7ae1eae7]
  40cfd8:	inc    DWORD PTR [edi+0x1beb909]
  40cfde:	push   DWORD PTR [edx+0x4ace08de]
  40cfe4:	addr16 in eax,dx
  40cfe6:	fwait
  40cfe7:	addr16 aam 0xb5
  40cfea:	hlt    
  40cfeb:	sti    
  40cfec:	es pop edi
  40cfee:	sub    DWORD PTR [ecx+0x7a],esi
  40cff1:	pop    ds
  40cff2:	mov    edx,0x9c60e512
  40cff7:	(bad)
  40cffb:	jmp    0x40cf82
  40cffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cffe:	outs   dx,DWORD PTR ds:[esi]
  40cfff:	fucom  st(2)
  40d001:	push   0x2d38091f
  40d006:	mov    cl,0x6f
  40d008:	fmul   QWORD PTR [edi]
  40d00a:	dec    esp
  40d00b:	jb     0x40d063
  40d00d:	jno    0x40d009
  40d00f:	lahf   
  40d010:	sub    ah,bh
  40d012:	mov    ds:0x7829352b,al
  40d017:	aas    
  40d018:	lods   eax,DWORD PTR ds:[esi]
  40d019:	push   ebx
  40d01a:	mov    bh,0x34
  40d01d:	ins    BYTE PTR es:[edi],dx
  40d01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d01f:	push   0x8684f162
  40d024:	and    al,BYTE PTR [edx+0x5008e4f3]
  40d02a:	loope  0x40cfe3
  40d02c:	cmp    al,0x1b
  40d02e:	stos   BYTE PTR es:[edi],al
  40d02f:	add    bl,BYTE PTR [ebx]
  40d031:	loop   0x40cfc2
  40d033:	sbb    al,0x73
  40d035:	popa   
  40d036:	jae    0x40d089
  40d038:	ja     0x40cfe6
  40d03a:	push   ebp
  40d03b:	aaa    
  40d03c:	mov    cl,0xb1
  40d03e:	loop   0x40cfdc
  40d040:	out    0x4,eax
  40d042:	mov    eax,ds:0x4a4deb94
  40d047:	cmp    bl,BYTE PTR [ecx-0x52]
  40d04a:	jnp    0x40d0a3
  40d04c:	jg     0x40d011
  40d04e:	addr16 int3 
  40d050:	fnstsw WORD PTR [edi]
  40d052:	add    al,0xd5
  40d054:	popa   
  40d055:	sub    dl,ah
  40d057:	mov    edi,0xceb48ffb
  40d05c:	outs   dx,BYTE PTR ds:[esi]
  40d05d:	xor    DWORD PTR [ebp+0x63],esi
  40d060:	xchg   ebx,eax
  40d061:	and    BYTE PTR [esi-0x4da358af],al
  40d067:	gs (bad) 
  40d069:	stc    
  40d06a:	sbb    eax,0xe012064
  40d06f:	lods   al,BYTE PTR ds:[esi]
  40d070:	dec    edx
  40d071:	cmp    esp,edi
  40d073:	sbb    esi,DWORD PTR [ebx]
  40d075:	je     0x40d031
  40d077:	mov    ebx,0xedc6033d
  40d07c:	add    DWORD PTR [ebp+0x27],edx
  40d07f:	inc    eax
  40d080:	loop   0x40d05a
  40d082:	pusha  
  40d083:	mov    ?,ecx
  40d085:	jnp    0x40d0ae
  40d087:	push   esi
  40d088:	mov    ecx,0xe275f2be
  40d08d:	sub    DWORD PTR ds:0xb7bf2ac4,0x6ee0d89
  40d097:	enter  0x5926,0xa2
  40d09b:	jle    0x40d0d3
  40d09d:	mov    al,ds:0x74f69201
  40d0a2:	pop    ds
  40d0a3:	pushf  
  40d0a4:	cwde   
  40d0a5:	xor    al,0xe5
  40d0a7:	mov    dh,0x6c
  40d0a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0aa:	daa    
  40d0ab:	sub    ebx,DWORD PTR [eax+ebp*1+0xc9ed45d]
  40d0b2:	std    
  40d0b3:	cmp    ch,BYTE PTR [edi+0x72fccc8f]
  40d0b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0ba:	int3   
  40d0bb:	sub    eax,0x3493f248
  40d0c0:	and    al,0x18
  40d0c2:	mov    esp,0x786a638
  40d0c7:	ja     0x40d0ae
  40d0c9:	add    al,0x1b
  40d0cb:	mov    DWORD PTR [esi-0x78],0xd873c4d2
  40d0d2:	xlat   BYTE PTR ds:[ebx]
  40d0d3:	add    al,0xd8
  40d0d5:	push   ebp
  40d0d6:	or     dh,bh
  40d0d8:	jbe    0x40d072
  40d0da:	lods   al,BYTE PTR ds:[esi]
  40d0db:	or     BYTE PTR [ebx+0x35],0xc
  40d0df:	dec    ebp
  40d0e0:	in     al,0xb0
  40d0e2:	shr    DWORD PTR ds:0xa29a1742,0xa9
  40d0e9:	ss scas eax,DWORD PTR es:[edi]
  40d0eb:	fcmovnbe st,st(7)
  40d0ed:	je     0x40d101
  40d0ef:	mov    ds:0x8352295f,eax
  40d0f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0f5:	fild   DWORD PTR ss:[eax+0x5b58b9ae]
  40d0fc:	add    edi,edx
  40d0fe:	xadd   DWORD PTR [edx],eax
  40d101:	jno    0x40d155
  40d103:	and    DWORD PTR [edx-0x550e7399],0x33
  40d10a:	das    
  40d10b:	sub    eax,0x28a7172e
  40d110:	fmul   st,st(5)
  40d112:	cmc    
  40d113:	push   cs
  40d114:	cmc    
  40d115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d116:	sub    edx,ecx
  40d118:	xor    edx,0xffffffaa
  40d11b:	enter  0xb057,0xb0
  40d11f:	dec    edx
  40d120:	inc    eax
  40d121:	jecxz  0x40d197
  40d123:	(bad)  
  40d124:	xor    ch,dh
  40d126:	jmp    0x40d0ac
  40d128:	sbb    eax,0x89d2f28d
  40d12d:	sub    bl,BYTE PTR [edx+0x13]
  40d130:	sbb    cl,dl
  40d132:	jne    0x40d159
  40d134:	sub    esi,DWORD PTR ss:[esi-0x5b]
  40d138:	xor    edi,DWORD PTR [eax-0x2f]
  40d13b:	jo     0x40d167
  40d13d:	mov    esi,es
  40d13f:	shl    dh,cl
  40d141:	cmp    eax,0x6f16ee8e
  40d146:	aaa    
  40d147:	in     eax,dx
  40d148:	xchg   ecx,eax
  40d149:	fidivr DWORD PTR fs:0xdfca106c
  40d150:	dec    ecx
  40d151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d152:	dec    ebx
  40d153:	and    al,0x13
  40d155:	cdq    
  40d156:	push   cs
  40d157:	sub    eax,DWORD PTR [eax-0xa24e9af]
  40d15d:	call   0xe359:0x1602d762
  40d164:	sub    BYTE PTR [ecx],cl
  40d166:	dec    edx
  40d167:	mov    ecx,0xa0d28cd
  40d16c:	sub    BYTE PTR ds:0xb2f12503,0xaf
  40d173:	mov    ecx,0xc8403586
  40d178:	dec    edx
  40d179:	daa    
  40d17a:	pushf  
  40d17b:	sahf   
  40d17c:	shr    DWORD PTR [esi-0x3688ae39],cl
  40d182:	cmp    eax,DWORD PTR [edx+0x5fa495ae]
  40d188:	mov    al,ds:0x8ce37911
  40d18d:	add    eax,0x1e354e07
  40d192:	push   edi
  40d193:	test   DWORD PTR [eax-0x419ccaa3],edx
  40d199:	(bad)  
  40d19a:	pop    edi
  40d19b:	jbe    0x40d19f
  40d19d:	ds jecxz 0x40d21d
  40d1a0:	xor    BYTE PTR [edi*8-0x6353ecfb],bl
  40d1a7:	out    dx,al
  40d1a8:	idiv   DWORD PTR [ebp+0x7a3494a6]
  40d1ae:	adc    BYTE PTR [ebp-0xd],dh
  40d1b1:	lds    esi,FWORD PTR [edx-0x43]
  40d1b4:	push   0x57
  40d1b6:	stos   DWORD PTR es:[edi],eax
  40d1b7:	push   ds
  40d1b8:	and    al,0x84
  40d1ba:	dec    esi
  40d1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1bc:	fs out 0x65,eax
  40d1bf:	cmp    DWORD PTR [edi],edi
  40d1c1:	xchg   ebx,eax
  40d1c2:	iret   
  40d1c3:	fcom   DWORD PTR [esi]
  40d1c5:	fnstcw WORD PTR [ebp-0x15e297b]
  40d1cb:	sub    ah,ah
  40d1cd:	hlt    
  40d1ce:	xor    dh,BYTE PTR [ecx+0x57]
  40d1d1:	lods   al,BYTE PTR ds:[esi]
  40d1d2:	jp     0x40d195
  40d1d4:	out    dx,al
  40d1d5:	scas   al,BYTE PTR es:[edi]
  40d1d6:	sub    BYTE PTR [edx-0x115f345e],0xc7
  40d1dd:	and    ecx,eax
  40d1df:	ffreep st(7)
  40d1e1:	cdq    
  40d1e2:	shr    ebx,1
  40d1e4:	adc    al,bl
  40d1e6:	add    DWORD PTR [ebx-0x7afa34],esi
  40d1ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1ed:	jns    0x40d1e9
  40d1ef:	mov    ch,0xe4
  40d1f1:	iret   
  40d1f2:	dec    eax
  40d1f3:	sbb    ebx,DWORD PTR ds:0xa40b410e
  40d1f9:	popf   
  40d1fa:	scas   eax,DWORD PTR es:[edi]
  40d1fb:	jns    0x40d1a3
  40d1fd:	jns    0x40d243
  40d1ff:	std    
  40d200:	add    dh,al
  40d202:	jl     0x40d1bb
  40d204:	int    0xb8
  40d206:	sbb    DWORD PTR [eax+0x27],esp
  40d209:	mov    eax,0xd066ae51
  40d20e:	mov    edi,0x70fb571d
  40d213:	mov    ch,0x3f
  40d215:	jge    0x40d274
  40d217:	mov    ebx,0x8d1029bc
  40d21c:	aaa    
  40d21d:	pop    esi
  40d21e:	jp     0x40d272
  40d220:	add    ebx,edx
  40d222:	push   0xffffff8b
  40d224:	ror    BYTE PTR [edx+esi*2],cl
  40d227:	das    
  40d228:	cmp    DWORD PTR [ebp-0x1fffdd88],edi
  40d22e:	add    al,0x54
  40d230:	mov    esp,0xcafd4e2f
  40d235:	mov    edx,0x1f5bf63
  40d23a:	xor    al,0x33
  40d23c:	mov    eax,0x3e352c24
  40d241:	lods   al,BYTE PTR ds:[esi]
  40d242:	(bad)  
  40d243:	test   eax,0x1ccfe4a0
  40d248:	retf   0x5e6a
  40d24b:	stos   BYTE PTR es:[edi],al
  40d24c:	not    DWORD PTR [ecx-0x4014bc0b]
  40d252:	aam    0x10
  40d254:	sub    al,0x32
  40d256:	push   eax
  40d257:	retf   
  40d258:	sbb    ebx,DWORD PTR [ebx]
  40d25a:	loopne 0x40d23a
  40d25c:	and    DWORD PTR [eax],0xb9e65704
  40d262:	div    DWORD PTR [edi]
  40d264:	ret    0x25dd
  40d267:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40d269:	inc    ebp
  40d26a:	pop    edx
  40d26b:	xor    eax,DWORD PTR [ebx]
  40d26d:	(bad)  
  40d26e:	cmp    ecx,eax
  40d270:	je     0x40d2ae
  40d276:	jmp    0x40d29f
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	mov    dh,0xf5
  40d2fe:	pop    esi
  40d2ff:	loop   0x40d296
  40d301:	rol    BYTE PTR [ebx-0x7ca3177d],cl
  40d307:	or     DWORD PTR [eax],0x73
  40d30a:	push   edx
  40d30b:	enter  0x3611,0x24
  40d30f:	pop    edi
  40d310:	lods   eax,DWORD PTR ds:[esi]
  40d311:	sbb    eax,0x289a4f96
  40d316:	xchg   edi,eax
  40d317:	push   eax
  40d318:	ds cmp al,0x7f
  40d31b:	push   es
  40d31c:	(bad)  
  40d31e:	or     dl,BYTE PTR [eax+0x7217ef81]
  40d324:	enter  0x799d,0xa9
  40d328:	cmp    ebp,DWORD PTR ds:0xd28af7a2
  40d32e:	inc    esp
  40d32f:	sbb    BYTE PTR [edi+eax*2],dl
  40d332:	repnz stos DWORD PTR es:[edi],eax
  40d334:	and    eax,0xcabc06cb
  40d339:	mov    eax,ds:0x9c5ad1ee
  40d33e:	pop    eax
  40d33f:	add    eax,0x8c33cf8f
  40d344:	out    dx,al
  40d345:	(bad)  
  40d346:	test   BYTE PTR [eax+ebx*4],0x3a
  40d34a:	aad    0xe6
  40d34c:	jmp    0x40d2e6
  40d34e:	shl    BYTE PTR ds:0x26b7519c,1
  40d354:	out    dx,al
  40d355:	push   esp
  40d356:	or     ecx,DWORD PTR [edx]
  40d358:	ds or  al,0xa1
  40d35b:	jae    0x40d3c8
  40d35d:	loope  0x40d3dc
  40d35f:	sbb    ebx,DWORD PTR [ecx+0x47]
  40d362:	push   ecx
  40d363:	mov    esp,0xf98dafa0
  40d368:	ja     0x40d3ac
  40d36a:	xchg   DWORD PTR [ecx],ebx
  40d36c:	jecxz  0x40d380
  40d36e:	pop    ss
  40d36f:	jne    0x40d309
  40d371:	sbb    al,0x2c
  40d373:	mov    ebp,0xc6580a31
  40d378:	cmp    DWORD PTR [esi],ecx
  40d37a:	pop    esp
  40d37b:	push   edi
  40d37c:	adc    eax,0xc843a477
  40d381:	push   es
  40d382:	xchg   esi,eax
  40d383:	mov    ebp,0xb3585295
  40d388:	fist   DWORD PTR [esi+0x62ea48a4]
  40d38e:	inc    eax
  40d38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d390:	mov    edi,0xce4b274e
  40d395:	call   0x3ac960c5
  40d39a:	push   ebp
  40d39b:	rcl    DWORD PTR [edi+0x37e7127],0xbb
  40d3a2:	jmp    0x8e05c968
  40d3a7:	(bad)  
  40d3a9:	xor    DWORD PTR [esi-0x2d7d4e3],ebp
  40d3af:	pop    ebp
  40d3b0:	mov    dl,0xcd
  40d3b2:	mov    al,ds:0x70195ea8
  40d3b7:	out    0x73,al
  40d3b9:	pop    ebx
  40d3ba:	sbb    edi,edi
  40d3bc:	sahf   
  40d3bd:	push   0xffffffd2
  40d3bf:	cmp    bh,BYTE PTR [ecx+eiz*1]
  40d3c2:	push   ds
  40d3c3:	adc    BYTE PTR [esi],0x13
  40d3c6:	ret    0x598a
  40d3c9:	clc    
  40d3ca:	je     0x40d388
  40d3cc:	xchg   edi,eax
  40d3cd:	cld    
  40d3ce:	adc    edi,DWORD PTR [eax]
  40d3d0:	inc    ecx
  40d3d1:	xor    DWORD PTR [edi+0xe],edx
  40d3d4:	gs test al,0x38
  40d3d7:	dec    edi
  40d3d8:	mov    al,ss:0x391234e9
  40d3de:	adc    bh,0x9f
  40d3e1:	adc    cl,dh
  40d3e3:	and    bh,BYTE PTR [esi-0x75]
  40d3e6:	mov    ebx,0xb1a8ddf2
  40d3eb:	mov    dh,0xae
  40d3ed:	in     al,dx
  40d3ee:	retf   0xe2ac
  40d3f1:	(bad)  
  40d3f3:	les    ebx,FWORD PTR [eax]
  40d3f5:	popa   
  40d3f6:	pop    ebx
  40d3f7:	inc    edi
  40d3f8:	clc    
  40d3f9:	and    BYTE PTR [edx+ebp*4],0x33
  40d3fd:	outs   dx,BYTE PTR ds:[esi]
  40d3fe:	push   ebx
  40d3ff:	and    al,bl
  40d401:	scas   al,BYTE PTR es:[edi]
  40d402:	lods   al,BYTE PTR ds:[esi]
  40d403:	cmp    al,0x96
  40d405:	push   ebx
  40d406:	leave  
  40d407:	cdq    
  40d408:	mov    dl,0x4d
  40d40a:	dec    eax
  40d40b:	dec    ebp
  40d40c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d40d:	push   ss
  40d40e:	jge    0x40d438
  40d410:	push   ds
  40d411:	test   al,0xf9
  40d413:	cwde   
  40d414:	cs aas 
  40d416:	(bad)  
  40d417:	aas    
  40d418:	add    edx,DWORD PTR [eax+0x18]
  40d41b:	aaa    
  40d41c:	inc    ebp
  40d41d:	in     eax,0x8e
  40d41f:	(bad)  
  40d420:	retf   
  40d421:	data16 outs dx,BYTE PTR ds:[esi]
  40d423:	push   ss
  40d424:	mov    ch,0xde
  40d426:	clc    
  40d427:	jecxz  0x40d459
  40d429:	fwait
  40d42a:	push   eax
  40d42b:	sahf   
  40d42c:	sbb    BYTE PTR [edx+0xc1ccd29],dh
  40d432:	or     dl,BYTE PTR [esi-0x2960f5bb]
  40d438:	retf   0x9a9
  40d43b:	loope  0x40d4b9
  40d43d:	in     al,0x1b
  40d43f:	stos   DWORD PTR es:[edi],eax
  40d440:	js     0x40d481
  40d442:	cs pop ds
  40d444:	and    BYTE PTR [edx-0x433f46d2],ah
  40d44a:	add    eax,0x7b7a4f50
  40d44f:	fisubr WORD PTR [ebx+0xbbce854]
  40d455:	imul   eax,DWORD PTR [edx+0x7042d14f],0x27
  40d45c:	pop    ebx
  40d45d:	jae    0x40d4d1
  40d45f:	cmp    cl,BYTE PTR [edi+eiz*4-0x29]
  40d463:	fimul  WORD PTR [ebx+0x58]
  40d466:	adc    dh,BYTE PTR [edi]
  40d468:	mov    dl,0xa3
  40d46a:	mov    ebp,0xc31b725a
  40d46f:	das    
  40d470:	push   cs
  40d471:	jb     0x40d4af
  40d473:	dec    esp
  40d474:	add    cl,ah
  40d476:	pop    esi
  40d477:	jle    0x40d46e
  40d479:	jmp    0xb7ef:0xc1f68676
  40d480:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40d482:	ret    
  40d483:	sub    al,0x25
  40d485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d486:	sub    al,0x2a
  40d488:	adc    al,0x24
  40d48a:	xor    ch,bh
  40d48c:	inc    edi
  40d48d:	ror    DWORD PTR [edx],cl
  40d48f:	cmp    ebx,DWORD PTR [edi-0x22]
  40d492:	cmp    DWORD PTR [ecx+0x3f530e23],ebx
  40d498:	mul    dl
  40d49a:	popf   
  40d49b:	push   0xffffffa8
  40d49d:	sub    BYTE PTR [eax],ch
  40d49f:	push   ecx
  40d4a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4a1:	dec    esi
  40d4a2:	push   0x19a7ceb4
  40d4a7:	aas    
  40d4a8:	lods   eax,DWORD PTR ds:[esi]
  40d4a9:	pop    edx
  40d4aa:	adc    eax,ebx
  40d4ac:	fdiv   st,st(2)
  40d4ae:	cld    
  40d4af:	mov    dl,0x14
  40d4b1:	loopne 0x40d445
  40d4b3:	repz dec ecx
  40d4b5:	cwde   
  40d4b6:	pop    edx
  40d4b7:	mov    dh,0xee
  40d4b9:	test   DWORD PTR [eax+ebx*4],esi
  40d4bc:	cmp    eax,0xe7a896db
  40d4c1:	leave  
  40d4c2:	or     ecx,ecx
  40d4c4:	inc    BYTE PTR [ecx]
  40d4c6:	sub    al,0x9a
  40d4c8:	pop    ecx
  40d4c9:	xor    edx,DWORD PTR [esi-0x1e]
  40d4cc:	lods   eax,DWORD PTR ds:[esi]
  40d4cd:	xchg   ebx,eax
  40d4ce:	fist   DWORD PTR [edx+eiz*1-0x73]
  40d4d2:	xor    al,0x93
  40d4d4:	jne    0x40d4fc
  40d4d6:	xor    al,BYTE PTR [ecx+0x44]
  40d4d9:	xchg   esi,eax
  40d4da:	cmp    DWORD PTR [esi+0x95bc0aa],ebx
  40d4e0:	inc    eax
  40d4e1:	jns    0x40d46f
  40d4e3:	out    0x53,al
  40d4e5:	addr16 dec esi
  40d4e7:	push   ss
  40d4e8:	xchg   ebp,eax
  40d4e9:	imul   esi,DWORD PTR [eax-0x11],0x2029e60c
  40d4f0:	arpl   WORD PTR [ebp+0x18],bx
  40d4f3:	mov    ecx,0x767a4c62
  40d4f8:	xchg   BYTE PTR [esi+0x5515cebf],bh
  40d4fe:	add    BYTE PTR [edx],bh
  40d500:	dec    edi
  40d501:	sub    edi,0xffffffe3
  40d504:	xchg   BYTE PTR [ebx],dh
  40d506:	not    DWORD PTR [ebx-0x20]
  40d509:	mov    ch,0x6c
  40d50b:	call   0x4550f786
  40d510:	mov    al,0x5b
  40d512:	dec    esp
  40d513:	inc    ebp
  40d514:	lods   eax,DWORD PTR ds:[esi]
  40d515:	mov    edi,0xfa2821bb
  40d51a:	leave  
  40d51b:	aam    0x97
  40d51d:	jno    0x40d4b7
  40d51f:	retf   0x1234
  40d522:	test   BYTE PTR [edx],bh
  40d524:	mov    WORD PTR [ecx],cs
  40d526:	mov    esp,0xa9b941e4
  40d52b:	adc    DWORD PTR [ecx],0x63
  40d52e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d52f:	jno    0x40d534
  40d531:	jmp    0x276d:0x5de40f65
  40d538:	and    eax,0x3ea6aa84
  40d53d:	(bad)  
  40d53e:	push   edx
  40d53f:	jle    0x40d54f
  40d541:	fldenv [edx+0x13f337b8]
  40d547:	retf   
  40d548:	xchg   edi,eax
  40d549:	dec    esi
  40d54a:	(bad)  
  40d54c:	stos   BYTE PTR es:[edi],al
  40d54d:	loopne 0x40d4d3
  40d54f:	iret   
  40d550:	popf   
  40d551:	cmc    
  40d552:	push   edi
  40d553:	or     al,0xd0
  40d555:	xchg   ecx,eax
  40d556:	add    BYTE PTR [esi+0x38d528cc],ah
  40d55c:	add    ebx,edx
  40d55e:	or     ebx,DWORD PTR [edx+esi*8]
  40d561:	lods   eax,DWORD PTR ds:[esi]
  40d562:	xor    edi,DWORD PTR [ecx+0x4406da31]
  40d568:	sub    BYTE PTR [esi],bh
  40d56a:	xor    DWORD PTR [eax-0x1577c9a3],esp
  40d570:	mov    esi,0xd53cff87
  40d575:	and    eax,DWORD PTR [edi-0x5bf81672]
  40d57b:	out    dx,eax
  40d57c:	stc    
  40d57d:	fisttp DWORD PTR ds:[edi-0xf]
  40d581:	pop    es
  40d582:	jle    0x40d5d1
  40d584:	popf   
  40d585:	sbb    al,0xea
  40d587:	clc    
  40d588:	shl    ebp,1
  40d58a:	inc    edi
  40d58b:	test   eax,0x6fe94023
  40d590:	jp     0x40d5ce
  40d592:	mov    bl,0x7d
  40d594:	shl    ecx,cl
  40d596:	std    
  40d597:	pop    es
  40d598:	fmul   st(4),st
  40d59a:	mov    es,WORD PTR [ebp+0x63cfd951]
  40d5a0:	push   0x3b00713
  40d5a5:	iret   
  40d5a6:	cmp    cl,bl
  40d5a8:	jg     0x40d5b0
  40d5aa:	loope  0x40d557
  40d5ac:	mov    ds:0xdfd23166,eax
  40d5b1:	(bad)  
  40d5b3:	pop    edx
  40d5b4:	cs pushf 
  40d5b6:	fimul  DWORD PTR [edx+esi*4-0x15]
  40d5ba:	add    al,0xa3
  40d5bc:	mov    bl,bh
  40d5be:	adc    BYTE PTR [ebp-0xf],ch
  40d5c1:	jb     0x40d5d9
  40d5c3:	test   BYTE PTR [ecx+0x6a],dl
  40d5c6:	leave  
  40d5c7:	push   ecx
  40d5c8:	cdq    
  40d5c9:	pop    ebp
  40d5ca:	(bad)  
  40d5cb:	jbe    0x40d5ae
  40d5cd:	xchg   DWORD PTR [edx],edx
  40d5cf:	pusha  
  40d5d0:	in     eax,0x65
  40d5d2:	mov    ebp,0xe68848c2
  40d5d7:	div    BYTE PTR [esi]
  40d5d9:	and    edi,DWORD PTR [edx+0x125d38f5]
  40d5df:	adc    BYTE PTR [ecx+eiz*4+0x22dbac4c],bl
  40d5e6:	sbb    eax,0x11770062
  40d5eb:	inc    edx
  40d5ec:	push   0xffffffbd
  40d5ee:	jns    0x40d63d
  40d5f0:	sbb    al,0x99
  40d5f2:	jbe    0x40d589
  40d5f4:	(bad)  
  40d5f5:	xchg   ebp,eax
  40d5f6:	mov    eax,ds:0xb1a42fc8
  40d5fb:	dec    esp
  40d5fc:	add    eax,DWORD PTR [ebx-0x4]
  40d5ff:	cli    
  40d600:	arpl   bp,sp
  40d602:	or     eax,0x41f4a32d
  40d607:	dec    ebx
  40d608:	jg     0x40d617
  40d60a:	or     dh,0x7a
  40d60d:	pop    ss
  40d60e:	push   eax
  40d60f:	xchg   edi,eax
  40d610:	push   ebx
  40d611:	adc    eax,0x2d9b8d54
  40d616:	jg     0x40d5e1
  40d618:	test   BYTE PTR [edx-0x5715f432],0x43
  40d61f:	pushf  
  40d620:	mov    edi,0xda63e5ee
  40d625:	adc    eax,0x8919342f
  40d62a:	test   BYTE PTR [esi],bl
  40d62c:	lods   al,BYTE PTR ds:[esi]
  40d62d:	jecxz  0x40d60f
  40d62f:	test   bh,bl
  40d631:	shl    BYTE PTR [ebp+0x28],1
  40d634:	and    DWORD PTR [edx-0x4aed8f9f],0xffffffad
  40d63b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d63c:	adc    ebp,eax
  40d63e:	pop    ebx
  40d63f:	stc    
  40d640:	int3   
  40d641:	stos   BYTE PTR es:[edi],al
  40d642:	pop    ds
  40d643:	xchg   BYTE PTR [edx],al
  40d645:	sub    BYTE PTR [eax+ebx*4],cl
  40d648:	dec    esp
  40d649:	pop    esi
  40d64a:	ror    DWORD PTR [ecx-0x4],cl
  40d64d:	or     edx,DWORD PTR [ecx-0x46]
  40d650:	not    DWORD PTR [edx+0x6a]
  40d653:	std    
  40d654:	jno    0x40d683
  40d656:	or     DWORD PTR [esi+eiz*4],eax
  40d659:	dec    eax
  40d65a:	inc    esi
  40d65b:	jl     0x40d6bf
  40d65d:	pop    ecx
  40d65e:	inc    eax
  40d65f:	call   0xb3e7:0xce664bb5
  40d666:	(bad)  
  40d667:	std    
  40d668:	call   0x5ab3:0xf235dda3
  40d66f:	xor    esp,DWORD PTR [ebx+esi*2-0x33f3162d]
  40d676:	mov    dh,0xec
  40d678:	add    al,0x8
  40d67a:	cwde   
  40d67b:	xor    DWORD PTR [ebx],ebx
  40d67d:	pop    esp
  40d67e:	or     BYTE PTR ds:0x3fbb1301,0x4d
  40d685:	hlt    
  40d686:	out    dx,eax
  40d687:	das    
  40d688:	adc    BYTE PTR [ecx+0x41],bh
  40d68b:	aas    
  40d68c:	test   esi,0xd74a3b7d
  40d692:	add    BYTE PTR [edi-0x5e08dd5a],0xdd
  40d699:	xchg   ebp,eax
  40d69a:	lods   al,BYTE PTR ds:[esi]
  40d69b:	loopne 0x40d63e
  40d69d:	sbb    al,0xfa
  40d69f:	aas    
  40d6a0:	fcomip st,st(1)
  40d6a2:	xchg   ebx,eax
  40d6a3:	cmp    eax,0x76220d0b
  40d6a8:	cwde   
  40d6a9:	cmp    BYTE PTR [eax],bl
  40d6ab:	in     al,dx
  40d6ac:	bound  ebx,QWORD PTR [esi+0x6e]
  40d6af:	mov    edx,0xd1727cf3
  40d6b4:	sti    
  40d6b5:	xchg   edx,eax
  40d6b6:	(bad)  
  40d6b7:	popa   
  40d6b8:	xlat   BYTE PTR ds:[ebx]
  40d6b9:	add    al,0xf1
  40d6bb:	ret    
  40d6bc:	push   edi
  40d6bd:	dec    eax
  40d6be:	rcl    edx,0x73
  40d6c1:	sbb    ch,bh
  40d6c3:	or     al,BYTE PTR [edx]
  40d6c5:	adc    al,0x9c
  40d6c7:	ins    BYTE PTR es:[edi],dx
  40d6c8:	mov    DWORD PTR [ecx+ecx*2+0x7f365dde],ebx
  40d6cf:	(bad)  
  40d6d0:	fbstp  TBYTE PTR [eax-0x17]
  40d6d3:	lea    esp,[eax+0x7d]
  40d6d6:	inc    edx
  40d6d7:	fnstsw WORD PTR [ebp-0x7708d9c5]
  40d6dd:	jecxz  0x40d756
  40d6df:	cdq    
  40d6e0:	pop    edi
  40d6e1:	ror    DWORD PTR [esi+edx*4+0x25ed3535],0x16
  40d6e9:	addr16 push eax
  40d6eb:	lods   al,BYTE PTR ds:[esi]
  40d6ec:	leave  
  40d6ed:	dec    esp
  40d6ee:	repnz ficomp WORD PTR [edi-0x4f1763e5]
  40d6f5:	pop    edi
  40d6f6:	repnz cmp BYTE PTR [ebx],cl
  40d6f9:	fs mov edi,0x190bfe5c
  40d6ff:	stos   DWORD PTR es:[edi],eax
  40d700:	repnz adc DWORD PTR [esi+0x7f],edi
  40d704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d705:	xchg   esi,eax
  40d706:	jbe    0x40d71a
  40d708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d709:	(bad)  
  40d70a:	(bad)  
  40d70b:	jmp    0xfafb489b
  40d710:	arpl   WORD PTR [ecx-0x4ab80c9a],bp
  40d716:	fist   DWORD PTR [ebx]
  40d718:	ret    0x3dbf
  40d71b:	cmp    bl,BYTE PTR [ebx-0x41012390]
  40d721:	pop    es
  40d722:	mov    ds:0x21dabef6,eax
  40d727:	mov    al,0x52
  40d729:	retf   0x4c97
  40d72c:	cld    
  40d72d:	mov    ds:0xb45c1ab,al
  40d732:	das    
  40d733:	test   eax,0x878f7a24
  40d738:	sbb    edi,ecx
  40d73a:	cmp    bh,dl
  40d73c:	pop    ebp
  40d73d:	push   ecx
  40d73e:	xchg   esp,eax
  40d73f:	in     al,dx
  40d740:	jge    0x40d773
  40d742:	dec    ebx
  40d743:	adc    al,0x77
  40d745:	pusha  
  40d746:	jp     0x40d724
  40d748:	cmc    
  40d749:	loope  0x40d773
  40d74b:	jmp    0xa6e3:0x47ff098b
  40d752:	push   edi
  40d753:	xchg   edi,eax
  40d754:	ja     0x40d722
  40d756:	sbb    BYTE PTR [edx],ch
  40d758:	pop    edi
  40d759:	sbb    DWORD PTR [ebx+edx*8],edx
  40d75c:	fcom   DWORD PTR [ebx+0x24]
  40d75f:	push   ebp
  40d760:	push   edx
  40d761:	inc    esi
  40d762:	loopne 0x40d78d
  40d764:	shl    DWORD PTR [ebx-0x330912bf],0x30
  40d76b:	aad    0xcc
  40d76d:	inc    ecx
  40d76e:	jne    0x40d703
  40d770:	sub    cl,cl
  40d772:	ds ins BYTE PTR es:[edi],dx
  40d774:	mov    eax,ds:0xdda20db3
  40d779:	pop    eax
  40d77a:	jne    0x40d764
  40d77c:	inc    BYTE PTR [ebp-0x7b5565ff]
  40d782:	mov    BYTE PTR [edi+0x57],cl
  40d785:	adc    eax,0x24009588
  40d78a:	adc    esi,esp
  40d78c:	push   ebx
  40d78d:	sbb    al,0x5a
  40d78f:	in     al,0x27
  40d791:	inc    esi
  40d792:	xor    BYTE PTR [ebx],bh
  40d794:	sbb    DWORD PTR [eax-0x3c97a6b6],ecx
  40d79a:	cli    
  40d79b:	or     al,0x76
  40d79d:	xor    ah,BYTE PTR [edi*8+0x512e2770]
  40d7a4:	dec    esi
  40d7a5:	lods   al,BYTE PTR ds:[esi]
  40d7a6:	mov    eax,ds:0x52d2d6bf
  40d7ab:	inc    ecx
  40d7ac:	cmp    eax,0x5dacb135
  40d7b1:	adc    dl,bl
  40d7b3:	pop    esp
  40d7b4:	pop    ecx
  40d7b5:	mov    al,0x87
  40d7b7:	sbb    bl,bh
  40d7b9:	lea    eax,[esi+eax*8+0x32]
  40d7bd:	mov    al,0x53
  40d7bf:	add    BYTE PTR [edi+edx*8-0x1a342db0],0xd2
  40d7c7:	lods   eax,DWORD PTR ds:[esi]
  40d7c8:	or     bl,al
  40d7ca:	in     eax,dx
  40d7cb:	xchg   edi,eax
  40d7cc:	mov    edi,0xcb54af19
  40d7d1:	jb     0x40d78b
  40d7d3:	mov    bh,0x5d
  40d7d5:	jne    0x40d7af
  40d7d7:	imul   edx,esi,0xefe3a66d
  40d7dd:	ret    0x7e5b
  40d7e0:	push   ecx
  40d7e1:	lock gs pop ss
  40d7e4:	jb     0x40d7fc
  40d7e6:	inc    eax
  40d7e7:	xchg   ebx,eax
  40d7e8:	outs   dx,DWORD PTR ds:[esi]
  40d7e9:	or     eax,0x4491928c
  40d7ee:	mov    WORD PTR [eax-0x13],ss
  40d7f1:	out    0x57,al
  40d7f3:	jp     0x40d84d
  40d7f5:	int3   
  40d7f6:	fs mov bl,0xf2
  40d7f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7fa:	ja     0x40d861
  40d7fc:	cmp    eax,0xcca4d316
  40d801:	adc    DWORD PTR [ecx+0x61],edx
  40d804:	or     al,0xcb
  40d806:	repz mov bh,0x97
  40d809:	adc    al,0x26
  40d80b:	pop    esp
  40d80c:	mov    eax,ds:0xb1d164b0
  40d811:	xchg   edx,eax
  40d812:	outs   dx,BYTE PTR ds:[esi]
  40d813:	sar    BYTE PTR [edx-0x546a5792],0xcf
  40d81a:	lahf   
  40d81b:	jp     0x40d860
  40d81d:	iret   
  40d81e:	pushf  
  40d81f:	inc    edi
  40d820:	and    DWORD PTR [edi-0x5c257bc0],ebx
  40d826:	int    0x46
  40d828:	xor    eax,DWORD PTR [ebx-0x270d8c0e]
  40d82e:	lds    ecx,FWORD PTR [edx-0x62]
  40d831:	sahf   
  40d832:	sub    al,BYTE PTR [esi+ebx*4+0x514100f]
  40d839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d83a:	fwait
  40d83b:	retf   0x562b
  40d83e:	rcr    edi,0xb5
  40d841:	js     0x40d891
  40d843:	lea    esi,[edx+0x5919ab5d]
  40d849:	mov    ah,0x47
  40d84b:	dec    esi
  40d84d:	js     0x40d8bc
  40d84f:	or     dh,BYTE PTR ds:0x90a88e87
  40d855:	cmp    al,0x3c
  40d857:	pusha  
  40d858:	pop    ecx
  40d859:	mov    al,dh
  40d85b:	std    
  40d85c:	or     al,BYTE PTR [edi+0x2bde1623]
  40d862:	repnz dec esp
  40d864:	out    dx,eax
  40d865:	fistp  DWORD PTR [esi+0x74d45329]
  40d86b:	xchg   dx,ax
  40d86d:	xchg   edx,eax
  40d86e:	mov    dl,BYTE PTR [ecx+0x4a]
  40d871:	popf   
  40d872:	dec    edi
  40d873:	fdiv   QWORD PTR ds:0xeafefa5d
  40d879:	cwde   
  40d87a:	cdq    
  40d87b:	cwde   
  40d87c:	jl     0x40d8cb
  40d87e:	aam    0xc2
  40d880:	test   al,0x46
  40d882:	or     ebx,DWORD PTR [esi+0x68e17aa]
  40d888:	ret    0xb5dc
  40d88b:	cwde   
  40d88c:	lahf   
  40d88d:	stc    
  40d88e:	pop    ds
  40d88f:	repz scas eax,DWORD PTR es:[edi]
  40d891:	ins    DWORD PTR es:[edi],dx
  40d892:	hlt    
  40d893:	aad    0x6
  40d895:	pop    ds
  40d896:	jp     0x40d912
  40d898:	adc    DWORD PTR [eax-0x7716c2],edx
  40d89e:	ja     0x40d857
  40d8a0:	add    eax,0x6c32db38
  40d8a5:	push   0x74accb3c
  40d8aa:	sub    DWORD PTR [ebp-0x7dbc3af],0x2dcbf2b4
  40d8b4:	cmp    DWORD PTR ss:[ecx+eiz*8-0x71],ecx
  40d8b9:	es cmp eax,0x62955677
  40d8bf:	mov    ebx,0x51c06ad4
  40d8c4:	jg     0x40d84f
  40d8c6:	dec    eax
  40d8c7:	cli    
  40d8c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8c9:	cmp    BYTE PTR [ebx-0x4e],ah
  40d8cc:	test   eax,0x5d8c345b
  40d8d1:	or     eax,0x4792842a
  40d8d6:	jge    0x40d8a0
  40d8d8:	push   edx
  40d8d9:	inc    ebp
  40d8da:	gs imul ebx,eax,0x4d
  40d8de:	(bad)  
  40d8df:	mov    ds:0x5e44d0bf,al
  40d8e4:	sub    ebx,edx
  40d8e6:	fcmovnu st,st(5)
  40d8e8:	jl     0x40d8dc
  40d8ea:	fisubr DWORD PTR [edi-0x6c]
  40d8ed:	sti    
  40d8ee:	xor    edx,DWORD PTR [ecx+0x2117940d]
  40d8f4:	mov    al,ds:0xd6c806c7
  40d8f9:	and    BYTE PTR [edx-0x32],ch
  40d8fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8fd:	push   0x94b1ab96
  40d902:	add    DWORD PTR [edi],edi
  40d904:	aaa    
  40d905:	rol    DWORD PTR [edx+0x3786148b],cl
  40d90b:	sub    ebx,DWORD PTR [eax]
  40d90d:	mov    cl,0x95
  40d90f:	inc    esi
  40d910:	add    bl,bl
  40d912:	icebp  
  40d913:	lea    edi,[ecx-0x6b]
  40d916:	sub    ebx,DWORD PTR [edx-0x423a6a9e]
  40d91c:	sti    
  40d91d:	lods   eax,DWORD PTR ds:[esi]
  40d91e:	fild   DWORD PTR [ecx-0x4e26a93c]
  40d924:	jae    0x40d8a6
  40d926:	popf   
  40d927:	xchg   esi,eax
  40d928:	add    ebx,DWORD PTR [ebx-0x2b3ee09c]
  40d92e:	loopne 0x40d9a5
  40d930:	call   0xf2c84e83
  40d935:	loopne 0x40d98c
  40d937:	and    cl,al
  40d939:	xchg   edi,eax
  40d93a:	or     esi,DWORD PTR [ecx+0x28081f5d]
  40d940:	loope  0x40d959
  40d942:	pop    edi
  40d943:	push   0xa9a85dfa
  40d948:	test   DWORD PTR [ebx-0x20adae7b],0x730f127b
  40d952:	or     ebp,DWORD PTR [eax-0x141ba555]
  40d958:	inc    ecx
  40d959:	mov    ebx,0x3dffa542
  40d95e:	rol    DWORD PTR [esi+0x6f],1
  40d961:	pushf  
  40d962:	repnz xor ah,BYTE PTR [esp+edx*4-0x24]
  40d967:	inc    ebp
  40d968:	push   0x830d63a4
  40d96d:	pop    ebp
  40d96e:	jnp    0x40d991
  40d970:	scas   eax,DWORD PTR es:[edi]
  40d971:	mov    bh,bl
  40d973:	sub    al,0x3c
  40d975:	outs   dx,BYTE PTR ds:[esi]
  40d976:	jmp    0xa86b7ba0
  40d97b:	push   ebp
  40d97c:	mov    al,ds:0x78f6406c
  40d981:	lock ret 0x2550
  40d985:	sub    cl,BYTE PTR [edi]
  40d987:	sbb    eax,0x99fea500
  40d98c:	mov    WORD PTR [edi],gs
  40d98e:	sbb    bh,BYTE PTR [ebx-0x2c]
  40d991:	push   ss
  40d992:	pusha  
  40d993:	push   esi
  40d994:	(bad)  
  40d995:	test   DWORD PTR [ebp*4+0x3b2f92da],ebp
  40d99c:	jle    0x40d933
  40d99e:	cmp    ah,ah
  40d9a0:	mov    bh,0x32
  40d9a2:	add    BYTE PTR [ebp+0x28],dh
  40d9a5:	sti    
  40d9a6:	imul   edx,DWORD PTR [esp+ebx*8],0xffffff9c
  40d9aa:	scas   eax,DWORD PTR es:[edi]
  40d9ab:	pop    esp
  40d9ac:	inc    ebx
  40d9ad:	in     al,dx
  40d9ae:	inc    esp
  40d9af:	loope  0x40da16
  40d9b1:	std    
  40d9b2:	and    BYTE PTR [ebx-0x191e0112],al
  40d9b8:	daa    
  40d9b9:	inc    eax
  40d9ba:	inc    ebp
  40d9bb:	mov    al,0xc4
  40d9bd:	sbb    eax,0xdf294d8d
  40d9c2:	inc    ebp
  40d9c3:	(bad)  
  40d9c4:	ret    0x171
  40d9c7:	aam    0xbe
  40d9c9:	cdq    
  40d9ca:	retf   0x537
  40d9cd:	inc    edi
  40d9ce:	mov    cs,esp
  40d9d0:	and    ch,BYTE PTR [esi]
  40d9d2:	cli    
  40d9d3:	or     BYTE PTR [edi-0x3e0653bb],dl
  40d9d9:	imul   eax,DWORD PTR [ebp-0x26],0x13
  40d9dd:	ins    BYTE PTR es:[edi],dx
  40d9de:	adc    eax,0xb27eaaa5
  40d9e3:	pop    ecx
  40d9e4:	add    eax,0xd8ce7202
  40d9e9:	xor    DWORD PTR [edi+0x47a1b1c],esi
  40d9ef:	ins    BYTE PTR es:[edi],dx
  40d9f0:	jb     0x40da5c
  40d9f2:	push   ds
  40d9f3:	mov    ds:0xef5a2031,eax
  40d9f8:	cs or  ch,dh
  40d9fb:	test   BYTE PTR [eax],dh
  40d9fd:	mov    dl,0xd9
  40d9ff:	mov    bl,BYTE PTR [ecx+0x3dde7d94]
  40da05:	cmp    al,0x9b
  40da07:	jl     0x40da31
  40da09:	add    BYTE PTR [eax+0x2835e9b9],dh
  40da0f:	test   eax,0x5993f525
  40da14:	xor    DWORD PTR [esi+0x289384c],esi
  40da1a:	(bad)  
  40da1b:	adc    DWORD PTR [ebp-0xc23e57],edx
  40da21:	stc    
  40da22:	dec    edi
  40da23:	inc    esp
  40da24:	jne    0x40da8b
  40da26:	test   ebp,0xcdb69f6d
  40da2c:	leave  
  40da2d:	and    DWORD PTR [esi-0x6d],0xffffffc5
  40da31:	jmp    0x6d5b2a32
  40da36:	adc    eax,0xf0cab0b5
  40da3b:	(bad)  
  40da3c:	push   edi
  40da3d:	jecxz  0x40da76
  40da3f:	jo     0x40dabc
  40da41:	lods   eax,DWORD PTR ds:[esi]
  40da42:	xlat   BYTE PTR ds:[ebx]
  40da43:	lea    esi,[eax-0x76]
  40da46:	sahf   
  40da47:	xchg   ebx,eax
  40da48:	lds    edx,FWORD PTR [edi]
  40da4a:	rcl    BYTE PTR [ebx-0x5d],0x75
  40da4e:	sti    
  40da4f:	sub    al,0x7c
  40da51:	push   ebp
  40da52:	(bad)  
  40da53:	enter  0x8454,0x9f
  40da57:	mov    edx,0x2cc8927
  40da5c:	mov    edi,0xc83091f5
  40da61:	ja     0x40da7f
  40da63:	div    DWORD PTR [eax+0x46]
  40da66:	sahf   
  40da67:	adc    DWORD PTR [ebx],0x96bd2cab
  40da6d:	xor    ebx,0x44cb4d96
  40da73:	sbb    DWORD PTR [esi+0x4cda84c1],esp
  40da79:	mov    dl,dl
  40da7b:	jne    0x40dac8
  40da7d:	fdiv   QWORD PTR [ebx-0x2a208bc9]
  40da83:	and    esp,DWORD PTR [ecx+0x2ec2a5cb]
  40da89:	shl    DWORD PTR [eax+0x313abb5b],1
  40da8f:	push   0xffffffe3
  40da91:	out    dx,eax
  40da92:	dec    edx
  40da93:	adc    DWORD PTR [edi],esp
  40da95:	jl     0x40da80
  40da97:	int3   
  40da98:	(bad)  
  40da99:	sbb    edx,esp
  40da9b:	outs   dx,DWORD PTR ds:[esi]
  40da9c:	pop    ecx
  40da9d:	call   0x646c:0xf6ad000e
  40daa4:	inc    ecx
  40daa5:	xchg   esi,eax
  40daa6:	shr    BYTE PTR [edx+0x3e],cl
  40daa9:	dec    edx
  40daaa:	jmp    0xf47cd9b8
  40daaf:	psubw  mm0,QWORD PTR [edx+0x1d]
  40dab3:	mov    BYTE PTR [ecx+0x7bf1311],dh
  40dab9:	xchg   ebx,eax
  40daba:	(bad)  
  40dabb:	(bad)  
  40dabd:	push   ds
  40dabe:	jne    0x40da81
  40dac0:	sub    eax,0x76e52af8
  40dac5:	mov    DWORD PTR [esi-0x5efaacc7],edx
  40dacb:	push   eax
  40dacc:	mov    eax,0x7c719168
  40dad1:	mov    bh,0x21
  40dad3:	test   BYTE PTR [edx],0xb
  40dad6:	sub    BYTE PTR [ebp-0x36],0x9
  40dada:	add    al,0x75
  40dadc:	mov    al,ds:0xdd4c7e9
  40dae1:	data16 test bh,bh
  40dae4:	sub    eax,0x2da2ad57
  40dae9:	shl    esp,cl
  40daeb:	jl     0x40dab8
  40daed:	mov    BYTE PTR [eax+0xcd2e523],al
  40daf3:	xor    eax,0x5bf66dc9
  40daf8:	pop    esp
  40daf9:	jnp    0x40db06
  40dafb:	and    edi,ebx
  40dafd:	rcl    ch,1
  40daff:	and    DWORD PTR [ecx+0x374e61a4],0x51
  40db06:	xlat   BYTE PTR ds:[ebx]
  40db07:	or     eax,0x4530b525
  40db0c:	push   edi
  40db0d:	aas    
  40db0e:	inc    ebp
  40db0f:	and    ch,BYTE PTR [eax-0xd5d378c]
  40db15:	fstp   DWORD PTR [ecx]
  40db17:	aas    
  40db18:	push   cs
  40db19:	add    BYTE PTR [esi+ecx*4],al
  40db1c:	mov    dl,0x37
  40db1e:	sub    DWORD PTR [ecx+0x3c],0xffffffac
  40db22:	cmp    eax,0x546f232e
  40db27:	add    eax,0x92fa5195
  40db2c:	adc    bh,BYTE PTR [esi+0x28b15b2f]
  40db32:	adc    eax,0x34a920e0
  40db37:	int3   
  40db38:	fild   QWORD PTR [ebx]
  40db3a:	pop    ss
  40db3b:	js     0x40db8d
  40db3d:	loope  0x40db5b
  40db3f:	xlat   BYTE PTR ds:[ebx]
  40db40:	(bad)  
  40db41:	inc    eax
  40db42:	cmp    edx,edx
  40db44:	xchg   edx,eax
  40db45:	add    BYTE PTR [ebp-0x3b67c222],dh
  40db4b:	cdq    
  40db4c:	pop    es
  40db4d:	dec    esi
  40db4e:	jnp    0x40db3b
  40db50:	ret    0xdc5a
  40db53:	or     cl,BYTE PTR [ecx]
  40db55:	sub    al,0x11
  40db57:	mov    bl,BYTE PTR [esi]
  40db59:	xchg   esi,eax
  40db5a:	or     eax,0x4c9e52c1
  40db5f:	jno    0x40db77
  40db61:	mov    ah,0x3d
  40db63:	mov    edx,DWORD PTR [ebp+0x7ef8658d]
  40db69:	adc    ah,BYTE PTR [ecx]
  40db6b:	and    BYTE PTR [edx],dl
  40db6d:	std    
  40db6e:	or     cx,ax
  40db71:	dec    esp
  40db72:	dec    ecx
  40db73:	mov    bl,0xc2
  40db75:	(bad)  [edx-0x2570ddb1]
  40db7b:	aas    
  40db7c:	idiv   DWORD PTR [ecx-0x59a76632]
  40db82:	mov    ecx,0x8ba848f0
  40db87:	xor    esp,esp
  40db89:	fstp   QWORD PTR [esi+ebp*4]
  40db8c:	pop    eax
  40db8d:	dec    esp
  40db8e:	stos   BYTE PTR es:[edi],al
  40db8f:	jg     0x40dbb3
  40db91:	ins    BYTE PTR es:[edi],dx
  40db92:	test   DWORD PTR [eax+0x35],0xf65a1964
  40db99:	iret   
  40db9a:	mov    ah,0x3
  40db9c:	out    0x53,al
  40db9e:	dec    edx
  40db9f:	js     0x40dc11
  40dba1:	jle    0x40dc19
  40dba3:	jmp    0xd3574ae9
  40dba8:	push   ss
  40dba9:	neg    DWORD PTR [ebx+0xa1489da]
  40dbaf:	dec    ebx
  40dbb0:	call   0x17bf:0x8bcdfd2b
  40dbb7:	push   ss
  40dbb8:	cmp    DWORD PTR [ecx+0x59],ecx
  40dbbb:	push   0x7d784bd6
  40dbc0:	pop    ebx
  40dbc1:	(bad)  
  40dbc2:	shl    BYTE PTR [edx-0x63cc0f4d],0x77
  40dbc9:	mov    cl,0xfb
  40dbcb:	jge    0x40dc30
  40dbcd:	pop    esp
  40dbce:	es fcom st(6)
  40dbd1:	js     0x40dbc6
  40dbd3:	cmc    
  40dbd4:	pop    ss
  40dbd5:	psubd  mm0,QWORD PTR [esi+0x24805389]
  40dbdc:	jne    0x40dc1d
  40dbde:	and    eax,0x2e8cbaeb
  40dbe3:	(bad)  [edi]
  40dbe5:	test   al,0x78
  40dbe7:	cs jp  0x40dc0b
  40dbea:	ret    
  40dbeb:	inc    ebx
  40dbec:	push   ecx
  40dbed:	push   ecx
  40dbee:	fwait
  40dbef:	lods   al,BYTE PTR ds:[esi]
  40dbf0:	sub    dl,0x6f
  40dbf3:	call   0x23600a81
  40dbf8:	add    eax,0x52ba1134
  40dbfd:	mov    WORD PTR [esi+0x4ebd772a],cs
  40dc03:	addr16 adc eax,0x9f3247da
  40dc09:	retf   0x64ee
  40dc0c:	mov    eax,0x681c808e
  40dc11:	jb     0x40dbbb
  40dc13:	jl     0x40dbe5
  40dc15:	pop    ds
  40dc16:	dec    ebp
  40dc17:	mov    al,BYTE PTR [eax-0x8]
  40dc1a:	jmp    0x42198e68
  40dc1f:	inc    esi
  40dc20:	mov    al,0xf6
  40dc22:	test   BYTE PTR [edx],bl
  40dc24:	dec    eax
  40dc25:	addr16 dec ebx
  40dc27:	push   es
  40dc28:	xor    al,0x2b
  40dc2a:	mov    ds:0x71a9bc5a,eax
  40dc2f:	rcl    eax,0xa6
  40dc32:	jmp    0x9986:0x3573e9eb
  40dc39:	xor    al,BYTE PTR [edx+0x65]
  40dc3c:	add    eax,0xf0e33ca2
  40dc41:	lds    ebp,FWORD PTR [edi-0x156b37e9]
  40dc47:	call   0xb7d34f5e
  40dc4c:	int3   
  40dc4d:	pushf  
  40dc4e:	stos   BYTE PTR es:[edi],al
  40dc4f:	mov    dl,0xe4
  40dc51:	sti    
  40dc52:	fwait
  40dc53:	(bad)  
  40dc54:	sti    
  40dc55:	xor    al,0xda
  40dc57:	xchg   ebp,eax
  40dc58:	xchg   ebx,eax
  40dc59:	cmp    dh,BYTE PTR [edx+0x5e]
  40dc5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc5d:	int3   
  40dc5e:	push   es
  40dc5f:	push   eax
  40dc60:	mov    esi,0xa060ca59
  40dc65:	ins    DWORD PTR es:[edi],dx
  40dc66:	sub    al,0x83
  40dc68:	out    dx,al
  40dc69:	js     0x40dc38
  40dc6b:	ins    BYTE PTR es:[edi],dx
  40dc6c:	mov    bh,0x4c
  40dc6e:	fisttp DWORD PTR [edi]
  40dc70:	lods   eax,DWORD PTR ds:[esi]
  40dc71:	mov    eax,0x49b02522
  40dc76:	pop    ecx
  40dc77:	push   cs
  40dc78:	and    eax,0xa52a753c
  40dc7d:	in     eax,0x9e
  40dc7f:	(bad)  [eax-0x25]
  40dc82:	and    ecx,esi
  40dc84:	inc    ebp
  40dc85:	in     al,0x4e
  40dc87:	ds popf 
  40dc89:	jno    0x40dcb4
  40dc8b:	pop    ecx
  40dc8c:	(bad)  
  40dc8d:	xlat   BYTE PTR ds:[ebx]
  40dc8e:	push   esp
  40dc8f:	xor    esi,DWORD PTR [edx+0x3d]
  40dc92:	mov    bl,0x64
  40dc94:	ins    BYTE PTR es:[edi],dx
  40dc95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc96:	mov    dl,BYTE PTR [ecx-0x1f]
  40dc99:	shl    DWORD PTR [edi-0x2cf73325],0x3e
  40dca0:	dec    esp
  40dca1:	sub    BYTE PTR [ecx],dh
  40dca3:	icebp  
  40dca4:	fs jecxz 0x40dc2f
  40dca7:	adc    DWORD PTR [edi],esp
  40dca9:	enter  0x6360,0xad
  40dcad:	sbb    al,0x95
  40dcaf:	fcom   QWORD PTR [edi]
  40dcb1:	ins    BYTE PTR es:[edi],dx
  40dcb2:	sbb    edx,esi
  40dcb4:	sub    BYTE PTR [ecx],ah
  40dcb6:	cwde   
  40dcb7:	and    cl,0xf9
  40dcba:	in     al,0xa3
  40dcbc:	jg     0x40dd2b
  40dcbe:	sub    eax,0xfcd94231
  40dcc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcc4:	xchg   ebx,eax
  40dcc5:	mov    al,ds:0xcef02e80
  40dcca:	lock stos BYTE PTR es:[edi],al
  40dccc:	mov    ds:0x41298ee4,eax
  40dcd1:	adc    BYTE PTR [ebp+0x5a],0xf5
  40dcd5:	stos   BYTE PTR es:[edi],al
  40dcd6:	mov    al,0xd0
  40dcd8:	and    eax,0xb8905cfd
  40dcdd:	test   al,0x22
  40dcdf:	into   
  40dce0:	call   0x67cc8848
  40dce5:	fwait
  40dce6:	sub    ebx,DWORD PTR [ebx+0x30]
  40dce9:	cmp    ah,dl
  40dceb:	dec    edx
  40dcec:	test   DWORD PTR [edi+eax*4],esp
  40dcef:	rcl    esp,cl
  40dcf1:	aaa    
  40dcf2:	faddp  st(6),st
  40dcf5:	fxch   st(2)
  40dcf7:	pop    esi
  40dcf8:	dec    BYTE PTR [ecx+0x31]
  40dcfb:	ds aad 0xad
  40dcfe:	stos   DWORD PTR es:[edi],eax
  40dcff:	call   0x328c0ba5
  40dd04:	test   DWORD PTR [ecx-0x623ae36f],eax
  40dd0a:	dec    eax
  40dd0b:	xor    ecx,DWORD PTR [edi+0x3e]
  40dd0e:	imul   edi,esi,0x211a2a6f
  40dd14:	push   es
  40dd15:	(bad)  [edi+0x63]
  40dd18:	adc    eax,0xe7127d54
  40dd1d:	mov    ch,0xd7
  40dd1f:	push   ebx
  40dd20:	lds    ecx,FWORD PTR [edi]
  40dd22:	jg     0x40dd98
  40dd24:	mov    ch,BYTE PTR [ebx+0x77]
  40dd27:	shl    BYTE PTR [ebx],1
  40dd29:	push   esp
  40dd2a:	clc    
  40dd2b:	aam    0x3d
  40dd2d:	rcl    esi,0x52
  40dd30:	es jo  0x40dd93
  40dd33:	jge    0x40dd1b
  40dd35:	dec    esi
  40dd36:	or     BYTE PTR [edi+eiz*8+0x77],al
  40dd3a:	jp     0x40dd9c
  40dd3c:	cmp    eax,0x62797dc7
  40dd41:	jo     0x40dd2e
  40dd43:	inc    eax
  40dd44:	in     al,0x26
  40dd46:	aad    0x28
  40dd48:	or     al,BYTE PTR [esi]
  40dd4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd4b:	shl    DWORD PTR [ebp+eiz*4-0x80],cl
  40dd4f:	adc    cl,BYTE PTR [esi+0x114c7054]
  40dd55:	mov    al,ds:0x8738b99
  40dd5a:	addr16 dec edi
  40dd5c:	jmp    0x4915:0xc2ecbcf5
  40dd63:	clc    
  40dd64:	dec    ebp
  40dd65:	enter  0x983b,0xfb
  40dd69:	scas   al,BYTE PTR es:[edi]
  40dd6a:	xor    BYTE PTR [edi],ah
  40dd6c:	jge    0x40dde7
  40dd6e:	mov    eax,0xdcb0210c
  40dd73:	mov    esp,0x1dce4ad
  40dd78:	and    al,0x9e
  40dd7a:	test   bh,al
  40dd7c:	rcl    BYTE PTR [edx+0x2],1
  40dd7f:	icebp  
  40dd80:	jns    0x40ddc3
  40dd82:	cmp    BYTE PTR [edx],bl
  40dd84:	push   esp
  40dd85:	popf   
  40dd86:	or     ebp,DWORD PTR ds:0xf2f61dbb
  40dd8c:	mov    bl,0x18
  40dd8e:	mov    esp,0x7bb46af6
  40dd93:	cmp    ecx,ebp
  40dd95:	jmp    0x40ddf5
  40dd97:	push   ebp
  40dd98:	daa    
  40dd99:	pop    ds
  40dd9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd9b:	test   edi,edx
  40dd9d:	imul   eax,DWORD PTR [ebx],0x8dbda355
  40dda3:	mov    al,ds:0x3f2bf73b
  40dda8:	jns    0x40dd68
  40ddaa:	fmul   st(0),st
  40ddac:	imul   eax,esi,0x33f85c25
  40ddb2:	sub    eax,0x7ba7a407
  40ddb7:	popf   
  40ddb8:	mov    cl,dh
  40ddba:	push   ecx
  40ddbb:	mov    al,0xef
  40ddbd:	adc    ch,BYTE PTR [ebx-0x2f]
  40ddc0:	(bad)  
  40ddc2:	add    dl,bl
  40ddc4:	ss add eax,0x65e9860
  40ddca:	sbb    al,0x35
  40ddcc:	sbb    eax,0x5983acb2
  40ddd1:	jnp    0x40dda9
  40ddd3:	inc    ebp
  40ddd4:	jae    0x40de01
  40ddd6:	xor    ah,bh
  40ddd8:	loope  0x40dd8e
  40ddda:	in     al,dx
  40dddb:	aad    0x44
  40dddd:	cmp    BYTE PTR [ecx+edi*8+0x7c],bh
  40dde1:	and    al,0xb2
  40dde3:	add    BYTE PTR [edx+0x2a0063b],bl
  40dde9:	ins    BYTE PTR es:[edi],dx
  40ddea:	pop    esi
  40ddeb:	jno    0x40de1e
  40dded:	test   eax,0x61b5e3ba
  40ddf2:	clc    
  40ddf3:	cmp    eax,0xdf96a194
  40ddf8:	fisttp WORD PTR [ecx]
  40ddfa:	mov    DWORD PTR [eax],edi
  40ddfc:	sbb    esi,0xa67415e5
  40de02:	mov    eax,0x8b0133a3
  40de07:	mov    ds:0xdd5b8bbb,eax
  40de0c:	pop    esp
  40de0d:	imul   edi,DWORD PTR [ecx+0x47],0x5a
  40de11:	push   ss
  40de12:	into   
  40de13:	cli    
  40de14:	pop    edx
  40de15:	dec    ebx
  40de16:	xchg   ecx,eax
  40de17:	inc    edx
  40de18:	sahf   
  40de19:	mov    bh,0x31
  40de1b:	loop   0x40ddff
  40de1d:	jg     0x40de88
  40de1f:	and    ecx,DWORD PTR [ebx+0xccdf33a]
  40de25:	sub    BYTE PTR [ebp+edx*1-0x45],ch
  40de29:	bound  esi,QWORD PTR [edx]
  40de2b:	add    eax,0x92632984
  40de30:	push   ecx
  40de31:	icebp  
  40de32:	fist   DWORD PTR ds:0x81ba10b7
  40de38:	xchg   ebp,eax
  40de39:	data16 xor al,0xfd
  40de3c:	(bad)  
  40de3d:	(bad)  
  40de3e:	pop    ebx
  40de3f:	cdq    
  40de40:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de42:	js     0x40de12
  40de44:	loop   0x40de87
  40de46:	mov    ds:0xe5ac59b0,eax
  40de4b:	inc    edx
  40de4c:	test   eax,0xd49f0715
  40de51:	cmp    BYTE PTR [edx],0xf1
  40de54:	sbb    eax,0xceadc050
  40de59:	xchg   DWORD PTR [ebp-0x2],ecx
  40de5c:	and    ah,BYTE PTR ds:0x29a84e97
  40de62:	int3   
  40de63:	and    dl,0x2d
  40de66:	mov    bh,BYTE PTR [ebx]
  40de68:	inc    ecx
  40de69:	sbb    ebp,DWORD PTR [edi+0x60d5ed04]
  40de6f:	(bad)  
  40de70:	js     0x40dec7
  40de72:	nop
  40de73:	inc    eax
  40de74:	ds pop edi
  40de76:	pushf  
  40de77:	xchg   edx,eax
  40de78:	dec    ebx
  40de79:	pop    esp
  40de7b:	test   eax,0x4688007d
  40de80:	pop    ebx
  40de81:	xchg   esp,eax
  40de82:	lds    edx,FWORD PTR [ecx-0x5f4118ca]
  40de88:	xor    DWORD PTR [ebx],esp
  40de8a:	mov    ds:0x66806bf9,eax
  40de8f:	aad    0x16
  40de91:	inc    ebx
  40de92:	ja     0x40de49
  40de94:	dec    ebx
  40de95:	fdivr  st,st(7)
  40de97:	in     al,0x4e
  40de99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de9a:	mov    esi,0xa12d788f
  40de9f:	sbb    DWORD PTR [esp+edx*1],ebp
  40dea2:	mov    ecx,0x25c8587b
  40dea7:	ja     0x40de9d
  40dea9:	pmovmskb esp,mm5
  40deac:	and    dl,BYTE PTR [edi+0x54]
  40deaf:	mov    dh,0x26
  40deb1:	test   BYTE PTR [ebp+0x1a],al
  40deb4:	rcl    DWORD PTR [ecx+0x25],0xb0
  40deb8:	lahf   
  40deb9:	and    DWORD PTR [edi+0x4bb547ce],ecx
  40debf:	fdiv   DWORD PTR [edi-0x29]
  40dec2:	inc    esp
  40dec3:	cmovp  esp,edx
  40dec6:	out    0xcc,al
  40dec8:	or     eax,0xdc3e1716
  40decd:	mov    eax,ds:0x16908e7c
  40ded2:	xchg   ebp,eax
  40ded3:	jecxz  0x40deff
  40ded5:	jp     0x40dec5
  40ded7:	ror    DWORD PTR [ebx],1
  40ded9:	cwde   
  40deda:	sbb    al,0x8b
  40dedc:	pop    ebx
  40dedd:	cmp    edi,ebx
  40dedf:	or     esi,DWORD PTR ds:0x1e9aefa9
  40dee5:	and    DWORD PTR [ebp+0x7],edx
  40dee8:	test   DWORD PTR [esp+ecx*8+0x47],ecx
  40deec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40deed:	jg     0x40dea1
  40deef:	fwait
  40def0:	push   edx
  40def1:	jns    0x40df10
  40def3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40def4:	pop    edx
  40def5:	sub    al,0xc3
  40def7:	jns    0x40df3a
  40def9:	dec    esi
  40defa:	inc    ebp
  40defb:	sbb    DWORD PTR [eax+edx*4+0x19],0x16
  40df00:	dec    ebp
  40df01:	(bad)  
  40df02:	dec    eax
  40df03:	int    0xab
  40df05:	cmp    BYTE PTR [ebx],ah
  40df07:	(bad)  
  40df08:	cmp    DWORD PTR [ecx-0x55a5d74],edx
  40df0e:	popf   
  40df0f:	sub    al,0xb3
  40df11:	pop    DWORD PTR [eax+0x1d6cff18]
  40df17:	pusha  
  40df18:	cdq    
  40df19:	and    ch,BYTE PTR [edx+0xa]
  40df1c:	or     eax,0x19b26cbe
  40df21:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40df23:	sbb    DWORD PTR [ebp+0xfe8684b],0x5e
  40df2a:	jl     0x40df10
  40df2c:	inc    ecx
  40df2d:	je     0x40df1f
  40df2f:	mov    dh,0xf5
  40df31:	pop    ds
  40df32:	imul   BYTE PTR [edx]
  40df34:	and    edx,ebx
  40df36:	push   eax
  40df37:	inc    esp
  40df38:	cmp    al,0xc2
  40df3a:	in     al,0xe0
  40df3c:	push   cs
  40df3d:	shl    DWORD PTR [ecx-0x66d55c29],0xeb
  40df44:	out    0x59,al
  40df46:	nop
  40df47:	jmp    0x9af8f295
  40df4c:	push   ecx
  40df4d:	adc    BYTE PTR [esp+ecx*8+0x14],dl
  40df51:	jle    0x40df30
  40df53:	pop    ds
  40df54:	repz push 0xffffffd6
  40df57:	adc    BYTE PTR [eax+0x4f42a53],bl
  40df5d:	mov    eax,ds:0xacb959f8
  40df62:	pop    ebp
  40df63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df64:	fadd   QWORD PTR [ecx+0xfbfbfc8]
  40df6a:	jns    0x40df34
  40df6c:	fmul   QWORD PTR [ebx+0x12]
  40df6f:	bound  cx,DWORD PTR [ebp-0x3]
  40df73:	mov    bl,0xe3
  40df75:	scas   eax,DWORD PTR es:[edi]
  40df76:	in     eax,0xe4
  40df78:	rcl    bh,1
  40df7a:	mov    ds:0x4e6003ad,eax
  40df7f:	add    al,0x3
  40df81:	std    
  40df82:	inc    esi
  40df83:	(bad)  
  40df84:	dec    ecx
  40df85:	sbb    bh,BYTE PTR [edi+0x53]
  40df88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df89:	in     al,dx
  40df8a:	push   edi
  40df8b:	xor    bl,BYTE PTR [edx]
  40df8d:	xchg   edi,eax
  40df8f:	sbb    BYTE PTR [eax],ah
  40df91:	mov    al,ds:0x6a189d74
  40df96:	xchg   ebp,eax
  40df97:	sbb    ah,cl
  40df99:	ret    
  40df9a:	adc    eax,0xb0095420
  40df9f:	ins    DWORD PTR es:[edi],dx
  40dfa0:	mov    eax,0x6b25cd7c
  40dfa5:	sub    BYTE PTR [edx],cl
  40dfa7:	data16 xor bl,BYTE PTR [esi-0x52eff6a1]
  40dfae:	mov    edi,0x2aecdadd
  40dfb3:	jns    0x40dfa3
  40dfb5:	push   cs
  40dfb6:	cmp    al,0x71
  40dfb8:	sub    eax,0x4a124721
  40dfbd:	fdivr  QWORD PTR [ecx-0x6899ade0]
  40dfc3:	inc    edx
  40dfc4:	int    0xab
  40dfc6:	es dec ecx
  40dfc8:	out    0xca,eax
  40dfca:	xchg   BYTE PTR [edx-0x4f],bl
  40dfcd:	(bad)  
  40dfce:	fmul   DWORD PTR [edx-0x3809cd06]
  40dfd4:	cmp    esi,0xa35689c3
  40dfda:	adc    eax,DWORD PTR [esp+eax*8+0x36]
  40dfde:	and    al,0x47
  40dfe0:	or     al,dl
  40dfe2:	call   0x26cfeef1
  40dfe7:	mov    ebp,0x2b095897
  40dfec:	or     ecx,ebx
  40dfee:	push   esi
  40dfef:	lahf   
  40dff0:	neg    DWORD PTR [eax+0x2]
  40dff3:	rcl    BYTE PTR [edx],0x40
  40dff6:	out    0xfa,al
  40dff8:	adc    eax,0xf8a7a53d
  40dffd:	out    dx,eax
  40dffe:	imul   ebp,DWORD PTR [eax+0x6a],0x37
  40e002:	jnp    0x40df88
  40e004:	aam    0xfc
  40e006:	jnp    0x40dffc
  40e008:	xchg   edi,eax
  40e009:	mov    ecx,0x597b1ee2
  40e00e:	mov    ebx,0x516a89e3
  40e013:	js     0x40e082
  40e015:	mov    eax,ds:0xffdc2141
  40e01a:	fist   DWORD PTR [esi+0x66f00f33]
  40e020:	and    DWORD PTR [ebx-0x62],esi
  40e023:	pop    esp
  40e024:	jl     0x40dfa8
  40e026:	lods   eax,DWORD PTR ds:[esi]
  40e027:	hlt    
  40e028:	push   esi
  40e029:	xor    bl,BYTE PTR [esi+ecx*4+0x74]
  40e02d:	sub    eax,0x9c8e4ffd
  40e032:	mov    cl,BYTE PTR [edx-0x6432b48e]
  40e038:	sar    BYTE PTR [eax-0x79],1
  40e03b:	loop   0x40dfe1
  40e03d:	loop   0x40e074
  40e03f:	sbb    ah,0x98
  40e042:	repz rcr eax,cl
  40e045:	adc    al,0x7
  40e047:	imul   ebp,DWORD PTR [ecx-0x57],0xffffffd7
  40e04b:	sar    DWORD PTR [ebx],1
  40e04d:	rol    BYTE PTR [edx-0x20],1
  40e050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e051:	test   BYTE PTR [ebp-0x3],bh
  40e054:	xchg   ebx,eax
  40e055:	pop    ecx
  40e056:	sbb    DWORD PTR [ebx+0x6a4c77da],esi
  40e05c:	xlat   BYTE PTR ds:[ebx]
  40e05d:	and    ebp,DWORD PTR ds:0x9ed8b55c
  40e063:	pop    ecx
  40e064:	jb     0x40e05b
  40e066:	daa    
  40e067:	int3   
  40e068:	int3   
  40e069:	das    
  40e06a:	adc    DWORD PTR [ebp-0x71563b19],ebx
  40e070:	icebp  
  40e071:	pop    ecx
  40e072:	and    eax,0xf15a642d
  40e077:	dec    ebp
  40e078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e079:	mov    esp,DWORD PTR [ecx]
  40e07b:	les    ebp,FWORD PTR [ecx+ebp*4-0x61f272fe]
  40e082:	pop    ds
  40e083:	xchg   edx,eax
  40e084:	ins    BYTE PTR es:[edi],dx
  40e085:	clc    
  40e086:	inc    edi
  40e087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e088:	dec    ecx
  40e089:	sub    ebx,edx
  40e08b:	adc    BYTE PTR [ebx+0x1c],cl
  40e08e:	cmp    eax,0x442ac618
  40e093:	or     al,0xfa
  40e095:	adc    eax,0xdce37d14
  40e09a:	mov    ?,eax
  40e09c:	ret    0x615e
  40e09f:	je     0x40e07a
  40e0a1:	int    0x8c
  40e0a3:	sbb    eax,0xa3ce042f
  40e0a8:	dec    BYTE PTR [ecx+0x52fccf3b]
  40e0ae:	push   esp
  40e0af:	or     eax,0x5683da9e
  40e0b4:	ror    DWORD PTR [ecx],1
  40e0b6:	cmc    
  40e0b7:	(bad)  
  40e0b8:	mov    esp,0xe1baf756
  40e0bd:	mov    eax,ds:0x8beece2d
  40e0c2:	jmp    0xe907:0xe15243a0
  40e0c9:	icebp  
  40e0ca:	cmp    cl,bl
  40e0cc:	xchg   ebp,eax
  40e0cd:	adc    eax,0xef3a04fe
  40e0d2:	in     al,0x67
  40e0d4:	mov    edi,0x4bb5cc61
  40e0d9:	inc    edx
  40e0da:	push   ebp
  40e0db:	mov    ch,0xbb
  40e0dd:	test   al,0x4b
  40e0df:	push   ebx
  40e0e0:	neg    edx
  40e0e2:	push   ebp
  40e0e3:	inc    esi
  40e0e4:	dec    eax
  40e0e5:	outs   dx,BYTE PTR ds:[esi]
  40e0e6:	and    DWORD PTR [esi+0x710eb8ba],0xc111c62c
  40e0f0:	(bad)  
  40e0f1:	mov    esi,0x184c9aa8
  40e0f6:	cwde   
  40e0f7:	out    dx,al
  40e0f8:	sub    BYTE PTR [ebx-0x3],ah
  40e0fb:	xchg   ebp,edx
  40e0fd:	pop    ebx
  40e0fe:	or     dh,ch
  40e100:	rcl    BYTE PTR [edi-0x56],cl
  40e103:	repz das 
  40e105:	retf   
  40e106:	pop    edi
  40e107:	call   0xc295155
  40e10c:	nop
  40e10d:	pop    ecx
  40e10e:	nop
  40e10f:	in     al,0x7c
  40e111:	lods   eax,DWORD PTR ds:[esi]
  40e112:	std    
  40e113:	into   
  40e114:	fist   WORD PTR [eax+0x5d381ec]
  40e11a:	sahf   
  40e11b:	jge    0x40e121
  40e11d:	push   ecx
  40e11e:	adc    eax,0x8ec0cb52
  40e123:	mul    BYTE PTR [esp+eax*1]
  40e126:	ret    
  40e127:	fstp   DWORD PTR [ecx]
  40e129:	cwde   
  40e12a:	or     ecx,DWORD PTR [ecx+0x6a]
  40e12d:	add    BYTE PTR [eax-0x12],bh
  40e130:	mov    ebp,0xb437a658
  40e135:	cvtpi2ps xmm0,QWORD PTR [eax+0x1c]
  40e139:	jge    0x40e10e
  40e13b:	jo     0x40e0c2
  40e13d:	out    0x1,eax
  40e13f:	(bad)  
  40e140:	mov    bh,0x44
  40e142:	xor    al,0xc1
  40e144:	scas   al,BYTE PTR es:[edi]
  40e145:	mov    ds:0x675a4ffd,eax
  40e14a:	mov    al,ds:0xd78b5028
  40e14f:	retf   
  40e150:	mov    cl,cl
  40e152:	jp     0x40e1cd
  40e154:	dec    esp
  40e155:	sbb    al,0x6c
  40e157:	ins    DWORD PTR es:[edi],dx
  40e158:	ins    BYTE PTR es:[edi],dx
  40e159:	mov    ebx,0xf15f3ed
  40e15e:	arpl   cx,di
  40e160:	mov    ah,0x38
  40e162:	fild   WORD PTR [eax+0x79f8f43f]
  40e168:	les    esi,FWORD PTR [eax]
  40e16a:	xchg   ebx,eax
  40e16b:	out    0x6c,eax
  40e16d:	add    eax,0x51eaddfd
  40e172:	adc    al,0x3e
  40e174:	xchg   esi,eax
  40e175:	sub    eax,0xd770b43e
  40e17a:	dec    esi
  40e17b:	xor    DWORD PTR es:[ebp-0x51],esi
  40e17f:	or     edi,DWORD PTR [ebx-0x4e]
  40e182:	icebp  
  40e183:	jmp    0x223e66fd
  40e188:	int    0x93
  40e18a:	(bad)  
  40e18c:	icebp  
  40e18d:	fcmovnbe st,st(1)
  40e18f:	dec    ebx
  40e190:	dec    edx
  40e191:	loop   0x40e20f
  40e193:	adc    ebx,edx
  40e195:	adc    ch,BYTE PTR [esi+0x10f9841f]
  40e19b:	test   BYTE PTR [ebx],cl
  40e19d:	jmp    0x7a53ced3
  40e1a2:	mov    edx,DWORD PTR [ebp-0x34]
  40e1a5:	shr    esp,0x9d
  40e1a8:	mov    ds:0xc21e9df7,al
  40e1ad:	outs   dx,BYTE PTR ds:[esi]
  40e1ae:	fistp  DWORD PTR [edi]
  40e1b0:	sar    esp,1
  40e1b2:	cdq    
  40e1b3:	push   0xffffffe5
  40e1b5:	or     al,BYTE PTR [ebx]
  40e1b7:	iret   
  40e1b8:	inc    ebx
  40e1b9:	daa    
  40e1ba:	test   BYTE PTR [ecx-0x5e15459],dh
  40e1c0:	xor    DWORD PTR [esi],0xffffffdd
  40e1c3:	push   es
  40e1c4:	rcl    DWORD PTR [ecx],cl
  40e1c6:	xchg   esi,eax
  40e1c7:	lods   al,BYTE PTR ds:[esi]
  40e1c8:	lods   eax,DWORD PTR ds:[esi]
  40e1c9:	test   DWORD PTR [ebx-0x63],edx
  40e1cc:	cdq    
  40e1cd:	aad    0x84
  40e1cf:	dec    edi
  40e1d0:	push   esi
  40e1d1:	xor    al,0x55
  40e1d3:	xlat   BYTE PTR ds:[ebx]
  40e1d4:	and    BYTE PTR [edx-0x54354bbb],0x3b
  40e1db:	add    al,0x6a
  40e1dd:	adc    cl,bh
  40e1df:	pop    ecx
  40e1e0:	or     ebx,DWORD PTR [ebx+0x36]
  40e1e3:	fstp   st(5)
  40e1e5:	enter  0x6404,0x79
  40e1e9:	jl     0x40e1b4
  40e1eb:	dec    edx
  40e1ec:	clc    
  40e1ed:	aaa    
  40e1ee:	adc    dh,ah
  40e1f0:	add    ebx,DWORD PTR [ecx]
  40e1f2:	arpl   WORD PTR [esi],bp
  40e1f4:	daa    
  40e1f5:	mov    ecx,0x5e1c0ca0
  40e1fa:	push   ds
  40e1fb:	arpl   WORD PTR [edi+0x1870c514],sp
  40e201:	rol    bl,0x61
  40e204:	sbb    eax,0x645b39d6
  40e209:	xchg   DWORD PTR [eax-0x143a4b52],edx
  40e20f:	jp     0x40e26e
  40e211:	dec    ebx
  40e212:	in     eax,0x9d
  40e214:	(bad)  
  40e215:	fidivr DWORD PTR [ebx-0x3407c701]
  40e21b:	leave  
  40e21c:	fisttp QWORD PTR [ebx+0x4b]
  40e21f:	std    
  40e220:	fidivr WORD PTR [edi]
  40e222:	and    ebx,0xffffffe6
  40e225:	in     eax,dx
  40e226:	sbb    BYTE PTR [ebx+eiz*4],bl
  40e229:	rcr    ebp,1
  40e22b:	pop    es
  40e22c:	mov    cl,0xd2
  40e22e:	mov    bl,0x8b
  40e230:	xor    al,bh
  40e232:	cmp    ecx,DWORD PTR [edx-0x76]
  40e235:	stos   BYTE PTR es:[edi],al
  40e236:	xor    al,0xe1
  40e238:	sub    eax,0xf8f42204
  40e23d:	call   0x4ef0:0x24300554
  40e244:	es scas al,BYTE PTR es:[edi]
  40e246:	mov    ebp,0xce2a5adb
  40e24b:	loope  0x40e1d8
  40e24d:	into   
  40e24e:	(bad)  
  40e24f:	jns    0x40e2a8
  40e251:	rol    DWORD PTR [ebp+ebx*8+0x682ab773],0xab
  40e259:	cs push ebx
  40e25b:	inc    eax
  40e25c:	xchg   edi,eax
  40e25d:	mov    ecx,0x65174b2c
  40e262:	push   esp
  40e263:	les    ebx,FWORD PTR [esi-0x4fc8463a]
  40e269:	jno    0x40e27e
  40e26b:	xchg   esp,eax
  40e26c:	and    bh,BYTE PTR [edi-0x33]
  40e26f:	std    
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	and    dl,BYTE PTR [ecx]
  40e273:	test   eax,0x32caac29
  40e278:	or     dh,BYTE PTR [edi+0x69]
  40e27b:	inc    edi
  40e27c:	jno    0x40e287
  40e27e:	fs xchg ebx,eax
  40e280:	push   eax
  40e281:	xchg   esp,eax
  40e282:	sbb    eax,0x797d67ad
  40e287:	jae    0x40e219
  40e289:	adc    esi,DWORD PTR [eax-0x31]
  40e28c:	lods   al,BYTE PTR ds:[esi]
  40e28d:	and    BYTE PTR [ebx+0x739344e3],bl
  40e293:	nop
  40e294:	add    dh,dh
  40e296:	and    bh,BYTE PTR [ebx]
  40e298:	adc    eax,0xfe27b3f8
  40e29d:	(bad)  
  40e29e:	inc    eax
  40e29f:	hlt    
  40e2a0:	xor    ch,dh
  40e2a2:	and    ebx,eax
  40e2a4:	cmp    DWORD PTR [ebp+0x18c2cdf5],0xffffffd6
  40e2ab:	xor    DWORD PTR gs:[ebx],eax
  40e2ae:	xor    al,0x20
  40e2b0:	hlt    
  40e2b1:	sar    DWORD PTR [ebx],0xd2
  40e2b4:	mov    eax,DWORD PTR [eax]
  40e2b6:	loope  0x40e257
  40e2b8:	jl     0x40e2e5
  40e2ba:	adc    DWORD PTR [edi-0x7e84e312],edx
  40e2c0:	cmp    DWORD PTR [ebx],ecx
  40e2c2:	xchg   edx,eax
  40e2c3:	imul   ebx,DWORD PTR [edi-0x51],0xdbc1c62
  40e2ca:	sub    al,0xaa
  40e2cc:	mov    dh,0xd
  40e2ce:	fldenv [esi]
  40e2d0:	iret   
  40e2d1:	test   eax,0x2ec430ee
  40e2d6:	and    ah,0xc3
  40e2d9:	jns    0x40e354
  40e2db:	pop    ecx
  40e2dc:	jno    0x40e2d6
  40e2de:	mov    bl,0x22
  40e2e0:	dec    eax
  40e2e1:	cdq    
  40e2e2:	psubq  mm5,mm4
  40e2e5:	arpl   WORD PTR ds:0x4227b12d,cx
  40e2eb:	push   eax
  40e2ec:	cmc    
  40e2ed:	mov    dl,0xfc
  40e2ef:	pusha  
  40e2f0:	or     eax,0x88002732
  40e2f5:	(bad)  
  40e2f6:	mov    esp,0x2de203ee
  40e2fb:	or     DWORD PTR [esi+0x18183a00],ebx
  40e301:	retf   
  40e302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e303:	js     0x40e37e
  40e305:	test   eax,0x67873a9e
  40e30a:	jbe    0x40e327
  40e30c:	jns    0x40e28f
  40e30e:	mov    BYTE PTR [ecx+0x78],ch
  40e311:	aaa    
  40e312:	pop    es
  40e313:	js     0x40e336
  40e315:	dec    eax
  40e316:	xchg   DWORD PTR [ebx],esi
  40e318:	mov    al,0x43
  40e31a:	xchg   ebx,eax
  40e31b:	call   0x3270cd90
  40e320:	adc    ebp,DWORD PTR [edx+0x25]
  40e323:	inc    ecx
  40e324:	lods   al,BYTE PTR ds:[esi]
  40e325:	push   edx
  40e326:	cli    
  40e327:	sbb    BYTE PTR [eax],0x0
  40e32a:	push   es
  40e32b:	xor    DWORD PTR [esi-0x58abfde2],edx
  40e331:	stos   BYTE PTR es:[edi],al
  40e332:	lea    esp,ds:[ebp-0x11]
  40e336:	pop    eax
  40e337:	out    0x17,al
  40e339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e33a:	in     eax,0xe3
  40e33c:	mov    ds:0xd912e5cd,al
  40e341:	or     eax,0xbc131a7e
  40e346:	adc    al,BYTE PTR [ecx+0x3a0b6261]
  40e34c:	cmc    
  40e34d:	lds    esi,FWORD PTR [ebx]
  40e34f:	aas    
  40e350:	test   al,0xb1
  40e352:	stc    
  40e353:	sub    eax,0x24215b6f
  40e359:	adc    al,0xe7
  40e35b:	je     0x40e30f
  40e35d:	ss inc ebp
  40e35f:	rol    esi,0x25
  40e362:	and    dl,BYTE PTR [edi-0xc]
  40e365:	sahf   
  40e366:	mov    dh,0x7b
  40e368:	setb   BYTE PTR [ebx+0x6]
  40e36c:	add    eax,0x8c27d08b
  40e371:	(bad)  
  40e372:	iret   
  40e373:	fs push ebp
  40e375:	mov    al,ds:0x1771cca8
  40e37a:	mov    edx,0x4f4915f6
  40e37f:	adc    edx,edx
  40e381:	cmp    DWORD PTR [esi+0x24],esi
  40e384:	aaa    
  40e385:	or     eax,0x7c9b1d4d
  40e38a:	inc    edx
  40e38b:	lahf   
  40e38c:	in     eax,0xd3
  40e38e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e38f:	rcr    DWORD PTR [ecx-0x6d],0xc2
  40e393:	xor    dh,BYTE PTR [edx-0xc]
  40e396:	call   0x83f77de
  40e39b:	jno    0x40e3a9
  40e39d:	popa   
  40e39e:	std    
  40e39f:	es push 0x36
  40e3a2:	or     eax,0x8a3267e3
  40e3a7:	sbb    dh,cl
  40e3a9:	dec    edx
  40e3aa:	in     eax,dx
  40e3ab:	mov    eax,0xde00f4ba
  40e3b0:	mov    BYTE PTR [edi-0x7dbf98be],al
  40e3b6:	mov    dl,0xb8
  40e3b8:	scas   al,BYTE PTR es:[edi]
  40e3b9:	or     edx,DWORD PTR [esp+ecx*4]
  40e3bc:	daa    
  40e3bd:	adc    al,0x41
  40e3bf:	xor    bl,BYTE PTR [ecx-0x4d]
  40e3c2:	test   BYTE PTR [esi-0x58393f75],al
  40e3c8:	out    dx,al
  40e3c9:	pop    edi
  40e3ca:	ret    0x1014
  40e3cd:	sub    eax,0x642ae48b
  40e3d2:	push   edx
  40e3d3:	push   ebp
  40e3d4:	push   ss
  40e3d5:	inc    ebp
  40e3d6:	aas    
  40e3d7:	arpl   WORD PTR [edi],di
  40e3d9:	sub    eax,0x52c3b9ca
  40e3de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3df:	fnstsw WORD PTR ds:0x775d1984
  40e3e5:	mov    BYTE PTR [ecx],cl
  40e3e7:	test   eax,0x52af159
  40e3ec:	mov    WORD PTR [esi+0x53],cs
  40e3ef:	jb     0x40e441
  40e3f1:	pushf  
  40e3f2:	ret    0x9b1c
  40e3f5:	xchg   edi,eax
  40e3f6:	pop    edi
  40e3f7:	add    BYTE PTR cs:[ebx+ecx*1+0x39],bh
  40e3fc:	dec    esi
  40e3fd:	fs push edx
  40e3ff:	cmp    eax,0x8203b761
  40e404:	pop    ecx
  40e405:	pop    edi
  40e406:	add    eax,0x456349b1
  40e40b:	lahf   
  40e40c:	call   0x94c333c7
  40e411:	and    ebp,DWORD PTR [edx+0x6da417ba]
  40e417:	fsubr  st(2),st
  40e419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e41a:	inc    esp
  40e41b:	inc    edx
  40e41c:	mov    bh,0x35
  40e41e:	dec    edx
  40e41f:	dec    ecx
  40e420:	inc    ecx
  40e421:	push   ds
  40e422:	cmp    DWORD PTR [ebx-0x6d],esi
  40e425:	mov    bh,0x1e
  40e427:	mov    esi,esi
  40e429:	push   ss
  40e42a:	cmp    bh,ch
  40e42c:	lods   al,BYTE PTR ds:[esi]
  40e42d:	pop    ss
  40e42e:	adc    bl,BYTE PTR [eax-0x3bf11400]
  40e434:	popa   
  40e435:	inc    ebx
  40e436:	mov    edx,DWORD PTR [eax]
  40e438:	pop    edi
  40e439:	xchg   esi,esi
  40e43b:	push   edx
  40e43c:	adc    bl,ah
  40e43e:	inc    ebx
  40e43f:	mov    esp,edx
  40e441:	jae    0x40e3f5
  40e443:	retf   0x3595
  40e446:	jno    0x10d9b916
  40e44c:	mov    ch,0x29
  40e44e:	pop    esi
  40e44f:	jge    0x40e42d
  40e451:	xor    al,0xdc
  40e453:	mov    esp,DWORD PTR [esi-0x59b87c95]
  40e459:	xor    BYTE PTR [edi+eax*8-0x63],ah
  40e45d:	test   ebx,ebp
  40e45f:	(bad)  
  40e460:	mov    eax,ds:0x8dfd0461
  40e465:	fld    st(2)
  40e467:	aas    
  40e468:	adc    eax,0xf8407705
  40e46d:	sbb    al,0x3b
  40e46f:	mov    eax,ds:0xae4c2b92
  40e474:	cwde   
  40e475:	js     0x40e434
  40e477:	sub    ecx,esp
  40e479:	ins    DWORD PTR es:[edi],dx
  40e47a:	mov    dh,0xd6
  40e47c:	and    BYTE PTR [eax-0x46],bh
  40e47f:	(bad)  
  40e481:	mov    bl,0x18
  40e483:	out    0x31,al
  40e485:	fwait
  40e486:	mov    al,0x28
  40e488:	push   esp
  40e489:	xchg   edx,eax
  40e48a:	fwait
  40e48b:	mov    ebp,0xe1c3aa14
  40e490:	jo     0x40e47a
  40e492:	mov    esi,es
  40e494:	pop    ss
  40e495:	sbb    al,0x16
  40e497:	stos   BYTE PTR es:[edi],al
  40e498:	fdiv   DWORD PTR [edi-0x51]
  40e49b:	jmp    0x93fe:0xfa4615ca
  40e4a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4a3:	jmp    FWORD PTR [ecx+esi*4+0x45]
  40e4a7:	call   0xd89b:0x96973d56
  40e4ae:	add    ebp,eax
  40e4b0:	rol    bh,0xf5
  40e4b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4b4:	push   edi
  40e4b5:	(bad)  
  40e4b6:	out    dx,al
  40e4b7:	aas    
  40e4b8:	sti    
  40e4b9:	adc    ebx,DWORD PTR [edx]
  40e4bb:	adc    DWORD PTR [edi],ebp
  40e4bd:	mov    al,0x18
  40e4bf:	cs or  ah,cl
  40e4c2:	les    eax,FWORD PTR [ecx+0xe79da3b]
  40e4c8:	xchg   edx,eax
  40e4c9:	sub    edx,DWORD PTR [edi]
  40e4cb:	mov    ecx,0xf3331df5
  40e4d0:	repnz or bl,ah
  40e4d3:	or     esp,esi
  40e4d5:	mov    DWORD PTR [ebx+0x12f6af90],ebx
  40e4db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4dc:	sbb    BYTE PTR [esi],0x21
  40e4df:	enterw 0xc2,0x58
  40e4e4:	add    esp,DWORD PTR ds:0xd0dfa2b2
  40e4ea:	xor    cl,BYTE PTR [ecx-0x37371aaa]
  40e4f0:	xchg   DWORD PTR [ecx+0x1b22e72b],esi
  40e4f6:	push   esp
  40e4f7:	xchg   ecx,eax
  40e4f8:	dec    esp
  40e4f9:	retf   
  40e4fa:	push   esi
  40e4fb:	outs   dx,DWORD PTR ds:[esi]
  40e4fc:	retf   
  40e4fd:	mov    ah,BYTE PTR [edi]
  40e4ff:	adc    eax,0x67042d35
  40e504:	sub    eax,DWORD PTR [edi]
  40e506:	sub    DWORD PTR [eax-0x822935d],edi
  40e50c:	mov    ds:0x1f87c603,al
  40e511:	sub    ecx,DWORD PTR ds:0x586a357f
  40e517:	pop    ebx
  40e518:	iret   
  40e519:	(bad)  
  40e51a:	push   cs
  40e51b:	ins    BYTE PTR es:[edi],dx
  40e51c:	ins    BYTE PTR es:[edi],dx
  40e51d:	xchg   ebx,eax
  40e51e:	bound  ecx,QWORD PTR [esi+eiz*8+0x11c1d25b]
  40e525:	out    dx,eax
  40e526:	aas    
  40e527:	adc    al,0x99
  40e529:	out    0xa1,al
  40e52b:	push   esi
  40e52c:	ds out 0xa2,eax
  40e52f:	stos   DWORD PTR es:[edi],eax
  40e530:	pusha  
  40e531:	jnp    0x40e561
  40e533:	or     eax,0xe27fb819
  40e538:	imul   ecx,DWORD PTR [edx+0x2ff5408e],0x684649df
  40e542:	xchg   ecx,eax
  40e543:	or     eax,0x391ee0ed
  40e548:	call   ecx
  40e54a:	or     DWORD PTR [edi],esp
  40e54c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e54d:	rol    ebp,0x99
  40e550:	cwde   
  40e551:	aam    0xa3
  40e553:	loopne 0x40e54f
  40e555:	pop    edi
  40e556:	dec    esp
  40e557:	out    dx,al
  40e558:	fs popa 
  40e55a:	sbb    eax,esi
  40e55c:	sub    al,0x29
  40e55e:	jnp    0x40e5a6
  40e560:	push   ss
  40e561:	test   DWORD PTR [edx+ecx*8+0x3bcaa2bf],esi
  40e568:	mov    ds:0x3b0477f3,eax
  40e56d:	jae    0x40e4fc
  40e56f:	ins    DWORD PTR es:[edi],dx
  40e570:	imul   edi,edi,0xf8dbac3f
  40e576:	xor    eax,0x9c6fcdf9
  40e57b:	lods   al,BYTE PTR ds:[esi]
  40e57c:	scas   eax,DWORD PTR es:[edi]
  40e57d:	mov    eax,ds:0x3d8d2360
  40e582:	fsubrp st(2),st
  40e584:	cld    
  40e585:	add    esi,DWORD PTR [ecx]
  40e587:	fwait
  40e588:	xchg   ecx,eax
  40e589:	push   es
  40e58a:	xor    DWORD PTR [ecx],0x7e
  40e58d:	xchg   ecx,eax
  40e58e:	sbb    ebp,ecx
  40e590:	xor    dl,cl
  40e592:	mov    edi,DWORD PTR [ebp+0x2]
  40e595:	mov    dh,0x5a
  40e597:	xor    BYTE PTR [edx],cl
  40e599:	repnz adc al,0xd5
  40e59c:	xor    BYTE PTR [ecx+0x6f],0xa4
  40e5a0:	aaa    
  40e5a1:	lds    edx,FWORD PTR fs:[ebx+eiz*4+0xd43b8ad]
  40e5a9:	jo     0x40e5c2
  40e5ab:	jl     0x40e5fc
  40e5ad:	mov    al,fs:0x1d4ce50e
  40e5b3:	mov    bl,BYTE PTR [ebp-0xd]
  40e5b6:	xor    BYTE PTR [ebx*2+0x5ae8cae1],ch
  40e5bd:	add    DWORD PTR [esi],0x3db0d01a
  40e5c3:	leave  
  40e5c4:	xchg   esi,eax
  40e5c5:	test   DWORD PTR [ebx],edx
  40e5c7:	into   
  40e5c8:	popa   
  40e5c9:	add    DWORD PTR [esi-0x49],edi
  40e5cc:	stc    
  40e5cd:	add    eax,0xcf1da972
  40e5d2:	adc    bh,BYTE PTR [eax-0x80]
  40e5d5:	daa    
  40e5d6:	ins    DWORD PTR es:[edi],dx
  40e5d7:	fst    DWORD PTR [ebx-0x26]
  40e5da:	fiadd  DWORD PTR [ecx+0x753c40e3]
  40e5e0:	push   cs
  40e5e1:	outs   dx,DWORD PTR ds:[esi]
  40e5e2:	in     al,0x6d
  40e5e4:	mov    al,0x6a
  40e5e6:	sbb    al,0x82
  40e5e8:	in     al,0x9a
  40e5ea:	repz xor eax,0x72419f02
  40e5f0:	jmp    0x90de:0x9758b51e
  40e5f7:	mov    ch,0x11
  40e5f9:	outs   dx,DWORD PTR ds:[esi]
  40e5fa:	mov    edi,0x2e1fde41
  40e5ff:	ds inc eax
  40e601:	push   ss
  40e602:	xchg   ebx,eax
  40e603:	int3   
  40e604:	push   es
  40e605:	rcr    DWORD PTR [edi+0x200177d1],1
  40e60b:	jmp    0x40e67d
  40e60d:	and    ch,BYTE PTR [edx+0x3f]
  40e610:	(bad)  
  40e611:	stos   BYTE PTR es:[edi],al
  40e612:	sbb    al,0x5c
  40e614:	pop    ecx
  40e615:	adc    DWORD PTR [ebx-0x42c131ad],ebp
  40e61b:	add    cl,dl
  40e61d:	add    BYTE PTR [ebp+0xbf32d8d],cl
  40e623:	jno    0x40e60e
  40e625:	das    
  40e626:	mov    ch,BYTE PTR [eax-0xb]
  40e629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e62a:	inc    eax
  40e62b:	aam    0x6f
  40e62d:	inc    ebp
  40e62e:	arpl   WORD PTR [ebp+edx*2+0x55f3bc47],sp
  40e635:	jb     0x40e5cd
  40e637:	pop    ds
  40e638:	xchg   esp,eax
  40e639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e63a:	fnstcw WORD PTR [esi+0x12]
  40e63d:	sbb    edi,ecx
  40e63f:	idiv   BYTE PTR [esp+ebp*2]
  40e642:	add    ebx,DWORD PTR ds:0xff11b7c2
  40e648:	test   BYTE PTR [eax-0x48a32c8f],dh
  40e64e:	and    eax,0x22baa26
  40e653:	out    dx,al
  40e654:	push   ecx
  40e655:	pop    edx
  40e656:	dec    edx
  40e657:	sbb    BYTE PTR [eax+0x783ccf90],bl
  40e65d:	retf   
  40e65e:	mov    dl,0x4
  40e660:	adc    bl,al
  40e662:	lock leave 
  40e664:	add    eax,0x94b508d2
  40e669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e66a:	inc    ecx
  40e66b:	add    BYTE PTR [ecx+0x64bd1ecb],cl
  40e671:	pop    eax
  40e672:	mov    DWORD PTR [eax-0x4b],esi
  40e675:	out    0x4b,al
  40e677:	sbb    ch,BYTE PTR [esi-0x4c098da2]
  40e67d:	inc    ebx
  40e67e:	out    dx,eax
  40e67f:	or     BYTE PTR [ebp-0x39],al
  40e682:	mov    al,bl
  40e684:	add    eax,0x3eb55bf3
  40e689:	imul   esi,DWORD PTR [ebx],0xffffffa6
  40e68c:	mov    ds:0x670bfa84,al
  40e691:	inc    edx
  40e692:	jbe    0x40e634
  40e694:	in     al,0xeb
  40e696:	push   edx
  40e697:	mov    DWORD PTR ds:0x5101,ebx
  40e69c:	or     al,0xcb
  40e69f:	pushf  
  40e6a0:	loope  0x40e701
  40e6a2:	adc    ch,BYTE PTR [esp+edi*8-0x41]
  40e6a6:	sub    ebx,DWORD PTR [eax-0x74]
  40e6a9:	aam    0xff
  40e6ab:	jecxz  0x40e669
  40e6ad:	mov    eax,0x9788d9db
  40e6b2:	xchg   esp,eax
  40e6b3:	add    DWORD PTR [ebx-0x7a],esi
  40e6b6:	repz dec ecx
  40e6b8:	mov    al,ds:0xe66c960c
  40e6bd:	daa    
  40e6be:	sub    al,0xa2
  40e6c1:	sbb    al,BYTE PTR [ecx-0x1e]
  40e6c4:	popf   
  40e6c5:	sub    DWORD PTR [esp+eax*8+0x2e],ebp
  40e6c9:	pop    ebp
  40e6ca:	push   ebx
  40e6cb:	fadd   QWORD PTR fs:[eax-0xb65aab7]
  40e6d2:	sub    cl,BYTE PTR [edx]
  40e6d4:	inc    edx
  40e6d5:	push   ss
  40e6d6:	mov    ecx,eax
  40e6d8:	push   cs
  40e6d9:	pop    edi
  40e6da:	dec    ecx
  40e6db:	mov    WORD PTR [esi+0x2e],?
  40e6de:	sub    eax,0x8105f3d8
  40e6e3:	clc    
  40e6e4:	and    al,BYTE PTR [edi]
  40e6e6:	jb     0x40e762
  40e6e8:	aaa    
  40e6e9:	test   DWORD PTR [ebx],0x10c0472d
  40e6ef:	pop    esp
  40e6f0:	stos   DWORD PTR es:[edi],eax
  40e6f1:	je     0x40e74a
  40e6f3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40e6f5:	push   esp
  40e6f6:	ja     0x40e6f0
  40e6f8:	inc    ecx
  40e6f9:	push   edi
  40e6fa:	sub    eax,0xa41fab5e
  40e6ff:	cmp    eax,0x2cbb02ef
  40e704:	rol    DWORD PTR [ebx-0x2a],0x5a
  40e708:	pop    esi
  40e709:	or     ecx,ecx
  40e70b:	sbb    ah,ah
  40e70d:	adc    eax,0xa423f3d4
  40e712:	push   ss
  40e713:	inc    esi
  40e714:	scas   eax,DWORD PTR es:[edi]
  40e715:	(bad)  
  40e716:	outs   dx,DWORD PTR ds:[esi]
  40e717:	aaa    
  40e718:	repnz pop es
  40e71a:	cwde   
  40e71b:	inc    esi
  40e71c:	push   eax
  40e71d:	rcr    esi,cl
  40e71f:	xor    ah,BYTE PTR [ebx]
  40e721:	sub    BYTE PTR [eax+0x5eed959d],bl
  40e727:	scas   eax,DWORD PTR es:[edi]
  40e728:	retf   0xeb71
  40e72b:	add    DWORD PTR [ebx-0x4a],0x24
  40e72f:	inc    esp
  40e730:	in     al,dx
  40e731:	pusha  
  40e732:	add    ah,ch
  40e734:	sub    al,0x3d
  40e736:	js     0x40e6eb
  40e738:	add    ecx,DWORD PTR [ecx+0x2b]
  40e73b:	and    al,0xf2
  40e73d:	retf   
  40e73e:	jne    0x40e6d0
  40e740:	loope  0x40e76f
  40e742:	fisttp QWORD PTR [esi]
  40e744:	xor    DWORD PTR [edx-0x6865fa4c],ebx
  40e74a:	rcl    DWORD PTR [edx],0x2a
  40e74d:	pop    es
  40e74e:	cwde   
  40e74f:	pop    ebp
  40e750:	xchg   esi,eax
  40e751:	loope  0x40e75d
  40e753:	mov    esp,0x8f4ad25
  40e758:	shr    DWORD PTR [ebx+0x62e5bb0d],cl
  40e75e:	fmul   DWORD PTR [ebx+0xc850593]
  40e764:	ins    BYTE PTR es:[edi],dx
  40e765:	addr16 (bad) 
  40e767:	scas   al,BYTE PTR es:[edi]
  40e768:	mov    ch,0xa8
  40e76a:	int3   
  40e76b:	xchg   esi,eax
  40e76c:	xchg   ebx,eax
  40e76d:	add    DWORD PTR [edx-0x57],esp
  40e770:	das    
  40e771:	fisub  DWORD PTR [ebp+ecx*1-0x29]
  40e775:	sub    al,0xf9
  40e777:	out    dx,eax
  40e778:	lahf   
  40e779:	lock mov BYTE PTR [eax+0x31],ch
  40e77d:	scas   eax,DWORD PTR es:[edi]
  40e77e:	sbb    cl,BYTE PTR [edx-0x6c34ea0]
  40e784:	push   ebx
  40e785:	cmp    DWORD PTR [esi+0x663330f0],edx
  40e78b:	das    
  40e78c:	test   eax,0x20c1f048
  40e791:	push   cs
  40e792:	pop    es
  40e793:	xor    DWORD PTR [edi-0x4],esp
  40e796:	ins    DWORD PTR es:[edi],dx
  40e797:	add    dh,BYTE PTR [edx]
  40e799:	push   eax
  40e79a:	hlt    
  40e79b:	leave  
  40e79c:	fmul   QWORD PTR ds:0xf36780cd
  40e7a2:	fist   DWORD PTR [esi]
  40e7a4:	ins    DWORD PTR es:[edi],dx
  40e7a5:	call   0x3f23860b
  40e7aa:	fdiv   QWORD PTR [edi]
  40e7ac:	adc    eax,0xef121e1a
  40e7b1:	pop    esi
  40e7b2:	cmp    al,0x17
  40e7b4:	out    0x28,al
  40e7b6:	sbb    al,0x6f
  40e7b8:	cmp    BYTE PTR [edi+esi*8],dh
  40e7bb:	inc    esp
  40e7bc:	adc    al,0x72
  40e7be:	push   ds
  40e7bf:	or     BYTE PTR [edi+ebx*4+0x4b],ch
  40e7c3:	icebp  
  40e7c4:	call   0x8b6e:0x8b00cc11
  40e7cb:	adc    esp,DWORD PTR [edi-0x3b]
  40e7ce:	jb     0x40e831
  40e7d0:	xchg   DWORD PTR [eax-0x361a31cf],eax
  40e7d6:	xchg   edi,eax
  40e7d7:	mov    ah,0x74
  40e7d9:	cs pop ebx
  40e7db:	dec    esi
  40e7dc:	je     0x40e7ae
  40e7de:	xor    eax,0x2f1aa8bb
  40e7e3:	mov    bl,0x23
  40e7e5:	sub    eax,0xd5c82b17
  40e7ea:	cmp    ebx,esp
  40e7ec:	jecxz  0x40e834
  40e7ee:	jae    0x40e7c5
  40e7f0:	retf   0x7d77
  40e7f3:	cdq    
  40e7f4:	xor    DWORD PTR [edx+0x5b],esp
  40e7f7:	loope  0x40e870
  40e7f9:	repz jle 0x40e7bc
  40e7fc:	push   ss
  40e7fd:	mov    esi,0xbecee69a
  40e802:	das    
  40e803:	in     eax,dx
  40e804:	cmp    BYTE PTR [eax+0x79],0x23
  40e808:	dec    ebx
  40e809:	dec    ebx
  40e80a:	mov    ebp,0x26a52ec7
  40e80f:	bound  edx,QWORD PTR [ecx]
  40e811:	scas   al,BYTE PTR es:[edi]
  40e812:	xor    BYTE PTR [esi-0x35978652],bh
  40e818:	sbb    eax,ecx
  40e81a:	sbb    DWORD PTR [ecx],esi
  40e81c:	call   0xf2de1e75
  40e821:	mov    bl,0x54
  40e823:	xchg   BYTE PTR [ecx+0x7c],dh
  40e826:	sbb    cl,BYTE PTR [ebx+0x5e]
  40e829:	popf   
  40e82a:	mov    dh,0x30
  40e82c:	and    al,0x8e
  40e82e:	mov    ebp,0xb49a6907
  40e833:	std    
  40e834:	ret    
  40e835:	(bad)  
  40e837:	shl    DWORD PTR [esp+ecx*4],1
  40e83a:	shl    DWORD PTR [edx+ebp*1],0x5e
  40e83e:	adc    DWORD PTR [esi+0x41],0x52
  40e842:	push   ebp
  40e843:	cmp    eax,0x8806df23
  40e848:	mov    ecx,0xb9d994e8
  40e84d:	loope  0x40e836
  40e84f:	cmp    al,BYTE PTR [edx]
  40e851:	inc    esp
  40e852:	xchg   esi,eax
  40e853:	push   esi
  40e854:	mov    al,BYTE PTR [ebx-0x47]
  40e857:	(bad)  
  40e858:	enter  0x82f3,0x3b
  40e85c:	cmc    
  40e85d:	pop    es
  40e85e:	mov    edx,0xc240bff6
  40e863:	jmp    0x40e833
  40e865:	in     al,0x71
  40e867:	js     0x40e7f6
  40e869:	inc    eax
  40e86a:	not    DWORD PTR [eax+0x4b5dee53]
  40e870:	pusha  
  40e871:	aad    0x35
  40e873:	xchg   BYTE PTR [ebx],bh
  40e875:	imul   edx,ebp,0xffffffbb
  40e878:	int3   
  40e879:	xchg   ecx,eax
  40e87a:	js     0x40e8c1
  40e87c:	cs call 0x88c7:0x6ad5163a
  40e884:	inc    edx
  40e885:	xor    bh,BYTE PTR [edi-0x6b63cbab]
  40e88b:	sub    edx,DWORD PTR [edx+0x2c]
  40e88e:	icebp  
  40e88f:	(bad)  
  40e890:	push   ds
  40e891:	ds jae 0x40e83c
  40e894:	dec    esp
  40e895:	and    dh,al
  40e897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e898:	sbb    esi,ebp
  40e89a:	xor    esp,eax
  40e89c:	retf   0x977b
  40e89f:	or     bh,BYTE PTR [eax]
  40e8a1:	fild   QWORD PTR [edi-0x4e]
  40e8a5:	enter  0xcb01,0x25
  40e8a9:	add    DWORD PTR ds:0xd9536320,0x76c642bd
  40e8b3:	jg     0x40e836
  40e8b5:	and    dl,BYTE PTR [ecx-0x237c84c2]
  40e8bb:	sub    ah,BYTE PTR [esp+edx*1]
  40e8be:	scas   eax,DWORD PTR es:[edi]
  40e8bf:	sbb    al,0xbf
  40e8c1:	and    dh,BYTE PTR [si]
  40e8c4:	aaa    
  40e8c5:	fwait
  40e8c6:	xchg   DWORD PTR [eax-0x16],ebp
  40e8c9:	sub    ecx,DWORD PTR [ecx-0x5a]
  40e8cc:	and    cl,0x91
  40e8cf:	cwde   
  40e8d0:	push   0x18
  40e8d2:	sub    ch,0xd5
  40e8d5:	pop    eax
  40e8d6:	and    al,0xd
  40e8d8:	or     DWORD PTR [esi],0x9d4fdb33
  40e8de:	out    0xe0,al
  40e8e0:	shl    DWORD PTR [ebp+0x76],0x13
  40e8e4:	mov    edi,DWORD PTR [eax+esi*1-0x31]
  40e8e8:	sub    eax,0xa9da66f3
  40e8ed:	rcl    BYTE PTR [edi],1
  40e8ef:	and    cl,dh
  40e8f1:	push   ecx
  40e8f2:	add    BYTE PTR [ecx-0x7],ah
  40e8f5:	les    ebx,FWORD PTR [ebx+0x3df89110]
  40e8fb:	mov    dh,BYTE PTR [ebp+0x5bdc57f]
  40e901:	xor    esp,DWORD PTR [ebx*4+0x2ccdfb67]
  40e908:	call   0x1e42:0x9323080d
  40e90f:	cmp    eax,0xb057e790
  40e914:	jnp    0x40e96a
  40e916:	push   0x16
  40e918:	xor    al,0xdc
  40e91a:	cmp    eax,0xac60a59d
  40e91f:	adc    dl,BYTE PTR [ebx-0x1d2d92c2]
  40e925:	mov    ch,0xed
  40e927:	test   BYTE PTR [esi-0x44],ah
  40e92a:	test   eax,0xa0b1b477
  40e92f:	or     esi,DWORD PTR [edx-0x462a84c9]
  40e935:	stos   BYTE PTR es:[edi],al
  40e936:	sahf   
  40e937:	pop    esi
  40e938:	scas   al,BYTE PTR es:[edi]
  40e939:	or     al,0x3d
  40e93b:	lods   al,BYTE PTR ds:[esi]
  40e93c:	iret   
  40e93d:	aaa    
  40e93e:	fldcw  WORD PTR [ebx-0x1c]
  40e941:	sar    BYTE PTR [ebx+ebx*8],cl
  40e944:	jmp    0x40e925
  40e946:	clc    
  40e947:	push   edx
  40e948:	cmp    eax,0x5051f63d
  40e94d:	loopne 0x40e8dc
  40e94f:	sub    bl,ch
  40e951:	fld    TBYTE PTR [edx+0x7b191c2f]
  40e957:	push   es
  40e958:	mov    al,0x42
  40e95a:	and    DWORD PTR [edi-0x28],edi
  40e95d:	dec    eax
  40e95e:	push   eax
  40e95f:	or     bl,BYTE PTR [ecx]
  40e961:	jae    0x40e95e
  40e963:	imul   ebx,DWORD PTR [ebx],0x96ad805c
  40e969:	dec    ebp
  40e96a:	js     0x40e99a
  40e96c:	in     eax,0x70
  40e96e:	pop    ss
  40e96f:	ss inc ebp
  40e971:	xchg   DWORD PTR [esi-0x440ec211],ebp
  40e977:	dec    ebp
  40e978:	retf   0xe989
  40e97b:	mov    ebp,0x80904a6b
  40e980:	cmp    ebx,ebp
  40e982:	(bad)  
  40e984:	ja     0x40e956
  40e986:	sti    
  40e987:	rol    DWORD PTR [eax+0xf],cl
  40e98a:	sbb    eax,0x295a0869
  40e98f:	inc    ecx
  40e990:	and    ch,BYTE PTR [ebp+0x63]
  40e993:	adc    cl,BYTE PTR [ecx+0x69]
  40e996:	inc    esi
  40e997:	fadd   st,st(4)
  40e999:	int3   
  40e99a:	sar    DWORD PTR [esi-0x48],cl
  40e99d:	repnz inc eax
  40e99f:	mov    edi,0x7f7160dc
  40e9a4:	xchg   ecx,eax
  40e9a5:	xor    DWORD PTR [esi],esi
  40e9a7:	lods   eax,DWORD PTR ds:[esi]
  40e9a8:	mov    esp,0xb0a48f1b
  40e9ad:	pop    edi
  40e9ae:	in     eax,dx
  40e9af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9b0:	push   0x549bcc60
  40e9b5:	scas   al,BYTE PTR es:[edi]
  40e9b6:	xchg   edx,eax
  40e9b7:	jne    0x40e9cc
  40e9b9:	dec    esi
  40e9ba:	push   edx
  40e9bb:	int3   
  40e9bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9bd:	push   ds
  40e9be:	add    ecx,DWORD PTR [ecx+0x45]
  40e9c1:	or     ebp,ebp
  40e9c3:	aaa    
  40e9c4:	xchg   ebx,eax
  40e9c5:	lds    edi,FWORD PTR [ecx-0x2e]
  40e9c8:	arpl   WORD PTR [edi-0x59b2ed7d],cx
  40e9ce:	retf   
  40e9cf:	adc    al,0xea
  40e9d1:	jbe    0x40e95c
  40e9d3:	sub    BYTE PTR [ebx-0x428febcb],dh
  40e9d9:	rol    al,1
  40e9db:	dec    eax
  40e9dc:	ss mov ah,0x71
  40e9df:	sti    
  40e9e0:	sub    esi,DWORD PTR [edx+0x24]
  40e9e3:	pop    edx
  40e9e4:	mov    ds:0x8f685d5e,al
  40e9e9:	sub    DWORD PTR [ebx+ebp*4],edi
  40e9ec:	mov    eax,ds:0xf0f6f35b
  40e9f1:	pop    ds
  40e9f2:	enter  0x4fbe,0x69
  40e9f6:	mov    ch,0x4a
  40e9f8:	push   esi
  40e9f9:	(bad)  
  40e9fb:	arpl   WORD PTR [esi+0xa],dx
  40e9fe:	sti    
  40e9ff:	test   BYTE PTR [ecx+edx*4-0x1507b86d],cl
  40ea06:	fisub  WORD PTR [di-0x59]
  40ea0a:	mov    bh,0x53
  40ea0c:	leave  
  40ea0d:	sbb    edx,edx
  40ea0f:	(bad)  
  40ea11:	(bad)  
  40ea12:	cmp    BYTE PTR [edx+esi*1],cl
  40ea15:	sbb    BYTE PTR [ebp-0x7a39bf97],cl
  40ea1b:	jmp    0x40e9be
  40ea1d:	cli    
  40ea1e:	jmp    0x40ea7a
  40ea20:	xchg   ecx,eax
  40ea21:	lahf   
  40ea22:	pop    ebx
  40ea23:	fistp  WORD PTR [eax+ebp*4-0x27cde8d2]
  40ea2a:	mov    al,ds:0x54abe030
  40ea2f:	jge    0x40e9c6
  40ea31:	popf   
  40ea32:	jnp    0x40eaa2
  40ea34:	enter  0x2d65,0xec
  40ea38:	sub    al,0x6
  40ea3a:	pop    ds
  40ea3b:	cmp    eax,DWORD PTR [eax]
  40ea3d:	out    0x63,eax
  40ea3f:	jnp    0x40e9fa
  40ea41:	es loopne 0x40eaa0
  40ea44:	xor    al,0xc5
  40ea46:	mov    edi,0xc9b12b5e
  40ea4b:	mov    esi,0x68e6c037
  40ea50:	pusha  
  40ea51:	ins    BYTE PTR es:[edi],dx
  40ea52:	(bad)  
  40ea53:	dec    ecx
  40ea54:	scas   al,BYTE PTR es:[edi]
  40ea55:	imul   edi,DWORD PTR [eax+0x6f3b32a7],0x515de85c
  40ea5f:	jns    0x40ea4f
  40ea61:	or     BYTE PTR [ebx],0xe9
  40ea64:	sbb    eax,0xcfb9d7ce
  40ea69:	push   es
  40ea6a:	ja     0x40ea0c
  40ea6c:	push   ecx
  40ea6d:	ins    BYTE PTR es:[edi],dx
  40ea6e:	rcr    dl,0xed
  40ea71:	mov    al,0x89
  40ea73:	(bad)  [ebx+0x28]
  40ea76:	and    al,BYTE PTR [eax]
  40ea78:	pushf  
  40ea79:	fisub  DWORD PTR fs:[eax+0x55]
  40ea7d:	push   esi
  40ea7e:	push   0x18
  40ea80:	imul   edx,ebp,0xc004ae7e
  40ea86:	gs hlt 
  40ea88:	scas   eax,DWORD PTR es:[edi]
  40ea89:	(bad)  
  40ea8a:	mov    dl,0x98
  40ea8c:	in     al,0x51
  40ea8e:	pop    edx
  40ea8f:	aad    0xfd
  40ea91:	out    0xe9,eax
  40ea93:	xor    DWORD PTR ds:0xa470d19d,ebx
  40ea99:	mov    ds:0x7f5c7a3c,al
  40ea9e:	and    BYTE PTR ds:0x986824c2,0x3
  40eaa5:	outs   dx,DWORD PTR ds:[esi]
  40eaa6:	xchg   edi,eax
  40eaa7:	out    dx,eax
  40eaa8:	test   bl,bl
  40eaaa:	mov    edi,0x2ddbad80
  40eaaf:	sbb    DWORD PTR [esi+0x72],ebp
  40eab2:	xor    al,0xc9
  40eab4:	je     0x40ea4f
  40eab6:	adc    bl,dh
  40eab8:	dec    esp
  40eab9:	adc    ch,BYTE PTR [ebp-0x45]
  40eabc:	push   edi
  40eabd:	dec    edx
  40eabe:	addr16 mov ebp,0xc2d74af9
  40eac4:	cld    
  40eac5:	shl    DWORD PTR [esi+0x79],1
  40eac8:	xchg   DWORD PTR [edx+0x55],ebx
  40eacb:	jle    0x40eabd
  40eacd:	in     eax,0x26
  40eacf:	sar    BYTE PTR [eax-0x4e],0x8e
  40ead3:	into   
  40ead4:	dec    edi
  40ead5:	fistp  QWORD PTR [eax]
  40ead7:	xor    bl,BYTE PTR [edx]
  40ead9:	adc    eax,0x629c43ce
  40eade:	ret    
  40eadf:	scas   al,BYTE PTR es:[edi]
  40eae0:	pop    ebx
  40eae1:	shr    DWORD PTR [ecx-0x5a9127c7],0x84
  40eae8:	loopne 0x40ea71
  40eaea:	(bad)  
  40eaeb:	sbb    eax,0xae96530c
  40eaf0:	xor    al,0x5b
  40eaf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaf3:	adc    BYTE PTR [ebp-0xe4431b],dl
  40eaf9:	(bad)
  40eafc:	sub    ah,0x53
  40eaff:	mov    edx,0x7f459232
  40eb04:	shl    DWORD PTR [ecx+eax*4+0x6e],cl
  40eb08:	cmp    eax,0x39f1b0dd
  40eb0d:	xor    ebp,DWORD PTR [esi-0x4f]
  40eb10:	inc    edx
  40eb11:	and    ebp,eax
  40eb13:	cmp    BYTE PTR [esi],ch
  40eb15:	inc    edx
  40eb16:	fadd   QWORD PTR [ebp-0x382f89b7]
  40eb1c:	aas    
  40eb1d:	inc    esi
  40eb1e:	sar    DWORD PTR [eax],1
  40eb20:	push   ecx
  40eb21:	leave  
  40eb22:	out    dx,al
  40eb23:	xchg   esi,eax
  40eb24:	mov    al,ds:0x16679dcc
  40eb29:	pop    ss
  40eb2a:	and    DWORD PTR [ebp+0x39178f74],ebp
  40eb30:	xchg   dl,bh
  40eb32:	dec    ebp
  40eb33:	mov    dl,0xb8
  40eb35:	scas   eax,DWORD PTR es:[edi]
  40eb36:	std    
  40eb37:	retf   0x897b
  40eb3a:	or     eax,0xcf379479
  40eb3f:	rol    dl,0x6d
  40eb42:	rol    eax,0x81
  40eb45:	mov    cl,0xe9
  40eb47:	dec    eax
  40eb48:	push   eax
  40eb49:	add    al,0xd2
  40eb4b:	cmp    BYTE PTR [eax+0x67],al
  40eb4e:	dec    esp
  40eb4f:	push   es
  40eb50:	hlt    
  40eb51:	arpl   WORD PTR [edx+0x65],cx
  40eb54:	and    DWORD PTR [esi+edx*4+0x2d82c6e],esi
  40eb5b:	call   0x71ad0fa3
  40eb60:	sub    al,0xbe
  40eb62:	push   ss
  40eb63:	jne    0x40eb9c
  40eb65:	push   esi
  40eb66:	fcomp  QWORD PTR [edi-0x6]
  40eb69:	and    BYTE PTR [eax-0x34],bh
  40eb6c:	out    0xa,eax
  40eb6e:	aam    0x6f
  40eb70:	mov    ds:0x93ffec50,eax
  40eb75:	xor    BYTE PTR [ebx+0x25],bl
  40eb78:	call   0x3642:0x1d42edba
  40eb7f:	sbb    BYTE PTR [ebx],dh
  40eb81:	inc    edx
  40eb82:	jae    0x40eb1f
  40eb84:	xor    ebx,DWORD PTR [ebx]
  40eb86:	adc    BYTE PTR [ecx+0x16e53bc7],0x43
  40eb8d:	adc    al,0x8f
  40eb8f:	out    dx,eax
  40eb90:	dec    edx
  40eb91:	cmc    
  40eb92:	push   esi
  40eb93:	sbb    eax,0x4696d37d
  40eb98:	pop    ds
  40eb99:	iret   
  40eb9a:	dec    DWORD PTR [edx]
  40eb9c:	ficom  WORD PTR [edx]
  40eb9e:	je     0x40ec1f
  40eba0:	out    0xd4,al
  40eba2:	sahf   
  40eba3:	in     al,0xfa
  40eba5:	mov    eax,ds:0x75f17516
  40ebaa:	popa   
  40ebab:	stc    
  40ebac:	clc    
  40ebad:	sub    al,0xaf
  40ebaf:	arpl   bp,si
  40ebb1:	xchg   BYTE PTR [ebx],ch
  40ebb3:	jb     0x40eb74
  40ebb5:	outs   dx,DWORD PTR ds:[esi]
  40ebb6:	mov    cl,BYTE PTR [ebp-0x2fee193b]
  40ebbc:	stc    
  40ebbd:	into   
  40ebbe:	lahf   
  40ebbf:	pop    esp
  40ebc0:	mov    bh,0x7c
  40ebc2:	and    ebp,ebp
  40ebc4:	(bad)  
  40ebc5:	je     0x40eb73
  40ebc7:	jb     0x40ebfd
  40ebc9:	fbld   TBYTE PTR [edx]
  40ebcb:	and    BYTE PTR ss:[esi],ah
  40ebce:	das    
  40ebcf:	xor    DWORD PTR [edi],ecx
  40ebd1:	push   esi
  40ebd2:	mov    edx,0xba079c36
  40ebd7:	icebp  
  40ebd8:	outs   dx,BYTE PTR ds:[esi]
  40ebd9:	pop    ebx
  40ebda:	add    al,0x98
  40ebdc:	sub    al,0xe4
  40ebde:	jmp    FWORD PTR [esi-0x3d132739]
  40ebe4:	pop    ss
  40ebe5:	pushw  0xff92
  40ebe8:	mov    al,0xc3
  40ebeb:	sub    dh,BYTE PTR [eax+0x5c]
  40ebee:	jge    0x40eba7
  40ebf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebf1:	(bad)  
  40ebf2:	pop    esi
  40ebf3:	cmp    BYTE PTR ds:0xaf736d7b,dl
  40ebf9:	pusha  
  40ebfa:	and    al,0x2d
  40ebfc:	jle    0x40ec78
  40ebfe:	cmp    edx,esi
  40ec00:	sub    eax,0x6be0544f
  40ec05:	iret   
  40ec06:	es dec ebp
  40ec08:	jns    0x40ec27
  40ec0a:	inc    edx
  40ec0b:	pop    ecx
  40ec0c:	inc    esi
  40ec0d:	sbb    eax,0x9c76a21
  40ec12:	and    DWORD PTR [esi],eax
  40ec14:	sub    DWORD PTR [edi],eax
  40ec16:	sub    ah,0x35
  40ec19:	xor    dl,dl
  40ec1b:	leave  
  40ec1c:	(bad)  
  40ec1d:	icebp  
  40ec1e:	mov    dl,0x5e
  40ec20:	add    BYTE PTR [esi-0x1386259c],0x53
  40ec27:	lahf   
  40ec28:	dec    ecx
  40ec29:	mov    cl,0xe7
  40ec2b:	adc    al,0x6d
  40ec2d:	mov    ds:0xbbef421e,al
  40ec32:	call   0xe3a694f9
  40ec37:	cmc    
  40ec38:	bound  ebp,QWORD PTR [eax+eiz*2+0x73]
  40ec3c:	xchg   edx,eax
  40ec3d:	or     eax,0xf7350b3e
  40ec42:	xor    esp,DWORD PTR [esi-0x3db810cb]
  40ec48:	and    edx,DWORD PTR [edx+ebx*1+0x34aa8460]
  40ec4f:	and    esi,0xffffffa2
  40ec52:	inc    ecx
  40ec53:	das    
  40ec54:	test   eax,0xad4f980e
  40ec59:	mov    ah,0x5
  40ec5b:	stc    
  40ec5c:	xchg   edi,eax
  40ec5d:	call   0xa98026bf
  40ec62:	adc    eax,0x2fa30109
  40ec67:	mov    al,0xbb
  40ec69:	popf   
  40ec6a:	fcmovne st,st(0)
  40ec6c:	repz std 
  40ec6e:	in     eax,0x79
  40ec70:	xchg   BYTE PTR [edi+0x2f],cl
  40ec73:	enter  0xddab,0xbb
  40ec77:	push   0x2d
  40ec79:	pop    ebp
  40ec7a:	mov    ah,0xd4
  40ec7c:	mov    bl,BYTE PTR [eax]
  40ec7e:	gs mov cl,0x55
  40ec81:	mov    BYTE PTR [edx],0x94
  40ec84:	(bad)  
  40ec85:	popa   
  40ec86:	mov    dh,0xfa
  40ec88:	mov    bh,0xe5
  40ec8a:	mov    al,ds:0xfc9b055
  40ec8f:	dec    ebp
  40ec90:	dec    edi
  40ec91:	add    dh,dh
  40ec93:	(bad)  
  40ec94:	mov    bl,0xbd
  40ec96:	inc    ebp
  40ec97:	adc    edx,DWORD PTR [esi-0xf]
  40ec9a:	jecxz  0x40ecbe
  40ec9c:	mov    WORD PTR [ecx+0x290fc4b2],fs
  40eca2:	outs   dx,BYTE PTR ds:[esi]
  40eca3:	or     BYTE PTR [ebx-0x26dfa398],bh
  40eca9:	imul   ecx,DWORD PTR ss:[eax],0x56731d6b
  40ecb0:	psrlw  mm1,0xc9
  40ecb4:	push   esp
  40ecb5:	add    al,0xae
  40ecb7:	mov    ecx,0x5a8cfd1a
  40ecbc:	xchg   edi,eax
  40ecbd:	(bad)  
  40ecbe:	mov    ebp,0xf37bd79a
  40ecc3:	add    bh,bh
  40ecc5:	inc    eax
  40ecc6:	jns    0x40ec4a
  40ecc8:	jmp    0xe143:0x8ce617df
  40eccf:	mov    al,ds:0x9ace560
  40ecd4:	mov    dl,0x8d
  40ecd6:	cmp    al,0xde
  40ecd8:	fidivr WORD PTR [edx+0x19]
  40ecdb:	jb     0x40ed54
  40ecdd:	xchg   esi,eax
  40ecde:	stc    
  40ecdf:	cmc    
  40ece0:	and    BYTE PTR [ebp+0x1f99fc1f],0xdd
  40ece7:	into   
  40ece8:	call   DWORD PTR [ebx]
  40ecea:	or     DWORD PTR [edx+0x639bbc8b],ebx
  40ecf0:	mov    eax,0xad127304
  40ecf5:	inc    ebx
  40ecf6:	scas   eax,DWORD PTR es:[edi]
  40ecf7:	mov    ds:0xeb93f80f,eax
  40ecfc:	retf   
  40ecfd:	pop    ebp
  40ecfe:	inc    edx
  40ecff:	mov    eax,0x42c163b5
  40ed04:	fs out dx,eax
  40ed06:	lahf   
  40ed07:	jp     0x40ed55
  40ed09:	hlt    
  40ed0a:	xor    al,0x40
  40ed0c:	dec    ecx
  40ed0d:	stc    
  40ed0e:	jg     0x40ed05
  40ed10:	cmp    al,0x3a
  40ed12:	sub    esi,eax
  40ed14:	std    
  40ed15:	dec    eax
  40ed16:	xor    ebx,DWORD PTR [ebp+0x580fe34f]
  40ed1c:	pop    edx
  40ed1d:	sbb    al,BYTE PTR [edi+0x6a6f263b]
  40ed23:	or     edi,eax
  40ed25:	outs   dx,DWORD PTR ds:[esi]
  40ed26:	mov    ch,0x8d
  40ed28:	adc    DWORD PTR [edi+0x2],0xffffffca
  40ed2c:	arpl   WORD PTR [edx],ax
  40ed2e:	xchg   edi,eax
  40ed2f:	(bad)  
  40ed30:	shr    BYTE PTR ds:0xbb565d32,cl
  40ed36:	xchg   esp,eax
  40ed37:	inc    eax
  40ed38:	or     cl,ch
  40ed3a:	push   DWORD PTR [eax]
  40ed3c:	or     eax,0x590f8442
  40ed41:	cmp    eax,0x2f0896d
  40ed46:	dec    edi
  40ed47:	(bad)  
  40ed49:	fnsave [ebp+0x5b]
  40ed4c:	loop   0x40ece8
  40ed4e:	mov    eax,0x50b2b002
  40ed53:	(bad)  
  40ed55:	mov    edx,0x3075d640
  40ed5a:	iret   
  40ed5b:	lds    edx,FWORD PTR [esi+0x25e8ca31]
  40ed61:	sbb    cl,ch
  40ed63:	fsub   QWORD PTR [ecx]
  40ed65:	push   ebx
  40ed66:	xchg   edi,eax
  40ed67:	lea    ebp,[eax]
  40ed69:	(bad)  
  40ed6a:	mov    al,ds:0xcafa26e2
  40ed6f:	jo     0x40ed1b
  40ed71:	push   eax
  40ed72:	pop    ss
  40ed73:	mov    ebx,0x7be565cb
  40ed78:	xor    ch,al
  40ed7a:	iret   
  40ed7b:	ins    DWORD PTR es:[edi],dx
  40ed7c:	and    eax,0x81e2c3fa
  40ed81:	std    
  40ed82:	cld    
  40ed83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed84:	xor    bl,BYTE PTR [ecx+ebx*8-0x3a]
  40ed88:	ret    
  40ed89:	(bad)  
  40ed8a:	mov    eax,0xda62a6d9
  40ed8f:	mov    edi,0xacd9e623
  40ed94:	lods   al,BYTE PTR ds:[esi]
  40ed95:	inc    edi
  40ed96:	pop    esp
  40ed97:	ins    BYTE PTR es:[edi],dx
  40ed98:	popf   
  40ed99:	(bad)  
  40ed9a:	call   0x2ea964ab
  40ed9f:	sub    ebp,edx
  40eda1:	push   ecx
  40eda2:	sbb    ebx,DWORD PTR [ecx]
  40eda4:	mov    ebp,0x22e99028
  40eda9:	shl    BYTE PTR [ebp+0x4b],0xd4
  40edad:	adc    BYTE PTR [ebx+0x7e274791],ah
  40edb3:	mov    al,ds:0x7d025ad7
  40edb8:	and    edx,esp
  40edba:	sub    BYTE PTR [edx-0xc28eaca],0x22
  40edc1:	les    ecx,FWORD PTR [esi-0x41a294bd]
  40edc7:	push   eax
  40edc8:	cs pop edi
  40edca:	adc    al,0x9e
  40edcc:	dec    eax
  40edcd:	cmp    BYTE PTR [eax+0x75],bl
  40edd0:	push   edx
  40edd1:	ret    0x4013
  40edd4:	mov    eax,ds:0x8b30fab5
  40edd9:	bnd ja 0x40ee13
  40eddc:	jne    0x40ee00
  40edde:	arpl   si,bx
  40ede0:	sub    edi,0xecd5ec6f
  40ede6:	in     eax,0x97
  40ede8:	mov    ds:0x4f958675,al
  40eded:	sbb    ah,BYTE PTR [edi]
  40edef:	inc    eax
  40edf0:	addr16 stc 
  40edf2:	adc    ch,0x8c
  40edf5:	jge    0x40ede1
  40edf7:	or     eax,0x86772929
  40edfc:	adc    esi,0xffffff9d
  40edff:	xor    DWORD PTR [ebx],edi
  40ee01:	jecxz  0x40ede4
  40ee03:	lock cmp DWORD PTR ss:[edx-0x43316bdb],edx
  40ee0b:	imul   ebx,DWORD PTR [ebp+0x73337865],0xf573a3dc
  40ee15:	adc    al,0xc6
  40ee17:	into   
  40ee18:	push   ss
  40ee19:	out    0xad,eax
  40ee1b:	sub    ch,BYTE PTR [ecx-0x51]
  40ee1e:	loop   0x40ee16
  40ee20:	pop    ss
  40ee21:	sub    ebx,DWORD PTR [edx]
  40ee23:	cld    
  40ee24:	cdq    
  40ee25:	(bad)  
  40ee26:	mov    eax,0xae11aa4d
  40ee2b:	sbb    al,ch
  40ee2d:	jmp    FWORD PTR [ebx-0x45]
  40ee30:	sub    al,0xf4
  40ee32:	les    ebp,FWORD PTR [esi+ebx*8+0x13]
  40ee36:	test   eax,0x5984b8a3
  40ee3b:	cs rol cl,0x39
  40ee3f:	retf   0xe649
  40ee42:	lods   eax,DWORD PTR ds:[esi]
  40ee43:	into   
  40ee44:	xor    eax,0x47a7302c
  40ee49:	dec    esi
  40ee4a:	cmp    al,0x4e
  40ee4c:	push   esp
  40ee4d:	mov    esp,eax
  40ee4f:	rol    DWORD PTR [ebx],1
  40ee51:	inc    edi
  40ee52:	xchg   esp,eax
  40ee53:	retf   0x677b
  40ee56:	in     eax,dx
  40ee57:	push   ds
  40ee58:	cmp    DWORD PTR [eax+0x8505116],edx
  40ee5e:	outs   dx,DWORD PTR ds:[esi]
  40ee5f:	dec    edi
  40ee60:	ss or  eax,0x7e2dba0b
  40ee66:	stc    
  40ee67:	fmul   QWORD PTR [ebx+0x7b035c3d]
  40ee6d:	loopne 0x40eea5
  40ee6f:	ins    DWORD PTR es:[edi],dx
  40ee70:	xchg   esi,eax
  40ee71:	fcomp  QWORD PTR ds:0x6d57179d
  40ee77:	daa    
  40ee78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee79:	and    BYTE PTR [eax+0x5d],bh
  40ee7c:	and    ebp,esi
  40ee7e:	rcl    BYTE PTR [ebx+0x7f],cl
  40ee81:	int    0x86
  40ee83:	xchg   BYTE PTR [edi+eiz*1],dl
  40ee86:	mov    DWORD PTR [edi+0x46],esi
  40ee89:	mov    bh,0x81
  40ee8b:	aad    0xe2
  40ee8d:	jge    0x40eec8
  40ee8f:	gs int 0xb3
  40ee92:	test   BYTE PTR [eax-0x16020880],cl
  40ee98:	gs pop esp
  40ee9a:	sbb    BYTE PTR [edx+0x6b6336bc],dl
  40eea0:	cmp    DWORD PTR [esi],0x6c
  40eea3:	std    
  40eea4:	imul   edi,ebx,0x160865bd
  40eeaa:	xor    esi,edx
  40eeac:	aaa    
  40eead:	and    BYTE PTR [ebx+0x4bcc41c3],0xac
  40eeb4:	jne    0x40ef2a
  40eeb6:	inc    ecx
  40eeb7:	xchg   DWORD PTR [eax+0x48],edx
  40eeba:	outs   dx,DWORD PTR ds:[esi]
  40eebb:	pop    edi
  40eebc:	(bad)  
  40eebd:	lods   eax,DWORD PTR ds:[esi]
  40eebe:	(bad)  
  40eebf:	push   ecx
  40eec0:	rol    BYTE PTR [ebx+ebx*4],1
  40eec3:	mov    eax,ds:0x8fea428c
  40eec8:	adc    ebp,DWORD PTR [edx]
  40eeca:	sub    DWORD PTR [eax+0x9],ebp
  40eecd:	es fcmovne st,st(0)
  40eed0:	cli    
  40eed1:	jne    0x40ef27
  40eed3:	jge    0x40eeb7
  40eed5:	mov    eax,ds:0xd3db5c6c
  40eeda:	dec    edx
  40eedb:	shl    DWORD PTR [eax-0x41],1
  40eede:	add    DWORD PTR [edi+0x24],esp
  40eee1:	fstp   TBYTE PTR [edx-0x43becb44]
  40eee7:	mov    ch,0xd9
  40eee9:	or     DWORD PTR [ebp+0x22356a15],edi
  40eeef:	fcom   DWORD PTR [eax-0x5e]
  40eef2:	stos   DWORD PTR es:[edi],eax
  40eef3:	les    ebx,FWORD PTR [esi-0x38]
  40eef6:	enter  0x95ac,0x84
  40eefa:	call   0x9d33:0xfc99f049
  40ef01:	stc    
  40ef02:	pop    ebp
  40ef04:	sbb    bh,ah
  40ef06:	pop    edx
  40ef07:	sbb    ebx,DWORD PTR ds:0x566aa4
  40ef0d:	loop   0x40ef3b
  40ef0f:	jp     0x40ef65
  40ef11:	mov    eax,0x44f17e5d
  40ef16:	int    0xc6
  40ef18:	bound  esp,QWORD PTR [edx-0x8]
  40ef1b:	push   0x2b
  40ef1d:	sbb    eax,0x43aa512c
  40ef22:	mov    ah,0x32
  40ef24:	jns    0x40eedb
  40ef26:	dec    eax
  40ef27:	mov    BYTE PTR [ecx+0x46],cl
  40ef2a:	ds push cs
  40ef2c:	dec    ecx
  40ef2d:	inc    edx
  40ef2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef2f:	xchg   bl,ch
  40ef31:	arpl   WORD PTR [ebx],sp
  40ef33:	stos   BYTE PTR es:[edi],al
  40ef34:	es test eax,0x6428e48e
  40ef3a:	mov    dh,0x58
  40ef3c:	scas   eax,DWORD PTR es:[edi]
  40ef3d:	push   ecx
  40ef3e:	sub    BYTE PTR [ebx],ah
  40ef40:	stos   DWORD PTR es:[edi],eax
  40ef41:	ja     0x40ef62
  40ef43:	mov    dl,BYTE PTR [esi-0x46ea26fa]
  40ef49:	or     al,0xb1
  40ef4b:	add    ah,dl
  40ef4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef4e:	adc    al,0x4f
  40ef50:	mov    ch,0x43
  40ef52:	pop    ss
  40ef53:	add    dh,BYTE PTR [ecx+0x1fdf7709]
  40ef59:	push   0xaef8b165
  40ef5e:	aad    0xa5
  40ef60:	pop    ebx
  40ef61:	outs   dx,DWORD PTR ds:[esi]
  40ef62:	addr16 jmp 0x7d98:0x3a452b25
  40ef6a:	dec    edi
  40ef6b:	out    0x37,eax
  40ef6d:	inc    edi
  40ef6e:	jmp    0x5bdb1b99
  40ef73:	inc    edx
  40ef74:	sub    eax,0x33434971
  40ef79:	xor    dl,BYTE PTR [edx]
  40ef7b:	jnp    0x40ef7a
  40ef7d:	aaa    
  40ef7e:	xchg   esi,eax
  40ef7f:	inc    edx
  40ef80:	bound  esp,QWORD PTR [ebx]
  40ef82:	out    0xd2,eax
  40ef84:	in     eax,dx
  40ef85:	loopne 0x40ef67
  40ef87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef88:	data16 hlt 
  40ef8a:	xchg   edi,eax
  40ef8b:	in     al,0xe9
  40ef8d:	int    0x84
  40ef8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef90:	pop    edx
  40ef91:	cmp    DWORD PTR [eax],eax
  40ef93:	jl     0x40ef1f
  40ef95:	out    0x73,eax
  40ef97:	push   ebx
  40ef98:	nop
  40ef99:	add    ebp,DWORD PTR [ebx+0x131d34dc]
  40ef9f:	jle    0x40ef8f
  40efa1:	popa   
  40efa2:	data16 jae 0x40ef53
  40efa5:	adc    ch,BYTE PTR [esi+esi*1-0x4c]
  40efa9:	pop    ecx
  40efaa:	mov    cl,0xb4
  40efac:	ins    DWORD PTR es:[edi],dx
  40efad:	xor    BYTE PTR ds:0x7ac53b0d,al
  40efb3:	test   al,al
  40efb5:	xlat   BYTE PTR ds:[ebx]
  40efb6:	add    DWORD PTR [esi],edx
  40efb8:	or     BYTE PTR ds:0x2a73aa13,dl
  40efbe:	push   es
  40efbf:	dec    ecx
  40efc0:	sub    ah,BYTE PTR [ecx+0x2d]
  40efc3:	(bad)  
  40efc5:	mov    esi,0xabea958e
  40efca:	mov    dl,0x55
  40efcc:	add    BYTE PTR [eax-0x4b2dfe2b],bh
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	jns    0x40effd
  40efd6:	mov    esp,0x411d8284
  40efdb:	(bad)  
  40efdc:	repz inc edx
  40efde:	sub    BYTE PTR [ebx+eax*4-0x48fbeac0],al
  40efe5:	and    DWORD PTR [eax+edi*1-0xa],ecx
  40efe9:	iret   
  40efea:	jmp    0xc432bcda
  40efef:	or     dl,BYTE PTR [ebx]
  40eff1:	dec    edi
  40eff2:	sbb    eax,0x17dd0392
  40eff7:	rcr    al,cl
  40eff9:	popf   
  40effa:	push   es
  40effb:	dec    eax
  40effc:	ret    
  40effd:	adc    BYTE PTR [edi+0x2b427119],0x60
  40f004:	dec    BYTE PTR [ecx+ebp*8]
  40f007:	mov    dl,0xe4
  40f009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f00a:	inc    edx
  40f00b:	into   
  40f00c:	push   esp
  40f00d:	or     eax,0x546e757e
  40f012:	in     eax,0xf8
  40f014:	(bad)  
  40f015:	sbb    eax,ebx
  40f017:	pusha  
  40f018:	mov    dl,0x28
  40f01a:	xlat   BYTE PTR ds:[ebx]
  40f01b:	add    DWORD PTR [edx+eiz*8],ebx
  40f01e:	pop    esp
  40f01f:	push   edi
  40f020:	in     al,dx
  40f021:	mov    eax,0xf7f88b6a
  40f026:	push   edi
  40f027:	cld    
  40f028:	jne    0x40efb5
  40f02a:	dec    eax
  40f02b:	add    BYTE PTR [edx],al
  40f02d:	repz sub BYTE PTR [edi],dl
  40f030:	mov    al,0x93
  40f032:	out    dx,eax
  40f033:	cmp    BYTE PTR [esi+0x32a70641],al
  40f039:	(bad)  
  40f03a:	xor    BYTE PTR ds:0xfc3dd918,ah
  40f040:	stos   BYTE PTR es:[edi],al
  40f041:	rcl    DWORD PTR [edi-0x10],0xa7
  40f045:	push   eax
  40f046:	lods   al,BYTE PTR ds:[esi]
  40f047:	(bad)  
  40f048:	aad    0x1f
  40f04a:	daa    
  40f04b:	mov    edx,DWORD PTR es:[ebx-0x50]
  40f04f:	gs inc edx
  40f051:	lahf   
  40f052:	(bad)  
  40f053:	fisubr WORD PTR [ebp-0x18d0c8b2]
  40f059:	repz add DWORD PTR [ebp+0x5e],eax
  40f05d:	and    eax,DWORD PTR [ebp-0x79]
  40f060:	mov    ds:0xafa7b21,eax
  40f065:	out    dx,al
  40f066:	gs pop ebx
  40f068:	outs   dx,DWORD PTR ds:[esi]
  40f069:	adc    al,BYTE PTR [ebp+0x9f0610]
  40f06f:	sbb    eax,0x9e4a8082
  40f074:	add    bh,BYTE PTR [eax]
  40f076:	or     eax,DWORD PTR [ecx]
  40f078:	push   edx
  40f079:	mov    fs,esp
  40f07b:	and    BYTE PTR [eax+esi*1+0x50],bl
  40f07f:	mov    dh,0xb1
  40f081:	sub    eax,0x56bd19d
  40f086:	add    DWORD PTR [edx+edi*8-0x6e],esp
  40f08a:	dec    edi
  40f08b:	xchg   BYTE PTR [ebp-0x6534d8cb],ch
  40f091:	sbb    eax,0x3206ab35
  40f096:	ret    
  40f097:	imul   eax,DWORD PTR [eax+eiz*8],0x3456043c
  40f09e:	repz repnz pop ebp
  40f0a1:	jmp    0x7c304a7d
  40f0a6:	repz mov bl,0x6b
  40f0a9:	aaa    
  40f0aa:	fcmovnb st,st(7)
  40f0ac:	inc    ecx
  40f0ad:	imul   esi,DWORD PTR [ebx],0xffffffd8
  40f0b0:	push   esp
  40f0b1:	sbb    BYTE PTR [ecx],0xf4
  40f0b4:	or     ch,BYTE PTR [edx]
  40f0b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0b7:	xchg   ebx,edi
  40f0b9:	adc    bh,BYTE PTR [ecx]
  40f0bb:	cmp    al,0x56
  40f0bd:	adc    al,0x82
  40f0bf:	sub    dl,BYTE PTR [eax+edx*4-0x7]
  40f0c3:	push   ds
  40f0c4:	dec    ebp
  40f0c5:	jb     0x40f08b
  40f0c7:	sbb    bh,BYTE PTR [esp+edi*8]
  40f0ca:	jae    0x40f0c1
  40f0cc:	or     BYTE PTR [eax],dh
  40f0ce:	fld    QWORD PTR [esi+0x1a442314]
  40f0d4:	jmp    0x3b886760
  40f0d9:	and    eax,0x920c1779
  40f0de:	jge    0x40f0e4
  40f0e0:	pop    esp
  40f0e1:	sub    eax,0xe4e6bdba
  40f0e6:	lods   al,BYTE PTR ds:[esi]
  40f0e7:	cmp    ebx,DWORD PTR [esp+eiz*4-0x4f699ffd]
  40f0ee:	rol    edi,0xe8
  40f0f1:	pushf  
  40f0f2:	and    al,0x38
  40f0f4:	cmp    DWORD PTR [edi+0x50c7b118],0x18a0503e
  40f0fe:	mov    ah,bl
  40f100:	mov    eax,ds:0x3bdc2061
  40f105:	out    0xe4,al
  40f107:	dec    esp
  40f108:	icebp  
  40f109:	mov    ds:0x3bd12f67,ax
  40f10f:	xchg   BYTE PTR [esi+0x30a70668],ch
  40f115:	and    al,0xdd
  40f117:	sub    eax,0x9548257b
  40f11c:	ins    BYTE PTR es:[edi],dx
  40f11d:	(bad)  
  40f11e:	nop
  40f11f:	cld    
  40f120:	adc    BYTE PTR [ecx+0xe],0x73
  40f124:	xchg   esp,eax
  40f125:	dec    edi
  40f126:	or     BYTE PTR [ebp-0x219c89d3],ch
  40f12c:	into   
  40f12d:	mov    ch,0x5b
  40f12f:	clc    
  40f130:	pop    eax
  40f131:	xchg   edi,eax
  40f132:	in     eax,dx
  40f133:	aaa    
  40f134:	nop
  40f135:	mov    ch,0x7f
  40f137:	call   0xc41a5de
  40f13c:	stc    
  40f13d:	popa   
  40f13e:	xchg   BYTE PTR ds:0x25afc18c,al
  40f144:	dec    edx
  40f145:	sbb    edi,DWORD PTR [ebp-0x6ed77aa1]
  40f14b:	jno    0x40f119
  40f14d:	mov    ds:0x62ad5ad2,al
  40f152:	in     al,0xe9
  40f154:	and    al,0x57
  40f156:	sbb    DWORD PTR [ebx+ecx*1-0x4f],eax
  40f15a:	repnz dec esp
  40f15c:	xchg   ebx,eax
  40f15d:	jmp    0x63bd:0xd7118a7b
  40f164:	adc    al,0x1
  40f166:	ret    0xf7f4
  40f169:	xor    BYTE PTR [edx],bh
  40f16b:	xchg   esi,eax
  40f16c:	out    0xe7,eax
  40f16e:	push   ecx
  40f16f:	ds aad 0x77
  40f172:	shr    DWORD PTR [edi],0xff
  40f175:	out    0x1d,eax
  40f177:	jae    0x40f1a5
  40f179:	mov    DWORD PTR ds:0x38cc57ab,0xef0db202
  40f183:	push   eax
  40f184:	inc    ebx
  40f185:	cdq    
  40f186:	pop    eax
  40f187:	sub    BYTE PTR [ebp+0x61],bl
  40f18a:	or     edx,DWORD PTR [esi]
  40f18c:	cmp    BYTE PTR [esp+esi*1+0x4],dl
  40f190:	mov    cl,0xed
  40f192:	cmp    al,0x20
  40f194:	sbb    dl,BYTE PTR [ecx+0x7bb42a20]
  40f19a:	inc    ecx
  40f19b:	inc    esp
  40f19c:	sbb    eax,DWORD PTR [ebx]
  40f19e:	mov    eax,0x9464043e
  40f1a3:	ins    BYTE PTR es:[edi],dx
  40f1a4:	and    esi,DWORD PTR [esi]
  40f1a6:	aas    
  40f1a7:	(bad)  
  40f1a8:	(bad)  
  40f1a9:	xor    dh,ah
  40f1ab:	dec    ebp
  40f1ac:	adc    eax,0x3e9d4168
  40f1b1:	mov    dl,0x94
  40f1b3:	add    BYTE PTR [edi],bl
  40f1b5:	xchg   ebp,eax
  40f1b6:	jmp    0x5271120f
  40f1bb:	mov    edi,0x4161a105
  40f1c0:	mov    WORD PTR [esi-0x3ea02943],es
  40f1c6:	outs   dx,BYTE PTR ds:[esi]
  40f1c7:	push   edi
  40f1c8:	daa    
  40f1c9:	(bad)  
  40f1ca:	jbe    0x40f243
  40f1cc:	(bad)  
  40f1cd:	retf   0x3d5f
  40f1d0:	scas   al,BYTE PTR es:[edi]
  40f1d1:	mov    bh,BYTE PTR [edi+edx*8+0x22]
  40f1d5:	lahf   
  40f1d6:	pusha  
  40f1d7:	je     0x40f1a6
  40f1d9:	sbb    al,0x60
  40f1db:	cwde   
  40f1dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1dd:	mov    ebx,0x6b32c627
  40f1e2:	imul   BYTE PTR [edi-0x383a5ea2]
  40f1e8:	sbb    ebp,DWORD PTR [eax]
  40f1ea:	inc    eax
  40f1eb:	push   ss
  40f1ec:	jmp    0x40f198
  40f1ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ef:	mov    al,ds:0x378d63bb
  40f1f4:	shl    BYTE PTR [ebx-0x2c81effd],cl
  40f1fa:	das    
  40f1fb:	mov    esi,DWORD PTR [edx]
  40f1fd:	(bad)  
  40f1fe:	push   cs
  40f1ff:	mov    ebp,0x10eb14d4
  40f204:	fwait
  40f205:	mov    esp,0x46cd1acd
  40f20a:	mov    al,al
  40f20c:	int3   
  40f20d:	loope  0x40f22d
  40f20f:	push   esp
  40f210:	mov    eax,0xca4220b7
  40f215:	mov    ebp,DWORD PTR [ebx]
  40f217:	cli    
  40f218:	dec    ebx
  40f219:	cmp    ebp,ebx
  40f21b:	mov    edx,0x88a184bf
  40f220:	xchg   esp,eax
  40f221:	dec    eax
  40f222:	in     al,dx
  40f223:	xchg   ebx,eax
  40f224:	push   0x116f32d1
  40f229:	sbb    esp,0x78
  40f22c:	mov    bh,0x78
  40f22e:	ror    ecx,0x2f
  40f231:	adc    DWORD PTR [edx-0x34],ebx
  40f234:	(bad)  
  40f235:	lods   al,BYTE PTR ds:[esi]
  40f236:	xor    eax,0x15ee7264
  40f23b:	and    ecx,esp
  40f23d:	ret    
  40f23e:	outs   dx,BYTE PTR ds:[esi]
  40f23f:	mov    dh,0x9c
  40f241:	pop    edi
  40f242:	push   0x96d8e3e6
  40f247:	das    
  40f248:	aad    0x33
  40f24a:	push   esi
  40f24b:	js     0x40f2a9
  40f24d:	es test al,0xf1
  40f250:	mov    esi,0xece889d6
  40f255:	mov    ebp,DWORD PTR [eax+0x1b]
  40f258:	jns    0x40f2a9
  40f25a:	idiv   DWORD PTR [ebp+esi*4+0x6dfe7ded]
  40f261:	push   esi
  40f262:	lea    edx,[ebx]
  40f264:	out    dx,eax
  40f265:	repnz sbb BYTE PTR [ecx+0x53],dh
  40f269:	inc    eax
  40f26a:	jle    0x40f21c
  40f26c:	inc    ebx
  40f26d:	mov    esi,0x91c4285e
  40f272:	cs (bad) 
  40f274:	and    DWORD PTR [esi+0x797808d7],edx
  40f27a:	das    
  40f27b:	push   ds
  40f27c:	xor    edx,eax
  40f27e:	cmc    
  40f27f:	test   eax,0xb751adbf
  40f284:	out    dx,eax
  40f285:	daa    
  40f286:	imul   edx,DWORD PTR [edx],0xffffffba
  40f289:	out    0x63,eax
  40f28b:	arpl   WORD PTR [edx+edx*4],bp
  40f28e:	push   ds
  40f28f:	in     al,0x97
  40f291:	icebp  
  40f292:	pop    esi
  40f293:	push   ds
  40f294:	xor    cl,BYTE PTR [edi-0x2e]
  40f297:	push   ebx
  40f298:	xchg   ebp,eax
  40f299:	mov    dh,0x10
  40f29b:	sub    al,0xb6
  40f29d:	(bad)  
  40f29e:	(bad)  
  40f29f:	shl    BYTE PTR [ebp-0x18d98a30],1
  40f2a5:	push   eax
  40f2a6:	stc    
  40f2a7:	retf   
  40f2a8:	adc    DWORD PTR [edx],0x6e1acf85
  40f2ae:	das    
  40f2af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2b0:	fisub  DWORD PTR [esi-0x6785d4f1]
  40f2b6:	dec    esp
  40f2b7:	mov    ds:0x4d5935,al
  40f2bc:	sub    eax,0x319b8402
  40f2c1:	out    dx,eax
  40f2c2:	int3   
  40f2c3:	push   edi
  40f2c4:	loopne 0x40f248
  40f2c6:	cld    
  40f2c7:	mov    ecx,0xd663634c
  40f2cc:	cmp    cl,BYTE PTR [edi-0x65]
  40f2cf:	sub    eax,0xf5a5e64f
  40f2d4:	es iret 
  40f2d6:	loop   0x40f31c
  40f2d8:	pop    ebx
  40f2d9:	lahf   
  40f2da:	aas    
  40f2db:	shr    BYTE PTR [edx+0x4950d0ca],cl
  40f2e1:	cmp    DWORD PTR [edi+0xde8fb0],esi
  40f2e7:	cmp    ecx,ebx
  40f2e9:	mov    BYTE PTR [edi],cl
  40f2eb:	sbb    al,0xf1
  40f2ed:	cwde   
  40f2ee:	sub    esi,ecx
  40f2f0:	sub    bl,al
  40f2f2:	adc    al,0x0
  40f2f4:	mov    ecx,0xaf318672
  40f2f9:	sbb    ebp,DWORD PTR [edi-0x43]
  40f2fc:	inc    edx
  40f2fd:	jae    0x40f351
  40f2ff:	data16 mov cl,0xe4
  40f302:	push   eax
  40f303:	pop    esp
  40f304:	sti    
  40f305:	jno    0x40f30e
  40f307:	push   esi
  40f308:	and    eax,0x883835b
  40f30d:	pop    ebx
  40f30e:	jae    0x40f2e7
  40f310:	fdiv   QWORD PTR [esi+0x24]
  40f313:	push   eax
  40f314:	or     al,0xca
  40f316:	fcom   DWORD PTR [ebx+0x4f]
  40f319:	sub    dh,bh
  40f31b:	shl    BYTE PTR [edx],1
  40f31d:	mov    bh,0x5b
  40f31f:	test   ebx,esi
  40f321:	xchg   DWORD PTR [eax-0x5729e7ef],eax
  40f327:	(bad)  
  40f328:	ss xor al,0x95
  40f32b:	xchg   BYTE PTR [edx],cl
  40f32d:	adc    BYTE PTR [edx-0x5d],0xc
  40f331:	or     al,0x98
  40f333:	int    0x91
  40f335:	jmp    0x41:0xdf5f4a69
  40f33c:	out    dx,al
  40f33d:	ror    DWORD PTR [esi+0x62],0xbe
  40f341:	sahf   
  40f342:	std    
  40f343:	mov    edi,0x36c3cabe
  40f348:	or     al,0x9e
  40f34a:	xchg   edi,eax
  40f34b:	mov    ebx,DWORD PTR [edi+edx*2]
  40f34e:	ins    DWORD PTR es:[edi],dx
  40f34f:	stos   BYTE PTR es:[edi],al
  40f350:	pop    ebx
  40f351:	fcomp  DWORD PTR [edi+edi*1-0x46]
  40f355:	cld    
  40f356:	jl     0x40f38f
  40f358:	add    edi,DWORD PTR [edx]
  40f35a:	pop    esi
  40f35b:	in     eax,0xb8
  40f35d:	mov    dl,0x89
  40f35f:	call   0x81ef3ed4
  40f364:	xor    al,0x28
  40f366:	(bad)  
  40f367:	xchg   ebp,eax
  40f368:	maxps  xmm6,XMMWORD PTR [esp+eiz*4-0x7a364f20]
  40f370:	xor    BYTE PTR [esi+0x60],al
  40f373:	jbe    0x40f36c
  40f375:	add    eax,0xc2d01d48
  40f37a:	fldcw  WORD PTR [eax]
  40f37c:	mov    esp,0x40f0e25b
  40f381:	dec    ecx
  40f382:	lock mov al,ds:0x21a2ec60
  40f388:	adc    edx,DWORD PTR es:[eax-0x71f25260]
  40f38f:	push   0x2d45152
  40f394:	loopne 0x40f414
  40f396:	inc    ebp
  40f397:	mov    ah,0x11
  40f399:	sub    eax,0xc3352573
  40f39e:	(bad)  
  40f3a0:	inc    esp
  40f3a1:	cld    
  40f3a2:	into   
  40f3a3:	sti    
  40f3a4:	add    eax,0xb3cb4a1c
  40f3a9:	mov    ch,al
  40f3ab:	push   ss
  40f3ac:	ins    BYTE PTR es:[edi],dx
  40f3ad:	xchg   ecx,eax
  40f3ae:	(bad)  
  40f3af:	out    0xa8,al
  40f3b1:	sub    ch,BYTE PTR [edx]
  40f3b3:	ins    BYTE PTR es:[edi],dx
  40f3b4:	xor    DWORD PTR [esi],ebx
  40f3b6:	mov    ah,0x3e
  40f3b8:	in     al,dx
  40f3b9:	test   DWORD PTR [esi+edx*4-0xd],eax
  40f3bd:	jb     0x40f401
  40f3bf:	sbb    ebx,DWORD PTR [ebp+0x11]
  40f3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3c3:	push   ecx
  40f3c4:	xor    DWORD PTR [eax+ecx*8],eax
  40f3c7:	jle    0x40f375
  40f3c9:	pop    ecx
  40f3ca:	aad    0xbb
  40f3cc:	es push esp
  40f3ce:	xchg   edi,eax
  40f3cf:	cwde   
  40f3d0:	mov    cl,0x63
  40f3d2:	sbb    DWORD PTR [ebx],edx
  40f3d4:	jb     0x40f41a
  40f3d6:	add    eax,DWORD PTR ds:0xc549c335
  40f3dc:	out    dx,eax
  40f3dd:	cld    
  40f3de:	xchg   dl,bl
  40f3e0:	(bad)  
  40f3e1:	and    eax,0xe4d37871
  40f3e6:	call   DWORD PTR [ebx+0x16a67955]
  40f3ec:	jo     0x40f3a8
  40f3ee:	mov    ds,WORD PTR [eax+0x60]
  40f3f1:	arpl   WORD PTR [edx+edx*8+0x6372e671],bp
  40f3f8:	lahf   
  40f3f9:	in     eax,0x4e
  40f3fb:	cmp    ecx,DWORD PTR [edx-0x5f]
  40f3fe:	mov    ebx,0xaa663417
  40f403:	sub    edi,esp
  40f405:	mov    ch,0x5c
  40f407:	loope  0x40f460
  40f409:	call   0xbfec3a15
  40f40e:	and    bl,0x2e
  40f411:	jae    0x40f438
  40f413:	loope  0x40f424
  40f415:	test   eax,0x671466e0
  40f41a:	ret    0x7145
  40f41d:	fst    QWORD PTR [esi]
  40f41f:	test   eax,0x8f99211
  40f424:	sbb    esp,ecx
  40f426:	repnz pop edx
  40f428:	pusha  
  40f429:	stc    
  40f42a:	mov    fs,WORD PTR [ebp+0x71]
  40f42d:	loope  0x40f3f9
  40f42f:	xor    cl,dh
  40f431:	mov    BYTE PTR [eax+0x49],ch
  40f434:	clc    
  40f435:	dec    esp
  40f436:	fndisi(8087 only) 
  40f438:	fsubr  st,st(2)
  40f43a:	dec    ebx
  40f43b:	push   esp
  40f43c:	dec    ecx
  40f43d:	adc    BYTE PTR [ecx+0x7bd074a7],cl
  40f443:	or     al,0xb
  40f445:	push   ebx
  40f446:	dec    esi
  40f447:	xchg   esi,eax
  40f448:	jne    0x40f4a1
  40f44a:	fidivr DWORD PTR [edx]
  40f44c:	in     al,dx
  40f44d:	call   0x4bc420e5
  40f452:	ins    DWORD PTR es:[edi],dx
  40f453:	inc    ecx
  40f454:	cmp    DWORD PTR [ecx],ebx
  40f456:	test   edx,ecx
  40f458:	in     eax,dx
  40f459:	push   0x47fcaaa8
  40f45e:	mov    BYTE PTR [ebx],bh
  40f460:	es dec ebp
  40f462:	mov    dl,0xa7
  40f464:	fucomi st,st(2)
  40f466:	mov    dl,BYTE PTR [ecx]
  40f468:	sbb    eax,0xb7f646e
  40f46d:	in     eax,dx
  40f46e:	loope  0x40f4c5
  40f470:	mov    cl,0xfe
  40f472:	jns    0x40f46f
  40f474:	mov    dl,0x1e
  40f476:	cwde   
  40f477:	pushf  
  40f478:	cdq    
  40f479:	xor    al,0x9f
  40f47b:	adc    cl,dh
  40f47d:	jp     0x40f42a
  40f47f:	retf   
  40f480:	addr16 (bad) 
  40f482:	arpl   WORD PTR [edi],bx
  40f484:	aad    0xe
  40f486:	mov    esi,0x94a8dfc6
  40f48b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f48c:	stos   BYTE PTR es:[edi],al
  40f48d:	mov    ecx,esp
  40f48f:	call   0x539d:0x9ad4367f
  40f496:	or     edi,esi
  40f498:	xor    eax,0x989c3b80
  40f49d:	push   es
  40f49e:	mov    eax,ds:0xecce53b2
  40f4a3:	or     esp,edi
  40f4a5:	pop    esi
  40f4a6:	addr16 stc 
  40f4a8:	clc    
  40f4a9:	out    0xda,al
  40f4ab:	sub    edx,DWORD PTR [esp+eax*1]
  40f4ae:	jle    0x40f4b7
  40f4b0:	ret    
  40f4b1:	mov    ebp,0x35da7f34
  40f4b6:	cmp    DWORD PTR [esi-0x192d4436],0x13
  40f4bd:	cmp    BYTE PTR [eax+0x7be7dd8],al
  40f4c3:	aaa    
  40f4c4:	sub    BYTE PTR [edx+0x5b],0x90
  40f4c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4c9:	sbb    edx,eax
  40f4cb:	xor    al,bh
  40f4cd:	cmp    edx,eax
  40f4cf:	cmp    BYTE PTR [esi-0x3c6596c7],ch
  40f4d5:	and    al,0x8c
  40f4d7:	jb     0x40f4ab
  40f4d9:	rcpps  xmm3,XMMWORD PTR [esi+0x4cc5b030]
  40f4e0:	std    
  40f4e1:	imul   eax,DWORD PTR [edx],0xffffffbc
  40f4e4:	push   ebp
  40f4e5:	(bad)  
  40f4e6:	sub    WORD PTR [ebp+0xb],cx
  40f4ea:	jne    0x40f4c2
  40f4ec:	mov    ecx,DWORD PTR ss:[esi-0x5]
  40f4f0:	mov    ?,WORD PTR [esi+eiz*8-0x15]
  40f4f4:	mov    DWORD PTR [esi+0x7b],esi
  40f4f7:	fnstsw WORD PTR [eax]
  40f4f9:	mov    esi,0x49eb6a07
  40f4fe:	dec    esi
  40f4ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f500:	mul    DWORD PTR es:[eax]
  40f503:	in     al,dx
  40f504:	ins    BYTE PTR es:[edi],dx
  40f505:	inc    ebp
  40f506:	sbb    esp,eax
  40f508:	mov    dl,0x5c
  40f50a:	stos   DWORD PTR es:[edi],eax
  40f50b:	push   ds
  40f50c:	xchg   esp,eax
  40f50d:	and    DWORD PTR [ebx-0xb9a8dd1],eax
  40f513:	test   eax,0xa4858053
  40f518:	cmc    
  40f519:	arpl   ax,bx
  40f51b:	sbb    al,0x33
  40f51d:	xor    cl,ch
  40f51f:	mov    ebp,0x1d8a7e77
  40f524:	fmul   st(4),st
  40f526:	or     DWORD PTR [ecx+0x225794ce],0xce7ac7f2
  40f530:	push   0x14
  40f532:	push   esi
  40f533:	cdq    
  40f534:	add    DWORD PTR [edx],edx
  40f536:	pop    ebx
  40f537:	loopne 0x40f51e
  40f539:	xor    DWORD PTR [esi-0x12],ebx
  40f53c:	adc    ah,0x83
  40f53f:	jl     0x40f4e1
  40f541:	xor    ebx,DWORD PTR [eax]
  40f543:	repz daa 
  40f545:	pop    esp
  40f546:	inc    ecx
  40f547:	xor    BYTE PTR ds:0x4b3f0a5e,ah
  40f54d:	int3   
  40f54e:	add    eax,0xaba48b1f
  40f553:	mov    al,ds:0x4340a43e
  40f558:	jns    0x40f4dd
  40f55a:	fbld   TBYTE PTR [ecx+0x66]
  40f55d:	add    al,0x74
  40f55f:	gs (bad) 
  40f562:	cs jmp 0xf1ce4cf5
  40f568:	mov    al,ds:0x312e8a23
  40f56d:	push   esp
  40f56e:	push   ebp
  40f56f:	jmp    0xb296:0x5864f578
  40f576:	mov    bl,0xa1
  40f578:	dec    esp
  40f579:	cdq    
  40f57a:	std    
  40f57b:	rcl    DWORD PTR [edi],0x9c
  40f57e:	pop    ds
  40f57f:	inc    esi
  40f580:	sub    DWORD PTR ds:0x6a99427b,ebx
  40f586:	inc    ecx
  40f587:	icebp  
  40f588:	push   ds
  40f589:	dec    eax
  40f58a:	test   BYTE PTR [ebx],0x8c
  40f58d:	pushf  
  40f58e:	cmp    eax,DWORD PTR [ecx+0x38e784c7]
  40f594:	sbb    BYTE PTR [esp+ebp*4-0x1],0x55
  40f599:	or     BYTE PTR [esi-0xf],bh
  40f59c:	cmp    eax,0xe1bed01d
  40f5a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5a2:	dec    esi
  40f5a3:	mov    cl,0xa2
  40f5a5:	cwde   
  40f5a6:	inc    esi
  40f5a7:	jb     0x40f56f
  40f5a9:	jmp    FWORD PTR [eax]
  40f5ab:	popf   
  40f5ac:	out    0xaf,eax
  40f5ae:	pop    edx
  40f5af:	pop    esp
  40f5b0:	mov    edi,0x26b410e6
  40f5b5:	xor    al,0x47
  40f5b7:	pop    esp
  40f5b8:	(bad)
  40f5bb:	push   0xffffffda
  40f5bd:	cmc    
  40f5be:	xchg   esi,eax
  40f5bf:	loop   0x40f569
  40f5c1:	jb     0x40f55c
  40f5c3:	std    
  40f5c4:	je     0x40f5e0
  40f5c6:	mov    WORD PTR [ecx-0x24244cb],fs
  40f5cc:	popa   
  40f5cd:	ja     0x40f5f9
  40f5cf:	xor    BYTE PTR [esi],cl
  40f5d1:	adc    eax,DWORD PTR [esi]
  40f5d3:	ret    0x28cb
  40f5d6:	gs xor bl,dl
  40f5d9:	or     eax,0x193a9141
  40f5de:	dec    esp
  40f5df:	(bad)  
  40f5e0:	scas   al,BYTE PTR es:[edi]
  40f5e1:	adc    DWORD PTR [esi-0x7ccaefd1],edx
  40f5e7:	jle    0x40f61d
  40f5e9:	pop    ebx
  40f5ea:	int    0x52
  40f5ec:	outs   dx,BYTE PTR ds:[esi]
  40f5ed:	push   ebp
  40f5ee:	shl    DWORD PTR [eax+0x3e1c1e59],1
  40f5f4:	cmp    eax,0x21121a4e
  40f5f9:	pusha  
  40f5fa:	fild   QWORD PTR [edx-0x1ff02230]
  40f600:	sub    DWORD PTR [ecx],ebp
  40f602:	cmp    bl,BYTE PTR [esi-0x57bc814c]
  40f608:	xor    al,0x8
  40f60a:	sbb    cl,al
  40f60c:	mov    ds:0x47e2ab17,eax
  40f611:	add    DWORD PTR [ebx+edx*2-0x38],0x12
  40f616:	icebp  
  40f617:	pop    eax
  40f618:	or     dl,BYTE PTR [ebx+ebx*8+0x15fd1469]
  40f61f:	inc    ebx
  40f620:	(bad)  
  40f621:	repz mov eax,0x2efbfd2d
  40f627:	push   edi
  40f628:	mov    esi,0xfef8daec
  40f62d:	push   ebx
  40f62e:	and    cl,bl
  40f630:	xchg   edx,eax
  40f631:	mov    DWORD PTR [edx-0x34e77107],ebx
  40f637:	or     BYTE PTR [ebx+0x40e3efa6],bl
  40f63d:	jmp    0x61af:0xcc9bca5c
  40f644:	xchg   al,dl
  40f646:	mov    eax,0x4682e273
  40f64b:	or     al,0x6a
  40f64d:	shr    BYTE PTR [esi-0x67f9e0ec],1
  40f653:	inc    edx
  40f654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f655:	pop    ebx
  40f656:	bt     DWORD PTR [ebx],0x9
  40f65a:	in     eax,dx
  40f65b:	div    DWORD PTR [ecx-0x69]
  40f65e:	xchg   ebp,eax
  40f65f:	ret    
  40f660:	adc    DWORD PTR [ecx],0xffffffbf
  40f663:	call   0xef15:0x72670a74
  40f66a:	sbb    cl,BYTE PTR [esi-0x2d]
  40f66d:	lahf   
  40f66e:	push   esi
  40f66f:	fcomip st,st(6)
  40f671:	hlt    
  40f672:	inc    ebx
  40f673:	in     eax,0x52
  40f675:	les    esi,FWORD PTR [eax+ebp*8+0x8]
  40f679:	fcmovne st,st(3)
  40f67b:	pop    ebx
  40f67c:	repnz adc edi,ebx
  40f67f:	xor    ch,bh
  40f681:	jp     0x40f63d
  40f683:	mov    eax,ds:0x83544cb7
  40f688:	and    BYTE PTR [ebx+ebx*4+0x1e778cb],0x79
  40f690:	ret    0xf67c
  40f693:	push   ebp
  40f694:	sahf   
  40f695:	and    al,BYTE PTR [ecx+edi*2-0x49]
  40f699:	mov    cl,0xd4
  40f69b:	inc    ebx
  40f69c:	ret    
  40f69d:	push   ebp
  40f69e:	mov    WORD PTR [ebx],es
  40f6a0:	(bad)  
  40f6a1:	jmp    0x411b79
  40f6a6:	mov    eax,DWORD PTR [ebp-0x38]
  40f6a9:	add    eax,DWORD PTR [ebp+0x8]
  40f6ac:	mov    DWORD PTR [ebp-0x18],eax
  40f6af:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6b2:	test   eax,eax
  40f6b4:	je     0x411b02
  40f6ba:	mov    DWORD PTR [ebp-0x20],0x0
  40f6c1:	push   0x3
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0xbdebbff0
  40f71a:	pop    esp
  40f71b:	add    ch,BYTE PTR [esi+0x5ce88383]
  40f721:	add    DWORD PTR [ebx+0x68f4185f],0x2a
  40f728:	mov    dl,0xf2
  40f72a:	or     al,0x1a
  40f72c:	inc    edi
  40f72d:	(bad)  
  40f72e:	or     ch,BYTE PTR [edx-0x34]
  40f731:	cli    
  40f732:	mov    ebx,0x5e7d6083
  40f737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f739:	jmp    0x40f75d
  40f73b:	mov    esi,0xad97acff
  40f740:	push   0x7
  40f742:	inc    edi
  40f743:	ficom  WORD PTR [ebx+0x44]
  40f746:	loopne 0x40f746
  40f748:	es cld 
  40f74a:	lods   al,BYTE PTR ds:[esi]
  40f74b:	mov    edx,0x2655ee97
  40f750:	jne    0x40f6d4
  40f752:	and    BYTE PTR [edx],ch
  40f754:	es inc esi
  40f756:	scas   al,BYTE PTR es:[edi]
  40f757:	ins    BYTE PTR es:[edi],dx
  40f758:	pop    eax
  40f759:	jg     0x40f6db
  40f75b:	inc    eax
  40f75c:	push   es
  40f75d:	xchg   al,cl
  40f75f:	ds inc edx
  40f761:	mov    gs,WORD PTR [ebx]
  40f763:	icebp  
  40f764:	rcr    edi,1
  40f766:	(bad)  
  40f767:	xlat   BYTE PTR ds:[ebx]
  40f768:	mov    ecx,0x2de40dab
  40f76d:	stos   BYTE PTR es:[edi],al
  40f76e:	sub    edi,DWORD PTR [ecx+esi*1-0x48e7c9ed]
  40f775:	(bad)
  40f778:	and    al,0x84
  40f77a:	xchg   ecx,eax
  40f77b:	pop    ecx
  40f77c:	mov    ds:0xdc2be1aa,al
  40f781:	aam    0xac
  40f783:	inc    edi
  40f784:	jg     0x40f717
  40f786:	pop    ds
  40f787:	dec    esi
  40f788:	jge    0x40f7d3
  40f78a:	jecxz  0x40f7ab
  40f78c:	(bad)  
  40f78d:	fwait
  40f78e:	ja     0x40f73b
  40f790:	in     al,0x6f
  40f792:	xchg   bh,ah
  40f794:	out    0x6d,eax
  40f796:	js     0x40f736
  40f798:	retf   
  40f799:	shl    BYTE PTR ds:0x4bd1272a,1
  40f79f:	mov    bl,0x3
  40f7a1:	iret   
  40f7a2:	sub    BYTE PTR [ebp+0x5376d],0xfc
  40f7a9:	fsincos 
  40f7ab:	cld    
  40f7ac:	dec    ebp
  40f7ad:	in     eax,0x2e
  40f7af:	lds    eax,FWORD PTR [ebp-0x5d]
  40f7b2:	mov    esp,0xe1aecda4
  40f7b7:	sub    eax,0xd0902349
  40f7bc:	push   esi
  40f7bd:	pop    edx
  40f7be:	pop    esp
  40f7bf:	fbld   TBYTE PTR [eax-0x27]
  40f7c2:	or     BYTE PTR [eax],dh
  40f7c4:	cmp    BYTE PTR [ebp-0x24c92fa6],dl
  40f7ca:	adc    ebp,DWORD PTR [ebx]
  40f7cc:	dec    eax
  40f7cd:	test   eax,0x24fa3157
  40f7d2:	pop    esp
  40f7d3:	sub    al,0x79
  40f7d5:	fstp   TBYTE PTR [ebx-0xb]
  40f7d8:	jge    0x40f800
  40f7da:	lds    edi,FWORD PTR [bx+di]
  40f7dd:	test   al,0x4b
  40f7df:	inc    ebx
  40f7e0:	or     dl,BYTE PTR [eax-0x24e548fb]
  40f7e6:	inc    edx
  40f7e7:	pop    ebp
  40f7e8:	adc    eax,0x20add28d
  40f7ed:	inc    edx
  40f7ee:	sub    DWORD PTR [edx-0x5d4f66ac],esi
  40f7f4:	cwd    
  40f7f6:	xor    bh,ah
  40f7f8:	mov    cl,0xe5
  40f7fa:	mov    edx,0xf7d7d5c7
  40f7ff:	mov    dl,0x28
  40f801:	cdq    
  40f802:	jmp    0x40f805
  40f804:	sar    BYTE PTR [edi-0x7e55eaa9],cl
  40f80a:	mov    bl,0x2f
  40f80c:	dec    eax
  40f80d:	call   FWORD PTR [eax+0x315a2b26]
  40f813:	xor    BYTE PTR [ebp+0x47],0x4a
  40f817:	pop    eax
  40f818:	and    BYTE PTR [esi-0x73571f7a],bh
  40f81e:	in     eax,0xc3
  40f820:	retf   
  40f821:	jno    0x40f7af
  40f823:	(bad)  
  40f826:	adc    ch,BYTE PTR [ecx]
  40f828:	loopne 0x40f7b0
  40f82a:	ret    0xf289
  40f82d:	mov    eax,ds:0xcf3ce721
  40f832:	fst    QWORD PTR [edx]
  40f834:	cmc    
  40f835:	cld    
  40f836:	mov    edi,DWORD PTR [edi]
  40f838:	xor    dl,BYTE PTR [edi]
  40f83a:	pop    edi
  40f83b:	scas   eax,DWORD PTR es:[edi]
  40f83c:	lods   al,BYTE PTR ds:[esi]
  40f83d:	fistp  QWORD PTR gs:[esp+edx*4]
  40f841:	pop    esi
  40f842:	inc    ecx
  40f843:	cdq    
  40f844:	sub    ebx,edx
  40f846:	out    dx,al
  40f847:	and    eax,0xce53c839
  40f84c:	mov    ds:0x7cb5806e,eax
  40f851:	sbb    eax,0x3890bbff
  40f856:	test   al,dh
  40f858:	ja     0x40f8bd
  40f85a:	inc    ecx
  40f85b:	sbb    BYTE PTR [edi-0x63822297],0xd5
  40f862:	cmp    DWORD PTR [edi],esi
  40f864:	xchg   ecx,eax
  40f865:	pop    es
  40f866:	aam    0x8f
  40f868:	sub    eax,DWORD PTR [ebx]
  40f86a:	and    BYTE PTR [ebx+0x4a],dl
  40f86d:	or     DWORD PTR [esi-0x56],ecx
  40f870:	or     al,0xf0
  40f872:	call   0x44e8d670
  40f877:	jge    0x40f8ae
  40f879:	mov    eax,ds:0x86f7dc53
  40f87e:	mov    ch,0x79
  40f880:	(bad)  
  40f881:	cmp    BYTE PTR [ebx*4-0x4f2057ea],cl
  40f888:	(bad)  
  40f889:	pop    ebp
  40f88a:	rol    DWORD PTR [ebx+0x3cfed3e5],0x56
  40f891:	xchg   esp,eax
  40f892:	adc    ch,BYTE PTR [edx-0xdeeacac]
  40f898:	ror    eax,cl
  40f89a:	dec    eax
  40f89b:	pop    eax
  40f89c:	daa    
  40f89d:	adc    DWORD PTR [eax],esp
  40f89f:	data16 jne 0x40f862
  40f8a2:	or     dh,BYTE PTR [ebp+0x32]
  40f8a5:	mov    ch,0x5c
  40f8a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8a8:	xchg   edx,eax
  40f8a9:	aas    
  40f8aa:	repnz xor ch,dl
  40f8ad:	jns    0x40f898
  40f8af:	mov    eax,ds:0x496ae242
  40f8b4:	lods   al,BYTE PTR ds:[esi]
  40f8b5:	push   edx
  40f8b6:	mov    eax,0x817ffea5
  40f8bb:	and    al,0x90
  40f8bd:	jns    0x40f8e1
  40f8bf:	lea    esi,[ecx-0x44644520]
  40f8c5:	call   0xdf1a:0x739bd173
  40f8cc:	jno    0x40f854
  40f8ce:	fcmovne st,st(2)
  40f8d0:	mov    bh,0x17
  40f8d2:	(bad)  
  40f8d3:	mov    ?,WORD PTR [esi+0x137e71f4]
  40f8d9:	popf   
  40f8da:	pop    esi
  40f8db:	jb     0x40f867
  40f8dd:	add    bl,BYTE PTR [esi-0x5d348f30]
  40f8e3:	aas    
  40f8e4:	aad    0xab
  40f8e6:	clc    
  40f8e7:	lea    edx,[ebx+ebx*1+0x705db3c2]
  40f8ee:	pop    edi
  40f8ef:	daa    
  40f8f0:	das    
  40f8f1:	sub    BYTE PTR [edi-0x578c37f6],0xe
  40f8f8:	call   DWORD PTR [ecx+eiz*2+0x70]
  40f8fc:	jge    0x40f97a
  40f8fe:	pushf  
  40f8ff:	mov    bl,0x7f
  40f901:	jle    0x40f8b7
  40f903:	and    eax,0x50fdc550
  40f908:	into   
  40f909:	push   ebx
  40f90a:	or     BYTE PTR [ecx+0x4ae0efc9],0xb3
  40f911:	dec    esp
  40f912:	mov    eax,0xdd094e0e
  40f917:	(bad)  
  40f918:	out    dx,al
  40f919:	daa    
  40f91a:	mov    ecx,0xc482658
  40f91f:	xor    DWORD PTR [ecx],esp
  40f921:	dec    DWORD PTR [esi+0x2e37881c]
  40f927:	jle    0x40f991
  40f929:	inc    ebp
  40f92a:	inc    esp
  40f92b:	mov    cl,0x9e
  40f92d:	xor    eax,0xdcae646b
  40f932:	xlat   BYTE PTR ds:[ebx]
  40f933:	and    dl,BYTE PTR [edx+0x73]
  40f936:	test   DWORD PTR [ecx+0x26],ecx
  40f939:	enter  0x345d,0xe4
  40f93d:	in     eax,dx
  40f93e:	and    al,0xef
  40f940:	mov    cl,0xb1
  40f942:	scas   al,BYTE PTR es:[edi]
  40f943:	adc    BYTE PTR [eax],dl
  40f945:	fdiv   QWORD PTR [ebx-0x7]
  40f948:	jnp    0x40f91a
  40f94a:	pop    edi
  40f94b:	scas   al,BYTE PTR es:[edi]
  40f94c:	mov    edi,0xfbf6dee
  40f951:	push   ebx
  40f952:	xor    dh,BYTE PTR [ecx-0x3d613805]
  40f958:	call   0x56df:0xe34bbd21
  40f95f:	adc    ecx,edi
  40f961:	std    
  40f962:	ins    BYTE PTR es:[edi],dx
  40f963:	push   es
  40f964:	in     al,dx
  40f965:	dec    ebp
  40f966:	xchg   ebx,eax
  40f967:	icebp  
  40f968:	stos   BYTE PTR es:[edi],al
  40f969:	cmc    
  40f96a:	push   esi
  40f96b:	mov    al,0x6
  40f96d:	pop    esi
  40f96e:	xlat   BYTE PTR ds:[ebx]
  40f96f:	push   ss
  40f970:	pop    eax
  40f971:	(bad)  
  40f972:	push   edi
  40f973:	das    
  40f974:	hlt    
  40f975:	fs out 0x1c,al
  40f978:	mov    bh,0x0
  40f97a:	out    dx,eax
  40f97b:	jne    0x40f95b
  40f97d:	in     eax,dx
  40f97e:	fist   WORD PTR [ebx-0x50892e02]
  40f984:	out    0x45,eax
  40f986:	add    BYTE PTR [ebx],bh
  40f988:	repnz add ecx,DWORD PTR [eax+0xe92676a]
  40f98f:	adc    al,BYTE PTR ss:[eax-0x23]
  40f993:	pop    ss
  40f994:	in     eax,dx
  40f995:	(bad)  
  40f996:	cmp    DWORD PTR [esi-0xf],esi
  40f999:	loopne 0x40f99a
  40f99b:	in     eax,dx
  40f99c:	push   0x4c
  40f99e:	push   ebx
  40f99f:	(bad)  
  40f9a0:	xchg   ebx,eax
  40f9a1:	xchg   ecx,eax
  40f9a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9a3:	mov    bh,0x26
  40f9a5:	xchg   edi,eax
  40f9a6:	sub    eax,0x6e62990c
  40f9ab:	inc    edx
  40f9ac:	mov    dh,0xa5
  40f9ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9af:	xchg   ebx,eax
  40f9b0:	inc    esi
  40f9b1:	das    
  40f9b2:	jne    0x40f959
  40f9b4:	mov    edi,eax
  40f9b6:	jg     0x40f9f4
  40f9b8:	sub    al,0xd5
  40f9ba:	xchg   DWORD PTR [ecx+0x723f929c],esi
  40f9c0:	(bad)  
  40f9c1:	or     BYTE PTR [ebx+eiz*4+0x6c985940],bh
  40f9c8:	hlt    
  40f9c9:	push   edx
  40f9ca:	sar    BYTE PTR [ecx+0x3d],cl
  40f9cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9ce:	sub    eax,0x36a4234d
  40f9d3:	mov    edi,0x42713234
  40f9d8:	sar    DWORD PTR [edx],0x3e
  40f9db:	jmp    0x40fa29
  40f9dd:	adc    eax,0x465ee9d3
  40f9e2:	push   ebx
  40f9e3:	and    DWORD PTR [edx-0x4],edx
  40f9e6:	and    al,0xa7
  40f9e8:	retf   0xd0f7
  40f9eb:	xor    al,0xad
  40f9ed:	jp     0x40f994
  40f9ef:	dec    esi
  40f9f0:	or     al,0xe1
  40f9f2:	(bad)  
  40f9f3:	lahf   
  40f9f4:	es aaa 
  40f9f6:	mov    ebx,0xfcbb9856
  40f9fb:	cs inc ebp
  40f9fd:	adc    al,0xa1
  40f9ff:	pop    eax
  40fa00:	dec    ecx
  40fa01:	mov    al,dl
  40fa03:	mov    al,0x64
  40fa05:	shl    bl,1
  40fa07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa08:	shr    al,0x30
  40fa0b:	adc    bl,BYTE PTR [ecx+0x39991ad8]
  40fa11:	mov    ds:0xe548b291,al
  40fa16:	shr    DWORD PTR [ebx+ebp*1],1
  40fa19:	jmp    0x40f9e2
  40fa1b:	xchg   esp,eax
  40fa1c:	mov    ds:0x233a106a,al
  40fa21:	mov    ecx,0xd12f38e6
  40fa26:	xor    BYTE PTR [ebx-0x3d481704],0xc7
  40fa2d:	sub    bl,BYTE PTR [ebx+0x592bf3f0]
  40fa33:	std    
  40fa34:	ins    DWORD PTR es:[edi],dx
  40fa35:	pop    ss
  40fa36:	fiadd  DWORD PTR [esi-0x69]
  40fa39:	out    0x5d,eax
  40fa3b:	pop    edi
  40fa3c:	retf   
  40fa3d:	dec    edx
  40fa3e:	push   0xa984982
  40fa43:	scas   eax,DWORD PTR es:[edi]
  40fa44:	ret    0xa2cb
  40fa47:	cmp    eax,0x37fa1dac
  40fa4c:	aaa    
  40fa4d:	sbb    eax,0x83792c85
  40fa52:	lahf   
  40fa53:	and    ah,BYTE PTR [ebp+0x6ed240a0]
  40fa59:	adc    DWORD PTR [edx],esp
  40fa5b:	in     al,dx
  40fa5c:	data16 fild DWORD PTR [ecx-0xf278253]
  40fa63:	cmp    ecx,DWORD PTR [ecx+0x31]
  40fa66:	pop    ds
  40fa67:	and    esp,DWORD PTR [ebp-0x13]
  40fa6a:	ds xchg edx,eax
  40fa6c:	(bad)  
  40fa6d:	cmp    edi,edx
  40fa6f:	sub    DWORD PTR [esi+0x5b],edi
  40fa72:	dec    eax
  40fa73:	mov    DWORD PTR [edi],edi
  40fa75:	inc    ebp
  40fa76:	jmp    0x40fa09
  40fa78:	push   esp
  40fa79:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40fa7b:	xchg   bl,bl
  40fa7d:	add    BYTE PTR [edx-0x4146578a],bl
  40fa83:	and    BYTE PTR [ebp+0x3f],bl
  40fa86:	mov    al,0x66
  40fa88:	fsub   st(7),st
  40fa8a:	idiv   BYTE PTR [edx+0xd2d1d83]
  40fa90:	jnp    0x40fa98
  40fa92:	enter  0x9b8c,0x13
  40fa96:	jg     0x40faab
  40fa98:	outs   dx,DWORD PTR ds:[esi]
  40fa99:	ret    
  40fa9a:	dec    ecx
  40fa9b:	mov    al,ds:0x8f01e8ac
  40faa0:	and    BYTE PTR [ecx+0x3d],0x1a
  40faa4:	jno    0x40fb21
  40faa6:	jo     0x40fb14
  40faa8:	loop   0x40fa3d
  40faaa:	xor    eax,DWORD PTR [edx+0x477696c6]
  40fab0:	push   ebx
  40fab1:	scas   eax,DWORD PTR es:[edi]
  40fab2:	cld    
  40fab3:	xor    al,0x3b
  40fab5:	stos   BYTE PTR es:[edi],al
  40fab6:	add    eax,0x581edfdd
  40fabb:	sahf   
  40fabc:	je     0x40fa83
  40fabe:	mul    DWORD PTR [edx-0x79]
  40fac1:	aam    0xe5
  40fac3:	pop    ebp
  40fac4:	jo     0x40fb3d
  40fac6:	push   eax
  40fac7:	push   ebp
  40fac8:	(bad)  
  40fac9:	sub    DWORD PTR [esi+0x65],ebp
  40facc:	inc    esi
  40facd:	cdq    
  40face:	dec    esp
  40facf:	push   eax
  40fad0:	mov    ecx,0xec16d2ad
  40fad5:	fistp  WORD PTR [edx]
  40fad7:	mov    dh,0x94
  40fad9:	mov    dl,0x47
  40fadb:	ds out 0x9b,al
  40fade:	cwde   
  40fadf:	push   esi
  40fae0:	add    BYTE PTR [ebx+0x650c6055],cl
  40fae6:	rcl    BYTE PTR [edx+0x7d],1
  40fae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faea:	and    esp,DWORD PTR [ecx]
  40faec:	cmp    eax,0x39aed99
  40faf1:	cli    
  40faf2:	shr    DWORD PTR [edi-0x72],1
  40faf5:	mov    WORD PTR [edx+eax*8-0x60],ds
  40faf9:	or     DWORD PTR [ebx-0x407c15e2],0x87b07ef
  40fb03:	retf   0xc325
  40fb06:	xor    eax,0x361db64f
  40fb0b:	mov    ebp,0x2dd917ff
  40fb10:	enter  0xa811,0xb7
  40fb14:	sub    eax,0xbe441ff8
  40fb19:	(bad)  [ebx-0x46]
  40fb1c:	daa    
  40fb1d:	push   ebx
  40fb1e:	xchg   ebp,eax
  40fb1f:	shl    bl,1
  40fb21:	or     dh,BYTE PTR [ecx+0x35]
  40fb24:	lahf   
  40fb25:	jmp    0x40fb9b
  40fb27:	adc    al,0x88
  40fb29:	add    al,0xdb
  40fb2b:	scas   al,BYTE PTR es:[edi]
  40fb2c:	fistp  QWORD PTR [ebx-0x7f13478b]
  40fb32:	mov    ds:0x391bd1b9,al
  40fb37:	jmp    0x40faef
  40fb39:	ret    
  40fb3a:	sub    dh,al
  40fb3c:	(bad)  
  40fb3d:	xchg   esi,eax
  40fb3e:	mov    ds:0x26951a49,eax
  40fb43:	lea    ebp,[eax-0x50]
  40fb46:	xchg   esp,eax
  40fb47:	stos   DWORD PTR es:[edi],eax
  40fb48:	fs dec esp
  40fb4a:	fnstsw WORD PTR [eax+0x4c]
  40fb4d:	cmp    DWORD PTR [ecx-0x20],eax
  40fb50:	pop    edx
  40fb51:	and    DWORD PTR [eax+eiz*1-0x7d27211a],esi
  40fb58:	mov    esp,0xc018ef93
  40fb5d:	cli    
  40fb5e:	in     eax,0x5a
  40fb60:	mov    cl,0x2d
  40fb62:	mov    bl,0x1b
  40fb64:	movq   QWORD PTR [ecx],mm7
  40fb67:	loope  0x40fb09
  40fb69:	mov    ebx,DWORD PTR [edx-0x136c9238]
  40fb6f:	cmp    al,0x7f
  40fb71:	imul   ecx,DWORD PTR [edi+0x34],0xf351683c
  40fb78:	push   esp
  40fb79:	stos   DWORD PTR es:[edi],eax
  40fb7a:	outs   dx,BYTE PTR ds:[esi]
  40fb7b:	scas   eax,DWORD PTR es:[edi]
  40fb7c:	pop    ecx
  40fb7d:	cmp    al,0x83
  40fb7f:	fmul   DWORD PTR [esi]
  40fb81:	cmp    al,0x54
  40fb83:	sbb    bl,BYTE PTR [esi-0x3db53ed4]
  40fb89:	sbb    ecx,ebx
  40fb8b:	ret    0xea56
  40fb8e:	jecxz  0x40fbe5
  40fb90:	mov    BYTE PTR [ecx],0xa3
  40fb93:	loopne 0x40fb99
  40fb95:	add    BYTE PTR [ebx],bh
  40fb97:	std    
  40fb98:	or     esp,DWORD PTR [eax+0x14]
  40fb9b:	push   ebx
  40fb9c:	ins    DWORD PTR es:[edi],dx
  40fb9d:	les    edx,FWORD PTR ds:0x63e9a1f
  40fba3:	cmp    DWORD PTR [edi+0x2a37201c],esi
  40fba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbaa:	adc    al,0xf6
  40fbac:	pavgb  mm7,QWORD PTR [eax+0x5b]
  40fbb0:	fwait
  40fbb1:	out    0xe8,al
  40fbb3:	jge    0x40fbbc
  40fbb5:	push   esi
  40fbb6:	ret    0x4bce
  40fbb9:	das    
  40fbba:	dec    edx
  40fbbb:	mov    eax,0x16d130dd
  40fbc0:	push   ebp
  40fbc1:	inc    edx
  40fbc2:	dec    edx
  40fbc3:	cdq    
  40fbc4:	(bad)  [eax-0x2551be56]
  40fbca:	push   ebx
  40fbcb:	xchg   ebp,eax
  40fbcc:	xlat   BYTE PTR ds:[ebx]
  40fbcd:	ror    BYTE PTR [ecx],0x5b
  40fbd0:	bound  esi,QWORD PTR [eiz*8-0x2031eb60]
  40fbd7:	in     al,0xeb
  40fbd9:	std    
  40fbda:	out    0x85,al
  40fbdc:	xlat   BYTE PTR ds:[ebx]
  40fbdd:	sub    edx,DWORD PTR [ecx]
  40fbdf:	mov    cl,0x5a
  40fbe1:	mov    ecx,0x7948c882
  40fbe6:	clc    
  40fbe7:	xor    ch,dh
  40fbe9:	or     al,0x52
  40fbeb:	fisub  DWORD PTR [esi-0x705dc178]
  40fbf1:	add    eax,0x7bddf0c3
  40fbf6:	into   
  40fbf7:	popf   
  40fbf8:	mov    bh,0xf6
  40fbfa:	or     ebx,DWORD PTR [esi-0x10d48c7d]
  40fc00:	in     eax,dx
  40fc01:	xchg   esi,eax
  40fc02:	xor    edx,DWORD PTR [edi+0x4c]
  40fc05:	jmp    0x8832:0x26af0e5
  40fc0c:	jecxz  0x40fc37
  40fc0e:	or     al,0xc3
  40fc10:	shl    BYTE PTR [edx],0xbf
  40fc13:	sbb    ch,BYTE PTR [edi]
  40fc15:	and    al,0x91
  40fc17:	add    al,0x61
  40fc19:	xchg   esi,eax
  40fc1a:	mov    ds:0x2e97725d,eax
  40fc1f:	mov    ch,bh
  40fc21:	ss push cs
  40fc23:	mov    bl,0xa5
  40fc25:	pop    esp
  40fc26:	pusha  
  40fc27:	popa   
  40fc28:	push   eax
  40fc29:	xchg   esp,eax
  40fc2a:	adc    eax,ecx
  40fc2c:	imul   eax,edx,0xd0d6b688
  40fc32:	inc    edi
  40fc33:	and    DWORD PTR [edi],edi
  40fc35:	cmp    DWORD PTR [eax],edx
  40fc37:	xchg   edx,eax
  40fc38:	popa   
  40fc39:	les    edi,FWORD PTR [edx+0x3cad018d]
  40fc3f:	push   ds
  40fc40:	fadd   st(5),st
  40fc42:	mov    al,BYTE PTR [ebp-0x38]
  40fc45:	cmp    al,0xda
  40fc47:	jne    0x40fbed
  40fc49:	ins    BYTE PTR es:[edi],dx
  40fc4a:	jns    0x40fc48
  40fc4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc4d:	out    dx,al
  40fc4e:	mov    cl,0xc2
  40fc50:	das    
  40fc51:	mov    ds:0x226f5564,al
  40fc56:	xchg   ebx,eax
  40fc57:	add    BYTE PTR gs:[edx],dh
  40fc5a:	jp     0x40fcaa
  40fc5c:	and    eax,0x1d9abf9d
  40fc61:	sub    DWORD PTR [ecx],eax
  40fc63:	cmp    ebp,edi
  40fc65:	or     dh,BYTE PTR [eax-0x7c6dad1d]
  40fc6b:	jecxz  0x40fcd9
  40fc6d:	ins    DWORD PTR es:[edi],dx
  40fc6e:	inc    esi
  40fc6f:	std    
  40fc70:	push   cs
  40fc71:	sub    ecx,esp
  40fc73:	mov    ds:0x4ea1300e,al
  40fc78:	and    al,0xff
  40fc7a:	aas    
  40fc7b:	mov    ds:0x162e5144,eax
  40fc80:	rcl    DWORD PTR [esi-0x2351610e],0x96
  40fc87:	mov    BYTE PTR [ecx],al
  40fc89:	(bad)
  40fc8c:	cs push 0x6568587e
  40fc92:	dec    esp
  40fc93:	scas   al,BYTE PTR es:[edi]
  40fc94:	jbe    0x40fc45
  40fc96:	xchg   ebx,eax
  40fc97:	sub    ch,dl
  40fc99:	pop    ecx
  40fc9a:	inc    esp
  40fc9b:	stos   DWORD PTR es:[edi],eax
  40fc9c:	adc    ch,BYTE PTR [esi+0x9]
  40fc9f:	sbb    DWORD PTR [ecx-0x4b],0xa391aee2
  40fca6:	mov    ds:0x97736527,al
  40fcab:	rcr    DWORD PTR [ebp-0x621e622d],cl
  40fcb1:	inc    ebx
  40fcb2:	xor    edx,ebx
  40fcb4:	gs sbb eax,0xa47c3d5f
  40fcba:	fimul  WORD PTR [ecx+0x9]
  40fcbd:	inc    ebx
  40fcbe:	mov    cs,ebx
  40fcc0:	sub    BYTE PTR es:[ebx],0x17
  40fcc4:	push   edi
  40fcc5:	repz das 
  40fcc7:	(bad)  [ebp-0x21]
  40fcca:	cli    
  40fccb:	test   al,0x8e
  40fccd:	pop    esp
  40fcce:	aas    
  40fccf:	add    bh,BYTE PTR [ebp+edi*2-0x7]
  40fcd3:	ror    DWORD PTR [ebp-0x28f8569a],1
  40fcd9:	push   0xae73a851
  40fcde:	push   0x2
  40fce0:	inc    esp
  40fce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fce2:	fld    DWORD PTR [esp+edx*8]
  40fce5:	mov    ebx,0x8d131c60
  40fcea:	cmp    al,0x5e
  40fcec:	pop    edi
  40fced:	in     al,0xaf
  40fcef:	mov    ds:0x419a7e5e,eax
  40fcf4:	pop    esp
  40fcf5:	mov    esi,0x6b4f834e
  40fcfa:	out    dx,al
  40fcfb:	les    esp,FWORD PTR [eax]
  40fcfd:	pop    ds
  40fcfe:	cwde   
  40fcff:	retf   0x5fb0
  40fd02:	mov    ss,edx
  40fd04:	sbb    DWORD PTR [edi],edx
  40fd06:	imul   esi,DWORD PTR [eax-0x32bff9d9],0x59
  40fd0d:	dec    eax
  40fd0e:	bound  edx,QWORD PTR [ebp-0x7c]
  40fd11:	jmp    0x9752:0x6da80a1
  40fd18:	pop    edi
  40fd19:	shl    DWORD PTR [esi],cl
  40fd1b:	in     al,dx
  40fd1c:	and    bh,ch
  40fd1e:	fstp   QWORD PTR [ebp-0x2b]
  40fd21:	mov    dh,0x35
  40fd23:	mov    al,0xda
  40fd25:	xchg   edi,eax
  40fd26:	mov    bh,0x19
  40fd28:	in     al,dx
  40fd29:	out    dx,eax
  40fd2a:	push   ss
  40fd2b:	add    eax,0xefe93719
  40fd30:	xlat   BYTE PTR ds:[ebx]
  40fd31:	out    dx,al
  40fd32:	xor    eax,0x6cbdab0
  40fd37:	adc    dl,BYTE PTR [ebx+0x42]
  40fd3a:	fdivr  st(4),st
  40fd3c:	jmp    DWORD PTR [edi+ecx*2+0x278f69b6]
  40fd43:	adc    eax,0x201c0655
  40fd48:	inc    eax
  40fd49:	mov    al,ds:0x72e872bf
  40fd4e:	ds mov dl,0x62
  40fd51:	es loope 0x40fdc2
  40fd54:	push   ss
  40fd55:	ds dec esi
  40fd57:	pop    es
  40fd58:	ret    0x82ff
  40fd5b:	mov    ss,WORD PTR [ecx+0x46]
  40fd5e:	test   al,0xe2
  40fd60:	cli    
  40fd61:	sbb    ch,BYTE PTR [edx-0x7]
  40fd64:	clc    
  40fd65:	(bad)  
  40fd67:	sti    
  40fd68:	(bad)  
  40fd69:	int    0x6f
  40fd6b:	dec    esi
  40fd6c:	dec    eax
  40fd6d:	sub    al,0xd6
  40fd6f:	push   ebx
  40fd70:	js     0x40fd7f
  40fd72:	into   
  40fd73:	xchg   esp,eax
  40fd74:	xor    edx,DWORD PTR [esp+ebp*1-0x7c]
  40fd78:	test   eax,0x7602bf46
  40fd7d:	aam    0x55
  40fd7f:	cwde   
  40fd80:	pop    eax
  40fd81:	cmp    bh,BYTE PTR [eax+0x1]
  40fd84:	push   ecx
  40fd85:	push   esi
  40fd86:	mov    esp,0xec3de7df
  40fd8b:	icebp  
  40fd8c:	int    0x6a
  40fd8e:	cmp    al,0x97
  40fd90:	jecxz  0x40fd64
  40fd92:	mov    DWORD PTR [esi-0x52],esi
  40fd95:	cmp    bh,al
  40fd97:	xchg   ebp,eax
  40fd98:	pop    ds
  40fd99:	in     al,dx
  40fd9a:	dec    esi
  40fd9b:	hlt    
  40fd9c:	push   0x9b66fb6c
  40fda1:	jae    0x40fd68
  40fda3:	inc    ecx
  40fda4:	jp     0x40fe21
  40fda6:	stc    
  40fda7:	repnz mov ds:0x2c1f632a,eax
  40fdad:	call   0x2b17:0xcb73ed6
  40fdb4:	add    DWORD PTR [ebx],ebx
  40fdb6:	jno    0x40fd62
  40fdb8:	jnp    0x40fe0f
  40fdba:	inc    eax
  40fdbb:	int    0xf6
  40fdbd:	ss std 
  40fdbf:	mov    eax,?
  40fdc1:	cdq    
  40fdc2:	cmp    dh,cl
  40fdc4:	dec    eax
  40fdc5:	mov    eax,0x91b86e
  40fdca:	daa    
  40fdcb:	call   0xb968c5ef
  40fdd0:	daa    
  40fdd1:	add    DWORD PTR [ecx-0x219da2],edi
  40fdd7:	mov    edi,esi
  40fdd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdda:	jl     0x40fe36
  40fddc:	loopne 0x40fde0
  40fdde:	(bad)
  40fde1:	ins    DWORD PTR es:[edi],dx
  40fde2:	fisub  WORD PTR [edi-0x16d0f1de]
  40fde8:	out    dx,al
  40fde9:	mov    al,ds:0x174f94e3
  40fdee:	hlt    
  40fdef:	push   ebp
  40fdf0:	rcr    esp,1
  40fdf2:	not    BYTE PTR [edi-0x78]
  40fdf5:	sub    BYTE PTR [ebp+0x49c42e48],0xae
  40fdfc:	xor    al,0xd
  40fdfe:	ja     0x40fdec
  40fe00:	push   edi
  40fe01:	xor    BYTE PTR [edx+esi*2],cl
  40fe04:	add    BYTE PTR [edx-0x6ca19df1],ah
  40fe0a:	fcmovnb st,st(3)
  40fe0c:	repnz popa 
  40fe0e:	sbb    DWORD PTR [edx+0x18a74f99],esp
  40fe14:	xor    BYTE PTR [edi],al
  40fe16:	and    dl,dh
  40fe18:	mov    ecx,0x8be2c7eb
  40fe1d:	cmp    dh,ah
  40fe1f:	lahf   
  40fe20:	mov    dl,0x3e
  40fe22:	mov    ebx,0xb07b9555
  40fe27:	scas   eax,DWORD PTR es:[edi]
  40fe28:	into   
  40fe29:	test   BYTE PTR [ecx+0xd],0x8a
  40fe2d:	mov    ah,0xac
  40fe2f:	bound  ecx,QWORD PTR [ecx+0x4]
  40fe32:	and    DWORD PTR [edi],0x9a80ec8d
  40fe38:	ins    DWORD PTR es:[edi],dx
  40fe39:	test   DWORD PTR [ebx-0x4e],0x86c07d1f
  40fe40:	push   0xd99f9495
  40fe45:	imul   ebp,ecx,0xc54303c7
  40fe4b:	fadd   QWORD PTR [ebx]
  40fe4d:	dec    eax
  40fe4e:	dec    esp
  40fe4f:	add    ah,ch
  40fe51:	dec    esp
  40fe52:	jl     0x40fe49
  40fe54:	repz fwait
  40fe56:	fs out dx,al
  40fe58:	xchg   sp,ax
  40fe5a:	mov    bl,0xcc
  40fe5c:	lods   al,BYTE PTR ds:[esi]
  40fe5d:	(bad)  
  40fe5e:	aam    0x4e
  40fe60:	cdq    
  40fe61:	inc    ecx
  40fe62:	jge    0x40feb4
  40fe64:	push   eax
  40fe65:	push   ecx
  40fe66:	test   eax,0x6eef652c
  40fe6b:	mov    ebx,0x3f4f857d
  40fe70:	inc    esp
  40fe71:	loopne 0x40feba
  40fe73:	call   0xca0d1297
  40fe78:	ret    0xdb57
  40fe7b:	pop    ebx
  40fe7c:	imul   eax,DWORD PTR [ecx+edx*1-0x2095f78a],0x8256678e
  40fe87:	push   ebx
  40fe88:	jle    0x40fe18
  40fe8a:	sub    eax,edx
  40fe8c:	or     DWORD PTR fs:[ecx-0x3c],eax
  40fe90:	loop   0x40fe52
  40fe92:	not    BYTE PTR [ebx-0x7b]
  40fe95:	adc    al,0x2
  40fe97:	adc    BYTE PTR [ebx+0x52659fb1],bh
  40fe9d:	xor    ch,BYTE PTR [ebx+0x1b]
  40fea0:	cmc    
  40fea1:	add    eax,0xd5b3f08e
  40fea6:	neg    DWORD PTR [ebx-0x5a]
  40fea9:	jnp    0x40ff17
  40feab:	lds    eax,FWORD PTR [esi]
  40fead:	sub    edi,DWORD PTR [ebx+eiz*2-0x1bf335db]
  40feb4:	lods   eax,DWORD PTR ds:[esi]
  40feb5:	scas   al,BYTE PTR es:[edi]
  40feb6:	push   cs
  40feb7:	pop    es
  40feb8:	mov    esp,0xc3367898
  40febd:	jl     0x40ff01
  40febf:	dec    ebx
  40fec0:	retf   
  40fec1:	repnz inc esp
  40fec3:	loopne 0x40fe75
  40fec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fec6:	loopne 0x40fe9e
  40fec8:	cmp    esi,esp
  40feca:	in     eax,0xb0
  40fecc:	scas   eax,DWORD PTR es:[edi]
  40fecd:	rcl    DWORD PTR [esi-0x16],cl
  40fed0:	stos   BYTE PTR es:[edi],al
  40fed1:	pop    ebp
  40fed2:	cmp    al,0xfb
  40fed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fed5:	mov    esp,0x93016423
  40feda:	dec    eax
  40fedb:	push   ds
  40fedc:	mov    ebp,0xa6bb47e6
  40fee1:	inc    eax
  40fee2:	(bad)  
  40fee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fee5:	adc    ecx,eax
  40fee7:	loope  0x40feb8
  40fee9:	xor    al,0x9c
  40feeb:	mov    bl,0x26
  40feed:	push   ss
  40feee:	dec    ecx
  40feef:	pop    es
  40fef0:	(bad)  
  40fef1:	(bad)  
  40fef2:	jmp    0x25b2:0xb3f5e66d
  40fef9:	jo     0x40fed5
  40fefb:	mov    dl,0x8b
  40fefd:	repz pop ebp
  40feff:	push   esp
  40ff00:	push   ebx
  40ff01:	pop    ebp
  40ff02:	(bad)  
  40ff03:	jno    0x40ff45
  40ff05:	sbb    BYTE PTR [esi],0x9f
  40ff08:	bnd jae 0x40ff87
  40ff0b:	dec    esp
  40ff0c:	and    al,0xc
  40ff0e:	jo     0x40fe94
  40ff10:	sbb    edi,DWORD PTR [eax]
  40ff12:	mov    edi,0x5f3e8076
  40ff17:	imul   ebp,edi,0xacb8afb9
  40ff1d:	jnp    0x40fecf
  40ff1f:	mov    ds:0x63f09b3,al
  40ff24:	mov    cl,0x75
  40ff26:	push   es
  40ff27:	(bad)
  40ff2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff2d:	inc    ebx
  40ff2e:	sti    
  40ff2f:	(bad)  [ebp+0x7b5dfdf]
  40ff35:	sti    
  40ff36:	imul   ecx,DWORD PTR [esi-0x485e51df],0xc304237
  40ff40:	mov    ebp,0x91abc68b
  40ff45:	les    eax,FWORD PTR [edx]
  40ff47:	(bad)  [esi]
  40ff49:	mov    ds:0x464abaa2,eax
  40ff4e:	icebp  
  40ff4f:	xor    DWORD PTR [ebx-0x79c57cf7],ecx
  40ff55:	out    dx,al
  40ff56:	(bad)  
  40ff57:	lds    esi,FWORD PTR [ebx-0x5b]
  40ff5a:	retf   
  40ff5b:	jle    0x40ff77
  40ff5d:	push   cs
  40ff5e:	jle    0x40ffaf
  40ff60:	cdq    
  40ff61:	dec    BYTE PTR [edx+ecx*4]
  40ff64:	jecxz  0x40ff1b
  40ff66:	imul   esp
  40ff68:	in     eax,0xf9
  40ff6a:	iret   
  40ff6b:	lea    ebp,[ebp-0x5c]
  40ff6e:	and    edx,edi
  40ff70:	fwait
  40ff71:	retf   
  40ff72:	outs   dx,DWORD PTR ds:[esi]
  40ff73:	jp     0x40ffd8
  40ff75:	push   edx
  40ff76:	xor    DWORD PTR [esi],edi
  40ff78:	in     eax,0x1f
  40ff7a:	inc    ebp
  40ff7b:	xchg   ecx,eax
  40ff7c:	mov    BYTE PTR [ebp-0x692a851e],0xd4
  40ff83:	cli    
  40ff84:	sbb    DWORD PTR [ebx],ecx
  40ff86:	push   edi
  40ff87:	and    DWORD PTR [ebx+0x99a8417],ecx
  40ff8d:	call   0xae3d9623
  40ff92:	fld    DWORD PTR [edx+0x5958258f]
  40ff98:	cmp    esp,DWORD PTR [ecx-0x2a00538d]
  40ff9e:	mov    ecx,0x34a2d19a
  40ffa3:	xchg   ebp,eax
  40ffa4:	xchg   esp,eax
  40ffa5:	adc    DWORD PTR [edx+eax*1-0xd],edx
  40ffa9:	inc    esp
  40ffaa:	push   ebp
  40ffab:	sub    eax,0x19a21d36
  40ffb0:	cwde   
  40ffb1:	les    esp,FWORD PTR [eax+edi*4+0x6c4a6f98]
  40ffb8:	jb     0x410013
  40ffba:	pop    esp
  40ffbb:	mov    edx,ebx
  40ffbd:	aad    0x85
  40ffbf:	cld    
  40ffc0:	inc    ebp
  40ffc1:	in     al,dx
  40ffc2:	das    
  40ffc3:	cdq    
  40ffc4:	pop    ds
  40ffc5:	jno    0x40ffe7
  40ffc7:	int3   
  40ffc8:	xchg   BYTE PTR [esi+0x41],dh
  40ffcb:	xchg   edi,eax
  40ffcc:	sub    eax,DWORD PTR [edi]
  40ffce:	fcomp  DWORD PTR [esi-0x7015c8f1]
  40ffd4:	and    BYTE PTR [ecx+0x58],dl
  40ffd7:	xor    cl,BYTE PTR [ebx-0x1c]
  40ffda:	scas   al,BYTE PTR es:[edi]
  40ffdb:	test   al,0x9a
  40ffdd:	into   
  40ffde:	sti    
  40ffdf:	mov    eax,0x4a601031
  40ffe4:	xchg   esp,eax
  40ffe5:	push   0xa2e9511b
  40ffea:	or     ah,cl
  40ffec:	push   ss
  40ffed:	icebp  
  40ffee:	mov    bl,0x9e
  40fff0:	imul   bl
  40fff2:	jne    0x410053
  40fff4:	sbb    BYTE PTR [eax-0x68],dh
  40fff7:	mov    dh,BYTE PTR [edx+0x62]
  40fffa:	mov    DWORD PTR [edi+0x2c],ecx
  40fffd:	mov    dh,0x2a
  40ffff:	cs in  eax,0x21
  410002:	adc    DWORD PTR [edi+esi*1+0x42],0xffffffe2
  410007:	mov    ebx,0x2f483116
  41000c:	je     0x410017
  41000e:	or     esi,edx
  410010:	or     eax,0xc9c86c7
  410015:	jne    0x40ffd6
  410017:	mov    dl,0xc5
  410019:	into   
  41001a:	test   BYTE PTR [esi-0x199aa1ca],dh
  410020:	push   ebp
  410021:	push   0xfa5370d3
  410026:	add    DWORD PTR [edx],esp
  410028:	and    esi,DWORD PTR [edi+edx*8]
  41002b:	mov    al,ds:0xf403e213
  410030:	pop    esp
  410031:	pop    edi
  410032:	jae    0x40ffc2
  410034:	dec    edx
  410035:	test   al,0xba
  410037:	js     0x410025
  410039:	inc    eax
  41003a:	pop    ss
  41003b:	lods   eax,DWORD PTR ds:[esi]
  41003c:	repnz mov al,0xe5
  41003f:	(bad)
  410043:	pop    edi
  410044:	enter  0x7b0e,0x6c
  410048:	loopne 0x41003c
  41004a:	dec    ecx
  41004b:	xchg   edi,eax
  41004c:	xchg   edi,eax
  41004d:	xchg   ecx,eax
  41004e:	xchg   ebp,eax
  41004f:	jae    0x410089
  410051:	stos   DWORD PTR es:[edi],eax
  410052:	push   eax
  410053:	dec    edi
  410054:	rdpmc  
  410056:	dec    ecx
  410057:	test   eax,0x6e745eb4
  41005c:	std    
  41005d:	push   ebp
  41005e:	ins    BYTE PTR es:[edi],dx
  41005f:	adc    DWORD PTR ds:0x392c9707,edx
  410065:	cdq    
  410066:	add    ebx,ebp
  410068:	jno    0x4100b7
  41006a:	push   0x19
  41006c:	add    esi,DWORD PTR [ebp-0x47]
  41006f:	repnz pop esi
  410071:	lds    ebx,FWORD PTR [ebp+0x42b60332]
  410077:	or     eax,0xf30f991c
  41007c:	pushf  
  41007d:	sbb    eax,0xca8e26f6
  410082:	in     al,0x3f
  410084:	stc    
  410085:	cmp    DWORD PTR [esi+esi*1],edi
  410088:	(bad)  
  410089:	sar    edx,1
  41008b:	je     0x410017
  41008d:	imul   esi,DWORD PTR [esi-0x52],0x31
  410091:	aam    0x37
  410093:	inc    ecx
  410094:	fsub   DWORD PTR [edx-0x4d]
  410097:	out    0x64,al
  410099:	mov    al,0x16
  41009b:	sub    ecx,DWORD PTR ds:0xe4b7f3da
  4100a1:	in     al,dx
  4100a2:	xlat   BYTE PTR ds:[ebx]
  4100a3:	or     al,0x8a
  4100a5:	dec    edi
  4100a6:	enter  0x8e96,0xa9
  4100aa:	pop    ss
  4100ab:	out    dx,al
  4100ac:	hlt    
  4100ad:	scas   al,BYTE PTR es:[edi]
  4100ae:	jmp    0x9f5605f3
  4100b3:	shl    DWORD PTR [edi+0xda90313],0xe4
  4100ba:	mov    ch,BYTE PTR [ebp+0x1d]
  4100bd:	or     DWORD PTR [eax-0x5a],esp
  4100c0:	adc    BYTE PTR [esi-0x5f],bl
  4100c3:	retf   0x79d2
  4100c6:	mov    ss,WORD PTR [edi+ecx*1+0x88011ab]
  4100cd:	mov    WORD PTR [ecx+0x66],fs
  4100d0:	(bad)  
  4100d1:	fdivr  st(3),st
  4100d3:	es mov bl,0xcb
  4100d6:	popa   
  4100d7:	cli    
  4100d8:	sub    eax,0x6abc1b78
  4100dd:	mov    dl,0xdc
  4100df:	ficomp WORD PTR [esi-0x283cdb80]
  4100e5:	push   esi
  4100e6:	sahf   
  4100e7:	add    al,0x3b
  4100e9:	out    dx,al
  4100ea:	jno    0x4100b0
  4100ec:	icebp  
  4100ed:	adc    ah,bl
  4100ef:	fidiv  WORD PTR [esi]
  4100f1:	mov    al,0xa0
  4100f3:	test   DWORD PTR [esi+eiz*1],edi
  4100f6:	xor    eax,0xbab07439
  4100fb:	repnz mov al,ds:0x57278f87
  410101:	(bad)  
  410102:	dec    ebp
  410103:	div    DWORD PTR [ecx+0x6dc25dd1]
  410109:	adc    eax,0xee88d48b
  41010e:	push   ebp
  41010f:	cmp    al,bl
  410111:	leave  
  410112:	(bad)  
  410113:	mov    bh,0xae
  410115:	and    ch,bl
  410117:	sbb    DWORD PTR [edi],esp
  410119:	sti    
  41011a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41011b:	dec    esp
  41011c:	call   0x9414ad2f
  410121:	popf   
  410122:	mov    ebx,0x2f66ae3f
  410127:	repnz sub ebp,DWORD PTR [ebx]
  41012a:	fld    TBYTE PTR [eax+0x12]
  41012d:	sbb    eax,0xa77da237
  410132:	fistp  QWORD PTR [eax-0x4030c5a6]
  410138:	ja     0x4101a1
  41013a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41013b:	nop
  41013c:	xchg   esp,eax
  41013d:	jmp    0x149d93a1
  410142:	or     BYTE PTR [ebp+0xed07995],0x6a
  410149:	adc    BYTE PTR ds:0x394e435d,0xb7
  410150:	jo     0x410190
  410152:	jbe    0x4100e1
  410154:	lds    eax,FWORD PTR [ecx-0x6c66e48a]
  41015a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41015b:	xchg   esp,eax
  41015c:	cwde   
  41015d:	sub    bl,ch
  41015f:	enter  0xa172,0xa3
  410163:	mov    edi,0xadabd5c8
  410168:	test   eax,0x64490861
  41016d:	jmp    0x2e6aeeec
  410172:	imul   esp,DWORD PTR [ebx-0x73],0xa196fe49
  410179:	rdpmc  
  41017b:	loope  0x4101a2
  41017d:	int    0x4c
  41017f:	arpl   WORD PTR [edx+esi*4+0x49d66f19],dx
  410186:	out    dx,al
  410187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410189:	push   edx
  41018a:	add    al,0x51
  41018c:	add    ah,ah
  41018e:	xchg   ebp,eax
  41018f:	cmp    esi,ecx
  410191:	mov    edi,0xe71be73d
  410196:	mov    bl,0x66
  410198:	retf   0x3c93
  41019b:	js     0x410188
  41019d:	inc    edi
  41019e:	push   0x6e
  4101a0:	outs   dx,BYTE PTR ds:[esi]
  4101a1:	xor    DWORD PTR [edi],eax
  4101a3:	rcr    BYTE PTR [edi+edi*8+0x45ee354c],cl
  4101aa:	ins    BYTE PTR es:[edi],dx
  4101ab:	cmp    eax,0xf09d90d4
  4101b0:	loop   0x41019c
  4101b2:	std    
  4101b3:	inc    edi
  4101b4:	mov    cl,dh
  4101b6:	cmp    BYTE PTR [ebx-0x10e0b4a1],bh
  4101bc:	adc    dl,BYTE PTR [esi+0x46]
  4101bf:	sbb    cl,0xba
  4101c2:	adc    bl,BYTE PTR [esi]
  4101c4:	xor    BYTE PTR [edx],bl
  4101c6:	out    dx,al
  4101c7:	sub    BYTE PTR [ebp+0x66],0x36
  4101cb:	(bad)  
  4101cc:	ret    0x780c
  4101cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101d0:	int3   
  4101d1:	scas   eax,DWORD PTR es:[edi]
  4101d2:	sbb    ebx,esi
  4101d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101d5:	outs   dx,DWORD PTR ds:[esi]
  4101d6:	mov    esp,0xd42900d5
  4101db:	add    BYTE PTR [edx+edi*8+0x62],ah
  4101df:	xor    BYTE PTR [bx+si+0x3b21],dl
  4101e4:	call   0x1f26e5f6
  4101e9:	loopne 0x410224
  4101eb:	sbb    dl,al
  4101ed:	out    dx,al
  4101ee:	xchg   ecx,eax
  4101ef:	mov    edx,0xc17b7c67
  4101f4:	aam    0x1a
  4101f6:	inc    edx
  4101f7:	sbb    dh,BYTE PTR [ebp+0x54]
  4101fa:	je     0x410228
  4101fc:	(bad)  
  4101fd:	sbb    al,0xf0
  4101ff:	sbb    dh,0x24
  410202:	mov    bh,0xcf
  410204:	loop   0x410279
  410206:	mov    cl,0x1a
  410208:	pop    ebx
  410209:	dec    esp
  41020a:	cmp    esi,eax
  41020c:	or     DWORD PTR [ebx],edi
  41020e:	hlt    
  41020f:	xor    esi,DWORD PTR [eax]
  410211:	fcomp  DWORD PTR [ebp+0x46]
  410214:	std    
  410215:	jmp    0xd980:0xc9e0d4ad
  41021c:	in     eax,0xd
  41021e:	mov    esi,0xf8956985
  410223:	cld    
  410224:	test   al,0xe9
  410226:	popf   
  410227:	cmp    dl,BYTE PTR [ebx+0x33]
  41022a:	rol    BYTE PTR [eax+0x10196682],0xd4
  410231:	and    eax,0x9edd3d3f
  410236:	inc    ebx
  410237:	js     0x41022a
  410239:	add    ch,dh
  41023b:	inc    ecx
  41023c:	retf   0xbc4b
  41023f:	and    eax,0x63b709f8
  410244:	push   cs
  410245:	in     al,0x2c
  410247:	outs   dx,DWORD PTR ds:[esi]
  410248:	icebp  
  410249:	pushf  
  41024a:	or     BYTE PTR [ebp+0x2eea8233],bh
  410250:	mov    esp,DWORD PTR [eax-0x1b71b870]
  410256:	pop    ebx
  410257:	sub    BYTE PTR ds:0xbc932b7b,dh
  41025d:	and    ch,bh
  41025f:	adc    edx,ebx
  410261:	sbb    al,bh
  410263:	scas   eax,DWORD PTR es:[edi]
  410264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410265:	outs   dx,BYTE PTR ds:[esi]
  410266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410267:	push   ebp
  410268:	in     eax,0xa2
  41026a:	sahf   
  41026b:	leave  
  41026c:	sub    eax,0x86974380
  410271:	lahf   
  410272:	cmp    eax,0xda8f59f5
  410277:	sub    bh,ah
  410279:	gs xchg ebp,eax
  41027b:	jp     0x41029f
  41027d:	add    al,0x51
  41027f:	push   eax
  410280:	xchg   edx,eax
  410281:	add    al,0x72
  410283:	popf   
  410284:	test   esp,ebp
  410286:	out    dx,al
  410287:	adc    al,0x38
  410289:	cwde   
  41028a:	or     BYTE PTR [ebx],bl
  41028c:	and    BYTE PTR [ebp+0x71],0xfc
  410290:	jge    0x410221
  410292:	call   0x72a6d6b6
  410297:	std    
  410298:	mov    ebx,0x82de1c07
  41029d:	dec    ebx
  41029e:	ins    DWORD PTR es:[edi],dx
  41029f:	out    0xe3,eax
  4102a1:	push   edi
  4102a2:	mov    ah,0xd1
  4102a4:	stos   BYTE PTR es:[edi],al
  4102a5:	pop    esp
  4102a6:	jnp    0x4102bb
  4102a8:	fisub  DWORD PTR [eax]
  4102aa:	data16 sbb bh,BYTE PTR [edx+0x55]
  4102ae:	inc    ebx
  4102af:	inc    ecx
  4102b0:	js     0x410232
  4102b2:	or     bh,BYTE PTR [esi]
  4102b4:	sub    DWORD PTR [ebx-0x3d],eax
  4102b7:	sub    al,0xc2
  4102b9:	loope  0x41024f
  4102bb:	psrlq  mm2,QWORD PTR [edi+0x8029dd7]
  4102c2:	push   edi
  4102c3:	sub    ch,BYTE PTR [ebx]
  4102c5:	mov    al,BYTE PTR [edi]
  4102c7:	icebp  
  4102c8:	jb     0x410311
  4102ca:	sbb    al,al
  4102cc:	push   ebp
  4102cd:	ds or  eax,0x929e7a22
  4102d3:	mov    fs,WORD PTR [ecx+0x3b]
  4102d6:	xlat   BYTE PTR ds:[ebx]
  4102d7:	pop    eax
  4102d8:	call   0xd38d279f
  4102dd:	aad    0x5c
  4102df:	cmp    BYTE PTR gs:[edi+edx*8+0x4a57911a],bh
  4102e7:	mov    edi,0x1a6aa4a2
  4102ec:	test   DWORD PTR [ebx-0x4672d6a],esp
  4102f2:	or     esi,esp
  4102f4:	aas    
  4102f5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102f7:	sbb    edx,eax
  4102f9:	(bad)  
  4102fa:	aaa    
  4102fb:	adc    ebx,eax
  4102fd:	cmp    BYTE PTR [edx],0xda
  410300:	sbb    ch,BYTE PTR [edx+0x64286b18]
  410306:	imul   edi,DWORD PTR [ecx+0x52],0xca806199
  41030d:	in     al,0xed
  41030f:	lods   eax,DWORD PTR ds:[esi]
  410310:	mov    dl,0xc4
  410312:	leave  
  410313:	jp     0x410327
  410315:	stos   DWORD PTR es:[edi],eax
  410316:	dec    edi
  410317:	sahf   
  410318:	mov    ah,0xfa
  41031a:	cmp    DWORD PTR [esi-0x63],edx
  41031d:	pop    esp
  41031e:	push   edi
  41031f:	icebp  
  410320:	outs   dx,DWORD PTR ds:[esi]
  410321:	loope  0x410337
  410323:	outs   dx,DWORD PTR ds:[esi]
  410324:	ins    DWORD PTR es:[edi],dx
  410325:	and    edi,DWORD PTR [ebx-0x535fce56]
  41032b:	pop    ebx
  41032c:	add    ah,0x98
  41032f:	fist   WORD PTR [ecx]
  410331:	push   edx
  410332:	jmp    0xe9cfa88d
  410337:	or     ecx,edi
  410339:	pop    ecx
  41033a:	xor    esi,eax
  41033c:	out    0xfd,eax
  41033e:	xor    eax,DWORD PTR [edi+0x69323ffc]
  410344:	fstp   QWORD PTR [eax+0x39]
  410347:	cs out 0x1c,eax
  41034a:	jbe    0x4103ca
  41034c:	aaa    
  41034d:	call   0x34c0cf9c
  410352:	xchg   bh,ah
  410354:	addr16 sti 
  410356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410357:	test   BYTE PTR [esi-0x147f0317],bh
  41035d:	ins    DWORD PTR es:[edi],dx
  41035e:	jnp    0x41037c
  410360:	nop
  410361:	cmp    ah,dl
  410363:	mov    bh,0x2
  410365:	in     al,dx
  410366:	(bad)  
  410367:	mov    ds:0x857cf6ba,eax
  41036c:	mov    eax,ds:0xdbeb0559
  410371:	xor    edi,DWORD PTR [edi+0x5f]
  410374:	ficom  WORD PTR [edi+0x69]
  410377:	jecxz  0x410342
  410379:	aam    0x66
  41037b:	into   
  41037c:	mov    al,ds:0xc2b1a34a
  410381:	mov    edi,0xd50c04e9
  410386:	mov    eax,ds:0xe971f96e
  41038b:	fwait
  41038c:	cli    
  41038d:	sub    ch,BYTE PTR [ecx+0x387a1f41]
  410393:	and    ah,BYTE PTR ds:0x9def720c
  410399:	push   esp
  41039a:	nop
  41039b:	ror    DWORD PTR [edx+edi*2],0x76
  41039f:	ja     0x41033e
  4103a1:	pop    esp
  4103a2:	retf   
  4103a3:	loop   0x410348
  4103a5:	enter  0x1f10,0xed
  4103a9:	imul   esi,DWORD PTR [edi],0x6eb9a35
  4103af:	lahf   
  4103b0:	jbe    0x410375
  4103b2:	sbb    bh,BYTE PTR [edx+ebx*8]
  4103b5:	in     al,dx
  4103b6:	inc    esp
  4103b7:	push   0x3204d1a8
  4103bc:	aad    0x96
  4103be:	jmp    0x7042:0x24870249
  4103c5:	ffreep st(2)
  4103c7:	sbb    bl,BYTE PTR [esi]
  4103c9:	mov    ebx,0x8167baa0
  4103ce:	loop   0x4103ad
  4103d0:	test   DWORD PTR [ebp+0x7f05c67a],ebp
  4103d6:	icebp  
  4103d7:	or     BYTE PTR [edi+edx*1-0x65e51cda],dl
  4103de:	je     0x41042c
  4103e0:	fisub  DWORD PTR [ebp-0x6a]
  4103e3:	jnp    0x4103a3
  4103e5:	aam    0xf9
  4103e7:	or     al,BYTE PTR [ebx-0x7f]
  4103ea:	add    eax,0x4cd91c57
  4103ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103f0:	adc    al,0x41
  4103f2:	cmp    al,0x3b
  4103f4:	push   es
  4103f5:	pop    es
  4103f6:	js     0x4103b8
  4103f8:	outs   dx,DWORD PTR ds:[esi]
  4103f9:	cmp    bh,0x45
  4103fc:	cmp    al,0xfa
  4103fe:	loop   0x41039f
  410400:	mov    ah,0x17
  410402:	mov    dh,BYTE PTR [edx-0x33437179]
  410408:	loop   0x410424
  41040a:	or     BYTE PTR [ecx+edi*1+0x29],0x67
  41040f:	ret    0xe9cc
  410412:	mov    eax,ds:0xd72553b7
  410417:	cs jl  0x410405
  41041a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41041b:	out    dx,al
  41041c:	push   0xfffffff9
  41041e:	rcr    DWORD PTR [esp+ebx*4-0x42],cl
  410422:	add    DWORD PTR [edi-0x40],edi
  410425:	ss jp  0x410421
  410428:	arpl   WORD PTR [ecx+eiz*4+0x74a89c5f],cx
  41042f:	ja     0x4104a7
  410431:	das    
  410432:	push   ds
  410433:	and    al,0xa3
  410435:	into   
  410436:	push   ecx
  410437:	mov    bh,0x62
  410439:	loopne 0x4104b6
  41043b:	inc    eax
  41043c:	mov    ebx,edx
  41043e:	adc    eax,0x3b93ce28
  410443:	std    
  410444:	xchg   esp,eax
  410445:	nop
  410446:	ins    BYTE PTR es:[edi],dx
  410447:	mov    edx,0x3497d9b3
  41044c:	mov    ds:0x792bc0ed,eax
  410451:	lea    edi,[esp+esi*2]
  410454:	jge    0x410472
  410456:	cmp    bl,BYTE PTR [eax+0x71]
  410459:	aad    0xba
  41045b:	cdq    
  41045c:	cmp    BYTE PTR [edx-0x7fb64f99],bh
  410462:	mov    al,0x84
  410464:	stc    
  410465:	sti    
  410466:	gs test al,0xaa
  410469:	jbe    0x410411
  41046b:	cmp    al,0x1f
  41046d:	mov    dh,ah
  41046f:	lds    ecx,FWORD PTR [ecx+0x4e]
  410472:	stc    
  410473:	or     eax,0x8918781f
  410478:	sbb    eax,DWORD PTR [esi-0x192c474f]
  41047e:	call   0xec2cb7f4
  410483:	shr    BYTE PTR [edx+0x1b],cl
  410486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410487:	aas    
  410488:	jp     0x4104ef
  41048a:	push   0xffffff80
  41048c:	ret    0x7676
  41048f:	cmp    BYTE PTR [ebx-0xf],dl
  410492:	shl    BYTE PTR [eax+ebp*2+0x79],cl
  410496:	cdq    
  410497:	inc    ebp
  410498:	fcomp  DWORD PTR [esp+edx*2-0x4a]
  41049c:	or     BYTE PTR [edx],bl
  41049e:	push   ebp
  41049f:	jle    0x410450
  4104a1:	add    BYTE PTR ds:0xd1ca3f99,dl
  4104a7:	(bad)  
  4104a9:	sub    eax,ebx
  4104ab:	pop    edi
  4104ac:	jns    0x4104f8
  4104ae:	sti    
  4104af:	mov    ah,0xd1
  4104b1:	mov    ch,0xc7
  4104b3:	mov    ebx,0xf98efe4f
  4104b8:	dec    ecx
  4104b9:	mov    bl,0x8a
  4104bb:	ficom  DWORD PTR [esp+ebp*2+0x5]
  4104bf:	test   al,0xe
  4104c1:	ins    BYTE PTR es:[edi],dx
  4104c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104c3:	xchg   esi,eax
  4104c4:	(bad)  
  4104c6:	sahf   
  4104c7:	ja     0x410459
  4104c9:	dec    esp
  4104ca:	test   DWORD PTR [eax-0x2b],eax
  4104cd:	mov    DWORD PTR [edx+0x6b25a],ebp
  4104d3:	sub    al,0x58
  4104d5:	lea    esi,[ecx+0x71]
  4104d8:	cmp    cl,dl
  4104da:	std    
  4104db:	stos   DWORD PTR es:[edi],eax
  4104dc:	aam    0xa4
  4104de:	pop    edi
  4104df:	or     edi,eax
  4104e1:	cs jno 0x4104af
  4104e4:	and    eax,0xffe76d13
  4104e9:	cli    
  4104ea:	add    BYTE PTR [edx+0x3b],al
  4104ed:	cmp    esp,DWORD PTR [esi-0x14a202dc]
  4104f3:	in     al,0xf2
  4104f5:	xchg   ebp,eax
  4104f6:	jnp    0x4104aa
  4104f8:	pop    es
  4104f9:	retf   0x669
  4104fc:	aas    
  4104fd:	bound  esp,QWORD PTR [ebx*2+0x7192f28f]
  410504:	push   cs
  410505:	xor    al,0x2c
  410507:	mul    BYTE PTR [edx-0xc]
  41050a:	fcmovnu st,st(6)
  41050c:	dec    ebp
  41050d:	push   ebx
  41050e:	sub    ah,BYTE PTR [edx-0x2494d8a8]
  410514:	mov    al,0x9e
  410516:	cs or  eax,0x75776064
  41051c:	push   esi
  41051d:	(bad)  
  41051e:	imul   ebx,DWORD PTR [ecx+eiz*2-0x77],0xe86914e
  410526:	xchg   edi,eax
  410527:	and    ebx,edi
  410529:	test   DWORD PTR [edi-0x1a],0x3067d576
  410530:	fs call 0xf9dc:0x7af8be0f
  410538:	push   ebx
  410539:	frstor [esi-0x359cef73]
  41053f:	imul   ebx,DWORD PTR [edx+0x292340d6],0xffffff93
  410546:	jg     0x410536
  410548:	xchg   esp,eax
  410549:	mov    esp,0x629e3925
  41054e:	clc    
  41054f:	loopne 0x4104e6
  410551:	xor    BYTE PTR [ecx],0x61
  410554:	stc    
  410555:	cwde   
  410556:	nop
  410557:	xchg   esp,eax
  410558:	aaa    
  410559:	ficom  WORD PTR [eax+0x4c]
  41055c:	seta   BYTE PTR [esi+0x3f]
  410560:	mov    al,cl
  410562:	inc    eax
  410563:	cld    
  410564:	pop    es
  410565:	test   eax,0x24b98faf
  41056a:	lahf   
  41056b:	or     cl,BYTE PTR [edi]
  41056d:	addr16 aam 0x29
  410570:	pop    esp
  410571:	pushf  
  410572:	sub    dl,bl
  410574:	xchg   esi,eax
  410575:	add    dl,bh
  410577:	sub    ebx,edi
  410579:	into   
  41057a:	mov    ss,ecx
  41057c:	pop    ss
  41057d:	icebp  
  41057e:	fucomip st,st(7)
  410580:	jnp    0x41051b
  410582:	outs   dx,BYTE PTR ds:[esi]
  410583:	pop    esp
  410584:	and    ch,BYTE PTR [ebp+ebx*1+0xa]
  410588:	xor    esi,0x871cc000
  41058e:	or     bl,0x5e
  410591:	sar    BYTE PTR [eax-0x5c],cl
  410594:	jo     0x410580
  410596:	or     ch,al
  410598:	cmp    DWORD PTR [eax+0x4b],esp
  41059b:	xchg   esp,eax
  41059c:	xchg   ebx,eax
  41059d:	jecxz  0x4105ca
  41059f:	jbe    0x410557
  4105a1:	lds    ebp,FWORD PTR [eax+0x6a]
  4105a4:	into   
  4105a5:	aas    
  4105a6:	rcl    BYTE PTR [esp+edi*8],0x21
  4105aa:	mov    eax,0x7a94f3be
  4105af:	adc    edi,DWORD PTR [ebx+0x50]
  4105b2:	inc    dh
  4105b4:	jns    0x41061f
  4105b6:	loopne 0x410622
  4105b8:	or     BYTE PTR [edi+0x7eeb4ea8],bh
  4105be:	mov    ecx,0x33abd337
  4105c3:	xchg   ebp,eax
  4105c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105c5:	or     eax,edi
  4105c7:	inc    esi
  4105c8:	scas   al,BYTE PTR es:[edi]
  4105c9:	cmp    BYTE PTR [ecx+0x13f3ccaa],bh
  4105cf:	sub    BYTE PTR [ebp+0xb5626f5],dl
  4105d5:	inc    ebp
  4105d6:	fist   DWORD PTR [eax+ebp*4-0x4b]
  4105da:	jle    0x410628
  4105dc:	inc    esi
  4105dd:	push   cs
  4105de:	cmp    eax,0x723a9a6f
  4105e3:	dec    edx
  4105e4:	sbb    DWORD PTR ds:0xc236aeb,esp
  4105ea:	sbb    al,0x2f
  4105ec:	xor    eax,0x5abdc0bb
  4105f1:	bound  ebp,QWORD PTR [ecx+0x36]
  4105f4:	ud2    
  4105f6:	push   0x3c1c2c18
  4105fb:	cmp    al,0x1e
  4105fd:	test   BYTE PTR [ecx-0x20c051ed],ah
  410603:	fwait
  410604:	mov    edx,0xf1ccca6b
  410609:	mov    ecx,0x6332a1bb
  41060e:	sub    DWORD PTR [esi-0x14b08791],ecx
  410614:	xchg   ecx,eax
  410615:	addr16 leave 
  410617:	pop    ds
  410618:	and    DWORD PTR [esi+0x47],edx
  41061b:	pop    eax
  41061c:	in     eax,0x7b
  41061e:	sub    esp,DWORD PTR [edx]
  410620:	jb     0x410666
  410622:	pop    ds
  410623:	imul   ecx,DWORD PTR [edi+0x6f883633],0x7f
  41062a:	adc    BYTE PTR [esi+0x5a7eec2e],dl
  410630:	mov    eax,0xc271d112
  410635:	dec    esp
  410636:	sub    ebp,DWORD PTR [eax]
  410638:	push   0xffffffa3
  41063a:	sub    eax,0xe9e0664d
  41063f:	pushf  
  410640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410641:	or     al,0xec
  410643:	push   esp
  410644:	push   ss
  410645:	int3   
  410646:	pop    ebp
  410647:	unpcklps xmm4,XMMWORD PTR [esi-0x37bb33b4]
  41064e:	jmp    0xabfff768
  410653:	jmp    0x4106c2
  410655:	xchg   di,ax
  410657:	and    DWORD PTR [edi-0x29a3f67e],ecx
  41065d:	cmc    
  41065e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41065f:	jbe    0x410611
  410661:	jno    0x410640
  410663:	cmp    al,0xca
  410665:	sbb    eax,0xc6afd7b9
  41066a:	shl    ebx,1
  41066c:	add    BYTE PTR [ecx-0x5e],bl
  41066f:	mov    dh,0x37
  410671:	add    DWORD PTR [ecx+0x5ff063ed],esi
  410677:	inc    eax
  410678:	(bad)
  41067b:	mov    ds:0xbee07465,eax
  410680:	jnp    0x410621
  410682:	inc    ebx
  410683:	test   bl,cl
  410685:	hlt    
  410686:	mov    esi,0x217bc57
  41068b:	rcl    ecx,cl
  41068d:	adc    eax,0x59a0fe9e
  410692:	dec    ebp
  410693:	xor    BYTE PTR ds:0xa3810842,cl
  410699:	push   esi
  41069a:	mov    ah,0x56
  41069c:	scas   eax,DWORD PTR es:[edi]
  41069d:	cmp    al,0xd8
  41069f:	pop    ebx
  4106a0:	leave  
  4106a1:	sbb    ebx,DWORD PTR [esi]
  4106a3:	add    ah,BYTE PTR [ebx+0x78]
  4106a6:	call   0x50cf:0xf3817892
  4106ad:	sub    al,0x32
  4106af:	dec    esp
  4106b0:	jae    0x410685
  4106b2:	dec    edx
  4106b3:	jmp    0x41070f
  4106b5:	test   al,0x47
  4106b7:	jns    0x4106e5
  4106b9:	ins    DWORD PTR es:[edi],dx
  4106ba:	sub    eax,0x60f9bb88
  4106bf:	sbb    ecx,DWORD PTR [ecx+0x4ca3bc2b]
  4106c5:	jno    0x410741
  4106c7:	fsub   QWORD PTR [ebx]
  4106c9:	or     dh,0xa2
  4106cc:	js     0x41071b
  4106ce:	stos   DWORD PTR es:[edi],eax
  4106cf:	xchg   BYTE PTR ds:[eax],cl
  4106d2:	push   esp
  4106d3:	add    esi,DWORD PTR [ebx+0x61]
  4106d6:	(bad)  
  4106d7:	cmp    eax,0xbdb44492
  4106dc:	mov    eax,0x23066b6f
  4106e1:	jle    0x4106a6
  4106e3:	ins    DWORD PTR es:[edi],dx
  4106e4:	inc    eax
  4106e5:	inc    edx
  4106e6:	cmp    eax,0xb1e4e819
  4106eb:	or     BYTE PTR [ecx+0x79],bh
  4106ee:	adc    dl,BYTE PTR [eax]
  4106f0:	jl     0x4106dc
  4106f2:	add    cl,BYTE PTR [ecx+0x3d]
  4106f5:	out    dx,al
  4106f6:	xor    eax,0xb2b7bc05
  4106fb:	and    cl,BYTE PTR [edi+eiz*8]
  4106fe:	adc    edx,ebx
  410700:	xor    ebp,DWORD PTR [edx+0x6a]
  410703:	pop    ebp
  410704:	aaa    
  410705:	lds    ebp,FWORD PTR [esi+0x6a]
  410708:	aad    0xae
  41070a:	popa   
  41070b:	pop    es
  41070c:	iret   
  41070d:	(bad)  
  41070e:	dec    BYTE PTR [ecx]
  410710:	lds    ebp,FWORD PTR [ebp+0x55bfa547]
  410716:	pusha  
  410717:	inc    ebx
  410718:	loop   0x410787
  41071a:	in     eax,dx
  41071b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41071c:	dec    esi
  41071d:	fimul  DWORD PTR [edi]
  41071f:	push   esi
  410720:	mov    esi,0x13a85024
  410725:	xchg   edi,eax
  410726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410727:	jno    0x4106fe
  410729:	mov    ecx,0x26a9843f
  41072e:	pop    ds
  41072f:	loope  0x4106b2
  410731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410732:	xor    esp,eax
  410734:	push   edi
  410735:	jne    0x410700
  410737:	push   ss
  410738:	xchg   ebx,eax
  410739:	jne    0x41079e
  41073b:	fwait
  41073c:	adc    BYTE PTR [eax-0x6b],bh
  41073f:	outs   dx,BYTE PTR ds:[esi]
  410740:	push   ebx
  410741:	sub    DWORD PTR [ebx-0x5e],ebp
  410744:	xchg   esi,eax
  410745:	fcomp  st(5)
  410747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410748:	xor    BYTE PTR [eax+ecx*8],cl
  41074b:	xchg   esi,eax
  41074c:	outs   dx,DWORD PTR ds:[esi]
  41074d:	and    eax,edi
  41074f:	clc    
  410750:	adc    bh,BYTE PTR [edi]
  410752:	pop    esp
  410753:	pop    eax
  410754:	add    eax,0x156d4850
  410759:	mov    al,bl
  41075b:	test   ah,cl
  41075d:	into   
  41075e:	mov    dh,bh
  410760:	mov    bh,0x6d
  410762:	daa    
  410763:	or     DWORD PTR [si],esi
  410766:	xchg   ebx,eax
  410767:	icebp  
  410768:	push   edx
  410769:	pop    esi
  41076a:	xchg   edi,eax
  41076b:	dec    ebx
  41076c:	cli    
  41076d:	pop    edi
  41076e:	and    eax,0xc73cfeba
  410773:	ds cmp al,0x25
  410776:	push   0x8d11ea57
  41077b:	adc    eax,DWORD PTR [ecx-0x5dda96a0]
  410781:	test   eax,0xe3cfa557
  410786:	cmp    al,0x25
  410788:	push   es
  410789:	jle    0x4107fc
  41078b:	shr    edx,cl
  41078d:	mov    al,ds:0xcd7242d9
  410792:	fimul  DWORD PTR [ebp-0x39]
  410795:	rol    DWORD PTR [eax-0x67],cl
  410798:	(bad)  
  410799:	cs call 0xfed01171
  41079f:	int    0xf2
  4107a1:	sub    DWORD PTR ds:0x60f467e3,ebp
  4107a7:	ja     0x410817
  4107a9:	and    al,0xc1
  4107ab:	sbb    BYTE PTR [edi+0x34],cl
  4107ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107af:	rcr    BYTE PTR [ecx-0x60],cl
  4107b2:	push   es
  4107b3:	mov    eax,DWORD PTR [eax-0x58]
  4107b6:	mov    eax,0x567dc0b6
  4107bb:	jbe    0x41081c
  4107bd:	aas    
  4107be:	add    esi,edx
  4107c0:	std    
  4107c1:	pop    ebp
  4107c2:	xor    BYTE PTR [ebx-0x2],cl
  4107c5:	dec    eax
  4107c6:	push   esi
  4107c7:	hlt    
  4107c8:	push   0x3371cf46
  4107cd:	cmc    
  4107ce:	gs sti 
  4107d0:	xchg   esp,eax
  4107d1:	mov    ebx,DWORD PTR [ecx-0x3b]
  4107d4:	nop
  4107d5:	mov    WORD PTR [edi-0x10a506c8],ds
  4107db:	loope  0x4107da
  4107dd:	and    eax,0xc34a2fc4
  4107e3:	ficom  WORD PTR [eax-0x5b825c43]
  4107e9:	jbe    0x4107a3
  4107eb:	push   edi
  4107ec:	outs   dx,DWORD PTR ds:[esi]
  4107ed:	icebp  
  4107ee:	std    
  4107ef:	and    dh,cl
  4107f1:	pop    ss
  4107f2:	fstp   TBYTE PTR [ecx-0x432a4054]
  4107f8:	push   edi
  4107f9:	test   DWORD PTR [edx-0x5d],ebp
  4107fc:	test   al,0x61
  4107fe:	cmp    ecx,DWORD PTR [eax+0x563c10]
  410804:	or     BYTE PTR [ebp-0x4f],cl
  410807:	mov    ebp,edi
  410809:	add    eax,0x9a0eb9ef
  41080e:	dec    ebx
  41080f:	and    BYTE PTR [edi+0x17fa5e77],cl
  410815:	imul   edx,DWORD PTR [edi],0x58
  410818:	cmp    eax,0xee924260
  41081d:	data16 adc al,0xd8
  410820:	xchg   ebx,eax
  410821:	push   ss
  410822:	ds loope 0x4107ba
  410825:	test   al,0x2f
  410827:	ins    DWORD PTR es:[edi],dx
  410828:	dec    ebx
  410829:	xor    dl,BYTE PTR [esi+ebx*2-0x7e]
  41082d:	jecxz  0x4107df
  41082f:	(bad)  
  410830:	sbb    al,0x54
  410832:	aaa    
  410833:	jmp    0xcfdc4277
  410838:	imul   BYTE PTR [eax]
  41083a:	jmp    0x41082e
  41083c:	push   ebx
  41083d:	or     BYTE PTR [esi+0x75fddde],ch
  410843:	shl    DWORD PTR [esi-0x41],cl
  410846:	(bad)  
  410847:	leave  
  410848:	lahf   
  410849:	vpmulhuw ymm4,ymm7,ymm5
  41084d:	or     eax,0x13425ce9
  410852:	sbb    BYTE PTR [esi+0x4122c39d],dh
  410858:	mov    WORD PTR [eax-0x49409595],fs
  41085e:	push   ebx
  41085f:	clc    
  410860:	fdivr  st,st(6)
  410862:	(bad)  
  410863:	icebp  
  410864:	daa    
  410865:	retf   
  410866:	lahf   
  410867:	pushf  
  410868:	aas    
  410869:	sub    al,0x31
  41086b:	mov    esi,DWORD PTR [eax+0x16]
  41086e:	es loop 0x4108d5
  410871:	test   DWORD PTR [edi+0x6a8e0dfd],ecx
  410877:	push   ss
  410878:	mov    DWORD PTR [esi-0x22b5427c],esp
  41087e:	sbb    eax,0x394f50ca
  410883:	cmp    eax,0xf9b162c2
  410888:	ret    0x726c
  41088b:	dec    esi
  41088c:	sub    ecx,DWORD PTR [eax]
  41088e:	or     al,0x68
  410890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410891:	jno    0x410897
  410893:	jg     0x4108b3
  410895:	jle    0x4108d6
  410897:	sbb    eax,0x4164c5da
  41089c:	loop   0x4108e0
  41089e:	pop    ss
  41089f:	shr    esp,cl
  4108a1:	and    DWORD PTR [ecx-0x17],edx
  4108a4:	pop    ebp
  4108a5:	clc    
  4108a6:	addr16 mov al,ds:0x823b
  4108aa:	lahf   
  4108ab:	adc    ecx,DWORD PTR [edi+ecx*4]
  4108ae:	repnz mov cl,0x4c
  4108b1:	jb     0x4108be
  4108b3:	push   0x23
  4108b5:	in     al,dx
  4108b6:	jmp    0x7ceb:0x6d2b5f0d
  4108bd:	push   ecx
  4108be:	mov    esi,0xd767ff7f
  4108c3:	and    edi,DWORD PTR [ebp+0x26]
  4108c6:	cld    
  4108c7:	sub    esp,0x29
  4108ca:	inc    ebp
  4108cb:	addr16 rcr dh,cl
  4108ce:	mov    ebx,0x4048a90e
  4108d3:	adc    al,0xff
  4108d5:	icebp  
  4108d6:	adc    BYTE PTR [ebx-0x464e56a2],bl
  4108dc:	pop    ebp
  4108dd:	or     BYTE PTR [esi+0x62],dl
  4108e0:	fld    st(6)
  4108e2:	sbb    BYTE PTR [ecx],cl
  4108e4:	loopne 0x4108a5
  4108e6:	stc    
  4108e7:	(bad)  
  4108e8:	lods   eax,DWORD PTR ds:[esi]
  4108e9:	add    eax,0xe1ade827
  4108ee:	dec    edi
  4108ef:	inc    ebx
  4108f0:	es (bad) 
  4108f2:	xlat   BYTE PTR ds:[ebx]
  4108f3:	test   BYTE PTR [ecx],bl
  4108f5:	adc    ah,BYTE PTR [edi]
  4108f7:	and    eax,0xa4a54c12
  4108fc:	retf   0x7ea1
  4108ff:	bound  edi,QWORD PTR [eax]
  410901:	das    
  410902:	leave  
  410903:	cmp    al,BYTE PTR [ebx-0x4d8af1d4]
  410909:	addr16 cdq 
  41090b:	jmp    0x846f69d8
  410910:	xchg   BYTE PTR [ebp+0x1],ah
  410913:	and    edx,edx
  410915:	out    dx,al
  410916:	xchg   edx,eax
  410917:	divps  xmm7,XMMWORD PTR [esi+ecx*4-0x413390db]
  41091f:	push   0xee87eccf
  410924:	xchg   ah,bl
  410926:	retf   
  410927:	xchg   edi,eax
  410928:	imul   esi,DWORD PTR [edx-0x364f495b],0x96bccacb
  410932:	retf   
  410933:	jge    0x410917
  410935:	sub    DWORD PTR [ebp+0x6c],edx
  410938:	or     edi,DWORD PTR [ecx-0x64409d8f]
  41093e:	dec    edx
  41093f:	call   0x9eb1d76a
  410944:	or     al,0xf7
  410946:	mov    dl,BYTE PTR [ebp+0x1c]
  410949:	call   0xfc4406e2
  41094e:	and    dl,ah
  410950:	jo     0x4109b6
  410952:	out    0x69,eax
  410954:	xchg   esi,edx
  410956:	popf   
  410957:	repz test al,0x24
  41095a:	mov    ebp,0xac7c222e
  41095f:	xlat   BYTE PTR ds:[ebx]
  410960:	xchg   ebx,eax
  410961:	pushf  
  410962:	add    eax,0x8e8f3273
  410967:	and    BYTE PTR [edi-0x7c49d330],ch
  41096d:	pop    edi
  41096e:	jp     0x410996
  410970:	adc    eax,0xc672e058
  410975:	or     DWORD PTR [esi],edi
  410977:	inc    ebx
  410978:	inc    edx
  410979:	sub    dh,BYTE PTR [edi]
  41097b:	sbb    eax,0x60af1953
  410980:	adc    ebp,ebx
  410982:	and    bh,BYTE PTR [eax]
  410984:	test   cl,0x52
  410987:	loope  0x410919
  410989:	das    
  41098a:	add    BYTE PTR [edx-0x45cbbee7],dh
  410990:	jmp    0x410976
  410992:	rcr    BYTE PTR [edi-0x42001bae],cl
  410998:	ins    DWORD PTR es:[edi],dx
  410999:	and    ebp,DWORD PTR [ecx-0x44]
  41099c:	adc    DWORD PTR [edi+0x7e5191b4],edi
  4109a2:	scas   al,BYTE PTR es:[edi]
  4109a3:	das    
  4109a4:	ror    BYTE PTR [eax],1
  4109a6:	dec    ebp
  4109a7:	and    ecx,DWORD PTR [esi-0x551b670d]
  4109ad:	mov    ch,0x4
  4109af:	mov    edi,0x6f745813
  4109b4:	loope  0x41096f
  4109b6:	push   cs
  4109b7:	jle    0x4109b2
  4109b9:	stos   BYTE PTR es:[edi],al
  4109ba:	mov    al,ds:0x67037ed7
  4109bf:	cwde   
  4109c0:	xor    ch,ch
  4109c2:	sbb    edi,DWORD PTR [eax+0x65f9bfc8]
  4109c8:	jns    0x410a25
  4109ca:	mov    ebp,0xb1c2ffdb
  4109cf:	enter  0x53b8,0x95
  4109d3:	cmp    al,BYTE PTR ds:0x64425cb3
  4109d9:	lods   al,BYTE PTR ds:[esi]
  4109da:	cmp    BYTE PTR [esp+esi*4-0x35],bl
  4109de:	stc    
  4109df:	add    edx,DWORD PTR [edi-0x4cb6ce55]
  4109e5:	fsub   QWORD PTR [edx+eiz*2-0x663ed722]
  4109ec:	ins    DWORD PTR es:[edi],dx
  4109ed:	xor    al,cl
  4109ef:	sub    dh,bl
  4109f1:	in     al,0xab
  4109f3:	jmp    0x4109f5
  4109f5:	sbb    DWORD PTR [eax+0x6],esi
  4109f8:	push   ecx
  4109f9:	fst    DWORD PTR [edi-0x1e08fd7d]
  4109ff:	retf   0xff77
  410a02:	aaa    
  410a03:	mov    al,0x47
  410a05:	mov    ebp,0x54aa4ba3
  410a0a:	or     BYTE PTR [esi-0x794815d0],0xc3
  410a11:	sub    eax,0x4055a38f
  410a16:	sbb    DWORD PTR ds:0xe0b58592,ecx
  410a1c:	out    0xe9,al
  410a1e:	push   0x11a275dc
  410a23:	adc    al,0x46
  410a25:	stos   BYTE PTR es:[edi],al
  410a26:	mov    bl,BYTE PTR [esi-0x2ad92273]
  410a2c:	(bad)  
  410a2e:	mov    dl,0xbb
  410a30:	jge    0x410a2b
  410a32:	add    eax,DWORD PTR [eax]
  410a34:	sbb    al,0x9f
  410a36:	shld   ebx,edx,cl
  410a39:	jae    0x410a89
  410a3b:	add    BYTE PTR [edx],ch
  410a3d:	push   ebx
  410a3e:	arpl   WORD PTR [edx],cx
  410a40:	sbb    DWORD PTR [ebx],0x4d
  410a43:	jl     0x410a58
  410a45:	or     DWORD PTR [ebx],esp
  410a47:	pop    edi
  410a48:	jae    0x410a22
  410a4a:	sub    dh,BYTE PTR [ebx-0x4b]
  410a4d:	or     ebp,DWORD PTR [esp+edx*1]
  410a50:	fld    QWORD PTR [edx-0x35]
  410a53:	mov    ecx,0x208e6418
  410a58:	xchg   edx,eax
  410a59:	add    DWORD PTR [edi],ebp
  410a5b:	and    DWORD PTR [ebx+0x3],eax
  410a5e:	xchg   DWORD PTR [ebx-0x3f642070],ebx
  410a64:	fist   DWORD PTR [edi+esi*2-0x5b]
  410a68:	dec    edx
  410a69:	xor    eax,0xab439615
  410a6e:	mov    dh,0x5f
  410a70:	add    al,0x35
  410a72:	hlt    
  410a73:	sub    esp,DWORD PTR [esi+esi*2]
  410a76:	loopne 0x410ac3
  410a78:	or     BYTE PTR [eax],ch
  410a7a:	fld    TBYTE PTR [edx]
  410a7c:	in     al,0xab
  410a7e:	retf   
  410a7f:	cdq    
  410a80:	cmp    ch,BYTE PTR [ebp-0x1dba8597]
  410a86:	pop    ds
  410a87:	adc    DWORD PTR [ebp-0x58c2b2dd],esp
  410a8d:	repz or ebx,DWORD PTR [ecx]
  410a90:	mov    ch,0x16
  410a92:	dec    edx
  410a93:	call   0x9b75:0x8a431219
  410a9a:	cs sub al,0x63
  410a9d:	pop    ebx
  410a9e:	mov    al,0x6f
  410aa0:	xchg   ebx,eax
  410aa1:	in     eax,dx
  410aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aa3:	aad    0x6d
  410aa5:	xchg   edx,eax
  410aa6:	jbe    0x410b03
  410aa8:	rcl    esi,cl
  410aaa:	call   0x281f4d4d
  410aaf:	mov    cl,0x1d
  410ab1:	xchg   edi,eax
  410ab2:	pop    ebx
  410ab3:	repnz mov esp,0x90dc856f
  410ab9:	fistp  WORD PTR [ebx+ebx*4]
  410abc:	push   edi
  410abd:	cdq    
  410abe:	pop    ebp
  410abf:	cmp    ebx,ecx
  410ac1:	mov    esi,0xcd7c0371
  410ac6:	dec    ebp
  410ac7:	add    eax,0x11d14f6c
  410acc:	jbe    0x410abd
  410ace:	or     edi,ebx
  410ad0:	and    al,0xed
  410ad2:	es pop ss
  410ad4:	mov    ds:0x77266628,al
  410ad9:	xchg   ecx,eax
  410ada:	dec    esi
  410adb:	fmul   st,st(7)
  410add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ade:	cwd    
  410ae0:	mov    ds:0x38105820,al
  410ae5:	(bad)  [ebp-0x50914ad3]
  410aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aec:	or     esp,DWORD PTR [ebx+0x17]
  410aef:	rcl    BYTE PTR [eax+edi*4],1
  410af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410af3:	ins    DWORD PTR es:[edi],dx
  410af4:	dec    ecx
  410af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410af6:	(bad)  
  410af7:	lods   eax,DWORD PTR ds:[esi]
  410af8:	or     esi,DWORD PTR [ebp+0x5b]
  410afb:	dec    esi
  410afc:	sahf   
  410afd:	lods   al,BYTE PTR ds:[esi]
  410afe:	xor    DWORD PTR [eax],ebp
  410b00:	sar    BYTE PTR [ebp-0x2781ce4b],0x76
  410b07:	cs (bad) 
  410b09:	cmp    bl,BYTE PTR [ecx+eiz*4]
  410b0c:	lods   eax,DWORD PTR ds:[esi]
  410b0d:	sahf   
  410b0e:	ins    DWORD PTR es:[edi],dx
  410b0f:	into   
  410b10:	jecxz  0x410b6b
  410b12:	or     BYTE PTR [edx+ebx*2],al
  410b15:	mov    ebp,0xcdb9e8a4
  410b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b1b:	jne    0x410aa0
  410b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b1e:	fmul   st,st(7)
  410b20:	(bad)  
  410b22:	adc    BYTE PTR [eax],dh
  410b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b25:	xor    BYTE PTR es:[esi+esi*1],bl
  410b29:	sbb    eax,0x509c7903
  410b2e:	ficom  WORD PTR ss:0x4680d60c
  410b35:	xchg   esp,eax
  410b36:	loop   0x410b6e
  410b38:	lds    edi,FWORD PTR ds:[eax+0x31]
  410b3c:	loope  0x410abe
  410b3e:	mov    ch,0xa5
  410b40:	mov    ds:0x796f739a,al
  410b45:	test   BYTE PTR [eax-0xd],cl
  410b48:	ins    DWORD PTR es:[edi],dx
  410b49:	push   ebx
  410b4a:	xor    al,0x79
  410b4c:	jle    0x410b30
  410b4e:	cwde   
  410b4f:	mov    ah,0xc7
  410b51:	add    BYTE PTR [eax-0x5f],ch
  410b54:	jmp    0x4e90571d
  410b59:	mov    eax,ds:0x5fe0df0f
  410b5e:	sbb    al,0x27
  410b60:	std    
  410b61:	jno    0x410bd1
  410b63:	and    DWORD PTR [edx],esp
  410b65:	pop    eax
  410b66:	iret   
  410b67:	sub    eax,0x98954a73
  410b6c:	les    ebp,FWORD PTR [edx+0x6d4d2a5a]
  410b72:	stos   BYTE PTR es:[edi],al
  410b73:	or     ebp,esi
  410b75:	push   esi
  410b76:	mov    ch,0xe2
  410b78:	jne    0x410b51
  410b7a:	in     al,dx
  410b7b:	fnstsw WORD PTR [ecx]
  410b7d:	or     ebp,ecx
  410b7f:	loop   0x410bed
  410b81:	mov    BYTE PTR [edx+0x4b],dl
  410b84:	ret    
  410b85:	lods   al,BYTE PTR ds:[esi]
  410b86:	dec    ebp
  410b87:	pop    edx
  410b88:	into   
  410b89:	jg     0x410b46
  410b8b:	xchg   esp,eax
  410b8c:	add    DWORD PTR [edi],esi
  410b8e:	test   DWORD PTR [ebx-0x5983f132],edi
  410b94:	mov    edi,0xfa650055
  410b99:	push   ecx
  410b9a:	mov    WORD PTR [edi],es
  410b9c:	sbb    DWORD PTR [edi],esp
  410b9e:	jae    0x410b20
  410ba0:	xchg   edx,eax
  410ba1:	mov    al,ds:0x179438e9
  410ba6:	pop    edx
  410ba7:	sub    DWORD PTR [edx+ebx*1-0x29],eax
  410bab:	xor    cl,BYTE PTR [edx+0x17]
  410bae:	out    dx,eax
  410baf:	pusha  
  410bb0:	cmp    edi,DWORD PTR [ebp-0x24]
  410bb3:	jae    0x410bbb
  410bb5:	mov    dl,0xad
  410bb7:	call   FWORD PTR [edx-0x37]
  410bba:	push   ecx
  410bbb:	pusha  
  410bbc:	pushf  
  410bbd:	push   edx
  410bbe:	push   ecx
  410bbf:	jmp    0xe0734cb0
  410bc4:	fiadd  DWORD PTR [ebx]
  410bc6:	hlt    
  410bc7:	into   
  410bc8:	fnstenv [edi+0x57]
  410bcb:	rol    BYTE PTR [esi],1
  410bcd:	xchg   ebp,eax
  410bce:	scas   eax,DWORD PTR es:[edi]
  410bcf:	pushf  
  410bd0:	jge    0x410bc8
  410bd2:	int3   
  410bd3:	cs mov esp,0xb94454a6
  410bd9:	xchg   esp,eax
  410bda:	call   0x683a6b5a
  410bdf:	jmp    0xeb86:0xf1db97ec
  410be6:	out    dx,al
  410be7:	(bad)  
  410be8:	pop    ss
  410be9:	xor    BYTE PTR [edi-0x24],bh
  410bec:	sbb    eax,0xff309616
  410bf1:	xchg   esi,eax
  410bf2:	ss scas eax,DWORD PTR es:[edi]
  410bf4:	test   eax,0x1cbe7a2a
  410bf9:	lock xor ah,BYTE PTR [esi+0xd]
  410bfd:	pop    ecx
  410bfe:	sub    al,0xe3
  410c00:	ds mov esp,0xdd9dd09a
  410c06:	stc    
  410c07:	bound  edi,QWORD PTR [ecx-0x24221ff1]
  410c0d:	retf   
  410c0e:	inc    ecx
  410c0f:	jns    0x410c36
  410c11:	popf   
  410c12:	ret    
  410c13:	mov    bh,0x50
  410c15:	inc    ecx
  410c16:	jecxz  0x410c23
  410c18:	jnp    0x410c0f
  410c1a:	call   DWORD PTR [esi+0x4e392c85]
  410c20:	jmp    0x410c16
  410c22:	or     eax,edx
  410c24:	sbb    dh,bl
  410c26:	dec    ebx
  410c27:	jl     0x410c65
  410c29:	inc    ecx
  410c2a:	mov    eax,0x3d947011
  410c2f:	sti    
  410c30:	dec    edi
  410c31:	std    
  410c32:	cmp    eax,0x595ea363
  410c37:	xor    dh,ah
  410c39:	std    
  410c3a:	mov    bh,0x8e
  410c3c:	(bad)  
  410c3d:	(bad)  [eax]
  410c3f:	jmp    0xf114f1f7
  410c44:	loop   0x410c9f
  410c46:	icebp  
  410c47:	cmp    BYTE PTR [esi+eax*1+0x2b],bh
  410c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c4c:	sub    BYTE PTR [eax-0x3cecbdf0],al
  410c52:	repz mov dl,0x25
  410c55:	call   0x55a3e089
  410c5a:	stos   BYTE PTR es:[edi],al
  410c5b:	sbb    bl,BYTE PTR [edx]
  410c5d:	add    BYTE PTR [edx-0x57],ch
  410c60:	push   ds
  410c61:	jb     0x410c05
  410c63:	pop    ebx
  410c64:	out    0xd3,eax
  410c66:	cmp    eax,0x59a9508a
  410c6b:	inc    edx
  410c6c:	mov    esi,0x1685a186
  410c71:	adc    ecx,edx
  410c73:	sbb    esp,edi
  410c75:	shl    DWORD PTR [ebp-0x1f],0xf7
  410c79:	mov    eax,ds:0x50c05bbe
  410c7e:	int    0x73
  410c80:	jns    0x410cde
  410c82:	out    0x90,al
  410c84:	pop    ebx
  410c85:	cmp    ecx,DWORD PTR [ebx]
  410c87:	cmp    DWORD PTR [ecx+0x6c],0x6b82f851
  410c8e:	data16 into 
  410c90:	and    dl,BYTE PTR es:[esi-0x69bd92bd]
  410c97:	adc    cl,ch
  410c99:	arpl   WORD PTR [ebp+0x1cbfcb43],dx
  410c9f:	aad    0x2e
  410ca1:	fnsave [edx+0x53628f58]
  410ca7:	sbb    DWORD PTR [eax-0x7a74d650],edx
  410cad:	pop    ebp
  410cae:	and    BYTE PTR [edx],bl
  410cb0:	xor    edx,edi
  410cb2:	mov    ch,0xef
  410cb4:	mov    WORD PTR [ebp+0x31],cs
  410cb7:	adc    cl,BYTE PTR [edi-0x260a578b]
  410cbd:	(bad)  
  410cbe:	test   eax,0x1c093912
  410cc3:	jl     0x410c90
  410cc5:	xchg   ebx,eax
  410cc6:	cmp    eax,DWORD PTR [eax]
  410cc8:	dec    ebp
  410cc9:	clc    
  410cca:	dec    esi
  410ccb:	repz jne 0x410cc8
  410cce:	push   eax
  410ccf:	push   ds
  410cd0:	out    0x7e,eax
  410cd2:	push   0x68
  410cd4:	fwait
  410cd5:	dec    dh
  410cd7:	jecxz  0x410c6d
  410cd9:	(bad)  
  410cda:	bound  ebx,QWORD PTR [ebp-0x36134077]
  410ce0:	popa   
  410ce1:	inc    esp
  410ce2:	mov    bh,0xfa
  410ce4:	dec    edx
  410ce5:	gs dec ebx
  410ce7:	jp     0x410d5e
  410ce9:	cs push cs
  410ceb:	stc    
  410cec:	data16 jl 0x410d5d
  410cef:	cdq    
  410cf0:	lods   al,BYTE PTR ds:[esi]
  410cf1:	pop    es
  410cf2:	push   esi
  410cf3:	iret   
  410cf4:	mov    ds:0xd66faddd,eax
  410cf9:	ins    BYTE PTR es:[edi],dx
  410cfa:	iret   
  410cfb:	dec    ecx
  410cfc:	pop    esi
  410cfd:	loope  0x410d23
  410cff:	adc    dl,BYTE PTR [esi-0x14]
  410d02:	int3   
  410d03:	ds cli 
  410d05:	mov    esp,0x9a2f1eef
  410d0a:	fstp   TBYTE PTR [ebp-0x25]
  410d0d:	sbb    bh,BYTE PTR [ecx+ebp*4-0x61741ba2]
  410d14:	push   ebp
  410d15:	out    dx,eax
  410d16:	cdq    
  410d17:	repz push ds
  410d19:	pop    es
  410d1a:	jp     0x410d83
  410d1c:	mov    DWORD PTR [edx+0x757dfdfe],ecx
  410d22:	sub    al,BYTE PTR [edx-0x75c6ca89]
  410d28:	jo     0x410d97
  410d2a:	jmp    0x410d93
  410d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d2d:	data16 int 0xb4
  410d30:	pushf  
  410d31:	sbb    esp,DWORD PTR [ecx-0x175adc2d]
  410d37:	mov    ds:0x9edb2b,al
  410d3c:	test   BYTE PTR [eax+0x7c],bh
  410d3f:	je     0x410ce8
  410d41:	push   esp
  410d42:	or     al,0x3a
  410d44:	and    dh,BYTE PTR [edi+0xf]
  410d47:	shl    cl,1
  410d49:	pop    ds
  410d4a:	jg     0x410dbb
  410d4c:	daa    
  410d4d:	fild   WORD PTR [eax-0x67]
  410d50:	mov    bl,0x27
  410d52:	les    ebp,FWORD PTR [ebx-0x3770586]
  410d58:	ror    DWORD PTR [eax],0x36
  410d5b:	jb     0x410d4c
  410d5d:	loopne 0x410d64
  410d5f:	jle    0x410d6f
  410d61:	aas    
  410d62:	mov    bl,0x7c
  410d64:	pushf  
  410d65:	mov    ds:0xc53cbafe,eax
  410d6a:	xchg   edi,eax
  410d6b:	outs   dx,DWORD PTR ds:[esi]
  410d6c:	test   BYTE PTR [esi+0x5303f667],ch
  410d72:	jmp    0x410d55
  410d74:	mov    ds:0x1241b58e,al
  410d79:	ds (bad) 
  410d7b:	in     al,dx
  410d7c:	int    0x26
  410d7e:	cli    
  410d7f:	inc    DWORD PTR [eax-0x6e]
  410d82:	mov    cl,0xd8
  410d84:	(bad)  
  410d86:	mov    bh,0x5
  410d88:	xchg   ebx,eax
  410d89:	into   
  410d8a:	icebp  
  410d8b:	mov    cl,0xd2
  410d8d:	add    bh,BYTE PTR [eax-0x177bd31c]
  410d93:	sar    DWORD PTR [ebx-0x60],cl
  410d96:	sub    cl,BYTE PTR [ecx-0x64]
  410d99:	xor    BYTE PTR [ebp+0x74c9fdc0],0xce
  410da0:	xor    DWORD PTR [ebx-0x71],esp
  410da3:	fistp  QWORD PTR [eax]
  410da5:	xchg   ecx,eax
  410da6:	lds    ebp,FWORD PTR [esi+0x33]
  410da9:	fisttp WORD PTR [eax+0x11e8b31a]
  410daf:	adc    DWORD PTR [bp+0x6798],ebx
  410db4:	mov    ecx,0x469375e3
  410db9:	test   BYTE PTR [ecx-0x20],0xd0
  410dbd:	mov    ebp,0x414d1f60
  410dc2:	vpsllq xmm4,xmm0,XMMWORD PTR [esi+0x121a0678]
  410dca:	outs   dx,DWORD PTR ds:[esi]
  410dcb:	(bad)  
  410dcc:	jmp    0xfc7a98b4
  410dd1:	lods   eax,DWORD PTR ds:[esi]
  410dd2:	jp     0x410d79
  410dd4:	sub    BYTE PTR [eax],0x24
  410dd7:	call   0xcbc6:0x964dd487
  410dde:	xchg   edx,eax
  410ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410de0:	jg     0x410e2a
  410de2:	int3   
  410de3:	mov    ecx,0x7b1acac6
  410de8:	retf   
  410de9:	cmc    
  410dea:	xchg   BYTE PTR [esi+0x29],dh
  410ded:	push   esi
  410dee:	gs sbb ecx,0xae16657c
  410df5:	xlat   BYTE PTR ds:[ebx]
  410df6:	cmp    ebp,DWORD PTR [esp+eiz*2-0x7ae6a11e]
  410dfd:	or     BYTE PTR [edi],dl
  410dff:	adc    eax,eax
  410e01:	js     0x410dad
  410e03:	or     BYTE PTR [ecx-0x9],cl
  410e06:	lods   eax,DWORD PTR ss:[esi]
  410e08:	lds    ebx,FWORD PTR [edi+ebx*4]
  410e0b:	dec    esi
  410e0c:	in     al,0x45
  410e0e:	into   
  410e0f:	push   edx
  410e10:	and    BYTE PTR [edx+0x7a68455e],dh
  410e16:	fucomi st,st(1)
  410e18:	cld    
  410e19:	mov    al,ch
  410e1b:	int3   
  410e1c:	add    ecx,esp
  410e1e:	mov    esp,0x34d2a96f
  410e23:	add    eax,0x2ebb1bca
  410e28:	sub    eax,0x3222da74
  410e2d:	cmp    dl,BYTE PTR [esi-0x7790e51f]
  410e33:	lea    ecx,[edx]
  410e35:	inc    esp
  410e36:	mov    esp,edi
  410e38:	xor    al,0xe3
  410e3a:	stos   DWORD PTR es:[edi],eax
  410e3b:	jns    0x410e23
  410e3d:	mov    WORD PTR [ebp-0x48fee2a6],gs
  410e43:	std    
  410e44:	jecxz  0x410ec3
  410e46:	das    
  410e47:	pop    esp
  410e48:	imul   BYTE PTR [ecx]
  410e4a:	or     eax,0x7899afdd
  410e4f:	xor    ecx,DWORD PTR [ecx-0x62]
  410e52:	adc    ecx,DWORD PTR [ebx+edi*8+0x3e7c32f0]
  410e59:	adc    eax,0xc365792d
  410e5e:	retf   0x640c
  410e61:	and    eax,0xe05c729f
  410e66:	push   es
  410e67:	xor    esi,DWORD PTR [esi]
  410e69:	sbb    bl,al
  410e6b:	int    0xca
  410e6d:	pushf  
  410e6e:	jge    0x410e3a
  410e70:	call   FWORD PTR [ebp-0xd80fc48]
  410e76:	sbb    DWORD PTR [edi+0x33],edx
  410e79:	mov    dl,BYTE PTR [esi+0x4f171151]
  410e7f:	jge    0x410e6e
  410e81:	shl    BYTE PTR [eax-0x14405063],cl
  410e87:	push   0x3e
  410e89:	out    0x5d,eax
  410e8b:	sbb    BYTE PTR [ebp+0x1a],0x71
  410e8f:	pop    ds
  410e90:	mov    esp,0x6ab01f8a
  410e95:	je     0x410e2d
  410e97:	icebp  
  410e98:	fdivr  DWORD PTR [esi-0x16]
  410e9b:	in     al,dx
  410e9c:	cwde   
  410e9d:	outs   dx,DWORD PTR ds:[esi]
  410e9e:	in     al,dx
  410e9f:	dec    ecx
  410ea0:	and    al,0x65
  410ea2:	dec    eax
  410ea3:	out    dx,eax
  410ea4:	aad    0x50
  410ea6:	leave  
  410ea7:	fild   DWORD PTR [ebp+0x51eab50d]
  410ead:	(bad)  
  410eaf:	(bad)  
  410eb0:	mov    es,WORD PTR [eax-0x65]
  410eb3:	and    eax,0x108e0ee9
  410eb8:	imul   eax
  410eba:	mov    esp,0xad26a8b0
  410ebf:	retf   
  410ec0:	cmp    BYTE PTR [edx-0x46f74ba0],ch
  410ec6:	xchg   edx,eax
  410ec7:	dec    esp
  410ec8:	(bad)  
  410ec9:	fist   DWORD PTR [esi+0x7b63252a]
  410ecf:	outs   dx,BYTE PTR ds:[esi]
  410ed0:	sub    al,0xe8
  410ed2:	lods   eax,DWORD PTR ds:[si]
  410ed4:	in     eax,dx
  410ed5:	scas   eax,DWORD PTR es:[edi]
  410ed6:	sub    ebx,ebx
  410ed8:	jo     0x410ec3
  410eda:	int    0x80
  410edc:	cmp    esi,DWORD PTR [edi]
  410ede:	adc    ah,BYTE PTR [eax+0x6d]
  410ee1:	sub    edi,esp
  410ee3:	dec    esi
  410ee4:	jg     0x410e74
  410ee6:	(bad)  
  410ee7:	sbb    esp,DWORD PTR [ecx-0x5b]
  410eea:	je     0x410e70
  410eec:	push   edi
  410eed:	scas   eax,DWORD PTR es:[edi]
  410eee:	pop    ecx
  410eef:	out    0x4d,eax
  410ef1:	fs inc esi
  410ef3:	std    
  410ef4:	xchg   edi,eax
  410ef5:	push   cs
  410ef6:	xor    bl,BYTE PTR [ecx-0x4de100af]
  410efc:	xchg   edi,eax
  410efd:	mov    ds:0x7b2cc24d,al
  410f02:	pop    edx
  410f03:	pop    ss
  410f04:	dec    edi
  410f05:	inc    edi
  410f06:	jb     0x410f32
  410f08:	call   0xce2:0x17366907
  410f0f:	retf   
  410f10:	adc    eax,0x78a487f6
  410f15:	leave  
  410f16:	std    
  410f17:	ffreep st(5)
  410f19:	inc    esi
  410f1a:	cmp    al,0x58
  410f1c:	dec    ecx
  410f1d:	add    DWORD PTR [edi+0x7d],esp
  410f20:	add    esp,DWORD PTR [ebx+0x54]
  410f23:	adc    esp,esi
  410f25:	push   ebx
  410f26:	call   0x8492:0x8846b0c6
  410f2d:	ins    BYTE PTR es:[edi],dx
  410f2e:	xor    DWORD PTR [ebx+0x17],edi
  410f31:	mov    al,0x6b
  410f33:	outs   dx,BYTE PTR ds:[esi]
  410f34:	repz out dx,eax
  410f36:	cli    
  410f37:	mov    al,0x25
  410f39:	enter  0x6fd3,0x83
  410f3d:	and    ebp,DWORD PTR [ebp+eiz*4-0xa1258b6]
  410f44:	or     BYTE PTR [ebx-0x19b3c38],dh
  410f4a:	into   
  410f4b:	dec    edi
  410f4c:	out    dx,al
  410f4d:	or     edi,DWORD PTR [edi+0xe]
  410f50:	dec    ebp
  410f51:	in     eax,0xe9
  410f53:	ins    DWORD PTR es:[edi],dx
  410f54:	in     eax,0x84
  410f56:	mov    cl,0xb0
  410f58:	jmp    0x62ac:0xb7fc4ff8
  410f5f:	test   DWORD PTR ds:0xadd15024,esi
  410f65:	cmp    al,0xd6
  410f67:	test   al,0x52
  410f69:	xchg   ebx,eax
  410f6a:	clc    
  410f6b:	js     0x410fd7
  410f6d:	or     DWORD PTR [ecx],0xffffffc4
  410f70:	mov    edi,0x1cc110fd
  410f75:	aad    0xc1
  410f77:	fwait
  410f78:	sub    ch,BYTE PTR [eax]
  410f7a:	push   ebp
  410f7b:	std    
  410f7c:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f7e:	(bad)  
  410f80:	nop
  410f81:	dec    eax
  410f82:	pop    eax
  410f83:	cmp    BYTE PTR [edi+edx*2-0x28],bl
  410f87:	fcom   QWORD PTR [ebp+0x2]
  410f8a:	mul    DWORD PTR [ebx+0x60]
  410f8d:	mov    ebp,0xe4556f1
  410f92:	sar    dh,0x5e
  410f95:	cli    
  410f96:	loop   0x410f9e
  410f98:	mov    bl,0x6d
  410f9a:	imul   edi,DWORD PTR [esi-0x22711441],0x7a
  410fa1:	dec    ecx
  410fa2:	jmp    0x410fd8
  410fa4:	loop   0x410fb6
  410fa6:	das    
  410fa7:	xor    eax,0x5f1ec685
  410fac:	lods   al,BYTE PTR ds:[esi]
  410fad:	mov    DWORD PTR [eax+0x7c],0x8dc82814
  410fb4:	xlat   BYTE PTR ds:[ebx]
  410fb5:	push   esp
  410fb6:	das    
  410fb7:	jo     0x410f7b
  410fb9:	push   esi
  410fba:	(bad)  
  410fbb:	fadd   QWORD PTR [edx+0x4eddae29]
  410fc1:	sbb    BYTE PTR [ecx-0x7a618d1],cl
  410fc7:	data16 jo 0x411032
  410fca:	push   edx
  410fcb:	pushf  
  410fcc:	jnp    0x410fef
  410fce:	cmp    eax,0xf5dd9aaf
  410fd3:	ror    BYTE PTR [edx],cl
  410fd5:	paddd  mm2,QWORD PTR [esi+0x574ee365]
  410fdc:	dec    ebx
  410fdd:	jecxz  0x411020
  410fdf:	bound  eax,QWORD PTR [ecx-0x4e]
  410fe2:	xchg   esp,eax
  410fe3:	dec    DWORD PTR [esi-0x40]
  410fe6:	rol    BYTE PTR ds:0xbe4735aa,0xf
  410fed:	xchg   DWORD PTR [ecx+ebx*4],ebx
  410ff0:	dec    edi
  410ff1:	out    0xe5,eax
  410ff3:	mov    esi,0xa95467c7
  410ff8:	pop    ecx
  410ff9:	pop    ecx
  410ffa:	in     al,dx
  410ffb:	or     DWORD PTR ds:0x11e4197e,0x53
  411002:	xor    ch,BYTE PTR es:[edx-0x2b]
  411006:	pop    es
  411007:	add    eax,0xbfc7d150
  41100c:	pop    eax
  41100d:	das    
  41100e:	call   0x828f:0xdd814bdd
  411015:	xor    al,0x14
  411017:	aaa    
  411018:	push   es
  411019:	adc    ebx,DWORD PTR [ebp+esi*4+0x622f8aef]
  411020:	mov    ds:0x45f5407d,al
  411025:	jle    0x411083
  411027:	mov    esp,0xae04534
  41102c:	dec    esp
  41102d:	mov    ah,0x24
  41102f:	jp     0x411066
  411031:	inc    ebp
  411032:	pop    esi
  411033:	les    edx,FWORD PTR [edi-0x5770eb83]
  411039:	loop   0x410fe0
  41103b:	or     DWORD PTR ds:0xc7b3944e,ebp
  411041:	fmul   st(5),st
  411043:	hlt    
  411044:	pushf  
  411045:	outs   dx,BYTE PTR ds:[esi]
  411046:	(bad)  
  411047:	aam    0x22
  411049:	in     eax,0xe1
  41104b:	xor    al,0x4f
  41104d:	pop    ss
  41104e:	push   cs
  41104f:	aad    0x23
  411051:	das    
  411052:	and    BYTE PTR [ecx+ebx*2],dh
  411055:	push   edx
  411056:	stos   BYTE PTR es:[edi],al
  411057:	js     0x410fe8
  411059:	int3   
  41105a:	adc    bh,al
  41105c:	sub    eax,0xf6d36dbf
  411061:	mov    ch,0xd0
  411063:	rcr    DWORD PTR [ebp-0x76],0xe4
  411067:	inc    ebx
  411068:	rcr    BYTE PTR [ecx],0x29
  41106b:	cmp    DWORD PTR [edx],eax
  41106d:	push   edi
  41106e:	loopne 0x4110c4
  411070:	mov    eax,ds:0x96e2f74c
  411075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411076:	jmp    0x41101e
  411078:	mov    dl,0x15
  41107a:	and    bh,BYTE PTR [ebx-0x1b]
  41107d:	sub    DWORD PTR [eax-0x2433df03],esi
  411083:	fisttp WORD PTR [edx+0x39d32f87]
  411089:	sbb    al,BYTE PTR [ecx+0x15]
  41108c:	pop    ecx
  41108d:	or     al,0xb0
  41108f:	adc    ah,bl
  411091:	adc    esp,DWORD PTR es:[eax-0x738bc56f]
  411098:	mov    bh,0x98
  41109a:	test   BYTE PTR [edx],ch
  41109c:	cwde   
  41109d:	ds mov cl,0x3e
  4110a0:	ds sti 
  4110a2:	clc    
  4110a3:	(bad)  
  4110a4:	pop    ss
  4110a5:	push   0xffffff92
  4110a7:	pop    edi
  4110a8:	xor    ebx,DWORD PTR [edi-0x3f]
  4110ab:	xchg   DWORD PTR [edi+0x1c3b19db],ebp
  4110b1:	je     0x411061
  4110b3:	jp     0x411035
  4110b5:	jae    0x41108c
  4110b7:	add    esp,0x22
  4110ba:	jmp    0x1cd18dda
  4110bf:	(bad)  
  4110c1:	scas   eax,DWORD PTR es:[edi]
  4110c2:	sahf   
  4110c3:	or     BYTE PTR [ecx-0x55783fab],al
  4110c9:	dec    esi
  4110ca:	dec    ebx
  4110cb:	inc    ebp
  4110cc:	pop    ss
  4110cd:	xor    al,0xf7
  4110cf:	rcl    BYTE PTR ds:0x546df50c,0xc9
  4110d6:	sbb    esi,edx
  4110d8:	sub    al,0xc2
  4110da:	lahf   
  4110db:	xchg   esi,eax
  4110dc:	xchg   ebp,eax
  4110dd:	xor    edx,DWORD PTR [eax+0x41f8a360]
  4110e3:	mov    eax,ds:0x50c2e535
  4110e8:	mov    ebx,0xfcb309e
  4110ed:	stc    
  4110ee:	mov    ah,0x7e
  4110f0:	test   al,0x15
  4110f2:	pop    ds
  4110f3:	and    al,ah
  4110f5:	(bad)  
  4110f6:	and    cl,dl
  4110f8:	and    al,0xc1
  4110fa:	cmp    dl,dl
  4110fc:	sbb    BYTE PTR [eax-0x4003614a],dl
  411102:	aaa    
  411103:	xor    DWORD PTR [ebx+edx*8],ebp
  411106:	daa    
  411107:	adc    eax,0xf731ca49
  41110c:	cli    
  41110d:	loope  0x4110eb
  41110f:	aaa    
  411110:	leavew 
  411112:	(bad)  
  411113:	fist   DWORD PTR [edx+0x472cde60]
  411119:	mov    eax,0x23e73b07
  41111e:	int3   
  41111f:	or     al,0x48
  411121:	ds dec eax
  411123:	mov    eax,ds:0x751a2bbc
  411128:	mov    bl,0x17
  41112a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41112b:	call   0xacf2020a
  411130:	iret   
  411131:	push   edi
  411132:	mov    BYTE PTR [edx],cl
  411134:	ret    0x5422
  411137:	xchg   esp,eax
  411138:	cmp    cl,bh
  41113a:	neg    BYTE PTR [edx-0x74]
  41113d:	mov    al,0x9b
  41113f:	mov    ?,WORD PTR [esp+eax*4]
  411142:	dec    esi
  411143:	add    ecx,ebx
  411145:	sub    al,0xdd
  411147:	jp     0x41110b
  411149:	jp     0x4111ad
  41114b:	into   
  41114c:	sub    ebx,DWORD PTR [edx]
  41114e:	or     al,0x25
  411150:	mov    gs,WORD PTR [ebx]
  411152:	sub    eax,0xbc182490
  411157:	adc    al,0xff
  411159:	xchg   edi,eax
  41115a:	into   
  41115b:	test   al,0x1
  41115d:	jno    0x4110ef
  41115f:	xor    dl,BYTE PTR [esi-0xfbcf234]
  411165:	addr16 repz enter 0xeb67,0x9b
  41116b:	pop    ebx
  41116c:	dec    esp
  41116d:	mov    ds:0x34c8fb93,eax
  411172:	scas   eax,DWORD PTR es:[edi]
  411173:	push   ebp
  411174:	enter  0xff64,0x6b
  411178:	xchg   ebp,eax
  411179:	xchg   ebx,eax
  41117a:	sub    edx,eax
  41117c:	xchg   ebp,eax
  41117d:	or     eax,0xf3659351
  411182:	(bad)  [ebp-0x7ac30b6d]
  411188:	xor    DWORD PTR [ecx],0xc5d665e6
  41118e:	mov    bh,0x6f
  411190:	adc    edi,DWORD PTR [ecx-0x38]
  411193:	dec    esp
  411194:	pop    eax
  411195:	call   0x347d:0xb6826c9e
  41119c:	mov    bh,0xb2
  41119e:	add    edi,DWORD PTR [ecx+0x31]
  4111a1:	ins    DWORD PTR es:[edi],dx
  4111a2:	mov    ebp,0x1a93749b
  4111a7:	stc    
  4111a8:	adc    DWORD PTR [edi+0x3feef060],0xfffffff5
  4111af:	push   ss
  4111b0:	hlt    
  4111b1:	push   ss
  4111b2:	inc    ebx
  4111b3:	mov    ah,0x19
  4111b5:	enter  0xb8c,0x38
  4111b9:	mov    bh,0x22
  4111bb:	js     0x41114b
  4111bd:	mov    dl,0xc5
  4111bf:	popf   
  4111c0:	mul    BYTE PTR [eax]
  4111c2:	js     0x41119a
  4111c4:	call   0x9517de50
  4111c9:	ret    
  4111ca:	dec    ecx
  4111cb:	jge    0x41121c
  4111cd:	cmc    
  4111ce:	cmp    cl,dl
  4111d0:	bound  edx,QWORD PTR [edx-0x459ddab3]
  4111d6:	gs inc ebp
  4111d8:	jae    0x411171
  4111da:	nop
  4111db:	call   0xd091:0x32f6da3d
  4111e2:	jmp    FWORD PTR [ebp-0x4e2a7c4c]
  4111e8:	add    DWORD PTR [edx+ecx*4-0x35820d0c],0xf8fecffa
  4111f3:	jns    0x411210
  4111f5:	pop    esp
  4111f6:	add    eax,0xbf2edb8e
  4111fb:	cmp    al,0x11
  4111fd:	xchg   ecx,eax
  4111fe:	inc    ebp
  4111ff:	arpl   WORD PTR [edi+edx*1],si
  411202:	inc    esp
  411203:	mov    ecx,DWORD PTR [esi-0xb]
  411206:	add    ch,BYTE PTR [ecx-0x70a9a8ba]
  41120c:	cld    
  41120d:	mov    di,0xa39
  411211:	pop    eax
  411212:	or     ecx,DWORD PTR [edi]
  411214:	push   ds
  411215:	(bad)  
  411216:	jmp    0x6a3:0x4dbef7f2
  41121d:	fld    TBYTE PTR [eax-0x2c]
  411220:	stos   BYTE PTR es:[edi],al
  411221:	xor    al,BYTE PTR [esi-0x3e]
  411224:	ins    BYTE PTR es:[edi],dx
  411225:	push   ebp
  411226:	ror    BYTE PTR [edx],1
  411228:	test   DWORD PTR ds:0x8b3433c8,edi
  41122e:	jno    0x411281
  411230:	jbe    0x411231
  411232:	push   cs
  411233:	or     eax,0x4af13cbe
  411238:	sub    DWORD PTR [esi-0x2c393874],eax
  41123e:	sti    
  41123f:	lods   eax,DWORD PTR ds:[esi]
  411240:	or     al,0x76
  411242:	jo     0x4111d1
  411244:	ss sub eax,0x7de83b6c
  41124a:	add    ecx,DWORD PTR [esi]
  41124c:	aam    0x44
  41124e:	mov    BYTE PTR [esi-0x2a],ch
  411251:	repnz add dh,BYTE PTR [esi-0x4fc2673f]
  411258:	outs   dx,BYTE PTR ds:[esi]
  411259:	mov    bh,0xf8
  41125b:	or     BYTE PTR [eax+0x44404dae],ch
  411261:	dec    ebp
  411262:	loopne 0x4112ad
  411264:	lds    eax,FWORD PTR [ebp+0x17]
  411267:	sub    al,0xcd
  411269:	stos   BYTE PTR es:[edi],al
  41126a:	adc    eax,0xe94006de
  41126f:	mov    ecx,0x7112adf0
  411274:	nop
  411275:	adc    bl,BYTE PTR [ecx-0x786a7a67]
  41127b:	xor    ch,BYTE PTR [edi]
  41127d:	test   DWORD PTR [eax+0x7aa425f0],ecx
  411283:	out    dx,al
  411284:	adc    BYTE PTR [ecx+0x1f455d09],0x54
  41128b:	fidiv  DWORD PTR [ecx+0x2d]
  41128e:	add    BYTE PTR [ebx+0x1f],al
  411291:	ret    0x667f
  411294:	pop    edi
  411295:	dec    eax
  411296:	inc    eax
  411297:	in     eax,dx
  411298:	add    ah,0x9f
  41129b:	cmp    al,0x6c
  41129d:	mov    ebx,0x82575d60
  4112a2:	mov    cl,0x22
  4112a4:	or     bl,BYTE PTR [edx-0x27]
  4112a7:	stos   DWORD PTR es:[edi],eax
  4112a8:	lods   al,BYTE PTR ds:[esi]
  4112a9:	pop    eax
  4112aa:	popf   
  4112ab:	popf   
  4112ac:	test   al,0xb4
  4112ae:	mov    ah,0xa5
  4112b0:	mov    edi,0x1082b67
  4112b5:	test   eax,ecx
  4112b7:	in     al,dx
  4112b8:	push   cs
  4112b9:	aaa    
  4112ba:	dec    esi
  4112bb:	add    esi,ebp
  4112bd:	data16 stc 
  4112bf:	ret    0xf06d
  4112c2:	mov    esp,0xf9fd6eb3
  4112c7:	cmp    BYTE PTR [ecx+0xf55c800],0x4d
  4112ce:	sbb    bh,ah
  4112d0:	or     eax,0x36003327
  4112d5:	pop    ebp
  4112d6:	add    ecx,DWORD PTR [ecx]
  4112d8:	mov    edi,0xee3847e
  4112dd:	rcl    BYTE PTR [ebx+0x73ea88ed],cl
  4112e3:	(bad)
  4112e7:	cmp    eax,edx
  4112e9:	push   esp
  4112ea:	inc    ecx
  4112eb:	nop
  4112ec:	(bad)  
  4112ed:	pop    esp
  4112ee:	add    ecx,eax
  4112f0:	cmp    al,0x16
  4112f2:	sbb    BYTE PTR [edi-0x40],al
  4112f5:	mov    cl,0x51
  4112f7:	pusha  
  4112f8:	push   esi
  4112f9:	jecxz  0x4112e3
  4112fb:	and    BYTE PTR ss:[edx+0x64],dl
  4112ff:	pop    ebx
  411300:	adc    eax,0x4613ad6c
  411305:	mov    ch,0x12
  411307:	add    DWORD PTR [edx],0x22
  41130a:	in     eax,0xce
  41130c:	mov    dh,0xf5
  41130e:	push   es
  41130f:	out    dx,eax
  411310:	add    ebp,esp
  411312:	xor    al,0x66
  411314:	dec    ebx
  411315:	push   eax
  411316:	mov    ecx,0xc3d85301
  41131b:	enter  0x4975,0xbb
  41131f:	ins    DWORD PTR es:[edi],dx
  411320:	frstor [edi]
  411322:	enter  0x5977,0x79
  411326:	mov    cl,0x7d
  411328:	cmp    eax,0xac04634d
  41132d:	loopne 0x411381
  41132f:	je     0x411393
  411331:	je     0x41131d
  411333:	jl     0x41133b
  411335:	shl    DWORD PTR [edx-0x310c07e3],0x6c
  41133c:	pop    esp
  41133d:	sbb    BYTE PTR [ebx],bl
  41133f:	push   0x11
  411341:	rcl    BYTE PTR [edi+0x69],1
  411344:	dec    esp
  411345:	jmp    0x9bab:0x6ce24dae
  41134c:	or     BYTE PTR [esi],dl
  41134e:	mov    dl,0x1c
  411350:	or     BYTE PTR [edi+0x14],ch
  411353:	std    
  411354:	and    eax,0x69be70cd
  411359:	mov    ebp,0x1427c8f1
  41135e:	mov    al,ds:0x53dacf10
  411363:	(bad)  
  411364:	and    DWORD PTR [edx],edx
  411366:	frstor [esp+edx*8+0x63]
  41136a:	xchg   BYTE PTR [edx-0x13cd7c0b],bh
  411370:	dec    ebx
  411371:	std    
  411372:	lods   eax,DWORD PTR ds:[esi]
  411373:	adc    DWORD PTR [eax-0x482416f2],edx
  411379:	clc    
  41137a:	js     0x41135b
  41137c:	clc    
  41137d:	out    0x2d,eax
  41137f:	out    dx,eax
  411380:	mov    es,WORD PTR [edi-0x30]
  411383:	ret    0x8e58
  411386:	xor    DWORD PTR [esi+0x46],edx
  411389:	imul   edi,edx,0xffffffad
  41138c:	add    ecx,DWORD PTR [edx+edx*4]
  41138f:	sahf   
  411390:	leave  
  411391:	mov    ebp,0x1bc8fec1
  411396:	idiv   esp
  411398:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41139a:	sub    eax,0xba84744e
  41139f:	push   ecx
  4113a0:	cmp    dh,BYTE PTR [ebx+esi*2]
  4113a3:	frstor [ebp-0x1bd19553]
  4113a9:	mov    cl,bh
  4113ab:	xor    BYTE PTR [ebp+0x55ef06a2],dl
  4113b1:	sti    
  4113b2:	or     BYTE PTR [ecx+0x40ce40a4],al
  4113b8:	les    esp,FWORD PTR [ebp-0x9]
  4113bb:	dec    eax
  4113bc:	cdq    
  4113bd:	pop    ebx
  4113be:	sbb    DWORD PTR ds:0x8c16b5d6,0x5f
  4113c5:	popa   
  4113c6:	je     0x4113d2
  4113c8:	retf   
  4113c9:	dec    ebp
  4113ca:	add    ebx,DWORD PTR [edx+0x4d558aac]
  4113d0:	imul   ebx,DWORD PTR [eax+0x1e],0xffffffef
  4113d4:	push   edi
  4113d5:	mov    DWORD PTR [edx],eax
  4113d7:	(bad)  
  4113d8:	mov    edx,0x792a275a
  4113dd:	mov    bl,0x5
  4113df:	jns    0x41136b
  4113e1:	(bad)  
  4113e2:	rcr    BYTE PTR [esi-0xacd6703],1
  4113e8:	retf   
  4113e9:	in     eax,dx
  4113ea:	and    BYTE PTR [ecx],cl
  4113ec:	jb     0x4113b3
  4113ee:	cwde   
  4113ef:	sbb    DWORD PTR [eax+0x28df8663],ebx
  4113f5:	xlat   BYTE PTR ds:[ebx]
  4113f6:	out    dx,eax
  4113f7:	jae    0x41141f
  4113f9:	out    0xf9,al
  4113fb:	mov    al,0x64
  4113fd:	leave  
  4113fe:	pop    edx
  4113ff:	rcl    ah,1
  411401:	ss cld 
  411403:	fwait
  411404:	out    dx,eax
  411405:	cmp    esi,DWORD PTR ds:0x3ed5dc1e
  41140b:	xlat   BYTE PTR ds:[ebx]
  41140c:	mov    eax,0x8ce4a9e4
  411411:	mov    edi,0x3bfe23a1
  411416:	aas    
  411417:	stos   BYTE PTR es:[edi],al
  411418:	cld    
  411419:	stos   DWORD PTR es:[edi],eax
  41141a:	mov    ebx,0x2d459ce
  41141f:	out    0x13,al
  411421:	dec    ecx
  411422:	push   cs
  411423:	xor    ah,BYTE PTR [ebx]
  411425:	in     al,0xe0
  411427:	and    ch,0x43
  41142a:	pop    edx
  41142b:	loopne 0x411405
  41142d:	push   ebx
  41142e:	es int 0x25
  411431:	push   0x5ec5538c
  411436:	xchg   edi,eax
  411437:	lds    edx,FWORD PTR [ebx+0x64]
  41143a:	mov    edi,ebp
  41143c:	in     al,0x22
  41143e:	and    al,0x8
  411440:	mov    WORD PTR [edx-0xe27c427],ds
  411446:	(bad)  
  411447:	fwait
  411448:	dec    edx
  411449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41144a:	add    eax,0x4203c524
  41144f:	mov    cl,BYTE PTR [esi]
  411451:	mov    eax,ds:0xb3f4c793
  411456:	adc    al,0x43
  411458:	push   cs
  411459:	mov    eax,ds:0x1b11dceb
  41145e:	xchg   BYTE PTR [eax],bl
  411460:	pop    ecx
  411461:	bnd ja 0x411445
  411464:	(bad)  
  411466:	mov    ecx,0x8cb2ce94
  41146b:	(bad)  [ebp-0x5e42eba2]
  411471:	mov    esi,0x86bd84b5
  411476:	mov    ch,0x51
  411478:	sub    ebx,edx
  41147a:	push   esp
  41147b:	dec    ecx
  41147c:	fdiv   DWORD PTR [edx-0x622dcc78]
  411482:	aaa    
  411483:	test   BYTE PTR [edi*8-0x2d8dbb5a],bl
  41148a:	ror    BYTE PTR [esi+0x74],cl
  41148d:	push   ecx
  41148e:	add    eax,DWORD PTR [ebp-0x4]
  411491:	aas    
  411492:	dec    DWORD PTR [ebp+0x52]
  411495:	cli    
  411496:	hlt    
  411497:	and    al,0xc0
  411499:	das    
  41149a:	xor    bl,BYTE PTR [esi+0x63]
  41149d:	xchg   ebx,eax
  41149e:	mov    eax,edi
  4114a0:	mov    dh,0x60
  4114a2:	or     al,0x67
  4114a5:	pop    ss
  4114a6:	aaa    
  4114a7:	and    BYTE PTR [esi-0x1],cl
  4114aa:	das    
  4114ab:	es xchg ebx,eax
  4114ad:	xchg   edi,eax
  4114ae:	cs ds dec esp
  4114b1:	ja     0x4114bd
  4114b3:	mov    WORD PTR [ebx-0x37],?
  4114b6:	jl     0x411458
  4114b8:	xlat   BYTE PTR ds:[ebx]
  4114b9:	ins    DWORD PTR es:[edi],dx
  4114ba:	cli    
  4114bb:	sbb    ebx,eax
  4114bd:	bnd jge 0x4114ff
  4114c0:	mov    ds:0x58d65a25,al
  4114c5:	sbb    eax,0xce31045b
  4114ca:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4114cc:	ins    DWORD PTR es:[edi],dx
  4114cd:	add    al,BYTE PTR [esp+ebp*4-0x298a68f8]
  4114d4:	mov    ebp,0x5eb065e9
  4114d9:	sub    al,0x4f
  4114db:	xchg   esp,eax
  4114dc:	mov    edi,0x22f35f7d
  4114e1:	push   edi
  4114e2:	inc    ebp
  4114e3:	cmp    al,0x52
  4114e5:	ds stos DWORD PTR es:[edi],eax
  4114e7:	(bad)  
  4114e8:	addr16 leave 
  4114ea:	sbb    al,0x5b
  4114ec:	imul   eax,ebp,0x1e4d6514
  4114f2:	scas   eax,DWORD PTR es:[edi]
  4114f3:	(bad)  
  4114f4:	mov    dl,0x22
  4114f6:	push   es
  4114f7:	dec    ebp
  4114f8:	js     0x411499
  4114fa:	out    dx,eax
  4114fb:	shr    DWORD PTR [ecx+0xd],0xf1
  4114ff:	shl    eax,cl
  411501:	rcl    BYTE PTR [esi+0x3a],1
  411504:	call   0xcb59:0xdf3dd543
  41150b:	jle    0x411537
  41150d:	pop    edi
  41150e:	pop    ecx
  41150f:	aad    0x80
  411511:	pop    edi
  411512:	clc    
  411513:	xor    al,0x9b
  411515:	iret   
  411516:	ds pushf 
  411518:	sub    DWORD PTR [edi-0x42],0x74d6116b
  41151f:	jns    0x41153a
  411521:	inc    ebp
  411522:	dec    edx
  411523:	and    ebp,ebp
  411525:	jl     0x4115a6
  411527:	dec    edx
  411528:	int3   
  411529:	mov    ah,0x54
  41152b:	adc    esi,eax
  41152d:	adc    DWORD PTR [esi],ecx
  41152f:	mov    esp,0x5ba7009a
  411534:	push   cs
  411535:	xor    al,0x0
  411537:	lea    ebp,[esp+eiz*4+0x67]
  41153b:	inc    esp
  41153c:	nop
  41153d:	sub    cl,BYTE PTR [edx+ecx*2+0xe]
  411541:	mov    ds:0x1174b4a0,eax
  411546:	mov    es,WORD PTR [edx+0x782c9751]
  41154c:	iret   
  41154d:	sahf   
  41154e:	icebp  
  41154f:	cmc    
  411550:	ins    DWORD PTR es:[edi],dx
  411551:	xchg   BYTE PTR [edi+0x40251b9f],cl
  411557:	bound  eax,QWORD PTR [ebx]
  411559:	rcl    BYTE PTR [edi],0x93
  41155c:	lock sub DWORD PTR [edi],ecx
  41155f:	int3   
  411560:	(bad)  
  411561:	xchg   ebp,eax
  411562:	cmc    
  411563:	jno    0x41154c
  411565:	xor    bh,BYTE PTR [ebx+ebx*2-0x26591f8d]
  41156c:	cwde   
  41156d:	ja     0x411587
  41156f:	out    0x86,al
  411571:	cmp    eax,0x584c2043
  411576:	loopne 0x411598
  411578:	in     al,dx
  411579:	mov    eax,0x9dcd5c2d
  41157e:	lods   al,BYTE PTR ds:[esi]
  41157f:	mov    ch,0x6b
  411581:	test   BYTE PTR [esi-0x4f],ah
  411584:	cwde   
  411585:	jg     0x4115ff
  411587:	mov    bl,0xa9
  411589:	cld    
  41158a:	pop    ebx
  41158b:	and    bh,BYTE PTR [ecx-0xac31240]
  411591:	js     0x41156a
  411593:	xchg   edi,eax
  411594:	int3   
  411595:	xchg   edx,eax
  411596:	shl    cl,1
  411598:	loope  0x411559
  41159a:	cmp    edx,ebp
  41159c:	(bad)  
  41159d:	xlat   BYTE PTR ds:[ebx]
  41159e:	sub    ch,BYTE PTR [ecx-0x22748314]
  4115a4:	jmp    0xd53f7c69
  4115a9:	cld    
  4115aa:	daa    
  4115ab:	in     eax,0x56
  4115ad:	gs fxch st(3)
  4115b0:	lahf   
  4115b1:	es repz enter 0x1f10,0xa2
  4115b7:	pop    ecx
  4115b8:	fdiv   DWORD PTR [esi+0x68]
  4115bb:	loope  0x41160f
  4115bd:	(bad)  
  4115be:	ret    0x58da
  4115c1:	inc    ebp
  4115c2:	push   cs
  4115c3:	pop    edx
  4115c4:	push   esp
  4115c5:	inc    esi
  4115c6:	cmp    BYTE PTR [ebx+ecx*1+0x7],dl
  4115ca:	or     dh,0x4c
  4115cd:	into   
  4115ce:	ins    BYTE PTR es:[edi],dx
  4115cf:	jnp    0x4115cc
  4115d1:	in     al,0x47
  4115d3:	into   
  4115d4:	dec    esi
  4115d5:	lods   eax,DWORD PTR ds:[esi]
  4115d6:	jno    0x41162d
  4115d8:	lahf   
  4115d9:	add    cl,al
  4115db:	pop    edi
  4115dc:	xlat   BYTE PTR ds:[ebx]
  4115dd:	mov    ebx,0xfd105c0f
  4115e2:	cmp    al,0xa7
  4115e4:	push   ebx
  4115e5:	xor    BYTE PTR [ebx+0x34],dh
  4115e8:	cwde   
  4115e9:	push   0x7f
  4115eb:	or     esi,DWORD PTR [ebp-0x6c867d74]
  4115f1:	test   eax,0x7f1f6b9c
  4115f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115f7:	cmp    dh,BYTE PTR [ebx+ebp*2]
  4115fa:	adc    dh,BYTE PTR [edi+0x4e49e6d4]
  411600:	and    ah,BYTE PTR [ecx-0x4a5cd368]
  411606:	mov    al,ds:0x162415ac
  41160b:	pusha  
  41160c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41160d:	lds    ebx,FWORD PTR [ebx+0x6a]
  411610:	pop    eax
  411611:	clc    
  411612:	sub    eax,0x379105b4
  411617:	xchg   esp,eax
  411618:	stc    
  411619:	rol    DWORD PTR [esi+0x61],cl
  41161c:	(bad)  
  41161d:	into   
  41161e:	push   esi
  41161f:	jp     0x4115ec
  411621:	jno    0x41165d
  411623:	or     eax,0xa9e565d7
  411628:	addr16 std 
  41162a:	mov    al,ds:0xa5b8a8a9
  41162f:	clc    
  411630:	fsub   DWORD PTR [edx]
  411632:	mov    ch,0x47
  411634:	scas   eax,DWORD PTR es:[edi]
  411635:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  411637:	push   edx
  411638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411639:	ja     0x4115fe
  41163b:	mov    ah,0xa5
  41163d:	xchg   esi,eax
  41163e:	hlt    
  41163f:	fisubr WORD PTR [ebx]
  411641:	pushf  
  411642:	pop    esi
  411643:	and    al,0x61
  411645:	imul   edx,DWORD PTR [esi+0x6d39cbde],0xdf8357b1
  41164f:	int3   
  411650:	jge    0x411675
  411652:	pop    esi
  411653:	xchg   edx,eax
  411654:	and    BYTE PTR [esi],dh
  411656:	fisub  WORD PTR [eax-0x22]
  411659:	sbb    dl,ah
  41165b:	lock clc 
  41165d:	das    
  41165e:	arpl   WORD PTR ds:0xd4919441,di
  411664:	mov    eax,ds:0x7b104422
  411669:	lods   eax,DWORD PTR ds:[esi]
  41166a:	or     edx,DWORD PTR [esi+0x2e62bba1]
  411670:	imul   ebp,DWORD PTR [esi+0x6d],0x1ea2657d
  411677:	addr16 std 
  411679:	or     al,0xf4
  41167b:	fcmovnu st,st(3)
  41167d:	ret    0xce3f
  411680:	imul   esp,DWORD PTR [ebp-0x29659262],0xffffff87
  411687:	xor    eax,0xef9087df
  41168c:	or     BYTE PTR [eax],dl
  41168e:	jl     0x4116d8
  411690:	dec    ebp
  411691:	not    BYTE PTR [esi+0x79]
  411694:	out    0x4c,al
  411696:	in     eax,dx
  411697:	lock push ss
  411699:	xchg   edx,eax
  41169a:	adc    al,0x29
  41169c:	xchg   edi,eax
  41169d:	stos   BYTE PTR es:[edi],al
  41169e:	inc    esi
  41169f:	ss add al,0x94
  4116a2:	sub    BYTE PTR [ecx+ebp*8+0x6f3e216b],dh
  4116a9:	(bad)  
  4116aa:	cld    
  4116ab:	jb     0x4116f0
  4116ad:	mov    es,WORD PTR [edi+eiz*1]
  4116b0:	bound  ebp,QWORD PTR [edx-0x45]
  4116b3:	scas   eax,DWORD PTR es:[edi]
  4116b4:	fwait
  4116b5:	test   al,0x5a
  4116b7:	sub    esi,DWORD PTR [edi-0x1d357f34]
  4116bd:	mov    dh,0xef
  4116bf:	cmp    eax,0x6c69774
  4116c4:	adc    ch,BYTE PTR [esp+edx*1-0x47ce75f5]
  4116cb:	std    
  4116cc:	sahf   
  4116cd:	push   ecx
  4116ce:	xchg   ecx,eax
  4116cf:	lea    eax,[ecx-0x285fad40]
  4116d5:	jp     0x411750
  4116d7:	or     al,0xb6
  4116d9:	xchg   esp,eax
  4116da:	lods   al,BYTE PTR ds:[esi]
  4116db:	add    al,0x94
  4116dd:	mov    DWORD PTR [ecx+ebp*8+0x4a835ef7],eax
  4116e4:	bound  edi,QWORD PTR [ebx+ecx*2-0x67]
  4116e8:	jmp    0xa49b:0x2a297f0d
  4116ef:	sbb    eax,0x64f55c3b
  4116f4:	sub    al,0x89
  4116f6:	add    al,0xba
  4116f8:	hlt    
  4116f9:	mov    al,BYTE PTR [ecx+0x3a]
  4116fc:	sbb    ch,cl
  4116fe:	(bad)  
  4116ff:	and    DWORD PTR ds:0x166b2cb5,ecx
  411705:	fs clc 
  411707:	das    
  411708:	sbb    eax,0x7eb85877
  41170d:	and    BYTE PTR [esi],dl
  41170f:	jmp    0x73e2:0xce17f4b6
  411716:	stc    
  411717:	ficom  WORD PTR [ecx-0x23dc68d6]
  41171d:	scas   eax,DWORD PTR es:[edi]
  41171e:	mov    dh,0x31
  411720:	add    BYTE PTR [eax],bh
  411722:	pop    ss
  411723:	imul   ecx
  411725:	push   esi
  411726:	test   eax,0xdf2efd7f
  41172b:	pop    edx
  41172c:	xchg   ecx,eax
  41172d:	mov    BYTE PTR [ecx-0x51542d66],cl
  411733:	imul   ebx,DWORD PTR [edx],0x34
  411736:	xor    BYTE PTR [ebx+ebx*2],al
  411739:	inc    esp
  41173a:	cmp    eax,DWORD PTR [edi+0x58367341]
  411740:	js     0x41170f
  411742:	lods   al,BYTE PTR ds:[esi]
  411743:	push   0xffffffa2
  411745:	mul    al
  411747:	sbb    DWORD PTR [ecx+0x667fd52e],0x477a14f3
  411751:	sbb    al,bl
  411753:	jo     0x411706
  411755:	inc    esi
  411756:	xlat   BYTE PTR ds:[ebx]
  411757:	scas   al,BYTE PTR es:[edi]
  411758:	lock (bad) 
  41175a:	dec    BYTE PTR [ecx+eax*2]
  41175d:	cmp    eax,0x3aa25cb5
  411762:	mov    esi,0x81c4615a
  411767:	cmp    ebx,DWORD PTR [ecx-0x67]
  41176a:	int    0x8f
  41176c:	mov    bl,0x6b
  41176e:	mov    esi,0x90069912
  411773:	sub    ebp,DWORD PTR [esi-0x145cffb0]
  411779:	jns    0x4117e6
  41177b:	loope  0x4117e3
  41177d:	ins    DWORD PTR es:[edi],dx
  41177e:	sub    al,0xc1
  411780:	jae    0x411773
  411782:	sar    DWORD PTR [edx],cl
  411784:	mov    ch,0xcc
  411786:	mov    DWORD PTR [edx-0x8],edx
  411789:	add    dh,ah
  41178b:	jl     0x4117d1
  41178d:	dec    ebx
  41178e:	out    dx,eax
  41178f:	jl     0x411800
  411791:	jae    0x41172c
  411793:	jl     0x41177c
  411795:	fidiv  WORD PTR [ebx-0x920503f]
  41179b:	xor    dl,dh
  41179d:	inc    ebx
  41179e:	cmp    DWORD PTR [ebp-0xd],ebp
  4117a1:	imul   edx,DWORD PTR [esi+0x66],0xa6745fcf
  4117a8:	pop    eax
  4117a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117aa:	daa    
  4117ab:	cmp    al,0x5c
  4117ad:	xor    dl,bh
  4117af:	retf   0x9970
  4117b2:	ss mov dh,0xa6
  4117b5:	stc    
  4117b6:	(bad)  
  4117b7:	out    dx,eax
  4117b8:	mov    dh,0x2d
  4117ba:	or     DWORD PTR [ecx],ecx
  4117bc:	les    ecx,FWORD PTR [ecx+0x2b]
  4117bf:	out    dx,eax
  4117c0:	dec    edx
  4117c1:	loope  0x4117c0
  4117c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117c4:	dec    BYTE PTR [ebx+0x63da1dcb]
  4117ca:	scas   eax,DWORD PTR es:[edi]
  4117cb:	mov    eax,0xa26ef9b
  4117d0:	pop    ebx
  4117d1:	add    al,0xd7
  4117d3:	jae    0x41184c
  4117d5:	imul   eax,esp,0xb3277b82
  4117db:	push   ss
  4117dc:	data16 int3 
  4117de:	mov    ecx,db0
  4117e1:	or     bh,BYTE PTR [ecx+edx*1+0x470377c2]
  4117e8:	mov    dl,0xd7
  4117ea:	pushf  
  4117eb:	mov    ebx,0xbcfb8236
  4117f0:	stc    
  4117f1:	xchg   DWORD PTR [ecx],ebx
  4117f3:	jecxz  0x411799
  4117f5:	pop    ecx
  4117f6:	jle    0x411829
  4117f8:	pop    esp
  4117f9:	xchg   DWORD PTR [ebp-0x29],edx
  4117fc:	call   0xb61f:0xc772f061
  411803:	rol    BYTE PTR ds:0x366e425e,0xdd
  41180a:	xchg   esi,eax
  41180b:	pop    es
  41180c:	scas   al,BYTE PTR es:[edi]
  41180d:	mov    eax,ds:0xf64d4e69
  411812:	sub    al,0x6e
  411814:	xor    dl,BYTE PTR [ecx+edx*1-0x5]
  411818:	dec    edx
  411819:	das    
  41181a:	adc    al,0xbd
  41181c:	and    al,0x6c
  41181e:	xchg   edi,eax
  41181f:	xor    BYTE PTR [esi+0x3],dh
  411822:	xchg   ecx,eax
  411823:	lea    ebp,[di-0x5e]
  411827:	out    0x20,al
  411829:	retf   0x6355
  41182c:	(bad)  
  41182d:	pop    ss
  41182e:	lods   al,BYTE PTR ds:[esi]
  41182f:	push   esi
  411830:	pop    ebx
  411831:	in     al,dx
  411832:	mov    dh,0x68
  411834:	xchg   ecx,eax
  411835:	lahf   
  411836:	popf   
  411837:	arpl   WORD PTR [esi],si
  411839:	jbe    0x4117de
  41183b:	sbb    eax,0x903d1ef0
  411840:	mov    esp,0xb325af3b
  411845:	out    0x2d,eax
  411847:	sbb    DWORD PTR [ecx],esi
  411849:	xchg   edx,eax
  41184a:	cmp    al,0x1e
  41184c:	xor    DWORD PTR [esi],edx
  41184e:	mov    edx,0xae65e447
  411853:	lahf   
  411854:	mov    dh,0xcd
  411856:	push   ss
  411857:	test   al,0x18
  411859:	xor    ebp,DWORD PTR [edi]
  41185b:	push   ebx
  41185c:	rol    BYTE PTR [ebx],cl
  41185e:	je     0x411824
  411860:	int    0x86
  411862:	pushf  
  411863:	mov    ebx,0xede15d61
  411868:	pop    edi
  411869:	sbb    DWORD PTR [edx-0x47e64e82],0xffffffb0
  411870:	pop    ss
  411871:	xlat   BYTE PTR ds:[ebx]
  411872:	mov    WORD PTR [edi+0x18a30c98],es
  411878:	or     eax,0x30bc4e88
  41187d:	jo     0x4118a9
  41187f:	retf   0xc18a
  411882:	jge    0x4118e2
  411884:	jle    0x4118b0
  411886:	mov    bl,0x8
  411888:	and    DWORD PTR [eax*4-0x5defccfa],esi
  41188f:	inc    eax
  411890:	mov    ds:0xb50a34d5,eax
  411895:	cwde   
  411896:	and    BYTE PTR [eax-0x73],dh
  411899:	jbe    0x411845
  41189b:	into   
  41189c:	jmp    DWORD PTR [ebx+edx*1+0x56]
  4118a0:	push   0xffffffe8
  4118a2:	inc    eax
  4118a3:	jg     0x4118b4
  4118a5:	mov    ebx,0x8d90a2d2
  4118aa:	outs   dx,DWORD PTR ds:[esi]
  4118ab:	mov    BYTE PTR [esi-0x4b],dl
  4118ae:	ja     0x41189b
  4118b0:	sbb    ch,BYTE PTR [esi+ecx*1+0x16]
  4118b4:	mov    WORD PTR [ebp-0x58231dc8],ss
  4118ba:	sub    BYTE PTR [ebx],bh
  4118bc:	adc    DWORD PTR [ebp+0x68dbc024],ecx
  4118c2:	push   edx
  4118c3:	data16 jle 0x411904
  4118c6:	loop   0x411854
  4118c8:	adc    al,0xa3
  4118ca:	or     al,BYTE PTR [ecx]
  4118cc:	adc    eax,eax
  4118ce:	pop    ss
  4118cf:	push   ds
  4118d0:	repnz add al,0x2c
  4118d3:	ins    DWORD PTR es:[edi],dx
  4118d4:	call   0x2ef5:0xff9fc22f
  4118db:	and    al,0x6a
  4118dd:	xchg   BYTE PTR [esi-0x279aeed],dh
  4118e3:	leave  
  4118e4:	lahf   
  4118e5:	pop    ebp
  4118e6:	cli    
  4118e7:	shr    ecx,0x8a
  4118ea:	stos   BYTE PTR es:[edi],al
  4118eb:	jmp    0x4118e7
  4118ed:	xlat   BYTE PTR ds:[ebx]
  4118ee:	fs pop ecx
  4118f0:	mov    al,ch
  4118f2:	push   esi
  4118f3:	pushf  
  4118f4:	inc    ecx
  4118f5:	adc    cl,bl
  4118f7:	dec    edi
  4118f8:	rol    BYTE PTR [ecx-0x71],1
  4118fb:	jns    0x4118d6
  4118fd:	test   BYTE PTR [ebx],0xeb
  411900:	mov    cl,0xd4
  411902:	dec    edi
  411903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411904:	xchg   DWORD PTR [eax+edx*2],edx
  411907:	(bad)  
  411908:	sbb    al,0xe1
  41190a:	jmp    0x9931:0xff133fd7
  411911:	inc    ebp
  411912:	cmc    
  411913:	iret   
  411914:	pop    ebx
  411915:	jns    0x411994
  411917:	stos   DWORD PTR es:[edi],eax
  411918:	ins    BYTE PTR es:[edi],dx
  411919:	pusha  
  41191a:	lds    ebp,FWORD PTR [ecx]
  41191c:	push   0xffffffa3
  41191e:	dec    ecx
  41191f:	mov    ds:0x159c59cf,eax
  411924:	jmp    0xf262:0x75f5bcd7
  41192b:	int3   
  41192c:	push   ss
  41192d:	aad    0xb7
  41192f:	jo     0x4118f2
  411931:	cmp    al,0x10
  411933:	pop    edi
  411934:	mov    bl,0x8c
  411936:	in     al,0x11
  411938:	xchg   ebp,eax
  411939:	es cmp cl,ah
  41193c:	stos   BYTE PTR es:[edi],al
  41193d:	scas   eax,DWORD PTR es:[edi]
  41193e:	sbb    edi,DWORD PTR [esi+0x67105cca]
  411944:	or     eax,0xafcbe386
  411949:	sbb    eax,0x8009472c
  41194e:	neg    BYTE PTR [edx+0x3691dad0]
  411954:	(bad)  
  411955:	out    0xbc,al
  411957:	hlt    
  411958:	test   eax,0x13325da3
  41195d:	add    al,0xe8
  41195f:	in     eax,dx
  411960:	sbb    BYTE PTR [ebp+edi*8+0x72ae7a56],ch
  411967:	int3   
  411968:	mov    edi,0xae99b2d
  41196d:	fstp   TBYTE PTR [eax+0x2e]
  411970:	push   ss
  411971:	jno    0x4119c0
  411973:	inc    edx
  411974:	inc    esp
  411975:	xor    bl,BYTE PTR [edi-0x1b]
  411978:	xchg   edi,eax
  411979:	mov    esp,0x4da864fa
  41197e:	dec    eax
  41197f:	outs   dx,DWORD PTR ds:[esi]
  411980:	jp     0x4119a9
  411982:	mov    ds:0x1908123f,al
  411987:	and    ch,dh
  411989:	cs xchg ebx,eax
  41198b:	jmp    0x298b4fef
  411990:	or     DWORD PTR [edx-0xe],edx
  411993:	sbb    al,0xc
  411995:	not    BYTE PTR [edi+0x737d3918]
  41199b:	ja     0x4119f6
  41199d:	mov    edi,0x9e33b9b0
  4119a2:	jmp    0xa4ed:0xb8595d74
  4119a9:	sub    al,0x5
  4119ab:	or     ebp,esi
  4119ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119ae:	scas   eax,DWORD PTR es:[edi]
  4119af:	mov    WORD PTR [edx+ebp*1],es
  4119b2:	aaa    
  4119b3:	xchg   ebx,eax
  4119b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119b5:	call   0xb25f:0x84d51361
  4119bc:	adc    al,0xd3
  4119be:	dec    ecx
  4119bf:	stc    
  4119c0:	cdq    
  4119c1:	lea    ecx,[ecx+0x16b22a22]
  4119c7:	(bad)  
  4119c9:	retf   
  4119ca:	add    ch,BYTE PTR [eax-0x691bd043]
  4119d0:	xchg   esp,eax
  4119d1:	add    BYTE PTR [ebx-0x6],dh
  4119d4:	push   esi
  4119d5:	jge    0x4119e9
  4119d7:	enter  0x6d9a,0x69
  4119db:	bound  ebp,QWORD PTR [ebx+0x44e04716]
  4119e1:	xchg   ebx,eax
  4119e2:	and    eax,0x35bf9535
  4119e7:	mov    eax,0x6df743e5
  4119ec:	xchg   bl,ah
  4119ee:	cmp    BYTE PTR [edx+edi*1],ch
  4119f1:	mov    ah,0xbf
  4119f3:	pop    edx
  4119f4:	dec    eax
  4119f5:	inc    edx
  4119f6:	inc    edx
  4119f7:	popa   
  4119f8:	push   0xbf6608f4
  4119fd:	fisub  DWORD PTR [edi-0x26]
  411a00:	pusha  
  411a01:	pusha  
  411a02:	jge    0x411a41
  411a04:	jae    0x411a44
  411a06:	dec    eax
  411a07:	jmp    0x5c18:0x9ce750f9
  411a0e:	add    esp,DWORD PTR [ebp-0x78e4c208]
  411a14:	or     bl,BYTE PTR [eax-0x17a701d5]
  411a1a:	loope  0x411a86
  411a1c:	std    
  411a1d:	jb     0x4119a2
  411a1f:	psrlw  mm4,QWORD PTR [ebx]
  411a22:	mov    BYTE PTR [edi],al
  411a24:	sbb    BYTE PTR [esi+0x43ca996a],bh
  411a2a:	xchg   ebx,eax
  411a2b:	mov    ?,WORD PTR [eax+0x46aa6c85]
  411a31:	lahf   
  411a32:	and    al,0x11
  411a34:	or     ah,ch
  411a36:	dec    edi
  411a37:	outs   dx,BYTE PTR ds:[esi]
  411a38:	mov    ah,0xd2
  411a3a:	fs icebp 
  411a3c:	jp     0x411a26
  411a3e:	lods   eax,DWORD PTR ds:[esi]
  411a3f:	cmp    ebx,DWORD PTR [ebp+0x4b]
  411a42:	adc    DWORD PTR [esi],esp
  411a44:	mov    edx,0xf45a83ec
  411a49:	mov    esi,0x3e0533c
  411a4e:	imul   esi,DWORD PTR [edi],0x5e
  411a51:	rol    edx,1
  411a53:	sub    eax,0x1537b030
  411a58:	add    al,0x39
  411a5a:	enter  0xd2b0,0x91
  411a5e:	push   ss
  411a5f:	xor    esp,DWORD PTR [ebp+0x2c43369]
  411a65:	aad    0xfa
  411a67:	dec    ecx
  411a68:	ds jns 0x4119fd
  411a6b:	arpl   WORD PTR [ebx],sp
  411a6d:	add    esi,eax
  411a6f:	out    dx,eax
  411a70:	pop    eax
  411a71:	fwait
  411a72:	pop    ds
  411a73:	dec    edi
  411a74:	cld    
  411a75:	add    eax,0xfec4d51
  411a7a:	cmp    al,0xca
  411a7c:	loope  0x411acc
  411a7e:	sub    eax,0x559bab92
  411a83:	sub    al,0x1f
  411a85:	jmp    0x411a21
  411a87:	xor    bh,0x55
  411a8a:	dec    ecx
  411a8b:	inc    esp
  411a8c:	xor    bh,BYTE PTR [eax]
  411a8e:	mov    bh,0x12
  411a90:	fild   DWORD PTR gs:[edi]
  411a93:	stos   DWORD PTR es:[edi],eax
  411a94:	add    cl,BYTE PTR [ebp+0x61]
  411a97:	cmp    eax,0x6b490e70
  411a9c:	popf   
  411a9d:	fist   WORD PTR [ecx+edi*4+0x2909590c]
  411aa4:	je     0x411a2d
  411aa6:	jno    0x411a4c
  411aa8:	mov    al,ds:0x361e631e
  411aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aae:	daa    
  411aaf:	pop    edi
  411ab0:	fcom   DWORD PTR [eax]
  411ab2:	sbb    al,0x7e
  411ab4:	mov    eax,0x30ec0850
  411ab9:	aas    
  411aba:	xor    ecx,esi
  411abc:	lea    eax,[ecx+eax*1+0x3272f3]
  411ac3:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac6:	mov    edx,DWORD PTR [ebp-0x20]
  411ac9:	mov    DWORD PTR [edx+ecx*4],eax
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a743
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a747
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a74f
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a753
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a757
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a75b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a75f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a763
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a76b
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a733
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a73b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a73f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a743
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a747
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     BYTE PTR [ebx],bl
  412636:	jbe    0x412693
  412638:	xlat   BYTE PTR ds:[ebx]
  412639:	imul   ecx,DWORD PTR [edx+0x5c178383],0xffffff83
  412640:	cmp    DWORD PTR [ecx+0xbca9b28],0x40
  412647:	sbb    DWORD PTR [ebx+0x275aadf],esi
  41264d:	or     eax,ecx
  41264f:	cdq    
  412650:	or     eax,0xcb3e93f3
  412655:	cmp    al,0xf0
  412657:	rcr    BYTE PTR [ecx-0x68],1
  41265a:	mov    ch,0xb2
  41265c:	retf   
  41265d:	dec    eax
  41265e:	fnsave ds:0x9d44d867
  412664:	out    dx,eax
  412665:	ins    DWORD PTR es:[edi],dx
  412666:	in     eax,dx
  412667:	imul   BYTE PTR [eax-0x4a]
  41266a:	cdq    
  41266b:	loop   0x4126af
  41266d:	push   ds
  41266e:	scas   eax,DWORD PTR es:[edi]
  41266f:	fdiv   DWORD PTR [edi]
  412671:	mov    eax,ds:0x5cb61a9e
  412676:	fimul  WORD PTR [edx-0x18]
  412679:	xchg   cx,ax
  41267b:	in     al,dx
  41267c:	je     0x412691
  41267e:	sub    DWORD PTR [edi-0x80],ebp
  412681:	inc    edi
  412682:	and    esi,0x4c
  412685:	shl    BYTE PTR [edx-0x3716a529],0x49
  41268c:	xlat   BYTE PTR ds:[ebx]
  41268d:	cmp    esi,DWORD PTR [ebp+0x1e]
  412690:	aaa    
  412691:	mov    bl,0x35
  412693:	mov    al,BYTE PTR ds:0xb5545164
  412699:	inc    esi
  41269a:	push   cs
  41269b:	test   BYTE PTR [ebp+0x5e],ch
  41269e:	cwde   
  41269f:	mov    esi,0xd6e4483e
  4126a4:	inc    esi
  4126a5:	mov    esp,0x5d6431a8
  4126aa:	sar    BYTE PTR [esi],cl
  4126ac:	cmp    BYTE PTR [ebp+0x4c],dh
  4126af:	loope  0x4126c5
  4126b1:	sbb    al,ah
  4126b3:	in     eax,dx
  4126b4:	cmp    eax,0x9ddd9f42
  4126b9:	dec    edx
  4126ba:	int3   
  4126bb:	loope  0x41269b
  4126bd:	or     al,0x32
  4126bf:	not    BYTE PTR [edx+ebx*8-0x4e]
  4126c3:	js     0x4126ee
  4126c5:	jb     0x41271f
  4126c7:	jae    0x41272a
  4126c9:	jg     0x412740
  4126cb:	inc    dx
  4126cd:	push   edi
  4126ce:	sub    eax,0xc34c9ebc
  4126d3:	sub    ebx,edx
  4126d5:	fisubr WORD PTR [ebx+ebx*2-0x7a]
  4126d9:	add    eax,0xa9e0a39a
  4126de:	sbb    DWORD PTR [esi-0x69],eax
  4126e1:	hlt    
  4126e2:	lahf   
  4126e3:	mov    cl,0xcb
  4126e5:	enter  0x20f1,0xf
  4126e9:	ins    BYTE PTR es:[edi],dx
  4126ea:	jbe    0x412729
  4126ec:	dec    esp
  4126ed:	adc    DWORD PTR [ecx+edx*2],esp
  4126f0:	in     al,0x4e
  4126f2:	add    ch,dh
  4126f4:	imul   DWORD PTR [edx+eiz*8+0x5e]
  4126f8:	cwde   
  4126f9:	xlat   BYTE PTR ds:[ebx]
  4126fa:	xor    BYTE PTR [edi],bh
  4126fc:	ret    
  4126fd:	cmc    
  4126fe:	mov    bl,0xdc
  412700:	outs   dx,DWORD PTR ds:[esi]
  412701:	mov    ecx,0xdfc4107f
  412706:	dec    esp
  412707:	cs repnz push 0xa5b5e609
  41270e:	pop    es
  41270f:	idiv   edi
  412711:	aas    
  412712:	sbb    al,0x5
  412714:	dec    ebx
  412715:	lock xchg esp,eax
  412717:	mov    ebx,0x6c852fe5
  41271c:	or     eax,0x776d6c0e
  412721:	aas    
  412722:	xchg   edx,eax
  412723:	fadd   st(7),st
  412725:	fiadd  DWORD PTR [ecx]
  412727:	es xchg ecx,eax
  412729:	pop    edx
  41272a:	loop   0x4126f9
  41272c:	retf   0xadc9
  41272f:	mov    WORD PTR [ebx-0x46],cs
  412732:	add    eax,0x4d928015
  412737:	lahf   
  412738:	into   
  412739:	jp     0x41272d
  41273b:	ret    
  41273c:	pop    edx
  41273d:	je     0x412732
  41273f:	dec    edx
  412740:	cs (bad) 
  412742:	in     eax,0x71
  412744:	push   edx
  412745:	out    dx,al
  412746:	xchg   esp,eax
  412747:	dec    esp
  412748:	xchg   edx,eax
  412749:	cmp    BYTE PTR [ecx-0xe],bh
  41274c:	fidiv  DWORD PTR [ebx]
  41274e:	sub    BYTE PTR [ebp+eiz*8+0x3e],dh
  412752:	jp     0x412781
  412754:	push   ebx
  412755:	sub    bh,BYTE PTR ds:0x491f9115
  41275b:	mov    al,0x9d
  41275d:	enter  0xdaea,0xb1
  412761:	jmp    0xb7c88a44
  412766:	test   eax,0xa4f5c2c7
  41276b:	sub    DWORD PTR [esi+0x7a7045b4],eax
  412771:	jnp    0x41276c
  412773:	lds    ecx,FWORD PTR [esi+eax*1]
  412776:	in     eax,0x9f
  412778:	ds nop
  41277a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41277b:	cdq    
  41277c:	dec    eax
  41277d:	cmp    DWORD PTR [esi-0xe],esi
  412780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412781:	in     eax,0x39
  412783:	out    0xe5,al
  412785:	xor    DWORD PTR [esi+0x77],edx
  412788:	sub    eax,0xc9ab3115
  41278d:	sar    DWORD PTR [edx-0x30],0x99
  412791:	and    DWORD PTR [ebx-0x15319d33],edi
  412797:	push   DWORD PTR [edx]
  412799:	and    al,0x63
  41279b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41279c:	lods   al,BYTE PTR ds:[esi]
  41279d:	pop    esi
  41279e:	inc    esi
  41279f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127a0:	fadd   QWORD PTR [edi-0x50707407]
  4127a6:	mov    esp,ebp
  4127a8:	outs   dx,BYTE PTR ds:[esi]
  4127a9:	fsub   st,st(1)
  4127ab:	mov    ebp,0xda4959e9
  4127b0:	mov    ch,0xa5
  4127b2:	sbb    eax,0x9277ac55
  4127b7:	dec    esp
  4127b8:	or     DWORD PTR [edx+0xe97228f],edx
  4127be:	(bad)  
  4127bf:	sbb    DWORD PTR [ebp-0x3d74994c],edx
  4127c5:	mov    ecx,0xe58aca33
  4127ca:	pusha  
  4127cb:	xor    eax,0xc366963c
  4127d0:	push   es
  4127d1:	sub    dh,ch
  4127d3:	jbe    0x4127a1
  4127d5:	mov    esi,0x4d51d3ca
  4127da:	out    0x1d,al
  4127dc:	mov    eax,edx
  4127de:	push   es
  4127df:	dec    ebx
  4127e0:	mov    BYTE PTR [esi+esi*1-0x58b936cf],0xc6
  4127e8:	(bad)  [edi+ebp*1+0x29bda6ef]
  4127ef:	mov    ds:0x7b6719f7,eax
  4127f4:	stc    
  4127f5:	stos   BYTE PTR es:[edi],al
  4127f6:	and    DWORD PTR [esi],esp
  4127f8:	pop    ebp
  4127f9:	jle    0x4127b6
  4127fb:	mov    ds:0xe9537da8,eax
  412800:	enter  0x7ece,0x5e
  412804:	mov    bl,0x33
  412806:	or     BYTE PTR [edx],al
  412808:	mov    bl,0x55
  41280a:	loopne 0x4127dd
  41280c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41280d:	aam    0x65
  41280f:	rol    al,0x15
  412812:	cmp    DWORD PTR [edx-0x5a7ab9f9],esi
  412818:	repnz hlt 
  41281a:	push   cs
  41281b:	fimul  WORD PTR [ebx+0x38f35b0c]
  412821:	nop
  412822:	test   BYTE PTR [esi],bh
  412824:	ret    0x92d6
  412827:	mov    eax,ebx
  412829:	adc    ah,al
  41282b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41282c:	xchg   esi,eax
  41282d:	add    ebp,DWORD PTR [edx-0x3aff3c9b]
  412833:	and    BYTE PTR [ebx-0x18],0xac
  412837:	into   
  412838:	adc    eax,DWORD PTR [ebp-0x75]
  41283b:	mov    WORD PTR [edi-0x3d6e0b5e],cs
  412841:	ins    DWORD PTR es:[edi],dx
  412842:	cwde   
  412843:	xchg   edx,eax
  412844:	not    BYTE PTR [ebp+0x15]
  412847:	add    ebp,eax
  412849:	iret   
  41284a:	and    al,ch
  41284c:	sbb    eax,0xefd72f86
  412851:	mov    dh,0xeb
  412853:	in     eax,0xb6
  412855:	ret    
  412856:	(bad)  
  412857:	fstp   TBYTE PTR [esi]
  412859:	ror    BYTE PTR [edx-0x2dd7f535],1
  41285f:	push   ecx
  412860:	dec    ebp
  412861:	xchg   esp,eax
  412862:	mov    ch,BYTE PTR ds:0x251a81c
  412868:	mov    cl,0x55
  41286a:	pop    esi
  41286b:	xor    al,0x7
  41286d:	fld    DWORD PTR [edx+eiz*1+0x31]
  412871:	inc    ecx
  412872:	cmc    
  412873:	adc    eax,0x8c98f118
  412878:	or     dh,ch
  41287a:	and    al,0xcb
  41287c:	mov    ah,0x1c
  41287e:	push   ecx
  41287f:	call   0xe010:0x8c333892
  412886:	div    DWORD PTR [esp]
  412889:	sbb    BYTE PTR [edx+eiz*2+0xa551de0],al
  412890:	addr16 jl 0x412860
  412893:	mov    ecx,0x830b57b7
  412898:	sbb    eax,0xa61268e3
  41289d:	xchg   BYTE PTR [edi],dl
  41289f:	cmp    BYTE PTR [ecx-0x3a9bc631],ch
  4128a5:	not    BYTE PTR [ecx-0x5b1c82f5]
  4128ab:	mov    ebx,0x6fd43f1c
  4128b0:	jno    0x412848
  4128b2:	add    eax,DWORD PTR [edx-0x6535cfce]
  4128b8:	add    BYTE PTR [ecx+eax*1+0x6a1fd3b8],ch
  4128bf:	jecxz  0x4128ab
  4128c1:	mov    eax,ds:0x7d6bbb82
  4128c6:	iret   
  4128c7:	mov    ebx,0xc7986e05
  4128cc:	add    edi,DWORD PTR [eax+0x27]
  4128cf:	adc    ch,cl
  4128d1:	push   ebp
  4128d2:	in     eax,0x9a
  4128d4:	mov    ?,WORD PTR [edi+0x14]
  4128d7:	push   es
  4128d8:	fldcw  WORD PTR [ebp-0x29]
  4128db:	das    
  4128dc:	adc    DWORD PTR [esi],esp
  4128de:	(bad)  
  4128df:	fnstcw WORD PTR [eax]
  4128e1:	out    dx,al
  4128e2:	adc    BYTE PTR [eax],ch
  4128e4:	mov    ah,0x8d
  4128e6:	mov    ds:0xc813573c,eax
  4128eb:	mov    ss,WORD PTR ds:0xc2bb7e39
  4128f1:	fadd   st,st(6)
  4128f3:	popa   
  4128f4:	pop    eax
  4128f5:	lds    edi,FWORD PTR [ebx+0x5181c42c]
  4128fb:	mov    eax,0xc20e3ce2
  412900:	and    DWORD PTR [edi+eiz*1+0x65],ecx
  412904:	mov    ah,0x5d
  412906:	(bad)  
  412908:	mov    ecx,0xe7bd5525
  41290d:	loope  0x412974
  41290f:	mov    ebp,0x57fce1db
  412914:	imul   ebx,DWORD PTR [esi],0x67
  412917:	sub    BYTE PTR [ebx-0x6f],al
  41291a:	test   DWORD PTR [ebp+0x2b42b07f],ebx
  412920:	or     DWORD PTR [edx+0x12d498ab],eax
  412926:	add    DWORD PTR [edi+0x69],0x9
  41292a:	ds mov edx,0xe7536caa
  412930:	fwait
  412931:	and    cl,BYTE PTR [eax+0x68]
  412934:	inc    ebp
  412935:	inc    DWORD PTR [esi-0x2a78bf7f]
  41293b:	cmp    BYTE PTR fs:[ebp-0x1a9e6bff],ah
  412942:	fistp  QWORD PTR ds:0x71c530c0
  412948:	nop
  412949:	xchg   esp,eax
  41294a:	loope  0x4129b7
  41294c:	ret    0xe653
  41294f:	mov    esi,0xee54c179
  412954:	popa   
  412955:	add    eax,0xaee31e32
  41295a:	pop    ecx
  41295b:	mov    ds,esp
  41295d:	int    0x9a
  41295f:	stos   BYTE PTR es:[edi],al
  412960:	sbb    ch,BYTE PTR [edx-0xd]
  412963:	outs   dx,DWORD PTR ds:[esi]
  412964:	mov    esp,0x696ca119
  412969:	mov    ds:0xb2844037,al
  41296e:	jle    0x4129d4
  412970:	mov    edx,0x730d742e
  412975:	outs   dx,BYTE PTR ds:[esi]
  412976:	aaa    
  412977:	add    eax,0x705f80b6
  41297c:	xor    BYTE PTR [ebx],ah
  41297e:	imul   eax,DWORD PTR [ebp-0x2fee62c3],0x6
  412985:	add    eax,DWORD PTR [ebp-0x4a9def6a]
  41298b:	or     bh,BYTE PTR [eax]
  41298d:	enter  0x1ba9,0xcc
  412991:	cmp    eax,0x22e6399b
  412996:	mov    esi,0x33becea8
  41299b:	xor    eax,0xf16e5a10
  4129a0:	icebp  
  4129a1:	xchg   eax,edi
  4129a3:	fst    DWORD PTR [ecx-0x2a]
  4129a6:	in     eax,0x8
  4129a8:	mov    esp,0x9fb2c5a6
  4129ad:	jnp    0x412a14
  4129af:	or     DWORD PTR [eax+edi*2],edx
  4129b2:	aaa    
  4129b3:	shl    BYTE PTR ds:0xde51aaf4,0x44
  4129ba:	loop   0x412a36
  4129bc:	leave  
  4129bd:	jbe    0x412a00
  4129bf:	pusha  
  4129c0:	push   es
  4129c1:	scas   eax,DWORD PTR es:[edi]
  4129c2:	mul    BYTE PTR [ebp+0x5b]
  4129c5:	jp     0x41298a
  4129c7:	sbb    edx,DWORD PTR [ecx]
  4129c9:	call   0x3303e34
  4129ce:	add    ebp,DWORD PTR [ecx+0x4f0296fe]
  4129d4:	enter  0x2cf0,0x3a
  4129d8:	(bad)  
  4129d9:	dec    ebp
  4129da:	jnp    0x412a56
  4129dc:	(bad)
  4129df:	(bad)  
  4129e0:	jbe    0x4129f7
  4129e2:	jl     0x412991
  4129e4:	jbe    0x4129de
  4129e6:	mov    eax,0xcfb5204b
  4129eb:	sbb    al,0x2d
  4129ed:	in     eax,0x14
  4129ef:	mov    esi,0x238dbd7c
  4129f4:	out    0xa8,al
  4129f6:	(bad)  
  4129f7:	fcomp  QWORD PTR [edx]
  4129f9:	pushf  
  4129fa:	in     al,0xa0
  4129fc:	and    edx,esp
  4129fe:	int    0x5
  412a00:	mov    ch,0xc8
  412a02:	mov    dh,0x24
  412a04:	add    bh,ch
  412a06:	shl    DWORD PTR [ecx+0x383981fc],0xfd
  412a0d:	sub    BYTE PTR [ebx-0x50],bh
  412a10:	and    edx,DWORD PTR [esi+0x4ef24dc1]
  412a16:	mov    ds:0x4f555234,al
  412a1b:	cmp    ch,BYTE PTR [esi+0x18]
  412a1e:	inc    esp
  412a1f:	pop    esp
  412a20:	mov    bl,0x74
  412a22:	dec    ebp
  412a23:	mov    edi,0x859e48d0
  412a28:	dec    ecx
  412a29:	test   DWORD PTR [edx+0x1f],ecx
  412a2c:	push   esp
  412a2d:	xchg   esp,eax
  412a2e:	call   0x1e9a:0x1ee2e977
  412a35:	xchg   edx,eax
  412a36:	fstp   TBYTE PTR [ebp+0x3c]
  412a39:	xor    BYTE PTR [esi+0x6e08a1],ch
  412a3f:	adc    ebp,DWORD PTR [edi]
  412a41:	jmp    0x6f5a2102
  412a46:	mul    bh
  412a48:	test   eax,0x4ef2cf4
  412a4d:	push   esp
  412a4e:	or     BYTE PTR [eax-0x5c99267],dl
  412a54:	jbe    0x412a4f
  412a56:	xchg   edi,eax
  412a57:	lds    edx,FWORD PTR [edi+0x526fb935]
  412a5d:	xor    edx,DWORD PTR [esi+0xb]
  412a60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a61:	sbb    ebp,DWORD PTR [esi]
  412a63:	dec    BYTE PTR [eax]
  412a65:	dec    ecx
  412a66:	fisttp QWORD PTR [eax+0x5f6180f3]
  412a6c:	clc    
  412a6d:	enter  0x5fc2,0x37
  412a71:	and    al,0x30
  412a73:	dec    edi
  412a74:	sub    bl,dl
  412a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a77:	jmp    0x412aec
  412a79:	pcmpgtb mm0,QWORD PTR ds:[esi]
  412a7d:	shl    DWORD PTR [eax+0x6],0x39
  412a81:	(bad)  
  412a83:	ins    DWORD PTR es:[edi],dx
  412a84:	add    al,0x63
  412a86:	jo     0x412a4d
  412a88:	sar    DWORD PTR [edi+0x71],0x41
  412a8c:	jb     0x412af6
  412a8e:	daa    
  412a8f:	pop    ss
  412a90:	mov    BYTE PTR [ebp-0x53],bl
  412a93:	cwde   
  412a94:	ss test eax,0x57e33fbd
  412a9a:	push   esp
  412a9b:	je     0x412a44
  412a9d:	int    0x25
  412a9f:	lods   eax,DWORD PTR ds:[esi]
  412aa0:	ins    DWORD PTR es:[edi],dx
  412aa1:	cdq    
  412aa2:	cli    
  412aa3:	push   ebx
  412aa4:	ins    BYTE PTR es:[edi],dx
  412aa5:	aas    
  412aa6:	cli    
  412aa7:	pop    es
  412aa8:	nop
  412aa9:	jbe    0x412abd
  412aab:	sub    al,0xbe
  412aad:	push   0xffffff8f
  412aaf:	ror    ebp,1
  412ab1:	mov    bh,0x5e
  412ab3:	pop    edi
  412ab4:	aam    0x5e
  412ab6:	sahf   
  412ab7:	fld    TBYTE PTR [ebx+0x4160ad60]
  412abd:	sub    ebx,DWORD PTR [esp+edi*1-0x3]
  412ac1:	add    al,0x5
  412ac3:	push   0xb2a0eb7f
  412ac8:	dec    edx
  412ac9:	pop    ds
  412aca:	xor    BYTE PTR [ebx+0x4b],ch
  412acd:	jno    0x412b04
  412acf:	outs   dx,DWORD PTR ds:[esi]
  412ad0:	add    DWORD PTR es:[ebx+0x5c],ebx
  412ad4:	mov    bh,0x3d
  412ad6:	or     bl,al
  412ad8:	je     0x412a88
  412ada:	mov    esp,0x5fd60986
  412adf:	(bad)  [ebx+0xc30f532]
  412ae5:	ins    DWORD PTR es:[edi],dx
  412ae6:	div    DWORD PTR [ebx+0x3624d014]
  412aec:	ror    BYTE PTR [ebp-0x4f],0x62
  412af0:	mov    esi,0x64c6eafe
  412af5:	inc    edx
  412af6:	sbb    DWORD PTR ds:0xc02a53b4,esp
  412afc:	adc    esp,0x61509673
  412b02:	mov    edi,0x99d870f2
  412b07:	jle    0x412afd
  412b09:	push   ds
  412b0a:	jb     0x412b0b
  412b0c:	xor    ch,dh
  412b0e:	mov    esi,edi
  412b10:	xor    bh,BYTE PTR [edx+eiz*4+0x1d6eac67]
  412b17:	add    al,0x7e
  412b19:	jae    0x412b8a
  412b1b:	pop    ss
  412b1c:	or     esi,DWORD PTR [edx]
  412b1e:	jb     0x412b44
  412b20:	arpl   WORD PTR [ebx+0x7bdf4542],di
  412b26:	psubusw mm4,QWORD PTR [ebx-0x80]
  412b2a:	sub    BYTE PTR ds:0xd5bb6b94,bh
  412b30:	popa   
  412b31:	repz pop esi
  412b33:	pop    edx
  412b34:	push   esi
  412b35:	pop    edi
  412b36:	add    BYTE PTR [eax+0x629ed4a4],bl
  412b3c:	jbe    0x412b27
  412b3e:	and    eax,0x33f6d503
  412b43:	and    al,0x2a
  412b45:	jno    0x22c83e89
  412b4b:	clc    
  412b4c:	xchg   DWORD PTR [edx],eax
  412b4e:	jecxz  0x412b89
  412b50:	stos   DWORD PTR es:[edi],eax
  412b51:	dec    ecx
  412b52:	pop    eax
  412b53:	add    bh,BYTE PTR [ebp+0x1c]
  412b56:	or     eax,0x8975b90b
  412b5b:	sbb    eax,0x6868c005
  412b60:	mov    bl,0x9d
  412b62:	cmp    ah,BYTE PTR [ecx+0x6edf6dae]
  412b68:	push   ebx
  412b69:	adc    al,0xc5
  412b6b:	cs inc esi
  412b6d:	jle    0x412b24
  412b6f:	and    bh,cl
  412b71:	cwde   
  412b72:	dec    esp
  412b73:	sub    eax,eax
  412b75:	pushf  
  412b76:	shr    bh,0x70
  412b79:	lea    eax,[eax]
  412b7b:	push   eax
  412b7c:	scas   al,BYTE PTR es:[edi]
  412b7d:	inc    eax
  412b7e:	sub    ch,BYTE PTR [edx-0x1f]
  412b81:	cmc    
  412b82:	xchg   ch,dh
  412b84:	aad    0x61
  412b86:	loop   0x412b15
  412b88:	test   DWORD PTR [esi+esi*8+0x50],eax
  412b8c:	jmp    0x412b40
  412b8e:	ror    DWORD PTR [ebp-0x4c],1
  412b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b92:	ins    DWORD PTR es:[edi],dx
  412b93:	push   DWORD PTR [edi+0xe1f191]
  412b99:	inc    eax
  412b9a:	sbb    eax,0xa92dc761
  412b9f:	add    BYTE PTR [ecx+0x752c18d4],dl
  412ba5:	lds    ecx,FWORD PTR [edx+0x2a986bc]
  412bab:	imul   esi,DWORD PTR [ecx-0x2c],0x49cd6017
  412bb2:	cmp    al,0x44
  412bb4:	inc    esp
  412bb5:	(bad)  
  412bb6:	mov    edx,0x72a7cb5f
  412bbb:	aaa    
  412bbc:	dec    ebp
  412bbd:	call   0xcc9f:0xe1fa3675
  412bc4:	push   eax
  412bc5:	push   ds
  412bc6:	add    al,BYTE PTR [ecx-0x2c632be9]
  412bcc:	jmp    0xdb71:0x476fed9c
  412bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bd4:	lods   al,BYTE PTR ds:[esi]
  412bd5:	xchg   esi,eax
  412bd6:	jmp    0x412beb
  412bd8:	pusha  
  412bd9:	push   ecx
  412bda:	pop    esp
  412bdb:	xchg   ebx,eax
  412bdc:	loopne 0x412b6d
  412bde:	div    BYTE PTR [esi]
  412be0:	jle    0x412bf5
  412be2:	mul    BYTE PTR [edx-0x27539987]
  412be8:	cmp    ch,BYTE PTR [ebx-0x60ecbb0c]
  412bee:	paddq  mm1,QWORD PTR [ebp-0x3]
  412bf2:	or     BYTE PTR [ecx+0x77ab9ba8],dh
  412bf8:	out    0xe7,al
  412bfa:	and    DWORD PTR [edx-0x750bdcc1],0xffffffe8
  412c01:	mov    bh,0xf5
  412c03:	out    dx,al
  412c04:	mov    esp,0x540b45a0
  412c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c0a:	mov    ebx,0xa018a52c
  412c0f:	push   esi
  412c10:	jo     0x412c54
  412c12:	test   eax,0x2295da45
  412c17:	and    edi,ebx
  412c19:	pop    edx
  412c1a:	(bad)  
  412c1b:	aam    0x4f
  412c1d:	scas   eax,DWORD PTR es:[edi]
  412c1e:	mov    ecx,0xd9b51ee0
  412c23:	mov    eax,0xb894c546
  412c28:	and    al,0x41
  412c2a:	test   DWORD PTR [esi],ebp
  412c2c:	fnstcw WORD PTR [ecx+0x54f1bc52]
  412c32:	sub    WORD PTR [esi+edi*2-0x21],si
  412c37:	adc    bl,BYTE PTR [edx]
  412c39:	jno    0x412c01
  412c3b:	leave  
  412c3c:	aaa    
  412c3d:	fmul   DWORD PTR [eax-0x112073f8]
  412c43:	lea    eax,[edi-0xc]
  412c46:	mov    edi,0x1be10422
  412c4b:	out    0x2d,eax
  412c4d:	mov    ch,0xa5
  412c4f:	push   ebp
  412c50:	xor    eax,0xe4c65f83
  412c55:	dec    ebp
  412c56:	rcl    DWORD PTR [ecx-0x45cbe067],1
  412c5c:	push   esp
  412c5d:	sbb    cl,BYTE PTR [ebx+ecx*4+0x69cd06cc]
  412c64:	inc    esi
  412c65:	(bad)  
  412c67:	mov    esi,0xb3cf36ea
  412c6c:	jl     0x412ca6
  412c6e:	pushf  
  412c6f:	addr16 mov bl,0xe3
  412c72:	xor    bh,bh
  412c74:	jle    0x412c0f
  412c76:	inc    ebx
  412c77:	push   ebp
  412c78:	in     eax,dx
  412c79:	jne    0x412cf7
  412c7b:	sbb    eax,0xcaeb5fc4
  412c80:	cmp    al,0xf8
  412c82:	rcl    BYTE PTR [ecx],1
  412c84:	dec    DWORD PTR [ecx-0x41704ccc]
  412c8a:	ins    BYTE PTR es:[edi],dx
  412c8b:	sub    eax,0x9cd0c615
  412c90:	fistp  QWORD PTR [ecx-0x7f3e2a9d]
  412c96:	push   edx
  412c97:	xor    ch,ch
  412c99:	sub    al,dh
  412c9b:	pusha  
  412c9c:	stos   BYTE PTR es:[edi],al
  412c9d:	cmc    
  412c9e:	push   eax
  412c9f:	cmc    
  412ca0:	ret    0x9835
  412ca3:	mov    al,0xf0
  412ca5:	pop    ebp
  412ca6:	fistp  DWORD PTR [ebx]
  412ca8:	xchg   ebp,eax
  412ca9:	shl    bl,0x62
  412cac:	mov    BYTE PTR [edi-0x48],ah
  412caf:	outs   dx,DWORD PTR ds:[esi]
  412cb0:	in     eax,0x34
  412cb2:	push   es
  412cb3:	add    al,0xa8
  412cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cb6:	scas   eax,DWORD PTR es:[edi]
  412cb7:	mov    edi,0x21ce49e7
  412cbc:	mov    edx,0xcadcb883
  412cc1:	pop    edi
  412cc2:	push   ss
  412cc3:	fadd   DWORD PTR ds:0x2a576ccc
  412cc9:	pop    esp
  412cca:	add    edx,edi
  412ccc:	call   0xadf9:0xe945e993
  412cd3:	int3   
  412cd4:	fst    QWORD PTR [esi-0x55]
  412cd7:	xchg   ebx,eax
  412cd8:	fstp   TBYTE PTR [esi+eiz*8-0x5f137d68]
  412cdf:	fucomip st,st(6)
  412ce1:	clc    
  412ce2:	inc    eax
  412ce3:	sbb    eax,0x5c0f5f62
  412ce8:	outs   dx,DWORD PTR ds:[esi]
  412ce9:	aam    0x29
  412ceb:	mov    ebp,0x3f29f703
  412cf0:	xor    DWORD PTR [ebp-0x4b33ce2e],esp
  412cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cf7:	adc    BYTE PTR [eax-0x48],0x7b
  412cfb:	mov    ds:0xaf3f0dcf,eax
  412d00:	sub    ch,BYTE PTR [esi+0x1f]
  412d03:	popa   
  412d04:	fwait
  412d05:	lods   al,BYTE PTR ds:[esi]
  412d06:	xchg   esi,eax
  412d07:	stos   BYTE PTR es:[edi],al
  412d08:	inc    eax
  412d09:	push   eax
  412d0a:	shr    BYTE PTR ds:0x6436e11e,0xc0
  412d11:	mov    ss,WORD PTR [edi]
  412d13:	ds sub eax,0xa01011b4
  412d19:	mov    eax,0x453ed205
  412d1e:	cmp    edi,DWORD PTR [ebx+0x23]
  412d21:	mov    cl,0x4c
  412d23:	cwde   
  412d24:	cmp    cl,0xa4
  412d27:	loop   0x412cea
  412d29:	js     0x412d23
  412d2b:	shr    BYTE PTR [edi+0x7534d010],1
  412d31:	jecxz  0x412d10
  412d33:	test   eax,0xe43ba63f
  412d38:	cmp    BYTE PTR [edi-0x6d],0x98
  412d3c:	les    ecx,FWORD PTR ds:0x3510edbc
  412d42:	es jle 0x412d07
  412d45:	dec    edi
  412d46:	cmp    ch,BYTE PTR [eax-0x7c]
  412d49:	mov    esp,DWORD PTR [ebp-0x766b13ad]
  412d4f:	mov    ah,0x2d
  412d51:	outs   dx,DWORD PTR ds:[esi]
  412d52:	pop    es
  412d53:	call   0xacb23620
  412d58:	xor    ebp,DWORD PTR [ecx-0x1]
  412d5b:	call   0x1bc8e4b
  412d60:	loope  0x412d9f
  412d62:	addr16 mov bh,0x8a
  412d65:	and    al,0x3b
  412d67:	mov    al,ds:0x8878f192
  412d6c:	(bad)  
  412d6d:	sti    
  412d6e:	std    
  412d6f:	imul   edi,DWORD PTR [edi+0x628887e0],0x4b
  412d76:	hlt    
  412d77:	cwde   
  412d78:	leave  
  412d79:	sub    BYTE PTR [ecx],bl
  412d7b:	push   ebp
  412d7c:	std    
  412d7d:	and    eax,0x5a7ff31c
  412d82:	jmp    0xcc1a3cf2
  412d87:	xchg   ebx,eax
  412d88:	and    al,0x62
  412d8a:	dec    esi
  412d8b:	pop    ss
  412d8c:	mov    al,0x5e
  412d8e:	mov    dh,0x40
  412d90:	mov    ss,WORD PTR [esi+0x13535454]
  412d96:	mov    eax,ds:0xa8b15a3b
  412d9b:	mov    dl,0x7e
  412d9d:	fwait
  412d9e:	repnz add DWORD PTR [edx+eax*8-0x153f2e70],ebx
  412da6:	pop    ebp
  412da7:	sbb    DWORD PTR [eax+0x47],eax
  412daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dab:	dec    ecx
  412dac:	rcr    dl,0x45
  412daf:	or     BYTE PTR [eax-0x213e2ed2],0x74
  412db6:	push   ss
  412db7:	(bad)  
  412db9:	mov    edx,0x558c22cf
  412dbe:	adc    BYTE PTR [edi+ebp*8+0x53],bl
  412dc2:	or     al,0x13
  412dc4:	sub    al,0x23
  412dc6:	(bad)  
  412dc7:	cli    
  412dc8:	scas   al,BYTE PTR es:[edi]
  412dc9:	mov    dl,0x53
  412dcb:	imul   eax,eax,0x618b2b1c
  412dd1:	xor    cl,BYTE PTR [edi]
  412dd3:	int3   
  412dd4:	dec    ebp
  412dd5:	mov    edx,0x721e330d
  412dda:	mov    ebp,0x9f1927c5
  412ddf:	cwde   
  412de0:	push   ds
  412de1:	sub    BYTE PTR [eax],bh
  412de3:	gs mov cl,0x0
  412de6:	and    BYTE PTR [eax],0x40
  412de9:	cs loop 0x412e0f
  412dec:	or     DWORD PTR [edi],edx
  412dee:	jb     0x412e38
  412df0:	inc    ebp
  412df1:	fs inc ebx
  412df3:	cmc    
  412df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412df5:	add    eax,0x34976650
  412dfa:	imul   edi,DWORD PTR [eax],0xe7fd322b
  412e00:	ins    DWORD PTR es:[edi],dx
  412e01:	nop
  412e02:	cmp    esp,DWORD PTR [ecx]
  412e04:	sbb    BYTE PTR [eax],dh
  412e06:	leave  
  412e07:	xor    al,0xf9
  412e09:	or     BYTE PTR [edx+ebx*2],dl
  412e0c:	and    eax,0x7bc93c8d
  412e11:	or     eax,0xec188d47
  412e16:	mov    edx,0x77c92424
  412e1b:	mov    edi,0xbece77dc
  412e20:	push   0xbb2d3f71
  412e25:	jle    0x412e6d
  412e27:	into   
  412e28:	jmp    0x412e68
  412e2a:	cmc    
  412e2b:	int3   
  412e2c:	mov    ebp,0x998ee214
  412e31:	push   esi
  412e32:	ins    BYTE PTR es:[edi],dx
  412e33:	and    bl,BYTE PTR [ebp-0x79]
  412e36:	cmp    edx,DWORD PTR [ecx+0x19cbfab6]
  412e3c:	jns    0x412dcd
  412e3e:	ds mov ebp,0x78a67694
  412e44:	push   esi
  412e45:	ror    DWORD PTR [eax-0x58],0xcd
  412e49:	in     eax,dx
  412e4a:	push   0x17
  412e4c:	push   ds
  412e4d:	jmp    0x412e6e
  412e4f:	adc    BYTE PTR [edi+0x64],cl
  412e52:	push   cs
  412e53:	sar    bh,1
  412e55:	mov    esi,0xf114e423
  412e5a:	push   0x31716e04
  412e5f:	or     DWORD PTR [ebx+0x272d2359],edx
  412e65:	test   eax,0xb5532639
  412e6a:	sbb    BYTE PTR [edi-0x1e],cl
  412e6d:	pushf  
  412e6e:	adc    al,0x74
  412e70:	sbb    DWORD PTR [ebx+0xcc31b0f],esi
  412e76:	pcmpgtb mm0,mm5
  412e79:	das    
  412e7a:	inc    edi
  412e7b:	or     BYTE PTR [eax-0x1c16e7a],dh
  412e81:	adc    BYTE PTR [ebx],dl
  412e83:	or     DWORD PTR [ebp-0x3d],ecx
  412e86:	(bad)
  412e8b:	ficom  DWORD PTR [esi-0x80]
  412e8e:	mov    ds:0xc99e2515,al
  412e93:	mov    ecx,0x99340105
  412e98:	and    al,0xd0
  412e9a:	ficomp WORD PTR [ebp-0x35]
  412e9d:	test   al,0x3b
  412e9f:	pop    esi
  412ea0:	popa   
  412ea1:	xor    bl,BYTE PTR [eax]
  412ea3:	out    0x62,eax
  412ea5:	js     0x412e33
  412ea7:	cmp    BYTE PTR [ebx-0x59e224f4],cl
  412ead:	cmp    ch,BYTE PTR [esi-0x14]
  412eb0:	(bad)  
  412eb1:	or     eax,0x51bc56bc
  412eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eb7:	pop    ds
  412eb8:	(bad)  
  412eb9:	fstp   TBYTE PTR [esi-0x14ce69b8]
  412ebf:	bound  eax,QWORD PTR [ecx]
  412ec1:	dec    esi
  412ec2:	mov    ebp,0xadef7b49
  412ec7:	repz js 0x412e7d
  412eca:	aas    
  412ecb:	mov    eax,0xf1470271
  412ed0:	ja     0x412ead
  412ed2:	cmp    DWORD PTR [ebx+0x7d],esi
  412ed5:	xor    eax,0xcc93a222
  412eda:	cwde   
  412edb:	sar    BYTE PTR [ecx],cl
  412edd:	int    0x46
  412edf:	xor    esp,DWORD PTR [ebp-0x13]
  412ee2:	xchg   esi,eax
  412ee3:	repnz clc 
  412ee5:	add    dh,dl
  412ee7:	je     0x412f59
  412ee9:	sub    eax,0x23821fe3
  412eee:	dec    esp
  412eef:	fwait
  412ef0:	out    0xf1,al
  412ef2:	dec    al
  412ef4:	fsubr  DWORD PTR [esi]
  412ef6:	pop    ecx
  412ef7:	dec    ebp
  412ef8:	mov    esi,eax
  412efa:	and    BYTE PTR [eax],0x18
  412efd:	lock jecxz 0x412ea4
  412f00:	rcl    bl,cl
  412f02:	cmc    
  412f03:	shl    ah,1
  412f05:	jb     0x412eda
  412f07:	fidivr WORD PTR [eax]
  412f09:	fdiv   st(0),st
  412f0b:	jecxz  0x412f39
  412f0d:	out    0xd0,al
  412f0f:	lock jb 0x412ec6
  412f12:	pop    ss
  412f13:	clc    
  412f14:	call   FWORD PTR [esi]
  412f16:	aas    
  412f17:	inc    edi
  412f18:	data16 lock push si
  412f1c:	inc    edi
  412f1d:	jns    0x412ec4
  412f1f:	xchg   esp,eax
  412f20:	sbb    al,0xc7
  412f22:	or     DWORD PTR [ebp-0x4d29f2e9],ebx
  412f28:	sub    al,0x4e
  412f2a:	imul   ebp,esi,0x72
  412f2d:	std    
  412f2e:	xchg   ebp,eax
  412f2f:	cmc    
  412f30:	mov    ds:0x31fd308d,eax
  412f35:	push   eax
  412f36:	lea    ecx,[ebx]
  412f38:	inc    esi
  412f39:	cld    
  412f3a:	xchg   ebp,eax
  412f3b:	cwde   
  412f3c:	or     BYTE PTR [edx-0x54],bh
  412f3f:	aad    0x5
  412f41:	popa   
  412f42:	xchg   ebp,eax
  412f43:	add    bh,BYTE PTR [eax]
  412f45:	(bad)  
  412f46:	outs   dx,BYTE PTR ds:[esi]
  412f47:	xchg   ebx,eax
  412f48:	push   ds
  412f49:	fcomp  DWORD PTR [ecx+0x4c]
  412f4c:	mov    ah,bl
  412f4e:	dec    ebx
  412f4f:	fidivr WORD PTR [ecx]
  412f51:	wrmsr  
  412f53:	loope  0x412f3b
  412f55:	and    DWORD PTR [eax+eiz*8+0x58],edi
  412f59:	adc    DWORD PTR [esi],edi
  412f5b:	imul   BYTE PTR [ebp-0x10e8a37d]
  412f61:	jge    0x412f5c
  412f63:	in     al,dx
  412f64:	mov    BYTE PTR [eax-0x2c],ah
  412f67:	cmp    al,0x8e
  412f69:	inc    edi
  412f6a:	fprem  
  412f6c:	jns    0x412f1f
  412f6e:	out    dx,al
  412f6f:	dec    ecx
  412f70:	popf   
  412f71:	and    BYTE PTR [eax],0x68
  412f74:	cmp    DWORD PTR [eax+0x3196441d],edi
  412f7a:	mov    BYTE PTR ds:0xe89d12b8,cl
  412f80:	inc    esi
  412f81:	mov    eax,ds:0x2f22bcca
  412f86:	sar    DWORD PTR [edx-0x2f925199],cl
  412f8c:	clc    
  412f8d:	inc    ebx
  412f8e:	test   al,0x77
  412f90:	or     eax,0xdd1070cf
  412f95:	sub    BYTE PTR [ebx+ebx*1],bh
  412f98:	xchg   esi,eax
  412f99:	or     ch,BYTE PTR [edx-0x11fd4a51]
  412f9f:	jne    0x413017
  412fa1:	jne    0x412f60
  412fa3:	mov    ch,0xbe
  412fa5:	inc    ecx
  412fa6:	addr16 push ss
  412fa8:	cmp    BYTE PTR [edi-0x1e],0xa
  412fac:	mov    bh,0x56
  412faf:	loopne 0x413009
  412fb1:	or     eax,0xb41f416f
  412fb6:	adc    BYTE PTR [ecx+0x7eea4052],al
  412fbc:	xor    al,0x8d
  412fbe:	loop   0x412fca
  412fc0:	mov    dh,0xc7
  412fc2:	jbe    0x412fc1
  412fc4:	lods   eax,DWORD PTR ds:[esi]
  412fc5:	xchg   BYTE PTR [esi+0x448e810f],cl
  412fcb:	je     0x413026
  412fcd:	sti    
  412fce:	shl    DWORD PTR [esi+0x28],1
  412fd1:	into   
  412fd2:	mov    bl,BYTE PTR [ebp-0x34]
  412fd5:	scas   eax,DWORD PTR es:[edi]
  412fd6:	das    
  412fd7:	inc    ebx
  412fd8:	fwait
  412fd9:	sub    BYTE PTR [edx+0x2337722a],dl
  412fdf:	out    dx,al
  412fe0:	das    
  412fe1:	sbb    bl,BYTE PTR ds:0xffabfad5
  412fe7:	sub    DWORD PTR [edx-0x43],esp
  412fea:	mov    dl,0xca
  412fec:	ret    
  412fed:	pop    ebp
  412fee:	shr    DWORD PTR [ebx-0x12a79f34],cl
  412ff4:	xchg   esi,eax
  412ff5:	xchg   ecx,eax
  412ff6:	(bad)  
  412ff7:	cmp    dh,BYTE PTR [edx]
  412ff9:	inc    esi
  412ffa:	ja     0x413010
  412ffc:	retf   0xd331
  412fff:	mov    DWORD PTR [edi+edx*8],edi
  413002:	inc    ebp
  413003:	and    eax,0xddbcb1d2
  413008:	popa   
  413009:	out    dx,eax
  41300a:	push   0xb89103c8
  41300f:	dec    esi
  413010:	and    edi,DWORD PTR [ecx-0x25]
  413013:	leave  
  413014:	xlat   BYTE PTR ds:[ebx]
  413015:	jo     0x413058
  413017:	mov    edx,0xd25a3a72
  41301c:	sub    ebx,DWORD PTR [edx+0x5ee1a344]
  413022:	cmp    BYTE PTR [edx-0x7f2c2e81],bl
  413028:	fcmovbe st,st(1)
  41302a:	leave  
  41302b:	adc    eax,0x4193f7fb
  413030:	push   esp
  413032:	cli    
  413033:	pop    ebx
  413034:	lods   eax,DWORD PTR ds:[esi]
  413035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413036:	xor    al,0xde
  413038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413039:	mov    dh,0xa0
  41303b:	add    BYTE PTR [esi],bl
  41303d:	push   edx
  41303e:	ins    DWORD PTR es:[edi],dx
  41303f:	into   
  413040:	out    dx,eax
  413041:	or     BYTE PTR ds:0x3f329e4b,0xeb
  413048:	mov    al,ds:0xfb25ef4f
  41304d:	mov    ecx,0xbdcfc7aa
  413052:	(bad)  
  413053:	and    eax,DWORD PTR [ebx]
  413055:	les    eax,FWORD PTR ss:[edx+0xc]
  413059:	dec    eax
  41305a:	and    esi,DWORD PTR [edx]
  41305c:	mov    BYTE PTR [eax+0x74],bl
  41305f:	popf   
  413060:	stos   DWORD PTR es:[edi],eax
  413061:	mov    ds:0xa6a8055f,eax
  413066:	sub    BYTE PTR [ecx],dl
  413068:	mov    ebp,0xc710448
  41306e:	sub    esp,edi
  413070:	lods   eax,DWORD PTR ds:[esi]
  413071:	arpl   WORD PTR [ebp+ebx*8+0x79],dx
  413075:	xchg   esp,eax
  413076:	cmc    
  413077:	pop    ebx
  413078:	cmp    dh,BYTE PTR [ecx+0x20ad51fc]
  41307e:	xor    BYTE PTR [edx+esi*2-0x25],dl
  413082:	xor    DWORD PTR [ebx-0x70],esi
  413085:	cmp    al,0xc8
  413087:	pop    ds
  413088:	ins    BYTE PTR es:[edi],dx
  413089:	retf   0x8142
  41308c:	and    ebx,0x8ad60d1c
  413092:	add    eax,DWORD PTR [ecx+ebx*1+0x6b]
  413096:	dec    ecx
  413097:	cmc    
  413098:	int3   
  413099:	push   esp
  41309a:	sub    ebx,0xf7354a73
  4130a0:	xchg   edi,eax
  4130a1:	rcr    DWORD PTR [edx],cl
  4130a3:	call   0xca79:0xa82c4fdb
  4130aa:	lea    ecx,[ebx]
  4130ac:	mov    esi,0x71703611
  4130b1:	daa    
  4130b2:	daa    
  4130b3:	lods   eax,DWORD PTR ds:[esi]
  4130b4:	push   0xffffff94
  4130b6:	jb     0x4130bf
  4130b8:	cli    
  4130b9:	xchg   ecx,eax
  4130ba:	mov    ch,bl
  4130bc:	jg     0x41305a
  4130be:	sbb    BYTE PTR [eax],cl
  4130c0:	leave  
  4130c1:	call   0x5cad:0x304094b1
  4130c8:	sub    edi,DWORD PTR [edi+eiz*8]
  4130cb:	xchg   ecx,eax
  4130cc:	push   ecx
  4130cd:	push   0xffffff8c
  4130cf:	nop    DWORD PTR [ebx]
  4130d2:	ds repnz push esp
  4130d5:	push   ecx
  4130d6:	or     ch,BYTE PTR ds:0xf4ab2207
  4130dc:	jnp    0x413128
  4130de:	data16 mov dh,0xf5
  4130e1:	mov    WORD PTR [ebx+0x74],fs
  4130e4:	test   DWORD PTR [eax+ecx*2+0x530ba719],ebx
  4130eb:	(bad)  
  4130ec:	imul   eax,DWORD PTR [ebx-0x2672071],0xfc13ecee
  4130f6:	xchg   DWORD PTR [ebx],edx
  4130f8:	in     eax,dx
  4130f9:	addr16 pop es
  4130fb:	mov    al,ds:0x14a6fa71
  413100:	(bad)  
  413101:	scas   al,BYTE PTR es:[edi]
  413102:	or     bh,dh
  413104:	adc    BYTE PTR [edi+0x5e67b3e5],dh
  41310a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41310b:	not    BYTE PTR [edi+0x772d263f]
  413111:	ds iret 
  413113:	cs or  al,0xbb
  413116:	mov    edi,0x1834da53
  41311b:	mov    eax,0x4ca6931e
  413120:	jg     0x413152
  413122:	inc    ecx
  413123:	dec    esp
  413124:	(bad)  
  413125:	jno    0x41314b
  413127:	arpl   WORD PTR [edx-0x39],bp
  41312a:	int3   
  41312b:	popf   
  41312c:	jle    0x41311f
  41312e:	stos   DWORD PTR es:[edi],eax
  41312f:	fild   QWORD PTR [ebx-0x7de7d58f]
  413135:	outs   dx,DWORD PTR ds:[esi]
  413136:	aaa    
  413137:	sbb    esi,ebx
  413139:	jmp    0x413197
  41313b:	adc    al,0xef
  41313d:	push   ebp
  41313e:	push   edx
  41313f:	jmp    0x413140
  413141:	or     edx,eax
  413143:	push   esi
  413144:	out    dx,eax
  413145:	mov    esp,0x88eaf2cc
  41314b:	jmp    0x413168
  41314d:	shl    DWORD PTR gs:[ebp+0x41],0x27
  413152:	sti    
  413153:	xchg   ecx,eax
  413154:	mov    esi,0xab38880b
  413159:	pop    esi
  41315a:	(bad)  
  41315b:	(bad)  
  41315c:	sbb    eax,0xe4c1df50
  413161:	pop    edx
  413162:	mov    esp,0xe993a6ae
  413167:	mov    DWORD PTR [ebx+0x12],edx
  41316a:	sahf   
  41316b:	outs   dx,BYTE PTR ds:[esi]
  41316c:	loope  0x4131e5
  41316e:	in     al,dx
  41316f:	xor    eax,0x43a2732a
  413174:	sbb    eax,0x8265936e
  413179:	fnstsw WORD PTR [edi]
  41317b:	fld    QWORD PTR [edx-0x2a763fa3]
  413181:	jae    0x413134
  413183:	and    esp,edi
  413185:	push   0x31b296ed
  41318a:	and    DWORD PTR [eax+esi*4],ebp
  41318d:	add    ch,BYTE PTR [edi+0x79361ced]
  413193:	sbb    BYTE PTR [ecx-0x11],ch
  413196:	mov    edi,0xd6a699bb
  41319b:	jmp    FWORD PTR cs:[eax]
  41319e:	test   DWORD PTR [esi],esi
  4131a0:	cwde   
  4131a1:	xchg   ecx,eax
  4131a2:	jne    0x4131f3
  4131a4:	dec    ecx
  4131a5:	in     eax,dx
  4131a6:	cwde   
  4131a7:	and    al,0x95
  4131a9:	inc    esp
  4131aa:	adc    BYTE PTR [esi-0x4b],bh
  4131ad:	jl     0x41318f
  4131af:	push   cs
  4131b0:	fisttp WORD PTR [edi]
  4131b2:	gs ja  0x4131ad
  4131b5:	aam    0x96
  4131b7:	jne    0x68e2b93d
  4131bd:	jmp    0xc72bc6e8
  4131c2:	int    0x1d
  4131c4:	xor    BYTE PTR [ecx-0x4e],0x8d
  4131c8:	sbb    al,0x22
  4131ca:	jl     0x4131ae
  4131cc:	sbb    edi,DWORD PTR [ecx]
  4131ce:	mov    ah,BYTE PTR [edi-0x56e36843]
  4131d4:	sahf   
  4131d5:	add    BYTE PTR [ebp-0x70],dh
  4131d8:	aaa    
  4131d9:	push   esp
  4131da:	ret    0x45af
  4131dd:	aaa    
  4131de:	stc    
  4131df:	pop    ebp
  4131e0:	inc    ecx
  4131e1:	(bad)  
  4131e2:	jmp    0x413247
  4131e4:	or     ebp,edi
  4131e6:	les    esi,FWORD PTR [ecx+0x68]
  4131e9:	es dec edx
  4131eb:	movntq QWORD PTR [ecx],mm2
  4131ee:	popf   
  4131ef:	lds    edi,FWORD PTR [eax+0x380170c2]
  4131f5:	mov    esp,0x2db881bf
  4131fa:	scas   eax,DWORD PTR es:[edi]
  4131fb:	inc    eax
  4131fc:	xchg   ebx,eax
  4131fd:	jmp    0xa77d7fea
  413202:	mov    ch,ch
  413204:	fdivr  st(1),st
  413207:	jnp    0x413283
  413209:	das    
  41320a:	xchg   edi,eax
  41320b:	sbb    eax,0x2b9e78dc
  413210:	mov    ds:0x73797f16,eax
  413215:	xor    ah,BYTE PTR [ebx+0x66c53707]
  41321b:	call   0xafc9:0x77e65385
  413222:	lods   eax,DWORD PTR ds:[esi]
  413223:	mov    BYTE PTR [edi],dh
  413225:	stos   BYTE PTR es:[edi],al
  413226:	stos   DWORD PTR es:[edi],eax
  413227:	ss jge 0x41326a
  41322a:	cs sahf 
  41322c:	and    al,cl
  41322e:	loop   0x413224
  413230:	retf   0x6184
  413233:	dec    eax
  413234:	(bad)  
  413235:	cmp    eax,DWORD PTR [edi-0x79]
  413238:	sub    bl,dh
  41323a:	jmp    0x5093f2c
  41323f:	imul   esi,DWORD PTR [eax-0x614f9053],0xcc81e8b4
  413249:	shl    dl,0x15
  41324c:	xor    al,0x2
  41324e:	ret    0xd6c8
  413251:	pop    esp
  413252:	add    eax,0xe85e3e64
  413257:	adc    DWORD PTR ss:[esi+0x3e],ebx
  41325b:	scas   al,BYTE PTR es:[edi]
  41325c:	mov    bh,0x9a
  41325e:	cmp    ebx,0xe3823160
  413264:	mov    WORD PTR [edi+0x2d79c69e],ds
  41326a:	mov    ebp,0x59dd11b1
  41326f:	shl    DWORD PTR [ebx-0x71d634b6],cl
  413275:	in     al,0x41
  413277:	rol    BYTE PTR [ecx-0x34e14f39],1
  41327d:	call   0x9dccb1e4
  413282:	mov    ebp,0x7cae4d6c
  413287:	add    DWORD PTR [edx-0x26743f77],eax
  41328d:	adc    bh,BYTE PTR [esi+0x4c]
  413290:	add    al,0x3d
  413292:	mov    WORD PTR [ebp+0x4e],?
  413295:	shl    DWORD PTR [ebp-0x42],cl
  413298:	adc    ecx,DWORD PTR [ebx-0x518d632b]
  41329e:	pushf  
  41329f:	pop    ss
  4132a0:	clc    
  4132a1:	push   ebx
  4132a2:	stos   BYTE PTR es:[edi],al
  4132a3:	sti    
  4132a4:	xchg   ebp,eax
  4132a5:	ds and ah,dh
  4132a8:	xchg   ecx,eax
  4132a9:	xchg   ecx,ebx
  4132ab:	push   edi
  4132ac:	shr    edx,0x7d
  4132af:	jb     0x4132f5
  4132b1:	and    esp,ebx
  4132b3:	add    al,dl
  4132b5:	js     0x413329
  4132b7:	dec    edx
  4132b8:	sbb    eax,0x36c0942d
  4132bd:	rcl    DWORD PTR [eax-0x2722608a],cl
  4132c3:	ja     0x413264
  4132c5:	pop    edx
  4132c6:	aad    0x97
  4132c8:	xor    eax,0xcb0e4727
  4132cd:	jnp    0x413344
  4132cf:	int    0x73
  4132d1:	push   ebp
  4132d2:	inc    ebp
  4132d3:	ins    DWORD PTR es:[edi],dx
  4132d4:	out    dx,al
  4132d5:	repz imul eax,esi,0xffffffa1
  4132d9:	push   eax
  4132da:	jmp    0x41333c
  4132dc:	enter  0x8232,0x80
  4132e0:	ror    ch,cl
  4132e2:	jnp    0x41329a
  4132e4:	ret    
  4132e5:	add    DWORD PTR [eax+0x37ac5417],eax
  4132eb:	mov    ah,0x3d
  4132ed:	mov    ecx,DWORD PTR [ebp-0x2ccddc60]
  4132f3:	adc    esi,edx
  4132f5:	sub    eax,0xf8e2dc1c
  4132fa:	std    
  4132fb:	retf   
  4132fc:	adc    eax,0xf9758670
  413301:	fiadd  DWORD PTR [edi+0x12198ba9]
  413307:	lea    ebx,[ebx]
  413309:	in     al,dx
  41330a:	popf   
  41330b:	les    ebx,FWORD PTR [esi-0x32]
  41330e:	pop    ds
  41330f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413310:	adc    eax,DWORD PTR [edi+edi*8+0x3c]
  413314:	pop    edx
  413315:	ds (bad) 
  413317:	sbb    al,0x16
  413319:	and    DWORD PTR [ebp+ecx*2+0x53a9113],ebx
  413320:	in     eax,dx
  413321:	dec    eax
  413322:	xchg   esp,eax
  413323:	cli    
  413324:	into   
  413325:	fcomp  DWORD PTR [esi-0x12]
  413328:	out    0x1c,eax
  41332a:	inc    esi
  41332b:	loop   0x413366
  41332d:	cld    
  41332e:	inc    ecx
  41332f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413330:	test   BYTE PTR [esi-0x67],ah
  413333:	sub    DWORD PTR [ebx],edx
  413335:	xor    eax,DWORD PTR [edx]
  413337:	pop    eax
  413338:	or     bl,BYTE PTR [esi-0x6d]
  41333b:	sbb    bx,WORD PTR [eax+0x7ebf622b]
  413342:	inc    ecx
  413343:	mov    esp,0x2ec88808
  413348:	dec    edi
  413349:	push   ds
  41334a:	ds cdq 
  41334c:	adc    al,0x9
  41334e:	sub    al,BYTE PTR [edx+0x6e2d717]
  413354:	lock pop esp
  413356:	mov    ebp,0xc31e76a6
  41335b:	and    al,BYTE PTR [eax+0x44]
  41335e:	into   
  41335f:	out    dx,al
  413360:	fimul  WORD PTR [edi+ebp*4+0x643e0b36]
  413367:	shl    DWORD PTR [edx],0xfd
  41336a:	xchg   edi,eax
  41336b:	imul   esi,DWORD PTR [ecx-0x1b],0xffffffa0
  41336f:	out    dx,al
  413370:	jmp    0x35162bf2
  413375:	pop    esp
  413376:	repnz adc eax,0x40cd43dd
  41337c:	aaa    
  41337d:	sub    ebp,DWORD PTR [ebx+0x35dfcd2d]
  413383:	cmp    eax,0xc94765cd
  413388:	pusha  
  413389:	cmc    
  41338a:	mov    al,0xfe
  41338c:	lahf   
  41338d:	adc    cl,BYTE PTR [esi-0x12]
  413390:	stos   BYTE PTR es:[edi],al
  413391:	test   DWORD PTR [ebp-0x74],edi
  413394:	repz pop ds
  413396:	jl     0x413321
  413398:	test   eax,0x57f6c918
  41339d:	scas   al,BYTE PTR es:[edi]
  41339e:	inc    edx
  41339f:	and    DWORD PTR [edi],edi
  4133a1:	sub    dl,cl
  4133a3:	imul   edx,DWORD PTR [ebx+edx*4-0x4c506f4c],0x14cad0c2
  4133ae:	inc    ebp
  4133af:	cdq    
  4133b0:	out    0x7a,al
  4133b2:	rcr    bl,cl
  4133b4:	scas   al,BYTE PTR es:[edi]
  4133b5:	sbb    edx,DWORD PTR [esi-0x25]
  4133b8:	pop    ds
  4133b9:	sub    dh,BYTE PTR [ebx]
  4133bb:	xchg   edi,eax
  4133bc:	cli    
  4133bd:	(bad)  [ebx*2-0x22517216]
  4133c4:	hlt    
  4133c5:	adc    esp,DWORD PTR [ebp+ebp*8-0x5aca1dd]
  4133cc:	jg     0x41335f
  4133ce:	fild   DWORD PTR [edi]
  4133d0:	stos   DWORD PTR es:[edi],eax
  4133d1:	xor    eax,0x4e99353e
  4133d6:	std    
  4133d7:	push   esp
  4133d8:	sbb    al,0x3a
  4133da:	sbb    eax,0x98fc5ee2
  4133df:	cmp    cl,dh
  4133e1:	mov    ch,0x9f
  4133e3:	push   ds
  4133e4:	(bad)  
  4133e6:	jl     0x41342b
  4133e8:	xor    DWORD PTR [eax-0x1a583918],0xffffffa2
  4133ef:	shl    BYTE PTR [ebx-0x4e],cl
  4133f2:	or     eax,DWORD PTR [eax]
  4133f4:	add    ecx,DWORD PTR [ecx+0x3b7ae2f6]
  4133fa:	pop    ebx
  4133fc:	aad    0xea
  4133fe:	push   eax
  4133ff:	shl    edx,0xe9
  413402:	pop    ebp
  413403:	mov    al,0x37
  413405:	jle    0x4133fc
  413407:	retf   0xfb7e
  41340a:	and    eax,0x765b267f
  41340f:	(bad)  
  413410:	jmp    0x6eb2:0x395f8539
  413417:	outs   dx,DWORD PTR ds:[esi]
  413418:	repz das 
  41341a:	sbb    BYTE PTR ds:0xf50b1e5,dl
  413420:	dec    esp
  413421:	cwde   
  413422:	mov    WORD PTR [eax],gs
  413424:	fldcw  WORD PTR [ebp-0x5fc3cd31]
  41342a:	(bad)  
  41342c:	rcr    DWORD PTR ds:0x59faa975,cl
  413432:	dec    eax
  413433:	jg     0x413435
  413435:	cmc    
  413436:	pop    ss
  413437:	add    al,0xe7
  413439:	call   0x4804:0xef1860e9
  413440:	jbe    0x4134a8
  413442:	cs stc 
  413444:	adc    BYTE PTR [edx+0x6047c478],0xc3
  41344b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41344c:	repz repz cwde 
  41344f:	xchg   ecx,eax
  413450:	push   esi
  413451:	in     eax,0x9c
  413453:	aad    0xd9
  413455:	fadd   DWORD PTR [eax]
  413457:	xor    eax,0xd6f62503
  41345c:	and    al,0xa2
  41345e:	mov    bl,0xb7
  413460:	add    esp,DWORD PTR ds:0xe214b3ae
  413466:	add    BYTE PTR [esi-0xdfa7c19],bl
  41346c:	ficomp WORD PTR [edx+esi*1-0x51]
  413470:	jmp    0xc3c2:0xcd2695e
  413477:	vmaxss xmm7,xmm4,DWORD PTR [edi]
  41347b:	popf   
  41347c:	call   0x2a6b:0x812a8b1b
  413483:	mov    DWORD PTR [eax-0x66],edi
  413486:	adc    BYTE PTR [ebx],0xe4
  413489:	enter  0xd97e,0xed
  41348d:	mov    esi,esp
  41348f:	out    0xbf,eax
  413491:	(bad)  
  413492:	jmp    0x1a2404ce
  413497:	inc    eax
  413498:	fild   QWORD PTR [ebx]
  41349a:	xchg   ecx,eax
  41349b:	cmp    eax,0x8321ef7f
  4134a0:	aaa    
  4134a1:	adc    DWORD PTR [ebx+0x3fe69a4d],edx
  4134a7:	aam    0x3f
  4134a9:	and    edi,DWORD PTR [ebx]
  4134ab:	mov    al,0x53
  4134ad:	adc    eax,0xf34e5be8
  4134b2:	mov    eax,0x73d8b6bb
  4134b7:	sub    DWORD PTR [ebp+0x65],esp
  4134ba:	xchg   edi,eax
  4134bc:	fidivr DWORD PTR [ecx]
  4134be:	imul   esi,DWORD PTR [ecx],0xcc2ab145
  4134c4:	push   es
  4134c5:	xor    dh,BYTE PTR [ecx+esi*2-0x66]
  4134c9:	jmp    0x413496
  4134cb:	ins    BYTE PTR es:[edi],dx
  4134cc:	or     dh,al
  4134ce:	lods   al,BYTE PTR ds:[esi]
  4134cf:	mov    bl,0xc8
  4134d1:	repnz pop ss
  4134d3:	sar    DWORD PTR [ecx-0x33],cl
  4134d6:	cmp    al,0x8c
  4134d8:	sbb    edx,eax
  4134da:	les    esi,FWORD PTR [ebx]
  4134dc:	jae    0x413492
  4134de:	fidiv  DWORD PTR [ebp+0x3dc06b89]
  4134e4:	stos   DWORD PTR es:[edi],eax
  4134e5:	mov    cs,eax
  4134e7:	mov    DWORD PTR [ebx-0x7b],edx
  4134ea:	dec    esp
  4134eb:	das    
  4134ec:	push   ecx
  4134ed:	mov    ecx,0x9cee1925
  4134f2:	shl    BYTE PTR [esi],0x66
  4134f5:	scas   eax,DWORD PTR es:[edi]
  4134f6:	dec    edi
  4134f7:	iret   
  4134f8:	sub    eax,0xe809a72c
  4134fd:	adc    DWORD PTR [ebp-0x47028bda],ebp
  413503:	push   0xffffff93
  413505:	sbb    BYTE PTR [ecx],ch
  413507:	loopne 0x41349b
  413509:	mov    eax,0x9e2dda08
  41350e:	sub    eax,0x88e22f58
  413513:	loope  0x413538
  413515:	pop    esi
  413516:	int3   
  413517:	pop    esi
  413518:	daa    
  413519:	adc    al,0x1c
  41351b:	test   eax,0xc12cb48a
  413520:	mov    edx,0xaf5221b9
  413525:	add    esi,esp
  413527:	mov    edi,0x86ac7d1c
  41352c:	dec    edi
  41352d:	and    BYTE PTR ds:0x17f4a2eb,0xa3
  413534:	xchg   ecx,eax
  413535:	cs dec eax
  413537:	xlat   BYTE PTR ds:[ebx]
  413538:	pop    eax
  413539:	std    
  41353a:	xchg   ecx,eax
  41353b:	sub    BYTE PTR [esi],dh
  41353d:	inc    eax
  41353e:	lds    esi,FWORD PTR [edx+0x5b]
  413541:	jp     0x4135a1
  413543:	test   bh,cl
  413545:	hlt    
  413546:	or     DWORD PTR [edi+0x66],esp
  413549:	and    DWORD PTR [ebp-0x75],ecx
  41354c:	loopne 0x413564
  41354e:	jae    0x4135a6
  413550:	sub    BYTE PTR [edx+0x5cbdc4f0],ah
  413556:	fldcw  WORD PTR [eax-0x6d]
  413559:	(bad)  
  41355a:	xor    bh,BYTE PTR [esp+eiz*4+0x6beafd3a]
  413561:	(bad)  
  413562:	cmc    
  413563:	in     eax,dx
  413564:	fdivr  DWORD PTR [ebx-0x2d84123d]
  41356a:	loopne 0x413569
  41356c:	dec    edx
  41356d:	or     edi,DWORD PTR [edx+esi*8+0x6a]
  413571:	xor    BYTE PTR [esi],ah
  413573:	inc    eax
  413574:	xor    esp,esi
  413576:	adc    eax,0xbc5d880a
  41357b:	lock jmp 0xf715:0xff181afa
  413583:	or     bh,cl
  413585:	xor    al,0xc7
  413587:	test   BYTE PTR [ebx+0x36],bl
  41358a:	shl    BYTE PTR [esi-0xb],0xee
  41358e:	js     0x4135bf
  413590:	xchg   edx,eax
  413591:	jecxz  0x41355c
  413593:	fstp   DWORD PTR [edx+0x4b]
  413596:	sbb    ch,cl
  413598:	icebp  
  413599:	lahf   
  41359a:	jmp    0x413528
  41359c:	imul   esp,DWORD PTR [edi-0x33],0xffffffd9
  4135a0:	push   es
  4135a1:	jnp    0x413584
  4135a3:	stos   BYTE PTR es:[edi],al
  4135a4:	adc    ah,BYTE PTR [ebx-0x521677ab]
  4135aa:	jne    0x4135a7
  4135ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135ad:	mov    eax,0xb84034d4
  4135b2:	pop    edx
  4135b3:	push   cs
  4135b4:	call   0xd817:0x7882c68c
  4135bb:	(bad)  
  4135bc:	mov    ebx,0x6dbafcc3
  4135c1:	mov    dh,0x29
  4135c3:	xor    eax,0x23718318
  4135c8:	lods   eax,DWORD PTR ds:[esi]
  4135c9:	sub    edx,DWORD PTR [ebx-0x379d42f]
  4135cf:	cmp    dl,BYTE PTR [eax]
  4135d1:	mov    DWORD PTR [edx+0xf],edx
  4135d4:	and    ch,BYTE PTR [edi+0x71]
  4135d7:	daa    
  4135d8:	bnd jge 0x413623
  4135db:	clc    
  4135dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135dd:	xchg   edi,eax
  4135de:	(bad)  
  4135df:	fst    QWORD PTR [esi-0x48]
  4135e2:	dec    esp
  4135e3:	or     eax,0x5e1768aa
  4135e8:	cli    
  4135e9:	addr16 and al,0x32
  4135ec:	cmp    eax,0xe32bb1f9
  4135f1:	test   DWORD PTR [ecx+esi*4+0x77523a3a],edx
  4135f8:	ret    
  4135f9:	add    DWORD PTR [ecx+0x2a6b7c02],esi
  4135ff:	push   esp
  413600:	push   eax
  413601:	jge    0x4135b2
  413603:	cld    
  413604:	mov    esi,0xfa2a5aa9
  413609:	pop    bp
  41360b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41360c:	push   ss
  41360d:	pop    edi
  41360e:	xor    BYTE PTR [eax+0x50],al
  413611:	or     ebp,edx
  413613:	inc    esi
  413614:	popa   
  413615:	jne    0x413641
  413617:	cmp    BYTE PTR [ecx+ebp*1],bh
  41361a:	pop    ebx
  41361b:	test   eax,0xc0fece7a
  413620:	mov    ebx,0x2e97b51f
  413625:	jb     0x4136a4
  413627:	xor    bh,BYTE PTR [edi]
  413629:	cli    
  41362a:	retf   0x7cfe
  41362d:	adc    eax,DWORD PTR [eax-0x5868f0ed]
  413633:	test   BYTE PTR [eax],dh
  413635:	(bad)  
  413636:	fdivr  st,st(0)
  413638:	mov    esi,0xefc28a82
  41363d:	sbb    eax,0x871bfce1
  413642:	mov    al,0x78
  413644:	(bad)  
  413645:	out    0x45,eax
  413647:	push   edx
  413648:	push   esp
  413649:	pop    edx
  41364a:	jg     0x413682
  41364c:	mov    al,0x47
  41364e:	mov    eax,ds:0xbcfcb2a0
  413653:	mov    cl,0x28
  413655:	pop    ecx
  413656:	adc    al,0x81
  413658:	lock sub DWORD PTR cs:[ebx+0x6bdcdd0e],edx
  413660:	dec    ebp
  413661:	sahf   
  413662:	das    
  413663:	retf   
  413664:	leave  
  413665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413666:	daa    
  413667:	inc    ebx
  413668:	and    ah,ch
  41366a:	data16 aaa 
  41366c:	(bad)  
  41366e:	pop    ebx
  41366f:	cmp    BYTE PTR [ecx+0x1857ea4b],bh
  413675:	test   BYTE PTR [ebp+0x3438c639],dh
  41367b:	adc    al,0xd8
  41367d:	out    0x2b,al
  41367f:	pop    eax
  413680:	in     al,0xf8
  413682:	cmp    bl,BYTE PTR [esi+0x18]
  413685:	imul   eax,DWORD PTR [edi*8-0xb4d3e61],0xffffff89
  41368d:	pop    eax
  41368e:	pushf  
  41368f:	in     eax,dx
  413690:	xchg   edx,eax
  413691:	lods   eax,DWORD PTR ds:[esi]
  413692:	pop    ebp
  413693:	rol    BYTE PTR [ebp-0x54edd0ec],cl
  413699:	cmp    al,0x31
  41369b:	es ds jb 0x4136f2
  41369f:	jp     0x413663
  4136a1:	mov    edx,0xed55aa74
  4136a6:	xor    al,0x8e
  4136a8:	and    ebx,eax
  4136aa:	addr16 jne 0x413681
  4136ad:	or     DWORD PTR [esi],esp
  4136af:	add    DWORD PTR [edi-0x68],eax
  4136b2:	sbb    BYTE PTR [ebx-0x48c0c07f],al
  4136b8:	jbe    0x413694
  4136ba:	ss into 
  4136bc:	gs inc ebp
  4136be:	inc    esi
  4136bf:	in     al,dx
  4136c0:	retf   0x4422
  4136c3:	inc    ecx
  4136c4:	pop    edx
  4136c5:	cld    
  4136c6:	(bad)  
  4136c7:	mov    al,0x67
  4136c9:	and    al,0x61
  4136cb:	pop    esp
  4136cc:	mov    edx,0x93825d4
  4136d1:	cmp    DWORD PTR [edi+0x497b80a2],ecx
  4136d7:	inc    esp
  4136d8:	push   cs
  4136d9:	js     0x4136cf
  4136db:	mov    WORD PTR [eax+ebp*2],cs
  4136de:	lahf   
  4136df:	ret    
  4136e0:	imul   ecx,DWORD PTR [ebp-0x74],0xaf5ce8d1
  4136e7:	pop    esp
  4136e8:	push   ecx
  4136e9:	or     eax,0xecffe55a
  4136ee:	mov    esp,0x8d40bdeb
  4136f3:	push   eax
  4136f4:	add    bl,bh
  4136f6:	les    ecx,FWORD PTR [esi]
  4136f8:	and    bh,al
  4136fa:	aaa    
  4136fb:	dec    ebp
  4136fc:	mov    eax,ds:0xa9ecbbd3
  413701:	dec    ecx
  413702:	retf   0x5287
  413705:	(bad)  
  413706:	shl    BYTE PTR [eax-0x76df3d47],cl
  41370c:	jmp    0xd5fe9b94
  413711:	sbb    DWORD PTR [eiz*4-0x179e9063],ebx
  413718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413719:	enter  0x5e08,0x8f
  41371d:	jae    0x413738
  41371f:	jbe    0x41374a
  413721:	cmp    BYTE PTR [ebx+esi*2-0x42d177da],al
  413728:	pop    ebx
  413729:	pushf  
  41372a:	sub    ch,dl
  41372c:	daa    
  41372d:	fcomp  DWORD PTR [esi+0x40]
  413730:	or     esi,DWORD PTR [edx]
  413732:	mov    ebp,0x3396816f
  413737:	or     eax,0x8e3d48be
  41373c:	or     BYTE PTR [edi+eax*1-0x62],cl
  413740:	addr16 jl 0x4137b8
  413743:	sti    
  413744:	pushf  
  413745:	outs   dx,DWORD PTR ds:[esi]
  413746:	clc    
  413747:	pop    ss
  413748:	bound  eax,QWORD PTR [ecx-0xf881236]
  41374e:	inc    ebx
  41374f:	inc    edi
  413750:	jb     0x4136f0
  413752:	push   ds
  413753:	sbb    BYTE PTR [edi-0x31],bh
  413756:	stos   BYTE PTR es:[edi],al
  413757:	xor    eax,0xa59b5abd
  41375c:	mov    bh,0x5e
  41375e:	jl     0x4136e6
  413760:	fwait
  413761:	pop    ecx
  413762:	adc    eax,0x26ffe6f
  413767:	cmp    BYTE PTR [eax+0x41],cl
  41376a:	sbb    BYTE PTR [ebx-0x286ddced],0x5d
  413771:	fdivr  QWORD PTR fs:[esi]
  413774:	gs xor ebx,ebx
  413777:	int    0x92
  413779:	mov    fs,WORD PTR [ecx-0x1e]
  41377c:	xor    DWORD PTR [esi-0x442c75c9],ebp
  413782:	mov    WORD PTR [ecx+0x54],es
  413785:	sub    ah,BYTE PTR [ecx+0x30]
  413788:	sbb    eax,0x3bae8404
  41378d:	cmp    eax,0x2a3a57c1
  413792:	cmp    BYTE PTR [ecx+edx*4-0x45],ch
  413796:	mov    DWORD PTR [eax-0xdca4ba8],edi
  41379c:	daa    
  41379d:	xchg   edx,eax
  41379e:	pop    edi
  41379f:	xchg   esp,eax
  4137a0:	adc    esp,DWORD PTR [ebx]
  4137a2:	jmp    0x2c9d6faf
  4137a7:	sub    dh,BYTE PTR [edx+0x199f0863]
  4137ad:	out    0x2f,eax
  4137af:	pop    ebp
  4137b0:	imul   edx,DWORD PTR [ecx-0x5bc2e453],0xffffffdb
  4137b7:	add    edx,edi
  4137b9:	ror    BYTE PTR [eax+ebx*8+0x486be011],cl
  4137c0:	push   ds
  4137c1:	hlt    
  4137c2:	(bad)  
  4137c3:	(bad)  
  4137c4:	and    eax,edx
  4137c6:	add    BYTE PTR [edi],ch
  4137c8:	fwait
  4137c9:	(bad)  
  4137ca:	pop    ebp
  4137cb:	mov    edi,0x641a3dc4
  4137d0:	mov    ds:0xa9c911d3,eax
  4137d5:	iret   
  4137d6:	adc    DWORD PTR [ebp+0x123c90d],edx
  4137dc:	test   al,0xc9
  4137de:	cs sti 
  4137e0:	jg     0x413861
  4137e2:	cmp    edi,ebx
  4137e4:	push   edx
  4137e5:	retf   
  4137e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137e7:	mov    gs,WORD PTR [ecx-0xefff365]
  4137ed:	in     eax,dx
  4137ee:	iret   
  4137ef:	fdiv   QWORD PTR [eax+0x1b]
  4137f2:	pop    ebp
  4137f3:	adc    eax,0x37bdcab
  4137f8:	std    
  4137f9:	inc    ecx
  4137fa:	lods   al,BYTE PTR ds:[esi]
  4137fb:	fwait
  4137fc:	int3   
  4137fd:	cmp    ecx,DWORD PTR [edx]
  4137ff:	sub    ebp,eax
  413801:	les    ebx,FWORD PTR [ebx-0x26d2aee]
  413807:	mov    dl,0xf8
  413809:	gs icebp 
  41380b:	fs (bad) 
  41380d:	aam    0x1
  41380f:	(bad)  
  413810:	jg     0x4137db
  413812:	xor    eax,DWORD PTR [ecx]
  413814:	push   cs
  413815:	test   BYTE PTR [eax-0xd],0x75
  413819:	mov    bl,0x12
  41381b:	adc    ah,BYTE PTR [eax+eax*4]
  41381e:	dec    ebp
  41381f:	mov    DWORD PTR [ecx+edi*1],edx
  413822:	xor    BYTE PTR [ecx],cl
  413824:	pop    ebp
  413825:	cli    
  413826:	ror    DWORD PTR [ecx+eiz*4],1
  413829:	mov    esp,0x5e4240a4
  41382e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41382f:	push   0xe7d35481
  413834:	cs ja  0x4137c4
  413837:	or     esi,DWORD PTR [eax]
  413839:	mov    ah,0x2e
  41383c:	mov    WORD PTR [edx+0x4d],?
  41383f:	xchg   edi,eax
  413840:	idiv   edx
  413842:	enter  0xa5d4,0xbb
  413846:	fisub  WORD PTR [edi+0x53]
  413849:	lahf   
  41384a:	add    al,0x42
  41384c:	mov    ah,dh
  41384e:	jb     0x4138a6
  413850:	retf   
  413851:	inc    ebx
  413852:	fild   QWORD PTR [ebx+0x410c1a3a]
  413858:	jb     0x413883
  41385a:	mov    ecx,0x7a7a924
  41385f:	pop    esi
  413860:	jecxz  0x41383a
  413862:	jno    0x41383d
  413864:	retf   
  413865:	aad    0xfd
  413867:	adc    BYTE PTR [edx-0x3c],dh
  41386a:	hlt    
  41386b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41386c:	push   ebx
  41386d:	sbb    al,0x93
  41386f:	xlat   BYTE PTR ds:[ebx]
  413870:	ss add eax,0x1851cd22
  413876:	mov    ah,0xbd
  413878:	mov    eax,0x9d2c2799
  41387d:	jecxz  0x4138de
  41387f:	ror    DWORD PTR [ebp+edi*1+0x44abce3b],1
  413886:	mov    ah,0x25
  413888:	ja     0x4138b8
  41388a:	xchg   ebp,eax
  41388b:	pop    esp
  41388c:	sbb    al,BYTE PTR es:[ebp+ebx*2+0x24]
  413891:	fdivr  DWORD PTR [eax+0x2d64c7ac]
  413897:	pusha  
  413898:	push   es
  413899:	dec    edi
  41389a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41389b:	xor    eax,esp
  41389d:	xlat   BYTE PTR ds:[ebx]
  41389e:	or     BYTE PTR [esi-0x17c17053],cl
  4138a4:	dec    esi
  4138a5:	dec    edi
  4138a6:	mov    eax,0xbfa83c04
  4138ab:	bound  edx,QWORD PTR [esi]
  4138ad:	or     DWORD PTR [esp+ebp*4-0x2f4e3393],eax
  4138b4:	or     DWORD PTR [ecx],0xb1b74cb8
  4138ba:	ret    
  4138bb:	cmp    dl,dl
  4138bd:	imul   DWORD PTR [eax+0x1ff11785]
  4138c3:	and    al,BYTE PTR [eax-0x536bfcc3]
  4138c9:	sbb    al,0x61
  4138cb:	cmp    dl,0xf2
  4138ce:	fucom  st(6)
  4138d0:	imul   edx,eax,0xd034bc2
  4138d6:	jbe    0x41386c
  4138d8:	xor    eax,esi
  4138da:	stc    
  4138db:	cmp    DWORD PTR [ebx],esp
  4138dd:	xor    al,0x8a
  4138df:	dec    esp
  4138e0:	rcl    DWORD PTR [esi-0x49],0x69
  4138e4:	daa    
  4138e5:	jne    0x4138f7
  4138e7:	shl    eax,1
  4138e9:	cmp    al,0x24
  4138eb:	fistp  QWORD PTR [edx]
  4138ed:	scas   al,BYTE PTR es:[edi]
  4138ee:	in     al,0xbc
  4138f0:	dec    eax
  4138f1:	in     eax,dx
  4138f2:	(bad)  
  4138f3:	ss sbb al,0x8
  4138f6:	xchg   esi,eax
  4138f7:	push   edx
  4138f8:	pop    es
  4138f9:	jns    0x413894
  4138fb:	(bad)  
  4138fc:	pop    esp
  4138fd:	popf   
  4138fe:	ret    0x9319
  413901:	adc    edi,DWORD PTR [eax-0x554821d3]
  413907:	fcom   st(0)
  413909:	jl     0x4138d5
  41390b:	fwait
  41390c:	push   ebp
  41390d:	lods   eax,DWORD PTR ds:[esi]
  41390e:	cdq    
  41390f:	jnp    0x413912
  413911:	aas    
  413912:	mov    ecx,0xb891ccd4
  413917:	cmp    bl,cl
  413919:	pop    eax
  41391a:	xor    ch,BYTE PTR [edi]
  41391c:	push   esi
  41391d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41391e:	fisub  DWORD PTR [esi]
  413920:	ret    0x1c94
  413923:	xchg   ecx,eax
  413924:	mov    esi,0xdb2c891
  413929:	xlat   BYTE PTR ds:[ebx]
  41392a:	cmp    eax,0xb34fac60
  41392f:	inc    edi
  413930:	pop    esp
  413931:	pop    esi
  413932:	jns    0x4138de
  413934:	shr    DWORD PTR [edx+0x17afa274],cl
  41393a:	mov    DWORD PTR [edi+0xf1dbea2],ebx
  413940:	adc    BYTE PTR [esi-0x1a1d25],bl
  413946:	sub    eax,0x5fb213f8
  41394b:	mov    ebp,0x24fa7d94
  413950:	pushf  
  413951:	or     DWORD PTR [ebx+0x64],esi
  413954:	push   0x18175da8
  413959:	sbb    ch,BYTE PTR [ebx]
  41395b:	pop    es
  41395c:	scas   al,BYTE PTR es:[edi]
  41395d:	push   ds
  41395e:	lahf   
  41395f:	xchg   esi,eax
  413960:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  413962:	adc    ah,BYTE PTR [ecx-0x2e76bfb0]
  413968:	cmp    ah,0x57
  41396b:	stos   DWORD PTR es:[edi],eax
  41396c:	push   DWORD PTR [eax+0x3bab51a5]
  413972:	or     esp,DWORD PTR [eax+0x23]
  413975:	shr    DWORD PTR [esi-0xb],cl
  413978:	lahf   
  413979:	pop    es
  41397a:	stc    
  41397b:	stos   BYTE PTR es:[edi],al
  41397c:	adc    BYTE PTR [edx+0x53e7b5f4],0x9
  413983:	dec    esp
  413984:	lods   eax,DWORD PTR ds:[esi]
  413985:	or     cl,BYTE PTR [ebx+0x66]
  413988:	gs pop ds
  41398a:	adc    BYTE PTR [eax-0x78cd2266],0x43
  413991:	cmp    BYTE PTR [esi],ch
  413993:	push   ds
  413994:	and    DWORD PTR [esi],ebx
  413996:	xor    cl,BYTE PTR [eax+0x71e69154]
  41399c:	js     0x413a0b
  41399e:	mov    ds:0x2163754c,al
  4139a3:	xchg   BYTE PTR [ebx],ch
  4139a5:	xor    al,0xf
  4139a7:	cmp    eax,0x905bf62
  4139ac:	or     BYTE PTR [ebx-0x52],al
  4139af:	push   ebp
  4139b0:	xchg   DWORD PTR [edx-0x3f3d553],ebx
  4139b6:	ins    DWORD PTR es:[edi],dx
  4139b7:	sub    DWORD PTR [edi+0x40],ebp
  4139ba:	inc    ecx
  4139bb:	dec    eax
  4139bc:	jnp    0x4139b6
  4139be:	in     eax,dx
  4139bf:	jo     0x41397f
  4139c1:	test   eax,0xcefe04e
  4139c6:	stos   DWORD PTR es:[edi],eax
  4139c7:	clc    
  4139c8:	fnstsw WORD PTR [ecx-0x50ced9c6]
  4139ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139cf:	inc    edx
  4139d0:	jmp    0x36ec:0x3afbf2f0
  4139d7:	mov    ebx,0xba07c8d2
  4139dc:	dec    ebx
  4139dd:	pop    esp
  4139de:	xor    ecx,DWORD PTR [edi+0x56]
  4139e1:	fs fwait
  4139e3:	jp     0x4139d7
  4139e5:	adc    BYTE PTR [edi],ah
  4139e7:	jmp    0x8e8c706f
  4139ec:	std    
  4139ed:	xor    esp,DWORD PTR [edi+0x220ed37b]
  4139f3:	or     eax,0x9a1d2a83
  4139f8:	lahf   
  4139f9:	test   eax,0x1fe073b2
  4139fe:	int3   
  4139ff:	(bad)  
  413a00:	mov    ebx,0x82600414
  413a05:	pop    edx
  413a06:	popf   
  413a07:	push   0x71
  413a09:	jae    0x4139d8
  413a0b:	inc    ecx
  413a0c:	es imul edx,ebp,0x7ee6d78e
  413a13:	fiadd  DWORD PTR [ebx-0x53]
  413a16:	mov    al,BYTE PTR [eax-0x3a]
  413a19:	cli    
  413a1a:	xchg   DWORD PTR [edi],ebp
  413a1c:	jcxz   0x413a80
  413a1f:	pop    ebx
  413a20:	and    BYTE PTR [edx+0x62e480ac],dh
  413a26:	push   esi
  413a27:	in     eax,dx
  413a28:	mov    ds:0xc010275e,al
  413a2d:	fisttp WORD PTR [eax-0x12462b85]
  413a33:	adc    al,0xc2
  413a35:	call   0xb36f:0x4132116b
  413a3c:	sbb    BYTE PTR ds:0x8d3d9e4a,cl
  413a42:	aas    
  413a43:	fild   DWORD PTR [esi+eax*8-0x32]
  413a47:	cdq    
  413a48:	xor    eax,ebp
  413a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a4b:	ret    0x16b5
  413a4e:	loop   0x413a9f
  413a50:	sar    BYTE PTR [ecx],cl
  413a52:	das    
  413a53:	sbb    BYTE PTR [ebx+0x75],0xa0
  413a57:	and    ebp,DWORD PTR [edi]
  413a59:	dec    eax
  413a5a:	rol    BYTE PTR [ebx-0x5b04ad],0xc
  413a61:	or     al,0x6a
  413a63:	shl    DWORD PTR [ebx],1
  413a65:	mov    al,0x4e
  413a67:	pop    esp
  413a68:	mov    ebx,0x25aed0cf
  413a6d:	int    0x2d
  413a6f:	(bad)  
  413a70:	sub    BYTE PTR [eax+ebx*8],dh
  413a73:	adc    ebp,DWORD PTR [ecx-0x72]
  413a76:	xchg   BYTE PTR [edx+0x16],bh
  413a79:	sti    
  413a7a:	aad    0x47
  413a7c:	xchg   cl,cl
  413a7e:	out    dx,al
  413a7f:	or     al,0x16
  413a81:	mov    ecx,0x40332103
  413a86:	adc    al,0xb9
  413a88:	cmp    edi,DWORD PTR [ecx-0x5efb89be]
  413a8e:	ror    DWORD PTR [edi],1
  413a90:	and    eax,0x9068da01
  413a95:	push   ss
  413a96:	in     eax,0xf4
  413a98:	push   es
  413a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a9a:	adc    ebx,esi
  413a9c:	adc    DWORD PTR [ecx-0x41801093],0xf95e2ce8
  413aa6:	cdq    
  413aa7:	(bad)  
  413aa8:	stc    
  413aa9:	fdiv   QWORD PTR [esi]
  413aab:	leave  
  413aac:	pusha  
  413aad:	xchg   edi,eax
  413aae:	stos   BYTE PTR es:[edi],al
  413aaf:	lods   eax,DWORD PTR ds:[esi]
  413ab0:	js     0x413ada
  413ab2:	sub    ecx,DWORD PTR [ebx+esi*2+0x67]
  413ab6:	popa   
  413ab7:	mov    ebp,0x96d7e07
  413abc:	test   al,0x9a
  413abe:	xor    ebx,edx
  413ac0:	push   ebx
  413ac1:	pop    ebx
  413ac2:	dec    esi
  413ac3:	outs   dx,BYTE PTR ds:[esi]
  413ac4:	dec    esp
  413ac5:	in     eax,dx
  413ac6:	pop    esp
  413ac7:	(bad)  
  413ac8:	push   0x74
  413aca:	into   
  413acb:	xchg   esi,eax
  413acc:	cmp    bl,BYTE PTR [esi+eiz*8+0x3b]
  413ad0:	mov    ebp,0xaee8f8d2
  413ad5:	mov    ds:0x25c228f7,al
  413ada:	imul   ebp,DWORD PTR [esi-0x7e],0x7d5a87f
  413ae1:	stos   DWORD PTR es:[edi],eax
  413ae2:	push   ebp
  413ae3:	(bad)  
  413ae4:	retf   0x37d2
  413ae7:	xor    bl,BYTE PTR [ebp+0x58]
  413aea:	imul   bx,di,0x3e40
  413aef:	push   0x10
  413af1:	enter  0xc3b5,0x43
  413af5:	test   BYTE PTR [eax-0x26],0xa8
  413af9:	mov    bl,0x25
  413afb:	enter  0x3ac1,0xf2
  413aff:	clc    
  413b00:	cmp    cl,bh
  413b02:	imul   ebp,DWORD PTR [ecx-0x3bc9a247],0xffffffb2
  413b09:	test   DWORD PTR [eax],ebp
  413b0b:	out    0x9f,eax
  413b0d:	out    0xcf,al
  413b0f:	psraw  mm5,QWORD PTR [eax]
  413b12:	pop    esi
  413b13:	and    DWORD PTR [ebx-0x1c],eax
  413b16:	arpl   WORD PTR [edx],si
  413b18:	sub    eax,0xa90acb36
  413b1d:	xchg   BYTE PTR ds:0x6fbe,bh
  413b22:	sahf   
  413b23:	push   esi
  413b24:	mov    ah,0x72
  413b26:	sbb    BYTE PTR [edi],0x8d
  413b29:	mov    al,0xcd
  413b2b:	fdiv   QWORD PTR [ebp-0x12]
  413b2e:	fs cld 
  413b30:	jmp    0x1f08e013
  413b35:	cmp    dl,BYTE PTR ds:0x632a0306
  413b3b:	jle    0x413b9e
  413b3d:	add    al,0xb8
  413b3f:	fnstsw WORD PTR [edi-0x4d]
  413b42:	test   al,0xb
  413b44:	and    eax,0xff6b1534
  413b49:	cmp    al,0xa1
  413b4b:	pop    esp
  413b4c:	mov    esp,0x60d262a7
  413b51:	mov    cl,0x35
  413b53:	jns    0x413aec
  413b55:	ss jb  0x413b50
  413b58:	dec    edi
  413b59:	dec    edx
  413b5a:	out    0xff,eax
  413b5c:	fisubr DWORD PTR [ecx+0x3b2793fd]
  413b62:	inc    ecx
  413b63:	popa   
  413b64:	fwait
  413b65:	push   edi
  413b66:	pop    ss
  413b67:	cli    
  413b68:	cmovbe ecx,DWORD PTR [eax]
  413b6b:	int3   
  413b6c:	adc    edx,DWORD PTR [edx+0x1f]
  413b6f:	mov    cl,0xc5
  413b71:	push   0x705bb765
  413b76:	add    al,0xbb
  413b78:	sbb    ebx,ecx
  413b7a:	pop    esp
  413b7b:	or     BYTE PTR [edi-0x29],ch
  413b7e:	gs mov ecx,0x11c96f92
  413b84:	ins    BYTE PTR es:[edi],dx
  413b85:	xor    BYTE PTR [edx],ah
  413b87:	push   edi
  413b88:	mul    BYTE PTR [ebp-0x57313a7d]
  413b8e:	jle    0x413b7b
  413b90:	out    0xcf,al
  413b92:	cwde   
  413b93:	jbe    0x413b61
  413b95:	and    ecx,edi
  413b97:	nop
  413b98:	pop    esi
  413b99:	add    esp,DWORD PTR [ebp+0x7a]
  413b9c:	pop    ebx
  413b9d:	push   0x4319b13a
  413ba2:	aam    0xc4
  413ba4:	mov    al,ds:0xddf0f71c
  413ba9:	bound  ebx,QWORD PTR [ecx-0x71956603]
  413baf:	mov    ch,0x1c
  413bb1:	xchg   ecx,eax
  413bb3:	xchg   ecx,eax
  413bb4:	mov    bh,0x98
  413bb6:	or     eax,0xee37c61d
  413bbb:	fs icebp 
  413bbd:	pop    esi
  413bbe:	sti    
  413bbf:	std    
  413bc0:	lds    esp,FWORD PTR [edi]
  413bc2:	adc    ebp,DWORD PTR [edi]
  413bc4:	int    0xc6
  413bc6:	pop    ss
  413bc7:	stos   DWORD PTR es:[edi],eax
  413bc8:	dec    ebp
  413bc9:	pmaxub mm4,QWORD PTR [edi-0x6]
  413bcd:	outs   dx,DWORD PTR ds:[esi]
  413bce:	lods   eax,DWORD PTR ds:[esi]
  413bcf:	jno    0x413b5a
  413bd1:	mov    al,ds:0x547e3566
  413bd6:	adc    BYTE PTR [ecx-0x5a916bc4],al
  413bdc:	bsr    ebp,DWORD PTR [eax+esi*1+0xa]
  413be1:	cmp    DWORD PTR [ebp+0x63],0x1fa5b4a5
  413be8:	add    al,0xf3
  413bea:	ror    BYTE PTR [ebx+0x74],0xc
  413bee:	ds mov edx,eax
  413bf1:	iret   
  413bf2:	aam    0x1d
  413bf4:	mov    ebp,0xe6fa2cbe
  413bf9:	sub    BYTE PTR [ebx],ah
  413bfb:	or     cl,BYTE PTR [edx]
  413bfd:	imul   ebp,DWORD PTR [eax-0x4dfc2485],0x8584a2a6
  413c07:	(bad)  
  413c08:	ret    
  413c09:	call   0xd36d:0x920d010
  413c10:	lods   al,BYTE PTR ds:[esi]
  413c11:	dec    edi
  413c12:	cwde   
  413c13:	push   ecx
  413c14:	sbb    DWORD PTR [edx-0x29],edi
  413c17:	dec    edx
  413c18:	outs   dx,BYTE PTR ds:[esi]
  413c19:	(bad)  
  413c1a:	rcr    BYTE PTR [ecx+ebx*8],cl
  413c1d:	loope  0x413bc6
  413c1f:	mov    ah,0xe
  413c21:	adc    eax,0x90f21c5a
  413c26:	icebp  
  413c27:	or     bl,BYTE PTR [esi-0x63]
  413c2a:	mov    dh,0x66
  413c2c:	(bad)  
  413c2d:	fistp  DWORD PTR [ebp-0x2fae24f2]
  413c33:	push   es
  413c34:	mov    eax,ds:0xf60a4e
  413c39:	addr16 mov ebx,0x55feb0d
  413c3f:	inc    ebx
  413c41:	into   
  413c42:	mov    al,ds:0x9bdbff7c
  413c47:	push   ebp
  413c48:	xchg   edx,eax
  413c49:	pop    edx
  413c4a:	mov    esi,0xea9b1887
  413c4f:	inc    esi
  413c50:	ss inc ebx
  413c52:	xchg   esi,eax
  413c53:	outs   dx,DWORD PTR ds:[esi]
  413c54:	scas   al,BYTE PTR es:[edi]
  413c55:	dec    ebx
  413c56:	cs cmc 
  413c58:	ror    BYTE PTR [edi+edi*1],0x61
  413c5c:	aam    0x83
  413c5e:	mov    al,ds:0x8336d946
  413c63:	sbb    eax,0x82f04f68
  413c68:	(bad)  
  413c69:	xchg   ecx,eax
  413c6a:	jl     0x413ca6
  413c6c:	jle    0x413bee
  413c6e:	int    0xd
  413c70:	(bad)  
  413c71:	clc    
  413c72:	(bad)  [esi]
  413c74:	xchg   DWORD PTR [edi+0x0],eax
  413c77:	outs   dx,BYTE PTR ds:[esi]
  413c78:	lods   eax,DWORD PTR ds:[esi]
  413c79:	imul   ebx,DWORD PTR [ecx],0x73c56c06
  413c7f:	loop   0x413c55
  413c81:	mov    ecx,ebx
  413c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c84:	pop    esp
  413c85:	in     al,0x8a
  413c87:	pop    ebp
  413c88:	sahf   
  413c89:	pop    eax
  413c8a:	stos   DWORD PTR es:[edi],eax
  413c8b:	in     al,dx
  413c8c:	push   ds
  413c8d:	dec    esp
  413c8e:	dec    ecx
  413c8f:	(bad)  
  413c90:	and    eax,0x2ef6fa68
  413c95:	jmp    0x4ef9:0xd6845ce7
  413c9c:	or     al,0xee
  413c9e:	or     edi,DWORD PTR [ebx]
  413ca0:	int    0x9d
  413ca2:	(bad)  
  413ca3:	fistp  WORD PTR [esi+0xe96215b]
  413ca9:	mov    edx,ss
  413cab:	in     eax,0xd4
  413cad:	push   edi
  413cae:	adc    eax,0xda30c7a7
  413cb3:	xor    DWORD PTR [edx-0x4528a7bf],esi
  413cb9:	mov    esp,0xec4e3d08
  413cbe:	sub    BYTE PTR [ebp+0x57],0x3f
  413cc2:	xchg   edx,eax
  413cc3:	adc    BYTE PTR [ecx+0x5dcb3a0a],ah
  413cc9:	popf   
  413cca:	data16 getsec 
  413ccd:	inc    ecx
  413cce:	in     eax,dx
  413ccf:	jae    0x413cdd
  413cd1:	mov    al,0x2b
  413cd3:	push   ebp
  413cd4:	jp     0x413c85
  413cd6:	loop   0x413d32
  413cd8:	push   ebx
  413cd9:	cli    
  413cda:	jne    0x413cd6
  413cdc:	pop    edx
  413cdd:	ins    DWORD PTR es:[edi],dx
  413cde:	xchg   esi,ebx
  413ce0:	cld    
  413ce1:	adc    bl,bl
  413ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ce4:	hlt    
  413ce5:	xor    DWORD PTR [eax+ecx*1],ebp
  413ce8:	jae    0x413ca1
  413cea:	add    ebx,DWORD PTR [ecx-0x7373adb3]
  413cf0:	sbb    eax,0xea5f7c9a
  413cf5:	add    dh,BYTE PTR [edi+eiz*2-0x16]
  413cf9:	cmc    
  413cfa:	mov    ch,0x98
  413cfc:	sub    al,0x2f
  413cfe:	call   0x4d0a:0x2cd073ed
  413d05:	sub    dl,0x42
  413d08:	sbb    al,0xe7
  413d0a:	repz mov ds:0x6e464f9b,al
  413d10:	xor    al,0x45
  413d12:	add    ch,ah
  413d14:	or     al,0xa2
  413d16:	stos   BYTE PTR es:[edi],al
  413d17:	jae    0x413ce3
  413d19:	adc    cl,BYTE PTR [eax-0x36c49a44]
  413d1f:	inc    ecx
  413d20:	jne    0x413d21
  413d22:	mov    edx,0x6e90b003
  413d27:	sub    eax,0x82694b
  413d2c:	aaa    
  413d2d:	in     eax,0x31
  413d2f:	mov    edi,0xb0dc2a25
  413d34:	shl    bh,cl
  413d36:	inc    edi
  413d37:	mov    bh,0xd4
  413d39:	xchg   edx,eax
  413d3a:	and    BYTE PTR [ebx+0x54],bh
  413d3d:	and    BYTE PTR [edi],0x79
  413d40:	and    BYTE PTR [ebp-0x2e],ch
  413d43:	mov    WORD PTR [edx],fs
  413d45:	xchg   BYTE PTR [eax+0x3e417d52],cl
  413d4b:	repnz add cl,dl
  413d4e:	adc    BYTE PTR [edi],cl
  413d50:	sbb    BYTE PTR [ebp-0x6b],0x73
  413d54:	clc    
  413d55:	fild   WORD PTR ss:[edi]
  413d58:	xor    esi,esi
  413d5a:	pop    ecx
  413d5b:	clc    
  413d5c:	dec    edi
  413d5d:	push   0x8d56037b
  413d62:	mov    ebx,0x6dcd31c0
  413d67:	mov    esi,0xb87b7ac8
  413d6c:	pushf  
  413d6d:	mov    BYTE PTR [edi],ah
  413d6f:	test   ah,dh
  413d71:	cwde   
  413d72:	std    
  413d73:	sub    al,0xe2
  413d75:	pop    ebp
  413d76:	jae    0x413d8e
  413d78:	push   eax
  413d79:	xchg   edi,eax
  413d7a:	dec    esp
  413d7b:	add    eax,0x74f18f8d
  413d80:	mov    ecx,esi
  413d82:	xor    ch,al
  413d84:	lea    esp,[ecx+0x35]
  413d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d88:	in     eax,dx
  413d89:	test   BYTE PTR [ebp-0x1e],al
  413d8c:	sub    bl,BYTE PTR [esi-0x2801e51]
  413d92:	mov    esi,0xfa1952a4
  413d97:	out    dx,al
  413d98:	test   al,0x5d
  413d9a:	retf   0xba6c
  413d9d:	pop    ebp
  413d9e:	daa    
  413d9f:	les    ebx,FWORD PTR [ebx+ecx*2]
  413da2:	call   DWORD PTR [ebx+0x4b34208f]
  413da8:	inc    edx
  413da9:	cld    
  413daa:	push   ds
  413dab:	call   0x8b90:0x10905248
  413db2:	stc    
  413db3:	dec    esp
  413db4:	int3   
  413db5:	inc    ecx
  413db6:	sub    al,0x14
  413db8:	fsubr  QWORD PTR [edx+0x7b2439a9]
  413dbe:	or     bl,BYTE PTR ds:0xfca43d3d
  413dc4:	aaa    
  413dc5:	test   BYTE PTR [esi+ebx*1],dh
  413dc8:	jmp    0x413d79
  413dca:	clc    
  413dcb:	ret    0x9422
  413dce:	xor    BYTE PTR [ecx+edx*8],bh
  413dd1:	loopne 0x413d9f
  413dd3:	retf   
  413dd4:	(bad)  
  413dd5:	retf   0xc491
  413dd8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413dda:	lea    esi,[ebx]
  413ddc:	jecxz  0x413d94
  413dde:	sahf   
  413ddf:	xor    BYTE PTR [esi-0x650a2321],dh
  413de5:	push   ebx
  413de6:	xchg   edx,eax
  413de7:	aam    0xc4
  413de9:	call   0x89917cda
  413dee:	clc    
  413def:	lahf   
  413df0:	jns    0x413d99
  413df2:	sub    esp,edi
  413df4:	in     al,dx
  413df5:	jne    0x413d88
  413df7:	sub    DWORD PTR [ecx-0x12],edi
  413dfa:	mov    esi,0xa1f6b8a5
  413dff:	cmc    
  413e00:	jae    0x413dcb
  413e02:	push   ds
  413e03:	cmp    ecx,0x3543833a
  413e09:	pop    esi
  413e0a:	jb     0x413df2
  413e0c:	fmul   QWORD PTR [ecx+0xa7062e1]
  413e12:	mov    ecx,0xae265f2f
  413e17:	and    BYTE PTR fs:[esi+0x12],bl
  413e1b:	test   cl,al
  413e1d:	(bad)  
  413e1e:	jnp    0x413e70
  413e20:	mov    bl,0x85
  413e22:	and    al,0x44
  413e24:	adc    DWORD PTR [ebp-0x455b35a1],ebx
  413e2a:	pop    ecx
  413e2b:	xlat   BYTE PTR ds:[ebx]
  413e2c:	add    DWORD PTR [esp+eax*1+0x604fd916],edx
  413e33:	test   BYTE PTR ds:0xa25bf5f5,dh
  413e39:	dec    ebp
  413e3a:	push   ebp
  413e3b:	pop    es
  413e3c:	jbe    0x413eb8
  413e3e:	clc    
  413e3f:	xor    BYTE PTR [edi+0x46],0x1f
  413e43:	in     al,0x9f
  413e45:	lds    ebp,FWORD PTR [ebx]
  413e47:	dec    ecx
  413e48:	lds    edi,FWORD PTR [eax]
  413e4a:	mov    bl,0x4e
  413e4c:	adc    dl,BYTE PTR [ecx-0x11f0636d]
  413e52:	jmp    0x413e63
  413e54:	xchg   ebp,eax
  413e55:	mov    ecx,0xc21a87b
  413e5a:	in     al,dx
  413e5b:	sbb    bl,BYTE PTR [ecx+0x38]
  413e5e:	lods   eax,DWORD PTR ds:[esi]
  413e5f:	mov    edi,0x74753077
  413e64:	out    dx,al
  413e65:	push   ecx
  413e66:	dec    eax
  413e67:	pop    ecx
  413e68:	js     0x413e8d
  413e6a:	pushf  
  413e6b:	and    DWORD PTR [edi+0x24],0x117f1f2f
  413e72:	retf   
  413e73:	cmp    al,0x30
  413e75:	and    ch,BYTE PTR [edx-0x650c1b9f]
  413e7b:	cmp    DWORD PTR [edx-0x8c10bdf],ebx
  413e81:	cmp    BYTE PTR [esi],ah
  413e83:	aas    
  413e84:	int    0x89
  413e86:	int    0x4a
  413e88:	xchg   ebp,eax
  413e89:	in     al,dx
  413e8a:	and    al,0xd1
  413e8c:	(bad)  
  413e8d:	dec    ax
  413e8f:	ret    0x9af
  413e92:	jmp    0x1645:0x167ea91c
  413e99:	ds or  al,0x4f
  413e9c:	(bad)  
  413e9d:	dec    edx
  413e9e:	lods   eax,DWORD PTR ds:[esi]
  413e9f:	jns    0x413e3d
  413ea1:	(bad)  
  413ea2:	leave  
  413ea3:	mov    ds:0xdf3f3355,eax
  413ea8:	ffreep st(5)
  413eaa:	fs out dx,al
  413eac:	push   edx
  413ead:	(bad)  
  413eae:	repnz ins DWORD PTR es:[edi],dx
  413eb0:	fld    DWORD PTR [edx+0x5a]
  413eb3:	adc    eax,0xcdefc87
  413eb8:	cld    
  413eb9:	cmp    BYTE PTR [ebp+0x6b],ch
  413ebc:	scas   eax,DWORD PTR es:[edi]
  413ebd:	(bad)  
  413ebe:	(bad)  
  413ebf:	stc    
  413ec0:	jnp    0x413efa
  413ec2:	imul   ebx,DWORD PTR [ebx],0x62
  413ec5:	inc    ebx
  413ec6:	inc    eax
  413ec7:	sbb    ecx,DWORD PTR [esi]
  413ec9:	(bad)
  413ecc:	into   
  413ecd:	sbb    BYTE PTR [edx-0x586230c3],ah
  413ed3:	cmp    DWORD PTR [esi-0x55],edx
  413ed6:	mov    ds:0x4ac5a822,al
  413edb:	mov    edx,0xcd5fb81e
  413ee0:	inc    esi
  413ee1:	or     al,0xe7
  413ee3:	lahf   
  413ee4:	push   ecx
  413ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ee6:	loope  0x413f4d
  413ee8:	(bad)  
  413ee9:	mov    ebx,0xa3105b58
  413eee:	paddd  mm0,QWORD PTR [ebp-0xb]
  413ef2:	inc    esp
  413ef3:	js     0x413f27
  413ef5:	cdq    
  413ef6:	mov    dl,0x87
  413ef8:	call   FWORD PTR ds:0x2527e0d
  413efe:	repz aaa 
  413f00:	addr16 jbe 0x413f63
  413f03:	mov    ecx,0x412633e8
  413f08:	fucomp st(2)
  413f0a:	or     dh,ah
  413f0c:	jne    0x413ec2
  413f0e:	ret    
  413f0f:	inc    esi
  413f10:	inc    esp
  413f11:	out    dx,al
  413f12:	pop    ss
  413f13:	lods   al,BYTE PTR ds:[esi]
  413f14:	test   BYTE PTR [ecx+0x3b10aef8],bl
  413f1a:	mov    al,ds:0xb18d9a9f
  413f1f:	mov    cl,0x43
  413f21:	lods   eax,DWORD PTR ds:[esi]
  413f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f23:	jae    0x413f2d
  413f25:	jmp    0x413f8d
  413f27:	popf   
  413f28:	lods   eax,DWORD PTR ds:[esi]
  413f29:	je     0x413f59
  413f2b:	xor    DWORD PTR [esi],esp
  413f2d:	dec    eax
  413f2e:	dec    ecx
  413f2f:	jl     0x413f16
  413f31:	xchg   esi,eax
  413f32:	scas   eax,DWORD PTR es:[edi]
  413f33:	pop    eax
  413f34:	jmp    0xe4cb8524
  413f39:	fisub  WORD PTR [edi+0x6e]
  413f3c:	sti    
  413f3d:	shl    esi,0x3
  413f40:	loopne 0x413f32
  413f42:	adc    DWORD PTR [esi],eax
  413f44:	add    bl,ch
  413f46:	(bad)  
  413f47:	js     0x413f4c
  413f49:	cs gs mov ecx,0x2489cc78
  413f50:	pusha  
  413f51:	pushf  
  413f52:	out    dx,al
  413f53:	int    0x70
  413f55:	outs   dx,BYTE PTR ds:[esi]
  413f56:	test   DWORD PTR [ebx-0x7e31fa3b],0xe0c0746f
  413f60:	mov    ebx,0xd36ce1c3
  413f65:	jg     0x413ef4
  413f67:	mov    esp,0x6aaea68e
  413f6c:	inc    ecx
  413f6d:	sub    BYTE PTR ds:[eax-0x79],al
  413f71:	and    DWORD PTR [ebp+0x1a3981e1],esp
  413f77:	push   ecx
  413f78:	push   0x3b
  413f7a:	xor    al,0xd4
  413f7c:	popf   
  413f7d:	nop
  413f7e:	xor    ch,al
  413f80:	xchg   ebx,eax
  413f81:	scas   eax,DWORD PTR es:[edi]
  413f82:	je     0x413ff3
  413f84:	clc    
  413f85:	ret    0xe3d6
  413f88:	shl    DWORD PTR [eax+ebp*4-0x4f],0xf
  413f8d:	in     eax,0x86
  413f8f:	test   eax,0x9ae10be
  413f94:	mov    eax,ds:0xc6613a0f
  413f99:	xchg   ebx,eax
  413f9a:	pop    esp
  413f9b:	sbb    esp,DWORD PTR [eax+0x447dc2c]
  413fa1:	out    dx,eax
  413fa2:	adc    BYTE PTR [ecx+0x11],0x1b
  413fa6:	adc    edx,DWORD PTR [edx+0x54]
  413fa9:	pop    ecx
  413faa:	stos   BYTE PTR es:[edi],al
  413fab:	mov    al,ds:0x67a9af9e
  413fb0:	outs   dx,BYTE PTR ds:[esi]
  413fb1:	pop    ebx
  413fb2:	adc    eax,DWORD PTR [ecx-0x5780025b]
  413fb8:	push   ecx
  413fb9:	sub    dh,BYTE PTR ds:0x150bf5c
  413fbf:	lahf   
  413fc0:	ins    BYTE PTR es:[edi],dx
  413fc1:	push   es
  413fc2:	scas   eax,DWORD PTR es:[edi]
  413fc3:	retf   0xa322
  413fc6:	mov    al,BYTE PTR [esi+0x209c3542]
  413fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fcd:	and    ecx,DWORD PTR [ebp+edx*8-0x34]
  413fd1:	lods   al,BYTE PTR ds:[esi]
  413fd2:	loop   0x414041
  413fd4:	pop    es
  413fd5:	push   edx
  413fd6:	add    al,0xb1
  413fd8:	repnz xor BYTE PTR [ecx+edx*4+0x2d],bh
  413fdd:	dec    esi
  413fde:	mov    cl,0x2e
  413fe0:	jl     0x414025
  413fe2:	dec    eax
  413fe3:	jge    0x41401d
  413fe5:	push   esp
  413fe6:	sbb    DWORD PTR [edx+edx*8-0x14],0x6a
  413feb:	repnz push esi
  413fed:	add    BYTE PTR [esi+0x21],cl
  413ff0:	xchg   esp,eax
  413ff1:	scas   eax,DWORD PTR es:[edi]
  413ff2:	fimul  DWORD PTR [ebp-0x9cbb2fa]
  413ff8:	push   ecx
  413ff9:	lea    eax,[edi+0x6d]
  413ffc:	(bad)  
  413ffd:	(bad)  
  413ffe:	in     al,0x47
  414000:	pusha  
  414001:	nop
  414002:	leave  
  414003:	jae    0x414009
  414005:	dec    ecx
  414006:	(bad)  
  414008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414009:	retf   0xe829
  41400c:	sbb    dl,0x24
  41400f:	adc    BYTE PTR [eax+0x363e215d],ch
  414015:	rcl    BYTE PTR [eax-0x660ff5d6],0x7
  41401c:	mov    edi,0xb300e974
  414021:	cmc    
  414022:	mov    cl,BYTE PTR [esi]
  414024:	mov    esp,0x4c8f5fcb
  414029:	sbb    esp,DWORD PTR [esi+0x49a3dba8]
  41402f:	nop
  414030:	xchg   esi,eax
  414031:	jle    0x414005
  414033:	aad    0x4a
  414035:	mov    al,ds:0xaa75be87
  41403a:	adc    al,BYTE PTR [eax-0x3ed97bed]
  414040:	test   DWORD PTR [ebx-0x78366621],esi
  414046:	mov    bh,0x8f
  414048:	lds    ecx,FWORD PTR [edi]
  41404a:	aaa    
  41404b:	das    
  41404c:	cmp    eax,0x82f3260b
  414051:	fld    DWORD PTR [edx+0x2c]
  414054:	push   edx
  414055:	push   ebp
  414056:	cmp    ch,dh
  414058:	add    bl,BYTE PTR [eax+edi*8+0x4e11f578]
  41405f:	mov    bh,0xb8
  414061:	int    0x53
  414063:	jbe    0x414054
  414065:	xor    al,0x34
  414067:	jg     0x41405c
  414069:	fwait
  41406a:	xchg   ebp,eax
  41406b:	sahf   
  41406c:	pop    edi
  41406d:	jg     0x4140e6
  41406f:	add    DWORD PTR [edx+eax*4+0x7d],eax
  414073:	add    BYTE PTR [esi-0x6c],dh
  414076:	and    BYTE PTR [ebp+0x7cf51b65],0xb3
  41407d:	addr16 inc ebp
  41407f:	xchg   BYTE PTR [ecx-0x31c0a28e],dh
  414085:	and    eax,0x58747728
  41408a:	fsubr  DWORD PTR [esi-0x5b]
  41408d:	or     BYTE PTR [edi],0xe
  414090:	cmp    cl,dh
  414092:	arpl   WORD PTR [ecx],di
  414094:	add    dl,BYTE PTR [eax]
  414096:	inc    ebp
  414097:	sub    esi,esi
  414099:	sub    bl,BYTE PTR [eax-0x8]
  41409c:	pushf  
  41409d:	add    eax,0x851e1f57
  4140a2:	shr    BYTE PTR [eax-0x35],0x9b
  4140a6:	mov    WORD PTR [edi-0x4c],ds
  4140a9:	rol    DWORD PTR [eax],cl
  4140ab:	push   0x59de8de0
  4140b0:	push   esp
  4140b1:	mov    ebp,0x9c580ab
  4140b6:	sub    ecx,DWORD PTR [ecx-0x1c]
  4140b9:	ins    BYTE PTR es:[edi],dx
  4140ba:	mov    ah,0x9e
  4140bc:	(bad)  
  4140bd:	xor    BYTE PTR [esi],ch
  4140bf:	(bad)  
  4140c0:	iret   
  4140c1:	jmp    0x7294f7c5
  4140c6:	jge    0x414087
  4140c8:	int    0x62
  4140ca:	js     0x414137
  4140cc:	jmp    0x6ea60de
  4140d1:	bound  edx,QWORD PTR ds:0x3347683d
  4140d7:	imul   edx,DWORD PTR [ebp+0x3f],0xffffffce
  4140db:	lock test bh,ch
  4140de:	lods   eax,DWORD PTR ds:[esi]
  4140df:	push   esi
  4140e0:	icebp  
  4140e1:	adc    BYTE PTR [ecx+0x5172514f],ah
  4140e7:	pop    ss
  4140e8:	xor    bh,BYTE PTR [esi-0x1254d507]
  4140ee:	mov    edx,0xc95b5ce4
  4140f3:	icebp  
  4140f4:	xchg   BYTE PTR [ebx-0x1d24eea7],al
  4140fa:	inc    ebx
  4140fb:	jp     0x4140de
  4140fd:	cmp    eax,0x3fefb928
  414102:	mov    esp,0xaef2f259
  414107:	aaa    
  414108:	retf   0xefcf
  41410b:	or     al,0xc5
  41410d:	mov    eax,0x961456e8
  414112:	rcr    DWORD PTR [ebx],1
  414114:	push   edx
  414115:	cs jae 0x41415b
  414118:	lahf   
  414119:	lds    eax,FWORD PTR [eax+0x1f27203b]
  41411f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414120:	ins    BYTE PTR es:[edi],dx
  414121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414122:	jns    0x414171
  414124:	and    edx,DWORD PTR ds:0xdd797190
  41412a:	add    cl,bh
  41412c:	sub    al,0x53
  41412e:	mov    esp,0x3e945bfc
  414133:	sub    bh,bl
  414135:	pop    eax
  414136:	or     esi,ebx
  414138:	and    eax,0x6b7ec0db
  41413d:	adc    dh,bl
  41413f:	imul   esp,DWORD PTR [edx+edi*8],0xacdfaa19
  414146:	xor    ecx,DWORD PTR [ecx+0x51]
  414149:	jle    0x4141c9
  41414b:	cmp    ebx,eax
  41414d:	mov    ds:0xd0e48768,al
  414152:	mov    ds:0x550f6a9,eax
  414157:	mul    DWORD PTR [ebp-0x1bcf9d9c]
  41415d:	jnp    0x414120
  41415f:	add    al,0x51
  414161:	(bad)  [edi-0x3d2b0784]
  414167:	fwait
  414168:	sbb    esi,DWORD PTR [esi-0x7898ccdb]
  41416e:	pop    ss
  41416f:	ins    BYTE PTR es:[edi],dx
  414170:	jmp    0x769e:0xf407a89d
  414177:	fisttp WORD PTR [ebx]
  414179:	rcl    BYTE PTR [ecx-0x1a],1
  41417c:	sbb    ebp,DWORD PTR [ebx]
  41417e:	mov    bl,0xda
  414180:	add    eax,0x21d0d707
  414185:	fdivr  QWORD PTR [esi+edx*2]
  414188:	inc    ebx
  414189:	jb     0x4141c9
  41418b:	sub    eax,0x9fa482cc
  414190:	retf   0xd5e4
  414193:	shl    DWORD PTR [esi-0x46],cl
  414196:	ins    BYTE PTR es:[edi],dx
  414197:	xchg   bl,al
  414199:	cs shl esp,1
  41419c:	je     0x414205
  41419e:	aad    0xde
  4141a0:	or     DWORD PTR [esi],ebp
  4141a2:	sub    BYTE PTR [eax],cl
  4141a4:	pop    edx
  4141a5:	sub    eax,DWORD PTR ds:0x20cc908
  4141ab:	out    0x6,al
  4141ad:	mov    ds:0x1af52911,al
  4141b2:	push   0x19
  4141b4:	adc    ch,al
  4141b6:	loopne 0x414172
  4141b8:	hlt    
  4141b9:	(bad)  
  4141ba:	hlt    
  4141bb:	or     al,0x60
  4141bd:	or     cl,BYTE PTR [edi+0x76]
  4141c0:	push   es
  4141c1:	out    0xc0,al
  4141c3:	pusha  
  4141c4:	pop    ss
  4141c5:	jno    0x414176
  4141c7:	sti    
  4141c8:	mov    al,0x38
  4141ca:	mov    ecx,0x4786178f
  4141cf:	(bad)  
  4141d0:	aas    
  4141d1:	sub    eax,DWORD PTR [ecx+0x62]
  4141d4:	(bad)  
  4141d6:	out    dx,eax
  4141d7:	xor    BYTE PTR [ebx],bl
  4141d9:	rcr    DWORD PTR [ebp+0xe2d59db],0x42
  4141e0:	out    0xbc,al
  4141e2:	pop    eax
  4141e3:	adc    bh,BYTE PTR [eax+0x1e627fc4]
  4141e9:	ss fcom st(0)
  4141ec:	xlat   BYTE PTR ds:[ebx]
  4141ed:	mov    DWORD PTR [ecx+0x19],esp
  4141f0:	in     al,0x95
  4141f2:	or     BYTE PTR [ecx+0x43e2480],al
  4141f8:	out    0x66,eax
  4141fa:	cmc    
  4141fb:	jmp    FWORD PTR [ecx-0x36]
  4141fe:	mov    esi,0xc362a91e
  414203:	out    dx,eax
  414204:	rol    DWORD PTR [edi],1
  414206:	iret   
  414207:	shld   eax,edx,cl
  41420a:	retf   0xd116
  41420d:	cmp    bh,BYTE PTR [ebx+ecx*4-0x20]
  414211:	addr16 dec edx
  414213:	jnp    0x4141dd
  414215:	pop    edx
  414216:	int    0xf2
  414218:	adc    al,BYTE PTR [esi]
  41421a:	pop    ss
  41421b:	cwde   
  41421c:	cdq    
  41421d:	and    al,0x76
  41421f:	js     0x414285
  414221:	dec    esi
  414222:	jl     0x414218
  414224:	lds    edi,FWORD PTR [edi+ecx*2]
  414227:	inc    ecx
  414228:	sahf   
  414229:	rol    ah,cl
  41422b:	sbb    bh,BYTE PTR [ecx]
  41422d:	(bad)  
  41422e:	xchg   ebp,eax
  41422f:	sub    ah,BYTE PTR es:[eax+0x3791dd52]
  414236:	loopne 0x4141c6
  414238:	mov    dh,0x52
  41423a:	mov    ebp,DWORD PTR [ecx-0x719eac78]
  414240:	test   cl,ch
  414242:	imul   esp,DWORD PTR [esi-0x4b],0x46
  414246:	test   ch,ah
  414248:	in     al,0xd8
  41424a:	and    eax,0x8abb93c0
  41424f:	push   esi
  414250:	or     DWORD PTR [edi+0x77e5cbf9],ebp
  414256:	cli    
  414257:	pop    ebp
  414258:	out    dx,eax
  414259:	push   0xa5a73255
  41425e:	xor    bh,bl
  414260:	mov    dl,0xe5
  414262:	retf   0xb48a
  414265:	ins    BYTE PTR es:[edi],dx
  414266:	pop    es
  414267:	mov    al,ds:0x3bc379f0
  41426c:	mov    ds:0x4aa4601f,al
  414271:	pop    ebp
  414272:	sahf   
  414273:	repnz popf 
  414275:	(bad)  
  414276:	cmp    eax,0xcb6c7e2e
  41427b:	pop    DWORD PTR [edi]
  41427d:	call   0x91d5:0x6fd67b33
  414284:	dec    ebp
  414285:	imul   eax,DWORD PTR [edi],0xffffff97
  414288:	gs cs je 0x4142ef
  41428c:	loope  0x414225
  41428e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  414290:	fdiv   st,st(5)
  414292:	lods   al,BYTE PTR ds:[esi]
  414293:	pop    ss
  414294:	data16 add bl,BYTE PTR [edx+0x4c9e853]
  41429b:	mov    bl,0x49
  41429d:	fwait
  41429e:	mov    BYTE PTR [eax-0x6ef8b6f3],dl
  4142a4:	cmc    
  4142a5:	xor    ah,cl
  4142a7:	pop    edx
  4142a8:	and    eax,0x60f70f7b
  4142ad:	out    dx,eax
  4142ae:	pop    ss
  4142af:	xchg   esp,eax
  4142b0:	or     eax,0x925d8d56
  4142b5:	push   edx
  4142b6:	dec    ebp
  4142b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142b8:	add    esp,DWORD PTR [ecx]
  4142ba:	dec    esp
  4142bb:	dec    eax
  4142bc:	cmp    edi,DWORD PTR [ebp+0x2afbb5d5]
  4142c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142c3:	in     al,dx
  4142c4:	jb     0x41433c
  4142c6:	(bad)  
  4142c7:	fldenv [eax]
  4142c9:	or     ebx,DWORD PTR [edx+esi*1+0x26]
  4142cd:	push   cs
  4142ce:	fwait
  4142cf:	push   ss
  4142d0:	push   ecx
  4142d1:	or     al,0xa3
  4142d3:	retf   
  4142d4:	xchg   esp,eax
  4142d5:	in     eax,dx
  4142d6:	pop    es
  4142d7:	jnp    0x4142ef
  4142d9:	aam    0x9d
  4142db:	pop    edx
  4142dc:	out    dx,eax
  4142dd:	pop    ebp
  4142de:	sub    bh,al
  4142e0:	je     0x414307
  4142e2:	test   al,cl
  4142e4:	sbb    al,0x7b
  4142e6:	in     eax,dx
  4142e7:	aas    
  4142e8:	outs   dx,BYTE PTR ds:[esi]
  4142e9:	xchg   BYTE PTR [ecx+0x6469f145],ch
  4142ef:	(bad)  
  4142f0:	pushf  
  4142f1:	xchg   edi,eax
  4142f2:	sbb    BYTE PTR [ebp+0x37983576],ch
  4142f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142f9:	ds gs rcl ah,1
  4142fd:	popa   
  4142fe:	dec    ebp
  4142ff:	inc    edi
  414300:	bound  esi,QWORD PTR [edi-0x25]
  414303:	inc    ebx
  414304:	int3   
  414305:	xor    DWORD PTR [edi+0xb],0x66ee8b9a
  41430c:	and    eax,DWORD PTR [esi+ecx*1+0x2be6978f]
  414313:	ins    DWORD PTR es:[edi],dx
  414314:	push   edx
  414315:	push   esi
  414316:	test   BYTE PTR [edx+eax*8],0x58
  41431a:	ds xchg esi,esi
  41431d:	loope  0x414333
  41431f:	call   0x5a78:0xbc1ee109
  414326:	in     al,dx
  414327:	xchg   ecx,eax
  414328:	jg     0x41438c
  41432a:	sbb    edi,DWORD PTR [edi-0x7a47e706]
  414330:	jl     0x41439c
  414332:	sbb    ch,BYTE PTR [ebp+0x65d0191c]
  414338:	mov    ebp,0x35617c3b
  41433d:	and    ch,BYTE PTR [esp+eax*2+0x7ab9c7d6]
  414344:	mov    dl,0x49
  414346:	imul   ebx,DWORD PTR [ebx-0x51],0xbe118ca2
  41434d:	pop    edi
  41434e:	cmp    eax,0xf6dc440a
  414353:	mov    esi,0xdda9bce5
  414358:	mov    ecx,0xddb72860
  41435d:	lea    esi,[ebx]
  41435f:	gs and al,0x3a
  414362:	mov    ds:0x6f64bff5,al
  414367:	xchg   esi,eax
  414368:	jl     0x4143c5
  41436a:	popf   
  41436b:	jmp    0x7bb5:0xe10588eb
  414372:	fwait
  414373:	stc    
  414374:	jno    0x41437a
  414376:	xor    BYTE PTR [ebx],cl
  414378:	jno    0x41433c
  41437a:	pop    ds
  41437b:	outs   dx,BYTE PTR ds:[esi]
  41437c:	cmp    ebx,DWORD PTR [eax-0x22]
  41437f:	cmp    DWORD PTR [edx],edi
  414381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414382:	sti    
  414383:	lds    ebx,FWORD PTR [eax-0x73]
  414386:	mov    ah,BYTE PTR [esi+0x19]
  414389:	fldenv [esi]
  41438b:	dec    ebp
  41438c:	popa   
  41438d:	mov    ebx,0xca2bd5a2
  414392:	enter  0x26c,0xd3
  414396:	xor    al,0xc7
  414398:	or     dl,BYTE PTR [ebx]
  41439a:	in     eax,0xbb
  41439c:	xchg   edx,eax
  41439d:	mov    ebp,0x30d9d636
  4143a2:	data16 (bad) 
  4143a4:	in     eax,dx
  4143a5:	(bad)  
  4143a6:	fstp   DWORD PTR [ebx+0x5b]
  4143a9:	cmp    al,0x3
  4143ab:	sub    al,BYTE PTR [esp+eiz*4-0x67]
  4143af:	mov    bh,0x91
  4143b1:	mov    esp,DWORD PTR [edi-0x113f57fb]
  4143b7:	mov    cl,BYTE PTR [ebx-0x6e46d7b2]
  4143bd:	add    edi,DWORD PTR [edi+0x64ac0a8c]
  4143c3:	nop
  4143c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c5:	mov    al,ds:0x64d21a8
  4143ca:	adc    eax,0xcd34b8e2
  4143cf:	xchg   ecx,eax
  4143d0:	les    eax,FWORD PTR [edi-0x6]
  4143d3:	lahf   
  4143d4:	imul   eax,DWORD PTR [edx-0x63336376],0x55a30857
  4143de:	jge    0x414389
  4143e0:	xlat   BYTE PTR ds:[ebx]
  4143e1:	and    al,0xa7
  4143e3:	xor    al,0xa9
  4143e5:	xor    edi,DWORD PTR [esi]
  4143e7:	mov    al,ds:0x8f254682
  4143ec:	jp     0x4143c5
  4143ee:	test   eax,0x98cebc42
  4143f3:	and    bh,cl
  4143f5:	dec    edi
  4143f6:	jno    0x414444
  4143f8:	sub    DWORD PTR [edi],0xbb67439a
  4143fe:	push   eax
  4143ff:	xchg   esi,eax
  414400:	and    al,0xab
  414402:	jbe    0x41446f
  414404:	addr16 jnp 0x414434
  414407:	scas   eax,DWORD PTR es:[edi]
  414408:	enter  0x7967,0x41
  41440c:	aam    0x54
  41440e:	ins    BYTE PTR es:[edi],dx
  41440f:	sbb    BYTE PTR [eax+0x1f2fe1e5],al
  414415:	jb     0x414493
  414417:	lea    esp,[edx+ebp*1-0x927e327]
  41441e:	inc    ecx
  41441f:	into   
  414420:	mov    al,ds:0x599f1b7
  414425:	sbb    DWORD PTR [ebx],edi
  414427:	test   DWORD PTR [ecx+0x73056e34],0x8e309ac7
  414431:	push   ebp
  414432:	ficomp DWORD PTR [edx+0x2d059fa7]
  414438:	xor    BYTE PTR [edi],bl
  41443a:	fwait
  41443b:	(bad)  
  41443c:	and    eax,0xea8501d3
  414441:	or     al,0xf7
  414443:	ret    0x1e59
  414446:	jb     0x4144a5
  414448:	in     al,dx
  414449:	call   0x41e0c88b
  41444e:	clc    
  41444f:	mov    edi,0xb455831
  414454:	push   ss
  414455:	lahf   
  414456:	cmp    eax,0xdf78b185
  41445b:	int    0xc3
  41445d:	add    esi,ebp
  41445f:	fdivr  st,st(4)
  414461:	adc    DWORD PTR [esi],ebx
  414463:	add    DWORD PTR [edx],eax
  414465:	push   esi
  414466:	sub    eax,0x848a205d
  41446b:	and    esi,DWORD PTR [ebp-0x7f531adb]
  414471:	sbb    eax,0x8c49930a
  414476:	fistp  QWORD PTR [ecx+0x5cd01141]
  41447c:	mov    esi,0x2fc4c2db
  414481:	ja     0x414464
  414483:	sub    al,0x19
  414485:	in     al,dx
  414486:	sbb    al,0x89
  414488:	ds xchg edx,eax
  41448a:	jle    0x41444d
  41448c:	cmp    ch,BYTE PTR [ebx]
  41448e:	lea    edx,[edi-0x5254b23d]
  414494:	(bad)  
  414495:	mov    DWORD PTR [ecx+edx*4+0x0],0xf6d5afb9
  41449d:	add    ecx,DWORD PTR [esi-0x6974edd0]
  4144a3:	jg     0x414482
  4144a5:	jne    0x414449
  4144a7:	loope  0x414477
  4144a9:	inc    esi
  4144aa:	adc    dh,BYTE PTR [edx]
  4144ac:	and    bl,BYTE PTR [edi+0x6d50b2cf]
  4144b2:	fsubr  DWORD PTR [ecx+eiz*4-0x760640fa]
  4144b9:	xchg   ebp,eax
  4144ba:	jg     0x41449a
  4144bc:	repnz dec ebp
  4144be:	pop    esi
  4144bf:	jl     0x414446
  4144c1:	jb     0x414535
  4144c3:	shr    DWORD PTR [esi],0x89
  4144c6:	dec    edi
  4144c7:	stos   DWORD PTR es:[edi],eax
  4144c8:	cwde   
  4144c9:	test   al,0xf6
  4144cb:	loop   0x4144b4
  4144cd:	mov    ah,BYTE PTR [ebp+ebx*2+0x72]
  4144d1:	sahf   
  4144d2:	pop    es
  4144d3:	sub    BYTE PTR [ebp+0xc59f1e3],dh
  4144d9:	inc    edx
  4144da:	jae    0x41453f
  4144dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144dd:	cli    
  4144de:	pop    edx
  4144df:	pop    es
  4144e0:	lods   al,BYTE PTR ds:[esi]
  4144e1:	daa    
  4144e2:	or     esi,edx
  4144e4:	xchg   edi,eax
  4144e5:	xchg   ebx,eax
  4144e6:	leave  
  4144e7:	(bad)  
  4144e8:	mov    ds:0x1a65dc73,eax
  4144ed:	mov    eax,0x48bddf13
  4144f2:	sti    
  4144f3:	xchg   DWORD PTR [edx+0x3e03ae1],esi
  4144f9:	mov    esp,eax
  4144fb:	add    al,0x9b
  4144fd:	push   ss
  4144fe:	sbb    BYTE PTR [ebx+eiz*1-0xcb50a71],cl
  414505:	add    BYTE PTR [eax+esi*2-0x65],ch
  414509:	pop    ebp
  41450a:	xchg   bh,al
  41450c:	mov    ah,0xe9
  41450e:	mov    bl,0xbf
  414510:	fst    QWORD PTR [eax-0x3b]
  414513:	fldcw  WORD PTR [eax-0x4b]
  414516:	scas   al,BYTE PTR es:[edi]
  414517:	and    DWORD PTR [eax],0x7e
  41451a:	mov    ah,0x9a
  41451c:	cli    
  41451d:	inc    edx
  41451e:	loopne 0x414591
  414520:	inc    ebp
  414521:	mov    bh,0xed
  414523:	cmc    
  414524:	push   es
  414525:	and    eax,DWORD PTR [edi-0x21]
  414528:	neg    BYTE PTR [esi]
  41452a:	or     eax,0x89db2328
  41452f:	test   BYTE PTR [esp+edx*1],0x83
  414533:	jge    0x414598
  414535:	jmp    0x573bcd11
  41453a:	mov    dl,al
  41453c:	sub    ch,BYTE PTR [edi-0x3a661dd7]
  414542:	sub    DWORD PTR [esi+eiz*4],eax
  414545:	dec    eax
  414546:	xlat   BYTE PTR ds:[ebx]
  414547:	pop    es
  414548:	sub    eax,0x7c964af5
  41454d:	mov    ds:0x82f3defb,eax
  414552:	push   ebx
  414553:	sub    BYTE PTR [ecx-0x42],bl
  414556:	xchg   edx,eax
  414557:	out    0xf2,al
  414559:	mov    BYTE PTR [eax],cl
  41455b:	pushf  
  41455c:	add    DWORD PTR [ebx-0x61],esi
  41455f:	mov    al,ds:0x920af845
  414564:	lahf   
  414565:	in     al,0x18
  414567:	sub    edi,DWORD PTR [edx+0x3]
  41456a:	arpl   sp,si
  41456c:	dec    eax
  41456d:	and    al,0xf2
  41456f:	dec    ecx
  414570:	test   BYTE PTR [ecx+0x53cc091],ch
  414576:	and    al,0x29
  414578:	popf   
  414579:	dec    ebx
  41457a:	call   0xadd4:0x5888a52f
  414581:	je     0x4145a8
  414583:	xchg   ebp,eax
  414584:	push   0x34
  414586:	fwait
  414587:	pop    ebp
  414588:	adc    al,dl
  41458a:	jp     0x414540
  41458c:	repz xor DWORD PTR [eax+edi*4+0x76],esp
  414591:	mov    bl,0xa3
  414593:	mov    al,0xd6
  414595:	fwait
  414596:	outs   dx,BYTE PTR ds:[esi]
  414597:	pop    esi
  414598:	jb     0x414552
  41459a:	add    dl,BYTE PTR [esi-0x1515b6be]
  4145a0:	push   edi
  4145a1:	call   0xc19c:0xfcf5ff85
  4145a8:	outs   dx,BYTE PTR ds:[esi]
  4145a9:	loope  0x414530
  4145ab:	push   edi
  4145ac:	inc    ebp
  4145ad:	dec    eax
  4145ae:	not    ebp
  4145b0:	test   DWORD PTR [edx-0x63],0x35b84ed6
  4145b7:	(bad)  
  4145b8:	jecxz  0x41460a
  4145ba:	test   al,0x5
  4145bc:	scas   al,BYTE PTR es:[edi]
  4145bd:	mov    al,ds:0x3f2dae9e
  4145c2:	xor    al,0x9a
  4145c4:	pop    ss
  4145c5:	xor    eax,DWORD PTR [edx+0x66]
  4145c8:	scas   al,BYTE PTR es:[edi]
  4145c9:	and    dh,BYTE PTR ds:0x353fff14
  4145cf:	jg     0x414564
  4145d1:	and    DWORD PTR [edi-0x13],edx
  4145d4:	pop    esi
  4145d5:	mov    bh,0xc7
  4145d7:	test   al,0x23
  4145d9:	or     al,BYTE PTR [eax]
  4145db:	leave  
  4145dc:	ins    BYTE PTR es:[edi],dx
  4145dd:	adc    bh,BYTE PTR ds:0xbdfaac57
  4145e3:	inc    edx
  4145e4:	dec    esp
  4145e5:	je     0x4145e4
  4145e7:	lahf   
  4145e8:	push   edi
  4145e9:	xor    dh,BYTE PTR [ebp-0x7cdb7b60]
  4145ef:	mov    esi,ebp
  4145f1:	into   
  4145f2:	cmp    eax,0x72512b64
  4145f7:	outs   dx,BYTE PTR ds:[esi]
  4145f8:	mov    ds:0x876243f4,al
  4145fd:	imul   esp,esp,0x6
  414600:	ret    
  414601:	sbb    BYTE PTR [ebp-0x2d723486],bh
  414607:	leave  
  414608:	xlat   BYTE PTR ds:[ebx]
  414609:	push   0xe
  41460b:	mov    cl,0x1f
  41460d:	enter  0x5745,0x68
  414611:	(bad)  
  414612:	jl     0x414599
  414614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414615:	jmp    0x47cc4b43
  41461a:	gs fwait
  41461c:	xchg   esp,eax
  41461e:	and    BYTE PTR [ebp-0x67e39d9e],ah
  414624:	fdiv   QWORD PTR [ebx-0x2b]
  414627:	cmc    
  414628:	push   0xffffff8a
  41462a:	sub    bh,dh
  41462c:	adc    al,0x2e
  41462e:	adc    ebx,DWORD PTR [esi]
  414630:	popf   
  414631:	push   esi
  414632:	retf   
  414633:	or     BYTE PTR [edi],0xfd
  414636:	xchg   BYTE PTR [edx],dh
  414638:	pop    ebp
  414639:	mov    ebp,0xb841771b
  41463e:	and    al,0x67
  414640:	and    al,0x71
  414642:	xor    BYTE PTR [ebp+0x3c],dh
  414645:	das    
  414646:	add    DWORD PTR [ebx+0x2c],edi
  414649:	dec    ebx
  41464a:	xchg   DWORD PTR [edx-0x5036bd81],ecx
  414650:	xchg   ebx,eax
  414651:	and    cl,BYTE PTR [ebx+0x2c]
  414654:	dec    ebp
  414655:	test   BYTE PTR [edx],0x45
  414658:	ret    0x9f1c
  41465b:	xor    al,0xbe
  41465d:	xor    DWORD PTR [ecx+0x24c11545],0x513fa770
  414667:	mov    BYTE PTR [edx],dl
  414669:	ret    0xbdec
  41466c:	icebp  
  41466d:	js     0x4146b3
  41466f:	div    DWORD PTR [ebx]
  414671:	mov    ss,WORD PTR [eax]
  414673:	and    DWORD PTR [ebp+0x4c],eax
  414676:	imul   esp,eax,0x39ce3a4b
  41467c:	cmp    DWORD PTR ds:0x521e6580,esp
  414682:	sub    ebx,DWORD PTR [esi+0x7a]
  414685:	fbld   TBYTE PTR [esi-0x27]
  414688:	pop    esp
  414689:	pop    edx
  41468a:	out    0x35,al
  41468c:	push   edi
  41468d:	fisttp QWORD PTR [edi]
  414690:	jecxz  0x414663
  414692:	and    BYTE PTR [edi],dh
  414694:	xchg   edx,eax
  414695:	or     esp,DWORD PTR [ecx+0x4974ce54]
  41469b:	lds    ebx,FWORD PTR [esi+edi*1+0x3697ebc]
  4146a2:	int    0xef
  4146a4:	call   0xaa434369
  4146a9:	ret    0x8534
  4146ac:	int    0x69
  4146ae:	inc    esp
  4146af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146b0:	les    eax,FWORD PTR [esi]
  4146b2:	ret    
  4146b3:	and    ch,BYTE PTR [edi]
  4146b5:	inc    edi
  4146b6:	mov    ds:0x92d4c2f0,al
  4146bb:	pop    edx
  4146bc:	stos   BYTE PTR es:[edi],al
  4146bd:	sbb    dl,ah
  4146bf:	pushf  
  4146c0:	ja     0x414647
  4146c2:	sbb    bl,BYTE PTR [esi+eax*8]
  4146c5:	cmp    al,0x4
  4146c7:	mov    eax,0xe7259377
  4146cc:	shr    DWORD PTR [ecx-0x31fd1ddc],0xf7
  4146d3:	sahf   
  4146d4:	xchg   edx,eax
  4146d5:	pop    ebp
  4146d6:	cmp    DWORD PTR [ebx+0x27a44757],eax
  4146dc:	pop    edi
  4146dd:	in     al,0x78
  4146df:	jmp    0x2aa:0x15d0f164
  4146e6:	mov    al,ds:0xb74b113c
  4146eb:	dec    edx
  4146ec:	ret    0xd98d
  4146ef:	and    eax,0xc298b530
  4146f4:	push   edi
  4146f5:	out    0x16,al
  4146f7:	pop    eax
  4146f8:	fcom   QWORD PTR [ecx-0x54bc330c]
  4146fe:	xor    ah,ah
  414700:	outs   dx,DWORD PTR ds:[esi]
  414701:	scas   eax,DWORD PTR es:[edi]
  414702:	fldcw  WORD PTR [ebp-0x527adeaf]
  414708:	and    BYTE PTR [ecx+0xfa0a0b6],dl
  41470e:	test   al,0xeb
  414710:	int3   
  414711:	adc    DWORD PTR [edi],ecx
  414713:	clc    
  414714:	pop    ss
  414715:	or     al,0x51
  414717:	add    ah,al
  414719:	xchg   esi,eax
  41471a:	pop    ecx
  41471b:	push   esi
  41471c:	sbb    dl,al
  41471e:	sub    eax,DWORD PTR [esi+0x709f62]
  414724:	(bad)  
  414726:	pop    eax
  414727:	cmp    edx,ebp
  414729:	les    eax,FWORD PTR [eax+0x753f46f7]
  41472f:	xchg   ebx,eax
  414730:	add    eax,0xf2eeb3ae
  414735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414736:	(bad)  [edi-0x79]
  414739:	push   edx
  41473a:	mov    al,ds:0x5a16e226
  41473f:	loopne 0x4147bc
  414741:	pop    ds
  414742:	cld    
  414743:	mov    dh,0x6
  414745:	pushf  
  414746:	fwait
  414747:	jns    0x41475e
  414749:	mov    DWORD PTR [edx-0x7b],edi
  41474c:	imul   edi,eax,0x408ba717
  414752:	pop    esi
  414753:	rep lock es ins BYTE PTR es:[edi],dx
  414757:	mov    ah,0x4
  414759:	test   eax,0x1460acd1
  41475e:	push   es
  41475f:	mov    bl,0xea
  414761:	mov    DWORD PTR [edx],edx
  414763:	mov    ds:0x6b0d78ee,al
  414768:	sbb    al,0x5e
  41476a:	add    eax,0xe417abf
  41476f:	aam    0x96
  414771:	pop    ebp
  414772:	aam    0xbf
  414774:	jne    0x414785
  414776:	xchg   ebx,eax
  414777:	sahf   
  414778:	iret   
  414779:	add    eax,0xded280a1
  41477e:	mov    edx,0xe2da18c6
  414783:	fldenv [edx-0x1f]
  414786:	(bad)  
  414787:	fdivr  st,st(7)
  414789:	jbe    0x414736
  41478b:	cmc    
  41478c:	scas   eax,DWORD PTR es:[edi]
  41478d:	push   ss
  41478e:	mov    cl,0xf7
  414790:	daa    
  414791:	aas    
  414792:	dec    esp
  414793:	ins    BYTE PTR es:[edi],dx
  414794:	data16 (bad) 
  414796:	sub    eax,0xdc0e95c4
  41479b:	popa   
  41479c:	xor    ah,BYTE PTR [edi]
  41479e:	aas    
  41479f:	rol    ch,1
  4147a1:	push   ecx
  4147a2:	push   esp
  4147a3:	xor    BYTE PTR [edx],ah
  4147a5:	imul   esp,DWORD PTR [eax],0xffffffa1
  4147a8:	or     bh,al
  4147aa:	or     eax,0xe96275e8
  4147af:	lds    esi,FWORD PTR [edi]
  4147b1:	sbb    al,0xdb
  4147b3:	(bad)  
  4147b4:	and    eax,0xb04c7290
  4147b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ba:	pushf  
  4147bb:	push   ss
  4147bc:	stc    
  4147bd:	sar    DWORD PTR [ecx],1
  4147bf:	push   cs
  4147c0:	mov    DWORD PTR [edx],ebp
  4147c2:	pop    ss
  4147c3:	nop
  4147c4:	cmp    ah,BYTE PTR [ecx+0x9bebed3]
  4147ca:	xchg   esi,eax
  4147cb:	enter  0x49b2,0x75
  4147cf:	push   es
  4147d0:	pop    esi
  4147d1:	add    DWORD PTR [ebx+0x4b],0x281e0e1a
  4147d8:	adc    dh,BYTE PTR [ebp-0x3dcbca82]
  4147de:	scas   eax,DWORD PTR es:[edi]
  4147df:	cld    
  4147e0:	js     0x4147fa
  4147e2:	adc    ebx,ebp
  4147e4:	mov    eax,ds:0xc1213ddc
  4147e9:	cs dec ebx
  4147eb:	jns    0x414851
  4147ed:	dec    ecx
  4147ee:	ror    ah,1
  4147f0:	ja     0x41486a
  4147f2:	je     0x4147c6
  4147f4:	jl     0x4147a5
  4147f6:	mov    WORD PTR [ebx+0xf76162],ds
  4147fc:	adc    eax,0xb515205f
  414801:	std    
  414802:	pop    edi
  414803:	lds    eax,FWORD PTR [ebp-0x45604543]
  414809:	xchg   ebx,eax
  41480a:	jle    0x41481f
  41480c:	xor    ah,BYTE PTR [edx-0x43]
  41480f:	mov    fs,WORD PTR ds:0x7bad06c5
  414815:	push   0x37
  414817:	adc    DWORD PTR [esi+0xbaec208],edi
  41481d:	mov    ah,0x44
  41481f:	sub    eax,0x9149e431
  414824:	test   eax,0xa07f659f
  414829:	push   cs
  41482a:	pop    edi
  41482b:	stos   DWORD PTR es:[edi],eax
  41482c:	pop    esi
  41482d:	hlt    
  41482e:	sub    al,0xc6
  414830:	mov    ds:0x878a90c9,al
  414835:	sbb    al,0x91
  414837:	add    eax,0x290c1d34
  41483c:	push   0xffffffb3
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	loop   0x414893
  414841:	jno    0x414857
  414843:	ins    DWORD PTR es:[edi],dx
  414844:	sbb    eax,DWORD PTR [esi]
  414846:	(bad)  
  414847:	ds fsubr st,st(0)
  41484a:	xor    BYTE PTR [ecx-0x557fd1e8],cl
  414850:	outs   dx,DWORD PTR ds:[esi]
  414851:	arpl   WORD PTR [esi],di
  414853:	lahf   
  414854:	dec    eax
  414855:	(bad)  
  414856:	cmp    ah,BYTE PTR [edx]
  414858:	lar    edi,di
  41485b:	inc    ebx
  41485c:	in     eax,dx
  41485d:	lods   al,BYTE PTR ds:[esi]
  41485e:	aaa    
  41485f:	mov    ebx,0xb6e2181b
  414864:	jmp    FWORD PTR [ecx+0x7b]
  414867:	into   
  414868:	daa    
  414869:	and    edi,ebp
  41486b:	mov    ds:0x5c141ec6,al
  414870:	cli    
  414871:	(bad)  
  414872:	sbb    DWORD PTR [eax],ebx
  414874:	inc    ecx
  414875:	loop   0x4148f1
  414877:	and    cl,dh
  414879:	xor    BYTE PTR [edx+0x40],al
  41487c:	call   0xadb3:0xebfaef8b
  414883:	mov    fs,WORD PTR [ecx+edx*2]
  414886:	neg    edx
  414888:	les    esi,FWORD PTR [eax+0xcb6f9a7]
  41488e:	mov    dl,0xf5
  414890:	cld    
  414891:	icebp  
  414892:	jp     0x414871
  414894:	mov    edx,0xb166fe90
  414899:	and    al,0xe7
  41489b:	fmul   QWORD PTR [ebp-0x7a]
  41489e:	push   cs
  41489f:	mov    ds:0x50f759e1,eax
  4148a4:	mov    esp,0x3e0f37a3
  4148a9:	jae    0x414847
  4148ab:	xor    BYTE PTR [esp+esi*8],bh
  4148ae:	sub    BYTE PTR [esp+ebx*4+0x13],ch
  4148b2:	pushf  
  4148b3:	mov    eax,ds:0xf16fbf99
  4148b8:	clc    
  4148b9:	push   ebx
  4148ba:	push   ss
  4148bb:	mov    ds:0x524dd0c5,al
  4148c0:	in     eax,0x15
  4148c2:	iret   
  4148c3:	add    BYTE PTR [edx],cl
  4148c5:	cdq    
  4148c6:	inc    esi
  4148c7:	mov    es,WORD PTR [eax+0x79]
  4148ca:	xchg   edi,eax
  4148cb:	jmp    0x94fc4916
  4148d0:	mov    DWORD PTR [eax-0x1d],0xb389d2ea
  4148d7:	(bad)  
  4148d8:	call   0x5f929b30
  4148dd:	jle    0x414931
  4148df:	jecxz  0x414938
  4148e1:	and    eax,0x3f700de0
  4148e6:	jmp    0x41490c
  4148e8:	cmp    cl,BYTE PTR [ebp+0x48008426]
  4148ee:	mov    edx,0xa270ca3b
  4148f3:	dec    ebx
  4148f4:	push   0x22e3c235
  4148f9:	sbb    al,0x59
  4148fb:	loope  0x4148a7
  4148fd:	sub    DWORD PTR [ebp-0x5b07b062],0x4895bf11
  414907:	mov    dl,dh
  414909:	inc    esi
  41490a:	mov    ebp,ebx
  41490c:	xor    eax,0x2f5c70f6
  414911:	mov    cl,0xe4
  414913:	pop    es
  414914:	out    0x33,al
  414916:	cs xchg edx,edx
  414919:	jb     0x414928
  41491b:	add    BYTE PTR [eax],ch
  41491d:	repnz scas al,BYTE PTR es:[edi]
  41491f:	test   eax,0x28cb5e66
  414924:	(bad)  
  414925:	lock popf 
  414927:	pop    ecx
  414928:	xlat   BYTE PTR ds:[ebx]
  414929:	leave  
  41492a:	push   edx
  41492b:	push   edx
  41492c:	ins    BYTE PTR es:[edi],dx
  41492d:	dec    eax
  41492e:	or     ecx,DWORD PTR [esi-0x129c3075]
  414934:	sub    al,0x90
  414936:	outs   dx,DWORD PTR ds:[esi]
  414937:	or     ebp,DWORD PTR ss:[edx]
  41493a:	push   ss
  41493b:	xlat   BYTE PTR ds:[ebx]
  41493c:	fmul   QWORD PTR [ebx-0x21d015b6]
  414942:	pusha  
  414943:	call   0x3566:0x1fd8f873
  41494a:	enter  0x57a1,0x41
  41494e:	xor    ch,BYTE PTR [edx-0x18a29bc1]
  414954:	pop    es
  414955:	jae    0x4149c2
  414957:	jl     0x414952
  414959:	jmp    0x1cd4:0xe5959552
  414960:	cmp    al,0xc3
  414962:	mov    edi,0x1fb6a0b9
  414967:	inc    edx
  414968:	enter  0x5b12,0x85
  41496c:	(bad)
  41496f:	jbe    0x4148f4
  414971:	imul   ebp,DWORD PTR [ecx],0xffffffac
  414974:	jno    0x41490b
  414976:	ror    BYTE PTR [ecx],1
  414978:	bound  edi,QWORD PTR [edi+0x30927855]
  41497e:	fnsave [edx+0x63]
  414981:	repnz sahf 
  414983:	div    BYTE PTR [ebx+0x6f]
  414986:	push   eax
  414987:	popf   
  414988:	bound  eax,QWORD PTR [esi]
  41498a:	(bad)  
  41498b:	adc    dh,BYTE PTR [edi+eiz*1+0x4323409]
  414992:	jmp    0x20b0:0x7bfb38c6
  414999:	sub    edx,eax
  41499b:	push   0xd883c186
  4149a0:	cmp    al,0xbb
  4149a2:	pusha  
  4149a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149a4:	leave  
  4149a5:	fisub  WORD PTR [esi+0x3a]
  4149a8:	retf   
  4149a9:	and    esi,0x55890bd0
  4149af:	or     cl,ch
  4149b1:	jo     0x4149b3
  4149b3:	add    BYTE PTR [eax],al
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	(bad)  
  414b89:	test   eax,0x67ffe322
  414b8e:	add    BYTE PTR [ebx-0x7c7ca3e9],0xdf
  414b95:	dec    edx
  414b96:	xchg   ebx,eax
  414b97:	sbb    eax,0xcb51cdc8
  414b9c:	daa    
  414b9d:	in     al,dx
  414b9e:	and    BYTE PTR [edi-0x39],ch
  414ba1:	xor    DWORD PTR [ecx],0xffffffee
  414ba4:	and    eax,0xbaa97053
  414ba9:	push   cs
  414baa:	cdq    
  414bab:	call   0x7aa5:0xcf9f59ef
  414bb2:	out    dx,al
  414bb3:	inc    ecx
  414bb4:	push   esi
  414bb5:	jmp    0xb37864e6
  414bba:	adc    BYTE PTR [ebx],dl
  414bbc:	test   eax,0x94ba7ea1
  414bc1:	push   ds
  414bc2:	ret    
  414bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bc4:	rcr    dh,cl
  414bc6:	stos   DWORD PTR es:[edi],eax
  414bc7:	aaa    
  414bc8:	add    al,0x47
  414bca:	jns    0x414b50
  414bcc:	or     dh,dl
  414bce:	bound  esi,QWORD PTR [edi*8+0x1d800dc1]
  414bd5:	hlt    
  414bd6:	adc    BYTE PTR [ebx],bl
  414bd8:	rcr    DWORD PTR [ebx-0x25d8dd3f],1
  414bde:	aas    
  414bdf:	addr16 aam 0x3f
  414be2:	mov    esp,0x6d608e7c
  414be7:	jecxz  0x414c4f
  414be9:	or     ebp,esi
  414beb:	fiadd  DWORD PTR [ecx]
  414bed:	pop    esi
  414bee:	outs   dx,BYTE PTR ds:[esi]
  414bef:	lahf   
  414bf0:	ror    DWORD PTR ss:[edx+0x153e9d80],cl
  414bf7:	add    ebp,0xfffffffa
  414bfa:	jo     0x414baa
  414bfc:	jae    0x414c01
  414bfe:	push   eax
  414bff:	scas   eax,DWORD PTR es:[edi]
  414c00:	scas   eax,DWORD PTR es:[edi]
  414c01:	ins    DWORD PTR es:[edi],dx
  414c02:	xor    BYTE PTR [ebp+0x59],ah
  414c05:	xchg   edi,eax
  414c06:	fist   DWORD PTR es:[eax+0x6ffd31f5]
  414c0d:	retf   0x9add
  414c10:	adc    dl,BYTE PTR [esi-0x7717ef7b]
  414c16:	bound  esp,QWORD PTR [eax]
  414c18:	push   ebp
  414c19:	mov    ss,WORD PTR [esi+0x23]
  414c1c:	mov    ch,0x6d
  414c1e:	lea    esp,[ecx]
  414c20:	outs   dx,BYTE PTR ds:[esi]
  414c21:	cmp    eax,0xf16ed7da
  414c26:	sbb    eax,0xc93f7502
  414c2b:	xor    BYTE PTR [edx+0x6a5b0d2c],dh
  414c31:	mov    bh,0x79
  414c33:	adc    al,0xf0
  414c35:	paddd  mm6,QWORD PTR [esi+0x48]
  414c39:	push   eax
  414c3a:	cmp    ecx,DWORD PTR [ebp+0x62526a1b]
  414c40:	mov    ebp,DWORD PTR [eax]
  414c42:	out    dx,al
  414c43:	dec    ebp
  414c44:	(bad)  
  414c45:	shl    DWORD PTR [ebx-0x57],1
  414c48:	inc    esi
  414c49:	into   
  414c4a:	stc    
  414c4b:	jge    0x414c60
  414c4d:	fs jg  0x414c14
  414c50:	sahf   
  414c51:	(bad)  
  414c52:	fs dec edx
  414c54:	jmp    0xea2e92f3
  414c59:	add    ebx,ebx
  414c5b:	xor    al,0xef
  414c5d:	sahf   
  414c5e:	(bad)  
  414c5f:	adc    edx,ebp
  414c61:	out    dx,al
  414c62:	test   DWORD PTR [esi-0x51],esi
  414c65:	push   es
  414c66:	cmp    edx,esi
  414c68:	aas    
  414c69:	test   BYTE PTR [edi],0x4d
  414c6c:	imul   edx,DWORD PTR ds:0x4156906,0xffffffe0
  414c73:	mov    DWORD PTR [ebx+edx*8+0x15],ecx
  414c77:	shl    al,cl
  414c79:	addr16 popf 
  414c7b:	or     BYTE PTR [eax+0x53],al
  414c7e:	inc    edx
  414c7f:	jg     0x414c2c
  414c81:	daa    
  414c82:	push   eax
  414c83:	and    eax,0xdcc882a4
  414c88:	dec    BYTE PTR [edi+edi*4]
  414c8b:	jno    0x414c2e
  414c8d:	aas    
  414c8e:	icebp  
  414c8f:	mov    bh,dl
  414c91:	cdq    
  414c92:	sbb    ah,dh
  414c94:	sub    BYTE PTR es:[eax+0x4b],al
  414c98:	mov    cl,0xce
  414c9a:	adc    DWORD PTR [ecx+0x5d86d94d],0x34
  414ca1:	das    
  414ca2:	cmp    eax,0x3ef447cb
  414ca7:	sahf   
  414ca8:	dec    ecx
  414ca9:	rcl    DWORD PTR [edi],1
  414cab:	lea    edi,[esi+0x51]
  414cae:	iret   
  414caf:	xor    esp,DWORD PTR ds:0x4f18b872
  414cb5:	shr    DWORD PTR [ebx+eiz*1],1
  414cb8:	test   esi,eax
  414cba:	sub    eax,0xf9b4c301
  414cbf:	sbb    DWORD PTR [ecx+0xf],ebp
  414cc2:	fisub  WORD PTR [edx+0x37]
  414cc5:	xchg   BYTE PTR ss:[esi],bl
  414cc8:	mov    eax,0xb1c39090
  414ccd:	sub    al,0xea
  414ccf:	xor    BYTE PTR [edx+0x25],al
  414cd2:	and    ebp,edi
  414cd4:	jmp    0x3dc50b8e
  414cd9:	loopne 0x414ceb
  414cdb:	fcmovne st,st(5)
  414cdd:	mov    ds:0xf4c2a2e3,eax
  414ce2:	ror    ebx,cl
  414ce4:	sub    al,0x37
  414ce6:	dec    eax
  414ce7:	fadd   st,st(1)
  414ce9:	loope  0x414d0a
  414ceb:	loope  0x414cf9
  414ced:	xor    BYTE PTR [ecx-0x6775871a],cl
  414cf3:	sti    
  414cf4:	enter  0x79d9,0x1a
  414cf8:	aam    0x22
  414cfa:	cli    
  414cfb:	fstp   TBYTE PTR [ebx]
  414cfd:	mov    edx,0xacab614f
  414d02:	fs mov esi,0x5a8641c6
  414d08:	push   edi
  414d09:	pop    es
  414d0a:	repz cs mov eax,cr6
  414d0f:	xor    BYTE PTR [edx],bh
  414d11:	and    edx,ebx
  414d13:	sub    al,0x5d
  414d15:	xchg   edx,eax
  414d16:	and    ebp,ebp
  414d18:	and    BYTE PTR [edx+0x3e4d01d3],0x20
  414d1f:	je     0x414ccd
  414d21:	mov    al,0x15
  414d23:	and    eax,0x28766449
  414d28:	dec    ebx
  414d29:	sbb    al,0x91
  414d2b:	push   ebp
  414d2c:	jecxz  0x414d87
  414d2e:	or     al,0x32
  414d30:	pop    ebx
  414d31:	loop   0x414d51
  414d33:	sbb    eax,0xa96fcab9
  414d38:	dec    esi
  414d39:	rcl    ecx,1
  414d3b:	fsubr  DWORD PTR [esi+0x45b0199]
  414d41:	div    BYTE PTR [ebp+0x6b3fa25]
  414d47:	or     DWORD PTR [ebx+0x433de85a],0xffffffaa
  414d4e:	sub    ebp,DWORD PTR ds:0xd7594988
  414d54:	(bad)  
  414d55:	out    dx,eax
  414d56:	sbb    al,0xb5
  414d58:	jp     0x414dd9
  414d5a:	cmp    DWORD PTR [eax+ecx*8-0x19],edi
  414d5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d5f:	ds inc ebx
  414d61:	sbb    esp,0xffffffad
  414d64:	lods   al,BYTE PTR ds:[esi]
  414d65:	sub    DWORD PTR [esi],esi
  414d67:	dec    esi
  414d68:	loopne 0x414d81
  414d6a:	icebp  
  414d6b:	or     DWORD PTR [edx],0x2b
  414d6e:	nop
  414d6f:	std    
  414d70:	js     0x414dbf
  414d72:	nop
  414d73:	fcom   DWORD PTR [edi]
  414d75:	mov    ebx,0x85715bf1
  414d7a:	push   0xffffffd5
  414d7c:	ret    0x3b85
  414d7f:	mov    esi,0x64412a97
  414d84:	aad    0xd3
  414d86:	dec    esp
  414d87:	aaa    
  414d88:	sbb    BYTE PTR [eax-0x3276057a],dl
  414d8e:	mov    dl,0x1c
  414d90:	repnz pushf 
  414d92:	xchg   edi,eax
  414d93:	rcl    DWORD PTR [eax],1
  414d95:	xchg   ecx,eax
  414d96:	add    ebx,esp
  414d98:	and    al,0x88
  414d9a:	jle    0x414ddd
  414d9c:	sti    
  414d9d:	(bad)  
  414d9e:	sbb    dl,al
  414da0:	ret    
  414da1:	adc    BYTE PTR [ebx-0x48dae5cb],bl
  414da7:	jno    0x414dab
  414da9:	mov    dl,0x67
  414dab:	cmc    
  414dac:	sub    DWORD PTR [esi+0x50],0x5a
  414db0:	xlat   BYTE PTR ds:[ebx]
  414db1:	pop    ebp
  414db2:	xor    edi,ebx
  414db4:	sar    edx,0xcf
  414db7:	xchg   DWORD PTR [esi-0x36dd2408],esi
  414dbd:	dec    ebp
  414dbe:	imul   esp,edx,0xf114561c
  414dc4:	adc    al,0x6c
  414dc6:	das    
  414dc7:	mov    bl,0xd1
  414dc9:	mov    ds:0x500fcec6,al
  414dce:	cmp    eax,0xf6790c5a
  414dd3:	adc    edx,DWORD PTR ds:0x38792d10
  414dd9:	jne    0x1024dde4
  414ddf:	cmp    ebx,DWORD PTR [eax+0x79]
  414de2:	or     ah,BYTE PTR [esi+0x71fa8e99]
  414de8:	shl    DWORD PTR [edx-0x55eccbd6],0x5c
  414def:	pop    ds
  414df0:	jae    0x414de4
  414df2:	pop    es
  414df3:	cdq    
  414df4:	add    ecx,DWORD PTR [ebx+0x76]
  414df7:	aas    
  414df8:	fsave  [esi-0x6de9f5a9]
  414dff:	pop    edx
  414e00:	(bad)  
  414e01:	fcom   DWORD PTR [edi+edx*4]
  414e04:	add    al,0x3f
  414e06:	cwde   
  414e07:	xor    DWORD PTR [edi-0x17ad1464],ebx
  414e0d:	test   BYTE PTR [ebx-0x67],0x63
  414e11:	xchg   edi,eax
  414e12:	(bad)  
  414e13:	mov    bh,0xcf
  414e15:	mov    dl,0xf0
  414e17:	and    esi,edi
  414e19:	cmp    al,0x8a
  414e1b:	sub    bh,dh
  414e1d:	mov    edi,0x6588839c
  414e22:	push   0x17
  414e24:	dec    esi
  414e25:	push   esi
  414e26:	sbb    cl,BYTE PTR [edi-0x8a78c01]
  414e2c:	mov    dh,BYTE PTR [ecx]
  414e2e:	mov    bl,0x62
  414e30:	xor    DWORD PTR [ebp+0x7],edi
  414e33:	test   al,0x36
  414e35:	rcr    dh,1
  414e37:	xchg   DWORD PTR [ebx+eax*8-0x7e],eax
  414e3b:	xor    ch,BYTE PTR [edx-0x5]
  414e3e:	add    BYTE PTR [edx],dl
  414e40:	pmaddwd mm1,QWORD PTR [esp+eax*2]
  414e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e45:	inc    eax
  414e46:	retf   0x4979
  414e49:	or     ah,BYTE PTR [edi-0x5a]
  414e4c:	pusha  
  414e4d:	mov    dh,0xe0
  414e4f:	sbb    eax,0xc690eb06
  414e54:	inc    esp
  414e55:	nop
  414e56:	into   
  414e57:	daa    
  414e58:	jne    0x414e3e
  414e5a:	out    dx,eax
  414e5b:	fs dec eax
  414e5d:	out    0xd,al
  414e5f:	xor    DWORD PTR [ebp+0x3f76de3b],esp
  414e65:	lds    edi,FWORD PTR [esi]
  414e67:	in     al,dx
  414e68:	mov    al,0x2f
  414e6a:	add    ebp,DWORD PTR [ecx+0x78c5c8e1]
  414e70:	pop    edi
  414e71:	out    0x9b,al
  414e73:	call   0x13f3e27
  414e78:	mov    al,ds:0x7d62826d
  414e7d:	jb     0x414ed2
  414e7f:	lods   eax,DWORD PTR ds:[esi]
  414e80:	pop    esi
  414e81:	sub    esp,DWORD PTR [ebx-0x1d]
  414e84:	(bad)  
  414e85:	mov    cl,ch
  414e87:	mov    esi,0xddbc3528
  414e8c:	popa   
  414e8d:	adc    esp,DWORD PTR [si]
  414e90:	cmp    ecx,ebx
  414e92:	out    0xb7,al
  414e94:	and    dl,BYTE PTR ds:[edi-0x176841e0]
  414e9b:	jl     0x414e36
  414e9d:	mov    eax,0x892bf2b0
  414ea2:	cld    
  414ea3:	rcl    DWORD PTR [esi+0x19],cl
  414ea6:	cmc    
  414ea7:	cmp    DWORD PTR [esi],esi
  414ea9:	cli    
  414eaa:	scas   al,BYTE PTR es:[edi]
  414eab:	(bad)  
  414ead:	dec    eax
  414eae:	push   0x24
  414eb0:	xchg   edx,eax
  414eb1:	cmp    ebp,edi
  414eb3:	addr16 add esp,edx
  414eb6:	sub    ebp,DWORD PTR [ebx]
  414eb8:	adc    bl,al
  414eba:	(bad)  
  414ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ebd:	repz es jns 0x414e77
  414ec1:	push   ecx
  414ec2:	sub    BYTE PTR gs:[esp+ebp*2-0xd],cl
  414ec7:	jge    0x414ebf
  414ec9:	xchg   esi,eax
  414eca:	ret    0x7c0d
  414ecd:	cld    
  414ece:	xor    BYTE PTR [eax+ebp*8+0x48cf3bf0],ch
  414ed5:	or     eax,0xafe295bd
  414eda:	(bad)  
  414edb:	push   0xce5ceed9
  414ee0:	and    edi,eax
  414ee2:	addr16 (bad) 
  414ee4:	fsubr  DWORD PTR [ebx]
  414ee6:	and    al,0x24
  414ee8:	or     ebp,ebx
  414eea:	or     DWORD PTR [edi-0x4d],ecx
  414eed:	(bad)
  414ef0:	int3   
  414ef1:	jmp    FWORD PTR [ecx-0x4cb44e97]
  414ef7:	xor    dl,BYTE PTR [esi+0x5]
  414efa:	jne    0x414ee6
  414efc:	in     eax,0xb1
  414efe:	shl    DWORD PTR [edi],cl
  414f00:	and    DWORD PTR [eax-0x2c7e7782],0xf8916748
  414f0a:	adc    al,dh
  414f0c:	pop    DWORD PTR [ecx+0x67c84ea8]
  414f12:	jge    0x414f73
  414f14:	cmp    eax,0x8d8e6579
  414f19:	mov    edi,0xa8aac3ae
  414f1e:	pop    ecx
  414f1f:	xor    BYTE PTR [esp+eax*8],al
  414f22:	pusha  
  414f23:	dec    edx
  414f24:	nop
  414f25:	cld    
  414f26:	retf   0xce4
  414f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f2a:	in     al,0x93
  414f2c:	adc    edi,DWORD PTR [ecx+0x54]
  414f2f:	xchg   ebx,eax
  414f30:	fadd   QWORD PTR [edi+ebp*2+0x4f]
  414f34:	sbb    ecx,DWORD PTR [ecx]
  414f36:	push   es
  414f37:	loop   0x414f7b
  414f39:	call   DWORD PTR [ebx]
  414f3b:	mov    edx,0x78a54eda
  414f40:	dec    ebp
  414f41:	and    bh,dh
  414f43:	mov    dl,0x27
  414f45:	pusha  
  414f46:	sbb    al,0x68
  414f48:	cld    
  414f49:	mov    cs,WORD PTR [ebx-0x52]
  414f4c:	rcl    eax,cl
  414f4e:	pushf  
  414f4f:	xlat   BYTE PTR ds:[ebx]
  414f50:	dec    ebp
  414f51:	(bad)  
  414f52:	hlt    
  414f53:	int3   
  414f54:	xchg   ecx,eax
  414f55:	add    al,0xa
  414f57:	sbb    eax,0x552df6ee
  414f5c:	xchg   DWORD PTR [ebx],esp
  414f5e:	cdq    
  414f5f:	jmp    0x414eff
  414f61:	pop    ecx
  414f62:	xor    eax,0xb8102f93
  414f67:	push   ebx
  414f68:	or     bl,dh
  414f6a:	jno    0x414fe8
  414f6c:	cmp    BYTE PTR [esi+eiz*8-0x14],dh
  414f70:	sub    al,0x88
  414f72:	popf   
  414f73:	mov    eax,edi
  414f75:	cld    
  414f76:	imul   eax,DWORD PTR [esi],0x22
  414f79:	hlt    
  414f7a:	mov    eax,0xa8a882b7
  414f7f:	cmp    BYTE PTR [esp+ebp*2-0x79],al
  414f83:	pop    esp
  414f84:	imul   DWORD PTR [esi+0x3dd10429]
  414f8a:	xchg   esp,eax
  414f8b:	mov    ecx,0x562bcba3
  414f90:	sub    eax,0xe0d0f1f4
  414f95:	sbb    al,0xa7
  414f97:	nop
  414f98:	adc    bh,dl
  414f9a:	push   esi
  414f9b:	repz fs test eax,0xf7c6d5f7
  414fa2:	loop   0x414fa1
  414fa4:	cmp    ecx,DWORD PTR ds:0x8d09917e
  414faa:	rcr    DWORD PTR [esi-0x770b9c03],cl
  414fb0:	pop    edi
  414fb1:	sub    eax,0xf44d3270
  414fb6:	jge    0x414fad
  414fb8:	dec    edi
  414fb9:	pop    eax
  414fba:	fsubr  QWORD PTR [ecx]
  414fbc:	call   0x3748:0x2d3ed33a
  414fc3:	cmp    ah,ch
  414fc5:	jl     0x415018
  414fc7:	aas    
  414fc8:	dec    DWORD PTR [ecx]
  414fca:	mov    ebp,0xd5cf7ed8
  414fcf:	inc    esp
  414fd0:	inc    ebp
  414fd1:	mov    esi,0x58a54fd4
  414fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fd7:	jb     0x414fdc
  414fd9:	or     eax,0x429c62a5
  414fde:	add    ah,dl
  414fe0:	dec    eax
  414fe1:	imul   esi,DWORD PTR [ecx+0x79],0x77
  414fe5:	ins    DWORD PTR es:[edi],dx
  414fe6:	data16 jmp 0x414fee
  414fe9:	movups XMMWORD PTR [edx],xmm6
  414fec:	jg     0x415030
  414fee:	pushf  
  414fef:	pop    esp
  414ff0:	xchg   edx,eax
  414ff1:	jno    0x41506b
  414ff3:	ins    DWORD PTR es:[edi],dx
  414ff4:	add    DWORD PTR [eax+0xf81d46c],eax
  414ffa:	rol    esi,1
  414ffc:	jbe    0x414fe1
  414ffe:	or     al,0x9e
  415000:	js     0x41505e
  415002:	test   esi,ebx
  415004:	out    0x2c,al
  415006:	cli    
  415007:	mov    cs,eax
  415009:	sub    ch,cl
  41500b:	xchg   ah,al
  41500d:	add    al,0x56
  41500f:	pop    ecx
  415010:	cmp    esp,ecx
  415012:	add    ch,BYTE PTR [eax-0x71091b57]
  415018:	xor    DWORD PTR [eax-0x22],esp
  41501b:	ins    DWORD PTR es:[edi],dx
  41501c:	mov    al,0x23
  41501e:	sbb    DWORD PTR [eax-0x1b],ebp
  415021:	ins    BYTE PTR es:[edi],dx
  415022:	mov    edi,0x34770ec0
  415027:	aaa    
  415028:	adc    edx,ebp
  41502a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41502b:	xor    BYTE PTR [ebx-0x1d2cd5df],0x11
  415032:	xor    cl,cl
  415034:	lods   al,BYTE PTR ds:[esi]
  415035:	iret   
  415036:	mov    WORD PTR [ecx-0x73b4f3e5],es
  41503c:	ficomp DWORD PTR [edi+0x18]
  41503f:	push   ds
  415040:	fld    DWORD PTR [ecx+0x21571dce]
  415046:	ret    
  415047:	mov    ch,0x63
  415049:	dec    eax
  41504a:	sahf   
  41504b:	in     eax,dx
  41504c:	inc    esi
  41504d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41504e:	pop    es
  41504f:	fcomp  DWORD PTR [edi]
  415051:	mov    ch,BYTE PTR [edi-0x53]
  415054:	push   eax
  415055:	xchg   ebp,eax
  415056:	add    al,0xb7
  415058:	pusha  
  415059:	jne    0x415006
  41505b:	mov    cs,WORD PTR [edx]
  41505d:	dec    edi
  41505e:	sub    DWORD PTR [esi],ecx
  415060:	dec    ecx
  415061:	mov    cl,BYTE PTR [ebp-0x36]
  415064:	mov    esp,0x9fcf6d15
  415069:	sub    bh,bl
  41506b:	cld    
  41506c:	xchg   esp,eax
  41506d:	sub    eax,0x97d17a84
  415072:	rol    BYTE PTR [edi-0x741e9ee0],cl
  415078:	das    
  415079:	cmp    al,0x2
  41507b:	jmp    0x939:0x953fc7a5
  415082:	int3   
  415083:	and    edx,DWORD PTR [eax+0x4f67d81f]
  415089:	test   BYTE PTR [ebx-0x611e36a7],0x5c
  415090:	adc    ah,BYTE PTR [edx]
  415092:	jecxz  0x415033
  415094:	test   BYTE PTR [edx+0x6],dh
  415097:	popa   
  415098:	xchg   esi,eax
  415099:	cli    
  41509a:	repnz in eax,dx
  41509c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41509d:	(bad)  
  41509e:	or     bh,bl
  4150a0:	cwde   
  4150a1:	outs   dx,BYTE PTR gs:[esi]
  4150a3:	dec    eax
  4150a4:	loope  0x415093
  4150a6:	mov    ds:0x4a0634f1,eax
  4150ab:	cdq    
  4150ac:	jmp    0x7a40fa54
  4150b1:	dec    ebp
  4150b2:	pop    esp
  4150b3:	push   0xffffffc6
  4150b5:	sbb    bh,BYTE PTR [ecx+0x62a7d790]
  4150bb:	sbb    ebx,DWORD PTR [ecx+0x52]
  4150be:	sbb    eax,0x1bb68853
  4150c3:	push   edi
  4150c4:	stc    
  4150c5:	push   ecx
  4150c6:	addr16 sti 
  4150c8:	pop    ss
  4150c9:	adc    edx,DWORD PTR [eax-0xc2380d5]
  4150cf:	mov    dh,0x9a
  4150d1:	(bad)  
  4150d2:	and    eax,0xd2172be7
  4150d7:	xor    DWORD PTR [esi+0xc],ebx
  4150da:	cmp    ecx,eax
  4150dc:	pushf  
  4150dd:	aas    
  4150de:	add    al,0xd0
  4150e0:	mov    eax,es:0x37ac0c67
  4150e6:	add    esi,DWORD PTR [ecx+0x6c]
  4150e9:	inc    esi
  4150ea:	mov    al,0x3b
  4150ec:	mov    ch,0xb8
  4150ee:	jo     0x41513c
  4150f0:	adc    al,0x8b
  4150f2:	ds sahf 
  4150f4:	cwde   
  4150f5:	call   0xebcf:0xf2199ad8
  4150fc:	mov    dh,0x3c
  4150fe:	daa    
  4150ff:	adc    ah,ch
  415101:	jmp    0xd28d1b82
  415106:	shr    DWORD PTR [edx+esi*2+0x6b],1
  41510a:	out    dx,al
  41510b:	mov    ecx,0x35aa58aa
  415110:	mov    dh,0xd2
  415112:	adc    ah,BYTE PTR es:[ebp+0x6a6aee06]
  415119:	(bad)
  41511c:	scas   eax,DWORD PTR es:[edi]
  41511d:	dec    ebx
  41511e:	adc    eax,0xa5d15275
  415123:	and    al,0x83
  415125:	sbb    ecx,DWORD PTR [eax]
  415127:	sub    al,0xfe
  415129:	mov    al,ds:0x84f12722
  41512e:	mov    DWORD PTR [edx+0x2a1c0b74],ebx
  415134:	xchg   BYTE PTR [ebp+esi*8+0x22],ch
  415138:	mov    esp,0x7a27016b
  41513d:	iret   
  41513e:	xchg   edx,eax
  41513f:	scas   eax,DWORD PTR es:[edi]
  415140:	aam    0x12
  415142:	xchg   BYTE PTR [edi],ch
  415144:	js     0x415114
  415146:	lock jbe 0x415187
  415149:	adc    bl,BYTE PTR ds:0x4ecafcd4
  41514f:	sub    esp,edi
  415151:	lds    ecx,FWORD PTR [eax-0x3]
  415154:	neg    dl
  415156:	dec    ebx
  415157:	inc    edi
  415158:	(bad)  [ebx-0x61]
  41515b:	scas   al,BYTE PTR es:[edi]
  41515c:	cmp    al,BYTE PTR [esi-0x1a138ef]
  415162:	ja     0x41519f
  415164:	sub    dh,cl
  415166:	inc    esp
  415167:	push   ss
  415168:	ret    0x30f2
  41516b:	mov    dl,0x8
  41516d:	and    eax,0x4307d13d
  415172:	xchg   ebx,eax
  415173:	xchg   edi,eax
  415174:	pop    ss
  415175:	xchg   ebx,eax
  415176:	xchg   ecx,eax
  415177:	cli    
  415178:	jle    0x41518f
  41517a:	adc    eax,0x151bc6f2
  41517f:	in     al,0x59
  415181:	mov    ds:0x12aaf63,eax
  415186:	pop    esi
  415187:	and    BYTE PTR [ecx],bh
  415189:	les    esp,FWORD PTR [ecx+0x2]
  41518c:	out    dx,al
  41518d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41518e:	mov    al,ds:0x26b023f3
  415193:	pop    ecx
  415194:	add    eax,edx
  415196:	sbb    al,0x71
  415198:	stos   DWORD PTR es:[edi],eax
  415199:	xlat   BYTE PTR ds:[ebx]
  41519a:	in     al,dx
  41519b:	test   ch,0x16
  41519e:	cmp    ecx,DWORD PTR [ecx+esi*8+0x6be52434]
  4151a5:	jg     0x4151b0
  4151a7:	cwde   
  4151a8:	lock inc ebx
  4151aa:	pop    esi
  4151ab:	pusha  
  4151ac:	pop    es
  4151ad:	in     al,0x20
  4151af:	(bad)  
  4151b0:	jmp    0x4151a0
  4151b2:	inc    esi
  4151b3:	adc    bl,dl
  4151b5:	jle    0x4151ce
  4151b7:	cli    
  4151b8:	stos   DWORD PTR es:[edi],eax
  4151b9:	inc    ecx
  4151ba:	aas    
  4151bb:	jnp    0x415195
  4151bd:	dec    edi
  4151be:	sbb    bx,WORD PTR [ecx]
  4151c1:	repnz ins BYTE PTR es:[edi],dx
  4151c3:	push   0x2b
  4151c5:	repz shl DWORD PTR [edi-0x15],1
  4151c9:	test   bl,ah
  4151cb:	sub    dl,BYTE PTR [edi]
  4151cd:	add    eax,0x3767c9e5
  4151d2:	inc    edi
  4151d3:	mov    al,ds:0xb31c2af6
  4151d8:	in     al,dx
  4151d9:	mov    esi,0x57c0e35c
  4151de:	or     BYTE PTR [edx],al
  4151e0:	fsubrp st(6),st
  4151e2:	rol    BYTE PTR [eax-0x39],cl
  4151e5:	cmp    eax,0x291e55cd
  4151ea:	cmp    BYTE PTR [esi],al
  4151ec:	mov    dl,ah
  4151ee:	sub    dl,BYTE PTR [esi-0x17]
  4151f1:	cld    
  4151f2:	shl    BYTE PTR [edx+0x1fc11774],cl
  4151f8:	push   cs
  4151f9:	(bad)  
  4151fa:	popf   
  4151fb:	outs   dx,BYTE PTR ds:[esi]
  4151fc:	jmp    FWORD PTR [eax+esi*4+0x3f6d16fa]
  415203:	loopne 0x41522d
  415205:	add    eax,0xb6bbc94b
  41520a:	test   ah,dl
  41520c:	stc    
  41520d:	pop    ebp
  41520e:	jg     0x4151d7
  415210:	cmp    eax,0x40f01a2c
  415215:	fadd   st(3),st
  415217:	(bad)  
  415218:	enter  0x49e9,0x98
  41521c:	sub    eax,0x5cbd7a27
  415221:	retf   
  415222:	or     cl,ah
  415224:	cli    
  415225:	push   ecx
  415226:	or     eax,eax
  415228:	cmp    eax,0x5d385bd
  41522d:	(bad)  
  41522e:	jae    0x4151cf
  415230:	(bad)  
  415231:	lds    edi,FWORD PTR [edi+0x3b]
  415234:	inc    eax
  415235:	jecxz  0x41525c
  415237:	sub    ebx,0xecc8ac46
  41523d:	idiv   eax
  41523f:	inc    edi
  415240:	cwde   
  415241:	xor    cl,0x84
  415244:	xchg   DWORD PTR [edi],eax
  415246:	aad    0x2f
  415248:	push   edx
  415249:	cmp    cl,dl
  41524b:	inc    eax
  41524c:	xchg   BYTE PTR [ebx+0x68ff5be4],ch
  415252:	and    ebx,DWORD PTR [edi]
  415254:	jge    0x41521e
  415256:	xchg   esp,eax
  415258:	in     al,0xc5
  41525a:	fmul   st(1),st
  41525c:	iret   
  41525d:	lea    ebp,[eax+edx*2-0x4d9f0d64]
  415264:	aad    0x43
  415266:	sbb    eax,0x5196e352
  41526b:	ret    
  41526c:	add    eax,0xf92a3c0e
  415271:	gs pop ecx
  415273:	mov    edx,0x4a9ae2b1
  415278:	pop    DWORD PTR [eax+eiz*1]
  41527b:	loopne 0x415275
  41527d:	leave  
  41527e:	fwait
  41527f:	popf   
  415280:	pop    esp
  415281:	inc    edi
  415282:	fyl2x  
  415284:	lds    ecx,FWORD PTR [ecx+0x66c45d55]
  41528a:	test   al,0x80
  41528c:	mov    edi,ebx
  41528e:	fisub  DWORD PTR [ecx+0x63]
  415291:	cmp    dh,ah
  415293:	ds repnz xor al,0x48
  415297:	in     eax,0x1b
  415299:	pop    esi
  41529a:	jbe    0x415256
  41529c:	ins    DWORD PTR es:[edi],dx
  41529d:	nop
  41529e:	sub    edi,ebx
  4152a0:	dec    esp
  4152a1:	mov    esi,0xcf708662
  4152a6:	and    eax,0xbcdc1ca5
  4152ab:	mov    esi,0xcd538809
  4152b0:	jl     0x415293
  4152b2:	mov    DWORD PTR [edx+ebx*8-0x1c7d9786],ebx
  4152b9:	call   0x6520c076
  4152be:	xlat   BYTE PTR ds:[ebx]
  4152bf:	call   0xb293:0x68537624
  4152c6:	cmp    edx,DWORD PTR [ebx]
  4152c8:	dec    esi
  4152c9:	sub    eax,0x707006ba
  4152ce:	aam    0xdd
  4152d0:	sbb    ebx,DWORD PTR [ecx+0x8]
  4152d3:	mov    ah,0xe
  4152d5:	jae    0x4152b1
  4152d7:	nop
  4152d8:	ins    DWORD PTR es:[edi],dx
  4152d9:	xor    eax,0xcf18ae18
  4152de:	das    
  4152df:	push   ss
  4152e0:	xor    DWORD PTR [esi-0x4841a570],esp
  4152e6:	into   
  4152e7:	std    
  4152e8:	ja     0x41532d
  4152ea:	xchg   ecx,eax
  4152eb:	out    0xb7,al
  4152ed:	repz lds edi,FWORD PTR [ebx-0x16dba607]
  4152f4:	stc    
  4152f5:	in     eax,0x8f
  4152f7:	rcl    BYTE PTR [esi+0x75156e92],0x11
  4152fe:	sub    al,0x11
  415300:	push   0xffffffc6
  415302:	xchg   esi,eax
  415303:	cmp    BYTE PTR [esi],al
  415305:	mov    ch,0x52
  415307:	adc    BYTE PTR [esi+0x1da94cfd],bh
  41530d:	xor    edi,DWORD PTR [edi-0x5dfba7eb]
  415313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415314:	jp     0x4152b4
  415316:	pop    es
  415317:	mov    edi,0x694b4373
  41531c:	std    
  41531d:	fwait
  41531e:	jmp    0x41539c
  415320:	push   eax
  415321:	call   0xf89947c8
  415326:	push   ss
  415327:	test   DWORD PTR [eax-0x34],0xcb3974bb
  41532e:	mov    bl,0x53
  415330:	pop    ds
  415331:	jecxz  0x415339
  415333:	iret   
  415334:	sbb    esi,ebx
  415336:	and    eax,ebp
  415338:	das    
  415339:	push   es
  41533a:	adc    ebp,DWORD PTR [edi+0x3dd8a03e]
  415340:	jno    0x415318
  415342:	out    dx,eax
  415343:	push   ecx
  415344:	mov    WORD PTR [edx+0x18],?
  415347:	out    0x54,eax
  415349:	(bad)  
  41534a:	or     dl,BYTE PTR [esi]
  41534c:	push   cs
  41534d:	ds mov eax,0xa2efa5c6
  415353:	lds    esp,FWORD PTR [ecx+0x2815f08f]
  415359:	push   edi
  41535a:	je     0x415313
  41535c:	jp     0x415356
  41535e:	mov    edi,0x8f47d4ad
  415363:	imul   ecx,DWORD PTR [ebp+0x25],0x61
  415367:	jo     0x415330
  415369:	sbb    DWORD PTR [edi],0xffffff81
  41536c:	outs   dx,BYTE PTR ds:[esi]
  41536d:	fnstcw WORD PTR [ecx]
  41536f:	xor    DWORD PTR ds:[ebp+0x39c91c33],esp
  415376:	and    BYTE PTR [ebp+ebp*4-0x5db0951e],al
  41537d:	jne    0x415300
  41537f:	pop    ebx
  415380:	or     DWORD PTR [ecx+ebx*1],edx
  415383:	out    0xbb,eax
  415385:	aad    0x21
  415387:	cmc    
  415388:	xchg   esp,eax
  415389:	mov    BYTE PTR [eax-0x55],bl
  41538c:	or     DWORD PTR [ebx+eax*1],0x2ae869db
  415393:	rol    BYTE PTR [edi],0xf3
  415396:	retf   0xd1c8
  415399:	sbb    BYTE PTR [esi+0x71],0xd4
  41539d:	xor    al,0xfa
  41539f:	add    eax,0x9265c0b7
  4153a4:	hlt    
  4153a5:	or     BYTE PTR [ebx-0x2b],cl
  4153a8:	add    DWORD PTR [ecx+0x6721c081],edi
  4153ae:	xor    al,0x51
  4153b0:	and    al,0x3c
  4153b2:	shr    BYTE PTR [edx],cl
  4153b4:	add    ebx,0x9db5bd34
  4153ba:	sbb    DWORD PTR [ebp+0x3f1f4d9e],edx
  4153c0:	push   eax
  4153c1:	repz sbb ebp,esp
  4153c4:	les    edx,FWORD PTR [edx+0x63eac4fb]
  4153ca:	xchg   ebp,eax
  4153cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153cc:	mov    bh,cl
  4153ce:	stc    
  4153cf:	or     al,0x80
  4153d1:	loopne 0x415386
  4153d3:	jne    0x415390
  4153d5:	push   es
  4153d6:	call   0x5504:0x2ec6c7c5
  4153dd:	les    ebp,FWORD PTR [ecx-0x4e]
  4153e0:	add    al,0x59
  4153e2:	loopne 0x415381
  4153e4:	repz pop esp
  4153e6:	jmp    DWORD PTR [edi+0x5f271f54]
  4153ec:	or     ebp,DWORD PTR [eax+0x75a2a615]
  4153f2:	push   esi
  4153f3:	sub    al,0xeb
  4153f5:	cmc    
  4153f6:	cmp    DWORD PTR [eax],eax
  4153f8:	hlt    
  4153f9:	push   edx
  4153fa:	pop    ecx
  4153fb:	or     DWORD PTR [ebx],ecx
  4153fd:	xor    dl,ch
  4153ff:	cs data16 sbb bl,bh
  415403:	fldenv [esp+ebp*4+0x7b4ca963]
  41540a:	or     eax,0xf9a532f1
  41540f:	test   esp,esp
  415411:	int    0x57
  415413:	dec    ebx
  415414:	add    BYTE PTR [eax],ch
  415416:	sbb    eax,0xcdb36e96
  41541b:	mov    ds:0x17316fb,eax
  415420:	xor    dl,BYTE PTR [edi+0x2fae1c3f]
  415426:	push   esp
  415427:	jo     0x415402
  415429:	shl    BYTE PTR [eax-0x29],0xc4
  41542d:	fadd   st(2),st
  41542f:	inc    ebx
  415430:	xchg   esp,eax
  415431:	lock push ebp
  415433:	sbb    dl,dh
  415435:	adc    edx,DWORD PTR [edi]
  415437:	in     al,0x12
  415439:	out    0xda,al
  41543b:	mov    dl,0x6a
  41543d:	adc    ebp,DWORD PTR [edi-0x74]
  415440:	fmul   QWORD PTR [ebp+ecx*1-0x1ae8490]
  415447:	int3   
  415448:	xor    eax,0x7cd2b3e3
  41544d:	jo     0x41549c
  41544f:	xchg   ebp,eax
  415450:	xor    eax,0x8cec6889
  415455:	pop    es
  415456:	(bad)  
  415458:	adc    ebp,DWORD PTR [ecx+0x761bb237]
  41545e:	add    al,0x1d
  415460:	fldcw  WORD PTR [ecx]
  415462:	jp     0x41545f
  415464:	jl     0x415489
  415466:	gs std 
  415468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415469:	dec    ebp
  41546a:	sub    BYTE PTR [ebp+edi*8-0x7f],cl
  41546e:	inc    esp
  41546f:	into   
  415470:	pop    ebx
  415471:	add    DWORD PTR [edx-0x2d826f7d],esp
  415477:	xchg   ebx,eax
  415478:	cli    
  415479:	jge    0x415455
  41547b:	(bad)  
  41547c:	int    0x38
  41547e:	aam    0x73
  415480:	cs jb  0x4154bb
  415483:	repz dec eax
  415485:	sub    ebp,DWORD PTR [ebx]
  415487:	out    dx,eax
  415488:	mov    dl,0x85
  41548a:	cmp    esi,esi
  41548c:	int3   
  41548d:	gs cmp al,0x77
  415490:	in     eax,dx
  415491:	mov    ds:0xa176edee,eax
  415496:	in     eax,dx
  415497:	pop    eax
  415498:	sub    al,0x47
  41549a:	sar    esi,1
  41549c:	cmp    ebx,DWORD PTR [ebx]
  41549e:	in     al,dx
  41549f:	add    cl,BYTE PTR [ebx]
  4154a1:	and    ecx,0x3b9920f
  4154a7:	sti    
  4154a8:	dec    edi
  4154a9:	xchg   ch,bh
  4154ab:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4154ad:	in     eax,0xf9
  4154af:	mov    ds:0x415b22dc,al
  4154b4:	mov    esi,0x33e13a45
  4154b9:	push   cs
  4154ba:	mov    edx,DWORD PTR [ebx-0x37]
  4154bd:	xor    esp,DWORD PTR [edx-0x3d231774]
  4154c3:	hlt    
  4154c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154c5:	mov    eax,ds:0x1ea22d3
  4154ca:	fstp   QWORD PTR [ebp-0x55]
  4154cd:	in     eax,0xf9
  4154cf:	mov    al,0x23
  4154d1:	std    
  4154d2:	mov    bh,BYTE PTR [esi]
  4154d4:	adc    eax,0x30779808
  4154d9:	ss pop esi
  4154db:	or     bl,BYTE PTR [eax-0x71]
  4154de:	and    ebx,DWORD PTR [ebx+0x3dc1ef60]
  4154e4:	sbb    eax,DWORD PTR [edx]
  4154e6:	push   eax
  4154e7:	and    BYTE PTR [edi+0xfba41d4],bl
  4154ed:	std    
  4154ee:	sti    
  4154ef:	js     0x4154a9
  4154f1:	bnd jmp 0x91a81137
  4154f7:	sub    DWORD PTR [ebx],eax
  4154f9:	imul   ebp,ebx,0xfffffff2
  4154fc:	mov    bl,0x50
  4154fe:	pop    es
  4154ff:	add    BYTE PTR [esi+esi*8+0x27],bl
  415503:	outs   dx,BYTE PTR ds:[esi]
  415504:	inc    eax
  415505:	push   0x2c
  415507:	adc    ch,BYTE PTR [ebp+0x495a1c12]
  41550d:	pop    edi
  41550e:	xlat   BYTE PTR ds:[ebx]
  41550f:	cmc    
  415510:	mov    dh,0x45
  415512:	inc    ebx
  415513:	(bad)  
  415514:	(bad)  
  415516:	inc    edi
  415517:	mov    ah,BYTE PTR [ebp+0x38]
  41551a:	mov    bh,0x2a
  41551c:	pusha  
  41551d:	das    
  41551e:	cwde   
  41551f:	xor    ecx,DWORD PTR [eax+ebp*1-0x3b36e32b]
  415526:	js     0x415552
  415528:	xor    esp,DWORD PTR [esi+0x3df9875f]
  41552e:	sub    DWORD PTR [ecx+edi*4-0x48],edi
  415532:	xchg   esi,eax
  415533:	pop    ecx
  415534:	test   al,0x4f
  415536:	fsubrp st(0),st
  415538:	push   ecx
  415539:	pushf  
  41553a:	xchg   esi,eax
  41553b:	sub    bl,BYTE PTR [ebx-0x21]
  41553e:	inc    ebp
  41553f:	and    ecx,ebp
  415541:	mov    bh,0x3f
  415543:	jbe    0x4155ae
  415545:	fild   WORD PTR [ebp+0x75d0da02]
  41554b:	mov    es,WORD PTR [ebx+0x52]
  41554e:	hlt    
  41554f:	cmp    eax,0x2ab2a8ea
  415554:	adc    ah,al
  415556:	rcr    DWORD PTR [edx+ebp*8],1
  415559:	sbb    BYTE PTR [esi],0x19
  41555c:	int    0x17
  41555e:	cld    
  41555f:	cmp    eax,0x327989a2
  415564:	test   al,0x2e
  415566:	cli    
  415567:	pop    esp
  415568:	fisub  WORD PTR [ecx]
  41556a:	pop    es
  41556b:	lea    esi,[ebx+0x3541ed38]
  415571:	jb     0x4155ca
  415573:	mov    BYTE PTR [ecx],bh
  415575:	push   edi
  415576:	jo     0x415561
  415578:	out    dx,eax
  415579:	push   esp
  41557a:	and    eax,0x3b20b304
  41557f:	pop    edi
  415580:	dec    esi
  415581:	xchg   esi,eax
  415582:	ins    BYTE PTR es:[di],dx
  415584:	jns    0x415509
  415586:	outs   dx,DWORD PTR ds:[esi]
  415587:	or     ecx,esp
  415589:	jmp    0x4d3bbd27
  41558e:	sub    ecx,0x2527c682
  415594:	mov    ah,0x7e
  415596:	xor    eax,esp
  415598:	fwait
  415599:	sub    al,0xc7
  41559b:	sbb    al,0xe4
  41559d:	mov    eax,0xa40b9b55
  4155a2:	dec    ecx
  4155a3:	aaa    
  4155a4:	push   ebx
  4155a5:	or     DWORD PTR [eax],edx
  4155a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155a8:	sar    BYTE PTR [edi],cl
  4155aa:	nop
  4155ab:	push   edx
  4155ac:	jmp    0xcaf2f69f
  4155b1:	mov    ch,0x52
  4155b3:	dec    DWORD PTR ds:[ebp+0x29627300]
  4155ba:	xchg   BYTE PTR [edi],dh
  4155bc:	and    al,BYTE PTR [ebx]
  4155be:	inc    ecx
  4155bf:	cdq    
  4155c0:	inc    eax
  4155c1:	push   0x8f6e031f
  4155c6:	imul   esi,DWORD PTR ds:0x22fae83,0x997c8a00
  4155d0:	sub    esi,DWORD PTR [eax]
  4155d2:	mov    dh,0xab
  4155d4:	and    DWORD PTR [esi+0x9],edx
  4155d7:	dec    ebx
  4155d8:	inc    edi
  4155d9:	push   edx
  4155da:	push   0x6bc9063
  4155df:	cmc    
  4155e0:	repz int 0xf7
  4155e3:	add    eax,0x49245573
  4155e8:	push   ebx
  4155e9:	jno    0x4155e0
  4155eb:	xchg   ecx,eax
  4155ec:	aad    0xb0
  4155ee:	ficom  WORD PTR [ecx+0x5fc4f96]
  4155f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155f5:	jnp    0x415605
  4155f7:	inc    edi
  4155f8:	out    0xfe,eax
  4155fa:	jmp    0x41562a
  4155fc:	add    eax,DWORD PTR [ecx-0x232e54cd]
  415602:	mov    ds:0x84f05dbb,eax
  415607:	jp     0x415676
  415609:	aad    0x59
  41560b:	cld    
  41560c:	hlt    
  41560d:	cmp    al,0x30
  41560f:	(bad)  
  415610:	sub    al,0x63
  415612:	inc    esi
  415613:	adc    DWORD PTR [esi],ebp
  415615:	ficomp DWORD PTR [ecx-0x67427ef8]
  41561b:	in     eax,0x49
  41561d:	mov    ch,0x3e
  41561f:	lea    ebx,ds:0x34159bb8
  415625:	es leave 
  415627:	dec    ebp
  415628:	inc    ebp
  415629:	bound  ecx,QWORD PTR [ecx+0x615e5c9]
  41562f:	int    0x4d
  415631:	pushf  
  415632:	in     eax,0x86
  415634:	add    edx,DWORD PTR [esi-0x3d24bb6f]
  41563a:	fist   DWORD PTR [ebx-0x62]
  41563d:	(bad)  
  41563e:	xchg   edx,eax
  41563f:	mov    eax,ds:0xea5570bc
  415644:	push   esp
  415645:	jae    0x415620
  415647:	sbb    cl,BYTE PTR [ebx-0x63ca3d74]
  41564d:	ins    DWORD PTR es:[edi],dx
  41564e:	mov    esp,tr3
  415651:	dec    edx
  415652:	sar    edi,1
  415654:	push   ebp
  415655:	add    eax,0xf79f1de1
  41565a:	jne    0x415657
  41565c:	arpl   ax,ax
  41565e:	mov    bh,0xc1
  415660:	clc    
  415661:	sub    al,0x1c
  415663:	dec    edx
  415664:	mov    WORD PTR [ebp+eiz*8-0x6e],ds
  415668:	xor    edx,edi
  41566a:	jb     0x415670
  41566c:	xchg   edx,eax
  41566d:	fwait
  41566e:	adc    eax,0x9f5575c5
  415673:	pop    es
  415674:	pusha  
  415675:	adc    cl,ch
  415677:	mov    esi,esp
  415679:	jae    0x41569e
  41567b:	in     eax,dx
  41567c:	stos   DWORD PTR es:[edi],eax
  41567d:	inc    eax
  41567e:	loope  0x415644
  415680:	and    bl,BYTE PTR [ebp+0x13]
  415683:	in     eax,0xbc
  415685:	sub    eax,0x8861d531
  41568a:	sti    
  41568b:	clc    
  41568c:	add    bl,BYTE PTR [edx-0x72139209]
  415692:	std    
  415693:	rol    ebx,1
  415695:	rcr    DWORD PTR [esp+esi*1],0x3a
  415699:	call   0x95b4937e
  41569e:	inc    edi
  41569f:	mov    dh,0x0
  4156a1:	call   0x23ab9454
  4156a6:	inc    esi
  4156a7:	cli    
  4156a8:	jne    0x415702
  4156aa:	cmc    
  4156ab:	mov    dl,0x8c
  4156ad:	in     eax,dx
  4156ae:	ret    0x94a3
  4156b1:	out    0x91,eax
  4156b3:	pop    edi
  4156b4:	xchg   edx,eax
  4156b5:	pop    ebp
  4156b6:	xor    DWORD PTR [ebp-0x80],0x9330f89b
  4156bd:	jecxz  0x415729
  4156bf:	call   0xa39a:0x6992fc64
  4156c6:	ret    
  4156c7:	rcr    dl,cl
  4156c9:	xor    edx,esi
  4156cb:	jno    0x415653
  4156cd:	ror    BYTE PTR [edx+eax*2+0x5b2a8d72],0x76
  4156d5:	data16 mov BYTE PTR [ebx+0x40],al
  4156d9:	or     al,0x32
  4156db:	jns    0x41566b
  4156dd:	push   edi
  4156de:	jae    0x415714
  4156e0:	adc    bh,cl
  4156e2:	sti    
  4156e3:	mov    WORD PTR [ebp-0x3e9c3bde],ss
  4156e9:	push   eax
  4156ea:	dec    esp
  4156eb:	scas   al,BYTE PTR es:[edi]
  4156ec:	cmp    DWORD PTR [eax-0x162161b0],eax
  4156f2:	hlt    
  4156f3:	test   eax,0xb038f62d
  4156f8:	xchg   al,ah
  4156fa:	(bad)  
  4156fc:	xchg   ecx,eax
  4156fd:	xchg   DWORD PTR [edi+0x6c268ed8],ecx
  415703:	push   esi
  415704:	ins    BYTE PTR es:[edi],dx
  415705:	test   BYTE PTR ds:[esi+0x4d1183f5],bl
  41570c:	jp     0x4156ea
  41570e:	mov    edi,0x39cb7c45
  415713:	jne    0x4156b1
  415715:	inc    ecx
  415716:	inc    esi
  415717:	retf   0x66c3
  41571a:	cmp    dl,dl
  41571c:	dec    ebp
  41571d:	push   edi
  41571e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41571f:	pop    ss
  415720:	lods   al,BYTE PTR ds:[esi]
  415721:	xchg   edx,eax
  415722:	jmp    0xbf71eb28
  415727:	out    dx,eax
  415728:	and    al,0xb6
  41572a:	xchg   ebx,eax
  41572b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41572c:	push   ss
  41572d:	sbb    DWORD PTR [edx+0x70],edx
  415730:	jns    0x41573a
  415732:	adc    DWORD PTR [ecx+edi*4+0x8],0xfffffff2
  415737:	mov    al,ds:0x2b4ef1c
  41573c:	shl    BYTE PTR [eax],cl
  41573e:	dec    ebp
  41573f:	fwait
  415740:	imul   edx,DWORD PTR [ebx-0x70],0x1f367204
  415747:	fisub  WORD PTR [esi-0x21]
  41574a:	shr    BYTE PTR [edx-0x5a31ce51],cl
  415750:	sbb    BYTE PTR ds:0xc88393ba,bh
  415756:	inc    esp
  415757:	fidiv  DWORD PTR [ebx-0x58]
  41575a:	mov    ah,0xcb
  41575c:	(bad)  
  41575d:	jmp    0xb145:0xe23035a2
  415764:	clc    
  415765:	stc    
  415766:	lods   al,BYTE PTR ds:[esi]
  415767:	or     ecx,ebx
  415769:	fucom  st(1)
  41576b:	call   0xefa8aeb2
  415770:	jno    0x415745
  415772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415773:	mov    ss,WORD PTR [eax]
  415775:	xor    BYTE PTR [ebx-0x3b],0xb7
  415779:	outs   dx,DWORD PTR ds:[esi]
  41577a:	mov    BYTE PTR [edx+0x49],ch
  41577d:	jb     0x415702
  41577f:	jnp    0x4157e3
  415781:	xchg   BYTE PTR [edi+0x3daa61db],ch
  415787:	xchg   DWORD PTR [ebx+ebp*4+0x4f40c9bc],ebp
  41578e:	mov    gs,edi
  415790:	in     al,0x29
  415792:	stc    
  415793:	retf   
  415794:	pop    esp
  415795:	test   DWORD PTR [edi],0xf70335de
  41579b:	popf   
  41579c:	xchg   esp,eax
  41579d:	or     DWORD PTR [ebx],edx
  41579f:	sbb    al,0xa5
  4157a1:	pop    esi
  4157a2:	nop
  4157a3:	cmp    ch,0x6
  4157a6:	adc    eax,0xfbd605c7
  4157ab:	(bad)
  4157ae:	sub    al,0x17
  4157b0:	mov    bl,0xce
  4157b2:	pop    edi
  4157b3:	int    0x24
  4157b5:	or     bh,dh
  4157b7:	dec    eax
  4157b8:	lods   al,BYTE PTR ds:[esi]
  4157b9:	xchg   BYTE PTR [esi+edi*1+0x6c731112],bl
  4157c0:	iret   
  4157c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157c2:	popf   
  4157c3:	xchg   ebx,eax
  4157c4:	push   eax
  4157c5:	test   BYTE PTR [ebx],bl
  4157c7:	mov    DWORD PTR [edx+0x24],edx
  4157ca:	cmp    bh,BYTE PTR ds:0x659eaa05
  4157d0:	fstp   QWORD PTR [ebp-0x72091517]
  4157d6:	adc    dl,dl
  4157d8:	sub    al,0xd
  4157da:	cwde   
  4157db:	pusha  
  4157dc:	outs   dx,BYTE PTR ds:[esi]
  4157dd:	loop   0x4157d7
  4157df:	test   al,0x6b
  4157e1:	ret    0x45cb
  4157e4:	jnp    0x4157a3
  4157e6:	and    edi,0x45
  4157e9:	adc    edx,DWORD PTR [ebx+0x23d94afc]
  4157ef:	jmp    0x415812
  4157f1:	add    eax,0xd4219755
  4157f6:	rcl    DWORD PTR [edx-0x22092a6e],cl
  4157fc:	xor    BYTE PTR [edx+0x46],ah
  4157ff:	xor    eax,0x5a4ae586
  415804:	add    al,0x3c
  415806:	addr16 popf 
  415808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415809:	mov    eax,0xe3c4c99b
  41580e:	pushf  
  41580f:	mov    dl,0xc5
  415811:	mov    cl,0xa2
  415813:	jecxz  0x41580a
  415815:	lea    edi,[ecx]
  415817:	jne    0x415894
  415819:	imul   esi,DWORD PTR [edx-0x4d88d180],0x31
  415820:	cs fucomp st(6)
  415823:	in     eax,dx
  415824:	call   0x6a7e5a40
  415829:	mov    dh,0x1d
  41582b:	sub    al,0xcf
  41582d:	cmp    edx,eax
  41582f:	xchg   ebx,eax
  415830:	and    edx,DWORD PTR [ebp-0x4b30a338]
  415836:	sbb    BYTE PTR [edi-0x49],dh
  415839:	push   cs
  41583a:	fcomi  st,st(1)
  41583c:	pop    edi
  41583d:	retf   
  41583e:	sbb    BYTE PTR [ecx+eiz*4-0x23],ch
  415842:	lds    ebx,FWORD PTR [esi+0x7cfebd8d]
  415848:	inc    ebx
  415849:	push   ss
  41584a:	pushf  
  41584b:	sbb    al,0xc1
  41584d:	in     al,dx
  41584e:	xor    cl,dl
  415850:	sbb    eax,0x1edebd8b
  415855:	jp     0x41586c
  415857:	je     0x41583d
  415859:	jmp    0x43f8493c
  41585e:	sbb    edx,ebx
  415860:	rsqrtps xmm6,XMMWORD PTR [edx]
  415863:	or     BYTE PTR [esi+ebx*4-0x68],bh
  415867:	cli    
  415868:	xchg   edi,eax
  415869:	imul   esp,esi,0x7a
  41586c:	push   es
  41586d:	jl     0x4158aa
  41586f:	mov    ch,0x37
  415871:	push   ss
  415872:	arpl   WORD PTR [ecx+0x29c11d51],cx
  415878:	lods   eax,DWORD PTR ds:[esi]
  415879:	arpl   WORD PTR [edx],cx
  41587b:	stc    
  41587c:	inc    ecx
  41587d:	lods   al,BYTE PTR ds:[esi]
  41587e:	in     al,0xf
  415880:	ret    0xa990
  415883:	jbe    0x41586a
  415885:	cwde   
  415886:	xchg   ecx,eax
  415887:	push   ds
  415888:	or     eax,0x62f37d6
  41588d:	push   esi
  41588e:	cmc    
  41588f:	and    DWORD PTR [eax+0x17],ebp
  415892:	xor    cl,BYTE PTR [ecx+0x62436dee]
  415898:	jmp    DWORD PTR [esi-0x58]
  41589b:	adc    al,cl
  41589d:	xlat   BYTE PTR ds:[ebx]
  41589e:	imul   esi,DWORD PTR [ebp+edx*1-0x6a],0x45
  4158a3:	shr    DWORD PTR [ecx-0x65],0x64
  4158a7:	loopne 0x415854
  4158a9:	je     0x41590b
  4158ab:	fstp   TBYTE PTR [ecx]
  4158ad:	add    eax,ebx
  4158af:	cmp    bl,ch
  4158b1:	mov    cl,BYTE PTR [esi]
  4158b3:	fucom  st(0)
  4158b5:	xor    eax,0xf2ed4e7d
  4158ba:	fiadd  WORD PTR [eax]
  4158bc:	call   0xc307:0xced8864c
  4158c3:	and    DWORD PTR [edx+0x4e],ecx
  4158c6:	add    BYTE PTR [edx+0x2cc2e27d],bl
  4158cc:	mov    ebp,esi
  4158ce:	popa   
  4158cf:	mov    al,ds:0xc024a59f
  4158d4:	push   ds
  4158d5:	les    ebx,FWORD PTR [eax+0x9]
  4158d8:	les    edx,FWORD PTR [eax]
  4158da:	bound  eax,QWORD PTR [ebx+0x16]
  4158dd:	dec    esp
  4158de:	xchg   ebx,eax
  4158df:	test   BYTE PTR [ebp+0x6a],0x52
  4158e3:	fst    st(3)
  4158e5:	dec    esp
  4158e6:	push   ebp
  4158e7:	jl     0x415870
  4158e9:	xor    edi,esi
  4158eb:	stos   BYTE PTR es:[edi],al
  4158ec:	nop
  4158ed:	shl    DWORD PTR [edx+0x49c0c11b],0xdf
  4158f4:	mov    eax,0x3df59a26
  4158f9:	dec    esp
  4158fa:	jnp    0x41590a
  4158fc:	sbb    DWORD PTR [esp+ebp*1],0x7
  415900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415901:	mov    cl,0x74
  415903:	add    DWORD PTR [esi+0x3],esi
  415906:	mov    esp,0x4c6d25db
  41590b:	pop    ecx
  41590c:	jl     0x41597f
  41590e:	sbb    bh,BYTE PTR [ecx+0x5e]
  415911:	pop    ss
  415912:	scas   al,BYTE PTR es:[edi]
  415913:	mov    ss,WORD PTR [eax+ecx*4]
  415916:	dec    bl
  415918:	inc    ecx
  415919:	ror    DWORD PTR [eax+0x1b],cl
  41591c:	mov    ebp,0x17888db2
  415921:	or     bh,BYTE PTR [ebx]
  415923:	mov    bh,0x27
  415925:	mov    ss,WORD PTR [edi+ebp*2+0x6f]
  415929:	cdq    
  41592a:	adc    DWORD PTR [ecx],0x1d41b28e
  415930:	fwait
  415931:	mov    al,ds:0x9393cf31
  415936:	cmp    esi,DWORD PTR [eax]
  415938:	push   es
  415939:	aad    0x91
  41593b:	cmp    al,0xdd
  41593d:	or     dh,BYTE PTR [ecx-0x5]
  415940:	and    al,0xf5
  415942:	dec    eax
  415943:	add    edx,DWORD PTR [edi]
  415945:	add    eax,DWORD PTR [esi+0x5362a020]
  41594b:	sbb    ecx,DWORD PTR [ebp+0x3c]
  41594e:	loop   0x4158d3
  415950:	cmc    
  415951:	arpl   bp,dx
  415953:	nop
  415954:	xchg   edx,eax
  415955:	mov    edi,0x7990e173
  41595a:	dec    edx
  41595b:	dec    ecx
  41595c:	mov    BYTE PTR [ebp+0x4f],0xff
  415960:	lods   al,BYTE PTR ds:[esi]
  415961:	inc    ebp
  415962:	lods   al,BYTE PTR ds:[esi]
  415963:	push   edi
  415964:	push   esp
  415965:	(bad)  
  415966:	retf   
  415967:	mov    ebx,0x402f5eb6
  41596c:	cmp    ebp,eax
  41596e:	out    dx,al
  41596f:	jge    0x41597b
  415971:	lds    ecx,FWORD PTR [edi+0x35]
  415974:	iret   
  415975:	pusha  
  415976:	mov    ebx,0xfd7ff4c7
  41597b:	mov    al,al
  41597d:	inc    esp
  41597e:	fidivr DWORD PTR [eax+0x53483153]
  415984:	mov    ch,0xdd
  415986:	and    al,BYTE PTR [edx-0x4]
  415989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41598a:	jnp    0x46947926
  415990:	inc    edx
  415991:	(bad)  
  415992:	mov    ds:0x17b74485,al
  415997:	test   al,ah
  415999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41599a:	ret    
  41599b:	(bad)  
  41599c:	ss mov edx,0x1773a8fe
  4159a2:	sbb    al,0x48
  4159a4:	bound  eax,QWORD PTR [ecx+0x73]
  4159a7:	in     eax,dx
  4159a8:	cmp    edx,edi
  4159aa:	out    dx,eax
  4159ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159ac:	pop    edi
  4159ad:	sbb    eax,0xcbf74742
  4159b2:	hlt    
  4159b3:	stos   DWORD PTR es:[edi],eax
  4159b4:	mov    ds:0x59bcc2fe,al
  4159b9:	ds adc eax,0x2477109e
  4159bf:	mov    ecx,0x333e1254
  4159c4:	add    eax,DWORD PTR [edi-0x39ae93ce]
  4159ca:	push   0x53
  4159cc:	dec    ebp
  4159cd:	stc    
  4159ce:	aam    0xc8
  4159d0:	inc    edx
  4159d1:	int3   
  4159d2:	cmp    BYTE PTR [esi],ch
  4159d4:	repnz les edi,FWORD PTR [edi]
  4159d7:	and    DWORD PTR [edx+0x57],edi
  4159da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159db:	push   ebp
  4159dc:	test   BYTE PTR [edi+0x1],cl
  4159df:	popa   
  4159e0:	xchg   edx,eax
  4159e1:	sub    BYTE PTR [eax+esi*4-0x46],bl
  4159e5:	dec    esp
  4159e6:	xchg   dl,bl
  4159e8:	xor    BYTE PTR fs:[esi+0x40],0x45
  4159ed:	into   
  4159ee:	push   ebx
  4159ef:	lods   al,BYTE PTR ds:[esi]
  4159f0:	sti    
  4159f1:	lods   eax,DWORD PTR ds:[esi]
  4159f2:	jns    0x41597b
  4159f4:	jmp    DWORD PTR [ecx+0x79]
  4159f7:	fisubr WORD PTR [edi]
  4159f9:	not    BYTE PTR [esi+0x75eccea8]
  4159ff:	je     0x415a3a
  415a01:	js     0x4159a9
  415a03:	fwait
  415a04:	sahf   
  415a05:	jle    0x415a6d
  415a07:	stos   BYTE PTR es:[edi],al
  415a08:	xor    eax,DWORD PTR [ebx+edx*1+0x4]
  415a0c:	sar    DWORD PTR [ebp-0x64],1
  415a0f:	ret    0xb288
  415a12:	pop    eax
  415a13:	or     edx,DWORD PTR [esi]
  415a15:	mov    edx,0x2a1fc7ba
  415a1a:	ins    DWORD PTR es:[edi],dx
  415a1b:	sub    eax,0x90ce9cef
  415a20:	add    ah,dh
  415a22:	cmp    al,0xa1
  415a24:	mov    ecx,edx
  415a26:	cmp    BYTE PTR [ecx+eax*1+0x7d],bh
  415a2a:	sbb    al,0x25
  415a2c:	dec    edx
  415a2d:	loopne 0x4159ba
  415a2f:	fs xchg ebx,eax
  415a31:	push   ebp
  415a32:	jb     0x415a83
  415a34:	mov    eax,0xfdf2ce78
  415a39:	sub    eax,0xa82f1a71
  415a3e:	pop    esi
  415a3f:	mov    ah,0xdf
  415a41:	aad    0xe4
  415a43:	pop    edi
  415a44:	loope  0x4159fb
  415a46:	pop    es
  415a47:	and    eax,DWORD PTR [eax+0x300b520e]
  415a4d:	adc    DWORD PTR [ebp-0x4a7517a],esi
  415a53:	and    esp,DWORD PTR [ebx-0x3eb7fc7d]
  415a59:	idiv   ebx
  415a5b:	sbb    al,0xb6
  415a5d:	and    esi,DWORD PTR [esi+0x69b654dc]
  415a63:	sub    eax,0x546fdd76
  415a68:	int    0x97
  415a6a:	fwait
  415a6b:	pop    ebx
  415a6c:	push   esi
  415a6d:	add    esp,DWORD PTR [ecx]
  415a6f:	mov    edi,0x20a35a79
  415a74:	fisubr DWORD PTR [ecx+0x41f17d0c]
  415a7a:	or     eax,0xa277a5a
  415a7f:	scas   al,BYTE PTR es:[edi]
  415a80:	arpl   cx,bp
  415a82:	ret    
  415a83:	pop    es
  415a84:	xchg   edi,eax
  415a85:	xor    al,0xcc
  415a87:	mov    esp,0xc3545c97
  415a8c:	xor    BYTE PTR [eax+ebx*2+0x3f],al
  415a90:	jo     0x415a47
  415a92:	dec    edi
  415a93:	cmp    DWORD PTR [ebp+0x2e8a2714],edi
  415a99:	sbb    eax,0x2672232a
  415a9e:	clc    
  415a9f:	jmp    0x5228:0x880512fd
  415aa6:	scas   al,BYTE PTR es:[edi]
  415aa7:	imul   eax,esi,0x301968b6
  415aad:	and    eax,0x6af1e15b
  415ab2:	mov    dl,BYTE PTR [edi+edi*1+0x47]
  415ab6:	cmp    BYTE PTR [eax-0x15],bl
  415ab9:	hlt    
  415aba:	(bad)  
  415abb:	aaa    
  415abc:	je     0x415ac3
  415abe:	pop    esi
  415abf:	jo     0x415a62
  415ac1:	jmp    FWORD PTR [ebx]
  415ac3:	mov    ecx,0xf07c954e
  415ac8:	cmp    eax,0xbac8586d
  415acd:	(bad)  
  415ace:	and    DWORD PTR [esi],eax
  415ad0:	or     al,0x45
  415ad2:	pop    esp
  415ad3:	xchg   ah,al
  415ad5:	mov    bh,0x70
  415ad7:	jp     0x415b40
  415ad9:	in     eax,0x67
  415adb:	dec    esi
  415adc:	out    dx,eax
  415add:	pop    eax
  415ade:	jmp    0xaf189c57
  415ae3:	int    0x81
  415ae5:	xchg   BYTE PTR [edx],dl
  415ae7:	div    DWORD PTR [ebp+0x8]
  415aea:	cmc    
  415aeb:	mov    eax,0xa11b5ac1
  415af0:	cmp    DWORD PTR [esi+0x3f78b20e],ebp
  415af6:	xor    eax,0x90bc8b3d
  415afb:	int3   
  415afc:	adc    bl,BYTE PTR [edx-0x39]
  415aff:	mov    ecx,0xc4c22617
  415b04:	loopne 0x415ab2
  415b06:	fnstsw WORD PTR [edx-0x24617611]
  415b0c:	adc    eax,0x7b5170be
  415b11:	popa   
  415b12:	mov    cs,ebp
  415b14:	pop    ds
  415b15:	stos   BYTE PTR es:[edi],al
  415b16:	pop    edx
  415b17:	(bad)  
  415b18:	retf   
  415b19:	loop   0x415a9d
  415b1b:	(bad)  
  415b1c:	jp     0x415b5f
  415b1e:	lea    esi,[esi]
  415b20:	jmp    0x415b87
  415b22:	or     BYTE PTR [ecx+0x41a3ab88],ah
  415b28:	out    0xfc,eax
  415b2a:	xlat   BYTE PTR ds:[ebx]
  415b2b:	or     al,0x8
  415b2d:	popf   
  415b2e:	repz push ebx
  415b30:	stc    
  415b31:	xchg   esp,eax
  415b32:	sar    DWORD PTR [esi+0x49],cl
  415b35:	sahf   
  415b36:	sub    eax,0x4080376d
  415b3b:	pop    ds
  415b3c:	arpl   WORD PTR [edx+ebp*8-0x17e51689],cx
  415b43:	push   0x35
  415b45:	(bad)  
  415b46:	in     al,dx
  415b47:	mov    ah,0xa6
  415b49:	cmp    DWORD PTR [ecx+0x60916966],ecx
  415b4f:	cmp    edx,eax
  415b51:	xchg   ebp,eax
  415b52:	mov    eax,0xf672fb3e
  415b57:	fldcw  WORD PTR [ecx]
  415b59:	(bad)  
  415b5a:	xlat   BYTE PTR ds:[ebx]
  415b5b:	ja     0x415b5c
  415b5d:	adc    esp,DWORD PTR [ebx+eax*8+0x4]
  415b61:	stos   BYTE PTR es:[edi],al
  415b62:	dec    ecx
  415b63:	add    BYTE PTR ds:0x239464d2,bl
  415b69:	push   ecx
  415b6a:	mov    cl,0xd2
  415b6c:	ret    
  415b6d:	in     al,dx
  415b6e:	push   0xba7e5aa1
  415b73:	(bad)  
  415b74:	push   0x7e
  415b76:	repnz shl edx,0xae
  415b7a:	std    
  415b7b:	test   eax,0x9c259028
  415b80:	jle    0x415b2d
  415b82:	pop    eax
  415b83:	xchg   edx,eax
  415b84:	jb     0x415b59
  415b86:	sti    
  415b87:	fild   QWORD PTR [edi]
  415b89:	mov    ebp,0x302aa469
  415b8e:	popa   
  415b8f:	jmp    0xa910:0xf5bd64c6
  415b96:	xchg   esp,eax
  415b97:	jmp    0xaf65:0x467c9c9b
  415b9e:	aas    
  415b9f:	loop   0x415bf5
  415ba1:	in     al,dx
  415ba2:	pop    DWORD PTR [ecx-0x37fc856]
  415ba8:	pusha  
  415ba9:	mov    ds:0x11e897fb,al
  415bae:	cdq    
  415baf:	pop    eax
  415bb0:	xchg   esi,eax
  415bb1:	dec    ecx
  415bb2:	jb     0x415c20
  415bb4:	ja     0x415bdf
  415bb6:	inc    esi
  415bb7:	jo     0x415b80
  415bb9:	fild   DWORD PTR [ebp+0x3d]
  415bbc:	sahf   
  415bbd:	bound  esp,QWORD PTR [ebx+0x1b98bda5]
  415bc3:	mov    ecx,0x924a4bb8
  415bc8:	push   ebx
  415bc9:	cdq    
  415bca:	gs lock lahf 
  415bcd:	mov    bh,BYTE PTR [esi+0xb]
  415bd0:	mov    cl,0x44
  415bd2:	jno    0x415bc3
  415bd4:	hlt    
  415bd5:	repnz cs add esp,edx
  415bd9:	xchg   ebx,eax
  415bda:	ficomp DWORD PTR [ecx+0x6c67e26b]
  415be0:	jne    0x415b85
  415be2:	retf   0x84
  415be5:	mov    bl,0x16
  415be7:	sbb    ah,cl
  415be9:	xor    al,0x8f
  415beb:	retf   
  415bec:	mov    BYTE PTR [edx],bh
  415bee:	aam    0x79
  415bf0:	enter  0xafa5,0x8f
  415bf4:	add    eax,0x8efa8d77
  415bf9:	or     eax,0x23a8df9d
  415bfe:	rol    DWORD PTR [esi+0x3a],1
  415c01:	xor    al,0x89
  415c03:	test   al,0xd9
  415c05:	mov    ch,dl
  415c07:	sahf   
  415c08:	adc    DWORD PTR [ebx-0x3e],0x8b71a0e1
  415c0f:	fidivr DWORD PTR [esi+0x21]
  415c12:	xchg   edi,eax
  415c13:	jmp    0x51381f80
  415c18:	idiv   BYTE PTR [eax+0x44727c61]
  415c1e:	iret   
  415c1f:	das    
  415c20:	or     eax,0xb4e12a39
  415c25:	mov    ds:0x9f1763c,al
  415c2a:	js     0x415c2d
  415c2c:	push   edi
  415c2d:	inc    esp
  415c2e:	dec    ebx
  415c2f:	dec    esi
  415c30:	clc    
  415c31:	sar    ecx,cl
  415c33:	mov    ebp,0x29c392b4
  415c38:	jp     0x415c9c
  415c3a:	call   0xfaea:0xda8d8527
  415c41:	loopne 0x415c38
  415c43:	and    dl,ah
  415c45:	sub    eax,0xf9c354b8
  415c4a:	jo     0x415c0e
  415c4c:	shl    BYTE PTR [edx+0xba45c7e],0x4a
  415c53:	pop    eax
  415c54:	sub    edi,DWORD PTR [ecx+0x0]
  415c57:	nop
  415c58:	xchg   edi,eax
  415c59:	xchg   esi,eax
  415c5a:	xchg   esp,eax
  415c5b:	call   0xa92dfcf7
  415c60:	popa   
  415c61:	mov    ss,WORD PTR [edi]
  415c63:	push   ss
  415c64:	neg    BYTE PTR [edi-0x362bdac0]
  415c6a:	fimul  WORD PTR [ebp+0x7858f409]
  415c70:	or     al,BYTE PTR [esi+0x50]
  415c73:	cld    
  415c74:	(bad)  
  415c75:	pop    ebp
  415c76:	ja     0x415c3e
  415c78:	push   ss
  415c79:	pop    ebp
  415c7a:	mov    BYTE PTR [esi-0x7c],ah
  415c7d:	mov    DWORD PTR ds:0x36db2ad9,esi
  415c83:	mov    DWORD PTR [esp+ebp*2-0x4d0d7d78],esp
  415c8a:	(bad)  
  415c8b:	sbb    BYTE PTR [ecx-0x7db00055],bl
  415c91:	test   BYTE PTR [ecx+eax*1+0x3f171cc2],dl
  415c98:	mov    esp,0x35e709d2
  415c9d:	mov    ch,0x84
  415c9f:	mov    ds:0xac85b6fd,al
  415ca4:	pop    ebx
  415ca5:	cmp    al,al
  415ca7:	mov    BYTE PTR [eax-0x5c102f9a],dl
  415cad:	test   DWORD PTR [edx-0x5b7a5c20],ebp
  415cb3:	cld    
  415cb4:	mov    al,0x2a
  415cb6:	push   0x35e0fad2
  415cbb:	mov    dl,0xda
  415cbd:	fxch   st(4)
  415cbf:	cmp    BYTE PTR [ebp-0x4ec55e52],ch
  415cc5:	and    ch,BYTE PTR [edi+0x6088a893]
  415ccb:	and    eax,DWORD PTR [eax]
  415ccd:	or     BYTE PTR [esi+0x12],dh
  415cd0:	test   DWORD PTR [ebx],ecx
  415cd2:	adc    al,0x46
  415cd4:	xchg   edx,eax
  415cd5:	jecxz  0x415d29
  415cd7:	mov    ebx,DWORD PTR ds:0xcc9d9006
  415cdd:	jo     0x415d37
  415cdf:	out    dx,al
  415ce0:	push   cs
  415ce1:	jecxz  0x415cf4
  415ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ce4:	aas    
  415ce5:	sub    cl,0x2c
  415ce8:	repnz aad 0x56
  415ceb:	inc    DWORD PTR [ebp-0x5b01dcdb]
  415cf1:	sub    ah,BYTE PTR ss:[eax-0x9]
  415cf5:	fld    TBYTE PTR [ecx]
  415cf7:	lahf   
  415cf8:	aad    0x75
  415cfa:	pop    ecx
  415cfb:	sub    al,BYTE PTR [esi]
  415cfd:	fadd   DWORD PTR [edi+0x62]
  415d00:	repnz popa 
  415d02:	inc    edx
  415d03:	adc    al,0x66
  415d05:	xor    al,0x2d
  415d07:	ror    DWORD PTR [ebp-0x4b],1
  415d0a:	in     al,dx
  415d0b:	icebp  
  415d0c:	fild   DWORD PTR [edx+0x66]
  415d0f:	sub    al,0x5d
  415d11:	lods   eax,DWORD PTR ds:[esi]
  415d12:	mov    edi,0xf780d7b0
  415d17:	out    0x20,al
  415d19:	rol    dh,cl
  415d1b:	jge    0x415d01
  415d1d:	pop    ebp
  415d1e:	xchg   ebp,eax
  415d1f:	mov    eax,edi
  415d21:	js     0x415d03
  415d23:	xchg   edi,eax
  415d24:	mov    BYTE PTR [esi-0x42],ch
  415d27:	push   edi
  415d28:	lea    esi,[edx-0x38723aa4]
  415d2e:	mov    ebp,0x7767152e
  415d33:	mov    ebx,0xa6906f62
  415d38:	ins    BYTE PTR es:[edi],dx
  415d39:	jg     0x415d6f
  415d3b:	cli    
  415d3c:	jbe    0x415ccb
  415d3e:	add    DWORD PTR [eax+0x5a],0x76
  415d42:	dec    edx
  415d43:	jle    0x415d0c
  415d45:	pop    edx
  415d46:	enter  0x58d5,0x92
  415d4a:	jbe    0x415d3e
  415d4c:	fimul  WORD PTR [ebx+0x17]
  415d4f:	pop    edx
  415d50:	repz cmc 
  415d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d53:	jns    0x415d00
  415d55:	mov    esp,0x393a4d28
  415d5a:	nop
  415d5b:	mov    eax,ds:0xb2ec61e7
  415d60:	sbb    eax,0xc9d4d97c
  415d65:	jge    0x415dc4
  415d67:	dec    edx
  415d68:	mov    bl,0xf
  415d6a:	or     DWORD PTR [edx+0x43],ebx
  415d6d:	jo     0x415d54
  415d6f:	int    0xb1
  415d71:	scas   eax,DWORD PTR es:[edi]
  415d72:	popf   
  415d73:	sub    eax,0xedec8f42
  415d78:	pop    ebp
  415d79:	add    edi,DWORD PTR [edx-0x6b3ec71b]
  415d7f:	in     al,0xab
  415d81:	retf   
  415d82:	add    DWORD PTR [ecx],edx
  415d84:	inc    ecx
  415d85:	dec    ebx
  415d86:	in     eax,dx
  415d87:	popa   
  415d88:	jns    0x415ddc
  415d8a:	pop    ebp
  415d8b:	(bad)  
  415d8c:	mov    edi,DWORD PTR [eax+esi*1-0x5d51bafc]
  415d93:	sbb    edi,DWORD PTR [ebp-0x68]
  415d96:	fadd   QWORD PTR [ebp-0x2e21bfd1]
  415d9c:	xor    al,0x50
  415d9e:	cdq    
  415d9f:	fwait
  415da0:	outs   dx,DWORD PTR ds:[esi]
  415da1:	adc    DWORD PTR [ecx+0x61902cb7],ecx
  415da7:	cmp    DWORD PTR [edi],esp
  415da9:	bound  edx,QWORD PTR [edi-0x419b2e00]
  415daf:	imul   edx,edi,0x7703989f
  415db5:	and    dh,BYTE PTR [eax+edi*1+0x74]
  415db9:	adc    DWORD PTR [ebp-0x3ffd753f],0xffffff8c
  415dc0:	dec    ebp
  415dc1:	dec    ebx
  415dc2:	pop    ebx
  415dc3:	ins    BYTE PTR es:[edi],dx
  415dc4:	lods   al,BYTE PTR ds:[esi]
  415dc5:	push   esi
  415dc6:	and    DWORD PTR ds:0xfb3b3f58,eax
  415dcc:	add    edx,DWORD PTR [esi-0xd]
  415dcf:	int    0xda
  415dd1:	iret   
  415dd2:	nop
  415dd3:	cmc    
  415dd4:	lds    ecx,FWORD PTR [esi]
  415dd6:	cmc    
  415dd7:	pop    ecx
  415dd8:	div    BYTE PTR [ebx]
  415dda:	sbb    BYTE PTR [eax+0x2c72b1fd],al
  415de0:	dec    BYTE PTR [edi+0x7b390ced]
  415de6:	ins    BYTE PTR es:[edi],dx
  415de7:	cdq    
  415de8:	loopne 0x415da5
  415dea:	sbb    cl,ch
  415dec:	or     BYTE PTR [eax],bl
  415dee:	jmp    0x51cc7718
  415df3:	daa    
  415df4:	aam    0xad
  415df6:	outs   dx,BYTE PTR ds:[esi]
  415df7:	or     al,0xd5
  415df9:	mov    al,0x92
  415dfb:	add    ebx,DWORD PTR [ebp-0x2]
  415dfe:	dec    DWORD PTR [edx+esi*2]
  415e01:	mov    al,ds:0x757529c8
  415e06:	fwait
  415e07:	xor    eax,0x3d103e7d
  415e0c:	test   al,0xa3
  415e0e:	dec    esi
  415e0f:	ins    BYTE PTR es:[edi],dx
  415e10:	xchg   ebx,eax
  415e11:	mov    DWORD PTR [ecx],ecx
  415e13:	mov    eax,DWORD PTR [edx-0x5d4bb780]
  415e19:	cdq    
  415e1a:	xor    DWORD PTR ds:0xf78b4e94,0x4745783c
  415e24:	jo     0x415e15
  415e26:	add    ah,BYTE PTR [edx-0x569c4904]
  415e2c:	into   
  415e2d:	xchg   edx,eax
  415e2e:	jmp    0x502ed2bc
  415e33:	ret    
  415e34:	push   eax
  415e35:	adc    al,dh
  415e37:	and    DWORD PTR [ecx],ebx
  415e39:	cmp    ch,bh
  415e3b:	inc    eax
  415e3c:	ficomp DWORD PTR [edx]
  415e3e:	adc    BYTE PTR [edi],dl
  415e40:	adc    BYTE PTR [eax-0x71a86318],ah
  415e46:	adc    dl,ch
  415e48:	jno    0x415def
  415e4a:	minps  xmm1,XMMWORD PTR [eax+ebx*2+0x3ceea98e]
  415e52:	ss jbe 0x415eb2
  415e55:	stos   BYTE PTR es:[edi],al
  415e56:	sti    
  415e57:	les    ebp,FWORD PTR [ecx-0x26bc5ce]
  415e5d:	sub    DWORD PTR [ecx+0x67],ebx
  415e60:	xchg   ebx,eax
  415e61:	cdq    
  415e62:	aaa    
  415e63:	mov    BYTE PTR [ebx+0x73c7942f],bh
  415e69:	sbb    eax,0x1ab73a4f
  415e6e:	inc    esi
  415e6f:	inc    esi
  415e70:	jle    0x415ea1
  415e72:	xchg   ecx,eax
  415e73:	test   ebx,ebp
  415e75:	mov    al,ds:0xd836a417
  415e7a:	stc    
  415e7b:	cmp    DWORD PTR [ebx],edx
  415e7d:	xor    cl,ah
  415e7f:	aaa    
  415e80:	aas    
  415e81:	addr16 popf 
  415e83:	sub    ebx,DWORD PTR [edi+edi*2]
  415e86:	jmp    eax
  415e88:	cmp    al,0x6b
  415e8a:	cmc    
  415e8b:	sub    DWORD PTR [esi],ecx
  415e8d:	mov    al,ds:0x74e71b8e
  415e92:	loop   0x415ee6
  415e94:	pop    ebx
  415e95:	xor    al,0x8e
  415e97:	call   0x8e33:0xdf005d9a
  415e9e:	jg     0x415f07
  415ea0:	xchg   esp,eax
  415ea1:	ins    BYTE PTR es:[edi],dx
  415ea2:	das    
  415ea3:	sbb    eax,DWORD PTR [ebx-0x3858e512]
  415ea9:	retf   0x135f
  415eac:	fdiv   DWORD PTR [edx]
  415eae:	stos   DWORD PTR es:[edi],eax
  415eaf:	and    eax,0xf1cdd9e3
  415eb4:	pop    eax
  415eb5:	fisub  DWORD PTR [ecx-0x51]
  415eb8:	cmp    al,0xe5
  415eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ebb:	aam    0xdd
  415ebd:	sti    
  415ebe:	adc    cl,dh
  415ec0:	mov    dl,0xc0
  415ec2:	mov    edx,0x22f4114d
  415ec7:	std    
  415ec8:	pop    esp
  415ec9:	sbb    al,0xb9
  415ecb:	arpl   WORD PTR [ebp-0x53735c3f],di
  415ed1:	shl    ch,cl
  415ed3:	dec    ebp
  415ed4:	stos   DWORD PTR es:[edi],eax
  415ed5:	stos   DWORD PTR es:[edi],eax
  415ed6:	test   ebx,esp
  415ed8:	data16 aam 0xd
  415edb:	sub    DWORD PTR [ebp+0x41],eax
  415ede:	push   edx
  415edf:	jecxz  0x415f4e
  415ee1:	lods   eax,DWORD PTR ds:[esi]
  415ee2:	jmp    0x415f10
  415ee4:	jg     0x415e74
  415ee6:	loope  0x415ef3
  415ee8:	sti    
  415ee9:	mov    esi,0xcc034e35
  415eee:	sar    DWORD PTR [ebp+0x27d3546a],cl
  415ef4:	clc    
  415ef5:	aam    0xf8
  415ef7:	inc    ecx
  415ef8:	scas   eax,DWORD PTR es:[edi]
  415ef9:	mov    bl,0x75
  415efb:	xchg   esi,eax
  415efc:	mov    esp,0xe153fcc7
  415f01:	and    ch,bh
  415f03:	sub    al,0xfe
  415f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f06:	je     0x415f5a
  415f08:	mov    BYTE PTR [esi+0x4af50a56],0x19
  415f0f:	into   
  415f10:	xchg   ebx,eax
  415f11:	mov    fs,WORD PTR [edx]
  415f13:	out    dx,al
  415f14:	xchg   ebx,eax
  415f15:	pop    ebx
  415f16:	cmc    
  415f17:	push   cs
  415f18:	xor    al,0xfc
  415f1a:	or     ecx,DWORD PTR [ebp+0x14]
  415f1d:	pushw  ds
  415f1f:	fisubr DWORD PTR [esi]
  415f21:	retf   
  415f22:	sbb    ch,al
  415f24:	data16 (bad) 
  415f27:	inc    edx
  415f28:	in     eax,0x4c
  415f2a:	mov    eax,0x631e66ad
  415f2f:	dec    esi
  415f30:	add    eax,0xb38a2094
  415f35:	test   DWORD PTR [esp+eax*4],ebp
  415f38:	js     0x415f4a
  415f3a:	sti    
  415f3b:	and    BYTE PTR ds:0x3d8a4358,al
  415f41:	loop   0x415fa0
  415f43:	jp     0x415f6d
  415f45:	fmul   DWORD PTR [edx]
  415f47:	shl    BYTE PTR [esi],1
  415f49:	push   edx
  415f4a:	mov    BYTE PTR [edi+edi*1+0x7ce87682],ah
  415f51:	xchg   ebx,eax
  415f52:	dec    eax
  415f53:	js     0x415f8a
  415f55:	idiv   BYTE PTR [ecx]
  415f57:	stos   BYTE PTR es:[edi],al
  415f58:	push   ebp
  415f59:	cs das 
  415f5b:	push   esp
  415f5c:	mov    ch,0x39
  415f5e:	test   BYTE PTR [ecx+esi*2],cl
  415f61:	adc    DWORD PTR [ebx-0x1],esi
  415f64:	fisttp WORD PTR [edi+0x74]
  415f67:	adc    BYTE PTR [eax+0x24],dh
  415f6a:	mov    ch,0x3a
  415f6c:	fdivrp st(3),st
  415f6e:	enter  0x5a43,0xf1
  415f72:	jmp    0x9424b54c
  415f77:	int3   
  415f78:	dec    eax
  415f79:	push   edi
  415f7a:	push   cs
  415f7b:	cmp    DWORD PTR [eax+edx*4],ecx
  415f7e:	and    DWORD PTR ds:0x11dad962,0x31
  415f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f86:	add    eax,0xbfc44700
  415f8b:	(bad)  
  415f8c:	dec    edx
  415f8d:	sbb    eax,0x6006fab7
  415f92:	pusha  
  415f93:	je     0x415f44
  415f95:	dec    edx
  415f96:	in     al,0x40
  415f98:	lea    ebx,[esi]
  415f9a:	push   esp
  415f9b:	(bad)  
  415f9c:	in     al,0xae
  415f9e:	inc    eax
  415f9f:	sbb    bl,BYTE PTR [esi]
  415fa1:	into   
  415fa2:	mov    ecx,0x601f5612
  415fa7:	push   0xffffffe4
  415fa9:	fdiv   QWORD PTR [edi+0x2c52b8cf]
  415faf:	scas   al,BYTE PTR es:[edi]
  415fb0:	cwde   
  415fb1:	pusha  
  415fb2:	mov    dl,0x13
  415fb4:	xor    al,0xab
  415fb6:	sbb    al,0x4e
  415fb8:	cld    
  415fb9:	cmp    BYTE PTR [eax+0x7be00e64],bl
  415fbf:	add    DWORD PTR [edx],esp
  415fc1:	sub    eax,0xdc5f1159
  415fc6:	das    
  415fc7:	fwait
  415fc8:	mov    eax,0x2b4685d2
  415fcd:	push   0x63ffd9f0
  415fd2:	jae    0x415f90
  415fd4:	(bad)  
  415fd5:	into   
  415fd6:	xchg   ecx,eax
  415fd7:	jne    0x41601e
  415fd9:	xchg   ebx,eax
  415fda:	add    dl,BYTE PTR [ebp+0x2cf3b460]
  415fe0:	mov    BYTE PTR [ebx],0xc
  415fe3:	or     edx,esi
  415fe5:	jmp    0xb64aeea8
  415fea:	pop    edx
  415feb:	mov    ch,BYTE PTR [ecx+edi*2-0x26de548c]
  415ff2:	sbb    al,BYTE PTR [esp+eiz*2+0x3f]
  415ff6:	(bad)  
  415ff7:	arpl   bp,bp
  415ff9:	jne    0x415fdb
  415ffb:	ret    0xa201
  415ffe:	xchg   edi,eax
  415fff:	sbb    bl,BYTE PTR ds:0xc51508a8
  416005:	sub    BYTE PTR [ebp+0x7865d024],ch
  41600b:	or     DWORD PTR [edx],0x40b05bfa
  416011:	mov    eax,0xf6c65bfa
  416016:	ds jp  0x416046
  416019:	inc    ebx
  41601a:	(bad)  [ebx-0x52]
  41601d:	adc    al,dl
  41601f:	aas    
  416020:	xor    BYTE PTR [esi-0x59],bh
  416023:	mov    ebx,ebx
  416025:	lods   al,BYTE PTR ds:[esi]
  416026:	inc    eax
  416027:	push   edi
  416028:	mul    dh
  41602a:	sbb    eax,0x4b034b63
  41602f:	test   eax,0x442ee7ae
  416034:	imul   ebp,DWORD PTR [esi+0x5f061816],0xffffffae
  41603b:	jecxz  0x416095
  41603d:	mov    ebp,0x6443b51e
  416042:	pop    ss
  416043:	je     0x416067
  416045:	xchg   BYTE PTR [eax+0x17],bh
  416048:	rol    DWORD PTR [edx],1
  41604a:	pop    edx
  41604b:	lds    ecx,FWORD PTR [ecx-0x3]
  41604e:	scas   al,BYTE PTR es:[edi]
  41604f:	aaa    
  416050:	xchg   esi,eax
  416051:	scas   eax,DWORD PTR es:[edi]
  416052:	jns    0x416022
  416054:	mov    esp,0x8c9953e7
  416059:	xchg   ebp,eax
  41605a:	dec    ecx
  41605b:	mov    bh,0xae
  41605d:	jp     0x416066
  41605f:	dec    ebx
  416060:	add    bh,BYTE PTR ds:0xa799e2ea
  416066:	xor    DWORD PTR [edi+0x61],0xb780ac8f
  41606d:	xor    DWORD PTR [ecx],0x48
  416070:	add    al,0x86
  416072:	push   eax
  416073:	data16 stos BYTE PTR es:[edi],al
  416075:	out    dx,eax
  416076:	loope  0x4160db
  416078:	mov    bl,0x17
  41607a:	out    0xa8,eax
  41607c:	dec    edx
  41607d:	adc    eax,0x94cef5d7
  416082:	inc    edx
  416083:	cmp    eax,0x73fa31fa
  416088:	dec    esi
  416089:	stc    
  41608a:	int3   
  41608b:	and    eax,0x3fc60d1b
  416090:	fwait
  416091:	leave  
  416092:	js     0x416081
  416094:	mov    dh,BYTE PTR [eax-0x6033054f]
  41609a:	outs   dx,BYTE PTR ds:[esi]
  41609b:	mov    cl,0x87
  41609d:	add    esi,esi
  41609f:	jo     0x4160c3
  4160a1:	stos   DWORD PTR es:[edi],eax
  4160a2:	jne    0x4160b9
  4160a4:	retf   
  4160a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160a6:	icebp  
  4160a7:	xchg   esp,eax
  4160a8:	mov    ds:0xe2cb744f,al
  4160ad:	mov    dl,0x2a
  4160af:	shl    DWORD PTR [edi+0x17],1
  4160b2:	test   eax,0xaa1ac226
  4160b7:	push   ss
  4160b8:	pop    esi
  4160b9:	jg     0x416111
  4160bb:	add    ch,bh
  4160bd:	fild   QWORD PTR [edi-0x36c79987]
  4160c3:	aas    
  4160c4:	fsubr  DWORD PTR [edx]
  4160c6:	xadd   BYTE PTR [ebp-0x40e34636],al
  4160cd:	jns    0x4160b0
  4160cf:	sub    eax,0xb9019095
  4160d4:	jge    0x4160d0
  4160d6:	xor    al,0x11
  4160d8:	adc    DWORD PTR [edi-0x59],edi
  4160db:	jno    0x4160d8
  4160dd:	inc    ecx
  4160de:	shr    BYTE PTR [edi],0x84
  4160e1:	lea    edx,es:[ecx-0x5]
  4160e5:	(bad)  
  4160e6:	mov    esi,cs
  4160e8:	xlat   BYTE PTR ds:[ebx]
  4160e9:	cmp    eax,DWORD PTR [ebx+0x70d1ccb3]
  4160ef:	aad    0x55
  4160f1:	pushf  
  4160f2:	pop    esi
  4160f3:	ret    0x9499
  4160f6:	or     al,0x37
  4160f8:	adc    bl,BYTE PTR [ecx+0x4d]
  4160fb:	xchg   ebx,eax
  4160fc:	popa   
  4160fd:	mov    edi,0xaade45f9
  416102:	(bad)  
  416103:	push   ds
  416104:	(bad)  
  416105:	xor    BYTE PTR [edx],ah
  416107:	and    bh,dh
  416109:	out    dx,al
  41610a:	mov    esi,0x9c2ff2e6
  41610f:	or     dl,ch
  416111:	or     edx,esp
  416113:	inc    ebp
  416114:	mov    esi,0xe39f6952
  416119:	and    eax,0xd53d9066
  41611e:	jno    0x416108
  416120:	popf   
  416121:	jge    0x416117
  416123:	into   
  416124:	rol    DWORD PTR ds:0x7863b911,cl
  41612a:	sbb    ecx,ecx
  41612c:	inc    ebp
  41612d:	adc    bl,BYTE PTR [edx]
  41612f:	jmp    0xbeb9:0x248ef714
  416136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416137:	mov    ecx,0x19d1e846
  41613c:	pop    ebp
  41613d:	call   0x6038abfc
  416142:	sbb    al,0xf3
  416144:	addr16 mov bl,0xe1
  416147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416149:	push   0xba94a653
  41614e:	mov    esp,0xac7a70ee
  416153:	cmp    ah,BYTE PTR [ebx]
  416155:	call   0xb0a07a6a
  41615a:	pushf  
  41615b:	xor    al,0x45
  41615d:	out    0x5e,eax
  41615f:	fcomp  QWORD PTR [eax]
  416161:	ja     0x4160f3
  416163:	in     al,dx
  416164:	jmp    0xb3164a11
  416169:	ds iret 
  41616b:	cmp    bh,0x3a
  41616e:	xor    al,0xf2
  416170:	xor    DWORD PTR [ecx-0x27],ebx
  416173:	cmp    eax,0x95b39bb6
  416178:	adc    DWORD PTR [ebp-0x4b],edi
  41617b:	jp     0x4161c7
  41617d:	or     al,0xbf
  41617f:	test   eax,0xd76ed5e6
  416184:	fcom   QWORD PTR [edx-0x2230803c]
  41618a:	pushf  
  41618b:	inc    ecx
  41618c:	lods   al,BYTE PTR ds:[esi]
  41618d:	mov    al,ds:0x82b4b7b0
  416192:	mov    dh,BYTE PTR [ebx-0x686a3442]
  416198:	or     cl,ch
  41619a:	out    dx,al
  41619b:	xchg   ecx,eax
  41619c:	mov    esp,0xcde8e2c1
  4161a1:	inc    edx
  4161a2:	dec    ebp
  4161a3:	mov    ds:0x353ddd57,eax
  4161a8:	mov    bl,0xe4
  4161aa:	out    dx,eax
  4161ab:	dec    edx
  4161ac:	cmp    DWORD PTR [ecx+esi*4],esi
  4161af:	gs stc 
  4161b1:	push   eax
  4161b2:	lods   al,BYTE PTR ds:[esi]
  4161b3:	adc    al,0x27
  4161b5:	cmp    eax,0xece5c51a
  4161ba:	jmp    0xb828:0x79360378
  4161c1:	div    DWORD PTR [esi]
  4161c3:	mov    al,0x64
  4161c5:	enter  0x25d2,0x34
  4161c9:	call   0xa7171249
  4161ce:	dec    esi
  4161cf:	shl    DWORD PTR [ecx],1
  4161d1:	in     al,dx
  4161d2:	out    dx,eax
  4161d3:	int    0xc9
  4161d5:	lock bt DWORD PTR ss:[eax],ebp
  4161da:	test   al,0x36
  4161dc:	add    BYTE PTR [edx-0x2],ah
  4161df:	cmp    DWORD PTR [eax+0x59],esp
  4161e2:	add    eax,0xda3d05f8
  4161e7:	js     0x4161e0
  4161e9:	test   eax,0x712c2f3b
  4161ee:	mov    eax,0xd72d1b54
  4161f3:	or     DWORD PTR [esi-0x546350c8],ecx
  4161f9:	aaa    
  4161fa:	pop    ds
  4161fb:	fidivr WORD PTR [ecx+0x3d]
  4161fe:	out    0x77,eax
  416200:	add    DWORD PTR [eax+ebx*8],ebp
  416203:	arpl   WORD PTR [eax-0x54],bx
  416206:	cdq    
  416207:	mov    al,ds:0x4d092685
  41620c:	mov    eax,0x8a1e50a1
  416211:	out    dx,al
  416212:	mov    edi,DWORD PTR [bx+si]
  416215:	inc    edx
  416216:	sbb    dh,BYTE PTR [edx+0x4a]
  416219:	mov    ebp,0xa1fdbfd2
  41621e:	cmc    
  41621f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416220:	mov    bl,0xb2
  416222:	mov    edi,0xe2425fad
  416227:	fstp   QWORD PTR [ebx+0x2932fc45]
  41622d:	sbb    BYTE PTR [eax+0x38],dl
  416230:	jns    0x4161f7
  416232:	je     0x416285
  416234:	jp     0x416279
  416236:	aaa    
  416237:	jns    0x4162a6
  416239:	jne    0x416236
  41623b:	lods   eax,DWORD PTR ds:[esi]
  41623c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41623d:	fadd   st,st(1)
  41623f:	and    DWORD PTR [edi+0x2d7bebac],eax
  416245:	ds mov ecx,0x38f6eb63
  41624b:	out    0xcc,al
  41624d:	mov    WORD PTR [esi-0x1d],cs
  416250:	push   es
  416251:	fisubr WORD PTR [esi+0x70]
  416254:	cld    
  416255:	repz pop es
  416257:	les    esi,FWORD PTR [ecx+ebx*4+0x6ab478a4]
  41625e:	loope  0x4162d3
  416260:	aaa    
  416261:	(bad)  
  416262:	cmp    edi,DWORD PTR [edx-0x447d5539]
  416268:	mov    al,ds:0x3a365544
  41626d:	or     bl,BYTE PTR [ecx+0x32bdc6e3]
  416273:	or     bl,ah
  416275:	das    
  416276:	ins    BYTE PTR es:[edi],dx
  416277:	and    ecx,0x1a503706
  41627d:	push   eax
  41627e:	mov    ds:0x3a15775a,eax
  416283:	scas   eax,DWORD PTR es:[edi]
  416284:	push   es
  416285:	or     eax,0xf1945194
  41628a:	sbb    eax,0xfe5404d4
  41628f:	imul   ebx,ecx,0x5575f743
  416295:	nop
  416296:	xadd   edi,ebx
  416299:	mov    esi,es
  41629b:	in     al,dx
  41629c:	test   BYTE PTR [esi],bh
  41629e:	jae    0x4162c2
  4162a0:	mov    ?,WORD PTR [eax+0x7950eaa7]
  4162a6:	fistp  QWORD PTR [edi+0x4e3a7005]
  4162ac:	(bad)  
  4162ad:	ror    DWORD PTR [edx],1
  4162af:	retf   0xd33f
  4162b2:	jne    0x4162d9
  4162b4:	hlt    
  4162b5:	addr16 pop esp
  4162b7:	mov    dl,0x6f
  4162b9:	mov    ah,0x54
  4162bb:	push   edi
  4162bc:	inc    ebx
  4162bd:	sub    eax,0x68b309ef
  4162c2:	push   ss
  4162c3:	shl    DWORD PTR [edx+0x5397b45],1
  4162c9:	jbe    0x4162d6
  4162cb:	fst    DWORD PTR [ebx]
  4162cd:	xchg   esp,eax
  4162ce:	call   0xbda6424b
  4162d3:	xchg   ebx,eax
  4162d4:	mov    ebx,0x6360c52b
  4162d9:	es out dx,eax
  4162db:	test   al,0x65
  4162dd:	arpl   WORD PTR [edi],bx
  4162df:	test   eax,0xcc27076a
  4162e4:	xchg   edi,eax
  4162e5:	les    esp,FWORD PTR [ebp+0x34]
  4162e8:	lea    esp,ds:0xb8010dc0
  4162ee:	jbe    0x4162ed
  4162f0:	or     BYTE PTR [eax-0x1cd768d5],cl
  4162f6:	test   eax,0x4e3e863e
  4162fb:	es jnp 0x4162cc
  4162fe:	mov    esp,0x8b11f707
  416303:	xchg   esp,eax
  416304:	pop    edi
  416305:	fwait
  416306:	cmp    BYTE PTR [ecx+0x62c7d612],0xcc
  41630d:	xor    BYTE PTR [eax-0xb],bh
  416310:	mov    esi,0x46cb3929
  416315:	push   cs
  416316:	adc    esi,DWORD PTR [esi-0x1a38a4d1]
  41631c:	dec    esp
  41631d:	call   0xede5e1b
  416322:	(bad)  
  416324:	xor    al,0x14
  416326:	out    dx,eax
  416327:	hlt    
  416328:	sub    eax,0xd407b9d7
  41632d:	pusha  
  41632e:	(bad)  [eax]
  416330:	inc    ebx
  416331:	fisub  DWORD PTR [ebx+0x4d]
  416334:	pop    ecx
  416335:	mov    eax,0xfa0be0f0
  41633a:	mov    dh,0xfe
  41633c:	repz jmp 0xb15724a8
  416342:	(bad)  
  416343:	bound  eax,QWORD PTR [edx-0x4c40f56c]
  416349:	jmp    0xd462c1a9
  41634e:	or     BYTE PTR [eax+0x3fde121b],dh
  416354:	lds    esp,FWORD PTR [ebx]
  416356:	dec    edi
  416357:	or     al,0x79
  416359:	inc    edx
  41635a:	cmp    ebx,eax
  41635c:	push   0x839d24f7
  416361:	cwde   
  416362:	inc    si
  416364:	sub    dh,BYTE PTR [ebp+ecx*8+0x3fba234e]
  41636b:	in     eax,0xa8
  41636d:	(bad)  
  41636e:	fs jmp 0x416394
  416371:	outs   dx,DWORD PTR ds:[esi]
  416372:	loope  0x41632d
  416374:	out    0x19,al
  416376:	mov    al,0x22
  416378:	and    BYTE PTR [edx+0x6e],ch
  41637b:	pop    es
  41637c:	imul   al
  41637e:	push   0x6c13b62f
  416383:	pop    ebp
  416384:	mov    al,ds:0x9b0f9d38
  416389:	data16 sahf 
  41638b:	hlt    
  41638c:	pop    ecx
  41638d:	and    eax,0x8f144288
  416392:	xchg   edx,eax
  416393:	pushf  
  416394:	xor    eax,0x82e90fa6
  416399:	pop    edi
  41639a:	and    BYTE PTR [ebp+ebx*1-0xe],cl
  41639e:	sub    BYTE PTR [ecx-0x3bb91865],dl
  4163a4:	add    ch,dh
  4163a6:	mov    edx,0xa1401f27
  4163ab:	dec    esi
  4163ac:	mov    ch,0x83
  4163ae:	scas   eax,DWORD PTR es:[edi]
  4163af:	mov    ds,esi
  4163b1:	add    WORD PTR [ecx-0x22476b39],dx
  4163b8:	cmp    al,0x11
  4163ba:	and    esi,ebp
  4163bc:	push   ss
  4163bd:	adc    BYTE PTR [ebx-0x3973a3e2],dh
  4163c3:	loopne 0x41641f
  4163c5:	pop    edi
  4163c6:	dec    edx
  4163c7:	test   DWORD PTR [ebx-0x77],esp
  4163ca:	jmp    0xac9b:0xc84bcc95
  4163d1:	cli    
  4163d2:	mov    al,ds:0x428e6611
  4163d7:	sub    DWORD PTR [edx-0x33],eax
  4163da:	mov    ah,0x6d
  4163dc:	ja     0x416401
  4163de:	hlt    
  4163df:	cmp    esi,esp
  4163e1:	add    eax,0xbb10ead1
  4163e6:	mov    ebp,0x42f327f9
  4163eb:	data16 (bad) 
  4163ee:	rcr    BYTE PTR [ebx+0x59dacfcb],cl
  4163f4:	push   ecx
  4163f5:	pop    ebp
  4163f6:	or     eax,0x69deb04a
  4163fb:	std    
  4163fc:	xor    BYTE PTR [esi+eiz*8-0x4623ea1a],al
  416403:	jne    0x4163e3
  416405:	scas   eax,DWORD PTR es:[edi]
  416406:	bound  esi,QWORD PTR [ebp+0x3a]
  416409:	and    al,0xb9
  41640b:	and    BYTE PTR [edi+0x10de2a03],dl
  416411:	jne    0x4163ff
  416413:	inc    ecx
  416414:	inc    ebx
  416415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416416:	stos   BYTE PTR es:[edi],al
  416417:	sahf   
  416418:	inc    ebp
  416419:	adc    dh,ch
  41641b:	or     dh,bl
  41641d:	stos   BYTE PTR es:[edi],al
  41641e:	ss inc esp
  416420:	mov    edi,0x6534b104
  416425:	pop    edi
  416426:	adc    bl,BYTE PTR [ebx+eax*2+0x2f524d8f]
  41642d:	shr    al,1
  41642f:	jb     0x416429
  416431:	push   es
  416432:	arpl   WORD PTR [edi-0x24],si
  416435:	push   0x5abfd250
  41643a:	dec    edx
  41643b:	mov    ah,0x90
  41643d:	shl    eax,1
  41643f:	xor    al,0x53
  416441:	test   al,0x1b
  416443:	pop    edi
  416444:	aaa    
  416445:	call   0x394f2435
  41644a:	sub    edx,DWORD PTR [eax]
  41644c:	pop    ebx
  41644d:	js     0x41646a
  41644f:	fisubr DWORD PTR [ebx+0x40]
  416452:	shl    BYTE PTR [esi+0x5498ac16],0x17
  416459:	push   0xa1496d62
  41645e:	cmp    eax,0x5634b5e0
  416463:	push   es
  416464:	push   esi
  416465:	or     al,0x15
  416467:	mov    cs,esi
  416469:	repz cmp BYTE PTR [ecx+0x5f2c41f9],cl
  416470:	push   0x1c
  416472:	cmp    al,0xa2
  416474:	dec    ecx
  416475:	stc    
  416476:	aaa    
  416477:	pop    ecx
  416478:	ja     0x416434
  41647a:	add    cl,BYTE PTR [ebx+eax*8]
  41647d:	stos   DWORD PTR es:[edi],eax
  41647e:	add    edi,DWORD PTR [esi-0x77]
  416481:	mov    dl,0xaa
  416483:	int3   
  416484:	xlat   BYTE PTR ds:[ebx]
  416485:	lods   eax,DWORD PTR ds:[esi]
  416486:	enter  0xc996,0xd5
  41648a:	adc    al,0x90
  41648c:	aas    
  41648d:	loopne 0x4164c5
  41648f:	gs jns 0x4164b7
  416492:	out    dx,eax
  416493:	mov    edi,0x86f38a1e
  416498:	mov    dl,0xd4
  41649a:	test   DWORD PTR [edi],edx
  41649c:	mov    esp,0xc09dc48d
  4164a1:	or     eax,0xcd163b52
  4164a6:	(bad)  
  4164a7:	mov    esi,0x5ddf1fc7
  4164ac:	es mov cl,0xbd
  4164af:	nop
  4164b0:	sti    
  4164b1:	add    BYTE PTR [edi],al
  4164b3:	shr    BYTE PTR [ebx-0x12],0x34
  4164b7:	mov    edi,0x7c74f5cf
  4164bc:	lea    ebp,ds:0x67dee501
  4164c2:	add    dl,cl
  4164c4:	pop    ss
  4164c5:	adc    eax,0x4ce4275c
  4164ca:	and    DWORD PTR [eax+0x14],edi
  4164cd:	sbb    DWORD PTR [eax+0x5b],edi
  4164d0:	or     ch,0xf3
  4164d3:	xchg   ecx,eax
  4164d4:	or     dl,dh
  4164d6:	data16 jecxz 0x416521
  4164d9:	jbe    0x4164f9
  4164db:	fisub  DWORD PTR [ecx-0x57]
  4164de:	out    dx,al
  4164df:	xchg   edx,eax
  4164e0:	retf   
  4164e1:	cs sti 
  4164e3:	xor    al,0x87
  4164e5:	cs jne 0x4164b2
  4164e8:	leave  
  4164e9:	leave  
  4164ea:	inc    ebp
  4164eb:	adc    eax,0x19a15a36
  4164f0:	xchg   esp,eax
  4164f1:	int3   
  4164f2:	and    ch,BYTE PTR [edi-0xf821592]
  4164f8:	icebp  
  4164f9:	or     DWORD PTR [esi],eax
  4164fb:	inc    esi
  4164fc:	dec    ebx
  4164fd:	imul   esp,eax,0x22
  416500:	mov    ch,0x8b
  416502:	ficom  DWORD PTR [edi+0x63]
  416505:	imul   edi,DWORD PTR [edx],0xffffffeb
  416508:	popf   
  416509:	push   eax
  41650a:	mov    al,0x34
  41650c:	inc    edx
  41650d:	jecxz  0x4164ec
  41650f:	mov    al,0xa3
  416511:	jp     0x416572
  416513:	retf   
  416514:	lods   al,BYTE PTR ds:[esi]
  416515:	ficom  DWORD PTR [edx+0x29]
  416518:	js     0x4164f8
  41651a:	mov    bh,0x3a
  41651c:	ins    DWORD PTR es:[edi],dx
  41651d:	mov    cx,0xa549
  416521:	jl     0x4164f1
  416523:	out    0xe0,al
  416525:	popa   
  416526:	test   eax,0x9163af50
  41652b:	add    ebp,DWORD PTR [esi+0x10]
  41652e:	fbld   TBYTE PTR [esi+0x40]
  416531:	les    ecx,FWORD PTR [ebx-0x43]
  416534:	ret    0x5d
  416537:	out    0xa5,eax
  416539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41653a:	dec    edi
  41653b:	and    al,BYTE PTR [edi-0x5e]
  41653e:	outs   dx,BYTE PTR ds:[esi]
  41653f:	or     dl,BYTE PTR [edi]
  416541:	cmp    edi,ebp
  416543:	lock lahf 
  416545:	mov    al,0xea
  416547:	sar    BYTE PTR [edx-0x6356c453],cl
  41654d:	test   DWORD PTR [ecx],ecx
  41654f:	loope  0x4165a7
  416551:	test   DWORD PTR [eax-0x22a8b11b],0xd37c759c
  41655b:	mov    esi,0xe370793a
  416560:	in     eax,dx
  416561:	pop    ebx
  416562:	ss mov edx,0x1ab8a4a5
  416568:	inc    ecx
  416569:	(bad)  
  41656b:	jmp    0x8a005863
  416570:	out    0xad,al
  416572:	xchg   edx,eax
  416573:	jbe    0x41652a
  416575:	jecxz  0x4165b3
  416577:	xchg   edx,eax
  416578:	popf   
  416579:	enter  0xb56c,0xff
  41657d:	jne    0x4165f3
  41657f:	sub    eax,0x434c0e84
  416584:	jg     0x41654e
  416586:	fisttp DWORD PTR [esi]
  416588:	pop    ds
  416589:	clc    
  41658a:	(bad)  
  41658b:	std    
  41658c:	lea    ecx,[eax]
  41658e:	ins    DWORD PTR es:[edi],dx
  41658f:	out    dx,eax
  416590:	fcomp  QWORD PTR [ebx]
  416592:	ret    
  416593:	std    
  416594:	in     eax,dx
  416595:	aad    0x91
  416597:	pop    ecx
  416598:	mov    eax,0xce4d8ff9
  41659d:	mov    ah,0xa5
  41659f:	push   esi
  4165a0:	mov    dl,0x54
  4165a2:	in     eax,0x31
  4165a4:	cmp    edi,DWORD PTR [eax]
  4165a6:	xlat   BYTE PTR ds:[ebx]
  4165a7:	xor    eax,0x56fcc97a
  4165ac:	mov    BYTE PTR [ecx+0x77],ah
  4165af:	rol    BYTE PTR [eax],1
  4165b1:	mov    edi,0x295f7107
  4165b6:	pop    edi
  4165b7:	dec    BYTE PTR [ecx+0x7888c3a0]
  4165bd:	sub    al,0x47
  4165bf:	push   ds
  4165c0:	cld    
  4165c1:	xor    ebp,DWORD PTR [edx]
  4165c3:	adc    edx,DWORD PTR [edx+0x28f0bb53]
  4165c9:	dec    edx
  4165ca:	mov    edx,0xa2c6aa
  4165cf:	adc    bl,BYTE PTR [bp-0x75ae]
  4165d4:	mul    DWORD PTR [esi-0x51]
  4165d7:	adc    BYTE PTR [edi-0x7f],0x30
  4165db:	push   0xffffffe8
  4165dd:	rol    esp,1
  4165df:	out    dx,al
  4165e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165e1:	jo     0x41660e
  4165e3:	jge    0x4165ff
  4165e5:	add    ebx,eax
  4165e7:	adc    edi,DWORD PTR [ecx-0x35]
  4165ea:	jmp    0x509a:0xb5b8843c
  4165f1:	jns    0x416620
  4165f3:	xor    eax,0xb32fd2ae
  4165f8:	fcomp  st(2)
  4165fa:	adc    dl,cl
  4165fc:	cs cmp ecx,edi
  4165ff:	or     eax,0x95001ada
  416604:	pop    edx
  416605:	scas   al,BYTE PTR es:[edi]
  416606:	push   ecx
  416607:	out    0x2,eax
  416609:	mov    ch,0xd6
  41660b:	jno    0x4165db
  41660d:	jb     0x416611
  41660f:	or     DWORD PTR [ebp-0x32],0xffffffbe
  416613:	sbb    esi,DWORD PTR [edx+0x7de6c7a7]
  416619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41661a:	add    al,0x63
  41661c:	call   0xb68589a0
  416621:	nop
  416622:	jnp    0x4165ab
  416624:	(bad)  
  416625:	outs   dx,BYTE PTR ds:[esi]
  416626:	jnp    0x41664a
  416628:	std    
  416629:	out    dx,eax
  41662a:	push   es
  41662b:	xor    al,0x86
  41662d:	adc    eax,0xaa3540b5
  416632:	das    
  416633:	arpl   sp,si
  416635:	stc    
  416636:	xchg   esi,eax
  416637:	in     al,0x7c
  416639:	inc    ebx
  41663a:	hlt    
  41663b:	dec    ebp
  41663c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41663d:	inc    esi
  41663e:	cmc    
  41663f:	mul    DWORD PTR [ebx+ebp*8+0x4]
  416643:	cwde   
  416644:	or     bh,bl
  416646:	mov    ebx,0x59df345f
  41664b:	or     al,0xb7
  41664d:	pushf  
  41664e:	sar    ah,0xff
  416651:	push   0xf
  416653:	es or  eax,eax
  416656:	loop   0x416639
  416658:	sbb    bh,BYTE PTR [esi]
  41665a:	jmp    0xd1d97cb6
  41665f:	aaa    
  416660:	jb     0x41667a
  416662:	les    ebx,FWORD PTR [edi]
  416664:	enter  0x3fa8,0x3f
  416668:	retf   
  416669:	ja     0x41666f
  41666b:	sbb    esi,DWORD PTR [ebx]
  41666d:	mov    dh,0xf2
  41666f:	das    
  416670:	retf   
  416671:	and    dh,bh
  416673:	push   ds
  416674:	sbb    eax,0x148eb82c
  416679:	mov    edi,ecx
  41667b:	pop    ss
  41667c:	xor    BYTE PTR [ecx-0x69],bh
  41667f:	xchg   ecx,eax
  416680:	cld    
  416681:	mov    ebp,gs
  416683:	and    eax,0xfe14e7fd
  416688:	push   ecx
  416689:	(bad)  
  41668a:	in     al,0x3e
  41668c:	mov    esi,0xb9d3027a
  416691:	mov    bl,0xe1
  416693:	add    eax,0x36c5bace
  416698:	push   eax
  416699:	xor    eax,0xbb49e7fe
  41669e:	push   ecx
  41669f:	mov    eax,0x3de13d7c
  4166a4:	ins    BYTE PTR es:[edi],dx
  4166a5:	and    eax,0x5a7523f0
  4166aa:	inc    edi
  4166ab:	pushf  
  4166ac:	sar    DWORD PTR [edi+esi*2-0x2ae0f814],0x64
  4166b4:	pushf  
  4166b5:	dec    ecx
  4166b6:	xor    cl,bl
  4166b8:	fstp   QWORD PTR [ebx-0x7d]
  4166bb:	jmp    0xfcac:0x5709c5c0
  4166c2:	jp     0x41672c
  4166c4:	or     dl,BYTE PTR [eax+0x1]
  4166c7:	xor    bh,0xad
  4166ca:	out    dx,al
  4166cb:	(bad)  
  4166cc:	repnz push es
  4166ce:	fadd   QWORD PTR [edx+0x145fa7c2]
  4166d4:	(bad)  
  4166d5:	cmp    eax,0x5434e6ab
  4166da:	lock in eax,dx
  4166dc:	mov    DWORD PTR [eax+0x68],eax
  4166df:	dec    edi
  4166e0:	loope  0x4166c7
  4166e2:	call   DWORD PTR [esi]
  4166e4:	mov    BYTE PTR [edi],bh
  4166e6:	xchg   ecx,eax
  4166e7:	pushf  
  4166e8:	cwde   
  4166e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166ea:	inc    edx
  4166eb:	sub    esp,DWORD PTR [eax+0x2a]
  4166ee:	push   ecx
  4166ef:	jne    0x41668a
  4166f1:	mov    bl,0x88
  4166f3:	jmp    0x4a43:0x574d508f
  4166fa:	jb     0x416744
  4166fc:	xor    BYTE PTR [esi+0x7092536a],al
  416702:	xlat   BYTE PTR ds:[ebx]
  416703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416704:	mov    eax,ds:0x96e1d74b
  416709:	cmc    
  41670a:	not    DWORD PTR [ebp+ebx*8+0x7c]
  41670e:	mov    ds:0x93457c00,eax
  416713:	xchg   esp,eax
  416714:	sti    
  416715:	mov    esi,edx
  416717:	sub    bl,BYTE PTR [esi-0x1b8c9735]
  41671d:	mov    ah,0x4f
  41671f:	sbb    eax,0x6a8033a9
  416724:	xor    edx,0x5ce162ae
  41672a:	add    eax,DWORD PTR [edx+eiz*2+0x30b5f4dc]
  416731:	inc    eax
  416732:	shr    BYTE PTR [esi+0x5c9f7b5b],cl
  416738:	mov    al,ds:0xe15f3535
  41673d:	dec    esp
  41673e:	das    
  41673f:	mov    ebx,0x9fe31ce7
  416744:	push   0x62624ce7
  416749:	int3   
  41674a:	mov    bl,0x11
  41674c:	shl    DWORD PTR [esi-0x39],0xe4
  416750:	out    0xba,al
  416752:	int    0x23
  416754:	ja     0x416728
  416756:	ins    BYTE PTR es:[edi],dx
  416757:	add    BYTE PTR [edx-0x28f2e0a0],dl
  41675d:	jae    0x41676a
  41675f:	sbb    DWORD PTR [esi],esp
  416761:	add    DWORD PTR [edi],0xfffffff1
  416764:	jae    0x416708
  416766:	xor    DWORD PTR [ecx+0x3aa500a6],ecx
  41676c:	sub    BYTE PTR [ebx],dh
  41676e:	inc    ecx
  41676f:	inc    edi
  416770:	int3   
  416771:	fsqrt  
  416773:	aam    0x3d
  416775:	shl    BYTE PTR [ebx],1
  416777:	push   edx
  416778:	test   eax,0x24cd4fd9
  41677d:	push   es
  41677e:	out    0xf4,eax
  416780:	dec    ebp
  416782:	not    BYTE PTR [esi+eiz*4+0x64]
  416786:	inc    ebp
  416787:	sub    eax,0xc187a80f
  41678c:	nop
  41678d:	rcr    BYTE PTR [edi],cl
  41678f:	jmp    0xd23d203e
  416794:	ret    0x1225
  416797:	xor    DWORD PTR [ecx-0x510aab45],0x97febb2b
  4167a1:	mov    BYTE PTR [ecx-0x17],cl
  4167a4:	dec    esi
  4167a5:	addr16 pop esp
  4167a7:	push   ss
  4167a8:	xchg   ebp,eax
  4167a9:	jne    0x4167d4
  4167ab:	mov    BYTE PTR [ebp-0x46],ah
  4167ae:	jle    0x41680f
  4167b0:	(bad)  
  4167b1:	mov    bl,0x2d
  4167b3:	cmp    DWORD PTR [esi],0x6f
  4167b6:	sbb    BYTE PTR [esi+edx*2],ch
  4167b9:	mov    al,0xed
  4167bb:	inc    edi
  4167bc:	dec    ecx
  4167bd:	adc    al,0x68
  4167bf:	push   cs
  4167c0:	sbb    BYTE PTR [esi-0x4a],cl
  4167c3:	enter  0x3954,0xb3
  4167c7:	cmp    DWORD PTR [ecx],0x40
  4167ca:	out    0x61,eax
  4167cc:	dec    edi
  4167ce:	ret    
  4167cf:	mov    dl,0xe3
  4167d1:	(bad)  
  4167d2:	sub    al,0x5b
  4167d4:	push   0x6d90c697
  4167d9:	lods   al,BYTE PTR ds:[esi]
  4167da:	test   BYTE PTR [edi+0x2e9ce27a],0xee
  4167e1:	dec    esp
  4167e2:	and    eax,0x58280523
  4167e7:	in     al,0x47
  4167e9:	xor    BYTE PTR [edi-0x6ca28ba3],dl
  4167ef:	mov    cl,0x7a
  4167f1:	lea    esp,[ecx-0x53]
  4167f4:	clc    
  4167f5:	leave  
  4167f6:	xchg   ebp,eax
  4167f7:	(bad)  
  4167f8:	or     BYTE PTR ds:0x831e3d57,cl
  4167ff:	retf   
  416800:	and    DWORD PTR [ebp-0x5d],0xe
  416804:	pusha  
  416805:	sub    DWORD PTR [ebx+edx*1+0x6b54e6c8],ecx
  41680c:	pop    es
  41680d:	out    dx,eax
  41680e:	inc    esp
  41680f:	xchg   edx,eax
  416810:	leave  
  416811:	jnp    0x41687f
  416813:	(bad)  
  416814:	mov    ds:0xf7a8dc67,al
  416819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41681a:	pcmpgtd mm2,QWORD PTR [eax+ecx*4-0x27]
  41681f:	call   0x8b1df3ab
  416824:	jmp    0x416894
  416826:	sbb    BYTE PTR [ebx+eiz*8+0x3b],dh
  41682a:	and    al,0xe8
  41682c:	cmc    
  41682d:	mov    ebx,0x34207b5b
  416832:	or     BYTE PTR [ecx],0x16
  416835:	retf   0xae86
  416838:	and    al,0x69
  41683a:	jge    0x416813
  41683c:	xor    esi,edi
  41683e:	mov    ds:0x485e50f,eax
  416843:	outs   dx,BYTE PTR ds:[esi]
  416844:	push   ecx
  416845:	(bad)  
  416846:	cmc    
  416847:	cli    
  416848:	(bad)  
  416849:	push   0x2c2bb19c
  41684e:	sub    dh,BYTE PTR [ecx]
  416850:	mov    bh,0x2f
  416852:	jmp    0x4b10:0xf930d691
  416859:	xor    al,0x60
  41685b:	jg     0x4168b5
  41685d:	mov    ds:0xf0d8b1af,eax
  416862:	jo     0x41680a
  416864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416865:	mov    DWORD PTR [ebx-0x67],edi
  416868:	xor    edx,ebp
  41686a:	pop    es
  41686b:	jg     0x41682c
  41686d:	pop    esi
  41686e:	xor    esi,DWORD PTR cs:[ebx+0xc]
  416872:	out    0x79,eax
  416874:	and    eax,0x4d30dca5
  416879:	sti    
  41687a:	sbb    edi,edi
  41687c:	dec    esp
  41687d:	in     al,dx
  41687e:	cli    
  41687f:	inc    ecx
  416880:	jle    0x41686a
  416882:	xchg   esp,eax
  416883:	push   eax
  416884:	mov    eax,0xf2ff2dfb
  416889:	add    bl,BYTE PTR [ebx+0x24842795]
  41688f:	jnp    0x41684c
  416891:	xchg   DWORD PTR [ecx-0x5c],edi
  416894:	icebp  
  416895:	sub    al,0x6c
  416897:	hlt    
  416898:	fild   QWORD PTR [ecx+ebp*8+0x706d0368]
  41689f:	cmp    DWORD PTR ds:0xdf480731,ebx
  4168a5:	int3   
  4168a6:	ins    DWORD PTR es:[edi],dx
  4168a7:	frstor [edx-0x1]
  4168aa:	test   eax,0xc517befe
  4168af:	dec    edi
  4168b0:	jg     0x4168d0
  4168b2:	or     esi,DWORD PTR [ebp+0x1d]
  4168b5:	inc    esi
  4168b6:	cli    
  4168b7:	mov    BYTE PTR [ebx-0x41],dl
  4168ba:	je     0x41688a
  4168bc:	scas   al,BYTE PTR es:[edi]
  4168bd:	xor    ecx,eax
  4168bf:	mov    ah,0x2e
  4168c1:	xchg   ebx,eax
  4168c2:	cmp    eax,0xdba7cd23
  4168c7:	sbb    bh,dl
  4168c9:	les    edi,FWORD PTR [esi]
  4168cb:	in     al,dx
  4168cc:	push   ds
  4168cd:	mov    al,0xfa
  4168cf:	mov    ebp,0xcb64bf9d
  4168d4:	lahf   
  4168d5:	retf   
  4168d6:	pop    ss
  4168d7:	test   DWORD PTR [ecx-0x1],ebp
  4168da:	lahf   
  4168db:	xor    edx,esi
  4168dd:	xor    edi,DWORD PTR [ebp*1-0x5552498d]
  4168e4:	xchg   al,dl
  4168e6:	cmc    
  4168e7:	daa    
  4168e8:	rol    DWORD PTR [ebp+0x4a],cl
  4168eb:	les    ebx,FWORD PTR [eax]
  4168ed:	dec    esi
  4168ee:	add    edi,ebp
  4168f0:	outs   dx,DWORD PTR ds:[esi]
  4168f1:	add    eax,0xa85d8208
  4168f6:	xor    al,0x9b
  4168f8:	cmp    bl,dh
  4168fa:	fadd   QWORD PTR [esi+edx*4+0x222ca522]
  416901:	adc    al,0xa2
  416903:	sub    eax,0xb2fc7b01
  416908:	push   ebx
  416909:	test   BYTE PTR ds:0xf744473f,0x60
  416910:	cmp    esi,DWORD PTR [eax]
  416912:	inc    ecx
  416913:	mov    ebx,0x7a1e6605
  416918:	shr    BYTE PTR [ecx-0x5c],0x2c
  41691c:	(bad)  [ebx+ebp*4-0x1]
  416920:	add    al,0xcb
  416922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416923:	mov    eax,0xfa7c1c71
  416928:	mov    BYTE PTR [ecx],cl
  41692a:	xlat   BYTE PTR ds:[ebx]
  41692b:	nop
  41692c:	or     eax,0x510a0db9
  416931:	adc    edx,DWORD PTR [edx]
  416933:	dec    esi
  416934:	sbb    al,0xd7
  416936:	icebp  
  416937:	out    dx,al
  416938:	mov    ds:0x8bd23da4,eax
  41693d:	push   ds
  41693e:	or     al,0x1d
  416940:	test   DWORD PTR [si-0x4d],esi
  416944:	jmp    0x40cfe4bf
  416949:	adc    esp,ebp
  41694b:	mov    al,bh
  41694d:	ins    DWORD PTR es:[edi],dx
  41694e:	hlt    
  41694f:	pusha  
  416950:	adc    ebx,esi
  416952:	retf   
  416953:	js     0x416979
  416955:	push   eax
  416956:	pop    es
  416957:	scas   eax,DWORD PTR es:[edi]
  416958:	xor    al,0xc5
  41695a:	push   edi
  41695b:	scas   eax,DWORD PTR es:[edi]
  41695c:	adc    DWORD PTR [ebx+0x38af013c],ecx
  416962:	lods   eax,DWORD PTR ds:[esi]
  416963:	sahf   
  416964:	test   BYTE PTR ds:0x184a74c5,0xa9
  41696b:	xchg   esp,eax
  41696c:	push   cs
  41696d:	lods   eax,DWORD PTR ds:[esi]
  41696e:	sub    al,BYTE PTR [ebp-0x60]
  416971:	mov    eax,0x698cbf7f
  416976:	sbb    eax,0x8e7a4807
  41697b:	in     al,dx
  41697c:	add    ecx,DWORD PTR [ebx-0x4c30c908]
  416982:	dec    bl
  416984:	fild   QWORD PTR [edi+0x52707773]
  41698a:	xchg   ecx,eax
  41698b:	popf   
  41698c:	retf   
  41698d:	xchg   BYTE PTR [ebx+0x18c33c78],cl
  416993:	and    dl,BYTE PTR [ebx+ecx*4+0x49066515]
  41699a:	cmp    esi,DWORD PTR [ebp+0x1d5dd8f5]
  4169a0:	xor    esi,DWORD PTR [esi+0x4b]
  4169a3:	lds    esi,FWORD PTR ds:0xa2c1cfbf
  4169a9:	cmp    esp,ecx
  4169ab:	fidivr DWORD PTR [eax]
  4169ad:	fdivr  QWORD PTR [ebx]
  4169af:	retf   
  4169b0:	dec    ecx
  4169b1:	imul   ebx,DWORD PTR [esi+edi*4+0x32],0xb6291874
  4169b9:	xor    al,0xe7
  4169bb:	test   al,ch
  4169bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169be:	mov    ebx,0xd8bb72cb
  4169c3:	mov    ebp,0xe6e6ef5f
  4169c8:	xchg   ecx,eax
  4169c9:	xchg   edx,eax
  4169ca:	loope  0x4169b0
  4169cc:	mov    ebp,0xfed4e8d3
  4169d1:	retf   
  4169d2:	dec    edi
  4169d3:	in     eax,0xa4
  4169d5:	xchg   ebx,eax
  4169d6:	(bad)  
  4169d7:	jp     0x4169d0
  4169d9:	jbe    0x4169a9
  4169db:	cwde   
  4169dc:	adc    edi,ebp
  4169de:	mov    ah,0x9
  4169e0:	(bad)  
  4169e1:	adc    al,0xf2
  4169e3:	inc    edi
  4169e4:	(bad)  
  4169e5:	mov    ebx,0xa7d988ab
  4169ea:	adc    ebx,ebp
  4169ec:	in     eax,0x27
  4169ee:	xchg   edi,edx
  4169f0:	mov    ebx,0xcebc7d54
  4169f5:	or     esp,DWORD PTR [esi-0x135bc14f]
  4169fb:	div    BYTE PTR [esi+0x3c14fa0]
  416a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a02:	cdq    
  416a03:	shr    DWORD PTR [edi],cl
  416a05:	cmp    ah,BYTE PTR [ebx+0x41bd7a92]
  416a0b:	(bad)  
  416a0d:	arpl   WORD PTR [ecx-0x3e],dx
  416a10:	cmp    DWORD PTR [edi+0x4f5417b0],ebx
  416a16:	leave  
  416a17:	sub    bl,0x79
  416a1a:	stos   DWORD PTR es:[edi],eax
  416a1b:	or     edx,DWORD PTR [ebx-0x19]
  416a1e:	push   esp
  416a1f:	jg     0x416a97
  416a21:	inc    ecx
  416a22:	sub    al,0xd0
  416a24:	mov    ecx,0xbe235b39
  416a29:	xlat   BYTE PTR ds:[ebx]
  416a2a:	sbb    esi,ebx
  416a2c:	call   0xbd99:0x471d2cee
  416a33:	pop    eax
  416a34:	or     eax,0xa33883ad
  416a39:	mov    cl,ah
  416a3b:	adc    al,0x90
  416a3d:	mov    ah,0x53
  416a3f:	sbb    eax,0x7cbd2826
  416a44:	cmp    eax,ecx
  416a46:	fld    TBYTE PTR [ebp+0x49]
  416a49:	sub    DWORD PTR [ebx],eax
  416a4b:	retf   
  416a4c:	sbb    eax,0xe6ec96fc
  416a51:	ss mov eax,0x8ee9a5f
  416a57:	test   DWORD PTR [ebp-0x6a],ecx
  416a5a:	imul   edx,DWORD PTR gs:[eax],0xfa18ffe7
  416a61:	mov    ds:0xc6bd0004,al
  416a66:	xchg   ecx,eax
  416a67:	or     BYTE PTR [ebp+0x65f1b851],bh
  416a6d:	jne    0x416ab4
  416a6f:	scas   al,BYTE PTR es:[edi]
  416a70:	imul   ecx,esp,0x439d1759
  416a76:	cmp    eax,0xeae1d90
  416a7b:	dec    eax
  416a7c:	ficomp WORD PTR [edi]
  416a7e:	repz and BYTE PTR [ebx-0x6a],bl
  416a82:	call   0xd5b0fa61
  416a87:	outs   dx,BYTE PTR ds:[esi]
  416a88:	loope  0x416af1
  416a8a:	mov    ch,0xd4
  416a8c:	add    DWORD PTR [edx+0x784e8b30],edx
  416a92:	add    ecx,DWORD PTR [esi+0x42]
  416a95:	adc    al,0xe4
  416a97:	in     eax,dx
  416a98:	shr    DWORD PTR [eax],0x51
  416a9b:	push   0x8f9f74e1
  416aa0:	jle    0x416a3b
  416aa2:	dec    edi
  416aa3:	add    BYTE PTR [ebx],ah
  416aa5:	add    BYTE PTR [edi-0x5a],cl
  416aa8:	adc    ah,BYTE PTR [esi+0x42fa1804]
  416aae:	dec    ebp
  416aaf:	stos   DWORD PTR es:[edi],eax
  416ab0:	fadd   DWORD PTR [edx-0x39075475]
  416ab6:	xor    al,0x16
  416ab8:	sbb    al,0xb0
  416aba:	add    ebx,DWORD PTR [edi]
  416abc:	rcr    DWORD PTR [edx+edi*4],0xf7
  416ac0:	pop    ecx
  416ac1:	repz pop ebx
  416ac3:	imul   ecx,DWORD PTR [ebx],0xb85c2a1b
  416ac9:	int3   
  416aca:	retf   
  416acb:	adc    DWORD PTR [eax],ecx
  416acd:	sar    cl,0xba
  416ad0:	push   0x69
  416ad2:	cli    
  416ad3:	aaa    
  416ad4:	push   ss
  416ad5:	sbb    al,0x69
  416ad7:	aas    
  416ad8:	sbb    dh,bh
  416ada:	or     cl,BYTE PTR [ecx]
  416adc:	sub    edi,0xfffffff3
  416adf:	mov    ds:0xd741ab4a,al
  416ae4:	fwait
  416ae5:	xchg   ebp,eax
  416ae6:	stc    
  416ae7:	mov    ecx,0xf9365bb9
  416aec:	(bad)  
  416aed:	or     al,0xb3
  416aef:	stos   BYTE PTR es:[edi],al
  416af0:	mov    ecx,0xb36cf6d5
  416af5:	jne    0x416b2b
  416af7:	fs add edi,0xbd5505dc
  416afe:	lea    esp,[ecx-0x66]
  416b01:	es jns 0x416b7d
  416b04:	push   0x3d
  416b06:	xchg   ebp,eax
  416b07:	mov    ah,0x6
  416b09:	xlat   BYTE PTR ds:[ebx]
  416b0a:	adc    BYTE PTR [ecx+ebx*2+0x23],dh
  416b0e:	lods   al,BYTE PTR ds:[esi]
  416b0f:	mov    ds:0x2631d2bf,al
  416b14:	popa   
  416b15:	enter  0x5ad4,0xdb
  416b19:	sub    ah,ah
  416b1b:	aaa    
  416b1c:	int3   
  416b1d:	push   esp
  416b1e:	jmp    0x73d7c1c0
  416b23:	cmc    
  416b24:	push   esi
  416b25:	xor    eax,DWORD PTR [edi-0x2b6e7409]
  416b2b:	jp     0x416b14
  416b2d:	out    0x72,al
  416b2f:	popf   
  416b30:	and    al,0x55
  416b32:	pusha  
  416b33:	mov    ebp,0x56ed5ecc
  416b38:	iret   
  416b39:	add    BYTE PTR [eax-0x58],ch
  416b3c:	mov    edx,fs
  416b3e:	xchg   esp,eax
  416b3f:	hlt    
  416b40:	or     al,0xce
  416b42:	fld    QWORD PTR [esi]
  416b44:	cdq    
  416b45:	pop    edi
  416b46:	test   DWORD PTR [ecx-0x5c],0xb0c66eda
  416b4d:	int3   
  416b4e:	mov    dl,0xd9
  416b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b51:	test   eax,ebp
  416b53:	(bad)  
  416b54:	enter  0x313c,0x9a
  416b58:	mov    edi,DWORD PTR [ebp+0x3c7cd20]
  416b5e:	xchg   ecx,eax
  416b5f:	iret   
  416b60:	jmp    0xe1bf:0xec2488dd
  416b67:	add    eax,0x1dac8a34
  416b6c:	sar    BYTE PTR [edx+0xc],0x68
  416b70:	(bad)  [esi-0x49a9c07b]
  416b76:	repz sub al,BYTE PTR [edx+0x59]
  416b7a:	sbb    BYTE PTR [eax-0x6fa5d502],dl
  416b80:	xor    ah,dl
  416b82:	pop    esi
  416b83:	pusha  
  416b84:	inc    DWORD PTR [eax+ecx*4+0x35]
  416b88:	fs rol ebx,1
  416b8b:	cmp    DWORD PTR [ecx],eax
  416b8d:	add    ah,BYTE PTR [edi+edi*8+0x2e]
  416b91:	lods   eax,DWORD PTR ds:[esi]
  416b92:	pop    eax
  416b93:	dec    ebx
  416b94:	sbb    al,0x59
  416b96:	loope  0x416bc4
  416b98:	or     dl,BYTE PTR [esi-0x15819910]
  416b9e:	ins    BYTE PTR es:[edi],dx
  416b9f:	dec    esp
  416ba0:	mov    eax,ds:0x4d847
  416ba5:	cld    
  416ba6:	stc    
  416ba7:	dec    esp
  416ba8:	dec    ecx
  416ba9:	out    0x47,al
  416bab:	stos   BYTE PTR es:[edi],al
  416bac:	aam    0x4b
  416bae:	shl    BYTE PTR [ebp+edi*4-0x42],1
  416bb2:	adc    al,BYTE PTR [ebx]
  416bb4:	cmp    al,0x96
  416bb6:	cmp    eax,0xc040d9ba
  416bbb:	pop    ebx
  416bbc:	inc    esi
  416bbd:	xchg   esi,eax
  416bbe:	(bad)  
  416bbf:	mov    dh,0xdc
  416bc1:	inc    esp
  416bc2:	jno    0x416c24
  416bc4:	add    eax,ebx
  416bc6:	les    eax,FWORD PTR [esi-0x186ca602]
  416bcc:	dec    ebp
  416bcd:	pop    eax
  416bce:	jp     0x416b9a
  416bd0:	ret    
  416bd1:	fs fwait
  416bd3:	into   
  416bd4:	mov    eax,ds:0x2bad6190
  416bd9:	push   0x7596713c
  416bde:	pop    ebx
  416bdf:	jge    0x416baa
  416be1:	and    eax,0x94e76d9d
  416be6:	nop
  416be7:	cs in  eax,0x4e
  416bea:	jmp    0x416c67
  416bec:	iret   
  416bed:	mov    esi,0xe5102601
  416bf2:	retf   0xb668
  416bf5:	add    ch,bh
  416bf7:	enter  0x32c1,0x4
  416bfb:	icebp  
  416bfc:	fs ins DWORD PTR es:[edi],dx
  416bfe:	sub    edi,eax
  416c00:	daa    
  416c01:	cmp    eax,0x58cbb3c9
  416c06:	in     al,dx
  416c07:	in     eax,dx
  416c08:	jmp    0x416bac
  416c0a:	addr16 sbb al,0xdc
  416c0d:	pusha  
  416c0e:	push   0xfffffffe
  416c10:	fadd   st,st(5)
  416c12:	push   cs
  416c13:	pop    esp
  416c14:	retf   0x1758
  416c17:	or     DWORD PTR ss:[ebx],esi
  416c1a:	inc    edi
  416c1b:	std    
  416c1c:	fsubrp st(0),st
  416c1e:	lock fidiv WORD PTR [ecx-0x4]
  416c22:	in     eax,dx
  416c23:	loopne 0x416c85
  416c25:	cdq    
  416c26:	xlat   BYTE PTR ds:[ebx]
  416c27:	pop    ebp
  416c28:	mov    eax,ds:0x55f0dbb6
  416c2d:	mov    ebp,0x74df3ac6
  416c32:	enter  0x5713,0x61
  416c36:	sbb    al,0x12
  416c38:	(bad)  
  416c39:	sar    al,cl
  416c3b:	sub    eax,0xd7b02c09
  416c40:	cmp    dl,al
  416c42:	add    DWORD PTR [ebx],ebx
  416c44:	loop   0x416c2d
  416c46:	ror    dl,cl
  416c48:	les    ebx,FWORD PTR [ecx]
  416c4a:	daa    
  416c4b:	pop    ds
  416c4c:	aas    
  416c4d:	or     DWORD PTR [ecx],esp
  416c4f:	jmp    0x807e8012
  416c54:	xchg   edx,eax
  416c55:	jns    0x416c42
  416c57:	nop
  416c58:	aam    0x9
  416c5a:	xor    esi,DWORD PTR [ecx-0x76]
  416c5d:	neg    edi
  416c5f:	cmc    
  416c60:	push   es
  416c61:	add    esi,ebx
  416c63:	and    eax,0x4c889b74
  416c68:	jns    0x416bec
  416c6a:	shr    BYTE PTR [esi],cl
  416c6c:	push   0x3e60c574
  416c71:	xor    BYTE PTR [edi],bl
  416c73:	add    DWORD PTR [esi+0x107dc852],edi
  416c79:	xor    BYTE PTR [eax],dh
  416c7b:	push   ebp
  416c7c:	xor    eax,0x68daad6f
  416c81:	and    eax,0x9b315748
  416c86:	mov    edi,0x5278df2
  416c8b:	(bad)  
  416c8c:	cmp    eax,0xa53344e8
  416c91:	push   edi
  416c92:	in     eax,dx
  416c93:	jmp    0xfa72:0x3ec80e92
  416c9a:	dec    edx
  416c9b:	mov    dh,0x4f
  416c9d:	dec    edi
  416c9e:	and    al,0x75
  416ca0:	adc    DWORD PTR [edx],esp
  416ca2:	fsub   QWORD PTR [ecx+0x486f4b4d]
  416ca8:	ins    BYTE PTR es:[edi],dx
  416ca9:	cli    
  416caa:	aad    0x4c
  416cac:	ret    
  416cad:	push   cs
  416cae:	cmc    
  416caf:	or     dh,BYTE PTR [ecx-0x54]
  416cb2:	scas   eax,DWORD PTR es:[edi]
  416cb3:	and    cl,BYTE PTR [edx]
  416cb5:	ret    0x74f3
  416cb8:	lds    ebp,FWORD PTR [ebx]
  416cba:	pushf  
  416cbb:	mov    cs,ebx
  416cbd:	sti    
  416cbe:	pop    ebp
  416cbf:	fistp  DWORD PTR [ebx+0xf]
  416cc2:	push   edx
  416cc3:	push   ds
  416cc4:	lods   eax,DWORD PTR ds:[esi]
  416cc5:	aaa    
  416cc6:	shl    esi,0x7e
  416cc9:	gs loope 0x416d1d
  416ccc:	loop   0x416d3a
  416cce:	push   ecx
  416ccf:	in     eax,dx
  416cd0:	xchg   edx,eax
  416cd1:	cmc    
  416cd2:	or     ebx,DWORD PTR [esi-0x12]
  416cd5:	(bad)  
  416cd6:	xchg   ebp,eax
  416cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cd8:	addr16 xchg ebx,eax
  416cda:	jecxz  0x416c61
  416cdc:	test   ebx,edx
  416cde:	sub    BYTE PTR [edi+0xe3db2a7],0x4f
  416ce5:	cmp    BYTE PTR [esi],ah
  416ce7:	outs   dx,BYTE PTR ds:[esi]
  416ce8:	pop    ss
  416ce9:	sahf   
  416cea:	call   0xe1e85ee8
  416cef:	out    dx,eax
  416cf0:	popf   
  416cf1:	loope  0x416d64
  416cf3:	cli    
  416cf4:	push   esp
  416cf5:	outs   dx,DWORD PTR ds:[esi]
  416cf6:	xor    DWORD PTR [edx+0x27],ebp
  416cf9:	bound  esp,QWORD PTR [ebx-0x51]
  416cfc:	fisub  DWORD PTR [ebp+0x2d]
  416cff:	shr    DWORD PTR [edi],cl
  416d01:	xchg   esi,eax
  416d02:	test   DWORD PTR [edx+0x25ea1d45],ebp
  416d08:	les    ebx,FWORD PTR [ebx]
  416d0a:	push   esp
  416d0b:	sbb    esp,ebp
  416d0d:	or     eax,0x4976f5b5
  416d12:	xor    al,0x6e
  416d14:	push   esi
  416d15:	add    eax,ebx
  416d17:	hlt    
  416d18:	xchg   ebx,eax
  416d19:	(bad)  
  416d1b:	mov    ah,0xf
  416d1d:	pop    ebp
  416d1e:	popa   
  416d1f:	mov    eax,ds:0x35e3a2e2
  416d24:	cmp    al,0xcc
  416d26:	add    al,0x63
  416d28:	dec    ebx
  416d29:	bound  esi,QWORD PTR [esi-0x64dbbbe6]
  416d2f:	mov    bl,0xe6
  416d31:	out    dx,eax
  416d32:	lods   eax,DWORD PTR ds:[esi]
  416d33:	test   edx,0x64033a27
  416d39:	cmp    al,BYTE PTR fs:[edx]
  416d3c:	jno    0x416d51
  416d3e:	or     DWORD PTR [esi+0xedf1b23],0xffffffc1
  416d45:	(bad)  
  416d46:	inc    ebx
  416d47:	pushf  
  416d48:	inc    ebp
  416d49:	cld    
  416d4a:	shr    cl,cl
  416d4c:	mov    BYTE PTR [ebx],bl
  416d4e:	inc    edi
  416d4f:	mov    BYTE PTR es:[esi],ah
  416d52:	fisubr DWORD PTR [ecx+0x771d982a]
  416d58:	mov    ds:0x806fe159,eax
  416d5d:	pop    ebx
  416d5e:	push   ds
  416d5f:	fcomp  QWORD PTR [edi]
  416d61:	mov    bh,0x87
  416d63:	inc    ebx
  416d64:	or     eax,0x68556ece
  416d69:	pop    es
  416d6a:	jp     0x416d8d
  416d6c:	xchg   edi,eax
  416d6d:	jge    0x416da6
  416d6f:	push   ecx
  416d70:	cs mov dl,0x73
  416d73:	push   esi
  416d74:	sub    esp,ebx
  416d76:	sbb    bh,BYTE PTR [edx+edi*1+0x2d]
  416d7a:	inc    ebx
  416d7b:	pop    ecx
  416d7c:	jle    0x416d74
  416d7e:	das    
  416d7f:	sub    DWORD PTR [edi+0x2deb49b4],ebp
  416d85:	lods   al,BYTE PTR ds:[esi]
  416d86:	retf   
  416d87:	jp     0x416d69
  416d89:	fisubr DWORD PTR [edx+edx*1+0x38]
  416d8d:	rcr    DWORD PTR [edi+0x1b],cl
  416d90:	or     bh,BYTE PTR [ecx+0x3e]
  416d93:	jmp    0x8204da13
  416d98:	pusha  
  416d99:	mov    ds:0x7068fc07,eax
  416d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d9f:	cmp    al,BYTE PTR [ebx+0x3a]
  416da2:	mov    al,0xf5
  416da4:	adc    edx,ebx
  416da6:	data16 adc al,0x1f
  416da9:	(bad)  
  416daa:	out    0x6d,al
  416dac:	fwait
  416dad:	xchg   ecx,eax
  416dae:	pop    edx
  416daf:	(bad)  
  416db0:	std    
  416db1:	and    BYTE PTR [edi+0x2ef30211],bh
  416db7:	and    edi,ecx
  416db9:	sub    DWORD PTR [edi-0x2f],esi
  416dbc:	inc    eax
  416dbd:	mov    cl,0x95
  416dbf:	and    eax,0xf0f36003
  416dc4:	pop    esi
  416dc5:	jne    0x416dbf
  416dc7:	sub    ah,ch
  416dc9:	xchg   ebx,eax
  416dca:	mul    BYTE PTR [eax+0x57b92391]
  416dd0:	xchg   edx,eax
  416dd1:	lea    edi,[esi-0x7]
  416dd4:	adc    esi,ebx
  416dd6:	ds adc eax,0xfa065e9
  416ddc:	push   ss
  416ddd:	out    dx,al
  416dde:	sbb    eax,0xb09fead3
  416de3:	mov    edx,0x6aa26fb5
  416de8:	push   0x17f6e72d
  416ded:	jne    0x416e14
  416def:	aas    
  416df0:	add    eax,0x7c745215
  416df5:	out    dx,al
  416df6:	call   0x5937:0x5a8bc33d
  416dfd:	inc    ecx
  416dfe:	jl     0x416e16
  416e00:	adc    eax,0x12557ebf
  416e05:	test   BYTE PTR [esi],cl
  416e07:	mov    DWORD PTR [esi+0x47],eax
  416e0a:	fwait
  416e0b:	cmp    ebx,DWORD PTR [edi+0x48]
  416e0e:	mov    dl,0xbe
  416e10:	add    eax,0xe0db4308
  416e15:	jne    0x416e56
  416e17:	xor    DWORD PTR [ecx-0x1a],edx
  416e1a:	dec    ecx
  416e1b:	(bad)  
  416e1c:	inc    ebp
  416e1d:	jl     0x416dd5
  416e1f:	pop    esi
  416e20:	and    BYTE PTR [esi],ch
  416e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e23:	sar    edx,0xd8
  416e26:	inc    edi
  416e27:	fsubr  DWORD PTR [esi+0x45b3b8b6]
  416e2d:	out    0x81,eax
  416e2f:	rol    edx,0x52
  416e32:	pushf  
  416e33:	mov    al,0x75
  416e35:	push   ebp
  416e36:	cmp    al,0x32
  416e38:	xor    bl,ah
  416e3a:	clc    
  416e3b:	pop    ss
  416e3c:	pop    eax
  416e3d:	cmp    DWORD PTR [ecx+0x41],0xbe961486
  416e44:	in     eax,0x7f
  416e46:	lods   eax,DWORD PTR ds:[esi]
  416e47:	sar    BYTE PTR [ebp+0x51],1
  416e4a:	(bad)  
  416e4b:	repz push ds
  416e4d:	js     0x416e68
  416e4f:	and    eax,0x421aab8c
  416e54:	xor    ah,BYTE PTR [ebp+0x70]
  416e57:	xchg   ebp,eax
  416e58:	shl    DWORD PTR [eax-0x1d],0x54
  416e5c:	out    dx,eax
  416e5d:	sub    DWORD PTR [bx+0x4e],eax
  416e61:	jmp    0xb65d1e69
  416e66:	lods   eax,DWORD PTR ds:[esi]
  416e67:	pop    ebp
  416e68:	xchg   esp,eax
  416e69:	push   edi
  416e6b:	pop    ecx
  416e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e6d:	pop    eax
  416e6e:	es mov esp,0xa3abae8e
  416e74:	xchg   ecx,eax
  416e75:	out    dx,eax
  416e76:	(bad)  
  416e77:	mov    ds:0xec6f8a41,al
  416e7c:	mov    ch,0x6c
  416e7e:	fpatan 
  416e80:	mov    eax,ds:0x97409353
  416e85:	sub    al,0x38
  416e87:	jb     0x416e80
  416e89:	cmp    bl,BYTE PTR [edi]
  416e8b:	iret   
  416e8c:	hlt    
  416e8d:	jmp    0x50d417b5
  416e92:	sub    eax,0x399d9f4c
  416e97:	pop    es
  416e98:	xchg   esi,eax
  416e99:	mov    ecx,0x57bf9b6e
  416e9e:	cli    
  416e9f:	sub    edi,esi
  416ea1:	sahf   
  416ea2:	test   BYTE PTR [ebx],dl
  416ea4:	inc    esp
  416ea5:	retf   
  416ea6:	xor    al,0x4
  416ea8:	mov    al,0xac
  416eaa:	jno    0x416e89
  416eac:	ins    DWORD PTR es:[edi],dx
  416ead:	out    dx,eax
  416eae:	dec    ecx
  416eaf:	shl    ebx,1
  416eb1:	mov    es,ebx
  416eb3:	mov    edi,0x4b8761c6
  416eb8:	jbe    0x416f2c
  416eba:	sub    BYTE PTR [edi+0x5f0bdb48],dh
  416ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ec1:	jb     0x416f39
  416ec3:	push   eax
  416ec4:	repnz int 0x83
  416ec7:	dec    ebp
  416ec8:	dec    eax
  416ec9:	aad    0xa1
  416ecb:	cmc    
  416ecc:	xchg   esp,eax
  416ecd:	cwde   
  416ece:	sub    BYTE PTR [ebp-0x5b339803],al
  416ed4:	mov    dh,BYTE PTR [edx+ebx*1+0x37320353]
  416edb:	mov    ah,0xc8
  416edd:	inc    edx
  416ede:	mov    bl,0x5a
  416ee0:	sbb    bh,cl
  416ee2:	mov    ds:0x8cf9b9a,al
  416ee7:	je     0x416efc
  416ee9:	div    DWORD PTR [ecx+0x6176715d]
  416eef:	inc    ecx
  416ef0:	pop    edi
  416ef1:	jge    0x416f10
  416ef3:	lds    esp,FWORD PTR [edi+0x7c6c773d]
  416ef9:	xchg   ebp,eax
  416efa:	xor    esi,DWORD PTR [ebx+eiz*2+0xb]
  416efe:	aam    0x8b
  416f00:	xor    edx,eax
  416f02:	sub    ecx,edx
  416f04:	sub    ecx,esi
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	xor    eax,0x936a87e7
  416f1c:	inc    eax
  416f1d:	add    BYTE PTR [ebx-0x7c7ca3e9],0x82
  416f24:	nop
  416f25:	add    ebp,DWORD PTR [edx+0x279ae874]
  416f2b:	adc    dh,BYTE PTR [eax+edx*2-0x7a]
  416f2f:	hlt    
  416f30:	xchg   BYTE PTR [esi+esi*1-0x7fd307d8],bl
  416f37:	ss dec ecx
  416f39:	hlt    
  416f3a:	shl    eax,1
  416f3c:	adc    eax,0x896d3f6b
  416f41:	mov    BYTE PTR [esi-0x6c],ah
  416f44:	jne    0x416fbd
  416f46:	adc    eax,DWORD PTR [ecx-0xb]
  416f49:	pusha  
  416f4a:	inc    edx
  416f4b:	lahf   
  416f4c:	xchg   BYTE PTR [ecx],dh
  416f4e:	xchg   ecx,eax
  416f4f:	sub    ecx,ebx
  416f51:	push   0x34592e2f
  416f56:	dec    eax
  416f57:	mov    ebx,0xba2ae752
  416f5c:	add    bl,BYTE PTR [esp+edx*8-0x50]
  416f60:	cld    
  416f61:	lock repz adc al,0x74
  416f65:	sbb    ch,dh
  416f67:	lods   al,BYTE PTR ds:[esi]
  416f68:	iret   
  416f69:	mov    edx,0x61d71bdc
  416f6e:	push   ecx
  416f6f:	std    
  416f70:	aas    
  416f71:	cld    
  416f72:	and    DWORD PTR [edx+0x6f],esp
  416f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f76:	jp     0x416f4b
  416f78:	aas    
  416f79:	adc    al,0xf2
  416f7b:	xor    dh,ch
  416f7d:	sub    ecx,DWORD PTR [esp+edi*1-0x79f74f31]
  416f84:	fistp  QWORD PTR [edi+edi*1-0xe06935a]
  416f8b:	sub    edx,DWORD PTR [ebx]
  416f8d:	call   0x53c2246a
  416f92:	inc    ecx
  416f93:	pop    edx
  416f94:	les    ebp,FWORD PTR [eax-0x7]
  416f97:	test   eax,0xdd1224a0
  416f9c:	call   0xfdaf:0xe4b13617
  416fa3:	mov    edi,?
  416fa5:	mov    ds:0x361d858f,al
  416faa:	idiv   DWORD PTR ds:0x872c7080
  416fb0:	loop   0x416f5e
  416fb2:	stos   BYTE PTR es:[edi],al
  416fb3:	pop    esp
  416fb4:	loope  0x417004
  416fb6:	or     al,0x2
  416fb8:	adc    DWORD PTR [ebx],0x60
  416fbb:	add    DWORD PTR [edi],edi
  416fbd:	and    bl,BYTE PTR [esi+0x693d4223]
  416fc3:	or     al,0x8e
  416fc5:	mov    esp,0x763bb1f9
  416fca:	inc    ebx
  416fcb:	test   eax,0xb9a71cd
  416fd0:	js     0x416f77
  416fd2:	xchg   edx,eax
  416fd3:	push   ss
  416fd4:	lock inc edx
  416fd6:	ret    0xf667
  416fd9:	adc    eax,DWORD PTR [ecx-0x524d8f25]
  416fdf:	clc    
  416fe0:	ins    BYTE PTR es:[edi],dx
  416fe1:	imul   ecx,DWORD PTR [ebp-0x16],0x7083ec4d
  416fe8:	mov    ds:0x81604275,al
  416fed:	and    eax,0xc3930b96
  416ff2:	adc    BYTE PTR [ebx-0x45],0xad
  416ff6:	pop    ebp
  416ff7:	mov    esi,0xd85c1992
  416ffc:	pop    ds
  416ffd:	cmp    eax,0x78a28923
  417002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417003:	ins    DWORD PTR es:[edi],dx
  417004:	inc    edi
  417005:	mov    DWORD PTR [ebp+0x364b10d1],0x3453f573
  41700f:	lods   eax,DWORD PTR ds:[esi]
  417010:	push   ecx
  417011:	std    
  417012:	rcr    esp,0x62
  417015:	sbb    al,0x41
  417017:	ror    BYTE PTR [edi+0x53],1
  41701a:	adc    dh,bh
  41701c:	fsubr  st,st(7)
  41701e:	jecxz  0x416fa4
  417020:	mov    cl,BYTE PTR [edx+0x1d]
  417023:	push   edi
  417024:	(bad)  
  417025:	(bad)  
  417026:	bound  eax,QWORD PTR ds:[ecx-0x1b]
  41702a:	dec    esp
  41702b:	ins    BYTE PTR es:[edi],dx
  41702c:	lea    ecx,[edi]
  41702e:	jo     0x416ffa
  417030:	xor    ebp,edx
  417032:	out    0xc7,al
  417034:	cmp    ch,BYTE PTR [ecx+0x2e2464f5]
  41703a:	dec    ebx
  41703b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41703c:	dec    eax
  41703d:	into   
  41703e:	repz (bad) 
  417040:	and    eax,0xae590d00
  417045:	adc    DWORD PTR ds:0xd8496db,edx
  41704b:	imul   esp,DWORD PTR [ebx-0x28],0xfffffffb
  41704f:	cmp    BYTE PTR [edx],dl
  417051:	ret    
  417052:	std    
  417053:	jl     0x4170b4
  417055:	out    0xba,eax
  417057:	inc    edi
  417058:	stos   BYTE PTR es:[edi],al
  417059:	mov    WORD PTR [ebx-0x35],fs
  41705c:	je     0x417029
  41705e:	mov    eax,esp
  417060:	cmc    
  417061:	sbb    al,0x82
  417063:	xor    esi,eax
  417065:	mov    eax,ds:0xaf802793
  41706a:	push   0x6f
  41706c:	call   0x8498fe14
  417071:	scas   eax,DWORD PTR es:[edi]
  417072:	data16 daa 
  417074:	sub    eax,0xb89b5e19
  417079:	pop    edx
  41707a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41707b:	ins    BYTE PTR es:[edi],dx
  41707c:	adc    bl,BYTE PTR [edx]
  41707e:	retf   
  41707f:	mov    al,0x8e
  417081:	jmp    0x417016
  417083:	mov    DWORD PTR [ebx],0xed072200
  417089:	and    BYTE PTR [ebx-0x17],0xfa
  41708d:	jno    0x4170c9
  41708f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417090:	cwde   
  417091:	xor    eax,0xdf0b6ef6
  417096:	cld    
  417097:	aad    0x71
  417099:	fwait
  41709a:	call   0xd218a620
  41709f:	sub    al,0x6b
  4170a1:	sbb    bl,BYTE PTR [eax]
  4170a3:	jg     0x417093
  4170a5:	stos   DWORD PTR es:[edi],eax
  4170a6:	sub    al,0xef
  4170a8:	shl    DWORD PTR [eax],1
  4170aa:	or     ebp,DWORD PTR [esi+eax*4-0x1e1c0b3f]
  4170b1:	and    eax,0x75835bea
  4170b6:	jg     0x417087
  4170b8:	repnz inc eax
  4170ba:	xchg   sp,ax
  4170bc:	(bad)  
  4170bd:	ja     0x417040
  4170bf:	(bad)  
  4170c0:	sub    DWORD PTR [edi-0x73e9dc83],esi
  4170c6:	jnp    0x417118
  4170c8:	or     DWORD PTR [eax-0x7a],ebx
  4170cb:	and    al,0xd5
  4170cd:	stos   DWORD PTR es:[edi],eax
  4170ce:	xor    eax,0xcdd24e64
  4170d3:	mov    esp,0x2d4da8f9
  4170d8:	lea    edi,[esi]
  4170da:	adc    al,0x78
  4170dc:	inc    edi
  4170dd:	sub    eax,0x37944f86
  4170e2:	and    ebx,eax
  4170e4:	shl    bl,0x1
  4170e7:	sti    
  4170e8:	pop    es
  4170e9:	xchg   edx,eax
  4170ea:	arpl   WORD PTR [edi+0xaeeabcf],si
  4170f0:	ret    0x79d6
  4170f3:	and    DWORD PTR [esi+0x68],ecx
  4170f6:	sub    DWORD PTR [esi],edi
  4170f8:	inc    edx
  4170f9:	adc    DWORD PTR [esi+0x65],0xc587534a
  417100:	mov    ebx,0x2dda5b39
  417105:	and    eax,0xed446cde
  41710a:	cmp    al,0xbd
  41710c:	mov    BYTE PTR [edx],bh
  41710e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41710f:	dec    ecx
  417110:	int3   
  417111:	sbb    BYTE PTR [eax],cl
  417113:	clc    
  417114:	(bad)  
  417115:	ins    DWORD PTR es:[edi],dx
  417116:	adc    eax,ecx
  417118:	dec    eax
  417119:	or     cl,dl
  41711b:	nop
  41711c:	add    dh,bl
  41711e:	leave  
  41711f:	pop    ss
  417120:	mov    al,ah
  417122:	lahf   
  417123:	cmp    DWORD PTR [ecx+0x9],0x26a2cdd5
  41712a:	sub    ah,BYTE PTR [ecx+eiz*4]
  41712d:	jnp    0x4170b8
  41712f:	and    al,0x10
  417131:	mov    esp,0x57b8c56b
  417136:	fdivrp st(4),st
  417138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417139:	enter  0xf86e,0xa5
  41713d:	add    al,BYTE PTR [ebp-0x3c154709]
  417143:	and    bh,al
  417145:	jecxz  0x417196
  417147:	sub    esp,DWORD PTR [edx-0x6d]
  41714a:	cwde   
  41714b:	cmp    eax,0x779fe6c1
  417150:	fidivr WORD PTR [esi-0x4315eb0a]
  417156:	and    DWORD PTR [ebx+0x3bcc7524],0xc
  41715d:	fldcw  WORD PTR [eax]
  41715f:	cmp    al,0x4a
  417161:	psubusw mm2,QWORD PTR [esi]
  417164:	fcomp  DWORD PTR [ecx]
  417166:	sub    eax,0x245753d
  41716b:	fldenv [eax]
  41716d:	push   0x24
  41716f:	push   cs
  417170:	ja     0x4171c8
  417172:	loope  0x41718b
  417174:	pushf  
  417175:	push   ebx
  417176:	inc    ecx
  417177:	xor    eax,0x34e4abbf
  41717c:	adc    edi,DWORD PTR [eax-0x6a]
  41717f:	pop    esi
  417180:	mov    ds:0x6211ca21,eax
  417185:	int    0x20
  417187:	mov    BYTE PTR [ecx-0x3bff6403],bh
  41718d:	fmul   st(4),st
  41718f:	in     al,0xa4
  417191:	add    bl,BYTE PTR [edi+0x4e37f26]
  417197:	fwait
  417198:	gs push ebx
  41719a:	or     dl,BYTE PTR [ebx]
  41719c:	mov    dl,0xce
  41719e:	jg     0x4171b4
  4171a0:	mov    dl,0x5f
  4171a2:	mov    cl,bh
  4171a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171a5:	fucomip st,st(7)
  4171a7:	pop    ebp
  4171a8:	add    al,0x9b
  4171aa:	xchg   ebx,eax
  4171ab:	push   esi
  4171ac:	fisttp DWORD PTR [edi-0x1a532edf]
  4171b2:	xchg   ecx,eax
  4171b3:	sub    BYTE PTR [edx-0x24ddf467],cl
  4171b9:	jo     0x4171a5
  4171bb:	or     dl,BYTE PTR [ebp-0x1e]
  4171be:	lea    esp,[esi+ecx*1]
  4171c1:	into   
  4171c2:	xor    BYTE PTR [ebx-0x71],dl
  4171c5:	hlt    
  4171c6:	xor    dl,BYTE PTR [esi+0x23]
  4171c9:	sbb    DWORD PTR [ecx*4-0x36daad9b],0xffffffbd
  4171d1:	and    eax,0x2ab63833
  4171d6:	dec    edx
  4171d7:	cld    
  4171d8:	adc    dh,ch
  4171da:	inc    edx
  4171db:	rcl    DWORD PTR [edi+ecx*2],1
  4171de:	pusha  
  4171df:	mov    dh,0x44
  4171e1:	jecxz  0x417256
  4171e3:	mov    edi,DWORD PTR [eax-0x5c84bbb4]
  4171e9:	xchg   edx,eax
  4171ea:	lods   eax,DWORD PTR ds:[esi]
  4171eb:	lods   al,BYTE PTR ds:[esi]
  4171ec:	xchg   ebx,eax
  4171ed:	cmp    bl,ah
  4171ef:	stos   DWORD PTR es:[edi],eax
  4171f0:	mov    bh,0x61
  4171f2:	cmp    al,0x80
  4171f4:	add    al,0x8a
  4171f6:	jo     0x417191
  4171f8:	int    0x64
  4171fa:	mov    esp,0x58fa1315
  4171ff:	into   
  417200:	dec    DWORD PTR [ecx+0x3510d288]
  417206:	bound  esp,QWORD PTR [ecx+0x28a1014f]
  41720c:	imul   ebp,DWORD PTR [ecx],0x19ef8d92
  417212:	jno    0x4171e4
  417214:	fisttp WORD PTR [esi+0x2c752ec]
  41721a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41721b:	aas    
  41721c:	cmp    al,0x1c
  41721e:	into   
  41721f:	jmp    0x901f8b80
  417224:	dec    ebp
  417225:	push   ebp
  417226:	fidivr DWORD PTR [esi+0x5e]
  417229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41722a:	lock rol BYTE PTR [eax],cl
  41722d:	js     0x41723a
  41722f:	rcr    DWORD PTR [edx+0x622e008f],0x5b
  417236:	inc    ecx
  417237:	retf   
  417238:	or     eax,0x99e265ef
  41723d:	adc    eax,0x6db5d14d
  417242:	retf   0x1e92
  417245:	add    DWORD PTR [edx-0xe],edi
  417248:	sbb    al,BYTE PTR [esi]
  41724a:	in     al,dx
  41724b:	xchg   edi,eax
  41724c:	pop    edx
  41724d:	push   eax
  41724e:	fdivrp st(7),st
  417250:	dec    esp
  417251:	jmp    0x8fdfc0d2
  417256:	pop    ds
  417257:	jnp    0x4172bb
  417259:	out    0x35,eax
  41725b:	inc    ecx
  41725c:	xor    esi,esi
  41725e:	add    ch,dh
  417260:	scas   al,BYTE PTR es:[edi]
  417261:	in     al,dx
  417262:	call   0xa58c:0xeeedd43b
  417269:	(bad)  
  41726a:	enter  0xd427,0xed
  41726e:	shl    esp,0x63
  417271:	xor    al,0xfc
  417273:	inc    eax
  417274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417275:	xor    dh,bl
  417277:	mov    esp,esi
  417279:	adc    bh,al
  41727b:	(bad)  
  41727d:	aad    0x14
  41727f:	pop    ecx
  417280:	ret    
  417281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417282:	sub    al,0xfe
  417284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417285:	daa    
  417286:	fwait
  417287:	shl    DWORD PTR [ebp-0x1f],0x66
  41728b:	imul   ecx,DWORD PTR [esi+0x51],0x1dcbc90b
  417292:	or     al,ch
  417294:	rcl    BYTE PTR [ebx+0x1f],1
  417297:	sbb    al,0x8b
  417299:	jmp    0x98009757
  41729e:	push   esi
  41729f:	xchg   DWORD PTR [ecx],ecx
  4172a1:	pop    edx
  4172a2:	ret    0x7e90
  4172a5:	retf   0xca0a
  4172a8:	and    al,0xeb
  4172aa:	sbb    dh,BYTE PTR [esi-0x66]
  4172ad:	pop    esi
  4172ae:	cs out dx,eax
  4172b0:	ins    BYTE PTR es:[edi],dx
  4172b1:	and    ch,BYTE PTR [esi+0x30]
  4172b4:	popf   
  4172b5:	fst    QWORD PTR [ebx]
  4172b7:	push   esp
  4172b8:	(bad)  
  4172b9:	and    dh,BYTE PTR [ebx]
  4172bb:	and    bh,BYTE PTR [eax-0x69]
  4172be:	or     bl,BYTE PTR [ebx]
  4172c0:	ror    BYTE PTR [ecx+ebp*8-0x6af1c961],cl
  4172c7:	push   edi
  4172c8:	adc    eax,0xca83f9df
  4172cd:	enter  0x811c,0xed
  4172d1:	test   al,0xbd
  4172d3:	add    eax,0x938693a0
  4172d8:	pop    ebp
  4172d9:	push   esp
  4172da:	(bad)  
  4172db:	std    
  4172dc:	(bad)  
  4172dd:	jmp    0x4172b2
  4172df:	retf   0x3a0
  4172e2:	mov    esi,ebp
  4172e4:	jmp    0x36b7a6c
  4172e9:	lea    ebp,[edi+0x2021f1ba]
  4172ef:	(bad)  
  4172f0:	xlat   BYTE PTR ds:[ebx]
  4172f1:	push   ebp
  4172f2:	jmp    0xa3cf7cec
  4172f7:	inc    ebx
  4172f8:	pushf  
  4172f9:	push   ds
  4172fa:	je     0x417327
  4172fc:	fs pop ebx
  4172fe:	jmp    0x417306
  417300:	cmp    DWORD PTR ds:0xe7ddc138,0x4d
  417307:	enter  0xbf36,0x26
  41730b:	mov    ds:0x6bc94c79,al
  417310:	imul   DWORD PTR [esp+ebx*2+0x54]
  417314:	push   eax
  417315:	mov    esi,0xea01d03b
  41731a:	mov    eax,0x955cb39f
  41731f:	loopne 0x417378
  417321:	mov    DWORD PTR [edx-0x15],esp
  417324:	enter  0x5076,0x69
  417328:	fistp  DWORD PTR [esi+0x32bc2ff4]
  41732e:	sbb    edi,DWORD PTR [ebp+0x65]
  417331:	mov    DWORD PTR [edx-0x633c80be],edx
  417337:	lds    eax,FWORD PTR [ebp+ecx*1-0x4a20e277]
  41733e:	test   DWORD PTR [edx-0xb],esi
  417341:	sub    BYTE PTR [edx+0x13],0x9b
  417345:	push   edi
  417346:	in     eax,0xf0
  417348:	mov    ecx,0xfe941009
  41734d:	mov    dl,0xe
  41734f:	out    0x2f,eax
  417351:	(bad)  
  417352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417353:	imul   ebp,DWORD PTR [edi-0x5f],0x1bf8a6ca
  41735a:	jno    0x417311
  41735c:	fidiv  WORD PTR [ebx-0x1bf44876]
  417362:	cmp    DWORD PTR [eax],esi
  417364:	add    esp,DWORD PTR [eax]
  417366:	les    ebx,FWORD PTR [ebp-0x71]
  417369:	int    0x5e
  41736b:	ffreep st(7)
  41736d:	and    BYTE PTR ds:0x4e3911a3,dh
  417373:	call   0x88a4:0x7b9b30de
  41737a:	nop
  41737b:	(bad)  
  41737d:	xor    ebp,DWORD PTR [esi+0x7c]
  417380:	mov    eax,0xfa01b46b
  417385:	std    
  417386:	jecxz  0x417349
  417388:	in     al,0xe1
  41738a:	pop    es
  41738b:	fisub  DWORD PTR [eax+0x6]
  41738e:	out    dx,al
  41738f:	or     BYTE PTR ds:[edx+edi*1-0x5691239a],bl
  417397:	mov    al,ch
  417399:	sbb    DWORD PTR [esi],0x71fac9b3
  41739f:	jbe    0x4173b3
  4173a1:	jae    0x4173bf
  4173a3:	xor    eax,0x6751a1fc
  4173a8:	(bad)  
  4173a9:	sar    BYTE PTR [ecx-0x3bf076e0],1
  4173af:	xor    BYTE PTR [ebx-0x62],0x86
  4173b3:	push   edi
  4173b4:	xor    eax,0xda4718d9
  4173b9:	ins    DWORD PTR es:[edi],dx
  4173ba:	dec    esp
  4173bb:	cmp    eax,0xd481c8ff
  4173c0:	mov    edi,0x996b747
  4173c5:	mov    ds:0x631ee48b,al
  4173ca:	in     eax,dx
  4173cb:	adc    eax,esp
  4173cd:	icebp  
  4173ce:	add    BYTE PTR [ecx+0x2acde004],ah
  4173d4:	mov    al,0xa0
  4173d6:	add    al,0x92
  4173d8:	jl     0x4173db
  4173da:	mov    ah,BYTE PTR [ebx-0x629e178a]
  4173e0:	aad    0xe4
  4173e2:	adc    eax,0x8016e051
  4173e7:	sbb    bh,BYTE PTR [esp+ecx*4+0x56]
  4173eb:	adc    al,0x6d
  4173ed:	repnz mov dl,0x51
  4173f0:	imul   BYTE PTR [eax+0x5402ee61]
  4173f6:	out    dx,eax
  4173f7:	cmp    DWORD PTR [eax],edi
  4173f9:	xor    ecx,esp
  4173fb:	stos   DWORD PTR es:[edi],eax
  4173fc:	jge    0x417385
  4173fe:	je     0x4173c6
  417400:	add    al,0xf9
  417402:	cmp    BYTE PTR [edx],cl
  417404:	call   0x88ad68d0
  417409:	pop    ebx
  41740a:	outs   dx,BYTE PTR ds:[esi]
  41740b:	fcom   DWORD PTR [esi]
  41740d:	ja     0x41740f
  41740f:	and    esp,esp
  417411:	loop   0x417441
  417413:	and    eax,0x77d49b1d
  417418:	pop    ebx
  417419:	popf   
  41741a:	inc    BYTE PTR [esi-0x5e]
  41741d:	ss aad 0x95
  417420:	stos   BYTE PTR es:[edi],al
  417421:	scas   al,BYTE PTR es:[edi]
  417422:	je     0x4173ab
  417424:	fidiv  DWORD PTR [edi]
  417426:	mov    esi,0x32257920
  41742b:	adc    eax,0x2388e88
  417430:	shl    cl,0x7a
  417433:	mov    ch,dl
  417435:	sub    edx,ecx
  417437:	inc    esp
  417438:	cmp    eax,DWORD PTR [ebp-0x5f]
  41743b:	retf   
  41743c:	pusha  
  41743d:	jecxz  0x4174ad
  41743f:	mov    ds:0x40be6da,eax
  417444:	push   esi
  417445:	xchg   edi,eax
  417446:	leave  
  417447:	jae    0x4173e4
  417449:	and    al,0xe7
  41744b:	add    esi,DWORD PTR [edx]
  41744d:	mov    BYTE PTR [ebx+0x5f324ae1],al
  417453:	test   eax,0x77d76a72
  417458:	pop    edx
  417459:	sub    eax,0x7d8881f4
  41745e:	out    dx,al
  41745f:	(bad)  
  417460:	jns    0x4174d4
  417462:	xchg   edi,eax
  417463:	mov    WORD PTR [ebx-0x12],es
  417466:	sbb    dh,BYTE PTR [esi+esi*8+0x1732b96f]
  41746d:	fidiv  DWORD PTR [ecx+ebx*1]
  417470:	(bad)  
  417471:	cmp    ebp,DWORD PTR [eax]
  417473:	lods   al,BYTE PTR ds:[esi]
  417474:	sbb    ch,BYTE PTR [esi]
  417476:	xchg   esi,eax
  417477:	push   ecx
  417478:	dec    eax
  417479:	outs   dx,BYTE PTR ds:[esi]
  41747a:	mov    DWORD PTR [edi+ebp*2-0x20],ebx
  41747e:	mov    dl,0x43
  417480:	xor    ebx,esp
  417482:	(bad)  
  417483:	cli    
  417484:	push   ss
  417485:	fist   WORD PTR [esi+0x13925265]
  41748b:	jnp    0x41741b
  41748d:	aad    0xeb
  41748f:	jns    0x417434
  417491:	xchg   DWORD PTR [eax+0x5f2ced81],ebx
  417497:	es push ecx
  417499:	pop    edx
  41749a:	and    dh,BYTE PTR [ebp-0x957d33d]
  4174a0:	xchg   edx,eax
  4174a1:	or     eax,0xacbe4ee4
  4174a6:	jmp    0x41742b
  4174a8:	push   esp
  4174a9:	push   ebp
  4174aa:	mov    esi,0xdaf5c3fc
  4174af:	rol    DWORD PTR [ebp+edx*4-0x18e4fbeb],0xe0
  4174b7:	jo     0x417517
  4174b9:	dec    esp
  4174ba:	(bad)  
  4174bb:	shr    DWORD PTR [ebp-0x39],cl
  4174be:	loope  0x41753d
  4174c0:	push   eax
  4174c1:	push   ecx
  4174c2:	lods   al,BYTE PTR ds:[esi]
  4174c3:	inc    esi
  4174c4:	xchg   ebx,eax
  4174c5:	inc    ebx
  4174c6:	mov    ebx,0x2f67748f
  4174cb:	lahf   
  4174cc:	xor    eax,0xaabe83e
  4174d1:	xchg   edx,eax
  4174d2:	jge    0x41745d
  4174d4:	inc    ecx
  4174d5:	push   cs
  4174d6:	mov    edi,0x5f1f271c
  4174db:	sub    al,0x5c
  4174dd:	cmp    cl,BYTE PTR [edi+0x4c]
  4174e0:	mov    ah,0xec
  4174e2:	rcl    BYTE PTR [ecx+ebp*8-0x125192c9],0x35
  4174ea:	test   al,0x81
  4174ec:	mov    dl,0xc
  4174ee:	jo     0x41750b
  4174f0:	jecxz  0x417571
  4174f2:	push   ecx
  4174f3:	mov    ebx,0x84f8f390
  4174f8:	rcl    BYTE PTR [ecx-0x146f2c47],0x39
  4174ff:	add    al,0x6
  417501:	add    BYTE PTR [eax-0x3],al
  417504:	rcl    ebp,cl
  417506:	(bad)  
  417507:	or     cl,BYTE PTR [eax+ebp*2+0x53937eb8]
  41750e:	enter  0xe603,0xe
  417512:	dec    ebx
  417513:	mov    dh,0xa5
  417515:	push   ebx
  417516:	scas   al,BYTE PTR es:[edi]
  417517:	add    BYTE PTR [ebx+ecx*4+0x4a],ah
  41751b:	jecxz  0x417592
  41751d:	out    dx,eax
  41751e:	inc    esi
  41751f:	adc    DWORD PTR [ebp+0x7490d339],eax
  417525:	je     0x4174a9
  417527:	mov    BYTE PTR [edi],al
  417529:	mov    ds:0x3b914f2f,eax
  41752e:	sub    BYTE PTR ds:0xdd697c40,bl
  417534:	cdq    
  417535:	cmp    edx,DWORD PTR [edx-0x59]
  417538:	adc    cl,bl
  41753a:	cmp    DWORD PTR [ebp+0x55],edx
  41753d:	sar    DWORD PTR [ebx+0x4f],0xd8
  417541:	es jns 0x417511
  417544:	cmp    al,0x4d
  417546:	iret   
  417547:	int    0x1c
  417549:	push   cs
  41754a:	push   esi
  41754b:	mov    esp,0xa5164e86
  417550:	add    BYTE PTR [eax+0x63a60998],dh
  417556:	jecxz  0x417575
  417558:	push   ebp
  417559:	cdq    
  41755a:	sub    BYTE PTR [esi-0x7779726b],bl
  417560:	mov    DWORD PTR [ecx+edi*4-0x528f4b00],edi
  417567:	fstp   DWORD PTR [ebp-0x6ec76cef]
  41756d:	(bad)
  417570:	and    DWORD PTR [ecx],ebx
  417572:	sahf   
  417573:	aad    0x69
  417575:	xchg   edi,eax
  417576:	pushf  
  417577:	fistp  WORD PTR [esi]
  417579:	mov    ebp,0x3e922746
  41757e:	aaa    
  41757f:	cdq    
  417580:	jmp    0x417595
  417582:	mov    ds:0x8f231ef4,al
  417587:	sti    
  417588:	push   es
  417589:	aam    0x7e
  41758b:	out    dx,eax
  41758c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41758d:	lods   al,BYTE PTR ds:[esi]
  41758e:	mov    bh,0x14
  417590:	cmp    ch,BYTE PTR [eax+0x7d8435c6]
  417596:	cs cmp ebx,eax
  417599:	pushf  
  41759a:	mov    ds:0xfd4e2b07,al
  41759f:	mov    cl,0x3f
  4175a1:	mov    edx,0x7741d9a6
  4175a6:	mov    edi,0xd2a00aba
  4175ab:	aam    0xa7
  4175ad:	dec    eax
  4175ae:	or     dl,BYTE PTR [ebx+eax*1-0x79]
  4175b2:	shl    dl,cl
  4175b4:	add    edx,DWORD PTR [edi]
  4175b6:	adc    ebx,DWORD PTR [edx+0x7af47d52]
  4175bc:	das    
  4175bd:	jecxz  0x417632
  4175bf:	pop    ecx
  4175c0:	push   ebp
  4175c1:	pop    esi
  4175c2:	fsubr  QWORD PTR [edi+0x4d]
  4175c5:	xor    dl,BYTE PTR [esi-0x4162e08a]
  4175cb:	ror    bh,0x51
  4175ce:	je     0x417604
  4175d0:	push   esi
  4175d1:	leave  
  4175d2:	adc    DWORD PTR ss:[eax],ebx
  4175d5:	push   0x569b37d1
  4175da:	aad    0x86
  4175dc:	loope  0x417583
  4175de:	std    
  4175df:	das    
  4175e0:	pusha  
  4175e1:	inc    eax
  4175e2:	scas   eax,DWORD PTR es:[edi]
  4175e3:	push   0xf1d2c1ae
  4175e8:	out    dx,al
  4175e9:	cld    
  4175ea:	fs add al,0xc7
  4175ed:	or     ax,0x9924
  4175f1:	pop    edi
  4175f2:	loop   0x4175c7
  4175f4:	xchg   edx,eax
  4175f5:	dec    esi
  4175f6:	out    0xfa,al
  4175f8:	pop    ecx
  4175f9:	or     BYTE PTR [ecx-0x24db98b7],ah
  4175ff:	sbb    edi,DWORD PTR [esi+0x64]
  417602:	fld    QWORD PTR [ebx+0x60]
  417605:	jae    0x4175a6
  417607:	adc    esp,DWORD PTR [ebx+eiz*2+0x194cf723]
  41760e:	cmp    ebx,DWORD PTR [edx+0x6857f2a9]
  417614:	pop    edx
  417615:	in     al,dx
  417616:	mov    dl,0x3a
  417618:	mov    ebp,0x753f88b
  41761d:	test   BYTE PTR [esi+0x58],al
  417620:	xlat   BYTE PTR ds:[ebx]
  417621:	sbb    BYTE PTR [ebp-0x52362540],al
  417627:	mov    esp,0x6b90fca3
  41762c:	mov    ebx,0x5aefbc88
  417631:	cmp    ebp,DWORD PTR [edi]
  417633:	adc    ecx,esp
  417635:	xor    DWORD PTR [edi],ecx
  417637:	pop    esi
  417639:	push   ss
  41763a:	xor    BYTE PTR [eax+0x17dad707],0xc2
  417641:	lea    ebp,[ecx-0x49ddcc07]
  417647:	inc    ecx
  417648:	xchg   ecx,eax
  417649:	out    dx,eax
  41764a:	fcomp  DWORD PTR [edi+eax*4]
  41764d:	xor    al,0xc3
  41764f:	mov    ebp,0x57782017
  417654:	ins    DWORD PTR es:[edi],dx
  417655:	cmp    ah,0x6c
  417658:	dec    ecx
  417659:	retf   0x2870
  41765c:	imul   esi,ebx,0x4d659f9
  417662:	jecxz  0x4176bb
  417664:	pusha  
  417665:	ja     0x4176e6
  417667:	outs   dx,DWORD PTR ds:[esi]
  417668:	lock mov eax,0x203097a2
  41766e:	mov    bl,0xa3
  417670:	mov    eax,ds:0xdcd53bad
  417675:	icebp  
  417676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417677:	pop    ebx
  417678:	out    0x1a,eax
  41767a:	cdq    
  41767b:	mov    esi,0xd2b62d9
  417680:	jae    0x4176b7
  417682:	fstp   QWORD PTR [edi]
  417684:	mov    bh,BYTE PTR ds:0xe4500b76
  41768a:	pushf  
  41768b:	or     al,0x7e
  41768d:	enter  0x3abd,0x7
  417691:	scas   eax,DWORD PTR es:[edi]
  417692:	and    dh,0xd9
  417695:	adc    al,0xf6
  417697:	addr16 inc ecx
  417699:	fmulp  st(0),st
  41769b:	xchg   DWORD PTR [edi+ebp*1-0x4e],edi
  41769f:	ins    BYTE PTR es:[edi],dx
  4176a0:	fnstsw ax
  4176a2:	sbb    ecx,DWORD PTR [ecx+0x2c]
  4176a5:	xor    BYTE PTR [eax],0x26
  4176a8:	aam    0x18
  4176aa:	imul   ebx,DWORD PTR [edi+ebp*2-0x7be540ef],0xf78c3d40
  4176b5:	adc    al,0x6f
  4176b7:	ins    DWORD PTR es:[edi],dx
  4176b8:	or     BYTE PTR [ecx-0x66be2bc2],0xc6
  4176bf:	iret   
  4176c0:	sahf   
  4176c1:	pop    ebx
  4176c2:	repz daa 
  4176c4:	mov    WORD PTR [ebx+ecx*4-0x51cf19b7],ds
  4176cb:	repz out 0xbf,al
  4176ce:	aam    0xe7
  4176d0:	or     bh,dl
  4176d2:	adc    ah,BYTE PTR [ecx]
  4176d4:	adc    al,0xd8
  4176d6:	or     DWORD PTR [ecx+0x5b3d8d96],esi
  4176dc:	sar    esp,cl
  4176de:	xchg   ebx,eax
  4176df:	xchg   edi,eax
  4176e0:	jo     0x417751
  4176e2:	or     bh,BYTE PTR [ecx+0x19]
  4176e5:	je     0x417685
  4176e7:	(bad)  
  4176e9:	adc    ah,BYTE PTR ds:0x78c368a4
  4176ef:	es mov bl,0x7e
  4176f2:	lods   al,BYTE PTR ds:[esi]
  4176f3:	aam    0x7d
  4176f5:	mov    edx,0x264d4694
  4176fa:	out    dx,eax
  4176fb:	and    eax,edi
  4176fd:	mov    ds:0x77935255,eax
  417702:	mov    bh,0xc3
  417704:	inc    ecx
  417705:	jl     0x417690
  417707:	cmp    eax,0x800b88ae
  41770c:	or     eax,0xa27c5a58
  417711:	jle    0x4176f4
  417713:	and    DWORD PTR [ecx],esi
  417715:	aam    0x80
  417717:	rcl    DWORD PTR [edx+ebp*2-0x56],1
  41771b:	adc    eax,0xc406a0dc
  417720:	mov    ecx,0x8184a697
  417725:	nop
  417726:	adc    al,0xb0
  417728:	call   0xb7eae89e
  41772d:	in     eax,dx
  41772e:	arpl   WORD PTR [esp+eax*8+0x5e1f5f96],di
  417735:	dec    ebx
  417736:	pop    ds
  417737:	pop    ecx
  417738:	pop    edi
  417739:	shl    BYTE PTR ds:0x5bead294,1
  41773f:	loop   0x417799
  417741:	push   edi
  417742:	es push esi
  417744:	sub    al,0xe7
  417746:	fld    DWORD PTR [eax-0x502cb460]
  41774c:	fwait
  41774d:	gs push ecx
  41774f:	dec    edi
  417750:	in     eax,dx
  417751:	push   edx
  417752:	cmp    bh,ch
  417754:	popf   
  417755:	cwde   
  417756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417757:	jg     0x4176e0
  417759:	sub    BYTE PTR [esi],dh
  41775b:	(bad)  
  41775d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41775e:	push   esp
  41775f:	cs fmulp st(6),st
  417762:	adc    bl,dl
  417764:	cmp    bh,ch
  417766:	mov    ah,0xd
  417768:	ret    
  417769:	xchg   ebp,eax
  41776a:	mov    dl,BYTE PTR [ebp-0xb4fc657]
  417770:	das    
  417771:	sub    DWORD PTR [eax-0x3d274e8a],esi
  417777:	cmp    al,0x28
  417779:	pusha  
  41777a:	out    0x86,al
  41777c:	inc    esi
  41777d:	out    dx,al
  41777e:	int    0x43
  417780:	and    eax,0xe895505e
  417785:	repz and ah,BYTE PTR [ebp-0x3a]
  417789:	xchg   BYTE PTR [edi-0x5a],bl
  41778c:	ret    
  41778d:	jmp    0x4177cf
  41778f:	fistp  DWORD PTR [ebp-0x1e]
  417792:	xchg   esp,eax
  417793:	xor    BYTE PTR [ebp-0x65],ah
  417796:	out    0xf7,al
  417798:	shl    DWORD PTR [ebx],0xb2
  41779b:	fs push eax
  41779d:	mov    cl,ah
  41779f:	mov    ecx,0x24f1d9b2
  4177a4:	jns    0x417728
  4177a6:	sbb    bl,BYTE PTR [esi+0x2f6528dd]
  4177ac:	sbb    eax,0xe52e542b
  4177b1:	fnstsw ax
  4177b3:	dec    ebx
  4177b4:	dec    esi
  4177b5:	fnsave [ebx]
  4177b7:	xchg   DWORD PTR [esi+edi*1-0x5b],ecx
  4177bb:	retf   
  4177bc:	cld    
  4177bd:	loopne 0x417827
  4177bf:	retf   0x69e7
  4177c2:	push   ebx
  4177c3:	jmp    FWORD PTR [esi]
  4177c5:	stos   BYTE PTR es:[edi],al
  4177c6:	and    BYTE PTR [ecx-0x22d52694],ch
  4177cc:	mov    bh,0x73
  4177ce:	push   edi
  4177cf:	retf   0x17f4
  4177d2:	arpl   WORD PTR [edx-0x37],bp
  4177d5:	pop    edx
  4177d6:	shr    DWORD PTR [edi-0x26c5de82],cl
  4177dc:	in     al,dx
  4177dd:	push   0xffffffed
  4177df:	push   ebp
  4177e0:	fidivr WORD PTR [ebp+0x50]
  4177e3:	jecxz  0x41781e
  4177e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177e6:	out    0x43,eax
  4177e8:	pop    es
  4177e9:	push   0x52
  4177eb:	adc    eax,DWORD PTR [edi+0x3]
  4177ee:	popa   
  4177ef:	ins    DWORD PTR es:[di],dx
  4177f1:	pop    ebp
  4177f2:	push   0x3c
  4177f4:	in     al,0x7d
  4177f6:	test   eax,0xd16d4aec
  4177fb:	imul   edi,DWORD PTR ds:[edi-0x27002eb1],0xb0fdda65
  417806:	retf   
  417807:	cmp    BYTE PTR [ebx+0x4c2fc5be],dh
  41780d:	adc    BYTE PTR ds:0x5e743d9a,cl
  417813:	mov    ecx,0x4249fcf8
  417818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417819:	ins    DWORD PTR es:[edi],dx
  41781a:	mov    eax,0x4e49bfc4
  41781f:	out    dx,al
  417820:	cmp    al,0x18
  417822:	and    DWORD PTR [edi+0x6f],ecx
  417825:	aam    0x72
  417827:	pop    edi
  417828:	mov    al,ds:0xec8dd43b
  41782d:	xchg   ebp,eax
  41782e:	jb     0x417859
  417830:	jle    0x417800
  417832:	jno    0x417859
  417834:	clc    
  417835:	lds    edx,FWORD PTR [ebx+0x2]
  417838:	and    BYTE PTR ds:0x17b4d21c,dl
  41783e:	sbb    BYTE PTR [esi+0x77],bl
  417841:	test   al,0x6f
  417843:	frstor [eax+0x5f296da6]
  417849:	int    0xdb
  41784b:	xor    eax,0x498faf44
  417850:	(bad)  
  417852:	sbb    al,al
  417854:	cwde   
  417855:	(bad)  
  417856:	jp     0x417893
  417858:	gs call 0xad78170a
  41785e:	sar    DWORD PTR [edi],1
  417860:	inc    esi
  417861:	push   esi
  417862:	hlt    
  417863:	test   al,0x3f
  417865:	rol    BYTE PTR es:[ebp+0x41],cl
  417869:	aaa    
  41786a:	scas   eax,DWORD PTR es:[edi]
  41786b:	mov    WORD PTR [ebx+0x8],es
  41786e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41786f:	test   al,0x68
  417871:	xchg   BYTE PTR [ecx-0x80],ah
  417874:	aas    
  417875:	call   0xe7132e76
  41787a:	sub    eax,0xe660b0ed
  41787f:	loope  0x41783b
  417881:	adc    cl,BYTE PTR [edx]
  417883:	push   esi
  417884:	add    bl,bh
  417886:	retf   0x55c1
  417889:	add    BYTE PTR [esi],ch
  41788b:	and    ch,BYTE PTR [edx+0x3c5af63c]
  417891:	cmp    BYTE PTR [ebx],ah
  417893:	outs   dx,BYTE PTR ds:[esi]
  417894:	test   BYTE PTR [edx+0x4dc18db5],dh
  41789a:	sahf   
  41789b:	pop    ebx
  41789c:	jle    0x417896
  41789e:	push   0x7a
  4178a0:	cwde   
  4178a1:	mov    al,0xc2
  4178a3:	xor    cl,BYTE PTR [ebp+0x659d3618]
  4178a9:	fwait
  4178aa:	dec    esp
  4178ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178ac:	sar    BYTE PTR [esi+esi*1-0x5833d597],1
  4178b3:	loopne 0x41792f
  4178b5:	add    BYTE PTR [ebx-0x7600670c],bl
  4178bb:	test   BYTE PTR [edi+0x57],ch
  4178be:	(bad)  
  4178c0:	push   esi
  4178c1:	test   DWORD PTR [edx+ebx*2+0x6229855e],0x512c693c
  4178cc:	xchg   ecx,eax
  4178cd:	fs aad 0x6f
  4178d0:	jecxz  0x4178ea
  4178d2:	xchg   edi,eax
  4178d3:	mov    ch,0xbc
  4178d5:	push   ebp
  4178d6:	mov    edi,0x8356ef76
  4178db:	fsubr  QWORD PTR [ebx]
  4178dd:	imul   ebx,ecx,0x3d4e6934
  4178e3:	push   0xe9e2fe90
  4178e8:	ins    DWORD PTR es:[edi],dx
  4178e9:	mov    esi,0x8f826e80
  4178ee:	cmp    ecx,DWORD PTR [ebx-0x48]
  4178f1:	clc    
  4178f2:	jp     0x4178c8
  4178f4:	jno    0x41789c
  4178f6:	dec    esp
  4178f7:	push   ecx
  4178f8:	arpl   di,di
  4178fa:	mov    dl,0x93
  4178fc:	and    eax,0x5fd552ca
  417901:	adc    BYTE PTR [ebp+0x3e96ff7c],cl
  417907:	sub    eax,0x6cde044c
  41790c:	mov    cl,0x4e
  41790e:	mov    eax,ds:0x93a5888f
  417913:	jl     0x417950
  417915:	pop    ss
  417916:	pop    edi
  417917:	cmp    al,0x2e
  417919:	push   edi
  41791a:	cmp    DWORD PTR [ebp-0x5b],eax
  41791d:	mov    esi,0xe2444524
  417922:	pop    es
  417923:	pop    edx
  417924:	push   ds
  417925:	pop    esp
  417926:	sub    BYTE PTR [esi+0x5c],cl
  417929:	popa   
  41792a:	adc    al,0x7a
  41792c:	fadd   QWORD PTR [eax+0x25]
  41792f:	or     bl,BYTE PTR [eax-0x13]
  417932:	xchg   edi,eax
  417933:	dec    edi
  417934:	jne    0x417921
  417936:	mov    eax,ds:0x380ef855
  41793b:	xchg   esi,eax
  41793c:	jns    0x417960
  41793e:	push   ss
  41793f:	jl     0x41797b
  417941:	(bad)  
  417942:	adc    eax,0xd22c607a
  417947:	sub    bl,bl
  417949:	xor    DWORD PTR [ecx+edi*4+0x542b0cce],eax
  417950:	jae    0x41797f
  417952:	mov    ah,0x9
  417954:	inc    ecx
  417955:	pop    esp
  417956:	jmp    0x4178f7
  417958:	daa    
  417959:	(bad)  
  41795a:	retf   0x92c4
  41795d:	sti    
  41795e:	jge    0x41790e
  417960:	xor    al,0x43
  417962:	adc    DWORD PTR [ebp+0x3ee8280e],edx
  417968:	popa   
  417969:	sbb    al,0x1b
  41796b:	sahf   
  41796c:	dec    esp
  41796d:	cmc    
  41796e:	xlat   BYTE PTR ds:[ebx]
  41796f:	mov    ecx,0x9d879b37
  417974:	jb     0x4179c4
  417976:	mov    dh,0x48
  417978:	ss pop edi
  41797a:	bound  edi,QWORD PTR [ecx-0x6432a0a1]
  417980:	repnz das 
  417982:	aaa    
  417983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417984:	jns    0x417a03
  417986:	pop    ebx
  417987:	imul   esp,DWORD PTR [edx],0x669828f6
  41798d:	aam    0xe5
  41798f:	mov    bl,0xd1
  417991:	in     eax,dx
  417992:	add    DWORD PTR [ebx+ebx*1+0x33],ecx
  417996:	adc    al,0x7f
  417998:	scas   eax,DWORD PTR es:[edi]
  417999:	es jl  0x41799a
  41799c:	add    bl,BYTE PTR [eax]
  41799e:	sar    BYTE PTR [ebx],cl
  4179a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179a1:	stos   BYTE PTR es:[edi],al
  4179a2:	test   al,0xd6
  4179a4:	xchg   ebx,eax
  4179a5:	cmp    eax,0xc9eaca4a
  4179aa:	adc    edx,DWORD PTR [edi+0x33]
  4179ad:	(bad)  
  4179ae:	out    0x7f,al
  4179b0:	(bad)  
  4179b1:	jae    0x4179c5
  4179b3:	xchg   ecx,eax
  4179b4:	xchg   edx,eax
  4179b5:	test   al,0x1e
  4179b7:	push   ss
  4179b8:	popa   
  4179b9:	or     ah,BYTE PTR [ebp+0xf12d4bc]
  4179bf:	loop   0x417962
  4179c1:	xchg   esp,eax
  4179c2:	xchg   ebx,eax
  4179c3:	fsub   QWORD PTR [esi]
  4179c5:	jb     0x417978
  4179c7:	sbb    DWORD PTR [esi-0x73],0xc067f870
  4179ce:	leave  
  4179cf:	lods   eax,DWORD PTR ds:[esi]
  4179d0:	sbb    al,BYTE PTR [esi+0x7c]
  4179d3:	pop    edi
  4179d4:	aaa    
  4179d5:	(bad)  
  4179d6:	jne    0x417a48
  4179d8:	adc    ah,al
  4179da:	jmp    0x86853789
  4179df:	lock hlt 
  4179e1:	mov    DWORD PTR [ecx-0x7a],edx
  4179e4:	dec    esp
  4179e5:	mul    bl
  4179e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179e8:	std    
  4179e9:	mov    ds:0x32986342,al
  4179ee:	add    dl,BYTE PTR [edx+0x5a000b33]
  4179f4:	jmp    0x417994
  4179f6:	dec    esp
  4179f7:	das    
  4179f8:	(bad)
  4179fb:	mov    dh,0xfe
  4179fd:	test   al,0xc0
  4179ff:	cmp    ch,BYTE PTR [ecx-0x54bd7192]
  417a05:	test   BYTE PTR [ecx+0x8],cl
  417a08:	test   BYTE PTR [edi],al
  417a0a:	cdq    
  417a0b:	aad    0x72
  417a0d:	add    BYTE PTR [esi-0x354d3156],bl
  417a13:	ret    0x19bc
  417a16:	cmc    
  417a17:	shr    ebp,cl
  417a19:	je     0x4179e6
  417a1b:	inc    eax
  417a1c:	add    al,0xa8
  417a1e:	inc    edi
  417a1f:	jmp    0x6c28:0x1be3befb
  417a26:	out    dx,eax
  417a27:	lods   eax,DWORD PTR ds:[esi]
  417a28:	mov    eax,ds:0x354f9f2f
  417a2d:	inc    edx
  417a2e:	lea    esp,[ecx-0x5c]
  417a31:	ins    BYTE PTR es:[edi],dx
  417a32:	ins    BYTE PTR es:[edi],dx
  417a33:	jno    0x417aa1
  417a35:	add    DWORD PTR [ebx],ebx
  417a37:	jns    0x417a9d
  417a39:	sti    
  417a3a:	pop    edx
  417a3b:	jl     0x417a46
  417a3d:	push   ebx
  417a3e:	push   ss
  417a3f:	cs js  0x417a86
  417a42:	bound  esi,QWORD PTR [eax-0x7ffb85b]
  417a48:	hlt    
  417a49:	jns    0x4179ea
  417a4b:	scas   al,BYTE PTR es:[edi]
  417a4c:	test   BYTE PTR [eax-0x66a6a497],ch
  417a52:	inc    esi
  417a53:	jg     0x417a3f
  417a55:	dec    ebp
  417a56:	adc    edi,DWORD PTR [ebp+edx*4+0x19]
  417a5a:	and    ecx,0x1cc08098
  417a60:	push   es
  417a61:	xor    DWORD PTR ds:0xe02effb,esi
  417a67:	int    0xe9
  417a69:	test   eax,0x77d0a521
  417a6e:	jb     0x417a21
  417a70:	inc    esp
  417a71:	rcl    BYTE PTR [edx],1
  417a73:	sbb    al,0xfb
  417a75:	out    0x4a,eax
  417a77:	(bad)  
  417a78:	jnp    0x417a5d
  417a7a:	imul   edi,DWORD PTR cs:[ebp-0x29],0x1b4e80e8
  417a82:	rcl    dh,cl
  417a84:	pop    ds
  417a85:	repnz ficomp WORD PTR [ebp-0xea9ff16]
  417a8c:	pop    esi
  417a8d:	mov    esi,0x2b20cb3f
  417a92:	aaa    
  417a93:	pop    ebp
  417a94:	fistp  DWORD PTR [edi+ebp*2+0x5069faaa]
  417a9b:	pop    eax
  417a9c:	adc    edi,ecx
  417a9e:	outs   dx,BYTE PTR ds:[esi]
  417a9f:	ret    0x396f
  417aa2:	fisttp QWORD PTR [ebx]
  417aa4:	xchg   esp,eax
  417aa5:	(bad)  
  417aa6:	leave  
  417aa7:	rcl    BYTE PTR [edi+edi*8],cl
  417aaa:	retf   
  417aab:	mov    edx,0x98adc41d
  417ab0:	mov    edi,0x1e580768
  417ab5:	arpl   WORD PTR [edx],bx
  417ab7:	loope  0x417a67
  417ab9:	cmp    al,0x9
  417abb:	sahf   
  417abc:	dec    esi
  417abd:	fnstcw WORD PTR [esi+0x37]
  417ac0:	pop    eax
  417ac1:	sub    ch,BYTE PTR [edi+0x3bcfe0c4]
  417ac7:	in     al,dx
  417ac8:	jg     0x417a4f
  417aca:	cmc    
  417acb:	add    dh,bh
  417acd:	jnp    0x417aa9
  417acf:	jp     0x417a5f
  417ad1:	scas   al,BYTE PTR es:[edi]
  417ad2:	add    DWORD PTR [ecx-0x57],esp
  417ad5:	outs   dx,DWORD PTR ds:[esi]
  417ad6:	scas   al,BYTE PTR es:[edi]
  417ad7:	xor    eax,0xf09a08b1
  417adc:	cli    
  417add:	stc    
  417ade:	test   al,0xb1
  417ae0:	dec    edi
  417ae1:	test   edi,0x60b7bce9
  417ae7:	test   al,0x80
  417ae9:	mov    gs:0xdb504e5,eax
  417aef:	inc    eax
  417af0:	test   eax,0x46c3d4d6
  417af5:	cmp    al,0x6b
  417af7:	pop    ss
  417af8:	mov    ebp,0x4792c239
  417afd:	push   ds
  417afe:	jl     0x417aa1
  417b00:	or     al,0xe3
  417b02:	das    
  417b03:	stc    
  417b04:	inc    edx
  417b05:	out    dx,eax
  417b06:	lds    ecx,FWORD PTR [edx*1+0x54a64362]
  417b0d:	fs push ecx
  417b0f:	sub    al,0x94
  417b11:	dec    DWORD PTR [esi+esi*8+0x23256b8a]
  417b18:	dec    eax
  417b19:	or     ebx,esi
  417b1b:	mov    edx,0xb7f08817
  417b20:	in     al,dx
  417b21:	add    al,0xd4
  417b23:	mov    dh,0x9a
  417b25:	imul   ebx,DWORD PTR [ebx],0x38128179
  417b2b:	das    
  417b2c:	and    al,0xa8
  417b2e:	and    cl,BYTE PTR [edi]
  417b30:	jmp    0x6f0fc536
  417b35:	xor    DWORD PTR [ecx+0x4d],esp
  417b38:	(bad)  
  417b3a:	add    dh,al
  417b3c:	pop    ebx
  417b3d:	iret   
  417b3e:	cmp    al,0x99
  417b40:	mov    ebp,0x5f7eeaa6
  417b45:	mov    al,0xfe
  417b47:	out    0x4f,al
  417b49:	loopne 0x417ba0
  417b4b:	inc    eax
  417b4c:	arpl   ax,sp
  417b4e:	or     eax,0x708c3c08
  417b53:	push   ss
  417b54:	repnz in eax,0xe0
  417b57:	add    BYTE PTR [edi-0x17],dl
  417b5a:	mov    WORD PTR [ebx+0x300815e0],?
  417b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b61:	int3   
  417b62:	dec    ebp
  417b63:	scas   eax,DWORD PTR es:[edi]
  417b64:	dec    edx
  417b65:	popw   ds
  417b67:	sahf   
  417b68:	aas    
  417b69:	retf   0x1e1c
  417b6c:	loop   0x417ba4
  417b6e:	aas    
  417b6f:	rol    DWORD PTR [ebx],1
  417b71:	packsswb mm4,QWORD PTR [ebx+esi*1+0x3b0f967]
  417b79:	(bad)
  417b7e:	std    
  417b7f:	jne    0x417b50
  417b81:	pop    esi
  417b82:	pusha  
  417b83:	jo     0x417b50
  417b85:	test   eax,0x8a52b33d
  417b8a:	loop   0x417b7f
  417b8c:	push   esi
  417b8d:	lods   al,BYTE PTR ds:[esi]
  417b8f:	push   es
  417b90:	(bad)  
  417b91:	mov    ds:0x707fc837,al
  417b96:	and    dh,BYTE PTR [ebp-0x2ea64b9d]
  417b9c:	mov    es,WORD PTR [ebx]
  417b9e:	push   esp
  417b9f:	pop    ds
  417ba0:	mov    dh,0x6
  417ba2:	(bad)  
  417ba3:	(bad)  
  417ba4:	xor    edx,esi
  417ba6:	mov    DWORD PTR [edi-0x17],ebp
  417ba9:	pushf  
  417baa:	jno    0x417b5b
  417bac:	xchg   ebx,eax
  417bad:	aad    0xce
  417baf:	fisttp DWORD PTR [edi]
  417bb1:	fisttp QWORD PTR [eax-0x63]
  417bb4:	fwait
  417bb5:	popa   
  417bb6:	mov    esp,0xd7fe111a
  417bbb:	jmp    0xe74b734d
  417bc0:	xchg   ah,dl
  417bc2:	fcomp  QWORD PTR [edx-0x67]
  417bc5:	mov    edx,0x1b156109
  417bca:	adc    al,0xc5
  417bcc:	inc    edx
  417bcd:	xlat   BYTE PTR ds:[ebx]
  417bce:	cmp    BYTE PTR [esi],ah
  417bd0:	pop    ebx
  417bd1:	test   al,0xab
  417bd3:	sub    eax,0x5bf5bfe8
  417bd8:	ds in  al,0x42
  417bdb:	fld    DWORD PTR [edx+0x33ea064f]
  417be1:	and    ebx,esi
  417be3:	and    esp,DWORD PTR [ebp+0x20c5f0fd]
  417be9:	xlat   BYTE PTR ds:[ebx]
  417bea:	jb     0x417c18
  417bec:	popf   
  417bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bee:	mov    eax,0xcf9a8c6a
  417bf3:	xchg   DWORD PTR [ebp+0x30],eax
  417bf6:	cmp    edx,DWORD PTR [edx+0x58]
  417bf9:	mov    al,0xc7
  417bfb:	adc    BYTE PTR [eax-0x7f],dl
  417bfe:	pop    edi
  417bff:	sbb    eax,DWORD PTR [edx-0x5e]
  417c02:	mov    WORD PTR [esi-0x1a2a5369],?
  417c08:	shl    DWORD PTR [ebx],1
  417c0a:	outs   dx,DWORD PTR ds:[esi]
  417c0b:	jo     0x417c1b
  417c0d:	dec    ecx
  417c0e:	mov    DWORD PTR [edi-0x1d],edx
  417c11:	pop    esp
  417c12:	call   0x1205b4d0
  417c17:	inc    edx
  417c18:	popa   
  417c19:	aam    0x20
  417c1b:	or     BYTE PTR [bp+di],dh
  417c1e:	cs pushf 
  417c20:	adc    cl,bh
  417c22:	fincstp 
  417c24:	loop   0x417c3d
  417c26:	mov    bl,BYTE PTR [esi+0x7e]
  417c29:	jns    0x417bde
  417c2b:	dec    esi
  417c2c:	inc    esi
  417c2d:	ds add edi,ebp
  417c30:	xor    ebp,eax
  417c32:	sbb    ah,BYTE PTR [ecx+0x5d2ad2e1]
  417c38:	xor    ah,BYTE PTR [esi+ecx*2-0x74]
  417c3c:	loop   0x417c4b
  417c3e:	pop    edx
  417c3f:	in     al,dx
  417c40:	xchg   ebx,eax
  417c41:	in     eax,0x4e
  417c43:	dec    eax
  417c44:	rcr    BYTE PTR [edx],cl
  417c46:	aad    0x1d
  417c48:	push   edx
  417c49:	test   DWORD PTR [esi],edi
  417c4b:	mov    ebx,0x58fb85bc
  417c50:	add    al,0x87
  417c52:	adc    eax,0x99e69e16
  417c57:	dec    esp
  417c58:	mov    edi,0x2bac6a6f
  417c5d:	adc    eax,0x95620357
  417c62:	dec    esi
  417c63:	mov    BYTE PTR [ebp+0x66af1708],dl
  417c69:	in     al,dx
  417c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c6b:	push   ds
  417c6c:	push   cs
  417c6d:	xor    al,0x46
  417c6f:	mov    esi,0x3b084507
  417c74:	xchg   ebx,eax
  417c75:	addr16 cmp eax,0x99acd8e2
  417c7b:	inc    edx
  417c7c:	in     eax,0xf2
  417c7e:	lahf   
  417c7f:	push   0x52
  417c81:	and    al,0x8e
  417c83:	sbb    al,0x5
  417c85:	inc    ebx
  417c86:	sbb    eax,DWORD PTR [edx]
  417c88:	sub    ebx,DWORD PTR [ebp-0x26f677a0]
  417c8e:	mov    al,0x5b
  417c90:	(bad)  
  417c91:	push   ds
  417c92:	sub    al,BYTE PTR [edi-0x1ff5dfd4]
  417c98:	pop    ecx
  417c99:	jne    0x417ce0
  417c9b:	cwde   
  417c9c:	push   es
  417c9d:	stos   DWORD PTR es:[edi],eax
  417c9e:	push   esp
  417c9f:	jns    0x417c77
  417ca1:	mov    ebx,0x3d08f898
  417ca6:	ficomp DWORD PTR [ecx-0x3c]
  417ca9:	sub    edx,ebx
  417cab:	mov    ch,0x97
  417cad:	ret    0xfbf5
  417cb0:	inc    eax
  417cb1:	dec    edx
  417cb2:	in     eax,0x7a
  417cb4:	retf   0xc5c7
  417cb7:	add    dh,ah
  417cb9:	dec    edx
  417cba:	imul   ebx,DWORD PTR [ebx+0x4d],0xffffffdf
  417cbe:	xchg   ebx,eax
  417cbf:	sbb    BYTE PTR [edx+0xf],0x9a
  417cc3:	rcl    DWORD PTR [edi+0x69560b32],0x56
  417cca:	dec    ecx
  417ccb:	xchg   edx,eax
  417ccc:	xchg   ebx,eax
  417ccd:	inc    ecx
  417cce:	mov    cl,0x6e
  417cd0:	call   0xec55:0x782e8e7d
  417cd7:	mov    bl,0x7d
  417cd9:	ja     0x417d28
  417cdb:	shr    BYTE PTR [eax+0xe],0xcb
  417cdf:	addr16 stc 
  417ce1:	ss hlt 
  417ce3:	pop    es
  417ce4:	imul   esi,ebx,0xba1f1d1a
  417cea:	add    al,0xb3
  417cec:	pop    ss
  417ced:	push   edi
  417cee:	pusha  
  417cef:	mov    ah,0x13
  417cf1:	pop    es
  417cf2:	out    0xd6,eax
  417cf4:	sub    eax,0x751e6101
  417cf9:	or     BYTE PTR [edi],0x88
  417cfc:	push   edx
  417cfd:	iret   
  417cfe:	push   0xc95280a0
  417d03:	xchg   DWORD PTR [ecx],esi
  417d05:	and    eax,0x1e923b2d
  417d0a:	push   eax
  417d0b:	mov    bl,0x9a
  417d0d:	push   ecx
  417d0e:	pushf  
  417d0f:	xor    dh,ah
  417d11:	sbb    cl,bl
  417d13:	pop    edx
  417d14:	ret    
  417d15:	mov    edi,0x813ba710
  417d1a:	lods   eax,DWORD PTR ds:[esi]
  417d1b:	jne    0x417d6d
  417d1d:	or     al,0x4c
  417d1f:	ja     0x417d23
  417d21:	fdiv   st(5),st
  417d23:	(bad)  
  417d24:	xor    DWORD PTR [esi-0x3836344e],ebx
  417d2a:	enter  0x81b,0x33
  417d2e:	pop    esi
  417d2f:	out    0x56,al
  417d31:	je     0x417d05
  417d33:	mov    edi,0xd953338c
  417d38:	aad    0xe7
  417d3a:	xchg   ebx,eax
  417d3b:	test   al,0xcb
  417d3d:	outs   dx,DWORD PTR ds:[esi]
  417d3e:	subps  xmm4,xmm7
  417d41:	hlt    
  417d42:	inc    ebx
  417d43:	fisub  WORD PTR [edx-0x4d6449cd]
  417d49:	clc    
  417d4a:	adc    ah,ch
  417d4c:	neg    BYTE PTR [eax+0x45]
  417d4f:	lods   al,BYTE PTR ds:[esi]
  417d50:	jmp    0x428ee2e7
  417d55:	mov    ebp,0x6c2d424
  417d5a:	xor    eax,0xc7c45fed
  417d5f:	jne    0x417dcd
  417d61:	mov    ch,0x17
  417d63:	dec    sp
  417d65:	fisttp QWORD PTR ds:0xe84162d3
  417d6b:	ins    DWORD PTR es:[edi],dx
  417d6c:	aaa    
  417d6d:	push   cs
  417d6e:	aam    0x7d
  417d70:	inc    ebx
  417d71:	mov    ebx,0x995e3579
  417d76:	mov    eax,DWORD PTR [ecx]
  417d78:	jle    0x417d54
  417d7a:	cs dec ecx
  417d7c:	(bad)  
  417d7d:	mov    edi,0x72f7dde4
  417d82:	jg     0x417dbc
  417d84:	push   es
  417d85:	jo     0x417dda
  417d87:	jne    0x417d37
  417d89:	enter  0x75c3,0x57
  417d8d:	xchg   BYTE PTR [edx-0x7a],dh
  417d90:	cli    
  417d91:	fs add al,0x3e
  417d94:	push   0xd
  417d96:	sub    BYTE PTR [esi-0x51],bl
  417d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d9a:	fld    st(3)
  417d9c:	stos   BYTE PTR es:[edi],al
  417d9d:	retf   
  417d9e:	xlat   BYTE PTR ds:[ebx]
  417d9f:	(bad)  
  417da0:	adc    al,bl
  417da2:	jmp    0x763f494f
  417da7:	dec    ebx
  417da8:	ins    DWORD PTR es:[edi],dx
  417da9:	and    al,0x23
  417dab:	jmp    0x4177:0x69943608
  417db2:	mov    bl,0xc1
  417db4:	call   0x9b84:0xf0cb36bf
  417dbb:	adc    DWORD PTR [edx-0x774c2c53],ecx
  417dc1:	or     eax,edx
  417dc3:	lahf   
  417dc4:	daa    
  417dc5:	mov    dl,0xb2
  417dc7:	sahf   
  417dc8:	js     0x417d8d
  417dca:	mov    al,ds:0xdefcf32d
  417dcf:	sbb    al,0x32
  417dd1:	and    eax,0x33bbdaec
  417dd6:	dec    esp
  417dd7:	pop    ebp
  417dd8:	(bad)  
  417dd9:	popf   
  417dda:	sbb    dl,BYTE PTR [edx+0x75f7794]
  417de0:	mov    esi,DWORD PTR [edi+0x5b]
  417de3:	cmp    esp,edi
  417de5:	sub    cl,BYTE PTR [edx+esi*4-0x5a]
  417de9:	inc    ebx
  417dea:	mov    ds:0x743bf833,eax
  417def:	std    
  417df0:	shr    BYTE PTR [edx+0x7],cl
  417df3:	or     DWORD PTR [edx],ecx
  417df5:	sub    eax,0x158ca6e2
  417dfa:	sub    bh,bl
  417dfc:	mov    cl,0x6d
  417dfe:	jl     0x417ddc
  417e00:	cmp    al,0x7a
  417e02:	mov    edx,0x25d32c6a
  417e07:	or     DWORD PTR [eax-0x645e945b],esi
  417e0d:	test   cl,bl
  417e0f:	dec    ecx
  417e10:	(bad)  
  417e11:	cmp    eax,0xb8a28636
  417e16:	out    0xa2,al
  417e18:	(bad)  
  417e19:	xchg   ecx,eax
  417e1a:	or     al,bl
  417e1c:	or     eax,0xed521802
  417e21:	iret   
  417e22:	pop    ebp
  417e23:	dec    esp
  417e24:	cmp    eax,ebp
  417e26:	js     0x417e17
  417e28:	stc    
  417e29:	sbb    DWORD PTR [edi+0x420e9d6b],esp
  417e2f:	js     0x417e2e
  417e31:	mov    DWORD PTR [ecx+0x64e5b134],eax
  417e37:	xlat   BYTE PTR ds:[ebx]
  417e38:	or     edi,ebx
  417e3a:	mov    ?,WORD PTR [ebx+0x27]
  417e3d:	or     eax,0xd0063119
  417e42:	(bad)  
  417e43:	inc    ebp
  417e44:	call   0x31e4a575
  417e49:	repz cmp cl,BYTE PTR [ecx+0x3a663bbe]
  417e50:	aad    0xb2
  417e52:	xlat   BYTE PTR ds:[ebx]
  417e53:	jmp    0x417e26
  417e55:	mov    dl,al
  417e57:	sub    al,0x89
  417e59:	pop    ds
  417e5a:	retf   0xce7e
  417e5d:	je     0x417e5a
  417e5f:	push   eax
  417e60:	xor    ebp,DWORD PTR [esp+ebp*2+0x5e68e525]
  417e67:	ds nop
  417e69:	mov    ebx,0x284f8521
  417e6e:	add    DWORD PTR gs:[edx],esp
  417e71:	leave  
  417e72:	test   eax,0x543f394a
  417e77:	(bad)  
  417e78:	xchg   esp,eax
  417e79:	jb     0x417e94
  417e7b:	and    DWORD PTR ds:0xe06cee83,esp
  417e81:	icebp  
  417e82:	and    al,0x67
  417e84:	das    
  417e85:	adc    al,0xe1
  417e87:	pop    ss
  417e88:	iret   
  417e89:	sub    eax,0x9ff9d12c
  417e8e:	hlt    
  417e8f:	xchg   edi,eax
  417e90:	push   ebx
  417e91:	call   0xfcdf8764
  417e96:	cdq    
  417e97:	stc    
  417e98:	push   0x67b2a5f5
  417e9d:	or     DWORD PTR [ecx+0x51727b34],0x59
  417ea4:	mov    eax,ds:0x8e07d807
  417ea9:	mov    ah,0x24
  417eab:	jae    0x417ef5
  417ead:	pop    esp
  417eae:	sub    bh,dh
  417eb0:	sbb    eax,DWORD PTR [ecx+0x3a4a2043]
  417eb6:	stos   BYTE PTR es:[edi],al
  417eb7:	into   
  417eb8:	stos   BYTE PTR es:[edi],al
  417eb9:	mov    cl,ch
  417ebb:	(bad)  
  417ebc:	adc    DWORD PTR [esi+0x17],0xffffffed
  417ec0:	mov    ah,0x47
  417ec2:	pop    eax
  417ec3:	xchg   ecx,eax
  417ec4:	dec    ebx
  417ec5:	jnp    0x417ea2
  417ec7:	repz mov ebp,0x2b420d3d
  417ece:	jecxz  0x417e9d
  417ed0:	dec    edx
  417ed1:	mov    ecx,DWORD PTR [ecx]
  417ed3:	mov    ds:0x17bd6b0f,eax
  417ed8:	mov    WORD PTR [edx+0x1f430bf9],cs
  417ede:	gs fmulp st(2),st
  417ee1:	xor    DWORD PTR [ebp+edx*1+0x82e43e7],0xffffffc1
  417ee9:	sbb    bh,BYTE PTR [eax+eax*1-0x64]
  417eed:	sub    eax,0xe743bc9d
  417ef2:	adc    BYTE PTR [ebp+esi*4-0x2b3f8b1],cl
  417ef9:	or     DWORD PTR [ecx+0x2a2a94c8],esi
  417eff:	jl     0x417e86
  417f01:	(bad)
  417f04:	mov    ch,0x9b
  417f06:	loopne 0x417f4c
  417f08:	aam    0x7c
  417f0a:	pop    ebx
  417f0b:	push   ebx
  417f0c:	mov    ebp,0xec7b7f31
  417f11:	push   0x66083677
  417f16:	sbb    BYTE PTR [ecx-0x24],cl
  417f19:	loop   0x417ea1
  417f1b:	in     al,0x5b
  417f1d:	mov    ecx,0x684cb59e
  417f22:	add    ebp,eax
  417f24:	shr    BYTE PTR [eax+0x10],0x11
  417f28:	in     al,dx
  417f29:	xor    ebx,DWORD PTR [ecx]
  417f2b:	pop    esi
  417f2c:	lods   al,BYTE PTR ds:[esi]
  417f2d:	xor    BYTE PTR [eax-0x6b],cl
  417f30:	enter  0x7d7d,0xe3
  417f34:	and    al,0x7
  417f36:	mov    ebp,0x146f9cf9
  417f3b:	mov    WORD PTR [esi-0x1f],fs
  417f3e:	je     0x417f28
  417f40:	add    dh,bl
  417f42:	pop    ebp
  417f43:	scas   al,BYTE PTR es:[edi]
  417f44:	nop
  417f45:	les    edi,FWORD PTR [esi-0x28]
  417f48:	inc    esp
  417f49:	add    eax,0xa255179c
  417f4e:	sahf   
  417f4f:	aam    0x9a
  417f51:	inc    eax
  417f52:	icebp  
  417f53:	rcr    BYTE PTR [edi-0x3b],cl
  417f56:	pop    esi
  417f57:	repz cmp edi,DWORD PTR ss:[ebx-0x67]
  417f5c:	adc    esp,0xfffffff5
  417f5f:	adc    DWORD PTR ds:0x51f76deb,0x77
  417f66:	outs   dx,BYTE PTR ds:[esi]
  417f67:	push   ebp
  417f68:	cmp    eax,0xf8a1013d
  417f6d:	jmp    0x3c7:0x88886c99
  417f74:	dec    edi
  417f75:	aaa    
  417f76:	cwde   
  417f77:	inc    eax
  417f78:	loope  0x417f2d
  417f7a:	shl    ecx,1
  417f7c:	add    ah,0x5a
  417f7f:	pop    eax
  417f80:	jne    0x417f5a
  417f82:	ja     0x417f70
  417f84:	dec    esp
  417f85:	out    0x1a,al
  417f87:	dec    ecx
  417f88:	dec    esp
  417f89:	jl     0x417f51
  417f8b:	push   esp
  417f8c:	retf   0xbca1
  417f8f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  417f91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f92:	stc    
  417f93:	or     BYTE PTR [edi],dl
  417f95:	stos   DWORD PTR es:[edi],eax
  417f96:	push   esp
  417f97:	aaa    
  417f98:	sub    ebp,DWORD PTR [eax-0x19]
  417f9b:	xchg   esp,eax
  417f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f9d:	aam    0x80
  417f9f:	inc    ebx
  417fa0:	mov    ecx,ds
  417fa2:	xor    DWORD PTR [edx+esi*1+0x18],esp
  417fa6:	gs nop
  417fa8:	mov    ebx,0x4d992d44
  417fad:	test   BYTE PTR [ecx],0x71
  417fb0:	jns    0x417fc8
  417fb2:	mov    ch,0x46
  417fb4:	jno    0x417ff7
  417fb6:	fisubr DWORD PTR [eax]
  417fb8:	test   DWORD PTR ds:0xd1d430de,ebp
  417fbe:	fdivr  QWORD PTR [eax+ebx*1+0x49]
  417fc2:	dec    edi
  417fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fc4:	dec    eax
  417fc5:	ret    0xf561
  417fc8:	jg     0x417fd3
  417fca:	lea    esi,[esi+0x6af5e015]
  417fd0:	mov    bl,0xef
  417fd2:	sub    al,0xd
  417fd4:	stc    
  417fd5:	add    esp,DWORD PTR [ebx+esi*8-0x7ff294d7]
  417fdc:	retf   
  417fdd:	mov    edi,0x5033daf2
  417fe2:	jge    0x417f91
  417fe4:	inc    ebp
  417fe5:	inc    edi
  417fe6:	jmp    DWORD PTR [edx+ebp*8]
  417fe9:	pop    es
  417fea:	inc    DWORD PTR [ecx+eax*1]
  417fed:	mov    ds:0x23e3f792,al
  417ff2:	imul   esi,DWORD PTR [ecx+0x3c],0x30
  417ff6:	(bad)  
  417ff7:	in     al,dx
  417ff8:	outs   dx,BYTE PTR fs:[esi]
  417ffa:	pop    ds
  417ffb:	or     esp,edx
  417ffd:	scas   eax,DWORD PTR es:[edi]
  417ffe:	out    dx,al
  417fff:	xchg   ecx,eax
  418000:	dec    ecx
  418001:	aaa    
  418002:	clc    
  418003:	and    BYTE PTR [ebp+edx*2+0x611a4326],ch
  41800a:	and    eax,0xc7f698e4
  41800f:	repz adc al,0xb9
  418012:	into   
  418013:	add    eax,0x5804111c
  418018:	jns    0x41805d
  41801a:	lock lods al,BYTE PTR ds:[esi]
  41801c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41801d:	out    dx,eax
  41801e:	inc    eax
  41801f:	mov    ebx,0x84523634
  418024:	cmc    
  418025:	inc    eax
  418026:	(bad)  
  418027:	or     eax,0x6ba26549
  41802c:	mov    edx,0x66c31c33
  418031:	add    BYTE PTR [ebp+0x158d4e5e],dl
  418037:	adc    ah,bl
  418039:	push   ds
  41803a:	mov    bh,ah
  41803c:	in     al,0x7e
  41803e:	sbb    eax,0xb00f1883
  418043:	nop
  418044:	sbb    DWORD PTR [ecx-0x1f371bc7],eax
  41804a:	mov    ah,0xa8
  41804c:	int3   
  41804d:	in     eax,0xdd
  41804f:	jecxz  0x418008
  418051:	push   esi
  418052:	sub    eax,0x14890ef1
  418057:	retf   0x37c8
  41805a:	xchg   ebx,eax
  41805b:	in     eax,0xb8
  41805d:	(bad)  
  41805e:	int3   
  41805f:	call   0xc7a2d79
  418064:	mov    esi,fs
  418066:	ins    DWORD PTR es:[edi],dx
  418067:	sub    eax,DWORD PTR [esi-0x24e520ea]
  41806d:	fdiv   st(6),st
  41806f:	out    0x2d,al
  418071:	in     eax,0x99
  418073:	jae    0x4180f0
  418075:	call   0x85da:0xe1dc8e5
  41807c:	fcmovbe st,st(4)
  41807e:	int3   
  41807f:	fcomp  DWORD PTR [ecx-0x35721446]
  418085:	xchg   edx,eax
  418086:	repz mov ebx,0xc016af41
  41808c:	jp     0x41808c
  41808e:	iret   
  41808f:	stos   BYTE PTR es:[edi],al
  418090:	inc    eax
  418091:	ret    
  418092:	imul   esp,DWORD PTR [ebx+0x1c],0xb9e46c20
  418099:	aas    
  41809a:	icebp  
  41809b:	fwait
  41809c:	aam    0x9d
  41809e:	clc    
  41809f:	rol    eax,1
  4180a1:	jno    0x4180bb
  4180a3:	std    
  4180a4:	mov    al,0x22
  4180a6:	nop
  4180a7:	add    DWORD PTR [ecx+0x49],edx
  4180aa:	repnz push 0x9c359b10
  4180b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180b1:	inc    eax
  4180b2:	pop    edi
  4180b3:	repz xor bl,dh
  4180b6:	add    DWORD PTR [ebx+ecx*4-0x1b],0xffffffff
  4180bb:	cmp    ebx,eax
  4180bd:	jbe    0x418134
  4180bf:	rcl    BYTE PTR ds:0x2a08b6f7,cl
  4180c5:	(bad)  
  4180c6:	sahf   
  4180c7:	adc    bh,bh
  4180c9:	dec    eax
  4180ca:	lock xrelease and BYTE PTR [edi],0x46
  4180cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180d0:	push   0xffffffbf
  4180d2:	pop    ecx
  4180d3:	sub    eax,0xf36bc9cf
  4180d8:	mov    eax,ds:0xa9702406
  4180dd:	jg     0x4180fc
  4180df:	push   cs
  4180e0:	and    BYTE PTR [esi],bh
  4180e2:	cmp    BYTE PTR [ecx],ch
  4180e4:	mov    edx,0x49f5d559
  4180e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180ea:	(bad)  
  4180eb:	dec    edi
  4180ec:	daa    
  4180ed:	and    edx,DWORD PTR [ebp+0x65e40b79]
  4180f3:	push   es
  4180f4:	xchg   edi,eax
  4180f5:	dec    esi
  4180f6:	cmp    DWORD PTR [edx],ebx
  4180f8:	pusha  
  4180f9:	xchg   esp,eax
  4180fa:	imul   esp,DWORD PTR [esi-0x20],0x6976c3c7
  418101:	div    DWORD PTR [esi+0x654ceeb5]
  418107:	ss pop eax
  418109:	sub    al,0xf0
  41810b:	xchg   DWORD PTR [edi+0x70bacf94],ecx
  418111:	test   DWORD PTR [esi],0x4845270c
  418117:	push   0x639ea2a
  41811c:	gs popf 
  41811e:	mov    bh,0x21
  418120:	cmp    DWORD PTR [esp+edi*8],0xbebe817d
  418127:	jg     0x418185
  418129:	push   edi
  41812a:	daa    
  41812b:	outs   dx,BYTE PTR ds:[esi]
  41812c:	jg     0x4180e3
  41812e:	call   0xe9f37c4d
  418133:	lock cmc 
  418135:	xchg   esi,eax
  418136:	jge    0x4180d4
  418138:	dec    eax
  418139:	je     0x41818e
  41813b:	mov    eax,ds:0xc7b7e279
  418140:	mov    ecx,0x9709b11d
  418145:	imul   esi,DWORD PTR [ebx],0x2fc157
  41814b:	cmp    ebx,ebp
  41814d:	fs aas 
  41814f:	dec    esi
  418150:	and    BYTE PTR [edx-0x63],ah
  418153:	loope  0x4181b1
  418155:	outs   dx,BYTE PTR ds:[esi]
  418156:	cli    
  418157:	add    esp,DWORD PTR [ebx+0x5d0233af]
  41815d:	mov    bl,0x1
  41815f:	inc    ebp
  418160:	and    ecx,DWORD PTR [edx-0x30]
  418163:	lods   al,BYTE PTR ds:[esi]
  418164:	test   BYTE PTR [ebp+0x134c9dd3],al
  41816a:	cmp    dh,dl
  41816c:	jbe    0x4180fe
  41816e:	(bad)  
  41816f:	aam    0xf8
  418171:	je     0x4181b9
  418173:	icebp  
  418174:	clc    
  418175:	outs   dx,BYTE PTR ds:[esi]
  418176:	add    cl,BYTE PTR [edi]
  418178:	(bad)  
  418179:	lods   al,BYTE PTR ds:[esi]
  41817a:	jnp    0x4181f6
  41817c:	mov    ebx,ds
  41817e:	(bad)  
  41817f:	ss test al,0xf6
  418182:	xchg   edx,eax
  418183:	pop    eax
  418184:	shl    ebx,cl
  418186:	(bad)  
  418187:	xor    al,0xe4
  418189:	sbb    DWORD PTR [ebp+0x4609e295],ebx
  41818f:	bound  ecx,QWORD PTR [edi]
  418191:	shr    DWORD PTR [edx],0xf3
  418194:	pop    ss
  418195:	push   edi
  418196:	cdq    
  418197:	and    al,0xe7
  418199:	(bad)  
  41819a:	mov    al,0x36
  41819c:	add    dl,al
  41819e:	sahf   
  41819f:	adc    esi,0xb65c55ab
  4181a5:	jg     0x4181c2
  4181a7:	dec    ecx
  4181a8:	jmp    0x25de:0x15a737d
  4181af:	or     BYTE PTR [ebp-0x3a],al
  4181b2:	mov    edi,0x47bb0b37
  4181b7:	inc    ecx
  4181b8:	mov    ecx,0xe1d82b31
  4181bd:	xor    cl,ch
  4181bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181c0:	bswap  ebp
  4181c2:	xor    BYTE PTR ds:0xf28452cb,cl
  4181c8:	jle    0x418181
  4181ca:	test   eax,0x996f5a48
  4181cf:	sub    al,0x33
  4181d1:	icebp  
  4181d2:	dec    esi
  4181d3:	fstp   TBYTE PTR [ecx]
  4181d5:	clc    
  4181d6:	daa    
  4181d7:	xor    eax,0x4725c361
  4181dc:	test   eax,0xf4d3c5e6
  4181e1:	popa   
  4181e2:	and    eax,0xc188cc1d
  4181e7:	jae    0x418265
  4181e9:	jmp    0x4b51933a
  4181ee:	mov    al,bl
  4181f0:	test   bh,ah
  4181f2:	xor    cl,dl
  4181f4:	push   ebx
  4181f5:	mov    BYTE PTR [edx+0x53],bl
  4181f8:	hlt    
  4181f9:	adc    BYTE PTR [eax-0xc051d4],bh
  4181ff:	dec    edx
  418200:	inc    ebp
  418201:	ins    DWORD PTR es:[edi],dx
  418202:	add    edx,ecx
  418204:	mov    edx,0xa696b552
  418209:	and    ch,BYTE PTR [edx]
  41820b:	sub    esi,DWORD PTR [ecx+edi*8+0x3792e712]
  418212:	lods   al,BYTE PTR ds:[esi]
  418213:	popa   
  418214:	jl     0x4181d1
  418216:	or     al,0xdb
  418218:	pop    edx
  418219:	inc    esp
  41821a:	pop    ss
  41821b:	push   ds
  41821c:	lods   al,BYTE PTR ds:[esi]
  41821d:	imul   esi,DWORD PTR [ecx+0x16cb34d7],0x8476239a
  418227:	add    eax,0xc15d6e40
  41822c:	or     BYTE PTR [eax-0x71],al
  41822f:	sub    eax,0x40622cbc
  418234:	mov    bh,0xbc
  418236:	mov    cl,0x3a
  418238:	push   ecx
  418239:	jg     0x418227
  41823b:	or     al,0x4b
  41823d:	cmc    
  41823e:	cmp    edi,ebx
  418240:	sbb    DWORD PTR [edx+0x2c],ebp
  418243:	mov    eax,ds:0xa6af5177
  418248:	xor    DWORD PTR [eax],ebx
  41824a:	repz shr esp,0xd3
  41824e:	call   0x90476c4b
  418253:	in     al,0xaf
  418255:	adc    BYTE PTR [edx-0x65],ch
  418258:	and    eax,0x3a709c94
  41825d:	adc    al,0x99
  41825f:	clc    
  418260:	mov    edx,0xfe1b5d36
  418265:	pop    ebp
  418266:	inc    ebx
  418267:	fld    QWORD PTR [edi-0x6f9e6c36]
  41826d:	xchg   edx,eax
  41826e:	(bad)  
  41826f:	xchg   esp,eax
  418270:	ins    DWORD PTR es:[edi],dx
  418271:	jp     0x41827a
  418273:	xchg   BYTE PTR [esp+edx*4+0x65],al
  418277:	outs   dx,BYTE PTR ds:[esi]
  418278:	cwde   
  418279:	rcr    BYTE PTR [edi*8-0x7fe5e0f2],1
  418280:	ins    DWORD PTR es:[edi],dx
  418281:	fsubr  st,st(3)
  418283:	sbb    DWORD PTR [ebp-0x5f],ecx
  418286:	mov    ebx,0x13d6ab19
  41828b:	das    
  41828c:	pop    eax
  41828d:	lds    esi,FWORD PTR [edi]
  41828f:	inc    eax
  418290:	outs   dx,DWORD PTR ds:[esi]
  418291:	and    dl,cl
  418293:	jge    0x4182bf
  418295:	test   ch,0x5e
  418298:	popf   
  418299:	push   0xade6c092
  41829e:	fwait
  41829f:	outs   dx,DWORD PTR ds:[esi]
  4182a0:	lods   eax,DWORD PTR ds:[esi]
  4182a1:	sbb    cl,BYTE PTR [ebx]
  4182a3:	jns    0x4182ae
  4182a5:	cs popf 
  4182a7:	int    0xe7
  4182a9:	rcl    DWORD PTR [edi-0x7e],0x8
  4182ad:	jecxz  0x41825b
  4182af:	dec    ebx
  4182b0:	and    DWORD PTR [edi-0x7d],ebx
  4182b3:	jo     0x41825b
  4182b5:	mov    ebx,ebp
  4182b7:	pop    eax
  4182b8:	outs   dx,BYTE PTR ds:[esi]
  4182b9:	xor    al,0x66
  4182bb:	or     eax,0x744f3355
  4182c0:	xchg   ebp,eax
  4182c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182c2:	dec    ebp
  4182c3:	lock ins DWORD PTR es:[edi],dx
  4182c5:	imul   ecx,DWORD PTR es:[edi],0xeb56cf02
  4182cc:	sub    BYTE PTR [ebp-0x4],0x22
  4182d0:	add    edi,DWORD PTR [esi-0x20]
  4182d3:	aaa    
  4182d4:	mov    ?,WORD PTR [ebx]
  4182d6:	pop    ds
  4182d7:	mov    DWORD PTR [esi],ecx
  4182d9:	cwde   
  4182da:	cmp    al,0xca
  4182dc:	sti    
  4182dd:	inc    esp
  4182de:	push   esp
  4182df:	outs   dx,BYTE PTR ds:[esi]
  4182e0:	dec    esi
  4182e1:	aam    0xb8
  4182e3:	fs test edx,ebx
  4182e6:	push   ss
  4182e7:	mov    ebx,0x2578780
  4182ec:	xchg   edx,eax
  4182ed:	rol    BYTE PTR [ecx],1
  4182ef:	(bad)  
  4182f0:	bound  edi,QWORD PTR [ebx]
  4182f2:	jmp    0x418279
  4182f4:	aam    0x3
  4182f6:	inc    ebx
  4182f7:	mov    ebx,0xee13ed09
  4182fc:	scas   eax,DWORD PTR es:[edi]
  4182fd:	jb     0x41833c
  4182ff:	sbb    DWORD PTR [ebx+0x48],edx
  418302:	(bad)  
  418304:	fcmovbe st,st(6)
  418306:	xchg   esi,eax
  418307:	mov    al,ds:0xb26e2e6a
  41830c:	icebp  
  41830d:	add    edx,0xde0ede00
  418313:	bound  ebp,QWORD PTR [eax+0x73ebc93]
  418319:	jl     0x418333
  41831b:	adc    BYTE PTR [ebx],dl
  41831d:	sub    edx,DWORD PTR [ebx+0xba95637]
  418323:	ret    0x7190
  418326:	fdivr  st(5),st
  418328:	loop   0x418308
  41832a:	loope  0x4182cc
  41832c:	jnp    0x41833b
  41832e:	fimul  DWORD PTR [ebx+eax*1]
  418331:	dec    ebp
  418332:	dec    ebp
  418333:	clc    
  418334:	sahf   
  418335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418336:	pop    esi
  418337:	adc    ebp,DWORD PTR [ebp-0x71d7813d]
  41833d:	fld    DWORD PTR [ebx]
  41833f:	test   al,0xa9
  418341:	mov    al,0x49
  418343:	dec    ebp
  418344:	xchg   edx,eax
  418345:	scas   eax,DWORD PTR es:[edi]
  418346:	in     eax,0xdc
  418348:	push   ecx
  418349:	mov    al,ds:0xd1f91a57
  41834e:	stc    
  41834f:	xlat   BYTE PTR ds:[ebx]
  418350:	rcr    ebp,1
  418352:	retf   
  418353:	sbb    eax,0x1cd3fc17
  418358:	addr16 dec ecx
  41835a:	inc    eax
  41835b:	(bad)  
  41835c:	cdq    
  41835d:	jae    0x4183d2
  41835f:	mov    ah,0x42
  418361:	push   edx
  418362:	fmul   DWORD PTR [edx]
  418364:	gs mov dl,0x69
  418367:	loope  0x4183d9
  418369:	xor    ah,cl
  41836b:	in     al,dx
  41836c:	sti    
  41836d:	mov    ds:0x1f316819,al
  418372:	dec    esp
  418373:	pop    edi
  418374:	cmp    ah,BYTE PTR [eax-0x45]
  418377:	sahf   
  418378:	test   eax,0x311b975e
  41837d:	sub    dh,BYTE PTR [ecx+0x5731898d]
  418383:	rol    DWORD PTR [eax+0x4],cl
  418386:	sub    BYTE PTR [ebx+edi*4-0x71],dl
  41838a:	imul   ebp,DWORD PTR [ecx+0x21],0x3573a071
  418391:	data16 add al,0x7d
  418394:	push   ecx
  418395:	test   BYTE PTR [eax+eax*1],0xfc
  418399:	or     dl,BYTE PTR [edi+edi*1+0x2c]
  41839d:	pushf  
  41839e:	cs push cs
  4183a0:	(bad)  
  4183a1:	mov    edx,0xd02479a1
  4183a6:	mov    ebx,0xb8e9213a
  4183ab:	push   0x5f648411
  4183b0:	xchg   bh,ah
  4183b2:	mov    dh,0xf1
  4183b4:	test   DWORD PTR ds:0x8c885157,edi
  4183ba:	push   edi
  4183bb:	dec    ebp
  4183bc:	or     BYTE PTR [ebx],cl
  4183be:	pop    esp
  4183bf:	xor    BYTE PTR [ebp+ebx*1+0x5e9d8706],cl
  4183c6:	fcmovne st,st(7)
  4183c8:	dec    ebx
  4183c9:	in     al,dx
  4183ca:	popf   
  4183cb:	cmp    eax,DWORD PTR [eax]
  4183cd:	sub    DWORD PTR [edi+edi*8+0x77],ebx
  4183d1:	inc    ecx
  4183d2:	or     BYTE PTR [esi],al
  4183d4:	out    dx,al
  4183d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183d6:	cmp    al,0x3a
  4183d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183d9:	push   ecx
  4183da:	sub    edi,DWORD PTR [esi+0x12]
  4183dd:	call   0xf8c82af8
  4183e2:	or     eax,0xd2cafeb8
  4183e7:	test   ch,dl
  4183e9:	je     0x418381
  4183eb:	mov    esp,0x684132b0
  4183f0:	push   edx
  4183f1:	push   edi
  4183f2:	xchg   ebp,eax
  4183f3:	repnz mov ss,WORD PTR [edx-0x387a81f3]
  4183fa:	xchg   edi,eax
  4183fb:	add    BYTE PTR [esi+0x4f7001ff],bl
  418401:	push   ds
  418402:	cwde   
  418403:	and    al,0x91
  418405:	add    al,0x9
  418407:	cmp    al,0x4c
  418409:	pusha  
  41840a:	adc    BYTE PTR [ebx+0xe006ce5],bh
  418410:	das    
  418411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418412:	lds    ecx,FWORD PTR [edx]
  418414:	and    DWORD PTR [ebx],eax
  418416:	mov    dl,0xfe
  418418:	popf   
  418419:	mov    esi,0x466c2f47
  41841e:	mov    cs,WORD PTR ds:0x51446206
  418424:	mov    cl,0xca
  418426:	arpl   WORD PTR [esi],sp
  418428:	fidiv  WORD PTR [ecx-0x67bdfd85]
  41842e:	clc    
  41842f:	mov    BYTE PTR [ecx+0x703085cd],al
  418435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418436:	(bad)  
  418438:	das    
  418439:	jno    0x418456
  41843b:	(bad)  
  41843d:	xor    BYTE PTR [ebx+0x71],0xc3
  418441:	int3   
  418442:	jg     0x4183ee
  418444:	call   0x3cc:0x8788e3b9
  41844b:	push   ebp
  41844c:	cwde   
  41844d:	cwde   
  41844e:	inc    ebp
  41844f:	cmp    ch,BYTE PTR [edi+edx*4+0x6a43b6d9]
  418456:	stc    
  418457:	pop    edi
  418458:	mov    cs,WORD PTR ds:0x8d5fdffb
  41845e:	add    al,0xd9
  418461:	bound  ebp,QWORD PTR [edx]
  418463:	mov    esp,0xf9569157
  418468:	ds pop eax
  41846a:	enter  0xf37f,0x93
  41846e:	xor    al,0x95
  418470:	sub    ah,dh
  418472:	retf   
  418473:	dec    eax
  418474:	mov    esi,0x21804b19
  418479:	dec    ecx
  41847a:	push   eax
  41847b:	mov    eax,0x7927c808
  418480:	add    al,0xd7
  418482:	sub    ah,ah
  418484:	sbb    ch,BYTE PTR [ecx+eiz*2]
  418487:	jmp    0x78ad6d6e
  41848c:	push   ss
  41848d:	push   ebp
  41848e:	popf   
  41848f:	jne    0x418451
  418491:	xor    eax,0x9b588615
  418496:	ins    DWORD PTR es:[edi],dx
  418497:	cmp    DWORD PTR [esi+0x79e1d6e9],edx
  41849d:	jb     0x418425
  41849f:	pushf  
  4184a0:	mov    edi,0xd2a4785f
  4184a5:	jmp    0x5799:0x32017176
  4184ac:	ffree  st(3)
  4184ae:	mov    DWORD PTR [edi-0x2968896c],ecx
  4184b4:	in     al,0x59
  4184b6:	fiadd  DWORD PTR [edx+0x5b]
  4184b9:	test   eax,0x57766db9
  4184be:	les    ebp,FWORD PTR ds:0x550475b2
  4184c4:	pop    ds
  4184c5:	mov    eax,0x3fc360b6
  4184ca:	es pop eax
  4184cc:	pusha  
  4184cd:	hlt    
  4184ce:	xor    bl,bl
  4184d0:	or     DWORD PTR [esi],0x46
  4184d3:	push   ebx
  4184d4:	jmp    FWORD PTR [ebx+0x66]
  4184d7:	pusha  
  4184d8:	lods   eax,DWORD PTR ds:[esi]
  4184d9:	das    
  4184da:	xchg   ecx,eax
  4184db:	outs   dx,BYTE PTR ds:[esi]
  4184dc:	mov    WORD PTR [ecx],fs
  4184de:	dec    eax
  4184df:	ret    0x8bd9
  4184e2:	test   DWORD PTR [edi],ebp
  4184e4:	test   eax,0x5276dfa8
  4184e9:	mov    ecx,0x75be4033
  4184ee:	pop    ds
  4184ef:	inc    ebp
  4184f0:	xchg   esp,eax
  4184f1:	stc    
  4184f2:	lahf   
  4184f3:	mov    WORD PTR [ebp-0x48208306],?
  4184f9:	adc    ebx,edi
  4184fb:	mov    fs,WORD PTR [esp+edx*1-0x2f]
  4184ff:	adc    ch,0x55
  418502:	pop    edx
  418503:	gs sbb al,0xee
  418506:	(bad)  [esi+edx*2]
  418509:	lea    ecx,es:[eax-0x32]
  41850d:	push   edi
  41850e:	lahf   
  41850f:	cmp    eax,0x99ea05a8
  418514:	into   
  418515:	stos   DWORD PTR es:[edi],eax
  418516:	add    al,0xce
  418518:	jnp    0x41854f
  41851a:	sub    al,0x5a
  41851c:	call   0x8b074f30
  418521:	sbb    edi,ebp
  418523:	jge    0x41851b
  418525:	aam    0x3d
  418527:	mov    cl,BYTE PTR [ecx]
  418529:	xor    DWORD PTR [edx],ebp
  41852b:	repnz aas 
  41852d:	fdivr  st(3),st
  41852f:	jne    0x4184c9
  418531:	cmc    
  418532:	loop   0x4184cd
  418534:	jecxz  0x41859a
  418536:	mov    bh,0x82
  418538:	in     al,dx
  418539:	test   BYTE PTR [ecx],ah
  41853b:	jmp    0x766a6281
  418540:	sub    eax,0x68fa6e10
  418545:	or     al,0xdf
  418547:	mov    BYTE PTR [ecx-0x22],bh
  41854a:	adc    eax,0x83ec9b4f
  41854f:	and    dl,BYTE PTR [ebx-0x53]
  418552:	jmp    esi
  418554:	push   0xffffffc4
  418556:	or     DWORD PTR [edx],0xffffffab
  418559:	loopne 0x418555
  41855b:	ret    0x5968
  41855e:	ret    
  41855f:	push   edi
  418560:	and    al,BYTE PTR [ebx-0x2d]
  418563:	outs   dx,DWORD PTR ds:[esi]
  418564:	inc    esi
  418565:	mov    ch,0x74
  418567:	push   0x770061db
  41856c:	pop    ebx
  41856d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41856e:	data16 stc 
  418570:	ss (bad) 
  418572:	adc    DWORD PTR fs:[edi+0x67],edi
  418576:	jmp    0x41853b
  418578:	mov    ch,0xc2
  41857a:	push   es
  41857b:	pop    ebx
  41857c:	out    dx,al
  41857d:	sub    DWORD PTR [edi-0x34946e89],edi
  418583:	and    al,0xd9
  418585:	jl     0x418530
  418587:	jecxz  0x4185e2
  418589:	mov    esi,0xd11a0907
  41858e:	adc    eax,0x9c331041
  418593:	xor    BYTE PTR [ebx+0x2d],dl
  418596:	xor    cl,dl
  418598:	add    BYTE PTR gs:[edi-0x3ec68939],ah
  41859f:	out    0x2e,eax
  4185a1:	jmp    0x53c6b7c
  4185a6:	mov    edi,0x89f2c87
  4185ab:	xchg   ecx,eax
  4185ac:	out    dx,al
  4185ad:	ficomp WORD PTR [edi+0x70]
  4185b0:	add    BYTE PTR [ebp+eiz*1-0x17],ah
  4185b4:	jle    0x418580
  4185b6:	add    eax,DWORD PTR [ecx]
  4185b8:	inc    edi
  4185b9:	cmp    edi,DWORD PTR [edi+edx*8-0x4cd24539]
  4185c0:	call   0x5e5f:0xb1c0e35d
  4185c7:	aas    
  4185c8:	jmp    0x7b56:0x2a84be6f
  4185cf:	test   DWORD PTR [ecx+eiz*2-0xdd35360],eax
  4185d6:	mov    bh,0x83
  4185d8:	push   cs
  4185d9:	sub    al,0x65
  4185db:	or     dl,ch
  4185dd:	adc    eax,0x2030f70b
  4185e2:	loop   0x4185bd
  4185e4:	jmp    0x25821a31
  4185e9:	or     bh,BYTE PTR [ecx]
  4185eb:	push   esi
  4185ec:	push   eax
  4185ed:	inc    esi
  4185ee:	inc    ebp
  4185ef:	pop    ebx
  4185f0:	jmp    0xf075:0xd6eeeb49
  4185f7:	or     al,0xa
  4185f9:	leave  
  4185fa:	imul   ecx,DWORD PTR fs:[eax+ebp*1],0x5824f794
  418602:	mov    ecx,0x4804798b
  418607:	cmp    BYTE PTR [esi+0x11b2ca9e],dh
  41860d:	scas   eax,DWORD PTR es:[edi]
  41860e:	jge    0x41860a
  418610:	adc    eax,0x97f348ac
  418615:	cwde   
  418616:	in     al,dx
  418617:	push   esp
  418618:	jl     0x41862f
  41861a:	sub    edi,DWORD PTR [ebx+0x2fc7f617]
  418620:	xlat   BYTE PTR ds:[ebx]
  418621:	std    
  418622:	mov    eax,0xedf3ab8
  418627:	pop    ebx
  418628:	arpl   sp,di
  41862a:	(bad)  
  41862b:	out    0xaf,al
  41862d:	aad    0xf3
  41862f:	adc    eax,0xa6c7c544
  418634:	xor    BYTE PTR [esi-0x107dab7c],dh
  41863a:	mov    ah,0x41
  41863c:	mov    eax,0x43754af7
  418641:	adc    DWORD PTR [esp+ecx*4],0x424f0e82
  418648:	xchg   edx,eax
  418649:	sub    BYTE PTR [ebx+0x4d8fe8e9],cl
  41864f:	pushf  
  418650:	dec    ebp
  418651:	rcl    DWORD PTR [esi],0x2e
  418654:	xchg   DWORD PTR ds:0x3aaca0d9,ebp
  41865a:	inc    edx
  41865b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41865c:	lods   al,BYTE PTR ds:[esi]
  41865d:	mov    ecx,0xf2333e1f
  418662:	out    dx,eax
  418663:	repnz mov bh,0x2
  418666:	cmp    ch,BYTE PTR [eax-0xf]
  418669:	push   0xffffffad
  41866b:	push   0xdeca3ce4
  418670:	dec    edi
  418671:	leave  
  418672:	int3   
  418673:	sbb    ebx,DWORD PTR [edi-0x5e]
  418676:	inc    ebp
  418677:	add    al,0x7e
  418679:	shl    DWORD PTR [esi+0x12809572],0xce
  418680:	mov    esi,0xda23f845
  418685:	adc    eax,0xfacdffeb
  41868a:	fcomp  QWORD PTR [esi+esi*1]
  41868d:	mov    dh,0x36
  41868f:	mov    dl,bl
  418691:	jg     0x418645
  418693:	call   0x6662a777
  418698:	dec    ebp
  418699:	push   ecx
  41869a:	dec    dx
  41869c:	stc    
  41869d:	dec    ebx
  41869e:	outs   dx,DWORD PTR ds:[esi]
  41869f:	bound  ebp,QWORD PTR [eax]
  4186a1:	xchg   DWORD PTR [edx+0x36],ecx
  4186a4:	ror    ecx,1
  4186a6:	(bad)  
  4186a7:	out    dx,al
  4186a8:	xchg   BYTE PTR [ebx+0x1d],bl
  4186ab:	stc    
  4186ac:	jge    0x41872a
  4186ae:	dec    esi
  4186af:	push   ecx
  4186b0:	push   ebx
  4186b1:	arpl   WORD PTR [ebx],bx
  4186b3:	(bad)  
  4186b4:	scas   al,BYTE PTR es:[edi]
  4186b5:	push   esp
  4186b6:	daa    
  4186b7:	adc    DWORD PTR [edx+0x6adb911d],edi
  4186bd:	(bad)  
  4186be:	dec    ebp
  4186bf:	repz retf 0x1499
  4186c3:	fsub   QWORD PTR [ebx]
  4186c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186c6:	and    eax,0x93b947c8
  4186cb:	fistp  QWORD PTR [edi]
  4186cd:	repnz push cs
  4186cf:	push   eax
  4186d0:	std    
  4186d1:	mov    edx,es
  4186d3:	push   0xffffffbd
  4186d5:	jle    0x418717
  4186d7:	mov    bl,0xe0
  4186d9:	nop
  4186da:	add    DWORD PTR ds:0x17e1792a,eax
  4186e0:	idiv   al
  4186e2:	bound  ebx,QWORD PTR [esi-0x5b]
  4186e5:	pop    ebp
  4186e6:	aad    0x7a
  4186e8:	in     al,dx
  4186e9:	gs pop es
  4186eb:	scas   al,BYTE PTR es:[edi]
  4186ec:	cmp    DWORD PTR [eax],edx
  4186ee:	xor    al,0x70
  4186f0:	add    al,0x78
  4186f2:	bound  ecx,QWORD PTR [ebx+ecx*8-0x778b732b]
  4186f9:	xchg   esp,eax
  4186fa:	std    
  4186fb:	sahf   
  4186fc:	add    esi,ebx
  4186fe:	jle    0x418691
  418700:	dec    eax
  418701:	mov    esp,0x9850c595
  418706:	adc    esi,DWORD PTR [esi-0x496bf6ee]
  41870c:	(bad)  
  41870d:	mov    BYTE PTR [eax-0x18],0x4e
  418711:	aam    0x74
  418713:	aaa    
  418714:	daa    
  418715:	gs xchg ecx,eax
  418717:	mov    BYTE PTR [ebx+0xdb20ac9],dh
  41871d:	xchg   ebp,eax
  41871e:	out    dx,al
  41871f:	das    
  418720:	call   0x755679cd
  418725:	jmp    0xa5855fc8
  41872a:	jmp    0x4187a9
  41872c:	enter  0xe60d,0x16
  418730:	aam    0x56
  418732:	dec    ecx
  418733:	push   ecx
  418734:	stos   BYTE PTR es:[edi],al
  418735:	aas    
  418736:	xor    dl,BYTE PTR [ebx+eiz*1-0x48]
  41873a:	cmp    edx,esp
  41873c:	std    
  41873d:	push   edi
  41873e:	icebp  
  41873f:	loope  0x418739
  418741:	xor    bh,BYTE PTR [edx-0x7f5d981b]
  418747:	jp     0x418775
  418749:	arpl   WORD PTR [eax-0x31],bx
  41874c:	arpl   WORD PTR [ecx+0x16960b65],ax
  418752:	das    
  418753:	sbb    esp,eax
  418755:	ss cs mov cl,bl
  418759:	xor    dl,BYTE PTR [edi+edx*1]
  41875c:	js     0x418704
  41875e:	into   
  41875f:	and    edx,ebx
  418761:	mov    edi,0x407e60fc
  418766:	xchg   esp,eax
  418767:	rcl    BYTE PTR [esi-0x21],0x2e
  41876b:	scas   al,BYTE PTR es:[edi]
  41876c:	add    edi,ebp
  41876e:	pop    esi
  41876f:	jb     0x41873a
  418771:	and    al,0xc0
  418773:	dec    edi
  418774:	xchg   DWORD PTR [edi+0x543e44ee],ebp
  41877a:	mov    dh,0x92
  41877c:	ds push 0xffffffe5
  41877f:	sub    ebp,ebp
  418781:	mov    ch,0x73
  418783:	outs   dx,DWORD PTR ds:[esi]
  418784:	test   eax,0x95c9d25d
  418789:	pushf  
  41878a:	sbb    cl,BYTE PTR [edx]
  41878c:	daa    
  41878d:	ds dec ebp
  41878f:	jl     0x41878f
  418791:	or     esi,DWORD PTR [ebx+0x32]
  418794:	imul   esp,DWORD PTR [edi-0x2b387090],0x65
  41879b:	clc    
  41879c:	idiv   DWORD PTR [edx]
  41879e:	sbb    DWORD PTR [ebp-0x2287b51c],ecx
  4187a4:	jg     0x418756
  4187a6:	das    
  4187a7:	lds    edi,FWORD PTR [esi-0x360a442]
  4187ad:	xchg   edi,eax
  4187ae:	nop
  4187af:	jle    0x418761
  4187b1:	add    DWORD PTR [ecx-0x5],edx
  4187b4:	div    BYTE PTR [ecx+edi*2]
  4187b7:	sahf   
  4187b8:	(bad)  
  4187b9:	enter  0x3e89,0x91
  4187bd:	adc    eax,0xdc64297d
  4187c2:	gs jecxz 0x418826
  4187c5:	out    dx,al
  4187c6:	shl    BYTE PTR [ebx-0x5c],0x5f
  4187ca:	sar    BYTE PTR [esi-0x58],1
  4187cd:	pop    esp
  4187ce:	dec    esp
  4187cf:	pusha  
  4187d0:	add    eax,0x25186ae2
  4187d5:	jo     0x418764
  4187d7:	push   ss
  4187d8:	idiv   BYTE PTR ss:[edx-0x3b5b8c79]
  4187df:	(bad)  
  4187e0:	out    dx,eax
  4187e1:	xchg   esp,eax
  4187e2:	jmp    0x418765
  4187e4:	sub    al,BYTE PTR [edx+0x6d]
  4187e7:	sti    
  4187e8:	cmp    ecx,DWORD PTR [edx+0x455a9cba]
  4187ee:	call   0xb858194
  4187f3:	dec    edi
  4187f4:	cmp    eax,edx
  4187f6:	jb     0x4187e5
  4187f8:	pop    ds
  4187f9:	and    ah,ah
  4187fb:	pop    ebp
  4187fc:	jno    0x4187e8
  4187fe:	or     ecx,DWORD PTR [eax-0x3c1982ea]
  418804:	mov    al,ds:0xcae83521
  418809:	xor    al,0x46
  41880b:	mov    WORD PTR [ebx],es
  41880d:	pop    eax
  41880e:	cmp    BYTE PTR [esp+eiz*2],cl
  418811:	cli    
  418812:	dec    ebp
  418813:	pop    ebp
  418814:	add    eax,0x1ffc06b6
  418819:	or     cl,BYTE PTR [eax]
  41881b:	mov    ch,0x84
  41881d:	mov    ah,0xeb
  41881f:	jg     0x4187df
  418821:	out    dx,eax
  418822:	xchg   ebx,eax
  418823:	and    edi,DWORD PTR [edi-0x6d499601]
  418829:	es push edi
  41882b:	mov    edi,0x98ba3b0a
  418830:	lods   al,BYTE PTR ds:[esi]
  418831:	int3   
  418832:	inc    esp
  418833:	xchg   esi,eax
  418834:	inc    esp
  418835:	cmp    eax,0x8140dad1
  41883a:	jns    0x4187f7
  41883c:	addr16 std 
  41883e:	push   0x5c6257c1
  418843:	repz stc 
  418845:	and    BYTE PTR [edx],dl
  418847:	jmp    0xba6a6bf2
  41884c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41884d:	test   eax,0x67a5ded2
  418852:	jns    0x4188bb
  418854:	mov    esp,0x5f88b83
  418859:	addr16 pop esi
  41885b:	sub    dh,BYTE PTR [ecx-0x14]
  41885e:	and    al,0xa2
  418860:	in     eax,dx
  418861:	jg     0x4187fa
  418863:	sbb    eax,0xe1673611
  418868:	xchg   edi,eax
  418869:	in     eax,dx
  41886a:	xchg   DWORD PTR [ebp-0x1d3d77f0],edx
  418870:	(bad)  
  418872:	sub    al,0xaa
  418874:	mov    al,ah
  418876:	xor    eax,0xd618c518
  41887b:	mov    dh,0xf9
  41887d:	in     eax,0x4c
  41887f:	dec    edx
  418880:	cvtdq2ps xmm2,XMMWORD PTR [esi-0x63426c1e]
  418887:	pop    ds
  418888:	div    edi
  41888a:	ror    eax,cl
  41888c:	in     al,0xee
  41888e:	(bad)  
  41888f:	aaa    
  418890:	pop    ebx
  418891:	mov    dh,0xf6
  418893:	push   ecx
  418894:	jnp    0x41882c
  418896:	mov    esp,0x93203cc0
  41889b:	(bad)  
  41889c:	inc    ecx
  41889d:	mov    ch,BYTE PTR [ebp-0x1f6d0307]
  4188a3:	pop    ecx
  4188a4:	pop    es
  4188a5:	add    al,0xd9
  4188a7:	(bad)  
  4188a8:	loop   0x41890b
  4188aa:	loope  0x41886d
  4188ac:	fsubr  QWORD PTR [ecx]
  4188ae:	(bad)  
  4188af:	sar    BYTE PTR [esi+ebp*4],cl
  4188b2:	lods   eax,DWORD PTR ds:[esi]
  4188b3:	or     al,0x61
  4188b5:	arpl   WORD PTR [ebx+ebx*1+0x49],di
  4188b9:	rol    edx,0x5a
  4188bc:	xor    al,0x21
  4188be:	adc    DWORD PTR fs:[ecx-0x5ccae50],edi
  4188c5:	push   es
  4188c6:	cmp    DWORD PTR [ecx],eax
  4188c8:	cdq    
  4188c9:	hlt    
  4188ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188cb:	ins    DWORD PTR es:[edi],dx
  4188cc:	mov    bh,0x67
  4188ce:	sub    eax,0x7d49f7eb
  4188d3:	mov    ds:0xd3d55885,eax
  4188d8:	out    0x26,al
  4188da:	cmp    eax,0xd6420d37
  4188df:	mov    DWORD PTR [ebx-0x4c],esi
  4188e2:	dec    eax
  4188e3:	ins    BYTE PTR es:[edi],dx
  4188e4:	push   es
  4188e5:	adc    cl,BYTE PTR [ecx-0xd171d8e]
  4188eb:	iret   
  4188ec:	mov    edi,0xa64a6d29
  4188f1:	or     ch,0xec
  4188f4:	fdivr  QWORD PTR [eax-0x6f]
  4188f7:	stc    
  4188f8:	sbb    DWORD PTR [eax-0x79],0x47
  4188fc:	out    0xec,eax
  4188fe:	adc    DWORD PTR [esp+ebx*8-0x60],ecx
  418902:	popa   
  418903:	ins    BYTE PTR es:[edi],dx
  418904:	int    0x37
  418906:	inc    esp
  418907:	shl    DWORD PTR [esi],1
  418909:	jne    0x41891b
  41890b:	(bad)  
  41890c:	stc    
  41890d:	loop   0x418984
  41890f:	push   edx
  418910:	mov    cl,0x22
  418912:	push   es
  418913:	fs (bad) 
  418918:	cmc    
  418919:	inc    ecx
  41891a:	push   esp
  41891b:	inc    esp
  41891c:	aad    0x10
  41891e:	mov    al,0xc8
  418920:	nop
  418921:	shl    BYTE PTR [ebp+0x6c],1
  418924:	in     eax,dx
  418925:	imul   ebp,DWORD PTR [edi+0x79],0x99621150
  41892c:	repnz ss xchg ecx,eax
  41892f:	adc    ecx,DWORD PTR [eax+0x52]
  418932:	jbe    0x4188d9
  418934:	dec    esp
  418935:	or     al,0xf6
  418937:	(bad)  
  418938:	ins    BYTE PTR es:[edi],dx
  418939:	mov    al,0x61
  41893b:	fistp  WORD PTR [ebp-0x41]
  41893e:	mov    WORD PTR [edx+0x63],fs
  418941:	xor    ebx,esp
  418943:	mov    edi,0x2c8557f4
  418948:	in     eax,dx
  418949:	iret   
  41894a:	add    al,0xb7
  41894c:	adc    ah,BYTE PTR [esi-0x71]
  41894f:	and    BYTE PTR [ebx+0x48],dh
  418952:	jbe    0x418918
  418954:	and    DWORD PTR [ebp-0x6171e5ff],eax
  41895a:	adc    BYTE PTR [ecx],cl
  41895c:	mov    al,0xe1
  41895e:	xchg   DWORD PTR [esi-0x5f],esi
  418961:	pop    ds
  418962:	adc    BYTE PTR [ecx+0x2d5eceb3],ah
  418968:	jle    0x41896f
  41896a:	pop    esp
  41896b:	fmul   QWORD PTR [ecx]
  41896d:	pop    esi
  41896e:	or     BYTE PTR [edi+0x39],ch
  418971:	inc    esi
  418972:	in     eax,dx
  418973:	jle    0x41896b
  418975:	fsubr  st(3),st
  418977:	std    
  418978:	push   eax
  418979:	xchg   edi,eax
  41897a:	into   
  41897b:	cmc    
  41897c:	dec    ecx
  41897d:	out    dx,eax
  41897e:	int3   
  41897f:	and    BYTE PTR [edx+0x1b5d667],ah
  418985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418986:	repnz xchg edi,eax
  418988:	and    BYTE PTR [eax],0x15
  41898b:	mov    edi,0xe531b5e3
  418990:	sub    al,0x42
  418992:	into   
  418993:	cmp    bl,BYTE PTR [ecx-0x29]
  418996:	and    BYTE PTR [eax-0x5f],ah
  418999:	jmp    0x41896a
  41899b:	test   DWORD PTR [eax],eax
  41899d:	inc    edi
  41899e:	push   eax
  41899f:	repnz inc esp
  4189a1:	imul   eax,DWORD PTR [esi+0x34],0x2fe1b91
  4189a8:	cwde   
  4189a9:	jno    0x4189da
  4189ab:	xor    al,0x35
  4189ad:	cmp    DWORD PTR fs:0x6051112d,ecx
  4189b4:	iret   
  4189b5:	or     DWORD PTR [ecx-0x51240412],ecx
  4189bb:	and    ch,bl
  4189bd:	and    DWORD PTR [ebx-0x21],ebp
  4189c0:	jo     0x41896c
  4189c2:	out    0x1d,eax
  4189c4:	test   BYTE PTR [ebx-0x41e8532e],bl
  4189ca:	push   es
  4189cb:	outs   dx,BYTE PTR ds:[esi]
  4189cc:	mov    esi,0x8141981b
  4189d1:	dec    edx
  4189d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189d3:	pop    edi
  4189d4:	mov    esi,0x7e63170d
  4189d9:	fadd   st,st(2)
  4189db:	and    eax,0x614514c5
  4189e0:	mov    eax,0x720366d5
  4189e5:	cld    
  4189e6:	call   0xc051:0x819d40f
  4189ed:	inc    eax
  4189ee:	dec    ebp
  4189ef:	and    eax,0xe9923e27
  4189f4:	cmp    BYTE PTR [edi+0x400a3dab],ch
  4189fa:	retf   0x4682
  4189fd:	ss push edi
  4189ff:	test   al,0x8b
  418a01:	je     0x418a36
  418a03:	add    al,0x29
  418a05:	push   edx
  418a06:	push   eax
  418a07:	in     eax,dx
  418a08:	scas   al,BYTE PTR es:[edi]
  418a09:	adc    DWORD PTR [ecx+0x22],esp
  418a0c:	inc    edx
  418a0d:	mov    WORD PTR [esi],ss
  418a0f:	mov    ecx,0x45fee293
  418a14:	js     0x418a7b
  418a16:	loope  0x418a97
  418a18:	jno    0x4189f3
  418a1a:	test   esi,ebp
  418a1c:	pusha  
  418a1d:	jmp    0x9d7b:0x10950a6f
  418a24:	xchg   ebx,eax
  418a25:	sub    cl,ah
  418a27:	popa   
  418a28:	mov    cl,0xbd
  418a2a:	fisubr DWORD PTR [ebx+0x35]
  418a2d:	cmp    DWORD PTR [eax],ebx
  418a2f:	xor    al,0xfd
  418a31:	ffreep st(7)
  418a33:	cmp    DWORD PTR ds:0xd64a3c3a,esp
  418a39:	lods   eax,DWORD PTR ds:[esi]
  418a3a:	outs   dx,BYTE PTR ds:[esi]
  418a3b:	and    BYTE PTR [edx+ecx*4-0x137d40be],cl
  418a42:	test   al,0x2e
  418a44:	mov    esi,0xc52ab098
  418a49:	pushf  
  418a4a:	daa    
  418a4b:	(bad)  
  418a4c:	ss adc eax,0x4c0fe018
  418a52:	repz (bad) 
  418a54:	mov    edi,0xc85e5f3c
  418a59:	or     BYTE PTR [ebx-0x73984f62],dl
  418a5f:	adc    DWORD PTR [edi],ebp
  418a61:	inc    edi
  418a62:	lahf   
  418a63:	jmp    edi
  418a65:	jmp    0xe96c:0x89e8d193
  418a6c:	int    0x70
  418a6e:	mov    WORD PTR [eax+0x5a0f99bf],ds
  418a74:	sub    DWORD PTR [edx-0x76616573],ebx
  418a7a:	sub    DWORD PTR [edx-0x5],edx
  418a7d:	nop
  418a7e:	jmp    0x8ad546b5
  418a83:	leave  
  418a84:	sbb    DWORD PTR [ecx-0x16],ecx
  418a87:	repz push ecx
  418a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a8a:	sub    ebp,DWORD PTR [edx+0x58334200]
  418a90:	sub    DWORD PTR [edi],ebp
  418a92:	outs   dx,DWORD PTR ds:[esi]
  418a93:	dec    eax
  418a94:	dec    ebx
  418a95:	inc    esp
  418a96:	mov    al,ds:0x9ce7a348
  418a9b:	add    BYTE PTR [esi-0x34b99ab6],dl
  418aa1:	(bad)  
  418aa2:	mov    ch,0xd7
  418aa4:	xlat   BYTE PTR ds:[ebx]
  418aa5:	mov    ds:0xf915fc0a,eax
  418aaa:	sub    BYTE PTR [ecx+0x34475db9],cl
  418ab0:	rol    BYTE PTR [ecx-0x4a3374aa],1
  418ab6:	push   esp
  418ab7:	and    eax,0x19e338a6
  418abc:	xor    ecx,DWORD PTR ds:0x21a72ada
  418ac2:	ss mov ecx,0x682fb57a
  418ac8:	push   eax
  418ac9:	jo     0x418a7f
  418acb:	inc    esp
  418acc:	adc    edx,DWORD PTR [eax+0x5c280016]
  418ad2:	imul   ebp,DWORD PTR [esi],0x19530f1b
  418ad8:	cmp    dh,BYTE PTR [ebp+eax*4-0x7d]
  418adc:	(bad)  
  418add:	out    0xc9,eax
  418adf:	ror    DWORD PTR [eax-0xf],cl
  418ae2:	xor    DWORD PTR [ebx+ebx*4],esi
  418ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ae6:	(bad)  
  418ae7:	mov    esp,0x26e7dee4
  418aec:	aaa    
  418aed:	xchg   edx,edx
  418aef:	fcomp  DWORD PTR [esi-0xd]
  418af2:	dec    edx
  418af3:	enter  0x487,0xd0
  418af7:	dec    esi
  418af8:	data16 jb 0x418a91
  418afb:	xchg   esp,eax
  418afc:	dec    esp
  418afd:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aff:	retf   
  418b00:	(bad)  
  418b01:	ins    DWORD PTR es:[edi],dx
  418b02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b03:	scas   al,BYTE PTR es:[edi]
  418b04:	addr16 loop 0x418b6a
  418b07:	sbb    BYTE PTR [ebp+0x13ef77ae],ah
  418b0d:	sub    ch,al
  418b0f:	mov    ds:0xe8c2ce18,al
  418b14:	mov    ah,0xfa
  418b16:	inc    edi
  418b17:	inc    ecx
  418b18:	ret    0x2f7c
  418b1b:	or     al,0x36
  418b1d:	aaa    
  418b1e:	fucomip st,st(7)
  418b20:	xchg   BYTE PTR [esi-0x4d93f2cd],dh
  418b26:	sbb    cl,cl
  418b28:	(bad)  
  418b29:	jmp    FWORD PTR [edx]
  418b2b:	xchg   BYTE PTR [edi],ah
  418b2d:	out    dx,eax
  418b2e:	mov    ds:0xf398fe4e,eax
  418b33:	test   BYTE PTR cs:[edx],dl
  418b36:	pop    eax
  418b37:	jno    0x418b0f
  418b39:	ins    BYTE PTR es:[edi],dx
  418b3a:	ja     0x418afb
  418b3c:	fbstp  TBYTE PTR [eiz*4+0x7f08c810]
  418b43:	mov    cl,0x1e
  418b45:	repz adc eax,0x3f81f602
  418b4b:	sbb    DWORD PTR [edi-0x25c62e76],ebx
  418b51:	sbb    al,0x5c
  418b53:	push   esp
  418b54:	sub    eax,0xd165b64a
  418b59:	jmp    0x7f5a1b82
  418b5e:	inc    edx
  418b5f:	shr    DWORD PTR cs:[edx-0x7a],cl
  418b63:	shl    DWORD PTR [eax],cl
  418b65:	shl    DWORD PTR [ebx],1
  418b67:	call   0xb791a0b1
  418b6c:	xor    eax,0x57a99bd9
  418b71:	into   
  418b72:	fdiv   DWORD PTR [ebx-0x66f40786]
  418b78:	cs test eax,0x632f8b55
  418b7e:	mov    esp,0x19ea3f48
  418b83:	add    bl,0xd4
  418b86:	cli    
  418b87:	push   ds
  418b88:	cmp    al,BYTE PTR [esi+0x9]
  418b8b:	fsub   QWORD PTR [esi+0x1b]
  418b8e:	dec    ebx
  418b8f:	jge    0x418bdf
  418b91:	xor    al,0x4b
  418b93:	ds jge 0x418b49
  418b96:	inc    ebp
  418b97:	jg     0x418bce
  418b99:	add    eax,0x4d6b0665
  418b9e:	sbb    al,0xab
  418ba0:	leave  
  418ba1:	mov    eax,ds:0x20ad102a
  418ba6:	xchg   DWORD PTR [ebx+eiz*2+0x50],ecx
  418baa:	push   es
  418bab:	dec    edi
  418bac:	stos   DWORD PTR es:[edi],eax
  418bad:	imul   ecx,DWORD PTR [edi],0xffffffb0
  418bb0:	lods   al,BYTE PTR ds:[esi]
  418bb1:	push   cs
  418bb2:	push   edx
  418bb3:	sbb    BYTE PTR [eax],dh
  418bb5:	lahf   
  418bb6:	sbb    DWORD PTR [esi],0xb53069c7
  418bbc:	ror    DWORD PTR [ebx-0x32],cl
  418bbf:	or     eax,0xc743a369
  418bc4:	sbb    cl,cl
  418bc6:	(bad)  
  418bc7:	idiv   DWORD PTR [ecx+0x3a1dfa39]
  418bcd:	inc    ecx
  418bce:	sub    bl,dh
  418bd0:	int3   
  418bd1:	jecxz  0x418bd6
  418bd3:	sbb    eax,DWORD PTR [esi-0x44]
  418bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bd7:	scas   al,BYTE PTR es:[edi]
  418bd8:	sub    dl,BYTE PTR [ebx]
  418bda:	push   es
  418bdb:	pop    ebx
  418bdc:	es stos BYTE PTR es:[edi],al
  418bde:	or     eax,0x6b62afe9
  418be3:	push   es
  418be4:	aaa    
  418be5:	mov    edx,DWORD PTR [eax+0x4e]
  418be8:	div    ecx
  418bea:	jle    0x418c53
  418bec:	and    al,0x1c
  418bee:	out    0xb6,al
  418bf0:	mov    bh,0xa5
  418bf2:	jl     0x418c1e
  418bf4:	lock xchg DWORD PTR [ebp+0x66959612],esi
  418bfb:	imul   ebx,DWORD PTR [edi-0x5e],0x7
  418bff:	sahf   
  418c00:	xor    ch,BYTE PTR [ecx]
  418c02:	inc    edx
  418c03:	push   cs
  418c04:	(bad)  
  418c05:	in     al,0x37
  418c07:	(bad)  
  418c09:	scas   eax,DWORD PTR es:[edi]
  418c0a:	mov    bl,0xa5
  418c0c:	arpl   WORD PTR [ebp+0x60],si
  418c0f:	dec    esp
  418c10:	iret   
  418c11:	and    ebx,eax
  418c13:	shl    BYTE PTR ds:0x1db580a5,cl
  418c19:	jbe    0x418c16
  418c1b:	out    0x6b,al
  418c1d:	pop    edx
  418c1e:	mov    bl,0x8f
  418c20:	jbe    0x418ba4
  418c22:	mov    dl,0x66
  418c24:	js     0x418c01
  418c26:	sub    ecx,DWORD PTR [eax-0x51]
  418c29:	in     al,dx
  418c2a:	in     al,dx
  418c2b:	or     eax,ebp
  418c2d:	iret   
  418c2e:	ficomp WORD PTR [esp+edi*4+0xe1cdb14]
  418c35:	pop    ecx
  418c36:	clc    
  418c37:	xchg   edi,eax
  418c38:	xchg   edx,eax
  418c39:	cmp    esi,edx
  418c3b:	test   DWORD PTR [edi-0x1cfe8ae5],edi
  418c41:	in     eax,dx
  418c42:	jge    0x418bd2
  418c44:	adc    BYTE PTR [ebx+edi*1+0x6348eee0],ch
  418c4b:	and    al,0x5d
  418c4d:	add    eax,0xeba209a6
  418c52:	call   0xa60e:0x874d3ffa
  418c59:	arpl   dx,ax
  418c5b:	add    DWORD PTR [ebp+0x61],esp
  418c5e:	sub    BYTE PTR [esi-0x79],dh
  418c61:	or     al,0xc
  418c63:	test   edx,esp
  418c65:	call   0xdd7e:0x7ee38ee1
  418c6c:	sbb    al,0x45
  418c6e:	xchg   ebp,eax
  418c6f:	test   DWORD PTR [ebp+0x5d],ecx
  418c72:	dec    ebp
  418c73:	cdq    
  418c74:	rol    DWORD PTR [edx+0x793837e7],cl
  418c7a:	adc    eax,0xe9f18c9e
  418c7f:	jne    0x418c1d
  418c81:	aad    0x41
  418c83:	test   al,0x3
  418c85:	xchg   ecx,eax
  418c86:	jae    0x418ccc
  418c88:	lods   eax,DWORD PTR ds:[esi]
  418c89:	sub    al,0xa
  418c8b:	jns    0x418ca4
  418c8d:	enter  0x5fa6,0xbe
  418c91:	jb     0x418d01
  418c93:	pop    es
  418c94:	ja     0x418d06
  418c96:	(bad)  
  418c98:	ins    DWORD PTR es:[edi],dx
  418c99:	inc    ebx
  418c9a:	retf   
  418c9b:	sti    
  418c9c:	push   eax
  418c9d:	xor    bl,al
  418c9f:	adc    ebp,DWORD PTR [ebp-0x4821095b]
  418ca5:	or     eax,0x33198d90
  418caa:	fadd   st,st(7)
  418cac:	mov    bl,0xb0
  418cae:	sti    
  418caf:	mov    dh,0x12
  418cb1:	mov    DWORD PTR [ebp-0x3e],0x75fb4df0
  418cb8:	(bad)  
  418cb9:	push   ss
  418cba:	pop    eax
  418cbb:	sub    esp,eax
  418cbd:	int3   
  418cbe:	das    
  418cbf:	lods   eax,DWORD PTR ds:[esi]
  418cc0:	mov    bl,0xdd
  418cc2:	sub    ecx,ecx
  418cc4:	inc    ebp
  418cc5:	cwde   
  418cc6:	outs   dx,DWORD PTR ds:[esi]
  418cc7:	xchg   dl,ch
  418cc9:	cs sub eax,edx
  418ccc:	mov    ss,WORD PTR [esi-0x45]
  418ccf:	retf   0xc35
  418cd2:	xchg   ebp,eax
  418cd3:	mov    eax,0x8f5b3d5c
  418cd8:	pop    ecx
  418cd9:	or     al,0x1d
  418cdb:	test   al,0x5a
  418cdd:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cdf:	dec    ebp
  418ce0:	sub    eax,0xbb8ca58a
  418ce5:	cmc    
  418ce6:	aad    0x79
  418ce8:	addr16 in eax,0x43
  418ceb:	sbb    cl,BYTE PTR [edi]
  418ced:	xor    ch,BYTE PTR [edx+0x7e]
  418cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cf1:	stos   DWORD PTR es:[edi],eax
  418cf2:	mov    ebx,0xa0ce47d0
  418cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cf8:	mov    esp,0xa41d2b8b
  418cfd:	cs xor esi,eax
  418d00:	sub    ah,BYTE PTR [ecx-0xe]
  418d03:	push   ebp
  418d04:	imul   ebp,ebx,0x9d641c51
  418d0a:	test   BYTE PTR [esi+0x452b9408],al
  418d10:	ret    0x4ef5
  418d13:	sub    al,0x13
  418d15:	or     eax,0xff5d650a
  418d1a:	in     al,dx
  418d1b:	stos   DWORD PTR es:[edi],eax
  418d1c:	fdivr  DWORD PTR [edi-0x5dd11490]
  418d22:	pusha  
  418d23:	jmp    0x84fc:0x341a2e69
  418d2a:	addr16 loopne 0x418cfa
  418d2d:	xchg   edi,eax
  418d2e:	mov    edx,0x9e46b630
  418d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d34:	adc    BYTE PTR [esi+0x22],bl
  418d37:	xor    eax,DWORD PTR [ebx]
  418d39:	cdq    
  418d3a:	arpl   WORD PTR ss:[edx+edx*2],dx
  418d3e:	fbstp  TBYTE PTR [esi]
  418d40:	jecxz  0x418d88
  418d42:	mov    WORD PTR [edi+0x229aa2c2],?
  418d48:	xchg   ecx,eax
  418d49:	data16 sub bh,al
  418d4c:	data16 cld 
  418d4e:	outs   dx,DWORD PTR ds:[esi]
  418d4f:	adc    ebx,eax
  418d51:	or     eax,DWORD PTR [edi-0x60d5d8e3]
  418d57:	and    eax,0xef4019dd
  418d5c:	out    dx,al
  418d5d:	mov    WORD PTR [ebx],es
  418d5f:	fild   WORD PTR [ebp-0x72]
  418d62:	stc    
  418d63:	sub    al,0x37
  418d65:	push   cs
  418d66:	lods   al,BYTE PTR ds:[esi]
  418d67:	mov    al,ds:0x44678692
  418d6c:	or     esp,DWORD PTR [ecx+0x79]
  418d6f:	imul   ebp,ecx,0xd48d14d7
  418d75:	mov    al,0x93
  418d77:	mov    ah,0xe3
  418d79:	inc    edx
  418d7a:	mov    fs,WORD PTR [edi]
  418d7c:	das    
  418d7d:	pushf  
  418d7e:	shr    DWORD PTR [ebx],cl
  418d80:	fisttp QWORD PTR [edi-0x5c]
  418d83:	int    0xa8
  418d85:	mov    al,ds:0x9ee5eb0c
  418d8a:	cmp    dl,ah
  418d8c:	les    ecx,FWORD PTR [ecx+0x42ab96b2]
  418d92:	push   esp
  418d93:	lods   al,BYTE PTR ds:[esi]
  418d94:	dec    esp
  418d95:	retf   
  418d96:	xchg   ebp,eax
  418d97:	retf   
  418d98:	push   0x0
  418d9a:	inc    edi
  418d9b:	or     BYTE PTR [edi+edx*2-0x3ceaa516],0xf
  418da3:	add    ch,0xd4
  418da6:	ds adc al,0xbd
  418da9:	ins    BYTE PTR es:[edi],dx
  418daa:	js     0x418d50
  418dac:	mov    es,WORD PTR [ebp-0x5252502f]
  418db2:	daa    
  418db3:	stc    
  418db4:	mov    al,0x98
  418db6:	xchg   esp,eax
  418db7:	mov    al,ds:0x743136bf
  418dbc:	rol    DWORD PTR [eax*4+0x6701055c],0x6b
  418dc4:	xchg   esp,eax
  418dc5:	inc    edx
  418dc6:	aaa    
  418dc7:	loop   0x418e28
  418dc9:	fisub  WORD PTR [edi-0x70aa47e5]
  418dcf:	call   0x310d:0x777dadbd
  418dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dd7:	data16 and BYTE PTR [eax+eiz*4],al
  418ddb:	jne    0x418de0
  418ddd:	adc    BYTE PTR [edi*4-0x281902ce],ah
  418de4:	adc    esi,DWORD PTR [edx+0x7c]
  418de7:	pop    es
  418de8:	test   BYTE PTR [ebp-0x3dafe3b6],0x55
  418def:	push   es
  418df0:	adc    eax,0x73f6f347
  418df5:	icebp  
  418df6:	scas   al,BYTE PTR es:[edi]
  418df7:	fsubr  DWORD PTR [edi]
  418df9:	mov    al,0x9
  418dfb:	repnz xor al,0x94
  418dfe:	aad    0x5b
  418e00:	sti    
  418e01:	jnp    0x418e0f
  418e03:	jnp    0x418db2
  418e05:	adc    DWORD PTR [eax],edx
  418e07:	fsubr  DWORD PTR [esi-0x5f4f59c6]
  418e0d:	and    bl,BYTE PTR [eax]
  418e0f:	jne    0x418e4d
  418e11:	dec    ebx
  418e12:	cwde   
  418e13:	pop    ss
  418e14:	(bad)  
  418e15:	and    al,al
  418e17:	aam    0xf4
  418e19:	and    al,0x14
  418e1b:	out    dx,al
  418e1c:	aad    0xf3
  418e1e:	push   0x62
  418e20:	mov    WORD PTR [edi-0x78],fs
  418e23:	or     eax,0xbf95e582
  418e28:	cmp    ch,BYTE PTR [eax]
  418e2a:	daa    
  418e2b:	sahf   
  418e2c:	xor    al,0xbf
  418e2e:	or     eax,0x2e64cccd
  418e33:	popf   
  418e34:	leave  
  418e35:	test   BYTE PTR [edx+0x61ca92b],ch
  418e3b:	stos   BYTE PTR es:[edi],al
  418e3c:	or     al,0xe0
  418e3e:	or     ebp,esi
  418e40:	jecxz  0x418e59
  418e42:	(bad)  
  418e43:	retw   0x3532
  418e47:	rcl    BYTE PTR [ebp+0x6b],cl
  418e4a:	loopne 0x418e0f
  418e4c:	fldenv [esi]
  418e4e:	ret    
  418e4f:	push   edx
  418e50:	mov    DWORD PTR [ebx+0x8],ebx
  418e53:	loope  0x418e23
  418e55:	pusha  
  418e56:	cmove  esi,DWORD PTR [eax+0x24]
  418e5a:	lea    esi,[edi+0x69]
  418e5d:	or     DWORD PTR [ebx],esi
  418e5f:	pop    DWORD PTR [ecx]
  418e61:	ins    BYTE PTR es:[edi],dx
  418e62:	imul   edi,ebp,0xf0ba0afc
  418e68:	xor    eax,0x90ff443
  418e6d:	fdivr  st(6),st
  418e6f:	test   eax,0x31c522d7
  418e74:	xor    eax,0xb902b2da
  418e79:	pusha  
  418e7a:	or     al,0xfc
  418e7c:	mov    dl,0x1a
  418e7e:	jg     0x418e76
  418e80:	or     BYTE PTR [ebp-0x23cef7e9],dh
  418e86:	mov    ds:0x2dc4c469,eax
  418e8b:	repnz out dx,al
  418e8d:	in     eax,0x59
  418e8f:	pop    esi
  418e90:	push   edx
  418e91:	pop    edx
  418e92:	jmp    0xb0eac684
  418e97:	dec    ebx
  418e98:	cdq    
  418e99:	push   ss
  418e9a:	jmp    0x418e75
  418e9c:	sbb    ch,BYTE PTR [ebx]
  418e9e:	mov    edx,0xf1eadf9e
  418ea3:	inc    ecx
  418ea4:	xor    eax,0x111bd46e
  418ea9:	call   0xdab:0xebdec6eb
  418eb0:	test   ecx,0x483af5e3
  418eb6:	or     eax,0x11f1a8e4
  418ebb:	out    dx,al
  418ebc:	ds pop ebp
  418ebe:	cs ds inc ebx
  418ec1:	loop   0x418f38
  418ec3:	call   DWORD PTR [esi+0x36]
  418ec6:	mov    ch,0x4c
  418ec8:	push   ss
  418ec9:	push   ebx
  418eca:	sub    cl,dh
  418ecc:	jmp    0x83339fcf
  418ed1:	dec    ecx
  418ed2:	ja     0x418ede
  418ed4:	js     0x418e8b
  418ed6:	out    dx,al
  418ed7:	(bad)  
  418ed8:	xor    al,0xab
  418eda:	lahf   
  418edb:	inc    esp
  418edc:	adc    DWORD PTR [ecx+0x40],ecx
  418edf:	adc    DWORD PTR [ecx],ebx
  418ee1:	fadd   DWORD PTR es:[edi]
  418ee4:	arpl   WORD PTR [ebx+0x6b],cx
  418ee7:	jmp    0xcb42:0xfcd3bad0
  418eee:	dec    esp
  418eef:	jnp    0x418f6c
  418ef1:	xor    al,0xca
  418ef3:	or     bh,BYTE PTR [ebx+0x8]
  418ef6:	and    dl,BYTE PTR [edi]
  418ef8:	sub    DWORD PTR [ecx+edi*4+0x6caef22f],ebx
  418eff:	inc    ebp
  418f00:	mov    bl,0x9b
  418f02:	pop    ebp
  418f03:	xchg   ebx,eax
  418f04:	sbb    DWORD PTR [esi+0x611ae77d],ebp
  418f0a:	aam    0xc7
  418f0c:	clc    
  418f0d:	mov    dh,0x16
  418f0f:	or     DWORD PTR [edx-0x19],esp
  418f12:	loopne 0x418ece
  418f14:	pop    ecx
  418f15:	push   esi
  418f16:	hlt    
  418f17:	jne    0x418f33
  418f19:	in     eax,dx
  418f1a:	jl     0x418ee2
  418f1c:	mov    BYTE PTR [ecx],dl
  418f1e:	(bad)  
  418f1f:	int3   
  418f20:	iret   
  418f21:	push   esi
  418f22:	mov    edx,DWORD PTR [edi]
  418f24:	(bad)  
  418f25:	lods   al,BYTE PTR ds:[esi]
  418f26:	outs   dx,DWORD PTR ds:[esi]
  418f27:	out    dx,eax
  418f28:	out    0xdc,eax
  418f2a:	and    eax,DWORD PTR [edx]
  418f2c:	stos   DWORD PTR es:[edi],eax
  418f2d:	inc    esi
  418f2e:	mov    gs,WORD PTR [esi-0x19]
  418f31:	sahf   
  418f32:	adc    al,0x7d
  418f34:	or     dh,BYTE PTR [ebx]
  418f36:	std    
  418f37:	and    edx,DWORD PTR [esi-0x6d6f8f8f]
  418f3d:	dec    ecx
  418f3e:	sbb    al,0xa2
  418f40:	jmp    DWORD PTR [eax+0x3e08e7cd]
  418f46:	add    al,0xf1
  418f48:	loopne 0x418ee5
  418f4a:	leave  
  418f4b:	inc    eax
  418f4c:	imul   esp,DWORD PTR [eax-0x6c6ceffa],0xdb7b6db0
  418f56:	test   esi,eax
  418f58:	push   es
  418f59:	add    esp,ebp
  418f5b:	retf   0xd168
  418f5e:	mov    eax,0x241e3c92
  418f63:	jae    0x418f1e
  418f65:	arpl   WORD PTR [edx],di
  418f67:	push   edx
  418f68:	dec    DWORD PTR [edx]
  418f6a:	iret   
  418f6b:	sub    eax,0x5174779d
  418f70:	ja     0x418fb4
  418f72:	push   DWORD PTR [esi+0x8]
  418f75:	inc    ebp
  418f76:	or     DWORD PTR [ebp+0x14],ebp
  418f79:	aas    
  418f7a:	(bad)  [edx]
  418f7c:	cmp    dl,BYTE PTR [edi*2-0x4c49e44]
  418f83:	les    esp,FWORD PTR ds:0xdc4c5c91
  418f89:	dec    edx
  418f8a:	out    0xa2,eax
  418f8c:	dec    edi
  418f8d:	inc    ecx
  418f8e:	mov    cl,0xd6
  418f90:	inc    edi
  418f91:	fsubrp st(3),st
  418f93:	xchg   DWORD PTR [esp+edx*8],esp
  418f96:	out    0xfe,eax
  418f98:	inc    edi
  418f99:	jae    0x418fce
  418f9b:	and    eax,0x3a46f84c
  418fa0:	pusha  
  418fa1:	(bad)  
  418fa2:	je     0x418fbf
  418fa4:	jae    0x418fea
  418fa6:	inc    esp
  418fa7:	icebp  
  418fa8:	aad    0xa3
  418faa:	mov    ecx,0xc7ac97cc
  418faf:	sub    ebp,DWORD PTR [ecx-0x35309171]
  418fb5:	leave  
  418fb6:	test   al,0x90
  418fb8:	jae    0x418fb6
  418fba:	add    al,0x74
  418fbc:	div    DWORD PTR [edi+0x4c]
  418fbf:	lods   eax,DWORD PTR ds:[esi]
  418fc0:	mov    BYTE PTR [edi+0x4c49433e],al
  418fc6:	call   0x379e:0xe4d3308b
  418fcd:	mov    DWORD PTR [edi-0x5345e901],edi
  418fd3:	pop    edx
  418fd4:	fild   QWORD PTR [edi-0x23]
  418fd7:	lock and dh,BYTE PTR [edx+0xe1eb51b]
  418fde:	sbb    dl,BYTE PTR [esi+0x5b]
  418fe1:	aam    0x88
  418fe3:	pop    ds
  418fe4:	inc    BYTE PTR [esi+0x58]
  418fe7:	gs xchg ebx,eax
  418fe9:	mov    esi,ebp
  418feb:	mov    cl,0x56
  418fed:	rol    BYTE PTR [esi],0x80
  418ff0:	je     0x41901e
  418ff2:	add    BYTE PTR ds:0xfd5b510f,ch
  418ff8:	jne    0x419074
  418ffa:	jne    0x418fe3
  418ffc:	mov    ebx,0xb0f1e37e
  419001:	adc    ah,BYTE PTR [esi-0x3ceaeb50]
  419007:	xchg   esp,eax
  419008:	sub    eax,0x53f0cfa5
  41900d:	jns    0x41903a
  41900f:	not    DWORD PTR [ebx]
  419011:	cmp    DWORD PTR [ebx+0x25],0xffffffdb
  419015:	jns    0x418fcf
  419017:	sbb    BYTE PTR [edx],dh
  419019:	in     eax,dx
  41901a:	push   cs
  41901b:	int3   
  41901c:	xor    al,0x1d
  41901e:	mov    WORD PTR [edx+ecx*1+0x7d],cs
  419022:	sbb    BYTE PTR [ebx-0x814d380],ah
  419028:	mov    esp,0x74cd474b
  41902d:	call   0x9d9b9e0e
  419032:	adc    dl,BYTE PTR [ebx+0x5b]
  419035:	push   cx
  419037:	mov    ds,WORD PTR [edx]
  419039:	mov    edi,0x7182061
  41903e:	dec    esi
  41903f:	pushf  
  419040:	mov    ebx,0x95593ba9
  419045:	xchg   DWORD PTR [ecx+0x4ad97504],esi
  41904b:	and    bl,BYTE PTR [ebx]
  41904d:	mov    ds:0xd452d1de,al
  419052:	dec    ecx
  419053:	mov    eax,DWORD PTR [ecx]
  419055:	test   eax,0xa7efcd00
  41905a:	jle    0x419031
  41905c:	icebp  
  41905d:	rol    ch,1
  41905f:	mov    eax,0xab040402
  419064:	xchg   esi,eax
  419065:	cwde   
  419066:	jmp    0xdba8:0x1427a782
  41906d:	repnz jecxz 0x419024
  419070:	aaa    
  419071:	inc    ebx
  419072:	xchg   DWORD PTR [ecx-0x7e],edx
  419075:	mov    eax,0xdb54d8de
  41907a:	fdiv   st(1),st
  41907c:	cdq    
  41907d:	(bad)  
  41907e:	leave  
  41907f:	pop    ebp
  419080:	mov    al,ds:0x816ae711
  419085:	push   ecx
  419086:	push   edi
  419087:	int    0x1c
  419089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41908a:	pop    ecx
  41908b:	dec    eax
  41908c:	push   es
  41908d:	(bad)  
  41908e:	xchg   esi,eax
  41908f:	push   ecx
  419090:	cmc    
  419091:	inc    edi
  419092:	loopne 0x41907a
  419094:	fwait
  419095:	es dec edi
  419097:	int    0x36
  419099:	jecxz  0x4190e4
  41909b:	retf   0xf15
  41909e:	aaa    
  41909f:	xchg   ecx,eax
  4190a0:	cmc    
  4190a1:	imul   eax,DWORD PTR [ebp+0x53],0xafadf9ad
  4190a8:	jo     0x419051
  4190aa:	ins    BYTE PTR es:[edi],dx
  4190ab:	aam    0xaf
  4190ad:	or     al,0x17
  4190af:	inc    ebx
  4190b0:	mov    eax,ds:0x6813b2d4
  4190b5:	aaa    
  4190b6:	adc    ah,BYTE PTR [ebx]
  4190b8:	mov    ecx,DWORD PTR [edx-0x2e8e769f]
  4190be:	int    0xe5
  4190c0:	aas    
  4190c1:	(bad)  
  4190c2:	std    
  4190c3:	mov    ebx,0xfc352ef5
  4190c8:	mov    al,ds:0x1594b7b9
  4190cd:	add    BYTE PTR [edx-0x6270ae44],bl
  4190d3:	aam    0x69
  4190d5:	das    
  4190d6:	or     BYTE PTR [ebx-0x21026d42],ah
  4190dc:	and    dl,BYTE PTR [esi+0xb]
  4190df:	sbb    al,0xa0
  4190e1:	sbb    cl,dl
  4190e3:	push   esi
  4190e4:	sbb    eax,0x2b7043c
  4190e9:	popf   
  4190ea:	test   eax,0x361399aa
  4190ef:	dec    ecx
  4190f0:	aad    0x45
  4190f2:	xor    esi,edi
  4190f4:	jecxz  0x41914c
  4190f6:	xor    DWORD PTR [edx],ecx
  4190f8:	push   ds
  4190f9:	push   0x46910d8
  4190fe:	iret   
  4190ff:	mov    ch,BYTE PTR [eax-0xc52c614]
  419105:	outs   dx,BYTE PTR ds:[esi]
  419106:	or     BYTE PTR [edx+0x59],ch
  419109:	ja     0x419169
  41910b:	push   0x56
  41910d:	idiv   BYTE PTR [ebx+eax*2]
  419110:	xchg   ebx,eax
  419111:	cdq    
  419112:	idiv   DWORD PTR [eax-0x8]
  419115:	fst    QWORD PTR [ecx+0x71]
  419118:	ror    BYTE PTR [edi+0x4b],1
  41911b:	cdq    
  41911c:	popf   
  41911d:	sub    DWORD PTR [ebx+0x4ee09b6e],eax
  419123:	cmp    eax,0x660ff837
  419128:	out    0xe,al
  41912a:	mov    esp,DWORD PTR [ebx+0x5fdb3eb2]
  419130:	jmp    0x60ec:0x599d5a23
  419137:	ret    
  419138:	jl     0x4191a1
  41913a:	mov    edi,0xb225753a
  41913f:	pop    ebx
  419140:	mov    dl,0xc3
  419142:	mov    al,ds:0x9a0b94a3
  419147:	rol    esp,0xed
  41914a:	mov    eax,ds:0xca3a91e3
  41914f:	sbb    DWORD PTR [eax+0x5960fd1c],eax
  419155:	cmp    DWORD PTR [ebx],eax
  419157:	bound  esi,QWORD PTR [edi+edi*1+0x1122c9c2]
  41915e:	shr    BYTE PTR [ecx],cl
  419160:	sub    eax,DWORD PTR [ebx-0x42e70d28]
  419166:	aas    
  419167:	ds sti 
  419169:	and    DWORD PTR [ebp-0x20df6d40],ecx
  41916f:	(bad)  
  419170:	daa    
  419171:	mov    ?,WORD PTR [eax]
  419173:	add    BYTE PTR [edx-0x76c699da],ch
  419179:	sbb    DWORD PTR [edi-0xa34fb64],esp
  41917f:	jo     0x4191ce
  419181:	push   ecx
  419182:	cmp    ecx,DWORD PTR [eax-0x5099abea]
  419188:	loop   0x4191a6
  41918a:	xor    al,0xcb
  41918c:	jg     0x4191a6
  41918e:	inc    edi
  41918f:	cld    
  419190:	sbb    BYTE PTR [ebx],dh
  419192:	dec    edi
  419193:	add    al,0x6e
  419195:	(bad)  
  419196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419197:	ret    
  419198:	(bad)  
  419199:	mov    ecx,0xa065b834
  41919e:	enter  0x8eb4,0x86
  4191a2:	(bad)  [ecx-0x1]
  4191a5:	add    al,0x71
  4191a7:	push   ss
  4191a8:	mov    dh,0xf0
  4191aa:	xor    DWORD PTR ds:0x16785793,edi
  4191b0:	mov    ds:0x5cf5bf38,al
  4191b5:	ss (bad) 
  4191b7:	into   
  4191b8:	and    DWORD PTR [eax],0xffffffcd
  4191bb:	jp     0x4191c8
  4191bd:	imul   ecx,DWORD PTR [ebp+ecx*8-0x7b131bde],0x4637279e
  4191c8:	dec    ecx
  4191c9:	adc    eax,0xf94da3b6
  4191ce:	xor    BYTE PTR [ecx],al
  4191d0:	jbe    0x41919a
  4191d2:	jp     0x41916c
  4191d4:	test   DWORD PTR [ecx-0x49444cfb],edi
  4191da:	(bad)  
  4191db:	xchg   ebx,eax
  4191dc:	shl    DWORD PTR ds:0xf84d7976,cl
  4191e2:	adc    BYTE PTR [eax+0x2a426f80],al
  4191e8:	push   cs
  4191e9:	int3   
  4191ea:	dec    eax
  4191eb:	mov    WORD PTR [edi],ds
  4191ed:	(bad)  
  4191ee:	clc    
  4191ef:	mov    eax,ds:0x4ab86768
  4191f4:	fistp  DWORD PTR [edi]
  4191f6:	mov    ah,0x13
  4191f8:	cli    
  4191f9:	xor    ecx,DWORD PTR [edi+0x7388c62f]
  4191ff:	outs   dx,DWORD PTR ds:[esi]
  419200:	pop    esp
  419201:	pop    es
  419202:	mov    eax,ds:0x74cf6539
  419207:	fwait
  419208:	sbb    BYTE PTR [ebx],ah
  41920a:	or     ebx,DWORD PTR ds:0xed8b0eb5
  419210:	sub    BYTE PTR [ecx-0x9f94038],bl
  419216:	cmp    ah,BYTE PTR [eax]
  419218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419219:	sub    BYTE PTR [ebx],cl
  41921b:	daa    
  41921c:	leave  
  41921d:	out    dx,al
  41921e:	pop    esi
  41921f:	iret   
  419220:	inc    ebx
  419221:	mov    ecx,0x3c7ab79f
  419226:	int    0xf5
  419228:	repz arpl si,cx
  41922b:	or     DWORD PTR [ecx],ecx
  41922d:	enter  0xdf38,0xb0
  419231:	cmp    BYTE PTR [ecx],0x81
  419234:	scas   eax,DWORD PTR es:[edi]
  419235:	or     al,0xd6
  419237:	mov    esi,0x9f1ced13
  41923c:	jo     0x4192b7
  41923e:	inc    esp
  41923f:	mov    dl,0x5d
  419241:	cmp    al,0xf2
  419243:	and    ebx,ebp
  419245:	cmp    ecx,ecx
  419247:	outs   dx,BYTE PTR ds:[esi]
  419248:	sub    BYTE PTR [ebx-0x6e40f5ca],ch
  41924e:	jb     0x419202
  419250:	sub    DWORD PTR [ecx],ebp
  419252:	gs cmp al,0xba
  419255:	aam    0x8b
  419257:	xlat   BYTE PTR ds:[ebx]
  419258:	mul    BYTE PTR [ebp+esi*2+0x35]
  41925c:	jno    0x4192b5
  41925e:	adc    edi,DWORD PTR [edx-0x179d5c1e]
  419264:	cmp    BYTE PTR [ebp+0x45e7052c],0xa4
  41926b:	sbb    BYTE PTR [esi-0x426b045a],ch
  419271:	pop    es
  419272:	dec    edx
  419273:	or     ebp,0xbf0f69a4
  419279:	and    DWORD PTR [edi+0x665b0481],ecx
  41927f:	xchg   BYTE PTR [edx+eiz*4],bh
  419282:	pop    ecx
  419283:	lods   eax,DWORD PTR ds:[esi]
  419284:	mov    edx,DWORD PTR [edx]
  419286:	pusha  
  419287:	sti    
  419288:	jb     0x41920f
  41928a:	adc    DWORD PTR [ecx+0x33f3c797],0x84d89c8
  419294:	mov    ecx,DWORD PTR [ebp+0x8]
  419297:	mov    edx,DWORD PTR [ebp-0x58]
  41929a:	add    ecx,0x5708e2
  4192a0:	imul   ecx,edx
  4192a3:	mov    DWORD PTR [ebp-0x58],ecx
  4192a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a9:	mov    edx,DWORD PTR [ebp-0x54]
  4192ac:	add    ecx,0x64f89c
  4192b2:	or     ecx,edx
  4192b4:	mov    DWORD PTR [ebp-0x54],ecx
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0xc3
  4192cc:	mov    esi,0x1c273b45
  4192d1:	add    BYTE PTR [ebx-0x7c7ca3e9],0x92
  4192d8:	mov    al,ds:0x534e5915
  4192dd:	adc    DWORD PTR [esi],ebp
  4192df:	test   eax,0x8d8915e0
  4192e4:	push   ecx
  4192e5:	stc    
  4192e6:	xchg   ebp,eax
  4192e7:	sub    edx,DWORD PTR [ecx+0x2eb28b28]
  4192ed:	lock sbb DWORD PTR [edx+0x6ecc3dc9],ebx
  4192f4:	mov    esp,0xdc4c706d
  4192f9:	retf   
  4192fa:	ja     0x4192af
  4192fc:	in     al,0x46
  4192fe:	repz jb 0x41930a
  419301:	das    
  419302:	jbe    0x4192f6
  419304:	mov    ebx,0xdccc5d32
  419309:	jmp    0x9b8e1275
  41930e:	pusha  
  41930f:	outs   dx,DWORD PTR ds:[esi]
  419310:	cmp    ebp,DWORD PTR [eax+0x7dad06a7]
  419316:	sbb    DWORD PTR [eax-0x37],0xfffffffc
  41931a:	rcl    BYTE PTR [ecx],cl
  41931c:	inc    ecx
  41931d:	nop
  41931e:	shr    BYTE PTR [edx],0x5a
  419321:	imul   BYTE PTR ds:0x3cdd254d
  419327:	and    ecx,ecx
  419329:	push   edi
  41932a:	xchg   ebp,eax
  41932b:	(bad)  
  41932c:	cmp    DWORD PTR [ecx+esi*2-0x322faee5],esi
  419333:	push   0x393a6455
  419338:	cdq    
  419339:	sbb    al,0x5b
  41933b:	ret    
  41933c:	mov    ebp,0xa46d5c88
  419341:	les    eax,FWORD PTR [esi-0x40]
  419344:	ret    0x7b6c
  419347:	pusha  
  419348:	fs ret 0x8b05
  41934c:	dec    esi
  41934d:	test   ecx,ecx
  41934f:	aas    
  419350:	inc    edi
  419351:	fnstenv [edi+0x65]
  419354:	std    
  419355:	data16 fisubr WORD PTR [edi-0x51]
  419359:	push   ebx
  41935a:	(bad)  
  41935b:	idiv   DWORD PTR [ecx-0x54ddd164]
  419361:	push   ecx
  419362:	call   0xdfd9:0x47e5ccc8
  419369:	push   edi
  41936a:	shr    BYTE PTR [ebp+ebp*8-0x63b0c64b],0xc9
  419372:	or     dh,BYTE PTR [ebp+0x55]
  419375:	and    esi,eax
  419377:	jecxz  0x4193a1
  419379:	push   ebx
  41937a:	imul   edi,DWORD PTR ds:0xd7dc8c20,0x2b2c9f7e
  419384:	scas   al,BYTE PTR es:[edi]
  419385:	inc    esi
  419386:	inc    ebp
  419387:	mov    BYTE PTR [ecx],ah
  419389:	mov    bl,0x12
  41938b:	mov    ch,0x10
  41938d:	stos   BYTE PTR es:[edi],al
  41938e:	cmp    BYTE PTR [esi-0x2f],bl
  419391:	mov    bh,0xe7
  419393:	or     dh,BYTE PTR [esi]
  419395:	sub    dl,BYTE PTR [edi]
  419397:	ret    0x1284
  41939a:	mov    edi,0xd561d38d
  41939f:	cmp    esp,eax
  4193a1:	outs   dx,DWORD PTR ds:[esi]
  4193a2:	sbb    DWORD PTR [ebp-0x7],ebp
  4193a5:	push   ecx
  4193a6:	and    edx,esp
  4193a8:	dec    edi
  4193a9:	in     al,dx
  4193aa:	push   esi
  4193ab:	pop    ds
  4193ac:	ins    DWORD PTR es:[edi],dx
  4193ad:	test   al,0x94
  4193af:	(bad)  
  4193b0:	xor    BYTE PTR [edi],dl
  4193b2:	pop    esp
  4193b3:	pop    ds
  4193b4:	fcmovb st,st(6)
  4193b6:	test   DWORD PTR [ebx],esi
  4193b8:	loopne 0x41933b
  4193ba:	mov    dh,0xc0
  4193bc:	loop   0x419398
  4193be:	or     al,BYTE PTR [edx]
  4193c0:	repnz sub ebx,DWORD PTR [ecx-0x2e84a3c5]
  4193c7:	cld    
  4193c8:	in     al,0x23
  4193ca:	cmp    BYTE PTR [ecx-0x6c],dl
  4193cd:	mov    eax,0x16e36ebd
  4193d2:	jmp    0x985ed884
  4193d7:	pop    es
  4193d8:	es mov ebx,0xcccb52bf
  4193de:	data16 (bad) 
  4193e0:	repz enter 0x3f4f,0xe6
  4193e5:	mov    ds:0x4888acfa,eax
  4193ea:	add    ecx,ebp
  4193ec:	cmp    BYTE PTR [ebx+0x5c],ch
  4193ef:	aad    0xe
  4193f1:	imul   ebx,DWORD PTR [esi+eax*1],0xffffffdc
  4193f5:	mov    ss,WORD PTR [ebx+0x45]
  4193f8:	push   es
  4193f9:	dec    esp
  4193fa:	lea    ebp,[ebp+ebx*1+0x39428912]
  419401:	sub    bl,BYTE PTR [ebx]
  419403:	xor    al,0xaf
  419405:	inc    ebp
  419406:	ss mov cl,0xc9
  419409:	push   ds
  41940a:	imul   eax,DWORD PTR [ebp+0xd],0xffffffbe
  41940e:	and    ebx,edi
  419410:	dec    esp
  419411:	stc    
  419412:	mov    BYTE PTR [edi+edx*8+0x12],cl
  419416:	sub    al,0xee
  419418:	xor    ah,0xe7
  41941b:	loope  0x419409
  41941d:	enter  0xda84,0xaf
  419421:	cmp    al,0x7d
  419423:	mov    ch,0x3a
  419425:	inc    esi
  419426:	adc    esp,0xffffffee
  419429:	mov    BYTE PTR [ecx-0x52],al
  41942c:	(bad)  
  41942d:	cli    
  41942e:	and    al,0xea
  419430:	es cmp al,bl
  419433:	push   ebx
  419434:	fsub   DWORD PTR [ecx+0x29]
  419437:	and    al,0xa8
  419439:	mov    edi,DWORD PTR [edi]
  41943b:	scas   al,BYTE PTR es:[edi]
  41943c:	push   esi
  41943d:	sub    dh,BYTE PTR [esi-0x5b]
  419440:	xor    ah,BYTE PTR [edx]
  419442:	rcl    BYTE PTR [edx-0x4c81a147],1
  419448:	mov    esi,0xa8349528
  41944d:	push   0xffffffdc
  41944f:	adc    bh,bh
  419451:	(bad)  
  419452:	hlt    
  419453:	mov    bh,0xc9
  419455:	test   BYTE PTR [ebp-0x64],dh
  419458:	loopne 0x419407
  41945a:	loope  0x4194bb
  41945c:	pop    ss
  41945d:	call   0x85c9ebe4
  419462:	push   esp
  419463:	jb     0x4194a8
  419465:	jecxz  0x4194a7
  419467:	sbb    dl,BYTE PTR [edx+0x4021edf]
  41946d:	int3   
  41946e:	mov    eax,0xd2df8dd3
  419473:	cmc    
  419474:	cmp    eax,0x7570bb3d
  419479:	scas   eax,DWORD PTR es:[edi]
  41947a:	jo     0x419452
  41947c:	lods   al,BYTE PTR ds:[esi]
  41947d:	cmc    
  41947e:	ss icebp 
  419480:	fadd   st,st(5)
  419482:	push   es
  419483:	jae    0x4194f7
  419485:	push   0xe99e358f
  41948a:	inc    ebx
  41948b:	push   edx
  41948c:	adc    DWORD PTR [edi-0x26aa71a4],ebp
  419492:	cld    
  419493:	call   0xa544f545
  419498:	cmp    BYTE PTR [edx+0x2d10cbf3],al
  41949e:	sub    BYTE PTR [eax-0x426e695e],ah
  4194a4:	jnp    0x419496
  4194a6:	xchg   edi,eax
  4194a7:	shl    BYTE PTR [esi+0x79956477],cl
  4194ad:	out    0xfd,eax
  4194af:	shl    BYTE PTR [edi+edi*8-0x14],1
  4194b3:	mov    bh,BYTE PTR [ebp-0x6fd919d0]
  4194b9:	xlat   BYTE PTR ds:[ebx]
  4194ba:	cld    
  4194bb:	shr    ebx,0xf5
  4194be:	sahf   
  4194bf:	jecxz  0x4194bf
  4194c1:	mov    ecx,0xc587d894
  4194c6:	shr    BYTE PTR [ebx],cl
  4194c8:	and    eax,0x738f6f7a
  4194cd:	dec    ebp
  4194ce:	pop    es
  4194cf:	mov    ch,0x79
  4194d1:	sbb    al,0xa7
  4194d3:	fmul   DWORD PTR [eax+0x3ca35775]
  4194da:	js     0x419530
  4194dc:	call   0xed6fd3f8
  4194e1:	imul   edi,DWORD PTR [esp+ebx*2-0x482cbd0c],0x16
  4194e9:	dec    esp
  4194ea:	mov    edi,0xe1382bb1
  4194ef:	or     edx,DWORD PTR [edx]
  4194f1:	addr16 cwde 
  4194f3:	inc    edx
  4194f4:	aad    0xd6
  4194f6:	mov    al,0xbf
  4194f8:	mov    dh,0xe1
  4194fa:	cmp    BYTE PTR gs:[esi+0x798defe4],ch
  419501:	fnstcw WORD PTR [ebx+ecx*8+0x18]
  419505:	dec    ebp
  419506:	in     al,0x7f
  419508:	jo     0x41952f
  41950a:	int    0x6f
  41950c:	call   0x7025:0xdb71c53e
  419513:	neg    DWORD PTR [edx+0x6e]
  419516:	jne    0x4194d0
  419518:	mov    esp,0xc7c106e9
  41951d:	pop    ebx
  41951e:	pop    edx
  41951f:	xchg   ecx,eax
  419520:	sti    
  419521:	mov    bl,0x42
  419523:	out    0xf0,al
  419525:	push   ss
  419526:	int    0xe6
  419528:	inc    ecx
  419529:	inc    DWORD PTR [ebp-0x2006f878]
  41952f:	push   0xffffff91
  419531:	mov    ebx,0x626edf0b
  419536:	shl    ecx,cl
  419538:	mov    ah,0xab
  41953a:	mov    bh,0x4f
  41953c:	fisttp QWORD PTR [edi+0x139a8bcf]
  419542:	xor    BYTE PTR [edx],ch
  419544:	push   cs
  419545:	test   al,0x68
  419547:	push   cs
  419548:	mov    esp,0x996d9cf
  41954d:	dec    esi
  41954e:	xchg   esi,eax
  41954f:	pop    ebp
  419550:	sti    
  419551:	or     esi,ecx
  419553:	mov    edx,0xc32f2eb8
  419558:	fmul   DWORD PTR [ebp-0x72]
  41955b:	xchg   edi,eax
  41955c:	or     al,0xc1
  41955e:	into   
  41955f:	or     al,0x20
  419561:	leave  
  419562:	icebp  
  419563:	stc    
  419564:	push   ebp
  419565:	mov    dl,0x98
  419567:	xchg   esp,eax
  419568:	cdq    
  419569:	xchg   DWORD PTR [eax],esp
  41956b:	mov    cl,0x8
  41956d:	int    0x45
  41956f:	dec    eax
  419570:	imul   esi,DWORD PTR [ebp+0x73],0x55d3d668
  419577:	(bad)
  41957a:	xor    DWORD PTR [esi-0x2a201dd4],ebx
  419580:	or     eax,DWORD PTR [ebx+0x3a]
  419583:	dec    ecx
  419584:	retf   0xedf6
  419587:	jnp    0x419596
  419589:	jb     0x41954b
  41958b:	sub    eax,0xcb5bee27
  419590:	sub    DWORD PTR [edi+ebx*2-0x75],eax
  419594:	or     DWORD PTR [edi],0xffffff80
  419597:	cli    
  419598:	fisttp QWORD PTR [ecx+0x2327cb70]
  41959e:	dec    esi
  41959f:	push   edi
  4195a0:	jbe    0x419526
  4195a2:	jecxz  0x4195d1
  4195a4:	bndldx bnd3,[eax-0x5eca664d]
  4195ab:	es neg cl
  4195ae:	adc    dh,BYTE PTR [eax+0x31d2db2]
  4195b4:	pop    ds
  4195b5:	js     0x419615
  4195b7:	in     al,dx
  4195b8:	pop    edi
  4195b9:	in     eax,0xb2
  4195bb:	rcr    esp,0x6
  4195be:	sub    DWORD PTR ss:[ebx+0x51],0x79b98a05
  4195c6:	retf   
  4195c7:	scas   eax,DWORD PTR es:[edi]
  4195c8:	xchg   edx,eax
  4195c9:	iret   
  4195ca:	add    BYTE PTR [ebx],dl
  4195cc:	dec    eax
  4195cd:	retf   
  4195ce:	test   BYTE PTR [ebp-0x37677806],bl
  4195d4:	das    
  4195d5:	test   eax,0x8fbada99
  4195da:	sahf   
  4195db:	jle    0x419575
  4195dd:	retf   0x381e
  4195e0:	cs cmp eax,0xecdfa7d5
  4195e6:	sti    
  4195e7:	mov    WORD PTR [ebp+0x6e],ss
  4195ea:	inc    esp
  4195eb:	test   DWORD PTR ds:0x76d794e7,edx
  4195f1:	jg     0x419633
  4195f3:	jbe    0x4195fe
  4195f5:	out    dx,al
  4195f6:	jb     0x4195a2
  4195f8:	adc    eax,0xc108edba
  4195fd:	sahf   
  4195fe:	in     eax,dx
  4195ff:	fs inc esi
  419601:	jp     0x4195ff
  419603:	pop    ebx
  419604:	cli    
  419605:	push   esi
  419606:	fidivr DWORD PTR [ebx]
  419608:	test   edi,ebx
  41960a:	dec    edi
  41960b:	stc    
  41960c:	xor    al,0x1a
  41960e:	in     al,0x43
  419610:	mov    ebx,0x8d2adae6
  419615:	mov    ds:0xcc3797ed,eax
  41961a:	fist   DWORD PTR [eax-0x3f]
  41961d:	sub    ch,BYTE PTR [edx+0x49aba49e]
  419623:	arpl   bp,cx
  419625:	call   0x2d1d:0x444deca3
  41962c:	or     bh,BYTE PTR [ebx+0x41]
  41962f:	(bad)  
  419630:	sbb    DWORD PTR [ecx-0x286800ce],ebp
  419636:	jp     0x419631
  419638:	cs test al,0x1f
  41963b:	fdiv   QWORD PTR [esi-0x63]
  41963e:	not    DWORD PTR [edi]
  419640:	xchg   ecx,eax
  419641:	add    eax,DWORD PTR [esp+ecx*4]
  419644:	leave  
  419645:	add    eax,0x8fbfb3ab
  41964a:	inc    eax
  41964b:	or     BYTE PTR [edi-0x4378b611],bl
  419651:	add    eax,0x265c213c
  419656:	mov    cl,0x87
  419658:	xchg   edi,eax
  419659:	dec    edx
  41965a:	push   esp
  41965b:	sbb    BYTE PTR [eax+esi*2],dl
  41965e:	dec    edi
  41965f:	mov    esi,0x777ede4c
  419664:	mov    edx,0x433b21d2
  419669:	(bad)  
  41966a:	test   eax,0x37446c42
  41966f:	push   esi
  419670:	in     al,0x1a
  419672:	or     ebp,0xffffff95
  419675:	mov    edi,0x8151abbe
  41967a:	ret    0x40b0
  41967d:	inc    ebx
  41967e:	out    0x9e,eax
  419680:	xor    eax,0x8fc27933
  419685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419686:	xchg   ebx,eax
  419687:	in     al,dx
  419688:	es pop eax
  41968a:	adc    ebp,DWORD PTR [ecx-0x34]
  41968d:	push   esp
  41968e:	aam    0x45
  419690:	pop    edx
  419691:	jnp    0x419704
  419693:	scas   al,BYTE PTR es:[edi]
  419694:	ins    DWORD PTR es:[edi],dx
  419695:	out    dx,al
  419696:	les    edi,FWORD PTR [eax+0x45]
  419699:	out    0x7f,eax
  41969b:	shl    DWORD PTR [edx+edi*1+0x3a],1
  41969f:	add    esp,esi
  4196a1:	fcom   DWORD PTR [eax]
  4196a3:	xchg   edx,eax
  4196a4:	clc    
  4196a5:	mov    WORD PTR gs:[esp+esi*2+0x5d],gs
  4196aa:	iret   
  4196ab:	lea    esp,[eax-0x66]
  4196ae:	or     al,0xe
  4196b0:	sub    eax,0x1e59fcea
  4196b5:	repz pushf 
  4196b7:	cmp    BYTE PTR [esi+ecx*8+0x525500c8],ch
  4196be:	pop    edi
  4196bf:	je     0x4196bd
  4196c1:	pop    es
  4196c2:	jo     0x4196b8
  4196c4:	mov    dh,0x15
  4196c6:	leave  
  4196c7:	ja     0x4196ca
  4196c9:	fwait
  4196ca:	add    esp,edx
  4196cc:	adc    ebx,DWORD PTR [edx+ebx*4-0x3982fc4]
  4196d3:	mov    ?,eax
  4196d5:	add    BYTE PTR [ecx-0x45],cl
  4196d8:	fidivr DWORD PTR [ecx-0x640e3c98]
  4196de:	mov    edi,0x759bf5d4
  4196e3:	test   eax,0x7c16a5a0
  4196e8:	imul   ebp,ebp,0x7d
  4196eb:	lds    ebx,FWORD PTR [edx+edx*2-0x22b3fdee]
  4196f2:	icebp  
  4196f3:	fdiv   DWORD PTR [eax-0x6e]
  4196f6:	mov    edi,0x908f371c
  4196fb:	shl    BYTE PTR [ecx+0x4],1
  4196fe:	sub    bh,dl
  419700:	push   0x35
  419702:	lock data16 je 0x41971b
  419706:	fmul   QWORD PTR [edx-0x7ea4119b]
  41970c:	stos   BYTE PTR es:[edi],al
  41970d:	or     eax,DWORD PTR [edx+0x1bc0678e]
  419713:	push   ss
  419714:	test   BYTE PTR [edi],0x20
  419717:	sbb    al,0x9e
  419719:	aad    0x24
  41971b:	out    0x69,al
  41971d:	and    al,0xcb
  41971f:	jg     0x4196ac
  419721:	adc    edx,esi
  419723:	shl    DWORD PTR [edx-0x9],0x15
  419727:	mov    edx,0x88ebb3c3
  41972c:	test   bh,cl
  41972e:	retf   0x8366
  419731:	retf   
  419732:	arpl   WORD PTR ds:0xe18b3e72,di
  419738:	ret    0xd3eb
  41973b:	test   al,0x60
  41973d:	xchg   esp,eax
  41973e:	ret    0x6f61
  419741:	jno    0x41975d
  419743:	mov    ebx,0x821a1cd3
  419748:	dec    ebx
  419749:	int3   
  41974a:	nop
  41974b:	out    dx,eax
  41974c:	stos   BYTE PTR es:[edi],al
  41974d:	add    esp,DWORD PTR [edi-0x4374e27a]
  419753:	sub    ebp,DWORD PTR [esi+0x15e72555]
  419759:	retf   
  41975a:	push   edx
  41975b:	arpl   WORD PTR [edi-0x72],bp
  41975e:	xchg   BYTE PTR [ebp-0x549b820a],ch
  419764:	popa   
  419765:	mov    al,0x54
  419767:	repz arpl WORD PTR [ecx+0x2ca23a46],dx
  41976e:	inc    edi
  41976f:	push   esi
  419770:	inc    eax
  419771:	or     al,0xe5
  419773:	xchg   DWORD PTR [ecx],ebx
  419775:	mov    ds:0xed03eafd,eax
  41977a:	retf   
  41977b:	je     0x419780
  41977d:	call   FWORD PTR [ebx+0x3d]
  419780:	mov    WORD PTR [ecx],cs
  419782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419783:	pop    ebx
  419784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419785:	ss enter 0xa29f,0xf5
  41978a:	dec    BYTE PTR [ebp+0x78384b0b]
  419790:	fs cdq 
  419792:	mov    ch,0xee
  419794:	pushf  
  419795:	lods   eax,DWORD PTR ds:[esi]
  419796:	or     eax,eax
  419798:	and    eax,ebx
  41979a:	jg     0x419757
  41979c:	fdiv   QWORD PTR [esi-0x48]
  41979f:	stos   BYTE PTR es:[edi],al
  4197a0:	mov    bh,0x3b
  4197a2:	data16 sti 
  4197a4:	mov    dh,0xa2
  4197a6:	std    
  4197a7:	push   0x75c65b7f
  4197ac:	inc    ebp
  4197ad:	iret   
  4197ae:	mov    al,0x67
  4197b0:	pop    esi
  4197b1:	adc    ecx,DWORD PTR [ebp-0x13]
  4197b4:	das    
  4197b5:	iret   
  4197b6:	pop    esi
  4197b7:	in     eax,0xdd
  4197b9:	es pop es
  4197bb:	cdq    
  4197bc:	cmp    eax,DWORD PTR cs:0xa097f8e0
  4197c3:	sbb    DWORD PTR [esi-0x3e413238],0xe
  4197ca:	ret    
  4197cb:	mov    ah,0xb1
  4197cd:	dec    ebx
  4197ce:	mov    esi,0x5f8f6b14
  4197d3:	mov    cl,BYTE PTR [eax]
  4197d5:	pop    esp
  4197d6:	add    al,0x51
  4197d8:	dec    edx
  4197d9:	add    al,BYTE PTR [edx]
  4197db:	cmp    ebx,DWORD PTR [ebx+0xf8e2892]
  4197e1:	ins    BYTE PTR es:[edi],dx
  4197e2:	leave  
  4197e3:	add    DWORD PTR [esi-0x1adfcb08],esi
  4197e9:	sbb    dh,al
  4197eb:	push   ebx
  4197ec:	mov    ds:0x10f7e55f,al
  4197f1:	push   ss
  4197f2:	inc    ebx
  4197f3:	mov    ch,0x98
  4197f5:	inc    ecx
  4197f6:	cli    
  4197f7:	jmp    0x580b2734
  4197fc:	cli    
  4197fd:	adc    DWORD PTR [edi-0x31],ebp
  419800:	add    bh,dl
  419802:	or     eax,0xb561fd
  419807:	test   DWORD PTR [esp+ecx*8+0x3e],0x9eb5ed73
  41980f:	sub    bl,BYTE PTR [ebp+ebp*4-0x59]
  419813:	adc    eax,0xb3d7e3a0
  419818:	sub    al,0x2f
  41981a:	(bad)  
  41981b:	mov    bl,0x68
  41981d:	adc    esi,ebx
  41981f:	clc    
  419820:	xor    BYTE PTR [eax+0x2ed335e6],0xd6
  419827:	imul   ebx,DWORD PTR [edx+ebp*8-0x6ead4ece],0xffffffbd
  41982f:	cmp    eax,0xb5d5d42
  419834:	sub    cl,BYTE PTR [esp+eax*4+0x14422356]
  41983b:	ins    BYTE PTR es:[edi],dx
  41983c:	inc    esp
  41983d:	sbb    ah,BYTE PTR [esi+eiz*2]
  419840:	add    ebx,0x1d
  419843:	add    al,0x1c
  419845:	popf   
  419846:	test   DWORD PTR [eax+eax*2-0x76],esi
  41984a:	adc    bh,bh
  41984c:	div    BYTE PTR [ebx-0x27]
  41984f:	in     al,dx
  419850:	in     eax,0x7e
  419852:	bound  esp,QWORD PTR [edx]
  419854:	outs   dx,DWORD PTR ds:[esi]
  419855:	push   ebx
  419856:	sub    DWORD PTR [ebp-0x1d1a92b3],ebx
  41985c:	xchg   ebp,eax
  41985d:	mov    eax,ds:0x89501a35
  419862:	in     eax,dx
  419863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419864:	push   cx
  419866:	fdiv   DWORD PTR [eax-0x5f]
  419869:	push   ds
  41986a:	jno    0x4198e9
  41986c:	cvtps2pd xmm1,xmm3
  41986f:	xchg   edi,eax
  419870:	aad    0x82
  419872:	je     0x4198bc
  419874:	pop    esp
  419875:	outs   dx,DWORD PTR ds:[esi]
  419876:	rcr    DWORD PTR [ecx],1
  419878:	dec    ecx
  419879:	mov    bh,0xf8
  41987b:	mov    ah,0x34
  41987d:	adc    DWORD PTR [ebp+0x5b],edi
  419880:	ins    BYTE PTR es:[edi],dx
  419881:	popf   
  419882:	aad    0x26
  419884:	pop    eax
  419885:	sub    al,0xbd
  419887:	out    dx,eax
  419888:	into   
  419889:	popf   
  41988a:	add    esp,DWORD PTR [eax]
  41988c:	push   edx
  41988d:	js     0x41986f
  41988f:	in     al,dx
  419890:	inc    ecx
  419891:	jmp    0x419885
  419893:	sub    dh,ch
  419895:	mov    esp,0x648bac8f
  41989a:	mov    bh,0xfd
  41989c:	push   cs
  41989d:	pop    esi
  41989e:	test   al,0x9e
  4198a0:	test   bl,bh
  4198a2:	xchg   ecx,eax
  4198a3:	push   eax
  4198a4:	inc    esp
  4198a5:	pop    ecx
  4198a6:	pop    esi
  4198a7:	sbb    ebx,edx
  4198a9:	mov    ah,0x69
  4198ab:	sbb    al,0xb6
  4198ad:	jge    0x41989d
  4198af:	(bad)  
  4198b0:	shl    BYTE PTR [edi-0x34c9f7f6],cl
  4198b6:	sti    
  4198b7:	scas   eax,DWORD PTR es:[edi]
  4198b8:	cmp    BYTE PTR [ecx],ah
  4198ba:	jge    0x419906
  4198bc:	jmp    0x41986d
  4198be:	bound  esi,QWORD PTR [ebx-0x48]
  4198c1:	fwait
  4198c2:	adc    dl,BYTE PTR [ecx-0x33ae9500]
  4198c8:	fisub  DWORD PTR [ebx]
  4198ca:	rcl    esp,0xee
  4198cd:	outs   dx,DWORD PTR ds:[esi]
  4198ce:	mov    dh,0xff
  4198d0:	adc    eax,0x7d56429a
  4198d5:	pop    esp
  4198d6:	pop    esi
  4198d7:	pusha  
  4198d8:	ins    BYTE PTR es:[edi],dx
  4198d9:	inc    esp
  4198da:	int3   
  4198db:	pop    ds
  4198dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198dd:	fist   DWORD PTR [edx+0x7f]
  4198e0:	test   al,0x23
  4198e2:	sbb    dh,BYTE PTR [ebp-0x1e]
  4198e5:	ins    BYTE PTR es:[edi],dx
  4198e6:	(bad)  
  4198e7:	iret   
  4198e8:	sbb    WORD PTR [eax],dx
  4198eb:	lahf   
  4198ec:	xor    eax,0xabcbe8e6
  4198f1:	outs   dx,DWORD PTR ds:[esi]
  4198f2:	js     0x4198dd
  4198f4:	loope  0x419937
  4198f6:	add    BYTE PTR [ebp+0x36],bl
  4198f9:	fwait
  4198fa:	dec    ecx
  4198fb:	mov    WORD PTR [ecx+0x3601d956],ss
  419901:	jecxz  0x419949
  419903:	cwde   
  419904:	xchg   edi,eax
  419905:	loopne 0x4198c4
  419907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419908:	(bad)  
  419909:	pop    di
  41990b:	aam    0x78
  41990d:	popa   
  41990e:	lods   eax,DWORD PTR ds:[esi]
  41990f:	jnp    0x4198af
  419911:	add    DWORD PTR [edi+0x26],edi
  419914:	cmp    al,0x39
  419916:	push   ss
  419917:	xor    DWORD PTR [ecx-0x5e],edi
  41991a:	mov    ds:0x88c105c,eax
  41991f:	or     BYTE PTR [esi+0x7543c026],bl
  419925:	or     DWORD PTR [esi],0xfffffff1
  419928:	jae    0x4198c5
  41992a:	dec    edi
  41992b:	js     0x41994b
  41992d:	jl     0x4198d0
  41992f:	nop
  419930:	lds    eax,FWORD PTR [edi-0x79]
  419933:	add    ch,bl
  419935:	or     bl,BYTE PTR ds:0x9368dcd7
  41993b:	lds    ebx,FWORD PTR [esi]
  41993d:	inc    esi
  41993e:	int    0x2b
  419940:	push   ds
  419941:	hlt    
  419942:	stc    
  419943:	cmc    
  419944:	mov    ds:0x1f9600b7,eax
  419949:	cmp    BYTE PTR [edx+0x37935481],bl
  41994f:	out    dx,eax
  419950:	inc    edx
  419951:	mov    edi,0xd7253533
  419956:	xchg   BYTE PTR cs:[edi],dl
  419959:	(bad)  
  41995b:	cmp    al,0xf9
  41995d:	hlt    
  41995e:	adc    bl,cl
  419960:	int3   
  419961:	ss inc edx
  419963:	out    0xfa,al
  419965:	call   0xf7ac:0x393fe827
  41996c:	add    al,0xcf
  41996e:	nop
  41996f:	mov    edx,0x11ddf7d9
  419974:	mov    esp,0x8a363b22
  419979:	inc    eax
  41997a:	or     ecx,DWORD PTR [eax+0x41]
  41997d:	xchg   DWORD PTR [edx],ebx
  41997f:	xor    bl,BYTE PTR [edx+eiz*4]
  419982:	pop    esp
  419983:	xor    eax,0x9eb35352
  419988:	inc    ebp
  419989:	pop    ds
  41998a:	je     0x41996b
  41998c:	stc    
  41998d:	test   DWORD PTR [edx],ebp
  41998f:	adc    al,0x1c
  419991:	sbb    bl,dh
  419993:	aaa    
  419994:	cmp    ebp,DWORD PTR [esi-0x1b038f84]
  41999a:	push   ss
  41999b:	test   al,0x3c
  41999d:	adc    BYTE PTR [edx+0x4e505e28],cl
  4199a3:	ret    0x8ed5
  4199a6:	test   al,0x10
  4199a8:	pop    eax
  4199a9:	je     0x4199f5
  4199ab:	mov    edi,0x3d8078b6
  4199b0:	sub    ecx,esi
  4199b2:	shl    dl,0x9a
  4199b5:	cmp    al,0x34
  4199b7:	repnz scas eax,DWORD PTR es:[edi]
  4199b9:	shr    DWORD PTR [edx+0x103ce],1
  4199bf:	mov    DWORD PTR [ebx-0x47c76162],edx
  4199c5:	dec    edi
  4199c6:	enter  0x91be,0xbb
  4199ca:	aad    0x93
  4199cc:	lock adc DWORD PTR ds:0x52255398,esi
  4199d3:	dec    ebp
  4199d4:	rcl    BYTE PTR [ecx+0xf],cl
  4199d7:	jle    0x419a0f
  4199d9:	cmp    eax,0x1d368022
  4199de:	sbb    DWORD PTR [esi-0x771d5573],0x21
  4199e5:	cwde   
  4199e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199e7:	inc    eax
  4199e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199e9:	or     cl,cl
  4199eb:	push   ebx
  4199ec:	mov    ?,ebp
  4199ee:	jo     0x419a14
  4199f0:	or     eax,0xb121f8b4
  4199f5:	(bad)  
  4199f7:	lea    eax,ds:0x300f8a29
  4199fd:	jmp    0x6af9:0x53353a5a
  419a04:	sbb    DWORD PTR [eax-0x5c],ebx
  419a07:	mov    ebp,eax
  419a09:	pop    ebx
  419a0a:	inc    ebp
  419a0b:	(bad)  
  419a0c:	shl    DWORD PTR [ebx-0x79f37474],1
  419a12:	inc    ebp
  419a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a14:	ds stc 
  419a16:	push   ebx
  419a17:	mov    ah,0xad
  419a19:	sbb    DWORD PTR [edx-0x256bb41],ecx
  419a1f:	fld    QWORD PTR [edi]
  419a21:	sti    
  419a22:	sbb    BYTE PTR [ebp-0xf],cl
  419a25:	push   es
  419a26:	xchg   esp,eax
  419a27:	dec    edi
  419a28:	push   ebx
  419a29:	mov    cl,0xbe
  419a2b:	mov    eax,0xc90faee5
  419a30:	addr16 mov eax,0x5b473c24
  419a36:	push   ds
  419a37:	fsub   st(6),st
  419a39:	clc    
  419a3a:	clc    
  419a3b:	mov    ds:0x3cad5838,al
  419a40:	xor    BYTE PTR [eax],dh
  419a42:	cwde   
  419a43:	cmp    al,0xd6
  419a45:	dec    ecx
  419a46:	jp     0x419a6f
  419a48:	outs   dx,DWORD PTR ds:[esi]
  419a49:	and    BYTE PTR [ebx],ch
  419a4b:	sar    DWORD PTR [esi],1
  419a4d:	scas   al,BYTE PTR es:[edi]
  419a4e:	jge    0x419a2d
  419a50:	sar    DWORD PTR [ebp+esi*4+0x134fc6f1],1
  419a57:	ins    BYTE PTR es:[edi],dx
  419a58:	xchg   esi,eax
  419a59:	ins    BYTE PTR es:[edi],dx
  419a5a:	add    DWORD PTR [ebx-0xc],0x5f
  419a5e:	mov    ch,0x8c
  419a60:	int3   
  419a61:	and    dh,BYTE PTR [edi]
  419a63:	sub    eax,0x1d14c674
  419a68:	cdq    
  419a69:	jnp    0x419a90
  419a6b:	stos   DWORD PTR es:[edi],eax
  419a6c:	adc    edi,ebx
  419a6e:	leave  
  419a6f:	cmp    ecx,0x753f9366
  419a75:	ja     0x419a04
  419a77:	or     DWORD PTR [esi],esi
  419a79:	out    0x99,al
  419a7b:	scas   al,BYTE PTR es:[edi]
  419a7c:	cmp    al,0x53
  419a7e:	pop    esp
  419a7f:	outs   dx,BYTE PTR ds:[esi]
  419a80:	fsubr  st(3),st
  419a82:	xchg   ebx,eax
  419a83:	sar    DWORD PTR [ebx],0x24
  419a86:	js     0x419a8f
  419a88:	ja     0x419ab7
  419a8a:	lods   eax,DWORD PTR ds:[esi]
  419a8b:	dec    ecx
  419a8c:	pop    es
  419a8d:	xor    DWORD PTR [ebx+0x40],ecx
  419a90:	dec    esp
  419a91:	dec    edx
  419a92:	sbb    dl,BYTE PTR [ecx+0x4b]
  419a95:	mov    bh,ch
  419a97:	retf   
  419a98:	sti    
  419a99:	mov    BYTE PTR [esi-0x7746f9b2],al
  419a9f:	mov    edi,0x7deed34b
  419aa4:	xchg   BYTE PTR [ebp+0x2e352306],ah
  419aaa:	jmp    0x419a92
  419aac:	and    DWORD PTR [esi-0x323c2e9e],eax
  419ab2:	icebp  
  419ab3:	sbb    eax,0x4052a2b7
  419ab8:	imul   ecx,DWORD PTR [edi],0xba5c89e0
  419abe:	stc    
  419abf:	stos   BYTE PTR es:[edi],al
  419ac0:	sub    DWORD PTR [esi*4-0x60899e6b],esi
  419ac7:	mov    esp,0xa30937c5
  419acc:	fdiv   DWORD PTR [edi]
  419ace:	in     al,dx
  419acf:	sbb    DWORD PTR [ebp-0xf],ebx
  419ad2:	(bad)  
  419ad3:	adc    eax,0x99b89bf4
  419ad8:	adc    dh,ah
  419ada:	mov    cs,WORD PTR [ecx-0x46bb4740]
  419ae0:	adc    DWORD PTR [eax],0x12
  419ae3:	adc    ch,dl
  419ae5:	loopne 0x419b35
  419ae7:	loop   0x419adc
  419ae9:	cmp    BYTE PTR [eax-0x25],dl
  419aec:	dec    esp
  419aed:	popa   
  419aee:	loop   0x419a96
  419af0:	jno    0x419ab3
  419af2:	pop    ecx
  419af3:	repnz lods eax,DWORD PTR ds:[esi]
  419af5:	xchg   esi,eax
  419af6:	shl    BYTE PTR [ebp+0x59902910],1
  419afc:	rcr    BYTE PTR [ecx+0x2a2dd49c],cl
  419b02:	mov    cl,0x48
  419b04:	xor    BYTE PTR [esi-0xa],bh
  419b07:	push   ds
  419b08:	out    dx,al
  419b09:	dec    ebx
  419b0a:	movhps xmm3,QWORD PTR [eax]
  419b0d:	test   al,0xb3
  419b0f:	jo     0x419af0
  419b11:	sbb    ebx,DWORD PTR [ecx]
  419b13:	fdiv   QWORD PTR [ebp+0x46469fdd]
  419b19:	lea    ebp,[eax]
  419b1b:	ret    
  419b1c:	inc    esp
  419b1d:	int    0xf1
  419b1f:	cwde   
  419b20:	sub    eax,0x37449c61
  419b25:	nop
  419b26:	mov    ch,0x7f
  419b28:	repnz cmp eax,0xcf22617
  419b2e:	sub    al,BYTE PTR [edx+0x37b8b61e]
  419b34:	xchg   ecx,eax
  419b35:	sbb    BYTE PTR [ebx-0x6a],ah
  419b38:	mov    ebx,0x3d41cc58
  419b3d:	fistp  WORD PTR [eax+edi*8]
  419b40:	mov    eax,ds:0xc1f9e1c
  419b45:	xchg   edi,eax
  419b46:	rcl    ecx,1
  419b48:	push   ds
  419b49:	in     eax,0xe8
  419b4b:	lock repz aam 0x3f
  419b4f:	inc    ebx
  419b50:	mov    ebp,0xc1e5e3f4
  419b55:	mov    eax,ds:0x15126e09
  419b5a:	pop    esi
  419b5b:	int3   
  419b5c:	test   BYTE PTR [ebx],ah
  419b5e:	aaa    
  419b5f:	into   
  419b60:	pop    edx
  419b61:	cmp    BYTE PTR [esi],0xb3
  419b64:	sub    al,0x3e
  419b66:	mov    dl,0xfc
  419b68:	adc    al,0xb1
  419b6a:	pushf  
  419b6b:	stos   DWORD PTR es:[edi],eax
  419b6c:	ins    DWORD PTR es:[edi],dx
  419b6d:	adc    BYTE PTR [ebx],ah
  419b6f:	mov    DWORD PTR [esi+ebp*2+0x24ee47ae],edi
  419b76:	pusha  
  419b77:	jg     0x419ba6
  419b79:	ja     0x419b66
  419b7b:	add    BYTE PTR [eax+0xe143c40],al
  419b81:	add    BYTE PTR [ecx-0x503c3de5],dl
  419b87:	jns    0x419c00
  419b89:	(bad)  
  419b8a:	push   eax
  419b8b:	dec    edi
  419b8c:	mov    BYTE PTR [ebp+0x73],bh
  419b8f:	repz xchg ebx,eax
  419b91:	adc    BYTE PTR [edi-0x71f60650],bh
  419b97:	cmp    dl,BYTE PTR [ebp+esi*2+0x3c95a936]
  419b9e:	daa    
  419b9f:	out    dx,al
  419ba0:	retf   
  419ba1:	add    eax,0x4624a682
  419ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ba7:	mov    DWORD PTR [edi],edx
  419ba9:	adc    al,0x90
  419bab:	xchg   ebx,eax
  419bac:	xor    DWORD PTR [ecx+ecx*2+0x5e07b854],eax
  419bb3:	gs sbb eax,0x7d7e07a1
  419bb9:	push   ss
  419bba:	sti    
  419bbb:	in     al,dx
  419bbc:	ss mov al,0xa3
  419bbf:	mov    al,0xf6
  419bc1:	add    BYTE PTR [ebx+0x30],bh
  419bc4:	sub    BYTE PTR [eax+0x52],cl
  419bc7:	xor    DWORD PTR ds:0x457bd04a,edx
  419bcd:	adc    dh,BYTE PTR ds:0x1ad276f6
  419bd3:	scas   eax,DWORD PTR es:[edi]
  419bd4:	cmp    dh,BYTE PTR [ecx+0x57d1d8fe]
  419bda:	fistp  DWORD PTR [ecx]
  419bdc:	(bad)  [edx]
  419bde:	mov    ds:0xa13ba312,eax
  419be3:	cmp    BYTE PTR [ecx+edi*8+0x1f],cl
  419be7:	and    dh,BYTE PTR [eax]
  419be9:	jo     0x419bf5
  419beb:	fistp  DWORD PTR [esi]
  419bed:	cwde   
  419bee:	xor    DWORD PTR [ebp-0x77],eax
  419bf1:	jl     0x419c47
  419bf3:	xchg   edi,eax
  419bf4:	ret    
  419bf5:	dec    edi
  419bf6:	pop    es
  419bf7:	dec    edx
  419bf8:	les    ecx,FWORD PTR [eax-0x7]
  419bfb:	and    ecx,DWORD PTR [ecx-0x71]
  419bfe:	sub    DWORD PTR [ebp-0x29],esi
  419c01:	cmp    dl,0x77
  419c04:	sar    esi,0x49
  419c07:	sbb    DWORD PTR [ebp+0x4a],edi
  419c0a:	int3   
  419c0b:	sbb    BYTE PTR [ebp-0x7c5c688c],0xd6
  419c12:	push   0xf4a61bf6
  419c17:	mov    edx,0x9f20d516
  419c1c:	(bad)  
  419c1e:	ja     0x419c5c
  419c20:	push   ss
  419c21:	push   0x605428ba
  419c26:	push   ecx
  419c27:	mov    dh,0x59
  419c29:	mov    dh,0x7c
  419c2b:	and    ecx,DWORD PTR [ebp+0x45fc5256]
  419c31:	out    0x60,eax
  419c33:	xor    BYTE PTR [eax],al
  419c35:	repnz push ebx
  419c37:	mov    dl,0x5
  419c39:	pop    ecx
  419c3a:	add    esp,DWORD PTR [ecx]
  419c3c:	push   eax
  419c3d:	ret    0x6385
  419c40:	mov    ah,0xb7
  419c42:	jp     0x419c36
  419c44:	sbb    BYTE PTR [ebx-0x37],0xd4
  419c48:	fnstenv es:[ebp-0x1b]
  419c4c:	or     WORD PTR [edi+ebp*1],0xffe6
  419c51:	inc    eax
  419c52:	add    DWORD PTR [ecx-0x7e0d4396],ebx
  419c58:	cdq    
  419c59:	xlat   BYTE PTR ds:[ebx]
  419c5a:	test   al,0xd6
  419c5c:	pop    es
  419c5d:	aad    0xdb
  419c5f:	jae    0x419c0b
  419c61:	or     ebp,eax
  419c63:	sbb    edi,ebx
  419c65:	jge    0x419c02
  419c67:	dec    esi
  419c68:	mov    ch,0x34
  419c6a:	sub    ah,BYTE PTR [edi]
  419c6c:	test   DWORD PTR [ebx],esi
  419c6e:	loope  0x419cec
  419c70:	mov    ebx,0x10b55088
  419c75:	imul   esp,DWORD PTR ds:[esi+0x323ea96c],0x39e4e320
  419c80:	pop    ebx
  419c81:	(bad)
  419c84:	pop    edi
  419c85:	inc    ebp
  419c86:	pop    ecx
  419c87:	jae    0x419c2b
  419c89:	nop
  419c8a:	dec    edx
  419c8b:	cmc    
  419c8c:	outs   dx,BYTE PTR ds:[esi]
  419c8d:	mov    cl,0xb8
  419c8f:	mov    al,0xb9
  419c91:	sbb    eax,ecx
  419c93:	pop    ebp
  419c94:	je     0x419c42
  419c96:	and    DWORD PTR [edx+0x52],eax
  419c99:	lea    eax,ds:0xb481c5dc
  419c9f:	lds    ecx,FWORD PTR [eax+0x53b3b945]
  419ca5:	pop    ds
  419ca6:	inc    edi
  419ca7:	inc    eax
  419ca8:	outs   dx,BYTE PTR ds:[esi]
  419ca9:	out    0xb7,eax
  419cab:	loop   0x419d03
  419cad:	xor    BYTE PTR [eax-0x7674445c],cl
  419cb3:	lock pop ecx
  419cb5:	push   esp
  419cb6:	or     ah,BYTE PTR [edx+ebx*2-0x25]
  419cba:	pop    ss
  419cbb:	cwde   
  419cbc:	aad    0xe6
  419cbe:	mov    bh,0xe
  419cc0:	or     ebx,DWORD PTR [ebx-0x482f94a2]
  419cc6:	xor    al,0xd9
  419cc8:	lea    esi,[ecx-0x291e2a71]
  419cce:	lock xchg BYTE PTR [ebp+ecx*2+0x35742fb],bh
  419cd6:	shl    DWORD PTR [ebp+0x50],0xb9
  419cda:	xor    BYTE PTR [esi],dh
  419cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cdd:	repnz push esi
  419cdf:	inc    ebx
  419ce0:	mov    ah,0x75
  419ce2:	dec    esp
  419ce3:	ret    
  419ce4:	xchg   eax,eax
  419ce6:	inc    edi
  419ce7:	ja     0x419d1f
  419ce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cea:	cmp    al,0x7f
  419cec:	(bad)  
  419ced:	out    dx,al
  419cee:	fsub   QWORD PTR [ecx+0x168c1a6a]
  419cf4:	mov    esp,DWORD PTR [edx-0x28]
  419cf7:	sahf   
  419cf8:	lahf   
  419cf9:	mov    bh,ch
  419cfb:	add    DWORD PTR [esi+ebx*2+0x75],esi
  419cff:	retf   0xf58b
  419d02:	add    BYTE PTR [ecx+ecx*1-0x70],cl
  419d06:	mov    al,ds:0x8325fa
  419d0b:	push   esp
  419d0c:	push   cs
  419d0d:	jmp    0xbcc8:0x525e1d63
  419d14:	lock mov ds:0x10013fd2,eax
  419d1a:	dec    eax
  419d1b:	mov    bl,0x43
  419d1d:	and    BYTE PTR [ebx+0x1ae31dd9],ch
  419d23:	pushf  
  419d24:	pop    ecx
  419d25:	jmp    0xcb7cef76
  419d2a:	cmp    BYTE PTR [ebx-0x33125746],bl
  419d30:	out    0xa1,al
  419d32:	jmp    0x4bc2433f
  419d37:	add    DWORD PTR [ebx-0x20],edx
  419d3a:	das    
  419d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d3c:	inc    ebp
  419d3d:	nop
  419d3e:	jbe    0x419cd5
  419d40:	mov    bl,0x36
  419d42:	cmp    al,BYTE PTR [edi]
  419d44:	mov    cl,0x22
  419d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d47:	mov    bl,0xf5
  419d49:	enter  0x21c2,0x84
  419d4d:	fsubr  DWORD PTR [edx]
  419d4f:	(bad)  
  419d50:	hlt    
  419d51:	xor    DWORD PTR [esi+0x6fe6eeb6],ecx
  419d57:	sbb    DWORD PTR [edi-0x1b06531f],0x56a97d55
  419d61:	outs   dx,BYTE PTR ds:[esi]
  419d62:	pop    esi
  419d63:	jmp    0xdf2291f
  419d68:	icebp  
  419d69:	xchg   ecx,eax
  419d6a:	and    bl,ah
  419d6c:	add    DWORD PTR ds:0x14fcd88c,eax
  419d72:	sub    eax,0x81abde27
  419d77:	int3   
  419d78:	in     al,dx
  419d79:	mov    ah,0x77
  419d7b:	dec    ebx
  419d7c:	fwait
  419d7d:	sbb    eax,0xb4b3f291
  419d82:	mov    edx,0x73ad2633
  419d87:	push   cs
  419d88:	call   DWORD PTR [esp+eax*8+0x10]
  419d8c:	jne    0x419dbf
  419d8e:	bound  eax,QWORD PTR [edx-0x40]
  419d91:	pop    ds
  419d92:	xchg   sp,ax
  419d94:	mov    esi,0x5c17350e
  419d99:	mov    eax,DWORD PTR [eax-0x4c]
  419d9c:	addr16 sub eax,0x80ca6d4d
  419da2:	fsubr  QWORD PTR [edi+edi*4+0x7e1bc8bf]
  419da9:	fs xchg ebp,eax
  419dab:	mov    ebp,0x3bdce672
  419db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419db1:	mov    ah,0x30
  419db3:	push   ds
  419db4:	retf   
  419db5:	das    
  419db6:	xchg   ebx,eax
  419db7:	sub    BYTE PTR [eax],dh
  419db9:	jmp    0x419e4a57
  419dbe:	sbb    BYTE PTR [esi+0x51],0xa0
  419dc2:	jle    0x419d48
  419dc4:	jmp    0xdab9:0x9dcfc636
  419dcb:	(bad)  
  419dcd:	dec    esi
  419dce:	enter  0x2293,0x31
  419dd2:	jmp    0xcaa2:0x70360d76
  419dd9:	and    DWORD PTR [edi],edx
  419ddb:	adc    DWORD PTR [edi-0x56],esp
  419dde:	xchg   dl,bh
  419de0:	out    dx,eax
  419de1:	clc    
  419de2:	out    0xf3,al
  419de4:	mov    ah,BYTE PTR [ecx-0x24]
  419de7:	(bad)  
  419de8:	mov    eax,ds:0xc0baeafb
  419ded:	push   cs
  419dee:	add    ch,BYTE PTR [ebx*1+0xa51e989]
  419df5:	adc    DWORD PTR [ecx+0x2663dd53],ecx
  419dfb:	leave  
  419dfc:	adc    BYTE PTR [ebx],ah
  419dfe:	fild   QWORD PTR [edi-0x47]
  419e01:	fisttp DWORD PTR [ecx+0x44]
  419e04:	bound  esi,QWORD PTR es:[edx+0x67]
  419e08:	call   DWORD PTR [esi]
  419e0a:	sahf   
  419e0b:	mov    edx,0x8e72c62d
  419e10:	fstp   TBYTE PTR [ecx+0x3b]
  419e13:	push   es
  419e14:	outs   dx,DWORD PTR ds:[esi]
  419e15:	shr    DWORD PTR [esp+0x29],cl
  419e19:	jp     0x419dcf
  419e1b:	cs pop ss
  419e1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e1e:	mov    ah,0x58
  419e20:	mov    edi,0x5e816a7c
  419e25:	jne    0x419e19
  419e27:	sbb    esi,ebx
  419e29:	push   edx
  419e2a:	add    ebp,ebx
  419e2c:	cmp    edx,0x46
  419e2f:	mov    ds:0x1107458a,eax
  419e34:	mov    eax,0xb6f6f7d
  419e39:	stos   BYTE PTR es:[edi],al
  419e3a:	ds jle 0x396d26c9
  419e41:	fs femms 
  419e44:	sub    dl,bl
  419e46:	jmp    0x9f95fd6b
  419e4b:	ror    DWORD PTR [ebx-0x371b94e4],cl
  419e51:	call   0x6b2c:0x4f1fabcb
  419e58:	out    dx,al
  419e59:	pop    edx
  419e5a:	jmp    0x419e57
  419e5c:	mov    ch,0x81
  419e5e:	into   
  419e5f:	inc    edx
  419e60:	stc    
  419e61:	pop    ebp
  419e62:	std    
  419e63:	scas   al,BYTE PTR es:[edi]
  419e64:	(bad)  
  419e65:	out    dx,eax
  419e66:	int3   
  419e67:	jo     0x419ea3
  419e69:	shl    BYTE PTR [ebp+0x147165c5],cl
  419e6f:	adc    bl,0x98
  419e72:	push   ebp
  419e73:	adc    edi,ebx
  419e75:	sahf   
  419e76:	retf   
  419e77:	rep ins DWORD PTR es:[edi],dx
  419e79:	shl    BYTE PTR [ecx-0x7e],1
  419e7c:	xchg   BYTE PTR [eax+0x53caf6b4],cl
  419e82:	sub    eax,0x29960513
  419e87:	mov    ebp,0xbdd42bde
  419e8c:	adc    DWORD PTR [ebx],0xf72bcfa1
  419e92:	push   edx
  419e93:	iret   
  419e94:	cwde   
  419e95:	mov    edi,0x9ffb6e08
  419e9a:	fadd   QWORD PTR [edi+0x63]
  419e9d:	dec    esp
  419e9e:	les    ebx,FWORD PTR [edi+0x61918784]
  419ea4:	stos   DWORD PTR es:[edi],eax
  419ea5:	jno    0x419e82
  419ea7:	leave  
  419ea8:	cmp    DWORD PTR [edi],ebx
  419eaa:	rcr    DWORD PTR [edx],cl
  419eac:	pop    edx
  419ead:	cmp    al,0xb8
  419eaf:	or     eax,DWORD PTR [ecx+edi*1-0x7ee11e5f]
  419eb6:	jo     0x419f14
  419eb8:	pop    esi
  419eb9:	push   eax
  419eba:	mov    esp,ebx
  419ebc:	jmp    0x31cf:0xac9d0962
  419ec3:	fucomi st,st(7)
  419ec5:	jmpw   0xf8ee
  419ec9:	mov    dh,0x81
  419ecb:	hlt    
  419ecc:	inc    ecx
  419ecd:	fldcw  WORD PTR [eax-0x5423ccd3]
  419ed3:	push   ecx
  419ed4:	daa    
  419ed5:	fmul   st,st(6)
  419ed7:	mov    ecx,0x784b34b8
  419edc:	hlt    
  419edd:	loopne 0x419f4f
  419edf:	xlat   BYTE PTR ds:[ebx]
  419ee0:	sub    dl,ah
  419ee2:	ins    BYTE PTR es:[edi],dx
  419ee3:	not    DWORD PTR [ecx+0xc9eea10]
  419ee9:	lahf   
  419eea:	inc    ebp
  419eeb:	loopne 0x419ebf
  419eed:	jmp    0xeb4b:0xf3a380a7
  419ef4:	xor    eax,0x7182dc51
  419ef9:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  419efb:	or     ebx,DWORD PTR [ecx+0x4986a6fa]
  419f01:	mov    ebp,0xec43ea6e
  419f06:	mov    esp,DWORD PTR [ecx-0x47]
  419f09:	outs   dx,BYTE PTR ds:[esi]
  419f0a:	xor    ch,BYTE PTR [esi+0xb]
  419f0d:	and    eax,0x62723578
  419f12:	mov    esi,0xbc5c9416
  419f17:	pop    ebp
  419f18:	pop    edi
  419f19:	inc    esp
  419f1a:	test   DWORD PTR [edx+0xb],esi
  419f1d:	sbb    DWORD PTR [ecx-0x4a],ebx
  419f20:	pop    esi
  419f21:	mov    edi,0xc8173e99
  419f26:	(bad)  
  419f27:	cmp    bh,ch
  419f29:	or     ebp,eax
  419f2b:	xor    BYTE PTR [edx+0xa8a608b],al
  419f31:	push   ebx
  419f32:	imul   ecx,DWORD PTR [edi],0x9576d1b1
  419f38:	pop    esi
  419f39:	push   edx
  419f3a:	pop    esi
  419f3b:	fcomp  DWORD PTR [edi-0x39]
  419f3e:	ret    
  419f3f:	repz adc DWORD PTR [eax-0x12],0xf9f023
  419f47:	pop    ebp
  419f48:	ins    BYTE PTR es:[edi],dx
  419f49:	push   ds
  419f4a:	call   0x2a063385
  419f4f:	sub    eax,0x3e6d96bc
  419f54:	jns    0x419f9b
  419f56:	xor    ebp,esi
  419f58:	jmp    0xfaf6:0x4c2fcdb2
  419f5f:	mov    eax,ds:0x2330f1f6
  419f64:	arpl   WORD PTR [ebx-0x25f53625],dx
  419f6a:	sbb    bl,BYTE PTR [edi-0x2bb763b8]
  419f70:	ror    DWORD PTR [ecx-0x12b52bfc],cl
  419f76:	addr16 test al,0x3d
  419f79:	mov    cl,0xf2
  419f7b:	push   0xe9ed5457
  419f80:	inc    edx
  419f81:	jmp    0x419f82
  419f83:	mov    dl,0xca
  419f85:	pop    ds
  419f86:	scas   al,BYTE PTR es:[edi]
  419f87:	cmp    eax,0xd321c114
  419f8c:	nop
  419f8d:	pop    es
  419f8e:	pop    es
  419f8f:	(bad)
  419f92:	pop    ds
  419f93:	sub    esi,DWORD PTR [ecx+0x52]
  419f96:	(bad)  
  419f97:	clc    
  419f98:	dec    edi
  419f99:	leave  
  419f9a:	test   al,0x9b
  419f9c:	mov    dh,0xc8
  419f9e:	xchg   esi,eax
  419f9f:	adc    bh,BYTE PTR [ebp-0x5398b9c8]
  419fa5:	ss jne 0x419f2a
  419fa8:	add    edx,DWORD PTR [edi+0x35c00c3b]
  419fae:	pop    eax
  419faf:	push   0xffffffdb
  419fb1:	xchg   edx,eax
  419fb2:	or     esi,DWORD PTR [esi]
  419fb4:	fldenv [edx-0x25]
  419fb7:	out    dx,eax
  419fb8:	(bad)  
  419fb9:	std    
  419fba:	mov    dh,0x8
  419fbc:	sub    DWORD PTR [eax-0x5f],edi
  419fbf:	cld    
  419fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fc1:	dec    ebx
  419fc2:	jb     0x41a010
  419fc4:	inc    esi
  419fc5:	iret   
  419fc6:	mov    bl,0x31
  419fc8:	fst    DWORD PTR [edx-0x6e]
  419fcb:	sub    BYTE PTR ds:0xb5f13810,dh
  419fd1:	jge    0x419f6c
  419fd3:	(bad)  
  419fd5:	adc    DWORD PTR [ecx],edi
  419fd7:	sbb    DWORD PTR [edx+0x67d5c23d],0x3c521ae5
  419fe1:	loopne 0x41a04a
  419fe3:	(bad)  
  419fe4:	rcr    BYTE PTR [ebx+0x403403c1],1
  419fea:	into   
  419feb:	cli    
  419fec:	mov    al,ds:0x552ae6a1
  419ff1:	imul   esi,ebx,0xffffff9e
  419ff4:	push   esp
  419ff5:	imul   edx,esp,0xffffffac
  419ff8:	cmc    
  419ff9:	jae    0x419ffd
  419ffb:	fimul  DWORD PTR [edx+edi*4-0x6f90302b]
  41a002:	add    ebx,DWORD PTR [eax]
  41a004:	lock dec eax
  41a006:	jb     0x419f97
  41a008:	pop    esi
  41a009:	push   cs
  41a00a:	dec    esi
  41a00b:	hlt    
  41a00c:	out    0xb0,eax
  41a00e:	cmp    DWORD PTR [eax-0x71cb042b],esi
  41a014:	sbb    al,BYTE PTR [esi-0x6f7efacd]
  41a01a:	dec    edx
  41a01b:	jmp    0xcafa:0x1169fa52
  41a022:	addr16 out dx,eax
  41a024:	lods   al,BYTE PTR ds:[esi]
  41a025:	push   edi
  41a026:	add    BYTE PTR [ebx+edi*8],0x57
  41a02a:	add    BYTE PTR [ecx],ch
  41a02c:	in     eax,dx
  41a02d:	aaa    
  41a02e:	imul   ecx,DWORD PTR [ecx+0xb],0x22
  41a032:	or     DWORD PTR [eax+ecx*8],esi
  41a035:	in     eax,dx
  41a036:	inc    edx
  41a037:	adc    BYTE PTR [ebx],0x5c
  41a03a:	add    esi,ecx
  41a03c:	test   ecx,edx
  41a03e:	aad    0x9f
  41a040:	mov    ah,0x2d
  41a042:	or     ch,BYTE PTR ds:0x47f9570e
  41a048:	pop    ecx
  41a049:	xor    bh,BYTE PTR [edx+0x70]
  41a04c:	mov    al,0x74
  41a04e:	pop    ss
  41a04f:	imul   edi,DWORD PTR [edi+0x77],0x736a2ab
  41a056:	fisubr WORD PTR [edx+eiz*1+0x22]
  41a05a:	push   ecx
  41a05b:	sub    ecx,0x37811bc7
  41a061:	aas    
  41a062:	aas    
  41a063:	ins    DWORD PTR es:[edi],dx
  41a064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a065:	xor    al,0xf6
  41a067:	sti    
  41a068:	ss in  eax,0x50
  41a06b:	pop    es
  41a06c:	shl    esi,1
  41a06e:	push   cs
  41a06f:	fwait
  41a070:	sbb    al,0x5b
  41a072:	das    
  41a073:	mov    esi,0xeb924429
  41a078:	xchg   edi,ecx
  41a07a:	sub    edi,DWORD PTR ds:0x7bc2a0b4
  41a080:	mov    bl,0x72
  41a082:	pop    ebx
  41a083:	dec    eax
  41a084:	mov    al,0x6e
  41a086:	xor    edx,DWORD PTR [edx]
  41a088:	loop   0x41a03a
  41a08a:	xor    DWORD PTR [edx],ebp
  41a08c:	addr16 adc al,0x4b
  41a08f:	cwde   
  41a090:	aad    0x5e
  41a092:	ret    
  41a093:	(bad)  
  41a094:	cmc    
  41a095:	sub    bh,BYTE PTR [ebx]
  41a097:	xchg   edx,eax
  41a098:	fld    DWORD PTR [ebp+0x0]
  41a09b:	dec    ebp
  41a09c:	shl    al,1
  41a09e:	test   al,0x8e
  41a0a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0a1:	loope  0x41a0d2
  41a0a3:	dec    ebx
  41a0a4:	fsub   st(3),st
  41a0a6:	fwait
  41a0a7:	pop    eax
  41a0a8:	or     dh,BYTE PTR [esi-0x7a]
  41a0ab:	inc    esp
  41a0ac:	sar    DWORD PTR [edi-0x37],0xe4
  41a0b0:	loopne 0x41a0cf
  41a0b2:	cmp    bl,0x8e
  41a0b5:	ds cmc 
  41a0b7:	stos   DWORD PTR es:[edi],eax
  41a0b8:	aaa    
  41a0b9:	jb     0x41a0b2
  41a0bb:	add    ecx,DWORD PTR [ebp+0xc]
  41a0be:	mov    DWORD PTR [ecx-0x5b],esi
  41a0c1:	pop    edx
  41a0c2:	pop    ds
  41a0c3:	add    eax,0xff5b4b38
  41a0c8:	jp     0x41a04f
  41a0ca:	adc    al,0xc0
  41a0cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0cd:	out    dx,eax
  41a0ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0cf:	sbb    ebx,DWORD PTR [esi+edi*4-0x7c2e843c]
  41a0d6:	xchg   DWORD PTR [edx],ebp
  41a0d8:	and    eax,0x45f510d7
  41a0dd:	adc    eax,0x6b44d09c
  41a0e2:	push   edx
  41a0e3:	pop    ss
  41a0e4:	ds (bad) 
  41a0e6:	mov    al,ds:0x9525aa94
  41a0eb:	hlt    
  41a0ec:	je     0x41a13f
  41a0ee:	(bad)  
  41a0ef:	jmp    0x41a131
  41a0f1:	data16 stc 
  41a0f3:	fdivr  st(2),st
  41a0f5:	stos   BYTE PTR es:[edi],al
  41a0f6:	repz dec BYTE PTR [edx+0xa]
  41a0fa:	cli    
  41a0fb:	iret   
  41a0fc:	and    al,BYTE PTR [eax-0x34fc897]
  41a102:	or     ah,BYTE PTR [esi]
  41a104:	jle    0x41a121
  41a106:	mov    ch,0xd7
  41a108:	mul    BYTE PTR [ebp-0x21fb331e]
  41a10e:	and    al,0x7
  41a110:	icebp  
  41a111:	xor    ch,BYTE PTR [edx-0x37]
  41a114:	mov    ebp,0x2cafc8d
  41a119:	add    BYTE PTR [ecx],al
  41a11b:	or     eax,0xdaeab97
  41a120:	pop    ebx
  41a121:	xor    edx,eax
  41a123:	loop   0x41a0ab
  41a125:	push   esi
  41a126:	mov    ah,dl
  41a128:	div    DWORD PTR [ebx+0x1b]
  41a12b:	fstp   DWORD PTR [ecx]
  41a12d:	adc    bh,BYTE PTR [edi+0xb4c64bd]
  41a133:	sub    dh,cl
  41a135:	out    0xe2,eax
  41a137:	jo     0x41a190
  41a139:	fdiv   st,st(7)
  41a13b:	and    BYTE PTR [edx],dh
  41a13d:	mov    edi,0xd1fba81e
  41a142:	xor    BYTE PTR [ebx+ecx*8+0x433ecd85],bl
  41a149:	mov    ch,0x2f
  41a14b:	xchg   edi,eax
  41a14c:	sub    ebx,DWORD PTR [ebp+0xe343161]
  41a152:	push   ecx
  41a153:	out    dx,eax
  41a154:	(bad)  
  41a155:	iret   
  41a156:	jns    0x41a140
  41a158:	jae    0x41a15a
  41a15a:	call   0xea12:0xcc711c07
  41a161:	mov    edi,0xf6c71c8d
  41a166:	fist   WORD PTR [eax-0x1dd1b7cc]
  41a16c:	es pop ecx
  41a16e:	sbb    al,0xb8
  41a170:	pop    esi
  41a171:	repz jne 0x41a129
  41a174:	xchg   edi,eax
  41a175:	ins    BYTE PTR es:[edi],dx
  41a176:	xchg   edx,eax
  41a177:	or     esp,edi
  41a179:	fild   DWORD PTR [ebx*8-0x3cda51ec]
  41a180:	iret   
  41a181:	or     al,0x7c
  41a183:	call   0x5d66:0xa08455e
  41a18a:	(bad)  [ebp-0x2]
  41a18d:	xchg   ecx,eax
  41a18e:	sub    al,0x7c
  41a190:	push   ds
  41a191:	fst    DWORD PTR ds:0x6d4cb224
  41a197:	int3   
  41a198:	repz (bad) 
  41a19a:	xchg   cl,ah
  41a19c:	in     al,0x2b
  41a19e:	js     0x41a147
  41a1a0:	mov    ch,BYTE PTR [ebp-0x1a65880c]
  41a1a6:	js     0x41a18f
  41a1a8:	mov    fs,WORD PTR [ebx]
  41a1aa:	sub    DWORD PTR [ecx+ecx*2],edi
  41a1ad:	inc    DWORD PTR [ebp+0x29]
  41a1b0:	push   eax
  41a1b1:	mov    cl,0x3a
  41a1b3:	xor    esi,DWORD PTR [esp+ebp*8+0x651ef0e9]
  41a1ba:	pop    esp
  41a1bb:	add    cl,BYTE PTR [eax+0x2a086cfd]
  41a1c1:	rcr    BYTE PTR [ebp-0x19],cl
  41a1c4:	add    dl,ah
  41a1c6:	neg    DWORD PTR [esi+0xbaf65a7]
  41a1cc:	loope  0x41a162
  41a1ce:	xlat   BYTE PTR ds:[ebx]
  41a1cf:	scas   al,BYTE PTR es:[edi]
  41a1d0:	and    bh,cl
  41a1d2:	out    0x13,eax
  41a1d4:	or     eax,0xbb4f7e0b
  41a1d9:	loopne 0x41a172
  41a1db:	and    al,0x4a
  41a1dd:	sbb    bl,ah
  41a1df:	cmp    eax,0x1d03a466
  41a1e4:	in     eax,dx
  41a1e5:	scas   eax,DWORD PTR es:[edi]
  41a1e6:	retf   
  41a1e7:	adc    esi,esi
  41a1e9:	push   cs
  41a1ea:	cli    
  41a1eb:	xlat   BYTE PTR ds:[ebx]
  41a1ec:	ds das 
  41a1ee:	in     eax,dx
  41a1ef:	bound  eax,QWORD PTR [esi+0x7f]
  41a1f2:	push   eax
  41a1f3:	jno    0x41a219
  41a1f5:	test   DWORD PTR [ebx+eax*8+0x60],ecx
  41a1f9:	sbb    bh,BYTE PTR [edx]
  41a1fb:	mov    ds:0x4121d550,al
  41a200:	pop    esi
  41a201:	jmp    0xed08:0x42a60a92
  41a208:	mov    dh,0x92
  41a20a:	fcomp  DWORD PTR [esi+0x7ca9aafb]
  41a210:	addr16 xor al,0x40
  41a213:	adc    eax,edx
  41a215:	repz je 0x41a290
  41a218:	daa    
  41a219:	(bad)  
  41a21a:	idiv   DWORD PTR [edx-0x3a]
  41a21d:	cmp    ah,dl
  41a21f:	jne    0x41a248
  41a221:	or     DWORD PTR [edi],ebp
  41a223:	sbb    eax,0x7a69cd26
  41a228:	ja     0x41a221
  41a22a:	int    0x23
  41a22c:	sub    esp,DWORD PTR [ecx]
  41a22e:	inc    edx
  41a22f:	or     DWORD PTR [edx+0x3bc3d823],esi
  41a235:	stc    
  41a236:	retf   
  41a237:	in     al,0x6d
  41a239:	mov    bh,0xb6
  41a23b:	arpl   WORD PTR [edi+0x3f2c2913],bx
  41a241:	cmp    ah,BYTE PTR [ebx]
  41a243:	pop    ebp
  41a244:	sbb    cl,BYTE PTR [esi+0x4]
  41a247:	sar    BYTE PTR [ecx+0xce8b2ff],1
  41a24d:	sub    eax,0xad313e46
  41a252:	pop    ebx
  41a253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a254:	jns    0x41a282
  41a256:	adc    al,0x94
  41a258:	test   eax,0x8e05814f
  41a25d:	sub    eax,edi
  41a25f:	cmp    al,0xb3
  41a261:	cmp    BYTE PTR [ecx+0x7ac46ef6],ch
  41a267:	hlt    
  41a268:	adc    al,BYTE PTR [esi]
  41a26a:	sbb    DWORD PTR [edi],0x30
  41a26d:	xchg   esi,eax
  41a26e:	sub    BYTE PTR [edx+0x48],0x2b
  41a272:	enter  0xff94,0x84
  41a276:	iret   
  41a277:	sbb    DWORD PTR [ebx+0x2b9792e5],edx
  41a27d:	jo     0x41a246
  41a27f:	test   al,0x8a
  41a281:	in     eax,0xa2
  41a283:	add    eax,0x5d87164d
  41a288:	jae    0x41a21d
  41a28a:	ds push ss
  41a28c:	jge    0x41a2a5
  41a28e:	mov    dl,0x5d
  41a290:	mov    eax,ds:0xdb1b8996
  41a295:	push   ds
  41a296:	xchg   ebp,eax
  41a297:	add    DWORD PTR [ebp+0x63e88ea1],edi
  41a29d:	(bad)  [ecx+0x3e918d29]
  41a2a3:	jle    0x41a247
  41a2a5:	outs   dx,DWORD PTR ds:[esi]
  41a2a6:	arpl   WORD PTR [edx],sp
  41a2a8:	pusha  
  41a2a9:	fcmove st,st(5)
  41a2ab:	pop    ecx
  41a2ac:	cwde   
  41a2ad:	(bad)  
  41a2ae:	adc    BYTE PTR [esi+0xf],bh
  41a2b1:	pop    eax
  41a2b2:	repnz cmovae ebp,DWORD PTR [edx]
  41a2b6:	test   DWORD PTR [ecx-0x2],ecx
  41a2b9:	mov    eax,0xfb09997d
  41a2be:	sti    
  41a2bf:	sbb    ebx,ecx
  41a2c1:	rcr    DWORD PTR [ebp+0x47],0xbc
  41a2c5:	fld    TBYTE PTR [edi-0x2e]
  41a2c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c9:	xor    BYTE PTR [ecx-0xed15881],0x31
  41a2d0:	out    dx,eax
  41a2d1:	xchg   esi,eax
  41a2d2:	dec    edi
  41a2d3:	adc    DWORD PTR [eax+0x37],0xe49caff
  41a2da:	sub    al,0x63
  41a2dc:	mov    al,0x1a
  41a2de:	cmc    
  41a2df:	enter  0x9bdb,0x13
  41a2e3:	test   BYTE PTR [eax],0xe
  41a2e6:	xor    al,0xec
  41a2e8:	mov    ebx,0x833c3247
  41a2ed:	push   ds
  41a2ee:	scas   al,BYTE PTR es:[edi]
  41a2ef:	or     DWORD PTR es:[ebx],ebx
  41a2f2:	sub    al,0xc9
  41a2f4:	out    dx,al
  41a2f5:	mov    ah,0xf3
  41a2f7:	cli    
  41a2f8:	(bad)  
  41a2f9:	js     0x41a363
  41a2fb:	into   
  41a2fc:	pop    ecx
  41a2fd:	xlat   BYTE PTR ds:[ebx]
  41a2fe:	mov    bh,0xc9
  41a300:	add    BYTE PTR [esi+0x29],bl
  41a303:	mov    ebp,0xacdd0b75
  41a308:	push   es
  41a309:	retf   0xd3e5
  41a30c:	or     ah,BYTE PTR [edi+0x1241f0de]
  41a312:	arpl   WORD PTR [eax-0x3e],si
  41a315:	scas   al,BYTE PTR es:[edi]
  41a316:	cli    
  41a317:	sbb    eax,0xf4eae73b
  41a31c:	je     0x41a368
  41a31e:	mov    dl,0xeb
  41a320:	inc    eax
  41a321:	dec    ebx
  41a322:	imul   ecx,DWORD PTR [ebx-0x445ef8a6],0x68
  41a329:	adc    eax,0x36bdd2d8
  41a32e:	mov    bl,0xc0
  41a330:	jb     0x41a2e6
  41a332:	enter  0x34e4,0x85
  41a336:	jl     0x41a2c2
  41a338:	aaa    
  41a339:	(bad)  
  41a33a:	mov    ah,0x94
  41a33c:	dec    ebx
  41a33d:	ins    BYTE PTR es:[edi],dx
  41a33e:	sub    edx,DWORD PTR [edi-0x537f7818]
  41a344:	mov    eax,0xc250bcd6
  41a349:	mov    eax,ds:0x29533de0
  41a34e:	push   ss
  41a34f:	push   ss
  41a350:	pushf  
  41a351:	adc    eax,0x430e3197
  41a356:	add    DWORD PTR [ebx],ebx
  41a358:	ret    
  41a359:	ss ja  0x41a344
  41a35c:	loop   0x41a2f3
  41a35e:	jge    0x41a360
  41a360:	repz je 0x41a3da
  41a363:	push   edi
  41a364:	push   eax
  41a365:	cld    
  41a366:	aad    0x53
  41a368:	mov    ch,0x11
  41a36a:	xchg   ecx,eax
  41a36b:	imul   ecx,DWORD PTR [ebx+0x35],0x74
  41a36f:	jbe    0x41a3e5
  41a371:	and    BYTE PTR ds:0x1e6a0fcb,al
  41a377:	loop   0x41a32e
  41a379:	mov    edi,0x446b71cf
  41a37e:	mov    DWORD PTR [ebx+0x7f],edx
  41a381:	and    DWORD PTR [ecx+0x782ab647],eax
  41a387:	inc    DWORD PTR [ebx]
  41a389:	xor    BYTE PTR [esi+0x3],dl
  41a38c:	mov    esi,0x860aac1c
  41a391:	sti    
  41a392:	xor    eax,0x41036b54
  41a397:	fst    DWORD PTR [eax+0x2a]
  41a39a:	jo     0x41a3f8
  41a39c:	outs   dx,DWORD PTR ds:[esi]
  41a39d:	call   0x43c4ab56
  41a3a2:	or     eax,0x5132fc18
  41a3a7:	fst    st(2)
  41a3a9:	imul   esi,DWORD PTR [edi+0x42],0xa
  41a3ad:	push   ecx
  41a3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3af:	xchg   esp,eax
  41a3b0:	dec    edx
  41a3b1:	repnz out dx,eax
  41a3b3:	push   edx
  41a3b4:	pop    ebx
  41a3b5:	add    BYTE PTR fs:[eax+eax*2],ch
  41a3b9:	fmul   QWORD PTR [esi-0x51]
  41a3bc:	mov    esp,0x1ff7de8
  41a3c1:	jmp    ecx
  41a3c3:	dec    ebx
  41a3c4:	or     DWORD PTR [eax-0xaf2e80c],ebx
  41a3ca:	push   0xffffffbf
  41a3cc:	xchg   ecx,eax
  41a3cd:	fdiv   QWORD PTR [ecx+esi*2+0x53]
  41a3d1:	int    0x3b
  41a3d3:	mov    esp,0xf0e5a5b8
  41a3d8:	iret   
  41a3d9:	jns    0x41a371
  41a3db:	dec    ecx
  41a3dc:	ds push cs
  41a3de:	mov    ecx,0x97c8d0a7
  41a3e3:	fcomp  QWORD PTR [edi-0x130b5828]
  41a3e9:	inc    ebp
  41a3ea:	inc    BYTE PTR [esi+0x7cb04498]
  41a3f0:	pop    eax
  41a3f1:	in     eax,dx
  41a3f2:	pop    edi
  41a3f3:	cwde   
  41a3f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3f5:	jl     0x41a463
  41a3f7:	test   DWORD PTR [edx+esi*2],ecx
  41a3fa:	mov    eax,0x6328a131
  41a3ff:	jbe    0x41a3e5
  41a401:	mov    esp,0x45e006c3
  41a406:	popf   
  41a407:	mov    dl,0xf1
  41a409:	out    0xce,eax
  41a40b:	xor    BYTE PTR [esi],al
  41a40d:	sahf   
  41a40e:	add    BYTE PTR [edi+0x52],ch
  41a411:	in     al,dx
  41a412:	xchg   edx,eax
  41a413:	sar    ebp,cl
  41a415:	je     0x41a39f
  41a417:	inc    edi
  41a418:	loope  0x41a405
  41a41a:	xor    BYTE PTR [edx],0xfb
  41a41d:	retf   
  41a41e:	ret    
  41a41f:	rcr    edx,0x61
  41a422:	jp     0x41a3f0
  41a424:	jp     0x41a445
  41a426:	in     eax,0x47
  41a428:	push   ebp
  41a429:	in     al,dx
  41a42a:	nop
  41a42b:	mov    ebp,0x8bccd7f9
  41a430:	pop    ds
  41a431:	fldenv [ebx-0x5de41679]
  41a437:	(bad)  
  41a439:	dec    esi
  41a43a:	pop    esi
  41a43b:	xor    dl,dh
  41a43d:	inc    ebx
  41a43e:	jb     0x41a417
  41a440:	mov    eax,ds:0xca6e1a9f
  41a445:	cmp    edx,0x3ddf94db
  41a44b:	inc    ebx
  41a44c:	popf   
  41a44d:	in     al,0x56
  41a44f:	jmp    0x6ee3:0xf809bb0a
  41a456:	push   ebx
  41a457:	add    edx,0x789f5ef4
  41a45d:	in     al,0xc5
  41a45f:	pop    esp
  41a460:	or     cl,BYTE PTR [esi+0x17]
  41a463:	into   
  41a464:	ror    BYTE PTR ds:0xd08cb842,cl
  41a46a:	inc    esp
  41a46b:	psllw  mm0,QWORD PTR [edx-0x75]
  41a46f:	lea    ecx,[ecx+0x56]
  41a472:	sub    BYTE PTR [ecx],ch
  41a474:	push   edi
  41a475:	sub    eax,0xef76600a
  41a47a:	mov    ds:0x811a1ed5,eax
  41a47f:	imul   edx,ebp,0xaab542b9
  41a485:	sub    edi,edx
  41a487:	xchg   BYTE PTR [esi],ah
  41a489:	dec    edi
  41a48a:	cmp    ebx,ecx
  41a48c:	inc    edx
  41a48d:	mov    ah,bl
  41a48f:	jecxz  0x41a502
  41a491:	lds    ebx,FWORD PTR [eax-0x41]
  41a494:	xchg   edx,eax
  41a495:	(bad)  
  41a496:	cli    
  41a497:	mov    esi,0x8ab6f585
  41a49c:	push   es
  41a49d:	into   
  41a49e:	(bad)  
  41a49f:	loopne 0x41a466
  41a4a1:	test   DWORD PTR [edi+0x7c],0x2b9b7baa
  41a4a8:	leave  
  41a4a9:	rol    DWORD PTR ds:0x2a3a66ca,0x7f
  41a4b0:	adc    DWORD PTR [edi],esp
  41a4b2:	adc    al,0xb3
  41a4b4:	cmc    
  41a4b5:	jmp    0x7a40:0x674a09b5
  41a4bc:	int    0xb2
  41a4be:	mov    eax,0xb6f14546
  41a4c3:	stc    
  41a4c4:	stos   BYTE PTR es:[edi],al
  41a4c5:	or     eax,DWORD PTR [esi+eax*1]
  41a4c8:	arpl   WORD PTR [esp+ecx*8-0x5a],bx
  41a4cc:	mov    ah,0x9a
  41a4ce:	mov    WORD PTR [edx],?
  41a4d0:	clc    
  41a4d1:	in     eax,0x7c
  41a4d3:	inc    esp
  41a4d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4d5:	ins    DWORD PTR es:[edi],dx
  41a4d6:	cmp    edx,ecx
  41a4d8:	out    dx,al
  41a4d9:	mov    eax,ds:0xf5cf4e21
  41a4de:	pop    edi
  41a4df:	fwait
  41a4e0:	mov    ds:0xe9f08652,eax
  41a4e5:	inc    esp
  41a4e6:	loope  0x41a4e1
  41a4e8:	in     eax,0x43
  41a4ea:	push   esp
  41a4eb:	in     eax,dx
  41a4ec:	adc    ebx,ebp
  41a4ee:	or     edi,DWORD PTR [ecx]
  41a4f0:	adc    ah,BYTE PTR [ebx-0x2cf1c4c7]
  41a4f6:	mov    cl,0x7b
  41a4f8:	jp     0x41a561
  41a4fa:	sbb    eax,0x12572ab0
  41a4ff:	loope  0x41a4b8
  41a501:	mov    dh,0x3b
  41a503:	mov    dl,0x5b
  41a505:	dec    ebp
  41a506:	lea    eax,[ebx+0x44]
  41a509:	mov    ebp,0x4cc8ecc
  41a50e:	add    BYTE PTR [edi-0x2f],ah
  41a511:	cmp    BYTE PTR [edi-0x7a0c2171],ch
  41a517:	xchg   ebx,eax
  41a518:	or     ah,BYTE PTR ds:0xf2a9b1ea
  41a51e:	lahf   
  41a51f:	xor    BYTE PTR [edi],dl
  41a521:	rcr    DWORD PTR [ecx+0x77ec1720],cl
  41a527:	ret    0xf372
  41a52a:	push   ss
  41a52b:	pusha  
  41a52c:	into   
  41a52d:	and    BYTE PTR [edi+0x59c32a8d],0x3c
  41a534:	add    DWORD PTR [edx],eax
  41a536:	sub    eax,0xfb9b8b2
  41a53b:	aad    0x5d
  41a53d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a53e:	(bad)  [esi+0x2ecdf048]
  41a544:	push   ecx
  41a545:	adc    cl,dh
  41a547:	ds dec ebx
  41a549:	pop    esp
  41a54a:	jg     0x41a5a0
  41a54c:	dec    ebx
  41a54d:	jecxz  0x41a5a1
  41a54f:	(bad)  
  41a550:	ror    DWORD PTR [edx],0xe5
  41a553:	add    dh,cl
  41a555:	loope  0x41a548
  41a557:	out    dx,al
  41a558:	mul    bh
  41a55a:	add    BYTE PTR [eax+0x7d],cl
  41a55d:	cmp    esp,esi
  41a55f:	cs dec ebp
  41a561:	shl    BYTE PTR [ecx],0xc3
  41a564:	or     esp,ebp
  41a566:	and    DWORD PTR [ecx],esp
  41a568:	bound  ecx,QWORD PTR [eax-0x22]
  41a56b:	ins    BYTE PTR es:[edi],dx
  41a56c:	leave  
  41a56d:	adc    al,0x22
  41a56f:	fisttp QWORD PTR [edi+0x4b]
  41a572:	adc    al,0x78
  41a574:	pop    eax
  41a575:	mov    ecx,0xcb43aa9f
  41a57a:	imul   edi,DWORD PTR [ecx-0x27e1c59a],0xff73c0d3
  41a584:	int3   
  41a585:	fs inc eax
  41a587:	mov    ds:0x50b4044,eax
  41a58c:	in     eax,0x9d
  41a58e:	xor    al,0x68
  41a590:	sti    
  41a591:	mov    DWORD PTR ds:0xb00784ee,esp
  41a597:	lock jmp 0xd2cfdf0d
  41a59d:	and    eax,DWORD PTR [eax]
  41a59f:	hlt    
  41a5a0:	test   DWORD PTR [esi-0x7af4a8e6],esi
  41a5a6:	test   BYTE PTR [ebx],al
  41a5a8:	push   esi
  41a5a9:	sbb    al,0xb4
  41a5ab:	jns    0x41a620
  41a5ad:	loopne 0x41a619
  41a5af:	sti    
  41a5b0:	pop    ebp
  41a5b1:	push   eax
  41a5b2:	shr    DWORD PTR [ecx+0x7fef80c4],1
  41a5b8:	(bad)  
  41a5b9:	and    eax,0x381b5274
  41a5be:	xor    ecx,DWORD PTR [edx-0xf458f7]
  41a5c4:	scas   al,BYTE PTR es:[edi]
  41a5c5:	mov    bh,0xe8
  41a5c7:	ss cmp eax,0x441666c8
  41a5cd:	out    0xc8,al
  41a5cf:	ret    0x9571
  41a5d2:	das    
  41a5d3:	sar    DWORD PTR [ebx],cl
  41a5d5:	cwde   
  41a5d6:	dec    edx
  41a5d7:	mov    dl,0xc7
  41a5d9:	mov    esp,0x6d339555
  41a5de:	into   
  41a5df:	adc    cl,BYTE PTR [ecx+0x6]
  41a5e2:	outs   dx,DWORD PTR ds:[esi]
  41a5e3:	add    DWORD PTR [ebx+ebx*1+0x1d0bae06],eax
  41a5ea:	pop    ebx
  41a5eb:	xor    ebp,DWORD PTR [ebp+0x4d]
  41a5ee:	aas    
  41a5ef:	int    0x69
  41a5f1:	jl     0x41a617
  41a5f3:	repz (bad) 
  41a5f5:	int    0x1b
  41a5f7:	fidiv  DWORD PTR [ebp-0x2551b200]
  41a5fd:	pop    esi
  41a5fe:	pop    ss
  41a5ff:	push   cs
  41a600:	aad    0x48
  41a602:	xchg   ebp,eax
  41a603:	sahf   
  41a604:	and    ah,al
  41a606:	xchg   ebx,eax
  41a607:	or     eax,ebp
  41a609:	mov    edi,0x7d1f0e16
  41a60e:	cmc    
  41a60f:	cmp    BYTE PTR [ecx],dl
  41a611:	sti    
  41a612:	adc    BYTE PTR [eax+0x77],ah
  41a615:	jg     0x41a5a5
  41a617:	cmp    bl,BYTE PTR [eax+0x6e]
  41a61a:	daa    
  41a61b:	xor    eax,0x6ef470f8
  41a620:	adc    ecx,DWORD PTR [ecx]
  41a622:	shl    DWORD PTR [edx+0x58],0x67
  41a626:	mov    DWORD PTR [edx],ebx
  41a628:	xchg   BYTE PTR [esi-0x6d],dh
  41a62b:	enter  0x2982,0xe
  41a62f:	mov    cs:0xb8e7c0b5,eax
  41a635:	sbb    al,0xae
  41a637:	in     al,0x58
  41a639:	fwait
  41a63a:	push   es
  41a63b:	jl     0x41a61c
  41a63d:	xchg   ecx,eax
  41a63e:	push   eax
  41a63f:	fld    QWORD PTR [eax+0x776cab87]
  41a645:	(bad)  
  41a646:	pop    ss
  41a647:	inc    ebx
  41a648:	data16 cmc 
  41a64a:	or     ch,BYTE PTR [eax]
  41a64c:	in     al,0x2e
  41a64e:	out    dx,eax
  41a64f:	mov    ah,0x24
  41a651:	out    0xc5,eax
  41a653:	push   0x9
  41a655:	add    eax,0x288c6cbe
  41a65a:	lahf   
  41a65b:	mov    ch,0x2b
  41a65d:	clc    
  41a65e:	inc    esi
  41a65f:	pop    esp
  41a660:	outs   dx,DWORD PTR ds:[esi]
  41a661:	mov    eax,ds:0x65a72d63
  41a666:	add    al,0x4e
  41a668:	inc    esp
  41a669:	outs   dx,BYTE PTR ds:[esi]
  41a66a:	pop    ecx
  41a66c:	fisub  DWORD PTR [ebx]
  41a66e:	daa    
  41a66f:	mov    eax,ds:0x3e7b441a
  41a674:	cdq    
  41a675:	fadd   DWORD PTR [eax+0x5f254758]
  41a67b:	xchg   esi,eax
  41a67c:	sub    edi,DWORD PTR [ebx+0x354c5ff6]
  41a682:	pop    ds
  41a683:	adc    eax,0x89f01d80
  41a688:	repz popa 
  41a68a:	cmp    ebx,DWORD PTR [edx-0x390e314f]
  41a690:	icebp  
  41a691:	imul   edi,DWORD PTR [ecx-0x7d],0xffffffc6
  41a695:	pop    ecx
  41a696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a697:	gs add ch,cl
  41a69a:	icebp  
  41a69b:	adc    DWORD PTR [esi+0x18f287c4],edx
  41a6a1:	fcmovnbe st,st(0)
  41a6a3:	fldenv [eax+0x27f321bf]
  41a6a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6aa:	aad    0x3d
  41a6ac:	and    ecx,ecx
  41a6ae:	push   0x46
  41a6b0:	lock cmp dh,BYTE PTR [ebx+0x3f7abaf3]
  41a6b7:	mov    edi,edi
  41a6b9:	jo     0x41a680
  41a6bb:	xchg   esi,eax
  41a6bc:	addr16 mov ebp,0xe312ce7a
  41a6c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6c3:	ins    DWORD PTR es:[edi],dx
  41a6c4:	xor    al,BYTE PTR [esp+edx*4]
  41a6c7:	daa    
  41a6c8:	mov    ch,0x59
  41a6ca:	sbb    al,0xe0
  41a6cc:	ins    DWORD PTR es:[edi],dx
  41a6cd:	mov    ebp,0xba3ef1d5
  41a6d2:	push   esi
  41a6d3:	int    0x80
  41a6d5:	adc    al,0x19
  41a6d7:	sub    al,0x6c
  41a6d9:	xor    al,0xbe
  41a6db:	jge    0x41a6ea
  41a6dd:	dec    edi
  41a6de:	fcom   DWORD PTR [ebp+0x6aa1ce3f]
  41a6e4:	xor    BYTE PTR [edi],ah
  41a6e6:	es jle 0x41a6d4
  41a6e9:	fwait
  41a6ea:	scas   eax,DWORD PTR es:[edi]
  41a6eb:	es test ax,0xeb17
  41a6f0:	fwait
  41a6f1:	mov    BYTE PTR [esi+0x9650ab],bh
  41a6f7:	icebp  
  41a6f8:	popf   
  41a6f9:	rol    ch,cl
  41a6fb:	mov    ecx,0x9dd2a99b
  41a700:	clc    
  41a701:	sub    al,0xcb
  41a703:	jmp    0x4126:0x6016311a
  41a70a:	fsubr  QWORD PTR [ecx]
  41a70c:	int3   
  41a70d:	in     al,0x54
  41a70f:	jae    0x41a712
  41a711:	ror    DWORD PTR [ecx],0xd
  41a714:	aaa    
  41a715:	adc    eax,0x85e23faa
  41a71a:	jbe    0x41a6b8
  41a71c:	dec    ecx
  41a71d:	aam    0x59
  41a71f:	fisttp DWORD PTR [eax-0x9ddc7f5]
  41a725:	push   eax
  41a726:	ss xor al,0xb7
  41a729:	dec    edx
  41a72a:	mov    esi,0x12aa51ed
  41a72f:	shr    DWORD PTR [eax+ebp*2+0x64],1
  41a733:	add    eax,0xac18814b
  41a738:	out    dx,eax
  41a739:	stos   BYTE PTR es:[edi],al
  41a73a:	int    0x93
  41a73c:	addr16 xchg esp,eax
  41a73e:	aam    0xd5
  41a740:	int3   
  41a741:	jp     0x41a6cf
  41a743:	test   al,0xb2
  41a745:	scas   eax,DWORD PTR es:[edi]
  41a746:	inc    ecx
  41a747:	clc    
  41a748:	repz call 0xef83acec
  41a74e:	xchg   ecx,eax
  41a74f:	mov    eax,0xd2484cab
  41a754:	daa    
  41a755:	push   ecx
  41a756:	shl    DWORD PTR [esi-0x172399b6],0xd6
  41a75d:	cwde   
  41a75e:	ret    0x2fff
  41a761:	jmp    0xc7f23d85
  41a766:	ds xchg edx,eax
  41a768:	dec    edx
  41a769:	fprem1 
  41a76b:	inc    ebp
  41a76c:	adc    cl,dl
  41a76e:	fwait
  41a76f:	aad    0x57
  41a771:	ffreep st(0)
  41a773:	mov    ecx,0xed32d937
  41a778:	ret    0x23e5
  41a77b:	scas   al,BYTE PTR es:[edi]
  41a77c:	enter  0xd103,0x52
  41a780:	fabs   
  41a782:	xchg   esi,eax
  41a783:	lods   eax,DWORD PTR ds:[esi]
  41a784:	mov    dh,0x3d
  41a786:	out    0x2d,al
  41a788:	loop   0x41a73e
  41a78a:	shl    ebp,1
  41a78c:	xchg   edi,eax
  41a78d:	adc    al,ah
  41a78f:	in     eax,dx
  41a790:	cmp    esi,DWORD PTR [eax]
  41a792:	out    dx,eax
  41a793:	jge    0x41a771
  41a795:	imul   ebx,DWORD PTR [edi],0x868a57db
  41a79b:	fld    DWORD PTR [edx+0x4a4e5dd]
  41a7a1:	mov    dh,0x6b
  41a7a3:	test   al,0xc8
  41a7a5:	cld    
  41a7a6:	aad    0xbf
  41a7a8:	cs pushf 
  41a7aa:	popa   
  41a7ab:	arpl   WORD PTR [ecx+0x6a],sp
  41a7ae:	push   es
  41a7af:	inc    ebp
  41a7b0:	and    cx,WORD PTR [edi+0x75]
  41a7b4:	aas    
  41a7b5:	mov    edx,0xfb6ef83e
  41a7ba:	ffree  st(4)
  41a7bc:	add    al,0x5a
  41a7be:	loope  0x41a759
  41a7c0:	cmp    al,0xd7
  41a7c2:	in     eax,0x61
  41a7c4:	addr16 pop es
  41a7c6:	jp     0x41a7cd
  41a7c8:	mov    bl,0x7b
  41a7ca:	ret    0xb32a
  41a7cd:	shl    esp,cl
  41a7cf:	pop    edi
  41a7d0:	jl     0x41a773
  41a7d2:	cdq    
  41a7d3:	sub    DWORD PTR [esi],edi
  41a7d5:	rep lods eax,DWORD PTR ds:[esi]
  41a7d7:	jmp    0xf7a:0x78b2a538
  41a7de:	adc    esi,DWORD PTR [ebx+0x183cca26]
  41a7e4:	sar    ebp,0xcc
  41a7e7:	cli    
  41a7e8:	xchg   ebx,eax
  41a7e9:	add    BYTE PTR [eax+ebx*1-0x32fa58ee],cl
  41a7f0:	adc    eax,ebx
  41a7f2:	or     BYTE PTR [edi],al
  41a7f4:	fdivr  QWORD PTR [esi+ebp*8+0x192ad864]
  41a7fb:	mov    BYTE PTR [ebx+0x33],dh
  41a7fe:	dec    esi
  41a7ff:	aad    0xb3
  41a801:	xchg   edi,eax
  41a802:	aam    0x53
  41a804:	sar    BYTE PTR [esi+0x5f6ead28],1
  41a80a:	cld    
  41a80b:	call   0x7cd7:0xd814202d
  41a812:	pop    eax
  41a813:	cli    
  41a814:	lock or ecx,edi
  41a817:	mov    dl,0x1d
  41a819:	pop    esi
  41a81a:	repnz or ah,al
  41a81d:	stos   BYTE PTR es:[edi],al
  41a81e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a81f:	sub    DWORD PTR [edi-0x42f1a3ab],ebp
  41a825:	sub    al,0xb2
  41a827:	stos   DWORD PTR es:[edi],eax
  41a828:	cmc    
  41a829:	sbb    ch,BYTE PTR [esi+0x653a16c7]
  41a82f:	aam    0xe
  41a831:	and    BYTE PTR [edx],cl
  41a833:	in     eax,dx
  41a834:	jae    0x41a87b
  41a836:	sbb    DWORD PTR [eax-0xbdb839f],ecx
  41a83c:	gs loop 0x41a7e0
  41a83f:	hlt    
  41a840:	xor    BYTE PTR [ebx+eax*4-0x36],0xe2
  41a845:	push   esi
  41a846:	test   eax,0x22e79363
  41a84b:	out    dx,al
  41a84c:	mov    edx,0xe19ddfe9
  41a851:	dec    esp
  41a852:	inc    ecx
  41a853:	sub    eax,0xabb28d3d
  41a858:	imul   edi,DWORD PTR [esi-0x30912e39],0xba6c4e28
  41a862:	iret   
  41a863:	ret    
  41a864:	ret    
  41a865:	cld    
  41a866:	xchg   esp,eax
  41a867:	or     BYTE PTR [ecx+0x2ac4ea8b],0xe1
  41a86e:	fdivr  DWORD PTR [ebp+0x512e0b21]
  41a874:	mov    DWORD PTR [eax-0x2e864115],esp
  41a87a:	push   ss
  41a87b:	fs stos DWORD PTR es:[edi],eax
  41a87d:	add    ch,dl
  41a87f:	in     eax,dx
  41a880:	cmp    bh,0x44
  41a883:	shl    ecx,0x9e
  41a886:	sub    ch,BYTE PTR [esp+eax*4]
  41a889:	jae    0x41a8f8
  41a88b:	dec    edx
  41a88c:	xor    eax,0xc01597a1
  41a891:	jnp    0x41a852
  41a893:	adc    bl,dl
  41a895:	out    dx,al
  41a896:	pop    ebp
  41a897:	lods   eax,DWORD PTR ds:[esi]
  41a898:	or     esi,ebp
  41a89a:	icebp  
  41a89b:	xor    eax,0xd7263cc5
  41a8a0:	aam    0x12
  41a8a2:	lahf   
  41a8a3:	ins    DWORD PTR es:[edi],dx
  41a8a4:	xlat   BYTE PTR ds:[ebx]
  41a8a5:	jecxz  0x41a913
  41a8a7:	xchg   ebp,eax
  41a8a8:	mov    cs,WORD PTR [edi-0x3a]
  41a8ab:	jns    0x41a830
  41a8ad:	inc    DWORD PTR [ebp+0x761401d7]
  41a8b3:	pusha  
  41a8b4:	lahf   
  41a8b5:	cmp    ebx,DWORD PTR [ebx]
  41a8b7:	xor    BYTE PTR [esi],ah
  41a8b9:	pop    ecx
  41a8ba:	jae    0x41a897
  41a8bc:	mov    ebx,0x5eeb7ef
  41a8c1:	das    
  41a8c2:	lock mov ecx,0xe1a2586c
  41a8c8:	das    
  41a8c9:	or     dh,BYTE PTR [esi+ebx*2]
  41a8cc:	cmp    BYTE PTR [edx+0x77],cl
  41a8cf:	hlt    
  41a8d0:	cmp    al,0xb7
  41a8d2:	cld    
  41a8d3:	ret    0x1672
  41a8d6:	jmp    0x9d9f:0xba47528b
  41a8dd:	mov    ds:0x3d106009,eax
  41a8e2:	xor    DWORD PTR [edi+0x66],ebp
  41a8e5:	int3   
  41a8e6:	je     0x41a8d4
  41a8e8:	push   edi
  41a8e9:	add    ebx,DWORD PTR [esi]
  41a8eb:	aad    0xe0
  41a8ed:	sbb    dh,dl
  41a8ef:	push   ss
  41a8f0:	test   DWORD PTR [ecx],eax
  41a8f2:	xacquire xchg BYTE PTR [ebp-0x1db7203d],dh
  41a8f9:	add    eax,0xc7022a63
  41a8fe:	(bad)  
  41a8ff:	adc    al,0xad
  41a901:	cmp    edi,DWORD PTR ds:0xf057819f
  41a907:	(bad)  
  41a908:	sub    cl,BYTE PTR [ebx-0x73196b90]
  41a90e:	fist   WORD PTR [edi+0x6ce6e6f7]
  41a914:	ja     0x41a981
  41a916:	dec    ebx
  41a917:	cld    
  41a918:	add    BYTE PTR [ecx+0x6f],al
  41a91b:	ret    0xdf49
  41a91e:	nop
  41a91f:	cmp    al,0x33
  41a921:	cmp    ah,BYTE PTR ss:0x41404976
  41a928:	scas   eax,DWORD PTR es:[edi]
  41a929:	sbb    bh,BYTE PTR [edx+0x210ae9ea]
  41a92f:	push   esp
  41a930:	jmp    0xaaa7:0x147d96f5
  41a937:	fwait
  41a938:	sbb    BYTE PTR [eax],dl
  41a93a:	(bad)  
  41a93b:	cmc    
  41a93c:	xchg   ebx,eax
  41a93d:	test   BYTE PTR [ebx+eax*8],0x17
  41a941:	push   ecx
  41a942:	call   0xd30e:0x9865b2b4
  41a949:	test   bl,ch
  41a94b:	xor    eax,0x9848a4ad
  41a950:	mov    edx,0x683a10ef
  41a955:	or     DWORD PTR [ebx+0x73d9ee22],esp
  41a95b:	rcr    BYTE PTR [edi+ebx*2-0x72],1
  41a95f:	inc    edx
  41a960:	push   esi
  41a961:	dec    esp
  41a962:	push   ecx
  41a963:	jg     0x41a90a
  41a965:	adc    edi,ecx
  41a967:	pop    ss
  41a968:	dec    esp
  41a969:	(bad)  
  41a96a:	jecxz  0x41a9e3
  41a96c:	dec    eax
  41a96d:	sub    al,0x30
  41a96f:	inc    edi
  41a970:	push   ss
  41a971:	push   eax
  41a972:	cmp    BYTE PTR [ecx+ebx*4+0x4ad5f8a4],ah
  41a979:	int3   
  41a97a:	ss std 
  41a97c:	cmp    dh,BYTE PTR [esi-0x14]
  41a97f:	push   edi
  41a980:	loope  0x41a936
  41a982:	ins    BYTE PTR es:[edi],dx
  41a983:	xor    BYTE PTR [bp+0x6030],cl
  41a988:	nop
  41a989:	mov    bl,0xdd
  41a98b:	stos   DWORD PTR es:[edi],eax
  41a98c:	sbb    eax,DWORD PTR [edi+0x1f]
  41a98f:	std    
  41a990:	ja     0x41a9af
  41a992:	adc    al,0x33
  41a994:	(bad)  
  41a995:	xchg   ecx,eax
  41a996:	arpl   WORD PTR [ebp-0x1a],ax
  41a999:	out    dx,eax
  41a99a:	cdq    
  41a99b:	adc    edx,eax
  41a99d:	add    BYTE PTR [ecx-0x12],dh
  41a9a0:	pop    ds
  41a9a1:	scas   al,BYTE PTR es:[edi]
  41a9a2:	xlat   BYTE PTR ds:[ebx]
  41a9a3:	or     ebx,edi
  41a9a5:	test   DWORD PTR [edi],edx
  41a9a7:	pop    ebp
  41a9a8:	(bad)  
  41a9a9:	fs scas al,BYTE PTR es:[edi]
  41a9ab:	fidivr WORD PTR [ecx+0x60d83064]
  41a9b1:	push   edx
  41a9b2:	cs push eax
  41a9b4:	xchg   edi,eax
  41a9b5:	sub    BYTE PTR ds:0xbfd8c656,ch
  41a9bb:	icebp  
  41a9bc:	sub    dl,al
  41a9be:	adc    DWORD PTR [ebp-0x8],esi
  41a9c1:	jle    0x41a97c
  41a9c3:	ret    
  41a9c4:	add    al,0xd
  41a9c6:	mov    edi,DWORD PTR [ecx]
  41a9c8:	les    edx,FWORD PTR [edi-0x39]
  41a9cb:	push   0xffffff8a
  41a9cd:	(bad)  
  41a9ce:	dec    esi
  41a9cf:	inc    esi
  41a9d0:	cmp    eax,0x5aa08053
  41a9d5:	pop    esp
  41a9d6:	ret    0x6dab
  41a9d9:	xchg   edi,eax
  41a9da:	cdq    
  41a9db:	add    eax,0x3f361912
  41a9e0:	sbb    esi,DWORD PTR [ebp+0xaa622cc]
  41a9e6:	adc    ebp,eax
  41a9e8:	arpl   WORD PTR [ebp-0xd],cx
  41a9eb:	sub    eax,0x8b1c4da
  41a9f0:	inc    ecx
  41a9f1:	repz inc esi
  41a9f3:	cdq    
  41a9f4:	pop    ecx
  41a9f5:	inc    edi
  41a9f6:	hlt    
  41a9f7:	jbe    0x41a9e2
  41a9f9:	in     al,dx
  41a9fa:	push   edx
  41a9fb:	xchg   ebp,esp
  41a9fd:	sbb    eax,0xea97e562
  41aa02:	mov    ebp,0x500a7a8c
  41aa07:	into   
  41aa08:	xchg   DWORD PTR [esi],esi
  41aa0a:	push   cs
  41aa0b:	mov    ebp,0xd153c9a4
  41aa10:	pushf  
  41aa11:	xchg   esp,eax
  41aa12:	inc    edx
  41aa13:	repz mov WORD PTR [esi+0x73],fs
  41aa17:	mov    al,0xb7
  41aa19:	push   ss
  41aa1a:	outs   dx,DWORD PTR ds:[esi]
  41aa1b:	std    
  41aa1c:	(bad)  
  41aa1d:	jg     0x41a9a6
  41aa1f:	inc    edi
  41aa20:	test   al,0xa2
  41aa22:	cmc    
  41aa23:	mov    ah,0x33
  41aa25:	in     al,0xe8
  41aa27:	xor    ch,BYTE PTR [edi]
  41aa29:	outs   dx,DWORD PTR ds:[esi]
  41aa2a:	adc    bl,BYTE PTR [ecx-0x17e8c5c6]
  41aa30:	jge    0x41aa15
  41aa32:	scas   al,BYTE PTR es:[edi]
  41aa33:	icebp  
  41aa34:	(bad)  
  41aa36:	jge    0x41a9c2
  41aa38:	stos   DWORD PTR es:[edi],eax
  41aa39:	push   cs
  41aa3a:	jno    0x41aa44
  41aa3c:	call   0x75cb:0x14f35be2
  41aa43:	inc    edx
  41aa44:	sbb    dh,BYTE PTR [ebx-0x1d]
  41aa47:	dec    eax
  41aa48:	outs   dx,BYTE PTR ds:[esi]
  41aa49:	lock or DWORD PTR [ecx],edx
  41aa4c:	sti    
  41aa4d:	in     eax,0xdf
  41aa4f:	sbb    BYTE PTR [edi-0x73],0x72
  41aa53:	and    BYTE PTR [ecx],ah
  41aa55:	fbld   TBYTE PTR [esi+0x5cb9d7a9]
  41aa5b:	nop
  41aa5c:	mov    cl,0x13
  41aa5e:	jge    0x41aac8
  41aa60:	jno    0x41aa51
  41aa62:	leave  
  41aa63:	inc    ebp
  41aa64:	dec    ecx
  41aa65:	inc    esi
  41aa66:	enter  0xce13,0xbf
  41aa6a:	je     0x41aadc
  41aa6c:	mov    dh,0xe0
  41aa6e:	pusha  
  41aa6f:	xor    esi,edi
  41aa71:	xchg   edx,eax
  41aa72:	lahf   
  41aa73:	bound  esp,QWORD PTR [eax+edi*8]
  41aa76:	ror    DWORD PTR [edx],cl
  41aa78:	pop    ss
  41aa79:	jp     0x41aaf6
  41aa7b:	les    esi,FWORD PTR [edx+0x5e359dc9]
  41aa81:	imul   DWORD PTR [eax+0x76326106]
  41aa87:	and    al,0x46
  41aa89:	test   al,0xdf
  41aa8b:	sbb    DWORD PTR [edx+0xe],eax
  41aa8e:	mov    dh,0x78
  41aa90:	mov    dh,0x7c
  41aa92:	dec    ecx
  41aa93:	cs ins DWORD PTR es:[edi],dx
  41aa95:	fmul   DWORD PTR ds:0xb5f4246d
  41aa9b:	popa   
  41aa9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa9d:	mov    ds:0x7ce230cb,eax
  41aaa2:	dec    ecx
  41aaa3:	xor    DWORD PTR [esi+ecx*2+0x6aebecd2],edx
  41aaaa:	sub    ch,ch
  41aaac:	retf   0x6d75
  41aaaf:	add    al,0x9a
  41aab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aab2:	lea    esp,[edx+0x657c12c4]
  41aab8:	xchg   ebx,eax
  41aab9:	das    
  41aaba:	loopne 0x41aafc
  41aabc:	inc    ebp
  41aabd:	push   ebx
  41aabe:	fld    TBYTE PTR [eax-0x2d]
  41aac1:	pop    esp
  41aac2:	push   esi
  41aac3:	mov    ss,WORD PTR [di-0x4b]
  41aac7:	ret    
  41aac8:	jbe    0x41aa96
  41aaca:	lahf   
  41aacb:	or     eax,0x56d1dbbf
  41aad0:	push   ds
  41aad1:	sub    esp,edi
  41aad3:	pop    esp
  41aad4:	or     BYTE PTR ds:0xe3733a5b,bh
  41aada:	es lahf 
  41aadc:	int    0x24
  41aade:	(bad)  
  41aadf:	fbld   TBYTE PTR [edx]
  41aae1:	push   es
  41aae2:	adc    al,0x5
  41aae4:	in     eax,dx
  41aae5:	dec    eax
  41aae6:	hlt    
  41aae7:	pop    ss
  41aae8:	and    eax,0x1b1ed607
  41aaed:	sar    BYTE PTR [ebp-0x76],cl
  41aaf0:	push   esp
  41aaf1:	jns    0x41ab2a
  41aaf3:	rcl    bl,cl
  41aaf5:	sub    BYTE PTR [eax-0x3c09cc75],dl
  41aafb:	and    BYTE PTR [ecx-0x34],0x68
  41aaff:	mov    eax,DWORD PTR [ecx]
  41ab01:	jb     0x41ab13
  41ab03:	push   es
  41ab04:	push   0xffffffd6
  41ab06:	or     eax,0xa467a863
  41ab0b:	jle    0x41ab8c
  41ab0d:	inc    ecx
  41ab0e:	inc    esi
  41ab0f:	(bad)  [edi]
  41ab11:	inc    esp
  41ab12:	or     ch,dh
  41ab14:	xchg   ebp,eax
  41ab15:	cmp    al,0x62
  41ab17:	add    al,0x1b
  41ab19:	sbb    BYTE PTR [ecx*8+0x8093aa1],ch
  41ab20:	in     al,dx
  41ab21:	cmc    
  41ab22:	(bad)  
  41ab24:	push   ss
  41ab25:	mov    cl,0x8
  41ab27:	jb     0x41aaf2
  41ab29:	mov    ds:0xfe072e20,eax
  41ab2e:	lea    ebp,[ebx+0x7cf1fe00]
  41ab34:	ss fs xchg ecx,eax
  41ab37:	xchg   edx,eax
  41ab38:	out    0xb4,eax
  41ab3a:	add    esi,DWORD PTR [ecx+0x41623358]
  41ab40:	fs mov edx,0x81a04ee2
  41ab46:	cmp    DWORD PTR gs:[ebx+0x172e44b9],ebp
  41ab4d:	stc    
  41ab4e:	test   eax,0x85ce13f7
  41ab53:	pop    eax
  41ab54:	out    0xda,al
  41ab56:	sbb    eax,0x2be8f441
  41ab5b:	ja     0x41ab13
  41ab5d:	sbb    eax,0x2dc1a34e
  41ab62:	ja     0x41abe2
  41ab64:	sbb    eax,0x31e97af
  41ab69:	push   edi
  41ab6a:	(bad)  
  41ab6b:	jp     0x41ab68
  41ab6d:	ja     0x41ab3d
  41ab6f:	icebp  
  41ab70:	shl    BYTE PTR [eax-0x72],cl
  41ab73:	das    
  41ab74:	hlt    
  41ab75:	cmp    esp,DWORD PTR [ebp-0x5b]
  41ab78:	xchg   DWORD PTR [ecx-0x791a4a3b],esp
  41ab7e:	pop    esp
  41ab7f:	fidiv  WORD PTR [eax+0x4b]
  41ab82:	aam    0x5d
  41ab84:	shl    bh,0x44
  41ab87:	and    BYTE PTR [esi-0xf501d6d],ch
  41ab8d:	inc    esp
  41ab8e:	jae    0x41ab28
  41ab90:	dec    ebp
  41ab91:	and    al,0xf5
  41ab93:	(bad)  
  41ab94:	pushf  
  41ab95:	lock jae 0x41ab2f
  41ab98:	add    dl,BYTE PTR [ecx-0x4352a700]
  41ab9e:	push   ebx
  41ab9f:	xchg   esp,eax
  41aba0:	sbb    DWORD PTR [esi-0x47],0xffffffe7
  41aba4:	icebp  
  41aba5:	add    al,0x6a
  41aba7:	push   es
  41aba8:	sub    edi,DWORD PTR [ecx+0x50e4794c]
  41abae:	daa    
  41abaf:	and    al,al
  41abb1:	popf   
  41abb2:	stos   BYTE PTR es:[edi],al
  41abb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abb4:	fistp  DWORD PTR [ecx+0xfd849bc]
  41abba:	hlt    
  41abbb:	jecxz  0x41abb8
  41abbd:	mul    dl
  41abbf:	mov    ecx,0xaaf4f04e
  41abc4:	adc    al,0xd4
  41abc6:	fcomp  DWORD PTR [ecx-0x20]
  41abc9:	inc    esp
  41abca:	daa    
  41abcb:	jp     0x41ac2a
  41abcd:	pop    edi
  41abce:	es clc 
  41abd0:	push   es
  41abd1:	and    BYTE PTR [eax],ah
  41abd3:	mov    dh,0xaa
  41abd5:	hlt    
  41abd6:	fild   QWORD PTR [ecx]
  41abd8:	mov    bl,0x59
  41abda:	add    dh,BYTE PTR [edx-0x5f530920]
  41abe0:	imul   BYTE PTR [edx-0x5d4a7495]
  41abe6:	sub    al,bl
  41abe8:	or     al,0x9d
  41abea:	adc    DWORD PTR [ecx+0x1e],edx
  41abed:	das    
  41abee:	out    0x2f,al
  41abf0:	and    eax,0xb6a1cd8e
  41abf5:	xchg   esi,eax
  41abf6:	xchg   DWORD PTR [esp+eax*1],ebp
  41abf9:	lods   eax,DWORD PTR ds:[esi]
  41abfa:	sar    DWORD PTR [esi],0xfa
  41abfd:	ss ret 0xf1aa
  41ac01:	shl    DWORD PTR [edi],1
  41ac03:	lods   al,BYTE PTR ds:[esi]
  41ac04:	je     0x41ab9a
  41ac06:	sti    
  41ac07:	mov    ch,0xee
  41ac09:	mov    edi,0x55ce7267
  41ac0e:	dec    ecx
  41ac0f:	inc    ebp
  41ac10:	nop
  41ac11:	inc    ecx
  41ac12:	fisubr WORD PTR [eax]
  41ac14:	rcl    DWORD PTR [edi-0x1c],1
  41ac17:	pop    edi
  41ac18:	mov    al,ds:0xbce6b983
  41ac1d:	test   eax,0xc549f032
  41ac22:	into   
  41ac23:	xchg   DWORD PTR [ebp+0x2d],esi
  41ac26:	into   
  41ac27:	mov    esi,0x2090fd68
  41ac2c:	mov    ecx,0x48339f1f
  41ac31:	adc    al,0xc8
  41ac33:	not    esi
  41ac35:	jmp    0x9810:0x322d3cbc
  41ac3c:	add    DWORD PTR [eax],0x16
  41ac3f:	jo     0x41ac5a
  41ac41:	mov    ch,0xd6
  41ac43:	sub    esp,DWORD PTR ds:[ecx+0x7797cb8c]
  41ac4a:	cdq    
  41ac4b:	mov    eax,ds:0xc440910b
  41ac50:	add    ah,BYTE PTR [ebx]
  41ac52:	sbb    al,0xc1
  41ac54:	je     0x41ac9f
  41ac56:	dec    BYTE PTR [esi-0x5fa12a6]
  41ac5c:	mov    ds:0xccec9167,eax
  41ac61:	adc    al,dl
  41ac63:	cli    
  41ac64:	test   al,0x39
  41ac66:	adc    ch,BYTE PTR [edx+0x2fddb041]
  41ac6c:	or     DWORD PTR [edx+0x6294edb2],0xf
  41ac73:	rcr    ebp,0xbd
  41ac76:	ins    BYTE PTR es:[edi],dx
  41ac77:	out    0x32,al
  41ac79:	xor    cl,BYTE PTR [eax]
  41ac7b:	xchg   edi,eax
  41ac7c:	push   esi
  41ac7d:	lahf   
  41ac7e:	pop    edi
  41ac7f:	loop   0x41ac5d
  41ac81:	out    0xd0,al
  41ac83:	dec    esp
  41ac84:	das    
  41ac85:	scas   eax,DWORD PTR es:[edi]
  41ac86:	test   esi,0xec7cd8ec
  41ac8c:	pop    esp
  41ac8d:	rep outs dx,BYTE PTR gs:[esi]
  41ac90:	je     0x41ac8c
  41ac92:	push   ecx
  41ac93:	stos   DWORD PTR es:[edi],eax
  41ac94:	iret   
  41ac95:	add    al,0x37
  41ac97:	inc    ebx
  41ac98:	idiv   BYTE PTR [edi]
  41ac9a:	popf   
  41ac9b:	cdq    
  41ac9c:	mov    esi,edi
  41ac9e:	pop    esi
  41ac9f:	push   edi
  41aca0:	sbb    BYTE PTR [ebx+0x73],cl
  41aca3:	mov    edi,0x8a091b48
  41aca8:	test   DWORD PTR [esi],ebx
  41acaa:	adc    DWORD PTR [edx+0x1016f48e],esi
  41acb0:	adc    BYTE PTR [eax-0x5fe6947e],dh
  41acb6:	jmp    0x41ad10
  41acb8:	xor    eax,0x8b57a146
  41acbd:	call   DWORD PTR [eax]
  41acbf:	popf   
  41acc0:	push   0x491a8a83
  41acc5:	add    edx,DWORD PTR [eax+ecx*1+0x4510581d]
  41accc:	push   edx
  41accd:	lahf   
  41acce:	dec    esi
  41accf:	aaa    
  41acd0:	stos   BYTE PTR es:[edi],al
  41acd1:	add    ah,bh
  41acd3:	mov    ebp,0x7feb59e2
  41acd8:	mov    ah,0xdd
  41acda:	sub    al,0x24
  41acdc:	jmp    0xd0cfbad9
  41ace1:	push   edi
  41ace2:	push   0x876c46c
  41ace7:	mov    ecx,0xff69d9f6
  41acec:	ss push es
  41acee:	jg     0x41acff
  41acf0:	mov    esp,0xc1eb9fe2
  41acf5:	and    al,0xc2
  41acf7:	xchg   ebx,eax
  41acf8:	fs inc edx
  41acfa:	in     eax,dx
  41acfb:	stos   BYTE PTR es:[edi],al
  41acfc:	imul   esp,ebp,0xa34ec98b
  41ad02:	and    BYTE PTR [edi+0x3565b52e],ch
  41ad08:	xor    eax,0x7030e8e3
  41ad0d:	inc    ebp
  41ad0e:	icebp  
  41ad0f:	dec    edi
  41ad10:	dec    edi
  41ad11:	(bad)  
  41ad12:	jmp    0x41ad14
  41ad14:	or     al,0x1a
  41ad16:	ins    DWORD PTR es:[edi],dx
  41ad17:	(bad)  
  41ad18:	cli    
  41ad19:	es push eax
  41ad1b:	or     BYTE PTR [ebp-0x653ffea2],dh
  41ad21:	fucom  st(7)
  41ad23:	mov    edi,0x32fcb908
  41ad28:	or     BYTE PTR [edx],dl
  41ad2a:	pop    edx
  41ad2b:	ss pusha 
  41ad2d:	xchg   edi,eax
  41ad2e:	test   eax,0xd1b96f13
  41ad33:	cli    
  41ad34:	mov    DWORD PTR [edi],eax
  41ad36:	mov    al,ds:0xdd06c8dd
  41ad3b:	jg     0x41acce
  41ad3d:	add    al,0xd9
  41ad3f:	mov    al,0xbb
  41ad41:	pop    esi
  41ad42:	mov    fs,edx
  41ad44:	stos   BYTE PTR es:[edi],al
  41ad45:	xlat   BYTE PTR ds:[ebx]
  41ad46:	hlt    
  41ad47:	(bad)  
  41ad48:	cs mov bh,0x10
  41ad4b:	sti    
  41ad4c:	arpl   WORD PTR [esi+0x42741f87],di
  41ad52:	cld    
  41ad53:	shl    BYTE PTR [edi+esi*8+0x59e02345],0x5e
  41ad5b:	push   es
  41ad5c:	and    bl,BYTE PTR [esi+0x69285783]
  41ad62:	push   edi
  41ad63:	sbb    al,0x52
  41ad65:	jo     0x41ad30
  41ad67:	outs   dx,DWORD PTR ds:[esi]
  41ad68:	scas   al,BYTE PTR es:[edi]
  41ad69:	scas   al,BYTE PTR es:[edi]
  41ad6a:	sub    eax,0x214f75b2
  41ad6f:	scas   al,BYTE PTR es:[edi]
  41ad70:	xchg   edx,eax
  41ad71:	jg     0x41addf
  41ad73:	pop    ds
  41ad74:	ja     0x41ad22
  41ad76:	add    ebx,DWORD PTR [eax-0x2deb5cbc]
  41ad7c:	inc    ecx
  41ad7d:	and    eax,0x5df5a8a2
  41ad83:	(bad)  
  41ad87:	outs   dx,BYTE PTR ds:[esi]
  41ad88:	shl    DWORD PTR [esi+0x2],1
  41ad8b:	xchg   esi,eax
  41ad8c:	call   0x3a1c:0xf5ed5a5c
  41ad93:	and    BYTE PTR [ecx+0x22],ch
  41ad96:	push   ss
  41ad97:	fdiv   st(1),st
  41ad99:	cli    
  41ad9a:	jbe    0x41adb3
  41ad9c:	inc    edx
  41ad9d:	adc    al,0x34
  41ad9f:	test   eax,0xca9cd08b
  41ada4:	popf   
  41ada5:	cmp    al,0xb5
  41ada7:	aaa    
  41ada8:	xchg   BYTE PTR [ecx+0x3f4d43a1],al
  41adae:	mov    esp,0xc5de9788
  41adb3:	inc    esp
  41adb4:	jbe    0x41adb0
  41adb6:	sub    BYTE PTR [esi-0x36],bh
  41adb9:	cwde   
  41adba:	je     0x41adfa
  41adbc:	out    dx,al
  41adbd:	sbb    BYTE PTR [eax-0x58f10ac3],bh
  41adc3:	cmp    BYTE PTR [ecx],bh
  41adc5:	rcl    al,cl
  41adc7:	idiv   BYTE PTR [esi-0x5f1674c9]
  41adcd:	pop    ss
  41adce:	or     ah,dl
  41add0:	mov    esp,0xefc0e7b2
  41add5:	push   ecx
  41add6:	iret   
  41add7:	in     al,0xa6
  41add9:	dec    eax
  41adda:	mov    bl,0x41
  41addc:	cdq    
  41addd:	pushf  
  41adde:	add    bh,cl
  41ade0:	ja     0x41ada7
  41ade2:	and    ecx,ecx
  41ade4:	rol    ch,cl
  41ade6:	or     bh,BYTE PTR ds:0x4eeb47ad
  41adec:	es xchg edx,eax
  41adee:	pop    esp
  41adef:	dec    eax
  41adf0:	and    al,0xbe
  41adf2:	inc    esp
  41adf3:	adc    BYTE PTR [ecx],bh
  41adf5:	and    al,BYTE PTR [ecx-0x5bc38dce]
  41adfb:	out    dx,al
  41adfc:	gs out dx,al
  41adfe:	mov    BYTE PTR [esi-0x64],al
  41ae01:	jp     0x41adad
  41ae03:	sbb    al,0x1e
  41ae05:	int    0x88
  41ae07:	repnz fcom DWORD PTR [eax-0x3a]
  41ae0b:	and    DWORD PTR ds:0x74ef3f0b,0x68
  41ae12:	adc    ebp,DWORD PTR [ebx+0x25]
  41ae15:	rol    BYTE PTR [ebx+0x9bccdb],0x4a
  41ae1c:	mov    al,ds:0x41c45418
  41ae21:	bound  edi,QWORD PTR [edx+0x75]
  41ae24:	pop    ebp
  41ae25:	ret    0xc7b4
  41ae28:	mov    edi,eax
  41ae2a:	jecxz  0x41ae88
  41ae2c:	jns    0x41ae8c
  41ae2e:	sbb    DWORD PTR [ecx-0x1580fe1a],esi
  41ae34:	inc    ecx
  41ae35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae36:	icebp  
  41ae37:	jo     0x41adbd
  41ae39:	mov    esp,0xe893be60
  41ae3e:	(bad)  
  41ae3f:	cli    
  41ae40:	cmovl  edx,DWORD PTR [edx-0x6cab8012]
  41ae47:	mov    edx,ds
  41ae49:	out    dx,al
  41ae4a:	xchg   edi,eax
  41ae4b:	retf   
  41ae4c:	adc    DWORD PTR [edx-0x1],ebp
  41ae4f:	pop    eax
  41ae50:	pop    esp
  41ae51:	out    0xd1,al
  41ae53:	rol    BYTE PTR [ecx+0x5a],0x2
  41ae57:	dec    ebx
  41ae58:	scas   eax,DWORD PTR es:[edi]
  41ae59:	mov    ebp,0x7509e3bd
  41ae5e:	das    
  41ae5f:	outs   dx,DWORD PTR ds:[esi]
  41ae60:	fsqrt  
  41ae62:	mov    dh,0x3
  41ae64:	mov    eax,ds:0x4441d091
  41ae69:	xchg   edi,eax
  41ae6a:	cld    
  41ae6b:	in     al,0xbb
  41ae6d:	mov    ds:0x906e9889,al
  41ae72:	mov    eax,0x2b588323
  41ae77:	dec    ebx
  41ae78:	inc    esi
  41ae79:	inc    esp
  41ae7a:	ror    BYTE PTR [edi+0x3a],cl
  41ae7d:	ins    BYTE PTR es:[edi],dx
  41ae7e:	test   al,0x57
  41ae80:	lods   al,BYTE PTR ds:[esi]
  41ae81:	in     eax,dx
  41ae82:	pop    esp
  41ae83:	jns    0x41ae78
  41ae85:	jecxz  0x41aed1
  41ae87:	out    dx,al
  41ae88:	jl     0x41aeeb
  41ae8a:	or     dh,BYTE PTR [edi+0x4396b853]
  41ae90:	mov    ch,0x66
  41ae92:	lds    ebp,FWORD PTR [edx+ebx*1]
  41ae95:	xchg   ebp,eax
  41ae96:	add    al,0xd9
  41ae98:	aad    0xe0
  41ae9a:	xor    esp,esp
  41ae9c:	mov    dl,0xb0
  41ae9e:	cmc    
  41ae9f:	ja     0x41ae83
  41aea1:	adc    BYTE PTR [edx+0x29aaaf2a],dl
  41aea7:	jne    0x41aeaf
  41aea9:	jle    0x41aeb1
  41aeab:	aad    0x46
  41aead:	dec    ebx
  41aeae:	dec    ebp
  41aeaf:	(bad)  [ebp-0x268b0c9b]
  41aeb5:	xchg   esp,eax
  41aeb6:	and    al,0x3a
  41aeb8:	inc    eax
  41aeb9:	fs jge 0x41ae92
  41aebc:	and    eax,0xc5c0da84
  41aec1:	cmp    DWORD PTR [ebx],ecx
  41aec3:	or     al,0x75
  41aec5:	pushf  
  41aec6:	lock and bl,BYTE PTR [edx+0x30]
  41aeca:	ins    DWORD PTR es:[edi],dx
  41aecb:	inc    esi
  41aecc:	jg     0x41aee0
  41aece:	adc    DWORD PTR [edx+0x12],ebp
  41aed1:	inc    edi
  41aed2:	dec    edx
  41aed3:	add    DWORD PTR [edi+ecx*2-0x7d472ab9],eax
  41aeda:	cs fs ins BYTE PTR es:[edi],dx
  41aedd:	call   0x98a180ad
  41aee2:	jbe    0x41ae9a
  41aee4:	cdq    
  41aee5:	jnp    0x41af1b
  41aee7:	dec    ecx
  41aee8:	mov    al,0xc3
  41aeea:	cmp    bl,BYTE PTR [edi]
  41aeec:	lods   al,BYTE PTR ds:[esi]
  41aeed:	pop    ecx
  41aeee:	jmp    0xabab:0xc5729dc
  41aef5:	aam    0xa9
  41aef7:	pushf  
  41aef8:	xchg   ebp,eax
  41aef9:	adc    edx,DWORD PTR [eax]
  41aefb:	(bad)  
  41aefd:	push   ebp
  41aefe:	push   ecx
  41aeff:	jns    0x41ae84
  41af01:	popf   
  41af02:	cld    
  41af03:	(bad)  
  41af04:	sbb    DWORD PTR [edi-0x33],ecx
  41af07:	or     eax,0x70841c23
  41af0c:	or     al,0x2a
  41af0e:	icebp  
  41af0f:	pop    ecx
  41af10:	cwde   
  41af11:	pop    esi
  41af12:	cmp    DWORD PTR [edi+0x688bc8e2],ebx
  41af18:	(bad)  
  41af19:	(bad)  
  41af1a:	mov    bh,bl
  41af1c:	mov    edi,db4
  41af1f:	jecxz  0x41af08
  41af21:	add    al,0x31
  41af23:	cmp    ebp,DWORD PTR [ebx]
  41af25:	jl     0x41af00
  41af27:	(bad)  
  41af29:	lahf   
  41af2a:	shl    DWORD PTR [ebx+ebx*2-0x71],1
  41af2e:	jecxz  0x41aed4
  41af30:	dec    esp
  41af31:	mov    esi,0x20dd51c5
  41af36:	jecxz  0x41af42
  41af38:	add    al,0x61
  41af3a:	nop
  41af3b:	jb     0x41af81
  41af3d:	xchg   esp,eax
  41af3e:	pop    edi
  41af3f:	(bad)  
  41af40:	aaa    
  41af41:	cli    
  41af42:	dec    eax
  41af43:	mov    cl,0x19
  41af45:	sub    al,0xdc
  41af47:	fs mov ah,0x50
  41af4a:	jbe    0x41af2d
  41af4c:	test   DWORD PTR [edi+0x53],0x42a74d10
  41af53:	lahf   
  41af54:	cld    
  41af55:	shl    DWORD PTR [ebx+edx*4+0x4f232ed],cl
  41af5c:	or     bl,BYTE PTR [ebp+0x4eb62545]
  41af62:	pop    ds
  41af63:	(bad)  
  41af64:	in     al,dx
  41af65:	jno    0x41af2f
  41af67:	add    eax,0x984f3eb6
  41af6c:	add    eax,0x9caddf1a
  41af71:	or     esp,DWORD PTR [esi-0x96deb58]
  41af77:	inc    ebp
  41af78:	mov    dh,0x85
  41af7a:	ja     0x41afa5
  41af7c:	dec    ebx
  41af7d:	outs   dx,BYTE PTR ds:[esi]
  41af7e:	les    eax,FWORD PTR [edx]
  41af80:	dec    esp
  41af81:	sbb    edx,DWORD PTR [ebp+0x413bed6c]
  41af87:	arpl   WORD PTR [edi],bp
  41af89:	sbb    eax,0x871d8ca3
  41af8e:	sti    
  41af8f:	imul   BYTE PTR [edi-0x7eb21c9c]
  41af95:	mov    esi,ebp
  41af97:	in     eax,dx
  41af98:	jnp    0x41af98
  41af9a:	add    edi,DWORD PTR [ebp-0x4468644e]
  41afa0:	ins    BYTE PTR es:[edi],dx
  41afa1:	mov    al,ds:0x9e087230
  41afa6:	int3   
  41afa7:	jo     0x41afa0
  41afa9:	pop    ss
  41afaa:	sub    ah,BYTE PTR [edx+0x3764424d]
  41afb0:	xor    ebp,DWORD PTR [ebx-0x628d1e30]
  41afb6:	jge    0x41aff3
  41afb8:	push   ecx
  41afb9:	fadd   DWORD PTR [edi+ecx*8-0x70]
  41afbd:	xchg   DWORD PTR [ebx],eax
  41afbf:	sbb    bl,dh
  41afc1:	push   cs
  41afc2:	ss push ds
  41afc4:	ret    
  41afc5:	mov    eax,0x558b8600
  41afca:	mov    dl,0x8d
  41afcc:	xor    eax,0x5a07624b
  41afd1:	mov    bh,0x85
  41afd3:	pop    es
  41afd4:	cmp    dl,BYTE PTR [ebp+0x49519b8]
  41afda:	add    BYTE PTR [edi*2-0x61fbd197],bh
  41afe1:	outs   dx,DWORD PTR ds:[esi]
  41afe2:	mov    bh,cl
  41afe4:	cli    
  41afe5:	stos   DWORD PTR es:[edi],eax
  41afe6:	and    BYTE PTR [eax-0x26e55ab9],0xe6
  41afed:	adc    edx,ecx
  41afef:	test   dl,ah
  41aff1:	(bad)  
  41aff2:	xor    ecx,DWORD PTR [edi-0xd]
  41aff5:	mov    cs,WORD PTR [ecx]
  41aff7:	cwde   
  41aff8:	mov    edi,0x5bc9529a
  41affd:	icebp  
  41affe:	xchg   ebx,eax
  41afff:	push   eax
  41b000:	xchg   edx,eax
  41b001:	out    0x8d,eax
  41b003:	push   0x32
  41b005:	inc    ebx
  41b006:	inc    esi
  41b007:	mov    cl,0x55
  41b009:	jns    0x41afe7
  41b00b:	fs sbb al,0x45
  41b00e:	jbe    0x41b00a
  41b010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b011:	mov    cl,0x8e
  41b013:	fsubr  st(5),st
  41b015:	xlat   BYTE PTR ds:[ebx]
  41b016:	(bad)  
  41b018:	imul   ecx,DWORD PTR [esi],0xffffffc2
  41b01b:	push   0xffffffbb
  41b01d:	xor    ah,BYTE PTR [esi]
  41b01f:	call   0x332d:0x415ccce6
  41b026:	dec    esi
  41b027:	stos   DWORD PTR es:[edi],eax
  41b028:	xchg   edx,eax
  41b029:	add    BYTE PTR [edx],0x1e
  41b02c:	loop   0x41b081
  41b02e:	inc    ecx
  41b02f:	dec    esi
  41b030:	jl     0x41afb3
  41b032:	inc    esp
  41b033:	or     BYTE PTR [eax-0x1bc11aa6],cl
  41b039:	test   eax,0xb401928c
  41b03e:	test   eax,0x4785795c
  41b043:	pop    esp
  41b044:	jnp    0x41b012
  41b046:	dec    ebp
  41b047:	jno    0x41affd
  41b049:	ror    BYTE PTR [edi+0x8dded68],cl
  41b04f:	in     al,0xcd
  41b051:	popf   
  41b052:	mov    BYTE PTR ds:0x3c2d66f8,dh
  41b058:	or     al,bh
  41b05a:	fidivr WORD PTR [ebx]
  41b05c:	pop    ss
  41b05d:	pop    ss
  41b05e:	and    eax,0x3f49880e
  41b063:	mov    BYTE PTR [ecx+0x68],dl
  41b066:	js     0x41b03d
  41b068:	mov    bh,0xb8
  41b06a:	je     0x41b0a1
  41b06c:	cmp    al,0xc7
  41b06e:	mov    WORD PTR [ecx+0x2e],cs
  41b071:	xchg   ebp,eax
  41b072:	xor    bh,BYTE PTR ds:0x77ff6efa
  41b078:	and    BYTE PTR [di-0x483f],bh
  41b07d:	sbb    eax,0x3d7cbd76
  41b082:	ins    BYTE PTR es:[edi],dx
  41b083:	push   ds
  41b084:	mov    al,ds:0xa616745c
  41b089:	sub    al,BYTE PTR [ebx]
  41b08b:	cmp    DWORD PTR [ebp+0x110004ad],edx
  41b091:	pop    ds
  41b092:	jp     0x41b079
  41b094:	das    
  41b095:	retf   
  41b096:	jb     0x41b097
  41b098:	iretw  
  41b09a:	scas   eax,DWORD PTR es:[di]
  41b09c:	imul   esi,DWORD PTR [ecx+0x55418d5c],0x4295008d
  41b0a6:	outs   dx,BYTE PTR ds:[esi]
  41b0a7:	xor    BYTE PTR [eax-0x24],0x7b
  41b0ab:	jns    0x41b03b
  41b0ad:	and    bh,BYTE PTR ds:0x4d7d9538
  41b0b3:	vpslld xmm6,xmm5,XMMWORD PTR [esi+0x182ec53e]
  41b0bc:	inc    esp
  41b0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0be:	int3   
  41b0bf:	mov    ebp,0xdc78b568
  41b0c4:	rcr    DWORD PTR [ebp-0x1833d056],1
  41b0ca:	int3   
  41b0cb:	and    esi,eax
  41b0cd:	push   ds
  41b0ce:	inc    edi
  41b0cf:	mov    ebp,0x402361c3
  41b0d4:	in     al,dx
  41b0d5:	xor    eax,0x5c2ab513
  41b0da:	or     eax,0xffffffe0
  41b0dd:	dec    esp
  41b0de:	pop    eax
  41b0df:	sbb    ebp,DWORD PTR [ecx]
  41b0e1:	push   eax
  41b0e2:	out    dx,eax
  41b0e3:	inc    edx
  41b0e4:	pop    ds
  41b0e5:	out    dx,eax
  41b0e6:	je     0x41b095
  41b0e8:	mov    ah,0xf2
  41b0ea:	clc    
  41b0eb:	cmp    al,0x9f
  41b0ed:	jecxz  0x41b07a
  41b0ef:	in     eax,dx
  41b0f0:	(bad)  
  41b0f2:	push   0x29
  41b0f4:	jns    0x41b09f
  41b0f6:	fwait
  41b0f7:	adc    ecx,esi
  41b0f9:	mov    edi,0x1183cf05
  41b0fe:	sbb    BYTE PTR [ebx],0xc4
  41b101:	dec    eax
  41b102:	call   0x7d2d04e0
  41b107:	sbb    al,dl
  41b109:	xchg   edi,eax
  41b10a:	xor    eax,0x50c33356
  41b10f:	or     DWORD PTR [edi+edi*1-0xc],ebp
  41b113:	jmp    0xdd27:0xf6a9310
  41b11a:	and    ch,BYTE PTR [ebx]
  41b11c:	mov    esi,0xee5daa5a
  41b121:	mov    BYTE PTR [ebp-0xea1b9ef],al
  41b127:	adc    bl,dl
  41b129:	push   esi
  41b12a:	mov    BYTE PTR [ecx+0x22],ah
  41b12d:	ja     0x41b13a
  41b12f:	push   esp
  41b130:	scas   eax,DWORD PTR es:[edi]
  41b131:	or     al,0xa0
  41b133:	fs gs mov ecx,0xb69971e8
  41b13a:	xchg   ebx,eax
  41b13b:	leave  
  41b13c:	fwait
  41b13d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b13e:	or     DWORD PTR [edi+0x3c7ce4c3],esp
  41b144:	cmp    BYTE PTR [esi-0x6757a684],ah
  41b14a:	rcr    BYTE PTR [eax-0x2],0x12
  41b14e:	scas   eax,DWORD PTR es:[edi]
  41b14f:	mov    ah,0xd0
  41b151:	stos   DWORD PTR es:[edi],eax
  41b152:	lock mov eax,0xc683aa98
  41b158:	pop    esp
  41b159:	mov    ds:0x51f03606,eax
  41b15e:	leave  
  41b15f:	leave  
  41b160:	sbb    eax,0xfe1b42a6
  41b165:	lock xchg ebp,eax
  41b167:	inc    ebp
  41b168:	sti    
  41b169:	in     al,0x8c
  41b16b:	out    0x62,al
  41b16d:	(bad)  
  41b16e:	mov    ds,WORD PTR [esi-0x73]
  41b171:	aam    0x45
  41b173:	and    al,al
  41b175:	push   cs
  41b176:	es and al,0x14
  41b179:	repnz and bh,BYTE PTR [ecx+0x5]
  41b17d:	or     esp,esp
  41b17f:	add    eax,0xcf752f10
  41b184:	push   eax
  41b185:	xor    esi,DWORD PTR [edi+0x4ffc21f8]
  41b18b:	mov    ebp,0x957536c6
  41b190:	adc    edi,ecx
  41b192:	or     DWORD PTR [edx-0x147c49ae],0x6881a164
  41b19c:	arpl   WORD PTR [ecx-0x34ea5e6b],sp
  41b1a2:	mov    es:0xa6580062,al
  41b1a8:	out    0x19,eax
  41b1aa:	mov    cl,0x24
  41b1ac:	aam    0x45
  41b1ae:	popf   
  41b1af:	shl    esp,cl
  41b1b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1b2:	jmp    0x9ef7107
  41b1b7:	lods   al,BYTE PTR ds:[esi]
  41b1b8:	ins    DWORD PTR es:[edi],dx
  41b1b9:	setbe  BYTE PTR ds:0x7a2164a6
  41b1c0:	xchg   esi,eax
  41b1c1:	mov    esp,0x56bebba
  41b1c6:	xchg   ebp,eax
  41b1c7:	ret    
  41b1c8:	xor    DWORD PTR [edx+0x73c0486b],eax
  41b1ce:	and    al,0x76
  41b1d0:	ins    BYTE PTR es:[edi],dx
  41b1d1:	fst    DWORD PTR [eax-0x2]
  41b1d4:	xchg   esi,eax
  41b1d5:	or     edx,DWORD PTR [edi-0x76]
  41b1d8:	jge    0x41b1d5
  41b1da:	sbb    ebp,esp
  41b1dc:	pop    edx
  41b1dd:	add    cl,bh
  41b1df:	ja     0x41b1bc
  41b1e1:	inc    edi
  41b1e2:	mov    dh,0x86
  41b1e4:	std    
  41b1e5:	stc    
  41b1e6:	int    0xfb
  41b1e8:	mov    ch,0x83
  41b1ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1eb:	adc    BYTE PTR [eax+0x79],bh
  41b1ee:	jmp    0x5a39:0x9b47960c
  41b1f5:	cmp    al,0x47
  41b1f7:	cli    
  41b1f8:	pop    ecx
  41b1f9:	mov    eax,ds:0x9a50adcc
  41b1fe:	sbb    al,0xa3
  41b200:	addr16 (bad) 
  41b202:	fist   DWORD PTR [ebp+ecx*1+0x2f]
  41b206:	and    BYTE PTR [edx-0x743f7d53],0xc5
  41b20d:	add    eax,0xf2673a78
  41b212:	(bad)  
  41b213:	cmp    eax,0x2d0c6aed
  41b218:	mov    esp,0x1dfdf113
  41b21d:	aaa    
  41b21e:	out    0xe2,eax
  41b220:	inc    ebp
  41b221:	cli    
  41b222:	call   0x9d5186a3
  41b227:	aas    
  41b228:	dec    edi
  41b229:	mov    dl,0xf
  41b22b:	or     eax,0x907a5b26
  41b230:	mov    al,ds:0x9948d045
  41b235:	mov    dh,0xca
  41b237:	sahf   
  41b238:	pop    esp
  41b239:	push   esp
  41b23a:	xchg   ebx,eax
  41b23b:	push   ds
  41b23c:	sub    DWORD PTR [eax],ecx
  41b23e:	call   0x416d0e4f
  41b243:	sub    al,BYTE PTR [edi+0x3b438b57]
  41b249:	fistp  QWORD PTR [ebp-0x26348697]
  41b24f:	lods   eax,DWORD PTR ds:[esi]
  41b250:	adc    eax,0x6533a09e
  41b255:	stc    
  41b256:	loopne 0x41b2d2
  41b258:	in     al,dx
  41b259:	inc    ebp
  41b25a:	sub    cl,BYTE PTR [edx+edx*1]
  41b25d:	(bad)  [edi]
  41b260:	push   ds
  41b261:	push   edi
  41b262:	in     eax,dx
  41b263:	std    
  41b264:	and    DWORD PTR [edx],esi
  41b266:	in     eax,dx
  41b267:	das    
  41b268:	push   cs
  41b269:	adc    ch,BYTE PTR [ebx-0x6dc88c29]
  41b26f:	fmulp  st(3),st
  41b271:	test   al,0x70
  41b273:	pop    esp
  41b274:	rcl    BYTE PTR [edi+eax*2-0x175ada0f],0x3d
  41b27c:	jg     0x41b283
  41b27e:	mov    edi,0x908181c8
  41b283:	adc    eax,0xdfa69bde
  41b288:	les    eax,FWORD PTR [ebx*2-0x2d9c35a3]
  41b28f:	dec    edx
  41b290:	ss add ch,ah
  41b293:	push   esp
  41b294:	mov    WORD PTR [edi+0x78c73db1],fs
  41b29a:	pop    ebx
  41b29b:	stos   BYTE PTR es:[edi],al
  41b29c:	xor    DWORD PTR ds:0x917767e4,esp
  41b2a2:	or     al,0xc2
  41b2a4:	pusha  
  41b2a5:	cmc    
  41b2a6:	scas   eax,DWORD PTR es:[edi]
  41b2a7:	xchg   edx,eax
  41b2a8:	jbe    0x41b2e8
  41b2aa:	loope  0x41b2dd
  41b2ac:	fwait
  41b2ad:	pop    es
  41b2ae:	cdq    
  41b2af:	scas   eax,DWORD PTR es:[edi]
  41b2b0:	mov    esi,0x8d7c3ed
  41b2b5:	jno    0x41b2c1
  41b2b7:	call   0x65d8b207
  41b2bc:	and    dl,dh
  41b2be:	(bad)  
  41b2c0:	enter  0xb725,0x76
  41b2c4:	mov    WORD PTR ss:[ebp+0x45a2045b],fs
  41b2cb:	imul   ecx,DWORD PTR [edi-0x77],0xeb405ac3
  41b2d2:	inc    edx
  41b2d3:	xor    ecx,DWORD PTR [ebx+0x3e536a85]
  41b2d9:	je     0x41b32f
  41b2db:	(bad)  
  41b2dc:	inc    esi
  41b2dd:	in     eax,dx
  41b2de:	fbstp  TBYTE PTR [ebx-0x80]
  41b2e1:	pop    ecx
  41b2e2:	imul   edx,DWORD PTR [eax-0x423324bc],0xa6a3898c
  41b2ec:	xlat   BYTE PTR ds:[ebx]
  41b2ed:	lea    edi,[ebp-0x70ad9552]
  41b2f3:	lods   al,BYTE PTR ds:[esi]
  41b2f4:	scas   al,BYTE PTR es:[edi]
  41b2f5:	fldenv [edx+0x7effc1]
  41b2fb:	in     al,0x29
  41b2fd:	hlt    
  41b2fe:	mov    bh,0x7f
  41b300:	sub    eax,0xed82f523
  41b305:	pop    es
  41b306:	out    dx,eax
  41b307:	or     ebx,DWORD PTR [ecx+0x4]
  41b30a:	loope  0x41b372
  41b30c:	mov    eax,ds:0x1b07386c
  41b311:	and    DWORD PTR [edx+eax*1-0xd],esi
  41b315:	lahf   
  41b316:	mov    dh,0x1f
  41b318:	out    dx,eax
  41b319:	jno    0x41b2c3
  41b31b:	pop    esi
  41b31c:	mov    eax,ds:0x7e0508f6
  41b321:	outs   dx,BYTE PTR ds:[esi]
  41b322:	ss pushf 
  41b324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b325:	jne    0x41b38d
  41b327:	lods   eax,DWORD PTR ds:[esi]
  41b328:	mov    dl,0xb4
  41b32a:	jne    0x41b323
  41b32c:	add    esp,ecx
  41b32e:	loope  0x41b2ee
  41b330:	adc    BYTE PTR [ecx-0x774ae70d],dh
  41b336:	push   esp
  41b337:	hlt    
  41b338:	or     edx,DWORD PTR [eax+ecx*2]
  41b33b:	loope  0x41b340
  41b33d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b33e:	push   esi
  41b33f:	shl    BYTE PTR [esi+ebp*8-0x59],1
  41b343:	ret    
  41b344:	ins    DWORD PTR es:[edi],dx
  41b345:	aam    0xd9
  41b347:	mov    ah,0x33
  41b349:	test   eax,0x500e1e5f
  41b34e:	cmp    al,0xe4
  41b350:	aas    
  41b351:	aad    0x61
  41b353:	stos   DWORD PTR es:[edi],eax
  41b354:	jmp    0x41b312
  41b356:	xchg   esi,eax
  41b357:	and    al,0x9c
  41b359:	jno    0x41b309
  41b35b:	gs fs push edx
  41b35e:	xchg   BYTE PTR [edx+0x6f],ch
  41b361:	je     0x41b332
  41b363:	mov    ebx,0xc7479041
  41b368:	mov    al,0x66
  41b36a:	addr16 cli 
  41b36c:	xchg   ebp,eax
  41b36d:	inc    edx
  41b36e:	mov    eax,ds:0x254a3bd5
  41b373:	jno    0x41b30c
  41b375:	inc    ebx
  41b376:	jae    0x41b3a3
  41b378:	imul   eax,DWORD PTR [ebx+0xe],0xc63a00fc
  41b37f:	sti    
  41b380:	sbb    DWORD PTR [edi+0x72],edx
  41b383:	jb     0x41b377
  41b385:	push   edx
  41b386:	gs jns 0x41b404
  41b389:	cmp    eax,0xe4c72248
  41b38e:	sub    DWORD PTR [edi+0x5ddb56de],ebp
  41b394:	cdq    
  41b395:	out    0xc0,eax
  41b397:	iret   
  41b398:	repz adc DWORD PTR [ebx],edx
  41b39b:	inc    edx
  41b39c:	call   0x22eb9a67
  41b3a1:	shl    ebx,1
  41b3a3:	adc    DWORD PTR [edx+0x1f775adb],ebx
  41b3a9:	jmp    0xf76dbe6d
  41b3ae:	add    DWORD PTR [ebp+0x2a],0x8f11d9a7
  41b3b5:	xor    al,0xb1
  41b3b7:	add    eax,DWORD PTR [edx-0x38a34ff2]
  41b3bd:	mov    al,ds:0xa21a5967
  41b3c2:	and    ch,BYTE PTR [ecx-0x3465b215]
  41b3c8:	enter  0x6630,0x27
  41b3cc:	add    eax,0xd3fa2300
  41b3d1:	inc    ebx
  41b3d2:	adc    ebp,ebp
  41b3d4:	fnstenv [eax-0x27]
  41b3d7:	dec    esp
  41b3d8:	shl    BYTE PTR [esi],0x15
  41b3db:	mov    ds:0xb5345669,al
  41b3e0:	(bad)  
  41b3e1:	fild   QWORD PTR [edi+0x23]
  41b3e4:	aas    
  41b3e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3e6:	push   ds
  41b3e7:	push   edx
  41b3e8:	mov    al,0xba
  41b3ea:	cmp    al,0xb4
  41b3ec:	out    0x8b,eax
  41b3ee:	cld    
  41b3ef:	cmp    eax,esi
  41b3f1:	test   DWORD PTR [ecx+0x1528f6e1],edx
  41b3f7:	add    ch,ch
  41b3f9:	in     eax,dx
  41b3fa:	arpl   WORD PTR es:[eax],cx
  41b3fd:	call   0x5e79:0xba999f51
  41b404:	(bad)  
  41b405:	mov    ch,0x55
  41b407:	ins    DWORD PTR es:[edi],dx
  41b408:	cmp    BYTE PTR [eax],ah
  41b40a:	call   0x1282:0x482902b6
  41b411:	aad    0xbd
  41b413:	popf   
  41b414:	cmp    ebp,0x6e
  41b417:	xchg   esp,eax
  41b418:	aam    0x4b
  41b41a:	dec    esp
  41b41b:	cld    
  41b41c:	aad    0xe5
  41b41e:	lea    ebp,[ebp+0x589e88ab]
  41b424:	mov    eax,0x8f647e03
  41b429:	cmc    
  41b42a:	data16 mov ch,0x3f
  41b42d:	das    
  41b42e:	dec    eax
  41b42f:	pop    ebp
  41b430:	push   0xeabfabd4
  41b435:	pop    ebp
  41b436:	test   eax,0xe1a57258
  41b43b:	push   0x69
  41b43d:	iret   
  41b43e:	icebp  
  41b43f:	fstp   TBYTE PTR [ebp+0x57b70ac]
  41b445:	jne    0x41b4c4
  41b447:	adc    al,ch
  41b449:	imul   ebp,DWORD PTR [ebx],0x1c31a28f
  41b44f:	in     al,dx
  41b450:	cmp    eax,DWORD PTR [ebx]
  41b452:	inc    esi
  41b453:	outs   dx,BYTE PTR ds:[esi]
  41b454:	in     eax,dx
  41b455:	cmp    BYTE PTR [ebp+0x614bf20e],0x52
  41b45c:	ja     0x41b4b4
  41b45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b45f:	div    BYTE PTR es:[ebx+0x63]
  41b463:	or     BYTE PTR [ebx-0x71],dh
  41b466:	es mov edx,0x1ee5781
  41b46c:	push   esp
  41b46d:	out    0x6a,al
  41b46f:	or     eax,0x831ac017
  41b474:	xchg   esi,eax
  41b475:	push   eax
  41b476:	cmp    esp,DWORD PTR [ecx]
  41b478:	push   0x1a
  41b47a:	rcl    DWORD PTR [edx],1
  41b47c:	mov    dh,0x99
  41b47e:	xor    ebp,ebp
  41b480:	ins    DWORD PTR es:[edi],dx
  41b481:	sbb    eax,ebx
  41b483:	iret   
  41b484:	and    eax,0xa448fae0
  41b489:	mov    al,0x23
  41b48b:	je     0x41b41b
  41b48d:	idiv   BYTE PTR [ebp+0x4eb62ada]
  41b493:	fwait
  41b494:	rcl    BYTE PTR [ecx],cl
  41b496:	inc    esp
  41b497:	fwait
  41b498:	mov    ah,0x7a
  41b49a:	xlat   BYTE PTR ds:[ebx]
  41b49b:	xor    eax,edi
  41b49d:	add    cl,ah
  41b49f:	mov    dl,bh
  41b4a1:	push   ebx
  41b4a2:	inc    ebx
  41b4a3:	loopne 0x41b435
  41b4a5:	jbe    0x41b4df
  41b4a7:	aaa    
  41b4a8:	dec    eax
  41b4a9:	ins    BYTE PTR es:[edi],dx
  41b4aa:	xlat   BYTE PTR ds:[ebx]
  41b4ab:	(bad)  
  41b4ac:	jmp    0x41b4fc
  41b4ae:	cli    
  41b4af:	bound  esp,QWORD PTR [edi]
  41b4b1:	cmc    
  41b4b2:	out    0x96,al
  41b4b4:	xchg   ebp,eax
  41b4b5:	mov    BYTE PTR [esi],cl
  41b4b7:	js     0x41b493
  41b4b9:	mov    ah,ch
  41b4bb:	rcl    BYTE PTR [esi-0x4a],1
  41b4be:	pop    ecx
  41b4bf:	imul   ecx,ebx,0xffffffac
  41b4c2:	push   ebp
  41b4c3:	and    edi,eax
  41b4c5:	(bad)  
  41b4c6:	(bad)  
  41b4c7:	inc    edi
  41b4c8:	lock add cl,BYTE PTR [ebx]
  41b4cb:	int    0x36
  41b4cd:	mov    al,ds:0x9f2eede2
  41b4d2:	add    bl,0x3
  41b4d5:	mov    edx,DWORD PTR [ebx]
  41b4d7:	lock or al,0xcf
  41b4da:	(bad)  
  41b4db:	outs   dx,BYTE PTR ds:[esi]
  41b4dc:	test   DWORD PTR [edx-0xf27198f],esp
  41b4e2:	sti    
  41b4e3:	or     al,0xc2
  41b4e5:	fadd   QWORD PTR [eax+0x29c5cab5]
  41b4eb:	mov    bh,0x86
  41b4ed:	scas   eax,DWORD PTR es:[edi]
  41b4ee:	or     al,0x5e
  41b4f0:	dec    edx
  41b4f1:	add    DWORD PTR [esi-0x27e7ae6f],ebp
  41b4f7:	icebp  
  41b4f8:	mov    al,ds:0xfe1afb61
  41b4fe:	(bad)  
  41b4ff:	adc    DWORD PTR [esi-0x26],0xc
  41b503:	pushw  cs
  41b505:	pop    edi
  41b506:	xor    dh,BYTE PTR ds:0x90c7d3c0
  41b50c:	es push ss
  41b50e:	inc    ebp
  41b50f:	jmp    0x41b4ee
  41b511:	loop   0x41b523
  41b513:	idiv   BYTE PTR [ecx*8-0x18b11a9a]
  41b51a:	mov    esi,0x6f80f278
  41b51f:	sub    DWORD PTR [ecx-0x7b99417c],eax
  41b525:	dec    eax
  41b526:	js     0x41b54a
  41b528:	sahf   
  41b529:	test   BYTE PTR [ecx-0x4d],bl
  41b52c:	sub    BYTE PTR [eax-0x3a],ah
  41b52f:	aaa    
  41b530:	inc    edi
  41b531:	jmp    0x51613c04
  41b536:	xor    eax,DWORD PTR [ecx+eiz*8+0x5d]
  41b53a:	shr    DWORD PTR [edx+0x21ed3aa9],0x5c
  41b541:	mov    ecx,DWORD PTR [esi]
  41b543:	xchg   edi,eax
  41b544:	inc    ecx
  41b545:	or     al,0x80
  41b547:	fistp  QWORD PTR [ebp-0x2d]
  41b54a:	cmp    ah,BYTE PTR [ebp-0x5b]
  41b54d:	or     DWORD PTR [esi],ecx
  41b54f:	cmovle esp,ebx
  41b552:	or     DWORD PTR [edi+ebp*4-0x12aad445],esp
  41b559:	push   ss
  41b55a:	les    esi,FWORD PTR [edx+0x12071866]
  41b560:	adc    ebp,DWORD PTR [ecx]
  41b562:	or     al,0x0
  41b564:	int    0x9f
  41b566:	jle    0x41b54e
  41b568:	or     BYTE PTR [ecx+ecx*2-0x63cadd4c],al
  41b56f:	sbb    bh,ah
  41b571:	test   eax,0x1d87a7fc
  41b576:	or     ch,BYTE PTR [eax+0x68c64145]
  41b57c:	jle    0x41b589
  41b57e:	jae    0x41b5ff
  41b580:	and    al,0xff
  41b582:	ror    DWORD PTR [esi+0x23fa3978],cl
  41b588:	add    BYTE PTR [ebp+0x3a696c48],ah
  41b58e:	dec    eax
  41b58f:	repz inc edi
  41b591:	sbb    al,0x0
  41b593:	ret    
  41b594:	jb     0x41b610
  41b596:	ins    DWORD PTR es:[edi],dx
  41b597:	out    dx,eax
  41b598:	retf   0xd559
  41b59b:	dec    ebx
  41b59c:	(bad)  
  41b59d:	mov    dl,0x9f
  41b59f:	fdivr  QWORD PTR [edx]
  41b5a1:	jnp    0x41b54e
  41b5a3:	add    al,0x2c
  41b5a5:	mov    edx,0x8a8addcd
  41b5aa:	mov    esp,0x2e0b598
  41b5af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5b0:	mov    dh,0xd6
  41b5b2:	arpl   WORD PTR [ecx],ax
  41b5b4:	xchg   BYTE PTR [esi+ebp*2],bl
  41b5b7:	out    dx,al
  41b5b8:	pop    ecx
  41b5b9:	int3   
  41b5ba:	mov    eax,0x9e6ce6c8
  41b5bf:	adc    esi,DWORD PTR [bp+0x4745]
  41b5c4:	(bad)  
  41b5c7:	mov    edx,0xaed611a0
  41b5cc:	cld    
  41b5cd:	mov    ecx,0xfd41a593
  41b5d2:	cmp    eax,0x67a862e0
  41b5d7:	xchg   esi,eax
  41b5d8:	dec    ecx
  41b5d9:	es pop edx
  41b5db:	mov    DWORD PTR [ecx],esp
  41b5dd:	scas   al,BYTE PTR es:[edi]
  41b5de:	or     al,0x6f
  41b5e0:	push   edi
  41b5e1:	push   esp
  41b5e2:	mov    esp,0xecbdc5cc
  41b5e7:	mov    eax,0xfc5d8ec9
  41b5ec:	mov    WORD PTR [eax],?
  41b5ee:	mov    al,ds:0x24b08063
  41b5f3:	or     BYTE PTR [eax+0x4b98339e],bh
  41b5f9:	dec    ebp
  41b5fa:	pop    esp
  41b5fb:	pop    ss
  41b5fc:	lds    eax,FWORD PTR [edi]
  41b5fe:	mov    eax,ds:0xba84ef20
  41b603:	(bad)  
  41b604:	das    
  41b605:	nop    DWORD PTR [bx+si]
  41b609:	loopne 0x41b649
  41b60b:	inc    edi
  41b60c:	retf   
  41b60d:	xchg   ebp,eax
  41b60e:	mov    ds:0x2f4849f7,eax
  41b613:	pop    esp
  41b614:	xor    eax,0x5095873d
  41b619:	into   
  41b61a:	cwde   
  41b61b:	xor    DWORD PTR [eax],0x34
  41b61e:	xchg   ebx,eax
  41b61f:	adc    DWORD PTR [ecx+0x94981af],0xae309fb1
  41b629:	leave  
  41b62a:	cmp    esp,DWORD PTR [edi]
  41b62c:	sbb    DWORD PTR [eax],esi
  41b62e:	sub    al,BYTE PTR [ebp-0x44]
  41b631:	cmc    
  41b632:	cmp    BYTE PTR [edi-0x44],bl
  41b635:	mov    ecx,0x65806446
  41b63a:	outs   dx,DWORD PTR ds:[esi]
  41b63b:	mov    bh,0x7d
  41b63d:	lods   al,BYTE PTR ds:[esi]
  41b63e:	push   ds
  41b63f:	push   esi
  41b640:	add    DWORD PTR [edx+0x1f],edi
  41b643:	mov    edx,DWORD PTR [ebp-0x50]
  41b646:	add    ecx,0x242ebcd
  41b64c:	xor    ecx,edx
  41b64e:	mov    DWORD PTR [ebp-0x50],ecx
  41b651:	mov    ecx,DWORD PTR [ebp+0x8]
  41b654:	mov    edx,DWORD PTR [ebp-0x4c]
  41b657:	add    ecx,edi
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a74f
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a753
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a757
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a75b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a75f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a763
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x42988b
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a76b
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a733
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429c0f
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a73b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a73f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a743
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a747
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	shr    eax,cl
  41bf76:	jne    0x41bf73
  41bf78:	iret   
  41bf79:	mov    ebx,0xd98382f9
  41bf7e:	pop    esp
  41bf7f:	add    DWORD PTR [ebx+0x3b24d8ec],0xffffff99
  41bf86:	fcom   QWORD PTR [edx]
  41bf88:	jne    0x41bfc2
  41bf8a:	add    al,0xea
  41bf8c:	pop    es
  41bf8d:	cmp    ecx,ecx
  41bf8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf90:	loopne 0x41bff2
  41bf92:	dec    edx
  41bf93:	dec    edx
  41bf94:	fcomp  DWORD PTR [ebx+0x75]
  41bf97:	inc    esi
  41bf98:	dec    esp
  41bf99:	dec    ebx
  41bf9a:	adc    bh,al
  41bf9c:	xlat   BYTE PTR ds:[ebx]
  41bf9d:	jmp    0x22c4:0xb5b6fa4c
  41bfa4:	pop    es
  41bfa5:	push   ds
  41bfa6:	sub    ch,cl
  41bfa8:	adc    BYTE PTR [edi-0x78],al
  41bfab:	lods   al,BYTE PTR ds:[esi]
  41bfac:	xor    BYTE PTR [ecx],ah
  41bfae:	std    
  41bfaf:	ds adc ecx,edi
  41bfb2:	ret    
  41bfb3:	inc    ecx
  41bfb4:	push   ebx
  41bfb5:	add    ebx,DWORD PTR [edx-0x2]
  41bfb8:	repz adc edi,ebp
  41bfbb:	mov    ch,0x31
  41bfbd:	adc    BYTE PTR [ebp+0x6d910b98],0x59
  41bfc4:	and    al,0x12
  41bfc6:	mov    ds:0xea9609c3,al
  41bfcb:	gs or  al,0xf9
  41bfce:	pop    ss
  41bfcf:	mov    edi,0x79e9a77e
  41bfd4:	sbb    eax,0x9b0dcc7d
  41bfd9:	add    ebx,ecx
  41bfdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfdc:	dec    eax
  41bfdd:	jg     0x41bfcb
  41bfdf:	jmp    0xc899bd6a
  41bfe4:	lahf   
  41bfe5:	mov    ah,0x21
  41bfe7:	jl     0x41c037
  41bfe9:	sub    BYTE PTR [ecx],ch
  41bfeb:	sahf   
  41bfec:	sar    DWORD PTR [ecx+0x574b7d22],0x8a
  41bff3:	jmp    0x41c006
  41bff5:	std    
  41bff6:	aas    
  41bff7:	pushf  
  41bff8:	mov    esp,0x6fedad40
  41bffe:	stos   DWORD PTR es:[edi],eax
  41bfff:	cmp    BYTE PTR [ebp+0x4b44e63b],0x4
  41c006:	shl    BYTE PTR [ecx-0x3db2f8d8],1
  41c00c:	cmp    cl,cl
  41c00e:	mov    dh,0x0
  41c010:	dec    ecx
  41c011:	popa   
  41c012:	pop    ss
  41c013:	in     al,0xc1
  41c015:	inc    ecx
  41c016:	lds    esi,FWORD PTR [ecx+0x7f]
  41c019:	xchg   esp,eax
  41c01a:	xchg   BYTE PTR [ebx+0x5afc76d5],ch
  41c020:	lods   al,BYTE PTR ds:[esi]
  41c021:	jle    0x41c049
  41c023:	lock add DWORD PTR [edi+0x6c9e0fcb],edx
  41c02a:	test   BYTE PTR [edi-0x2b7f399a],0x5f
  41c031:	cs arpl ax,sp
  41c034:	xor    al,0x9a
  41c036:	mov    al,ds:0x8f5ba9f2
  41c03b:	pusha  
  41c03c:	pop    es
  41c03d:	in     al,0x15
  41c03f:	(bad)  
  41c040:	pop    esi
  41c041:	pop    ebx
  41c042:	cmp    edx,DWORD PTR [ebx+0x46c56699]
  41c048:	xchg   ch,dh
  41c04a:	and    eax,0x2c05bca8
  41c04f:	pushf  
  41c050:	outs   dx,DWORD PTR ds:[esi]
  41c051:	fmul   QWORD PTR [edi]
  41c053:	test   DWORD PTR [esi-0x35],eax
  41c056:	sub    BYTE PTR ds:0x3a4dc48a,0x74
  41c05d:	dec    edi
  41c05e:	mov    bl,0x31
  41c060:	ficomp DWORD PTR [bp+di]
  41c063:	dec    bp
  41c065:	sub    DWORD PTR [ebx+0x76],0xffffffff
  41c069:	adc    bl,BYTE PTR [edi]
  41c06b:	adc    DWORD PTR [eax],0x2186e4a7
  41c071:	pusha  
  41c072:	ins    BYTE PTR es:[edi],dx
  41c073:	fadd   st,st(7)
  41c075:	idiv   BYTE PTR [edi+0x7e]
  41c078:	mov    eax,ds:0x77b15dc8
  41c07d:	(bad)  
  41c07f:	mov    ebx,DWORD PTR [eax]
  41c081:	xor    eax,0xe03ff7df
  41c086:	leave  
  41c087:	mov    ecx,0xc1b1291e
  41c08c:	mov    BYTE PTR [esi],bl
  41c08e:	cwde   
  41c08f:	repnz mov al,ds:0xa0ccee71
  41c095:	mov    eax,ds:0xbc73928d
  41c09a:	test   eax,0x524d911f
  41c09f:	add    esi,DWORD PTR [ecx]
  41c0a1:	cld    
  41c0a2:	cmp    BYTE PTR [edx+esi*4],0x11
  41c0a6:	sub    BYTE PTR [esi+0x50],cl
  41c0a9:	lds    ebp,FWORD PTR [esp+ebx*2]
  41c0ac:	lods   eax,DWORD PTR ds:[esi]
  41c0ad:	into   
  41c0ae:	aaa    
  41c0af:	mov    bl,0x3e
  41c0b1:	and    DWORD PTR [edx],edx
  41c0b3:	xchg   DWORD PTR [ebx+0x7b],edi
  41c0b6:	ja     0x41c0fc
  41c0b8:	mov    cl,0xfe
  41c0ba:	jbe    0x41c098
  41c0bc:	inc    ebp
  41c0bd:	sub    DWORD PTR [ebx-0x598b3207],ebx
  41c0c3:	(bad)  
  41c0c4:	cs cmp esi,esi
  41c0c7:	xor    eax,0x5eb0e7b1
  41c0cc:	add    al,0x60
  41c0ce:	setns  BYTE PTR ds:0xa12597ae
  41c0d5:	or     eax,0xc7f2a3ef
  41c0da:	jae    0x41c126
  41c0dc:	outs   dx,DWORD PTR ds:[esi]
  41c0dd:	test   DWORD PTR [eax+0x3e7928e2],0xec3b5e0d
  41c0e7:	jle    0x41c0c5
  41c0e9:	neg    DWORD PTR [esi]
  41c0eb:	and    al,0x68
  41c0ed:	push   edi
  41c0ee:	add    al,0xda
  41c0f0:	dec    ebp
  41c0f1:	cmc    
  41c0f2:	arpl   WORD PTR [ebx+esi*4],dx
  41c0f5:	daa    
  41c0f6:	loope  0x41c130
  41c0f8:	rcl    DWORD PTR [ebx],cl
  41c0fa:	jbe    0x41c0a4
  41c0fc:	shl    bh,1
  41c0fe:	inc    ebp
  41c0ff:	xor    eax,0x9d38de17
  41c104:	push   es
  41c105:	ja     0x41c13f
  41c107:	xor    eax,0xd7644fc3
  41c10c:	gs pop ss
  41c10e:	dec    eax
  41c10f:	adc    eax,0x6fc235bd
  41c114:	cvtps2pi mm5,xmm2
  41c117:	adc    DWORD PTR [edi+ecx*8],edx
  41c11a:	daa    
  41c11b:	shl    BYTE PTR [esi],0x96
  41c11e:	pop    edx
  41c11f:	je     0x41c16e
  41c121:	(bad)
  41c125:	mov    al,ds:0x96f1cc0a
  41c12a:	in     eax,0x13
  41c12c:	pop    eax
  41c12d:	inc    ecx
  41c12e:	xchg   BYTE PTR [ebx-0x7f1758df],ah
  41c134:	imul   esi,DWORD PTR [esi-0x38],0xa5b48c08
  41c13b:	xor    edi,edi
  41c13d:	jle    0x41c0d2
  41c13f:	mov    ch,0x68
  41c141:	jl     0x41c176
  41c143:	xor    cl,dh
  41c145:	fisub  WORD PTR [edx]
  41c147:	ror    BYTE PTR [edi+0x18],cl
  41c14a:	adc    ecx,esp
  41c14c:	pop    ecx
  41c14d:	in     al,dx
  41c14e:	lods   al,BYTE PTR ds:[esi]
  41c14f:	ret    0x887c
  41c152:	stc    
  41c153:	jae    0x41c0df
  41c155:	lock mov bl,0xc3
  41c158:	mov    BYTE PTR [ebp-0x53],dl
  41c15b:	lds    ebp,FWORD PTR [ebx]
  41c15d:	sub    esi,DWORD PTR ds:0xe96eada
  41c163:	or     BYTE PTR [eax-0x69],dh
  41c166:	jae    0x41c1a5
  41c168:	stos   BYTE PTR es:[edi],al
  41c169:	ret    
  41c16a:	xor    ah,bh
  41c16c:	jnp    0x41c0ef
  41c16e:	mov    ah,0x8b
  41c170:	push   ebx
  41c171:	dec    ebx
  41c172:	sub    al,BYTE PTR [eax]
  41c174:	je     0x41c1e8
  41c176:	add    al,0xd0
  41c178:	adc    ax,0x5ee6
  41c17c:	out    dx,al
  41c17d:	sbb    cl,0xb8
  41c180:	dec    ebx
  41c181:	jp     0x41c11b
  41c183:	xchg   ecx,edx
  41c185:	in     eax,dx
  41c186:	scas   eax,DWORD PTR es:[edi]
  41c187:	jns    0x41c148
  41c189:	pop    esp
  41c18a:	fist   DWORD PTR [edx+0x49f47fad]
  41c190:	leave  
  41c191:	add    eax,0xf42cda63
  41c196:	icebp  
  41c197:	cmp    al,0x77
  41c199:	xchg   ebx,eax
  41c19a:	push   esp
  41c19b:	push   es
  41c19c:	loop   0x41c1e3
  41c19e:	stos   DWORD PTR es:[edi],eax
  41c19f:	pop    esi
  41c1a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1a1:	loopne 0x41c16f
  41c1a3:	mov    eax,ds:0x84033cae
  41c1a8:	repnz sub eax,0x1ac16119
  41c1ae:	add    BYTE PTR [eax-0x47],cl
  41c1b1:	test   eax,0x5900dfc4
  41c1b6:	int    0xf1
  41c1b8:	scas   eax,DWORD PTR es:[edi]
  41c1b9:	fsub   st,st(3)
  41c1bb:	stos   DWORD PTR es:[edi],eax
  41c1bc:	xchg   BYTE PTR [eax-0x1e6cc583],bh
  41c1c2:	icebp  
  41c1c3:	idiv   DWORD PTR [ebp-0x274721e4]
  41c1c9:	bound  eax,QWORD PTR [esi-0x2ba6cd3e]
  41c1cf:	loope  0x41c1ce
  41c1d1:	pop    ds
  41c1d2:	xlat   BYTE PTR ds:[ebx]
  41c1d3:	out    0xd,eax
  41c1d5:	cmp    bh,bl
  41c1d7:	(bad)  
  41c1d8:	jl     0x41c15f
  41c1da:	cmp    cl,BYTE PTR [eax-0x2b]
  41c1dd:	pusha  
  41c1de:	aas    
  41c1df:	out    dx,eax
  41c1e0:	mov    ebp,0xeb9095a3
  41c1e5:	xchg   ebx,eax
  41c1e6:	test   esi,edx
  41c1e8:	mov    eax,0xdd5eb48e
  41c1ed:	inc    ebp
  41c1ee:	adc    bh,BYTE PTR [edi-0x75]
  41c1f1:	imul   BYTE PTR [edi]
  41c1f3:	push   es
  41c1f4:	or     eax,0xbee87db7
  41c1f9:	sar    DWORD PTR [esi-0x72],0x30
  41c1fd:	dec    eax
  41c1fe:	neg    DWORD PTR [esi]
  41c200:	or     ebx,eax
  41c202:	lds    edi,FWORD PTR [ecx]
  41c204:	xlat   BYTE PTR ds:[ebx]
  41c205:	sub    DWORD PTR [ebx],edx
  41c207:	fiadd  DWORD PTR [eax]
  41c209:	pop    edi
  41c20a:	je     0x41c262
  41c20c:	and    edi,esi
  41c20e:	ror    BYTE PTR [eax],1
  41c210:	or     al,0xb1
  41c212:	mov    ebx,0x8a5784b9
  41c217:	inc    ebp
  41c218:	mov    ecx,0xac71be5d
  41c21d:	sub    al,ch
  41c21f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c220:	mov    ecx,0xef7dd3de
  41c225:	pop    ecx
  41c226:	push   eax
  41c227:	mov    ds:0xd79ba2d,al
  41c22c:	iret   
  41c22d:	test   DWORD PTR [ebx],ebp
  41c22f:	in     al,dx
  41c230:	adc    eax,0xe9bf33ca
  41c235:	clc    
  41c236:	pop    esp
  41c237:	and    eax,0x573a5c8d
  41c23c:	adc    esp,DWORD PTR [ebp+0x21]
  41c23f:	fs repz pushf 
  41c242:	jno    0x41c1f1
  41c244:	rcl    al,1
  41c246:	xor    BYTE PTR [esi+edx*2-0x55],0xc0
  41c24b:	cwde   
  41c24c:	addr16 mov eax,ds:0x1f94
  41c250:	imul   eax
  41c252:	enter  0xac94,0xff
  41c256:	mov    bl,ah
  41c258:	push   0x58eb5ef4
  41c25d:	(bad)  
  41c25e:	mov    esp,0xf6cfb528
  41c263:	ins    DWORD PTR es:[edi],dx
  41c264:	fcomp  QWORD PTR [edi-0xca89e8]
  41c26a:	out    0xc8,al
  41c26c:	pop    eax
  41c26d:	xor    bl,cl
  41c26f:	push   DWORD PTR [ecx+ebp*4]
  41c272:	arpl   WORD PTR [esi-0x38],si
  41c275:	cmp    edi,esi
  41c277:	fild   QWORD PTR [ecx]
  41c279:	push   edi
  41c27a:	(bad)  
  41c27b:	neg    bl
  41c27d:	imul   edx,ebx,0xd355dd52
  41c283:	daa    
  41c284:	xchg   ebp,eax
  41c285:	popf   
  41c286:	call   0x1df1:0x2c93b0a6
  41c28d:	fcom   DWORD PTR [edx]
  41c28f:	mov    ebx,0xdfd112f0
  41c294:	push   ds
  41c295:	dec    ebx
  41c296:	inc    edi
  41c297:	pop    edi
  41c298:	aaa    
  41c299:	retf   
  41c29a:	sbb    cl,bl
  41c29c:	test   dl,bh
  41c29e:	add    BYTE PTR [ebp+0x8],bh
  41c2a1:	dec    esp
  41c2a2:	les    esi,FWORD PTR [ecx+0x2b]
  41c2a5:	push   ecx
  41c2a6:	lods   eax,DWORD PTR ds:[esi]
  41c2a7:	lods   eax,DWORD PTR ds:[esi]
  41c2a8:	push   0x74783393
  41c2ad:	xchg   ecx,eax
  41c2ae:	test   eax,0x4391a183
  41c2b3:	loopne 0x41c30c
  41c2b5:	mov    edx,0x8e8d296b
  41c2ba:	fisub  DWORD PTR [ebx+0x26d66828]
  41c2c0:	dec    esi
  41c2c1:	dec    ebx
  41c2c2:	hlt    
  41c2c3:	test   al,ch
  41c2c5:	fcmovu st,st(3)
  41c2c7:	in     eax,dx
  41c2c8:	sub    DWORD PTR [ebp-0x42c708c8],esp
  41c2ce:	cmp    ecx,ebp
  41c2d0:	aam    0xf8
  41c2d2:	les    ebx,FWORD PTR ds:0x511924dd
  41c2d8:	rcl    BYTE PTR [esp+edi*2+0x5b73f221],1
  41c2df:	mov    edi,0x157d764d
  41c2e4:	(bad)  
  41c2e6:	and    DWORD PTR [edi-0x57],esi
  41c2e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2ea:	ret    
  41c2eb:	sbb    DWORD PTR [esi-0x7d],0x34733769
  41c2f2:	pop    ebp
  41c2f3:	jmp    0x41c321
  41c2f5:	adc    eax,0x7d050eb0
  41c2fa:	mov    al,ds:0x827daf8e
  41c2ff:	push   es
  41c300:	cmp    bh,BYTE PTR [ebx+ebp*1+0x24]
  41c304:	xchg   esi,eax
  41c305:	jmp    0x1bd36f8b
  41c30a:	sub    ecx,DWORD PTR gs:[edi+eiz*1-0x5b424a41]
  41c312:	fistp  QWORD PTR [edx+esi*1+0x3b]
  41c316:	jno    0x41c2b1
  41c318:	test   al,0x4b
  41c31a:	cmp    DWORD PTR [eax-0x12],ecx
  41c31d:	add    DWORD PTR [edx+0x1d],ebp
  41c320:	dec    edx
  41c321:	retf   
  41c322:	jge    0x41c334
  41c324:	inc    ebp
  41c325:	mov    BYTE PTR [edx-0x2098d565],dl
  41c32b:	(bad)  
  41c32c:	hlt    
  41c32d:	pop    esi
  41c32e:	xor    ecx,DWORD PTR [edx+ebx*4]
  41c331:	stos   BYTE PTR es:[edi],al
  41c332:	jg     0x41c2c5
  41c334:	je     0x41c388
  41c336:	cmp    DWORD PTR ds:0x3d1744bd,esp
  41c33c:	ins    DWORD PTR es:[edi],dx
  41c33d:	jmp    FWORD PTR [esi+0x14]
  41c340:	add    al,0x38
  41c342:	ret    0x40f1
  41c345:	mov    ?,WORD PTR [edx+eiz*8-0x18]
  41c349:	lock gs inc eax
  41c34c:	xor    al,0xb9
  41c34e:	adc    ebp,DWORD PTR [esi+0x1359da08]
  41c354:	pushf  
  41c355:	adc    DWORD PTR [eax+eiz*2+0x3d],ebx
  41c359:	sub    BYTE PTR [ecx],cl
  41c35b:	shr    BYTE PTR [esi+0x4b7cfe44],cl
  41c361:	cmp    DWORD PTR [edx+0x13],ecx
  41c364:	test   al,0x78
  41c366:	div    DWORD PTR [ebp-0x5ce418f3]
  41c36c:	cmp    DWORD PTR [eax+0x51],ebp
  41c36f:	or     BYTE PTR [ebx+0x2],dl
  41c372:	xchg   edi,eax
  41c373:	inc    esp
  41c374:	arpl   bx,sp
  41c376:	push   ss
  41c377:	shr    DWORD PTR [ecx],0xa5
  41c37a:	call   0xd255:0x87c384ea
  41c381:	fldcw  WORD PTR ds:[ebp-0x136f4ac2]
  41c388:	loop   0x41c3c3
  41c38a:	xchg   ebx,eax
  41c38b:	imul   ebx,DWORD PTR gs:[ecx],0x69
  41c38f:	jecxz  0x41c3f3
  41c391:	hlt    
  41c392:	aas    
  41c393:	or     eax,0x750edd3e
  41c398:	add    esp,DWORD PTR [ebp+eax*2-0x6951a720]
  41c39f:	sub    al,0xbb
  41c3a1:	or     eax,0x3d205345
  41c3a6:	xor    al,bl
  41c3a8:	cmp    DWORD PTR [ecx],ebp
  41c3aa:	xlat   BYTE PTR ds:[ebx]
  41c3ab:	pop    esi
  41c3ac:	xlat   BYTE PTR ds:[ebx]
  41c3ad:	push   ds
  41c3ae:	pop    ds
  41c3af:	sti    
  41c3b0:	inc    esp
  41c3b1:	cmp    eax,0x54fb49b
  41c3b6:	adc    eax,0x18ee95f0
  41c3bb:	arpl   WORD PTR [edi],bp
  41c3bd:	sahf   
  41c3be:	or     edi,DWORD PTR [edi-0x54006c3f]
  41c3c4:	ret    
  41c3c5:	cwde   
  41c3c6:	ins    BYTE PTR es:[edi],dx
  41c3c7:	xor    ch,BYTE PTR [eax+0x7340037d]
  41c3cd:	call   0x99c824fc
  41c3d2:	std    
  41c3d3:	jp     0x41c447
  41c3d5:	mov    DWORD PTR [esi],0xb2d6062c
  41c3db:	loopne 0x41c44e
  41c3dd:	outs   dx,BYTE PTR ds:[esi]
  41c3de:	aaa    
  41c3df:	dec    ebp
  41c3e0:	add    eax,DWORD PTR [esi+esi*4+0x6144f744]
  41c3e7:	cmp    esp,DWORD PTR [esi+eax*1]
  41c3ea:	add    eax,0x5f5ef0fb
  41c3ef:	scas   al,BYTE PTR es:[edi]
  41c3f0:	xor    eax,DWORD PTR [esi+0x77]
  41c3f3:	dec    edi
  41c3f4:	jle    0x41c411
  41c3f6:	in     al,0xff
  41c3f8:	shl    ebx,1
  41c3fa:	xchg   ebx,eax
  41c3fb:	out    0x9f,al
  41c3fd:	mov    edx,0x105f7a7d
  41c402:	mov    eax,ds:0xbef34aeb
  41c407:	xchg   ecx,eax
  41c408:	lea    esp,[edx+0xf]
  41c40b:	dec    edx
  41c40c:	test   al,0x60
  41c40e:	lea    esp,[esi+0x6c]
  41c411:	cmp    al,dh
  41c413:	cmc    
  41c414:	(bad)  
  41c416:	mov    bl,0xc6
  41c418:	push   ebp
  41c419:	stos   DWORD PTR es:[edi],eax
  41c41a:	or     dl,bh
  41c41c:	cmp    DWORD PTR [esi],eax
  41c41e:	and    BYTE PTR [edx-0x25456d3e],0xb3
  41c425:	inc    edx
  41c426:	push   ebp
  41c427:	dec    edx
  41c428:	mov    edi,0x9c69ab4d
  41c42d:	fadd   st(0),st
  41c42f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c430:	(bad)  
  41c431:	mov    ds:0x4ad221be,eax
  41c436:	imul   ecx,DWORD PTR [eax+0x31],0xa931e9fc
  41c43d:	push   es
  41c43e:	arpl   WORD PTR ds:0xe98cd1e2,si
  41c444:	mov    dh,0x7c
  41c446:	sar    bh,0xe9
  41c449:	and    edi,DWORD PTR [ecx+ebp*2]
  41c44c:	jg     0x41c3e8
  41c44e:	cli    
  41c44f:	mov    ss,esp
  41c451:	dec    ebx
  41c452:	adc    bh,bh
  41c454:	adc    eax,0x2e41129
  41c459:	push   cs
  41c45a:	sub    BYTE PTR [ecx+0x71596cdc],ah
  41c460:	xchg   DWORD PTR [esi-0x2f],edi
  41c463:	(bad)  
  41c465:	sti    
  41c466:	and    edi,ecx
  41c468:	add    eax,0xd7b2791f
  41c46d:	ins    DWORD PTR es:[edi],dx
  41c46e:	push   ss
  41c46f:	mov    eax,ds:0xbcdec69f
  41c474:	sbb    eax,0xee26043a
  41c479:	adc    BYTE PTR [ebx-0xe],0xa4
  41c47d:	leave  
  41c47e:	jae    0x41c494
  41c480:	out    0x8c,eax
  41c482:	das    
  41c483:	rcr    DWORD PTR gs:[ecx-0x3c],cl
  41c487:	inc    esp
  41c488:	out    dx,al
  41c489:	mov    ?,WORD PTR [ecx*4+0x7eb27e07]
  41c490:	(bad)  
  41c491:	pop    esp
  41c492:	add    eax,0xfd45e84b
  41c497:	jmp    0x301e:0xeeb9392b
  41c49e:	cmp    eax,0x63c4ff7c
  41c4a3:	ja     0x41c504
  41c4a5:	rcr    DWORD PTR [ebp-0xd],1
  41c4a8:	shl    DWORD PTR [ebx-0x1f],0xcf
  41c4ac:	lods   eax,DWORD PTR ds:[esi]
  41c4ad:	bound  ebx,QWORD PTR [eax+0x55]
  41c4b0:	popa   
  41c4b1:	pop    ecx
  41c4b2:	or     BYTE PTR [eax],0x6
  41c4b5:	hlt    
  41c4b6:	adc    eax,0x3f835285
  41c4bb:	jno    0x41c446
  41c4bd:	mov    al,BYTE PTR [ecx-0x3fef599f]
  41c4c3:	arpl   WORD PTR ds:0x8d9ec432,dx
  41c4c9:	mov    dl,0x1f
  41c4cb:	mov    bh,0xa2
  41c4cd:	dec    esi
  41c4ce:	fidivr DWORD PTR [edi+0x6d]
  41c4d1:	xchg   ecx,eax
  41c4d2:	js     0x41c490
  41c4d4:	hlt    
  41c4d5:	jbe    0x41c4f7
  41c4d7:	push   0x97008d83
  41c4dc:	(bad)  
  41c4dd:	hlt    
  41c4de:	std    
  41c4df:	div    esp
  41c4e1:	mov    dl,0x93
  41c4e3:	inc    eax
  41c4e4:	dec    eax
  41c4e5:	ds add ecx,ebx
  41c4e8:	hlt    
  41c4e9:	jnp    0x41c488
  41c4eb:	not    DWORD PTR [edi]
  41c4ed:	push   ebp
  41c4ee:	dec    eax
  41c4ef:	std    
  41c4f0:	sbb    ecx,0x9964a0df
  41c4f6:	and    BYTE PTR [eax-0x5f],0x2c
  41c4fa:	aaa    
  41c4fb:	pop    ebp
  41c4fc:	pop    ebp
  41c4fd:	aad    0xb8
  41c4ff:	out    0x20,eax
  41c501:	adc    eax,0x343620e8
  41c506:	mov    BYTE PTR [eax+0x1],ah
  41c509:	int3   
  41c50a:	pop    ecx
  41c50b:	jle    0x41c57e
  41c50d:	jb     0x41c53f
  41c50f:	scas   al,BYTE PTR es:[edi]
  41c510:	loopne 0x41c546
  41c512:	jmp    0x92f901b8
  41c517:	mov    WORD PTR ds:0x583b243,ss
  41c51d:	xor    al,0xc0
  41c51f:	sub    DWORD PTR [eax+0x6a],edi
  41c522:	push   edi
  41c523:	scas   al,BYTE PTR es:[edi]
  41c524:	(bad)  
  41c525:	xchg   edx,eax
  41c526:	(bad)  
  41c527:	jns    0x41c4d1
  41c529:	sbb    ecx,esi
  41c52b:	ret    
  41c52c:	fwait
  41c52d:	leave  
  41c52e:	lea    ebp,[ecx+0x65]
  41c531:	mov    esi,0x5617861d
  41c536:	mov    eax,ds:0xdf21d9ec
  41c53b:	jge    0x41c531
  41c53d:	cld    
  41c53e:	shr    BYTE PTR es:[ebp+eax*4-0x4a],0x8
  41c544:	mov    ds:0x3052673f,eax
  41c549:	sar    edx,0xf4
  41c54c:	dec    edi
  41c54d:	xchg   esi,eax
  41c54e:	test   eax,0x2fdefe76
  41c553:	aad    0x98
  41c555:	add    BYTE PTR [ebx],0x18
  41c558:	lods   eax,DWORD PTR ds:[esi]
  41c559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c55a:	data16 ficom DWORD PTR [ecx-0x50c35e2c]
  41c561:	jle    0x41c57f
  41c563:	adc    bh,BYTE PTR [ebx+eiz*8+0x77]
  41c567:	sti    
  41c568:	aas    
  41c569:	lds    edx,FWORD PTR [edx+0x1644194d]
  41c56f:	leave  
  41c570:	and    al,0xf7
  41c572:	and    BYTE PTR [ecx],cl
  41c574:	jns    0x41c504
  41c576:	jae    0x41c56c
  41c578:	jo     0x41c584
  41c57a:	or     BYTE PTR [edi-0x3a],0xf3
  41c57e:	push   eax
  41c57f:	les    ebp,FWORD PTR [ecx-0x32]
  41c582:	xchg   ecx,eax
  41c583:	addr16 pop esp
  41c585:	dec    edi
  41c586:	outs   dx,DWORD PTR ds:[esi]
  41c587:	loopne 0x41c5a0
  41c589:	sbb    eax,0x5faf1faa
  41c58e:	rcl    dl,1
  41c590:	add    dh,ch
  41c592:	stos   DWORD PTR es:[edi],eax
  41c593:	loope  0x41c5b9
  41c595:	dec    edi
  41c596:	adc    eax,0x21ede79f
  41c59b:	bound  edx,QWORD PTR [edx+0x5106afb2]
  41c5a1:	push   0x9683c02
  41c5a6:	and    BYTE PTR [edi-0x78],cl
  41c5a9:	out    0x35,al
  41c5ab:	mov    ch,BYTE PTR [eiz*4-0x1f6c1c1a]
  41c5b2:	ja     0x41c586
  41c5b4:	jae    0x41c558
  41c5b6:	or     BYTE PTR [ebx],0x3e
  41c5b9:	push   ebp
  41c5ba:	add    esi,DWORD PTR [ebp-0x227c3343]
  41c5c0:	add    esp,DWORD PTR [ebx+0x3fe39ad0]
  41c5c6:	inc    ecx
  41c5c7:	mov    ecx,0x2db34509
  41c5cc:	ins    BYTE PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jmp    0x41c59d
  41c5d0:	shr    BYTE PTR [eax],1
  41c5d2:	sub    al,0xd2
  41c5d4:	mov    al,ds:0x850c83f1
  41c5d9:	mov    ebx,0x9b91b4ec
  41c5de:	jle    0x41c5b5
  41c5e0:	ins    BYTE PTR es:[edi],dx
  41c5e1:	xchg   ebp,eax
  41c5e2:	push   ecx
  41c5e3:	dec    edi
  41c5e4:	sbb    bh,BYTE PTR [eax+0x2d]
  41c5e7:	ss pop ebp
  41c5e9:	fsub   st(6),st
  41c5eb:	pop    edx
  41c5ec:	jno    0x41c590
  41c5ee:	iret   
  41c5ef:	xor    ah,BYTE PTR [ecx-0x39b2c95]
  41c5f5:	neg    BYTE PTR [ecx+0x7efc9246]
  41c5fb:	mov    ebp,0x4f5434ea
  41c600:	stc    
  41c601:	retf   
  41c602:	pop    ss
  41c603:	jge    0x41c5ca
  41c605:	in     eax,0xa9
  41c607:	push   0xffffffd0
  41c609:	dec    eax
  41c60a:	popa   
  41c60b:	mov    al,0xb8
  41c60d:	sar    eax,1
  41c60f:	dec    ebx
  41c610:	sar    BYTE PTR ds:0x31f23f5d,1
  41c616:	pop    eax
  41c617:	pop    edi
  41c618:	das    
  41c619:	jae    0x41c59f
  41c61b:	rcr    BYTE PTR [ebp-0x75],0x19
  41c61f:	mov    cl,0xb7
  41c621:	aam    0xa
  41c623:	sti    
  41c624:	mov    DWORD PTR [esi],esp
  41c626:	or     eax,0x34244c6e
  41c62b:	mov    dl,0x7
  41c62d:	aas    
  41c62e:	pop    esi
  41c62f:	and    BYTE PTR [edx+ecx*8],al
  41c632:	jg     0x41c626
  41c634:	jmp    0x7f9f:0x4c6eee01
  41c63b:	cmp    eax,0x90cef1c
  41c640:	mov    edx,0xaf9d07e5
  41c645:	mov    edi,0x85570433
  41c64a:	mov    esp,0xbbc294c7
  41c64f:	sub    BYTE PTR [esp+edi*1],al
  41c652:	push   ecx
  41c653:	cli    
  41c654:	sbb    edx,ecx
  41c656:	mov    dh,0xa3
  41c658:	mov    bh,0x55
  41c65a:	jmp    0xa92bf4c2
  41c65f:	mov    al,0xe2
  41c661:	pop    ebx
  41c662:	mov    ch,0xd2
  41c664:	dec    edx
  41c665:	add    eax,0x87587f4
  41c66a:	data16 loop 0x41c6d4
  41c66d:	cmp    esp,ebp
  41c66f:	push   eax
  41c670:	sbb    BYTE PTR [ebx+0x6baaac45],bh
  41c676:	pop    ecx
  41c677:	test   BYTE PTR [ebp-0x79c45310],bl
  41c67d:	add    eax,0x8e805f12
  41c682:	and    esi,DWORD PTR [eax]
  41c684:	int3   
  41c685:	push   esi
  41c686:	je     0x41c648
  41c688:	sbb    ebx,esp
  41c68a:	mov    edx,0x45daf60c
  41c68f:	stos   BYTE PTR es:[edi],al
  41c690:	mov    eax,0x18a20e73
  41c695:	call   edx
  41c697:	xor    al,0xf4
  41c699:	stos   BYTE PTR es:[edi],al
  41c69a:	pop    eax
  41c69b:	add    ah,ah
  41c69d:	int3   
  41c69e:	sub    BYTE PTR [edx],al
  41c6a0:	js     0x41c695
  41c6a2:	fnstcw WORD PTR es:[ebx+0x4f]
  41c6a6:	sub    al,0x39
  41c6a8:	call   0xd984:0x8c5aabb3
  41c6af:	jge    0x41c6a6
  41c6b1:	push   ss
  41c6b2:	jmp    0x6a7914d8
  41c6b7:	in     al,0x97
  41c6b9:	inc    DWORD PTR [esi-0x6ee56a44]
  41c6bf:	inc    esp
  41c6c0:	and    BYTE PTR [esi],ah
  41c6c2:	(bad)  
  41c6c3:	jecxz  0x41c676
  41c6c5:	xlat   BYTE PTR ds:[ebx]
  41c6c6:	imul   BYTE PTR [ebp+0x1f]
  41c6c9:	cmp    al,0x3f
  41c6cb:	or     eax,0xf2d58427
  41c6d0:	xchg   BYTE PTR [edi+0xe],bl
  41c6d3:	xor    eax,0xcdd5ddd8
  41c6d8:	xchg   ebx,eax
  41c6d9:	xor    cl,BYTE PTR [esi-0x5c1d30f7]
  41c6df:	xor    bh,BYTE PTR [ebx+edi*1]
  41c6e2:	fst    QWORD PTR [edi-0x144ef5ee]
  41c6e8:	js     0x41c73d
  41c6ea:	mov    eax,ds:0x6c887f7b
  41c6ef:	fidivr WORD PTR [esi+0x6767526c]
  41c6f5:	shl    ebx,1
  41c6f7:	ja     0x41c727
  41c6f9:	in     eax,0xb9
  41c6fb:	dec    esi
  41c6fc:	rcr    esi,1
  41c6fe:	mov    esp,0x250beafb
  41c703:	xor    eax,0xa4508efe
  41c708:	mov    ds:0xfd501004,eax
  41c70d:	sbb    cl,BYTE PTR [edx+ecx*4-0x1231011d]
  41c714:	jmp    0x41c69e
  41c716:	shr    cl,cl
  41c718:	je     0x41c732
  41c71a:	fild   QWORD PTR [ecx+0x5d9f5385]
  41c720:	add    dh,ah
  41c722:	fld    DWORD PTR [esi-0x3790f9a6]
  41c728:	nop
  41c729:	mov    esi,0xedf9c149
  41c72e:	mov    al,0x3b
  41c730:	ror    BYTE PTR [eax],cl
  41c732:	pop    esi
  41c733:	out    0x54,eax
  41c735:	xor    eax,0xfc085b5f
  41c73a:	xchg   ebp,eax
  41c73b:	mov    DWORD PTR [ecx],ebx
  41c73d:	ja     0x41c6d0
  41c73f:	gs dec edi
  41c741:	out    dx,eax
  41c742:	adc    al,0x21
  41c744:	push   eax
  41c745:	ins    BYTE PTR es:[edi],dx
  41c746:	and    ah,ah
  41c748:	outs   dx,DWORD PTR ds:[esi]
  41c749:	or     eax,0x67d969c1
  41c74e:	cmp    BYTE PTR [edi],bl
  41c750:	mov    ah,0x20
  41c752:	rol    BYTE PTR [edi-0x1c],cl
  41c755:	and    DWORD PTR [esi-0x2fe25b08],ebp
  41c75b:	adc    ebx,DWORD PTR [edx+eiz*4-0x3013cf0d]
  41c762:	ds ds fstp st(1)
  41c766:	lods   eax,DWORD PTR ds:[esi]
  41c767:	pop    es
  41c768:	jge    0x41c7b1
  41c76a:	or     bl,BYTE PTR [ebx+0x4d]
  41c76d:	cmp    eax,0xce9df038
  41c772:	inc    esp
  41c773:	mov    al,0x8
  41c775:	or     edi,DWORD PTR [edx+0xf]
  41c778:	cmp    BYTE PTR [edx-0x3dbfd4dd],bl
  41c77e:	pushf  
  41c77f:	imul   edx,ebx,0xffffff9a
  41c782:	lods   al,BYTE PTR ds:[esi]
  41c783:	stc    
  41c784:	jge    0x41c706
  41c786:	lock adc DWORD PTR [ebx+0x794c9f98],0xb95551bd
  41c791:	outs   dx,DWORD PTR ds:[esi]
  41c792:	(bad)  
  41c793:	pop    esp
  41c794:	and    al,0x17
  41c796:	scas   eax,DWORD PTR es:[edi]
  41c797:	fbstp  TBYTE PTR [eax]
  41c799:	(bad)  
  41c79a:	arpl   WORD PTR [ebp+eiz*2+0x54f04138],ax
  41c7a1:	test   esi,ebp
  41c7a3:	dec    ebx
  41c7a4:	sbb    BYTE PTR [ebx+0x634ca26c],0x53
  41c7ab:	loope  0x41c746
  41c7ad:	push   ds
  41c7ae:	pop    ds
  41c7af:	adc    DWORD PTR [ebx],ebp
  41c7b1:	fadd   DWORD PTR [edx]
  41c7b3:	idiv   BYTE PTR [edi+0x2b3e7a3a]
  41c7b9:	cmp    BYTE PTR [eax-0x36],dh
  41c7bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7bd:	fs push ebp
  41c7bf:	mov    ch,0x58
  41c7c1:	pop    esi
  41c7c2:	sahf   
  41c7c3:	(bad)  
  41c7c4:	(bad)  
  41c7c6:	xchg   dl,dh
  41c7c8:	in     al,0x85
  41c7ca:	mov    ds:0x1a556542,al
  41c7cf:	icebp  
  41c7d0:	and    al,0x17
  41c7d2:	out    dx,al
  41c7d3:	mov    dh,0x2e
  41c7d5:	pop    eax
  41c7d6:	mov    cl,0x25
  41c7d8:	mov    dh,0x5b
  41c7da:	jle    0x41c794
  41c7dc:	or     cl,BYTE PTR [edx+0x3a]
  41c7df:	and    dh,BYTE PTR [ebp-0x57]
  41c7e2:	(bad)  
  41c7e3:	jmp    0x4d6b158d
  41c7e8:	jl     0x41c7dc
  41c7ea:	mov    bl,0xf4
  41c7ec:	fisttp QWORD PTR [ebp+0x618796a]
  41c7f2:	jo     0x41c78c
  41c7f4:	cmp    edi,DWORD PTR [ecx+0x1e3dd734]
  41c7fa:	cmp    edx,DWORD PTR [ebx]
  41c7fc:	mov    al,0x28
  41c7fe:	or     DWORD PTR [ebx-0x20],ecx
  41c801:	loop   0x41c836
  41c803:	mov    bl,BYTE PTR [edx]
  41c805:	xchg   DWORD PTR [ecx-0x2c],esi
  41c808:	std    
  41c809:	es xchg edi,eax
  41c80b:	mov    ah,BYTE PTR [esi-0x1e282429]
  41c811:	sar    BYTE PTR [ebp+edi*2-0x40024916],1
  41c818:	pop    es
  41c819:	mov    ebx,DWORD PTR [esi]
  41c81b:	mov    bh,0xbf
  41c81d:	clc    
  41c81e:	mov    dl,0x73
  41c820:	mov    esp,0x236d9450
  41c825:	rol    DWORD PTR [edx],0xc
  41c828:	js     0x41c863
  41c82a:	jb     0x41c83c
  41c82c:	add    al,0xe3
  41c82e:	push   dx
  41c830:	dec    esi
  41c831:	jbe    0x41c7f9
  41c833:	sti    
  41c834:	sub    BYTE PTR [ecx+0x4],cl
  41c837:	mov    ebx,0x26d56ace
  41c83c:	cwde   
  41c83d:	ficomp WORD PTR ds:0x5dc579ff
  41c843:	mov    ah,0xb4
  41c845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c846:	or     al,0x23
  41c848:	jae    0x41c8c5
  41c84a:	mov    ds:0x85c51db,al
  41c84f:	repnz mov esi,0xb2b0fdf7
  41c855:	frstor [eax+0x7d]
  41c858:	frstor [ecx-0x1c]
  41c85b:	and    bh,BYTE PTR [eax+0x73]
  41c85e:	add    bl,al
  41c860:	sbb    BYTE PTR [eax],0xd4
  41c863:	pop    ecx
  41c864:	pop    ebp
  41c865:	rcl    BYTE PTR [ebp-0x19],1
  41c868:	mov    bl,0x60
  41c86a:	std    
  41c86b:	mov    ebp,0xed180db4
  41c870:	pop    es
  41c871:	dec    esi
  41c872:	pop    ecx
  41c873:	add    eax,0xd5e62be4
  41c878:	mov    dh,0x5b
  41c87a:	cmc    
  41c87b:	test   DWORD PTR [eiz*8-0x6f91660b],ebp
  41c882:	std    
  41c883:	or     BYTE PTR [ebp+ebx*2+0x8],dl
  41c887:	std    
  41c888:	dec    ecx
  41c889:	and    cl,0x72
  41c88c:	mov    bl,0xda
  41c88e:	push   ebp
  41c88f:	stos   BYTE PTR es:[edi],al
  41c890:	mov    ds:0x828711bf,eax
  41c895:	imul   edi,DWORD PTR [edi-0x79],0xd2fd8307
  41c89c:	lock sbb esp,0x75
  41c8a0:	cli    
  41c8a1:	imul   eax,DWORD PTR [esi+edi*8],0x43
  41c8a5:	adc    eax,0x72c7a626
  41c8aa:	mov    bh,0x63
  41c8ac:	mov    al,BYTE PTR [esi-0x68]
  41c8af:	sti    
  41c8b0:	and    BYTE PTR [edi-0x7c],ch
  41c8b3:	aaa    
  41c8b4:	push   0x88e8b73c
  41c8b9:	fimul  DWORD PTR [ecx-0x20d91fe2]
  41c8bf:	lods   al,BYTE PTR ds:[esi]
  41c8c0:	mov    ecx,DWORD PTR [ecx+0x24bbb998]
  41c8c6:	inc    ecx
  41c8c7:	cld    
  41c8c8:	push   edx
  41c8c9:	rcr    BYTE PTR [ecx],1
  41c8cb:	xchg   bh,dl
  41c8cd:	or     esi,DWORD PTR [esi+0x4]
  41c8d0:	fadd   st,st(1)
  41c8d2:	stc    
  41c8d3:	mov    ebx,0xa4906458
  41c8d8:	push   edi
  41c8d9:	pop    es
  41c8da:	je     0x41c8b9
  41c8dc:	push   esi
  41c8dd:	popf   
  41c8de:	inc    ebx
  41c8df:	push   0x7b0f7f68
  41c8e4:	adc    bh,cl
  41c8e6:	adc    DWORD PTR [edx-0x1ad11b91],eax
  41c8ec:	popa   
  41c8ed:	scas   al,BYTE PTR es:[edi]
  41c8ee:	or     BYTE PTR [ebx+0x25aadaee],ch
  41c8f4:	push   ds
  41c8f5:	xchg   esi,eax
  41c8f6:	sub    eax,0xb6f9594d
  41c8fb:	push   0x35
  41c8fd:	jg     0x41c946
  41c8ff:	xchg   edx,eax
  41c900:	test   eax,0x59bb4dd4
  41c905:	(bad)  
  41c906:	jmp    0x71d5:0x93d83f05
  41c90d:	mov    esp,0xccbe889
  41c912:	adc    bh,BYTE PTR [edi-0x10ac5772]
  41c918:	xchg   esi,eax
  41c919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c91a:	add    dl,BYTE PTR [ebp-0x20]
  41c91d:	xor    eax,0xbf97456a
  41c922:	lahf   
  41c923:	push   0x35b61154
  41c928:	adc    bh,bl
  41c92a:	cmp    eax,0xaa02ee40
  41c92f:	in     eax,0xa7
  41c931:	and    BYTE PTR [esi],0xda
  41c934:	mov    ecx,0xf0dab585
  41c939:	xlat   BYTE PTR ds:[ebx]
  41c93a:	sub    ebp,0xb2c87902
  41c940:	sub    ebx,DWORD PTR [ecx+0x70d341c1]
  41c946:	jg     0x41c98f
  41c948:	stc    
  41c949:	sbb    eax,0x81d099f7
  41c94e:	sbb    eax,0xbd604f0a
  41c953:	loop   0x41c93b
  41c955:	out    dx,eax
  41c956:	sahf   
  41c957:	in     eax,0x19
  41c959:	dec    edx
  41c95a:	cmp    DWORD PTR [ecx],esi
  41c95c:	push   0x37
  41c95e:	mov    ch,0x54
  41c960:	nop
  41c961:	(bad)  
  41c963:	cmp    DWORD PTR [esi+esi*2],ebx
  41c966:	jmp    DWORD PTR [ebp-0x27cde432]
  41c96c:	ins    BYTE PTR es:[edi],dx
  41c96d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41c96f:	sbb    al,0x8c
  41c971:	retf   
  41c972:	mov    ?,esi
  41c974:	add    DWORD PTR [edi+eax*4],edi
  41c977:	div    cl
  41c979:	push   edi
  41c97a:	sbb    eax,0x4110d568
  41c97f:	bound  eax,QWORD PTR [edi+0x77]
  41c982:	xchg   ecx,eax
  41c983:	or     ecx,ebx
  41c985:	imul   eax,DWORD PTR [ebx+0x36],0x858111cd
  41c98c:	je     0x41c9cc
  41c98e:	sub    eax,0xffa3d61c
  41c993:	cmp    al,BYTE PTR [edx+0x49]
  41c996:	stos   BYTE PTR es:[edi],al
  41c997:	sbb    DWORD PTR [eax],ebp
  41c999:	inc    edx
  41c99a:	inc    esp
  41c99b:	ret    0x1933
  41c99e:	repz popa 
  41c9a0:	iret   
  41c9a1:	add    al,0xb2
  41c9a3:	int3   
  41c9a4:	inc    ebx
  41c9a5:	es pop es
  41c9a7:	js     0x41c9ec
  41c9a9:	imul   ecx,esi,0xdb16ac3c
  41c9af:	mov    ds:0xb262dc25,al
  41c9b4:	xor    al,0xb8
  41c9b6:	mov    cl,0x9f
  41c9b8:	das    
  41c9b9:	dec    edi
  41c9ba:	adc    al,0xc2
  41c9bc:	and    esp,DWORD PTR [edx+0x6f]
  41c9bf:	out    0x65,eax
  41c9c1:	shr    DWORD PTR [ebp+0x5c],0x74
  41c9c5:	aam    0x35
  41c9c7:	and    ecx,edi
  41c9c9:	jnp    0x41ca13
  41c9cb:	int    0x4c
  41c9cd:	jecxz  0x41ca1f
  41c9cf:	xchg   esi,eax
  41c9d0:	jno    0x41c9a6
  41c9d2:	and    edx,DWORD PTR [eax+ecx*1+0x38bbe7f1]
  41c9d9:	fs mov al,0x92
  41c9dc:	and    cl,BYTE PTR [ecx]
  41c9de:	mov    ds:0x3da25e49,eax
  41c9e3:	mov    ds:0x36efbfeb,eax
  41c9e8:	sbb    dh,0xe3
  41c9eb:	dec    ebx
  41c9ec:	out    dx,al
  41c9ed:	(bad)  
  41c9ee:	ds pop ss
  41c9f0:	pop    es
  41c9f1:	in     al,0xc2
  41c9f3:	or     eax,0xe0708f1a
  41c9f8:	and    ecx,0xcba0f6c4
  41c9fe:	hlt    
  41c9ff:	fdivr  QWORD PTR [bx+si+0x66]
  41ca03:	scas   al,BYTE PTR es:[edi]
  41ca04:	mov    BYTE PTR [ebx-0x52],bl
  41ca07:	inc    esi
  41ca08:	lods   eax,DWORD PTR ds:[esi]
  41ca09:	mov    ecx,0xa70204ab
  41ca0e:	call   0x1b582e90
  41ca13:	loop   0x41ca08
  41ca15:	inc    edi
  41ca16:	mov    ah,0xf9
  41ca18:	das    
  41ca19:	cwde   
  41ca1a:	cs push 0x3e09ed87
  41ca20:	sub    DWORD PTR [edx-0x3],0x7373d82c
  41ca27:	arpl   WORD PTR [edx+0x2482dd72],sp
  41ca2d:	jge    0x41ca57
  41ca2f:	and    eax,0x5662e317
  41ca34:	sbb    ch,dh
  41ca36:	cmp    eax,0x4ec9b927
  41ca3b:	add    al,0x1a
  41ca3d:	fldcw  WORD PTR [esi+ebx*2+0x4e]
  41ca41:	lds    ebx,FWORD PTR [edi+0x337b1ff9]
  41ca47:	fnstsw WORD PTR [edi]
  41ca49:	mul    DWORD PTR [esi+0x60]
  41ca4c:	mov    ebp,0x8c20854
  41ca51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca52:	test   BYTE PTR [ebx+0x11],bl
  41ca55:	out    dx,eax
  41ca56:	mov    dl,0x9e
  41ca58:	sbb    al,0xa0
  41ca5a:	std    
  41ca5b:	xor    cl,BYTE PTR [edx+0x72]
  41ca5e:	mov    dl,0x25
  41ca60:	int3   
  41ca61:	out    dx,eax
  41ca62:	cld    
  41ca63:	add    BYTE PTR [eiz*2-0x1d3d02e9],al
  41ca6a:	js     0x41c9f0
  41ca6c:	mov    bh,0xc4
  41ca6e:	mov    ebp,0x2adb8a1
  41ca73:	push   eax
  41ca74:	push   0x75eb94d2
  41ca79:	push   ebp
  41ca7a:	loope  0x41caa8
  41ca7c:	pop    ss
  41ca7d:	into   
  41ca7e:	adc    ah,BYTE PTR [edx+0x425c0f6b]
  41ca84:	scas   al,BYTE PTR es:[edi]
  41ca85:	inc    ebx
  41ca86:	(bad)  
  41ca87:	out    dx,al
  41ca88:	add    ebp,ebp
  41ca8a:	andps  xmm4,xmm6
  41ca8d:	xor    eax,DWORD PTR [ecx+0x5f]
  41ca90:	push   ds
  41ca91:	scas   eax,DWORD PTR es:[edi]
  41ca92:	leave  
  41ca93:	dec    edx
  41ca94:	ror    BYTE PTR [ebp-0x18],1
  41ca97:	icebp  
  41ca98:	cmc    
  41ca99:	ins    BYTE PTR es:[edi],dx
  41ca9a:	leave  
  41ca9b:	push   0x2c
  41ca9d:	fcom   QWORD PTR [eax+0x3c]
  41caa0:	adc    al,0x3b
  41caa2:	jl     0x41cad8
  41caa4:	mov    ecx,DWORD PTR [ebp+edi*1+0x29]
  41caa8:	and    ecx,DWORD PTR [esi]
  41caaa:	stos   BYTE PTR es:[edi],al
  41caab:	dec    esp
  41caac:	xor    BYTE PTR [edi+0x13],0xa8
  41cab0:	xchg   DWORD PTR [edi],ebx
  41cab2:	cmc    
  41cab3:	(bad)  
  41cab4:	adc    DWORD PTR [eax+0x31],0x1
  41cab8:	pop    eax
  41cab9:	pop    ebx
  41caba:	sti    
  41cabb:	push   0x25eb76fb
  41cac0:	mov    al,ds:0xbf65b280
  41cac5:	popa   
  41cac6:	jg     0x41caf9
  41cac8:	mov    DWORD PTR [esi+0x1f],edi
  41cacb:	(bad)  
  41cacc:	push   ebx
  41cacd:	sbb    DWORD PTR [ebp+0x79],0xd34c1b2f
  41cad4:	add    ecx,esi
  41cad6:	sbb    dl,BYTE PTR [esi+0x3f316a06]
  41cadc:	push   esp
  41cadd:	adc    ebp,DWORD PTR cs:[edx-0x1]
  41cae1:	and    DWORD PTR [ebp-0x44],ecx
  41cae4:	pop    es
  41cae5:	sbb    BYTE PTR [edi+0x49],ch
  41cae8:	push   ebp
  41cae9:	mov    bl,0xdc
  41caeb:	xor    DWORD PTR [ebx],esp
  41caed:	imul   edx,DWORD PTR [eax+ecx*2+0x16],0xffffffb3
  41caf2:	push   edi
  41caf3:	sbb    bh,BYTE PTR [ebx+0x3a]
  41caf6:	sbb    al,0x6
  41caf8:	out    dx,eax
  41caf9:	mov    DWORD PTR [ebx],ecx
  41cafb:	sub    bh,dl
  41cafd:	pop    ss
  41cafe:	inc    ebp
  41caff:	cmp    BYTE PTR [edi+0x7d],0xbc
  41cb03:	inc    DWORD PTR [edi+0x4]
  41cb06:	adc    eax,0x13f3d831
  41cb0b:	neg    BYTE PTR [esi]
  41cb0d:	jmp    0x8586:0x8c595bdf
  41cb14:	je     0x41cb3d
  41cb16:	popa   
  41cb17:	icebp  
  41cb18:	mov    ds:0xaeb0ad69,al
  41cb1d:	mov    esi,0x88219093
  41cb22:	lock in eax,dx
  41cb24:	ins    DWORD PTR es:[edi],dx
  41cb25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb26:	bound  edx,QWORD PTR [eax-0x4f8cc8cc]
  41cb2c:	das    
  41cb2d:	jmp    0x83a:0x4b431edd
  41cb34:	fnstenv [edi-0x77f85eb2]
  41cb3a:	mov    ds:0x165dfaa3,eax
  41cb3f:	push   es
  41cb40:	dec    eax
  41cb41:	fnstcw WORD PTR ss:[ecx+0x1cf17901]
  41cb48:	mov    fs,WORD PTR [ecx-0x276a89b3]
  41cb4e:	inc    ebx
  41cb4f:	adc    DWORD PTR [ebx+edi*1+0x3e],ecx
  41cb53:	mov    dh,0x80
  41cb55:	jb     0x41cbc6
  41cb57:	mov    ebx,0xc79dc292
  41cb5c:	rol    DWORD PTR [ecx],cl
  41cb5e:	adc    ecx,edx
  41cb60:	je     0x41cb07
  41cb62:	cmp    DWORD PTR [ecx-0x36842116],esp
  41cb68:	xor    eax,DWORD PTR [edi-0x21374709]
  41cb6e:	cwde   
  41cb6f:	mov    edi,0x9f03f9ba
  41cb74:	inc    esp
  41cb75:	iret   
  41cb76:	adc    eax,0xe29e28d5
  41cb7b:	push   0xaf5f032f
  41cb80:	gs xchg ecx,eax
  41cb82:	pop    esi
  41cb83:	or     eax,0x33bd1e0a
  41cb88:	mov    ch,0x34
  41cb8a:	or     cl,0x24
  41cb8d:	pop    edx
  41cb8e:	cmp    al,0xd1
  41cb90:	inc    ebp
  41cb91:	pop    es
  41cb92:	stc    
  41cb93:	(bad)  
  41cb94:	fisttp DWORD PTR [ebp-0x4]
  41cb97:	icebp  
  41cb98:	mov    eax,ds:0x57e2bd24
  41cb9d:	sahf   
  41cb9e:	in     eax,dx
  41cb9f:	mov    esi,0x7b25bfb4
  41cba4:	add    bh,BYTE PTR [edi]
  41cba6:	push   es
  41cba7:	test   DWORD PTR ds:0x229caae8,esp
  41cbad:	test   esi,0x2cfc2e77
  41cbb3:	pop    es
  41cbb4:	cmp    BYTE PTR [eax-0x3b],bl
  41cbb7:	pop    ecx
  41cbb8:	sub    al,0x55
  41cbba:	ins    DWORD PTR es:[edi],dx
  41cbbb:	nop
  41cbbc:	out    dx,al
  41cbbd:	jno    0x41cbaf
  41cbbf:	test   al,0x24
  41cbc1:	outs   dx,DWORD PTR ds:[esi]
  41cbc2:	add    edx,DWORD PTR [ebp+edx*2-0xf]
  41cbc6:	les    esp,FWORD PTR [ebp+0xb]
  41cbc9:	push   edi
  41cbca:	pop    es
  41cbcb:	xchg   ebp,eax
  41cbcc:	mov    dl,0x31
  41cbce:	cwde   
  41cbcf:	inc    edx
  41cbd0:	mov    ds:0xb133dba6,eax
  41cbd5:	push   esp
  41cbd6:	add    bl,BYTE PTR [edi+0x6d0ee638]
  41cbdc:	fadd   QWORD PTR [eax-0x74e490d]
  41cbe2:	stos   DWORD PTR es:[edi],eax
  41cbe3:	lods   eax,DWORD PTR ds:[esi]
  41cbe4:	add    BYTE PTR [edx-0x5c09a8fe],ah
  41cbea:	sub    DWORD PTR [edx-0x7],edx
  41cbed:	xchg   ebp,eax
  41cbee:	inc    DWORD PTR [ecx-0x76]
  41cbf1:	rep outs dx,DWORD PTR ds:[esi]
  41cbf3:	pop    ecx
  41cbf4:	pop    edx
  41cbf5:	lods   al,BYTE PTR ds:[esi]
  41cbf6:	sub    dh,dh
  41cbf8:	add    eax,0xbdd2f7d8
  41cbfd:	push   ss
  41cbfe:	mov    bl,0xa1
  41cc00:	xchg   BYTE PTR gs:[esi+0x10],dl
  41cc04:	leave  
  41cc05:	lods   eax,DWORD PTR ds:[esi]
  41cc06:	ins    BYTE PTR es:[edi],dx
  41cc07:	(bad)  
  41cc08:	jp     0x41cc0b
  41cc0a:	cmp    cl,BYTE PTR [esi-0x56]
  41cc0d:	cmp    eax,0x1368348e
  41cc12:	inc    ebx
  41cc13:	fdivr  DWORD PTR [ebp+0x2f]
  41cc16:	pop    esi
  41cc17:	xchg   edx,eax
  41cc18:	aaa    
  41cc19:	test   BYTE PTR [eax-0x627d13bb],ch
  41cc1f:	fs dec ecx
  41cc21:	call   0xcc8a9f60
  41cc26:	dec    esp
  41cc27:	cs mov ch,0x11
  41cc2a:	push   ebx
  41cc2b:	in     al,0xb3
  41cc2d:	popf   
  41cc2e:	xor    dl,BYTE PTR [eax-0x2afbe53c]
  41cc34:	pop    esi
  41cc35:	loopne 0x41cc10
  41cc37:	sub    bh,BYTE PTR [ecx]
  41cc39:	sbb    eax,0xcada864b
  41cc3e:	(bad)  [edi+0x16680ec7]
  41cc44:	xchg   BYTE PTR [ebp-0x66a87918],bh
  41cc4a:	les    eax,FWORD PTR [edi+0x1e5d44bb]
  41cc50:	sbb    cl,BYTE PTR [eax-0x63]
  41cc53:	js     0x41cc03
  41cc55:	sub    dh,ch
  41cc57:	fucomp st(5)
  41cc59:	mov    ds:0x761d6a88,eax
  41cc5e:	(bad)  
  41cc5f:	jge    0x41cca0
  41cc61:	in     al,0xba
  41cc63:	sub    bl,BYTE PTR [eax-0x31]
  41cc66:	repnz fnstcw WORD PTR [edi+0x1c]
  41cc6a:	(bad)  
  41cc6b:	add    eax,0xf663992a
  41cc70:	lds    ecx,FWORD PTR [esi+0x36]
  41cc73:	jmp    0x5d925cb8
  41cc78:	hlt    
  41cc79:	xchg   edx,eax
  41cc7a:	retf   
  41cc7b:	push   esp
  41cc7c:	cmp    esp,edx
  41cc7e:	pop    ds
  41cc7f:	jo     0x41cc68
  41cc81:	adc    ebx,DWORD PTR fs:[eax+0x63]
  41cc85:	icebp  
  41cc86:	repnz scas eax,DWORD PTR es:[edi]
  41cc88:	adc    al,0xcd
  41cc8a:	cld    
  41cc8b:	jb     0x41ccd3
  41cc8d:	cwde   
  41cc8e:	mov    bl,ch
  41cc90:	or     al,0xf6
  41cc92:	add    eax,0x972311ce
  41cc97:	inc    ecx
  41cc98:	add    eax,DWORD PTR [edi+ebx*4+0x1c2b9c56]
  41cc9f:	fdiv   DWORD PTR [esi+0x22ecaa41]
  41cca5:	daa    
  41cca6:	xchg   DWORD PTR [esi],ecx
  41cca8:	mov    WORD PTR ds:0x17898193,ss
  41ccae:	and    eax,esi
  41ccb0:	sbb    BYTE PTR [ebp-0x14],dl
  41ccb3:	dec    eax
  41ccb4:	lock push sp
  41ccb7:	jno    0x41cc47
  41ccb9:	stc    
  41ccba:	es push eax
  41ccbc:	retf   
  41ccbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccbe:	sar    DWORD PTR [ebx],1
  41ccc0:	sahf   
  41ccc1:	mov    ds:0x745127c,eax
  41ccc6:	int3   
  41ccc7:	xor    BYTE PTR ds:0x4cf8819f,bh
  41cccd:	or     ebp,DWORD PTR [eax-0x62]
  41ccd0:	(bad)  
  41ccd1:	cmp    ch,BYTE PTR [esp+ecx*8-0x1e]
  41ccd5:	sub    edx,DWORD PTR [edx]
  41ccd7:	ins    DWORD PTR es:[edi],dx
  41ccd8:	dec    ecx
  41ccd9:	pop    esi
  41ccda:	in     al,dx
  41ccdb:	in     eax,dx
  41ccdc:	cs inc esp
  41ccde:	(bad)  
  41ccdf:	push   ebp
  41cce0:	mov    ds,WORD PTR [esi+0x7c]
  41cce3:	sahf   
  41cce4:	js     0x41cc8c
  41cce6:	push   edi
  41cce7:	xchg   ebx,eax
  41cce8:	mov    cl,BYTE PTR [edx-0x5f]
  41cceb:	lahf   
  41ccec:	out    dx,eax
  41cced:	imul   esi,esp,0xffffffda
  41ccf0:	pop    eax
  41ccf1:	idiv   BYTE PTR [edi]
  41ccf3:	or     ah,al
  41ccf5:	leave  
  41ccf6:	jg     0x41ccca
  41ccf8:	inc    ecx
  41ccf9:	adc    eax,DWORD PTR [edx]
  41ccfb:	xchg   edi,eax
  41ccfc:	and    eax,0xb6e258ec
  41cd01:	fwait
  41cd02:	pushf  
  41cd03:	push   0xffffff80
  41cd05:	dec    ebx
  41cd06:	xchg   edi,eax
  41cd07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd08:	loopne 0x41cd34
  41cd0a:	jge    0x41ccbb
  41cd0c:	inc    ebp
  41cd0d:	xor    ah,ch
  41cd0f:	xchg   edi,eax
  41cd10:	mov    edx,0x85c91b22
  41cd15:	pop    es
  41cd16:	push   ebx
  41cd17:	push   ss
  41cd18:	xchg   DWORD PTR [esi-0x14],ebx
  41cd1b:	xchg   esi,eax
  41cd1c:	ss inc edx
  41cd1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd1f:	or     esp,DWORD PTR [ebp-0x748b64c0]
  41cd25:	jb     0x41cd38
  41cd27:	adc    BYTE PTR [esi+0x2a],cl
  41cd2a:	daa    
  41cd2b:	cmp    ebx,DWORD PTR [ebx-0x153748f6]
  41cd31:	sub    BYTE PTR [esi+edx*2+0x79],ch
  41cd35:	enter  0x16b,0xb
  41cd39:	push   ds
  41cd3a:	xchg   DWORD PTR [esp+ebp*8+0x2b],ebp
  41cd3e:	int3   
  41cd3f:	daa    
  41cd40:	cmp    eax,ebx
  41cd42:	cld    
  41cd43:	jle    0x41cd7b
  41cd45:	out    0x2d,al
  41cd47:	outs   dx,DWORD PTR ds:[esi]
  41cd48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd49:	jge    0x41cd8f
  41cd4b:	cdq    
  41cd4c:	pop    ss
  41cd4d:	mov    ah,0x60
  41cd4f:	stos   BYTE PTR es:[edi],al
  41cd50:	mov    al,0xdd
  41cd52:	push   ecx
  41cd53:	push   esi
  41cd54:	push   ebp
  41cd55:	int3   
  41cd56:	pushf  
  41cd57:	sub    DWORD PTR [ecx+0x7d],ebx
  41cd5a:	scas   eax,DWORD PTR es:[edi]
  41cd5b:	adc    DWORD PTR [edi-0x135a972f],edx
  41cd61:	add    eax,0x860911cd
  41cd66:	test   al,0x38
  41cd68:	adc    DWORD PTR [ebp-0x41],ecx
  41cd6b:	ror    edx,1
  41cd6d:	mov    fs,WORD PTR [ebx]
  41cd6f:	sub    ah,BYTE PTR ds:0xb408090b
  41cd75:	les    edx,FWORD PTR [edx-0x15]
  41cd78:	xchg   DWORD PTR [edx+0x60a0201f],edi
  41cd7e:	ror    DWORD PTR [edi-0x26108331],0xb3
  41cd85:	mov    BYTE PTR [esi+edx*2],cl
  41cd88:	inc    esi
  41cd89:	xchg   esi,edx
  41cd8b:	ror    DWORD PTR [edi+0x74],0x42
  41cd8f:	(bad)  
  41cd90:	aam    0x8a
  41cd92:	pop    ss
  41cd93:	push   ebx
  41cd94:	test   BYTE PTR [edi+0x6c5cdd4],0x4a
  41cd9b:	sbb    esp,DWORD PTR [ebp-0x8ca28b8]
  41cda1:	ror    DWORD PTR [esi+0x10],1
  41cda4:	retf   
  41cda5:	xchg   edx,eax
  41cda6:	jle    0x41cdb6
  41cda8:	ret    
  41cda9:	jmp    0x784b:0x6557bbe3
  41cdb0:	dec    ecx
  41cdb1:	jae    0x41cdb1
  41cdb3:	cdq    
  41cdb4:	push   edi
  41cdb5:	sbb    ecx,esp
  41cdb7:	or     al,0x1d
  41cdb9:	sbb    dl,BYTE PTR [edx-0x73]
  41cdbc:	fmul   st(0),st
  41cdbe:	je     0x41cd95
  41cdc0:	gs out dx,al
  41cdc2:	sbb    eax,0x16f9cc8d
  41cdc7:	jae    0x41ce04
  41cdc9:	xchg   esp,eax
  41cdca:	call   0xa628:0xa047ab00
  41cdd1:	cmp    eax,DWORD PTR [edi+0x66c3bdeb]
  41cdd7:	inc    ecx
  41cdd8:	cmp    edi,DWORD PTR [ecx+0x7]
  41cddb:	pushf  
  41cddc:	dec    ebp
  41cddd:	mov    ch,0x89
  41cddf:	add    al,0x84
  41cde1:	mov    ah,0xd8
  41cde3:	cmp    DWORD PTR [ebx+0x65ac3a56],ebp
  41cde9:	xor    al,0x75
  41cdeb:	fsubr  QWORD PTR [eax+0x41]
  41cdee:	mov    ch,0xf9
  41cdf0:	or     BYTE PTR [edx+0x25],bh
  41cdf3:	hlt    
  41cdf4:	xor    al,0x2
  41cdf6:	adc    BYTE PTR [eax-0x6b],dh
  41cdf9:	into   
  41cdfa:	repnz loop 0x41cd82
  41cdfd:	(bad)  
  41cdfe:	sbb    edx,edi
  41ce00:	leave  
  41ce01:	rol    DWORD PTR [ebx],cl
  41ce03:	into   
  41ce04:	ins    DWORD PTR es:[edi],dx
  41ce05:	leave  
  41ce06:	std    
  41ce07:	enter  0x16b5,0xee
  41ce0b:	test   DWORD PTR [ebx-0x43],ecx
  41ce0e:	int    0x5d
  41ce10:	xor    ch,BYTE PTR [edi-0x27]
  41ce13:	data16 adc BYTE PTR [ecx],0xdf
  41ce17:	and    al,BYTE PTR [edi]
  41ce19:	pusha  
  41ce1a:	test   BYTE PTR [eax+0x58],bh
  41ce1d:	pop    eax
  41ce1e:	add    ecx,edx
  41ce20:	xor    eax,DWORD PTR [esi+0x2e00d7d7]
  41ce26:	(bad)
  41ce29:	aaa    
  41ce2a:	jl     0x41cdf0
  41ce2c:	(bad)  
  41ce2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce2e:	into   
  41ce2f:	arpl   WORD PTR [ecx],bx
  41ce31:	retf   
  41ce32:	fiadd  WORD PTR ds:0x5f8c1a71
  41ce38:	scas   eax,DWORD PTR es:[edi]
  41ce39:	pusha  
  41ce3a:	mov    ds:0xed0306cd,eax
  41ce3f:	pop    esi
  41ce40:	adc    BYTE PTR [ebx+eax*4+0x18],bl
  41ce44:	retf   0x2e24
  41ce47:	jecxz  0x41ce31
  41ce49:	in     eax,dx
  41ce4a:	xchg   edx,eax
  41ce4b:	jmp    0xd1b8:0x83f35052
  41ce52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce53:	ret    
  41ce54:	ret    
  41ce55:	loopne 0x41ce34
  41ce57:	mov    cl,0x9a
  41ce59:	cwde   
  41ce5a:	mov    bh,0xd2
  41ce5c:	push   edi
  41ce5d:	push   ecx
  41ce5e:	das    
  41ce5f:	int    0x16
  41ce61:	enter  0xc7d3,0xd4
  41ce65:	adc    eax,0xcb406456
  41ce6a:	inc    ebp
  41ce6b:	das    
  41ce6c:	dec    esp
  41ce6d:	xchg   cl,ah
  41ce6f:	sub    ecx,esp
  41ce71:	lds    ebp,FWORD PTR [edx-0x62b8f594]
  41ce77:	dec    esp
  41ce78:	push   es
  41ce79:	adc    ecx,DWORD PTR [esi-0x12]
  41ce7c:	and    esi,DWORD PTR [eax+0x7c7e9c9c]
  41ce82:	lea    esi,fs:[esi]
  41ce85:	arpl   WORD PTR ds:[edx-0x8],ax
  41ce89:	pop    edi
  41ce8a:	mov    ds:0x3e1a4d6,al
  41ce8f:	mov    ch,BYTE PTR [eax]
  41ce91:	push   ebp
  41ce92:	mov    eax,ds:0x4da47cac
  41ce97:	enter  0xa4b8,0x11
  41ce9b:	daa    
  41ce9c:	xchg   edi,eax
  41ce9d:	jmp    0xa8326d25
  41cea2:	xchg   ebx,eax
  41cea3:	shr    BYTE PTR [edi+edi*4],1
  41cea6:	outs   dx,DWORD PTR ds:[esi]
  41cea7:	mov    ch,0xb
  41cea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceaa:	outs   dx,BYTE PTR ds:[esi]
  41ceab:	sub    ebp,edx
  41cead:	int    0xa1
  41ceaf:	loope  0x41cee1
  41ceb1:	aad    0xa8
  41ceb3:	rcl    WORD PTR [esi-0x4151815c],cl
  41ceba:	push   es
  41cebb:	sub    DWORD PTR [edi+0x191c169],ebp
  41cec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cec2:	outs   dx,DWORD PTR ds:[esi]
  41cec3:	add    dl,cl
  41cec5:	mov    ds,WORD PTR [eax+0x7c9e3a23]
  41cecb:	gs push 0x7ee8dc31
  41ced1:	and    BYTE PTR [esi+0x1bd8dd80],al
  41ced7:	fidiv  WORD PTR [esi+0x274e57c9]
  41cedd:	or     dh,bl
  41cedf:	push   ds
  41cee0:	outs   dx,BYTE PTR ds:[esi]
  41cee1:	and    BYTE PTR [esi],al
  41cee3:	jns    0x41cef8
  41cee5:	mov    dl,0x6
  41cee7:	or     DWORD PTR [edx],ecx
  41cee9:	fwait
  41ceea:	retf   0xc850
  41ceed:	dec    ecx
  41ceee:	sbb    BYTE PTR ds:0xca94f25c,ah
  41cef4:	dec    esp
  41cef5:	pop    esi
  41cef6:	(bad)  [ecx-0x122a3b72]
  41cefd:	rol    BYTE PTR [eax+edi*4],0x19
  41cf01:	stos   DWORD PTR es:[edi],eax
  41cf02:	push   0x49
  41cf04:	cli    
  41cf05:	sub    eax,0x2c544c1b
  41cf0a:	sub    dl,al
  41cf0c:	jb     0x41cea9
  41cf0e:	fdivr  QWORD PTR [edi-0x31]
  41cf11:	cmp    bh,BYTE PTR [ecx+0x65ad1aa6]
  41cf17:	cli    
  41cf18:	je     0x41cec3
  41cf1a:	push   ds
  41cf1b:	and    cl,dl
  41cf1d:	std    
  41cf1e:	mov    ebx,0xf8dac00a
  41cf23:	dec    edx
  41cf24:	or     dl,bl
  41cf26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf27:	mul    al
  41cf29:	mov    eax,ds:0x4d32768c
  41cf2e:	inc    edx
  41cf2f:	mov    eax,esp
  41cf31:	ss cld 
  41cf33:	repnz push ecx
  41cf35:	push   ecx
  41cf36:	mov    al,ds:0x4ea501f6
  41cf3b:	push   es
  41cf3c:	add    al,0xb4
  41cf3e:	hlt    
  41cf3f:	stos   DWORD PTR es:[edi],eax
  41cf40:	jecxz  0x41cfae
  41cf42:	or     esi,0x4ee44c4
  41cf48:	jmp    0x41cfc7
  41cf4a:	loopne 0x41cf8c
  41cf4c:	loope  0x41cee4
  41cf4e:	aas    
  41cf4f:	pop    edx
  41cf50:	scas   al,BYTE PTR es:[edi]
  41cf51:	push   cs
  41cf52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf53:	lods   eax,DWORD PTR ds:[esi]
  41cf54:	out    dx,eax
  41cf55:	xor    eax,0x5a6cfe26
  41cf5a:	inc    esp
  41cf5b:	adc    eax,0x98679fe0
  41cf60:	out    dx,eax
  41cf61:	nop
  41cf62:	push   edx
  41cf63:	xchg   esp,ecx
  41cf65:	out    0x8f,eax
  41cf67:	mov    ds:0xe51511e1,al
  41cf6c:	add    bl,BYTE PTR [ecx+0x2b]
  41cf6f:	dec    ebx
  41cf70:	dec    ecx
  41cf71:	aaa    
  41cf72:	and    BYTE PTR [ebp+edx*4-0x14f74d61],cl
  41cf79:	xchg   edx,eax
  41cf7a:	(bad)  
  41cf7b:	jl     0x41cf4e
  41cf7d:	pop    ss
  41cf7e:	shl    BYTE PTR [edx-0x73246eaf],0x39
  41cf85:	sbb    al,BYTE PTR [esi]
  41cf87:	enter  0x8c2b,0x49
  41cf8b:	or     BYTE PTR [ecx-0x14],bl
  41cf8e:	popf   
  41cf8f:	sti    
  41cf90:	ss push esi
  41cf92:	out    0x3d,al
  41cf94:	or     eax,0x12722bf1
  41cf99:	mov    ecx,0x39d9845f
  41cf9e:	push   ds
  41cf9f:	outs   dx,DWORD PTR ds:[esi]
  41cfa0:	sbb    DWORD PTR [esi-0x2d7f1d1c],eax
  41cfa6:	cli    
  41cfa7:	push   cs
  41cfa8:	clc    
  41cfa9:	push   ss
  41cfaa:	add    al,0x11
  41cfac:	fstp   DWORD PTR [eax-0x3f7e8fbd]
  41cfb2:	inc    ebp
  41cfb3:	ficom  WORD PTR [edx]
  41cfb5:	into   
  41cfb6:	push   edx
  41cfb7:	lods   eax,DWORD PTR ds:[esi]
  41cfb8:	push   ss
  41cfb9:	and    eax,DWORD PTR [ebp+0x5a24641b]
  41cfbf:	scas   eax,DWORD PTR es:[edi]
  41cfc0:	retf   
  41cfc1:	xor    dl,BYTE PTR [ecx+0x46]
  41cfc4:	loop   0x41cf6b
  41cfc6:	outs   dx,BYTE PTR ds:[esi]
  41cfc7:	mov    BYTE PTR [ebp+0x17],al
  41cfca:	inc    ebp
  41cfcb:	xchg   edi,eax
  41cfcc:	inc    edx
  41cfcd:	jmp    0xf79e49ec
  41cfd2:	inc    edx
  41cfd3:	mov    ebx,0x6fdd4a94
  41cfd8:	mov    ch,0xd8
  41cfda:	adc    eax,DWORD PTR [ebp-0x4b]
  41cfdd:	pop    ecx
  41cfde:	rcr    edi,1
  41cfe0:	repnz bound edx,QWORD PTR [edx]
  41cfe3:	pop    ebx
  41cfe4:	push   0xfffffff7
  41cfe6:	icebp  
  41cfe7:	in     eax,0x39
  41cfe9:	add    BYTE PTR [esi+0x14],bh
  41cfec:	xchg   ecx,eax
  41cfed:	jg     0x41d019
  41cfef:	push   DWORD PTR ds:0xae1f199f
  41cff5:	dec    esp
  41cff6:	dec    esp
  41cff7:	jmp    0x44fa5f9e
  41cffc:	imul   edx,DWORD PTR [ecx-0x719cfdf5],0xffffffc0
  41d003:	(bad)  
  41d004:	mov    eax,0x6f5d0686
  41d009:	xor    BYTE PTR [ecx+0x6bfa737d],dh
  41d00f:	cmc    
  41d010:	(bad)  
  41d011:	(bad)  [eax+0x78]
  41d014:	push   eax
  41d015:	sub    al,0xc5
  41d017:	pop    edi
  41d018:	jmp    0x41d08a
  41d01a:	outs   dx,DWORD PTR ds:[esi]
  41d01b:	cmp    eax,0x833a522b
  41d020:	cmp    eax,0x9e01a263
  41d025:	cwde   
  41d026:	dec    ebp
  41d027:	and    cl,bh
  41d029:	xchg   BYTE PTR [esi+eiz*1],dh
  41d02c:	out    0xaa,al
  41d02e:	pusha  
  41d02f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d031:	xchg   ebp,eax
  41d032:	add    bh,BYTE PTR [ecx]
  41d034:	dec    esi
  41d035:	jae    0x41d018
  41d037:	ror    edx,cl
  41d039:	imul   BYTE PTR [ecx]
  41d03b:	jp     0x41d0a3
  41d03d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d03e:	adc    al,0x53
  41d040:	mov    DWORD PTR [ecx+esi*2],0xfa01b0b2
  41d047:	mov    ds:0xd987fcf,eax
  41d04c:	or     cl,bl
  41d04e:	pop    eax
  41d04f:	dec    edi
  41d050:	adc    DWORD PTR [ebx-0x402972ac],eax
  41d056:	jnp    0x41d023
  41d058:	aad    0xe4
  41d05a:	inc    eax
  41d05b:	dec    eax
  41d05c:	in     al,dx
  41d05d:	sub    al,0x12
  41d05f:	push   ebx
  41d060:	sub    ch,bh
  41d062:	not    DWORD PTR [esi-0x18]
  41d065:	xchg   ecx,eax
  41d066:	and    al,0xcc
  41d068:	and    cl,ch
  41d06a:	int    0x52
  41d06c:	shr    BYTE PTR [ebp-0x3c],cl
  41d06f:	mov    ds:0x34d4a6fe,eax
  41d074:	jns    0x41d082
  41d076:	jns    0x41d075
  41d078:	push   0x66
  41d07a:	fcomi  st,st(2)
  41d07c:	xchg   ebp,eax
  41d07d:	jo     0x41d0e6
  41d07f:	inc    esi
  41d080:	xchg   ebp,eax
  41d081:	pusha  
  41d082:	data16 das 
  41d084:	pop    eax
  41d085:	and    eax,0xe94eb9af
  41d08a:	push   esi
  41d08b:	in     eax,0xfa
  41d08d:	dec    esp
  41d08e:	sub    bh,BYTE PTR [ebp-0x68]
  41d091:	fcom   QWORD PTR [eax-0x3231518]
  41d097:	das    
  41d098:	xchg   DWORD PTR [ebx+0x12e1d93e],ebx
  41d09e:	jae    0x41d05d
  41d0a0:	dec    eax
  41d0a1:	pop    esi
  41d0a2:	inc    esp
  41d0a3:	lods   eax,DWORD PTR es:[esi]
  41d0a5:	les    edi,FWORD PTR [ecx+eiz*2+0x1d]
  41d0a9:	ret    0xaddd
  41d0ac:	xchg   esi,eax
  41d0ad:	push   ebx
  41d0ae:	aas    
  41d0af:	rol    BYTE PTR [edx],cl
  41d0b1:	xchg   ebp,eax
  41d0b2:	mov    ebp,?
  41d0b4:	ret    0xf53
  41d0b7:	mov    BYTE PTR [ebp-0x50],bl
  41d0ba:	test   eax,0x61e72eb9
  41d0bf:	lods   eax,DWORD PTR ds:[esi]
  41d0c0:	jmp    0xafdbcf7d
  41d0c5:	mov    WORD PTR [ebx+0x319e859c],es
  41d0cb:	mov    esp,0x1288bb7
  41d0d0:	sbb    DWORD PTR [edx],edx
  41d0d2:	xchg   BYTE PTR ds:0x6ad6f165,ah
  41d0d8:	jb     0x41d0b5
  41d0da:	fidivr WORD PTR [edi+0x4c9a679f]
  41d0e0:	ret    
  41d0e1:	stos   BYTE PTR es:[edi],al
  41d0e2:	xor    DWORD PTR ds:0xf67cb8da,0xc75d4093
  41d0ec:	into   
  41d0ed:	jmp    0xa83a42f1
  41d0f2:	in     al,dx
  41d0f3:	mov    BYTE PTR [esi],bh
  41d0f5:	pop    edx
  41d0f6:	ds push ebp
  41d0f8:	xchg   BYTE PTR [esi],ah
  41d0fa:	dec    ebx
  41d0fb:	lock fstp DWORD PTR [edi]
  41d0fe:	fcom   st(7)
  41d100:	fcom   DWORD PTR [edx-0x758c350d]
  41d106:	cmp    BYTE PTR [edx+0x45380d17],cl
  41d10c:	xchg   ecx,eax
  41d10d:	dec    edi
  41d10e:	leave  
  41d10f:	stos   DWORD PTR es:[edi],eax
  41d110:	adc    ebx,DWORD PTR [ecx+0x2e5d72b7]
  41d116:	push   ds
  41d117:	pop    es
  41d118:	popa   
  41d119:	rcr    BYTE PTR [eax+0x6b],0x7
  41d11d:	xchg   ebp,eax
  41d11e:	mov    ch,0xd9
  41d120:	mov    eax,0xfffbef94
  41d125:	pop    ebx
  41d126:	inc    esp
  41d127:	lds    edx,FWORD PTR [esi-0x35]
  41d12a:	push   esi
  41d12b:	imul   esi,DWORD PTR [edx-0x3cb4d07c],0xffffffd7
  41d132:	out    0xca,eax
  41d134:	mov    edx,0xcdcf9657
  41d139:	pop    esp
  41d13a:	outs   dx,BYTE PTR ds:[esi]
  41d13b:	nop
  41d13c:	push   ebp
  41d13d:	add    dh,BYTE PTR [ebx]
  41d13f:	xchg   edi,eax
  41d140:	pop    ebp
  41d141:	fidivr WORD PTR [eax+0x542123f0]
  41d147:	rol    DWORD PTR [edi-0x10f143a2],1
  41d14d:	push   0xfffffff6
  41d14f:	retf   
  41d150:	lea    esp,ds:0x6923944a
  41d156:	call   0x598b1a79
  41d15b:	fcomp  DWORD PTR [eax]
  41d15d:	mov    edi,DWORD PTR [ecx]
  41d15f:	inc    edi
  41d160:	scas   al,BYTE PTR es:[edi]
  41d161:	cmc    
  41d162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d163:	cmp    DWORD PTR [edx+0x673dc637],edi
  41d169:	popf   
  41d16a:	jecxz  0x41d1b9
  41d16c:	pusha  
  41d16d:	in     eax,dx
  41d16e:	bound  esp,QWORD PTR [ebp+0x28a0bc8a]
  41d174:	mov    eax,ds:0x48ab00ca
  41d179:	outs   dx,DWORD PTR ds:[esi]
  41d17a:	jmp    0x82d27f65
  41d17f:	mov    WORD PTR [eax+0x4a3903e1],gs
  41d185:	push   ds
  41d186:	fucompp 
  41d188:	push   eax
  41d189:	inc    ebx
  41d18a:	dec    DWORD PTR [ecx-0x41]
  41d18d:	push   eax
  41d18e:	mov    ebp,0xe416dcb9
  41d193:	dec    edi
  41d194:	or     BYTE PTR [esi+0x595efec9],0x3a
  41d19b:	mov    ebp,0xe20e3c9
  41d1a0:	jo     0x41d13d
  41d1a2:	neg    BYTE PTR [eax-0x68]
  41d1a5:	lods   al,BYTE PTR ds:[esi]
  41d1a6:	and    eax,0xb21c86a7
  41d1ab:	pusha  
  41d1ac:	int3   
  41d1ad:	inc    esi
  41d1ae:	jp     0x41d148
  41d1b0:	in     al,0xfc
  41d1b2:	or     al,0x8d
  41d1b4:	mov    al,0x87
  41d1b6:	shr    bl,cl
  41d1b8:	fist   WORD PTR [ebx]
  41d1ba:	rol    DWORD PTR [edi],1
  41d1bc:	mov    ah,bh
  41d1be:	ss (bad) 
  41d1c1:	or     eax,0x1c3fb0e8
  41d1c6:	scas   al,BYTE PTR es:[edi]
  41d1c7:	(bad)  
  41d1c8:	pop    esi
  41d1c9:	sar    DWORD PTR [esi-0x23a8545c],1
  41d1cf:	js     0x41d1e4
  41d1d1:	arpl   sp,bp
  41d1d3:	mov    ebx,0x650c79d2
  41d1d8:	xchg   edi,eax
  41d1d9:	jb     0x41d1a9
  41d1db:	out    0x61,al
  41d1dd:	adc    bl,bh
  41d1df:	ffreep st(2)
  41d1e1:	jecxz  0x41d24d
  41d1e3:	push   ds
  41d1e4:	enter  0x689b,0x77
  41d1e8:	in     eax,dx
  41d1e9:	test   ch,al
  41d1eb:	or     eax,0x5668ec43
  41d1f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1f1:	fnstcw WORD PTR [edx+eiz*1-0x28]
  41d1f5:	dec    eax
  41d1f6:	std    
  41d1f7:	shl    DWORD PTR [edx+0x235fec92],0xdd
  41d1fe:	pop    ebx
  41d1ff:	fcomp  DWORD PTR [edi+0x3cd639ef]
  41d205:	push   gs
  41d207:	pop    ebp
  41d208:	push   ebx
  41d209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d20a:	xchg   esp,eax
  41d20b:	mov    edi,0x70fd1cf5
  41d210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d211:	cli    
  41d212:	sub    eax,0x4773ef84
  41d217:	repz jle 0x41d1af
  41d21a:	adc    DWORD PTR [edx+0x4e7e57f9],ebp
  41d220:	add    DWORD PTR [edx],ebx
  41d222:	push   ds
  41d223:	lds    esi,FWORD PTR [ebx-0x1c8a8687]
  41d229:	sbb    edx,ebp
  41d22b:	call   DWORD PTR [ecx+ebx*1+0x2]
  41d22f:	adc    BYTE PTR [edx],cl
  41d231:	or     DWORD PTR [esi-0x3a],eax
  41d234:	imul   ecx,DWORD PTR [ebp+ebp*2+0x3b92429d],0x372453ca
  41d23f:	out    dx,eax
  41d240:	push   eax
  41d241:	cld    
  41d242:	adc    DWORD PTR [edx],esi
  41d244:	jae    0x41d23f
  41d246:	xor    cl,ch
  41d248:	push   esi
  41d249:	mov    bh,BYTE PTR [edi+0x64]
  41d24c:	mov    edi,0x77b59e3f
  41d251:	dec    eax
  41d252:	(bad)  
  41d253:	sub    dh,dh
  41d255:	fsubp  st(0),st
  41d257:	add    eax,0x74826e53
  41d25c:	mov    esp,0x9df278ca
  41d261:	sar    DWORD PTR [edi],cl
  41d263:	mov    ebx,0x45df101b
  41d268:	(bad)  
  41d269:	iret   
  41d26a:	aam    0x27
  41d26c:	outs   dx,BYTE PTR ds:[esi]
  41d26d:	(bad)  
  41d26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d26f:	call   0x9b5b5f8a
  41d274:	jmp    0x4f2121cd
  41d279:	xchg   ecx,eax
  41d27a:	leave  
  41d27b:	jae    0x41d260
  41d27d:	fldenv [ebp+0x62]
  41d280:	std    
  41d281:	push   ebp
  41d282:	xor    esp,ecx
  41d284:	loope  0x41d2f0
  41d286:	and    edx,DWORD PTR [edi+ebx*2]
  41d289:	fiadd  WORD PTR [eax+0x3d]
  41d28c:	aam    0x93
  41d28e:	or     BYTE PTR [eax+0x2d1ec2bb],ah
  41d294:	mov    ds,WORD PTR [ebx-0x4]
  41d297:	mov    esi,0xddd46906
  41d29c:	and    BYTE PTR [edx],ah
  41d29e:	add    BYTE PTR ds:[ecx+edx*2-0x34e32a92],dh
  41d2a6:	stos   DWORD PTR es:[edi],eax
  41d2a7:	push   eax
  41d2a8:	(bad)  
  41d2a9:	les    ebx,FWORD PTR ds:0x6594dc03
  41d2af:	mov    dl,0x4b
  41d2b1:	inc    ecx
  41d2b2:	addr16 je 0x41d2b3
  41d2b5:	ds stos BYTE PTR es:[edi],al
  41d2b7:	push   bp
  41d2b9:	das    
  41d2ba:	pushf  
  41d2bb:	add    DWORD PTR [ebx-0x159a33b5],ebx
  41d2c1:	xchg   BYTE PTR [ecx-0x35],bh
  41d2c4:	add    DWORD PTR [edx+0x31],0x2467fe7f
  41d2cb:	xor    al,0x0
  41d2cd:	inc    ecx
  41d2ce:	fild   DWORD PTR [edi]
  41d2d0:	xchg   edx,eax
  41d2d1:	out    0xc5,eax
  41d2d3:	ret    
  41d2d4:	popa   
  41d2d5:	mov    al,0x99
  41d2d7:	add    BYTE PTR [esi+esi*1-0x5683143f],ch
  41d2de:	jne    0x41d279
  41d2e0:	(bad)  
  41d2e1:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41d2e3:	das    
  41d2e4:	xchg   DWORD PTR [edi-0x9],esp
  41d2e7:	xor    al,0x94
  41d2e9:	sar    BYTE PTR [ecx],0xa9
  41d2ec:	adc    cl,BYTE PTR [ebx+0x7d99679b]
  41d2f2:	xor    DWORD PTR [esi-0x77],esi
  41d2f5:	pushf  
  41d2f6:	xchg   DWORD PTR [edx-0x372597e3],edx
  41d2fc:	retf   0xd191
  41d2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d300:	jle    0x41d35d
  41d302:	(bad)  
  41d303:	sbb    al,0x2c
  41d305:	rol    DWORD PTR [ebp-0x6cddc7b0],0x66
  41d30c:	fld    TBYTE PTR [edi+0x20]
  41d30f:	(bad)  
  41d310:	leave  
  41d311:	ds das 
  41d313:	in     al,dx
  41d314:	xchg   DWORD PTR [ecx-0x369ffdd8],ebp
  41d31a:	inc    esi
  41d31b:	adc    al,0x53
  41d31d:	mov    esi,0x7a1a3c03
  41d322:	fiadd  WORD PTR [eax*8+0x583dbbfd]
  41d329:	ja     0x41d2b0
  41d32b:	sar    BYTE PTR [esi-0x23],0xdf
  41d32f:	fiadd  DWORD PTR [edi-0x9]
  41d332:	sbb    BYTE PTR [esi],0x89
  41d335:	push   ss
  41d336:	lahf   
  41d337:	adc    al,0x24
  41d339:	sub    al,0x58
  41d33b:	adc    al,0x6a
  41d33d:	ja     0x41d2df
  41d33f:	xchg   dl,dh
  41d341:	cmp    edi,ebp
  41d343:	mov    al,0x26
  41d345:	(bad)  
  41d346:	jo     0x41d2ed
  41d348:	push   0xb9d4a7d3
  41d34d:	int3   
  41d34e:	and    eax,0x1fad3de6
  41d353:	cli    
  41d354:	mov    ch,dl
  41d356:	repnz mov edx,0x4acbb561
  41d35c:	jmp    0x5402:0x80d60495
  41d363:	in     al,0x87
  41d365:	test   BYTE PTR [eax-0x38],0x84
  41d369:	fidiv  DWORD PTR [edi+0x18]
  41d36c:	add    DWORD PTR [edi+0x79b3a7ed],ebp
  41d372:	pushf  
  41d373:	pmaddwd mm6,QWORD PTR [ecx-0x6026b365]
  41d37a:	cmp    eax,0xd2a928ad
  41d37f:	jmp    0x7de27fe
  41d384:	mov    al,0x3
  41d386:	jmp    0x41d401
  41d388:	mov    ch,BYTE PTR [edx]
  41d38a:	ret    
  41d38b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d38c:	xor    bl,bl
  41d38e:	sbb    esi,edx
  41d390:	push   es
  41d391:	out    dx,eax
  41d392:	xchg   esp,eax
  41d393:	arpl   WORD PTR [ecx+ebx*1],bx
  41d396:	push   eax
  41d397:	jns    0x41d371
  41d399:	jl     0x41d367
  41d39b:	stos   DWORD PTR es:[edi],eax
  41d39c:	(bad)
  41d39f:	jg     0x41d37b
  41d3a1:	xchg   ah,dh
  41d3a3:	rcl    BYTE PTR ds:0x4b052e75,0x46
  41d3aa:	fsubr  DWORD PTR [edx+0x56]
  41d3ad:	push   0x11
  41d3af:	push   cs
  41d3b0:	(bad)  
  41d3b1:	jne    0x41d366
  41d3b3:	leave  
  41d3b4:	add    dl,0x31
  41d3b7:	mov    al,ds:0x43125f16
  41d3bc:	out    0x6e,eax
  41d3be:	push   esi
  41d3bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3c0:	pushf  
  41d3c1:	jne    0x41d3ce
  41d3c3:	stos   DWORD PTR es:[edi],eax
  41d3c4:	out    0x51,al
  41d3c6:	or     BYTE PTR [edx-0x59e86ea7],al
  41d3cc:	pushf  
  41d3cd:	push   ebp
  41d3ce:	mov    dh,0x94
  41d3d0:	mov    esp,0x10762274
  41d3d5:	pop    esp
  41d3d6:	push   cs
  41d3d7:	push   ebx
  41d3d8:	dec    ebp
  41d3d9:	sub    eax,0x7dd4ab53
  41d3de:	shr    BYTE PTR [esi+ebx*1+0x31aa285a],cl
  41d3e5:	push   cs
  41d3e6:	cmp    dh,bh
  41d3e8:	js     0x41d3a3
  41d3ea:	lahf   
  41d3eb:	mov    WORD PTR [ebp-0x1eaa6cb9],?
  41d3f1:	dec    edx
  41d3f2:	pop    es
  41d3f3:	(bad)  
  41d3f4:	mov    dl,0x34
  41d3f6:	jns    0x41d464
  41d3f8:	mov    edx,0x580e6da8
  41d3fd:	xlat   BYTE PTR ds:[ebx]
  41d3fe:	and    al,0xce
  41d400:	push   cs
  41d401:	(bad)  
  41d402:	stc    
  41d403:	test   eax,0x1d4904f1
  41d408:	ret    
  41d409:	stos   DWORD PTR es:[edi],eax
  41d40a:	cmc    
  41d40b:	clc    
  41d40c:	xchg   esi,eax
  41d40d:	or     bh,ch
  41d40f:	add    eax,0x8c375c6e
  41d414:	mov    edx,0x84853d61
  41d419:	push   es
  41d41a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d41b:	pop    eax
  41d41c:	int3   
  41d41d:	fs cmp eax,0xd791f7c1
  41d423:	cmp    BYTE PTR [ecx],al
  41d425:	lods   eax,DWORD PTR ds:[esi]
  41d426:	mov    edx,0xe34c61e8
  41d42b:	mov    edx,0xebf1ac84
  41d430:	pop    es
  41d431:	mov    ebx,0x90b8921d
  41d436:	jnp    0x41d3ca
  41d438:	js     0x41d47e
  41d43a:	(bad)  
  41d43b:	sbb    ah,bh
  41d43d:	pusha  
  41d43e:	dec    edi
  41d43f:	add    BYTE PTR [ecx-0x4c142bc2],al
  41d445:	je     0x41d3d0
  41d447:	push   ss
  41d448:	and    eax,DWORD PTR [ecx+0x79a08a9d]
  41d44e:	sub    edx,ebp
  41d450:	enter  0xf192,0x46
  41d454:	inc    esp
  41d455:	sbb    BYTE PTR [esi-0x4a3c07de],dl
  41d45b:	sub    esi,eax
  41d45d:	xbegin 0x71ec1e74
  41d463:	mov    bl,0x4c
  41d465:	stos   BYTE PTR es:[edi],al
  41d466:	pop    es
  41d467:	push   ebp
  41d468:	imul   ebp,esi,0xf55306a0
  41d46e:	xlat   BYTE PTR ds:[ebx]
  41d46f:	mov    ds:0x43cf803b,eax
  41d474:	jae    0x41d3ff
  41d476:	mov    ah,BYTE PTR ss:[ebx-0xc]
  41d47a:	inc    ebx
  41d47b:	and    eax,DWORD PTR [ebx+0x7e]
  41d47e:	(bad)  
  41d47f:	cmc    
  41d480:	pusha  
  41d481:	mov    bl,0x94
  41d483:	ret    
  41d484:	pop    ebx
  41d485:	push   edx
  41d486:	loop   0x41d41e
  41d488:	cmp    DWORD PTR [edi-0x60],0x48150bfc
  41d48f:	aad    0xd8
  41d491:	and    eax,0xa7d892e0
  41d496:	leave  
  41d497:	xor    BYTE PTR [eax],al
  41d499:	fild   WORD PTR [ecx]
  41d49b:	push   ecx
  41d49c:	xchg   esp,eax
  41d49d:	iret   
  41d49e:	(bad)  [ecx+0x2e0825cb]
  41d4a4:	xlat   BYTE PTR ds:[ebx]
  41d4a5:	jle    0x41d4bf
  41d4a7:	push   esi
  41d4a8:	dec    edx
  41d4a9:	pop    ecx
  41d4aa:	mov    ah,0x6d
  41d4ac:	test   al,0x81
  41d4ae:	sbb    DWORD PTR [edi-0x652b436d],esi
  41d4b4:	adc    al,0x1c
  41d4b6:	daa    
  41d4b7:	inc    ebp
  41d4b8:	xor    DWORD PTR [esi+0x24],ecx
  41d4bb:	clc    
  41d4bc:	lea    ebx,[edx]
  41d4be:	enter  0xbc17,0xfd
  41d4c2:	xlat   BYTE PTR ds:[ebx]
  41d4c3:	fisttp WORD PTR [eax]
  41d4c5:	xchg   ebp,eax
  41d4c6:	inc    DWORD PTR [eax]
  41d4c8:	(bad)  
  41d4c9:	mov    esp,0xccb11c8
  41d4ce:	ds mov ch,0x94
  41d4d1:	dec    edi
  41d4d2:	test   BYTE PTR ds:0x169566b9,al
  41d4d8:	ins    BYTE PTR es:[edi],dx
  41d4d9:	adc    DWORD PTR [eax-0x23],0x89a35da1
  41d4e0:	add    BYTE PTR [eax-0x5e],dh
  41d4e3:	fidiv  WORD PTR [edx+0x6347ab11]
  41d4e9:	fidivr WORD PTR [edx-0x33]
  41d4ec:	retf   
  41d4ed:	inc    edi
  41d4ee:	mov    ebx,0xbaca3691
  41d4f3:	call   0x635b207f
  41d4f8:	int3   
  41d4f9:	ret    0xf429
  41d4fc:	das    
  41d4fd:	push   ecx
  41d4fe:	inc    eax
  41d4ff:	fmul   st,st(1)
  41d501:	add    ah,BYTE PTR [edx-0x3f55b942]
  41d507:	dec    eax
  41d508:	or     BYTE PTR [edi+0xa3398ce],al
  41d50e:	dec    ecx
  41d50f:	ficom  WORD PTR [esi+0x3]
  41d512:	sub    DWORD PTR [edx-0x2424b4a3],ebx
  41d518:	jns    0x41d4bf
  41d51a:	dec    eax
  41d51b:	sbb    DWORD PTR [ecx+ebp*1],esp
  41d51e:	adc    dl,BYTE PTR [edi]
  41d520:	lds    ebx,FWORD PTR fs:[esi-0x79]
  41d524:	aaa    
  41d525:	push   cs
  41d526:	ret    
  41d527:	mov    esi,0xe6c33841
  41d52c:	aam    0x97
  41d52e:	xor    al,0xe4
  41d530:	ret    0xf53a
  41d533:	push   0xffffff98
  41d535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d536:	sbb    al,0x57
  41d538:	cs fs dec edi
  41d53b:	jle    0x41d4c5
  41d53d:	mov    ebp,0x36efc358
  41d542:	add    BYTE PTR [edi+0x8641973],bl
  41d548:	mov    cl,0x6d
  41d54a:	aaa    
  41d54b:	cmp    cl,BYTE PTR [bx]
  41d54e:	shr    DWORD PTR [ebx],0x75
  41d551:	bsr    ebp,DWORD PTR [edx-0x80]
  41d555:	dec    ebp
  41d556:	sub    eax,0x7452c2ae
  41d55b:	cmp    eax,0x1107fbf0
  41d560:	btr    DWORD PTR [ecx+0x49],eax
  41d564:	jle    0x41d5a8
  41d566:	pushf  
  41d567:	cld    
  41d568:	stc    
  41d569:	dec    edi
  41d56a:	test   eax,0xa53d5f49
  41d56f:	mov    edx,0x48cd7161
  41d574:	rol    DWORD PTR [eax-0x55],1
  41d577:	fbld   TBYTE PTR [ecx+ebx*8]
  41d57a:	jle    0x41d557
  41d57c:	aaa    
  41d57d:	out    dx,al
  41d57e:	mov    cl,0x5e
  41d580:	and    al,0x24
  41d582:	dec    edx
  41d583:	mul    BYTE PTR [edx]
  41d585:	add    eax,0x5c92dac3
  41d58a:	stos   DWORD PTR es:[edi],eax
  41d58b:	sub    ebx,esi
  41d58d:	shl    BYTE PTR [ecx+0x422908dd],0x24
  41d594:	xor    al,0xb9
  41d596:	and    ebx,DWORD PTR [ebp-0x48]
  41d599:	or     esi,ebx
  41d59b:	jecxz  0x41d552
  41d59d:	mov    cl,BYTE PTR ds:0x574dd3fe
  41d5a3:	int    0xf6
  41d5a5:	call   0x9088:0x7e7e4a80
  41d5ac:	mov    WORD PTR [ebx+ebx*4],cs
  41d5af:	pop    esi
  41d5b0:	pop    esi
  41d5b1:	fcomp  QWORD PTR [eax-0x40]
  41d5b4:	dec    ecx
  41d5b5:	mov    eax,ds:0xf6a290f9
  41d5ba:	aam    0x61
  41d5bc:	lock or al,0xe2
  41d5bf:	dec    ebp
  41d5c0:	das    
  41d5c1:	and    bh,BYTE PTR [ecx+ecx*8]
  41d5c4:	out    dx,al
  41d5c5:	dec    esi
  41d5c6:	and    al,BYTE PTR ds:0x451086d5
  41d5cc:	cmp    al,0xd2
  41d5ce:	sub    al,BYTE PTR [ebx]
  41d5d0:	pop    edi
  41d5d1:	mov    BYTE PTR [ebp+edi*2+0x4a35be5d],dl
  41d5d8:	jo     0x41d5ba
  41d5da:	cmp    BYTE PTR [ecx-0x6595c939],bl
  41d5e0:	lahf   
  41d5e1:	mov    al,0x61
  41d5e3:	sahf   
  41d5e4:	sub    BYTE PTR [edi],ah
  41d5e6:	lods   al,BYTE PTR ds:[esi]
  41d5e7:	mov    eax,ds:0x9503b826
  41d5ec:	ret    0x5540
  41d5ef:	out    dx,eax
  41d5f0:	pop    ebp
  41d5f1:	sbb    BYTE PTR [edx+0x59845596],cl
  41d5f7:	xchg   edx,eax
  41d5f8:	(bad)  
  41d5f9:	into   
  41d5fa:	jbe    0x41d655
  41d5fc:	nop
  41d5fd:	ret    
  41d5fe:	dec    eax
  41d5ff:	es jge 0x41d5d0
  41d602:	jl     0x41d5f5
  41d604:	jmp    0xa27b:0x338c9e4e
  41d60b:	hlt    
  41d60c:	dec    esi
  41d60d:	outs   dx,BYTE PTR ds:[esi]
  41d60e:	push   esp
  41d60f:	cmp    ch,BYTE PTR [edi+0x44]
  41d612:	pop    edi
  41d613:	outs   dx,DWORD PTR ds:[esi]
  41d614:	pop    ebp
  41d615:	aas    
  41d616:	(bad)  
  41d618:	(bad)  
  41d619:	aas    
  41d61a:	dec    esi
  41d61b:	xor    esp,DWORD PTR [eax*1-0x60db82b4]
  41d622:	push   0xc4f2a577
  41d627:	rcl    esi,cl
  41d629:	and    eax,0x90eb8da7
  41d62e:	mov    al,ds:0xd60b06c4
  41d633:	sbb    eax,DWORD PTR [ebx-0x5e92dc26]
  41d639:	enter  0x6485,0x3
  41d63d:	adc    al,0x80
  41d63f:	ret    
  41d640:	push   esi
  41d641:	ins    DWORD PTR es:[edi],dx
  41d642:	scas   al,BYTE PTR es:[edi]
  41d643:	sbb    eax,0xcee3a9d0
  41d648:	or     al,0x39
  41d64a:	mov    BYTE PTR [ecx-0x7f28bbcf],0x29
  41d651:	xchg   edx,eax
  41d652:	ret    
  41d653:	mov    ds:0xccbafb1f,eax
  41d658:	inc    ebx
  41d659:	sub    al,0x60
  41d65b:	pop    es
  41d65c:	shl    ebp,0x23
  41d65f:	xor    eax,DWORD PTR [ebp-0x46e0f3eb]
  41d665:	(bad)  
  41d666:	jne    0x41d5ef
  41d668:	jb     0x41d678
  41d66a:	je     0x41d5f9
  41d66c:	sub    eax,0xfbc80680
  41d671:	outs   dx,BYTE PTR ds:[esi]
  41d672:	lods   al,BYTE PTR ds:[esi]
  41d673:	xor    cl,cl
  41d675:	push   ebx
  41d676:	mov    cl,0x16
  41d678:	mov    ecx,0xa2ce54df
  41d67d:	loop   0x41d63f
  41d67f:	add    BYTE PTR [ecx+ebx*4+0x73cdd0f7],ch
  41d686:	vandps ymm0,ymm2,ymm6
  41d68a:	cmp    bh,BYTE PTR [edx+ebp*1+0x515bdf73]
  41d691:	cwde   
  41d692:	(bad)  
  41d693:	mov    esp,0x2b2c3be4
  41d698:	dec    ebx
  41d699:	push   esi
  41d69a:	fimul  DWORD PTR [ecx]
  41d69c:	mov    WORD PTR [ecx-0x7b],es
  41d69f:	imul   eax,DWORD PTR [ebx+0x62],0x16
  41d6a3:	cwde   
  41d6a4:	push   0xd9d36b6c
  41d6a9:	arpl   WORD PTR [edx],bp
  41d6ab:	pop    ebx
  41d6ac:	ins    BYTE PTR es:[edi],dx
  41d6ad:	sar    DWORD PTR ss:[esi-0x18],0x8
  41d6b2:	mov    bl,0x64
  41d6b4:	scas   eax,DWORD PTR es:[edi]
  41d6b5:	jmp    FWORD PTR [esi-0x14e718ff]
  41d6bb:	xchg   ebx,eax
  41d6bc:	mov    eax,ds:0x164a2e77
  41d6c1:	cwde   
  41d6c2:	pop    edx
  41d6c3:	jo     0x41d72b
  41d6c5:	xor    BYTE PTR ds:0xde31efb6,dl
  41d6cb:	out    0xdc,al
  41d6cd:	fnstcw WORD PTR [eax-0x64]
  41d6d0:	sahf   
  41d6d1:	xchg   DWORD PTR [esi],ebp
  41d6d3:	jge    0x41d68f
  41d6d5:	adc    DWORD PTR [ebp-0x3bdbc39d],esp
  41d6db:	fs jp  0x41d6d4
  41d6de:	mov    ss,WORD PTR [esi-0x7d7851e6]
  41d6e4:	mov    ecx,0x96cd74a4
  41d6e9:	cmp    DWORD PTR ds:0xa1e15aa5,ebx
  41d6ef:	call   0x8f1b:0x4d37f7b3
  41d6f6:	xchg   esp,eax
  41d6f7:	outs   dx,BYTE PTR ds:[esi]
  41d6f8:	shr    bh,0x7b
  41d6fb:	into   
  41d6fc:	adc    edx,DWORD PTR [edx-0x15]
  41d6ff:	sbb    esi,DWORD PTR [ebx]
  41d701:	push   edx
  41d702:	pusha  
  41d703:	aam    0x84
  41d705:	gs mov ebx,0xc7cc4e5c
  41d70b:	ss push edx
  41d70d:	cmp    DWORD PTR [ecx-0x41d6b26],ecx
  41d713:	pop    eax
  41d714:	ret    0x59c9
  41d717:	dec    ebx
  41d718:	arpl   WORD PTR [eax-0x678b197a],si
  41d71e:	mov    edx,0x16c3d07d
  41d723:	add    edi,esi
  41d725:	stos   BYTE PTR es:[edi],al
  41d726:	inc    esi
  41d727:	fstp   TBYTE PTR [edx]
  41d729:	xor    al,0xee
  41d72b:	lock loop 0x41d721
  41d72e:	xor    al,BYTE PTR [ebp+esi*8-0x9]
  41d732:	dec    eax
  41d733:	adc    ecx,DWORD PTR [edx+0x3]
  41d736:	repz ret 
  41d738:	jmp    0xe46f72ac
  41d73d:	push   esp
  41d73e:	retf   
  41d73f:	hlt    
  41d740:	mov    ah,0x47
  41d742:	push   cs
  41d743:	shl    ebx,0xb
  41d746:	enter  0xf495,0xc
  41d74a:	sub    edi,ebp
  41d74c:	aad    0x41
  41d74e:	push   ds
  41d74f:	les    ebp,FWORD PTR [eax-0x5b]
  41d752:	mov    ebx,0xc915fc9
  41d757:	mov    ds:0x4555df40,eax
  41d75c:	repnz lods eax,DWORD PTR ds:[esi]
  41d75e:	stos   BYTE PTR es:[edi],al
  41d75f:	push   ebx
  41d760:	loop   0x41d737
  41d762:	mov    cs,WORD PTR [edi+0x58]
  41d765:	cmc    
  41d766:	data16 das 
  41d768:	mov    ds:0x1a286e14,eax
  41d76d:	dec    ebp
  41d76e:	inc    ebx
  41d76f:	pusha  
  41d770:	jb     0x41d7eb
  41d772:	mov    WORD PTR [eax],gs
  41d774:	pop    edi
  41d775:	jns    0x41d7a4
  41d777:	retf   
  41d778:	test   eax,0x4bb1c59
  41d77d:	mov    al,ds:0x94d674b7
  41d782:	mov    esi,0xb01c82ed
  41d787:	jle    0x41d775
  41d789:	ficom  DWORD PTR [esp+eax*4+0x12]
  41d78d:	dec    esi
  41d78e:	mov    ds:0x2be058c5,eax
  41d793:	sti    
  41d794:	and    DWORD PTR [edi+eax*2-0x7e23081b],edi
  41d79b:	mov    WORD PTR [ecx+0x7a9f9784],?
  41d7a1:	lds    ecx,FWORD PTR [eax]
  41d7a3:	and    DWORD PTR [ebx-0x4],ebp
  41d7a6:	lahf   
  41d7a7:	call   0x221:0x7fc7c7f9
  41d7ae:	ja     0x41d7cb
  41d7b0:	es adc eax,0xe96d1084
  41d7b6:	xchg   ebx,eax
  41d7b7:	les    ebp,FWORD PTR [ebp-0x62]
  41d7ba:	sbb    edi,DWORD PTR [edi]
  41d7bc:	pop    es
  41d7bd:	xchg   ecx,eax
  41d7be:	test   DWORD PTR [edx+0x26b156f5],eax
  41d7c4:	sbb    eax,0x3c6d4e7b
  41d7c9:	adc    BYTE PTR [ebx-0x5f7b68dc],bl
  41d7cf:	push   ss
  41d7d0:	scas   al,BYTE PTR es:[edi]
  41d7d1:	mov    ds:0xb0884442,eax
  41d7d6:	aas    
  41d7d7:	xchg   esi,eax
  41d7d8:	int    0xc2
  41d7da:	or     eax,0x31c84687
  41d7df:	sub    al,0xb1
  41d7e1:	xchg   bl,dl
  41d7e3:	pop    esi
  41d7e4:	imul   ecx,DWORD PTR [edx],0x47
  41d7e7:	or     esp,esp
  41d7e9:	jle    0x41d866
  41d7eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7ec:	fwait
  41d7ed:	inc    esi
  41d7ee:	(bad)  
  41d7ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7f0:	mov    ebx,DWORD PTR [ebp+0xa]
  41d7f3:	mov    WORD PTR [ebx+0x13935dd9],ds
  41d7f9:	leave  
  41d7fa:	mov    bl,0xa1
  41d7fc:	push   0x15b7412d
  41d801:	xor    eax,0x5704dade
  41d806:	inc    edx
  41d807:	fs push esp
  41d809:	pushf  
  41d80a:	mov    esp,0x9a728590
  41d80f:	call   0x5b1d:0xb941d2ab
  41d816:	cmp    BYTE PTR [ebx],al
  41d818:	push   ebp
  41d819:	mov    edx,0x4107b2e1
  41d81e:	ret    0xf972
  41d821:	loopne 0x41d801
  41d823:	in     al,dx
  41d824:	ret    0xd6ee
  41d827:	(bad)  
  41d829:	pop    edx
  41d82a:	xchg   edx,eax
  41d82b:	xchg   cl,dl
  41d82d:	hlt    
  41d82e:	retf   
  41d82f:	repz push 0xfffffff7
  41d832:	dec    ebx
  41d833:	cs sub edx,eax
  41d836:	fs iret 
  41d838:	fstp   TBYTE PTR [edx-0x11]
  41d83b:	inc    eax
  41d83c:	cmc    
  41d83d:	fidiv  WORD PTR [edi+0x33]
  41d840:	sbb    ecx,DWORD PTR [edi]
  41d842:	mov    dl,ah
  41d844:	aam    0x80
  41d846:	scas   al,BYTE PTR es:[edi]
  41d847:	pop    ecx
  41d848:	or     DWORD PTR [eax+0x64],ebx
  41d84b:	add    al,0x81
  41d84d:	scas   al,BYTE PTR es:[edi]
  41d84e:	or     ah,al
  41d850:	and    BYTE PTR [ebp+0x2f16b5c0],dl
  41d856:	dec    ecx
  41d857:	neg    esp
  41d859:	inc    ebx
  41d85a:	dec    ebx
  41d85b:	icebp  
  41d85c:	imul   ebx,DWORD PTR [edx-0xda67175],0xdb48a0a8
  41d866:	pop    ebx
  41d867:	cmp    eax,0x3b2da6b4
  41d86c:	shl    DWORD PTR [edx-0x606ad360],1
  41d872:	sbb    bl,al
  41d874:	aas    
  41d875:	pop    es
  41d876:	and    bl,BYTE PTR [eax-0x4e]
  41d879:	pop    ss
  41d87a:	sbb    eax,0x6164c6d6
  41d87f:	nop
  41d880:	push   es
  41d881:	repz (bad) ds:[edx]
  41d885:	adc    al,0xe5
  41d887:	cwde   
  41d888:	inc    ecx
  41d889:	ss data16 jo 0x41d8c1
  41d88d:	out    dx,al
  41d88e:	xchg   ebp,eax
  41d88f:	les    ecx,FWORD PTR [edi-0x359b6988]
  41d895:	sub    BYTE PTR [eax],cl
  41d897:	inc    eax
  41d898:	pop    ebp
  41d899:	xor    cl,BYTE PTR [edi+0x2e]
  41d89c:	pause  
  41d89e:	ins    DWORD PTR es:[edi],dx
  41d89f:	push   ebp
  41d8a0:	popa   
  41d8a1:	retf   
  41d8a2:	ror    BYTE PTR [ebp+0x66],1
  41d8a5:	aam    0xbc
  41d8a7:	je     0x41d8ef
  41d8a9:	or     edi,ecx
  41d8ab:	push   eax
  41d8ac:	aaa    
  41d8ad:	aam    0x97
  41d8af:	xchg   ecx,eax
  41d8b0:	(bad)  [ecx+0x4f]
  41d8b3:	imul   ecx,DWORD PTR [esi+0x3a6a698d],0xfffffffd
  41d8ba:	add    eax,0xb6c75756
  41d8bf:	add    eax,DWORD PTR [ecx]
  41d8c1:	in     eax,0x48
  41d8c3:	stos   DWORD PTR es:[edi],eax
  41d8c4:	push   eax
  41d8c5:	adc    BYTE PTR [edx-0x27],ch
  41d8c8:	pop    ss
  41d8c9:	iret   
  41d8ca:	push   ebx
  41d8cb:	cmp    al,0x64
  41d8cd:	pushf  
  41d8ce:	ins    BYTE PTR es:[edi],dx
  41d8cf:	push   esp
  41d8d0:	hlt    
  41d8d1:	pop    eax
  41d8d2:	scas   al,BYTE PTR es:[edi]
  41d8d3:	stc    
  41d8d4:	mov    ch,0xbd
  41d8d6:	outs   dx,DWORD PTR ds:[esi]
  41d8d7:	pushf  
  41d8d8:	bound  eax,QWORD PTR [esi]
  41d8da:	pop    ebp
  41d8db:	mov    bl,0xf6
  41d8dd:	cmp    eax,0x64be5beb
  41d8e2:	pusha  
  41d8e3:	mov    ebp,DWORD PTR [eax+0x89b0dae]
  41d8e9:	or     al,0xb8
  41d8eb:	fs in  eax,0xe9
  41d8ee:	sub    cl,BYTE PTR [esi+ebx*1+0x39fffe2e]
  41d8f5:	das    
  41d8f6:	mov    BYTE PTR [eax],bh
  41d8f8:	test   DWORD PTR [ebx],edx
  41d8fa:	push   esi
  41d8fb:	call   0xd4e1beec
  41d900:	popa   
  41d901:	inc    ecx
  41d902:	fist   DWORD PTR [ecx+0x28]
  41d905:	ins    DWORD PTR es:[edi],dx
  41d906:	push   cs
  41d907:	push   esi
  41d908:	mov    ah,0x5a
  41d90a:	test   eax,0xa0fb3725
  41d910:	clc    
  41d911:	addr16 adc eax,0x1af2d1e7
  41d917:	xlat   BYTE PTR ds:[ebx]
  41d918:	jno    0x41d8a5
  41d91a:	sub    BYTE PTR [eax],0xa4
  41d91d:	sub    dl,bh
  41d91f:	aas    
  41d920:	inc    esp
  41d921:	out    dx,eax
  41d922:	shl    DWORD PTR [ebx+edx*8-0x5a1a204a],cl
  41d929:	inc    eax
  41d92a:	scas   eax,DWORD PTR es:[edi]
  41d92b:	jge    0x41d8d0
  41d92d:	push   edi
  41d92e:	push   ebx
  41d92f:	jmp    0x41d951
  41d931:	int3   
  41d932:	arpl   WORD PTR [ebx],si
  41d934:	jmp    0xec4e:0xcbeb3dac
  41d93b:	outs   dx,BYTE PTR ds:[esi]
  41d93c:	sub    ebp,DWORD PTR [esi+0x18]
  41d93f:	mov    esi,DWORD PTR [eax+0x3e]
  41d942:	jne    0x41d947
  41d944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d945:	imul   edx,DWORD PTR [ecx],0x54
  41d948:	push   cs
  41d949:	and    eax,0x3ec1b2ce
  41d94e:	xor    esi,DWORD PTR [edx+ebx*8]
  41d951:	push   esp
  41d952:	or     cl,BYTE PTR [ebx-0x4d7372db]
  41d958:	retf   
  41d959:	mov    ebx,DWORD PTR [eax-0x2da23532]
  41d95f:	xchg   ebx,eax
  41d960:	add    BYTE PTR [eax+0x72717dea],0xc2
  41d967:	sub    edx,DWORD PTR [esi+0x1c7ed784]
  41d96d:	adc    cl,BYTE PTR [ebx+0x67]
  41d970:	and    ah,BYTE PTR [ebx]
  41d972:	shl    DWORD PTR [ebp-0x2ec64062],0x4f
  41d979:	aas    
  41d97a:	add    al,0x6c
  41d97c:	push   edi
  41d97d:	imul   ebp,DWORD PTR [esi-0x24d3ce2f],0x7c
  41d984:	mov    al,0x9a
  41d986:	inc    esi
  41d987:	ds test dh,ch
  41d98a:	daa    
  41d98b:	js     0x41d96b
  41d98d:	test   DWORD PTR [ebx],ebp
  41d98f:	inc    eax
  41d990:	mov    edi,0xc0ae68a8
  41d995:	aam    0x4b
  41d997:	inc    ebp
  41d998:	push   ecx
  41d999:	bts    DWORD PTR [edi-0x6e],ebp
  41d99d:	mov    ah,0x60
  41d99f:	jp     0x41d991
  41d9a1:	retf   0x6cf0
  41d9a4:	test   DWORD PTR [eax+0x66],eax
  41d9a7:	push   es
  41d9a8:	mov    ds:0xf18b175,eax
  41d9ad:	mov    ds:0x2bb77c12,eax
  41d9b2:	outs   dx,DWORD PTR ds:[esi]
  41d9b3:	(bad)  
  41d9b4:	hlt    
  41d9b5:	mov    edx,DWORD PTR [ebp-0x5b]
  41d9b8:	(bad)  
  41d9b9:	call   0x73a4bdbf
  41d9be:	mov    esp,0xc0cfec52
  41d9c3:	and    DWORD PTR [eax],esp
  41d9c5:	(bad)  
  41d9c6:	enter  0x63aa,0x3c
  41d9ca:	popf   
  41d9cb:	or     al,0x2c
  41d9cd:	xor    eax,DWORD PTR [edi]
  41d9cf:	fimul  DWORD PTR [ecx+0x20]
  41d9d2:	sbb    cl,BYTE PTR [edx+ecx*2]
  41d9d5:	arpl   WORD PTR [edx-0x4a],cx
  41d9d8:	hlt    
  41d9d9:	mov    esp,0x81a1c206
  41d9de:	mov    ah,0xa4
  41d9e0:	std    
  41d9e1:	sbb    BYTE PTR [ebp-0x2299eac1],ch
  41d9e7:	dec    edi
  41d9e8:	test   eax,0x1b390eb0
  41d9ed:	inc    esi
  41d9ee:	mov    esi,0x723a72a7
  41d9f3:	inc    ecx
  41d9f4:	pop    ebx
  41d9f5:	into   
  41d9f6:	or     DWORD PTR ds:0x43d9fe,eax
  41d9fc:	mov    ch,0x51
  41d9fe:	add    ebp,DWORD PTR [edi-0x26c1648b]
  41da04:	cmp    edx,edi
  41da06:	scas   al,BYTE PTR es:[edi]
  41da07:	mov    ebx,0xa9d934d5
  41da0c:	xchg   BYTE PTR [ecx],ah
  41da0e:	ins    DWORD PTR es:[edi],dx
  41da0f:	inc    edx
  41da10:	and    ecx,DWORD PTR [ebx+0x33]
  41da13:	es (bad) 
  41da15:	mov    dh,BYTE PTR [esi+0x694bbe17]
  41da1b:	aam    0x14
  41da1d:	(bad)  
  41da1e:	sub    al,0xdf
  41da20:	es call 0x50aba408
  41da26:	test   eax,0x4bfaa20d
  41da2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da2c:	scas   eax,DWORD PTR es:[edi]
  41da2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da2e:	(bad)  
  41da2f:	in     eax,0xa2
  41da31:	mov    esp,0x5bd1a949
  41da36:	push   edi
  41da37:	imul   edi,esi,0xffffffae
  41da3a:	mov    edi,0x42e673a
  41da3f:	nop
  41da40:	jmp    0xdaec:0x59264e30
  41da47:	adc    al,0xbd
  41da49:	push   cs
  41da4a:	mov    al,0xc8
  41da4c:	and    bl,BYTE PTR [esi-0x421479d2]
  41da52:	xchg   ebx,eax
  41da53:	push   ebx
  41da54:	pop    ebx
  41da55:	scas   eax,DWORD PTR es:[edi]
  41da56:	push   ss
  41da57:	shl    DWORD PTR [edx-0x6daa0f62],0xf3
  41da5e:	adc    eax,0x67807989
  41da63:	push   es
  41da64:	xor    al,0x3d
  41da66:	arpl   WORD PTR [ebp+eax*1-0x15],dx
  41da6a:	sbb    al,0x3b
  41da6c:	xchg   esi,eax
  41da6d:	scas   eax,DWORD PTR es:[edi]
  41da6e:	sbb    DWORD PTR [edx],0x35
  41da71:	push   ecx
  41da72:	fnstsw WORD PTR [ecx+0x0]
  41da75:	jmp    0x41daae
  41da77:	mov    edi,0x99d35b2a
  41da7c:	xor    dh,al
  41da7e:	or     edx,edx
  41da80:	inc    edi
  41da81:	mov    ebp,0x288d9980
  41da86:	push   edi
  41da87:	popf   
  41da88:	push   0x37ca545
  41da8d:	adc    al,0x58
  41da8f:	xchg   edx,eax
  41da90:	pushf  
  41da91:	lahf   
  41da92:	adc    al,0x15
  41da94:	xchg   edi,eax
  41da95:	dec    edi
  41da96:	dec    esp
  41da97:	lahf   
  41da98:	sbb    eax,0x5aaccf3d
  41da9d:	hlt    
  41da9e:	(bad)  
  41da9f:	mov    ch,0xbf
  41daa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daa2:	ins    DWORD PTR es:[edi],dx
  41daa3:	dec    edx
  41daa4:	stos   DWORD PTR es:[edi],eax
  41daa5:	mov    ds:0x6a71a0a1,eax
  41daaa:	fcmovnbe st,st(7)
  41daac:	shl    BYTE PTR [edx-0x30fc790e],1
  41dab2:	aaa    
  41dab3:	test   al,0x94
  41dab5:	daa    
  41dab6:	or     BYTE PTR [esi],0xc3
  41dab9:	push   0xce555f98
  41dabe:	loop   0x41db13
  41dac0:	inc    ecx
  41dac1:	(bad)  
  41dac2:	mov    fs,WORD PTR [ebx]
  41dac4:	jnp    0x41db05
  41dac6:	dec    edx
  41dac7:	in     eax,dx
  41dac8:	loop   0x41daa6
  41daca:	out    0x45,eax
  41dacc:	fdiv   QWORD PTR [edi-0x51b99e2c]
  41dad2:	fsubr  st(1),st
  41dad4:	test   ecx,ebp
  41dad6:	sbb    BYTE PTR [edx],bh
  41dad8:	push   cs
  41dad9:	retf   
  41dada:	or     DWORD PTR [eax],esi
  41dadc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dadd:	push   cs
  41dade:	pop    ecx
  41dadf:	sahf   
  41dae0:	stos   BYTE PTR es:[edi],al
  41dae1:	leave  
  41dae2:	iret   
  41dae3:	not    BYTE PTR [edi+ebx*4-0x478bb839]
  41daea:	inc    ebx
  41daeb:	jno    0x41dae6
  41daed:	pop    esi
  41daee:	push   eax
  41daef:	jae    0x41dae0
  41daf1:	inc    esp
  41daf2:	inc    edx
  41daf3:	lods   al,BYTE PTR ds:[esi]
  41daf4:	xlat   BYTE PTR ds:[ebx]
  41daf5:	xlat   BYTE PTR ds:[ebx]
  41daf6:	sub    ebx,ebx
  41daf8:	fisub  WORD PTR [edx+0x53]
  41dafb:	adc    esp,DWORD PTR [ebp-0x6d214130]
  41db01:	sbb    al,0xe8
  41db03:	loope  0x41db5b
  41db05:	mov    edi,DWORD PTR [esp+ebp*4+0x7ade7a4a]
  41db0c:	mov    esi,0xee598dcd
  41db11:	push   0xffffff9f
  41db13:	sar    bh,cl
  41db15:	mov    ah,0xcb
  41db17:	loope  0x41db75
  41db19:	in     al,0x85
  41db1b:	ret    0xb870
  41db1e:	in     eax,dx
  41db1f:	cmp    ebp,esi
  41db21:	xchg   ebx,eax
  41db22:	push   cs
  41db23:	enter  0x38c,0xc3
  41db27:	retf   0xd829
  41db2a:	xor    ch,BYTE PTR [ebp-0x35]
  41db2d:	inc    eax
  41db2e:	jne    0x41dafe
  41db30:	cld    
  41db31:	(bad)  
  41db33:	xor    eax,0xb07e02f0
  41db38:	jnp    0x41dba5
  41db3a:	mov    eax,0x55ab8ad5
  41db3f:	mov    esi,DWORD PTR [edi-0x24c45753]
  41db45:	mov    ds:0x4a8ac857,eax
  41db4a:	push   ds
  41db4b:	outs   dx,DWORD PTR ds:[esi]
  41db4c:	xor    al,0x85
  41db4e:	jle    0x41daf6
  41db50:	push   edi
  41db51:	(bad)  [ecx+0xf]
  41db54:	adc    ah,BYTE PTR [edi+0x6c]
  41db57:	or     al,0xa6
  41db59:	es (bad) 
  41db5b:	jno    0x41db91
  41db5d:	scas   eax,DWORD PTR es:[edi]
  41db5e:	push   es
  41db5f:	mov    dl,0x78
  41db61:	test   al,0x68
  41db63:	dec    edi
  41db64:	add    BYTE PTR [ebp-0x5127fe9f],0xc5
  41db6b:	aam    0xec
  41db6d:	ror    BYTE PTR [ecx],cl
  41db6f:	mov    DWORD PTR ds:0xf3e7a7c5,esi
  41db75:	mov    eax,0x76a31ea
  41db7a:	outs   dx,BYTE PTR ds:[esi]
  41db7b:	cmp    BYTE PTR [ecx+0x17],al
  41db7e:	xor    dl,BYTE PTR [ecx+0x55]
  41db81:	and    al,0x4f
  41db83:	sub    DWORD PTR [edi],eax
  41db85:	(bad)  
  41db86:	sub    dl,BYTE PTR [ecx-0x1d307867]
  41db8c:	adc    BYTE PTR [esi-0x50],dh
  41db8f:	or     eax,0xd9e23d52
  41db94:	inc    esi
  41db95:	cmp    ch,BYTE PTR [edx-0x5ea49091]
  41db9b:	mov    dl,0x96
  41db9d:	ror    BYTE PTR [edx],1
  41db9f:	adc    al,0x9a
  41dba1:	sar    al,1
  41dba3:	sti    
  41dba4:	jne    0x41db4f
  41dba6:	dec    ecx
  41dba7:	sub    eax,0x504f554b
  41dbac:	aam    0xe8
  41dbae:	xchg   edx,eax
  41dbaf:	mov    cs,WORD PTR [ebp-0x7ba608de]
  41dbb5:	adc    bh,BYTE PTR [ecx]
  41dbb7:	sbb    edx,ecx
  41dbb9:	mov    ecx,0xc959a1e8
  41dbbe:	fistp  DWORD PTR [edx]
  41dbc0:	pop    ebx
  41dbc1:	pmulhuw mm0,mm4
  41dbc4:	cmp    ecx,DWORD PTR [ebp-0x3e21a106]
  41dbca:	jns    0x41db50
  41dbcc:	inc    BYTE PTR [esi-0x65]
  41dbcf:	cmp    DWORD PTR [ecx+0x67],0xffffff97
  41dbd3:	addr16 sub cl,bh
  41dbd6:	and    DWORD PTR [ebx-0xb],ebx
  41dbd9:	dec    ebx
  41dbda:	xchg   bh,cl
  41dbdc:	sub    al,0x69
  41dbde:	pop    ebx
  41dbdf:	mov    ebx,0x91b6f782
  41dbe4:	pop    edx
  41dbe5:	xchg   edi,eax
  41dbe6:	lea    edx,[ecx]
  41dbe8:	outs   dx,DWORD PTR ds:[esi]
  41dbe9:	pop    ebx
  41dbea:	sub    edi,esp
  41dbec:	jg     0x41dc0a
  41dbee:	add    eax,0x53400b9f
  41dbf3:	jecxz  0x41dbd3
  41dbf5:	xor    eax,0x6917e09
  41dbfa:	or     al,0xa6
  41dbfc:	xchg   edi,eax
  41dbfd:	and    eax,0x50398666
  41dc02:	in     eax,0xb
  41dc04:	jo     0x41db94
  41dc06:	cmp    ah,BYTE PTR [eax+0x6b]
  41dc09:	mov    al,0x6a
  41dc0b:	xchg   edx,eax
  41dc0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc0d:	icebp  
  41dc0e:	push   esp
  41dc0f:	sub    BYTE PTR [ecx-0x4e],ch
  41dc12:	add    edx,ebx
  41dc14:	jp     0x41dc7a
  41dc16:	mov    dh,0x26
  41dc18:	inc    edx
  41dc19:	and    ecx,DWORD PTR [edx-0x3d5bf1e8]
  41dc1f:	pop    ecx
  41dc20:	ret    0x2d4e
  41dc23:	xchg   ebx,esp
  41dc25:	out    0x63,eax
  41dc27:	cmp    eax,0x895465c
  41dc2c:	sub    bl,BYTE PTR [eax]
  41dc2e:	and    ch,cl
  41dc30:	mov    esp,0x616544aa
  41dc35:	(bad)  
  41dc36:	cmp    DWORD PTR ds:0x76bb7eef,eax
  41dc3c:	dec    eax
  41dc3d:	sbb    DWORD PTR [ebx],esi
  41dc3f:	imul   DWORD PTR [edx]
  41dc41:	and    esp,ebx
  41dc43:	and    DWORD PTR ds:0xbcac1437,eax
  41dc49:	scas   eax,DWORD PTR es:[edi]
  41dc4a:	aad    0xa2
  41dc4c:	cs (bad) 
  41dc4e:	mov    esi,0x12853db7
  41dc53:	sbb    eax,0xd9833f60
  41dc58:	(bad)  
  41dc59:	xor    edx,DWORD PTR [ebp+esi*2-0x4ee54742]
  41dc60:	out    0x78,al
  41dc62:	pop    ds
  41dc63:	retf   0xf93c
  41dc66:	jmp    0xf93d8475
  41dc6b:	fwait
  41dc6c:	lahf   
  41dc6d:	jp     0x41dc42
  41dc6f:	inc    DWORD PTR [ebx]
  41dc71:	ret    0x56d2
  41dc74:	pop    esp
  41dc75:	nop
  41dc76:	mov    WORD PTR [edi],ds
  41dc78:	lods   eax,DWORD PTR ds:[esi]
  41dc79:	xlat   BYTE PTR ds:[ebx]
  41dc7a:	xor    ebp,DWORD PTR [edx+0x790e2b10]
  41dc80:	ror    BYTE PTR [ebx],cl
  41dc82:	imul   ecx,DWORD PTR [ecx+0x7a],0xbe7e33fb
  41dc89:	shl    ebp,1
  41dc8b:	jl     0x41dc1b
  41dc8d:	xchg   esp,eax
  41dc8e:	ins    BYTE PTR es:[edi],dx
  41dc8f:	xor    edi,ebp
  41dc91:	ror    BYTE PTR [ebp+0x7f],0x25
  41dc95:	or     al,0xcc
  41dc97:	xchg   ebp,eax
  41dc98:	icebp  
  41dc99:	out    dx,eax
  41dc9a:	pop    ss
  41dc9b:	push   ecx
  41dc9c:	(bad)  
  41dc9d:	jmp    0xbb85d2b4
  41dca2:	stc    
  41dca3:	ins    DWORD PTR es:[edi],dx
  41dca4:	sbb    edx,ebp
  41dca6:	fisub  WORD PTR [eax]
  41dca8:	out    0xf1,eax
  41dcaa:	mov    eax,ds:0x2abb6fd9
  41dcaf:	push   ds
  41dcb0:	bound  esp,QWORD PTR [esi-0x236c0416]
  41dcb6:	cld    
  41dcb7:	xor    eax,0xcd5e26a
  41dcbc:	pop    edi
  41dcbd:	test   DWORD PTR [eax+0x455a4a1f],ecx
  41dcc3:	or     eax,0x3d4e14fd
  41dcc8:	ins    BYTE PTR es:[edi],dx
  41dcc9:	mov    al,ds:0x9b5a736d
  41dcce:	sahf   
  41dccf:	daa    
  41dcd0:	adc    dh,BYTE PTR [edx-0x54]
  41dcd3:	jmp    0xfb030bd3
  41dcd8:	ror    BYTE PTR [ecx-0x20b9d4c1],0xd7
  41dcdf:	imul   ebx,DWORD PTR [edi],0xc4412475
  41dce5:	fs fwait
  41dce7:	ds retf 0xe7f9
  41dceb:	add    bh,BYTE PTR [esi+0x22]
  41dcee:	loopne 0x41dd11
  41dcf0:	pop    ecx
  41dcf1:	mov    bh,BYTE PTR [eax]
  41dcf3:	ret    
  41dcf4:	sbb    edi,DWORD PTR [edx+0x3ff5e6ef]
  41dcfa:	adc    DWORD PTR ds:0x38a94b5e,esp
  41dd00:	xchg   ebp,eax
  41dd01:	lods   al,BYTE PTR ds:[esi]
  41dd02:	imul   DWORD PTR gs:[edx]
  41dd05:	call   0xb9c03117
  41dd0a:	dec    esi
  41dd0b:	jns    0x41dd88
  41dd0d:	push   ds
  41dd0e:	cmp    al,0x1f
  41dd10:	push   ebp
  41dd11:	test   BYTE PTR ds:0x6a596954,ch
  41dd17:	call   0x7db7:0xc82ff8bf
  41dd1e:	xor    al,0xa0
  41dd20:	xchg   DWORD PTR [eax],edi
  41dd22:	fcom   DWORD PTR ds:0xb9d37a59
  41dd28:	pop    edi
  41dd29:	out    dx,al
  41dd2a:	shr    ch,1
  41dd2c:	sbb    cl,bh
  41dd2e:	add    al,0x4f
  41dd30:	(bad)  
  41dd32:	aam    0x9e
  41dd34:	stos   BYTE PTR es:[edi],al
  41dd35:	ja     0x41dd80
  41dd37:	enter  0x7dae,0x42
  41dd3b:	popf   
  41dd3c:	fidiv  DWORD PTR [eax]
  41dd3e:	sub    al,0xc7
  41dd40:	add    DWORD PTR [edx+ecx*1+0x25],esi
  41dd44:	fidiv  DWORD PTR [ecx]
  41dd46:	xor    al,0x33
  41dd48:	repnz and BYTE PTR [ebp-0x5b],ah
  41dd4c:	loop   0x41dd7b
  41dd4e:	jb     0x41dd58
  41dd50:	adc    dh,bh
  41dd52:	cmp    al,0x5e
  41dd54:	loop   0x41dd29
  41dd56:	adc    eax,0x3685bc39
  41dd5b:	xchg   DWORD PTR [esi+0x70744377],ebx
  41dd61:	add    BYTE PTR [edi+0x68848dd3],ah
  41dd67:	call   0x68e7:0x4dab2626
  41dd6e:	fdiv   DWORD PTR [ebx]
  41dd70:	push   ebp
  41dd71:	clc    
  41dd72:	cld    
  41dd73:	shl    DWORD PTR [esi],cl
  41dd75:	stos   DWORD PTR es:[edi],eax
  41dd76:	imul   ecx,DWORD PTR [esi-0x2dcce3f2],0xffffffe4
  41dd7d:	mov    eax,0x7ba633d3
  41dd82:	sub    BYTE PTR [ebx+0x6b],ch
  41dd85:	sti    
  41dd86:	jp     0x41dd44
  41dd88:	(bad)  
  41dd8a:	dec    edi
  41dd8b:	clts   
  41dd8d:	sbb    BYTE PTR [esi],al
  41dd8f:	fst    DWORD PTR [ecx]
  41dd91:	adc    ecx,DWORD PTR [ecx-0x5]
  41dd94:	dec    ebx
  41dd95:	in     eax,0x75
  41dd97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd98:	dec    ebx
  41dd99:	jecxz  0x41dde9
  41dd9b:	shl    esi,1
  41dd9d:	inc    esi
  41dd9e:	mov    ds:0x945406ef,eax
  41dda3:	mov    cl,0xc3
  41dda5:	gs sub al,0xe9
  41dda8:	jmp    0xffc7:0x82899480
  41ddaf:	dec    ebp
  41ddb0:	lods   al,BYTE PTR ds:[esi]
  41ddb1:	and    BYTE PTR [esi],0xa5
  41ddb4:	mov    eax,0x3cc7fc2d
  41ddb9:	adc    al,0xf8
  41ddbb:	mov    BYTE PTR [ebx],ch
  41ddbd:	lea    edx,[ecx-0x3431f14a]
  41ddc3:	adc    DWORD PTR [esi-0x10],eax
  41ddc6:	ret    
  41ddc7:	outs   dx,BYTE PTR ds:[esi]
  41ddc8:	mov    dh,0xf2
  41ddca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddcb:	lods   al,BYTE PTR ds:[esi]
  41ddcc:	out    dx,eax
  41ddcd:	es jne 0x41de3b
  41ddd0:	pop    ecx
  41ddd1:	test   DWORD PTR [eax+0x5c],ebp
  41ddd4:	xchg   edi,eax
  41ddd5:	lods   eax,DWORD PTR ds:[esi]
  41ddd6:	out    0xed,al
  41ddd8:	mov    ebp,esp
  41ddda:	add    DWORD PTR [esi+ebp*8-0x7c6b4e02],edx
  41dde1:	repz mov bh,0x66
  41dde4:	jmp    0x3e611465
  41dde9:	mov    BYTE PTR [eax+0x3e37a74d],bl
  41ddef:	loopne 0x41de0e
  41ddf1:	ins    BYTE PTR es:[edi],dx
  41ddf2:	xor    dh,BYTE PTR [ebx+0x3b6a7f7b]
  41ddf8:	jmp    0xf3e8:0xb4156820
  41ddff:	call   0x708b29e2
  41de04:	ds fwait
  41de06:	mov    ebx,esi
  41de08:	shl    BYTE PTR [eax+0x41f64834],cl
  41de0e:	cmp    eax,0xec0a2dbe
  41de13:	xchg   edx,eax
  41de14:	and    eax,0x3192397f
  41de19:	cmp    cl,0x3
  41de1c:	dec    edx
  41de1d:	sti    
  41de1e:	inc    edx
  41de1f:	pop    esp
  41de20:	and    edi,DWORD PTR [ebp+eiz*1-0x4043a959]
  41de27:	adc    eax,0x7f89a4b5
  41de2c:	mov    ds:0x98a65a15,eax
  41de31:	pop    ebx
  41de32:	retf   0x98ca
  41de35:	retf   
  41de36:	mov    esp,0x54e1b90a
  41de3b:	inc    ebx
  41de3c:	outs   dx,DWORD PTR ds:[esi]
  41de3d:	leave  
  41de3e:	jp     0x41de38
  41de40:	mov    cl,0x4
  41de42:	in     al,dx
  41de43:	cdq    
  41de44:	mov    dh,0x7
  41de46:	leave  
  41de47:	or     eax,0x27f5a47b
  41de4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de4d:	mov    dl,0xa1
  41de4f:	xchg   esp,eax
  41de50:	(bad)  [eax-0x45]
  41de53:	jae    0x41de61
  41de55:	cli    
  41de56:	mov    gs,WORD PTR [ebp-0x27d16e8b]
  41de5c:	fisubr DWORD PTR [esi+0x440a833f]
  41de62:	(bad)  
  41de63:	fstp   st(4)
  41de65:	xchg   ebx,eax
  41de66:	das    
  41de67:	adc    BYTE PTR [ebx+0x6a],ah
  41de6a:	das    
  41de6b:	sbb    BYTE PTR [ebp+0x64213766],dh
  41de71:	je     0x41dea0
  41de73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de74:	stos   DWORD PTR es:[edi],eax
  41de75:	push   eax
  41de76:	cmp    eax,0x9154db12
  41de7b:	(bad)  
  41de7c:	gs mov esp,0x1ee34e9b
  41de82:	rcl    BYTE PTR [ebx],1
  41de84:	mov    ebx,0xe7dc264a
  41de89:	mov    ds:0xb8452bc2,eax
  41de8e:	cdq    
  41de8f:	inc    eax
  41de90:	leave  
  41de91:	and    BYTE PTR [ecx],ah
  41de93:	xchg   ebp,eax
  41de94:	add    BYTE PTR [ebp+0x338fdd],dh
  41de9a:	daa    
  41de9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de9c:	nop
  41de9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de9e:	scas   al,BYTE PTR es:[edi]
  41de9f:	inc    edi
  41dea0:	out    dx,al
  41dea1:	retf   0xd17d
  41dea4:	xor    cl,BYTE PTR [ebp+ebp*1+0x3d6c89e7]
  41deab:	push   0xa58e1557
  41deb0:	test   al,0x58
  41deb2:	or     BYTE PTR [ebx],ch
  41deb4:	and    BYTE PTR gs:[eax+0x7f],0xb7
  41deb9:	not    DWORD PTR [edi+ecx*8+0x42b431c5]
  41dec0:	lock jns 0x41de66
  41dec3:	pop    esi
  41dec4:	retf   0x1c6b
  41dec7:	jmp    0x41debc
  41dec9:	dec    esi
  41deca:	aad    0xe7
  41decc:	or     BYTE PTR [eax-0x1c],ch
  41decf:	outs   dx,BYTE PTR ds:[esi]
  41ded0:	jecxz  0x41df27
  41ded2:	or     DWORD PTR [edx+0x35e71e3],ebx
  41ded8:	aad    0xe0
  41deda:	repnz scas eax,DWORD PTR es:[edi]
  41dedc:	leave  
  41dedd:	sbb    ecx,eax
  41dedf:	test   DWORD PTR [ebp+0x5b],0x948da973
  41dee6:	das    
  41dee7:	inc    esp
  41dee8:	sub    DWORD PTR ds:0xa8ef4fcd,ebx
  41deee:	add    bh,0x26
  41def1:	das    
  41def2:	and    ecx,ebx
  41def4:	leave  
  41def5:	or     al,0x1
  41def7:	fcmovu st,st(0)
  41def9:	fs int3 
  41defb:	mov    bh,BYTE PTR [edi]
  41defd:	cmp    al,0x57
  41deff:	jbe    0x41df2b
  41df01:	add    ebp,ecx
  41df03:	sub    al,0x92
  41df05:	xchg   ebp,eax
  41df06:	xchg   edi,eax
  41df07:	cmp    al,BYTE PTR gs:[ebp+edx*2+0x7b5a1375]
  41df0f:	dec    edi
  41df10:	scas   eax,DWORD PTR es:[edi]
  41df11:	jbe    0x41def9
  41df13:	mov    ecx,0x24d56976
  41df18:	dec    ebp
  41df19:	in     eax,0xed
  41df1b:	add    ah,dh
  41df1d:	inc    ecx
  41df1e:	fmul   DWORD PTR [eax+eax*1]
  41df21:	ds push 0x30
  41df24:	inc    edx
  41df25:	jecxz  0x41df68
  41df27:	mov    al,ds:0x7cf67839
  41df2c:	add    eax,0x948ab141
  41df31:	sbb    eax,0x128b40b7
  41df36:	mov    eax,ds:0x4536c233
  41df3b:	es je  0x41dec3
  41df3e:	push   ss
  41df3f:	sbb    eax,0xfc3a5b3d
  41df44:	in     eax,0x9f
  41df46:	pop    es
  41df47:	cmp    BYTE PTR [esi+0x7],al
  41df4a:	enter  0x425a,0x44
  41df4e:	mov    eax,0x88063263
  41df53:	push   cs
  41df54:	pop    edx
  41df55:	mov    esi,0x62466e2f
  41df5a:	(bad)  
  41df5b:	mov    edx,0xf088b712
  41df60:	xchg   edx,eax
  41df61:	xchg   esp,esp
  41df63:	mov    bl,BYTE PTR [ebp-0x80]
  41df66:	jo     0x41dfbb
  41df68:	push   edx
  41df69:	test   eax,0x78a40975
  41df6e:	xor    al,bl
  41df70:	ss mov eax,0x3af4ad1f
  41df76:	xchg   ebp,eax
  41df77:	or     BYTE PTR [esi+0x48],bl
  41df7a:	push   esi
  41df7b:	into   
  41df7c:	lahf   
  41df7d:	nop
  41df7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df7f:	nop
  41df80:	mov    BYTE PTR [edi-0x4e],0xd6
  41df84:	pop    edx
  41df85:	in     eax,dx
  41df86:	xor    eax,0x25ef9062
  41df8b:	xchg   BYTE PTR [ebx+ebp*8+0x10],cl
  41df8f:	int3   
  41df90:	or     al,0x31
  41df92:	mov    bh,0x81
  41df94:	sahf   
  41df95:	mov    ch,0xe
  41df97:	popf   
  41df98:	adc    eax,0x1a54c146
  41df9d:	mov    cl,0xa4
  41df9f:	fdiv   DWORD PTR [esi+0x58]
  41dfa2:	ss xchg esp,eax
  41dfa4:	stos   BYTE PTR es:[edi],al
  41dfa5:	xor    al,0x64
  41dfa7:	sub    esp,DWORD PTR [edx-0x58]
  41dfaa:	test   eax,0x7f03c084
  41dfaf:	pushf  
  41dfb0:	mov    bh,0x13
  41dfb2:	imul   edx,DWORD PTR [edi+0x419331bb],0x3d
  41dfb9:	or     bh,BYTE PTR [esi-0x4]
  41dfbc:	xor    al,0x4f
  41dfbe:	lock lods eax,DWORD PTR ds:[esi]
  41dfc0:	hlt    
  41dfc1:	jno    0x41dfc7
  41dfc3:	sti    
  41dfc4:	es pop eax
  41dfc6:	sahf   
  41dfc7:	and    DWORD PTR [ebx],ebx
  41dfc9:	sbb    ecx,DWORD PTR [ebp+0x4]
  41dfcc:	cmp    al,0x73
  41dfce:	out    0x75,al
  41dfd0:	in     al,dx
  41dfd1:	mov    dl,0x22
  41dfd3:	pop    esp
  41dfd4:	scas   eax,DWORD PTR es:[edi]
  41dfd5:	xchg   ecx,eax
  41dfd6:	aaa    
  41dfd7:	add    eax,0x7c15d4b2
  41dfdc:	inc    esi
  41dfdd:	pop    ss
  41dfde:	nop
  41dfdf:	or     eax,0xf3a7e46
  41dfe4:	xor    eax,0x3acd8056
  41dfe9:	es cli 
  41dfeb:	cmp    al,0x1c
  41dfed:	mov    ds:0x293f08f4,eax
  41dff2:	and    ecx,ecx
  41dff4:	das    
  41dff5:	push   0x2b2ce9db
  41dffa:	jne    0x41dffa
  41dffc:	push   esi
  41dffd:	xchg   edx,eax
  41dffe:	mov    ah,BYTE PTR [esi]
  41e000:	add    DWORD PTR [esi],0x55
  41e003:	jge    0x41e034
  41e005:	pop    ds
  41e006:	lea    esp,[edx-0x2a9fb1d0]
  41e00c:	adc    esp,DWORD PTR ds:0xb671e734
  41e012:	mov    WORD PTR [edx+eiz*8+0x3e],fs
  41e016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e017:	jae    0x41dfe3
  41e019:	xlat   BYTE PTR ds:[ebx]
  41e01a:	out    0x51,al
  41e01c:	fs push ss
  41e01e:	or     al,0x11
  41e020:	aam    0x5f
  41e022:	test   al,cl
  41e024:	shl    BYTE PTR [edx+0x16366604],1
  41e02a:	add    al,0x3a
  41e02c:	rcl    DWORD PTR [edx-0x79],cl
  41e02f:	push   esp
  41e030:	jecxz  0x41e076
  41e032:	jae    0x41e05a
  41e034:	and    al,BYTE PTR [edx+0x5f]
  41e037:	popa   
  41e038:	adc    ah,BYTE PTR [edx+0x6d]
  41e03b:	pop    esi
  41e03c:	(bad)  
  41e03d:	xchg   ebx,eax
  41e03e:	inc    edx
  41e03f:	inc    DWORD PTR [esi+0x1b]
  41e042:	aam    0x77
  41e044:	test   eax,0x46d49aea
  41e049:	nop
  41e04a:	lods   al,BYTE PTR ds:[esi]
  41e04b:	mul    BYTE PTR [edi-0x2f23fe5b]
  41e051:	sub    dl,0xe1
  41e054:	jmp    0xc5bb:0x57b248fa
  41e05b:	mov    eax,ds:0x2decc338
  41e060:	rcr    DWORD PTR [edx],1
  41e062:	or     bx,WORD PTR [edx-0x19]
  41e066:	mov    dl,0xcc
  41e068:	cmp    ebp,ecx
  41e06a:	push   edi
  41e06b:	pop    eax
  41e06c:	jecxz  0x41dfee
  41e06e:	inc    esp
  41e06f:	mov    ebx,0x7150469c
  41e074:	repz sti 
  41e076:	lds    ebp,FWORD PTR [esi+0x46085485]
  41e07c:	sub    BYTE PTR [esi+0x197141ee],ch
  41e082:	(bad)  
  41e083:	bt     eax,0x75
  41e087:	xor    bh,BYTE PTR fs:[ecx]
  41e08a:	push   esp
  41e08b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e08c:	inc    ebp
  41e08d:	jle    0x41e0eb
  41e08f:	push   ds
  41e090:	xchg   edx,eax
  41e091:	pop    edi
  41e092:	or     eax,0xac5cf2dd
  41e097:	or     DWORD PTR [esi+ebp*8],ebp
  41e09a:	(bad)  
  41e09b:	inc    DWORD PTR [ebx]
  41e09d:	sbb    dl,ah
  41e09f:	push   0xa37c5942
  41e0a4:	mov    al,BYTE PTR [esi]
  41e0a6:	aas    
  41e0a7:	in     eax,0x85
  41e0a9:	rol    DWORD PTR [edx],1
  41e0ab:	fdiv   QWORD PTR [esi-0x4ad91447]
  41e0b1:	mov    BYTE PTR [edi-0x39154a72],bh
  41e0b7:	sub    DWORD PTR [eax],edi
  41e0b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0ba:	scas   eax,DWORD PTR es:[edi]
  41e0bb:	jmp    0xaf7c0067
  41e0c0:	out    0xc0,al
  41e0c2:	push   ss
  41e0c3:	add    DWORD PTR gs:[ebp+edx*8-0x13f83f2],esp
  41e0cb:	ins    DWORD PTR es:[edi],dx
  41e0cc:	js     0x41e0fb
  41e0ce:	out    dx,al
  41e0cf:	mov    ebp,DWORD PTR [ecx-0x11a5ae77]
  41e0d5:	xchg   esp,eax
  41e0d6:	and    DWORD PTR [eax-0x3e18e867],ebp
  41e0dc:	mov    cl,0xde
  41e0de:	outs   dx,BYTE PTR ds:[esi]
  41e0df:	fdivr  st,st(4)
  41e0e1:	mov    esp,0xf1baafbb
  41e0e6:	inc    edi
  41e0e7:	ror    ch,1
  41e0e9:	mov    ebp,0x78343b89
  41e0ee:	out    dx,al
  41e0ef:	add    eax,0x21aaf0e9
  41e0f4:	adc    DWORD PTR [eax],0xffffffc5
  41e0f7:	dec    esi
  41e0f8:	sbb    ch,BYTE PTR gs:[ebp-0x66]
  41e0fc:	or     ch,BYTE PTR [esi+0x73cf0ffe]
  41e102:	test   ebp,esp
  41e104:	push   ds
  41e105:	clc    
  41e106:	pop    eax
  41e107:	mov    dl,0xb
  41e109:	xor    al,0x94
  41e10b:	mov    esp,0x510c9e9e
  41e110:	xchg   edx,eax
  41e111:	or     ch,BYTE PTR [esp+eax*8-0x1f]
  41e115:	mov    dl,0x36
  41e117:	lock scas eax,DWORD PTR es:[edi]
  41e119:	or     BYTE PTR [ecx+edx*2-0x6f],0x34
  41e11e:	(bad)  [ebx+edi*2+0xc72ec52]
  41e125:	xlat   BYTE PTR ds:[ebx]
  41e126:	adc    ebx,DWORD PTR [ecx]
  41e128:	or     DWORD PTR ds:0x867d4c09,edx
  41e12e:	mov    dh,0xc9
  41e130:	push   esi
  41e131:	ss inc ecx
  41e133:	push   cs
  41e134:	cmp    eax,0x755575c5
  41e139:	adc    DWORD PTR [ebp+0x55],0x6c
  41e13d:	jle    0x41e0fa
  41e13f:	call   0x7eee:0x87537cb3
  41e146:	cmc    
  41e147:	test   al,0xa0
  41e149:	cli    
  41e14a:	xchg   edi,eax
  41e14b:	pop    esp
  41e14c:	jge    0x41e1cd
  41e14e:	imul   esi,DWORD PTR [ecx+0x33c69682],0xffffff88
  41e155:	stc    
  41e156:	mov    ch,0xe1
  41e158:	dec    eax
  41e159:	arpl   WORD PTR [ebp-0x6af66004],sp
  41e15f:	mov    edx,eax
  41e161:	cmp    ah,ch
  41e163:	loop   0x41e1d7
  41e165:	sbb    BYTE PTR [edi+0x4e],bl
  41e168:	xchg   ecx,eax
  41e169:	pop    edi
  41e16a:	sar    BYTE PTR [edi+eax*8-0x38d8823e],cl
  41e171:	sar    BYTE PTR [edx+ebp*1+0x395ed32b],1
  41e178:	sub    DWORD PTR [ecx],eax
  41e17a:	sub    bh,al
  41e17c:	jnp    0x41e112
  41e17e:	add    DWORD PTR [eax+0x61],esi
  41e181:	das    
  41e182:	neg    BYTE PTR [ecx+0x32]
  41e185:	adc    BYTE PTR [eax],ah
  41e187:	in     al,0x2a
  41e189:	cmp    al,0x42
  41e18b:	xchg   ecx,eax
  41e18c:	pusha  
  41e18d:	lock sub DWORD PTR [edi+0x36cbbd3f],ecx
  41e194:	(bad)  
  41e195:	pop    ds
  41e196:	or     BYTE PTR [ebx],bl
  41e198:	test   eax,0x1d76b2bb
  41e19d:	cmp    al,0x9
  41e19f:	dec    edx
  41e1a0:	pop    eax
  41e1a1:	adc    BYTE PTR [edx-0x929348e],dl
  41e1a7:	and    ah,BYTE PTR ds:0x521bbe29
  41e1ad:	scas   al,BYTE PTR es:[edi]
  41e1ae:	push   esi
  41e1af:	jg     0x41e210
  41e1b1:	das    
  41e1b2:	adc    ch,al
  41e1b4:	push   esp
  41e1b5:	mov    WORD PTR [ebp-0x44],?
  41e1b8:	push   esp
  41e1b9:	dec    eax
  41e1ba:	adc    dl,BYTE PTR [edi+eiz*8+0x31]
  41e1be:	(bad)  
  41e1bf:	sub    cl,BYTE PTR [edi-0x77e5e62d]
  41e1c5:	xlat   BYTE PTR ds:[ebx]
  41e1c6:	inc    edx
  41e1c7:	sub    eax,0xee2ce5f1
  41e1cc:	xor    DWORD PTR [edi],ecx
  41e1ce:	(bad)  
  41e1d0:	ja     0x41e15b
  41e1d2:	gs pop esi
  41e1d4:	mov    dl,0x70
  41e1d6:	jnp    0x41e1fb
  41e1d8:	inc    esp
  41e1d9:	mov    eax,DWORD PTR [ecx]
  41e1db:	and    al,0x1e
  41e1dd:	mov    esi,0xc6563c36
  41e1e2:	mov    esi,esp
  41e1e4:	xchg   esi,eax
  41e1e5:	inc    eax
  41e1e6:	xchg   ebx,eax
  41e1e7:	(bad)  
  41e1e8:	in     eax,0x23
  41e1ea:	mov    dl,0x13
  41e1ec:	outs   dx,DWORD PTR ds:[si]
  41e1ee:	push   edi
  41e1ef:	pushf  
  41e1f0:	and    eax,0x5df57566
  41e1f5:	or     al,0x59
  41e1f7:	cmp    al,0xe
  41e1f9:	pop    edi
  41e1fa:	push   cs
  41e1fb:	jne    0x41e1e6
  41e1fd:	xor    BYTE PTR [ecx+0x3e],dh
  41e200:	push   esp
  41e202:	mov    es:0x828f7e38,eax
  41e208:	sti    
  41e209:	lds    edx,FWORD PTR [ebp+ecx*2+0x24]
  41e20d:	pop    eax
  41e20e:	rcl    BYTE PTR [ebx],cl
  41e210:	ss jnp 0x41e246
  41e213:	out    dx,al
  41e214:	xchg   ecx,eax
  41e215:	or     DWORD PTR [ebp+0x648cd48a],ebp
  41e21b:	xchg   BYTE PTR [esi-0x44],ah
  41e21e:	outs   dx,BYTE PTR ds:[esi]
  41e21f:	xor    DWORD PTR [ebp*2-0x2bc46b8b],ecx
  41e226:	push   eax
  41e227:	int    0x7b
  41e229:	dec    ecx
  41e22a:	push   ds
  41e22b:	cmp    BYTE PTR ds:0xebc31aa9,ah
  41e231:	aaa    
  41e232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e233:	stc    
  41e234:	mov    dh,0xda
  41e236:	inc    eax
  41e237:	push   ebx
  41e238:	lahf   
  41e239:	leave  
  41e23a:	gs add ebp,edx
  41e23d:	mov    ebp,ecx
  41e23f:	push   ebx
  41e240:	jne    0x41e2b8
  41e242:	add    BYTE PTR [eax],ah
  41e244:	add    ah,ah
  41e246:	jg     0x41e239
  41e248:	fidivr DWORD PTR [ebx+edi*2]
  41e24b:	adc    DWORD PTR [eax+0x9],ebp
  41e24e:	stos   DWORD PTR es:[edi],eax
  41e24f:	(bad)  
  41e250:	out    0xa,al
  41e252:	lea    ebx,[ebp+0x6f]
  41e255:	inc    esi
  41e256:	out    0xe5,eax
  41e258:	mov    esp,fs
  41e25a:	into   
  41e25b:	(bad)  
  41e25c:	mov    ah,0xa3
  41e25e:	ret    0x9d9b
  41e261:	and    DWORD PTR [esi+ebp*2-0x5e],0x70d060c8
  41e269:	adc    ecx,ebx
  41e26b:	cmp    edx,esi
  41e26d:	out    dx,eax
  41e26e:	sub    eax,DWORD PTR [eax]
  41e270:	stos   BYTE PTR es:[edi],al
  41e271:	dec    esp
  41e272:	and    eax,0x709316e5
  41e277:	retf   
  41e278:	and    esp,DWORD PTR ds:0x704
  41e27d:	cmp    BYTE PTR [esi],0x36
  41e280:	mov    cl,0x11
  41e282:	sub    BYTE PTR [ebx],ah
  41e284:	test   al,0x68
  41e287:	lea    edi,[edx+edx*2]
  41e28a:	xlat   BYTE PTR ds:[ebx]
  41e28b:	leave  
  41e28c:	pop    ebp
  41e28d:	jo     0x41e291
  41e28f:	mov    bh,BYTE PTR [ebp+0x2]
  41e292:	stc    
  41e293:	js     0x41e2a1
  41e295:	popa   
  41e296:	push   esp
  41e297:	aaa    
  41e298:	shl    DWORD PTR [esi],0x44
  41e29b:	push   edx
  41e29c:	inc    edi
  41e29d:	rcr    DWORD PTR [edi+0x5d],1
  41e2a0:	pop    ss
  41e2a1:	mov    esp,0x2ad64255
  41e2a6:	add    al,BYTE PTR [esi]
  41e2a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2a9:	and    bh,cl
  41e2ab:	sub    BYTE PTR [eax],dl
  41e2ad:	arpl   WORD PTR [eax],sp
  41e2af:	xchg   ecx,eax
  41e2b0:	cmp    BYTE PTR [esi+0x60e8969c],bh
  41e2b6:	pusha  
  41e2b7:	jne    0x41e312
  41e2b9:	repnz fld DWORD PTR [eax]
  41e2bc:	xor    DWORD PTR [ebx+0x54],edi
  41e2bf:	fwait
  41e2c0:	add    ebx,edi
  41e2c2:	cmc    
  41e2c3:	(bad)  
  41e2c4:	pop    ecx
  41e2c5:	(bad)  
  41e2c6:	dec    edi
  41e2c7:	inc    eax
  41e2c8:	out    0x15,eax
  41e2ca:	dec    edx
  41e2cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2cc:	or     edx,esp
  41e2ce:	inc    edx
  41e2cf:	(bad)  
  41e2d0:	xor    DWORD PTR [eax+eax*8-0x23],ecx
  41e2d4:	(bad)  
  41e2d5:	sub    al,0x1f
  41e2d7:	jae    0x41e32e
  41e2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2da:	sar    ch,0x22
  41e2dd:	stos   DWORD PTR es:[edi],eax
  41e2de:	cmp    DWORD PTR [eax+0x7f],edx
  41e2e1:	lds    ecx,FWORD PTR [ecx-0x71874975]
  41e2e7:	jb     0x41e2dd
  41e2e9:	or     ebx,DWORD PTR [esi]
  41e2eb:	loop   0x41e33e
  41e2ed:	or     cl,BYTE PTR [esi-0x29]
  41e2f0:	pop    ds
  41e2f1:	sub    BYTE PTR [ebx+esi*2],0x77
  41e2f5:	push   esi
  41e2f6:	out    dx,eax
  41e2f7:	lock daa 
  41e2f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2fa:	das    
  41e2fb:	cmp    eax,0xf7cdb57f
  41e300:	out    0x46,eax
  41e302:	loop   0x41e2c6
  41e304:	jae    0x41e2ba
  41e306:	or     eax,0x2663481d
  41e30b:	inc    esp
  41e30c:	addr16 push cs
  41e30e:	inc    esp
  41e30f:	sbb    DWORD PTR [eax],ebx
  41e311:	mov    edx,0x2c3e0169
  41e316:	(bad)  
  41e317:	ins    BYTE PTR es:[edi],dx
  41e318:	mov    dh,bh
  41e31a:	daa    
  41e31b:	add    eax,0x8790ffcc
  41e320:	(bad)  
  41e321:	lock adc al,0xeb
  41e324:	into   
  41e325:	jb     0x41e2c1
  41e327:	xor    eax,edi
  41e329:	xor    edx,0x0
  41e32c:	cmp    eax,0x70941e0f
  41e331:	jne    0x41e365
  41e337:	cmp    edx,0xffffffff
  41e33a:	jne    0x41e365
  41e340:	mov    eax,DWORD PTR [ebp-0x4]
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0x67
  41e3e0:	xlat   BYTE PTR ds:[ebx]
  41e3e1:	icebp  
  41e3e2:	dec    edx
  41e3e3:	adc    ebp,edx
  41e3e5:	add    BYTE PTR [ebx-0x7c7ca327],0x9f
  41e3ec:	cmc    
  41e3ed:	adc    eax,0x49978be0
  41e3f2:	push   ebx
  41e3f3:	pop    ss
  41e3f4:	in     al,0xc9
  41e3f6:	dec    esp
  41e3f7:	ret    0xefba
  41e3fa:	xor    eax,0x6f36edc2
  41e3ff:	and    BYTE PTR [ebx+0x343ea893],0x35
  41e406:	outs   dx,BYTE PTR ds:[esi]
  41e407:	js     0x41e43b
  41e409:	sar    BYTE PTR [ebp+0x63],0x45
  41e40d:	push   esi
  41e40e:	sbb    ch,cl
  41e410:	sub    BYTE PTR [ebx+0x6bde5da3],ah
  41e416:	in     eax,dx
  41e417:	adc    eax,0xa0c5afd7
  41e41c:	pop    ss
  41e41d:	push   cs
  41e41e:	mov    ebx,0xcb6910ef
  41e423:	or     eax,0x19f77a77
  41e428:	adc    eax,DWORD PTR [ecx+0x6c1de960]
  41e42e:	inc    esp
  41e42f:	mov    BYTE PTR ds:0x8c61f1aa,dl
  41e435:	pop    ecx
  41e436:	ja     0x41e3f3
  41e438:	or     ecx,DWORD PTR gs:[esp+edi*1-0x31]
  41e43d:	adc    edx,DWORD PTR [esi]
  41e43f:	lock xchg esi,eax
  41e442:	jae    0x41e3c8
  41e444:	enter  0xe7cb,0xd1
  41e448:	jg     0x41e4ac
  41e44a:	pop    es
  41e44b:	(bad)  
  41e44c:	js     0x41e3fc
  41e44e:	mov    ebx,0x6fc6ab77
  41e453:	adc    edi,eax
  41e455:	mov    al,0xa6
  41e457:	js     0x41e4b1
  41e459:	or     al,0x10
  41e45b:	inc    esp
  41e45c:	dec    ebx
  41e45d:	mov    ecx,0xf72176a0
  41e462:	lea    esp,[edi-0x36]
  41e465:	dec    esp
  41e466:	mov    edi,fs
  41e468:	loopne 0x41e42a
  41e46a:	retf   0xc0db
  41e46d:	jp     0x41e424
  41e46f:	add    al,0x65
  41e471:	xchg   edi,eax
  41e472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e473:	iret   
  41e474:	xchg   ebp,eax
  41e475:	jecxz  0x41e4d7
  41e477:	mov    bl,0x94
  41e479:	mov    ebx,0x50a23405
  41e47e:	and    DWORD PTR [edi+ebx*1],ecx
  41e481:	or     eax,0xe56125df
  41e486:	dec    esp
  41e487:	pop    edx
  41e488:	loop   0x41e4a4
  41e48a:	inc    eax
  41e48b:	push   ss
  41e48c:	cmp    al,BYTE PTR [ebp+0x7738263d]
  41e492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e493:	lock cmp ecx,esp
  41e496:	mov    ds:0xcc386cf2,al
  41e49b:	(bad)  
  41e49c:	dec    esi
  41e49d:	push   ebp
  41e49e:	xchg   esi,eax
  41e49f:	xlat   BYTE PTR ds:[ebx]
  41e4a0:	mov    cl,0x1
  41e4a2:	(bad)  
  41e4a3:	sar    esp,cl
  41e4a5:	sbb    BYTE PTR [edi-0x38d5d85a],bl
  41e4ab:	or     eax,0xde49cea2
  41e4b0:	adc    al,0x1b
  41e4b2:	jbe    0x41e517
  41e4b4:	sub    eax,DWORD PTR [esi]
  41e4b6:	inc    ebp
  41e4b7:	mov    ah,0x1d
  41e4b9:	arpl   WORD PTR es:[edi-0x31],sp
  41e4bd:	jne    0x41e4d5
  41e4bf:	and    DWORD PTR [edx-0x23],eax
  41e4c2:	mov    DWORD PTR [ebp+0x64],ebp
  41e4c5:	adc    BYTE PTR [ebx-0x2f],al
  41e4c8:	stc    
  41e4c9:	jg     0x41e45f
  41e4cb:	mov    ebx,0x8ef0511a
  41e4d0:	or     DWORD PTR [eax+0x5b7a7a27],0xdfa4c7ac
  41e4da:	lea    esi,[edi]
  41e4dc:	jp     0x41e50d
  41e4de:	in     eax,dx
  41e4df:	pop    es
  41e4e0:	fistp  QWORD PTR [esi-0x30]
  41e4e3:	dec    edi
  41e4e4:	ins    DWORD PTR es:[edi],dx
  41e4e5:	add    BYTE PTR [eax+esi*2-0x7d],ch
  41e4e9:	mov    edi,0xefac5e46
  41e4ee:	push   0x4b
  41e4f0:	xchg   esi,eax
  41e4f1:	add    ebx,DWORD PTR [esi]
  41e4f3:	enter  0x996b,0xf
  41e4f7:	and    edx,DWORD PTR [edx]
  41e4f9:	adc    ecx,0x5f
  41e4fc:	mov    ebx,0xd7c734b5
  41e501:	sub    al,0x6e
  41e503:	xchg   BYTE PTR [esi],dl
  41e505:	sub    bh,dh
  41e507:	mov    DWORD PTR [esp+ebp*2],ebx
  41e50a:	iret   
  41e50b:	sbb    BYTE PTR [ebp+0x2b1db086],0xbc
  41e512:	test   al,0x4c
  41e514:	(bad)  [eax+0x6b]
  41e517:	(bad)
  41e51a:	outs   dx,DWORD PTR ds:[esi]
  41e51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e51c:	ret    
  41e51d:	xor    cl,0xa5
  41e520:	retf   
  41e521:	pop    esi
  41e522:	sub    al,BYTE PTR [eax]
  41e524:	push   esi
  41e525:	add    al,0x1a
  41e527:	inc    eax
  41e528:	aam    0x61
  41e52a:	call   0x93fa:0x524c5285
  41e531:	fiadd  DWORD PTR [esi]
  41e533:	imul   ecx,ebp,0x5a867723
  41e539:	push   ecx
  41e53a:	add    ebp,ebp
  41e53c:	xor    DWORD PTR [edi+0x5867c6e8],esi
  41e542:	fld    TBYTE PTR [edx+edx*1-0x33d53343]
  41e549:	xor    edx,esp
  41e54b:	inc    ebx
  41e54c:	cwde   
  41e54d:	and    al,0x26
  41e54f:	push   eax
  41e550:	pop    ebx
  41e551:	daa    
  41e552:	shr    cl,1
  41e554:	sbb    bl,dh
  41e556:	inc    edi
  41e557:	imul   eax,DWORD PTR [edx-0x1],0xffffffb2
  41e55b:	add    ebp,esp
  41e55d:	(bad)  
  41e55e:	pop    ecx
  41e55f:	outs   dx,BYTE PTR ds:[esi]
  41e560:	jmp    0x1b54:0xa1255d9
  41e567:	or     ah,BYTE PTR [ecx]
  41e569:	sbb    DWORD PTR [esi-0x3f],ecx
  41e56c:	inc    esi
  41e56d:	sbb    ebx,DWORD PTR [edi]
  41e56f:	cmp    DWORD PTR [edx-0x17],edi
  41e572:	cmp    ebp,DWORD PTR [ebx]
  41e574:	mov    ebp,0x352766eb
  41e579:	clc    
  41e57a:	fdivr  DWORD PTR [esp+edi*4+0x1c768fc6]
  41e581:	sub    edi,DWORD PTR [edx]
  41e583:	lds    eax,FWORD PTR [ecx]
  41e585:	adc    ah,bl
  41e587:	loop   0x41e602
  41e589:	adc    BYTE PTR [edi+eax*1-0x7debbf34],dl
  41e590:	mov    eax,0xf71c0d99
  41e595:	cmp    eax,0xeae460d9
  41e59a:	mov    DWORD PTR [esi+0x40ddbc76],ebp
  41e5a0:	retf   0x1d0e
  41e5a3:	sbb    ebx,DWORD PTR [ecx+0x26]
  41e5a6:	cwde   
  41e5a7:	add    eax,0x1c1d730f
  41e5ac:	aas    
  41e5ad:	push   es
  41e5ae:	ins    DWORD PTR es:[edi],dx
  41e5af:	xchg   esp,eax
  41e5b0:	mov    WORD PTR [ebx-0x40],es
  41e5b3:	scas   eax,DWORD PTR es:[edi]
  41e5b4:	test   BYTE PTR [ecx],ch
  41e5b6:	or     eax,0xac4d5bf6
  41e5bb:	test   eax,0x1c5af0fe
  41e5c0:	jl     0x41e57a
  41e5c2:	jb     0x41e5aa
  41e5c4:	fcom   QWORD PTR [esi+0x364c5d3b]
  41e5ca:	enter  0x4857,0xb6
  41e5ce:	mov    edx,esi
  41e5d0:	add    BYTE PTR [esi+0x67],dh
  41e5d3:	sub    esi,DWORD PTR ds:0x12620be9
  41e5d9:	into   
  41e5da:	xchg   esi,eax
  41e5db:	jmp    0x41e5db
  41e5dd:	sahf   
  41e5de:	xchg   ebp,eax
  41e5df:	arpl   WORD PTR [ecx-0x2c],ax
  41e5e2:	inc    BYTE PTR [ebp-0x53]
  41e5e5:	push   ebx
  41e5e6:	sbb    ch,BYTE PTR [eax+0x12b9c573]
  41e5ec:	sub    DWORD PTR [ecx+eax*4-0x6d],0x546d5296
  41e5f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5f5:	xchg   ecx,eax
  41e5f6:	adc    dh,BYTE PTR [ebp+0x2b]
  41e5f9:	pop    edx
  41e5fa:	stos   DWORD PTR es:[edi],eax
  41e5fb:	(bad)  
  41e5fc:	mov    esp,0xce86cf63
  41e601:	add    BYTE PTR [esi+ecx*4-0x15e113c6],ch
  41e608:	sub    eax,0x38a5bf2
  41e60d:	and    BYTE PTR [eax-0x36d6b8c2],ch
  41e613:	int3   
  41e614:	in     al,0xa2
  41e616:	pusha  
  41e617:	pop    edi
  41e618:	inc    edx
  41e619:	mov    fs,WORD PTR [edx-0x5b5406af]
  41e61f:	mov    bh,0xae
  41e621:	test   DWORD PTR [esi],eax
  41e623:	data16 jae 0x41e64e
  41e626:	xchg   ebp,eax
  41e627:	(bad)
  41e62a:	jb     0x41e689
  41e62c:	xor    BYTE PTR [eax],al
  41e62e:	jmp    0x9589:0x6a59d17c
  41e635:	fld    st(5)
  41e637:	push   ecx
  41e638:	jl     0x41e65b
  41e63a:	sbb    BYTE PTR [esi+0x2f],cl
  41e63d:	adc    BYTE PTR [edx-0x71ef6c9c],cl
  41e643:	sbb    di,bp
  41e646:	icebp  
  41e647:	and    al,0x5a
  41e649:	fs mov bl,0x95
  41e64c:	dec    edx
  41e64d:	ret    
  41e64e:	inc    ecx
  41e64f:	push   0xffffffc6
  41e651:	inc    ebx
  41e652:	stos   DWORD PTR es:[edi],eax
  41e653:	sub    BYTE PTR [ebx+0x61],bl
  41e656:	mov    ah,0x16
  41e658:	rcl    DWORD PTR [edx],cl
  41e65a:	aad    0x46
  41e65c:	cmp    eax,0x1cda49b6
  41e661:	push   edi
  41e662:	ret    0xce7
  41e665:	mov    ds:0xfe83d84f,eax
  41e66a:	pop    edi
  41e66b:	enter  0xfa11,0xe1
  41e66f:	test   eax,0xfc09c969
  41e674:	rcl    cl,cl
  41e676:	sub    bh,ch
  41e678:	and    DWORD PTR [eax-0x5a],esi
  41e67b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e67c:	mov    ebx,0xef26e24d
  41e681:	pop    ds
  41e682:	or     al,BYTE PTR [eax+eiz*2]
  41e685:	idiv   DWORD PTR [ebx-0x46]
  41e688:	stos   DWORD PTR es:[edi],eax
  41e689:	fcomp  QWORD PTR [edi+ebx*8+0x61]
  41e68d:	push   es
  41e68e:	sbb    DWORD PTR [edi],ebx
  41e690:	pop    DWORD PTR [eax+0x240fdd4f]
  41e696:	test   DWORD PTR ds:0xb88e20cf,edx
  41e69c:	and    al,0x6f
  41e69e:	push   ss
  41e69f:	inc    edi
  41e6a0:	jg     0x41e707
  41e6a2:	mov    dl,0x4c
  41e6a4:	add    DWORD PTR [edx],0x2b
  41e6a7:	(bad)  
  41e6a8:	fdivr  QWORD PTR [edx-0x60]
  41e6ab:	mov    ebp,0x2390a107
  41e6b0:	rcr    BYTE PTR [ecx+0x2b],0xe6
  41e6b4:	int    0xed
  41e6b6:	jnp    0x41e675
  41e6b8:	jge    0x41e652
  41e6ba:	lock outs dx,BYTE PTR ds:[esi]
  41e6bc:	xor    al,0x36
  41e6be:	repz mov ecx,0xdd545569
  41e6c4:	das    
  41e6c5:	push   edx
  41e6c6:	sub    BYTE PTR [ebx+0x7cd6e36],dh
  41e6cc:	stc    
  41e6cd:	das    
  41e6ce:	mov    ss,eax
  41e6d0:	retf   
  41e6d1:	cdq    
  41e6d2:	retf   
  41e6d3:	sub    ebx,DWORD PTR [ebx-0x30]
  41e6d6:	das    
  41e6d7:	sbb    BYTE PTR [ebp+0x43f0aaf6],ah
  41e6dd:	rcr    BYTE PTR [edx-0x22866c81],0x96
  41e6e4:	cmp    al,0xb8
  41e6e6:	sar    ecx,cl
  41e6e8:	popf   
  41e6e9:	fdiv   QWORD PTR [ebp+0x8]
  41e6ec:	outs   dx,DWORD PTR ss:[esi]
  41e6ee:	loope  0x41e71b
  41e6f0:	jp     0x41e6e3
  41e6f2:	sbb    ebp,DWORD PTR [edi-0xe039687]
  41e6f8:	call   0x999bdd03
  41e6fd:	xchg   ebx,eax
  41e6fe:	or     eax,0x26dafee6
  41e703:	xor    ebx,edi
  41e705:	fmulp  st(2),st
  41e707:	(bad)  
  41e708:	scas   al,BYTE PTR es:[edi]
  41e709:	call   0xdd58:0x97394b37
  41e710:	das    
  41e711:	loopne 0x41e713
  41e713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e714:	or     DWORD PTR [edx-0x7cf21ef5],0x15
  41e71b:	into   
  41e71c:	sub    BYTE PTR [eax],bh
  41e71e:	jae    0x41e6ae
  41e720:	and    ecx,DWORD PTR [ebx+0x1e43a8be]
  41e726:	xchg   ebp,esi
  41e728:	js     0x41e772
  41e72a:	in     eax,0xa
  41e72c:	fwait
  41e72d:	inc    ebp
  41e72e:	in     eax,dx
  41e72f:	lahf   
  41e730:	push   ecx
  41e731:	cld    
  41e732:	pop    edi
  41e733:	mov    ds:0xf5e0a996,al
  41e738:	fs cs or al,0x85
  41e73c:	(bad)  [edi-0x58fd8665]
  41e742:	or     BYTE PTR [ebp+0x18],0xa1
  41e746:	adc    ecx,DWORD PTR [esp+eax*1-0x28]
  41e74a:	and    DWORD PTR ds:0xa3993f6e,esp
  41e750:	leave  
  41e751:	xchg   ebp,eax
  41e752:	dec    edi
  41e753:	ja     0x41e710
  41e755:	mov    BYTE PTR ds:0x68ff2f85,ch
  41e75b:	inc    eax
  41e75c:	cmp    DWORD PTR [ecx+0xc],esi
  41e75f:	pop    ds
  41e760:	lahf   
  41e761:	push   edx
  41e762:	mov    WORD PTR [esi+0x1a0b8d17],fs
  41e768:	push   edx
  41e769:	fwait
  41e76a:	dec    edx
  41e76b:	sub    bl,BYTE PTR [edx]
  41e76d:	inc    esp
  41e76e:	push   0x1704c4c0
  41e773:	aas    
  41e774:	loop   0x41e7e5
  41e776:	mov    esp,0x13aa8c33
  41e77b:	dec    ebp
  41e77c:	int    0x78
  41e77e:	dec    esi
  41e77f:	fdiv   st,st(7)
  41e781:	(bad)  
  41e782:	adc    DWORD PTR [ecx+0x44],0x9
  41e786:	(bad)  [eax+0x6a0c5803]
  41e78c:	xor    al,0x59
  41e78e:	mov    eax,ds:0x52199316
  41e793:	or     DWORD PTR [esi+0x71],0x11
  41e797:	int3   
  41e798:	pop    ebx
  41e799:	les    eax,FWORD PTR [ebx+esi*8-0x73be02dd]
  41e7a0:	ds enter 0x22f3,0x5f
  41e7a5:	fdivr  st(5),st
  41e7a7:	(bad)  
  41e7a8:	and    BYTE PTR [esi+esi*2+0x1b],ah
  41e7ac:	idiv   DWORD PTR [ecx]
  41e7ae:	test   eax,0xdd5ab008
  41e7b3:	lahf   
  41e7b4:	(bad)  
  41e7b5:	jmp    0xc237:0x8029c378
  41e7bc:	mov    ebx,0x84332c96
  41e7c1:	sbb    esi,ecx
  41e7c3:	mov    dh,0x14
  41e7c5:	fwait
  41e7c6:	inc    ecx
  41e7c7:	addr16 iret 
  41e7c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7ca:	int3   
  41e7cb:	mov    ecx,DWORD PTR [ebx]
  41e7cd:	fstp   st(2)
  41e7cf:	mov    ds:0x5b669702,eax
  41e7d4:	push   eax
  41e7d5:	mov    ah,0x33
  41e7d7:	jno    0x41e7bf
  41e7d9:	pop    ecx
  41e7da:	(bad)  
  41e7db:	xlat   BYTE PTR ds:[ebx]
  41e7dc:	imul   edi,eax,0xffffffc5
  41e7df:	clc    
  41e7e0:	sbb    DWORD PTR [esi-0x4f],esi
  41e7e3:	test   al,0x42
  41e7e5:	mov    edi,0xb774a0a7
  41e7ea:	mov    ds:0xa8d14272,eax
  41e7ef:	mul    DWORD PTR [eax]
  41e7f1:	test   eax,0xd6b155d5
  41e7f6:	cs pop esi
  41e7f8:	push   es
  41e7f9:	or     ch,ah
  41e7fb:	ins    BYTE PTR es:[edi],dx
  41e7fc:	pop    eax
  41e7fd:	adc    ebx,DWORD PTR [edx+0x63]
  41e800:	and    eax,0xfed61aba
  41e805:	outs   dx,DWORD PTR ds:[esi]
  41e806:	cmovns ebx,eax
  41e809:	xor    al,0x66
  41e80b:	leave  
  41e80c:	jg     0x41e823
  41e80e:	js     0x41e83a
  41e810:	or     eax,0x550566ce
  41e815:	push   0x3b
  41e817:	add    ah,BYTE PTR [esi+0x5ec0b018]
  41e81d:	xchg   ebp,eax
  41e81e:	jbe    0x41e836
  41e820:	jg     0x41e855
  41e822:	and    esp,ebx
  41e824:	aas    
  41e825:	sbb    eax,0xc06dcfee
  41e82a:	pushf  
  41e82b:	dec    esp
  41e82c:	cwde   
  41e82d:	mov    al,0x15
  41e82f:	cwde   
  41e830:	fisubr WORD PTR [esi-0x4bbd1e39]
  41e836:	xor    DWORD PTR ds:0xeb4977ea,0x6f
  41e83d:	mov    edx,0x28d381ee
  41e842:	int    0xc7
  41e844:	jnp    0x41e7eb
  41e846:	push   esi
  41e847:	retf   
  41e848:	xchg   ebp,eax
  41e849:	or     esi,DWORD PTR [ebx+0x52]
  41e84c:	pushf  
  41e84d:	jnp    0x41e851
  41e84f:	mov    esp,DWORD PTR [esi-0x53a91ae7]
  41e855:	lods   eax,DWORD PTR ds:[esi]
  41e856:	push   ebp
  41e857:	mov    edi,0x8be42ef1
  41e85c:	inc    edx
  41e85d:	mov    ds:0xcdcba456,al
  41e862:	push   eax
  41e863:	bnd jp 0x41e811
  41e866:	gs pop edx
  41e868:	fdivr  QWORD PTR [edi-0xd8f6be1]
  41e86e:	sbb    al,0x4
  41e870:	inc    edi
  41e871:	lods   eax,DWORD PTR ds:[esi]
  41e872:	mov    es,edx
  41e874:	xlat   BYTE PTR ds:[ebx]
  41e875:	jo     0x41e864
  41e877:	inc    ecx
  41e878:	push   esp
  41e879:	in     al,0xce
  41e87b:	push   ds
  41e87c:	les    edi,FWORD PTR [edx-0x41]
  41e87f:	sbb    dh,BYTE PTR [edx+0x7ced712e]
  41e885:	les    ecx,FWORD PTR [edi+0x6699c0cb]
  41e88b:	adc    BYTE PTR [ebx+edx*4],ch
  41e88e:	popa   
  41e88f:	int3   
  41e890:	adc    bl,0xe2
  41e893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e894:	mov    bh,0xff
  41e896:	(bad)  
  41e897:	pop    ss
  41e898:	icebp  
  41e899:	or     eax,DWORD PTR [edx+0x1c]
  41e89c:	icebp  
  41e89d:	push   edx
  41e89e:	mov    bl,0x9b
  41e8a0:	ret    
  41e8a1:	cmp    BYTE PTR [ebx],dh
  41e8a3:	cmp    eax,0xa9523525
  41e8a8:	add    BYTE PTR [edx],dh
  41e8aa:	and    al,0x76
  41e8ac:	les    ebp,FWORD PTR [esi-0x54540a70]
  41e8b2:	and    DWORD PTR [edx+0x2252e58f],ecx
  41e8b8:	jb     0x41e901
  41e8ba:	neg    BYTE PTR [eax+0x310170a3]
  41e8c0:	push   esp
  41e8c1:	pusha  
  41e8c2:	mov    edi,0x5c2d577d
  41e8c7:	(bad)  
  41e8c8:	outs   dx,WORD PTR ds:[esi]
  41e8ca:	and    cl,0xcb
  41e8cd:	push   0x73
  41e8cf:	int3   
  41e8d0:	mov    fs,WORD PTR [eax+eax*4-0x7b]
  41e8d4:	ret    
  41e8d5:	(bad)  
  41e8d6:	shr    BYTE PTR [ecx],1
  41e8d8:	pop    ecx
  41e8d9:	test   DWORD PTR [edi-0x51931ce9],eax
  41e8df:	adc    ebx,ebx
  41e8e1:	sahf   
  41e8e2:	add    eax,0x29ba4f39
  41e8e7:	adc    BYTE PTR [esi-0x33144a2c],dh
  41e8ed:	in     al,0x82
  41e8ef:	sub    eax,0xd9ae09be
  41e8f4:	pop    ecx
  41e8f5:	xchg   edi,eax
  41e8f6:	jns    0x41e8ec
  41e8f8:	les    ebp,FWORD PTR [ebp+0x1a]
  41e8fb:	cmp    ch,ah
  41e8fd:	push   ecx
  41e8fe:	daa    
  41e8ff:	cmp    ecx,DWORD PTR [eax-0x18b6bf33]
  41e905:	xor    BYTE PTR [esi+0x7be1f1a6],ah
  41e90b:	pop    ebx
  41e90c:	das    
  41e90d:	and    bh,BYTE PTR [edx+0x7f]
  41e910:	jo     0x41e8a1
  41e912:	jp     0x41e90f
  41e914:	and    DWORD PTR [edi],edi
  41e916:	sub    eax,0x6e23c2e9
  41e91b:	(bad)  
  41e91d:	aad    0x63
  41e91f:	lods   al,BYTE PTR ds:[esi]
  41e920:	xchg   ebp,eax
  41e921:	ja     0x41e947
  41e923:	repnz push esp
  41e925:	adc    DWORD PTR [ebx],ecx
  41e927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e928:	ds jmp 0x412452c2
  41e92e:	in     eax,0x50
  41e930:	stos   DWORD PTR es:[di],eax
  41e932:	cmp    edx,DWORD PTR [eax]
  41e934:	add    DWORD PTR ds:0x8d7f06f9,eax
  41e93a:	mov    al,0xfe
  41e93c:	mov    eax,ds:0x55568d19
  41e941:	fwait
  41e942:	xor    BYTE PTR [ebp-0x31],0x57
  41e946:	add    bh,BYTE PTR fs:[ecx-0xd]
  41e94a:	pop    ecx
  41e94b:	mov    dh,0x82
  41e94d:	cwde   
  41e94e:	and    DWORD PTR [ebx+0x56658d0f],esi
  41e954:	mov    fs,esi
  41e956:	jp     0x41e938
  41e958:	fadd   DWORD PTR ds:0x2a743828
  41e95e:	into   
  41e95f:	mov    dl,0x67
  41e961:	xor    BYTE PTR [ecx-0x10],0x49
  41e965:	retf   
  41e966:	push   ebp
  41e967:	add    DWORD PTR [eax-0x41],edi
  41e96a:	sbb    bl,ah
  41e96c:	lahf   
  41e96d:	out    dx,al
  41e96e:	mov    eax,ds:0x1c3a6a9e
  41e973:	sbb    DWORD PTR [edi],0xf98f2dc4
  41e979:	push   cs
  41e97a:	jb     0x41e9ec
  41e97c:	add    BYTE PTR [eax+0x7f118af8],ah
  41e982:	retf   
  41e983:	sbb    eax,0x2ed5e7d8
  41e988:	pop    edx
  41e989:	bound  ecx,QWORD PTR [esp+eax*1-0x44efc47a]
  41e990:	sub    BYTE PTR [eax-0x1bda6de5],cl
  41e996:	mov    WORD PTR [esi+0x45],ss
  41e999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e99a:	pushf  
  41e99b:	test   al,0xf3
  41e99d:	test   DWORD PTR [edx+eax*1+0x29],edi
  41e9a1:	inc    edi
  41e9a2:	iret   
  41e9a3:	dec    eax
  41e9a4:	or     BYTE PTR [ebx+edi*8-0x23062594],ch
  41e9ab:	mov    ah,0x67
  41e9ad:	sub    ebp,DWORD PTR [ecx-0x4c8cbb4b]
  41e9b3:	add    DWORD PTR [esp+eax*8+0x64c3349f],ebx
  41e9ba:	nop
  41e9bb:	pand   mm4,QWORD PTR [esi]
  41e9be:	mov    es,WORD PTR [ebp-0x6b2c58a9]
  41e9c4:	call   FWORD PTR [ecx-0x6e]
  41e9c7:	xchg   ebp,eax
  41e9c8:	adc    al,0xa1
  41e9ca:	and    eax,0x666fbe9d
  41e9cf:	in     eax,0x83
  41e9d1:	xchg   esi,eax
  41e9d2:	shl    DWORD PTR [esi+ecx*4],cl
  41e9d5:	add    DWORD PTR [ebx+edi*4],esi
  41e9d8:	ss ss inc eax
  41e9db:	fsub   QWORD PTR [ebx]
  41e9dd:	call   0x620b:0xe0d3b0fe
  41e9e4:	or     dl,0xac
  41e9e7:	xchg   esi,eax
  41e9e8:	(bad)  
  41e9e9:	sbb    BYTE PTR [eax+0x2e3de7c2],al
  41e9ef:	or     al,0x68
  41e9f1:	mov    cl,0x79
  41e9f3:	ja     0x41e9ed
  41e9f5:	pop    es
  41e9f6:	(bad)  
  41e9f7:	cmovns edi,edx
  41e9fa:	call   0x5a9c:0x611be1ef
  41ea01:	mov    BYTE PTR [esi-0xc9b4a2f],bl
  41ea07:	or     esi,0xffffffe5
  41ea0a:	adc    ecx,ecx
  41ea0c:	test   DWORD PTR [ebp-0x65cafb39],esp
  41ea12:	or     bh,BYTE PTR [ebx+0x3ef7f501]
  41ea18:	not    DWORD PTR [edi+0x177da119]
  41ea1e:	sbb    al,0x3e
  41ea20:	and    dh,bh
  41ea22:	sub    cl,BYTE PTR [ebx+0x12]
  41ea25:	outs   dx,BYTE PTR ds:[esi]
  41ea26:	test   eax,0xe2f9e07c
  41ea2b:	out    dx,al
  41ea2c:	cmp    eax,ebx
  41ea2e:	inc    esp
  41ea2f:	dec    eax
  41ea30:	(bad)  
  41ea31:	pushf  
  41ea32:	mov    dh,0x65
  41ea34:	leave  
  41ea35:	(bad)  
  41ea36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea37:	mov    bl,BYTE PTR [ebx]
  41ea39:	and    BYTE PTR [edx],dh
  41ea3b:	dec    edx
  41ea3c:	dec    eax
  41ea3d:	xor    BYTE PTR [eax+0x7c257ec0],0xaf
  41ea44:	stos   BYTE PTR es:[edi],al
  41ea45:	and    eax,0x600275e2
  41ea4a:	adc    ebx,edx
  41ea4c:	call   0x520e27b6
  41ea51:	push   esp
  41ea52:	inc    ebx
  41ea53:	jmp    0x7cd9:0xf188bfc2
  41ea5a:	sub    al,0x27
  41ea5c:	out    0x70,eax
  41ea5e:	xor    eax,0x2c893835
  41ea63:	shr    BYTE PTR [ecx+0x3e],1
  41ea66:	sub    eax,DWORD PTR [edi+0x20]
  41ea69:	xor    dh,0xa4
  41ea6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea6d:	(bad)  
  41ea6e:	popf   
  41ea6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea70:	push   edi
  41ea71:	add    al,0x9d
  41ea73:	mov    ebp,edx
  41ea75:	sub    al,0x32
  41ea77:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea7a:	push   edi
  41ea7b:	mov    bl,0xe5
  41ea7d:	adc    eax,0x97408a0f
  41ea82:	sub    ch,bl
  41ea84:	jp     0x41ea65
  41ea86:	cmp    eax,DWORD PTR [esi-0x7f]
  41ea89:	fcmovne st,st(0)
  41ea8b:	jo     0x41ea35
  41ea8d:	sbb    ebp,edi
  41ea8f:	and    al,0xac
  41ea91:	es mov esp,0xcf78e51c
  41ea97:	mov    ?,WORD PTR [edx-0x69]
  41ea9a:	mov    edi,0xd1c9f5fd
  41ea9f:	nop
  41eaa0:	push   cs
  41eaa1:	pop    esp
  41eaa2:	pop    ebx
  41eaa3:	jne    0x41ea6d
  41eaa5:	pop    esp
  41eaa6:	push   ebx
  41eaa7:	lods   al,BYTE PTR ds:[esi]
  41eaa8:	pop    ecx
  41eaa9:	pop    ss
  41eaaa:	out    0xd5,al
  41eaac:	scas   eax,DWORD PTR es:[edi]
  41eaad:	test   al,0x3c
  41eaaf:	cmp    BYTE PTR [esi],al
  41eab1:	mov    ebx,0xd0eb03d3
  41eab6:	push   edx
  41eab7:	inc    edx
  41eab8:	push   eax
  41eab9:	imul   ebx,DWORD PTR [ebx+0x6e1a2756],0x76
  41eac0:	push   cx
  41eac2:	jae    0x41eaaf
  41eac4:	popf   
  41eac5:	jmp    0x41eab5
  41eac7:	push   ss
  41eac8:	add    BYTE PTR [edi],ah
  41eaca:	mov    ch,BYTE PTR [esi+0x58889ed5]
  41ead0:	mov    dl,0xf2
  41ead2:	pop    edi
  41ead3:	push   esi
  41ead4:	leave  
  41ead5:	int    0xdc
  41ead7:	xchg   cl,dl
  41ead9:	push   ebp
  41eadb:	jecxz  0x41eac3
  41eadd:	lea    esi,[ebp+0xe]
  41eae0:	jp     0x41eae2
  41eae2:	xchg   edx,eax
  41eae3:	rcr    BYTE PTR cs:[edi+ecx*1-0x9],0x28
  41eae9:	pop    edi
  41eaea:	mov    ds:0xbb725e55,al
  41eaef:	xor    DWORD PTR [edx+0x5a],ecx
  41eaf2:	pmaxub mm0,QWORD PTR [ebx+0x68]
  41eaf6:	pop    eax
  41eaf7:	pop    ebx
  41eaf8:	xchg   DWORD PTR [esi+esi*8+0xb],edx
  41eafc:	outs   dx,BYTE PTR ds:[esi]
  41eafd:	pop    eax
  41eafe:	cmp    edi,eax
  41eb00:	sbb    esi,DWORD PTR ds:0x5664a3c4
  41eb06:	pop    ds
  41eb07:	ds sub edx,ebx
  41eb0a:	shl    BYTE PTR [eax+0x75],0xa4
  41eb0e:	imul   ebx,DWORD PTR [edx-0x1d1c67df],0x2e2af28c
  41eb18:	push   es
  41eb19:	jle    0x41eb1f
  41eb1b:	push   es
  41eb1c:	loope  0x41eb45
  41eb1e:	in     eax,dx
  41eb1f:	dec    esp
  41eb20:	inc    eax
  41eb21:	inc    edx
  41eb22:	xchg   edi,eax
  41eb23:	push   esp
  41eb24:	rol    DWORD PTR [ebp-0x6c],1
  41eb27:	in     eax,0x98
  41eb29:	mov    esp,0xf9f950cf
  41eb2e:	and    eax,0x998a4e0b
  41eb33:	xor    eax,DWORD PTR ds:0x1f355e53
  41eb39:	mov    WORD PTR ds:0xc0540686,es
  41eb3f:	(bad)  
  41eb40:	inc    BYTE PTR [esp+eiz*4+0xf4e3062]
  41eb47:	clc    
  41eb48:	lds    ebx,FWORD PTR [esp+edx*1]
  41eb4b:	mov    esp,0x45df7af5
  41eb50:	cmp    BYTE PTR [esp+ecx*8],ch
  41eb53:	in     eax,dx
  41eb54:	ds fwait
  41eb56:	call   0x791f44ca
  41eb5b:	mov    ecx,0xe0ce7337
  41eb60:	xchg   esi,eax
  41eb61:	jmp    0x41eb01
  41eb63:	and    esp,DWORD PTR [ebp-0x38]
  41eb66:	(bad)  
  41eb67:	scas   al,BYTE PTR es:[edi]
  41eb68:	adc    ebp,0xffffffe2
  41eb6b:	push   0x7
  41eb6d:	cs pop esi
  41eb6f:	xchg   esi,eax
  41eb70:	test   al,0x9c
  41eb72:	enter  0xf286,0x77
  41eb76:	mov    bh,0x41
  41eb78:	or     eax,0x5c882d17
  41eb7d:	xor    esi,ebx
  41eb7f:	rcr    DWORD PTR [ebp+0x4923297e],1
  41eb85:	jbe    0x41eb55
  41eb87:	call   0x893c:0x82a94fcd
  41eb8e:	loop   0x41eb2a
  41eb90:	pusha  
  41eb91:	push   0x293dd54e
  41eb96:	mov    ds:0xab6ae5ab,al
  41eb9b:	push   cs
  41eb9c:	retf   0x65d5
  41eb9f:	retf   0xeb1b
  41eba2:	jp     0x41ebcf
  41eba4:	popf   
  41eba5:	mov    dh,0xa9
  41eba7:	mov    ebp,gs
  41eba9:	retf   0xbe07
  41ebac:	rcl    DWORD PTR [edi],0xa8
  41ebaf:	iret   
  41ebb0:	or     ebx,DWORD PTR [edi+0x64]
  41ebb3:	add    eax,0x57f82a02
  41ebb8:	fs dec ebx
  41ebba:	pop    esp
  41ebbb:	mov    edi,0x6a718981
  41ebc0:	push   ss
  41ebc1:	xor    ebp,DWORD PTR [edx-0x6191a1b5]
  41ebc7:	mov    ah,0x97
  41ebc9:	pop    esi
  41ebca:	mov    ebx,0x1f7cace8
  41ebcf:	clc    
  41ebd0:	inc    esp
  41ebd1:	js     0x41ebe4
  41ebd3:	ds push esp
  41ebd5:	scas   eax,DWORD PTR es:[edi]
  41ebd6:	pop    es
  41ebd7:	fwait
  41ebd8:	sahf   
  41ebd9:	pop    es
  41ebda:	stos   BYTE PTR es:[edi],al
  41ebdb:	push   edx
  41ebdc:	lods   al,BYTE PTR ds:[esi]
  41ebdd:	jecxz  0x41ebe8
  41ebdf:	bound  ecx,QWORD PTR [edx-0x4e53ff33]
  41ebe5:	aaa    
  41ebe6:	daa    
  41ebe7:	sub    DWORD PTR [ecx],ecx
  41ebe9:	mov    edx,0x64ad599f
  41ebee:	ins    BYTE PTR es:[edi],dx
  41ebef:	dec    edi
  41ebf0:	pusha  
  41ebf1:	sub    esp,edi
  41ebf3:	out    0x48,eax
  41ebf5:	shl    BYTE PTR [ecx-0x29],1
  41ebf8:	into   
  41ebf9:	enter  0x143b,0x18
  41ebfd:	cmc    
  41ebfe:	xlat   BYTE PTR ds:[ebx]
  41ebff:	xor    ch,BYTE PTR [esi+0x56b26634]
  41ec05:	push   ebp
  41ec06:	mov    esp,DWORD PTR [ebp+0x22]
  41ec09:	out    dx,eax
  41ec0a:	mov    esi,0x7e83ae39
  41ec0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec10:	dec    ecx
  41ec11:	add    bl,BYTE PTR [esi+0x34]
  41ec14:	mov    dl,0xe3
  41ec16:	inc    BYTE PTR [edi]
  41ec18:	adc    cl,al
  41ec1a:	mov    cl,0x26
  41ec1c:	retf   0x28cd
  41ec1f:	loope  0x41ebcc
  41ec21:	add    esi,0x830fc5af
  41ec27:	cmp    dl,al
  41ec29:	mov    cs,WORD PTR [ecx+0x53]
  41ec2c:	fnstsw WORD PTR [esi+0x2f28f85e]
  41ec32:	sbb    DWORD PTR [esi+eax*4],ebx
  41ec35:	outs   dx,DWORD PTR ds:[esi]
  41ec36:	(bad)  
  41ec37:	aas    
  41ec38:	push   ebp
  41ec39:	jno    0x41ebe8
  41ec3b:	dec    esp
  41ec3c:	sub    eax,0xb85ef01e
  41ec41:	loope  0x41ec5a
  41ec43:	in     eax,dx
  41ec44:	clc    
  41ec45:	mov    edx,0xec69c0c5
  41ec4a:	add    DWORD PTR [edi-0x1936b775],esp
  41ec50:	adc    esi,DWORD PTR [ecx+0x2f67c49e]
  41ec56:	xor    eax,0x8fef0e16
  41ec5b:	push   cs
  41ec5c:	test   al,0x4c
  41ec5e:	push   0xffffffac
  41ec60:	cmp    eax,DWORD PTR [edx+0x6e0301e]
  41ec66:	les    esi,FWORD PTR [edi+edi*8+0x5f89d787]
  41ec6d:	loopne 0x41ec7d
  41ec6f:	nop
  41ec70:	mov    esi,0xfbc48b09
  41ec75:	or     DWORD PTR [esi+0x732c34a6],esi
  41ec7b:	and    bh,BYTE PTR [ebp-0x6f41beaf]
  41ec81:	pop    ecx
  41ec82:	push   ebx
  41ec83:	shr    DWORD PTR [edx+0x34d5e04f],0x51
  41ec8a:	outs   dx,BYTE PTR ds:[esi]
  41ec8b:	jl     0x41ec93
  41ec8d:	jae    0x41ed01
  41ec8f:	or     eax,DWORD PTR [eax+0x26]
  41ec92:	lods   al,BYTE PTR ds:[esi]
  41ec93:	out    dx,eax
  41ec94:	ss xchg ecx,eax
  41ec96:	(bad)  
  41ec97:	aas    
  41ec98:	mov    esp,0xc9c829d0
  41ec9d:	cli    
  41ec9e:	sub    BYTE PTR [ebp-0x5dda6509],bl
  41eca4:	mov    esi,0x4c3813d6
  41eca9:	shl    DWORD PTR ds:0x6df8d4cf,0x67
  41ecb0:	xchg   ecx,eax
  41ecb1:	aam    0x70
  41ecb3:	mov    dh,0x56
  41ecb5:	int    0x62
  41ecb7:	inc    edx
  41ecb8:	into   
  41ecb9:	sbb    eax,0x2a
  41ecbc:	sbb    ah,dl
  41ecbe:	mov    dh,0x12
  41ecc0:	push   ebx
  41ecc1:	loope  0x41ecbc
  41ecc3:	fwait
  41ecc4:	cld    
  41ecc5:	aad    0x8c
  41ecc7:	cmp    esi,edi
  41ecc9:	dec    esp
  41ecca:	sub    edx,DWORD PTR [edx+0x12533e70]
  41ecd0:	jg     0x41ec6d
  41ecd2:	pop    eax
  41ecd3:	or     bl,BYTE PTR [esi]
  41ecd5:	vmwrite edx,esp
  41ecd8:	mov    dl,0xcb
  41ecda:	jmp    0x27929fbe
  41ecdf:	push   es
  41ece0:	test   edi,edx
  41ece2:	aad    0xc5
  41ece4:	xor    edi,DWORD PTR [edi-0xb]
  41ece7:	je     0x41ecad
  41ece9:	sar    edi,0x30
  41ecec:	push   ss
  41eced:	xchg   ebx,eax
  41ecee:	cli    
  41ecef:	cmp    ecx,DWORD PTR [edx]
  41ecf1:	pusha  
  41ecf2:	jmp    0x55e57164
  41ecf7:	pop    ebp
  41ecf8:	adc    DWORD PTR ds:0x78e0f9b2,0x42
  41ecff:	test   eax,0x71101f22
  41ed04:	mov    esi,0x8666290c
  41ed09:	lahf   
  41ed0a:	out    0x3c,eax
  41ed0c:	push   ebp
  41ed0d:	jmp    0x41ecdb
  41ed0f:	inc    edx
  41ed10:	xor    al,0x5
  41ed12:	shr    BYTE PTR [ebp-0x6ae0e5ab],cl
  41ed18:	(bad)  
  41ed1a:	mov    eax,ds:0xdbfe442c
  41ed1f:	or     dh,BYTE PTR ds:0xc002601e
  41ed25:	shr    BYTE PTR [edi+0x49a084c0],cl
  41ed2b:	imul   esi,DWORD PTR [eax],0xc1eb4dd
  41ed31:	push   ecx
  41ed32:	sbb    eax,0xf634c54b
  41ed37:	int3   
  41ed38:	fld    DWORD PTR [esi]
  41ed3a:	push   cs
  41ed3b:	imul   esi,DWORD PTR [edi+0x3f7a9648],0x4ef85f1
  41ed45:	inc    ebp
  41ed46:	jg     0x41ed9c
  41ed48:	sahf   
  41ed49:	mov    bh,BYTE PTR [ebx-0x26634feb]
  41ed4f:	and    al,0x9b
  41ed51:	cmp    DWORD PTR [ecx],0x65
  41ed54:	(bad)  
  41ed55:	test   BYTE PTR [eax+0x2fffb1c7],0x8c
  41ed5c:	bound  ebp,QWORD PTR [esi]
  41ed5e:	dec    edx
  41ed5f:	mov    edx,DWORD PTR [esi]
  41ed61:	push   ecx
  41ed62:	adc    al,0x23
  41ed64:	add    BYTE PTR [edi-0x5bbeca26],0x11
  41ed6b:	xchg   ebx,eax
  41ed6c:	call   DWORD PTR es:[ecx]
  41ed6f:	ficomp WORD PTR [edi-0x1c]
  41ed72:	je     0x41edc2
  41ed74:	rcr    BYTE PTR [esi+eiz*8-0x3b],cl
  41ed78:	sub    ecx,DWORD PTR [ecx-0x39]
  41ed7b:	clc    
  41ed7c:	sub    dh,BYTE PTR [ecx]
  41ed7e:	dec    esp
  41ed7f:	dec    ecx
  41ed80:	sub    eax,0x80714d5d
  41ed85:	mul    DWORD PTR [eax]
  41ed87:	xchg   DWORD PTR [edx+0x7e134d80],ecx
  41ed8d:	xchg   esp,eax
  41ed8e:	push   eax
  41ed8f:	aad    0xab
  41ed91:	mov    ah,0x45
  41ed93:	pop    ss
  41ed94:	out    dx,eax
  41ed95:	lahf   
  41ed96:	addr16 pop ebp
  41ed98:	jnp    0x41edef
  41ed9a:	pop    ecx
  41ed9b:	jge    0x41edfc
  41ed9d:	retf   
  41ed9e:	mov    bl,0x4f
  41eda0:	test   al,0x2b
  41eda2:	es (bad) 
  41eda4:	push   ss
  41eda5:	lods   al,BYTE PTR ds:[esi]
  41eda6:	gs adc eax,0xf1b3cbad
  41edac:	fs stos DWORD PTR es:[edi],eax
  41edae:	test   al,0x3c
  41edb0:	pop    ds
  41edb1:	popf   
  41edb2:	out    dx,eax
  41edb3:	lock xor eax,0xa8c47cd3
  41edb9:	test   DWORD PTR [esi-0x2e],0x811229e7
  41edc0:	inc    edi
  41edc1:	not    BYTE PTR [edi+eax*2-0xfd78cef]
  41edc8:	jge    0x41edb7
  41edca:	sub    ecx,DWORD PTR [ebx+0x32]
  41edcd:	mov    bh,0x55
  41edcf:	xor    dh,bl
  41edd1:	adc    esi,DWORD PTR [esi+0x2dd9e33d]
  41edd7:	gs pusha 
  41edd9:	adc    al,0x60
  41eddb:	sub    BYTE PTR [eax+0x35],cl
  41edde:	js     0x41ee5a
  41ede0:	cs in  al,0x4c
  41ede3:	push   es
  41ede4:	lods   al,BYTE PTR ds:[esi]
  41ede5:	imul   edi,DWORD PTR [esi-0x7b],0x31
  41ede9:	inc    esi
  41edea:	dec    eax
  41edeb:	jns    0x41ee50
  41eded:	xchg   esp,eax
  41edee:	jno    0x41ed75
  41edf0:	je     0x41edf6
  41edf2:	mov    DWORD PTR [ebx-0x9],ebx
  41edf5:	into   
  41edf6:	mov    cl,0x87
  41edf8:	sbb    al,0x9a
  41edfa:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41edfc:	repnz mov ds,edx
  41edff:	in     al,0xec
  41ee01:	adc    bh,BYTE PTR ds:0x5d32721e
  41ee07:	sub    DWORD PTR [edx-0x64],edi
  41ee0a:	dec    ebp
  41ee0b:	mov    cl,0xb9
  41ee0d:	cmp    DWORD PTR [eax+ebp*2],ebx
  41ee10:	lods   eax,DWORD PTR ds:[esi]
  41ee11:	pop    es
  41ee12:	addr16 int3 
  41ee14:	pop    edi
  41ee15:	xlat   BYTE PTR ds:[ebx]
  41ee16:	jmp    0x6cf8dbb6
  41ee1b:	outs   dx,DWORD PTR ds:[esi]
  41ee1c:	pushf  
  41ee1d:	pushf  
  41ee1e:	adc    ah,BYTE PTR [ecx-0x141e68b9]
  41ee24:	or     BYTE PTR [eax-0x35e092cb],0x3c
  41ee2b:	iret   
  41ee2c:	scas   al,BYTE PTR es:[di]
  41ee2e:	pop    ecx
  41ee2f:	(bad)  
  41ee30:	cmp    al,0xe0
  41ee32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee33:	xchg   esi,eax
  41ee34:	sbb    al,0x62
  41ee36:	enter  0xff07,0xdd
  41ee3a:	jmp    0x4ed5753e
  41ee3f:	inc    edi
  41ee40:	push   ecx
  41ee41:	and    bl,BYTE PTR [edi+0x111ff88a]
  41ee47:	inc    esp
  41ee48:	ins    DWORD PTR es:[edi],dx
  41ee49:	sbb    al,0x47
  41ee4b:	mov    dl,0xdb
  41ee4d:	cmc    
  41ee4e:	xor    DWORD PTR [ecx-0x47],edi
  41ee51:	or     edi,DWORD PTR [ebp+ecx*8-0x53]
  41ee55:	add    al,0x9c
  41ee57:	fcomp  QWORD PTR [ebx]
  41ee59:	xchg   ecx,eax
  41ee5a:	retf   0xe985
  41ee5d:	or     ah,BYTE PTR [edx-0x4c1a0c42]
  41ee63:	mov    esi,?
  41ee65:	mov    ?,WORD PTR [edi]
  41ee67:	outs   dx,BYTE PTR ds:[esi]
  41ee68:	data16 xlat BYTE PTR ds:[ebx]
  41ee6a:	jmp    0xc46f012b
  41ee6f:	push   ebp
  41ee70:	add    BYTE PTR [edi+0x18a7030e],dh
  41ee76:	fadd   DWORD PTR [esi]
  41ee78:	retf   0x9593
  41ee7b:	lahf   
  41ee7c:	in     al,0x92
  41ee7e:	inc    ecx
  41ee7f:	pop    ebp
  41ee80:	popf   
  41ee81:	pop    esp
  41ee82:	or     cl,BYTE PTR [eax]
  41ee84:	lahf   
  41ee85:	pop    esi
  41ee87:	pop    ss
  41ee88:	iret   
  41ee89:	mov    edi,0x7798508f
  41ee8e:	es gs pop ss
  41ee91:	add    eax,0x991588c8
  41ee96:	scas   al,BYTE PTR es:[edi]
  41ee97:	cmp    eax,0xbe92c698
  41ee9c:	sub    dh,bl
  41ee9e:	ror    DWORD PTR [edx-0x10f5d688],0x5b
  41eea5:	inc    ecx
  41eea6:	inc    ecx
  41eea7:	and    DWORD PTR [ebp-0x1b7fa724],esi
  41eead:	inc    ecx
  41eeae:	mov    DWORD PTR [edi],edx
  41eeb0:	dec    eax
  41eeb1:	mov    esi,0x9a1f7da
  41eeb6:	pop    es
  41eeb7:	mov    dl,0x48
  41eeb9:	fsubr  DWORD PTR [eax+0x72]
  41eebc:	push   esp
  41eebd:	adc    bl,BYTE PTR [eax-0x703054a6]
  41eec3:	adc    BYTE PTR [edi+0x50fee0d4],dl
  41eec9:	aad    0xce
  41eecb:	jns    0x41ef0e
  41eecd:	mul    DWORD PTR [edi]
  41eecf:	test   BYTE PTR [ebx],0x1f
  41eed2:	push   ebp
  41eed3:	xchg   esp,eax
  41eed4:	lock das 
  41eed6:	dec    edi
  41eed7:	inc    esp
  41eed8:	and    dl,dl
  41eeda:	push   esi
  41eedb:	sub    ecx,0x7a1e0ff0
  41eee1:	jno    0x41eed9
  41eee3:	mov    BYTE PTR [esi-0x1d],al
  41eee6:	iret   
  41eee7:	pop    eax
  41eee8:	std    
  41eee9:	fwait
  41eeea:	push   0x24
  41eeec:	mov    dh,0xdd
  41eeee:	fdiv   QWORD PTR ds:0xa307c7d4
  41eef4:	xchg   esi,eax
  41eef5:	mov    bh,0x75
  41eef7:	adc    BYTE PTR [ebx],ch
  41eef9:	rcr    DWORD PTR [ecx],1
  41eefb:	mov    DWORD PTR [edi-0x49],ebp
  41eefe:	mov    ebx,0x387ee923
  41ef03:	les    edi,FWORD PTR [esi+0x4d03f400]
  41ef09:	push   ebp
  41ef0a:	mov    eax,gs
  41ef0c:	mov    edi,0x22382b46
  41ef11:	and    ecx,esp
  41ef13:	popa   
  41ef14:	leave  
  41ef15:	dec    esp
  41ef16:	xor    al,0x7b
  41ef18:	and    ecx,DWORD PTR [edi-0x3d2048c]
  41ef1e:	push   ds
  41ef1f:	imul   esp,DWORD PTR ds:0x334f5cb6,0x8
  41ef26:	xor    eax,0x809043e6
  41ef2b:	int3   
  41ef2c:	ret    0x105
  41ef2f:	sub    al,0x7d
  41ef31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef32:	mov    cl,0x64
  41ef34:	pop    esi
  41ef35:	sub    al,0x2a
  41ef37:	(bad)  [edx+edx*8]
  41ef3a:	leave  
  41ef3b:	ja     0x41ef98
  41ef3d:	and    cl,BYTE PTR [esi+0x76a058df]
  41ef43:	cmp    al,0xb4
  41ef45:	adc    dl,BYTE PTR [edx]
  41ef47:	dec    esi
  41ef48:	jb     0x41eeee
  41ef4a:	mov    ebx,0xddcff2ad
  41ef4f:	shl    al,1
  41ef51:	cmp    eax,0xcea82826
  41ef56:	mov    ecx,0xb689c015
  41ef5b:	sub    BYTE PTR [eax+eiz*4-0x1c70154d],dl
  41ef62:	cs out dx,al
  41ef64:	mov    eax,0xac210965
  41ef69:	mov    bh,0xe5
  41ef6b:	xchg   esi,eax
  41ef6c:	push   cs
  41ef6d:	pushf  
  41ef6e:	das    
  41ef6f:	outs   dx,BYTE PTR ds:[esi]
  41ef70:	push   ebp
  41ef71:	iret   
  41ef72:	bound  esi,QWORD PTR [edx-0xde09937]
  41ef78:	dec    eax
  41ef79:	imul   esp,DWORD PTR [ecx],0xf2874542
  41ef7f:	out    dx,al
  41ef80:	or     al,0xcf
  41ef82:	xlat   BYTE PTR ds:[ebx]
  41ef83:	pop    ds
  41ef84:	mov    cl,0x4e
  41ef86:	jb     0x41ef26
  41ef88:	xchg   ebx,eax
  41ef89:	sub    eax,0xe32a3d4
  41ef8e:	add    ebp,DWORD PTR ds:0x2feedbf
  41ef94:	pop    esi
  41ef95:	ror    BYTE PTR [ecx-0x7c6ab8e9],0x17
  41ef9c:	(bad)  [ecx+ebp*1-0x4eec707c]
  41efa3:	(bad)  
  41efa4:	sub    BYTE PTR [edx+ecx*4+0x7a],bl
  41efa8:	(bad)  
  41efa9:	xchg   ebp,eax
  41efaa:	jmp    0x3785eb6c
  41efaf:	ss sbb eax,0x80de19e3
  41efb5:	inc    edi
  41efb6:	gs mov ah,0xda
  41efb9:	mov    ds:0x5b1b957b,al
  41efbe:	and    al,0xa4
  41efc0:	test   al,0x78
  41efc2:	inc    ebx
  41efc3:	xor    ch,BYTE PTR [ebx-0x5a14d746]
  41efc9:	test   DWORD PTR [edx-0x5af54bd4],esi
  41efcf:	rcr    BYTE PTR [eax],0xfd
  41efd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efd3:	pop    ebx
  41efd4:	mov    dh,0x73
  41efd6:	mov    cl,dl
  41efd8:	and    BYTE PTR [ebx+0x20],cl
  41efdb:	mov    dh,0xc7
  41efdd:	fcmovbe st,st(1)
  41efdf:	enter  0x38a6,0xd9
  41efe3:	test   DWORD PTR [esi+esi*2],esi
  41efe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efe7:	push   ebp
  41efe8:	hlt    
  41efe9:	(bad)  
  41efea:	in     eax,dx
  41efeb:	jge    0x41efe9
  41efed:	dec    esi
  41efee:	ret    0x31e6
  41eff1:	jne    0x41efac
  41eff3:	add    DWORD PTR [edx],edi
  41eff5:	(bad)  
  41eff7:	shr    ah,1
  41eff9:	test   al,0xef
  41effb:	xchg   esp,eax
  41effc:	add    eax,0xb2fb02c0
  41f001:	and    al,BYTE PTR [edx-0x52b266e8]
  41f007:	fbld   TBYTE PTR [eax-0x3471a9ed]
  41f00d:	push   ebx
  41f00e:	in     al,0xee
  41f010:	inc    esi
  41f011:	jo     0x41efdd
  41f013:	test   DWORD PTR [eax*2+0x24434e2f],0xc6936fec
  41f01e:	mov    bh,0x1c
  41f020:	and    ecx,DWORD PTR ds:0x10ec6c9e
  41f026:	or     eax,0xc8eac1ac
  41f02b:	jecxz  0x41efee
  41f02d:	out    dx,eax
  41f02e:	mov    DWORD PTR [esi-0x6b924e79],eax
  41f034:	rol    bl,cl
  41f036:	mov    edi,0xa7377b28
  41f03b:	retf   0x600d
  41f03e:	stos   BYTE PTR es:[edi],al
  41f03f:	shl    BYTE PTR [edx-0x3f92cc41],1
  41f045:	sub    ebx,DWORD PTR [esi-0x11ab290d]
  41f04b:	dec    edi
  41f04c:	pushf  
  41f04d:	mov    ecx,eax
  41f04f:	aas    
  41f050:	cs jae 0x41f0ac
  41f053:	xor    ebx,DWORD PTR [ebx+0x3a]
  41f056:	xor    edi,0xdb73a053
  41f05c:	push   0xffffff89
  41f05e:	hlt    
  41f05f:	fwait
  41f060:	arpl   di,bx
  41f062:	adc    al,0xba
  41f064:	aad    0xb5
  41f066:	inc    eax
  41f067:	in     al,0xef
  41f069:	(bad)  [eax]
  41f06b:	loop   0x41f062
  41f06d:	sub    dl,al
  41f06f:	lar    esp,WORD PTR [edi-0x32d0ac53]
  41f076:	jge    0x41f098
  41f078:	(bad)  
  41f079:	xchg   DWORD PTR [eax+edi*2-0x16c3bbb4],eax
  41f080:	xor    DWORD PTR [edx],ebp
  41f082:	jae    0x41f037
  41f084:	xchg   BYTE PTR [edi],bh
  41f086:	sbb    eax,0x9b620f28
  41f08b:	sbb    BYTE PTR [edx],ah
  41f08d:	adc    DWORD PTR [edi+0x32037ab1],eax
  41f093:	push   0xffffffc1
  41f095:	imul   edx,DWORD PTR [esi-0x26daf1a6],0xe
  41f09c:	adc    esi,DWORD PTR [esi]
  41f09e:	fcmovnu st,st(1)
  41f0a0:	(bad)  
  41f0a1:	jmp    0x41f090
  41f0a3:	push   ss
  41f0a4:	pop    edi
  41f0a5:	lods   eax,DWORD PTR ds:[esi]
  41f0a6:	dec    ecx
  41f0a7:	int3   
  41f0a8:	lahf   
  41f0a9:	outs   dx,DWORD PTR ds:[esi]
  41f0aa:	addr16 jns 0x41f0d6
  41f0ad:	jmp    0x7a870adf
  41f0b2:	aaa    
  41f0b3:	lock add al,dl
  41f0b6:	jecxz  0x41f053
  41f0b8:	inc    eax
  41f0b9:	mov    ds:0x8688badf,al
  41f0be:	out    dx,al
  41f0bf:	push   0x7052107e
  41f0c4:	repz cmp al,0xf0
  41f0c7:	icebp  
  41f0c8:	push   ecx
  41f0c9:	mov    ecx,DWORD PTR [ebx]
  41f0cb:	dec    ebp
  41f0cc:	int3   
  41f0cd:	rol    DWORD PTR [eax-0x5f9ed1f2],0xb1
  41f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0d5:	dec    edi
  41f0d6:	push   0xffffffc1
  41f0d8:	cmp    BYTE PTR [edi],0xe3
  41f0db:	pop    ecx
  41f0dc:	jne    0x41f0a8
  41f0de:	sub    eax,0xd1214065
  41f0e3:	arpl   bx,bp
  41f0e5:	add    cl,BYTE PTR [ebp-0x50e9d48f]
  41f0eb:	jns    0x41f0a5
  41f0ed:	sbb    dl,BYTE PTR [ebp-0x2f]
  41f0f0:	mov    dh,0xd2
  41f0f2:	push   ds
  41f0f3:	dec    ecx
  41f0f4:	(bad)
  41f0f9:	sbb    esi,esi
  41f0fb:	jmp    0x41f0a8
  41f0fd:	je     0x41f0e8
  41f0ff:	das    
  41f100:	or     edi,ecx
  41f102:	pop    ss
  41f103:	and    al,0x48
  41f105:	jmp    0xff1b:0xec6aeeda
  41f10c:	push   0xffffffdc
  41f10e:	mov    esi,0xff9137b5
  41f113:	push   ebx
  41f114:	in     eax,dx
  41f115:	jecxz  0x41f10b
  41f117:	adc    al,0x3e
  41f119:	fcmovnbe st,st(0)
  41f11b:	and    al,0x21
  41f11d:	inc    esp
  41f11e:	mov    ds:0xc279462c,eax
  41f123:	inc    edi
  41f124:	js     0x41f127
  41f126:	into   
  41f127:	sbb    eax,0x2d03824a
  41f12c:	jl     0x41f0ec
  41f12e:	scas   eax,DWORD PTR es:[edi]
  41f12f:	jmp    0xdcca:0x52ca66b7
  41f136:	add    BYTE PTR [eax-0x5aa9f846],0x81
  41f13d:	dec    ebx
  41f13e:	pop    es
  41f13f:	cld    
  41f140:	xor    ch,BYTE PTR [edi+0x798e992]
  41f146:	mov    edi,0xfdf34a3a
  41f14b:	cmc    
  41f14c:	xor    al,0xfb
  41f14e:	mov    ch,BYTE PTR [edi+ebx*8+0x2d479e37]
  41f155:	mov    ebp,0xb8a8bb13
  41f15a:	sbb    ecx,ecx
  41f15c:	clc    
  41f15d:	pop    ecx
  41f15e:	sub    DWORD PTR [edx-0x59aca310],ecx
  41f164:	(bad)  
  41f165:	aaa    
  41f166:	fisubr DWORD PTR [ebx]
  41f168:	dec    ebp
  41f169:	imul   edx,ecx,0x7471db92
  41f16f:	inc    edx
  41f170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f172:	push   ebx
  41f173:	ins    DWORD PTR es:[edi],dx
  41f174:	dec    ecx
  41f175:	jg     0x41f189
  41f177:	xchg   edx,eax
  41f178:	sbb    BYTE PTR [edi+0x29bb74da],ch
  41f17e:	repz cmp DWORD PTR [edi-0x16],esi
  41f182:	shl    BYTE PTR [ebp-0x26],0x39
  41f186:	jae    0x41f137
  41f188:	inc    edx
  41f189:	pop    edi
  41f18a:	retf   0xc6fe
  41f18d:	cmp    edi,DWORD PTR [eax+0x57]
  41f190:	ficom  DWORD PTR [edi+0x27]
  41f193:	sbb    al,0x4b
  41f195:	xlat   BYTE PTR ds:[ebx]
  41f196:	stos   DWORD PTR es:[edi],eax
  41f197:	cld    
  41f198:	dec    edi
  41f199:	dec    edi
  41f19a:	push   ebp
  41f19b:	loop   0x41f1bb
  41f19d:	fprem1 
  41f19f:	test   DWORD PTR [eax+0x2c],esi
  41f1a2:	ret    0x2bb
  41f1a5:	push   ebp
  41f1a6:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41f1a8:	mov    ah,0xa4
  41f1aa:	inc    DWORD PTR [eax-0x7e5d7aff]
  41f1b0:	cs sub eax,eax
  41f1b3:	xor    eax,0xa6d86f21
  41f1b8:	xchg   BYTE PTR [eax+eax*1-0x22],ch
  41f1bc:	icebp  
  41f1bd:	xor    DWORD PTR [eax-0x5a0ed66f],eax
  41f1c3:	call   0x8a4e0b83
  41f1c8:	xchg   BYTE PTR [esi-0x3],cl
  41f1cb:	fidiv  DWORD PTR [ecx-0x46]
  41f1ce:	mov    BYTE PTR [ecx-0x2445f15],bl
  41f1d4:	inc    esi
  41f1d5:	mov    ds:0xbf9963c2,eax
  41f1da:	cmp    al,0x66
  41f1dc:	inc    ebx
  41f1dd:	aad    0x9f
  41f1df:	cwde   
  41f1e0:	fsubr  QWORD PTR [ecx]
  41f1e2:	idiv   edx
  41f1e4:	mov    ah,0xcd
  41f1e6:	cwde   
  41f1e7:	push   ecx
  41f1e8:	adc    ch,BYTE PTR [ecx]
  41f1ea:	cdq    
  41f1eb:	bound  edi,QWORD PTR [esi+0x24404025]
  41f1f1:	adc    BYTE PTR ds:0xcb467f40,dl
  41f1f7:	arpl   WORD PTR [edx+ecx*1-0x167d9120],dx
  41f1fe:	ret    
  41f1ff:	test   al,0xdb
  41f201:	mov    ah,0x50
  41f203:	in     eax,dx
  41f204:	adc    eax,0x97aff2ea
  41f209:	or     dh,BYTE PTR [eax+0x55c4c5ae]
  41f20f:	xchg   esi,eax
  41f210:	adc    BYTE PTR [ebx-0x7f],0x88
  41f214:	stos   DWORD PTR es:[edi],eax
  41f215:	stc    
  41f216:	cmp    eax,0x18422974
  41f21b:	xlat   BYTE PTR ds:[ebx]
  41f21c:	inc    edi
  41f21d:	jl     0x41f293
  41f21f:	pop    esp
  41f220:	daa    
  41f221:	mov    bh,0x9d
  41f223:	pop    edi
  41f224:	jno    0x41f27b
  41f226:	je     0x41f294
  41f228:	aaa    
  41f229:	inc    esi
  41f22a:	xor    al,0x80
  41f22c:	adc    DWORD PTR [ebx-0x24],esi
  41f22f:	out    0xff,al
  41f231:	rcl    esi,1
  41f233:	jae    0x41f245
  41f235:	outs   dx,DWORD PTR ds:[esi]
  41f236:	add    DWORD PTR [edi+0x5218116],ecx
  41f23c:	xchg   edx,eax
  41f23d:	mov    WORD PTR [edi+0x7e],?
  41f240:	cmp    DWORD PTR [edi],edi
  41f242:	xor    dh,bl
  41f244:	lahf   
  41f245:	rcr    ch,0x3a
  41f248:	xor    BYTE PTR [edi],ch
  41f24a:	mov    BYTE PTR [eax+0x3e],dh
  41f24d:	mov    edi,0x668f6d81
  41f252:	inc    edx
  41f253:	jp     0x41f297
  41f255:	cld    
  41f256:	aam    0x29
  41f258:	lds    esi,FWORD PTR [edi]
  41f25a:	add    DWORD PTR [edi-0x3350e8e3],0xfaeec80f
  41f264:	arpl   WORD PTR [ecx*8-0x54ae43fb],cx
  41f26b:	fcomp  QWORD PTR [edx+ebx*2+0x73]
  41f26f:	lock push ecx
  41f271:	mov    cl,0x83
  41f273:	enter  0x50a1,0x8a
  41f277:	mov    al,0x69
  41f279:	sub    al,0x84
  41f27b:	mov    edi,0xa4636e2a
  41f280:	and    dh,dl
  41f282:	mov    ah,BYTE PTR [esi+0x35]
  41f285:	gs in  al,0x15
  41f288:	(bad)  
  41f289:	out    dx,eax
  41f28a:	in     al,0xc9
  41f28c:	dec    ebx
  41f28d:	push   0xf40b3c70
  41f292:	jno    0x41f2e9
  41f294:	rcl    ebp,cl
  41f296:	test   esi,ebp
  41f298:	pusha  
  41f299:	scas   al,BYTE PTR es:[edi]
  41f29a:	pop    es
  41f29b:	lock dec esp
  41f29d:	xchg   DWORD PTR [edi],esi
  41f29f:	jg     0x41f294
  41f2a1:	and    al,0xbf
  41f2a3:	or     cl,BYTE PTR [edi-0x13973c39]
  41f2a9:	mul    BYTE PTR [ecx-0x1e]
  41f2ac:	cli    
  41f2ad:	pop    ebx
  41f2ae:	popa   
  41f2af:	add    DWORD PTR [ecx-0x1c157e66],esi
  41f2b5:	xchg   edx,eax
  41f2b6:	retf   
  41f2b7:	jae    0x41f337
  41f2b9:	push   esp
  41f2ba:	ror    ch,0x92
  41f2bd:	push   ebp
  41f2be:	and    edx,ebx
  41f2c0:	jo     0x41f325
  41f2c2:	jbe    0x41f273
  41f2c4:	xor    ch,al
  41f2c6:	pop    ebx
  41f2c7:	retf   
  41f2c8:	popa   
  41f2c9:	repnz mov dh,0x3a
  41f2cc:	ins    BYTE PTR es:[edi],dx
  41f2cd:	clc    
  41f2ce:	das    
  41f2cf:	xchg   edi,eax
  41f2d0:	jmp    0xacf2:0x8114c236
  41f2d7:	adc    DWORD PTR ds:0x29388062,ebx
  41f2dd:	repz mov bl,dl
  41f2e0:	dec    ecx
  41f2e1:	mov    BYTE PTR [esi],cl
  41f2e3:	mov    ebp,esi
  41f2e5:	jne    0x41f2a7
  41f2e7:	and    eax,0x6034a0c5
  41f2ec:	call   0x27f2b07e
  41f2f1:	add    al,0x58
  41f2f3:	scas   eax,DWORD PTR es:[edi]
  41f2f4:	cwde   
  41f2f5:	in     eax,0xdd
  41f2f7:	adc    al,0xea
  41f2f9:	lock fist WORD PTR [edx]
  41f2fc:	ds cdq 
  41f2fe:	aam    0xb
  41f300:	cmp    esi,DWORD PTR [ecx-0x5797c885]
  41f306:	or     eax,DWORD PTR [esi]
  41f308:	cwde   
  41f309:	lds    esp,FWORD PTR [ebx+0x59]
  41f30c:	aam    0x35
  41f30e:	icebp  
  41f30f:	mov    bh,0x4e
  41f311:	mov    ah,0x44
  41f313:	clc    
  41f314:	lock xor BYTE PTR [ebx],bh
  41f317:	sti    
  41f318:	adc    al,0x72
  41f31a:	aas    
  41f31b:	das    
  41f31c:	cmp    eax,esp
  41f31e:	lods   eax,DWORD PTR ds:[esi]
  41f31f:	outs   dx,DWORD PTR ds:[esi]
  41f320:	dec    esp
  41f321:	call   0x4d50ffd0
  41f326:	ja     0x41f35d
  41f328:	dec    ebx
  41f329:	pushf  
  41f32a:	aam    0xe7
  41f32c:	out    dx,eax
  41f32d:	inc    ecx
  41f32e:	or     ah,dl
  41f330:	mov    ds:0xab5bc32b,eax
  41f335:	jne    0x41f39b
  41f337:	cmp    al,0xea
  41f339:	dec    ecx
  41f33a:	call   0xdf1b:0xd38d6f50
  41f341:	dec    ebp
  41f342:	std    
  41f343:	test   al,0x4
  41f345:	cmp    BYTE PTR ds:0x6c2b24e8,al
  41f34c:	mov    eax,DWORD PTR [esi+0x7]
  41f34f:	test   al,0x39
  41f351:	adc    esi,DWORD PTR [ecx-0x4fcae1d6]
  41f357:	pusha  
  41f358:	push   0x0
  41f35a:	inc    eax
  41f35b:	fdivr  QWORD PTR [eax]
  41f35d:	je     0x41f367
  41f35f:	daa    
  41f360:	dec    edi
  41f361:	mov    eax,DWORD PTR [ebx-0x68e800d5]
  41f367:	mov    WORD PTR [edi+esi*4],gs
  41f36a:	xor    edx,DWORD PTR [eax+0x76]
  41f36d:	sahf   
  41f36e:	mov    ah,0x44
  41f370:	pop    edi
  41f371:	mov    esp,0xf22daec
  41f376:	cmp    bl,BYTE PTR [eax-0x27537459]
  41f37c:	fst    st(7)
  41f37e:	sti    
  41f37f:	pop    ebp
  41f380:	sub    eax,ebp
  41f382:	and    eax,0x744c01dc
  41f387:	mov    eax,ds:0xfa094b9c
  41f38c:	scas   eax,DWORD PTR es:[edi]
  41f38d:	imul   ebp,DWORD PTR [esp+ebp*8],0x74
  41f391:	xchg   DWORD PTR [esi],ebp
  41f393:	mov    ebp,0x9c928196
  41f398:	stc    
  41f399:	ja     0x41f3fa
  41f39b:	shl    DWORD PTR [edi+eax*4-0x66b65e09],1
  41f3a2:	scas   eax,DWORD PTR es:[edi]
  41f3a3:	jle    0x41f333
  41f3a5:	jmp    0xa12e018f
  41f3aa:	stc    
  41f3ab:	or     esp,DWORD PTR [ebx+esi*1-0x17]
  41f3af:	xor    ch,BYTE PTR [ecx+0x1a6a9d2f]
  41f3b5:	imul   ebx,edx,0x796a6c1
  41f3bb:	jns    0x41f3ec
  41f3bd:	sbb    DWORD PTR [eax],esp
  41f3bf:	push   edx
  41f3c0:	sub    al,0xca
  41f3c2:	cmc    
  41f3c3:	stos   BYTE PTR es:[edi],al
  41f3c4:	mov    cl,0x45
  41f3c6:	adc    BYTE PTR [edx],dh
  41f3c8:	mov    esi,0x35b5468f
  41f3cd:	dec    ecx
  41f3ce:	ret    0xd3f0
  41f3d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3d2:	push   edi
  41f3d3:	sbb    edx,DWORD PTR [ebp-0x49]
  41f3d6:	cmp    DWORD PTR [ebp+0x1a8fb036],ebp
  41f3dc:	sar    BYTE PTR [esi+0xc8ef3f1],1
  41f3e2:	(bad)  
  41f3e3:	setg   BYTE PTR [esi+0x3bb2d834]
  41f3ea:	idiv   BYTE PTR [edx-0x23]
  41f3ed:	sbb    ebp,edi
  41f3ef:	into   
  41f3f0:	stos   BYTE PTR es:[edi],al
  41f3f1:	sbb    al,0x5b
  41f3f3:	lods   eax,DWORD PTR ds:[esi]
  41f3f4:	adc    eax,0x479c9dca
  41f3f9:	or     eax,0xe133f921
  41f3fe:	aas    
  41f3ff:	icebp  
  41f400:	cld    
  41f401:	scas   eax,DWORD PTR es:[edi]
  41f402:	sbb    al,0x6b
  41f404:	jg     0x41f3a6
  41f406:	xchg   ebp,eax
  41f407:	or     DWORD PTR fs:[edx+ecx*2+0x541c437],esp
  41f40f:	pop    ecx
  41f410:	repz sbb bl,BYTE PTR [edi-0x228faa71]
  41f417:	bound  esp,QWORD PTR [eax]
  41f419:	dec    ecx
  41f41a:	mov    ecx,0xf41957d1
  41f41f:	adc    al,0xfc
  41f421:	test   BYTE PTR es:[edi-0x63650cc9],bh
  41f428:	int3   
  41f429:	popa   
  41f42a:	ficomp WORD PTR [ecx]
  41f42c:	mov    WORD PTR [eax],fs
  41f42e:	mov    ds:0xcb242271,eax
  41f433:	cmp    edx,ebx
  41f435:	mov    eax,ecx
  41f437:	jae    0x41f48f
  41f439:	ror    DWORD PTR [esi+0x264a528f],0x20
  41f440:	pop    ebp
  41f441:	add    bh,0xb0
  41f444:	aam    0x71
  41f446:	into   
  41f447:	mov    edi,0xeff1ee50
  41f44c:	or     BYTE PTR [ebp+0x23a90d0d],0x99
  41f453:	setge  BYTE PTR [edi-0x2e]
  41f457:	hlt    
  41f458:	nop
  41f459:	add    DWORD PTR [ebx-0x61],ecx
  41f45c:	sbb    bh,BYTE PTR [edx-0x757387e7]
  41f462:	dec    ebx
  41f463:	out    dx,eax
  41f464:	cld    
  41f465:	dec    ebp
  41f466:	dec    esi
  41f467:	bound  ecx,QWORD PTR [ecx]
  41f469:	push   ebx
  41f46a:	cld    
  41f46b:	adc    eax,0xd31fb724
  41f470:	aam    0xda
  41f472:	das    
  41f473:	pop    ecx
  41f474:	jmp    0x41f4ae
  41f476:	stos   DWORD PTR es:[edi],eax
  41f477:	push   ebx
  41f478:	sbb    DWORD PTR ds:[edi+ebp*8+0x4d],ebx
  41f47d:	add    eax,0x3610b441
  41f482:	push   0x866e7b2e
  41f487:	ins    DWORD PTR es:[edi],dx
  41f488:	outs   dx,BYTE PTR ds:[esi]
  41f489:	rcl    bh,0x3f
  41f48c:	fisubr WORD PTR [ecx+edx*2]
  41f48f:	retf   0x98e6
  41f492:	fld    QWORD PTR [ebp+0x52239d35]
  41f498:	inc    edx
  41f499:	repz aad 0x4f
  41f49c:	mov    esp,0x5836e288
  41f4a1:	(bad)  
  41f4a2:	aad    0x56
  41f4a4:	and    cl,BYTE PTR [eax-0x3214f643]
  41f4aa:	icebp  
  41f4ab:	ins    BYTE PTR es:[edi],dx
  41f4ac:	aaa    
  41f4ad:	mov    DWORD PTR [ebx-0x25d25b8d],0x8cba072f
  41f4b7:	xchg   DWORD PTR [edx-0x6f],esp
  41f4ba:	ja     0x41f4cb
  41f4bc:	out    0xaa,eax
  41f4be:	les    edi,FWORD PTR [eax-0x11]
  41f4c1:	jecxz  0x41f458
  41f4c3:	dec    BYTE PTR [ecx-0x5dab418d]
  41f4c9:	inc    esp
  41f4ca:	add    eax,0x9f0f1b8e
  41f4cf:	out    dx,eax
  41f4d0:	hlt    
  41f4d1:	(bad)  
  41f4d3:	into   
  41f4d4:	jb     0x41f4a2
  41f4d6:	outs   dx,DWORD PTR ds:[esi]
  41f4d7:	or     eax,0x1d8bbea4
  41f4dc:	push   cs
  41f4dd:	and    DWORD PTR [ecx+0x7ba859c0],edx
  41f4e3:	push   edx
  41f4e4:	(bad)  
  41f4e5:	clc    
  41f4e6:	in     al,dx
  41f4e7:	pop    edx
  41f4e8:	pop    ebx
  41f4e9:	inc    esp
  41f4ea:	(bad)  
  41f4eb:	shl    DWORD PTR [edi],1
  41f4ed:	xlat   BYTE PTR ds:[ebx]
  41f4ee:	jmp    0x84942121
  41f4f3:	inc    edi
  41f4f4:	lahf   
  41f4f5:	sub    al,0xbd
  41f4f7:	test   bl,bh
  41f4f9:	addr16 mov edi,0x9ef4d419
  41f4ff:	lea    esi,[ecx]
  41f501:	pop    edi
  41f502:	inc    eax
  41f503:	ror    DWORD PTR [ebp+0x3efe45b4],0x85
  41f50a:	push   ds
  41f50b:	add    BYTE PTR [ecx],bh
  41f50d:	mul    BYTE PTR [eax+edi*4-0x545368ce]
  41f514:	outs   dx,DWORD PTR ds:[esi]
  41f515:	rcr    DWORD PTR [esi],0xc7
  41f518:	ins    DWORD PTR es:[edi],dx
  41f519:	push   cs
  41f51a:	push   ss
  41f51b:	inc    ebp
  41f51c:	mov    ecx,0x4cc49926
  41f521:	dec    esp
  41f522:	rol    BYTE PTR [edi-0x4a],1
  41f525:	int3   
  41f526:	inc    eax
  41f527:	or     BYTE PTR [edi+eiz*4+0x21],0x2a
  41f52c:	push   edi
  41f52d:	pop    esp
  41f52e:	in     eax,dx
  41f52f:	mov    ds:0xb83b3e5a,eax
  41f534:	shl    DWORD PTR [edx+0x7c],1
  41f537:	sbb    DWORD PTR [eax-0x7c745f6b],esi
  41f53d:	and    bh,BYTE PTR [edi]
  41f53f:	push   0x3b
  41f541:	sub    DWORD PTR [edi+0xedf6278],edi
  41f547:	xchg   esp,eax
  41f548:	push   ebp
  41f549:	pop    esi
  41f54a:	inc    esi
  41f54b:	jnp    0x41f570
  41f54d:	cld    
  41f54e:	dec    edi
  41f54f:	xor    bh,BYTE PTR [eax]
  41f551:	fmulp  st(6),st
  41f553:	test   bh,cl
  41f555:	mov    ch,0x38
  41f557:	int    0x4a
  41f559:	dec    esp
  41f55a:	loope  0x41f572
  41f55c:	mov    ecx,0x1a00f4ba
  41f561:	stc    
  41f562:	sbb    DWORD PTR [eax-0x33ffde2b],edi
  41f568:	ja     0x41f53d
  41f56a:	in     al,0x31
  41f56c:	add    al,0xc8
  41f56e:	mov    dh,BYTE PTR [ecx+0x147ba173]
  41f574:	daa    
  41f575:	jecxz  0x41f5ac
  41f577:	cmp    bl,bl
  41f579:	dec    ecx
  41f57a:	bound  esp,QWORD PTR [edx-0x1]
  41f57d:	pop    esi
  41f57e:	xchg   esi,eax
  41f57f:	sbb    al,0xd8
  41f581:	pop    ss
  41f582:	fadd   QWORD PTR [eax+0x76830702]
  41f588:	push   ecx
  41f589:	sbb    bh,BYTE PTR [eax+0x59353dc3]
  41f58f:	sub    BYTE PTR [esi],al
  41f591:	hlt    
  41f592:	xor    esp,edx
  41f594:	stc    
  41f595:	push   edx
  41f596:	jge    0x41f550
  41f598:	in     al,0x3c
  41f59a:	test   al,0xb8
  41f59c:	(bad)  
  41f59d:	dec    esp
  41f59e:	imul   BYTE PTR [ecx-0x5447760]
  41f5a4:	and    esi,DWORD PTR [eax+0x30]
  41f5a7:	data16 loope 0x41f534
  41f5aa:	mov    cl,0x57
  41f5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5ad:	(bad)  
  41f5ae:	mov    edx,0x25e6a527
  41f5b3:	add    esi,DWORD PTR [esi-0x74c9de9e]
  41f5b9:	xor    ecx,DWORD PTR [ebp-0x62]
  41f5bc:	repz fs add al,0xda
  41f5c0:	xor    BYTE PTR [ebx+0x2168680],0x6b
  41f5c7:	sub    ecx,DWORD PTR [edx+ebx*4-0x78]
  41f5cb:	sar    DWORD PTR [esi],0x54
  41f5ce:	popa   
  41f5cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5d0:	and    cl,BYTE PTR [esi-0x16]
  41f5d3:	xor    bl,BYTE PTR [ebx-0x78]
  41f5d6:	hlt    
  41f5d7:	cmp    dh,BYTE PTR [ecx+0x26af09fb]
  41f5dd:	mov    esi,DWORD PTR [ebx-0x63]
  41f5e0:	push   cs
  41f5e1:	arpl   WORD PTR [ecx+0x7d],cx
  41f5e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5e5:	jmp    0x41f5ee
  41f5e7:	push   eax
  41f5e8:	loop   0x41f596
  41f5ea:	jbe    0x41f61d
  41f5ec:	mov    al,ds:0x149e05eb
  41f5f1:	(bad)  ds:0xf9f539f1
  41f5f7:	mov    ebp,0x3f08618b
  41f5fc:	mov    al,ds:0xbf628ec
  41f601:	ins    BYTE PTR es:[edi],dx
  41f602:	dec    ebx
  41f603:	imul   edi,DWORD PTR [ebp+0x46ad0206],0x9c136fe6
  41f60d:	mov    ah,0x36
  41f60f:	retf   
  41f610:	jge    0x41f5cc
  41f612:	std    
  41f613:	mov    DWORD PTR [edx+eax*8+0x594461fa],edi
  41f61a:	aaa    
  41f61b:	inc    edi
  41f61c:	push   ss
  41f61d:	(bad)  
  41f61e:	adc    al,BYTE PTR ds:0x90daca33
  41f624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f625:	and    esi,DWORD PTR [eax+0x64a11a70]
  41f62b:	ins    BYTE PTR es:[edi],dx
  41f62c:	das    
  41f62d:	cmp    eax,eax
  41f62f:	sub    edx,edx
  41f631:	aaa    
  41f632:	mov    cl,0x44
  41f634:	mov    eax,cs:0x6461d772
  41f63a:	xlat   BYTE PTR ds:[ebx]
  41f63b:	or     edi,0x7
  41f63e:	out    0xdf,al
  41f640:	and    al,BYTE PTR [edi+0x2b3b0cfa]
  41f646:	lahf   
  41f647:	in     al,dx
  41f648:	sbb    bh,dl
  41f64a:	mov    WORD PTR [ebx],ds
  41f64c:	fcom   QWORD PTR [edx+edi*8]
  41f64f:	mov    edi,0x131c7a69
  41f654:	arpl   WORD PTR ds:0x1dc6dd0,cx
  41f65a:	sar    cl,cl
  41f65c:	ins    DWORD PTR es:[edi],dx
  41f65d:	lahf   
  41f65e:	fnstenv es:[edi-0x7b]
  41f662:	adc    al,0x24
  41f664:	imul   esp,DWORD PTR [edi],0xffffffcf
  41f667:	mov    bh,BYTE PTR [ebp+0x5a3f7171]
  41f66d:	retf   
  41f66e:	scas   eax,DWORD PTR es:[edi]
  41f66f:	cmp    esi,DWORD PTR [edi+ebp*8-0x9448ab]
  41f676:	lock scas eax,DWORD PTR es:[edi]
  41f678:	add    al,0x71
  41f67b:	adc    edx,DWORD PTR [ebp+0x1d]
  41f67e:	ins    DWORD PTR es:[edi],dx
  41f67f:	mov    DWORD PTR [ecx],esp
  41f681:	xor    DWORD PTR [esi],esi
  41f683:	in     eax,0x58
  41f685:	adc    DWORD PTR [ecx+edx*2-0x60b470c0],edi
  41f68c:	in     eax,0x42
  41f68e:	sub    edx,edi
  41f690:	call   0xb4d0:0xfe19b013
  41f697:	push   ebx
  41f698:	shr    edi,1
  41f69a:	icebp  
  41f69b:	ins    BYTE PTR es:[edi],dx
  41f69c:	fs ret 0x955
  41f6a0:	or     eax,0x7859dc76
  41f6a5:	jae    0x41f630
  41f6a7:	mov    esi,0xe4412dcc
  41f6ac:	loop   0x41f692
  41f6ae:	push   esi
  41f6af:	aaa    
  41f6b0:	jo     0x41f6ac
  41f6b2:	enter  0x80c8,0xb
  41f6b6:	outs   dx,DWORD PTR ds:[esi]
  41f6b7:	mov    ds:0x42e151e5,eax
  41f6bc:	mov    ?,WORD PTR [esi]
  41f6be:	inc    esi
  41f6bf:	cmc    
  41f6c0:	mov    ds:0x840e88b7,al
  41f6c5:	push   cs
  41f6c6:	push   ebp
  41f6c7:	sahf   
  41f6c8:	mov    ch,0xe5
  41f6ca:	daa    
  41f6cb:	jnp    0x41f65c
  41f6cd:	ret    
  41f6ce:	pop    esi
  41f6cf:	mov    ah,0xcb
  41f6d1:	sbb    eax,0xb7a493a9
  41f6d6:	and    bh,ah
  41f6d8:	xor    BYTE PTR [edi],0x5a
  41f6db:	jbe    0x41f72a
  41f6dd:	pop    esi
  41f6de:	jecxz  0x41f75d
  41f6e0:	add    DWORD PTR ds:0x48c0983e,esi
  41f6e6:	aas    
  41f6e7:	lods   al,BYTE PTR ds:[esi]
  41f6e8:	shr    BYTE PTR [ebp+0x76],1
  41f6eb:	sbb    esp,DWORD PTR [esi]
  41f6ed:	jmp    0x42ff:0xeeabe6c7
  41f6f4:	push   ebp
  41f6f5:	dec    esp
  41f6f6:	sub    DWORD PTR [edi],0xffffffd4
  41f6f9:	cmp    eax,DWORD PTR [ebp+0x312f0aa5]
  41f6ff:	in     al,dx
  41f700:	out    0xe8,al
  41f702:	fsubp  st(0),st
  41f704:	mov    esp,0x440d9aaf
  41f709:	pop    esi
  41f70a:	iret   
  41f70b:	push   ss
  41f70c:	and    bh,BYTE PTR [esp+eax*2]
  41f70f:	aas    
  41f710:	adc    ebx,DWORD PTR [ebp-0x2f49b4fe]
  41f716:	test   BYTE PTR [esi-0x4cfc0e2e],bh
  41f71c:	dec    eax
  41f71d:	out    0x53,eax
  41f71f:	xor    esp,edx
  41f721:	adc    esp,ecx
  41f723:	inc    edi
  41f724:	dec    ebp
  41f725:	lds    edi,FWORD PTR ds:[ebp-0x328b5b7e]
  41f72c:	xchg   esp,eax
  41f72d:	sub    ch,BYTE PTR es:[ecx-0x65cd66b8]
  41f734:	enter  0xa385,0x2
  41f738:	hlt    
  41f739:	mov    ah,0xf9
  41f73b:	fld    QWORD PTR [ecx-0x5a66e0ef]
  41f741:	jle    0x41f75c
  41f743:	cdq    
  41f744:	xor    eax,0xf9961c13
  41f749:	push   ds
  41f74a:	sub    ah,BYTE PTR [ecx+0x5200f89f]
  41f750:	iret   
  41f751:	or     edi,DWORD PTR [ebp-0x412cb4ed]
  41f757:	ja     0x41f733
  41f759:	rol    DWORD PTR [edi],0x26
  41f75c:	loop   0x41f78a
  41f75e:	in     eax,dx
  41f75f:	int    0xd3
  41f761:	sti    
  41f762:	outs   dx,BYTE PTR ds:[esi]
  41f763:	std    
  41f764:	push   ss
  41f765:	cmp    BYTE PTR [esi+0x70],dl
  41f768:	jmp    0x480c:0xec060fab
  41f76f:	jo     0x41f7bf
  41f771:	fs int3 
  41f773:	jae    0x41f75b
  41f775:	jae    0x41f6f8
  41f777:	jmp    0x9c3bc52c
  41f77c:	pop    eax
  41f77d:	dec    esi
  41f77e:	pop    ebx
  41f77f:	and    BYTE PTR [ebp+0x6e],cl
  41f782:	stos   DWORD PTR es:[edi],eax
  41f783:	cmc    
  41f784:	mov    edi,0xe55a053d
  41f789:	lds    ebp,FWORD PTR [edi]
  41f78b:	sar    DWORD PTR [ebp-0x51],0x56
  41f78f:	mov    al,ds:0xf47fe823
  41f794:	and    eax,0x89db0f36
  41f799:	lock inc eax
  41f79b:	jp     0x41f753
  41f79d:	loope  0x41f7f2
  41f79f:	int3   
  41f7a0:	nop
  41f7a1:	(bad)  
  41f7a2:	stc    
  41f7a3:	(bad)  
  41f7a4:	(bad)  [esi-0x5f6bfb07]
  41f7aa:	rcr    BYTE PTR [edi-0x1dda6648],0xa4
  41f7b1:	scas   eax,DWORD PTR es:[edi]
  41f7b2:	mov    eax,0xcdb0d901
  41f7b7:	int    0x7b
  41f7b9:	dec    esp
  41f7ba:	push   ebx
  41f7bb:	adc    al,0xb5
  41f7bd:	xlat   BYTE PTR ds:[ebx]
  41f7be:	stos   DWORD PTR es:[edi],eax
  41f7bf:	in     al,dx
  41f7c0:	sub    dl,BYTE PTR [esi-0x3d8f8ba5]
  41f7c6:	(bad)  
  41f7c8:	and    al,0x17
  41f7ca:	inc    ecx
  41f7cb:	test   BYTE PTR [ebx+0x1fc731a5],bh
  41f7d1:	fsub   DWORD PTR [edx]
  41f7d3:	sub    esp,DWORD PTR [ebx]
  41f7d5:	(bad)
  41f7d9:	int3   
  41f7da:	inc    eax
  41f7db:	add    BYTE PTR [edi+0x58],dl
  41f7de:	mov    cl,0x4b
  41f7e0:	jmp    0xec634e35
  41f7e5:	ds mov bl,0xa5
  41f7e8:	retf   
  41f7e9:	and    ebp,DWORD PTR [esi+0x67]
  41f7ec:	adc    BYTE PTR [edi-0x663bf405],ch
  41f7f2:	in     eax,0x11
  41f7f4:	sbb    al,0xd9
  41f7f6:	ja     0x41f82e
  41f7f8:	sbb    al,0xc4
  41f7fa:	imul   esp,DWORD PTR [esi+0x6b24d0b7],0x7b
  41f801:	or     DWORD PTR [esi],eax
  41f803:	mov    ds:0x6df3b36b,eax
  41f808:	lea    esi,[edi+0x994b354]
  41f80e:	pop    esp
  41f80f:	mov    ecx,0x620f44cc
  41f814:	movhps xmm6,QWORD PTR [eax-0x34]
  41f818:	fist   WORD PTR [edi+0x62]
  41f81b:	xor    BYTE PTR [edx+edx*2],cl
  41f81e:	sub    ch,BYTE PTR [ebp+ecx*4+0x786a7e98]
  41f825:	xchg   edx,eax
  41f826:	int3   
  41f827:	cmp    al,0x25
  41f829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f82a:	mov    esp,0xd55164e
  41f82f:	adc    BYTE PTR [ecx],ah
  41f831:	ja     0x41f7be
  41f833:	ins    DWORD PTR es:[edi],dx
  41f834:	iret   
  41f835:	inc    ebp
  41f836:	hlt    
  41f837:	add    DWORD PTR [ebp+edi*2-0x261761cc],edi
  41f83e:	addr16 pushf 
  41f840:	push   0xf53d06b2
  41f845:	dec    edx
  41f846:	dec    esp
  41f847:	pushf  
  41f848:	pop    ds
  41f849:	pop    edi
  41f84a:	jne    0x41f7ed
  41f84c:	xchg   esp,eax
  41f84d:	lea    esp,[esi]
  41f84f:	arpl   WORD PTR [eax+eiz*8+0x739b736],sp
  41f856:	jg     0x41f7f4
  41f858:	inc    ecx
  41f859:	(bad)  
  41f85b:	sar    BYTE PTR [ebx-0x70],0x5f
  41f85f:	push   eax
  41f860:	adc    al,0xb3
  41f862:	jo     0x41f88c
  41f864:	add    BYTE PTR [esp+eax*1],ch
  41f867:	das    
  41f868:	jne    0x41f856
  41f86a:	xor    BYTE PTR ds:0xee0e9f73,0x81
  41f871:	sub    DWORD PTR fs:[eax],eax
  41f874:	pop    ebp
  41f875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f876:	mov    ebx,0xc11ff0b8
  41f87b:	das    
  41f87c:	or     eax,0x398be8f4
  41f881:	push   ds
  41f882:	sub    edx,ebp
  41f884:	call   0x8e01:0x31d4feab
  41f88b:	dec    ebx
  41f88c:	jne    0x41f8cf
  41f88e:	inc    ebx
  41f88f:	test   eax,0xeb77e42
  41f894:	inc    esp
  41f895:	adc    eax,0xfd97668e
  41f89a:	xor    al,0x30
  41f89c:	sub    DWORD PTR [edi+eiz*4+0x6468fb04],ebx
  41f8a3:	out    0x8a,al
  41f8a5:	mov    ebp,0xe7bf6e7d
  41f8aa:	push   esp
  41f8ab:	movhps QWORD PTR [eax+0x18],xmm2
  41f8af:	fldcw  WORD PTR [eax]
  41f8b1:	xor    edx,DWORD PTR [esi]
  41f8b3:	scas   al,BYTE PTR es:[edi]
  41f8b4:	pop    ss
  41f8b5:	arpl   WORD PTR [ecx+edx*8-0x71],bp
  41f8b9:	mov    BYTE PTR [ebx-0x7f667feb],dl
  41f8bf:	sahf   
  41f8c0:	fisubr WORD PTR [ebx+0x68070bd0]
  41f8c6:	(bad)  
  41f8c7:	sbb    al,0x5a
  41f8c9:	fistp  QWORD PTR [ebx-0x6c]
  41f8cc:	mov    al,0xc5
  41f8ce:	adc    BYTE PTR [edi+0x58],0xcb
  41f8d2:	adc    eax,0x630356d
  41f8d7:	sub    DWORD PTR [esp+eax*8-0x2d37e86c],0xb71a2685
  41f8e2:	and    ecx,ebp
  41f8e4:	mov    ch,0xbf
  41f8e6:	inc    ecx
  41f8e7:	cli    
  41f8e8:	dec    ebx
  41f8e9:	xchg   ebx,eax
  41f8ea:	sbb    al,0xd4
  41f8ec:	out    dx,al
  41f8ed:	and    al,0xdb
  41f8ef:	xlat   BYTE PTR ds:[ebx]
  41f8f0:	data16 or ah,ch
  41f8f3:	outs   dx,DWORD PTR ds:[esi]
  41f8f4:	add    al,0x2d
  41f8f6:	cmp    eax,ecx
  41f8f8:	repnz or al,0xa4
  41f8fb:	pop    edx
  41f8fc:	jae    0x41f970
  41f8fe:	fadd   DWORD PTR [esi+edi*8+0x24]
  41f902:	pop    ebp
  41f903:	das    
  41f904:	scas   eax,DWORD PTR es:[edi]
  41f905:	xor    dh,BYTE PTR [edx+0x4b]
  41f908:	push   0x8
  41f90a:	pop    esp
  41f90b:	and    BYTE PTR [ebx-0x5fc83880],bh
  41f911:	dec    ebp
  41f912:	xor    al,BYTE PTR [ecx+esi*4]
  41f915:	fwait
  41f916:	aas    
  41f917:	mov    ah,0x8f
  41f919:	fist   WORD PTR [ecx]
  41f91b:	arpl   WORD PTR [ebx-0x283d48b1],sp
  41f921:	leave  
  41f922:	daa    
  41f923:	div    BYTE PTR [edx]
  41f925:	shl    BYTE PTR [edx+ebp*1],1
  41f928:	xchg   ecx,eax
  41f929:	mul    DWORD PTR [ebx+0x13bc560d]
  41f92f:	mov    eax,DWORD PTR [eax-0x33]
  41f932:	sub    bh,ch
  41f934:	xchg   ebx,eax
  41f935:	cwde   
  41f936:	ja     0x41f92e
  41f938:	iret   
  41f939:	loop   0x41f91c
  41f93b:	jmp    0x2e1:0xfa7837f7
  41f942:	or     BYTE PTR [edi+0x77cb754d],ch
  41f948:	xor    ebp,DWORD PTR [ecx]
  41f94a:	test   al,0x85
  41f94c:	shr    BYTE PTR [edi+0x50946436],cl
  41f952:	push   ebx
  41f953:	(bad)  
  41f955:	dec    edi
  41f956:	inc    esi
  41f957:	xor    BYTE PTR [edi],bh
  41f959:	gs test edx,0x27422f64
  41f960:	je     0x41f906
  41f962:	mov    ds:0xb254800f,eax
  41f967:	lods   eax,DWORD PTR ds:[esi]
  41f968:	mov    ds:0x88c7b9ab,al
  41f96d:	and    BYTE PTR [ebp+0x4cd67661],0xd2
  41f974:	pop    ebx
  41f975:	inc    ecx
  41f976:	xor    eax,0xe47c8a4c
  41f97b:	ins    BYTE PTR es:[edi],dx
  41f97c:	retf   
  41f97d:	retf   
  41f97e:	xchg   edx,eax
  41f97f:	pusha  
  41f980:	push   0xbf6739be
  41f985:	inc    ebp
  41f986:	enter  0x6655,0x3
  41f98a:	imul   edi,ebx,0xffffffc3
  41f98d:	push   edx
  41f98e:	add    BYTE PTR [eax+0x10e64083],ah
  41f994:	outs   dx,DWORD PTR ds:[esi]
  41f995:	ins    DWORD PTR es:[edi],dx
  41f996:	xor    ebp,DWORD PTR [ebx-0x40e7faa6]
  41f99c:	cwde   
  41f99d:	fdiv   st(3),st
  41f99f:	icebp  
  41f9a0:	bound  edi,QWORD PTR [ebx-0x45bcb3a]
  41f9a6:	cli    
  41f9a7:	cmp    esi,DWORD PTR [ebx]
  41f9a9:	in     al,dx
  41f9aa:	jmp    FWORD PTR [esi+0x3fe3335c]
  41f9b0:	xlat   BYTE PTR ds:[ebx]
  41f9b1:	dec    edi
  41f9b2:	and    eax,0x592948f7
  41f9b7:	enter  0x2f21,0xc0
  41f9bb:	test   al,0xe1
  41f9bd:	retf   0xa78e
  41f9c0:	mov    esp,ss
  41f9c2:	(bad)  
  41f9c3:	imul   esi,DWORD PTR [ebx],0x4f
  41f9c6:	pusha  
  41f9c7:	dec    ebp
  41f9c8:	pusha  
  41f9c9:	clc    
  41f9ca:	dec    edx
  41f9cb:	inc    edx
  41f9cc:	fld    TBYTE PTR [eax-0x3332e33b]
  41f9d2:	sub    ebx,esi
  41f9d4:	inc    esi
  41f9d5:	cmc    
  41f9d6:	pop    esi
  41f9d7:	mov    bh,0xde
  41f9d9:	jmp    0xf874e6b9
  41f9de:	mov    esi,0x6f8fbd54
  41f9e3:	dec    esi
  41f9e4:	stos   BYTE PTR es:[edi],al
  41f9e5:	loop   0x41fa64
  41f9e7:	xchg   ebp,eax
  41f9e8:	mov    ah,dh
  41f9ea:	iret   
  41f9eb:	out    dx,eax
  41f9ec:	wrmsr  
  41f9ee:	adc    eax,0xf8230657
  41f9f3:	dec    eax
  41f9f4:	hlt    
  41f9f5:	retf   
  41f9f6:	dec    ecx
  41f9f7:	aad    0x46
  41f9f9:	in     eax,0xf4
  41f9fb:	mov    ds:0x9e92a447,eax
  41fa00:	mov    esi,0x9bbec145
  41fa05:	mov    ecx,0x71ccbaa7
  41fa0a:	(bad)  
  41fa0b:	xchg   ebx,eax
  41fa0c:	fcmovnb st,st(5)
  41fa0e:	inc    edx
  41fa0f:	jb     0x41fa8d
  41fa11:	test   al,0x38
  41fa13:	xchg   ecx,eax
  41fa14:	pop    edx
  41fa15:	repz test eax,0x1b53e9de
  41fa1b:	outs   dx,DWORD PTR ds:[esi]
  41fa1c:	jge    0x41fa44
  41fa1e:	fidivr WORD PTR [eax+0x19]
  41fa21:	dec    esi
  41fa22:	sbb    al,0x84
  41fa24:	jnp    0x41f9dc
  41fa26:	push   ecx
  41fa27:	inc    eax
  41fa28:	out    0x25,al
  41fa2a:	icebp  
  41fa2b:	cli    
  41fa2c:	sbb    BYTE PTR [esi],dh
  41fa2e:	aad    0xb7
  41fa30:	adc    DWORD PTR [eax],ebp
  41fa32:	fucomi st,st(7)
  41fa34:	das    
  41fa35:	mov    dl,BYTE PTR [esi]
  41fa37:	adc    esi,DWORD PTR [ecx-0x56]
  41fa3a:	arpl   bx,ax
  41fa3c:	shl    DWORD PTR [ebx+0x1b09f0ef],1
  41fa42:	out    0x11,al
  41fa44:	mov    dl,BYTE PTR [ecx-0x291cde83]
  41fa4a:	mov    al,0x78
  41fa4c:	call   0x6e77:0x398fedd1
  41fa53:	jge    0x41f9f6
  41fa55:	and    BYTE PTR [edx-0x17c8ca3b],al
  41fa5b:	adc    al,0x96
  41fa5d:	push   edx
  41fa5e:	push   eax
  41fa5f:	loope  0x41fac3
  41fa61:	mov    al,dh
  41fa63:	mov    ecx,0x252dc67f
  41fa68:	addr16 pop ebp
  41fa6a:	mov    cl,0x68
  41fa6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa6d:	mov    ah,0x23
  41fa6f:	mov    esp,cr0
  41fa72:	and    eax,0xf4d9659c
  41fa77:	jle    0x41fa26
  41fa79:	pop    edi
  41fa7a:	leave  
  41fa7b:	fbstp  TBYTE PTR [ebp-0x48]
  41fa7e:	mul    BYTE PTR [ebp+0x49]
  41fa81:	shl    DWORD PTR cs:[ecx+edi*2],1
  41fa85:	sub    DWORD PTR [edi+0x4253bd6d],esp
  41fa8b:	jo     0x41faf9
  41fa8d:	out    0x4e,al
  41fa8f:	(bad)  
  41fa90:	(bad)  
  41fa91:	mov    cl,0xf1
  41fa93:	fdiv   st(3),st
  41fa95:	dec    edx
  41fa96:	sbb    BYTE PTR [edi],dl
  41fa98:	stos   DWORD PTR es:[edi],eax
  41fa99:	popa   
  41fa9a:	mov    ebp,0x67d46e54
  41fa9f:	pop    ss
  41faa0:	sub    al,0x11
  41faa2:	or     DWORD PTR [eax],0xfffffff1
  41faa5:	jl     0x41fa55
  41faa7:	mov    BYTE PTR [esi-0x57d2b19f],al
  41faad:	mov    bh,0x8f
  41faaf:	xchg   esi,eax
  41fab0:	jmp    0x294cb302
  41fab5:	jmp    0xaa01fcee
  41faba:	cwde   
  41fabb:	adc    DWORD PTR [ebx-0x31],ebx
  41fabe:	or     edi,DWORD PTR [ebx-0xc]
  41fac1:	xor    dh,BYTE PTR [ecx+0x4de2c144]
  41fac7:	out    dx,eax
  41fac8:	stc    
  41fac9:	jmp    DWORD PTR [ecx-0x30]
  41facc:	stos   DWORD PTR es:[edi],eax
  41facd:	sub    edi,DWORD PTR ds:0xb7906180
  41fad3:	mov    ebx,0x22f7b4d1
  41fad8:	cmp    bl,BYTE PTR [edi]
  41fada:	mov    fs,WORD PTR [eax-0x1f710d06]
  41fae0:	adc    DWORD PTR [esp+ecx*2],esi
  41fae3:	mov    edi,0x841d63ef
  41fae8:	fadd   DWORD PTR [ebp-0x1590bb04]
  41faee:	ins    DWORD PTR es:[edi],dx
  41faef:	or     BYTE PTR [esi-0x5056024c],ah
  41faf5:	mov    ebp,0x485f6eba
  41fafa:	sub    edi,DWORD PTR [ebx-0xe]
  41fafd:	(bad)  
  41fb00:	rcr    bl,cl
  41fb02:	ins    DWORD PTR es:[edi],dx
  41fb03:	and    al,BYTE PTR [eax+0x48]
  41fb06:	mov    ecx,0x712967db
  41fb0b:	les    edx,FWORD PTR [eax]
  41fb0d:	(bad)  
  41fb0e:	push   eax
  41fb0f:	aas    
  41fb10:	in     eax,dx
  41fb11:	int    0xa2
  41fb13:	cmp    eax,0x2cb576ef
  41fb18:	sbb    BYTE PTR [ecx],ch
  41fb1a:	or     ch,BYTE PTR [edi+0x5a]
  41fb1d:	push   edi
  41fb1e:	pop    ecx
  41fb1f:	inc    edx
  41fb20:	cmp    ecx,DWORD PTR [ebp+0x60]
  41fb23:	das    
  41fb24:	or     eax,esi
  41fb26:	int3   
  41fb27:	adc    DWORD PTR [ebx+0x4e9eeb28],edx
  41fb2d:	add    esi,esp
  41fb2f:	sbb    al,BYTE PTR [eax]
  41fb31:	ret    0xb016
  41fb34:	jmp    0x270b8dcf
  41fb39:	out    dx,al
  41fb3a:	cwde   
  41fb3b:	pusha  
  41fb3c:	xor    dl,BYTE PTR [ebp+0x39ae3835]
  41fb42:	dec    esi
  41fb43:	xchg   edi,eax
  41fb44:	or     cl,BYTE PTR [ebx+ecx*2-0x5a742923]
  41fb4b:	test   BYTE PTR [esp+ebp*8-0x66],ch
  41fb4f:	jae    0x41fbb8
  41fb51:	xchg   DWORD PTR [ebp+0x5c634af3],esp
  41fb57:	lods   al,BYTE PTR ds:[esi]
  41fb58:	inc    ebp
  41fb59:	dec    edx
  41fb5a:	jno    0x41fb46
  41fb5c:	lahf   
  41fb5d:	out    0x73,al
  41fb5f:	cmp    BYTE PTR [ebx-0x22],cl
  41fb62:	adc    dl,cl
  41fb64:	jno    0x41fb07
  41fb66:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41fb68:	dec    esi
  41fb69:	stos   DWORD PTR es:[edi],eax
  41fb6a:	ror    DWORD PTR [esi+0x2dcfd659],1
  41fb70:	mov    ?,WORD PTR [ebx-0x51]
  41fb73:	mov    BYTE PTR [edx+0x12fbc47f],ch
  41fb79:	das    
  41fb7a:	jne    0xf36fdff6
  41fb80:	mov    ch,0x2e
  41fb82:	ficomp DWORD PTR [esi+0x337f6827]
  41fb88:	dec    eax
  41fb89:	jmp    0x4967:0x60793196
  41fb90:	or     edx,0x47bcff50
  41fb96:	popa   
  41fb97:	scas   eax,DWORD PTR es:[edi]
  41fb98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb99:	cmp    al,0x7d
  41fb9b:	xor    eax,0x88b621b3
  41fba0:	pushf  
  41fba1:	cmp    edi,DWORD PTR [edi+esi*2]
  41fba4:	imul   ecx
  41fba6:	cmp    al,0x20
  41fba8:	mov    dl,0xbf
  41fbaa:	jae    0x41fbf1
  41fbac:	cwde   
  41fbad:	adc    BYTE PTR [edx+0x7f4d05ea],0x14
  41fbb4:	pop    edi
  41fbb5:	fbstp  TBYTE PTR [ebx-0x1c]
  41fbb8:	lock inc eax
  41fbba:	lahf   
  41fbbb:	dec    edx
  41fbbc:	fild   QWORD PTR [eax-0x3c876e26]
  41fbc2:	ret    
  41fbc3:	push   ebx
  41fbc4:	fcmovnu st,st(4)
  41fbc6:	loopne 0x41fbf1
  41fbc8:	pop    ds
  41fbc9:	aaa    
  41fbca:	pushf  
  41fbcb:	loopne 0x41fc49
  41fbcd:	sbb    DWORD PTR [edx+0x0],0xffffff8c
  41fbd1:	aam    0x8c
  41fbd3:	mov    ch,0x70
  41fbd5:	mov    ch,0xc9
  41fbd7:	sbb    BYTE PTR [esi+0x77],bl
  41fbda:	mov    WORD PTR [ecx+0x4d806a47],ds
  41fbe0:	and    BYTE PTR [eax+ecx*4],cl
  41fbe3:	jmp    0xec2354eb
  41fbe8:	pop    ecx
  41fbe9:	cli    
  41fbea:	mov    al,0xdb
  41fbec:	inc    ebp
  41fbed:	mov    edi,0xed22c245
  41fbf2:	or     DWORD PTR [esi-0x62],ecx
  41fbf5:	loop   0x41fc36
  41fbf7:	into   
  41fbf8:	(bad)  [ebp-0x57]
  41fbfb:	mov    DWORD PTR [ebp+0x605ce77b],ebp
  41fc01:	mov    esi,0xf3aa70c4
  41fc06:	jo     0x41fc56
  41fc08:	shl    DWORD PTR ds:0x130e9636,1
  41fc0e:	mov    es,WORD PTR [eax+0x79]
  41fc11:	cmp    al,0xa1
  41fc13:	das    
  41fc14:	enter  0xfbf5,0x45
  41fc18:	mov    ecx,0x727f44fc
  41fc1d:	fistp  QWORD PTR [edx-0x23d6b2d6]
  41fc23:	jmp    0xf3bc8e0b
  41fc28:	rcl    BYTE PTR [ecx-0x64],1
  41fc2b:	mov    al,0x64
  41fc2d:	jg     0x41fbbc
  41fc2f:	mov    dh,0xc6
  41fc31:	imul   eax,DWORD PTR [edx+0x5e],0xffffff82
  41fc35:	sbb    DWORD PTR [edi+0x43cad5e0],esp
  41fc3b:	pop    ecx
  41fc3c:	aas    
  41fc3d:	push   ebp
  41fc3e:	mul    DWORD PTR [esi+0xd]
  41fc41:	pop    ds
  41fc42:	push   edx
  41fc43:	aaa    
  41fc44:	pop    ebp
  41fc45:	cmc    
  41fc46:	add    eax,DWORD PTR [eax-0x64]
  41fc49:	xor    esi,ecx
  41fc4b:	or     eax,0x785d7841
  41fc50:	(bad)  
  41fc51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc52:	in     eax,dx
  41fc53:	inc    eax
  41fc54:	imul   ecx,esp,0x860cfa3b
  41fc5a:	pop    ds
  41fc5b:	(bad)  
  41fc5c:	sbb    eax,0x4a0ab5bf
  41fc61:	nop
  41fc62:	inc    ebx
  41fc63:	dec    ebp
  41fc64:	mov    bh,0xd2
  41fc66:	pop    ds
  41fc67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc68:	repnz add ebp,edi
  41fc6b:	push   ebx
  41fc6c:	add    eax,0x8df6a56b
  41fc71:	pop    ecx
  41fc72:	mov    BYTE PTR ds:0x49190b21,cl
  41fc78:	mov    cl,BYTE PTR [ecx-0x4c7a8f2]
  41fc7e:	pop    esi
  41fc7f:	jmp    0x41fc38
  41fc81:	push   esp
  41fc82:	in     al,dx
  41fc83:	nop
  41fc84:	int3   
  41fc85:	inc    esi
  41fc86:	xchg   esi,eax
  41fc87:	sub    dh,BYTE PTR [eax+0x1]
  41fc8a:	repz add DWORD PTR [ebp+0x6b],edi
  41fc8e:	stos   BYTE PTR es:[edi],al
  41fc8f:	sbb    ch,BYTE PTR [edx+0x5f1b9d2a]
  41fc95:	stc    
  41fc96:	rcl    DWORD PTR [eax],0x9e
  41fc99:	push   esi
  41fc9a:	dec    esp
  41fc9b:	rcl    DWORD PTR [ecx],1
  41fc9d:	mov    WORD PTR [eax+eax*4+0x7c],ss
  41fca1:	jo     0x41fc6c
  41fca3:	cmp    al,0x3d
  41fca5:	inc    bh
  41fca7:	test   DWORD PTR [ebx+0x66],0x5441dfb4
  41fcae:	xor    edx,DWORD PTR [ebp-0x2f19bbf6]
  41fcb4:	sbb    DWORD PTR [ebx-0x63d24fac],0x34
  41fcbb:	dec    ebp
  41fcbc:	out    dx,eax
  41fcbd:	adc    al,0x1
  41fcbf:	lahf   
  41fcc0:	pop    esp
  41fcc1:	sbb    al,0x89
  41fcc3:	and    eax,edx
  41fcc5:	push   cs
  41fcc6:	sbb    DWORD PTR [ebp+0x1d],0x7a
  41fcca:	fsub   QWORD PTR [ecx]
  41fccc:	ficomp DWORD PTR [ebx+ebx*1]
  41fccf:	xchg   edx,eax
  41fcd0:	xchg   DWORD PTR [edi-0x2c],edx
  41fcd3:	jnp    0x41fc80
  41fcd5:	xchg   esp,eax
  41fcd6:	repnz mov cl,al
  41fcd9:	dec    ebp
  41fcda:	xor    eax,0x96cb803d
  41fcdf:	and    esi,DWORD PTR [ecx+0x2ff1d8aa]
  41fce5:	nop
  41fce6:	fstp   DWORD PTR [ebx-0xe]
  41fce9:	adc    esi,DWORD PTR [edi-0x33ba3ee4]
  41fcef:	cmp    ah,bh
  41fcf1:	pop    eax
  41fcf2:	jne    0x41fc8e
  41fcf4:	pop    ebp
  41fcf5:	ds out 0xa8,eax
  41fcf8:	arpl   WORD PTR [esi-0x2646cf5a],si
  41fcfe:	sub    ah,bh
  41fd00:	aad    0x5c
  41fd02:	fcomp  DWORD PTR [ebp-0x683ad5c2]
  41fd08:	xchg   ebx,eax
  41fd09:	inc    edi
  41fd0a:	jne    0x41fd4a
  41fd0c:	sub    BYTE PTR [esi-0x3eaf4a17],dl
  41fd12:	cmp    DWORD PTR [edi+0x411b70b0],0xffffffb9
  41fd19:	sub    al,0x8b
  41fd1b:	push   esi
  41fd1c:	lods   eax,DWORD PTR ds:[esi]
  41fd1d:	sbb    DWORD PTR [esi-0x44ef502b],ebx
  41fd23:	cmp    bh,BYTE PTR [edx]
  41fd25:	xchg   DWORD PTR [ecx],ecx
  41fd27:	out    dx,al
  41fd28:	fnsave [ebx]
  41fd2a:	cmp    al,0x12
  41fd2c:	pop    esi
  41fd2d:	ja     0x41fd43
  41fd2f:	aas    
  41fd30:	sahf   
  41fd31:	rol    DWORD PTR [ebx+esi*4],1
  41fd34:	cs retf 
  41fd36:	test   DWORD PTR [eax+ebp*2-0x553092be],0x5a9f24b1
  41fd41:	stos   BYTE PTR es:[edi],al
  41fd42:	sbb    esi,DWORD PTR [ecx-0x79bcf0c9]
  41fd48:	sbb    BYTE PTR [eax+eax*2+0x12],dh
  41fd4c:	xor    eax,0xd64fa1da
  41fd51:	mov    esi,0x90347de4
  41fd56:	add    BYTE PTR [ebp+edi*8+0x18],dl
  41fd5a:	adc    DWORD PTR [ecx+edx*8],ecx
  41fd5d:	dec    eax
  41fd5e:	xor    BYTE PTR [edi-0x45],bl
  41fd61:	pop    ebp
  41fd62:	clc    
  41fd63:	ret    0x7f04
  41fd66:	test   eax,0xb28fc6e1
  41fd6b:	dec    esi
  41fd6c:	data16 std 
  41fd6e:	(bad)  
  41fd6f:	mov    al,0x1e
  41fd71:	sub    esp,DWORD PTR [eax-0x37]
  41fd74:	lea    edx,[ecx]
  41fd76:	(bad)  
  41fd77:	cmp    BYTE PTR [eax],ch
  41fd79:	mov    edx,DWORD PTR [eax]
  41fd7b:	adc    bh,BYTE PTR [ecx+esi*1-0x7f8801ef]
  41fd82:	cmc    
  41fd83:	int    0xae
  41fd85:	outs   dx,DWORD PTR ds:[esi]
  41fd86:	outs   dx,BYTE PTR ds:[esi]
  41fd87:	stos   BYTE PTR es:[edi],al
  41fd88:	push   ebx
  41fd89:	or     ebp,DWORD PTR [edi]
  41fd8b:	add    eax,ebp
  41fd8d:	(bad)  
  41fd8e:	mov    al,ds:0x9701fbbb
  41fd93:	cwde   
  41fd94:	jmp    0xcfc5:0x80255688
  41fd9b:	enter  0x4ac3,0x8f
  41fd9f:	call   0x2ad0a1c2
  41fda4:	test   DWORD PTR [edx-0x70],esp
  41fda7:	push   0x6b
  41fda9:	cmp    esi,ebx
  41fdab:	pop    es
  41fdac:	mov    WORD PTR [edx],gs
  41fdae:	jecxz  0x41fdbe
  41fdb0:	cmp    esi,esi
  41fdb2:	cmp    al,0x80
  41fdb4:	mov    ah,0x94
  41fdb6:	pop    edx
  41fdb7:	pushf  
  41fdb8:	out    dx,eax
  41fdb9:	sbb    dl,dh
  41fdbb:	(bad)  
  41fdbc:	dec    ebp
  41fdbd:	shl    BYTE PTR [edx+0x6f],1
  41fdc0:	push   0x23
  41fdc2:	mov    eax,0x725d9ba4
  41fdc7:	(bad)  
  41fdc8:	hlt    
  41fdc9:	call   0x2ce41c03
  41fdce:	xchg   esp,eax
  41fdcf:	(bad)
  41fdd2:	jae    0x41fd62
  41fdd4:	push   ss
  41fdd5:	sti    
  41fdd6:	mov    edi,0xd3b61c94
  41fddb:	xor    dl,al
  41fddd:	add    dl,BYTE PTR [edi]
  41fddf:	jnp    0x41fd86
  41fde1:	push   ecx
  41fde2:	or     DWORD PTR [esi-0x4b],esp
  41fde5:	mov    ds:0x61eaf53a,eax
  41fdea:	cdq    
  41fdeb:	popa   
  41fdec:	add    eax,ebx
  41fdee:	xchg   ebp,eax
  41fdef:	jbe    0x41fe68
  41fdf1:	and    DWORD PTR [edi-0x16be2658],ebx
  41fdf7:	dec    esi
  41fdf8:	icebp  
  41fdf9:	push   edi
  41fdfa:	call   0x4c8115f6
  41fdff:	pop    ds
  41fe00:	jne    0x41fdc4
  41fe02:	cmc    
  41fe03:	iret   
  41fe04:	and    edx,DWORD PTR [esi+ebp*2]
  41fe07:	sub    BYTE PTR [edi-0x47],cl
  41fe0a:	lahf   
  41fe0b:	ret    0x5c1c
  41fe0e:	call   DWORD PTR [edi-0xc57e719]
  41fe14:	enter  0x7ee4,0x73
  41fe18:	cdq    
  41fe19:	fisttp QWORD PTR es:[ebx]
  41fe1c:	js     0x41fdad
  41fe1e:	mov    dl,0xc9
  41fe20:	pusha  
  41fe21:	fldcw  WORD PTR [edi+0xc]
  41fe24:	jecxz  0x41fdc9
  41fe26:	test   al,0x7c
  41fe28:	clc    
  41fe29:	cmp    al,0x76
  41fe2b:	sbb    al,0x5e
  41fe2d:	or     al,0x9e
  41fe2f:	test   eax,0xf5e4e0b7
  41fe34:	aaa    
  41fe35:	fild   DWORD PTR [edx+eiz*4]
  41fe38:	cmp    eax,0x975a48ba
  41fe3d:	dec    ecx
  41fe3e:	mov    edi,esp
  41fe40:	xor    dh,dh
  41fe42:	mov    esi,0xdae6c4da
  41fe47:	mov    bh,0x9c
  41fe49:	(bad)  [ecx]
  41fe4b:	push   ebx
  41fe4c:	push   es
  41fe4d:	xor    esp,ecx
  41fe4f:	rcr    BYTE PTR [eax-0x66],1
  41fe52:	enter  0xf0a2,0xcd
  41fe56:	call   0x23ab7613
  41fe5b:	adc    al,0xee
  41fe5d:	jecxz  0x41fe2d
  41fe5f:	and    eax,edx
  41fe61:	mov    ebp,0x6f1835a0
  41fe66:	imul   edx,esp,0x1f
  41fe69:	bound  ecx,QWORD PTR ds:0x5a01e151
  41fe6f:	push   0x47f7d66e
  41fe74:	mov    edx,0xed34e2e3
  41fe79:	sub    BYTE PTR [ebx],ah
  41fe7b:	push   ss
  41fe7c:	in     eax,0x4d
  41fe7e:	mov    cl,0x19
  41fe80:	hlt    
  41fe81:	retf   0x58b
  41fe84:	cmp    al,0x9b
  41fe86:	jecxz  0x41fee2
  41fe88:	xor    dh,0x3f
  41fe8b:	loope  0x41fe7c
  41fe8d:	sar    BYTE PTR [edx+0x13],1
  41fe90:	jo     0x41fef1
  41fe92:	into   
  41fe93:	clc    
  41fe94:	jmp    0xe408:0x41a6f553
  41fe9b:	lahf   
  41fe9c:	popf   
  41fe9d:	jb     0x41fed4
  41fe9f:	mov    al,ds:0x5b87aea7
  41fea4:	xor    edx,ebx
  41fea6:	dec    ecx
  41fea7:	push   ss
  41fea8:	js     0x41fefe
  41feaa:	mov    dl,bh
  41feac:	pusha  
  41fead:	lds    esi,FWORD PTR [ecx+eax*1-0xd]
  41feb1:	xor    BYTE PTR [ebx-0x38c3f11f],0x48
  41feb8:	int3   
  41feb9:	test   BYTE PTR [edx-0x1686ff66],dl
  41febf:	cmp    ecx,DWORD PTR [ebx]
  41fec1:	enter  0xd195,0xda
  41fec5:	aaa    
  41fec6:	ret    0x2704
  41fec9:	pusha  
  41feca:	inc    edi
  41fecb:	add    DWORD PTR [ecx+0x70bc6bf],esp
  41fed1:	xchg   esp,eax
  41fed2:	xor    eax,0x50fb3aa8
  41fed7:	add    al,cl
  41fed9:	sbb    al,0xb7
  41fedb:	inc    esp
  41fedc:	dec    esp
  41fedd:	mov    esp,DWORD PTR [eax+esi*1+0x21]
  41fee1:	jp     0x41fe90
  41fee3:	dec    eax
  41fee4:	cmp    dh,al
  41fee6:	push   cs
  41fee7:	cmp    al,0x49
  41fee9:	jbe    0x41ff5e
  41feeb:	ret    0x10f3
  41feee:	add    DWORD PTR [ebp+edx*4+0x50],ebp
  41fef2:	xchg   ecx,eax
  41fef3:	repz das 
  41fef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fef6:	mov    eax,0x6b623117
  41fefb:	cld    
  41fefc:	aas    
  41fefd:	push   ebx
  41fefe:	jns    0x41ff28
  41ff00:	aam    0x6c
  41ff02:	push   edx
  41ff03:	mov    edi,0x6b89bb84
  41ff08:	pop    edx
  41ff09:	dec    esp
  41ff0a:	xor    dh,BYTE PTR [ebp-0x58]
  41ff0d:	and    DWORD PTR ds:0xf82925c9,esp
  41ff13:	out    dx,al
  41ff14:	pop    ss
  41ff15:	ds xchg esp,eax
  41ff17:	jb     0x41fef7
  41ff19:	enter  0x999d,0x1c
  41ff1d:	pop    esp
  41ff1e:	adc    al,0x55
  41ff20:	aas    
  41ff21:	pop    esi
  41ff22:	rol    DWORD PTR [eax],cl
  41ff24:	and    al,0xdd
  41ff26:	ret    
  41ff27:	ins    BYTE PTR es:[edi],dx
  41ff28:	nop
  41ff29:	push   ss
  41ff2a:	call   0x725f0e55
  41ff2f:	sbb    BYTE PTR [ebp-0x373b0d24],bl
  41ff35:	sbb    ch,al
  41ff37:	dec    ebx
  41ff38:	dec    ebp
  41ff39:	cmc    
  41ff3a:	xor    DWORD PTR [edx],esi
  41ff3c:	outs   dx,BYTE PTR ds:[esi]
  41ff3d:	xchg   esi,eax
  41ff3e:	pop    ds
  41ff3f:	add    BYTE PTR [esi],0xf4
  41ff42:	dec    ecx
  41ff43:	int3   
  41ff44:	test   dl,bh
  41ff46:	jns    0x41fee7
  41ff48:	outs   dx,DWORD PTR ds:[esi]
  41ff49:	ret    0x89b6
  41ff4c:	jmp    0x41ffcd
  41ff4e:	mov    eax,ds:0x1eb2940c
  41ff53:	in     eax,dx
  41ff54:	dec    edx
  41ff55:	or     edx,edx
  41ff57:	cld    
  41ff58:	or     al,0x47
  41ff5a:	or     ecx,DWORD PTR [edi+edx*4+0x1a2bc959]
  41ff61:	push   ebp
  41ff62:	inc    eax
  41ff63:	pop    ecx
  41ff64:	hlt    
  41ff65:	add    DWORD PTR [eax-0x42fea582],ebp
  41ff6b:	gs push cs
  41ff6d:	in     al,dx
  41ff6e:	push   0xb5354a38
  41ff73:	sub    al,0xf
  41ff75:	inc    ebx
  41ff76:	nop
  41ff77:	fcom   DWORD PTR [ecx-0x1cef5706]
  41ff7d:	adc    al,0xc2
  41ff7f:	scas   al,BYTE PTR es:[edi]
  41ff80:	iret   
  41ff81:	shr    DWORD PTR [ecx-0x2633e9e7],1
  41ff87:	add    esp,DWORD PTR [eax-0x45d48b08]
  41ff8d:	jl     0x41ff4c
  41ff8f:	out    0xf7,al
  41ff91:	(bad)  
  41ff93:	inc    eax
  41ff94:	fs mov dh,0x78
  41ff97:	ja     0x41ffd5
  41ff99:	inc    ebp
  41ff9a:	leave  
  41ff9b:	push   es
  41ff9c:	test   ecx,edx
  41ff9e:	dec    ecx
  41ff9f:	nop
  41ffa0:	or     eax,0xe66b95c8
  41ffa5:	dec    edx
  41ffa6:	mov    ebp,es
  41ffa8:	dec    eax
  41ffa9:	xchg   ecx,eax
  41ffaa:	not    DWORD PTR [ecx]
  41ffac:	das    
  41ffad:	push   edx
  41ffae:	mov    eax,ds:0xcbfa6125
  41ffb3:	mov    DWORD PTR [esi-0x1ff03885],ecx
  41ffb9:	inc    ebp
  41ffba:	sub    ecx,DWORD PTR [ebx]
  41ffbc:	les    ebx,FWORD PTR [edi+ebp*8-0x3b770e25]
  41ffc3:	cmc    
  41ffc4:	shr    BYTE PTR [ecx-0x31],0x13
  41ffc8:	or     al,0x69
  41ffca:	push   eax
  41ffcb:	ret    
  41ffcc:	(bad)  
  41ffcd:	pop    ebx
  41ffce:	sub    al,0xc3
  41ffd0:	daa    
  41ffd1:	test   al,0xad
  41ffd3:	push   ds
  41ffd4:	jmp    0x420009
  41ffd6:	sub    al,0xa2
  41ffd8:	fdiv   DWORD PTR [esi]
  41ffda:	dec    eax
  41ffdb:	lahf   
  41ffdc:	stos   BYTE PTR es:[edi],al
  41ffdd:	rcr    BYTE PTR [edi-0x425ec7ac],1
  41ffe3:	mov    WORD PTR [eax-0x4c4d8ea6],fs
  41ffe9:	lock jge 0x41ff85
  41ffec:	test   dh,ch
  41ffee:	push   0x29
  41fff0:	inc    ebx
  41fff1:	pop    eax
  41fff2:	stos   DWORD PTR es:[edi],eax
  41fff3:	mov    edi,DWORD PTR [edx+0x3a]
  41fff6:	dec    ebp
  41fff7:	aam    0x93
  41fff9:	scas   al,BYTE PTR es:[edi]
  41fffa:	mov    dh,0x82
  41fffc:	cmp    edi,esi
  41fffe:	ret    0x586f
  420001:	aaa    
  420002:	inc    ebp
  420003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420004:	xchg   ebx,eax
  420005:	in     eax,0x40
  420007:	cmc    
  420008:	inc    ecx
  420009:	lods   eax,DWORD PTR ds:[esi]
  42000a:	inc    eax
  42000b:	out    0xfb,al
  42000d:	lods   eax,DWORD PTR ds:[esi]
  42000e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42000f:	add    edi,DWORD PTR [esi+0x79]
  420012:	push   edx
  420013:	pop    edi
  420014:	lds    ecx,FWORD PTR [edi+0x35]
  420017:	pop    esi
  420018:	aaa    
  420019:	push   esi
  42001a:	mov    dh,0x43
  42001c:	push   edx
  42001d:	imul   esi,DWORD PTR [edx-0x29],0xffffffcb
  420021:	ret    
  420022:	sti    
  420023:	(bad)  
  420024:	icebp  
  420025:	xchg   ebp,eax
  420026:	repz or eax,0x9f1b4267
  42002c:	aaa    
  42002d:	sub    DWORD PTR [edx+0x32],edi
  420030:	imul   ecx,ebx,0x1c
  420033:	fdivr  DWORD PTR [ebx]
  420035:	sahf   
  420036:	sbb    BYTE PTR [esi-0x3f],0x73
  42003a:	fcmovbe st,st(1)
  42003c:	lods   eax,DWORD PTR ds:[esi]
  42003d:	mov    eax,0x3eb164c2
  420042:	loopne 0x420035
  420044:	cwde   
  420045:	sub    DWORD PTR ds:0xa2ffc3e,edx
  42004b:	lea    ecx,[ecx+0x73]
  42004e:	mov    ebp,0xb8f280fc
  420053:	jmp    0x4200bf
  420055:	test   DWORD PTR [ebx+0x4620951b],ebp
  42005b:	xor    cl,dl
  42005d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42005e:	push   edx
  42005f:	jg     0x41ffef
  420061:	call   0x9eb8fbc1
  420066:	sbb    bh,BYTE PTR [edi-0x2c]
  420069:	ror    DWORD PTR [edx+0x2d],0x5b
  42006d:	jmp    0x16c:0x8ff8e072
  420074:	ds cmp eax,esi
  420077:	or     BYTE PTR [ecx-0x47340a78],dh
  42007d:	push   ds
  42007e:	(bad)
  420082:	sub    BYTE PTR [edi],0x7
  420085:	xor    ebp,DWORD PTR [edx+0x2b]
  420088:	sub    BYTE PTR [esi+0x739cdafa],0x3b
  42008f:	or     BYTE PTR ds:0xfc34e78b,ch
  420095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420096:	and    eax,0xd50fdd54
  42009b:	mov    al,ds:0x36eb5476
  4200a0:	adc    dl,ch
  4200a2:	std    
  4200a3:	loope  0x42004e
  4200a5:	adc    eax,0xf5837364
  4200aa:	aad    0xf1
  4200ac:	cli    
  4200ad:	and    ebx,DWORD PTR [eax-0x6]
  4200b0:	cmp    eax,0x29889c1e
  4200b5:	mov    ecx,DWORD PTR [eax+0x2d72aad3]
  4200bb:	xor    BYTE PTR [ebp-0x18f608fd],cl
  4200c1:	nop
  4200c2:	jp     0x4200fb
  4200c4:	leave  
  4200c5:	retf   0xd26
  4200c8:	add    al,0x84
  4200ca:	popf   
  4200cb:	cwde   
  4200cc:	add    DWORD PTR [esi-0x18],0xd2c1cef9
  4200d3:	jecxz  0x4200b5
  4200d5:	lock lahf 
  4200d7:	mov    edi,DWORD PTR [ebx-0x31]
  4200da:	fwait
  4200db:	daa    
  4200dc:	shl    DWORD PTR [ecx-0x43],1
  4200df:	sub    BYTE PTR [edx-0x154cbccf],ch
  4200e5:	(bad)  
  4200e6:	sbb    eax,0x7dd0887c
  4200eb:	ss popaw 
  4200ee:	adc    edi,DWORD PTR [edi-0x6]
  4200f1:	ins    DWORD PTR es:[edi],dx
  4200f2:	mov    eax,0xbdc4ee11
  4200f7:	pop    edx
  4200f8:	mov    edx,0xc18c17a1
  4200fd:	hlt    
  4200fe:	sbb    al,0x4b
  420100:	xchg   esi,eax
  420101:	std    
  420102:	call   0x3c757dec
  420107:	jmp    0xdd70:0xccbf9a11
  42010e:	ss je  0x420122
  420111:	add    DWORD PTR [esi+0xfdbb0cb],0xffffff86
  420118:	pop    ds
  420119:	mov    esp,0x789feecd
  42011e:	mov    bh,BYTE PTR [ebp-0x53cf96b0]
  420124:	or     BYTE PTR [edx+0x6e],dh
  420127:	ins    DWORD PTR es:[edi],dx
  420128:	out    dx,al
  420129:	and    ebx,DWORD PTR [ecx-0x61]
  42012c:	adc    DWORD PTR [ecx+0x21],edx
  42012f:	xchg   esi,eax
  420130:	test   eax,0xe17fd51a
  420135:	test   eax,0x45361ae
  42013a:	cdq    
  42013b:	sbb    eax,DWORD PTR [ecx+0x7c]
  42013e:	jecxz  0x420104
  420140:	outs   dx,DWORD PTR ds:[esi]
  420141:	pusha  
  420142:	(bad)  
  420143:	call   0xb41671e6
  420148:	test   eax,0xd250cbaf
  42014d:	and    al,0x4f
  42014f:	xchg   DWORD PTR [esi+eiz*1+0x43],esp
  420153:	sub    DWORD PTR ss:[eax-0x3f],0x9efb0ef5
  42015b:	es mov bh,0x2d
  42015e:	cwde   
  42015f:	or     BYTE PTR [esi-0x5c],dl
  420162:	lahf   
  420163:	out    dx,eax
  420164:	mov    ecx,0x1448b61
  420169:	mov    ch,0x5f
  42016b:	test   dl,0x7e
  42016e:	pop    es
  42016f:	xor    al,0xbb
  420171:	iret   
  420172:	xchg   esp,eax
  420173:	cmp    al,0x70
  420175:	inc    ebp
  420176:	xchg   esp,eax
  420177:	jmp    0x420115
  420179:	push   edi
  42017a:	in     al,dx
  42017b:	mov    eax,0x39681029
  420180:	mov    esp,DWORD PTR [esi-0x24878c32]
  420186:	sub    dh,BYTE PTR [eax-0x610ac4b8]
  42018c:	add    BYTE PTR [esi-0x74e358e3],ch
  420192:	ds cdq 
  420194:	mov    bh,0x83
  420196:	cmp    al,0x32
  420198:	sahf   
  420199:	push   ecx
  42019a:	inc    esi
  42019b:	jl     0x42017c
  42019d:	pop    edi
  42019e:	xchg   ebp,eax
  42019f:	pop    edi
  4201a0:	jle    0x42014f
  4201a2:	scas   eax,DWORD PTR es:[edi]
  4201a3:	mov    BYTE PTR [esp+eax*2],ch
  4201a6:	(bad)  
  4201a7:	(bad)  
  4201a8:	dec    ecx
  4201a9:	jle    0x420189
  4201ab:	lds    esp,FWORD PTR [ecx+0x34fe4743]
  4201b1:	jle    0x42015d
  4201b3:	xchg   edi,eax
  4201b4:	xchg   edi,eax
  4201b5:	(bad)  
  4201b6:	push   ecx
  4201b7:	sar    BYTE PTR [esi],cl
  4201b9:	mov    esi,0x18a1bb83
  4201be:	fild   WORD PTR [eax+eiz*8-0x51da322e]
  4201c5:	test   cl,dh
  4201c7:	adc    al,0x9a
  4201c9:	stos   DWORD PTR es:[edi],eax
  4201ca:	retf   
  4201cb:	jns    0x42017b
  4201cd:	inc    edx
  4201ce:	ds into 
  4201d0:	or     eax,0x36206983
  4201d5:	sbb    BYTE PTR [ebp-0x20],0x4b
  4201d9:	in     al,dx
  4201da:	sub    ch,BYTE PTR [ebp-0x3e9ed025]
  4201e0:	jmp    0x7aeb:0x75a78a06
  4201e7:	lods   al,BYTE PTR ds:[esi]
  4201e8:	pop    ecx
  4201e9:	and    ebp,DWORD PTR [edx+ecx*8]
  4201ec:	idiv   BYTE PTR [edi+esi*2+0x4f3d45d5]
  4201f3:	pop    es
  4201f4:	and    al,0x13
  4201f6:	stc    
  4201f7:	int3   
  4201f8:	sbb    BYTE PTR [edx-0x45],dl
  4201fb:	xchg   BYTE PTR gs:0x6e3d3929,ch
  420202:	add    esi,ebx
  420204:	cmp    eax,0x52df1aee
  420209:	out    0xc2,al
  42020b:	push   cs
  42020c:	stos   DWORD PTR es:[edi],eax
  42020d:	cwde   
  42020e:	outs   dx,DWORD PTR ds:[esi]
  42020f:	loop   0x42028a
  420211:	ret    0xb6da
  420214:	enter  0x9c77,0xe
  420218:	dec    ebx
  420219:	int    0xfe
  42021b:	int    0x45
  42021d:	(bad)  
  42021e:	lock scas al,BYTE PTR es:[edi]
  420220:	jb     0x4201df
  420222:	jb     0x420257
  420224:	jmp    0x42028b
  420226:	xchg   BYTE PTR [ecx+ebp*4],ch
  420229:	ja     0x420263
  42022b:	jge    0x420245
  42022d:	inc    edi
  42022e:	or     DWORD PTR [edx+edi*1-0x7b],0x5d
  420233:	popf   
  420234:	xchg   edx,eax
  420235:	add    DWORD PTR [ecx],eax
  420237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420238:	pop    eax
  420239:	inc    esi
  42023a:	dec    edi
  42023b:	cdq    
  42023c:	enter  0x40cb,0x60
  420240:	or     edi,ebp
  420242:	scas   al,BYTE PTR es:[edi]
  420243:	in     eax,dx
  420244:	push   ss
  420245:	and    BYTE PTR [ebx-0x21],ch
  420248:	mov    edi,DWORD PTR [eax+0x1ed36ee8]
  42024e:	ds repz mov dl,0x70
  420252:	bound  esp,QWORD PTR [edi+0x23c60a35]
  420258:	inc    edx
  420259:	pop    ss
  42025a:	sar    DWORD PTR [edi],1
  42025c:	out    dx,al
  42025d:	adc    DWORD PTR [ebx-0x16],0xffffff92
  420261:	add    BYTE PTR ds:0xfb066166,ah
  420267:	and    dl,BYTE PTR [ebx-0x763e1924]
  42026d:	or     DWORD PTR [eax+0x70d2e601],0x39add109
  420277:	sub    esp,edi
  420279:	xchg   ebx,eax
  42027a:	jp     0x42021a
  42027c:	ret    
  42027d:	and    BYTE PTR [edi-0x1b],0x62
  420281:	lds    esp,FWORD PTR [ecx-0x3ddb46c]
  420287:	push   eax
  420288:	xchg   esi,eax
  420289:	or     DWORD PTR gs:[esi-0x3c],0xdfdc9414
  420291:	outs   dx,BYTE PTR ds:[esi]
  420292:	mov    ah,0x6f
  420294:	or     al,0xcb
  420296:	push   ebp
  420297:	push   0xffffffa2
  420299:	stos   BYTE PTR es:[edi],al
  42029a:	clc    
  42029b:	pop    ecx
  42029c:	adc    eax,0x8819b0e6
  4202a1:	lods   eax,DWORD PTR ds:[esi]
  4202a2:	and    al,0x74
  4202a4:	jae    0x420309
  4202a6:	adc    DWORD PTR [edi-0x3f],ecx
  4202a9:	push   eax
  4202aa:	stos   DWORD PTR es:[edi],eax
  4202ab:	cwde   
  4202ac:	dec    ecx
  4202ad:	xor    DWORD PTR [ebp+0x24b49fe],ebp
  4202b3:	sub    BYTE PTR [eax+0x1713673f],al
  4202b9:	js     0x420301
  4202bb:	dec    eax
  4202bc:	or     al,0xde
  4202be:	xor    BYTE PTR [edx-0x31ecd825],0x51
  4202c5:	test   ah,ah
  4202c7:	push   ds
  4202c8:	std    
  4202c9:	loope  0x42024f
  4202cb:	inc    edx
  4202cc:	mov    ah,0xbd
  4202ce:	pushf  
  4202cf:	fs out dx,eax
  4202d1:	jle    0x4202de
  4202d3:	fwait
  4202d4:	inc    ecx
  4202d5:	dec    esi
  4202d6:	clc    
  4202d7:	xchg   esp,eax
  4202d8:	int3   
  4202d9:	mov    ecx,0x639e9e9d
  4202de:	xchg   edi,eax
  4202df:	sbb    al,0xae
  4202e1:	jg     0x420330
  4202e3:	mov    dh,0xa0
  4202e5:	mov    edi,0x37503e2c
  4202ea:	xor    esi,DWORD PTR [ebp+0x3ca071ad]
  4202f0:	add    ch,BYTE PTR [eax+0x4e]
  4202f3:	pop    ds
  4202f4:	mov    BYTE PTR [edx],0xd3
  4202f7:	mov    esi,0xb17eae09
  4202fc:	cmp    al,0x38
  4202fe:	aaa    
  4202ff:	sub    BYTE PTR [esp+ebx*4+0x4e],0x8f
  420304:	cdq    
  420305:	fist   WORD PTR [eax]
  420307:	jne    0x4202ec
  420309:	sbb    eax,0xa2eef6ae
  42030e:	adc    ebp,eax
  420310:	into   
  420311:	push   ebp
  420312:	ss stos BYTE PTR es:[edi],al
  420314:	adc    dh,BYTE PTR [ecx-0x6bd30c71]
  42031a:	pop    edi
  42031b:	add    DWORD PTR [ecx+eax*8],esi
  42031e:	bound  edx,QWORD PTR [esi-0x2a25e501]
  420324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420325:	jne    0x42038d
  420327:	fcom   st(3)
  420329:	inc    edx
  42032a:	xlat   BYTE PTR ds:[ebx]
  42032b:	(bad)  
  42032c:	add    eax,0x6b37d8d0
  420331:	xlat   BYTE PTR ds:[ebx]
  420332:	jbe    0x4202d4
  420334:	pop    edx
  420335:	ret    0x5dc2
  420338:	test   DWORD PTR [ecx-0x30],0x6b39f958
  42033f:	jg     0x420328
  420341:	loop   0x42039b
  420343:	adc    BYTE PTR [edx],al
  420345:	test   edx,0x46dd2570
  42034b:	outs   dx,DWORD PTR ds:[esi]
  42034c:	mov    al,0x3a
  42034e:	xor    dh,bl
  420350:	push   ebx
  420351:	nop
  420352:	ins    BYTE PTR es:[edi],dx
  420353:	xor    dh,bh
  420355:	and    eax,0xed5dfbef
  42035a:	fwait
  42035b:	jecxz  0x420363
  42035d:	adc    BYTE PTR [esi-0x169f4190],cl
  420363:	cmp    esi,DWORD PTR [ebx+edi*2-0x19d03675]
  42036a:	js     0x42038c
  42036c:	xchg   esi,eax
  42036d:	or     al,0xa3
  42036f:	sub    BYTE PTR [esi-0x78acd6e4],dl
  420375:	rol    cl,cl
  420377:	adc    eax,0x58b85c31
  42037c:	mov    dl,0xda
  42037e:	mov    ah,0x1f
  420380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420381:	int3   
  420382:	mov    DWORD PTR [edi],edi
  420384:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  420386:	push   ds
  420387:	(bad)  
  420388:	lock inc edx
  42038a:	imul   ebx,ebp,0x5463a2b8
  420390:	add    DWORD PTR [ebx-0x25],0x60
  420394:	add    dl,dh
  420396:	xor    BYTE PTR [edx],ch
  420398:	sbb    dh,BYTE PTR [esi]
  42039a:	jg     0x4203d2
  42039c:	and    al,0x81
  42039e:	push   0xffffffca
  4203a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203a1:	dec    edi
  4203a2:	out    0xf6,al
  4203a4:	shr    BYTE PTR [edi],0x2f
  4203a7:	daa    
  4203a8:	fcomp  DWORD PTR [eax*2-0x5ea5b1cc]
  4203af:	aad    0x93
  4203b1:	and    al,BYTE PTR [eax]
  4203b3:	nop
  4203b4:	jp     0x42033f
  4203b6:	adc    esi,edx
  4203b8:	es jp  0x420362
  4203bb:	jne    0x420425
  4203bd:	data16 loope 0x42037e
  4203c0:	dec    ebx
  4203c1:	mov    edx,0x7dde7794
  4203c6:	imul   esi,DWORD PTR [ecx+0xc0c50dd],0xbb45603f
  4203d0:	aaa    
  4203d1:	push   esi
  4203d2:	push   esi
  4203d3:	in     eax,dx
  4203d4:	jb     0x420391
  4203d6:	aaa    
  4203d7:	pop    edi
  4203d8:	sbb    DWORD PTR [ebx],esp
  4203da:	pop    ds
  4203db:	repnz arpl WORD PTR [esi+0x74865dcd],ax
  4203e2:	lods   al,BYTE PTR ds:[esi]
  4203e3:	xchg   esp,eax
  4203e4:	inc    ebp
  4203e5:	daa    
  4203e6:	dec    edx
  4203e7:	data16 or BYTE PTR [ebx],dh
  4203ea:	das    
  4203eb:	or     edi,DWORD PTR [esi+0x23f8abd4]
  4203f1:	xchg   ch,dl
  4203f3:	aaa    
  4203f4:	repz and al,0x59
  4203f7:	retf   
  4203f8:	and    bh,BYTE PTR [ecx]
  4203fa:	mov    dh,0x80
  4203fc:	mov    edx,0x7149c4d6
  420401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420402:	leave  
  420403:	sub    eax,DWORD PTR [edx]
  420405:	push   eax
  420406:	in     al,dx
  420407:	push   edi
  420408:	mov    ds:0x9d95afc6,eax
  42040d:	or     edx,DWORD PTR ds:0xf5b31de2
  420413:	enter  0xba7,0x2f
  420417:	xlat   BYTE PTR ds:[ebx]
  420418:	shr    DWORD PTR ds:0x2d7a56dc,cl
  42041e:	mov    eax,0xe5de53f4
  420423:	xor    al,0x65
  420425:	xor    al,0xa2
  420427:	xor    BYTE PTR ds:[edi-0x77],0x33
  42042c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42042d:	add    al,0x8
  42042f:	push   cs
  420430:	adc    DWORD PTR [eax],ebx
  420432:	imul   edi,DWORD PTR [ecx+0x2705b3ba],0x704e4554
  42043c:	push   esp
  42043d:	sub    edx,ebp
  42043f:	push   es
  420440:	xchg   esi,eax
  420441:	test   al,0x1b
  420443:	sub    ecx,DWORD PTR [ebp-0x6def25d6]
  420449:	test   eax,0xc493873b
  42044e:	add    eax,DWORD PTR [eax+esi*8]
  420451:	inc    edx
  420452:	adc    ch,BYTE PTR [edi+0xc]
  420455:	xor    al,0x56
  420457:	jl     0x4204bd
  420459:	scas   al,BYTE PTR es:[edi]
  42045a:	mov    esp,0xb21af38d
  42045f:	test   al,0xb5
  420461:	aam    0xe4
  420463:	stos   BYTE PTR es:[edi],al
  420464:	call   0xd93a:0xd182430e
  42046b:	das    
  42046c:	xchg   ebx,eax
  42046d:	or     eax,0x26e8cf1d
  420472:	jns    0x420481
  420474:	mov    eax,ds:0x89492330
  420479:	retf   0xcde7
  42047c:	xlat   BYTE PTR ds:[ebx]
  42047d:	mov    WORD PTR [edx+0x1d],fs
  420480:	shl    DWORD PTR [edi],cl
  420482:	test   eax,0xba90b2fb
  420487:	iret   
  420488:	aas    
  420489:	mov    ds:0xd6a6aae2,eax
  42048e:	jne    0x42042d
  420490:	popf   
  420491:	mov    edx,0x3620fbb6
  420496:	mov    BYTE PTR [edx],bh
  420498:	push   0x3c
  42049a:	je     0x42047e
  42049c:	loop   0x420460
  42049e:	ins    DWORD PTR es:[edi],dx
  42049f:	pop    ss
  4204a0:	jg     0x4204f3
  4204a2:	mov    bh,0x37
  4204a4:	push   edx
  4204a5:	adc    esp,DWORD PTR [ebp-0x55]
  4204a8:	add    ah,ah
  4204aa:	clc    
  4204ab:	jae    0x4204e1
  4204ad:	jb     0x420483
  4204af:	(bad)  
  4204b0:	xchg   ebp,eax
  4204b1:	fisubr WORD PTR [eax+0x43]
  4204b4:	imul   ebp,DWORD PTR [eax],0xffffffe9
  4204b7:	sti    
  4204b8:	jb     0x420440
  4204ba:	push   edx
  4204bb:	shr    DWORD PTR [edx*4-0x442d461b],cl
  4204c2:	adc    BYTE PTR [ebp-0xbffab1d],bh
  4204c8:	shl    DWORD PTR [ecx],1
  4204ca:	cmp    BYTE PTR [edi-0x75],0x5f
  4204ce:	add    al,0xfb
  4204d0:	(bad)  
  4204d1:	dec    BYTE PTR [edi+0x30]
  4204d4:	test   al,0xbd
  4204d6:	mov    ebp,0x3340eb19
  4204db:	add    eax,0x84150dac
  4204e0:	retf   
  4204e1:	(bad)  
  4204e2:	std    
  4204e3:	fwait
  4204e4:	shr    BYTE PTR [esi],cl
  4204e6:	push   edx
  4204e7:	pushf  
  4204e8:	dec    ebx
  4204e9:	and    DWORD PTR [edx+edx*1],esi
  4204ec:	inc    ecx
  4204ed:	xchg   edx,eax
  4204ee:	fldenv [ecx+0x45]
  4204f1:	scas   eax,DWORD PTR es:[edi]
  4204f2:	mov    dl,BYTE PTR [ebx-0x3afb7ed1]
  4204f8:	sbb    ebx,DWORD PTR [eax-0x6a685f3a]
  4204fe:	xchg   ebx,eax
  4204ff:	outs   dx,BYTE PTR ds:[esi]
  420500:	scas   al,BYTE PTR es:[edi]
  420501:	jmp    0x420541
  420503:	jno    0x420545
  420505:	pusha  
  420506:	daa    
  420507:	lock gs jl 0x4204f3
  42050b:	aam    0xae
  42050d:	xor    BYTE PTR [ecx],cl
  42050f:	sbb    al,0xe4
  420511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420512:	scas   al,BYTE PTR es:[edi]
  420513:	fsub   QWORD PTR [edi-0xd]
  420516:	mov    bl,0x52
  420518:	fmul   st(2),st
  42051a:	mov    bh,BYTE PTR [ebx]
  42051c:	mov    al,ds:0xd9272048
  420521:	sbb    ecx,DWORD PTR [edx-0x1c2bd0aa]
  420527:	pop    ds
  420528:	pop    edi
  420529:	mov    cl,0x6b
  42052b:	sbb    DWORD PTR [edx],0x65320ddb
  420531:	sbb    esp,DWORD PTR [ecx+0x54520530]
  420537:	lock jp 0x420553
  42053a:	repz cmp edi,DWORD PTR [ebx]
  42053d:	(bad)  
  42053e:	fidiv  DWORD PTR [ebx-0x5f524e61]
  420544:	jnp    0x420506
  420546:	int    0x22
  420548:	aad    0x47
  42054a:	arpl   WORD PTR cs:[edi+0x7d3d6662],si
  420551:	jle    0x4205a0
  420553:	sbb    eax,esp
  420555:	(bad)  
  420556:	sbb    edi,DWORD PTR [ebp+eiz*2+0x47f6e8a]
  42055d:	lea    esi,[ebx]
  42055f:	mov    al,ds:0xc79af71
  420564:	dec    eax
  420565:	cli    
  420566:	jnp    0x4205db
  420568:	les    esi,FWORD PTR [ebp+0xb4c8bac]
  42056e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42056f:	push   esp
  420570:	retf   
  420571:	add    al,0x4e
  420573:	mov    ch,0xd9
  420575:	test   BYTE PTR [edi-0x4],0x95
  420579:	(bad)  
  42057a:	fdivr  QWORD PTR [esi]
  42057c:	push   0xdd91dfb4
  420581:	mov    ds:0x33ba8291,eax
  420586:	jo     0x420604
  420588:	lahf   
  420589:	ret    0xb3a3
  42058c:	xor    al,0xe
  42058e:	fsub   QWORD PTR [eax]
  420590:	xor    esi,ebp
  420592:	push   edx
  420593:	mov    esi,0x86131501
  420598:	ret    
  420599:	mov    cl,0x1f
  42059b:	jmp    0x5c86d54e
  4205a0:	and    DWORD PTR cs:[esp-0x2f],esp
  4205a5:	sti    
  4205a6:	cmp    eax,0x264fd43c
  4205ab:	and    DWORD PTR [edx-0x4ce4085a],esi
  4205b1:	push   0x9a38fe83
  4205b6:	dec    eax
  4205b7:	call   0xc34d:0x7f197b46
  4205be:	jno    0x420620
  4205c0:	mov    ah,0xc6
  4205c2:	and    bl,BYTE PTR [edi]
  4205c4:	push   es
  4205c5:	pop    ebx
  4205c6:	call   0xcab09428
  4205cb:	mov    BYTE PTR [ebx],dh
  4205cd:	std    
  4205ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205cf:	push   ecx
  4205d0:	std    
  4205d1:	mov    eax,ds:0x1f7c6116
  4205d6:	inc    ebx
  4205d7:	sub    eax,0xf8ad207a
  4205dc:	jno    0x420615
  4205de:	cwde   
  4205df:	add    eax,0xdb2f4202
  4205e4:	pushf  
  4205e5:	fisubr WORD PTR [ebx+0x31b89f38]
  4205eb:	pop    esi
  4205ec:	loop   0x42060b
  4205ee:	imul   ebx,DWORD PTR [eax],0x43ffd2e8
  4205f4:	xor    DWORD PTR [ebx],esp
  4205f6:	mov    dl,0x55
  4205f8:	mov    edx,0x4080e184
  4205fd:	fs loop 0x4205fd
  420600:	neg    DWORD PTR [edx+ecx*8+0x2f]
  420604:	pusha  
  420605:	pop    ebx
  420606:	xlat   BYTE PTR ds:[ebx]
  420607:	jecxz  0x42063d
  420609:	jmp    0x2705bd04
  42060e:	lock sub ebx,edi
  420611:	lea    edx,[eax+eiz*1]
  420614:	jo     0x4205ca
  420616:	imul   ecx,DWORD PTR [edi-0x28],0xffffffb9
  42061a:	pop    esi
  42061b:	xchg   ebp,eax
  42061c:	pop    ds
  42061d:	xchg   DWORD PTR [edi+0x64],eax
  420620:	or     esp,DWORD PTR [ebp+0x67]
  420623:	fmul   st(1),st
  420625:	sub    al,0xa3
  420627:	mov    eax,0x8097970
  42062c:	ret    0xd855
  42062f:	stos   DWORD PTR es:[edi],eax
  420630:	add    al,0x7a
  420632:	push   0x125e668c
  420637:	and    eax,0x7fa2e2a7
  42063c:	inc    esp
  42063d:	aas    
  42063e:	out    dx,al
  42063f:	pusha  
  420640:	and    esp,DWORD PTR [ecx]
  420642:	and    DWORD PTR [ecx],esp
  420644:	(bad)  
  420645:	adc    edx,ebx
  420647:	imul   edi,edi,0xd7526e39
  42064d:	adc    ch,BYTE PTR [eax-0x54]
  420650:	cmp    edi,edx
  420652:	sti    
  420653:	aam    0x1c
  420655:	imul   ebp,ebx,0xffffff9a
  420658:	in     eax,0x95
  42065a:	test   BYTE PTR [eax-0x72574826],al
  420660:	push   ebx
  420661:	sub    DWORD PTR [esi+ebp*4],eax
  420664:	and    BYTE PTR [ebx-0x6a],ah
  420667:	dec    edx
  420668:	adc    esp,0x47
  42066b:	jb     0x420603
  42066d:	fadd   st,st(4)
  42066f:	fst    QWORD PTR [esi+0x77ed0fc6]
  420675:	test   DWORD PTR [eax-0xde4da81],esp
  42067b:	sub    eax,0x64d30a2c
  420680:	push   ebx
  420681:	xcrypt-cbc (bad)
  420682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420683:	adc    ah,BYTE PTR [edx+ebp*8+0x3132358d]
  42068a:	sti    
  42068b:	sahf   
  42068c:	xchg   ecx,eax
  42068d:	sub    BYTE PTR [edx],ah
  42068f:	xchg   esi,eax
  420690:	fisttp DWORD PTR [edi]
  420692:	xchg   edi,eax
  420693:	jge    0x420649
  420695:	stos   BYTE PTR es:[edi],al
  420696:	push   es
  420697:	fs mov bh,0x5
  42069a:	mov    ds:0xb6cefceb,eax
  42069f:	out    dx,eax
  4206a0:	mov    al,0x2e
  4206a2:	push   ebx
  4206a3:	out    dx,al
  4206a4:	cmp    al,BYTE PTR [eax+edi*4+0x22e7216c]
  4206ab:	je     0x420655
  4206ad:	in     eax,dx
  4206ae:	jnp    0x420684
  4206b0:	and    cl,BYTE PTR [esi]
  4206b2:	push   ebx
  4206b3:	repnz sub edx,ecx
  4206b6:	test   ebp,eax
  4206b8:	and    BYTE PTR [edx-0x192edd0d],0xc8
  4206bf:	mov    ebp,0x6e0232f0
  4206c4:	push   esi
  4206c5:	das    
  4206c6:	pop    edx
  4206c7:	ret    0x3c77
  4206ca:	dec    eax
  4206cb:	aas    
  4206cc:	and    dh,BYTE PTR [edx]
  4206ce:	stos   DWORD PTR es:[edi],eax
  4206cf:	in     al,dx
  4206d0:	cmp    al,0xf
  4206d2:	or     al,0xfd
  4206d4:	and    edx,esi
  4206d6:	xor    bl,bl
  4206d8:	cs repz push ebp
  4206db:	xor    BYTE PTR [ebx-0x18fe2f03],0x1c
  4206e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206e3:	mov    ds:0xe353ebb7,eax
  4206e8:	in     al,dx
  4206e9:	push   0xa9d06906
  4206ee:	out    0xbb,al
  4206f0:	pop    ebx
  4206f1:	xor    al,0x2b
  4206f3:	mov    cl,0xec
  4206f5:	out    0x49,al
  4206f7:	add    ecx,eax
  4206f9:	add    esi,DWORD PTR [eax+0x304db046]
  4206ff:	jns    0x4206c9
  420701:	daa    
  420702:	pop    ecx
  420703:	adc    edx,edx
  420705:	in     al,0x21
  420707:	test   eax,0xcbe5f71a
  42070c:	sub    al,0x39
  42070e:	(bad)  
  42070f:	test   DWORD PTR [edx-0x5a],esp
  420712:	jecxz  0x42074b
  420714:	shl    BYTE PTR [esi+0x47],cl
  420717:	popf   
  420718:	mov    ch,0xd3
  42071a:	iret   
  42071b:	repnz cmp al,0x8c
  42071e:	lahf   
  42071f:	shl    DWORD PTR [eax+0x76ba4e2],1
  420725:	inc    esp
  420726:	xchg   esi,eax
  420727:	pop    edi
  420728:	loopne 0x420769
  42072a:	imul   BYTE PTR [edx-0x77]
  42072d:	(bad)  
  42072e:	xor    esi,DWORD PTR [esi]
  420730:	inc    ebx
  420731:	or     bh,bh
  420733:	mov    ebp,0xe83ef3c
  420738:	inc    ebp
  420739:	and    edx,ebp
  42073b:	dec    esp
  42073c:	mov    edx,ss
  42073e:	xor    DWORD PTR [eax+0xcaeb0],eax
  420744:	mov    ebp,0x1bcde9c4
  420749:	jns    0x420743
  42074b:	push   eax
  42074c:	daa    
  42074d:	sbb    ebp,edx
  42074f:	push   esp
  420750:	stos   BYTE PTR es:[edi],al
  420751:	xchg   esi,eax
  420752:	mov    edi,0xa6c97ade
  420757:	mov    ebp,0xb7ec512e
  42075c:	mov    al,ds:0xfd875ec1
  420761:	push   ecx
  420762:	mov    dl,0xac
  420764:	popf   
  420765:	bound  eax,QWORD PTR [edx+ebx*4+0x44338316]
  42076c:	arpl   WORD PTR [edi],bp
  42076e:	jecxz  0x420758
  420770:	fbstp  TBYTE PTR [ecx-0x62]
  420773:	sbb    BYTE PTR [eax+0x2],0x6b
  420777:	sub    eax,0x2c7b640b
  42077c:	inc    esp
  42077d:	sbb    ecx,DWORD PTR ds:0xfd2f0ece
  420783:	fs sub eax,edi
  420786:	and    ebx,DWORD PTR [ebp+0x6f]
  420789:	pop    eax
  42078a:	sub    ebx,0x9a2316d2
  420790:	cs add eax,ecx
  420793:	mov    DWORD PTR [ebp-0x14],eax
  420796:	mov    eax,DWORD PTR [ebp-0x14]
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a72b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a74b
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a767
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a737
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a74f
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a753
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a757
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a75b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a75f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a74b
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a737
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a763
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a76b
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a733
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a74b
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a737
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a74b
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a737
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a74b
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a737
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a74b
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a737
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a74b
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a737
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a74b
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a737
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a74b
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a737
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a74b
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a737
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a74b
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a737
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a74b
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a737
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a74b
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a737
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a74b
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a737
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a74b
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a737
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a74b
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a767
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a737
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a73b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a73f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a743
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	out    0xbc,eax
  421dbc:	push   es
  421dbd:	xor    ch,BYTE PTR [edi-0x4f]
  421dc0:	add    BYTE PTR [ebx-0x7c7ca400],0x88
  421dc7:	sti    
  421dc8:	ss aaa 
  421dca:	dec    ecx
  421dcb:	xor    eax,0xbaf56d44
  421dd0:	cwde   
  421dd1:	cmp    bl,dh
  421dd3:	pop    esi
  421dd4:	sbb    eax,0xca2d630b
  421dd9:	xor    DWORD PTR [ebp+ebp*1-0x1d],ebx
  421ddd:	or     al,0x22
  421ddf:	jmp    0x421e0a
  421de1:	sub    esp,ebp
  421de3:	xor    cl,BYTE PTR [esi-0x582839c5]
  421de9:	xchg   esi,eax
  421dea:	add    al,0xde
  421dec:	dec    ebp
  421ded:	das    
  421dee:	fnstsw WORD PTR [esi]
  421df0:	inc    ebp
  421df1:	pop    edx
  421df2:	icebp  
  421df3:	idiv   BYTE PTR [edx-0x31]
  421df6:	in     eax,0xc9
  421df8:	ins    DWORD PTR es:[edi],dx
  421df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dfa:	mov    cl,0x61
  421dfc:	lea    esi,[ebp-0x2d454102]
  421e02:	ss mov ecx,0xa11303c9
  421e08:	mov    esp,DWORD PTR [edi-0x337f02ad]
  421e0e:	and    DWORD PTR [ebp-0x1379af00],ebx
  421e14:	xor    dh,BYTE PTR [eax+0x13e74946]
  421e1a:	sahf   
  421e1b:	cs inc edx
  421e1d:	cmp    dl,BYTE PTR [esi]
  421e1f:	scas   al,BYTE PTR es:[edi]
  421e20:	cmp    ecx,esi
  421e22:	dec    esp
  421e23:	cli    
  421e24:	or     BYTE PTR ds:0x1d581294,ah
  421e2a:	test   al,0x49
  421e2c:	cld    
  421e2d:	jl     0x421e4d
  421e2f:	imul   eax,esp,0x32
  421e32:	push   esi
  421e33:	(bad)  
  421e34:	jo     0x421e8c
  421e36:	xchg   esp,eax
  421e37:	add    eax,0x4bbda50e
  421e3c:	fstp   QWORD PTR [edx+ebx*4+0x16]
  421e40:	call   0x35a11369
  421e45:	cmp    bh,dh
  421e47:	mov    eax,0x36924247
  421e4c:	js     0x421e92
  421e4e:	stos   BYTE PTR es:[edi],al
  421e4f:	sub    edi,ebp
  421e51:	fwait
  421e52:	mov    eax,0x8c5c6d37
  421e57:	xor    BYTE PTR [esi],0x9e
  421e5a:	jnp    0x421e10
  421e5c:	adc    BYTE PTR [eax-0x71],cl
  421e5f:	cmp    eax,0x7025836b
  421e64:	xor    ah,bh
  421e66:	xchg   ecx,eax
  421e67:	mov    ds:0x76829e,al
  421e6c:	pop    esp
  421e6d:	enter  0xcf,0xcb
  421e71:	ret    
  421e72:	js     0x421ee9
  421e74:	shr    DWORD PTR [ebx+0x3de00d2d],0x22
  421e7b:	jns    0x421e4f
  421e7d:	test   DWORD PTR [ecx],edx
  421e7f:	or     bh,BYTE PTR [ecx+esi*8]
  421e82:	push   edi
  421e83:	fdiv   st(7),st
  421e85:	popa   
  421e86:	cmp    DWORD PTR [ebx+0x7843a28c],esi
  421e8c:	mov    eax,ds:0xf2f924d2
  421e91:	mov    bl,0x86
  421e93:	dec    ebx
  421e94:	retf   0xe3cf
  421e97:	inc    edx
  421e98:	mov    ah,0x6c
  421e9a:	or     esi,DWORD PTR [esi+ebx*4-0x1ffec166]
  421ea1:	jbe    0x421ecd
  421ea3:	fld    QWORD PTR [ebp+0xb]
  421ea6:	push   ebx
  421ea7:	(bad)  
  421ea8:	xchg   esp,eax
  421ea9:	adc    cl,BYTE PTR [ebx]
  421eab:	jne    0x421edc
  421ead:	fcom   QWORD PTR [edx]
  421eaf:	push   esi
  421eb0:	add    eax,0x78a2c6b8
  421eb5:	xchg   edi,eax
  421eb6:	outs   dx,BYTE PTR ds:[esi]
  421eb7:	dec    edi
  421eb8:	int    0xfa
  421eba:	mov    bh,0x5c
  421ebc:	inc    esp
  421ebd:	neg    BYTE PTR [ecx]
  421ebf:	call   0x5026108a
  421ec4:	jmp    0xe1ee334f
  421ec9:	jp     0x421ef1
  421ecb:	lea    edi,[ecx+0x3a]
  421ece:	adc    BYTE PTR [edx],ah
  421ed0:	repz fwait
  421ed2:	(bad)  
  421ed3:	jecxz  0x421ef8
  421ed5:	call   0x253b:0x50c136cc
  421edc:	and    bl,dh
  421ede:	jbe    0x421ea0
  421ee0:	sub    BYTE PTR [eax+0x65cc8075],al
  421ee6:	xchg   ecx,eax
  421ee7:	push   ebx
  421ee8:	sub    al,0xac
  421eea:	inc    ebx
  421eeb:	ins    BYTE PTR es:[edi],dx
  421eec:	mov    cl,0xec
  421eee:	pop    ds
  421eef:	nop
  421ef0:	add    al,0x3f
  421ef2:	inc    esi
  421ef3:	iret   
  421ef4:	pop    ebp
  421ef5:	data16 fdiv DWORD PTR [edi]
  421ef8:	jmp    0xdba8:0xc55a5df6
  421eff:	dec    esi
  421f00:	mov    ebp,0xf23fe429
  421f05:	add    al,0x70
  421f07:	call   0x8a85:0x21071c61
  421f0e:	in     eax,dx
  421f0f:	je     0x421f66
  421f11:	out    0x42,al
  421f13:	push   ebp
  421f14:	add    edi,DWORD PTR [edx+0x684d915e]
  421f1a:	sbb    BYTE PTR [ebx+0x287587e2],0x23
  421f21:	and    esp,DWORD PTR [ebx]
  421f23:	test   BYTE PTR [ebx-0x65],0xdf
  421f27:	js     0x421f19
  421f29:	push   ecx
  421f2a:	jmp    0x837b:0x73fc67b8
  421f31:	shr    bl,1
  421f33:	test   al,0x76
  421f35:	out    dx,eax
  421f36:	out    0x64,al
  421f38:	je     0x421ebc
  421f3a:	out    0xd0,eax
  421f3c:	sub    dh,dh
  421f3e:	out    0x45,al
  421f40:	xor    eax,0x35fb68a7
  421f45:	add    BYTE PTR ds:0xceca7433,0xf
  421f4c:	nop
  421f4d:	(bad)  
  421f4e:	outs   dx,BYTE PTR ds:[esi]
  421f4f:	in     eax,0x14
  421f51:	or     eax,0x22fcd24d
  421f56:	xor    esi,DWORD PTR [ecx+0x9858549]
  421f5c:	int    0x38
  421f5e:	std    
  421f5f:	dec    edx
  421f60:	rcl    DWORD PTR [edi],cl
  421f62:	fiadd  DWORD PTR [eax]
  421f64:	int3   
  421f65:	sbb    bh,dh
  421f67:	into   
  421f68:	mov    WORD PTR [ebx-0x5d],fs
  421f6b:	or     BYTE PTR [edi+0x71],0x48
  421f6f:	push   0x17a4d0ae
  421f74:	pop    ecx
  421f75:	in     al,0xbc
  421f77:	and    DWORD PTR ds:0x6cbc3d17,esi
  421f7d:	push   0xf426aca0
  421f82:	jne    0x421f09
  421f84:	test   DWORD PTR [ebp-0x7e],esi
  421f87:	mov    WORD PTR [ecx-0x69b7d7f6],fs
  421f8d:	xor    al,0x3f
  421f8f:	dec    edx
  421f90:	(bad)  
  421f91:	and    al,0xb4
  421f93:	pop    edi
  421f94:	push   ds
  421f95:	pusha  
  421f96:	out    dx,eax
  421f97:	add    eax,0xc035e581
  421f9c:	jecxz  0x421f80
  421f9e:	and    eax,DWORD PTR [edi]
  421fa0:	cmc    
  421fa1:	pop    ds
  421fa2:	pop    esi
  421fa3:	jp     0x421ff3
  421fa5:	mov    ds:0xe406f43d,eax
  421faa:	jecxz  0x42200a
  421fac:	ja     0x421fac
  421fae:	dec    edi
  421faf:	dec    eax
  421fb0:	push   eax
  421fb1:	mov    ds:0x2f07e626,al
  421fb6:	xchg   ecx,edx
  421fb8:	add    DWORD PTR [ebx+0x45a485da],edi
  421fbe:	sub    al,0x51
  421fc0:	sbb    al,0x83
  421fc2:	icebp  
  421fc3:	out    dx,al
  421fc4:	bound  ecx,QWORD PTR [eax+ecx*8+0x6f348686]
  421fcb:	fadd   QWORD PTR [edi+0x4a]
  421fce:	xchg   ebp,eax
  421fcf:	pop    eax
  421fd0:	je     0x421fdd
  421fd2:	popa   
  421fd3:	xchg   ecx,eax
  421fd4:	ja     0x421fd3
  421fd6:	xchg   ecx,eax
  421fd7:	aam    0x4e
  421fd9:	dec    edx
  421fda:	hlt    
  421fdb:	daa    
  421fdc:	add    eax,DWORD PTR [eax+0x3c]
  421fdf:	test   DWORD PTR [edi],0x401d3a56
  421fe5:	cli    
  421fe6:	pop    ss
  421fe7:	adc    al,BYTE PTR [edx]
  421fe9:	inc    edx
  421fea:	into   
  421feb:	cld    
  421fec:	mov    edx,0x17736beb
  421ff1:	imul   eax,DWORD PTR [eax],0x6c
  421ff4:	fwait
  421ff5:	xor    DWORD PTR [ebp+0x48],ecx
  421ff8:	mov    esi,0xea77751b
  421ffd:	(bad)  
  421ffe:	aad    0x14
  422000:	imul   edi,DWORD PTR [ecx-0x1f16728e],0xfffffff0
  422007:	fcmovne st,st(4)
  422009:	pop    es
  42200a:	jb     0x421fbf
  42200c:	inc    edx
  42200d:	push   ebx
  42200e:	pop    esi
  42200f:	data16 cmp al,0x9c
  422012:	mov    dh,0xe
  422014:	mov    bl,0xa5
  422016:	xor    BYTE PTR [eax-0xd5b25bb],bh
  42201c:	cwde   
  42201d:	lahf   
  42201e:	jge    0x422010
  422020:	out    0x9d,al
  422022:	push   0x6e
  422024:	push   ds
  422025:	push   0x49
  422027:	loop   0x421fde
  422029:	and    ecx,DWORD PTR [ecx-0x22dea8c5]
  42202f:	mov    edi,0x86cf2dc5
  422034:	sbb    eax,0x5ff7cc58
  422039:	mov    eax,ds:0x759587ad
  42203e:	cmc    
  42203f:	ficomp WORD PTR ds:0xb7618083
  422045:	les    esi,FWORD PTR [ebp-0x511c2f6b]
  42204b:	pop    ebx
  42204c:	mov    edi,0xf2b9c2ca
  422051:	cmp    al,0x22
  422053:	out    dx,eax
  422054:	cs (bad) 
  422056:	shl    DWORD PTR [eax],cl
  422058:	dec    edx
  422059:	mov    ch,0x27
  42205b:	and    DWORD PTR [ebp+esi*2+0x74092f01],ecx
  422062:	loope  0x42203c
  422064:	xchg   ebx,eax
  422065:	lods   eax,DWORD PTR ds:[esi]
  422066:	pop    esi
  422067:	scas   eax,DWORD PTR es:[edi]
  422068:	dec    ebp
  422069:	int    0xc6
  42206b:	mov    cl,0xad
  42206d:	cmp    ebp,edx
  42206f:	dec    edx
  422070:	cld    
  422071:	jge    0x42201c
  422073:	cmp    BYTE PTR [esp+eiz*8],cl
  422076:	cmp    eax,0xf987db83
  42207b:	jnp    0x422050
  42207d:	repz mov dl,0x60
  422080:	add    eax,0xbd250815
  422085:	mov    esp,0x52898568
  42208a:	fcomp  QWORD PTR [edi-0x43]
  42208d:	in     al,dx
  42208e:	dec    edx
  422090:	test   eax,0x48983a5f
  422095:	jmp    0x5016b901
  42209a:	add    al,0x21
  42209c:	ja     0x4220f9
  42209e:	pop    esp
  42209f:	mov    al,ds:0x546f9224
  4220a4:	xchg   esi,eax
  4220a5:	ret    
  4220a6:	pop    ss
  4220a7:	adc    BYTE PTR [esi+0x74782fb9],bh
  4220ad:	iret   
  4220ae:	outs   dx,BYTE PTR ds:[esi]
  4220af:	stos   BYTE PTR es:[edi],al
  4220b0:	neg    ah
  4220b2:	adc    BYTE PTR [ebx-0xdac5abb],dh
  4220b8:	pop    ss
  4220b9:	inc    ebx
  4220ba:	dec    ebp
  4220bb:	dec    ebp
  4220bc:	icebp  
  4220bd:	or     bh,BYTE PTR [edx+esi*4]
  4220c0:	int    0x9a
  4220c2:	vfmsubadd132pd zmm2{k7},zmm6,ZMMWORD PTR [edi]
  4220c8:	or     eax,0xaa46e54a
  4220cd:	adc    DWORD PTR [eax],eax
  4220cf:	jle    0x422108
  4220d1:	pop    eax
  4220d2:	sar    ebx,cl
  4220d4:	dec    esi
  4220d5:	push   eax
  4220d6:	push   ebp
  4220d7:	bound  edx,QWORD PTR [edx]
  4220d9:	dec    ecx
  4220da:	mov    edx,0x42e3d1c2
  4220df:	outs   dx,BYTE PTR ds:[esi]
  4220e0:	lea    ecx,[edi-0x8]
  4220e3:	int3   
  4220e4:	mov    ebp,0xaf873f1e
  4220e9:	call   0xd705:0xf2881a7b
  4220f0:	cld    
  4220f1:	pop    esi
  4220f2:	lds    eax,FWORD PTR [ebx]
  4220f4:	cmp    BYTE PTR [ecx],ch
  4220f6:	push   0x713cd282
  4220fb:	add    dh,BYTE PTR [esi]
  4220fd:	popf   
  4220fe:	sub    al,0x98
  422100:	xor    DWORD PTR [edi+0x6a],0x4fd8701b
  422107:	adc    esi,DWORD PTR [edi+0x54]
  42210a:	ret    0xc3eb
  42210d:	pop    ds
  42210e:	cmp    ebx,DWORD PTR [ebp-0x3cccc347]
  422114:	leave  
  422115:	add    al,0xf8
  422117:	sub    dl,ch
  422119:	sub    esp,DWORD PTR [ebx]
  42211b:	mov    edx,0x9cd3da7c
  422120:	addr16 cmp al,0xe8
  422123:	mov    ebx,0x2535e6b5
  422128:	rcr    DWORD PTR [esi+0x44fd8e4b],cl
  42212e:	mov    dl,0xc7
  422130:	fxch   st(5)
  422132:	test   al,0x40
  422134:	fisub  WORD PTR [ebp+eiz*8+0x4a]
  422138:	ins    DWORD PTR es:[edi],dx
  422139:	mov    ebx,0xce333187
  42213e:	popf   
  42213f:	pop    es
  422140:	stos   BYTE PTR es:[edi],al
  422141:	in     eax,0xa3
  422143:	jmp    0x1ef16954
  422148:	inc    ebx
  422149:	add    DWORD PTR [eax],eax
  42214b:	fisub  WORD PTR [eax+0x9ba2838]
  422151:	cld    
  422152:	jg     0x422153
  422154:	into   
  422155:	sahf   
  422156:	push   ds
  422157:	dec    ebp
  422158:	les    ebp,FWORD PTR [eax+0x3a13bb72]
  42215e:	icebp  
  42215f:	(bad)  
  422160:	(bad)  
  422161:	data16 adc BYTE PTR [edi+0xc6a8b35],cl
  422168:	push   edi
  422169:	in     al,0x1d
  42216b:	aas    
  42216c:	mov    esp,0x294b9f13
  422171:	(bad)  
  422172:	int3   
  422173:	(bad)  
  422174:	mov    edx,0xe189a23b
  422179:	sbb    ah,BYTE PTR [edi+0x375f877e]
  42217f:	adc    BYTE PTR [edi],dh
  422181:	ss inc eax
  422183:	dec    esp
  422184:	xchg   esp,eax
  422185:	dec    edi
  422186:	test   BYTE PTR [ebp-0x58],cl
  422189:	push   edi
  42218a:	xor    DWORD PTR [eax+0x52b7b893],esi
  422190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422191:	add    bh,BYTE PTR [edx+0x4f4e951d]
  422197:	mov    ah,0x5f
  422199:	test   BYTE PTR [ebp+0x4961a275],dl
  42219f:	ret    0xfa00
  4221a2:	jns    0x422169
  4221a4:	das    
  4221a5:	mov    al,ds:0x8f9a12fc
  4221aa:	jae    0x4221bc
  4221ac:	(bad)  
  4221ae:	and    DWORD PTR [edx-0x110a0fef],0xfffffff2
  4221b5:	addr16 push cs
  4221b7:	add    DWORD PTR [edi],esi
  4221b9:	add    al,0xe0
  4221bb:	(bad)  
  4221bc:	cmp    bl,ah
  4221be:	retf   
  4221bf:	ds xor eax,0x30a0ba5
  4221c5:	std    
  4221c6:	xlat   BYTE PTR ds:[ebx]
  4221c7:	xchg   ebp,eax
  4221c8:	call   0xe67e:0xadcf469
  4221cf:	test   eax,0xb8bff9c2
  4221d4:	jno    0x42222f
  4221d6:	cs and eax,0x19e747d4
  4221dc:	jmp    0x4221f3
  4221de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221df:	loope  0x422173
  4221e1:	xor    bl,al
  4221e3:	cmp    al,0x8b
  4221e5:	mov    ebx,0x8e16ab25
  4221ea:	xlat   BYTE PTR ds:[ebx]
  4221eb:	addr16 int3 
  4221ed:	in     eax,dx
  4221ee:	or     al,BYTE PTR [esi+ebp*8]
  4221f1:	scas   al,BYTE PTR es:[edi]
  4221f2:	jmp    0x4221d5
  4221f4:	fmul   st(2),st
  4221f6:	ficom  WORD PTR [esi+0x5658c107]
  4221fc:	not    BYTE PTR [eax+0x184a0937]
  422202:	xor    al,0x96
  422204:	enter  0x4dcb,0x12
  422208:	pop    ds
  422209:	sub    bh,BYTE PTR [edi-0x7e328b82]
  42220f:	ins    BYTE PTR es:[edi],dx
  422210:	and    al,BYTE PTR [ecx-0x3]
  422213:	(bad)  
  422214:	fistp  DWORD PTR [eax-0x59]
  422217:	inc    eax
  422218:	out    0x52,al
  42221a:	in     al,dx
  42221b:	sub    DWORD PTR [eax+ebp*1],esi
  42221e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42221f:	hlt    
  422220:	ins    DWORD PTR es:[edi],dx
  422221:	xor    DWORD PTR [eax],ebx
  422223:	iret   
  422224:	cmp    DWORD PTR [edx-0x66443f40],0x5100ad7e
  42222e:	mov    bl,ah
  422230:	fidivr WORD PTR ds:0xb6f7fb58
  422236:	mov    gs,WORD PTR [eax+0x7a68e920]
  42223c:	loope  0x42226a
  42223e:	in     al,0x48
  422240:	or     eax,0x18d089d1
  422245:	(bad)  
  422246:	aam    0xb5
  422248:	push   0xffffffcf
  42224a:	mov    eax,ds:0x6917f4c
  42224f:	inc    edi
  422250:	lods   eax,DWORD PTR ds:[esi]
  422251:	push   cs
  422252:	cli    
  422253:	sbb    BYTE PTR [ecx+0x28],ah
  422256:	out    dx,al
  422257:	xlat   BYTE PTR ds:[ebx]
  422258:	pop    ss
  422259:	adc    BYTE PTR [ecx-0x5ec6861b],cl
  42225f:	push   edx
  422260:	jo     0x42226d
  422262:	jp     0x4221ff
  422264:	push   0xffffff8a
  422266:	js     0x422261
  422268:	test   al,0x3c
  42226a:	xchg   edx,eax
  42226b:	dec    esi
  42226c:	pcmpeqw mm1,QWORD PTR [ecx+0x2696c2f9]
  422273:	adc    edx,edi
  422275:	jmp    0x9b8531fb
  42227a:	ins    DWORD PTR es:[edi],dx
  42227b:	aas    
  42227c:	sbb    BYTE PTR [ecx],bh
  42227e:	xchg   esp,eax
  42227f:	stos   BYTE PTR es:[edi],al
  422280:	pop    ebp
  422281:	xor    ah,BYTE PTR [ebp-0x4e]
  422284:	xchg   BYTE PTR [ecx+0x5a3bf77b],dl
  42228a:	lock out dx,al
  42228c:	test   al,0x70
  42228e:	push   ecx
  42228f:	pop    es
  422290:	cli    
  422291:	mov    ch,0x18
  422293:	cmp    BYTE PTR [ebx-0x32],0x32
  422297:	fistp  QWORD PTR [edx+0x64]
  42229a:	pusha  
  42229b:	loopne 0x4222d4
  42229d:	(bad)  
  42229e:	test   eax,0x85c65349
  4222a3:	mul    DWORD PTR ds:0xff031e37
  4222a9:	hlt    
  4222aa:	dec    eax
  4222ab:	inc    edx
  4222ac:	jmp    0x9be7:0xcced9ddb
  4222b3:	sub    BYTE PTR [eax],al
  4222b5:	rol    DWORD PTR [esi],cl
  4222b7:	mov    BYTE PTR [ecx+0x21df1740],bh
  4222bd:	push   eax
  4222be:	mov    ebp,0x5d825c81
  4222c3:	stc    
  4222c4:	mov    fs,esp
  4222c6:	cmc    
  4222c7:	xchg   edi,eax
  4222c8:	sub    eax,0x4de939b3
  4222cd:	mov    ebp,0x9761ef19
  4222d2:	cmp    BYTE PTR [edi+edx*2-0x4f],dh
  4222d6:	mov    DWORD PTR [esi],ebx
  4222d8:	mov    ebx,0x2220f199
  4222dd:	sahf   
  4222de:	mov    ss,esp
  4222e0:	je     0x4222ef
  4222e2:	aas    
  4222e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222e4:	mov    BYTE PTR [eax],0x5
  4222e7:	cwde   
  4222e8:	(bad)  
  4222e9:	cdq    
  4222ea:	aad    0xbd
  4222ec:	arpl   bp,bx
  4222ee:	into   
  4222ef:	push   ebx
  4222f0:	jecxz  0x422295
  4222f2:	scas   al,BYTE PTR es:[edi]
  4222f3:	mul    DWORD PTR [eax+edi*1-0x1e245775]
  4222fa:	mov    ch,0xe3
  4222fc:	add    al,0xf4
  4222fe:	(bad)  
  4222ff:	stc    
  422300:	xchg   edx,eax
  422301:	dec    ebx
  422302:	jbe    0x4222a6
  422304:	popf   
  422305:	sbb    ebx,ebx
  422307:	imul   DWORD PTR [esi]
  422309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42230a:	test   al,0xd8
  42230c:	in     al,0x10
  42230e:	jp     0x422313
  422310:	cmp    edi,edi
  422312:	xchg   edi,eax
  422313:	arpl   WORD PTR [eax],bx
  422315:	bound  edx,QWORD PTR [edx]
  422317:	sbb    al,0x67
  422319:	xor    al,0xa
  42231b:	and    eax,0x7949488d
  422320:	dec    BYTE PTR [esi-0x34]
  422323:	mov    ecx,DWORD PTR [edx-0xe]
  422326:	mov    ah,0xd6
  422328:	mov    BYTE PTR [eax+0x365b44fc],ch
  42232e:	ret    0xa5ae
  422331:	mov    WORD PTR [ebp+0x61bddc37],gs
  422337:	or     eax,0x9894d001
  42233c:	repnz xor dh,dl
  42233f:	xchg   ebx,eax
  422340:	inc    ebp
  422341:	or     edx,edi
  422343:	sbb    BYTE PTR cs:[ebx+0x7a],ah
  422347:	sbb    esp,DWORD PTR [eax+ebx*1+0x12]
  42234b:	xchg   edi,eax
  42234c:	call   0xb017cee8
  422351:	xor    eax,0x7d70b121
  422356:	iret   
  422357:	cwde   
  422358:	pop    esi
  422359:	outs   dx,DWORD PTR ds:[esi]
  42235a:	sar    BYTE PTR [edx-0x43],cl
  42235d:	js     0x4223cd
  42235f:	inc    ecx
  422360:	pop    esp
  422361:	inc    ecx
  422362:	popf   
  422363:	outs   dx,BYTE PTR ds:[esi]
  422364:	outs   dx,DWORD PTR ds:[esi]
  422365:	call   0xa76b634a
  42236a:	xchg   edi,eax
  42236b:	jecxz  0x42238d
  42236d:	stos   BYTE PTR es:[edi],al
  42236e:	jb     0x42239b
  422370:	inc    esp
  422371:	pop    ds
  422372:	add    DWORD PTR [eax-0x75],0x30
  422376:	xchg   edx,eax
  422377:	rcr    DWORD PTR [edi+ebp*1],cl
  42237a:	push   esp
  42237b:	test   ecx,eax
  42237d:	mov    dh,0xb3
  42237f:	pop    ss
  422380:	out    dx,al
  422381:	int3   
  422382:	nop
  422383:	sub    esp,DWORD PTR [edx]
  422385:	xchg   edx,eax
  422386:	jmp    0x422316
  422388:	ror    DWORD PTR [esi-0x1a27faa9],cl
  42238e:	adc    ecx,DWORD PTR [eax-0x6d]
  422391:	fdivr  QWORD PTR [edx+0x21]
  422394:	cmp    al,0x6d
  422396:	inc    ebx
  422397:	ja     0x4223cc
  422399:	mov    al,ds:0x75cf7c12
  42239e:	mov    ss,edx
  4223a0:	inc    ebp
  4223a1:	xor    edx,DWORD PTR [edi+0x3c]
  4223a4:	jmp    0x1894:0x306d
  4223aa:	pop    ds
  4223ab:	fimul  WORD PTR [esp+edx*8]
  4223ae:	cmp    BYTE PTR ds:[edx],ch
  4223b1:	jae    0x4223d8
  4223b3:	shl    DWORD PTR [ebx-0x5e4175eb],cl
  4223b9:	or     al,0xd0
  4223bb:	xor    al,0x10
  4223bd:	sbb    eax,0xe0e95d51
  4223c2:	mul    BYTE PTR [ebx]
  4223c4:	lock loop 0x42242f
  4223c7:	push   ebx
  4223c8:	call   DWORD PTR [ecx+0x7]
  4223cb:	adc    BYTE PTR [ecx-0x43],ch
  4223ce:	mov    ah,0x8c
  4223d0:	push   eax
  4223d1:	mov    ds:0x3f037ea2,al
  4223d6:	sti    
  4223d7:	push   edx
  4223d8:	loope  0x42242c
  4223da:	xchg   edx,eax
  4223db:	cmp    ebp,DWORD PTR [ecx-0x2bf1c932]
  4223e1:	jge    0x42244b
  4223e3:	mov    ebx,0x8415d26c
  4223e8:	jmp    0x4223e3
  4223ea:	(bad)  
  4223eb:	lds    edi,FWORD PTR [esi+0x15922888]
  4223f1:	pop    edx
  4223f2:	int    0xf6
  4223f4:	hlt    
  4223f5:	push   ss
  4223f6:	cmp    ch,BYTE PTR ds:0x31f612d3
  4223fc:	and    BYTE PTR [ecx+0x35],dh
  4223ff:	xor    eax,DWORD PTR [ebx+0x69]
  422402:	xor    DWORD PTR [edi+0x30],ebx
  422405:	in     eax,0xfd
  422407:	add    al,0x91
  422409:	aad    0x84
  42240b:	pop    ecx
  42240c:	lea    esp,[eax]
  42240e:	inc    esi
  42240f:	xchg   edi,eax
  422410:	(bad)
  422415:	push   cs
  422416:	mov    eax,ds:0x662f783e
  42241b:	cdq    
  42241c:	inc    DWORD PTR [esi+0x518ae3c6]
  422422:	loope  0x42248e
  422424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422425:	test   eax,0x277e2992
  42242a:	and    edi,edx
  42242c:	retf   
  42242d:	pop    ecx
  42242e:	sbb    esi,DWORD PTR [ecx+ebx*4+0x44]
  422432:	ret    
  422433:	dec    eax
  422434:	ret    
  422435:	inc    edi
  422436:	ret    
  422437:	xchg   edi,eax
  422438:	sub    esi,DWORD PTR [ecx]
  42243a:	xor    al,0x2
  42243c:	sti    
  42243d:	sub    al,0x94
  42243f:	stos   BYTE PTR es:[edi],al
  422440:	jne    0x422430
  422442:	dec    eax
  422443:	or     al,0x1
  422445:	inc    esi
  422446:	pop    ds
  422447:	cdq    
  422448:	lock jno 0x422476
  42244b:	pop    ds
  42244c:	test   al,0x5f
  42244e:	icebp  
  42244f:	inc    edi
  422450:	and    eax,0x624854df
  422455:	push   ebp
  422456:	shl    ebp,cl
  422458:	inc    edi
  422459:	inc    ecx
  42245a:	cmp    esi,edi
  42245c:	ja     0x4223f4
  42245e:	adc    DWORD PTR [edi*2-0x5a82a576],ecx
  422465:	enter  0x3b60,0xfa
  422469:	cli    
  42246a:	pop    ebx
  42246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42246c:	test   al,0xd3
  42246e:	gs xchg edx,eax
  422470:	mov    WORD PTR [edi],ds
  422472:	lods   eax,DWORD PTR ds:[esi]
  422473:	movsx  esi,dh
  422476:	stos   BYTE PTR es:[edi],al
  422477:	mov    ah,0x33
  422479:	sti    
  42247a:	add    DWORD PTR [ebx],0xffffffbf
  42247d:	mov    dh,0xa3
  42247f:	jne    0x422438
  422481:	scas   eax,DWORD PTR es:[edi]
  422482:	femms  
  422484:	in     al,dx
  422485:	push   esp
  422486:	xchg   esp,eax
  422487:	(bad)  
  422488:	out    dx,al
  422489:	push   cs
  42248a:	pop    ecx
  42248b:	scas   al,BYTE PTR es:[edi]
  42248c:	jbe    0x422486
  42248e:	push   ebx
  42248f:	lods   eax,DWORD PTR ds:[esi]
  422490:	mov    WORD PTR [eax+eax*2-0x27a8c363],cs
  422497:	pop    esp
  422498:	out    0xf,al
  42249a:	fst    st(3)
  42249c:	push   DWORD PTR [ebx+0x4a]
  42249f:	pop    ebx
  4224a0:	sbb    eax,0x6079236a
  4224a5:	imul   dh
  4224a7:	retf   0xb4b6
  4224aa:	fidiv  DWORD PTR [ebp+eax*8+0x56]
  4224ae:	add    edx,eax
  4224b0:	mov    ebp,0x7d0f01f6
  4224b5:	jmp    0xc72b3788
  4224ba:	push   ecx
  4224bb:	mov    ebp,0xb614ef66
  4224c0:	retf   0xaac8
  4224c3:	xchg   ebx,eax
  4224c4:	jne    0x4224d9
  4224c6:	stos   BYTE PTR es:[edi],al
  4224c7:	cli    
  4224c8:	sub    DWORD PTR [ebx],ebp
  4224ca:	adc    DWORD PTR [edx+0x1f],ebx
  4224cd:	cs cmp eax,0x72563acb
  4224d3:	jmp    0x4224c9
  4224d5:	jno    0x422467
  4224d7:	iret   
  4224d8:	inc    ecx
  4224d9:	loopne 0x42254e
  4224db:	xor    dh,0x19
  4224de:	cmp    ebp,DWORD PTR [eax]
  4224e0:	pop    edi
  4224e1:	push   ebp
  4224e2:	push   esp
  4224e3:	hlt    
  4224e4:	mov    bh,0x87
  4224e6:	or     esp,DWORD PTR [eax]
  4224e8:	daa    
  4224e9:	lahf   
  4224ea:	or     eax,esp
  4224ec:	cli    
  4224ed:	test   dh,0xca
  4224f0:	je     0x42253b
  4224f2:	cmp    ch,BYTE PTR [edi]
  4224f4:	jge    0x422538
  4224f6:	ja     0x422503
  4224f8:	and    al,0x52
  4224fa:	mov    ah,BYTE PTR [esi+ebx*8-0x61b8d1a1]
  422501:	cmp    BYTE PTR [ebp+0x74561af5],bl
  422507:	imul   esp,DWORD PTR [edx+0x5a],0x5e
  42250b:	mov    dh,0xdf
  42250d:	xchg   edi,eax
  42250e:	mov    ebx,0x14b8f8da
  422513:	push   cs
  422514:	sbb    DWORD PTR [eax],eax
  422516:	xor    al,0x51
  422518:	rcl    BYTE PTR [ecx+0x304ad224],cl
  42251e:	lods   al,BYTE PTR ds:[esi]
  42251f:	mov    edx,0xe6d45491
  422524:	mov    al,ds:0xfea5a5f0
  422529:	and    dh,BYTE PTR [edi]
  42252b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42252c:	inc    ebp
  42252d:	sbb    cl,BYTE PTR [esi-0x77]
  422530:	xchg   esp,eax
  422531:	nop
  422532:	sub    eax,0xe49b0b18
  422537:	push   esp
  422538:	push   esp
  422539:	or     bl,BYTE PTR [esi]
  42253b:	xchg   ebx,eax
  42253c:	push   ss
  42253d:	repz push 0x2d
  422540:	adc    al,0x9
  422542:	scas   eax,DWORD PTR es:[edi]
  422543:	leave  
  422544:	cmp    ch,BYTE PTR [esi]
  422546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422547:	stos   DWORD PTR es:[edi],eax
  422548:	sbb    al,0x86
  42254a:	packssdw mm5,QWORD PTR ds:0xf11440e6
  422551:	xchg   esi,eax
  422552:	test   al,0xf
  422554:	clc    
  422555:	fnsave [ebx+0xd]
  422558:	lds    esi,FWORD PTR [edi-0x2efc92d5]
  42255e:	or     al,0x4e
  422560:	add    eax,0x6d3be81d
  422565:	add    ebx,DWORD PTR [esi]
  422567:	imul   esp,ecx,0xffffffdf
  42256a:	dec    eax
  42256b:	data16 loope 0x422507
  42256e:	mov    al,ds:0x6b540e18
  422573:	adc    BYTE PTR [esi],0x6e
  422576:	jp     0x4224f9
  422578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422579:	pop    esp
  42257a:	adc    al,0xa4
  42257c:	in     al,dx
  42257d:	jg     0x42258d
  42257f:	xor    DWORD PTR [eax+0x6843e8fd],eax
  422585:	jmp    0x422536
  422587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422588:	mov    edx,0x5264bfc8
  42258d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42258e:	mov    edi,0x15d3f1c5
  422593:	add    DWORD PTR [edi+0xc],ebx
  422596:	mov    esi,0xdb3480e7
  42259b:	ret    
  42259c:	sbb    dl,BYTE PTR [ecx+esi*4+0x14]
  4225a0:	stos   BYTE PTR es:[edi],al
  4225a1:	jl     0x422533
  4225a3:	lods   al,BYTE PTR ds:[esi]
  4225a4:	dec    ebp
  4225a5:	push   0xa25fa1e5
  4225aa:	mov    gs,WORD PTR [edx]
  4225ac:	or     eax,0x75cbc0a0
  4225b1:	mov    dl,0xc1
  4225b3:	or     BYTE PTR [ecx-0x79126fb0],0x32
  4225ba:	adc    al,0x65
  4225bc:	or     bh,BYTE PTR [esi-0x50]
  4225bf:	jne    0x422596
  4225c1:	stos   BYTE PTR es:[edi],al
  4225c2:	jge    0x4225c2
  4225c4:	sub    cl,BYTE PTR [ebx+0x4f]
  4225c7:	inc    ecx
  4225c8:	in     al,dx
  4225c9:	or     ebx,edx
  4225cb:	pop    ebx
  4225cc:	xor    eax,0x8c56472a
  4225d1:	scas   al,BYTE PTR es:[edi]
  4225d2:	push   eax
  4225d3:	mov    DWORD PTR [ebp+0x7c],eax
  4225d6:	ret    
  4225d7:	out    0x12,eax
  4225d9:	cmp    BYTE PTR [edx-0x239e332f],al
  4225df:	fimul  WORD PTR [eax]
  4225e1:	loopne 0x4225e9
  4225e3:	cli    
  4225e4:	sub    ecx,DWORD PTR [esi+0x66]
  4225e7:	xchg   ebp,eax
  4225e8:	dec    edx
  4225e9:	bound  esi,QWORD PTR [ebx+0x54372a49]
  4225ef:	mul    BYTE PTR [esi-0x3fca2ebf]
  4225f5:	adc    al,0xe2
  4225f7:	inc    edi
  4225f8:	lods   eax,DWORD PTR ds:[esi]
  4225f9:	jnp    0x42258e
  4225fb:	fisttp DWORD PTR [eax]
  4225fd:	mov    edx,0x650a2a46
  422602:	mov    ah,0xea
  422604:	add    esp,DWORD PTR [edx-0xd]
  422607:	ins    DWORD PTR es:[edi],dx
  422608:	cld    
  422609:	and    esi,eax
  42260b:	sub    edx,DWORD PTR [edx+0x54]
  42260e:	or     BYTE PTR [edx],bl
  422610:	sbb    BYTE PTR [edi+0x633e8ac0],ch
  422616:	pop    es
  422617:	xchg   ebp,eax
  422618:	outs   dx,DWORD PTR ds:[esi]
  422619:	pop    ecx
  42261a:	shr    DWORD PTR [esp+eiz*4+0x50],0x1f
  42261f:	push   esp
  422620:	xor    ebx,ebp
  422622:	and    eax,0x52088ba
  422627:	jl     0x422662
  422629:	or     BYTE PTR [ebp-0x649d99ee],dl
  42262f:	sar    DWORD PTR [eax+0x51],0x5a
  422633:	call   0x395810b6
  422638:	fcmovnu st,st(6)
  42263a:	out    0xa0,eax
  42263c:	cli    
  42263d:	loop   0x4225ca
  42263f:	shl    bh,1
  422641:	int3   
  422642:	sbb    al,0x52
  422644:	rcl    ebp,1
  422646:	add    BYTE PTR [eax+0x7c5feced],bh
  42264c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42264e:	pop    eax
  42264f:	outs   dx,BYTE PTR ds:[esi]
  422650:	add    ebx,ebp
  422652:	int    0x57
  422654:	and    DWORD PTR [eax+eax*4+0x15167d68],eax
  42265b:	adc    bh,0x60
  42265e:	jo     0x4226be
  422660:	out    dx,eax
  422661:	jmp    0xa54f:0xb1ee0db9
  422668:	mov    cl,0xbe
  42266a:	xchg   edx,eax
  42266b:	push   edi
  42266c:	int    0xb1
  42266e:	mov    esi,0xa3d33fe
  422673:	shr    DWORD PTR [eax-0xa],1
  422676:	cdq    
  422677:	rol    al,0x2b
  42267a:	mov    ds:0xb7efb985,al
  42267f:	loope  0x42262d
  422681:	add    esi,DWORD PTR [edi]
  422683:	jge    0x42260e
  422685:	or     dh,BYTE PTR [esi]
  422687:	mov    dh,0x7b
  422689:	xlat   BYTE PTR ds:[ebx]
  42268a:	mov    bl,0x90
  42268c:	cdq    
  42268d:	sti    
  42268e:	adc    al,BYTE PTR [esi+0x19409e]
  422694:	cmp    DWORD PTR [ecx+edi*2+0x6e],ebp
  422698:	add    esp,0x58941b8c
  42269e:	or     DWORD PTR [ecx],esi
  4226a0:	xlat   BYTE PTR ds:[ebx]
  4226a1:	dec    ecx
  4226a2:	clc    
  4226a3:	fistp  QWORD PTR [ecx-0x32]
  4226a6:	dec    ebx
  4226a7:	mov    cl,0x2b
  4226a9:	add    BYTE PTR [ecx],bh
  4226ab:	call   0x41ed8ce6
  4226b0:	(bad)  
  4226b1:	sti    
  4226b2:	push   ecx
  4226b3:	inc    edi
  4226b4:	mov    ds:0x3070b183,al
  4226b9:	fldcw  WORD PTR [eax]
  4226bb:	xor    ch,ah
  4226bd:	and    al,0xd6
  4226bf:	pusha  
  4226c0:	inc    edi
  4226c1:	push   ecx
  4226c2:	mov    ds:0xb0a7a05f,eax
  4226c7:	xchg   esp,eax
  4226c8:	sub    al,0xc7
  4226ca:	cld    
  4226cb:	add    eax,0x82fd4eb9
  4226d0:	push   ebx
  4226d1:	mov    eax,0x9f6eb61a
  4226d6:	inc    edi
  4226d7:	retf   0xec66
  4226da:	mov    ebp,0x196bf929
  4226df:	xor    DWORD PTR [ecx+0x537e658a],eax
  4226e5:	in     eax,dx
  4226e6:	inc    edi
  4226e7:	ins    BYTE PTR es:[edi],dx
  4226e8:	mov    dh,0x1a
  4226ea:	loopne 0x42267c
  4226ec:	jns    0x42275f
  4226ee:	mov    ss,WORD PTR [ebp-0x6b5b7b89]
  4226f4:	jb     0x4226af
  4226f6:	fnstsw WORD PTR [ebx+0x57]
  4226f9:	scas   eax,DWORD PTR es:[edi]
  4226fa:	cdq    
  4226fb:	imul   esp,DWORD PTR [esi+0x733cbd6b],0x1100e5a6
  422705:	mov    ebp,0xdce5e89d
  42270a:	cmp    DWORD PTR [esi+esi*1-0x16e422ae],0xffffffae
  422712:	sbb    bl,BYTE PTR [esi]
  422714:	pop    ds
  422715:	jl     0x4226f4
  422717:	push   0xffffffeb
  422719:	push   esp
  42271a:	sub    BYTE PTR [ebx],0xc6
  42271d:	push   esi
  42271e:	xor    al,0xd2
  422720:	imul   ecx,DWORD PTR [edi],0x87087398
  422726:	mov    dl,0xc
  422728:	iret   
  422729:	adc    ebp,DWORD PTR [eax-0x353797e0]
  42272f:	mov    WORD PTR [ebx-0x4cf00c4a],gs
  422735:	ja     0x422721
  422737:	je     0x422755
  422739:	push   0xfffffffb
  42273b:	xchg   edi,eax
  42273c:	into   
  42273d:	repnz inc eax
  42273f:	cmc    
  422740:	adc    BYTE PTR [edi-0x7c],0x7c
  422744:	inc    ebp
  422745:	(bad)  
  422746:	sub    al,0xc3
  422748:	mov    dh,0x25
  42274a:	dec    eax
  42274b:	adc    edi,DWORD PTR [ecx-0x71]
  42274e:	sub    al,BYTE PTR [ecx+esi*1]
  422751:	test   BYTE PTR [eax],0xfd
  422754:	mov    esi,0x43bfc962
  422759:	xadd   BYTE PTR [edi-0x13838bd8],bl
  422760:	test   al,0xa2
  422762:	(bad)  
  422763:	cmp    dl,cl
  422765:	mov    ebx,0x6ffd681b
  42276a:	sar    BYTE PTR [edx-0x6ef64dc],0xde
  422771:	mov    edi,0xc23e0895
  422776:	push   0x62121715
  42277b:	inc    BYTE PTR [edi+ebp*8+0x11]
  42277f:	frstor [ecx+ecx*2]
  422782:	mov    al,BYTE PTR [edi]
  422784:	aas    
  422785:	not    DWORD PTR [esi]
  422787:	mov    ebp,0x8619eb22
  42278c:	jae    0x4227e4
  42278e:	mov    esp,0x3de56f51
  422793:	xchg   edx,eax
  422794:	(bad)  
  422795:	in     al,dx
  422796:	sti    
  422797:	call   0x38f1:0xe8b9d4d1
  42279e:	ja     0x42278b
  4227a0:	je     0x422747
  4227a2:	cmp    eax,0x54fc9a37
  4227a7:	inc    ebp
  4227a8:	in     al,0xa2
  4227aa:	je     0x4227e4
  4227ac:	stc    
  4227ad:	cmp    eax,DWORD PTR [edi+0x79]
  4227b0:	xor    DWORD PTR [ecx+0x6f],ebx
  4227b3:	push   ebx
  4227b4:	leave  
  4227b5:	add    eax,0x5f7ce285
  4227ba:	loop   0x4227f4
  4227bc:	ret    
  4227bd:	sub    DWORD PTR [ebx+eax*2],edx
  4227c0:	cmp    DWORD PTR [ebp-0x1ddaa4c4],esp
  4227c6:	sbb    eax,0x8555e772
  4227cb:	mov    esp,0x5eaa5c94
  4227d0:	shl    DWORD PTR [edi-0x21],cl
  4227d3:	and    BYTE PTR [ecx],cl
  4227d5:	xchg   ebp,eax
  4227d6:	popa   
  4227d7:	pop    ebx
  4227d8:	xchg   esp,eax
  4227d9:	push   ebx
  4227da:	xchg   ebp,eax
  4227db:	jp     0x4227bf
  4227dd:	stc    
  4227de:	jmp    0x8a5f:0xee836894
  4227e5:	int3   
  4227e6:	inc    edx
  4227e7:	cmp    eax,0x80316451
  4227ec:	lds    ebx,FWORD PTR [ecx-0x2937d90c]
  4227f2:	aad    0x7e
  4227f4:	mov    edi,0x3ecb8923
  4227f9:	in     eax,0x3b
  4227fb:	xchg   edx,eax
  4227fc:	or     BYTE PTR [ebx+eax*4-0x10],bh
  422800:	retf   0xa928
  422803:	xchg   edi,eax
  422804:	gs aam 0x9f
  422807:	gs stos DWORD PTR es:[edi],eax
  422809:	pop    ebx
  42280a:	out    dx,al
  42280b:	sbb    DWORD PTR [esi],0x652800c2
  422811:	int    0x2c
  422813:	add    eax,0x834c63f2
  422818:	pop    ecx
  422819:	push   edi
  42281a:	dec    esi
  42281b:	mov    bl,0x6c
  42281d:	mov    dh,0x21
  42281f:	gs pop es
  422821:	add    ecx,DWORD PTR [edx-0x1d]
  422824:	fwait
  422825:	push   edi
  422826:	mov    bh,BYTE PTR ds:0xe589de14
  42282c:	out    dx,eax
  42282d:	sbb    eax,0xeccc623d
  422832:	inc    esp
  422833:	pop    ebp
  422834:	mov    ebp,0xca66f164
  422839:	pop    edi
  42283a:	cmova  esi,DWORD PTR [eax-0x3187c1e7]
  422841:	pushf  
  422842:	fyl2xp1 
  422844:	fimul  DWORD PTR [ebp+0x73]
  422847:	pop    esp
  422848:	ret    0xcc6c
  42284b:	jmp    0x86b8:0x17416943
  422852:	loope  0x4228cb
  422854:	lock ds popa 
  422857:	daa    
  422858:	add    DWORD PTR [edi-0x70],edx
  42285b:	popa   
  42285c:	sub    bl,BYTE PTR [ecx-0x1e]
  42285f:	loop   0x42282b
  422861:	xor    eax,0xb0dae2a3
  422866:	icebp  
  422867:	mov    dl,0xa8
  422869:	jp     0x42287e
  42286b:	out    0xfa,eax
  42286d:	pop    esi
  42286e:	dec    ebx
  42286f:	loop   0x4228d4
  422871:	xlat   BYTE PTR ds:[ebx]
  422872:	in     eax,0x79
  422874:	test   BYTE PTR [esi+0x681f9477],ah
  42287a:	lods   eax,DWORD PTR ds:[esi]
  42287b:	shl    cl,cl
  42287d:	rcr    DWORD PTR [edi+esi*1+0x19],cl
  422881:	test   esi,0xd8b2954
  422887:	push   eax
  422888:	sbb    edx,DWORD PTR [esi-0x3f]
  42288b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42288c:	(bad)  
  42288e:	push   cs
  42288f:	stos   DWORD PTR es:[edi],eax
  422890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422891:	and    eax,0xb7b33b
  422896:	das    
  422897:	lods   al,BYTE PTR ds:[esi]
  422898:	pop    esi
  422899:	and    eax,DWORD PTR [edi-0x4c]
  42289c:	add    al,0x33
  42289e:	sbb    al,0xfb
  4228a0:	cmp    ecx,DWORD PTR [edx-0x61d6de8d]
  4228a6:	loop   0x42289e
  4228a8:	mov    ch,0xf6
  4228aa:	sbb    BYTE PTR [esi+0x1f],al
  4228ad:	mov    WORD PTR [eax-0x57fa2e6b],ss
  4228b3:	cdq    
  4228b4:	mov    ds:0x41cd5c9f,eax
  4228b9:	or     eax,0xa8452715
  4228be:	push   ebp
  4228bf:	pop    ebx
  4228c0:	or     DWORD PTR [ebp-0x79b266db],ebx
  4228c6:	(bad)  
  4228c7:	pop    eax
  4228c8:	lods   al,BYTE PTR ds:[esi]
  4228c9:	data16 mov ch,0x5f
  4228cc:	popa   
  4228cd:	push   ds
  4228ce:	sub    BYTE PTR ds:0x46e02807,0xe7
  4228d5:	xchg   ebp,eax
  4228d6:	add    eax,0x6395d487
  4228db:	mov    eax,0xe31e5be8
  4228e0:	and    edi,DWORD PTR [ebx]
  4228e2:	push   edx
  4228e3:	mov    esp,DWORD PTR [eax+edx*8+0x18]
  4228e7:	push   edx
  4228e8:	mov    esp,0x65016d99
  4228ed:	scas   al,BYTE PTR es:[edi]
  4228ee:	dec    ebx
  4228f0:	aad    0xa9
  4228f2:	xor    al,0x72
  4228f4:	or     cl,BYTE PTR [ecx+eax*4+0x69]
  4228f8:	inc    eax
  4228f9:	sbb    DWORD PTR [edx],0x3d
  4228fc:	sub    al,BYTE PTR [ecx+0x298c8efa]
  422902:	pop    esp
  422903:	sar    DWORD PTR [esi-0x33],cl
  422906:	call   0xbb1c:0x821dc271
  42290d:	and    ah,BYTE PTR [ebp+0x7f]
  422910:	or     ah,BYTE PTR ds:0x488d46c7
  422916:	xchg   edx,eax
  422917:	jmp    0x4228ad
  422919:	add    DWORD PTR [eax-0x69628d1e],esi
  42291f:	mov    esp,0xc01857ef
  422924:	inc    eax
  422925:	pop    ds
  422926:	pop    ss
  422927:	inc    ebx
  422928:	aas    
  422929:	xchg   esi,eax
  42292a:	push   ebx
  42292b:	test   al,0x97
  42292d:	sub    BYTE PTR [eax+0x45f289a6],ah
  422933:	pop    ebp
  422934:	dec    esi
  422935:	shl    BYTE PTR [ebx+0x5c9d96a5],1
  42293b:	iretw  
  42293d:	jge    0x4228c1
  42293f:	pop    eax
  422940:	test   BYTE PTR [esi-0x8],0x33
  422944:	fcomp  DWORD PTR [edx]
  422946:	in     eax,0xda
  422948:	push   ds
  422949:	nop
  42294a:	pop    ebx
  42294b:	ret    0x825d
  42294e:	sub    eax,0xcd0d51bb
  422953:	push   esi
  422954:	push   0xffffffe3
  422956:	mov    cl,0x29
  422958:	push   es
  422959:	inc    ebx
  42295a:	sahf   
  42295b:	mov    ds:0xbc57ce19,al
  422960:	in     al,dx
  422961:	in     eax,0x8c
  422963:	shl    DWORD PTR [edi+eiz*4-0x33c3cc6],1
  42296a:	in     al,0x18
  42296c:	jb     0x4229c1
  42296e:	push   0x4c94897b
  422973:	nop
  422974:	adc    eax,0x1b4748c
  422979:	stc    
  42297a:	cld    
  42297b:	adc    ebp,DWORD PTR ds:0x14841ba0
  422981:	ror    esi,1
  422983:	dec    ecx
  422984:	xor    ebp,DWORD PTR [edx-0x3d42af9a]
  42298a:	retf   
  42298b:	ss addr16 push cs
  42298e:	test   eax,0xf0b8a428
  422993:	lock test DWORD PTR [eax],0xaf5c06ab
  42299a:	(bad)  
  42299b:	test   al,0x28
  42299d:	cmp    ebx,ebp
  42299f:	sbb    al,0x59
  4229a2:	outs   dx,BYTE PTR ds:[esi]
  4229a3:	es enter 0xd25d,0xa
  4229a8:	lds    ebp,FWORD PTR [esi+0x2e5a7c44]
  4229ae:	fcom   DWORD PTR [esi]
  4229b0:	pop    esp
  4229b1:	mov    ch,0x7c
  4229b3:	jns    0x4229a1
  4229b5:	sub    ch,BYTE PTR [ebp-0x29]
  4229b8:	cdq    
  4229b9:	mov    bh,0x1c
  4229bb:	shl    DWORD PTR cs:0xe82aae4f,cl
  4229c2:	mov    ch,0xe7
  4229c4:	aas    
  4229c5:	out    0xb2,eax
  4229c7:	outs   dx,DWORD PTR gs:[esi]
  4229c9:	pop    ebp
  4229ca:	sti    
  4229cb:	push   eax
  4229cc:	mov    ebx,0x690c5937
  4229d1:	pop    esi
  4229d2:	sub    al,0x68
  4229d4:	stc    
  4229d5:	or     DWORD PTR [edx-0xf],esp
  4229d8:	loope  0x422a50
  4229da:	gs pop ebp
  4229dc:	push   cs
  4229dd:	stos   DWORD PTR es:[edi],eax
  4229de:	iret   
  4229df:	mov    bl,0xb5
  4229e1:	push   ebp
  4229e2:	push   esi
  4229e3:	push   esp
  4229e4:	dec    eax
  4229e5:	stc    
  4229e6:	adc    al,0x79
  4229e8:	and    dl,dl
  4229ea:	xor    BYTE PTR [eax+0x461c25f0],ch
  4229f0:	add    BYTE PTR [edx-0x22],0x1f
  4229f4:	inc    edi
  4229f5:	push   es
  4229f6:	pop    edi
  4229f7:	int3   
  4229f8:	es mov al,0x4a
  4229fb:	or     edi,0x18
  4229fe:	cmc    
  4229ff:	(bad)  
  422a00:	push   DWORD PTR [esp+eax*8]
  422a03:	and    DWORD PTR [ebx+0x55d4c9d1],edx
  422a09:	stos   BYTE PTR es:[edi],al
  422a0a:	ja     0x4229b0
  422a0c:	bound  ebp,QWORD PTR [ebp+0x1c]
  422a0f:	jmp    0x422a35
  422a11:	mov    bl,0xe7
  422a13:	xor    ah,ch
  422a15:	jne    0x422998
  422a17:	or     dl,BYTE PTR [edi]
  422a19:	stc    
  422a1a:	ret    
  422a1b:	push   0xffffffd4
  422a1d:	imul   ebx,DWORD PTR [bp+si+0x31],0xffffffdb
  422a22:	sbb    BYTE PTR [ebp+eax*2+0x2c36ea22],bl
  422a29:	jp     0x422a28
  422a2b:	jo     0x422a70
  422a2d:	mov    esp,0x5e143f29
  422a32:	jnp    0x4229c1
  422a34:	pusha  
  422a35:	cmp    ecx,ebp
  422a37:	shl    DWORD PTR [edi],0x1e
  422a3a:	pop    ds
  422a3b:	add    al,0x14
  422a3d:	mov    ds:0xe56383b7,eax
  422a42:	scas   eax,DWORD PTR es:[edi]
  422a43:	je     0x422a62
  422a45:	xchg   edi,eax
  422a46:	and    al,0xf8
  422a48:	inc    ebx
  422a49:	pop    edx
  422a4a:	mov    ah,0xb6
  422a4c:	pop    esi
  422a4d:	jb     0x422a22
  422a4f:	mov    edx,0xf22fd050
  422a54:	shl    DWORD PTR [esi-0x157de918],0x42
  422a5b:	mov    bl,0xd0
  422a5d:	add    eax,0x93cf0d23
  422a62:	jae    0x422a6e
  422a64:	jecxz  0x422a63
  422a66:	mov    bl,0xe8
  422a68:	daa    
  422a69:	jns    0x422a1c
  422a6b:	mov    es,ebp
  422a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a6e:	sub    al,0xb5
  422a70:	cmp    al,0x8a
  422a72:	out    dx,al
  422a73:	bsr    ecx,ecx
  422a76:	cmp    DWORD PTR [ebp-0x29b1ec56],esi
  422a7c:	mov    ds:0x7f8fbc1a,al
  422a81:	in     al,0x44
  422a83:	cmp    ecx,ebx
  422a85:	bound  eax,QWORD PTR [esi+0x8]
  422a88:	loop   0x422a6d
  422a8a:	scas   al,BYTE PTR es:[edi]
  422a8b:	pop    ds
  422a8c:	mov    gs,edi
  422a8e:	ins    DWORD PTR es:[edi],dx
  422a8f:	xchg   ebx,eax
  422a90:	mov    ebx,0xcdccbfe5
  422a95:	int3   
  422a96:	stos   BYTE PTR es:[edi],al
  422a97:	push   eax
  422a98:	mov    WORD PTR [ecx-0x2],ds
  422a9b:	pop    es
  422a9c:	cmp    eax,0xc8a8f51f
  422aa1:	or     eax,edi
  422aa3:	stc    
  422aa4:	in     al,0x63
  422aa6:	fistp  DWORD PTR [esi]
  422aa8:	cld    
  422aa9:	push   eax
  422aaa:	ss adc al,0x43
  422aad:	add    eax,0xf9197857
  422ab2:	push   ebx
  422ab3:	jge    0x422a4c
  422ab5:	outs   dx,BYTE PTR ds:[esi]
  422ab6:	sub    al,0x4f
  422ab8:	dec    ecx
  422ab9:	pop    ebx
  422aba:	sbb    ebp,ebp
  422abc:	fs test al,0x43
  422abf:	jns    0x422b3c
  422ac1:	outs   dx,DWORD PTR ds:[esi]
  422ac2:	mov    ah,0xa0
  422ac4:	adc    edi,edx
  422ac6:	test   DWORD PTR [edx+0x74],esi
  422ac9:	sbb    ch,BYTE PTR [ecx+0x73]
  422acc:	icebp  
  422acd:	or     ch,BYTE PTR [esi+ecx*1+0x65]
  422ad1:	fild   DWORD PTR [ebp+0x4f26d4a6]
  422ad7:	repz push 0x4eff415c
  422add:	repnz shl bh,1
  422ae0:	jne    0x422a75
  422ae2:	jle    0x422a6c
  422ae4:	dec    esp
  422ae5:	adc    al,0x57
  422ae7:	sub    dl,dh
  422ae9:	push   eax
  422aea:	mov    esi,0x107bc945
  422aef:	inc    edx
  422af0:	xor    al,0x3b
  422af2:	adc    ch,BYTE PTR [esi-0x5c]
  422af5:	pop    edx
  422af6:	into   
  422af7:	mov    ebx,0x66c150b1
  422afc:	and    edx,edi
  422afe:	enter  0xfac7,0x34
  422b02:	jbe    0x422ac8
  422b04:	xor    al,0xa5
  422b06:	add    eax,0x6c15bfd4
  422b0b:	dec    ebp
  422b0c:	mov    bh,0x3
  422b0e:	push   eax
  422b0f:	jle    0x422ac7
  422b11:	fwait
  422b12:	mov    bh,0xcd
  422b14:	xor    ah,cl
  422b16:	lods   al,BYTE PTR ds:[esi]
  422b17:	adc    al,0x58
  422b19:	or     DWORD PTR [ecx+0x15f4aa7c],ebx
  422b1f:	fcom   st(3)
  422b21:	test   BYTE PTR [esi+0x7f],dl
  422b24:	mov    eax,0xbdfc574b
  422b29:	xchg   DWORD PTR [ecx-0x289b6559],esi
  422b2f:	mov    bl,0x7b
  422b31:	dec    ecx
  422b32:	(bad)  
  422b33:	adc    DWORD PTR [ebp+0x4c],esp
  422b36:	es ud0 ebp,edx
  422b3a:	jg     0x422b7e
  422b3c:	push   ecx
  422b3d:	dec    eax
  422b3e:	mov    dl,0xaa
  422b40:	popf   
  422b41:	shr    DWORD PTR [esi-0x23d63aae],0xd6
  422b48:	out    0xb1,al
  422b4a:	cmc    
  422b4b:	loop   0x422b41
  422b4d:	xor    eax,esp
  422b4f:	clc    
  422b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b51:	sahf   
  422b52:	add    esp,DWORD PTR [ebx-0x1]
  422b55:	pop    esp
  422b56:	add    DWORD PTR [eax-0x76],edi
  422b59:	cmp    eax,0xfd45d6ad
  422b5e:	xchg   ebp,eax
  422b5f:	scas   al,BYTE PTR es:[edi]
  422b60:	cmc    
  422b61:	or     eax,0xb95a92a
  422b66:	adc    bl,BYTE PTR [ebx]
  422b68:	nop
  422b69:	outs   dx,DWORD PTR ds:[esi]
  422b6a:	fdivr  st,st(7)
  422b6c:	adc    al,0xa4
  422b6e:	in     al,0x23
  422b70:	dec    edi
  422b71:	or     DWORD PTR [edx+0x7ae365df],esi
  422b77:	cmp    esi,esi
  422b79:	pop    ebx
  422b7a:	jnp    0x422b75
  422b7c:	mov    ecx,0xb223b637
  422b81:	ja     0x422b1d
  422b83:	pop    eax
  422b84:	xchg   bl,dl
  422b86:	fisubr DWORD PTR [esi+ecx*8-0x4120ba82]
  422b8d:	add    eax,0xba50f538
  422b92:	ins    BYTE PTR es:[edi],dx
  422b93:	xor    bl,BYTE PTR [edx+0x33]
  422b96:	push   esi
  422b97:	(bad)  
  422b98:	adc    eax,0x25cbc912
  422b9d:	mov    ah,0xad
  422b9f:	(bad)  
  422ba0:	mov    BYTE PTR [ebx-0x106715],dl
  422ba6:	pop    edx
  422ba7:	fcom   st(6)
  422ba9:	jl     0x422b5d
  422bab:	ins    BYTE PTR es:[edi],dx
  422bac:	mov    ch,0xd7
  422bae:	adc    DWORD PTR [ecx+0x18],0xc
  422bb2:	ret    
  422bb3:	fnstcw WORD PTR [edi]
  422bb5:	sbb    BYTE PTR [edi-0x2a],cl
  422bb8:	in     eax,dx
  422bb9:	mov    edx,0x8494974b
  422bbe:	inc    esi
  422bbf:	sub    eax,0xd368b9c3
  422bc4:	jecxz  0x422ba7
  422bc6:	ret    
  422bc7:	cwde   
  422bc8:	repnz push esp
  422bca:	out    0x9c,eax
  422bcc:	push   esp
  422bcd:	adc    ah,BYTE PTR [edx+0x3bfca7fc]
  422bd3:	cmp    DWORD PTR [esi+0x44651512],ebp
  422bd9:	jmp    0x422bcf
  422bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bdc:	mov    bl,0x35
  422bde:	add    ebp,DWORD PTR [ebp+0x69d7727c]
  422be4:	sbb    ecx,edi
  422be6:	pop    esi
  422be7:	inc    ebp
  422be8:	cmp    ebx,eax
  422bea:	push   es
  422beb:	bound  esi,QWORD PTR [esi-0x5e8d1600]
  422bf1:	in     eax,dx
  422bf2:	fcom   DWORD PTR [esi+0x677be2bb]
  422bf8:	mov    WORD PTR [eax+0x6d86a279],?
  422bfe:	loopne 0x422c51
  422c00:	mov    ebp,0xf24e3d44
  422c05:	fwait
  422c06:	mov    dh,0x66
  422c08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c09:	ja     0x422be9
  422c0b:	fisubr DWORD PTR [edi]
  422c0d:	fsubrp st(4),st
  422c0f:	(bad)  
  422c10:	pushf  
  422c11:	dec    eax
  422c12:	loop   0x422c67
  422c14:	xchg   BYTE PTR [ecx-0x1709f919],dh
  422c1a:	and    BYTE PTR [esi+ebp*8-0x3f97a8ab],dl
  422c21:	push   ecx
  422c22:	fxch   st(2)
  422c24:	mov    ecx,eax
  422c26:	adc    al,0xc9
  422c28:	retf   
  422c29:	es in  eax,dx
  422c2b:	sbb    ecx,DWORD PTR [ebp+0x23]
  422c2e:	adc    ecx,DWORD PTR ss:[esi]
  422c31:	nop
  422c32:	pushf  
  422c33:	je     0x422c34
  422c35:	into   
  422c36:	mov    bh,0x10
  422c38:	xor    DWORD PTR [eax],ebx
  422c3a:	pop    eax
  422c3b:	out    dx,eax
  422c3c:	pushf  
  422c3d:	arpl   WORD PTR [ebx],dx
  422c3f:	jbe    0x422c62
  422c41:	jo     0x422c43
  422c43:	mov    esp,0x12d1dd73
  422c48:	stos   BYTE PTR es:[edi],al
  422c49:	or     DWORD PTR [eax],0x72950eae
  422c4f:	test   BYTE PTR [edx-0x7],dl
  422c52:	fidivr WORD PTR [ecx+0x3206312f]
  422c58:	ins    DWORD PTR es:[edi],dx
  422c59:	mov    ebp,0xc1aba0d7
  422c5e:	fmul   st(4),st
  422c60:	mov    eax,ds:0x61aa495f
  422c65:	rol    eax,0x82
  422c68:	mov    dl,bl
  422c6a:	dec    esp
  422c6b:	or     DWORD PTR [eax+esi*8+0x658a205a],ebx
  422c72:	mov    esi,0xa94ecdf2
  422c77:	out    dx,eax
  422c78:	cmc    
  422c79:	in     al,0x3
  422c7b:	sub    eax,DWORD PTR [edi+edx*4+0x34]
  422c7f:	mov    DWORD PTR [edi-0x5d],edi
  422c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c83:	push   0xffffffbd
  422c85:	inc    ebx
  422c86:	retf   0x5631
  422c89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c8a:	repz mov al,0x22
  422c8d:	mov    ds:0x792d5074,eax
  422c92:	stc    
  422c93:	dec    ecx
  422c94:	jns    0x422cb1
  422c96:	xchg   ecx,eax
  422c97:	sub    BYTE PTR [ebx-0x18],0xaf
  422c9b:	cmp    eax,0xb773dac2
  422ca0:	ficomp WORD PTR [esi-0x52e3f1e4]
  422ca6:	cmp    al,0xda
  422ca8:	jne    0x422cf8
  422caa:	mov    ebp,0x5ddb5017
  422caf:	adc    al,0x13
  422cb1:	ret    
  422cb2:	mov    ebp,0x7360e797
  422cb7:	call   0xf0cc:0xbe8b04e1
  422cbe:	inc    ebp
  422cbf:	int3   
  422cc0:	nop
  422cc1:	ss sar eax,cl
  422cc4:	push   ebp
  422cc5:	mov    esi,0x9f3b6fbe
  422cca:	add    BYTE PTR [ebp+0x3e],0xa9
  422cce:	loop   0x422d0b
  422cd0:	push   ebx
  422cd1:	outs   dx,BYTE PTR ds:[esi]
  422cd2:	push   0xffffffc3
  422cd4:	push   cs
  422cd5:	mov    ecx,0xdd35275f
  422cda:	and    BYTE PTR [edi-0x76],ch
  422cdd:	mov    edi,0x154d5295
  422ce2:	xchg   edx,eax
  422ce3:	stos   DWORD PTR es:[edi],eax
  422ce4:	mov    al,dh
  422ce6:	xchg   ecx,eax
  422ce7:	push   0x75
  422ce9:	(bad)  
  422cea:	(bad)  
  422ceb:	jg     0x422c83
  422ced:	or     DWORD PTR [eax],esi
  422cef:	or     BYTE PTR [ebx],bl
  422cf1:	(bad)  
  422cf2:	pop    edx
  422cf3:	test   al,0x5b
  422cf5:	cmc    
  422cf6:	mov    ch,0x69
  422cf8:	push   ebx
  422cf9:	mov    ecx,0x59cc3175
  422cfe:	inc    esi
  422cff:	(bad)  
  422d00:	sar    DWORD PTR [ecx-0x28],1
  422d03:	add    BYTE PTR [esi+0x11],dl
  422d06:	pushf  
  422d07:	int3   
  422d08:	push   ebx
  422d09:	dec    esi
  422d0a:	inc    ecx
  422d0b:	call   0xa40b80c0
  422d10:	sbb    ecx,DWORD PTR [edi+0x3f269d7b]
  422d16:	sub    ebx,DWORD PTR [edi+0x7eada0c0]
  422d1c:	in     al,dx
  422d1d:	pop    edx
  422d1e:	scas   eax,DWORD PTR es:[edi]
  422d1f:	pop    ebp
  422d20:	pop    eax
  422d21:	mov    ebp,0x42061c
  422d26:	enter  0xc484,0x7e
  422d2a:	lods   eax,DWORD PTR ds:[esi]
  422d2b:	nop
  422d2c:	and    BYTE PTR [eax-0x27],bh
  422d2f:	aad    0x68
  422d31:	sbb    BYTE PTR [ebx-0x362fcab7],0xbf
  422d38:	mov    edi,0x91ead927
  422d3d:	je     0x422d0c
  422d3f:	call   0x940a:0x44818449
  422d46:	inc    edi
  422d47:	aaa    
  422d48:	shl    BYTE PTR [esi+esi*8+0x41],0xf4
  422d4d:	(bad)  
  422d4e:	in     eax,dx
  422d4f:	fdivr  QWORD PTR [esi+0x1]
  422d52:	jnp    0x422da0
  422d54:	out    0x4e,al
  422d56:	sub    eax,0x309ef9fa
  422d5b:	xchg   esp,eax
  422d5c:	push   ss
  422d5d:	add    BYTE PTR [edx],bl
  422d5f:	shl    DWORD PTR [ecx],1
  422d61:	pop    ebp
  422d62:	sub    eax,0x889562fc
  422d67:	cmp    al,0x45
  422d69:	mov    ebx,edx
  422d6b:	loope  0x422d5e
  422d6d:	inc    eax
  422d6e:	test   al,0xa2
  422d70:	add    eax,DWORD PTR [bp+si-0x7b]
  422d74:	and    ch,BYTE PTR [edx+eiz*8-0x4c]
  422d78:	jle    0x422de3
  422d7a:	test   eax,0x7f881766
  422d7f:	lahf   
  422d80:	cmp    dl,BYTE PTR [esp+ebx*2]
  422d83:	sub    cl,BYTE PTR [esi-0x80]
  422d86:	xchg   esp,eax
  422d87:	dec    esp
  422d88:	(bad)  
  422d89:	cdq    
  422d8a:	cmp    eax,0x33b37cef
  422d8f:	cli    
  422d90:	ss dec edx
  422d92:	push   edi
  422d93:	int    0x51
  422d95:	jo     0x422d63
  422d97:	push   ecx
  422d98:	push   esi
  422d99:	jnp    0x422d22
  422d9b:	push   edi
  422d9c:	pop    eax
  422d9d:	dec    edi
  422d9e:	cld    
  422d9f:	ja     0x422dad
  422da1:	sahf   
  422da2:	mov    dl,0x68
  422da4:	lods   al,BYTE PTR ds:[esi]
  422da5:	stos   BYTE PTR es:[edi],al
  422da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422da7:	push   esi
  422da8:	mov    dl,0xc2
  422daa:	fs es retf 
  422dad:	stos   DWORD PTR es:[edi],eax
  422dae:	jo     0x422e2d
  422db0:	cmp    ch,dh
  422db2:	xchg   esi,eax
  422db3:	cld    
  422db4:	in     al,0xa1
  422db6:	lock add ah,0x61
  422dba:	jae    0x422d84
  422dbc:	mov    edx,0x95d0e04d
  422dc1:	paddd  mm1,mm4
  422dc4:	xchg   ecx,eax
  422dc5:	xchg   ebx,eax
  422dc6:	(bad)  
  422dc7:	cmp    edi,edx
  422dc9:	arpl   WORD PTR [ecx-0x5a647320],sp
  422dcf:	lock popf 
  422dd1:	nop
  422dd2:	pop    ecx
  422dd3:	shr    esp,cl
  422dd5:	neg    cl
  422dd7:	add    al,BYTE PTR [ecx-0x42]
  422dda:	pop    ecx
  422ddb:	jp     0x422da2
  422ddd:	idiv   edx
  422ddf:	aam    0xa9
  422de1:	pop    ecx
  422de2:	fdiv   DWORD PTR [esi-0x7d07d581]
  422de8:	call   0xf3c9:0x4036b096
  422def:	arpl   sp,dx
  422df1:	pop    edi
  422df2:	mov    DWORD PTR [edi+0x18],edi
  422df5:	inc    eax
  422df6:	jns    0x422ddd
  422df8:	xor    eax,0x11fea35b
  422dfd:	ins    DWORD PTR es:[edi],dx
  422dfe:	sub    edx,esi
  422e00:	lahf   
  422e01:	xabort 0x6f
  422e04:	fst    QWORD PTR [ebp-0x203d68cb]
  422e0a:	lea    esi,ds:0xa8ff4091
  422e10:	push   esi
  422e11:	push   edi
  422e12:	xchg   edx,eax
  422e13:	add    al,0xb1
  422e15:	int3   
  422e16:	or     BYTE PTR [esp+edx*2-0x68358f0f],bh
  422e1d:	or     DWORD PTR [ebp+0x482fb791],eax
  422e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e24:	aaa    
  422e25:	bound  esp,QWORD PTR [esp+ecx*1]
  422e28:	call   0xd3d1:0x6a1277f5
  422e2f:	ins    DWORD PTR es:[edi],dx
  422e30:	cmovge ebp,DWORD PTR [ecx]
  422e33:	arpl   WORD PTR [edi+0x1028653d],ax
  422e39:	or     ecx,ebp
  422e3b:	cli    
  422e3c:	rcl    dl,1
  422e3e:	(bad)  
  422e3f:	adc    BYTE PTR [eax-0x6b2faeef],0x5a
  422e46:	mov    ebx,0xacca4808
  422e4b:	sub    al,0x53
  422e4d:	sbb    al,0xcc
  422e4f:	cld    
  422e50:	ror    BYTE PTR [ebp-0x3a],cl
  422e53:	inc    esi
  422e54:	lahf   
  422e55:	cmp    DWORD PTR [eax+ebx*2],edi
  422e58:	push   es
  422e59:	mov    edi,0xeb16a5b8
  422e5e:	or     bl,BYTE PTR [ebp+0x20]
  422e61:	or     eax,0x975c57a1
  422e66:	dec    edx
  422e67:	aas    
  422e68:	(bad)  
  422e69:	popf   
  422e6a:	mov    ch,0x9a
  422e6c:	sub    eax,0x1e4c4cb2
  422e71:	and    bl,BYTE PTR [ebx+edi*1-0x72]
  422e75:	and    eax,0xd87f02f9
  422e7a:	in     al,0x69
  422e7c:	jb     0x422e8c
  422e7e:	add    al,0x56
  422e80:	les    eax,FWORD PTR [eax]
  422e82:	popa   
  422e83:	cmc    
  422e84:	dec    ebp
  422e85:	sahf   
  422e86:	lds    edi,FWORD PTR [ebp+0x28b35c76]
  422e8c:	and    esi,DWORD PTR [ebx+eiz*2+0x3b]
  422e90:	mov    esp,0x76a2f903
  422e95:	arpl   WORD PTR [esi],dx
  422e97:	jmp    0x422ef0
  422e99:	(bad)  
  422e9a:	sti    
  422e9b:	(bad)  
  422e9c:	mov    ds:0xb93894fc,al
  422ea1:	mov    WORD PTR [edx-0x3d6800d1],ds
  422ea7:	into   
  422ea8:	cmp    al,0x1b
  422eaa:	xchg   ebx,eax
  422eab:	loop   0x422e5d
  422ead:	call   0xa5b7:0xc49f231e
  422eb4:	adc    al,0x9b
  422eb6:	iret   
  422eb7:	xchg   esi,eax
  422eb8:	sbb    eax,ebx
  422eba:	inc    edi
  422ebb:	add    ebp,DWORD PTR [edx-0x15495b57]
  422ec1:	push   esi
  422ec2:	fadd   DWORD PTR [edi]
  422ec4:	out    dx,eax
  422ec5:	hlt    
  422ec6:	mov    ecx,0xcc1dac09
  422ecb:	dec    ecx
  422ecc:	ror    DWORD PTR [eax+ecx*1+0x14],cl
  422ed0:	sub    DWORD PTR [esi+0x1641479c],eax
  422ed6:	shl    DWORD PTR [ebp-0x6a],1
  422ed9:	dec    esp
  422eda:	mov    bl,BYTE PTR [edx+0x7f]
  422edd:	sub    dl,ah
  422edf:	cmp    BYTE PTR [ebx],cl
  422ee1:	les    edx,FWORD PTR [esi-0x71f9d9ac]
  422ee7:	retf   0xf4a9
  422eea:	popf   
  422eeb:	dec    edx
  422eec:	add    edi,DWORD PTR [edi+0x73427f1b]
  422ef2:	pop    es
  422ef3:	cdq    
  422ef4:	rcl    bh,cl
  422ef6:	mov    al,ds:0xfddbd9d0
  422efb:	jae    0x422e7e
  422efd:	push   ebx
  422efe:	mov    edi,0x3800bfe6
  422f03:	outs   dx,BYTE PTR ds:[esi]
  422f04:	fist   DWORD PTR [edx+ebp*2]
  422f07:	pop    ecx
  422f08:	ret    0x8178
  422f0b:	jbe    0x422ec0
  422f0d:	pop    esi
  422f0e:	add    DWORD PTR [esi+eiz*4+0x1d4cfea5],0x1031d8fd
  422f19:	or     esp,DWORD PTR [ecx]
  422f1b:	int3   
  422f1c:	xchg   edi,eax
  422f1d:	mov    ds:0xb660c678,eax
  422f22:	test   eax,0x4c976e37
  422f27:	or     al,BYTE PTR [eax-0x4b]
  422f2a:	int    0x52
  422f2c:	dec    edi
  422f2d:	add    DWORD PTR ds:0x13b8b990,esi
  422f33:	xchg   edx,eax
  422f34:	adc    DWORD PTR [eax-0x2fe2097e],0x3945f47a
  422f3e:	pop    esi
  422f3f:	and    bl,BYTE PTR [edi-0x33]
  422f42:	jns    0x422ec9
  422f44:	inc    edi
  422f45:	mov    edx,0x7c373886
  422f4a:	hlt    
  422f4b:	sbb    edx,DWORD PTR [ebp-0x7fa53beb]
  422f51:	cmp    DWORD PTR [edx],eax
  422f53:	ret    
  422f54:	mov    esp,0x386afe4d
  422f59:	outs   dx,DWORD PTR ds:[esi]
  422f5a:	enter  0xa18c,0xe9
  422f5e:	cld    
  422f5f:	jg     0x422f22
  422f61:	mov    al,ds:0x55bb1c1d
  422f66:	fistp  WORD PTR [edx]
  422f68:	dec    ebp
  422f69:	scas   al,BYTE PTR es:[edi]
  422f6a:	in     al,0xd8
  422f6c:	mov    bl,0x6d
  422f6e:	lods   eax,DWORD PTR ds:[esi]
  422f6f:	mov    bh,0x7b
  422f71:	lahf   
  422f72:	xor    DWORD PTR [ecx-0x5d235196],0xffffffa2
  422f79:	test   al,0x45
  422f7b:	or     esp,esp
  422f7d:	xor    eax,0x34f9bb74
  422f82:	push   ebp
  422f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f84:	shl    BYTE PTR [edx-0x77],cl
  422f87:	popf   
  422f88:	and    al,0x84
  422f8a:	les    eax,FWORD PTR [ebp-0x2fa057fd]
  422f90:	ss add DWORD PTR ds:[eax+0x33],edx
  422f95:	loope  0x422fa8
  422f97:	pop    eax
  422f98:	mov    ecx,0x44ce627c
  422f9d:	ins    BYTE PTR es:[edi],dx
  422f9e:	pusha  
  422f9f:	daa    
  422fa0:	mov    ch,0x89
  422fa2:	rcl    edi,1
  422fa4:	mov    al,ds:0x9e0e2215
  422fa9:	mov    ebp,0x53df684c
  422fae:	dec    esp
  422faf:	aad    0x4d
  422fb1:	ins    BYTE PTR es:[edi],dx
  422fb2:	inc    ebp
  422fb3:	aas    
  422fb4:	cli    
  422fb5:	jo     0x422f93
  422fb7:	in     al,dx
  422fb8:	data16 jbe 0x422fd9
  422fbb:	pop    edx
  422fbc:	pop    esi
  422fbd:	or     al,0x33
  422fbf:	mov    BYTE PTR [edi],dl
  422fc1:	xchg   edx,eax
  422fc2:	daa    
  422fc3:	pop    ss
  422fc4:	inc    edx
  422fc5:	add    ebx,DWORD PTR [esi]
  422fc7:	shl    DWORD PTR [ebx+0x22],1
  422fca:	ins    DWORD PTR es:[edi],dx
  422fcb:	nop
  422fcc:	cdq    
  422fcd:	mov    BYTE PTR es:[edi-0x5572cd3],bl
  422fd4:	inc    edi
  422fd5:	jns    0x42303b
  422fd7:	inc    ebx
  422fd8:	icebp  
  422fd9:	ins    BYTE PTR es:[edi],dx
  422fda:	call   0x922b:0xe8e0d98c
  422fe1:	jmp    0xfa2db823
  422fe6:	sbb    DWORD PTR [edx+0x6d],esp
  422fe9:	lahf   
  422fea:	and    BYTE PTR [edx+0x188fb516],bl
  422ff0:	lods   eax,DWORD PTR ds:[esi]
  422ff1:	fmul   DWORD PTR [edx+ebx*1]
  422ff4:	scas   al,BYTE PTR es:[edi]
  422ff5:	xor    eax,0xb738677c
  422ffa:	push   ds
  422ffb:	adc    ch,al
  422ffd:	dec    edx
  422ffe:	es dec edx
  423000:	inc    esi
  423001:	or     esp,DWORD PTR [eax-0x33b684c5]
  423007:	into   
  423008:	test   BYTE PTR [edi+0x2e],dh
  42300b:	int3   
  42300c:	dec    ebp
  42300d:	xchg   DWORD PTR [esi+0x1],esi
  423010:	mov    DWORD PTR [ebp-0x56115040],ecx
  423016:	pushf  
  423017:	mov    ebp,0x5410ffbe
  42301c:	xlat   BYTE PTR ds:[ebx]
  42301d:	(bad)  
  42301e:	xchg   esi,eax
  42301f:	add    BYTE PTR [ecx],bh
  423021:	mov    fs,WORD PTR [ecx]
  423023:	gs (bad) 
  423025:	xor    dh,cl
  423027:	js     0x422fbf
  423029:	and    ecx,DWORD PTR [esp+ebp*2+0x4a42fc0d]
  423030:	inc    ebp
  423031:	sbb    dh,dh
  423033:	mov    dh,0xf1
  423035:	test   DWORD PTR [esp+ebx*1-0x49],0xfc907a74
  42303d:	or     ecx,DWORD PTR [esi-0x18]
  423040:	in     eax,0x7e
  423042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423043:	pop    esi
  423044:	imul   edi,ecx,0x9eb4433e
  42304a:	mov    ch,0x20
  42304c:	mul    BYTE PTR [ebp-0x8fe3bdb]
  423052:	mov    ecx,DWORD PTR [edx-0x67]
  423055:	shl    DWORD PTR [edi+0x4a],0x7d
  423059:	xor    ch,BYTE PTR [edx+0x4537bbec]
  42305f:	or     dh,BYTE PTR [edi-0x62b22092]
  423065:	xchg   BYTE PTR [ecx+0x1a],cl
  423068:	test   eax,0xbcb50ae8
  42306d:	cmc    
  42306e:	adc    dh,BYTE PTR [edx-0x6298673b]
  423074:	popf   
  423075:	into   
  423076:	sbb    eax,0x8c4df1f1
  42307b:	jnp    0x423050
  42307d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42307e:	and    al,0xec
  423080:	cmp    DWORD PTR [ecx-0xd62ccdb],edi
  423086:	jp     0x423038
  423088:	xchg   ebx,eax
  423089:	lods   al,BYTE PTR ds:[esi]
  42308a:	lods   al,BYTE PTR ds:[esi]
  42308b:	sbb    esp,ebx
  42308d:	imul   esp,DWORD PTR [ebx*8+0x3fe81ff5],0x1
  423095:	dec    esp
  423096:	and    eax,0x8174a923
  42309b:	stos   BYTE PTR es:[edi],al
  42309c:	mov    ebx,0x3e2e5052
  4230a1:	das    
  4230a2:	push   esi
  4230a3:	jmp    0x4230e2
  4230a5:	xchg   edi,edx
  4230a7:	out    dx,eax
  4230a8:	jno    0xce4c36fe
  4230ae:	out    0xee,eax
  4230b0:	(bad)
  4230b3:	or     ah,BYTE PTR [edi]
  4230b5:	rcr    BYTE PTR [ebp-0x37ea333b],0xc9
  4230bc:	and    dh,al
  4230be:	adc    ch,BYTE PTR [ebx]
  4230c0:	sbb    BYTE PTR [edx+0x15b38315],al
  4230c6:	pop    ecx
  4230c7:	retf   
  4230c8:	mov    dl,0xae
  4230ca:	mov    al,ds:0xd5e14abf
  4230cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230d0:	addr16 enter 0xb8e2,0xc4
  4230d5:	push   eax
  4230d6:	sbb    BYTE PTR [ebx+eiz*1+0x79],dl
  4230da:	xor    ecx,DWORD PTR [ebp+0x3d256d23]
  4230e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230e1:	mov    ecx,0xa53d2559
  4230e6:	ret    
  4230e7:	fucomip st,st(0)
  4230e9:	int3   
  4230ea:	push   ss
  4230eb:	mov    ah,BYTE PTR cs:[ecx+0x31]
  4230ef:	xchg   esi,eax
  4230f0:	xlat   BYTE PTR ds:[ebx]
  4230f1:	push   ss
  4230f2:	daa    
  4230f3:	fidiv  WORD PTR [ebx+0x3c]
  4230f6:	(bad)  
  4230f7:	xor    al,0x6d
  4230f9:	pop    ds
  4230fa:	rol    BYTE PTR [edx-0x67],0xc3
  4230fe:	pop    esp
  4230ff:	and    dl,BYTE PTR [edi+0x56]
  423102:	fdivr  QWORD PTR [ebp-0x3]
  423105:	jle    0x4230b7
  423107:	pop    eax
  423108:	(bad)  
  423109:	retf   
  42310a:	(bad)  
  42310b:	repnz inc esi
  42310d:	call   0x352:0xae4be47e
  423114:	mov    ds:0xe132f27b,al
  423119:	cmp    al,0xea
  42311b:	push   ebp
  42311c:	add    bh,ch
  42311e:	pusha  
  42311f:	add    dh,BYTE PTR [esi-0x1a912034]
  423125:	aad    0xd7
  423127:	(bad)  
  423128:	aad    0xb0
  42312a:	jmp    0x59920e1e
  42312f:	sub    DWORD PTR [eax-0x629a55fa],ecx
  423135:	add    eax,0x59d91f69
  42313a:	fadd   DWORD PTR [eax]
  42313c:	cmp    dl,BYTE PTR [ecx-0x38]
  42313f:	cmp    eax,0xbc25b42e
  423144:	addr16 pop es
  423146:	fwait
  423147:	leave  
  423148:	ret    
  423149:	pop    ss
  42314a:	jle    0x42314b
  42314c:	cmp    ebp,esi
  42314e:	sub    eax,0x4e2d09e8
  423153:	(bad)  
  423154:	cmp    cl,al
  423156:	adc    DWORD PTR [esi],ebp
  423158:	loopne 0x4230fd
  42315a:	xchg   edi,eax
  42315b:	pusha  
  42315c:	loope  0x4230f7
  42315e:	les    eax,FWORD PTR [ebp-0x5a494169]
  423164:	adc    eax,0x78e18e1b
  423169:	cli    
  42316a:	adc    al,0xce
  42316c:	(bad)  
  42316d:	les    esp,FWORD PTR [ebx+0x7db6cf48]
  423173:	not    BYTE PTR [ebp-0x66]
  423176:	iret   
  423177:	add    cl,BYTE PTR ds:0x5ce9b93a
  42317d:	sub    BYTE PTR ds:0xc4e2775d,0xba
  423184:	out    dx,eax
  423185:	leave  
  423186:	pop    eax
  423187:	fnsave [esi+0x2e]
  42318a:	out    0x8b,al
  42318c:	mov    cs,WORD PTR ds:0xa0124eb6
  423192:	adc    al,0x77
  423194:	and    cl,BYTE PTR [esi+0xbd99915]
  42319a:	dec    esi
  42319b:	arpl   WORD PTR [ebp+ebx*2+0x4be08d0f],di
  4231a2:	and    eax,0x19e80fb8
  4231a7:	dec    esp
  4231a8:	fldenv [edi+0x7]
  4231ab:	sbb    al,0x3a
  4231ad:	(bad)  
  4231ae:	cmp    ebp,DWORD PTR [edi]
  4231b0:	shr    DWORD PTR [ebp+esi*1-0x3a6eb5b7],1
  4231b7:	lds    eax,FWORD PTR cs:[ecx+0x36d9d61f]
  4231be:	jmp    0x34588c95
  4231c3:	pop    esi
  4231c4:	or     dl,BYTE PTR [edx]
  4231c6:	aaa    
  4231c7:	jmp    0x423214
  4231c9:	fs sbb edi,ecx
  4231cc:	gs inc esp
  4231ce:	pop    ecx
  4231cf:	hlt    
  4231d0:	les    ecx,FWORD PTR [ebp-0xc]
  4231d3:	jb     0x423234
  4231d5:	test   al,0xde
  4231d7:	xchg   DWORD PTR [edx+0x6aea4e64],ebp
  4231dd:	hlt    
  4231de:	lods   eax,DWORD PTR ds:[esi]
  4231df:	sub    BYTE PTR [ebp-0x438e9155],ch
  4231e5:	outs   dx,BYTE PTR ds:[esi]
  4231e6:	inc    ecx
  4231e7:	neg    DWORD PTR [eax+edi*4+0x76a034ef]
  4231ee:	pop    ds
  4231ef:	push   esp
  4231f0:	push   0xd521c8d4
  4231f5:	sbb    DWORD PTR ds:0x91a8877,esi
  4231fb:	ds inc ebx
  4231fd:	push   ebx
  4231fe:	pop    esp
  4231ff:	pop    ds
  423200:	xchg   esi,eax
  423201:	push   edi
  423202:	clc    
  423203:	clc    
  423204:	cmc    
  423205:	inc    edx
  423206:	xchg   esi,eax
  423207:	sub    DWORD PTR [ecx-0x1b3d87c7],edx
  42320d:	or     eax,0xa74448c6
  423212:	inc    ecx
  423213:	jb     0x4231e8
  423215:	imul   ecx,DWORD PTR [ebx-0x76],0x95727d51
  42321c:	add    bl,BYTE PTR [esp+edx*2+0x1d]
  423220:	repz xor bl,cl
  423223:	fnsave [ebp-0x7e]
  423226:	int    0x5f
  423228:	add    edx,DWORD PTR [eax+0x30]
  42322b:	sub    BYTE PTR [eax-0x18],dl
  42322e:	jne    0x42328f
  423230:	inc    ebp
  423231:	in     eax,dx
  423232:	pushf  
  423233:	out    0x12,al
  423235:	ins    BYTE PTR es:[edi],dx
  423236:	cld    
  423237:	xor    BYTE PTR [ecx],0xca
  42323a:	out    dx,eax
  42323b:	pop    edx
  42323c:	add    esi,ecx
  42323e:	fnstenv [ecx*1+0x1feb646a]
  423245:	icebp  
  423246:	pop    es
  423247:	adc    BYTE PTR [edx+0x53f753a1],0x96
  42324e:	add    BYTE PTR [ebx+0x33],bl
  423251:	and    eax,edx
  423253:	or     al,0x62
  423255:	mov    edi,0xefb50d2b
  42325a:	aam    0x97
  42325c:	adc    DWORD PTR [esi+0x5d3a131],eax
  423262:	fsubr  QWORD PTR [ebp+0x5f]
  423265:	cmp    eax,0xe2d99b75
  42326a:	add    ch,0x1e
  42326d:	repnz (bad) 
  423272:	xor    al,0x21
  423274:	ja     0x4232b8
  423276:	mov    ebp,0xdda00d69
  42327b:	stos   BYTE PTR es:[edi],al
  42327c:	shr    DWORD PTR [ecx-0x7a],cl
  42327f:	in     eax,dx
  423280:	data16 jge 0x4232cb
  423283:	mov    eax,ds:0x5c61a4d2
  423288:	inc    edx
  423289:	in     eax,0xb6
  42328b:	pop    edi
  42328c:	cmp    al,0x1d
  42328e:	icebp  
  42328f:	adc    eax,0x7bf75f9c
  423294:	ss (bad) 
  423296:	fdiv   DWORD PTR [esi]
  423298:	push   ss
  423299:	or     esi,DWORD PTR ds:0x8b6e069
  42329f:	cwde   
  4232a0:	clc    
  4232a1:	ror    DWORD PTR [ebp-0x426e7adc],cl
  4232a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232a8:	shl    DWORD PTR [ecx],cl
  4232aa:	push   ebp
  4232ab:	jmp    0xf508:0x15a3088c
  4232b2:	inc    eax
  4232b3:	int    0x4d
  4232b5:	mov    ds:0x6dc18521,eax
  4232ba:	mov    ah,0xa3
  4232bc:	mov    ah,0x62
  4232be:	pop    edi
  4232bf:	mov    DWORD PTR [edx+eiz*8-0x58],0x9fb88b42
  4232c7:	cmp    BYTE PTR [ecx],al
  4232c9:	adc    al,0xfa
  4232cb:	jne    0x4232a3
  4232cd:	xchg   BYTE PTR [ecx-0x6d008f02],dh
  4232d3:	mov    al,ds:0x62e8cfe9
  4232d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232d9:	add    DWORD PTR [edi-0x29],ebp
  4232dc:	and    al,0x13
  4232de:	xchg   esi,eax
  4232df:	cmc    
  4232e0:	inc    edx
  4232e1:	xchg   esi,eax
  4232e2:	rcl    dh,0xa5
  4232e5:	clc    
  4232e6:	jbe    0x423312
  4232e8:	pop    edx
  4232e9:	gs jmp 0xa54ca157
  4232ef:	mov    ebp,DWORD PTR ds:0x2e152e1b
  4232f5:	cmp    ebx,DWORD PTR [ebp-0x79]
  4232f8:	cmp    edx,DWORD PTR [ebx-0x4d]
  4232fb:	dec    edx
  4232fc:	mov    eax,ds:0x6880e34b
  423301:	arpl   bp,ax
  423303:	mov    bh,0xd0
  423305:	adc    cl,dl
  423307:	inc    edx
  423308:	iret   
  423309:	inc    edx
  42330a:	push   ds
  42330b:	je     0x4232c2
  42330d:	rcl    BYTE PTR [edx-0x5e4dbcb9],cl
  423313:	ret    
  423314:	push   edi
  423315:	jg     0x42334e
  423317:	ja     0x4232c7
  423319:	into   
  42331a:	je     0x423321
  42331c:	ds inc ebp
  42331e:	pop    ecx
  42331f:	push   ebp
  423320:	sbb    al,0xc9
  423322:	mov    esp,esp
  423324:	mov    ebx,0x59c942a8
  423329:	jae    0x423361
  42332b:	sbb    eax,0x2028e90d
  423330:	cld    
  423331:	pop    ebp
  423332:	(bad)  
  423333:	iret   
  423334:	iret   
  423335:	lods   eax,DWORD PTR ds:[esi]
  423336:	jno    0x4232d7
  423338:	mov    BYTE PTR [edx+esi*8-0x30],bl
  42333c:	cs cs out dx,eax
  42333f:	cdq    
  423340:	mov    ch,0xfa
  423342:	jbe    0x42330e
  423344:	lds    ebx,FWORD PTR [esi]
  423346:	lods   eax,DWORD PTR ds:[esi]
  423347:	or     ecx,DWORD PTR [ebp+0x1d1ffd64]
  42334d:	xchg   DWORD PTR ds:0xf4d821a1,esp
  423353:	in     al,0x62
  423355:	inc    edx
  423356:	cmp    DWORD PTR es:[ecx-0x6dcb53e7],ecx
  42335d:	inc    esp
  42335e:	jecxz  0x4232f4
  423360:	dec    ebx
  423361:	ret    
  423362:	(bad)  
  423363:	loop   0x423351
  423365:	das    
  423366:	imul   eax,ecx,0x7dbdd113
  42336c:	sbb    dl,BYTE PTR [ecx]
  42336e:	pop    esi
  42336f:	es inc edi
  423371:	mov    dh,0x71
  423373:	jnp    0x4233b9
  423375:	and    eax,0x8bae5a9d
  42337a:	inc    eax
  42337b:	push   eax
  42337c:	jle    0x4233d8
  42337e:	push   edi
  42337f:	pop    edi
  423380:	sti    
  423381:	mov    ds:0x312375e4,eax
  423386:	dec    eax
  423387:	pop    es
  423388:	jl     0x4233d8
  42338a:	in     al,dx
  42338b:	push   edx
  42338c:	mov    esi,DWORD PTR [edx]
  42338e:	mov    WORD PTR [ebx-0x54ea7ce9],gs
  423394:	(bad)  
  423395:	xor    al,0xaa
  423397:	pop    edx
  423398:	mov    cl,0xbe
  42339a:	sbb    ebx,DWORD PTR [edi-0x6]
  42339d:	aaa    
  42339e:	stos   DWORD PTR es:[edi],eax
  42339f:	fs aaa 
  4233a1:	mov    ecx,0x4658346c
  4233a6:	cmp    DWORD PTR [edx-0x6eb5359e],esi
  4233ac:	scas   eax,DWORD PTR es:[edi]
  4233ad:	jno    0x42334f
  4233af:	idiv   BYTE PTR [edi]
  4233b1:	sbb    DWORD PTR [ebp-0x23],0xde08ede9
  4233b8:	(bad)
  4233bb:	lahf   
  4233bc:	mov    bh,0x65
  4233be:	rol    DWORD PTR [eax+0x5d8fb1ce],1
  4233c4:	jo     0x423443
  4233c6:	dec    edx
  4233c7:	stos   DWORD PTR es:[edi],eax
  4233c8:	mov    WORD PTR [edi-0x3e],?
  4233cb:	and    DWORD PTR ds:0xe72b7e45,esi
  4233d1:	add    DWORD PTR [edx],ebx
  4233d3:	(bad)  
  4233d4:	jle    0x4233da
  4233d6:	mov    eax,ds:0x1372aea8
  4233db:	pop    ss
  4233dc:	push   0xffffffd1
  4233de:	aad    0x9b
  4233e0:	fsub   st(0),st
  4233e2:	sbb    BYTE PTR [edi+0x7e],bh
  4233e5:	jmp    0xfeca1703
  4233ea:	out    0x49,al
  4233ec:	pop    edx
  4233ed:	sbb    al,0x14
  4233ef:	loop   0x423458
  4233f1:	push   ecx
  4233f2:	jo     0x42345d
  4233f4:	and    DWORD PTR [eax-0x6782746f],eax
  4233fa:	ja     0x42346f
  4233fc:	out    0x81,al
  4233fe:	retf   
  4233ff:	cmp    al,0xd5
  423401:	leave  
  423402:	adc    BYTE PTR [esi],dh
  423404:	xlat   BYTE PTR ds:[ebx]
  423405:	cmp    DWORD PTR [eax-0x8d00a0e],ebx
  42340b:	xlat   BYTE PTR ds:[ebx]
  42340c:	inc    ebx
  42340d:	into   
  42340e:	(bad)  
  42340f:	mov    cl,0x99
  423411:	lds    ecx,FWORD PTR [edx]
  423413:	stos   BYTE PTR es:[edi],al
  423414:	call   0xd3e34c01
  423419:	sar    ebx,cl
  42341b:	add    eax,DWORD PTR [ecx]
  42341d:	dec    esp
  42341e:	retf   
  42341f:	lahf   
  423420:	sbb    bh,BYTE PTR ds:0x3833b40c
  423426:	pop    es
  423427:	fstp   TBYTE PTR [eax-0x2a]
  42342a:	jne    0x42349e
  42342c:	push   esp
  42342d:	or     eax,0xa724a483
  423432:	cwde   
  423433:	jecxz  0x4233ef
  423435:	add    BYTE PTR [ebp+eiz*8+0x6d],dh
  423439:	into   
  42343a:	rcl    DWORD PTR [edx+eiz*8+0x2b53f936],0xc7
  423442:	mov    al,0xa
  423444:	xchg   ecx,eax
  423445:	xchg   ebp,eax
  423446:	in     al,dx
  423447:	dec    edi
  423448:	aaa    
  423449:	icebp  
  42344a:	outs   dx,DWORD PTR ds:[esi]
  42344b:	hlt    
  42344c:	fcmovne st,st(0)
  42344e:	retf   0xf6e1
  423451:	ret    
  423452:	(bad)  
  423453:	(bad)  
  423455:	dec    eax
  423456:	mov    di,WORD PTR ds:[ebx]
  42345a:	in     al,dx
  42345b:	cmp    ebp,edi
  42345d:	int3   
  42345e:	outs   dx,DWORD PTR ds:[esi]
  42345f:	mov    edi,0xfd874d74
  423464:	xchg   esp,eax
  423465:	add    DWORD PTR [ebx-0x47],esp
  423468:	shr    DWORD PTR [ecx],cl
  42346a:	(bad)  
  42346b:	jmp    0x5ff9:0x6b78f767
  423472:	pop    es
  423473:	cmp    DWORD PTR [ecx+0x16],edi
  423476:	mov    ah,0xf8
  423478:	xchg   DWORD PTR [esi-0x3fe57245],ebx
  42347e:	in     eax,dx
  42347f:	js     0x42347f
  423481:	add    eax,DWORD PTR [esi-0x17]
  423484:	sbb    DWORD PTR [ecx-0x74],edi
  423487:	repnz push ebp
  423489:	xor    ebx,DWORD PTR [ebx-0x1a574b04]
  42348f:	xor    ecx,ebp
  423491:	je     0x4234ad
  423493:	mov    eax,0x2ef2a385
  423498:	push   cs
  423499:	jp     0x4234d8
  42349b:	pop    esp
  42349c:	in     eax,0x1f
  42349e:	pusha  
  42349f:	sub    eax,0xd7e5c80
  4234a4:	sbb    eax,0xf89adaf
  4234a9:	loope  0x423503
  4234ab:	hlt    
  4234ac:	pop    eax
  4234ad:	cmp    BYTE PTR [ecx+edx*8+0x6e],al
  4234b1:	daa    
  4234b2:	inc    ecx
  4234b3:	dec    ebp
  4234b4:	sub    DWORD PTR [eax-0x7c9326a0],ecx
  4234ba:	mov    cl,0x43
  4234bc:	cmp    BYTE PTR [edi-0x41],ah
  4234bf:	xchg   esp,eax
  4234c0:	lods   eax,DWORD PTR ds:[esi]
  4234c1:	loopne 0x4234f7
  4234c3:	div    BYTE PTR [edx+0x50993c67]
  4234c9:	mov    ah,0x11
  4234cb:	jno    0x4234f8
  4234cd:	stos   BYTE PTR es:[edi],al
  4234ce:	jns    0x4234a0
  4234d0:	(bad)  
  4234d1:	rep ins BYTE PTR es:[edi],dx
  4234d3:	jge    0x42352c
  4234d5:	pop    esi
  4234d6:	or     BYTE PTR [edx+eiz*1-0x1837a6f3],ch
  4234dd:	pop    esi
  4234de:	pushf  
  4234df:	into   
  4234e0:	cwde   
  4234e1:	(bad)  
  4234e2:	in     eax,0x85
  4234e4:	xchg   esi,eax
  4234e5:	push   ebx
  4234e6:	aam    0x58
  4234e8:	push   0x4
  4234ea:	and    al,0x92
  4234ec:	pop    es
  4234ed:	fmul   DWORD PTR [ebx]
  4234ef:	mov    dl,0x43
  4234f1:	mov    dh,0x7f
  4234f3:	sub    al,BYTE PTR [edi-0x3c]
  4234f6:	cmp    bh,BYTE PTR [edx]
  4234f8:	retf   0x6a7e
  4234fb:	pop    ds
  4234fc:	inc    eax
  4234fd:	daa    
  4234fe:	fs push eax
  423500:	dec    ebp
  423501:	jl     0x423579
  423503:	xor    al,0x2d
  423505:	test   ebp,0x5a046018
  42350b:	lods   al,BYTE PTR ds:[esi]
  42350c:	xchg   ebp,eax
  42350d:	mov    al,0x9c
  42350f:	mov    al,cs:0x39ba83ca
  423515:	lea    edi,[eax-0x61a101ae]
  42351b:	or     esp,DWORD PTR [ebx+0x21cc7caf]
  423521:	pop    ecx
  423522:	cmp    BYTE PTR [ecx-0x2ede9e],0x29
  423529:	dec    bl
  42352b:	(bad)  
  42352c:	in     eax,0x8c
  42352e:	mov    ds:0x7d70bf29,eax
  423533:	xor    eax,0xbb97965a
  423538:	cmp    DWORD PTR [edi-0x3d79a85c],ebx
  42353e:	push   ss
  42353f:	mov    esp,0xdf7f0090
  423544:	cli    
  423545:	and    al,0x76
  423547:	or     dl,BYTE PTR [eax+0x3a]
  42354a:	repz mov esi,DWORD PTR ds:0x9aa2620a
  423551:	mov    edx,0x80c0bf7c
  423556:	pop    ecx
  423557:	cs stos BYTE PTR es:[edi],al
  423559:	or     bh,dl
  42355b:	stc    
  42355c:	(bad)  
  42355d:	loopne 0x4235c6
  42355f:	push   esp
  423560:	int    0xb8
  423562:	sub    al,BYTE PTR [esi+0x44]
  423565:	xchg   edi,eax
  423566:	imul   ebp,eax,0x60
  423569:	xchg   ebx,eax
  42356a:	add    ebp,DWORD PTR [ebp-0x5af7af2d]
  423570:	(bad)  
  423571:	mov    ebx,0xa305aaa7
  423576:	addr16 aam 0x51
  423579:	ror    cl,1
  42357b:	stos   DWORD PTR es:[edi],eax
  42357c:	cmp    eax,0x9f6283c
  423581:	sbb    al,BYTE PTR [esi]
  423583:	es retf 
  423585:	outs   dx,DWORD PTR ds:[esi]
  423586:	fcomp  st(3)
  423588:	loopne 0x423536
  42358a:	and    al,0x85
  42358c:	fdivr  DWORD PTR [edx+0x54]
  42358f:	mov    dh,0xf7
  423591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423592:	sbb    eax,0x8d29960e
  423597:	popa   
  423598:	call   0xdc89:0xf8414492
  42359f:	int    0x92
  4235a1:	jbe    0x423606
  4235a3:	or     BYTE PTR [eax],dl
  4235a5:	jne    0x4235a6
  4235a7:	fcomp  QWORD PTR [edi]
  4235a9:	or     al,0xae
  4235ab:	ins    DWORD PTR es:[edi],dx
  4235ac:	popa   
  4235ad:	call   0x923a5cfd
  4235b2:	push   ecx
  4235b3:	fistp  WORD PTR [eax-0x272ce361]
  4235b9:	aad    0x1
  4235bb:	(bad)  
  4235bc:	outs   dx,BYTE PTR ds:[esi]
  4235bd:	jnp    0x4235b1
  4235bf:	pop    es
  4235c0:	xor    BYTE PTR es:[esi],dl
  4235c3:	fdiv   st(7),st
  4235c5:	aaa    
  4235c6:	cmp    ecx,DWORD PTR [edi-0x3e]
  4235c9:	dec    edi
  4235ca:	stc    
  4235cb:	call   0xd840:0x74b19578
  4235d2:	sbb    dh,ch
  4235d4:	in     al,dx
  4235d5:	or     bl,dl
  4235d7:	xchg   edi,eax
  4235d8:	lahf   
  4235d9:	js     0x4235e4
  4235db:	push   edx
  4235dc:	mov    ds:0xd2751238,al
  4235e1:	and    al,0xdb
  4235e3:	out    0xc1,al
  4235e5:	ins    DWORD PTR es:[edi],dx
  4235e6:	mov    esi,0x493409a7
  4235eb:	scas   eax,DWORD PTR es:[edi]
  4235ec:	push   edx
  4235ed:	retf   0xbd12
  4235f0:	cld    
  4235f1:	xor    BYTE PTR ds:0x7d7ce143,ah
  4235f7:	test   eax,0x1ac376b2
  4235fc:	repnz mov bl,cl
  4235ff:	popf   
  423600:	inc    eax
  423601:	jle    0x4235cf
  423603:	sbb    dl,BYTE PTR [esi+0x17]
  423606:	loope  0x423594
  423608:	out    dx,eax
  423609:	and    eax,0xe802a64a
  42360e:	mov    ch,0x12
  423610:	pop    ebp
  423611:	adc    al,0x26
  423613:	adc    dh,al
  423615:	adc    ebx,DWORD PTR [eax]
  423617:	dec    ebp
  423618:	addr16 add edi,esp
  42361b:	adc    esp,DWORD PTR [edi-0x5e]
  42361e:	je     0x4235c8
  423620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423621:	jge    0x423666
  423623:	leave  
  423624:	ret    
  423625:	add    al,0x98
  423627:	jp     0x423643
  423629:	dec    ebx
  42362a:	add    BYTE PTR [ecx+0x77],al
  42362d:	push   0x4d3ef75f
  423632:	push   ss
  423633:	lea    edx,[ebx-0x17205a4b]
  423639:	fidivr DWORD PTR [esi+0x3e09b42]
  42363f:	push   edx
  423640:	jnp    0x423699
  423642:	mul    DWORD PTR [ecx+0x3]
  423645:	(bad)  
  423646:	dec    esi
  423647:	arpl   bp,si
  423649:	push   edx
  42364a:	dec    ecx
  42364b:	dec    ecx
  42364c:	xor    eax,0x9c2334c8
  423651:	into   
  423652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423653:	cld    
  423654:	mov    bl,0x8e
  423656:	addr16 (bad) 
  423658:	je     0x4236d1
  42365a:	mov    edi,0xd22fb622
  42365f:	enter  0x5e02,0xce
  423663:	test   DWORD PTR [edi+0x4cd88c3c],eax
  423669:	into   
  42366a:	pop    ss
  42366b:	lods   eax,DWORD PTR ds:[esi]
  42366c:	adc    DWORD PTR [esi+ebx*4-0x6],edx
  423670:	out    0xf2,al
  423672:	or     eax,0x54844b50
  423677:	iret   
  423678:	xchg   ecx,eax
  423679:	mov    ebp,0x1cb0fe69
  42367e:	paddw  mm6,QWORD PTR [esi+0x1a810af6]
  423685:	fstp   QWORD PTR [esi+eiz*8+0x160714c6]
  42368c:	(bad)  
  42368d:	(bad)  
  42368f:	or     DWORD PTR cs:[ebx],edx
  423692:	rcl    BYTE PTR [edx-0x33ac530e],0xca
  423699:	sub    DWORD PTR [edx+0x382380d8],ecx
  42369f:	ins    DWORD PTR es:[edi],dx
  4236a0:	jle    0x42363e
  4236a2:	push   ecx
  4236a3:	or     DWORD PTR [ecx-0x58c57f86],eax
  4236a9:	in     eax,dx
  4236aa:	mov    ah,0xd3
  4236ac:	enter  0xa5ee,0x9e
  4236b0:	ins    BYTE PTR es:[edi],dx
  4236b1:	out    0x4b,eax
  4236b3:	retf   
  4236b4:	test   dh,ah
  4236b6:	loope  0x4236a4
  4236b8:	scas   al,BYTE PTR es:[edi]
  4236b9:	je     0x42364d
  4236bb:	pop    ss
  4236bc:	jne    0x4236f4
  4236be:	jns    0x423647
  4236c0:	ret    
  4236c1:	js     0x4236a7
  4236c3:	mov    bl,BYTE PTR [esp+edi*8]
  4236c6:	or     eax,0xcb37a86f
  4236cb:	sbb    al,0x1
  4236cd:	jle    0x4236ef
  4236cf:	sub    al,BYTE PTR [ebp+0xc6dc785]
  4236d5:	cs inc ecx
  4236d8:	scas   eax,DWORD PTR es:[edi]
  4236d9:	icebp  
  4236da:	fcmovb st,st(2)
  4236dc:	dec    ecx
  4236dd:	scas   eax,DWORD PTR es:[edi]
  4236de:	mov    ds:0x5dac27f7,al
  4236e3:	jbe    0x423704
  4236e5:	push   ss
  4236e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236e7:	sar    ebx,0x50
  4236ea:	mov    WORD PTR [edx+0xe],?
  4236ed:	leave  
  4236ee:	fucom  st(2)
  4236f0:	adc    BYTE PTR [eax+0x68],dh
  4236f3:	jae    0x4236d4
  4236f5:	sar    ah,cl
  4236f7:	jl     0x42376d
  4236f9:	jge    0x4236e6
  4236fb:	popf   
  4236fc:	and    eax,0xa6781cee
  423701:	xor    al,0xb
  423703:	and    edi,DWORD PTR [ecx-0x9]
  423706:	js     0x423703
  423708:	jmp    0x4eef51b2
  42370d:	(bad)  
  42370e:	push   edi
  42370f:	or     eax,0xa7524c8b
  423714:	cmovne ebp,DWORD PTR cs:[ecx]
  423718:	mov    bl,0x84
  42371a:	lods   al,BYTE PTR ds:[esi]
  42371b:	and    al,0x6d
  42371d:	add    ecx,DWORD PTR [edi+edi*4-0x1f28ac59]
  423724:	ss cli 
  423726:	jo     0x42377c
  423728:	inc    ecx
  423729:	jmp    0xb66285b6
  42372e:	ss sbb al,0xe5
  423731:	push   ecx
  423732:	lock xlat BYTE PTR ds:[ebx]
  423734:	xor    al,0x94
  423736:	push   ebp
  423737:	popa   
  423738:	mov    edi,DWORD PTR [esi+0x2]
  42373b:	sbb    al,0xab
  42373d:	jg     0x4236c5
  42373f:	and    dl,bl
  423741:	ror    bl,0x1e
  423744:	jmp    0x2bd9ceb2
  423749:	jnp    0x4236ee
  42374b:	push   ebx
  42374c:	cmp    DWORD PTR [edx-0x1e],edx
  42374f:	cmp    al,0xcc
  423751:	xchg   ecx,eax
  423752:	(bad)  
  423754:	cmp    al,0x4c
  423756:	in     al,0xc4
  423758:	cwde   
  423759:	xchg   ecx,eax
  42375a:	xchg   ebx,eax
  42375b:	push   esp
  42375c:	les    eax,FWORD PTR [ebx+0x69b46c7c]
  423762:	xchg   ecx,eax
  423763:	rcl    DWORD PTR [ebx],1
  423765:	mov    bh,0xc1
  423767:	cmp    esp,ebx
  423769:	in     eax,0x77
  42376b:	dec    esp
  42376c:	adc    al,0x0
  42376e:	(bad)  
  42376f:	sbb    ecx,ecx
  423771:	jo     0x4237e6
  423773:	out    dx,al
  423774:	jmp    0x518e58e4
  423779:	pop    ss
  42377a:	and    dh,bl
  42377c:	loop   0x423710
  42377e:	mov    WORD PTR [edi],ds
  423780:	adc    cl,BYTE PTR [esi]
  423782:	ret    0xe69f
  423785:	and    eax,0x15f58fb
  42378a:	ss xor al,0xec
  42378d:	mov    ebx,0xd53aafba
  423792:	ja     0x4237f7
  423794:	rol    edi,1
  423796:	mov    gs,WORD PTR [ebp-0x3538a46a]
  42379c:	sbb    cl,ah
  42379e:	(bad)  
  42379f:	aam    0x85
  4237a1:	call   0x70ba:0xe5773a77
  4237a8:	pop    ds
  4237a9:	lds    eax,FWORD PTR [eax]
  4237ab:	scas   al,BYTE PTR es:[edi]
  4237ac:	in     eax,dx
  4237ad:	(bad)
  4237b1:	(bad)  
  4237b2:	push   ebp
  4237b3:	lds    eax,FWORD PTR [ecx]
  4237b5:	jge    0x4237b8
  4237b7:	pop    esi
  4237b8:	cmp    ecx,DWORD PTR [ebx+edx*4+0x54]
  4237bc:	call   0x11698501
  4237c1:	xor    DWORD PTR [eax-0x9],esp
  4237c4:	or     DWORD PTR cs:[edi+0x463d18f0],edx
  4237cb:	fwait
  4237cc:	stos   BYTE PTR es:[edi],al
  4237cd:	sub    bl,BYTE PTR [ecx]
  4237cf:	fwait
  4237d0:	sbb    al,0xe2
  4237d2:	add    ecx,DWORD PTR [ebx+0x15bbfbbc]
  4237d8:	(bad)  
  4237d9:	loopne 0x4237bf
  4237db:	inc    edi
  4237dc:	fldcw  WORD PTR [ebx-0x79]
  4237df:	(bad)  
  4237e1:	jbe    0x423792
  4237e3:	scas   eax,DWORD PTR es:[edi]
  4237e4:	jnp    0x4237b7
  4237e6:	retf   0xa198
  4237e9:	jl     0x423799
  4237eb:	push   cs
  4237ec:	inc    ebx
  4237ed:	jns    0x4237c4
  4237ef:	cmp    DWORD PTR [eax-0x78e743c5],esi
  4237f5:	ret    
  4237f6:	into   
  4237f7:	in     al,0x23
  4237f9:	cmp    BYTE PTR [eax+ebx*1],dl
  4237fc:	add    eax,0x5170be0d
  423801:	add    bh,al
  423803:	inc    edi
  423804:	cmp    BYTE PTR [ebx],ah
  423806:	int3   
  423807:	daa    
  423808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423809:	or     ch,BYTE PTR [eax+0x29]
  42380c:	mov    WORD PTR [esi*8+0x33a19332],ss
  423813:	cmp    eax,0xfd660112
  423818:	adc    eax,0xdaf1fb12
  42381d:	mov    dh,0xf
  42381f:	ins    DWORD PTR es:[edi],dx
  423820:	lock pusha 
  423822:	mov    edi,0xe46f847c
  423827:	scas   al,BYTE PTR es:[edi]
  423828:	xchg   esp,eax
  423829:	xchg   esi,eax
  42382a:	or     DWORD PTR [edi],ecx
  42382c:	cmp    ch,dh
  42382e:	in     eax,0x47
  423830:	repnz adc al,0x46
  423833:	call   0xe378447d
  423838:	in     eax,0x80
  42383a:	mov    dl,ch
  42383c:	mov    bh,0x12
  42383e:	adc    al,0x3
  423840:	(bad)  
  423841:	ins    BYTE PTR es:[edi],dx
  423842:	add    ebx,DWORD PTR [ebp-0x2f90319c]
  423848:	pop    esi
  423849:	fs inc ecx
  42384b:	mov    ch,0x25
  42384d:	jl     0x423847
  42384f:	dec    edx
  423850:	pop    ds
  423851:	mov    bl,0x96
  423853:	mov    ah,0xae
  423855:	pusha  
  423856:	enter  0x52fa,0x95
  42385a:	push   edi
  42385b:	add    BYTE PTR [edx+0x32d33092],0xb9
  423862:	mov    BYTE PTR [eax-0x1c],bl
  423865:	stos   DWORD PTR es:[edi],eax
  423866:	push   es
  423867:	das    
  423868:	or     eax,0x1da5df41
  42386d:	daa    
  42386e:	mov    gs,WORD PTR [edi]
  423870:	test   eax,0x216a1f3a
  423875:	fwait
  423876:	(bad)  
  423877:	jne    0x42381a
  423879:	(bad)  
  42387b:	push   cs
  42387c:	neg    BYTE PTR [edi]
  42387e:	fnstenv [eax-0x2a751060]
  423884:	mov    edi,0x21f5280d
  423889:	js     0x423835
  42388b:	jp     0x42389c
  42388d:	pop    es
  42388e:	lds    eax,FWORD PTR [ebx+0xa]
  423891:	test   al,0x67
  423893:	sub    bl,BYTE PTR [edx]
  423895:	and    eax,0xd92702ee
  42389a:	imul   edx,edx,0xdd435243
  4238a0:	(bad)  
  4238a2:	cld    
  4238a3:	inc    ebx
  4238a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238a5:	dec    esi
  4238a6:	(bad)  
  4238a7:	cmp    dh,ch
  4238a9:	clc    
  4238aa:	ret    0x413e
  4238ad:	imul   edx,eax,0xa
  4238b0:	adc    BYTE PTR [edx+0xfc350b],0x2a
  4238b7:	push   cs
  4238b8:	sbb    esi,DWORD PTR [edi-0x17]
  4238bb:	xor    al,0x88
  4238bd:	cmp    ebx,DWORD PTR [ecx-0x1d]
  4238c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238c1:	idiv   BYTE PTR [edx]
  4238c3:	mov    BYTE PTR [esi],dl
  4238c5:	cwde   
  4238c6:	fidiv  DWORD PTR [ebx+0x772c0386]
  4238cc:	xlat   BYTE PTR ds:[ebx]
  4238cd:	add    al,0xf6
  4238cf:	push   cs
  4238d0:	rol    bl,1
  4238d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238d3:	mov    dl,0x2f
  4238d5:	ss sahf 
  4238d7:	inc    ecx
  4238d8:	mov    es,WORD PTR [ebx-0x3]
  4238db:	fbld   TBYTE PTR [edi+0x25]
  4238de:	mov    bl,0x9b
  4238e0:	jae    0x423921
  4238e2:	outs   dx,BYTE PTR ds:[esi]
  4238e3:	pop    esp
  4238e4:	inc    esi
  4238e5:	out    0x92,al
  4238e7:	mov    ecx,0x753cf85c
  4238ec:	jg     0x423935
  4238ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238ef:	cdq    
  4238f0:	out    0x36,al
  4238f2:	pop    ebx
  4238f3:	xor    BYTE PTR [ebx+0x52],dh
  4238f6:	or     eax,0xcc84e5dc
  4238fb:	(bad)  
  4238fc:	imul   esi,DWORD PTR [edi+0x7b],0xffffffce
  423900:	or     ah,ch
  423902:	xchg   DWORD PTR [ebx-0x336a4320],eax
  423908:	sbb    ecx,DWORD PTR [ecx]
  42390a:	je     0x42389a
  42390c:	and    BYTE PTR [ebx+0x7b0cea35],cl
  423912:	xchg   BYTE PTR [ecx],bl
  423914:	ret    
  423915:	jmp    0x52051fc0
  42391a:	push   eax
  42391b:	(bad)  
  42391c:	pop    esp
  42391d:	(bad)  
  42391e:	es or  dh,ch
  423921:	fild   QWORD PTR [ebx+eax*4+0x7a]
  423925:	jnp    0x423976
  423927:	cld    
  423928:	hlt    
  423929:	out    0x59,eax
  42392b:	fild   WORD PTR [esi+0x47112f25]
  423931:	pop    ecx
  423932:	mov    ah,0xce
  423934:	cmpps  xmm6,XMMWORD PTR [esi-0x3f2fbf7e],0xdc
  42393c:	or     esp,0x11
  42393f:	sti    
  423940:	push   0x2d
  423942:	enter  0xc040,0x7b
  423946:	or     eax,0xc3995fa9
  42394b:	xchg   DWORD PTR fs:[ecx],esp
  42394e:	aas    
  42394f:	in     eax,dx
  423950:	cwde   
  423951:	sbb    al,0x4f
  423953:	ret    
  423954:	and    ebp,DWORD PTR [ebx]
  423956:	pop    ecx
  423957:	test   BYTE PTR [eax+0x114dc6c3],0x22
  42395e:	add    BYTE PTR [ebp-0x5a344097],dl
  423964:	mov    eax,ds:0x8a8ea41c
  423969:	ret    0xfc03
  42396c:	pop    esi
  42396d:	dec    esp
  42396e:	and    eax,0xe6ed6e0a
  423973:	lds    esi,FWORD PTR [eax-0x35fdf720]
  423979:	mov    ah,0x34
  42397b:	mov    DWORD PTR [eax],eax
  42397d:	js     0x423926
  42397f:	xlat   BYTE PTR ds:[ebx]
  423980:	and    esi,eax
  423982:	les    esi,FWORD PTR [edx+0x4838d699]
  423988:	repz adc edi,edi
  42398b:	ds inc edx
  42398d:	sbb    DWORD PTR [eax],0xc357ba9d
  423993:	pop    esp
  423994:	jmp    0x85a83c71
  423999:	mov    esi,ebp
  42399b:	jns    0x423955
  42399d:	xor    DWORD PTR [edx-0x654c0363],esp
  4239a3:	sbb    DWORD PTR [ebp+0x1d],ebx
  4239a6:	adc    al,0x5f
  4239a8:	pop    ebx
  4239a9:	or     BYTE PTR [edx+0x24],ah
  4239ac:	fldcw  WORD PTR [ebx-0x38]
  4239af:	lock mov cl,0xee
  4239b2:	jle    0x4239e6
  4239b4:	clc    
  4239b5:	ds jno 0x423967
  4239b8:	stos   BYTE PTR es:[edi],al
  4239b9:	js     0x423a06
  4239bb:	aaa    
  4239bc:	mov    ebx,0x83199258
  4239c1:	mov    bh,0x21
  4239c3:	les    ebx,FWORD PTR [ebx]
  4239c5:	mov    edx,0x2d89fb18
  4239ca:	sbb    eax,0x4ec83853
  4239cf:	std    
  4239d0:	add    bh,ch
  4239d2:	jg     0x4239e9
  4239d4:	push   ss
  4239d5:	stos   DWORD PTR es:[edi],eax
  4239d6:	push   DWORD PTR [edi-0x29]
  4239d9:	mov    cl,0x45
  4239db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239dc:	mov    edi,0x157513b9
  4239e1:	in     al,dx
  4239e2:	dec    ecx
  4239e3:	add    eax,0x53925de9
  4239e8:	int    0x29
  4239ea:	call   0xc93d1b09
  4239ef:	dec    eax
  4239f0:	mov    ecx,0xa16f78ed
  4239f5:	mov    ebp,0xf8839806
  4239fa:	cmp    cl,ch
  4239fc:	fiadd  WORD PTR [edi+eax*1+0x95ae182]
  423a03:	sbb    al,0x1c
  423a05:	jne    0x4239df
  423a07:	outs   dx,BYTE PTR ds:[esi]
  423a08:	aad    0x57
  423a0a:	pusha  
  423a0b:	mov    esi,0xa9574fd4
  423a10:	xchg   esi,eax
  423a11:	adc    DWORD PTR [ebp+0x6],edx
  423a14:	pop    edi
  423a15:	inc    edi
  423a16:	(bad)
  423a1a:	mov    bh,0xeb
  423a1c:	and    BYTE PTR [ebp+0x70],dl
  423a1f:	adc    eax,0x3e4be596
  423a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a25:	test   esp,ebx
  423a27:	cmp    DWORD PTR cs:[ebx-0x7da37162],0x40
  423a2f:	xor    dl,BYTE PTR [esi+0x7459e32c]
  423a35:	jb     0x423a4f
  423a37:	cmp    DWORD PTR [edx+0x13],esi
  423a3a:	ins    DWORD PTR es:[edi],dx
  423a3b:	mov    fs,ebx
  423a3d:	or     esi,DWORD PTR [edx-0xb]
  423a40:	pop    esp
  423a41:	jnp    0x423a6d
  423a43:	ret    0xc05a
  423a46:	fidiv  DWORD PTR [eax+0x66]
  423a49:	push   0x1d
  423a4b:	(bad)  
  423a4d:	sub    DWORD PTR [eax-0x6e7e0516],edi
  423a53:	mov    DWORD PTR [esi],ecx
  423a55:	addr16 mov esi,0xa6b4f82e
  423a5b:	fwait
  423a5c:	das    
  423a5d:	test   eax,0x1ecf92d0
  423a62:	mov    esp,0xb51510aa
  423a67:	out    dx,eax
  423a68:	retf   
  423a69:	xor    dh,bl
  423a6b:	or     al,0xe4
  423a6d:	mov    ebp,0x96dbc55c
  423a72:	mov    edi,0x8ef2508e
  423a77:	jns    0x4239fb
  423a79:	push   ebx
  423a7a:	mov    esi,0xf59bf2f8
  423a7f:	ror    bl,0x2c
  423a82:	out    0x52,eax
  423a84:	adc    eax,0x8f699a64
  423a89:	push   eax
  423a8a:	jmp    FWORD PTR ds:0x61bf2e30
  423a90:	sahf   
  423a91:	dec    eax
  423a92:	or     DWORD PTR [edi-0x3],0xffffffd0
  423a96:	shl    BYTE PTR [ecx],cl
  423a98:	scas   eax,DWORD PTR es:[edi]
  423a99:	jp     0x423b01
  423a9b:	mov    dh,0xb
  423a9d:	test   eax,0x50e1f0d0
  423aa2:	xor    BYTE PTR [eax+0x49],dl
  423aa5:	xchg   DWORD PTR [ecx-0x1d],esi
  423aa8:	repnz rcl BYTE PTR [esi+ebx*1-0x340a7a67],1
  423ab0:	sbb    DWORD PTR [esi],esi
  423ab2:	(bad)  
  423ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ab4:	fidivr DWORD PTR [edx-0x810f8c3]
  423aba:	jge    0x423a5d
  423abc:	jp     0x423b21
  423abe:	mov    esi,DWORD PTR [eax]
  423ac0:	xchg   BYTE PTR [ecx+0x2c],al
  423ac3:	cmp    BYTE PTR [edx],cl
  423ac5:	es xchg ebx,eax
  423ac7:	add    BYTE PTR [ebp-0x3a125f6e],bl
  423acd:	scas   al,BYTE PTR es:[edi]
  423ace:	or     DWORD PTR [esi],0x5f9cb370
  423ad4:	add    al,0xe7
  423ad6:	call   0xbd5cd477
  423adb:	mov    eax,0xbe1de6ab
  423ae0:	jecxz  0x423b61
  423ae2:	adc    DWORD PTR [eax+0x6b8088d9],eax
  423ae8:	push   0x6ed00e19
  423aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423aee:	adc    BYTE PTR [ebx],cl
  423af0:	popf   
  423af1:	or     al,0x3a
  423af3:	ficomp WORD PTR [ebx]
  423af5:	dec    esp
  423af6:	mov    bl,BYTE PTR [edi-0x7b9b10cb]
  423afc:	cmp    BYTE PTR [edx+0x33],bh
  423aff:	scas   eax,DWORD PTR es:[edi]
  423b00:	or     BYTE PTR [ebp+0x42044079],0x4b
  423b07:	or     edi,ebx
  423b09:	mov    ch,ah
  423b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b0c:	push   edi
  423b0d:	mov    al,ds:0x10715d3b
  423b12:	mov    ?,WORD PTR [ebx-0x4a]
  423b15:	and    BYTE PTR es:[edx],ch
  423b18:	sub    BYTE PTR [ebx-0xd1aff29],bh
  423b1e:	sub    eax,0x4959a292
  423b23:	mov    ebp,0xe880d802
  423b28:	xchg   ecx,eax
  423b29:	rcr    DWORD PTR [ebx-0x66],0x53
  423b2d:	or     edi,ecx
  423b2f:	xchg   esi,eax
  423b30:	xchg   edi,eax
  423b31:	or     ah,bh
  423b33:	pop    ebx
  423b34:	sbb    esp,ebp
  423b36:	xchg   esp,eax
  423b37:	mov    ecx,0x79ebe4ae
  423b3c:	add    DWORD PTR [ecx+0x7b],esp
  423b3f:	sbb    eax,0x63fece93
  423b44:	stos   DWORD PTR es:[edi],eax
  423b45:	(bad)
  423b49:	fld    TBYTE PTR [ebp+0x70b821c7]
  423b4f:	inc    esp
  423b50:	dec    esi
  423b51:	pop    edi
  423b52:	mov    ebp,ecx
  423b54:	mov    bl,0x36
  423b56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b57:	mov    ah,0x7c
  423b59:	cmp    esi,esi
  423b5b:	cwde   
  423b5c:	retf   0x9a92
  423b5f:	lock and DWORD PTR [ebx+ebx*2],0x8f8253b3
  423b67:	mov    ah,0x1a
  423b69:	sbb    al,0xe2
  423b6b:	mov    gs,WORD PTR [ecx]
  423b6d:	ins    DWORD PTR es:[edi],dx
  423b6e:	push   esi
  423b6f:	or     edx,DWORD PTR [esi]
  423b71:	push   ss
  423b72:	pop    es
  423b73:	shr    BYTE PTR [ebx+0x13],1
  423b76:	(bad)  
  423b77:	aam    0x29
  423b79:	sub    al,0xd4
  423b7b:	push   cs
  423b7c:	jo     0x423b10
  423b7e:	loopne 0x423b0d
  423b80:	clc    
  423b81:	lahf   
  423b82:	xor    DWORD PTR [ebx],edi
  423b84:	(bad)  
  423b85:	enter  0x5d09,0xb7
  423b89:	push   esi
  423b8a:	jbe    0x423b9d
  423b8c:	pusha  
  423b8d:	pop    edx
  423b8e:	shl    BYTE PTR ds:0x708dfe3f,cl
  423b94:	test   esi,ebx
  423b96:	xchg   ebx,eax
  423b97:	stos   DWORD PTR es:[edi],eax
  423b98:	outs   dx,DWORD PTR ds:[esi]
  423b99:	int    0xba
  423b9b:	push   ebp
  423b9c:	jge    0x423bdb
  423b9e:	sbb    eax,esi
  423ba0:	mov    al,ds:0xaf1fe93f
  423ba5:	pop    ds
  423ba6:	xchg   ecx,eax
  423ba7:	ficom  WORD PTR [ebx]
  423ba9:	popf   
  423baa:	adc    edi,DWORD PTR [edi]
  423bac:	sar    BYTE PTR [esi+0x70],0xb6
  423bb0:	das    
  423bb1:	aam    0xd6
  423bb3:	call   0x41fa:0x668a344a
  423bba:	retf   0xcd61
  423bbd:	lea    edx,[esi-0x3c4d6b62]
  423bc3:	(bad)  
  423bc4:	push   ss
  423bc5:	mov    dh,0x12
  423bc7:	or     ebp,DWORD PTR [ebp+0x19]
  423bca:	cs mov al,0x57
  423bcd:	test   BYTE PTR ds:0x1cce43cc,bl
  423bd3:	add    edi,DWORD PTR [esi+0x3d]
  423bd6:	pop    ds
  423bd7:	push   ds
  423bd8:	daa    
  423bd9:	push   esi
  423bda:	jne    0x423c53
  423bdc:	mov    ah,0x62
  423bde:	ret    
  423bdf:	cmp    edx,edx
  423be1:	push   ecx
  423be2:	push   es
  423be3:	lock bound ebx,QWORD PTR ds:0x48551c25
  423bea:	pop    ecx
  423beb:	inc    esp
  423bec:	and    eax,0x8be50482
  423bf1:	lock aad 0xbe
  423bf4:	ss dec eax
  423bf6:	(bad)  
  423bf7:	es dec edi
  423bf9:	(bad)  
  423bfa:	sub    eax,0xb16d8a4a
  423bff:	fsub   st,st(4)
  423c01:	inc    edx
  423c02:	push   edx
  423c03:	es add eax,0x4b77c069
  423c09:	add    ebx,DWORD PTR [ebx]
  423c0b:	das    
  423c0c:	xor    esp,ebp
  423c0e:	add    al,BYTE PTR [eax-0x5f42bea1]
  423c14:	aam    0xf1
  423c16:	mov    esp,esi
  423c18:	lods   eax,DWORD PTR ds:[esi]
  423c19:	pop    ebx
  423c1a:	fistp  QWORD PTR [eax+edx*8-0x9]
  423c1e:	cs (bad) 
  423c21:	xor    ebx,DWORD PTR [eax+0x2b99a2ba]
  423c27:	mov    cl,0x45
  423c29:	mov    eax,0xc81ac363
  423c2e:	mov    dl,0x44
  423c30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c31:	add    al,0x44
  423c33:	xor    ebp,DWORD PTR [eax+edx*1+0x19e99ddc]
  423c3a:	inc    ebx
  423c3b:	add    al,0xd1
  423c3d:	bnd jle 0x423c79
  423c40:	inc    ebx
  423c41:	enter  0x9c82,0xfb
  423c45:	dec    ecx
  423c46:	xchg   ebp,eax
  423c47:	dec    eax
  423c48:	(bad)  
  423c49:	in     eax,dx
  423c4a:	arpl   WORD PTR [ebx],di
  423c4c:	leave  
  423c4d:	(bad)  
  423c4e:	out    0x8b,al
  423c50:	mov    esi,DWORD PTR [esi+edx*4-0x35]
  423c54:	and    BYTE PTR [esi+0x1],cl
  423c57:	mov    ah,0x8c
  423c59:	popf   
  423c5a:	pop    esp
  423c5b:	stos   BYTE PTR es:[edi],al
  423c5c:	mov    DWORD PTR [edx-0x5d],ecx
  423c5f:	fldcw  WORD PTR [edi]
  423c61:	inc    edx
  423c62:	xor    cl,BYTE PTR [edx-0x76]
  423c65:	sti    
  423c66:	push   ebp
  423c67:	mov    cl,0x62
  423c69:	mov    esp,DWORD PTR [ebp+ebx*1-0x4f]
  423c6d:	xchg   esp,eax
  423c6e:	stos   BYTE PTR es:[edi],al
  423c6f:	test   BYTE PTR [ecx+0x54336b5f],dl
  423c75:	jge    0x423ccf
  423c77:	push   cs
  423c78:	sub    BYTE PTR [eax+0x42adcfd0],al
  423c7e:	jg     0x423c81
  423c80:	sub    eax,0xa40f6447
  423c85:	daa    
  423c86:	or     ecx,DWORD PTR [ecx+0x3f35689e]
  423c8c:	add    BYTE PTR [ebx-0x1eee0ee7],al
  423c92:	inc    ecx
  423c93:	cmp    BYTE PTR [ebx],cl
  423c95:	push   ecx
  423c96:	dec    edi
  423c97:	out    0xcb,al
  423c99:	mov    DWORD PTR [eax],esi
  423c9b:	mov    bh,0x65
  423c9d:	iret   
  423c9e:	sahf   
  423c9f:	xchg   esp,eax
  423ca0:	cmp    DWORD PTR [ecx],esp
  423ca2:	jne    0x423cbc
  423ca4:	mov    esp,0x6d22e4c2
  423ca9:	sub    eax,0x33bcfc01
  423cae:	(bad)  
  423caf:	xchg   ebx,eax
  423cb0:	cmp    ebx,0x63
  423cb3:	ja     0x423ceb
  423cb5:	ror    DWORD PTR [ebp-0x2e],cl
  423cb8:	dec    esp
  423cb9:	xrelease xchg BYTE PTR [ebx-0x17],bl
  423cbd:	pop    edx
  423cbe:	mov    WORD PTR [esi+0x4299a458],es
  423cc4:	cmc    
  423cc5:	jle    0x423c84
  423cc7:	(bad)
  423cca:	stos   BYTE PTR es:[edi],al
  423ccb:	scas   al,BYTE PTR es:[edi]
  423ccc:	or     dl,0xb2
  423ccf:	cmp    edx,ecx
  423cd1:	jns    0x423d0d
  423cd3:	in     eax,0x8
  423cd5:	xchg   esi,eax
  423cd6:	in     eax,dx
  423cd7:	retf   0x6821
  423cda:	mov    bl,0xb
  423cdc:	gs cmp dl,al
  423cdf:	enter  0xb4ba,0xa9
  423ce3:	call   0x6c4240e0
  423ce8:	pop    ebx
  423ce9:	mov    al,0xad
  423ceb:	or     DWORD PTR gs:[esi-0x947b267],ecx
  423cf2:	daa    
  423cf3:	xor    al,0x8c
  423cf5:	xchg   ebp,eax
  423cf6:	and    eax,0x59072356
  423cfb:	cmp    BYTE PTR [bx+si-0x2eaa],dl
  423d00:	pop    esp
  423d01:	jo     0x423d3c
  423d03:	ret    0x3e9d
  423d06:	dec    ebx
  423d07:	cmp    dl,BYTE PTR [esi-0x2c4af324]
  423d0d:	fs pop edi
  423d0f:	pop    ebx
  423d10:	pop    ebx
  423d11:	jp     0x423d08
  423d13:	std    
  423d14:	pop    es
  423d15:	sub    eax,0xb132af24
  423d1a:	out    0x92,al
  423d1c:	shr    DWORD PTR [ebp+0x7cc21185],0x3c
  423d23:	jnp    0x423ca9
  423d25:	adc    dl,BYTE PTR [eax-0xfd75d5b]
  423d2b:	loopne 0x423cce
  423d2d:	bnd ret 0x9c42
  423d31:	jmp    0x5872ba64
  423d36:	mov    dh,0xf
  423d38:	or     DWORD PTR [esi+0x22c4419a],esp
  423d3e:	scas   eax,DWORD PTR es:[edi]
  423d3f:	(bad)  
  423d41:	fisubr DWORD PTR [ecx+0x1b8de7f6]
  423d47:	test   DWORD PTR [edi],esp
  423d49:	lock xchg BYTE PTR [edi+0xc5ad9c],al
  423d50:	in     eax,0x9d
  423d52:	outs   dx,BYTE PTR ds:[esi]
  423d53:	int    0xda
  423d55:	test   al,0xba
  423d57:	mov    al,ds:0x8a2f9f5a
  423d5c:	push   ecx
  423d5d:	xor    BYTE PTR [edx],0x36
  423d60:	adc    al,0x29
  423d62:	or     ch,ah
  423d64:	or     edx,DWORD PTR [edi+eiz*1]
  423d67:	addr16 mov dl,0x58
  423d6a:	loop   0x423da0
  423d6c:	mov    ?,edi
  423d6e:	inc    ecx
  423d6f:	xor    edi,ebx
  423d71:	jmp    DWORD PTR [ebx-0x5532f569]
  423d77:	sar    esp,1
  423d79:	push   edi
  423d7a:	(bad)  
  423d7b:	sbb    ebp,ecx
  423d7d:	xlat   BYTE PTR ds:[ebx]
  423d7e:	and    eax,0x7715e56a
  423d83:	aam    0x4
  423d85:	and    eax,0x98a40913
  423d8a:	xor    eax,0xedfbf76
  423d8f:	mov    ebx,0x9002f25b
  423d94:	push   ebx
  423d95:	jo     0x423d80
  423d97:	jne    0x423d2e
  423d99:	sti    
  423d9a:	rcr    BYTE PTR [ebp-0x29],1
  423d9d:	gs lock or edx,ebx
  423da1:	push   ds
  423da2:	stc    
  423da3:	dec    ebp
  423da4:	fld    QWORD PTR [edx-0x72]
  423da7:	push   eax
  423da8:	iret   
  423da9:	jg     0x423dca
  423dab:	lock out 0x7d,eax
  423dae:	les    ecx,FWORD PTR [esi-0x7930e923]
  423db4:	je     0x423dc9
  423db6:	aam    0x18
  423db8:	imul   ecx,DWORD PTR [ecx+0x40],0x5ca6d140
  423dbf:	dec    ecx
  423dc0:	dec    ebx
  423dc1:	or     BYTE PTR ds:0xab593ab3,dh
  423dc7:	in     eax,0xa7
  423dc9:	push   cs
  423dca:	out    0x8b,eax
  423dcc:	ficomp WORD PTR [edx-0x4fad2049]
  423dd2:	xchg   ebp,eax
  423dd3:	nop
  423dd4:	call   0xc2278815
  423dd9:	or     dh,BYTE PTR [ebp-0x5d]
  423ddc:	add    al,0x26
  423dde:	inc    ecx
  423ddf:	stos   DWORD PTR es:[edi],eax
  423de0:	sub    DWORD PTR [ecx],edi
  423de2:	jp     0x423e4a
  423de4:	sbb    DWORD PTR [ebx-0x1645a879],eax
  423dea:	push   esp
  423deb:	or     al,0x65
  423ded:	xlat   BYTE PTR ds:[ebx]
  423dee:	push   ebp
  423def:	popa   
  423df0:	sbb    BYTE PTR [esi+0x16bf2b29],0xef
  423df7:	add    BYTE PTR [eax],cl
  423df9:	(bad)  
  423dfa:	rcl    BYTE PTR [ecx],0x4d
  423dfd:	lods   eax,DWORD PTR ds:[esi]
  423dfe:	fnstsw WORD PTR [esi*2-0x1db4ec70]
  423e05:	aas    
  423e06:	shr    BYTE PTR [edx],cl
  423e08:	retf   0x2fe
  423e0b:	ror    BYTE PTR [edi+edi*4+0x2a67be3a],0x2d
  423e13:	ds dec ebp
  423e15:	xchg   DWORD PTR [ecx+esi*2],ebp
  423e18:	(bad)  [esi]
  423e1a:	gs jbe 0x423e94
  423e1d:	pop    esp
  423e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e1f:	mov    eax,cs:0x4f4c5d0
  423e25:	ficomp WORD PTR [edx]
  423e28:	or     eax,0x537b2f5c
  423e2d:	xor    al,0xf6
  423e2f:	mov    ecx,0xfd12f61d
  423e34:	pushw  es
  423e36:	cmp    al,0x99
  423e38:	mov    ch,0xba
  423e3a:	ins    BYTE PTR es:[edi],dx
  423e3b:	out    dx,eax
  423e3c:	ror    DWORD PTR [ecx],0xf1
  423e3f:	inc    esp
  423e40:	gs popf 
  423e42:	and    al,ah
  423e44:	xor    eax,0x49157612
  423e49:	mov    BYTE PTR [esp+eiz*2-0x7b],dl
  423e4d:	jo     0x423e4a
  423e4f:	xchg   ecx,eax
  423e50:	test   DWORD PTR [ebx+0x0],esi
  423e53:	retf   0x96b6
  423e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e57:	cld    
  423e58:	xchg   ebp,eax
  423e59:	das    
  423e5a:	mov    ch,0x5b
  423e5c:	rcl    BYTE PTR [ecx],cl
  423e5e:	pop    ss
  423e5f:	jns    0x423de1
  423e61:	or     dh,dh
  423e63:	jmp    0x1c4d:0xba87879d
  423e6a:	mov    dl,0xdb
  423e6c:	and    bh,dh
  423e6e:	pop    ss
  423e6f:	or     ebx,DWORD PTR [edi]
  423e71:	int3   
  423e72:	out    0x60,eax
  423e74:	mov    eax,0x55f9b5d5
  423e79:	sbb    BYTE PTR [esi+0x11fdc795],bh
  423e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e80:	pushf  
  423e81:	test   ah,cl
  423e83:	sbb    DWORD PTR ds:0xcf8dde8,ecx
  423e89:	popf   
  423e8a:	lds    eax,FWORD PTR [ebp-0x7e]
  423e8d:	fild   DWORD PTR [ebx+0x5b546790]
  423e93:	cli    
  423e94:	pusha  
  423e95:	(bad)  
  423e96:	fadd   DWORD PTR [edx]
  423e98:	out    0x17,al
  423e9a:	call   DWORD PTR [edi-0x35]
  423e9d:	add    dh,BYTE PTR [eax-0x630e2596]
  423ea3:	mov    eax,0x455d6d6c
  423ea8:	jns    0x423efa
  423eaa:	adc    al,0xe4
  423eac:	pop    ebp
  423ead:	sar    DWORD PTR [eax],1
  423eaf:	cld    
  423eb0:	xor    eax,0x314302b8
  423eb5:	add    bh,cl
  423eb7:	popa   
  423eb8:	and    al,0xa
  423eba:	xor    eax,0xc74bf1a6
  423ebf:	push   cs
  423ec0:	jp     0x423ebb
  423ec2:	out    0xbc,al
  423ec4:	pop    ds
  423ec5:	gs xor al,0xac
  423ec8:	sti    
  423ec9:	cmc    
  423eca:	mov    dl,0xef
  423ecc:	idiv   BYTE PTR [edx+0x62]
  423ecf:	mov    edx,0x1a843fdc
  423ed4:	icebp  
  423ed5:	cmp    ebx,ebx
  423ed7:	addr16 aas 
  423ed9:	repz (bad) 
  423edb:	hlt    
  423edc:	xchg   esi,eax
  423edd:	dec    esp
  423ede:	popf   
  423edf:	xor    ecx,DWORD PTR [ecx]
  423ee1:	outs   dx,DWORD PTR ds:[esi]
  423ee2:	push   es
  423ee3:	enter  0x40eb,0x8f
  423ee7:	jns    0x423f0b
  423ee9:	lods   eax,DWORD PTR ds:[esi]
  423eea:	inc    ebp
  423eeb:	mov    bl,0xe0
  423eed:	dec    eax
  423eee:	dec    esi
  423eef:	daa    
  423ef0:	add    DWORD PTR [edi],esp
  423ef2:	cmp    eax,0x589589ca
  423ef7:	pushf  
  423ef8:	enter  0xed3d,0xcc
  423efc:	sub    BYTE PTR [edx+edx*1+0x1213f490],0xa1
  423f04:	and    ch,BYTE PTR [eax-0x41e3b2cc]
  423f0a:	sbb    al,0xe0
  423f0c:	vcmpps ymm4,ymm6,YMMWORD PTR [ebx-0x592972da],0x56
  423f15:	mov    al,ds:0xaf1e9bfc
  423f1a:	sbb    ebp,DWORD PTR [ecx-0x5]
  423f1d:	fucomp st(5)
  423f1f:	aam    0x33
  423f21:	xchg   ebp,eax
  423f22:	xchg   ecx,eax
  423f23:	cmp    al,0x37
  423f25:	loope  0x423f6b
  423f27:	jno    0x423eb6
  423f29:	sub    al,0x4c
  423f2b:	push   ds
  423f2c:	jns    0x423f5e
  423f2e:	and    ah,ch
  423f30:	mov    edi,0xda2df94e
  423f35:	pop    ebp
  423f36:	shr    BYTE PTR [ecx+0x3d8491d6],cl
  423f3c:	inc    esi
  423f3d:	pop    ss
  423f3e:	aam    0x4c
  423f40:	mov    ebp,DWORD PTR [esi-0x6a8f6a58]
  423f46:	and    BYTE PTR [edi-0x3c],0xa8
  423f4a:	fstp   QWORD PTR [ecx-0x71b634a1]
  423f50:	jae    0x423f2e
  423f52:	pop    ds
  423f53:	shr    DWORD PTR [ebx-0x4d],1
  423f56:	push   edx
  423f57:	pop    ds
  423f58:	nop
  423f59:	sbb    eax,0x2e23fddd
  423f5e:	aad    0xa4
  423f60:	adc    al,0xd2
  423f62:	pop    ecx
  423f63:	cli    
  423f64:	sbb    eax,DWORD PTR [ecx]
  423f66:	inc    eax
  423f67:	push   es
  423f68:	pop    ebp
  423f69:	jg     0x423f98
  423f6b:	outs   dx,DWORD PTR ds:[esi]
  423f6c:	jnp    0x423fb0
  423f6e:	xchg   BYTE PTR [edi+0x50],dh
  423f71:	jne    0x423f20
  423f73:	popf   
  423f74:	cmp    eax,0x8765f8d8
  423f79:	repnz stos DWORD PTR es:[edi],eax
  423f7b:	pop    ebx
  423f7c:	ds push cs
  423f7e:	call   0x721f:0x81242fa0
  423f85:	dec    esi
  423f86:	inc    dl
  423f88:	shl    DWORD PTR [ecx-0x5],1
  423f8b:	setnp  BYTE PTR [ebx]
  423f8e:	mov    cl,0x2f
  423f90:	arpl   WORD PTR [edx],dx
  423f92:	fimul  WORD PTR [esi+0x4]
  423f95:	dec    edi
  423f96:	mov    bh,0x4c
  423f98:	bound  eax,QWORD PTR [edx*1-0x6cd76133]
  423f9f:	popa   
  423fa0:	or     ebx,DWORD PTR [esi+0x4c57d760]
  423fa6:	mov    bh,0xc5
  423fa8:	and    esi,DWORD PTR [eax-0x4f]
  423fab:	lods   al,BYTE PTR ds:[esi]
  423fac:	pop    ebx
  423fad:	fist   DWORD PTR [ebx]
  423faf:	and    dh,dl
  423fb1:	inc    ecx
  423fb2:	jno    0x423f81
  423fb4:	pop    ecx
  423fb5:	cld    
  423fb6:	sub    ch,BYTE PTR [ebx+eax*8+0x32]
  423fba:	fs ret 
  423fbc:	jl     0x423f73
  423fbe:	out    dx,al
  423fbf:	adc    dl,bh
  423fc1:	xor    BYTE PTR [ebx-0x33],0x9e
  423fc5:	jb     0x3a5ce2a3
  423fcb:	psubusb mm2,QWORD PTR [ecx+0x7b795136]
  423fd2:	and    ebx,DWORD PTR [ebp+0x2d]
  423fd5:	mov    bl,0x88
  423fd7:	cld    
  423fd8:	mov    cs,WORD PTR [edi]
  423fda:	mov    ch,0x40
  423fdc:	and    dh,cl
  423fde:	retf   0x14d2
  423fe1:	mov    ?,WORD PTR [edi]
  423fe3:	inc    esi
  423fe4:	popa   
  423fe5:	dec    edi
  423fe6:	cld    
  423fe7:	sub    DWORD PTR [ebx+0x53b693c8],0x88fa4b5b
  423ff1:	sbb    BYTE PTR [ecx-0x4568af06],0x94
  423ff8:	je     0x424020
  423ffa:	push   0xffffffd0
  423ffc:	mov    esp,0xe1f66ce3
  424001:	test   al,0xc4
  424003:	fmul   DWORD PTR [eax]
  424005:	mov    WORD PTR [ebx+0x61df058c],cs
  42400b:	jl     0x42406b
  42400d:	into   
  42400e:	jmp    0x4ac5:0xcd3f0f3
  424015:	div    DWORD PTR [edx+eiz*4-0xb]
  424019:	in     al,dx
  42401a:	lock xchg edx,eax
  42401c:	out    dx,eax
  42401d:	mov    ebp,0x1c615b4
  424022:	sar    DWORD PTR [edx-0x51e198fc],1
  424028:	inc    edx
  424029:	ss ret 
  42402b:	jns    0x423ff3
  42402d:	sbb    al,0xfa
  42402f:	cmp    eax,0xb3f226d8
  424034:	popa   
  424035:	jp     0x424089
  424037:	int3   
  424038:	das    
  424039:	pop    ebp
  42403a:	sub    BYTE PTR [edx-0x5a0ef435],ch
  424040:	or     bh,0x7e
  424043:	mov    eax,0xee313c40
  424048:	scas   al,BYTE PTR es:[edi]
  424049:	adc    eax,0x2e4aefe8
  42404e:	sub    BYTE PTR ds:0x3e6feb1a,dl
  424054:	mov    eax,ds:0x85c2f254
  424059:	cmp    al,0x37
  42405b:	pop    esi
  42405c:	aas    
  42405d:	sub    DWORD PTR [edx+ebp*2-0x2e],ecx
  424061:	cs mov dh,0x7e
  424064:	push   0x81cea6de
  424069:	xchg   BYTE PTR ds:0x718b10ab,bh
  42406f:	enter  0x64f0,0x33
  424073:	shl    DWORD PTR [esi+0x5a556ac2],0x84
  42407a:	retf   0x4ca0
  42407d:	(bad)  
  42407e:	jmp    0x9b82ce5a
  424083:	adc    DWORD PTR [ebx-0x7559ee91],0x739d9c1
  42408d:	xor    esp,ebp
  42408f:	xchg   ebx,eax
  424090:	aam    0x4b
  424092:	xchg   ebx,eax
  424093:	mov    ebx,0x6ef906d4
  424098:	jge    0x42410a
  42409a:	hlt    
  42409b:	pusha  
  42409c:	add    al,0x27
  42409e:	push   esp
  42409f:	pop    ebp
  4240a0:	add    DWORD PTR [esi+0x2e],eax
  4240a3:	sub    BYTE PTR [ebx+0x31],ah
  4240a6:	or     DWORD PTR [edi+edx*8+0x55],ecx
  4240aa:	(bad)  
  4240ac:	jmp    0x424090
  4240ae:	sti    
  4240af:	xchg   dh,ah
  4240b1:	mov    ah,0x50
  4240b3:	or     BYTE PTR [esi+0x78],bh
  4240b6:	ror    DWORD PTR [ebp-0x3f],0xee
  4240ba:	scas   al,BYTE PTR es:[edi]
  4240bb:	xchg   ebx,eax
  4240bc:	out    dx,eax
  4240bd:	jbe    0x4240fd
  4240bf:	repz jmp 0xad45d53c
  4240c5:	mov    al,0x4c
  4240c7:	into   
  4240c8:	or     eax,0x66430aa0
  4240cd:	pop    edi
  4240ce:	fisubr DWORD PTR [ecx*2-0x4128974b]
  4240d5:	jno    0x424072
  4240d7:	and    esp,edi
  4240d9:	cmc    
  4240da:	inc    esi
  4240db:	sbb    esp,DWORD PTR [edx]
  4240dd:	jmp    0xa355:0x8fd4cca7
  4240e4:	push   ss
  4240e5:	xor    dl,BYTE PTR [esi+0x4a]
  4240e8:	pop    ss
  4240e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240ea:	or     BYTE PTR [edx],0x9e
  4240ed:	mov    edx,0x5a35f501
  4240f2:	out    dx,al
  4240f3:	push   cs
  4240f4:	mov    BYTE PTR [ebp-0x2dffccf2],al
  4240fa:	fbstp  TBYTE PTR [ecx-0x38]
  4240fd:	loopne 0x424107
  4240ff:	imul   esi,DWORD PTR [edx+0x41bd07ed],0xffffffaf
  424106:	out    0xcd,al
  424108:	aad    0x6d
  42410a:	popa   
  42410b:	data16 add ch,0x40
  42410f:	inc    eax
  424110:	rol    ah,cl
  424112:	xchg   ecx,eax
  424113:	dec    edi
  424114:	jmp    0x2054:0x6da0254
  42411b:	mov    eax,ds:0xd824344e
  424120:	ror    BYTE PTR [eax],0x84
  424123:	sub    al,dl
  424125:	stos   DWORD PTR es:[edi],eax
  424126:	add    al,0x9a
  424128:	push   eax
  424129:	outs   dx,BYTE PTR ds:[esi]
  42412a:	or     al,0xb9
  42412c:	(bad)  
  42412d:	push   esi
  42412e:	sub    edx,ebx
  424130:	and    al,0xb2
  424132:	fistp  QWORD PTR [edi]
  424134:	lock les edi,FWORD PTR ds:0xea440411
  42413b:	mov    dl,0x2b
  42413d:	sub    esp,ebx
  42413f:	sbb    cl,dl
  424141:	pop    eax
  424142:	cwde   
  424143:	jne    0x4240d1
  424145:	mov    eax,0xf89c85a2
  42414a:	pop    ebx
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a747
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a74f
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a753
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x429fff
  4242e2:	mov    ecx,DWORD PTR ds:0x42a007
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a757
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x429feb
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	pop    esi
  424455:	sahf   
  424456:	sti    
  424457:	js     0x42445b
  424459:	rcr    BYTE PTR [ebp+0x2917b247],0x20
  424460:	mov    esi,0x1673e98
  424465:	add    BYTE PTR [eax],al
  424467:	add    BYTE PTR [esi+0x3a],al
  42446a:	pop    esp
  42446b:	push   edi
  42446c:	imul   ebp,DWORD PTR [esi+0x64],0x2073776f
  424473:	inc    esp
  424474:	imul   esi,DWORD PTR [edx+0x5c],0x656c6946
  42447b:	inc    ebp
  42447c:	js     0x4244e3
  42447e:	arpl   WORD PTR [eax],ax
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
